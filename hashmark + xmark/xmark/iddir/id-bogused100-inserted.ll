; ModuleID = '<stdin>'
source_filename = "ld-temp.o"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.infomap = type { i8*, i8* }
%struct.option = type { i8*, i32, i32*, i32 }
%struct.quoting_options = type { i32, i32, [8 x i32], i8*, i8* }
%struct.slotvec = type { i64, i8* }
%struct.passwd = type { i8*, i8*, i32, i32, i8*, i8*, i8* }
%struct.group = type { i8*, i8*, i32, i8** }
%struct.__mbstate_t = type { i32, %union.anon }
%union.anon = type { i32 }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }

@stderr = external dso_local global %struct._IO_FILE*, align 8
@.str = private unnamed_addr constant [39 x i8] c"Try '%s --help' for more information.\0A\00", align 1
@.str.1 = private unnamed_addr constant [33 x i8] c"Usage: %s [OPTION]... [USER]...\0A\00", align 1
@.str.2 = private unnamed_addr constant [105 x i8] c"Print user and group information for each specified USER,\0Aor (when USER omitted) for the current user.\0A\0A\00", align 1
@stdout = external dso_local global %struct._IO_FILE*, align 8
@.str.3 = private unnamed_addr constant [521 x i8] c"  -a             ignore, for compatibility with other versions\0A  -Z, --context  print only the security context of the process\0A  -g, --group    print only the effective group ID\0A  -G, --groups   print all group IDs\0A  -n, --name     print a name instead of a number, for -ugG\0A  -r, --real     print the real ID instead of the effective ID, with -ugG\0A  -u, --user     print only the effective user ID\0A  -z, --zero     delimit entries with NUL characters, not whitespace;\0A                   not permitted in default format\0A\00", align 1
@.str.4 = private unnamed_addr constant [45 x i8] c"      --help     display this help and exit\0A\00", align 1
@.str.5 = private unnamed_addr constant [54 x i8] c"      --version  output version information and exit\0A\00", align 1
@.str.6 = private unnamed_addr constant [71 x i8] c"\0AWithout any OPTION, print some useful set of identified information.\0A\00", align 1
@.str.7 = private unnamed_addr constant [3 x i8] c"id\00", align 1
@__const.emit_ancillary_info.infomap = private unnamed_addr constant [7 x %struct.infomap] [%struct.infomap { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.27, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.28, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.29, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.30, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.31, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.31, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.33, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.31, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.34, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.31, i32 0, i32 0) }, %struct.infomap zeroinitializer], align 16
@.str.35 = private unnamed_addr constant [23 x i8] c"\0A%s online help: <%s>\0A\00", align 1
@.str.13 = private unnamed_addr constant [14 x i8] c"GNU coreutils\00", align 1
@.str.36 = private unnamed_addr constant [40 x i8] c"https://www.gnu.org/software/coreutils/\00", align 1
@.str.37 = private unnamed_addr constant [4 x i8] c"en_\00", align 1
@.str.38 = private unnamed_addr constant [71 x i8] c"Report any translation bugs to <https://translationproject.org/team/>\0A\00", align 1
@.str.39 = private unnamed_addr constant [27 x i8] c"Full documentation <%s%s>\0A\00", align 1
@.str.40 = private unnamed_addr constant [51 x i8] c"or available locally via: info '(coreutils) %s%s'\0A\00", align 1
@.str.41 = private unnamed_addr constant [12 x i8] c" invocation\00", align 1
@.str.8 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.27 = private unnamed_addr constant [2 x i8] c"[\00", align 1
@.str.28 = private unnamed_addr constant [16 x i8] c"test invocation\00", align 1
@.str.9 = private unnamed_addr constant [10 x i8] c"coreutils\00", align 1
@.str.29 = private unnamed_addr constant [22 x i8] c"Multi-call invocation\00", align 1
@.str.30 = private unnamed_addr constant [10 x i8] c"sha224sum\00", align 1
@.str.31 = private unnamed_addr constant [15 x i8] c"sha2 utilities\00", align 1
@.str.32 = private unnamed_addr constant [10 x i8] c"sha256sum\00", align 1
@.str.33 = private unnamed_addr constant [10 x i8] c"sha384sum\00", align 1
@.str.34 = private unnamed_addr constant [10 x i8] c"sha512sum\00", align 1
@.str.10 = private unnamed_addr constant [24 x i8] c"/usr/local/share/locale\00", align 1
@.str.11 = private unnamed_addr constant [9 x i8] c"agnruzGZ\00", align 1
@longopts = internal constant [10 x %struct.option] [%struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.42, i32 0, i32 0), i32 0, i32* null, i32 90 }, %struct.option { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.43, i32 0, i32 0), i32 0, i32* null, i32 103 }, %struct.option { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.44, i32 0, i32 0), i32 0, i32* null, i32 71 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.45, i32 0, i32 0), i32 0, i32* null, i32 110 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.46, i32 0, i32 0), i32 0, i32* null, i32 114 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.47, i32 0, i32 0), i32 0, i32* null, i32 117 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.48, i32 0, i32 0), i32 0, i32* null, i32 122 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.49, i32 0, i32 0), i32 0, i32* null, i32 -130 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.50, i32 0, i32 0), i32 0, i32* null, i32 -131 }, %struct.option zeroinitializer], align 16, !dbg !0
@.str.12 = private unnamed_addr constant [55 x i8] c"--context (-Z) works only on an SELinux-enabled kernel\00", align 1
@just_context = internal global i8 0, align 1, !dbg !25
@just_group = internal global i8 0, align 1, !dbg !28
@use_name = internal global i8 0, align 1, !dbg !30
@use_real = internal global i8 0, align 1, !dbg !32
@just_user = internal global i8 0, align 1, !dbg !34
@opt_zero = internal global i8 0, align 1, !dbg !36
@just_group_list = internal global i8 0, align 1, !dbg !38
@.str.14 = private unnamed_addr constant [15 x i8] c"Arnold Robbins\00", align 1
@.str.15 = private unnamed_addr constant [16 x i8] c"David MacKenzie\00", align 1
@optind = external dso_local global i32, align 4
@.str.16 = private unnamed_addr constant [50 x i8] c"cannot print security context when user specified\00", align 1
@.str.17 = private unnamed_addr constant [44 x i8] c"cannot print \22only\22 of more than one choice\00", align 1
@.str.18 = private unnamed_addr constant [54 x i8] c"cannot print only names or real IDs in default format\00", align 1
@.str.19 = private unnamed_addr constant [46 x i8] c"option --zero not permitted in default format\00", align 1
@.str.20 = private unnamed_addr constant [16 x i8] c"POSIXLY_CORRECT\00", align 1
@context = internal global i8* null, align 8, !dbg !40
@.str.21 = private unnamed_addr constant [26 x i8] c"can't get process context\00", align 1
@multiple_users = internal global i8 0, align 1, !dbg !42
@euid = internal global i32 0, align 4, !dbg !17
@.str.22 = private unnamed_addr constant [17 x i8] c"%s: no such user\00", align 1
@ok = internal global i8 1, align 1, !dbg !44
@ruid = internal global i32 0, align 4, !dbg !10
@egid = internal global i32 0, align 4, !dbg !23
@rgid = internal global i32 0, align 4, !dbg !19
@.str.23 = private unnamed_addr constant [25 x i8] c"cannot get effective UID\00", align 1
@.str.24 = private unnamed_addr constant [20 x i8] c"cannot get real UID\00", align 1
@.str.25 = private unnamed_addr constant [25 x i8] c"cannot get effective GID\00", align 1
@.str.26 = private unnamed_addr constant [20 x i8] c"cannot get real GID\00", align 1
@.str.52 = private unnamed_addr constant [7 x i8] c"uid=%s\00", align 1
@.str.53 = private unnamed_addr constant [5 x i8] c"(%s)\00", align 1
@.str.54 = private unnamed_addr constant [8 x i8] c" gid=%s\00", align 1
@.str.55 = private unnamed_addr constant [9 x i8] c" euid=%s\00", align 1
@.str.56 = private unnamed_addr constant [9 x i8] c" egid=%s\00", align 1
@.str.57 = private unnamed_addr constant [33 x i8] c"failed to get groups for user %s\00", align 1
@.str.58 = private unnamed_addr constant [45 x i8] c"failed to get groups for the current process\00", align 1
@.str.59 = private unnamed_addr constant [9 x i8] c" groups=\00", align 1
@.str.60 = private unnamed_addr constant [12 x i8] c" context=%s\00", align 1
@gidtostr_ptr.buf = internal global [21 x i8] zeroinitializer, align 16, !dbg !56
@uidtostr_ptr.buf = internal global [21 x i8] zeroinitializer, align 16, !dbg !46
@.str.51 = private unnamed_addr constant [32 x i8] c"cannot find name for user ID %s\00", align 1
@.str.42 = private unnamed_addr constant [8 x i8] c"context\00", align 1
@.str.43 = private unnamed_addr constant [6 x i8] c"group\00", align 1
@.str.44 = private unnamed_addr constant [7 x i8] c"groups\00", align 1
@.str.45 = private unnamed_addr constant [5 x i8] c"name\00", align 1
@.str.46 = private unnamed_addr constant [5 x i8] c"real\00", align 1
@.str.47 = private unnamed_addr constant [5 x i8] c"user\00", align 1
@.str.48 = private unnamed_addr constant [5 x i8] c"zero\00", align 1
@.str.49 = private unnamed_addr constant [5 x i8] c"help\00", align 1
@.str.50 = private unnamed_addr constant [8 x i8] c"version\00", align 1
@.str.61 = private unnamed_addr constant [33 x i8] c"failed to get groups for user %s\00", align 1
@.str.1.62 = private unnamed_addr constant [45 x i8] c"failed to get groups for the current process\00", align 1
@.str.2.63 = private unnamed_addr constant [34 x i8] c"cannot find name for group ID %lu\00", align 1
@gidtostr_ptr.buf.65 = internal global [21 x i8] zeroinitializer, align 16, !dbg !78
@Version = internal global i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.68, i32 0, i32 0), align 8, !dbg !86
@.str.68 = private unnamed_addr constant [5 x i8] c"8.32\00", align 1
@ignore_EPIPE = internal global i8 0, align 1, !dbg !91
@.str.71 = private unnamed_addr constant [12 x i8] c"write error\00", align 1
@file_name = internal global i8* null, align 8, !dbg !96
@.str.1.72 = private unnamed_addr constant [7 x i8] c"%s: %s\00", align 1
@.str.2.73 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@exit_failure = internal global i32 1, align 4, !dbg !99
@.str.80 = private unnamed_addr constant [56 x i8] c"A NULL argv[0] was passed through an exec system call.\0A\00", align 1
@.str.1.81 = private unnamed_addr constant [8 x i8] c"/.libs/\00", align 1
@.str.2.82 = private unnamed_addr constant [4 x i8] c"lt-\00", align 1
@program_invocation_short_name = external dso_local global i8*, align 8
@program_name = internal global i8* null, align 8, !dbg !106
@program_invocation_name = external dso_local global i8*, align 8
@default_quoting_options = internal global %struct.quoting_options zeroinitializer, align 8, !dbg !113
@slotvec = internal global %struct.slotvec* @slotvec0, align 8, !dbg !165
@nslots = internal global i32 1, align 4, !dbg !172
@slotvec0 = internal global %struct.slotvec { i64 256, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i32 0, i32 0) }, align 8, !dbg !174
@slot0 = internal global [256 x i8] zeroinitializer, align 16, !dbg !160
@.str.10.85 = private unnamed_addr constant [2 x i8] c"\22\00", align 1
@.str.11.86 = private unnamed_addr constant [2 x i8] c"`\00", align 1
@.str.12.87 = private unnamed_addr constant [2 x i8] c"'\00", align 1
@.str.13.88 = private unnamed_addr constant [6 x i8] c"UTF-8\00", align 1
@.str.14.89 = private unnamed_addr constant [4 x i8] c"\E2\80\98\00", align 1
@.str.15.90 = private unnamed_addr constant [4 x i8] c"\E2\80\99\00", align 1
@.str.16.91 = private unnamed_addr constant [8 x i8] c"GB18030\00", align 1
@.str.17.92 = private unnamed_addr constant [4 x i8] c"\A1\07e\00", align 1
@.str.18.93 = private unnamed_addr constant [3 x i8] c"\A1\AF\00", align 1
@quote_quoting_options = internal global %struct.quoting_options { i32 8, i32 0, [8 x i32] zeroinitializer, i8* null, i8* null }, align 8, !dbg !148
@parse_with_separator.E_bad_spec = internal global i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2.105, i32 0, i32 0), align 8, !dbg !176
@.str.3.102 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@parse_with_separator.E_invalid_user = internal global i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.104, i32 0, i32 0), align 8, !dbg !189
@parse_with_separator.E_invalid_group = internal global i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.103, i32 0, i32 0), align 8, !dbg !191
@.str.1.103 = private unnamed_addr constant [14 x i8] c"invalid group\00", align 1
@.str.104 = private unnamed_addr constant [13 x i8] c"invalid user\00", align 1
@.str.2.105 = private unnamed_addr constant [13 x i8] c"invalid spec\00", align 1
@.str.106 = private unnamed_addr constant [12 x i8] c"%s (%s) %s\0A\00", align 1
@.str.1.107 = private unnamed_addr constant [7 x i8] c"%s %s\0A\00", align 1
@.str.2.108 = private unnamed_addr constant [4 x i8] c"(C)\00", align 1
@.str.3.109 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.4.110 = private unnamed_addr constant [171 x i8] c"License GPLv3+: GNU GPL version 3 or later <%s>.\0AThis is free software: you are free to change and redistribute it.\0AThere is NO WARRANTY, to the extent permitted by law.\0A\00", align 1
@.str.5.111 = private unnamed_addr constant [34 x i8] c"https://gnu.org/licenses/gpl.html\00", align 1
@.str.6.112 = private unnamed_addr constant [16 x i8] c"Written by %s.\0A\00", align 1
@.str.7.113 = private unnamed_addr constant [23 x i8] c"Written by %s and %s.\0A\00", align 1
@.str.8.114 = private unnamed_addr constant [28 x i8] c"Written by %s, %s, and %s.\0A\00", align 1
@.str.9.115 = private unnamed_addr constant [32 x i8] c"Written by %s, %s, %s,\0Aand %s.\0A\00", align 1
@.str.10.116 = private unnamed_addr constant [36 x i8] c"Written by %s, %s, %s,\0A%s, and %s.\0A\00", align 1
@.str.11.117 = private unnamed_addr constant [40 x i8] c"Written by %s, %s, %s,\0A%s, %s, and %s.\0A\00", align 1
@.str.12.118 = private unnamed_addr constant [44 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, and %s.\0A\00", align 1
@.str.13.119 = private unnamed_addr constant [48 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0Aand %s.\0A\00", align 1
@.str.14.120 = private unnamed_addr constant [52 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0A%s, and %s.\0A\00", align 1
@.str.15.121 = private unnamed_addr constant [60 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0A%s, %s, and others.\0A\00", align 1
@version_etc_copyright = internal constant [47 x i8] c"Copyright %s %d Free Software Foundation, Inc.\00", align 16, !dbg !193
@.str.1.136 = private unnamed_addr constant [17 x i8] c"memory exhausted\00", align 1
@.str.137 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.142 = private unnamed_addr constant [38 x i8] c"0 <= strtol_base && strtol_base <= 36\00", align 1
@.str.1.143 = private unnamed_addr constant [16 x i8] c"./lib/xstrtol.c\00", align 1
@__PRETTY_FUNCTION__.xstrtoul = private unnamed_addr constant [81 x i8] c"strtol_error xstrtoul(const char *, char **, int, unsigned long *, const char *)\00", align 1
@.str.152 = private unnamed_addr constant [2 x i8] c"C\00", align 1
@.str.1.153 = private unnamed_addr constant [6 x i8] c"POSIX\00", align 1
@.str.156 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.1.157 = private unnamed_addr constant [6 x i8] c"ASCII\00", align 1
@inVal0 = global i32 0
@inVal1 = global i8** null
@.compVal0 = private global [2 x i8] c"+\00"
@.compVal1 = private global [4 x i8] c"\01  \00"
@.compVal2 = private global [1 x i8] zeroinitializer
@x = common global i32 0
@y = common global i32 0
@x.1 = common global i32 0
@y.2 = common global i32 0
@x.3 = common global i32 0
@y.4 = common global i32 0
@x.5 = common global i32 0
@y.6 = common global i32 0
@x.7 = common global i32 0
@y.8 = common global i32 0
@x.9 = common global i32 0
@y.10 = common global i32 0
@x.11 = common global i32 0
@y.12 = common global i32 0
@x.13 = common global i32 0
@y.14 = common global i32 0
@x.15 = common global i32 0
@y.16 = common global i32 0
@x.17 = common global i32 0
@y.18 = common global i32 0
@x.19 = common global i32 0
@y.20 = common global i32 0
@x.21 = common global i32 0
@y.22 = common global i32 0
@x.23 = common global i32 0
@y.24 = common global i32 0
@x.25 = common global i32 0
@y.26 = common global i32 0
@x.27 = common global i32 0
@y.28 = common global i32 0
@x.29 = common global i32 0
@y.30 = common global i32 0
@x.31 = common global i32 0
@y.32 = common global i32 0
@x.33 = common global i32 0
@y.34 = common global i32 0
@x.35 = common global i32 0
@y.36 = common global i32 0
@x.37 = common global i32 0
@y.38 = common global i32 0
@x.39 = common global i32 0
@y.40 = common global i32 0
@x.41 = common global i32 0
@y.42 = common global i32 0
@x.43 = common global i32 0
@y.44 = common global i32 0
@x.45 = common global i32 0
@y.46 = common global i32 0
@x.47 = common global i32 0
@y.48 = common global i32 0
@x.49 = common global i32 0
@y.50 = common global i32 0
@x.51 = common global i32 0
@y.52 = common global i32 0
@x.53 = common global i32 0
@y.54 = common global i32 0
@x.55 = common global i32 0
@y.56 = common global i32 0
@x.57 = common global i32 0
@y.58 = common global i32 0
@x.59 = common global i32 0
@y.60 = common global i32 0
@x.61 = common global i32 0
@y.62 = common global i32 0
@x.63 = common global i32 0
@y.64 = common global i32 0
@x.65 = common global i32 0
@y.66 = common global i32 0
@x.67 = common global i32 0
@y.68 = common global i32 0
@x.69 = common global i32 0
@y.70 = common global i32 0
@x.71 = common global i32 0
@y.72 = common global i32 0
@x.73 = common global i32 0
@y.74 = common global i32 0
@x.75 = common global i32 0
@y.76 = common global i32 0
@x.77 = common global i32 0
@y.78 = common global i32 0
@x.79 = common global i32 0
@y.80 = common global i32 0
@x.81 = common global i32 0
@y.82 = common global i32 0
@x.83 = common global i32 0
@y.84 = common global i32 0
@x.85 = common global i32 0
@y.86 = common global i32 0
@x.87 = common global i32 0
@y.88 = common global i32 0
@x.89 = common global i32 0
@y.90 = common global i32 0
@x.91 = common global i32 0
@y.92 = common global i32 0
@x.93 = common global i32 0
@y.94 = common global i32 0
@x.95 = common global i32 0
@y.96 = common global i32 0
@x.97 = common global i32 0
@y.98 = common global i32 0
@x.99 = common global i32 0
@y.100 = common global i32 0
@x.101 = common global i32 0
@y.102 = common global i32 0
@x.103 = common global i32 0
@y.104 = common global i32 0
@x.105 = common global i32 0
@y.106 = common global i32 0
@x.107 = common global i32 0
@y.108 = common global i32 0
@x.109 = common global i32 0
@y.110 = common global i32 0
@x.111 = common global i32 0
@y.112 = common global i32 0
@x.113 = common global i32 0
@y.114 = common global i32 0
@x.115 = common global i32 0
@y.116 = common global i32 0

; Function Attrs: noinline noreturn nounwind optnone uwtable
define internal void @usage(i32) #0 !dbg !269 {
  %2 = load i32, i32* @x
  %3 = load i32, i32* @y
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i32, align 4
  store i32 %0, i32* %10, align 4
  call void @llvm.dbg.declare(metadata i32* %10, metadata !272, metadata !DIExpression()), !dbg !273
  %11 = load i32, i32* %10, align 4, !dbg !274
  %12 = icmp ne i32 %11, 0, !dbg !276
  %13 = load i32, i32* @x
  %14 = load i32, i32* @y
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %12, label %21, label %76, !dbg !277

21:                                               ; preds = %originalBBpart2
  %22 = load i32, i32* @x
  %23 = load i32, i32* @y
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %21, %originalBB1alteredBB
  %30 = load i32, i32* @x
  %31 = load i32, i32* @y
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %38, !dbg !278

38:                                               ; preds = %originalBBpart24
  %39 = load i32, i32* @x
  %40 = load i32, i32* @y
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %38, %originalBB6alteredBB
  %47 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !279
  %48 = call i8* @gettext(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str, i64 0, i64 0)) #10, !dbg !279
  %49 = load i8*, i8** @program_name, align 8, !dbg !279
  %50 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %47, i8* %48, i8* %49), !dbg !279
  %51 = load i32, i32* @x
  %52 = load i32, i32* @y
  %53 = sub i32 %51, 1
  %54 = mul i32 %51, %53
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %52, 10
  %58 = or i1 %56, %57
  br i1 %58, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %59, !dbg !279

59:                                               ; preds = %originalBBpart28
  %60 = load i32, i32* @x
  %61 = load i32, i32* @y
  %62 = sub i32 %60, 1
  %63 = mul i32 %60, %62
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %61, 10
  %67 = or i1 %65, %66
  br i1 %67, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %59, %originalBB10alteredBB
  %68 = load i32, i32* @x
  %69 = load i32, i32* @y
  %70 = sub i32 %68, 1
  %71 = mul i32 %68, %70
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %69, 10
  %75 = or i1 %73, %74
  br i1 %75, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %111, !dbg !279

76:                                               ; preds = %originalBBpart2
  %77 = load i32, i32* @x
  %78 = load i32, i32* @y
  %79 = sub i32 %77, 1
  %80 = mul i32 %77, %79
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %78, 10
  %84 = or i1 %82, %83
  br i1 %84, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %76, %originalBB14alteredBB
  %85 = call i8* @gettext(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1, i64 0, i64 0)) #10, !dbg !281
  %86 = load i8*, i8** @program_name, align 8, !dbg !283
  %87 = call i32 (i8*, ...) @printf(i8* %85, i8* %86), !dbg !284
  %88 = call i8* @gettext(i8* getelementptr inbounds ([105 x i8], [105 x i8]* @.str.2, i64 0, i64 0)) #10, !dbg !285
  %89 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !285
  %90 = call i32 @fputs_unlocked(i8* %88, %struct._IO_FILE* %89), !dbg !285
  %91 = call i8* @gettext(i8* getelementptr inbounds ([521 x i8], [521 x i8]* @.str.3, i64 0, i64 0)) #10, !dbg !286
  %92 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !286
  %93 = call i32 @fputs_unlocked(i8* %91, %struct._IO_FILE* %92), !dbg !286
  %94 = call i8* @gettext(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.4, i64 0, i64 0)) #10, !dbg !287
  %95 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !287
  %96 = call i32 @fputs_unlocked(i8* %94, %struct._IO_FILE* %95), !dbg !287
  %97 = call i8* @gettext(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.5, i64 0, i64 0)) #10, !dbg !288
  %98 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !288
  %99 = call i32 @fputs_unlocked(i8* %97, %struct._IO_FILE* %98), !dbg !288
  %100 = call i8* @gettext(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.6, i64 0, i64 0)) #10, !dbg !289
  %101 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !289
  %102 = call i32 @fputs_unlocked(i8* %100, %struct._IO_FILE* %101), !dbg !289
  call void @emit_ancillary_info(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0)), !dbg !290
  %103 = load i32, i32* @x
  %104 = load i32, i32* @y
  %105 = sub i32 %103, 1
  %106 = mul i32 %103, %105
  %107 = urem i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %104, 10
  %110 = or i1 %108, %109
  br i1 %110, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %111

111:                                              ; preds = %originalBBpart216, %originalBBpart212
  %112 = load i32, i32* @x
  %113 = load i32, i32* @y
  %114 = sub i32 %112, 1
  %115 = mul i32 %112, %114
  %116 = urem i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = icmp slt i32 %113, 10
  %119 = or i1 %117, %118
  br i1 %119, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %111, %originalBB18alteredBB
  %120 = load i32, i32* %10, align 4, !dbg !291
  call void @exit(i32 %120) #12, !dbg !292
  %121 = load i32, i32* @x
  %122 = load i32, i32* @y
  %123 = sub i32 %121, 1
  %124 = mul i32 %121, %123
  %125 = urem i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %122, 10
  %128 = or i1 %126, %127
  br i1 %128, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  unreachable, !dbg !292

originalBBalteredBB:                              ; preds = %originalBB, %1
  %129 = alloca i32, align 4
  store i32 %0, i32* %129, align 4
  call void @llvm.dbg.declare(metadata i32* %129, metadata !293, metadata !DIExpression()), !dbg !273
  %130 = load i32, i32* %129, align 4, !dbg !274
  %131 = icmp ne i32 %130, 0, !dbg !276
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %21
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %38
  %132 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !279
  %133 = call i8* @gettext(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str, i64 0, i64 0)) #10, !dbg !279
  %134 = load i8*, i8** @program_name, align 8, !dbg !279
  %135 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %132, i8* %133, i8* %134), !dbg !279
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %59
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %76
  %136 = call i8* @gettext(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1, i64 0, i64 0)) #10, !dbg !281
  %137 = load i8*, i8** @program_name, align 8, !dbg !283
  %138 = call i32 (i8*, ...) @printf(i8* %136, i8* %137), !dbg !284
  %139 = call i8* @gettext(i8* getelementptr inbounds ([105 x i8], [105 x i8]* @.str.2, i64 0, i64 0)) #10, !dbg !285
  %140 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !285
  %141 = call i32 @fputs_unlocked(i8* %139, %struct._IO_FILE* %140), !dbg !285
  %142 = call i8* @gettext(i8* getelementptr inbounds ([521 x i8], [521 x i8]* @.str.3, i64 0, i64 0)) #10, !dbg !286
  %143 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !286
  %144 = call i32 @fputs_unlocked(i8* %142, %struct._IO_FILE* %143), !dbg !286
  %145 = call i8* @gettext(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.4, i64 0, i64 0)) #10, !dbg !287
  %146 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !287
  %147 = call i32 @fputs_unlocked(i8* %145, %struct._IO_FILE* %146), !dbg !287
  %148 = call i8* @gettext(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.5, i64 0, i64 0)) #10, !dbg !288
  %149 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !288
  %150 = call i32 @fputs_unlocked(i8* %148, %struct._IO_FILE* %149), !dbg !288
  %151 = call i8* @gettext(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.6, i64 0, i64 0)) #10, !dbg !289
  %152 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !289
  %153 = call i32 @fputs_unlocked(i8* %151, %struct._IO_FILE* %152), !dbg !289
  call void @emit_ancillary_info(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0)), !dbg !290
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %111
  %154 = load i32, i32* %10, align 4, !dbg !291
  call void @exit(i32 %154) #12, !dbg !292
  br label %originalBB18
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind
declare dso_local i8* @gettext(i8*) #2

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) #3

declare dso_local i32 @printf(i8*, ...) #3

declare dso_local i32 @fputs_unlocked(i8*, %struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @emit_ancillary_info(i8*) #4 !dbg !341 {
  %2 = load i32, i32* @x.1
  %3 = load i32, i32* @y.2
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i8*, align 8
  %11 = alloca [7 x %struct.infomap], align 16
  %12 = alloca i8*, align 8
  %13 = alloca %struct.infomap*, align 8
  %14 = alloca i8*, align 8
  store i8* %0, i8** %10, align 8
  call void @llvm.dbg.declare(metadata i8** %10, metadata !345, metadata !DIExpression()), !dbg !346
  call void @llvm.dbg.declare(metadata [7 x %struct.infomap]* %11, metadata !347, metadata !DIExpression()), !dbg !356
  %15 = bitcast [7 x %struct.infomap]* %11 to i8*, !dbg !356
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %15, i8* align 16 bitcast ([7 x %struct.infomap]* @__const.emit_ancillary_info.infomap to i8*), i64 112, i1 false), !dbg !356
  call void @llvm.dbg.declare(metadata i8** %12, metadata !357, metadata !DIExpression()), !dbg !358
  %16 = load i8*, i8** %10, align 8, !dbg !359
  store i8* %16, i8** %12, align 8, !dbg !358
  call void @llvm.dbg.declare(metadata %struct.infomap** %13, metadata !360, metadata !DIExpression()), !dbg !362
  %17 = getelementptr inbounds [7 x %struct.infomap], [7 x %struct.infomap]* %11, i64 0, i64 0, !dbg !363
  store %struct.infomap* %17, %struct.infomap** %13, align 8, !dbg !362
  %18 = load i32, i32* @x.1
  %19 = load i32, i32* @y.2
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %26, !dbg !364

26:                                               ; preds = %originalBBpart216, %originalBBpart2
  %27 = load i32, i32* @x.1
  %28 = load i32, i32* @y.2
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %26, %originalBB1alteredBB
  %35 = load %struct.infomap*, %struct.infomap** %13, align 8, !dbg !365
  %36 = getelementptr inbounds %struct.infomap, %struct.infomap* %35, i32 0, i32 0, !dbg !366
  %37 = load i8*, i8** %36, align 8, !dbg !366
  %38 = icmp ne i8* %37, null, !dbg !365
  %39 = load i32, i32* @x.1
  %40 = load i32, i32* @y.2
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %38, label %47, label %71, !dbg !367

47:                                               ; preds = %originalBBpart24
  %48 = load i32, i32* @x.1
  %49 = load i32, i32* @y.2
  %50 = sub i32 %48, 1
  %51 = mul i32 %48, %50
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %53, %54
  br i1 %55, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %47, %originalBB6alteredBB
  %56 = load i8*, i8** %10, align 8, !dbg !368
  %57 = load %struct.infomap*, %struct.infomap** %13, align 8, !dbg !368
  %58 = getelementptr inbounds %struct.infomap, %struct.infomap* %57, i32 0, i32 0, !dbg !368
  %59 = load i8*, i8** %58, align 8, !dbg !368
  %60 = call i32 @strcmp(i8* %56, i8* %59) #13, !dbg !368
  %61 = icmp eq i32 %60, 0, !dbg !368
  %62 = xor i1 %61, true, !dbg !369
  %63 = load i32, i32* @x.1
  %64 = load i32, i32* @y.2
  %65 = sub i32 %63, 1
  %66 = mul i32 %63, %65
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %64, 10
  %70 = or i1 %68, %69
  br i1 %70, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %71

71:                                               ; preds = %originalBBpart28, %originalBBpart24
  %72 = phi i1 [ false, %originalBBpart24 ], [ %62, %originalBBpart28 ], !dbg !370
  %73 = load i32, i32* @x.1
  %74 = load i32, i32* @y.2
  %75 = sub i32 %73, 1
  %76 = mul i32 %73, %75
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %74, 10
  %80 = or i1 %78, %79
  br i1 %80, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %71, %originalBB10alteredBB
  %81 = load i32, i32* @x.1
  %82 = load i32, i32* @y.2
  %83 = sub i32 %81, 1
  %84 = mul i32 %81, %83
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %82, 10
  %88 = or i1 %86, %87
  br i1 %88, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %72, label %89, label %108, !dbg !364

89:                                               ; preds = %originalBBpart212
  %90 = load i32, i32* @x.1
  %91 = load i32, i32* @y.2
  %92 = sub i32 %90, 1
  %93 = mul i32 %90, %92
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %91, 10
  %97 = or i1 %95, %96
  br i1 %97, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %89, %originalBB14alteredBB
  %98 = load %struct.infomap*, %struct.infomap** %13, align 8, !dbg !371
  %99 = getelementptr inbounds %struct.infomap, %struct.infomap* %98, i32 1, !dbg !371
  store %struct.infomap* %99, %struct.infomap** %13, align 8, !dbg !371
  %100 = load i32, i32* @x.1
  %101 = load i32, i32* @y.2
  %102 = sub i32 %100, 1
  %103 = mul i32 %100, %102
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %101, 10
  %107 = or i1 %105, %106
  br i1 %107, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %26, !dbg !364, !llvm.loop !372

108:                                              ; preds = %originalBBpart212
  %109 = load i32, i32* @x.1
  %110 = load i32, i32* @y.2
  %111 = sub i32 %109, 1
  %112 = mul i32 %109, %111
  %113 = urem i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = icmp slt i32 %110, 10
  %116 = or i1 %114, %115
  br i1 %116, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %108, %originalBB18alteredBB
  %117 = load %struct.infomap*, %struct.infomap** %13, align 8, !dbg !373
  %118 = getelementptr inbounds %struct.infomap, %struct.infomap* %117, i32 0, i32 1, !dbg !375
  %119 = load i8*, i8** %118, align 8, !dbg !375
  %120 = icmp ne i8* %119, null, !dbg !373
  %121 = load i32, i32* @x.1
  %122 = load i32, i32* @y.2
  %123 = sub i32 %121, 1
  %124 = mul i32 %121, %123
  %125 = urem i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %122, 10
  %128 = or i1 %126, %127
  br i1 %128, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br i1 %120, label %129, label %149, !dbg !376

129:                                              ; preds = %originalBBpart220
  %130 = load i32, i32* @x.1
  %131 = load i32, i32* @y.2
  %132 = sub i32 %130, 1
  %133 = mul i32 %130, %132
  %134 = urem i32 %133, 2
  %135 = icmp eq i32 %134, 0
  %136 = icmp slt i32 %131, 10
  %137 = or i1 %135, %136
  br i1 %137, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %129, %originalBB22alteredBB
  %138 = load %struct.infomap*, %struct.infomap** %13, align 8, !dbg !377
  %139 = getelementptr inbounds %struct.infomap, %struct.infomap* %138, i32 0, i32 1, !dbg !378
  %140 = load i8*, i8** %139, align 8, !dbg !378
  store i8* %140, i8** %12, align 8, !dbg !379
  %141 = load i32, i32* @x.1
  %142 = load i32, i32* @y.2
  %143 = sub i32 %141, 1
  %144 = mul i32 %141, %143
  %145 = urem i32 %144, 2
  %146 = icmp eq i32 %145, 0
  %147 = icmp slt i32 %142, 10
  %148 = or i1 %146, %147
  br i1 %148, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br label %149, !dbg !380

149:                                              ; preds = %originalBBpart224, %originalBBpart220
  %150 = load i32, i32* @x.1
  %151 = load i32, i32* @y.2
  %152 = sub i32 %150, 1
  %153 = mul i32 %150, %152
  %154 = urem i32 %153, 2
  %155 = icmp eq i32 %154, 0
  %156 = icmp slt i32 %151, 10
  %157 = or i1 %155, %156
  br i1 %157, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %149, %originalBB26alteredBB
  %158 = call i8* @gettext(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.35, i64 0, i64 0)) #10, !dbg !381
  %159 = call i32 (i8*, ...) @printf(i8* %158, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.36, i64 0, i64 0)), !dbg !382
  call void @llvm.dbg.declare(metadata i8** %14, metadata !383, metadata !DIExpression()), !dbg !384
  %160 = call i8* @setlocale(i32 5, i8* null) #10, !dbg !385
  store i8* %160, i8** %14, align 8, !dbg !384
  %161 = load i8*, i8** %14, align 8, !dbg !386
  %162 = icmp ne i8* %161, null, !dbg !386
  %163 = load i32, i32* @x.1
  %164 = load i32, i32* @y.2
  %165 = sub i32 %163, 1
  %166 = mul i32 %163, %165
  %167 = urem i32 %166, 2
  %168 = icmp eq i32 %167, 0
  %169 = icmp slt i32 %164, 10
  %170 = or i1 %168, %169
  br i1 %170, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br i1 %162, label %171, label %211, !dbg !388

171:                                              ; preds = %originalBBpart228
  %172 = load i32, i32* @x.1
  %173 = load i32, i32* @y.2
  %174 = sub i32 %172, 1
  %175 = mul i32 %172, %174
  %176 = urem i32 %175, 2
  %177 = icmp eq i32 %176, 0
  %178 = icmp slt i32 %173, 10
  %179 = or i1 %177, %178
  br i1 %179, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %171, %originalBB30alteredBB
  %180 = load i8*, i8** %14, align 8, !dbg !389
  %181 = call i32 @strncmp(i8* %180, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.37, i64 0, i64 0), i64 3) #13, !dbg !389
  %182 = icmp ne i32 %181, 0, !dbg !389
  %183 = load i32, i32* @x.1
  %184 = load i32, i32* @y.2
  %185 = sub i32 %183, 1
  %186 = mul i32 %183, %185
  %187 = urem i32 %186, 2
  %188 = icmp eq i32 %187, 0
  %189 = icmp slt i32 %184, 10
  %190 = or i1 %188, %189
  br i1 %190, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br i1 %182, label %191, label %211, !dbg !390

191:                                              ; preds = %originalBBpart232
  %192 = load i32, i32* @x.1
  %193 = load i32, i32* @y.2
  %194 = sub i32 %192, 1
  %195 = mul i32 %192, %194
  %196 = urem i32 %195, 2
  %197 = icmp eq i32 %196, 0
  %198 = icmp slt i32 %193, 10
  %199 = or i1 %197, %198
  br i1 %199, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %191, %originalBB34alteredBB
  %200 = call i8* @gettext(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.38, i64 0, i64 0)) #10, !dbg !391
  %201 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !391
  %202 = call i32 @fputs_unlocked(i8* %200, %struct._IO_FILE* %201), !dbg !391
  %203 = load i32, i32* @x.1
  %204 = load i32, i32* @y.2
  %205 = sub i32 %203, 1
  %206 = mul i32 %203, %205
  %207 = urem i32 %206, 2
  %208 = icmp eq i32 %207, 0
  %209 = icmp slt i32 %204, 10
  %210 = or i1 %208, %209
  br i1 %210, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  br label %211, !dbg !393

211:                                              ; preds = %originalBBpart236, %originalBBpart232, %originalBBpart228
  %212 = load i32, i32* @x.1
  %213 = load i32, i32* @y.2
  %214 = sub i32 %212, 1
  %215 = mul i32 %212, %214
  %216 = urem i32 %215, 2
  %217 = icmp eq i32 %216, 0
  %218 = icmp slt i32 %213, 10
  %219 = or i1 %217, %218
  br i1 %219, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %211, %originalBB38alteredBB
  %220 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.39, i64 0, i64 0)) #10, !dbg !394
  %221 = load i8*, i8** %10, align 8, !dbg !395
  %222 = call i32 (i8*, ...) @printf(i8* %220, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.36, i64 0, i64 0), i8* %221), !dbg !396
  %223 = call i8* @gettext(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.40, i64 0, i64 0)) #10, !dbg !397
  %224 = load i8*, i8** %12, align 8, !dbg !398
  %225 = load i8*, i8** %12, align 8, !dbg !399
  %226 = load i8*, i8** %10, align 8, !dbg !400
  %227 = icmp eq i8* %225, %226, !dbg !401
  %228 = zext i1 %227 to i64, !dbg !399
  %229 = select i1 %227, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.41, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.8, i64 0, i64 0), !dbg !399
  %230 = call i32 (i8*, ...) @printf(i8* %223, i8* %224, i8* %229), !dbg !402
  %231 = load i32, i32* @x.1
  %232 = load i32, i32* @y.2
  %233 = sub i32 %231, 1
  %234 = mul i32 %231, %233
  %235 = urem i32 %234, 2
  %236 = icmp eq i32 %235, 0
  %237 = icmp slt i32 %232, 10
  %238 = or i1 %236, %237
  br i1 %238, label %originalBBpart240, label %originalBB38alteredBB

originalBBpart240:                                ; preds = %originalBB38
  ret void, !dbg !403

originalBBalteredBB:                              ; preds = %originalBB, %1
  %239 = alloca i8*, align 8
  %240 = alloca [7 x %struct.infomap], align 16
  %241 = alloca i8*, align 8
  %242 = alloca %struct.infomap*, align 8
  %243 = alloca i8*, align 8
  store i8* %0, i8** %239, align 8
  call void @llvm.dbg.declare(metadata i8** %239, metadata !404, metadata !DIExpression()), !dbg !346
  call void @llvm.dbg.declare(metadata [7 x %struct.infomap]* %240, metadata !452, metadata !DIExpression()), !dbg !356
  %244 = bitcast [7 x %struct.infomap]* %240 to i8*, !dbg !356
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %244, i8* align 16 bitcast ([7 x %struct.infomap]* @__const.emit_ancillary_info.infomap to i8*), i64 112, i1 false), !dbg !356
  call void @llvm.dbg.declare(metadata i8** %241, metadata !459, metadata !DIExpression()), !dbg !358
  %245 = load i8*, i8** %239, align 8, !dbg !359
  store i8* %245, i8** %241, align 8, !dbg !358
  call void @llvm.dbg.declare(metadata %struct.infomap** %242, metadata !460, metadata !DIExpression()), !dbg !362
  %246 = getelementptr inbounds [7 x %struct.infomap], [7 x %struct.infomap]* %240, i64 0, i64 0, !dbg !363
  store %struct.infomap* %246, %struct.infomap** %242, align 8, !dbg !362
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %26
  %247 = load %struct.infomap*, %struct.infomap** %13, align 8, !dbg !365
  %248 = getelementptr inbounds %struct.infomap, %struct.infomap* %247, i32 0, i32 0, !dbg !366
  %249 = load i8*, i8** %248, align 8, !dbg !366
  %250 = icmp ne i8* %249, null, !dbg !365
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %47
  %251 = load i8*, i8** %10, align 8, !dbg !368
  %252 = load %struct.infomap*, %struct.infomap** %13, align 8, !dbg !368
  %253 = getelementptr inbounds %struct.infomap, %struct.infomap* %252, i32 0, i32 0, !dbg !368
  %254 = load i8*, i8** %253, align 8, !dbg !368
  %255 = call i32 @strcmp(i8* %251, i8* %254) #13, !dbg !368
  %256 = icmp eq i32 %255, 0, !dbg !368
  %_ = sub i1 %256, true
  %gen = mul i1 %_, true
  %257 = xor i1 %256, true, !dbg !369
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %71
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %89
  %258 = load %struct.infomap*, %struct.infomap** %13, align 8, !dbg !371
  %259 = getelementptr inbounds %struct.infomap, %struct.infomap* %258, i32 1, !dbg !371
  store %struct.infomap* %259, %struct.infomap** %13, align 8, !dbg !371
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %108
  %260 = load %struct.infomap*, %struct.infomap** %13, align 8, !dbg !373
  %261 = getelementptr inbounds %struct.infomap, %struct.infomap* %260, i32 0, i32 1, !dbg !375
  %262 = load i8*, i8** %261, align 8, !dbg !375
  %263 = icmp ne i8* %262, null, !dbg !373
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %129
  %264 = load %struct.infomap*, %struct.infomap** %13, align 8, !dbg !377
  %265 = getelementptr inbounds %struct.infomap, %struct.infomap* %264, i32 0, i32 1, !dbg !378
  %266 = load i8*, i8** %265, align 8, !dbg !378
  store i8* %266, i8** %12, align 8, !dbg !379
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %149
  %267 = call i8* @gettext(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.35, i64 0, i64 0)) #10, !dbg !381
  %268 = call i32 (i8*, ...) @printf(i8* %267, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.36, i64 0, i64 0)), !dbg !382
  call void @llvm.dbg.declare(metadata !4, metadata !462, metadata !DIExpression()), !dbg !384
  %269 = call i8* @setlocale(i32 5, i8* null) #10, !dbg !385
  store i8* %269, i8** %14, align 8, !dbg !384
  %270 = load i8*, i8** %14, align 8, !dbg !386
  %271 = icmp ne i8* %270, null, !dbg !386
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %171
  %272 = load i8*, i8** %14, align 8, !dbg !389
  %273 = call i32 @strncmp(i8* %272, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.37, i64 0, i64 0), i64 3) #13, !dbg !389
  %274 = icmp ne i32 %273, 0, !dbg !389
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %191
  %275 = call i8* @gettext(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.38, i64 0, i64 0)) #10, !dbg !391
  %276 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !391
  %277 = call i32 @fputs_unlocked(i8* %275, %struct._IO_FILE* %276), !dbg !391
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %211
  %278 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.39, i64 0, i64 0)) #10, !dbg !394
  %279 = load i8*, i8** %10, align 8, !dbg !395
  %280 = call i32 (i8*, ...) @printf(i8* %278, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.36, i64 0, i64 0), i8* %279), !dbg !396
  %281 = call i8* @gettext(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.40, i64 0, i64 0)) #10, !dbg !397
  %282 = load i8*, i8** %12, align 8, !dbg !398
  %283 = load i8*, i8** %12, align 8, !dbg !399
  %284 = load i8*, i8** %10, align 8, !dbg !400
  %285 = icmp eq i8* %283, %284, !dbg !401
  %286 = zext i1 %285 to i64, !dbg !399
  %287 = select i1 %285, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.41, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.8, i64 0, i64 0), !dbg !399
  %288 = call i32 (i8*, ...) @printf(i8* %281, i8* %282, i8* %287), !dbg !402
  br label %originalBB38
}

; Function Attrs: noreturn nounwind
declare dso_local void @exit(i32) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #6

; Function Attrs: nounwind readonly
declare dso_local i32 @strcmp(i8*, i8*) #7

; Function Attrs: nounwind
declare dso_local i8* @setlocale(i32, i8*) #2

; Function Attrs: nounwind readonly
declare dso_local i32 @strncmp(i8*, i8*, i64) #7

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32, i8**) #4 !dbg !510 {
  %3 = load i32, i32* @x.3
  %4 = load i32, i32* @y.4
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  store i8** %1, i8*** @inVal1
  store i32 %0, i32* @inVal0
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i8**, align 8
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i8, align 1
  %17 = alloca i8*, align 8
  %18 = alloca i64, align 8
  %19 = alloca i8, align 1
  %20 = alloca %struct.passwd*, align 8
  %21 = alloca i8*, align 8
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  store i32 0, i32* %11, align 4
  store i32 %0, i32* %12, align 4
  call void @llvm.dbg.declare(metadata i32* %12, metadata !513, metadata !DIExpression()), !dbg !514
  store i8** %1, i8*** %13, align 8
  call void @llvm.dbg.declare(metadata i8*** %13, metadata !515, metadata !DIExpression()), !dbg !516
  call void @llvm.dbg.declare(metadata i32* %14, metadata !517, metadata !DIExpression()), !dbg !518
  call void @llvm.dbg.declare(metadata i32* %15, metadata !519, metadata !DIExpression()), !dbg !520
  store i32 0, i32* %15, align 4, !dbg !520
  call void @llvm.dbg.declare(metadata i8* %16, metadata !521, metadata !DIExpression()), !dbg !522
  %24 = call zeroext i1 @is_smack_enabled(), !dbg !523
  %25 = zext i1 %24 to i8, !dbg !522
  store i8 %25, i8* %16, align 1, !dbg !522
  call void @llvm.dbg.declare(metadata i8** %17, metadata !524, metadata !DIExpression()), !dbg !525
  store i8* null, i8** %17, align 8, !dbg !525
  %26 = load i8**, i8*** %13, align 8, !dbg !526
  %27 = getelementptr inbounds i8*, i8** %26, i64 0, !dbg !526
  %28 = load i8*, i8** %27, align 8, !dbg !526
  call void @set_program_name(i8* %28), !dbg !527
  %29 = call i8* @setlocale(i32 6, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.8, i64 0, i64 0)) #10, !dbg !528
  %30 = call i8* @bindtextdomain(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.10, i64 0, i64 0)) #10, !dbg !529
  %31 = call i8* @textdomain(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9, i64 0, i64 0)) #10, !dbg !530
  %32 = call i32 @atexit(void ()* @close_stdout) #10, !dbg !531
  %33 = load i32, i32* @x.3
  %34 = load i32, i32* @y.4
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %41, !dbg !532

41:                                               ; preds = %originalBBpart264, %originalBBpart2
  %42 = load i32, i32* @x.3
  %43 = load i32, i32* @y.4
  %44 = sub i32 %42, 1
  %45 = mul i32 %42, %44
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %47, %48
  br i1 %49, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %41, %originalBB1alteredBB
  %50 = load i32, i32* %12, align 4, !dbg !533
  %51 = load i8**, i8*** %13, align 8, !dbg !534
  %52 = call i32 @getopt_long(i32 %50, i8** %51, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.11, i64 0, i64 0), %struct.option* getelementptr inbounds ([10 x %struct.option], [10 x %struct.option]* @longopts, i64 0, i64 0), i32* null) #10, !dbg !535
  store i32 %52, i32* %14, align 4, !dbg !536
  %53 = icmp ne i32 %52, -1, !dbg !537
  %54 = load i32, i32* @x.3
  %55 = load i32, i32* @y.4
  %56 = sub i32 %54, 1
  %57 = mul i32 %54, %56
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %55, 10
  %61 = or i1 %59, %60
  br i1 %61, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %53, label %62, label %323, !dbg !532

62:                                               ; preds = %originalBBpart24
  %63 = load i32, i32* @x.3
  %64 = load i32, i32* @y.4
  %65 = sub i32 %63, 1
  %66 = mul i32 %63, %65
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %64, 10
  %70 = or i1 %68, %69
  br i1 %70, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %62, %originalBB6alteredBB
  %71 = load i32, i32* %14, align 4, !dbg !538
  %72 = load i32, i32* @x.3
  %73 = load i32, i32* @y.4
  %74 = sub i32 %72, 1
  %75 = mul i32 %72, %74
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %73, 10
  %79 = or i1 %77, %78
  br i1 %79, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  switch i32 %71, label %289 [
    i32 97, label %80
    i32 90, label %97
    i32 103, label %151
    i32 110, label %168
    i32 114, label %185
    i32 117, label %202
    i32 122, label %219
    i32 71, label %236
    i32 -130, label %253
    i32 -131, label %270
  ], !dbg !540

80:                                               ; preds = %originalBBpart28
  %81 = load i32, i32* @x.3
  %82 = load i32, i32* @y.4
  %83 = sub i32 %81, 1
  %84 = mul i32 %81, %83
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %82, 10
  %88 = or i1 %86, %87
  br i1 %88, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %80, %originalBB10alteredBB
  %89 = load i32, i32* @x.3
  %90 = load i32, i32* @y.4
  %91 = sub i32 %89, 1
  %92 = mul i32 %89, %91
  %93 = urem i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %90, 10
  %96 = or i1 %94, %95
  br i1 %96, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %306, !dbg !541

97:                                               ; preds = %originalBBpart28
  %98 = load i32, i32* @x.3
  %99 = load i32, i32* @y.4
  %100 = sub i32 %98, 1
  %101 = mul i32 %98, %100
  %102 = urem i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = icmp slt i32 %99, 10
  %105 = or i1 %103, %104
  br i1 %105, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %97, %originalBB14alteredBB
  %106 = load i32, i32* %15, align 4, !dbg !543
  %107 = icmp ne i32 %106, 0, !dbg !543
  %108 = load i32, i32* @x.3
  %109 = load i32, i32* @y.4
  %110 = sub i32 %108, 1
  %111 = mul i32 %108, %110
  %112 = urem i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %109, 10
  %115 = or i1 %113, %114
  br i1 %115, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %107, label %134, label %116, !dbg !545

116:                                              ; preds = %originalBBpart216
  %117 = load i32, i32* @x.3
  %118 = load i32, i32* @y.4
  %119 = sub i32 %117, 1
  %120 = mul i32 %117, %119
  %121 = urem i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = icmp slt i32 %118, 10
  %124 = or i1 %122, %123
  br i1 %124, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %116, %originalBB18alteredBB
  %125 = call i8* @gettext(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.12, i64 0, i64 0)) #10, !dbg !546
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %125), !dbg !546
  %126 = load i32, i32* @x.3
  %127 = load i32, i32* @y.4
  %128 = sub i32 %126, 1
  %129 = mul i32 %126, %128
  %130 = urem i32 %129, 2
  %131 = icmp eq i32 %130, 0
  %132 = icmp slt i32 %127, 10
  %133 = or i1 %131, %132
  br i1 %133, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  unreachable, !dbg !546

134:                                              ; preds = %originalBBpart216
  %135 = load i32, i32* @x.3
  %136 = load i32, i32* @y.4
  %137 = sub i32 %135, 1
  %138 = mul i32 %135, %137
  %139 = urem i32 %138, 2
  %140 = icmp eq i32 %139, 0
  %141 = icmp slt i32 %136, 10
  %142 = or i1 %140, %141
  br i1 %142, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %134, %originalBB22alteredBB
  store i8 1, i8* @just_context, align 1, !dbg !547
  %143 = load i32, i32* @x.3
  %144 = load i32, i32* @y.4
  %145 = sub i32 %143, 1
  %146 = mul i32 %143, %145
  %147 = urem i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = icmp slt i32 %144, 10
  %150 = or i1 %148, %149
  br i1 %150, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br label %306, !dbg !548

151:                                              ; preds = %originalBBpart28
  %152 = load i32, i32* @x.3
  %153 = load i32, i32* @y.4
  %154 = sub i32 %152, 1
  %155 = mul i32 %152, %154
  %156 = urem i32 %155, 2
  %157 = icmp eq i32 %156, 0
  %158 = icmp slt i32 %153, 10
  %159 = or i1 %157, %158
  br i1 %159, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %151, %originalBB26alteredBB
  store i8 1, i8* @just_group, align 1, !dbg !549
  %160 = load i32, i32* @x.3
  %161 = load i32, i32* @y.4
  %162 = sub i32 %160, 1
  %163 = mul i32 %160, %162
  %164 = urem i32 %163, 2
  %165 = icmp eq i32 %164, 0
  %166 = icmp slt i32 %161, 10
  %167 = or i1 %165, %166
  br i1 %167, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br label %306, !dbg !550

168:                                              ; preds = %originalBBpart28
  %169 = load i32, i32* @x.3
  %170 = load i32, i32* @y.4
  %171 = sub i32 %169, 1
  %172 = mul i32 %169, %171
  %173 = urem i32 %172, 2
  %174 = icmp eq i32 %173, 0
  %175 = icmp slt i32 %170, 10
  %176 = or i1 %174, %175
  br i1 %176, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %168, %originalBB30alteredBB
  store i8 1, i8* @use_name, align 1, !dbg !551
  %177 = load i32, i32* @x.3
  %178 = load i32, i32* @y.4
  %179 = sub i32 %177, 1
  %180 = mul i32 %177, %179
  %181 = urem i32 %180, 2
  %182 = icmp eq i32 %181, 0
  %183 = icmp slt i32 %178, 10
  %184 = or i1 %182, %183
  br i1 %184, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br label %306, !dbg !552

185:                                              ; preds = %originalBBpart28
  %186 = load i32, i32* @x.3
  %187 = load i32, i32* @y.4
  %188 = sub i32 %186, 1
  %189 = mul i32 %186, %188
  %190 = urem i32 %189, 2
  %191 = icmp eq i32 %190, 0
  %192 = icmp slt i32 %187, 10
  %193 = or i1 %191, %192
  br i1 %193, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %185, %originalBB34alteredBB
  store i8 1, i8* @use_real, align 1, !dbg !553
  %194 = load i32, i32* @x.3
  %195 = load i32, i32* @y.4
  %196 = sub i32 %194, 1
  %197 = mul i32 %194, %196
  %198 = urem i32 %197, 2
  %199 = icmp eq i32 %198, 0
  %200 = icmp slt i32 %195, 10
  %201 = or i1 %199, %200
  br i1 %201, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  br label %306, !dbg !554

202:                                              ; preds = %originalBBpart28
  %203 = load i32, i32* @x.3
  %204 = load i32, i32* @y.4
  %205 = sub i32 %203, 1
  %206 = mul i32 %203, %205
  %207 = urem i32 %206, 2
  %208 = icmp eq i32 %207, 0
  %209 = icmp slt i32 %204, 10
  %210 = or i1 %208, %209
  br i1 %210, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %202, %originalBB38alteredBB
  store i8 1, i8* @just_user, align 1, !dbg !555
  %211 = load i32, i32* @x.3
  %212 = load i32, i32* @y.4
  %213 = sub i32 %211, 1
  %214 = mul i32 %211, %213
  %215 = urem i32 %214, 2
  %216 = icmp eq i32 %215, 0
  %217 = icmp slt i32 %212, 10
  %218 = or i1 %216, %217
  br i1 %218, label %originalBBpart240, label %originalBB38alteredBB

originalBBpart240:                                ; preds = %originalBB38
  br label %306, !dbg !556

219:                                              ; preds = %originalBBpart28
  %220 = load i32, i32* @x.3
  %221 = load i32, i32* @y.4
  %222 = sub i32 %220, 1
  %223 = mul i32 %220, %222
  %224 = urem i32 %223, 2
  %225 = icmp eq i32 %224, 0
  %226 = icmp slt i32 %221, 10
  %227 = or i1 %225, %226
  br i1 %227, label %originalBB42, label %originalBB42alteredBB

originalBB42:                                     ; preds = %219, %originalBB42alteredBB
  store i8 1, i8* @opt_zero, align 1, !dbg !557
  %228 = load i32, i32* @x.3
  %229 = load i32, i32* @y.4
  %230 = sub i32 %228, 1
  %231 = mul i32 %228, %230
  %232 = urem i32 %231, 2
  %233 = icmp eq i32 %232, 0
  %234 = icmp slt i32 %229, 10
  %235 = or i1 %233, %234
  br i1 %235, label %originalBBpart244, label %originalBB42alteredBB

originalBBpart244:                                ; preds = %originalBB42
  br label %306, !dbg !558

236:                                              ; preds = %originalBBpart28
  %237 = load i32, i32* @x.3
  %238 = load i32, i32* @y.4
  %239 = sub i32 %237, 1
  %240 = mul i32 %237, %239
  %241 = urem i32 %240, 2
  %242 = icmp eq i32 %241, 0
  %243 = icmp slt i32 %238, 10
  %244 = or i1 %242, %243
  br i1 %244, label %originalBB46, label %originalBB46alteredBB

originalBB46:                                     ; preds = %236, %originalBB46alteredBB
  store i8 1, i8* @just_group_list, align 1, !dbg !559
  %245 = load i32, i32* @x.3
  %246 = load i32, i32* @y.4
  %247 = sub i32 %245, 1
  %248 = mul i32 %245, %247
  %249 = urem i32 %248, 2
  %250 = icmp eq i32 %249, 0
  %251 = icmp slt i32 %246, 10
  %252 = or i1 %250, %251
  br i1 %252, label %originalBBpart248, label %originalBB46alteredBB

originalBBpart248:                                ; preds = %originalBB46
  br label %306, !dbg !560

253:                                              ; preds = %originalBBpart28
  %254 = load i32, i32* @x.3
  %255 = load i32, i32* @y.4
  %256 = sub i32 %254, 1
  %257 = mul i32 %254, %256
  %258 = urem i32 %257, 2
  %259 = icmp eq i32 %258, 0
  %260 = icmp slt i32 %255, 10
  %261 = or i1 %259, %260
  br i1 %261, label %originalBB50, label %originalBB50alteredBB

originalBB50:                                     ; preds = %253, %originalBB50alteredBB
  call void @usage(i32 0) #14, !dbg !561
  %262 = load i32, i32* @x.3
  %263 = load i32, i32* @y.4
  %264 = sub i32 %262, 1
  %265 = mul i32 %262, %264
  %266 = urem i32 %265, 2
  %267 = icmp eq i32 %266, 0
  %268 = icmp slt i32 %263, 10
  %269 = or i1 %267, %268
  br i1 %269, label %originalBBpart252, label %originalBB50alteredBB

originalBBpart252:                                ; preds = %originalBB50
  unreachable, !dbg !561

270:                                              ; preds = %originalBBpart28
  %271 = load i32, i32* @x.3
  %272 = load i32, i32* @y.4
  %273 = sub i32 %271, 1
  %274 = mul i32 %271, %273
  %275 = urem i32 %274, 2
  %276 = icmp eq i32 %275, 0
  %277 = icmp slt i32 %272, 10
  %278 = or i1 %276, %277
  br i1 %278, label %originalBB54, label %originalBB54alteredBB

originalBB54:                                     ; preds = %270, %originalBB54alteredBB
  %279 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !562
  %280 = load i8*, i8** @Version, align 8, !dbg !562
  call void (%struct._IO_FILE*, i8*, i8*, i8*, ...) @version_etc(%struct._IO_FILE* %279, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.13, i64 0, i64 0), i8* %280, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.15, i64 0, i64 0), i8* null), !dbg !562
  call void @exit(i32 0) #12, !dbg !562
  %281 = load i32, i32* @x.3
  %282 = load i32, i32* @y.4
  %283 = sub i32 %281, 1
  %284 = mul i32 %281, %283
  %285 = urem i32 %284, 2
  %286 = icmp eq i32 %285, 0
  %287 = icmp slt i32 %282, 10
  %288 = or i1 %286, %287
  br i1 %288, label %originalBBpart256, label %originalBB54alteredBB

originalBBpart256:                                ; preds = %originalBB54
  unreachable, !dbg !562

289:                                              ; preds = %originalBBpart28
  %290 = load i32, i32* @x.3
  %291 = load i32, i32* @y.4
  %292 = sub i32 %290, 1
  %293 = mul i32 %290, %292
  %294 = urem i32 %293, 2
  %295 = icmp eq i32 %294, 0
  %296 = icmp slt i32 %291, 10
  %297 = or i1 %295, %296
  br i1 %297, label %originalBB58, label %originalBB58alteredBB

originalBB58:                                     ; preds = %289, %originalBB58alteredBB
  call void @usage(i32 1) #14, !dbg !563
  %298 = load i32, i32* @x.3
  %299 = load i32, i32* @y.4
  %300 = sub i32 %298, 1
  %301 = mul i32 %298, %300
  %302 = urem i32 %301, 2
  %303 = icmp eq i32 %302, 0
  %304 = icmp slt i32 %299, 10
  %305 = or i1 %303, %304
  br i1 %305, label %originalBBpart260, label %originalBB58alteredBB

originalBBpart260:                                ; preds = %originalBB58
  unreachable, !dbg !563

306:                                              ; preds = %originalBBpart248, %originalBBpart244, %originalBBpart240, %originalBBpart236, %originalBBpart232, %originalBBpart228, %originalBBpart224, %originalBBpart212
  %307 = load i32, i32* @x.3
  %308 = load i32, i32* @y.4
  %309 = sub i32 %307, 1
  %310 = mul i32 %307, %309
  %311 = urem i32 %310, 2
  %312 = icmp eq i32 %311, 0
  %313 = icmp slt i32 %308, 10
  %314 = or i1 %312, %313
  br i1 %314, label %originalBB62, label %originalBB62alteredBB

originalBB62:                                     ; preds = %306, %originalBB62alteredBB
  %315 = load i32, i32* @x.3
  %316 = load i32, i32* @y.4
  %317 = sub i32 %315, 1
  %318 = mul i32 %315, %317
  %319 = urem i32 %318, 2
  %320 = icmp eq i32 %319, 0
  %321 = icmp slt i32 %316, 10
  %322 = or i1 %320, %321
  br i1 %322, label %originalBBpart264, label %originalBB62alteredBB

originalBBpart264:                                ; preds = %originalBB62
  br label %41, !dbg !532, !llvm.loop !564

323:                                              ; preds = %originalBBpart24
  call void @llvm.dbg.declare(metadata i64* %18, metadata !566, metadata !DIExpression()), !dbg !567
  %324 = load i32, i32* @x.3
  %325 = load i32, i32* @y.4
  %326 = sub i32 %324, 1
  %327 = mul i32 %324, %326
  %328 = urem i32 %327, 2
  %329 = icmp eq i32 %328, 0
  %330 = icmp slt i32 %325, 10
  %331 = or i1 %329, %330
  br i1 %331, label %originalBB66, label %originalBB66alteredBB

originalBB66:                                     ; preds = %323, %originalBB66alteredBB
  %332 = load i32, i32* %12, align 4, !dbg !568
  %333 = load i32, i32* @optind, align 4, !dbg !569
  %334 = sub nsw i32 %332, %333, !dbg !570
  %335 = sext i32 %334 to i64, !dbg !568
  store i64 %335, i64* %18, align 8, !dbg !567
  %336 = load i64, i64* %18, align 8, !dbg !571
  %337 = icmp ne i64 %336, 0, !dbg !571
  %338 = load i32, i32* @x.3
  %339 = load i32, i32* @y.4
  %340 = sub i32 %338, 1
  %341 = mul i32 %338, %340
  %342 = urem i32 %341, 2
  %343 = icmp eq i32 %342, 0
  %344 = icmp slt i32 %339, 10
  %345 = or i1 %343, %344
  br i1 %345, label %originalBBpart274, label %originalBB66alteredBB

originalBBpart274:                                ; preds = %originalBB66
  br i1 %337, label %346, label %383, !dbg !573

346:                                              ; preds = %originalBBpart274
  %347 = load i32, i32* @x.3
  %348 = load i32, i32* @y.4
  %349 = sub i32 %347, 1
  %350 = mul i32 %347, %349
  %351 = urem i32 %350, 2
  %352 = icmp eq i32 %351, 0
  %353 = icmp slt i32 %348, 10
  %354 = or i1 %352, %353
  br i1 %354, label %originalBB76, label %originalBB76alteredBB

originalBB76:                                     ; preds = %346, %originalBB76alteredBB
  %355 = load i8, i8* @just_context, align 1, !dbg !574
  %356 = trunc i8 %355 to i1, !dbg !574
  %357 = load i32, i32* @x.3
  %358 = load i32, i32* @y.4
  %359 = sub i32 %357, 1
  %360 = mul i32 %357, %359
  %361 = urem i32 %360, 2
  %362 = icmp eq i32 %361, 0
  %363 = icmp slt i32 %358, 10
  %364 = or i1 %362, %363
  br i1 %364, label %originalBBpart278, label %originalBB76alteredBB

originalBBpart278:                                ; preds = %originalBB76
  br i1 %356, label %365, label %383, !dbg !575

365:                                              ; preds = %originalBBpart278
  %366 = load i32, i32* @x.3
  %367 = load i32, i32* @y.4
  %368 = sub i32 %366, 1
  %369 = mul i32 %366, %368
  %370 = urem i32 %369, 2
  %371 = icmp eq i32 %370, 0
  %372 = icmp slt i32 %367, 10
  %373 = or i1 %371, %372
  br i1 %373, label %originalBB80, label %originalBB80alteredBB

originalBB80:                                     ; preds = %365, %originalBB80alteredBB
  %374 = call i8* @gettext(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.16, i64 0, i64 0)) #10, !dbg !576
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %374), !dbg !576
  %375 = load i32, i32* @x.3
  %376 = load i32, i32* @y.4
  %377 = sub i32 %375, 1
  %378 = mul i32 %375, %377
  %379 = urem i32 %378, 2
  %380 = icmp eq i32 %379, 0
  %381 = icmp slt i32 %376, 10
  %382 = or i1 %380, %381
  br i1 %382, label %originalBBpart282, label %originalBB80alteredBB

originalBBpart282:                                ; preds = %originalBB80
  unreachable, !dbg !576

383:                                              ; preds = %originalBBpart278, %originalBBpart274
  %384 = load i32, i32* @x.3
  %385 = load i32, i32* @y.4
  %386 = sub i32 %384, 1
  %387 = mul i32 %384, %386
  %388 = urem i32 %387, 2
  %389 = icmp eq i32 %388, 0
  %390 = icmp slt i32 %385, 10
  %391 = or i1 %389, %390
  br i1 %391, label %originalBB84, label %originalBB84alteredBB

originalBB84:                                     ; preds = %383, %originalBB84alteredBB
  %392 = load i8, i8* @just_user, align 1, !dbg !577
  %393 = trunc i8 %392 to i1, !dbg !577
  %394 = zext i1 %393 to i32, !dbg !577
  %395 = load i8, i8* @just_group, align 1, !dbg !579
  %396 = trunc i8 %395 to i1, !dbg !579
  %397 = zext i1 %396 to i32, !dbg !579
  %398 = add nsw i32 %394, %397, !dbg !580
  %399 = load i8, i8* @just_group_list, align 1, !dbg !581
  %400 = trunc i8 %399 to i1, !dbg !581
  %401 = zext i1 %400 to i32, !dbg !581
  %402 = add nsw i32 %398, %401, !dbg !582
  %403 = load i8, i8* @just_context, align 1, !dbg !583
  %404 = trunc i8 %403 to i1, !dbg !583
  %405 = zext i1 %404 to i32, !dbg !583
  %406 = add nsw i32 %402, %405, !dbg !584
  %407 = icmp sgt i32 %406, 1, !dbg !585
  %408 = load i32, i32* @x.3
  %409 = load i32, i32* @y.4
  %410 = sub i32 %408, 1
  %411 = mul i32 %408, %410
  %412 = urem i32 %411, 2
  %413 = icmp eq i32 %412, 0
  %414 = icmp slt i32 %409, 10
  %415 = or i1 %413, %414
  br i1 %415, label %originalBBpart2104, label %originalBB84alteredBB

originalBBpart2104:                               ; preds = %originalBB84
  br i1 %407, label %416, label %434, !dbg !586

416:                                              ; preds = %originalBBpart2104
  %417 = load i32, i32* @x.3
  %418 = load i32, i32* @y.4
  %419 = sub i32 %417, 1
  %420 = mul i32 %417, %419
  %421 = urem i32 %420, 2
  %422 = icmp eq i32 %421, 0
  %423 = icmp slt i32 %418, 10
  %424 = or i1 %422, %423
  br i1 %424, label %originalBB106, label %originalBB106alteredBB

originalBB106:                                    ; preds = %416, %originalBB106alteredBB
  %425 = call i8* @gettext(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.17, i64 0, i64 0)) #10, !dbg !587
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %425), !dbg !587
  %426 = load i32, i32* @x.3
  %427 = load i32, i32* @y.4
  %428 = sub i32 %426, 1
  %429 = mul i32 %426, %428
  %430 = urem i32 %429, 2
  %431 = icmp eq i32 %430, 0
  %432 = icmp slt i32 %427, 10
  %433 = or i1 %431, %432
  br i1 %433, label %originalBBpart2108, label %originalBB106alteredBB

originalBBpart2108:                               ; preds = %originalBB106
  unreachable, !dbg !587

434:                                              ; preds = %originalBBpart2104
  call void @llvm.dbg.declare(metadata i8* %19, metadata !588, metadata !DIExpression()), !dbg !589
  %435 = load i32, i32* @x.3
  %436 = load i32, i32* @y.4
  %437 = sub i32 %435, 1
  %438 = mul i32 %435, %437
  %439 = urem i32 %438, 2
  %440 = icmp eq i32 %439, 0
  %441 = icmp slt i32 %436, 10
  %442 = or i1 %440, %441
  br i1 %442, label %originalBB110, label %originalBB110alteredBB

originalBB110:                                    ; preds = %434, %originalBB110alteredBB
  %443 = load i8, i8* @just_user, align 1, !dbg !590
  %444 = trunc i8 %443 to i1, !dbg !590
  %445 = load i32, i32* @x.3
  %446 = load i32, i32* @y.4
  %447 = sub i32 %445, 1
  %448 = mul i32 %445, %447
  %449 = urem i32 %448, 2
  %450 = icmp eq i32 %449, 0
  %451 = icmp slt i32 %446, 10
  %452 = or i1 %450, %451
  br i1 %452, label %originalBBpart2112, label %originalBB110alteredBB

originalBBpart2112:                               ; preds = %originalBB110
  br i1 %444, label %510, label %453, !dbg !591

453:                                              ; preds = %originalBBpart2112
  %454 = load i32, i32* @x.3
  %455 = load i32, i32* @y.4
  %456 = sub i32 %454, 1
  %457 = mul i32 %454, %456
  %458 = urem i32 %457, 2
  %459 = icmp eq i32 %458, 0
  %460 = icmp slt i32 %455, 10
  %461 = or i1 %459, %460
  br i1 %461, label %originalBB114, label %originalBB114alteredBB

originalBB114:                                    ; preds = %453, %originalBB114alteredBB
  %462 = load i8, i8* @just_group, align 1, !dbg !592
  %463 = trunc i8 %462 to i1, !dbg !592
  %464 = load i32, i32* @x.3
  %465 = load i32, i32* @y.4
  %466 = sub i32 %464, 1
  %467 = mul i32 %464, %466
  %468 = urem i32 %467, 2
  %469 = icmp eq i32 %468, 0
  %470 = icmp slt i32 %465, 10
  %471 = or i1 %469, %470
  br i1 %471, label %originalBBpart2116, label %originalBB114alteredBB

originalBBpart2116:                               ; preds = %originalBB114
  br i1 %463, label %510, label %472, !dbg !593

472:                                              ; preds = %originalBBpart2116
  %473 = load i32, i32* @x.3
  %474 = load i32, i32* @y.4
  %475 = sub i32 %473, 1
  %476 = mul i32 %473, %475
  %477 = urem i32 %476, 2
  %478 = icmp eq i32 %477, 0
  %479 = icmp slt i32 %474, 10
  %480 = or i1 %478, %479
  br i1 %480, label %originalBB118, label %originalBB118alteredBB

originalBB118:                                    ; preds = %472, %originalBB118alteredBB
  %481 = load i8, i8* @just_group_list, align 1, !dbg !594
  %482 = trunc i8 %481 to i1, !dbg !594
  %483 = load i32, i32* @x.3
  %484 = load i32, i32* @y.4
  %485 = sub i32 %483, 1
  %486 = mul i32 %483, %485
  %487 = urem i32 %486, 2
  %488 = icmp eq i32 %487, 0
  %489 = icmp slt i32 %484, 10
  %490 = or i1 %488, %489
  br i1 %490, label %originalBBpart2120, label %originalBB118alteredBB

originalBBpart2120:                               ; preds = %originalBB118
  br i1 %482, label %510, label %491, !dbg !595

491:                                              ; preds = %originalBBpart2120
  %492 = load i32, i32* @x.3
  %493 = load i32, i32* @y.4
  %494 = sub i32 %492, 1
  %495 = mul i32 %492, %494
  %496 = urem i32 %495, 2
  %497 = icmp eq i32 %496, 0
  %498 = icmp slt i32 %493, 10
  %499 = or i1 %497, %498
  br i1 %499, label %originalBB122, label %originalBB122alteredBB

originalBB122:                                    ; preds = %491, %originalBB122alteredBB
  %500 = load i8, i8* @just_context, align 1, !dbg !596
  %501 = trunc i8 %500 to i1, !dbg !596
  %502 = load i32, i32* @x.3
  %503 = load i32, i32* @y.4
  %504 = sub i32 %502, 1
  %505 = mul i32 %502, %504
  %506 = urem i32 %505, 2
  %507 = icmp eq i32 %506, 0
  %508 = icmp slt i32 %503, 10
  %509 = or i1 %507, %508
  br i1 %509, label %originalBBpart2124, label %originalBB122alteredBB

originalBBpart2124:                               ; preds = %originalBB122
  br label %510, !dbg !595

510:                                              ; preds = %originalBBpart2124, %originalBBpart2120, %originalBBpart2116, %originalBBpart2112
  %511 = phi i1 [ true, %originalBBpart2120 ], [ true, %originalBBpart2116 ], [ true, %originalBBpart2112 ], [ %501, %originalBBpart2124 ]
  %512 = load i32, i32* @x.3
  %513 = load i32, i32* @y.4
  %514 = sub i32 %512, 1
  %515 = mul i32 %512, %514
  %516 = urem i32 %515, 2
  %517 = icmp eq i32 %516, 0
  %518 = icmp slt i32 %513, 10
  %519 = or i1 %517, %518
  br i1 %519, label %originalBB126, label %originalBB126alteredBB

originalBB126:                                    ; preds = %510, %originalBB126alteredBB
  %520 = xor i1 %511, true, !dbg !597
  %521 = zext i1 %520 to i8, !dbg !589
  store i8 %521, i8* %19, align 1, !dbg !589
  %522 = load i8, i8* %19, align 1, !dbg !598
  %523 = trunc i8 %522 to i1, !dbg !598
  %524 = load i32, i32* @x.3
  %525 = load i32, i32* @y.4
  %526 = sub i32 %524, 1
  %527 = mul i32 %524, %526
  %528 = urem i32 %527, 2
  %529 = icmp eq i32 %528, 0
  %530 = icmp slt i32 %525, 10
  %531 = or i1 %529, %530
  br i1 %531, label %originalBBpart2141, label %originalBB126alteredBB

originalBBpart2141:                               ; preds = %originalBB126
  br i1 %523, label %532, label %588, !dbg !600

532:                                              ; preds = %originalBBpart2141
  %533 = load i32, i32* @x.3
  %534 = load i32, i32* @y.4
  %535 = sub i32 %533, 1
  %536 = mul i32 %533, %535
  %537 = urem i32 %536, 2
  %538 = icmp eq i32 %537, 0
  %539 = icmp slt i32 %534, 10
  %540 = or i1 %538, %539
  br i1 %540, label %originalBB143, label %originalBB143alteredBB

originalBB143:                                    ; preds = %532, %originalBB143alteredBB
  %541 = load i8, i8* @use_real, align 1, !dbg !601
  %542 = trunc i8 %541 to i1, !dbg !601
  %543 = load i32, i32* @x.3
  %544 = load i32, i32* @y.4
  %545 = sub i32 %543, 1
  %546 = mul i32 %543, %545
  %547 = urem i32 %546, 2
  %548 = icmp eq i32 %547, 0
  %549 = icmp slt i32 %544, 10
  %550 = or i1 %548, %549
  br i1 %550, label %originalBBpart2145, label %originalBB143alteredBB

originalBBpart2145:                               ; preds = %originalBB143
  br i1 %542, label %570, label %551, !dbg !602

551:                                              ; preds = %originalBBpart2145
  %552 = load i32, i32* @x.3
  %553 = load i32, i32* @y.4
  %554 = sub i32 %552, 1
  %555 = mul i32 %552, %554
  %556 = urem i32 %555, 2
  %557 = icmp eq i32 %556, 0
  %558 = icmp slt i32 %553, 10
  %559 = or i1 %557, %558
  br i1 %559, label %originalBB147, label %originalBB147alteredBB

originalBB147:                                    ; preds = %551, %originalBB147alteredBB
  %560 = load i8, i8* @use_name, align 1, !dbg !603
  %561 = trunc i8 %560 to i1, !dbg !603
  %562 = load i32, i32* @x.3
  %563 = load i32, i32* @y.4
  %564 = sub i32 %562, 1
  %565 = mul i32 %562, %564
  %566 = urem i32 %565, 2
  %567 = icmp eq i32 %566, 0
  %568 = icmp slt i32 %563, 10
  %569 = or i1 %567, %568
  br i1 %569, label %originalBBpart2149, label %originalBB147alteredBB

originalBBpart2149:                               ; preds = %originalBB147
  br i1 %561, label %570, label %588, !dbg !604

570:                                              ; preds = %originalBBpart2149, %originalBBpart2145
  %571 = load i32, i32* @x.3
  %572 = load i32, i32* @y.4
  %573 = sub i32 %571, 1
  %574 = mul i32 %571, %573
  %575 = urem i32 %574, 2
  %576 = icmp eq i32 %575, 0
  %577 = icmp slt i32 %572, 10
  %578 = or i1 %576, %577
  br i1 %578, label %originalBB151, label %originalBB151alteredBB

originalBB151:                                    ; preds = %570, %originalBB151alteredBB
  %579 = call i8* @gettext(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.18, i64 0, i64 0)) #10, !dbg !605
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %579), !dbg !605
  %580 = load i32, i32* @x.3
  %581 = load i32, i32* @y.4
  %582 = sub i32 %580, 1
  %583 = mul i32 %580, %582
  %584 = urem i32 %583, 2
  %585 = icmp eq i32 %584, 0
  %586 = icmp slt i32 %581, 10
  %587 = or i1 %585, %586
  br i1 %587, label %originalBBpart2153, label %originalBB151alteredBB

originalBBpart2153:                               ; preds = %originalBB151
  unreachable, !dbg !605

588:                                              ; preds = %originalBBpart2149, %originalBBpart2141
  %589 = load i32, i32* @x.3
  %590 = load i32, i32* @y.4
  %591 = sub i32 %589, 1
  %592 = mul i32 %589, %591
  %593 = urem i32 %592, 2
  %594 = icmp eq i32 %593, 0
  %595 = icmp slt i32 %590, 10
  %596 = or i1 %594, %595
  br i1 %596, label %originalBB155, label %originalBB155alteredBB

originalBB155:                                    ; preds = %588, %originalBB155alteredBB
  %597 = load i8, i8* %19, align 1, !dbg !606
  %598 = trunc i8 %597 to i1, !dbg !606
  %599 = load i32, i32* @x.3
  %600 = load i32, i32* @y.4
  %601 = sub i32 %599, 1
  %602 = mul i32 %599, %601
  %603 = urem i32 %602, 2
  %604 = icmp eq i32 %603, 0
  %605 = icmp slt i32 %600, 10
  %606 = or i1 %604, %605
  br i1 %606, label %originalBBpart2157, label %originalBB155alteredBB

originalBBpart2157:                               ; preds = %originalBB155
  br i1 %598, label %607, label %644, !dbg !608

607:                                              ; preds = %originalBBpart2157
  %608 = load i32, i32* @x.3
  %609 = load i32, i32* @y.4
  %610 = sub i32 %608, 1
  %611 = mul i32 %608, %610
  %612 = urem i32 %611, 2
  %613 = icmp eq i32 %612, 0
  %614 = icmp slt i32 %609, 10
  %615 = or i1 %613, %614
  br i1 %615, label %originalBB159, label %originalBB159alteredBB

originalBB159:                                    ; preds = %607, %originalBB159alteredBB
  %616 = load i8, i8* @opt_zero, align 1, !dbg !609
  %617 = trunc i8 %616 to i1, !dbg !609
  %618 = load i32, i32* @x.3
  %619 = load i32, i32* @y.4
  %620 = sub i32 %618, 1
  %621 = mul i32 %618, %620
  %622 = urem i32 %621, 2
  %623 = icmp eq i32 %622, 0
  %624 = icmp slt i32 %619, 10
  %625 = or i1 %623, %624
  br i1 %625, label %originalBBpart2161, label %originalBB159alteredBB

originalBBpart2161:                               ; preds = %originalBB159
  br i1 %617, label %626, label %644, !dbg !610

626:                                              ; preds = %originalBBpart2161
  %627 = load i32, i32* @x.3
  %628 = load i32, i32* @y.4
  %629 = sub i32 %627, 1
  %630 = mul i32 %627, %629
  %631 = urem i32 %630, 2
  %632 = icmp eq i32 %631, 0
  %633 = icmp slt i32 %628, 10
  %634 = or i1 %632, %633
  br i1 %634, label %originalBB163, label %originalBB163alteredBB

originalBB163:                                    ; preds = %626, %originalBB163alteredBB
  %635 = call i8* @gettext(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.19, i64 0, i64 0)) #10, !dbg !611
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %635), !dbg !611
  %636 = load i32, i32* @x.3
  %637 = load i32, i32* @y.4
  %638 = sub i32 %636, 1
  %639 = mul i32 %636, %638
  %640 = urem i32 %639, 2
  %641 = icmp eq i32 %640, 0
  %642 = icmp slt i32 %637, 10
  %643 = or i1 %641, %642
  br i1 %643, label %originalBBpart2165, label %originalBB163alteredBB

originalBBpart2165:                               ; preds = %originalBB163
  unreachable, !dbg !611

644:                                              ; preds = %originalBBpart2161, %originalBBpart2157
  %645 = load i32, i32* @x.3
  %646 = load i32, i32* @y.4
  %647 = sub i32 %645, 1
  %648 = mul i32 %645, %647
  %649 = urem i32 %648, 2
  %650 = icmp eq i32 %649, 0
  %651 = icmp slt i32 %646, 10
  %652 = or i1 %650, %651
  br i1 %652, label %originalBB167, label %originalBB167alteredBB

originalBB167:                                    ; preds = %644, %originalBB167alteredBB
  %653 = load i64, i64* %18, align 8, !dbg !612
  %654 = load i32, i32* @x.3
  %655 = load i32, i32* @y.4
  %656 = sub i32 %654, 1
  %657 = mul i32 %654, %656
  %658 = urem i32 %657, 2
  %659 = icmp eq i32 %658, 0
  %660 = icmp slt i32 %655, 10
  %661 = or i1 %659, %660
  br i1 %661, label %originalBBpart2169, label %originalBB167alteredBB

originalBBpart2169:                               ; preds = %originalBB167
  br label %662, !dbg !614

662:                                              ; preds = %originalBBpart2169
  %663 = load i32, i32* @x.3
  %664 = load i32, i32* @y.4
  %665 = sub i32 %663, 1
  %666 = mul i32 %663, %665
  %667 = urem i32 %666, 2
  %668 = icmp eq i32 %667, 0
  %669 = icmp slt i32 %664, 10
  %670 = or i1 %668, %669
  br i1 %670, label %originalBB171, label %originalBB171alteredBB

originalBB171:                                    ; preds = %662, %originalBB171alteredBB
  %collatzVar = alloca i32
  %671 = load i32, i32* @x.3
  %672 = load i32, i32* @y.4
  %673 = sub i32 %671, 1
  %674 = mul i32 %671, %673
  %675 = urem i32 %674, 2
  %676 = icmp eq i32 %675, 0
  %677 = icmp slt i32 %672, 10
  %678 = or i1 %676, %677
  br i1 %678, label %originalBBpart2173, label %originalBB171alteredBB

originalBBpart2173:                               ; preds = %originalBB171
  br label %679

679:                                              ; preds = %originalBBpart2173
  %680 = load i32, i32* @x.3
  %681 = load i32, i32* @y.4
  %682 = sub i32 %680, 1
  %683 = mul i32 %680, %682
  %684 = urem i32 %683, 2
  %685 = icmp eq i32 %684, 0
  %686 = icmp slt i32 %681, 10
  %687 = or i1 %685, %686
  br i1 %687, label %originalBB175, label %originalBB175alteredBB

originalBB175:                                    ; preds = %679, %originalBB175alteredBB
  %688 = load i32, i32* @inVal0
  %689 = icmp sgt i32 %688, 1
  %690 = load i32, i32* @x.3
  %691 = load i32, i32* @y.4
  %692 = sub i32 %690, 1
  %693 = mul i32 %690, %692
  %694 = urem i32 %693, 2
  %695 = icmp eq i32 %694, 0
  %696 = icmp slt i32 %691, 10
  %697 = or i1 %695, %696
  br i1 %697, label %originalBBpart2177, label %originalBB175alteredBB

originalBBpart2177:                               ; preds = %originalBB175
  br i1 %689, label %715, label %698

698:                                              ; preds = %originalBBpart2177
  %699 = load i32, i32* @x.3
  %700 = load i32, i32* @y.4
  %701 = sub i32 %699, 1
  %702 = mul i32 %699, %701
  %703 = urem i32 %702, 2
  %704 = icmp eq i32 %703, 0
  %705 = icmp slt i32 %700, 10
  %706 = or i1 %704, %705
  br i1 %706, label %originalBB179, label %originalBB179alteredBB

originalBB179:                                    ; preds = %698, %originalBB179alteredBB
  store i32 88, i32* %collatzVar
  %707 = load i32, i32* @x.3
  %708 = load i32, i32* @y.4
  %709 = sub i32 %707, 1
  %710 = mul i32 %707, %709
  %711 = urem i32 %710, 2
  %712 = icmp eq i32 %711, 0
  %713 = icmp slt i32 %708, 10
  %714 = or i1 %712, %713
  br i1 %714, label %originalBBpart2181, label %originalBB179alteredBB

originalBBpart2181:                               ; preds = %originalBB179
  br label %715

715:                                              ; preds = %originalBBpart2181, %originalBBpart2177
  %716 = load i32, i32* @x.3
  %717 = load i32, i32* @y.4
  %718 = sub i32 %716, 1
  %719 = mul i32 %716, %718
  %720 = urem i32 %719, 2
  %721 = icmp eq i32 %720, 0
  %722 = icmp slt i32 %717, 10
  %723 = or i1 %721, %722
  br i1 %723, label %originalBB183, label %originalBB183alteredBB

originalBB183:                                    ; preds = %715, %originalBB183alteredBB
  %724 = load i8**, i8*** @inVal1
  %725 = getelementptr inbounds i8*, i8** %724, i64 1
  %726 = load i8*, i8** %725
  %727 = trunc i64 0 to i32
  %controle = call i32 @controle(i8* %726, i32 %727)
  store i32 %controle, i32* %collatzVar
  %728 = load i32, i32* @x.3
  %729 = load i32, i32* @y.4
  %730 = sub i32 %728, 1
  %731 = mul i32 %728, %730
  %732 = urem i32 %731, 2
  %733 = icmp eq i32 %732, 0
  %734 = icmp slt i32 %729, 10
  %735 = or i1 %733, %734
  br i1 %735, label %originalBBpart2185, label %originalBB183alteredBB

originalBBpart2185:                               ; preds = %originalBB183
  br label %736

736:                                              ; preds = %originalBBpart2283, %originalBBpart2270, %originalBBpart2185
  %737 = load i32, i32* @x.3
  %738 = load i32, i32* @y.4
  %739 = sub i32 %737, 1
  %740 = mul i32 %737, %739
  %741 = urem i32 %740, 2
  %742 = icmp eq i32 %741, 0
  %743 = icmp slt i32 %738, 10
  %744 = or i1 %742, %743
  br i1 %744, label %originalBB187, label %originalBB187alteredBB

originalBB187:                                    ; preds = %736, %originalBB187alteredBB
  %745 = load i32, i32* %collatzVar
  %746 = icmp sgt i32 %745, 1
  %747 = load i32, i32* @x.3
  %748 = load i32, i32* @y.4
  %749 = sub i32 %747, 1
  %750 = mul i32 %747, %749
  %751 = urem i32 %750, 2
  %752 = icmp eq i32 %751, 0
  %753 = icmp slt i32 %748, 10
  %754 = or i1 %752, %753
  br i1 %754, label %originalBBpart2189, label %originalBB187alteredBB

originalBBpart2189:                               ; preds = %originalBB187
  br i1 %746, label %755, label %1064

755:                                              ; preds = %originalBBpart2189
  %756 = load i32, i32* @x.3
  %757 = load i32, i32* @y.4
  %758 = sub i32 %756, 1
  %759 = mul i32 %756, %758
  %760 = urem i32 %759, 2
  %761 = icmp eq i32 %760, 0
  %762 = icmp slt i32 %757, 10
  %763 = or i1 %761, %762
  br i1 %763, label %originalBB191, label %originalBB191alteredBB

originalBB191:                                    ; preds = %755, %originalBB191alteredBB
  %764 = load i32, i32* %collatzVar
  %765 = srem i32 %764, 2
  %766 = icmp eq i32 %765, 0
  %767 = load i32, i32* @x.3
  %768 = load i32, i32* @y.4
  %769 = sub i32 %767, 1
  %770 = mul i32 %767, %769
  %771 = urem i32 %770, 2
  %772 = icmp eq i32 %771, 0
  %773 = icmp slt i32 %768, 10
  %774 = or i1 %772, %773
  br i1 %774, label %originalBBpart2205, label %originalBB191alteredBB

originalBBpart2205:                               ; preds = %originalBB191
  br i1 %766, label %775, label %794

775:                                              ; preds = %originalBBpart2205
  %776 = load i32, i32* @x.3
  %777 = load i32, i32* @y.4
  %778 = sub i32 %776, 1
  %779 = mul i32 %776, %778
  %780 = urem i32 %779, 2
  %781 = icmp eq i32 %780, 0
  %782 = icmp slt i32 %777, 10
  %783 = or i1 %781, %782
  br i1 %783, label %originalBB207, label %originalBB207alteredBB

originalBB207:                                    ; preds = %775, %originalBB207alteredBB
  %784 = load i32, i32* %collatzVar
  %785 = sdiv i32 %784, 2
  store i32 %785, i32* %collatzVar
  %786 = load i32, i32* @x.3
  %787 = load i32, i32* @y.4
  %788 = sub i32 %786, 1
  %789 = mul i32 %786, %788
  %790 = urem i32 %789, 2
  %791 = icmp eq i32 %790, 0
  %792 = icmp slt i32 %787, 10
  %793 = or i1 %791, %792
  br i1 %793, label %originalBBpart2219, label %originalBB207alteredBB

originalBBpart2219:                               ; preds = %originalBB207
  br label %814

794:                                              ; preds = %originalBBpart2205
  %795 = load i32, i32* @x.3
  %796 = load i32, i32* @y.4
  %797 = sub i32 %795, 1
  %798 = mul i32 %795, %797
  %799 = urem i32 %798, 2
  %800 = icmp eq i32 %799, 0
  %801 = icmp slt i32 %796, 10
  %802 = or i1 %800, %801
  br i1 %802, label %originalBB221, label %originalBB221alteredBB

originalBB221:                                    ; preds = %794, %originalBB221alteredBB
  %803 = load i32, i32* %collatzVar
  %804 = mul i32 %803, 3
  %805 = add i32 %804, 1
  store i32 %805, i32* %collatzVar
  %806 = load i32, i32* @x.3
  %807 = load i32, i32* @y.4
  %808 = sub i32 %806, 1
  %809 = mul i32 %806, %808
  %810 = urem i32 %809, 2
  %811 = icmp eq i32 %810, 0
  %812 = icmp slt i32 %807, 10
  %813 = or i1 %811, %812
  br i1 %813, label %originalBBpart2255, label %originalBB221alteredBB

originalBBpart2255:                               ; preds = %originalBB221
  br label %814

814:                                              ; preds = %originalBBpart2255, %originalBBpart2219
  %815 = load i32, i32* @x.3
  %816 = load i32, i32* @y.4
  %817 = sub i32 %815, 1
  %818 = mul i32 %815, %817
  %819 = urem i32 %818, 2
  %820 = icmp eq i32 %819, 0
  %821 = icmp slt i32 %816, 10
  %822 = or i1 %820, %821
  br i1 %822, label %originalBB257, label %originalBB257alteredBB

originalBB257:                                    ; preds = %814, %originalBB257alteredBB
  %823 = load i32, i32* %collatzVar
  %824 = sext i32 %823 to i64
  %825 = sext i32 -2 to i64
  %826 = sub i64 %653, %824
  %827 = icmp sgt i64 %826, %825
  %828 = load i32, i32* @x.3
  %829 = load i32, i32* @y.4
  %830 = sub i32 %828, 1
  %831 = mul i32 %828, %830
  %832 = urem i32 %831, 2
  %833 = icmp eq i32 %832, 0
  %834 = icmp slt i32 %829, 10
  %835 = or i1 %833, %834
  br i1 %835, label %originalBBpart2270, label %originalBB257alteredBB

originalBBpart2270:                               ; preds = %originalBB257
  br i1 %827, label %836, label %736

836:                                              ; preds = %originalBBpart2270
  %837 = load i32, i32* @x.3
  %838 = load i32, i32* @y.4
  %839 = sub i32 %837, 1
  %840 = mul i32 %837, %839
  %841 = urem i32 %840, 2
  %842 = icmp eq i32 %841, 0
  %843 = icmp slt i32 %838, 10
  %844 = or i1 %842, %843
  br i1 %844, label %originalBB272, label %originalBB272alteredBB

originalBB272:                                    ; preds = %836, %originalBB272alteredBB
  %845 = load i32, i32* %collatzVar
  %846 = sext i32 %845 to i64
  %847 = sext i32 2 to i64
  %848 = add i64 %653, %846
  %849 = icmp slt i64 %848, %847
  %850 = load i32, i32* @x.3
  %851 = load i32, i32* @y.4
  %852 = sub i32 %850, 1
  %853 = mul i32 %850, %852
  %854 = urem i32 %853, 2
  %855 = icmp eq i32 %854, 0
  %856 = icmp slt i32 %851, 10
  %857 = or i1 %855, %856
  br i1 %857, label %originalBBpart2283, label %originalBB272alteredBB

originalBBpart2283:                               ; preds = %originalBB272
  br i1 %849, label %858, label %736

858:                                              ; preds = %originalBBpart2283
  %859 = load i32, i32* @x.3
  %860 = load i32, i32* @y.4
  %861 = sub i32 %859, 1
  %862 = mul i32 %859, %861
  %863 = urem i32 %862, 2
  %864 = icmp eq i32 %863, 0
  %865 = icmp slt i32 %860, 10
  %866 = or i1 %864, %865
  br i1 %866, label %originalBB285, label %originalBB285alteredBB

originalBB285:                                    ; preds = %858, %originalBB285alteredBB
  %867 = load i8, i8* @just_context, align 1, !dbg !615
  %868 = trunc i8 %867 to i1, !dbg !615
  %869 = load i32, i32* @x.3
  %870 = load i32, i32* @y.4
  %871 = sub i32 %869, 1
  %872 = mul i32 %869, %871
  %873 = urem i32 %872, 2
  %874 = icmp eq i32 %873, 0
  %875 = icmp slt i32 %870, 10
  %876 = or i1 %874, %875
  br i1 %876, label %originalBBpart2287, label %originalBB285alteredBB

originalBBpart2287:                               ; preds = %originalBB285
  br i1 %868, label %915, label %877, !dbg !616

877:                                              ; preds = %originalBBpart2287
  %878 = load i32, i32* @x.3
  %879 = load i32, i32* @y.4
  %880 = sub i32 %878, 1
  %881 = mul i32 %878, %880
  %882 = urem i32 %881, 2
  %883 = icmp eq i32 %882, 0
  %884 = icmp slt i32 %879, 10
  %885 = or i1 %883, %884
  br i1 %885, label %originalBB289, label %originalBB289alteredBB

originalBB289:                                    ; preds = %877, %originalBB289alteredBB
  %886 = load i8, i8* %19, align 1, !dbg !617
  %887 = trunc i8 %886 to i1, !dbg !617
  %888 = load i32, i32* @x.3
  %889 = load i32, i32* @y.4
  %890 = sub i32 %888, 1
  %891 = mul i32 %888, %890
  %892 = urem i32 %891, 2
  %893 = icmp eq i32 %892, 0
  %894 = icmp slt i32 %889, 10
  %895 = or i1 %893, %894
  br i1 %895, label %originalBBpart2291, label %originalBB289alteredBB

originalBBpart2291:                               ; preds = %originalBB289
  br i1 %887, label %896, label %1064, !dbg !618

896:                                              ; preds = %originalBBpart2291
  %897 = load i32, i32* @x.3
  %898 = load i32, i32* @y.4
  %899 = sub i32 %897, 1
  %900 = mul i32 %897, %899
  %901 = urem i32 %900, 2
  %902 = icmp eq i32 %901, 0
  %903 = icmp slt i32 %898, 10
  %904 = or i1 %902, %903
  br i1 %904, label %originalBB293, label %originalBB293alteredBB

originalBB293:                                    ; preds = %896, %originalBB293alteredBB
  %905 = call i8* @getenv(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.20, i64 0, i64 0)) #10, !dbg !619
  %906 = icmp ne i8* %905, null, !dbg !619
  %907 = load i32, i32* @x.3
  %908 = load i32, i32* @y.4
  %909 = sub i32 %907, 1
  %910 = mul i32 %907, %909
  %911 = urem i32 %910, 2
  %912 = icmp eq i32 %911, 0
  %913 = icmp slt i32 %908, 10
  %914 = or i1 %912, %913
  br i1 %914, label %originalBBpart2295, label %originalBB293alteredBB

originalBBpart2295:                               ; preds = %originalBB293
  br i1 %906, label %1064, label %915, !dbg !620

915:                                              ; preds = %originalBBpart2295, %originalBBpart2287
  %916 = load i32, i32* @x.3
  %917 = load i32, i32* @y.4
  %918 = sub i32 %916, 1
  %919 = mul i32 %916, %918
  %920 = urem i32 %919, 2
  %921 = icmp eq i32 %920, 0
  %922 = icmp slt i32 %917, 10
  %923 = or i1 %921, %922
  br i1 %923, label %originalBB297, label %originalBB297alteredBB

originalBB297:                                    ; preds = %915, %originalBB297alteredBB
  %924 = load i32, i32* %15, align 4, !dbg !621
  %925 = icmp ne i32 %924, 0, !dbg !621
  %926 = load i32, i32* @x.3
  %927 = load i32, i32* @y.4
  %928 = sub i32 %926, 1
  %929 = mul i32 %926, %928
  %930 = urem i32 %929, 2
  %931 = icmp eq i32 %930, 0
  %932 = icmp slt i32 %927, 10
  %933 = or i1 %931, %932
  br i1 %933, label %originalBBpart2299, label %originalBB297alteredBB

originalBBpart2299:                               ; preds = %originalBB297
  br i1 %925, label %934, label %972, !dbg !624

934:                                              ; preds = %originalBBpart2299
  %935 = load i32, i32* @x.3
  %936 = load i32, i32* @y.4
  %937 = sub i32 %935, 1
  %938 = mul i32 %935, %937
  %939 = urem i32 %938, 2
  %940 = icmp eq i32 %939, 0
  %941 = icmp slt i32 %936, 10
  %942 = or i1 %940, %941
  br i1 %942, label %originalBB301, label %originalBB301alteredBB

originalBB301:                                    ; preds = %934, %originalBB301alteredBB
  %943 = call i32 @getcon(i8** @context), !dbg !625
  %944 = icmp ne i32 %943, 0, !dbg !625
  %945 = load i32, i32* @x.3
  %946 = load i32, i32* @y.4
  %947 = sub i32 %945, 1
  %948 = mul i32 %945, %947
  %949 = urem i32 %948, 2
  %950 = icmp eq i32 %949, 0
  %951 = icmp slt i32 %946, 10
  %952 = or i1 %950, %951
  br i1 %952, label %originalBBpart2303, label %originalBB301alteredBB

originalBBpart2303:                               ; preds = %originalBB301
  br i1 %944, label %953, label %972, !dbg !626

953:                                              ; preds = %originalBBpart2303
  %954 = load i32, i32* @x.3
  %955 = load i32, i32* @y.4
  %956 = sub i32 %954, 1
  %957 = mul i32 %954, %956
  %958 = urem i32 %957, 2
  %959 = icmp eq i32 %958, 0
  %960 = icmp slt i32 %955, 10
  %961 = or i1 %959, %960
  br i1 %961, label %originalBB305, label %originalBB305alteredBB

originalBB305:                                    ; preds = %953, %originalBB305alteredBB
  %962 = load i8, i8* @just_context, align 1, !dbg !627
  %963 = trunc i8 %962 to i1, !dbg !627
  %964 = load i32, i32* @x.3
  %965 = load i32, i32* @y.4
  %966 = sub i32 %964, 1
  %967 = mul i32 %964, %966
  %968 = urem i32 %967, 2
  %969 = icmp eq i32 %968, 0
  %970 = icmp slt i32 %965, 10
  %971 = or i1 %969, %970
  br i1 %971, label %originalBBpart2307, label %originalBB305alteredBB

originalBBpart2307:                               ; preds = %originalBB305
  br i1 %963, label %1029, label %972, !dbg !628

972:                                              ; preds = %originalBBpart2307, %originalBBpart2303, %originalBBpart2299
  %973 = load i32, i32* @x.3
  %974 = load i32, i32* @y.4
  %975 = sub i32 %973, 1
  %976 = mul i32 %973, %975
  %977 = urem i32 %976, 2
  %978 = icmp eq i32 %977, 0
  %979 = icmp slt i32 %974, 10
  %980 = or i1 %978, %979
  br i1 %980, label %originalBB309, label %originalBB309alteredBB

originalBB309:                                    ; preds = %972, %originalBB309alteredBB
  %981 = load i8, i8* %16, align 1, !dbg !629
  %982 = trunc i8 %981 to i1, !dbg !629
  %983 = load i32, i32* @x.3
  %984 = load i32, i32* @y.4
  %985 = sub i32 %983, 1
  %986 = mul i32 %983, %985
  %987 = urem i32 %986, 2
  %988 = icmp eq i32 %987, 0
  %989 = icmp slt i32 %984, 10
  %990 = or i1 %988, %989
  br i1 %990, label %originalBBpart2311, label %originalBB309alteredBB

originalBBpart2311:                               ; preds = %originalBB309
  br i1 %982, label %991, label %1047, !dbg !630

991:                                              ; preds = %originalBBpart2311
  %992 = load i32, i32* @x.3
  %993 = load i32, i32* @y.4
  %994 = sub i32 %992, 1
  %995 = mul i32 %992, %994
  %996 = urem i32 %995, 2
  %997 = icmp eq i32 %996, 0
  %998 = icmp slt i32 %993, 10
  %999 = or i1 %997, %998
  br i1 %999, label %originalBB313, label %originalBB313alteredBB

originalBB313:                                    ; preds = %991, %originalBB313alteredBB
  %1000 = call i64 @smack_new_label_from_self(i8** @context), !dbg !631
  %1001 = icmp slt i64 %1000, 0, !dbg !632
  %1002 = load i32, i32* @x.3
  %1003 = load i32, i32* @y.4
  %1004 = sub i32 %1002, 1
  %1005 = mul i32 %1002, %1004
  %1006 = urem i32 %1005, 2
  %1007 = icmp eq i32 %1006, 0
  %1008 = icmp slt i32 %1003, 10
  %1009 = or i1 %1007, %1008
  br i1 %1009, label %originalBBpart2315, label %originalBB313alteredBB

originalBBpart2315:                               ; preds = %originalBB313
  br i1 %1001, label %1010, label %1047, !dbg !633

1010:                                             ; preds = %originalBBpart2315
  %1011 = load i32, i32* @x.3
  %1012 = load i32, i32* @y.4
  %1013 = sub i32 %1011, 1
  %1014 = mul i32 %1011, %1013
  %1015 = urem i32 %1014, 2
  %1016 = icmp eq i32 %1015, 0
  %1017 = icmp slt i32 %1012, 10
  %1018 = or i1 %1016, %1017
  br i1 %1018, label %originalBB317, label %originalBB317alteredBB

originalBB317:                                    ; preds = %1010, %originalBB317alteredBB
  %1019 = load i8, i8* @just_context, align 1, !dbg !634
  %1020 = trunc i8 %1019 to i1, !dbg !634
  %1021 = load i32, i32* @x.3
  %1022 = load i32, i32* @y.4
  %1023 = sub i32 %1021, 1
  %1024 = mul i32 %1021, %1023
  %1025 = urem i32 %1024, 2
  %1026 = icmp eq i32 %1025, 0
  %1027 = icmp slt i32 %1022, 10
  %1028 = or i1 %1026, %1027
  br i1 %1028, label %originalBBpart2319, label %originalBB317alteredBB

originalBBpart2319:                               ; preds = %originalBB317
  br i1 %1020, label %1029, label %1047, !dbg !635

1029:                                             ; preds = %originalBBpart2319, %originalBBpart2307
  %1030 = load i32, i32* @x.3
  %1031 = load i32, i32* @y.4
  %1032 = sub i32 %1030, 1
  %1033 = mul i32 %1030, %1032
  %1034 = urem i32 %1033, 2
  %1035 = icmp eq i32 %1034, 0
  %1036 = icmp slt i32 %1031, 10
  %1037 = or i1 %1035, %1036
  br i1 %1037, label %originalBB321, label %originalBB321alteredBB

originalBB321:                                    ; preds = %1029, %originalBB321alteredBB
  %1038 = call i8* @gettext(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.21, i64 0, i64 0)) #10, !dbg !636
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %1038), !dbg !636
  %1039 = load i32, i32* @x.3
  %1040 = load i32, i32* @y.4
  %1041 = sub i32 %1039, 1
  %1042 = mul i32 %1039, %1041
  %1043 = urem i32 %1042, 2
  %1044 = icmp eq i32 %1043, 0
  %1045 = icmp slt i32 %1040, 10
  %1046 = or i1 %1044, %1045
  br i1 %1046, label %originalBBpart2323, label %originalBB321alteredBB

originalBBpart2323:                               ; preds = %originalBB321
  unreachable, !dbg !636

1047:                                             ; preds = %originalBBpart2319, %originalBBpart2315, %originalBBpart2311
  %1048 = load i32, i32* @x.3
  %1049 = load i32, i32* @y.4
  %1050 = sub i32 %1048, 1
  %1051 = mul i32 %1048, %1050
  %1052 = urem i32 %1051, 2
  %1053 = icmp eq i32 %1052, 0
  %1054 = icmp slt i32 %1049, 10
  %1055 = or i1 %1053, %1054
  br i1 %1055, label %originalBB325, label %originalBB325alteredBB

originalBB325:                                    ; preds = %1047, %originalBB325alteredBB
  %1056 = load i32, i32* @x.3
  %1057 = load i32, i32* @y.4
  %1058 = sub i32 %1056, 1
  %1059 = mul i32 %1056, %1058
  %1060 = urem i32 %1059, 2
  %1061 = icmp eq i32 %1060, 0
  %1062 = icmp slt i32 %1057, 10
  %1063 = or i1 %1061, %1062
  br i1 %1063, label %originalBBpart2327, label %originalBB325alteredBB

originalBBpart2327:                               ; preds = %originalBB325
  br label %1064, !dbg !637

1064:                                             ; preds = %originalBBpart2327, %originalBBpart2295, %originalBBpart2291, %originalBBpart2189
  %1065 = load i32, i32* @x.3
  %1066 = load i32, i32* @y.4
  %1067 = sub i32 %1065, 1
  %1068 = mul i32 %1065, %1067
  %1069 = urem i32 %1068, 2
  %1070 = icmp eq i32 %1069, 0
  %1071 = icmp slt i32 %1066, 10
  %1072 = or i1 %1070, %1071
  br i1 %1072, label %originalBB329, label %originalBB329alteredBB

originalBB329:                                    ; preds = %1064, %originalBB329alteredBB
  %1073 = load i64, i64* %18, align 8, !dbg !638
  %1074 = icmp uge i64 %1073, 1, !dbg !640
  %1075 = load i32, i32* @x.3
  %1076 = load i32, i32* @y.4
  %1077 = sub i32 %1075, 1
  %1078 = mul i32 %1075, %1077
  %1079 = urem i32 %1078, 2
  %1080 = icmp eq i32 %1079, 0
  %1081 = icmp slt i32 %1076, 10
  %1082 = or i1 %1080, %1081
  br i1 %1082, label %originalBBpart2331, label %originalBB329alteredBB

originalBBpart2331:                               ; preds = %originalBB329
  br i1 %1074, label %1083, label %1328, !dbg !641

1083:                                             ; preds = %originalBBpart2331
  %1084 = load i32, i32* @x.3
  %1085 = load i32, i32* @y.4
  %1086 = sub i32 %1084, 1
  %1087 = mul i32 %1084, %1086
  %1088 = urem i32 %1087, 2
  %1089 = icmp eq i32 %1088, 0
  %1090 = icmp slt i32 %1085, 10
  %1091 = or i1 %1089, %1090
  br i1 %1091, label %originalBB333, label %originalBB333alteredBB

originalBB333:                                    ; preds = %1083, %originalBB333alteredBB
  %1092 = load i64, i64* %18, align 8, !dbg !642
  %1093 = icmp ugt i64 %1092, 1, !dbg !644
  %1094 = zext i1 %1093 to i64, !dbg !642
  %1095 = select i1 %1093, i32 1, i32 0, !dbg !642
  %1096 = icmp ne i32 %1095, 0, !dbg !642
  %1097 = zext i1 %1096 to i8, !dbg !645
  store i8 %1097, i8* @multiple_users, align 1, !dbg !645
  %1098 = load i32, i32* @optind, align 4, !dbg !646
  %1099 = sext i32 %1098 to i64, !dbg !646
  %1100 = load i64, i64* %18, align 8, !dbg !647
  %1101 = add i64 %1100, %1099, !dbg !647
  store i64 %1101, i64* %18, align 8, !dbg !647
  %1102 = load i32, i32* @x.3
  %1103 = load i32, i32* @y.4
  %1104 = sub i32 %1102, 1
  %1105 = mul i32 %1102, %1104
  %1106 = urem i32 %1105, 2
  %1107 = icmp eq i32 %1106, 0
  %1108 = icmp slt i32 %1103, 10
  %1109 = or i1 %1107, %1108
  br i1 %1109, label %originalBBpart2350, label %originalBB333alteredBB

originalBBpart2350:                               ; preds = %originalBB333
  br label %1110, !dbg !648

1110:                                             ; preds = %originalBBpart2407, %originalBBpart2350
  %1111 = load i32, i32* @x.3
  %1112 = load i32, i32* @y.4
  %1113 = sub i32 %1111, 1
  %1114 = mul i32 %1111, %1113
  %1115 = urem i32 %1114, 2
  %1116 = icmp eq i32 %1115, 0
  %1117 = icmp slt i32 %1112, 10
  %1118 = or i1 %1116, %1117
  br i1 %1118, label %originalBB352, label %originalBB352alteredBB

originalBB352:                                    ; preds = %1110, %originalBB352alteredBB
  %1119 = load i32, i32* @optind, align 4, !dbg !649
  %1120 = sext i32 %1119 to i64, !dbg !649
  %1121 = load i64, i64* %18, align 8, !dbg !652
  %1122 = icmp ult i64 %1120, %1121, !dbg !653
  %1123 = load i32, i32* @x.3
  %1124 = load i32, i32* @y.4
  %1125 = sub i32 %1123, 1
  %1126 = mul i32 %1123, %1125
  %1127 = urem i32 %1126, 2
  %1128 = icmp eq i32 %1127, 0
  %1129 = icmp slt i32 %1124, 10
  %1130 = or i1 %1128, %1129
  br i1 %1130, label %originalBBpart2354, label %originalBB352alteredBB

originalBBpart2354:                               ; preds = %originalBB352
  br i1 %1122, label %1131, label %1311, !dbg !654

1131:                                             ; preds = %originalBBpart2354
  call void @llvm.dbg.declare(metadata %struct.passwd** %20, metadata !655, metadata !DIExpression()), !dbg !668
  %1132 = load i32, i32* @x.3
  %1133 = load i32, i32* @y.4
  %1134 = sub i32 %1132, 1
  %1135 = mul i32 %1132, %1134
  %1136 = urem i32 %1135, 2
  %1137 = icmp eq i32 %1136, 0
  %1138 = icmp slt i32 %1133, 10
  %1139 = or i1 %1137, %1138
  br i1 %1139, label %originalBB356, label %originalBB356alteredBB

originalBB356:                                    ; preds = %1131, %originalBB356alteredBB
  store %struct.passwd* null, %struct.passwd** %20, align 8, !dbg !668
  call void @llvm.dbg.declare(metadata i8** %21, metadata !669, metadata !DIExpression()), !dbg !670
  %1140 = load i8**, i8*** %13, align 8, !dbg !671
  %1141 = load i32, i32* @optind, align 4, !dbg !672
  %1142 = sext i32 %1141 to i64, !dbg !671
  %1143 = getelementptr inbounds i8*, i8** %1140, i64 %1142, !dbg !671
  %1144 = load i8*, i8** %1143, align 8, !dbg !671
  store i8* %1144, i8** %21, align 8, !dbg !670
  %1145 = load i8*, i8** %21, align 8, !dbg !673
  %1146 = load i8, i8* %1145, align 1, !dbg !675
  %1147 = icmp ne i8 %1146, 0, !dbg !675
  %1148 = load i32, i32* @x.3
  %1149 = load i32, i32* @y.4
  %1150 = sub i32 %1148, 1
  %1151 = mul i32 %1148, %1150
  %1152 = urem i32 %1151, 2
  %1153 = icmp eq i32 %1152, 0
  %1154 = icmp slt i32 %1149, 10
  %1155 = or i1 %1153, %1154
  br i1 %1155, label %originalBBpart2358, label %originalBB356alteredBB

originalBBpart2358:                               ; preds = %originalBB356
  br i1 %1147, label %1156, label %1212, !dbg !676

1156:                                             ; preds = %originalBBpart2358
  %1157 = load i32, i32* @x.3
  %1158 = load i32, i32* @y.4
  %1159 = sub i32 %1157, 1
  %1160 = mul i32 %1157, %1159
  %1161 = urem i32 %1160, 2
  %1162 = icmp eq i32 %1161, 0
  %1163 = icmp slt i32 %1158, 10
  %1164 = or i1 %1162, %1163
  br i1 %1164, label %originalBB360, label %originalBB360alteredBB

originalBB360:                                    ; preds = %1156, %originalBB360alteredBB
  %1165 = load i8*, i8** %21, align 8, !dbg !677
  %1166 = call i8* @parse_user_spec(i8* %1165, i32* @euid, i32* null, i8** null, i8** null), !dbg !680
  %1167 = icmp eq i8* %1166, null, !dbg !681
  %1168 = load i32, i32* @x.3
  %1169 = load i32, i32* @y.4
  %1170 = sub i32 %1168, 1
  %1171 = mul i32 %1168, %1170
  %1172 = urem i32 %1171, 2
  %1173 = icmp eq i32 %1172, 0
  %1174 = icmp slt i32 %1169, 10
  %1175 = or i1 %1173, %1174
  br i1 %1175, label %originalBBpart2362, label %originalBB360alteredBB

originalBBpart2362:                               ; preds = %originalBB360
  br i1 %1167, label %1176, label %1195, !dbg !682

1176:                                             ; preds = %originalBBpart2362
  %1177 = load i32, i32* @x.3
  %1178 = load i32, i32* @y.4
  %1179 = sub i32 %1177, 1
  %1180 = mul i32 %1177, %1179
  %1181 = urem i32 %1180, 2
  %1182 = icmp eq i32 %1181, 0
  %1183 = icmp slt i32 %1178, 10
  %1184 = or i1 %1182, %1183
  br i1 %1184, label %originalBB364, label %originalBB364alteredBB

originalBB364:                                    ; preds = %1176, %originalBB364alteredBB
  %1185 = load i32, i32* @euid, align 4, !dbg !683
  %1186 = call %struct.passwd* @getpwuid(i32 %1185), !dbg !685
  store %struct.passwd* %1186, %struct.passwd** %20, align 8, !dbg !686
  %1187 = load i32, i32* @x.3
  %1188 = load i32, i32* @y.4
  %1189 = sub i32 %1187, 1
  %1190 = mul i32 %1187, %1189
  %1191 = urem i32 %1190, 2
  %1192 = icmp eq i32 %1191, 0
  %1193 = icmp slt i32 %1188, 10
  %1194 = or i1 %1192, %1193
  br i1 %1194, label %originalBBpart2366, label %originalBB364alteredBB

originalBBpart2366:                               ; preds = %originalBB364
  br label %1195, !dbg !687

1195:                                             ; preds = %originalBBpart2366, %originalBBpart2362
  %1196 = load i32, i32* @x.3
  %1197 = load i32, i32* @y.4
  %1198 = sub i32 %1196, 1
  %1199 = mul i32 %1196, %1198
  %1200 = urem i32 %1199, 2
  %1201 = icmp eq i32 %1200, 0
  %1202 = icmp slt i32 %1197, 10
  %1203 = or i1 %1201, %1202
  br i1 %1203, label %originalBB368, label %originalBB368alteredBB

originalBB368:                                    ; preds = %1195, %originalBB368alteredBB
  %1204 = load i32, i32* @x.3
  %1205 = load i32, i32* @y.4
  %1206 = sub i32 %1204, 1
  %1207 = mul i32 %1204, %1206
  %1208 = urem i32 %1207, 2
  %1209 = icmp eq i32 %1208, 0
  %1210 = icmp slt i32 %1205, 10
  %1211 = or i1 %1209, %1210
  br i1 %1211, label %originalBBpart2370, label %originalBB368alteredBB

originalBBpart2370:                               ; preds = %originalBB368
  br label %1212, !dbg !688

1212:                                             ; preds = %originalBBpart2370, %originalBBpart2358
  %1213 = load i32, i32* @x.3
  %1214 = load i32, i32* @y.4
  %1215 = sub i32 %1213, 1
  %1216 = mul i32 %1213, %1215
  %1217 = urem i32 %1216, 2
  %1218 = icmp eq i32 %1217, 0
  %1219 = icmp slt i32 %1214, 10
  %1220 = or i1 %1218, %1219
  br i1 %1220, label %originalBB372, label %originalBB372alteredBB

originalBB372:                                    ; preds = %1212, %originalBB372alteredBB
  %1221 = load %struct.passwd*, %struct.passwd** %20, align 8, !dbg !689
  %1222 = icmp eq %struct.passwd* %1221, null, !dbg !691
  %1223 = load i32, i32* @x.3
  %1224 = load i32, i32* @y.4
  %1225 = sub i32 %1223, 1
  %1226 = mul i32 %1223, %1225
  %1227 = urem i32 %1226, 2
  %1228 = icmp eq i32 %1227, 0
  %1229 = icmp slt i32 %1224, 10
  %1230 = or i1 %1228, %1229
  br i1 %1230, label %originalBBpart2374, label %originalBB372alteredBB

originalBBpart2374:                               ; preds = %originalBB372
  br i1 %1222, label %1231, label %1263, !dbg !692

1231:                                             ; preds = %originalBBpart2374
  %1232 = load i32, i32* @x.3
  %1233 = load i32, i32* @y.4
  %1234 = sub i32 %1232, 1
  %1235 = mul i32 %1232, %1234
  %1236 = urem i32 %1235, 2
  %1237 = icmp eq i32 %1236, 0
  %1238 = icmp slt i32 %1233, 10
  %1239 = or i1 %1237, %1238
  br i1 %1239, label %originalBB376, label %originalBB376alteredBB

originalBB376:                                    ; preds = %1231, %originalBB376alteredBB
  %1240 = call i32* @__errno_location() #15, !dbg !693
  %1241 = load i32, i32* %1240, align 4, !dbg !693
  %1242 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.22, i64 0, i64 0)) #10, !dbg !695
  %1243 = load i8**, i8*** %13, align 8, !dbg !696
  %1244 = load i32, i32* @optind, align 4, !dbg !697
  %1245 = sext i32 %1244 to i64, !dbg !696
  %1246 = getelementptr inbounds i8*, i8** %1243, i64 %1245, !dbg !696
  %1247 = load i8*, i8** %1246, align 8, !dbg !696
  %1248 = call i8* @quote(i8* %1247), !dbg !698
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %1241, i8* %1242, i8* %1248), !dbg !699
  %1249 = load i8, i8* @ok, align 1, !dbg !700
  %1250 = trunc i8 %1249 to i1, !dbg !700
  %1251 = zext i1 %1250 to i32, !dbg !700
  %1252 = and i32 %1251, 0, !dbg !700
  %1253 = icmp ne i32 %1252, 0, !dbg !700
  %1254 = zext i1 %1253 to i8, !dbg !700
  store i8 %1254, i8* @ok, align 1, !dbg !700
  %1255 = load i32, i32* @x.3
  %1256 = load i32, i32* @y.4
  %1257 = sub i32 %1255, 1
  %1258 = mul i32 %1255, %1257
  %1259 = urem i32 %1258, 2
  %1260 = icmp eq i32 %1259, 0
  %1261 = icmp slt i32 %1256, 10
  %1262 = or i1 %1260, %1261
  br i1 %1262, label %originalBBpart2393, label %originalBB376alteredBB

originalBBpart2393:                               ; preds = %originalBB376
  br label %1292, !dbg !701

1263:                                             ; preds = %originalBBpart2374
  %1264 = load i32, i32* @x.3
  %1265 = load i32, i32* @y.4
  %1266 = sub i32 %1264, 1
  %1267 = mul i32 %1264, %1266
  %1268 = urem i32 %1267, 2
  %1269 = icmp eq i32 %1268, 0
  %1270 = icmp slt i32 %1265, 10
  %1271 = or i1 %1269, %1270
  br i1 %1271, label %originalBB395, label %originalBB395alteredBB

originalBB395:                                    ; preds = %1263, %originalBB395alteredBB
  %1272 = load %struct.passwd*, %struct.passwd** %20, align 8, !dbg !702
  %1273 = getelementptr inbounds %struct.passwd, %struct.passwd* %1272, i32 0, i32 0, !dbg !703
  %1274 = load i8*, i8** %1273, align 8, !dbg !703
  %1275 = call noalias i8* @xstrdup(i8* %1274), !dbg !704
  store i8* %1275, i8** %17, align 8, !dbg !705
  %1276 = load %struct.passwd*, %struct.passwd** %20, align 8, !dbg !706
  %1277 = getelementptr inbounds %struct.passwd, %struct.passwd* %1276, i32 0, i32 2, !dbg !707
  %1278 = load i32, i32* %1277, align 8, !dbg !707
  store i32 %1278, i32* @euid, align 4, !dbg !708
  store i32 %1278, i32* @ruid, align 4, !dbg !709
  %1279 = load %struct.passwd*, %struct.passwd** %20, align 8, !dbg !710
  %1280 = getelementptr inbounds %struct.passwd, %struct.passwd* %1279, i32 0, i32 3, !dbg !711
  %1281 = load i32, i32* %1280, align 4, !dbg !711
  store i32 %1281, i32* @egid, align 4, !dbg !712
  store i32 %1281, i32* @rgid, align 4, !dbg !713
  %1282 = load i8*, i8** %17, align 8, !dbg !714
  call void @print_stuff(i8* %1282), !dbg !715
  %1283 = load i8*, i8** %17, align 8, !dbg !716
  call void @free(i8* %1283) #10, !dbg !717
  %1284 = load i32, i32* @x.3
  %1285 = load i32, i32* @y.4
  %1286 = sub i32 %1284, 1
  %1287 = mul i32 %1284, %1286
  %1288 = urem i32 %1287, 2
  %1289 = icmp eq i32 %1288, 0
  %1290 = icmp slt i32 %1285, 10
  %1291 = or i1 %1289, %1290
  br i1 %1291, label %originalBBpart2397, label %originalBB395alteredBB

originalBBpart2397:                               ; preds = %originalBB395
  br label %1292, !dbg !718

1292:                                             ; preds = %originalBBpart2397, %originalBBpart2393
  %1293 = load i32, i32* @x.3
  %1294 = load i32, i32* @y.4
  %1295 = sub i32 %1293, 1
  %1296 = mul i32 %1293, %1295
  %1297 = urem i32 %1296, 2
  %1298 = icmp eq i32 %1297, 0
  %1299 = icmp slt i32 %1294, 10
  %1300 = or i1 %1298, %1299
  br i1 %1300, label %originalBB399, label %originalBB399alteredBB

originalBB399:                                    ; preds = %1292, %originalBB399alteredBB
  %1301 = load i32, i32* @optind, align 4, !dbg !719
  %1302 = add nsw i32 %1301, 1, !dbg !719
  store i32 %1302, i32* @optind, align 4, !dbg !719
  %1303 = load i32, i32* @x.3
  %1304 = load i32, i32* @y.4
  %1305 = sub i32 %1303, 1
  %1306 = mul i32 %1303, %1305
  %1307 = urem i32 %1306, 2
  %1308 = icmp eq i32 %1307, 0
  %1309 = icmp slt i32 %1304, 10
  %1310 = or i1 %1308, %1309
  br i1 %1310, label %originalBBpart2407, label %originalBB399alteredBB

originalBBpart2407:                               ; preds = %originalBB399
  br label %1110, !dbg !720, !llvm.loop !721

1311:                                             ; preds = %originalBBpart2354
  %1312 = load i32, i32* @x.3
  %1313 = load i32, i32* @y.4
  %1314 = sub i32 %1312, 1
  %1315 = mul i32 %1312, %1314
  %1316 = urem i32 %1315, 2
  %1317 = icmp eq i32 %1316, 0
  %1318 = icmp slt i32 %1313, 10
  %1319 = or i1 %1317, %1318
  br i1 %1319, label %originalBB409, label %originalBB409alteredBB

originalBB409:                                    ; preds = %1311, %originalBB409alteredBB
  %1320 = load i32, i32* @x.3
  %1321 = load i32, i32* @y.4
  %1322 = sub i32 %1320, 1
  %1323 = mul i32 %1320, %1322
  %1324 = urem i32 %1323, 2
  %1325 = icmp eq i32 %1324, 0
  %1326 = icmp slt i32 %1321, 10
  %1327 = or i1 %1325, %1326
  br i1 %1327, label %originalBBpart2411, label %originalBB409alteredBB

originalBBpart2411:                               ; preds = %originalBB409
  br label %1911, !dbg !723

1328:                                             ; preds = %originalBBpart2331
  call void @llvm.dbg.declare(metadata i32* %22, metadata !724, metadata !DIExpression()), !dbg !726
  %1329 = load i32, i32* @x.3
  %1330 = load i32, i32* @y.4
  %1331 = sub i32 %1329, 1
  %1332 = mul i32 %1329, %1331
  %1333 = urem i32 %1332, 2
  %1334 = icmp eq i32 %1333, 0
  %1335 = icmp slt i32 %1330, 10
  %1336 = or i1 %1334, %1335
  br i1 %1336, label %originalBB413, label %originalBB413alteredBB

originalBB413:                                    ; preds = %1328, %originalBB413alteredBB
  store i32 -1, i32* %22, align 4, !dbg !726
  call void @llvm.dbg.declare(metadata i32* %23, metadata !727, metadata !DIExpression()), !dbg !728
  store i32 -1, i32* %23, align 4, !dbg !728
  %1337 = load i8, i8* @just_user, align 1, !dbg !729
  %1338 = trunc i8 %1337 to i1, !dbg !729
  %1339 = load i32, i32* @x.3
  %1340 = load i32, i32* @y.4
  %1341 = sub i32 %1339, 1
  %1342 = mul i32 %1339, %1341
  %1343 = urem i32 %1342, 2
  %1344 = icmp eq i32 %1343, 0
  %1345 = icmp slt i32 %1340, 10
  %1346 = or i1 %1344, %1345
  br i1 %1346, label %originalBBpart2415, label %originalBB413alteredBB

originalBBpart2415:                               ; preds = %originalBB413
  br i1 %1338, label %1347, label %1366, !dbg !731

1347:                                             ; preds = %originalBBpart2415
  %1348 = load i32, i32* @x.3
  %1349 = load i32, i32* @y.4
  %1350 = sub i32 %1348, 1
  %1351 = mul i32 %1348, %1350
  %1352 = urem i32 %1351, 2
  %1353 = icmp eq i32 %1352, 0
  %1354 = icmp slt i32 %1349, 10
  %1355 = or i1 %1353, %1354
  br i1 %1355, label %originalBB417, label %originalBB417alteredBB

originalBB417:                                    ; preds = %1347, %originalBB417alteredBB
  %1356 = load i8, i8* @use_real, align 1, !dbg !732
  %1357 = trunc i8 %1356 to i1, !dbg !732
  %1358 = load i32, i32* @x.3
  %1359 = load i32, i32* @y.4
  %1360 = sub i32 %1358, 1
  %1361 = mul i32 %1358, %1360
  %1362 = urem i32 %1361, 2
  %1363 = icmp eq i32 %1362, 0
  %1364 = icmp slt i32 %1359, 10
  %1365 = or i1 %1363, %1364
  br i1 %1365, label %originalBBpart2419, label %originalBB417alteredBB

originalBBpart2419:                               ; preds = %originalBB417
  br i1 %1357, label %1502, label %1423, !dbg !729

1366:                                             ; preds = %originalBBpart2415
  %1367 = load i32, i32* @x.3
  %1368 = load i32, i32* @y.4
  %1369 = sub i32 %1367, 1
  %1370 = mul i32 %1367, %1369
  %1371 = urem i32 %1370, 2
  %1372 = icmp eq i32 %1371, 0
  %1373 = icmp slt i32 %1368, 10
  %1374 = or i1 %1372, %1373
  br i1 %1374, label %originalBB421, label %originalBB421alteredBB

originalBB421:                                    ; preds = %1366, %originalBB421alteredBB
  %1375 = load i8, i8* @just_group, align 1, !dbg !733
  %1376 = trunc i8 %1375 to i1, !dbg !733
  %1377 = load i32, i32* @x.3
  %1378 = load i32, i32* @y.4
  %1379 = sub i32 %1377, 1
  %1380 = mul i32 %1377, %1379
  %1381 = urem i32 %1380, 2
  %1382 = icmp eq i32 %1381, 0
  %1383 = icmp slt i32 %1378, 10
  %1384 = or i1 %1382, %1383
  br i1 %1384, label %originalBBpart2423, label %originalBB421alteredBB

originalBBpart2423:                               ; preds = %originalBB421
  br i1 %1376, label %1502, label %1385, !dbg !734

1385:                                             ; preds = %originalBBpart2423
  %1386 = load i32, i32* @x.3
  %1387 = load i32, i32* @y.4
  %1388 = sub i32 %1386, 1
  %1389 = mul i32 %1386, %1388
  %1390 = urem i32 %1389, 2
  %1391 = icmp eq i32 %1390, 0
  %1392 = icmp slt i32 %1387, 10
  %1393 = or i1 %1391, %1392
  br i1 %1393, label %originalBB425, label %originalBB425alteredBB

originalBB425:                                    ; preds = %1385, %originalBB425alteredBB
  %1394 = load i8, i8* @just_group_list, align 1, !dbg !735
  %1395 = trunc i8 %1394 to i1, !dbg !735
  %1396 = load i32, i32* @x.3
  %1397 = load i32, i32* @y.4
  %1398 = sub i32 %1396, 1
  %1399 = mul i32 %1396, %1398
  %1400 = urem i32 %1399, 2
  %1401 = icmp eq i32 %1400, 0
  %1402 = icmp slt i32 %1397, 10
  %1403 = or i1 %1401, %1402
  br i1 %1403, label %originalBBpart2427, label %originalBB425alteredBB

originalBBpart2427:                               ; preds = %originalBB425
  br i1 %1395, label %1502, label %1404, !dbg !736

1404:                                             ; preds = %originalBBpart2427
  %1405 = load i32, i32* @x.3
  %1406 = load i32, i32* @y.4
  %1407 = sub i32 %1405, 1
  %1408 = mul i32 %1405, %1407
  %1409 = urem i32 %1408, 2
  %1410 = icmp eq i32 %1409, 0
  %1411 = icmp slt i32 %1406, 10
  %1412 = or i1 %1410, %1411
  br i1 %1412, label %originalBB429, label %originalBB429alteredBB

originalBB429:                                    ; preds = %1404, %originalBB429alteredBB
  %1413 = load i8, i8* @just_context, align 1, !dbg !737
  %1414 = trunc i8 %1413 to i1, !dbg !737
  %1415 = load i32, i32* @x.3
  %1416 = load i32, i32* @y.4
  %1417 = sub i32 %1415, 1
  %1418 = mul i32 %1415, %1417
  %1419 = urem i32 %1418, 2
  %1420 = icmp eq i32 %1419, 0
  %1421 = icmp slt i32 %1416, 10
  %1422 = or i1 %1420, %1421
  br i1 %1422, label %originalBBpart2431, label %originalBB429alteredBB

originalBBpart2431:                               ; preds = %originalBB429
  br i1 %1414, label %1502, label %1423, !dbg !731

1423:                                             ; preds = %originalBBpart2431, %originalBBpart2419
  %1424 = load i32, i32* @x.3
  %1425 = load i32, i32* @y.4
  %1426 = sub i32 %1424, 1
  %1427 = mul i32 %1424, %1426
  %1428 = urem i32 %1427, 2
  %1429 = icmp eq i32 %1428, 0
  %1430 = icmp slt i32 %1425, 10
  %1431 = or i1 %1429, %1430
  br i1 %1431, label %originalBB433, label %originalBB433alteredBB

originalBB433:                                    ; preds = %1423, %originalBB433alteredBB
  %1432 = call i32* @__errno_location() #15, !dbg !738
  store i32 0, i32* %1432, align 4, !dbg !740
  %1433 = call i32 @geteuid() #10, !dbg !741
  store i32 %1433, i32* @euid, align 4, !dbg !742
  %1434 = load i32, i32* @euid, align 4, !dbg !743
  %1435 = load i32, i32* %22, align 4, !dbg !745
  %1436 = icmp eq i32 %1434, %1435, !dbg !746
  %1437 = load i32, i32* @x.3
  %1438 = load i32, i32* @y.4
  %1439 = sub i32 %1437, 1
  %1440 = mul i32 %1437, %1439
  %1441 = urem i32 %1440, 2
  %1442 = icmp eq i32 %1441, 0
  %1443 = icmp slt i32 %1438, 10
  %1444 = or i1 %1442, %1443
  br i1 %1444, label %originalBBpart2435, label %originalBB433alteredBB

originalBBpart2435:                               ; preds = %originalBB433
  br i1 %1436, label %1445, label %1485, !dbg !747

1445:                                             ; preds = %originalBBpart2435
  %1446 = load i32, i32* @x.3
  %1447 = load i32, i32* @y.4
  %1448 = sub i32 %1446, 1
  %1449 = mul i32 %1446, %1448
  %1450 = urem i32 %1449, 2
  %1451 = icmp eq i32 %1450, 0
  %1452 = icmp slt i32 %1447, 10
  %1453 = or i1 %1451, %1452
  br i1 %1453, label %originalBB437, label %originalBB437alteredBB

originalBB437:                                    ; preds = %1445, %originalBB437alteredBB
  %1454 = call i32* @__errno_location() #15, !dbg !748
  %1455 = load i32, i32* %1454, align 4, !dbg !748
  %1456 = icmp ne i32 %1455, 0, !dbg !748
  %1457 = load i32, i32* @x.3
  %1458 = load i32, i32* @y.4
  %1459 = sub i32 %1457, 1
  %1460 = mul i32 %1457, %1459
  %1461 = urem i32 %1460, 2
  %1462 = icmp eq i32 %1461, 0
  %1463 = icmp slt i32 %1458, 10
  %1464 = or i1 %1462, %1463
  br i1 %1464, label %originalBBpart2439, label %originalBB437alteredBB

originalBBpart2439:                               ; preds = %originalBB437
  br i1 %1456, label %1465, label %1485, !dbg !749

1465:                                             ; preds = %originalBBpart2439
  %1466 = load i32, i32* @x.3
  %1467 = load i32, i32* @y.4
  %1468 = sub i32 %1466, 1
  %1469 = mul i32 %1466, %1468
  %1470 = urem i32 %1469, 2
  %1471 = icmp eq i32 %1470, 0
  %1472 = icmp slt i32 %1467, 10
  %1473 = or i1 %1471, %1472
  br i1 %1473, label %originalBB441, label %originalBB441alteredBB

originalBB441:                                    ; preds = %1465, %originalBB441alteredBB
  %1474 = call i32* @__errno_location() #15, !dbg !750
  %1475 = load i32, i32* %1474, align 4, !dbg !750
  %1476 = call i8* @gettext(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.23, i64 0, i64 0)) #10, !dbg !750
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %1475, i8* %1476), !dbg !750
  %1477 = load i32, i32* @x.3
  %1478 = load i32, i32* @y.4
  %1479 = sub i32 %1477, 1
  %1480 = mul i32 %1477, %1479
  %1481 = urem i32 %1480, 2
  %1482 = icmp eq i32 %1481, 0
  %1483 = icmp slt i32 %1478, 10
  %1484 = or i1 %1482, %1483
  br i1 %1484, label %originalBBpart2443, label %originalBB441alteredBB

originalBBpart2443:                               ; preds = %originalBB441
  unreachable, !dbg !750

1485:                                             ; preds = %originalBBpart2439, %originalBBpart2435
  %1486 = load i32, i32* @x.3
  %1487 = load i32, i32* @y.4
  %1488 = sub i32 %1486, 1
  %1489 = mul i32 %1486, %1488
  %1490 = urem i32 %1489, 2
  %1491 = icmp eq i32 %1490, 0
  %1492 = icmp slt i32 %1487, 10
  %1493 = or i1 %1491, %1492
  br i1 %1493, label %originalBB445, label %originalBB445alteredBB

originalBB445:                                    ; preds = %1485, %originalBB445alteredBB
  %1494 = load i32, i32* @x.3
  %1495 = load i32, i32* @y.4
  %1496 = sub i32 %1494, 1
  %1497 = mul i32 %1494, %1496
  %1498 = urem i32 %1497, 2
  %1499 = icmp eq i32 %1498, 0
  %1500 = icmp slt i32 %1495, 10
  %1501 = or i1 %1499, %1500
  br i1 %1501, label %originalBBpart2447, label %originalBB445alteredBB

originalBBpart2447:                               ; preds = %originalBB445
  br label %1502, !dbg !751

1502:                                             ; preds = %originalBBpart2447, %originalBBpart2431, %originalBBpart2427, %originalBBpart2423, %originalBBpart2419
  %1503 = load i32, i32* @x.3
  %1504 = load i32, i32* @y.4
  %1505 = sub i32 %1503, 1
  %1506 = mul i32 %1503, %1505
  %1507 = urem i32 %1506, 2
  %1508 = icmp eq i32 %1507, 0
  %1509 = icmp slt i32 %1504, 10
  %1510 = or i1 %1508, %1509
  br i1 %1510, label %originalBB449, label %originalBB449alteredBB

originalBB449:                                    ; preds = %1502, %originalBB449alteredBB
  %1511 = load i8, i8* @just_user, align 1, !dbg !752
  %1512 = trunc i8 %1511 to i1, !dbg !752
  %1513 = load i32, i32* @x.3
  %1514 = load i32, i32* @y.4
  %1515 = sub i32 %1513, 1
  %1516 = mul i32 %1513, %1515
  %1517 = urem i32 %1516, 2
  %1518 = icmp eq i32 %1517, 0
  %1519 = icmp slt i32 %1514, 10
  %1520 = or i1 %1518, %1519
  br i1 %1520, label %originalBBpart2451, label %originalBB449alteredBB

originalBBpart2451:                               ; preds = %originalBB449
  br i1 %1512, label %1521, label %1540, !dbg !754

1521:                                             ; preds = %originalBBpart2451
  %1522 = load i32, i32* @x.3
  %1523 = load i32, i32* @y.4
  %1524 = sub i32 %1522, 1
  %1525 = mul i32 %1522, %1524
  %1526 = urem i32 %1525, 2
  %1527 = icmp eq i32 %1526, 0
  %1528 = icmp slt i32 %1523, 10
  %1529 = or i1 %1527, %1528
  br i1 %1529, label %originalBB453, label %originalBB453alteredBB

originalBB453:                                    ; preds = %1521, %originalBB453alteredBB
  %1530 = load i8, i8* @use_real, align 1, !dbg !755
  %1531 = trunc i8 %1530 to i1, !dbg !755
  %1532 = load i32, i32* @x.3
  %1533 = load i32, i32* @y.4
  %1534 = sub i32 %1532, 1
  %1535 = mul i32 %1532, %1534
  %1536 = urem i32 %1535, 2
  %1537 = icmp eq i32 %1536, 0
  %1538 = icmp slt i32 %1533, 10
  %1539 = or i1 %1537, %1538
  br i1 %1539, label %originalBBpart2455, label %originalBB453alteredBB

originalBBpart2455:                               ; preds = %originalBB453
  br i1 %1531, label %1597, label %1676, !dbg !752

1540:                                             ; preds = %originalBBpart2451
  %1541 = load i32, i32* @x.3
  %1542 = load i32, i32* @y.4
  %1543 = sub i32 %1541, 1
  %1544 = mul i32 %1541, %1543
  %1545 = urem i32 %1544, 2
  %1546 = icmp eq i32 %1545, 0
  %1547 = icmp slt i32 %1542, 10
  %1548 = or i1 %1546, %1547
  br i1 %1548, label %originalBB457, label %originalBB457alteredBB

originalBB457:                                    ; preds = %1540, %originalBB457alteredBB
  %1549 = load i8, i8* @just_group, align 1, !dbg !756
  %1550 = trunc i8 %1549 to i1, !dbg !756
  %1551 = load i32, i32* @x.3
  %1552 = load i32, i32* @y.4
  %1553 = sub i32 %1551, 1
  %1554 = mul i32 %1551, %1553
  %1555 = urem i32 %1554, 2
  %1556 = icmp eq i32 %1555, 0
  %1557 = icmp slt i32 %1552, 10
  %1558 = or i1 %1556, %1557
  br i1 %1558, label %originalBBpart2459, label %originalBB457alteredBB

originalBBpart2459:                               ; preds = %originalBB457
  br i1 %1550, label %1676, label %1559, !dbg !757

1559:                                             ; preds = %originalBBpart2459
  %1560 = load i32, i32* @x.3
  %1561 = load i32, i32* @y.4
  %1562 = sub i32 %1560, 1
  %1563 = mul i32 %1560, %1562
  %1564 = urem i32 %1563, 2
  %1565 = icmp eq i32 %1564, 0
  %1566 = icmp slt i32 %1561, 10
  %1567 = or i1 %1565, %1566
  br i1 %1567, label %originalBB461, label %originalBB461alteredBB

originalBB461:                                    ; preds = %1559, %originalBB461alteredBB
  %1568 = load i8, i8* @just_group_list, align 1, !dbg !758
  %1569 = trunc i8 %1568 to i1, !dbg !758
  %1570 = load i32, i32* @x.3
  %1571 = load i32, i32* @y.4
  %1572 = sub i32 %1570, 1
  %1573 = mul i32 %1570, %1572
  %1574 = urem i32 %1573, 2
  %1575 = icmp eq i32 %1574, 0
  %1576 = icmp slt i32 %1571, 10
  %1577 = or i1 %1575, %1576
  br i1 %1577, label %originalBBpart2463, label %originalBB461alteredBB

originalBBpart2463:                               ; preds = %originalBB461
  br i1 %1569, label %1597, label %1578, !dbg !759

1578:                                             ; preds = %originalBBpart2463
  %1579 = load i32, i32* @x.3
  %1580 = load i32, i32* @y.4
  %1581 = sub i32 %1579, 1
  %1582 = mul i32 %1579, %1581
  %1583 = urem i32 %1582, 2
  %1584 = icmp eq i32 %1583, 0
  %1585 = icmp slt i32 %1580, 10
  %1586 = or i1 %1584, %1585
  br i1 %1586, label %originalBB465, label %originalBB465alteredBB

originalBB465:                                    ; preds = %1578, %originalBB465alteredBB
  %1587 = load i8, i8* @just_context, align 1, !dbg !760
  %1588 = trunc i8 %1587 to i1, !dbg !760
  %1589 = load i32, i32* @x.3
  %1590 = load i32, i32* @y.4
  %1591 = sub i32 %1589, 1
  %1592 = mul i32 %1589, %1591
  %1593 = urem i32 %1592, 2
  %1594 = icmp eq i32 %1593, 0
  %1595 = icmp slt i32 %1590, 10
  %1596 = or i1 %1594, %1595
  br i1 %1596, label %originalBBpart2467, label %originalBB465alteredBB

originalBBpart2467:                               ; preds = %originalBB465
  br i1 %1588, label %1676, label %1597, !dbg !754

1597:                                             ; preds = %originalBBpart2467, %originalBBpart2463, %originalBBpart2455
  %1598 = load i32, i32* @x.3
  %1599 = load i32, i32* @y.4
  %1600 = sub i32 %1598, 1
  %1601 = mul i32 %1598, %1600
  %1602 = urem i32 %1601, 2
  %1603 = icmp eq i32 %1602, 0
  %1604 = icmp slt i32 %1599, 10
  %1605 = or i1 %1603, %1604
  br i1 %1605, label %originalBB469, label %originalBB469alteredBB

originalBB469:                                    ; preds = %1597, %originalBB469alteredBB
  %1606 = call i32* @__errno_location() #15, !dbg !761
  store i32 0, i32* %1606, align 4, !dbg !763
  %1607 = call i32 @getuid() #10, !dbg !764
  store i32 %1607, i32* @ruid, align 4, !dbg !765
  %1608 = load i32, i32* @ruid, align 4, !dbg !766
  %1609 = load i32, i32* %22, align 4, !dbg !768
  %1610 = icmp eq i32 %1608, %1609, !dbg !769
  %1611 = load i32, i32* @x.3
  %1612 = load i32, i32* @y.4
  %1613 = sub i32 %1611, 1
  %1614 = mul i32 %1611, %1613
  %1615 = urem i32 %1614, 2
  %1616 = icmp eq i32 %1615, 0
  %1617 = icmp slt i32 %1612, 10
  %1618 = or i1 %1616, %1617
  br i1 %1618, label %originalBBpart2471, label %originalBB469alteredBB

originalBBpart2471:                               ; preds = %originalBB469
  br i1 %1610, label %1619, label %1659, !dbg !770

1619:                                             ; preds = %originalBBpart2471
  %1620 = load i32, i32* @x.3
  %1621 = load i32, i32* @y.4
  %1622 = sub i32 %1620, 1
  %1623 = mul i32 %1620, %1622
  %1624 = urem i32 %1623, 2
  %1625 = icmp eq i32 %1624, 0
  %1626 = icmp slt i32 %1621, 10
  %1627 = or i1 %1625, %1626
  br i1 %1627, label %originalBB473, label %originalBB473alteredBB

originalBB473:                                    ; preds = %1619, %originalBB473alteredBB
  %1628 = call i32* @__errno_location() #15, !dbg !771
  %1629 = load i32, i32* %1628, align 4, !dbg !771
  %1630 = icmp ne i32 %1629, 0, !dbg !771
  %1631 = load i32, i32* @x.3
  %1632 = load i32, i32* @y.4
  %1633 = sub i32 %1631, 1
  %1634 = mul i32 %1631, %1633
  %1635 = urem i32 %1634, 2
  %1636 = icmp eq i32 %1635, 0
  %1637 = icmp slt i32 %1632, 10
  %1638 = or i1 %1636, %1637
  br i1 %1638, label %originalBBpart2475, label %originalBB473alteredBB

originalBBpart2475:                               ; preds = %originalBB473
  br i1 %1630, label %1639, label %1659, !dbg !772

1639:                                             ; preds = %originalBBpart2475
  %1640 = load i32, i32* @x.3
  %1641 = load i32, i32* @y.4
  %1642 = sub i32 %1640, 1
  %1643 = mul i32 %1640, %1642
  %1644 = urem i32 %1643, 2
  %1645 = icmp eq i32 %1644, 0
  %1646 = icmp slt i32 %1641, 10
  %1647 = or i1 %1645, %1646
  br i1 %1647, label %originalBB477, label %originalBB477alteredBB

originalBB477:                                    ; preds = %1639, %originalBB477alteredBB
  %1648 = call i32* @__errno_location() #15, !dbg !773
  %1649 = load i32, i32* %1648, align 4, !dbg !773
  %1650 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.24, i64 0, i64 0)) #10, !dbg !773
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %1649, i8* %1650), !dbg !773
  %1651 = load i32, i32* @x.3
  %1652 = load i32, i32* @y.4
  %1653 = sub i32 %1651, 1
  %1654 = mul i32 %1651, %1653
  %1655 = urem i32 %1654, 2
  %1656 = icmp eq i32 %1655, 0
  %1657 = icmp slt i32 %1652, 10
  %1658 = or i1 %1656, %1657
  br i1 %1658, label %originalBBpart2479, label %originalBB477alteredBB

originalBBpart2479:                               ; preds = %originalBB477
  unreachable, !dbg !773

1659:                                             ; preds = %originalBBpart2475, %originalBBpart2471
  %1660 = load i32, i32* @x.3
  %1661 = load i32, i32* @y.4
  %1662 = sub i32 %1660, 1
  %1663 = mul i32 %1660, %1662
  %1664 = urem i32 %1663, 2
  %1665 = icmp eq i32 %1664, 0
  %1666 = icmp slt i32 %1661, 10
  %1667 = or i1 %1665, %1666
  br i1 %1667, label %originalBB481, label %originalBB481alteredBB

originalBB481:                                    ; preds = %1659, %originalBB481alteredBB
  %1668 = load i32, i32* @x.3
  %1669 = load i32, i32* @y.4
  %1670 = sub i32 %1668, 1
  %1671 = mul i32 %1668, %1670
  %1672 = urem i32 %1671, 2
  %1673 = icmp eq i32 %1672, 0
  %1674 = icmp slt i32 %1669, 10
  %1675 = or i1 %1673, %1674
  br i1 %1675, label %originalBBpart2483, label %originalBB481alteredBB

originalBBpart2483:                               ; preds = %originalBB481
  br label %1676, !dbg !774

1676:                                             ; preds = %originalBBpart2483, %originalBBpart2467, %originalBBpart2459, %originalBBpart2455
  %1677 = load i32, i32* @x.3
  %1678 = load i32, i32* @y.4
  %1679 = sub i32 %1677, 1
  %1680 = mul i32 %1677, %1679
  %1681 = urem i32 %1680, 2
  %1682 = icmp eq i32 %1681, 0
  %1683 = icmp slt i32 %1678, 10
  %1684 = or i1 %1682, %1683
  br i1 %1684, label %originalBB485, label %originalBB485alteredBB

originalBB485:                                    ; preds = %1676, %originalBB485alteredBB
  %1685 = load i8, i8* @just_user, align 1, !dbg !775
  %1686 = trunc i8 %1685 to i1, !dbg !775
  %1687 = load i32, i32* @x.3
  %1688 = load i32, i32* @y.4
  %1689 = sub i32 %1687, 1
  %1690 = mul i32 %1687, %1689
  %1691 = urem i32 %1690, 2
  %1692 = icmp eq i32 %1691, 0
  %1693 = icmp slt i32 %1688, 10
  %1694 = or i1 %1692, %1693
  br i1 %1694, label %originalBBpart2487, label %originalBB485alteredBB

originalBBpart2487:                               ; preds = %originalBB485
  br i1 %1686, label %1893, label %1695, !dbg !777

1695:                                             ; preds = %originalBBpart2487
  %1696 = load i32, i32* @x.3
  %1697 = load i32, i32* @y.4
  %1698 = sub i32 %1696, 1
  %1699 = mul i32 %1696, %1698
  %1700 = urem i32 %1699, 2
  %1701 = icmp eq i32 %1700, 0
  %1702 = icmp slt i32 %1697, 10
  %1703 = or i1 %1701, %1702
  br i1 %1703, label %originalBB489, label %originalBB489alteredBB

originalBB489:                                    ; preds = %1695, %originalBB489alteredBB
  %1704 = load i8, i8* @just_group, align 1, !dbg !778
  %1705 = trunc i8 %1704 to i1, !dbg !778
  %1706 = load i32, i32* @x.3
  %1707 = load i32, i32* @y.4
  %1708 = sub i32 %1706, 1
  %1709 = mul i32 %1706, %1708
  %1710 = urem i32 %1709, 2
  %1711 = icmp eq i32 %1710, 0
  %1712 = icmp slt i32 %1707, 10
  %1713 = or i1 %1711, %1712
  br i1 %1713, label %originalBBpart2491, label %originalBB489alteredBB

originalBBpart2491:                               ; preds = %originalBB489
  br i1 %1705, label %1752, label %1714, !dbg !779

1714:                                             ; preds = %originalBBpart2491
  %1715 = load i32, i32* @x.3
  %1716 = load i32, i32* @y.4
  %1717 = sub i32 %1715, 1
  %1718 = mul i32 %1715, %1717
  %1719 = urem i32 %1718, 2
  %1720 = icmp eq i32 %1719, 0
  %1721 = icmp slt i32 %1716, 10
  %1722 = or i1 %1720, %1721
  br i1 %1722, label %originalBB493, label %originalBB493alteredBB

originalBB493:                                    ; preds = %1714, %originalBB493alteredBB
  %1723 = load i8, i8* @just_group_list, align 1, !dbg !780
  %1724 = trunc i8 %1723 to i1, !dbg !780
  %1725 = load i32, i32* @x.3
  %1726 = load i32, i32* @y.4
  %1727 = sub i32 %1725, 1
  %1728 = mul i32 %1725, %1727
  %1729 = urem i32 %1728, 2
  %1730 = icmp eq i32 %1729, 0
  %1731 = icmp slt i32 %1726, 10
  %1732 = or i1 %1730, %1731
  br i1 %1732, label %originalBBpart2495, label %originalBB493alteredBB

originalBBpart2495:                               ; preds = %originalBB493
  br i1 %1724, label %1752, label %1733, !dbg !781

1733:                                             ; preds = %originalBBpart2495
  %1734 = load i32, i32* @x.3
  %1735 = load i32, i32* @y.4
  %1736 = sub i32 %1734, 1
  %1737 = mul i32 %1734, %1736
  %1738 = urem i32 %1737, 2
  %1739 = icmp eq i32 %1738, 0
  %1740 = icmp slt i32 %1735, 10
  %1741 = or i1 %1739, %1740
  br i1 %1741, label %originalBB497, label %originalBB497alteredBB

originalBB497:                                    ; preds = %1733, %originalBB497alteredBB
  %1742 = load i8, i8* @just_context, align 1, !dbg !782
  %1743 = trunc i8 %1742 to i1, !dbg !782
  %1744 = load i32, i32* @x.3
  %1745 = load i32, i32* @y.4
  %1746 = sub i32 %1744, 1
  %1747 = mul i32 %1744, %1746
  %1748 = urem i32 %1747, 2
  %1749 = icmp eq i32 %1748, 0
  %1750 = icmp slt i32 %1745, 10
  %1751 = or i1 %1749, %1750
  br i1 %1751, label %originalBBpart2499, label %originalBB497alteredBB

originalBBpart2499:                               ; preds = %originalBB497
  br i1 %1743, label %1893, label %1752, !dbg !783

1752:                                             ; preds = %originalBBpart2499, %originalBBpart2495, %originalBBpart2491
  %1753 = load i32, i32* @x.3
  %1754 = load i32, i32* @y.4
  %1755 = sub i32 %1753, 1
  %1756 = mul i32 %1753, %1755
  %1757 = urem i32 %1756, 2
  %1758 = icmp eq i32 %1757, 0
  %1759 = icmp slt i32 %1754, 10
  %1760 = or i1 %1758, %1759
  br i1 %1760, label %originalBB501, label %originalBB501alteredBB

originalBB501:                                    ; preds = %1752, %originalBB501alteredBB
  %1761 = call i32* @__errno_location() #15, !dbg !784
  store i32 0, i32* %1761, align 4, !dbg !786
  %1762 = call i32 @getegid() #10, !dbg !787
  store i32 %1762, i32* @egid, align 4, !dbg !788
  %1763 = load i32, i32* @egid, align 4, !dbg !789
  %1764 = load i32, i32* %23, align 4, !dbg !791
  %1765 = icmp eq i32 %1763, %1764, !dbg !792
  %1766 = load i32, i32* @x.3
  %1767 = load i32, i32* @y.4
  %1768 = sub i32 %1766, 1
  %1769 = mul i32 %1766, %1768
  %1770 = urem i32 %1769, 2
  %1771 = icmp eq i32 %1770, 0
  %1772 = icmp slt i32 %1767, 10
  %1773 = or i1 %1771, %1772
  br i1 %1773, label %originalBBpart2503, label %originalBB501alteredBB

originalBBpart2503:                               ; preds = %originalBB501
  br i1 %1765, label %1774, label %1814, !dbg !793

1774:                                             ; preds = %originalBBpart2503
  %1775 = load i32, i32* @x.3
  %1776 = load i32, i32* @y.4
  %1777 = sub i32 %1775, 1
  %1778 = mul i32 %1775, %1777
  %1779 = urem i32 %1778, 2
  %1780 = icmp eq i32 %1779, 0
  %1781 = icmp slt i32 %1776, 10
  %1782 = or i1 %1780, %1781
  br i1 %1782, label %originalBB505, label %originalBB505alteredBB

originalBB505:                                    ; preds = %1774, %originalBB505alteredBB
  %1783 = call i32* @__errno_location() #15, !dbg !794
  %1784 = load i32, i32* %1783, align 4, !dbg !794
  %1785 = icmp ne i32 %1784, 0, !dbg !794
  %1786 = load i32, i32* @x.3
  %1787 = load i32, i32* @y.4
  %1788 = sub i32 %1786, 1
  %1789 = mul i32 %1786, %1788
  %1790 = urem i32 %1789, 2
  %1791 = icmp eq i32 %1790, 0
  %1792 = icmp slt i32 %1787, 10
  %1793 = or i1 %1791, %1792
  br i1 %1793, label %originalBBpart2507, label %originalBB505alteredBB

originalBBpart2507:                               ; preds = %originalBB505
  br i1 %1785, label %1794, label %1814, !dbg !795

1794:                                             ; preds = %originalBBpart2507
  %1795 = load i32, i32* @x.3
  %1796 = load i32, i32* @y.4
  %1797 = sub i32 %1795, 1
  %1798 = mul i32 %1795, %1797
  %1799 = urem i32 %1798, 2
  %1800 = icmp eq i32 %1799, 0
  %1801 = icmp slt i32 %1796, 10
  %1802 = or i1 %1800, %1801
  br i1 %1802, label %originalBB509, label %originalBB509alteredBB

originalBB509:                                    ; preds = %1794, %originalBB509alteredBB
  %1803 = call i32* @__errno_location() #15, !dbg !796
  %1804 = load i32, i32* %1803, align 4, !dbg !796
  %1805 = call i8* @gettext(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.25, i64 0, i64 0)) #10, !dbg !796
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %1804, i8* %1805), !dbg !796
  %1806 = load i32, i32* @x.3
  %1807 = load i32, i32* @y.4
  %1808 = sub i32 %1806, 1
  %1809 = mul i32 %1806, %1808
  %1810 = urem i32 %1809, 2
  %1811 = icmp eq i32 %1810, 0
  %1812 = icmp slt i32 %1807, 10
  %1813 = or i1 %1811, %1812
  br i1 %1813, label %originalBBpart2511, label %originalBB509alteredBB

originalBBpart2511:                               ; preds = %originalBB509
  unreachable, !dbg !796

1814:                                             ; preds = %originalBBpart2507, %originalBBpart2503
  %1815 = load i32, i32* @x.3
  %1816 = load i32, i32* @y.4
  %1817 = sub i32 %1815, 1
  %1818 = mul i32 %1815, %1817
  %1819 = urem i32 %1818, 2
  %1820 = icmp eq i32 %1819, 0
  %1821 = icmp slt i32 %1816, 10
  %1822 = or i1 %1820, %1821
  br i1 %1822, label %originalBB513, label %originalBB513alteredBB

originalBB513:                                    ; preds = %1814, %originalBB513alteredBB
  %1823 = call i32* @__errno_location() #15, !dbg !797
  store i32 0, i32* %1823, align 4, !dbg !798
  %1824 = call i32 @getgid() #10, !dbg !799
  store i32 %1824, i32* @rgid, align 4, !dbg !800
  %1825 = load i32, i32* @rgid, align 4, !dbg !801
  %1826 = load i32, i32* %23, align 4, !dbg !803
  %1827 = icmp eq i32 %1825, %1826, !dbg !804
  %1828 = load i32, i32* @x.3
  %1829 = load i32, i32* @y.4
  %1830 = sub i32 %1828, 1
  %1831 = mul i32 %1828, %1830
  %1832 = urem i32 %1831, 2
  %1833 = icmp eq i32 %1832, 0
  %1834 = icmp slt i32 %1829, 10
  %1835 = or i1 %1833, %1834
  br i1 %1835, label %originalBBpart2515, label %originalBB513alteredBB

originalBBpart2515:                               ; preds = %originalBB513
  br i1 %1827, label %1836, label %1876, !dbg !805

1836:                                             ; preds = %originalBBpart2515
  %1837 = load i32, i32* @x.3
  %1838 = load i32, i32* @y.4
  %1839 = sub i32 %1837, 1
  %1840 = mul i32 %1837, %1839
  %1841 = urem i32 %1840, 2
  %1842 = icmp eq i32 %1841, 0
  %1843 = icmp slt i32 %1838, 10
  %1844 = or i1 %1842, %1843
  br i1 %1844, label %originalBB517, label %originalBB517alteredBB

originalBB517:                                    ; preds = %1836, %originalBB517alteredBB
  %1845 = call i32* @__errno_location() #15, !dbg !806
  %1846 = load i32, i32* %1845, align 4, !dbg !806
  %1847 = icmp ne i32 %1846, 0, !dbg !806
  %1848 = load i32, i32* @x.3
  %1849 = load i32, i32* @y.4
  %1850 = sub i32 %1848, 1
  %1851 = mul i32 %1848, %1850
  %1852 = urem i32 %1851, 2
  %1853 = icmp eq i32 %1852, 0
  %1854 = icmp slt i32 %1849, 10
  %1855 = or i1 %1853, %1854
  br i1 %1855, label %originalBBpart2519, label %originalBB517alteredBB

originalBBpart2519:                               ; preds = %originalBB517
  br i1 %1847, label %1856, label %1876, !dbg !807

1856:                                             ; preds = %originalBBpart2519
  %1857 = load i32, i32* @x.3
  %1858 = load i32, i32* @y.4
  %1859 = sub i32 %1857, 1
  %1860 = mul i32 %1857, %1859
  %1861 = urem i32 %1860, 2
  %1862 = icmp eq i32 %1861, 0
  %1863 = icmp slt i32 %1858, 10
  %1864 = or i1 %1862, %1863
  br i1 %1864, label %originalBB521, label %originalBB521alteredBB

originalBB521:                                    ; preds = %1856, %originalBB521alteredBB
  %1865 = call i32* @__errno_location() #15, !dbg !808
  %1866 = load i32, i32* %1865, align 4, !dbg !808
  %1867 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.26, i64 0, i64 0)) #10, !dbg !808
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %1866, i8* %1867), !dbg !808
  %1868 = load i32, i32* @x.3
  %1869 = load i32, i32* @y.4
  %1870 = sub i32 %1868, 1
  %1871 = mul i32 %1868, %1870
  %1872 = urem i32 %1871, 2
  %1873 = icmp eq i32 %1872, 0
  %1874 = icmp slt i32 %1869, 10
  %1875 = or i1 %1873, %1874
  br i1 %1875, label %originalBBpart2523, label %originalBB521alteredBB

originalBBpart2523:                               ; preds = %originalBB521
  unreachable, !dbg !808

1876:                                             ; preds = %originalBBpart2519, %originalBBpart2515
  %1877 = load i32, i32* @x.3
  %1878 = load i32, i32* @y.4
  %1879 = sub i32 %1877, 1
  %1880 = mul i32 %1877, %1879
  %1881 = urem i32 %1880, 2
  %1882 = icmp eq i32 %1881, 0
  %1883 = icmp slt i32 %1878, 10
  %1884 = or i1 %1882, %1883
  br i1 %1884, label %originalBB525, label %originalBB525alteredBB

originalBB525:                                    ; preds = %1876, %originalBB525alteredBB
  %1885 = load i32, i32* @x.3
  %1886 = load i32, i32* @y.4
  %1887 = sub i32 %1885, 1
  %1888 = mul i32 %1885, %1887
  %1889 = urem i32 %1888, 2
  %1890 = icmp eq i32 %1889, 0
  %1891 = icmp slt i32 %1886, 10
  %1892 = or i1 %1890, %1891
  br i1 %1892, label %originalBBpart2527, label %originalBB525alteredBB

originalBBpart2527:                               ; preds = %originalBB525
  br label %1893, !dbg !809

1893:                                             ; preds = %originalBBpart2527, %originalBBpart2499, %originalBBpart2487
  %1894 = load i32, i32* @x.3
  %1895 = load i32, i32* @y.4
  %1896 = sub i32 %1894, 1
  %1897 = mul i32 %1894, %1896
  %1898 = urem i32 %1897, 2
  %1899 = icmp eq i32 %1898, 0
  %1900 = icmp slt i32 %1895, 10
  %1901 = or i1 %1899, %1900
  br i1 %1901, label %originalBB529, label %originalBB529alteredBB

originalBB529:                                    ; preds = %1893, %originalBB529alteredBB
  %1902 = load i8*, i8** %17, align 8, !dbg !810
  call void @print_stuff(i8* %1902), !dbg !811
  %1903 = load i32, i32* @x.3
  %1904 = load i32, i32* @y.4
  %1905 = sub i32 %1903, 1
  %1906 = mul i32 %1903, %1905
  %1907 = urem i32 %1906, 2
  %1908 = icmp eq i32 %1907, 0
  %1909 = icmp slt i32 %1904, 10
  %1910 = or i1 %1908, %1909
  br i1 %1910, label %originalBBpart2531, label %originalBB529alteredBB

originalBBpart2531:                               ; preds = %originalBB529
  br label %1911

1911:                                             ; preds = %originalBBpart2531, %originalBBpart2411
  %1912 = load i32, i32* @x.3
  %1913 = load i32, i32* @y.4
  %1914 = sub i32 %1912, 1
  %1915 = mul i32 %1912, %1914
  %1916 = urem i32 %1915, 2
  %1917 = icmp eq i32 %1916, 0
  %1918 = icmp slt i32 %1913, 10
  %1919 = or i1 %1917, %1918
  br i1 %1919, label %originalBB533, label %originalBB533alteredBB

originalBB533:                                    ; preds = %1911, %originalBB533alteredBB
  %1920 = load i8, i8* @ok, align 1, !dbg !812
  %1921 = trunc i8 %1920 to i1, !dbg !812
  %1922 = zext i1 %1921 to i64, !dbg !812
  %1923 = select i1 %1921, i32 0, i32 1, !dbg !812
  %1924 = load i32, i32* @x.3
  %1925 = load i32, i32* @y.4
  %1926 = sub i32 %1924, 1
  %1927 = mul i32 %1924, %1926
  %1928 = urem i32 %1927, 2
  %1929 = icmp eq i32 %1928, 0
  %1930 = icmp slt i32 %1925, 10
  %1931 = or i1 %1929, %1930
  br i1 %1931, label %originalBBpart2535, label %originalBB533alteredBB

originalBBpart2535:                               ; preds = %originalBB533
  ret i32 %1923, !dbg !813

originalBBalteredBB:                              ; preds = %originalBB, %2
  store i8** %1, i8*** @inVal1
  store i32 %0, i32* @inVal0
  %1932 = alloca i32, align 4
  %1933 = alloca i32, align 4
  %1934 = alloca i8**, align 8
  %1935 = alloca i32, align 4
  %1936 = alloca i32, align 4
  %1937 = alloca i8, align 1
  %1938 = alloca i8*, align 8
  %1939 = alloca i64, align 8
  %1940 = alloca i8, align 1
  %1941 = alloca %struct.passwd*, align 8
  %1942 = alloca i8*, align 8
  %1943 = alloca i32, align 4
  %1944 = alloca i32, align 4
  store i32 0, i32* %1932, align 4
  store i32 %0, i32* %1933, align 4
  call void @llvm.dbg.declare(metadata i32* %1933, metadata !814, metadata !DIExpression()), !dbg !514
  store i8** %1, i8*** %1934, align 8
  call void @llvm.dbg.declare(metadata i8*** %1934, metadata !862, metadata !DIExpression()), !dbg !516
  call void @llvm.dbg.declare(metadata i32* %1935, metadata !863, metadata !DIExpression()), !dbg !518
  call void @llvm.dbg.declare(metadata i32* %1936, metadata !864, metadata !DIExpression()), !dbg !520
  store i32 0, i32* %1936, align 4, !dbg !520
  call void @llvm.dbg.declare(metadata i8* %1937, metadata !865, metadata !DIExpression()), !dbg !522
  %1945 = call zeroext i1 @is_smack_enabled(), !dbg !523
  %1946 = zext i1 %1945 to i8, !dbg !522
  store i8 %1946, i8* %1937, align 1, !dbg !522
  call void @llvm.dbg.declare(metadata i8** %1938, metadata !866, metadata !DIExpression()), !dbg !525
  store i8* null, i8** %1938, align 8, !dbg !525
  %1947 = load i8**, i8*** %1934, align 8, !dbg !526
  %1948 = getelementptr inbounds i8*, i8** %1947, i64 0, !dbg !526
  %1949 = load i8*, i8** %1948, align 8, !dbg !526
  call void @set_program_name(i8* %1949), !dbg !527
  %1950 = call i8* @setlocale(i32 6, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.8, i64 0, i64 0)) #10, !dbg !528
  %1951 = call i8* @bindtextdomain(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.10, i64 0, i64 0)) #10, !dbg !529
  %1952 = call i8* @textdomain(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9, i64 0, i64 0)) #10, !dbg !530
  %1953 = call i32 @atexit(void ()* @close_stdout) #10, !dbg !531
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %41
  %1954 = load i32, i32* %12, align 4, !dbg !533
  %1955 = load i8**, i8*** %13, align 8, !dbg !534
  %1956 = call i32 @getopt_long(i32 %1954, i8** %1955, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.11, i64 0, i64 0), %struct.option* getelementptr inbounds ([10 x %struct.option], [10 x %struct.option]* @longopts, i64 0, i64 0), i32* null) #10, !dbg !535
  store i32 %1956, i32* %14, align 4, !dbg !536
  %1957 = icmp ne i32 %1956, -1, !dbg !537
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %62
  %1958 = load i32, i32* %14, align 4, !dbg !538
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %80
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %97
  %1959 = load i32, i32* %15, align 4, !dbg !543
  %1960 = icmp ne i32 %1959, 0, !dbg !543
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %116
  %1961 = call i8* @gettext(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.12, i64 0, i64 0)) #10, !dbg !546
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %1961), !dbg !546
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %134
  store i8 1, i8* @just_context, align 1, !dbg !547
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %151
  store i8 1, i8* @just_group, align 1, !dbg !549
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %168
  store i8 1, i8* @use_name, align 1, !dbg !551
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %185
  store i8 1, i8* @use_real, align 1, !dbg !553
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %202
  store i8 1, i8* @just_user, align 1, !dbg !555
  br label %originalBB38

originalBB42alteredBB:                            ; preds = %originalBB42, %219
  store i8 1, i8* @opt_zero, align 1, !dbg !557
  br label %originalBB42

originalBB46alteredBB:                            ; preds = %originalBB46, %236
  store i8 1, i8* @just_group_list, align 1, !dbg !559
  br label %originalBB46

originalBB50alteredBB:                            ; preds = %originalBB50, %253
  call void @usage(i32 0) #14, !dbg !561
  br label %originalBB50

originalBB54alteredBB:                            ; preds = %originalBB54, %270
  %1962 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !562
  %1963 = load i8*, i8** @Version, align 8, !dbg !562
  call void (%struct._IO_FILE*, i8*, i8*, i8*, ...) @version_etc(%struct._IO_FILE* %1962, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.13, i64 0, i64 0), i8* %1963, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.15, i64 0, i64 0), i8* null), !dbg !562
  call void @exit(i32 0) #12, !dbg !562
  br label %originalBB54

originalBB58alteredBB:                            ; preds = %originalBB58, %289
  call void @usage(i32 1) #14, !dbg !563
  br label %originalBB58

originalBB62alteredBB:                            ; preds = %originalBB62, %306
  br label %originalBB62

originalBB66alteredBB:                            ; preds = %originalBB66, %323
  %1964 = load i32, i32* %12, align 4, !dbg !568
  %1965 = load i32, i32* @optind, align 4, !dbg !569
  %_ = sub i32 0, %1964
  %gen = add i32 %_, %1965
  %_67 = sub i32 %1964, %1965
  %gen68 = mul i32 %_67, %1965
  %_69 = sub i32 0, %1964
  %gen70 = add i32 %_69, %1965
  %_71 = sub i32 %1964, %1965
  %gen72 = mul i32 %_71, %1965
  %1966 = sub nsw i32 %1964, %1965, !dbg !570
  %1967 = sext i32 %1966 to i64, !dbg !568
  store i64 %1967, i64* %18, align 8, !dbg !567
  %1968 = load i64, i64* %18, align 8, !dbg !571
  %1969 = icmp ne i64 %1968, 0, !dbg !571
  br label %originalBB66

originalBB76alteredBB:                            ; preds = %originalBB76, %346
  %1970 = load i8, i8* @just_context, align 1, !dbg !574
  %1971 = trunc i8 %1970 to i1, !dbg !574
  br label %originalBB76

originalBB80alteredBB:                            ; preds = %originalBB80, %365
  %1972 = call i8* @gettext(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.16, i64 0, i64 0)) #10, !dbg !576
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %1972), !dbg !576
  br label %originalBB80

originalBB84alteredBB:                            ; preds = %originalBB84, %383
  %1973 = load i8, i8* @just_user, align 1, !dbg !577
  %1974 = trunc i8 %1973 to i1, !dbg !577
  %1975 = zext i1 %1974 to i32, !dbg !577
  %1976 = load i8, i8* @just_group, align 1, !dbg !579
  %1977 = trunc i8 %1976 to i1, !dbg !579
  %1978 = zext i1 %1977 to i32, !dbg !579
  %_85 = shl i32 %1975, %1978
  %_86 = sub i32 0, %1975
  %gen87 = add i32 %_86, %1978
  %_88 = shl i32 %1975, %1978
  %_89 = sub i32 %1975, %1978
  %gen90 = mul i32 %_89, %1978
  %1979 = add nsw i32 %1975, %1978, !dbg !580
  %1980 = load i8, i8* @just_group_list, align 1, !dbg !581
  %1981 = trunc i8 %1980 to i1, !dbg !581
  %1982 = zext i1 %1981 to i32, !dbg !581
  %_91 = sub i32 %1979, %1982
  %gen92 = mul i32 %_91, %1982
  %_93 = sub i32 0, %1979
  %gen94 = add i32 %_93, %1982
  %_95 = sub i32 %1979, %1982
  %gen96 = mul i32 %_95, %1982
  %_97 = sub i32 %1979, %1982
  %gen98 = mul i32 %_97, %1982
  %_99 = sub i32 0, %1979
  %gen100 = add i32 %_99, %1982
  %1983 = add nsw i32 %1979, %1982, !dbg !582
  %1984 = load i8, i8* @just_context, align 1, !dbg !583
  %1985 = trunc i8 %1984 to i1, !dbg !583
  %1986 = zext i1 %1985 to i32, !dbg !583
  %_101 = sub i32 %1983, %1986
  %gen102 = mul i32 %_101, %1986
  %1987 = add nsw i32 %1983, %1986, !dbg !584
  %1988 = icmp sgt i32 %1987, 1, !dbg !585
  br label %originalBB84

originalBB106alteredBB:                           ; preds = %originalBB106, %416
  %1989 = call i8* @gettext(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.17, i64 0, i64 0)) #10, !dbg !587
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %1989), !dbg !587
  br label %originalBB106

originalBB110alteredBB:                           ; preds = %originalBB110, %434
  %1990 = load i8, i8* @just_user, align 1, !dbg !590
  %1991 = trunc i8 %1990 to i1, !dbg !590
  br label %originalBB110

originalBB114alteredBB:                           ; preds = %originalBB114, %453
  %1992 = load i8, i8* @just_group, align 1, !dbg !592
  %1993 = trunc i8 %1992 to i1, !dbg !592
  br label %originalBB114

originalBB118alteredBB:                           ; preds = %originalBB118, %472
  %1994 = load i8, i8* @just_group_list, align 1, !dbg !594
  %1995 = trunc i8 %1994 to i1, !dbg !594
  br label %originalBB118

originalBB122alteredBB:                           ; preds = %originalBB122, %491
  %1996 = load i8, i8* @just_context, align 1, !dbg !596
  %1997 = trunc i8 %1996 to i1, !dbg !596
  br label %originalBB122

originalBB126alteredBB:                           ; preds = %originalBB126, %510
  %_127 = sub i1 false, %511
  %gen128 = add i1 %_127, true
  %_129 = sub i1 %511, true
  %gen130 = mul i1 %_129, true
  %_131 = shl i1 %511, true
  %_132 = sub i1 %511, true
  %gen133 = mul i1 %_132, true
  %_134 = sub i1 %511, true
  %gen135 = mul i1 %_134, true
  %_136 = sub i1 false, %511
  %gen137 = add i1 %_136, true
  %_138 = sub i1 false, %511
  %gen139 = add i1 %_138, true
  %1998 = xor i1 %511, true, !dbg !597
  %1999 = zext i1 %1998 to i8, !dbg !589
  store i8 %1999, i8* %19, align 1, !dbg !589
  %2000 = load i8, i8* %19, align 1, !dbg !598
  %2001 = trunc i8 %2000 to i1, !dbg !598
  br label %originalBB126

originalBB143alteredBB:                           ; preds = %originalBB143, %532
  %2002 = load i8, i8* @use_real, align 1, !dbg !601
  %2003 = trunc i8 %2002 to i1, !dbg !601
  br label %originalBB143

originalBB147alteredBB:                           ; preds = %originalBB147, %551
  %2004 = load i8, i8* @use_name, align 1, !dbg !603
  %2005 = trunc i8 %2004 to i1, !dbg !603
  br label %originalBB147

originalBB151alteredBB:                           ; preds = %originalBB151, %570
  %2006 = call i8* @gettext(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.18, i64 0, i64 0)) #10, !dbg !605
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %2006), !dbg !605
  br label %originalBB151

originalBB155alteredBB:                           ; preds = %originalBB155, %588
  %2007 = load i8, i8* %19, align 1, !dbg !606
  %2008 = trunc i8 %2007 to i1, !dbg !606
  br label %originalBB155

originalBB159alteredBB:                           ; preds = %originalBB159, %607
  %2009 = load i8, i8* @opt_zero, align 1, !dbg !609
  %2010 = trunc i8 %2009 to i1, !dbg !609
  br label %originalBB159

originalBB163alteredBB:                           ; preds = %originalBB163, %626
  %2011 = call i8* @gettext(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.19, i64 0, i64 0)) #10, !dbg !611
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %2011), !dbg !611
  br label %originalBB163

originalBB167alteredBB:                           ; preds = %originalBB167, %644
  %2012 = load i64, i64* %18, align 8, !dbg !612
  br label %originalBB167

originalBB171alteredBB:                           ; preds = %originalBB171, %662
  %collatzVaralteredBB = alloca i32
  br label %originalBB171

originalBB175alteredBB:                           ; preds = %originalBB175, %679
  %2013 = load i32, i32* @inVal0
  %2014 = icmp sgt i32 %2013, 1
  br label %originalBB175

originalBB179alteredBB:                           ; preds = %originalBB179, %698
  store i32 88, i32* %collatzVar
  br label %originalBB179

originalBB183alteredBB:                           ; preds = %originalBB183, %715
  %2015 = load i8**, i8*** @inVal1
  %2016 = getelementptr inbounds i8*, i8** %2015, i64 1
  %2017 = load i8*, i8** %2016
  %2018 = trunc i64 0 to i32
  %controlealteredBB = call i32 @controle(i8* %2017, i32 %2018)
  store i32 %controlealteredBB, i32* %collatzVar
  br label %originalBB183

originalBB187alteredBB:                           ; preds = %originalBB187, %736
  %2019 = load i32, i32* %collatzVar
  %2020 = icmp sgt i32 %2019, 1
  br label %originalBB187

originalBB191alteredBB:                           ; preds = %originalBB191, %755
  %2021 = load i32, i32* %collatzVar
  %_192 = sub i32 %2021, 2
  %gen193 = mul i32 %_192, 2
  %_194 = shl i32 %2021, 2
  %_195 = sub i32 0, %2021
  %gen196 = add i32 %_195, 2
  %_197 = sub i32 %2021, 2
  %gen198 = mul i32 %_197, 2
  %_199 = sub i32 %2021, 2
  %gen200 = mul i32 %_199, 2
  %_201 = shl i32 %2021, 2
  %_202 = sub i32 %2021, 2
  %gen203 = mul i32 %_202, 2
  %2022 = srem i32 %2021, 2
  %2023 = icmp eq i32 %2022, 0
  br label %originalBB191

originalBB207alteredBB:                           ; preds = %originalBB207, %775
  %2024 = load i32, i32* %collatzVar
  %_208 = shl i32 %2024, 2
  %_209 = shl i32 %2024, 2
  %_210 = sub i32 0, %2024
  %gen211 = add i32 %_210, 2
  %_212 = shl i32 %2024, 2
  %_213 = shl i32 %2024, 2
  %_214 = sub i32 %2024, 2
  %gen215 = mul i32 %_214, 2
  %_216 = shl i32 %2024, 2
  %2025 = sdiv i32 %2024, 2
  store i32 %2025, i32* %collatzVar
  br label %originalBB207

originalBB221alteredBB:                           ; preds = %originalBB221, %794
  %2026 = load i32, i32* %collatzVar
  %_222 = shl i32 %2026, 3
  %_223 = shl i32 %2026, 3
  %_224 = sub i32 0, %2026
  %gen225 = add i32 %_224, 3
  %_226 = sub i32 %2026, 3
  %gen227 = mul i32 %_226, 3
  %_228 = sub i32 0, %2026
  %gen229 = add i32 %_228, 3
  %_230 = sub i32 %2026, 3
  %gen231 = mul i32 %_230, 3
  %_232 = sub i32 0, %2026
  %gen233 = add i32 %_232, 3
  %_234 = sub i32 0, %2026
  %gen235 = add i32 %_234, 3
  %_236 = sub i32 %2026, 3
  %gen237 = mul i32 %_236, 3
  %_238 = sub i32 0, %2026
  %gen239 = add i32 %_238, 3
  %2027 = mul i32 %2026, 3
  %_240 = sub i32 %2027, 1
  %gen241 = mul i32 %_240, 1
  %_242 = shl i32 %2027, 1
  %_243 = sub i32 %2027, 1
  %gen244 = mul i32 %_243, 1
  %_245 = sub i32 0, %2027
  %gen246 = add i32 %_245, 1
  %_247 = sub i32 0, %2027
  %gen248 = add i32 %_247, 1
  %_249 = sub i32 0, %2027
  %gen250 = add i32 %_249, 1
  %_251 = shl i32 %2027, 1
  %_252 = shl i32 %2027, 1
  %_253 = shl i32 %2027, 1
  %2028 = add i32 %2027, 1
  store i32 %2028, i32* %collatzVar
  br label %originalBB221

originalBB257alteredBB:                           ; preds = %originalBB257, %814
  %2029 = load i32, i32* %collatzVar
  %2030 = sext i32 %2029 to i64
  %2031 = sext i32 -2 to i64
  %_258 = sub i64 %653, %2030
  %gen259 = mul i64 %_258, %2030
  %_260 = sub i64 %653, %2030
  %gen261 = mul i64 %_260, %2030
  %_262 = sub i64 %653, %2030
  %gen263 = mul i64 %_262, %2030
  %_264 = shl i64 %653, %2030
  %_265 = sub i64 %653, %2030
  %gen266 = mul i64 %_265, %2030
  %_267 = sub i64 %653, %2030
  %gen268 = mul i64 %_267, %2030
  %2032 = sub i64 %653, %2030
  %2033 = icmp sgt i64 %2032, %2031
  br label %originalBB257

originalBB272alteredBB:                           ; preds = %originalBB272, %836
  %2034 = load i32, i32* %collatzVar
  %2035 = sext i32 %2034 to i64
  %2036 = sext i32 2 to i64
  %_273 = sub i64 0, %653
  %gen274 = add i64 %_273, %2035
  %_275 = sub i64 %653, %2035
  %gen276 = mul i64 %_275, %2035
  %_277 = shl i64 %653, %2035
  %_278 = sub i64 %653, %2035
  %gen279 = mul i64 %_278, %2035
  %_280 = sub i64 %653, %2035
  %gen281 = mul i64 %_280, %2035
  %2037 = add i64 %653, %2035
  %2038 = icmp slt i64 %2037, %2036
  br label %originalBB272

originalBB285alteredBB:                           ; preds = %originalBB285, %858
  %2039 = load i8, i8* @just_context, align 1, !dbg !615
  %2040 = trunc i8 %2039 to i1, !dbg !615
  br label %originalBB285

originalBB289alteredBB:                           ; preds = %originalBB289, %877
  %2041 = load i8, i8* %19, align 1, !dbg !617
  %2042 = trunc i8 %2041 to i1, !dbg !617
  br label %originalBB289

originalBB293alteredBB:                           ; preds = %originalBB293, %896
  %2043 = call i8* @getenv(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.20, i64 0, i64 0)) #10, !dbg !619
  %2044 = icmp ne i8* %2043, null, !dbg !619
  br label %originalBB293

originalBB297alteredBB:                           ; preds = %originalBB297, %915
  %2045 = load i32, i32* %15, align 4, !dbg !621
  %2046 = icmp ne i32 %2045, 0, !dbg !621
  br label %originalBB297

originalBB301alteredBB:                           ; preds = %originalBB301, %934
  %2047 = call i32 @getcon(i8** @context), !dbg !625
  %2048 = icmp ne i32 %2047, 0, !dbg !625
  br label %originalBB301

originalBB305alteredBB:                           ; preds = %originalBB305, %953
  %2049 = load i8, i8* @just_context, align 1, !dbg !627
  %2050 = trunc i8 %2049 to i1, !dbg !627
  br label %originalBB305

originalBB309alteredBB:                           ; preds = %originalBB309, %972
  %2051 = load i8, i8* %16, align 1, !dbg !629
  %2052 = trunc i8 %2051 to i1, !dbg !629
  br label %originalBB309

originalBB313alteredBB:                           ; preds = %originalBB313, %991
  %2053 = call i64 @smack_new_label_from_self(i8** @context), !dbg !631
  %2054 = icmp slt i64 %2053, 0, !dbg !632
  br label %originalBB313

originalBB317alteredBB:                           ; preds = %originalBB317, %1010
  %2055 = load i8, i8* @just_context, align 1, !dbg !634
  %2056 = trunc i8 %2055 to i1, !dbg !634
  br label %originalBB317

originalBB321alteredBB:                           ; preds = %originalBB321, %1029
  %2057 = call i8* @gettext(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.21, i64 0, i64 0)) #10, !dbg !636
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %2057), !dbg !636
  br label %originalBB321

originalBB325alteredBB:                           ; preds = %originalBB325, %1047
  br label %originalBB325

originalBB329alteredBB:                           ; preds = %originalBB329, %1064
  %2058 = load i64, i64* %18, align 8, !dbg !638
  %2059 = icmp uge i64 %2058, 1, !dbg !640
  br label %originalBB329

originalBB333alteredBB:                           ; preds = %originalBB333, %1083
  %2060 = load i64, i64* %18, align 8, !dbg !642
  %2061 = icmp ugt i64 %2060, 1, !dbg !644
  %2062 = zext i1 %2061 to i64, !dbg !642
  %2063 = select i1 %2061, i32 1, i32 0, !dbg !642
  %2064 = icmp ne i32 %2063, 0, !dbg !642
  %2065 = zext i1 %2064 to i8, !dbg !645
  store i8 %2065, i8* @multiple_users, align 1, !dbg !645
  %2066 = load i32, i32* @optind, align 4, !dbg !646
  %2067 = sext i32 %2066 to i64, !dbg !646
  %2068 = load i64, i64* %18, align 8, !dbg !647
  %_334 = sub i64 %2068, %2067
  %gen335 = mul i64 %_334, %2067
  %_336 = shl i64 %2068, %2067
  %_337 = sub i64 %2068, %2067
  %gen338 = mul i64 %_337, %2067
  %_339 = sub i64 %2068, %2067
  %gen340 = mul i64 %_339, %2067
  %_341 = sub i64 %2068, %2067
  %gen342 = mul i64 %_341, %2067
  %_343 = sub i64 %2068, %2067
  %gen344 = mul i64 %_343, %2067
  %_345 = sub i64 %2068, %2067
  %gen346 = mul i64 %_345, %2067
  %_347 = sub i64 %2068, %2067
  %gen348 = mul i64 %_347, %2067
  %2069 = add i64 %2068, %2067, !dbg !647
  store i64 %2069, i64* %18, align 8, !dbg !647
  br label %originalBB333

originalBB352alteredBB:                           ; preds = %originalBB352, %1110
  %2070 = load i32, i32* @optind, align 4, !dbg !649
  %2071 = sext i32 %2070 to i64, !dbg !649
  %2072 = load i64, i64* %18, align 8, !dbg !652
  %2073 = icmp ult i64 %2071, %2072, !dbg !653
  br label %originalBB352

originalBB356alteredBB:                           ; preds = %originalBB356, %1131
  store %struct.passwd* null, %struct.passwd** %20, align 8, !dbg !668
  call void @llvm.dbg.declare(metadata !4, metadata !867, metadata !DIExpression()), !dbg !670
  %2074 = load i8**, i8*** %13, align 8, !dbg !671
  %2075 = load i32, i32* @optind, align 4, !dbg !672
  %2076 = sext i32 %2075 to i64, !dbg !671
  %2077 = getelementptr inbounds i8*, i8** %2074, i64 %2076, !dbg !671
  %2078 = load i8*, i8** %2077, align 8, !dbg !671
  store i8* %2078, i8** %21, align 8, !dbg !670
  %2079 = load i8*, i8** %21, align 8, !dbg !673
  %2080 = load i8, i8* %2079, align 1, !dbg !675
  %2081 = icmp ne i8 %2080, 0, !dbg !675
  br label %originalBB356

originalBB360alteredBB:                           ; preds = %originalBB360, %1156
  %2082 = load i8*, i8** %21, align 8, !dbg !677
  %2083 = call i8* @parse_user_spec(i8* %2082, i32* @euid, i32* null, i8** null, i8** null), !dbg !680
  %2084 = icmp eq i8* %2083, null, !dbg !681
  br label %originalBB360

originalBB364alteredBB:                           ; preds = %originalBB364, %1176
  %2085 = load i32, i32* @euid, align 4, !dbg !683
  %2086 = call %struct.passwd* @getpwuid(i32 %2085), !dbg !685
  store %struct.passwd* %2086, %struct.passwd** %20, align 8, !dbg !686
  br label %originalBB364

originalBB368alteredBB:                           ; preds = %originalBB368, %1195
  br label %originalBB368

originalBB372alteredBB:                           ; preds = %originalBB372, %1212
  %2087 = load %struct.passwd*, %struct.passwd** %20, align 8, !dbg !689
  %2088 = icmp eq %struct.passwd* %2087, null, !dbg !691
  br label %originalBB372

originalBB376alteredBB:                           ; preds = %originalBB376, %1231
  %2089 = call i32* @__errno_location() #15, !dbg !693
  %2090 = load i32, i32* %2089, align 4, !dbg !693
  %2091 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.22, i64 0, i64 0)) #10, !dbg !695
  %2092 = load i8**, i8*** %13, align 8, !dbg !696
  %2093 = load i32, i32* @optind, align 4, !dbg !697
  %2094 = sext i32 %2093 to i64, !dbg !696
  %2095 = getelementptr inbounds i8*, i8** %2092, i64 %2094, !dbg !696
  %2096 = load i8*, i8** %2095, align 8, !dbg !696
  %2097 = call i8* @quote(i8* %2096), !dbg !698
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %2090, i8* %2091, i8* %2097), !dbg !699
  %2098 = load i8, i8* @ok, align 1, !dbg !700
  %2099 = trunc i8 %2098 to i1, !dbg !700
  %2100 = zext i1 %2099 to i32, !dbg !700
  %_377 = sub i32 %2100, 0
  %gen378 = mul i32 %_377, 0
  %_379 = sub i32 0, %2100
  %gen380 = add i32 %_379, 0
  %_381 = sub i32 %2100, 0
  %gen382 = mul i32 %_381, 0
  %_383 = shl i32 %2100, 0
  %_384 = sub i32 %2100, 0
  %gen385 = mul i32 %_384, 0
  %_386 = sub i32 0, %2100
  %gen387 = add i32 %_386, 0
  %_388 = shl i32 %2100, 0
  %_389 = shl i32 %2100, 0
  %_390 = sub i32 %2100, 0
  %gen391 = mul i32 %_390, 0
  %2101 = and i32 %2100, 0, !dbg !700
  %2102 = icmp ne i32 %2101, 0, !dbg !700
  %2103 = zext i1 %2102 to i8, !dbg !700
  store i8 %2103, i8* @ok, align 1, !dbg !700
  br label %originalBB376

originalBB395alteredBB:                           ; preds = %originalBB395, %1263
  %2104 = load %struct.passwd*, %struct.passwd** %20, align 8, !dbg !702
  %2105 = getelementptr inbounds %struct.passwd, %struct.passwd* %2104, i32 0, i32 0, !dbg !703
  %2106 = load i8*, i8** %2105, align 8, !dbg !703
  %2107 = call noalias i8* @xstrdup(i8* %2106), !dbg !704
  store i8* %2107, i8** %17, align 8, !dbg !705
  %2108 = load %struct.passwd*, %struct.passwd** %20, align 8, !dbg !706
  %2109 = getelementptr inbounds %struct.passwd, %struct.passwd* %2108, i32 0, i32 2, !dbg !707
  %2110 = load i32, i32* %2109, align 8, !dbg !707
  store i32 %2110, i32* @euid, align 4, !dbg !708
  store i32 %2110, i32* @ruid, align 4, !dbg !709
  %2111 = load %struct.passwd*, %struct.passwd** %20, align 8, !dbg !710
  %2112 = getelementptr inbounds %struct.passwd, %struct.passwd* %2111, i32 0, i32 3, !dbg !711
  %2113 = load i32, i32* %2112, align 4, !dbg !711
  store i32 %2113, i32* @egid, align 4, !dbg !712
  store i32 %2113, i32* @rgid, align 4, !dbg !713
  %2114 = load i8*, i8** %17, align 8, !dbg !714
  call void @print_stuff(i8* %2114), !dbg !715
  %2115 = load i8*, i8** %17, align 8, !dbg !716
  call void @free(i8* %2115) #10, !dbg !717
  br label %originalBB395

originalBB399alteredBB:                           ; preds = %originalBB399, %1292
  %2116 = load i32, i32* @optind, align 4, !dbg !719
  %_400 = sub i32 %2116, 1
  %gen401 = mul i32 %_400, 1
  %_402 = sub i32 0, %2116
  %gen403 = add i32 %_402, 1
  %_404 = shl i32 %2116, 1
  %_405 = shl i32 %2116, 1
  %2117 = add nsw i32 %2116, 1, !dbg !719
  store i32 %2117, i32* @optind, align 4, !dbg !719
  br label %originalBB399

originalBB409alteredBB:                           ; preds = %originalBB409, %1311
  br label %originalBB409

originalBB413alteredBB:                           ; preds = %originalBB413, %1328
  store i32 -1, i32* %22, align 4, !dbg !726
  call void @llvm.dbg.declare(metadata !4, metadata !920, metadata !DIExpression()), !dbg !728
  store i32 -1, i32* %23, align 4, !dbg !728
  %2118 = load i8, i8* @just_user, align 1, !dbg !729
  %2119 = trunc i8 %2118 to i1, !dbg !729
  br label %originalBB413

originalBB417alteredBB:                           ; preds = %originalBB417, %1347
  %2120 = load i8, i8* @use_real, align 1, !dbg !732
  %2121 = trunc i8 %2120 to i1, !dbg !732
  br label %originalBB417

originalBB421alteredBB:                           ; preds = %originalBB421, %1366
  %2122 = load i8, i8* @just_group, align 1, !dbg !733
  %2123 = trunc i8 %2122 to i1, !dbg !733
  br label %originalBB421

originalBB425alteredBB:                           ; preds = %originalBB425, %1385
  %2124 = load i8, i8* @just_group_list, align 1, !dbg !735
  %2125 = trunc i8 %2124 to i1, !dbg !735
  br label %originalBB425

originalBB429alteredBB:                           ; preds = %originalBB429, %1404
  %2126 = load i8, i8* @just_context, align 1, !dbg !737
  %2127 = trunc i8 %2126 to i1, !dbg !737
  br label %originalBB429

originalBB433alteredBB:                           ; preds = %originalBB433, %1423
  %2128 = call i32* @__errno_location() #15, !dbg !738
  store i32 0, i32* %2128, align 4, !dbg !740
  %2129 = call i32 @geteuid() #10, !dbg !741
  store i32 %2129, i32* @euid, align 4, !dbg !742
  %2130 = load i32, i32* @euid, align 4, !dbg !743
  %2131 = load i32, i32* %22, align 4, !dbg !745
  %2132 = icmp eq i32 %2130, %2131, !dbg !746
  br label %originalBB433

originalBB437alteredBB:                           ; preds = %originalBB437, %1445
  %2133 = call i32* @__errno_location() #15, !dbg !748
  %2134 = load i32, i32* %2133, align 4, !dbg !748
  %2135 = icmp ne i32 %2134, 0, !dbg !748
  br label %originalBB437

originalBB441alteredBB:                           ; preds = %originalBB441, %1465
  %2136 = call i32* @__errno_location() #15, !dbg !750
  %2137 = load i32, i32* %2136, align 4, !dbg !750
  %2138 = call i8* @gettext(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.23, i64 0, i64 0)) #10, !dbg !750
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %2137, i8* %2138), !dbg !750
  br label %originalBB441

originalBB445alteredBB:                           ; preds = %originalBB445, %1485
  br label %originalBB445

originalBB449alteredBB:                           ; preds = %originalBB449, %1502
  %2139 = load i8, i8* @just_user, align 1, !dbg !752
  %2140 = trunc i8 %2139 to i1, !dbg !752
  br label %originalBB449

originalBB453alteredBB:                           ; preds = %originalBB453, %1521
  %2141 = load i8, i8* @use_real, align 1, !dbg !755
  %2142 = trunc i8 %2141 to i1, !dbg !755
  br label %originalBB453

originalBB457alteredBB:                           ; preds = %originalBB457, %1540
  %2143 = load i8, i8* @just_group, align 1, !dbg !756
  %2144 = trunc i8 %2143 to i1, !dbg !756
  br label %originalBB457

originalBB461alteredBB:                           ; preds = %originalBB461, %1559
  %2145 = load i8, i8* @just_group_list, align 1, !dbg !758
  %2146 = trunc i8 %2145 to i1, !dbg !758
  br label %originalBB461

originalBB465alteredBB:                           ; preds = %originalBB465, %1578
  %2147 = load i8, i8* @just_context, align 1, !dbg !760
  %2148 = trunc i8 %2147 to i1, !dbg !760
  br label %originalBB465

originalBB469alteredBB:                           ; preds = %originalBB469, %1597
  %2149 = call i32* @__errno_location() #15, !dbg !761
  store i32 0, i32* %2149, align 4, !dbg !763
  %2150 = call i32 @getuid() #10, !dbg !764
  store i32 %2150, i32* @ruid, align 4, !dbg !765
  %2151 = load i32, i32* @ruid, align 4, !dbg !766
  %2152 = load i32, i32* %22, align 4, !dbg !768
  %2153 = icmp eq i32 %2151, %2152, !dbg !769
  br label %originalBB469

originalBB473alteredBB:                           ; preds = %originalBB473, %1619
  %2154 = call i32* @__errno_location() #15, !dbg !771
  %2155 = load i32, i32* %2154, align 4, !dbg !771
  %2156 = icmp ne i32 %2155, 0, !dbg !771
  br label %originalBB473

originalBB477alteredBB:                           ; preds = %originalBB477, %1639
  %2157 = call i32* @__errno_location() #15, !dbg !773
  %2158 = load i32, i32* %2157, align 4, !dbg !773
  %2159 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.24, i64 0, i64 0)) #10, !dbg !773
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %2158, i8* %2159), !dbg !773
  br label %originalBB477

originalBB481alteredBB:                           ; preds = %originalBB481, %1659
  br label %originalBB481

originalBB485alteredBB:                           ; preds = %originalBB485, %1676
  %2160 = load i8, i8* @just_user, align 1, !dbg !775
  %2161 = trunc i8 %2160 to i1, !dbg !775
  br label %originalBB485

originalBB489alteredBB:                           ; preds = %originalBB489, %1695
  %2162 = load i8, i8* @just_group, align 1, !dbg !778
  %2163 = trunc i8 %2162 to i1, !dbg !778
  br label %originalBB489

originalBB493alteredBB:                           ; preds = %originalBB493, %1714
  %2164 = load i8, i8* @just_group_list, align 1, !dbg !780
  %2165 = trunc i8 %2164 to i1, !dbg !780
  br label %originalBB493

originalBB497alteredBB:                           ; preds = %originalBB497, %1733
  %2166 = load i8, i8* @just_context, align 1, !dbg !782
  %2167 = trunc i8 %2166 to i1, !dbg !782
  br label %originalBB497

originalBB501alteredBB:                           ; preds = %originalBB501, %1752
  %2168 = call i32* @__errno_location() #15, !dbg !784
  store i32 0, i32* %2168, align 4, !dbg !786
  %2169 = call i32 @getegid() #10, !dbg !787
  store i32 %2169, i32* @egid, align 4, !dbg !788
  %2170 = load i32, i32* @egid, align 4, !dbg !789
  %2171 = load i32, i32* %23, align 4, !dbg !791
  %2172 = icmp eq i32 %2170, %2171, !dbg !792
  br label %originalBB501

originalBB505alteredBB:                           ; preds = %originalBB505, %1774
  %2173 = call i32* @__errno_location() #15, !dbg !794
  %2174 = load i32, i32* %2173, align 4, !dbg !794
  %2175 = icmp ne i32 %2174, 0, !dbg !794
  br label %originalBB505

originalBB509alteredBB:                           ; preds = %originalBB509, %1794
  %2176 = call i32* @__errno_location() #15, !dbg !796
  %2177 = load i32, i32* %2176, align 4, !dbg !796
  %2178 = call i8* @gettext(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.25, i64 0, i64 0)) #10, !dbg !796
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %2177, i8* %2178), !dbg !796
  br label %originalBB509

originalBB513alteredBB:                           ; preds = %originalBB513, %1814
  %2179 = call i32* @__errno_location() #15, !dbg !797
  store i32 0, i32* %2179, align 4, !dbg !798
  %2180 = call i32 @getgid() #10, !dbg !799
  store i32 %2180, i32* @rgid, align 4, !dbg !800
  %2181 = load i32, i32* @rgid, align 4, !dbg !801
  %2182 = load i32, i32* %23, align 4, !dbg !803
  %2183 = icmp eq i32 %2181, %2182, !dbg !804
  br label %originalBB513

originalBB517alteredBB:                           ; preds = %originalBB517, %1836
  %2184 = call i32* @__errno_location() #15, !dbg !806
  %2185 = load i32, i32* %2184, align 4, !dbg !806
  %2186 = icmp ne i32 %2185, 0, !dbg !806
  br label %originalBB517

originalBB521alteredBB:                           ; preds = %originalBB521, %1856
  %2187 = call i32* @__errno_location() #15, !dbg !808
  %2188 = load i32, i32* %2187, align 4, !dbg !808
  %2189 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.26, i64 0, i64 0)) #10, !dbg !808
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %2188, i8* %2189), !dbg !808
  br label %originalBB521

originalBB525alteredBB:                           ; preds = %originalBB525, %1876
  br label %originalBB525

originalBB529alteredBB:                           ; preds = %originalBB529, %1893
  %2190 = load i8*, i8** %17, align 8, !dbg !810
  call void @print_stuff(i8* %2190), !dbg !811
  br label %originalBB529

originalBB533alteredBB:                           ; preds = %originalBB533, %1911
  %2191 = load i8, i8* @ok, align 1, !dbg !812
  %2192 = trunc i8 %2191 to i1, !dbg !812
  %2193 = zext i1 %2192 to i64, !dbg !812
  %2194 = select i1 %2192, i32 0, i32 1, !dbg !812
  br label %originalBB533
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @is_smack_enabled() #4 !dbg !970 {
  %1 = load i32, i32* @x.5
  %2 = load i32, i32* @y.6
  %3 = sub i32 %1, 1
  %4 = mul i32 %1, %3
  %5 = urem i32 %4, 2
  %6 = icmp eq i32 %5, 0
  %7 = icmp slt i32 %2, 10
  %8 = or i1 %6, %7
  br i1 %8, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %0, %originalBBalteredBB
  %9 = load i32, i32* @x.5
  %10 = load i32, i32* @y.6
  %11 = sub i32 %9, 1
  %12 = mul i32 %9, %11
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = icmp slt i32 %10, 10
  %16 = or i1 %14, %15
  br i1 %16, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i1 false, !dbg !974

originalBBalteredBB:                              ; preds = %originalBB, %0
  br label %originalBB
}

; Function Attrs: nounwind
declare dso_local i8* @bindtextdomain(i8*, i8*) #2

; Function Attrs: nounwind
declare dso_local i8* @textdomain(i8*) #2

; Function Attrs: nounwind
declare dso_local i32 @atexit(void ()*) #2

; Function Attrs: nounwind
declare dso_local i32 @getopt_long(i32, i8**, i8*, %struct.option*, i32*) #2

declare dso_local void @error(i32, i32, i8*, ...) #3

; Function Attrs: nounwind
declare dso_local i8* @getenv(i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @smack_new_label_from_self(i8**) #4 !dbg !975 {
  %2 = load i32, i32* @x.7
  %3 = load i32, i32* @y.8
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i8**, align 8
  store i8** %0, i8*** %10, align 8
  call void @llvm.dbg.declare(metadata i8*** %10, metadata !982, metadata !DIExpression()), !dbg !983
  %11 = load i32, i32* @x.7
  %12 = load i32, i32* @y.8
  %13 = sub i32 %11, 1
  %14 = mul i32 %11, %13
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = icmp slt i32 %12, 10
  %18 = or i1 %16, %17
  br i1 %18, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i64 -1, !dbg !984

originalBBalteredBB:                              ; preds = %originalBB, %1
  %19 = alloca i8**, align 8
  store i8** %0, i8*** %19, align 8
  call void @llvm.dbg.declare(metadata i8*** %19, metadata !985, metadata !DIExpression()), !dbg !983
  br label %originalBB
}

declare dso_local %struct.passwd* @getpwuid(i32) #3

; Function Attrs: nounwind readnone
declare dso_local i32* @__errno_location() #8

; Function Attrs: noinline nounwind optnone uwtable
define internal void @print_stuff(i8*) #4 !dbg !1033 {
  %2 = load i32, i32* @x.9
  %3 = load i32, i32* @y.10
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i8*, align 8
  store i8* %0, i8** %10, align 8
  call void @llvm.dbg.declare(metadata i8** %10, metadata !1034, metadata !DIExpression()), !dbg !1035
  %11 = load i8, i8* @just_user, align 1, !dbg !1036
  %12 = trunc i8 %11 to i1, !dbg !1036
  %13 = load i32, i32* @x.9
  %14 = load i32, i32* @y.10
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %12, label %21, label %94, !dbg !1038

21:                                               ; preds = %originalBBpart2
  %22 = load i32, i32* @x.9
  %23 = load i32, i32* @y.10
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %21, %originalBB1alteredBB
  %30 = load i8, i8* @use_real, align 1, !dbg !1039
  %31 = trunc i8 %30 to i1, !dbg !1039
  %32 = load i32, i32* @x.9
  %33 = load i32, i32* @y.10
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %31, label %40, label %58, !dbg !1039

40:                                               ; preds = %originalBBpart24
  %41 = load i32, i32* @x.9
  %42 = load i32, i32* @y.10
  %43 = sub i32 %41, 1
  %44 = mul i32 %41, %43
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %46, %47
  br i1 %48, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %40, %originalBB6alteredBB
  %49 = load i32, i32* @ruid, align 4, !dbg !1040
  %50 = load i32, i32* @x.9
  %51 = load i32, i32* @y.10
  %52 = sub i32 %50, 1
  %53 = mul i32 %50, %52
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %51, 10
  %57 = or i1 %55, %56
  br i1 %57, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %76, !dbg !1039

58:                                               ; preds = %originalBBpart24
  %59 = load i32, i32* @x.9
  %60 = load i32, i32* @y.10
  %61 = sub i32 %59, 1
  %62 = mul i32 %59, %61
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %60, 10
  %66 = or i1 %64, %65
  br i1 %66, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %58, %originalBB10alteredBB
  %67 = load i32, i32* @euid, align 4, !dbg !1041
  %68 = load i32, i32* @x.9
  %69 = load i32, i32* @y.10
  %70 = sub i32 %68, 1
  %71 = mul i32 %68, %70
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %69, 10
  %75 = or i1 %73, %74
  br i1 %75, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %76, !dbg !1039

76:                                               ; preds = %originalBBpart212, %originalBBpart28
  %77 = phi i32 [ %49, %originalBBpart28 ], [ %67, %originalBBpart212 ], !dbg !1039
  %78 = load i32, i32* @x.9
  %79 = load i32, i32* @y.10
  %80 = sub i32 %78, 1
  %81 = mul i32 %78, %80
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %79, 10
  %85 = or i1 %83, %84
  br i1 %85, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %76, %originalBB14alteredBB
  call void @print_user(i32 %77), !dbg !1042
  %86 = load i32, i32* @x.9
  %87 = load i32, i32* @y.10
  %88 = sub i32 %86, 1
  %89 = mul i32 %86, %88
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %87, 10
  %93 = or i1 %91, %92
  br i1 %93, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %359, !dbg !1042

94:                                               ; preds = %originalBBpart2
  %95 = load i32, i32* @x.9
  %96 = load i32, i32* @y.10
  %97 = sub i32 %95, 1
  %98 = mul i32 %95, %97
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %96, 10
  %102 = or i1 %100, %101
  br i1 %102, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %94, %originalBB18alteredBB
  %103 = load i8, i8* @just_group, align 1, !dbg !1043
  %104 = trunc i8 %103 to i1, !dbg !1043
  %105 = load i32, i32* @x.9
  %106 = load i32, i32* @y.10
  %107 = sub i32 %105, 1
  %108 = mul i32 %105, %107
  %109 = urem i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %106, 10
  %112 = or i1 %110, %111
  br i1 %112, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br i1 %104, label %113, label %196, !dbg !1045

113:                                              ; preds = %originalBBpart220
  %114 = load i32, i32* @x.9
  %115 = load i32, i32* @y.10
  %116 = sub i32 %114, 1
  %117 = mul i32 %114, %116
  %118 = urem i32 %117, 2
  %119 = icmp eq i32 %118, 0
  %120 = icmp slt i32 %115, 10
  %121 = or i1 %119, %120
  br i1 %121, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %113, %originalBB22alteredBB
  %122 = load i8, i8* @use_real, align 1, !dbg !1046
  %123 = trunc i8 %122 to i1, !dbg !1046
  %124 = load i32, i32* @x.9
  %125 = load i32, i32* @y.10
  %126 = sub i32 %124, 1
  %127 = mul i32 %124, %126
  %128 = urem i32 %127, 2
  %129 = icmp eq i32 %128, 0
  %130 = icmp slt i32 %125, 10
  %131 = or i1 %129, %130
  br i1 %131, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br i1 %123, label %132, label %150, !dbg !1046

132:                                              ; preds = %originalBBpart224
  %133 = load i32, i32* @x.9
  %134 = load i32, i32* @y.10
  %135 = sub i32 %133, 1
  %136 = mul i32 %133, %135
  %137 = urem i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = icmp slt i32 %134, 10
  %140 = or i1 %138, %139
  br i1 %140, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %132, %originalBB26alteredBB
  %141 = load i32, i32* @rgid, align 4, !dbg !1047
  %142 = load i32, i32* @x.9
  %143 = load i32, i32* @y.10
  %144 = sub i32 %142, 1
  %145 = mul i32 %142, %144
  %146 = urem i32 %145, 2
  %147 = icmp eq i32 %146, 0
  %148 = icmp slt i32 %143, 10
  %149 = or i1 %147, %148
  br i1 %149, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br label %168, !dbg !1046

150:                                              ; preds = %originalBBpart224
  %151 = load i32, i32* @x.9
  %152 = load i32, i32* @y.10
  %153 = sub i32 %151, 1
  %154 = mul i32 %151, %153
  %155 = urem i32 %154, 2
  %156 = icmp eq i32 %155, 0
  %157 = icmp slt i32 %152, 10
  %158 = or i1 %156, %157
  br i1 %158, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %150, %originalBB30alteredBB
  %159 = load i32, i32* @egid, align 4, !dbg !1048
  %160 = load i32, i32* @x.9
  %161 = load i32, i32* @y.10
  %162 = sub i32 %160, 1
  %163 = mul i32 %160, %162
  %164 = urem i32 %163, 2
  %165 = icmp eq i32 %164, 0
  %166 = icmp slt i32 %161, 10
  %167 = or i1 %165, %166
  br i1 %167, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br label %168, !dbg !1046

168:                                              ; preds = %originalBBpart232, %originalBBpart228
  %169 = phi i32 [ %141, %originalBBpart228 ], [ %159, %originalBBpart232 ], !dbg !1046
  %170 = load i32, i32* @x.9
  %171 = load i32, i32* @y.10
  %172 = sub i32 %170, 1
  %173 = mul i32 %170, %172
  %174 = urem i32 %173, 2
  %175 = icmp eq i32 %174, 0
  %176 = icmp slt i32 %171, 10
  %177 = or i1 %175, %176
  br i1 %177, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %168, %originalBB34alteredBB
  %178 = load i8, i8* @use_name, align 1, !dbg !1049
  %179 = trunc i8 %178 to i1, !dbg !1049
  %180 = call zeroext i1 @print_group(i32 %169, i1 zeroext %179), !dbg !1050
  %181 = zext i1 %180 to i32, !dbg !1050
  %182 = load i8, i8* @ok, align 1, !dbg !1051
  %183 = trunc i8 %182 to i1, !dbg !1051
  %184 = zext i1 %183 to i32, !dbg !1051
  %185 = and i32 %184, %181, !dbg !1051
  %186 = icmp ne i32 %185, 0, !dbg !1051
  %187 = zext i1 %186 to i8, !dbg !1051
  store i8 %187, i8* @ok, align 1, !dbg !1051
  %188 = load i32, i32* @x.9
  %189 = load i32, i32* @y.10
  %190 = sub i32 %188, 1
  %191 = mul i32 %188, %190
  %192 = urem i32 %191, 2
  %193 = icmp eq i32 %192, 0
  %194 = icmp slt i32 %189, 10
  %195 = or i1 %193, %194
  br i1 %195, label %originalBBpart246, label %originalBB34alteredBB

originalBBpart246:                                ; preds = %originalBB34
  br label %342, !dbg !1052

196:                                              ; preds = %originalBBpart220
  %197 = load i32, i32* @x.9
  %198 = load i32, i32* @y.10
  %199 = sub i32 %197, 1
  %200 = mul i32 %197, %199
  %201 = urem i32 %200, 2
  %202 = icmp eq i32 %201, 0
  %203 = icmp slt i32 %198, 10
  %204 = or i1 %202, %203
  br i1 %204, label %originalBB48, label %originalBB48alteredBB

originalBB48:                                     ; preds = %196, %originalBB48alteredBB
  %205 = load i8, i8* @just_group_list, align 1, !dbg !1053
  %206 = trunc i8 %205 to i1, !dbg !1053
  %207 = load i32, i32* @x.9
  %208 = load i32, i32* @y.10
  %209 = sub i32 %207, 1
  %210 = mul i32 %207, %209
  %211 = urem i32 %210, 2
  %212 = icmp eq i32 %211, 0
  %213 = icmp slt i32 %208, 10
  %214 = or i1 %212, %213
  br i1 %214, label %originalBBpart250, label %originalBB48alteredBB

originalBBpart250:                                ; preds = %originalBB48
  br i1 %206, label %215, label %251, !dbg !1055

215:                                              ; preds = %originalBBpart250
  %216 = load i32, i32* @x.9
  %217 = load i32, i32* @y.10
  %218 = sub i32 %216, 1
  %219 = mul i32 %216, %218
  %220 = urem i32 %219, 2
  %221 = icmp eq i32 %220, 0
  %222 = icmp slt i32 %217, 10
  %223 = or i1 %221, %222
  br i1 %223, label %originalBB52, label %originalBB52alteredBB

originalBB52:                                     ; preds = %215, %originalBB52alteredBB
  %224 = load i8*, i8** %10, align 8, !dbg !1056
  %225 = load i32, i32* @ruid, align 4, !dbg !1057
  %226 = load i32, i32* @rgid, align 4, !dbg !1058
  %227 = load i32, i32* @egid, align 4, !dbg !1059
  %228 = load i8, i8* @use_name, align 1, !dbg !1060
  %229 = trunc i8 %228 to i1, !dbg !1060
  %230 = load i8, i8* @opt_zero, align 1, !dbg !1061
  %231 = trunc i8 %230 to i1, !dbg !1061
  %232 = zext i1 %231 to i64, !dbg !1061
  %233 = select i1 %231, i32 0, i32 32, !dbg !1061
  %234 = trunc i32 %233 to i8, !dbg !1061
  %235 = call zeroext i1 @print_group_list(i8* %224, i32 %225, i32 %226, i32 %227, i1 zeroext %229, i8 signext %234), !dbg !1062
  %236 = zext i1 %235 to i32, !dbg !1062
  %237 = load i8, i8* @ok, align 1, !dbg !1063
  %238 = trunc i8 %237 to i1, !dbg !1063
  %239 = zext i1 %238 to i32, !dbg !1063
  %240 = and i32 %239, %236, !dbg !1063
  %241 = icmp ne i32 %240, 0, !dbg !1063
  %242 = zext i1 %241 to i8, !dbg !1063
  store i8 %242, i8* @ok, align 1, !dbg !1063
  %243 = load i32, i32* @x.9
  %244 = load i32, i32* @y.10
  %245 = sub i32 %243, 1
  %246 = mul i32 %243, %245
  %247 = urem i32 %246, 2
  %248 = icmp eq i32 %247, 0
  %249 = icmp slt i32 %244, 10
  %250 = or i1 %248, %249
  br i1 %250, label %originalBBpart259, label %originalBB52alteredBB

originalBBpart259:                                ; preds = %originalBB52
  br label %325, !dbg !1064

251:                                              ; preds = %originalBBpart250
  %252 = load i32, i32* @x.9
  %253 = load i32, i32* @y.10
  %254 = sub i32 %252, 1
  %255 = mul i32 %252, %254
  %256 = urem i32 %255, 2
  %257 = icmp eq i32 %256, 0
  %258 = icmp slt i32 %253, 10
  %259 = or i1 %257, %258
  br i1 %259, label %originalBB61, label %originalBB61alteredBB

originalBB61:                                     ; preds = %251, %originalBB61alteredBB
  %260 = load i8, i8* @just_context, align 1, !dbg !1065
  %261 = trunc i8 %260 to i1, !dbg !1065
  %262 = load i32, i32* @x.9
  %263 = load i32, i32* @y.10
  %264 = sub i32 %262, 1
  %265 = mul i32 %262, %264
  %266 = urem i32 %265, 2
  %267 = icmp eq i32 %266, 0
  %268 = icmp slt i32 %263, 10
  %269 = or i1 %267, %268
  br i1 %269, label %originalBBpart263, label %originalBB61alteredBB

originalBBpart263:                                ; preds = %originalBB61
  br i1 %261, label %270, label %290, !dbg !1067

270:                                              ; preds = %originalBBpart263
  %271 = load i32, i32* @x.9
  %272 = load i32, i32* @y.10
  %273 = sub i32 %271, 1
  %274 = mul i32 %271, %273
  %275 = urem i32 %274, 2
  %276 = icmp eq i32 %275, 0
  %277 = icmp slt i32 %272, 10
  %278 = or i1 %276, %277
  br i1 %278, label %originalBB65, label %originalBB65alteredBB

originalBB65:                                     ; preds = %270, %originalBB65alteredBB
  %279 = load i8*, i8** @context, align 8, !dbg !1068
  %280 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1068
  %281 = call i32 @fputs_unlocked(i8* %279, %struct._IO_FILE* %280), !dbg !1068
  %282 = load i32, i32* @x.9
  %283 = load i32, i32* @y.10
  %284 = sub i32 %282, 1
  %285 = mul i32 %282, %284
  %286 = urem i32 %285, 2
  %287 = icmp eq i32 %286, 0
  %288 = icmp slt i32 %283, 10
  %289 = or i1 %287, %288
  br i1 %289, label %originalBBpart267, label %originalBB65alteredBB

originalBBpart267:                                ; preds = %originalBB65
  br label %308, !dbg !1068

290:                                              ; preds = %originalBBpart263
  %291 = load i32, i32* @x.9
  %292 = load i32, i32* @y.10
  %293 = sub i32 %291, 1
  %294 = mul i32 %291, %293
  %295 = urem i32 %294, 2
  %296 = icmp eq i32 %295, 0
  %297 = icmp slt i32 %292, 10
  %298 = or i1 %296, %297
  br i1 %298, label %originalBB69, label %originalBB69alteredBB

originalBB69:                                     ; preds = %290, %originalBB69alteredBB
  %299 = load i8*, i8** %10, align 8, !dbg !1069
  call void @print_full_info(i8* %299), !dbg !1070
  %300 = load i32, i32* @x.9
  %301 = load i32, i32* @y.10
  %302 = sub i32 %300, 1
  %303 = mul i32 %300, %302
  %304 = urem i32 %303, 2
  %305 = icmp eq i32 %304, 0
  %306 = icmp slt i32 %301, 10
  %307 = or i1 %305, %306
  br i1 %307, label %originalBBpart271, label %originalBB69alteredBB

originalBBpart271:                                ; preds = %originalBB69
  br label %308

308:                                              ; preds = %originalBBpart271, %originalBBpart267
  %309 = load i32, i32* @x.9
  %310 = load i32, i32* @y.10
  %311 = sub i32 %309, 1
  %312 = mul i32 %309, %311
  %313 = urem i32 %312, 2
  %314 = icmp eq i32 %313, 0
  %315 = icmp slt i32 %310, 10
  %316 = or i1 %314, %315
  br i1 %316, label %originalBB73, label %originalBB73alteredBB

originalBB73:                                     ; preds = %308, %originalBB73alteredBB
  %317 = load i32, i32* @x.9
  %318 = load i32, i32* @y.10
  %319 = sub i32 %317, 1
  %320 = mul i32 %317, %319
  %321 = urem i32 %320, 2
  %322 = icmp eq i32 %321, 0
  %323 = icmp slt i32 %318, 10
  %324 = or i1 %322, %323
  br i1 %324, label %originalBBpart275, label %originalBB73alteredBB

originalBBpart275:                                ; preds = %originalBB73
  br label %325

325:                                              ; preds = %originalBBpart275, %originalBBpart259
  %326 = load i32, i32* @x.9
  %327 = load i32, i32* @y.10
  %328 = sub i32 %326, 1
  %329 = mul i32 %326, %328
  %330 = urem i32 %329, 2
  %331 = icmp eq i32 %330, 0
  %332 = icmp slt i32 %327, 10
  %333 = or i1 %331, %332
  br i1 %333, label %originalBB77, label %originalBB77alteredBB

originalBB77:                                     ; preds = %325, %originalBB77alteredBB
  %334 = load i32, i32* @x.9
  %335 = load i32, i32* @y.10
  %336 = sub i32 %334, 1
  %337 = mul i32 %334, %336
  %338 = urem i32 %337, 2
  %339 = icmp eq i32 %338, 0
  %340 = icmp slt i32 %335, 10
  %341 = or i1 %339, %340
  br i1 %341, label %originalBBpart279, label %originalBB77alteredBB

originalBBpart279:                                ; preds = %originalBB77
  br label %342

342:                                              ; preds = %originalBBpart279, %originalBBpart246
  %343 = load i32, i32* @x.9
  %344 = load i32, i32* @y.10
  %345 = sub i32 %343, 1
  %346 = mul i32 %343, %345
  %347 = urem i32 %346, 2
  %348 = icmp eq i32 %347, 0
  %349 = icmp slt i32 %344, 10
  %350 = or i1 %348, %349
  br i1 %350, label %originalBB81, label %originalBB81alteredBB

originalBB81:                                     ; preds = %342, %originalBB81alteredBB
  %351 = load i32, i32* @x.9
  %352 = load i32, i32* @y.10
  %353 = sub i32 %351, 1
  %354 = mul i32 %351, %353
  %355 = urem i32 %354, 2
  %356 = icmp eq i32 %355, 0
  %357 = icmp slt i32 %352, 10
  %358 = or i1 %356, %357
  br i1 %358, label %originalBBpart283, label %originalBB81alteredBB

originalBBpart283:                                ; preds = %originalBB81
  br label %359

359:                                              ; preds = %originalBBpart283, %originalBBpart216
  %360 = load i32, i32* @x.9
  %361 = load i32, i32* @y.10
  %362 = sub i32 %360, 1
  %363 = mul i32 %360, %362
  %364 = urem i32 %363, 2
  %365 = icmp eq i32 %364, 0
  %366 = icmp slt i32 %361, 10
  %367 = or i1 %365, %366
  br i1 %367, label %originalBB85, label %originalBB85alteredBB

originalBB85:                                     ; preds = %359, %originalBB85alteredBB
  %368 = load i8, i8* @opt_zero, align 1, !dbg !1071
  %369 = trunc i8 %368 to i1, !dbg !1071
  %370 = load i32, i32* @x.9
  %371 = load i32, i32* @y.10
  %372 = sub i32 %370, 1
  %373 = mul i32 %370, %372
  %374 = urem i32 %373, 2
  %375 = icmp eq i32 %374, 0
  %376 = icmp slt i32 %371, 10
  %377 = or i1 %375, %376
  br i1 %377, label %originalBBpart287, label %originalBB85alteredBB

originalBBpart287:                                ; preds = %originalBB85
  br i1 %369, label %378, label %435, !dbg !1073

378:                                              ; preds = %originalBBpart287
  %379 = load i32, i32* @x.9
  %380 = load i32, i32* @y.10
  %381 = sub i32 %379, 1
  %382 = mul i32 %379, %381
  %383 = urem i32 %382, 2
  %384 = icmp eq i32 %383, 0
  %385 = icmp slt i32 %380, 10
  %386 = or i1 %384, %385
  br i1 %386, label %originalBB89, label %originalBB89alteredBB

originalBB89:                                     ; preds = %378, %originalBB89alteredBB
  %387 = load i8, i8* @just_group_list, align 1, !dbg !1074
  %388 = trunc i8 %387 to i1, !dbg !1074
  %389 = load i32, i32* @x.9
  %390 = load i32, i32* @y.10
  %391 = sub i32 %389, 1
  %392 = mul i32 %389, %391
  %393 = urem i32 %392, 2
  %394 = icmp eq i32 %393, 0
  %395 = icmp slt i32 %390, 10
  %396 = or i1 %394, %395
  br i1 %396, label %originalBBpart291, label %originalBB89alteredBB

originalBBpart291:                                ; preds = %originalBB89
  br i1 %388, label %397, label %435, !dbg !1075

397:                                              ; preds = %originalBBpart291
  %398 = load i32, i32* @x.9
  %399 = load i32, i32* @y.10
  %400 = sub i32 %398, 1
  %401 = mul i32 %398, %400
  %402 = urem i32 %401, 2
  %403 = icmp eq i32 %402, 0
  %404 = icmp slt i32 %399, 10
  %405 = or i1 %403, %404
  br i1 %405, label %originalBB93, label %originalBB93alteredBB

originalBB93:                                     ; preds = %397, %originalBB93alteredBB
  %406 = load i8, i8* @multiple_users, align 1, !dbg !1076
  %407 = trunc i8 %406 to i1, !dbg !1076
  %408 = load i32, i32* @x.9
  %409 = load i32, i32* @y.10
  %410 = sub i32 %408, 1
  %411 = mul i32 %408, %410
  %412 = urem i32 %411, 2
  %413 = icmp eq i32 %412, 0
  %414 = icmp slt i32 %409, 10
  %415 = or i1 %413, %414
  br i1 %415, label %originalBBpart295, label %originalBB93alteredBB

originalBBpart295:                                ; preds = %originalBB93
  br i1 %407, label %416, label %435, !dbg !1077

416:                                              ; preds = %originalBBpart295
  %417 = load i32, i32* @x.9
  %418 = load i32, i32* @y.10
  %419 = sub i32 %417, 1
  %420 = mul i32 %417, %419
  %421 = urem i32 %420, 2
  %422 = icmp eq i32 %421, 0
  %423 = icmp slt i32 %418, 10
  %424 = or i1 %422, %423
  br i1 %424, label %originalBB97, label %originalBB97alteredBB

originalBB97:                                     ; preds = %416, %originalBB97alteredBB
  %425 = call i32 @putchar_unlocked(i32 0), !dbg !1078
  %426 = call i32 @putchar_unlocked(i32 0), !dbg !1080
  %427 = load i32, i32* @x.9
  %428 = load i32, i32* @y.10
  %429 = sub i32 %427, 1
  %430 = mul i32 %427, %429
  %431 = urem i32 %430, 2
  %432 = icmp eq i32 %431, 0
  %433 = icmp slt i32 %428, 10
  %434 = or i1 %432, %433
  br i1 %434, label %originalBBpart299, label %originalBB97alteredBB

originalBBpart299:                                ; preds = %originalBB97
  br label %457, !dbg !1081

435:                                              ; preds = %originalBBpart295, %originalBBpart291, %originalBBpart287
  %436 = load i32, i32* @x.9
  %437 = load i32, i32* @y.10
  %438 = sub i32 %436, 1
  %439 = mul i32 %436, %438
  %440 = urem i32 %439, 2
  %441 = icmp eq i32 %440, 0
  %442 = icmp slt i32 %437, 10
  %443 = or i1 %441, %442
  br i1 %443, label %originalBB101, label %originalBB101alteredBB

originalBB101:                                    ; preds = %435, %originalBB101alteredBB
  %444 = load i8, i8* @opt_zero, align 1, !dbg !1082
  %445 = trunc i8 %444 to i1, !dbg !1082
  %446 = zext i1 %445 to i64, !dbg !1082
  %447 = select i1 %445, i32 0, i32 10, !dbg !1082
  %448 = call i32 @putchar_unlocked(i32 %447), !dbg !1082
  %449 = load i32, i32* @x.9
  %450 = load i32, i32* @y.10
  %451 = sub i32 %449, 1
  %452 = mul i32 %449, %451
  %453 = urem i32 %452, 2
  %454 = icmp eq i32 %453, 0
  %455 = icmp slt i32 %450, 10
  %456 = or i1 %454, %455
  br i1 %456, label %originalBBpart2103, label %originalBB101alteredBB

originalBBpart2103:                               ; preds = %originalBB101
  br label %457

457:                                              ; preds = %originalBBpart2103, %originalBBpart299
  %458 = load i32, i32* @x.9
  %459 = load i32, i32* @y.10
  %460 = sub i32 %458, 1
  %461 = mul i32 %458, %460
  %462 = urem i32 %461, 2
  %463 = icmp eq i32 %462, 0
  %464 = icmp slt i32 %459, 10
  %465 = or i1 %463, %464
  br i1 %465, label %originalBB105, label %originalBB105alteredBB

originalBB105:                                    ; preds = %457, %originalBB105alteredBB
  %466 = load i32, i32* @x.9
  %467 = load i32, i32* @y.10
  %468 = sub i32 %466, 1
  %469 = mul i32 %466, %468
  %470 = urem i32 %469, 2
  %471 = icmp eq i32 %470, 0
  %472 = icmp slt i32 %467, 10
  %473 = or i1 %471, %472
  br i1 %473, label %originalBBpart2107, label %originalBB105alteredBB

originalBBpart2107:                               ; preds = %originalBB105
  ret void, !dbg !1084

originalBBalteredBB:                              ; preds = %originalBB, %1
  %474 = alloca i8*, align 8
  store i8* %0, i8** %474, align 8
  call void @llvm.dbg.declare(metadata i8** %474, metadata !1085, metadata !DIExpression()), !dbg !1035
  %475 = load i8, i8* @just_user, align 1, !dbg !1036
  %476 = trunc i8 %475 to i1, !dbg !1036
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %21
  %477 = load i8, i8* @use_real, align 1, !dbg !1039
  %478 = trunc i8 %477 to i1, !dbg !1039
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %40
  %479 = load i32, i32* @ruid, align 4, !dbg !1040
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %58
  %480 = load i32, i32* @euid, align 4, !dbg !1041
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %76
  call void @print_user(i32 %77), !dbg !1042
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %94
  %481 = load i8, i8* @just_group, align 1, !dbg !1043
  %482 = trunc i8 %481 to i1, !dbg !1043
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %113
  %483 = load i8, i8* @use_real, align 1, !dbg !1046
  %484 = trunc i8 %483 to i1, !dbg !1046
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %132
  %485 = load i32, i32* @rgid, align 4, !dbg !1047
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %150
  %486 = load i32, i32* @egid, align 4, !dbg !1048
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %168
  %487 = load i8, i8* @use_name, align 1, !dbg !1049
  %488 = trunc i8 %487 to i1, !dbg !1049
  %489 = call zeroext i1 @print_group(i32 %169, i1 zeroext %488), !dbg !1050
  %490 = zext i1 %489 to i32, !dbg !1050
  %491 = load i8, i8* @ok, align 1, !dbg !1051
  %492 = trunc i8 %491 to i1, !dbg !1051
  %493 = zext i1 %492 to i32, !dbg !1051
  %_ = sub i32 %493, %490
  %gen = mul i32 %_, %490
  %_35 = sub i32 0, %493
  %gen36 = add i32 %_35, %490
  %_37 = sub i32 0, %493
  %gen38 = add i32 %_37, %490
  %_39 = sub i32 %493, %490
  %gen40 = mul i32 %_39, %490
  %_41 = sub i32 0, %493
  %gen42 = add i32 %_41, %490
  %_43 = sub i32 %493, %490
  %gen44 = mul i32 %_43, %490
  %494 = and i32 %493, %490, !dbg !1051
  %495 = icmp ne i32 %494, 0, !dbg !1051
  %496 = zext i1 %495 to i8, !dbg !1051
  store i8 %496, i8* @ok, align 1, !dbg !1051
  br label %originalBB34

originalBB48alteredBB:                            ; preds = %originalBB48, %196
  %497 = load i8, i8* @just_group_list, align 1, !dbg !1053
  %498 = trunc i8 %497 to i1, !dbg !1053
  br label %originalBB48

originalBB52alteredBB:                            ; preds = %originalBB52, %215
  %499 = load i8*, i8** %10, align 8, !dbg !1056
  %500 = load i32, i32* @ruid, align 4, !dbg !1057
  %501 = load i32, i32* @rgid, align 4, !dbg !1058
  %502 = load i32, i32* @egid, align 4, !dbg !1059
  %503 = load i8, i8* @use_name, align 1, !dbg !1060
  %504 = trunc i8 %503 to i1, !dbg !1060
  %505 = load i8, i8* @opt_zero, align 1, !dbg !1061
  %506 = trunc i8 %505 to i1, !dbg !1061
  %507 = zext i1 %506 to i64, !dbg !1061
  %508 = select i1 %506, i32 0, i32 32, !dbg !1061
  %509 = trunc i32 %508 to i8, !dbg !1061
  %510 = call zeroext i1 @print_group_list(i8* %499, i32 %500, i32 %501, i32 %502, i1 zeroext %504, i8 signext %509), !dbg !1062
  %511 = zext i1 %510 to i32, !dbg !1062
  %512 = load i8, i8* @ok, align 1, !dbg !1063
  %513 = trunc i8 %512 to i1, !dbg !1063
  %514 = zext i1 %513 to i32, !dbg !1063
  %_53 = shl i32 %514, %511
  %_54 = sub i32 %514, %511
  %gen55 = mul i32 %_54, %511
  %_56 = shl i32 %514, %511
  %_57 = shl i32 %514, %511
  %515 = and i32 %514, %511, !dbg !1063
  %516 = icmp ne i32 %515, 0, !dbg !1063
  %517 = zext i1 %516 to i8, !dbg !1063
  store i8 %517, i8* @ok, align 1, !dbg !1063
  br label %originalBB52

originalBB61alteredBB:                            ; preds = %originalBB61, %251
  %518 = load i8, i8* @just_context, align 1, !dbg !1065
  %519 = trunc i8 %518 to i1, !dbg !1065
  br label %originalBB61

originalBB65alteredBB:                            ; preds = %originalBB65, %270
  %520 = load i8*, i8** @context, align 8, !dbg !1068
  %521 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1068
  %522 = call i32 @fputs_unlocked(i8* %520, %struct._IO_FILE* %521), !dbg !1068
  br label %originalBB65

originalBB69alteredBB:                            ; preds = %originalBB69, %290
  %523 = load i8*, i8** %10, align 8, !dbg !1069
  call void @print_full_info(i8* %523), !dbg !1070
  br label %originalBB69

originalBB73alteredBB:                            ; preds = %originalBB73, %308
  br label %originalBB73

originalBB77alteredBB:                            ; preds = %originalBB77, %325
  br label %originalBB77

originalBB81alteredBB:                            ; preds = %originalBB81, %342
  br label %originalBB81

originalBB85alteredBB:                            ; preds = %originalBB85, %359
  %524 = load i8, i8* @opt_zero, align 1, !dbg !1071
  %525 = trunc i8 %524 to i1, !dbg !1071
  br label %originalBB85

originalBB89alteredBB:                            ; preds = %originalBB89, %378
  %526 = load i8, i8* @just_group_list, align 1, !dbg !1074
  %527 = trunc i8 %526 to i1, !dbg !1074
  br label %originalBB89

originalBB93alteredBB:                            ; preds = %originalBB93, %397
  %528 = load i8, i8* @multiple_users, align 1, !dbg !1076
  %529 = trunc i8 %528 to i1, !dbg !1076
  br label %originalBB93

originalBB97alteredBB:                            ; preds = %originalBB97, %416
  %530 = call i32 @putchar_unlocked(i32 0), !dbg !1078
  %531 = call i32 @putchar_unlocked(i32 0), !dbg !1080
  br label %originalBB97

originalBB101alteredBB:                           ; preds = %originalBB101, %435
  %532 = load i8, i8* @opt_zero, align 1, !dbg !1082
  %533 = trunc i8 %532 to i1, !dbg !1082
  %534 = zext i1 %533 to i64, !dbg !1082
  %535 = select i1 %533, i32 0, i32 10, !dbg !1082
  %536 = call i32 @putchar_unlocked(i32 %535), !dbg !1082
  br label %originalBB101

originalBB105alteredBB:                           ; preds = %originalBB105, %457
  br label %originalBB105
}

; Function Attrs: nounwind
declare dso_local void @free(i8*) #2

; Function Attrs: nounwind
declare dso_local i32 @geteuid() #2

; Function Attrs: nounwind
declare dso_local i32 @getuid() #2

; Function Attrs: nounwind
declare dso_local i32 @getegid() #2

; Function Attrs: nounwind
declare dso_local i32 @getgid() #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @print_user(i32) #4 !dbg !1133 {
  %2 = load i32, i32* @x.11
  %3 = load i32, i32* @y.12
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i32, align 4
  %11 = alloca %struct.passwd*, align 8
  %12 = alloca i8*, align 8
  store i32 %0, i32* %10, align 4
  call void @llvm.dbg.declare(metadata i32* %10, metadata !1136, metadata !DIExpression()), !dbg !1137
  call void @llvm.dbg.declare(metadata %struct.passwd** %11, metadata !1138, metadata !DIExpression()), !dbg !1139
  store %struct.passwd* null, %struct.passwd** %11, align 8, !dbg !1139
  %13 = load i8, i8* @use_name, align 1, !dbg !1140
  %14 = trunc i8 %13 to i1, !dbg !1140
  %15 = load i32, i32* @x.11
  %16 = load i32, i32* @y.12
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %14, label %23, label %86, !dbg !1142

23:                                               ; preds = %originalBBpart2
  %24 = load i32, i32* @x.11
  %25 = load i32, i32* @y.12
  %26 = sub i32 %24, 1
  %27 = mul i32 %24, %26
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %29, %30
  br i1 %31, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %23, %originalBB1alteredBB
  %32 = load i32, i32* %10, align 4, !dbg !1143
  %33 = call %struct.passwd* @getpwuid(i32 %32), !dbg !1145
  store %struct.passwd* %33, %struct.passwd** %11, align 8, !dbg !1146
  %34 = load %struct.passwd*, %struct.passwd** %11, align 8, !dbg !1147
  %35 = icmp eq %struct.passwd* %34, null, !dbg !1149
  %36 = load i32, i32* @x.11
  %37 = load i32, i32* @y.12
  %38 = sub i32 %36, 1
  %39 = mul i32 %36, %38
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %37, 10
  %43 = or i1 %41, %42
  br i1 %43, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %35, label %44, label %69, !dbg !1150

44:                                               ; preds = %originalBBpart24
  %45 = load i32, i32* @x.11
  %46 = load i32, i32* @y.12
  %47 = sub i32 %45, 1
  %48 = mul i32 %45, %47
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %50, %51
  br i1 %52, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %44, %originalBB6alteredBB
  %53 = call i8* @gettext(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.51, i64 0, i64 0)) #10, !dbg !1151
  %54 = call i8* @uidtostr_ptr(i32* %10), !dbg !1153
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %53, i8* %54), !dbg !1154
  %55 = load i8, i8* @ok, align 1, !dbg !1155
  %56 = trunc i8 %55 to i1, !dbg !1155
  %57 = zext i1 %56 to i32, !dbg !1155
  %58 = and i32 %57, 0, !dbg !1155
  %59 = icmp ne i32 %58, 0, !dbg !1155
  %60 = zext i1 %59 to i8, !dbg !1155
  store i8 %60, i8* @ok, align 1, !dbg !1155
  %61 = load i32, i32* @x.11
  %62 = load i32, i32* @y.12
  %63 = sub i32 %61, 1
  %64 = mul i32 %61, %63
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %62, 10
  %68 = or i1 %66, %67
  br i1 %68, label %originalBBpart219, label %originalBB6alteredBB

originalBBpart219:                                ; preds = %originalBB6
  br label %69, !dbg !1156

69:                                               ; preds = %originalBBpart219, %originalBBpart24
  %70 = load i32, i32* @x.11
  %71 = load i32, i32* @y.12
  %72 = sub i32 %70, 1
  %73 = mul i32 %70, %72
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %71, 10
  %77 = or i1 %75, %76
  br i1 %77, label %originalBB21, label %originalBB21alteredBB

originalBB21:                                     ; preds = %69, %originalBB21alteredBB
  %78 = load i32, i32* @x.11
  %79 = load i32, i32* @y.12
  %80 = sub i32 %78, 1
  %81 = mul i32 %78, %80
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %79, 10
  %85 = or i1 %83, %84
  br i1 %85, label %originalBBpart223, label %originalBB21alteredBB

originalBBpart223:                                ; preds = %originalBB21
  br label %86, !dbg !1157

86:                                               ; preds = %originalBBpart223, %originalBBpart2
  call void @llvm.dbg.declare(metadata i8** %12, metadata !1158, metadata !DIExpression()), !dbg !1159
  %87 = load i32, i32* @x.11
  %88 = load i32, i32* @y.12
  %89 = sub i32 %87, 1
  %90 = mul i32 %87, %89
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %88, 10
  %94 = or i1 %92, %93
  br i1 %94, label %originalBB25, label %originalBB25alteredBB

originalBB25:                                     ; preds = %86, %originalBB25alteredBB
  %95 = load %struct.passwd*, %struct.passwd** %11, align 8, !dbg !1160
  %96 = icmp ne %struct.passwd* %95, null, !dbg !1160
  %97 = load i32, i32* @x.11
  %98 = load i32, i32* @y.12
  %99 = sub i32 %97, 1
  %100 = mul i32 %97, %99
  %101 = urem i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %98, 10
  %104 = or i1 %102, %103
  br i1 %104, label %originalBBpart227, label %originalBB25alteredBB

originalBBpart227:                                ; preds = %originalBB25
  br i1 %96, label %105, label %125, !dbg !1160

105:                                              ; preds = %originalBBpart227
  %106 = load i32, i32* @x.11
  %107 = load i32, i32* @y.12
  %108 = sub i32 %106, 1
  %109 = mul i32 %106, %108
  %110 = urem i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %107, 10
  %113 = or i1 %111, %112
  br i1 %113, label %originalBB29, label %originalBB29alteredBB

originalBB29:                                     ; preds = %105, %originalBB29alteredBB
  %114 = load %struct.passwd*, %struct.passwd** %11, align 8, !dbg !1161
  %115 = getelementptr inbounds %struct.passwd, %struct.passwd* %114, i32 0, i32 0, !dbg !1162
  %116 = load i8*, i8** %115, align 8, !dbg !1162
  %117 = load i32, i32* @x.11
  %118 = load i32, i32* @y.12
  %119 = sub i32 %117, 1
  %120 = mul i32 %117, %119
  %121 = urem i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = icmp slt i32 %118, 10
  %124 = or i1 %122, %123
  br i1 %124, label %originalBBpart231, label %originalBB29alteredBB

originalBBpart231:                                ; preds = %originalBB29
  br label %143, !dbg !1160

125:                                              ; preds = %originalBBpart227
  %126 = load i32, i32* @x.11
  %127 = load i32, i32* @y.12
  %128 = sub i32 %126, 1
  %129 = mul i32 %126, %128
  %130 = urem i32 %129, 2
  %131 = icmp eq i32 %130, 0
  %132 = icmp slt i32 %127, 10
  %133 = or i1 %131, %132
  br i1 %133, label %originalBB33, label %originalBB33alteredBB

originalBB33:                                     ; preds = %125, %originalBB33alteredBB
  %134 = call i8* @uidtostr_ptr(i32* %10), !dbg !1163
  %135 = load i32, i32* @x.11
  %136 = load i32, i32* @y.12
  %137 = sub i32 %135, 1
  %138 = mul i32 %135, %137
  %139 = urem i32 %138, 2
  %140 = icmp eq i32 %139, 0
  %141 = icmp slt i32 %136, 10
  %142 = or i1 %140, %141
  br i1 %142, label %originalBBpart235, label %originalBB33alteredBB

originalBBpart235:                                ; preds = %originalBB33
  br label %143, !dbg !1160

143:                                              ; preds = %originalBBpart235, %originalBBpart231
  %144 = phi i8* [ %116, %originalBBpart231 ], [ %134, %originalBBpart235 ], !dbg !1160
  %145 = load i32, i32* @x.11
  %146 = load i32, i32* @y.12
  %147 = sub i32 %145, 1
  %148 = mul i32 %145, %147
  %149 = urem i32 %148, 2
  %150 = icmp eq i32 %149, 0
  %151 = icmp slt i32 %146, 10
  %152 = or i1 %150, %151
  br i1 %152, label %originalBB37, label %originalBB37alteredBB

originalBB37:                                     ; preds = %143, %originalBB37alteredBB
  store i8* %144, i8** %12, align 8, !dbg !1159
  %153 = load i8*, i8** %12, align 8, !dbg !1164
  %154 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1164
  %155 = call i32 @fputs_unlocked(i8* %153, %struct._IO_FILE* %154), !dbg !1164
  %156 = load i32, i32* @x.11
  %157 = load i32, i32* @y.12
  %158 = sub i32 %156, 1
  %159 = mul i32 %156, %158
  %160 = urem i32 %159, 2
  %161 = icmp eq i32 %160, 0
  %162 = icmp slt i32 %157, 10
  %163 = or i1 %161, %162
  br i1 %163, label %originalBBpart239, label %originalBB37alteredBB

originalBBpart239:                                ; preds = %originalBB37
  ret void, !dbg !1165

originalBBalteredBB:                              ; preds = %originalBB, %1
  %164 = alloca i32, align 4
  %165 = alloca %struct.passwd*, align 8
  %166 = alloca i8*, align 8
  store i32 %0, i32* %164, align 4
  call void @llvm.dbg.declare(metadata i32* %164, metadata !1166, metadata !DIExpression()), !dbg !1137
  call void @llvm.dbg.declare(metadata %struct.passwd** %165, metadata !1214, metadata !DIExpression()), !dbg !1139
  store %struct.passwd* null, %struct.passwd** %165, align 8, !dbg !1139
  %167 = load i8, i8* @use_name, align 1, !dbg !1140
  %168 = trunc i8 %167 to i1, !dbg !1140
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %23
  %169 = load i32, i32* %10, align 4, !dbg !1143
  %170 = call %struct.passwd* @getpwuid(i32 %169), !dbg !1145
  store %struct.passwd* %170, %struct.passwd** %11, align 8, !dbg !1146
  %171 = load %struct.passwd*, %struct.passwd** %11, align 8, !dbg !1147
  %172 = icmp eq %struct.passwd* %171, null, !dbg !1149
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %44
  %173 = call i8* @gettext(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.51, i64 0, i64 0)) #10, !dbg !1151
  %174 = call i8* @uidtostr_ptr(i32* %10), !dbg !1153
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %173, i8* %174), !dbg !1154
  %175 = load i8, i8* @ok, align 1, !dbg !1155
  %176 = trunc i8 %175 to i1, !dbg !1155
  %177 = zext i1 %176 to i32, !dbg !1155
  %_ = shl i32 %177, 0
  %_7 = sub i32 %177, 0
  %gen = mul i32 %_7, 0
  %_8 = shl i32 %177, 0
  %_9 = sub i32 %177, 0
  %gen10 = mul i32 %_9, 0
  %_11 = shl i32 %177, 0
  %_12 = sub i32 0, %177
  %gen13 = add i32 %_12, 0
  %_14 = sub i32 0, %177
  %gen15 = add i32 %_14, 0
  %_16 = sub i32 %177, 0
  %gen17 = mul i32 %_16, 0
  %178 = and i32 %177, 0, !dbg !1155
  %179 = icmp ne i32 %178, 0, !dbg !1155
  %180 = zext i1 %179 to i8, !dbg !1155
  store i8 %180, i8* @ok, align 1, !dbg !1155
  br label %originalBB6

originalBB21alteredBB:                            ; preds = %originalBB21, %69
  br label %originalBB21

originalBB25alteredBB:                            ; preds = %originalBB25, %86
  %181 = load %struct.passwd*, %struct.passwd** %11, align 8, !dbg !1160
  %182 = icmp ne %struct.passwd* %181, null, !dbg !1160
  br label %originalBB25

originalBB29alteredBB:                            ; preds = %originalBB29, %105
  %183 = load %struct.passwd*, %struct.passwd** %11, align 8, !dbg !1161
  %184 = getelementptr inbounds %struct.passwd, %struct.passwd* %183, i32 0, i32 0, !dbg !1162
  %185 = load i8*, i8** %184, align 8, !dbg !1162
  br label %originalBB29

originalBB33alteredBB:                            ; preds = %originalBB33, %125
  %186 = call i8* @uidtostr_ptr(i32* %10), !dbg !1163
  br label %originalBB33

originalBB37alteredBB:                            ; preds = %originalBB37, %143
  store i8* %144, i8** %12, align 8, !dbg !1159
  %187 = load i8*, i8** %12, align 8, !dbg !1164
  %188 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1164
  %189 = call i32 @fputs_unlocked(i8* %187, %struct._IO_FILE* %188), !dbg !1164
  br label %originalBB37
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @print_full_info(i8*) #4 !dbg !1225 {
  %2 = load i32, i32* @x.13
  %3 = load i32, i32* @y.14
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i8*, align 8
  %11 = alloca %struct.passwd*, align 8
  %12 = alloca %struct.group*, align 8
  %13 = alloca i32*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  store i8* %0, i8** %10, align 8
  call void @llvm.dbg.declare(metadata i8** %10, metadata !1226, metadata !DIExpression()), !dbg !1227
  call void @llvm.dbg.declare(metadata %struct.passwd** %11, metadata !1228, metadata !DIExpression()), !dbg !1229
  call void @llvm.dbg.declare(metadata %struct.group** %12, metadata !1230, metadata !DIExpression()), !dbg !1239
  %17 = call i8* @gettext(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.52, i64 0, i64 0)) #10, !dbg !1240
  %18 = call i8* @uidtostr_ptr(i32* @ruid), !dbg !1241
  %19 = call i32 (i8*, ...) @printf(i8* %17, i8* %18), !dbg !1242
  %20 = load i32, i32* @ruid, align 4, !dbg !1243
  %21 = call %struct.passwd* @getpwuid(i32 %20), !dbg !1244
  store %struct.passwd* %21, %struct.passwd** %11, align 8, !dbg !1245
  %22 = load %struct.passwd*, %struct.passwd** %11, align 8, !dbg !1246
  %23 = icmp ne %struct.passwd* %22, null, !dbg !1246
  %24 = load i32, i32* @x.13
  %25 = load i32, i32* @y.14
  %26 = sub i32 %24, 1
  %27 = mul i32 %24, %26
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %29, %30
  br i1 %31, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %23, label %32, label %53, !dbg !1248

32:                                               ; preds = %originalBBpart2
  %33 = load i32, i32* @x.13
  %34 = load i32, i32* @y.14
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %32, %originalBB1alteredBB
  %41 = load %struct.passwd*, %struct.passwd** %11, align 8, !dbg !1249
  %42 = getelementptr inbounds %struct.passwd, %struct.passwd* %41, i32 0, i32 0, !dbg !1250
  %43 = load i8*, i8** %42, align 8, !dbg !1250
  %44 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.53, i64 0, i64 0), i8* %43), !dbg !1251
  %45 = load i32, i32* @x.13
  %46 = load i32, i32* @y.14
  %47 = sub i32 %45, 1
  %48 = mul i32 %45, %47
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %50, %51
  br i1 %52, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %53, !dbg !1251

53:                                               ; preds = %originalBBpart24, %originalBBpart2
  %54 = load i32, i32* @x.13
  %55 = load i32, i32* @y.14
  %56 = sub i32 %54, 1
  %57 = mul i32 %54, %56
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %55, 10
  %61 = or i1 %59, %60
  br i1 %61, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %53, %originalBB6alteredBB
  %62 = call i8* @gettext(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.54, i64 0, i64 0)) #10, !dbg !1252
  %63 = call i8* @gidtostr_ptr(i32* @rgid), !dbg !1253
  %64 = call i32 (i8*, ...) @printf(i8* %62, i8* %63), !dbg !1254
  %65 = load i32, i32* @rgid, align 4, !dbg !1255
  %66 = call %struct.group* @getgrgid(i32 %65), !dbg !1256
  store %struct.group* %66, %struct.group** %12, align 8, !dbg !1257
  %67 = load %struct.group*, %struct.group** %12, align 8, !dbg !1258
  %68 = icmp ne %struct.group* %67, null, !dbg !1258
  %69 = load i32, i32* @x.13
  %70 = load i32, i32* @y.14
  %71 = sub i32 %69, 1
  %72 = mul i32 %69, %71
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %74, %75
  br i1 %76, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %68, label %77, label %98, !dbg !1260

77:                                               ; preds = %originalBBpart28
  %78 = load i32, i32* @x.13
  %79 = load i32, i32* @y.14
  %80 = sub i32 %78, 1
  %81 = mul i32 %78, %80
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %79, 10
  %85 = or i1 %83, %84
  br i1 %85, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %77, %originalBB10alteredBB
  %86 = load %struct.group*, %struct.group** %12, align 8, !dbg !1261
  %87 = getelementptr inbounds %struct.group, %struct.group* %86, i32 0, i32 0, !dbg !1262
  %88 = load i8*, i8** %87, align 8, !dbg !1262
  %89 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.53, i64 0, i64 0), i8* %88), !dbg !1263
  %90 = load i32, i32* @x.13
  %91 = load i32, i32* @y.14
  %92 = sub i32 %90, 1
  %93 = mul i32 %90, %92
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %91, 10
  %97 = or i1 %95, %96
  br i1 %97, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %98, !dbg !1263

98:                                               ; preds = %originalBBpart212, %originalBBpart28
  %99 = load i32, i32* @x.13
  %100 = load i32, i32* @y.14
  %101 = sub i32 %99, 1
  %102 = mul i32 %99, %101
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %100, 10
  %106 = or i1 %104, %105
  br i1 %106, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %98, %originalBB14alteredBB
  %107 = load i32, i32* @euid, align 4, !dbg !1264
  %108 = load i32, i32* @ruid, align 4, !dbg !1266
  %109 = icmp ne i32 %107, %108, !dbg !1267
  %110 = load i32, i32* @x.13
  %111 = load i32, i32* @y.14
  %112 = sub i32 %110, 1
  %113 = mul i32 %110, %112
  %114 = urem i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %111, 10
  %117 = or i1 %115, %116
  br i1 %117, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %109, label %118, label %180, !dbg !1268

118:                                              ; preds = %originalBBpart216
  %119 = load i32, i32* @x.13
  %120 = load i32, i32* @y.14
  %121 = sub i32 %119, 1
  %122 = mul i32 %119, %121
  %123 = urem i32 %122, 2
  %124 = icmp eq i32 %123, 0
  %125 = icmp slt i32 %120, 10
  %126 = or i1 %124, %125
  br i1 %126, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %118, %originalBB18alteredBB
  %127 = call i8* @gettext(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.55, i64 0, i64 0)) #10, !dbg !1269
  %128 = call i8* @uidtostr_ptr(i32* @euid), !dbg !1271
  %129 = call i32 (i8*, ...) @printf(i8* %127, i8* %128), !dbg !1272
  %130 = load i32, i32* @euid, align 4, !dbg !1273
  %131 = call %struct.passwd* @getpwuid(i32 %130), !dbg !1274
  store %struct.passwd* %131, %struct.passwd** %11, align 8, !dbg !1275
  %132 = load %struct.passwd*, %struct.passwd** %11, align 8, !dbg !1276
  %133 = icmp ne %struct.passwd* %132, null, !dbg !1276
  %134 = load i32, i32* @x.13
  %135 = load i32, i32* @y.14
  %136 = sub i32 %134, 1
  %137 = mul i32 %134, %136
  %138 = urem i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = icmp slt i32 %135, 10
  %141 = or i1 %139, %140
  br i1 %141, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br i1 %133, label %142, label %163, !dbg !1278

142:                                              ; preds = %originalBBpart220
  %143 = load i32, i32* @x.13
  %144 = load i32, i32* @y.14
  %145 = sub i32 %143, 1
  %146 = mul i32 %143, %145
  %147 = urem i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = icmp slt i32 %144, 10
  %150 = or i1 %148, %149
  br i1 %150, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %142, %originalBB22alteredBB
  %151 = load %struct.passwd*, %struct.passwd** %11, align 8, !dbg !1279
  %152 = getelementptr inbounds %struct.passwd, %struct.passwd* %151, i32 0, i32 0, !dbg !1280
  %153 = load i8*, i8** %152, align 8, !dbg !1280
  %154 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.53, i64 0, i64 0), i8* %153), !dbg !1281
  %155 = load i32, i32* @x.13
  %156 = load i32, i32* @y.14
  %157 = sub i32 %155, 1
  %158 = mul i32 %155, %157
  %159 = urem i32 %158, 2
  %160 = icmp eq i32 %159, 0
  %161 = icmp slt i32 %156, 10
  %162 = or i1 %160, %161
  br i1 %162, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br label %163, !dbg !1281

163:                                              ; preds = %originalBBpart224, %originalBBpart220
  %164 = load i32, i32* @x.13
  %165 = load i32, i32* @y.14
  %166 = sub i32 %164, 1
  %167 = mul i32 %164, %166
  %168 = urem i32 %167, 2
  %169 = icmp eq i32 %168, 0
  %170 = icmp slt i32 %165, 10
  %171 = or i1 %169, %170
  br i1 %171, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %163, %originalBB26alteredBB
  %172 = load i32, i32* @x.13
  %173 = load i32, i32* @y.14
  %174 = sub i32 %172, 1
  %175 = mul i32 %172, %174
  %176 = urem i32 %175, 2
  %177 = icmp eq i32 %176, 0
  %178 = icmp slt i32 %173, 10
  %179 = or i1 %177, %178
  br i1 %179, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br label %180, !dbg !1282

180:                                              ; preds = %originalBBpart228, %originalBBpart216
  %181 = load i32, i32* @x.13
  %182 = load i32, i32* @y.14
  %183 = sub i32 %181, 1
  %184 = mul i32 %181, %183
  %185 = urem i32 %184, 2
  %186 = icmp eq i32 %185, 0
  %187 = icmp slt i32 %182, 10
  %188 = or i1 %186, %187
  br i1 %188, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %180, %originalBB30alteredBB
  %189 = load i32, i32* @egid, align 4, !dbg !1283
  %190 = load i32, i32* @rgid, align 4, !dbg !1285
  %191 = icmp ne i32 %189, %190, !dbg !1286
  %192 = load i32, i32* @x.13
  %193 = load i32, i32* @y.14
  %194 = sub i32 %192, 1
  %195 = mul i32 %192, %194
  %196 = urem i32 %195, 2
  %197 = icmp eq i32 %196, 0
  %198 = icmp slt i32 %193, 10
  %199 = or i1 %197, %198
  br i1 %199, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br i1 %191, label %200, label %262, !dbg !1287

200:                                              ; preds = %originalBBpart232
  %201 = load i32, i32* @x.13
  %202 = load i32, i32* @y.14
  %203 = sub i32 %201, 1
  %204 = mul i32 %201, %203
  %205 = urem i32 %204, 2
  %206 = icmp eq i32 %205, 0
  %207 = icmp slt i32 %202, 10
  %208 = or i1 %206, %207
  br i1 %208, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %200, %originalBB34alteredBB
  %209 = call i8* @gettext(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.56, i64 0, i64 0)) #10, !dbg !1288
  %210 = call i8* @gidtostr_ptr(i32* @egid), !dbg !1290
  %211 = call i32 (i8*, ...) @printf(i8* %209, i8* %210), !dbg !1291
  %212 = load i32, i32* @egid, align 4, !dbg !1292
  %213 = call %struct.group* @getgrgid(i32 %212), !dbg !1293
  store %struct.group* %213, %struct.group** %12, align 8, !dbg !1294
  %214 = load %struct.group*, %struct.group** %12, align 8, !dbg !1295
  %215 = icmp ne %struct.group* %214, null, !dbg !1295
  %216 = load i32, i32* @x.13
  %217 = load i32, i32* @y.14
  %218 = sub i32 %216, 1
  %219 = mul i32 %216, %218
  %220 = urem i32 %219, 2
  %221 = icmp eq i32 %220, 0
  %222 = icmp slt i32 %217, 10
  %223 = or i1 %221, %222
  br i1 %223, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  br i1 %215, label %224, label %245, !dbg !1297

224:                                              ; preds = %originalBBpart236
  %225 = load i32, i32* @x.13
  %226 = load i32, i32* @y.14
  %227 = sub i32 %225, 1
  %228 = mul i32 %225, %227
  %229 = urem i32 %228, 2
  %230 = icmp eq i32 %229, 0
  %231 = icmp slt i32 %226, 10
  %232 = or i1 %230, %231
  br i1 %232, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %224, %originalBB38alteredBB
  %233 = load %struct.group*, %struct.group** %12, align 8, !dbg !1298
  %234 = getelementptr inbounds %struct.group, %struct.group* %233, i32 0, i32 0, !dbg !1299
  %235 = load i8*, i8** %234, align 8, !dbg !1299
  %236 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.53, i64 0, i64 0), i8* %235), !dbg !1300
  %237 = load i32, i32* @x.13
  %238 = load i32, i32* @y.14
  %239 = sub i32 %237, 1
  %240 = mul i32 %237, %239
  %241 = urem i32 %240, 2
  %242 = icmp eq i32 %241, 0
  %243 = icmp slt i32 %238, 10
  %244 = or i1 %242, %243
  br i1 %244, label %originalBBpart240, label %originalBB38alteredBB

originalBBpart240:                                ; preds = %originalBB38
  br label %245, !dbg !1300

245:                                              ; preds = %originalBBpart240, %originalBBpart236
  %246 = load i32, i32* @x.13
  %247 = load i32, i32* @y.14
  %248 = sub i32 %246, 1
  %249 = mul i32 %246, %248
  %250 = urem i32 %249, 2
  %251 = icmp eq i32 %250, 0
  %252 = icmp slt i32 %247, 10
  %253 = or i1 %251, %252
  br i1 %253, label %originalBB42, label %originalBB42alteredBB

originalBB42:                                     ; preds = %245, %originalBB42alteredBB
  %254 = load i32, i32* @x.13
  %255 = load i32, i32* @y.14
  %256 = sub i32 %254, 1
  %257 = mul i32 %254, %256
  %258 = urem i32 %257, 2
  %259 = icmp eq i32 %258, 0
  %260 = icmp slt i32 %255, 10
  %261 = or i1 %259, %260
  br i1 %261, label %originalBBpart244, label %originalBB42alteredBB

originalBBpart244:                                ; preds = %originalBB42
  br label %262, !dbg !1301

262:                                              ; preds = %originalBBpart244, %originalBBpart232
  call void @llvm.dbg.declare(metadata i32** %13, metadata !1302, metadata !DIExpression()), !dbg !1304
  call void @llvm.dbg.declare(metadata i32* %14, metadata !1305, metadata !DIExpression()), !dbg !1306
  %263 = load i32, i32* @x.13
  %264 = load i32, i32* @y.14
  %265 = sub i32 %263, 1
  %266 = mul i32 %263, %265
  %267 = urem i32 %266, 2
  %268 = icmp eq i32 %267, 0
  %269 = icmp slt i32 %264, 10
  %270 = or i1 %268, %269
  br i1 %270, label %originalBB46, label %originalBB46alteredBB

originalBB46:                                     ; preds = %262, %originalBB46alteredBB
  %271 = load i8*, i8** %10, align 8, !dbg !1307
  %272 = icmp ne i8* %271, null, !dbg !1307
  %273 = load i32, i32* @x.13
  %274 = load i32, i32* @y.14
  %275 = sub i32 %273, 1
  %276 = mul i32 %273, %275
  %277 = urem i32 %276, 2
  %278 = icmp eq i32 %277, 0
  %279 = icmp slt i32 %274, 10
  %280 = or i1 %278, %279
  br i1 %280, label %originalBBpart248, label %originalBB46alteredBB

originalBBpart248:                                ; preds = %originalBB46
  br i1 %272, label %281, label %355, !dbg !1309

281:                                              ; preds = %originalBBpart248
  %282 = load i32, i32* @x.13
  %283 = load i32, i32* @y.14
  %284 = sub i32 %282, 1
  %285 = mul i32 %282, %284
  %286 = urem i32 %285, 2
  %287 = icmp eq i32 %286, 0
  %288 = icmp slt i32 %283, 10
  %289 = or i1 %287, %288
  br i1 %289, label %originalBB50, label %originalBB50alteredBB

originalBB50:                                     ; preds = %281, %originalBB50alteredBB
  %290 = load %struct.passwd*, %struct.passwd** %11, align 8, !dbg !1310
  %291 = icmp ne %struct.passwd* %290, null, !dbg !1310
  %292 = load i32, i32* @x.13
  %293 = load i32, i32* @y.14
  %294 = sub i32 %292, 1
  %295 = mul i32 %292, %294
  %296 = urem i32 %295, 2
  %297 = icmp eq i32 %296, 0
  %298 = icmp slt i32 %293, 10
  %299 = or i1 %297, %298
  br i1 %299, label %originalBBpart252, label %originalBB50alteredBB

originalBBpart252:                                ; preds = %originalBB50
  br i1 %291, label %300, label %320, !dbg !1310

300:                                              ; preds = %originalBBpart252
  %301 = load i32, i32* @x.13
  %302 = load i32, i32* @y.14
  %303 = sub i32 %301, 1
  %304 = mul i32 %301, %303
  %305 = urem i32 %304, 2
  %306 = icmp eq i32 %305, 0
  %307 = icmp slt i32 %302, 10
  %308 = or i1 %306, %307
  br i1 %308, label %originalBB54, label %originalBB54alteredBB

originalBB54:                                     ; preds = %300, %originalBB54alteredBB
  %309 = load %struct.passwd*, %struct.passwd** %11, align 8, !dbg !1311
  %310 = getelementptr inbounds %struct.passwd, %struct.passwd* %309, i32 0, i32 3, !dbg !1312
  %311 = load i32, i32* %310, align 4, !dbg !1312
  %312 = load i32, i32* @x.13
  %313 = load i32, i32* @y.14
  %314 = sub i32 %312, 1
  %315 = mul i32 %312, %314
  %316 = urem i32 %315, 2
  %317 = icmp eq i32 %316, 0
  %318 = icmp slt i32 %313, 10
  %319 = or i1 %317, %318
  br i1 %319, label %originalBBpart256, label %originalBB54alteredBB

originalBBpart256:                                ; preds = %originalBB54
  br label %337, !dbg !1310

320:                                              ; preds = %originalBBpart252
  %321 = load i32, i32* @x.13
  %322 = load i32, i32* @y.14
  %323 = sub i32 %321, 1
  %324 = mul i32 %321, %323
  %325 = urem i32 %324, 2
  %326 = icmp eq i32 %325, 0
  %327 = icmp slt i32 %322, 10
  %328 = or i1 %326, %327
  br i1 %328, label %originalBB58, label %originalBB58alteredBB

originalBB58:                                     ; preds = %320, %originalBB58alteredBB
  %329 = load i32, i32* @x.13
  %330 = load i32, i32* @y.14
  %331 = sub i32 %329, 1
  %332 = mul i32 %329, %331
  %333 = urem i32 %332, 2
  %334 = icmp eq i32 %333, 0
  %335 = icmp slt i32 %330, 10
  %336 = or i1 %334, %335
  br i1 %336, label %originalBBpart260, label %originalBB58alteredBB

originalBBpart260:                                ; preds = %originalBB58
  br label %337, !dbg !1310

337:                                              ; preds = %originalBBpart260, %originalBBpart256
  %338 = phi i32 [ %311, %originalBBpart256 ], [ -1, %originalBBpart260 ], !dbg !1310
  %339 = load i32, i32* @x.13
  %340 = load i32, i32* @y.14
  %341 = sub i32 %339, 1
  %342 = mul i32 %339, %341
  %343 = urem i32 %342, 2
  %344 = icmp eq i32 %343, 0
  %345 = icmp slt i32 %340, 10
  %346 = or i1 %344, %345
  br i1 %346, label %originalBB62, label %originalBB62alteredBB

originalBB62:                                     ; preds = %337, %originalBB62alteredBB
  store i32 %338, i32* %14, align 4, !dbg !1313
  %347 = load i32, i32* @x.13
  %348 = load i32, i32* @y.14
  %349 = sub i32 %347, 1
  %350 = mul i32 %347, %349
  %351 = urem i32 %350, 2
  %352 = icmp eq i32 %351, 0
  %353 = icmp slt i32 %348, 10
  %354 = or i1 %352, %353
  br i1 %354, label %originalBBpart264, label %originalBB62alteredBB

originalBBpart264:                                ; preds = %originalBB62
  br label %373, !dbg !1314

355:                                              ; preds = %originalBBpart248
  %356 = load i32, i32* @x.13
  %357 = load i32, i32* @y.14
  %358 = sub i32 %356, 1
  %359 = mul i32 %356, %358
  %360 = urem i32 %359, 2
  %361 = icmp eq i32 %360, 0
  %362 = icmp slt i32 %357, 10
  %363 = or i1 %361, %362
  br i1 %363, label %originalBB66, label %originalBB66alteredBB

originalBB66:                                     ; preds = %355, %originalBB66alteredBB
  %364 = load i32, i32* @egid, align 4, !dbg !1315
  store i32 %364, i32* %14, align 4, !dbg !1316
  %365 = load i32, i32* @x.13
  %366 = load i32, i32* @y.14
  %367 = sub i32 %365, 1
  %368 = mul i32 %365, %367
  %369 = urem i32 %368, 2
  %370 = icmp eq i32 %369, 0
  %371 = icmp slt i32 %366, 10
  %372 = or i1 %370, %371
  br i1 %372, label %originalBBpart268, label %originalBB66alteredBB

originalBBpart268:                                ; preds = %originalBB66
  br label %373

373:                                              ; preds = %originalBBpart268, %originalBBpart264
  call void @llvm.dbg.declare(metadata i32* %15, metadata !1317, metadata !DIExpression()), !dbg !1318
  %374 = load i32, i32* @x.13
  %375 = load i32, i32* @y.14
  %376 = sub i32 %374, 1
  %377 = mul i32 %374, %376
  %378 = urem i32 %377, 2
  %379 = icmp eq i32 %378, 0
  %380 = icmp slt i32 %375, 10
  %381 = or i1 %379, %380
  br i1 %381, label %originalBB70, label %originalBB70alteredBB

originalBB70:                                     ; preds = %373, %originalBB70alteredBB
  %382 = load i8*, i8** %10, align 8, !dbg !1319
  %383 = load i32, i32* %14, align 4, !dbg !1320
  %384 = call i32 @xgetgroups(i8* %382, i32 %383, i32** %13), !dbg !1321
  store i32 %384, i32* %15, align 4, !dbg !1318
  %385 = load i32, i32* %15, align 4, !dbg !1322
  %386 = icmp slt i32 %385, 0, !dbg !1324
  %387 = load i32, i32* @x.13
  %388 = load i32, i32* @y.14
  %389 = sub i32 %387, 1
  %390 = mul i32 %387, %389
  %391 = urem i32 %390, 2
  %392 = icmp eq i32 %391, 0
  %393 = icmp slt i32 %388, 10
  %394 = or i1 %392, %393
  br i1 %394, label %originalBBpart272, label %originalBB70alteredBB

originalBBpart272:                                ; preds = %originalBB70
  br i1 %386, label %395, label %479, !dbg !1325

395:                                              ; preds = %originalBBpart272
  %396 = load i32, i32* @x.13
  %397 = load i32, i32* @y.14
  %398 = sub i32 %396, 1
  %399 = mul i32 %396, %398
  %400 = urem i32 %399, 2
  %401 = icmp eq i32 %400, 0
  %402 = icmp slt i32 %397, 10
  %403 = or i1 %401, %402
  br i1 %403, label %originalBB74, label %originalBB74alteredBB

originalBB74:                                     ; preds = %395, %originalBB74alteredBB
  %404 = load i8*, i8** %10, align 8, !dbg !1326
  %405 = icmp ne i8* %404, null, !dbg !1326
  %406 = load i32, i32* @x.13
  %407 = load i32, i32* @y.14
  %408 = sub i32 %406, 1
  %409 = mul i32 %406, %408
  %410 = urem i32 %409, 2
  %411 = icmp eq i32 %410, 0
  %412 = icmp slt i32 %407, 10
  %413 = or i1 %411, %412
  br i1 %413, label %originalBBpart276, label %originalBB74alteredBB

originalBBpart276:                                ; preds = %originalBB74
  br i1 %405, label %414, label %436, !dbg !1329

414:                                              ; preds = %originalBBpart276
  %415 = load i32, i32* @x.13
  %416 = load i32, i32* @y.14
  %417 = sub i32 %415, 1
  %418 = mul i32 %415, %417
  %419 = urem i32 %418, 2
  %420 = icmp eq i32 %419, 0
  %421 = icmp slt i32 %416, 10
  %422 = or i1 %420, %421
  br i1 %422, label %originalBB78, label %originalBB78alteredBB

originalBB78:                                     ; preds = %414, %originalBB78alteredBB
  %423 = call i32* @__errno_location() #15, !dbg !1330
  %424 = load i32, i32* %423, align 4, !dbg !1330
  %425 = call i8* @gettext(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.57, i64 0, i64 0)) #10, !dbg !1331
  %426 = load i8*, i8** %10, align 8, !dbg !1332
  %427 = call i8* @quote(i8* %426), !dbg !1333
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %424, i8* %425, i8* %427), !dbg !1334
  %428 = load i32, i32* @x.13
  %429 = load i32, i32* @y.14
  %430 = sub i32 %428, 1
  %431 = mul i32 %428, %430
  %432 = urem i32 %431, 2
  %433 = icmp eq i32 %432, 0
  %434 = icmp slt i32 %429, 10
  %435 = or i1 %433, %434
  br i1 %435, label %originalBBpart280, label %originalBB78alteredBB

originalBBpart280:                                ; preds = %originalBB78
  br label %456, !dbg !1334

436:                                              ; preds = %originalBBpart276
  %437 = load i32, i32* @x.13
  %438 = load i32, i32* @y.14
  %439 = sub i32 %437, 1
  %440 = mul i32 %437, %439
  %441 = urem i32 %440, 2
  %442 = icmp eq i32 %441, 0
  %443 = icmp slt i32 %438, 10
  %444 = or i1 %442, %443
  br i1 %444, label %originalBB82, label %originalBB82alteredBB

originalBB82:                                     ; preds = %436, %originalBB82alteredBB
  %445 = call i32* @__errno_location() #15, !dbg !1335
  %446 = load i32, i32* %445, align 4, !dbg !1335
  %447 = call i8* @gettext(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.58, i64 0, i64 0)) #10, !dbg !1336
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %446, i8* %447), !dbg !1337
  %448 = load i32, i32* @x.13
  %449 = load i32, i32* @y.14
  %450 = sub i32 %448, 1
  %451 = mul i32 %448, %450
  %452 = urem i32 %451, 2
  %453 = icmp eq i32 %452, 0
  %454 = icmp slt i32 %449, 10
  %455 = or i1 %453, %454
  br i1 %455, label %originalBBpart284, label %originalBB82alteredBB

originalBBpart284:                                ; preds = %originalBB82
  br label %456

456:                                              ; preds = %originalBBpart284, %originalBBpart280
  %457 = load i32, i32* @x.13
  %458 = load i32, i32* @y.14
  %459 = sub i32 %457, 1
  %460 = mul i32 %457, %459
  %461 = urem i32 %460, 2
  %462 = icmp eq i32 %461, 0
  %463 = icmp slt i32 %458, 10
  %464 = or i1 %462, %463
  br i1 %464, label %originalBB86, label %originalBB86alteredBB

originalBB86:                                     ; preds = %456, %originalBB86alteredBB
  %465 = load i8, i8* @ok, align 1, !dbg !1338
  %466 = trunc i8 %465 to i1, !dbg !1338
  %467 = zext i1 %466 to i32, !dbg !1338
  %468 = and i32 %467, 0, !dbg !1338
  %469 = icmp ne i32 %468, 0, !dbg !1338
  %470 = zext i1 %469 to i8, !dbg !1338
  store i8 %470, i8* @ok, align 1, !dbg !1338
  %471 = load i32, i32* @x.13
  %472 = load i32, i32* @y.14
  %473 = sub i32 %471, 1
  %474 = mul i32 %471, %473
  %475 = urem i32 %474, 2
  %476 = icmp eq i32 %475, 0
  %477 = icmp slt i32 %472, 10
  %478 = or i1 %476, %477
  br i1 %478, label %originalBBpart296, label %originalBB86alteredBB

originalBBpart296:                                ; preds = %originalBB86
  br label %722, !dbg !1339

479:                                              ; preds = %originalBBpart272
  %480 = load i32, i32* @x.13
  %481 = load i32, i32* @y.14
  %482 = sub i32 %480, 1
  %483 = mul i32 %480, %482
  %484 = urem i32 %483, 2
  %485 = icmp eq i32 %484, 0
  %486 = icmp slt i32 %481, 10
  %487 = or i1 %485, %486
  br i1 %487, label %originalBB98, label %originalBB98alteredBB

originalBB98:                                     ; preds = %479, %originalBB98alteredBB
  %488 = load i32, i32* %15, align 4, !dbg !1340
  %489 = icmp sgt i32 %488, 0, !dbg !1342
  %490 = load i32, i32* @x.13
  %491 = load i32, i32* @y.14
  %492 = sub i32 %490, 1
  %493 = mul i32 %490, %492
  %494 = urem i32 %493, 2
  %495 = icmp eq i32 %494, 0
  %496 = icmp slt i32 %491, 10
  %497 = or i1 %495, %496
  br i1 %497, label %originalBBpart2100, label %originalBB98alteredBB

originalBBpart2100:                               ; preds = %originalBB98
  br i1 %489, label %498, label %518, !dbg !1343

498:                                              ; preds = %originalBBpart2100
  %499 = load i32, i32* @x.13
  %500 = load i32, i32* @y.14
  %501 = sub i32 %499, 1
  %502 = mul i32 %499, %501
  %503 = urem i32 %502, 2
  %504 = icmp eq i32 %503, 0
  %505 = icmp slt i32 %500, 10
  %506 = or i1 %504, %505
  br i1 %506, label %originalBB102, label %originalBB102alteredBB

originalBB102:                                    ; preds = %498, %originalBB102alteredBB
  %507 = call i8* @gettext(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.59, i64 0, i64 0)) #10, !dbg !1344
  %508 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1344
  %509 = call i32 @fputs_unlocked(i8* %507, %struct._IO_FILE* %508), !dbg !1344
  %510 = load i32, i32* @x.13
  %511 = load i32, i32* @y.14
  %512 = sub i32 %510, 1
  %513 = mul i32 %510, %512
  %514 = urem i32 %513, 2
  %515 = icmp eq i32 %514, 0
  %516 = icmp slt i32 %511, 10
  %517 = or i1 %515, %516
  br i1 %517, label %originalBBpart2104, label %originalBB102alteredBB

originalBBpart2104:                               ; preds = %originalBB102
  br label %518, !dbg !1344

518:                                              ; preds = %originalBBpart2104, %originalBBpart2100
  call void @llvm.dbg.declare(metadata i32* %16, metadata !1345, metadata !DIExpression()), !dbg !1347
  %519 = load i32, i32* @x.13
  %520 = load i32, i32* @y.14
  %521 = sub i32 %519, 1
  %522 = mul i32 %519, %521
  %523 = urem i32 %522, 2
  %524 = icmp eq i32 %523, 0
  %525 = icmp slt i32 %520, 10
  %526 = or i1 %524, %525
  br i1 %526, label %originalBB106, label %originalBB106alteredBB

originalBB106:                                    ; preds = %518, %originalBB106alteredBB
  store i32 0, i32* %16, align 4, !dbg !1347
  %527 = load i32, i32* @x.13
  %528 = load i32, i32* @y.14
  %529 = sub i32 %527, 1
  %530 = mul i32 %527, %529
  %531 = urem i32 %530, 2
  %532 = icmp eq i32 %531, 0
  %533 = icmp slt i32 %528, 10
  %534 = or i1 %532, %533
  br i1 %534, label %originalBBpart2108, label %originalBB106alteredBB

originalBBpart2108:                               ; preds = %originalBB106
  br label %535, !dbg !1348

535:                                              ; preds = %originalBBpart2143, %originalBBpart2108
  %536 = load i32, i32* @x.13
  %537 = load i32, i32* @y.14
  %538 = sub i32 %536, 1
  %539 = mul i32 %536, %538
  %540 = urem i32 %539, 2
  %541 = icmp eq i32 %540, 0
  %542 = icmp slt i32 %537, 10
  %543 = or i1 %541, %542
  br i1 %543, label %originalBB110, label %originalBB110alteredBB

originalBB110:                                    ; preds = %535, %originalBB110alteredBB
  %544 = load i32, i32* %16, align 4, !dbg !1349
  %545 = load i32, i32* %15, align 4, !dbg !1351
  %546 = icmp slt i32 %544, %545, !dbg !1352
  %547 = load i32, i32* @x.13
  %548 = load i32, i32* @y.14
  %549 = sub i32 %547, 1
  %550 = mul i32 %547, %549
  %551 = urem i32 %550, 2
  %552 = icmp eq i32 %551, 0
  %553 = icmp slt i32 %548, 10
  %554 = or i1 %552, %553
  br i1 %554, label %originalBBpart2112, label %originalBB110alteredBB

originalBBpart2112:                               ; preds = %originalBB110
  br i1 %546, label %555, label %681, !dbg !1353

555:                                              ; preds = %originalBBpart2112
  %556 = load i32, i32* @x.13
  %557 = load i32, i32* @y.14
  %558 = sub i32 %556, 1
  %559 = mul i32 %556, %558
  %560 = urem i32 %559, 2
  %561 = icmp eq i32 %560, 0
  %562 = icmp slt i32 %557, 10
  %563 = or i1 %561, %562
  br i1 %563, label %originalBB114, label %originalBB114alteredBB

originalBB114:                                    ; preds = %555, %originalBB114alteredBB
  %564 = load i32, i32* %16, align 4, !dbg !1354
  %565 = icmp sgt i32 %564, 0, !dbg !1357
  %566 = load i32, i32* @x.13
  %567 = load i32, i32* @y.14
  %568 = sub i32 %566, 1
  %569 = mul i32 %566, %568
  %570 = urem i32 %569, 2
  %571 = icmp eq i32 %570, 0
  %572 = icmp slt i32 %567, 10
  %573 = or i1 %571, %572
  br i1 %573, label %originalBBpart2116, label %originalBB114alteredBB

originalBBpart2116:                               ; preds = %originalBB114
  br i1 %565, label %574, label %592, !dbg !1358

574:                                              ; preds = %originalBBpart2116
  %575 = load i32, i32* @x.13
  %576 = load i32, i32* @y.14
  %577 = sub i32 %575, 1
  %578 = mul i32 %575, %577
  %579 = urem i32 %578, 2
  %580 = icmp eq i32 %579, 0
  %581 = icmp slt i32 %576, 10
  %582 = or i1 %580, %581
  br i1 %582, label %originalBB118, label %originalBB118alteredBB

originalBB118:                                    ; preds = %574, %originalBB118alteredBB
  %583 = call i32 @putchar_unlocked(i32 44), !dbg !1359
  %584 = load i32, i32* @x.13
  %585 = load i32, i32* @y.14
  %586 = sub i32 %584, 1
  %587 = mul i32 %584, %586
  %588 = urem i32 %587, 2
  %589 = icmp eq i32 %588, 0
  %590 = icmp slt i32 %585, 10
  %591 = or i1 %589, %590
  br i1 %591, label %originalBBpart2120, label %originalBB118alteredBB

originalBBpart2120:                               ; preds = %originalBB118
  br label %592, !dbg !1359

592:                                              ; preds = %originalBBpart2120, %originalBBpart2116
  %593 = load i32, i32* @x.13
  %594 = load i32, i32* @y.14
  %595 = sub i32 %593, 1
  %596 = mul i32 %593, %595
  %597 = urem i32 %596, 2
  %598 = icmp eq i32 %597, 0
  %599 = icmp slt i32 %594, 10
  %600 = or i1 %598, %599
  br i1 %600, label %originalBB122, label %originalBB122alteredBB

originalBB122:                                    ; preds = %592, %originalBB122alteredBB
  %601 = load i32*, i32** %13, align 8, !dbg !1360
  %602 = load i32, i32* %16, align 4, !dbg !1360
  %603 = sext i32 %602 to i64, !dbg !1360
  %604 = getelementptr inbounds i32, i32* %601, i64 %603, !dbg !1360
  %605 = call i8* @gidtostr_ptr(i32* %604), !dbg !1360
  %606 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1360
  %607 = call i32 @fputs_unlocked(i8* %605, %struct._IO_FILE* %606), !dbg !1360
  %608 = load i32*, i32** %13, align 8, !dbg !1361
  %609 = load i32, i32* %16, align 4, !dbg !1362
  %610 = sext i32 %609 to i64, !dbg !1361
  %611 = getelementptr inbounds i32, i32* %608, i64 %610, !dbg !1361
  %612 = load i32, i32* %611, align 4, !dbg !1361
  %613 = call %struct.group* @getgrgid(i32 %612), !dbg !1363
  store %struct.group* %613, %struct.group** %12, align 8, !dbg !1364
  %614 = load %struct.group*, %struct.group** %12, align 8, !dbg !1365
  %615 = icmp ne %struct.group* %614, null, !dbg !1365
  %616 = load i32, i32* @x.13
  %617 = load i32, i32* @y.14
  %618 = sub i32 %616, 1
  %619 = mul i32 %616, %618
  %620 = urem i32 %619, 2
  %621 = icmp eq i32 %620, 0
  %622 = icmp slt i32 %617, 10
  %623 = or i1 %621, %622
  br i1 %623, label %originalBBpart2124, label %originalBB122alteredBB

originalBBpart2124:                               ; preds = %originalBB122
  br i1 %615, label %624, label %645, !dbg !1367

624:                                              ; preds = %originalBBpart2124
  %625 = load i32, i32* @x.13
  %626 = load i32, i32* @y.14
  %627 = sub i32 %625, 1
  %628 = mul i32 %625, %627
  %629 = urem i32 %628, 2
  %630 = icmp eq i32 %629, 0
  %631 = icmp slt i32 %626, 10
  %632 = or i1 %630, %631
  br i1 %632, label %originalBB126, label %originalBB126alteredBB

originalBB126:                                    ; preds = %624, %originalBB126alteredBB
  %633 = load %struct.group*, %struct.group** %12, align 8, !dbg !1368
  %634 = getelementptr inbounds %struct.group, %struct.group* %633, i32 0, i32 0, !dbg !1369
  %635 = load i8*, i8** %634, align 8, !dbg !1369
  %636 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.53, i64 0, i64 0), i8* %635), !dbg !1370
  %637 = load i32, i32* @x.13
  %638 = load i32, i32* @y.14
  %639 = sub i32 %637, 1
  %640 = mul i32 %637, %639
  %641 = urem i32 %640, 2
  %642 = icmp eq i32 %641, 0
  %643 = icmp slt i32 %638, 10
  %644 = or i1 %642, %643
  br i1 %644, label %originalBBpart2128, label %originalBB126alteredBB

originalBBpart2128:                               ; preds = %originalBB126
  br label %645, !dbg !1370

645:                                              ; preds = %originalBBpart2128, %originalBBpart2124
  %646 = load i32, i32* @x.13
  %647 = load i32, i32* @y.14
  %648 = sub i32 %646, 1
  %649 = mul i32 %646, %648
  %650 = urem i32 %649, 2
  %651 = icmp eq i32 %650, 0
  %652 = icmp slt i32 %647, 10
  %653 = or i1 %651, %652
  br i1 %653, label %originalBB130, label %originalBB130alteredBB

originalBB130:                                    ; preds = %645, %originalBB130alteredBB
  %654 = load i32, i32* @x.13
  %655 = load i32, i32* @y.14
  %656 = sub i32 %654, 1
  %657 = mul i32 %654, %656
  %658 = urem i32 %657, 2
  %659 = icmp eq i32 %658, 0
  %660 = icmp slt i32 %655, 10
  %661 = or i1 %659, %660
  br i1 %661, label %originalBBpart2132, label %originalBB130alteredBB

originalBBpart2132:                               ; preds = %originalBB130
  br label %662, !dbg !1371

662:                                              ; preds = %originalBBpart2132
  %663 = load i32, i32* @x.13
  %664 = load i32, i32* @y.14
  %665 = sub i32 %663, 1
  %666 = mul i32 %663, %665
  %667 = urem i32 %666, 2
  %668 = icmp eq i32 %667, 0
  %669 = icmp slt i32 %664, 10
  %670 = or i1 %668, %669
  br i1 %670, label %originalBB134, label %originalBB134alteredBB

originalBB134:                                    ; preds = %662, %originalBB134alteredBB
  %671 = load i32, i32* %16, align 4, !dbg !1372
  %672 = add nsw i32 %671, 1, !dbg !1372
  store i32 %672, i32* %16, align 4, !dbg !1372
  %673 = load i32, i32* @x.13
  %674 = load i32, i32* @y.14
  %675 = sub i32 %673, 1
  %676 = mul i32 %673, %675
  %677 = urem i32 %676, 2
  %678 = icmp eq i32 %677, 0
  %679 = icmp slt i32 %674, 10
  %680 = or i1 %678, %679
  br i1 %680, label %originalBBpart2143, label %originalBB134alteredBB

originalBBpart2143:                               ; preds = %originalBB134
  br label %535, !dbg !1373, !llvm.loop !1374

681:                                              ; preds = %originalBBpart2112
  %682 = load i32, i32* @x.13
  %683 = load i32, i32* @y.14
  %684 = sub i32 %682, 1
  %685 = mul i32 %682, %684
  %686 = urem i32 %685, 2
  %687 = icmp eq i32 %686, 0
  %688 = icmp slt i32 %683, 10
  %689 = or i1 %687, %688
  br i1 %689, label %originalBB145, label %originalBB145alteredBB

originalBB145:                                    ; preds = %681, %originalBB145alteredBB
  %690 = load i32*, i32** %13, align 8, !dbg !1376
  %691 = bitcast i32* %690 to i8*, !dbg !1376
  call void @free(i8* %691) #10, !dbg !1377
  %692 = load i8*, i8** @context, align 8, !dbg !1378
  %693 = icmp ne i8* %692, null, !dbg !1378
  %694 = load i32, i32* @x.13
  %695 = load i32, i32* @y.14
  %696 = sub i32 %694, 1
  %697 = mul i32 %694, %696
  %698 = urem i32 %697, 2
  %699 = icmp eq i32 %698, 0
  %700 = icmp slt i32 %695, 10
  %701 = or i1 %699, %700
  br i1 %701, label %originalBBpart2147, label %originalBB145alteredBB

originalBBpart2147:                               ; preds = %originalBB145
  br i1 %693, label %702, label %722, !dbg !1380

702:                                              ; preds = %originalBBpart2147
  %703 = load i32, i32* @x.13
  %704 = load i32, i32* @y.14
  %705 = sub i32 %703, 1
  %706 = mul i32 %703, %705
  %707 = urem i32 %706, 2
  %708 = icmp eq i32 %707, 0
  %709 = icmp slt i32 %704, 10
  %710 = or i1 %708, %709
  br i1 %710, label %originalBB149, label %originalBB149alteredBB

originalBB149:                                    ; preds = %702, %originalBB149alteredBB
  %711 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.60, i64 0, i64 0)) #10, !dbg !1381
  %712 = load i8*, i8** @context, align 8, !dbg !1382
  %713 = call i32 (i8*, ...) @printf(i8* %711, i8* %712), !dbg !1383
  %714 = load i32, i32* @x.13
  %715 = load i32, i32* @y.14
  %716 = sub i32 %714, 1
  %717 = mul i32 %714, %716
  %718 = urem i32 %717, 2
  %719 = icmp eq i32 %718, 0
  %720 = icmp slt i32 %715, 10
  %721 = or i1 %719, %720
  br i1 %721, label %originalBBpart2151, label %originalBB149alteredBB

originalBBpart2151:                               ; preds = %originalBB149
  br label %722, !dbg !1383

722:                                              ; preds = %originalBBpart2151, %originalBBpart2147, %originalBBpart296
  %723 = load i32, i32* @x.13
  %724 = load i32, i32* @y.14
  %725 = sub i32 %723, 1
  %726 = mul i32 %723, %725
  %727 = urem i32 %726, 2
  %728 = icmp eq i32 %727, 0
  %729 = icmp slt i32 %724, 10
  %730 = or i1 %728, %729
  br i1 %730, label %originalBB153, label %originalBB153alteredBB

originalBB153:                                    ; preds = %722, %originalBB153alteredBB
  %731 = load i32, i32* @x.13
  %732 = load i32, i32* @y.14
  %733 = sub i32 %731, 1
  %734 = mul i32 %731, %733
  %735 = urem i32 %734, 2
  %736 = icmp eq i32 %735, 0
  %737 = icmp slt i32 %732, 10
  %738 = or i1 %736, %737
  br i1 %738, label %originalBBpart2155, label %originalBB153alteredBB

originalBBpart2155:                               ; preds = %originalBB153
  ret void, !dbg !1384

originalBBalteredBB:                              ; preds = %originalBB, %1
  %739 = alloca i8*, align 8
  %740 = alloca %struct.passwd*, align 8
  %741 = alloca %struct.group*, align 8
  %742 = alloca i32*, align 8
  %743 = alloca i32, align 4
  %744 = alloca i32, align 4
  %745 = alloca i32, align 4
  store i8* %0, i8** %739, align 8
  call void @llvm.dbg.declare(metadata i8** %739, metadata !1385, metadata !DIExpression()), !dbg !1227
  call void @llvm.dbg.declare(metadata %struct.passwd** %740, metadata !1433, metadata !DIExpression()), !dbg !1229
  call void @llvm.dbg.declare(metadata %struct.group** %741, metadata !1444, metadata !DIExpression()), !dbg !1239
  %746 = call i8* @gettext(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.52, i64 0, i64 0)) #10, !dbg !1240
  %747 = call i8* @uidtostr_ptr(i32* @ruid), !dbg !1241
  %748 = call i32 (i8*, ...) @printf(i8* %746, i8* %747), !dbg !1242
  %749 = load i32, i32* @ruid, align 4, !dbg !1243
  %750 = call %struct.passwd* @getpwuid(i32 %749), !dbg !1244
  store %struct.passwd* %750, %struct.passwd** %740, align 8, !dbg !1245
  %751 = load %struct.passwd*, %struct.passwd** %740, align 8, !dbg !1246
  %752 = icmp ne %struct.passwd* %751, null, !dbg !1246
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %32
  %753 = load %struct.passwd*, %struct.passwd** %11, align 8, !dbg !1249
  %754 = getelementptr inbounds %struct.passwd, %struct.passwd* %753, i32 0, i32 0, !dbg !1250
  %755 = load i8*, i8** %754, align 8, !dbg !1250
  %756 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.53, i64 0, i64 0), i8* %755), !dbg !1251
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %53
  %757 = call i8* @gettext(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.54, i64 0, i64 0)) #10, !dbg !1252
  %758 = call i8* @gidtostr_ptr(i32* @rgid), !dbg !1253
  %759 = call i32 (i8*, ...) @printf(i8* %757, i8* %758), !dbg !1254
  %760 = load i32, i32* @rgid, align 4, !dbg !1255
  %761 = call %struct.group* @getgrgid(i32 %760), !dbg !1256
  store %struct.group* %761, %struct.group** %12, align 8, !dbg !1257
  %762 = load %struct.group*, %struct.group** %12, align 8, !dbg !1258
  %763 = icmp ne %struct.group* %762, null, !dbg !1258
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %77
  %764 = load %struct.group*, %struct.group** %12, align 8, !dbg !1261
  %765 = getelementptr inbounds %struct.group, %struct.group* %764, i32 0, i32 0, !dbg !1262
  %766 = load i8*, i8** %765, align 8, !dbg !1262
  %767 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.53, i64 0, i64 0), i8* %766), !dbg !1263
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %98
  %768 = load i32, i32* @euid, align 4, !dbg !1264
  %769 = load i32, i32* @ruid, align 4, !dbg !1266
  %770 = icmp ne i32 %768, %769, !dbg !1267
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %118
  %771 = call i8* @gettext(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.55, i64 0, i64 0)) #10, !dbg !1269
  %772 = call i8* @uidtostr_ptr(i32* @euid), !dbg !1271
  %773 = call i32 (i8*, ...) @printf(i8* %771, i8* %772), !dbg !1272
  %774 = load i32, i32* @euid, align 4, !dbg !1273
  %775 = call %struct.passwd* @getpwuid(i32 %774), !dbg !1274
  store %struct.passwd* %775, %struct.passwd** %11, align 8, !dbg !1275
  %776 = load %struct.passwd*, %struct.passwd** %11, align 8, !dbg !1276
  %777 = icmp ne %struct.passwd* %776, null, !dbg !1276
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %142
  %778 = load %struct.passwd*, %struct.passwd** %11, align 8, !dbg !1279
  %779 = getelementptr inbounds %struct.passwd, %struct.passwd* %778, i32 0, i32 0, !dbg !1280
  %780 = load i8*, i8** %779, align 8, !dbg !1280
  %781 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.53, i64 0, i64 0), i8* %780), !dbg !1281
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %163
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %180
  %782 = load i32, i32* @egid, align 4, !dbg !1283
  %783 = load i32, i32* @rgid, align 4, !dbg !1285
  %784 = icmp ne i32 %782, %783, !dbg !1286
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %200
  %785 = call i8* @gettext(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.56, i64 0, i64 0)) #10, !dbg !1288
  %786 = call i8* @gidtostr_ptr(i32* @egid), !dbg !1290
  %787 = call i32 (i8*, ...) @printf(i8* %785, i8* %786), !dbg !1291
  %788 = load i32, i32* @egid, align 4, !dbg !1292
  %789 = call %struct.group* @getgrgid(i32 %788), !dbg !1293
  store %struct.group* %789, %struct.group** %12, align 8, !dbg !1294
  %790 = load %struct.group*, %struct.group** %12, align 8, !dbg !1295
  %791 = icmp ne %struct.group* %790, null, !dbg !1295
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %224
  %792 = load %struct.group*, %struct.group** %12, align 8, !dbg !1298
  %793 = getelementptr inbounds %struct.group, %struct.group* %792, i32 0, i32 0, !dbg !1299
  %794 = load i8*, i8** %793, align 8, !dbg !1299
  %795 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.53, i64 0, i64 0), i8* %794), !dbg !1300
  br label %originalBB38

originalBB42alteredBB:                            ; preds = %originalBB42, %245
  br label %originalBB42

originalBB46alteredBB:                            ; preds = %originalBB46, %262
  %796 = load i8*, i8** %10, align 8, !dbg !1307
  %797 = icmp ne i8* %796, null, !dbg !1307
  br label %originalBB46

originalBB50alteredBB:                            ; preds = %originalBB50, %281
  %798 = load %struct.passwd*, %struct.passwd** %11, align 8, !dbg !1310
  %799 = icmp ne %struct.passwd* %798, null, !dbg !1310
  br label %originalBB50

originalBB54alteredBB:                            ; preds = %originalBB54, %300
  %800 = load %struct.passwd*, %struct.passwd** %11, align 8, !dbg !1311
  %801 = getelementptr inbounds %struct.passwd, %struct.passwd* %800, i32 0, i32 3, !dbg !1312
  %802 = load i32, i32* %801, align 4, !dbg !1312
  br label %originalBB54

originalBB58alteredBB:                            ; preds = %originalBB58, %320
  br label %originalBB58

originalBB62alteredBB:                            ; preds = %originalBB62, %337
  store i32 %338, i32* %14, align 4, !dbg !1313
  br label %originalBB62

originalBB66alteredBB:                            ; preds = %originalBB66, %355
  %803 = load i32, i32* @egid, align 4, !dbg !1315
  store i32 %803, i32* %14, align 4, !dbg !1316
  br label %originalBB66

originalBB70alteredBB:                            ; preds = %originalBB70, %373
  %804 = load i8*, i8** %10, align 8, !dbg !1319
  %805 = load i32, i32* %14, align 4, !dbg !1320
  %806 = call i32 @xgetgroups(i8* %804, i32 %805, i32** %13), !dbg !1321
  store i32 %806, i32* %15, align 4, !dbg !1318
  %807 = load i32, i32* %15, align 4, !dbg !1322
  %808 = icmp slt i32 %807, 0, !dbg !1324
  br label %originalBB70

originalBB74alteredBB:                            ; preds = %originalBB74, %395
  %809 = load i8*, i8** %10, align 8, !dbg !1326
  %810 = icmp ne i8* %809, null, !dbg !1326
  br label %originalBB74

originalBB78alteredBB:                            ; preds = %originalBB78, %414
  %811 = call i32* @__errno_location() #15, !dbg !1330
  %812 = load i32, i32* %811, align 4, !dbg !1330
  %813 = call i8* @gettext(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.57, i64 0, i64 0)) #10, !dbg !1331
  %814 = load i8*, i8** %10, align 8, !dbg !1332
  %815 = call i8* @quote(i8* %814), !dbg !1333
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %812, i8* %813, i8* %815), !dbg !1334
  br label %originalBB78

originalBB82alteredBB:                            ; preds = %originalBB82, %436
  %816 = call i32* @__errno_location() #15, !dbg !1335
  %817 = load i32, i32* %816, align 4, !dbg !1335
  %818 = call i8* @gettext(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.58, i64 0, i64 0)) #10, !dbg !1336
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %817, i8* %818), !dbg !1337
  br label %originalBB82

originalBB86alteredBB:                            ; preds = %originalBB86, %456
  %819 = load i8, i8* @ok, align 1, !dbg !1338
  %820 = trunc i8 %819 to i1, !dbg !1338
  %821 = zext i1 %820 to i32, !dbg !1338
  %_ = sub i32 %821, 0
  %gen = mul i32 %_, 0
  %_87 = sub i32 0, %821
  %gen88 = add i32 %_87, 0
  %_89 = shl i32 %821, 0
  %_90 = shl i32 %821, 0
  %_91 = shl i32 %821, 0
  %_92 = sub i32 0, %821
  %gen93 = add i32 %_92, 0
  %_94 = shl i32 %821, 0
  %822 = and i32 %821, 0, !dbg !1338
  %823 = icmp ne i32 %822, 0, !dbg !1338
  %824 = zext i1 %823 to i8, !dbg !1338
  store i8 %824, i8* @ok, align 1, !dbg !1338
  br label %originalBB86

originalBB98alteredBB:                            ; preds = %originalBB98, %479
  %825 = load i32, i32* %15, align 4, !dbg !1340
  %826 = icmp sgt i32 %825, 0, !dbg !1342
  br label %originalBB98

originalBB102alteredBB:                           ; preds = %originalBB102, %498
  %827 = call i8* @gettext(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.59, i64 0, i64 0)) #10, !dbg !1344
  %828 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1344
  %829 = call i32 @fputs_unlocked(i8* %827, %struct._IO_FILE* %828), !dbg !1344
  br label %originalBB102

originalBB106alteredBB:                           ; preds = %originalBB106, %518
  store i32 0, i32* %16, align 4, !dbg !1347
  br label %originalBB106

originalBB110alteredBB:                           ; preds = %originalBB110, %535
  %830 = load i32, i32* %16, align 4, !dbg !1349
  %831 = load i32, i32* %15, align 4, !dbg !1351
  %832 = icmp slt i32 %830, %831, !dbg !1352
  br label %originalBB110

originalBB114alteredBB:                           ; preds = %originalBB114, %555
  %833 = load i32, i32* %16, align 4, !dbg !1354
  %834 = icmp sgt i32 %833, 0, !dbg !1357
  br label %originalBB114

originalBB118alteredBB:                           ; preds = %originalBB118, %574
  %835 = call i32 @putchar_unlocked(i32 44), !dbg !1359
  br label %originalBB118

originalBB122alteredBB:                           ; preds = %originalBB122, %592
  %836 = load i32*, i32** %13, align 8, !dbg !1360
  %837 = load i32, i32* %16, align 4, !dbg !1360
  %838 = sext i32 %837 to i64, !dbg !1360
  %839 = getelementptr inbounds i32, i32* %836, i64 %838, !dbg !1360
  %840 = call i8* @gidtostr_ptr(i32* %839), !dbg !1360
  %841 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1360
  %842 = call i32 @fputs_unlocked(i8* %840, %struct._IO_FILE* %841), !dbg !1360
  %843 = load i32*, i32** %13, align 8, !dbg !1361
  %844 = load i32, i32* %16, align 4, !dbg !1362
  %845 = sext i32 %844 to i64, !dbg !1361
  %846 = getelementptr inbounds i32, i32* %843, i64 %845, !dbg !1361
  %847 = load i32, i32* %846, align 4, !dbg !1361
  %848 = call %struct.group* @getgrgid(i32 %847), !dbg !1363
  store %struct.group* %848, %struct.group** %12, align 8, !dbg !1364
  %849 = load %struct.group*, %struct.group** %12, align 8, !dbg !1365
  %850 = icmp ne %struct.group* %849, null, !dbg !1365
  br label %originalBB122

originalBB126alteredBB:                           ; preds = %originalBB126, %624
  %851 = load %struct.group*, %struct.group** %12, align 8, !dbg !1368
  %852 = getelementptr inbounds %struct.group, %struct.group* %851, i32 0, i32 0, !dbg !1369
  %853 = load i8*, i8** %852, align 8, !dbg !1369
  %854 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.53, i64 0, i64 0), i8* %853), !dbg !1370
  br label %originalBB126

originalBB130alteredBB:                           ; preds = %originalBB130, %645
  br label %originalBB130

originalBB134alteredBB:                           ; preds = %originalBB134, %662
  %855 = load i32, i32* %16, align 4, !dbg !1372
  %_135 = sub i32 0, %855
  %gen136 = add i32 %_135, 1
  %_137 = sub i32 %855, 1
  %gen138 = mul i32 %_137, 1
  %_139 = shl i32 %855, 1
  %_140 = sub i32 %855, 1
  %gen141 = mul i32 %_140, 1
  %856 = add nsw i32 %855, 1, !dbg !1372
  store i32 %856, i32* %16, align 4, !dbg !1372
  br label %originalBB134

originalBB145alteredBB:                           ; preds = %originalBB145, %681
  %857 = load i32*, i32** %13, align 8, !dbg !1376
  %858 = bitcast i32* %857 to i8*, !dbg !1376
  call void @free(i8* %858) #10, !dbg !1377
  %859 = load i8*, i8** @context, align 8, !dbg !1378
  %860 = icmp ne i8* %859, null, !dbg !1378
  br label %originalBB145

originalBB149alteredBB:                           ; preds = %originalBB149, %702
  %861 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.60, i64 0, i64 0)) #10, !dbg !1381
  %862 = load i8*, i8** @context, align 8, !dbg !1382
  %863 = call i32 (i8*, ...) @printf(i8* %861, i8* %862), !dbg !1383
  br label %originalBB149

originalBB153alteredBB:                           ; preds = %originalBB153, %722
  br label %originalBB153
}

declare dso_local i32 @putchar_unlocked(i32) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @uidtostr_ptr(i32*) #4 !dbg !48 {
  %2 = load i32, i32* @x.15
  %3 = load i32, i32* @y.16
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i32*, align 8
  store i32* %0, i32** %10, align 8
  call void @llvm.dbg.declare(metadata i32** %10, metadata !1452, metadata !DIExpression()), !dbg !1453
  %11 = load i32*, i32** %10, align 8, !dbg !1454
  %12 = load i32, i32* %11, align 4, !dbg !1455
  %13 = zext i32 %12 to i64, !dbg !1455
  %14 = call i8* @umaxtostr(i64 %13, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @uidtostr_ptr.buf, i64 0, i64 0)), !dbg !1456
  %15 = load i32, i32* @x.15
  %16 = load i32, i32* @y.16
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i8* %14, !dbg !1457

originalBBalteredBB:                              ; preds = %originalBB, %1
  %23 = alloca i32*, align 8
  store i32* %0, i32** %23, align 8
  call void @llvm.dbg.declare(metadata i32** %23, metadata !1458, metadata !DIExpression()), !dbg !1453
  %24 = load i32*, i32** %23, align 8, !dbg !1454
  %25 = load i32, i32* %24, align 4, !dbg !1455
  %26 = zext i32 %25 to i64, !dbg !1455
  %27 = call i8* @umaxtostr(i64 %26, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @uidtostr_ptr.buf, i64 0, i64 0)), !dbg !1456
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @gidtostr_ptr(i32*) #4 !dbg !58 {
  %2 = load i32, i32* @x.17
  %3 = load i32, i32* @y.18
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i32*, align 8
  store i32* %0, i32** %10, align 8
  call void @llvm.dbg.declare(metadata i32** %10, metadata !1505, metadata !DIExpression()), !dbg !1506
  %11 = load i32*, i32** %10, align 8, !dbg !1507
  %12 = load i32, i32* %11, align 4, !dbg !1508
  %13 = zext i32 %12 to i64, !dbg !1508
  %14 = call i8* @umaxtostr(i64 %13, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @gidtostr_ptr.buf, i64 0, i64 0)), !dbg !1509
  %15 = load i32, i32* @x.17
  %16 = load i32, i32* @y.18
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i8* %14, !dbg !1510

originalBBalteredBB:                              ; preds = %originalBB, %1
  %23 = alloca i32*, align 8
  store i32* %0, i32** %23, align 8
  call void @llvm.dbg.declare(metadata i32** %23, metadata !1511, metadata !DIExpression()), !dbg !1506
  %24 = load i32*, i32** %23, align 8, !dbg !1507
  %25 = load i32, i32* %24, align 4, !dbg !1508
  %26 = zext i32 %25 to i64, !dbg !1508
  %27 = call i8* @umaxtostr(i64 %26, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @gidtostr_ptr.buf, i64 0, i64 0)), !dbg !1509
  br label %originalBB
}

declare dso_local %struct.group* @getgrgid(i32) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @print_group_list(i8*, i32, i32, i32, i1 zeroext, i8 signext) #4 !dbg !1558 {
  %7 = load i32, i32* @x.19
  %8 = load i32, i32* @y.20
  %9 = sub i32 %7, 1
  %10 = mul i32 %7, %9
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %8, 10
  %14 = or i1 %12, %13
  br i1 %14, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %6, %originalBBalteredBB
  %15 = alloca i1, align 1
  %16 = alloca i8*, align 8
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i8, align 1
  %21 = alloca i8, align 1
  %22 = alloca i8, align 1
  %23 = alloca %struct.passwd*, align 8
  %24 = alloca i32*, align 8
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  store i8* %0, i8** %16, align 8
  call void @llvm.dbg.declare(metadata i8** %16, metadata !1561, metadata !DIExpression()), !dbg !1562
  store i32 %1, i32* %17, align 4
  call void @llvm.dbg.declare(metadata i32* %17, metadata !1563, metadata !DIExpression()), !dbg !1564
  store i32 %2, i32* %18, align 4
  call void @llvm.dbg.declare(metadata i32* %18, metadata !1565, metadata !DIExpression()), !dbg !1566
  store i32 %3, i32* %19, align 4
  call void @llvm.dbg.declare(metadata i32* %19, metadata !1567, metadata !DIExpression()), !dbg !1568
  %27 = zext i1 %4 to i8
  store i8 %27, i8* %20, align 1
  call void @llvm.dbg.declare(metadata i8* %20, metadata !1569, metadata !DIExpression()), !dbg !1570
  store i8 %5, i8* %21, align 1
  call void @llvm.dbg.declare(metadata i8* %21, metadata !1571, metadata !DIExpression()), !dbg !1572
  call void @llvm.dbg.declare(metadata i8* %22, metadata !1573, metadata !DIExpression()), !dbg !1574
  store i8 1, i8* %22, align 1, !dbg !1574
  call void @llvm.dbg.declare(metadata %struct.passwd** %23, metadata !1575, metadata !DIExpression()), !dbg !1586
  store %struct.passwd* null, %struct.passwd** %23, align 8, !dbg !1586
  %28 = load i8*, i8** %16, align 8, !dbg !1587
  %29 = icmp ne i8* %28, null, !dbg !1587
  %30 = load i32, i32* @x.19
  %31 = load i32, i32* @y.20
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %29, label %38, label %93, !dbg !1589

38:                                               ; preds = %originalBBpart2
  %39 = load i32, i32* @x.19
  %40 = load i32, i32* @y.20
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %38, %originalBB1alteredBB
  %47 = load i32, i32* %17, align 4, !dbg !1590
  %48 = call %struct.passwd* @getpwuid(i32 %47), !dbg !1592
  store %struct.passwd* %48, %struct.passwd** %23, align 8, !dbg !1593
  %49 = load %struct.passwd*, %struct.passwd** %23, align 8, !dbg !1594
  %50 = icmp eq %struct.passwd* %49, null, !dbg !1596
  %51 = load i32, i32* @x.19
  %52 = load i32, i32* @y.20
  %53 = sub i32 %51, 1
  %54 = mul i32 %51, %53
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %52, 10
  %58 = or i1 %56, %57
  br i1 %58, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %50, label %59, label %76, !dbg !1597

59:                                               ; preds = %originalBBpart24
  %60 = load i32, i32* @x.19
  %61 = load i32, i32* @y.20
  %62 = sub i32 %60, 1
  %63 = mul i32 %60, %62
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %61, 10
  %67 = or i1 %65, %66
  br i1 %67, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %59, %originalBB6alteredBB
  store i8 0, i8* %22, align 1, !dbg !1598
  %68 = load i32, i32* @x.19
  %69 = load i32, i32* @y.20
  %70 = sub i32 %68, 1
  %71 = mul i32 %68, %70
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %69, 10
  %75 = or i1 %73, %74
  br i1 %75, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %76, !dbg !1599

76:                                               ; preds = %originalBBpart28, %originalBBpart24
  %77 = load i32, i32* @x.19
  %78 = load i32, i32* @y.20
  %79 = sub i32 %77, 1
  %80 = mul i32 %77, %79
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %78, 10
  %84 = or i1 %82, %83
  br i1 %84, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %76, %originalBB10alteredBB
  %85 = load i32, i32* @x.19
  %86 = load i32, i32* @y.20
  %87 = sub i32 %85, 1
  %88 = mul i32 %85, %87
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %86, 10
  %92 = or i1 %90, %91
  br i1 %92, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %93, !dbg !1600

93:                                               ; preds = %originalBBpart212, %originalBBpart2
  %94 = load i32, i32* @x.19
  %95 = load i32, i32* @y.20
  %96 = sub i32 %94, 1
  %97 = mul i32 %94, %96
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %95, 10
  %101 = or i1 %99, %100
  br i1 %101, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %93, %originalBB14alteredBB
  %102 = load i32, i32* %18, align 4, !dbg !1601
  %103 = load i8, i8* %20, align 1, !dbg !1603
  %104 = trunc i8 %103 to i1, !dbg !1603
  %105 = call zeroext i1 @print_group(i32 %102, i1 zeroext %104), !dbg !1604
  %106 = load i32, i32* @x.19
  %107 = load i32, i32* @y.20
  %108 = sub i32 %106, 1
  %109 = mul i32 %106, %108
  %110 = urem i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %107, 10
  %113 = or i1 %111, %112
  br i1 %113, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %105, label %131, label %114, !dbg !1605

114:                                              ; preds = %originalBBpart216
  %115 = load i32, i32* @x.19
  %116 = load i32, i32* @y.20
  %117 = sub i32 %115, 1
  %118 = mul i32 %115, %117
  %119 = urem i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = icmp slt i32 %116, 10
  %122 = or i1 %120, %121
  br i1 %122, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %114, %originalBB18alteredBB
  store i8 0, i8* %22, align 1, !dbg !1606
  %123 = load i32, i32* @x.19
  %124 = load i32, i32* @y.20
  %125 = sub i32 %123, 1
  %126 = mul i32 %123, %125
  %127 = urem i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %124, 10
  %130 = or i1 %128, %129
  br i1 %130, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %131, !dbg !1607

131:                                              ; preds = %originalBBpart220, %originalBBpart216
  %132 = load i32, i32* @x.19
  %133 = load i32, i32* @y.20
  %134 = sub i32 %132, 1
  %135 = mul i32 %132, %134
  %136 = urem i32 %135, 2
  %137 = icmp eq i32 %136, 0
  %138 = icmp slt i32 %133, 10
  %139 = or i1 %137, %138
  br i1 %139, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %131, %originalBB22alteredBB
  %140 = load i32, i32* %19, align 4, !dbg !1608
  %141 = load i32, i32* %18, align 4, !dbg !1610
  %142 = icmp ne i32 %140, %141, !dbg !1611
  %143 = load i32, i32* @x.19
  %144 = load i32, i32* @y.20
  %145 = sub i32 %143, 1
  %146 = mul i32 %143, %145
  %147 = urem i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = icmp slt i32 %144, 10
  %150 = or i1 %148, %149
  br i1 %150, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br i1 %142, label %151, label %209, !dbg !1612

151:                                              ; preds = %originalBBpart224
  %152 = load i32, i32* @x.19
  %153 = load i32, i32* @y.20
  %154 = sub i32 %152, 1
  %155 = mul i32 %152, %154
  %156 = urem i32 %155, 2
  %157 = icmp eq i32 %156, 0
  %158 = icmp slt i32 %153, 10
  %159 = or i1 %157, %158
  br i1 %159, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %151, %originalBB26alteredBB
  %160 = load i8, i8* %21, align 1, !dbg !1613
  %161 = sext i8 %160 to i32, !dbg !1613
  %162 = call i32 @putchar_unlocked(i32 %161), !dbg !1613
  %163 = load i32, i32* %19, align 4, !dbg !1615
  %164 = load i8, i8* %20, align 1, !dbg !1617
  %165 = trunc i8 %164 to i1, !dbg !1617
  %166 = call zeroext i1 @print_group(i32 %163, i1 zeroext %165), !dbg !1618
  %167 = load i32, i32* @x.19
  %168 = load i32, i32* @y.20
  %169 = sub i32 %167, 1
  %170 = mul i32 %167, %169
  %171 = urem i32 %170, 2
  %172 = icmp eq i32 %171, 0
  %173 = icmp slt i32 %168, 10
  %174 = or i1 %172, %173
  br i1 %174, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br i1 %166, label %192, label %175, !dbg !1619

175:                                              ; preds = %originalBBpart228
  %176 = load i32, i32* @x.19
  %177 = load i32, i32* @y.20
  %178 = sub i32 %176, 1
  %179 = mul i32 %176, %178
  %180 = urem i32 %179, 2
  %181 = icmp eq i32 %180, 0
  %182 = icmp slt i32 %177, 10
  %183 = or i1 %181, %182
  br i1 %183, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %175, %originalBB30alteredBB
  store i8 0, i8* %22, align 1, !dbg !1620
  %184 = load i32, i32* @x.19
  %185 = load i32, i32* @y.20
  %186 = sub i32 %184, 1
  %187 = mul i32 %184, %186
  %188 = urem i32 %187, 2
  %189 = icmp eq i32 %188, 0
  %190 = icmp slt i32 %185, 10
  %191 = or i1 %189, %190
  br i1 %191, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br label %192, !dbg !1621

192:                                              ; preds = %originalBBpart232, %originalBBpart228
  %193 = load i32, i32* @x.19
  %194 = load i32, i32* @y.20
  %195 = sub i32 %193, 1
  %196 = mul i32 %193, %195
  %197 = urem i32 %196, 2
  %198 = icmp eq i32 %197, 0
  %199 = icmp slt i32 %194, 10
  %200 = or i1 %198, %199
  br i1 %200, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %192, %originalBB34alteredBB
  %201 = load i32, i32* @x.19
  %202 = load i32, i32* @y.20
  %203 = sub i32 %201, 1
  %204 = mul i32 %201, %203
  %205 = urem i32 %204, 2
  %206 = icmp eq i32 %205, 0
  %207 = icmp slt i32 %202, 10
  %208 = or i1 %206, %207
  br i1 %208, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  br label %209, !dbg !1622

209:                                              ; preds = %originalBBpart236, %originalBBpart224
  call void @llvm.dbg.declare(metadata i32** %24, metadata !1623, metadata !DIExpression()), !dbg !1625
  call void @llvm.dbg.declare(metadata i32* %25, metadata !1626, metadata !DIExpression()), !dbg !1627
  %210 = load i32, i32* @x.19
  %211 = load i32, i32* @y.20
  %212 = sub i32 %210, 1
  %213 = mul i32 %210, %212
  %214 = urem i32 %213, 2
  %215 = icmp eq i32 %214, 0
  %216 = icmp slt i32 %211, 10
  %217 = or i1 %215, %216
  br i1 %217, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %209, %originalBB38alteredBB
  %218 = load i8*, i8** %16, align 8, !dbg !1628
  %219 = load %struct.passwd*, %struct.passwd** %23, align 8, !dbg !1629
  %220 = icmp ne %struct.passwd* %219, null, !dbg !1629
  %221 = load i32, i32* @x.19
  %222 = load i32, i32* @y.20
  %223 = sub i32 %221, 1
  %224 = mul i32 %221, %223
  %225 = urem i32 %224, 2
  %226 = icmp eq i32 %225, 0
  %227 = icmp slt i32 %222, 10
  %228 = or i1 %226, %227
  br i1 %228, label %originalBBpart240, label %originalBB38alteredBB

originalBBpart240:                                ; preds = %originalBB38
  br i1 %220, label %229, label %249, !dbg !1629

229:                                              ; preds = %originalBBpart240
  %230 = load i32, i32* @x.19
  %231 = load i32, i32* @y.20
  %232 = sub i32 %230, 1
  %233 = mul i32 %230, %232
  %234 = urem i32 %233, 2
  %235 = icmp eq i32 %234, 0
  %236 = icmp slt i32 %231, 10
  %237 = or i1 %235, %236
  br i1 %237, label %originalBB42, label %originalBB42alteredBB

originalBB42:                                     ; preds = %229, %originalBB42alteredBB
  %238 = load %struct.passwd*, %struct.passwd** %23, align 8, !dbg !1630
  %239 = getelementptr inbounds %struct.passwd, %struct.passwd* %238, i32 0, i32 3, !dbg !1631
  %240 = load i32, i32* %239, align 4, !dbg !1631
  %241 = load i32, i32* @x.19
  %242 = load i32, i32* @y.20
  %243 = sub i32 %241, 1
  %244 = mul i32 %241, %243
  %245 = urem i32 %244, 2
  %246 = icmp eq i32 %245, 0
  %247 = icmp slt i32 %242, 10
  %248 = or i1 %246, %247
  br i1 %248, label %originalBBpart244, label %originalBB42alteredBB

originalBBpart244:                                ; preds = %originalBB42
  br label %267, !dbg !1629

249:                                              ; preds = %originalBBpart240
  %250 = load i32, i32* @x.19
  %251 = load i32, i32* @y.20
  %252 = sub i32 %250, 1
  %253 = mul i32 %250, %252
  %254 = urem i32 %253, 2
  %255 = icmp eq i32 %254, 0
  %256 = icmp slt i32 %251, 10
  %257 = or i1 %255, %256
  br i1 %257, label %originalBB46, label %originalBB46alteredBB

originalBB46:                                     ; preds = %249, %originalBB46alteredBB
  %258 = load i32, i32* %19, align 4, !dbg !1632
  %259 = load i32, i32* @x.19
  %260 = load i32, i32* @y.20
  %261 = sub i32 %259, 1
  %262 = mul i32 %259, %261
  %263 = urem i32 %262, 2
  %264 = icmp eq i32 %263, 0
  %265 = icmp slt i32 %260, 10
  %266 = or i1 %264, %265
  br i1 %266, label %originalBBpart248, label %originalBB46alteredBB

originalBBpart248:                                ; preds = %originalBB46
  br label %267, !dbg !1629

267:                                              ; preds = %originalBBpart248, %originalBBpart244
  %268 = phi i32 [ %240, %originalBBpart244 ], [ %258, %originalBBpart248 ], !dbg !1629
  %269 = load i32, i32* @x.19
  %270 = load i32, i32* @y.20
  %271 = sub i32 %269, 1
  %272 = mul i32 %269, %271
  %273 = urem i32 %272, 2
  %274 = icmp eq i32 %273, 0
  %275 = icmp slt i32 %270, 10
  %276 = or i1 %274, %275
  br i1 %276, label %originalBB50, label %originalBB50alteredBB

originalBB50:                                     ; preds = %267, %originalBB50alteredBB
  %277 = call i32 @xgetgroups(i8* %218, i32 %268, i32** %24), !dbg !1633
  store i32 %277, i32* %25, align 4, !dbg !1627
  %278 = load i32, i32* %25, align 4, !dbg !1634
  %279 = icmp slt i32 %278, 0, !dbg !1636
  %280 = load i32, i32* @x.19
  %281 = load i32, i32* @y.20
  %282 = sub i32 %280, 1
  %283 = mul i32 %280, %282
  %284 = urem i32 %283, 2
  %285 = icmp eq i32 %284, 0
  %286 = icmp slt i32 %281, 10
  %287 = or i1 %285, %286
  br i1 %287, label %originalBBpart252, label %originalBB50alteredBB

originalBBpart252:                                ; preds = %originalBB50
  br i1 %279, label %288, label %366, !dbg !1637

288:                                              ; preds = %originalBBpart252
  %289 = load i32, i32* @x.19
  %290 = load i32, i32* @y.20
  %291 = sub i32 %289, 1
  %292 = mul i32 %289, %291
  %293 = urem i32 %292, 2
  %294 = icmp eq i32 %293, 0
  %295 = icmp slt i32 %290, 10
  %296 = or i1 %294, %295
  br i1 %296, label %originalBB54, label %originalBB54alteredBB

originalBB54:                                     ; preds = %288, %originalBB54alteredBB
  %297 = load i8*, i8** %16, align 8, !dbg !1638
  %298 = icmp ne i8* %297, null, !dbg !1638
  %299 = load i32, i32* @x.19
  %300 = load i32, i32* @y.20
  %301 = sub i32 %299, 1
  %302 = mul i32 %299, %301
  %303 = urem i32 %302, 2
  %304 = icmp eq i32 %303, 0
  %305 = icmp slt i32 %300, 10
  %306 = or i1 %304, %305
  br i1 %306, label %originalBBpart256, label %originalBB54alteredBB

originalBBpart256:                                ; preds = %originalBB54
  br i1 %298, label %307, label %329, !dbg !1641

307:                                              ; preds = %originalBBpart256
  %308 = load i32, i32* @x.19
  %309 = load i32, i32* @y.20
  %310 = sub i32 %308, 1
  %311 = mul i32 %308, %310
  %312 = urem i32 %311, 2
  %313 = icmp eq i32 %312, 0
  %314 = icmp slt i32 %309, 10
  %315 = or i1 %313, %314
  br i1 %315, label %originalBB58, label %originalBB58alteredBB

originalBB58:                                     ; preds = %307, %originalBB58alteredBB
  %316 = call i32* @__errno_location() #15, !dbg !1642
  %317 = load i32, i32* %316, align 4, !dbg !1642
  %318 = call i8* @gettext(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.61, i64 0, i64 0)) #10, !dbg !1644
  %319 = load i8*, i8** %16, align 8, !dbg !1645
  %320 = call i8* @quote(i8* %319), !dbg !1646
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %317, i8* %318, i8* %320), !dbg !1647
  %321 = load i32, i32* @x.19
  %322 = load i32, i32* @y.20
  %323 = sub i32 %321, 1
  %324 = mul i32 %321, %323
  %325 = urem i32 %324, 2
  %326 = icmp eq i32 %325, 0
  %327 = icmp slt i32 %322, 10
  %328 = or i1 %326, %327
  br i1 %328, label %originalBBpart260, label %originalBB58alteredBB

originalBBpart260:                                ; preds = %originalBB58
  br label %349, !dbg !1648

329:                                              ; preds = %originalBBpart256
  %330 = load i32, i32* @x.19
  %331 = load i32, i32* @y.20
  %332 = sub i32 %330, 1
  %333 = mul i32 %330, %332
  %334 = urem i32 %333, 2
  %335 = icmp eq i32 %334, 0
  %336 = icmp slt i32 %331, 10
  %337 = or i1 %335, %336
  br i1 %337, label %originalBB62, label %originalBB62alteredBB

originalBB62:                                     ; preds = %329, %originalBB62alteredBB
  %338 = call i32* @__errno_location() #15, !dbg !1649
  %339 = load i32, i32* %338, align 4, !dbg !1649
  %340 = call i8* @gettext(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1.62, i64 0, i64 0)) #10, !dbg !1651
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %339, i8* %340), !dbg !1652
  %341 = load i32, i32* @x.19
  %342 = load i32, i32* @y.20
  %343 = sub i32 %341, 1
  %344 = mul i32 %341, %343
  %345 = urem i32 %344, 2
  %346 = icmp eq i32 %345, 0
  %347 = icmp slt i32 %342, 10
  %348 = or i1 %346, %347
  br i1 %348, label %originalBBpart264, label %originalBB62alteredBB

originalBBpart264:                                ; preds = %originalBB62
  br label %349

349:                                              ; preds = %originalBBpart264, %originalBBpart260
  %350 = load i32, i32* @x.19
  %351 = load i32, i32* @y.20
  %352 = sub i32 %350, 1
  %353 = mul i32 %350, %352
  %354 = urem i32 %353, 2
  %355 = icmp eq i32 %354, 0
  %356 = icmp slt i32 %351, 10
  %357 = or i1 %355, %356
  br i1 %357, label %originalBB66, label %originalBB66alteredBB

originalBB66:                                     ; preds = %349, %originalBB66alteredBB
  store i1 false, i1* %15, align 1, !dbg !1653
  %358 = load i32, i32* @x.19
  %359 = load i32, i32* @y.20
  %360 = sub i32 %358, 1
  %361 = mul i32 %358, %360
  %362 = urem i32 %361, 2
  %363 = icmp eq i32 %362, 0
  %364 = icmp slt i32 %359, 10
  %365 = or i1 %363, %364
  br i1 %365, label %originalBBpart268, label %originalBB66alteredBB

originalBBpart268:                                ; preds = %originalBB66
  br label %570, !dbg !1653

366:                                              ; preds = %originalBBpart252
  call void @llvm.dbg.declare(metadata i32* %26, metadata !1654, metadata !DIExpression()), !dbg !1656
  %367 = load i32, i32* @x.19
  %368 = load i32, i32* @y.20
  %369 = sub i32 %367, 1
  %370 = mul i32 %367, %369
  %371 = urem i32 %370, 2
  %372 = icmp eq i32 %371, 0
  %373 = icmp slt i32 %368, 10
  %374 = or i1 %372, %373
  br i1 %374, label %originalBB70, label %originalBB70alteredBB

originalBB70:                                     ; preds = %366, %originalBB70alteredBB
  store i32 0, i32* %26, align 4, !dbg !1656
  %375 = load i32, i32* @x.19
  %376 = load i32, i32* @y.20
  %377 = sub i32 %375, 1
  %378 = mul i32 %375, %377
  %379 = urem i32 %378, 2
  %380 = icmp eq i32 %379, 0
  %381 = icmp slt i32 %376, 10
  %382 = or i1 %380, %381
  br i1 %382, label %originalBBpart272, label %originalBB70alteredBB

originalBBpart272:                                ; preds = %originalBB70
  br label %383, !dbg !1657

383:                                              ; preds = %originalBBpart2116, %originalBBpart272
  %384 = load i32, i32* @x.19
  %385 = load i32, i32* @y.20
  %386 = sub i32 %384, 1
  %387 = mul i32 %384, %386
  %388 = urem i32 %387, 2
  %389 = icmp eq i32 %388, 0
  %390 = icmp slt i32 %385, 10
  %391 = or i1 %389, %390
  br i1 %391, label %originalBB74, label %originalBB74alteredBB

originalBB74:                                     ; preds = %383, %originalBB74alteredBB
  %392 = load i32, i32* %26, align 4, !dbg !1658
  %393 = load i32, i32* %25, align 4, !dbg !1660
  %394 = icmp slt i32 %392, %393, !dbg !1661
  %395 = load i32, i32* @x.19
  %396 = load i32, i32* @y.20
  %397 = sub i32 %395, 1
  %398 = mul i32 %395, %397
  %399 = urem i32 %398, 2
  %400 = icmp eq i32 %399, 0
  %401 = icmp slt i32 %396, 10
  %402 = or i1 %400, %401
  br i1 %402, label %originalBBpart276, label %originalBB74alteredBB

originalBBpart276:                                ; preds = %originalBB74
  br i1 %394, label %403, label %549, !dbg !1662

403:                                              ; preds = %originalBBpart276
  %404 = load i32, i32* @x.19
  %405 = load i32, i32* @y.20
  %406 = sub i32 %404, 1
  %407 = mul i32 %404, %406
  %408 = urem i32 %407, 2
  %409 = icmp eq i32 %408, 0
  %410 = icmp slt i32 %405, 10
  %411 = or i1 %409, %410
  br i1 %411, label %originalBB78, label %originalBB78alteredBB

originalBB78:                                     ; preds = %403, %originalBB78alteredBB
  %412 = load i32*, i32** %24, align 8, !dbg !1663
  %413 = load i32, i32* %26, align 4, !dbg !1665
  %414 = sext i32 %413 to i64, !dbg !1663
  %415 = getelementptr inbounds i32, i32* %412, i64 %414, !dbg !1663
  %416 = load i32, i32* %415, align 4, !dbg !1663
  %417 = load i32, i32* %18, align 4, !dbg !1666
  %418 = icmp ne i32 %416, %417, !dbg !1667
  %419 = load i32, i32* @x.19
  %420 = load i32, i32* @y.20
  %421 = sub i32 %419, 1
  %422 = mul i32 %419, %421
  %423 = urem i32 %422, 2
  %424 = icmp eq i32 %423, 0
  %425 = icmp slt i32 %420, 10
  %426 = or i1 %424, %425
  br i1 %426, label %originalBBpart280, label %originalBB78alteredBB

originalBBpart280:                                ; preds = %originalBB78
  br i1 %418, label %427, label %513, !dbg !1668

427:                                              ; preds = %originalBBpart280
  %428 = load i32, i32* @x.19
  %429 = load i32, i32* @y.20
  %430 = sub i32 %428, 1
  %431 = mul i32 %428, %430
  %432 = urem i32 %431, 2
  %433 = icmp eq i32 %432, 0
  %434 = icmp slt i32 %429, 10
  %435 = or i1 %433, %434
  br i1 %435, label %originalBB82, label %originalBB82alteredBB

originalBB82:                                     ; preds = %427, %originalBB82alteredBB
  %436 = load i32*, i32** %24, align 8, !dbg !1669
  %437 = load i32, i32* %26, align 4, !dbg !1670
  %438 = sext i32 %437 to i64, !dbg !1669
  %439 = getelementptr inbounds i32, i32* %436, i64 %438, !dbg !1669
  %440 = load i32, i32* %439, align 4, !dbg !1669
  %441 = load i32, i32* %19, align 4, !dbg !1671
  %442 = icmp ne i32 %440, %441, !dbg !1672
  %443 = load i32, i32* @x.19
  %444 = load i32, i32* @y.20
  %445 = sub i32 %443, 1
  %446 = mul i32 %443, %445
  %447 = urem i32 %446, 2
  %448 = icmp eq i32 %447, 0
  %449 = icmp slt i32 %444, 10
  %450 = or i1 %448, %449
  br i1 %450, label %originalBBpart284, label %originalBB82alteredBB

originalBBpart284:                                ; preds = %originalBB82
  br i1 %442, label %451, label %513, !dbg !1673

451:                                              ; preds = %originalBBpart284
  %452 = load i32, i32* @x.19
  %453 = load i32, i32* @y.20
  %454 = sub i32 %452, 1
  %455 = mul i32 %452, %454
  %456 = urem i32 %455, 2
  %457 = icmp eq i32 %456, 0
  %458 = icmp slt i32 %453, 10
  %459 = or i1 %457, %458
  br i1 %459, label %originalBB86, label %originalBB86alteredBB

originalBB86:                                     ; preds = %451, %originalBB86alteredBB
  %460 = load i8, i8* %21, align 1, !dbg !1674
  %461 = sext i8 %460 to i32, !dbg !1674
  %462 = call i32 @putchar_unlocked(i32 %461), !dbg !1674
  %463 = load i32*, i32** %24, align 8, !dbg !1676
  %464 = load i32, i32* %26, align 4, !dbg !1678
  %465 = sext i32 %464 to i64, !dbg !1676
  %466 = getelementptr inbounds i32, i32* %463, i64 %465, !dbg !1676
  %467 = load i32, i32* %466, align 4, !dbg !1676
  %468 = load i8, i8* %20, align 1, !dbg !1679
  %469 = trunc i8 %468 to i1, !dbg !1679
  %470 = call zeroext i1 @print_group(i32 %467, i1 zeroext %469), !dbg !1680
  %471 = load i32, i32* @x.19
  %472 = load i32, i32* @y.20
  %473 = sub i32 %471, 1
  %474 = mul i32 %471, %473
  %475 = urem i32 %474, 2
  %476 = icmp eq i32 %475, 0
  %477 = icmp slt i32 %472, 10
  %478 = or i1 %476, %477
  br i1 %478, label %originalBBpart288, label %originalBB86alteredBB

originalBBpart288:                                ; preds = %originalBB86
  br i1 %470, label %496, label %479, !dbg !1681

479:                                              ; preds = %originalBBpart288
  %480 = load i32, i32* @x.19
  %481 = load i32, i32* @y.20
  %482 = sub i32 %480, 1
  %483 = mul i32 %480, %482
  %484 = urem i32 %483, 2
  %485 = icmp eq i32 %484, 0
  %486 = icmp slt i32 %481, 10
  %487 = or i1 %485, %486
  br i1 %487, label %originalBB90, label %originalBB90alteredBB

originalBB90:                                     ; preds = %479, %originalBB90alteredBB
  store i8 0, i8* %22, align 1, !dbg !1682
  %488 = load i32, i32* @x.19
  %489 = load i32, i32* @y.20
  %490 = sub i32 %488, 1
  %491 = mul i32 %488, %490
  %492 = urem i32 %491, 2
  %493 = icmp eq i32 %492, 0
  %494 = icmp slt i32 %489, 10
  %495 = or i1 %493, %494
  br i1 %495, label %originalBBpart292, label %originalBB90alteredBB

originalBBpart292:                                ; preds = %originalBB90
  br label %496, !dbg !1683

496:                                              ; preds = %originalBBpart292, %originalBBpart288
  %497 = load i32, i32* @x.19
  %498 = load i32, i32* @y.20
  %499 = sub i32 %497, 1
  %500 = mul i32 %497, %499
  %501 = urem i32 %500, 2
  %502 = icmp eq i32 %501, 0
  %503 = icmp slt i32 %498, 10
  %504 = or i1 %502, %503
  br i1 %504, label %originalBB94, label %originalBB94alteredBB

originalBB94:                                     ; preds = %496, %originalBB94alteredBB
  %505 = load i32, i32* @x.19
  %506 = load i32, i32* @y.20
  %507 = sub i32 %505, 1
  %508 = mul i32 %505, %507
  %509 = urem i32 %508, 2
  %510 = icmp eq i32 %509, 0
  %511 = icmp slt i32 %506, 10
  %512 = or i1 %510, %511
  br i1 %512, label %originalBBpart296, label %originalBB94alteredBB

originalBBpart296:                                ; preds = %originalBB94
  br label %513, !dbg !1684

513:                                              ; preds = %originalBBpart296, %originalBBpart284, %originalBBpart280
  %514 = load i32, i32* @x.19
  %515 = load i32, i32* @y.20
  %516 = sub i32 %514, 1
  %517 = mul i32 %514, %516
  %518 = urem i32 %517, 2
  %519 = icmp eq i32 %518, 0
  %520 = icmp slt i32 %515, 10
  %521 = or i1 %519, %520
  br i1 %521, label %originalBB98, label %originalBB98alteredBB

originalBB98:                                     ; preds = %513, %originalBB98alteredBB
  %522 = load i32, i32* @x.19
  %523 = load i32, i32* @y.20
  %524 = sub i32 %522, 1
  %525 = mul i32 %522, %524
  %526 = urem i32 %525, 2
  %527 = icmp eq i32 %526, 0
  %528 = icmp slt i32 %523, 10
  %529 = or i1 %527, %528
  br i1 %529, label %originalBBpart2100, label %originalBB98alteredBB

originalBBpart2100:                               ; preds = %originalBB98
  br label %530, !dbg !1671

530:                                              ; preds = %originalBBpart2100
  %531 = load i32, i32* @x.19
  %532 = load i32, i32* @y.20
  %533 = sub i32 %531, 1
  %534 = mul i32 %531, %533
  %535 = urem i32 %534, 2
  %536 = icmp eq i32 %535, 0
  %537 = icmp slt i32 %532, 10
  %538 = or i1 %536, %537
  br i1 %538, label %originalBB102, label %originalBB102alteredBB

originalBB102:                                    ; preds = %530, %originalBB102alteredBB
  %539 = load i32, i32* %26, align 4, !dbg !1685
  %540 = add nsw i32 %539, 1, !dbg !1685
  store i32 %540, i32* %26, align 4, !dbg !1685
  %541 = load i32, i32* @x.19
  %542 = load i32, i32* @y.20
  %543 = sub i32 %541, 1
  %544 = mul i32 %541, %543
  %545 = urem i32 %544, 2
  %546 = icmp eq i32 %545, 0
  %547 = icmp slt i32 %542, 10
  %548 = or i1 %546, %547
  br i1 %548, label %originalBBpart2116, label %originalBB102alteredBB

originalBBpart2116:                               ; preds = %originalBB102
  br label %383, !dbg !1686, !llvm.loop !1687

549:                                              ; preds = %originalBBpart276
  %550 = load i32, i32* @x.19
  %551 = load i32, i32* @y.20
  %552 = sub i32 %550, 1
  %553 = mul i32 %550, %552
  %554 = urem i32 %553, 2
  %555 = icmp eq i32 %554, 0
  %556 = icmp slt i32 %551, 10
  %557 = or i1 %555, %556
  br i1 %557, label %originalBB118, label %originalBB118alteredBB

originalBB118:                                    ; preds = %549, %originalBB118alteredBB
  %558 = load i32*, i32** %24, align 8, !dbg !1689
  %559 = bitcast i32* %558 to i8*, !dbg !1689
  call void @free(i8* %559) #10, !dbg !1690
  %560 = load i8, i8* %22, align 1, !dbg !1691
  %561 = trunc i8 %560 to i1, !dbg !1691
  store i1 %561, i1* %15, align 1, !dbg !1692
  %562 = load i32, i32* @x.19
  %563 = load i32, i32* @y.20
  %564 = sub i32 %562, 1
  %565 = mul i32 %562, %564
  %566 = urem i32 %565, 2
  %567 = icmp eq i32 %566, 0
  %568 = icmp slt i32 %563, 10
  %569 = or i1 %567, %568
  br i1 %569, label %originalBBpart2120, label %originalBB118alteredBB

originalBBpart2120:                               ; preds = %originalBB118
  br label %570, !dbg !1692

570:                                              ; preds = %originalBBpart2120, %originalBBpart268
  %571 = load i32, i32* @x.19
  %572 = load i32, i32* @y.20
  %573 = sub i32 %571, 1
  %574 = mul i32 %571, %573
  %575 = urem i32 %574, 2
  %576 = icmp eq i32 %575, 0
  %577 = icmp slt i32 %572, 10
  %578 = or i1 %576, %577
  br i1 %578, label %originalBB122, label %originalBB122alteredBB

originalBB122:                                    ; preds = %570, %originalBB122alteredBB
  %579 = load i1, i1* %15, align 1, !dbg !1693
  %580 = load i32, i32* @x.19
  %581 = load i32, i32* @y.20
  %582 = sub i32 %580, 1
  %583 = mul i32 %580, %582
  %584 = urem i32 %583, 2
  %585 = icmp eq i32 %584, 0
  %586 = icmp slt i32 %581, 10
  %587 = or i1 %585, %586
  br i1 %587, label %originalBBpart2124, label %originalBB122alteredBB

originalBBpart2124:                               ; preds = %originalBB122
  ret i1 %579, !dbg !1693

originalBBalteredBB:                              ; preds = %originalBB, %6
  %588 = alloca i1, align 1
  %589 = alloca i8*, align 8
  %590 = alloca i32, align 4
  %591 = alloca i32, align 4
  %592 = alloca i32, align 4
  %593 = alloca i8, align 1
  %594 = alloca i8, align 1
  %595 = alloca i8, align 1
  %596 = alloca %struct.passwd*, align 8
  %597 = alloca i32*, align 8
  %598 = alloca i32, align 4
  %599 = alloca i32, align 4
  store i8* %0, i8** %589, align 8
  call void @llvm.dbg.declare(metadata i8** %589, metadata !1694, metadata !DIExpression()), !dbg !1562
  store i32 %1, i32* %590, align 4
  call void @llvm.dbg.declare(metadata i32* %590, metadata !1701, metadata !DIExpression()), !dbg !1564
  store i32 %2, i32* %591, align 4
  call void @llvm.dbg.declare(metadata i32* %591, metadata !1702, metadata !DIExpression()), !dbg !1566
  store i32 %3, i32* %592, align 4
  call void @llvm.dbg.declare(metadata i32* %592, metadata !1703, metadata !DIExpression()), !dbg !1568
  %600 = zext i1 %4 to i8
  store i8 %600, i8* %593, align 1
  call void @llvm.dbg.declare(metadata i8* %593, metadata !1704, metadata !DIExpression()), !dbg !1570
  store i8 %5, i8* %594, align 1
  call void @llvm.dbg.declare(metadata i8* %594, metadata !1705, metadata !DIExpression()), !dbg !1572
  call void @llvm.dbg.declare(metadata i8* %595, metadata !1706, metadata !DIExpression()), !dbg !1574
  store i8 1, i8* %595, align 1, !dbg !1574
  call void @llvm.dbg.declare(metadata %struct.passwd** %596, metadata !1707, metadata !DIExpression()), !dbg !1586
  store %struct.passwd* null, %struct.passwd** %596, align 8, !dbg !1586
  %601 = load i8*, i8** %589, align 8, !dbg !1587
  %602 = icmp ne i8* %601, null, !dbg !1587
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %38
  %603 = load i32, i32* %17, align 4, !dbg !1590
  %604 = call %struct.passwd* @getpwuid(i32 %603), !dbg !1592
  store %struct.passwd* %604, %struct.passwd** %23, align 8, !dbg !1593
  %605 = load %struct.passwd*, %struct.passwd** %23, align 8, !dbg !1594
  %606 = icmp eq %struct.passwd* %605, null, !dbg !1596
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %59
  store i8 0, i8* %22, align 1, !dbg !1598
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %76
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %93
  %607 = load i32, i32* %18, align 4, !dbg !1601
  %608 = load i8, i8* %20, align 1, !dbg !1603
  %609 = trunc i8 %608 to i1, !dbg !1603
  %610 = call zeroext i1 @print_group(i32 %607, i1 zeroext %609), !dbg !1604
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %114
  store i8 0, i8* %22, align 1, !dbg !1606
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %131
  %611 = load i32, i32* %19, align 4, !dbg !1608
  %612 = load i32, i32* %18, align 4, !dbg !1610
  %613 = icmp ne i32 %611, %612, !dbg !1611
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %151
  %614 = load i8, i8* %21, align 1, !dbg !1613
  %615 = sext i8 %614 to i32, !dbg !1613
  %616 = call i32 @putchar_unlocked(i32 %615), !dbg !1613
  %617 = load i32, i32* %19, align 4, !dbg !1615
  %618 = load i8, i8* %20, align 1, !dbg !1617
  %619 = trunc i8 %618 to i1, !dbg !1617
  %620 = call zeroext i1 @print_group(i32 %617, i1 zeroext %619), !dbg !1618
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %175
  store i8 0, i8* %22, align 1, !dbg !1620
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %192
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %209
  %621 = load i8*, i8** %16, align 8, !dbg !1628
  %622 = load %struct.passwd*, %struct.passwd** %23, align 8, !dbg !1629
  %623 = icmp ne %struct.passwd* %622, null, !dbg !1629
  br label %originalBB38

originalBB42alteredBB:                            ; preds = %originalBB42, %229
  %624 = load %struct.passwd*, %struct.passwd** %23, align 8, !dbg !1630
  %625 = getelementptr inbounds %struct.passwd, %struct.passwd* %624, i32 0, i32 3, !dbg !1631
  %626 = load i32, i32* %625, align 4, !dbg !1631
  br label %originalBB42

originalBB46alteredBB:                            ; preds = %originalBB46, %249
  %627 = load i32, i32* %19, align 4, !dbg !1632
  br label %originalBB46

originalBB50alteredBB:                            ; preds = %originalBB50, %267
  %628 = call i32 @xgetgroups(i8* %218, i32 %268, i32** %24), !dbg !1633
  store i32 %628, i32* %25, align 4, !dbg !1627
  %629 = load i32, i32* %25, align 4, !dbg !1634
  %630 = icmp slt i32 %629, 0, !dbg !1636
  br label %originalBB50

originalBB54alteredBB:                            ; preds = %originalBB54, %288
  %631 = load i8*, i8** %16, align 8, !dbg !1638
  %632 = icmp ne i8* %631, null, !dbg !1638
  br label %originalBB54

originalBB58alteredBB:                            ; preds = %originalBB58, %307
  %633 = call i32* @__errno_location() #15, !dbg !1642
  %634 = load i32, i32* %633, align 4, !dbg !1642
  %635 = call i8* @gettext(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.61, i64 0, i64 0)) #10, !dbg !1644
  %636 = load i8*, i8** %16, align 8, !dbg !1645
  %637 = call i8* @quote(i8* %636), !dbg !1646
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %634, i8* %635, i8* %637), !dbg !1647
  br label %originalBB58

originalBB62alteredBB:                            ; preds = %originalBB62, %329
  %638 = call i32* @__errno_location() #15, !dbg !1649
  %639 = load i32, i32* %638, align 4, !dbg !1649
  %640 = call i8* @gettext(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1.62, i64 0, i64 0)) #10, !dbg !1651
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %639, i8* %640), !dbg !1652
  br label %originalBB62

originalBB66alteredBB:                            ; preds = %originalBB66, %349
  store i1 false, i1* %15, align 1, !dbg !1653
  br label %originalBB66

originalBB70alteredBB:                            ; preds = %originalBB70, %366
  store i32 0, i32* %26, align 4, !dbg !1656
  br label %originalBB70

originalBB74alteredBB:                            ; preds = %originalBB74, %383
  %641 = load i32, i32* %26, align 4, !dbg !1658
  %642 = load i32, i32* %25, align 4, !dbg !1660
  %643 = icmp slt i32 %641, %642, !dbg !1661
  br label %originalBB74

originalBB78alteredBB:                            ; preds = %originalBB78, %403
  %644 = load i32*, i32** %24, align 8, !dbg !1663
  %645 = load i32, i32* %26, align 4, !dbg !1665
  %646 = sext i32 %645 to i64, !dbg !1663
  %647 = getelementptr inbounds i32, i32* %644, i64 %646, !dbg !1663
  %648 = load i32, i32* %647, align 4, !dbg !1663
  %649 = load i32, i32* %18, align 4, !dbg !1666
  %650 = icmp ne i32 %648, %649, !dbg !1667
  br label %originalBB78

originalBB82alteredBB:                            ; preds = %originalBB82, %427
  %651 = load i32*, i32** %24, align 8, !dbg !1669
  %652 = load i32, i32* %26, align 4, !dbg !1670
  %653 = sext i32 %652 to i64, !dbg !1669
  %654 = getelementptr inbounds i32, i32* %651, i64 %653, !dbg !1669
  %655 = load i32, i32* %654, align 4, !dbg !1669
  %656 = load i32, i32* %19, align 4, !dbg !1671
  %657 = icmp ne i32 %655, %656, !dbg !1672
  br label %originalBB82

originalBB86alteredBB:                            ; preds = %originalBB86, %451
  %658 = load i8, i8* %21, align 1, !dbg !1674
  %659 = sext i8 %658 to i32, !dbg !1674
  %660 = call i32 @putchar_unlocked(i32 %659), !dbg !1674
  %661 = load i32*, i32** %24, align 8, !dbg !1676
  %662 = load i32, i32* %26, align 4, !dbg !1678
  %663 = sext i32 %662 to i64, !dbg !1676
  %664 = getelementptr inbounds i32, i32* %661, i64 %663, !dbg !1676
  %665 = load i32, i32* %664, align 4, !dbg !1676
  %666 = load i8, i8* %20, align 1, !dbg !1679
  %667 = trunc i8 %666 to i1, !dbg !1679
  %668 = call zeroext i1 @print_group(i32 %665, i1 zeroext %667), !dbg !1680
  br label %originalBB86

originalBB90alteredBB:                            ; preds = %originalBB90, %479
  store i8 0, i8* %22, align 1, !dbg !1682
  br label %originalBB90

originalBB94alteredBB:                            ; preds = %originalBB94, %496
  br label %originalBB94

originalBB98alteredBB:                            ; preds = %originalBB98, %513
  br label %originalBB98

originalBB102alteredBB:                           ; preds = %originalBB102, %530
  %669 = load i32, i32* %26, align 4, !dbg !1685
  %_ = sub i32 0, %669
  %gen = add i32 %_, 1
  %_103 = shl i32 %669, 1
  %_104 = sub i32 0, %669
  %gen105 = add i32 %_104, 1
  %_106 = shl i32 %669, 1
  %_107 = sub i32 0, %669
  %gen108 = add i32 %_107, 1
  %_109 = sub i32 %669, 1
  %gen110 = mul i32 %_109, 1
  %_111 = sub i32 %669, 1
  %gen112 = mul i32 %_111, 1
  %_113 = shl i32 %669, 1
  %_114 = shl i32 %669, 1
  %670 = add nsw i32 %669, 1, !dbg !1685
  store i32 %670, i32* %26, align 4, !dbg !1685
  br label %originalBB102

originalBB118alteredBB:                           ; preds = %originalBB118, %549
  %671 = load i32*, i32** %24, align 8, !dbg !1689
  %672 = bitcast i32* %671 to i8*, !dbg !1689
  call void @free(i8* %672) #10, !dbg !1690
  %673 = load i8, i8* %22, align 1, !dbg !1691
  %674 = trunc i8 %673 to i1, !dbg !1691
  store i1 %674, i1* %15, align 1, !dbg !1692
  br label %originalBB118

originalBB122alteredBB:                           ; preds = %originalBB122, %570
  %675 = load i1, i1* %15, align 1, !dbg !1693
  br label %originalBB122
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @print_group(i32, i1 zeroext) #4 !dbg !1718 {
  %3 = load i32, i32* @x.21
  %4 = load i32, i32* @y.22
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca i32, align 4
  %12 = alloca i8, align 1
  %13 = alloca %struct.group*, align 8
  %14 = alloca i8, align 1
  %15 = alloca i8*, align 8
  store i32 %0, i32* %11, align 4
  call void @llvm.dbg.declare(metadata i32* %11, metadata !1721, metadata !DIExpression()), !dbg !1722
  %16 = zext i1 %1 to i8
  store i8 %16, i8* %12, align 1
  call void @llvm.dbg.declare(metadata i8* %12, metadata !1723, metadata !DIExpression()), !dbg !1724
  call void @llvm.dbg.declare(metadata %struct.group** %13, metadata !1725, metadata !DIExpression()), !dbg !1733
  store %struct.group* null, %struct.group** %13, align 8, !dbg !1733
  call void @llvm.dbg.declare(metadata i8* %14, metadata !1734, metadata !DIExpression()), !dbg !1735
  store i8 1, i8* %14, align 1, !dbg !1735
  %17 = load i8, i8* %12, align 1, !dbg !1736
  %18 = trunc i8 %17 to i1, !dbg !1736
  %19 = load i32, i32* @x.21
  %20 = load i32, i32* @y.22
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %18, label %27, label %85, !dbg !1738

27:                                               ; preds = %originalBBpart2
  %28 = load i32, i32* @x.21
  %29 = load i32, i32* @y.22
  %30 = sub i32 %28, 1
  %31 = mul i32 %28, %30
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %33, %34
  br i1 %35, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %27, %originalBB1alteredBB
  %36 = load i32, i32* %11, align 4, !dbg !1739
  %37 = call %struct.group* @getgrgid(i32 %36), !dbg !1741
  store %struct.group* %37, %struct.group** %13, align 8, !dbg !1742
  %38 = load %struct.group*, %struct.group** %13, align 8, !dbg !1743
  %39 = icmp eq %struct.group* %38, null, !dbg !1745
  %40 = load i32, i32* @x.21
  %41 = load i32, i32* @y.22
  %42 = sub i32 %40, 1
  %43 = mul i32 %40, %42
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %45, %46
  br i1 %47, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %39, label %48, label %68, !dbg !1746

48:                                               ; preds = %originalBBpart24
  %49 = load i32, i32* @x.21
  %50 = load i32, i32* @y.22
  %51 = sub i32 %49, 1
  %52 = mul i32 %49, %51
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %50, 10
  %56 = or i1 %54, %55
  br i1 %56, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %48, %originalBB6alteredBB
  %57 = call i8* @gettext(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.2.63, i64 0, i64 0)) #10, !dbg !1747
  %58 = load i32, i32* %11, align 4, !dbg !1749
  %59 = zext i32 %58 to i64, !dbg !1750
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %57, i64 %59), !dbg !1751
  store i8 0, i8* %14, align 1, !dbg !1752
  %60 = load i32, i32* @x.21
  %61 = load i32, i32* @y.22
  %62 = sub i32 %60, 1
  %63 = mul i32 %60, %62
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %61, 10
  %67 = or i1 %65, %66
  br i1 %67, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %68, !dbg !1753

68:                                               ; preds = %originalBBpart28, %originalBBpart24
  %69 = load i32, i32* @x.21
  %70 = load i32, i32* @y.22
  %71 = sub i32 %69, 1
  %72 = mul i32 %69, %71
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %74, %75
  br i1 %76, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %68, %originalBB10alteredBB
  %77 = load i32, i32* @x.21
  %78 = load i32, i32* @y.22
  %79 = sub i32 %77, 1
  %80 = mul i32 %77, %79
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %78, 10
  %84 = or i1 %82, %83
  br i1 %84, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %85, !dbg !1754

85:                                               ; preds = %originalBBpart212, %originalBBpart2
  call void @llvm.dbg.declare(metadata i8** %15, metadata !1755, metadata !DIExpression()), !dbg !1756
  %86 = load i32, i32* @x.21
  %87 = load i32, i32* @y.22
  %88 = sub i32 %86, 1
  %89 = mul i32 %86, %88
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %87, 10
  %93 = or i1 %91, %92
  br i1 %93, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %85, %originalBB14alteredBB
  %94 = load %struct.group*, %struct.group** %13, align 8, !dbg !1757
  %95 = icmp ne %struct.group* %94, null, !dbg !1757
  %96 = load i32, i32* @x.21
  %97 = load i32, i32* @y.22
  %98 = sub i32 %96, 1
  %99 = mul i32 %96, %98
  %100 = urem i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = icmp slt i32 %97, 10
  %103 = or i1 %101, %102
  br i1 %103, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %95, label %104, label %124, !dbg !1757

104:                                              ; preds = %originalBBpart216
  %105 = load i32, i32* @x.21
  %106 = load i32, i32* @y.22
  %107 = sub i32 %105, 1
  %108 = mul i32 %105, %107
  %109 = urem i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %106, 10
  %112 = or i1 %110, %111
  br i1 %112, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %104, %originalBB18alteredBB
  %113 = load %struct.group*, %struct.group** %13, align 8, !dbg !1758
  %114 = getelementptr inbounds %struct.group, %struct.group* %113, i32 0, i32 0, !dbg !1759
  %115 = load i8*, i8** %114, align 8, !dbg !1759
  %116 = load i32, i32* @x.21
  %117 = load i32, i32* @y.22
  %118 = sub i32 %116, 1
  %119 = mul i32 %116, %118
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %117, 10
  %123 = or i1 %121, %122
  br i1 %123, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %142, !dbg !1757

124:                                              ; preds = %originalBBpart216
  %125 = load i32, i32* @x.21
  %126 = load i32, i32* @y.22
  %127 = sub i32 %125, 1
  %128 = mul i32 %125, %127
  %129 = urem i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = icmp slt i32 %126, 10
  %132 = or i1 %130, %131
  br i1 %132, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %124, %originalBB22alteredBB
  %133 = call i8* @gidtostr_ptr.64(i32* %11), !dbg !1760
  %134 = load i32, i32* @x.21
  %135 = load i32, i32* @y.22
  %136 = sub i32 %134, 1
  %137 = mul i32 %134, %136
  %138 = urem i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = icmp slt i32 %135, 10
  %141 = or i1 %139, %140
  br i1 %141, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br label %142, !dbg !1757

142:                                              ; preds = %originalBBpart224, %originalBBpart220
  %143 = phi i8* [ %115, %originalBBpart220 ], [ %133, %originalBBpart224 ], !dbg !1757
  %144 = load i32, i32* @x.21
  %145 = load i32, i32* @y.22
  %146 = sub i32 %144, 1
  %147 = mul i32 %144, %146
  %148 = urem i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = icmp slt i32 %145, 10
  %151 = or i1 %149, %150
  br i1 %151, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %142, %originalBB26alteredBB
  store i8* %143, i8** %15, align 8, !dbg !1756
  %152 = load i8*, i8** %15, align 8, !dbg !1761
  %153 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1761
  %154 = call i32 @fputs_unlocked(i8* %152, %struct._IO_FILE* %153), !dbg !1761
  %155 = load i8, i8* %14, align 1, !dbg !1762
  %156 = trunc i8 %155 to i1, !dbg !1762
  %157 = load i32, i32* @x.21
  %158 = load i32, i32* @y.22
  %159 = sub i32 %157, 1
  %160 = mul i32 %157, %159
  %161 = urem i32 %160, 2
  %162 = icmp eq i32 %161, 0
  %163 = icmp slt i32 %158, 10
  %164 = or i1 %162, %163
  br i1 %164, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  ret i1 %156, !dbg !1763

originalBBalteredBB:                              ; preds = %originalBB, %2
  %165 = alloca i32, align 4
  %166 = alloca i8, align 1
  %167 = alloca %struct.group*, align 8
  %168 = alloca i8, align 1
  %169 = alloca i8*, align 8
  store i32 %0, i32* %165, align 4
  call void @llvm.dbg.declare(metadata i32* %165, metadata !1764, metadata !DIExpression()), !dbg !1722
  %170 = zext i1 %1 to i8
  store i8 %170, i8* %166, align 1
  call void @llvm.dbg.declare(metadata i8* %166, metadata !1771, metadata !DIExpression()), !dbg !1724
  call void @llvm.dbg.declare(metadata %struct.group** %167, metadata !1772, metadata !DIExpression()), !dbg !1733
  store %struct.group* null, %struct.group** %167, align 8, !dbg !1733
  call void @llvm.dbg.declare(metadata i8* %168, metadata !1780, metadata !DIExpression()), !dbg !1735
  store i8 1, i8* %168, align 1, !dbg !1735
  %171 = load i8, i8* %166, align 1, !dbg !1736
  %172 = trunc i8 %171 to i1, !dbg !1736
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %27
  %173 = load i32, i32* %11, align 4, !dbg !1739
  %174 = call %struct.group* @getgrgid(i32 %173), !dbg !1741
  store %struct.group* %174, %struct.group** %13, align 8, !dbg !1742
  %175 = load %struct.group*, %struct.group** %13, align 8, !dbg !1743
  %176 = icmp eq %struct.group* %175, null, !dbg !1745
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %48
  %177 = call i8* @gettext(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.2.63, i64 0, i64 0)) #10, !dbg !1747
  %178 = load i32, i32* %11, align 4, !dbg !1749
  %179 = zext i32 %178 to i64, !dbg !1750
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %177, i64 %179), !dbg !1751
  store i8 0, i8* %14, align 1, !dbg !1752
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %68
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %85
  %180 = load %struct.group*, %struct.group** %13, align 8, !dbg !1757
  %181 = icmp ne %struct.group* %180, null, !dbg !1757
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %104
  %182 = load %struct.group*, %struct.group** %13, align 8, !dbg !1758
  %183 = getelementptr inbounds %struct.group, %struct.group* %182, i32 0, i32 0, !dbg !1759
  %184 = load i8*, i8** %183, align 8, !dbg !1759
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %124
  %185 = call i8* @gidtostr_ptr.64(i32* %11), !dbg !1760
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %142
  store i8* %143, i8** %15, align 8, !dbg !1756
  %186 = load i8*, i8** %15, align 8, !dbg !1761
  %187 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1761
  %188 = call i32 @fputs_unlocked(i8* %186, %struct._IO_FILE* %187), !dbg !1761
  %189 = load i8, i8* %14, align 1, !dbg !1762
  %190 = trunc i8 %189 to i1, !dbg !1762
  br label %originalBB26
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @gidtostr_ptr.64(i32*) #4 !dbg !80 {
  %2 = load i32, i32* @x.23
  %3 = load i32, i32* @y.24
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i32*, align 8
  store i32* %0, i32** %10, align 8
  call void @llvm.dbg.declare(metadata i32** %10, metadata !1781, metadata !DIExpression()), !dbg !1782
  %11 = load i32*, i32** %10, align 8, !dbg !1783
  %12 = load i32, i32* %11, align 4, !dbg !1784
  %13 = zext i32 %12 to i64, !dbg !1784
  %14 = call i8* @umaxtostr(i64 %13, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @gidtostr_ptr.buf.65, i64 0, i64 0)), !dbg !1785
  %15 = load i32, i32* @x.23
  %16 = load i32, i32* @y.24
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i8* %14, !dbg !1786

originalBBalteredBB:                              ; preds = %originalBB, %1
  %23 = alloca i32*, align 8
  store i32* %0, i32** %23, align 8
  call void @llvm.dbg.declare(metadata i32** %23, metadata !1787, metadata !DIExpression()), !dbg !1782
  %24 = load i32*, i32** %23, align 8, !dbg !1783
  %25 = load i32, i32* %24, align 4, !dbg !1784
  %26 = zext i32 %25 to i64, !dbg !1784
  %27 = call i8* @umaxtostr(i64 %26, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @gidtostr_ptr.buf.65, i64 0, i64 0)), !dbg !1785
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @close_stdout() #4 !dbg !1793 {
  %1 = load i32, i32* @x.25
  %2 = load i32, i32* @y.26
  %3 = sub i32 %1, 1
  %4 = mul i32 %1, %3
  %5 = urem i32 %4, 2
  %6 = icmp eq i32 %5, 0
  %7 = icmp slt i32 %2, 10
  %8 = or i1 %6, %7
  br i1 %8, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %0, %originalBBalteredBB
  %9 = alloca i8*, align 8
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1796
  %11 = call i32 @close_stream(%struct._IO_FILE* %10), !dbg !1798
  %12 = icmp ne i32 %11, 0, !dbg !1799
  %13 = load i32, i32* @x.25
  %14 = load i32, i32* @y.26
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %12, label %21, label %140, !dbg !1800

21:                                               ; preds = %originalBBpart2
  %22 = load i32, i32* @x.25
  %23 = load i32, i32* @y.26
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %21, %originalBB1alteredBB
  %30 = load i8, i8* @ignore_EPIPE, align 1, !dbg !1801
  %31 = trunc i8 %30 to i1, !dbg !1801
  %32 = load i32, i32* @x.25
  %33 = load i32, i32* @y.26
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %31, label %40, label %60, !dbg !1802

40:                                               ; preds = %originalBBpart24
  %41 = load i32, i32* @x.25
  %42 = load i32, i32* @y.26
  %43 = sub i32 %41, 1
  %44 = mul i32 %41, %43
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %46, %47
  br i1 %48, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %40, %originalBB6alteredBB
  %49 = call i32* @__errno_location() #15, !dbg !1803
  %50 = load i32, i32* %49, align 4, !dbg !1803
  %51 = icmp eq i32 %50, 32, !dbg !1804
  %52 = load i32, i32* @x.25
  %53 = load i32, i32* @y.26
  %54 = sub i32 %52, 1
  %55 = mul i32 %52, %54
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %53, 10
  %59 = or i1 %57, %58
  br i1 %59, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %51, label %140, label %60, !dbg !1805

60:                                               ; preds = %originalBBpart28, %originalBBpart24
  call void @llvm.dbg.declare(metadata i8** %9, metadata !1806, metadata !DIExpression()), !dbg !1808
  %61 = load i32, i32* @x.25
  %62 = load i32, i32* @y.26
  %63 = sub i32 %61, 1
  %64 = mul i32 %61, %63
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %62, 10
  %68 = or i1 %66, %67
  br i1 %68, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %60, %originalBB10alteredBB
  %69 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.71, i64 0, i64 0)) #10, !dbg !1809
  store i8* %69, i8** %9, align 8, !dbg !1808
  %70 = load i8*, i8** @file_name, align 8, !dbg !1810
  %71 = icmp ne i8* %70, null, !dbg !1810
  %72 = load i32, i32* @x.25
  %73 = load i32, i32* @y.26
  %74 = sub i32 %72, 1
  %75 = mul i32 %72, %74
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %73, 10
  %79 = or i1 %77, %78
  br i1 %79, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %71, label %80, label %102, !dbg !1812

80:                                               ; preds = %originalBBpart212
  %81 = load i32, i32* @x.25
  %82 = load i32, i32* @y.26
  %83 = sub i32 %81, 1
  %84 = mul i32 %81, %83
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %82, 10
  %88 = or i1 %86, %87
  br i1 %88, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %80, %originalBB14alteredBB
  %89 = call i32* @__errno_location() #15, !dbg !1813
  %90 = load i32, i32* %89, align 4, !dbg !1813
  %91 = load i8*, i8** @file_name, align 8, !dbg !1814
  %92 = call i8* @quotearg_colon(i8* %91), !dbg !1815
  %93 = load i8*, i8** %9, align 8, !dbg !1816
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %90, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.72, i64 0, i64 0), i8* %92, i8* %93), !dbg !1817
  %94 = load i32, i32* @x.25
  %95 = load i32, i32* @y.26
  %96 = sub i32 %94, 1
  %97 = mul i32 %94, %96
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %95, 10
  %101 = or i1 %99, %100
  br i1 %101, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %122, !dbg !1817

102:                                              ; preds = %originalBBpart212
  %103 = load i32, i32* @x.25
  %104 = load i32, i32* @y.26
  %105 = sub i32 %103, 1
  %106 = mul i32 %103, %105
  %107 = urem i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %104, 10
  %110 = or i1 %108, %109
  br i1 %110, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %102, %originalBB18alteredBB
  %111 = call i32* @__errno_location() #15, !dbg !1818
  %112 = load i32, i32* %111, align 4, !dbg !1818
  %113 = load i8*, i8** %9, align 8, !dbg !1819
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %112, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2.73, i64 0, i64 0), i8* %113), !dbg !1820
  %114 = load i32, i32* @x.25
  %115 = load i32, i32* @y.26
  %116 = sub i32 %114, 1
  %117 = mul i32 %114, %116
  %118 = urem i32 %117, 2
  %119 = icmp eq i32 %118, 0
  %120 = icmp slt i32 %115, 10
  %121 = or i1 %119, %120
  br i1 %121, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %122

122:                                              ; preds = %originalBBpart220, %originalBBpart216
  %123 = load i32, i32* @x.25
  %124 = load i32, i32* @y.26
  %125 = sub i32 %123, 1
  %126 = mul i32 %123, %125
  %127 = urem i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %124, 10
  %130 = or i1 %128, %129
  br i1 %130, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %122, %originalBB22alteredBB
  %131 = load volatile i32, i32* @exit_failure, align 4, !dbg !1821
  call void @_exit(i32 %131) #14, !dbg !1822
  %132 = load i32, i32* @x.25
  %133 = load i32, i32* @y.26
  %134 = sub i32 %132, 1
  %135 = mul i32 %132, %134
  %136 = urem i32 %135, 2
  %137 = icmp eq i32 %136, 0
  %138 = icmp slt i32 %133, 10
  %139 = or i1 %137, %138
  br i1 %139, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  unreachable, !dbg !1822

140:                                              ; preds = %originalBBpart28, %originalBBpart2
  %141 = load i32, i32* @x.25
  %142 = load i32, i32* @y.26
  %143 = sub i32 %141, 1
  %144 = mul i32 %141, %143
  %145 = urem i32 %144, 2
  %146 = icmp eq i32 %145, 0
  %147 = icmp slt i32 %142, 10
  %148 = or i1 %146, %147
  br i1 %148, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %140, %originalBB26alteredBB
  %149 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1823
  %150 = call i32 @close_stream(%struct._IO_FILE* %149), !dbg !1825
  %151 = icmp ne i32 %150, 0, !dbg !1826
  %152 = load i32, i32* @x.25
  %153 = load i32, i32* @y.26
  %154 = sub i32 %152, 1
  %155 = mul i32 %152, %154
  %156 = urem i32 %155, 2
  %157 = icmp eq i32 %156, 0
  %158 = icmp slt i32 %153, 10
  %159 = or i1 %157, %158
  br i1 %159, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br i1 %151, label %160, label %178, !dbg !1827

160:                                              ; preds = %originalBBpart228
  %161 = load i32, i32* @x.25
  %162 = load i32, i32* @y.26
  %163 = sub i32 %161, 1
  %164 = mul i32 %161, %163
  %165 = urem i32 %164, 2
  %166 = icmp eq i32 %165, 0
  %167 = icmp slt i32 %162, 10
  %168 = or i1 %166, %167
  br i1 %168, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %160, %originalBB30alteredBB
  %169 = load volatile i32, i32* @exit_failure, align 4, !dbg !1828
  call void @_exit(i32 %169) #14, !dbg !1829
  %170 = load i32, i32* @x.25
  %171 = load i32, i32* @y.26
  %172 = sub i32 %170, 1
  %173 = mul i32 %170, %172
  %174 = urem i32 %173, 2
  %175 = icmp eq i32 %174, 0
  %176 = icmp slt i32 %171, 10
  %177 = or i1 %175, %176
  br i1 %177, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  unreachable, !dbg !1829

178:                                              ; preds = %originalBBpart228
  %179 = load i32, i32* @x.25
  %180 = load i32, i32* @y.26
  %181 = sub i32 %179, 1
  %182 = mul i32 %179, %181
  %183 = urem i32 %182, 2
  %184 = icmp eq i32 %183, 0
  %185 = icmp slt i32 %180, 10
  %186 = or i1 %184, %185
  br i1 %186, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %178, %originalBB34alteredBB
  %187 = load i32, i32* @x.25
  %188 = load i32, i32* @y.26
  %189 = sub i32 %187, 1
  %190 = mul i32 %187, %189
  %191 = urem i32 %190, 2
  %192 = icmp eq i32 %191, 0
  %193 = icmp slt i32 %188, 10
  %194 = or i1 %192, %193
  br i1 %194, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  ret void, !dbg !1830

originalBBalteredBB:                              ; preds = %originalBB, %0
  %195 = alloca i8*, align 8
  %196 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1796
  %197 = call i32 @close_stream(%struct._IO_FILE* %196), !dbg !1798
  %198 = icmp ne i32 %197, 0, !dbg !1799
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %21
  %199 = load i8, i8* @ignore_EPIPE, align 1, !dbg !1801
  %200 = trunc i8 %199 to i1, !dbg !1801
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %40
  %201 = call i32* @__errno_location() #15, !dbg !1803
  %202 = load i32, i32* %201, align 4, !dbg !1803
  %203 = icmp eq i32 %202, 32, !dbg !1804
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %60
  %204 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.71, i64 0, i64 0)) #10, !dbg !1809
  store i8* %204, i8** %9, align 8, !dbg !1808
  %205 = load i8*, i8** @file_name, align 8, !dbg !1810
  %206 = icmp ne i8* %205, null, !dbg !1810
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %80
  %207 = call i32* @__errno_location() #15, !dbg !1813
  %208 = load i32, i32* %207, align 4, !dbg !1813
  %209 = load i8*, i8** @file_name, align 8, !dbg !1814
  %210 = call i8* @quotearg_colon(i8* %209), !dbg !1815
  %211 = load i8*, i8** %9, align 8, !dbg !1816
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %208, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.72, i64 0, i64 0), i8* %210, i8* %211), !dbg !1817
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %102
  %212 = call i32* @__errno_location() #15, !dbg !1818
  %213 = load i32, i32* %212, align 4, !dbg !1818
  %214 = load i8*, i8** %9, align 8, !dbg !1819
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %213, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2.73, i64 0, i64 0), i8* %214), !dbg !1820
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %122
  %215 = load volatile i32, i32* @exit_failure, align 4, !dbg !1821
  call void @_exit(i32 %215) #14, !dbg !1822
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %140
  %216 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1823
  %217 = call i32 @close_stream(%struct._IO_FILE* %216), !dbg !1825
  %218 = icmp ne i32 %217, 0, !dbg !1826
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %160
  %219 = load volatile i32, i32* @exit_failure, align 4, !dbg !1828
  call void @_exit(i32 %219) #14, !dbg !1829
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %178
  br label %originalBB34
}

; Function Attrs: noreturn
declare dso_local void @_exit(i32) #9

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @umaxtostr(i64, i8*) #4 !dbg !1831 {
  %3 = load i32, i32* @x.27
  %4 = load i32, i32* @y.28
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca i64, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i8*, align 8
  store i64 %0, i64* %11, align 8
  call void @llvm.dbg.declare(metadata i64* %11, metadata !1835, metadata !DIExpression()), !dbg !1836
  store i8* %1, i8** %12, align 8
  call void @llvm.dbg.declare(metadata i8** %12, metadata !1837, metadata !DIExpression()), !dbg !1838
  call void @llvm.dbg.declare(metadata i8** %13, metadata !1839, metadata !DIExpression()), !dbg !1840
  %14 = load i8*, i8** %12, align 8, !dbg !1841
  %15 = getelementptr inbounds i8, i8* %14, i64 20, !dbg !1842
  store i8* %15, i8** %13, align 8, !dbg !1840
  %16 = load i8*, i8** %13, align 8, !dbg !1843
  store i8 0, i8* %16, align 1, !dbg !1844
  %17 = load i64, i64* %11, align 8, !dbg !1845
  %18 = icmp ult i64 %17, 0, !dbg !1847
  %19 = load i32, i32* @x.27
  %20 = load i32, i32* @y.28
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %18, label %27, label %106, !dbg !1848

27:                                               ; preds = %originalBBpart2
  %28 = load i32, i32* @x.27
  %29 = load i32, i32* @y.28
  %30 = sub i32 %28, 1
  %31 = mul i32 %28, %30
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %33, %34
  br i1 %35, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %27, %originalBB1alteredBB
  %36 = load i32, i32* @x.27
  %37 = load i32, i32* @y.28
  %38 = sub i32 %36, 1
  %39 = mul i32 %36, %38
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %37, 10
  %43 = or i1 %41, %42
  br i1 %43, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %44, !dbg !1849

44:                                               ; preds = %originalBBpart245, %originalBBpart24
  %45 = load i32, i32* @x.27
  %46 = load i32, i32* @y.28
  %47 = sub i32 %45, 1
  %48 = mul i32 %45, %47
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %50, %51
  br i1 %52, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %44, %originalBB6alteredBB
  %53 = load i64, i64* %11, align 8, !dbg !1851
  %54 = urem i64 %53, 10, !dbg !1852
  %55 = sub i64 48, %54, !dbg !1853
  %56 = trunc i64 %55 to i8, !dbg !1854
  %57 = load i8*, i8** %13, align 8, !dbg !1855
  %58 = getelementptr inbounds i8, i8* %57, i32 -1, !dbg !1855
  store i8* %58, i8** %13, align 8, !dbg !1855
  store i8 %56, i8* %58, align 1, !dbg !1856
  %59 = load i32, i32* @x.27
  %60 = load i32, i32* @y.28
  %61 = sub i32 %59, 1
  %62 = mul i32 %59, %61
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %60, 10
  %66 = or i1 %64, %65
  br i1 %66, label %originalBBpart228, label %originalBB6alteredBB

originalBBpart228:                                ; preds = %originalBB6
  br label %67, !dbg !1857

67:                                               ; preds = %originalBBpart228
  %68 = load i32, i32* @x.27
  %69 = load i32, i32* @y.28
  %70 = sub i32 %68, 1
  %71 = mul i32 %68, %70
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %69, 10
  %75 = or i1 %73, %74
  br i1 %75, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %67, %originalBB30alteredBB
  %76 = load i64, i64* %11, align 8, !dbg !1858
  %77 = udiv i64 %76, 10, !dbg !1858
  store i64 %77, i64* %11, align 8, !dbg !1858
  %78 = icmp ne i64 %77, 0, !dbg !1859
  %79 = load i32, i32* @x.27
  %80 = load i32, i32* @y.28
  %81 = sub i32 %79, 1
  %82 = mul i32 %79, %81
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %80, 10
  %86 = or i1 %84, %85
  br i1 %86, label %originalBBpart245, label %originalBB30alteredBB

originalBBpart245:                                ; preds = %originalBB30
  br i1 %78, label %44, label %87, !dbg !1857, !llvm.loop !1860

87:                                               ; preds = %originalBBpart245
  %88 = load i32, i32* @x.27
  %89 = load i32, i32* @y.28
  %90 = sub i32 %88, 1
  %91 = mul i32 %88, %90
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %89, 10
  %95 = or i1 %93, %94
  br i1 %95, label %originalBB47, label %originalBB47alteredBB

originalBB47:                                     ; preds = %87, %originalBB47alteredBB
  %96 = load i8*, i8** %13, align 8, !dbg !1862
  %97 = getelementptr inbounds i8, i8* %96, i32 -1, !dbg !1862
  store i8* %97, i8** %13, align 8, !dbg !1862
  store i8 45, i8* %97, align 1, !dbg !1863
  %98 = load i32, i32* @x.27
  %99 = load i32, i32* @y.28
  %100 = sub i32 %98, 1
  %101 = mul i32 %98, %100
  %102 = urem i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = icmp slt i32 %99, 10
  %105 = or i1 %103, %104
  br i1 %105, label %originalBBpart249, label %originalBB47alteredBB

originalBBpart249:                                ; preds = %originalBB47
  br label %183, !dbg !1864

106:                                              ; preds = %originalBBpart2
  %107 = load i32, i32* @x.27
  %108 = load i32, i32* @y.28
  %109 = sub i32 %107, 1
  %110 = mul i32 %107, %109
  %111 = urem i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = icmp slt i32 %108, 10
  %114 = or i1 %112, %113
  br i1 %114, label %originalBB51, label %originalBB51alteredBB

originalBB51:                                     ; preds = %106, %originalBB51alteredBB
  %115 = load i32, i32* @x.27
  %116 = load i32, i32* @y.28
  %117 = sub i32 %115, 1
  %118 = mul i32 %115, %117
  %119 = urem i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = icmp slt i32 %116, 10
  %122 = or i1 %120, %121
  br i1 %122, label %originalBBpart253, label %originalBB51alteredBB

originalBBpart253:                                ; preds = %originalBB51
  br label %123, !dbg !1865

123:                                              ; preds = %originalBBpart287, %originalBBpart253
  %124 = load i32, i32* @x.27
  %125 = load i32, i32* @y.28
  %126 = sub i32 %124, 1
  %127 = mul i32 %124, %126
  %128 = urem i32 %127, 2
  %129 = icmp eq i32 %128, 0
  %130 = icmp slt i32 %125, 10
  %131 = or i1 %129, %130
  br i1 %131, label %originalBB55, label %originalBB55alteredBB

originalBB55:                                     ; preds = %123, %originalBB55alteredBB
  %132 = load i64, i64* %11, align 8, !dbg !1867
  %133 = urem i64 %132, 10, !dbg !1868
  %134 = add i64 48, %133, !dbg !1869
  %135 = trunc i64 %134 to i8, !dbg !1870
  %136 = load i8*, i8** %13, align 8, !dbg !1871
  %137 = getelementptr inbounds i8, i8* %136, i32 -1, !dbg !1871
  store i8* %137, i8** %13, align 8, !dbg !1871
  store i8 %135, i8* %137, align 1, !dbg !1872
  %138 = load i32, i32* @x.27
  %139 = load i32, i32* @y.28
  %140 = sub i32 %138, 1
  %141 = mul i32 %138, %140
  %142 = urem i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = icmp slt i32 %139, 10
  %145 = or i1 %143, %144
  br i1 %145, label %originalBBpart273, label %originalBB55alteredBB

originalBBpart273:                                ; preds = %originalBB55
  br label %146, !dbg !1873

146:                                              ; preds = %originalBBpart273
  %147 = load i32, i32* @x.27
  %148 = load i32, i32* @y.28
  %149 = sub i32 %147, 1
  %150 = mul i32 %147, %149
  %151 = urem i32 %150, 2
  %152 = icmp eq i32 %151, 0
  %153 = icmp slt i32 %148, 10
  %154 = or i1 %152, %153
  br i1 %154, label %originalBB75, label %originalBB75alteredBB

originalBB75:                                     ; preds = %146, %originalBB75alteredBB
  %155 = load i64, i64* %11, align 8, !dbg !1874
  %156 = udiv i64 %155, 10, !dbg !1874
  store i64 %156, i64* %11, align 8, !dbg !1874
  %157 = icmp ne i64 %156, 0, !dbg !1875
  %158 = load i32, i32* @x.27
  %159 = load i32, i32* @y.28
  %160 = sub i32 %158, 1
  %161 = mul i32 %158, %160
  %162 = urem i32 %161, 2
  %163 = icmp eq i32 %162, 0
  %164 = icmp slt i32 %159, 10
  %165 = or i1 %163, %164
  br i1 %165, label %originalBBpart287, label %originalBB75alteredBB

originalBBpart287:                                ; preds = %originalBB75
  br i1 %157, label %123, label %166, !dbg !1873, !llvm.loop !1876

166:                                              ; preds = %originalBBpart287
  %167 = load i32, i32* @x.27
  %168 = load i32, i32* @y.28
  %169 = sub i32 %167, 1
  %170 = mul i32 %167, %169
  %171 = urem i32 %170, 2
  %172 = icmp eq i32 %171, 0
  %173 = icmp slt i32 %168, 10
  %174 = or i1 %172, %173
  br i1 %174, label %originalBB89, label %originalBB89alteredBB

originalBB89:                                     ; preds = %166, %originalBB89alteredBB
  %175 = load i32, i32* @x.27
  %176 = load i32, i32* @y.28
  %177 = sub i32 %175, 1
  %178 = mul i32 %175, %177
  %179 = urem i32 %178, 2
  %180 = icmp eq i32 %179, 0
  %181 = icmp slt i32 %176, 10
  %182 = or i1 %180, %181
  br i1 %182, label %originalBBpart291, label %originalBB89alteredBB

originalBBpart291:                                ; preds = %originalBB89
  br label %183

183:                                              ; preds = %originalBBpart291, %originalBBpart249
  %184 = load i32, i32* @x.27
  %185 = load i32, i32* @y.28
  %186 = sub i32 %184, 1
  %187 = mul i32 %184, %186
  %188 = urem i32 %187, 2
  %189 = icmp eq i32 %188, 0
  %190 = icmp slt i32 %185, 10
  %191 = or i1 %189, %190
  br i1 %191, label %originalBB93, label %originalBB93alteredBB

originalBB93:                                     ; preds = %183, %originalBB93alteredBB
  %192 = load i8*, i8** %13, align 8, !dbg !1878
  %193 = load i32, i32* @x.27
  %194 = load i32, i32* @y.28
  %195 = sub i32 %193, 1
  %196 = mul i32 %193, %195
  %197 = urem i32 %196, 2
  %198 = icmp eq i32 %197, 0
  %199 = icmp slt i32 %194, 10
  %200 = or i1 %198, %199
  br i1 %200, label %originalBBpart295, label %originalBB93alteredBB

originalBBpart295:                                ; preds = %originalBB93
  ret i8* %192, !dbg !1879

originalBBalteredBB:                              ; preds = %originalBB, %2
  %201 = alloca i64, align 8
  %202 = alloca i8*, align 8
  %203 = alloca i8*, align 8
  store i64 %0, i64* %201, align 8
  call void @llvm.dbg.declare(metadata i64* %201, metadata !1880, metadata !DIExpression()), !dbg !1836
  store i8* %1, i8** %202, align 8
  call void @llvm.dbg.declare(metadata i8** %202, metadata !1883, metadata !DIExpression()), !dbg !1838
  call void @llvm.dbg.declare(metadata i8** %203, metadata !1884, metadata !DIExpression()), !dbg !1840
  %204 = load i8*, i8** %202, align 8, !dbg !1841
  %205 = getelementptr inbounds i8, i8* %204, i64 20, !dbg !1842
  store i8* %205, i8** %203, align 8, !dbg !1840
  %206 = load i8*, i8** %203, align 8, !dbg !1843
  store i8 0, i8* %206, align 1, !dbg !1844
  %207 = load i64, i64* %201, align 8, !dbg !1845
  %208 = icmp ult i64 %207, 0, !dbg !1847
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %27
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %44
  %209 = load i64, i64* %11, align 8, !dbg !1851
  %_ = sub i64 %209, 10
  %gen = mul i64 %_, 10
  %_7 = shl i64 %209, 10
  %_8 = sub i64 %209, 10
  %gen9 = mul i64 %_8, 10
  %_10 = sub i64 0, %209
  %gen11 = add i64 %_10, 10
  %_12 = sub i64 0, %209
  %gen13 = add i64 %_12, 10
  %210 = urem i64 %209, 10, !dbg !1852
  %_14 = sub i64 48, %210
  %gen15 = mul i64 %_14, %210
  %_16 = sub i64 48, %210
  %gen17 = mul i64 %_16, %210
  %_18 = sub i64 0, 48
  %gen19 = add i64 %_18, %210
  %_20 = sub i64 0, 48
  %gen21 = add i64 %_20, %210
  %_22 = shl i64 48, %210
  %_23 = sub i64 48, %210
  %gen24 = mul i64 %_23, %210
  %_25 = sub i64 0, 48
  %gen26 = add i64 %_25, %210
  %211 = sub i64 48, %210, !dbg !1853
  %212 = trunc i64 %211 to i8, !dbg !1854
  %213 = load i8*, i8** %13, align 8, !dbg !1855
  %214 = getelementptr inbounds i8, i8* %213, i32 -1, !dbg !1855
  store i8* %214, i8** %13, align 8, !dbg !1855
  store i8 %212, i8* %214, align 1, !dbg !1856
  br label %originalBB6

originalBB30alteredBB:                            ; preds = %originalBB30, %67
  %215 = load i64, i64* %11, align 8, !dbg !1858
  %_31 = sub i64 0, %215
  %gen32 = add i64 %_31, 10
  %_33 = shl i64 %215, 10
  %_34 = sub i64 0, %215
  %gen35 = add i64 %_34, 10
  %_36 = shl i64 %215, 10
  %_37 = sub i64 %215, 10
  %gen38 = mul i64 %_37, 10
  %_39 = sub i64 %215, 10
  %gen40 = mul i64 %_39, 10
  %_41 = shl i64 %215, 10
  %_42 = sub i64 0, %215
  %gen43 = add i64 %_42, 10
  %216 = udiv i64 %215, 10, !dbg !1858
  store i64 %216, i64* %11, align 8, !dbg !1858
  %217 = icmp ne i64 %216, 0, !dbg !1859
  br label %originalBB30

originalBB47alteredBB:                            ; preds = %originalBB47, %87
  %218 = load i8*, i8** %13, align 8, !dbg !1862
  %219 = getelementptr inbounds i8, i8* %218, i32 -1, !dbg !1862
  store i8* %219, i8** %13, align 8, !dbg !1862
  store i8 45, i8* %219, align 1, !dbg !1863
  br label %originalBB47

originalBB51alteredBB:                            ; preds = %originalBB51, %106
  br label %originalBB51

originalBB55alteredBB:                            ; preds = %originalBB55, %123
  %220 = load i64, i64* %11, align 8, !dbg !1867
  %_56 = shl i64 %220, 10
  %_57 = sub i64 %220, 10
  %gen58 = mul i64 %_57, 10
  %_59 = shl i64 %220, 10
  %_60 = shl i64 %220, 10
  %_61 = shl i64 %220, 10
  %_62 = shl i64 %220, 10
  %_63 = sub i64 %220, 10
  %gen64 = mul i64 %_63, 10
  %_65 = sub i64 0, %220
  %gen66 = add i64 %_65, 10
  %221 = urem i64 %220, 10, !dbg !1868
  %_67 = sub i64 0, 48
  %gen68 = add i64 %_67, %221
  %_69 = shl i64 48, %221
  %_70 = sub i64 48, %221
  %gen71 = mul i64 %_70, %221
  %222 = add i64 48, %221, !dbg !1869
  %223 = trunc i64 %222 to i8, !dbg !1870
  %224 = load i8*, i8** %13, align 8, !dbg !1871
  %225 = getelementptr inbounds i8, i8* %224, i32 -1, !dbg !1871
  store i8* %225, i8** %13, align 8, !dbg !1871
  store i8 %223, i8* %225, align 1, !dbg !1872
  br label %originalBB55

originalBB75alteredBB:                            ; preds = %originalBB75, %146
  %226 = load i64, i64* %11, align 8, !dbg !1874
  %_76 = sub i64 %226, 10
  %gen77 = mul i64 %_76, 10
  %_78 = sub i64 0, %226
  %gen79 = add i64 %_78, 10
  %_80 = shl i64 %226, 10
  %_81 = sub i64 %226, 10
  %gen82 = mul i64 %_81, 10
  %_83 = shl i64 %226, 10
  %_84 = sub i64 %226, 10
  %gen85 = mul i64 %_84, 10
  %227 = udiv i64 %226, 10, !dbg !1874
  store i64 %227, i64* %11, align 8, !dbg !1874
  %228 = icmp ne i64 %227, 0, !dbg !1875
  br label %originalBB75

originalBB89alteredBB:                            ; preds = %originalBB89, %166
  br label %originalBB89

originalBB93alteredBB:                            ; preds = %originalBB93, %183
  %229 = load i8*, i8** %13, align 8, !dbg !1878
  br label %originalBB93
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @set_program_name(i8*) #4 !dbg !1885 {
  %2 = load i32, i32* @x.29
  %3 = load i32, i32* @y.30
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  store i8* %0, i8** %10, align 8
  call void @llvm.dbg.declare(metadata i8** %10, metadata !1886, metadata !DIExpression()), !dbg !1887
  call void @llvm.dbg.declare(metadata i8** %11, metadata !1888, metadata !DIExpression()), !dbg !1889
  call void @llvm.dbg.declare(metadata i8** %12, metadata !1890, metadata !DIExpression()), !dbg !1891
  %13 = load i8*, i8** %10, align 8, !dbg !1892
  %14 = icmp eq i8* %13, null, !dbg !1894
  %15 = load i32, i32* @x.29
  %16 = load i32, i32* @y.30
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %14, label %23, label %42, !dbg !1895

23:                                               ; preds = %originalBBpart2
  %24 = load i32, i32* @x.29
  %25 = load i32, i32* @y.30
  %26 = sub i32 %24, 1
  %27 = mul i32 %24, %26
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %29, %30
  br i1 %31, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %23, %originalBB1alteredBB
  %32 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1896
  %33 = call i32 @fputs(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.80, i64 0, i64 0), %struct._IO_FILE* %32), !dbg !1898
  call void @abort() #12, !dbg !1899
  %34 = load i32, i32* @x.29
  %35 = load i32, i32* @y.30
  %36 = sub i32 %34, 1
  %37 = mul i32 %34, %36
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %39, %40
  br i1 %41, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  unreachable, !dbg !1899

42:                                               ; preds = %originalBBpart2
  %43 = load i32, i32* @x.29
  %44 = load i32, i32* @y.30
  %45 = sub i32 %43, 1
  %46 = mul i32 %43, %45
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %48, %49
  br i1 %50, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %42, %originalBB6alteredBB
  %51 = load i8*, i8** %10, align 8, !dbg !1900
  %52 = call i8* @strrchr(i8* %51, i32 47) #13, !dbg !1901
  store i8* %52, i8** %11, align 8, !dbg !1902
  %53 = load i8*, i8** %11, align 8, !dbg !1903
  %54 = icmp ne i8* %53, null, !dbg !1904
  %55 = load i32, i32* @x.29
  %56 = load i32, i32* @y.30
  %57 = sub i32 %55, 1
  %58 = mul i32 %55, %57
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %56, 10
  %62 = or i1 %60, %61
  br i1 %62, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %54, label %63, label %82, !dbg !1903

63:                                               ; preds = %originalBBpart28
  %64 = load i32, i32* @x.29
  %65 = load i32, i32* @y.30
  %66 = sub i32 %64, 1
  %67 = mul i32 %64, %66
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %65, 10
  %71 = or i1 %69, %70
  br i1 %71, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %63, %originalBB10alteredBB
  %72 = load i8*, i8** %11, align 8, !dbg !1905
  %73 = getelementptr inbounds i8, i8* %72, i64 1, !dbg !1906
  %74 = load i32, i32* @x.29
  %75 = load i32, i32* @y.30
  %76 = sub i32 %74, 1
  %77 = mul i32 %74, %76
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %75, 10
  %81 = or i1 %79, %80
  br i1 %81, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %100, !dbg !1903

82:                                               ; preds = %originalBBpart28
  %83 = load i32, i32* @x.29
  %84 = load i32, i32* @y.30
  %85 = sub i32 %83, 1
  %86 = mul i32 %83, %85
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %84, 10
  %90 = or i1 %88, %89
  br i1 %90, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %82, %originalBB14alteredBB
  %91 = load i8*, i8** %10, align 8, !dbg !1907
  %92 = load i32, i32* @x.29
  %93 = load i32, i32* @y.30
  %94 = sub i32 %92, 1
  %95 = mul i32 %92, %94
  %96 = urem i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %93, 10
  %99 = or i1 %97, %98
  br i1 %99, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %100, !dbg !1903

100:                                              ; preds = %originalBBpart216, %originalBBpart212
  %101 = phi i8* [ %73, %originalBBpart212 ], [ %91, %originalBBpart216 ], !dbg !1903
  %102 = load i32, i32* @x.29
  %103 = load i32, i32* @y.30
  %104 = sub i32 %102, 1
  %105 = mul i32 %102, %104
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %103, 10
  %109 = or i1 %107, %108
  br i1 %109, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %100, %originalBB18alteredBB
  store i8* %101, i8** %12, align 8, !dbg !1908
  %110 = load i8*, i8** %12, align 8, !dbg !1909
  %111 = load i8*, i8** %10, align 8, !dbg !1911
  %112 = ptrtoint i8* %110 to i64, !dbg !1912
  %113 = ptrtoint i8* %111 to i64, !dbg !1912
  %114 = sub i64 %112, %113, !dbg !1912
  %115 = icmp sge i64 %114, 7, !dbg !1913
  %116 = load i32, i32* @x.29
  %117 = load i32, i32* @y.30
  %118 = sub i32 %116, 1
  %119 = mul i32 %116, %118
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %117, 10
  %123 = or i1 %121, %122
  br i1 %123, label %originalBBpart223, label %originalBB18alteredBB

originalBBpart223:                                ; preds = %originalBB18
  br i1 %115, label %124, label %203, !dbg !1914

124:                                              ; preds = %originalBBpart223
  %125 = load i32, i32* @x.29
  %126 = load i32, i32* @y.30
  %127 = sub i32 %125, 1
  %128 = mul i32 %125, %127
  %129 = urem i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = icmp slt i32 %126, 10
  %132 = or i1 %130, %131
  br i1 %132, label %originalBB25, label %originalBB25alteredBB

originalBB25:                                     ; preds = %124, %originalBB25alteredBB
  %133 = load i8*, i8** %12, align 8, !dbg !1915
  %134 = getelementptr inbounds i8, i8* %133, i64 -7, !dbg !1916
  %135 = call i32 @strncmp(i8* %134, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.81, i64 0, i64 0), i64 7) #13, !dbg !1917
  %136 = icmp eq i32 %135, 0, !dbg !1918
  %137 = load i32, i32* @x.29
  %138 = load i32, i32* @y.30
  %139 = sub i32 %137, 1
  %140 = mul i32 %137, %139
  %141 = urem i32 %140, 2
  %142 = icmp eq i32 %141, 0
  %143 = icmp slt i32 %138, 10
  %144 = or i1 %142, %143
  br i1 %144, label %originalBBpart227, label %originalBB25alteredBB

originalBBpart227:                                ; preds = %originalBB25
  br i1 %136, label %145, label %203, !dbg !1919

145:                                              ; preds = %originalBBpart227
  %146 = load i32, i32* @x.29
  %147 = load i32, i32* @y.30
  %148 = sub i32 %146, 1
  %149 = mul i32 %146, %148
  %150 = urem i32 %149, 2
  %151 = icmp eq i32 %150, 0
  %152 = icmp slt i32 %147, 10
  %153 = or i1 %151, %152
  br i1 %153, label %originalBB29, label %originalBB29alteredBB

originalBB29:                                     ; preds = %145, %originalBB29alteredBB
  %154 = load i8*, i8** %12, align 8, !dbg !1920
  store i8* %154, i8** %10, align 8, !dbg !1922
  %155 = load i8*, i8** %12, align 8, !dbg !1923
  %156 = call i32 @strncmp(i8* %155, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.82, i64 0, i64 0), i64 3) #13, !dbg !1925
  %157 = icmp eq i32 %156, 0, !dbg !1926
  %158 = load i32, i32* @x.29
  %159 = load i32, i32* @y.30
  %160 = sub i32 %158, 1
  %161 = mul i32 %158, %160
  %162 = urem i32 %161, 2
  %163 = icmp eq i32 %162, 0
  %164 = icmp slt i32 %159, 10
  %165 = or i1 %163, %164
  br i1 %165, label %originalBBpart231, label %originalBB29alteredBB

originalBBpart231:                                ; preds = %originalBB29
  br i1 %157, label %166, label %186, !dbg !1927

166:                                              ; preds = %originalBBpart231
  %167 = load i32, i32* @x.29
  %168 = load i32, i32* @y.30
  %169 = sub i32 %167, 1
  %170 = mul i32 %167, %169
  %171 = urem i32 %170, 2
  %172 = icmp eq i32 %171, 0
  %173 = icmp slt i32 %168, 10
  %174 = or i1 %172, %173
  br i1 %174, label %originalBB33, label %originalBB33alteredBB

originalBB33:                                     ; preds = %166, %originalBB33alteredBB
  %175 = load i8*, i8** %12, align 8, !dbg !1928
  %176 = getelementptr inbounds i8, i8* %175, i64 3, !dbg !1930
  store i8* %176, i8** %10, align 8, !dbg !1931
  %177 = load i8*, i8** %10, align 8, !dbg !1932
  store i8* %177, i8** @program_invocation_short_name, align 8, !dbg !1933
  %178 = load i32, i32* @x.29
  %179 = load i32, i32* @y.30
  %180 = sub i32 %178, 1
  %181 = mul i32 %178, %180
  %182 = urem i32 %181, 2
  %183 = icmp eq i32 %182, 0
  %184 = icmp slt i32 %179, 10
  %185 = or i1 %183, %184
  br i1 %185, label %originalBBpart235, label %originalBB33alteredBB

originalBBpart235:                                ; preds = %originalBB33
  br label %186, !dbg !1934

186:                                              ; preds = %originalBBpart235, %originalBBpart231
  %187 = load i32, i32* @x.29
  %188 = load i32, i32* @y.30
  %189 = sub i32 %187, 1
  %190 = mul i32 %187, %189
  %191 = urem i32 %190, 2
  %192 = icmp eq i32 %191, 0
  %193 = icmp slt i32 %188, 10
  %194 = or i1 %192, %193
  br i1 %194, label %originalBB37, label %originalBB37alteredBB

originalBB37:                                     ; preds = %186, %originalBB37alteredBB
  %195 = load i32, i32* @x.29
  %196 = load i32, i32* @y.30
  %197 = sub i32 %195, 1
  %198 = mul i32 %195, %197
  %199 = urem i32 %198, 2
  %200 = icmp eq i32 %199, 0
  %201 = icmp slt i32 %196, 10
  %202 = or i1 %200, %201
  br i1 %202, label %originalBBpart239, label %originalBB37alteredBB

originalBBpart239:                                ; preds = %originalBB37
  br label %203, !dbg !1935

203:                                              ; preds = %originalBBpart239, %originalBBpart227, %originalBBpart223
  %204 = load i32, i32* @x.29
  %205 = load i32, i32* @y.30
  %206 = sub i32 %204, 1
  %207 = mul i32 %204, %206
  %208 = urem i32 %207, 2
  %209 = icmp eq i32 %208, 0
  %210 = icmp slt i32 %205, 10
  %211 = or i1 %209, %210
  br i1 %211, label %originalBB41, label %originalBB41alteredBB

originalBB41:                                     ; preds = %203, %originalBB41alteredBB
  %212 = load i8*, i8** %10, align 8, !dbg !1936
  store i8* %212, i8** @program_name, align 8, !dbg !1937
  %213 = load i8*, i8** %10, align 8, !dbg !1938
  store i8* %213, i8** @program_invocation_name, align 8, !dbg !1939
  %214 = load i32, i32* @x.29
  %215 = load i32, i32* @y.30
  %216 = sub i32 %214, 1
  %217 = mul i32 %214, %216
  %218 = urem i32 %217, 2
  %219 = icmp eq i32 %218, 0
  %220 = icmp slt i32 %215, 10
  %221 = or i1 %219, %220
  br i1 %221, label %originalBBpart243, label %originalBB41alteredBB

originalBBpart243:                                ; preds = %originalBB41
  ret void, !dbg !1940

originalBBalteredBB:                              ; preds = %originalBB, %1
  %222 = alloca i8*, align 8
  %223 = alloca i8*, align 8
  %224 = alloca i8*, align 8
  store i8* %0, i8** %222, align 8
  call void @llvm.dbg.declare(metadata i8** %222, metadata !1941, metadata !DIExpression()), !dbg !1887
  call void @llvm.dbg.declare(metadata i8** %223, metadata !1947, metadata !DIExpression()), !dbg !1889
  call void @llvm.dbg.declare(metadata i8** %224, metadata !1948, metadata !DIExpression()), !dbg !1891
  %225 = load i8*, i8** %222, align 8, !dbg !1892
  %226 = icmp eq i8* %225, null, !dbg !1894
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %23
  %227 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1896
  %228 = call i32 @fputs(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.80, i64 0, i64 0), %struct._IO_FILE* %227), !dbg !1898
  call void @abort() #12, !dbg !1899
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %42
  %229 = load i8*, i8** %10, align 8, !dbg !1900
  %230 = call i8* @strrchr(i8* %229, i32 47) #13, !dbg !1901
  store i8* %230, i8** %11, align 8, !dbg !1902
  %231 = load i8*, i8** %11, align 8, !dbg !1903
  %232 = icmp ne i8* %231, null, !dbg !1904
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %63
  %233 = load i8*, i8** %11, align 8, !dbg !1905
  %234 = getelementptr inbounds i8, i8* %233, i64 1, !dbg !1906
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %82
  %235 = load i8*, i8** %10, align 8, !dbg !1907
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %100
  store i8* %101, i8** %12, align 8, !dbg !1908
  %236 = load i8*, i8** %12, align 8, !dbg !1909
  %237 = load i8*, i8** %10, align 8, !dbg !1911
  %238 = ptrtoint i8* %236 to i64, !dbg !1912
  %239 = ptrtoint i8* %237 to i64, !dbg !1912
  %_ = shl i64 %238, %239
  %_19 = shl i64 %238, %239
  %_20 = sub i64 %238, %239
  %gen = mul i64 %_20, %239
  %_21 = shl i64 %238, %239
  %240 = sub i64 %238, %239, !dbg !1912
  %241 = icmp sge i64 %240, 7, !dbg !1913
  br label %originalBB18

originalBB25alteredBB:                            ; preds = %originalBB25, %124
  %242 = load i8*, i8** %12, align 8, !dbg !1915
  %243 = getelementptr inbounds i8, i8* %242, i64 -7, !dbg !1916
  %244 = call i32 @strncmp(i8* %243, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.81, i64 0, i64 0), i64 7) #13, !dbg !1917
  %245 = icmp eq i32 %244, 0, !dbg !1918
  br label %originalBB25

originalBB29alteredBB:                            ; preds = %originalBB29, %145
  %246 = load i8*, i8** %12, align 8, !dbg !1920
  store i8* %246, i8** %10, align 8, !dbg !1922
  %247 = load i8*, i8** %12, align 8, !dbg !1923
  %248 = call i32 @strncmp(i8* %247, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.82, i64 0, i64 0), i64 3) #13, !dbg !1925
  %249 = icmp eq i32 %248, 0, !dbg !1926
  br label %originalBB29

originalBB33alteredBB:                            ; preds = %originalBB33, %166
  %250 = load i8*, i8** %12, align 8, !dbg !1928
  %251 = getelementptr inbounds i8, i8* %250, i64 3, !dbg !1930
  store i8* %251, i8** %10, align 8, !dbg !1931
  %252 = load i8*, i8** %10, align 8, !dbg !1932
  store i8* %252, i8** @program_invocation_short_name, align 8, !dbg !1933
  br label %originalBB33

originalBB37alteredBB:                            ; preds = %originalBB37, %186
  br label %originalBB37

originalBB41alteredBB:                            ; preds = %originalBB41, %203
  %253 = load i8*, i8** %10, align 8, !dbg !1936
  store i8* %253, i8** @program_name, align 8, !dbg !1937
  %254 = load i8*, i8** %10, align 8, !dbg !1938
  store i8* %254, i8** @program_invocation_name, align 8, !dbg !1939
  br label %originalBB41
}

declare dso_local i32 @fputs(i8*, %struct._IO_FILE*) #3

; Function Attrs: noreturn nounwind
declare dso_local void @abort() #5

; Function Attrs: nounwind readonly
declare dso_local i8* @strrchr(i8*, i32) #7

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @set_char_quoting(%struct.quoting_options*, i8 signext, i32) #4 !dbg !1949 {
  %4 = load i32, i32* @x.31
  %5 = load i32, i32* @y.32
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %struct.quoting_options*, align 8
  %13 = alloca i8, align 1
  %14 = alloca i32, align 4
  %15 = alloca i8, align 1
  %16 = alloca i32*, align 8
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  store %struct.quoting_options* %0, %struct.quoting_options** %12, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %12, metadata !1953, metadata !DIExpression()), !dbg !1954
  store i8 %1, i8* %13, align 1
  call void @llvm.dbg.declare(metadata i8* %13, metadata !1955, metadata !DIExpression()), !dbg !1956
  store i32 %2, i32* %14, align 4
  call void @llvm.dbg.declare(metadata i32* %14, metadata !1957, metadata !DIExpression()), !dbg !1958
  call void @llvm.dbg.declare(metadata i8* %15, metadata !1959, metadata !DIExpression()), !dbg !1960
  %19 = load i8, i8* %13, align 1, !dbg !1961
  store i8 %19, i8* %15, align 1, !dbg !1960
  call void @llvm.dbg.declare(metadata i32** %16, metadata !1962, metadata !DIExpression()), !dbg !1964
  %20 = load %struct.quoting_options*, %struct.quoting_options** %12, align 8, !dbg !1965
  %21 = icmp ne %struct.quoting_options* %20, null, !dbg !1965
  %22 = load i32, i32* @x.31
  %23 = load i32, i32* @y.32
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %21, label %30, label %48, !dbg !1965

30:                                               ; preds = %originalBBpart2
  %31 = load i32, i32* @x.31
  %32 = load i32, i32* @y.32
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %30, %originalBB1alteredBB
  %39 = load %struct.quoting_options*, %struct.quoting_options** %12, align 8, !dbg !1966
  %40 = load i32, i32* @x.31
  %41 = load i32, i32* @y.32
  %42 = sub i32 %40, 1
  %43 = mul i32 %40, %42
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %45, %46
  br i1 %47, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %65, !dbg !1965

48:                                               ; preds = %originalBBpart2
  %49 = load i32, i32* @x.31
  %50 = load i32, i32* @y.32
  %51 = sub i32 %49, 1
  %52 = mul i32 %49, %51
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %50, 10
  %56 = or i1 %54, %55
  br i1 %56, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %48, %originalBB6alteredBB
  %57 = load i32, i32* @x.31
  %58 = load i32, i32* @y.32
  %59 = sub i32 %57, 1
  %60 = mul i32 %57, %59
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %58, 10
  %64 = or i1 %62, %63
  br i1 %64, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %65, !dbg !1965

65:                                               ; preds = %originalBBpart28, %originalBBpart24
  %66 = phi %struct.quoting_options* [ %39, %originalBBpart24 ], [ @default_quoting_options, %originalBBpart28 ], !dbg !1965
  %67 = load i32, i32* @x.31
  %68 = load i32, i32* @y.32
  %69 = sub i32 %67, 1
  %70 = mul i32 %67, %69
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %68, 10
  %74 = or i1 %72, %73
  br i1 %74, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %65, %originalBB10alteredBB
  %75 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %66, i32 0, i32 2, !dbg !1967
  %76 = getelementptr inbounds [8 x i32], [8 x i32]* %75, i64 0, i64 0, !dbg !1968
  %77 = load i8, i8* %15, align 1, !dbg !1969
  %78 = zext i8 %77 to i64, !dbg !1969
  %79 = udiv i64 %78, 32, !dbg !1970
  %80 = getelementptr inbounds i32, i32* %76, i64 %79, !dbg !1971
  store i32* %80, i32** %16, align 8, !dbg !1964
  call void @llvm.dbg.declare(metadata i32* %17, metadata !1972, metadata !DIExpression()), !dbg !1973
  %81 = load i8, i8* %15, align 1, !dbg !1974
  %82 = zext i8 %81 to i64, !dbg !1974
  %83 = urem i64 %82, 32, !dbg !1975
  %84 = trunc i64 %83 to i32, !dbg !1974
  store i32 %84, i32* %17, align 4, !dbg !1973
  call void @llvm.dbg.declare(metadata i32* %18, metadata !1976, metadata !DIExpression()), !dbg !1977
  %85 = load i32*, i32** %16, align 8, !dbg !1978
  %86 = load i32, i32* %85, align 4, !dbg !1979
  %87 = load i32, i32* %17, align 4, !dbg !1980
  %88 = lshr i32 %86, %87, !dbg !1981
  %89 = and i32 %88, 1, !dbg !1982
  store i32 %89, i32* %18, align 4, !dbg !1977
  %90 = load i32, i32* %14, align 4, !dbg !1983
  %91 = and i32 %90, 1, !dbg !1984
  %92 = load i32, i32* %18, align 4, !dbg !1985
  %93 = xor i32 %91, %92, !dbg !1986
  %94 = load i32, i32* %17, align 4, !dbg !1987
  %95 = shl i32 %93, %94, !dbg !1988
  %96 = load i32*, i32** %16, align 8, !dbg !1989
  %97 = load i32, i32* %96, align 4, !dbg !1990
  %98 = xor i32 %97, %95, !dbg !1990
  store i32 %98, i32* %96, align 4, !dbg !1990
  %99 = load i32, i32* %18, align 4, !dbg !1991
  %100 = load i32, i32* @x.31
  %101 = load i32, i32* @y.32
  %102 = sub i32 %100, 1
  %103 = mul i32 %100, %102
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %101, 10
  %107 = or i1 %105, %106
  br i1 %107, label %originalBBpart253, label %originalBB10alteredBB

originalBBpart253:                                ; preds = %originalBB10
  ret i32 %99, !dbg !1992

originalBBalteredBB:                              ; preds = %originalBB, %3
  %108 = alloca %struct.quoting_options*, align 8
  %109 = alloca i8, align 1
  %110 = alloca i32, align 4
  %111 = alloca i8, align 1
  %112 = alloca i32*, align 8
  %113 = alloca i32, align 4
  %114 = alloca i32, align 4
  store %struct.quoting_options* %0, %struct.quoting_options** %108, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %108, metadata !1993, metadata !DIExpression()), !dbg !1954
  store i8 %1, i8* %109, align 1
  call void @llvm.dbg.declare(metadata i8* %109, metadata !2028, metadata !DIExpression()), !dbg !1956
  store i32 %2, i32* %110, align 4
  call void @llvm.dbg.declare(metadata i32* %110, metadata !2029, metadata !DIExpression()), !dbg !1958
  call void @llvm.dbg.declare(metadata i8* %111, metadata !2030, metadata !DIExpression()), !dbg !1960
  %115 = load i8, i8* %109, align 1, !dbg !1961
  store i8 %115, i8* %111, align 1, !dbg !1960
  call void @llvm.dbg.declare(metadata i32** %112, metadata !2031, metadata !DIExpression()), !dbg !1964
  %116 = load %struct.quoting_options*, %struct.quoting_options** %108, align 8, !dbg !1965
  %117 = icmp ne %struct.quoting_options* %116, null, !dbg !1965
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %30
  %118 = load %struct.quoting_options*, %struct.quoting_options** %12, align 8, !dbg !1966
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %48
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %65
  %119 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %66, i32 0, i32 2, !dbg !1967
  %120 = getelementptr inbounds [8 x i32], [8 x i32]* %119, i64 0, i64 0, !dbg !1968
  %121 = load i8, i8* %15, align 1, !dbg !1969
  %122 = zext i8 %121 to i64, !dbg !1969
  %_ = shl i64 %122, 32
  %123 = udiv i64 %122, 32, !dbg !1970
  %124 = getelementptr inbounds i32, i32* %120, i64 %123, !dbg !1971
  store i32* %124, i32** %16, align 8, !dbg !1964
  call void @llvm.dbg.declare(metadata !4, metadata !2032, metadata !DIExpression()), !dbg !1973
  %125 = load i8, i8* %15, align 1, !dbg !1974
  %126 = zext i8 %125 to i64, !dbg !1974
  %_11 = shl i64 %126, 32
  %_12 = sub i64 0, %126
  %gen = add i64 %_12, 32
  %_13 = sub i64 %126, 32
  %gen14 = mul i64 %_13, 32
  %_15 = sub i64 0, %126
  %gen16 = add i64 %_15, 32
  %_17 = sub i64 0, %126
  %gen18 = add i64 %_17, 32
  %_19 = sub i64 %126, 32
  %gen20 = mul i64 %_19, 32
  %_21 = sub i64 0, %126
  %gen22 = add i64 %_21, 32
  %127 = urem i64 %126, 32, !dbg !1975
  %128 = trunc i64 %127 to i32, !dbg !1974
  store i32 %128, i32* %17, align 4, !dbg !1973
  call void @llvm.dbg.declare(metadata !4, metadata !2067, metadata !DIExpression()), !dbg !1977
  %129 = load i32*, i32** %16, align 8, !dbg !1978
  %130 = load i32, i32* %129, align 4, !dbg !1979
  %131 = load i32, i32* %17, align 4, !dbg !1980
  %_23 = shl i32 %130, %131
  %132 = lshr i32 %130, %131, !dbg !1981
  %_24 = sub i32 0, %132
  %gen25 = add i32 %_24, 1
  %_26 = shl i32 %132, 1
  %_27 = sub i32 %132, 1
  %gen28 = mul i32 %_27, 1
  %133 = and i32 %132, 1, !dbg !1982
  store i32 %133, i32* %18, align 4, !dbg !1977
  %134 = load i32, i32* %14, align 4, !dbg !1983
  %_29 = sub i32 0, %134
  %gen30 = add i32 %_29, 1
  %_31 = sub i32 %134, 1
  %gen32 = mul i32 %_31, 1
  %135 = and i32 %134, 1, !dbg !1984
  %136 = load i32, i32* %18, align 4, !dbg !1985
  %_33 = sub i32 0, %135
  %gen34 = add i32 %_33, %136
  %_35 = shl i32 %135, %136
  %_36 = sub i32 0, %135
  %gen37 = add i32 %_36, %136
  %_38 = sub i32 0, %135
  %gen39 = add i32 %_38, %136
  %_40 = sub i32 %135, %136
  %gen41 = mul i32 %_40, %136
  %137 = xor i32 %135, %136, !dbg !1986
  %138 = load i32, i32* %17, align 4, !dbg !1987
  %_42 = sub i32 %137, %138
  %gen43 = mul i32 %_42, %138
  %_44 = sub i32 0, %137
  %gen45 = add i32 %_44, %138
  %_46 = sub i32 0, %137
  %gen47 = add i32 %_46, %138
  %139 = shl i32 %137, %138, !dbg !1988
  %140 = load i32*, i32** %16, align 8, !dbg !1989
  %141 = load i32, i32* %140, align 4, !dbg !1990
  %_48 = sub i32 %141, %139
  %gen49 = mul i32 %_48, %139
  %_50 = sub i32 %141, %139
  %gen51 = mul i32 %_50, %139
  %142 = xor i32 %141, %139, !dbg !1990
  store i32 %142, i32* %140, align 4, !dbg !1990
  %143 = load i32, i32* %18, align 4, !dbg !1991
  br label %originalBB10
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quotearg_char_mem(i8*, i64, i8 signext) #4 !dbg !2068 {
  %4 = load i32, i32* @x.33
  %5 = load i32, i32* @y.34
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca i8*, align 8
  %13 = alloca i64, align 8
  %14 = alloca i8, align 1
  %15 = alloca %struct.quoting_options, align 8
  store i8* %0, i8** %12, align 8
  call void @llvm.dbg.declare(metadata i8** %12, metadata !2071, metadata !DIExpression()), !dbg !2072
  store i64 %1, i64* %13, align 8
  call void @llvm.dbg.declare(metadata i64* %13, metadata !2073, metadata !DIExpression()), !dbg !2074
  store i8 %2, i8* %14, align 1
  call void @llvm.dbg.declare(metadata i8* %14, metadata !2075, metadata !DIExpression()), !dbg !2076
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %15, metadata !2077, metadata !DIExpression()), !dbg !2078
  %16 = bitcast %struct.quoting_options* %15 to i8*, !dbg !2079
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 bitcast (%struct.quoting_options* @default_quoting_options to i8*), i64 56, i1 false), !dbg !2079
  %17 = load i8, i8* %14, align 1, !dbg !2080
  %18 = call i32 @set_char_quoting(%struct.quoting_options* %15, i8 signext %17, i32 1), !dbg !2081
  %19 = load i8*, i8** %12, align 8, !dbg !2082
  %20 = load i64, i64* %13, align 8, !dbg !2083
  %21 = call i8* @quotearg_n_options(i32 0, i8* %19, i64 %20, %struct.quoting_options* %15), !dbg !2084
  %22 = load i32, i32* @x.33
  %23 = load i32, i32* @y.34
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i8* %21, !dbg !2085

originalBBalteredBB:                              ; preds = %originalBB, %3
  %30 = alloca i8*, align 8
  %31 = alloca i64, align 8
  %32 = alloca i8, align 1
  %33 = alloca %struct.quoting_options, align 8
  store i8* %0, i8** %30, align 8
  call void @llvm.dbg.declare(metadata i8** %30, metadata !2086, metadata !DIExpression()), !dbg !2072
  store i64 %1, i64* %31, align 8
  call void @llvm.dbg.declare(metadata i64* %31, metadata !2118, metadata !DIExpression()), !dbg !2074
  store i8 %2, i8* %32, align 1
  call void @llvm.dbg.declare(metadata i8* %32, metadata !2119, metadata !DIExpression()), !dbg !2076
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %33, metadata !2120, metadata !DIExpression()), !dbg !2078
  %34 = bitcast %struct.quoting_options* %33 to i8*, !dbg !2079
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %34, i8* align 8 bitcast (%struct.quoting_options* @default_quoting_options to i8*), i64 56, i1 false), !dbg !2079
  %35 = load i8, i8* %32, align 1, !dbg !2080
  %36 = call i32 @set_char_quoting(%struct.quoting_options* %33, i8 signext %35, i32 1), !dbg !2081
  %37 = load i8*, i8** %30, align 8, !dbg !2082
  %38 = load i64, i64* %31, align 8, !dbg !2083
  %39 = call i8* @quotearg_n_options(i32 0, i8* %37, i64 %38, %struct.quoting_options* %33), !dbg !2084
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quotearg_n_options(i32, i8*, i64, %struct.quoting_options*) #4 !dbg !2121 {
  %5 = load i32, i32* @x.35
  %6 = load i32, i32* @y.36
  %7 = sub i32 %5, 1
  %8 = mul i32 %5, %7
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %6, 10
  %12 = or i1 %10, %11
  br i1 %12, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %4, %originalBBalteredBB
  %13 = alloca i32, align 4
  %14 = alloca i8*, align 8
  %15 = alloca i64, align 8
  %16 = alloca %struct.quoting_options*, align 8
  %17 = alloca i32, align 4
  %18 = alloca %struct.slotvec*, align 8
  %19 = alloca i8, align 1
  %20 = alloca i32, align 4
  %21 = alloca i64, align 8
  %22 = alloca i8*, align 8
  %23 = alloca i32, align 4
  %24 = alloca i64, align 8
  store i32 %0, i32* %13, align 4
  call void @llvm.dbg.declare(metadata i32* %13, metadata !2126, metadata !DIExpression()), !dbg !2127
  store i8* %1, i8** %14, align 8
  call void @llvm.dbg.declare(metadata i8** %14, metadata !2128, metadata !DIExpression()), !dbg !2129
  store i64 %2, i64* %15, align 8
  call void @llvm.dbg.declare(metadata i64* %15, metadata !2130, metadata !DIExpression()), !dbg !2131
  store %struct.quoting_options* %3, %struct.quoting_options** %16, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %16, metadata !2132, metadata !DIExpression()), !dbg !2133
  call void @llvm.dbg.declare(metadata i32* %17, metadata !2134, metadata !DIExpression()), !dbg !2135
  %25 = call i32* @__errno_location() #15, !dbg !2136
  %26 = load i32, i32* %25, align 4, !dbg !2136
  store i32 %26, i32* %17, align 4, !dbg !2135
  call void @llvm.dbg.declare(metadata %struct.slotvec** %18, metadata !2137, metadata !DIExpression()), !dbg !2138
  %27 = load %struct.slotvec*, %struct.slotvec** @slotvec, align 8, !dbg !2139
  store %struct.slotvec* %27, %struct.slotvec** %18, align 8, !dbg !2138
  %28 = load i32, i32* %13, align 4, !dbg !2140
  %29 = icmp slt i32 %28, 0, !dbg !2142
  %30 = load i32, i32* @x.35
  %31 = load i32, i32* @y.36
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %29, label %38, label %55, !dbg !2143

38:                                               ; preds = %originalBBpart2
  %39 = load i32, i32* @x.35
  %40 = load i32, i32* @y.36
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %38, %originalBB1alteredBB
  call void @abort() #12, !dbg !2144
  %47 = load i32, i32* @x.35
  %48 = load i32, i32* @y.36
  %49 = sub i32 %47, 1
  %50 = mul i32 %47, %49
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %48, 10
  %54 = or i1 %52, %53
  br i1 %54, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  unreachable, !dbg !2144

55:                                               ; preds = %originalBBpart2
  %56 = load i32, i32* @x.35
  %57 = load i32, i32* @y.36
  %58 = sub i32 %56, 1
  %59 = mul i32 %56, %58
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %61, %62
  br i1 %63, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %55, %originalBB6alteredBB
  %64 = load i32, i32* @nslots, align 4, !dbg !2145
  %65 = load i32, i32* %13, align 4, !dbg !2147
  %66 = icmp sle i32 %64, %65, !dbg !2148
  %67 = load i32, i32* @x.35
  %68 = load i32, i32* @y.36
  %69 = sub i32 %67, 1
  %70 = mul i32 %67, %69
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %68, 10
  %74 = or i1 %72, %73
  br i1 %74, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %66, label %75, label %245, !dbg !2149

75:                                               ; preds = %originalBBpart28
  call void @llvm.dbg.declare(metadata i8* %19, metadata !2150, metadata !DIExpression()), !dbg !2152
  %76 = load i32, i32* @x.35
  %77 = load i32, i32* @y.36
  %78 = sub i32 %76, 1
  %79 = mul i32 %76, %78
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %77, 10
  %83 = or i1 %81, %82
  br i1 %83, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %75, %originalBB10alteredBB
  %84 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !2153
  %85 = icmp eq %struct.slotvec* %84, @slotvec0, !dbg !2154
  %86 = zext i1 %85 to i8, !dbg !2152
  store i8 %86, i8* %19, align 1, !dbg !2152
  call void @llvm.dbg.declare(metadata i32* %20, metadata !2155, metadata !DIExpression()), !dbg !2156
  store i32 2147483646, i32* %20, align 4, !dbg !2156
  %87 = load i32, i32* %20, align 4, !dbg !2157
  %88 = load i32, i32* %13, align 4, !dbg !2159
  %89 = icmp slt i32 %87, %88, !dbg !2160
  %90 = load i32, i32* @x.35
  %91 = load i32, i32* @y.36
  %92 = sub i32 %90, 1
  %93 = mul i32 %90, %92
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %91, 10
  %97 = or i1 %95, %96
  br i1 %97, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %89, label %98, label %115, !dbg !2161

98:                                               ; preds = %originalBBpart212
  %99 = load i32, i32* @x.35
  %100 = load i32, i32* @y.36
  %101 = sub i32 %99, 1
  %102 = mul i32 %99, %101
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %100, 10
  %106 = or i1 %104, %105
  br i1 %106, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %98, %originalBB14alteredBB
  call void @xalloc_die() #14, !dbg !2162
  %107 = load i32, i32* @x.35
  %108 = load i32, i32* @y.36
  %109 = sub i32 %107, 1
  %110 = mul i32 %107, %109
  %111 = urem i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = icmp slt i32 %108, 10
  %114 = or i1 %112, %113
  br i1 %114, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  unreachable, !dbg !2162

115:                                              ; preds = %originalBBpart212
  %116 = load i32, i32* @x.35
  %117 = load i32, i32* @y.36
  %118 = sub i32 %116, 1
  %119 = mul i32 %116, %118
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %117, 10
  %123 = or i1 %121, %122
  br i1 %123, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %115, %originalBB18alteredBB
  %124 = load i8, i8* %19, align 1, !dbg !2163
  %125 = trunc i8 %124 to i1, !dbg !2163
  %126 = load i32, i32* @x.35
  %127 = load i32, i32* @y.36
  %128 = sub i32 %126, 1
  %129 = mul i32 %126, %128
  %130 = urem i32 %129, 2
  %131 = icmp eq i32 %130, 0
  %132 = icmp slt i32 %127, 10
  %133 = or i1 %131, %132
  br i1 %133, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br i1 %125, label %134, label %151, !dbg !2163

134:                                              ; preds = %originalBBpart220
  %135 = load i32, i32* @x.35
  %136 = load i32, i32* @y.36
  %137 = sub i32 %135, 1
  %138 = mul i32 %135, %137
  %139 = urem i32 %138, 2
  %140 = icmp eq i32 %139, 0
  %141 = icmp slt i32 %136, 10
  %142 = or i1 %140, %141
  br i1 %142, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %134, %originalBB22alteredBB
  %143 = load i32, i32* @x.35
  %144 = load i32, i32* @y.36
  %145 = sub i32 %143, 1
  %146 = mul i32 %143, %145
  %147 = urem i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = icmp slt i32 %144, 10
  %150 = or i1 %148, %149
  br i1 %150, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br label %169, !dbg !2163

151:                                              ; preds = %originalBBpart220
  %152 = load i32, i32* @x.35
  %153 = load i32, i32* @y.36
  %154 = sub i32 %152, 1
  %155 = mul i32 %152, %154
  %156 = urem i32 %155, 2
  %157 = icmp eq i32 %156, 0
  %158 = icmp slt i32 %153, 10
  %159 = or i1 %157, %158
  br i1 %159, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %151, %originalBB26alteredBB
  %160 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !2164
  %161 = load i32, i32* @x.35
  %162 = load i32, i32* @y.36
  %163 = sub i32 %161, 1
  %164 = mul i32 %161, %163
  %165 = urem i32 %164, 2
  %166 = icmp eq i32 %165, 0
  %167 = icmp slt i32 %162, 10
  %168 = or i1 %166, %167
  br i1 %168, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br label %169, !dbg !2163

169:                                              ; preds = %originalBBpart228, %originalBBpart224
  %170 = phi %struct.slotvec* [ null, %originalBBpart224 ], [ %160, %originalBBpart228 ], !dbg !2163
  %171 = load i32, i32* @x.35
  %172 = load i32, i32* @y.36
  %173 = sub i32 %171, 1
  %174 = mul i32 %171, %173
  %175 = urem i32 %174, 2
  %176 = icmp eq i32 %175, 0
  %177 = icmp slt i32 %172, 10
  %178 = or i1 %176, %177
  br i1 %178, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %169, %originalBB30alteredBB
  %179 = bitcast %struct.slotvec* %170 to i8*, !dbg !2163
  %180 = load i32, i32* %13, align 4, !dbg !2165
  %181 = add nsw i32 %180, 1, !dbg !2166
  %182 = sext i32 %181 to i64, !dbg !2167
  %183 = mul i64 %182, 16, !dbg !2168
  %184 = call i8* @xrealloc(i8* %179, i64 %183), !dbg !2169
  %185 = bitcast i8* %184 to %struct.slotvec*, !dbg !2169
  store %struct.slotvec* %185, %struct.slotvec** %18, align 8, !dbg !2170
  store %struct.slotvec* %185, %struct.slotvec** @slotvec, align 8, !dbg !2171
  %186 = load i8, i8* %19, align 1, !dbg !2172
  %187 = trunc i8 %186 to i1, !dbg !2172
  %188 = load i32, i32* @x.35
  %189 = load i32, i32* @y.36
  %190 = sub i32 %188, 1
  %191 = mul i32 %188, %190
  %192 = urem i32 %191, 2
  %193 = icmp eq i32 %192, 0
  %194 = icmp slt i32 %189, 10
  %195 = or i1 %193, %194
  br i1 %195, label %originalBBpart254, label %originalBB30alteredBB

originalBBpart254:                                ; preds = %originalBB30
  br i1 %187, label %196, label %215, !dbg !2174

196:                                              ; preds = %originalBBpart254
  %197 = load i32, i32* @x.35
  %198 = load i32, i32* @y.36
  %199 = sub i32 %197, 1
  %200 = mul i32 %197, %199
  %201 = urem i32 %200, 2
  %202 = icmp eq i32 %201, 0
  %203 = icmp slt i32 %198, 10
  %204 = or i1 %202, %203
  br i1 %204, label %originalBB56, label %originalBB56alteredBB

originalBB56:                                     ; preds = %196, %originalBB56alteredBB
  %205 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !2175
  %206 = bitcast %struct.slotvec* %205 to i8*, !dbg !2176
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %206, i8* align 8 bitcast (%struct.slotvec* @slotvec0 to i8*), i64 16, i1 false), !dbg !2176
  %207 = load i32, i32* @x.35
  %208 = load i32, i32* @y.36
  %209 = sub i32 %207, 1
  %210 = mul i32 %207, %209
  %211 = urem i32 %210, 2
  %212 = icmp eq i32 %211, 0
  %213 = icmp slt i32 %208, 10
  %214 = or i1 %212, %213
  br i1 %214, label %originalBBpart258, label %originalBB56alteredBB

originalBBpart258:                                ; preds = %originalBB56
  br label %215, !dbg !2177

215:                                              ; preds = %originalBBpart258, %originalBBpart254
  %216 = load i32, i32* @x.35
  %217 = load i32, i32* @y.36
  %218 = sub i32 %216, 1
  %219 = mul i32 %216, %218
  %220 = urem i32 %219, 2
  %221 = icmp eq i32 %220, 0
  %222 = icmp slt i32 %217, 10
  %223 = or i1 %221, %222
  br i1 %223, label %originalBB60, label %originalBB60alteredBB

originalBB60:                                     ; preds = %215, %originalBB60alteredBB
  %224 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !2178
  %225 = load i32, i32* @nslots, align 4, !dbg !2179
  %226 = sext i32 %225 to i64, !dbg !2180
  %227 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %224, i64 %226, !dbg !2180
  %228 = bitcast %struct.slotvec* %227 to i8*, !dbg !2181
  %229 = load i32, i32* %13, align 4, !dbg !2182
  %230 = add nsw i32 %229, 1, !dbg !2183
  %231 = load i32, i32* @nslots, align 4, !dbg !2184
  %232 = sub nsw i32 %230, %231, !dbg !2185
  %233 = sext i32 %232 to i64, !dbg !2186
  %234 = mul i64 %233, 16, !dbg !2187
  call void @llvm.memset.p0i8.i64(i8* align 8 %228, i8 0, i64 %234, i1 false), !dbg !2181
  %235 = load i32, i32* %13, align 4, !dbg !2188
  %236 = add nsw i32 %235, 1, !dbg !2189
  store i32 %236, i32* @nslots, align 4, !dbg !2190
  %237 = load i32, i32* @x.35
  %238 = load i32, i32* @y.36
  %239 = sub i32 %237, 1
  %240 = mul i32 %237, %239
  %241 = urem i32 %240, 2
  %242 = icmp eq i32 %241, 0
  %243 = icmp slt i32 %238, 10
  %244 = or i1 %242, %243
  br i1 %244, label %originalBBpart289, label %originalBB60alteredBB

originalBBpart289:                                ; preds = %originalBB60
  br label %245, !dbg !2191

245:                                              ; preds = %originalBBpart289, %originalBBpart28
  call void @llvm.dbg.declare(metadata i64* %21, metadata !2192, metadata !DIExpression()), !dbg !2194
  %246 = load i32, i32* @x.35
  %247 = load i32, i32* @y.36
  %248 = sub i32 %246, 1
  %249 = mul i32 %246, %248
  %250 = urem i32 %249, 2
  %251 = icmp eq i32 %250, 0
  %252 = icmp slt i32 %247, 10
  %253 = or i1 %251, %252
  br i1 %253, label %originalBB91, label %originalBB91alteredBB

originalBB91:                                     ; preds = %245, %originalBB91alteredBB
  %254 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !2195
  %255 = load i32, i32* %13, align 4, !dbg !2196
  %256 = sext i32 %255 to i64, !dbg !2195
  %257 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %254, i64 %256, !dbg !2195
  %258 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %257, i32 0, i32 0, !dbg !2197
  %259 = load i64, i64* %258, align 8, !dbg !2197
  store i64 %259, i64* %21, align 8, !dbg !2194
  call void @llvm.dbg.declare(metadata i8** %22, metadata !2198, metadata !DIExpression()), !dbg !2199
  %260 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !2200
  %261 = load i32, i32* %13, align 4, !dbg !2201
  %262 = sext i32 %261 to i64, !dbg !2200
  %263 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %260, i64 %262, !dbg !2200
  %264 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %263, i32 0, i32 1, !dbg !2202
  %265 = load i8*, i8** %264, align 8, !dbg !2202
  store i8* %265, i8** %22, align 8, !dbg !2199
  call void @llvm.dbg.declare(metadata i32* %23, metadata !2203, metadata !DIExpression()), !dbg !2204
  %266 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !2205
  %267 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %266, i32 0, i32 1, !dbg !2206
  %268 = load i32, i32* %267, align 4, !dbg !2206
  %269 = or i32 %268, 1, !dbg !2207
  store i32 %269, i32* %23, align 4, !dbg !2204
  call void @llvm.dbg.declare(metadata i64* %24, metadata !2208, metadata !DIExpression()), !dbg !2209
  %270 = load i8*, i8** %22, align 8, !dbg !2210
  %271 = load i64, i64* %21, align 8, !dbg !2211
  %272 = load i8*, i8** %14, align 8, !dbg !2212
  %273 = load i64, i64* %15, align 8, !dbg !2213
  %274 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !2214
  %275 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %274, i32 0, i32 0, !dbg !2215
  %276 = load i32, i32* %275, align 8, !dbg !2215
  %277 = load i32, i32* %23, align 4, !dbg !2216
  %278 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !2217
  %279 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %278, i32 0, i32 2, !dbg !2218
  %280 = getelementptr inbounds [8 x i32], [8 x i32]* %279, i64 0, i64 0, !dbg !2217
  %281 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !2219
  %282 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %281, i32 0, i32 3, !dbg !2220
  %283 = load i8*, i8** %282, align 8, !dbg !2220
  %284 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !2221
  %285 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %284, i32 0, i32 4, !dbg !2222
  %286 = load i8*, i8** %285, align 8, !dbg !2222
  %287 = call i64 @quotearg_buffer_restyled(i8* %270, i64 %271, i8* %272, i64 %273, i32 %276, i32 %277, i32* %280, i8* %283, i8* %286), !dbg !2223
  store i64 %287, i64* %24, align 8, !dbg !2209
  %288 = load i64, i64* %21, align 8, !dbg !2224
  %289 = load i64, i64* %24, align 8, !dbg !2226
  %290 = icmp ule i64 %288, %289, !dbg !2227
  %291 = load i32, i32* @x.35
  %292 = load i32, i32* @y.36
  %293 = sub i32 %291, 1
  %294 = mul i32 %291, %293
  %295 = urem i32 %294, 2
  %296 = icmp eq i32 %295, 0
  %297 = icmp slt i32 %292, 10
  %298 = or i1 %296, %297
  br i1 %298, label %originalBBpart2101, label %originalBB91alteredBB

originalBBpart2101:                               ; preds = %originalBB91
  br i1 %290, label %299, label %385, !dbg !2228

299:                                              ; preds = %originalBBpart2101
  %300 = load i32, i32* @x.35
  %301 = load i32, i32* @y.36
  %302 = sub i32 %300, 1
  %303 = mul i32 %300, %302
  %304 = urem i32 %303, 2
  %305 = icmp eq i32 %304, 0
  %306 = icmp slt i32 %301, 10
  %307 = or i1 %305, %306
  br i1 %307, label %originalBB103, label %originalBB103alteredBB

originalBB103:                                    ; preds = %299, %originalBB103alteredBB
  %308 = load i64, i64* %24, align 8, !dbg !2229
  %309 = add i64 %308, 1, !dbg !2231
  store i64 %309, i64* %21, align 8, !dbg !2232
  %310 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !2233
  %311 = load i32, i32* %13, align 4, !dbg !2234
  %312 = sext i32 %311 to i64, !dbg !2233
  %313 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %310, i64 %312, !dbg !2233
  %314 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %313, i32 0, i32 0, !dbg !2235
  store i64 %309, i64* %314, align 8, !dbg !2236
  %315 = load i8*, i8** %22, align 8, !dbg !2237
  %316 = icmp ne i8* %315, getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i64 0, i64 0), !dbg !2239
  %317 = load i32, i32* @x.35
  %318 = load i32, i32* @y.36
  %319 = sub i32 %317, 1
  %320 = mul i32 %317, %319
  %321 = urem i32 %320, 2
  %322 = icmp eq i32 %321, 0
  %323 = icmp slt i32 %318, 10
  %324 = or i1 %322, %323
  br i1 %324, label %originalBBpart2115, label %originalBB103alteredBB

originalBBpart2115:                               ; preds = %originalBB103
  br i1 %316, label %325, label %343, !dbg !2240

325:                                              ; preds = %originalBBpart2115
  %326 = load i32, i32* @x.35
  %327 = load i32, i32* @y.36
  %328 = sub i32 %326, 1
  %329 = mul i32 %326, %328
  %330 = urem i32 %329, 2
  %331 = icmp eq i32 %330, 0
  %332 = icmp slt i32 %327, 10
  %333 = or i1 %331, %332
  br i1 %333, label %originalBB117, label %originalBB117alteredBB

originalBB117:                                    ; preds = %325, %originalBB117alteredBB
  %334 = load i8*, i8** %22, align 8, !dbg !2241
  call void @free(i8* %334) #10, !dbg !2242
  %335 = load i32, i32* @x.35
  %336 = load i32, i32* @y.36
  %337 = sub i32 %335, 1
  %338 = mul i32 %335, %337
  %339 = urem i32 %338, 2
  %340 = icmp eq i32 %339, 0
  %341 = icmp slt i32 %336, 10
  %342 = or i1 %340, %341
  br i1 %342, label %originalBBpart2119, label %originalBB117alteredBB

originalBBpart2119:                               ; preds = %originalBB117
  br label %343, !dbg !2242

343:                                              ; preds = %originalBBpart2119, %originalBBpart2115
  %344 = load i32, i32* @x.35
  %345 = load i32, i32* @y.36
  %346 = sub i32 %344, 1
  %347 = mul i32 %344, %346
  %348 = urem i32 %347, 2
  %349 = icmp eq i32 %348, 0
  %350 = icmp slt i32 %345, 10
  %351 = or i1 %349, %350
  br i1 %351, label %originalBB121, label %originalBB121alteredBB

originalBB121:                                    ; preds = %343, %originalBB121alteredBB
  %352 = load i64, i64* %21, align 8, !dbg !2243
  %353 = call noalias i8* @xcharalloc(i64 %352), !dbg !2244
  store i8* %353, i8** %22, align 8, !dbg !2245
  %354 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !2246
  %355 = load i32, i32* %13, align 4, !dbg !2247
  %356 = sext i32 %355 to i64, !dbg !2246
  %357 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %354, i64 %356, !dbg !2246
  %358 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %357, i32 0, i32 1, !dbg !2248
  store i8* %353, i8** %358, align 8, !dbg !2249
  %359 = load i8*, i8** %22, align 8, !dbg !2250
  %360 = load i64, i64* %21, align 8, !dbg !2251
  %361 = load i8*, i8** %14, align 8, !dbg !2252
  %362 = load i64, i64* %15, align 8, !dbg !2253
  %363 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !2254
  %364 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %363, i32 0, i32 0, !dbg !2255
  %365 = load i32, i32* %364, align 8, !dbg !2255
  %366 = load i32, i32* %23, align 4, !dbg !2256
  %367 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !2257
  %368 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %367, i32 0, i32 2, !dbg !2258
  %369 = getelementptr inbounds [8 x i32], [8 x i32]* %368, i64 0, i64 0, !dbg !2257
  %370 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !2259
  %371 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %370, i32 0, i32 3, !dbg !2260
  %372 = load i8*, i8** %371, align 8, !dbg !2260
  %373 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !2261
  %374 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %373, i32 0, i32 4, !dbg !2262
  %375 = load i8*, i8** %374, align 8, !dbg !2262
  %376 = call i64 @quotearg_buffer_restyled(i8* %359, i64 %360, i8* %361, i64 %362, i32 %365, i32 %366, i32* %369, i8* %372, i8* %375), !dbg !2263
  %377 = load i32, i32* @x.35
  %378 = load i32, i32* @y.36
  %379 = sub i32 %377, 1
  %380 = mul i32 %377, %379
  %381 = urem i32 %380, 2
  %382 = icmp eq i32 %381, 0
  %383 = icmp slt i32 %378, 10
  %384 = or i1 %382, %383
  br i1 %384, label %originalBBpart2123, label %originalBB121alteredBB

originalBBpart2123:                               ; preds = %originalBB121
  br label %385, !dbg !2264

385:                                              ; preds = %originalBBpart2123, %originalBBpart2101
  %386 = load i32, i32* @x.35
  %387 = load i32, i32* @y.36
  %388 = sub i32 %386, 1
  %389 = mul i32 %386, %388
  %390 = urem i32 %389, 2
  %391 = icmp eq i32 %390, 0
  %392 = icmp slt i32 %387, 10
  %393 = or i1 %391, %392
  br i1 %393, label %originalBB125, label %originalBB125alteredBB

originalBB125:                                    ; preds = %385, %originalBB125alteredBB
  %394 = load i32, i32* %17, align 4, !dbg !2265
  %395 = call i32* @__errno_location() #15, !dbg !2266
  store i32 %394, i32* %395, align 4, !dbg !2267
  %396 = load i8*, i8** %22, align 8, !dbg !2268
  %397 = load i32, i32* @x.35
  %398 = load i32, i32* @y.36
  %399 = sub i32 %397, 1
  %400 = mul i32 %397, %399
  %401 = urem i32 %400, 2
  %402 = icmp eq i32 %401, 0
  %403 = icmp slt i32 %398, 10
  %404 = or i1 %402, %403
  br i1 %404, label %originalBBpart2127, label %originalBB125alteredBB

originalBBpart2127:                               ; preds = %originalBB125
  ret i8* %396, !dbg !2269

originalBBalteredBB:                              ; preds = %originalBB, %4
  %405 = alloca i32, align 4
  %406 = alloca i8*, align 8
  %407 = alloca i64, align 8
  %408 = alloca %struct.quoting_options*, align 8
  %409 = alloca i32, align 4
  %410 = alloca %struct.slotvec*, align 8
  %411 = alloca i8, align 1
  %412 = alloca i32, align 4
  %413 = alloca i64, align 8
  %414 = alloca i8*, align 8
  %415 = alloca i32, align 4
  %416 = alloca i64, align 8
  store i32 %0, i32* %405, align 4
  call void @llvm.dbg.declare(metadata i32* %405, metadata !2270, metadata !DIExpression()), !dbg !2127
  store i8* %1, i8** %406, align 8
  call void @llvm.dbg.declare(metadata i8** %406, metadata !2306, metadata !DIExpression()), !dbg !2129
  store i64 %2, i64* %407, align 8
  call void @llvm.dbg.declare(metadata i64* %407, metadata !2307, metadata !DIExpression()), !dbg !2131
  store %struct.quoting_options* %3, %struct.quoting_options** %408, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %408, metadata !2308, metadata !DIExpression()), !dbg !2133
  call void @llvm.dbg.declare(metadata i32* %409, metadata !2309, metadata !DIExpression()), !dbg !2135
  %417 = call i32* @__errno_location() #15, !dbg !2136
  %418 = load i32, i32* %417, align 4, !dbg !2136
  store i32 %418, i32* %409, align 4, !dbg !2135
  call void @llvm.dbg.declare(metadata %struct.slotvec** %410, metadata !2310, metadata !DIExpression()), !dbg !2138
  %419 = load %struct.slotvec*, %struct.slotvec** @slotvec, align 8, !dbg !2139
  store %struct.slotvec* %419, %struct.slotvec** %410, align 8, !dbg !2138
  %420 = load i32, i32* %405, align 4, !dbg !2140
  %421 = icmp slt i32 %420, 0, !dbg !2142
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %38
  call void @abort() #12, !dbg !2144
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %55
  %422 = load i32, i32* @nslots, align 4, !dbg !2145
  %423 = load i32, i32* %13, align 4, !dbg !2147
  %424 = icmp sle i32 %422, %423, !dbg !2148
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %75
  %425 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !2153
  %426 = icmp eq %struct.slotvec* %425, @slotvec0, !dbg !2154
  %427 = zext i1 %426 to i8, !dbg !2152
  store i8 %427, i8* %19, align 1, !dbg !2152
  call void @llvm.dbg.declare(metadata !4, metadata !2311, metadata !DIExpression()), !dbg !2156
  store i32 2147483646, i32* %20, align 4, !dbg !2156
  %428 = load i32, i32* %20, align 4, !dbg !2157
  %429 = load i32, i32* %13, align 4, !dbg !2159
  %430 = icmp slt i32 %428, %429, !dbg !2160
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %98
  call void @xalloc_die() #14, !dbg !2162
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %115
  %431 = load i8, i8* %19, align 1, !dbg !2163
  %432 = trunc i8 %431 to i1, !dbg !2163
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %134
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %151
  %433 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !2164
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %169
  %434 = bitcast %struct.slotvec* %170 to i8*, !dbg !2163
  %435 = load i32, i32* %13, align 4, !dbg !2165
  %_ = shl i32 %435, 1
  %_31 = sub i32 0, %435
  %gen = add i32 %_31, 1
  %_32 = sub i32 0, %435
  %gen33 = add i32 %_32, 1
  %_34 = shl i32 %435, 1
  %_35 = sub i32 %435, 1
  %gen36 = mul i32 %_35, 1
  %_37 = sub i32 %435, 1
  %gen38 = mul i32 %_37, 1
  %_39 = sub i32 0, %435
  %gen40 = add i32 %_39, 1
  %_41 = shl i32 %435, 1
  %_42 = sub i32 0, %435
  %gen43 = add i32 %_42, 1
  %_44 = shl i32 %435, 1
  %436 = add nsw i32 %435, 1, !dbg !2166
  %437 = sext i32 %436 to i64, !dbg !2167
  %_45 = shl i64 %437, 16
  %_46 = sub i64 0, %437
  %gen47 = add i64 %_46, 16
  %_48 = sub i64 0, %437
  %gen49 = add i64 %_48, 16
  %_50 = shl i64 %437, 16
  %_51 = sub i64 0, %437
  %gen52 = add i64 %_51, 16
  %438 = mul i64 %437, 16, !dbg !2168
  %439 = call i8* @xrealloc(i8* %434, i64 %438), !dbg !2169
  %440 = bitcast i8* %439 to %struct.slotvec*, !dbg !2169
  store %struct.slotvec* %440, %struct.slotvec** %18, align 8, !dbg !2170
  store %struct.slotvec* %440, %struct.slotvec** @slotvec, align 8, !dbg !2171
  %441 = load i8, i8* %19, align 1, !dbg !2172
  %442 = trunc i8 %441 to i1, !dbg !2172
  br label %originalBB30

originalBB56alteredBB:                            ; preds = %originalBB56, %196
  %443 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !2175
  %444 = bitcast %struct.slotvec* %443 to i8*, !dbg !2176
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %444, i8* align 8 bitcast (%struct.slotvec* @slotvec0 to i8*), i64 16, i1 false), !dbg !2176
  br label %originalBB56

originalBB60alteredBB:                            ; preds = %originalBB60, %215
  %445 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !2178
  %446 = load i32, i32* @nslots, align 4, !dbg !2179
  %447 = sext i32 %446 to i64, !dbg !2180
  %448 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %445, i64 %447, !dbg !2180
  %449 = bitcast %struct.slotvec* %448 to i8*, !dbg !2181
  %450 = load i32, i32* %13, align 4, !dbg !2182
  %_61 = sub i32 %450, 1
  %gen62 = mul i32 %_61, 1
  %_63 = shl i32 %450, 1
  %_64 = sub i32 0, %450
  %gen65 = add i32 %_64, 1
  %_66 = sub i32 0, %450
  %gen67 = add i32 %_66, 1
  %_68 = sub i32 %450, 1
  %gen69 = mul i32 %_68, 1
  %_70 = sub i32 0, %450
  %gen71 = add i32 %_70, 1
  %_72 = sub i32 %450, 1
  %gen73 = mul i32 %_72, 1
  %_74 = sub i32 %450, 1
  %gen75 = mul i32 %_74, 1
  %451 = add nsw i32 %450, 1, !dbg !2183
  %452 = load i32, i32* @nslots, align 4, !dbg !2184
  %_76 = sub i32 %451, %452
  %gen77 = mul i32 %_76, %452
  %453 = sub nsw i32 %451, %452, !dbg !2185
  %454 = sext i32 %453 to i64, !dbg !2186
  %_78 = sub i64 0, %454
  %gen79 = add i64 %_78, 16
  %_80 = shl i64 %454, 16
  %_81 = sub i64 %454, 16
  %gen82 = mul i64 %_81, 16
  %455 = mul i64 %454, 16, !dbg !2187
  call void @llvm.memset.p0i8.i64(i8* align 8 %449, i8 0, i64 %455, i1 false), !dbg !2181
  %456 = load i32, i32* %13, align 4, !dbg !2188
  %_83 = sub i32 %456, 1
  %gen84 = mul i32 %_83, 1
  %_85 = sub i32 0, %456
  %gen86 = add i32 %_85, 1
  %_87 = shl i32 %456, 1
  %457 = add nsw i32 %456, 1, !dbg !2189
  store i32 %457, i32* @nslots, align 4, !dbg !2190
  br label %originalBB60

originalBB91alteredBB:                            ; preds = %originalBB91, %245
  %458 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !2195
  %459 = load i32, i32* %13, align 4, !dbg !2196
  %460 = sext i32 %459 to i64, !dbg !2195
  %461 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %458, i64 %460, !dbg !2195
  %462 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %461, i32 0, i32 0, !dbg !2197
  %463 = load i64, i64* %462, align 8, !dbg !2197
  store i64 %463, i64* %21, align 8, !dbg !2194
  call void @llvm.dbg.declare(metadata !4, metadata !2349, metadata !DIExpression()), !dbg !2199
  %464 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !2200
  %465 = load i32, i32* %13, align 4, !dbg !2201
  %466 = sext i32 %465 to i64, !dbg !2200
  %467 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %464, i64 %466, !dbg !2200
  %468 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %467, i32 0, i32 1, !dbg !2202
  %469 = load i8*, i8** %468, align 8, !dbg !2202
  store i8* %469, i8** %22, align 8, !dbg !2199
  call void @llvm.dbg.declare(metadata !4, metadata !2386, metadata !DIExpression()), !dbg !2204
  %470 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !2205
  %471 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %470, i32 0, i32 1, !dbg !2206
  %472 = load i32, i32* %471, align 4, !dbg !2206
  %_92 = sub i32 0, %472
  %gen93 = add i32 %_92, 1
  %_94 = shl i32 %472, 1
  %_95 = sub i32 %472, 1
  %gen96 = mul i32 %_95, 1
  %_97 = sub i32 %472, 1
  %gen98 = mul i32 %_97, 1
  %_99 = shl i32 %472, 1
  %473 = or i32 %472, 1, !dbg !2207
  store i32 %473, i32* %23, align 4, !dbg !2204
  call void @llvm.dbg.declare(metadata !4, metadata !2387, metadata !DIExpression()), !dbg !2209
  %474 = load i8*, i8** %22, align 8, !dbg !2210
  %475 = load i64, i64* %21, align 8, !dbg !2211
  %476 = load i8*, i8** %14, align 8, !dbg !2212
  %477 = load i64, i64* %15, align 8, !dbg !2213
  %478 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !2214
  %479 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %478, i32 0, i32 0, !dbg !2215
  %480 = load i32, i32* %479, align 8, !dbg !2215
  %481 = load i32, i32* %23, align 4, !dbg !2216
  %482 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !2217
  %483 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %482, i32 0, i32 2, !dbg !2218
  %484 = getelementptr inbounds [8 x i32], [8 x i32]* %483, i64 0, i64 0, !dbg !2217
  %485 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !2219
  %486 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %485, i32 0, i32 3, !dbg !2220
  %487 = load i8*, i8** %486, align 8, !dbg !2220
  %488 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !2221
  %489 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %488, i32 0, i32 4, !dbg !2222
  %490 = load i8*, i8** %489, align 8, !dbg !2222
  %491 = call i64 @quotearg_buffer_restyled(i8* %474, i64 %475, i8* %476, i64 %477, i32 %480, i32 %481, i32* %484, i8* %487, i8* %490), !dbg !2223
  store i64 %491, i64* %24, align 8, !dbg !2209
  %492 = load i64, i64* %21, align 8, !dbg !2224
  %493 = load i64, i64* %24, align 8, !dbg !2226
  %494 = icmp ule i64 %492, %493, !dbg !2227
  br label %originalBB91

originalBB103alteredBB:                           ; preds = %originalBB103, %299
  %495 = load i64, i64* %24, align 8, !dbg !2229
  %_104 = sub i64 %495, 1
  %gen105 = mul i64 %_104, 1
  %_106 = sub i64 0, %495
  %gen107 = add i64 %_106, 1
  %_108 = sub i64 0, %495
  %gen109 = add i64 %_108, 1
  %_110 = sub i64 0, %495
  %gen111 = add i64 %_110, 1
  %_112 = sub i64 0, %495
  %gen113 = add i64 %_112, 1
  %496 = add i64 %495, 1, !dbg !2231
  store i64 %496, i64* %21, align 8, !dbg !2232
  %497 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !2233
  %498 = load i32, i32* %13, align 4, !dbg !2234
  %499 = sext i32 %498 to i64, !dbg !2233
  %500 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %497, i64 %499, !dbg !2233
  %501 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %500, i32 0, i32 0, !dbg !2235
  store i64 %496, i64* %501, align 8, !dbg !2236
  %502 = load i8*, i8** %22, align 8, !dbg !2237
  %503 = icmp ne i8* %502, getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i64 0, i64 0), !dbg !2239
  br label %originalBB103

originalBB117alteredBB:                           ; preds = %originalBB117, %325
  %504 = load i8*, i8** %22, align 8, !dbg !2241
  call void @free(i8* %504) #10, !dbg !2242
  br label %originalBB117

originalBB121alteredBB:                           ; preds = %originalBB121, %343
  %505 = load i64, i64* %21, align 8, !dbg !2243
  %506 = call noalias i8* @xcharalloc(i64 %505), !dbg !2244
  store i8* %506, i8** %22, align 8, !dbg !2245
  %507 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !2246
  %508 = load i32, i32* %13, align 4, !dbg !2247
  %509 = sext i32 %508 to i64, !dbg !2246
  %510 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %507, i64 %509, !dbg !2246
  %511 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %510, i32 0, i32 1, !dbg !2248
  store i8* %506, i8** %511, align 8, !dbg !2249
  %512 = load i8*, i8** %22, align 8, !dbg !2250
  %513 = load i64, i64* %21, align 8, !dbg !2251
  %514 = load i8*, i8** %14, align 8, !dbg !2252
  %515 = load i64, i64* %15, align 8, !dbg !2253
  %516 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !2254
  %517 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %516, i32 0, i32 0, !dbg !2255
  %518 = load i32, i32* %517, align 8, !dbg !2255
  %519 = load i32, i32* %23, align 4, !dbg !2256
  %520 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !2257
  %521 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %520, i32 0, i32 2, !dbg !2258
  %522 = getelementptr inbounds [8 x i32], [8 x i32]* %521, i64 0, i64 0, !dbg !2257
  %523 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !2259
  %524 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %523, i32 0, i32 3, !dbg !2260
  %525 = load i8*, i8** %524, align 8, !dbg !2260
  %526 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !2261
  %527 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %526, i32 0, i32 4, !dbg !2262
  %528 = load i8*, i8** %527, align 8, !dbg !2262
  %529 = call i64 @quotearg_buffer_restyled(i8* %512, i64 %513, i8* %514, i64 %515, i32 %518, i32 %519, i32* %522, i8* %525, i8* %528), !dbg !2263
  br label %originalBB121

originalBB125alteredBB:                           ; preds = %originalBB125, %385
  %530 = load i32, i32* %17, align 4, !dbg !2265
  %531 = call i32* @__errno_location() #15, !dbg !2266
  store i32 %530, i32* %531, align 4, !dbg !2267
  %532 = load i8*, i8** %22, align 8, !dbg !2268
  br label %originalBB125
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @quotearg_buffer_restyled(i8*, i64, i8*, i64, i32, i32, i32*, i8*, i8*) #4 !dbg !2388 {
  %10 = load i32, i32* @x.37
  %11 = load i32, i32* @y.38
  %12 = sub i32 %10, 1
  %13 = mul i32 %10, %12
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  %16 = icmp slt i32 %11, 10
  %17 = or i1 %15, %16
  br i1 %17, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %9, %originalBBalteredBB
  %18 = alloca i64, align 8
  %19 = alloca i8*, align 8
  %20 = alloca i64, align 8
  %21 = alloca i8*, align 8
  %22 = alloca i64, align 8
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32*, align 8
  %26 = alloca i8*, align 8
  %27 = alloca i8*, align 8
  %28 = alloca i64, align 8
  %29 = alloca i64, align 8
  %30 = alloca i64, align 8
  %31 = alloca i8*, align 8
  %32 = alloca i64, align 8
  %33 = alloca i8, align 1
  %34 = alloca i8, align 1
  %35 = alloca i8, align 1
  %36 = alloca i8, align 1
  %37 = alloca i8, align 1
  %38 = alloca i8, align 1
  %39 = alloca i8, align 1
  %40 = alloca i8, align 1
  %41 = alloca i8, align 1
  %42 = alloca i8, align 1
  %43 = alloca i8, align 1
  %44 = alloca i64, align 8
  %45 = alloca i8, align 1
  %46 = alloca %struct.__mbstate_t, align 4
  %47 = alloca i32, align 4
  %48 = alloca i64, align 8
  %49 = alloca i64, align 8
  %50 = alloca i64, align 8
  store i8* %0, i8** %19, align 8
  call void @llvm.dbg.declare(metadata i8** %19, metadata !2393, metadata !DIExpression()), !dbg !2394
  store i64 %1, i64* %20, align 8
  call void @llvm.dbg.declare(metadata i64* %20, metadata !2395, metadata !DIExpression()), !dbg !2396
  store i8* %2, i8** %21, align 8
  call void @llvm.dbg.declare(metadata i8** %21, metadata !2397, metadata !DIExpression()), !dbg !2398
  store i64 %3, i64* %22, align 8
  call void @llvm.dbg.declare(metadata i64* %22, metadata !2399, metadata !DIExpression()), !dbg !2400
  store i32 %4, i32* %23, align 4
  call void @llvm.dbg.declare(metadata i32* %23, metadata !2401, metadata !DIExpression()), !dbg !2402
  store i32 %5, i32* %24, align 4
  call void @llvm.dbg.declare(metadata i32* %24, metadata !2403, metadata !DIExpression()), !dbg !2404
  store i32* %6, i32** %25, align 8
  call void @llvm.dbg.declare(metadata i32** %25, metadata !2405, metadata !DIExpression()), !dbg !2406
  store i8* %7, i8** %26, align 8
  call void @llvm.dbg.declare(metadata i8** %26, metadata !2407, metadata !DIExpression()), !dbg !2408
  store i8* %8, i8** %27, align 8
  call void @llvm.dbg.declare(metadata i8** %27, metadata !2409, metadata !DIExpression()), !dbg !2410
  call void @llvm.dbg.declare(metadata i64* %28, metadata !2411, metadata !DIExpression()), !dbg !2412
  call void @llvm.dbg.declare(metadata i64* %29, metadata !2413, metadata !DIExpression()), !dbg !2414
  store i64 0, i64* %29, align 8, !dbg !2414
  call void @llvm.dbg.declare(metadata i64* %30, metadata !2415, metadata !DIExpression()), !dbg !2416
  store i64 0, i64* %30, align 8, !dbg !2416
  call void @llvm.dbg.declare(metadata i8** %31, metadata !2417, metadata !DIExpression()), !dbg !2418
  store i8* null, i8** %31, align 8, !dbg !2418
  call void @llvm.dbg.declare(metadata i64* %32, metadata !2419, metadata !DIExpression()), !dbg !2420
  store i64 0, i64* %32, align 8, !dbg !2420
  call void @llvm.dbg.declare(metadata i8* %33, metadata !2421, metadata !DIExpression()), !dbg !2422
  store i8 0, i8* %33, align 1, !dbg !2422
  call void @llvm.dbg.declare(metadata i8* %34, metadata !2423, metadata !DIExpression()), !dbg !2424
  %51 = call i64 @__ctype_get_mb_cur_max() #10, !dbg !2425
  %52 = icmp eq i64 %51, 1, !dbg !2426
  %53 = zext i1 %52 to i8, !dbg !2424
  store i8 %53, i8* %34, align 1, !dbg !2424
  call void @llvm.dbg.declare(metadata i8* %35, metadata !2427, metadata !DIExpression()), !dbg !2428
  %54 = load i32, i32* %24, align 4, !dbg !2429
  %55 = and i32 %54, 2, !dbg !2430
  %56 = icmp ne i32 %55, 0, !dbg !2431
  %57 = zext i1 %56 to i8, !dbg !2428
  store i8 %57, i8* %35, align 1, !dbg !2428
  call void @llvm.dbg.declare(metadata i8* %36, metadata !2432, metadata !DIExpression()), !dbg !2433
  store i8 0, i8* %36, align 1, !dbg !2433
  call void @llvm.dbg.declare(metadata i8* %37, metadata !2434, metadata !DIExpression()), !dbg !2435
  store i8 0, i8* %37, align 1, !dbg !2435
  call void @llvm.dbg.declare(metadata i8* %38, metadata !2436, metadata !DIExpression()), !dbg !2437
  store i8 1, i8* %38, align 1, !dbg !2437
  %58 = load i32, i32* @x.37
  %59 = load i32, i32* @y.38
  %60 = sub i32 %58, 1
  %61 = mul i32 %58, %60
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %59, 10
  %65 = or i1 %63, %64
  br i1 %65, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %66, !dbg !2438

66:                                               ; preds = %originalBBpart21894, %originalBBpart2
  call void @llvm.dbg.label(metadata !2439), !dbg !2440
  %67 = load i32, i32* @x.37
  %68 = load i32, i32* @y.38
  %69 = sub i32 %67, 1
  %70 = mul i32 %67, %69
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %68, 10
  %74 = or i1 %72, %73
  br i1 %74, label %originalBB4, label %originalBB4alteredBB

originalBB4:                                      ; preds = %66, %originalBB4alteredBB
  %75 = load i32, i32* %23, align 4, !dbg !2441
  %76 = load i32, i32* @x.37
  %77 = load i32, i32* @y.38
  %78 = sub i32 %76, 1
  %79 = mul i32 %76, %78
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %77, 10
  %83 = or i1 %81, %82
  br i1 %83, label %originalBBpart26, label %originalBB4alteredBB

originalBBpart26:                                 ; preds = %originalBB4
  switch i32 %75, label %728 [
    i32 6, label %84
    i32 5, label %101
    i32 7, label %230
    i32 8, label %247
    i32 9, label %247
    i32 10, label %247
    i32 3, label %495
    i32 1, label %512
    i32 4, label %529
    i32 2, label %582
    i32 0, label %711
  ], !dbg !2442

84:                                               ; preds = %originalBBpart26
  %85 = load i32, i32* @x.37
  %86 = load i32, i32* @y.38
  %87 = sub i32 %85, 1
  %88 = mul i32 %85, %87
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %86, 10
  %92 = or i1 %90, %91
  br i1 %92, label %originalBB8, label %originalBB8alteredBB

originalBB8:                                      ; preds = %84, %originalBB8alteredBB
  store i32 5, i32* %23, align 4, !dbg !2443
  store i8 1, i8* %35, align 1, !dbg !2445
  %93 = load i32, i32* @x.37
  %94 = load i32, i32* @y.38
  %95 = sub i32 %93, 1
  %96 = mul i32 %93, %95
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %94, 10
  %100 = or i1 %98, %99
  br i1 %100, label %originalBBpart210, label %originalBB8alteredBB

originalBBpart210:                                ; preds = %originalBB8
  br label %101, !dbg !2446

101:                                              ; preds = %originalBBpart210, %originalBBpart26
  %102 = load i32, i32* @x.37
  %103 = load i32, i32* @y.38
  %104 = sub i32 %102, 1
  %105 = mul i32 %102, %104
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %103, 10
  %109 = or i1 %107, %108
  br i1 %109, label %originalBB12, label %originalBB12alteredBB

originalBB12:                                     ; preds = %101, %originalBB12alteredBB
  %110 = load i8, i8* %35, align 1, !dbg !2447
  %111 = trunc i8 %110 to i1, !dbg !2447
  %112 = load i32, i32* @x.37
  %113 = load i32, i32* @y.38
  %114 = sub i32 %112, 1
  %115 = mul i32 %112, %114
  %116 = urem i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = icmp slt i32 %113, 10
  %119 = or i1 %117, %118
  br i1 %119, label %originalBBpart214, label %originalBB12alteredBB

originalBBpart214:                                ; preds = %originalBB12
  br i1 %111, label %213, label %120, !dbg !2449

120:                                              ; preds = %originalBBpart214
  %121 = load i32, i32* @x.37
  %122 = load i32, i32* @y.38
  %123 = sub i32 %121, 1
  %124 = mul i32 %121, %123
  %125 = urem i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %122, 10
  %128 = or i1 %126, %127
  br i1 %128, label %originalBB16, label %originalBB16alteredBB

originalBB16:                                     ; preds = %120, %originalBB16alteredBB
  %129 = load i32, i32* @x.37
  %130 = load i32, i32* @y.38
  %131 = sub i32 %129, 1
  %132 = mul i32 %129, %131
  %133 = urem i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = icmp slt i32 %130, 10
  %136 = or i1 %134, %135
  br i1 %136, label %originalBBpart218, label %originalBB16alteredBB

originalBBpart218:                                ; preds = %originalBB16
  br label %137, !dbg !2450

137:                                              ; preds = %originalBBpart218
  %138 = load i32, i32* @x.37
  %139 = load i32, i32* @y.38
  %140 = sub i32 %138, 1
  %141 = mul i32 %138, %140
  %142 = urem i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = icmp slt i32 %139, 10
  %145 = or i1 %143, %144
  br i1 %145, label %originalBB20, label %originalBB20alteredBB

originalBB20:                                     ; preds = %137, %originalBB20alteredBB
  %146 = load i64, i64* %29, align 8, !dbg !2451
  %147 = load i64, i64* %20, align 8, !dbg !2451
  %148 = icmp ult i64 %146, %147, !dbg !2451
  %149 = load i32, i32* @x.37
  %150 = load i32, i32* @y.38
  %151 = sub i32 %149, 1
  %152 = mul i32 %149, %151
  %153 = urem i32 %152, 2
  %154 = icmp eq i32 %153, 0
  %155 = icmp slt i32 %150, 10
  %156 = or i1 %154, %155
  br i1 %156, label %originalBBpart222, label %originalBB20alteredBB

originalBBpart222:                                ; preds = %originalBB20
  br i1 %148, label %157, label %177, !dbg !2454

157:                                              ; preds = %originalBBpart222
  %158 = load i32, i32* @x.37
  %159 = load i32, i32* @y.38
  %160 = sub i32 %158, 1
  %161 = mul i32 %158, %160
  %162 = urem i32 %161, 2
  %163 = icmp eq i32 %162, 0
  %164 = icmp slt i32 %159, 10
  %165 = or i1 %163, %164
  br i1 %165, label %originalBB24, label %originalBB24alteredBB

originalBB24:                                     ; preds = %157, %originalBB24alteredBB
  %166 = load i8*, i8** %19, align 8, !dbg !2451
  %167 = load i64, i64* %29, align 8, !dbg !2451
  %168 = getelementptr inbounds i8, i8* %166, i64 %167, !dbg !2451
  store i8 34, i8* %168, align 1, !dbg !2451
  %169 = load i32, i32* @x.37
  %170 = load i32, i32* @y.38
  %171 = sub i32 %169, 1
  %172 = mul i32 %169, %171
  %173 = urem i32 %172, 2
  %174 = icmp eq i32 %173, 0
  %175 = icmp slt i32 %170, 10
  %176 = or i1 %174, %175
  br i1 %176, label %originalBBpart226, label %originalBB24alteredBB

originalBBpart226:                                ; preds = %originalBB24
  br label %177, !dbg !2451

177:                                              ; preds = %originalBBpart226, %originalBBpart222
  %178 = load i32, i32* @x.37
  %179 = load i32, i32* @y.38
  %180 = sub i32 %178, 1
  %181 = mul i32 %178, %180
  %182 = urem i32 %181, 2
  %183 = icmp eq i32 %182, 0
  %184 = icmp slt i32 %179, 10
  %185 = or i1 %183, %184
  br i1 %185, label %originalBB28, label %originalBB28alteredBB

originalBB28:                                     ; preds = %177, %originalBB28alteredBB
  %186 = load i64, i64* %29, align 8, !dbg !2454
  %187 = add i64 %186, 1, !dbg !2454
  store i64 %187, i64* %29, align 8, !dbg !2454
  %188 = load i32, i32* @x.37
  %189 = load i32, i32* @y.38
  %190 = sub i32 %188, 1
  %191 = mul i32 %188, %190
  %192 = urem i32 %191, 2
  %193 = icmp eq i32 %192, 0
  %194 = icmp slt i32 %189, 10
  %195 = or i1 %193, %194
  br i1 %195, label %originalBBpart232, label %originalBB28alteredBB

originalBBpart232:                                ; preds = %originalBB28
  br label %196, !dbg !2454

196:                                              ; preds = %originalBBpart232
  %197 = load i32, i32* @x.37
  %198 = load i32, i32* @y.38
  %199 = sub i32 %197, 1
  %200 = mul i32 %197, %199
  %201 = urem i32 %200, 2
  %202 = icmp eq i32 %201, 0
  %203 = icmp slt i32 %198, 10
  %204 = or i1 %202, %203
  br i1 %204, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %196, %originalBB34alteredBB
  %205 = load i32, i32* @x.37
  %206 = load i32, i32* @y.38
  %207 = sub i32 %205, 1
  %208 = mul i32 %205, %207
  %209 = urem i32 %208, 2
  %210 = icmp eq i32 %209, 0
  %211 = icmp slt i32 %206, 10
  %212 = or i1 %210, %211
  br i1 %212, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  br label %213, !dbg !2454

213:                                              ; preds = %originalBBpart236, %originalBBpart214
  %214 = load i32, i32* @x.37
  %215 = load i32, i32* @y.38
  %216 = sub i32 %214, 1
  %217 = mul i32 %214, %216
  %218 = urem i32 %217, 2
  %219 = icmp eq i32 %218, 0
  %220 = icmp slt i32 %215, 10
  %221 = or i1 %219, %220
  br i1 %221, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %213, %originalBB38alteredBB
  store i8 1, i8* %33, align 1, !dbg !2455
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.85, i64 0, i64 0), i8** %31, align 8, !dbg !2456
  store i64 1, i64* %32, align 8, !dbg !2457
  %222 = load i32, i32* @x.37
  %223 = load i32, i32* @y.38
  %224 = sub i32 %222, 1
  %225 = mul i32 %222, %224
  %226 = urem i32 %225, 2
  %227 = icmp eq i32 %226, 0
  %228 = icmp slt i32 %223, 10
  %229 = or i1 %227, %228
  br i1 %229, label %originalBBpart240, label %originalBB38alteredBB

originalBBpart240:                                ; preds = %originalBB38
  br label %745, !dbg !2458

230:                                              ; preds = %originalBBpart26
  %231 = load i32, i32* @x.37
  %232 = load i32, i32* @y.38
  %233 = sub i32 %231, 1
  %234 = mul i32 %231, %233
  %235 = urem i32 %234, 2
  %236 = icmp eq i32 %235, 0
  %237 = icmp slt i32 %232, 10
  %238 = or i1 %236, %237
  br i1 %238, label %originalBB42, label %originalBB42alteredBB

originalBB42:                                     ; preds = %230, %originalBB42alteredBB
  store i8 1, i8* %33, align 1, !dbg !2459
  store i8 0, i8* %35, align 1, !dbg !2460
  %239 = load i32, i32* @x.37
  %240 = load i32, i32* @y.38
  %241 = sub i32 %239, 1
  %242 = mul i32 %239, %241
  %243 = urem i32 %242, 2
  %244 = icmp eq i32 %243, 0
  %245 = icmp slt i32 %240, 10
  %246 = or i1 %244, %245
  br i1 %246, label %originalBBpart244, label %originalBB42alteredBB

originalBBpart244:                                ; preds = %originalBB42
  br label %745, !dbg !2461

247:                                              ; preds = %originalBBpart26, %originalBBpart26, %originalBBpart26
  %248 = load i32, i32* @x.37
  %249 = load i32, i32* @y.38
  %250 = sub i32 %248, 1
  %251 = mul i32 %248, %250
  %252 = urem i32 %251, 2
  %253 = icmp eq i32 %252, 0
  %254 = icmp slt i32 %249, 10
  %255 = or i1 %253, %254
  br i1 %255, label %originalBB46, label %originalBB46alteredBB

originalBB46:                                     ; preds = %247, %originalBB46alteredBB
  %256 = load i32, i32* %23, align 4, !dbg !2462
  %257 = icmp ne i32 %256, 10, !dbg !2465
  %258 = load i32, i32* @x.37
  %259 = load i32, i32* @y.38
  %260 = sub i32 %258, 1
  %261 = mul i32 %258, %260
  %262 = urem i32 %261, 2
  %263 = icmp eq i32 %262, 0
  %264 = icmp slt i32 %259, 10
  %265 = or i1 %263, %264
  br i1 %265, label %originalBBpart248, label %originalBB46alteredBB

originalBBpart248:                                ; preds = %originalBB46
  br i1 %257, label %266, label %287, !dbg !2466

266:                                              ; preds = %originalBBpart248
  %267 = load i32, i32* @x.37
  %268 = load i32, i32* @y.38
  %269 = sub i32 %267, 1
  %270 = mul i32 %267, %269
  %271 = urem i32 %270, 2
  %272 = icmp eq i32 %271, 0
  %273 = icmp slt i32 %268, 10
  %274 = or i1 %272, %273
  br i1 %274, label %originalBB50, label %originalBB50alteredBB

originalBB50:                                     ; preds = %266, %originalBB50alteredBB
  %275 = load i32, i32* %23, align 4, !dbg !2467
  %276 = call i8* @gettext_quote(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11.86, i64 0, i64 0), i32 %275), !dbg !2469
  store i8* %276, i8** %26, align 8, !dbg !2470
  %277 = load i32, i32* %23, align 4, !dbg !2471
  %278 = call i8* @gettext_quote(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.87, i64 0, i64 0), i32 %277), !dbg !2472
  store i8* %278, i8** %27, align 8, !dbg !2473
  %279 = load i32, i32* @x.37
  %280 = load i32, i32* @y.38
  %281 = sub i32 %279, 1
  %282 = mul i32 %279, %281
  %283 = urem i32 %282, 2
  %284 = icmp eq i32 %283, 0
  %285 = icmp slt i32 %280, 10
  %286 = or i1 %284, %285
  br i1 %286, label %originalBBpart252, label %originalBB50alteredBB

originalBBpart252:                                ; preds = %originalBB50
  br label %287, !dbg !2474

287:                                              ; preds = %originalBBpart252, %originalBBpart248
  %288 = load i32, i32* @x.37
  %289 = load i32, i32* @y.38
  %290 = sub i32 %288, 1
  %291 = mul i32 %288, %290
  %292 = urem i32 %291, 2
  %293 = icmp eq i32 %292, 0
  %294 = icmp slt i32 %289, 10
  %295 = or i1 %293, %294
  br i1 %295, label %originalBB54, label %originalBB54alteredBB

originalBB54:                                     ; preds = %287, %originalBB54alteredBB
  %296 = load i8, i8* %35, align 1, !dbg !2475
  %297 = trunc i8 %296 to i1, !dbg !2475
  %298 = load i32, i32* @x.37
  %299 = load i32, i32* @y.38
  %300 = sub i32 %298, 1
  %301 = mul i32 %298, %300
  %302 = urem i32 %301, 2
  %303 = icmp eq i32 %302, 0
  %304 = icmp slt i32 %299, 10
  %305 = or i1 %303, %304
  br i1 %305, label %originalBBpart256, label %originalBB54alteredBB

originalBBpart256:                                ; preds = %originalBB54
  br i1 %297, label %475, label %306, !dbg !2477

306:                                              ; preds = %originalBBpart256
  %307 = load i32, i32* @x.37
  %308 = load i32, i32* @y.38
  %309 = sub i32 %307, 1
  %310 = mul i32 %307, %309
  %311 = urem i32 %310, 2
  %312 = icmp eq i32 %311, 0
  %313 = icmp slt i32 %308, 10
  %314 = or i1 %312, %313
  br i1 %314, label %originalBB58, label %originalBB58alteredBB

originalBB58:                                     ; preds = %306, %originalBB58alteredBB
  %315 = load i8*, i8** %26, align 8, !dbg !2478
  store i8* %315, i8** %31, align 8, !dbg !2480
  %316 = load i32, i32* @x.37
  %317 = load i32, i32* @y.38
  %318 = sub i32 %316, 1
  %319 = mul i32 %316, %318
  %320 = urem i32 %319, 2
  %321 = icmp eq i32 %320, 0
  %322 = icmp slt i32 %317, 10
  %323 = or i1 %321, %322
  br i1 %323, label %originalBBpart260, label %originalBB58alteredBB

originalBBpart260:                                ; preds = %originalBB58
  br label %324, !dbg !2481

324:                                              ; preds = %originalBBpart290, %originalBBpart260
  %325 = load i32, i32* @x.37
  %326 = load i32, i32* @y.38
  %327 = sub i32 %325, 1
  %328 = mul i32 %325, %327
  %329 = urem i32 %328, 2
  %330 = icmp eq i32 %329, 0
  %331 = icmp slt i32 %326, 10
  %332 = or i1 %330, %331
  br i1 %332, label %originalBB62, label %originalBB62alteredBB

originalBB62:                                     ; preds = %324, %originalBB62alteredBB
  %333 = load i8*, i8** %31, align 8, !dbg !2482
  %334 = load i8, i8* %333, align 1, !dbg !2484
  %335 = icmp ne i8 %334, 0, !dbg !2485
  %336 = load i32, i32* @x.37
  %337 = load i32, i32* @y.38
  %338 = sub i32 %336, 1
  %339 = mul i32 %336, %338
  %340 = urem i32 %339, 2
  %341 = icmp eq i32 %340, 0
  %342 = icmp slt i32 %337, 10
  %343 = or i1 %341, %342
  br i1 %343, label %originalBBpart264, label %originalBB62alteredBB

originalBBpart264:                                ; preds = %originalBB62
  br i1 %335, label %344, label %458, !dbg !2485

344:                                              ; preds = %originalBBpart264
  %345 = load i32, i32* @x.37
  %346 = load i32, i32* @y.38
  %347 = sub i32 %345, 1
  %348 = mul i32 %345, %347
  %349 = urem i32 %348, 2
  %350 = icmp eq i32 %349, 0
  %351 = icmp slt i32 %346, 10
  %352 = or i1 %350, %351
  br i1 %352, label %originalBB66, label %originalBB66alteredBB

originalBB66:                                     ; preds = %344, %originalBB66alteredBB
  %353 = load i32, i32* @x.37
  %354 = load i32, i32* @y.38
  %355 = sub i32 %353, 1
  %356 = mul i32 %353, %355
  %357 = urem i32 %356, 2
  %358 = icmp eq i32 %357, 0
  %359 = icmp slt i32 %354, 10
  %360 = or i1 %358, %359
  br i1 %360, label %originalBBpart268, label %originalBB66alteredBB

originalBBpart268:                                ; preds = %originalBB66
  br label %361, !dbg !2486

361:                                              ; preds = %originalBBpart268
  %362 = load i32, i32* @x.37
  %363 = load i32, i32* @y.38
  %364 = sub i32 %362, 1
  %365 = mul i32 %362, %364
  %366 = urem i32 %365, 2
  %367 = icmp eq i32 %366, 0
  %368 = icmp slt i32 %363, 10
  %369 = or i1 %367, %368
  br i1 %369, label %originalBB70, label %originalBB70alteredBB

originalBB70:                                     ; preds = %361, %originalBB70alteredBB
  %370 = load i64, i64* %29, align 8, !dbg !2487
  %371 = load i64, i64* %20, align 8, !dbg !2487
  %372 = icmp ult i64 %370, %371, !dbg !2487
  %373 = load i32, i32* @x.37
  %374 = load i32, i32* @y.38
  %375 = sub i32 %373, 1
  %376 = mul i32 %373, %375
  %377 = urem i32 %376, 2
  %378 = icmp eq i32 %377, 0
  %379 = icmp slt i32 %374, 10
  %380 = or i1 %378, %379
  br i1 %380, label %originalBBpart272, label %originalBB70alteredBB

originalBBpart272:                                ; preds = %originalBB70
  br i1 %372, label %381, label %403, !dbg !2490

381:                                              ; preds = %originalBBpart272
  %382 = load i32, i32* @x.37
  %383 = load i32, i32* @y.38
  %384 = sub i32 %382, 1
  %385 = mul i32 %382, %384
  %386 = urem i32 %385, 2
  %387 = icmp eq i32 %386, 0
  %388 = icmp slt i32 %383, 10
  %389 = or i1 %387, %388
  br i1 %389, label %originalBB74, label %originalBB74alteredBB

originalBB74:                                     ; preds = %381, %originalBB74alteredBB
  %390 = load i8*, i8** %31, align 8, !dbg !2487
  %391 = load i8, i8* %390, align 1, !dbg !2487
  %392 = load i8*, i8** %19, align 8, !dbg !2487
  %393 = load i64, i64* %29, align 8, !dbg !2487
  %394 = getelementptr inbounds i8, i8* %392, i64 %393, !dbg !2487
  store i8 %391, i8* %394, align 1, !dbg !2487
  %395 = load i32, i32* @x.37
  %396 = load i32, i32* @y.38
  %397 = sub i32 %395, 1
  %398 = mul i32 %395, %397
  %399 = urem i32 %398, 2
  %400 = icmp eq i32 %399, 0
  %401 = icmp slt i32 %396, 10
  %402 = or i1 %400, %401
  br i1 %402, label %originalBBpart276, label %originalBB74alteredBB

originalBBpart276:                                ; preds = %originalBB74
  br label %403, !dbg !2487

403:                                              ; preds = %originalBBpart276, %originalBBpart272
  %404 = load i32, i32* @x.37
  %405 = load i32, i32* @y.38
  %406 = sub i32 %404, 1
  %407 = mul i32 %404, %406
  %408 = urem i32 %407, 2
  %409 = icmp eq i32 %408, 0
  %410 = icmp slt i32 %405, 10
  %411 = or i1 %409, %410
  br i1 %411, label %originalBB78, label %originalBB78alteredBB

originalBB78:                                     ; preds = %403, %originalBB78alteredBB
  %412 = load i64, i64* %29, align 8, !dbg !2490
  %413 = add i64 %412, 1, !dbg !2490
  store i64 %413, i64* %29, align 8, !dbg !2490
  %414 = load i32, i32* @x.37
  %415 = load i32, i32* @y.38
  %416 = sub i32 %414, 1
  %417 = mul i32 %414, %416
  %418 = urem i32 %417, 2
  %419 = icmp eq i32 %418, 0
  %420 = icmp slt i32 %415, 10
  %421 = or i1 %419, %420
  br i1 %421, label %originalBBpart282, label %originalBB78alteredBB

originalBBpart282:                                ; preds = %originalBB78
  br label %422, !dbg !2490

422:                                              ; preds = %originalBBpart282
  %423 = load i32, i32* @x.37
  %424 = load i32, i32* @y.38
  %425 = sub i32 %423, 1
  %426 = mul i32 %423, %425
  %427 = urem i32 %426, 2
  %428 = icmp eq i32 %427, 0
  %429 = icmp slt i32 %424, 10
  %430 = or i1 %428, %429
  br i1 %430, label %originalBB84, label %originalBB84alteredBB

originalBB84:                                     ; preds = %422, %originalBB84alteredBB
  %431 = load i32, i32* @x.37
  %432 = load i32, i32* @y.38
  %433 = sub i32 %431, 1
  %434 = mul i32 %431, %433
  %435 = urem i32 %434, 2
  %436 = icmp eq i32 %435, 0
  %437 = icmp slt i32 %432, 10
  %438 = or i1 %436, %437
  br i1 %438, label %originalBBpart286, label %originalBB84alteredBB

originalBBpart286:                                ; preds = %originalBB84
  br label %439, !dbg !2490

439:                                              ; preds = %originalBBpart286
  %440 = load i32, i32* @x.37
  %441 = load i32, i32* @y.38
  %442 = sub i32 %440, 1
  %443 = mul i32 %440, %442
  %444 = urem i32 %443, 2
  %445 = icmp eq i32 %444, 0
  %446 = icmp slt i32 %441, 10
  %447 = or i1 %445, %446
  br i1 %447, label %originalBB88, label %originalBB88alteredBB

originalBB88:                                     ; preds = %439, %originalBB88alteredBB
  %448 = load i8*, i8** %31, align 8, !dbg !2491
  %449 = getelementptr inbounds i8, i8* %448, i32 1, !dbg !2491
  store i8* %449, i8** %31, align 8, !dbg !2491
  %450 = load i32, i32* @x.37
  %451 = load i32, i32* @y.38
  %452 = sub i32 %450, 1
  %453 = mul i32 %450, %452
  %454 = urem i32 %453, 2
  %455 = icmp eq i32 %454, 0
  %456 = icmp slt i32 %451, 10
  %457 = or i1 %455, %456
  br i1 %457, label %originalBBpart290, label %originalBB88alteredBB

originalBBpart290:                                ; preds = %originalBB88
  br label %324, !dbg !2492, !llvm.loop !2493

458:                                              ; preds = %originalBBpart264
  %459 = load i32, i32* @x.37
  %460 = load i32, i32* @y.38
  %461 = sub i32 %459, 1
  %462 = mul i32 %459, %461
  %463 = urem i32 %462, 2
  %464 = icmp eq i32 %463, 0
  %465 = icmp slt i32 %460, 10
  %466 = or i1 %464, %465
  br i1 %466, label %originalBB92, label %originalBB92alteredBB

originalBB92:                                     ; preds = %458, %originalBB92alteredBB
  %467 = load i32, i32* @x.37
  %468 = load i32, i32* @y.38
  %469 = sub i32 %467, 1
  %470 = mul i32 %467, %469
  %471 = urem i32 %470, 2
  %472 = icmp eq i32 %471, 0
  %473 = icmp slt i32 %468, 10
  %474 = or i1 %472, %473
  br i1 %474, label %originalBBpart294, label %originalBB92alteredBB

originalBBpart294:                                ; preds = %originalBB92
  br label %475, !dbg !2494

475:                                              ; preds = %originalBBpart294, %originalBBpart256
  %476 = load i32, i32* @x.37
  %477 = load i32, i32* @y.38
  %478 = sub i32 %476, 1
  %479 = mul i32 %476, %478
  %480 = urem i32 %479, 2
  %481 = icmp eq i32 %480, 0
  %482 = icmp slt i32 %477, 10
  %483 = or i1 %481, %482
  br i1 %483, label %originalBB96, label %originalBB96alteredBB

originalBB96:                                     ; preds = %475, %originalBB96alteredBB
  store i8 1, i8* %33, align 1, !dbg !2495
  %484 = load i8*, i8** %27, align 8, !dbg !2496
  store i8* %484, i8** %31, align 8, !dbg !2497
  %485 = load i8*, i8** %31, align 8, !dbg !2498
  %486 = call i64 @strlen(i8* %485) #13, !dbg !2499
  store i64 %486, i64* %32, align 8, !dbg !2500
  %487 = load i32, i32* @x.37
  %488 = load i32, i32* @y.38
  %489 = sub i32 %487, 1
  %490 = mul i32 %487, %489
  %491 = urem i32 %490, 2
  %492 = icmp eq i32 %491, 0
  %493 = icmp slt i32 %488, 10
  %494 = or i1 %492, %493
  br i1 %494, label %originalBBpart298, label %originalBB96alteredBB

originalBBpart298:                                ; preds = %originalBB96
  br label %745, !dbg !2501

495:                                              ; preds = %originalBBpart26
  %496 = load i32, i32* @x.37
  %497 = load i32, i32* @y.38
  %498 = sub i32 %496, 1
  %499 = mul i32 %496, %498
  %500 = urem i32 %499, 2
  %501 = icmp eq i32 %500, 0
  %502 = icmp slt i32 %497, 10
  %503 = or i1 %501, %502
  br i1 %503, label %originalBB100, label %originalBB100alteredBB

originalBB100:                                    ; preds = %495, %originalBB100alteredBB
  store i8 1, i8* %33, align 1, !dbg !2502
  %504 = load i32, i32* @x.37
  %505 = load i32, i32* @y.38
  %506 = sub i32 %504, 1
  %507 = mul i32 %504, %506
  %508 = urem i32 %507, 2
  %509 = icmp eq i32 %508, 0
  %510 = icmp slt i32 %505, 10
  %511 = or i1 %509, %510
  br i1 %511, label %originalBBpart2102, label %originalBB100alteredBB

originalBBpart2102:                               ; preds = %originalBB100
  br label %512, !dbg !2503

512:                                              ; preds = %originalBBpart2102, %originalBBpart26
  %513 = load i32, i32* @x.37
  %514 = load i32, i32* @y.38
  %515 = sub i32 %513, 1
  %516 = mul i32 %513, %515
  %517 = urem i32 %516, 2
  %518 = icmp eq i32 %517, 0
  %519 = icmp slt i32 %514, 10
  %520 = or i1 %518, %519
  br i1 %520, label %originalBB104, label %originalBB104alteredBB

originalBB104:                                    ; preds = %512, %originalBB104alteredBB
  store i8 1, i8* %35, align 1, !dbg !2504
  %521 = load i32, i32* @x.37
  %522 = load i32, i32* @y.38
  %523 = sub i32 %521, 1
  %524 = mul i32 %521, %523
  %525 = urem i32 %524, 2
  %526 = icmp eq i32 %525, 0
  %527 = icmp slt i32 %522, 10
  %528 = or i1 %526, %527
  br i1 %528, label %originalBBpart2106, label %originalBB104alteredBB

originalBBpart2106:                               ; preds = %originalBB104
  br label %529, !dbg !2505

529:                                              ; preds = %originalBBpart2106, %originalBBpart26
  %530 = load i32, i32* @x.37
  %531 = load i32, i32* @y.38
  %532 = sub i32 %530, 1
  %533 = mul i32 %530, %532
  %534 = urem i32 %533, 2
  %535 = icmp eq i32 %534, 0
  %536 = icmp slt i32 %531, 10
  %537 = or i1 %535, %536
  br i1 %537, label %originalBB108, label %originalBB108alteredBB

originalBB108:                                    ; preds = %529, %originalBB108alteredBB
  %538 = load i8, i8* %35, align 1, !dbg !2506
  %539 = trunc i8 %538 to i1, !dbg !2506
  %540 = load i32, i32* @x.37
  %541 = load i32, i32* @y.38
  %542 = sub i32 %540, 1
  %543 = mul i32 %540, %542
  %544 = urem i32 %543, 2
  %545 = icmp eq i32 %544, 0
  %546 = icmp slt i32 %541, 10
  %547 = or i1 %545, %546
  br i1 %547, label %originalBBpart2110, label %originalBB108alteredBB

originalBBpart2110:                               ; preds = %originalBB108
  br i1 %539, label %565, label %548, !dbg !2508

548:                                              ; preds = %originalBBpart2110
  %549 = load i32, i32* @x.37
  %550 = load i32, i32* @y.38
  %551 = sub i32 %549, 1
  %552 = mul i32 %549, %551
  %553 = urem i32 %552, 2
  %554 = icmp eq i32 %553, 0
  %555 = icmp slt i32 %550, 10
  %556 = or i1 %554, %555
  br i1 %556, label %originalBB112, label %originalBB112alteredBB

originalBB112:                                    ; preds = %548, %originalBB112alteredBB
  store i8 1, i8* %33, align 1, !dbg !2509
  %557 = load i32, i32* @x.37
  %558 = load i32, i32* @y.38
  %559 = sub i32 %557, 1
  %560 = mul i32 %557, %559
  %561 = urem i32 %560, 2
  %562 = icmp eq i32 %561, 0
  %563 = icmp slt i32 %558, 10
  %564 = or i1 %562, %563
  br i1 %564, label %originalBBpart2114, label %originalBB112alteredBB

originalBBpart2114:                               ; preds = %originalBB112
  br label %565, !dbg !2510

565:                                              ; preds = %originalBBpart2114, %originalBBpart2110
  %566 = load i32, i32* @x.37
  %567 = load i32, i32* @y.38
  %568 = sub i32 %566, 1
  %569 = mul i32 %566, %568
  %570 = urem i32 %569, 2
  %571 = icmp eq i32 %570, 0
  %572 = icmp slt i32 %567, 10
  %573 = or i1 %571, %572
  br i1 %573, label %originalBB116, label %originalBB116alteredBB

originalBB116:                                    ; preds = %565, %originalBB116alteredBB
  %574 = load i32, i32* @x.37
  %575 = load i32, i32* @y.38
  %576 = sub i32 %574, 1
  %577 = mul i32 %574, %576
  %578 = urem i32 %577, 2
  %579 = icmp eq i32 %578, 0
  %580 = icmp slt i32 %575, 10
  %581 = or i1 %579, %580
  br i1 %581, label %originalBBpart2118, label %originalBB116alteredBB

originalBBpart2118:                               ; preds = %originalBB116
  br label %582, !dbg !2511

582:                                              ; preds = %originalBBpart2118, %originalBBpart26
  %583 = load i32, i32* @x.37
  %584 = load i32, i32* @y.38
  %585 = sub i32 %583, 1
  %586 = mul i32 %583, %585
  %587 = urem i32 %586, 2
  %588 = icmp eq i32 %587, 0
  %589 = icmp slt i32 %584, 10
  %590 = or i1 %588, %589
  br i1 %590, label %originalBB120, label %originalBB120alteredBB

originalBB120:                                    ; preds = %582, %originalBB120alteredBB
  store i32 2, i32* %23, align 4, !dbg !2512
  %591 = load i8, i8* %35, align 1, !dbg !2513
  %592 = trunc i8 %591 to i1, !dbg !2513
  %593 = load i32, i32* @x.37
  %594 = load i32, i32* @y.38
  %595 = sub i32 %593, 1
  %596 = mul i32 %593, %595
  %597 = urem i32 %596, 2
  %598 = icmp eq i32 %597, 0
  %599 = icmp slt i32 %594, 10
  %600 = or i1 %598, %599
  br i1 %600, label %originalBBpart2122, label %originalBB120alteredBB

originalBBpart2122:                               ; preds = %originalBB120
  br i1 %592, label %694, label %601, !dbg !2515

601:                                              ; preds = %originalBBpart2122
  %602 = load i32, i32* @x.37
  %603 = load i32, i32* @y.38
  %604 = sub i32 %602, 1
  %605 = mul i32 %602, %604
  %606 = urem i32 %605, 2
  %607 = icmp eq i32 %606, 0
  %608 = icmp slt i32 %603, 10
  %609 = or i1 %607, %608
  br i1 %609, label %originalBB124, label %originalBB124alteredBB

originalBB124:                                    ; preds = %601, %originalBB124alteredBB
  %610 = load i32, i32* @x.37
  %611 = load i32, i32* @y.38
  %612 = sub i32 %610, 1
  %613 = mul i32 %610, %612
  %614 = urem i32 %613, 2
  %615 = icmp eq i32 %614, 0
  %616 = icmp slt i32 %611, 10
  %617 = or i1 %615, %616
  br i1 %617, label %originalBBpart2126, label %originalBB124alteredBB

originalBBpart2126:                               ; preds = %originalBB124
  br label %618, !dbg !2516

618:                                              ; preds = %originalBBpart2126
  %619 = load i32, i32* @x.37
  %620 = load i32, i32* @y.38
  %621 = sub i32 %619, 1
  %622 = mul i32 %619, %621
  %623 = urem i32 %622, 2
  %624 = icmp eq i32 %623, 0
  %625 = icmp slt i32 %620, 10
  %626 = or i1 %624, %625
  br i1 %626, label %originalBB128, label %originalBB128alteredBB

originalBB128:                                    ; preds = %618, %originalBB128alteredBB
  %627 = load i64, i64* %29, align 8, !dbg !2517
  %628 = load i64, i64* %20, align 8, !dbg !2517
  %629 = icmp ult i64 %627, %628, !dbg !2517
  %630 = load i32, i32* @x.37
  %631 = load i32, i32* @y.38
  %632 = sub i32 %630, 1
  %633 = mul i32 %630, %632
  %634 = urem i32 %633, 2
  %635 = icmp eq i32 %634, 0
  %636 = icmp slt i32 %631, 10
  %637 = or i1 %635, %636
  br i1 %637, label %originalBBpart2130, label %originalBB128alteredBB

originalBBpart2130:                               ; preds = %originalBB128
  br i1 %629, label %638, label %658, !dbg !2520

638:                                              ; preds = %originalBBpart2130
  %639 = load i32, i32* @x.37
  %640 = load i32, i32* @y.38
  %641 = sub i32 %639, 1
  %642 = mul i32 %639, %641
  %643 = urem i32 %642, 2
  %644 = icmp eq i32 %643, 0
  %645 = icmp slt i32 %640, 10
  %646 = or i1 %644, %645
  br i1 %646, label %originalBB132, label %originalBB132alteredBB

originalBB132:                                    ; preds = %638, %originalBB132alteredBB
  %647 = load i8*, i8** %19, align 8, !dbg !2517
  %648 = load i64, i64* %29, align 8, !dbg !2517
  %649 = getelementptr inbounds i8, i8* %647, i64 %648, !dbg !2517
  store i8 39, i8* %649, align 1, !dbg !2517
  %650 = load i32, i32* @x.37
  %651 = load i32, i32* @y.38
  %652 = sub i32 %650, 1
  %653 = mul i32 %650, %652
  %654 = urem i32 %653, 2
  %655 = icmp eq i32 %654, 0
  %656 = icmp slt i32 %651, 10
  %657 = or i1 %655, %656
  br i1 %657, label %originalBBpart2134, label %originalBB132alteredBB

originalBBpart2134:                               ; preds = %originalBB132
  br label %658, !dbg !2517

658:                                              ; preds = %originalBBpart2134, %originalBBpart2130
  %659 = load i32, i32* @x.37
  %660 = load i32, i32* @y.38
  %661 = sub i32 %659, 1
  %662 = mul i32 %659, %661
  %663 = urem i32 %662, 2
  %664 = icmp eq i32 %663, 0
  %665 = icmp slt i32 %660, 10
  %666 = or i1 %664, %665
  br i1 %666, label %originalBB136, label %originalBB136alteredBB

originalBB136:                                    ; preds = %658, %originalBB136alteredBB
  %667 = load i64, i64* %29, align 8, !dbg !2520
  %668 = add i64 %667, 1, !dbg !2520
  store i64 %668, i64* %29, align 8, !dbg !2520
  %669 = load i32, i32* @x.37
  %670 = load i32, i32* @y.38
  %671 = sub i32 %669, 1
  %672 = mul i32 %669, %671
  %673 = urem i32 %672, 2
  %674 = icmp eq i32 %673, 0
  %675 = icmp slt i32 %670, 10
  %676 = or i1 %674, %675
  br i1 %676, label %originalBBpart2139, label %originalBB136alteredBB

originalBBpart2139:                               ; preds = %originalBB136
  br label %677, !dbg !2520

677:                                              ; preds = %originalBBpart2139
  %678 = load i32, i32* @x.37
  %679 = load i32, i32* @y.38
  %680 = sub i32 %678, 1
  %681 = mul i32 %678, %680
  %682 = urem i32 %681, 2
  %683 = icmp eq i32 %682, 0
  %684 = icmp slt i32 %679, 10
  %685 = or i1 %683, %684
  br i1 %685, label %originalBB141, label %originalBB141alteredBB

originalBB141:                                    ; preds = %677, %originalBB141alteredBB
  %686 = load i32, i32* @x.37
  %687 = load i32, i32* @y.38
  %688 = sub i32 %686, 1
  %689 = mul i32 %686, %688
  %690 = urem i32 %689, 2
  %691 = icmp eq i32 %690, 0
  %692 = icmp slt i32 %687, 10
  %693 = or i1 %691, %692
  br i1 %693, label %originalBBpart2143, label %originalBB141alteredBB

originalBBpart2143:                               ; preds = %originalBB141
  br label %694, !dbg !2520

694:                                              ; preds = %originalBBpart2143, %originalBBpart2122
  %695 = load i32, i32* @x.37
  %696 = load i32, i32* @y.38
  %697 = sub i32 %695, 1
  %698 = mul i32 %695, %697
  %699 = urem i32 %698, 2
  %700 = icmp eq i32 %699, 0
  %701 = icmp slt i32 %696, 10
  %702 = or i1 %700, %701
  br i1 %702, label %originalBB145, label %originalBB145alteredBB

originalBB145:                                    ; preds = %694, %originalBB145alteredBB
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.87, i64 0, i64 0), i8** %31, align 8, !dbg !2521
  store i64 1, i64* %32, align 8, !dbg !2522
  %703 = load i32, i32* @x.37
  %704 = load i32, i32* @y.38
  %705 = sub i32 %703, 1
  %706 = mul i32 %703, %705
  %707 = urem i32 %706, 2
  %708 = icmp eq i32 %707, 0
  %709 = icmp slt i32 %704, 10
  %710 = or i1 %708, %709
  br i1 %710, label %originalBBpart2147, label %originalBB145alteredBB

originalBBpart2147:                               ; preds = %originalBB145
  br label %745, !dbg !2523

711:                                              ; preds = %originalBBpart26
  %712 = load i32, i32* @x.37
  %713 = load i32, i32* @y.38
  %714 = sub i32 %712, 1
  %715 = mul i32 %712, %714
  %716 = urem i32 %715, 2
  %717 = icmp eq i32 %716, 0
  %718 = icmp slt i32 %713, 10
  %719 = or i1 %717, %718
  br i1 %719, label %originalBB149, label %originalBB149alteredBB

originalBB149:                                    ; preds = %711, %originalBB149alteredBB
  store i8 0, i8* %35, align 1, !dbg !2524
  %720 = load i32, i32* @x.37
  %721 = load i32, i32* @y.38
  %722 = sub i32 %720, 1
  %723 = mul i32 %720, %722
  %724 = urem i32 %723, 2
  %725 = icmp eq i32 %724, 0
  %726 = icmp slt i32 %721, 10
  %727 = or i1 %725, %726
  br i1 %727, label %originalBBpart2151, label %originalBB149alteredBB

originalBBpart2151:                               ; preds = %originalBB149
  br label %745, !dbg !2525

728:                                              ; preds = %originalBBpart26
  %729 = load i32, i32* @x.37
  %730 = load i32, i32* @y.38
  %731 = sub i32 %729, 1
  %732 = mul i32 %729, %731
  %733 = urem i32 %732, 2
  %734 = icmp eq i32 %733, 0
  %735 = icmp slt i32 %730, 10
  %736 = or i1 %734, %735
  br i1 %736, label %originalBB153, label %originalBB153alteredBB

originalBB153:                                    ; preds = %728, %originalBB153alteredBB
  call void @abort() #12, !dbg !2526
  %737 = load i32, i32* @x.37
  %738 = load i32, i32* @y.38
  %739 = sub i32 %737, 1
  %740 = mul i32 %737, %739
  %741 = urem i32 %740, 2
  %742 = icmp eq i32 %741, 0
  %743 = icmp slt i32 %738, 10
  %744 = or i1 %742, %743
  br i1 %744, label %originalBBpart2155, label %originalBB153alteredBB

originalBBpart2155:                               ; preds = %originalBB153
  unreachable, !dbg !2526

745:                                              ; preds = %originalBBpart2151, %originalBBpart2147, %originalBBpart298, %originalBBpart244, %originalBBpart240
  %746 = load i32, i32* @x.37
  %747 = load i32, i32* @y.38
  %748 = sub i32 %746, 1
  %749 = mul i32 %746, %748
  %750 = urem i32 %749, 2
  %751 = icmp eq i32 %750, 0
  %752 = icmp slt i32 %747, 10
  %753 = or i1 %751, %752
  br i1 %753, label %originalBB157, label %originalBB157alteredBB

originalBB157:                                    ; preds = %745, %originalBB157alteredBB
  store i64 0, i64* %28, align 8, !dbg !2527
  %754 = load i32, i32* @x.37
  %755 = load i32, i32* @y.38
  %756 = sub i32 %754, 1
  %757 = mul i32 %754, %756
  %758 = urem i32 %757, 2
  %759 = icmp eq i32 %758, 0
  %760 = icmp slt i32 %755, 10
  %761 = or i1 %759, %760
  br i1 %761, label %originalBBpart2159, label %originalBB157alteredBB

originalBBpart2159:                               ; preds = %originalBB157
  br label %762, !dbg !2529

762:                                              ; preds = %originalBBpart21846, %originalBBpart2159
  %763 = load i32, i32* @x.37
  %764 = load i32, i32* @y.38
  %765 = sub i32 %763, 1
  %766 = mul i32 %763, %765
  %767 = urem i32 %766, 2
  %768 = icmp eq i32 %767, 0
  %769 = icmp slt i32 %764, 10
  %770 = or i1 %768, %769
  br i1 %770, label %originalBB161, label %originalBB161alteredBB

originalBB161:                                    ; preds = %762, %originalBB161alteredBB
  %771 = load i64, i64* %22, align 8, !dbg !2530
  %772 = icmp eq i64 %771, -1, !dbg !2532
  %773 = load i32, i32* @x.37
  %774 = load i32, i32* @y.38
  %775 = sub i32 %773, 1
  %776 = mul i32 %773, %775
  %777 = urem i32 %776, 2
  %778 = icmp eq i32 %777, 0
  %779 = icmp slt i32 %774, 10
  %780 = or i1 %778, %779
  br i1 %780, label %originalBBpart2163, label %originalBB161alteredBB

originalBBpart2163:                               ; preds = %originalBB161
  br i1 %772, label %781, label %805, !dbg !2530

781:                                              ; preds = %originalBBpart2163
  %782 = load i32, i32* @x.37
  %783 = load i32, i32* @y.38
  %784 = sub i32 %782, 1
  %785 = mul i32 %782, %784
  %786 = urem i32 %785, 2
  %787 = icmp eq i32 %786, 0
  %788 = icmp slt i32 %783, 10
  %789 = or i1 %787, %788
  br i1 %789, label %originalBB165, label %originalBB165alteredBB

originalBB165:                                    ; preds = %781, %originalBB165alteredBB
  %790 = load i8*, i8** %21, align 8, !dbg !2533
  %791 = load i64, i64* %28, align 8, !dbg !2534
  %792 = getelementptr inbounds i8, i8* %790, i64 %791, !dbg !2533
  %793 = load i8, i8* %792, align 1, !dbg !2533
  %794 = sext i8 %793 to i32, !dbg !2533
  %795 = icmp eq i32 %794, 0, !dbg !2535
  %796 = zext i1 %795 to i32, !dbg !2535
  %797 = load i32, i32* @x.37
  %798 = load i32, i32* @y.38
  %799 = sub i32 %797, 1
  %800 = mul i32 %797, %799
  %801 = urem i32 %800, 2
  %802 = icmp eq i32 %801, 0
  %803 = icmp slt i32 %798, 10
  %804 = or i1 %802, %803
  br i1 %804, label %originalBBpart2167, label %originalBB165alteredBB

originalBBpart2167:                               ; preds = %originalBB165
  br label %826, !dbg !2530

805:                                              ; preds = %originalBBpart2163
  %806 = load i32, i32* @x.37
  %807 = load i32, i32* @y.38
  %808 = sub i32 %806, 1
  %809 = mul i32 %806, %808
  %810 = urem i32 %809, 2
  %811 = icmp eq i32 %810, 0
  %812 = icmp slt i32 %807, 10
  %813 = or i1 %811, %812
  br i1 %813, label %originalBB169, label %originalBB169alteredBB

originalBB169:                                    ; preds = %805, %originalBB169alteredBB
  %814 = load i64, i64* %28, align 8, !dbg !2536
  %815 = load i64, i64* %22, align 8, !dbg !2537
  %816 = icmp eq i64 %814, %815, !dbg !2538
  %817 = zext i1 %816 to i32, !dbg !2538
  %818 = load i32, i32* @x.37
  %819 = load i32, i32* @y.38
  %820 = sub i32 %818, 1
  %821 = mul i32 %818, %820
  %822 = urem i32 %821, 2
  %823 = icmp eq i32 %822, 0
  %824 = icmp slt i32 %819, 10
  %825 = or i1 %823, %824
  br i1 %825, label %originalBBpart2171, label %originalBB169alteredBB

originalBBpart2171:                               ; preds = %originalBB169
  br label %826, !dbg !2530

826:                                              ; preds = %originalBBpart2171, %originalBBpart2167
  %827 = phi i32 [ %796, %originalBBpart2167 ], [ %817, %originalBBpart2171 ], !dbg !2530
  %828 = load i32, i32* @x.37
  %829 = load i32, i32* @y.38
  %830 = sub i32 %828, 1
  %831 = mul i32 %828, %830
  %832 = urem i32 %831, 2
  %833 = icmp eq i32 %832, 0
  %834 = icmp slt i32 %829, 10
  %835 = or i1 %833, %834
  br i1 %835, label %originalBB173, label %originalBB173alteredBB

originalBB173:                                    ; preds = %826, %originalBB173alteredBB
  %836 = icmp ne i32 %827, 0, !dbg !2539
  %837 = xor i1 %836, true, !dbg !2539
  %838 = load i32, i32* @x.37
  %839 = load i32, i32* @y.38
  %840 = sub i32 %838, 1
  %841 = mul i32 %838, %840
  %842 = urem i32 %841, 2
  %843 = icmp eq i32 %842, 0
  %844 = icmp slt i32 %839, 10
  %845 = or i1 %843, %844
  br i1 %845, label %originalBBpart2190, label %originalBB173alteredBB

originalBBpart2190:                               ; preds = %originalBB173
  br i1 %837, label %846, label %6460, !dbg !2540

846:                                              ; preds = %originalBBpart2190
  call void @llvm.dbg.declare(metadata i8* %39, metadata !2541, metadata !DIExpression()), !dbg !2543
  call void @llvm.dbg.declare(metadata i8* %40, metadata !2544, metadata !DIExpression()), !dbg !2545
  call void @llvm.dbg.declare(metadata i8* %41, metadata !2546, metadata !DIExpression()), !dbg !2547
  %847 = load i32, i32* @x.37
  %848 = load i32, i32* @y.38
  %849 = sub i32 %847, 1
  %850 = mul i32 %847, %849
  %851 = urem i32 %850, 2
  %852 = icmp eq i32 %851, 0
  %853 = icmp slt i32 %848, 10
  %854 = or i1 %852, %853
  br i1 %854, label %originalBB192, label %originalBB192alteredBB

originalBB192:                                    ; preds = %846, %originalBB192alteredBB
  store i8 0, i8* %41, align 1, !dbg !2547
  call void @llvm.dbg.declare(metadata i8* %42, metadata !2548, metadata !DIExpression()), !dbg !2549
  store i8 0, i8* %42, align 1, !dbg !2549
  call void @llvm.dbg.declare(metadata i8* %43, metadata !2550, metadata !DIExpression()), !dbg !2551
  store i8 0, i8* %43, align 1, !dbg !2551
  %855 = load i8, i8* %33, align 1, !dbg !2552
  %856 = trunc i8 %855 to i1, !dbg !2552
  %857 = load i32, i32* @x.37
  %858 = load i32, i32* @y.38
  %859 = sub i32 %857, 1
  %860 = mul i32 %857, %859
  %861 = urem i32 %860, 2
  %862 = icmp eq i32 %861, 0
  %863 = icmp slt i32 %858, 10
  %864 = or i1 %862, %863
  br i1 %864, label %originalBBpart2194, label %originalBB192alteredBB

originalBBpart2194:                               ; preds = %originalBB192
  br i1 %856, label %865, label %1077, !dbg !2554

865:                                              ; preds = %originalBBpart2194
  %866 = load i32, i32* @x.37
  %867 = load i32, i32* @y.38
  %868 = sub i32 %866, 1
  %869 = mul i32 %866, %868
  %870 = urem i32 %869, 2
  %871 = icmp eq i32 %870, 0
  %872 = icmp slt i32 %867, 10
  %873 = or i1 %871, %872
  br i1 %873, label %originalBB196, label %originalBB196alteredBB

originalBB196:                                    ; preds = %865, %originalBB196alteredBB
  %874 = load i32, i32* %23, align 4, !dbg !2555
  %875 = icmp ne i32 %874, 2, !dbg !2556
  %876 = load i32, i32* @x.37
  %877 = load i32, i32* @y.38
  %878 = sub i32 %876, 1
  %879 = mul i32 %876, %878
  %880 = urem i32 %879, 2
  %881 = icmp eq i32 %880, 0
  %882 = icmp slt i32 %877, 10
  %883 = or i1 %881, %882
  br i1 %883, label %originalBBpart2198, label %originalBB196alteredBB

originalBBpart2198:                               ; preds = %originalBB196
  br i1 %875, label %884, label %1077, !dbg !2557

884:                                              ; preds = %originalBBpart2198
  %885 = load i32, i32* @x.37
  %886 = load i32, i32* @y.38
  %887 = sub i32 %885, 1
  %888 = mul i32 %885, %887
  %889 = urem i32 %888, 2
  %890 = icmp eq i32 %889, 0
  %891 = icmp slt i32 %886, 10
  %892 = or i1 %890, %891
  br i1 %892, label %originalBB200, label %originalBB200alteredBB

originalBB200:                                    ; preds = %884, %originalBB200alteredBB
  %893 = load i64, i64* %32, align 8, !dbg !2558
  %894 = icmp ne i64 %893, 0, !dbg !2558
  %895 = load i32, i32* @x.37
  %896 = load i32, i32* @y.38
  %897 = sub i32 %895, 1
  %898 = mul i32 %895, %897
  %899 = urem i32 %898, 2
  %900 = icmp eq i32 %899, 0
  %901 = icmp slt i32 %896, 10
  %902 = or i1 %900, %901
  br i1 %902, label %originalBBpart2202, label %originalBB200alteredBB

originalBBpart2202:                               ; preds = %originalBB200
  br i1 %894, label %903, label %1077, !dbg !2559

903:                                              ; preds = %originalBBpart2202
  %904 = load i32, i32* @x.37
  %905 = load i32, i32* @y.38
  %906 = sub i32 %904, 1
  %907 = mul i32 %904, %906
  %908 = urem i32 %907, 2
  %909 = icmp eq i32 %908, 0
  %910 = icmp slt i32 %905, 10
  %911 = or i1 %909, %910
  br i1 %911, label %originalBB204, label %originalBB204alteredBB

originalBB204:                                    ; preds = %903, %originalBB204alteredBB
  %912 = load i64, i64* %28, align 8, !dbg !2560
  %913 = load i64, i64* %32, align 8, !dbg !2561
  %914 = add i64 %912, %913, !dbg !2562
  %915 = load i64, i64* %22, align 8, !dbg !2563
  %916 = icmp eq i64 %915, -1, !dbg !2564
  %917 = load i32, i32* @x.37
  %918 = load i32, i32* @y.38
  %919 = sub i32 %917, 1
  %920 = mul i32 %917, %919
  %921 = urem i32 %920, 2
  %922 = icmp eq i32 %921, 0
  %923 = icmp slt i32 %918, 10
  %924 = or i1 %922, %923
  br i1 %924, label %originalBBpart2211, label %originalBB204alteredBB

originalBBpart2211:                               ; preds = %originalBB204
  br i1 %916, label %925, label %963, !dbg !2565

925:                                              ; preds = %originalBBpart2211
  %926 = load i32, i32* @x.37
  %927 = load i32, i32* @y.38
  %928 = sub i32 %926, 1
  %929 = mul i32 %926, %928
  %930 = urem i32 %929, 2
  %931 = icmp eq i32 %930, 0
  %932 = icmp slt i32 %927, 10
  %933 = or i1 %931, %932
  br i1 %933, label %originalBB213, label %originalBB213alteredBB

originalBB213:                                    ; preds = %925, %originalBB213alteredBB
  %934 = load i64, i64* %32, align 8, !dbg !2566
  %935 = icmp ult i64 1, %934, !dbg !2567
  %936 = load i32, i32* @x.37
  %937 = load i32, i32* @y.38
  %938 = sub i32 %936, 1
  %939 = mul i32 %936, %938
  %940 = urem i32 %939, 2
  %941 = icmp eq i32 %940, 0
  %942 = icmp slt i32 %937, 10
  %943 = or i1 %941, %942
  br i1 %943, label %originalBBpart2215, label %originalBB213alteredBB

originalBBpart2215:                               ; preds = %originalBB213
  br i1 %935, label %944, label %963, !dbg !2563

944:                                              ; preds = %originalBBpart2215
  %945 = load i32, i32* @x.37
  %946 = load i32, i32* @y.38
  %947 = sub i32 %945, 1
  %948 = mul i32 %945, %947
  %949 = urem i32 %948, 2
  %950 = icmp eq i32 %949, 0
  %951 = icmp slt i32 %946, 10
  %952 = or i1 %950, %951
  br i1 %952, label %originalBB217, label %originalBB217alteredBB

originalBB217:                                    ; preds = %944, %originalBB217alteredBB
  %953 = load i8*, i8** %21, align 8, !dbg !2568
  %954 = call i64 @strlen(i8* %953) #13, !dbg !2569
  store i64 %954, i64* %22, align 8, !dbg !2570
  %955 = load i32, i32* @x.37
  %956 = load i32, i32* @y.38
  %957 = sub i32 %955, 1
  %958 = mul i32 %955, %957
  %959 = urem i32 %958, 2
  %960 = icmp eq i32 %959, 0
  %961 = icmp slt i32 %956, 10
  %962 = or i1 %960, %961
  br i1 %962, label %originalBBpart2219, label %originalBB217alteredBB

originalBBpart2219:                               ; preds = %originalBB217
  br label %981, !dbg !2563

963:                                              ; preds = %originalBBpart2215, %originalBBpart2211
  %964 = load i32, i32* @x.37
  %965 = load i32, i32* @y.38
  %966 = sub i32 %964, 1
  %967 = mul i32 %964, %966
  %968 = urem i32 %967, 2
  %969 = icmp eq i32 %968, 0
  %970 = icmp slt i32 %965, 10
  %971 = or i1 %969, %970
  br i1 %971, label %originalBB221, label %originalBB221alteredBB

originalBB221:                                    ; preds = %963, %originalBB221alteredBB
  %972 = load i64, i64* %22, align 8, !dbg !2571
  %973 = load i32, i32* @x.37
  %974 = load i32, i32* @y.38
  %975 = sub i32 %973, 1
  %976 = mul i32 %973, %975
  %977 = urem i32 %976, 2
  %978 = icmp eq i32 %977, 0
  %979 = icmp slt i32 %974, 10
  %980 = or i1 %978, %979
  br i1 %980, label %originalBBpart2223, label %originalBB221alteredBB

originalBBpart2223:                               ; preds = %originalBB221
  br label %981, !dbg !2563

981:                                              ; preds = %originalBBpart2223, %originalBBpart2219
  %982 = phi i64 [ %954, %originalBBpart2219 ], [ %972, %originalBBpart2223 ], !dbg !2563
  %983 = load i32, i32* @x.37
  %984 = load i32, i32* @y.38
  %985 = sub i32 %983, 1
  %986 = mul i32 %983, %985
  %987 = urem i32 %986, 2
  %988 = icmp eq i32 %987, 0
  %989 = icmp slt i32 %984, 10
  %990 = or i1 %988, %989
  br i1 %990, label %originalBB225, label %originalBB225alteredBB

originalBB225:                                    ; preds = %981, %originalBB225alteredBB
  %991 = icmp ule i64 %914, %982, !dbg !2572
  %992 = load i32, i32* @x.37
  %993 = load i32, i32* @y.38
  %994 = sub i32 %992, 1
  %995 = mul i32 %992, %994
  %996 = urem i32 %995, 2
  %997 = icmp eq i32 %996, 0
  %998 = icmp slt i32 %993, 10
  %999 = or i1 %997, %998
  br i1 %999, label %originalBBpart2227, label %originalBB225alteredBB

originalBBpart2227:                               ; preds = %originalBB225
  br i1 %991, label %1000, label %1077, !dbg !2573

1000:                                             ; preds = %originalBBpart2227
  %1001 = load i32, i32* @x.37
  %1002 = load i32, i32* @y.38
  %1003 = sub i32 %1001, 1
  %1004 = mul i32 %1001, %1003
  %1005 = urem i32 %1004, 2
  %1006 = icmp eq i32 %1005, 0
  %1007 = icmp slt i32 %1002, 10
  %1008 = or i1 %1006, %1007
  br i1 %1008, label %originalBB229, label %originalBB229alteredBB

originalBB229:                                    ; preds = %1000, %originalBB229alteredBB
  %1009 = load i8*, i8** %21, align 8, !dbg !2574
  %1010 = load i64, i64* %28, align 8, !dbg !2575
  %1011 = getelementptr inbounds i8, i8* %1009, i64 %1010, !dbg !2576
  %1012 = load i8*, i8** %31, align 8, !dbg !2577
  %1013 = load i64, i64* %32, align 8, !dbg !2578
  %1014 = call i32 @memcmp(i8* %1011, i8* %1012, i64 %1013) #13, !dbg !2579
  %1015 = icmp eq i32 %1014, 0, !dbg !2580
  %1016 = load i32, i32* @x.37
  %1017 = load i32, i32* @y.38
  %1018 = sub i32 %1016, 1
  %1019 = mul i32 %1016, %1018
  %1020 = urem i32 %1019, 2
  %1021 = icmp eq i32 %1020, 0
  %1022 = icmp slt i32 %1017, 10
  %1023 = or i1 %1021, %1022
  br i1 %1023, label %originalBBpart2231, label %originalBB229alteredBB

originalBBpart2231:                               ; preds = %originalBB229
  br i1 %1015, label %1024, label %1077, !dbg !2581

1024:                                             ; preds = %originalBBpart2231
  %1025 = load i32, i32* @x.37
  %1026 = load i32, i32* @y.38
  %1027 = sub i32 %1025, 1
  %1028 = mul i32 %1025, %1027
  %1029 = urem i32 %1028, 2
  %1030 = icmp eq i32 %1029, 0
  %1031 = icmp slt i32 %1026, 10
  %1032 = or i1 %1030, %1031
  br i1 %1032, label %originalBB233, label %originalBB233alteredBB

originalBB233:                                    ; preds = %1024, %originalBB233alteredBB
  %1033 = load i8, i8* %35, align 1, !dbg !2582
  %1034 = trunc i8 %1033 to i1, !dbg !2582
  %1035 = load i32, i32* @x.37
  %1036 = load i32, i32* @y.38
  %1037 = sub i32 %1035, 1
  %1038 = mul i32 %1035, %1037
  %1039 = urem i32 %1038, 2
  %1040 = icmp eq i32 %1039, 0
  %1041 = icmp slt i32 %1036, 10
  %1042 = or i1 %1040, %1041
  br i1 %1042, label %originalBBpart2235, label %originalBB233alteredBB

originalBBpart2235:                               ; preds = %originalBB233
  br i1 %1034, label %1043, label %1060, !dbg !2585

1043:                                             ; preds = %originalBBpart2235
  %1044 = load i32, i32* @x.37
  %1045 = load i32, i32* @y.38
  %1046 = sub i32 %1044, 1
  %1047 = mul i32 %1044, %1046
  %1048 = urem i32 %1047, 2
  %1049 = icmp eq i32 %1048, 0
  %1050 = icmp slt i32 %1045, 10
  %1051 = or i1 %1049, %1050
  br i1 %1051, label %originalBB237, label %originalBB237alteredBB

originalBB237:                                    ; preds = %1043, %originalBB237alteredBB
  %1052 = load i32, i32* @x.37
  %1053 = load i32, i32* @y.38
  %1054 = sub i32 %1052, 1
  %1055 = mul i32 %1052, %1054
  %1056 = urem i32 %1055, 2
  %1057 = icmp eq i32 %1056, 0
  %1058 = icmp slt i32 %1053, 10
  %1059 = or i1 %1057, %1058
  br i1 %1059, label %originalBBpart2239, label %originalBB237alteredBB

originalBBpart2239:                               ; preds = %originalBB237
  br label %6990, !dbg !2586

1060:                                             ; preds = %originalBBpart2235
  %1061 = load i32, i32* @x.37
  %1062 = load i32, i32* @y.38
  %1063 = sub i32 %1061, 1
  %1064 = mul i32 %1061, %1063
  %1065 = urem i32 %1064, 2
  %1066 = icmp eq i32 %1065, 0
  %1067 = icmp slt i32 %1062, 10
  %1068 = or i1 %1066, %1067
  br i1 %1068, label %originalBB241, label %originalBB241alteredBB

originalBB241:                                    ; preds = %1060, %originalBB241alteredBB
  store i8 1, i8* %41, align 1, !dbg !2587
  %1069 = load i32, i32* @x.37
  %1070 = load i32, i32* @y.38
  %1071 = sub i32 %1069, 1
  %1072 = mul i32 %1069, %1071
  %1073 = urem i32 %1072, 2
  %1074 = icmp eq i32 %1073, 0
  %1075 = icmp slt i32 %1070, 10
  %1076 = or i1 %1074, %1075
  br i1 %1076, label %originalBBpart2243, label %originalBB241alteredBB

originalBBpart2243:                               ; preds = %originalBB241
  br label %1077, !dbg !2588

1077:                                             ; preds = %originalBBpart2243, %originalBBpart2231, %originalBBpart2227, %originalBBpart2202, %originalBBpart2198, %originalBBpart2194
  %1078 = load i32, i32* @x.37
  %1079 = load i32, i32* @y.38
  %1080 = sub i32 %1078, 1
  %1081 = mul i32 %1078, %1080
  %1082 = urem i32 %1081, 2
  %1083 = icmp eq i32 %1082, 0
  %1084 = icmp slt i32 %1079, 10
  %1085 = or i1 %1083, %1084
  br i1 %1085, label %originalBB245, label %originalBB245alteredBB

originalBB245:                                    ; preds = %1077, %originalBB245alteredBB
  %1086 = load i8*, i8** %21, align 8, !dbg !2589
  %1087 = load i64, i64* %28, align 8, !dbg !2590
  %1088 = getelementptr inbounds i8, i8* %1086, i64 %1087, !dbg !2589
  %1089 = load i8, i8* %1088, align 1, !dbg !2589
  store i8 %1089, i8* %39, align 1, !dbg !2591
  %1090 = load i8, i8* %39, align 1, !dbg !2592
  %1091 = zext i8 %1090 to i32, !dbg !2592
  %1092 = load i32, i32* @x.37
  %1093 = load i32, i32* @y.38
  %1094 = sub i32 %1092, 1
  %1095 = mul i32 %1092, %1094
  %1096 = urem i32 %1095, 2
  %1097 = icmp eq i32 %1096, 0
  %1098 = icmp slt i32 %1093, 10
  %1099 = or i1 %1097, %1098
  br i1 %1099, label %originalBBpart2247, label %originalBB245alteredBB

originalBBpart2247:                               ; preds = %originalBB245
  switch i32 %1091, label %3536 [
    i32 0, label %1100
    i32 63, label %1893
    i32 7, label %2501
    i32 8, label %2518
    i32 12, label %2535
    i32 10, label %2552
    i32 13, label %2569
    i32 9, label %2586
    i32 11, label %2603
    i32 92, label %2620
    i32 123, label %2910
    i32 125, label %2910
    i32 35, label %3004
    i32 126, label %3004
    i32 32, label %3057
    i32 33, label %3074
    i32 34, label %3074
    i32 36, label %3074
    i32 38, label %3074
    i32 40, label %3074
    i32 41, label %3074
    i32 42, label %3074
    i32 59, label %3074
    i32 60, label %3074
    i32 61, label %3074
    i32 62, label %3074
    i32 91, label %3074
    i32 94, label %3074
    i32 96, label %3074
    i32 124, label %3074
    i32 39, label %3146
    i32 37, label %3519
    i32 43, label %3519
    i32 44, label %3519
    i32 45, label %3519
    i32 46, label %3519
    i32 47, label %3519
    i32 48, label %3519
    i32 49, label %3519
    i32 50, label %3519
    i32 51, label %3519
    i32 52, label %3519
    i32 53, label %3519
    i32 54, label %3519
    i32 55, label %3519
    i32 56, label %3519
    i32 57, label %3519
    i32 58, label %3519
    i32 65, label %3519
    i32 66, label %3519
    i32 67, label %3519
    i32 68, label %3519
    i32 69, label %3519
    i32 70, label %3519
    i32 71, label %3519
    i32 72, label %3519
    i32 73, label %3519
    i32 74, label %3519
    i32 75, label %3519
    i32 76, label %3519
    i32 77, label %3519
    i32 78, label %3519
    i32 79, label %3519
    i32 80, label %3519
    i32 81, label %3519
    i32 82, label %3519
    i32 83, label %3519
    i32 84, label %3519
    i32 85, label %3519
    i32 86, label %3519
    i32 87, label %3519
    i32 88, label %3519
    i32 89, label %3519
    i32 90, label %3519
    i32 93, label %3519
    i32 95, label %3519
    i32 97, label %3519
    i32 98, label %3519
    i32 99, label %3519
    i32 100, label %3519
    i32 101, label %3519
    i32 102, label %3519
    i32 103, label %3519
    i32 104, label %3519
    i32 105, label %3519
    i32 106, label %3519
    i32 107, label %3519
    i32 108, label %3519
    i32 109, label %3519
    i32 110, label %3519
    i32 111, label %3519
    i32 112, label %3519
    i32 113, label %3519
    i32 114, label %3519
    i32 115, label %3519
    i32 116, label %3519
    i32 117, label %3519
    i32 118, label %3519
    i32 119, label %3519
    i32 120, label %3519
    i32 121, label %3519
    i32 122, label %3519
  ], !dbg !2593

1100:                                             ; preds = %originalBBpart2247
  %1101 = load i32, i32* @x.37
  %1102 = load i32, i32* @y.38
  %1103 = sub i32 %1101, 1
  %1104 = mul i32 %1101, %1103
  %1105 = urem i32 %1104, 2
  %1106 = icmp eq i32 %1105, 0
  %1107 = icmp slt i32 %1102, 10
  %1108 = or i1 %1106, %1107
  br i1 %1108, label %originalBB249, label %originalBB249alteredBB

originalBB249:                                    ; preds = %1100, %originalBB249alteredBB
  %1109 = load i8, i8* %33, align 1, !dbg !2594
  %1110 = trunc i8 %1109 to i1, !dbg !2594
  %1111 = load i32, i32* @x.37
  %1112 = load i32, i32* @y.38
  %1113 = sub i32 %1111, 1
  %1114 = mul i32 %1111, %1113
  %1115 = urem i32 %1114, 2
  %1116 = icmp eq i32 %1115, 0
  %1117 = icmp slt i32 %1112, 10
  %1118 = or i1 %1116, %1117
  br i1 %1118, label %originalBBpart2251, label %originalBB249alteredBB

originalBBpart2251:                               ; preds = %originalBB249
  br i1 %1110, label %1119, label %1822, !dbg !2597

1119:                                             ; preds = %originalBBpart2251
  %1120 = load i32, i32* @x.37
  %1121 = load i32, i32* @y.38
  %1122 = sub i32 %1120, 1
  %1123 = mul i32 %1120, %1122
  %1124 = urem i32 %1123, 2
  %1125 = icmp eq i32 %1124, 0
  %1126 = icmp slt i32 %1121, 10
  %1127 = or i1 %1125, %1126
  br i1 %1127, label %originalBB253, label %originalBB253alteredBB

originalBB253:                                    ; preds = %1119, %originalBB253alteredBB
  %1128 = load i32, i32* @x.37
  %1129 = load i32, i32* @y.38
  %1130 = sub i32 %1128, 1
  %1131 = mul i32 %1128, %1130
  %1132 = urem i32 %1131, 2
  %1133 = icmp eq i32 %1132, 0
  %1134 = icmp slt i32 %1129, 10
  %1135 = or i1 %1133, %1134
  br i1 %1135, label %originalBBpart2255, label %originalBB253alteredBB

originalBBpart2255:                               ; preds = %originalBB253
  br label %1136, !dbg !2598

1136:                                             ; preds = %originalBBpart2255
  %1137 = load i32, i32* @x.37
  %1138 = load i32, i32* @y.38
  %1139 = sub i32 %1137, 1
  %1140 = mul i32 %1137, %1139
  %1141 = urem i32 %1140, 2
  %1142 = icmp eq i32 %1141, 0
  %1143 = icmp slt i32 %1138, 10
  %1144 = or i1 %1142, %1143
  br i1 %1144, label %originalBB257, label %originalBB257alteredBB

originalBB257:                                    ; preds = %1136, %originalBB257alteredBB
  %1145 = load i8, i8* %35, align 1, !dbg !2600
  %1146 = trunc i8 %1145 to i1, !dbg !2600
  %1147 = load i32, i32* @x.37
  %1148 = load i32, i32* @y.38
  %1149 = sub i32 %1147, 1
  %1150 = mul i32 %1147, %1149
  %1151 = urem i32 %1150, 2
  %1152 = icmp eq i32 %1151, 0
  %1153 = icmp slt i32 %1148, 10
  %1154 = or i1 %1152, %1153
  br i1 %1154, label %originalBBpart2259, label %originalBB257alteredBB

originalBBpart2259:                               ; preds = %originalBB257
  br i1 %1146, label %1155, label %1172, !dbg !2603

1155:                                             ; preds = %originalBBpart2259
  %1156 = load i32, i32* @x.37
  %1157 = load i32, i32* @y.38
  %1158 = sub i32 %1156, 1
  %1159 = mul i32 %1156, %1158
  %1160 = urem i32 %1159, 2
  %1161 = icmp eq i32 %1160, 0
  %1162 = icmp slt i32 %1157, 10
  %1163 = or i1 %1161, %1162
  br i1 %1163, label %originalBB261, label %originalBB261alteredBB

originalBB261:                                    ; preds = %1155, %originalBB261alteredBB
  %1164 = load i32, i32* @x.37
  %1165 = load i32, i32* @y.38
  %1166 = sub i32 %1164, 1
  %1167 = mul i32 %1164, %1166
  %1168 = urem i32 %1167, 2
  %1169 = icmp eq i32 %1168, 0
  %1170 = icmp slt i32 %1165, 10
  %1171 = or i1 %1169, %1170
  br i1 %1171, label %originalBBpart2263, label %originalBB261alteredBB

originalBBpart2263:                               ; preds = %originalBB261
  br label %6990, !dbg !2600

1172:                                             ; preds = %originalBBpart2259
  %1173 = load i32, i32* @x.37
  %1174 = load i32, i32* @y.38
  %1175 = sub i32 %1173, 1
  %1176 = mul i32 %1173, %1175
  %1177 = urem i32 %1176, 2
  %1178 = icmp eq i32 %1177, 0
  %1179 = icmp slt i32 %1174, 10
  %1180 = or i1 %1178, %1179
  br i1 %1180, label %originalBB265, label %originalBB265alteredBB

originalBB265:                                    ; preds = %1172, %originalBB265alteredBB
  store i8 1, i8* %42, align 1, !dbg !2603
  %1181 = load i32, i32* %23, align 4, !dbg !2604
  %1182 = icmp eq i32 %1181, 2, !dbg !2604
  %1183 = load i32, i32* @x.37
  %1184 = load i32, i32* @y.38
  %1185 = sub i32 %1183, 1
  %1186 = mul i32 %1183, %1185
  %1187 = urem i32 %1186, 2
  %1188 = icmp eq i32 %1187, 0
  %1189 = icmp slt i32 %1184, 10
  %1190 = or i1 %1188, %1189
  br i1 %1190, label %originalBBpart2267, label %originalBB265alteredBB

originalBBpart2267:                               ; preds = %originalBB265
  br i1 %1182, label %1191, label %1455, !dbg !2604

1191:                                             ; preds = %originalBBpart2267
  %1192 = load i32, i32* @x.37
  %1193 = load i32, i32* @y.38
  %1194 = sub i32 %1192, 1
  %1195 = mul i32 %1192, %1194
  %1196 = urem i32 %1195, 2
  %1197 = icmp eq i32 %1196, 0
  %1198 = icmp slt i32 %1193, 10
  %1199 = or i1 %1197, %1198
  br i1 %1199, label %originalBB269, label %originalBB269alteredBB

originalBB269:                                    ; preds = %1191, %originalBB269alteredBB
  %1200 = load i8, i8* %36, align 1, !dbg !2604
  %1201 = trunc i8 %1200 to i1, !dbg !2604
  %1202 = load i32, i32* @x.37
  %1203 = load i32, i32* @y.38
  %1204 = sub i32 %1202, 1
  %1205 = mul i32 %1202, %1204
  %1206 = urem i32 %1205, 2
  %1207 = icmp eq i32 %1206, 0
  %1208 = icmp slt i32 %1203, 10
  %1209 = or i1 %1207, %1208
  br i1 %1209, label %originalBBpart2271, label %originalBB269alteredBB

originalBBpart2271:                               ; preds = %originalBB269
  br i1 %1201, label %1455, label %1210, !dbg !2603

1210:                                             ; preds = %originalBBpart2271
  %1211 = load i32, i32* @x.37
  %1212 = load i32, i32* @y.38
  %1213 = sub i32 %1211, 1
  %1214 = mul i32 %1211, %1213
  %1215 = urem i32 %1214, 2
  %1216 = icmp eq i32 %1215, 0
  %1217 = icmp slt i32 %1212, 10
  %1218 = or i1 %1216, %1217
  br i1 %1218, label %originalBB273, label %originalBB273alteredBB

originalBB273:                                    ; preds = %1210, %originalBB273alteredBB
  %1219 = load i32, i32* @x.37
  %1220 = load i32, i32* @y.38
  %1221 = sub i32 %1219, 1
  %1222 = mul i32 %1219, %1221
  %1223 = urem i32 %1222, 2
  %1224 = icmp eq i32 %1223, 0
  %1225 = icmp slt i32 %1220, 10
  %1226 = or i1 %1224, %1225
  br i1 %1226, label %originalBBpart2275, label %originalBB273alteredBB

originalBBpart2275:                               ; preds = %originalBB273
  br label %1227, !dbg !2606

1227:                                             ; preds = %originalBBpart2275
  %1228 = load i32, i32* @x.37
  %1229 = load i32, i32* @y.38
  %1230 = sub i32 %1228, 1
  %1231 = mul i32 %1228, %1230
  %1232 = urem i32 %1231, 2
  %1233 = icmp eq i32 %1232, 0
  %1234 = icmp slt i32 %1229, 10
  %1235 = or i1 %1233, %1234
  br i1 %1235, label %originalBB277, label %originalBB277alteredBB

originalBB277:                                    ; preds = %1227, %originalBB277alteredBB
  %1236 = load i64, i64* %29, align 8, !dbg !2608
  %1237 = load i64, i64* %20, align 8, !dbg !2608
  %1238 = icmp ult i64 %1236, %1237, !dbg !2608
  %1239 = load i32, i32* @x.37
  %1240 = load i32, i32* @y.38
  %1241 = sub i32 %1239, 1
  %1242 = mul i32 %1239, %1241
  %1243 = urem i32 %1242, 2
  %1244 = icmp eq i32 %1243, 0
  %1245 = icmp slt i32 %1240, 10
  %1246 = or i1 %1244, %1245
  br i1 %1246, label %originalBBpart2279, label %originalBB277alteredBB

originalBBpart2279:                               ; preds = %originalBB277
  br i1 %1238, label %1247, label %1267, !dbg !2611

1247:                                             ; preds = %originalBBpart2279
  %1248 = load i32, i32* @x.37
  %1249 = load i32, i32* @y.38
  %1250 = sub i32 %1248, 1
  %1251 = mul i32 %1248, %1250
  %1252 = urem i32 %1251, 2
  %1253 = icmp eq i32 %1252, 0
  %1254 = icmp slt i32 %1249, 10
  %1255 = or i1 %1253, %1254
  br i1 %1255, label %originalBB281, label %originalBB281alteredBB

originalBB281:                                    ; preds = %1247, %originalBB281alteredBB
  %1256 = load i8*, i8** %19, align 8, !dbg !2608
  %1257 = load i64, i64* %29, align 8, !dbg !2608
  %1258 = getelementptr inbounds i8, i8* %1256, i64 %1257, !dbg !2608
  store i8 39, i8* %1258, align 1, !dbg !2608
  %1259 = load i32, i32* @x.37
  %1260 = load i32, i32* @y.38
  %1261 = sub i32 %1259, 1
  %1262 = mul i32 %1259, %1261
  %1263 = urem i32 %1262, 2
  %1264 = icmp eq i32 %1263, 0
  %1265 = icmp slt i32 %1260, 10
  %1266 = or i1 %1264, %1265
  br i1 %1266, label %originalBBpart2283, label %originalBB281alteredBB

originalBBpart2283:                               ; preds = %originalBB281
  br label %1267, !dbg !2608

1267:                                             ; preds = %originalBBpart2283, %originalBBpart2279
  %1268 = load i32, i32* @x.37
  %1269 = load i32, i32* @y.38
  %1270 = sub i32 %1268, 1
  %1271 = mul i32 %1268, %1270
  %1272 = urem i32 %1271, 2
  %1273 = icmp eq i32 %1272, 0
  %1274 = icmp slt i32 %1269, 10
  %1275 = or i1 %1273, %1274
  br i1 %1275, label %originalBB285, label %originalBB285alteredBB

originalBB285:                                    ; preds = %1267, %originalBB285alteredBB
  %1276 = load i64, i64* %29, align 8, !dbg !2611
  %1277 = add i64 %1276, 1, !dbg !2611
  store i64 %1277, i64* %29, align 8, !dbg !2611
  %1278 = load i32, i32* @x.37
  %1279 = load i32, i32* @y.38
  %1280 = sub i32 %1278, 1
  %1281 = mul i32 %1278, %1280
  %1282 = urem i32 %1281, 2
  %1283 = icmp eq i32 %1282, 0
  %1284 = icmp slt i32 %1279, 10
  %1285 = or i1 %1283, %1284
  br i1 %1285, label %originalBBpart2297, label %originalBB285alteredBB

originalBBpart2297:                               ; preds = %originalBB285
  br label %1286, !dbg !2611

1286:                                             ; preds = %originalBBpart2297
  %1287 = load i32, i32* @x.37
  %1288 = load i32, i32* @y.38
  %1289 = sub i32 %1287, 1
  %1290 = mul i32 %1287, %1289
  %1291 = urem i32 %1290, 2
  %1292 = icmp eq i32 %1291, 0
  %1293 = icmp slt i32 %1288, 10
  %1294 = or i1 %1292, %1293
  br i1 %1294, label %originalBB299, label %originalBB299alteredBB

originalBB299:                                    ; preds = %1286, %originalBB299alteredBB
  %1295 = load i32, i32* @x.37
  %1296 = load i32, i32* @y.38
  %1297 = sub i32 %1295, 1
  %1298 = mul i32 %1295, %1297
  %1299 = urem i32 %1298, 2
  %1300 = icmp eq i32 %1299, 0
  %1301 = icmp slt i32 %1296, 10
  %1302 = or i1 %1300, %1301
  br i1 %1302, label %originalBBpart2301, label %originalBB299alteredBB

originalBBpart2301:                               ; preds = %originalBB299
  br label %1303, !dbg !2606

1303:                                             ; preds = %originalBBpart2301
  %1304 = load i32, i32* @x.37
  %1305 = load i32, i32* @y.38
  %1306 = sub i32 %1304, 1
  %1307 = mul i32 %1304, %1306
  %1308 = urem i32 %1307, 2
  %1309 = icmp eq i32 %1308, 0
  %1310 = icmp slt i32 %1305, 10
  %1311 = or i1 %1309, %1310
  br i1 %1311, label %originalBB303, label %originalBB303alteredBB

originalBB303:                                    ; preds = %1303, %originalBB303alteredBB
  %1312 = load i64, i64* %29, align 8, !dbg !2612
  %1313 = load i64, i64* %20, align 8, !dbg !2612
  %1314 = icmp ult i64 %1312, %1313, !dbg !2612
  %1315 = load i32, i32* @x.37
  %1316 = load i32, i32* @y.38
  %1317 = sub i32 %1315, 1
  %1318 = mul i32 %1315, %1317
  %1319 = urem i32 %1318, 2
  %1320 = icmp eq i32 %1319, 0
  %1321 = icmp slt i32 %1316, 10
  %1322 = or i1 %1320, %1321
  br i1 %1322, label %originalBBpart2305, label %originalBB303alteredBB

originalBBpart2305:                               ; preds = %originalBB303
  br i1 %1314, label %1323, label %1343, !dbg !2615

1323:                                             ; preds = %originalBBpart2305
  %1324 = load i32, i32* @x.37
  %1325 = load i32, i32* @y.38
  %1326 = sub i32 %1324, 1
  %1327 = mul i32 %1324, %1326
  %1328 = urem i32 %1327, 2
  %1329 = icmp eq i32 %1328, 0
  %1330 = icmp slt i32 %1325, 10
  %1331 = or i1 %1329, %1330
  br i1 %1331, label %originalBB307, label %originalBB307alteredBB

originalBB307:                                    ; preds = %1323, %originalBB307alteredBB
  %1332 = load i8*, i8** %19, align 8, !dbg !2612
  %1333 = load i64, i64* %29, align 8, !dbg !2612
  %1334 = getelementptr inbounds i8, i8* %1332, i64 %1333, !dbg !2612
  store i8 36, i8* %1334, align 1, !dbg !2612
  %1335 = load i32, i32* @x.37
  %1336 = load i32, i32* @y.38
  %1337 = sub i32 %1335, 1
  %1338 = mul i32 %1335, %1337
  %1339 = urem i32 %1338, 2
  %1340 = icmp eq i32 %1339, 0
  %1341 = icmp slt i32 %1336, 10
  %1342 = or i1 %1340, %1341
  br i1 %1342, label %originalBBpart2309, label %originalBB307alteredBB

originalBBpart2309:                               ; preds = %originalBB307
  br label %1343, !dbg !2612

1343:                                             ; preds = %originalBBpart2309, %originalBBpart2305
  %1344 = load i32, i32* @x.37
  %1345 = load i32, i32* @y.38
  %1346 = sub i32 %1344, 1
  %1347 = mul i32 %1344, %1346
  %1348 = urem i32 %1347, 2
  %1349 = icmp eq i32 %1348, 0
  %1350 = icmp slt i32 %1345, 10
  %1351 = or i1 %1349, %1350
  br i1 %1351, label %originalBB311, label %originalBB311alteredBB

originalBB311:                                    ; preds = %1343, %originalBB311alteredBB
  %1352 = load i64, i64* %29, align 8, !dbg !2615
  %1353 = add i64 %1352, 1, !dbg !2615
  store i64 %1353, i64* %29, align 8, !dbg !2615
  %1354 = load i32, i32* @x.37
  %1355 = load i32, i32* @y.38
  %1356 = sub i32 %1354, 1
  %1357 = mul i32 %1354, %1356
  %1358 = urem i32 %1357, 2
  %1359 = icmp eq i32 %1358, 0
  %1360 = icmp slt i32 %1355, 10
  %1361 = or i1 %1359, %1360
  br i1 %1361, label %originalBBpart2317, label %originalBB311alteredBB

originalBBpart2317:                               ; preds = %originalBB311
  br label %1362, !dbg !2615

1362:                                             ; preds = %originalBBpart2317
  %1363 = load i32, i32* @x.37
  %1364 = load i32, i32* @y.38
  %1365 = sub i32 %1363, 1
  %1366 = mul i32 %1363, %1365
  %1367 = urem i32 %1366, 2
  %1368 = icmp eq i32 %1367, 0
  %1369 = icmp slt i32 %1364, 10
  %1370 = or i1 %1368, %1369
  br i1 %1370, label %originalBB319, label %originalBB319alteredBB

originalBB319:                                    ; preds = %1362, %originalBB319alteredBB
  %1371 = load i32, i32* @x.37
  %1372 = load i32, i32* @y.38
  %1373 = sub i32 %1371, 1
  %1374 = mul i32 %1371, %1373
  %1375 = urem i32 %1374, 2
  %1376 = icmp eq i32 %1375, 0
  %1377 = icmp slt i32 %1372, 10
  %1378 = or i1 %1376, %1377
  br i1 %1378, label %originalBBpart2321, label %originalBB319alteredBB

originalBBpart2321:                               ; preds = %originalBB319
  br label %1379, !dbg !2606

1379:                                             ; preds = %originalBBpart2321
  %1380 = load i32, i32* @x.37
  %1381 = load i32, i32* @y.38
  %1382 = sub i32 %1380, 1
  %1383 = mul i32 %1380, %1382
  %1384 = urem i32 %1383, 2
  %1385 = icmp eq i32 %1384, 0
  %1386 = icmp slt i32 %1381, 10
  %1387 = or i1 %1385, %1386
  br i1 %1387, label %originalBB323, label %originalBB323alteredBB

originalBB323:                                    ; preds = %1379, %originalBB323alteredBB
  %1388 = load i64, i64* %29, align 8, !dbg !2616
  %1389 = load i64, i64* %20, align 8, !dbg !2616
  %1390 = icmp ult i64 %1388, %1389, !dbg !2616
  %1391 = load i32, i32* @x.37
  %1392 = load i32, i32* @y.38
  %1393 = sub i32 %1391, 1
  %1394 = mul i32 %1391, %1393
  %1395 = urem i32 %1394, 2
  %1396 = icmp eq i32 %1395, 0
  %1397 = icmp slt i32 %1392, 10
  %1398 = or i1 %1396, %1397
  br i1 %1398, label %originalBBpart2325, label %originalBB323alteredBB

originalBBpart2325:                               ; preds = %originalBB323
  br i1 %1390, label %1399, label %1419, !dbg !2619

1399:                                             ; preds = %originalBBpart2325
  %1400 = load i32, i32* @x.37
  %1401 = load i32, i32* @y.38
  %1402 = sub i32 %1400, 1
  %1403 = mul i32 %1400, %1402
  %1404 = urem i32 %1403, 2
  %1405 = icmp eq i32 %1404, 0
  %1406 = icmp slt i32 %1401, 10
  %1407 = or i1 %1405, %1406
  br i1 %1407, label %originalBB327, label %originalBB327alteredBB

originalBB327:                                    ; preds = %1399, %originalBB327alteredBB
  %1408 = load i8*, i8** %19, align 8, !dbg !2616
  %1409 = load i64, i64* %29, align 8, !dbg !2616
  %1410 = getelementptr inbounds i8, i8* %1408, i64 %1409, !dbg !2616
  store i8 39, i8* %1410, align 1, !dbg !2616
  %1411 = load i32, i32* @x.37
  %1412 = load i32, i32* @y.38
  %1413 = sub i32 %1411, 1
  %1414 = mul i32 %1411, %1413
  %1415 = urem i32 %1414, 2
  %1416 = icmp eq i32 %1415, 0
  %1417 = icmp slt i32 %1412, 10
  %1418 = or i1 %1416, %1417
  br i1 %1418, label %originalBBpart2329, label %originalBB327alteredBB

originalBBpart2329:                               ; preds = %originalBB327
  br label %1419, !dbg !2616

1419:                                             ; preds = %originalBBpart2329, %originalBBpart2325
  %1420 = load i32, i32* @x.37
  %1421 = load i32, i32* @y.38
  %1422 = sub i32 %1420, 1
  %1423 = mul i32 %1420, %1422
  %1424 = urem i32 %1423, 2
  %1425 = icmp eq i32 %1424, 0
  %1426 = icmp slt i32 %1421, 10
  %1427 = or i1 %1425, %1426
  br i1 %1427, label %originalBB331, label %originalBB331alteredBB

originalBB331:                                    ; preds = %1419, %originalBB331alteredBB
  %1428 = load i64, i64* %29, align 8, !dbg !2619
  %1429 = add i64 %1428, 1, !dbg !2619
  store i64 %1429, i64* %29, align 8, !dbg !2619
  %1430 = load i32, i32* @x.37
  %1431 = load i32, i32* @y.38
  %1432 = sub i32 %1430, 1
  %1433 = mul i32 %1430, %1432
  %1434 = urem i32 %1433, 2
  %1435 = icmp eq i32 %1434, 0
  %1436 = icmp slt i32 %1431, 10
  %1437 = or i1 %1435, %1436
  br i1 %1437, label %originalBBpart2334, label %originalBB331alteredBB

originalBBpart2334:                               ; preds = %originalBB331
  br label %1438, !dbg !2619

1438:                                             ; preds = %originalBBpart2334
  %1439 = load i32, i32* @x.37
  %1440 = load i32, i32* @y.38
  %1441 = sub i32 %1439, 1
  %1442 = mul i32 %1439, %1441
  %1443 = urem i32 %1442, 2
  %1444 = icmp eq i32 %1443, 0
  %1445 = icmp slt i32 %1440, 10
  %1446 = or i1 %1444, %1445
  br i1 %1446, label %originalBB336, label %originalBB336alteredBB

originalBB336:                                    ; preds = %1438, %originalBB336alteredBB
  store i8 1, i8* %36, align 1, !dbg !2606
  %1447 = load i32, i32* @x.37
  %1448 = load i32, i32* @y.38
  %1449 = sub i32 %1447, 1
  %1450 = mul i32 %1447, %1449
  %1451 = urem i32 %1450, 2
  %1452 = icmp eq i32 %1451, 0
  %1453 = icmp slt i32 %1448, 10
  %1454 = or i1 %1452, %1453
  br i1 %1454, label %originalBBpart2338, label %originalBB336alteredBB

originalBBpart2338:                               ; preds = %originalBB336
  br label %1455, !dbg !2606

1455:                                             ; preds = %originalBBpart2338, %originalBBpart2271, %originalBBpart2267
  %1456 = load i32, i32* @x.37
  %1457 = load i32, i32* @y.38
  %1458 = sub i32 %1456, 1
  %1459 = mul i32 %1456, %1458
  %1460 = urem i32 %1459, 2
  %1461 = icmp eq i32 %1460, 0
  %1462 = icmp slt i32 %1457, 10
  %1463 = or i1 %1461, %1462
  br i1 %1463, label %originalBB340, label %originalBB340alteredBB

originalBB340:                                    ; preds = %1455, %originalBB340alteredBB
  %1464 = load i32, i32* @x.37
  %1465 = load i32, i32* @y.38
  %1466 = sub i32 %1464, 1
  %1467 = mul i32 %1464, %1466
  %1468 = urem i32 %1467, 2
  %1469 = icmp eq i32 %1468, 0
  %1470 = icmp slt i32 %1465, 10
  %1471 = or i1 %1469, %1470
  br i1 %1471, label %originalBBpart2342, label %originalBB340alteredBB

originalBBpart2342:                               ; preds = %originalBB340
  br label %1472, !dbg !2603

1472:                                             ; preds = %originalBBpart2342
  %1473 = load i32, i32* @x.37
  %1474 = load i32, i32* @y.38
  %1475 = sub i32 %1473, 1
  %1476 = mul i32 %1473, %1475
  %1477 = urem i32 %1476, 2
  %1478 = icmp eq i32 %1477, 0
  %1479 = icmp slt i32 %1474, 10
  %1480 = or i1 %1478, %1479
  br i1 %1480, label %originalBB344, label %originalBB344alteredBB

originalBB344:                                    ; preds = %1472, %originalBB344alteredBB
  %1481 = load i64, i64* %29, align 8, !dbg !2620
  %1482 = load i64, i64* %20, align 8, !dbg !2620
  %1483 = icmp ult i64 %1481, %1482, !dbg !2620
  %1484 = load i32, i32* @x.37
  %1485 = load i32, i32* @y.38
  %1486 = sub i32 %1484, 1
  %1487 = mul i32 %1484, %1486
  %1488 = urem i32 %1487, 2
  %1489 = icmp eq i32 %1488, 0
  %1490 = icmp slt i32 %1485, 10
  %1491 = or i1 %1489, %1490
  br i1 %1491, label %originalBBpart2346, label %originalBB344alteredBB

originalBBpart2346:                               ; preds = %originalBB344
  br i1 %1483, label %1492, label %1512, !dbg !2623

1492:                                             ; preds = %originalBBpart2346
  %1493 = load i32, i32* @x.37
  %1494 = load i32, i32* @y.38
  %1495 = sub i32 %1493, 1
  %1496 = mul i32 %1493, %1495
  %1497 = urem i32 %1496, 2
  %1498 = icmp eq i32 %1497, 0
  %1499 = icmp slt i32 %1494, 10
  %1500 = or i1 %1498, %1499
  br i1 %1500, label %originalBB348, label %originalBB348alteredBB

originalBB348:                                    ; preds = %1492, %originalBB348alteredBB
  %1501 = load i8*, i8** %19, align 8, !dbg !2620
  %1502 = load i64, i64* %29, align 8, !dbg !2620
  %1503 = getelementptr inbounds i8, i8* %1501, i64 %1502, !dbg !2620
  store i8 92, i8* %1503, align 1, !dbg !2620
  %1504 = load i32, i32* @x.37
  %1505 = load i32, i32* @y.38
  %1506 = sub i32 %1504, 1
  %1507 = mul i32 %1504, %1506
  %1508 = urem i32 %1507, 2
  %1509 = icmp eq i32 %1508, 0
  %1510 = icmp slt i32 %1505, 10
  %1511 = or i1 %1509, %1510
  br i1 %1511, label %originalBBpart2350, label %originalBB348alteredBB

originalBBpart2350:                               ; preds = %originalBB348
  br label %1512, !dbg !2620

1512:                                             ; preds = %originalBBpart2350, %originalBBpart2346
  %1513 = load i32, i32* @x.37
  %1514 = load i32, i32* @y.38
  %1515 = sub i32 %1513, 1
  %1516 = mul i32 %1513, %1515
  %1517 = urem i32 %1516, 2
  %1518 = icmp eq i32 %1517, 0
  %1519 = icmp slt i32 %1514, 10
  %1520 = or i1 %1518, %1519
  br i1 %1520, label %originalBB352, label %originalBB352alteredBB

originalBB352:                                    ; preds = %1512, %originalBB352alteredBB
  %1521 = load i64, i64* %29, align 8, !dbg !2623
  %1522 = add i64 %1521, 1, !dbg !2623
  store i64 %1522, i64* %29, align 8, !dbg !2623
  %1523 = load i32, i32* @x.37
  %1524 = load i32, i32* @y.38
  %1525 = sub i32 %1523, 1
  %1526 = mul i32 %1523, %1525
  %1527 = urem i32 %1526, 2
  %1528 = icmp eq i32 %1527, 0
  %1529 = icmp slt i32 %1524, 10
  %1530 = or i1 %1528, %1529
  br i1 %1530, label %originalBBpart2361, label %originalBB352alteredBB

originalBBpart2361:                               ; preds = %originalBB352
  br label %1531, !dbg !2623

1531:                                             ; preds = %originalBBpart2361
  %1532 = load i32, i32* @x.37
  %1533 = load i32, i32* @y.38
  %1534 = sub i32 %1532, 1
  %1535 = mul i32 %1532, %1534
  %1536 = urem i32 %1535, 2
  %1537 = icmp eq i32 %1536, 0
  %1538 = icmp slt i32 %1533, 10
  %1539 = or i1 %1537, %1538
  br i1 %1539, label %originalBB363, label %originalBB363alteredBB

originalBB363:                                    ; preds = %1531, %originalBB363alteredBB
  %1540 = load i32, i32* @x.37
  %1541 = load i32, i32* @y.38
  %1542 = sub i32 %1540, 1
  %1543 = mul i32 %1540, %1542
  %1544 = urem i32 %1543, 2
  %1545 = icmp eq i32 %1544, 0
  %1546 = icmp slt i32 %1541, 10
  %1547 = or i1 %1545, %1546
  br i1 %1547, label %originalBBpart2365, label %originalBB363alteredBB

originalBBpart2365:                               ; preds = %originalBB363
  br label %1548, !dbg !2603

1548:                                             ; preds = %originalBBpart2365
  %1549 = load i32, i32* @x.37
  %1550 = load i32, i32* @y.38
  %1551 = sub i32 %1549, 1
  %1552 = mul i32 %1549, %1551
  %1553 = urem i32 %1552, 2
  %1554 = icmp eq i32 %1553, 0
  %1555 = icmp slt i32 %1550, 10
  %1556 = or i1 %1554, %1555
  br i1 %1556, label %originalBB367, label %originalBB367alteredBB

originalBB367:                                    ; preds = %1548, %originalBB367alteredBB
  %1557 = load i32, i32* %23, align 4, !dbg !2624
  %1558 = icmp ne i32 %1557, 2, !dbg !2626
  %1559 = load i32, i32* @x.37
  %1560 = load i32, i32* @y.38
  %1561 = sub i32 %1559, 1
  %1562 = mul i32 %1559, %1561
  %1563 = urem i32 %1562, 2
  %1564 = icmp eq i32 %1563, 0
  %1565 = icmp slt i32 %1560, 10
  %1566 = or i1 %1564, %1565
  br i1 %1566, label %originalBBpart2369, label %originalBB367alteredBB

originalBBpart2369:                               ; preds = %originalBB367
  br i1 %1558, label %1567, label %1805, !dbg !2627

1567:                                             ; preds = %originalBBpart2369
  %1568 = load i32, i32* @x.37
  %1569 = load i32, i32* @y.38
  %1570 = sub i32 %1568, 1
  %1571 = mul i32 %1568, %1570
  %1572 = urem i32 %1571, 2
  %1573 = icmp eq i32 %1572, 0
  %1574 = icmp slt i32 %1569, 10
  %1575 = or i1 %1573, %1574
  br i1 %1575, label %originalBB371, label %originalBB371alteredBB

originalBB371:                                    ; preds = %1567, %originalBB371alteredBB
  %1576 = load i64, i64* %28, align 8, !dbg !2628
  %1577 = add i64 %1576, 1, !dbg !2629
  %1578 = load i64, i64* %22, align 8, !dbg !2630
  %1579 = icmp ult i64 %1577, %1578, !dbg !2631
  %1580 = load i32, i32* @x.37
  %1581 = load i32, i32* @y.38
  %1582 = sub i32 %1580, 1
  %1583 = mul i32 %1580, %1582
  %1584 = urem i32 %1583, 2
  %1585 = icmp eq i32 %1584, 0
  %1586 = icmp slt i32 %1581, 10
  %1587 = or i1 %1585, %1586
  br i1 %1587, label %originalBBpart2374, label %originalBB371alteredBB

originalBBpart2374:                               ; preds = %originalBB371
  br i1 %1579, label %1588, label %1805, !dbg !2632

1588:                                             ; preds = %originalBBpart2374
  %1589 = load i32, i32* @x.37
  %1590 = load i32, i32* @y.38
  %1591 = sub i32 %1589, 1
  %1592 = mul i32 %1589, %1591
  %1593 = urem i32 %1592, 2
  %1594 = icmp eq i32 %1593, 0
  %1595 = icmp slt i32 %1590, 10
  %1596 = or i1 %1594, %1595
  br i1 %1596, label %originalBB376, label %originalBB376alteredBB

originalBB376:                                    ; preds = %1588, %originalBB376alteredBB
  %1597 = load i8*, i8** %21, align 8, !dbg !2633
  %1598 = load i64, i64* %28, align 8, !dbg !2634
  %1599 = add i64 %1598, 1, !dbg !2635
  %1600 = getelementptr inbounds i8, i8* %1597, i64 %1599, !dbg !2633
  %1601 = load i8, i8* %1600, align 1, !dbg !2633
  %1602 = sext i8 %1601 to i32, !dbg !2633
  %1603 = icmp sle i32 48, %1602, !dbg !2636
  %1604 = load i32, i32* @x.37
  %1605 = load i32, i32* @y.38
  %1606 = sub i32 %1604, 1
  %1607 = mul i32 %1604, %1606
  %1608 = urem i32 %1607, 2
  %1609 = icmp eq i32 %1608, 0
  %1610 = icmp slt i32 %1605, 10
  %1611 = or i1 %1609, %1610
  br i1 %1611, label %originalBBpart2385, label %originalBB376alteredBB

originalBBpart2385:                               ; preds = %originalBB376
  br i1 %1603, label %1612, label %1805, !dbg !2637

1612:                                             ; preds = %originalBBpart2385
  %1613 = load i32, i32* @x.37
  %1614 = load i32, i32* @y.38
  %1615 = sub i32 %1613, 1
  %1616 = mul i32 %1613, %1615
  %1617 = urem i32 %1616, 2
  %1618 = icmp eq i32 %1617, 0
  %1619 = icmp slt i32 %1614, 10
  %1620 = or i1 %1618, %1619
  br i1 %1620, label %originalBB387, label %originalBB387alteredBB

originalBB387:                                    ; preds = %1612, %originalBB387alteredBB
  %1621 = load i8*, i8** %21, align 8, !dbg !2638
  %1622 = load i64, i64* %28, align 8, !dbg !2639
  %1623 = add i64 %1622, 1, !dbg !2640
  %1624 = getelementptr inbounds i8, i8* %1621, i64 %1623, !dbg !2638
  %1625 = load i8, i8* %1624, align 1, !dbg !2638
  %1626 = sext i8 %1625 to i32, !dbg !2638
  %1627 = icmp sle i32 %1626, 57, !dbg !2641
  %1628 = load i32, i32* @x.37
  %1629 = load i32, i32* @y.38
  %1630 = sub i32 %1628, 1
  %1631 = mul i32 %1628, %1630
  %1632 = urem i32 %1631, 2
  %1633 = icmp eq i32 %1632, 0
  %1634 = icmp slt i32 %1629, 10
  %1635 = or i1 %1633, %1634
  br i1 %1635, label %originalBBpart2399, label %originalBB387alteredBB

originalBBpart2399:                               ; preds = %originalBB387
  br i1 %1627, label %1636, label %1805, !dbg !2642

1636:                                             ; preds = %originalBBpart2399
  %1637 = load i32, i32* @x.37
  %1638 = load i32, i32* @y.38
  %1639 = sub i32 %1637, 1
  %1640 = mul i32 %1637, %1639
  %1641 = urem i32 %1640, 2
  %1642 = icmp eq i32 %1641, 0
  %1643 = icmp slt i32 %1638, 10
  %1644 = or i1 %1642, %1643
  br i1 %1644, label %originalBB401, label %originalBB401alteredBB

originalBB401:                                    ; preds = %1636, %originalBB401alteredBB
  %1645 = load i32, i32* @x.37
  %1646 = load i32, i32* @y.38
  %1647 = sub i32 %1645, 1
  %1648 = mul i32 %1645, %1647
  %1649 = urem i32 %1648, 2
  %1650 = icmp eq i32 %1649, 0
  %1651 = icmp slt i32 %1646, 10
  %1652 = or i1 %1650, %1651
  br i1 %1652, label %originalBBpart2403, label %originalBB401alteredBB

originalBBpart2403:                               ; preds = %originalBB401
  br label %1653, !dbg !2643

1653:                                             ; preds = %originalBBpart2403
  %1654 = load i32, i32* @x.37
  %1655 = load i32, i32* @y.38
  %1656 = sub i32 %1654, 1
  %1657 = mul i32 %1654, %1656
  %1658 = urem i32 %1657, 2
  %1659 = icmp eq i32 %1658, 0
  %1660 = icmp slt i32 %1655, 10
  %1661 = or i1 %1659, %1660
  br i1 %1661, label %originalBB405, label %originalBB405alteredBB

originalBB405:                                    ; preds = %1653, %originalBB405alteredBB
  %1662 = load i64, i64* %29, align 8, !dbg !2645
  %1663 = load i64, i64* %20, align 8, !dbg !2645
  %1664 = icmp ult i64 %1662, %1663, !dbg !2645
  %1665 = load i32, i32* @x.37
  %1666 = load i32, i32* @y.38
  %1667 = sub i32 %1665, 1
  %1668 = mul i32 %1665, %1667
  %1669 = urem i32 %1668, 2
  %1670 = icmp eq i32 %1669, 0
  %1671 = icmp slt i32 %1666, 10
  %1672 = or i1 %1670, %1671
  br i1 %1672, label %originalBBpart2407, label %originalBB405alteredBB

originalBBpart2407:                               ; preds = %originalBB405
  br i1 %1664, label %1673, label %1693, !dbg !2648

1673:                                             ; preds = %originalBBpart2407
  %1674 = load i32, i32* @x.37
  %1675 = load i32, i32* @y.38
  %1676 = sub i32 %1674, 1
  %1677 = mul i32 %1674, %1676
  %1678 = urem i32 %1677, 2
  %1679 = icmp eq i32 %1678, 0
  %1680 = icmp slt i32 %1675, 10
  %1681 = or i1 %1679, %1680
  br i1 %1681, label %originalBB409, label %originalBB409alteredBB

originalBB409:                                    ; preds = %1673, %originalBB409alteredBB
  %1682 = load i8*, i8** %19, align 8, !dbg !2645
  %1683 = load i64, i64* %29, align 8, !dbg !2645
  %1684 = getelementptr inbounds i8, i8* %1682, i64 %1683, !dbg !2645
  store i8 48, i8* %1684, align 1, !dbg !2645
  %1685 = load i32, i32* @x.37
  %1686 = load i32, i32* @y.38
  %1687 = sub i32 %1685, 1
  %1688 = mul i32 %1685, %1687
  %1689 = urem i32 %1688, 2
  %1690 = icmp eq i32 %1689, 0
  %1691 = icmp slt i32 %1686, 10
  %1692 = or i1 %1690, %1691
  br i1 %1692, label %originalBBpart2411, label %originalBB409alteredBB

originalBBpart2411:                               ; preds = %originalBB409
  br label %1693, !dbg !2645

1693:                                             ; preds = %originalBBpart2411, %originalBBpart2407
  %1694 = load i32, i32* @x.37
  %1695 = load i32, i32* @y.38
  %1696 = sub i32 %1694, 1
  %1697 = mul i32 %1694, %1696
  %1698 = urem i32 %1697, 2
  %1699 = icmp eq i32 %1698, 0
  %1700 = icmp slt i32 %1695, 10
  %1701 = or i1 %1699, %1700
  br i1 %1701, label %originalBB413, label %originalBB413alteredBB

originalBB413:                                    ; preds = %1693, %originalBB413alteredBB
  %1702 = load i64, i64* %29, align 8, !dbg !2648
  %1703 = add i64 %1702, 1, !dbg !2648
  store i64 %1703, i64* %29, align 8, !dbg !2648
  %1704 = load i32, i32* @x.37
  %1705 = load i32, i32* @y.38
  %1706 = sub i32 %1704, 1
  %1707 = mul i32 %1704, %1706
  %1708 = urem i32 %1707, 2
  %1709 = icmp eq i32 %1708, 0
  %1710 = icmp slt i32 %1705, 10
  %1711 = or i1 %1709, %1710
  br i1 %1711, label %originalBBpart2421, label %originalBB413alteredBB

originalBBpart2421:                               ; preds = %originalBB413
  br label %1712, !dbg !2648

1712:                                             ; preds = %originalBBpart2421
  %1713 = load i32, i32* @x.37
  %1714 = load i32, i32* @y.38
  %1715 = sub i32 %1713, 1
  %1716 = mul i32 %1713, %1715
  %1717 = urem i32 %1716, 2
  %1718 = icmp eq i32 %1717, 0
  %1719 = icmp slt i32 %1714, 10
  %1720 = or i1 %1718, %1719
  br i1 %1720, label %originalBB423, label %originalBB423alteredBB

originalBB423:                                    ; preds = %1712, %originalBB423alteredBB
  %1721 = load i32, i32* @x.37
  %1722 = load i32, i32* @y.38
  %1723 = sub i32 %1721, 1
  %1724 = mul i32 %1721, %1723
  %1725 = urem i32 %1724, 2
  %1726 = icmp eq i32 %1725, 0
  %1727 = icmp slt i32 %1722, 10
  %1728 = or i1 %1726, %1727
  br i1 %1728, label %originalBBpart2425, label %originalBB423alteredBB

originalBBpart2425:                               ; preds = %originalBB423
  br label %1729, !dbg !2649

1729:                                             ; preds = %originalBBpart2425
  %1730 = load i32, i32* @x.37
  %1731 = load i32, i32* @y.38
  %1732 = sub i32 %1730, 1
  %1733 = mul i32 %1730, %1732
  %1734 = urem i32 %1733, 2
  %1735 = icmp eq i32 %1734, 0
  %1736 = icmp slt i32 %1731, 10
  %1737 = or i1 %1735, %1736
  br i1 %1737, label %originalBB427, label %originalBB427alteredBB

originalBB427:                                    ; preds = %1729, %originalBB427alteredBB
  %1738 = load i64, i64* %29, align 8, !dbg !2650
  %1739 = load i64, i64* %20, align 8, !dbg !2650
  %1740 = icmp ult i64 %1738, %1739, !dbg !2650
  %1741 = load i32, i32* @x.37
  %1742 = load i32, i32* @y.38
  %1743 = sub i32 %1741, 1
  %1744 = mul i32 %1741, %1743
  %1745 = urem i32 %1744, 2
  %1746 = icmp eq i32 %1745, 0
  %1747 = icmp slt i32 %1742, 10
  %1748 = or i1 %1746, %1747
  br i1 %1748, label %originalBBpart2429, label %originalBB427alteredBB

originalBBpart2429:                               ; preds = %originalBB427
  br i1 %1740, label %1749, label %1769, !dbg !2653

1749:                                             ; preds = %originalBBpart2429
  %1750 = load i32, i32* @x.37
  %1751 = load i32, i32* @y.38
  %1752 = sub i32 %1750, 1
  %1753 = mul i32 %1750, %1752
  %1754 = urem i32 %1753, 2
  %1755 = icmp eq i32 %1754, 0
  %1756 = icmp slt i32 %1751, 10
  %1757 = or i1 %1755, %1756
  br i1 %1757, label %originalBB431, label %originalBB431alteredBB

originalBB431:                                    ; preds = %1749, %originalBB431alteredBB
  %1758 = load i8*, i8** %19, align 8, !dbg !2650
  %1759 = load i64, i64* %29, align 8, !dbg !2650
  %1760 = getelementptr inbounds i8, i8* %1758, i64 %1759, !dbg !2650
  store i8 48, i8* %1760, align 1, !dbg !2650
  %1761 = load i32, i32* @x.37
  %1762 = load i32, i32* @y.38
  %1763 = sub i32 %1761, 1
  %1764 = mul i32 %1761, %1763
  %1765 = urem i32 %1764, 2
  %1766 = icmp eq i32 %1765, 0
  %1767 = icmp slt i32 %1762, 10
  %1768 = or i1 %1766, %1767
  br i1 %1768, label %originalBBpart2433, label %originalBB431alteredBB

originalBBpart2433:                               ; preds = %originalBB431
  br label %1769, !dbg !2650

1769:                                             ; preds = %originalBBpart2433, %originalBBpart2429
  %1770 = load i32, i32* @x.37
  %1771 = load i32, i32* @y.38
  %1772 = sub i32 %1770, 1
  %1773 = mul i32 %1770, %1772
  %1774 = urem i32 %1773, 2
  %1775 = icmp eq i32 %1774, 0
  %1776 = icmp slt i32 %1771, 10
  %1777 = or i1 %1775, %1776
  br i1 %1777, label %originalBB435, label %originalBB435alteredBB

originalBB435:                                    ; preds = %1769, %originalBB435alteredBB
  %1778 = load i64, i64* %29, align 8, !dbg !2653
  %1779 = add i64 %1778, 1, !dbg !2653
  store i64 %1779, i64* %29, align 8, !dbg !2653
  %1780 = load i32, i32* @x.37
  %1781 = load i32, i32* @y.38
  %1782 = sub i32 %1780, 1
  %1783 = mul i32 %1780, %1782
  %1784 = urem i32 %1783, 2
  %1785 = icmp eq i32 %1784, 0
  %1786 = icmp slt i32 %1781, 10
  %1787 = or i1 %1785, %1786
  br i1 %1787, label %originalBBpart2449, label %originalBB435alteredBB

originalBBpart2449:                               ; preds = %originalBB435
  br label %1788, !dbg !2653

1788:                                             ; preds = %originalBBpart2449
  %1789 = load i32, i32* @x.37
  %1790 = load i32, i32* @y.38
  %1791 = sub i32 %1789, 1
  %1792 = mul i32 %1789, %1791
  %1793 = urem i32 %1792, 2
  %1794 = icmp eq i32 %1793, 0
  %1795 = icmp slt i32 %1790, 10
  %1796 = or i1 %1794, %1795
  br i1 %1796, label %originalBB451, label %originalBB451alteredBB

originalBB451:                                    ; preds = %1788, %originalBB451alteredBB
  %1797 = load i32, i32* @x.37
  %1798 = load i32, i32* @y.38
  %1799 = sub i32 %1797, 1
  %1800 = mul i32 %1797, %1799
  %1801 = urem i32 %1800, 2
  %1802 = icmp eq i32 %1801, 0
  %1803 = icmp slt i32 %1798, 10
  %1804 = or i1 %1802, %1803
  br i1 %1804, label %originalBBpart2453, label %originalBB451alteredBB

originalBBpart2453:                               ; preds = %originalBB451
  br label %1805, !dbg !2654

1805:                                             ; preds = %originalBBpart2453, %originalBBpart2399, %originalBBpart2385, %originalBBpart2374, %originalBBpart2369
  %1806 = load i32, i32* @x.37
  %1807 = load i32, i32* @y.38
  %1808 = sub i32 %1806, 1
  %1809 = mul i32 %1806, %1808
  %1810 = urem i32 %1809, 2
  %1811 = icmp eq i32 %1810, 0
  %1812 = icmp slt i32 %1807, 10
  %1813 = or i1 %1811, %1812
  br i1 %1813, label %originalBB455, label %originalBB455alteredBB

originalBB455:                                    ; preds = %1805, %originalBB455alteredBB
  store i8 48, i8* %39, align 1, !dbg !2655
  %1814 = load i32, i32* @x.37
  %1815 = load i32, i32* @y.38
  %1816 = sub i32 %1814, 1
  %1817 = mul i32 %1814, %1816
  %1818 = urem i32 %1817, 2
  %1819 = icmp eq i32 %1818, 0
  %1820 = icmp slt i32 %1815, 10
  %1821 = or i1 %1819, %1820
  br i1 %1821, label %originalBBpart2457, label %originalBB455alteredBB

originalBBpart2457:                               ; preds = %originalBB455
  br label %1876, !dbg !2656

1822:                                             ; preds = %originalBBpart2251
  %1823 = load i32, i32* @x.37
  %1824 = load i32, i32* @y.38
  %1825 = sub i32 %1823, 1
  %1826 = mul i32 %1823, %1825
  %1827 = urem i32 %1826, 2
  %1828 = icmp eq i32 %1827, 0
  %1829 = icmp slt i32 %1824, 10
  %1830 = or i1 %1828, %1829
  br i1 %1830, label %originalBB459, label %originalBB459alteredBB

originalBB459:                                    ; preds = %1822, %originalBB459alteredBB
  %1831 = load i32, i32* %24, align 4, !dbg !2657
  %1832 = and i32 %1831, 1, !dbg !2659
  %1833 = icmp ne i32 %1832, 0, !dbg !2659
  %1834 = load i32, i32* @x.37
  %1835 = load i32, i32* @y.38
  %1836 = sub i32 %1834, 1
  %1837 = mul i32 %1834, %1836
  %1838 = urem i32 %1837, 2
  %1839 = icmp eq i32 %1838, 0
  %1840 = icmp slt i32 %1835, 10
  %1841 = or i1 %1839, %1840
  br i1 %1841, label %originalBBpart2471, label %originalBB459alteredBB

originalBBpart2471:                               ; preds = %originalBB459
  br i1 %1833, label %1842, label %1859, !dbg !2660

1842:                                             ; preds = %originalBBpart2471
  %1843 = load i32, i32* @x.37
  %1844 = load i32, i32* @y.38
  %1845 = sub i32 %1843, 1
  %1846 = mul i32 %1843, %1845
  %1847 = urem i32 %1846, 2
  %1848 = icmp eq i32 %1847, 0
  %1849 = icmp slt i32 %1844, 10
  %1850 = or i1 %1848, %1849
  br i1 %1850, label %originalBB473, label %originalBB473alteredBB

originalBB473:                                    ; preds = %1842, %originalBB473alteredBB
  %1851 = load i32, i32* @x.37
  %1852 = load i32, i32* @y.38
  %1853 = sub i32 %1851, 1
  %1854 = mul i32 %1851, %1853
  %1855 = urem i32 %1854, 2
  %1856 = icmp eq i32 %1855, 0
  %1857 = icmp slt i32 %1852, 10
  %1858 = or i1 %1856, %1857
  br i1 %1858, label %originalBBpart2475, label %originalBB473alteredBB

originalBBpart2475:                               ; preds = %originalBB473
  br label %6441, !dbg !2661

1859:                                             ; preds = %originalBBpart2471
  %1860 = load i32, i32* @x.37
  %1861 = load i32, i32* @y.38
  %1862 = sub i32 %1860, 1
  %1863 = mul i32 %1860, %1862
  %1864 = urem i32 %1863, 2
  %1865 = icmp eq i32 %1864, 0
  %1866 = icmp slt i32 %1861, 10
  %1867 = or i1 %1865, %1866
  br i1 %1867, label %originalBB477, label %originalBB477alteredBB

originalBB477:                                    ; preds = %1859, %originalBB477alteredBB
  %1868 = load i32, i32* @x.37
  %1869 = load i32, i32* @y.38
  %1870 = sub i32 %1868, 1
  %1871 = mul i32 %1868, %1870
  %1872 = urem i32 %1871, 2
  %1873 = icmp eq i32 %1872, 0
  %1874 = icmp slt i32 %1869, 10
  %1875 = or i1 %1873, %1874
  br i1 %1875, label %originalBBpart2479, label %originalBB477alteredBB

originalBBpart2479:                               ; preds = %originalBB477
  br label %1876

1876:                                             ; preds = %originalBBpart2479, %originalBBpart2457
  %1877 = load i32, i32* @x.37
  %1878 = load i32, i32* @y.38
  %1879 = sub i32 %1877, 1
  %1880 = mul i32 %1877, %1879
  %1881 = urem i32 %1880, 2
  %1882 = icmp eq i32 %1881, 0
  %1883 = icmp slt i32 %1878, 10
  %1884 = or i1 %1882, %1883
  br i1 %1884, label %originalBB481, label %originalBB481alteredBB

originalBB481:                                    ; preds = %1876, %originalBB481alteredBB
  %1885 = load i32, i32* @x.37
  %1886 = load i32, i32* @y.38
  %1887 = sub i32 %1885, 1
  %1888 = mul i32 %1885, %1887
  %1889 = urem i32 %1888, 2
  %1890 = icmp eq i32 %1889, 0
  %1891 = icmp slt i32 %1886, 10
  %1892 = or i1 %1890, %1891
  br i1 %1892, label %originalBBpart2483, label %originalBB481alteredBB

originalBBpart2483:                               ; preds = %originalBB481
  br label %5465, !dbg !2662

1893:                                             ; preds = %originalBBpart2247
  %1894 = load i32, i32* @x.37
  %1895 = load i32, i32* @y.38
  %1896 = sub i32 %1894, 1
  %1897 = mul i32 %1894, %1896
  %1898 = urem i32 %1897, 2
  %1899 = icmp eq i32 %1898, 0
  %1900 = icmp slt i32 %1895, 10
  %1901 = or i1 %1899, %1900
  br i1 %1901, label %originalBB485, label %originalBB485alteredBB

originalBB485:                                    ; preds = %1893, %originalBB485alteredBB
  %1902 = load i32, i32* %23, align 4, !dbg !2663
  %1903 = load i32, i32* @x.37
  %1904 = load i32, i32* @y.38
  %1905 = sub i32 %1903, 1
  %1906 = mul i32 %1903, %1905
  %1907 = urem i32 %1906, 2
  %1908 = icmp eq i32 %1907, 0
  %1909 = icmp slt i32 %1904, 10
  %1910 = or i1 %1908, %1909
  br i1 %1910, label %originalBBpart2487, label %originalBB485alteredBB

originalBBpart2487:                               ; preds = %originalBB485
  switch i32 %1902, label %2467 [
    i32 2, label %1911
    i32 5, label %1964
  ], !dbg !2664

1911:                                             ; preds = %originalBBpart2487
  %1912 = load i32, i32* @x.37
  %1913 = load i32, i32* @y.38
  %1914 = sub i32 %1912, 1
  %1915 = mul i32 %1912, %1914
  %1916 = urem i32 %1915, 2
  %1917 = icmp eq i32 %1916, 0
  %1918 = icmp slt i32 %1913, 10
  %1919 = or i1 %1917, %1918
  br i1 %1919, label %originalBB489, label %originalBB489alteredBB

originalBB489:                                    ; preds = %1911, %originalBB489alteredBB
  %1920 = load i8, i8* %35, align 1, !dbg !2665
  %1921 = trunc i8 %1920 to i1, !dbg !2665
  %1922 = load i32, i32* @x.37
  %1923 = load i32, i32* @y.38
  %1924 = sub i32 %1922, 1
  %1925 = mul i32 %1922, %1924
  %1926 = urem i32 %1925, 2
  %1927 = icmp eq i32 %1926, 0
  %1928 = icmp slt i32 %1923, 10
  %1929 = or i1 %1927, %1928
  br i1 %1929, label %originalBBpart2491, label %originalBB489alteredBB

originalBBpart2491:                               ; preds = %originalBB489
  br i1 %1921, label %1930, label %1947, !dbg !2668

1930:                                             ; preds = %originalBBpart2491
  %1931 = load i32, i32* @x.37
  %1932 = load i32, i32* @y.38
  %1933 = sub i32 %1931, 1
  %1934 = mul i32 %1931, %1933
  %1935 = urem i32 %1934, 2
  %1936 = icmp eq i32 %1935, 0
  %1937 = icmp slt i32 %1932, 10
  %1938 = or i1 %1936, %1937
  br i1 %1938, label %originalBB493, label %originalBB493alteredBB

originalBB493:                                    ; preds = %1930, %originalBB493alteredBB
  %1939 = load i32, i32* @x.37
  %1940 = load i32, i32* @y.38
  %1941 = sub i32 %1939, 1
  %1942 = mul i32 %1939, %1941
  %1943 = urem i32 %1942, 2
  %1944 = icmp eq i32 %1943, 0
  %1945 = icmp slt i32 %1940, 10
  %1946 = or i1 %1944, %1945
  br i1 %1946, label %originalBBpart2495, label %originalBB493alteredBB

originalBBpart2495:                               ; preds = %originalBB493
  br label %6990, !dbg !2669

1947:                                             ; preds = %originalBBpart2491
  %1948 = load i32, i32* @x.37
  %1949 = load i32, i32* @y.38
  %1950 = sub i32 %1948, 1
  %1951 = mul i32 %1948, %1950
  %1952 = urem i32 %1951, 2
  %1953 = icmp eq i32 %1952, 0
  %1954 = icmp slt i32 %1949, 10
  %1955 = or i1 %1953, %1954
  br i1 %1955, label %originalBB497, label %originalBB497alteredBB

originalBB497:                                    ; preds = %1947, %originalBB497alteredBB
  %1956 = load i32, i32* @x.37
  %1957 = load i32, i32* @y.38
  %1958 = sub i32 %1956, 1
  %1959 = mul i32 %1956, %1958
  %1960 = urem i32 %1959, 2
  %1961 = icmp eq i32 %1960, 0
  %1962 = icmp slt i32 %1957, 10
  %1963 = or i1 %1961, %1962
  br i1 %1963, label %originalBBpart2499, label %originalBB497alteredBB

originalBBpart2499:                               ; preds = %originalBB497
  br label %2484, !dbg !2670

1964:                                             ; preds = %originalBBpart2487
  %1965 = load i32, i32* @x.37
  %1966 = load i32, i32* @y.38
  %1967 = sub i32 %1965, 1
  %1968 = mul i32 %1965, %1967
  %1969 = urem i32 %1968, 2
  %1970 = icmp eq i32 %1969, 0
  %1971 = icmp slt i32 %1966, 10
  %1972 = or i1 %1970, %1971
  br i1 %1972, label %originalBB501, label %originalBB501alteredBB

originalBB501:                                    ; preds = %1964, %originalBB501alteredBB
  %1973 = load i32, i32* %24, align 4, !dbg !2671
  %1974 = and i32 %1973, 4, !dbg !2673
  %1975 = icmp ne i32 %1974, 0, !dbg !2673
  %1976 = load i32, i32* @x.37
  %1977 = load i32, i32* @y.38
  %1978 = sub i32 %1976, 1
  %1979 = mul i32 %1976, %1978
  %1980 = urem i32 %1979, 2
  %1981 = icmp eq i32 %1980, 0
  %1982 = icmp slt i32 %1977, 10
  %1983 = or i1 %1981, %1982
  br i1 %1983, label %originalBBpart2506, label %originalBB501alteredBB

originalBBpart2506:                               ; preds = %originalBB501
  br i1 %1975, label %1984, label %2450, !dbg !2674

1984:                                             ; preds = %originalBBpart2506
  %1985 = load i32, i32* @x.37
  %1986 = load i32, i32* @y.38
  %1987 = sub i32 %1985, 1
  %1988 = mul i32 %1985, %1987
  %1989 = urem i32 %1988, 2
  %1990 = icmp eq i32 %1989, 0
  %1991 = icmp slt i32 %1986, 10
  %1992 = or i1 %1990, %1991
  br i1 %1992, label %originalBB508, label %originalBB508alteredBB

originalBB508:                                    ; preds = %1984, %originalBB508alteredBB
  %1993 = load i64, i64* %28, align 8, !dbg !2675
  %1994 = add i64 %1993, 2, !dbg !2676
  %1995 = load i64, i64* %22, align 8, !dbg !2677
  %1996 = icmp ult i64 %1994, %1995, !dbg !2678
  %1997 = load i32, i32* @x.37
  %1998 = load i32, i32* @y.38
  %1999 = sub i32 %1997, 1
  %2000 = mul i32 %1997, %1999
  %2001 = urem i32 %2000, 2
  %2002 = icmp eq i32 %2001, 0
  %2003 = icmp slt i32 %1998, 10
  %2004 = or i1 %2002, %2003
  br i1 %2004, label %originalBBpart2521, label %originalBB508alteredBB

originalBBpart2521:                               ; preds = %originalBB508
  br i1 %1996, label %2005, label %2450, !dbg !2679

2005:                                             ; preds = %originalBBpart2521
  %2006 = load i32, i32* @x.37
  %2007 = load i32, i32* @y.38
  %2008 = sub i32 %2006, 1
  %2009 = mul i32 %2006, %2008
  %2010 = urem i32 %2009, 2
  %2011 = icmp eq i32 %2010, 0
  %2012 = icmp slt i32 %2007, 10
  %2013 = or i1 %2011, %2012
  br i1 %2013, label %originalBB523, label %originalBB523alteredBB

originalBB523:                                    ; preds = %2005, %originalBB523alteredBB
  %2014 = load i8*, i8** %21, align 8, !dbg !2680
  %2015 = load i64, i64* %28, align 8, !dbg !2681
  %2016 = add i64 %2015, 1, !dbg !2682
  %2017 = getelementptr inbounds i8, i8* %2014, i64 %2016, !dbg !2680
  %2018 = load i8, i8* %2017, align 1, !dbg !2680
  %2019 = sext i8 %2018 to i32, !dbg !2680
  %2020 = icmp eq i32 %2019, 63, !dbg !2683
  %2021 = load i32, i32* @x.37
  %2022 = load i32, i32* @y.38
  %2023 = sub i32 %2021, 1
  %2024 = mul i32 %2021, %2023
  %2025 = urem i32 %2024, 2
  %2026 = icmp eq i32 %2025, 0
  %2027 = icmp slt i32 %2022, 10
  %2028 = or i1 %2026, %2027
  br i1 %2028, label %originalBBpart2531, label %originalBB523alteredBB

originalBBpart2531:                               ; preds = %originalBB523
  br i1 %2020, label %2029, label %2450, !dbg !2684

2029:                                             ; preds = %originalBBpart2531
  %2030 = load i32, i32* @x.37
  %2031 = load i32, i32* @y.38
  %2032 = sub i32 %2030, 1
  %2033 = mul i32 %2030, %2032
  %2034 = urem i32 %2033, 2
  %2035 = icmp eq i32 %2034, 0
  %2036 = icmp slt i32 %2031, 10
  %2037 = or i1 %2035, %2036
  br i1 %2037, label %originalBB533, label %originalBB533alteredBB

originalBB533:                                    ; preds = %2029, %originalBB533alteredBB
  %2038 = load i8*, i8** %21, align 8, !dbg !2685
  %2039 = load i64, i64* %28, align 8, !dbg !2686
  %2040 = add i64 %2039, 2, !dbg !2687
  %2041 = getelementptr inbounds i8, i8* %2038, i64 %2040, !dbg !2685
  %2042 = load i8, i8* %2041, align 1, !dbg !2685
  %2043 = sext i8 %2042 to i32, !dbg !2685
  %2044 = load i32, i32* @x.37
  %2045 = load i32, i32* @y.38
  %2046 = sub i32 %2044, 1
  %2047 = mul i32 %2044, %2046
  %2048 = urem i32 %2047, 2
  %2049 = icmp eq i32 %2048, 0
  %2050 = icmp slt i32 %2045, 10
  %2051 = or i1 %2049, %2050
  br i1 %2051, label %originalBBpart2542, label %originalBB533alteredBB

originalBBpart2542:                               ; preds = %originalBB533
  switch i32 %2043, label %2416 [
    i32 33, label %2052
    i32 39, label %2052
    i32 40, label %2052
    i32 41, label %2052
    i32 45, label %2052
    i32 47, label %2052
    i32 60, label %2052
    i32 61, label %2052
    i32 62, label %2052
  ], !dbg !2688

2052:                                             ; preds = %originalBBpart2542, %originalBBpart2542, %originalBBpart2542, %originalBBpart2542, %originalBBpart2542, %originalBBpart2542, %originalBBpart2542, %originalBBpart2542, %originalBBpart2542
  %2053 = load i32, i32* @x.37
  %2054 = load i32, i32* @y.38
  %2055 = sub i32 %2053, 1
  %2056 = mul i32 %2053, %2055
  %2057 = urem i32 %2056, 2
  %2058 = icmp eq i32 %2057, 0
  %2059 = icmp slt i32 %2054, 10
  %2060 = or i1 %2058, %2059
  br i1 %2060, label %originalBB544, label %originalBB544alteredBB

originalBB544:                                    ; preds = %2052, %originalBB544alteredBB
  %2061 = load i8, i8* %35, align 1, !dbg !2689
  %2062 = trunc i8 %2061 to i1, !dbg !2689
  %2063 = load i32, i32* @x.37
  %2064 = load i32, i32* @y.38
  %2065 = sub i32 %2063, 1
  %2066 = mul i32 %2063, %2065
  %2067 = urem i32 %2066, 2
  %2068 = icmp eq i32 %2067, 0
  %2069 = icmp slt i32 %2064, 10
  %2070 = or i1 %2068, %2069
  br i1 %2070, label %originalBBpart2546, label %originalBB544alteredBB

originalBBpart2546:                               ; preds = %originalBB544
  br i1 %2062, label %2071, label %2088, !dbg !2692

2071:                                             ; preds = %originalBBpart2546
  %2072 = load i32, i32* @x.37
  %2073 = load i32, i32* @y.38
  %2074 = sub i32 %2072, 1
  %2075 = mul i32 %2072, %2074
  %2076 = urem i32 %2075, 2
  %2077 = icmp eq i32 %2076, 0
  %2078 = icmp slt i32 %2073, 10
  %2079 = or i1 %2077, %2078
  br i1 %2079, label %originalBB548, label %originalBB548alteredBB

originalBB548:                                    ; preds = %2071, %originalBB548alteredBB
  %2080 = load i32, i32* @x.37
  %2081 = load i32, i32* @y.38
  %2082 = sub i32 %2080, 1
  %2083 = mul i32 %2080, %2082
  %2084 = urem i32 %2083, 2
  %2085 = icmp eq i32 %2084, 0
  %2086 = icmp slt i32 %2081, 10
  %2087 = or i1 %2085, %2086
  br i1 %2087, label %originalBBpart2550, label %originalBB548alteredBB

originalBBpart2550:                               ; preds = %originalBB548
  br label %6990, !dbg !2693

2088:                                             ; preds = %originalBBpart2546
  %2089 = load i32, i32* @x.37
  %2090 = load i32, i32* @y.38
  %2091 = sub i32 %2089, 1
  %2092 = mul i32 %2089, %2091
  %2093 = urem i32 %2092, 2
  %2094 = icmp eq i32 %2093, 0
  %2095 = icmp slt i32 %2090, 10
  %2096 = or i1 %2094, %2095
  br i1 %2096, label %originalBB552, label %originalBB552alteredBB

originalBB552:                                    ; preds = %2088, %originalBB552alteredBB
  %2097 = load i8*, i8** %21, align 8, !dbg !2694
  %2098 = load i64, i64* %28, align 8, !dbg !2695
  %2099 = add i64 %2098, 2, !dbg !2696
  %2100 = getelementptr inbounds i8, i8* %2097, i64 %2099, !dbg !2694
  %2101 = load i8, i8* %2100, align 1, !dbg !2694
  store i8 %2101, i8* %39, align 1, !dbg !2697
  %2102 = load i64, i64* %28, align 8, !dbg !2698
  %2103 = add i64 %2102, 2, !dbg !2698
  store i64 %2103, i64* %28, align 8, !dbg !2698
  %2104 = load i32, i32* @x.37
  %2105 = load i32, i32* @y.38
  %2106 = sub i32 %2104, 1
  %2107 = mul i32 %2104, %2106
  %2108 = urem i32 %2107, 2
  %2109 = icmp eq i32 %2108, 0
  %2110 = icmp slt i32 %2105, 10
  %2111 = or i1 %2109, %2110
  br i1 %2111, label %originalBBpart2563, label %originalBB552alteredBB

originalBBpart2563:                               ; preds = %originalBB552
  br label %2112, !dbg !2699

2112:                                             ; preds = %originalBBpart2563
  %2113 = load i32, i32* @x.37
  %2114 = load i32, i32* @y.38
  %2115 = sub i32 %2113, 1
  %2116 = mul i32 %2113, %2115
  %2117 = urem i32 %2116, 2
  %2118 = icmp eq i32 %2117, 0
  %2119 = icmp slt i32 %2114, 10
  %2120 = or i1 %2118, %2119
  br i1 %2120, label %originalBB565, label %originalBB565alteredBB

originalBB565:                                    ; preds = %2112, %originalBB565alteredBB
  %2121 = load i64, i64* %29, align 8, !dbg !2700
  %2122 = load i64, i64* %20, align 8, !dbg !2700
  %2123 = icmp ult i64 %2121, %2122, !dbg !2700
  %2124 = load i32, i32* @x.37
  %2125 = load i32, i32* @y.38
  %2126 = sub i32 %2124, 1
  %2127 = mul i32 %2124, %2126
  %2128 = urem i32 %2127, 2
  %2129 = icmp eq i32 %2128, 0
  %2130 = icmp slt i32 %2125, 10
  %2131 = or i1 %2129, %2130
  br i1 %2131, label %originalBBpart2567, label %originalBB565alteredBB

originalBBpart2567:                               ; preds = %originalBB565
  br i1 %2123, label %2132, label %2152, !dbg !2703

2132:                                             ; preds = %originalBBpart2567
  %2133 = load i32, i32* @x.37
  %2134 = load i32, i32* @y.38
  %2135 = sub i32 %2133, 1
  %2136 = mul i32 %2133, %2135
  %2137 = urem i32 %2136, 2
  %2138 = icmp eq i32 %2137, 0
  %2139 = icmp slt i32 %2134, 10
  %2140 = or i1 %2138, %2139
  br i1 %2140, label %originalBB569, label %originalBB569alteredBB

originalBB569:                                    ; preds = %2132, %originalBB569alteredBB
  %2141 = load i8*, i8** %19, align 8, !dbg !2700
  %2142 = load i64, i64* %29, align 8, !dbg !2700
  %2143 = getelementptr inbounds i8, i8* %2141, i64 %2142, !dbg !2700
  store i8 63, i8* %2143, align 1, !dbg !2700
  %2144 = load i32, i32* @x.37
  %2145 = load i32, i32* @y.38
  %2146 = sub i32 %2144, 1
  %2147 = mul i32 %2144, %2146
  %2148 = urem i32 %2147, 2
  %2149 = icmp eq i32 %2148, 0
  %2150 = icmp slt i32 %2145, 10
  %2151 = or i1 %2149, %2150
  br i1 %2151, label %originalBBpart2571, label %originalBB569alteredBB

originalBBpart2571:                               ; preds = %originalBB569
  br label %2152, !dbg !2700

2152:                                             ; preds = %originalBBpart2571, %originalBBpart2567
  %2153 = load i32, i32* @x.37
  %2154 = load i32, i32* @y.38
  %2155 = sub i32 %2153, 1
  %2156 = mul i32 %2153, %2155
  %2157 = urem i32 %2156, 2
  %2158 = icmp eq i32 %2157, 0
  %2159 = icmp slt i32 %2154, 10
  %2160 = or i1 %2158, %2159
  br i1 %2160, label %originalBB573, label %originalBB573alteredBB

originalBB573:                                    ; preds = %2152, %originalBB573alteredBB
  %2161 = load i64, i64* %29, align 8, !dbg !2703
  %2162 = add i64 %2161, 1, !dbg !2703
  store i64 %2162, i64* %29, align 8, !dbg !2703
  %2163 = load i32, i32* @x.37
  %2164 = load i32, i32* @y.38
  %2165 = sub i32 %2163, 1
  %2166 = mul i32 %2163, %2165
  %2167 = urem i32 %2166, 2
  %2168 = icmp eq i32 %2167, 0
  %2169 = icmp slt i32 %2164, 10
  %2170 = or i1 %2168, %2169
  br i1 %2170, label %originalBBpart2590, label %originalBB573alteredBB

originalBBpart2590:                               ; preds = %originalBB573
  br label %2171, !dbg !2703

2171:                                             ; preds = %originalBBpart2590
  %2172 = load i32, i32* @x.37
  %2173 = load i32, i32* @y.38
  %2174 = sub i32 %2172, 1
  %2175 = mul i32 %2172, %2174
  %2176 = urem i32 %2175, 2
  %2177 = icmp eq i32 %2176, 0
  %2178 = icmp slt i32 %2173, 10
  %2179 = or i1 %2177, %2178
  br i1 %2179, label %originalBB592, label %originalBB592alteredBB

originalBB592:                                    ; preds = %2171, %originalBB592alteredBB
  %2180 = load i32, i32* @x.37
  %2181 = load i32, i32* @y.38
  %2182 = sub i32 %2180, 1
  %2183 = mul i32 %2180, %2182
  %2184 = urem i32 %2183, 2
  %2185 = icmp eq i32 %2184, 0
  %2186 = icmp slt i32 %2181, 10
  %2187 = or i1 %2185, %2186
  br i1 %2187, label %originalBBpart2594, label %originalBB592alteredBB

originalBBpart2594:                               ; preds = %originalBB592
  br label %2188, !dbg !2704

2188:                                             ; preds = %originalBBpart2594
  %2189 = load i32, i32* @x.37
  %2190 = load i32, i32* @y.38
  %2191 = sub i32 %2189, 1
  %2192 = mul i32 %2189, %2191
  %2193 = urem i32 %2192, 2
  %2194 = icmp eq i32 %2193, 0
  %2195 = icmp slt i32 %2190, 10
  %2196 = or i1 %2194, %2195
  br i1 %2196, label %originalBB596, label %originalBB596alteredBB

originalBB596:                                    ; preds = %2188, %originalBB596alteredBB
  %2197 = load i64, i64* %29, align 8, !dbg !2705
  %2198 = load i64, i64* %20, align 8, !dbg !2705
  %2199 = icmp ult i64 %2197, %2198, !dbg !2705
  %2200 = load i32, i32* @x.37
  %2201 = load i32, i32* @y.38
  %2202 = sub i32 %2200, 1
  %2203 = mul i32 %2200, %2202
  %2204 = urem i32 %2203, 2
  %2205 = icmp eq i32 %2204, 0
  %2206 = icmp slt i32 %2201, 10
  %2207 = or i1 %2205, %2206
  br i1 %2207, label %originalBBpart2598, label %originalBB596alteredBB

originalBBpart2598:                               ; preds = %originalBB596
  br i1 %2199, label %2208, label %2228, !dbg !2708

2208:                                             ; preds = %originalBBpart2598
  %2209 = load i32, i32* @x.37
  %2210 = load i32, i32* @y.38
  %2211 = sub i32 %2209, 1
  %2212 = mul i32 %2209, %2211
  %2213 = urem i32 %2212, 2
  %2214 = icmp eq i32 %2213, 0
  %2215 = icmp slt i32 %2210, 10
  %2216 = or i1 %2214, %2215
  br i1 %2216, label %originalBB600, label %originalBB600alteredBB

originalBB600:                                    ; preds = %2208, %originalBB600alteredBB
  %2217 = load i8*, i8** %19, align 8, !dbg !2705
  %2218 = load i64, i64* %29, align 8, !dbg !2705
  %2219 = getelementptr inbounds i8, i8* %2217, i64 %2218, !dbg !2705
  store i8 34, i8* %2219, align 1, !dbg !2705
  %2220 = load i32, i32* @x.37
  %2221 = load i32, i32* @y.38
  %2222 = sub i32 %2220, 1
  %2223 = mul i32 %2220, %2222
  %2224 = urem i32 %2223, 2
  %2225 = icmp eq i32 %2224, 0
  %2226 = icmp slt i32 %2221, 10
  %2227 = or i1 %2225, %2226
  br i1 %2227, label %originalBBpart2602, label %originalBB600alteredBB

originalBBpart2602:                               ; preds = %originalBB600
  br label %2228, !dbg !2705

2228:                                             ; preds = %originalBBpart2602, %originalBBpart2598
  %2229 = load i32, i32* @x.37
  %2230 = load i32, i32* @y.38
  %2231 = sub i32 %2229, 1
  %2232 = mul i32 %2229, %2231
  %2233 = urem i32 %2232, 2
  %2234 = icmp eq i32 %2233, 0
  %2235 = icmp slt i32 %2230, 10
  %2236 = or i1 %2234, %2235
  br i1 %2236, label %originalBB604, label %originalBB604alteredBB

originalBB604:                                    ; preds = %2228, %originalBB604alteredBB
  %2237 = load i64, i64* %29, align 8, !dbg !2708
  %2238 = add i64 %2237, 1, !dbg !2708
  store i64 %2238, i64* %29, align 8, !dbg !2708
  %2239 = load i32, i32* @x.37
  %2240 = load i32, i32* @y.38
  %2241 = sub i32 %2239, 1
  %2242 = mul i32 %2239, %2241
  %2243 = urem i32 %2242, 2
  %2244 = icmp eq i32 %2243, 0
  %2245 = icmp slt i32 %2240, 10
  %2246 = or i1 %2244, %2245
  br i1 %2246, label %originalBBpart2616, label %originalBB604alteredBB

originalBBpart2616:                               ; preds = %originalBB604
  br label %2247, !dbg !2708

2247:                                             ; preds = %originalBBpart2616
  %2248 = load i32, i32* @x.37
  %2249 = load i32, i32* @y.38
  %2250 = sub i32 %2248, 1
  %2251 = mul i32 %2248, %2250
  %2252 = urem i32 %2251, 2
  %2253 = icmp eq i32 %2252, 0
  %2254 = icmp slt i32 %2249, 10
  %2255 = or i1 %2253, %2254
  br i1 %2255, label %originalBB618, label %originalBB618alteredBB

originalBB618:                                    ; preds = %2247, %originalBB618alteredBB
  %2256 = load i32, i32* @x.37
  %2257 = load i32, i32* @y.38
  %2258 = sub i32 %2256, 1
  %2259 = mul i32 %2256, %2258
  %2260 = urem i32 %2259, 2
  %2261 = icmp eq i32 %2260, 0
  %2262 = icmp slt i32 %2257, 10
  %2263 = or i1 %2261, %2262
  br i1 %2263, label %originalBBpart2620, label %originalBB618alteredBB

originalBBpart2620:                               ; preds = %originalBB618
  br label %2264, !dbg !2709

2264:                                             ; preds = %originalBBpart2620
  %2265 = load i32, i32* @x.37
  %2266 = load i32, i32* @y.38
  %2267 = sub i32 %2265, 1
  %2268 = mul i32 %2265, %2267
  %2269 = urem i32 %2268, 2
  %2270 = icmp eq i32 %2269, 0
  %2271 = icmp slt i32 %2266, 10
  %2272 = or i1 %2270, %2271
  br i1 %2272, label %originalBB622, label %originalBB622alteredBB

originalBB622:                                    ; preds = %2264, %originalBB622alteredBB
  %2273 = load i64, i64* %29, align 8, !dbg !2710
  %2274 = load i64, i64* %20, align 8, !dbg !2710
  %2275 = icmp ult i64 %2273, %2274, !dbg !2710
  %2276 = load i32, i32* @x.37
  %2277 = load i32, i32* @y.38
  %2278 = sub i32 %2276, 1
  %2279 = mul i32 %2276, %2278
  %2280 = urem i32 %2279, 2
  %2281 = icmp eq i32 %2280, 0
  %2282 = icmp slt i32 %2277, 10
  %2283 = or i1 %2281, %2282
  br i1 %2283, label %originalBBpart2624, label %originalBB622alteredBB

originalBBpart2624:                               ; preds = %originalBB622
  br i1 %2275, label %2284, label %2304, !dbg !2713

2284:                                             ; preds = %originalBBpart2624
  %2285 = load i32, i32* @x.37
  %2286 = load i32, i32* @y.38
  %2287 = sub i32 %2285, 1
  %2288 = mul i32 %2285, %2287
  %2289 = urem i32 %2288, 2
  %2290 = icmp eq i32 %2289, 0
  %2291 = icmp slt i32 %2286, 10
  %2292 = or i1 %2290, %2291
  br i1 %2292, label %originalBB626, label %originalBB626alteredBB

originalBB626:                                    ; preds = %2284, %originalBB626alteredBB
  %2293 = load i8*, i8** %19, align 8, !dbg !2710
  %2294 = load i64, i64* %29, align 8, !dbg !2710
  %2295 = getelementptr inbounds i8, i8* %2293, i64 %2294, !dbg !2710
  store i8 34, i8* %2295, align 1, !dbg !2710
  %2296 = load i32, i32* @x.37
  %2297 = load i32, i32* @y.38
  %2298 = sub i32 %2296, 1
  %2299 = mul i32 %2296, %2298
  %2300 = urem i32 %2299, 2
  %2301 = icmp eq i32 %2300, 0
  %2302 = icmp slt i32 %2297, 10
  %2303 = or i1 %2301, %2302
  br i1 %2303, label %originalBBpart2628, label %originalBB626alteredBB

originalBBpart2628:                               ; preds = %originalBB626
  br label %2304, !dbg !2710

2304:                                             ; preds = %originalBBpart2628, %originalBBpart2624
  %2305 = load i32, i32* @x.37
  %2306 = load i32, i32* @y.38
  %2307 = sub i32 %2305, 1
  %2308 = mul i32 %2305, %2307
  %2309 = urem i32 %2308, 2
  %2310 = icmp eq i32 %2309, 0
  %2311 = icmp slt i32 %2306, 10
  %2312 = or i1 %2310, %2311
  br i1 %2312, label %originalBB630, label %originalBB630alteredBB

originalBB630:                                    ; preds = %2304, %originalBB630alteredBB
  %2313 = load i64, i64* %29, align 8, !dbg !2713
  %2314 = add i64 %2313, 1, !dbg !2713
  store i64 %2314, i64* %29, align 8, !dbg !2713
  %2315 = load i32, i32* @x.37
  %2316 = load i32, i32* @y.38
  %2317 = sub i32 %2315, 1
  %2318 = mul i32 %2315, %2317
  %2319 = urem i32 %2318, 2
  %2320 = icmp eq i32 %2319, 0
  %2321 = icmp slt i32 %2316, 10
  %2322 = or i1 %2320, %2321
  br i1 %2322, label %originalBBpart2639, label %originalBB630alteredBB

originalBBpart2639:                               ; preds = %originalBB630
  br label %2323, !dbg !2713

2323:                                             ; preds = %originalBBpart2639
  %2324 = load i32, i32* @x.37
  %2325 = load i32, i32* @y.38
  %2326 = sub i32 %2324, 1
  %2327 = mul i32 %2324, %2326
  %2328 = urem i32 %2327, 2
  %2329 = icmp eq i32 %2328, 0
  %2330 = icmp slt i32 %2325, 10
  %2331 = or i1 %2329, %2330
  br i1 %2331, label %originalBB641, label %originalBB641alteredBB

originalBB641:                                    ; preds = %2323, %originalBB641alteredBB
  %2332 = load i32, i32* @x.37
  %2333 = load i32, i32* @y.38
  %2334 = sub i32 %2332, 1
  %2335 = mul i32 %2332, %2334
  %2336 = urem i32 %2335, 2
  %2337 = icmp eq i32 %2336, 0
  %2338 = icmp slt i32 %2333, 10
  %2339 = or i1 %2337, %2338
  br i1 %2339, label %originalBBpart2643, label %originalBB641alteredBB

originalBBpart2643:                               ; preds = %originalBB641
  br label %2340, !dbg !2714

2340:                                             ; preds = %originalBBpart2643
  %2341 = load i32, i32* @x.37
  %2342 = load i32, i32* @y.38
  %2343 = sub i32 %2341, 1
  %2344 = mul i32 %2341, %2343
  %2345 = urem i32 %2344, 2
  %2346 = icmp eq i32 %2345, 0
  %2347 = icmp slt i32 %2342, 10
  %2348 = or i1 %2346, %2347
  br i1 %2348, label %originalBB645, label %originalBB645alteredBB

originalBB645:                                    ; preds = %2340, %originalBB645alteredBB
  %2349 = load i64, i64* %29, align 8, !dbg !2715
  %2350 = load i64, i64* %20, align 8, !dbg !2715
  %2351 = icmp ult i64 %2349, %2350, !dbg !2715
  %2352 = load i32, i32* @x.37
  %2353 = load i32, i32* @y.38
  %2354 = sub i32 %2352, 1
  %2355 = mul i32 %2352, %2354
  %2356 = urem i32 %2355, 2
  %2357 = icmp eq i32 %2356, 0
  %2358 = icmp slt i32 %2353, 10
  %2359 = or i1 %2357, %2358
  br i1 %2359, label %originalBBpart2647, label %originalBB645alteredBB

originalBBpart2647:                               ; preds = %originalBB645
  br i1 %2351, label %2360, label %2380, !dbg !2718

2360:                                             ; preds = %originalBBpart2647
  %2361 = load i32, i32* @x.37
  %2362 = load i32, i32* @y.38
  %2363 = sub i32 %2361, 1
  %2364 = mul i32 %2361, %2363
  %2365 = urem i32 %2364, 2
  %2366 = icmp eq i32 %2365, 0
  %2367 = icmp slt i32 %2362, 10
  %2368 = or i1 %2366, %2367
  br i1 %2368, label %originalBB649, label %originalBB649alteredBB

originalBB649:                                    ; preds = %2360, %originalBB649alteredBB
  %2369 = load i8*, i8** %19, align 8, !dbg !2715
  %2370 = load i64, i64* %29, align 8, !dbg !2715
  %2371 = getelementptr inbounds i8, i8* %2369, i64 %2370, !dbg !2715
  store i8 63, i8* %2371, align 1, !dbg !2715
  %2372 = load i32, i32* @x.37
  %2373 = load i32, i32* @y.38
  %2374 = sub i32 %2372, 1
  %2375 = mul i32 %2372, %2374
  %2376 = urem i32 %2375, 2
  %2377 = icmp eq i32 %2376, 0
  %2378 = icmp slt i32 %2373, 10
  %2379 = or i1 %2377, %2378
  br i1 %2379, label %originalBBpart2651, label %originalBB649alteredBB

originalBBpart2651:                               ; preds = %originalBB649
  br label %2380, !dbg !2715

2380:                                             ; preds = %originalBBpart2651, %originalBBpart2647
  %2381 = load i32, i32* @x.37
  %2382 = load i32, i32* @y.38
  %2383 = sub i32 %2381, 1
  %2384 = mul i32 %2381, %2383
  %2385 = urem i32 %2384, 2
  %2386 = icmp eq i32 %2385, 0
  %2387 = icmp slt i32 %2382, 10
  %2388 = or i1 %2386, %2387
  br i1 %2388, label %originalBB653, label %originalBB653alteredBB

originalBB653:                                    ; preds = %2380, %originalBB653alteredBB
  %2389 = load i64, i64* %29, align 8, !dbg !2718
  %2390 = add i64 %2389, 1, !dbg !2718
  store i64 %2390, i64* %29, align 8, !dbg !2718
  %2391 = load i32, i32* @x.37
  %2392 = load i32, i32* @y.38
  %2393 = sub i32 %2391, 1
  %2394 = mul i32 %2391, %2393
  %2395 = urem i32 %2394, 2
  %2396 = icmp eq i32 %2395, 0
  %2397 = icmp slt i32 %2392, 10
  %2398 = or i1 %2396, %2397
  br i1 %2398, label %originalBBpart2666, label %originalBB653alteredBB

originalBBpart2666:                               ; preds = %originalBB653
  br label %2399, !dbg !2718

2399:                                             ; preds = %originalBBpart2666
  %2400 = load i32, i32* @x.37
  %2401 = load i32, i32* @y.38
  %2402 = sub i32 %2400, 1
  %2403 = mul i32 %2400, %2402
  %2404 = urem i32 %2403, 2
  %2405 = icmp eq i32 %2404, 0
  %2406 = icmp slt i32 %2401, 10
  %2407 = or i1 %2405, %2406
  br i1 %2407, label %originalBB668, label %originalBB668alteredBB

originalBB668:                                    ; preds = %2399, %originalBB668alteredBB
  %2408 = load i32, i32* @x.37
  %2409 = load i32, i32* @y.38
  %2410 = sub i32 %2408, 1
  %2411 = mul i32 %2408, %2410
  %2412 = urem i32 %2411, 2
  %2413 = icmp eq i32 %2412, 0
  %2414 = icmp slt i32 %2409, 10
  %2415 = or i1 %2413, %2414
  br i1 %2415, label %originalBBpart2670, label %originalBB668alteredBB

originalBBpart2670:                               ; preds = %originalBB668
  br label %2433, !dbg !2719

2416:                                             ; preds = %originalBBpart2542
  %2417 = load i32, i32* @x.37
  %2418 = load i32, i32* @y.38
  %2419 = sub i32 %2417, 1
  %2420 = mul i32 %2417, %2419
  %2421 = urem i32 %2420, 2
  %2422 = icmp eq i32 %2421, 0
  %2423 = icmp slt i32 %2418, 10
  %2424 = or i1 %2422, %2423
  br i1 %2424, label %originalBB672, label %originalBB672alteredBB

originalBB672:                                    ; preds = %2416, %originalBB672alteredBB
  %2425 = load i32, i32* @x.37
  %2426 = load i32, i32* @y.38
  %2427 = sub i32 %2425, 1
  %2428 = mul i32 %2425, %2427
  %2429 = urem i32 %2428, 2
  %2430 = icmp eq i32 %2429, 0
  %2431 = icmp slt i32 %2426, 10
  %2432 = or i1 %2430, %2431
  br i1 %2432, label %originalBBpart2674, label %originalBB672alteredBB

originalBBpart2674:                               ; preds = %originalBB672
  br label %2433, !dbg !2720

2433:                                             ; preds = %originalBBpart2674, %originalBBpart2670
  %2434 = load i32, i32* @x.37
  %2435 = load i32, i32* @y.38
  %2436 = sub i32 %2434, 1
  %2437 = mul i32 %2434, %2436
  %2438 = urem i32 %2437, 2
  %2439 = icmp eq i32 %2438, 0
  %2440 = icmp slt i32 %2435, 10
  %2441 = or i1 %2439, %2440
  br i1 %2441, label %originalBB676, label %originalBB676alteredBB

originalBB676:                                    ; preds = %2433, %originalBB676alteredBB
  %2442 = load i32, i32* @x.37
  %2443 = load i32, i32* @y.38
  %2444 = sub i32 %2442, 1
  %2445 = mul i32 %2442, %2444
  %2446 = urem i32 %2445, 2
  %2447 = icmp eq i32 %2446, 0
  %2448 = icmp slt i32 %2443, 10
  %2449 = or i1 %2447, %2448
  br i1 %2449, label %originalBBpart2678, label %originalBB676alteredBB

originalBBpart2678:                               ; preds = %originalBB676
  br label %2450, !dbg !2721

2450:                                             ; preds = %originalBBpart2678, %originalBBpart2531, %originalBBpart2521, %originalBBpart2506
  %2451 = load i32, i32* @x.37
  %2452 = load i32, i32* @y.38
  %2453 = sub i32 %2451, 1
  %2454 = mul i32 %2451, %2453
  %2455 = urem i32 %2454, 2
  %2456 = icmp eq i32 %2455, 0
  %2457 = icmp slt i32 %2452, 10
  %2458 = or i1 %2456, %2457
  br i1 %2458, label %originalBB680, label %originalBB680alteredBB

originalBB680:                                    ; preds = %2450, %originalBB680alteredBB
  %2459 = load i32, i32* @x.37
  %2460 = load i32, i32* @y.38
  %2461 = sub i32 %2459, 1
  %2462 = mul i32 %2459, %2461
  %2463 = urem i32 %2462, 2
  %2464 = icmp eq i32 %2463, 0
  %2465 = icmp slt i32 %2460, 10
  %2466 = or i1 %2464, %2465
  br i1 %2466, label %originalBBpart2682, label %originalBB680alteredBB

originalBBpart2682:                               ; preds = %originalBB680
  br label %2484, !dbg !2722

2467:                                             ; preds = %originalBBpart2487
  %2468 = load i32, i32* @x.37
  %2469 = load i32, i32* @y.38
  %2470 = sub i32 %2468, 1
  %2471 = mul i32 %2468, %2470
  %2472 = urem i32 %2471, 2
  %2473 = icmp eq i32 %2472, 0
  %2474 = icmp slt i32 %2469, 10
  %2475 = or i1 %2473, %2474
  br i1 %2475, label %originalBB684, label %originalBB684alteredBB

originalBB684:                                    ; preds = %2467, %originalBB684alteredBB
  %2476 = load i32, i32* @x.37
  %2477 = load i32, i32* @y.38
  %2478 = sub i32 %2476, 1
  %2479 = mul i32 %2476, %2478
  %2480 = urem i32 %2479, 2
  %2481 = icmp eq i32 %2480, 0
  %2482 = icmp slt i32 %2477, 10
  %2483 = or i1 %2481, %2482
  br i1 %2483, label %originalBBpart2686, label %originalBB684alteredBB

originalBBpart2686:                               ; preds = %originalBB684
  br label %2484, !dbg !2723

2484:                                             ; preds = %originalBBpart2686, %originalBBpart2682, %originalBBpart2499
  %2485 = load i32, i32* @x.37
  %2486 = load i32, i32* @y.38
  %2487 = sub i32 %2485, 1
  %2488 = mul i32 %2485, %2487
  %2489 = urem i32 %2488, 2
  %2490 = icmp eq i32 %2489, 0
  %2491 = icmp slt i32 %2486, 10
  %2492 = or i1 %2490, %2491
  br i1 %2492, label %originalBB688, label %originalBB688alteredBB

originalBB688:                                    ; preds = %2484, %originalBB688alteredBB
  %2493 = load i32, i32* @x.37
  %2494 = load i32, i32* @y.38
  %2495 = sub i32 %2493, 1
  %2496 = mul i32 %2493, %2495
  %2497 = urem i32 %2496, 2
  %2498 = icmp eq i32 %2497, 0
  %2499 = icmp slt i32 %2494, 10
  %2500 = or i1 %2498, %2499
  br i1 %2500, label %originalBBpart2690, label %originalBB688alteredBB

originalBBpart2690:                               ; preds = %originalBB688
  br label %5465, !dbg !2724

2501:                                             ; preds = %originalBBpart2247
  %2502 = load i32, i32* @x.37
  %2503 = load i32, i32* @y.38
  %2504 = sub i32 %2502, 1
  %2505 = mul i32 %2502, %2504
  %2506 = urem i32 %2505, 2
  %2507 = icmp eq i32 %2506, 0
  %2508 = icmp slt i32 %2503, 10
  %2509 = or i1 %2507, %2508
  br i1 %2509, label %originalBB692, label %originalBB692alteredBB

originalBB692:                                    ; preds = %2501, %originalBB692alteredBB
  store i8 97, i8* %40, align 1, !dbg !2725
  %2510 = load i32, i32* @x.37
  %2511 = load i32, i32* @y.38
  %2512 = sub i32 %2510, 1
  %2513 = mul i32 %2510, %2512
  %2514 = urem i32 %2513, 2
  %2515 = icmp eq i32 %2514, 0
  %2516 = icmp slt i32 %2511, 10
  %2517 = or i1 %2515, %2516
  br i1 %2517, label %originalBBpart2694, label %originalBB692alteredBB

originalBBpart2694:                               ; preds = %originalBB692
  br label %2856, !dbg !2726

2518:                                             ; preds = %originalBBpart2247
  %2519 = load i32, i32* @x.37
  %2520 = load i32, i32* @y.38
  %2521 = sub i32 %2519, 1
  %2522 = mul i32 %2519, %2521
  %2523 = urem i32 %2522, 2
  %2524 = icmp eq i32 %2523, 0
  %2525 = icmp slt i32 %2520, 10
  %2526 = or i1 %2524, %2525
  br i1 %2526, label %originalBB696, label %originalBB696alteredBB

originalBB696:                                    ; preds = %2518, %originalBB696alteredBB
  store i8 98, i8* %40, align 1, !dbg !2727
  %2527 = load i32, i32* @x.37
  %2528 = load i32, i32* @y.38
  %2529 = sub i32 %2527, 1
  %2530 = mul i32 %2527, %2529
  %2531 = urem i32 %2530, 2
  %2532 = icmp eq i32 %2531, 0
  %2533 = icmp slt i32 %2528, 10
  %2534 = or i1 %2532, %2533
  br i1 %2534, label %originalBBpart2698, label %originalBB696alteredBB

originalBBpart2698:                               ; preds = %originalBB696
  br label %2856, !dbg !2728

2535:                                             ; preds = %originalBBpart2247
  %2536 = load i32, i32* @x.37
  %2537 = load i32, i32* @y.38
  %2538 = sub i32 %2536, 1
  %2539 = mul i32 %2536, %2538
  %2540 = urem i32 %2539, 2
  %2541 = icmp eq i32 %2540, 0
  %2542 = icmp slt i32 %2537, 10
  %2543 = or i1 %2541, %2542
  br i1 %2543, label %originalBB700, label %originalBB700alteredBB

originalBB700:                                    ; preds = %2535, %originalBB700alteredBB
  store i8 102, i8* %40, align 1, !dbg !2729
  %2544 = load i32, i32* @x.37
  %2545 = load i32, i32* @y.38
  %2546 = sub i32 %2544, 1
  %2547 = mul i32 %2544, %2546
  %2548 = urem i32 %2547, 2
  %2549 = icmp eq i32 %2548, 0
  %2550 = icmp slt i32 %2545, 10
  %2551 = or i1 %2549, %2550
  br i1 %2551, label %originalBBpart2702, label %originalBB700alteredBB

originalBBpart2702:                               ; preds = %originalBB700
  br label %2856, !dbg !2730

2552:                                             ; preds = %originalBBpart2247
  %2553 = load i32, i32* @x.37
  %2554 = load i32, i32* @y.38
  %2555 = sub i32 %2553, 1
  %2556 = mul i32 %2553, %2555
  %2557 = urem i32 %2556, 2
  %2558 = icmp eq i32 %2557, 0
  %2559 = icmp slt i32 %2554, 10
  %2560 = or i1 %2558, %2559
  br i1 %2560, label %originalBB704, label %originalBB704alteredBB

originalBB704:                                    ; preds = %2552, %originalBB704alteredBB
  store i8 110, i8* %40, align 1, !dbg !2731
  %2561 = load i32, i32* @x.37
  %2562 = load i32, i32* @y.38
  %2563 = sub i32 %2561, 1
  %2564 = mul i32 %2561, %2563
  %2565 = urem i32 %2564, 2
  %2566 = icmp eq i32 %2565, 0
  %2567 = icmp slt i32 %2562, 10
  %2568 = or i1 %2566, %2567
  br i1 %2568, label %originalBBpart2706, label %originalBB704alteredBB

originalBBpart2706:                               ; preds = %originalBB704
  br label %2784, !dbg !2732

2569:                                             ; preds = %originalBBpart2247
  %2570 = load i32, i32* @x.37
  %2571 = load i32, i32* @y.38
  %2572 = sub i32 %2570, 1
  %2573 = mul i32 %2570, %2572
  %2574 = urem i32 %2573, 2
  %2575 = icmp eq i32 %2574, 0
  %2576 = icmp slt i32 %2571, 10
  %2577 = or i1 %2575, %2576
  br i1 %2577, label %originalBB708, label %originalBB708alteredBB

originalBB708:                                    ; preds = %2569, %originalBB708alteredBB
  store i8 114, i8* %40, align 1, !dbg !2733
  %2578 = load i32, i32* @x.37
  %2579 = load i32, i32* @y.38
  %2580 = sub i32 %2578, 1
  %2581 = mul i32 %2578, %2580
  %2582 = urem i32 %2581, 2
  %2583 = icmp eq i32 %2582, 0
  %2584 = icmp slt i32 %2579, 10
  %2585 = or i1 %2583, %2584
  br i1 %2585, label %originalBBpart2710, label %originalBB708alteredBB

originalBBpart2710:                               ; preds = %originalBB708
  br label %2784, !dbg !2734

2586:                                             ; preds = %originalBBpart2247
  %2587 = load i32, i32* @x.37
  %2588 = load i32, i32* @y.38
  %2589 = sub i32 %2587, 1
  %2590 = mul i32 %2587, %2589
  %2591 = urem i32 %2590, 2
  %2592 = icmp eq i32 %2591, 0
  %2593 = icmp slt i32 %2588, 10
  %2594 = or i1 %2592, %2593
  br i1 %2594, label %originalBB712, label %originalBB712alteredBB

originalBB712:                                    ; preds = %2586, %originalBB712alteredBB
  store i8 116, i8* %40, align 1, !dbg !2735
  %2595 = load i32, i32* @x.37
  %2596 = load i32, i32* @y.38
  %2597 = sub i32 %2595, 1
  %2598 = mul i32 %2595, %2597
  %2599 = urem i32 %2598, 2
  %2600 = icmp eq i32 %2599, 0
  %2601 = icmp slt i32 %2596, 10
  %2602 = or i1 %2600, %2601
  br i1 %2602, label %originalBBpart2714, label %originalBB712alteredBB

originalBBpart2714:                               ; preds = %originalBB712
  br label %2784, !dbg !2736

2603:                                             ; preds = %originalBBpart2247
  %2604 = load i32, i32* @x.37
  %2605 = load i32, i32* @y.38
  %2606 = sub i32 %2604, 1
  %2607 = mul i32 %2604, %2606
  %2608 = urem i32 %2607, 2
  %2609 = icmp eq i32 %2608, 0
  %2610 = icmp slt i32 %2605, 10
  %2611 = or i1 %2609, %2610
  br i1 %2611, label %originalBB716, label %originalBB716alteredBB

originalBB716:                                    ; preds = %2603, %originalBB716alteredBB
  store i8 118, i8* %40, align 1, !dbg !2737
  %2612 = load i32, i32* @x.37
  %2613 = load i32, i32* @y.38
  %2614 = sub i32 %2612, 1
  %2615 = mul i32 %2612, %2614
  %2616 = urem i32 %2615, 2
  %2617 = icmp eq i32 %2616, 0
  %2618 = icmp slt i32 %2613, 10
  %2619 = or i1 %2617, %2618
  br i1 %2619, label %originalBBpart2718, label %originalBB716alteredBB

originalBBpart2718:                               ; preds = %originalBB716
  br label %2856, !dbg !2738

2620:                                             ; preds = %originalBBpart2247
  %2621 = load i32, i32* @x.37
  %2622 = load i32, i32* @y.38
  %2623 = sub i32 %2621, 1
  %2624 = mul i32 %2621, %2623
  %2625 = urem i32 %2624, 2
  %2626 = icmp eq i32 %2625, 0
  %2627 = icmp slt i32 %2622, 10
  %2628 = or i1 %2626, %2627
  br i1 %2628, label %originalBB720, label %originalBB720alteredBB

originalBB720:                                    ; preds = %2620, %originalBB720alteredBB
  %2629 = load i8, i8* %39, align 1, !dbg !2739
  store i8 %2629, i8* %40, align 1, !dbg !2740
  %2630 = load i32, i32* %23, align 4, !dbg !2741
  %2631 = icmp eq i32 %2630, 2, !dbg !2743
  %2632 = load i32, i32* @x.37
  %2633 = load i32, i32* @y.38
  %2634 = sub i32 %2632, 1
  %2635 = mul i32 %2632, %2634
  %2636 = urem i32 %2635, 2
  %2637 = icmp eq i32 %2636, 0
  %2638 = icmp slt i32 %2633, 10
  %2639 = or i1 %2637, %2638
  br i1 %2639, label %originalBBpart2722, label %originalBB720alteredBB

originalBBpart2722:                               ; preds = %originalBB720
  br i1 %2631, label %2640, label %2693, !dbg !2744

2640:                                             ; preds = %originalBBpart2722
  %2641 = load i32, i32* @x.37
  %2642 = load i32, i32* @y.38
  %2643 = sub i32 %2641, 1
  %2644 = mul i32 %2641, %2643
  %2645 = urem i32 %2644, 2
  %2646 = icmp eq i32 %2645, 0
  %2647 = icmp slt i32 %2642, 10
  %2648 = or i1 %2646, %2647
  br i1 %2648, label %originalBB724, label %originalBB724alteredBB

originalBB724:                                    ; preds = %2640, %originalBB724alteredBB
  %2649 = load i8, i8* %35, align 1, !dbg !2745
  %2650 = trunc i8 %2649 to i1, !dbg !2745
  %2651 = load i32, i32* @x.37
  %2652 = load i32, i32* @y.38
  %2653 = sub i32 %2651, 1
  %2654 = mul i32 %2651, %2653
  %2655 = urem i32 %2654, 2
  %2656 = icmp eq i32 %2655, 0
  %2657 = icmp slt i32 %2652, 10
  %2658 = or i1 %2656, %2657
  br i1 %2658, label %originalBBpart2726, label %originalBB724alteredBB

originalBBpart2726:                               ; preds = %originalBB724
  br i1 %2650, label %2659, label %2676, !dbg !2748

2659:                                             ; preds = %originalBBpart2726
  %2660 = load i32, i32* @x.37
  %2661 = load i32, i32* @y.38
  %2662 = sub i32 %2660, 1
  %2663 = mul i32 %2660, %2662
  %2664 = urem i32 %2663, 2
  %2665 = icmp eq i32 %2664, 0
  %2666 = icmp slt i32 %2661, 10
  %2667 = or i1 %2665, %2666
  br i1 %2667, label %originalBB728, label %originalBB728alteredBB

originalBB728:                                    ; preds = %2659, %originalBB728alteredBB
  %2668 = load i32, i32* @x.37
  %2669 = load i32, i32* @y.38
  %2670 = sub i32 %2668, 1
  %2671 = mul i32 %2668, %2670
  %2672 = urem i32 %2671, 2
  %2673 = icmp eq i32 %2672, 0
  %2674 = icmp slt i32 %2669, 10
  %2675 = or i1 %2673, %2674
  br i1 %2675, label %originalBBpart2730, label %originalBB728alteredBB

originalBBpart2730:                               ; preds = %originalBB728
  br label %6990, !dbg !2749

2676:                                             ; preds = %originalBBpart2726
  %2677 = load i32, i32* @x.37
  %2678 = load i32, i32* @y.38
  %2679 = sub i32 %2677, 1
  %2680 = mul i32 %2677, %2679
  %2681 = urem i32 %2680, 2
  %2682 = icmp eq i32 %2681, 0
  %2683 = icmp slt i32 %2678, 10
  %2684 = or i1 %2682, %2683
  br i1 %2684, label %originalBB732, label %originalBB732alteredBB

originalBB732:                                    ; preds = %2676, %originalBB732alteredBB
  %2685 = load i32, i32* @x.37
  %2686 = load i32, i32* @y.38
  %2687 = sub i32 %2685, 1
  %2688 = mul i32 %2685, %2687
  %2689 = urem i32 %2688, 2
  %2690 = icmp eq i32 %2689, 0
  %2691 = icmp slt i32 %2686, 10
  %2692 = or i1 %2690, %2691
  br i1 %2692, label %originalBBpart2734, label %originalBB732alteredBB

originalBBpart2734:                               ; preds = %originalBB732
  br label %6070, !dbg !2750

2693:                                             ; preds = %originalBBpart2722
  %2694 = load i32, i32* @x.37
  %2695 = load i32, i32* @y.38
  %2696 = sub i32 %2694, 1
  %2697 = mul i32 %2694, %2696
  %2698 = urem i32 %2697, 2
  %2699 = icmp eq i32 %2698, 0
  %2700 = icmp slt i32 %2695, 10
  %2701 = or i1 %2699, %2700
  br i1 %2701, label %originalBB736, label %originalBB736alteredBB

originalBB736:                                    ; preds = %2693, %originalBB736alteredBB
  %2702 = load i8, i8* %33, align 1, !dbg !2751
  %2703 = trunc i8 %2702 to i1, !dbg !2751
  %2704 = load i32, i32* @x.37
  %2705 = load i32, i32* @y.38
  %2706 = sub i32 %2704, 1
  %2707 = mul i32 %2704, %2706
  %2708 = urem i32 %2707, 2
  %2709 = icmp eq i32 %2708, 0
  %2710 = icmp slt i32 %2705, 10
  %2711 = or i1 %2709, %2710
  br i1 %2711, label %originalBBpart2738, label %originalBB736alteredBB

originalBBpart2738:                               ; preds = %originalBB736
  br i1 %2703, label %2712, label %2767, !dbg !2753

2712:                                             ; preds = %originalBBpart2738
  %2713 = load i32, i32* @x.37
  %2714 = load i32, i32* @y.38
  %2715 = sub i32 %2713, 1
  %2716 = mul i32 %2713, %2715
  %2717 = urem i32 %2716, 2
  %2718 = icmp eq i32 %2717, 0
  %2719 = icmp slt i32 %2714, 10
  %2720 = or i1 %2718, %2719
  br i1 %2720, label %originalBB740, label %originalBB740alteredBB

originalBB740:                                    ; preds = %2712, %originalBB740alteredBB
  %2721 = load i8, i8* %35, align 1, !dbg !2754
  %2722 = trunc i8 %2721 to i1, !dbg !2754
  %2723 = load i32, i32* @x.37
  %2724 = load i32, i32* @y.38
  %2725 = sub i32 %2723, 1
  %2726 = mul i32 %2723, %2725
  %2727 = urem i32 %2726, 2
  %2728 = icmp eq i32 %2727, 0
  %2729 = icmp slt i32 %2724, 10
  %2730 = or i1 %2728, %2729
  br i1 %2730, label %originalBBpart2742, label %originalBB740alteredBB

originalBBpart2742:                               ; preds = %originalBB740
  br i1 %2722, label %2731, label %2767, !dbg !2755

2731:                                             ; preds = %originalBBpart2742
  %2732 = load i32, i32* @x.37
  %2733 = load i32, i32* @y.38
  %2734 = sub i32 %2732, 1
  %2735 = mul i32 %2732, %2734
  %2736 = urem i32 %2735, 2
  %2737 = icmp eq i32 %2736, 0
  %2738 = icmp slt i32 %2733, 10
  %2739 = or i1 %2737, %2738
  br i1 %2739, label %originalBB744, label %originalBB744alteredBB

originalBB744:                                    ; preds = %2731, %originalBB744alteredBB
  %2740 = load i64, i64* %32, align 8, !dbg !2756
  %2741 = icmp ne i64 %2740, 0, !dbg !2756
  %2742 = load i32, i32* @x.37
  %2743 = load i32, i32* @y.38
  %2744 = sub i32 %2742, 1
  %2745 = mul i32 %2742, %2744
  %2746 = urem i32 %2745, 2
  %2747 = icmp eq i32 %2746, 0
  %2748 = icmp slt i32 %2743, 10
  %2749 = or i1 %2747, %2748
  br i1 %2749, label %originalBBpart2746, label %originalBB744alteredBB

originalBBpart2746:                               ; preds = %originalBB744
  br i1 %2741, label %2750, label %2767, !dbg !2757

2750:                                             ; preds = %originalBBpart2746
  %2751 = load i32, i32* @x.37
  %2752 = load i32, i32* @y.38
  %2753 = sub i32 %2751, 1
  %2754 = mul i32 %2751, %2753
  %2755 = urem i32 %2754, 2
  %2756 = icmp eq i32 %2755, 0
  %2757 = icmp slt i32 %2752, 10
  %2758 = or i1 %2756, %2757
  br i1 %2758, label %originalBB748, label %originalBB748alteredBB

originalBB748:                                    ; preds = %2750, %originalBB748alteredBB
  %2759 = load i32, i32* @x.37
  %2760 = load i32, i32* @y.38
  %2761 = sub i32 %2759, 1
  %2762 = mul i32 %2759, %2761
  %2763 = urem i32 %2762, 2
  %2764 = icmp eq i32 %2763, 0
  %2765 = icmp slt i32 %2760, 10
  %2766 = or i1 %2764, %2765
  br i1 %2766, label %originalBBpart2750, label %originalBB748alteredBB

originalBBpart2750:                               ; preds = %originalBB748
  br label %6070, !dbg !2758

2767:                                             ; preds = %originalBBpart2746, %originalBBpart2742, %originalBBpart2738
  %2768 = load i32, i32* @x.37
  %2769 = load i32, i32* @y.38
  %2770 = sub i32 %2768, 1
  %2771 = mul i32 %2768, %2770
  %2772 = urem i32 %2771, 2
  %2773 = icmp eq i32 %2772, 0
  %2774 = icmp slt i32 %2769, 10
  %2775 = or i1 %2773, %2774
  br i1 %2775, label %originalBB752, label %originalBB752alteredBB

originalBB752:                                    ; preds = %2767, %originalBB752alteredBB
  %2776 = load i32, i32* @x.37
  %2777 = load i32, i32* @y.38
  %2778 = sub i32 %2776, 1
  %2779 = mul i32 %2776, %2778
  %2780 = urem i32 %2779, 2
  %2781 = icmp eq i32 %2780, 0
  %2782 = icmp slt i32 %2777, 10
  %2783 = or i1 %2781, %2782
  br i1 %2783, label %originalBBpart2754, label %originalBB752alteredBB

originalBBpart2754:                               ; preds = %originalBB752
  br label %2784, !dbg !2756

2784:                                             ; preds = %originalBBpart2754, %originalBBpart2714, %originalBBpart2710, %originalBBpart2706
  call void @llvm.dbg.label(metadata !2759), !dbg !2760
  %2785 = load i32, i32* @x.37
  %2786 = load i32, i32* @y.38
  %2787 = sub i32 %2785, 1
  %2788 = mul i32 %2785, %2787
  %2789 = urem i32 %2788, 2
  %2790 = icmp eq i32 %2789, 0
  %2791 = icmp slt i32 %2786, 10
  %2792 = or i1 %2790, %2791
  br i1 %2792, label %originalBB756, label %originalBB756alteredBB

originalBB756:                                    ; preds = %2784, %originalBB756alteredBB
  %2793 = load i32, i32* %23, align 4, !dbg !2761
  %2794 = icmp eq i32 %2793, 2, !dbg !2763
  %2795 = load i32, i32* @x.37
  %2796 = load i32, i32* @y.38
  %2797 = sub i32 %2795, 1
  %2798 = mul i32 %2795, %2797
  %2799 = urem i32 %2798, 2
  %2800 = icmp eq i32 %2799, 0
  %2801 = icmp slt i32 %2796, 10
  %2802 = or i1 %2800, %2801
  br i1 %2802, label %originalBBpart2758, label %originalBB756alteredBB

originalBBpart2758:                               ; preds = %originalBB756
  br i1 %2794, label %2803, label %2839, !dbg !2764

2803:                                             ; preds = %originalBBpart2758
  %2804 = load i32, i32* @x.37
  %2805 = load i32, i32* @y.38
  %2806 = sub i32 %2804, 1
  %2807 = mul i32 %2804, %2806
  %2808 = urem i32 %2807, 2
  %2809 = icmp eq i32 %2808, 0
  %2810 = icmp slt i32 %2805, 10
  %2811 = or i1 %2809, %2810
  br i1 %2811, label %originalBB760, label %originalBB760alteredBB

originalBB760:                                    ; preds = %2803, %originalBB760alteredBB
  %2812 = load i8, i8* %35, align 1, !dbg !2765
  %2813 = trunc i8 %2812 to i1, !dbg !2765
  %2814 = load i32, i32* @x.37
  %2815 = load i32, i32* @y.38
  %2816 = sub i32 %2814, 1
  %2817 = mul i32 %2814, %2816
  %2818 = urem i32 %2817, 2
  %2819 = icmp eq i32 %2818, 0
  %2820 = icmp slt i32 %2815, 10
  %2821 = or i1 %2819, %2820
  br i1 %2821, label %originalBBpart2762, label %originalBB760alteredBB

originalBBpart2762:                               ; preds = %originalBB760
  br i1 %2813, label %2822, label %2839, !dbg !2766

2822:                                             ; preds = %originalBBpart2762
  %2823 = load i32, i32* @x.37
  %2824 = load i32, i32* @y.38
  %2825 = sub i32 %2823, 1
  %2826 = mul i32 %2823, %2825
  %2827 = urem i32 %2826, 2
  %2828 = icmp eq i32 %2827, 0
  %2829 = icmp slt i32 %2824, 10
  %2830 = or i1 %2828, %2829
  br i1 %2830, label %originalBB764, label %originalBB764alteredBB

originalBB764:                                    ; preds = %2822, %originalBB764alteredBB
  %2831 = load i32, i32* @x.37
  %2832 = load i32, i32* @y.38
  %2833 = sub i32 %2831, 1
  %2834 = mul i32 %2831, %2833
  %2835 = urem i32 %2834, 2
  %2836 = icmp eq i32 %2835, 0
  %2837 = icmp slt i32 %2832, 10
  %2838 = or i1 %2836, %2837
  br i1 %2838, label %originalBBpart2766, label %originalBB764alteredBB

originalBBpart2766:                               ; preds = %originalBB764
  br label %6990, !dbg !2767

2839:                                             ; preds = %originalBBpart2762, %originalBBpart2758
  %2840 = load i32, i32* @x.37
  %2841 = load i32, i32* @y.38
  %2842 = sub i32 %2840, 1
  %2843 = mul i32 %2840, %2842
  %2844 = urem i32 %2843, 2
  %2845 = icmp eq i32 %2844, 0
  %2846 = icmp slt i32 %2841, 10
  %2847 = or i1 %2845, %2846
  br i1 %2847, label %originalBB768, label %originalBB768alteredBB

originalBB768:                                    ; preds = %2839, %originalBB768alteredBB
  %2848 = load i32, i32* @x.37
  %2849 = load i32, i32* @y.38
  %2850 = sub i32 %2848, 1
  %2851 = mul i32 %2848, %2850
  %2852 = urem i32 %2851, 2
  %2853 = icmp eq i32 %2852, 0
  %2854 = icmp slt i32 %2849, 10
  %2855 = or i1 %2853, %2854
  br i1 %2855, label %originalBBpart2770, label %originalBB768alteredBB

originalBBpart2770:                               ; preds = %originalBB768
  br label %2856, !dbg !2765

2856:                                             ; preds = %originalBBpart2770, %originalBBpart2718, %originalBBpart2702, %originalBBpart2698, %originalBBpart2694
  call void @llvm.dbg.label(metadata !2768), !dbg !2769
  %2857 = load i32, i32* @x.37
  %2858 = load i32, i32* @y.38
  %2859 = sub i32 %2857, 1
  %2860 = mul i32 %2857, %2859
  %2861 = urem i32 %2860, 2
  %2862 = icmp eq i32 %2861, 0
  %2863 = icmp slt i32 %2858, 10
  %2864 = or i1 %2862, %2863
  br i1 %2864, label %originalBB772, label %originalBB772alteredBB

originalBB772:                                    ; preds = %2856, %originalBB772alteredBB
  %2865 = load i8, i8* %33, align 1, !dbg !2770
  %2866 = trunc i8 %2865 to i1, !dbg !2770
  %2867 = load i32, i32* @x.37
  %2868 = load i32, i32* @y.38
  %2869 = sub i32 %2867, 1
  %2870 = mul i32 %2867, %2869
  %2871 = urem i32 %2870, 2
  %2872 = icmp eq i32 %2871, 0
  %2873 = icmp slt i32 %2868, 10
  %2874 = or i1 %2872, %2873
  br i1 %2874, label %originalBBpart2774, label %originalBB772alteredBB

originalBBpart2774:                               ; preds = %originalBB772
  br i1 %2866, label %2875, label %2893, !dbg !2772

2875:                                             ; preds = %originalBBpart2774
  %2876 = load i32, i32* @x.37
  %2877 = load i32, i32* @y.38
  %2878 = sub i32 %2876, 1
  %2879 = mul i32 %2876, %2878
  %2880 = urem i32 %2879, 2
  %2881 = icmp eq i32 %2880, 0
  %2882 = icmp slt i32 %2877, 10
  %2883 = or i1 %2881, %2882
  br i1 %2883, label %originalBB776, label %originalBB776alteredBB

originalBB776:                                    ; preds = %2875, %originalBB776alteredBB
  %2884 = load i8, i8* %40, align 1, !dbg !2773
  store i8 %2884, i8* %39, align 1, !dbg !2775
  %2885 = load i32, i32* @x.37
  %2886 = load i32, i32* @y.38
  %2887 = sub i32 %2885, 1
  %2888 = mul i32 %2885, %2887
  %2889 = urem i32 %2888, 2
  %2890 = icmp eq i32 %2889, 0
  %2891 = icmp slt i32 %2886, 10
  %2892 = or i1 %2890, %2891
  br i1 %2892, label %originalBBpart2778, label %originalBB776alteredBB

originalBBpart2778:                               ; preds = %originalBB776
  br label %5624, !dbg !2776

2893:                                             ; preds = %originalBBpart2774
  %2894 = load i32, i32* @x.37
  %2895 = load i32, i32* @y.38
  %2896 = sub i32 %2894, 1
  %2897 = mul i32 %2894, %2896
  %2898 = urem i32 %2897, 2
  %2899 = icmp eq i32 %2898, 0
  %2900 = icmp slt i32 %2895, 10
  %2901 = or i1 %2899, %2900
  br i1 %2901, label %originalBB780, label %originalBB780alteredBB

originalBB780:                                    ; preds = %2893, %originalBB780alteredBB
  %2902 = load i32, i32* @x.37
  %2903 = load i32, i32* @y.38
  %2904 = sub i32 %2902, 1
  %2905 = mul i32 %2902, %2904
  %2906 = urem i32 %2905, 2
  %2907 = icmp eq i32 %2906, 0
  %2908 = icmp slt i32 %2903, 10
  %2909 = or i1 %2907, %2908
  br i1 %2909, label %originalBBpart2782, label %originalBB780alteredBB

originalBBpart2782:                               ; preds = %originalBB780
  br label %5465, !dbg !2777

2910:                                             ; preds = %originalBBpart2247, %originalBBpart2247
  %2911 = load i32, i32* @x.37
  %2912 = load i32, i32* @y.38
  %2913 = sub i32 %2911, 1
  %2914 = mul i32 %2911, %2913
  %2915 = urem i32 %2914, 2
  %2916 = icmp eq i32 %2915, 0
  %2917 = icmp slt i32 %2912, 10
  %2918 = or i1 %2916, %2917
  br i1 %2918, label %originalBB784, label %originalBB784alteredBB

originalBB784:                                    ; preds = %2910, %originalBB784alteredBB
  %2919 = load i64, i64* %22, align 8, !dbg !2778
  %2920 = icmp eq i64 %2919, -1, !dbg !2780
  %2921 = load i32, i32* @x.37
  %2922 = load i32, i32* @y.38
  %2923 = sub i32 %2921, 1
  %2924 = mul i32 %2921, %2923
  %2925 = urem i32 %2924, 2
  %2926 = icmp eq i32 %2925, 0
  %2927 = icmp slt i32 %2922, 10
  %2928 = or i1 %2926, %2927
  br i1 %2928, label %originalBBpart2786, label %originalBB784alteredBB

originalBBpart2786:                               ; preds = %originalBB784
  br i1 %2920, label %2929, label %2951, !dbg !2781

2929:                                             ; preds = %originalBBpart2786
  %2930 = load i32, i32* @x.37
  %2931 = load i32, i32* @y.38
  %2932 = sub i32 %2930, 1
  %2933 = mul i32 %2930, %2932
  %2934 = urem i32 %2933, 2
  %2935 = icmp eq i32 %2934, 0
  %2936 = icmp slt i32 %2931, 10
  %2937 = or i1 %2935, %2936
  br i1 %2937, label %originalBB788, label %originalBB788alteredBB

originalBB788:                                    ; preds = %2929, %originalBB788alteredBB
  %2938 = load i8*, i8** %21, align 8, !dbg !2782
  %2939 = getelementptr inbounds i8, i8* %2938, i64 1, !dbg !2782
  %2940 = load i8, i8* %2939, align 1, !dbg !2782
  %2941 = sext i8 %2940 to i32, !dbg !2782
  %2942 = icmp eq i32 %2941, 0, !dbg !2783
  %2943 = load i32, i32* @x.37
  %2944 = load i32, i32* @y.38
  %2945 = sub i32 %2943, 1
  %2946 = mul i32 %2943, %2945
  %2947 = urem i32 %2946, 2
  %2948 = icmp eq i32 %2947, 0
  %2949 = icmp slt i32 %2944, 10
  %2950 = or i1 %2948, %2949
  br i1 %2950, label %originalBBpart2790, label %originalBB788alteredBB

originalBBpart2790:                               ; preds = %originalBB788
  br i1 %2942, label %2987, label %2970, !dbg !2778

2951:                                             ; preds = %originalBBpart2786
  %2952 = load i32, i32* @x.37
  %2953 = load i32, i32* @y.38
  %2954 = sub i32 %2952, 1
  %2955 = mul i32 %2952, %2954
  %2956 = urem i32 %2955, 2
  %2957 = icmp eq i32 %2956, 0
  %2958 = icmp slt i32 %2953, 10
  %2959 = or i1 %2957, %2958
  br i1 %2959, label %originalBB792, label %originalBB792alteredBB

originalBB792:                                    ; preds = %2951, %originalBB792alteredBB
  %2960 = load i64, i64* %22, align 8, !dbg !2784
  %2961 = icmp eq i64 %2960, 1, !dbg !2785
  %2962 = load i32, i32* @x.37
  %2963 = load i32, i32* @y.38
  %2964 = sub i32 %2962, 1
  %2965 = mul i32 %2962, %2964
  %2966 = urem i32 %2965, 2
  %2967 = icmp eq i32 %2966, 0
  %2968 = icmp slt i32 %2963, 10
  %2969 = or i1 %2967, %2968
  br i1 %2969, label %originalBBpart2794, label %originalBB792alteredBB

originalBBpart2794:                               ; preds = %originalBB792
  br i1 %2961, label %2987, label %2970, !dbg !2781

2970:                                             ; preds = %originalBBpart2794, %originalBBpart2790
  %2971 = load i32, i32* @x.37
  %2972 = load i32, i32* @y.38
  %2973 = sub i32 %2971, 1
  %2974 = mul i32 %2971, %2973
  %2975 = urem i32 %2974, 2
  %2976 = icmp eq i32 %2975, 0
  %2977 = icmp slt i32 %2972, 10
  %2978 = or i1 %2976, %2977
  br i1 %2978, label %originalBB796, label %originalBB796alteredBB

originalBB796:                                    ; preds = %2970, %originalBB796alteredBB
  %2979 = load i32, i32* @x.37
  %2980 = load i32, i32* @y.38
  %2981 = sub i32 %2979, 1
  %2982 = mul i32 %2979, %2981
  %2983 = urem i32 %2982, 2
  %2984 = icmp eq i32 %2983, 0
  %2985 = icmp slt i32 %2980, 10
  %2986 = or i1 %2984, %2985
  br i1 %2986, label %originalBBpart2798, label %originalBB796alteredBB

originalBBpart2798:                               ; preds = %originalBB796
  br label %5465, !dbg !2786

2987:                                             ; preds = %originalBBpart2794, %originalBBpart2790
  %2988 = load i32, i32* @x.37
  %2989 = load i32, i32* @y.38
  %2990 = sub i32 %2988, 1
  %2991 = mul i32 %2988, %2990
  %2992 = urem i32 %2991, 2
  %2993 = icmp eq i32 %2992, 0
  %2994 = icmp slt i32 %2989, 10
  %2995 = or i1 %2993, %2994
  br i1 %2995, label %originalBB800, label %originalBB800alteredBB

originalBB800:                                    ; preds = %2987, %originalBB800alteredBB
  %2996 = load i32, i32* @x.37
  %2997 = load i32, i32* @y.38
  %2998 = sub i32 %2996, 1
  %2999 = mul i32 %2996, %2998
  %3000 = urem i32 %2999, 2
  %3001 = icmp eq i32 %3000, 0
  %3002 = icmp slt i32 %2997, 10
  %3003 = or i1 %3001, %3002
  br i1 %3003, label %originalBBpart2802, label %originalBB800alteredBB

originalBBpart2802:                               ; preds = %originalBB800
  br label %3004, !dbg !2787

3004:                                             ; preds = %originalBBpart2802, %originalBBpart2247, %originalBBpart2247
  %3005 = load i32, i32* @x.37
  %3006 = load i32, i32* @y.38
  %3007 = sub i32 %3005, 1
  %3008 = mul i32 %3005, %3007
  %3009 = urem i32 %3008, 2
  %3010 = icmp eq i32 %3009, 0
  %3011 = icmp slt i32 %3006, 10
  %3012 = or i1 %3010, %3011
  br i1 %3012, label %originalBB804, label %originalBB804alteredBB

originalBB804:                                    ; preds = %3004, %originalBB804alteredBB
  %3013 = load i64, i64* %28, align 8, !dbg !2788
  %3014 = icmp ne i64 %3013, 0, !dbg !2790
  %3015 = load i32, i32* @x.37
  %3016 = load i32, i32* @y.38
  %3017 = sub i32 %3015, 1
  %3018 = mul i32 %3015, %3017
  %3019 = urem i32 %3018, 2
  %3020 = icmp eq i32 %3019, 0
  %3021 = icmp slt i32 %3016, 10
  %3022 = or i1 %3020, %3021
  br i1 %3022, label %originalBBpart2806, label %originalBB804alteredBB

originalBBpart2806:                               ; preds = %originalBB804
  br i1 %3014, label %3023, label %3040, !dbg !2791

3023:                                             ; preds = %originalBBpart2806
  %3024 = load i32, i32* @x.37
  %3025 = load i32, i32* @y.38
  %3026 = sub i32 %3024, 1
  %3027 = mul i32 %3024, %3026
  %3028 = urem i32 %3027, 2
  %3029 = icmp eq i32 %3028, 0
  %3030 = icmp slt i32 %3025, 10
  %3031 = or i1 %3029, %3030
  br i1 %3031, label %originalBB808, label %originalBB808alteredBB

originalBB808:                                    ; preds = %3023, %originalBB808alteredBB
  %3032 = load i32, i32* @x.37
  %3033 = load i32, i32* @y.38
  %3034 = sub i32 %3032, 1
  %3035 = mul i32 %3032, %3034
  %3036 = urem i32 %3035, 2
  %3037 = icmp eq i32 %3036, 0
  %3038 = icmp slt i32 %3033, 10
  %3039 = or i1 %3037, %3038
  br i1 %3039, label %originalBBpart2810, label %originalBB808alteredBB

originalBBpart2810:                               ; preds = %originalBB808
  br label %5465, !dbg !2792

3040:                                             ; preds = %originalBBpart2806
  %3041 = load i32, i32* @x.37
  %3042 = load i32, i32* @y.38
  %3043 = sub i32 %3041, 1
  %3044 = mul i32 %3041, %3043
  %3045 = urem i32 %3044, 2
  %3046 = icmp eq i32 %3045, 0
  %3047 = icmp slt i32 %3042, 10
  %3048 = or i1 %3046, %3047
  br i1 %3048, label %originalBB812, label %originalBB812alteredBB

originalBB812:                                    ; preds = %3040, %originalBB812alteredBB
  %3049 = load i32, i32* @x.37
  %3050 = load i32, i32* @y.38
  %3051 = sub i32 %3049, 1
  %3052 = mul i32 %3049, %3051
  %3053 = urem i32 %3052, 2
  %3054 = icmp eq i32 %3053, 0
  %3055 = icmp slt i32 %3050, 10
  %3056 = or i1 %3054, %3055
  br i1 %3056, label %originalBBpart2814, label %originalBB812alteredBB

originalBBpart2814:                               ; preds = %originalBB812
  br label %3057, !dbg !2793

3057:                                             ; preds = %originalBBpart2814, %originalBBpart2247
  %3058 = load i32, i32* @x.37
  %3059 = load i32, i32* @y.38
  %3060 = sub i32 %3058, 1
  %3061 = mul i32 %3058, %3060
  %3062 = urem i32 %3061, 2
  %3063 = icmp eq i32 %3062, 0
  %3064 = icmp slt i32 %3059, 10
  %3065 = or i1 %3063, %3064
  br i1 %3065, label %originalBB816, label %originalBB816alteredBB

originalBB816:                                    ; preds = %3057, %originalBB816alteredBB
  store i8 1, i8* %43, align 1, !dbg !2794
  %3066 = load i32, i32* @x.37
  %3067 = load i32, i32* @y.38
  %3068 = sub i32 %3066, 1
  %3069 = mul i32 %3066, %3068
  %3070 = urem i32 %3069, 2
  %3071 = icmp eq i32 %3070, 0
  %3072 = icmp slt i32 %3067, 10
  %3073 = or i1 %3071, %3072
  br i1 %3073, label %originalBBpart2818, label %originalBB816alteredBB

originalBBpart2818:                               ; preds = %originalBB816
  br label %3074, !dbg !2795

3074:                                             ; preds = %originalBBpart2818, %originalBBpart2247, %originalBBpart2247, %originalBBpart2247, %originalBBpart2247, %originalBBpart2247, %originalBBpart2247, %originalBBpart2247, %originalBBpart2247, %originalBBpart2247, %originalBBpart2247, %originalBBpart2247, %originalBBpart2247, %originalBBpart2247, %originalBBpart2247, %originalBBpart2247
  %3075 = load i32, i32* @x.37
  %3076 = load i32, i32* @y.38
  %3077 = sub i32 %3075, 1
  %3078 = mul i32 %3075, %3077
  %3079 = urem i32 %3078, 2
  %3080 = icmp eq i32 %3079, 0
  %3081 = icmp slt i32 %3076, 10
  %3082 = or i1 %3080, %3081
  br i1 %3082, label %originalBB820, label %originalBB820alteredBB

originalBB820:                                    ; preds = %3074, %originalBB820alteredBB
  %3083 = load i32, i32* %23, align 4, !dbg !2796
  %3084 = icmp eq i32 %3083, 2, !dbg !2798
  %3085 = load i32, i32* @x.37
  %3086 = load i32, i32* @y.38
  %3087 = sub i32 %3085, 1
  %3088 = mul i32 %3085, %3087
  %3089 = urem i32 %3088, 2
  %3090 = icmp eq i32 %3089, 0
  %3091 = icmp slt i32 %3086, 10
  %3092 = or i1 %3090, %3091
  br i1 %3092, label %originalBBpart2822, label %originalBB820alteredBB

originalBBpart2822:                               ; preds = %originalBB820
  br i1 %3084, label %3093, label %3129, !dbg !2799

3093:                                             ; preds = %originalBBpart2822
  %3094 = load i32, i32* @x.37
  %3095 = load i32, i32* @y.38
  %3096 = sub i32 %3094, 1
  %3097 = mul i32 %3094, %3096
  %3098 = urem i32 %3097, 2
  %3099 = icmp eq i32 %3098, 0
  %3100 = icmp slt i32 %3095, 10
  %3101 = or i1 %3099, %3100
  br i1 %3101, label %originalBB824, label %originalBB824alteredBB

originalBB824:                                    ; preds = %3093, %originalBB824alteredBB
  %3102 = load i8, i8* %35, align 1, !dbg !2800
  %3103 = trunc i8 %3102 to i1, !dbg !2800
  %3104 = load i32, i32* @x.37
  %3105 = load i32, i32* @y.38
  %3106 = sub i32 %3104, 1
  %3107 = mul i32 %3104, %3106
  %3108 = urem i32 %3107, 2
  %3109 = icmp eq i32 %3108, 0
  %3110 = icmp slt i32 %3105, 10
  %3111 = or i1 %3109, %3110
  br i1 %3111, label %originalBBpart2826, label %originalBB824alteredBB

originalBBpart2826:                               ; preds = %originalBB824
  br i1 %3103, label %3112, label %3129, !dbg !2801

3112:                                             ; preds = %originalBBpart2826
  %3113 = load i32, i32* @x.37
  %3114 = load i32, i32* @y.38
  %3115 = sub i32 %3113, 1
  %3116 = mul i32 %3113, %3115
  %3117 = urem i32 %3116, 2
  %3118 = icmp eq i32 %3117, 0
  %3119 = icmp slt i32 %3114, 10
  %3120 = or i1 %3118, %3119
  br i1 %3120, label %originalBB828, label %originalBB828alteredBB

originalBB828:                                    ; preds = %3112, %originalBB828alteredBB
  %3121 = load i32, i32* @x.37
  %3122 = load i32, i32* @y.38
  %3123 = sub i32 %3121, 1
  %3124 = mul i32 %3121, %3123
  %3125 = urem i32 %3124, 2
  %3126 = icmp eq i32 %3125, 0
  %3127 = icmp slt i32 %3122, 10
  %3128 = or i1 %3126, %3127
  br i1 %3128, label %originalBBpart2830, label %originalBB828alteredBB

originalBBpart2830:                               ; preds = %originalBB828
  br label %6990, !dbg !2802

3129:                                             ; preds = %originalBBpart2826, %originalBBpart2822
  %3130 = load i32, i32* @x.37
  %3131 = load i32, i32* @y.38
  %3132 = sub i32 %3130, 1
  %3133 = mul i32 %3130, %3132
  %3134 = urem i32 %3133, 2
  %3135 = icmp eq i32 %3134, 0
  %3136 = icmp slt i32 %3131, 10
  %3137 = or i1 %3135, %3136
  br i1 %3137, label %originalBB832, label %originalBB832alteredBB

originalBB832:                                    ; preds = %3129, %originalBB832alteredBB
  %3138 = load i32, i32* @x.37
  %3139 = load i32, i32* @y.38
  %3140 = sub i32 %3138, 1
  %3141 = mul i32 %3138, %3140
  %3142 = urem i32 %3141, 2
  %3143 = icmp eq i32 %3142, 0
  %3144 = icmp slt i32 %3139, 10
  %3145 = or i1 %3143, %3144
  br i1 %3145, label %originalBBpart2834, label %originalBB832alteredBB

originalBBpart2834:                               ; preds = %originalBB832
  br label %5465, !dbg !2803

3146:                                             ; preds = %originalBBpart2247
  %3147 = load i32, i32* @x.37
  %3148 = load i32, i32* @y.38
  %3149 = sub i32 %3147, 1
  %3150 = mul i32 %3147, %3149
  %3151 = urem i32 %3150, 2
  %3152 = icmp eq i32 %3151, 0
  %3153 = icmp slt i32 %3148, 10
  %3154 = or i1 %3152, %3153
  br i1 %3154, label %originalBB836, label %originalBB836alteredBB

originalBB836:                                    ; preds = %3146, %originalBB836alteredBB
  store i8 1, i8* %37, align 1, !dbg !2804
  store i8 1, i8* %43, align 1, !dbg !2805
  %3155 = load i32, i32* %23, align 4, !dbg !2806
  %3156 = icmp eq i32 %3155, 2, !dbg !2808
  %3157 = load i32, i32* @x.37
  %3158 = load i32, i32* @y.38
  %3159 = sub i32 %3157, 1
  %3160 = mul i32 %3157, %3159
  %3161 = urem i32 %3160, 2
  %3162 = icmp eq i32 %3161, 0
  %3163 = icmp slt i32 %3158, 10
  %3164 = or i1 %3162, %3163
  br i1 %3164, label %originalBBpart2838, label %originalBB836alteredBB

originalBBpart2838:                               ; preds = %originalBB836
  br i1 %3156, label %3165, label %3502, !dbg !2809

3165:                                             ; preds = %originalBBpart2838
  %3166 = load i32, i32* @x.37
  %3167 = load i32, i32* @y.38
  %3168 = sub i32 %3166, 1
  %3169 = mul i32 %3166, %3168
  %3170 = urem i32 %3169, 2
  %3171 = icmp eq i32 %3170, 0
  %3172 = icmp slt i32 %3167, 10
  %3173 = or i1 %3171, %3172
  br i1 %3173, label %originalBB840, label %originalBB840alteredBB

originalBB840:                                    ; preds = %3165, %originalBB840alteredBB
  %3174 = load i8, i8* %35, align 1, !dbg !2810
  %3175 = trunc i8 %3174 to i1, !dbg !2810
  %3176 = load i32, i32* @x.37
  %3177 = load i32, i32* @y.38
  %3178 = sub i32 %3176, 1
  %3179 = mul i32 %3176, %3178
  %3180 = urem i32 %3179, 2
  %3181 = icmp eq i32 %3180, 0
  %3182 = icmp slt i32 %3177, 10
  %3183 = or i1 %3181, %3182
  br i1 %3183, label %originalBBpart2842, label %originalBB840alteredBB

originalBBpart2842:                               ; preds = %originalBB840
  br i1 %3175, label %3184, label %3201, !dbg !2813

3184:                                             ; preds = %originalBBpart2842
  %3185 = load i32, i32* @x.37
  %3186 = load i32, i32* @y.38
  %3187 = sub i32 %3185, 1
  %3188 = mul i32 %3185, %3187
  %3189 = urem i32 %3188, 2
  %3190 = icmp eq i32 %3189, 0
  %3191 = icmp slt i32 %3186, 10
  %3192 = or i1 %3190, %3191
  br i1 %3192, label %originalBB844, label %originalBB844alteredBB

originalBB844:                                    ; preds = %3184, %originalBB844alteredBB
  %3193 = load i32, i32* @x.37
  %3194 = load i32, i32* @y.38
  %3195 = sub i32 %3193, 1
  %3196 = mul i32 %3193, %3195
  %3197 = urem i32 %3196, 2
  %3198 = icmp eq i32 %3197, 0
  %3199 = icmp slt i32 %3194, 10
  %3200 = or i1 %3198, %3199
  br i1 %3200, label %originalBBpart2846, label %originalBB844alteredBB

originalBBpart2846:                               ; preds = %originalBB844
  br label %6990, !dbg !2814

3201:                                             ; preds = %originalBBpart2842
  %3202 = load i32, i32* @x.37
  %3203 = load i32, i32* @y.38
  %3204 = sub i32 %3202, 1
  %3205 = mul i32 %3202, %3204
  %3206 = urem i32 %3205, 2
  %3207 = icmp eq i32 %3206, 0
  %3208 = icmp slt i32 %3203, 10
  %3209 = or i1 %3207, %3208
  br i1 %3209, label %originalBB848, label %originalBB848alteredBB

originalBB848:                                    ; preds = %3201, %originalBB848alteredBB
  %3210 = load i64, i64* %20, align 8, !dbg !2815
  %3211 = icmp ne i64 %3210, 0, !dbg !2815
  %3212 = load i32, i32* @x.37
  %3213 = load i32, i32* @y.38
  %3214 = sub i32 %3212, 1
  %3215 = mul i32 %3212, %3214
  %3216 = urem i32 %3215, 2
  %3217 = icmp eq i32 %3216, 0
  %3218 = icmp slt i32 %3213, 10
  %3219 = or i1 %3217, %3218
  br i1 %3219, label %originalBBpart2850, label %originalBB848alteredBB

originalBBpart2850:                               ; preds = %originalBB848
  br i1 %3211, label %3220, label %3257, !dbg !2817

3220:                                             ; preds = %originalBBpart2850
  %3221 = load i32, i32* @x.37
  %3222 = load i32, i32* @y.38
  %3223 = sub i32 %3221, 1
  %3224 = mul i32 %3221, %3223
  %3225 = urem i32 %3224, 2
  %3226 = icmp eq i32 %3225, 0
  %3227 = icmp slt i32 %3222, 10
  %3228 = or i1 %3226, %3227
  br i1 %3228, label %originalBB852, label %originalBB852alteredBB

originalBB852:                                    ; preds = %3220, %originalBB852alteredBB
  %3229 = load i64, i64* %30, align 8, !dbg !2818
  %3230 = icmp ne i64 %3229, 0, !dbg !2818
  %3231 = load i32, i32* @x.37
  %3232 = load i32, i32* @y.38
  %3233 = sub i32 %3231, 1
  %3234 = mul i32 %3231, %3233
  %3235 = urem i32 %3234, 2
  %3236 = icmp eq i32 %3235, 0
  %3237 = icmp slt i32 %3232, 10
  %3238 = or i1 %3236, %3237
  br i1 %3238, label %originalBBpart2854, label %originalBB852alteredBB

originalBBpart2854:                               ; preds = %originalBB852
  br i1 %3230, label %3257, label %3239, !dbg !2819

3239:                                             ; preds = %originalBBpart2854
  %3240 = load i32, i32* @x.37
  %3241 = load i32, i32* @y.38
  %3242 = sub i32 %3240, 1
  %3243 = mul i32 %3240, %3242
  %3244 = urem i32 %3243, 2
  %3245 = icmp eq i32 %3244, 0
  %3246 = icmp slt i32 %3241, 10
  %3247 = or i1 %3245, %3246
  br i1 %3247, label %originalBB856, label %originalBB856alteredBB

originalBB856:                                    ; preds = %3239, %originalBB856alteredBB
  %3248 = load i64, i64* %20, align 8, !dbg !2820
  store i64 %3248, i64* %30, align 8, !dbg !2822
  store i64 0, i64* %20, align 8, !dbg !2823
  %3249 = load i32, i32* @x.37
  %3250 = load i32, i32* @y.38
  %3251 = sub i32 %3249, 1
  %3252 = mul i32 %3249, %3251
  %3253 = urem i32 %3252, 2
  %3254 = icmp eq i32 %3253, 0
  %3255 = icmp slt i32 %3250, 10
  %3256 = or i1 %3254, %3255
  br i1 %3256, label %originalBBpart2858, label %originalBB856alteredBB

originalBBpart2858:                               ; preds = %originalBB856
  br label %3257, !dbg !2824

3257:                                             ; preds = %originalBBpart2858, %originalBBpart2854, %originalBBpart2850
  %3258 = load i32, i32* @x.37
  %3259 = load i32, i32* @y.38
  %3260 = sub i32 %3258, 1
  %3261 = mul i32 %3258, %3260
  %3262 = urem i32 %3261, 2
  %3263 = icmp eq i32 %3262, 0
  %3264 = icmp slt i32 %3259, 10
  %3265 = or i1 %3263, %3264
  br i1 %3265, label %originalBB860, label %originalBB860alteredBB

originalBB860:                                    ; preds = %3257, %originalBB860alteredBB
  %3266 = load i32, i32* @x.37
  %3267 = load i32, i32* @y.38
  %3268 = sub i32 %3266, 1
  %3269 = mul i32 %3266, %3268
  %3270 = urem i32 %3269, 2
  %3271 = icmp eq i32 %3270, 0
  %3272 = icmp slt i32 %3267, 10
  %3273 = or i1 %3271, %3272
  br i1 %3273, label %originalBBpart2862, label %originalBB860alteredBB

originalBBpart2862:                               ; preds = %originalBB860
  br label %3274, !dbg !2825

3274:                                             ; preds = %originalBBpart2862
  %3275 = load i32, i32* @x.37
  %3276 = load i32, i32* @y.38
  %3277 = sub i32 %3275, 1
  %3278 = mul i32 %3275, %3277
  %3279 = urem i32 %3278, 2
  %3280 = icmp eq i32 %3279, 0
  %3281 = icmp slt i32 %3276, 10
  %3282 = or i1 %3280, %3281
  br i1 %3282, label %originalBB864, label %originalBB864alteredBB

originalBB864:                                    ; preds = %3274, %originalBB864alteredBB
  %3283 = load i64, i64* %29, align 8, !dbg !2826
  %3284 = load i64, i64* %20, align 8, !dbg !2826
  %3285 = icmp ult i64 %3283, %3284, !dbg !2826
  %3286 = load i32, i32* @x.37
  %3287 = load i32, i32* @y.38
  %3288 = sub i32 %3286, 1
  %3289 = mul i32 %3286, %3288
  %3290 = urem i32 %3289, 2
  %3291 = icmp eq i32 %3290, 0
  %3292 = icmp slt i32 %3287, 10
  %3293 = or i1 %3291, %3292
  br i1 %3293, label %originalBBpart2866, label %originalBB864alteredBB

originalBBpart2866:                               ; preds = %originalBB864
  br i1 %3285, label %3294, label %3314, !dbg !2829

3294:                                             ; preds = %originalBBpart2866
  %3295 = load i32, i32* @x.37
  %3296 = load i32, i32* @y.38
  %3297 = sub i32 %3295, 1
  %3298 = mul i32 %3295, %3297
  %3299 = urem i32 %3298, 2
  %3300 = icmp eq i32 %3299, 0
  %3301 = icmp slt i32 %3296, 10
  %3302 = or i1 %3300, %3301
  br i1 %3302, label %originalBB868, label %originalBB868alteredBB

originalBB868:                                    ; preds = %3294, %originalBB868alteredBB
  %3303 = load i8*, i8** %19, align 8, !dbg !2826
  %3304 = load i64, i64* %29, align 8, !dbg !2826
  %3305 = getelementptr inbounds i8, i8* %3303, i64 %3304, !dbg !2826
  store i8 39, i8* %3305, align 1, !dbg !2826
  %3306 = load i32, i32* @x.37
  %3307 = load i32, i32* @y.38
  %3308 = sub i32 %3306, 1
  %3309 = mul i32 %3306, %3308
  %3310 = urem i32 %3309, 2
  %3311 = icmp eq i32 %3310, 0
  %3312 = icmp slt i32 %3307, 10
  %3313 = or i1 %3311, %3312
  br i1 %3313, label %originalBBpart2870, label %originalBB868alteredBB

originalBBpart2870:                               ; preds = %originalBB868
  br label %3314, !dbg !2826

3314:                                             ; preds = %originalBBpart2870, %originalBBpart2866
  %3315 = load i32, i32* @x.37
  %3316 = load i32, i32* @y.38
  %3317 = sub i32 %3315, 1
  %3318 = mul i32 %3315, %3317
  %3319 = urem i32 %3318, 2
  %3320 = icmp eq i32 %3319, 0
  %3321 = icmp slt i32 %3316, 10
  %3322 = or i1 %3320, %3321
  br i1 %3322, label %originalBB872, label %originalBB872alteredBB

originalBB872:                                    ; preds = %3314, %originalBB872alteredBB
  %3323 = load i64, i64* %29, align 8, !dbg !2829
  %3324 = add i64 %3323, 1, !dbg !2829
  store i64 %3324, i64* %29, align 8, !dbg !2829
  %3325 = load i32, i32* @x.37
  %3326 = load i32, i32* @y.38
  %3327 = sub i32 %3325, 1
  %3328 = mul i32 %3325, %3327
  %3329 = urem i32 %3328, 2
  %3330 = icmp eq i32 %3329, 0
  %3331 = icmp slt i32 %3326, 10
  %3332 = or i1 %3330, %3331
  br i1 %3332, label %originalBBpart2882, label %originalBB872alteredBB

originalBBpart2882:                               ; preds = %originalBB872
  br label %3333, !dbg !2829

3333:                                             ; preds = %originalBBpart2882
  %3334 = load i32, i32* @x.37
  %3335 = load i32, i32* @y.38
  %3336 = sub i32 %3334, 1
  %3337 = mul i32 %3334, %3336
  %3338 = urem i32 %3337, 2
  %3339 = icmp eq i32 %3338, 0
  %3340 = icmp slt i32 %3335, 10
  %3341 = or i1 %3339, %3340
  br i1 %3341, label %originalBB884, label %originalBB884alteredBB

originalBB884:                                    ; preds = %3333, %originalBB884alteredBB
  %3342 = load i32, i32* @x.37
  %3343 = load i32, i32* @y.38
  %3344 = sub i32 %3342, 1
  %3345 = mul i32 %3342, %3344
  %3346 = urem i32 %3345, 2
  %3347 = icmp eq i32 %3346, 0
  %3348 = icmp slt i32 %3343, 10
  %3349 = or i1 %3347, %3348
  br i1 %3349, label %originalBBpart2886, label %originalBB884alteredBB

originalBBpart2886:                               ; preds = %originalBB884
  br label %3350, !dbg !2830

3350:                                             ; preds = %originalBBpart2886
  %3351 = load i32, i32* @x.37
  %3352 = load i32, i32* @y.38
  %3353 = sub i32 %3351, 1
  %3354 = mul i32 %3351, %3353
  %3355 = urem i32 %3354, 2
  %3356 = icmp eq i32 %3355, 0
  %3357 = icmp slt i32 %3352, 10
  %3358 = or i1 %3356, %3357
  br i1 %3358, label %originalBB888, label %originalBB888alteredBB

originalBB888:                                    ; preds = %3350, %originalBB888alteredBB
  %3359 = load i64, i64* %29, align 8, !dbg !2831
  %3360 = load i64, i64* %20, align 8, !dbg !2831
  %3361 = icmp ult i64 %3359, %3360, !dbg !2831
  %3362 = load i32, i32* @x.37
  %3363 = load i32, i32* @y.38
  %3364 = sub i32 %3362, 1
  %3365 = mul i32 %3362, %3364
  %3366 = urem i32 %3365, 2
  %3367 = icmp eq i32 %3366, 0
  %3368 = icmp slt i32 %3363, 10
  %3369 = or i1 %3367, %3368
  br i1 %3369, label %originalBBpart2890, label %originalBB888alteredBB

originalBBpart2890:                               ; preds = %originalBB888
  br i1 %3361, label %3370, label %3390, !dbg !2834

3370:                                             ; preds = %originalBBpart2890
  %3371 = load i32, i32* @x.37
  %3372 = load i32, i32* @y.38
  %3373 = sub i32 %3371, 1
  %3374 = mul i32 %3371, %3373
  %3375 = urem i32 %3374, 2
  %3376 = icmp eq i32 %3375, 0
  %3377 = icmp slt i32 %3372, 10
  %3378 = or i1 %3376, %3377
  br i1 %3378, label %originalBB892, label %originalBB892alteredBB

originalBB892:                                    ; preds = %3370, %originalBB892alteredBB
  %3379 = load i8*, i8** %19, align 8, !dbg !2831
  %3380 = load i64, i64* %29, align 8, !dbg !2831
  %3381 = getelementptr inbounds i8, i8* %3379, i64 %3380, !dbg !2831
  store i8 92, i8* %3381, align 1, !dbg !2831
  %3382 = load i32, i32* @x.37
  %3383 = load i32, i32* @y.38
  %3384 = sub i32 %3382, 1
  %3385 = mul i32 %3382, %3384
  %3386 = urem i32 %3385, 2
  %3387 = icmp eq i32 %3386, 0
  %3388 = icmp slt i32 %3383, 10
  %3389 = or i1 %3387, %3388
  br i1 %3389, label %originalBBpart2894, label %originalBB892alteredBB

originalBBpart2894:                               ; preds = %originalBB892
  br label %3390, !dbg !2831

3390:                                             ; preds = %originalBBpart2894, %originalBBpart2890
  %3391 = load i32, i32* @x.37
  %3392 = load i32, i32* @y.38
  %3393 = sub i32 %3391, 1
  %3394 = mul i32 %3391, %3393
  %3395 = urem i32 %3394, 2
  %3396 = icmp eq i32 %3395, 0
  %3397 = icmp slt i32 %3392, 10
  %3398 = or i1 %3396, %3397
  br i1 %3398, label %originalBB896, label %originalBB896alteredBB

originalBB896:                                    ; preds = %3390, %originalBB896alteredBB
  %3399 = load i64, i64* %29, align 8, !dbg !2834
  %3400 = add i64 %3399, 1, !dbg !2834
  store i64 %3400, i64* %29, align 8, !dbg !2834
  %3401 = load i32, i32* @x.37
  %3402 = load i32, i32* @y.38
  %3403 = sub i32 %3401, 1
  %3404 = mul i32 %3401, %3403
  %3405 = urem i32 %3404, 2
  %3406 = icmp eq i32 %3405, 0
  %3407 = icmp slt i32 %3402, 10
  %3408 = or i1 %3406, %3407
  br i1 %3408, label %originalBBpart2914, label %originalBB896alteredBB

originalBBpart2914:                               ; preds = %originalBB896
  br label %3409, !dbg !2834

3409:                                             ; preds = %originalBBpart2914
  %3410 = load i32, i32* @x.37
  %3411 = load i32, i32* @y.38
  %3412 = sub i32 %3410, 1
  %3413 = mul i32 %3410, %3412
  %3414 = urem i32 %3413, 2
  %3415 = icmp eq i32 %3414, 0
  %3416 = icmp slt i32 %3411, 10
  %3417 = or i1 %3415, %3416
  br i1 %3417, label %originalBB916, label %originalBB916alteredBB

originalBB916:                                    ; preds = %3409, %originalBB916alteredBB
  %3418 = load i32, i32* @x.37
  %3419 = load i32, i32* @y.38
  %3420 = sub i32 %3418, 1
  %3421 = mul i32 %3418, %3420
  %3422 = urem i32 %3421, 2
  %3423 = icmp eq i32 %3422, 0
  %3424 = icmp slt i32 %3419, 10
  %3425 = or i1 %3423, %3424
  br i1 %3425, label %originalBBpart2918, label %originalBB916alteredBB

originalBBpart2918:                               ; preds = %originalBB916
  br label %3426, !dbg !2835

3426:                                             ; preds = %originalBBpart2918
  %3427 = load i32, i32* @x.37
  %3428 = load i32, i32* @y.38
  %3429 = sub i32 %3427, 1
  %3430 = mul i32 %3427, %3429
  %3431 = urem i32 %3430, 2
  %3432 = icmp eq i32 %3431, 0
  %3433 = icmp slt i32 %3428, 10
  %3434 = or i1 %3432, %3433
  br i1 %3434, label %originalBB920, label %originalBB920alteredBB

originalBB920:                                    ; preds = %3426, %originalBB920alteredBB
  %3435 = load i64, i64* %29, align 8, !dbg !2836
  %3436 = load i64, i64* %20, align 8, !dbg !2836
  %3437 = icmp ult i64 %3435, %3436, !dbg !2836
  %3438 = load i32, i32* @x.37
  %3439 = load i32, i32* @y.38
  %3440 = sub i32 %3438, 1
  %3441 = mul i32 %3438, %3440
  %3442 = urem i32 %3441, 2
  %3443 = icmp eq i32 %3442, 0
  %3444 = icmp slt i32 %3439, 10
  %3445 = or i1 %3443, %3444
  br i1 %3445, label %originalBBpart2922, label %originalBB920alteredBB

originalBBpart2922:                               ; preds = %originalBB920
  br i1 %3437, label %3446, label %3466, !dbg !2839

3446:                                             ; preds = %originalBBpart2922
  %3447 = load i32, i32* @x.37
  %3448 = load i32, i32* @y.38
  %3449 = sub i32 %3447, 1
  %3450 = mul i32 %3447, %3449
  %3451 = urem i32 %3450, 2
  %3452 = icmp eq i32 %3451, 0
  %3453 = icmp slt i32 %3448, 10
  %3454 = or i1 %3452, %3453
  br i1 %3454, label %originalBB924, label %originalBB924alteredBB

originalBB924:                                    ; preds = %3446, %originalBB924alteredBB
  %3455 = load i8*, i8** %19, align 8, !dbg !2836
  %3456 = load i64, i64* %29, align 8, !dbg !2836
  %3457 = getelementptr inbounds i8, i8* %3455, i64 %3456, !dbg !2836
  store i8 39, i8* %3457, align 1, !dbg !2836
  %3458 = load i32, i32* @x.37
  %3459 = load i32, i32* @y.38
  %3460 = sub i32 %3458, 1
  %3461 = mul i32 %3458, %3460
  %3462 = urem i32 %3461, 2
  %3463 = icmp eq i32 %3462, 0
  %3464 = icmp slt i32 %3459, 10
  %3465 = or i1 %3463, %3464
  br i1 %3465, label %originalBBpart2926, label %originalBB924alteredBB

originalBBpart2926:                               ; preds = %originalBB924
  br label %3466, !dbg !2836

3466:                                             ; preds = %originalBBpart2926, %originalBBpart2922
  %3467 = load i32, i32* @x.37
  %3468 = load i32, i32* @y.38
  %3469 = sub i32 %3467, 1
  %3470 = mul i32 %3467, %3469
  %3471 = urem i32 %3470, 2
  %3472 = icmp eq i32 %3471, 0
  %3473 = icmp slt i32 %3468, 10
  %3474 = or i1 %3472, %3473
  br i1 %3474, label %originalBB928, label %originalBB928alteredBB

originalBB928:                                    ; preds = %3466, %originalBB928alteredBB
  %3475 = load i64, i64* %29, align 8, !dbg !2839
  %3476 = add i64 %3475, 1, !dbg !2839
  store i64 %3476, i64* %29, align 8, !dbg !2839
  %3477 = load i32, i32* @x.37
  %3478 = load i32, i32* @y.38
  %3479 = sub i32 %3477, 1
  %3480 = mul i32 %3477, %3479
  %3481 = urem i32 %3480, 2
  %3482 = icmp eq i32 %3481, 0
  %3483 = icmp slt i32 %3478, 10
  %3484 = or i1 %3482, %3483
  br i1 %3484, label %originalBBpart2934, label %originalBB928alteredBB

originalBBpart2934:                               ; preds = %originalBB928
  br label %3485, !dbg !2839

3485:                                             ; preds = %originalBBpart2934
  %3486 = load i32, i32* @x.37
  %3487 = load i32, i32* @y.38
  %3488 = sub i32 %3486, 1
  %3489 = mul i32 %3486, %3488
  %3490 = urem i32 %3489, 2
  %3491 = icmp eq i32 %3490, 0
  %3492 = icmp slt i32 %3487, 10
  %3493 = or i1 %3491, %3492
  br i1 %3493, label %originalBB936, label %originalBB936alteredBB

originalBB936:                                    ; preds = %3485, %originalBB936alteredBB
  store i8 0, i8* %36, align 1, !dbg !2840
  %3494 = load i32, i32* @x.37
  %3495 = load i32, i32* @y.38
  %3496 = sub i32 %3494, 1
  %3497 = mul i32 %3494, %3496
  %3498 = urem i32 %3497, 2
  %3499 = icmp eq i32 %3498, 0
  %3500 = icmp slt i32 %3495, 10
  %3501 = or i1 %3499, %3500
  br i1 %3501, label %originalBBpart2938, label %originalBB936alteredBB

originalBBpart2938:                               ; preds = %originalBB936
  br label %3502, !dbg !2841

3502:                                             ; preds = %originalBBpart2938, %originalBBpart2838
  %3503 = load i32, i32* @x.37
  %3504 = load i32, i32* @y.38
  %3505 = sub i32 %3503, 1
  %3506 = mul i32 %3503, %3505
  %3507 = urem i32 %3506, 2
  %3508 = icmp eq i32 %3507, 0
  %3509 = icmp slt i32 %3504, 10
  %3510 = or i1 %3508, %3509
  br i1 %3510, label %originalBB940, label %originalBB940alteredBB

originalBB940:                                    ; preds = %3502, %originalBB940alteredBB
  %3511 = load i32, i32* @x.37
  %3512 = load i32, i32* @y.38
  %3513 = sub i32 %3511, 1
  %3514 = mul i32 %3511, %3513
  %3515 = urem i32 %3514, 2
  %3516 = icmp eq i32 %3515, 0
  %3517 = icmp slt i32 %3512, 10
  %3518 = or i1 %3516, %3517
  br i1 %3518, label %originalBBpart2942, label %originalBB940alteredBB

originalBBpart2942:                               ; preds = %originalBB940
  br label %5465, !dbg !2842

3519:                                             ; preds = %originalBBpart2247, %originalBBpart2247, %originalBBpart2247, %originalBBpart2247, %originalBBpart2247, %originalBBpart2247, %originalBBpart2247, %originalBBpart2247, %originalBBpart2247, %originalBBpart2247, %originalBBpart2247, %originalBBpart2247, %originalBBpart2247, %originalBBpart2247, %originalBBpart2247, %originalBBpart2247, %originalBBpart2247, %originalBBpart2247, %originalBBpart2247, %originalBBpart2247, %originalBBpart2247, %originalBBpart2247, %originalBBpart2247, %originalBBpart2247, %originalBBpart2247, %originalBBpart2247, %originalBBpart2247, %originalBBpart2247, %originalBBpart2247, %originalBBpart2247, %originalBBpart2247, %originalBBpart2247, %originalBBpart2247, %originalBBpart2247, %originalBBpart2247, %originalBBpart2247, %originalBBpart2247, %originalBBpart2247, %originalBBpart2247, %originalBBpart2247, %originalBBpart2247, %originalBBpart2247, %originalBBpart2247, %originalBBpart2247, %originalBBpart2247, %originalBBpart2247, %originalBBpart2247, %originalBBpart2247, %originalBBpart2247, %originalBBpart2247, %originalBBpart2247, %originalBBpart2247, %originalBBpart2247, %originalBBpart2247, %originalBBpart2247, %originalBBpart2247, %originalBBpart2247, %originalBBpart2247, %originalBBpart2247, %originalBBpart2247, %originalBBpart2247, %originalBBpart2247, %originalBBpart2247, %originalBBpart2247, %originalBBpart2247, %originalBBpart2247, %originalBBpart2247, %originalBBpart2247, %originalBBpart2247, %originalBBpart2247, %originalBBpart2247
  %3520 = load i32, i32* @x.37
  %3521 = load i32, i32* @y.38
  %3522 = sub i32 %3520, 1
  %3523 = mul i32 %3520, %3522
  %3524 = urem i32 %3523, 2
  %3525 = icmp eq i32 %3524, 0
  %3526 = icmp slt i32 %3521, 10
  %3527 = or i1 %3525, %3526
  br i1 %3527, label %originalBB944, label %originalBB944alteredBB

originalBB944:                                    ; preds = %3519, %originalBB944alteredBB
  store i8 1, i8* %43, align 1, !dbg !2843
  %3528 = load i32, i32* @x.37
  %3529 = load i32, i32* @y.38
  %3530 = sub i32 %3528, 1
  %3531 = mul i32 %3528, %3530
  %3532 = urem i32 %3531, 2
  %3533 = icmp eq i32 %3532, 0
  %3534 = icmp slt i32 %3529, 10
  %3535 = or i1 %3533, %3534
  br i1 %3535, label %originalBBpart2946, label %originalBB944alteredBB

originalBBpart2946:                               ; preds = %originalBB944
  br label %5465, !dbg !2844

3536:                                             ; preds = %originalBBpart2247
  call void @llvm.dbg.declare(metadata i64* %44, metadata !2845, metadata !DIExpression()), !dbg !2847
  call void @llvm.dbg.declare(metadata i8* %45, metadata !2848, metadata !DIExpression()), !dbg !2849
  %3537 = load i32, i32* @x.37
  %3538 = load i32, i32* @y.38
  %3539 = sub i32 %3537, 1
  %3540 = mul i32 %3537, %3539
  %3541 = urem i32 %3540, 2
  %3542 = icmp eq i32 %3541, 0
  %3543 = icmp slt i32 %3538, 10
  %3544 = or i1 %3542, %3543
  br i1 %3544, label %originalBB948, label %originalBB948alteredBB

originalBB948:                                    ; preds = %3536, %originalBB948alteredBB
  %3545 = load i8, i8* %34, align 1, !dbg !2850
  %3546 = trunc i8 %3545 to i1, !dbg !2850
  %3547 = load i32, i32* @x.37
  %3548 = load i32, i32* @y.38
  %3549 = sub i32 %3547, 1
  %3550 = mul i32 %3547, %3549
  %3551 = urem i32 %3550, 2
  %3552 = icmp eq i32 %3551, 0
  %3553 = icmp slt i32 %3548, 10
  %3554 = or i1 %3552, %3553
  br i1 %3554, label %originalBBpart2950, label %originalBB948alteredBB

originalBBpart2950:                               ; preds = %originalBB948
  br i1 %3546, label %3555, label %3583, !dbg !2852

3555:                                             ; preds = %originalBBpart2950
  %3556 = load i32, i32* @x.37
  %3557 = load i32, i32* @y.38
  %3558 = sub i32 %3556, 1
  %3559 = mul i32 %3556, %3558
  %3560 = urem i32 %3559, 2
  %3561 = icmp eq i32 %3560, 0
  %3562 = icmp slt i32 %3557, 10
  %3563 = or i1 %3561, %3562
  br i1 %3563, label %originalBB952, label %originalBB952alteredBB

originalBB952:                                    ; preds = %3555, %originalBB952alteredBB
  store i64 1, i64* %44, align 8, !dbg !2853
  %3564 = call i16** @__ctype_b_loc() #15, !dbg !2855
  %3565 = load i16*, i16** %3564, align 8, !dbg !2855
  %3566 = load i8, i8* %39, align 1, !dbg !2855
  %3567 = zext i8 %3566 to i32, !dbg !2855
  %3568 = sext i32 %3567 to i64, !dbg !2855
  %3569 = getelementptr inbounds i16, i16* %3565, i64 %3568, !dbg !2855
  %3570 = load i16, i16* %3569, align 2, !dbg !2855
  %3571 = zext i16 %3570 to i32, !dbg !2855
  %3572 = and i32 %3571, 16384, !dbg !2855
  %3573 = icmp ne i32 %3572, 0, !dbg !2856
  %3574 = zext i1 %3573 to i8, !dbg !2857
  store i8 %3574, i8* %45, align 1, !dbg !2857
  %3575 = load i32, i32* @x.37
  %3576 = load i32, i32* @y.38
  %3577 = sub i32 %3575, 1
  %3578 = mul i32 %3575, %3577
  %3579 = urem i32 %3578, 2
  %3580 = icmp eq i32 %3579, 0
  %3581 = icmp slt i32 %3576, 10
  %3582 = or i1 %3580, %3581
  br i1 %3582, label %originalBBpart2955, label %originalBB952alteredBB

originalBBpart2955:                               ; preds = %originalBB952
  br label %4192, !dbg !2858

3583:                                             ; preds = %originalBBpart2950
  call void @llvm.dbg.declare(metadata %struct.__mbstate_t* %46, metadata !2859, metadata !DIExpression()), !dbg !2876
  %3584 = load i32, i32* @x.37
  %3585 = load i32, i32* @y.38
  %3586 = sub i32 %3584, 1
  %3587 = mul i32 %3584, %3586
  %3588 = urem i32 %3587, 2
  %3589 = icmp eq i32 %3588, 0
  %3590 = icmp slt i32 %3585, 10
  %3591 = or i1 %3589, %3590
  br i1 %3591, label %originalBB957, label %originalBB957alteredBB

originalBB957:                                    ; preds = %3583, %originalBB957alteredBB
  %3592 = bitcast %struct.__mbstate_t* %46 to i8*, !dbg !2877
  call void @llvm.memset.p0i8.i64(i8* align 4 %3592, i8 0, i64 8, i1 false), !dbg !2877
  store i64 0, i64* %44, align 8, !dbg !2878
  store i8 1, i8* %45, align 1, !dbg !2879
  %3593 = load i64, i64* %22, align 8, !dbg !2880
  %3594 = icmp eq i64 %3593, -1, !dbg !2882
  %3595 = load i32, i32* @x.37
  %3596 = load i32, i32* @y.38
  %3597 = sub i32 %3595, 1
  %3598 = mul i32 %3595, %3597
  %3599 = urem i32 %3598, 2
  %3600 = icmp eq i32 %3599, 0
  %3601 = icmp slt i32 %3596, 10
  %3602 = or i1 %3600, %3601
  br i1 %3602, label %originalBBpart2959, label %originalBB957alteredBB

originalBBpart2959:                               ; preds = %originalBB957
  br i1 %3594, label %3603, label %3622, !dbg !2883

3603:                                             ; preds = %originalBBpart2959
  %3604 = load i32, i32* @x.37
  %3605 = load i32, i32* @y.38
  %3606 = sub i32 %3604, 1
  %3607 = mul i32 %3604, %3606
  %3608 = urem i32 %3607, 2
  %3609 = icmp eq i32 %3608, 0
  %3610 = icmp slt i32 %3605, 10
  %3611 = or i1 %3609, %3610
  br i1 %3611, label %originalBB961, label %originalBB961alteredBB

originalBB961:                                    ; preds = %3603, %originalBB961alteredBB
  %3612 = load i8*, i8** %21, align 8, !dbg !2884
  %3613 = call i64 @strlen(i8* %3612) #13, !dbg !2885
  store i64 %3613, i64* %22, align 8, !dbg !2886
  %3614 = load i32, i32* @x.37
  %3615 = load i32, i32* @y.38
  %3616 = sub i32 %3614, 1
  %3617 = mul i32 %3614, %3616
  %3618 = urem i32 %3617, 2
  %3619 = icmp eq i32 %3618, 0
  %3620 = icmp slt i32 %3615, 10
  %3621 = or i1 %3619, %3620
  br i1 %3621, label %originalBBpart2963, label %originalBB961alteredBB

originalBBpart2963:                               ; preds = %originalBB961
  br label %3622, !dbg !2887

3622:                                             ; preds = %originalBBpart2963, %originalBBpart2959
  %3623 = load i32, i32* @x.37
  %3624 = load i32, i32* @y.38
  %3625 = sub i32 %3623, 1
  %3626 = mul i32 %3623, %3625
  %3627 = urem i32 %3626, 2
  %3628 = icmp eq i32 %3627, 0
  %3629 = icmp slt i32 %3624, 10
  %3630 = or i1 %3628, %3629
  br i1 %3630, label %originalBB965, label %originalBB965alteredBB

originalBB965:                                    ; preds = %3622, %originalBB965alteredBB
  %3631 = load i32, i32* @x.37
  %3632 = load i32, i32* @y.38
  %3633 = sub i32 %3631, 1
  %3634 = mul i32 %3631, %3633
  %3635 = urem i32 %3634, 2
  %3636 = icmp eq i32 %3635, 0
  %3637 = icmp slt i32 %3632, 10
  %3638 = or i1 %3636, %3637
  br i1 %3638, label %originalBBpart2967, label %originalBB965alteredBB

originalBBpart2967:                               ; preds = %originalBB965
  br label %3639, !dbg !2888

3639:                                             ; preds = %originalBBpart21151, %originalBBpart2967
  call void @llvm.dbg.declare(metadata i32* %47, metadata !2889, metadata !DIExpression()), !dbg !2892
  call void @llvm.dbg.declare(metadata i64* %48, metadata !2893, metadata !DIExpression()), !dbg !2894
  %3640 = load i32, i32* @x.37
  %3641 = load i32, i32* @y.38
  %3642 = sub i32 %3640, 1
  %3643 = mul i32 %3640, %3642
  %3644 = urem i32 %3643, 2
  %3645 = icmp eq i32 %3644, 0
  %3646 = icmp slt i32 %3641, 10
  %3647 = or i1 %3645, %3646
  br i1 %3647, label %originalBB969, label %originalBB969alteredBB

originalBB969:                                    ; preds = %3639, %originalBB969alteredBB
  %3648 = load i8*, i8** %21, align 8, !dbg !2895
  %3649 = load i64, i64* %28, align 8, !dbg !2896
  %3650 = load i64, i64* %44, align 8, !dbg !2897
  %3651 = add i64 %3649, %3650, !dbg !2898
  %3652 = getelementptr inbounds i8, i8* %3648, i64 %3651, !dbg !2895
  %3653 = load i64, i64* %22, align 8, !dbg !2899
  %3654 = load i64, i64* %28, align 8, !dbg !2900
  %3655 = load i64, i64* %44, align 8, !dbg !2901
  %3656 = add i64 %3654, %3655, !dbg !2902
  %3657 = sub i64 %3653, %3656, !dbg !2903
  %3658 = call i64 @rpl_mbrtowc(i32* %47, i8* %3652, i64 %3657, %struct.__mbstate_t* %46), !dbg !2904
  store i64 %3658, i64* %48, align 8, !dbg !2894
  %3659 = load i64, i64* %48, align 8, !dbg !2905
  %3660 = icmp eq i64 %3659, 0, !dbg !2907
  %3661 = load i32, i32* @x.37
  %3662 = load i32, i32* @y.38
  %3663 = sub i32 %3661, 1
  %3664 = mul i32 %3661, %3663
  %3665 = urem i32 %3664, 2
  %3666 = icmp eq i32 %3665, 0
  %3667 = icmp slt i32 %3662, 10
  %3668 = or i1 %3666, %3667
  br i1 %3668, label %originalBBpart2993, label %originalBB969alteredBB

originalBBpart2993:                               ; preds = %originalBB969
  br i1 %3660, label %3669, label %3686, !dbg !2908

3669:                                             ; preds = %originalBBpart2993
  %3670 = load i32, i32* @x.37
  %3671 = load i32, i32* @y.38
  %3672 = sub i32 %3670, 1
  %3673 = mul i32 %3670, %3672
  %3674 = urem i32 %3673, 2
  %3675 = icmp eq i32 %3674, 0
  %3676 = icmp slt i32 %3671, 10
  %3677 = or i1 %3675, %3676
  br i1 %3677, label %originalBB995, label %originalBB995alteredBB

originalBB995:                                    ; preds = %3669, %originalBB995alteredBB
  %3678 = load i32, i32* @x.37
  %3679 = load i32, i32* @y.38
  %3680 = sub i32 %3678, 1
  %3681 = mul i32 %3678, %3680
  %3682 = urem i32 %3681, 2
  %3683 = icmp eq i32 %3682, 0
  %3684 = icmp slt i32 %3679, 10
  %3685 = or i1 %3683, %3684
  br i1 %3685, label %originalBBpart2997, label %originalBB995alteredBB

originalBBpart2997:                               ; preds = %originalBB995
  br label %4175, !dbg !2909

3686:                                             ; preds = %originalBBpart2993
  %3687 = load i32, i32* @x.37
  %3688 = load i32, i32* @y.38
  %3689 = sub i32 %3687, 1
  %3690 = mul i32 %3687, %3689
  %3691 = urem i32 %3690, 2
  %3692 = icmp eq i32 %3691, 0
  %3693 = icmp slt i32 %3688, 10
  %3694 = or i1 %3692, %3693
  br i1 %3694, label %originalBB999, label %originalBB999alteredBB

originalBB999:                                    ; preds = %3686, %originalBB999alteredBB
  %3695 = load i64, i64* %48, align 8, !dbg !2910
  %3696 = icmp eq i64 %3695, -1, !dbg !2912
  %3697 = load i32, i32* @x.37
  %3698 = load i32, i32* @y.38
  %3699 = sub i32 %3697, 1
  %3700 = mul i32 %3697, %3699
  %3701 = urem i32 %3700, 2
  %3702 = icmp eq i32 %3701, 0
  %3703 = icmp slt i32 %3698, 10
  %3704 = or i1 %3702, %3703
  br i1 %3704, label %originalBBpart21001, label %originalBB999alteredBB

originalBBpart21001:                              ; preds = %originalBB999
  br i1 %3696, label %3705, label %3722, !dbg !2913

3705:                                             ; preds = %originalBBpart21001
  %3706 = load i32, i32* @x.37
  %3707 = load i32, i32* @y.38
  %3708 = sub i32 %3706, 1
  %3709 = mul i32 %3706, %3708
  %3710 = urem i32 %3709, 2
  %3711 = icmp eq i32 %3710, 0
  %3712 = icmp slt i32 %3707, 10
  %3713 = or i1 %3711, %3712
  br i1 %3713, label %originalBB1003, label %originalBB1003alteredBB

originalBB1003:                                   ; preds = %3705, %originalBB1003alteredBB
  store i8 0, i8* %45, align 1, !dbg !2914
  %3714 = load i32, i32* @x.37
  %3715 = load i32, i32* @y.38
  %3716 = sub i32 %3714, 1
  %3717 = mul i32 %3714, %3716
  %3718 = urem i32 %3717, 2
  %3719 = icmp eq i32 %3718, 0
  %3720 = icmp slt i32 %3715, 10
  %3721 = or i1 %3719, %3720
  br i1 %3721, label %originalBBpart21005, label %originalBB1003alteredBB

originalBBpart21005:                              ; preds = %originalBB1003
  br label %4175, !dbg !2916

3722:                                             ; preds = %originalBBpart21001
  %3723 = load i32, i32* @x.37
  %3724 = load i32, i32* @y.38
  %3725 = sub i32 %3723, 1
  %3726 = mul i32 %3723, %3725
  %3727 = urem i32 %3726, 2
  %3728 = icmp eq i32 %3727, 0
  %3729 = icmp slt i32 %3724, 10
  %3730 = or i1 %3728, %3729
  br i1 %3730, label %originalBB1007, label %originalBB1007alteredBB

originalBB1007:                                   ; preds = %3722, %originalBB1007alteredBB
  %3731 = load i64, i64* %48, align 8, !dbg !2917
  %3732 = icmp eq i64 %3731, -2, !dbg !2919
  %3733 = load i32, i32* @x.37
  %3734 = load i32, i32* @y.38
  %3735 = sub i32 %3733, 1
  %3736 = mul i32 %3733, %3735
  %3737 = urem i32 %3736, 2
  %3738 = icmp eq i32 %3737, 0
  %3739 = icmp slt i32 %3734, 10
  %3740 = or i1 %3738, %3739
  br i1 %3740, label %originalBBpart21009, label %originalBB1007alteredBB

originalBBpart21009:                              ; preds = %originalBB1007
  br i1 %3732, label %3741, label %3859, !dbg !2920

3741:                                             ; preds = %originalBBpart21009
  %3742 = load i32, i32* @x.37
  %3743 = load i32, i32* @y.38
  %3744 = sub i32 %3742, 1
  %3745 = mul i32 %3742, %3744
  %3746 = urem i32 %3745, 2
  %3747 = icmp eq i32 %3746, 0
  %3748 = icmp slt i32 %3743, 10
  %3749 = or i1 %3747, %3748
  br i1 %3749, label %originalBB1011, label %originalBB1011alteredBB

originalBB1011:                                   ; preds = %3741, %originalBB1011alteredBB
  store i8 0, i8* %45, align 1, !dbg !2921
  %3750 = load i32, i32* @x.37
  %3751 = load i32, i32* @y.38
  %3752 = sub i32 %3750, 1
  %3753 = mul i32 %3750, %3752
  %3754 = urem i32 %3753, 2
  %3755 = icmp eq i32 %3754, 0
  %3756 = icmp slt i32 %3751, 10
  %3757 = or i1 %3755, %3756
  br i1 %3757, label %originalBBpart21013, label %originalBB1011alteredBB

originalBBpart21013:                              ; preds = %originalBB1011
  br label %3758, !dbg !2923

3758:                                             ; preds = %originalBBpart21044, %originalBBpart21013
  %3759 = load i32, i32* @x.37
  %3760 = load i32, i32* @y.38
  %3761 = sub i32 %3759, 1
  %3762 = mul i32 %3759, %3761
  %3763 = urem i32 %3762, 2
  %3764 = icmp eq i32 %3763, 0
  %3765 = icmp slt i32 %3760, 10
  %3766 = or i1 %3764, %3765
  br i1 %3766, label %originalBB1015, label %originalBB1015alteredBB

originalBB1015:                                   ; preds = %3758, %originalBB1015alteredBB
  %3767 = load i64, i64* %28, align 8, !dbg !2924
  %3768 = load i64, i64* %44, align 8, !dbg !2925
  %3769 = add i64 %3767, %3768, !dbg !2926
  %3770 = load i64, i64* %22, align 8, !dbg !2927
  %3771 = icmp ult i64 %3769, %3770, !dbg !2928
  %3772 = load i32, i32* @x.37
  %3773 = load i32, i32* @y.38
  %3774 = sub i32 %3772, 1
  %3775 = mul i32 %3772, %3774
  %3776 = urem i32 %3775, 2
  %3777 = icmp eq i32 %3776, 0
  %3778 = icmp slt i32 %3773, 10
  %3779 = or i1 %3777, %3778
  br i1 %3779, label %originalBBpart21025, label %originalBB1015alteredBB

originalBBpart21025:                              ; preds = %originalBB1015
  br i1 %3771, label %3780, label %3805, !dbg !2929

3780:                                             ; preds = %originalBBpart21025
  %3781 = load i32, i32* @x.37
  %3782 = load i32, i32* @y.38
  %3783 = sub i32 %3781, 1
  %3784 = mul i32 %3781, %3783
  %3785 = urem i32 %3784, 2
  %3786 = icmp eq i32 %3785, 0
  %3787 = icmp slt i32 %3782, 10
  %3788 = or i1 %3786, %3787
  br i1 %3788, label %originalBB1027, label %originalBB1027alteredBB

originalBB1027:                                   ; preds = %3780, %originalBB1027alteredBB
  %3789 = load i8*, i8** %21, align 8, !dbg !2930
  %3790 = load i64, i64* %28, align 8, !dbg !2931
  %3791 = load i64, i64* %44, align 8, !dbg !2932
  %3792 = add i64 %3790, %3791, !dbg !2933
  %3793 = getelementptr inbounds i8, i8* %3789, i64 %3792, !dbg !2930
  %3794 = load i8, i8* %3793, align 1, !dbg !2930
  %3795 = sext i8 %3794 to i32, !dbg !2930
  %3796 = icmp ne i32 %3795, 0, !dbg !2929
  %3797 = load i32, i32* @x.37
  %3798 = load i32, i32* @y.38
  %3799 = sub i32 %3797, 1
  %3800 = mul i32 %3797, %3799
  %3801 = urem i32 %3800, 2
  %3802 = icmp eq i32 %3801, 0
  %3803 = icmp slt i32 %3798, 10
  %3804 = or i1 %3802, %3803
  br i1 %3804, label %originalBBpart21033, label %originalBB1027alteredBB

originalBBpart21033:                              ; preds = %originalBB1027
  br label %3805

3805:                                             ; preds = %originalBBpart21033, %originalBBpart21025
  %3806 = phi i1 [ false, %originalBBpart21025 ], [ %3796, %originalBBpart21033 ], !dbg !2934
  %3807 = load i32, i32* @x.37
  %3808 = load i32, i32* @y.38
  %3809 = sub i32 %3807, 1
  %3810 = mul i32 %3807, %3809
  %3811 = urem i32 %3810, 2
  %3812 = icmp eq i32 %3811, 0
  %3813 = icmp slt i32 %3808, 10
  %3814 = or i1 %3812, %3813
  br i1 %3814, label %originalBB1035, label %originalBB1035alteredBB

originalBB1035:                                   ; preds = %3805, %originalBB1035alteredBB
  %3815 = load i32, i32* @x.37
  %3816 = load i32, i32* @y.38
  %3817 = sub i32 %3815, 1
  %3818 = mul i32 %3815, %3817
  %3819 = urem i32 %3818, 2
  %3820 = icmp eq i32 %3819, 0
  %3821 = icmp slt i32 %3816, 10
  %3822 = or i1 %3820, %3821
  br i1 %3822, label %originalBBpart21037, label %originalBB1035alteredBB

originalBBpart21037:                              ; preds = %originalBB1035
  br i1 %3806, label %3823, label %3842, !dbg !2923

3823:                                             ; preds = %originalBBpart21037
  %3824 = load i32, i32* @x.37
  %3825 = load i32, i32* @y.38
  %3826 = sub i32 %3824, 1
  %3827 = mul i32 %3824, %3826
  %3828 = urem i32 %3827, 2
  %3829 = icmp eq i32 %3828, 0
  %3830 = icmp slt i32 %3825, 10
  %3831 = or i1 %3829, %3830
  br i1 %3831, label %originalBB1039, label %originalBB1039alteredBB

originalBB1039:                                   ; preds = %3823, %originalBB1039alteredBB
  %3832 = load i64, i64* %44, align 8, !dbg !2935
  %3833 = add i64 %3832, 1, !dbg !2935
  store i64 %3833, i64* %44, align 8, !dbg !2935
  %3834 = load i32, i32* @x.37
  %3835 = load i32, i32* @y.38
  %3836 = sub i32 %3834, 1
  %3837 = mul i32 %3834, %3836
  %3838 = urem i32 %3837, 2
  %3839 = icmp eq i32 %3838, 0
  %3840 = icmp slt i32 %3835, 10
  %3841 = or i1 %3839, %3840
  br i1 %3841, label %originalBBpart21044, label %originalBB1039alteredBB

originalBBpart21044:                              ; preds = %originalBB1039
  br label %3758, !dbg !2923, !llvm.loop !2936

3842:                                             ; preds = %originalBBpart21037
  %3843 = load i32, i32* @x.37
  %3844 = load i32, i32* @y.38
  %3845 = sub i32 %3843, 1
  %3846 = mul i32 %3843, %3845
  %3847 = urem i32 %3846, 2
  %3848 = icmp eq i32 %3847, 0
  %3849 = icmp slt i32 %3844, 10
  %3850 = or i1 %3848, %3849
  br i1 %3850, label %originalBB1046, label %originalBB1046alteredBB

originalBB1046:                                   ; preds = %3842, %originalBB1046alteredBB
  %3851 = load i32, i32* @x.37
  %3852 = load i32, i32* @y.38
  %3853 = sub i32 %3851, 1
  %3854 = mul i32 %3851, %3853
  %3855 = urem i32 %3854, 2
  %3856 = icmp eq i32 %3855, 0
  %3857 = icmp slt i32 %3852, 10
  %3858 = or i1 %3856, %3857
  br i1 %3858, label %originalBBpart21048, label %originalBB1046alteredBB

originalBBpart21048:                              ; preds = %originalBB1046
  br label %4175, !dbg !2937

3859:                                             ; preds = %originalBBpart21009
  %3860 = load i32, i32* @x.37
  %3861 = load i32, i32* @y.38
  %3862 = sub i32 %3860, 1
  %3863 = mul i32 %3860, %3862
  %3864 = urem i32 %3863, 2
  %3865 = icmp eq i32 %3864, 0
  %3866 = icmp slt i32 %3861, 10
  %3867 = or i1 %3865, %3866
  br i1 %3867, label %originalBB1050, label %originalBB1050alteredBB

originalBB1050:                                   ; preds = %3859, %originalBB1050alteredBB
  %3868 = load i8, i8* %35, align 1, !dbg !2938
  %3869 = trunc i8 %3868 to i1, !dbg !2938
  %3870 = load i32, i32* @x.37
  %3871 = load i32, i32* @y.38
  %3872 = sub i32 %3870, 1
  %3873 = mul i32 %3870, %3872
  %3874 = urem i32 %3873, 2
  %3875 = icmp eq i32 %3874, 0
  %3876 = icmp slt i32 %3871, 10
  %3877 = or i1 %3875, %3876
  br i1 %3877, label %originalBBpart21052, label %originalBB1050alteredBB

originalBBpart21052:                              ; preds = %originalBB1050
  br i1 %3869, label %3878, label %4047, !dbg !2941

3878:                                             ; preds = %originalBBpart21052
  %3879 = load i32, i32* @x.37
  %3880 = load i32, i32* @y.38
  %3881 = sub i32 %3879, 1
  %3882 = mul i32 %3879, %3881
  %3883 = urem i32 %3882, 2
  %3884 = icmp eq i32 %3883, 0
  %3885 = icmp slt i32 %3880, 10
  %3886 = or i1 %3884, %3885
  br i1 %3886, label %originalBB1054, label %originalBB1054alteredBB

originalBB1054:                                   ; preds = %3878, %originalBB1054alteredBB
  %3887 = load i32, i32* %23, align 4, !dbg !2942
  %3888 = icmp eq i32 %3887, 2, !dbg !2943
  %3889 = load i32, i32* @x.37
  %3890 = load i32, i32* @y.38
  %3891 = sub i32 %3889, 1
  %3892 = mul i32 %3889, %3891
  %3893 = urem i32 %3892, 2
  %3894 = icmp eq i32 %3893, 0
  %3895 = icmp slt i32 %3890, 10
  %3896 = or i1 %3894, %3895
  br i1 %3896, label %originalBBpart21056, label %originalBB1054alteredBB

originalBBpart21056:                              ; preds = %originalBB1054
  br i1 %3888, label %3897, label %4047, !dbg !2944

3897:                                             ; preds = %originalBBpart21056
  call void @llvm.dbg.declare(metadata i64* %49, metadata !2945, metadata !DIExpression()), !dbg !2947
  %3898 = load i32, i32* @x.37
  %3899 = load i32, i32* @y.38
  %3900 = sub i32 %3898, 1
  %3901 = mul i32 %3898, %3900
  %3902 = urem i32 %3901, 2
  %3903 = icmp eq i32 %3902, 0
  %3904 = icmp slt i32 %3899, 10
  %3905 = or i1 %3903, %3904
  br i1 %3905, label %originalBB1058, label %originalBB1058alteredBB

originalBB1058:                                   ; preds = %3897, %originalBB1058alteredBB
  store i64 1, i64* %49, align 8, !dbg !2948
  %3906 = load i32, i32* @x.37
  %3907 = load i32, i32* @y.38
  %3908 = sub i32 %3906, 1
  %3909 = mul i32 %3906, %3908
  %3910 = urem i32 %3909, 2
  %3911 = icmp eq i32 %3910, 0
  %3912 = icmp slt i32 %3907, 10
  %3913 = or i1 %3911, %3912
  br i1 %3913, label %originalBBpart21060, label %originalBB1058alteredBB

originalBBpart21060:                              ; preds = %originalBB1058
  br label %3914, !dbg !2950

3914:                                             ; preds = %originalBBpart21106, %originalBBpart21060
  %3915 = load i32, i32* @x.37
  %3916 = load i32, i32* @y.38
  %3917 = sub i32 %3915, 1
  %3918 = mul i32 %3915, %3917
  %3919 = urem i32 %3918, 2
  %3920 = icmp eq i32 %3919, 0
  %3921 = icmp slt i32 %3916, 10
  %3922 = or i1 %3920, %3921
  br i1 %3922, label %originalBB1062, label %originalBB1062alteredBB

originalBB1062:                                   ; preds = %3914, %originalBB1062alteredBB
  %3923 = load i64, i64* %49, align 8, !dbg !2951
  %3924 = load i64, i64* %48, align 8, !dbg !2953
  %3925 = icmp ult i64 %3923, %3924, !dbg !2954
  %3926 = load i32, i32* @x.37
  %3927 = load i32, i32* @y.38
  %3928 = sub i32 %3926, 1
  %3929 = mul i32 %3926, %3928
  %3930 = urem i32 %3929, 2
  %3931 = icmp eq i32 %3930, 0
  %3932 = icmp slt i32 %3927, 10
  %3933 = or i1 %3931, %3932
  br i1 %3933, label %originalBBpart21064, label %originalBB1062alteredBB

originalBBpart21064:                              ; preds = %originalBB1062
  br i1 %3925, label %3934, label %4030, !dbg !2955

3934:                                             ; preds = %originalBBpart21064
  %3935 = load i32, i32* @x.37
  %3936 = load i32, i32* @y.38
  %3937 = sub i32 %3935, 1
  %3938 = mul i32 %3935, %3937
  %3939 = urem i32 %3938, 2
  %3940 = icmp eq i32 %3939, 0
  %3941 = icmp slt i32 %3936, 10
  %3942 = or i1 %3940, %3941
  br i1 %3942, label %originalBB1066, label %originalBB1066alteredBB

originalBB1066:                                   ; preds = %3934, %originalBB1066alteredBB
  %3943 = load i8*, i8** %21, align 8, !dbg !2956
  %3944 = load i64, i64* %28, align 8, !dbg !2957
  %3945 = load i64, i64* %44, align 8, !dbg !2958
  %3946 = add i64 %3944, %3945, !dbg !2959
  %3947 = load i64, i64* %49, align 8, !dbg !2960
  %3948 = add i64 %3946, %3947, !dbg !2961
  %3949 = getelementptr inbounds i8, i8* %3943, i64 %3948, !dbg !2956
  %3950 = load i8, i8* %3949, align 1, !dbg !2956
  %3951 = sext i8 %3950 to i32, !dbg !2956
  %3952 = load i32, i32* @x.37
  %3953 = load i32, i32* @y.38
  %3954 = sub i32 %3952, 1
  %3955 = mul i32 %3952, %3954
  %3956 = urem i32 %3955, 2
  %3957 = icmp eq i32 %3956, 0
  %3958 = icmp slt i32 %3953, 10
  %3959 = or i1 %3957, %3958
  br i1 %3959, label %originalBBpart21088, label %originalBB1066alteredBB

originalBBpart21088:                              ; preds = %originalBB1066
  switch i32 %3951, label %3977 [
    i32 91, label %3960
    i32 92, label %3960
    i32 94, label %3960
    i32 96, label %3960
    i32 124, label %3960
  ], !dbg !2962

3960:                                             ; preds = %originalBBpart21088, %originalBBpart21088, %originalBBpart21088, %originalBBpart21088, %originalBBpart21088
  %3961 = load i32, i32* @x.37
  %3962 = load i32, i32* @y.38
  %3963 = sub i32 %3961, 1
  %3964 = mul i32 %3961, %3963
  %3965 = urem i32 %3964, 2
  %3966 = icmp eq i32 %3965, 0
  %3967 = icmp slt i32 %3962, 10
  %3968 = or i1 %3966, %3967
  br i1 %3968, label %originalBB1090, label %originalBB1090alteredBB

originalBB1090:                                   ; preds = %3960, %originalBB1090alteredBB
  %3969 = load i32, i32* @x.37
  %3970 = load i32, i32* @y.38
  %3971 = sub i32 %3969, 1
  %3972 = mul i32 %3969, %3971
  %3973 = urem i32 %3972, 2
  %3974 = icmp eq i32 %3973, 0
  %3975 = icmp slt i32 %3970, 10
  %3976 = or i1 %3974, %3975
  br i1 %3976, label %originalBBpart21092, label %originalBB1090alteredBB

originalBBpart21092:                              ; preds = %originalBB1090
  br label %6990, !dbg !2963

3977:                                             ; preds = %originalBBpart21088
  %3978 = load i32, i32* @x.37
  %3979 = load i32, i32* @y.38
  %3980 = sub i32 %3978, 1
  %3981 = mul i32 %3978, %3980
  %3982 = urem i32 %3981, 2
  %3983 = icmp eq i32 %3982, 0
  %3984 = icmp slt i32 %3979, 10
  %3985 = or i1 %3983, %3984
  br i1 %3985, label %originalBB1094, label %originalBB1094alteredBB

originalBB1094:                                   ; preds = %3977, %originalBB1094alteredBB
  %3986 = load i32, i32* @x.37
  %3987 = load i32, i32* @y.38
  %3988 = sub i32 %3986, 1
  %3989 = mul i32 %3986, %3988
  %3990 = urem i32 %3989, 2
  %3991 = icmp eq i32 %3990, 0
  %3992 = icmp slt i32 %3987, 10
  %3993 = or i1 %3991, %3992
  br i1 %3993, label %originalBBpart21096, label %originalBB1094alteredBB

originalBBpart21096:                              ; preds = %originalBB1094
  br label %3994, !dbg !2965

3994:                                             ; preds = %originalBBpart21096
  %3995 = load i32, i32* @x.37
  %3996 = load i32, i32* @y.38
  %3997 = sub i32 %3995, 1
  %3998 = mul i32 %3995, %3997
  %3999 = urem i32 %3998, 2
  %4000 = icmp eq i32 %3999, 0
  %4001 = icmp slt i32 %3996, 10
  %4002 = or i1 %4000, %4001
  br i1 %4002, label %originalBB1098, label %originalBB1098alteredBB

originalBB1098:                                   ; preds = %3994, %originalBB1098alteredBB
  %4003 = load i32, i32* @x.37
  %4004 = load i32, i32* @y.38
  %4005 = sub i32 %4003, 1
  %4006 = mul i32 %4003, %4005
  %4007 = urem i32 %4006, 2
  %4008 = icmp eq i32 %4007, 0
  %4009 = icmp slt i32 %4004, 10
  %4010 = or i1 %4008, %4009
  br i1 %4010, label %originalBBpart21100, label %originalBB1098alteredBB

originalBBpart21100:                              ; preds = %originalBB1098
  br label %4011, !dbg !2966

4011:                                             ; preds = %originalBBpart21100
  %4012 = load i32, i32* @x.37
  %4013 = load i32, i32* @y.38
  %4014 = sub i32 %4012, 1
  %4015 = mul i32 %4012, %4014
  %4016 = urem i32 %4015, 2
  %4017 = icmp eq i32 %4016, 0
  %4018 = icmp slt i32 %4013, 10
  %4019 = or i1 %4017, %4018
  br i1 %4019, label %originalBB1102, label %originalBB1102alteredBB

originalBB1102:                                   ; preds = %4011, %originalBB1102alteredBB
  %4020 = load i64, i64* %49, align 8, !dbg !2967
  %4021 = add i64 %4020, 1, !dbg !2967
  store i64 %4021, i64* %49, align 8, !dbg !2967
  %4022 = load i32, i32* @x.37
  %4023 = load i32, i32* @y.38
  %4024 = sub i32 %4022, 1
  %4025 = mul i32 %4022, %4024
  %4026 = urem i32 %4025, 2
  %4027 = icmp eq i32 %4026, 0
  %4028 = icmp slt i32 %4023, 10
  %4029 = or i1 %4027, %4028
  br i1 %4029, label %originalBBpart21106, label %originalBB1102alteredBB

originalBBpart21106:                              ; preds = %originalBB1102
  br label %3914, !dbg !2968, !llvm.loop !2969

4030:                                             ; preds = %originalBBpart21064
  %4031 = load i32, i32* @x.37
  %4032 = load i32, i32* @y.38
  %4033 = sub i32 %4031, 1
  %4034 = mul i32 %4031, %4033
  %4035 = urem i32 %4034, 2
  %4036 = icmp eq i32 %4035, 0
  %4037 = icmp slt i32 %4032, 10
  %4038 = or i1 %4036, %4037
  br i1 %4038, label %originalBB1108, label %originalBB1108alteredBB

originalBB1108:                                   ; preds = %4030, %originalBB1108alteredBB
  %4039 = load i32, i32* @x.37
  %4040 = load i32, i32* @y.38
  %4041 = sub i32 %4039, 1
  %4042 = mul i32 %4039, %4041
  %4043 = urem i32 %4042, 2
  %4044 = icmp eq i32 %4043, 0
  %4045 = icmp slt i32 %4040, 10
  %4046 = or i1 %4044, %4045
  br i1 %4046, label %originalBBpart21110, label %originalBB1108alteredBB

originalBBpart21110:                              ; preds = %originalBB1108
  br label %4047, !dbg !2971

4047:                                             ; preds = %originalBBpart21110, %originalBBpart21056, %originalBBpart21052
  %4048 = load i32, i32* @x.37
  %4049 = load i32, i32* @y.38
  %4050 = sub i32 %4048, 1
  %4051 = mul i32 %4048, %4050
  %4052 = urem i32 %4051, 2
  %4053 = icmp eq i32 %4052, 0
  %4054 = icmp slt i32 %4049, 10
  %4055 = or i1 %4053, %4054
  br i1 %4055, label %originalBB1112, label %originalBB1112alteredBB

originalBB1112:                                   ; preds = %4047, %originalBB1112alteredBB
  %4056 = load i32, i32* %47, align 4, !dbg !2972
  %4057 = call i32 @iswprint(i32 %4056) #10, !dbg !2974
  %4058 = icmp ne i32 %4057, 0, !dbg !2974
  %4059 = load i32, i32* @x.37
  %4060 = load i32, i32* @y.38
  %4061 = sub i32 %4059, 1
  %4062 = mul i32 %4059, %4061
  %4063 = urem i32 %4062, 2
  %4064 = icmp eq i32 %4063, 0
  %4065 = icmp slt i32 %4060, 10
  %4066 = or i1 %4064, %4065
  br i1 %4066, label %originalBBpart21114, label %originalBB1112alteredBB

originalBBpart21114:                              ; preds = %originalBB1112
  br i1 %4058, label %4084, label %4067, !dbg !2975

4067:                                             ; preds = %originalBBpart21114
  %4068 = load i32, i32* @x.37
  %4069 = load i32, i32* @y.38
  %4070 = sub i32 %4068, 1
  %4071 = mul i32 %4068, %4070
  %4072 = urem i32 %4071, 2
  %4073 = icmp eq i32 %4072, 0
  %4074 = icmp slt i32 %4069, 10
  %4075 = or i1 %4073, %4074
  br i1 %4075, label %originalBB1116, label %originalBB1116alteredBB

originalBB1116:                                   ; preds = %4067, %originalBB1116alteredBB
  store i8 0, i8* %45, align 1, !dbg !2976
  %4076 = load i32, i32* @x.37
  %4077 = load i32, i32* @y.38
  %4078 = sub i32 %4076, 1
  %4079 = mul i32 %4076, %4078
  %4080 = urem i32 %4079, 2
  %4081 = icmp eq i32 %4080, 0
  %4082 = icmp slt i32 %4077, 10
  %4083 = or i1 %4081, %4082
  br i1 %4083, label %originalBBpart21118, label %originalBB1116alteredBB

originalBBpart21118:                              ; preds = %originalBB1116
  br label %4084, !dbg !2977

4084:                                             ; preds = %originalBBpart21118, %originalBBpart21114
  %4085 = load i32, i32* @x.37
  %4086 = load i32, i32* @y.38
  %4087 = sub i32 %4085, 1
  %4088 = mul i32 %4085, %4087
  %4089 = urem i32 %4088, 2
  %4090 = icmp eq i32 %4089, 0
  %4091 = icmp slt i32 %4086, 10
  %4092 = or i1 %4090, %4091
  br i1 %4092, label %originalBB1120, label %originalBB1120alteredBB

originalBB1120:                                   ; preds = %4084, %originalBB1120alteredBB
  %4093 = load i64, i64* %48, align 8, !dbg !2978
  %4094 = load i64, i64* %44, align 8, !dbg !2979
  %4095 = add i64 %4094, %4093, !dbg !2979
  store i64 %4095, i64* %44, align 8, !dbg !2979
  %4096 = load i32, i32* @x.37
  %4097 = load i32, i32* @y.38
  %4098 = sub i32 %4096, 1
  %4099 = mul i32 %4096, %4098
  %4100 = urem i32 %4099, 2
  %4101 = icmp eq i32 %4100, 0
  %4102 = icmp slt i32 %4097, 10
  %4103 = or i1 %4101, %4102
  br i1 %4103, label %originalBBpart21131, label %originalBB1120alteredBB

originalBBpart21131:                              ; preds = %originalBB1120
  br label %4104

4104:                                             ; preds = %originalBBpart21131
  %4105 = load i32, i32* @x.37
  %4106 = load i32, i32* @y.38
  %4107 = sub i32 %4105, 1
  %4108 = mul i32 %4105, %4107
  %4109 = urem i32 %4108, 2
  %4110 = icmp eq i32 %4109, 0
  %4111 = icmp slt i32 %4106, 10
  %4112 = or i1 %4110, %4111
  br i1 %4112, label %originalBB1133, label %originalBB1133alteredBB

originalBB1133:                                   ; preds = %4104, %originalBB1133alteredBB
  %4113 = load i32, i32* @x.37
  %4114 = load i32, i32* @y.38
  %4115 = sub i32 %4113, 1
  %4116 = mul i32 %4113, %4115
  %4117 = urem i32 %4116, 2
  %4118 = icmp eq i32 %4117, 0
  %4119 = icmp slt i32 %4114, 10
  %4120 = or i1 %4118, %4119
  br i1 %4120, label %originalBBpart21135, label %originalBB1133alteredBB

originalBBpart21135:                              ; preds = %originalBB1133
  br label %4121

4121:                                             ; preds = %originalBBpart21135
  %4122 = load i32, i32* @x.37
  %4123 = load i32, i32* @y.38
  %4124 = sub i32 %4122, 1
  %4125 = mul i32 %4122, %4124
  %4126 = urem i32 %4125, 2
  %4127 = icmp eq i32 %4126, 0
  %4128 = icmp slt i32 %4123, 10
  %4129 = or i1 %4127, %4128
  br i1 %4129, label %originalBB1137, label %originalBB1137alteredBB

originalBB1137:                                   ; preds = %4121, %originalBB1137alteredBB
  %4130 = load i32, i32* @x.37
  %4131 = load i32, i32* @y.38
  %4132 = sub i32 %4130, 1
  %4133 = mul i32 %4130, %4132
  %4134 = urem i32 %4133, 2
  %4135 = icmp eq i32 %4134, 0
  %4136 = icmp slt i32 %4131, 10
  %4137 = or i1 %4135, %4136
  br i1 %4137, label %originalBBpart21139, label %originalBB1137alteredBB

originalBBpart21139:                              ; preds = %originalBB1137
  br label %4138

4138:                                             ; preds = %originalBBpart21139
  %4139 = load i32, i32* @x.37
  %4140 = load i32, i32* @y.38
  %4141 = sub i32 %4139, 1
  %4142 = mul i32 %4139, %4141
  %4143 = urem i32 %4142, 2
  %4144 = icmp eq i32 %4143, 0
  %4145 = icmp slt i32 %4140, 10
  %4146 = or i1 %4144, %4145
  br i1 %4146, label %originalBB1141, label %originalBB1141alteredBB

originalBB1141:                                   ; preds = %4138, %originalBB1141alteredBB
  %4147 = load i32, i32* @x.37
  %4148 = load i32, i32* @y.38
  %4149 = sub i32 %4147, 1
  %4150 = mul i32 %4147, %4149
  %4151 = urem i32 %4150, 2
  %4152 = icmp eq i32 %4151, 0
  %4153 = icmp slt i32 %4148, 10
  %4154 = or i1 %4152, %4153
  br i1 %4154, label %originalBBpart21143, label %originalBB1141alteredBB

originalBBpart21143:                              ; preds = %originalBB1141
  br label %4155, !dbg !2980

4155:                                             ; preds = %originalBBpart21143
  %4156 = load i32, i32* @x.37
  %4157 = load i32, i32* @y.38
  %4158 = sub i32 %4156, 1
  %4159 = mul i32 %4156, %4158
  %4160 = urem i32 %4159, 2
  %4161 = icmp eq i32 %4160, 0
  %4162 = icmp slt i32 %4157, 10
  %4163 = or i1 %4161, %4162
  br i1 %4163, label %originalBB1145, label %originalBB1145alteredBB

originalBB1145:                                   ; preds = %4155, %originalBB1145alteredBB
  %4164 = call i32 @mbsinit(%struct.__mbstate_t* %46) #13, !dbg !2981
  %4165 = icmp ne i32 %4164, 0, !dbg !2982
  %4166 = xor i1 %4165, true, !dbg !2982
  %4167 = load i32, i32* @x.37
  %4168 = load i32, i32* @y.38
  %4169 = sub i32 %4167, 1
  %4170 = mul i32 %4167, %4169
  %4171 = urem i32 %4170, 2
  %4172 = icmp eq i32 %4171, 0
  %4173 = icmp slt i32 %4168, 10
  %4174 = or i1 %4172, %4173
  br i1 %4174, label %originalBBpart21151, label %originalBB1145alteredBB

originalBBpart21151:                              ; preds = %originalBB1145
  br i1 %4166, label %3639, label %4175, !dbg !2980, !llvm.loop !2983

4175:                                             ; preds = %originalBBpart21151, %originalBBpart21048, %originalBBpart21005, %originalBBpart2997
  %4176 = load i32, i32* @x.37
  %4177 = load i32, i32* @y.38
  %4178 = sub i32 %4176, 1
  %4179 = mul i32 %4176, %4178
  %4180 = urem i32 %4179, 2
  %4181 = icmp eq i32 %4180, 0
  %4182 = icmp slt i32 %4177, 10
  %4183 = or i1 %4181, %4182
  br i1 %4183, label %originalBB1153, label %originalBB1153alteredBB

originalBB1153:                                   ; preds = %4175, %originalBB1153alteredBB
  %4184 = load i32, i32* @x.37
  %4185 = load i32, i32* @y.38
  %4186 = sub i32 %4184, 1
  %4187 = mul i32 %4184, %4186
  %4188 = urem i32 %4187, 2
  %4189 = icmp eq i32 %4188, 0
  %4190 = icmp slt i32 %4185, 10
  %4191 = or i1 %4189, %4190
  br i1 %4191, label %originalBBpart21155, label %originalBB1153alteredBB

originalBBpart21155:                              ; preds = %originalBB1153
  br label %4192

4192:                                             ; preds = %originalBBpart21155, %originalBBpart2955
  %4193 = load i32, i32* @x.37
  %4194 = load i32, i32* @y.38
  %4195 = sub i32 %4193, 1
  %4196 = mul i32 %4193, %4195
  %4197 = urem i32 %4196, 2
  %4198 = icmp eq i32 %4197, 0
  %4199 = icmp slt i32 %4194, 10
  %4200 = or i1 %4198, %4199
  br i1 %4200, label %originalBB1157, label %originalBB1157alteredBB

originalBB1157:                                   ; preds = %4192, %originalBB1157alteredBB
  %4201 = load i8, i8* %45, align 1, !dbg !2985
  %4202 = trunc i8 %4201 to i1, !dbg !2985
  %4203 = zext i1 %4202 to i8, !dbg !2986
  store i8 %4203, i8* %43, align 1, !dbg !2986
  %4204 = load i64, i64* %44, align 8, !dbg !2987
  %4205 = icmp ult i64 1, %4204, !dbg !2989
  %4206 = load i32, i32* @x.37
  %4207 = load i32, i32* @y.38
  %4208 = sub i32 %4206, 1
  %4209 = mul i32 %4206, %4208
  %4210 = urem i32 %4209, 2
  %4211 = icmp eq i32 %4210, 0
  %4212 = icmp slt i32 %4207, 10
  %4213 = or i1 %4211, %4212
  br i1 %4213, label %originalBBpart21159, label %originalBB1157alteredBB

originalBBpart21159:                              ; preds = %originalBB1157
  br i1 %4205, label %4252, label %4214, !dbg !2990

4214:                                             ; preds = %originalBBpart21159
  %4215 = load i32, i32* @x.37
  %4216 = load i32, i32* @y.38
  %4217 = sub i32 %4215, 1
  %4218 = mul i32 %4215, %4217
  %4219 = urem i32 %4218, 2
  %4220 = icmp eq i32 %4219, 0
  %4221 = icmp slt i32 %4216, 10
  %4222 = or i1 %4220, %4221
  br i1 %4222, label %originalBB1161, label %originalBB1161alteredBB

originalBB1161:                                   ; preds = %4214, %originalBB1161alteredBB
  %4223 = load i8, i8* %33, align 1, !dbg !2991
  %4224 = trunc i8 %4223 to i1, !dbg !2991
  %4225 = load i32, i32* @x.37
  %4226 = load i32, i32* @y.38
  %4227 = sub i32 %4225, 1
  %4228 = mul i32 %4225, %4227
  %4229 = urem i32 %4228, 2
  %4230 = icmp eq i32 %4229, 0
  %4231 = icmp slt i32 %4226, 10
  %4232 = or i1 %4230, %4231
  br i1 %4232, label %originalBBpart21163, label %originalBB1161alteredBB

originalBBpart21163:                              ; preds = %originalBB1161
  br i1 %4224, label %4233, label %5448, !dbg !2992

4233:                                             ; preds = %originalBBpart21163
  %4234 = load i32, i32* @x.37
  %4235 = load i32, i32* @y.38
  %4236 = sub i32 %4234, 1
  %4237 = mul i32 %4234, %4236
  %4238 = urem i32 %4237, 2
  %4239 = icmp eq i32 %4238, 0
  %4240 = icmp slt i32 %4235, 10
  %4241 = or i1 %4239, %4240
  br i1 %4241, label %originalBB1165, label %originalBB1165alteredBB

originalBB1165:                                   ; preds = %4233, %originalBB1165alteredBB
  %4242 = load i8, i8* %45, align 1, !dbg !2993
  %4243 = trunc i8 %4242 to i1, !dbg !2993
  %4244 = load i32, i32* @x.37
  %4245 = load i32, i32* @y.38
  %4246 = sub i32 %4244, 1
  %4247 = mul i32 %4244, %4246
  %4248 = urem i32 %4247, 2
  %4249 = icmp eq i32 %4248, 0
  %4250 = icmp slt i32 %4245, 10
  %4251 = or i1 %4249, %4250
  br i1 %4251, label %originalBBpart21167, label %originalBB1165alteredBB

originalBBpart21167:                              ; preds = %originalBB1165
  br i1 %4243, label %5448, label %4252, !dbg !2994

4252:                                             ; preds = %originalBBpart21167, %originalBBpart21159
  call void @llvm.dbg.declare(metadata i64* %50, metadata !2995, metadata !DIExpression()), !dbg !2997
  %4253 = load i32, i32* @x.37
  %4254 = load i32, i32* @y.38
  %4255 = sub i32 %4253, 1
  %4256 = mul i32 %4253, %4255
  %4257 = urem i32 %4256, 2
  %4258 = icmp eq i32 %4257, 0
  %4259 = icmp slt i32 %4254, 10
  %4260 = or i1 %4258, %4259
  br i1 %4260, label %originalBB1169, label %originalBB1169alteredBB

originalBB1169:                                   ; preds = %4252, %originalBB1169alteredBB
  %4261 = load i64, i64* %28, align 8, !dbg !2998
  %4262 = load i64, i64* %44, align 8, !dbg !2999
  %4263 = add i64 %4261, %4262, !dbg !3000
  store i64 %4263, i64* %50, align 8, !dbg !2997
  %4264 = load i32, i32* @x.37
  %4265 = load i32, i32* @y.38
  %4266 = sub i32 %4264, 1
  %4267 = mul i32 %4264, %4266
  %4268 = urem i32 %4267, 2
  %4269 = icmp eq i32 %4268, 0
  %4270 = icmp slt i32 %4265, 10
  %4271 = or i1 %4269, %4270
  br i1 %4271, label %originalBBpart21185, label %originalBB1169alteredBB

originalBBpart21185:                              ; preds = %originalBB1169
  br label %4272, !dbg !3001

4272:                                             ; preds = %originalBBpart21543, %originalBBpart21185
  %4273 = load i32, i32* @x.37
  %4274 = load i32, i32* @y.38
  %4275 = sub i32 %4273, 1
  %4276 = mul i32 %4273, %4275
  %4277 = urem i32 %4276, 2
  %4278 = icmp eq i32 %4277, 0
  %4279 = icmp slt i32 %4274, 10
  %4280 = or i1 %4278, %4279
  br i1 %4280, label %originalBB1187, label %originalBB1187alteredBB

originalBB1187:                                   ; preds = %4272, %originalBB1187alteredBB
  %4281 = load i8, i8* %33, align 1, !dbg !3002
  %4282 = trunc i8 %4281 to i1, !dbg !3002
  %4283 = load i32, i32* @x.37
  %4284 = load i32, i32* @y.38
  %4285 = sub i32 %4283, 1
  %4286 = mul i32 %4283, %4285
  %4287 = urem i32 %4286, 2
  %4288 = icmp eq i32 %4287, 0
  %4289 = icmp slt i32 %4284, 10
  %4290 = or i1 %4288, %4289
  br i1 %4290, label %originalBBpart21189, label %originalBB1187alteredBB

originalBBpart21189:                              ; preds = %originalBB1187
  br i1 %4282, label %4291, label %4924, !dbg !3007

4291:                                             ; preds = %originalBBpart21189
  %4292 = load i32, i32* @x.37
  %4293 = load i32, i32* @y.38
  %4294 = sub i32 %4292, 1
  %4295 = mul i32 %4292, %4294
  %4296 = urem i32 %4295, 2
  %4297 = icmp eq i32 %4296, 0
  %4298 = icmp slt i32 %4293, 10
  %4299 = or i1 %4297, %4298
  br i1 %4299, label %originalBB1191, label %originalBB1191alteredBB

originalBB1191:                                   ; preds = %4291, %originalBB1191alteredBB
  %4300 = load i8, i8* %45, align 1, !dbg !3008
  %4301 = trunc i8 %4300 to i1, !dbg !3008
  %4302 = load i32, i32* @x.37
  %4303 = load i32, i32* @y.38
  %4304 = sub i32 %4302, 1
  %4305 = mul i32 %4302, %4304
  %4306 = urem i32 %4305, 2
  %4307 = icmp eq i32 %4306, 0
  %4308 = icmp slt i32 %4303, 10
  %4309 = or i1 %4307, %4308
  br i1 %4309, label %originalBBpart21193, label %originalBB1191alteredBB

originalBBpart21193:                              ; preds = %originalBB1191
  br i1 %4301, label %4924, label %4310, !dbg !3009

4310:                                             ; preds = %originalBBpart21193
  %4311 = load i32, i32* @x.37
  %4312 = load i32, i32* @y.38
  %4313 = sub i32 %4311, 1
  %4314 = mul i32 %4311, %4313
  %4315 = urem i32 %4314, 2
  %4316 = icmp eq i32 %4315, 0
  %4317 = icmp slt i32 %4312, 10
  %4318 = or i1 %4316, %4317
  br i1 %4318, label %originalBB1195, label %originalBB1195alteredBB

originalBB1195:                                   ; preds = %4310, %originalBB1195alteredBB
  %4319 = load i32, i32* @x.37
  %4320 = load i32, i32* @y.38
  %4321 = sub i32 %4319, 1
  %4322 = mul i32 %4319, %4321
  %4323 = urem i32 %4322, 2
  %4324 = icmp eq i32 %4323, 0
  %4325 = icmp slt i32 %4320, 10
  %4326 = or i1 %4324, %4325
  br i1 %4326, label %originalBBpart21197, label %originalBB1195alteredBB

originalBBpart21197:                              ; preds = %originalBB1195
  br label %4327, !dbg !3010

4327:                                             ; preds = %originalBBpart21197
  %4328 = load i32, i32* @x.37
  %4329 = load i32, i32* @y.38
  %4330 = sub i32 %4328, 1
  %4331 = mul i32 %4328, %4330
  %4332 = urem i32 %4331, 2
  %4333 = icmp eq i32 %4332, 0
  %4334 = icmp slt i32 %4329, 10
  %4335 = or i1 %4333, %4334
  br i1 %4335, label %originalBB1199, label %originalBB1199alteredBB

originalBB1199:                                   ; preds = %4327, %originalBB1199alteredBB
  %4336 = load i8, i8* %35, align 1, !dbg !3012
  %4337 = trunc i8 %4336 to i1, !dbg !3012
  %4338 = load i32, i32* @x.37
  %4339 = load i32, i32* @y.38
  %4340 = sub i32 %4338, 1
  %4341 = mul i32 %4338, %4340
  %4342 = urem i32 %4341, 2
  %4343 = icmp eq i32 %4342, 0
  %4344 = icmp slt i32 %4339, 10
  %4345 = or i1 %4343, %4344
  br i1 %4345, label %originalBBpart21201, label %originalBB1199alteredBB

originalBBpart21201:                              ; preds = %originalBB1199
  br i1 %4337, label %4346, label %4363, !dbg !3015

4346:                                             ; preds = %originalBBpart21201
  %4347 = load i32, i32* @x.37
  %4348 = load i32, i32* @y.38
  %4349 = sub i32 %4347, 1
  %4350 = mul i32 %4347, %4349
  %4351 = urem i32 %4350, 2
  %4352 = icmp eq i32 %4351, 0
  %4353 = icmp slt i32 %4348, 10
  %4354 = or i1 %4352, %4353
  br i1 %4354, label %originalBB1203, label %originalBB1203alteredBB

originalBB1203:                                   ; preds = %4346, %originalBB1203alteredBB
  %4355 = load i32, i32* @x.37
  %4356 = load i32, i32* @y.38
  %4357 = sub i32 %4355, 1
  %4358 = mul i32 %4355, %4357
  %4359 = urem i32 %4358, 2
  %4360 = icmp eq i32 %4359, 0
  %4361 = icmp slt i32 %4356, 10
  %4362 = or i1 %4360, %4361
  br i1 %4362, label %originalBBpart21205, label %originalBB1203alteredBB

originalBBpart21205:                              ; preds = %originalBB1203
  br label %6990, !dbg !3012

4363:                                             ; preds = %originalBBpart21201
  %4364 = load i32, i32* @x.37
  %4365 = load i32, i32* @y.38
  %4366 = sub i32 %4364, 1
  %4367 = mul i32 %4364, %4366
  %4368 = urem i32 %4367, 2
  %4369 = icmp eq i32 %4368, 0
  %4370 = icmp slt i32 %4365, 10
  %4371 = or i1 %4369, %4370
  br i1 %4371, label %originalBB1207, label %originalBB1207alteredBB

originalBB1207:                                   ; preds = %4363, %originalBB1207alteredBB
  store i8 1, i8* %42, align 1, !dbg !3015
  %4372 = load i32, i32* %23, align 4, !dbg !3016
  %4373 = icmp eq i32 %4372, 2, !dbg !3016
  %4374 = load i32, i32* @x.37
  %4375 = load i32, i32* @y.38
  %4376 = sub i32 %4374, 1
  %4377 = mul i32 %4374, %4376
  %4378 = urem i32 %4377, 2
  %4379 = icmp eq i32 %4378, 0
  %4380 = icmp slt i32 %4375, 10
  %4381 = or i1 %4379, %4380
  br i1 %4381, label %originalBBpart21209, label %originalBB1207alteredBB

originalBBpart21209:                              ; preds = %originalBB1207
  br i1 %4373, label %4382, label %4646, !dbg !3016

4382:                                             ; preds = %originalBBpart21209
  %4383 = load i32, i32* @x.37
  %4384 = load i32, i32* @y.38
  %4385 = sub i32 %4383, 1
  %4386 = mul i32 %4383, %4385
  %4387 = urem i32 %4386, 2
  %4388 = icmp eq i32 %4387, 0
  %4389 = icmp slt i32 %4384, 10
  %4390 = or i1 %4388, %4389
  br i1 %4390, label %originalBB1211, label %originalBB1211alteredBB

originalBB1211:                                   ; preds = %4382, %originalBB1211alteredBB
  %4391 = load i8, i8* %36, align 1, !dbg !3016
  %4392 = trunc i8 %4391 to i1, !dbg !3016
  %4393 = load i32, i32* @x.37
  %4394 = load i32, i32* @y.38
  %4395 = sub i32 %4393, 1
  %4396 = mul i32 %4393, %4395
  %4397 = urem i32 %4396, 2
  %4398 = icmp eq i32 %4397, 0
  %4399 = icmp slt i32 %4394, 10
  %4400 = or i1 %4398, %4399
  br i1 %4400, label %originalBBpart21213, label %originalBB1211alteredBB

originalBBpart21213:                              ; preds = %originalBB1211
  br i1 %4392, label %4646, label %4401, !dbg !3015

4401:                                             ; preds = %originalBBpart21213
  %4402 = load i32, i32* @x.37
  %4403 = load i32, i32* @y.38
  %4404 = sub i32 %4402, 1
  %4405 = mul i32 %4402, %4404
  %4406 = urem i32 %4405, 2
  %4407 = icmp eq i32 %4406, 0
  %4408 = icmp slt i32 %4403, 10
  %4409 = or i1 %4407, %4408
  br i1 %4409, label %originalBB1215, label %originalBB1215alteredBB

originalBB1215:                                   ; preds = %4401, %originalBB1215alteredBB
  %4410 = load i32, i32* @x.37
  %4411 = load i32, i32* @y.38
  %4412 = sub i32 %4410, 1
  %4413 = mul i32 %4410, %4412
  %4414 = urem i32 %4413, 2
  %4415 = icmp eq i32 %4414, 0
  %4416 = icmp slt i32 %4411, 10
  %4417 = or i1 %4415, %4416
  br i1 %4417, label %originalBBpart21217, label %originalBB1215alteredBB

originalBBpart21217:                              ; preds = %originalBB1215
  br label %4418, !dbg !3018

4418:                                             ; preds = %originalBBpart21217
  %4419 = load i32, i32* @x.37
  %4420 = load i32, i32* @y.38
  %4421 = sub i32 %4419, 1
  %4422 = mul i32 %4419, %4421
  %4423 = urem i32 %4422, 2
  %4424 = icmp eq i32 %4423, 0
  %4425 = icmp slt i32 %4420, 10
  %4426 = or i1 %4424, %4425
  br i1 %4426, label %originalBB1219, label %originalBB1219alteredBB

originalBB1219:                                   ; preds = %4418, %originalBB1219alteredBB
  %4427 = load i64, i64* %29, align 8, !dbg !3020
  %4428 = load i64, i64* %20, align 8, !dbg !3020
  %4429 = icmp ult i64 %4427, %4428, !dbg !3020
  %4430 = load i32, i32* @x.37
  %4431 = load i32, i32* @y.38
  %4432 = sub i32 %4430, 1
  %4433 = mul i32 %4430, %4432
  %4434 = urem i32 %4433, 2
  %4435 = icmp eq i32 %4434, 0
  %4436 = icmp slt i32 %4431, 10
  %4437 = or i1 %4435, %4436
  br i1 %4437, label %originalBBpart21221, label %originalBB1219alteredBB

originalBBpart21221:                              ; preds = %originalBB1219
  br i1 %4429, label %4438, label %4458, !dbg !3023

4438:                                             ; preds = %originalBBpart21221
  %4439 = load i32, i32* @x.37
  %4440 = load i32, i32* @y.38
  %4441 = sub i32 %4439, 1
  %4442 = mul i32 %4439, %4441
  %4443 = urem i32 %4442, 2
  %4444 = icmp eq i32 %4443, 0
  %4445 = icmp slt i32 %4440, 10
  %4446 = or i1 %4444, %4445
  br i1 %4446, label %originalBB1223, label %originalBB1223alteredBB

originalBB1223:                                   ; preds = %4438, %originalBB1223alteredBB
  %4447 = load i8*, i8** %19, align 8, !dbg !3020
  %4448 = load i64, i64* %29, align 8, !dbg !3020
  %4449 = getelementptr inbounds i8, i8* %4447, i64 %4448, !dbg !3020
  store i8 39, i8* %4449, align 1, !dbg !3020
  %4450 = load i32, i32* @x.37
  %4451 = load i32, i32* @y.38
  %4452 = sub i32 %4450, 1
  %4453 = mul i32 %4450, %4452
  %4454 = urem i32 %4453, 2
  %4455 = icmp eq i32 %4454, 0
  %4456 = icmp slt i32 %4451, 10
  %4457 = or i1 %4455, %4456
  br i1 %4457, label %originalBBpart21225, label %originalBB1223alteredBB

originalBBpart21225:                              ; preds = %originalBB1223
  br label %4458, !dbg !3020

4458:                                             ; preds = %originalBBpart21225, %originalBBpart21221
  %4459 = load i32, i32* @x.37
  %4460 = load i32, i32* @y.38
  %4461 = sub i32 %4459, 1
  %4462 = mul i32 %4459, %4461
  %4463 = urem i32 %4462, 2
  %4464 = icmp eq i32 %4463, 0
  %4465 = icmp slt i32 %4460, 10
  %4466 = or i1 %4464, %4465
  br i1 %4466, label %originalBB1227, label %originalBB1227alteredBB

originalBB1227:                                   ; preds = %4458, %originalBB1227alteredBB
  %4467 = load i64, i64* %29, align 8, !dbg !3023
  %4468 = add i64 %4467, 1, !dbg !3023
  store i64 %4468, i64* %29, align 8, !dbg !3023
  %4469 = load i32, i32* @x.37
  %4470 = load i32, i32* @y.38
  %4471 = sub i32 %4469, 1
  %4472 = mul i32 %4469, %4471
  %4473 = urem i32 %4472, 2
  %4474 = icmp eq i32 %4473, 0
  %4475 = icmp slt i32 %4470, 10
  %4476 = or i1 %4474, %4475
  br i1 %4476, label %originalBBpart21229, label %originalBB1227alteredBB

originalBBpart21229:                              ; preds = %originalBB1227
  br label %4477, !dbg !3023

4477:                                             ; preds = %originalBBpart21229
  %4478 = load i32, i32* @x.37
  %4479 = load i32, i32* @y.38
  %4480 = sub i32 %4478, 1
  %4481 = mul i32 %4478, %4480
  %4482 = urem i32 %4481, 2
  %4483 = icmp eq i32 %4482, 0
  %4484 = icmp slt i32 %4479, 10
  %4485 = or i1 %4483, %4484
  br i1 %4485, label %originalBB1231, label %originalBB1231alteredBB

originalBB1231:                                   ; preds = %4477, %originalBB1231alteredBB
  %4486 = load i32, i32* @x.37
  %4487 = load i32, i32* @y.38
  %4488 = sub i32 %4486, 1
  %4489 = mul i32 %4486, %4488
  %4490 = urem i32 %4489, 2
  %4491 = icmp eq i32 %4490, 0
  %4492 = icmp slt i32 %4487, 10
  %4493 = or i1 %4491, %4492
  br i1 %4493, label %originalBBpart21233, label %originalBB1231alteredBB

originalBBpart21233:                              ; preds = %originalBB1231
  br label %4494, !dbg !3018

4494:                                             ; preds = %originalBBpart21233
  %4495 = load i32, i32* @x.37
  %4496 = load i32, i32* @y.38
  %4497 = sub i32 %4495, 1
  %4498 = mul i32 %4495, %4497
  %4499 = urem i32 %4498, 2
  %4500 = icmp eq i32 %4499, 0
  %4501 = icmp slt i32 %4496, 10
  %4502 = or i1 %4500, %4501
  br i1 %4502, label %originalBB1235, label %originalBB1235alteredBB

originalBB1235:                                   ; preds = %4494, %originalBB1235alteredBB
  %4503 = load i64, i64* %29, align 8, !dbg !3024
  %4504 = load i64, i64* %20, align 8, !dbg !3024
  %4505 = icmp ult i64 %4503, %4504, !dbg !3024
  %4506 = load i32, i32* @x.37
  %4507 = load i32, i32* @y.38
  %4508 = sub i32 %4506, 1
  %4509 = mul i32 %4506, %4508
  %4510 = urem i32 %4509, 2
  %4511 = icmp eq i32 %4510, 0
  %4512 = icmp slt i32 %4507, 10
  %4513 = or i1 %4511, %4512
  br i1 %4513, label %originalBBpart21237, label %originalBB1235alteredBB

originalBBpart21237:                              ; preds = %originalBB1235
  br i1 %4505, label %4514, label %4534, !dbg !3027

4514:                                             ; preds = %originalBBpart21237
  %4515 = load i32, i32* @x.37
  %4516 = load i32, i32* @y.38
  %4517 = sub i32 %4515, 1
  %4518 = mul i32 %4515, %4517
  %4519 = urem i32 %4518, 2
  %4520 = icmp eq i32 %4519, 0
  %4521 = icmp slt i32 %4516, 10
  %4522 = or i1 %4520, %4521
  br i1 %4522, label %originalBB1239, label %originalBB1239alteredBB

originalBB1239:                                   ; preds = %4514, %originalBB1239alteredBB
  %4523 = load i8*, i8** %19, align 8, !dbg !3024
  %4524 = load i64, i64* %29, align 8, !dbg !3024
  %4525 = getelementptr inbounds i8, i8* %4523, i64 %4524, !dbg !3024
  store i8 36, i8* %4525, align 1, !dbg !3024
  %4526 = load i32, i32* @x.37
  %4527 = load i32, i32* @y.38
  %4528 = sub i32 %4526, 1
  %4529 = mul i32 %4526, %4528
  %4530 = urem i32 %4529, 2
  %4531 = icmp eq i32 %4530, 0
  %4532 = icmp slt i32 %4527, 10
  %4533 = or i1 %4531, %4532
  br i1 %4533, label %originalBBpart21241, label %originalBB1239alteredBB

originalBBpart21241:                              ; preds = %originalBB1239
  br label %4534, !dbg !3024

4534:                                             ; preds = %originalBBpart21241, %originalBBpart21237
  %4535 = load i32, i32* @x.37
  %4536 = load i32, i32* @y.38
  %4537 = sub i32 %4535, 1
  %4538 = mul i32 %4535, %4537
  %4539 = urem i32 %4538, 2
  %4540 = icmp eq i32 %4539, 0
  %4541 = icmp slt i32 %4536, 10
  %4542 = or i1 %4540, %4541
  br i1 %4542, label %originalBB1243, label %originalBB1243alteredBB

originalBB1243:                                   ; preds = %4534, %originalBB1243alteredBB
  %4543 = load i64, i64* %29, align 8, !dbg !3027
  %4544 = add i64 %4543, 1, !dbg !3027
  store i64 %4544, i64* %29, align 8, !dbg !3027
  %4545 = load i32, i32* @x.37
  %4546 = load i32, i32* @y.38
  %4547 = sub i32 %4545, 1
  %4548 = mul i32 %4545, %4547
  %4549 = urem i32 %4548, 2
  %4550 = icmp eq i32 %4549, 0
  %4551 = icmp slt i32 %4546, 10
  %4552 = or i1 %4550, %4551
  br i1 %4552, label %originalBBpart21251, label %originalBB1243alteredBB

originalBBpart21251:                              ; preds = %originalBB1243
  br label %4553, !dbg !3027

4553:                                             ; preds = %originalBBpart21251
  %4554 = load i32, i32* @x.37
  %4555 = load i32, i32* @y.38
  %4556 = sub i32 %4554, 1
  %4557 = mul i32 %4554, %4556
  %4558 = urem i32 %4557, 2
  %4559 = icmp eq i32 %4558, 0
  %4560 = icmp slt i32 %4555, 10
  %4561 = or i1 %4559, %4560
  br i1 %4561, label %originalBB1253, label %originalBB1253alteredBB

originalBB1253:                                   ; preds = %4553, %originalBB1253alteredBB
  %4562 = load i32, i32* @x.37
  %4563 = load i32, i32* @y.38
  %4564 = sub i32 %4562, 1
  %4565 = mul i32 %4562, %4564
  %4566 = urem i32 %4565, 2
  %4567 = icmp eq i32 %4566, 0
  %4568 = icmp slt i32 %4563, 10
  %4569 = or i1 %4567, %4568
  br i1 %4569, label %originalBBpart21255, label %originalBB1253alteredBB

originalBBpart21255:                              ; preds = %originalBB1253
  br label %4570, !dbg !3018

4570:                                             ; preds = %originalBBpart21255
  %4571 = load i32, i32* @x.37
  %4572 = load i32, i32* @y.38
  %4573 = sub i32 %4571, 1
  %4574 = mul i32 %4571, %4573
  %4575 = urem i32 %4574, 2
  %4576 = icmp eq i32 %4575, 0
  %4577 = icmp slt i32 %4572, 10
  %4578 = or i1 %4576, %4577
  br i1 %4578, label %originalBB1257, label %originalBB1257alteredBB

originalBB1257:                                   ; preds = %4570, %originalBB1257alteredBB
  %4579 = load i64, i64* %29, align 8, !dbg !3028
  %4580 = load i64, i64* %20, align 8, !dbg !3028
  %4581 = icmp ult i64 %4579, %4580, !dbg !3028
  %4582 = load i32, i32* @x.37
  %4583 = load i32, i32* @y.38
  %4584 = sub i32 %4582, 1
  %4585 = mul i32 %4582, %4584
  %4586 = urem i32 %4585, 2
  %4587 = icmp eq i32 %4586, 0
  %4588 = icmp slt i32 %4583, 10
  %4589 = or i1 %4587, %4588
  br i1 %4589, label %originalBBpart21259, label %originalBB1257alteredBB

originalBBpart21259:                              ; preds = %originalBB1257
  br i1 %4581, label %4590, label %4610, !dbg !3031

4590:                                             ; preds = %originalBBpart21259
  %4591 = load i32, i32* @x.37
  %4592 = load i32, i32* @y.38
  %4593 = sub i32 %4591, 1
  %4594 = mul i32 %4591, %4593
  %4595 = urem i32 %4594, 2
  %4596 = icmp eq i32 %4595, 0
  %4597 = icmp slt i32 %4592, 10
  %4598 = or i1 %4596, %4597
  br i1 %4598, label %originalBB1261, label %originalBB1261alteredBB

originalBB1261:                                   ; preds = %4590, %originalBB1261alteredBB
  %4599 = load i8*, i8** %19, align 8, !dbg !3028
  %4600 = load i64, i64* %29, align 8, !dbg !3028
  %4601 = getelementptr inbounds i8, i8* %4599, i64 %4600, !dbg !3028
  store i8 39, i8* %4601, align 1, !dbg !3028
  %4602 = load i32, i32* @x.37
  %4603 = load i32, i32* @y.38
  %4604 = sub i32 %4602, 1
  %4605 = mul i32 %4602, %4604
  %4606 = urem i32 %4605, 2
  %4607 = icmp eq i32 %4606, 0
  %4608 = icmp slt i32 %4603, 10
  %4609 = or i1 %4607, %4608
  br i1 %4609, label %originalBBpart21263, label %originalBB1261alteredBB

originalBBpart21263:                              ; preds = %originalBB1261
  br label %4610, !dbg !3028

4610:                                             ; preds = %originalBBpart21263, %originalBBpart21259
  %4611 = load i32, i32* @x.37
  %4612 = load i32, i32* @y.38
  %4613 = sub i32 %4611, 1
  %4614 = mul i32 %4611, %4613
  %4615 = urem i32 %4614, 2
  %4616 = icmp eq i32 %4615, 0
  %4617 = icmp slt i32 %4612, 10
  %4618 = or i1 %4616, %4617
  br i1 %4618, label %originalBB1265, label %originalBB1265alteredBB

originalBB1265:                                   ; preds = %4610, %originalBB1265alteredBB
  %4619 = load i64, i64* %29, align 8, !dbg !3031
  %4620 = add i64 %4619, 1, !dbg !3031
  store i64 %4620, i64* %29, align 8, !dbg !3031
  %4621 = load i32, i32* @x.37
  %4622 = load i32, i32* @y.38
  %4623 = sub i32 %4621, 1
  %4624 = mul i32 %4621, %4623
  %4625 = urem i32 %4624, 2
  %4626 = icmp eq i32 %4625, 0
  %4627 = icmp slt i32 %4622, 10
  %4628 = or i1 %4626, %4627
  br i1 %4628, label %originalBBpart21276, label %originalBB1265alteredBB

originalBBpart21276:                              ; preds = %originalBB1265
  br label %4629, !dbg !3031

4629:                                             ; preds = %originalBBpart21276
  %4630 = load i32, i32* @x.37
  %4631 = load i32, i32* @y.38
  %4632 = sub i32 %4630, 1
  %4633 = mul i32 %4630, %4632
  %4634 = urem i32 %4633, 2
  %4635 = icmp eq i32 %4634, 0
  %4636 = icmp slt i32 %4631, 10
  %4637 = or i1 %4635, %4636
  br i1 %4637, label %originalBB1278, label %originalBB1278alteredBB

originalBB1278:                                   ; preds = %4629, %originalBB1278alteredBB
  store i8 1, i8* %36, align 1, !dbg !3018
  %4638 = load i32, i32* @x.37
  %4639 = load i32, i32* @y.38
  %4640 = sub i32 %4638, 1
  %4641 = mul i32 %4638, %4640
  %4642 = urem i32 %4641, 2
  %4643 = icmp eq i32 %4642, 0
  %4644 = icmp slt i32 %4639, 10
  %4645 = or i1 %4643, %4644
  br i1 %4645, label %originalBBpart21280, label %originalBB1278alteredBB

originalBBpart21280:                              ; preds = %originalBB1278
  br label %4646, !dbg !3018

4646:                                             ; preds = %originalBBpart21280, %originalBBpart21213, %originalBBpart21209
  %4647 = load i32, i32* @x.37
  %4648 = load i32, i32* @y.38
  %4649 = sub i32 %4647, 1
  %4650 = mul i32 %4647, %4649
  %4651 = urem i32 %4650, 2
  %4652 = icmp eq i32 %4651, 0
  %4653 = icmp slt i32 %4648, 10
  %4654 = or i1 %4652, %4653
  br i1 %4654, label %originalBB1282, label %originalBB1282alteredBB

originalBB1282:                                   ; preds = %4646, %originalBB1282alteredBB
  %4655 = load i32, i32* @x.37
  %4656 = load i32, i32* @y.38
  %4657 = sub i32 %4655, 1
  %4658 = mul i32 %4655, %4657
  %4659 = urem i32 %4658, 2
  %4660 = icmp eq i32 %4659, 0
  %4661 = icmp slt i32 %4656, 10
  %4662 = or i1 %4660, %4661
  br i1 %4662, label %originalBBpart21284, label %originalBB1282alteredBB

originalBBpart21284:                              ; preds = %originalBB1282
  br label %4663, !dbg !3015

4663:                                             ; preds = %originalBBpart21284
  %4664 = load i32, i32* @x.37
  %4665 = load i32, i32* @y.38
  %4666 = sub i32 %4664, 1
  %4667 = mul i32 %4664, %4666
  %4668 = urem i32 %4667, 2
  %4669 = icmp eq i32 %4668, 0
  %4670 = icmp slt i32 %4665, 10
  %4671 = or i1 %4669, %4670
  br i1 %4671, label %originalBB1286, label %originalBB1286alteredBB

originalBB1286:                                   ; preds = %4663, %originalBB1286alteredBB
  %4672 = load i64, i64* %29, align 8, !dbg !3032
  %4673 = load i64, i64* %20, align 8, !dbg !3032
  %4674 = icmp ult i64 %4672, %4673, !dbg !3032
  %4675 = load i32, i32* @x.37
  %4676 = load i32, i32* @y.38
  %4677 = sub i32 %4675, 1
  %4678 = mul i32 %4675, %4677
  %4679 = urem i32 %4678, 2
  %4680 = icmp eq i32 %4679, 0
  %4681 = icmp slt i32 %4676, 10
  %4682 = or i1 %4680, %4681
  br i1 %4682, label %originalBBpart21288, label %originalBB1286alteredBB

originalBBpart21288:                              ; preds = %originalBB1286
  br i1 %4674, label %4683, label %4703, !dbg !3035

4683:                                             ; preds = %originalBBpart21288
  %4684 = load i32, i32* @x.37
  %4685 = load i32, i32* @y.38
  %4686 = sub i32 %4684, 1
  %4687 = mul i32 %4684, %4686
  %4688 = urem i32 %4687, 2
  %4689 = icmp eq i32 %4688, 0
  %4690 = icmp slt i32 %4685, 10
  %4691 = or i1 %4689, %4690
  br i1 %4691, label %originalBB1290, label %originalBB1290alteredBB

originalBB1290:                                   ; preds = %4683, %originalBB1290alteredBB
  %4692 = load i8*, i8** %19, align 8, !dbg !3032
  %4693 = load i64, i64* %29, align 8, !dbg !3032
  %4694 = getelementptr inbounds i8, i8* %4692, i64 %4693, !dbg !3032
  store i8 92, i8* %4694, align 1, !dbg !3032
  %4695 = load i32, i32* @x.37
  %4696 = load i32, i32* @y.38
  %4697 = sub i32 %4695, 1
  %4698 = mul i32 %4695, %4697
  %4699 = urem i32 %4698, 2
  %4700 = icmp eq i32 %4699, 0
  %4701 = icmp slt i32 %4696, 10
  %4702 = or i1 %4700, %4701
  br i1 %4702, label %originalBBpart21292, label %originalBB1290alteredBB

originalBBpart21292:                              ; preds = %originalBB1290
  br label %4703, !dbg !3032

4703:                                             ; preds = %originalBBpart21292, %originalBBpart21288
  %4704 = load i32, i32* @x.37
  %4705 = load i32, i32* @y.38
  %4706 = sub i32 %4704, 1
  %4707 = mul i32 %4704, %4706
  %4708 = urem i32 %4707, 2
  %4709 = icmp eq i32 %4708, 0
  %4710 = icmp slt i32 %4705, 10
  %4711 = or i1 %4709, %4710
  br i1 %4711, label %originalBB1294, label %originalBB1294alteredBB

originalBB1294:                                   ; preds = %4703, %originalBB1294alteredBB
  %4712 = load i64, i64* %29, align 8, !dbg !3035
  %4713 = add i64 %4712, 1, !dbg !3035
  store i64 %4713, i64* %29, align 8, !dbg !3035
  %4714 = load i32, i32* @x.37
  %4715 = load i32, i32* @y.38
  %4716 = sub i32 %4714, 1
  %4717 = mul i32 %4714, %4716
  %4718 = urem i32 %4717, 2
  %4719 = icmp eq i32 %4718, 0
  %4720 = icmp slt i32 %4715, 10
  %4721 = or i1 %4719, %4720
  br i1 %4721, label %originalBBpart21299, label %originalBB1294alteredBB

originalBBpart21299:                              ; preds = %originalBB1294
  br label %4722, !dbg !3035

4722:                                             ; preds = %originalBBpart21299
  %4723 = load i32, i32* @x.37
  %4724 = load i32, i32* @y.38
  %4725 = sub i32 %4723, 1
  %4726 = mul i32 %4723, %4725
  %4727 = urem i32 %4726, 2
  %4728 = icmp eq i32 %4727, 0
  %4729 = icmp slt i32 %4724, 10
  %4730 = or i1 %4728, %4729
  br i1 %4730, label %originalBB1301, label %originalBB1301alteredBB

originalBB1301:                                   ; preds = %4722, %originalBB1301alteredBB
  %4731 = load i32, i32* @x.37
  %4732 = load i32, i32* @y.38
  %4733 = sub i32 %4731, 1
  %4734 = mul i32 %4731, %4733
  %4735 = urem i32 %4734, 2
  %4736 = icmp eq i32 %4735, 0
  %4737 = icmp slt i32 %4732, 10
  %4738 = or i1 %4736, %4737
  br i1 %4738, label %originalBBpart21303, label %originalBB1301alteredBB

originalBBpart21303:                              ; preds = %originalBB1301
  br label %4739, !dbg !3015

4739:                                             ; preds = %originalBBpart21303
  %4740 = load i32, i32* @x.37
  %4741 = load i32, i32* @y.38
  %4742 = sub i32 %4740, 1
  %4743 = mul i32 %4740, %4742
  %4744 = urem i32 %4743, 2
  %4745 = icmp eq i32 %4744, 0
  %4746 = icmp slt i32 %4741, 10
  %4747 = or i1 %4745, %4746
  br i1 %4747, label %originalBB1305, label %originalBB1305alteredBB

originalBB1305:                                   ; preds = %4739, %originalBB1305alteredBB
  %4748 = load i32, i32* @x.37
  %4749 = load i32, i32* @y.38
  %4750 = sub i32 %4748, 1
  %4751 = mul i32 %4748, %4750
  %4752 = urem i32 %4751, 2
  %4753 = icmp eq i32 %4752, 0
  %4754 = icmp slt i32 %4749, 10
  %4755 = or i1 %4753, %4754
  br i1 %4755, label %originalBBpart21307, label %originalBB1305alteredBB

originalBBpart21307:                              ; preds = %originalBB1305
  br label %4756, !dbg !3036

4756:                                             ; preds = %originalBBpart21307
  %4757 = load i32, i32* @x.37
  %4758 = load i32, i32* @y.38
  %4759 = sub i32 %4757, 1
  %4760 = mul i32 %4757, %4759
  %4761 = urem i32 %4760, 2
  %4762 = icmp eq i32 %4761, 0
  %4763 = icmp slt i32 %4758, 10
  %4764 = or i1 %4762, %4763
  br i1 %4764, label %originalBB1309, label %originalBB1309alteredBB

originalBB1309:                                   ; preds = %4756, %originalBB1309alteredBB
  %4765 = load i64, i64* %29, align 8, !dbg !3037
  %4766 = load i64, i64* %20, align 8, !dbg !3037
  %4767 = icmp ult i64 %4765, %4766, !dbg !3037
  %4768 = load i32, i32* @x.37
  %4769 = load i32, i32* @y.38
  %4770 = sub i32 %4768, 1
  %4771 = mul i32 %4768, %4770
  %4772 = urem i32 %4771, 2
  %4773 = icmp eq i32 %4772, 0
  %4774 = icmp slt i32 %4769, 10
  %4775 = or i1 %4773, %4774
  br i1 %4775, label %originalBBpart21311, label %originalBB1309alteredBB

originalBBpart21311:                              ; preds = %originalBB1309
  br i1 %4767, label %4776, label %4801, !dbg !3040

4776:                                             ; preds = %originalBBpart21311
  %4777 = load i32, i32* @x.37
  %4778 = load i32, i32* @y.38
  %4779 = sub i32 %4777, 1
  %4780 = mul i32 %4777, %4779
  %4781 = urem i32 %4780, 2
  %4782 = icmp eq i32 %4781, 0
  %4783 = icmp slt i32 %4778, 10
  %4784 = or i1 %4782, %4783
  br i1 %4784, label %originalBB1313, label %originalBB1313alteredBB

originalBB1313:                                   ; preds = %4776, %originalBB1313alteredBB
  %4785 = load i8, i8* %39, align 1, !dbg !3037
  %4786 = zext i8 %4785 to i32, !dbg !3037
  %4787 = ashr i32 %4786, 6, !dbg !3037
  %4788 = add nsw i32 48, %4787, !dbg !3037
  %4789 = trunc i32 %4788 to i8, !dbg !3037
  %4790 = load i8*, i8** %19, align 8, !dbg !3037
  %4791 = load i64, i64* %29, align 8, !dbg !3037
  %4792 = getelementptr inbounds i8, i8* %4790, i64 %4791, !dbg !3037
  store i8 %4789, i8* %4792, align 1, !dbg !3037
  %4793 = load i32, i32* @x.37
  %4794 = load i32, i32* @y.38
  %4795 = sub i32 %4793, 1
  %4796 = mul i32 %4793, %4795
  %4797 = urem i32 %4796, 2
  %4798 = icmp eq i32 %4797, 0
  %4799 = icmp slt i32 %4794, 10
  %4800 = or i1 %4798, %4799
  br i1 %4800, label %originalBBpart21320, label %originalBB1313alteredBB

originalBBpart21320:                              ; preds = %originalBB1313
  br label %4801, !dbg !3037

4801:                                             ; preds = %originalBBpart21320, %originalBBpart21311
  %4802 = load i32, i32* @x.37
  %4803 = load i32, i32* @y.38
  %4804 = sub i32 %4802, 1
  %4805 = mul i32 %4802, %4804
  %4806 = urem i32 %4805, 2
  %4807 = icmp eq i32 %4806, 0
  %4808 = icmp slt i32 %4803, 10
  %4809 = or i1 %4807, %4808
  br i1 %4809, label %originalBB1322, label %originalBB1322alteredBB

originalBB1322:                                   ; preds = %4801, %originalBB1322alteredBB
  %4810 = load i64, i64* %29, align 8, !dbg !3040
  %4811 = add i64 %4810, 1, !dbg !3040
  store i64 %4811, i64* %29, align 8, !dbg !3040
  %4812 = load i32, i32* @x.37
  %4813 = load i32, i32* @y.38
  %4814 = sub i32 %4812, 1
  %4815 = mul i32 %4812, %4814
  %4816 = urem i32 %4815, 2
  %4817 = icmp eq i32 %4816, 0
  %4818 = icmp slt i32 %4813, 10
  %4819 = or i1 %4817, %4818
  br i1 %4819, label %originalBBpart21336, label %originalBB1322alteredBB

originalBBpart21336:                              ; preds = %originalBB1322
  br label %4820, !dbg !3040

4820:                                             ; preds = %originalBBpart21336
  %4821 = load i32, i32* @x.37
  %4822 = load i32, i32* @y.38
  %4823 = sub i32 %4821, 1
  %4824 = mul i32 %4821, %4823
  %4825 = urem i32 %4824, 2
  %4826 = icmp eq i32 %4825, 0
  %4827 = icmp slt i32 %4822, 10
  %4828 = or i1 %4826, %4827
  br i1 %4828, label %originalBB1338, label %originalBB1338alteredBB

originalBB1338:                                   ; preds = %4820, %originalBB1338alteredBB
  %4829 = load i32, i32* @x.37
  %4830 = load i32, i32* @y.38
  %4831 = sub i32 %4829, 1
  %4832 = mul i32 %4829, %4831
  %4833 = urem i32 %4832, 2
  %4834 = icmp eq i32 %4833, 0
  %4835 = icmp slt i32 %4830, 10
  %4836 = or i1 %4834, %4835
  br i1 %4836, label %originalBBpart21340, label %originalBB1338alteredBB

originalBBpart21340:                              ; preds = %originalBB1338
  br label %4837, !dbg !3041

4837:                                             ; preds = %originalBBpart21340
  %4838 = load i32, i32* @x.37
  %4839 = load i32, i32* @y.38
  %4840 = sub i32 %4838, 1
  %4841 = mul i32 %4838, %4840
  %4842 = urem i32 %4841, 2
  %4843 = icmp eq i32 %4842, 0
  %4844 = icmp slt i32 %4839, 10
  %4845 = or i1 %4843, %4844
  br i1 %4845, label %originalBB1342, label %originalBB1342alteredBB

originalBB1342:                                   ; preds = %4837, %originalBB1342alteredBB
  %4846 = load i64, i64* %29, align 8, !dbg !3042
  %4847 = load i64, i64* %20, align 8, !dbg !3042
  %4848 = icmp ult i64 %4846, %4847, !dbg !3042
  %4849 = load i32, i32* @x.37
  %4850 = load i32, i32* @y.38
  %4851 = sub i32 %4849, 1
  %4852 = mul i32 %4849, %4851
  %4853 = urem i32 %4852, 2
  %4854 = icmp eq i32 %4853, 0
  %4855 = icmp slt i32 %4850, 10
  %4856 = or i1 %4854, %4855
  br i1 %4856, label %originalBBpart21344, label %originalBB1342alteredBB

originalBBpart21344:                              ; preds = %originalBB1342
  br i1 %4848, label %4857, label %4883, !dbg !3045

4857:                                             ; preds = %originalBBpart21344
  %4858 = load i32, i32* @x.37
  %4859 = load i32, i32* @y.38
  %4860 = sub i32 %4858, 1
  %4861 = mul i32 %4858, %4860
  %4862 = urem i32 %4861, 2
  %4863 = icmp eq i32 %4862, 0
  %4864 = icmp slt i32 %4859, 10
  %4865 = or i1 %4863, %4864
  br i1 %4865, label %originalBB1346, label %originalBB1346alteredBB

originalBB1346:                                   ; preds = %4857, %originalBB1346alteredBB
  %4866 = load i8, i8* %39, align 1, !dbg !3042
  %4867 = zext i8 %4866 to i32, !dbg !3042
  %4868 = ashr i32 %4867, 3, !dbg !3042
  %4869 = and i32 %4868, 7, !dbg !3042
  %4870 = add nsw i32 48, %4869, !dbg !3042
  %4871 = trunc i32 %4870 to i8, !dbg !3042
  %4872 = load i8*, i8** %19, align 8, !dbg !3042
  %4873 = load i64, i64* %29, align 8, !dbg !3042
  %4874 = getelementptr inbounds i8, i8* %4872, i64 %4873, !dbg !3042
  store i8 %4871, i8* %4874, align 1, !dbg !3042
  %4875 = load i32, i32* @x.37
  %4876 = load i32, i32* @y.38
  %4877 = sub i32 %4875, 1
  %4878 = mul i32 %4875, %4877
  %4879 = urem i32 %4878, 2
  %4880 = icmp eq i32 %4879, 0
  %4881 = icmp slt i32 %4876, 10
  %4882 = or i1 %4880, %4881
  br i1 %4882, label %originalBBpart21367, label %originalBB1346alteredBB

originalBBpart21367:                              ; preds = %originalBB1346
  br label %4883, !dbg !3042

4883:                                             ; preds = %originalBBpart21367, %originalBBpart21344
  %4884 = load i32, i32* @x.37
  %4885 = load i32, i32* @y.38
  %4886 = sub i32 %4884, 1
  %4887 = mul i32 %4884, %4886
  %4888 = urem i32 %4887, 2
  %4889 = icmp eq i32 %4888, 0
  %4890 = icmp slt i32 %4885, 10
  %4891 = or i1 %4889, %4890
  br i1 %4891, label %originalBB1369, label %originalBB1369alteredBB

originalBB1369:                                   ; preds = %4883, %originalBB1369alteredBB
  %4892 = load i64, i64* %29, align 8, !dbg !3045
  %4893 = add i64 %4892, 1, !dbg !3045
  store i64 %4893, i64* %29, align 8, !dbg !3045
  %4894 = load i32, i32* @x.37
  %4895 = load i32, i32* @y.38
  %4896 = sub i32 %4894, 1
  %4897 = mul i32 %4894, %4896
  %4898 = urem i32 %4897, 2
  %4899 = icmp eq i32 %4898, 0
  %4900 = icmp slt i32 %4895, 10
  %4901 = or i1 %4899, %4900
  br i1 %4901, label %originalBBpart21385, label %originalBB1369alteredBB

originalBBpart21385:                              ; preds = %originalBB1369
  br label %4902, !dbg !3045

4902:                                             ; preds = %originalBBpart21385
  %4903 = load i32, i32* @x.37
  %4904 = load i32, i32* @y.38
  %4905 = sub i32 %4903, 1
  %4906 = mul i32 %4903, %4905
  %4907 = urem i32 %4906, 2
  %4908 = icmp eq i32 %4907, 0
  %4909 = icmp slt i32 %4904, 10
  %4910 = or i1 %4908, %4909
  br i1 %4910, label %originalBB1387, label %originalBB1387alteredBB

originalBB1387:                                   ; preds = %4902, %originalBB1387alteredBB
  %4911 = load i8, i8* %39, align 1, !dbg !3046
  %4912 = zext i8 %4911 to i32, !dbg !3046
  %4913 = and i32 %4912, 7, !dbg !3047
  %4914 = add nsw i32 48, %4913, !dbg !3048
  %4915 = trunc i32 %4914 to i8, !dbg !3049
  store i8 %4915, i8* %39, align 1, !dbg !3050
  %4916 = load i32, i32* @x.37
  %4917 = load i32, i32* @y.38
  %4918 = sub i32 %4916, 1
  %4919 = mul i32 %4916, %4918
  %4920 = urem i32 %4919, 2
  %4921 = icmp eq i32 %4920, 0
  %4922 = icmp slt i32 %4917, 10
  %4923 = or i1 %4921, %4922
  br i1 %4923, label %originalBBpart21411, label %originalBB1387alteredBB

originalBBpart21411:                              ; preds = %originalBB1387
  br label %5053, !dbg !3051

4924:                                             ; preds = %originalBBpart21193, %originalBBpart21189
  %4925 = load i32, i32* @x.37
  %4926 = load i32, i32* @y.38
  %4927 = sub i32 %4925, 1
  %4928 = mul i32 %4925, %4927
  %4929 = urem i32 %4928, 2
  %4930 = icmp eq i32 %4929, 0
  %4931 = icmp slt i32 %4926, 10
  %4932 = or i1 %4930, %4931
  br i1 %4932, label %originalBB1413, label %originalBB1413alteredBB

originalBB1413:                                   ; preds = %4924, %originalBB1413alteredBB
  %4933 = load i8, i8* %41, align 1, !dbg !3052
  %4934 = trunc i8 %4933 to i1, !dbg !3052
  %4935 = load i32, i32* @x.37
  %4936 = load i32, i32* @y.38
  %4937 = sub i32 %4935, 1
  %4938 = mul i32 %4935, %4937
  %4939 = urem i32 %4938, 2
  %4940 = icmp eq i32 %4939, 0
  %4941 = icmp slt i32 %4936, 10
  %4942 = or i1 %4940, %4941
  br i1 %4942, label %originalBBpart21415, label %originalBB1413alteredBB

originalBBpart21415:                              ; preds = %originalBB1413
  br i1 %4934, label %4943, label %5036, !dbg !3054

4943:                                             ; preds = %originalBBpart21415
  %4944 = load i32, i32* @x.37
  %4945 = load i32, i32* @y.38
  %4946 = sub i32 %4944, 1
  %4947 = mul i32 %4944, %4946
  %4948 = urem i32 %4947, 2
  %4949 = icmp eq i32 %4948, 0
  %4950 = icmp slt i32 %4945, 10
  %4951 = or i1 %4949, %4950
  br i1 %4951, label %originalBB1417, label %originalBB1417alteredBB

originalBB1417:                                   ; preds = %4943, %originalBB1417alteredBB
  %4952 = load i32, i32* @x.37
  %4953 = load i32, i32* @y.38
  %4954 = sub i32 %4952, 1
  %4955 = mul i32 %4952, %4954
  %4956 = urem i32 %4955, 2
  %4957 = icmp eq i32 %4956, 0
  %4958 = icmp slt i32 %4953, 10
  %4959 = or i1 %4957, %4958
  br i1 %4959, label %originalBBpart21419, label %originalBB1417alteredBB

originalBBpart21419:                              ; preds = %originalBB1417
  br label %4960, !dbg !3055

4960:                                             ; preds = %originalBBpart21419
  %4961 = load i32, i32* @x.37
  %4962 = load i32, i32* @y.38
  %4963 = sub i32 %4961, 1
  %4964 = mul i32 %4961, %4963
  %4965 = urem i32 %4964, 2
  %4966 = icmp eq i32 %4965, 0
  %4967 = icmp slt i32 %4962, 10
  %4968 = or i1 %4966, %4967
  br i1 %4968, label %originalBB1421, label %originalBB1421alteredBB

originalBB1421:                                   ; preds = %4960, %originalBB1421alteredBB
  %4969 = load i64, i64* %29, align 8, !dbg !3057
  %4970 = load i64, i64* %20, align 8, !dbg !3057
  %4971 = icmp ult i64 %4969, %4970, !dbg !3057
  %4972 = load i32, i32* @x.37
  %4973 = load i32, i32* @y.38
  %4974 = sub i32 %4972, 1
  %4975 = mul i32 %4972, %4974
  %4976 = urem i32 %4975, 2
  %4977 = icmp eq i32 %4976, 0
  %4978 = icmp slt i32 %4973, 10
  %4979 = or i1 %4977, %4978
  br i1 %4979, label %originalBBpart21423, label %originalBB1421alteredBB

originalBBpart21423:                              ; preds = %originalBB1421
  br i1 %4971, label %4980, label %5000, !dbg !3060

4980:                                             ; preds = %originalBBpart21423
  %4981 = load i32, i32* @x.37
  %4982 = load i32, i32* @y.38
  %4983 = sub i32 %4981, 1
  %4984 = mul i32 %4981, %4983
  %4985 = urem i32 %4984, 2
  %4986 = icmp eq i32 %4985, 0
  %4987 = icmp slt i32 %4982, 10
  %4988 = or i1 %4986, %4987
  br i1 %4988, label %originalBB1425, label %originalBB1425alteredBB

originalBB1425:                                   ; preds = %4980, %originalBB1425alteredBB
  %4989 = load i8*, i8** %19, align 8, !dbg !3057
  %4990 = load i64, i64* %29, align 8, !dbg !3057
  %4991 = getelementptr inbounds i8, i8* %4989, i64 %4990, !dbg !3057
  store i8 92, i8* %4991, align 1, !dbg !3057
  %4992 = load i32, i32* @x.37
  %4993 = load i32, i32* @y.38
  %4994 = sub i32 %4992, 1
  %4995 = mul i32 %4992, %4994
  %4996 = urem i32 %4995, 2
  %4997 = icmp eq i32 %4996, 0
  %4998 = icmp slt i32 %4993, 10
  %4999 = or i1 %4997, %4998
  br i1 %4999, label %originalBBpart21427, label %originalBB1425alteredBB

originalBBpart21427:                              ; preds = %originalBB1425
  br label %5000, !dbg !3057

5000:                                             ; preds = %originalBBpart21427, %originalBBpart21423
  %5001 = load i32, i32* @x.37
  %5002 = load i32, i32* @y.38
  %5003 = sub i32 %5001, 1
  %5004 = mul i32 %5001, %5003
  %5005 = urem i32 %5004, 2
  %5006 = icmp eq i32 %5005, 0
  %5007 = icmp slt i32 %5002, 10
  %5008 = or i1 %5006, %5007
  br i1 %5008, label %originalBB1429, label %originalBB1429alteredBB

originalBB1429:                                   ; preds = %5000, %originalBB1429alteredBB
  %5009 = load i64, i64* %29, align 8, !dbg !3060
  %5010 = add i64 %5009, 1, !dbg !3060
  store i64 %5010, i64* %29, align 8, !dbg !3060
  %5011 = load i32, i32* @x.37
  %5012 = load i32, i32* @y.38
  %5013 = sub i32 %5011, 1
  %5014 = mul i32 %5011, %5013
  %5015 = urem i32 %5014, 2
  %5016 = icmp eq i32 %5015, 0
  %5017 = icmp slt i32 %5012, 10
  %5018 = or i1 %5016, %5017
  br i1 %5018, label %originalBBpart21436, label %originalBB1429alteredBB

originalBBpart21436:                              ; preds = %originalBB1429
  br label %5019, !dbg !3060

5019:                                             ; preds = %originalBBpart21436
  %5020 = load i32, i32* @x.37
  %5021 = load i32, i32* @y.38
  %5022 = sub i32 %5020, 1
  %5023 = mul i32 %5020, %5022
  %5024 = urem i32 %5023, 2
  %5025 = icmp eq i32 %5024, 0
  %5026 = icmp slt i32 %5021, 10
  %5027 = or i1 %5025, %5026
  br i1 %5027, label %originalBB1438, label %originalBB1438alteredBB

originalBB1438:                                   ; preds = %5019, %originalBB1438alteredBB
  store i8 0, i8* %41, align 1, !dbg !3061
  %5028 = load i32, i32* @x.37
  %5029 = load i32, i32* @y.38
  %5030 = sub i32 %5028, 1
  %5031 = mul i32 %5028, %5030
  %5032 = urem i32 %5031, 2
  %5033 = icmp eq i32 %5032, 0
  %5034 = icmp slt i32 %5029, 10
  %5035 = or i1 %5033, %5034
  br i1 %5035, label %originalBBpart21440, label %originalBB1438alteredBB

originalBBpart21440:                              ; preds = %originalBB1438
  br label %5036, !dbg !3062

5036:                                             ; preds = %originalBBpart21440, %originalBBpart21415
  %5037 = load i32, i32* @x.37
  %5038 = load i32, i32* @y.38
  %5039 = sub i32 %5037, 1
  %5040 = mul i32 %5037, %5039
  %5041 = urem i32 %5040, 2
  %5042 = icmp eq i32 %5041, 0
  %5043 = icmp slt i32 %5038, 10
  %5044 = or i1 %5042, %5043
  br i1 %5044, label %originalBB1442, label %originalBB1442alteredBB

originalBB1442:                                   ; preds = %5036, %originalBB1442alteredBB
  %5045 = load i32, i32* @x.37
  %5046 = load i32, i32* @y.38
  %5047 = sub i32 %5045, 1
  %5048 = mul i32 %5045, %5047
  %5049 = urem i32 %5048, 2
  %5050 = icmp eq i32 %5049, 0
  %5051 = icmp slt i32 %5046, 10
  %5052 = or i1 %5050, %5051
  br i1 %5052, label %originalBBpart21444, label %originalBB1442alteredBB

originalBBpart21444:                              ; preds = %originalBB1442
  br label %5053

5053:                                             ; preds = %originalBBpart21444, %originalBBpart21411
  %5054 = load i32, i32* @x.37
  %5055 = load i32, i32* @y.38
  %5056 = sub i32 %5054, 1
  %5057 = mul i32 %5054, %5056
  %5058 = urem i32 %5057, 2
  %5059 = icmp eq i32 %5058, 0
  %5060 = icmp slt i32 %5055, 10
  %5061 = or i1 %5059, %5060
  br i1 %5061, label %originalBB1446, label %originalBB1446alteredBB

originalBB1446:                                   ; preds = %5053, %originalBB1446alteredBB
  %5062 = load i64, i64* %50, align 8, !dbg !3063
  %5063 = load i64, i64* %28, align 8, !dbg !3065
  %5064 = add i64 %5063, 1, !dbg !3066
  %5065 = icmp ule i64 %5062, %5064, !dbg !3067
  %5066 = load i32, i32* @x.37
  %5067 = load i32, i32* @y.38
  %5068 = sub i32 %5066, 1
  %5069 = mul i32 %5066, %5068
  %5070 = urem i32 %5069, 2
  %5071 = icmp eq i32 %5070, 0
  %5072 = icmp slt i32 %5067, 10
  %5073 = or i1 %5071, %5072
  br i1 %5073, label %originalBBpart21451, label %originalBB1446alteredBB

originalBBpart21451:                              ; preds = %originalBB1446
  br i1 %5065, label %5074, label %5091, !dbg !3068

5074:                                             ; preds = %originalBBpart21451
  %5075 = load i32, i32* @x.37
  %5076 = load i32, i32* @y.38
  %5077 = sub i32 %5075, 1
  %5078 = mul i32 %5075, %5077
  %5079 = urem i32 %5078, 2
  %5080 = icmp eq i32 %5079, 0
  %5081 = icmp slt i32 %5076, 10
  %5082 = or i1 %5080, %5081
  br i1 %5082, label %originalBB1453, label %originalBB1453alteredBB

originalBB1453:                                   ; preds = %5074, %originalBB1453alteredBB
  %5083 = load i32, i32* @x.37
  %5084 = load i32, i32* @y.38
  %5085 = sub i32 %5083, 1
  %5086 = mul i32 %5083, %5085
  %5087 = urem i32 %5086, 2
  %5088 = icmp eq i32 %5087, 0
  %5089 = icmp slt i32 %5084, 10
  %5090 = or i1 %5088, %5089
  br i1 %5090, label %originalBBpart21455, label %originalBB1453alteredBB

originalBBpart21455:                              ; preds = %originalBB1453
  br label %5431, !dbg !3069

5091:                                             ; preds = %originalBBpart21451
  %5092 = load i32, i32* @x.37
  %5093 = load i32, i32* @y.38
  %5094 = sub i32 %5092, 1
  %5095 = mul i32 %5092, %5094
  %5096 = urem i32 %5095, 2
  %5097 = icmp eq i32 %5096, 0
  %5098 = icmp slt i32 %5093, 10
  %5099 = or i1 %5097, %5098
  br i1 %5099, label %originalBB1457, label %originalBB1457alteredBB

originalBB1457:                                   ; preds = %5091, %originalBB1457alteredBB
  %5100 = load i32, i32* @x.37
  %5101 = load i32, i32* @y.38
  %5102 = sub i32 %5100, 1
  %5103 = mul i32 %5100, %5102
  %5104 = urem i32 %5103, 2
  %5105 = icmp eq i32 %5104, 0
  %5106 = icmp slt i32 %5101, 10
  %5107 = or i1 %5105, %5106
  br i1 %5107, label %originalBBpart21459, label %originalBB1457alteredBB

originalBBpart21459:                              ; preds = %originalBB1457
  br label %5108, !dbg !3070

5108:                                             ; preds = %originalBBpart21459
  %5109 = load i32, i32* @x.37
  %5110 = load i32, i32* @y.38
  %5111 = sub i32 %5109, 1
  %5112 = mul i32 %5109, %5111
  %5113 = urem i32 %5112, 2
  %5114 = icmp eq i32 %5113, 0
  %5115 = icmp slt i32 %5110, 10
  %5116 = or i1 %5114, %5115
  br i1 %5116, label %originalBB1461, label %originalBB1461alteredBB

originalBB1461:                                   ; preds = %5108, %originalBB1461alteredBB
  %5117 = load i8, i8* %36, align 1, !dbg !3071
  %5118 = trunc i8 %5117 to i1, !dbg !3071
  %5119 = load i32, i32* @x.37
  %5120 = load i32, i32* @y.38
  %5121 = sub i32 %5119, 1
  %5122 = mul i32 %5119, %5121
  %5123 = urem i32 %5122, 2
  %5124 = icmp eq i32 %5123, 0
  %5125 = icmp slt i32 %5120, 10
  %5126 = or i1 %5124, %5125
  br i1 %5126, label %originalBBpart21463, label %originalBB1461alteredBB

originalBBpart21463:                              ; preds = %originalBB1461
  br i1 %5118, label %5127, label %5315, !dbg !3071

5127:                                             ; preds = %originalBBpart21463
  %5128 = load i32, i32* @x.37
  %5129 = load i32, i32* @y.38
  %5130 = sub i32 %5128, 1
  %5131 = mul i32 %5128, %5130
  %5132 = urem i32 %5131, 2
  %5133 = icmp eq i32 %5132, 0
  %5134 = icmp slt i32 %5129, 10
  %5135 = or i1 %5133, %5134
  br i1 %5135, label %originalBB1465, label %originalBB1465alteredBB

originalBB1465:                                   ; preds = %5127, %originalBB1465alteredBB
  %5136 = load i8, i8* %42, align 1, !dbg !3071
  %5137 = trunc i8 %5136 to i1, !dbg !3071
  %5138 = load i32, i32* @x.37
  %5139 = load i32, i32* @y.38
  %5140 = sub i32 %5138, 1
  %5141 = mul i32 %5138, %5140
  %5142 = urem i32 %5141, 2
  %5143 = icmp eq i32 %5142, 0
  %5144 = icmp slt i32 %5139, 10
  %5145 = or i1 %5143, %5144
  br i1 %5145, label %originalBBpart21467, label %originalBB1465alteredBB

originalBBpart21467:                              ; preds = %originalBB1465
  br i1 %5137, label %5315, label %5146, !dbg !3074

5146:                                             ; preds = %originalBBpart21467
  %5147 = load i32, i32* @x.37
  %5148 = load i32, i32* @y.38
  %5149 = sub i32 %5147, 1
  %5150 = mul i32 %5147, %5149
  %5151 = urem i32 %5150, 2
  %5152 = icmp eq i32 %5151, 0
  %5153 = icmp slt i32 %5148, 10
  %5154 = or i1 %5152, %5153
  br i1 %5154, label %originalBB1469, label %originalBB1469alteredBB

originalBB1469:                                   ; preds = %5146, %originalBB1469alteredBB
  %5155 = load i32, i32* @x.37
  %5156 = load i32, i32* @y.38
  %5157 = sub i32 %5155, 1
  %5158 = mul i32 %5155, %5157
  %5159 = urem i32 %5158, 2
  %5160 = icmp eq i32 %5159, 0
  %5161 = icmp slt i32 %5156, 10
  %5162 = or i1 %5160, %5161
  br i1 %5162, label %originalBBpart21471, label %originalBB1469alteredBB

originalBBpart21471:                              ; preds = %originalBB1469
  br label %5163, !dbg !3075

5163:                                             ; preds = %originalBBpart21471
  %5164 = load i32, i32* @x.37
  %5165 = load i32, i32* @y.38
  %5166 = sub i32 %5164, 1
  %5167 = mul i32 %5164, %5166
  %5168 = urem i32 %5167, 2
  %5169 = icmp eq i32 %5168, 0
  %5170 = icmp slt i32 %5165, 10
  %5171 = or i1 %5169, %5170
  br i1 %5171, label %originalBB1473, label %originalBB1473alteredBB

originalBB1473:                                   ; preds = %5163, %originalBB1473alteredBB
  %5172 = load i64, i64* %29, align 8, !dbg !3077
  %5173 = load i64, i64* %20, align 8, !dbg !3077
  %5174 = icmp ult i64 %5172, %5173, !dbg !3077
  %5175 = load i32, i32* @x.37
  %5176 = load i32, i32* @y.38
  %5177 = sub i32 %5175, 1
  %5178 = mul i32 %5175, %5177
  %5179 = urem i32 %5178, 2
  %5180 = icmp eq i32 %5179, 0
  %5181 = icmp slt i32 %5176, 10
  %5182 = or i1 %5180, %5181
  br i1 %5182, label %originalBBpart21475, label %originalBB1473alteredBB

originalBBpart21475:                              ; preds = %originalBB1473
  br i1 %5174, label %5183, label %5203, !dbg !3080

5183:                                             ; preds = %originalBBpart21475
  %5184 = load i32, i32* @x.37
  %5185 = load i32, i32* @y.38
  %5186 = sub i32 %5184, 1
  %5187 = mul i32 %5184, %5186
  %5188 = urem i32 %5187, 2
  %5189 = icmp eq i32 %5188, 0
  %5190 = icmp slt i32 %5185, 10
  %5191 = or i1 %5189, %5190
  br i1 %5191, label %originalBB1477, label %originalBB1477alteredBB

originalBB1477:                                   ; preds = %5183, %originalBB1477alteredBB
  %5192 = load i8*, i8** %19, align 8, !dbg !3077
  %5193 = load i64, i64* %29, align 8, !dbg !3077
  %5194 = getelementptr inbounds i8, i8* %5192, i64 %5193, !dbg !3077
  store i8 39, i8* %5194, align 1, !dbg !3077
  %5195 = load i32, i32* @x.37
  %5196 = load i32, i32* @y.38
  %5197 = sub i32 %5195, 1
  %5198 = mul i32 %5195, %5197
  %5199 = urem i32 %5198, 2
  %5200 = icmp eq i32 %5199, 0
  %5201 = icmp slt i32 %5196, 10
  %5202 = or i1 %5200, %5201
  br i1 %5202, label %originalBBpart21479, label %originalBB1477alteredBB

originalBBpart21479:                              ; preds = %originalBB1477
  br label %5203, !dbg !3077

5203:                                             ; preds = %originalBBpart21479, %originalBBpart21475
  %5204 = load i32, i32* @x.37
  %5205 = load i32, i32* @y.38
  %5206 = sub i32 %5204, 1
  %5207 = mul i32 %5204, %5206
  %5208 = urem i32 %5207, 2
  %5209 = icmp eq i32 %5208, 0
  %5210 = icmp slt i32 %5205, 10
  %5211 = or i1 %5209, %5210
  br i1 %5211, label %originalBB1481, label %originalBB1481alteredBB

originalBB1481:                                   ; preds = %5203, %originalBB1481alteredBB
  %5212 = load i64, i64* %29, align 8, !dbg !3080
  %5213 = add i64 %5212, 1, !dbg !3080
  store i64 %5213, i64* %29, align 8, !dbg !3080
  %5214 = load i32, i32* @x.37
  %5215 = load i32, i32* @y.38
  %5216 = sub i32 %5214, 1
  %5217 = mul i32 %5214, %5216
  %5218 = urem i32 %5217, 2
  %5219 = icmp eq i32 %5218, 0
  %5220 = icmp slt i32 %5215, 10
  %5221 = or i1 %5219, %5220
  br i1 %5221, label %originalBBpart21485, label %originalBB1481alteredBB

originalBBpart21485:                              ; preds = %originalBB1481
  br label %5222, !dbg !3080

5222:                                             ; preds = %originalBBpart21485
  %5223 = load i32, i32* @x.37
  %5224 = load i32, i32* @y.38
  %5225 = sub i32 %5223, 1
  %5226 = mul i32 %5223, %5225
  %5227 = urem i32 %5226, 2
  %5228 = icmp eq i32 %5227, 0
  %5229 = icmp slt i32 %5224, 10
  %5230 = or i1 %5228, %5229
  br i1 %5230, label %originalBB1487, label %originalBB1487alteredBB

originalBB1487:                                   ; preds = %5222, %originalBB1487alteredBB
  %5231 = load i32, i32* @x.37
  %5232 = load i32, i32* @y.38
  %5233 = sub i32 %5231, 1
  %5234 = mul i32 %5231, %5233
  %5235 = urem i32 %5234, 2
  %5236 = icmp eq i32 %5235, 0
  %5237 = icmp slt i32 %5232, 10
  %5238 = or i1 %5236, %5237
  br i1 %5238, label %originalBBpart21489, label %originalBB1487alteredBB

originalBBpart21489:                              ; preds = %originalBB1487
  br label %5239, !dbg !3075

5239:                                             ; preds = %originalBBpart21489
  %5240 = load i32, i32* @x.37
  %5241 = load i32, i32* @y.38
  %5242 = sub i32 %5240, 1
  %5243 = mul i32 %5240, %5242
  %5244 = urem i32 %5243, 2
  %5245 = icmp eq i32 %5244, 0
  %5246 = icmp slt i32 %5241, 10
  %5247 = or i1 %5245, %5246
  br i1 %5247, label %originalBB1491, label %originalBB1491alteredBB

originalBB1491:                                   ; preds = %5239, %originalBB1491alteredBB
  %5248 = load i64, i64* %29, align 8, !dbg !3081
  %5249 = load i64, i64* %20, align 8, !dbg !3081
  %5250 = icmp ult i64 %5248, %5249, !dbg !3081
  %5251 = load i32, i32* @x.37
  %5252 = load i32, i32* @y.38
  %5253 = sub i32 %5251, 1
  %5254 = mul i32 %5251, %5253
  %5255 = urem i32 %5254, 2
  %5256 = icmp eq i32 %5255, 0
  %5257 = icmp slt i32 %5252, 10
  %5258 = or i1 %5256, %5257
  br i1 %5258, label %originalBBpart21493, label %originalBB1491alteredBB

originalBBpart21493:                              ; preds = %originalBB1491
  br i1 %5250, label %5259, label %5279, !dbg !3084

5259:                                             ; preds = %originalBBpart21493
  %5260 = load i32, i32* @x.37
  %5261 = load i32, i32* @y.38
  %5262 = sub i32 %5260, 1
  %5263 = mul i32 %5260, %5262
  %5264 = urem i32 %5263, 2
  %5265 = icmp eq i32 %5264, 0
  %5266 = icmp slt i32 %5261, 10
  %5267 = or i1 %5265, %5266
  br i1 %5267, label %originalBB1495, label %originalBB1495alteredBB

originalBB1495:                                   ; preds = %5259, %originalBB1495alteredBB
  %5268 = load i8*, i8** %19, align 8, !dbg !3081
  %5269 = load i64, i64* %29, align 8, !dbg !3081
  %5270 = getelementptr inbounds i8, i8* %5268, i64 %5269, !dbg !3081
  store i8 39, i8* %5270, align 1, !dbg !3081
  %5271 = load i32, i32* @x.37
  %5272 = load i32, i32* @y.38
  %5273 = sub i32 %5271, 1
  %5274 = mul i32 %5271, %5273
  %5275 = urem i32 %5274, 2
  %5276 = icmp eq i32 %5275, 0
  %5277 = icmp slt i32 %5272, 10
  %5278 = or i1 %5276, %5277
  br i1 %5278, label %originalBBpart21497, label %originalBB1495alteredBB

originalBBpart21497:                              ; preds = %originalBB1495
  br label %5279, !dbg !3081

5279:                                             ; preds = %originalBBpart21497, %originalBBpart21493
  %5280 = load i32, i32* @x.37
  %5281 = load i32, i32* @y.38
  %5282 = sub i32 %5280, 1
  %5283 = mul i32 %5280, %5282
  %5284 = urem i32 %5283, 2
  %5285 = icmp eq i32 %5284, 0
  %5286 = icmp slt i32 %5281, 10
  %5287 = or i1 %5285, %5286
  br i1 %5287, label %originalBB1499, label %originalBB1499alteredBB

originalBB1499:                                   ; preds = %5279, %originalBB1499alteredBB
  %5288 = load i64, i64* %29, align 8, !dbg !3084
  %5289 = add i64 %5288, 1, !dbg !3084
  store i64 %5289, i64* %29, align 8, !dbg !3084
  %5290 = load i32, i32* @x.37
  %5291 = load i32, i32* @y.38
  %5292 = sub i32 %5290, 1
  %5293 = mul i32 %5290, %5292
  %5294 = urem i32 %5293, 2
  %5295 = icmp eq i32 %5294, 0
  %5296 = icmp slt i32 %5291, 10
  %5297 = or i1 %5295, %5296
  br i1 %5297, label %originalBBpart21502, label %originalBB1499alteredBB

originalBBpart21502:                              ; preds = %originalBB1499
  br label %5298, !dbg !3084

5298:                                             ; preds = %originalBBpart21502
  %5299 = load i32, i32* @x.37
  %5300 = load i32, i32* @y.38
  %5301 = sub i32 %5299, 1
  %5302 = mul i32 %5299, %5301
  %5303 = urem i32 %5302, 2
  %5304 = icmp eq i32 %5303, 0
  %5305 = icmp slt i32 %5300, 10
  %5306 = or i1 %5304, %5305
  br i1 %5306, label %originalBB1504, label %originalBB1504alteredBB

originalBB1504:                                   ; preds = %5298, %originalBB1504alteredBB
  store i8 0, i8* %36, align 1, !dbg !3075
  %5307 = load i32, i32* @x.37
  %5308 = load i32, i32* @y.38
  %5309 = sub i32 %5307, 1
  %5310 = mul i32 %5307, %5309
  %5311 = urem i32 %5310, 2
  %5312 = icmp eq i32 %5311, 0
  %5313 = icmp slt i32 %5308, 10
  %5314 = or i1 %5312, %5313
  br i1 %5314, label %originalBBpart21506, label %originalBB1504alteredBB

originalBBpart21506:                              ; preds = %originalBB1504
  br label %5315, !dbg !3075

5315:                                             ; preds = %originalBBpart21506, %originalBBpart21467, %originalBBpart21463
  %5316 = load i32, i32* @x.37
  %5317 = load i32, i32* @y.38
  %5318 = sub i32 %5316, 1
  %5319 = mul i32 %5316, %5318
  %5320 = urem i32 %5319, 2
  %5321 = icmp eq i32 %5320, 0
  %5322 = icmp slt i32 %5317, 10
  %5323 = or i1 %5321, %5322
  br i1 %5323, label %originalBB1508, label %originalBB1508alteredBB

originalBB1508:                                   ; preds = %5315, %originalBB1508alteredBB
  %5324 = load i32, i32* @x.37
  %5325 = load i32, i32* @y.38
  %5326 = sub i32 %5324, 1
  %5327 = mul i32 %5324, %5326
  %5328 = urem i32 %5327, 2
  %5329 = icmp eq i32 %5328, 0
  %5330 = icmp slt i32 %5325, 10
  %5331 = or i1 %5329, %5330
  br i1 %5331, label %originalBBpart21510, label %originalBB1508alteredBB

originalBBpart21510:                              ; preds = %originalBB1508
  br label %5332, !dbg !3074

5332:                                             ; preds = %originalBBpart21510
  %5333 = load i32, i32* @x.37
  %5334 = load i32, i32* @y.38
  %5335 = sub i32 %5333, 1
  %5336 = mul i32 %5333, %5335
  %5337 = urem i32 %5336, 2
  %5338 = icmp eq i32 %5337, 0
  %5339 = icmp slt i32 %5334, 10
  %5340 = or i1 %5338, %5339
  br i1 %5340, label %originalBB1512, label %originalBB1512alteredBB

originalBB1512:                                   ; preds = %5332, %originalBB1512alteredBB
  %5341 = load i32, i32* @x.37
  %5342 = load i32, i32* @y.38
  %5343 = sub i32 %5341, 1
  %5344 = mul i32 %5341, %5343
  %5345 = urem i32 %5344, 2
  %5346 = icmp eq i32 %5345, 0
  %5347 = icmp slt i32 %5342, 10
  %5348 = or i1 %5346, %5347
  br i1 %5348, label %originalBBpart21514, label %originalBB1512alteredBB

originalBBpart21514:                              ; preds = %originalBB1512
  br label %5349, !dbg !3085

5349:                                             ; preds = %originalBBpart21514
  %5350 = load i32, i32* @x.37
  %5351 = load i32, i32* @y.38
  %5352 = sub i32 %5350, 1
  %5353 = mul i32 %5350, %5352
  %5354 = urem i32 %5353, 2
  %5355 = icmp eq i32 %5354, 0
  %5356 = icmp slt i32 %5351, 10
  %5357 = or i1 %5355, %5356
  br i1 %5357, label %originalBB1516, label %originalBB1516alteredBB

originalBB1516:                                   ; preds = %5349, %originalBB1516alteredBB
  %5358 = load i64, i64* %29, align 8, !dbg !3086
  %5359 = load i64, i64* %20, align 8, !dbg !3086
  %5360 = icmp ult i64 %5358, %5359, !dbg !3086
  %5361 = load i32, i32* @x.37
  %5362 = load i32, i32* @y.38
  %5363 = sub i32 %5361, 1
  %5364 = mul i32 %5361, %5363
  %5365 = urem i32 %5364, 2
  %5366 = icmp eq i32 %5365, 0
  %5367 = icmp slt i32 %5362, 10
  %5368 = or i1 %5366, %5367
  br i1 %5368, label %originalBBpart21518, label %originalBB1516alteredBB

originalBBpart21518:                              ; preds = %originalBB1516
  br i1 %5360, label %5369, label %5390, !dbg !3089

5369:                                             ; preds = %originalBBpart21518
  %5370 = load i32, i32* @x.37
  %5371 = load i32, i32* @y.38
  %5372 = sub i32 %5370, 1
  %5373 = mul i32 %5370, %5372
  %5374 = urem i32 %5373, 2
  %5375 = icmp eq i32 %5374, 0
  %5376 = icmp slt i32 %5371, 10
  %5377 = or i1 %5375, %5376
  br i1 %5377, label %originalBB1520, label %originalBB1520alteredBB

originalBB1520:                                   ; preds = %5369, %originalBB1520alteredBB
  %5378 = load i8, i8* %39, align 1, !dbg !3086
  %5379 = load i8*, i8** %19, align 8, !dbg !3086
  %5380 = load i64, i64* %29, align 8, !dbg !3086
  %5381 = getelementptr inbounds i8, i8* %5379, i64 %5380, !dbg !3086
  store i8 %5378, i8* %5381, align 1, !dbg !3086
  %5382 = load i32, i32* @x.37
  %5383 = load i32, i32* @y.38
  %5384 = sub i32 %5382, 1
  %5385 = mul i32 %5382, %5384
  %5386 = urem i32 %5385, 2
  %5387 = icmp eq i32 %5386, 0
  %5388 = icmp slt i32 %5383, 10
  %5389 = or i1 %5387, %5388
  br i1 %5389, label %originalBBpart21522, label %originalBB1520alteredBB

originalBBpart21522:                              ; preds = %originalBB1520
  br label %5390, !dbg !3086

5390:                                             ; preds = %originalBBpart21522, %originalBBpart21518
  %5391 = load i32, i32* @x.37
  %5392 = load i32, i32* @y.38
  %5393 = sub i32 %5391, 1
  %5394 = mul i32 %5391, %5393
  %5395 = urem i32 %5394, 2
  %5396 = icmp eq i32 %5395, 0
  %5397 = icmp slt i32 %5392, 10
  %5398 = or i1 %5396, %5397
  br i1 %5398, label %originalBB1524, label %originalBB1524alteredBB

originalBB1524:                                   ; preds = %5390, %originalBB1524alteredBB
  %5399 = load i64, i64* %29, align 8, !dbg !3089
  %5400 = add i64 %5399, 1, !dbg !3089
  store i64 %5400, i64* %29, align 8, !dbg !3089
  %5401 = load i32, i32* @x.37
  %5402 = load i32, i32* @y.38
  %5403 = sub i32 %5401, 1
  %5404 = mul i32 %5401, %5403
  %5405 = urem i32 %5404, 2
  %5406 = icmp eq i32 %5405, 0
  %5407 = icmp slt i32 %5402, 10
  %5408 = or i1 %5406, %5407
  br i1 %5408, label %originalBBpart21535, label %originalBB1524alteredBB

originalBBpart21535:                              ; preds = %originalBB1524
  br label %5409, !dbg !3089

5409:                                             ; preds = %originalBBpart21535
  %5410 = load i32, i32* @x.37
  %5411 = load i32, i32* @y.38
  %5412 = sub i32 %5410, 1
  %5413 = mul i32 %5410, %5412
  %5414 = urem i32 %5413, 2
  %5415 = icmp eq i32 %5414, 0
  %5416 = icmp slt i32 %5411, 10
  %5417 = or i1 %5415, %5416
  br i1 %5417, label %originalBB1537, label %originalBB1537alteredBB

originalBB1537:                                   ; preds = %5409, %originalBB1537alteredBB
  %5418 = load i8*, i8** %21, align 8, !dbg !3090
  %5419 = load i64, i64* %28, align 8, !dbg !3091
  %5420 = add i64 %5419, 1, !dbg !3091
  store i64 %5420, i64* %28, align 8, !dbg !3091
  %5421 = getelementptr inbounds i8, i8* %5418, i64 %5420, !dbg !3090
  %5422 = load i8, i8* %5421, align 1, !dbg !3090
  store i8 %5422, i8* %39, align 1, !dbg !3092
  %5423 = load i32, i32* @x.37
  %5424 = load i32, i32* @y.38
  %5425 = sub i32 %5423, 1
  %5426 = mul i32 %5423, %5425
  %5427 = urem i32 %5426, 2
  %5428 = icmp eq i32 %5427, 0
  %5429 = icmp slt i32 %5424, 10
  %5430 = or i1 %5428, %5429
  br i1 %5430, label %originalBBpart21543, label %originalBB1537alteredBB

originalBBpart21543:                              ; preds = %originalBB1537
  br label %4272, !dbg !3093, !llvm.loop !3094

5431:                                             ; preds = %originalBBpart21455
  %5432 = load i32, i32* @x.37
  %5433 = load i32, i32* @y.38
  %5434 = sub i32 %5432, 1
  %5435 = mul i32 %5432, %5434
  %5436 = urem i32 %5435, 2
  %5437 = icmp eq i32 %5436, 0
  %5438 = icmp slt i32 %5433, 10
  %5439 = or i1 %5437, %5438
  br i1 %5439, label %originalBB1545, label %originalBB1545alteredBB

originalBB1545:                                   ; preds = %5431, %originalBB1545alteredBB
  %5440 = load i32, i32* @x.37
  %5441 = load i32, i32* @y.38
  %5442 = sub i32 %5440, 1
  %5443 = mul i32 %5440, %5442
  %5444 = urem i32 %5443, 2
  %5445 = icmp eq i32 %5444, 0
  %5446 = icmp slt i32 %5441, 10
  %5447 = or i1 %5445, %5446
  br i1 %5447, label %originalBBpart21547, label %originalBB1545alteredBB

originalBBpart21547:                              ; preds = %originalBB1545
  br label %6070, !dbg !3097

5448:                                             ; preds = %originalBBpart21167, %originalBBpart21163
  %5449 = load i32, i32* @x.37
  %5450 = load i32, i32* @y.38
  %5451 = sub i32 %5449, 1
  %5452 = mul i32 %5449, %5451
  %5453 = urem i32 %5452, 2
  %5454 = icmp eq i32 %5453, 0
  %5455 = icmp slt i32 %5450, 10
  %5456 = or i1 %5454, %5455
  br i1 %5456, label %originalBB1549, label %originalBB1549alteredBB

originalBB1549:                                   ; preds = %5448, %originalBB1549alteredBB
  %5457 = load i32, i32* @x.37
  %5458 = load i32, i32* @y.38
  %5459 = sub i32 %5457, 1
  %5460 = mul i32 %5457, %5459
  %5461 = urem i32 %5460, 2
  %5462 = icmp eq i32 %5461, 0
  %5463 = icmp slt i32 %5458, 10
  %5464 = or i1 %5462, %5463
  br i1 %5464, label %originalBBpart21551, label %originalBB1549alteredBB

originalBBpart21551:                              ; preds = %originalBB1549
  br label %5465, !dbg !3098

5465:                                             ; preds = %originalBBpart21551, %originalBBpart2946, %originalBBpart2942, %originalBBpart2834, %originalBBpart2810, %originalBBpart2798, %originalBBpart2782, %originalBBpart2690, %originalBBpart2483
  %5466 = load i32, i32* @x.37
  %5467 = load i32, i32* @y.38
  %5468 = sub i32 %5466, 1
  %5469 = mul i32 %5466, %5468
  %5470 = urem i32 %5469, 2
  %5471 = icmp eq i32 %5470, 0
  %5472 = icmp slt i32 %5467, 10
  %5473 = or i1 %5471, %5472
  br i1 %5473, label %originalBB1553, label %originalBB1553alteredBB

originalBB1553:                                   ; preds = %5465, %originalBB1553alteredBB
  %5474 = load i8, i8* %33, align 1, !dbg !3099
  %5475 = trunc i8 %5474 to i1, !dbg !3099
  %5476 = load i32, i32* @x.37
  %5477 = load i32, i32* @y.38
  %5478 = sub i32 %5476, 1
  %5479 = mul i32 %5476, %5478
  %5480 = urem i32 %5479, 2
  %5481 = icmp eq i32 %5480, 0
  %5482 = icmp slt i32 %5477, 10
  %5483 = or i1 %5481, %5482
  br i1 %5483, label %originalBBpart21555, label %originalBB1553alteredBB

originalBBpart21555:                              ; preds = %originalBB1553
  br i1 %5475, label %5484, label %5503, !dbg !3101

5484:                                             ; preds = %originalBBpart21555
  %5485 = load i32, i32* @x.37
  %5486 = load i32, i32* @y.38
  %5487 = sub i32 %5485, 1
  %5488 = mul i32 %5485, %5487
  %5489 = urem i32 %5488, 2
  %5490 = icmp eq i32 %5489, 0
  %5491 = icmp slt i32 %5486, 10
  %5492 = or i1 %5490, %5491
  br i1 %5492, label %originalBB1557, label %originalBB1557alteredBB

originalBB1557:                                   ; preds = %5484, %originalBB1557alteredBB
  %5493 = load i32, i32* %23, align 4, !dbg !3102
  %5494 = icmp ne i32 %5493, 2, !dbg !3103
  %5495 = load i32, i32* @x.37
  %5496 = load i32, i32* @y.38
  %5497 = sub i32 %5495, 1
  %5498 = mul i32 %5495, %5497
  %5499 = urem i32 %5498, 2
  %5500 = icmp eq i32 %5499, 0
  %5501 = icmp slt i32 %5496, 10
  %5502 = or i1 %5500, %5501
  br i1 %5502, label %originalBBpart21559, label %originalBB1557alteredBB

originalBBpart21559:                              ; preds = %originalBB1557
  br i1 %5494, label %5522, label %5503, !dbg !3104

5503:                                             ; preds = %originalBBpart21559, %originalBBpart21555
  %5504 = load i32, i32* @x.37
  %5505 = load i32, i32* @y.38
  %5506 = sub i32 %5504, 1
  %5507 = mul i32 %5504, %5506
  %5508 = urem i32 %5507, 2
  %5509 = icmp eq i32 %5508, 0
  %5510 = icmp slt i32 %5505, 10
  %5511 = or i1 %5509, %5510
  br i1 %5511, label %originalBB1561, label %originalBB1561alteredBB

originalBB1561:                                   ; preds = %5503, %originalBB1561alteredBB
  %5512 = load i8, i8* %35, align 1, !dbg !3105
  %5513 = trunc i8 %5512 to i1, !dbg !3105
  %5514 = load i32, i32* @x.37
  %5515 = load i32, i32* @y.38
  %5516 = sub i32 %5514, 1
  %5517 = mul i32 %5514, %5516
  %5518 = urem i32 %5517, 2
  %5519 = icmp eq i32 %5518, 0
  %5520 = icmp slt i32 %5515, 10
  %5521 = or i1 %5519, %5520
  br i1 %5521, label %originalBBpart21563, label %originalBB1561alteredBB

originalBBpart21563:                              ; preds = %originalBB1561
  br i1 %5513, label %5522, label %5571, !dbg !3106

5522:                                             ; preds = %originalBBpart21563, %originalBBpart21559
  %5523 = load i32, i32* @x.37
  %5524 = load i32, i32* @y.38
  %5525 = sub i32 %5523, 1
  %5526 = mul i32 %5523, %5525
  %5527 = urem i32 %5526, 2
  %5528 = icmp eq i32 %5527, 0
  %5529 = icmp slt i32 %5524, 10
  %5530 = or i1 %5528, %5529
  br i1 %5530, label %originalBB1565, label %originalBB1565alteredBB

originalBB1565:                                   ; preds = %5522, %originalBB1565alteredBB
  %5531 = load i32*, i32** %25, align 8, !dbg !3107
  %5532 = icmp ne i32* %5531, null, !dbg !3107
  %5533 = load i32, i32* @x.37
  %5534 = load i32, i32* @y.38
  %5535 = sub i32 %5533, 1
  %5536 = mul i32 %5533, %5535
  %5537 = urem i32 %5536, 2
  %5538 = icmp eq i32 %5537, 0
  %5539 = icmp slt i32 %5534, 10
  %5540 = or i1 %5538, %5539
  br i1 %5540, label %originalBBpart21567, label %originalBB1565alteredBB

originalBBpart21567:                              ; preds = %originalBB1565
  br i1 %5532, label %5541, label %5571, !dbg !3108

5541:                                             ; preds = %originalBBpart21567
  %5542 = load i32, i32* @x.37
  %5543 = load i32, i32* @y.38
  %5544 = sub i32 %5542, 1
  %5545 = mul i32 %5542, %5544
  %5546 = urem i32 %5545, 2
  %5547 = icmp eq i32 %5546, 0
  %5548 = icmp slt i32 %5543, 10
  %5549 = or i1 %5547, %5548
  br i1 %5549, label %originalBB1569, label %originalBB1569alteredBB

originalBB1569:                                   ; preds = %5541, %originalBB1569alteredBB
  %5550 = load i32*, i32** %25, align 8, !dbg !3109
  %5551 = load i8, i8* %39, align 1, !dbg !3110
  %5552 = zext i8 %5551 to i64, !dbg !3110
  %5553 = udiv i64 %5552, 32, !dbg !3111
  %5554 = getelementptr inbounds i32, i32* %5550, i64 %5553, !dbg !3109
  %5555 = load i32, i32* %5554, align 4, !dbg !3109
  %5556 = load i8, i8* %39, align 1, !dbg !3112
  %5557 = zext i8 %5556 to i64, !dbg !3112
  %5558 = urem i64 %5557, 32, !dbg !3113
  %5559 = trunc i64 %5558 to i32, !dbg !3114
  %5560 = lshr i32 %5555, %5559, !dbg !3114
  %5561 = and i32 %5560, 1, !dbg !3115
  %5562 = icmp ne i32 %5561, 0, !dbg !3115
  %5563 = load i32, i32* @x.37
  %5564 = load i32, i32* @y.38
  %5565 = sub i32 %5563, 1
  %5566 = mul i32 %5563, %5565
  %5567 = urem i32 %5566, 2
  %5568 = icmp eq i32 %5567, 0
  %5569 = icmp slt i32 %5564, 10
  %5570 = or i1 %5568, %5569
  br i1 %5570, label %originalBBpart21593, label %originalBB1569alteredBB

originalBBpart21593:                              ; preds = %originalBB1569
  br i1 %5562, label %5607, label %5571, !dbg !3116

5571:                                             ; preds = %originalBBpart21593, %originalBBpart21567, %originalBBpart21563
  %5572 = load i32, i32* @x.37
  %5573 = load i32, i32* @y.38
  %5574 = sub i32 %5572, 1
  %5575 = mul i32 %5572, %5574
  %5576 = urem i32 %5575, 2
  %5577 = icmp eq i32 %5576, 0
  %5578 = icmp slt i32 %5573, 10
  %5579 = or i1 %5577, %5578
  br i1 %5579, label %originalBB1595, label %originalBB1595alteredBB

originalBB1595:                                   ; preds = %5571, %originalBB1595alteredBB
  %5580 = load i8, i8* %41, align 1, !dbg !3117
  %5581 = trunc i8 %5580 to i1, !dbg !3117
  %5582 = load i32, i32* @x.37
  %5583 = load i32, i32* @y.38
  %5584 = sub i32 %5582, 1
  %5585 = mul i32 %5582, %5584
  %5586 = urem i32 %5585, 2
  %5587 = icmp eq i32 %5586, 0
  %5588 = icmp slt i32 %5583, 10
  %5589 = or i1 %5587, %5588
  br i1 %5589, label %originalBBpart21597, label %originalBB1595alteredBB

originalBBpart21597:                              ; preds = %originalBB1595
  br i1 %5581, label %5607, label %5590, !dbg !3118

5590:                                             ; preds = %originalBBpart21597
  %5591 = load i32, i32* @x.37
  %5592 = load i32, i32* @y.38
  %5593 = sub i32 %5591, 1
  %5594 = mul i32 %5591, %5593
  %5595 = urem i32 %5594, 2
  %5596 = icmp eq i32 %5595, 0
  %5597 = icmp slt i32 %5592, 10
  %5598 = or i1 %5596, %5597
  br i1 %5598, label %originalBB1599, label %originalBB1599alteredBB

originalBB1599:                                   ; preds = %5590, %originalBB1599alteredBB
  %5599 = load i32, i32* @x.37
  %5600 = load i32, i32* @y.38
  %5601 = sub i32 %5599, 1
  %5602 = mul i32 %5599, %5601
  %5603 = urem i32 %5602, 2
  %5604 = icmp eq i32 %5603, 0
  %5605 = icmp slt i32 %5600, 10
  %5606 = or i1 %5604, %5605
  br i1 %5606, label %originalBBpart21601, label %originalBB1599alteredBB

originalBBpart21601:                              ; preds = %originalBB1599
  br label %6070, !dbg !3119

5607:                                             ; preds = %originalBBpart21597, %originalBBpart21593
  %5608 = load i32, i32* @x.37
  %5609 = load i32, i32* @y.38
  %5610 = sub i32 %5608, 1
  %5611 = mul i32 %5608, %5610
  %5612 = urem i32 %5611, 2
  %5613 = icmp eq i32 %5612, 0
  %5614 = icmp slt i32 %5609, 10
  %5615 = or i1 %5613, %5614
  br i1 %5615, label %originalBB1603, label %originalBB1603alteredBB

originalBB1603:                                   ; preds = %5607, %originalBB1603alteredBB
  %5616 = load i32, i32* @x.37
  %5617 = load i32, i32* @y.38
  %5618 = sub i32 %5616, 1
  %5619 = mul i32 %5616, %5618
  %5620 = urem i32 %5619, 2
  %5621 = icmp eq i32 %5620, 0
  %5622 = icmp slt i32 %5617, 10
  %5623 = or i1 %5621, %5622
  br i1 %5623, label %originalBBpart21605, label %originalBB1603alteredBB

originalBBpart21605:                              ; preds = %originalBB1603
  br label %5624, !dbg !3117

5624:                                             ; preds = %originalBBpart21605, %originalBBpart2778
  call void @llvm.dbg.label(metadata !3120), !dbg !3121
  %5625 = load i32, i32* @x.37
  %5626 = load i32, i32* @y.38
  %5627 = sub i32 %5625, 1
  %5628 = mul i32 %5625, %5627
  %5629 = urem i32 %5628, 2
  %5630 = icmp eq i32 %5629, 0
  %5631 = icmp slt i32 %5626, 10
  %5632 = or i1 %5630, %5631
  br i1 %5632, label %originalBB1607, label %originalBB1607alteredBB

originalBB1607:                                   ; preds = %5624, %originalBB1607alteredBB
  %5633 = load i32, i32* @x.37
  %5634 = load i32, i32* @y.38
  %5635 = sub i32 %5633, 1
  %5636 = mul i32 %5633, %5635
  %5637 = urem i32 %5636, 2
  %5638 = icmp eq i32 %5637, 0
  %5639 = icmp slt i32 %5634, 10
  %5640 = or i1 %5638, %5639
  br i1 %5640, label %originalBBpart21609, label %originalBB1607alteredBB

originalBBpart21609:                              ; preds = %originalBB1607
  br label %5641, !dbg !3122

5641:                                             ; preds = %originalBBpart21609
  %5642 = load i32, i32* @x.37
  %5643 = load i32, i32* @y.38
  %5644 = sub i32 %5642, 1
  %5645 = mul i32 %5642, %5644
  %5646 = urem i32 %5645, 2
  %5647 = icmp eq i32 %5646, 0
  %5648 = icmp slt i32 %5643, 10
  %5649 = or i1 %5647, %5648
  br i1 %5649, label %originalBB1611, label %originalBB1611alteredBB

originalBB1611:                                   ; preds = %5641, %originalBB1611alteredBB
  %5650 = load i8, i8* %35, align 1, !dbg !3123
  %5651 = trunc i8 %5650 to i1, !dbg !3123
  %5652 = load i32, i32* @x.37
  %5653 = load i32, i32* @y.38
  %5654 = sub i32 %5652, 1
  %5655 = mul i32 %5652, %5654
  %5656 = urem i32 %5655, 2
  %5657 = icmp eq i32 %5656, 0
  %5658 = icmp slt i32 %5653, 10
  %5659 = or i1 %5657, %5658
  br i1 %5659, label %originalBBpart21613, label %originalBB1611alteredBB

originalBBpart21613:                              ; preds = %originalBB1611
  br i1 %5651, label %5660, label %5677, !dbg !3126

5660:                                             ; preds = %originalBBpart21613
  %5661 = load i32, i32* @x.37
  %5662 = load i32, i32* @y.38
  %5663 = sub i32 %5661, 1
  %5664 = mul i32 %5661, %5663
  %5665 = urem i32 %5664, 2
  %5666 = icmp eq i32 %5665, 0
  %5667 = icmp slt i32 %5662, 10
  %5668 = or i1 %5666, %5667
  br i1 %5668, label %originalBB1615, label %originalBB1615alteredBB

originalBB1615:                                   ; preds = %5660, %originalBB1615alteredBB
  %5669 = load i32, i32* @x.37
  %5670 = load i32, i32* @y.38
  %5671 = sub i32 %5669, 1
  %5672 = mul i32 %5669, %5671
  %5673 = urem i32 %5672, 2
  %5674 = icmp eq i32 %5673, 0
  %5675 = icmp slt i32 %5670, 10
  %5676 = or i1 %5674, %5675
  br i1 %5676, label %originalBBpart21617, label %originalBB1615alteredBB

originalBBpart21617:                              ; preds = %originalBB1615
  br label %6990, !dbg !3123

5677:                                             ; preds = %originalBBpart21613
  %5678 = load i32, i32* @x.37
  %5679 = load i32, i32* @y.38
  %5680 = sub i32 %5678, 1
  %5681 = mul i32 %5678, %5680
  %5682 = urem i32 %5681, 2
  %5683 = icmp eq i32 %5682, 0
  %5684 = icmp slt i32 %5679, 10
  %5685 = or i1 %5683, %5684
  br i1 %5685, label %originalBB1619, label %originalBB1619alteredBB

originalBB1619:                                   ; preds = %5677, %originalBB1619alteredBB
  store i8 1, i8* %42, align 1, !dbg !3126
  %5686 = load i32, i32* %23, align 4, !dbg !3127
  %5687 = icmp eq i32 %5686, 2, !dbg !3127
  %5688 = load i32, i32* @x.37
  %5689 = load i32, i32* @y.38
  %5690 = sub i32 %5688, 1
  %5691 = mul i32 %5688, %5690
  %5692 = urem i32 %5691, 2
  %5693 = icmp eq i32 %5692, 0
  %5694 = icmp slt i32 %5689, 10
  %5695 = or i1 %5693, %5694
  br i1 %5695, label %originalBBpart21621, label %originalBB1619alteredBB

originalBBpart21621:                              ; preds = %originalBB1619
  br i1 %5687, label %5696, label %5960, !dbg !3127

5696:                                             ; preds = %originalBBpart21621
  %5697 = load i32, i32* @x.37
  %5698 = load i32, i32* @y.38
  %5699 = sub i32 %5697, 1
  %5700 = mul i32 %5697, %5699
  %5701 = urem i32 %5700, 2
  %5702 = icmp eq i32 %5701, 0
  %5703 = icmp slt i32 %5698, 10
  %5704 = or i1 %5702, %5703
  br i1 %5704, label %originalBB1623, label %originalBB1623alteredBB

originalBB1623:                                   ; preds = %5696, %originalBB1623alteredBB
  %5705 = load i8, i8* %36, align 1, !dbg !3127
  %5706 = trunc i8 %5705 to i1, !dbg !3127
  %5707 = load i32, i32* @x.37
  %5708 = load i32, i32* @y.38
  %5709 = sub i32 %5707, 1
  %5710 = mul i32 %5707, %5709
  %5711 = urem i32 %5710, 2
  %5712 = icmp eq i32 %5711, 0
  %5713 = icmp slt i32 %5708, 10
  %5714 = or i1 %5712, %5713
  br i1 %5714, label %originalBBpart21625, label %originalBB1623alteredBB

originalBBpart21625:                              ; preds = %originalBB1623
  br i1 %5706, label %5960, label %5715, !dbg !3126

5715:                                             ; preds = %originalBBpart21625
  %5716 = load i32, i32* @x.37
  %5717 = load i32, i32* @y.38
  %5718 = sub i32 %5716, 1
  %5719 = mul i32 %5716, %5718
  %5720 = urem i32 %5719, 2
  %5721 = icmp eq i32 %5720, 0
  %5722 = icmp slt i32 %5717, 10
  %5723 = or i1 %5721, %5722
  br i1 %5723, label %originalBB1627, label %originalBB1627alteredBB

originalBB1627:                                   ; preds = %5715, %originalBB1627alteredBB
  %5724 = load i32, i32* @x.37
  %5725 = load i32, i32* @y.38
  %5726 = sub i32 %5724, 1
  %5727 = mul i32 %5724, %5726
  %5728 = urem i32 %5727, 2
  %5729 = icmp eq i32 %5728, 0
  %5730 = icmp slt i32 %5725, 10
  %5731 = or i1 %5729, %5730
  br i1 %5731, label %originalBBpart21629, label %originalBB1627alteredBB

originalBBpart21629:                              ; preds = %originalBB1627
  br label %5732, !dbg !3129

5732:                                             ; preds = %originalBBpart21629
  %5733 = load i32, i32* @x.37
  %5734 = load i32, i32* @y.38
  %5735 = sub i32 %5733, 1
  %5736 = mul i32 %5733, %5735
  %5737 = urem i32 %5736, 2
  %5738 = icmp eq i32 %5737, 0
  %5739 = icmp slt i32 %5734, 10
  %5740 = or i1 %5738, %5739
  br i1 %5740, label %originalBB1631, label %originalBB1631alteredBB

originalBB1631:                                   ; preds = %5732, %originalBB1631alteredBB
  %5741 = load i64, i64* %29, align 8, !dbg !3131
  %5742 = load i64, i64* %20, align 8, !dbg !3131
  %5743 = icmp ult i64 %5741, %5742, !dbg !3131
  %5744 = load i32, i32* @x.37
  %5745 = load i32, i32* @y.38
  %5746 = sub i32 %5744, 1
  %5747 = mul i32 %5744, %5746
  %5748 = urem i32 %5747, 2
  %5749 = icmp eq i32 %5748, 0
  %5750 = icmp slt i32 %5745, 10
  %5751 = or i1 %5749, %5750
  br i1 %5751, label %originalBBpart21633, label %originalBB1631alteredBB

originalBBpart21633:                              ; preds = %originalBB1631
  br i1 %5743, label %5752, label %5772, !dbg !3134

5752:                                             ; preds = %originalBBpart21633
  %5753 = load i32, i32* @x.37
  %5754 = load i32, i32* @y.38
  %5755 = sub i32 %5753, 1
  %5756 = mul i32 %5753, %5755
  %5757 = urem i32 %5756, 2
  %5758 = icmp eq i32 %5757, 0
  %5759 = icmp slt i32 %5754, 10
  %5760 = or i1 %5758, %5759
  br i1 %5760, label %originalBB1635, label %originalBB1635alteredBB

originalBB1635:                                   ; preds = %5752, %originalBB1635alteredBB
  %5761 = load i8*, i8** %19, align 8, !dbg !3131
  %5762 = load i64, i64* %29, align 8, !dbg !3131
  %5763 = getelementptr inbounds i8, i8* %5761, i64 %5762, !dbg !3131
  store i8 39, i8* %5763, align 1, !dbg !3131
  %5764 = load i32, i32* @x.37
  %5765 = load i32, i32* @y.38
  %5766 = sub i32 %5764, 1
  %5767 = mul i32 %5764, %5766
  %5768 = urem i32 %5767, 2
  %5769 = icmp eq i32 %5768, 0
  %5770 = icmp slt i32 %5765, 10
  %5771 = or i1 %5769, %5770
  br i1 %5771, label %originalBBpart21637, label %originalBB1635alteredBB

originalBBpart21637:                              ; preds = %originalBB1635
  br label %5772, !dbg !3131

5772:                                             ; preds = %originalBBpart21637, %originalBBpart21633
  %5773 = load i32, i32* @x.37
  %5774 = load i32, i32* @y.38
  %5775 = sub i32 %5773, 1
  %5776 = mul i32 %5773, %5775
  %5777 = urem i32 %5776, 2
  %5778 = icmp eq i32 %5777, 0
  %5779 = icmp slt i32 %5774, 10
  %5780 = or i1 %5778, %5779
  br i1 %5780, label %originalBB1639, label %originalBB1639alteredBB

originalBB1639:                                   ; preds = %5772, %originalBB1639alteredBB
  %5781 = load i64, i64* %29, align 8, !dbg !3134
  %5782 = add i64 %5781, 1, !dbg !3134
  store i64 %5782, i64* %29, align 8, !dbg !3134
  %5783 = load i32, i32* @x.37
  %5784 = load i32, i32* @y.38
  %5785 = sub i32 %5783, 1
  %5786 = mul i32 %5783, %5785
  %5787 = urem i32 %5786, 2
  %5788 = icmp eq i32 %5787, 0
  %5789 = icmp slt i32 %5784, 10
  %5790 = or i1 %5788, %5789
  br i1 %5790, label %originalBBpart21652, label %originalBB1639alteredBB

originalBBpart21652:                              ; preds = %originalBB1639
  br label %5791, !dbg !3134

5791:                                             ; preds = %originalBBpart21652
  %5792 = load i32, i32* @x.37
  %5793 = load i32, i32* @y.38
  %5794 = sub i32 %5792, 1
  %5795 = mul i32 %5792, %5794
  %5796 = urem i32 %5795, 2
  %5797 = icmp eq i32 %5796, 0
  %5798 = icmp slt i32 %5793, 10
  %5799 = or i1 %5797, %5798
  br i1 %5799, label %originalBB1654, label %originalBB1654alteredBB

originalBB1654:                                   ; preds = %5791, %originalBB1654alteredBB
  %5800 = load i32, i32* @x.37
  %5801 = load i32, i32* @y.38
  %5802 = sub i32 %5800, 1
  %5803 = mul i32 %5800, %5802
  %5804 = urem i32 %5803, 2
  %5805 = icmp eq i32 %5804, 0
  %5806 = icmp slt i32 %5801, 10
  %5807 = or i1 %5805, %5806
  br i1 %5807, label %originalBBpart21656, label %originalBB1654alteredBB

originalBBpart21656:                              ; preds = %originalBB1654
  br label %5808, !dbg !3129

5808:                                             ; preds = %originalBBpart21656
  %5809 = load i32, i32* @x.37
  %5810 = load i32, i32* @y.38
  %5811 = sub i32 %5809, 1
  %5812 = mul i32 %5809, %5811
  %5813 = urem i32 %5812, 2
  %5814 = icmp eq i32 %5813, 0
  %5815 = icmp slt i32 %5810, 10
  %5816 = or i1 %5814, %5815
  br i1 %5816, label %originalBB1658, label %originalBB1658alteredBB

originalBB1658:                                   ; preds = %5808, %originalBB1658alteredBB
  %5817 = load i64, i64* %29, align 8, !dbg !3135
  %5818 = load i64, i64* %20, align 8, !dbg !3135
  %5819 = icmp ult i64 %5817, %5818, !dbg !3135
  %5820 = load i32, i32* @x.37
  %5821 = load i32, i32* @y.38
  %5822 = sub i32 %5820, 1
  %5823 = mul i32 %5820, %5822
  %5824 = urem i32 %5823, 2
  %5825 = icmp eq i32 %5824, 0
  %5826 = icmp slt i32 %5821, 10
  %5827 = or i1 %5825, %5826
  br i1 %5827, label %originalBBpart21660, label %originalBB1658alteredBB

originalBBpart21660:                              ; preds = %originalBB1658
  br i1 %5819, label %5828, label %5848, !dbg !3138

5828:                                             ; preds = %originalBBpart21660
  %5829 = load i32, i32* @x.37
  %5830 = load i32, i32* @y.38
  %5831 = sub i32 %5829, 1
  %5832 = mul i32 %5829, %5831
  %5833 = urem i32 %5832, 2
  %5834 = icmp eq i32 %5833, 0
  %5835 = icmp slt i32 %5830, 10
  %5836 = or i1 %5834, %5835
  br i1 %5836, label %originalBB1662, label %originalBB1662alteredBB

originalBB1662:                                   ; preds = %5828, %originalBB1662alteredBB
  %5837 = load i8*, i8** %19, align 8, !dbg !3135
  %5838 = load i64, i64* %29, align 8, !dbg !3135
  %5839 = getelementptr inbounds i8, i8* %5837, i64 %5838, !dbg !3135
  store i8 36, i8* %5839, align 1, !dbg !3135
  %5840 = load i32, i32* @x.37
  %5841 = load i32, i32* @y.38
  %5842 = sub i32 %5840, 1
  %5843 = mul i32 %5840, %5842
  %5844 = urem i32 %5843, 2
  %5845 = icmp eq i32 %5844, 0
  %5846 = icmp slt i32 %5841, 10
  %5847 = or i1 %5845, %5846
  br i1 %5847, label %originalBBpart21664, label %originalBB1662alteredBB

originalBBpart21664:                              ; preds = %originalBB1662
  br label %5848, !dbg !3135

5848:                                             ; preds = %originalBBpart21664, %originalBBpart21660
  %5849 = load i32, i32* @x.37
  %5850 = load i32, i32* @y.38
  %5851 = sub i32 %5849, 1
  %5852 = mul i32 %5849, %5851
  %5853 = urem i32 %5852, 2
  %5854 = icmp eq i32 %5853, 0
  %5855 = icmp slt i32 %5850, 10
  %5856 = or i1 %5854, %5855
  br i1 %5856, label %originalBB1666, label %originalBB1666alteredBB

originalBB1666:                                   ; preds = %5848, %originalBB1666alteredBB
  %5857 = load i64, i64* %29, align 8, !dbg !3138
  %5858 = add i64 %5857, 1, !dbg !3138
  store i64 %5858, i64* %29, align 8, !dbg !3138
  %5859 = load i32, i32* @x.37
  %5860 = load i32, i32* @y.38
  %5861 = sub i32 %5859, 1
  %5862 = mul i32 %5859, %5861
  %5863 = urem i32 %5862, 2
  %5864 = icmp eq i32 %5863, 0
  %5865 = icmp slt i32 %5860, 10
  %5866 = or i1 %5864, %5865
  br i1 %5866, label %originalBBpart21677, label %originalBB1666alteredBB

originalBBpart21677:                              ; preds = %originalBB1666
  br label %5867, !dbg !3138

5867:                                             ; preds = %originalBBpart21677
  %5868 = load i32, i32* @x.37
  %5869 = load i32, i32* @y.38
  %5870 = sub i32 %5868, 1
  %5871 = mul i32 %5868, %5870
  %5872 = urem i32 %5871, 2
  %5873 = icmp eq i32 %5872, 0
  %5874 = icmp slt i32 %5869, 10
  %5875 = or i1 %5873, %5874
  br i1 %5875, label %originalBB1679, label %originalBB1679alteredBB

originalBB1679:                                   ; preds = %5867, %originalBB1679alteredBB
  %5876 = load i32, i32* @x.37
  %5877 = load i32, i32* @y.38
  %5878 = sub i32 %5876, 1
  %5879 = mul i32 %5876, %5878
  %5880 = urem i32 %5879, 2
  %5881 = icmp eq i32 %5880, 0
  %5882 = icmp slt i32 %5877, 10
  %5883 = or i1 %5881, %5882
  br i1 %5883, label %originalBBpart21681, label %originalBB1679alteredBB

originalBBpart21681:                              ; preds = %originalBB1679
  br label %5884, !dbg !3129

5884:                                             ; preds = %originalBBpart21681
  %5885 = load i32, i32* @x.37
  %5886 = load i32, i32* @y.38
  %5887 = sub i32 %5885, 1
  %5888 = mul i32 %5885, %5887
  %5889 = urem i32 %5888, 2
  %5890 = icmp eq i32 %5889, 0
  %5891 = icmp slt i32 %5886, 10
  %5892 = or i1 %5890, %5891
  br i1 %5892, label %originalBB1683, label %originalBB1683alteredBB

originalBB1683:                                   ; preds = %5884, %originalBB1683alteredBB
  %5893 = load i64, i64* %29, align 8, !dbg !3139
  %5894 = load i64, i64* %20, align 8, !dbg !3139
  %5895 = icmp ult i64 %5893, %5894, !dbg !3139
  %5896 = load i32, i32* @x.37
  %5897 = load i32, i32* @y.38
  %5898 = sub i32 %5896, 1
  %5899 = mul i32 %5896, %5898
  %5900 = urem i32 %5899, 2
  %5901 = icmp eq i32 %5900, 0
  %5902 = icmp slt i32 %5897, 10
  %5903 = or i1 %5901, %5902
  br i1 %5903, label %originalBBpart21685, label %originalBB1683alteredBB

originalBBpart21685:                              ; preds = %originalBB1683
  br i1 %5895, label %5904, label %5924, !dbg !3142

5904:                                             ; preds = %originalBBpart21685
  %5905 = load i32, i32* @x.37
  %5906 = load i32, i32* @y.38
  %5907 = sub i32 %5905, 1
  %5908 = mul i32 %5905, %5907
  %5909 = urem i32 %5908, 2
  %5910 = icmp eq i32 %5909, 0
  %5911 = icmp slt i32 %5906, 10
  %5912 = or i1 %5910, %5911
  br i1 %5912, label %originalBB1687, label %originalBB1687alteredBB

originalBB1687:                                   ; preds = %5904, %originalBB1687alteredBB
  %5913 = load i8*, i8** %19, align 8, !dbg !3139
  %5914 = load i64, i64* %29, align 8, !dbg !3139
  %5915 = getelementptr inbounds i8, i8* %5913, i64 %5914, !dbg !3139
  store i8 39, i8* %5915, align 1, !dbg !3139
  %5916 = load i32, i32* @x.37
  %5917 = load i32, i32* @y.38
  %5918 = sub i32 %5916, 1
  %5919 = mul i32 %5916, %5918
  %5920 = urem i32 %5919, 2
  %5921 = icmp eq i32 %5920, 0
  %5922 = icmp slt i32 %5917, 10
  %5923 = or i1 %5921, %5922
  br i1 %5923, label %originalBBpart21689, label %originalBB1687alteredBB

originalBBpart21689:                              ; preds = %originalBB1687
  br label %5924, !dbg !3139

5924:                                             ; preds = %originalBBpart21689, %originalBBpart21685
  %5925 = load i32, i32* @x.37
  %5926 = load i32, i32* @y.38
  %5927 = sub i32 %5925, 1
  %5928 = mul i32 %5925, %5927
  %5929 = urem i32 %5928, 2
  %5930 = icmp eq i32 %5929, 0
  %5931 = icmp slt i32 %5926, 10
  %5932 = or i1 %5930, %5931
  br i1 %5932, label %originalBB1691, label %originalBB1691alteredBB

originalBB1691:                                   ; preds = %5924, %originalBB1691alteredBB
  %5933 = load i64, i64* %29, align 8, !dbg !3142
  %5934 = add i64 %5933, 1, !dbg !3142
  store i64 %5934, i64* %29, align 8, !dbg !3142
  %5935 = load i32, i32* @x.37
  %5936 = load i32, i32* @y.38
  %5937 = sub i32 %5935, 1
  %5938 = mul i32 %5935, %5937
  %5939 = urem i32 %5938, 2
  %5940 = icmp eq i32 %5939, 0
  %5941 = icmp slt i32 %5936, 10
  %5942 = or i1 %5940, %5941
  br i1 %5942, label %originalBBpart21698, label %originalBB1691alteredBB

originalBBpart21698:                              ; preds = %originalBB1691
  br label %5943, !dbg !3142

5943:                                             ; preds = %originalBBpart21698
  %5944 = load i32, i32* @x.37
  %5945 = load i32, i32* @y.38
  %5946 = sub i32 %5944, 1
  %5947 = mul i32 %5944, %5946
  %5948 = urem i32 %5947, 2
  %5949 = icmp eq i32 %5948, 0
  %5950 = icmp slt i32 %5945, 10
  %5951 = or i1 %5949, %5950
  br i1 %5951, label %originalBB1700, label %originalBB1700alteredBB

originalBB1700:                                   ; preds = %5943, %originalBB1700alteredBB
  store i8 1, i8* %36, align 1, !dbg !3129
  %5952 = load i32, i32* @x.37
  %5953 = load i32, i32* @y.38
  %5954 = sub i32 %5952, 1
  %5955 = mul i32 %5952, %5954
  %5956 = urem i32 %5955, 2
  %5957 = icmp eq i32 %5956, 0
  %5958 = icmp slt i32 %5953, 10
  %5959 = or i1 %5957, %5958
  br i1 %5959, label %originalBBpart21702, label %originalBB1700alteredBB

originalBBpart21702:                              ; preds = %originalBB1700
  br label %5960, !dbg !3129

5960:                                             ; preds = %originalBBpart21702, %originalBBpart21625, %originalBBpart21621
  %5961 = load i32, i32* @x.37
  %5962 = load i32, i32* @y.38
  %5963 = sub i32 %5961, 1
  %5964 = mul i32 %5961, %5963
  %5965 = urem i32 %5964, 2
  %5966 = icmp eq i32 %5965, 0
  %5967 = icmp slt i32 %5962, 10
  %5968 = or i1 %5966, %5967
  br i1 %5968, label %originalBB1704, label %originalBB1704alteredBB

originalBB1704:                                   ; preds = %5960, %originalBB1704alteredBB
  %5969 = load i32, i32* @x.37
  %5970 = load i32, i32* @y.38
  %5971 = sub i32 %5969, 1
  %5972 = mul i32 %5969, %5971
  %5973 = urem i32 %5972, 2
  %5974 = icmp eq i32 %5973, 0
  %5975 = icmp slt i32 %5970, 10
  %5976 = or i1 %5974, %5975
  br i1 %5976, label %originalBBpart21706, label %originalBB1704alteredBB

originalBBpart21706:                              ; preds = %originalBB1704
  br label %5977, !dbg !3126

5977:                                             ; preds = %originalBBpart21706
  %5978 = load i32, i32* @x.37
  %5979 = load i32, i32* @y.38
  %5980 = sub i32 %5978, 1
  %5981 = mul i32 %5978, %5980
  %5982 = urem i32 %5981, 2
  %5983 = icmp eq i32 %5982, 0
  %5984 = icmp slt i32 %5979, 10
  %5985 = or i1 %5983, %5984
  br i1 %5985, label %originalBB1708, label %originalBB1708alteredBB

originalBB1708:                                   ; preds = %5977, %originalBB1708alteredBB
  %5986 = load i64, i64* %29, align 8, !dbg !3143
  %5987 = load i64, i64* %20, align 8, !dbg !3143
  %5988 = icmp ult i64 %5986, %5987, !dbg !3143
  %5989 = load i32, i32* @x.37
  %5990 = load i32, i32* @y.38
  %5991 = sub i32 %5989, 1
  %5992 = mul i32 %5989, %5991
  %5993 = urem i32 %5992, 2
  %5994 = icmp eq i32 %5993, 0
  %5995 = icmp slt i32 %5990, 10
  %5996 = or i1 %5994, %5995
  br i1 %5996, label %originalBBpart21710, label %originalBB1708alteredBB

originalBBpart21710:                              ; preds = %originalBB1708
  br i1 %5988, label %5997, label %6017, !dbg !3146

5997:                                             ; preds = %originalBBpart21710
  %5998 = load i32, i32* @x.37
  %5999 = load i32, i32* @y.38
  %6000 = sub i32 %5998, 1
  %6001 = mul i32 %5998, %6000
  %6002 = urem i32 %6001, 2
  %6003 = icmp eq i32 %6002, 0
  %6004 = icmp slt i32 %5999, 10
  %6005 = or i1 %6003, %6004
  br i1 %6005, label %originalBB1712, label %originalBB1712alteredBB

originalBB1712:                                   ; preds = %5997, %originalBB1712alteredBB
  %6006 = load i8*, i8** %19, align 8, !dbg !3143
  %6007 = load i64, i64* %29, align 8, !dbg !3143
  %6008 = getelementptr inbounds i8, i8* %6006, i64 %6007, !dbg !3143
  store i8 92, i8* %6008, align 1, !dbg !3143
  %6009 = load i32, i32* @x.37
  %6010 = load i32, i32* @y.38
  %6011 = sub i32 %6009, 1
  %6012 = mul i32 %6009, %6011
  %6013 = urem i32 %6012, 2
  %6014 = icmp eq i32 %6013, 0
  %6015 = icmp slt i32 %6010, 10
  %6016 = or i1 %6014, %6015
  br i1 %6016, label %originalBBpart21714, label %originalBB1712alteredBB

originalBBpart21714:                              ; preds = %originalBB1712
  br label %6017, !dbg !3143

6017:                                             ; preds = %originalBBpart21714, %originalBBpart21710
  %6018 = load i32, i32* @x.37
  %6019 = load i32, i32* @y.38
  %6020 = sub i32 %6018, 1
  %6021 = mul i32 %6018, %6020
  %6022 = urem i32 %6021, 2
  %6023 = icmp eq i32 %6022, 0
  %6024 = icmp slt i32 %6019, 10
  %6025 = or i1 %6023, %6024
  br i1 %6025, label %originalBB1716, label %originalBB1716alteredBB

originalBB1716:                                   ; preds = %6017, %originalBB1716alteredBB
  %6026 = load i64, i64* %29, align 8, !dbg !3146
  %6027 = add i64 %6026, 1, !dbg !3146
  store i64 %6027, i64* %29, align 8, !dbg !3146
  %6028 = load i32, i32* @x.37
  %6029 = load i32, i32* @y.38
  %6030 = sub i32 %6028, 1
  %6031 = mul i32 %6028, %6030
  %6032 = urem i32 %6031, 2
  %6033 = icmp eq i32 %6032, 0
  %6034 = icmp slt i32 %6029, 10
  %6035 = or i1 %6033, %6034
  br i1 %6035, label %originalBBpart21729, label %originalBB1716alteredBB

originalBBpart21729:                              ; preds = %originalBB1716
  br label %6036, !dbg !3146

6036:                                             ; preds = %originalBBpart21729
  %6037 = load i32, i32* @x.37
  %6038 = load i32, i32* @y.38
  %6039 = sub i32 %6037, 1
  %6040 = mul i32 %6037, %6039
  %6041 = urem i32 %6040, 2
  %6042 = icmp eq i32 %6041, 0
  %6043 = icmp slt i32 %6038, 10
  %6044 = or i1 %6042, %6043
  br i1 %6044, label %originalBB1731, label %originalBB1731alteredBB

originalBB1731:                                   ; preds = %6036, %originalBB1731alteredBB
  %6045 = load i32, i32* @x.37
  %6046 = load i32, i32* @y.38
  %6047 = sub i32 %6045, 1
  %6048 = mul i32 %6045, %6047
  %6049 = urem i32 %6048, 2
  %6050 = icmp eq i32 %6049, 0
  %6051 = icmp slt i32 %6046, 10
  %6052 = or i1 %6050, %6051
  br i1 %6052, label %originalBBpart21733, label %originalBB1731alteredBB

originalBBpart21733:                              ; preds = %originalBB1731
  br label %6053, !dbg !3126

6053:                                             ; preds = %originalBBpart21733
  %6054 = load i32, i32* @x.37
  %6055 = load i32, i32* @y.38
  %6056 = sub i32 %6054, 1
  %6057 = mul i32 %6054, %6056
  %6058 = urem i32 %6057, 2
  %6059 = icmp eq i32 %6058, 0
  %6060 = icmp slt i32 %6055, 10
  %6061 = or i1 %6059, %6060
  br i1 %6061, label %originalBB1735, label %originalBB1735alteredBB

originalBB1735:                                   ; preds = %6053, %originalBB1735alteredBB
  %6062 = load i32, i32* @x.37
  %6063 = load i32, i32* @y.38
  %6064 = sub i32 %6062, 1
  %6065 = mul i32 %6062, %6064
  %6066 = urem i32 %6065, 2
  %6067 = icmp eq i32 %6066, 0
  %6068 = icmp slt i32 %6063, 10
  %6069 = or i1 %6067, %6068
  br i1 %6069, label %originalBBpart21737, label %originalBB1735alteredBB

originalBBpart21737:                              ; preds = %originalBB1735
  br label %6070, !dbg !3126

6070:                                             ; preds = %originalBBpart21737, %originalBBpart21601, %originalBBpart21547, %originalBBpart2750, %originalBBpart2734
  call void @llvm.dbg.label(metadata !3147), !dbg !3148
  %6071 = load i32, i32* @x.37
  %6072 = load i32, i32* @y.38
  %6073 = sub i32 %6071, 1
  %6074 = mul i32 %6071, %6073
  %6075 = urem i32 %6074, 2
  %6076 = icmp eq i32 %6075, 0
  %6077 = icmp slt i32 %6072, 10
  %6078 = or i1 %6076, %6077
  br i1 %6078, label %originalBB1739, label %originalBB1739alteredBB

originalBB1739:                                   ; preds = %6070, %originalBB1739alteredBB
  %6079 = load i32, i32* @x.37
  %6080 = load i32, i32* @y.38
  %6081 = sub i32 %6079, 1
  %6082 = mul i32 %6079, %6081
  %6083 = urem i32 %6082, 2
  %6084 = icmp eq i32 %6083, 0
  %6085 = icmp slt i32 %6080, 10
  %6086 = or i1 %6084, %6085
  br i1 %6086, label %originalBBpart21741, label %originalBB1739alteredBB

originalBBpart21741:                              ; preds = %originalBB1739
  br label %6087, !dbg !3149

6087:                                             ; preds = %originalBBpart21741
  %6088 = load i32, i32* @x.37
  %6089 = load i32, i32* @y.38
  %6090 = sub i32 %6088, 1
  %6091 = mul i32 %6088, %6090
  %6092 = urem i32 %6091, 2
  %6093 = icmp eq i32 %6092, 0
  %6094 = icmp slt i32 %6089, 10
  %6095 = or i1 %6093, %6094
  br i1 %6095, label %originalBB1743, label %originalBB1743alteredBB

originalBB1743:                                   ; preds = %6087, %originalBB1743alteredBB
  %6096 = load i8, i8* %36, align 1, !dbg !3150
  %6097 = trunc i8 %6096 to i1, !dbg !3150
  %6098 = load i32, i32* @x.37
  %6099 = load i32, i32* @y.38
  %6100 = sub i32 %6098, 1
  %6101 = mul i32 %6098, %6100
  %6102 = urem i32 %6101, 2
  %6103 = icmp eq i32 %6102, 0
  %6104 = icmp slt i32 %6099, 10
  %6105 = or i1 %6103, %6104
  br i1 %6105, label %originalBBpart21745, label %originalBB1743alteredBB

originalBBpart21745:                              ; preds = %originalBB1743
  br i1 %6097, label %6106, label %6294, !dbg !3150

6106:                                             ; preds = %originalBBpart21745
  %6107 = load i32, i32* @x.37
  %6108 = load i32, i32* @y.38
  %6109 = sub i32 %6107, 1
  %6110 = mul i32 %6107, %6109
  %6111 = urem i32 %6110, 2
  %6112 = icmp eq i32 %6111, 0
  %6113 = icmp slt i32 %6108, 10
  %6114 = or i1 %6112, %6113
  br i1 %6114, label %originalBB1747, label %originalBB1747alteredBB

originalBB1747:                                   ; preds = %6106, %originalBB1747alteredBB
  %6115 = load i8, i8* %42, align 1, !dbg !3150
  %6116 = trunc i8 %6115 to i1, !dbg !3150
  %6117 = load i32, i32* @x.37
  %6118 = load i32, i32* @y.38
  %6119 = sub i32 %6117, 1
  %6120 = mul i32 %6117, %6119
  %6121 = urem i32 %6120, 2
  %6122 = icmp eq i32 %6121, 0
  %6123 = icmp slt i32 %6118, 10
  %6124 = or i1 %6122, %6123
  br i1 %6124, label %originalBBpart21749, label %originalBB1747alteredBB

originalBBpart21749:                              ; preds = %originalBB1747
  br i1 %6116, label %6294, label %6125, !dbg !3153

6125:                                             ; preds = %originalBBpart21749
  %6126 = load i32, i32* @x.37
  %6127 = load i32, i32* @y.38
  %6128 = sub i32 %6126, 1
  %6129 = mul i32 %6126, %6128
  %6130 = urem i32 %6129, 2
  %6131 = icmp eq i32 %6130, 0
  %6132 = icmp slt i32 %6127, 10
  %6133 = or i1 %6131, %6132
  br i1 %6133, label %originalBB1751, label %originalBB1751alteredBB

originalBB1751:                                   ; preds = %6125, %originalBB1751alteredBB
  %6134 = load i32, i32* @x.37
  %6135 = load i32, i32* @y.38
  %6136 = sub i32 %6134, 1
  %6137 = mul i32 %6134, %6136
  %6138 = urem i32 %6137, 2
  %6139 = icmp eq i32 %6138, 0
  %6140 = icmp slt i32 %6135, 10
  %6141 = or i1 %6139, %6140
  br i1 %6141, label %originalBBpart21753, label %originalBB1751alteredBB

originalBBpart21753:                              ; preds = %originalBB1751
  br label %6142, !dbg !3154

6142:                                             ; preds = %originalBBpart21753
  %6143 = load i32, i32* @x.37
  %6144 = load i32, i32* @y.38
  %6145 = sub i32 %6143, 1
  %6146 = mul i32 %6143, %6145
  %6147 = urem i32 %6146, 2
  %6148 = icmp eq i32 %6147, 0
  %6149 = icmp slt i32 %6144, 10
  %6150 = or i1 %6148, %6149
  br i1 %6150, label %originalBB1755, label %originalBB1755alteredBB

originalBB1755:                                   ; preds = %6142, %originalBB1755alteredBB
  %6151 = load i64, i64* %29, align 8, !dbg !3156
  %6152 = load i64, i64* %20, align 8, !dbg !3156
  %6153 = icmp ult i64 %6151, %6152, !dbg !3156
  %6154 = load i32, i32* @x.37
  %6155 = load i32, i32* @y.38
  %6156 = sub i32 %6154, 1
  %6157 = mul i32 %6154, %6156
  %6158 = urem i32 %6157, 2
  %6159 = icmp eq i32 %6158, 0
  %6160 = icmp slt i32 %6155, 10
  %6161 = or i1 %6159, %6160
  br i1 %6161, label %originalBBpart21757, label %originalBB1755alteredBB

originalBBpart21757:                              ; preds = %originalBB1755
  br i1 %6153, label %6162, label %6182, !dbg !3159

6162:                                             ; preds = %originalBBpart21757
  %6163 = load i32, i32* @x.37
  %6164 = load i32, i32* @y.38
  %6165 = sub i32 %6163, 1
  %6166 = mul i32 %6163, %6165
  %6167 = urem i32 %6166, 2
  %6168 = icmp eq i32 %6167, 0
  %6169 = icmp slt i32 %6164, 10
  %6170 = or i1 %6168, %6169
  br i1 %6170, label %originalBB1759, label %originalBB1759alteredBB

originalBB1759:                                   ; preds = %6162, %originalBB1759alteredBB
  %6171 = load i8*, i8** %19, align 8, !dbg !3156
  %6172 = load i64, i64* %29, align 8, !dbg !3156
  %6173 = getelementptr inbounds i8, i8* %6171, i64 %6172, !dbg !3156
  store i8 39, i8* %6173, align 1, !dbg !3156
  %6174 = load i32, i32* @x.37
  %6175 = load i32, i32* @y.38
  %6176 = sub i32 %6174, 1
  %6177 = mul i32 %6174, %6176
  %6178 = urem i32 %6177, 2
  %6179 = icmp eq i32 %6178, 0
  %6180 = icmp slt i32 %6175, 10
  %6181 = or i1 %6179, %6180
  br i1 %6181, label %originalBBpart21761, label %originalBB1759alteredBB

originalBBpart21761:                              ; preds = %originalBB1759
  br label %6182, !dbg !3156

6182:                                             ; preds = %originalBBpart21761, %originalBBpart21757
  %6183 = load i32, i32* @x.37
  %6184 = load i32, i32* @y.38
  %6185 = sub i32 %6183, 1
  %6186 = mul i32 %6183, %6185
  %6187 = urem i32 %6186, 2
  %6188 = icmp eq i32 %6187, 0
  %6189 = icmp slt i32 %6184, 10
  %6190 = or i1 %6188, %6189
  br i1 %6190, label %originalBB1763, label %originalBB1763alteredBB

originalBB1763:                                   ; preds = %6182, %originalBB1763alteredBB
  %6191 = load i64, i64* %29, align 8, !dbg !3159
  %6192 = add i64 %6191, 1, !dbg !3159
  store i64 %6192, i64* %29, align 8, !dbg !3159
  %6193 = load i32, i32* @x.37
  %6194 = load i32, i32* @y.38
  %6195 = sub i32 %6193, 1
  %6196 = mul i32 %6193, %6195
  %6197 = urem i32 %6196, 2
  %6198 = icmp eq i32 %6197, 0
  %6199 = icmp slt i32 %6194, 10
  %6200 = or i1 %6198, %6199
  br i1 %6200, label %originalBBpart21772, label %originalBB1763alteredBB

originalBBpart21772:                              ; preds = %originalBB1763
  br label %6201, !dbg !3159

6201:                                             ; preds = %originalBBpart21772
  %6202 = load i32, i32* @x.37
  %6203 = load i32, i32* @y.38
  %6204 = sub i32 %6202, 1
  %6205 = mul i32 %6202, %6204
  %6206 = urem i32 %6205, 2
  %6207 = icmp eq i32 %6206, 0
  %6208 = icmp slt i32 %6203, 10
  %6209 = or i1 %6207, %6208
  br i1 %6209, label %originalBB1774, label %originalBB1774alteredBB

originalBB1774:                                   ; preds = %6201, %originalBB1774alteredBB
  %6210 = load i32, i32* @x.37
  %6211 = load i32, i32* @y.38
  %6212 = sub i32 %6210, 1
  %6213 = mul i32 %6210, %6212
  %6214 = urem i32 %6213, 2
  %6215 = icmp eq i32 %6214, 0
  %6216 = icmp slt i32 %6211, 10
  %6217 = or i1 %6215, %6216
  br i1 %6217, label %originalBBpart21776, label %originalBB1774alteredBB

originalBBpart21776:                              ; preds = %originalBB1774
  br label %6218, !dbg !3154

6218:                                             ; preds = %originalBBpart21776
  %6219 = load i32, i32* @x.37
  %6220 = load i32, i32* @y.38
  %6221 = sub i32 %6219, 1
  %6222 = mul i32 %6219, %6221
  %6223 = urem i32 %6222, 2
  %6224 = icmp eq i32 %6223, 0
  %6225 = icmp slt i32 %6220, 10
  %6226 = or i1 %6224, %6225
  br i1 %6226, label %originalBB1778, label %originalBB1778alteredBB

originalBB1778:                                   ; preds = %6218, %originalBB1778alteredBB
  %6227 = load i64, i64* %29, align 8, !dbg !3160
  %6228 = load i64, i64* %20, align 8, !dbg !3160
  %6229 = icmp ult i64 %6227, %6228, !dbg !3160
  %6230 = load i32, i32* @x.37
  %6231 = load i32, i32* @y.38
  %6232 = sub i32 %6230, 1
  %6233 = mul i32 %6230, %6232
  %6234 = urem i32 %6233, 2
  %6235 = icmp eq i32 %6234, 0
  %6236 = icmp slt i32 %6231, 10
  %6237 = or i1 %6235, %6236
  br i1 %6237, label %originalBBpart21780, label %originalBB1778alteredBB

originalBBpart21780:                              ; preds = %originalBB1778
  br i1 %6229, label %6238, label %6258, !dbg !3163

6238:                                             ; preds = %originalBBpart21780
  %6239 = load i32, i32* @x.37
  %6240 = load i32, i32* @y.38
  %6241 = sub i32 %6239, 1
  %6242 = mul i32 %6239, %6241
  %6243 = urem i32 %6242, 2
  %6244 = icmp eq i32 %6243, 0
  %6245 = icmp slt i32 %6240, 10
  %6246 = or i1 %6244, %6245
  br i1 %6246, label %originalBB1782, label %originalBB1782alteredBB

originalBB1782:                                   ; preds = %6238, %originalBB1782alteredBB
  %6247 = load i8*, i8** %19, align 8, !dbg !3160
  %6248 = load i64, i64* %29, align 8, !dbg !3160
  %6249 = getelementptr inbounds i8, i8* %6247, i64 %6248, !dbg !3160
  store i8 39, i8* %6249, align 1, !dbg !3160
  %6250 = load i32, i32* @x.37
  %6251 = load i32, i32* @y.38
  %6252 = sub i32 %6250, 1
  %6253 = mul i32 %6250, %6252
  %6254 = urem i32 %6253, 2
  %6255 = icmp eq i32 %6254, 0
  %6256 = icmp slt i32 %6251, 10
  %6257 = or i1 %6255, %6256
  br i1 %6257, label %originalBBpart21784, label %originalBB1782alteredBB

originalBBpart21784:                              ; preds = %originalBB1782
  br label %6258, !dbg !3160

6258:                                             ; preds = %originalBBpart21784, %originalBBpart21780
  %6259 = load i32, i32* @x.37
  %6260 = load i32, i32* @y.38
  %6261 = sub i32 %6259, 1
  %6262 = mul i32 %6259, %6261
  %6263 = urem i32 %6262, 2
  %6264 = icmp eq i32 %6263, 0
  %6265 = icmp slt i32 %6260, 10
  %6266 = or i1 %6264, %6265
  br i1 %6266, label %originalBB1786, label %originalBB1786alteredBB

originalBB1786:                                   ; preds = %6258, %originalBB1786alteredBB
  %6267 = load i64, i64* %29, align 8, !dbg !3163
  %6268 = add i64 %6267, 1, !dbg !3163
  store i64 %6268, i64* %29, align 8, !dbg !3163
  %6269 = load i32, i32* @x.37
  %6270 = load i32, i32* @y.38
  %6271 = sub i32 %6269, 1
  %6272 = mul i32 %6269, %6271
  %6273 = urem i32 %6272, 2
  %6274 = icmp eq i32 %6273, 0
  %6275 = icmp slt i32 %6270, 10
  %6276 = or i1 %6274, %6275
  br i1 %6276, label %originalBBpart21797, label %originalBB1786alteredBB

originalBBpart21797:                              ; preds = %originalBB1786
  br label %6277, !dbg !3163

6277:                                             ; preds = %originalBBpart21797
  %6278 = load i32, i32* @x.37
  %6279 = load i32, i32* @y.38
  %6280 = sub i32 %6278, 1
  %6281 = mul i32 %6278, %6280
  %6282 = urem i32 %6281, 2
  %6283 = icmp eq i32 %6282, 0
  %6284 = icmp slt i32 %6279, 10
  %6285 = or i1 %6283, %6284
  br i1 %6285, label %originalBB1799, label %originalBB1799alteredBB

originalBB1799:                                   ; preds = %6277, %originalBB1799alteredBB
  store i8 0, i8* %36, align 1, !dbg !3154
  %6286 = load i32, i32* @x.37
  %6287 = load i32, i32* @y.38
  %6288 = sub i32 %6286, 1
  %6289 = mul i32 %6286, %6288
  %6290 = urem i32 %6289, 2
  %6291 = icmp eq i32 %6290, 0
  %6292 = icmp slt i32 %6287, 10
  %6293 = or i1 %6291, %6292
  br i1 %6293, label %originalBBpart21801, label %originalBB1799alteredBB

originalBBpart21801:                              ; preds = %originalBB1799
  br label %6294, !dbg !3154

6294:                                             ; preds = %originalBBpart21801, %originalBBpart21749, %originalBBpart21745
  %6295 = load i32, i32* @x.37
  %6296 = load i32, i32* @y.38
  %6297 = sub i32 %6295, 1
  %6298 = mul i32 %6295, %6297
  %6299 = urem i32 %6298, 2
  %6300 = icmp eq i32 %6299, 0
  %6301 = icmp slt i32 %6296, 10
  %6302 = or i1 %6300, %6301
  br i1 %6302, label %originalBB1803, label %originalBB1803alteredBB

originalBB1803:                                   ; preds = %6294, %originalBB1803alteredBB
  %6303 = load i32, i32* @x.37
  %6304 = load i32, i32* @y.38
  %6305 = sub i32 %6303, 1
  %6306 = mul i32 %6303, %6305
  %6307 = urem i32 %6306, 2
  %6308 = icmp eq i32 %6307, 0
  %6309 = icmp slt i32 %6304, 10
  %6310 = or i1 %6308, %6309
  br i1 %6310, label %originalBBpart21805, label %originalBB1803alteredBB

originalBBpart21805:                              ; preds = %originalBB1803
  br label %6311, !dbg !3153

6311:                                             ; preds = %originalBBpart21805
  %6312 = load i32, i32* @x.37
  %6313 = load i32, i32* @y.38
  %6314 = sub i32 %6312, 1
  %6315 = mul i32 %6312, %6314
  %6316 = urem i32 %6315, 2
  %6317 = icmp eq i32 %6316, 0
  %6318 = icmp slt i32 %6313, 10
  %6319 = or i1 %6317, %6318
  br i1 %6319, label %originalBB1807, label %originalBB1807alteredBB

originalBB1807:                                   ; preds = %6311, %originalBB1807alteredBB
  %6320 = load i32, i32* @x.37
  %6321 = load i32, i32* @y.38
  %6322 = sub i32 %6320, 1
  %6323 = mul i32 %6320, %6322
  %6324 = urem i32 %6323, 2
  %6325 = icmp eq i32 %6324, 0
  %6326 = icmp slt i32 %6321, 10
  %6327 = or i1 %6325, %6326
  br i1 %6327, label %originalBBpart21809, label %originalBB1807alteredBB

originalBBpart21809:                              ; preds = %originalBB1807
  br label %6328, !dbg !3164

6328:                                             ; preds = %originalBBpart21809
  %6329 = load i32, i32* @x.37
  %6330 = load i32, i32* @y.38
  %6331 = sub i32 %6329, 1
  %6332 = mul i32 %6329, %6331
  %6333 = urem i32 %6332, 2
  %6334 = icmp eq i32 %6333, 0
  %6335 = icmp slt i32 %6330, 10
  %6336 = or i1 %6334, %6335
  br i1 %6336, label %originalBB1811, label %originalBB1811alteredBB

originalBB1811:                                   ; preds = %6328, %originalBB1811alteredBB
  %6337 = load i64, i64* %29, align 8, !dbg !3165
  %6338 = load i64, i64* %20, align 8, !dbg !3165
  %6339 = icmp ult i64 %6337, %6338, !dbg !3165
  %6340 = load i32, i32* @x.37
  %6341 = load i32, i32* @y.38
  %6342 = sub i32 %6340, 1
  %6343 = mul i32 %6340, %6342
  %6344 = urem i32 %6343, 2
  %6345 = icmp eq i32 %6344, 0
  %6346 = icmp slt i32 %6341, 10
  %6347 = or i1 %6345, %6346
  br i1 %6347, label %originalBBpart21813, label %originalBB1811alteredBB

originalBBpart21813:                              ; preds = %originalBB1811
  br i1 %6339, label %6348, label %6369, !dbg !3168

6348:                                             ; preds = %originalBBpart21813
  %6349 = load i32, i32* @x.37
  %6350 = load i32, i32* @y.38
  %6351 = sub i32 %6349, 1
  %6352 = mul i32 %6349, %6351
  %6353 = urem i32 %6352, 2
  %6354 = icmp eq i32 %6353, 0
  %6355 = icmp slt i32 %6350, 10
  %6356 = or i1 %6354, %6355
  br i1 %6356, label %originalBB1815, label %originalBB1815alteredBB

originalBB1815:                                   ; preds = %6348, %originalBB1815alteredBB
  %6357 = load i8, i8* %39, align 1, !dbg !3165
  %6358 = load i8*, i8** %19, align 8, !dbg !3165
  %6359 = load i64, i64* %29, align 8, !dbg !3165
  %6360 = getelementptr inbounds i8, i8* %6358, i64 %6359, !dbg !3165
  store i8 %6357, i8* %6360, align 1, !dbg !3165
  %6361 = load i32, i32* @x.37
  %6362 = load i32, i32* @y.38
  %6363 = sub i32 %6361, 1
  %6364 = mul i32 %6361, %6363
  %6365 = urem i32 %6364, 2
  %6366 = icmp eq i32 %6365, 0
  %6367 = icmp slt i32 %6362, 10
  %6368 = or i1 %6366, %6367
  br i1 %6368, label %originalBBpart21817, label %originalBB1815alteredBB

originalBBpart21817:                              ; preds = %originalBB1815
  br label %6369, !dbg !3165

6369:                                             ; preds = %originalBBpart21817, %originalBBpart21813
  %6370 = load i32, i32* @x.37
  %6371 = load i32, i32* @y.38
  %6372 = sub i32 %6370, 1
  %6373 = mul i32 %6370, %6372
  %6374 = urem i32 %6373, 2
  %6375 = icmp eq i32 %6374, 0
  %6376 = icmp slt i32 %6371, 10
  %6377 = or i1 %6375, %6376
  br i1 %6377, label %originalBB1819, label %originalBB1819alteredBB

originalBB1819:                                   ; preds = %6369, %originalBB1819alteredBB
  %6378 = load i64, i64* %29, align 8, !dbg !3168
  %6379 = add i64 %6378, 1, !dbg !3168
  store i64 %6379, i64* %29, align 8, !dbg !3168
  %6380 = load i32, i32* @x.37
  %6381 = load i32, i32* @y.38
  %6382 = sub i32 %6380, 1
  %6383 = mul i32 %6380, %6382
  %6384 = urem i32 %6383, 2
  %6385 = icmp eq i32 %6384, 0
  %6386 = icmp slt i32 %6381, 10
  %6387 = or i1 %6385, %6386
  br i1 %6387, label %originalBBpart21828, label %originalBB1819alteredBB

originalBBpart21828:                              ; preds = %originalBB1819
  br label %6388, !dbg !3168

6388:                                             ; preds = %originalBBpart21828
  %6389 = load i32, i32* @x.37
  %6390 = load i32, i32* @y.38
  %6391 = sub i32 %6389, 1
  %6392 = mul i32 %6389, %6391
  %6393 = urem i32 %6392, 2
  %6394 = icmp eq i32 %6393, 0
  %6395 = icmp slt i32 %6390, 10
  %6396 = or i1 %6394, %6395
  br i1 %6396, label %originalBB1830, label %originalBB1830alteredBB

originalBB1830:                                   ; preds = %6388, %originalBB1830alteredBB
  %6397 = load i8, i8* %43, align 1, !dbg !3169
  %6398 = trunc i8 %6397 to i1, !dbg !3169
  %6399 = load i32, i32* @x.37
  %6400 = load i32, i32* @y.38
  %6401 = sub i32 %6399, 1
  %6402 = mul i32 %6399, %6401
  %6403 = urem i32 %6402, 2
  %6404 = icmp eq i32 %6403, 0
  %6405 = icmp slt i32 %6400, 10
  %6406 = or i1 %6404, %6405
  br i1 %6406, label %originalBBpart21832, label %originalBB1830alteredBB

originalBBpart21832:                              ; preds = %originalBB1830
  br i1 %6398, label %6424, label %6407, !dbg !3171

6407:                                             ; preds = %originalBBpart21832
  %6408 = load i32, i32* @x.37
  %6409 = load i32, i32* @y.38
  %6410 = sub i32 %6408, 1
  %6411 = mul i32 %6408, %6410
  %6412 = urem i32 %6411, 2
  %6413 = icmp eq i32 %6412, 0
  %6414 = icmp slt i32 %6409, 10
  %6415 = or i1 %6413, %6414
  br i1 %6415, label %originalBB1834, label %originalBB1834alteredBB

originalBB1834:                                   ; preds = %6407, %originalBB1834alteredBB
  store i8 0, i8* %38, align 1, !dbg !3172
  %6416 = load i32, i32* @x.37
  %6417 = load i32, i32* @y.38
  %6418 = sub i32 %6416, 1
  %6419 = mul i32 %6416, %6418
  %6420 = urem i32 %6419, 2
  %6421 = icmp eq i32 %6420, 0
  %6422 = icmp slt i32 %6417, 10
  %6423 = or i1 %6421, %6422
  br i1 %6423, label %originalBBpart21836, label %originalBB1834alteredBB

originalBBpart21836:                              ; preds = %originalBB1834
  br label %6424, !dbg !3173

6424:                                             ; preds = %originalBBpart21836, %originalBBpart21832
  %6425 = load i32, i32* @x.37
  %6426 = load i32, i32* @y.38
  %6427 = sub i32 %6425, 1
  %6428 = mul i32 %6425, %6427
  %6429 = urem i32 %6428, 2
  %6430 = icmp eq i32 %6429, 0
  %6431 = icmp slt i32 %6426, 10
  %6432 = or i1 %6430, %6431
  br i1 %6432, label %originalBB1838, label %originalBB1838alteredBB

originalBB1838:                                   ; preds = %6424, %originalBB1838alteredBB
  %6433 = load i32, i32* @x.37
  %6434 = load i32, i32* @y.38
  %6435 = sub i32 %6433, 1
  %6436 = mul i32 %6433, %6435
  %6437 = urem i32 %6436, 2
  %6438 = icmp eq i32 %6437, 0
  %6439 = icmp slt i32 %6434, 10
  %6440 = or i1 %6438, %6439
  br i1 %6440, label %originalBBpart21840, label %originalBB1838alteredBB

originalBBpart21840:                              ; preds = %originalBB1838
  br label %6441, !dbg !3174

6441:                                             ; preds = %originalBBpart21840, %originalBBpart2475
  %6442 = load i32, i32* @x.37
  %6443 = load i32, i32* @y.38
  %6444 = sub i32 %6442, 1
  %6445 = mul i32 %6442, %6444
  %6446 = urem i32 %6445, 2
  %6447 = icmp eq i32 %6446, 0
  %6448 = icmp slt i32 %6443, 10
  %6449 = or i1 %6447, %6448
  br i1 %6449, label %originalBB1842, label %originalBB1842alteredBB

originalBB1842:                                   ; preds = %6441, %originalBB1842alteredBB
  %6450 = load i64, i64* %28, align 8, !dbg !3175
  %6451 = add i64 %6450, 1, !dbg !3175
  store i64 %6451, i64* %28, align 8, !dbg !3175
  %6452 = load i32, i32* @x.37
  %6453 = load i32, i32* @y.38
  %6454 = sub i32 %6452, 1
  %6455 = mul i32 %6452, %6454
  %6456 = urem i32 %6455, 2
  %6457 = icmp eq i32 %6456, 0
  %6458 = icmp slt i32 %6453, 10
  %6459 = or i1 %6457, %6458
  br i1 %6459, label %originalBBpart21846, label %originalBB1842alteredBB

originalBBpart21846:                              ; preds = %originalBB1842
  br label %762, !dbg !3176, !llvm.loop !3177

6460:                                             ; preds = %originalBBpart2190
  %6461 = load i32, i32* @x.37
  %6462 = load i32, i32* @y.38
  %6463 = sub i32 %6461, 1
  %6464 = mul i32 %6461, %6463
  %6465 = urem i32 %6464, 2
  %6466 = icmp eq i32 %6465, 0
  %6467 = icmp slt i32 %6462, 10
  %6468 = or i1 %6466, %6467
  br i1 %6468, label %originalBB1848, label %originalBB1848alteredBB

originalBB1848:                                   ; preds = %6460, %originalBB1848alteredBB
  %6469 = load i64, i64* %29, align 8, !dbg !3179
  %6470 = icmp eq i64 %6469, 0, !dbg !3181
  %6471 = load i32, i32* @x.37
  %6472 = load i32, i32* @y.38
  %6473 = sub i32 %6471, 1
  %6474 = mul i32 %6471, %6473
  %6475 = urem i32 %6474, 2
  %6476 = icmp eq i32 %6475, 0
  %6477 = icmp slt i32 %6472, 10
  %6478 = or i1 %6476, %6477
  br i1 %6478, label %originalBBpart21850, label %originalBB1848alteredBB

originalBBpart21850:                              ; preds = %originalBB1848
  br i1 %6470, label %6479, label %6534, !dbg !3182

6479:                                             ; preds = %originalBBpart21850
  %6480 = load i32, i32* @x.37
  %6481 = load i32, i32* @y.38
  %6482 = sub i32 %6480, 1
  %6483 = mul i32 %6480, %6482
  %6484 = urem i32 %6483, 2
  %6485 = icmp eq i32 %6484, 0
  %6486 = icmp slt i32 %6481, 10
  %6487 = or i1 %6485, %6486
  br i1 %6487, label %originalBB1852, label %originalBB1852alteredBB

originalBB1852:                                   ; preds = %6479, %originalBB1852alteredBB
  %6488 = load i32, i32* %23, align 4, !dbg !3183
  %6489 = icmp eq i32 %6488, 2, !dbg !3184
  %6490 = load i32, i32* @x.37
  %6491 = load i32, i32* @y.38
  %6492 = sub i32 %6490, 1
  %6493 = mul i32 %6490, %6492
  %6494 = urem i32 %6493, 2
  %6495 = icmp eq i32 %6494, 0
  %6496 = icmp slt i32 %6491, 10
  %6497 = or i1 %6495, %6496
  br i1 %6497, label %originalBBpart21854, label %originalBB1852alteredBB

originalBBpart21854:                              ; preds = %originalBB1852
  br i1 %6489, label %6498, label %6534, !dbg !3185

6498:                                             ; preds = %originalBBpart21854
  %6499 = load i32, i32* @x.37
  %6500 = load i32, i32* @y.38
  %6501 = sub i32 %6499, 1
  %6502 = mul i32 %6499, %6501
  %6503 = urem i32 %6502, 2
  %6504 = icmp eq i32 %6503, 0
  %6505 = icmp slt i32 %6500, 10
  %6506 = or i1 %6504, %6505
  br i1 %6506, label %originalBB1856, label %originalBB1856alteredBB

originalBB1856:                                   ; preds = %6498, %originalBB1856alteredBB
  %6507 = load i8, i8* %35, align 1, !dbg !3186
  %6508 = trunc i8 %6507 to i1, !dbg !3186
  %6509 = load i32, i32* @x.37
  %6510 = load i32, i32* @y.38
  %6511 = sub i32 %6509, 1
  %6512 = mul i32 %6509, %6511
  %6513 = urem i32 %6512, 2
  %6514 = icmp eq i32 %6513, 0
  %6515 = icmp slt i32 %6510, 10
  %6516 = or i1 %6514, %6515
  br i1 %6516, label %originalBBpart21858, label %originalBB1856alteredBB

originalBBpart21858:                              ; preds = %originalBB1856
  br i1 %6508, label %6517, label %6534, !dbg !3187

6517:                                             ; preds = %originalBBpart21858
  %6518 = load i32, i32* @x.37
  %6519 = load i32, i32* @y.38
  %6520 = sub i32 %6518, 1
  %6521 = mul i32 %6518, %6520
  %6522 = urem i32 %6521, 2
  %6523 = icmp eq i32 %6522, 0
  %6524 = icmp slt i32 %6519, 10
  %6525 = or i1 %6523, %6524
  br i1 %6525, label %originalBB1860, label %originalBB1860alteredBB

originalBB1860:                                   ; preds = %6517, %originalBB1860alteredBB
  %6526 = load i32, i32* @x.37
  %6527 = load i32, i32* @y.38
  %6528 = sub i32 %6526, 1
  %6529 = mul i32 %6526, %6528
  %6530 = urem i32 %6529, 2
  %6531 = icmp eq i32 %6530, 0
  %6532 = icmp slt i32 %6527, 10
  %6533 = or i1 %6531, %6532
  br i1 %6533, label %originalBBpart21862, label %originalBB1860alteredBB

originalBBpart21862:                              ; preds = %originalBB1860
  br label %6990, !dbg !3188

6534:                                             ; preds = %originalBBpart21858, %originalBBpart21854, %originalBBpart21850
  %6535 = load i32, i32* @x.37
  %6536 = load i32, i32* @y.38
  %6537 = sub i32 %6535, 1
  %6538 = mul i32 %6535, %6537
  %6539 = urem i32 %6538, 2
  %6540 = icmp eq i32 %6539, 0
  %6541 = icmp slt i32 %6536, 10
  %6542 = or i1 %6540, %6541
  br i1 %6542, label %originalBB1864, label %originalBB1864alteredBB

originalBB1864:                                   ; preds = %6534, %originalBB1864alteredBB
  %6543 = load i32, i32* %23, align 4, !dbg !3189
  %6544 = icmp eq i32 %6543, 2, !dbg !3191
  %6545 = load i32, i32* @x.37
  %6546 = load i32, i32* @y.38
  %6547 = sub i32 %6545, 1
  %6548 = mul i32 %6545, %6547
  %6549 = urem i32 %6548, 2
  %6550 = icmp eq i32 %6549, 0
  %6551 = icmp slt i32 %6546, 10
  %6552 = or i1 %6550, %6551
  br i1 %6552, label %originalBBpart21866, label %originalBB1864alteredBB

originalBBpart21866:                              ; preds = %originalBB1864
  br i1 %6544, label %6553, label %6726, !dbg !3192

6553:                                             ; preds = %originalBBpart21866
  %6554 = load i32, i32* @x.37
  %6555 = load i32, i32* @y.38
  %6556 = sub i32 %6554, 1
  %6557 = mul i32 %6554, %6556
  %6558 = urem i32 %6557, 2
  %6559 = icmp eq i32 %6558, 0
  %6560 = icmp slt i32 %6555, 10
  %6561 = or i1 %6559, %6560
  br i1 %6561, label %originalBB1868, label %originalBB1868alteredBB

originalBB1868:                                   ; preds = %6553, %originalBB1868alteredBB
  %6562 = load i8, i8* %35, align 1, !dbg !3193
  %6563 = trunc i8 %6562 to i1, !dbg !3193
  %6564 = load i32, i32* @x.37
  %6565 = load i32, i32* @y.38
  %6566 = sub i32 %6564, 1
  %6567 = mul i32 %6564, %6566
  %6568 = urem i32 %6567, 2
  %6569 = icmp eq i32 %6568, 0
  %6570 = icmp slt i32 %6565, 10
  %6571 = or i1 %6569, %6570
  br i1 %6571, label %originalBBpart21870, label %originalBB1868alteredBB

originalBBpart21870:                              ; preds = %originalBB1868
  br i1 %6563, label %6726, label %6572, !dbg !3194

6572:                                             ; preds = %originalBBpart21870
  %6573 = load i32, i32* @x.37
  %6574 = load i32, i32* @y.38
  %6575 = sub i32 %6573, 1
  %6576 = mul i32 %6573, %6575
  %6577 = urem i32 %6576, 2
  %6578 = icmp eq i32 %6577, 0
  %6579 = icmp slt i32 %6574, 10
  %6580 = or i1 %6578, %6579
  br i1 %6580, label %originalBB1872, label %originalBB1872alteredBB

originalBB1872:                                   ; preds = %6572, %originalBB1872alteredBB
  %6581 = load i8, i8* %37, align 1, !dbg !3195
  %6582 = trunc i8 %6581 to i1, !dbg !3195
  %6583 = load i32, i32* @x.37
  %6584 = load i32, i32* @y.38
  %6585 = sub i32 %6583, 1
  %6586 = mul i32 %6583, %6585
  %6587 = urem i32 %6586, 2
  %6588 = icmp eq i32 %6587, 0
  %6589 = icmp slt i32 %6584, 10
  %6590 = or i1 %6588, %6589
  br i1 %6590, label %originalBBpart21874, label %originalBB1872alteredBB

originalBBpart21874:                              ; preds = %originalBB1872
  br i1 %6582, label %6591, label %6726, !dbg !3196

6591:                                             ; preds = %originalBBpart21874
  %6592 = load i32, i32* @x.37
  %6593 = load i32, i32* @y.38
  %6594 = sub i32 %6592, 1
  %6595 = mul i32 %6592, %6594
  %6596 = urem i32 %6595, 2
  %6597 = icmp eq i32 %6596, 0
  %6598 = icmp slt i32 %6593, 10
  %6599 = or i1 %6597, %6598
  br i1 %6599, label %originalBB1876, label %originalBB1876alteredBB

originalBB1876:                                   ; preds = %6591, %originalBB1876alteredBB
  %6600 = load i8, i8* %38, align 1, !dbg !3197
  %6601 = trunc i8 %6600 to i1, !dbg !3197
  %6602 = load i32, i32* @x.37
  %6603 = load i32, i32* @y.38
  %6604 = sub i32 %6602, 1
  %6605 = mul i32 %6602, %6604
  %6606 = urem i32 %6605, 2
  %6607 = icmp eq i32 %6606, 0
  %6608 = icmp slt i32 %6603, 10
  %6609 = or i1 %6607, %6608
  br i1 %6609, label %originalBBpart21878, label %originalBB1876alteredBB

originalBBpart21878:                              ; preds = %originalBB1876
  br i1 %6601, label %6610, label %6636, !dbg !3200

6610:                                             ; preds = %originalBBpart21878
  %6611 = load i32, i32* @x.37
  %6612 = load i32, i32* @y.38
  %6613 = sub i32 %6611, 1
  %6614 = mul i32 %6611, %6613
  %6615 = urem i32 %6614, 2
  %6616 = icmp eq i32 %6615, 0
  %6617 = icmp slt i32 %6612, 10
  %6618 = or i1 %6616, %6617
  br i1 %6618, label %originalBB1880, label %originalBB1880alteredBB

originalBB1880:                                   ; preds = %6610, %originalBB1880alteredBB
  %6619 = load i8*, i8** %19, align 8, !dbg !3201
  %6620 = load i64, i64* %30, align 8, !dbg !3202
  %6621 = load i8*, i8** %21, align 8, !dbg !3203
  %6622 = load i64, i64* %22, align 8, !dbg !3204
  %6623 = load i32, i32* %24, align 4, !dbg !3205
  %6624 = load i32*, i32** %25, align 8, !dbg !3206
  %6625 = load i8*, i8** %26, align 8, !dbg !3207
  %6626 = load i8*, i8** %27, align 8, !dbg !3208
  %6627 = call i64 @quotearg_buffer_restyled(i8* %6619, i64 %6620, i8* %6621, i64 %6622, i32 5, i32 %6623, i32* %6624, i8* %6625, i8* %6626), !dbg !3209
  store i64 %6627, i64* %18, align 8, !dbg !3210
  %6628 = load i32, i32* @x.37
  %6629 = load i32, i32* @y.38
  %6630 = sub i32 %6628, 1
  %6631 = mul i32 %6628, %6630
  %6632 = urem i32 %6631, 2
  %6633 = icmp eq i32 %6632, 0
  %6634 = icmp slt i32 %6629, 10
  %6635 = or i1 %6633, %6634
  br i1 %6635, label %originalBBpart21882, label %originalBB1880alteredBB

originalBBpart21882:                              ; preds = %originalBB1880
  br label %7072, !dbg !3210

6636:                                             ; preds = %originalBBpart21878
  %6637 = load i32, i32* @x.37
  %6638 = load i32, i32* @y.38
  %6639 = sub i32 %6637, 1
  %6640 = mul i32 %6637, %6639
  %6641 = urem i32 %6640, 2
  %6642 = icmp eq i32 %6641, 0
  %6643 = icmp slt i32 %6638, 10
  %6644 = or i1 %6642, %6643
  br i1 %6644, label %originalBB1884, label %originalBB1884alteredBB

originalBB1884:                                   ; preds = %6636, %originalBB1884alteredBB
  %6645 = load i64, i64* %20, align 8, !dbg !3211
  %6646 = icmp ne i64 %6645, 0, !dbg !3211
  %6647 = load i32, i32* @x.37
  %6648 = load i32, i32* @y.38
  %6649 = sub i32 %6647, 1
  %6650 = mul i32 %6647, %6649
  %6651 = urem i32 %6650, 2
  %6652 = icmp eq i32 %6651, 0
  %6653 = icmp slt i32 %6648, 10
  %6654 = or i1 %6652, %6653
  br i1 %6654, label %originalBBpart21886, label %originalBB1884alteredBB

originalBBpart21886:                              ; preds = %originalBB1884
  br i1 %6646, label %6692, label %6655, !dbg !3213

6655:                                             ; preds = %originalBBpart21886
  %6656 = load i32, i32* @x.37
  %6657 = load i32, i32* @y.38
  %6658 = sub i32 %6656, 1
  %6659 = mul i32 %6656, %6658
  %6660 = urem i32 %6659, 2
  %6661 = icmp eq i32 %6660, 0
  %6662 = icmp slt i32 %6657, 10
  %6663 = or i1 %6661, %6662
  br i1 %6663, label %originalBB1888, label %originalBB1888alteredBB

originalBB1888:                                   ; preds = %6655, %originalBB1888alteredBB
  %6664 = load i64, i64* %30, align 8, !dbg !3214
  %6665 = icmp ne i64 %6664, 0, !dbg !3214
  %6666 = load i32, i32* @x.37
  %6667 = load i32, i32* @y.38
  %6668 = sub i32 %6666, 1
  %6669 = mul i32 %6666, %6668
  %6670 = urem i32 %6669, 2
  %6671 = icmp eq i32 %6670, 0
  %6672 = icmp slt i32 %6667, 10
  %6673 = or i1 %6671, %6672
  br i1 %6673, label %originalBBpart21890, label %originalBB1888alteredBB

originalBBpart21890:                              ; preds = %originalBB1888
  br i1 %6665, label %6674, label %6692, !dbg !3215

6674:                                             ; preds = %originalBBpart21890
  %6675 = load i32, i32* @x.37
  %6676 = load i32, i32* @y.38
  %6677 = sub i32 %6675, 1
  %6678 = mul i32 %6675, %6677
  %6679 = urem i32 %6678, 2
  %6680 = icmp eq i32 %6679, 0
  %6681 = icmp slt i32 %6676, 10
  %6682 = or i1 %6680, %6681
  br i1 %6682, label %originalBB1892, label %originalBB1892alteredBB

originalBB1892:                                   ; preds = %6674, %originalBB1892alteredBB
  %6683 = load i64, i64* %30, align 8, !dbg !3216
  store i64 %6683, i64* %20, align 8, !dbg !3218
  store i64 0, i64* %29, align 8, !dbg !3219
  %6684 = load i32, i32* @x.37
  %6685 = load i32, i32* @y.38
  %6686 = sub i32 %6684, 1
  %6687 = mul i32 %6684, %6686
  %6688 = urem i32 %6687, 2
  %6689 = icmp eq i32 %6688, 0
  %6690 = icmp slt i32 %6685, 10
  %6691 = or i1 %6689, %6690
  br i1 %6691, label %originalBBpart21894, label %originalBB1892alteredBB

originalBBpart21894:                              ; preds = %originalBB1892
  br label %66, !dbg !3220

6692:                                             ; preds = %originalBBpart21890, %originalBBpart21886
  %6693 = load i32, i32* @x.37
  %6694 = load i32, i32* @y.38
  %6695 = sub i32 %6693, 1
  %6696 = mul i32 %6693, %6695
  %6697 = urem i32 %6696, 2
  %6698 = icmp eq i32 %6697, 0
  %6699 = icmp slt i32 %6694, 10
  %6700 = or i1 %6698, %6699
  br i1 %6700, label %originalBB1896, label %originalBB1896alteredBB

originalBB1896:                                   ; preds = %6692, %originalBB1896alteredBB
  %6701 = load i32, i32* @x.37
  %6702 = load i32, i32* @y.38
  %6703 = sub i32 %6701, 1
  %6704 = mul i32 %6701, %6703
  %6705 = urem i32 %6704, 2
  %6706 = icmp eq i32 %6705, 0
  %6707 = icmp slt i32 %6702, 10
  %6708 = or i1 %6706, %6707
  br i1 %6708, label %originalBBpart21898, label %originalBB1896alteredBB

originalBBpart21898:                              ; preds = %originalBB1896
  br label %6709

6709:                                             ; preds = %originalBBpart21898
  %6710 = load i32, i32* @x.37
  %6711 = load i32, i32* @y.38
  %6712 = sub i32 %6710, 1
  %6713 = mul i32 %6710, %6712
  %6714 = urem i32 %6713, 2
  %6715 = icmp eq i32 %6714, 0
  %6716 = icmp slt i32 %6711, 10
  %6717 = or i1 %6715, %6716
  br i1 %6717, label %originalBB1900, label %originalBB1900alteredBB

originalBB1900:                                   ; preds = %6709, %originalBB1900alteredBB
  %6718 = load i32, i32* @x.37
  %6719 = load i32, i32* @y.38
  %6720 = sub i32 %6718, 1
  %6721 = mul i32 %6718, %6720
  %6722 = urem i32 %6721, 2
  %6723 = icmp eq i32 %6722, 0
  %6724 = icmp slt i32 %6719, 10
  %6725 = or i1 %6723, %6724
  br i1 %6725, label %originalBBpart21902, label %originalBB1900alteredBB

originalBBpart21902:                              ; preds = %originalBB1900
  br label %6726, !dbg !3221

6726:                                             ; preds = %originalBBpart21902, %originalBBpart21874, %originalBBpart21870, %originalBBpart21866
  %6727 = load i32, i32* @x.37
  %6728 = load i32, i32* @y.38
  %6729 = sub i32 %6727, 1
  %6730 = mul i32 %6727, %6729
  %6731 = urem i32 %6730, 2
  %6732 = icmp eq i32 %6731, 0
  %6733 = icmp slt i32 %6728, 10
  %6734 = or i1 %6732, %6733
  br i1 %6734, label %originalBB1904, label %originalBB1904alteredBB

originalBB1904:                                   ; preds = %6726, %originalBB1904alteredBB
  %6735 = load i8*, i8** %31, align 8, !dbg !3222
  %6736 = icmp ne i8* %6735, null, !dbg !3222
  %6737 = load i32, i32* @x.37
  %6738 = load i32, i32* @y.38
  %6739 = sub i32 %6737, 1
  %6740 = mul i32 %6737, %6739
  %6741 = urem i32 %6740, 2
  %6742 = icmp eq i32 %6741, 0
  %6743 = icmp slt i32 %6738, 10
  %6744 = or i1 %6742, %6743
  br i1 %6744, label %originalBBpart21906, label %originalBB1904alteredBB

originalBBpart21906:                              ; preds = %originalBB1904
  br i1 %6736, label %6745, label %6932, !dbg !3224

6745:                                             ; preds = %originalBBpart21906
  %6746 = load i32, i32* @x.37
  %6747 = load i32, i32* @y.38
  %6748 = sub i32 %6746, 1
  %6749 = mul i32 %6746, %6748
  %6750 = urem i32 %6749, 2
  %6751 = icmp eq i32 %6750, 0
  %6752 = icmp slt i32 %6747, 10
  %6753 = or i1 %6751, %6752
  br i1 %6753, label %originalBB1908, label %originalBB1908alteredBB

originalBB1908:                                   ; preds = %6745, %originalBB1908alteredBB
  %6754 = load i8, i8* %35, align 1, !dbg !3225
  %6755 = trunc i8 %6754 to i1, !dbg !3225
  %6756 = load i32, i32* @x.37
  %6757 = load i32, i32* @y.38
  %6758 = sub i32 %6756, 1
  %6759 = mul i32 %6756, %6758
  %6760 = urem i32 %6759, 2
  %6761 = icmp eq i32 %6760, 0
  %6762 = icmp slt i32 %6757, 10
  %6763 = or i1 %6761, %6762
  br i1 %6763, label %originalBBpart21910, label %originalBB1908alteredBB

originalBBpart21910:                              ; preds = %originalBB1908
  br i1 %6755, label %6932, label %6764, !dbg !3226

6764:                                             ; preds = %originalBBpart21910
  %6765 = load i32, i32* @x.37
  %6766 = load i32, i32* @y.38
  %6767 = sub i32 %6765, 1
  %6768 = mul i32 %6765, %6767
  %6769 = urem i32 %6768, 2
  %6770 = icmp eq i32 %6769, 0
  %6771 = icmp slt i32 %6766, 10
  %6772 = or i1 %6770, %6771
  br i1 %6772, label %originalBB1912, label %originalBB1912alteredBB

originalBB1912:                                   ; preds = %6764, %originalBB1912alteredBB
  %6773 = load i32, i32* @x.37
  %6774 = load i32, i32* @y.38
  %6775 = sub i32 %6773, 1
  %6776 = mul i32 %6773, %6775
  %6777 = urem i32 %6776, 2
  %6778 = icmp eq i32 %6777, 0
  %6779 = icmp slt i32 %6774, 10
  %6780 = or i1 %6778, %6779
  br i1 %6780, label %originalBBpart21914, label %originalBB1912alteredBB

originalBBpart21914:                              ; preds = %originalBB1912
  br label %6781, !dbg !3227

6781:                                             ; preds = %originalBBpart21943, %originalBBpart21914
  %6782 = load i32, i32* @x.37
  %6783 = load i32, i32* @y.38
  %6784 = sub i32 %6782, 1
  %6785 = mul i32 %6782, %6784
  %6786 = urem i32 %6785, 2
  %6787 = icmp eq i32 %6786, 0
  %6788 = icmp slt i32 %6783, 10
  %6789 = or i1 %6787, %6788
  br i1 %6789, label %originalBB1916, label %originalBB1916alteredBB

originalBB1916:                                   ; preds = %6781, %originalBB1916alteredBB
  %6790 = load i8*, i8** %31, align 8, !dbg !3228
  %6791 = load i8, i8* %6790, align 1, !dbg !3231
  %6792 = icmp ne i8 %6791, 0, !dbg !3232
  %6793 = load i32, i32* @x.37
  %6794 = load i32, i32* @y.38
  %6795 = sub i32 %6793, 1
  %6796 = mul i32 %6793, %6795
  %6797 = urem i32 %6796, 2
  %6798 = icmp eq i32 %6797, 0
  %6799 = icmp slt i32 %6794, 10
  %6800 = or i1 %6798, %6799
  br i1 %6800, label %originalBBpart21918, label %originalBB1916alteredBB

originalBBpart21918:                              ; preds = %originalBB1916
  br i1 %6792, label %6801, label %6915, !dbg !3232

6801:                                             ; preds = %originalBBpart21918
  %6802 = load i32, i32* @x.37
  %6803 = load i32, i32* @y.38
  %6804 = sub i32 %6802, 1
  %6805 = mul i32 %6802, %6804
  %6806 = urem i32 %6805, 2
  %6807 = icmp eq i32 %6806, 0
  %6808 = icmp slt i32 %6803, 10
  %6809 = or i1 %6807, %6808
  br i1 %6809, label %originalBB1920, label %originalBB1920alteredBB

originalBB1920:                                   ; preds = %6801, %originalBB1920alteredBB
  %6810 = load i32, i32* @x.37
  %6811 = load i32, i32* @y.38
  %6812 = sub i32 %6810, 1
  %6813 = mul i32 %6810, %6812
  %6814 = urem i32 %6813, 2
  %6815 = icmp eq i32 %6814, 0
  %6816 = icmp slt i32 %6811, 10
  %6817 = or i1 %6815, %6816
  br i1 %6817, label %originalBBpart21922, label %originalBB1920alteredBB

originalBBpart21922:                              ; preds = %originalBB1920
  br label %6818, !dbg !3233

6818:                                             ; preds = %originalBBpart21922
  %6819 = load i32, i32* @x.37
  %6820 = load i32, i32* @y.38
  %6821 = sub i32 %6819, 1
  %6822 = mul i32 %6819, %6821
  %6823 = urem i32 %6822, 2
  %6824 = icmp eq i32 %6823, 0
  %6825 = icmp slt i32 %6820, 10
  %6826 = or i1 %6824, %6825
  br i1 %6826, label %originalBB1924, label %originalBB1924alteredBB

originalBB1924:                                   ; preds = %6818, %originalBB1924alteredBB
  %6827 = load i64, i64* %29, align 8, !dbg !3234
  %6828 = load i64, i64* %20, align 8, !dbg !3234
  %6829 = icmp ult i64 %6827, %6828, !dbg !3234
  %6830 = load i32, i32* @x.37
  %6831 = load i32, i32* @y.38
  %6832 = sub i32 %6830, 1
  %6833 = mul i32 %6830, %6832
  %6834 = urem i32 %6833, 2
  %6835 = icmp eq i32 %6834, 0
  %6836 = icmp slt i32 %6831, 10
  %6837 = or i1 %6835, %6836
  br i1 %6837, label %originalBBpart21926, label %originalBB1924alteredBB

originalBBpart21926:                              ; preds = %originalBB1924
  br i1 %6829, label %6838, label %6860, !dbg !3237

6838:                                             ; preds = %originalBBpart21926
  %6839 = load i32, i32* @x.37
  %6840 = load i32, i32* @y.38
  %6841 = sub i32 %6839, 1
  %6842 = mul i32 %6839, %6841
  %6843 = urem i32 %6842, 2
  %6844 = icmp eq i32 %6843, 0
  %6845 = icmp slt i32 %6840, 10
  %6846 = or i1 %6844, %6845
  br i1 %6846, label %originalBB1928, label %originalBB1928alteredBB

originalBB1928:                                   ; preds = %6838, %originalBB1928alteredBB
  %6847 = load i8*, i8** %31, align 8, !dbg !3234
  %6848 = load i8, i8* %6847, align 1, !dbg !3234
  %6849 = load i8*, i8** %19, align 8, !dbg !3234
  %6850 = load i64, i64* %29, align 8, !dbg !3234
  %6851 = getelementptr inbounds i8, i8* %6849, i64 %6850, !dbg !3234
  store i8 %6848, i8* %6851, align 1, !dbg !3234
  %6852 = load i32, i32* @x.37
  %6853 = load i32, i32* @y.38
  %6854 = sub i32 %6852, 1
  %6855 = mul i32 %6852, %6854
  %6856 = urem i32 %6855, 2
  %6857 = icmp eq i32 %6856, 0
  %6858 = icmp slt i32 %6853, 10
  %6859 = or i1 %6857, %6858
  br i1 %6859, label %originalBBpart21930, label %originalBB1928alteredBB

originalBBpart21930:                              ; preds = %originalBB1928
  br label %6860, !dbg !3234

6860:                                             ; preds = %originalBBpart21930, %originalBBpart21926
  %6861 = load i32, i32* @x.37
  %6862 = load i32, i32* @y.38
  %6863 = sub i32 %6861, 1
  %6864 = mul i32 %6861, %6863
  %6865 = urem i32 %6864, 2
  %6866 = icmp eq i32 %6865, 0
  %6867 = icmp slt i32 %6862, 10
  %6868 = or i1 %6866, %6867
  br i1 %6868, label %originalBB1932, label %originalBB1932alteredBB

originalBB1932:                                   ; preds = %6860, %originalBB1932alteredBB
  %6869 = load i64, i64* %29, align 8, !dbg !3237
  %6870 = add i64 %6869, 1, !dbg !3237
  store i64 %6870, i64* %29, align 8, !dbg !3237
  %6871 = load i32, i32* @x.37
  %6872 = load i32, i32* @y.38
  %6873 = sub i32 %6871, 1
  %6874 = mul i32 %6871, %6873
  %6875 = urem i32 %6874, 2
  %6876 = icmp eq i32 %6875, 0
  %6877 = icmp slt i32 %6872, 10
  %6878 = or i1 %6876, %6877
  br i1 %6878, label %originalBBpart21935, label %originalBB1932alteredBB

originalBBpart21935:                              ; preds = %originalBB1932
  br label %6879, !dbg !3237

6879:                                             ; preds = %originalBBpart21935
  %6880 = load i32, i32* @x.37
  %6881 = load i32, i32* @y.38
  %6882 = sub i32 %6880, 1
  %6883 = mul i32 %6880, %6882
  %6884 = urem i32 %6883, 2
  %6885 = icmp eq i32 %6884, 0
  %6886 = icmp slt i32 %6881, 10
  %6887 = or i1 %6885, %6886
  br i1 %6887, label %originalBB1937, label %originalBB1937alteredBB

originalBB1937:                                   ; preds = %6879, %originalBB1937alteredBB
  %6888 = load i32, i32* @x.37
  %6889 = load i32, i32* @y.38
  %6890 = sub i32 %6888, 1
  %6891 = mul i32 %6888, %6890
  %6892 = urem i32 %6891, 2
  %6893 = icmp eq i32 %6892, 0
  %6894 = icmp slt i32 %6889, 10
  %6895 = or i1 %6893, %6894
  br i1 %6895, label %originalBBpart21939, label %originalBB1937alteredBB

originalBBpart21939:                              ; preds = %originalBB1937
  br label %6896, !dbg !3237

6896:                                             ; preds = %originalBBpart21939
  %6897 = load i32, i32* @x.37
  %6898 = load i32, i32* @y.38
  %6899 = sub i32 %6897, 1
  %6900 = mul i32 %6897, %6899
  %6901 = urem i32 %6900, 2
  %6902 = icmp eq i32 %6901, 0
  %6903 = icmp slt i32 %6898, 10
  %6904 = or i1 %6902, %6903
  br i1 %6904, label %originalBB1941, label %originalBB1941alteredBB

originalBB1941:                                   ; preds = %6896, %originalBB1941alteredBB
  %6905 = load i8*, i8** %31, align 8, !dbg !3238
  %6906 = getelementptr inbounds i8, i8* %6905, i32 1, !dbg !3238
  store i8* %6906, i8** %31, align 8, !dbg !3238
  %6907 = load i32, i32* @x.37
  %6908 = load i32, i32* @y.38
  %6909 = sub i32 %6907, 1
  %6910 = mul i32 %6907, %6909
  %6911 = urem i32 %6910, 2
  %6912 = icmp eq i32 %6911, 0
  %6913 = icmp slt i32 %6908, 10
  %6914 = or i1 %6912, %6913
  br i1 %6914, label %originalBBpart21943, label %originalBB1941alteredBB

originalBBpart21943:                              ; preds = %originalBB1941
  br label %6781, !dbg !3239, !llvm.loop !3240

6915:                                             ; preds = %originalBBpart21918
  %6916 = load i32, i32* @x.37
  %6917 = load i32, i32* @y.38
  %6918 = sub i32 %6916, 1
  %6919 = mul i32 %6916, %6918
  %6920 = urem i32 %6919, 2
  %6921 = icmp eq i32 %6920, 0
  %6922 = icmp slt i32 %6917, 10
  %6923 = or i1 %6921, %6922
  br i1 %6923, label %originalBB1945, label %originalBB1945alteredBB

originalBB1945:                                   ; preds = %6915, %originalBB1945alteredBB
  %6924 = load i32, i32* @x.37
  %6925 = load i32, i32* @y.38
  %6926 = sub i32 %6924, 1
  %6927 = mul i32 %6924, %6926
  %6928 = urem i32 %6927, 2
  %6929 = icmp eq i32 %6928, 0
  %6930 = icmp slt i32 %6925, 10
  %6931 = or i1 %6929, %6930
  br i1 %6931, label %originalBBpart21947, label %originalBB1945alteredBB

originalBBpart21947:                              ; preds = %originalBB1945
  br label %6932, !dbg !3241

6932:                                             ; preds = %originalBBpart21947, %originalBBpart21910, %originalBBpart21906
  %6933 = load i32, i32* @x.37
  %6934 = load i32, i32* @y.38
  %6935 = sub i32 %6933, 1
  %6936 = mul i32 %6933, %6935
  %6937 = urem i32 %6936, 2
  %6938 = icmp eq i32 %6937, 0
  %6939 = icmp slt i32 %6934, 10
  %6940 = or i1 %6938, %6939
  br i1 %6940, label %originalBB1949, label %originalBB1949alteredBB

originalBB1949:                                   ; preds = %6932, %originalBB1949alteredBB
  %6941 = load i64, i64* %29, align 8, !dbg !3242
  %6942 = load i64, i64* %20, align 8, !dbg !3244
  %6943 = icmp ult i64 %6941, %6942, !dbg !3245
  %6944 = load i32, i32* @x.37
  %6945 = load i32, i32* @y.38
  %6946 = sub i32 %6944, 1
  %6947 = mul i32 %6944, %6946
  %6948 = urem i32 %6947, 2
  %6949 = icmp eq i32 %6948, 0
  %6950 = icmp slt i32 %6945, 10
  %6951 = or i1 %6949, %6950
  br i1 %6951, label %originalBBpart21951, label %originalBB1949alteredBB

originalBBpart21951:                              ; preds = %originalBB1949
  br i1 %6943, label %6952, label %6972, !dbg !3246

6952:                                             ; preds = %originalBBpart21951
  %6953 = load i32, i32* @x.37
  %6954 = load i32, i32* @y.38
  %6955 = sub i32 %6953, 1
  %6956 = mul i32 %6953, %6955
  %6957 = urem i32 %6956, 2
  %6958 = icmp eq i32 %6957, 0
  %6959 = icmp slt i32 %6954, 10
  %6960 = or i1 %6958, %6959
  br i1 %6960, label %originalBB1953, label %originalBB1953alteredBB

originalBB1953:                                   ; preds = %6952, %originalBB1953alteredBB
  %6961 = load i8*, i8** %19, align 8, !dbg !3247
  %6962 = load i64, i64* %29, align 8, !dbg !3248
  %6963 = getelementptr inbounds i8, i8* %6961, i64 %6962, !dbg !3247
  store i8 0, i8* %6963, align 1, !dbg !3249
  %6964 = load i32, i32* @x.37
  %6965 = load i32, i32* @y.38
  %6966 = sub i32 %6964, 1
  %6967 = mul i32 %6964, %6966
  %6968 = urem i32 %6967, 2
  %6969 = icmp eq i32 %6968, 0
  %6970 = icmp slt i32 %6965, 10
  %6971 = or i1 %6969, %6970
  br i1 %6971, label %originalBBpart21955, label %originalBB1953alteredBB

originalBBpart21955:                              ; preds = %originalBB1953
  br label %6972, !dbg !3247

6972:                                             ; preds = %originalBBpart21955, %originalBBpart21951
  %6973 = load i32, i32* @x.37
  %6974 = load i32, i32* @y.38
  %6975 = sub i32 %6973, 1
  %6976 = mul i32 %6973, %6975
  %6977 = urem i32 %6976, 2
  %6978 = icmp eq i32 %6977, 0
  %6979 = icmp slt i32 %6974, 10
  %6980 = or i1 %6978, %6979
  br i1 %6980, label %originalBB1957, label %originalBB1957alteredBB

originalBB1957:                                   ; preds = %6972, %originalBB1957alteredBB
  %6981 = load i64, i64* %29, align 8, !dbg !3250
  store i64 %6981, i64* %18, align 8, !dbg !3251
  %6982 = load i32, i32* @x.37
  %6983 = load i32, i32* @y.38
  %6984 = sub i32 %6982, 1
  %6985 = mul i32 %6982, %6984
  %6986 = urem i32 %6985, 2
  %6987 = icmp eq i32 %6986, 0
  %6988 = icmp slt i32 %6983, 10
  %6989 = or i1 %6987, %6988
  br i1 %6989, label %originalBBpart21959, label %originalBB1957alteredBB

originalBBpart21959:                              ; preds = %originalBB1957
  br label %7072, !dbg !3251

6990:                                             ; preds = %originalBBpart21862, %originalBBpart21617, %originalBBpart21205, %originalBBpart21092, %originalBBpart2846, %originalBBpart2830, %originalBBpart2766, %originalBBpart2730, %originalBBpart2550, %originalBBpart2495, %originalBBpart2263, %originalBBpart2239
  call void @llvm.dbg.label(metadata !3252), !dbg !3253
  %6991 = load i32, i32* @x.37
  %6992 = load i32, i32* @y.38
  %6993 = sub i32 %6991, 1
  %6994 = mul i32 %6991, %6993
  %6995 = urem i32 %6994, 2
  %6996 = icmp eq i32 %6995, 0
  %6997 = icmp slt i32 %6992, 10
  %6998 = or i1 %6996, %6997
  br i1 %6998, label %originalBB1961, label %originalBB1961alteredBB

originalBB1961:                                   ; preds = %6990, %originalBB1961alteredBB
  %6999 = load i32, i32* %23, align 4, !dbg !3254
  %7000 = icmp eq i32 %6999, 2, !dbg !3256
  %7001 = load i32, i32* @x.37
  %7002 = load i32, i32* @y.38
  %7003 = sub i32 %7001, 1
  %7004 = mul i32 %7001, %7003
  %7005 = urem i32 %7004, 2
  %7006 = icmp eq i32 %7005, 0
  %7007 = icmp slt i32 %7002, 10
  %7008 = or i1 %7006, %7007
  br i1 %7008, label %originalBBpart21963, label %originalBB1961alteredBB

originalBBpart21963:                              ; preds = %originalBB1961
  br i1 %7000, label %7009, label %7045, !dbg !3257

7009:                                             ; preds = %originalBBpart21963
  %7010 = load i32, i32* @x.37
  %7011 = load i32, i32* @y.38
  %7012 = sub i32 %7010, 1
  %7013 = mul i32 %7010, %7012
  %7014 = urem i32 %7013, 2
  %7015 = icmp eq i32 %7014, 0
  %7016 = icmp slt i32 %7011, 10
  %7017 = or i1 %7015, %7016
  br i1 %7017, label %originalBB1965, label %originalBB1965alteredBB

originalBB1965:                                   ; preds = %7009, %originalBB1965alteredBB
  %7018 = load i8, i8* %33, align 1, !dbg !3258
  %7019 = trunc i8 %7018 to i1, !dbg !3258
  %7020 = load i32, i32* @x.37
  %7021 = load i32, i32* @y.38
  %7022 = sub i32 %7020, 1
  %7023 = mul i32 %7020, %7022
  %7024 = urem i32 %7023, 2
  %7025 = icmp eq i32 %7024, 0
  %7026 = icmp slt i32 %7021, 10
  %7027 = or i1 %7025, %7026
  br i1 %7027, label %originalBBpart21967, label %originalBB1965alteredBB

originalBBpart21967:                              ; preds = %originalBB1965
  br i1 %7019, label %7028, label %7045, !dbg !3259

7028:                                             ; preds = %originalBBpart21967
  %7029 = load i32, i32* @x.37
  %7030 = load i32, i32* @y.38
  %7031 = sub i32 %7029, 1
  %7032 = mul i32 %7029, %7031
  %7033 = urem i32 %7032, 2
  %7034 = icmp eq i32 %7033, 0
  %7035 = icmp slt i32 %7030, 10
  %7036 = or i1 %7034, %7035
  br i1 %7036, label %originalBB1969, label %originalBB1969alteredBB

originalBB1969:                                   ; preds = %7028, %originalBB1969alteredBB
  store i32 4, i32* %23, align 4, !dbg !3260
  %7037 = load i32, i32* @x.37
  %7038 = load i32, i32* @y.38
  %7039 = sub i32 %7037, 1
  %7040 = mul i32 %7037, %7039
  %7041 = urem i32 %7040, 2
  %7042 = icmp eq i32 %7041, 0
  %7043 = icmp slt i32 %7038, 10
  %7044 = or i1 %7042, %7043
  br i1 %7044, label %originalBBpart21971, label %originalBB1969alteredBB

originalBBpart21971:                              ; preds = %originalBB1969
  br label %7045, !dbg !3261

7045:                                             ; preds = %originalBBpart21971, %originalBBpart21967, %originalBBpart21963
  %7046 = load i32, i32* @x.37
  %7047 = load i32, i32* @y.38
  %7048 = sub i32 %7046, 1
  %7049 = mul i32 %7046, %7048
  %7050 = urem i32 %7049, 2
  %7051 = icmp eq i32 %7050, 0
  %7052 = icmp slt i32 %7047, 10
  %7053 = or i1 %7051, %7052
  br i1 %7053, label %originalBB1973, label %originalBB1973alteredBB

originalBB1973:                                   ; preds = %7045, %originalBB1973alteredBB
  %7054 = load i8*, i8** %19, align 8, !dbg !3262
  %7055 = load i64, i64* %20, align 8, !dbg !3263
  %7056 = load i8*, i8** %21, align 8, !dbg !3264
  %7057 = load i64, i64* %22, align 8, !dbg !3265
  %7058 = load i32, i32* %23, align 4, !dbg !3266
  %7059 = load i32, i32* %24, align 4, !dbg !3267
  %7060 = and i32 %7059, -3, !dbg !3268
  %7061 = load i8*, i8** %26, align 8, !dbg !3269
  %7062 = load i8*, i8** %27, align 8, !dbg !3270
  %7063 = call i64 @quotearg_buffer_restyled(i8* %7054, i64 %7055, i8* %7056, i64 %7057, i32 %7058, i32 %7060, i32* null, i8* %7061, i8* %7062), !dbg !3271
  store i64 %7063, i64* %18, align 8, !dbg !3272
  %7064 = load i32, i32* @x.37
  %7065 = load i32, i32* @y.38
  %7066 = sub i32 %7064, 1
  %7067 = mul i32 %7064, %7066
  %7068 = urem i32 %7067, 2
  %7069 = icmp eq i32 %7068, 0
  %7070 = icmp slt i32 %7065, 10
  %7071 = or i1 %7069, %7070
  br i1 %7071, label %originalBBpart21982, label %originalBB1973alteredBB

originalBBpart21982:                              ; preds = %originalBB1973
  br label %7072, !dbg !3272

7072:                                             ; preds = %originalBBpart21982, %originalBBpart21959, %originalBBpart21882
  %7073 = load i32, i32* @x.37
  %7074 = load i32, i32* @y.38
  %7075 = sub i32 %7073, 1
  %7076 = mul i32 %7073, %7075
  %7077 = urem i32 %7076, 2
  %7078 = icmp eq i32 %7077, 0
  %7079 = icmp slt i32 %7074, 10
  %7080 = or i1 %7078, %7079
  br i1 %7080, label %originalBB1984, label %originalBB1984alteredBB

originalBB1984:                                   ; preds = %7072, %originalBB1984alteredBB
  %7081 = load i64, i64* %18, align 8, !dbg !3273
  %7082 = load i32, i32* @x.37
  %7083 = load i32, i32* @y.38
  %7084 = sub i32 %7082, 1
  %7085 = mul i32 %7082, %7084
  %7086 = urem i32 %7085, 2
  %7087 = icmp eq i32 %7086, 0
  %7088 = icmp slt i32 %7083, 10
  %7089 = or i1 %7087, %7088
  br i1 %7089, label %originalBBpart21986, label %originalBB1984alteredBB

originalBBpart21986:                              ; preds = %originalBB1984
  ret i64 %7081, !dbg !3273

originalBBalteredBB:                              ; preds = %originalBB, %9
  %7090 = alloca i64, align 8
  %7091 = alloca i8*, align 8
  %7092 = alloca i64, align 8
  %7093 = alloca i8*, align 8
  %7094 = alloca i64, align 8
  %7095 = alloca i32, align 4
  %7096 = alloca i32, align 4
  %7097 = alloca i32*, align 8
  %7098 = alloca i8*, align 8
  %7099 = alloca i8*, align 8
  %7100 = alloca i64, align 8
  %7101 = alloca i64, align 8
  %7102 = alloca i64, align 8
  %7103 = alloca i8*, align 8
  %7104 = alloca i64, align 8
  %7105 = alloca i8, align 1
  %7106 = alloca i8, align 1
  %7107 = alloca i8, align 1
  %7108 = alloca i8, align 1
  %7109 = alloca i8, align 1
  %7110 = alloca i8, align 1
  %7111 = alloca i8, align 1
  %7112 = alloca i8, align 1
  %7113 = alloca i8, align 1
  %7114 = alloca i8, align 1
  %7115 = alloca i8, align 1
  %7116 = alloca i64, align 8
  %7117 = alloca i8, align 1
  %7118 = alloca %struct.__mbstate_t, align 4
  %7119 = alloca i32, align 4
  %7120 = alloca i64, align 8
  %7121 = alloca i64, align 8
  %7122 = alloca i64, align 8
  store i8* %0, i8** %7091, align 8
  call void @llvm.dbg.declare(metadata i8** %7091, metadata !3274, metadata !DIExpression()), !dbg !2394
  store i64 %1, i64* %7092, align 8
  call void @llvm.dbg.declare(metadata i64* %7092, metadata !3306, metadata !DIExpression()), !dbg !2396
  store i8* %2, i8** %7093, align 8
  call void @llvm.dbg.declare(metadata i8** %7093, metadata !3307, metadata !DIExpression()), !dbg !2398
  store i64 %3, i64* %7094, align 8
  call void @llvm.dbg.declare(metadata i64* %7094, metadata !3308, metadata !DIExpression()), !dbg !2400
  store i32 %4, i32* %7095, align 4
  call void @llvm.dbg.declare(metadata i32* %7095, metadata !3309, metadata !DIExpression()), !dbg !2402
  store i32 %5, i32* %7096, align 4
  call void @llvm.dbg.declare(metadata i32* %7096, metadata !3310, metadata !DIExpression()), !dbg !2404
  store i32* %6, i32** %7097, align 8
  call void @llvm.dbg.declare(metadata i32** %7097, metadata !3311, metadata !DIExpression()), !dbg !2406
  store i8* %7, i8** %7098, align 8
  call void @llvm.dbg.declare(metadata i8** %7098, metadata !3312, metadata !DIExpression()), !dbg !2408
  store i8* %8, i8** %7099, align 8
  call void @llvm.dbg.declare(metadata i8** %7099, metadata !3313, metadata !DIExpression()), !dbg !2410
  call void @llvm.dbg.declare(metadata i64* %7100, metadata !3314, metadata !DIExpression()), !dbg !2412
  call void @llvm.dbg.declare(metadata i64* %7101, metadata !3315, metadata !DIExpression()), !dbg !2414
  store i64 0, i64* %7101, align 8, !dbg !2414
  call void @llvm.dbg.declare(metadata i64* %7102, metadata !3316, metadata !DIExpression()), !dbg !2416
  store i64 0, i64* %7102, align 8, !dbg !2416
  call void @llvm.dbg.declare(metadata i8** %7103, metadata !3317, metadata !DIExpression()), !dbg !2418
  store i8* null, i8** %7103, align 8, !dbg !2418
  call void @llvm.dbg.declare(metadata i64* %7104, metadata !3318, metadata !DIExpression()), !dbg !2420
  store i64 0, i64* %7104, align 8, !dbg !2420
  call void @llvm.dbg.declare(metadata i8* %7105, metadata !3319, metadata !DIExpression()), !dbg !2422
  store i8 0, i8* %7105, align 1, !dbg !2422
  call void @llvm.dbg.declare(metadata i8* %7106, metadata !3320, metadata !DIExpression()), !dbg !2424
  %7123 = call i64 @__ctype_get_mb_cur_max() #10, !dbg !2425
  %7124 = icmp eq i64 %7123, 1, !dbg !2426
  %7125 = zext i1 %7124 to i8, !dbg !2424
  store i8 %7125, i8* %7106, align 1, !dbg !2424
  call void @llvm.dbg.declare(metadata i8* %7107, metadata !3321, metadata !DIExpression()), !dbg !2428
  %7126 = load i32, i32* %7096, align 4, !dbg !2429
  %_ = shl i32 %7126, 2
  %_1 = shl i32 %7126, 2
  %_2 = sub i32 0, %7126
  %gen = add i32 %_2, 2
  %_3 = shl i32 %7126, 2
  %7127 = and i32 %7126, 2, !dbg !2430
  %7128 = icmp ne i32 %7127, 0, !dbg !2431
  %7129 = zext i1 %7128 to i8, !dbg !2428
  store i8 %7129, i8* %7107, align 1, !dbg !2428
  call void @llvm.dbg.declare(metadata i8* %7108, metadata !3322, metadata !DIExpression()), !dbg !2433
  store i8 0, i8* %7108, align 1, !dbg !2433
  call void @llvm.dbg.declare(metadata i8* %7109, metadata !3323, metadata !DIExpression()), !dbg !2435
  store i8 0, i8* %7109, align 1, !dbg !2435
  call void @llvm.dbg.declare(metadata i8* %7110, metadata !3324, metadata !DIExpression()), !dbg !2437
  store i8 1, i8* %7110, align 1, !dbg !2437
  br label %originalBB

originalBB4alteredBB:                             ; preds = %originalBB4, %66
  %7130 = load i32, i32* %23, align 4, !dbg !2441
  br label %originalBB4

originalBB8alteredBB:                             ; preds = %originalBB8, %84
  store i32 5, i32* %23, align 4, !dbg !2443
  store i8 1, i8* %35, align 1, !dbg !2445
  br label %originalBB8

originalBB12alteredBB:                            ; preds = %originalBB12, %101
  %7131 = load i8, i8* %35, align 1, !dbg !2447
  %7132 = trunc i8 %7131 to i1, !dbg !2447
  br label %originalBB12

originalBB16alteredBB:                            ; preds = %originalBB16, %120
  br label %originalBB16

originalBB20alteredBB:                            ; preds = %originalBB20, %137
  %7133 = load i64, i64* %29, align 8, !dbg !2451
  %7134 = load i64, i64* %20, align 8, !dbg !2451
  %7135 = icmp ult i64 %7133, %7134, !dbg !2451
  br label %originalBB20

originalBB24alteredBB:                            ; preds = %originalBB24, %157
  %7136 = load i8*, i8** %19, align 8, !dbg !2451
  %7137 = load i64, i64* %29, align 8, !dbg !2451
  %7138 = getelementptr inbounds i8, i8* %7136, i64 %7137, !dbg !2451
  store i8 34, i8* %7138, align 1, !dbg !2451
  br label %originalBB24

originalBB28alteredBB:                            ; preds = %originalBB28, %177
  %7139 = load i64, i64* %29, align 8, !dbg !2454
  %_29 = sub i64 %7139, 1
  %gen30 = mul i64 %_29, 1
  %7140 = add i64 %7139, 1, !dbg !2454
  store i64 %7140, i64* %29, align 8, !dbg !2454
  br label %originalBB28

originalBB34alteredBB:                            ; preds = %originalBB34, %196
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %213
  store i8 1, i8* %33, align 1, !dbg !2455
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.85, i64 0, i64 0), i8** %31, align 8, !dbg !2456
  store i64 1, i64* %32, align 8, !dbg !2457
  br label %originalBB38

originalBB42alteredBB:                            ; preds = %originalBB42, %230
  store i8 1, i8* %33, align 1, !dbg !2459
  store i8 0, i8* %35, align 1, !dbg !2460
  br label %originalBB42

originalBB46alteredBB:                            ; preds = %originalBB46, %247
  %7141 = load i32, i32* %23, align 4, !dbg !2462
  %7142 = icmp ne i32 %7141, 10, !dbg !2465
  br label %originalBB46

originalBB50alteredBB:                            ; preds = %originalBB50, %266
  %7143 = load i32, i32* %23, align 4, !dbg !2467
  %7144 = call i8* @gettext_quote(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11.86, i64 0, i64 0), i32 %7143), !dbg !2469
  store i8* %7144, i8** %26, align 8, !dbg !2470
  %7145 = load i32, i32* %23, align 4, !dbg !2471
  %7146 = call i8* @gettext_quote(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.87, i64 0, i64 0), i32 %7145), !dbg !2472
  store i8* %7146, i8** %27, align 8, !dbg !2473
  br label %originalBB50

originalBB54alteredBB:                            ; preds = %originalBB54, %287
  %7147 = load i8, i8* %35, align 1, !dbg !2475
  %7148 = trunc i8 %7147 to i1, !dbg !2475
  br label %originalBB54

originalBB58alteredBB:                            ; preds = %originalBB58, %306
  %7149 = load i8*, i8** %26, align 8, !dbg !2478
  store i8* %7149, i8** %31, align 8, !dbg !2480
  br label %originalBB58

originalBB62alteredBB:                            ; preds = %originalBB62, %324
  %7150 = load i8*, i8** %31, align 8, !dbg !2482
  %7151 = load i8, i8* %7150, align 1, !dbg !2484
  %7152 = icmp ne i8 %7151, 0, !dbg !2485
  br label %originalBB62

originalBB66alteredBB:                            ; preds = %originalBB66, %344
  br label %originalBB66

originalBB70alteredBB:                            ; preds = %originalBB70, %361
  %7153 = load i64, i64* %29, align 8, !dbg !2487
  %7154 = load i64, i64* %20, align 8, !dbg !2487
  %7155 = icmp ult i64 %7153, %7154, !dbg !2487
  br label %originalBB70

originalBB74alteredBB:                            ; preds = %originalBB74, %381
  %7156 = load i8*, i8** %31, align 8, !dbg !2487
  %7157 = load i8, i8* %7156, align 1, !dbg !2487
  %7158 = load i8*, i8** %19, align 8, !dbg !2487
  %7159 = load i64, i64* %29, align 8, !dbg !2487
  %7160 = getelementptr inbounds i8, i8* %7158, i64 %7159, !dbg !2487
  store i8 %7157, i8* %7160, align 1, !dbg !2487
  br label %originalBB74

originalBB78alteredBB:                            ; preds = %originalBB78, %403
  %7161 = load i64, i64* %29, align 8, !dbg !2490
  %_79 = sub i64 0, %7161
  %gen80 = add i64 %_79, 1
  %7162 = add i64 %7161, 1, !dbg !2490
  store i64 %7162, i64* %29, align 8, !dbg !2490
  br label %originalBB78

originalBB84alteredBB:                            ; preds = %originalBB84, %422
  br label %originalBB84

originalBB88alteredBB:                            ; preds = %originalBB88, %439
  %7163 = load i8*, i8** %31, align 8, !dbg !2491
  %7164 = getelementptr inbounds i8, i8* %7163, i32 1, !dbg !2491
  store i8* %7164, i8** %31, align 8, !dbg !2491
  br label %originalBB88

originalBB92alteredBB:                            ; preds = %originalBB92, %458
  br label %originalBB92

originalBB96alteredBB:                            ; preds = %originalBB96, %475
  store i8 1, i8* %33, align 1, !dbg !2495
  %7165 = load i8*, i8** %27, align 8, !dbg !2496
  store i8* %7165, i8** %31, align 8, !dbg !2497
  %7166 = load i8*, i8** %31, align 8, !dbg !2498
  %7167 = call i64 @strlen(i8* %7166) #13, !dbg !2499
  store i64 %7167, i64* %32, align 8, !dbg !2500
  br label %originalBB96

originalBB100alteredBB:                           ; preds = %originalBB100, %495
  store i8 1, i8* %33, align 1, !dbg !2502
  br label %originalBB100

originalBB104alteredBB:                           ; preds = %originalBB104, %512
  store i8 1, i8* %35, align 1, !dbg !2504
  br label %originalBB104

originalBB108alteredBB:                           ; preds = %originalBB108, %529
  %7168 = load i8, i8* %35, align 1, !dbg !2506
  %7169 = trunc i8 %7168 to i1, !dbg !2506
  br label %originalBB108

originalBB112alteredBB:                           ; preds = %originalBB112, %548
  store i8 1, i8* %33, align 1, !dbg !2509
  br label %originalBB112

originalBB116alteredBB:                           ; preds = %originalBB116, %565
  br label %originalBB116

originalBB120alteredBB:                           ; preds = %originalBB120, %582
  store i32 2, i32* %23, align 4, !dbg !2512
  %7170 = load i8, i8* %35, align 1, !dbg !2513
  %7171 = trunc i8 %7170 to i1, !dbg !2513
  br label %originalBB120

originalBB124alteredBB:                           ; preds = %originalBB124, %601
  br label %originalBB124

originalBB128alteredBB:                           ; preds = %originalBB128, %618
  %7172 = load i64, i64* %29, align 8, !dbg !2517
  %7173 = load i64, i64* %20, align 8, !dbg !2517
  %7174 = icmp ult i64 %7172, %7173, !dbg !2517
  br label %originalBB128

originalBB132alteredBB:                           ; preds = %originalBB132, %638
  %7175 = load i8*, i8** %19, align 8, !dbg !2517
  %7176 = load i64, i64* %29, align 8, !dbg !2517
  %7177 = getelementptr inbounds i8, i8* %7175, i64 %7176, !dbg !2517
  store i8 39, i8* %7177, align 1, !dbg !2517
  br label %originalBB132

originalBB136alteredBB:                           ; preds = %originalBB136, %658
  %7178 = load i64, i64* %29, align 8, !dbg !2520
  %_137 = shl i64 %7178, 1
  %7179 = add i64 %7178, 1, !dbg !2520
  store i64 %7179, i64* %29, align 8, !dbg !2520
  br label %originalBB136

originalBB141alteredBB:                           ; preds = %originalBB141, %677
  br label %originalBB141

originalBB145alteredBB:                           ; preds = %originalBB145, %694
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.87, i64 0, i64 0), i8** %31, align 8, !dbg !2521
  store i64 1, i64* %32, align 8, !dbg !2522
  br label %originalBB145

originalBB149alteredBB:                           ; preds = %originalBB149, %711
  store i8 0, i8* %35, align 1, !dbg !2524
  br label %originalBB149

originalBB153alteredBB:                           ; preds = %originalBB153, %728
  call void @abort() #12, !dbg !2526
  br label %originalBB153

originalBB157alteredBB:                           ; preds = %originalBB157, %745
  store i64 0, i64* %28, align 8, !dbg !2527
  br label %originalBB157

originalBB161alteredBB:                           ; preds = %originalBB161, %762
  %7180 = load i64, i64* %22, align 8, !dbg !2530
  %7181 = icmp eq i64 %7180, -1, !dbg !2532
  br label %originalBB161

originalBB165alteredBB:                           ; preds = %originalBB165, %781
  %7182 = load i8*, i8** %21, align 8, !dbg !2533
  %7183 = load i64, i64* %28, align 8, !dbg !2534
  %7184 = getelementptr inbounds i8, i8* %7182, i64 %7183, !dbg !2533
  %7185 = load i8, i8* %7184, align 1, !dbg !2533
  %7186 = sext i8 %7185 to i32, !dbg !2533
  %7187 = icmp eq i32 %7186, 0, !dbg !2535
  %7188 = zext i1 %7187 to i32, !dbg !2535
  br label %originalBB165

originalBB169alteredBB:                           ; preds = %originalBB169, %805
  %7189 = load i64, i64* %28, align 8, !dbg !2536
  %7190 = load i64, i64* %22, align 8, !dbg !2537
  %7191 = icmp eq i64 %7189, %7190, !dbg !2538
  %7192 = zext i1 %7191 to i32, !dbg !2538
  br label %originalBB169

originalBB173alteredBB:                           ; preds = %originalBB173, %826
  %7193 = icmp ne i32 %827, 0, !dbg !2539
  %_174 = sub i1 %7193, true
  %gen175 = mul i1 %_174, true
  %_176 = shl i1 %7193, true
  %_177 = shl i1 %7193, true
  %_178 = sub i1 %7193, true
  %gen179 = mul i1 %_178, true
  %_180 = sub i1 %7193, true
  %gen181 = mul i1 %_180, true
  %_182 = sub i1 false, %7193
  %gen183 = add i1 %_182, true
  %_184 = shl i1 %7193, true
  %_185 = sub i1 %7193, true
  %gen186 = mul i1 %_185, true
  %_187 = sub i1 false, %7193
  %gen188 = add i1 %_187, true
  %7194 = xor i1 %7193, true, !dbg !2539
  br label %originalBB173

originalBB192alteredBB:                           ; preds = %originalBB192, %846
  store i8 0, i8* %41, align 1, !dbg !2547
  call void @llvm.dbg.declare(metadata !4, metadata !3325, metadata !DIExpression()), !dbg !2549
  store i8 0, i8* %42, align 1, !dbg !2549
  call void @llvm.dbg.declare(metadata !4, metadata !3360, metadata !DIExpression()), !dbg !2551
  store i8 0, i8* %43, align 1, !dbg !2551
  %7195 = load i8, i8* %33, align 1, !dbg !2552
  %7196 = trunc i8 %7195 to i1, !dbg !2552
  br label %originalBB192

originalBB196alteredBB:                           ; preds = %originalBB196, %865
  %7197 = load i32, i32* %23, align 4, !dbg !2555
  %7198 = icmp ne i32 %7197, 2, !dbg !2556
  br label %originalBB196

originalBB200alteredBB:                           ; preds = %originalBB200, %884
  %7199 = load i64, i64* %32, align 8, !dbg !2558
  %7200 = icmp ne i64 %7199, 0, !dbg !2558
  br label %originalBB200

originalBB204alteredBB:                           ; preds = %originalBB204, %903
  %7201 = load i64, i64* %28, align 8, !dbg !2560
  %7202 = load i64, i64* %32, align 8, !dbg !2561
  %_205 = sub i64 0, %7201
  %gen206 = add i64 %_205, %7202
  %_207 = shl i64 %7201, %7202
  %_208 = sub i64 0, %7201
  %gen209 = add i64 %_208, %7202
  %7203 = add i64 %7201, %7202, !dbg !2562
  %7204 = load i64, i64* %22, align 8, !dbg !2563
  %7205 = icmp eq i64 %7204, -1, !dbg !2564
  br label %originalBB204

originalBB213alteredBB:                           ; preds = %originalBB213, %925
  %7206 = load i64, i64* %32, align 8, !dbg !2566
  %7207 = icmp ult i64 1, %7206, !dbg !2567
  br label %originalBB213

originalBB217alteredBB:                           ; preds = %originalBB217, %944
  %7208 = load i8*, i8** %21, align 8, !dbg !2568
  %7209 = call i64 @strlen(i8* %7208) #13, !dbg !2569
  store i64 %7209, i64* %22, align 8, !dbg !2570
  br label %originalBB217

originalBB221alteredBB:                           ; preds = %originalBB221, %963
  %7210 = load i64, i64* %22, align 8, !dbg !2571
  br label %originalBB221

originalBB225alteredBB:                           ; preds = %originalBB225, %981
  %7211 = icmp ule i64 %914, %982, !dbg !2572
  br label %originalBB225

originalBB229alteredBB:                           ; preds = %originalBB229, %1000
  %7212 = load i8*, i8** %21, align 8, !dbg !2574
  %7213 = load i64, i64* %28, align 8, !dbg !2575
  %7214 = getelementptr inbounds i8, i8* %7212, i64 %7213, !dbg !2576
  %7215 = load i8*, i8** %31, align 8, !dbg !2577
  %7216 = load i64, i64* %32, align 8, !dbg !2578
  %7217 = call i32 @memcmp(i8* %7214, i8* %7215, i64 %7216) #13, !dbg !2579
  %7218 = icmp eq i32 %7217, 0, !dbg !2580
  br label %originalBB229

originalBB233alteredBB:                           ; preds = %originalBB233, %1024
  %7219 = load i8, i8* %35, align 1, !dbg !2582
  %7220 = trunc i8 %7219 to i1, !dbg !2582
  br label %originalBB233

originalBB237alteredBB:                           ; preds = %originalBB237, %1043
  br label %originalBB237

originalBB241alteredBB:                           ; preds = %originalBB241, %1060
  store i8 1, i8* %41, align 1, !dbg !2587
  br label %originalBB241

originalBB245alteredBB:                           ; preds = %originalBB245, %1077
  %7221 = load i8*, i8** %21, align 8, !dbg !2589
  %7222 = load i64, i64* %28, align 8, !dbg !2590
  %7223 = getelementptr inbounds i8, i8* %7221, i64 %7222, !dbg !2589
  %7224 = load i8, i8* %7223, align 1, !dbg !2589
  store i8 %7224, i8* %39, align 1, !dbg !2591
  %7225 = load i8, i8* %39, align 1, !dbg !2592
  %7226 = zext i8 %7225 to i32, !dbg !2592
  br label %originalBB245

originalBB249alteredBB:                           ; preds = %originalBB249, %1100
  %7227 = load i8, i8* %33, align 1, !dbg !2594
  %7228 = trunc i8 %7227 to i1, !dbg !2594
  br label %originalBB249

originalBB253alteredBB:                           ; preds = %originalBB253, %1119
  br label %originalBB253

originalBB257alteredBB:                           ; preds = %originalBB257, %1136
  %7229 = load i8, i8* %35, align 1, !dbg !2600
  %7230 = trunc i8 %7229 to i1, !dbg !2600
  br label %originalBB257

originalBB261alteredBB:                           ; preds = %originalBB261, %1155
  br label %originalBB261

originalBB265alteredBB:                           ; preds = %originalBB265, %1172
  store i8 1, i8* %42, align 1, !dbg !2603
  %7231 = load i32, i32* %23, align 4, !dbg !2604
  %7232 = icmp eq i32 %7231, 2, !dbg !2604
  br label %originalBB265

originalBB269alteredBB:                           ; preds = %originalBB269, %1191
  %7233 = load i8, i8* %36, align 1, !dbg !2604
  %7234 = trunc i8 %7233 to i1, !dbg !2604
  br label %originalBB269

originalBB273alteredBB:                           ; preds = %originalBB273, %1210
  br label %originalBB273

originalBB277alteredBB:                           ; preds = %originalBB277, %1227
  %7235 = load i64, i64* %29, align 8, !dbg !2608
  %7236 = load i64, i64* %20, align 8, !dbg !2608
  %7237 = icmp ult i64 %7235, %7236, !dbg !2608
  br label %originalBB277

originalBB281alteredBB:                           ; preds = %originalBB281, %1247
  %7238 = load i8*, i8** %19, align 8, !dbg !2608
  %7239 = load i64, i64* %29, align 8, !dbg !2608
  %7240 = getelementptr inbounds i8, i8* %7238, i64 %7239, !dbg !2608
  store i8 39, i8* %7240, align 1, !dbg !2608
  br label %originalBB281

originalBB285alteredBB:                           ; preds = %originalBB285, %1267
  %7241 = load i64, i64* %29, align 8, !dbg !2611
  %_286 = sub i64 0, %7241
  %gen287 = add i64 %_286, 1
  %_288 = sub i64 0, %7241
  %gen289 = add i64 %_288, 1
  %_290 = sub i64 %7241, 1
  %gen291 = mul i64 %_290, 1
  %_292 = sub i64 %7241, 1
  %gen293 = mul i64 %_292, 1
  %_294 = shl i64 %7241, 1
  %_295 = shl i64 %7241, 1
  %7242 = add i64 %7241, 1, !dbg !2611
  store i64 %7242, i64* %29, align 8, !dbg !2611
  br label %originalBB285

originalBB299alteredBB:                           ; preds = %originalBB299, %1286
  br label %originalBB299

originalBB303alteredBB:                           ; preds = %originalBB303, %1303
  %7243 = load i64, i64* %29, align 8, !dbg !2612
  %7244 = load i64, i64* %20, align 8, !dbg !2612
  %7245 = icmp ult i64 %7243, %7244, !dbg !2612
  br label %originalBB303

originalBB307alteredBB:                           ; preds = %originalBB307, %1323
  %7246 = load i8*, i8** %19, align 8, !dbg !2612
  %7247 = load i64, i64* %29, align 8, !dbg !2612
  %7248 = getelementptr inbounds i8, i8* %7246, i64 %7247, !dbg !2612
  store i8 36, i8* %7248, align 1, !dbg !2612
  br label %originalBB307

originalBB311alteredBB:                           ; preds = %originalBB311, %1343
  %7249 = load i64, i64* %29, align 8, !dbg !2615
  %_312 = sub i64 0, %7249
  %gen313 = add i64 %_312, 1
  %_314 = sub i64 %7249, 1
  %gen315 = mul i64 %_314, 1
  %7250 = add i64 %7249, 1, !dbg !2615
  store i64 %7250, i64* %29, align 8, !dbg !2615
  br label %originalBB311

originalBB319alteredBB:                           ; preds = %originalBB319, %1362
  br label %originalBB319

originalBB323alteredBB:                           ; preds = %originalBB323, %1379
  %7251 = load i64, i64* %29, align 8, !dbg !2616
  %7252 = load i64, i64* %20, align 8, !dbg !2616
  %7253 = icmp ult i64 %7251, %7252, !dbg !2616
  br label %originalBB323

originalBB327alteredBB:                           ; preds = %originalBB327, %1399
  %7254 = load i8*, i8** %19, align 8, !dbg !2616
  %7255 = load i64, i64* %29, align 8, !dbg !2616
  %7256 = getelementptr inbounds i8, i8* %7254, i64 %7255, !dbg !2616
  store i8 39, i8* %7256, align 1, !dbg !2616
  br label %originalBB327

originalBB331alteredBB:                           ; preds = %originalBB331, %1419
  %7257 = load i64, i64* %29, align 8, !dbg !2619
  %_332 = shl i64 %7257, 1
  %7258 = add i64 %7257, 1, !dbg !2619
  store i64 %7258, i64* %29, align 8, !dbg !2619
  br label %originalBB331

originalBB336alteredBB:                           ; preds = %originalBB336, %1438
  store i8 1, i8* %36, align 1, !dbg !2606
  br label %originalBB336

originalBB340alteredBB:                           ; preds = %originalBB340, %1455
  br label %originalBB340

originalBB344alteredBB:                           ; preds = %originalBB344, %1472
  %7259 = load i64, i64* %29, align 8, !dbg !2620
  %7260 = load i64, i64* %20, align 8, !dbg !2620
  %7261 = icmp ult i64 %7259, %7260, !dbg !2620
  br label %originalBB344

originalBB348alteredBB:                           ; preds = %originalBB348, %1492
  %7262 = load i8*, i8** %19, align 8, !dbg !2620
  %7263 = load i64, i64* %29, align 8, !dbg !2620
  %7264 = getelementptr inbounds i8, i8* %7262, i64 %7263, !dbg !2620
  store i8 92, i8* %7264, align 1, !dbg !2620
  br label %originalBB348

originalBB352alteredBB:                           ; preds = %originalBB352, %1512
  %7265 = load i64, i64* %29, align 8, !dbg !2623
  %_353 = shl i64 %7265, 1
  %_354 = shl i64 %7265, 1
  %_355 = sub i64 %7265, 1
  %gen356 = mul i64 %_355, 1
  %_357 = shl i64 %7265, 1
  %_358 = sub i64 0, %7265
  %gen359 = add i64 %_358, 1
  %7266 = add i64 %7265, 1, !dbg !2623
  store i64 %7266, i64* %29, align 8, !dbg !2623
  br label %originalBB352

originalBB363alteredBB:                           ; preds = %originalBB363, %1531
  br label %originalBB363

originalBB367alteredBB:                           ; preds = %originalBB367, %1548
  %7267 = load i32, i32* %23, align 4, !dbg !2624
  %7268 = icmp ne i32 %7267, 2, !dbg !2626
  br label %originalBB367

originalBB371alteredBB:                           ; preds = %originalBB371, %1567
  %7269 = load i64, i64* %28, align 8, !dbg !2628
  %_372 = shl i64 %7269, 1
  %7270 = add i64 %7269, 1, !dbg !2629
  %7271 = load i64, i64* %22, align 8, !dbg !2630
  %7272 = icmp ult i64 %7270, %7271, !dbg !2631
  br label %originalBB371

originalBB376alteredBB:                           ; preds = %originalBB376, %1588
  %7273 = load i8*, i8** %21, align 8, !dbg !2633
  %7274 = load i64, i64* %28, align 8, !dbg !2634
  %_377 = shl i64 %7274, 1
  %_378 = sub i64 0, %7274
  %gen379 = add i64 %_378, 1
  %_380 = sub i64 %7274, 1
  %gen381 = mul i64 %_380, 1
  %_382 = sub i64 %7274, 1
  %gen383 = mul i64 %_382, 1
  %7275 = add i64 %7274, 1, !dbg !2635
  %7276 = getelementptr inbounds i8, i8* %7273, i64 %7275, !dbg !2633
  %7277 = load i8, i8* %7276, align 1, !dbg !2633
  %7278 = sext i8 %7277 to i32, !dbg !2633
  %7279 = icmp sle i32 48, %7278, !dbg !2636
  br label %originalBB376

originalBB387alteredBB:                           ; preds = %originalBB387, %1612
  %7280 = load i8*, i8** %21, align 8, !dbg !2638
  %7281 = load i64, i64* %28, align 8, !dbg !2639
  %_388 = sub i64 0, %7281
  %gen389 = add i64 %_388, 1
  %_390 = shl i64 %7281, 1
  %_391 = sub i64 0, %7281
  %gen392 = add i64 %_391, 1
  %_393 = sub i64 %7281, 1
  %gen394 = mul i64 %_393, 1
  %_395 = shl i64 %7281, 1
  %_396 = sub i64 %7281, 1
  %gen397 = mul i64 %_396, 1
  %7282 = add i64 %7281, 1, !dbg !2640
  %7283 = getelementptr inbounds i8, i8* %7280, i64 %7282, !dbg !2638
  %7284 = load i8, i8* %7283, align 1, !dbg !2638
  %7285 = sext i8 %7284 to i32, !dbg !2638
  %7286 = icmp sle i32 %7285, 57, !dbg !2641
  br label %originalBB387

originalBB401alteredBB:                           ; preds = %originalBB401, %1636
  br label %originalBB401

originalBB405alteredBB:                           ; preds = %originalBB405, %1653
  %7287 = load i64, i64* %29, align 8, !dbg !2645
  %7288 = load i64, i64* %20, align 8, !dbg !2645
  %7289 = icmp ult i64 %7287, %7288, !dbg !2645
  br label %originalBB405

originalBB409alteredBB:                           ; preds = %originalBB409, %1673
  %7290 = load i8*, i8** %19, align 8, !dbg !2645
  %7291 = load i64, i64* %29, align 8, !dbg !2645
  %7292 = getelementptr inbounds i8, i8* %7290, i64 %7291, !dbg !2645
  store i8 48, i8* %7292, align 1, !dbg !2645
  br label %originalBB409

originalBB413alteredBB:                           ; preds = %originalBB413, %1693
  %7293 = load i64, i64* %29, align 8, !dbg !2648
  %_414 = shl i64 %7293, 1
  %_415 = sub i64 0, %7293
  %gen416 = add i64 %_415, 1
  %_417 = sub i64 0, %7293
  %gen418 = add i64 %_417, 1
  %_419 = shl i64 %7293, 1
  %7294 = add i64 %7293, 1, !dbg !2648
  store i64 %7294, i64* %29, align 8, !dbg !2648
  br label %originalBB413

originalBB423alteredBB:                           ; preds = %originalBB423, %1712
  br label %originalBB423

originalBB427alteredBB:                           ; preds = %originalBB427, %1729
  %7295 = load i64, i64* %29, align 8, !dbg !2650
  %7296 = load i64, i64* %20, align 8, !dbg !2650
  %7297 = icmp ult i64 %7295, %7296, !dbg !2650
  br label %originalBB427

originalBB431alteredBB:                           ; preds = %originalBB431, %1749
  %7298 = load i8*, i8** %19, align 8, !dbg !2650
  %7299 = load i64, i64* %29, align 8, !dbg !2650
  %7300 = getelementptr inbounds i8, i8* %7298, i64 %7299, !dbg !2650
  store i8 48, i8* %7300, align 1, !dbg !2650
  br label %originalBB431

originalBB435alteredBB:                           ; preds = %originalBB435, %1769
  %7301 = load i64, i64* %29, align 8, !dbg !2653
  %_436 = shl i64 %7301, 1
  %_437 = sub i64 0, %7301
  %gen438 = add i64 %_437, 1
  %_439 = shl i64 %7301, 1
  %_440 = sub i64 %7301, 1
  %gen441 = mul i64 %_440, 1
  %_442 = sub i64 0, %7301
  %gen443 = add i64 %_442, 1
  %_444 = sub i64 0, %7301
  %gen445 = add i64 %_444, 1
  %_446 = sub i64 0, %7301
  %gen447 = add i64 %_446, 1
  %7302 = add i64 %7301, 1, !dbg !2653
  store i64 %7302, i64* %29, align 8, !dbg !2653
  br label %originalBB435

originalBB451alteredBB:                           ; preds = %originalBB451, %1788
  br label %originalBB451

originalBB455alteredBB:                           ; preds = %originalBB455, %1805
  store i8 48, i8* %39, align 1, !dbg !2655
  br label %originalBB455

originalBB459alteredBB:                           ; preds = %originalBB459, %1822
  %7303 = load i32, i32* %24, align 4, !dbg !2657
  %_460 = shl i32 %7303, 1
  %_461 = sub i32 0, %7303
  %gen462 = add i32 %_461, 1
  %_463 = sub i32 0, %7303
  %gen464 = add i32 %_463, 1
  %_465 = sub i32 %7303, 1
  %gen466 = mul i32 %_465, 1
  %_467 = shl i32 %7303, 1
  %_468 = sub i32 %7303, 1
  %gen469 = mul i32 %_468, 1
  %7304 = and i32 %7303, 1, !dbg !2659
  %7305 = icmp ne i32 %7304, 0, !dbg !2659
  br label %originalBB459

originalBB473alteredBB:                           ; preds = %originalBB473, %1842
  br label %originalBB473

originalBB477alteredBB:                           ; preds = %originalBB477, %1859
  br label %originalBB477

originalBB481alteredBB:                           ; preds = %originalBB481, %1876
  br label %originalBB481

originalBB485alteredBB:                           ; preds = %originalBB485, %1893
  %7306 = load i32, i32* %23, align 4, !dbg !2663
  br label %originalBB485

originalBB489alteredBB:                           ; preds = %originalBB489, %1911
  %7307 = load i8, i8* %35, align 1, !dbg !2665
  %7308 = trunc i8 %7307 to i1, !dbg !2665
  br label %originalBB489

originalBB493alteredBB:                           ; preds = %originalBB493, %1930
  br label %originalBB493

originalBB497alteredBB:                           ; preds = %originalBB497, %1947
  br label %originalBB497

originalBB501alteredBB:                           ; preds = %originalBB501, %1964
  %7309 = load i32, i32* %24, align 4, !dbg !2671
  %_502 = sub i32 %7309, 4
  %gen503 = mul i32 %_502, 4
  %_504 = shl i32 %7309, 4
  %7310 = and i32 %7309, 4, !dbg !2673
  %7311 = icmp ne i32 %7310, 0, !dbg !2673
  br label %originalBB501

originalBB508alteredBB:                           ; preds = %originalBB508, %1984
  %7312 = load i64, i64* %28, align 8, !dbg !2675
  %_509 = sub i64 %7312, 2
  %gen510 = mul i64 %_509, 2
  %_511 = shl i64 %7312, 2
  %_512 = sub i64 %7312, 2
  %gen513 = mul i64 %_512, 2
  %_514 = sub i64 %7312, 2
  %gen515 = mul i64 %_514, 2
  %_516 = shl i64 %7312, 2
  %_517 = shl i64 %7312, 2
  %_518 = sub i64 0, %7312
  %gen519 = add i64 %_518, 2
  %7313 = add i64 %7312, 2, !dbg !2676
  %7314 = load i64, i64* %22, align 8, !dbg !2677
  %7315 = icmp ult i64 %7313, %7314, !dbg !2678
  br label %originalBB508

originalBB523alteredBB:                           ; preds = %originalBB523, %2005
  %7316 = load i8*, i8** %21, align 8, !dbg !2680
  %7317 = load i64, i64* %28, align 8, !dbg !2681
  %_524 = sub i64 0, %7317
  %gen525 = add i64 %_524, 1
  %_526 = sub i64 0, %7317
  %gen527 = add i64 %_526, 1
  %_528 = sub i64 0, %7317
  %gen529 = add i64 %_528, 1
  %7318 = add i64 %7317, 1, !dbg !2682
  %7319 = getelementptr inbounds i8, i8* %7316, i64 %7318, !dbg !2680
  %7320 = load i8, i8* %7319, align 1, !dbg !2680
  %7321 = sext i8 %7320 to i32, !dbg !2680
  %7322 = icmp eq i32 %7321, 63, !dbg !2683
  br label %originalBB523

originalBB533alteredBB:                           ; preds = %originalBB533, %2029
  %7323 = load i8*, i8** %21, align 8, !dbg !2685
  %7324 = load i64, i64* %28, align 8, !dbg !2686
  %_534 = sub i64 0, %7324
  %gen535 = add i64 %_534, 2
  %_536 = sub i64 %7324, 2
  %gen537 = mul i64 %_536, 2
  %_538 = shl i64 %7324, 2
  %_539 = sub i64 0, %7324
  %gen540 = add i64 %_539, 2
  %7325 = add i64 %7324, 2, !dbg !2687
  %7326 = getelementptr inbounds i8, i8* %7323, i64 %7325, !dbg !2685
  %7327 = load i8, i8* %7326, align 1, !dbg !2685
  %7328 = sext i8 %7327 to i32, !dbg !2685
  br label %originalBB533

originalBB544alteredBB:                           ; preds = %originalBB544, %2052
  %7329 = load i8, i8* %35, align 1, !dbg !2689
  %7330 = trunc i8 %7329 to i1, !dbg !2689
  br label %originalBB544

originalBB548alteredBB:                           ; preds = %originalBB548, %2071
  br label %originalBB548

originalBB552alteredBB:                           ; preds = %originalBB552, %2088
  %7331 = load i8*, i8** %21, align 8, !dbg !2694
  %7332 = load i64, i64* %28, align 8, !dbg !2695
  %_553 = sub i64 0, %7332
  %gen554 = add i64 %_553, 2
  %7333 = add i64 %7332, 2, !dbg !2696
  %7334 = getelementptr inbounds i8, i8* %7331, i64 %7333, !dbg !2694
  %7335 = load i8, i8* %7334, align 1, !dbg !2694
  store i8 %7335, i8* %39, align 1, !dbg !2697
  %7336 = load i64, i64* %28, align 8, !dbg !2698
  %_555 = sub i64 %7336, 2
  %gen556 = mul i64 %_555, 2
  %_557 = sub i64 %7336, 2
  %gen558 = mul i64 %_557, 2
  %_559 = sub i64 0, %7336
  %gen560 = add i64 %_559, 2
  %_561 = shl i64 %7336, 2
  %7337 = add i64 %7336, 2, !dbg !2698
  store i64 %7337, i64* %28, align 8, !dbg !2698
  br label %originalBB552

originalBB565alteredBB:                           ; preds = %originalBB565, %2112
  %7338 = load i64, i64* %29, align 8, !dbg !2700
  %7339 = load i64, i64* %20, align 8, !dbg !2700
  %7340 = icmp ult i64 %7338, %7339, !dbg !2700
  br label %originalBB565

originalBB569alteredBB:                           ; preds = %originalBB569, %2132
  %7341 = load i8*, i8** %19, align 8, !dbg !2700
  %7342 = load i64, i64* %29, align 8, !dbg !2700
  %7343 = getelementptr inbounds i8, i8* %7341, i64 %7342, !dbg !2700
  store i8 63, i8* %7343, align 1, !dbg !2700
  br label %originalBB569

originalBB573alteredBB:                           ; preds = %originalBB573, %2152
  %7344 = load i64, i64* %29, align 8, !dbg !2703
  %_574 = sub i64 0, %7344
  %gen575 = add i64 %_574, 1
  %_576 = sub i64 0, %7344
  %gen577 = add i64 %_576, 1
  %_578 = shl i64 %7344, 1
  %_579 = sub i64 0, %7344
  %gen580 = add i64 %_579, 1
  %_581 = sub i64 %7344, 1
  %gen582 = mul i64 %_581, 1
  %_583 = sub i64 0, %7344
  %gen584 = add i64 %_583, 1
  %_585 = shl i64 %7344, 1
  %_586 = sub i64 %7344, 1
  %gen587 = mul i64 %_586, 1
  %_588 = shl i64 %7344, 1
  %7345 = add i64 %7344, 1, !dbg !2703
  store i64 %7345, i64* %29, align 8, !dbg !2703
  br label %originalBB573

originalBB592alteredBB:                           ; preds = %originalBB592, %2171
  br label %originalBB592

originalBB596alteredBB:                           ; preds = %originalBB596, %2188
  %7346 = load i64, i64* %29, align 8, !dbg !2705
  %7347 = load i64, i64* %20, align 8, !dbg !2705
  %7348 = icmp ult i64 %7346, %7347, !dbg !2705
  br label %originalBB596

originalBB600alteredBB:                           ; preds = %originalBB600, %2208
  %7349 = load i8*, i8** %19, align 8, !dbg !2705
  %7350 = load i64, i64* %29, align 8, !dbg !2705
  %7351 = getelementptr inbounds i8, i8* %7349, i64 %7350, !dbg !2705
  store i8 34, i8* %7351, align 1, !dbg !2705
  br label %originalBB600

originalBB604alteredBB:                           ; preds = %originalBB604, %2228
  %7352 = load i64, i64* %29, align 8, !dbg !2708
  %_605 = sub i64 %7352, 1
  %gen606 = mul i64 %_605, 1
  %_607 = shl i64 %7352, 1
  %_608 = sub i64 %7352, 1
  %gen609 = mul i64 %_608, 1
  %_610 = shl i64 %7352, 1
  %_611 = sub i64 %7352, 1
  %gen612 = mul i64 %_611, 1
  %_613 = sub i64 %7352, 1
  %gen614 = mul i64 %_613, 1
  %7353 = add i64 %7352, 1, !dbg !2708
  store i64 %7353, i64* %29, align 8, !dbg !2708
  br label %originalBB604

originalBB618alteredBB:                           ; preds = %originalBB618, %2247
  br label %originalBB618

originalBB622alteredBB:                           ; preds = %originalBB622, %2264
  %7354 = load i64, i64* %29, align 8, !dbg !2710
  %7355 = load i64, i64* %20, align 8, !dbg !2710
  %7356 = icmp ult i64 %7354, %7355, !dbg !2710
  br label %originalBB622

originalBB626alteredBB:                           ; preds = %originalBB626, %2284
  %7357 = load i8*, i8** %19, align 8, !dbg !2710
  %7358 = load i64, i64* %29, align 8, !dbg !2710
  %7359 = getelementptr inbounds i8, i8* %7357, i64 %7358, !dbg !2710
  store i8 34, i8* %7359, align 1, !dbg !2710
  br label %originalBB626

originalBB630alteredBB:                           ; preds = %originalBB630, %2304
  %7360 = load i64, i64* %29, align 8, !dbg !2713
  %_631 = shl i64 %7360, 1
  %_632 = sub i64 0, %7360
  %gen633 = add i64 %_632, 1
  %_634 = sub i64 0, %7360
  %gen635 = add i64 %_634, 1
  %_636 = sub i64 %7360, 1
  %gen637 = mul i64 %_636, 1
  %7361 = add i64 %7360, 1, !dbg !2713
  store i64 %7361, i64* %29, align 8, !dbg !2713
  br label %originalBB630

originalBB641alteredBB:                           ; preds = %originalBB641, %2323
  br label %originalBB641

originalBB645alteredBB:                           ; preds = %originalBB645, %2340
  %7362 = load i64, i64* %29, align 8, !dbg !2715
  %7363 = load i64, i64* %20, align 8, !dbg !2715
  %7364 = icmp ult i64 %7362, %7363, !dbg !2715
  br label %originalBB645

originalBB649alteredBB:                           ; preds = %originalBB649, %2360
  %7365 = load i8*, i8** %19, align 8, !dbg !2715
  %7366 = load i64, i64* %29, align 8, !dbg !2715
  %7367 = getelementptr inbounds i8, i8* %7365, i64 %7366, !dbg !2715
  store i8 63, i8* %7367, align 1, !dbg !2715
  br label %originalBB649

originalBB653alteredBB:                           ; preds = %originalBB653, %2380
  %7368 = load i64, i64* %29, align 8, !dbg !2718
  %_654 = sub i64 %7368, 1
  %gen655 = mul i64 %_654, 1
  %_656 = shl i64 %7368, 1
  %_657 = shl i64 %7368, 1
  %_658 = shl i64 %7368, 1
  %_659 = sub i64 0, %7368
  %gen660 = add i64 %_659, 1
  %_661 = shl i64 %7368, 1
  %_662 = shl i64 %7368, 1
  %_663 = sub i64 %7368, 1
  %gen664 = mul i64 %_663, 1
  %7369 = add i64 %7368, 1, !dbg !2718
  store i64 %7369, i64* %29, align 8, !dbg !2718
  br label %originalBB653

originalBB668alteredBB:                           ; preds = %originalBB668, %2399
  br label %originalBB668

originalBB672alteredBB:                           ; preds = %originalBB672, %2416
  br label %originalBB672

originalBB676alteredBB:                           ; preds = %originalBB676, %2433
  br label %originalBB676

originalBB680alteredBB:                           ; preds = %originalBB680, %2450
  br label %originalBB680

originalBB684alteredBB:                           ; preds = %originalBB684, %2467
  br label %originalBB684

originalBB688alteredBB:                           ; preds = %originalBB688, %2484
  br label %originalBB688

originalBB692alteredBB:                           ; preds = %originalBB692, %2501
  store i8 97, i8* %40, align 1, !dbg !2725
  br label %originalBB692

originalBB696alteredBB:                           ; preds = %originalBB696, %2518
  store i8 98, i8* %40, align 1, !dbg !2727
  br label %originalBB696

originalBB700alteredBB:                           ; preds = %originalBB700, %2535
  store i8 102, i8* %40, align 1, !dbg !2729
  br label %originalBB700

originalBB704alteredBB:                           ; preds = %originalBB704, %2552
  store i8 110, i8* %40, align 1, !dbg !2731
  br label %originalBB704

originalBB708alteredBB:                           ; preds = %originalBB708, %2569
  store i8 114, i8* %40, align 1, !dbg !2733
  br label %originalBB708

originalBB712alteredBB:                           ; preds = %originalBB712, %2586
  store i8 116, i8* %40, align 1, !dbg !2735
  br label %originalBB712

originalBB716alteredBB:                           ; preds = %originalBB716, %2603
  store i8 118, i8* %40, align 1, !dbg !2737
  br label %originalBB716

originalBB720alteredBB:                           ; preds = %originalBB720, %2620
  %7370 = load i8, i8* %39, align 1, !dbg !2739
  store i8 %7370, i8* %40, align 1, !dbg !2740
  %7371 = load i32, i32* %23, align 4, !dbg !2741
  %7372 = icmp eq i32 %7371, 2, !dbg !2743
  br label %originalBB720

originalBB724alteredBB:                           ; preds = %originalBB724, %2640
  %7373 = load i8, i8* %35, align 1, !dbg !2745
  %7374 = trunc i8 %7373 to i1, !dbg !2745
  br label %originalBB724

originalBB728alteredBB:                           ; preds = %originalBB728, %2659
  br label %originalBB728

originalBB732alteredBB:                           ; preds = %originalBB732, %2676
  br label %originalBB732

originalBB736alteredBB:                           ; preds = %originalBB736, %2693
  %7375 = load i8, i8* %33, align 1, !dbg !2751
  %7376 = trunc i8 %7375 to i1, !dbg !2751
  br label %originalBB736

originalBB740alteredBB:                           ; preds = %originalBB740, %2712
  %7377 = load i8, i8* %35, align 1, !dbg !2754
  %7378 = trunc i8 %7377 to i1, !dbg !2754
  br label %originalBB740

originalBB744alteredBB:                           ; preds = %originalBB744, %2731
  %7379 = load i64, i64* %32, align 8, !dbg !2756
  %7380 = icmp ne i64 %7379, 0, !dbg !2756
  br label %originalBB744

originalBB748alteredBB:                           ; preds = %originalBB748, %2750
  br label %originalBB748

originalBB752alteredBB:                           ; preds = %originalBB752, %2767
  br label %originalBB752

originalBB756alteredBB:                           ; preds = %originalBB756, %2784
  %7381 = load i32, i32* %23, align 4, !dbg !2761
  %7382 = icmp eq i32 %7381, 2, !dbg !2763
  br label %originalBB756

originalBB760alteredBB:                           ; preds = %originalBB760, %2803
  %7383 = load i8, i8* %35, align 1, !dbg !2765
  %7384 = trunc i8 %7383 to i1, !dbg !2765
  br label %originalBB760

originalBB764alteredBB:                           ; preds = %originalBB764, %2822
  br label %originalBB764

originalBB768alteredBB:                           ; preds = %originalBB768, %2839
  br label %originalBB768

originalBB772alteredBB:                           ; preds = %originalBB772, %2856
  %7385 = load i8, i8* %33, align 1, !dbg !2770
  %7386 = trunc i8 %7385 to i1, !dbg !2770
  br label %originalBB772

originalBB776alteredBB:                           ; preds = %originalBB776, %2875
  %7387 = load i8, i8* %40, align 1, !dbg !2773
  store i8 %7387, i8* %39, align 1, !dbg !2775
  br label %originalBB776

originalBB780alteredBB:                           ; preds = %originalBB780, %2893
  br label %originalBB780

originalBB784alteredBB:                           ; preds = %originalBB784, %2910
  %7388 = load i64, i64* %22, align 8, !dbg !2778
  %7389 = icmp eq i64 %7388, -1, !dbg !2780
  br label %originalBB784

originalBB788alteredBB:                           ; preds = %originalBB788, %2929
  %7390 = load i8*, i8** %21, align 8, !dbg !2782
  %7391 = getelementptr inbounds i8, i8* %7390, i64 1, !dbg !2782
  %7392 = load i8, i8* %7391, align 1, !dbg !2782
  %7393 = sext i8 %7392 to i32, !dbg !2782
  %7394 = icmp eq i32 %7393, 0, !dbg !2783
  br label %originalBB788

originalBB792alteredBB:                           ; preds = %originalBB792, %2951
  %7395 = load i64, i64* %22, align 8, !dbg !2784
  %7396 = icmp eq i64 %7395, 1, !dbg !2785
  br label %originalBB792

originalBB796alteredBB:                           ; preds = %originalBB796, %2970
  br label %originalBB796

originalBB800alteredBB:                           ; preds = %originalBB800, %2987
  br label %originalBB800

originalBB804alteredBB:                           ; preds = %originalBB804, %3004
  %7397 = load i64, i64* %28, align 8, !dbg !2788
  %7398 = icmp ne i64 %7397, 0, !dbg !2790
  br label %originalBB804

originalBB808alteredBB:                           ; preds = %originalBB808, %3023
  br label %originalBB808

originalBB812alteredBB:                           ; preds = %originalBB812, %3040
  br label %originalBB812

originalBB816alteredBB:                           ; preds = %originalBB816, %3057
  store i8 1, i8* %43, align 1, !dbg !2794
  br label %originalBB816

originalBB820alteredBB:                           ; preds = %originalBB820, %3074
  %7399 = load i32, i32* %23, align 4, !dbg !2796
  %7400 = icmp eq i32 %7399, 2, !dbg !2798
  br label %originalBB820

originalBB824alteredBB:                           ; preds = %originalBB824, %3093
  %7401 = load i8, i8* %35, align 1, !dbg !2800
  %7402 = trunc i8 %7401 to i1, !dbg !2800
  br label %originalBB824

originalBB828alteredBB:                           ; preds = %originalBB828, %3112
  br label %originalBB828

originalBB832alteredBB:                           ; preds = %originalBB832, %3129
  br label %originalBB832

originalBB836alteredBB:                           ; preds = %originalBB836, %3146
  store i8 1, i8* %37, align 1, !dbg !2804
  store i8 1, i8* %43, align 1, !dbg !2805
  %7403 = load i32, i32* %23, align 4, !dbg !2806
  %7404 = icmp eq i32 %7403, 2, !dbg !2808
  br label %originalBB836

originalBB840alteredBB:                           ; preds = %originalBB840, %3165
  %7405 = load i8, i8* %35, align 1, !dbg !2810
  %7406 = trunc i8 %7405 to i1, !dbg !2810
  br label %originalBB840

originalBB844alteredBB:                           ; preds = %originalBB844, %3184
  br label %originalBB844

originalBB848alteredBB:                           ; preds = %originalBB848, %3201
  %7407 = load i64, i64* %20, align 8, !dbg !2815
  %7408 = icmp ne i64 %7407, 0, !dbg !2815
  br label %originalBB848

originalBB852alteredBB:                           ; preds = %originalBB852, %3220
  %7409 = load i64, i64* %30, align 8, !dbg !2818
  %7410 = icmp ne i64 %7409, 0, !dbg !2818
  br label %originalBB852

originalBB856alteredBB:                           ; preds = %originalBB856, %3239
  %7411 = load i64, i64* %20, align 8, !dbg !2820
  store i64 %7411, i64* %30, align 8, !dbg !2822
  store i64 0, i64* %20, align 8, !dbg !2823
  br label %originalBB856

originalBB860alteredBB:                           ; preds = %originalBB860, %3257
  br label %originalBB860

originalBB864alteredBB:                           ; preds = %originalBB864, %3274
  %7412 = load i64, i64* %29, align 8, !dbg !2826
  %7413 = load i64, i64* %20, align 8, !dbg !2826
  %7414 = icmp ult i64 %7412, %7413, !dbg !2826
  br label %originalBB864

originalBB868alteredBB:                           ; preds = %originalBB868, %3294
  %7415 = load i8*, i8** %19, align 8, !dbg !2826
  %7416 = load i64, i64* %29, align 8, !dbg !2826
  %7417 = getelementptr inbounds i8, i8* %7415, i64 %7416, !dbg !2826
  store i8 39, i8* %7417, align 1, !dbg !2826
  br label %originalBB868

originalBB872alteredBB:                           ; preds = %originalBB872, %3314
  %7418 = load i64, i64* %29, align 8, !dbg !2829
  %_873 = shl i64 %7418, 1
  %_874 = sub i64 0, %7418
  %gen875 = add i64 %_874, 1
  %_876 = shl i64 %7418, 1
  %_877 = shl i64 %7418, 1
  %_878 = sub i64 0, %7418
  %gen879 = add i64 %_878, 1
  %_880 = shl i64 %7418, 1
  %7419 = add i64 %7418, 1, !dbg !2829
  store i64 %7419, i64* %29, align 8, !dbg !2829
  br label %originalBB872

originalBB884alteredBB:                           ; preds = %originalBB884, %3333
  br label %originalBB884

originalBB888alteredBB:                           ; preds = %originalBB888, %3350
  %7420 = load i64, i64* %29, align 8, !dbg !2831
  %7421 = load i64, i64* %20, align 8, !dbg !2831
  %7422 = icmp ult i64 %7420, %7421, !dbg !2831
  br label %originalBB888

originalBB892alteredBB:                           ; preds = %originalBB892, %3370
  %7423 = load i8*, i8** %19, align 8, !dbg !2831
  %7424 = load i64, i64* %29, align 8, !dbg !2831
  %7425 = getelementptr inbounds i8, i8* %7423, i64 %7424, !dbg !2831
  store i8 92, i8* %7425, align 1, !dbg !2831
  br label %originalBB892

originalBB896alteredBB:                           ; preds = %originalBB896, %3390
  %7426 = load i64, i64* %29, align 8, !dbg !2834
  %_897 = sub i64 0, %7426
  %gen898 = add i64 %_897, 1
  %_899 = sub i64 0, %7426
  %gen900 = add i64 %_899, 1
  %_901 = sub i64 %7426, 1
  %gen902 = mul i64 %_901, 1
  %_903 = sub i64 0, %7426
  %gen904 = add i64 %_903, 1
  %_905 = sub i64 0, %7426
  %gen906 = add i64 %_905, 1
  %_907 = sub i64 0, %7426
  %gen908 = add i64 %_907, 1
  %_909 = sub i64 %7426, 1
  %gen910 = mul i64 %_909, 1
  %_911 = sub i64 0, %7426
  %gen912 = add i64 %_911, 1
  %7427 = add i64 %7426, 1, !dbg !2834
  store i64 %7427, i64* %29, align 8, !dbg !2834
  br label %originalBB896

originalBB916alteredBB:                           ; preds = %originalBB916, %3409
  br label %originalBB916

originalBB920alteredBB:                           ; preds = %originalBB920, %3426
  %7428 = load i64, i64* %29, align 8, !dbg !2836
  %7429 = load i64, i64* %20, align 8, !dbg !2836
  %7430 = icmp ult i64 %7428, %7429, !dbg !2836
  br label %originalBB920

originalBB924alteredBB:                           ; preds = %originalBB924, %3446
  %7431 = load i8*, i8** %19, align 8, !dbg !2836
  %7432 = load i64, i64* %29, align 8, !dbg !2836
  %7433 = getelementptr inbounds i8, i8* %7431, i64 %7432, !dbg !2836
  store i8 39, i8* %7433, align 1, !dbg !2836
  br label %originalBB924

originalBB928alteredBB:                           ; preds = %originalBB928, %3466
  %7434 = load i64, i64* %29, align 8, !dbg !2839
  %_929 = shl i64 %7434, 1
  %_930 = sub i64 0, %7434
  %gen931 = add i64 %_930, 1
  %_932 = shl i64 %7434, 1
  %7435 = add i64 %7434, 1, !dbg !2839
  store i64 %7435, i64* %29, align 8, !dbg !2839
  br label %originalBB928

originalBB936alteredBB:                           ; preds = %originalBB936, %3485
  store i8 0, i8* %36, align 1, !dbg !2840
  br label %originalBB936

originalBB940alteredBB:                           ; preds = %originalBB940, %3502
  br label %originalBB940

originalBB944alteredBB:                           ; preds = %originalBB944, %3519
  store i8 1, i8* %43, align 1, !dbg !2843
  br label %originalBB944

originalBB948alteredBB:                           ; preds = %originalBB948, %3536
  %7436 = load i8, i8* %34, align 1, !dbg !2850
  %7437 = trunc i8 %7436 to i1, !dbg !2850
  br label %originalBB948

originalBB952alteredBB:                           ; preds = %originalBB952, %3555
  store i64 1, i64* %44, align 8, !dbg !2853
  %7438 = call i16** @__ctype_b_loc() #15, !dbg !2855
  %7439 = load i16*, i16** %7438, align 8, !dbg !2855
  %7440 = load i8, i8* %39, align 1, !dbg !2855
  %7441 = zext i8 %7440 to i32, !dbg !2855
  %7442 = sext i32 %7441 to i64, !dbg !2855
  %7443 = getelementptr inbounds i16, i16* %7439, i64 %7442, !dbg !2855
  %7444 = load i16, i16* %7443, align 2, !dbg !2855
  %7445 = zext i16 %7444 to i32, !dbg !2855
  %_953 = shl i32 %7445, 16384
  %7446 = and i32 %7445, 16384, !dbg !2855
  %7447 = icmp ne i32 %7446, 0, !dbg !2856
  %7448 = zext i1 %7447 to i8, !dbg !2857
  store i8 %7448, i8* %45, align 1, !dbg !2857
  br label %originalBB952

originalBB957alteredBB:                           ; preds = %originalBB957, %3583
  %7449 = bitcast %struct.__mbstate_t* %46 to i8*, !dbg !2877
  call void @llvm.memset.p0i8.i64(i8* align 4 %7449, i8 0, i64 8, i1 false), !dbg !2877
  store i64 0, i64* %44, align 8, !dbg !2878
  store i8 1, i8* %45, align 1, !dbg !2879
  %7450 = load i64, i64* %22, align 8, !dbg !2880
  %7451 = icmp eq i64 %7450, -1, !dbg !2882
  br label %originalBB957

originalBB961alteredBB:                           ; preds = %originalBB961, %3603
  %7452 = load i8*, i8** %21, align 8, !dbg !2884
  %7453 = call i64 @strlen(i8* %7452) #13, !dbg !2885
  store i64 %7453, i64* %22, align 8, !dbg !2886
  br label %originalBB961

originalBB965alteredBB:                           ; preds = %originalBB965, %3622
  br label %originalBB965

originalBB969alteredBB:                           ; preds = %originalBB969, %3639
  %7454 = load i8*, i8** %21, align 8, !dbg !2895
  %7455 = load i64, i64* %28, align 8, !dbg !2896
  %7456 = load i64, i64* %44, align 8, !dbg !2897
  %_970 = sub i64 0, %7455
  %gen971 = add i64 %_970, %7456
  %_972 = sub i64 %7455, %7456
  %gen973 = mul i64 %_972, %7456
  %7457 = add i64 %7455, %7456, !dbg !2898
  %7458 = getelementptr inbounds i8, i8* %7454, i64 %7457, !dbg !2895
  %7459 = load i64, i64* %22, align 8, !dbg !2899
  %7460 = load i64, i64* %28, align 8, !dbg !2900
  %7461 = load i64, i64* %44, align 8, !dbg !2901
  %_974 = sub i64 0, %7460
  %gen975 = add i64 %_974, %7461
  %_976 = sub i64 0, %7460
  %gen977 = add i64 %_976, %7461
  %_978 = sub i64 0, %7460
  %gen979 = add i64 %_978, %7461
  %_980 = shl i64 %7460, %7461
  %7462 = add i64 %7460, %7461, !dbg !2902
  %_981 = sub i64 0, %7459
  %gen982 = add i64 %_981, %7462
  %_983 = sub i64 0, %7459
  %gen984 = add i64 %_983, %7462
  %_985 = shl i64 %7459, %7462
  %_986 = sub i64 0, %7459
  %gen987 = add i64 %_986, %7462
  %_988 = sub i64 0, %7459
  %gen989 = add i64 %_988, %7462
  %_990 = sub i64 0, %7459
  %gen991 = add i64 %_990, %7462
  %7463 = sub i64 %7459, %7462, !dbg !2903
  %7464 = call i64 @rpl_mbrtowc(i32* %47, i8* %7458, i64 %7463, %struct.__mbstate_t* %46), !dbg !2904
  store i64 %7464, i64* %48, align 8, !dbg !2894
  %7465 = load i64, i64* %48, align 8, !dbg !2905
  %7466 = icmp eq i64 %7465, 0, !dbg !2907
  br label %originalBB969

originalBB995alteredBB:                           ; preds = %originalBB995, %3669
  br label %originalBB995

originalBB999alteredBB:                           ; preds = %originalBB999, %3686
  %7467 = load i64, i64* %48, align 8, !dbg !2910
  %7468 = icmp eq i64 %7467, -1, !dbg !2912
  br label %originalBB999

originalBB1003alteredBB:                          ; preds = %originalBB1003, %3705
  store i8 0, i8* %45, align 1, !dbg !2914
  br label %originalBB1003

originalBB1007alteredBB:                          ; preds = %originalBB1007, %3722
  %7469 = load i64, i64* %48, align 8, !dbg !2917
  %7470 = icmp eq i64 %7469, -2, !dbg !2919
  br label %originalBB1007

originalBB1011alteredBB:                          ; preds = %originalBB1011, %3741
  store i8 0, i8* %45, align 1, !dbg !2921
  br label %originalBB1011

originalBB1015alteredBB:                          ; preds = %originalBB1015, %3758
  %7471 = load i64, i64* %28, align 8, !dbg !2924
  %7472 = load i64, i64* %44, align 8, !dbg !2925
  %_1016 = shl i64 %7471, %7472
  %_1017 = shl i64 %7471, %7472
  %_1018 = sub i64 0, %7471
  %gen1019 = add i64 %_1018, %7472
  %_1020 = sub i64 %7471, %7472
  %gen1021 = mul i64 %_1020, %7472
  %_1022 = sub i64 0, %7471
  %gen1023 = add i64 %_1022, %7472
  %7473 = add i64 %7471, %7472, !dbg !2926
  %7474 = load i64, i64* %22, align 8, !dbg !2927
  %7475 = icmp ult i64 %7473, %7474, !dbg !2928
  br label %originalBB1015

originalBB1027alteredBB:                          ; preds = %originalBB1027, %3780
  %7476 = load i8*, i8** %21, align 8, !dbg !2930
  %7477 = load i64, i64* %28, align 8, !dbg !2931
  %7478 = load i64, i64* %44, align 8, !dbg !2932
  %_1028 = sub i64 0, %7477
  %gen1029 = add i64 %_1028, %7478
  %_1030 = sub i64 0, %7477
  %gen1031 = add i64 %_1030, %7478
  %7479 = add i64 %7477, %7478, !dbg !2933
  %7480 = getelementptr inbounds i8, i8* %7476, i64 %7479, !dbg !2930
  %7481 = load i8, i8* %7480, align 1, !dbg !2930
  %7482 = sext i8 %7481 to i32, !dbg !2930
  %7483 = icmp ne i32 %7482, 0, !dbg !2929
  br label %originalBB1027

originalBB1035alteredBB:                          ; preds = %originalBB1035, %3805
  br label %originalBB1035

originalBB1039alteredBB:                          ; preds = %originalBB1039, %3823
  %7484 = load i64, i64* %44, align 8, !dbg !2935
  %_1040 = shl i64 %7484, 1
  %_1041 = sub i64 0, %7484
  %gen1042 = add i64 %_1041, 1
  %7485 = add i64 %7484, 1, !dbg !2935
  store i64 %7485, i64* %44, align 8, !dbg !2935
  br label %originalBB1039

originalBB1046alteredBB:                          ; preds = %originalBB1046, %3842
  br label %originalBB1046

originalBB1050alteredBB:                          ; preds = %originalBB1050, %3859
  %7486 = load i8, i8* %35, align 1, !dbg !2938
  %7487 = trunc i8 %7486 to i1, !dbg !2938
  br label %originalBB1050

originalBB1054alteredBB:                          ; preds = %originalBB1054, %3878
  %7488 = load i32, i32* %23, align 4, !dbg !2942
  %7489 = icmp eq i32 %7488, 2, !dbg !2943
  br label %originalBB1054

originalBB1058alteredBB:                          ; preds = %originalBB1058, %3897
  store i64 1, i64* %49, align 8, !dbg !2948
  br label %originalBB1058

originalBB1062alteredBB:                          ; preds = %originalBB1062, %3914
  %7490 = load i64, i64* %49, align 8, !dbg !2951
  %7491 = load i64, i64* %48, align 8, !dbg !2953
  %7492 = icmp ult i64 %7490, %7491, !dbg !2954
  br label %originalBB1062

originalBB1066alteredBB:                          ; preds = %originalBB1066, %3934
  %7493 = load i8*, i8** %21, align 8, !dbg !2956
  %7494 = load i64, i64* %28, align 8, !dbg !2957
  %7495 = load i64, i64* %44, align 8, !dbg !2958
  %_1067 = sub i64 %7494, %7495
  %gen1068 = mul i64 %_1067, %7495
  %_1069 = sub i64 %7494, %7495
  %gen1070 = mul i64 %_1069, %7495
  %_1071 = shl i64 %7494, %7495
  %_1072 = sub i64 %7494, %7495
  %gen1073 = mul i64 %_1072, %7495
  %_1074 = sub i64 %7494, %7495
  %gen1075 = mul i64 %_1074, %7495
  %7496 = add i64 %7494, %7495, !dbg !2959
  %7497 = load i64, i64* %49, align 8, !dbg !2960
  %_1076 = sub i64 0, %7496
  %gen1077 = add i64 %_1076, %7497
  %_1078 = sub i64 0, %7496
  %gen1079 = add i64 %_1078, %7497
  %_1080 = shl i64 %7496, %7497
  %_1081 = sub i64 0, %7496
  %gen1082 = add i64 %_1081, %7497
  %_1083 = shl i64 %7496, %7497
  %_1084 = sub i64 %7496, %7497
  %gen1085 = mul i64 %_1084, %7497
  %_1086 = shl i64 %7496, %7497
  %7498 = add i64 %7496, %7497, !dbg !2961
  %7499 = getelementptr inbounds i8, i8* %7493, i64 %7498, !dbg !2956
  %7500 = load i8, i8* %7499, align 1, !dbg !2956
  %7501 = sext i8 %7500 to i32, !dbg !2956
  br label %originalBB1066

originalBB1090alteredBB:                          ; preds = %originalBB1090, %3960
  br label %originalBB1090

originalBB1094alteredBB:                          ; preds = %originalBB1094, %3977
  br label %originalBB1094

originalBB1098alteredBB:                          ; preds = %originalBB1098, %3994
  br label %originalBB1098

originalBB1102alteredBB:                          ; preds = %originalBB1102, %4011
  %7502 = load i64, i64* %49, align 8, !dbg !2967
  %_1103 = sub i64 0, %7502
  %gen1104 = add i64 %_1103, 1
  %7503 = add i64 %7502, 1, !dbg !2967
  store i64 %7503, i64* %49, align 8, !dbg !2967
  br label %originalBB1102

originalBB1108alteredBB:                          ; preds = %originalBB1108, %4030
  br label %originalBB1108

originalBB1112alteredBB:                          ; preds = %originalBB1112, %4047
  %7504 = load i32, i32* %47, align 4, !dbg !2972
  %7505 = call i32 @iswprint(i32 %7504) #10, !dbg !2974
  %7506 = icmp ne i32 %7505, 0, !dbg !2974
  br label %originalBB1112

originalBB1116alteredBB:                          ; preds = %originalBB1116, %4067
  store i8 0, i8* %45, align 1, !dbg !2976
  br label %originalBB1116

originalBB1120alteredBB:                          ; preds = %originalBB1120, %4084
  %7507 = load i64, i64* %48, align 8, !dbg !2978
  %7508 = load i64, i64* %44, align 8, !dbg !2979
  %_1121 = shl i64 %7508, %7507
  %_1122 = sub i64 0, %7508
  %gen1123 = add i64 %_1122, %7507
  %_1124 = sub i64 %7508, %7507
  %gen1125 = mul i64 %_1124, %7507
  %_1126 = sub i64 0, %7508
  %gen1127 = add i64 %_1126, %7507
  %_1128 = shl i64 %7508, %7507
  %_1129 = shl i64 %7508, %7507
  %7509 = add i64 %7508, %7507, !dbg !2979
  store i64 %7509, i64* %44, align 8, !dbg !2979
  br label %originalBB1120

originalBB1133alteredBB:                          ; preds = %originalBB1133, %4104
  br label %originalBB1133

originalBB1137alteredBB:                          ; preds = %originalBB1137, %4121
  br label %originalBB1137

originalBB1141alteredBB:                          ; preds = %originalBB1141, %4138
  br label %originalBB1141

originalBB1145alteredBB:                          ; preds = %originalBB1145, %4155
  %7510 = call i32 @mbsinit(%struct.__mbstate_t* %46) #13, !dbg !2981
  %7511 = icmp ne i32 %7510, 0, !dbg !2982
  %_1146 = sub i1 %7511, true
  %gen1147 = mul i1 %_1146, true
  %_1148 = sub i1 false, %7511
  %gen1149 = add i1 %_1148, true
  %7512 = xor i1 %7511, true, !dbg !2982
  br label %originalBB1145

originalBB1153alteredBB:                          ; preds = %originalBB1153, %4175
  br label %originalBB1153

originalBB1157alteredBB:                          ; preds = %originalBB1157, %4192
  %7513 = load i8, i8* %45, align 1, !dbg !2985
  %7514 = trunc i8 %7513 to i1, !dbg !2985
  %7515 = zext i1 %7514 to i8, !dbg !2986
  store i8 %7515, i8* %43, align 1, !dbg !2986
  %7516 = load i64, i64* %44, align 8, !dbg !2987
  %7517 = icmp ult i64 1, %7516, !dbg !2989
  br label %originalBB1157

originalBB1161alteredBB:                          ; preds = %originalBB1161, %4214
  %7518 = load i8, i8* %33, align 1, !dbg !2991
  %7519 = trunc i8 %7518 to i1, !dbg !2991
  br label %originalBB1161

originalBB1165alteredBB:                          ; preds = %originalBB1165, %4233
  %7520 = load i8, i8* %45, align 1, !dbg !2993
  %7521 = trunc i8 %7520 to i1, !dbg !2993
  br label %originalBB1165

originalBB1169alteredBB:                          ; preds = %originalBB1169, %4252
  %7522 = load i64, i64* %28, align 8, !dbg !2998
  %7523 = load i64, i64* %44, align 8, !dbg !2999
  %_1170 = sub i64 %7522, %7523
  %gen1171 = mul i64 %_1170, %7523
  %_1172 = shl i64 %7522, %7523
  %_1173 = shl i64 %7522, %7523
  %_1174 = shl i64 %7522, %7523
  %_1175 = shl i64 %7522, %7523
  %_1176 = sub i64 %7522, %7523
  %gen1177 = mul i64 %_1176, %7523
  %_1178 = shl i64 %7522, %7523
  %_1179 = sub i64 0, %7522
  %gen1180 = add i64 %_1179, %7523
  %_1181 = sub i64 %7522, %7523
  %gen1182 = mul i64 %_1181, %7523
  %_1183 = shl i64 %7522, %7523
  %7524 = add i64 %7522, %7523, !dbg !3000
  store i64 %7524, i64* %50, align 8, !dbg !2997
  br label %originalBB1169

originalBB1187alteredBB:                          ; preds = %originalBB1187, %4272
  %7525 = load i8, i8* %33, align 1, !dbg !3002
  %7526 = trunc i8 %7525 to i1, !dbg !3002
  br label %originalBB1187

originalBB1191alteredBB:                          ; preds = %originalBB1191, %4291
  %7527 = load i8, i8* %45, align 1, !dbg !3008
  %7528 = trunc i8 %7527 to i1, !dbg !3008
  br label %originalBB1191

originalBB1195alteredBB:                          ; preds = %originalBB1195, %4310
  br label %originalBB1195

originalBB1199alteredBB:                          ; preds = %originalBB1199, %4327
  %7529 = load i8, i8* %35, align 1, !dbg !3012
  %7530 = trunc i8 %7529 to i1, !dbg !3012
  br label %originalBB1199

originalBB1203alteredBB:                          ; preds = %originalBB1203, %4346
  br label %originalBB1203

originalBB1207alteredBB:                          ; preds = %originalBB1207, %4363
  store i8 1, i8* %42, align 1, !dbg !3015
  %7531 = load i32, i32* %23, align 4, !dbg !3016
  %7532 = icmp eq i32 %7531, 2, !dbg !3016
  br label %originalBB1207

originalBB1211alteredBB:                          ; preds = %originalBB1211, %4382
  %7533 = load i8, i8* %36, align 1, !dbg !3016
  %7534 = trunc i8 %7533 to i1, !dbg !3016
  br label %originalBB1211

originalBB1215alteredBB:                          ; preds = %originalBB1215, %4401
  br label %originalBB1215

originalBB1219alteredBB:                          ; preds = %originalBB1219, %4418
  %7535 = load i64, i64* %29, align 8, !dbg !3020
  %7536 = load i64, i64* %20, align 8, !dbg !3020
  %7537 = icmp ult i64 %7535, %7536, !dbg !3020
  br label %originalBB1219

originalBB1223alteredBB:                          ; preds = %originalBB1223, %4438
  %7538 = load i8*, i8** %19, align 8, !dbg !3020
  %7539 = load i64, i64* %29, align 8, !dbg !3020
  %7540 = getelementptr inbounds i8, i8* %7538, i64 %7539, !dbg !3020
  store i8 39, i8* %7540, align 1, !dbg !3020
  br label %originalBB1223

originalBB1227alteredBB:                          ; preds = %originalBB1227, %4458
  %7541 = load i64, i64* %29, align 8, !dbg !3023
  %7542 = add i64 %7541, 1, !dbg !3023
  store i64 %7542, i64* %29, align 8, !dbg !3023
  br label %originalBB1227

originalBB1231alteredBB:                          ; preds = %originalBB1231, %4477
  br label %originalBB1231

originalBB1235alteredBB:                          ; preds = %originalBB1235, %4494
  %7543 = load i64, i64* %29, align 8, !dbg !3024
  %7544 = load i64, i64* %20, align 8, !dbg !3024
  %7545 = icmp ult i64 %7543, %7544, !dbg !3024
  br label %originalBB1235

originalBB1239alteredBB:                          ; preds = %originalBB1239, %4514
  %7546 = load i8*, i8** %19, align 8, !dbg !3024
  %7547 = load i64, i64* %29, align 8, !dbg !3024
  %7548 = getelementptr inbounds i8, i8* %7546, i64 %7547, !dbg !3024
  store i8 36, i8* %7548, align 1, !dbg !3024
  br label %originalBB1239

originalBB1243alteredBB:                          ; preds = %originalBB1243, %4534
  %7549 = load i64, i64* %29, align 8, !dbg !3027
  %_1244 = sub i64 0, %7549
  %gen1245 = add i64 %_1244, 1
  %_1246 = shl i64 %7549, 1
  %_1247 = sub i64 %7549, 1
  %gen1248 = mul i64 %_1247, 1
  %_1249 = shl i64 %7549, 1
  %7550 = add i64 %7549, 1, !dbg !3027
  store i64 %7550, i64* %29, align 8, !dbg !3027
  br label %originalBB1243

originalBB1253alteredBB:                          ; preds = %originalBB1253, %4553
  br label %originalBB1253

originalBB1257alteredBB:                          ; preds = %originalBB1257, %4570
  %7551 = load i64, i64* %29, align 8, !dbg !3028
  %7552 = load i64, i64* %20, align 8, !dbg !3028
  %7553 = icmp ult i64 %7551, %7552, !dbg !3028
  br label %originalBB1257

originalBB1261alteredBB:                          ; preds = %originalBB1261, %4590
  %7554 = load i8*, i8** %19, align 8, !dbg !3028
  %7555 = load i64, i64* %29, align 8, !dbg !3028
  %7556 = getelementptr inbounds i8, i8* %7554, i64 %7555, !dbg !3028
  store i8 39, i8* %7556, align 1, !dbg !3028
  br label %originalBB1261

originalBB1265alteredBB:                          ; preds = %originalBB1265, %4610
  %7557 = load i64, i64* %29, align 8, !dbg !3031
  %_1266 = sub i64 0, %7557
  %gen1267 = add i64 %_1266, 1
  %_1268 = sub i64 0, %7557
  %gen1269 = add i64 %_1268, 1
  %_1270 = sub i64 0, %7557
  %gen1271 = add i64 %_1270, 1
  %_1272 = sub i64 %7557, 1
  %gen1273 = mul i64 %_1272, 1
  %_1274 = shl i64 %7557, 1
  %7558 = add i64 %7557, 1, !dbg !3031
  store i64 %7558, i64* %29, align 8, !dbg !3031
  br label %originalBB1265

originalBB1278alteredBB:                          ; preds = %originalBB1278, %4629
  store i8 1, i8* %36, align 1, !dbg !3018
  br label %originalBB1278

originalBB1282alteredBB:                          ; preds = %originalBB1282, %4646
  br label %originalBB1282

originalBB1286alteredBB:                          ; preds = %originalBB1286, %4663
  %7559 = load i64, i64* %29, align 8, !dbg !3032
  %7560 = load i64, i64* %20, align 8, !dbg !3032
  %7561 = icmp ult i64 %7559, %7560, !dbg !3032
  br label %originalBB1286

originalBB1290alteredBB:                          ; preds = %originalBB1290, %4683
  %7562 = load i8*, i8** %19, align 8, !dbg !3032
  %7563 = load i64, i64* %29, align 8, !dbg !3032
  %7564 = getelementptr inbounds i8, i8* %7562, i64 %7563, !dbg !3032
  store i8 92, i8* %7564, align 1, !dbg !3032
  br label %originalBB1290

originalBB1294alteredBB:                          ; preds = %originalBB1294, %4703
  %7565 = load i64, i64* %29, align 8, !dbg !3035
  %_1295 = shl i64 %7565, 1
  %_1296 = sub i64 %7565, 1
  %gen1297 = mul i64 %_1296, 1
  %7566 = add i64 %7565, 1, !dbg !3035
  store i64 %7566, i64* %29, align 8, !dbg !3035
  br label %originalBB1294

originalBB1301alteredBB:                          ; preds = %originalBB1301, %4722
  br label %originalBB1301

originalBB1305alteredBB:                          ; preds = %originalBB1305, %4739
  br label %originalBB1305

originalBB1309alteredBB:                          ; preds = %originalBB1309, %4756
  %7567 = load i64, i64* %29, align 8, !dbg !3037
  %7568 = load i64, i64* %20, align 8, !dbg !3037
  %7569 = icmp ult i64 %7567, %7568, !dbg !3037
  br label %originalBB1309

originalBB1313alteredBB:                          ; preds = %originalBB1313, %4776
  %7570 = load i8, i8* %39, align 1, !dbg !3037
  %7571 = zext i8 %7570 to i32, !dbg !3037
  %_1314 = shl i32 %7571, 6
  %_1315 = sub i32 %7571, 6
  %gen1316 = mul i32 %_1315, 6
  %7572 = ashr i32 %7571, 6, !dbg !3037
  %_1317 = sub i32 0, 48
  %gen1318 = add i32 %_1317, %7572
  %7573 = add nsw i32 48, %7572, !dbg !3037
  %7574 = trunc i32 %7573 to i8, !dbg !3037
  %7575 = load i8*, i8** %19, align 8, !dbg !3037
  %7576 = load i64, i64* %29, align 8, !dbg !3037
  %7577 = getelementptr inbounds i8, i8* %7575, i64 %7576, !dbg !3037
  store i8 %7574, i8* %7577, align 1, !dbg !3037
  br label %originalBB1313

originalBB1322alteredBB:                          ; preds = %originalBB1322, %4801
  %7578 = load i64, i64* %29, align 8, !dbg !3040
  %_1323 = shl i64 %7578, 1
  %_1324 = sub i64 %7578, 1
  %gen1325 = mul i64 %_1324, 1
  %_1326 = shl i64 %7578, 1
  %_1327 = sub i64 %7578, 1
  %gen1328 = mul i64 %_1327, 1
  %_1329 = sub i64 0, %7578
  %gen1330 = add i64 %_1329, 1
  %_1331 = sub i64 %7578, 1
  %gen1332 = mul i64 %_1331, 1
  %_1333 = sub i64 %7578, 1
  %gen1334 = mul i64 %_1333, 1
  %7579 = add i64 %7578, 1, !dbg !3040
  store i64 %7579, i64* %29, align 8, !dbg !3040
  br label %originalBB1322

originalBB1338alteredBB:                          ; preds = %originalBB1338, %4820
  br label %originalBB1338

originalBB1342alteredBB:                          ; preds = %originalBB1342, %4837
  %7580 = load i64, i64* %29, align 8, !dbg !3042
  %7581 = load i64, i64* %20, align 8, !dbg !3042
  %7582 = icmp ult i64 %7580, %7581, !dbg !3042
  br label %originalBB1342

originalBB1346alteredBB:                          ; preds = %originalBB1346, %4857
  %7583 = load i8, i8* %39, align 1, !dbg !3042
  %7584 = zext i8 %7583 to i32, !dbg !3042
  %_1347 = shl i32 %7584, 3
  %_1348 = shl i32 %7584, 3
  %_1349 = shl i32 %7584, 3
  %_1350 = sub i32 %7584, 3
  %gen1351 = mul i32 %_1350, 3
  %7585 = ashr i32 %7584, 3, !dbg !3042
  %_1352 = sub i32 %7585, 7
  %gen1353 = mul i32 %_1352, 7
  %7586 = and i32 %7585, 7, !dbg !3042
  %_1354 = shl i32 48, %7586
  %_1355 = sub i32 48, %7586
  %gen1356 = mul i32 %_1355, %7586
  %_1357 = sub i32 0, 48
  %gen1358 = add i32 %_1357, %7586
  %_1359 = sub i32 48, %7586
  %gen1360 = mul i32 %_1359, %7586
  %_1361 = sub i32 0, 48
  %gen1362 = add i32 %_1361, %7586
  %_1363 = shl i32 48, %7586
  %_1364 = sub i32 48, %7586
  %gen1365 = mul i32 %_1364, %7586
  %7587 = add nsw i32 48, %7586, !dbg !3042
  %7588 = trunc i32 %7587 to i8, !dbg !3042
  %7589 = load i8*, i8** %19, align 8, !dbg !3042
  %7590 = load i64, i64* %29, align 8, !dbg !3042
  %7591 = getelementptr inbounds i8, i8* %7589, i64 %7590, !dbg !3042
  store i8 %7588, i8* %7591, align 1, !dbg !3042
  br label %originalBB1346

originalBB1369alteredBB:                          ; preds = %originalBB1369, %4883
  %7592 = load i64, i64* %29, align 8, !dbg !3045
  %_1370 = shl i64 %7592, 1
  %_1371 = shl i64 %7592, 1
  %_1372 = sub i64 0, %7592
  %gen1373 = add i64 %_1372, 1
  %_1374 = sub i64 %7592, 1
  %gen1375 = mul i64 %_1374, 1
  %_1376 = sub i64 0, %7592
  %gen1377 = add i64 %_1376, 1
  %_1378 = sub i64 %7592, 1
  %gen1379 = mul i64 %_1378, 1
  %_1380 = shl i64 %7592, 1
  %_1381 = shl i64 %7592, 1
  %_1382 = sub i64 0, %7592
  %gen1383 = add i64 %_1382, 1
  %7593 = add i64 %7592, 1, !dbg !3045
  store i64 %7593, i64* %29, align 8, !dbg !3045
  br label %originalBB1369

originalBB1387alteredBB:                          ; preds = %originalBB1387, %4902
  %7594 = load i8, i8* %39, align 1, !dbg !3046
  %7595 = zext i8 %7594 to i32, !dbg !3046
  %_1388 = shl i32 %7595, 7
  %_1389 = sub i32 0, %7595
  %gen1390 = add i32 %_1389, 7
  %_1391 = shl i32 %7595, 7
  %_1392 = sub i32 0, %7595
  %gen1393 = add i32 %_1392, 7
  %_1394 = sub i32 %7595, 7
  %gen1395 = mul i32 %_1394, 7
  %_1396 = shl i32 %7595, 7
  %_1397 = sub i32 %7595, 7
  %gen1398 = mul i32 %_1397, 7
  %_1399 = shl i32 %7595, 7
  %7596 = and i32 %7595, 7, !dbg !3047
  %_1400 = sub i32 0, 48
  %gen1401 = add i32 %_1400, %7596
  %_1402 = shl i32 48, %7596
  %_1403 = shl i32 48, %7596
  %_1404 = sub i32 48, %7596
  %gen1405 = mul i32 %_1404, %7596
  %_1406 = sub i32 48, %7596
  %gen1407 = mul i32 %_1406, %7596
  %_1408 = sub i32 0, 48
  %gen1409 = add i32 %_1408, %7596
  %7597 = add nsw i32 48, %7596, !dbg !3048
  %7598 = trunc i32 %7597 to i8, !dbg !3049
  store i8 %7598, i8* %39, align 1, !dbg !3050
  br label %originalBB1387

originalBB1413alteredBB:                          ; preds = %originalBB1413, %4924
  %7599 = load i8, i8* %41, align 1, !dbg !3052
  %7600 = trunc i8 %7599 to i1, !dbg !3052
  br label %originalBB1413

originalBB1417alteredBB:                          ; preds = %originalBB1417, %4943
  br label %originalBB1417

originalBB1421alteredBB:                          ; preds = %originalBB1421, %4960
  %7601 = load i64, i64* %29, align 8, !dbg !3057
  %7602 = load i64, i64* %20, align 8, !dbg !3057
  %7603 = icmp ult i64 %7601, %7602, !dbg !3057
  br label %originalBB1421

originalBB1425alteredBB:                          ; preds = %originalBB1425, %4980
  %7604 = load i8*, i8** %19, align 8, !dbg !3057
  %7605 = load i64, i64* %29, align 8, !dbg !3057
  %7606 = getelementptr inbounds i8, i8* %7604, i64 %7605, !dbg !3057
  store i8 92, i8* %7606, align 1, !dbg !3057
  br label %originalBB1425

originalBB1429alteredBB:                          ; preds = %originalBB1429, %5000
  %7607 = load i64, i64* %29, align 8, !dbg !3060
  %_1430 = sub i64 %7607, 1
  %gen1431 = mul i64 %_1430, 1
  %_1432 = sub i64 0, %7607
  %gen1433 = add i64 %_1432, 1
  %_1434 = shl i64 %7607, 1
  %7608 = add i64 %7607, 1, !dbg !3060
  store i64 %7608, i64* %29, align 8, !dbg !3060
  br label %originalBB1429

originalBB1438alteredBB:                          ; preds = %originalBB1438, %5019
  store i8 0, i8* %41, align 1, !dbg !3061
  br label %originalBB1438

originalBB1442alteredBB:                          ; preds = %originalBB1442, %5036
  br label %originalBB1442

originalBB1446alteredBB:                          ; preds = %originalBB1446, %5053
  %7609 = load i64, i64* %50, align 8, !dbg !3063
  %7610 = load i64, i64* %28, align 8, !dbg !3065
  %_1447 = shl i64 %7610, 1
  %_1448 = sub i64 %7610, 1
  %gen1449 = mul i64 %_1448, 1
  %7611 = add i64 %7610, 1, !dbg !3066
  %7612 = icmp ule i64 %7609, %7611, !dbg !3067
  br label %originalBB1446

originalBB1453alteredBB:                          ; preds = %originalBB1453, %5074
  br label %originalBB1453

originalBB1457alteredBB:                          ; preds = %originalBB1457, %5091
  br label %originalBB1457

originalBB1461alteredBB:                          ; preds = %originalBB1461, %5108
  %7613 = load i8, i8* %36, align 1, !dbg !3071
  %7614 = trunc i8 %7613 to i1, !dbg !3071
  br label %originalBB1461

originalBB1465alteredBB:                          ; preds = %originalBB1465, %5127
  %7615 = load i8, i8* %42, align 1, !dbg !3071
  %7616 = trunc i8 %7615 to i1, !dbg !3071
  br label %originalBB1465

originalBB1469alteredBB:                          ; preds = %originalBB1469, %5146
  br label %originalBB1469

originalBB1473alteredBB:                          ; preds = %originalBB1473, %5163
  %7617 = load i64, i64* %29, align 8, !dbg !3077
  %7618 = load i64, i64* %20, align 8, !dbg !3077
  %7619 = icmp ult i64 %7617, %7618, !dbg !3077
  br label %originalBB1473

originalBB1477alteredBB:                          ; preds = %originalBB1477, %5183
  %7620 = load i8*, i8** %19, align 8, !dbg !3077
  %7621 = load i64, i64* %29, align 8, !dbg !3077
  %7622 = getelementptr inbounds i8, i8* %7620, i64 %7621, !dbg !3077
  store i8 39, i8* %7622, align 1, !dbg !3077
  br label %originalBB1477

originalBB1481alteredBB:                          ; preds = %originalBB1481, %5203
  %7623 = load i64, i64* %29, align 8, !dbg !3080
  %_1482 = sub i64 0, %7623
  %gen1483 = add i64 %_1482, 1
  %7624 = add i64 %7623, 1, !dbg !3080
  store i64 %7624, i64* %29, align 8, !dbg !3080
  br label %originalBB1481

originalBB1487alteredBB:                          ; preds = %originalBB1487, %5222
  br label %originalBB1487

originalBB1491alteredBB:                          ; preds = %originalBB1491, %5239
  %7625 = load i64, i64* %29, align 8, !dbg !3081
  %7626 = load i64, i64* %20, align 8, !dbg !3081
  %7627 = icmp ult i64 %7625, %7626, !dbg !3081
  br label %originalBB1491

originalBB1495alteredBB:                          ; preds = %originalBB1495, %5259
  %7628 = load i8*, i8** %19, align 8, !dbg !3081
  %7629 = load i64, i64* %29, align 8, !dbg !3081
  %7630 = getelementptr inbounds i8, i8* %7628, i64 %7629, !dbg !3081
  store i8 39, i8* %7630, align 1, !dbg !3081
  br label %originalBB1495

originalBB1499alteredBB:                          ; preds = %originalBB1499, %5279
  %7631 = load i64, i64* %29, align 8, !dbg !3084
  %_1500 = shl i64 %7631, 1
  %7632 = add i64 %7631, 1, !dbg !3084
  store i64 %7632, i64* %29, align 8, !dbg !3084
  br label %originalBB1499

originalBB1504alteredBB:                          ; preds = %originalBB1504, %5298
  store i8 0, i8* %36, align 1, !dbg !3075
  br label %originalBB1504

originalBB1508alteredBB:                          ; preds = %originalBB1508, %5315
  br label %originalBB1508

originalBB1512alteredBB:                          ; preds = %originalBB1512, %5332
  br label %originalBB1512

originalBB1516alteredBB:                          ; preds = %originalBB1516, %5349
  %7633 = load i64, i64* %29, align 8, !dbg !3086
  %7634 = load i64, i64* %20, align 8, !dbg !3086
  %7635 = icmp ult i64 %7633, %7634, !dbg !3086
  br label %originalBB1516

originalBB1520alteredBB:                          ; preds = %originalBB1520, %5369
  %7636 = load i8, i8* %39, align 1, !dbg !3086
  %7637 = load i8*, i8** %19, align 8, !dbg !3086
  %7638 = load i64, i64* %29, align 8, !dbg !3086
  %7639 = getelementptr inbounds i8, i8* %7637, i64 %7638, !dbg !3086
  store i8 %7636, i8* %7639, align 1, !dbg !3086
  br label %originalBB1520

originalBB1524alteredBB:                          ; preds = %originalBB1524, %5390
  %7640 = load i64, i64* %29, align 8, !dbg !3089
  %_1525 = sub i64 %7640, 1
  %gen1526 = mul i64 %_1525, 1
  %_1527 = sub i64 0, %7640
  %gen1528 = add i64 %_1527, 1
  %_1529 = shl i64 %7640, 1
  %_1530 = sub i64 %7640, 1
  %gen1531 = mul i64 %_1530, 1
  %_1532 = sub i64 0, %7640
  %gen1533 = add i64 %_1532, 1
  %7641 = add i64 %7640, 1, !dbg !3089
  store i64 %7641, i64* %29, align 8, !dbg !3089
  br label %originalBB1524

originalBB1537alteredBB:                          ; preds = %originalBB1537, %5409
  %7642 = load i8*, i8** %21, align 8, !dbg !3090
  %7643 = load i64, i64* %28, align 8, !dbg !3091
  %_1538 = sub i64 0, %7643
  %gen1539 = add i64 %_1538, 1
  %_1540 = sub i64 %7643, 1
  %gen1541 = mul i64 %_1540, 1
  %7644 = add i64 %7643, 1, !dbg !3091
  store i64 %7644, i64* %28, align 8, !dbg !3091
  %7645 = getelementptr inbounds i8, i8* %7642, i64 %7644, !dbg !3090
  %7646 = load i8, i8* %7645, align 1, !dbg !3090
  store i8 %7646, i8* %39, align 1, !dbg !3092
  br label %originalBB1537

originalBB1545alteredBB:                          ; preds = %originalBB1545, %5431
  br label %originalBB1545

originalBB1549alteredBB:                          ; preds = %originalBB1549, %5448
  br label %originalBB1549

originalBB1553alteredBB:                          ; preds = %originalBB1553, %5465
  %7647 = load i8, i8* %33, align 1, !dbg !3099
  %7648 = trunc i8 %7647 to i1, !dbg !3099
  br label %originalBB1553

originalBB1557alteredBB:                          ; preds = %originalBB1557, %5484
  %7649 = load i32, i32* %23, align 4, !dbg !3102
  %7650 = icmp ne i32 %7649, 2, !dbg !3103
  br label %originalBB1557

originalBB1561alteredBB:                          ; preds = %originalBB1561, %5503
  %7651 = load i8, i8* %35, align 1, !dbg !3105
  %7652 = trunc i8 %7651 to i1, !dbg !3105
  br label %originalBB1561

originalBB1565alteredBB:                          ; preds = %originalBB1565, %5522
  %7653 = load i32*, i32** %25, align 8, !dbg !3107
  %7654 = icmp ne i32* %7653, null, !dbg !3107
  br label %originalBB1565

originalBB1569alteredBB:                          ; preds = %originalBB1569, %5541
  %7655 = load i32*, i32** %25, align 8, !dbg !3109
  %7656 = load i8, i8* %39, align 1, !dbg !3110
  %7657 = zext i8 %7656 to i64, !dbg !3110
  %_1570 = sub i64 0, %7657
  %gen1571 = add i64 %_1570, 32
  %_1572 = sub i64 0, %7657
  %gen1573 = add i64 %_1572, 32
  %_1574 = sub i64 0, %7657
  %gen1575 = add i64 %_1574, 32
  %_1576 = sub i64 0, %7657
  %gen1577 = add i64 %_1576, 32
  %_1578 = shl i64 %7657, 32
  %_1579 = sub i64 %7657, 32
  %gen1580 = mul i64 %_1579, 32
  %_1581 = sub i64 %7657, 32
  %gen1582 = mul i64 %_1581, 32
  %_1583 = sub i64 %7657, 32
  %gen1584 = mul i64 %_1583, 32
  %7658 = udiv i64 %7657, 32, !dbg !3111
  %7659 = getelementptr inbounds i32, i32* %7655, i64 %7658, !dbg !3109
  %7660 = load i32, i32* %7659, align 4, !dbg !3109
  %7661 = load i8, i8* %39, align 1, !dbg !3112
  %7662 = zext i8 %7661 to i64, !dbg !3112
  %_1585 = shl i64 %7662, 32
  %_1586 = sub i64 0, %7662
  %gen1587 = add i64 %_1586, 32
  %7663 = urem i64 %7662, 32, !dbg !3113
  %7664 = trunc i64 %7663 to i32, !dbg !3114
  %_1588 = shl i32 %7660, %7664
  %_1589 = sub i32 0, %7660
  %gen1590 = add i32 %_1589, %7664
  %7665 = lshr i32 %7660, %7664, !dbg !3114
  %_1591 = shl i32 %7665, 1
  %7666 = and i32 %7665, 1, !dbg !3115
  %7667 = icmp ne i32 %7666, 0, !dbg !3115
  br label %originalBB1569

originalBB1595alteredBB:                          ; preds = %originalBB1595, %5571
  %7668 = load i8, i8* %41, align 1, !dbg !3117
  %7669 = trunc i8 %7668 to i1, !dbg !3117
  br label %originalBB1595

originalBB1599alteredBB:                          ; preds = %originalBB1599, %5590
  br label %originalBB1599

originalBB1603alteredBB:                          ; preds = %originalBB1603, %5607
  br label %originalBB1603

originalBB1607alteredBB:                          ; preds = %originalBB1607, %5624
  br label %originalBB1607

originalBB1611alteredBB:                          ; preds = %originalBB1611, %5641
  %7670 = load i8, i8* %35, align 1, !dbg !3123
  %7671 = trunc i8 %7670 to i1, !dbg !3123
  br label %originalBB1611

originalBB1615alteredBB:                          ; preds = %originalBB1615, %5660
  br label %originalBB1615

originalBB1619alteredBB:                          ; preds = %originalBB1619, %5677
  store i8 1, i8* %42, align 1, !dbg !3126
  %7672 = load i32, i32* %23, align 4, !dbg !3127
  %7673 = icmp eq i32 %7672, 2, !dbg !3127
  br label %originalBB1619

originalBB1623alteredBB:                          ; preds = %originalBB1623, %5696
  %7674 = load i8, i8* %36, align 1, !dbg !3127
  %7675 = trunc i8 %7674 to i1, !dbg !3127
  br label %originalBB1623

originalBB1627alteredBB:                          ; preds = %originalBB1627, %5715
  br label %originalBB1627

originalBB1631alteredBB:                          ; preds = %originalBB1631, %5732
  %7676 = load i64, i64* %29, align 8, !dbg !3131
  %7677 = load i64, i64* %20, align 8, !dbg !3131
  %7678 = icmp ult i64 %7676, %7677, !dbg !3131
  br label %originalBB1631

originalBB1635alteredBB:                          ; preds = %originalBB1635, %5752
  %7679 = load i8*, i8** %19, align 8, !dbg !3131
  %7680 = load i64, i64* %29, align 8, !dbg !3131
  %7681 = getelementptr inbounds i8, i8* %7679, i64 %7680, !dbg !3131
  store i8 39, i8* %7681, align 1, !dbg !3131
  br label %originalBB1635

originalBB1639alteredBB:                          ; preds = %originalBB1639, %5772
  %7682 = load i64, i64* %29, align 8, !dbg !3134
  %_1640 = sub i64 0, %7682
  %gen1641 = add i64 %_1640, 1
  %_1642 = sub i64 0, %7682
  %gen1643 = add i64 %_1642, 1
  %_1644 = sub i64 %7682, 1
  %gen1645 = mul i64 %_1644, 1
  %_1646 = sub i64 %7682, 1
  %gen1647 = mul i64 %_1646, 1
  %_1648 = shl i64 %7682, 1
  %_1649 = sub i64 0, %7682
  %gen1650 = add i64 %_1649, 1
  %7683 = add i64 %7682, 1, !dbg !3134
  store i64 %7683, i64* %29, align 8, !dbg !3134
  br label %originalBB1639

originalBB1654alteredBB:                          ; preds = %originalBB1654, %5791
  br label %originalBB1654

originalBB1658alteredBB:                          ; preds = %originalBB1658, %5808
  %7684 = load i64, i64* %29, align 8, !dbg !3135
  %7685 = load i64, i64* %20, align 8, !dbg !3135
  %7686 = icmp ult i64 %7684, %7685, !dbg !3135
  br label %originalBB1658

originalBB1662alteredBB:                          ; preds = %originalBB1662, %5828
  %7687 = load i8*, i8** %19, align 8, !dbg !3135
  %7688 = load i64, i64* %29, align 8, !dbg !3135
  %7689 = getelementptr inbounds i8, i8* %7687, i64 %7688, !dbg !3135
  store i8 36, i8* %7689, align 1, !dbg !3135
  br label %originalBB1662

originalBB1666alteredBB:                          ; preds = %originalBB1666, %5848
  %7690 = load i64, i64* %29, align 8, !dbg !3138
  %_1667 = sub i64 %7690, 1
  %gen1668 = mul i64 %_1667, 1
  %_1669 = sub i64 0, %7690
  %gen1670 = add i64 %_1669, 1
  %_1671 = sub i64 0, %7690
  %gen1672 = add i64 %_1671, 1
  %_1673 = sub i64 0, %7690
  %gen1674 = add i64 %_1673, 1
  %_1675 = shl i64 %7690, 1
  %7691 = add i64 %7690, 1, !dbg !3138
  store i64 %7691, i64* %29, align 8, !dbg !3138
  br label %originalBB1666

originalBB1679alteredBB:                          ; preds = %originalBB1679, %5867
  br label %originalBB1679

originalBB1683alteredBB:                          ; preds = %originalBB1683, %5884
  %7692 = load i64, i64* %29, align 8, !dbg !3139
  %7693 = load i64, i64* %20, align 8, !dbg !3139
  %7694 = icmp ult i64 %7692, %7693, !dbg !3139
  br label %originalBB1683

originalBB1687alteredBB:                          ; preds = %originalBB1687, %5904
  %7695 = load i8*, i8** %19, align 8, !dbg !3139
  %7696 = load i64, i64* %29, align 8, !dbg !3139
  %7697 = getelementptr inbounds i8, i8* %7695, i64 %7696, !dbg !3139
  store i8 39, i8* %7697, align 1, !dbg !3139
  br label %originalBB1687

originalBB1691alteredBB:                          ; preds = %originalBB1691, %5924
  %7698 = load i64, i64* %29, align 8, !dbg !3142
  %_1692 = shl i64 %7698, 1
  %_1693 = sub i64 %7698, 1
  %gen1694 = mul i64 %_1693, 1
  %_1695 = sub i64 0, %7698
  %gen1696 = add i64 %_1695, 1
  %7699 = add i64 %7698, 1, !dbg !3142
  store i64 %7699, i64* %29, align 8, !dbg !3142
  br label %originalBB1691

originalBB1700alteredBB:                          ; preds = %originalBB1700, %5943
  store i8 1, i8* %36, align 1, !dbg !3129
  br label %originalBB1700

originalBB1704alteredBB:                          ; preds = %originalBB1704, %5960
  br label %originalBB1704

originalBB1708alteredBB:                          ; preds = %originalBB1708, %5977
  %7700 = load i64, i64* %29, align 8, !dbg !3143
  %7701 = load i64, i64* %20, align 8, !dbg !3143
  %7702 = icmp ult i64 %7700, %7701, !dbg !3143
  br label %originalBB1708

originalBB1712alteredBB:                          ; preds = %originalBB1712, %5997
  %7703 = load i8*, i8** %19, align 8, !dbg !3143
  %7704 = load i64, i64* %29, align 8, !dbg !3143
  %7705 = getelementptr inbounds i8, i8* %7703, i64 %7704, !dbg !3143
  store i8 92, i8* %7705, align 1, !dbg !3143
  br label %originalBB1712

originalBB1716alteredBB:                          ; preds = %originalBB1716, %6017
  %7706 = load i64, i64* %29, align 8, !dbg !3146
  %_1717 = sub i64 0, %7706
  %gen1718 = add i64 %_1717, 1
  %_1719 = sub i64 %7706, 1
  %gen1720 = mul i64 %_1719, 1
  %_1721 = sub i64 %7706, 1
  %gen1722 = mul i64 %_1721, 1
  %_1723 = shl i64 %7706, 1
  %_1724 = sub i64 %7706, 1
  %gen1725 = mul i64 %_1724, 1
  %_1726 = sub i64 %7706, 1
  %gen1727 = mul i64 %_1726, 1
  %7707 = add i64 %7706, 1, !dbg !3146
  store i64 %7707, i64* %29, align 8, !dbg !3146
  br label %originalBB1716

originalBB1731alteredBB:                          ; preds = %originalBB1731, %6036
  br label %originalBB1731

originalBB1735alteredBB:                          ; preds = %originalBB1735, %6053
  br label %originalBB1735

originalBB1739alteredBB:                          ; preds = %originalBB1739, %6070
  br label %originalBB1739

originalBB1743alteredBB:                          ; preds = %originalBB1743, %6087
  %7708 = load i8, i8* %36, align 1, !dbg !3150
  %7709 = trunc i8 %7708 to i1, !dbg !3150
  br label %originalBB1743

originalBB1747alteredBB:                          ; preds = %originalBB1747, %6106
  %7710 = load i8, i8* %42, align 1, !dbg !3150
  %7711 = trunc i8 %7710 to i1, !dbg !3150
  br label %originalBB1747

originalBB1751alteredBB:                          ; preds = %originalBB1751, %6125
  br label %originalBB1751

originalBB1755alteredBB:                          ; preds = %originalBB1755, %6142
  %7712 = load i64, i64* %29, align 8, !dbg !3156
  %7713 = load i64, i64* %20, align 8, !dbg !3156
  %7714 = icmp ult i64 %7712, %7713, !dbg !3156
  br label %originalBB1755

originalBB1759alteredBB:                          ; preds = %originalBB1759, %6162
  %7715 = load i8*, i8** %19, align 8, !dbg !3156
  %7716 = load i64, i64* %29, align 8, !dbg !3156
  %7717 = getelementptr inbounds i8, i8* %7715, i64 %7716, !dbg !3156
  store i8 39, i8* %7717, align 1, !dbg !3156
  br label %originalBB1759

originalBB1763alteredBB:                          ; preds = %originalBB1763, %6182
  %7718 = load i64, i64* %29, align 8, !dbg !3159
  %_1764 = shl i64 %7718, 1
  %_1765 = sub i64 0, %7718
  %gen1766 = add i64 %_1765, 1
  %_1767 = sub i64 %7718, 1
  %gen1768 = mul i64 %_1767, 1
  %_1769 = sub i64 %7718, 1
  %gen1770 = mul i64 %_1769, 1
  %7719 = add i64 %7718, 1, !dbg !3159
  store i64 %7719, i64* %29, align 8, !dbg !3159
  br label %originalBB1763

originalBB1774alteredBB:                          ; preds = %originalBB1774, %6201
  br label %originalBB1774

originalBB1778alteredBB:                          ; preds = %originalBB1778, %6218
  %7720 = load i64, i64* %29, align 8, !dbg !3160
  %7721 = load i64, i64* %20, align 8, !dbg !3160
  %7722 = icmp ult i64 %7720, %7721, !dbg !3160
  br label %originalBB1778

originalBB1782alteredBB:                          ; preds = %originalBB1782, %6238
  %7723 = load i8*, i8** %19, align 8, !dbg !3160
  %7724 = load i64, i64* %29, align 8, !dbg !3160
  %7725 = getelementptr inbounds i8, i8* %7723, i64 %7724, !dbg !3160
  store i8 39, i8* %7725, align 1, !dbg !3160
  br label %originalBB1782

originalBB1786alteredBB:                          ; preds = %originalBB1786, %6258
  %7726 = load i64, i64* %29, align 8, !dbg !3163
  %_1787 = sub i64 %7726, 1
  %gen1788 = mul i64 %_1787, 1
  %_1789 = sub i64 %7726, 1
  %gen1790 = mul i64 %_1789, 1
  %_1791 = shl i64 %7726, 1
  %_1792 = sub i64 0, %7726
  %gen1793 = add i64 %_1792, 1
  %_1794 = sub i64 %7726, 1
  %gen1795 = mul i64 %_1794, 1
  %7727 = add i64 %7726, 1, !dbg !3163
  store i64 %7727, i64* %29, align 8, !dbg !3163
  br label %originalBB1786

originalBB1799alteredBB:                          ; preds = %originalBB1799, %6277
  store i8 0, i8* %36, align 1, !dbg !3154
  br label %originalBB1799

originalBB1803alteredBB:                          ; preds = %originalBB1803, %6294
  br label %originalBB1803

originalBB1807alteredBB:                          ; preds = %originalBB1807, %6311
  br label %originalBB1807

originalBB1811alteredBB:                          ; preds = %originalBB1811, %6328
  %7728 = load i64, i64* %29, align 8, !dbg !3165
  %7729 = load i64, i64* %20, align 8, !dbg !3165
  %7730 = icmp ult i64 %7728, %7729, !dbg !3165
  br label %originalBB1811

originalBB1815alteredBB:                          ; preds = %originalBB1815, %6348
  %7731 = load i8, i8* %39, align 1, !dbg !3165
  %7732 = load i8*, i8** %19, align 8, !dbg !3165
  %7733 = load i64, i64* %29, align 8, !dbg !3165
  %7734 = getelementptr inbounds i8, i8* %7732, i64 %7733, !dbg !3165
  store i8 %7731, i8* %7734, align 1, !dbg !3165
  br label %originalBB1815

originalBB1819alteredBB:                          ; preds = %originalBB1819, %6369
  %7735 = load i64, i64* %29, align 8, !dbg !3168
  %_1820 = sub i64 %7735, 1
  %gen1821 = mul i64 %_1820, 1
  %_1822 = sub i64 0, %7735
  %gen1823 = add i64 %_1822, 1
  %_1824 = shl i64 %7735, 1
  %_1825 = sub i64 %7735, 1
  %gen1826 = mul i64 %_1825, 1
  %7736 = add i64 %7735, 1, !dbg !3168
  store i64 %7736, i64* %29, align 8, !dbg !3168
  br label %originalBB1819

originalBB1830alteredBB:                          ; preds = %originalBB1830, %6388
  %7737 = load i8, i8* %43, align 1, !dbg !3169
  %7738 = trunc i8 %7737 to i1, !dbg !3169
  br label %originalBB1830

originalBB1834alteredBB:                          ; preds = %originalBB1834, %6407
  store i8 0, i8* %38, align 1, !dbg !3172
  br label %originalBB1834

originalBB1838alteredBB:                          ; preds = %originalBB1838, %6424
  br label %originalBB1838

originalBB1842alteredBB:                          ; preds = %originalBB1842, %6441
  %7739 = load i64, i64* %28, align 8, !dbg !3175
  %_1843 = sub i64 0, %7739
  %gen1844 = add i64 %_1843, 1
  %7740 = add i64 %7739, 1, !dbg !3175
  store i64 %7740, i64* %28, align 8, !dbg !3175
  br label %originalBB1842

originalBB1848alteredBB:                          ; preds = %originalBB1848, %6460
  %7741 = load i64, i64* %29, align 8, !dbg !3179
  %7742 = icmp eq i64 %7741, 0, !dbg !3181
  br label %originalBB1848

originalBB1852alteredBB:                          ; preds = %originalBB1852, %6479
  %7743 = load i32, i32* %23, align 4, !dbg !3183
  %7744 = icmp eq i32 %7743, 2, !dbg !3184
  br label %originalBB1852

originalBB1856alteredBB:                          ; preds = %originalBB1856, %6498
  %7745 = load i8, i8* %35, align 1, !dbg !3186
  %7746 = trunc i8 %7745 to i1, !dbg !3186
  br label %originalBB1856

originalBB1860alteredBB:                          ; preds = %originalBB1860, %6517
  br label %originalBB1860

originalBB1864alteredBB:                          ; preds = %originalBB1864, %6534
  %7747 = load i32, i32* %23, align 4, !dbg !3189
  %7748 = icmp eq i32 %7747, 2, !dbg !3191
  br label %originalBB1864

originalBB1868alteredBB:                          ; preds = %originalBB1868, %6553
  %7749 = load i8, i8* %35, align 1, !dbg !3193
  %7750 = trunc i8 %7749 to i1, !dbg !3193
  br label %originalBB1868

originalBB1872alteredBB:                          ; preds = %originalBB1872, %6572
  %7751 = load i8, i8* %37, align 1, !dbg !3195
  %7752 = trunc i8 %7751 to i1, !dbg !3195
  br label %originalBB1872

originalBB1876alteredBB:                          ; preds = %originalBB1876, %6591
  %7753 = load i8, i8* %38, align 1, !dbg !3197
  %7754 = trunc i8 %7753 to i1, !dbg !3197
  br label %originalBB1876

originalBB1880alteredBB:                          ; preds = %originalBB1880, %6610
  %7755 = load i8*, i8** %19, align 8, !dbg !3201
  %7756 = load i64, i64* %30, align 8, !dbg !3202
  %7757 = load i8*, i8** %21, align 8, !dbg !3203
  %7758 = load i64, i64* %22, align 8, !dbg !3204
  %7759 = load i32, i32* %24, align 4, !dbg !3205
  %7760 = load i32*, i32** %25, align 8, !dbg !3206
  %7761 = load i8*, i8** %26, align 8, !dbg !3207
  %7762 = load i8*, i8** %27, align 8, !dbg !3208
  %7763 = call i64 @quotearg_buffer_restyled(i8* %7755, i64 %7756, i8* %7757, i64 %7758, i32 5, i32 %7759, i32* %7760, i8* %7761, i8* %7762), !dbg !3209
  store i64 %7763, i64* %18, align 8, !dbg !3210
  br label %originalBB1880

originalBB1884alteredBB:                          ; preds = %originalBB1884, %6636
  %7764 = load i64, i64* %20, align 8, !dbg !3211
  %7765 = icmp ne i64 %7764, 0, !dbg !3211
  br label %originalBB1884

originalBB1888alteredBB:                          ; preds = %originalBB1888, %6655
  %7766 = load i64, i64* %30, align 8, !dbg !3214
  %7767 = icmp ne i64 %7766, 0, !dbg !3214
  br label %originalBB1888

originalBB1892alteredBB:                          ; preds = %originalBB1892, %6674
  %7768 = load i64, i64* %30, align 8, !dbg !3216
  store i64 %7768, i64* %20, align 8, !dbg !3218
  store i64 0, i64* %29, align 8, !dbg !3219
  br label %originalBB1892

originalBB1896alteredBB:                          ; preds = %originalBB1896, %6692
  br label %originalBB1896

originalBB1900alteredBB:                          ; preds = %originalBB1900, %6709
  br label %originalBB1900

originalBB1904alteredBB:                          ; preds = %originalBB1904, %6726
  %7769 = load i8*, i8** %31, align 8, !dbg !3222
  %7770 = icmp ne i8* %7769, null, !dbg !3222
  br label %originalBB1904

originalBB1908alteredBB:                          ; preds = %originalBB1908, %6745
  %7771 = load i8, i8* %35, align 1, !dbg !3225
  %7772 = trunc i8 %7771 to i1, !dbg !3225
  br label %originalBB1908

originalBB1912alteredBB:                          ; preds = %originalBB1912, %6764
  br label %originalBB1912

originalBB1916alteredBB:                          ; preds = %originalBB1916, %6781
  %7773 = load i8*, i8** %31, align 8, !dbg !3228
  %7774 = load i8, i8* %7773, align 1, !dbg !3231
  %7775 = icmp ne i8 %7774, 0, !dbg !3232
  br label %originalBB1916

originalBB1920alteredBB:                          ; preds = %originalBB1920, %6801
  br label %originalBB1920

originalBB1924alteredBB:                          ; preds = %originalBB1924, %6818
  %7776 = load i64, i64* %29, align 8, !dbg !3234
  %7777 = load i64, i64* %20, align 8, !dbg !3234
  %7778 = icmp ult i64 %7776, %7777, !dbg !3234
  br label %originalBB1924

originalBB1928alteredBB:                          ; preds = %originalBB1928, %6838
  %7779 = load i8*, i8** %31, align 8, !dbg !3234
  %7780 = load i8, i8* %7779, align 1, !dbg !3234
  %7781 = load i8*, i8** %19, align 8, !dbg !3234
  %7782 = load i64, i64* %29, align 8, !dbg !3234
  %7783 = getelementptr inbounds i8, i8* %7781, i64 %7782, !dbg !3234
  store i8 %7780, i8* %7783, align 1, !dbg !3234
  br label %originalBB1928

originalBB1932alteredBB:                          ; preds = %originalBB1932, %6860
  %7784 = load i64, i64* %29, align 8, !dbg !3237
  %_1933 = shl i64 %7784, 1
  %7785 = add i64 %7784, 1, !dbg !3237
  store i64 %7785, i64* %29, align 8, !dbg !3237
  br label %originalBB1932

originalBB1937alteredBB:                          ; preds = %originalBB1937, %6879
  br label %originalBB1937

originalBB1941alteredBB:                          ; preds = %originalBB1941, %6896
  %7786 = load i8*, i8** %31, align 8, !dbg !3238
  %7787 = getelementptr inbounds i8, i8* %7786, i32 1, !dbg !3238
  store i8* %7787, i8** %31, align 8, !dbg !3238
  br label %originalBB1941

originalBB1945alteredBB:                          ; preds = %originalBB1945, %6915
  br label %originalBB1945

originalBB1949alteredBB:                          ; preds = %originalBB1949, %6932
  %7788 = load i64, i64* %29, align 8, !dbg !3242
  %7789 = load i64, i64* %20, align 8, !dbg !3244
  %7790 = icmp ult i64 %7788, %7789, !dbg !3245
  br label %originalBB1949

originalBB1953alteredBB:                          ; preds = %originalBB1953, %6952
  %7791 = load i8*, i8** %19, align 8, !dbg !3247
  %7792 = load i64, i64* %29, align 8, !dbg !3248
  %7793 = getelementptr inbounds i8, i8* %7791, i64 %7792, !dbg !3247
  store i8 0, i8* %7793, align 1, !dbg !3249
  br label %originalBB1953

originalBB1957alteredBB:                          ; preds = %originalBB1957, %6972
  %7794 = load i64, i64* %29, align 8, !dbg !3250
  store i64 %7794, i64* %18, align 8, !dbg !3251
  br label %originalBB1957

originalBB1961alteredBB:                          ; preds = %originalBB1961, %6990
  %7795 = load i32, i32* %23, align 4, !dbg !3254
  %7796 = icmp eq i32 %7795, 2, !dbg !3256
  br label %originalBB1961

originalBB1965alteredBB:                          ; preds = %originalBB1965, %7009
  %7797 = load i8, i8* %33, align 1, !dbg !3258
  %7798 = trunc i8 %7797 to i1, !dbg !3258
  br label %originalBB1965

originalBB1969alteredBB:                          ; preds = %originalBB1969, %7028
  store i32 4, i32* %23, align 4, !dbg !3260
  br label %originalBB1969

originalBB1973alteredBB:                          ; preds = %originalBB1973, %7045
  %7799 = load i8*, i8** %19, align 8, !dbg !3262
  %7800 = load i64, i64* %20, align 8, !dbg !3263
  %7801 = load i8*, i8** %21, align 8, !dbg !3264
  %7802 = load i64, i64* %22, align 8, !dbg !3265
  %7803 = load i32, i32* %23, align 4, !dbg !3266
  %7804 = load i32, i32* %24, align 4, !dbg !3267
  %_1974 = shl i32 %7804, -3
  %_1975 = sub i32 %7804, -3
  %gen1976 = mul i32 %_1975, -3
  %_1977 = sub i32 %7804, -3
  %gen1978 = mul i32 %_1977, -3
  %_1979 = sub i32 0, %7804
  %gen1980 = add i32 %_1979, -3
  %7805 = and i32 %7804, -3, !dbg !3268
  %7806 = load i8*, i8** %26, align 8, !dbg !3269
  %7807 = load i8*, i8** %27, align 8, !dbg !3270
  %7808 = call i64 @quotearg_buffer_restyled(i8* %7799, i64 %7800, i8* %7801, i64 %7802, i32 %7803, i32 %7805, i32* null, i8* %7806, i8* %7807), !dbg !3271
  store i64 %7808, i64* %18, align 8, !dbg !3272
  br label %originalBB1973

originalBB1984alteredBB:                          ; preds = %originalBB1984, %7072
  %7809 = load i64, i64* %18, align 8, !dbg !3273
  br label %originalBB1984
}

; Function Attrs: nounwind
declare dso_local i64 @__ctype_get_mb_cur_max() #2

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @gettext_quote(i8*, i32) #4 !dbg !3361 {
  %3 = load i32, i32* @x.39
  %4 = load i32, i32* @y.40
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i8*, align 8
  %15 = alloca i8*, align 8
  store i8* %0, i8** %12, align 8
  call void @llvm.dbg.declare(metadata i8** %12, metadata !3364, metadata !DIExpression()), !dbg !3365
  store i32 %1, i32* %13, align 4
  call void @llvm.dbg.declare(metadata i32* %13, metadata !3366, metadata !DIExpression()), !dbg !3367
  call void @llvm.dbg.declare(metadata i8** %14, metadata !3368, metadata !DIExpression()), !dbg !3369
  %16 = load i8*, i8** %12, align 8, !dbg !3370
  %17 = call i8* @gettext(i8* %16) #10, !dbg !3370
  store i8* %17, i8** %14, align 8, !dbg !3369
  call void @llvm.dbg.declare(metadata i8** %15, metadata !3371, metadata !DIExpression()), !dbg !3372
  %18 = load i8*, i8** %14, align 8, !dbg !3373
  %19 = load i8*, i8** %12, align 8, !dbg !3375
  %20 = icmp ne i8* %18, %19, !dbg !3376
  %21 = load i32, i32* @x.39
  %22 = load i32, i32* @y.40
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %20, label %29, label %47, !dbg !3377

29:                                               ; preds = %originalBBpart2
  %30 = load i32, i32* @x.39
  %31 = load i32, i32* @y.40
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %29, %originalBB1alteredBB
  %38 = load i8*, i8** %14, align 8, !dbg !3378
  store i8* %38, i8** %11, align 8, !dbg !3379
  %39 = load i32, i32* @x.39
  %40 = load i32, i32* @y.40
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %538, !dbg !3379

47:                                               ; preds = %originalBBpart2
  %48 = load i32, i32* @x.39
  %49 = load i32, i32* @y.40
  %50 = sub i32 %48, 1
  %51 = mul i32 %48, %50
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %53, %54
  br i1 %55, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %47, %originalBB6alteredBB
  %56 = call i8* @locale_charset(), !dbg !3380
  store i8* %56, i8** %15, align 8, !dbg !3381
  %57 = load i8*, i8** %15, align 8, !dbg !3382
  %58 = call i32 @c_strcasecmp(i8* %57, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.88, i64 0, i64 0)) #13, !dbg !3382
  %59 = load i32, i32* @x.39
  %60 = load i32, i32* @y.40
  %61 = sub i32 %59, 1
  %62 = mul i32 %59, %61
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %60, 10
  %66 = or i1 %64, %65
  br i1 %66, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %67, !dbg !3382

67:                                               ; preds = %originalBBpart28
  %68 = load i32, i32* @x.39
  %69 = load i32, i32* @y.40
  %70 = sub i32 %68, 1
  %71 = mul i32 %68, %70
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %69, 10
  %75 = or i1 %73, %74
  br i1 %75, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %67, %originalBB10alteredBB
  %collatzVar1 = alloca i32
  %76 = load i32, i32* @x.39
  %77 = load i32, i32* @y.40
  %78 = sub i32 %76, 1
  %79 = mul i32 %76, %78
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %77, 10
  %83 = or i1 %81, %82
  br i1 %83, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %84

84:                                               ; preds = %originalBBpart212
  %85 = load i32, i32* @x.39
  %86 = load i32, i32* @y.40
  %87 = sub i32 %85, 1
  %88 = mul i32 %85, %87
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %86, 10
  %92 = or i1 %90, %91
  br i1 %92, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %84, %originalBB14alteredBB
  %93 = load i32, i32* @inVal0
  %94 = icmp sgt i32 %93, 1
  %95 = load i32, i32* @x.39
  %96 = load i32, i32* @y.40
  %97 = sub i32 %95, 1
  %98 = mul i32 %95, %97
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %96, 10
  %102 = or i1 %100, %101
  br i1 %102, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %94, label %120, label %103

103:                                              ; preds = %originalBBpart216
  %104 = load i32, i32* @x.39
  %105 = load i32, i32* @y.40
  %106 = sub i32 %104, 1
  %107 = mul i32 %104, %106
  %108 = urem i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = icmp slt i32 %105, 10
  %111 = or i1 %109, %110
  br i1 %111, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %103, %originalBB18alteredBB
  store i32 48, i32* %collatzVar1
  %112 = load i32, i32* @x.39
  %113 = load i32, i32* @y.40
  %114 = sub i32 %112, 1
  %115 = mul i32 %112, %114
  %116 = urem i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = icmp slt i32 %113, 10
  %119 = or i1 %117, %118
  br i1 %119, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %120

120:                                              ; preds = %originalBBpart220, %originalBBpart216
  %121 = load i32, i32* @x.39
  %122 = load i32, i32* @y.40
  %123 = sub i32 %121, 1
  %124 = mul i32 %121, %123
  %125 = urem i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %122, 10
  %128 = or i1 %126, %127
  br i1 %128, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %120, %originalBB22alteredBB
  %129 = load i8**, i8*** @inVal1
  %130 = getelementptr inbounds i8*, i8** %129, i64 1
  %131 = load i8*, i8** %130
  %controle2 = call i32 @controle(i8* %131, i32 0)
  store i32 %controle2, i32* %collatzVar1
  %132 = load i32, i32* @x.39
  %133 = load i32, i32* @y.40
  %134 = sub i32 %132, 1
  %135 = mul i32 %132, %134
  %136 = urem i32 %135, 2
  %137 = icmp eq i32 %136, 0
  %138 = icmp slt i32 %133, 10
  %139 = or i1 %137, %138
  br i1 %139, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br label %140

140:                                              ; preds = %originalBBpart288, %originalBBpart284, %originalBBpart224
  %141 = load i32, i32* @x.39
  %142 = load i32, i32* @y.40
  %143 = sub i32 %141, 1
  %144 = mul i32 %141, %143
  %145 = urem i32 %144, 2
  %146 = icmp eq i32 %145, 0
  %147 = icmp slt i32 %142, 10
  %148 = or i1 %146, %147
  br i1 %148, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %140, %originalBB26alteredBB
  %149 = load i32, i32* %collatzVar1
  %150 = icmp sgt i32 %149, 1
  %151 = load i32, i32* @x.39
  %152 = load i32, i32* @y.40
  %153 = sub i32 %151, 1
  %154 = mul i32 %151, %153
  %155 = urem i32 %154, 2
  %156 = icmp eq i32 %155, 0
  %157 = icmp slt i32 %152, 10
  %158 = or i1 %156, %157
  br i1 %158, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br i1 %150, label %159, label %282

159:                                              ; preds = %originalBBpart228
  %160 = load i32, i32* @x.39
  %161 = load i32, i32* @y.40
  %162 = sub i32 %160, 1
  %163 = mul i32 %160, %162
  %164 = urem i32 %163, 2
  %165 = icmp eq i32 %164, 0
  %166 = icmp slt i32 %161, 10
  %167 = or i1 %165, %166
  br i1 %167, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %159, %originalBB30alteredBB
  %168 = load i32, i32* %collatzVar1
  %169 = srem i32 %168, 2
  %170 = icmp eq i32 %169, 0
  %171 = load i32, i32* @x.39
  %172 = load i32, i32* @y.40
  %173 = sub i32 %171, 1
  %174 = mul i32 %171, %173
  %175 = urem i32 %174, 2
  %176 = icmp eq i32 %175, 0
  %177 = icmp slt i32 %172, 10
  %178 = or i1 %176, %177
  br i1 %178, label %originalBBpart234, label %originalBB30alteredBB

originalBBpart234:                                ; preds = %originalBB30
  br i1 %170, label %179, label %198

179:                                              ; preds = %originalBBpart234
  %180 = load i32, i32* @x.39
  %181 = load i32, i32* @y.40
  %182 = sub i32 %180, 1
  %183 = mul i32 %180, %182
  %184 = urem i32 %183, 2
  %185 = icmp eq i32 %184, 0
  %186 = icmp slt i32 %181, 10
  %187 = or i1 %185, %186
  br i1 %187, label %originalBB36, label %originalBB36alteredBB

originalBB36:                                     ; preds = %179, %originalBB36alteredBB
  %188 = load i32, i32* %collatzVar1
  %189 = sdiv i32 %188, 2
  store i32 %189, i32* %collatzVar1
  %190 = load i32, i32* @x.39
  %191 = load i32, i32* @y.40
  %192 = sub i32 %190, 1
  %193 = mul i32 %190, %192
  %194 = urem i32 %193, 2
  %195 = icmp eq i32 %194, 0
  %196 = icmp slt i32 %191, 10
  %197 = or i1 %195, %196
  br i1 %197, label %originalBBpart252, label %originalBB36alteredBB

originalBBpart252:                                ; preds = %originalBB36
  br label %218

198:                                              ; preds = %originalBBpart234
  %199 = load i32, i32* @x.39
  %200 = load i32, i32* @y.40
  %201 = sub i32 %199, 1
  %202 = mul i32 %199, %201
  %203 = urem i32 %202, 2
  %204 = icmp eq i32 %203, 0
  %205 = icmp slt i32 %200, 10
  %206 = or i1 %204, %205
  br i1 %206, label %originalBB54, label %originalBB54alteredBB

originalBB54:                                     ; preds = %198, %originalBB54alteredBB
  %207 = load i32, i32* %collatzVar1
  %208 = mul i32 %207, 3
  %209 = add i32 %208, 1
  store i32 %209, i32* %collatzVar1
  %210 = load i32, i32* @x.39
  %211 = load i32, i32* @y.40
  %212 = sub i32 %210, 1
  %213 = mul i32 %210, %212
  %214 = urem i32 %213, 2
  %215 = icmp eq i32 %214, 0
  %216 = icmp slt i32 %211, 10
  %217 = or i1 %215, %216
  br i1 %217, label %originalBBpart272, label %originalBB54alteredBB

originalBBpart272:                                ; preds = %originalBB54
  br label %218

218:                                              ; preds = %originalBBpart272, %originalBBpart252
  %219 = load i32, i32* @x.39
  %220 = load i32, i32* @y.40
  %221 = sub i32 %219, 1
  %222 = mul i32 %219, %221
  %223 = urem i32 %222, 2
  %224 = icmp eq i32 %223, 0
  %225 = icmp slt i32 %220, 10
  %226 = or i1 %224, %225
  br i1 %226, label %originalBB74, label %originalBB74alteredBB

originalBB74:                                     ; preds = %218, %originalBB74alteredBB
  %227 = load i32, i32* %collatzVar1
  %228 = sub i32 %58, %227
  %229 = icmp sgt i32 %228, -2
  %230 = load i32, i32* @x.39
  %231 = load i32, i32* @y.40
  %232 = sub i32 %230, 1
  %233 = mul i32 %230, %232
  %234 = urem i32 %233, 2
  %235 = icmp eq i32 %234, 0
  %236 = icmp slt i32 %231, 10
  %237 = or i1 %235, %236
  br i1 %237, label %originalBBpart284, label %originalBB74alteredBB

originalBBpart284:                                ; preds = %originalBB74
  br i1 %229, label %238, label %140

238:                                              ; preds = %originalBBpart284
  %239 = load i32, i32* @x.39
  %240 = load i32, i32* @y.40
  %241 = sub i32 %239, 1
  %242 = mul i32 %239, %241
  %243 = urem i32 %242, 2
  %244 = icmp eq i32 %243, 0
  %245 = icmp slt i32 %240, 10
  %246 = or i1 %244, %245
  br i1 %246, label %originalBB86, label %originalBB86alteredBB

originalBB86:                                     ; preds = %238, %originalBB86alteredBB
  %247 = load i32, i32* %collatzVar1
  %248 = add i32 %58, %247
  %249 = icmp slt i32 %248, 2
  %250 = load i32, i32* @x.39
  %251 = load i32, i32* @y.40
  %252 = sub i32 %250, 1
  %253 = mul i32 %250, %252
  %254 = urem i32 %253, 2
  %255 = icmp eq i32 %254, 0
  %256 = icmp slt i32 %251, 10
  %257 = or i1 %255, %256
  br i1 %257, label %originalBBpart288, label %originalBB86alteredBB

originalBBpart288:                                ; preds = %originalBB86
  br i1 %249, label %258, label %140

258:                                              ; preds = %originalBBpart288
  %259 = load i32, i32* @x.39
  %260 = load i32, i32* @y.40
  %261 = sub i32 %259, 1
  %262 = mul i32 %259, %261
  %263 = urem i32 %262, 2
  %264 = icmp eq i32 %263, 0
  %265 = icmp slt i32 %260, 10
  %266 = or i1 %264, %265
  br i1 %266, label %originalBB90, label %originalBB90alteredBB

originalBB90:                                     ; preds = %258, %originalBB90alteredBB
  %267 = load i8*, i8** %12, align 8, !dbg !3384
  %268 = getelementptr inbounds i8, i8* %267, i64 0, !dbg !3384
  %269 = load i8, i8* %268, align 1, !dbg !3384
  %270 = sext i8 %269 to i32, !dbg !3384
  %271 = icmp eq i32 %270, 96, !dbg !3385
  %272 = zext i1 %271 to i64, !dbg !3384
  %273 = select i1 %271, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14.89, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.15.90, i64 0, i64 0), !dbg !3384
  store i8* %273, i8** %11, align 8, !dbg !3386
  %274 = load i32, i32* @x.39
  %275 = load i32, i32* @y.40
  %276 = sub i32 %274, 1
  %277 = mul i32 %274, %276
  %278 = urem i32 %277, 2
  %279 = icmp eq i32 %278, 0
  %280 = icmp slt i32 %275, 10
  %281 = or i1 %279, %280
  br i1 %281, label %originalBBpart292, label %originalBB90alteredBB

originalBBpart292:                                ; preds = %originalBB90
  br label %538, !dbg !3386

282:                                              ; preds = %originalBBpart228
  %283 = load i32, i32* @x.39
  %284 = load i32, i32* @y.40
  %285 = sub i32 %283, 1
  %286 = mul i32 %283, %285
  %287 = urem i32 %286, 2
  %288 = icmp eq i32 %287, 0
  %289 = icmp slt i32 %284, 10
  %290 = or i1 %288, %289
  br i1 %290, label %originalBB94, label %originalBB94alteredBB

originalBB94:                                     ; preds = %282, %originalBB94alteredBB
  %291 = load i8*, i8** %15, align 8, !dbg !3387
  %292 = call i32 @c_strcasecmp(i8* %291, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.16.91, i64 0, i64 0)) #13, !dbg !3387
  %293 = load i32, i32* @x.39
  %294 = load i32, i32* @y.40
  %295 = sub i32 %293, 1
  %296 = mul i32 %293, %295
  %297 = urem i32 %296, 2
  %298 = icmp eq i32 %297, 0
  %299 = icmp slt i32 %294, 10
  %300 = or i1 %298, %299
  br i1 %300, label %originalBBpart296, label %originalBB94alteredBB

originalBBpart296:                                ; preds = %originalBB94
  br label %301, !dbg !3387

301:                                              ; preds = %originalBBpart296
  %302 = load i32, i32* @x.39
  %303 = load i32, i32* @y.40
  %304 = sub i32 %302, 1
  %305 = mul i32 %302, %304
  %306 = urem i32 %305, 2
  %307 = icmp eq i32 %306, 0
  %308 = icmp slt i32 %303, 10
  %309 = or i1 %307, %308
  br i1 %309, label %originalBB98, label %originalBB98alteredBB

originalBB98:                                     ; preds = %301, %originalBB98alteredBB
  %collatzVar = alloca i32
  %310 = load i32, i32* @x.39
  %311 = load i32, i32* @y.40
  %312 = sub i32 %310, 1
  %313 = mul i32 %310, %312
  %314 = urem i32 %313, 2
  %315 = icmp eq i32 %314, 0
  %316 = icmp slt i32 %311, 10
  %317 = or i1 %315, %316
  br i1 %317, label %originalBBpart2100, label %originalBB98alteredBB

originalBBpart2100:                               ; preds = %originalBB98
  br label %318

318:                                              ; preds = %originalBBpart2100
  %319 = load i32, i32* @x.39
  %320 = load i32, i32* @y.40
  %321 = sub i32 %319, 1
  %322 = mul i32 %319, %321
  %323 = urem i32 %322, 2
  %324 = icmp eq i32 %323, 0
  %325 = icmp slt i32 %320, 10
  %326 = or i1 %324, %325
  br i1 %326, label %originalBB102, label %originalBB102alteredBB

originalBB102:                                    ; preds = %318, %originalBB102alteredBB
  %327 = load i32, i32* @inVal0
  %328 = icmp sgt i32 %327, 1
  %329 = load i32, i32* @x.39
  %330 = load i32, i32* @y.40
  %331 = sub i32 %329, 1
  %332 = mul i32 %329, %331
  %333 = urem i32 %332, 2
  %334 = icmp eq i32 %333, 0
  %335 = icmp slt i32 %330, 10
  %336 = or i1 %334, %335
  br i1 %336, label %originalBBpart2104, label %originalBB102alteredBB

originalBBpart2104:                               ; preds = %originalBB102
  br i1 %328, label %354, label %337

337:                                              ; preds = %originalBBpart2104
  %338 = load i32, i32* @x.39
  %339 = load i32, i32* @y.40
  %340 = sub i32 %338, 1
  %341 = mul i32 %338, %340
  %342 = urem i32 %341, 2
  %343 = icmp eq i32 %342, 0
  %344 = icmp slt i32 %339, 10
  %345 = or i1 %343, %344
  br i1 %345, label %originalBB106, label %originalBB106alteredBB

originalBB106:                                    ; preds = %337, %originalBB106alteredBB
  store i32 46, i32* %collatzVar
  %346 = load i32, i32* @x.39
  %347 = load i32, i32* @y.40
  %348 = sub i32 %346, 1
  %349 = mul i32 %346, %348
  %350 = urem i32 %349, 2
  %351 = icmp eq i32 %350, 0
  %352 = icmp slt i32 %347, 10
  %353 = or i1 %351, %352
  br i1 %353, label %originalBBpart2108, label %originalBB106alteredBB

originalBBpart2108:                               ; preds = %originalBB106
  br label %354

354:                                              ; preds = %originalBBpart2108, %originalBBpart2104
  %355 = load i32, i32* @x.39
  %356 = load i32, i32* @y.40
  %357 = sub i32 %355, 1
  %358 = mul i32 %355, %357
  %359 = urem i32 %358, 2
  %360 = icmp eq i32 %359, 0
  %361 = icmp slt i32 %356, 10
  %362 = or i1 %360, %361
  br i1 %362, label %originalBB110, label %originalBB110alteredBB

originalBB110:                                    ; preds = %354, %originalBB110alteredBB
  %363 = load i8**, i8*** @inVal1
  %364 = getelementptr inbounds i8*, i8** %363, i64 1
  %365 = load i8*, i8** %364
  %366 = add i32 0, -1
  %controle = call i32 @controle(i8* %365, i32 %366)
  store i32 %controle, i32* %collatzVar
  %367 = load i32, i32* @x.39
  %368 = load i32, i32* @y.40
  %369 = sub i32 %367, 1
  %370 = mul i32 %367, %369
  %371 = urem i32 %370, 2
  %372 = icmp eq i32 %371, 0
  %373 = icmp slt i32 %368, 10
  %374 = or i1 %372, %373
  br i1 %374, label %originalBBpart2126, label %originalBB110alteredBB

originalBBpart2126:                               ; preds = %originalBB110
  br label %375

375:                                              ; preds = %originalBBpart2178, %originalBBpart2166, %originalBBpart2126
  %376 = load i32, i32* @x.39
  %377 = load i32, i32* @y.40
  %378 = sub i32 %376, 1
  %379 = mul i32 %376, %378
  %380 = urem i32 %379, 2
  %381 = icmp eq i32 %380, 0
  %382 = icmp slt i32 %377, 10
  %383 = or i1 %381, %382
  br i1 %383, label %originalBB128, label %originalBB128alteredBB

originalBB128:                                    ; preds = %375, %originalBB128alteredBB
  %384 = load i32, i32* %collatzVar
  %385 = icmp sgt i32 %384, 1
  %386 = load i32, i32* @x.39
  %387 = load i32, i32* @y.40
  %388 = sub i32 %386, 1
  %389 = mul i32 %386, %388
  %390 = urem i32 %389, 2
  %391 = icmp eq i32 %390, 0
  %392 = icmp slt i32 %387, 10
  %393 = or i1 %391, %392
  br i1 %393, label %originalBBpart2130, label %originalBB128alteredBB

originalBBpart2130:                               ; preds = %originalBB128
  br i1 %385, label %394, label %517

394:                                              ; preds = %originalBBpart2130
  %395 = load i32, i32* @x.39
  %396 = load i32, i32* @y.40
  %397 = sub i32 %395, 1
  %398 = mul i32 %395, %397
  %399 = urem i32 %398, 2
  %400 = icmp eq i32 %399, 0
  %401 = icmp slt i32 %396, 10
  %402 = or i1 %400, %401
  br i1 %402, label %originalBB132, label %originalBB132alteredBB

originalBB132:                                    ; preds = %394, %originalBB132alteredBB
  %403 = load i32, i32* %collatzVar
  %404 = srem i32 %403, 2
  %405 = icmp eq i32 %404, 0
  %406 = load i32, i32* @x.39
  %407 = load i32, i32* @y.40
  %408 = sub i32 %406, 1
  %409 = mul i32 %406, %408
  %410 = urem i32 %409, 2
  %411 = icmp eq i32 %410, 0
  %412 = icmp slt i32 %407, 10
  %413 = or i1 %411, %412
  br i1 %413, label %originalBBpart2136, label %originalBB132alteredBB

originalBBpart2136:                               ; preds = %originalBB132
  br i1 %405, label %414, label %433

414:                                              ; preds = %originalBBpart2136
  %415 = load i32, i32* @x.39
  %416 = load i32, i32* @y.40
  %417 = sub i32 %415, 1
  %418 = mul i32 %415, %417
  %419 = urem i32 %418, 2
  %420 = icmp eq i32 %419, 0
  %421 = icmp slt i32 %416, 10
  %422 = or i1 %420, %421
  br i1 %422, label %originalBB138, label %originalBB138alteredBB

originalBB138:                                    ; preds = %414, %originalBB138alteredBB
  %423 = load i32, i32* %collatzVar
  %424 = sdiv i32 %423, 2
  store i32 %424, i32* %collatzVar
  %425 = load i32, i32* @x.39
  %426 = load i32, i32* @y.40
  %427 = sub i32 %425, 1
  %428 = mul i32 %425, %427
  %429 = urem i32 %428, 2
  %430 = icmp eq i32 %429, 0
  %431 = icmp slt i32 %426, 10
  %432 = or i1 %430, %431
  br i1 %432, label %originalBBpart2141, label %originalBB138alteredBB

originalBBpart2141:                               ; preds = %originalBB138
  br label %453

433:                                              ; preds = %originalBBpart2136
  %434 = load i32, i32* @x.39
  %435 = load i32, i32* @y.40
  %436 = sub i32 %434, 1
  %437 = mul i32 %434, %436
  %438 = urem i32 %437, 2
  %439 = icmp eq i32 %438, 0
  %440 = icmp slt i32 %435, 10
  %441 = or i1 %439, %440
  br i1 %441, label %originalBB143, label %originalBB143alteredBB

originalBB143:                                    ; preds = %433, %originalBB143alteredBB
  %442 = load i32, i32* %collatzVar
  %443 = mul i32 %442, 3
  %444 = add i32 %443, 1
  store i32 %444, i32* %collatzVar
  %445 = load i32, i32* @x.39
  %446 = load i32, i32* @y.40
  %447 = sub i32 %445, 1
  %448 = mul i32 %445, %447
  %449 = urem i32 %448, 2
  %450 = icmp eq i32 %449, 0
  %451 = icmp slt i32 %446, 10
  %452 = or i1 %450, %451
  br i1 %452, label %originalBBpart2151, label %originalBB143alteredBB

originalBBpart2151:                               ; preds = %originalBB143
  br label %453

453:                                              ; preds = %originalBBpart2151, %originalBBpart2141
  %454 = load i32, i32* @x.39
  %455 = load i32, i32* @y.40
  %456 = sub i32 %454, 1
  %457 = mul i32 %454, %456
  %458 = urem i32 %457, 2
  %459 = icmp eq i32 %458, 0
  %460 = icmp slt i32 %455, 10
  %461 = or i1 %459, %460
  br i1 %461, label %originalBB153, label %originalBB153alteredBB

originalBB153:                                    ; preds = %453, %originalBB153alteredBB
  %462 = load i32, i32* %collatzVar
  %463 = sub i32 %292, %462
  %464 = icmp sgt i32 %463, -2
  %465 = load i32, i32* @x.39
  %466 = load i32, i32* @y.40
  %467 = sub i32 %465, 1
  %468 = mul i32 %465, %467
  %469 = urem i32 %468, 2
  %470 = icmp eq i32 %469, 0
  %471 = icmp slt i32 %466, 10
  %472 = or i1 %470, %471
  br i1 %472, label %originalBBpart2166, label %originalBB153alteredBB

originalBBpart2166:                               ; preds = %originalBB153
  br i1 %464, label %473, label %375

473:                                              ; preds = %originalBBpart2166
  %474 = load i32, i32* @x.39
  %475 = load i32, i32* @y.40
  %476 = sub i32 %474, 1
  %477 = mul i32 %474, %476
  %478 = urem i32 %477, 2
  %479 = icmp eq i32 %478, 0
  %480 = icmp slt i32 %475, 10
  %481 = or i1 %479, %480
  br i1 %481, label %originalBB168, label %originalBB168alteredBB

originalBB168:                                    ; preds = %473, %originalBB168alteredBB
  %482 = load i32, i32* %collatzVar
  %483 = add i32 %292, %482
  %484 = icmp slt i32 %483, 2
  %485 = load i32, i32* @x.39
  %486 = load i32, i32* @y.40
  %487 = sub i32 %485, 1
  %488 = mul i32 %485, %487
  %489 = urem i32 %488, 2
  %490 = icmp eq i32 %489, 0
  %491 = icmp slt i32 %486, 10
  %492 = or i1 %490, %491
  br i1 %492, label %originalBBpart2178, label %originalBB168alteredBB

originalBBpart2178:                               ; preds = %originalBB168
  br i1 %484, label %493, label %375

493:                                              ; preds = %originalBBpart2178
  %494 = load i32, i32* @x.39
  %495 = load i32, i32* @y.40
  %496 = sub i32 %494, 1
  %497 = mul i32 %494, %496
  %498 = urem i32 %497, 2
  %499 = icmp eq i32 %498, 0
  %500 = icmp slt i32 %495, 10
  %501 = or i1 %499, %500
  br i1 %501, label %originalBB180, label %originalBB180alteredBB

originalBB180:                                    ; preds = %493, %originalBB180alteredBB
  %502 = load i8*, i8** %12, align 8, !dbg !3389
  %503 = getelementptr inbounds i8, i8* %502, i64 0, !dbg !3389
  %504 = load i8, i8* %503, align 1, !dbg !3389
  %505 = sext i8 %504 to i32, !dbg !3389
  %506 = icmp eq i32 %505, 96, !dbg !3390
  %507 = zext i1 %506 to i64, !dbg !3389
  %508 = select i1 %506, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.17.92, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18.93, i64 0, i64 0), !dbg !3389
  store i8* %508, i8** %11, align 8, !dbg !3391
  %509 = load i32, i32* @x.39
  %510 = load i32, i32* @y.40
  %511 = sub i32 %509, 1
  %512 = mul i32 %509, %511
  %513 = urem i32 %512, 2
  %514 = icmp eq i32 %513, 0
  %515 = icmp slt i32 %510, 10
  %516 = or i1 %514, %515
  br i1 %516, label %originalBBpart2182, label %originalBB180alteredBB

originalBBpart2182:                               ; preds = %originalBB180
  br label %538, !dbg !3391

517:                                              ; preds = %originalBBpart2130
  %518 = load i32, i32* @x.39
  %519 = load i32, i32* @y.40
  %520 = sub i32 %518, 1
  %521 = mul i32 %518, %520
  %522 = urem i32 %521, 2
  %523 = icmp eq i32 %522, 0
  %524 = icmp slt i32 %519, 10
  %525 = or i1 %523, %524
  br i1 %525, label %originalBB184, label %originalBB184alteredBB

originalBB184:                                    ; preds = %517, %originalBB184alteredBB
  %526 = load i32, i32* %13, align 4, !dbg !3392
  %527 = icmp eq i32 %526, 9, !dbg !3393
  %528 = zext i1 %527 to i64, !dbg !3392
  %529 = select i1 %527, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.85, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.87, i64 0, i64 0), !dbg !3392
  store i8* %529, i8** %11, align 8, !dbg !3394
  %530 = load i32, i32* @x.39
  %531 = load i32, i32* @y.40
  %532 = sub i32 %530, 1
  %533 = mul i32 %530, %532
  %534 = urem i32 %533, 2
  %535 = icmp eq i32 %534, 0
  %536 = icmp slt i32 %531, 10
  %537 = or i1 %535, %536
  br i1 %537, label %originalBBpart2186, label %originalBB184alteredBB

originalBBpart2186:                               ; preds = %originalBB184
  br label %538, !dbg !3394

538:                                              ; preds = %originalBBpart2186, %originalBBpart2182, %originalBBpart292, %originalBBpart24
  %539 = load i32, i32* @x.39
  %540 = load i32, i32* @y.40
  %541 = sub i32 %539, 1
  %542 = mul i32 %539, %541
  %543 = urem i32 %542, 2
  %544 = icmp eq i32 %543, 0
  %545 = icmp slt i32 %540, 10
  %546 = or i1 %544, %545
  br i1 %546, label %originalBB188, label %originalBB188alteredBB

originalBB188:                                    ; preds = %538, %originalBB188alteredBB
  %547 = load i8*, i8** %11, align 8, !dbg !3395
  %548 = load i32, i32* @x.39
  %549 = load i32, i32* @y.40
  %550 = sub i32 %548, 1
  %551 = mul i32 %548, %550
  %552 = urem i32 %551, 2
  %553 = icmp eq i32 %552, 0
  %554 = icmp slt i32 %549, 10
  %555 = or i1 %553, %554
  br i1 %555, label %originalBBpart2190, label %originalBB188alteredBB

originalBBpart2190:                               ; preds = %originalBB188
  ret i8* %547, !dbg !3395

originalBBalteredBB:                              ; preds = %originalBB, %2
  %556 = alloca i8*, align 8
  %557 = alloca i8*, align 8
  %558 = alloca i32, align 4
  %559 = alloca i8*, align 8
  %560 = alloca i8*, align 8
  store i8* %0, i8** %557, align 8
  call void @llvm.dbg.declare(metadata i8** %557, metadata !3396, metadata !DIExpression()), !dbg !3365
  store i32 %1, i32* %558, align 4
  call void @llvm.dbg.declare(metadata i32* %558, metadata !3428, metadata !DIExpression()), !dbg !3367
  call void @llvm.dbg.declare(metadata i8** %559, metadata !3429, metadata !DIExpression()), !dbg !3369
  %561 = load i8*, i8** %557, align 8, !dbg !3370
  %562 = call i8* @gettext(i8* %561) #10, !dbg !3370
  store i8* %562, i8** %559, align 8, !dbg !3369
  call void @llvm.dbg.declare(metadata i8** %560, metadata !3430, metadata !DIExpression()), !dbg !3372
  %563 = load i8*, i8** %559, align 8, !dbg !3373
  %564 = load i8*, i8** %557, align 8, !dbg !3375
  %565 = icmp ne i8* %563, %564, !dbg !3376
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %29
  %566 = load i8*, i8** %14, align 8, !dbg !3378
  store i8* %566, i8** %11, align 8, !dbg !3379
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %47
  %567 = call i8* @locale_charset(), !dbg !3380
  store i8* %567, i8** %15, align 8, !dbg !3381
  %568 = load i8*, i8** %15, align 8, !dbg !3382
  %569 = call i32 @c_strcasecmp(i8* %568, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.88, i64 0, i64 0)) #13, !dbg !3382
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %67
  %collatzVar1alteredBB = alloca i32
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %84
  %570 = load i32, i32* @inVal0
  %571 = icmp sgt i32 %570, 1
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %103
  store i32 48, i32* %collatzVar1
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %120
  %572 = load i8**, i8*** @inVal1
  %573 = getelementptr inbounds i8*, i8** %572, i64 1
  %574 = load i8*, i8** %573
  %controle2alteredBB = call i32 @controle(i8* %574, i32 0)
  store i32 %controle2alteredBB, i32* %collatzVar1
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %140
  %575 = load i32, i32* %collatzVar1
  %576 = icmp sgt i32 %575, 1
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %159
  %577 = load i32, i32* %collatzVar1
  %_ = shl i32 %577, 2
  %_31 = sub i32 0, %577
  %gen = add i32 %_31, 2
  %_32 = shl i32 %577, 2
  %578 = srem i32 %577, 2
  %579 = icmp eq i32 %578, 0
  br label %originalBB30

originalBB36alteredBB:                            ; preds = %originalBB36, %179
  %580 = load i32, i32* %collatzVar1
  %_37 = sub i32 %580, 2
  %gen38 = mul i32 %_37, 2
  %_39 = sub i32 0, %580
  %gen40 = add i32 %_39, 2
  %_41 = sub i32 %580, 2
  %gen42 = mul i32 %_41, 2
  %_43 = sub i32 %580, 2
  %gen44 = mul i32 %_43, 2
  %_45 = sub i32 %580, 2
  %gen46 = mul i32 %_45, 2
  %_47 = sub i32 %580, 2
  %gen48 = mul i32 %_47, 2
  %_49 = sub i32 0, %580
  %gen50 = add i32 %_49, 2
  %581 = sdiv i32 %580, 2
  store i32 %581, i32* %collatzVar1
  br label %originalBB36

originalBB54alteredBB:                            ; preds = %originalBB54, %198
  %582 = load i32, i32* %collatzVar1
  %_55 = sub i32 %582, 3
  %gen56 = mul i32 %_55, 3
  %_57 = shl i32 %582, 3
  %_58 = sub i32 %582, 3
  %gen59 = mul i32 %_58, 3
  %583 = mul i32 %582, 3
  %_60 = sub i32 %583, 1
  %gen61 = mul i32 %_60, 1
  %_62 = sub i32 0, %583
  %gen63 = add i32 %_62, 1
  %_64 = shl i32 %583, 1
  %_65 = shl i32 %583, 1
  %_66 = shl i32 %583, 1
  %_67 = sub i32 0, %583
  %gen68 = add i32 %_67, 1
  %_69 = sub i32 %583, 1
  %gen70 = mul i32 %_69, 1
  %584 = add i32 %583, 1
  store i32 %584, i32* %collatzVar1
  br label %originalBB54

originalBB74alteredBB:                            ; preds = %originalBB74, %218
  %585 = load i32, i32* %collatzVar1
  %_75 = sub i32 %58, %585
  %gen76 = mul i32 %_75, %585
  %_77 = sub i32 0, %58
  %gen78 = add i32 %_77, %585
  %_79 = shl i32 %58, %585
  %_80 = sub i32 0, %58
  %gen81 = add i32 %_80, %585
  %_82 = shl i32 %58, %585
  %586 = sub i32 %58, %585
  %587 = icmp sgt i32 %586, -2
  br label %originalBB74

originalBB86alteredBB:                            ; preds = %originalBB86, %238
  %588 = load i32, i32* %collatzVar1
  %589 = add i32 %58, %588
  %590 = icmp slt i32 %589, 2
  br label %originalBB86

originalBB90alteredBB:                            ; preds = %originalBB90, %258
  %591 = load i8*, i8** %12, align 8, !dbg !3384
  %592 = getelementptr inbounds i8, i8* %591, i64 0, !dbg !3384
  %593 = load i8, i8* %592, align 1, !dbg !3384
  %594 = sext i8 %593 to i32, !dbg !3384
  %595 = icmp eq i32 %594, 96, !dbg !3385
  %596 = zext i1 %595 to i64, !dbg !3384
  %597 = select i1 %595, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14.89, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.15.90, i64 0, i64 0), !dbg !3384
  store i8* %597, i8** %11, align 8, !dbg !3386
  br label %originalBB90

originalBB94alteredBB:                            ; preds = %originalBB94, %282
  %598 = load i8*, i8** %15, align 8, !dbg !3387
  %599 = call i32 @c_strcasecmp(i8* %598, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.16.91, i64 0, i64 0)) #13, !dbg !3387
  br label %originalBB94

originalBB98alteredBB:                            ; preds = %originalBB98, %301
  %collatzVaralteredBB = alloca i32
  br label %originalBB98

originalBB102alteredBB:                           ; preds = %originalBB102, %318
  %600 = load i32, i32* @inVal0
  %601 = icmp sgt i32 %600, 1
  br label %originalBB102

originalBB106alteredBB:                           ; preds = %originalBB106, %337
  store i32 46, i32* %collatzVar
  br label %originalBB106

originalBB110alteredBB:                           ; preds = %originalBB110, %354
  %602 = load i8**, i8*** @inVal1
  %603 = getelementptr inbounds i8*, i8** %602, i64 1
  %604 = load i8*, i8** %603
  %_111 = sub i32 0, -1
  %gen112 = mul i32 %_111, -1
  %_113 = sub i32 0, -1
  %gen114 = mul i32 %_113, -1
  %_115 = shl i32 0, -1
  %_116 = sub i32 0, 0
  %gen117 = add i32 %_116, -1
  %_118 = shl i32 0, -1
  %_119 = sub i32 0, 0
  %gen120 = add i32 %_119, -1
  %_121 = sub i32 0, 0
  %gen122 = add i32 %_121, -1
  %_123 = sub i32 0, 0
  %gen124 = add i32 %_123, -1
  %605 = add i32 0, -1
  %controlealteredBB = call i32 @controle(i8* %604, i32 %605)
  store i32 %controlealteredBB, i32* %collatzVar
  br label %originalBB110

originalBB128alteredBB:                           ; preds = %originalBB128, %375
  %606 = load i32, i32* %collatzVar
  %607 = icmp sgt i32 %606, 1
  br label %originalBB128

originalBB132alteredBB:                           ; preds = %originalBB132, %394
  %608 = load i32, i32* %collatzVar
  %_133 = sub i32 %608, 2
  %gen134 = mul i32 %_133, 2
  %609 = srem i32 %608, 2
  %610 = icmp eq i32 %609, 0
  br label %originalBB132

originalBB138alteredBB:                           ; preds = %originalBB138, %414
  %611 = load i32, i32* %collatzVar
  %_139 = shl i32 %611, 2
  %612 = sdiv i32 %611, 2
  store i32 %612, i32* %collatzVar
  br label %originalBB138

originalBB143alteredBB:                           ; preds = %originalBB143, %433
  %613 = load i32, i32* %collatzVar
  %_144 = shl i32 %613, 3
  %614 = mul i32 %613, 3
  %_145 = sub i32 %614, 1
  %gen146 = mul i32 %_145, 1
  %_147 = shl i32 %614, 1
  %_148 = sub i32 0, %614
  %gen149 = add i32 %_148, 1
  %615 = add i32 %614, 1
  store i32 %615, i32* %collatzVar
  br label %originalBB143

originalBB153alteredBB:                           ; preds = %originalBB153, %453
  %616 = load i32, i32* %collatzVar
  %_154 = sub i32 0, %292
  %gen155 = add i32 %_154, %616
  %_156 = sub i32 0, %292
  %gen157 = add i32 %_156, %616
  %_158 = sub i32 0, %292
  %gen159 = add i32 %_158, %616
  %_160 = sub i32 0, %292
  %gen161 = add i32 %_160, %616
  %_162 = sub i32 0, %292
  %gen163 = add i32 %_162, %616
  %_164 = shl i32 %292, %616
  %617 = sub i32 %292, %616
  %618 = icmp sgt i32 %617, -2
  br label %originalBB153

originalBB168alteredBB:                           ; preds = %originalBB168, %473
  %619 = load i32, i32* %collatzVar
  %_169 = sub i32 %292, %619
  %gen170 = mul i32 %_169, %619
  %_171 = shl i32 %292, %619
  %_172 = shl i32 %292, %619
  %_173 = shl i32 %292, %619
  %_174 = sub i32 %292, %619
  %gen175 = mul i32 %_174, %619
  %_176 = shl i32 %292, %619
  %620 = add i32 %292, %619
  %621 = icmp slt i32 %620, 2
  br label %originalBB168

originalBB180alteredBB:                           ; preds = %originalBB180, %493
  %622 = load i8*, i8** %12, align 8, !dbg !3389
  %623 = getelementptr inbounds i8, i8* %622, i64 0, !dbg !3389
  %624 = load i8, i8* %623, align 1, !dbg !3389
  %625 = sext i8 %624 to i32, !dbg !3389
  %626 = icmp eq i32 %625, 96, !dbg !3390
  %627 = zext i1 %626 to i64, !dbg !3389
  %628 = select i1 %626, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.17.92, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18.93, i64 0, i64 0), !dbg !3389
  store i8* %628, i8** %11, align 8, !dbg !3391
  br label %originalBB180

originalBB184alteredBB:                           ; preds = %originalBB184, %517
  %629 = load i32, i32* %13, align 4, !dbg !3392
  %630 = icmp eq i32 %629, 9, !dbg !3393
  %631 = zext i1 %630 to i64, !dbg !3392
  %632 = select i1 %630, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.85, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.87, i64 0, i64 0), !dbg !3392
  store i8* %632, i8** %11, align 8, !dbg !3394
  br label %originalBB184

originalBB188alteredBB:                           ; preds = %originalBB188, %538
  %633 = load i8*, i8** %11, align 8, !dbg !3395
  br label %originalBB188
}

; Function Attrs: nounwind readonly
declare dso_local i64 @strlen(i8*) #7

; Function Attrs: nounwind readonly
declare dso_local i32 @memcmp(i8*, i8*, i64) #7

; Function Attrs: nounwind readnone
declare dso_local i16** @__ctype_b_loc() #8

; Function Attrs: nounwind
declare dso_local i32 @iswprint(i32) #2

; Function Attrs: nounwind readonly
declare dso_local i32 @mbsinit(%struct.__mbstate_t*) #7

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quotearg_char(i8*, i8 signext) #4 !dbg !3431 {
  %3 = load i32, i32* @x.41
  %4 = load i32, i32* @y.42
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca i8*, align 8
  %12 = alloca i8, align 1
  store i8* %0, i8** %11, align 8
  call void @llvm.dbg.declare(metadata i8** %11, metadata !3434, metadata !DIExpression()), !dbg !3435
  store i8 %1, i8* %12, align 1
  call void @llvm.dbg.declare(metadata i8* %12, metadata !3436, metadata !DIExpression()), !dbg !3437
  %13 = load i8*, i8** %11, align 8, !dbg !3438
  %14 = load i8, i8* %12, align 1, !dbg !3439
  %15 = call i8* @quotearg_char_mem(i8* %13, i64 -1, i8 signext %14), !dbg !3440
  %16 = load i32, i32* @x.41
  %17 = load i32, i32* @y.42
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i8* %15, !dbg !3441

originalBBalteredBB:                              ; preds = %originalBB, %2
  %24 = alloca i8*, align 8
  %25 = alloca i8, align 1
  store i8* %0, i8** %24, align 8
  call void @llvm.dbg.declare(metadata i8** %24, metadata !3442, metadata !DIExpression()), !dbg !3435
  store i8 %1, i8* %25, align 1
  call void @llvm.dbg.declare(metadata i8* %25, metadata !3474, metadata !DIExpression()), !dbg !3437
  %26 = load i8*, i8** %24, align 8, !dbg !3438
  %27 = load i8, i8* %25, align 1, !dbg !3439
  %28 = call i8* @quotearg_char_mem(i8* %26, i64 -1, i8 signext %27), !dbg !3440
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quotearg_colon(i8*) #4 !dbg !3475 {
  %2 = load i32, i32* @x.43
  %3 = load i32, i32* @y.44
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i8*, align 8
  store i8* %0, i8** %10, align 8
  call void @llvm.dbg.declare(metadata i8** %10, metadata !3478, metadata !DIExpression()), !dbg !3479
  %11 = load i8*, i8** %10, align 8, !dbg !3480
  %12 = call i8* @quotearg_char(i8* %11, i8 signext 58), !dbg !3481
  %13 = load i32, i32* @x.43
  %14 = load i32, i32* @y.44
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i8* %12, !dbg !3482

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca i8*, align 8
  store i8* %0, i8** %21, align 8
  call void @llvm.dbg.declare(metadata i8** %21, metadata !3483, metadata !DIExpression()), !dbg !3479
  %22 = load i8*, i8** %21, align 8, !dbg !3480
  %23 = call i8* @quotearg_char(i8* %22, i8 signext 58), !dbg !3481
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quote_n_mem(i32, i8*, i64) #4 !dbg !3515 {
  %4 = load i32, i32* @x.45
  %5 = load i32, i32* @y.46
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca i32, align 4
  %13 = alloca i8*, align 8
  %14 = alloca i64, align 8
  store i32 %0, i32* %12, align 4
  call void @llvm.dbg.declare(metadata i32* %12, metadata !3518, metadata !DIExpression()), !dbg !3519
  store i8* %1, i8** %13, align 8
  call void @llvm.dbg.declare(metadata i8** %13, metadata !3520, metadata !DIExpression()), !dbg !3521
  store i64 %2, i64* %14, align 8
  call void @llvm.dbg.declare(metadata i64* %14, metadata !3522, metadata !DIExpression()), !dbg !3523
  %15 = load i32, i32* %12, align 4, !dbg !3524
  %16 = load i8*, i8** %13, align 8, !dbg !3525
  %17 = load i64, i64* %14, align 8, !dbg !3526
  %18 = call i8* @quotearg_n_options(i32 %15, i8* %16, i64 %17, %struct.quoting_options* @quote_quoting_options), !dbg !3527
  %19 = load i32, i32* @x.45
  %20 = load i32, i32* @y.46
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i8* %18, !dbg !3528

originalBBalteredBB:                              ; preds = %originalBB, %3
  %27 = alloca i32, align 4
  %28 = alloca i8*, align 8
  %29 = alloca i64, align 8
  store i32 %0, i32* %27, align 4
  call void @llvm.dbg.declare(metadata i32* %27, metadata !3529, metadata !DIExpression()), !dbg !3519
  store i8* %1, i8** %28, align 8
  call void @llvm.dbg.declare(metadata i8** %28, metadata !3561, metadata !DIExpression()), !dbg !3521
  store i64 %2, i64* %29, align 8
  call void @llvm.dbg.declare(metadata i64* %29, metadata !3562, metadata !DIExpression()), !dbg !3523
  %30 = load i32, i32* %27, align 4, !dbg !3524
  %31 = load i8*, i8** %28, align 8, !dbg !3525
  %32 = load i64, i64* %29, align 8, !dbg !3526
  %33 = call i8* @quotearg_n_options(i32 %30, i8* %31, i64 %32, %struct.quoting_options* @quote_quoting_options), !dbg !3527
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quote_n(i32, i8*) #4 !dbg !3563 {
  %3 = load i32, i32* @x.47
  %4 = load i32, i32* @y.48
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca i32, align 4
  %12 = alloca i8*, align 8
  store i32 %0, i32* %11, align 4
  call void @llvm.dbg.declare(metadata i32* %11, metadata !3566, metadata !DIExpression()), !dbg !3567
  store i8* %1, i8** %12, align 8
  call void @llvm.dbg.declare(metadata i8** %12, metadata !3568, metadata !DIExpression()), !dbg !3569
  %13 = load i32, i32* %11, align 4, !dbg !3570
  %14 = load i8*, i8** %12, align 8, !dbg !3571
  %15 = call i8* @quote_n_mem(i32 %13, i8* %14, i64 -1), !dbg !3572
  %16 = load i32, i32* @x.47
  %17 = load i32, i32* @y.48
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i8* %15, !dbg !3573

originalBBalteredBB:                              ; preds = %originalBB, %2
  %24 = alloca i32, align 4
  %25 = alloca i8*, align 8
  store i32 %0, i32* %24, align 4
  call void @llvm.dbg.declare(metadata i32* %24, metadata !3574, metadata !DIExpression()), !dbg !3567
  store i8* %1, i8** %25, align 8
  call void @llvm.dbg.declare(metadata i8** %25, metadata !3606, metadata !DIExpression()), !dbg !3569
  %26 = load i32, i32* %24, align 4, !dbg !3570
  %27 = load i8*, i8** %25, align 8, !dbg !3571
  %28 = call i8* @quote_n_mem(i32 %26, i8* %27, i64 -1), !dbg !3572
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quote(i8*) #4 !dbg !3607 {
  %2 = load i32, i32* @x.49
  %3 = load i32, i32* @y.50
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i8*, align 8
  store i8* %0, i8** %10, align 8
  call void @llvm.dbg.declare(metadata i8** %10, metadata !3610, metadata !DIExpression()), !dbg !3611
  %11 = load i8*, i8** %10, align 8, !dbg !3612
  %12 = call i8* @quote_n(i32 0, i8* %11), !dbg !3613
  %13 = load i32, i32* @x.49
  %14 = load i32, i32* @y.50
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i8* %12, !dbg !3614

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca i8*, align 8
  store i8* %0, i8** %21, align 8
  call void @llvm.dbg.declare(metadata i8** %21, metadata !3615, metadata !DIExpression()), !dbg !3611
  %22 = load i8*, i8** %21, align 8, !dbg !3612
  %23 = call i8* @quote_n(i32 0, i8* %22), !dbg !3613
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @getcon(i8**) #4 !dbg !3647 {
  %2 = load i32, i32* @x.51
  %3 = load i32, i32* @y.52
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i8**, align 8
  store i8** %0, i8*** %10, align 8
  call void @llvm.dbg.declare(metadata i8*** %10, metadata !3653, metadata !DIExpression()), !dbg !3654
  %11 = call i32* @__errno_location() #15, !dbg !3655
  store i32 95, i32* %11, align 4, !dbg !3656
  %12 = load i32, i32* @x.51
  %13 = load i32, i32* @y.52
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32 -1, !dbg !3657

originalBBalteredBB:                              ; preds = %originalBB, %1
  %20 = alloca i8**, align 8
  store i8** %0, i8*** %20, align 8
  call void @llvm.dbg.declare(metadata i8*** %20, metadata !3658, metadata !DIExpression()), !dbg !3654
  %21 = call i32* @__errno_location() #15, !dbg !3655
  store i32 95, i32* %21, align 4, !dbg !3656
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @parse_user_spec(i8*, i32*, i32*, i8**, i8**) #4 !dbg !3661 {
  %6 = load i32, i32* @x.53
  %7 = load i32, i32* @y.54
  %8 = sub i32 %6, 1
  %9 = mul i32 %6, %8
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %7, 10
  %13 = or i1 %11, %12
  br i1 %13, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %5, %originalBBalteredBB
  %14 = alloca i8*, align 8
  %15 = alloca i32*, align 8
  %16 = alloca i32*, align 8
  %17 = alloca i8**, align 8
  %18 = alloca i8**, align 8
  %19 = alloca i8*, align 8
  %20 = alloca i8*, align 8
  %21 = alloca i8*, align 8
  store i8* %0, i8** %14, align 8
  call void @llvm.dbg.declare(metadata i8** %14, metadata !3664, metadata !DIExpression()), !dbg !3665
  store i32* %1, i32** %15, align 8
  call void @llvm.dbg.declare(metadata i32** %15, metadata !3666, metadata !DIExpression()), !dbg !3667
  store i32* %2, i32** %16, align 8
  call void @llvm.dbg.declare(metadata i32** %16, metadata !3668, metadata !DIExpression()), !dbg !3669
  store i8** %3, i8*** %17, align 8
  call void @llvm.dbg.declare(metadata i8*** %17, metadata !3670, metadata !DIExpression()), !dbg !3671
  store i8** %4, i8*** %18, align 8
  call void @llvm.dbg.declare(metadata i8*** %18, metadata !3672, metadata !DIExpression()), !dbg !3673
  call void @llvm.dbg.declare(metadata i8** %19, metadata !3674, metadata !DIExpression()), !dbg !3675
  %22 = load i32*, i32** %16, align 8, !dbg !3676
  %23 = icmp ne i32* %22, null, !dbg !3676
  %24 = load i32, i32* @x.53
  %25 = load i32, i32* @y.54
  %26 = sub i32 %24, 1
  %27 = mul i32 %24, %26
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %29, %30
  br i1 %31, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %23, label %32, label %51, !dbg !3676

32:                                               ; preds = %originalBBpart2
  %33 = load i32, i32* @x.53
  %34 = load i32, i32* @y.54
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %32, %originalBB1alteredBB
  %41 = load i8*, i8** %14, align 8, !dbg !3677
  %42 = call i8* @strchr(i8* %41, i32 58) #13, !dbg !3678
  %43 = load i32, i32* @x.53
  %44 = load i32, i32* @y.54
  %45 = sub i32 %43, 1
  %46 = mul i32 %43, %45
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %48, %49
  br i1 %50, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %68, !dbg !3676

51:                                               ; preds = %originalBBpart2
  %52 = load i32, i32* @x.53
  %53 = load i32, i32* @y.54
  %54 = sub i32 %52, 1
  %55 = mul i32 %52, %54
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %53, 10
  %59 = or i1 %57, %58
  br i1 %59, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %51, %originalBB6alteredBB
  %60 = load i32, i32* @x.53
  %61 = load i32, i32* @y.54
  %62 = sub i32 %60, 1
  %63 = mul i32 %60, %62
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %61, 10
  %67 = or i1 %65, %66
  br i1 %67, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %68, !dbg !3676

68:                                               ; preds = %originalBBpart28, %originalBBpart24
  %69 = phi i8* [ %42, %originalBBpart24 ], [ null, %originalBBpart28 ], !dbg !3676
  %70 = load i32, i32* @x.53
  %71 = load i32, i32* @y.54
  %72 = sub i32 %70, 1
  %73 = mul i32 %70, %72
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %71, 10
  %77 = or i1 %75, %76
  br i1 %77, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %68, %originalBB10alteredBB
  store i8* %69, i8** %19, align 8, !dbg !3675
  call void @llvm.dbg.declare(metadata i8** %20, metadata !3679, metadata !DIExpression()), !dbg !3680
  %78 = load i8*, i8** %14, align 8, !dbg !3681
  %79 = load i8*, i8** %19, align 8, !dbg !3682
  %80 = load i32*, i32** %15, align 8, !dbg !3683
  %81 = load i32*, i32** %16, align 8, !dbg !3684
  %82 = load i8**, i8*** %17, align 8, !dbg !3685
  %83 = load i8**, i8*** %18, align 8, !dbg !3686
  %84 = call i8* @parse_with_separator(i8* %78, i8* %79, i32* %80, i32* %81, i8** %82, i8** %83), !dbg !3687
  store i8* %84, i8** %20, align 8, !dbg !3680
  %85 = load i32*, i32** %16, align 8, !dbg !3688
  %86 = icmp ne i32* %85, null, !dbg !3688
  %87 = load i32, i32* @x.53
  %88 = load i32, i32* @y.54
  %89 = sub i32 %87, 1
  %90 = mul i32 %87, %89
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %88, 10
  %94 = or i1 %92, %93
  br i1 %94, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %86, label %95, label %213, !dbg !3690

95:                                               ; preds = %originalBBpart212
  %96 = load i32, i32* @x.53
  %97 = load i32, i32* @y.54
  %98 = sub i32 %96, 1
  %99 = mul i32 %96, %98
  %100 = urem i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = icmp slt i32 %97, 10
  %103 = or i1 %101, %102
  br i1 %103, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %95, %originalBB14alteredBB
  %104 = load i8*, i8** %19, align 8, !dbg !3691
  %105 = icmp ne i8* %104, null, !dbg !3691
  %106 = load i32, i32* @x.53
  %107 = load i32, i32* @y.54
  %108 = sub i32 %106, 1
  %109 = mul i32 %106, %108
  %110 = urem i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %107, 10
  %113 = or i1 %111, %112
  br i1 %113, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %105, label %213, label %114, !dbg !3692

114:                                              ; preds = %originalBBpart216
  %115 = load i32, i32* @x.53
  %116 = load i32, i32* @y.54
  %117 = sub i32 %115, 1
  %118 = mul i32 %115, %117
  %119 = urem i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = icmp slt i32 %116, 10
  %122 = or i1 %120, %121
  br i1 %122, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %114, %originalBB18alteredBB
  %123 = load i8*, i8** %20, align 8, !dbg !3693
  %124 = icmp ne i8* %123, null, !dbg !3693
  %125 = load i32, i32* @x.53
  %126 = load i32, i32* @y.54
  %127 = sub i32 %125, 1
  %128 = mul i32 %125, %127
  %129 = urem i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = icmp slt i32 %126, 10
  %132 = or i1 %130, %131
  br i1 %132, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br i1 %124, label %133, label %213, !dbg !3694

133:                                              ; preds = %originalBBpart220
  call void @llvm.dbg.declare(metadata i8** %21, metadata !3695, metadata !DIExpression()), !dbg !3697
  %134 = load i32, i32* @x.53
  %135 = load i32, i32* @y.54
  %136 = sub i32 %134, 1
  %137 = mul i32 %134, %136
  %138 = urem i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = icmp slt i32 %135, 10
  %141 = or i1 %139, %140
  br i1 %141, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %133, %originalBB22alteredBB
  %142 = load i8*, i8** %14, align 8, !dbg !3698
  %143 = call i8* @strchr(i8* %142, i32 46) #13, !dbg !3699
  store i8* %143, i8** %21, align 8, !dbg !3697
  %144 = load i8*, i8** %21, align 8, !dbg !3700
  %145 = icmp ne i8* %144, null, !dbg !3700
  %146 = load i32, i32* @x.53
  %147 = load i32, i32* @y.54
  %148 = sub i32 %146, 1
  %149 = mul i32 %146, %148
  %150 = urem i32 %149, 2
  %151 = icmp eq i32 %150, 0
  %152 = icmp slt i32 %147, 10
  %153 = or i1 %151, %152
  br i1 %153, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br i1 %145, label %154, label %196, !dbg !3702

154:                                              ; preds = %originalBBpart224
  %155 = load i32, i32* @x.53
  %156 = load i32, i32* @y.54
  %157 = sub i32 %155, 1
  %158 = mul i32 %155, %157
  %159 = urem i32 %158, 2
  %160 = icmp eq i32 %159, 0
  %161 = icmp slt i32 %156, 10
  %162 = or i1 %160, %161
  br i1 %162, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %154, %originalBB26alteredBB
  %163 = load i8*, i8** %14, align 8, !dbg !3703
  %164 = load i8*, i8** %21, align 8, !dbg !3704
  %165 = load i32*, i32** %15, align 8, !dbg !3705
  %166 = load i32*, i32** %16, align 8, !dbg !3706
  %167 = load i8**, i8*** %17, align 8, !dbg !3707
  %168 = load i8**, i8*** %18, align 8, !dbg !3708
  %169 = call i8* @parse_with_separator(i8* %163, i8* %164, i32* %165, i32* %166, i8** %167, i8** %168), !dbg !3709
  %170 = icmp ne i8* %169, null, !dbg !3709
  %171 = load i32, i32* @x.53
  %172 = load i32, i32* @y.54
  %173 = sub i32 %171, 1
  %174 = mul i32 %171, %173
  %175 = urem i32 %174, 2
  %176 = icmp eq i32 %175, 0
  %177 = icmp slt i32 %172, 10
  %178 = or i1 %176, %177
  br i1 %178, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br i1 %170, label %196, label %179, !dbg !3710

179:                                              ; preds = %originalBBpart228
  %180 = load i32, i32* @x.53
  %181 = load i32, i32* @y.54
  %182 = sub i32 %180, 1
  %183 = mul i32 %180, %182
  %184 = urem i32 %183, 2
  %185 = icmp eq i32 %184, 0
  %186 = icmp slt i32 %181, 10
  %187 = or i1 %185, %186
  br i1 %187, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %179, %originalBB30alteredBB
  store i8* null, i8** %20, align 8, !dbg !3711
  %188 = load i32, i32* @x.53
  %189 = load i32, i32* @y.54
  %190 = sub i32 %188, 1
  %191 = mul i32 %188, %190
  %192 = urem i32 %191, 2
  %193 = icmp eq i32 %192, 0
  %194 = icmp slt i32 %189, 10
  %195 = or i1 %193, %194
  br i1 %195, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br label %196, !dbg !3712

196:                                              ; preds = %originalBBpart232, %originalBBpart228, %originalBBpart224
  %197 = load i32, i32* @x.53
  %198 = load i32, i32* @y.54
  %199 = sub i32 %197, 1
  %200 = mul i32 %197, %199
  %201 = urem i32 %200, 2
  %202 = icmp eq i32 %201, 0
  %203 = icmp slt i32 %198, 10
  %204 = or i1 %202, %203
  br i1 %204, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %196, %originalBB34alteredBB
  %205 = load i32, i32* @x.53
  %206 = load i32, i32* @y.54
  %207 = sub i32 %205, 1
  %208 = mul i32 %205, %207
  %209 = urem i32 %208, 2
  %210 = icmp eq i32 %209, 0
  %211 = icmp slt i32 %206, 10
  %212 = or i1 %210, %211
  br i1 %212, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  br label %213, !dbg !3713

213:                                              ; preds = %originalBBpart236, %originalBBpart220, %originalBBpart216, %originalBBpart212
  %214 = load i32, i32* @x.53
  %215 = load i32, i32* @y.54
  %216 = sub i32 %214, 1
  %217 = mul i32 %214, %216
  %218 = urem i32 %217, 2
  %219 = icmp eq i32 %218, 0
  %220 = icmp slt i32 %215, 10
  %221 = or i1 %219, %220
  br i1 %221, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %213, %originalBB38alteredBB
  %222 = load i8*, i8** %20, align 8, !dbg !3714
  %223 = load i32, i32* @x.53
  %224 = load i32, i32* @y.54
  %225 = sub i32 %223, 1
  %226 = mul i32 %223, %225
  %227 = urem i32 %226, 2
  %228 = icmp eq i32 %227, 0
  %229 = icmp slt i32 %224, 10
  %230 = or i1 %228, %229
  br i1 %230, label %originalBBpart240, label %originalBB38alteredBB

originalBBpart240:                                ; preds = %originalBB38
  ret i8* %222, !dbg !3715

originalBBalteredBB:                              ; preds = %originalBB, %5
  %231 = alloca i8*, align 8
  %232 = alloca i32*, align 8
  %233 = alloca i32*, align 8
  %234 = alloca i8**, align 8
  %235 = alloca i8**, align 8
  %236 = alloca i8*, align 8
  %237 = alloca i8*, align 8
  %238 = alloca i8*, align 8
  store i8* %0, i8** %231, align 8
  call void @llvm.dbg.declare(metadata i8** %231, metadata !3716, metadata !DIExpression()), !dbg !3665
  store i32* %1, i32** %232, align 8
  call void @llvm.dbg.declare(metadata i32** %232, metadata !3727, metadata !DIExpression()), !dbg !3667
  store i32* %2, i32** %233, align 8
  call void @llvm.dbg.declare(metadata i32** %233, metadata !3728, metadata !DIExpression()), !dbg !3669
  store i8** %3, i8*** %234, align 8
  call void @llvm.dbg.declare(metadata i8*** %234, metadata !3729, metadata !DIExpression()), !dbg !3671
  store i8** %4, i8*** %235, align 8
  call void @llvm.dbg.declare(metadata i8*** %235, metadata !3730, metadata !DIExpression()), !dbg !3673
  call void @llvm.dbg.declare(metadata i8** %236, metadata !3731, metadata !DIExpression()), !dbg !3675
  %239 = load i32*, i32** %233, align 8, !dbg !3676
  %240 = icmp ne i32* %239, null, !dbg !3676
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %32
  %241 = load i8*, i8** %14, align 8, !dbg !3677
  %242 = call i8* @strchr(i8* %241, i32 58) #13, !dbg !3678
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %51
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %68
  store i8* %69, i8** %19, align 8, !dbg !3675
  call void @llvm.dbg.declare(metadata !4, metadata !3732, metadata !DIExpression()), !dbg !3680
  %243 = load i8*, i8** %14, align 8, !dbg !3681
  %244 = load i8*, i8** %19, align 8, !dbg !3682
  %245 = load i32*, i32** %15, align 8, !dbg !3683
  %246 = load i32*, i32** %16, align 8, !dbg !3684
  %247 = load i8**, i8*** %17, align 8, !dbg !3685
  %248 = load i8**, i8*** %18, align 8, !dbg !3686
  %249 = call i8* @parse_with_separator(i8* %243, i8* %244, i32* %245, i32* %246, i8** %247, i8** %248), !dbg !3687
  store i8* %249, i8** %20, align 8, !dbg !3680
  %250 = load i32*, i32** %16, align 8, !dbg !3688
  %251 = icmp ne i32* %250, null, !dbg !3688
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %95
  %252 = load i8*, i8** %19, align 8, !dbg !3691
  %253 = icmp ne i8* %252, null, !dbg !3691
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %114
  %254 = load i8*, i8** %20, align 8, !dbg !3693
  %255 = icmp ne i8* %254, null, !dbg !3693
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %133
  %256 = load i8*, i8** %14, align 8, !dbg !3698
  %257 = call i8* @strchr(i8* %256, i32 46) #13, !dbg !3699
  store i8* %257, i8** %21, align 8, !dbg !3697
  %258 = load i8*, i8** %21, align 8, !dbg !3700
  %259 = icmp ne i8* %258, null, !dbg !3700
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %154
  %260 = load i8*, i8** %14, align 8, !dbg !3703
  %261 = load i8*, i8** %21, align 8, !dbg !3704
  %262 = load i32*, i32** %15, align 8, !dbg !3705
  %263 = load i32*, i32** %16, align 8, !dbg !3706
  %264 = load i8**, i8*** %17, align 8, !dbg !3707
  %265 = load i8**, i8*** %18, align 8, !dbg !3708
  %266 = call i8* @parse_with_separator(i8* %260, i8* %261, i32* %262, i32* %263, i8** %264, i8** %265), !dbg !3709
  %267 = icmp ne i8* %266, null, !dbg !3709
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %179
  store i8* null, i8** %20, align 8, !dbg !3711
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %196
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %213
  %268 = load i8*, i8** %20, align 8, !dbg !3714
  br label %originalBB38
}

; Function Attrs: nounwind readonly
declare dso_local i8* @strchr(i8*, i32) #7

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @parse_with_separator(i8*, i8*, i32*, i32*, i8**, i8**) #4 !dbg !178 {
  %7 = load i32, i32* @x.55
  %8 = load i32, i32* @y.56
  %9 = sub i32 %7, 1
  %10 = mul i32 %7, %9
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %8, 10
  %14 = or i1 %12, %13
  br i1 %14, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %6, %originalBBalteredBB
  %15 = alloca i8*, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i32*, align 8
  %18 = alloca i32*, align 8
  %19 = alloca i8**, align 8
  %20 = alloca i8**, align 8
  %21 = alloca i8*, align 8
  %22 = alloca %struct.passwd*, align 8
  %23 = alloca %struct.group*, align 8
  %24 = alloca i8*, align 8
  %25 = alloca i8*, align 8
  %26 = alloca i8*, align 8
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i64, align 8
  %30 = alloca i8, align 1
  %31 = alloca i64, align 8
  %32 = alloca [21 x i8], align 16
  %33 = alloca i64, align 8
  store i8* %0, i8** %15, align 8
  call void @llvm.dbg.declare(metadata i8** %15, metadata !3743, metadata !DIExpression()), !dbg !3744
  store i8* %1, i8** %16, align 8
  call void @llvm.dbg.declare(metadata i8** %16, metadata !3745, metadata !DIExpression()), !dbg !3746
  store i32* %2, i32** %17, align 8
  call void @llvm.dbg.declare(metadata i32** %17, metadata !3747, metadata !DIExpression()), !dbg !3748
  store i32* %3, i32** %18, align 8
  call void @llvm.dbg.declare(metadata i32** %18, metadata !3749, metadata !DIExpression()), !dbg !3750
  store i8** %4, i8*** %19, align 8
  call void @llvm.dbg.declare(metadata i8*** %19, metadata !3751, metadata !DIExpression()), !dbg !3752
  store i8** %5, i8*** %20, align 8
  call void @llvm.dbg.declare(metadata i8*** %20, metadata !3753, metadata !DIExpression()), !dbg !3754
  call void @llvm.dbg.declare(metadata i8** %21, metadata !3755, metadata !DIExpression()), !dbg !3756
  call void @llvm.dbg.declare(metadata %struct.passwd** %22, metadata !3757, metadata !DIExpression()), !dbg !3768
  call void @llvm.dbg.declare(metadata %struct.group** %23, metadata !3769, metadata !DIExpression()), !dbg !3777
  call void @llvm.dbg.declare(metadata i8** %24, metadata !3778, metadata !DIExpression()), !dbg !3779
  call void @llvm.dbg.declare(metadata i8** %25, metadata !3780, metadata !DIExpression()), !dbg !3781
  call void @llvm.dbg.declare(metadata i8** %26, metadata !3782, metadata !DIExpression()), !dbg !3783
  store i8* null, i8** %26, align 8, !dbg !3783
  call void @llvm.dbg.declare(metadata i32* %27, metadata !3784, metadata !DIExpression()), !dbg !3785
  %34 = load i32*, i32** %17, align 8, !dbg !3786
  %35 = load i32, i32* %34, align 4, !dbg !3787
  store i32 %35, i32* %27, align 4, !dbg !3785
  call void @llvm.dbg.declare(metadata i32* %28, metadata !3788, metadata !DIExpression()), !dbg !3789
  %36 = load i32*, i32** %18, align 8, !dbg !3790
  %37 = icmp ne i32* %36, null, !dbg !3790
  %38 = load i32, i32* @x.55
  %39 = load i32, i32* @y.56
  %40 = sub i32 %38, 1
  %41 = mul i32 %38, %40
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %43, %44
  br i1 %45, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %37, label %46, label %65, !dbg !3790

46:                                               ; preds = %originalBBpart2
  %47 = load i32, i32* @x.55
  %48 = load i32, i32* @y.56
  %49 = sub i32 %47, 1
  %50 = mul i32 %47, %49
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %48, 10
  %54 = or i1 %52, %53
  br i1 %54, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %46, %originalBB1alteredBB
  %55 = load i32*, i32** %18, align 8, !dbg !3791
  %56 = load i32, i32* %55, align 4, !dbg !3792
  %57 = load i32, i32* @x.55
  %58 = load i32, i32* @y.56
  %59 = sub i32 %57, 1
  %60 = mul i32 %57, %59
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %58, 10
  %64 = or i1 %62, %63
  br i1 %64, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %82, !dbg !3790

65:                                               ; preds = %originalBBpart2
  %66 = load i32, i32* @x.55
  %67 = load i32, i32* @y.56
  %68 = sub i32 %66, 1
  %69 = mul i32 %66, %68
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %67, 10
  %73 = or i1 %71, %72
  br i1 %73, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %65, %originalBB6alteredBB
  %74 = load i32, i32* @x.55
  %75 = load i32, i32* @y.56
  %76 = sub i32 %74, 1
  %77 = mul i32 %74, %76
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %75, 10
  %81 = or i1 %79, %80
  br i1 %81, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %82, !dbg !3790

82:                                               ; preds = %originalBBpart28, %originalBBpart24
  %83 = phi i32 [ %56, %originalBBpart24 ], [ -1, %originalBBpart28 ], !dbg !3790
  %84 = load i32, i32* @x.55
  %85 = load i32, i32* @y.56
  %86 = sub i32 %84, 1
  %87 = mul i32 %84, %86
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %85, 10
  %91 = or i1 %89, %90
  br i1 %91, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %82, %originalBB10alteredBB
  store i32 %83, i32* %28, align 4, !dbg !3789
  store i8* null, i8** %21, align 8, !dbg !3793
  %92 = load i8**, i8*** %19, align 8, !dbg !3794
  %93 = icmp ne i8** %92, null, !dbg !3794
  %94 = load i32, i32* @x.55
  %95 = load i32, i32* @y.56
  %96 = sub i32 %94, 1
  %97 = mul i32 %94, %96
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %95, 10
  %101 = or i1 %99, %100
  br i1 %101, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %93, label %102, label %120, !dbg !3796

102:                                              ; preds = %originalBBpart212
  %103 = load i32, i32* @x.55
  %104 = load i32, i32* @y.56
  %105 = sub i32 %103, 1
  %106 = mul i32 %103, %105
  %107 = urem i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %104, 10
  %110 = or i1 %108, %109
  br i1 %110, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %102, %originalBB14alteredBB
  %111 = load i8**, i8*** %19, align 8, !dbg !3797
  store i8* null, i8** %111, align 8, !dbg !3798
  %112 = load i32, i32* @x.55
  %113 = load i32, i32* @y.56
  %114 = sub i32 %112, 1
  %115 = mul i32 %112, %114
  %116 = urem i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = icmp slt i32 %113, 10
  %119 = or i1 %117, %118
  br i1 %119, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %120, !dbg !3799

120:                                              ; preds = %originalBBpart216, %originalBBpart212
  %121 = load i32, i32* @x.55
  %122 = load i32, i32* @y.56
  %123 = sub i32 %121, 1
  %124 = mul i32 %121, %123
  %125 = urem i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %122, 10
  %128 = or i1 %126, %127
  br i1 %128, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %120, %originalBB18alteredBB
  %129 = load i8**, i8*** %20, align 8, !dbg !3800
  %130 = icmp ne i8** %129, null, !dbg !3800
  %131 = load i32, i32* @x.55
  %132 = load i32, i32* @y.56
  %133 = sub i32 %131, 1
  %134 = mul i32 %131, %133
  %135 = urem i32 %134, 2
  %136 = icmp eq i32 %135, 0
  %137 = icmp slt i32 %132, 10
  %138 = or i1 %136, %137
  br i1 %138, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br i1 %130, label %139, label %157, !dbg !3802

139:                                              ; preds = %originalBBpart220
  %140 = load i32, i32* @x.55
  %141 = load i32, i32* @y.56
  %142 = sub i32 %140, 1
  %143 = mul i32 %140, %142
  %144 = urem i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = icmp slt i32 %141, 10
  %147 = or i1 %145, %146
  br i1 %147, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %139, %originalBB22alteredBB
  %148 = load i8**, i8*** %20, align 8, !dbg !3803
  store i8* null, i8** %148, align 8, !dbg !3804
  %149 = load i32, i32* @x.55
  %150 = load i32, i32* @y.56
  %151 = sub i32 %149, 1
  %152 = mul i32 %149, %151
  %153 = urem i32 %152, 2
  %154 = icmp eq i32 %153, 0
  %155 = icmp slt i32 %150, 10
  %156 = or i1 %154, %155
  br i1 %156, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br label %157, !dbg !3805

157:                                              ; preds = %originalBBpart224, %originalBBpart220
  %158 = load i32, i32* @x.55
  %159 = load i32, i32* @y.56
  %160 = sub i32 %158, 1
  %161 = mul i32 %158, %160
  %162 = urem i32 %161, 2
  %163 = icmp eq i32 %162, 0
  %164 = icmp slt i32 %159, 10
  %165 = or i1 %163, %164
  br i1 %165, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %157, %originalBB26alteredBB
  store i8* null, i8** %24, align 8, !dbg !3806
  %166 = load i8*, i8** %16, align 8, !dbg !3807
  %167 = icmp eq i8* %166, null, !dbg !3809
  %168 = load i32, i32* @x.55
  %169 = load i32, i32* @y.56
  %170 = sub i32 %168, 1
  %171 = mul i32 %168, %170
  %172 = urem i32 %171, 2
  %173 = icmp eq i32 %172, 0
  %174 = icmp slt i32 %169, 10
  %175 = or i1 %173, %174
  br i1 %175, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br i1 %167, label %176, label %232, !dbg !3810

176:                                              ; preds = %originalBBpart228
  %177 = load i32, i32* @x.55
  %178 = load i32, i32* @y.56
  %179 = sub i32 %177, 1
  %180 = mul i32 %177, %179
  %181 = urem i32 %180, 2
  %182 = icmp eq i32 %181, 0
  %183 = icmp slt i32 %178, 10
  %184 = or i1 %182, %183
  br i1 %184, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %176, %originalBB30alteredBB
  %185 = load i8*, i8** %15, align 8, !dbg !3811
  %186 = load i8, i8* %185, align 1, !dbg !3814
  %187 = icmp ne i8 %186, 0, !dbg !3814
  %188 = load i32, i32* @x.55
  %189 = load i32, i32* @y.56
  %190 = sub i32 %188, 1
  %191 = mul i32 %188, %190
  %192 = urem i32 %191, 2
  %193 = icmp eq i32 %192, 0
  %194 = icmp slt i32 %189, 10
  %195 = or i1 %193, %194
  br i1 %195, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br i1 %187, label %196, label %215, !dbg !3815

196:                                              ; preds = %originalBBpart232
  %197 = load i32, i32* @x.55
  %198 = load i32, i32* @y.56
  %199 = sub i32 %197, 1
  %200 = mul i32 %197, %199
  %201 = urem i32 %200, 2
  %202 = icmp eq i32 %201, 0
  %203 = icmp slt i32 %198, 10
  %204 = or i1 %202, %203
  br i1 %204, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %196, %originalBB34alteredBB
  %205 = load i8*, i8** %15, align 8, !dbg !3816
  %206 = call noalias i8* @xstrdup(i8* %205), !dbg !3817
  store i8* %206, i8** %24, align 8, !dbg !3818
  %207 = load i32, i32* @x.55
  %208 = load i32, i32* @y.56
  %209 = sub i32 %207, 1
  %210 = mul i32 %207, %209
  %211 = urem i32 %210, 2
  %212 = icmp eq i32 %211, 0
  %213 = icmp slt i32 %208, 10
  %214 = or i1 %212, %213
  br i1 %214, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  br label %215, !dbg !3819

215:                                              ; preds = %originalBBpart236, %originalBBpart232
  %216 = load i32, i32* @x.55
  %217 = load i32, i32* @y.56
  %218 = sub i32 %216, 1
  %219 = mul i32 %216, %218
  %220 = urem i32 %219, 2
  %221 = icmp eq i32 %220, 0
  %222 = icmp slt i32 %217, 10
  %223 = or i1 %221, %222
  br i1 %223, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %215, %originalBB38alteredBB
  %224 = load i32, i32* @x.55
  %225 = load i32, i32* @y.56
  %226 = sub i32 %224, 1
  %227 = mul i32 %224, %226
  %228 = urem i32 %227, 2
  %229 = icmp eq i32 %228, 0
  %230 = icmp slt i32 %225, 10
  %231 = or i1 %229, %230
  br i1 %231, label %originalBBpart240, label %originalBB38alteredBB

originalBBpart240:                                ; preds = %originalBB38
  br label %297, !dbg !3820

232:                                              ; preds = %originalBBpart228
  call void @llvm.dbg.declare(metadata i64* %29, metadata !3821, metadata !DIExpression()), !dbg !3823
  %233 = load i32, i32* @x.55
  %234 = load i32, i32* @y.56
  %235 = sub i32 %233, 1
  %236 = mul i32 %233, %235
  %237 = urem i32 %236, 2
  %238 = icmp eq i32 %237, 0
  %239 = icmp slt i32 %234, 10
  %240 = or i1 %238, %239
  br i1 %240, label %originalBB42, label %originalBB42alteredBB

originalBB42:                                     ; preds = %232, %originalBB42alteredBB
  %241 = load i8*, i8** %16, align 8, !dbg !3824
  %242 = load i8*, i8** %15, align 8, !dbg !3825
  %243 = ptrtoint i8* %241 to i64, !dbg !3826
  %244 = ptrtoint i8* %242 to i64, !dbg !3826
  %245 = sub i64 %243, %244, !dbg !3826
  store i64 %245, i64* %29, align 8, !dbg !3823
  %246 = load i64, i64* %29, align 8, !dbg !3827
  %247 = icmp ne i64 %246, 0, !dbg !3829
  %248 = load i32, i32* @x.55
  %249 = load i32, i32* @y.56
  %250 = sub i32 %248, 1
  %251 = mul i32 %248, %250
  %252 = urem i32 %251, 2
  %253 = icmp eq i32 %252, 0
  %254 = icmp slt i32 %249, 10
  %255 = or i1 %253, %254
  br i1 %255, label %originalBBpart254, label %originalBB42alteredBB

originalBBpart254:                                ; preds = %originalBB42
  br i1 %247, label %256, label %280, !dbg !3830

256:                                              ; preds = %originalBBpart254
  %257 = load i32, i32* @x.55
  %258 = load i32, i32* @y.56
  %259 = sub i32 %257, 1
  %260 = mul i32 %257, %259
  %261 = urem i32 %260, 2
  %262 = icmp eq i32 %261, 0
  %263 = icmp slt i32 %258, 10
  %264 = or i1 %262, %263
  br i1 %264, label %originalBB56, label %originalBB56alteredBB

originalBB56:                                     ; preds = %256, %originalBB56alteredBB
  %265 = load i8*, i8** %15, align 8, !dbg !3831
  %266 = load i64, i64* %29, align 8, !dbg !3833
  %267 = add i64 %266, 1, !dbg !3834
  %268 = call i8* @xmemdup(i8* %265, i64 %267), !dbg !3835
  store i8* %268, i8** %24, align 8, !dbg !3836
  %269 = load i8*, i8** %24, align 8, !dbg !3837
  %270 = load i64, i64* %29, align 8, !dbg !3838
  %271 = getelementptr inbounds i8, i8* %269, i64 %270, !dbg !3837
  store i8 0, i8* %271, align 1, !dbg !3839
  %272 = load i32, i32* @x.55
  %273 = load i32, i32* @y.56
  %274 = sub i32 %272, 1
  %275 = mul i32 %272, %274
  %276 = urem i32 %275, 2
  %277 = icmp eq i32 %276, 0
  %278 = icmp slt i32 %273, 10
  %279 = or i1 %277, %278
  br i1 %279, label %originalBBpart261, label %originalBB56alteredBB

originalBBpart261:                                ; preds = %originalBB56
  br label %280, !dbg !3840

280:                                              ; preds = %originalBBpart261, %originalBBpart254
  %281 = load i32, i32* @x.55
  %282 = load i32, i32* @y.56
  %283 = sub i32 %281, 1
  %284 = mul i32 %281, %283
  %285 = urem i32 %284, 2
  %286 = icmp eq i32 %285, 0
  %287 = icmp slt i32 %282, 10
  %288 = or i1 %286, %287
  br i1 %288, label %originalBB63, label %originalBB63alteredBB

originalBB63:                                     ; preds = %280, %originalBB63alteredBB
  %289 = load i32, i32* @x.55
  %290 = load i32, i32* @y.56
  %291 = sub i32 %289, 1
  %292 = mul i32 %289, %291
  %293 = urem i32 %292, 2
  %294 = icmp eq i32 %293, 0
  %295 = icmp slt i32 %290, 10
  %296 = or i1 %294, %295
  br i1 %296, label %originalBBpart265, label %originalBB63alteredBB

originalBBpart265:                                ; preds = %originalBB63
  br label %297

297:                                              ; preds = %originalBBpart265, %originalBBpart240
  %298 = load i32, i32* @x.55
  %299 = load i32, i32* @y.56
  %300 = sub i32 %298, 1
  %301 = mul i32 %298, %300
  %302 = urem i32 %301, 2
  %303 = icmp eq i32 %302, 0
  %304 = icmp slt i32 %299, 10
  %305 = or i1 %303, %304
  br i1 %305, label %originalBB67, label %originalBB67alteredBB

originalBB67:                                     ; preds = %297, %originalBB67alteredBB
  %306 = load i8*, i8** %16, align 8, !dbg !3841
  %307 = icmp eq i8* %306, null, !dbg !3842
  %308 = load i32, i32* @x.55
  %309 = load i32, i32* @y.56
  %310 = sub i32 %308, 1
  %311 = mul i32 %308, %310
  %312 = urem i32 %311, 2
  %313 = icmp eq i32 %312, 0
  %314 = icmp slt i32 %309, 10
  %315 = or i1 %313, %314
  br i1 %315, label %originalBBpart269, label %originalBB67alteredBB

originalBBpart269:                                ; preds = %originalBB67
  br i1 %307, label %338, label %316, !dbg !3843

316:                                              ; preds = %originalBBpart269
  %317 = load i32, i32* @x.55
  %318 = load i32, i32* @y.56
  %319 = sub i32 %317, 1
  %320 = mul i32 %317, %319
  %321 = urem i32 %320, 2
  %322 = icmp eq i32 %321, 0
  %323 = icmp slt i32 %318, 10
  %324 = or i1 %322, %323
  br i1 %324, label %originalBB71, label %originalBB71alteredBB

originalBB71:                                     ; preds = %316, %originalBB71alteredBB
  %325 = load i8*, i8** %16, align 8, !dbg !3844
  %326 = getelementptr inbounds i8, i8* %325, i64 1, !dbg !3845
  %327 = load i8, i8* %326, align 1, !dbg !3846
  %328 = sext i8 %327 to i32, !dbg !3846
  %329 = icmp eq i32 %328, 0, !dbg !3847
  %330 = load i32, i32* @x.55
  %331 = load i32, i32* @y.56
  %332 = sub i32 %330, 1
  %333 = mul i32 %330, %332
  %334 = urem i32 %333, 2
  %335 = icmp eq i32 %334, 0
  %336 = icmp slt i32 %331, 10
  %337 = or i1 %335, %336
  br i1 %337, label %originalBBpart273, label %originalBB71alteredBB

originalBBpart273:                                ; preds = %originalBB71
  br i1 %329, label %338, label %355, !dbg !3841

338:                                              ; preds = %originalBBpart273, %originalBBpart269
  %339 = load i32, i32* @x.55
  %340 = load i32, i32* @y.56
  %341 = sub i32 %339, 1
  %342 = mul i32 %339, %341
  %343 = urem i32 %342, 2
  %344 = icmp eq i32 %343, 0
  %345 = icmp slt i32 %340, 10
  %346 = or i1 %344, %345
  br i1 %346, label %originalBB75, label %originalBB75alteredBB

originalBB75:                                     ; preds = %338, %originalBB75alteredBB
  %347 = load i32, i32* @x.55
  %348 = load i32, i32* @y.56
  %349 = sub i32 %347, 1
  %350 = mul i32 %347, %349
  %351 = urem i32 %350, 2
  %352 = icmp eq i32 %351, 0
  %353 = icmp slt i32 %348, 10
  %354 = or i1 %352, %353
  br i1 %354, label %originalBBpart277, label %originalBB75alteredBB

originalBBpart277:                                ; preds = %originalBB75
  br label %374, !dbg !3841

355:                                              ; preds = %originalBBpart273
  %356 = load i32, i32* @x.55
  %357 = load i32, i32* @y.56
  %358 = sub i32 %356, 1
  %359 = mul i32 %356, %358
  %360 = urem i32 %359, 2
  %361 = icmp eq i32 %360, 0
  %362 = icmp slt i32 %357, 10
  %363 = or i1 %361, %362
  br i1 %363, label %originalBB79, label %originalBB79alteredBB

originalBB79:                                     ; preds = %355, %originalBB79alteredBB
  %364 = load i8*, i8** %16, align 8, !dbg !3848
  %365 = getelementptr inbounds i8, i8* %364, i64 1, !dbg !3849
  %366 = load i32, i32* @x.55
  %367 = load i32, i32* @y.56
  %368 = sub i32 %366, 1
  %369 = mul i32 %366, %368
  %370 = urem i32 %369, 2
  %371 = icmp eq i32 %370, 0
  %372 = icmp slt i32 %367, 10
  %373 = or i1 %371, %372
  br i1 %373, label %originalBBpart281, label %originalBB79alteredBB

originalBBpart281:                                ; preds = %originalBB79
  br label %374, !dbg !3841

374:                                              ; preds = %originalBBpart281, %originalBBpart277
  %375 = phi i8* [ null, %originalBBpart277 ], [ %365, %originalBBpart281 ], !dbg !3841
  %376 = load i32, i32* @x.55
  %377 = load i32, i32* @y.56
  %378 = sub i32 %376, 1
  %379 = mul i32 %376, %378
  %380 = urem i32 %379, 2
  %381 = icmp eq i32 %380, 0
  %382 = icmp slt i32 %377, 10
  %383 = or i1 %381, %382
  br i1 %383, label %originalBB83, label %originalBB83alteredBB

originalBB83:                                     ; preds = %374, %originalBB83alteredBB
  store i8* %375, i8** %25, align 8, !dbg !3850
  %384 = load i8*, i8** %24, align 8, !dbg !3851
  %385 = icmp ne i8* %384, null, !dbg !3853
  %386 = load i32, i32* @x.55
  %387 = load i32, i32* @y.56
  %388 = sub i32 %386, 1
  %389 = mul i32 %386, %388
  %390 = urem i32 %389, 2
  %391 = icmp eq i32 %390, 0
  %392 = icmp slt i32 %387, 10
  %393 = or i1 %391, %392
  br i1 %393, label %originalBBpart285, label %originalBB83alteredBB

originalBBpart285:                                ; preds = %originalBB83
  br i1 %385, label %394, label %1027, !dbg !3854

394:                                              ; preds = %originalBBpart285
  %395 = load i32, i32* @x.55
  %396 = load i32, i32* @y.56
  %397 = sub i32 %395, 1
  %398 = mul i32 %395, %397
  %399 = urem i32 %398, 2
  %400 = icmp eq i32 %399, 0
  %401 = icmp slt i32 %396, 10
  %402 = or i1 %400, %401
  br i1 %402, label %originalBB87, label %originalBB87alteredBB

originalBB87:                                     ; preds = %394, %originalBB87alteredBB
  %403 = load i8*, i8** %24, align 8, !dbg !3855
  %404 = load i8, i8* %403, align 1, !dbg !3857
  %405 = sext i8 %404 to i32, !dbg !3857
  %406 = load i32, i32* @x.55
  %407 = load i32, i32* @y.56
  %408 = sub i32 %406, 1
  %409 = mul i32 %406, %408
  %410 = urem i32 %409, 2
  %411 = icmp eq i32 %410, 0
  %412 = icmp slt i32 %407, 10
  %413 = or i1 %411, %412
  br i1 %413, label %originalBBpart289, label %originalBB87alteredBB

originalBBpart289:                                ; preds = %originalBB87
  br label %414, !dbg !3858

414:                                              ; preds = %originalBBpart289
  %415 = load i32, i32* @x.55
  %416 = load i32, i32* @y.56
  %417 = sub i32 %415, 1
  %418 = mul i32 %415, %417
  %419 = urem i32 %418, 2
  %420 = icmp eq i32 %419, 0
  %421 = icmp slt i32 %416, 10
  %422 = or i1 %420, %421
  br i1 %422, label %originalBB91, label %originalBB91alteredBB

originalBB91:                                     ; preds = %414, %originalBB91alteredBB
  %collatzVar = alloca i32
  %423 = load i32, i32* @x.55
  %424 = load i32, i32* @y.56
  %425 = sub i32 %423, 1
  %426 = mul i32 %423, %425
  %427 = urem i32 %426, 2
  %428 = icmp eq i32 %427, 0
  %429 = icmp slt i32 %424, 10
  %430 = or i1 %428, %429
  br i1 %430, label %originalBBpart293, label %originalBB91alteredBB

originalBBpart293:                                ; preds = %originalBB91
  br label %431

431:                                              ; preds = %originalBBpart293
  %432 = load i32, i32* @x.55
  %433 = load i32, i32* @y.56
  %434 = sub i32 %432, 1
  %435 = mul i32 %432, %434
  %436 = urem i32 %435, 2
  %437 = icmp eq i32 %436, 0
  %438 = icmp slt i32 %433, 10
  %439 = or i1 %437, %438
  br i1 %439, label %originalBB95, label %originalBB95alteredBB

originalBB95:                                     ; preds = %431, %originalBB95alteredBB
  %440 = load i32, i32* @inVal0
  %441 = icmp sgt i32 %440, 1
  %442 = load i32, i32* @x.55
  %443 = load i32, i32* @y.56
  %444 = sub i32 %442, 1
  %445 = mul i32 %442, %444
  %446 = urem i32 %445, 2
  %447 = icmp eq i32 %446, 0
  %448 = icmp slt i32 %443, 10
  %449 = or i1 %447, %448
  br i1 %449, label %originalBBpart297, label %originalBB95alteredBB

originalBBpart297:                                ; preds = %originalBB95
  br i1 %441, label %467, label %450

450:                                              ; preds = %originalBBpart297
  %451 = load i32, i32* @x.55
  %452 = load i32, i32* @y.56
  %453 = sub i32 %451, 1
  %454 = mul i32 %451, %453
  %455 = urem i32 %454, 2
  %456 = icmp eq i32 %455, 0
  %457 = icmp slt i32 %452, 10
  %458 = or i1 %456, %457
  br i1 %458, label %originalBB99, label %originalBB99alteredBB

originalBB99:                                     ; preds = %450, %originalBB99alteredBB
  store i32 82, i32* %collatzVar
  %459 = load i32, i32* @x.55
  %460 = load i32, i32* @y.56
  %461 = sub i32 %459, 1
  %462 = mul i32 %459, %461
  %463 = urem i32 %462, 2
  %464 = icmp eq i32 %463, 0
  %465 = icmp slt i32 %460, 10
  %466 = or i1 %464, %465
  br i1 %466, label %originalBBpart2101, label %originalBB99alteredBB

originalBBpart2101:                               ; preds = %originalBB99
  br label %467

467:                                              ; preds = %originalBBpart2101, %originalBBpart297
  %468 = load i32, i32* @x.55
  %469 = load i32, i32* @y.56
  %470 = sub i32 %468, 1
  %471 = mul i32 %468, %470
  %472 = urem i32 %471, 2
  %473 = icmp eq i32 %472, 0
  %474 = icmp slt i32 %469, 10
  %475 = or i1 %473, %474
  br i1 %475, label %originalBB103, label %originalBB103alteredBB

originalBB103:                                    ; preds = %467, %originalBB103alteredBB
  %476 = load i8**, i8*** @inVal1
  %477 = getelementptr inbounds i8*, i8** %476, i64 1
  %478 = load i8*, i8** %477
  %controle = call i32 @controle(i8* %478, i32 43)
  store i32 %controle, i32* %collatzVar
  %479 = load i32, i32* @x.55
  %480 = load i32, i32* @y.56
  %481 = sub i32 %479, 1
  %482 = mul i32 %479, %481
  %483 = urem i32 %482, 2
  %484 = icmp eq i32 %483, 0
  %485 = icmp slt i32 %480, 10
  %486 = or i1 %484, %485
  br i1 %486, label %originalBBpart2105, label %originalBB103alteredBB

originalBBpart2105:                               ; preds = %originalBB103
  br label %487

487:                                              ; preds = %originalBBpart2171, %originalBBpart2155, %originalBBpart2105
  %488 = load i32, i32* @x.55
  %489 = load i32, i32* @y.56
  %490 = sub i32 %488, 1
  %491 = mul i32 %488, %490
  %492 = urem i32 %491, 2
  %493 = icmp eq i32 %492, 0
  %494 = icmp slt i32 %489, 10
  %495 = or i1 %493, %494
  br i1 %495, label %originalBB107, label %originalBB107alteredBB

originalBB107:                                    ; preds = %487, %originalBB107alteredBB
  %496 = load i32, i32* %collatzVar
  %497 = icmp sgt i32 %496, 1
  %498 = load i32, i32* @x.55
  %499 = load i32, i32* @y.56
  %500 = sub i32 %498, 1
  %501 = mul i32 %498, %500
  %502 = urem i32 %501, 2
  %503 = icmp eq i32 %502, 0
  %504 = icmp slt i32 %499, 10
  %505 = or i1 %503, %504
  br i1 %505, label %originalBBpart2109, label %originalBB107alteredBB

originalBBpart2109:                               ; preds = %originalBB107
  br i1 %497, label %506, label %622

506:                                              ; preds = %originalBBpart2109
  %507 = load i32, i32* @x.55
  %508 = load i32, i32* @y.56
  %509 = sub i32 %507, 1
  %510 = mul i32 %507, %509
  %511 = urem i32 %510, 2
  %512 = icmp eq i32 %511, 0
  %513 = icmp slt i32 %508, 10
  %514 = or i1 %512, %513
  br i1 %514, label %originalBB111, label %originalBB111alteredBB

originalBB111:                                    ; preds = %506, %originalBB111alteredBB
  %515 = load i32, i32* %collatzVar
  %516 = srem i32 %515, 2
  %517 = icmp eq i32 %516, 0
  %518 = load i32, i32* @x.55
  %519 = load i32, i32* @y.56
  %520 = sub i32 %518, 1
  %521 = mul i32 %518, %520
  %522 = urem i32 %521, 2
  %523 = icmp eq i32 %522, 0
  %524 = icmp slt i32 %519, 10
  %525 = or i1 %523, %524
  br i1 %525, label %originalBBpart2119, label %originalBB111alteredBB

originalBBpart2119:                               ; preds = %originalBB111
  br i1 %517, label %526, label %545

526:                                              ; preds = %originalBBpart2119
  %527 = load i32, i32* @x.55
  %528 = load i32, i32* @y.56
  %529 = sub i32 %527, 1
  %530 = mul i32 %527, %529
  %531 = urem i32 %530, 2
  %532 = icmp eq i32 %531, 0
  %533 = icmp slt i32 %528, 10
  %534 = or i1 %532, %533
  br i1 %534, label %originalBB121, label %originalBB121alteredBB

originalBB121:                                    ; preds = %526, %originalBB121alteredBB
  %535 = load i32, i32* %collatzVar
  %536 = sdiv i32 %535, 2
  store i32 %536, i32* %collatzVar
  %537 = load i32, i32* @x.55
  %538 = load i32, i32* @y.56
  %539 = sub i32 %537, 1
  %540 = mul i32 %537, %539
  %541 = urem i32 %540, 2
  %542 = icmp eq i32 %541, 0
  %543 = icmp slt i32 %538, 10
  %544 = or i1 %542, %543
  br i1 %544, label %originalBBpart2131, label %originalBB121alteredBB

originalBBpart2131:                               ; preds = %originalBB121
  br label %565

545:                                              ; preds = %originalBBpart2119
  %546 = load i32, i32* @x.55
  %547 = load i32, i32* @y.56
  %548 = sub i32 %546, 1
  %549 = mul i32 %546, %548
  %550 = urem i32 %549, 2
  %551 = icmp eq i32 %550, 0
  %552 = icmp slt i32 %547, 10
  %553 = or i1 %551, %552
  br i1 %553, label %originalBB133, label %originalBB133alteredBB

originalBB133:                                    ; preds = %545, %originalBB133alteredBB
  %554 = load i32, i32* %collatzVar
  %555 = mul i32 %554, 3
  %556 = add i32 %555, 1
  store i32 %556, i32* %collatzVar
  %557 = load i32, i32* @x.55
  %558 = load i32, i32* @y.56
  %559 = sub i32 %557, 1
  %560 = mul i32 %557, %559
  %561 = urem i32 %560, 2
  %562 = icmp eq i32 %561, 0
  %563 = icmp slt i32 %558, 10
  %564 = or i1 %562, %563
  br i1 %564, label %originalBBpart2146, label %originalBB133alteredBB

originalBBpart2146:                               ; preds = %originalBB133
  br label %565

565:                                              ; preds = %originalBBpart2146, %originalBBpart2131
  %566 = load i32, i32* @x.55
  %567 = load i32, i32* @y.56
  %568 = sub i32 %566, 1
  %569 = mul i32 %566, %568
  %570 = urem i32 %569, 2
  %571 = icmp eq i32 %570, 0
  %572 = icmp slt i32 %567, 10
  %573 = or i1 %571, %572
  br i1 %573, label %originalBB148, label %originalBB148alteredBB

originalBB148:                                    ; preds = %565, %originalBB148alteredBB
  %574 = load i32, i32* %collatzVar
  %575 = sub i32 %405, %574
  %576 = icmp sgt i32 %575, 41
  %577 = load i32, i32* @x.55
  %578 = load i32, i32* @y.56
  %579 = sub i32 %577, 1
  %580 = mul i32 %577, %579
  %581 = urem i32 %580, 2
  %582 = icmp eq i32 %581, 0
  %583 = icmp slt i32 %578, 10
  %584 = or i1 %582, %583
  br i1 %584, label %originalBBpart2155, label %originalBB148alteredBB

originalBBpart2155:                               ; preds = %originalBB148
  br i1 %576, label %585, label %487

585:                                              ; preds = %originalBBpart2155
  %586 = load i32, i32* @x.55
  %587 = load i32, i32* @y.56
  %588 = sub i32 %586, 1
  %589 = mul i32 %586, %588
  %590 = urem i32 %589, 2
  %591 = icmp eq i32 %590, 0
  %592 = icmp slt i32 %587, 10
  %593 = or i1 %591, %592
  br i1 %593, label %originalBB157, label %originalBB157alteredBB

originalBB157:                                    ; preds = %585, %originalBB157alteredBB
  %594 = load i32, i32* %collatzVar
  %595 = add i32 %405, %594
  %596 = icmp slt i32 %595, 45
  %597 = load i32, i32* @x.55
  %598 = load i32, i32* @y.56
  %599 = sub i32 %597, 1
  %600 = mul i32 %597, %599
  %601 = urem i32 %600, 2
  %602 = icmp eq i32 %601, 0
  %603 = icmp slt i32 %598, 10
  %604 = or i1 %602, %603
  br i1 %604, label %originalBBpart2171, label %originalBB157alteredBB

originalBBpart2171:                               ; preds = %originalBB157
  br i1 %596, label %605, label %487

605:                                              ; preds = %originalBBpart2171
  %606 = load i32, i32* @x.55
  %607 = load i32, i32* @y.56
  %608 = sub i32 %606, 1
  %609 = mul i32 %606, %608
  %610 = urem i32 %609, 2
  %611 = icmp eq i32 %610, 0
  %612 = icmp slt i32 %607, 10
  %613 = or i1 %611, %612
  br i1 %613, label %originalBB173, label %originalBB173alteredBB

originalBB173:                                    ; preds = %605, %originalBB173alteredBB
  %614 = load i32, i32* @x.55
  %615 = load i32, i32* @y.56
  %616 = sub i32 %614, 1
  %617 = mul i32 %614, %616
  %618 = urem i32 %617, 2
  %619 = icmp eq i32 %618, 0
  %620 = icmp slt i32 %615, 10
  %621 = or i1 %619, %620
  br i1 %621, label %originalBBpart2175, label %originalBB173alteredBB

originalBBpart2175:                               ; preds = %originalBB173
  br label %641, !dbg !3857

622:                                              ; preds = %originalBBpart2109
  %623 = load i32, i32* @x.55
  %624 = load i32, i32* @y.56
  %625 = sub i32 %623, 1
  %626 = mul i32 %623, %625
  %627 = urem i32 %626, 2
  %628 = icmp eq i32 %627, 0
  %629 = icmp slt i32 %624, 10
  %630 = or i1 %628, %629
  br i1 %630, label %originalBB177, label %originalBB177alteredBB

originalBB177:                                    ; preds = %622, %originalBB177alteredBB
  %631 = load i8*, i8** %24, align 8, !dbg !3859
  %632 = call %struct.passwd* @getpwnam(i8* %631), !dbg !3860
  %633 = load i32, i32* @x.55
  %634 = load i32, i32* @y.56
  %635 = sub i32 %633, 1
  %636 = mul i32 %633, %635
  %637 = urem i32 %636, 2
  %638 = icmp eq i32 %637, 0
  %639 = icmp slt i32 %634, 10
  %640 = or i1 %638, %639
  br i1 %640, label %originalBBpart2179, label %originalBB177alteredBB

originalBBpart2179:                               ; preds = %originalBB177
  br label %641, !dbg !3857

641:                                              ; preds = %originalBBpart2179, %originalBBpart2175
  %642 = phi %struct.passwd* [ null, %originalBBpart2175 ], [ %632, %originalBBpart2179 ], !dbg !3857
  %643 = load i32, i32* @x.55
  %644 = load i32, i32* @y.56
  %645 = sub i32 %643, 1
  %646 = mul i32 %643, %645
  %647 = urem i32 %646, 2
  %648 = icmp eq i32 %647, 0
  %649 = icmp slt i32 %644, 10
  %650 = or i1 %648, %649
  br i1 %650, label %originalBB181, label %originalBB181alteredBB

originalBB181:                                    ; preds = %641, %originalBB181alteredBB
  store %struct.passwd* %642, %struct.passwd** %22, align 8, !dbg !3861
  %651 = load %struct.passwd*, %struct.passwd** %22, align 8, !dbg !3862
  %652 = icmp eq %struct.passwd* %651, null, !dbg !3864
  %653 = load i32, i32* @x.55
  %654 = load i32, i32* @y.56
  %655 = sub i32 %653, 1
  %656 = mul i32 %653, %655
  %657 = urem i32 %656, 2
  %658 = icmp eq i32 %657, 0
  %659 = icmp slt i32 %654, 10
  %660 = or i1 %658, %659
  br i1 %660, label %originalBBpart2183, label %originalBB181alteredBB

originalBBpart2183:                               ; preds = %originalBB181
  br i1 %652, label %661, label %868, !dbg !3865

661:                                              ; preds = %originalBBpart2183
  call void @llvm.dbg.declare(metadata i8* %30, metadata !3866, metadata !DIExpression()), !dbg !3868
  %662 = load i32, i32* @x.55
  %663 = load i32, i32* @y.56
  %664 = sub i32 %662, 1
  %665 = mul i32 %662, %664
  %666 = urem i32 %665, 2
  %667 = icmp eq i32 %666, 0
  %668 = icmp slt i32 %663, 10
  %669 = or i1 %667, %668
  br i1 %669, label %originalBB185, label %originalBB185alteredBB

originalBB185:                                    ; preds = %661, %originalBB185alteredBB
  %670 = load i8*, i8** %16, align 8, !dbg !3869
  %671 = icmp ne i8* %670, null, !dbg !3870
  %672 = load i32, i32* @x.55
  %673 = load i32, i32* @y.56
  %674 = sub i32 %672, 1
  %675 = mul i32 %672, %674
  %676 = urem i32 %675, 2
  %677 = icmp eq i32 %676, 0
  %678 = icmp slt i32 %673, 10
  %679 = or i1 %677, %678
  br i1 %679, label %originalBBpart2187, label %originalBB185alteredBB

originalBBpart2187:                               ; preds = %originalBB185
  br i1 %671, label %680, label %699, !dbg !3871

680:                                              ; preds = %originalBBpart2187
  %681 = load i32, i32* @x.55
  %682 = load i32, i32* @y.56
  %683 = sub i32 %681, 1
  %684 = mul i32 %681, %683
  %685 = urem i32 %684, 2
  %686 = icmp eq i32 %685, 0
  %687 = icmp slt i32 %682, 10
  %688 = or i1 %686, %687
  br i1 %688, label %originalBB189, label %originalBB189alteredBB

originalBB189:                                    ; preds = %680, %originalBB189alteredBB
  %689 = load i8*, i8** %25, align 8, !dbg !3872
  %690 = icmp eq i8* %689, null, !dbg !3873
  %691 = load i32, i32* @x.55
  %692 = load i32, i32* @y.56
  %693 = sub i32 %691, 1
  %694 = mul i32 %691, %693
  %695 = urem i32 %694, 2
  %696 = icmp eq i32 %695, 0
  %697 = icmp slt i32 %692, 10
  %698 = or i1 %696, %697
  br i1 %698, label %originalBBpart2191, label %originalBB189alteredBB

originalBBpart2191:                               ; preds = %originalBB189
  br label %699

699:                                              ; preds = %originalBBpart2191, %originalBBpart2187
  %700 = phi i1 [ false, %originalBBpart2187 ], [ %690, %originalBBpart2191 ], !dbg !3874
  %701 = load i32, i32* @x.55
  %702 = load i32, i32* @y.56
  %703 = sub i32 %701, 1
  %704 = mul i32 %701, %703
  %705 = urem i32 %704, 2
  %706 = icmp eq i32 %705, 0
  %707 = icmp slt i32 %702, 10
  %708 = or i1 %706, %707
  br i1 %708, label %originalBB193, label %originalBB193alteredBB

originalBB193:                                    ; preds = %699, %originalBB193alteredBB
  %709 = zext i1 %700 to i8, !dbg !3868
  store i8 %709, i8* %30, align 1, !dbg !3868
  %710 = load i8, i8* %30, align 1, !dbg !3875
  %711 = trunc i8 %710 to i1, !dbg !3875
  %712 = load i32, i32* @x.55
  %713 = load i32, i32* @y.56
  %714 = sub i32 %712, 1
  %715 = mul i32 %712, %714
  %716 = urem i32 %715, 2
  %717 = icmp eq i32 %716, 0
  %718 = icmp slt i32 %713, 10
  %719 = or i1 %717, %718
  br i1 %719, label %originalBBpart2195, label %originalBB193alteredBB

originalBBpart2195:                               ; preds = %originalBB193
  br i1 %711, label %720, label %738, !dbg !3877

720:                                              ; preds = %originalBBpart2195
  %721 = load i32, i32* @x.55
  %722 = load i32, i32* @y.56
  %723 = sub i32 %721, 1
  %724 = mul i32 %721, %723
  %725 = urem i32 %724, 2
  %726 = icmp eq i32 %725, 0
  %727 = icmp slt i32 %722, 10
  %728 = or i1 %726, %727
  br i1 %728, label %originalBB197, label %originalBB197alteredBB

originalBB197:                                    ; preds = %720, %originalBB197alteredBB
  %729 = load i8*, i8** @parse_with_separator.E_bad_spec, align 8, !dbg !3878
  store i8* %729, i8** %21, align 8, !dbg !3880
  %730 = load i32, i32* @x.55
  %731 = load i32, i32* @y.56
  %732 = sub i32 %730, 1
  %733 = mul i32 %730, %732
  %734 = urem i32 %733, 2
  %735 = icmp eq i32 %734, 0
  %736 = icmp slt i32 %731, 10
  %737 = or i1 %735, %736
  br i1 %737, label %originalBBpart2199, label %originalBB197alteredBB

originalBBpart2199:                               ; preds = %originalBB197
  br label %851, !dbg !3881

738:                                              ; preds = %originalBBpart2195
  call void @llvm.dbg.declare(metadata i64* %31, metadata !3882, metadata !DIExpression()), !dbg !3884
  %739 = load i32, i32* @x.55
  %740 = load i32, i32* @y.56
  %741 = sub i32 %739, 1
  %742 = mul i32 %739, %741
  %743 = urem i32 %742, 2
  %744 = icmp eq i32 %743, 0
  %745 = icmp slt i32 %740, 10
  %746 = or i1 %744, %745
  br i1 %746, label %originalBB201, label %originalBB201alteredBB

originalBB201:                                    ; preds = %738, %originalBB201alteredBB
  %747 = load i8*, i8** %24, align 8, !dbg !3885
  %748 = call i32 @xstrtoul(i8* %747, i8** null, i32 10, i64* %31, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3.102, i64 0, i64 0)), !dbg !3887
  %749 = icmp eq i32 %748, 0, !dbg !3888
  %750 = load i32, i32* @x.55
  %751 = load i32, i32* @y.56
  %752 = sub i32 %750, 1
  %753 = mul i32 %750, %752
  %754 = urem i32 %753, 2
  %755 = icmp eq i32 %754, 0
  %756 = icmp slt i32 %751, 10
  %757 = or i1 %755, %756
  br i1 %757, label %originalBBpart2203, label %originalBB201alteredBB

originalBBpart2203:                               ; preds = %originalBB201
  br i1 %749, label %758, label %816, !dbg !3889

758:                                              ; preds = %originalBBpart2203
  %759 = load i32, i32* @x.55
  %760 = load i32, i32* @y.56
  %761 = sub i32 %759, 1
  %762 = mul i32 %759, %761
  %763 = urem i32 %762, 2
  %764 = icmp eq i32 %763, 0
  %765 = icmp slt i32 %760, 10
  %766 = or i1 %764, %765
  br i1 %766, label %originalBB205, label %originalBB205alteredBB

originalBB205:                                    ; preds = %758, %originalBB205alteredBB
  %767 = load i64, i64* %31, align 8, !dbg !3890
  %768 = icmp ule i64 %767, 4294967295, !dbg !3891
  %769 = load i32, i32* @x.55
  %770 = load i32, i32* @y.56
  %771 = sub i32 %769, 1
  %772 = mul i32 %769, %771
  %773 = urem i32 %772, 2
  %774 = icmp eq i32 %773, 0
  %775 = icmp slt i32 %770, 10
  %776 = or i1 %774, %775
  br i1 %776, label %originalBBpart2207, label %originalBB205alteredBB

originalBBpart2207:                               ; preds = %originalBB205
  br i1 %768, label %777, label %816, !dbg !3892

777:                                              ; preds = %originalBBpart2207
  %778 = load i32, i32* @x.55
  %779 = load i32, i32* @y.56
  %780 = sub i32 %778, 1
  %781 = mul i32 %778, %780
  %782 = urem i32 %781, 2
  %783 = icmp eq i32 %782, 0
  %784 = icmp slt i32 %779, 10
  %785 = or i1 %783, %784
  br i1 %785, label %originalBB209, label %originalBB209alteredBB

originalBB209:                                    ; preds = %777, %originalBB209alteredBB
  %786 = load i64, i64* %31, align 8, !dbg !3893
  %787 = trunc i64 %786 to i32, !dbg !3894
  %788 = icmp ne i32 %787, -1, !dbg !3895
  %789 = load i32, i32* @x.55
  %790 = load i32, i32* @y.56
  %791 = sub i32 %789, 1
  %792 = mul i32 %789, %791
  %793 = urem i32 %792, 2
  %794 = icmp eq i32 %793, 0
  %795 = icmp slt i32 %790, 10
  %796 = or i1 %794, %795
  br i1 %796, label %originalBBpart2211, label %originalBB209alteredBB

originalBBpart2211:                               ; preds = %originalBB209
  br i1 %788, label %797, label %816, !dbg !3896

797:                                              ; preds = %originalBBpart2211
  %798 = load i32, i32* @x.55
  %799 = load i32, i32* @y.56
  %800 = sub i32 %798, 1
  %801 = mul i32 %798, %800
  %802 = urem i32 %801, 2
  %803 = icmp eq i32 %802, 0
  %804 = icmp slt i32 %799, 10
  %805 = or i1 %803, %804
  br i1 %805, label %originalBB213, label %originalBB213alteredBB

originalBB213:                                    ; preds = %797, %originalBB213alteredBB
  %806 = load i64, i64* %31, align 8, !dbg !3897
  %807 = trunc i64 %806 to i32, !dbg !3897
  store i32 %807, i32* %27, align 4, !dbg !3898
  %808 = load i32, i32* @x.55
  %809 = load i32, i32* @y.56
  %810 = sub i32 %808, 1
  %811 = mul i32 %808, %810
  %812 = urem i32 %811, 2
  %813 = icmp eq i32 %812, 0
  %814 = icmp slt i32 %809, 10
  %815 = or i1 %813, %814
  br i1 %815, label %originalBBpart2215, label %originalBB213alteredBB

originalBBpart2215:                               ; preds = %originalBB213
  br label %834, !dbg !3899

816:                                              ; preds = %originalBBpart2211, %originalBBpart2207, %originalBBpart2203
  %817 = load i32, i32* @x.55
  %818 = load i32, i32* @y.56
  %819 = sub i32 %817, 1
  %820 = mul i32 %817, %819
  %821 = urem i32 %820, 2
  %822 = icmp eq i32 %821, 0
  %823 = icmp slt i32 %818, 10
  %824 = or i1 %822, %823
  br i1 %824, label %originalBB217, label %originalBB217alteredBB

originalBB217:                                    ; preds = %816, %originalBB217alteredBB
  %825 = load i8*, i8** @parse_with_separator.E_invalid_user, align 8, !dbg !3900
  store i8* %825, i8** %21, align 8, !dbg !3901
  %826 = load i32, i32* @x.55
  %827 = load i32, i32* @y.56
  %828 = sub i32 %826, 1
  %829 = mul i32 %826, %828
  %830 = urem i32 %829, 2
  %831 = icmp eq i32 %830, 0
  %832 = icmp slt i32 %827, 10
  %833 = or i1 %831, %832
  br i1 %833, label %originalBBpart2219, label %originalBB217alteredBB

originalBBpart2219:                               ; preds = %originalBB217
  br label %834

834:                                              ; preds = %originalBBpart2219, %originalBBpart2215
  %835 = load i32, i32* @x.55
  %836 = load i32, i32* @y.56
  %837 = sub i32 %835, 1
  %838 = mul i32 %835, %837
  %839 = urem i32 %838, 2
  %840 = icmp eq i32 %839, 0
  %841 = icmp slt i32 %836, 10
  %842 = or i1 %840, %841
  br i1 %842, label %originalBB221, label %originalBB221alteredBB

originalBB221:                                    ; preds = %834, %originalBB221alteredBB
  %843 = load i32, i32* @x.55
  %844 = load i32, i32* @y.56
  %845 = sub i32 %843, 1
  %846 = mul i32 %843, %845
  %847 = urem i32 %846, 2
  %848 = icmp eq i32 %847, 0
  %849 = icmp slt i32 %844, 10
  %850 = or i1 %848, %849
  br i1 %850, label %originalBBpart2223, label %originalBB221alteredBB

originalBBpart2223:                               ; preds = %originalBB221
  br label %851

851:                                              ; preds = %originalBBpart2223, %originalBBpart2199
  %852 = load i32, i32* @x.55
  %853 = load i32, i32* @y.56
  %854 = sub i32 %852, 1
  %855 = mul i32 %852, %854
  %856 = urem i32 %855, 2
  %857 = icmp eq i32 %856, 0
  %858 = icmp slt i32 %853, 10
  %859 = or i1 %857, %858
  br i1 %859, label %originalBB225, label %originalBB225alteredBB

originalBB225:                                    ; preds = %851, %originalBB225alteredBB
  %860 = load i32, i32* @x.55
  %861 = load i32, i32* @y.56
  %862 = sub i32 %860, 1
  %863 = mul i32 %860, %862
  %864 = urem i32 %863, 2
  %865 = icmp eq i32 %864, 0
  %866 = icmp slt i32 %861, 10
  %867 = or i1 %865, %866
  br i1 %867, label %originalBBpart2227, label %originalBB225alteredBB

originalBBpart2227:                               ; preds = %originalBB225
  br label %1010, !dbg !3902

868:                                              ; preds = %originalBBpart2183
  %869 = load i32, i32* @x.55
  %870 = load i32, i32* @y.56
  %871 = sub i32 %869, 1
  %872 = mul i32 %869, %871
  %873 = urem i32 %872, 2
  %874 = icmp eq i32 %873, 0
  %875 = icmp slt i32 %870, 10
  %876 = or i1 %874, %875
  br i1 %876, label %originalBB229, label %originalBB229alteredBB

originalBB229:                                    ; preds = %868, %originalBB229alteredBB
  %877 = load %struct.passwd*, %struct.passwd** %22, align 8, !dbg !3903
  %878 = getelementptr inbounds %struct.passwd, %struct.passwd* %877, i32 0, i32 2, !dbg !3905
  %879 = load i32, i32* %878, align 8, !dbg !3905
  store i32 %879, i32* %27, align 4, !dbg !3906
  %880 = load i8*, i8** %25, align 8, !dbg !3907
  %881 = icmp eq i8* %880, null, !dbg !3909
  %882 = load i32, i32* @x.55
  %883 = load i32, i32* @y.56
  %884 = sub i32 %882, 1
  %885 = mul i32 %882, %884
  %886 = urem i32 %885, 2
  %887 = icmp eq i32 %886, 0
  %888 = icmp slt i32 %883, 10
  %889 = or i1 %887, %888
  br i1 %889, label %originalBBpart2231, label %originalBB229alteredBB

originalBBpart2231:                               ; preds = %originalBB229
  br i1 %881, label %890, label %993, !dbg !3910

890:                                              ; preds = %originalBBpart2231
  %891 = load i32, i32* @x.55
  %892 = load i32, i32* @y.56
  %893 = sub i32 %891, 1
  %894 = mul i32 %891, %893
  %895 = urem i32 %894, 2
  %896 = icmp eq i32 %895, 0
  %897 = icmp slt i32 %892, 10
  %898 = or i1 %896, %897
  br i1 %898, label %originalBB233, label %originalBB233alteredBB

originalBB233:                                    ; preds = %890, %originalBB233alteredBB
  %899 = load i8*, i8** %16, align 8, !dbg !3911
  %900 = icmp ne i8* %899, null, !dbg !3912
  %901 = load i32, i32* @x.55
  %902 = load i32, i32* @y.56
  %903 = sub i32 %901, 1
  %904 = mul i32 %901, %903
  %905 = urem i32 %904, 2
  %906 = icmp eq i32 %905, 0
  %907 = icmp slt i32 %902, 10
  %908 = or i1 %906, %907
  br i1 %908, label %originalBBpart2235, label %originalBB233alteredBB

originalBBpart2235:                               ; preds = %originalBB233
  br i1 %900, label %909, label %993, !dbg !3913

909:                                              ; preds = %originalBBpart2235
  call void @llvm.dbg.declare(metadata [21 x i8]* %32, metadata !3914, metadata !DIExpression()), !dbg !3916
  %910 = load i32, i32* @x.55
  %911 = load i32, i32* @y.56
  %912 = sub i32 %910, 1
  %913 = mul i32 %910, %912
  %914 = urem i32 %913, 2
  %915 = icmp eq i32 %914, 0
  %916 = icmp slt i32 %911, 10
  %917 = or i1 %915, %916
  br i1 %917, label %originalBB237, label %originalBB237alteredBB

originalBB237:                                    ; preds = %909, %originalBB237alteredBB
  %918 = load %struct.passwd*, %struct.passwd** %22, align 8, !dbg !3917
  %919 = getelementptr inbounds %struct.passwd, %struct.passwd* %918, i32 0, i32 3, !dbg !3918
  %920 = load i32, i32* %919, align 4, !dbg !3918
  store i32 %920, i32* %28, align 4, !dbg !3919
  %921 = load i32, i32* %28, align 4, !dbg !3920
  %922 = call %struct.group* @getgrgid(i32 %921), !dbg !3921
  store %struct.group* %922, %struct.group** %23, align 8, !dbg !3922
  %923 = load %struct.group*, %struct.group** %23, align 8, !dbg !3923
  %924 = icmp ne %struct.group* %923, null, !dbg !3923
  %925 = load i32, i32* @x.55
  %926 = load i32, i32* @y.56
  %927 = sub i32 %925, 1
  %928 = mul i32 %925, %927
  %929 = urem i32 %928, 2
  %930 = icmp eq i32 %929, 0
  %931 = icmp slt i32 %926, 10
  %932 = or i1 %930, %931
  br i1 %932, label %originalBBpart2239, label %originalBB237alteredBB

originalBBpart2239:                               ; preds = %originalBB237
  br i1 %924, label %933, label %953, !dbg !3923

933:                                              ; preds = %originalBBpart2239
  %934 = load i32, i32* @x.55
  %935 = load i32, i32* @y.56
  %936 = sub i32 %934, 1
  %937 = mul i32 %934, %936
  %938 = urem i32 %937, 2
  %939 = icmp eq i32 %938, 0
  %940 = icmp slt i32 %935, 10
  %941 = or i1 %939, %940
  br i1 %941, label %originalBB241, label %originalBB241alteredBB

originalBB241:                                    ; preds = %933, %originalBB241alteredBB
  %942 = load %struct.group*, %struct.group** %23, align 8, !dbg !3924
  %943 = getelementptr inbounds %struct.group, %struct.group* %942, i32 0, i32 0, !dbg !3925
  %944 = load i8*, i8** %943, align 8, !dbg !3925
  %945 = load i32, i32* @x.55
  %946 = load i32, i32* @y.56
  %947 = sub i32 %945, 1
  %948 = mul i32 %945, %947
  %949 = urem i32 %948, 2
  %950 = icmp eq i32 %949, 0
  %951 = icmp slt i32 %946, 10
  %952 = or i1 %950, %951
  br i1 %952, label %originalBBpart2243, label %originalBB241alteredBB

originalBBpart2243:                               ; preds = %originalBB241
  br label %974, !dbg !3923

953:                                              ; preds = %originalBBpart2239
  %954 = load i32, i32* @x.55
  %955 = load i32, i32* @y.56
  %956 = sub i32 %954, 1
  %957 = mul i32 %954, %956
  %958 = urem i32 %957, 2
  %959 = icmp eq i32 %958, 0
  %960 = icmp slt i32 %955, 10
  %961 = or i1 %959, %960
  br i1 %961, label %originalBB245, label %originalBB245alteredBB

originalBB245:                                    ; preds = %953, %originalBB245alteredBB
  %962 = load i32, i32* %28, align 4, !dbg !3926
  %963 = zext i32 %962 to i64, !dbg !3926
  %964 = getelementptr inbounds [21 x i8], [21 x i8]* %32, i64 0, i64 0, !dbg !3927
  %965 = call i8* @umaxtostr(i64 %963, i8* %964), !dbg !3928
  %966 = load i32, i32* @x.55
  %967 = load i32, i32* @y.56
  %968 = sub i32 %966, 1
  %969 = mul i32 %966, %968
  %970 = urem i32 %969, 2
  %971 = icmp eq i32 %970, 0
  %972 = icmp slt i32 %967, 10
  %973 = or i1 %971, %972
  br i1 %973, label %originalBBpart2247, label %originalBB245alteredBB

originalBBpart2247:                               ; preds = %originalBB245
  br label %974, !dbg !3923

974:                                              ; preds = %originalBBpart2247, %originalBBpart2243
  %975 = phi i8* [ %944, %originalBBpart2243 ], [ %965, %originalBBpart2247 ], !dbg !3923
  %976 = load i32, i32* @x.55
  %977 = load i32, i32* @y.56
  %978 = sub i32 %976, 1
  %979 = mul i32 %976, %978
  %980 = urem i32 %979, 2
  %981 = icmp eq i32 %980, 0
  %982 = icmp slt i32 %977, 10
  %983 = or i1 %981, %982
  br i1 %983, label %originalBB249, label %originalBB249alteredBB

originalBB249:                                    ; preds = %974, %originalBB249alteredBB
  %984 = call noalias i8* @xstrdup(i8* %975), !dbg !3929
  store i8* %984, i8** %26, align 8, !dbg !3930
  call void @endgrent(), !dbg !3931
  %985 = load i32, i32* @x.55
  %986 = load i32, i32* @y.56
  %987 = sub i32 %985, 1
  %988 = mul i32 %985, %987
  %989 = urem i32 %988, 2
  %990 = icmp eq i32 %989, 0
  %991 = icmp slt i32 %986, 10
  %992 = or i1 %990, %991
  br i1 %992, label %originalBBpart2251, label %originalBB249alteredBB

originalBBpart2251:                               ; preds = %originalBB249
  br label %993, !dbg !3932

993:                                              ; preds = %originalBBpart2251, %originalBBpart2235, %originalBBpart2231
  %994 = load i32, i32* @x.55
  %995 = load i32, i32* @y.56
  %996 = sub i32 %994, 1
  %997 = mul i32 %994, %996
  %998 = urem i32 %997, 2
  %999 = icmp eq i32 %998, 0
  %1000 = icmp slt i32 %995, 10
  %1001 = or i1 %999, %1000
  br i1 %1001, label %originalBB253, label %originalBB253alteredBB

originalBB253:                                    ; preds = %993, %originalBB253alteredBB
  %1002 = load i32, i32* @x.55
  %1003 = load i32, i32* @y.56
  %1004 = sub i32 %1002, 1
  %1005 = mul i32 %1002, %1004
  %1006 = urem i32 %1005, 2
  %1007 = icmp eq i32 %1006, 0
  %1008 = icmp slt i32 %1003, 10
  %1009 = or i1 %1007, %1008
  br i1 %1009, label %originalBBpart2255, label %originalBB253alteredBB

originalBBpart2255:                               ; preds = %originalBB253
  br label %1010

1010:                                             ; preds = %originalBBpart2255, %originalBBpart2227
  %1011 = load i32, i32* @x.55
  %1012 = load i32, i32* @y.56
  %1013 = sub i32 %1011, 1
  %1014 = mul i32 %1011, %1013
  %1015 = urem i32 %1014, 2
  %1016 = icmp eq i32 %1015, 0
  %1017 = icmp slt i32 %1012, 10
  %1018 = or i1 %1016, %1017
  br i1 %1018, label %originalBB257, label %originalBB257alteredBB

originalBB257:                                    ; preds = %1010, %originalBB257alteredBB
  call void @endpwent(), !dbg !3933
  %1019 = load i32, i32* @x.55
  %1020 = load i32, i32* @y.56
  %1021 = sub i32 %1019, 1
  %1022 = mul i32 %1019, %1021
  %1023 = urem i32 %1022, 2
  %1024 = icmp eq i32 %1023, 0
  %1025 = icmp slt i32 %1020, 10
  %1026 = or i1 %1024, %1025
  br i1 %1026, label %originalBBpart2259, label %originalBB257alteredBB

originalBBpart2259:                               ; preds = %originalBB257
  br label %1027, !dbg !3934

1027:                                             ; preds = %originalBBpart2259, %originalBBpart285
  %1028 = load i32, i32* @x.55
  %1029 = load i32, i32* @y.56
  %1030 = sub i32 %1028, 1
  %1031 = mul i32 %1028, %1030
  %1032 = urem i32 %1031, 2
  %1033 = icmp eq i32 %1032, 0
  %1034 = icmp slt i32 %1029, 10
  %1035 = or i1 %1033, %1034
  br i1 %1035, label %originalBB261, label %originalBB261alteredBB

originalBB261:                                    ; preds = %1027, %originalBB261alteredBB
  %1036 = load i8*, i8** %25, align 8, !dbg !3935
  %1037 = icmp ne i8* %1036, null, !dbg !3937
  %1038 = load i32, i32* @x.55
  %1039 = load i32, i32* @y.56
  %1040 = sub i32 %1038, 1
  %1041 = mul i32 %1038, %1040
  %1042 = urem i32 %1041, 2
  %1043 = icmp eq i32 %1042, 0
  %1044 = icmp slt i32 %1039, 10
  %1045 = or i1 %1043, %1044
  br i1 %1045, label %originalBBpart2264, label %originalBB261alteredBB

originalBBpart2264:                               ; preds = %originalBB261
  br i1 %1037, label %1046, label %1294, !dbg !3938

1046:                                             ; preds = %originalBBpart2264
  %1047 = load i32, i32* @x.55
  %1048 = load i32, i32* @y.56
  %1049 = sub i32 %1047, 1
  %1050 = mul i32 %1047, %1049
  %1051 = urem i32 %1050, 2
  %1052 = icmp eq i32 %1051, 0
  %1053 = icmp slt i32 %1048, 10
  %1054 = or i1 %1052, %1053
  br i1 %1054, label %originalBB266, label %originalBB266alteredBB

originalBB266:                                    ; preds = %1046, %originalBB266alteredBB
  %1055 = load i8*, i8** %21, align 8, !dbg !3939
  %1056 = icmp eq i8* %1055, null, !dbg !3940
  %1057 = load i32, i32* @x.55
  %1058 = load i32, i32* @y.56
  %1059 = sub i32 %1057, 1
  %1060 = mul i32 %1057, %1059
  %1061 = urem i32 %1060, 2
  %1062 = icmp eq i32 %1061, 0
  %1063 = icmp slt i32 %1058, 10
  %1064 = or i1 %1062, %1063
  br i1 %1064, label %originalBBpart2268, label %originalBB266alteredBB

originalBBpart2268:                               ; preds = %originalBB266
  br i1 %1056, label %1065, label %1294, !dbg !3941

1065:                                             ; preds = %originalBBpart2268
  %1066 = load i32, i32* @x.55
  %1067 = load i32, i32* @y.56
  %1068 = sub i32 %1066, 1
  %1069 = mul i32 %1066, %1068
  %1070 = urem i32 %1069, 2
  %1071 = icmp eq i32 %1070, 0
  %1072 = icmp slt i32 %1067, 10
  %1073 = or i1 %1071, %1072
  br i1 %1073, label %originalBB270, label %originalBB270alteredBB

originalBB270:                                    ; preds = %1065, %originalBB270alteredBB
  %1074 = load i8*, i8** %25, align 8, !dbg !3942
  %1075 = load i8, i8* %1074, align 1, !dbg !3944
  %1076 = sext i8 %1075 to i32, !dbg !3944
  %1077 = icmp eq i32 %1076, 43, !dbg !3945
  %1078 = load i32, i32* @x.55
  %1079 = load i32, i32* @y.56
  %1080 = sub i32 %1078, 1
  %1081 = mul i32 %1078, %1080
  %1082 = urem i32 %1081, 2
  %1083 = icmp eq i32 %1082, 0
  %1084 = icmp slt i32 %1079, 10
  %1085 = or i1 %1083, %1084
  br i1 %1085, label %originalBBpart2272, label %originalBB270alteredBB

originalBBpart2272:                               ; preds = %originalBB270
  br i1 %1077, label %1086, label %1103, !dbg !3944

1086:                                             ; preds = %originalBBpart2272
  %1087 = load i32, i32* @x.55
  %1088 = load i32, i32* @y.56
  %1089 = sub i32 %1087, 1
  %1090 = mul i32 %1087, %1089
  %1091 = urem i32 %1090, 2
  %1092 = icmp eq i32 %1091, 0
  %1093 = icmp slt i32 %1088, 10
  %1094 = or i1 %1092, %1093
  br i1 %1094, label %originalBB274, label %originalBB274alteredBB

originalBB274:                                    ; preds = %1086, %originalBB274alteredBB
  %1095 = load i32, i32* @x.55
  %1096 = load i32, i32* @y.56
  %1097 = sub i32 %1095, 1
  %1098 = mul i32 %1095, %1097
  %1099 = urem i32 %1098, 2
  %1100 = icmp eq i32 %1099, 0
  %1101 = icmp slt i32 %1096, 10
  %1102 = or i1 %1100, %1101
  br i1 %1102, label %originalBBpart2276, label %originalBB274alteredBB

originalBBpart2276:                               ; preds = %originalBB274
  br label %1122, !dbg !3944

1103:                                             ; preds = %originalBBpart2272
  %1104 = load i32, i32* @x.55
  %1105 = load i32, i32* @y.56
  %1106 = sub i32 %1104, 1
  %1107 = mul i32 %1104, %1106
  %1108 = urem i32 %1107, 2
  %1109 = icmp eq i32 %1108, 0
  %1110 = icmp slt i32 %1105, 10
  %1111 = or i1 %1109, %1110
  br i1 %1111, label %originalBB278, label %originalBB278alteredBB

originalBB278:                                    ; preds = %1103, %originalBB278alteredBB
  %1112 = load i8*, i8** %25, align 8, !dbg !3946
  %1113 = call %struct.group* @getgrnam(i8* %1112), !dbg !3947
  %1114 = load i32, i32* @x.55
  %1115 = load i32, i32* @y.56
  %1116 = sub i32 %1114, 1
  %1117 = mul i32 %1114, %1116
  %1118 = urem i32 %1117, 2
  %1119 = icmp eq i32 %1118, 0
  %1120 = icmp slt i32 %1115, 10
  %1121 = or i1 %1119, %1120
  br i1 %1121, label %originalBBpart2280, label %originalBB278alteredBB

originalBBpart2280:                               ; preds = %originalBB278
  br label %1122, !dbg !3944

1122:                                             ; preds = %originalBBpart2280, %originalBBpart2276
  %1123 = phi %struct.group* [ null, %originalBBpart2276 ], [ %1113, %originalBBpart2280 ], !dbg !3944
  %1124 = load i32, i32* @x.55
  %1125 = load i32, i32* @y.56
  %1126 = sub i32 %1124, 1
  %1127 = mul i32 %1124, %1126
  %1128 = urem i32 %1127, 2
  %1129 = icmp eq i32 %1128, 0
  %1130 = icmp slt i32 %1125, 10
  %1131 = or i1 %1129, %1130
  br i1 %1131, label %originalBB282, label %originalBB282alteredBB

originalBB282:                                    ; preds = %1122, %originalBB282alteredBB
  store %struct.group* %1123, %struct.group** %23, align 8, !dbg !3948
  %1132 = load %struct.group*, %struct.group** %23, align 8, !dbg !3949
  %1133 = icmp eq %struct.group* %1132, null, !dbg !3951
  %1134 = load i32, i32* @x.55
  %1135 = load i32, i32* @y.56
  %1136 = sub i32 %1134, 1
  %1137 = mul i32 %1134, %1136
  %1138 = urem i32 %1137, 2
  %1139 = icmp eq i32 %1138, 0
  %1140 = icmp slt i32 %1135, 10
  %1141 = or i1 %1139, %1140
  br i1 %1141, label %originalBBpart2284, label %originalBB282alteredBB

originalBBpart2284:                               ; preds = %originalBB282
  br i1 %1133, label %1142, label %1255, !dbg !3952

1142:                                             ; preds = %originalBBpart2284
  call void @llvm.dbg.declare(metadata i64* %33, metadata !3953, metadata !DIExpression()), !dbg !3955
  %1143 = load i32, i32* @x.55
  %1144 = load i32, i32* @y.56
  %1145 = sub i32 %1143, 1
  %1146 = mul i32 %1143, %1145
  %1147 = urem i32 %1146, 2
  %1148 = icmp eq i32 %1147, 0
  %1149 = icmp slt i32 %1144, 10
  %1150 = or i1 %1148, %1149
  br i1 %1150, label %originalBB286, label %originalBB286alteredBB

originalBB286:                                    ; preds = %1142, %originalBB286alteredBB
  %1151 = load i8*, i8** %25, align 8, !dbg !3956
  %1152 = call i32 @xstrtoul(i8* %1151, i8** null, i32 10, i64* %33, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3.102, i64 0, i64 0)), !dbg !3958
  %1153 = icmp eq i32 %1152, 0, !dbg !3959
  %1154 = load i32, i32* @x.55
  %1155 = load i32, i32* @y.56
  %1156 = sub i32 %1154, 1
  %1157 = mul i32 %1154, %1156
  %1158 = urem i32 %1157, 2
  %1159 = icmp eq i32 %1158, 0
  %1160 = icmp slt i32 %1155, 10
  %1161 = or i1 %1159, %1160
  br i1 %1161, label %originalBBpart2288, label %originalBB286alteredBB

originalBBpart2288:                               ; preds = %originalBB286
  br i1 %1153, label %1162, label %1220, !dbg !3960

1162:                                             ; preds = %originalBBpart2288
  %1163 = load i32, i32* @x.55
  %1164 = load i32, i32* @y.56
  %1165 = sub i32 %1163, 1
  %1166 = mul i32 %1163, %1165
  %1167 = urem i32 %1166, 2
  %1168 = icmp eq i32 %1167, 0
  %1169 = icmp slt i32 %1164, 10
  %1170 = or i1 %1168, %1169
  br i1 %1170, label %originalBB290, label %originalBB290alteredBB

originalBB290:                                    ; preds = %1162, %originalBB290alteredBB
  %1171 = load i64, i64* %33, align 8, !dbg !3961
  %1172 = icmp ule i64 %1171, 4294967295, !dbg !3962
  %1173 = load i32, i32* @x.55
  %1174 = load i32, i32* @y.56
  %1175 = sub i32 %1173, 1
  %1176 = mul i32 %1173, %1175
  %1177 = urem i32 %1176, 2
  %1178 = icmp eq i32 %1177, 0
  %1179 = icmp slt i32 %1174, 10
  %1180 = or i1 %1178, %1179
  br i1 %1180, label %originalBBpart2292, label %originalBB290alteredBB

originalBBpart2292:                               ; preds = %originalBB290
  br i1 %1172, label %1181, label %1220, !dbg !3963

1181:                                             ; preds = %originalBBpart2292
  %1182 = load i32, i32* @x.55
  %1183 = load i32, i32* @y.56
  %1184 = sub i32 %1182, 1
  %1185 = mul i32 %1182, %1184
  %1186 = urem i32 %1185, 2
  %1187 = icmp eq i32 %1186, 0
  %1188 = icmp slt i32 %1183, 10
  %1189 = or i1 %1187, %1188
  br i1 %1189, label %originalBB294, label %originalBB294alteredBB

originalBB294:                                    ; preds = %1181, %originalBB294alteredBB
  %1190 = load i64, i64* %33, align 8, !dbg !3964
  %1191 = trunc i64 %1190 to i32, !dbg !3965
  %1192 = icmp ne i32 %1191, -1, !dbg !3966
  %1193 = load i32, i32* @x.55
  %1194 = load i32, i32* @y.56
  %1195 = sub i32 %1193, 1
  %1196 = mul i32 %1193, %1195
  %1197 = urem i32 %1196, 2
  %1198 = icmp eq i32 %1197, 0
  %1199 = icmp slt i32 %1194, 10
  %1200 = or i1 %1198, %1199
  br i1 %1200, label %originalBBpart2296, label %originalBB294alteredBB

originalBBpart2296:                               ; preds = %originalBB294
  br i1 %1192, label %1201, label %1220, !dbg !3967

1201:                                             ; preds = %originalBBpart2296
  %1202 = load i32, i32* @x.55
  %1203 = load i32, i32* @y.56
  %1204 = sub i32 %1202, 1
  %1205 = mul i32 %1202, %1204
  %1206 = urem i32 %1205, 2
  %1207 = icmp eq i32 %1206, 0
  %1208 = icmp slt i32 %1203, 10
  %1209 = or i1 %1207, %1208
  br i1 %1209, label %originalBB298, label %originalBB298alteredBB

originalBB298:                                    ; preds = %1201, %originalBB298alteredBB
  %1210 = load i64, i64* %33, align 8, !dbg !3968
  %1211 = trunc i64 %1210 to i32, !dbg !3968
  store i32 %1211, i32* %28, align 4, !dbg !3969
  %1212 = load i32, i32* @x.55
  %1213 = load i32, i32* @y.56
  %1214 = sub i32 %1212, 1
  %1215 = mul i32 %1212, %1214
  %1216 = urem i32 %1215, 2
  %1217 = icmp eq i32 %1216, 0
  %1218 = icmp slt i32 %1213, 10
  %1219 = or i1 %1217, %1218
  br i1 %1219, label %originalBBpart2300, label %originalBB298alteredBB

originalBBpart2300:                               ; preds = %originalBB298
  br label %1238, !dbg !3970

1220:                                             ; preds = %originalBBpart2296, %originalBBpart2292, %originalBBpart2288
  %1221 = load i32, i32* @x.55
  %1222 = load i32, i32* @y.56
  %1223 = sub i32 %1221, 1
  %1224 = mul i32 %1221, %1223
  %1225 = urem i32 %1224, 2
  %1226 = icmp eq i32 %1225, 0
  %1227 = icmp slt i32 %1222, 10
  %1228 = or i1 %1226, %1227
  br i1 %1228, label %originalBB302, label %originalBB302alteredBB

originalBB302:                                    ; preds = %1220, %originalBB302alteredBB
  %1229 = load i8*, i8** @parse_with_separator.E_invalid_group, align 8, !dbg !3971
  store i8* %1229, i8** %21, align 8, !dbg !3972
  %1230 = load i32, i32* @x.55
  %1231 = load i32, i32* @y.56
  %1232 = sub i32 %1230, 1
  %1233 = mul i32 %1230, %1232
  %1234 = urem i32 %1233, 2
  %1235 = icmp eq i32 %1234, 0
  %1236 = icmp slt i32 %1231, 10
  %1237 = or i1 %1235, %1236
  br i1 %1237, label %originalBBpart2304, label %originalBB302alteredBB

originalBBpart2304:                               ; preds = %originalBB302
  br label %1238

1238:                                             ; preds = %originalBBpart2304, %originalBBpart2300
  %1239 = load i32, i32* @x.55
  %1240 = load i32, i32* @y.56
  %1241 = sub i32 %1239, 1
  %1242 = mul i32 %1239, %1241
  %1243 = urem i32 %1242, 2
  %1244 = icmp eq i32 %1243, 0
  %1245 = icmp slt i32 %1240, 10
  %1246 = or i1 %1244, %1245
  br i1 %1246, label %originalBB306, label %originalBB306alteredBB

originalBB306:                                    ; preds = %1238, %originalBB306alteredBB
  %1247 = load i32, i32* @x.55
  %1248 = load i32, i32* @y.56
  %1249 = sub i32 %1247, 1
  %1250 = mul i32 %1247, %1249
  %1251 = urem i32 %1250, 2
  %1252 = icmp eq i32 %1251, 0
  %1253 = icmp slt i32 %1248, 10
  %1254 = or i1 %1252, %1253
  br i1 %1254, label %originalBBpart2308, label %originalBB306alteredBB

originalBBpart2308:                               ; preds = %originalBB306
  br label %1275, !dbg !3973

1255:                                             ; preds = %originalBBpart2284
  %1256 = load i32, i32* @x.55
  %1257 = load i32, i32* @y.56
  %1258 = sub i32 %1256, 1
  %1259 = mul i32 %1256, %1258
  %1260 = urem i32 %1259, 2
  %1261 = icmp eq i32 %1260, 0
  %1262 = icmp slt i32 %1257, 10
  %1263 = or i1 %1261, %1262
  br i1 %1263, label %originalBB310, label %originalBB310alteredBB

originalBB310:                                    ; preds = %1255, %originalBB310alteredBB
  %1264 = load %struct.group*, %struct.group** %23, align 8, !dbg !3974
  %1265 = getelementptr inbounds %struct.group, %struct.group* %1264, i32 0, i32 2, !dbg !3975
  %1266 = load i32, i32* %1265, align 8, !dbg !3975
  store i32 %1266, i32* %28, align 4, !dbg !3976
  %1267 = load i32, i32* @x.55
  %1268 = load i32, i32* @y.56
  %1269 = sub i32 %1267, 1
  %1270 = mul i32 %1267, %1269
  %1271 = urem i32 %1270, 2
  %1272 = icmp eq i32 %1271, 0
  %1273 = icmp slt i32 %1268, 10
  %1274 = or i1 %1272, %1273
  br i1 %1274, label %originalBBpart2312, label %originalBB310alteredBB

originalBBpart2312:                               ; preds = %originalBB310
  br label %1275

1275:                                             ; preds = %originalBBpart2312, %originalBBpart2308
  %1276 = load i32, i32* @x.55
  %1277 = load i32, i32* @y.56
  %1278 = sub i32 %1276, 1
  %1279 = mul i32 %1276, %1278
  %1280 = urem i32 %1279, 2
  %1281 = icmp eq i32 %1280, 0
  %1282 = icmp slt i32 %1277, 10
  %1283 = or i1 %1281, %1282
  br i1 %1283, label %originalBB314, label %originalBB314alteredBB

originalBB314:                                    ; preds = %1275, %originalBB314alteredBB
  call void @endgrent(), !dbg !3977
  %1284 = load i8*, i8** %25, align 8, !dbg !3978
  %1285 = call noalias i8* @xstrdup(i8* %1284), !dbg !3979
  store i8* %1285, i8** %26, align 8, !dbg !3980
  %1286 = load i32, i32* @x.55
  %1287 = load i32, i32* @y.56
  %1288 = sub i32 %1286, 1
  %1289 = mul i32 %1286, %1288
  %1290 = urem i32 %1289, 2
  %1291 = icmp eq i32 %1290, 0
  %1292 = icmp slt i32 %1287, 10
  %1293 = or i1 %1291, %1292
  br i1 %1293, label %originalBBpart2316, label %originalBB314alteredBB

originalBBpart2316:                               ; preds = %originalBB314
  br label %1294, !dbg !3981

1294:                                             ; preds = %originalBBpart2316, %originalBBpart2268, %originalBBpart2264
  %1295 = load i32, i32* @x.55
  %1296 = load i32, i32* @y.56
  %1297 = sub i32 %1295, 1
  %1298 = mul i32 %1295, %1297
  %1299 = urem i32 %1298, 2
  %1300 = icmp eq i32 %1299, 0
  %1301 = icmp slt i32 %1296, 10
  %1302 = or i1 %1300, %1301
  br i1 %1302, label %originalBB318, label %originalBB318alteredBB

originalBB318:                                    ; preds = %1294, %originalBB318alteredBB
  %1303 = load i8*, i8** %21, align 8, !dbg !3982
  %1304 = icmp eq i8* %1303, null, !dbg !3984
  %1305 = load i32, i32* @x.55
  %1306 = load i32, i32* @y.56
  %1307 = sub i32 %1305, 1
  %1308 = mul i32 %1305, %1307
  %1309 = urem i32 %1308, 2
  %1310 = icmp eq i32 %1309, 0
  %1311 = icmp slt i32 %1306, 10
  %1312 = or i1 %1310, %1311
  br i1 %1312, label %originalBBpart2320, label %originalBB318alteredBB

originalBBpart2320:                               ; preds = %originalBB318
  br i1 %1304, label %1313, label %1446, !dbg !3985

1313:                                             ; preds = %originalBBpart2320
  %1314 = load i32, i32* @x.55
  %1315 = load i32, i32* @y.56
  %1316 = sub i32 %1314, 1
  %1317 = mul i32 %1314, %1316
  %1318 = urem i32 %1317, 2
  %1319 = icmp eq i32 %1318, 0
  %1320 = icmp slt i32 %1315, 10
  %1321 = or i1 %1319, %1320
  br i1 %1321, label %originalBB322, label %originalBB322alteredBB

originalBB322:                                    ; preds = %1313, %originalBB322alteredBB
  %1322 = load i32, i32* %27, align 4, !dbg !3986
  %1323 = load i32*, i32** %17, align 8, !dbg !3988
  store i32 %1322, i32* %1323, align 4, !dbg !3989
  %1324 = load i32*, i32** %18, align 8, !dbg !3990
  %1325 = icmp ne i32* %1324, null, !dbg !3990
  %1326 = load i32, i32* @x.55
  %1327 = load i32, i32* @y.56
  %1328 = sub i32 %1326, 1
  %1329 = mul i32 %1326, %1328
  %1330 = urem i32 %1329, 2
  %1331 = icmp eq i32 %1330, 0
  %1332 = icmp slt i32 %1327, 10
  %1333 = or i1 %1331, %1332
  br i1 %1333, label %originalBBpart2324, label %originalBB322alteredBB

originalBBpart2324:                               ; preds = %originalBB322
  br i1 %1325, label %1334, label %1353, !dbg !3992

1334:                                             ; preds = %originalBBpart2324
  %1335 = load i32, i32* @x.55
  %1336 = load i32, i32* @y.56
  %1337 = sub i32 %1335, 1
  %1338 = mul i32 %1335, %1337
  %1339 = urem i32 %1338, 2
  %1340 = icmp eq i32 %1339, 0
  %1341 = icmp slt i32 %1336, 10
  %1342 = or i1 %1340, %1341
  br i1 %1342, label %originalBB326, label %originalBB326alteredBB

originalBB326:                                    ; preds = %1334, %originalBB326alteredBB
  %1343 = load i32, i32* %28, align 4, !dbg !3993
  %1344 = load i32*, i32** %18, align 8, !dbg !3994
  store i32 %1343, i32* %1344, align 4, !dbg !3995
  %1345 = load i32, i32* @x.55
  %1346 = load i32, i32* @y.56
  %1347 = sub i32 %1345, 1
  %1348 = mul i32 %1345, %1347
  %1349 = urem i32 %1348, 2
  %1350 = icmp eq i32 %1349, 0
  %1351 = icmp slt i32 %1346, 10
  %1352 = or i1 %1350, %1351
  br i1 %1352, label %originalBBpart2328, label %originalBB326alteredBB

originalBBpart2328:                               ; preds = %originalBB326
  br label %1353, !dbg !3996

1353:                                             ; preds = %originalBBpart2328, %originalBBpart2324
  %1354 = load i32, i32* @x.55
  %1355 = load i32, i32* @y.56
  %1356 = sub i32 %1354, 1
  %1357 = mul i32 %1354, %1356
  %1358 = urem i32 %1357, 2
  %1359 = icmp eq i32 %1358, 0
  %1360 = icmp slt i32 %1355, 10
  %1361 = or i1 %1359, %1360
  br i1 %1361, label %originalBB330, label %originalBB330alteredBB

originalBB330:                                    ; preds = %1353, %originalBB330alteredBB
  %1362 = load i8**, i8*** %19, align 8, !dbg !3997
  %1363 = icmp ne i8** %1362, null, !dbg !3997
  %1364 = load i32, i32* @x.55
  %1365 = load i32, i32* @y.56
  %1366 = sub i32 %1364, 1
  %1367 = mul i32 %1364, %1366
  %1368 = urem i32 %1367, 2
  %1369 = icmp eq i32 %1368, 0
  %1370 = icmp slt i32 %1365, 10
  %1371 = or i1 %1369, %1370
  br i1 %1371, label %originalBBpart2332, label %originalBB330alteredBB

originalBBpart2332:                               ; preds = %originalBB330
  br i1 %1363, label %1372, label %1391, !dbg !3999

1372:                                             ; preds = %originalBBpart2332
  %1373 = load i32, i32* @x.55
  %1374 = load i32, i32* @y.56
  %1375 = sub i32 %1373, 1
  %1376 = mul i32 %1373, %1375
  %1377 = urem i32 %1376, 2
  %1378 = icmp eq i32 %1377, 0
  %1379 = icmp slt i32 %1374, 10
  %1380 = or i1 %1378, %1379
  br i1 %1380, label %originalBB334, label %originalBB334alteredBB

originalBB334:                                    ; preds = %1372, %originalBB334alteredBB
  %1381 = load i8*, i8** %24, align 8, !dbg !4000
  %1382 = load i8**, i8*** %19, align 8, !dbg !4002
  store i8* %1381, i8** %1382, align 8, !dbg !4003
  store i8* null, i8** %24, align 8, !dbg !4004
  %1383 = load i32, i32* @x.55
  %1384 = load i32, i32* @y.56
  %1385 = sub i32 %1383, 1
  %1386 = mul i32 %1383, %1385
  %1387 = urem i32 %1386, 2
  %1388 = icmp eq i32 %1387, 0
  %1389 = icmp slt i32 %1384, 10
  %1390 = or i1 %1388, %1389
  br i1 %1390, label %originalBBpart2336, label %originalBB334alteredBB

originalBBpart2336:                               ; preds = %originalBB334
  br label %1391, !dbg !4005

1391:                                             ; preds = %originalBBpart2336, %originalBBpart2332
  %1392 = load i32, i32* @x.55
  %1393 = load i32, i32* @y.56
  %1394 = sub i32 %1392, 1
  %1395 = mul i32 %1392, %1394
  %1396 = urem i32 %1395, 2
  %1397 = icmp eq i32 %1396, 0
  %1398 = icmp slt i32 %1393, 10
  %1399 = or i1 %1397, %1398
  br i1 %1399, label %originalBB338, label %originalBB338alteredBB

originalBB338:                                    ; preds = %1391, %originalBB338alteredBB
  %1400 = load i8**, i8*** %20, align 8, !dbg !4006
  %1401 = icmp ne i8** %1400, null, !dbg !4006
  %1402 = load i32, i32* @x.55
  %1403 = load i32, i32* @y.56
  %1404 = sub i32 %1402, 1
  %1405 = mul i32 %1402, %1404
  %1406 = urem i32 %1405, 2
  %1407 = icmp eq i32 %1406, 0
  %1408 = icmp slt i32 %1403, 10
  %1409 = or i1 %1407, %1408
  br i1 %1409, label %originalBBpart2340, label %originalBB338alteredBB

originalBBpart2340:                               ; preds = %originalBB338
  br i1 %1401, label %1410, label %1429, !dbg !4008

1410:                                             ; preds = %originalBBpart2340
  %1411 = load i32, i32* @x.55
  %1412 = load i32, i32* @y.56
  %1413 = sub i32 %1411, 1
  %1414 = mul i32 %1411, %1413
  %1415 = urem i32 %1414, 2
  %1416 = icmp eq i32 %1415, 0
  %1417 = icmp slt i32 %1412, 10
  %1418 = or i1 %1416, %1417
  br i1 %1418, label %originalBB342, label %originalBB342alteredBB

originalBB342:                                    ; preds = %1410, %originalBB342alteredBB
  %1419 = load i8*, i8** %26, align 8, !dbg !4009
  %1420 = load i8**, i8*** %20, align 8, !dbg !4011
  store i8* %1419, i8** %1420, align 8, !dbg !4012
  store i8* null, i8** %26, align 8, !dbg !4013
  %1421 = load i32, i32* @x.55
  %1422 = load i32, i32* @y.56
  %1423 = sub i32 %1421, 1
  %1424 = mul i32 %1421, %1423
  %1425 = urem i32 %1424, 2
  %1426 = icmp eq i32 %1425, 0
  %1427 = icmp slt i32 %1422, 10
  %1428 = or i1 %1426, %1427
  br i1 %1428, label %originalBBpart2344, label %originalBB342alteredBB

originalBBpart2344:                               ; preds = %originalBB342
  br label %1429, !dbg !4014

1429:                                             ; preds = %originalBBpart2344, %originalBBpart2340
  %1430 = load i32, i32* @x.55
  %1431 = load i32, i32* @y.56
  %1432 = sub i32 %1430, 1
  %1433 = mul i32 %1430, %1432
  %1434 = urem i32 %1433, 2
  %1435 = icmp eq i32 %1434, 0
  %1436 = icmp slt i32 %1431, 10
  %1437 = or i1 %1435, %1436
  br i1 %1437, label %originalBB346, label %originalBB346alteredBB

originalBB346:                                    ; preds = %1429, %originalBB346alteredBB
  %1438 = load i32, i32* @x.55
  %1439 = load i32, i32* @y.56
  %1440 = sub i32 %1438, 1
  %1441 = mul i32 %1438, %1440
  %1442 = urem i32 %1441, 2
  %1443 = icmp eq i32 %1442, 0
  %1444 = icmp slt i32 %1439, 10
  %1445 = or i1 %1443, %1444
  br i1 %1445, label %originalBBpart2348, label %originalBB346alteredBB

originalBBpart2348:                               ; preds = %originalBB346
  br label %1446, !dbg !4015

1446:                                             ; preds = %originalBBpart2348, %originalBBpart2320
  %1447 = load i32, i32* @x.55
  %1448 = load i32, i32* @y.56
  %1449 = sub i32 %1447, 1
  %1450 = mul i32 %1447, %1449
  %1451 = urem i32 %1450, 2
  %1452 = icmp eq i32 %1451, 0
  %1453 = icmp slt i32 %1448, 10
  %1454 = or i1 %1452, %1453
  br i1 %1454, label %originalBB350, label %originalBB350alteredBB

originalBB350:                                    ; preds = %1446, %originalBB350alteredBB
  %1455 = load i8*, i8** %24, align 8, !dbg !4016
  call void @free(i8* %1455) #10, !dbg !4017
  %1456 = load i8*, i8** %26, align 8, !dbg !4018
  call void @free(i8* %1456) #10, !dbg !4019
  %1457 = load i8*, i8** %21, align 8, !dbg !4020
  %1458 = icmp ne i8* %1457, null, !dbg !4020
  %1459 = load i32, i32* @x.55
  %1460 = load i32, i32* @y.56
  %1461 = sub i32 %1459, 1
  %1462 = mul i32 %1459, %1461
  %1463 = urem i32 %1462, 2
  %1464 = icmp eq i32 %1463, 0
  %1465 = icmp slt i32 %1460, 10
  %1466 = or i1 %1464, %1465
  br i1 %1466, label %originalBBpart2352, label %originalBB350alteredBB

originalBBpart2352:                               ; preds = %originalBB350
  br i1 %1458, label %1467, label %1486, !dbg !4020

1467:                                             ; preds = %originalBBpart2352
  %1468 = load i32, i32* @x.55
  %1469 = load i32, i32* @y.56
  %1470 = sub i32 %1468, 1
  %1471 = mul i32 %1468, %1470
  %1472 = urem i32 %1471, 2
  %1473 = icmp eq i32 %1472, 0
  %1474 = icmp slt i32 %1469, 10
  %1475 = or i1 %1473, %1474
  br i1 %1475, label %originalBB354, label %originalBB354alteredBB

originalBB354:                                    ; preds = %1467, %originalBB354alteredBB
  %1476 = load i8*, i8** %21, align 8, !dbg !4021
  %1477 = call i8* @gettext(i8* %1476) #10, !dbg !4021
  %1478 = load i32, i32* @x.55
  %1479 = load i32, i32* @y.56
  %1480 = sub i32 %1478, 1
  %1481 = mul i32 %1478, %1480
  %1482 = urem i32 %1481, 2
  %1483 = icmp eq i32 %1482, 0
  %1484 = icmp slt i32 %1479, 10
  %1485 = or i1 %1483, %1484
  br i1 %1485, label %originalBBpart2356, label %originalBB354alteredBB

originalBBpart2356:                               ; preds = %originalBB354
  br label %1503, !dbg !4020

1486:                                             ; preds = %originalBBpart2352
  %1487 = load i32, i32* @x.55
  %1488 = load i32, i32* @y.56
  %1489 = sub i32 %1487, 1
  %1490 = mul i32 %1487, %1489
  %1491 = urem i32 %1490, 2
  %1492 = icmp eq i32 %1491, 0
  %1493 = icmp slt i32 %1488, 10
  %1494 = or i1 %1492, %1493
  br i1 %1494, label %originalBB358, label %originalBB358alteredBB

originalBB358:                                    ; preds = %1486, %originalBB358alteredBB
  %1495 = load i32, i32* @x.55
  %1496 = load i32, i32* @y.56
  %1497 = sub i32 %1495, 1
  %1498 = mul i32 %1495, %1497
  %1499 = urem i32 %1498, 2
  %1500 = icmp eq i32 %1499, 0
  %1501 = icmp slt i32 %1496, 10
  %1502 = or i1 %1500, %1501
  br i1 %1502, label %originalBBpart2360, label %originalBB358alteredBB

originalBBpart2360:                               ; preds = %originalBB358
  br label %1503, !dbg !4020

1503:                                             ; preds = %originalBBpart2360, %originalBBpart2356
  %1504 = phi i8* [ %1477, %originalBBpart2356 ], [ null, %originalBBpart2360 ], !dbg !4020
  %1505 = load i32, i32* @x.55
  %1506 = load i32, i32* @y.56
  %1507 = sub i32 %1505, 1
  %1508 = mul i32 %1505, %1507
  %1509 = urem i32 %1508, 2
  %1510 = icmp eq i32 %1509, 0
  %1511 = icmp slt i32 %1506, 10
  %1512 = or i1 %1510, %1511
  br i1 %1512, label %originalBB362, label %originalBB362alteredBB

originalBB362:                                    ; preds = %1503, %originalBB362alteredBB
  %1513 = load i32, i32* @x.55
  %1514 = load i32, i32* @y.56
  %1515 = sub i32 %1513, 1
  %1516 = mul i32 %1513, %1515
  %1517 = urem i32 %1516, 2
  %1518 = icmp eq i32 %1517, 0
  %1519 = icmp slt i32 %1514, 10
  %1520 = or i1 %1518, %1519
  br i1 %1520, label %originalBBpart2364, label %originalBB362alteredBB

originalBBpart2364:                               ; preds = %originalBB362
  ret i8* %1504, !dbg !4022

originalBBalteredBB:                              ; preds = %originalBB, %6
  %1521 = alloca i8*, align 8
  %1522 = alloca i8*, align 8
  %1523 = alloca i32*, align 8
  %1524 = alloca i32*, align 8
  %1525 = alloca i8**, align 8
  %1526 = alloca i8**, align 8
  %1527 = alloca i8*, align 8
  %1528 = alloca %struct.passwd*, align 8
  %1529 = alloca %struct.group*, align 8
  %1530 = alloca i8*, align 8
  %1531 = alloca i8*, align 8
  %1532 = alloca i8*, align 8
  %1533 = alloca i32, align 4
  %1534 = alloca i32, align 4
  %1535 = alloca i64, align 8
  %1536 = alloca i8, align 1
  %1537 = alloca i64, align 8
  %1538 = alloca [21 x i8], align 16
  %1539 = alloca i64, align 8
  store i8* %0, i8** %1521, align 8
  call void @llvm.dbg.declare(metadata i8** %1521, metadata !4023, metadata !DIExpression()), !dbg !3744
  store i8* %1, i8** %1522, align 8
  call void @llvm.dbg.declare(metadata i8** %1522, metadata !4033, metadata !DIExpression()), !dbg !3746
  store i32* %2, i32** %1523, align 8
  call void @llvm.dbg.declare(metadata i32** %1523, metadata !4034, metadata !DIExpression()), !dbg !3748
  store i32* %3, i32** %1524, align 8
  call void @llvm.dbg.declare(metadata i32** %1524, metadata !4035, metadata !DIExpression()), !dbg !3750
  store i8** %4, i8*** %1525, align 8
  call void @llvm.dbg.declare(metadata i8*** %1525, metadata !4036, metadata !DIExpression()), !dbg !3752
  store i8** %5, i8*** %1526, align 8
  call void @llvm.dbg.declare(metadata i8*** %1526, metadata !4037, metadata !DIExpression()), !dbg !3754
  call void @llvm.dbg.declare(metadata i8** %1527, metadata !4038, metadata !DIExpression()), !dbg !3756
  call void @llvm.dbg.declare(metadata %struct.passwd** %1528, metadata !4039, metadata !DIExpression()), !dbg !3768
  call void @llvm.dbg.declare(metadata %struct.group** %1529, metadata !4050, metadata !DIExpression()), !dbg !3777
  call void @llvm.dbg.declare(metadata i8** %1530, metadata !4058, metadata !DIExpression()), !dbg !3779
  call void @llvm.dbg.declare(metadata i8** %1531, metadata !4059, metadata !DIExpression()), !dbg !3781
  call void @llvm.dbg.declare(metadata i8** %1532, metadata !4060, metadata !DIExpression()), !dbg !3783
  store i8* null, i8** %1532, align 8, !dbg !3783
  call void @llvm.dbg.declare(metadata i32* %1533, metadata !4061, metadata !DIExpression()), !dbg !3785
  %1540 = load i32*, i32** %1523, align 8, !dbg !3786
  %1541 = load i32, i32* %1540, align 4, !dbg !3787
  store i32 %1541, i32* %1533, align 4, !dbg !3785
  call void @llvm.dbg.declare(metadata i32* %1534, metadata !4062, metadata !DIExpression()), !dbg !3789
  %1542 = load i32*, i32** %1524, align 8, !dbg !3790
  %1543 = icmp ne i32* %1542, null, !dbg !3790
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %46
  %1544 = load i32*, i32** %18, align 8, !dbg !3791
  %1545 = load i32, i32* %1544, align 4, !dbg !3792
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %65
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %82
  store i32 %83, i32* %28, align 4, !dbg !3789
  store i8* null, i8** %21, align 8, !dbg !3793
  %1546 = load i8**, i8*** %19, align 8, !dbg !3794
  %1547 = icmp ne i8** %1546, null, !dbg !3794
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %102
  %1548 = load i8**, i8*** %19, align 8, !dbg !3797
  store i8* null, i8** %1548, align 8, !dbg !3798
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %120
  %1549 = load i8**, i8*** %20, align 8, !dbg !3800
  %1550 = icmp ne i8** %1549, null, !dbg !3800
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %139
  %1551 = load i8**, i8*** %20, align 8, !dbg !3803
  store i8* null, i8** %1551, align 8, !dbg !3804
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %157
  store i8* null, i8** %24, align 8, !dbg !3806
  %1552 = load i8*, i8** %16, align 8, !dbg !3807
  %1553 = icmp eq i8* %1552, null, !dbg !3809
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %176
  %1554 = load i8*, i8** %15, align 8, !dbg !3811
  %1555 = load i8, i8* %1554, align 1, !dbg !3814
  %1556 = icmp ne i8 %1555, 0, !dbg !3814
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %196
  %1557 = load i8*, i8** %15, align 8, !dbg !3816
  %1558 = call noalias i8* @xstrdup(i8* %1557), !dbg !3817
  store i8* %1558, i8** %24, align 8, !dbg !3818
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %215
  br label %originalBB38

originalBB42alteredBB:                            ; preds = %originalBB42, %232
  %1559 = load i8*, i8** %16, align 8, !dbg !3824
  %1560 = load i8*, i8** %15, align 8, !dbg !3825
  %1561 = ptrtoint i8* %1559 to i64, !dbg !3826
  %1562 = ptrtoint i8* %1560 to i64, !dbg !3826
  %_ = sub i64 0, %1561
  %gen = add i64 %_, %1562
  %_43 = sub i64 0, %1561
  %gen44 = add i64 %_43, %1562
  %_45 = sub i64 0, %1561
  %gen46 = add i64 %_45, %1562
  %_47 = shl i64 %1561, %1562
  %_48 = shl i64 %1561, %1562
  %_49 = shl i64 %1561, %1562
  %_50 = shl i64 %1561, %1562
  %_51 = sub i64 %1561, %1562
  %gen52 = mul i64 %_51, %1562
  %1563 = sub i64 %1561, %1562, !dbg !3826
  store i64 %1563, i64* %29, align 8, !dbg !3823
  %1564 = load i64, i64* %29, align 8, !dbg !3827
  %1565 = icmp ne i64 %1564, 0, !dbg !3829
  br label %originalBB42

originalBB56alteredBB:                            ; preds = %originalBB56, %256
  %1566 = load i8*, i8** %15, align 8, !dbg !3831
  %1567 = load i64, i64* %29, align 8, !dbg !3833
  %_57 = sub i64 0, %1567
  %gen58 = add i64 %_57, 1
  %_59 = shl i64 %1567, 1
  %1568 = add i64 %1567, 1, !dbg !3834
  %1569 = call i8* @xmemdup(i8* %1566, i64 %1568), !dbg !3835
  store i8* %1569, i8** %24, align 8, !dbg !3836
  %1570 = load i8*, i8** %24, align 8, !dbg !3837
  %1571 = load i64, i64* %29, align 8, !dbg !3838
  %1572 = getelementptr inbounds i8, i8* %1570, i64 %1571, !dbg !3837
  store i8 0, i8* %1572, align 1, !dbg !3839
  br label %originalBB56

originalBB63alteredBB:                            ; preds = %originalBB63, %280
  br label %originalBB63

originalBB67alteredBB:                            ; preds = %originalBB67, %297
  %1573 = load i8*, i8** %16, align 8, !dbg !3841
  %1574 = icmp eq i8* %1573, null, !dbg !3842
  br label %originalBB67

originalBB71alteredBB:                            ; preds = %originalBB71, %316
  %1575 = load i8*, i8** %16, align 8, !dbg !3844
  %1576 = getelementptr inbounds i8, i8* %1575, i64 1, !dbg !3845
  %1577 = load i8, i8* %1576, align 1, !dbg !3846
  %1578 = sext i8 %1577 to i32, !dbg !3846
  %1579 = icmp eq i32 %1578, 0, !dbg !3847
  br label %originalBB71

originalBB75alteredBB:                            ; preds = %originalBB75, %338
  br label %originalBB75

originalBB79alteredBB:                            ; preds = %originalBB79, %355
  %1580 = load i8*, i8** %16, align 8, !dbg !3848
  %1581 = getelementptr inbounds i8, i8* %1580, i64 1, !dbg !3849
  br label %originalBB79

originalBB83alteredBB:                            ; preds = %originalBB83, %374
  store i8* %375, i8** %25, align 8, !dbg !3850
  %1582 = load i8*, i8** %24, align 8, !dbg !3851
  %1583 = icmp ne i8* %1582, null, !dbg !3853
  br label %originalBB83

originalBB87alteredBB:                            ; preds = %originalBB87, %394
  %1584 = load i8*, i8** %24, align 8, !dbg !3855
  %1585 = load i8, i8* %1584, align 1, !dbg !3857
  %1586 = sext i8 %1585 to i32, !dbg !3857
  br label %originalBB87

originalBB91alteredBB:                            ; preds = %originalBB91, %414
  %collatzVaralteredBB = alloca i32
  br label %originalBB91

originalBB95alteredBB:                            ; preds = %originalBB95, %431
  %1587 = load i32, i32* @inVal0
  %1588 = icmp sgt i32 %1587, 1
  br label %originalBB95

originalBB99alteredBB:                            ; preds = %originalBB99, %450
  store i32 82, i32* %collatzVar
  br label %originalBB99

originalBB103alteredBB:                           ; preds = %originalBB103, %467
  %1589 = load i8**, i8*** @inVal1
  %1590 = getelementptr inbounds i8*, i8** %1589, i64 1
  %1591 = load i8*, i8** %1590
  %controlealteredBB = call i32 @controle(i8* %1591, i32 43)
  store i32 %controlealteredBB, i32* %collatzVar
  br label %originalBB103

originalBB107alteredBB:                           ; preds = %originalBB107, %487
  %1592 = load i32, i32* %collatzVar
  %1593 = icmp sgt i32 %1592, 1
  br label %originalBB107

originalBB111alteredBB:                           ; preds = %originalBB111, %506
  %1594 = load i32, i32* %collatzVar
  %_112 = sub i32 %1594, 2
  %gen113 = mul i32 %_112, 2
  %_114 = sub i32 0, %1594
  %gen115 = add i32 %_114, 2
  %_116 = sub i32 0, %1594
  %gen117 = add i32 %_116, 2
  %1595 = srem i32 %1594, 2
  %1596 = icmp eq i32 %1595, 0
  br label %originalBB111

originalBB121alteredBB:                           ; preds = %originalBB121, %526
  %1597 = load i32, i32* %collatzVar
  %_122 = shl i32 %1597, 2
  %_123 = sub i32 0, %1597
  %gen124 = add i32 %_123, 2
  %_125 = sub i32 0, %1597
  %gen126 = add i32 %_125, 2
  %_127 = sub i32 %1597, 2
  %gen128 = mul i32 %_127, 2
  %_129 = shl i32 %1597, 2
  %1598 = sdiv i32 %1597, 2
  store i32 %1598, i32* %collatzVar
  br label %originalBB121

originalBB133alteredBB:                           ; preds = %originalBB133, %545
  %1599 = load i32, i32* %collatzVar
  %_134 = shl i32 %1599, 3
  %_135 = sub i32 %1599, 3
  %gen136 = mul i32 %_135, 3
  %_137 = sub i32 0, %1599
  %gen138 = add i32 %_137, 3
  %_139 = sub i32 %1599, 3
  %gen140 = mul i32 %_139, 3
  %_141 = sub i32 0, %1599
  %gen142 = add i32 %_141, 3
  %_143 = sub i32 0, %1599
  %gen144 = add i32 %_143, 3
  %1600 = mul i32 %1599, 3
  %1601 = add i32 %1600, 1
  store i32 %1601, i32* %collatzVar
  br label %originalBB133

originalBB148alteredBB:                           ; preds = %originalBB148, %565
  %1602 = load i32, i32* %collatzVar
  %_149 = sub i32 0, %405
  %gen150 = add i32 %_149, %1602
  %_151 = shl i32 %405, %1602
  %_152 = sub i32 0, %405
  %gen153 = add i32 %_152, %1602
  %1603 = sub i32 %405, %1602
  %1604 = icmp sgt i32 %1603, 41
  br label %originalBB148

originalBB157alteredBB:                           ; preds = %originalBB157, %585
  %1605 = load i32, i32* %collatzVar
  %_158 = sub i32 0, %405
  %gen159 = add i32 %_158, %1605
  %_160 = sub i32 0, %405
  %gen161 = add i32 %_160, %1605
  %_162 = sub i32 %405, %1605
  %gen163 = mul i32 %_162, %1605
  %_164 = sub i32 0, %405
  %gen165 = add i32 %_164, %1605
  %_166 = sub i32 %405, %1605
  %gen167 = mul i32 %_166, %1605
  %_168 = shl i32 %405, %1605
  %_169 = shl i32 %405, %1605
  %1606 = add i32 %405, %1605
  %1607 = icmp slt i32 %1606, 45
  br label %originalBB157

originalBB173alteredBB:                           ; preds = %originalBB173, %605
  br label %originalBB173

originalBB177alteredBB:                           ; preds = %originalBB177, %622
  %1608 = load i8*, i8** %24, align 8, !dbg !3859
  %1609 = call %struct.passwd* @getpwnam(i8* %1608), !dbg !3860
  br label %originalBB177

originalBB181alteredBB:                           ; preds = %originalBB181, %641
  store %struct.passwd* %642, %struct.passwd** %22, align 8, !dbg !3861
  %1610 = load %struct.passwd*, %struct.passwd** %22, align 8, !dbg !3862
  %1611 = icmp eq %struct.passwd* %1610, null, !dbg !3864
  br label %originalBB181

originalBB185alteredBB:                           ; preds = %originalBB185, %661
  %1612 = load i8*, i8** %16, align 8, !dbg !3869
  %1613 = icmp ne i8* %1612, null, !dbg !3870
  br label %originalBB185

originalBB189alteredBB:                           ; preds = %originalBB189, %680
  %1614 = load i8*, i8** %25, align 8, !dbg !3872
  %1615 = icmp eq i8* %1614, null, !dbg !3873
  br label %originalBB189

originalBB193alteredBB:                           ; preds = %originalBB193, %699
  %1616 = zext i1 %700 to i8, !dbg !3868
  store i8 %1616, i8* %30, align 1, !dbg !3868
  %1617 = load i8, i8* %30, align 1, !dbg !3875
  %1618 = trunc i8 %1617 to i1, !dbg !3875
  br label %originalBB193

originalBB197alteredBB:                           ; preds = %originalBB197, %720
  %1619 = load i8*, i8** @parse_with_separator.E_bad_spec, align 8, !dbg !3878
  store i8* %1619, i8** %21, align 8, !dbg !3880
  br label %originalBB197

originalBB201alteredBB:                           ; preds = %originalBB201, %738
  %1620 = load i8*, i8** %24, align 8, !dbg !3885
  %1621 = call i32 @xstrtoul(i8* %1620, i8** null, i32 10, i64* %31, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3.102, i64 0, i64 0)), !dbg !3887
  %1622 = icmp eq i32 %1621, 0, !dbg !3888
  br label %originalBB201

originalBB205alteredBB:                           ; preds = %originalBB205, %758
  %1623 = load i64, i64* %31, align 8, !dbg !3890
  %1624 = icmp ule i64 %1623, 4294967295, !dbg !3891
  br label %originalBB205

originalBB209alteredBB:                           ; preds = %originalBB209, %777
  %1625 = load i64, i64* %31, align 8, !dbg !3893
  %1626 = trunc i64 %1625 to i32, !dbg !3894
  %1627 = icmp ne i32 %1626, -1, !dbg !3895
  br label %originalBB209

originalBB213alteredBB:                           ; preds = %originalBB213, %797
  %1628 = load i64, i64* %31, align 8, !dbg !3897
  %1629 = trunc i64 %1628 to i32, !dbg !3897
  store i32 %1629, i32* %27, align 4, !dbg !3898
  br label %originalBB213

originalBB217alteredBB:                           ; preds = %originalBB217, %816
  %1630 = load i8*, i8** @parse_with_separator.E_invalid_user, align 8, !dbg !3900
  store i8* %1630, i8** %21, align 8, !dbg !3901
  br label %originalBB217

originalBB221alteredBB:                           ; preds = %originalBB221, %834
  br label %originalBB221

originalBB225alteredBB:                           ; preds = %originalBB225, %851
  br label %originalBB225

originalBB229alteredBB:                           ; preds = %originalBB229, %868
  %1631 = load %struct.passwd*, %struct.passwd** %22, align 8, !dbg !3903
  %1632 = getelementptr inbounds %struct.passwd, %struct.passwd* %1631, i32 0, i32 2, !dbg !3905
  %1633 = load i32, i32* %1632, align 8, !dbg !3905
  store i32 %1633, i32* %27, align 4, !dbg !3906
  %1634 = load i8*, i8** %25, align 8, !dbg !3907
  %1635 = icmp eq i8* %1634, null, !dbg !3909
  br label %originalBB229

originalBB233alteredBB:                           ; preds = %originalBB233, %890
  %1636 = load i8*, i8** %16, align 8, !dbg !3911
  %1637 = icmp ne i8* %1636, null, !dbg !3912
  br label %originalBB233

originalBB237alteredBB:                           ; preds = %originalBB237, %909
  %1638 = load %struct.passwd*, %struct.passwd** %22, align 8, !dbg !3917
  %1639 = getelementptr inbounds %struct.passwd, %struct.passwd* %1638, i32 0, i32 3, !dbg !3918
  %1640 = load i32, i32* %1639, align 4, !dbg !3918
  store i32 %1640, i32* %28, align 4, !dbg !3919
  %1641 = load i32, i32* %28, align 4, !dbg !3920
  %1642 = call %struct.group* @getgrgid(i32 %1641), !dbg !3921
  store %struct.group* %1642, %struct.group** %23, align 8, !dbg !3922
  %1643 = load %struct.group*, %struct.group** %23, align 8, !dbg !3923
  %1644 = icmp ne %struct.group* %1643, null, !dbg !3923
  br label %originalBB237

originalBB241alteredBB:                           ; preds = %originalBB241, %933
  %1645 = load %struct.group*, %struct.group** %23, align 8, !dbg !3924
  %1646 = getelementptr inbounds %struct.group, %struct.group* %1645, i32 0, i32 0, !dbg !3925
  %1647 = load i8*, i8** %1646, align 8, !dbg !3925
  br label %originalBB241

originalBB245alteredBB:                           ; preds = %originalBB245, %953
  %1648 = load i32, i32* %28, align 4, !dbg !3926
  %1649 = zext i32 %1648 to i64, !dbg !3926
  %1650 = getelementptr inbounds [21 x i8], [21 x i8]* %32, i64 0, i64 0, !dbg !3927
  %1651 = call i8* @umaxtostr(i64 %1649, i8* %1650), !dbg !3928
  br label %originalBB245

originalBB249alteredBB:                           ; preds = %originalBB249, %974
  %1652 = call noalias i8* @xstrdup(i8* %975), !dbg !3929
  store i8* %1652, i8** %26, align 8, !dbg !3930
  call void @endgrent(), !dbg !3931
  br label %originalBB249

originalBB253alteredBB:                           ; preds = %originalBB253, %993
  br label %originalBB253

originalBB257alteredBB:                           ; preds = %originalBB257, %1010
  call void @endpwent(), !dbg !3933
  br label %originalBB257

originalBB261alteredBB:                           ; preds = %originalBB261, %1027
  %1653 = load i8*, i8** %25, align 8, !dbg !3935
  %1654 = icmp ne i8* %1653, null, !dbg !3937
  br label %originalBB261

originalBB266alteredBB:                           ; preds = %originalBB266, %1046
  %1655 = load i8*, i8** %21, align 8, !dbg !3939
  %1656 = icmp eq i8* %1655, null, !dbg !3940
  br label %originalBB266

originalBB270alteredBB:                           ; preds = %originalBB270, %1065
  %1657 = load i8*, i8** %25, align 8, !dbg !3942
  %1658 = load i8, i8* %1657, align 1, !dbg !3944
  %1659 = sext i8 %1658 to i32, !dbg !3944
  %1660 = icmp eq i32 %1659, 43, !dbg !3945
  br label %originalBB270

originalBB274alteredBB:                           ; preds = %originalBB274, %1086
  br label %originalBB274

originalBB278alteredBB:                           ; preds = %originalBB278, %1103
  %1661 = load i8*, i8** %25, align 8, !dbg !3946
  %1662 = call %struct.group* @getgrnam(i8* %1661), !dbg !3947
  br label %originalBB278

originalBB282alteredBB:                           ; preds = %originalBB282, %1122
  store %struct.group* %1123, %struct.group** %23, align 8, !dbg !3948
  %1663 = load %struct.group*, %struct.group** %23, align 8, !dbg !3949
  %1664 = icmp eq %struct.group* %1663, null, !dbg !3951
  br label %originalBB282

originalBB286alteredBB:                           ; preds = %originalBB286, %1142
  %1665 = load i8*, i8** %25, align 8, !dbg !3956
  %1666 = call i32 @xstrtoul(i8* %1665, i8** null, i32 10, i64* %33, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3.102, i64 0, i64 0)), !dbg !3958
  %1667 = icmp eq i32 %1666, 0, !dbg !3959
  br label %originalBB286

originalBB290alteredBB:                           ; preds = %originalBB290, %1162
  %1668 = load i64, i64* %33, align 8, !dbg !3961
  %1669 = icmp ule i64 %1668, 4294967295, !dbg !3962
  br label %originalBB290

originalBB294alteredBB:                           ; preds = %originalBB294, %1181
  %1670 = load i64, i64* %33, align 8, !dbg !3964
  %1671 = trunc i64 %1670 to i32, !dbg !3965
  %1672 = icmp ne i32 %1671, -1, !dbg !3966
  br label %originalBB294

originalBB298alteredBB:                           ; preds = %originalBB298, %1201
  %1673 = load i64, i64* %33, align 8, !dbg !3968
  %1674 = trunc i64 %1673 to i32, !dbg !3968
  store i32 %1674, i32* %28, align 4, !dbg !3969
  br label %originalBB298

originalBB302alteredBB:                           ; preds = %originalBB302, %1220
  %1675 = load i8*, i8** @parse_with_separator.E_invalid_group, align 8, !dbg !3971
  store i8* %1675, i8** %21, align 8, !dbg !3972
  br label %originalBB302

originalBB306alteredBB:                           ; preds = %originalBB306, %1238
  br label %originalBB306

originalBB310alteredBB:                           ; preds = %originalBB310, %1255
  %1676 = load %struct.group*, %struct.group** %23, align 8, !dbg !3974
  %1677 = getelementptr inbounds %struct.group, %struct.group* %1676, i32 0, i32 2, !dbg !3975
  %1678 = load i32, i32* %1677, align 8, !dbg !3975
  store i32 %1678, i32* %28, align 4, !dbg !3976
  br label %originalBB310

originalBB314alteredBB:                           ; preds = %originalBB314, %1275
  call void @endgrent(), !dbg !3977
  %1679 = load i8*, i8** %25, align 8, !dbg !3978
  %1680 = call noalias i8* @xstrdup(i8* %1679), !dbg !3979
  store i8* %1680, i8** %26, align 8, !dbg !3980
  br label %originalBB314

originalBB318alteredBB:                           ; preds = %originalBB318, %1294
  %1681 = load i8*, i8** %21, align 8, !dbg !3982
  %1682 = icmp eq i8* %1681, null, !dbg !3984
  br label %originalBB318

originalBB322alteredBB:                           ; preds = %originalBB322, %1313
  %1683 = load i32, i32* %27, align 4, !dbg !3986
  %1684 = load i32*, i32** %17, align 8, !dbg !3988
  store i32 %1683, i32* %1684, align 4, !dbg !3989
  %1685 = load i32*, i32** %18, align 8, !dbg !3990
  %1686 = icmp ne i32* %1685, null, !dbg !3990
  br label %originalBB322

originalBB326alteredBB:                           ; preds = %originalBB326, %1334
  %1687 = load i32, i32* %28, align 4, !dbg !3993
  %1688 = load i32*, i32** %18, align 8, !dbg !3994
  store i32 %1687, i32* %1688, align 4, !dbg !3995
  br label %originalBB326

originalBB330alteredBB:                           ; preds = %originalBB330, %1353
  %1689 = load i8**, i8*** %19, align 8, !dbg !3997
  %1690 = icmp ne i8** %1689, null, !dbg !3997
  br label %originalBB330

originalBB334alteredBB:                           ; preds = %originalBB334, %1372
  %1691 = load i8*, i8** %24, align 8, !dbg !4000
  %1692 = load i8**, i8*** %19, align 8, !dbg !4002
  store i8* %1691, i8** %1692, align 8, !dbg !4003
  store i8* null, i8** %24, align 8, !dbg !4004
  br label %originalBB334

originalBB338alteredBB:                           ; preds = %originalBB338, %1391
  %1693 = load i8**, i8*** %20, align 8, !dbg !4006
  %1694 = icmp ne i8** %1693, null, !dbg !4006
  br label %originalBB338

originalBB342alteredBB:                           ; preds = %originalBB342, %1410
  %1695 = load i8*, i8** %26, align 8, !dbg !4009
  %1696 = load i8**, i8*** %20, align 8, !dbg !4011
  store i8* %1695, i8** %1696, align 8, !dbg !4012
  store i8* null, i8** %26, align 8, !dbg !4013
  br label %originalBB342

originalBB346alteredBB:                           ; preds = %originalBB346, %1429
  br label %originalBB346

originalBB350alteredBB:                           ; preds = %originalBB350, %1446
  %1697 = load i8*, i8** %24, align 8, !dbg !4016
  call void @free(i8* %1697) #10, !dbg !4017
  %1698 = load i8*, i8** %26, align 8, !dbg !4018
  call void @free(i8* %1698) #10, !dbg !4019
  %1699 = load i8*, i8** %21, align 8, !dbg !4020
  %1700 = icmp ne i8* %1699, null, !dbg !4020
  br label %originalBB350

originalBB354alteredBB:                           ; preds = %originalBB354, %1467
  %1701 = load i8*, i8** %21, align 8, !dbg !4021
  %1702 = call i8* @gettext(i8* %1701) #10, !dbg !4021
  br label %originalBB354

originalBB358alteredBB:                           ; preds = %originalBB358, %1486
  br label %originalBB358

originalBB362alteredBB:                           ; preds = %originalBB362, %1503
  br label %originalBB362
}

declare dso_local %struct.passwd* @getpwnam(i8*) #3

declare dso_local void @endgrent() #3

declare dso_local void @endpwent() #3

declare dso_local %struct.group* @getgrnam(i8*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @version_etc_arn(%struct._IO_FILE*, i8*, i8*, i8*, i8**, i64) #4 !dbg !4063 {
  %7 = load i32, i32* @x.57
  %8 = load i32, i32* @y.58
  %9 = sub i32 %7, 1
  %10 = mul i32 %7, %9
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %8, 10
  %14 = or i1 %12, %13
  br i1 %14, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %6, %originalBBalteredBB
  %15 = alloca %struct._IO_FILE*, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i8*, align 8
  %18 = alloca i8*, align 8
  %19 = alloca i8**, align 8
  %20 = alloca i64, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %15, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %15, metadata !4121, metadata !DIExpression()), !dbg !4122
  store i8* %1, i8** %16, align 8
  call void @llvm.dbg.declare(metadata i8** %16, metadata !4123, metadata !DIExpression()), !dbg !4124
  store i8* %2, i8** %17, align 8
  call void @llvm.dbg.declare(metadata i8** %17, metadata !4125, metadata !DIExpression()), !dbg !4126
  store i8* %3, i8** %18, align 8
  call void @llvm.dbg.declare(metadata i8** %18, metadata !4127, metadata !DIExpression()), !dbg !4128
  store i8** %4, i8*** %19, align 8
  call void @llvm.dbg.declare(metadata i8*** %19, metadata !4129, metadata !DIExpression()), !dbg !4130
  store i64 %5, i64* %20, align 8
  call void @llvm.dbg.declare(metadata i64* %20, metadata !4131, metadata !DIExpression()), !dbg !4132
  %21 = load i8*, i8** %16, align 8, !dbg !4133
  %22 = icmp ne i8* %21, null, !dbg !4133
  %23 = load i32, i32* @x.57
  %24 = load i32, i32* @y.58
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %22, label %31, label %53, !dbg !4135

31:                                               ; preds = %originalBBpart2
  %32 = load i32, i32* @x.57
  %33 = load i32, i32* @y.58
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %31, %originalBB1alteredBB
  %40 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !4136
  %41 = load i8*, i8** %16, align 8, !dbg !4137
  %42 = load i8*, i8** %17, align 8, !dbg !4138
  %43 = load i8*, i8** %18, align 8, !dbg !4139
  %44 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %40, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.106, i64 0, i64 0), i8* %41, i8* %42, i8* %43), !dbg !4140
  %45 = load i32, i32* @x.57
  %46 = load i32, i32* @y.58
  %47 = sub i32 %45, 1
  %48 = mul i32 %45, %47
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %50, %51
  br i1 %52, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %74, !dbg !4140

53:                                               ; preds = %originalBBpart2
  %54 = load i32, i32* @x.57
  %55 = load i32, i32* @y.58
  %56 = sub i32 %54, 1
  %57 = mul i32 %54, %56
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %55, 10
  %61 = or i1 %59, %60
  br i1 %61, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %53, %originalBB6alteredBB
  %62 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !4141
  %63 = load i8*, i8** %17, align 8, !dbg !4142
  %64 = load i8*, i8** %18, align 8, !dbg !4143
  %65 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %62, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.107, i64 0, i64 0), i8* %63, i8* %64), !dbg !4144
  %66 = load i32, i32* @x.57
  %67 = load i32, i32* @y.58
  %68 = sub i32 %66, 1
  %69 = mul i32 %66, %68
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %67, 10
  %73 = or i1 %71, %72
  br i1 %73, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %74

74:                                               ; preds = %originalBBpart28, %originalBBpart24
  %75 = load i32, i32* @x.57
  %76 = load i32, i32* @y.58
  %77 = sub i32 %75, 1
  %78 = mul i32 %75, %77
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %76, 10
  %82 = or i1 %80, %81
  br i1 %82, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %74, %originalBB10alteredBB
  %83 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !4145
  %84 = call i8* @gettext(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.108, i64 0, i64 0)) #10, !dbg !4146
  %85 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %83, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @version_etc_copyright, i64 0, i64 0), i8* %84, i32 2020), !dbg !4147
  %86 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !4148
  %87 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.109, i64 0, i64 0), %struct._IO_FILE* %86), !dbg !4148
  %88 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !4149
  %89 = call i8* @gettext(i8* getelementptr inbounds ([171 x i8], [171 x i8]* @.str.4.110, i64 0, i64 0)) #10, !dbg !4150
  %90 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %88, i8* %89, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.5.111, i64 0, i64 0)), !dbg !4151
  %91 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !4152
  %92 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.109, i64 0, i64 0), %struct._IO_FILE* %91), !dbg !4152
  %93 = load i64, i64* %20, align 8, !dbg !4153
  %94 = load i32, i32* @x.57
  %95 = load i32, i32* @y.58
  %96 = sub i32 %94, 1
  %97 = mul i32 %94, %96
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %95, 10
  %101 = or i1 %99, %100
  br i1 %101, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  switch i64 %93, label %434 [
    i64 0, label %102
    i64 1, label %119
    i64 2, label %142
    i64 3, label %168
    i64 4, label %197
    i64 5, label %229
    i64 6, label %264
    i64 7, label %302
    i64 8, label %343
    i64 9, label %387
  ], !dbg !4154

102:                                              ; preds = %originalBBpart212
  %103 = load i32, i32* @x.57
  %104 = load i32, i32* @y.58
  %105 = sub i32 %103, 1
  %106 = mul i32 %103, %105
  %107 = urem i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %104, 10
  %110 = or i1 %108, %109
  br i1 %110, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %102, %originalBB14alteredBB
  %111 = load i32, i32* @x.57
  %112 = load i32, i32* @y.58
  %113 = sub i32 %111, 1
  %114 = mul i32 %111, %113
  %115 = urem i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %112, 10
  %118 = or i1 %116, %117
  br i1 %118, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %481, !dbg !4155

119:                                              ; preds = %originalBBpart212
  %120 = load i32, i32* @x.57
  %121 = load i32, i32* @y.58
  %122 = sub i32 %120, 1
  %123 = mul i32 %120, %122
  %124 = urem i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = icmp slt i32 %121, 10
  %127 = or i1 %125, %126
  br i1 %127, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %119, %originalBB18alteredBB
  %128 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !4157
  %129 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6.112, i64 0, i64 0)) #10, !dbg !4158
  %130 = load i8**, i8*** %19, align 8, !dbg !4159
  %131 = getelementptr inbounds i8*, i8** %130, i64 0, !dbg !4159
  %132 = load i8*, i8** %131, align 8, !dbg !4159
  %133 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %128, i8* %129, i8* %132), !dbg !4160
  %134 = load i32, i32* @x.57
  %135 = load i32, i32* @y.58
  %136 = sub i32 %134, 1
  %137 = mul i32 %134, %136
  %138 = urem i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = icmp slt i32 %135, 10
  %141 = or i1 %139, %140
  br i1 %141, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %481, !dbg !4161

142:                                              ; preds = %originalBBpart212
  %143 = load i32, i32* @x.57
  %144 = load i32, i32* @y.58
  %145 = sub i32 %143, 1
  %146 = mul i32 %143, %145
  %147 = urem i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = icmp slt i32 %144, 10
  %150 = or i1 %148, %149
  br i1 %150, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %142, %originalBB22alteredBB
  %151 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !4162
  %152 = call i8* @gettext(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.113, i64 0, i64 0)) #10, !dbg !4163
  %153 = load i8**, i8*** %19, align 8, !dbg !4164
  %154 = getelementptr inbounds i8*, i8** %153, i64 0, !dbg !4164
  %155 = load i8*, i8** %154, align 8, !dbg !4164
  %156 = load i8**, i8*** %19, align 8, !dbg !4165
  %157 = getelementptr inbounds i8*, i8** %156, i64 1, !dbg !4165
  %158 = load i8*, i8** %157, align 8, !dbg !4165
  %159 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %151, i8* %152, i8* %155, i8* %158), !dbg !4166
  %160 = load i32, i32* @x.57
  %161 = load i32, i32* @y.58
  %162 = sub i32 %160, 1
  %163 = mul i32 %160, %162
  %164 = urem i32 %163, 2
  %165 = icmp eq i32 %164, 0
  %166 = icmp slt i32 %161, 10
  %167 = or i1 %165, %166
  br i1 %167, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br label %481, !dbg !4167

168:                                              ; preds = %originalBBpart212
  %169 = load i32, i32* @x.57
  %170 = load i32, i32* @y.58
  %171 = sub i32 %169, 1
  %172 = mul i32 %169, %171
  %173 = urem i32 %172, 2
  %174 = icmp eq i32 %173, 0
  %175 = icmp slt i32 %170, 10
  %176 = or i1 %174, %175
  br i1 %176, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %168, %originalBB26alteredBB
  %177 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !4168
  %178 = call i8* @gettext(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.8.114, i64 0, i64 0)) #10, !dbg !4169
  %179 = load i8**, i8*** %19, align 8, !dbg !4170
  %180 = getelementptr inbounds i8*, i8** %179, i64 0, !dbg !4170
  %181 = load i8*, i8** %180, align 8, !dbg !4170
  %182 = load i8**, i8*** %19, align 8, !dbg !4171
  %183 = getelementptr inbounds i8*, i8** %182, i64 1, !dbg !4171
  %184 = load i8*, i8** %183, align 8, !dbg !4171
  %185 = load i8**, i8*** %19, align 8, !dbg !4172
  %186 = getelementptr inbounds i8*, i8** %185, i64 2, !dbg !4172
  %187 = load i8*, i8** %186, align 8, !dbg !4172
  %188 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %177, i8* %178, i8* %181, i8* %184, i8* %187), !dbg !4173
  %189 = load i32, i32* @x.57
  %190 = load i32, i32* @y.58
  %191 = sub i32 %189, 1
  %192 = mul i32 %189, %191
  %193 = urem i32 %192, 2
  %194 = icmp eq i32 %193, 0
  %195 = icmp slt i32 %190, 10
  %196 = or i1 %194, %195
  br i1 %196, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br label %481, !dbg !4174

197:                                              ; preds = %originalBBpart212
  %198 = load i32, i32* @x.57
  %199 = load i32, i32* @y.58
  %200 = sub i32 %198, 1
  %201 = mul i32 %198, %200
  %202 = urem i32 %201, 2
  %203 = icmp eq i32 %202, 0
  %204 = icmp slt i32 %199, 10
  %205 = or i1 %203, %204
  br i1 %205, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %197, %originalBB30alteredBB
  %206 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !4175
  %207 = call i8* @gettext(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.9.115, i64 0, i64 0)) #10, !dbg !4176
  %208 = load i8**, i8*** %19, align 8, !dbg !4177
  %209 = getelementptr inbounds i8*, i8** %208, i64 0, !dbg !4177
  %210 = load i8*, i8** %209, align 8, !dbg !4177
  %211 = load i8**, i8*** %19, align 8, !dbg !4178
  %212 = getelementptr inbounds i8*, i8** %211, i64 1, !dbg !4178
  %213 = load i8*, i8** %212, align 8, !dbg !4178
  %214 = load i8**, i8*** %19, align 8, !dbg !4179
  %215 = getelementptr inbounds i8*, i8** %214, i64 2, !dbg !4179
  %216 = load i8*, i8** %215, align 8, !dbg !4179
  %217 = load i8**, i8*** %19, align 8, !dbg !4180
  %218 = getelementptr inbounds i8*, i8** %217, i64 3, !dbg !4180
  %219 = load i8*, i8** %218, align 8, !dbg !4180
  %220 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %206, i8* %207, i8* %210, i8* %213, i8* %216, i8* %219), !dbg !4181
  %221 = load i32, i32* @x.57
  %222 = load i32, i32* @y.58
  %223 = sub i32 %221, 1
  %224 = mul i32 %221, %223
  %225 = urem i32 %224, 2
  %226 = icmp eq i32 %225, 0
  %227 = icmp slt i32 %222, 10
  %228 = or i1 %226, %227
  br i1 %228, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br label %481, !dbg !4182

229:                                              ; preds = %originalBBpart212
  %230 = load i32, i32* @x.57
  %231 = load i32, i32* @y.58
  %232 = sub i32 %230, 1
  %233 = mul i32 %230, %232
  %234 = urem i32 %233, 2
  %235 = icmp eq i32 %234, 0
  %236 = icmp slt i32 %231, 10
  %237 = or i1 %235, %236
  br i1 %237, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %229, %originalBB34alteredBB
  %238 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !4183
  %239 = call i8* @gettext(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.10.116, i64 0, i64 0)) #10, !dbg !4184
  %240 = load i8**, i8*** %19, align 8, !dbg !4185
  %241 = getelementptr inbounds i8*, i8** %240, i64 0, !dbg !4185
  %242 = load i8*, i8** %241, align 8, !dbg !4185
  %243 = load i8**, i8*** %19, align 8, !dbg !4186
  %244 = getelementptr inbounds i8*, i8** %243, i64 1, !dbg !4186
  %245 = load i8*, i8** %244, align 8, !dbg !4186
  %246 = load i8**, i8*** %19, align 8, !dbg !4187
  %247 = getelementptr inbounds i8*, i8** %246, i64 2, !dbg !4187
  %248 = load i8*, i8** %247, align 8, !dbg !4187
  %249 = load i8**, i8*** %19, align 8, !dbg !4188
  %250 = getelementptr inbounds i8*, i8** %249, i64 3, !dbg !4188
  %251 = load i8*, i8** %250, align 8, !dbg !4188
  %252 = load i8**, i8*** %19, align 8, !dbg !4189
  %253 = getelementptr inbounds i8*, i8** %252, i64 4, !dbg !4189
  %254 = load i8*, i8** %253, align 8, !dbg !4189
  %255 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %238, i8* %239, i8* %242, i8* %245, i8* %248, i8* %251, i8* %254), !dbg !4190
  %256 = load i32, i32* @x.57
  %257 = load i32, i32* @y.58
  %258 = sub i32 %256, 1
  %259 = mul i32 %256, %258
  %260 = urem i32 %259, 2
  %261 = icmp eq i32 %260, 0
  %262 = icmp slt i32 %257, 10
  %263 = or i1 %261, %262
  br i1 %263, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  br label %481, !dbg !4191

264:                                              ; preds = %originalBBpart212
  %265 = load i32, i32* @x.57
  %266 = load i32, i32* @y.58
  %267 = sub i32 %265, 1
  %268 = mul i32 %265, %267
  %269 = urem i32 %268, 2
  %270 = icmp eq i32 %269, 0
  %271 = icmp slt i32 %266, 10
  %272 = or i1 %270, %271
  br i1 %272, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %264, %originalBB38alteredBB
  %273 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !4192
  %274 = call i8* @gettext(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.11.117, i64 0, i64 0)) #10, !dbg !4193
  %275 = load i8**, i8*** %19, align 8, !dbg !4194
  %276 = getelementptr inbounds i8*, i8** %275, i64 0, !dbg !4194
  %277 = load i8*, i8** %276, align 8, !dbg !4194
  %278 = load i8**, i8*** %19, align 8, !dbg !4195
  %279 = getelementptr inbounds i8*, i8** %278, i64 1, !dbg !4195
  %280 = load i8*, i8** %279, align 8, !dbg !4195
  %281 = load i8**, i8*** %19, align 8, !dbg !4196
  %282 = getelementptr inbounds i8*, i8** %281, i64 2, !dbg !4196
  %283 = load i8*, i8** %282, align 8, !dbg !4196
  %284 = load i8**, i8*** %19, align 8, !dbg !4197
  %285 = getelementptr inbounds i8*, i8** %284, i64 3, !dbg !4197
  %286 = load i8*, i8** %285, align 8, !dbg !4197
  %287 = load i8**, i8*** %19, align 8, !dbg !4198
  %288 = getelementptr inbounds i8*, i8** %287, i64 4, !dbg !4198
  %289 = load i8*, i8** %288, align 8, !dbg !4198
  %290 = load i8**, i8*** %19, align 8, !dbg !4199
  %291 = getelementptr inbounds i8*, i8** %290, i64 5, !dbg !4199
  %292 = load i8*, i8** %291, align 8, !dbg !4199
  %293 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %273, i8* %274, i8* %277, i8* %280, i8* %283, i8* %286, i8* %289, i8* %292), !dbg !4200
  %294 = load i32, i32* @x.57
  %295 = load i32, i32* @y.58
  %296 = sub i32 %294, 1
  %297 = mul i32 %294, %296
  %298 = urem i32 %297, 2
  %299 = icmp eq i32 %298, 0
  %300 = icmp slt i32 %295, 10
  %301 = or i1 %299, %300
  br i1 %301, label %originalBBpart240, label %originalBB38alteredBB

originalBBpart240:                                ; preds = %originalBB38
  br label %481, !dbg !4201

302:                                              ; preds = %originalBBpart212
  %303 = load i32, i32* @x.57
  %304 = load i32, i32* @y.58
  %305 = sub i32 %303, 1
  %306 = mul i32 %303, %305
  %307 = urem i32 %306, 2
  %308 = icmp eq i32 %307, 0
  %309 = icmp slt i32 %304, 10
  %310 = or i1 %308, %309
  br i1 %310, label %originalBB42, label %originalBB42alteredBB

originalBB42:                                     ; preds = %302, %originalBB42alteredBB
  %311 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !4202
  %312 = call i8* @gettext(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.12.118, i64 0, i64 0)) #10, !dbg !4203
  %313 = load i8**, i8*** %19, align 8, !dbg !4204
  %314 = getelementptr inbounds i8*, i8** %313, i64 0, !dbg !4204
  %315 = load i8*, i8** %314, align 8, !dbg !4204
  %316 = load i8**, i8*** %19, align 8, !dbg !4205
  %317 = getelementptr inbounds i8*, i8** %316, i64 1, !dbg !4205
  %318 = load i8*, i8** %317, align 8, !dbg !4205
  %319 = load i8**, i8*** %19, align 8, !dbg !4206
  %320 = getelementptr inbounds i8*, i8** %319, i64 2, !dbg !4206
  %321 = load i8*, i8** %320, align 8, !dbg !4206
  %322 = load i8**, i8*** %19, align 8, !dbg !4207
  %323 = getelementptr inbounds i8*, i8** %322, i64 3, !dbg !4207
  %324 = load i8*, i8** %323, align 8, !dbg !4207
  %325 = load i8**, i8*** %19, align 8, !dbg !4208
  %326 = getelementptr inbounds i8*, i8** %325, i64 4, !dbg !4208
  %327 = load i8*, i8** %326, align 8, !dbg !4208
  %328 = load i8**, i8*** %19, align 8, !dbg !4209
  %329 = getelementptr inbounds i8*, i8** %328, i64 5, !dbg !4209
  %330 = load i8*, i8** %329, align 8, !dbg !4209
  %331 = load i8**, i8*** %19, align 8, !dbg !4210
  %332 = getelementptr inbounds i8*, i8** %331, i64 6, !dbg !4210
  %333 = load i8*, i8** %332, align 8, !dbg !4210
  %334 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %311, i8* %312, i8* %315, i8* %318, i8* %321, i8* %324, i8* %327, i8* %330, i8* %333), !dbg !4211
  %335 = load i32, i32* @x.57
  %336 = load i32, i32* @y.58
  %337 = sub i32 %335, 1
  %338 = mul i32 %335, %337
  %339 = urem i32 %338, 2
  %340 = icmp eq i32 %339, 0
  %341 = icmp slt i32 %336, 10
  %342 = or i1 %340, %341
  br i1 %342, label %originalBBpart244, label %originalBB42alteredBB

originalBBpart244:                                ; preds = %originalBB42
  br label %481, !dbg !4212

343:                                              ; preds = %originalBBpart212
  %344 = load i32, i32* @x.57
  %345 = load i32, i32* @y.58
  %346 = sub i32 %344, 1
  %347 = mul i32 %344, %346
  %348 = urem i32 %347, 2
  %349 = icmp eq i32 %348, 0
  %350 = icmp slt i32 %345, 10
  %351 = or i1 %349, %350
  br i1 %351, label %originalBB46, label %originalBB46alteredBB

originalBB46:                                     ; preds = %343, %originalBB46alteredBB
  %352 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !4213
  %353 = call i8* @gettext(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.13.119, i64 0, i64 0)) #10, !dbg !4214
  %354 = load i8**, i8*** %19, align 8, !dbg !4215
  %355 = getelementptr inbounds i8*, i8** %354, i64 0, !dbg !4215
  %356 = load i8*, i8** %355, align 8, !dbg !4215
  %357 = load i8**, i8*** %19, align 8, !dbg !4216
  %358 = getelementptr inbounds i8*, i8** %357, i64 1, !dbg !4216
  %359 = load i8*, i8** %358, align 8, !dbg !4216
  %360 = load i8**, i8*** %19, align 8, !dbg !4217
  %361 = getelementptr inbounds i8*, i8** %360, i64 2, !dbg !4217
  %362 = load i8*, i8** %361, align 8, !dbg !4217
  %363 = load i8**, i8*** %19, align 8, !dbg !4218
  %364 = getelementptr inbounds i8*, i8** %363, i64 3, !dbg !4218
  %365 = load i8*, i8** %364, align 8, !dbg !4218
  %366 = load i8**, i8*** %19, align 8, !dbg !4219
  %367 = getelementptr inbounds i8*, i8** %366, i64 4, !dbg !4219
  %368 = load i8*, i8** %367, align 8, !dbg !4219
  %369 = load i8**, i8*** %19, align 8, !dbg !4220
  %370 = getelementptr inbounds i8*, i8** %369, i64 5, !dbg !4220
  %371 = load i8*, i8** %370, align 8, !dbg !4220
  %372 = load i8**, i8*** %19, align 8, !dbg !4221
  %373 = getelementptr inbounds i8*, i8** %372, i64 6, !dbg !4221
  %374 = load i8*, i8** %373, align 8, !dbg !4221
  %375 = load i8**, i8*** %19, align 8, !dbg !4222
  %376 = getelementptr inbounds i8*, i8** %375, i64 7, !dbg !4222
  %377 = load i8*, i8** %376, align 8, !dbg !4222
  %378 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %352, i8* %353, i8* %356, i8* %359, i8* %362, i8* %365, i8* %368, i8* %371, i8* %374, i8* %377), !dbg !4223
  %379 = load i32, i32* @x.57
  %380 = load i32, i32* @y.58
  %381 = sub i32 %379, 1
  %382 = mul i32 %379, %381
  %383 = urem i32 %382, 2
  %384 = icmp eq i32 %383, 0
  %385 = icmp slt i32 %380, 10
  %386 = or i1 %384, %385
  br i1 %386, label %originalBBpart248, label %originalBB46alteredBB

originalBBpart248:                                ; preds = %originalBB46
  br label %481, !dbg !4224

387:                                              ; preds = %originalBBpart212
  %388 = load i32, i32* @x.57
  %389 = load i32, i32* @y.58
  %390 = sub i32 %388, 1
  %391 = mul i32 %388, %390
  %392 = urem i32 %391, 2
  %393 = icmp eq i32 %392, 0
  %394 = icmp slt i32 %389, 10
  %395 = or i1 %393, %394
  br i1 %395, label %originalBB50, label %originalBB50alteredBB

originalBB50:                                     ; preds = %387, %originalBB50alteredBB
  %396 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !4225
  %397 = call i8* @gettext(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.14.120, i64 0, i64 0)) #10, !dbg !4226
  %398 = load i8**, i8*** %19, align 8, !dbg !4227
  %399 = getelementptr inbounds i8*, i8** %398, i64 0, !dbg !4227
  %400 = load i8*, i8** %399, align 8, !dbg !4227
  %401 = load i8**, i8*** %19, align 8, !dbg !4228
  %402 = getelementptr inbounds i8*, i8** %401, i64 1, !dbg !4228
  %403 = load i8*, i8** %402, align 8, !dbg !4228
  %404 = load i8**, i8*** %19, align 8, !dbg !4229
  %405 = getelementptr inbounds i8*, i8** %404, i64 2, !dbg !4229
  %406 = load i8*, i8** %405, align 8, !dbg !4229
  %407 = load i8**, i8*** %19, align 8, !dbg !4230
  %408 = getelementptr inbounds i8*, i8** %407, i64 3, !dbg !4230
  %409 = load i8*, i8** %408, align 8, !dbg !4230
  %410 = load i8**, i8*** %19, align 8, !dbg !4231
  %411 = getelementptr inbounds i8*, i8** %410, i64 4, !dbg !4231
  %412 = load i8*, i8** %411, align 8, !dbg !4231
  %413 = load i8**, i8*** %19, align 8, !dbg !4232
  %414 = getelementptr inbounds i8*, i8** %413, i64 5, !dbg !4232
  %415 = load i8*, i8** %414, align 8, !dbg !4232
  %416 = load i8**, i8*** %19, align 8, !dbg !4233
  %417 = getelementptr inbounds i8*, i8** %416, i64 6, !dbg !4233
  %418 = load i8*, i8** %417, align 8, !dbg !4233
  %419 = load i8**, i8*** %19, align 8, !dbg !4234
  %420 = getelementptr inbounds i8*, i8** %419, i64 7, !dbg !4234
  %421 = load i8*, i8** %420, align 8, !dbg !4234
  %422 = load i8**, i8*** %19, align 8, !dbg !4235
  %423 = getelementptr inbounds i8*, i8** %422, i64 8, !dbg !4235
  %424 = load i8*, i8** %423, align 8, !dbg !4235
  %425 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %396, i8* %397, i8* %400, i8* %403, i8* %406, i8* %409, i8* %412, i8* %415, i8* %418, i8* %421, i8* %424), !dbg !4236
  %426 = load i32, i32* @x.57
  %427 = load i32, i32* @y.58
  %428 = sub i32 %426, 1
  %429 = mul i32 %426, %428
  %430 = urem i32 %429, 2
  %431 = icmp eq i32 %430, 0
  %432 = icmp slt i32 %427, 10
  %433 = or i1 %431, %432
  br i1 %433, label %originalBBpart252, label %originalBB50alteredBB

originalBBpart252:                                ; preds = %originalBB50
  br label %481, !dbg !4237

434:                                              ; preds = %originalBBpart212
  %435 = load i32, i32* @x.57
  %436 = load i32, i32* @y.58
  %437 = sub i32 %435, 1
  %438 = mul i32 %435, %437
  %439 = urem i32 %438, 2
  %440 = icmp eq i32 %439, 0
  %441 = icmp slt i32 %436, 10
  %442 = or i1 %440, %441
  br i1 %442, label %originalBB54, label %originalBB54alteredBB

originalBB54:                                     ; preds = %434, %originalBB54alteredBB
  %443 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !4238
  %444 = call i8* @gettext(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.15.121, i64 0, i64 0)) #10, !dbg !4239
  %445 = load i8**, i8*** %19, align 8, !dbg !4240
  %446 = getelementptr inbounds i8*, i8** %445, i64 0, !dbg !4240
  %447 = load i8*, i8** %446, align 8, !dbg !4240
  %448 = load i8**, i8*** %19, align 8, !dbg !4241
  %449 = getelementptr inbounds i8*, i8** %448, i64 1, !dbg !4241
  %450 = load i8*, i8** %449, align 8, !dbg !4241
  %451 = load i8**, i8*** %19, align 8, !dbg !4242
  %452 = getelementptr inbounds i8*, i8** %451, i64 2, !dbg !4242
  %453 = load i8*, i8** %452, align 8, !dbg !4242
  %454 = load i8**, i8*** %19, align 8, !dbg !4243
  %455 = getelementptr inbounds i8*, i8** %454, i64 3, !dbg !4243
  %456 = load i8*, i8** %455, align 8, !dbg !4243
  %457 = load i8**, i8*** %19, align 8, !dbg !4244
  %458 = getelementptr inbounds i8*, i8** %457, i64 4, !dbg !4244
  %459 = load i8*, i8** %458, align 8, !dbg !4244
  %460 = load i8**, i8*** %19, align 8, !dbg !4245
  %461 = getelementptr inbounds i8*, i8** %460, i64 5, !dbg !4245
  %462 = load i8*, i8** %461, align 8, !dbg !4245
  %463 = load i8**, i8*** %19, align 8, !dbg !4246
  %464 = getelementptr inbounds i8*, i8** %463, i64 6, !dbg !4246
  %465 = load i8*, i8** %464, align 8, !dbg !4246
  %466 = load i8**, i8*** %19, align 8, !dbg !4247
  %467 = getelementptr inbounds i8*, i8** %466, i64 7, !dbg !4247
  %468 = load i8*, i8** %467, align 8, !dbg !4247
  %469 = load i8**, i8*** %19, align 8, !dbg !4248
  %470 = getelementptr inbounds i8*, i8** %469, i64 8, !dbg !4248
  %471 = load i8*, i8** %470, align 8, !dbg !4248
  %472 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %443, i8* %444, i8* %447, i8* %450, i8* %453, i8* %456, i8* %459, i8* %462, i8* %465, i8* %468, i8* %471), !dbg !4249
  %473 = load i32, i32* @x.57
  %474 = load i32, i32* @y.58
  %475 = sub i32 %473, 1
  %476 = mul i32 %473, %475
  %477 = urem i32 %476, 2
  %478 = icmp eq i32 %477, 0
  %479 = icmp slt i32 %474, 10
  %480 = or i1 %478, %479
  br i1 %480, label %originalBBpart256, label %originalBB54alteredBB

originalBBpart256:                                ; preds = %originalBB54
  br label %481, !dbg !4250

481:                                              ; preds = %originalBBpart256, %originalBBpart252, %originalBBpart248, %originalBBpart244, %originalBBpart240, %originalBBpart236, %originalBBpart232, %originalBBpart228, %originalBBpart224, %originalBBpart220, %originalBBpart216
  %482 = load i32, i32* @x.57
  %483 = load i32, i32* @y.58
  %484 = sub i32 %482, 1
  %485 = mul i32 %482, %484
  %486 = urem i32 %485, 2
  %487 = icmp eq i32 %486, 0
  %488 = icmp slt i32 %483, 10
  %489 = or i1 %487, %488
  br i1 %489, label %originalBB58, label %originalBB58alteredBB

originalBB58:                                     ; preds = %481, %originalBB58alteredBB
  %490 = load i32, i32* @x.57
  %491 = load i32, i32* @y.58
  %492 = sub i32 %490, 1
  %493 = mul i32 %490, %492
  %494 = urem i32 %493, 2
  %495 = icmp eq i32 %494, 0
  %496 = icmp slt i32 %491, 10
  %497 = or i1 %495, %496
  br i1 %497, label %originalBBpart260, label %originalBB58alteredBB

originalBBpart260:                                ; preds = %originalBB58
  ret void, !dbg !4251

originalBBalteredBB:                              ; preds = %originalBB, %6
  %498 = alloca %struct._IO_FILE*, align 8
  %499 = alloca i8*, align 8
  %500 = alloca i8*, align 8
  %501 = alloca i8*, align 8
  %502 = alloca i8**, align 8
  %503 = alloca i64, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %498, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %498, metadata !4252, metadata !DIExpression()), !dbg !4122
  store i8* %1, i8** %499, align 8
  call void @llvm.dbg.declare(metadata i8** %499, metadata !4291, metadata !DIExpression()), !dbg !4124
  store i8* %2, i8** %500, align 8
  call void @llvm.dbg.declare(metadata i8** %500, metadata !4292, metadata !DIExpression()), !dbg !4126
  store i8* %3, i8** %501, align 8
  call void @llvm.dbg.declare(metadata i8** %501, metadata !4293, metadata !DIExpression()), !dbg !4128
  store i8** %4, i8*** %502, align 8
  call void @llvm.dbg.declare(metadata i8*** %502, metadata !4294, metadata !DIExpression()), !dbg !4130
  store i64 %5, i64* %503, align 8
  call void @llvm.dbg.declare(metadata i64* %503, metadata !4295, metadata !DIExpression()), !dbg !4132
  %504 = load i8*, i8** %499, align 8, !dbg !4133
  %505 = icmp ne i8* %504, null, !dbg !4133
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %31
  %506 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !4136
  %507 = load i8*, i8** %16, align 8, !dbg !4137
  %508 = load i8*, i8** %17, align 8, !dbg !4138
  %509 = load i8*, i8** %18, align 8, !dbg !4139
  %510 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %506, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.106, i64 0, i64 0), i8* %507, i8* %508, i8* %509), !dbg !4140
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %53
  %511 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !4141
  %512 = load i8*, i8** %17, align 8, !dbg !4142
  %513 = load i8*, i8** %18, align 8, !dbg !4143
  %514 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %511, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.107, i64 0, i64 0), i8* %512, i8* %513), !dbg !4144
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %74
  %515 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !4145
  %516 = call i8* @gettext(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.108, i64 0, i64 0)) #10, !dbg !4146
  %517 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %515, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @version_etc_copyright, i64 0, i64 0), i8* %516, i32 2020), !dbg !4147
  %518 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !4148
  %519 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.109, i64 0, i64 0), %struct._IO_FILE* %518), !dbg !4148
  %520 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !4149
  %521 = call i8* @gettext(i8* getelementptr inbounds ([171 x i8], [171 x i8]* @.str.4.110, i64 0, i64 0)) #10, !dbg !4150
  %522 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %520, i8* %521, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.5.111, i64 0, i64 0)), !dbg !4151
  %523 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !4152
  %524 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.109, i64 0, i64 0), %struct._IO_FILE* %523), !dbg !4152
  %525 = load i64, i64* %20, align 8, !dbg !4153
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %102
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %119
  %526 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !4157
  %527 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6.112, i64 0, i64 0)) #10, !dbg !4158
  %528 = load i8**, i8*** %19, align 8, !dbg !4159
  %529 = getelementptr inbounds i8*, i8** %528, i64 0, !dbg !4159
  %530 = load i8*, i8** %529, align 8, !dbg !4159
  %531 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %526, i8* %527, i8* %530), !dbg !4160
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %142
  %532 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !4162
  %533 = call i8* @gettext(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.113, i64 0, i64 0)) #10, !dbg !4163
  %534 = load i8**, i8*** %19, align 8, !dbg !4164
  %535 = getelementptr inbounds i8*, i8** %534, i64 0, !dbg !4164
  %536 = load i8*, i8** %535, align 8, !dbg !4164
  %537 = load i8**, i8*** %19, align 8, !dbg !4165
  %538 = getelementptr inbounds i8*, i8** %537, i64 1, !dbg !4165
  %539 = load i8*, i8** %538, align 8, !dbg !4165
  %540 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %532, i8* %533, i8* %536, i8* %539), !dbg !4166
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %168
  %541 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !4168
  %542 = call i8* @gettext(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.8.114, i64 0, i64 0)) #10, !dbg !4169
  %543 = load i8**, i8*** %19, align 8, !dbg !4170
  %544 = getelementptr inbounds i8*, i8** %543, i64 0, !dbg !4170
  %545 = load i8*, i8** %544, align 8, !dbg !4170
  %546 = load i8**, i8*** %19, align 8, !dbg !4171
  %547 = getelementptr inbounds i8*, i8** %546, i64 1, !dbg !4171
  %548 = load i8*, i8** %547, align 8, !dbg !4171
  %549 = load i8**, i8*** %19, align 8, !dbg !4172
  %550 = getelementptr inbounds i8*, i8** %549, i64 2, !dbg !4172
  %551 = load i8*, i8** %550, align 8, !dbg !4172
  %552 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %541, i8* %542, i8* %545, i8* %548, i8* %551), !dbg !4173
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %197
  %553 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !4175
  %554 = call i8* @gettext(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.9.115, i64 0, i64 0)) #10, !dbg !4176
  %555 = load i8**, i8*** %19, align 8, !dbg !4177
  %556 = getelementptr inbounds i8*, i8** %555, i64 0, !dbg !4177
  %557 = load i8*, i8** %556, align 8, !dbg !4177
  %558 = load i8**, i8*** %19, align 8, !dbg !4178
  %559 = getelementptr inbounds i8*, i8** %558, i64 1, !dbg !4178
  %560 = load i8*, i8** %559, align 8, !dbg !4178
  %561 = load i8**, i8*** %19, align 8, !dbg !4179
  %562 = getelementptr inbounds i8*, i8** %561, i64 2, !dbg !4179
  %563 = load i8*, i8** %562, align 8, !dbg !4179
  %564 = load i8**, i8*** %19, align 8, !dbg !4180
  %565 = getelementptr inbounds i8*, i8** %564, i64 3, !dbg !4180
  %566 = load i8*, i8** %565, align 8, !dbg !4180
  %567 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %553, i8* %554, i8* %557, i8* %560, i8* %563, i8* %566), !dbg !4181
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %229
  %568 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !4183
  %569 = call i8* @gettext(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.10.116, i64 0, i64 0)) #10, !dbg !4184
  %570 = load i8**, i8*** %19, align 8, !dbg !4185
  %571 = getelementptr inbounds i8*, i8** %570, i64 0, !dbg !4185
  %572 = load i8*, i8** %571, align 8, !dbg !4185
  %573 = load i8**, i8*** %19, align 8, !dbg !4186
  %574 = getelementptr inbounds i8*, i8** %573, i64 1, !dbg !4186
  %575 = load i8*, i8** %574, align 8, !dbg !4186
  %576 = load i8**, i8*** %19, align 8, !dbg !4187
  %577 = getelementptr inbounds i8*, i8** %576, i64 2, !dbg !4187
  %578 = load i8*, i8** %577, align 8, !dbg !4187
  %579 = load i8**, i8*** %19, align 8, !dbg !4188
  %580 = getelementptr inbounds i8*, i8** %579, i64 3, !dbg !4188
  %581 = load i8*, i8** %580, align 8, !dbg !4188
  %582 = load i8**, i8*** %19, align 8, !dbg !4189
  %583 = getelementptr inbounds i8*, i8** %582, i64 4, !dbg !4189
  %584 = load i8*, i8** %583, align 8, !dbg !4189
  %585 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %568, i8* %569, i8* %572, i8* %575, i8* %578, i8* %581, i8* %584), !dbg !4190
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %264
  %586 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !4192
  %587 = call i8* @gettext(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.11.117, i64 0, i64 0)) #10, !dbg !4193
  %588 = load i8**, i8*** %19, align 8, !dbg !4194
  %589 = getelementptr inbounds i8*, i8** %588, i64 0, !dbg !4194
  %590 = load i8*, i8** %589, align 8, !dbg !4194
  %591 = load i8**, i8*** %19, align 8, !dbg !4195
  %592 = getelementptr inbounds i8*, i8** %591, i64 1, !dbg !4195
  %593 = load i8*, i8** %592, align 8, !dbg !4195
  %594 = load i8**, i8*** %19, align 8, !dbg !4196
  %595 = getelementptr inbounds i8*, i8** %594, i64 2, !dbg !4196
  %596 = load i8*, i8** %595, align 8, !dbg !4196
  %597 = load i8**, i8*** %19, align 8, !dbg !4197
  %598 = getelementptr inbounds i8*, i8** %597, i64 3, !dbg !4197
  %599 = load i8*, i8** %598, align 8, !dbg !4197
  %600 = load i8**, i8*** %19, align 8, !dbg !4198
  %601 = getelementptr inbounds i8*, i8** %600, i64 4, !dbg !4198
  %602 = load i8*, i8** %601, align 8, !dbg !4198
  %603 = load i8**, i8*** %19, align 8, !dbg !4199
  %604 = getelementptr inbounds i8*, i8** %603, i64 5, !dbg !4199
  %605 = load i8*, i8** %604, align 8, !dbg !4199
  %606 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %586, i8* %587, i8* %590, i8* %593, i8* %596, i8* %599, i8* %602, i8* %605), !dbg !4200
  br label %originalBB38

originalBB42alteredBB:                            ; preds = %originalBB42, %302
  %607 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !4202
  %608 = call i8* @gettext(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.12.118, i64 0, i64 0)) #10, !dbg !4203
  %609 = load i8**, i8*** %19, align 8, !dbg !4204
  %610 = getelementptr inbounds i8*, i8** %609, i64 0, !dbg !4204
  %611 = load i8*, i8** %610, align 8, !dbg !4204
  %612 = load i8**, i8*** %19, align 8, !dbg !4205
  %613 = getelementptr inbounds i8*, i8** %612, i64 1, !dbg !4205
  %614 = load i8*, i8** %613, align 8, !dbg !4205
  %615 = load i8**, i8*** %19, align 8, !dbg !4206
  %616 = getelementptr inbounds i8*, i8** %615, i64 2, !dbg !4206
  %617 = load i8*, i8** %616, align 8, !dbg !4206
  %618 = load i8**, i8*** %19, align 8, !dbg !4207
  %619 = getelementptr inbounds i8*, i8** %618, i64 3, !dbg !4207
  %620 = load i8*, i8** %619, align 8, !dbg !4207
  %621 = load i8**, i8*** %19, align 8, !dbg !4208
  %622 = getelementptr inbounds i8*, i8** %621, i64 4, !dbg !4208
  %623 = load i8*, i8** %622, align 8, !dbg !4208
  %624 = load i8**, i8*** %19, align 8, !dbg !4209
  %625 = getelementptr inbounds i8*, i8** %624, i64 5, !dbg !4209
  %626 = load i8*, i8** %625, align 8, !dbg !4209
  %627 = load i8**, i8*** %19, align 8, !dbg !4210
  %628 = getelementptr inbounds i8*, i8** %627, i64 6, !dbg !4210
  %629 = load i8*, i8** %628, align 8, !dbg !4210
  %630 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %607, i8* %608, i8* %611, i8* %614, i8* %617, i8* %620, i8* %623, i8* %626, i8* %629), !dbg !4211
  br label %originalBB42

originalBB46alteredBB:                            ; preds = %originalBB46, %343
  %631 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !4213
  %632 = call i8* @gettext(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.13.119, i64 0, i64 0)) #10, !dbg !4214
  %633 = load i8**, i8*** %19, align 8, !dbg !4215
  %634 = getelementptr inbounds i8*, i8** %633, i64 0, !dbg !4215
  %635 = load i8*, i8** %634, align 8, !dbg !4215
  %636 = load i8**, i8*** %19, align 8, !dbg !4216
  %637 = getelementptr inbounds i8*, i8** %636, i64 1, !dbg !4216
  %638 = load i8*, i8** %637, align 8, !dbg !4216
  %639 = load i8**, i8*** %19, align 8, !dbg !4217
  %640 = getelementptr inbounds i8*, i8** %639, i64 2, !dbg !4217
  %641 = load i8*, i8** %640, align 8, !dbg !4217
  %642 = load i8**, i8*** %19, align 8, !dbg !4218
  %643 = getelementptr inbounds i8*, i8** %642, i64 3, !dbg !4218
  %644 = load i8*, i8** %643, align 8, !dbg !4218
  %645 = load i8**, i8*** %19, align 8, !dbg !4219
  %646 = getelementptr inbounds i8*, i8** %645, i64 4, !dbg !4219
  %647 = load i8*, i8** %646, align 8, !dbg !4219
  %648 = load i8**, i8*** %19, align 8, !dbg !4220
  %649 = getelementptr inbounds i8*, i8** %648, i64 5, !dbg !4220
  %650 = load i8*, i8** %649, align 8, !dbg !4220
  %651 = load i8**, i8*** %19, align 8, !dbg !4221
  %652 = getelementptr inbounds i8*, i8** %651, i64 6, !dbg !4221
  %653 = load i8*, i8** %652, align 8, !dbg !4221
  %654 = load i8**, i8*** %19, align 8, !dbg !4222
  %655 = getelementptr inbounds i8*, i8** %654, i64 7, !dbg !4222
  %656 = load i8*, i8** %655, align 8, !dbg !4222
  %657 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %631, i8* %632, i8* %635, i8* %638, i8* %641, i8* %644, i8* %647, i8* %650, i8* %653, i8* %656), !dbg !4223
  br label %originalBB46

originalBB50alteredBB:                            ; preds = %originalBB50, %387
  %658 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !4225
  %659 = call i8* @gettext(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.14.120, i64 0, i64 0)) #10, !dbg !4226
  %660 = load i8**, i8*** %19, align 8, !dbg !4227
  %661 = getelementptr inbounds i8*, i8** %660, i64 0, !dbg !4227
  %662 = load i8*, i8** %661, align 8, !dbg !4227
  %663 = load i8**, i8*** %19, align 8, !dbg !4228
  %664 = getelementptr inbounds i8*, i8** %663, i64 1, !dbg !4228
  %665 = load i8*, i8** %664, align 8, !dbg !4228
  %666 = load i8**, i8*** %19, align 8, !dbg !4229
  %667 = getelementptr inbounds i8*, i8** %666, i64 2, !dbg !4229
  %668 = load i8*, i8** %667, align 8, !dbg !4229
  %669 = load i8**, i8*** %19, align 8, !dbg !4230
  %670 = getelementptr inbounds i8*, i8** %669, i64 3, !dbg !4230
  %671 = load i8*, i8** %670, align 8, !dbg !4230
  %672 = load i8**, i8*** %19, align 8, !dbg !4231
  %673 = getelementptr inbounds i8*, i8** %672, i64 4, !dbg !4231
  %674 = load i8*, i8** %673, align 8, !dbg !4231
  %675 = load i8**, i8*** %19, align 8, !dbg !4232
  %676 = getelementptr inbounds i8*, i8** %675, i64 5, !dbg !4232
  %677 = load i8*, i8** %676, align 8, !dbg !4232
  %678 = load i8**, i8*** %19, align 8, !dbg !4233
  %679 = getelementptr inbounds i8*, i8** %678, i64 6, !dbg !4233
  %680 = load i8*, i8** %679, align 8, !dbg !4233
  %681 = load i8**, i8*** %19, align 8, !dbg !4234
  %682 = getelementptr inbounds i8*, i8** %681, i64 7, !dbg !4234
  %683 = load i8*, i8** %682, align 8, !dbg !4234
  %684 = load i8**, i8*** %19, align 8, !dbg !4235
  %685 = getelementptr inbounds i8*, i8** %684, i64 8, !dbg !4235
  %686 = load i8*, i8** %685, align 8, !dbg !4235
  %687 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %658, i8* %659, i8* %662, i8* %665, i8* %668, i8* %671, i8* %674, i8* %677, i8* %680, i8* %683, i8* %686), !dbg !4236
  br label %originalBB50

originalBB54alteredBB:                            ; preds = %originalBB54, %434
  %688 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !4238
  %689 = call i8* @gettext(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.15.121, i64 0, i64 0)) #10, !dbg !4239
  %690 = load i8**, i8*** %19, align 8, !dbg !4240
  %691 = getelementptr inbounds i8*, i8** %690, i64 0, !dbg !4240
  %692 = load i8*, i8** %691, align 8, !dbg !4240
  %693 = load i8**, i8*** %19, align 8, !dbg !4241
  %694 = getelementptr inbounds i8*, i8** %693, i64 1, !dbg !4241
  %695 = load i8*, i8** %694, align 8, !dbg !4241
  %696 = load i8**, i8*** %19, align 8, !dbg !4242
  %697 = getelementptr inbounds i8*, i8** %696, i64 2, !dbg !4242
  %698 = load i8*, i8** %697, align 8, !dbg !4242
  %699 = load i8**, i8*** %19, align 8, !dbg !4243
  %700 = getelementptr inbounds i8*, i8** %699, i64 3, !dbg !4243
  %701 = load i8*, i8** %700, align 8, !dbg !4243
  %702 = load i8**, i8*** %19, align 8, !dbg !4244
  %703 = getelementptr inbounds i8*, i8** %702, i64 4, !dbg !4244
  %704 = load i8*, i8** %703, align 8, !dbg !4244
  %705 = load i8**, i8*** %19, align 8, !dbg !4245
  %706 = getelementptr inbounds i8*, i8** %705, i64 5, !dbg !4245
  %707 = load i8*, i8** %706, align 8, !dbg !4245
  %708 = load i8**, i8*** %19, align 8, !dbg !4246
  %709 = getelementptr inbounds i8*, i8** %708, i64 6, !dbg !4246
  %710 = load i8*, i8** %709, align 8, !dbg !4246
  %711 = load i8**, i8*** %19, align 8, !dbg !4247
  %712 = getelementptr inbounds i8*, i8** %711, i64 7, !dbg !4247
  %713 = load i8*, i8** %712, align 8, !dbg !4247
  %714 = load i8**, i8*** %19, align 8, !dbg !4248
  %715 = getelementptr inbounds i8*, i8** %714, i64 8, !dbg !4248
  %716 = load i8*, i8** %715, align 8, !dbg !4248
  %717 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %688, i8* %689, i8* %692, i8* %695, i8* %698, i8* %701, i8* %704, i8* %707, i8* %710, i8* %713, i8* %716), !dbg !4249
  br label %originalBB54

originalBB58alteredBB:                            ; preds = %originalBB58, %481
  br label %originalBB58
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @version_etc_va(%struct._IO_FILE*, i8*, i8*, i8*, %struct.__va_list_tag*) #4 !dbg !4296 {
  %6 = load i32, i32* @x.59
  %7 = load i32, i32* @y.60
  %8 = sub i32 %6, 1
  %9 = mul i32 %6, %8
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %7, 10
  %13 = or i1 %11, %12
  br i1 %13, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %5, %originalBBalteredBB
  %14 = alloca %struct._IO_FILE*, align 8
  %15 = alloca i8*, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i8*, align 8
  %18 = alloca %struct.__va_list_tag*, align 8
  %19 = alloca i64, align 8
  %20 = alloca [10 x i8*], align 16
  store %struct._IO_FILE* %0, %struct._IO_FILE** %14, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %14, metadata !4306, metadata !DIExpression()), !dbg !4307
  store i8* %1, i8** %15, align 8
  call void @llvm.dbg.declare(metadata i8** %15, metadata !4308, metadata !DIExpression()), !dbg !4309
  store i8* %2, i8** %16, align 8
  call void @llvm.dbg.declare(metadata i8** %16, metadata !4310, metadata !DIExpression()), !dbg !4311
  store i8* %3, i8** %17, align 8
  call void @llvm.dbg.declare(metadata i8** %17, metadata !4312, metadata !DIExpression()), !dbg !4313
  store %struct.__va_list_tag* %4, %struct.__va_list_tag** %18, align 8
  call void @llvm.dbg.declare(metadata %struct.__va_list_tag** %18, metadata !4314, metadata !DIExpression()), !dbg !4315
  call void @llvm.dbg.declare(metadata i64* %19, metadata !4316, metadata !DIExpression()), !dbg !4317
  call void @llvm.dbg.declare(metadata [10 x i8*]* %20, metadata !4318, metadata !DIExpression()), !dbg !4320
  store i64 0, i64* %19, align 8, !dbg !4321
  %21 = load i32, i32* @x.59
  %22 = load i32, i32* @y.60
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %29, !dbg !4323

29:                                               ; preds = %originalBBpart247, %originalBBpart2
  %30 = load i32, i32* @x.59
  %31 = load i32, i32* @y.60
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %29, %originalBB1alteredBB
  %38 = load i64, i64* %19, align 8, !dbg !4324
  %39 = icmp ult i64 %38, 10, !dbg !4326
  %40 = load i32, i32* @x.59
  %41 = load i32, i32* @y.60
  %42 = sub i32 %40, 1
  %43 = mul i32 %40, %42
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %45, %46
  br i1 %47, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %39, label %48, label %134, !dbg !4327

48:                                               ; preds = %originalBBpart24
  %49 = load i32, i32* @x.59
  %50 = load i32, i32* @y.60
  %51 = sub i32 %49, 1
  %52 = mul i32 %49, %51
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %50, 10
  %56 = or i1 %54, %55
  br i1 %56, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %48, %originalBB6alteredBB
  %57 = load %struct.__va_list_tag*, %struct.__va_list_tag** %18, align 8, !dbg !4328
  %58 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %57, i32 0, i32 0, !dbg !4328
  %59 = load i32, i32* %58, align 8, !dbg !4328
  %60 = icmp ule i32 %59, 40, !dbg !4328
  %61 = load i32, i32* @x.59
  %62 = load i32, i32* @y.60
  %63 = sub i32 %61, 1
  %64 = mul i32 %61, %63
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %62, 10
  %68 = or i1 %66, %67
  br i1 %68, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %60, label %69, label %91, !dbg !4328

69:                                               ; preds = %originalBBpart28
  %70 = load i32, i32* @x.59
  %71 = load i32, i32* @y.60
  %72 = sub i32 %70, 1
  %73 = mul i32 %70, %72
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %71, 10
  %77 = or i1 %75, %76
  br i1 %77, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %69, %originalBB10alteredBB
  %78 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %57, i32 0, i32 3, !dbg !4328
  %79 = load i8*, i8** %78, align 8, !dbg !4328
  %80 = getelementptr i8, i8* %79, i32 %59, !dbg !4328
  %81 = bitcast i8* %80 to i8**, !dbg !4328
  %82 = add i32 %59, 8, !dbg !4328
  store i32 %82, i32* %58, align 8, !dbg !4328
  %83 = load i32, i32* @x.59
  %84 = load i32, i32* @y.60
  %85 = sub i32 %83, 1
  %86 = mul i32 %83, %85
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %84, 10
  %90 = or i1 %88, %89
  br i1 %90, label %originalBBpart218, label %originalBB10alteredBB

originalBBpart218:                                ; preds = %originalBB10
  br label %112, !dbg !4328

91:                                               ; preds = %originalBBpart28
  %92 = load i32, i32* @x.59
  %93 = load i32, i32* @y.60
  %94 = sub i32 %92, 1
  %95 = mul i32 %92, %94
  %96 = urem i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %93, 10
  %99 = or i1 %97, %98
  br i1 %99, label %originalBB20, label %originalBB20alteredBB

originalBB20:                                     ; preds = %91, %originalBB20alteredBB
  %100 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %57, i32 0, i32 2, !dbg !4328
  %101 = load i8*, i8** %100, align 8, !dbg !4328
  %102 = bitcast i8* %101 to i8**, !dbg !4328
  %103 = getelementptr i8, i8* %101, i32 8, !dbg !4328
  store i8* %103, i8** %100, align 8, !dbg !4328
  %104 = load i32, i32* @x.59
  %105 = load i32, i32* @y.60
  %106 = sub i32 %104, 1
  %107 = mul i32 %104, %106
  %108 = urem i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = icmp slt i32 %105, 10
  %111 = or i1 %109, %110
  br i1 %111, label %originalBBpart222, label %originalBB20alteredBB

originalBBpart222:                                ; preds = %originalBB20
  br label %112, !dbg !4328

112:                                              ; preds = %originalBBpart222, %originalBBpart218
  %113 = phi i8** [ %81, %originalBBpart218 ], [ %102, %originalBBpart222 ], !dbg !4328
  %114 = load i32, i32* @x.59
  %115 = load i32, i32* @y.60
  %116 = sub i32 %114, 1
  %117 = mul i32 %114, %116
  %118 = urem i32 %117, 2
  %119 = icmp eq i32 %118, 0
  %120 = icmp slt i32 %115, 10
  %121 = or i1 %119, %120
  br i1 %121, label %originalBB24, label %originalBB24alteredBB

originalBB24:                                     ; preds = %112, %originalBB24alteredBB
  %122 = load i8*, i8** %113, align 8, !dbg !4328
  %123 = load i64, i64* %19, align 8, !dbg !4329
  %124 = getelementptr inbounds [10 x i8*], [10 x i8*]* %20, i64 0, i64 %123, !dbg !4330
  store i8* %122, i8** %124, align 8, !dbg !4331
  %125 = icmp ne i8* %122, null, !dbg !4332
  %126 = load i32, i32* @x.59
  %127 = load i32, i32* @y.60
  %128 = sub i32 %126, 1
  %129 = mul i32 %126, %128
  %130 = urem i32 %129, 2
  %131 = icmp eq i32 %130, 0
  %132 = icmp slt i32 %127, 10
  %133 = or i1 %131, %132
  br i1 %133, label %originalBBpart227, label %originalBB24alteredBB

originalBBpart227:                                ; preds = %originalBB24
  br label %134

134:                                              ; preds = %originalBBpart227, %originalBBpart24
  %135 = phi i1 [ false, %originalBBpart24 ], [ %125, %originalBBpart227 ], !dbg !4333
  %136 = load i32, i32* @x.59
  %137 = load i32, i32* @y.60
  %138 = sub i32 %136, 1
  %139 = mul i32 %136, %138
  %140 = urem i32 %139, 2
  %141 = icmp eq i32 %140, 0
  %142 = icmp slt i32 %137, 10
  %143 = or i1 %141, %142
  br i1 %143, label %originalBB29, label %originalBB29alteredBB

originalBB29:                                     ; preds = %134, %originalBB29alteredBB
  %144 = load i32, i32* @x.59
  %145 = load i32, i32* @y.60
  %146 = sub i32 %144, 1
  %147 = mul i32 %144, %146
  %148 = urem i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = icmp slt i32 %145, 10
  %151 = or i1 %149, %150
  br i1 %151, label %originalBBpart231, label %originalBB29alteredBB

originalBBpart231:                                ; preds = %originalBB29
  br i1 %135, label %152, label %188, !dbg !4334

152:                                              ; preds = %originalBBpart231
  %153 = load i32, i32* @x.59
  %154 = load i32, i32* @y.60
  %155 = sub i32 %153, 1
  %156 = mul i32 %153, %155
  %157 = urem i32 %156, 2
  %158 = icmp eq i32 %157, 0
  %159 = icmp slt i32 %154, 10
  %160 = or i1 %158, %159
  br i1 %160, label %originalBB33, label %originalBB33alteredBB

originalBB33:                                     ; preds = %152, %originalBB33alteredBB
  %161 = load i32, i32* @x.59
  %162 = load i32, i32* @y.60
  %163 = sub i32 %161, 1
  %164 = mul i32 %161, %163
  %165 = urem i32 %164, 2
  %166 = icmp eq i32 %165, 0
  %167 = icmp slt i32 %162, 10
  %168 = or i1 %166, %167
  br i1 %168, label %originalBBpart235, label %originalBB33alteredBB

originalBBpart235:                                ; preds = %originalBB33
  br label %169, !dbg !4334

169:                                              ; preds = %originalBBpart235
  %170 = load i32, i32* @x.59
  %171 = load i32, i32* @y.60
  %172 = sub i32 %170, 1
  %173 = mul i32 %170, %172
  %174 = urem i32 %173, 2
  %175 = icmp eq i32 %174, 0
  %176 = icmp slt i32 %171, 10
  %177 = or i1 %175, %176
  br i1 %177, label %originalBB37, label %originalBB37alteredBB

originalBB37:                                     ; preds = %169, %originalBB37alteredBB
  %178 = load i64, i64* %19, align 8, !dbg !4335
  %179 = add i64 %178, 1, !dbg !4335
  store i64 %179, i64* %19, align 8, !dbg !4335
  %180 = load i32, i32* @x.59
  %181 = load i32, i32* @y.60
  %182 = sub i32 %180, 1
  %183 = mul i32 %180, %182
  %184 = urem i32 %183, 2
  %185 = icmp eq i32 %184, 0
  %186 = icmp slt i32 %181, 10
  %187 = or i1 %185, %186
  br i1 %187, label %originalBBpart247, label %originalBB37alteredBB

originalBBpart247:                                ; preds = %originalBB37
  br label %29, !dbg !4336, !llvm.loop !4337

188:                                              ; preds = %originalBBpart231
  %189 = load i32, i32* @x.59
  %190 = load i32, i32* @y.60
  %191 = sub i32 %189, 1
  %192 = mul i32 %189, %191
  %193 = urem i32 %192, 2
  %194 = icmp eq i32 %193, 0
  %195 = icmp slt i32 %190, 10
  %196 = or i1 %194, %195
  br i1 %196, label %originalBB49, label %originalBB49alteredBB

originalBB49:                                     ; preds = %188, %originalBB49alteredBB
  %197 = load %struct._IO_FILE*, %struct._IO_FILE** %14, align 8, !dbg !4339
  %198 = load i8*, i8** %15, align 8, !dbg !4340
  %199 = load i8*, i8** %16, align 8, !dbg !4341
  %200 = load i8*, i8** %17, align 8, !dbg !4342
  %201 = getelementptr inbounds [10 x i8*], [10 x i8*]* %20, i64 0, i64 0, !dbg !4343
  %202 = load i64, i64* %19, align 8, !dbg !4344
  call void @version_etc_arn(%struct._IO_FILE* %197, i8* %198, i8* %199, i8* %200, i8** %201, i64 %202), !dbg !4345
  %203 = load i32, i32* @x.59
  %204 = load i32, i32* @y.60
  %205 = sub i32 %203, 1
  %206 = mul i32 %203, %205
  %207 = urem i32 %206, 2
  %208 = icmp eq i32 %207, 0
  %209 = icmp slt i32 %204, 10
  %210 = or i1 %208, %209
  br i1 %210, label %originalBBpart251, label %originalBB49alteredBB

originalBBpart251:                                ; preds = %originalBB49
  ret void, !dbg !4346

originalBBalteredBB:                              ; preds = %originalBB, %5
  %211 = alloca %struct._IO_FILE*, align 8
  %212 = alloca i8*, align 8
  %213 = alloca i8*, align 8
  %214 = alloca i8*, align 8
  %215 = alloca %struct.__va_list_tag*, align 8
  %216 = alloca i64, align 8
  %217 = alloca [10 x i8*], align 16
  store %struct._IO_FILE* %0, %struct._IO_FILE** %211, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %211, metadata !4347, metadata !DIExpression()), !dbg !4307
  store i8* %1, i8** %212, align 8
  call void @llvm.dbg.declare(metadata i8** %212, metadata !4393, metadata !DIExpression()), !dbg !4309
  store i8* %2, i8** %213, align 8
  call void @llvm.dbg.declare(metadata i8** %213, metadata !4394, metadata !DIExpression()), !dbg !4311
  store i8* %3, i8** %214, align 8
  call void @llvm.dbg.declare(metadata i8** %214, metadata !4395, metadata !DIExpression()), !dbg !4313
  store %struct.__va_list_tag* %4, %struct.__va_list_tag** %215, align 8
  call void @llvm.dbg.declare(metadata %struct.__va_list_tag** %215, metadata !4396, metadata !DIExpression()), !dbg !4315
  call void @llvm.dbg.declare(metadata i64* %216, metadata !4397, metadata !DIExpression()), !dbg !4317
  call void @llvm.dbg.declare(metadata [10 x i8*]* %217, metadata !4398, metadata !DIExpression()), !dbg !4320
  store i64 0, i64* %216, align 8, !dbg !4321
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %29
  %218 = load i64, i64* %19, align 8, !dbg !4324
  %219 = icmp ult i64 %218, 10, !dbg !4326
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %48
  %220 = load %struct.__va_list_tag*, %struct.__va_list_tag** %18, align 8, !dbg !4328
  %221 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %220, i32 0, i32 0, !dbg !4328
  %222 = load i32, i32* %221, align 8, !dbg !4328
  %223 = icmp ule i32 %222, 40, !dbg !4328
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %69
  %224 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %57, i32 0, i32 3, !dbg !4328
  %225 = load i8*, i8** %224, align 8, !dbg !4328
  %226 = getelementptr i8, i8* %225, i32 %59, !dbg !4328
  %227 = bitcast i8* %226 to i8**, !dbg !4328
  %_ = sub i32 0, %59
  %gen = add i32 %_, 8
  %_11 = shl i32 %59, 8
  %_12 = shl i32 %59, 8
  %_13 = sub i32 %59, 8
  %gen14 = mul i32 %_13, 8
  %_15 = sub i32 %59, 8
  %gen16 = mul i32 %_15, 8
  %228 = add i32 %59, 8, !dbg !4328
  store i32 %228, i32* %58, align 8, !dbg !4328
  br label %originalBB10

originalBB20alteredBB:                            ; preds = %originalBB20, %91
  %229 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %57, i32 0, i32 2, !dbg !4328
  %230 = load i8*, i8** %229, align 8, !dbg !4328
  %231 = bitcast i8* %230 to i8**, !dbg !4328
  %232 = getelementptr i8, i8* %230, i32 8, !dbg !4328
  store i8* %232, i8** %229, align 8, !dbg !4328
  br label %originalBB20

originalBB24alteredBB:                            ; preds = %originalBB24, %112
  %233 = load i8*, i8** %113, align 8, !dbg !4328
  %234 = load i64, i64* %19, align 8, !dbg !4329
  %235 = getelementptr inbounds [10 x i8*], [10 x i8*]* %20, i64 0, i64 %234, !dbg !4330
  store i8* %233, i8** %235, align 8, !dbg !4331
  %236 = icmp ne i8* %233, null, !dbg !4332
  br label %originalBB24

originalBB29alteredBB:                            ; preds = %originalBB29, %134
  br label %originalBB29

originalBB33alteredBB:                            ; preds = %originalBB33, %152
  br label %originalBB33

originalBB37alteredBB:                            ; preds = %originalBB37, %169
  %237 = load i64, i64* %19, align 8, !dbg !4335
  %_38 = sub i64 %237, 1
  %gen39 = mul i64 %_38, 1
  %_40 = sub i64 0, %237
  %gen41 = add i64 %_40, 1
  %_42 = sub i64 %237, 1
  %gen43 = mul i64 %_42, 1
  %_44 = sub i64 %237, 1
  %gen45 = mul i64 %_44, 1
  %238 = add i64 %237, 1, !dbg !4335
  store i64 %238, i64* %19, align 8, !dbg !4335
  br label %originalBB37

originalBB49alteredBB:                            ; preds = %originalBB49, %188
  %239 = load %struct._IO_FILE*, %struct._IO_FILE** %14, align 8, !dbg !4339
  %240 = load i8*, i8** %15, align 8, !dbg !4340
  %241 = load i8*, i8** %16, align 8, !dbg !4341
  %242 = load i8*, i8** %17, align 8, !dbg !4342
  %243 = getelementptr inbounds [10 x i8*], [10 x i8*]* %20, i64 0, i64 0, !dbg !4343
  %244 = load i64, i64* %19, align 8, !dbg !4344
  call void @version_etc_arn(%struct._IO_FILE* %239, i8* %240, i8* %241, i8* %242, i8** %243, i64 %244), !dbg !4345
  br label %originalBB49
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @version_etc(%struct._IO_FILE*, i8*, i8*, i8*, ...) #4 !dbg !4399 {
  %5 = load i32, i32* @x.61
  %6 = load i32, i32* @y.62
  %7 = sub i32 %5, 1
  %8 = mul i32 %5, %7
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %6, 10
  %12 = or i1 %10, %11
  br i1 %12, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %4, %originalBBalteredBB
  %13 = alloca %struct._IO_FILE*, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i8*, align 8
  %16 = alloca i8*, align 8
  %17 = alloca [1 x %struct.__va_list_tag], align 16
  store %struct._IO_FILE* %0, %struct._IO_FILE** %13, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %13, metadata !4402, metadata !DIExpression()), !dbg !4403
  store i8* %1, i8** %14, align 8
  call void @llvm.dbg.declare(metadata i8** %14, metadata !4404, metadata !DIExpression()), !dbg !4405
  store i8* %2, i8** %15, align 8
  call void @llvm.dbg.declare(metadata i8** %15, metadata !4406, metadata !DIExpression()), !dbg !4407
  store i8* %3, i8** %16, align 8
  call void @llvm.dbg.declare(metadata i8** %16, metadata !4408, metadata !DIExpression()), !dbg !4409
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %17, metadata !4410, metadata !DIExpression()), !dbg !4416
  %18 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %17, i64 0, i64 0, !dbg !4417
  %19 = bitcast %struct.__va_list_tag* %18 to i8*, !dbg !4417
  call void @llvm.va_start(i8* %19), !dbg !4417
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !4418
  %21 = load i8*, i8** %14, align 8, !dbg !4419
  %22 = load i8*, i8** %15, align 8, !dbg !4420
  %23 = load i8*, i8** %16, align 8, !dbg !4421
  %24 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %17, i64 0, i64 0, !dbg !4422
  call void @version_etc_va(%struct._IO_FILE* %20, i8* %21, i8* %22, i8* %23, %struct.__va_list_tag* %24), !dbg !4423
  %25 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %17, i64 0, i64 0, !dbg !4424
  %26 = bitcast %struct.__va_list_tag* %25 to i8*, !dbg !4424
  call void @llvm.va_end(i8* %26), !dbg !4424
  %27 = load i32, i32* @x.61
  %28 = load i32, i32* @y.62
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void, !dbg !4425

originalBBalteredBB:                              ; preds = %originalBB, %4
  %35 = alloca %struct._IO_FILE*, align 8
  %36 = alloca i8*, align 8
  %37 = alloca i8*, align 8
  %38 = alloca i8*, align 8
  %39 = alloca [1 x %struct.__va_list_tag], align 16
  store %struct._IO_FILE* %0, %struct._IO_FILE** %35, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %35, metadata !4426, metadata !DIExpression()), !dbg !4403
  store i8* %1, i8** %36, align 8
  call void @llvm.dbg.declare(metadata i8** %36, metadata !4465, metadata !DIExpression()), !dbg !4405
  store i8* %2, i8** %37, align 8
  call void @llvm.dbg.declare(metadata i8** %37, metadata !4466, metadata !DIExpression()), !dbg !4407
  store i8* %3, i8** %38, align 8
  call void @llvm.dbg.declare(metadata i8** %38, metadata !4467, metadata !DIExpression()), !dbg !4409
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %39, metadata !4468, metadata !DIExpression()), !dbg !4416
  %40 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %39, i64 0, i64 0, !dbg !4417
  %41 = bitcast %struct.__va_list_tag* %40 to i8*, !dbg !4417
  call void @llvm.va_start(i8* %41), !dbg !4417
  %42 = load %struct._IO_FILE*, %struct._IO_FILE** %35, align 8, !dbg !4418
  %43 = load i8*, i8** %36, align 8, !dbg !4419
  %44 = load i8*, i8** %37, align 8, !dbg !4420
  %45 = load i8*, i8** %38, align 8, !dbg !4421
  %46 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %39, i64 0, i64 0, !dbg !4422
  call void @version_etc_va(%struct._IO_FILE* %42, i8* %43, i8* %44, i8* %45, %struct.__va_list_tag* %46), !dbg !4423
  %47 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %39, i64 0, i64 0, !dbg !4424
  %48 = bitcast %struct.__va_list_tag* %47 to i8*, !dbg !4424
  call void @llvm.va_end(i8* %48), !dbg !4424
  br label %originalBB
}

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #10

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #10

; Function Attrs: noinline nounwind optnone uwtable
define internal noalias i8* @xmalloc(i64) #4 !dbg !4479 {
  %2 = load i32, i32* @x.63
  %3 = load i32, i32* @y.64
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i64, align 8
  %11 = alloca i8*, align 8
  store i64 %0, i64* %10, align 8
  call void @llvm.dbg.declare(metadata i64* %10, metadata !4483, metadata !DIExpression()), !dbg !4484
  call void @llvm.dbg.declare(metadata i8** %11, metadata !4485, metadata !DIExpression()), !dbg !4486
  %12 = load i64, i64* %10, align 8, !dbg !4487
  %13 = call noalias i8* @malloc(i64 %12) #10, !dbg !4488
  store i8* %13, i8** %11, align 8, !dbg !4486
  %14 = load i8*, i8** %11, align 8, !dbg !4489
  %15 = icmp ne i8* %14, null, !dbg !4489
  %16 = load i32, i32* @x.63
  %17 = load i32, i32* @y.64
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %15, label %60, label %24, !dbg !4491

24:                                               ; preds = %originalBBpart2
  %25 = load i32, i32* @x.63
  %26 = load i32, i32* @y.64
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %24, %originalBB1alteredBB
  %33 = load i64, i64* %10, align 8, !dbg !4492
  %34 = icmp ne i64 %33, 0, !dbg !4493
  %35 = load i32, i32* @x.63
  %36 = load i32, i32* @y.64
  %37 = sub i32 %35, 1
  %38 = mul i32 %35, %37
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %40, %41
  br i1 %42, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %34, label %43, label %60, !dbg !4494

43:                                               ; preds = %originalBBpart24
  %44 = load i32, i32* @x.63
  %45 = load i32, i32* @y.64
  %46 = sub i32 %44, 1
  %47 = mul i32 %44, %46
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %45, 10
  %51 = or i1 %49, %50
  br i1 %51, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %43, %originalBB6alteredBB
  call void @xalloc_die() #14, !dbg !4495
  %52 = load i32, i32* @x.63
  %53 = load i32, i32* @y.64
  %54 = sub i32 %52, 1
  %55 = mul i32 %52, %54
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %53, 10
  %59 = or i1 %57, %58
  br i1 %59, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  unreachable, !dbg !4495

60:                                               ; preds = %originalBBpart24, %originalBBpart2
  %61 = load i32, i32* @x.63
  %62 = load i32, i32* @y.64
  %63 = sub i32 %61, 1
  %64 = mul i32 %61, %63
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %62, 10
  %68 = or i1 %66, %67
  br i1 %68, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %60, %originalBB10alteredBB
  %69 = load i8*, i8** %11, align 8, !dbg !4496
  %70 = load i32, i32* @x.63
  %71 = load i32, i32* @y.64
  %72 = sub i32 %70, 1
  %73 = mul i32 %70, %72
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %71, 10
  %77 = or i1 %75, %76
  br i1 %77, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  ret i8* %69, !dbg !4497

originalBBalteredBB:                              ; preds = %originalBB, %1
  %78 = alloca i64, align 8
  %79 = alloca i8*, align 8
  store i64 %0, i64* %78, align 8
  call void @llvm.dbg.declare(metadata i64* %78, metadata !4498, metadata !DIExpression()), !dbg !4484
  call void @llvm.dbg.declare(metadata i8** %79, metadata !4501, metadata !DIExpression()), !dbg !4486
  %80 = load i64, i64* %78, align 8, !dbg !4487
  %81 = call noalias i8* @malloc(i64 %80) #10, !dbg !4488
  store i8* %81, i8** %79, align 8, !dbg !4486
  %82 = load i8*, i8** %79, align 8, !dbg !4489
  %83 = icmp ne i8* %82, null, !dbg !4489
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %24
  %84 = load i64, i64* %10, align 8, !dbg !4492
  %85 = icmp ne i64 %84, 0, !dbg !4493
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %43
  call void @xalloc_die() #14, !dbg !4495
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %60
  %86 = load i8*, i8** %11, align 8, !dbg !4496
  br label %originalBB10
}

; Function Attrs: nounwind
declare dso_local noalias i8* @malloc(i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @xrealloc(i8*, i64) #4 !dbg !4502 {
  %3 = load i32, i32* @x.65
  %4 = load i32, i32* @y.66
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i64, align 8
  store i8* %0, i8** %12, align 8
  call void @llvm.dbg.declare(metadata i8** %12, metadata !4505, metadata !DIExpression()), !dbg !4506
  store i64 %1, i64* %13, align 8
  call void @llvm.dbg.declare(metadata i64* %13, metadata !4507, metadata !DIExpression()), !dbg !4508
  %14 = load i64, i64* %13, align 8, !dbg !4509
  %15 = icmp ne i64 %14, 0, !dbg !4509
  %16 = load i32, i32* @x.65
  %17 = load i32, i32* @y.66
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %15, label %61, label %24, !dbg !4511

24:                                               ; preds = %originalBBpart2
  %25 = load i32, i32* @x.65
  %26 = load i32, i32* @y.66
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %24, %originalBB1alteredBB
  %33 = load i8*, i8** %12, align 8, !dbg !4512
  %34 = icmp ne i8* %33, null, !dbg !4512
  %35 = load i32, i32* @x.65
  %36 = load i32, i32* @y.66
  %37 = sub i32 %35, 1
  %38 = mul i32 %35, %37
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %40, %41
  br i1 %42, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %34, label %43, label %61, !dbg !4513

43:                                               ; preds = %originalBBpart24
  %44 = load i32, i32* @x.65
  %45 = load i32, i32* @y.66
  %46 = sub i32 %44, 1
  %47 = mul i32 %44, %46
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %45, 10
  %51 = or i1 %49, %50
  br i1 %51, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %43, %originalBB6alteredBB
  %52 = load i8*, i8** %12, align 8, !dbg !4514
  call void @free(i8* %52) #10, !dbg !4516
  store i8* null, i8** %11, align 8, !dbg !4517
  %53 = load i32, i32* @x.65
  %54 = load i32, i32* @y.66
  %55 = sub i32 %53, 1
  %56 = mul i32 %53, %55
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %54, 10
  %60 = or i1 %58, %59
  br i1 %60, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %137, !dbg !4517

61:                                               ; preds = %originalBBpart24, %originalBBpart2
  %62 = load i32, i32* @x.65
  %63 = load i32, i32* @y.66
  %64 = sub i32 %62, 1
  %65 = mul i32 %62, %64
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %63, 10
  %69 = or i1 %67, %68
  br i1 %69, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %61, %originalBB10alteredBB
  %70 = load i8*, i8** %12, align 8, !dbg !4518
  %71 = load i64, i64* %13, align 8, !dbg !4519
  %72 = call i8* @realloc(i8* %70, i64 %71) #10, !dbg !4520
  store i8* %72, i8** %12, align 8, !dbg !4521
  %73 = load i8*, i8** %12, align 8, !dbg !4522
  %74 = icmp ne i8* %73, null, !dbg !4522
  %75 = load i32, i32* @x.65
  %76 = load i32, i32* @y.66
  %77 = sub i32 %75, 1
  %78 = mul i32 %75, %77
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %76, 10
  %82 = or i1 %80, %81
  br i1 %82, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %74, label %119, label %83, !dbg !4524

83:                                               ; preds = %originalBBpart212
  %84 = load i32, i32* @x.65
  %85 = load i32, i32* @y.66
  %86 = sub i32 %84, 1
  %87 = mul i32 %84, %86
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %85, 10
  %91 = or i1 %89, %90
  br i1 %91, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %83, %originalBB14alteredBB
  %92 = load i64, i64* %13, align 8, !dbg !4525
  %93 = icmp ne i64 %92, 0, !dbg !4525
  %94 = load i32, i32* @x.65
  %95 = load i32, i32* @y.66
  %96 = sub i32 %94, 1
  %97 = mul i32 %94, %96
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %95, 10
  %101 = or i1 %99, %100
  br i1 %101, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %93, label %102, label %119, !dbg !4526

102:                                              ; preds = %originalBBpart216
  %103 = load i32, i32* @x.65
  %104 = load i32, i32* @y.66
  %105 = sub i32 %103, 1
  %106 = mul i32 %103, %105
  %107 = urem i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %104, 10
  %110 = or i1 %108, %109
  br i1 %110, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %102, %originalBB18alteredBB
  call void @xalloc_die() #14, !dbg !4527
  %111 = load i32, i32* @x.65
  %112 = load i32, i32* @y.66
  %113 = sub i32 %111, 1
  %114 = mul i32 %111, %113
  %115 = urem i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %112, 10
  %118 = or i1 %116, %117
  br i1 %118, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  unreachable, !dbg !4527

119:                                              ; preds = %originalBBpart216, %originalBBpart212
  %120 = load i32, i32* @x.65
  %121 = load i32, i32* @y.66
  %122 = sub i32 %120, 1
  %123 = mul i32 %120, %122
  %124 = urem i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = icmp slt i32 %121, 10
  %127 = or i1 %125, %126
  br i1 %127, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %119, %originalBB22alteredBB
  %128 = load i8*, i8** %12, align 8, !dbg !4528
  store i8* %128, i8** %11, align 8, !dbg !4529
  %129 = load i32, i32* @x.65
  %130 = load i32, i32* @y.66
  %131 = sub i32 %129, 1
  %132 = mul i32 %129, %131
  %133 = urem i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = icmp slt i32 %130, 10
  %136 = or i1 %134, %135
  br i1 %136, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br label %137, !dbg !4529

137:                                              ; preds = %originalBBpart224, %originalBBpart28
  %138 = load i32, i32* @x.65
  %139 = load i32, i32* @y.66
  %140 = sub i32 %138, 1
  %141 = mul i32 %138, %140
  %142 = urem i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = icmp slt i32 %139, 10
  %145 = or i1 %143, %144
  br i1 %145, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %137, %originalBB26alteredBB
  %146 = load i8*, i8** %11, align 8, !dbg !4530
  %147 = load i32, i32* @x.65
  %148 = load i32, i32* @y.66
  %149 = sub i32 %147, 1
  %150 = mul i32 %147, %149
  %151 = urem i32 %150, 2
  %152 = icmp eq i32 %151, 0
  %153 = icmp slt i32 %148, 10
  %154 = or i1 %152, %153
  br i1 %154, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  ret i8* %146, !dbg !4530

originalBBalteredBB:                              ; preds = %originalBB, %2
  %155 = alloca i8*, align 8
  %156 = alloca i8*, align 8
  %157 = alloca i64, align 8
  store i8* %0, i8** %156, align 8
  call void @llvm.dbg.declare(metadata i8** %156, metadata !4531, metadata !DIExpression()), !dbg !4506
  store i64 %1, i64* %157, align 8
  call void @llvm.dbg.declare(metadata i64* %157, metadata !4534, metadata !DIExpression()), !dbg !4508
  %158 = load i64, i64* %157, align 8, !dbg !4509
  %159 = icmp ne i64 %158, 0, !dbg !4509
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %24
  %160 = load i8*, i8** %12, align 8, !dbg !4512
  %161 = icmp ne i8* %160, null, !dbg !4512
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %43
  %162 = load i8*, i8** %12, align 8, !dbg !4514
  call void @free(i8* %162) #10, !dbg !4516
  store i8* null, i8** %11, align 8, !dbg !4517
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %61
  %163 = load i8*, i8** %12, align 8, !dbg !4518
  %164 = load i64, i64* %13, align 8, !dbg !4519
  %165 = call i8* @realloc(i8* %163, i64 %164) #10, !dbg !4520
  store i8* %165, i8** %12, align 8, !dbg !4521
  %166 = load i8*, i8** %12, align 8, !dbg !4522
  %167 = icmp ne i8* %166, null, !dbg !4522
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %83
  %168 = load i64, i64* %13, align 8, !dbg !4525
  %169 = icmp ne i64 %168, 0, !dbg !4525
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %102
  call void @xalloc_die() #14, !dbg !4527
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %119
  %170 = load i8*, i8** %12, align 8, !dbg !4528
  store i8* %170, i8** %11, align 8, !dbg !4529
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %137
  %171 = load i8*, i8** %11, align 8, !dbg !4530
  br label %originalBB26
}

; Function Attrs: nounwind
declare dso_local i8* @realloc(i8*, i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal noalias i8* @xcharalloc(i64) #4 !dbg !4535 {
  %2 = load i32, i32* @x.67
  %3 = load i32, i32* @y.68
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i64, align 8
  store i64 %0, i64* %10, align 8
  call void @llvm.dbg.declare(metadata i64* %10, metadata !4539, metadata !DIExpression()), !dbg !4540
  %11 = load i64, i64* %10, align 8, !dbg !4541
  %12 = call noalias i8* @xmalloc(i64 %11), !dbg !4541
  %13 = load i32, i32* @x.67
  %14 = load i32, i32* @y.68
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i8* %12, !dbg !4542

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca i64, align 8
  store i64 %0, i64* %21, align 8
  call void @llvm.dbg.declare(metadata i64* %21, metadata !4543, metadata !DIExpression()), !dbg !4540
  %22 = load i64, i64* %21, align 8, !dbg !4541
  %23 = call noalias i8* @xmalloc(i64 %22), !dbg !4541
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @xmemdup(i8*, i64) #4 !dbg !4546 {
  %3 = load i32, i32* @x.69
  %4 = load i32, i32* @y.70
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca i8*, align 8
  %12 = alloca i64, align 8
  store i8* %0, i8** %11, align 8
  call void @llvm.dbg.declare(metadata i8** %11, metadata !4551, metadata !DIExpression()), !dbg !4552
  store i64 %1, i64* %12, align 8
  call void @llvm.dbg.declare(metadata i64* %12, metadata !4553, metadata !DIExpression()), !dbg !4554
  %13 = load i64, i64* %12, align 8, !dbg !4555
  %14 = call noalias i8* @xmalloc(i64 %13), !dbg !4556
  %15 = load i8*, i8** %11, align 8, !dbg !4557
  %16 = load i64, i64* %12, align 8, !dbg !4558
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %14, i8* align 1 %15, i64 %16, i1 false), !dbg !4559
  %17 = load i32, i32* @x.69
  %18 = load i32, i32* @y.70
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i8* %14, !dbg !4560

originalBBalteredBB:                              ; preds = %originalBB, %2
  %25 = alloca i8*, align 8
  %26 = alloca i64, align 8
  store i8* %0, i8** %25, align 8
  call void @llvm.dbg.declare(metadata i8** %25, metadata !4561, metadata !DIExpression()), !dbg !4552
  store i64 %1, i64* %26, align 8
  call void @llvm.dbg.declare(metadata i64* %26, metadata !4564, metadata !DIExpression()), !dbg !4554
  %27 = load i64, i64* %26, align 8, !dbg !4555
  %28 = call noalias i8* @xmalloc(i64 %27), !dbg !4556
  %29 = load i8*, i8** %25, align 8, !dbg !4557
  %30 = load i64, i64* %26, align 8, !dbg !4558
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %28, i8* align 1 %29, i64 %30, i1 false), !dbg !4559
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal noalias i8* @xstrdup(i8*) #4 !dbg !4565 {
  %2 = load i32, i32* @x.71
  %3 = load i32, i32* @y.72
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i8*, align 8
  store i8* %0, i8** %10, align 8
  call void @llvm.dbg.declare(metadata i8** %10, metadata !4566, metadata !DIExpression()), !dbg !4567
  %11 = load i8*, i8** %10, align 8, !dbg !4568
  %12 = load i8*, i8** %10, align 8, !dbg !4569
  %13 = call i64 @strlen(i8* %12) #13, !dbg !4570
  %14 = add i64 %13, 1, !dbg !4571
  %15 = call i8* @xmemdup(i8* %11, i64 %14), !dbg !4572
  %16 = load i32, i32* @x.71
  %17 = load i32, i32* @y.72
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i8* %15, !dbg !4573

originalBBalteredBB:                              ; preds = %originalBB, %1
  %24 = alloca i8*, align 8
  store i8* %0, i8** %24, align 8
  call void @llvm.dbg.declare(metadata i8** %24, metadata !4574, metadata !DIExpression()), !dbg !4567
  %25 = load i8*, i8** %24, align 8, !dbg !4568
  %26 = load i8*, i8** %24, align 8, !dbg !4569
  %27 = call i64 @strlen(i8* %26) #13, !dbg !4570
  %_ = sub i64 0, %27
  %gen = add i64 %_, 1
  %_1 = sub i64 %27, 1
  %gen2 = mul i64 %_1, 1
  %28 = add i64 %27, 1, !dbg !4571
  %29 = call i8* @xmemdup(i8* %25, i64 %28), !dbg !4572
  br label %originalBB
}

; Function Attrs: noinline noreturn nounwind optnone uwtable
define internal void @xalloc_die() #0 !dbg !4577 {
  %1 = load i32, i32* @x.73
  %2 = load i32, i32* @y.74
  %3 = sub i32 %1, 1
  %4 = mul i32 %1, %3
  %5 = urem i32 %4, 2
  %6 = icmp eq i32 %5, 0
  %7 = icmp slt i32 %2, 10
  %8 = or i1 %6, %7
  br i1 %8, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %0, %originalBBalteredBB
  %9 = load volatile i32, i32* @exit_failure, align 4, !dbg !4579
  %10 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1.136, i64 0, i64 0)) #10, !dbg !4580
  call void (i32, i32, i8*, ...) @error(i32 %9, i32 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.137, i64 0, i64 0), i8* %10), !dbg !4581
  call void @abort() #12, !dbg !4582
  %11 = load i32, i32* @x.73
  %12 = load i32, i32* @y.74
  %13 = sub i32 %11, 1
  %14 = mul i32 %11, %13
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = icmp slt i32 %12, 10
  %18 = or i1 %16, %17
  br i1 %18, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  unreachable, !dbg !4582

originalBBalteredBB:                              ; preds = %originalBB, %0
  %19 = load volatile i32, i32* @exit_failure, align 4, !dbg !4579
  %20 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1.136, i64 0, i64 0)) #10, !dbg !4580
  call void (i32, i32, i8*, ...) @error(i32 %19, i32 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.137, i64 0, i64 0), i8* %20), !dbg !4581
  call void @abort() #12, !dbg !4582
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @xgetgroups(i8*, i32, i32**) #4 !dbg !4583 {
  %4 = load i32, i32* @x.75
  %5 = load i32, i32* @y.76
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca i8*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32**, align 8
  %15 = alloca i32, align 4
  store i8* %0, i8** %12, align 8
  call void @llvm.dbg.declare(metadata i8** %12, metadata !4588, metadata !DIExpression()), !dbg !4589
  store i32 %1, i32* %13, align 4
  call void @llvm.dbg.declare(metadata i32* %13, metadata !4590, metadata !DIExpression()), !dbg !4591
  store i32** %2, i32*** %14, align 8
  call void @llvm.dbg.declare(metadata i32*** %14, metadata !4592, metadata !DIExpression()), !dbg !4593
  call void @llvm.dbg.declare(metadata i32* %15, metadata !4594, metadata !DIExpression()), !dbg !4595
  %16 = load i8*, i8** %12, align 8, !dbg !4596
  %17 = load i32, i32* %13, align 4, !dbg !4597
  %18 = load i32**, i32*** %14, align 8, !dbg !4598
  %19 = call i32 @mgetgroups(i8* %16, i32 %17, i32** %18), !dbg !4599
  store i32 %19, i32* %15, align 4, !dbg !4595
  %20 = load i32, i32* %15, align 4, !dbg !4600
  %21 = icmp eq i32 %20, -1, !dbg !4602
  %22 = load i32, i32* @x.75
  %23 = load i32, i32* @y.76
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %21, label %30, label %67, !dbg !4603

30:                                               ; preds = %originalBBpart2
  %31 = load i32, i32* @x.75
  %32 = load i32, i32* @y.76
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %30, %originalBB1alteredBB
  %39 = call i32* @__errno_location() #15, !dbg !4604
  %40 = load i32, i32* %39, align 4, !dbg !4604
  %41 = icmp eq i32 %40, 12, !dbg !4605
  %42 = load i32, i32* @x.75
  %43 = load i32, i32* @y.76
  %44 = sub i32 %42, 1
  %45 = mul i32 %42, %44
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %47, %48
  br i1 %49, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %41, label %50, label %67, !dbg !4606

50:                                               ; preds = %originalBBpart24
  %51 = load i32, i32* @x.75
  %52 = load i32, i32* @y.76
  %53 = sub i32 %51, 1
  %54 = mul i32 %51, %53
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %52, 10
  %58 = or i1 %56, %57
  br i1 %58, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %50, %originalBB6alteredBB
  call void @xalloc_die() #14, !dbg !4607
  %59 = load i32, i32* @x.75
  %60 = load i32, i32* @y.76
  %61 = sub i32 %59, 1
  %62 = mul i32 %59, %61
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %60, 10
  %66 = or i1 %64, %65
  br i1 %66, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  unreachable, !dbg !4607

67:                                               ; preds = %originalBBpart24, %originalBBpart2
  %68 = load i32, i32* @x.75
  %69 = load i32, i32* @y.76
  %70 = sub i32 %68, 1
  %71 = mul i32 %68, %70
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %69, 10
  %75 = or i1 %73, %74
  br i1 %75, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %67, %originalBB10alteredBB
  %76 = load i32, i32* %15, align 4, !dbg !4608
  %77 = load i32, i32* @x.75
  %78 = load i32, i32* @y.76
  %79 = sub i32 %77, 1
  %80 = mul i32 %77, %79
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %78, 10
  %84 = or i1 %82, %83
  br i1 %84, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  ret i32 %76, !dbg !4609

originalBBalteredBB:                              ; preds = %originalBB, %3
  %85 = alloca i8*, align 8
  %86 = alloca i32, align 4
  %87 = alloca i32**, align 8
  %88 = alloca i32, align 4
  store i8* %0, i8** %85, align 8
  call void @llvm.dbg.declare(metadata i8** %85, metadata !4610, metadata !DIExpression()), !dbg !4589
  store i32 %1, i32* %86, align 4
  call void @llvm.dbg.declare(metadata i32* %86, metadata !4613, metadata !DIExpression()), !dbg !4591
  store i32** %2, i32*** %87, align 8
  call void @llvm.dbg.declare(metadata i32*** %87, metadata !4614, metadata !DIExpression()), !dbg !4593
  call void @llvm.dbg.declare(metadata i32* %88, metadata !4615, metadata !DIExpression()), !dbg !4595
  %89 = load i8*, i8** %85, align 8, !dbg !4596
  %90 = load i32, i32* %86, align 4, !dbg !4597
  %91 = load i32**, i32*** %87, align 8, !dbg !4598
  %92 = call i32 @mgetgroups(i8* %89, i32 %90, i32** %91), !dbg !4599
  store i32 %92, i32* %88, align 4, !dbg !4595
  %93 = load i32, i32* %88, align 4, !dbg !4600
  %94 = icmp eq i32 %93, -1, !dbg !4602
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %30
  %95 = call i32* @__errno_location() #15, !dbg !4604
  %96 = load i32, i32* %95, align 4, !dbg !4604
  %97 = icmp eq i32 %96, 12, !dbg !4605
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %50
  call void @xalloc_die() #14, !dbg !4607
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %67
  %98 = load i32, i32* %15, align 4, !dbg !4608
  br label %originalBB10
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @xstrtoul(i8*, i8**, i32, i64*, i8*) #4 !dbg !4616 {
  %6 = load i32, i32* @x.77
  %7 = load i32, i32* @y.78
  %8 = sub i32 %6, 1
  %9 = mul i32 %6, %8
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %7, 10
  %13 = or i1 %11, %12
  br i1 %13, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %5, %originalBBalteredBB
  %14 = alloca i32, align 4
  %15 = alloca i8*, align 8
  %16 = alloca i8**, align 8
  %17 = alloca i32, align 4
  %18 = alloca i64*, align 8
  %19 = alloca i8*, align 8
  %20 = alloca i8*, align 8
  %21 = alloca i8**, align 8
  %22 = alloca i64, align 8
  %23 = alloca i32, align 4
  %24 = alloca i8*, align 8
  %25 = alloca i8, align 1
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  store i8* %0, i8** %15, align 8
  call void @llvm.dbg.declare(metadata i8** %15, metadata !4622, metadata !DIExpression()), !dbg !4623
  store i8** %1, i8*** %16, align 8
  call void @llvm.dbg.declare(metadata i8*** %16, metadata !4624, metadata !DIExpression()), !dbg !4625
  store i32 %2, i32* %17, align 4
  call void @llvm.dbg.declare(metadata i32* %17, metadata !4626, metadata !DIExpression()), !dbg !4627
  store i64* %3, i64** %18, align 8
  call void @llvm.dbg.declare(metadata i64** %18, metadata !4628, metadata !DIExpression()), !dbg !4629
  store i8* %4, i8** %19, align 8
  call void @llvm.dbg.declare(metadata i8** %19, metadata !4630, metadata !DIExpression()), !dbg !4631
  call void @llvm.dbg.declare(metadata i8** %20, metadata !4632, metadata !DIExpression()), !dbg !4633
  call void @llvm.dbg.declare(metadata i8*** %21, metadata !4634, metadata !DIExpression()), !dbg !4635
  call void @llvm.dbg.declare(metadata i64* %22, metadata !4636, metadata !DIExpression()), !dbg !4637
  call void @llvm.dbg.declare(metadata i32* %23, metadata !4638, metadata !DIExpression()), !dbg !4639
  store i32 0, i32* %23, align 4, !dbg !4639
  %29 = load i32, i32* %17, align 4, !dbg !4640
  %30 = icmp sle i32 0, %29, !dbg !4640
  %31 = load i32, i32* @x.77
  %32 = load i32, i32* @y.78
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %30, label %39, label %75, !dbg !4640

39:                                               ; preds = %originalBBpart2
  %40 = load i32, i32* @x.77
  %41 = load i32, i32* @y.78
  %42 = sub i32 %40, 1
  %43 = mul i32 %40, %42
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %45, %46
  br i1 %47, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %39, %originalBB1alteredBB
  %48 = load i32, i32* %17, align 4, !dbg !4640
  %49 = icmp sle i32 %48, 36, !dbg !4640
  %50 = load i32, i32* @x.77
  %51 = load i32, i32* @y.78
  %52 = sub i32 %50, 1
  %53 = mul i32 %50, %52
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %51, 10
  %57 = or i1 %55, %56
  br i1 %57, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %49, label %58, label %75, !dbg !4643

58:                                               ; preds = %originalBBpart24
  %59 = load i32, i32* @x.77
  %60 = load i32, i32* @y.78
  %61 = sub i32 %59, 1
  %62 = mul i32 %59, %61
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %60, 10
  %66 = or i1 %64, %65
  br i1 %66, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %58, %originalBB6alteredBB
  %67 = load i32, i32* @x.77
  %68 = load i32, i32* @y.78
  %69 = sub i32 %67, 1
  %70 = mul i32 %67, %69
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %68, 10
  %74 = or i1 %72, %73
  br i1 %74, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %92, !dbg !4643

75:                                               ; preds = %originalBBpart24, %originalBBpart2
  %76 = load i32, i32* @x.77
  %77 = load i32, i32* @y.78
  %78 = sub i32 %76, 1
  %79 = mul i32 %76, %78
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %77, 10
  %83 = or i1 %81, %82
  br i1 %83, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %75, %originalBB10alteredBB
  call void @__assert_fail(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.142, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.143, i64 0, i64 0), i32 84, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @__PRETTY_FUNCTION__.xstrtoul, i64 0, i64 0)) #12, !dbg !4640
  %84 = load i32, i32* @x.77
  %85 = load i32, i32* @y.78
  %86 = sub i32 %84, 1
  %87 = mul i32 %84, %86
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %85, 10
  %91 = or i1 %89, %90
  br i1 %91, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  unreachable, !dbg !4640

92:                                               ; preds = %originalBBpart28
  %93 = load i32, i32* @x.77
  %94 = load i32, i32* @y.78
  %95 = sub i32 %93, 1
  %96 = mul i32 %93, %95
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %94, 10
  %100 = or i1 %98, %99
  br i1 %100, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %92, %originalBB14alteredBB
  %101 = load i8**, i8*** %16, align 8, !dbg !4644
  %102 = icmp ne i8** %101, null, !dbg !4644
  %103 = load i32, i32* @x.77
  %104 = load i32, i32* @y.78
  %105 = sub i32 %103, 1
  %106 = mul i32 %103, %105
  %107 = urem i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %104, 10
  %110 = or i1 %108, %109
  br i1 %110, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %102, label %111, label %129, !dbg !4644

111:                                              ; preds = %originalBBpart216
  %112 = load i32, i32* @x.77
  %113 = load i32, i32* @y.78
  %114 = sub i32 %112, 1
  %115 = mul i32 %112, %114
  %116 = urem i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = icmp slt i32 %113, 10
  %119 = or i1 %117, %118
  br i1 %119, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %111, %originalBB18alteredBB
  %120 = load i8**, i8*** %16, align 8, !dbg !4645
  %121 = load i32, i32* @x.77
  %122 = load i32, i32* @y.78
  %123 = sub i32 %121, 1
  %124 = mul i32 %121, %123
  %125 = urem i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %122, 10
  %128 = or i1 %126, %127
  br i1 %128, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %146, !dbg !4644

129:                                              ; preds = %originalBBpart216
  %130 = load i32, i32* @x.77
  %131 = load i32, i32* @y.78
  %132 = sub i32 %130, 1
  %133 = mul i32 %130, %132
  %134 = urem i32 %133, 2
  %135 = icmp eq i32 %134, 0
  %136 = icmp slt i32 %131, 10
  %137 = or i1 %135, %136
  br i1 %137, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %129, %originalBB22alteredBB
  %138 = load i32, i32* @x.77
  %139 = load i32, i32* @y.78
  %140 = sub i32 %138, 1
  %141 = mul i32 %138, %140
  %142 = urem i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = icmp slt i32 %139, 10
  %145 = or i1 %143, %144
  br i1 %145, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br label %146, !dbg !4644

146:                                              ; preds = %originalBBpart224, %originalBBpart220
  %147 = phi i8** [ %120, %originalBBpart220 ], [ %20, %originalBBpart224 ], !dbg !4644
  %148 = load i32, i32* @x.77
  %149 = load i32, i32* @y.78
  %150 = sub i32 %148, 1
  %151 = mul i32 %148, %150
  %152 = urem i32 %151, 2
  %153 = icmp eq i32 %152, 0
  %154 = icmp slt i32 %149, 10
  %155 = or i1 %153, %154
  br i1 %155, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %146, %originalBB26alteredBB
  store i8** %147, i8*** %21, align 8, !dbg !4646
  %156 = call i32* @__errno_location() #15, !dbg !4647
  store i32 0, i32* %156, align 4, !dbg !4648
  call void @llvm.dbg.declare(metadata i8** %24, metadata !4649, metadata !DIExpression()), !dbg !4652
  %157 = load i8*, i8** %15, align 8, !dbg !4653
  store i8* %157, i8** %24, align 8, !dbg !4652
  call void @llvm.dbg.declare(metadata i8* %25, metadata !4654, metadata !DIExpression()), !dbg !4655
  %158 = load i8*, i8** %24, align 8, !dbg !4656
  %159 = load i8, i8* %158, align 1, !dbg !4657
  store i8 %159, i8* %25, align 1, !dbg !4655
  %160 = load i32, i32* @x.77
  %161 = load i32, i32* @y.78
  %162 = sub i32 %160, 1
  %163 = mul i32 %160, %162
  %164 = urem i32 %163, 2
  %165 = icmp eq i32 %164, 0
  %166 = icmp slt i32 %161, 10
  %167 = or i1 %165, %166
  br i1 %167, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br label %168, !dbg !4658

168:                                              ; preds = %originalBBpart239, %originalBBpart228
  %169 = load i32, i32* @x.77
  %170 = load i32, i32* @y.78
  %171 = sub i32 %169, 1
  %172 = mul i32 %169, %171
  %173 = urem i32 %172, 2
  %174 = icmp eq i32 %173, 0
  %175 = icmp slt i32 %170, 10
  %176 = or i1 %174, %175
  br i1 %176, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %168, %originalBB30alteredBB
  %177 = call i16** @__ctype_b_loc() #15, !dbg !4659
  %178 = load i16*, i16** %177, align 8, !dbg !4659
  %179 = load i8, i8* %25, align 1, !dbg !4659
  %180 = zext i8 %179 to i32, !dbg !4659
  %181 = sext i32 %180 to i64, !dbg !4659
  %182 = getelementptr inbounds i16, i16* %178, i64 %181, !dbg !4659
  %183 = load i16, i16* %182, align 2, !dbg !4659
  %184 = zext i16 %183 to i32, !dbg !4659
  %185 = and i32 %184, 8192, !dbg !4659
  %186 = icmp ne i32 %185, 0, !dbg !4658
  %187 = load i32, i32* @x.77
  %188 = load i32, i32* @y.78
  %189 = sub i32 %187, 1
  %190 = mul i32 %187, %189
  %191 = urem i32 %190, 2
  %192 = icmp eq i32 %191, 0
  %193 = icmp slt i32 %188, 10
  %194 = or i1 %192, %193
  br i1 %194, label %originalBBpart235, label %originalBB30alteredBB

originalBBpart235:                                ; preds = %originalBB30
  br i1 %186, label %195, label %215, !dbg !4658

195:                                              ; preds = %originalBBpart235
  %196 = load i32, i32* @x.77
  %197 = load i32, i32* @y.78
  %198 = sub i32 %196, 1
  %199 = mul i32 %196, %198
  %200 = urem i32 %199, 2
  %201 = icmp eq i32 %200, 0
  %202 = icmp slt i32 %197, 10
  %203 = or i1 %201, %202
  br i1 %203, label %originalBB37, label %originalBB37alteredBB

originalBB37:                                     ; preds = %195, %originalBB37alteredBB
  %204 = load i8*, i8** %24, align 8, !dbg !4660
  %205 = getelementptr inbounds i8, i8* %204, i32 1, !dbg !4660
  store i8* %205, i8** %24, align 8, !dbg !4660
  %206 = load i8, i8* %205, align 1, !dbg !4661
  store i8 %206, i8* %25, align 1, !dbg !4662
  %207 = load i32, i32* @x.77
  %208 = load i32, i32* @y.78
  %209 = sub i32 %207, 1
  %210 = mul i32 %207, %209
  %211 = urem i32 %210, 2
  %212 = icmp eq i32 %211, 0
  %213 = icmp slt i32 %208, 10
  %214 = or i1 %212, %213
  br i1 %214, label %originalBBpart239, label %originalBB37alteredBB

originalBBpart239:                                ; preds = %originalBB37
  br label %168, !dbg !4658, !llvm.loop !4663

215:                                              ; preds = %originalBBpart235
  %216 = load i32, i32* @x.77
  %217 = load i32, i32* @y.78
  %218 = sub i32 %216, 1
  %219 = mul i32 %216, %218
  %220 = urem i32 %219, 2
  %221 = icmp eq i32 %220, 0
  %222 = icmp slt i32 %217, 10
  %223 = or i1 %221, %222
  br i1 %223, label %originalBB41, label %originalBB41alteredBB

originalBB41:                                     ; preds = %215, %originalBB41alteredBB
  %224 = load i8, i8* %25, align 1, !dbg !4665
  %225 = zext i8 %224 to i32, !dbg !4665
  %226 = icmp eq i32 %225, 45, !dbg !4667
  %227 = load i32, i32* @x.77
  %228 = load i32, i32* @y.78
  %229 = sub i32 %227, 1
  %230 = mul i32 %227, %229
  %231 = urem i32 %230, 2
  %232 = icmp eq i32 %231, 0
  %233 = icmp slt i32 %228, 10
  %234 = or i1 %232, %233
  br i1 %234, label %originalBBpart243, label %originalBB41alteredBB

originalBBpart243:                                ; preds = %originalBB41
  br i1 %226, label %235, label %252, !dbg !4668

235:                                              ; preds = %originalBBpart243
  %236 = load i32, i32* @x.77
  %237 = load i32, i32* @y.78
  %238 = sub i32 %236, 1
  %239 = mul i32 %236, %238
  %240 = urem i32 %239, 2
  %241 = icmp eq i32 %240, 0
  %242 = icmp slt i32 %237, 10
  %243 = or i1 %241, %242
  br i1 %243, label %originalBB45, label %originalBB45alteredBB

originalBB45:                                     ; preds = %235, %originalBB45alteredBB
  store i32 4, i32* %14, align 4, !dbg !4669
  %244 = load i32, i32* @x.77
  %245 = load i32, i32* @y.78
  %246 = sub i32 %244, 1
  %247 = mul i32 %244, %246
  %248 = urem i32 %247, 2
  %249 = icmp eq i32 %248, 0
  %250 = icmp slt i32 %245, 10
  %251 = or i1 %249, %250
  br i1 %251, label %originalBBpart247, label %originalBB45alteredBB

originalBBpart247:                                ; preds = %originalBB45
  br label %1117, !dbg !4669

252:                                              ; preds = %originalBBpart243
  %253 = load i32, i32* @x.77
  %254 = load i32, i32* @y.78
  %255 = sub i32 %253, 1
  %256 = mul i32 %253, %255
  %257 = urem i32 %256, 2
  %258 = icmp eq i32 %257, 0
  %259 = icmp slt i32 %254, 10
  %260 = or i1 %258, %259
  br i1 %260, label %originalBB49, label %originalBB49alteredBB

originalBB49:                                     ; preds = %252, %originalBB49alteredBB
  %261 = load i8*, i8** %15, align 8, !dbg !4670
  %262 = load i8**, i8*** %21, align 8, !dbg !4671
  %263 = load i32, i32* %17, align 4, !dbg !4672
  %264 = call i64 @strtoul(i8* %261, i8** %262, i32 %263) #10, !dbg !4673
  store i64 %264, i64* %22, align 8, !dbg !4674
  %265 = load i8**, i8*** %21, align 8, !dbg !4675
  %266 = load i8*, i8** %265, align 8, !dbg !4677
  %267 = load i8*, i8** %15, align 8, !dbg !4678
  %268 = icmp eq i8* %266, %267, !dbg !4679
  %269 = load i32, i32* @x.77
  %270 = load i32, i32* @y.78
  %271 = sub i32 %269, 1
  %272 = mul i32 %269, %271
  %273 = urem i32 %272, 2
  %274 = icmp eq i32 %273, 0
  %275 = icmp slt i32 %270, 10
  %276 = or i1 %274, %275
  br i1 %276, label %originalBBpart251, label %originalBB49alteredBB

originalBBpart251:                                ; preds = %originalBB49
  br i1 %268, label %277, label %393, !dbg !4680

277:                                              ; preds = %originalBBpart251
  %278 = load i32, i32* @x.77
  %279 = load i32, i32* @y.78
  %280 = sub i32 %278, 1
  %281 = mul i32 %278, %280
  %282 = urem i32 %281, 2
  %283 = icmp eq i32 %282, 0
  %284 = icmp slt i32 %279, 10
  %285 = or i1 %283, %284
  br i1 %285, label %originalBB53, label %originalBB53alteredBB

originalBB53:                                     ; preds = %277, %originalBB53alteredBB
  %286 = load i8*, i8** %19, align 8, !dbg !4681
  %287 = icmp ne i8* %286, null, !dbg !4681
  %288 = load i32, i32* @x.77
  %289 = load i32, i32* @y.78
  %290 = sub i32 %288, 1
  %291 = mul i32 %288, %290
  %292 = urem i32 %291, 2
  %293 = icmp eq i32 %292, 0
  %294 = icmp slt i32 %289, 10
  %295 = or i1 %293, %294
  br i1 %295, label %originalBBpart255, label %originalBB53alteredBB

originalBBpart255:                                ; preds = %originalBB53
  br i1 %287, label %296, label %359, !dbg !4684

296:                                              ; preds = %originalBBpart255
  %297 = load i32, i32* @x.77
  %298 = load i32, i32* @y.78
  %299 = sub i32 %297, 1
  %300 = mul i32 %297, %299
  %301 = urem i32 %300, 2
  %302 = icmp eq i32 %301, 0
  %303 = icmp slt i32 %298, 10
  %304 = or i1 %302, %303
  br i1 %304, label %originalBB57, label %originalBB57alteredBB

originalBB57:                                     ; preds = %296, %originalBB57alteredBB
  %305 = load i8**, i8*** %21, align 8, !dbg !4685
  %306 = load i8*, i8** %305, align 8, !dbg !4686
  %307 = load i8, i8* %306, align 1, !dbg !4687
  %308 = sext i8 %307 to i32, !dbg !4687
  %309 = icmp ne i32 %308, 0, !dbg !4687
  %310 = load i32, i32* @x.77
  %311 = load i32, i32* @y.78
  %312 = sub i32 %310, 1
  %313 = mul i32 %310, %312
  %314 = urem i32 %313, 2
  %315 = icmp eq i32 %314, 0
  %316 = icmp slt i32 %311, 10
  %317 = or i1 %315, %316
  br i1 %317, label %originalBBpart259, label %originalBB57alteredBB

originalBBpart259:                                ; preds = %originalBB57
  br i1 %309, label %318, label %359, !dbg !4688

318:                                              ; preds = %originalBBpart259
  %319 = load i32, i32* @x.77
  %320 = load i32, i32* @y.78
  %321 = sub i32 %319, 1
  %322 = mul i32 %319, %321
  %323 = urem i32 %322, 2
  %324 = icmp eq i32 %323, 0
  %325 = icmp slt i32 %320, 10
  %326 = or i1 %324, %325
  br i1 %326, label %originalBB61, label %originalBB61alteredBB

originalBB61:                                     ; preds = %318, %originalBB61alteredBB
  %327 = load i8*, i8** %19, align 8, !dbg !4689
  %328 = load i8**, i8*** %21, align 8, !dbg !4690
  %329 = load i8*, i8** %328, align 8, !dbg !4691
  %330 = load i8, i8* %329, align 1, !dbg !4692
  %331 = sext i8 %330 to i32, !dbg !4692
  %332 = call i8* @strchr(i8* %327, i32 %331) #13, !dbg !4693
  %333 = icmp ne i8* %332, null, !dbg !4693
  %334 = load i32, i32* @x.77
  %335 = load i32, i32* @y.78
  %336 = sub i32 %334, 1
  %337 = mul i32 %334, %336
  %338 = urem i32 %337, 2
  %339 = icmp eq i32 %338, 0
  %340 = icmp slt i32 %335, 10
  %341 = or i1 %339, %340
  br i1 %341, label %originalBBpart263, label %originalBB61alteredBB

originalBBpart263:                                ; preds = %originalBB61
  br i1 %333, label %342, label %359, !dbg !4694

342:                                              ; preds = %originalBBpart263
  %343 = load i32, i32* @x.77
  %344 = load i32, i32* @y.78
  %345 = sub i32 %343, 1
  %346 = mul i32 %343, %345
  %347 = urem i32 %346, 2
  %348 = icmp eq i32 %347, 0
  %349 = icmp slt i32 %344, 10
  %350 = or i1 %348, %349
  br i1 %350, label %originalBB65, label %originalBB65alteredBB

originalBB65:                                     ; preds = %342, %originalBB65alteredBB
  store i64 1, i64* %22, align 8, !dbg !4695
  %351 = load i32, i32* @x.77
  %352 = load i32, i32* @y.78
  %353 = sub i32 %351, 1
  %354 = mul i32 %351, %353
  %355 = urem i32 %354, 2
  %356 = icmp eq i32 %355, 0
  %357 = icmp slt i32 %352, 10
  %358 = or i1 %356, %357
  br i1 %358, label %originalBBpart267, label %originalBB65alteredBB

originalBBpart267:                                ; preds = %originalBB65
  br label %376, !dbg !4696

359:                                              ; preds = %originalBBpart263, %originalBBpart259, %originalBBpart255
  %360 = load i32, i32* @x.77
  %361 = load i32, i32* @y.78
  %362 = sub i32 %360, 1
  %363 = mul i32 %360, %362
  %364 = urem i32 %363, 2
  %365 = icmp eq i32 %364, 0
  %366 = icmp slt i32 %361, 10
  %367 = or i1 %365, %366
  br i1 %367, label %originalBB69, label %originalBB69alteredBB

originalBB69:                                     ; preds = %359, %originalBB69alteredBB
  store i32 4, i32* %14, align 4, !dbg !4697
  %368 = load i32, i32* @x.77
  %369 = load i32, i32* @y.78
  %370 = sub i32 %368, 1
  %371 = mul i32 %368, %370
  %372 = urem i32 %371, 2
  %373 = icmp eq i32 %372, 0
  %374 = icmp slt i32 %369, 10
  %375 = or i1 %373, %374
  br i1 %375, label %originalBBpart271, label %originalBB69alteredBB

originalBBpart271:                                ; preds = %originalBB69
  br label %1117, !dbg !4697

376:                                              ; preds = %originalBBpart267
  %377 = load i32, i32* @x.77
  %378 = load i32, i32* @y.78
  %379 = sub i32 %377, 1
  %380 = mul i32 %377, %379
  %381 = urem i32 %380, 2
  %382 = icmp eq i32 %381, 0
  %383 = icmp slt i32 %378, 10
  %384 = or i1 %382, %383
  br i1 %384, label %originalBB73, label %originalBB73alteredBB

originalBB73:                                     ; preds = %376, %originalBB73alteredBB
  %385 = load i32, i32* @x.77
  %386 = load i32, i32* @y.78
  %387 = sub i32 %385, 1
  %388 = mul i32 %385, %387
  %389 = urem i32 %388, 2
  %390 = icmp eq i32 %389, 0
  %391 = icmp slt i32 %386, 10
  %392 = or i1 %390, %391
  br i1 %392, label %originalBBpart275, label %originalBB73alteredBB

originalBBpart275:                                ; preds = %originalBB73
  br label %484, !dbg !4698

393:                                              ; preds = %originalBBpart251
  %394 = load i32, i32* @x.77
  %395 = load i32, i32* @y.78
  %396 = sub i32 %394, 1
  %397 = mul i32 %394, %396
  %398 = urem i32 %397, 2
  %399 = icmp eq i32 %398, 0
  %400 = icmp slt i32 %395, 10
  %401 = or i1 %399, %400
  br i1 %401, label %originalBB77, label %originalBB77alteredBB

originalBB77:                                     ; preds = %393, %originalBB77alteredBB
  %402 = call i32* @__errno_location() #15, !dbg !4699
  %403 = load i32, i32* %402, align 4, !dbg !4699
  %404 = icmp ne i32 %403, 0, !dbg !4701
  %405 = load i32, i32* @x.77
  %406 = load i32, i32* @y.78
  %407 = sub i32 %405, 1
  %408 = mul i32 %405, %407
  %409 = urem i32 %408, 2
  %410 = icmp eq i32 %409, 0
  %411 = icmp slt i32 %406, 10
  %412 = or i1 %410, %411
  br i1 %412, label %originalBBpart279, label %originalBB77alteredBB

originalBBpart279:                                ; preds = %originalBB77
  br i1 %404, label %413, label %467, !dbg !4702

413:                                              ; preds = %originalBBpart279
  %414 = load i32, i32* @x.77
  %415 = load i32, i32* @y.78
  %416 = sub i32 %414, 1
  %417 = mul i32 %414, %416
  %418 = urem i32 %417, 2
  %419 = icmp eq i32 %418, 0
  %420 = icmp slt i32 %415, 10
  %421 = or i1 %419, %420
  br i1 %421, label %originalBB81, label %originalBB81alteredBB

originalBB81:                                     ; preds = %413, %originalBB81alteredBB
  %422 = call i32* @__errno_location() #15, !dbg !4703
  %423 = load i32, i32* %422, align 4, !dbg !4703
  %424 = icmp ne i32 %423, 34, !dbg !4706
  %425 = load i32, i32* @x.77
  %426 = load i32, i32* @y.78
  %427 = sub i32 %425, 1
  %428 = mul i32 %425, %427
  %429 = urem i32 %428, 2
  %430 = icmp eq i32 %429, 0
  %431 = icmp slt i32 %426, 10
  %432 = or i1 %430, %431
  br i1 %432, label %originalBBpart283, label %originalBB81alteredBB

originalBBpart283:                                ; preds = %originalBB81
  br i1 %424, label %433, label %450, !dbg !4707

433:                                              ; preds = %originalBBpart283
  %434 = load i32, i32* @x.77
  %435 = load i32, i32* @y.78
  %436 = sub i32 %434, 1
  %437 = mul i32 %434, %436
  %438 = urem i32 %437, 2
  %439 = icmp eq i32 %438, 0
  %440 = icmp slt i32 %435, 10
  %441 = or i1 %439, %440
  br i1 %441, label %originalBB85, label %originalBB85alteredBB

originalBB85:                                     ; preds = %433, %originalBB85alteredBB
  store i32 4, i32* %14, align 4, !dbg !4708
  %442 = load i32, i32* @x.77
  %443 = load i32, i32* @y.78
  %444 = sub i32 %442, 1
  %445 = mul i32 %442, %444
  %446 = urem i32 %445, 2
  %447 = icmp eq i32 %446, 0
  %448 = icmp slt i32 %443, 10
  %449 = or i1 %447, %448
  br i1 %449, label %originalBBpart287, label %originalBB85alteredBB

originalBBpart287:                                ; preds = %originalBB85
  br label %1117, !dbg !4708

450:                                              ; preds = %originalBBpart283
  %451 = load i32, i32* @x.77
  %452 = load i32, i32* @y.78
  %453 = sub i32 %451, 1
  %454 = mul i32 %451, %453
  %455 = urem i32 %454, 2
  %456 = icmp eq i32 %455, 0
  %457 = icmp slt i32 %452, 10
  %458 = or i1 %456, %457
  br i1 %458, label %originalBB89, label %originalBB89alteredBB

originalBB89:                                     ; preds = %450, %originalBB89alteredBB
  store i32 1, i32* %23, align 4, !dbg !4709
  %459 = load i32, i32* @x.77
  %460 = load i32, i32* @y.78
  %461 = sub i32 %459, 1
  %462 = mul i32 %459, %461
  %463 = urem i32 %462, 2
  %464 = icmp eq i32 %463, 0
  %465 = icmp slt i32 %460, 10
  %466 = or i1 %464, %465
  br i1 %466, label %originalBBpart291, label %originalBB89alteredBB

originalBBpart291:                                ; preds = %originalBB89
  br label %467, !dbg !4710

467:                                              ; preds = %originalBBpart291, %originalBBpart279
  %468 = load i32, i32* @x.77
  %469 = load i32, i32* @y.78
  %470 = sub i32 %468, 1
  %471 = mul i32 %468, %470
  %472 = urem i32 %471, 2
  %473 = icmp eq i32 %472, 0
  %474 = icmp slt i32 %469, 10
  %475 = or i1 %473, %474
  br i1 %475, label %originalBB93, label %originalBB93alteredBB

originalBB93:                                     ; preds = %467, %originalBB93alteredBB
  %476 = load i32, i32* @x.77
  %477 = load i32, i32* @y.78
  %478 = sub i32 %476, 1
  %479 = mul i32 %476, %478
  %480 = urem i32 %479, 2
  %481 = icmp eq i32 %480, 0
  %482 = icmp slt i32 %477, 10
  %483 = or i1 %481, %482
  br i1 %483, label %originalBBpart295, label %originalBB93alteredBB

originalBBpart295:                                ; preds = %originalBB93
  br label %484

484:                                              ; preds = %originalBBpart295, %originalBBpart275
  %485 = load i32, i32* @x.77
  %486 = load i32, i32* @y.78
  %487 = sub i32 %485, 1
  %488 = mul i32 %485, %487
  %489 = urem i32 %488, 2
  %490 = icmp eq i32 %489, 0
  %491 = icmp slt i32 %486, 10
  %492 = or i1 %490, %491
  br i1 %492, label %originalBB97, label %originalBB97alteredBB

originalBB97:                                     ; preds = %484, %originalBB97alteredBB
  %493 = load i8*, i8** %19, align 8, !dbg !4711
  %494 = icmp ne i8* %493, null, !dbg !4711
  %495 = load i32, i32* @x.77
  %496 = load i32, i32* @y.78
  %497 = sub i32 %495, 1
  %498 = mul i32 %495, %497
  %499 = urem i32 %498, 2
  %500 = icmp eq i32 %499, 0
  %501 = icmp slt i32 %496, 10
  %502 = or i1 %500, %501
  br i1 %502, label %originalBBpart299, label %originalBB97alteredBB

originalBBpart299:                                ; preds = %originalBB97
  br i1 %494, label %523, label %503, !dbg !4713

503:                                              ; preds = %originalBBpart299
  %504 = load i32, i32* @x.77
  %505 = load i32, i32* @y.78
  %506 = sub i32 %504, 1
  %507 = mul i32 %504, %506
  %508 = urem i32 %507, 2
  %509 = icmp eq i32 %508, 0
  %510 = icmp slt i32 %505, 10
  %511 = or i1 %509, %510
  br i1 %511, label %originalBB101, label %originalBB101alteredBB

originalBB101:                                    ; preds = %503, %originalBB101alteredBB
  %512 = load i64, i64* %22, align 8, !dbg !4714
  %513 = load i64*, i64** %18, align 8, !dbg !4716
  store i64 %512, i64* %513, align 8, !dbg !4717
  %514 = load i32, i32* %23, align 4, !dbg !4718
  store i32 %514, i32* %14, align 4, !dbg !4719
  %515 = load i32, i32* @x.77
  %516 = load i32, i32* @y.78
  %517 = sub i32 %515, 1
  %518 = mul i32 %515, %517
  %519 = urem i32 %518, 2
  %520 = icmp eq i32 %519, 0
  %521 = icmp slt i32 %516, 10
  %522 = or i1 %520, %521
  br i1 %522, label %originalBBpart2103, label %originalBB101alteredBB

originalBBpart2103:                               ; preds = %originalBB101
  br label %1117, !dbg !4719

523:                                              ; preds = %originalBBpart299
  %524 = load i32, i32* @x.77
  %525 = load i32, i32* @y.78
  %526 = sub i32 %524, 1
  %527 = mul i32 %524, %526
  %528 = urem i32 %527, 2
  %529 = icmp eq i32 %528, 0
  %530 = icmp slt i32 %525, 10
  %531 = or i1 %529, %530
  br i1 %531, label %originalBB105, label %originalBB105alteredBB

originalBB105:                                    ; preds = %523, %originalBB105alteredBB
  %532 = load i8**, i8*** %21, align 8, !dbg !4720
  %533 = load i8*, i8** %532, align 8, !dbg !4722
  %534 = load i8, i8* %533, align 1, !dbg !4723
  %535 = sext i8 %534 to i32, !dbg !4723
  %536 = icmp ne i32 %535, 0, !dbg !4724
  %537 = load i32, i32* @x.77
  %538 = load i32, i32* @y.78
  %539 = sub i32 %537, 1
  %540 = mul i32 %537, %539
  %541 = urem i32 %540, 2
  %542 = icmp eq i32 %541, 0
  %543 = icmp slt i32 %538, 10
  %544 = or i1 %542, %543
  br i1 %544, label %originalBBpart2107, label %originalBB105alteredBB

originalBBpart2107:                               ; preds = %originalBB105
  br i1 %536, label %545, label %1097, !dbg !4725

545:                                              ; preds = %originalBBpart2107
  call void @llvm.dbg.declare(metadata i32* %26, metadata !4726, metadata !DIExpression()), !dbg !4728
  %546 = load i32, i32* @x.77
  %547 = load i32, i32* @y.78
  %548 = sub i32 %546, 1
  %549 = mul i32 %546, %548
  %550 = urem i32 %549, 2
  %551 = icmp eq i32 %550, 0
  %552 = icmp slt i32 %547, 10
  %553 = or i1 %551, %552
  br i1 %553, label %originalBB109, label %originalBB109alteredBB

originalBB109:                                    ; preds = %545, %originalBB109alteredBB
  store i32 1024, i32* %26, align 4, !dbg !4728
  call void @llvm.dbg.declare(metadata i32* %27, metadata !4729, metadata !DIExpression()), !dbg !4730
  store i32 1, i32* %27, align 4, !dbg !4730
  call void @llvm.dbg.declare(metadata i32* %28, metadata !4731, metadata !DIExpression()), !dbg !4732
  %554 = load i8*, i8** %19, align 8, !dbg !4733
  %555 = load i8**, i8*** %21, align 8, !dbg !4735
  %556 = load i8*, i8** %555, align 8, !dbg !4736
  %557 = load i8, i8* %556, align 1, !dbg !4737
  %558 = sext i8 %557 to i32, !dbg !4737
  %559 = call i8* @strchr(i8* %554, i32 %558) #13, !dbg !4738
  %560 = icmp ne i8* %559, null, !dbg !4738
  %561 = load i32, i32* @x.77
  %562 = load i32, i32* @y.78
  %563 = sub i32 %561, 1
  %564 = mul i32 %561, %563
  %565 = urem i32 %564, 2
  %566 = icmp eq i32 %565, 0
  %567 = icmp slt i32 %562, 10
  %568 = or i1 %566, %567
  br i1 %568, label %originalBBpart2111, label %originalBB109alteredBB

originalBBpart2111:                               ; preds = %originalBB109
  br i1 %560, label %590, label %569, !dbg !4739

569:                                              ; preds = %originalBBpart2111
  %570 = load i32, i32* @x.77
  %571 = load i32, i32* @y.78
  %572 = sub i32 %570, 1
  %573 = mul i32 %570, %572
  %574 = urem i32 %573, 2
  %575 = icmp eq i32 %574, 0
  %576 = icmp slt i32 %571, 10
  %577 = or i1 %575, %576
  br i1 %577, label %originalBB113, label %originalBB113alteredBB

originalBB113:                                    ; preds = %569, %originalBB113alteredBB
  %578 = load i64, i64* %22, align 8, !dbg !4740
  %579 = load i64*, i64** %18, align 8, !dbg !4742
  store i64 %578, i64* %579, align 8, !dbg !4743
  %580 = load i32, i32* %23, align 4, !dbg !4744
  %581 = or i32 %580, 2, !dbg !4745
  store i32 %581, i32* %14, align 4, !dbg !4746
  %582 = load i32, i32* @x.77
  %583 = load i32, i32* @y.78
  %584 = sub i32 %582, 1
  %585 = mul i32 %582, %584
  %586 = urem i32 %585, 2
  %587 = icmp eq i32 %586, 0
  %588 = icmp slt i32 %583, 10
  %589 = or i1 %587, %588
  br i1 %589, label %originalBBpart2124, label %originalBB113alteredBB

originalBBpart2124:                               ; preds = %originalBB113
  br label %1117, !dbg !4746

590:                                              ; preds = %originalBBpart2111
  %591 = load i32, i32* @x.77
  %592 = load i32, i32* @y.78
  %593 = sub i32 %591, 1
  %594 = mul i32 %591, %593
  %595 = urem i32 %594, 2
  %596 = icmp eq i32 %595, 0
  %597 = icmp slt i32 %592, 10
  %598 = or i1 %596, %597
  br i1 %598, label %originalBB126, label %originalBB126alteredBB

originalBB126:                                    ; preds = %590, %originalBB126alteredBB
  %599 = load i8**, i8*** %21, align 8, !dbg !4747
  %600 = load i8*, i8** %599, align 8, !dbg !4748
  %601 = load i8, i8* %600, align 1, !dbg !4749
  %602 = sext i8 %601 to i32, !dbg !4749
  %603 = load i32, i32* @x.77
  %604 = load i32, i32* @y.78
  %605 = sub i32 %603, 1
  %606 = mul i32 %603, %605
  %607 = urem i32 %606, 2
  %608 = icmp eq i32 %607, 0
  %609 = icmp slt i32 %604, 10
  %610 = or i1 %608, %609
  br i1 %610, label %originalBBpart2128, label %originalBB126alteredBB

originalBBpart2128:                               ; preds = %originalBB126
  switch i32 %602, label %767 [
    i32 69, label %611
    i32 71, label %611
    i32 103, label %611
    i32 107, label %611
    i32 75, label %611
    i32 77, label %611
    i32 109, label %611
    i32 80, label %611
    i32 84, label %611
    i32 116, label %611
    i32 89, label %611
    i32 90, label %611
  ], !dbg !4750

611:                                              ; preds = %originalBBpart2128, %originalBBpart2128, %originalBBpart2128, %originalBBpart2128, %originalBBpart2128, %originalBBpart2128, %originalBBpart2128, %originalBBpart2128, %originalBBpart2128, %originalBBpart2128, %originalBBpart2128, %originalBBpart2128
  %612 = load i32, i32* @x.77
  %613 = load i32, i32* @y.78
  %614 = sub i32 %612, 1
  %615 = mul i32 %612, %614
  %616 = urem i32 %615, 2
  %617 = icmp eq i32 %616, 0
  %618 = icmp slt i32 %613, 10
  %619 = or i1 %617, %618
  br i1 %619, label %originalBB130, label %originalBB130alteredBB

originalBB130:                                    ; preds = %611, %originalBB130alteredBB
  %620 = load i8*, i8** %19, align 8, !dbg !4751
  %621 = call i8* @strchr(i8* %620, i32 48) #13, !dbg !4754
  %622 = icmp ne i8* %621, null, !dbg !4754
  %623 = load i32, i32* @x.77
  %624 = load i32, i32* @y.78
  %625 = sub i32 %623, 1
  %626 = mul i32 %623, %625
  %627 = urem i32 %626, 2
  %628 = icmp eq i32 %627, 0
  %629 = icmp slt i32 %624, 10
  %630 = or i1 %628, %629
  br i1 %630, label %originalBBpart2132, label %originalBB130alteredBB

originalBBpart2132:                               ; preds = %originalBB130
  br i1 %622, label %631, label %750, !dbg !4755

631:                                              ; preds = %originalBBpart2132
  %632 = load i32, i32* @x.77
  %633 = load i32, i32* @y.78
  %634 = sub i32 %632, 1
  %635 = mul i32 %632, %634
  %636 = urem i32 %635, 2
  %637 = icmp eq i32 %636, 0
  %638 = icmp slt i32 %633, 10
  %639 = or i1 %637, %638
  br i1 %639, label %originalBB134, label %originalBB134alteredBB

originalBB134:                                    ; preds = %631, %originalBB134alteredBB
  %640 = load i8**, i8*** %21, align 8, !dbg !4756
  %641 = getelementptr inbounds i8*, i8** %640, i64 0, !dbg !4756
  %642 = load i8*, i8** %641, align 8, !dbg !4756
  %643 = getelementptr inbounds i8, i8* %642, i64 1, !dbg !4756
  %644 = load i8, i8* %643, align 1, !dbg !4756
  %645 = sext i8 %644 to i32, !dbg !4756
  %646 = load i32, i32* @x.77
  %647 = load i32, i32* @y.78
  %648 = sub i32 %646, 1
  %649 = mul i32 %646, %648
  %650 = urem i32 %649, 2
  %651 = icmp eq i32 %650, 0
  %652 = icmp slt i32 %647, 10
  %653 = or i1 %651, %652
  br i1 %653, label %originalBBpart2136, label %originalBB134alteredBB

originalBBpart2136:                               ; preds = %originalBB134
  switch i32 %645, label %733 [
    i32 105, label %654
    i32 66, label %714
    i32 68, label %714
  ], !dbg !4757

654:                                              ; preds = %originalBBpart2136
  %655 = load i32, i32* @x.77
  %656 = load i32, i32* @y.78
  %657 = sub i32 %655, 1
  %658 = mul i32 %655, %657
  %659 = urem i32 %658, 2
  %660 = icmp eq i32 %659, 0
  %661 = icmp slt i32 %656, 10
  %662 = or i1 %660, %661
  br i1 %662, label %originalBB138, label %originalBB138alteredBB

originalBB138:                                    ; preds = %654, %originalBB138alteredBB
  %663 = load i8**, i8*** %21, align 8, !dbg !4758
  %664 = getelementptr inbounds i8*, i8** %663, i64 0, !dbg !4758
  %665 = load i8*, i8** %664, align 8, !dbg !4758
  %666 = getelementptr inbounds i8, i8* %665, i64 2, !dbg !4758
  %667 = load i8, i8* %666, align 1, !dbg !4758
  %668 = sext i8 %667 to i32, !dbg !4758
  %669 = icmp eq i32 %668, 66, !dbg !4761
  %670 = load i32, i32* @x.77
  %671 = load i32, i32* @y.78
  %672 = sub i32 %670, 1
  %673 = mul i32 %670, %672
  %674 = urem i32 %673, 2
  %675 = icmp eq i32 %674, 0
  %676 = icmp slt i32 %671, 10
  %677 = or i1 %675, %676
  br i1 %677, label %originalBBpart2140, label %originalBB138alteredBB

originalBBpart2140:                               ; preds = %originalBB138
  br i1 %669, label %678, label %697, !dbg !4762

678:                                              ; preds = %originalBBpart2140
  %679 = load i32, i32* @x.77
  %680 = load i32, i32* @y.78
  %681 = sub i32 %679, 1
  %682 = mul i32 %679, %681
  %683 = urem i32 %682, 2
  %684 = icmp eq i32 %683, 0
  %685 = icmp slt i32 %680, 10
  %686 = or i1 %684, %685
  br i1 %686, label %originalBB142, label %originalBB142alteredBB

originalBB142:                                    ; preds = %678, %originalBB142alteredBB
  %687 = load i32, i32* %27, align 4, !dbg !4763
  %688 = add nsw i32 %687, 2, !dbg !4763
  store i32 %688, i32* %27, align 4, !dbg !4763
  %689 = load i32, i32* @x.77
  %690 = load i32, i32* @y.78
  %691 = sub i32 %689, 1
  %692 = mul i32 %689, %691
  %693 = urem i32 %692, 2
  %694 = icmp eq i32 %693, 0
  %695 = icmp slt i32 %690, 10
  %696 = or i1 %694, %695
  br i1 %696, label %originalBBpart2148, label %originalBB142alteredBB

originalBBpart2148:                               ; preds = %originalBB142
  br label %697, !dbg !4764

697:                                              ; preds = %originalBBpart2148, %originalBBpart2140
  %698 = load i32, i32* @x.77
  %699 = load i32, i32* @y.78
  %700 = sub i32 %698, 1
  %701 = mul i32 %698, %700
  %702 = urem i32 %701, 2
  %703 = icmp eq i32 %702, 0
  %704 = icmp slt i32 %699, 10
  %705 = or i1 %703, %704
  br i1 %705, label %originalBB150, label %originalBB150alteredBB

originalBB150:                                    ; preds = %697, %originalBB150alteredBB
  %706 = load i32, i32* @x.77
  %707 = load i32, i32* @y.78
  %708 = sub i32 %706, 1
  %709 = mul i32 %706, %708
  %710 = urem i32 %709, 2
  %711 = icmp eq i32 %710, 0
  %712 = icmp slt i32 %707, 10
  %713 = or i1 %711, %712
  br i1 %713, label %originalBBpart2152, label %originalBB150alteredBB

originalBBpart2152:                               ; preds = %originalBB150
  br label %733, !dbg !4765

714:                                              ; preds = %originalBBpart2136, %originalBBpart2136
  %715 = load i32, i32* @x.77
  %716 = load i32, i32* @y.78
  %717 = sub i32 %715, 1
  %718 = mul i32 %715, %717
  %719 = urem i32 %718, 2
  %720 = icmp eq i32 %719, 0
  %721 = icmp slt i32 %716, 10
  %722 = or i1 %720, %721
  br i1 %722, label %originalBB154, label %originalBB154alteredBB

originalBB154:                                    ; preds = %714, %originalBB154alteredBB
  store i32 1000, i32* %26, align 4, !dbg !4766
  %723 = load i32, i32* %27, align 4, !dbg !4767
  %724 = add nsw i32 %723, 1, !dbg !4767
  store i32 %724, i32* %27, align 4, !dbg !4767
  %725 = load i32, i32* @x.77
  %726 = load i32, i32* @y.78
  %727 = sub i32 %725, 1
  %728 = mul i32 %725, %727
  %729 = urem i32 %728, 2
  %730 = icmp eq i32 %729, 0
  %731 = icmp slt i32 %726, 10
  %732 = or i1 %730, %731
  br i1 %732, label %originalBBpart2162, label %originalBB154alteredBB

originalBBpart2162:                               ; preds = %originalBB154
  br label %733, !dbg !4768

733:                                              ; preds = %originalBBpart2162, %originalBBpart2152, %originalBBpart2136
  %734 = load i32, i32* @x.77
  %735 = load i32, i32* @y.78
  %736 = sub i32 %734, 1
  %737 = mul i32 %734, %736
  %738 = urem i32 %737, 2
  %739 = icmp eq i32 %738, 0
  %740 = icmp slt i32 %735, 10
  %741 = or i1 %739, %740
  br i1 %741, label %originalBB164, label %originalBB164alteredBB

originalBB164:                                    ; preds = %733, %originalBB164alteredBB
  %742 = load i32, i32* @x.77
  %743 = load i32, i32* @y.78
  %744 = sub i32 %742, 1
  %745 = mul i32 %742, %744
  %746 = urem i32 %745, 2
  %747 = icmp eq i32 %746, 0
  %748 = icmp slt i32 %743, 10
  %749 = or i1 %747, %748
  br i1 %749, label %originalBBpart2166, label %originalBB164alteredBB

originalBBpart2166:                               ; preds = %originalBB164
  br label %750, !dbg !4769

750:                                              ; preds = %originalBBpart2166, %originalBBpart2132
  %751 = load i32, i32* @x.77
  %752 = load i32, i32* @y.78
  %753 = sub i32 %751, 1
  %754 = mul i32 %751, %753
  %755 = urem i32 %754, 2
  %756 = icmp eq i32 %755, 0
  %757 = icmp slt i32 %752, 10
  %758 = or i1 %756, %757
  br i1 %758, label %originalBB168, label %originalBB168alteredBB

originalBB168:                                    ; preds = %750, %originalBB168alteredBB
  %759 = load i32, i32* @x.77
  %760 = load i32, i32* @y.78
  %761 = sub i32 %759, 1
  %762 = mul i32 %759, %761
  %763 = urem i32 %762, 2
  %764 = icmp eq i32 %763, 0
  %765 = icmp slt i32 %760, 10
  %766 = or i1 %764, %765
  br i1 %766, label %originalBBpart2170, label %originalBB168alteredBB

originalBBpart2170:                               ; preds = %originalBB168
  br label %767, !dbg !4770

767:                                              ; preds = %originalBBpart2170, %originalBBpart2128
  %768 = load i32, i32* @x.77
  %769 = load i32, i32* @y.78
  %770 = sub i32 %768, 1
  %771 = mul i32 %768, %770
  %772 = urem i32 %771, 2
  %773 = icmp eq i32 %772, 0
  %774 = icmp slt i32 %769, 10
  %775 = or i1 %773, %774
  br i1 %775, label %originalBB172, label %originalBB172alteredBB

originalBB172:                                    ; preds = %767, %originalBB172alteredBB
  %776 = load i8**, i8*** %21, align 8, !dbg !4771
  %777 = load i8*, i8** %776, align 8, !dbg !4772
  %778 = load i8, i8* %777, align 1, !dbg !4773
  %779 = sext i8 %778 to i32, !dbg !4773
  %780 = load i32, i32* @x.77
  %781 = load i32, i32* @y.78
  %782 = sub i32 %780, 1
  %783 = mul i32 %780, %782
  %784 = urem i32 %783, 2
  %785 = icmp eq i32 %784, 0
  %786 = icmp slt i32 %781, 10
  %787 = or i1 %785, %786
  br i1 %787, label %originalBBpart2174, label %originalBB172alteredBB

originalBBpart2174:                               ; preds = %originalBB172
  switch i32 %779, label %1011 [
    i32 98, label %788
    i32 66, label %806
    i32 99, label %824
    i32 69, label %841
    i32 71, label %860
    i32 103, label %860
    i32 107, label %879
    i32 75, label %879
    i32 77, label %898
    i32 109, label %898
    i32 80, label %917
    i32 84, label %936
    i32 116, label %936
    i32 119, label %955
    i32 89, label %973
    i32 90, label %992
  ], !dbg !4774

788:                                              ; preds = %originalBBpart2174
  %789 = load i32, i32* @x.77
  %790 = load i32, i32* @y.78
  %791 = sub i32 %789, 1
  %792 = mul i32 %789, %791
  %793 = urem i32 %792, 2
  %794 = icmp eq i32 %793, 0
  %795 = icmp slt i32 %790, 10
  %796 = or i1 %794, %795
  br i1 %796, label %originalBB176, label %originalBB176alteredBB

originalBB176:                                    ; preds = %788, %originalBB176alteredBB
  %797 = call i32 @bkm_scale(i64* %22, i32 512), !dbg !4775
  store i32 %797, i32* %28, align 4, !dbg !4777
  %798 = load i32, i32* @x.77
  %799 = load i32, i32* @y.78
  %800 = sub i32 %798, 1
  %801 = mul i32 %798, %800
  %802 = urem i32 %801, 2
  %803 = icmp eq i32 %802, 0
  %804 = icmp slt i32 %799, 10
  %805 = or i1 %803, %804
  br i1 %805, label %originalBBpart2178, label %originalBB176alteredBB

originalBBpart2178:                               ; preds = %originalBB176
  br label %1032, !dbg !4778

806:                                              ; preds = %originalBBpart2174
  %807 = load i32, i32* @x.77
  %808 = load i32, i32* @y.78
  %809 = sub i32 %807, 1
  %810 = mul i32 %807, %809
  %811 = urem i32 %810, 2
  %812 = icmp eq i32 %811, 0
  %813 = icmp slt i32 %808, 10
  %814 = or i1 %812, %813
  br i1 %814, label %originalBB180, label %originalBB180alteredBB

originalBB180:                                    ; preds = %806, %originalBB180alteredBB
  %815 = call i32 @bkm_scale(i64* %22, i32 1024), !dbg !4779
  store i32 %815, i32* %28, align 4, !dbg !4780
  %816 = load i32, i32* @x.77
  %817 = load i32, i32* @y.78
  %818 = sub i32 %816, 1
  %819 = mul i32 %816, %818
  %820 = urem i32 %819, 2
  %821 = icmp eq i32 %820, 0
  %822 = icmp slt i32 %817, 10
  %823 = or i1 %821, %822
  br i1 %823, label %originalBBpart2182, label %originalBB180alteredBB

originalBBpart2182:                               ; preds = %originalBB180
  br label %1032, !dbg !4781

824:                                              ; preds = %originalBBpart2174
  %825 = load i32, i32* @x.77
  %826 = load i32, i32* @y.78
  %827 = sub i32 %825, 1
  %828 = mul i32 %825, %827
  %829 = urem i32 %828, 2
  %830 = icmp eq i32 %829, 0
  %831 = icmp slt i32 %826, 10
  %832 = or i1 %830, %831
  br i1 %832, label %originalBB184, label %originalBB184alteredBB

originalBB184:                                    ; preds = %824, %originalBB184alteredBB
  store i32 0, i32* %28, align 4, !dbg !4782
  %833 = load i32, i32* @x.77
  %834 = load i32, i32* @y.78
  %835 = sub i32 %833, 1
  %836 = mul i32 %833, %835
  %837 = urem i32 %836, 2
  %838 = icmp eq i32 %837, 0
  %839 = icmp slt i32 %834, 10
  %840 = or i1 %838, %839
  br i1 %840, label %originalBBpart2186, label %originalBB184alteredBB

originalBBpart2186:                               ; preds = %originalBB184
  br label %1032, !dbg !4783

841:                                              ; preds = %originalBBpart2174
  %842 = load i32, i32* @x.77
  %843 = load i32, i32* @y.78
  %844 = sub i32 %842, 1
  %845 = mul i32 %842, %844
  %846 = urem i32 %845, 2
  %847 = icmp eq i32 %846, 0
  %848 = icmp slt i32 %843, 10
  %849 = or i1 %847, %848
  br i1 %849, label %originalBB188, label %originalBB188alteredBB

originalBB188:                                    ; preds = %841, %originalBB188alteredBB
  %850 = load i32, i32* %26, align 4, !dbg !4784
  %851 = call i32 @bkm_scale_by_power(i64* %22, i32 %850, i32 6), !dbg !4785
  store i32 %851, i32* %28, align 4, !dbg !4786
  %852 = load i32, i32* @x.77
  %853 = load i32, i32* @y.78
  %854 = sub i32 %852, 1
  %855 = mul i32 %852, %854
  %856 = urem i32 %855, 2
  %857 = icmp eq i32 %856, 0
  %858 = icmp slt i32 %853, 10
  %859 = or i1 %857, %858
  br i1 %859, label %originalBBpart2190, label %originalBB188alteredBB

originalBBpart2190:                               ; preds = %originalBB188
  br label %1032, !dbg !4787

860:                                              ; preds = %originalBBpart2174, %originalBBpart2174
  %861 = load i32, i32* @x.77
  %862 = load i32, i32* @y.78
  %863 = sub i32 %861, 1
  %864 = mul i32 %861, %863
  %865 = urem i32 %864, 2
  %866 = icmp eq i32 %865, 0
  %867 = icmp slt i32 %862, 10
  %868 = or i1 %866, %867
  br i1 %868, label %originalBB192, label %originalBB192alteredBB

originalBB192:                                    ; preds = %860, %originalBB192alteredBB
  %869 = load i32, i32* %26, align 4, !dbg !4788
  %870 = call i32 @bkm_scale_by_power(i64* %22, i32 %869, i32 3), !dbg !4789
  store i32 %870, i32* %28, align 4, !dbg !4790
  %871 = load i32, i32* @x.77
  %872 = load i32, i32* @y.78
  %873 = sub i32 %871, 1
  %874 = mul i32 %871, %873
  %875 = urem i32 %874, 2
  %876 = icmp eq i32 %875, 0
  %877 = icmp slt i32 %872, 10
  %878 = or i1 %876, %877
  br i1 %878, label %originalBBpart2194, label %originalBB192alteredBB

originalBBpart2194:                               ; preds = %originalBB192
  br label %1032, !dbg !4791

879:                                              ; preds = %originalBBpart2174, %originalBBpart2174
  %880 = load i32, i32* @x.77
  %881 = load i32, i32* @y.78
  %882 = sub i32 %880, 1
  %883 = mul i32 %880, %882
  %884 = urem i32 %883, 2
  %885 = icmp eq i32 %884, 0
  %886 = icmp slt i32 %881, 10
  %887 = or i1 %885, %886
  br i1 %887, label %originalBB196, label %originalBB196alteredBB

originalBB196:                                    ; preds = %879, %originalBB196alteredBB
  %888 = load i32, i32* %26, align 4, !dbg !4792
  %889 = call i32 @bkm_scale_by_power(i64* %22, i32 %888, i32 1), !dbg !4793
  store i32 %889, i32* %28, align 4, !dbg !4794
  %890 = load i32, i32* @x.77
  %891 = load i32, i32* @y.78
  %892 = sub i32 %890, 1
  %893 = mul i32 %890, %892
  %894 = urem i32 %893, 2
  %895 = icmp eq i32 %894, 0
  %896 = icmp slt i32 %891, 10
  %897 = or i1 %895, %896
  br i1 %897, label %originalBBpart2198, label %originalBB196alteredBB

originalBBpart2198:                               ; preds = %originalBB196
  br label %1032, !dbg !4795

898:                                              ; preds = %originalBBpart2174, %originalBBpart2174
  %899 = load i32, i32* @x.77
  %900 = load i32, i32* @y.78
  %901 = sub i32 %899, 1
  %902 = mul i32 %899, %901
  %903 = urem i32 %902, 2
  %904 = icmp eq i32 %903, 0
  %905 = icmp slt i32 %900, 10
  %906 = or i1 %904, %905
  br i1 %906, label %originalBB200, label %originalBB200alteredBB

originalBB200:                                    ; preds = %898, %originalBB200alteredBB
  %907 = load i32, i32* %26, align 4, !dbg !4796
  %908 = call i32 @bkm_scale_by_power(i64* %22, i32 %907, i32 2), !dbg !4797
  store i32 %908, i32* %28, align 4, !dbg !4798
  %909 = load i32, i32* @x.77
  %910 = load i32, i32* @y.78
  %911 = sub i32 %909, 1
  %912 = mul i32 %909, %911
  %913 = urem i32 %912, 2
  %914 = icmp eq i32 %913, 0
  %915 = icmp slt i32 %910, 10
  %916 = or i1 %914, %915
  br i1 %916, label %originalBBpart2202, label %originalBB200alteredBB

originalBBpart2202:                               ; preds = %originalBB200
  br label %1032, !dbg !4799

917:                                              ; preds = %originalBBpart2174
  %918 = load i32, i32* @x.77
  %919 = load i32, i32* @y.78
  %920 = sub i32 %918, 1
  %921 = mul i32 %918, %920
  %922 = urem i32 %921, 2
  %923 = icmp eq i32 %922, 0
  %924 = icmp slt i32 %919, 10
  %925 = or i1 %923, %924
  br i1 %925, label %originalBB204, label %originalBB204alteredBB

originalBB204:                                    ; preds = %917, %originalBB204alteredBB
  %926 = load i32, i32* %26, align 4, !dbg !4800
  %927 = call i32 @bkm_scale_by_power(i64* %22, i32 %926, i32 5), !dbg !4801
  store i32 %927, i32* %28, align 4, !dbg !4802
  %928 = load i32, i32* @x.77
  %929 = load i32, i32* @y.78
  %930 = sub i32 %928, 1
  %931 = mul i32 %928, %930
  %932 = urem i32 %931, 2
  %933 = icmp eq i32 %932, 0
  %934 = icmp slt i32 %929, 10
  %935 = or i1 %933, %934
  br i1 %935, label %originalBBpart2206, label %originalBB204alteredBB

originalBBpart2206:                               ; preds = %originalBB204
  br label %1032, !dbg !4803

936:                                              ; preds = %originalBBpart2174, %originalBBpart2174
  %937 = load i32, i32* @x.77
  %938 = load i32, i32* @y.78
  %939 = sub i32 %937, 1
  %940 = mul i32 %937, %939
  %941 = urem i32 %940, 2
  %942 = icmp eq i32 %941, 0
  %943 = icmp slt i32 %938, 10
  %944 = or i1 %942, %943
  br i1 %944, label %originalBB208, label %originalBB208alteredBB

originalBB208:                                    ; preds = %936, %originalBB208alteredBB
  %945 = load i32, i32* %26, align 4, !dbg !4804
  %946 = call i32 @bkm_scale_by_power(i64* %22, i32 %945, i32 4), !dbg !4805
  store i32 %946, i32* %28, align 4, !dbg !4806
  %947 = load i32, i32* @x.77
  %948 = load i32, i32* @y.78
  %949 = sub i32 %947, 1
  %950 = mul i32 %947, %949
  %951 = urem i32 %950, 2
  %952 = icmp eq i32 %951, 0
  %953 = icmp slt i32 %948, 10
  %954 = or i1 %952, %953
  br i1 %954, label %originalBBpart2210, label %originalBB208alteredBB

originalBBpart2210:                               ; preds = %originalBB208
  br label %1032, !dbg !4807

955:                                              ; preds = %originalBBpart2174
  %956 = load i32, i32* @x.77
  %957 = load i32, i32* @y.78
  %958 = sub i32 %956, 1
  %959 = mul i32 %956, %958
  %960 = urem i32 %959, 2
  %961 = icmp eq i32 %960, 0
  %962 = icmp slt i32 %957, 10
  %963 = or i1 %961, %962
  br i1 %963, label %originalBB212, label %originalBB212alteredBB

originalBB212:                                    ; preds = %955, %originalBB212alteredBB
  %964 = call i32 @bkm_scale(i64* %22, i32 2), !dbg !4808
  store i32 %964, i32* %28, align 4, !dbg !4809
  %965 = load i32, i32* @x.77
  %966 = load i32, i32* @y.78
  %967 = sub i32 %965, 1
  %968 = mul i32 %965, %967
  %969 = urem i32 %968, 2
  %970 = icmp eq i32 %969, 0
  %971 = icmp slt i32 %966, 10
  %972 = or i1 %970, %971
  br i1 %972, label %originalBBpart2215, label %originalBB212alteredBB

originalBBpart2215:                               ; preds = %originalBB212
  br label %1032, !dbg !4810

973:                                              ; preds = %originalBBpart2174
  %974 = load i32, i32* @x.77
  %975 = load i32, i32* @y.78
  %976 = sub i32 %974, 1
  %977 = mul i32 %974, %976
  %978 = urem i32 %977, 2
  %979 = icmp eq i32 %978, 0
  %980 = icmp slt i32 %975, 10
  %981 = or i1 %979, %980
  br i1 %981, label %originalBB217, label %originalBB217alteredBB

originalBB217:                                    ; preds = %973, %originalBB217alteredBB
  %982 = load i32, i32* %26, align 4, !dbg !4811
  %983 = call i32 @bkm_scale_by_power(i64* %22, i32 %982, i32 8), !dbg !4812
  store i32 %983, i32* %28, align 4, !dbg !4813
  %984 = load i32, i32* @x.77
  %985 = load i32, i32* @y.78
  %986 = sub i32 %984, 1
  %987 = mul i32 %984, %986
  %988 = urem i32 %987, 2
  %989 = icmp eq i32 %988, 0
  %990 = icmp slt i32 %985, 10
  %991 = or i1 %989, %990
  br i1 %991, label %originalBBpart2219, label %originalBB217alteredBB

originalBBpart2219:                               ; preds = %originalBB217
  br label %1032, !dbg !4814

992:                                              ; preds = %originalBBpart2174
  %993 = load i32, i32* @x.77
  %994 = load i32, i32* @y.78
  %995 = sub i32 %993, 1
  %996 = mul i32 %993, %995
  %997 = urem i32 %996, 2
  %998 = icmp eq i32 %997, 0
  %999 = icmp slt i32 %994, 10
  %1000 = or i1 %998, %999
  br i1 %1000, label %originalBB221, label %originalBB221alteredBB

originalBB221:                                    ; preds = %992, %originalBB221alteredBB
  %1001 = load i32, i32* %26, align 4, !dbg !4815
  %1002 = call i32 @bkm_scale_by_power(i64* %22, i32 %1001, i32 7), !dbg !4816
  store i32 %1002, i32* %28, align 4, !dbg !4817
  %1003 = load i32, i32* @x.77
  %1004 = load i32, i32* @y.78
  %1005 = sub i32 %1003, 1
  %1006 = mul i32 %1003, %1005
  %1007 = urem i32 %1006, 2
  %1008 = icmp eq i32 %1007, 0
  %1009 = icmp slt i32 %1004, 10
  %1010 = or i1 %1008, %1009
  br i1 %1010, label %originalBBpart2223, label %originalBB221alteredBB

originalBBpart2223:                               ; preds = %originalBB221
  br label %1032, !dbg !4818

1011:                                             ; preds = %originalBBpart2174
  %1012 = load i32, i32* @x.77
  %1013 = load i32, i32* @y.78
  %1014 = sub i32 %1012, 1
  %1015 = mul i32 %1012, %1014
  %1016 = urem i32 %1015, 2
  %1017 = icmp eq i32 %1016, 0
  %1018 = icmp slt i32 %1013, 10
  %1019 = or i1 %1017, %1018
  br i1 %1019, label %originalBB225, label %originalBB225alteredBB

originalBB225:                                    ; preds = %1011, %originalBB225alteredBB
  %1020 = load i64, i64* %22, align 8, !dbg !4819
  %1021 = load i64*, i64** %18, align 8, !dbg !4820
  store i64 %1020, i64* %1021, align 8, !dbg !4821
  %1022 = load i32, i32* %23, align 4, !dbg !4822
  %1023 = or i32 %1022, 2, !dbg !4823
  store i32 %1023, i32* %14, align 4, !dbg !4824
  %1024 = load i32, i32* @x.77
  %1025 = load i32, i32* @y.78
  %1026 = sub i32 %1024, 1
  %1027 = mul i32 %1024, %1026
  %1028 = urem i32 %1027, 2
  %1029 = icmp eq i32 %1028, 0
  %1030 = icmp slt i32 %1025, 10
  %1031 = or i1 %1029, %1030
  br i1 %1031, label %originalBBpart2235, label %originalBB225alteredBB

originalBBpart2235:                               ; preds = %originalBB225
  br label %1117, !dbg !4824

1032:                                             ; preds = %originalBBpart2223, %originalBBpart2219, %originalBBpart2215, %originalBBpart2210, %originalBBpart2206, %originalBBpart2202, %originalBBpart2198, %originalBBpart2194, %originalBBpart2190, %originalBBpart2186, %originalBBpart2182, %originalBBpart2178
  %1033 = load i32, i32* @x.77
  %1034 = load i32, i32* @y.78
  %1035 = sub i32 %1033, 1
  %1036 = mul i32 %1033, %1035
  %1037 = urem i32 %1036, 2
  %1038 = icmp eq i32 %1037, 0
  %1039 = icmp slt i32 %1034, 10
  %1040 = or i1 %1038, %1039
  br i1 %1040, label %originalBB237, label %originalBB237alteredBB

originalBB237:                                    ; preds = %1032, %originalBB237alteredBB
  %1041 = load i32, i32* %28, align 4, !dbg !4825
  %1042 = load i32, i32* %23, align 4, !dbg !4826
  %1043 = or i32 %1042, %1041, !dbg !4826
  store i32 %1043, i32* %23, align 4, !dbg !4826
  %1044 = load i32, i32* %27, align 4, !dbg !4827
  %1045 = load i8**, i8*** %21, align 8, !dbg !4828
  %1046 = load i8*, i8** %1045, align 8, !dbg !4829
  %1047 = sext i32 %1044 to i64, !dbg !4829
  %1048 = getelementptr inbounds i8, i8* %1046, i64 %1047, !dbg !4829
  store i8* %1048, i8** %1045, align 8, !dbg !4829
  %1049 = load i8**, i8*** %21, align 8, !dbg !4830
  %1050 = load i8*, i8** %1049, align 8, !dbg !4832
  %1051 = load i8, i8* %1050, align 1, !dbg !4833
  %1052 = icmp ne i8 %1051, 0, !dbg !4833
  %1053 = load i32, i32* @x.77
  %1054 = load i32, i32* @y.78
  %1055 = sub i32 %1053, 1
  %1056 = mul i32 %1053, %1055
  %1057 = urem i32 %1056, 2
  %1058 = icmp eq i32 %1057, 0
  %1059 = icmp slt i32 %1054, 10
  %1060 = or i1 %1058, %1059
  br i1 %1060, label %originalBBpart2250, label %originalBB237alteredBB

originalBBpart2250:                               ; preds = %originalBB237
  br i1 %1052, label %1061, label %1080, !dbg !4834

1061:                                             ; preds = %originalBBpart2250
  %1062 = load i32, i32* @x.77
  %1063 = load i32, i32* @y.78
  %1064 = sub i32 %1062, 1
  %1065 = mul i32 %1062, %1064
  %1066 = urem i32 %1065, 2
  %1067 = icmp eq i32 %1066, 0
  %1068 = icmp slt i32 %1063, 10
  %1069 = or i1 %1067, %1068
  br i1 %1069, label %originalBB252, label %originalBB252alteredBB

originalBB252:                                    ; preds = %1061, %originalBB252alteredBB
  %1070 = load i32, i32* %23, align 4, !dbg !4835
  %1071 = or i32 %1070, 2, !dbg !4835
  store i32 %1071, i32* %23, align 4, !dbg !4835
  %1072 = load i32, i32* @x.77
  %1073 = load i32, i32* @y.78
  %1074 = sub i32 %1072, 1
  %1075 = mul i32 %1072, %1074
  %1076 = urem i32 %1075, 2
  %1077 = icmp eq i32 %1076, 0
  %1078 = icmp slt i32 %1073, 10
  %1079 = or i1 %1077, %1078
  br i1 %1079, label %originalBBpart2266, label %originalBB252alteredBB

originalBBpart2266:                               ; preds = %originalBB252
  br label %1080, !dbg !4836

1080:                                             ; preds = %originalBBpart2266, %originalBBpart2250
  %1081 = load i32, i32* @x.77
  %1082 = load i32, i32* @y.78
  %1083 = sub i32 %1081, 1
  %1084 = mul i32 %1081, %1083
  %1085 = urem i32 %1084, 2
  %1086 = icmp eq i32 %1085, 0
  %1087 = icmp slt i32 %1082, 10
  %1088 = or i1 %1086, %1087
  br i1 %1088, label %originalBB268, label %originalBB268alteredBB

originalBB268:                                    ; preds = %1080, %originalBB268alteredBB
  %1089 = load i32, i32* @x.77
  %1090 = load i32, i32* @y.78
  %1091 = sub i32 %1089, 1
  %1092 = mul i32 %1089, %1091
  %1093 = urem i32 %1092, 2
  %1094 = icmp eq i32 %1093, 0
  %1095 = icmp slt i32 %1090, 10
  %1096 = or i1 %1094, %1095
  br i1 %1096, label %originalBBpart2270, label %originalBB268alteredBB

originalBBpart2270:                               ; preds = %originalBB268
  br label %1097, !dbg !4837

1097:                                             ; preds = %originalBBpart2270, %originalBBpart2107
  %1098 = load i32, i32* @x.77
  %1099 = load i32, i32* @y.78
  %1100 = sub i32 %1098, 1
  %1101 = mul i32 %1098, %1100
  %1102 = urem i32 %1101, 2
  %1103 = icmp eq i32 %1102, 0
  %1104 = icmp slt i32 %1099, 10
  %1105 = or i1 %1103, %1104
  br i1 %1105, label %originalBB272, label %originalBB272alteredBB

originalBB272:                                    ; preds = %1097, %originalBB272alteredBB
  %1106 = load i64, i64* %22, align 8, !dbg !4838
  %1107 = load i64*, i64** %18, align 8, !dbg !4839
  store i64 %1106, i64* %1107, align 8, !dbg !4840
  %1108 = load i32, i32* %23, align 4, !dbg !4841
  store i32 %1108, i32* %14, align 4, !dbg !4842
  %1109 = load i32, i32* @x.77
  %1110 = load i32, i32* @y.78
  %1111 = sub i32 %1109, 1
  %1112 = mul i32 %1109, %1111
  %1113 = urem i32 %1112, 2
  %1114 = icmp eq i32 %1113, 0
  %1115 = icmp slt i32 %1110, 10
  %1116 = or i1 %1114, %1115
  br i1 %1116, label %originalBBpart2274, label %originalBB272alteredBB

originalBBpart2274:                               ; preds = %originalBB272
  br label %1117, !dbg !4842

1117:                                             ; preds = %originalBBpart2274, %originalBBpart2235, %originalBBpart2124, %originalBBpart2103, %originalBBpart287, %originalBBpart271, %originalBBpart247
  %1118 = load i32, i32* @x.77
  %1119 = load i32, i32* @y.78
  %1120 = sub i32 %1118, 1
  %1121 = mul i32 %1118, %1120
  %1122 = urem i32 %1121, 2
  %1123 = icmp eq i32 %1122, 0
  %1124 = icmp slt i32 %1119, 10
  %1125 = or i1 %1123, %1124
  br i1 %1125, label %originalBB276, label %originalBB276alteredBB

originalBB276:                                    ; preds = %1117, %originalBB276alteredBB
  %1126 = load i32, i32* %14, align 4, !dbg !4843
  %1127 = load i32, i32* @x.77
  %1128 = load i32, i32* @y.78
  %1129 = sub i32 %1127, 1
  %1130 = mul i32 %1127, %1129
  %1131 = urem i32 %1130, 2
  %1132 = icmp eq i32 %1131, 0
  %1133 = icmp slt i32 %1128, 10
  %1134 = or i1 %1132, %1133
  br i1 %1134, label %originalBBpart2278, label %originalBB276alteredBB

originalBBpart2278:                               ; preds = %originalBB276
  ret i32 %1126, !dbg !4843

originalBBalteredBB:                              ; preds = %originalBB, %5
  %1135 = alloca i32, align 4
  %1136 = alloca i8*, align 8
  %1137 = alloca i8**, align 8
  %1138 = alloca i32, align 4
  %1139 = alloca i64*, align 8
  %1140 = alloca i8*, align 8
  %1141 = alloca i8*, align 8
  %1142 = alloca i8**, align 8
  %1143 = alloca i64, align 8
  %1144 = alloca i32, align 4
  %1145 = alloca i8*, align 8
  %1146 = alloca i8, align 1
  %1147 = alloca i32, align 4
  %1148 = alloca i32, align 4
  %1149 = alloca i32, align 4
  store i8* %0, i8** %1136, align 8
  call void @llvm.dbg.declare(metadata i8** %1136, metadata !4844, metadata !DIExpression()), !dbg !4623
  store i8** %1, i8*** %1137, align 8
  call void @llvm.dbg.declare(metadata i8*** %1137, metadata !4847, metadata !DIExpression()), !dbg !4625
  store i32 %2, i32* %1138, align 4
  call void @llvm.dbg.declare(metadata i32* %1138, metadata !4848, metadata !DIExpression()), !dbg !4627
  store i64* %3, i64** %1139, align 8
  call void @llvm.dbg.declare(metadata i64** %1139, metadata !4849, metadata !DIExpression()), !dbg !4629
  store i8* %4, i8** %1140, align 8
  call void @llvm.dbg.declare(metadata i8** %1140, metadata !4850, metadata !DIExpression()), !dbg !4631
  call void @llvm.dbg.declare(metadata i8** %1141, metadata !4851, metadata !DIExpression()), !dbg !4633
  call void @llvm.dbg.declare(metadata i8*** %1142, metadata !4852, metadata !DIExpression()), !dbg !4635
  call void @llvm.dbg.declare(metadata i64* %1143, metadata !4853, metadata !DIExpression()), !dbg !4637
  call void @llvm.dbg.declare(metadata i32* %1144, metadata !4854, metadata !DIExpression()), !dbg !4639
  store i32 0, i32* %1144, align 4, !dbg !4639
  %1150 = load i32, i32* %1138, align 4, !dbg !4640
  %1151 = icmp sle i32 0, %1150, !dbg !4640
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %39
  %1152 = load i32, i32* %17, align 4, !dbg !4640
  %1153 = icmp sle i32 %1152, 36, !dbg !4640
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %58
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %75
  call void @__assert_fail(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.142, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.143, i64 0, i64 0), i32 84, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @__PRETTY_FUNCTION__.xstrtoul, i64 0, i64 0)) #12, !dbg !4640
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %92
  %1154 = load i8**, i8*** %16, align 8, !dbg !4644
  %1155 = icmp ne i8** %1154, null, !dbg !4644
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %111
  %1156 = load i8**, i8*** %16, align 8, !dbg !4645
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %129
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %146
  store i8** %147, i8*** %21, align 8, !dbg !4646
  %1157 = call i32* @__errno_location() #15, !dbg !4647
  store i32 0, i32* %1157, align 4, !dbg !4648
  call void @llvm.dbg.declare(metadata !4, metadata !4855, metadata !DIExpression()), !dbg !4652
  %1158 = load i8*, i8** %15, align 8, !dbg !4653
  store i8* %1158, i8** %24, align 8, !dbg !4652
  call void @llvm.dbg.declare(metadata !4, metadata !4860, metadata !DIExpression()), !dbg !4655
  %1159 = load i8*, i8** %24, align 8, !dbg !4656
  %1160 = load i8, i8* %1159, align 1, !dbg !4657
  store i8 %1160, i8* %25, align 1, !dbg !4655
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %168
  %1161 = call i16** @__ctype_b_loc() #15, !dbg !4659
  %1162 = load i16*, i16** %1161, align 8, !dbg !4659
  %1163 = load i8, i8* %25, align 1, !dbg !4659
  %1164 = zext i8 %1163 to i32, !dbg !4659
  %1165 = sext i32 %1164 to i64, !dbg !4659
  %1166 = getelementptr inbounds i16, i16* %1162, i64 %1165, !dbg !4659
  %1167 = load i16, i16* %1166, align 2, !dbg !4659
  %1168 = zext i16 %1167 to i32, !dbg !4659
  %_ = sub i32 %1168, 8192
  %gen = mul i32 %_, 8192
  %_31 = shl i32 %1168, 8192
  %_32 = sub i32 %1168, 8192
  %gen33 = mul i32 %_32, 8192
  %1169 = and i32 %1168, 8192, !dbg !4659
  %1170 = icmp ne i32 %1169, 0, !dbg !4658
  br label %originalBB30

originalBB37alteredBB:                            ; preds = %originalBB37, %195
  %1171 = load i8*, i8** %24, align 8, !dbg !4660
  %1172 = getelementptr inbounds i8, i8* %1171, i32 1, !dbg !4660
  store i8* %1172, i8** %24, align 8, !dbg !4660
  %1173 = load i8, i8* %1172, align 1, !dbg !4661
  store i8 %1173, i8* %25, align 1, !dbg !4662
  br label %originalBB37

originalBB41alteredBB:                            ; preds = %originalBB41, %215
  %1174 = load i8, i8* %25, align 1, !dbg !4665
  %1175 = zext i8 %1174 to i32, !dbg !4665
  %1176 = icmp eq i32 %1175, 45, !dbg !4667
  br label %originalBB41

originalBB45alteredBB:                            ; preds = %originalBB45, %235
  store i32 4, i32* %14, align 4, !dbg !4669
  br label %originalBB45

originalBB49alteredBB:                            ; preds = %originalBB49, %252
  %1177 = load i8*, i8** %15, align 8, !dbg !4670
  %1178 = load i8**, i8*** %21, align 8, !dbg !4671
  %1179 = load i32, i32* %17, align 4, !dbg !4672
  %1180 = call i64 @strtoul(i8* %1177, i8** %1178, i32 %1179) #10, !dbg !4673
  store i64 %1180, i64* %22, align 8, !dbg !4674
  %1181 = load i8**, i8*** %21, align 8, !dbg !4675
  %1182 = load i8*, i8** %1181, align 8, !dbg !4677
  %1183 = load i8*, i8** %15, align 8, !dbg !4678
  %1184 = icmp eq i8* %1182, %1183, !dbg !4679
  br label %originalBB49

originalBB53alteredBB:                            ; preds = %originalBB53, %277
  %1185 = load i8*, i8** %19, align 8, !dbg !4681
  %1186 = icmp ne i8* %1185, null, !dbg !4681
  br label %originalBB53

originalBB57alteredBB:                            ; preds = %originalBB57, %296
  %1187 = load i8**, i8*** %21, align 8, !dbg !4685
  %1188 = load i8*, i8** %1187, align 8, !dbg !4686
  %1189 = load i8, i8* %1188, align 1, !dbg !4687
  %1190 = sext i8 %1189 to i32, !dbg !4687
  %1191 = icmp ne i32 %1190, 0, !dbg !4687
  br label %originalBB57

originalBB61alteredBB:                            ; preds = %originalBB61, %318
  %1192 = load i8*, i8** %19, align 8, !dbg !4689
  %1193 = load i8**, i8*** %21, align 8, !dbg !4690
  %1194 = load i8*, i8** %1193, align 8, !dbg !4691
  %1195 = load i8, i8* %1194, align 1, !dbg !4692
  %1196 = sext i8 %1195 to i32, !dbg !4692
  %1197 = call i8* @strchr(i8* %1192, i32 %1196) #13, !dbg !4693
  %1198 = icmp ne i8* %1197, null, !dbg !4693
  br label %originalBB61

originalBB65alteredBB:                            ; preds = %originalBB65, %342
  store i64 1, i64* %22, align 8, !dbg !4695
  br label %originalBB65

originalBB69alteredBB:                            ; preds = %originalBB69, %359
  store i32 4, i32* %14, align 4, !dbg !4697
  br label %originalBB69

originalBB73alteredBB:                            ; preds = %originalBB73, %376
  br label %originalBB73

originalBB77alteredBB:                            ; preds = %originalBB77, %393
  %1199 = call i32* @__errno_location() #15, !dbg !4699
  %1200 = load i32, i32* %1199, align 4, !dbg !4699
  %1201 = icmp ne i32 %1200, 0, !dbg !4701
  br label %originalBB77

originalBB81alteredBB:                            ; preds = %originalBB81, %413
  %1202 = call i32* @__errno_location() #15, !dbg !4703
  %1203 = load i32, i32* %1202, align 4, !dbg !4703
  %1204 = icmp ne i32 %1203, 34, !dbg !4706
  br label %originalBB81

originalBB85alteredBB:                            ; preds = %originalBB85, %433
  store i32 4, i32* %14, align 4, !dbg !4708
  br label %originalBB85

originalBB89alteredBB:                            ; preds = %originalBB89, %450
  store i32 1, i32* %23, align 4, !dbg !4709
  br label %originalBB89

originalBB93alteredBB:                            ; preds = %originalBB93, %467
  br label %originalBB93

originalBB97alteredBB:                            ; preds = %originalBB97, %484
  %1205 = load i8*, i8** %19, align 8, !dbg !4711
  %1206 = icmp ne i8* %1205, null, !dbg !4711
  br label %originalBB97

originalBB101alteredBB:                           ; preds = %originalBB101, %503
  %1207 = load i64, i64* %22, align 8, !dbg !4714
  %1208 = load i64*, i64** %18, align 8, !dbg !4716
  store i64 %1207, i64* %1208, align 8, !dbg !4717
  %1209 = load i32, i32* %23, align 4, !dbg !4718
  store i32 %1209, i32* %14, align 4, !dbg !4719
  br label %originalBB101

originalBB105alteredBB:                           ; preds = %originalBB105, %523
  %1210 = load i8**, i8*** %21, align 8, !dbg !4720
  %1211 = load i8*, i8** %1210, align 8, !dbg !4722
  %1212 = load i8, i8* %1211, align 1, !dbg !4723
  %1213 = sext i8 %1212 to i32, !dbg !4723
  %1214 = icmp ne i32 %1213, 0, !dbg !4724
  br label %originalBB105

originalBB109alteredBB:                           ; preds = %originalBB109, %545
  store i32 1024, i32* %26, align 4, !dbg !4728
  call void @llvm.dbg.declare(metadata !4, metadata !4861, metadata !DIExpression()), !dbg !4730
  store i32 1, i32* %27, align 4, !dbg !4730
  call void @llvm.dbg.declare(metadata !4, metadata !4866, metadata !DIExpression()), !dbg !4732
  %1215 = load i8*, i8** %19, align 8, !dbg !4733
  %1216 = load i8**, i8*** %21, align 8, !dbg !4735
  %1217 = load i8*, i8** %1216, align 8, !dbg !4736
  %1218 = load i8, i8* %1217, align 1, !dbg !4737
  %1219 = sext i8 %1218 to i32, !dbg !4737
  %1220 = call i8* @strchr(i8* %1215, i32 %1219) #13, !dbg !4738
  %1221 = icmp ne i8* %1220, null, !dbg !4738
  br label %originalBB109

originalBB113alteredBB:                           ; preds = %originalBB113, %569
  %1222 = load i64, i64* %22, align 8, !dbg !4740
  %1223 = load i64*, i64** %18, align 8, !dbg !4742
  store i64 %1222, i64* %1223, align 8, !dbg !4743
  %1224 = load i32, i32* %23, align 4, !dbg !4744
  %_114 = shl i32 %1224, 2
  %_115 = sub i32 0, %1224
  %gen116 = add i32 %_115, 2
  %_117 = sub i32 %1224, 2
  %gen118 = mul i32 %_117, 2
  %_119 = sub i32 %1224, 2
  %gen120 = mul i32 %_119, 2
  %_121 = shl i32 %1224, 2
  %_122 = shl i32 %1224, 2
  %1225 = or i32 %1224, 2, !dbg !4745
  store i32 %1225, i32* %14, align 4, !dbg !4746
  br label %originalBB113

originalBB126alteredBB:                           ; preds = %originalBB126, %590
  %1226 = load i8**, i8*** %21, align 8, !dbg !4747
  %1227 = load i8*, i8** %1226, align 8, !dbg !4748
  %1228 = load i8, i8* %1227, align 1, !dbg !4749
  %1229 = sext i8 %1228 to i32, !dbg !4749
  br label %originalBB126

originalBB130alteredBB:                           ; preds = %originalBB130, %611
  %1230 = load i8*, i8** %19, align 8, !dbg !4751
  %1231 = call i8* @strchr(i8* %1230, i32 48) #13, !dbg !4754
  %1232 = icmp ne i8* %1231, null, !dbg !4754
  br label %originalBB130

originalBB134alteredBB:                           ; preds = %originalBB134, %631
  %1233 = load i8**, i8*** %21, align 8, !dbg !4756
  %1234 = getelementptr inbounds i8*, i8** %1233, i64 0, !dbg !4756
  %1235 = load i8*, i8** %1234, align 8, !dbg !4756
  %1236 = getelementptr inbounds i8, i8* %1235, i64 1, !dbg !4756
  %1237 = load i8, i8* %1236, align 1, !dbg !4756
  %1238 = sext i8 %1237 to i32, !dbg !4756
  br label %originalBB134

originalBB138alteredBB:                           ; preds = %originalBB138, %654
  %1239 = load i8**, i8*** %21, align 8, !dbg !4758
  %1240 = getelementptr inbounds i8*, i8** %1239, i64 0, !dbg !4758
  %1241 = load i8*, i8** %1240, align 8, !dbg !4758
  %1242 = getelementptr inbounds i8, i8* %1241, i64 2, !dbg !4758
  %1243 = load i8, i8* %1242, align 1, !dbg !4758
  %1244 = sext i8 %1243 to i32, !dbg !4758
  %1245 = icmp eq i32 %1244, 66, !dbg !4761
  br label %originalBB138

originalBB142alteredBB:                           ; preds = %originalBB142, %678
  %1246 = load i32, i32* %27, align 4, !dbg !4763
  %_143 = shl i32 %1246, 2
  %_144 = shl i32 %1246, 2
  %_145 = shl i32 %1246, 2
  %_146 = shl i32 %1246, 2
  %1247 = add nsw i32 %1246, 2, !dbg !4763
  store i32 %1247, i32* %27, align 4, !dbg !4763
  br label %originalBB142

originalBB150alteredBB:                           ; preds = %originalBB150, %697
  br label %originalBB150

originalBB154alteredBB:                           ; preds = %originalBB154, %714
  store i32 1000, i32* %26, align 4, !dbg !4766
  %1248 = load i32, i32* %27, align 4, !dbg !4767
  %_155 = shl i32 %1248, 1
  %_156 = sub i32 %1248, 1
  %gen157 = mul i32 %_156, 1
  %_158 = shl i32 %1248, 1
  %_159 = shl i32 %1248, 1
  %_160 = shl i32 %1248, 1
  %1249 = add nsw i32 %1248, 1, !dbg !4767
  store i32 %1249, i32* %27, align 4, !dbg !4767
  br label %originalBB154

originalBB164alteredBB:                           ; preds = %originalBB164, %733
  br label %originalBB164

originalBB168alteredBB:                           ; preds = %originalBB168, %750
  br label %originalBB168

originalBB172alteredBB:                           ; preds = %originalBB172, %767
  %1250 = load i8**, i8*** %21, align 8, !dbg !4771
  %1251 = load i8*, i8** %1250, align 8, !dbg !4772
  %1252 = load i8, i8* %1251, align 1, !dbg !4773
  %1253 = sext i8 %1252 to i32, !dbg !4773
  br label %originalBB172

originalBB176alteredBB:                           ; preds = %originalBB176, %788
  %1254 = call i32 @bkm_scale(i64* %22, i32 512), !dbg !4775
  store i32 %1254, i32* %28, align 4, !dbg !4777
  br label %originalBB176

originalBB180alteredBB:                           ; preds = %originalBB180, %806
  %1255 = call i32 @bkm_scale(i64* %22, i32 1024), !dbg !4779
  store i32 %1255, i32* %28, align 4, !dbg !4780
  br label %originalBB180

originalBB184alteredBB:                           ; preds = %originalBB184, %824
  store i32 0, i32* %28, align 4, !dbg !4782
  br label %originalBB184

originalBB188alteredBB:                           ; preds = %originalBB188, %841
  %1256 = load i32, i32* %26, align 4, !dbg !4784
  %1257 = call i32 @bkm_scale_by_power(i64* %22, i32 %1256, i32 6), !dbg !4785
  store i32 %1257, i32* %28, align 4, !dbg !4786
  br label %originalBB188

originalBB192alteredBB:                           ; preds = %originalBB192, %860
  %1258 = load i32, i32* %26, align 4, !dbg !4788
  %1259 = call i32 @bkm_scale_by_power(i64* %22, i32 %1258, i32 3), !dbg !4789
  store i32 %1259, i32* %28, align 4, !dbg !4790
  br label %originalBB192

originalBB196alteredBB:                           ; preds = %originalBB196, %879
  %1260 = load i32, i32* %26, align 4, !dbg !4792
  %1261 = call i32 @bkm_scale_by_power(i64* %22, i32 %1260, i32 1), !dbg !4793
  store i32 %1261, i32* %28, align 4, !dbg !4794
  br label %originalBB196

originalBB200alteredBB:                           ; preds = %originalBB200, %898
  %1262 = load i32, i32* %26, align 4, !dbg !4796
  %1263 = call i32 @bkm_scale_by_power(i64* %22, i32 %1262, i32 2), !dbg !4797
  store i32 %1263, i32* %28, align 4, !dbg !4798
  br label %originalBB200

originalBB204alteredBB:                           ; preds = %originalBB204, %917
  %1264 = load i32, i32* %26, align 4, !dbg !4800
  %1265 = call i32 @bkm_scale_by_power(i64* %22, i32 %1264, i32 5), !dbg !4801
  store i32 %1265, i32* %28, align 4, !dbg !4802
  br label %originalBB204

originalBB208alteredBB:                           ; preds = %originalBB208, %936
  %1266 = load i32, i32* %26, align 4, !dbg !4804
  %1267 = call i32 @bkm_scale_by_power(i64* %22, i32 %1266, i32 4), !dbg !4805
  store i32 %1267, i32* %28, align 4, !dbg !4806
  br label %originalBB208

originalBB212alteredBB:                           ; preds = %originalBB212, %955
  %1268 = call i32 @bkm_scale(i64* %22, i32 2), !dbg !4808
  store i32 %1268, i32* %28, align 4, !dbg !4809
  br label %originalBB212

originalBB217alteredBB:                           ; preds = %originalBB217, %973
  %1269 = load i32, i32* %26, align 4, !dbg !4811
  %1270 = call i32 @bkm_scale_by_power(i64* %22, i32 %1269, i32 8), !dbg !4812
  store i32 %1270, i32* %28, align 4, !dbg !4813
  br label %originalBB217

originalBB221alteredBB:                           ; preds = %originalBB221, %992
  %1271 = load i32, i32* %26, align 4, !dbg !4815
  %1272 = call i32 @bkm_scale_by_power(i64* %22, i32 %1271, i32 7), !dbg !4816
  store i32 %1272, i32* %28, align 4, !dbg !4817
  br label %originalBB221

originalBB225alteredBB:                           ; preds = %originalBB225, %1011
  %1273 = load i64, i64* %22, align 8, !dbg !4819
  %1274 = load i64*, i64** %18, align 8, !dbg !4820
  store i64 %1273, i64* %1274, align 8, !dbg !4821
  %1275 = load i32, i32* %23, align 4, !dbg !4822
  %_226 = sub i32 0, %1275
  %gen227 = add i32 %_226, 2
  %_228 = sub i32 %1275, 2
  %gen229 = mul i32 %_228, 2
  %_230 = shl i32 %1275, 2
  %_231 = shl i32 %1275, 2
  %_232 = shl i32 %1275, 2
  %_233 = shl i32 %1275, 2
  %1276 = or i32 %1275, 2, !dbg !4823
  store i32 %1276, i32* %14, align 4, !dbg !4824
  br label %originalBB225

originalBB237alteredBB:                           ; preds = %originalBB237, %1032
  %1277 = load i32, i32* %28, align 4, !dbg !4825
  %1278 = load i32, i32* %23, align 4, !dbg !4826
  %_238 = shl i32 %1278, %1277
  %_239 = shl i32 %1278, %1277
  %_240 = sub i32 %1278, %1277
  %gen241 = mul i32 %_240, %1277
  %_242 = sub i32 %1278, %1277
  %gen243 = mul i32 %_242, %1277
  %_244 = sub i32 %1278, %1277
  %gen245 = mul i32 %_244, %1277
  %_246 = sub i32 0, %1278
  %gen247 = add i32 %_246, %1277
  %_248 = shl i32 %1278, %1277
  %1279 = or i32 %1278, %1277, !dbg !4826
  store i32 %1279, i32* %23, align 4, !dbg !4826
  %1280 = load i32, i32* %27, align 4, !dbg !4827
  %1281 = load i8**, i8*** %21, align 8, !dbg !4828
  %1282 = load i8*, i8** %1281, align 8, !dbg !4829
  %1283 = sext i32 %1280 to i64, !dbg !4829
  %1284 = getelementptr inbounds i8, i8* %1282, i64 %1283, !dbg !4829
  store i8* %1284, i8** %1281, align 8, !dbg !4829
  %1285 = load i8**, i8*** %21, align 8, !dbg !4830
  %1286 = load i8*, i8** %1285, align 8, !dbg !4832
  %1287 = load i8, i8* %1286, align 1, !dbg !4833
  %1288 = icmp ne i8 %1287, 0, !dbg !4833
  br label %originalBB237

originalBB252alteredBB:                           ; preds = %originalBB252, %1061
  %1289 = load i32, i32* %23, align 4, !dbg !4835
  %_253 = sub i32 0, %1289
  %gen254 = add i32 %_253, 2
  %_255 = sub i32 %1289, 2
  %gen256 = mul i32 %_255, 2
  %_257 = sub i32 %1289, 2
  %gen258 = mul i32 %_257, 2
  %_259 = shl i32 %1289, 2
  %_260 = sub i32 %1289, 2
  %gen261 = mul i32 %_260, 2
  %_262 = shl i32 %1289, 2
  %_263 = sub i32 0, %1289
  %gen264 = add i32 %_263, 2
  %1290 = or i32 %1289, 2, !dbg !4835
  store i32 %1290, i32* %23, align 4, !dbg !4835
  br label %originalBB252

originalBB268alteredBB:                           ; preds = %originalBB268, %1080
  br label %originalBB268

originalBB272alteredBB:                           ; preds = %originalBB272, %1097
  %1291 = load i64, i64* %22, align 8, !dbg !4838
  %1292 = load i64*, i64** %18, align 8, !dbg !4839
  store i64 %1291, i64* %1292, align 8, !dbg !4840
  %1293 = load i32, i32* %23, align 4, !dbg !4841
  store i32 %1293, i32* %14, align 4, !dbg !4842
  br label %originalBB272

originalBB276alteredBB:                           ; preds = %originalBB276, %1117
  %1294 = load i32, i32* %14, align 4, !dbg !4843
  br label %originalBB276
}

; Function Attrs: noreturn nounwind
declare dso_local void @__assert_fail(i8*, i8*, i32, i8*) #5

; Function Attrs: nounwind
declare dso_local i64 @strtoul(i8*, i8**, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @bkm_scale(i64*, i32) #4 !dbg !4867 {
  %3 = load i32, i32* @x.79
  %4 = load i32, i32* @y.80
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca i32, align 4
  %12 = alloca i64*, align 8
  %13 = alloca i32, align 4
  store i64* %0, i64** %12, align 8
  call void @llvm.dbg.declare(metadata i64** %12, metadata !4870, metadata !DIExpression()), !dbg !4871
  store i32 %1, i32* %13, align 4
  call void @llvm.dbg.declare(metadata i32* %13, metadata !4872, metadata !DIExpression()), !dbg !4873
  %14 = load i32, i32* %13, align 4, !dbg !4874
  %15 = sext i32 %14 to i64, !dbg !4874
  %16 = udiv i64 -1, %15, !dbg !4876
  %17 = load i64*, i64** %12, align 8, !dbg !4877
  %18 = load i64, i64* %17, align 8, !dbg !4878
  %19 = icmp ult i64 %16, %18, !dbg !4879
  %20 = load i32, i32* @x.79
  %21 = load i32, i32* @y.80
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %19, label %28, label %46, !dbg !4880

28:                                               ; preds = %originalBBpart2
  %29 = load i32, i32* @x.79
  %30 = load i32, i32* @y.80
  %31 = sub i32 %29, 1
  %32 = mul i32 %29, %31
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %34, %35
  br i1 %36, label %originalBB8, label %originalBB8alteredBB

originalBB8:                                      ; preds = %28, %originalBB8alteredBB
  %37 = load i64*, i64** %12, align 8, !dbg !4881
  store i64 -1, i64* %37, align 8, !dbg !4883
  store i32 1, i32* %11, align 4, !dbg !4884
  %38 = load i32, i32* @x.79
  %39 = load i32, i32* @y.80
  %40 = sub i32 %38, 1
  %41 = mul i32 %38, %40
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %43, %44
  br i1 %45, label %originalBBpart210, label %originalBB8alteredBB

originalBBpart210:                                ; preds = %originalBB8
  br label %68, !dbg !4884

46:                                               ; preds = %originalBBpart2
  %47 = load i32, i32* @x.79
  %48 = load i32, i32* @y.80
  %49 = sub i32 %47, 1
  %50 = mul i32 %47, %49
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %48, 10
  %54 = or i1 %52, %53
  br i1 %54, label %originalBB12, label %originalBB12alteredBB

originalBB12:                                     ; preds = %46, %originalBB12alteredBB
  %55 = load i32, i32* %13, align 4, !dbg !4885
  %56 = sext i32 %55 to i64, !dbg !4885
  %57 = load i64*, i64** %12, align 8, !dbg !4886
  %58 = load i64, i64* %57, align 8, !dbg !4887
  %59 = mul i64 %58, %56, !dbg !4887
  store i64 %59, i64* %57, align 8, !dbg !4887
  store i32 0, i32* %11, align 4, !dbg !4888
  %60 = load i32, i32* @x.79
  %61 = load i32, i32* @y.80
  %62 = sub i32 %60, 1
  %63 = mul i32 %60, %62
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %61, 10
  %67 = or i1 %65, %66
  br i1 %67, label %originalBBpart216, label %originalBB12alteredBB

originalBBpart216:                                ; preds = %originalBB12
  br label %68, !dbg !4888

68:                                               ; preds = %originalBBpart216, %originalBBpart210
  %69 = load i32, i32* @x.79
  %70 = load i32, i32* @y.80
  %71 = sub i32 %69, 1
  %72 = mul i32 %69, %71
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %74, %75
  br i1 %76, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %68, %originalBB18alteredBB
  %77 = load i32, i32* %11, align 4, !dbg !4889
  %78 = load i32, i32* @x.79
  %79 = load i32, i32* @y.80
  %80 = sub i32 %78, 1
  %81 = mul i32 %78, %80
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %79, 10
  %85 = or i1 %83, %84
  br i1 %85, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  ret i32 %77, !dbg !4889

originalBBalteredBB:                              ; preds = %originalBB, %2
  %86 = alloca i32, align 4
  %87 = alloca i64*, align 8
  %88 = alloca i32, align 4
  store i64* %0, i64** %87, align 8
  call void @llvm.dbg.declare(metadata i64** %87, metadata !4890, metadata !DIExpression()), !dbg !4871
  store i32 %1, i32* %88, align 4
  call void @llvm.dbg.declare(metadata i32* %88, metadata !4893, metadata !DIExpression()), !dbg !4873
  %89 = load i32, i32* %88, align 4, !dbg !4874
  %90 = sext i32 %89 to i64, !dbg !4874
  %_ = shl i64 -1, %90
  %_1 = sub i64 -1, %90
  %gen = mul i64 %_1, %90
  %_2 = shl i64 -1, %90
  %_3 = sub i64 0, -1
  %gen4 = add i64 %_3, %90
  %_5 = sub i64 -1, %90
  %gen6 = mul i64 %_5, %90
  %_7 = shl i64 -1, %90
  %91 = udiv i64 -1, %90, !dbg !4876
  %92 = load i64*, i64** %87, align 8, !dbg !4877
  %93 = load i64, i64* %92, align 8, !dbg !4878
  %94 = icmp ult i64 %91, %93, !dbg !4879
  br label %originalBB

originalBB8alteredBB:                             ; preds = %originalBB8, %28
  %95 = load i64*, i64** %12, align 8, !dbg !4881
  store i64 -1, i64* %95, align 8, !dbg !4883
  store i32 1, i32* %11, align 4, !dbg !4884
  br label %originalBB8

originalBB12alteredBB:                            ; preds = %originalBB12, %46
  %96 = load i32, i32* %13, align 4, !dbg !4885
  %97 = sext i32 %96 to i64, !dbg !4885
  %98 = load i64*, i64** %12, align 8, !dbg !4886
  %99 = load i64, i64* %98, align 8, !dbg !4887
  %_13 = sub i64 %99, %97
  %gen14 = mul i64 %_13, %97
  %100 = mul i64 %99, %97, !dbg !4887
  store i64 %100, i64* %98, align 8, !dbg !4887
  store i32 0, i32* %11, align 4, !dbg !4888
  br label %originalBB12

originalBB18alteredBB:                            ; preds = %originalBB18, %68
  %101 = load i32, i32* %11, align 4, !dbg !4889
  br label %originalBB18
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @bkm_scale_by_power(i64*, i32, i32) #4 !dbg !4894 {
  %4 = load i32, i32* @x.81
  %5 = load i32, i32* @y.82
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca i64*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  store i64* %0, i64** %12, align 8
  call void @llvm.dbg.declare(metadata i64** %12, metadata !4897, metadata !DIExpression()), !dbg !4898
  store i32 %1, i32* %13, align 4
  call void @llvm.dbg.declare(metadata i32* %13, metadata !4899, metadata !DIExpression()), !dbg !4900
  store i32 %2, i32* %14, align 4
  call void @llvm.dbg.declare(metadata i32* %14, metadata !4901, metadata !DIExpression()), !dbg !4902
  call void @llvm.dbg.declare(metadata i32* %15, metadata !4903, metadata !DIExpression()), !dbg !4904
  store i32 0, i32* %15, align 4, !dbg !4904
  %16 = load i32, i32* @x.81
  %17 = load i32, i32* @y.82
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %24, !dbg !4905

24:                                               ; preds = %originalBBpart216, %originalBBpart2
  %25 = load i32, i32* @x.81
  %26 = load i32, i32* @y.82
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %24, %originalBB1alteredBB
  %33 = load i32, i32* %14, align 4, !dbg !4906
  %34 = add nsw i32 %33, -1, !dbg !4906
  store i32 %34, i32* %14, align 4, !dbg !4906
  %35 = icmp ne i32 %33, 0, !dbg !4905
  %36 = load i32, i32* @x.81
  %37 = load i32, i32* @y.82
  %38 = sub i32 %36, 1
  %39 = mul i32 %36, %38
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %37, 10
  %43 = or i1 %41, %42
  br i1 %43, label %originalBBpart210, label %originalBB1alteredBB

originalBBpart210:                                ; preds = %originalBB1
  br i1 %35, label %44, label %66, !dbg !4905

44:                                               ; preds = %originalBBpart210
  %45 = load i32, i32* @x.81
  %46 = load i32, i32* @y.82
  %47 = sub i32 %45, 1
  %48 = mul i32 %45, %47
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %50, %51
  br i1 %52, label %originalBB12, label %originalBB12alteredBB

originalBB12:                                     ; preds = %44, %originalBB12alteredBB
  %53 = load i64*, i64** %12, align 8, !dbg !4907
  %54 = load i32, i32* %13, align 4, !dbg !4908
  %55 = call i32 @bkm_scale(i64* %53, i32 %54), !dbg !4909
  %56 = load i32, i32* %15, align 4, !dbg !4910
  %57 = or i32 %56, %55, !dbg !4910
  store i32 %57, i32* %15, align 4, !dbg !4910
  %58 = load i32, i32* @x.81
  %59 = load i32, i32* @y.82
  %60 = sub i32 %58, 1
  %61 = mul i32 %58, %60
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %59, 10
  %65 = or i1 %63, %64
  br i1 %65, label %originalBBpart216, label %originalBB12alteredBB

originalBBpart216:                                ; preds = %originalBB12
  br label %24, !dbg !4905, !llvm.loop !4911

66:                                               ; preds = %originalBBpart210
  %67 = load i32, i32* @x.81
  %68 = load i32, i32* @y.82
  %69 = sub i32 %67, 1
  %70 = mul i32 %67, %69
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %68, 10
  %74 = or i1 %72, %73
  br i1 %74, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %66, %originalBB18alteredBB
  %75 = load i32, i32* %15, align 4, !dbg !4913
  %76 = load i32, i32* @x.81
  %77 = load i32, i32* @y.82
  %78 = sub i32 %76, 1
  %79 = mul i32 %76, %78
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %77, 10
  %83 = or i1 %81, %82
  br i1 %83, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  ret i32 %75, !dbg !4914

originalBBalteredBB:                              ; preds = %originalBB, %3
  %84 = alloca i64*, align 8
  %85 = alloca i32, align 4
  %86 = alloca i32, align 4
  %87 = alloca i32, align 4
  store i64* %0, i64** %84, align 8
  call void @llvm.dbg.declare(metadata i64** %84, metadata !4915, metadata !DIExpression()), !dbg !4898
  store i32 %1, i32* %85, align 4
  call void @llvm.dbg.declare(metadata i32* %85, metadata !4918, metadata !DIExpression()), !dbg !4900
  store i32 %2, i32* %86, align 4
  call void @llvm.dbg.declare(metadata i32* %86, metadata !4919, metadata !DIExpression()), !dbg !4902
  call void @llvm.dbg.declare(metadata i32* %87, metadata !4920, metadata !DIExpression()), !dbg !4904
  store i32 0, i32* %87, align 4, !dbg !4904
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %24
  %88 = load i32, i32* %14, align 4, !dbg !4906
  %_ = sub i32 %88, -1
  %gen = mul i32 %_, -1
  %_2 = shl i32 %88, -1
  %_3 = shl i32 %88, -1
  %_4 = sub i32 %88, -1
  %gen5 = mul i32 %_4, -1
  %_6 = sub i32 0, %88
  %gen7 = add i32 %_6, -1
  %_8 = shl i32 %88, -1
  %89 = add nsw i32 %88, -1, !dbg !4906
  store i32 %89, i32* %14, align 4, !dbg !4906
  %90 = icmp ne i32 %88, 0, !dbg !4905
  br label %originalBB1

originalBB12alteredBB:                            ; preds = %originalBB12, %44
  %91 = load i64*, i64** %12, align 8, !dbg !4907
  %92 = load i32, i32* %13, align 4, !dbg !4908
  %93 = call i32 @bkm_scale(i64* %91, i32 %92), !dbg !4909
  %94 = load i32, i32* %15, align 4, !dbg !4910
  %_13 = sub i32 0, %94
  %gen14 = add i32 %_13, %93
  %95 = or i32 %94, %93, !dbg !4910
  store i32 %95, i32* %15, align 4, !dbg !4910
  br label %originalBB12

originalBB18alteredBB:                            ; preds = %originalBB18, %66
  %96 = load i32, i32* %15, align 4, !dbg !4913
  br label %originalBB18
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @rpl_mbrtowc(i32*, i8*, i64, %struct.__mbstate_t*) #4 !dbg !4921 {
  %5 = load i32, i32* @x.83
  %6 = load i32, i32* @y.84
  %7 = sub i32 %5, 1
  %8 = mul i32 %5, %7
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %6, 10
  %12 = or i1 %10, %11
  br i1 %12, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %4, %originalBBalteredBB
  %13 = alloca i64, align 8
  %14 = alloca i32*, align 8
  %15 = alloca i8*, align 8
  %16 = alloca i64, align 8
  %17 = alloca %struct.__mbstate_t*, align 8
  %18 = alloca i64, align 8
  %19 = alloca i32, align 4
  %20 = alloca i8, align 1
  store i32* %0, i32** %14, align 8
  call void @llvm.dbg.declare(metadata i32** %14, metadata !4937, metadata !DIExpression()), !dbg !4938
  store i8* %1, i8** %15, align 8
  call void @llvm.dbg.declare(metadata i8** %15, metadata !4939, metadata !DIExpression()), !dbg !4940
  store i64 %2, i64* %16, align 8
  call void @llvm.dbg.declare(metadata i64* %16, metadata !4941, metadata !DIExpression()), !dbg !4942
  store %struct.__mbstate_t* %3, %struct.__mbstate_t** %17, align 8
  call void @llvm.dbg.declare(metadata %struct.__mbstate_t** %17, metadata !4943, metadata !DIExpression()), !dbg !4944
  call void @llvm.dbg.declare(metadata i64* %18, metadata !4945, metadata !DIExpression()), !dbg !4946
  call void @llvm.dbg.declare(metadata i32* %19, metadata !4947, metadata !DIExpression()), !dbg !4948
  %21 = load i32*, i32** %14, align 8, !dbg !4949
  %22 = icmp ne i32* %21, null, !dbg !4949
  %23 = load i32, i32* @x.83
  %24 = load i32, i32* @y.84
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %22, label %48, label %31, !dbg !4951

31:                                               ; preds = %originalBBpart2
  %32 = load i32, i32* @x.83
  %33 = load i32, i32* @y.84
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %31, %originalBB1alteredBB
  store i32* %19, i32** %14, align 8, !dbg !4952
  %40 = load i32, i32* @x.83
  %41 = load i32, i32* @y.84
  %42 = sub i32 %40, 1
  %43 = mul i32 %40, %42
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %45, %46
  br i1 %47, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %48, !dbg !4953

48:                                               ; preds = %originalBBpart24, %originalBBpart2
  %49 = load i32, i32* @x.83
  %50 = load i32, i32* @y.84
  %51 = sub i32 %49, 1
  %52 = mul i32 %49, %51
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %50, 10
  %56 = or i1 %54, %55
  br i1 %56, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %48, %originalBB6alteredBB
  %57 = load i32*, i32** %14, align 8, !dbg !4954
  %58 = load i8*, i8** %15, align 8, !dbg !4955
  %59 = load i64, i64* %16, align 8, !dbg !4956
  %60 = load %struct.__mbstate_t*, %struct.__mbstate_t** %17, align 8, !dbg !4957
  %61 = call i64 @mbrtowc(i32* %57, i8* %58, i64 %59, %struct.__mbstate_t* %60) #10, !dbg !4958
  store i64 %61, i64* %18, align 8, !dbg !4959
  %62 = load i64, i64* %18, align 8, !dbg !4960
  %63 = icmp ule i64 -2, %62, !dbg !4962
  %64 = load i32, i32* @x.83
  %65 = load i32, i32* @y.84
  %66 = sub i32 %64, 1
  %67 = mul i32 %64, %66
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %65, 10
  %71 = or i1 %69, %70
  br i1 %71, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %63, label %72, label %131, !dbg !4963

72:                                               ; preds = %originalBBpart28
  %73 = load i32, i32* @x.83
  %74 = load i32, i32* @y.84
  %75 = sub i32 %73, 1
  %76 = mul i32 %73, %75
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %74, 10
  %80 = or i1 %78, %79
  br i1 %80, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %72, %originalBB10alteredBB
  %81 = load i64, i64* %16, align 8, !dbg !4964
  %82 = icmp ne i64 %81, 0, !dbg !4965
  %83 = load i32, i32* @x.83
  %84 = load i32, i32* @y.84
  %85 = sub i32 %83, 1
  %86 = mul i32 %83, %85
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %84, 10
  %90 = or i1 %88, %89
  br i1 %90, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %82, label %91, label %131, !dbg !4966

91:                                               ; preds = %originalBBpart212
  %92 = load i32, i32* @x.83
  %93 = load i32, i32* @y.84
  %94 = sub i32 %92, 1
  %95 = mul i32 %92, %94
  %96 = urem i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %93, 10
  %99 = or i1 %97, %98
  br i1 %99, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %91, %originalBB14alteredBB
  %100 = call zeroext i1 @hard_locale(i32 0), !dbg !4967
  %101 = load i32, i32* @x.83
  %102 = load i32, i32* @y.84
  %103 = sub i32 %101, 1
  %104 = mul i32 %101, %103
  %105 = urem i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %102, 10
  %108 = or i1 %106, %107
  br i1 %108, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %100, label %131, label %109, !dbg !4968

109:                                              ; preds = %originalBBpart216
  call void @llvm.dbg.declare(metadata i8* %20, metadata !4969, metadata !DIExpression()), !dbg !4971
  %110 = load i32, i32* @x.83
  %111 = load i32, i32* @y.84
  %112 = sub i32 %110, 1
  %113 = mul i32 %110, %112
  %114 = urem i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %111, 10
  %117 = or i1 %115, %116
  br i1 %117, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %109, %originalBB18alteredBB
  %118 = load i8*, i8** %15, align 8, !dbg !4972
  %119 = load i8, i8* %118, align 1, !dbg !4973
  store i8 %119, i8* %20, align 1, !dbg !4971
  %120 = load i8, i8* %20, align 1, !dbg !4974
  %121 = zext i8 %120 to i32, !dbg !4974
  %122 = load i32*, i32** %14, align 8, !dbg !4975
  store i32 %121, i32* %122, align 4, !dbg !4976
  store i64 1, i64* %13, align 8, !dbg !4977
  %123 = load i32, i32* @x.83
  %124 = load i32, i32* @y.84
  %125 = sub i32 %123, 1
  %126 = mul i32 %123, %125
  %127 = urem i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %124, 10
  %130 = or i1 %128, %129
  br i1 %130, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %149, !dbg !4977

131:                                              ; preds = %originalBBpart216, %originalBBpart212, %originalBBpart28
  %132 = load i32, i32* @x.83
  %133 = load i32, i32* @y.84
  %134 = sub i32 %132, 1
  %135 = mul i32 %132, %134
  %136 = urem i32 %135, 2
  %137 = icmp eq i32 %136, 0
  %138 = icmp slt i32 %133, 10
  %139 = or i1 %137, %138
  br i1 %139, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %131, %originalBB22alteredBB
  %140 = load i64, i64* %18, align 8, !dbg !4978
  store i64 %140, i64* %13, align 8, !dbg !4979
  %141 = load i32, i32* @x.83
  %142 = load i32, i32* @y.84
  %143 = sub i32 %141, 1
  %144 = mul i32 %141, %143
  %145 = urem i32 %144, 2
  %146 = icmp eq i32 %145, 0
  %147 = icmp slt i32 %142, 10
  %148 = or i1 %146, %147
  br i1 %148, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br label %149, !dbg !4979

149:                                              ; preds = %originalBBpart224, %originalBBpart220
  %150 = load i32, i32* @x.83
  %151 = load i32, i32* @y.84
  %152 = sub i32 %150, 1
  %153 = mul i32 %150, %152
  %154 = urem i32 %153, 2
  %155 = icmp eq i32 %154, 0
  %156 = icmp slt i32 %151, 10
  %157 = or i1 %155, %156
  br i1 %157, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %149, %originalBB26alteredBB
  %158 = load i64, i64* %13, align 8, !dbg !4980
  %159 = load i32, i32* @x.83
  %160 = load i32, i32* @y.84
  %161 = sub i32 %159, 1
  %162 = mul i32 %159, %161
  %163 = urem i32 %162, 2
  %164 = icmp eq i32 %163, 0
  %165 = icmp slt i32 %160, 10
  %166 = or i1 %164, %165
  br i1 %166, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  ret i64 %158, !dbg !4980

originalBBalteredBB:                              ; preds = %originalBB, %4
  %167 = alloca i64, align 8
  %168 = alloca i32*, align 8
  %169 = alloca i8*, align 8
  %170 = alloca i64, align 8
  %171 = alloca %struct.__mbstate_t*, align 8
  %172 = alloca i64, align 8
  %173 = alloca i32, align 4
  %174 = alloca i8, align 1
  store i32* %0, i32** %168, align 8
  call void @llvm.dbg.declare(metadata i32** %168, metadata !4981, metadata !DIExpression()), !dbg !4938
  store i8* %1, i8** %169, align 8
  call void @llvm.dbg.declare(metadata i8** %169, metadata !4997, metadata !DIExpression()), !dbg !4940
  store i64 %2, i64* %170, align 8
  call void @llvm.dbg.declare(metadata i64* %170, metadata !4998, metadata !DIExpression()), !dbg !4942
  store %struct.__mbstate_t* %3, %struct.__mbstate_t** %171, align 8
  call void @llvm.dbg.declare(metadata %struct.__mbstate_t** %171, metadata !4999, metadata !DIExpression()), !dbg !4944
  call void @llvm.dbg.declare(metadata i64* %172, metadata !5000, metadata !DIExpression()), !dbg !4946
  call void @llvm.dbg.declare(metadata i32* %173, metadata !5001, metadata !DIExpression()), !dbg !4948
  %175 = load i32*, i32** %168, align 8, !dbg !4949
  %176 = icmp ne i32* %175, null, !dbg !4949
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %31
  store i32* %19, i32** %14, align 8, !dbg !4952
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %48
  %177 = load i32*, i32** %14, align 8, !dbg !4954
  %178 = load i8*, i8** %15, align 8, !dbg !4955
  %179 = load i64, i64* %16, align 8, !dbg !4956
  %180 = load %struct.__mbstate_t*, %struct.__mbstate_t** %17, align 8, !dbg !4957
  %181 = call i64 @mbrtowc(i32* %177, i8* %178, i64 %179, %struct.__mbstate_t* %180) #10, !dbg !4958
  store i64 %181, i64* %18, align 8, !dbg !4959
  %182 = load i64, i64* %18, align 8, !dbg !4960
  %183 = icmp ule i64 -2, %182, !dbg !4962
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %72
  %184 = load i64, i64* %16, align 8, !dbg !4964
  %185 = icmp ne i64 %184, 0, !dbg !4965
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %91
  %186 = call zeroext i1 @hard_locale(i32 0), !dbg !4967
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %109
  %187 = load i8*, i8** %15, align 8, !dbg !4972
  %188 = load i8, i8* %187, align 1, !dbg !4973
  store i8 %188, i8* %20, align 1, !dbg !4971
  %189 = load i8, i8* %20, align 1, !dbg !4974
  %190 = zext i8 %189 to i32, !dbg !4974
  %191 = load i32*, i32** %14, align 8, !dbg !4975
  store i32 %190, i32* %191, align 4, !dbg !4976
  store i64 1, i64* %13, align 8, !dbg !4977
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %131
  %192 = load i64, i64* %18, align 8, !dbg !4978
  store i64 %192, i64* %13, align 8, !dbg !4979
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %149
  %193 = load i64, i64* %13, align 8, !dbg !4980
  br label %originalBB26
}

; Function Attrs: nounwind
declare dso_local i64 @mbrtowc(i32*, i8*, i64, %struct.__mbstate_t*) #2

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @c_strcasecmp(i8*, i8*) #11 !dbg !5002 {
  %3 = load i32, i32* @x.85
  %4 = load i32, i32* @y.86
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca i32, align 4
  %12 = alloca i8*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i8*, align 8
  %16 = alloca i8, align 1
  %17 = alloca i8, align 1
  store i8* %0, i8** %12, align 8
  call void @llvm.dbg.declare(metadata i8** %12, metadata !5006, metadata !DIExpression()), !dbg !5007
  store i8* %1, i8** %13, align 8
  call void @llvm.dbg.declare(metadata i8** %13, metadata !5008, metadata !DIExpression()), !dbg !5009
  call void @llvm.dbg.declare(metadata i8** %14, metadata !5010, metadata !DIExpression()), !dbg !5011
  %18 = load i8*, i8** %12, align 8, !dbg !5012
  store i8* %18, i8** %14, align 8, !dbg !5011
  call void @llvm.dbg.declare(metadata i8** %15, metadata !5013, metadata !DIExpression()), !dbg !5014
  %19 = load i8*, i8** %13, align 8, !dbg !5015
  store i8* %19, i8** %15, align 8, !dbg !5014
  call void @llvm.dbg.declare(metadata i8* %16, metadata !5016, metadata !DIExpression()), !dbg !5017
  call void @llvm.dbg.declare(metadata i8* %17, metadata !5018, metadata !DIExpression()), !dbg !5019
  %20 = load i8*, i8** %14, align 8, !dbg !5020
  %21 = load i8*, i8** %15, align 8, !dbg !5022
  %22 = icmp eq i8* %20, %21, !dbg !5023
  %23 = load i32, i32* @x.85
  %24 = load i32, i32* @y.86
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %22, label %31, label %48, !dbg !5024

31:                                               ; preds = %originalBBpart2
  %32 = load i32, i32* @x.85
  %33 = load i32, i32* @y.86
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %31, %originalBB1alteredBB
  store i32 0, i32* %11, align 4, !dbg !5025
  %40 = load i32, i32* @x.85
  %41 = load i32, i32* @y.86
  %42 = sub i32 %40, 1
  %43 = mul i32 %40, %42
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %45, %46
  br i1 %47, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %177, !dbg !5025

48:                                               ; preds = %originalBBpart2
  %49 = load i32, i32* @x.85
  %50 = load i32, i32* @y.86
  %51 = sub i32 %49, 1
  %52 = mul i32 %49, %51
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %50, 10
  %56 = or i1 %54, %55
  br i1 %56, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %48, %originalBB6alteredBB
  %57 = load i32, i32* @x.85
  %58 = load i32, i32* @y.86
  %59 = sub i32 %57, 1
  %60 = mul i32 %57, %59
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %58, 10
  %64 = or i1 %62, %63
  br i1 %64, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %65, !dbg !5026

65:                                               ; preds = %originalBBpart224, %originalBBpart28
  %66 = load i32, i32* @x.85
  %67 = load i32, i32* @y.86
  %68 = sub i32 %66, 1
  %69 = mul i32 %66, %68
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %67, 10
  %73 = or i1 %71, %72
  br i1 %73, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %65, %originalBB10alteredBB
  %74 = load i8*, i8** %14, align 8, !dbg !5027
  %75 = load i8, i8* %74, align 1, !dbg !5029
  %76 = zext i8 %75 to i32, !dbg !5029
  %77 = call i32 @c_tolower(i32 %76), !dbg !5030
  %78 = trunc i32 %77 to i8, !dbg !5030
  store i8 %78, i8* %16, align 1, !dbg !5031
  %79 = load i8*, i8** %15, align 8, !dbg !5032
  %80 = load i8, i8* %79, align 1, !dbg !5033
  %81 = zext i8 %80 to i32, !dbg !5033
  %82 = call i32 @c_tolower(i32 %81), !dbg !5034
  %83 = trunc i32 %82 to i8, !dbg !5034
  store i8 %83, i8* %17, align 1, !dbg !5035
  %84 = load i8, i8* %16, align 1, !dbg !5036
  %85 = zext i8 %84 to i32, !dbg !5036
  %86 = icmp eq i32 %85, 0, !dbg !5038
  %87 = load i32, i32* @x.85
  %88 = load i32, i32* @y.86
  %89 = sub i32 %87, 1
  %90 = mul i32 %87, %89
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %88, 10
  %94 = or i1 %92, %93
  br i1 %94, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %86, label %95, label %112, !dbg !5039

95:                                               ; preds = %originalBBpart212
  %96 = load i32, i32* @x.85
  %97 = load i32, i32* @y.86
  %98 = sub i32 %96, 1
  %99 = mul i32 %96, %98
  %100 = urem i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = icmp slt i32 %97, 10
  %103 = or i1 %101, %102
  br i1 %103, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %95, %originalBB14alteredBB
  %104 = load i32, i32* @x.85
  %105 = load i32, i32* @y.86
  %106 = sub i32 %104, 1
  %107 = mul i32 %104, %106
  %108 = urem i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = icmp slt i32 %105, 10
  %111 = or i1 %109, %110
  br i1 %111, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %155, !dbg !5040

112:                                              ; preds = %originalBBpart212
  %113 = load i32, i32* @x.85
  %114 = load i32, i32* @y.86
  %115 = sub i32 %113, 1
  %116 = mul i32 %113, %115
  %117 = urem i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = icmp slt i32 %114, 10
  %120 = or i1 %118, %119
  br i1 %120, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %112, %originalBB18alteredBB
  %121 = load i8*, i8** %14, align 8, !dbg !5041
  %122 = getelementptr inbounds i8, i8* %121, i32 1, !dbg !5041
  store i8* %122, i8** %14, align 8, !dbg !5041
  %123 = load i8*, i8** %15, align 8, !dbg !5042
  %124 = getelementptr inbounds i8, i8* %123, i32 1, !dbg !5042
  store i8* %124, i8** %15, align 8, !dbg !5042
  %125 = load i32, i32* @x.85
  %126 = load i32, i32* @y.86
  %127 = sub i32 %125, 1
  %128 = mul i32 %125, %127
  %129 = urem i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = icmp slt i32 %126, 10
  %132 = or i1 %130, %131
  br i1 %132, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %133, !dbg !5043

133:                                              ; preds = %originalBBpart220
  %134 = load i32, i32* @x.85
  %135 = load i32, i32* @y.86
  %136 = sub i32 %134, 1
  %137 = mul i32 %134, %136
  %138 = urem i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = icmp slt i32 %135, 10
  %141 = or i1 %139, %140
  br i1 %141, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %133, %originalBB22alteredBB
  %142 = load i8, i8* %16, align 1, !dbg !5044
  %143 = zext i8 %142 to i32, !dbg !5044
  %144 = load i8, i8* %17, align 1, !dbg !5045
  %145 = zext i8 %144 to i32, !dbg !5045
  %146 = icmp eq i32 %143, %145, !dbg !5046
  %147 = load i32, i32* @x.85
  %148 = load i32, i32* @y.86
  %149 = sub i32 %147, 1
  %150 = mul i32 %147, %149
  %151 = urem i32 %150, 2
  %152 = icmp eq i32 %151, 0
  %153 = icmp slt i32 %148, 10
  %154 = or i1 %152, %153
  br i1 %154, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br i1 %146, label %65, label %155, !dbg !5043, !llvm.loop !5047

155:                                              ; preds = %originalBBpart224, %originalBBpart216
  %156 = load i32, i32* @x.85
  %157 = load i32, i32* @y.86
  %158 = sub i32 %156, 1
  %159 = mul i32 %156, %158
  %160 = urem i32 %159, 2
  %161 = icmp eq i32 %160, 0
  %162 = icmp slt i32 %157, 10
  %163 = or i1 %161, %162
  br i1 %163, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %155, %originalBB26alteredBB
  %164 = load i8, i8* %16, align 1, !dbg !5049
  %165 = zext i8 %164 to i32, !dbg !5049
  %166 = load i8, i8* %17, align 1, !dbg !5051
  %167 = zext i8 %166 to i32, !dbg !5051
  %168 = sub nsw i32 %165, %167, !dbg !5052
  store i32 %168, i32* %11, align 4, !dbg !5053
  %169 = load i32, i32* @x.85
  %170 = load i32, i32* @y.86
  %171 = sub i32 %169, 1
  %172 = mul i32 %169, %171
  %173 = urem i32 %172, 2
  %174 = icmp eq i32 %173, 0
  %175 = icmp slt i32 %170, 10
  %176 = or i1 %174, %175
  br i1 %176, label %originalBBpart229, label %originalBB26alteredBB

originalBBpart229:                                ; preds = %originalBB26
  br label %177, !dbg !5053

177:                                              ; preds = %originalBBpart229, %originalBBpart24
  %178 = load i32, i32* @x.85
  %179 = load i32, i32* @y.86
  %180 = sub i32 %178, 1
  %181 = mul i32 %178, %180
  %182 = urem i32 %181, 2
  %183 = icmp eq i32 %182, 0
  %184 = icmp slt i32 %179, 10
  %185 = or i1 %183, %184
  br i1 %185, label %originalBB31, label %originalBB31alteredBB

originalBB31:                                     ; preds = %177, %originalBB31alteredBB
  %186 = load i32, i32* %11, align 4, !dbg !5054
  %187 = load i32, i32* @x.85
  %188 = load i32, i32* @y.86
  %189 = sub i32 %187, 1
  %190 = mul i32 %187, %189
  %191 = urem i32 %190, 2
  %192 = icmp eq i32 %191, 0
  %193 = icmp slt i32 %188, 10
  %194 = or i1 %192, %193
  br i1 %194, label %originalBBpart233, label %originalBB31alteredBB

originalBBpart233:                                ; preds = %originalBB31
  ret i32 %186, !dbg !5054

originalBBalteredBB:                              ; preds = %originalBB, %2
  %195 = alloca i32, align 4
  %196 = alloca i8*, align 8
  %197 = alloca i8*, align 8
  %198 = alloca i8*, align 8
  %199 = alloca i8*, align 8
  %200 = alloca i8, align 1
  %201 = alloca i8, align 1
  store i8* %0, i8** %196, align 8
  call void @llvm.dbg.declare(metadata i8** %196, metadata !5055, metadata !DIExpression()), !dbg !5007
  store i8* %1, i8** %197, align 8
  call void @llvm.dbg.declare(metadata i8** %197, metadata !5058, metadata !DIExpression()), !dbg !5009
  call void @llvm.dbg.declare(metadata i8** %198, metadata !5059, metadata !DIExpression()), !dbg !5011
  %202 = load i8*, i8** %196, align 8, !dbg !5012
  store i8* %202, i8** %198, align 8, !dbg !5011
  call void @llvm.dbg.declare(metadata i8** %199, metadata !5060, metadata !DIExpression()), !dbg !5014
  %203 = load i8*, i8** %197, align 8, !dbg !5015
  store i8* %203, i8** %199, align 8, !dbg !5014
  call void @llvm.dbg.declare(metadata i8* %200, metadata !5061, metadata !DIExpression()), !dbg !5017
  call void @llvm.dbg.declare(metadata i8* %201, metadata !5062, metadata !DIExpression()), !dbg !5019
  %204 = load i8*, i8** %198, align 8, !dbg !5020
  %205 = load i8*, i8** %199, align 8, !dbg !5022
  %206 = icmp eq i8* %204, %205, !dbg !5023
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %31
  store i32 0, i32* %11, align 4, !dbg !5025
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %48
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %65
  %207 = load i8*, i8** %14, align 8, !dbg !5027
  %208 = load i8, i8* %207, align 1, !dbg !5029
  %209 = zext i8 %208 to i32, !dbg !5029
  %210 = call i32 @c_tolower(i32 %209), !dbg !5030
  %211 = trunc i32 %210 to i8, !dbg !5030
  store i8 %211, i8* %16, align 1, !dbg !5031
  %212 = load i8*, i8** %15, align 8, !dbg !5032
  %213 = load i8, i8* %212, align 1, !dbg !5033
  %214 = zext i8 %213 to i32, !dbg !5033
  %215 = call i32 @c_tolower(i32 %214), !dbg !5034
  %216 = trunc i32 %215 to i8, !dbg !5034
  store i8 %216, i8* %17, align 1, !dbg !5035
  %217 = load i8, i8* %16, align 1, !dbg !5036
  %218 = zext i8 %217 to i32, !dbg !5036
  %219 = icmp eq i32 %218, 0, !dbg !5038
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %95
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %112
  %220 = load i8*, i8** %14, align 8, !dbg !5041
  %221 = getelementptr inbounds i8, i8* %220, i32 1, !dbg !5041
  store i8* %221, i8** %14, align 8, !dbg !5041
  %222 = load i8*, i8** %15, align 8, !dbg !5042
  %223 = getelementptr inbounds i8, i8* %222, i32 1, !dbg !5042
  store i8* %223, i8** %15, align 8, !dbg !5042
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %133
  %224 = load i8, i8* %16, align 1, !dbg !5044
  %225 = zext i8 %224 to i32, !dbg !5044
  %226 = load i8, i8* %17, align 1, !dbg !5045
  %227 = zext i8 %226 to i32, !dbg !5045
  %228 = icmp eq i32 %225, %227, !dbg !5046
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %155
  %229 = load i8, i8* %16, align 1, !dbg !5049
  %230 = zext i8 %229 to i32, !dbg !5049
  %231 = load i8, i8* %17, align 1, !dbg !5051
  %232 = zext i8 %231 to i32, !dbg !5051
  %_ = sub i32 %230, %232
  %gen = mul i32 %_, %232
  %_27 = shl i32 %230, %232
  %233 = sub nsw i32 %230, %232, !dbg !5052
  store i32 %233, i32* %11, align 4, !dbg !5053
  br label %originalBB26

originalBB31alteredBB:                            ; preds = %originalBB31, %177
  %234 = load i32, i32* %11, align 4, !dbg !5054
  br label %originalBB31
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @close_stream(%struct._IO_FILE*) #4 !dbg !5063 {
  %2 = load i32, i32* @x.87
  %3 = load i32, i32* @y.88
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i32, align 4
  %11 = alloca %struct._IO_FILE*, align 8
  %12 = alloca i8, align 1
  %13 = alloca i8, align 1
  %14 = alloca i8, align 1
  store %struct._IO_FILE* %0, %struct._IO_FILE** %11, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %11, metadata !5101, metadata !DIExpression()), !dbg !5102
  call void @llvm.dbg.declare(metadata i8* %12, metadata !5103, metadata !DIExpression()), !dbg !5105
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !5106
  %16 = call i64 @__fpending(%struct._IO_FILE* %15) #10, !dbg !5107
  %17 = icmp ne i64 %16, 0, !dbg !5108
  %18 = zext i1 %17 to i8, !dbg !5105
  store i8 %18, i8* %12, align 1, !dbg !5105
  call void @llvm.dbg.declare(metadata i8* %13, metadata !5109, metadata !DIExpression()), !dbg !5110
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !5111
  %20 = call i32 @ferror_unlocked(%struct._IO_FILE* %19) #10, !dbg !5111
  %21 = icmp ne i32 %20, 0, !dbg !5112
  %22 = zext i1 %21 to i8, !dbg !5110
  store i8 %22, i8* %13, align 1, !dbg !5110
  call void @llvm.dbg.declare(metadata i8* %14, metadata !5113, metadata !DIExpression()), !dbg !5114
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !5115
  %24 = call i32 @rpl_fclose(%struct._IO_FILE* %23), !dbg !5116
  %25 = icmp ne i32 %24, 0, !dbg !5117
  %26 = zext i1 %25 to i8, !dbg !5114
  store i8 %26, i8* %14, align 1, !dbg !5114
  %27 = load i8, i8* %13, align 1, !dbg !5118
  %28 = trunc i8 %27 to i1, !dbg !5118
  %29 = load i32, i32* @x.87
  %30 = load i32, i32* @y.88
  %31 = sub i32 %29, 1
  %32 = mul i32 %29, %31
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %34, %35
  br i1 %36, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %28, label %95, label %37, !dbg !5120

37:                                               ; preds = %originalBBpart2
  %38 = load i32, i32* @x.87
  %39 = load i32, i32* @y.88
  %40 = sub i32 %38, 1
  %41 = mul i32 %38, %40
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %43, %44
  br i1 %45, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %37, %originalBB1alteredBB
  %46 = load i8, i8* %14, align 1, !dbg !5121
  %47 = trunc i8 %46 to i1, !dbg !5121
  %48 = load i32, i32* @x.87
  %49 = load i32, i32* @y.88
  %50 = sub i32 %48, 1
  %51 = mul i32 %48, %50
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %53, %54
  br i1 %55, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %47, label %56, label %149, !dbg !5122

56:                                               ; preds = %originalBBpart24
  %57 = load i32, i32* @x.87
  %58 = load i32, i32* @y.88
  %59 = sub i32 %57, 1
  %60 = mul i32 %57, %59
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %58, 10
  %64 = or i1 %62, %63
  br i1 %64, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %56, %originalBB6alteredBB
  %65 = load i8, i8* %12, align 1, !dbg !5123
  %66 = trunc i8 %65 to i1, !dbg !5123
  %67 = load i32, i32* @x.87
  %68 = load i32, i32* @y.88
  %69 = sub i32 %67, 1
  %70 = mul i32 %67, %69
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %68, 10
  %74 = or i1 %72, %73
  br i1 %74, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %66, label %95, label %75, !dbg !5124

75:                                               ; preds = %originalBBpart28
  %76 = load i32, i32* @x.87
  %77 = load i32, i32* @y.88
  %78 = sub i32 %76, 1
  %79 = mul i32 %76, %78
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %77, 10
  %83 = or i1 %81, %82
  br i1 %83, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %75, %originalBB10alteredBB
  %84 = call i32* @__errno_location() #15, !dbg !5125
  %85 = load i32, i32* %84, align 4, !dbg !5125
  %86 = icmp ne i32 %85, 9, !dbg !5126
  %87 = load i32, i32* @x.87
  %88 = load i32, i32* @y.88
  %89 = sub i32 %87, 1
  %90 = mul i32 %87, %89
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %88, 10
  %94 = or i1 %92, %93
  br i1 %94, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %86, label %95, label %149, !dbg !5127

95:                                               ; preds = %originalBBpart212, %originalBBpart28, %originalBBpart2
  %96 = load i32, i32* @x.87
  %97 = load i32, i32* @y.88
  %98 = sub i32 %96, 1
  %99 = mul i32 %96, %98
  %100 = urem i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = icmp slt i32 %97, 10
  %103 = or i1 %101, %102
  br i1 %103, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %95, %originalBB14alteredBB
  %104 = load i8, i8* %14, align 1, !dbg !5128
  %105 = trunc i8 %104 to i1, !dbg !5128
  %106 = load i32, i32* @x.87
  %107 = load i32, i32* @y.88
  %108 = sub i32 %106, 1
  %109 = mul i32 %106, %108
  %110 = urem i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %107, 10
  %113 = or i1 %111, %112
  br i1 %113, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %105, label %132, label %114, !dbg !5131

114:                                              ; preds = %originalBBpart216
  %115 = load i32, i32* @x.87
  %116 = load i32, i32* @y.88
  %117 = sub i32 %115, 1
  %118 = mul i32 %115, %117
  %119 = urem i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = icmp slt i32 %116, 10
  %122 = or i1 %120, %121
  br i1 %122, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %114, %originalBB18alteredBB
  %123 = call i32* @__errno_location() #15, !dbg !5132
  store i32 0, i32* %123, align 4, !dbg !5133
  %124 = load i32, i32* @x.87
  %125 = load i32, i32* @y.88
  %126 = sub i32 %124, 1
  %127 = mul i32 %124, %126
  %128 = urem i32 %127, 2
  %129 = icmp eq i32 %128, 0
  %130 = icmp slt i32 %125, 10
  %131 = or i1 %129, %130
  br i1 %131, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %132, !dbg !5132

132:                                              ; preds = %originalBBpart220, %originalBBpart216
  %133 = load i32, i32* @x.87
  %134 = load i32, i32* @y.88
  %135 = sub i32 %133, 1
  %136 = mul i32 %133, %135
  %137 = urem i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = icmp slt i32 %134, 10
  %140 = or i1 %138, %139
  br i1 %140, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %132, %originalBB22alteredBB
  store i32 -1, i32* %10, align 4, !dbg !5134
  %141 = load i32, i32* @x.87
  %142 = load i32, i32* @y.88
  %143 = sub i32 %141, 1
  %144 = mul i32 %141, %143
  %145 = urem i32 %144, 2
  %146 = icmp eq i32 %145, 0
  %147 = icmp slt i32 %142, 10
  %148 = or i1 %146, %147
  br i1 %148, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br label %166, !dbg !5134

149:                                              ; preds = %originalBBpart212, %originalBBpart24
  %150 = load i32, i32* @x.87
  %151 = load i32, i32* @y.88
  %152 = sub i32 %150, 1
  %153 = mul i32 %150, %152
  %154 = urem i32 %153, 2
  %155 = icmp eq i32 %154, 0
  %156 = icmp slt i32 %151, 10
  %157 = or i1 %155, %156
  br i1 %157, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %149, %originalBB26alteredBB
  store i32 0, i32* %10, align 4, !dbg !5135
  %158 = load i32, i32* @x.87
  %159 = load i32, i32* @y.88
  %160 = sub i32 %158, 1
  %161 = mul i32 %158, %160
  %162 = urem i32 %161, 2
  %163 = icmp eq i32 %162, 0
  %164 = icmp slt i32 %159, 10
  %165 = or i1 %163, %164
  br i1 %165, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br label %166, !dbg !5135

166:                                              ; preds = %originalBBpart228, %originalBBpart224
  %167 = load i32, i32* @x.87
  %168 = load i32, i32* @y.88
  %169 = sub i32 %167, 1
  %170 = mul i32 %167, %169
  %171 = urem i32 %170, 2
  %172 = icmp eq i32 %171, 0
  %173 = icmp slt i32 %168, 10
  %174 = or i1 %172, %173
  br i1 %174, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %166, %originalBB30alteredBB
  %175 = load i32, i32* %10, align 4, !dbg !5136
  %176 = load i32, i32* @x.87
  %177 = load i32, i32* @y.88
  %178 = sub i32 %176, 1
  %179 = mul i32 %176, %178
  %180 = urem i32 %179, 2
  %181 = icmp eq i32 %180, 0
  %182 = icmp slt i32 %177, 10
  %183 = or i1 %181, %182
  br i1 %183, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  ret i32 %175, !dbg !5136

originalBBalteredBB:                              ; preds = %originalBB, %1
  %184 = alloca i32, align 4
  %185 = alloca %struct._IO_FILE*, align 8
  %186 = alloca i8, align 1
  %187 = alloca i8, align 1
  %188 = alloca i8, align 1
  store %struct._IO_FILE* %0, %struct._IO_FILE** %185, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %185, metadata !5137, metadata !DIExpression()), !dbg !5102
  call void @llvm.dbg.declare(metadata i8* %186, metadata !5176, metadata !DIExpression()), !dbg !5105
  %189 = load %struct._IO_FILE*, %struct._IO_FILE** %185, align 8, !dbg !5106
  %190 = call i64 @__fpending(%struct._IO_FILE* %189) #10, !dbg !5107
  %191 = icmp ne i64 %190, 0, !dbg !5108
  %192 = zext i1 %191 to i8, !dbg !5105
  store i8 %192, i8* %186, align 1, !dbg !5105
  call void @llvm.dbg.declare(metadata i8* %187, metadata !5177, metadata !DIExpression()), !dbg !5110
  %193 = load %struct._IO_FILE*, %struct._IO_FILE** %185, align 8, !dbg !5111
  %194 = call i32 @ferror_unlocked(%struct._IO_FILE* %193) #10, !dbg !5111
  %195 = icmp ne i32 %194, 0, !dbg !5112
  %196 = zext i1 %195 to i8, !dbg !5110
  store i8 %196, i8* %187, align 1, !dbg !5110
  call void @llvm.dbg.declare(metadata i8* %188, metadata !5178, metadata !DIExpression()), !dbg !5114
  %197 = load %struct._IO_FILE*, %struct._IO_FILE** %185, align 8, !dbg !5115
  %198 = call i32 @rpl_fclose(%struct._IO_FILE* %197), !dbg !5116
  %199 = icmp ne i32 %198, 0, !dbg !5117
  %200 = zext i1 %199 to i8, !dbg !5114
  store i8 %200, i8* %188, align 1, !dbg !5114
  %201 = load i8, i8* %187, align 1, !dbg !5118
  %202 = trunc i8 %201 to i1, !dbg !5118
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %37
  %203 = load i8, i8* %14, align 1, !dbg !5121
  %204 = trunc i8 %203 to i1, !dbg !5121
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %56
  %205 = load i8, i8* %12, align 1, !dbg !5123
  %206 = trunc i8 %205 to i1, !dbg !5123
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %75
  %207 = call i32* @__errno_location() #15, !dbg !5125
  %208 = load i32, i32* %207, align 4, !dbg !5125
  %209 = icmp ne i32 %208, 9, !dbg !5126
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %95
  %210 = load i8, i8* %14, align 1, !dbg !5128
  %211 = trunc i8 %210 to i1, !dbg !5128
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %114
  %212 = call i32* @__errno_location() #15, !dbg !5132
  store i32 0, i32* %212, align 4, !dbg !5133
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %132
  store i32 -1, i32* %10, align 4, !dbg !5134
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %149
  store i32 0, i32* %10, align 4, !dbg !5135
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %166
  %213 = load i32, i32* %10, align 4, !dbg !5136
  br label %originalBB30
}

; Function Attrs: nounwind
declare dso_local i64 @__fpending(%struct._IO_FILE*) #2

; Function Attrs: nounwind
declare dso_local i32 @ferror_unlocked(%struct._IO_FILE*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @hard_locale(i32) #4 !dbg !5179 {
  %2 = load i32, i32* @x.89
  %3 = load i32, i32* @y.90
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i1, align 1
  %11 = alloca i32, align 4
  %12 = alloca [257 x i8], align 16
  store i32 %0, i32* %11, align 4
  call void @llvm.dbg.declare(metadata i32* %11, metadata !5183, metadata !DIExpression()), !dbg !5184
  call void @llvm.dbg.declare(metadata [257 x i8]* %12, metadata !5185, metadata !DIExpression()), !dbg !5189
  %13 = load i32, i32* %11, align 4, !dbg !5190
  %14 = getelementptr inbounds [257 x i8], [257 x i8]* %12, i64 0, i64 0, !dbg !5192
  %15 = call i32 @setlocale_null_r(i32 %13, i8* %14, i64 257), !dbg !5193
  %16 = icmp ne i32 %15, 0, !dbg !5193
  %17 = load i32, i32* @x.89
  %18 = load i32, i32* @y.90
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %16, label %25, label %42, !dbg !5194

25:                                               ; preds = %originalBBpart2
  %26 = load i32, i32* @x.89
  %27 = load i32, i32* @y.90
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %25, %originalBB1alteredBB
  store i1 false, i1* %10, align 1, !dbg !5195
  %34 = load i32, i32* @x.89
  %35 = load i32, i32* @y.90
  %36 = sub i32 %34, 1
  %37 = mul i32 %34, %36
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %39, %40
  br i1 %41, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %101, !dbg !5195

42:                                               ; preds = %originalBBpart2
  %43 = load i32, i32* @x.89
  %44 = load i32, i32* @y.90
  %45 = sub i32 %43, 1
  %46 = mul i32 %43, %45
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %48, %49
  br i1 %50, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %42, %originalBB6alteredBB
  %51 = getelementptr inbounds [257 x i8], [257 x i8]* %12, i64 0, i64 0, !dbg !5196
  %52 = call i32 @strcmp(i8* %51, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.152, i64 0, i64 0)) #13, !dbg !5197
  %53 = icmp eq i32 %52, 0, !dbg !5198
  %54 = load i32, i32* @x.89
  %55 = load i32, i32* @y.90
  %56 = sub i32 %54, 1
  %57 = mul i32 %54, %56
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %55, 10
  %61 = or i1 %59, %60
  br i1 %61, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %53, label %82, label %62, !dbg !5199

62:                                               ; preds = %originalBBpart28
  %63 = load i32, i32* @x.89
  %64 = load i32, i32* @y.90
  %65 = sub i32 %63, 1
  %66 = mul i32 %63, %65
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %64, 10
  %70 = or i1 %68, %69
  br i1 %70, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %62, %originalBB10alteredBB
  %71 = getelementptr inbounds [257 x i8], [257 x i8]* %12, i64 0, i64 0, !dbg !5200
  %72 = call i32 @strcmp(i8* %71, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.153, i64 0, i64 0)) #13, !dbg !5201
  %73 = icmp eq i32 %72, 0, !dbg !5202
  %74 = load i32, i32* @x.89
  %75 = load i32, i32* @y.90
  %76 = sub i32 %74, 1
  %77 = mul i32 %74, %76
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %75, 10
  %81 = or i1 %79, %80
  br i1 %81, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %82, !dbg !5199

82:                                               ; preds = %originalBBpart212, %originalBBpart28
  %83 = phi i1 [ true, %originalBBpart28 ], [ %73, %originalBBpart212 ]
  %84 = load i32, i32* @x.89
  %85 = load i32, i32* @y.90
  %86 = sub i32 %84, 1
  %87 = mul i32 %84, %86
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %85, 10
  %91 = or i1 %89, %90
  br i1 %91, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %82, %originalBB14alteredBB
  %92 = xor i1 %83, true, !dbg !5203
  store i1 %92, i1* %10, align 1, !dbg !5204
  %93 = load i32, i32* @x.89
  %94 = load i32, i32* @y.90
  %95 = sub i32 %93, 1
  %96 = mul i32 %93, %95
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %94, 10
  %100 = or i1 %98, %99
  br i1 %100, label %originalBBpart218, label %originalBB14alteredBB

originalBBpart218:                                ; preds = %originalBB14
  br label %101, !dbg !5204

101:                                              ; preds = %originalBBpart218, %originalBBpart24
  %102 = load i32, i32* @x.89
  %103 = load i32, i32* @y.90
  %104 = sub i32 %102, 1
  %105 = mul i32 %102, %104
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %103, 10
  %109 = or i1 %107, %108
  br i1 %109, label %originalBB20, label %originalBB20alteredBB

originalBB20:                                     ; preds = %101, %originalBB20alteredBB
  %110 = load i1, i1* %10, align 1, !dbg !5205
  %111 = load i32, i32* @x.89
  %112 = load i32, i32* @y.90
  %113 = sub i32 %111, 1
  %114 = mul i32 %111, %113
  %115 = urem i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %112, 10
  %118 = or i1 %116, %117
  br i1 %118, label %originalBBpart222, label %originalBB20alteredBB

originalBBpart222:                                ; preds = %originalBB20
  ret i1 %110, !dbg !5205

originalBBalteredBB:                              ; preds = %originalBB, %1
  %119 = alloca i1, align 1
  %120 = alloca i32, align 4
  %121 = alloca [257 x i8], align 16
  store i32 %0, i32* %120, align 4
  call void @llvm.dbg.declare(metadata i32* %120, metadata !5206, metadata !DIExpression()), !dbg !5184
  call void @llvm.dbg.declare(metadata [257 x i8]* %121, metadata !5209, metadata !DIExpression()), !dbg !5189
  %122 = load i32, i32* %120, align 4, !dbg !5190
  %123 = getelementptr inbounds [257 x i8], [257 x i8]* %121, i64 0, i64 0, !dbg !5192
  %124 = call i32 @setlocale_null_r(i32 %122, i8* %123, i64 257), !dbg !5193
  %125 = icmp ne i32 %124, 0, !dbg !5193
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %25
  store i1 false, i1* %10, align 1, !dbg !5195
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %42
  %126 = getelementptr inbounds [257 x i8], [257 x i8]* %12, i64 0, i64 0, !dbg !5196
  %127 = call i32 @strcmp(i8* %126, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.152, i64 0, i64 0)) #13, !dbg !5197
  %128 = icmp eq i32 %127, 0, !dbg !5198
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %62
  %129 = getelementptr inbounds [257 x i8], [257 x i8]* %12, i64 0, i64 0, !dbg !5200
  %130 = call i32 @strcmp(i8* %129, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.153, i64 0, i64 0)) #13, !dbg !5201
  %131 = icmp eq i32 %130, 0, !dbg !5202
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %82
  %_ = sub i1 %83, true
  %gen = mul i1 %_, true
  %_15 = shl i1 %83, true
  %_16 = shl i1 %83, true
  %132 = xor i1 %83, true, !dbg !5203
  store i1 %132, i1* %10, align 1, !dbg !5204
  br label %originalBB14

originalBB20alteredBB:                            ; preds = %originalBB20, %101
  %133 = load i1, i1* %10, align 1, !dbg !5205
  br label %originalBB20
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @locale_charset() #4 !dbg !5210 {
  %1 = load i32, i32* @x.91
  %2 = load i32, i32* @y.92
  %3 = sub i32 %1, 1
  %4 = mul i32 %1, %3
  %5 = urem i32 %4, 2
  %6 = icmp eq i32 %5, 0
  %7 = icmp slt i32 %2, 10
  %8 = or i1 %6, %7
  br i1 %8, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %0, %originalBBalteredBB
  %9 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %9, metadata !5214, metadata !DIExpression()), !dbg !5215
  %10 = call i8* @nl_langinfo(i32 14) #10, !dbg !5216
  store i8* %10, i8** %9, align 8, !dbg !5217
  %11 = load i8*, i8** %9, align 8, !dbg !5218
  %12 = icmp eq i8* %11, null, !dbg !5220
  %13 = load i32, i32* @x.91
  %14 = load i32, i32* @y.92
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %12, label %21, label %38, !dbg !5221

21:                                               ; preds = %originalBBpart2
  %22 = load i32, i32* @x.91
  %23 = load i32, i32* @y.92
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %21, %originalBB1alteredBB
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.156, i64 0, i64 0), i8** %9, align 8, !dbg !5222
  %30 = load i32, i32* @x.91
  %31 = load i32, i32* @y.92
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %38, !dbg !5223

38:                                               ; preds = %originalBBpart24, %originalBBpart2
  %39 = load i32, i32* @x.91
  %40 = load i32, i32* @y.92
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %38, %originalBB6alteredBB
  %47 = load i8*, i8** %9, align 8, !dbg !5224
  %48 = getelementptr inbounds i8, i8* %47, i64 0, !dbg !5224
  %49 = load i8, i8* %48, align 1, !dbg !5224
  %50 = sext i8 %49 to i32, !dbg !5224
  %51 = icmp eq i32 %50, 0, !dbg !5228
  %52 = load i32, i32* @x.91
  %53 = load i32, i32* @y.92
  %54 = sub i32 %52, 1
  %55 = mul i32 %52, %54
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %53, 10
  %59 = or i1 %57, %58
  br i1 %59, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %51, label %60, label %77, !dbg !5229

60:                                               ; preds = %originalBBpart28
  %61 = load i32, i32* @x.91
  %62 = load i32, i32* @y.92
  %63 = sub i32 %61, 1
  %64 = mul i32 %61, %63
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %62, 10
  %68 = or i1 %66, %67
  br i1 %68, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %60, %originalBB10alteredBB
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.157, i64 0, i64 0), i8** %9, align 8, !dbg !5230
  %69 = load i32, i32* @x.91
  %70 = load i32, i32* @y.92
  %71 = sub i32 %69, 1
  %72 = mul i32 %69, %71
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %74, %75
  br i1 %76, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %77, !dbg !5231

77:                                               ; preds = %originalBBpart212, %originalBBpart28
  %78 = load i32, i32* @x.91
  %79 = load i32, i32* @y.92
  %80 = sub i32 %78, 1
  %81 = mul i32 %78, %80
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %79, 10
  %85 = or i1 %83, %84
  br i1 %85, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %77, %originalBB14alteredBB
  %86 = load i8*, i8** %9, align 8, !dbg !5232
  %87 = load i32, i32* @x.91
  %88 = load i32, i32* @y.92
  %89 = sub i32 %87, 1
  %90 = mul i32 %87, %89
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %88, 10
  %94 = or i1 %92, %93
  br i1 %94, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  ret i8* %86, !dbg !5233

originalBBalteredBB:                              ; preds = %originalBB, %0
  %95 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %95, metadata !5234, metadata !DIExpression()), !dbg !5215
  %96 = call i8* @nl_langinfo(i32 14) #10, !dbg !5216
  store i8* %96, i8** %95, align 8, !dbg !5217
  %97 = load i8*, i8** %95, align 8, !dbg !5218
  %98 = icmp eq i8* %97, null, !dbg !5220
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %21
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.156, i64 0, i64 0), i8** %9, align 8, !dbg !5222
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %38
  %99 = load i8*, i8** %9, align 8, !dbg !5224
  %100 = getelementptr inbounds i8, i8* %99, i64 0, !dbg !5224
  %101 = load i8, i8* %100, align 1, !dbg !5224
  %102 = sext i8 %101 to i32, !dbg !5224
  %103 = icmp eq i32 %102, 0, !dbg !5228
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %60
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.157, i64 0, i64 0), i8** %9, align 8, !dbg !5230
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %77
  %104 = load i8*, i8** %9, align 8, !dbg !5232
  br label %originalBB14
}

; Function Attrs: nounwind
declare dso_local i8* @nl_langinfo(i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @mgetgroups(i8*, i32, i32**) #4 !dbg !5237 {
  %4 = load i32, i32* @x.93
  %5 = load i32, i32* @y.94
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca i32, align 4
  %13 = alloca i8*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i32**, align 8
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32*, align 8
  %19 = alloca i32*, align 8
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32*, align 8
  %25 = alloca i32*, align 8
  store i8* %0, i8** %13, align 8
  call void @llvm.dbg.declare(metadata i8** %13, metadata !5239, metadata !DIExpression()), !dbg !5240
  store i32 %1, i32* %14, align 4
  call void @llvm.dbg.declare(metadata i32* %14, metadata !5241, metadata !DIExpression()), !dbg !5242
  store i32** %2, i32*** %15, align 8
  call void @llvm.dbg.declare(metadata i32*** %15, metadata !5243, metadata !DIExpression()), !dbg !5244
  call void @llvm.dbg.declare(metadata i32* %16, metadata !5245, metadata !DIExpression()), !dbg !5246
  call void @llvm.dbg.declare(metadata i32* %17, metadata !5247, metadata !DIExpression()), !dbg !5248
  call void @llvm.dbg.declare(metadata i32** %18, metadata !5249, metadata !DIExpression()), !dbg !5250
  %26 = load i8*, i8** %13, align 8, !dbg !5251
  %27 = icmp ne i8* %26, null, !dbg !5251
  %28 = load i32, i32* @x.93
  %29 = load i32, i32* @y.94
  %30 = sub i32 %28, 1
  %31 = mul i32 %28, %30
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %33, %34
  br i1 %35, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %27, label %36, label %257, !dbg !5253

36:                                               ; preds = %originalBBpart2
  %37 = load i32, i32* @x.93
  %38 = load i32, i32* @y.94
  %39 = sub i32 %37, 1
  %40 = mul i32 %37, %39
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %42, %43
  br i1 %44, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %36, %originalBB1alteredBB
  store i32 10, i32* %16, align 4, !dbg !5254
  %45 = load i32, i32* %16, align 4, !dbg !5256
  %46 = sext i32 %45 to i64, !dbg !5256
  %47 = call i32* @realloc_groupbuf(i32* null, i64 %46), !dbg !5257
  store i32* %47, i32** %18, align 8, !dbg !5258
  %48 = load i32*, i32** %18, align 8, !dbg !5259
  %49 = icmp eq i32* %48, null, !dbg !5261
  %50 = load i32, i32* @x.93
  %51 = load i32, i32* @y.94
  %52 = sub i32 %50, 1
  %53 = mul i32 %50, %52
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %51, 10
  %57 = or i1 %55, %56
  br i1 %57, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %49, label %58, label %75, !dbg !5262

58:                                               ; preds = %originalBBpart24
  %59 = load i32, i32* @x.93
  %60 = load i32, i32* @y.94
  %61 = sub i32 %59, 1
  %62 = mul i32 %59, %61
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %60, 10
  %66 = or i1 %64, %65
  br i1 %66, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %58, %originalBB6alteredBB
  store i32 -1, i32* %12, align 4, !dbg !5263
  %67 = load i32, i32* @x.93
  %68 = load i32, i32* @y.94
  %69 = sub i32 %67, 1
  %70 = mul i32 %67, %69
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %68, 10
  %74 = or i1 %72, %73
  br i1 %74, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %921, !dbg !5263

75:                                               ; preds = %originalBBpart24
  %76 = load i32, i32* @x.93
  %77 = load i32, i32* @y.94
  %78 = sub i32 %76, 1
  %79 = mul i32 %76, %78
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %77, 10
  %83 = or i1 %81, %82
  br i1 %83, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %75, %originalBB10alteredBB
  %84 = load i32, i32* @x.93
  %85 = load i32, i32* @y.94
  %86 = sub i32 %84, 1
  %87 = mul i32 %84, %86
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %85, 10
  %91 = or i1 %89, %90
  br i1 %91, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %92, !dbg !5264

92:                                               ; preds = %originalBBpart244, %originalBBpart212
  call void @llvm.dbg.declare(metadata i32** %19, metadata !5265, metadata !DIExpression()), !dbg !5267
  call void @llvm.dbg.declare(metadata i32* %20, metadata !5268, metadata !DIExpression()), !dbg !5269
  %93 = load i32, i32* @x.93
  %94 = load i32, i32* @y.94
  %95 = sub i32 %93, 1
  %96 = mul i32 %93, %95
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %94, 10
  %100 = or i1 %98, %99
  br i1 %100, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %92, %originalBB14alteredBB
  %101 = load i32, i32* %16, align 4, !dbg !5270
  store i32 %101, i32* %20, align 4, !dbg !5269
  %102 = load i8*, i8** %13, align 8, !dbg !5271
  %103 = load i32, i32* %14, align 4, !dbg !5272
  %104 = load i32*, i32** %18, align 8, !dbg !5273
  %105 = call i32 @getgrouplist(i8* %102, i32 %103, i32* %104, i32* %16), !dbg !5274
  store i32 %105, i32* %17, align 4, !dbg !5275
  %106 = load i32, i32* %17, align 4, !dbg !5276
  %107 = icmp slt i32 %106, 0, !dbg !5278
  %108 = load i32, i32* @x.93
  %109 = load i32, i32* @y.94
  %110 = sub i32 %108, 1
  %111 = mul i32 %108, %110
  %112 = urem i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %109, 10
  %115 = or i1 %113, %114
  br i1 %115, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %107, label %116, label %155, !dbg !5279

116:                                              ; preds = %originalBBpart216
  %117 = load i32, i32* @x.93
  %118 = load i32, i32* @y.94
  %119 = sub i32 %117, 1
  %120 = mul i32 %117, %119
  %121 = urem i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = icmp slt i32 %118, 10
  %124 = or i1 %122, %123
  br i1 %124, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %116, %originalBB18alteredBB
  %125 = load i32, i32* %20, align 4, !dbg !5280
  %126 = load i32, i32* %16, align 4, !dbg !5281
  %127 = icmp eq i32 %125, %126, !dbg !5282
  %128 = load i32, i32* @x.93
  %129 = load i32, i32* @y.94
  %130 = sub i32 %128, 1
  %131 = mul i32 %128, %130
  %132 = urem i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = icmp slt i32 %129, 10
  %135 = or i1 %133, %134
  br i1 %135, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br i1 %127, label %136, label %155, !dbg !5283

136:                                              ; preds = %originalBBpart220
  %137 = load i32, i32* @x.93
  %138 = load i32, i32* @y.94
  %139 = sub i32 %137, 1
  %140 = mul i32 %137, %139
  %141 = urem i32 %140, 2
  %142 = icmp eq i32 %141, 0
  %143 = icmp slt i32 %138, 10
  %144 = or i1 %142, %143
  br i1 %144, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %136, %originalBB22alteredBB
  %145 = load i32, i32* %16, align 4, !dbg !5284
  %146 = mul nsw i32 %145, 2, !dbg !5284
  store i32 %146, i32* %16, align 4, !dbg !5284
  %147 = load i32, i32* @x.93
  %148 = load i32, i32* @y.94
  %149 = sub i32 %147, 1
  %150 = mul i32 %147, %149
  %151 = urem i32 %150, 2
  %152 = icmp eq i32 %151, 0
  %153 = icmp slt i32 %148, 10
  %154 = or i1 %152, %153
  br i1 %154, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br label %155, !dbg !5285

155:                                              ; preds = %originalBBpart224, %originalBBpart220, %originalBBpart216
  %156 = load i32, i32* @x.93
  %157 = load i32, i32* @y.94
  %158 = sub i32 %156, 1
  %159 = mul i32 %156, %158
  %160 = urem i32 %159, 2
  %161 = icmp eq i32 %160, 0
  %162 = icmp slt i32 %157, 10
  %163 = or i1 %161, %162
  br i1 %163, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %155, %originalBB26alteredBB
  %164 = load i32*, i32** %18, align 8, !dbg !5286
  %165 = load i32, i32* %16, align 4, !dbg !5288
  %166 = sext i32 %165 to i64, !dbg !5288
  %167 = call i32* @realloc_groupbuf(i32* %164, i64 %166), !dbg !5289
  store i32* %167, i32** %19, align 8, !dbg !5290
  %168 = icmp eq i32* %167, null, !dbg !5291
  %169 = load i32, i32* @x.93
  %170 = load i32, i32* @y.94
  %171 = sub i32 %169, 1
  %172 = mul i32 %169, %171
  %173 = urem i32 %172, 2
  %174 = icmp eq i32 %173, 0
  %175 = icmp slt i32 %170, 10
  %176 = or i1 %174, %175
  br i1 %176, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br i1 %168, label %177, label %200, !dbg !5292

177:                                              ; preds = %originalBBpart228
  call void @llvm.dbg.declare(metadata i32* %21, metadata !5293, metadata !DIExpression()), !dbg !5295
  %178 = load i32, i32* @x.93
  %179 = load i32, i32* @y.94
  %180 = sub i32 %178, 1
  %181 = mul i32 %178, %180
  %182 = urem i32 %181, 2
  %183 = icmp eq i32 %182, 0
  %184 = icmp slt i32 %179, 10
  %185 = or i1 %183, %184
  br i1 %185, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %177, %originalBB30alteredBB
  %186 = call i32* @__errno_location() #15, !dbg !5296
  %187 = load i32, i32* %186, align 4, !dbg !5296
  store i32 %187, i32* %21, align 4, !dbg !5295
  %188 = load i32*, i32** %18, align 8, !dbg !5297
  %189 = bitcast i32* %188 to i8*, !dbg !5297
  call void @free(i8* %189) #10, !dbg !5298
  %190 = load i32, i32* %21, align 4, !dbg !5299
  %191 = call i32* @__errno_location() #15, !dbg !5300
  store i32 %190, i32* %191, align 4, !dbg !5301
  store i32 -1, i32* %12, align 4, !dbg !5302
  %192 = load i32, i32* @x.93
  %193 = load i32, i32* @y.94
  %194 = sub i32 %192, 1
  %195 = mul i32 %192, %194
  %196 = urem i32 %195, 2
  %197 = icmp eq i32 %196, 0
  %198 = icmp slt i32 %193, 10
  %199 = or i1 %197, %198
  br i1 %199, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br label %921, !dbg !5302

200:                                              ; preds = %originalBBpart228
  %201 = load i32, i32* @x.93
  %202 = load i32, i32* @y.94
  %203 = sub i32 %201, 1
  %204 = mul i32 %201, %203
  %205 = urem i32 %204, 2
  %206 = icmp eq i32 %205, 0
  %207 = icmp slt i32 %202, 10
  %208 = or i1 %206, %207
  br i1 %208, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %200, %originalBB34alteredBB
  %209 = load i32*, i32** %19, align 8, !dbg !5303
  store i32* %209, i32** %18, align 8, !dbg !5304
  %210 = load i32, i32* %17, align 4, !dbg !5305
  %211 = icmp sle i32 0, %210, !dbg !5307
  %212 = load i32, i32* @x.93
  %213 = load i32, i32* @y.94
  %214 = sub i32 %212, 1
  %215 = mul i32 %212, %214
  %216 = urem i32 %215, 2
  %217 = icmp eq i32 %216, 0
  %218 = icmp slt i32 %213, 10
  %219 = or i1 %217, %218
  br i1 %219, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  br i1 %211, label %220, label %240, !dbg !5308

220:                                              ; preds = %originalBBpart236
  %221 = load i32, i32* @x.93
  %222 = load i32, i32* @y.94
  %223 = sub i32 %221, 1
  %224 = mul i32 %221, %223
  %225 = urem i32 %224, 2
  %226 = icmp eq i32 %225, 0
  %227 = icmp slt i32 %222, 10
  %228 = or i1 %226, %227
  br i1 %228, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %220, %originalBB38alteredBB
  %229 = load i32*, i32** %18, align 8, !dbg !5309
  %230 = load i32**, i32*** %15, align 8, !dbg !5311
  store i32* %229, i32** %230, align 8, !dbg !5312
  %231 = load i32, i32* %16, align 4, !dbg !5313
  store i32 %231, i32* %12, align 4, !dbg !5314
  %232 = load i32, i32* @x.93
  %233 = load i32, i32* @y.94
  %234 = sub i32 %232, 1
  %235 = mul i32 %232, %234
  %236 = urem i32 %235, 2
  %237 = icmp eq i32 %236, 0
  %238 = icmp slt i32 %233, 10
  %239 = or i1 %237, %238
  br i1 %239, label %originalBBpart240, label %originalBB38alteredBB

originalBBpart240:                                ; preds = %originalBB38
  br label %921, !dbg !5314

240:                                              ; preds = %originalBBpart236
  %241 = load i32, i32* @x.93
  %242 = load i32, i32* @y.94
  %243 = sub i32 %241, 1
  %244 = mul i32 %241, %243
  %245 = urem i32 %244, 2
  %246 = icmp eq i32 %245, 0
  %247 = icmp slt i32 %242, 10
  %248 = or i1 %246, %247
  br i1 %248, label %originalBB42, label %originalBB42alteredBB

originalBB42:                                     ; preds = %240, %originalBB42alteredBB
  %249 = load i32, i32* @x.93
  %250 = load i32, i32* @y.94
  %251 = sub i32 %249, 1
  %252 = mul i32 %249, %251
  %253 = urem i32 %252, 2
  %254 = icmp eq i32 %253, 0
  %255 = icmp slt i32 %250, 10
  %256 = or i1 %254, %255
  br i1 %256, label %originalBBpart244, label %originalBB42alteredBB

originalBBpart244:                                ; preds = %originalBB42
  br label %92, !dbg !5264, !llvm.loop !5315

257:                                              ; preds = %originalBBpart2
  %258 = load i32, i32* @x.93
  %259 = load i32, i32* @y.94
  %260 = sub i32 %258, 1
  %261 = mul i32 %258, %260
  %262 = urem i32 %261, 2
  %263 = icmp eq i32 %262, 0
  %264 = icmp slt i32 %259, 10
  %265 = or i1 %263, %264
  br i1 %265, label %originalBB46, label %originalBB46alteredBB

originalBB46:                                     ; preds = %257, %originalBB46alteredBB
  %266 = load i8*, i8** %13, align 8, !dbg !5317
  %267 = icmp ne i8* %266, null, !dbg !5317
  %268 = load i32, i32* @x.93
  %269 = load i32, i32* @y.94
  %270 = sub i32 %268, 1
  %271 = mul i32 %268, %270
  %272 = urem i32 %271, 2
  %273 = icmp eq i32 %272, 0
  %274 = icmp slt i32 %269, 10
  %275 = or i1 %273, %274
  br i1 %275, label %originalBBpart248, label %originalBB46alteredBB

originalBBpart248:                                ; preds = %originalBB46
  br i1 %267, label %276, label %296, !dbg !5317

276:                                              ; preds = %originalBBpart248
  %277 = load i32, i32* @x.93
  %278 = load i32, i32* @y.94
  %279 = sub i32 %277, 1
  %280 = mul i32 %277, %279
  %281 = urem i32 %280, 2
  %282 = icmp eq i32 %281, 0
  %283 = icmp slt i32 %278, 10
  %284 = or i1 %282, %283
  br i1 %284, label %originalBB50, label %originalBB50alteredBB

originalBB50:                                     ; preds = %276, %originalBB50alteredBB
  %285 = load i8*, i8** %13, align 8, !dbg !5318
  %286 = load i32, i32* %14, align 4, !dbg !5319
  %287 = call i32 @getugroups(i32 0, i32* null, i8* %285, i32 %286), !dbg !5320
  %288 = load i32, i32* @x.93
  %289 = load i32, i32* @y.94
  %290 = sub i32 %288, 1
  %291 = mul i32 %288, %290
  %292 = urem i32 %291, 2
  %293 = icmp eq i32 %292, 0
  %294 = icmp slt i32 %289, 10
  %295 = or i1 %293, %294
  br i1 %295, label %originalBBpart252, label %originalBB50alteredBB

originalBBpart252:                                ; preds = %originalBB50
  br label %314, !dbg !5317

296:                                              ; preds = %originalBBpart248
  %297 = load i32, i32* @x.93
  %298 = load i32, i32* @y.94
  %299 = sub i32 %297, 1
  %300 = mul i32 %297, %299
  %301 = urem i32 %300, 2
  %302 = icmp eq i32 %301, 0
  %303 = icmp slt i32 %298, 10
  %304 = or i1 %302, %303
  br i1 %304, label %originalBB54, label %originalBB54alteredBB

originalBB54:                                     ; preds = %296, %originalBB54alteredBB
  %305 = call i32 @getgroups(i32 0, i32* null) #10, !dbg !5321
  %306 = load i32, i32* @x.93
  %307 = load i32, i32* @y.94
  %308 = sub i32 %306, 1
  %309 = mul i32 %306, %308
  %310 = urem i32 %309, 2
  %311 = icmp eq i32 %310, 0
  %312 = icmp slt i32 %307, 10
  %313 = or i1 %311, %312
  br i1 %313, label %originalBBpart256, label %originalBB54alteredBB

originalBBpart256:                                ; preds = %originalBB54
  br label %314, !dbg !5317

314:                                              ; preds = %originalBBpart256, %originalBBpart252
  %315 = phi i32 [ %287, %originalBBpart252 ], [ %305, %originalBBpart256 ], !dbg !5317
  %316 = load i32, i32* @x.93
  %317 = load i32, i32* @y.94
  %318 = sub i32 %316, 1
  %319 = mul i32 %316, %318
  %320 = urem i32 %319, 2
  %321 = icmp eq i32 %320, 0
  %322 = icmp slt i32 %317, 10
  %323 = or i1 %321, %322
  br i1 %323, label %originalBB58, label %originalBB58alteredBB

originalBB58:                                     ; preds = %314, %originalBB58alteredBB
  store i32 %315, i32* %16, align 4, !dbg !5322
  %324 = load i32, i32* %16, align 4, !dbg !5323
  %325 = icmp slt i32 %324, 0, !dbg !5325
  %326 = load i32, i32* @x.93
  %327 = load i32, i32* @y.94
  %328 = sub i32 %326, 1
  %329 = mul i32 %326, %328
  %330 = urem i32 %329, 2
  %331 = icmp eq i32 %330, 0
  %332 = icmp slt i32 %327, 10
  %333 = or i1 %331, %332
  br i1 %333, label %originalBBpart260, label %originalBB58alteredBB

originalBBpart260:                                ; preds = %originalBB58
  br i1 %325, label %334, label %414, !dbg !5326

334:                                              ; preds = %originalBBpart260
  %335 = load i32, i32* @x.93
  %336 = load i32, i32* @y.94
  %337 = sub i32 %335, 1
  %338 = mul i32 %335, %337
  %339 = urem i32 %338, 2
  %340 = icmp eq i32 %339, 0
  %341 = icmp slt i32 %336, 10
  %342 = or i1 %340, %341
  br i1 %342, label %originalBB62, label %originalBB62alteredBB

originalBB62:                                     ; preds = %334, %originalBB62alteredBB
  %343 = call i32* @__errno_location() #15, !dbg !5327
  %344 = load i32, i32* %343, align 4, !dbg !5327
  %345 = icmp eq i32 %344, 38, !dbg !5330
  %346 = load i32, i32* @x.93
  %347 = load i32, i32* @y.94
  %348 = sub i32 %346, 1
  %349 = mul i32 %346, %348
  %350 = urem i32 %349, 2
  %351 = icmp eq i32 %350, 0
  %352 = icmp slt i32 %347, 10
  %353 = or i1 %351, %352
  br i1 %353, label %originalBBpart264, label %originalBB62alteredBB

originalBBpart264:                                ; preds = %originalBB62
  br i1 %345, label %354, label %397, !dbg !5331

354:                                              ; preds = %originalBBpart264
  %355 = load i32, i32* @x.93
  %356 = load i32, i32* @y.94
  %357 = sub i32 %355, 1
  %358 = mul i32 %355, %357
  %359 = urem i32 %358, 2
  %360 = icmp eq i32 %359, 0
  %361 = icmp slt i32 %356, 10
  %362 = or i1 %360, %361
  br i1 %362, label %originalBB66, label %originalBB66alteredBB

originalBB66:                                     ; preds = %354, %originalBB66alteredBB
  %363 = call i32* @realloc_groupbuf(i32* null, i64 1), !dbg !5332
  store i32* %363, i32** %18, align 8, !dbg !5333
  %364 = icmp ne i32* %363, null, !dbg !5333
  %365 = load i32, i32* @x.93
  %366 = load i32, i32* @y.94
  %367 = sub i32 %365, 1
  %368 = mul i32 %365, %367
  %369 = urem i32 %368, 2
  %370 = icmp eq i32 %369, 0
  %371 = icmp slt i32 %366, 10
  %372 = or i1 %370, %371
  br i1 %372, label %originalBBpart268, label %originalBB66alteredBB

originalBBpart268:                                ; preds = %originalBB66
  br i1 %364, label %373, label %397, !dbg !5334

373:                                              ; preds = %originalBBpart268
  %374 = load i32, i32* @x.93
  %375 = load i32, i32* @y.94
  %376 = sub i32 %374, 1
  %377 = mul i32 %374, %376
  %378 = urem i32 %377, 2
  %379 = icmp eq i32 %378, 0
  %380 = icmp slt i32 %375, 10
  %381 = or i1 %379, %380
  br i1 %381, label %originalBB70, label %originalBB70alteredBB

originalBB70:                                     ; preds = %373, %originalBB70alteredBB
  %382 = load i32*, i32** %18, align 8, !dbg !5335
  %383 = load i32**, i32*** %15, align 8, !dbg !5337
  store i32* %382, i32** %383, align 8, !dbg !5338
  %384 = load i32, i32* %14, align 4, !dbg !5339
  %385 = load i32*, i32** %18, align 8, !dbg !5340
  store i32 %384, i32* %385, align 4, !dbg !5341
  %386 = load i32, i32* %14, align 4, !dbg !5342
  %387 = icmp ne i32 %386, -1, !dbg !5343
  %388 = zext i1 %387 to i32, !dbg !5343
  store i32 %388, i32* %12, align 4, !dbg !5344
  %389 = load i32, i32* @x.93
  %390 = load i32, i32* @y.94
  %391 = sub i32 %389, 1
  %392 = mul i32 %389, %391
  %393 = urem i32 %392, 2
  %394 = icmp eq i32 %393, 0
  %395 = icmp slt i32 %390, 10
  %396 = or i1 %394, %395
  br i1 %396, label %originalBBpart272, label %originalBB70alteredBB

originalBBpart272:                                ; preds = %originalBB70
  br label %921, !dbg !5344

397:                                              ; preds = %originalBBpart268, %originalBBpart264
  %398 = load i32, i32* @x.93
  %399 = load i32, i32* @y.94
  %400 = sub i32 %398, 1
  %401 = mul i32 %398, %400
  %402 = urem i32 %401, 2
  %403 = icmp eq i32 %402, 0
  %404 = icmp slt i32 %399, 10
  %405 = or i1 %403, %404
  br i1 %405, label %originalBB74, label %originalBB74alteredBB

originalBB74:                                     ; preds = %397, %originalBB74alteredBB
  store i32 -1, i32* %12, align 4, !dbg !5345
  %406 = load i32, i32* @x.93
  %407 = load i32, i32* @y.94
  %408 = sub i32 %406, 1
  %409 = mul i32 %406, %408
  %410 = urem i32 %409, 2
  %411 = icmp eq i32 %410, 0
  %412 = icmp slt i32 %407, 10
  %413 = or i1 %411, %412
  br i1 %413, label %originalBBpart276, label %originalBB74alteredBB

originalBBpart276:                                ; preds = %originalBB74
  br label %921, !dbg !5345

414:                                              ; preds = %originalBBpart260
  %415 = load i32, i32* @x.93
  %416 = load i32, i32* @y.94
  %417 = sub i32 %415, 1
  %418 = mul i32 %415, %417
  %419 = urem i32 %418, 2
  %420 = icmp eq i32 %419, 0
  %421 = icmp slt i32 %416, 10
  %422 = or i1 %420, %421
  br i1 %422, label %originalBB78, label %originalBB78alteredBB

originalBB78:                                     ; preds = %414, %originalBB78alteredBB
  %423 = load i32, i32* %16, align 4, !dbg !5346
  %424 = icmp eq i32 %423, 0, !dbg !5348
  %425 = load i32, i32* @x.93
  %426 = load i32, i32* @y.94
  %427 = sub i32 %425, 1
  %428 = mul i32 %425, %427
  %429 = urem i32 %428, 2
  %430 = icmp eq i32 %429, 0
  %431 = icmp slt i32 %426, 10
  %432 = or i1 %430, %431
  br i1 %432, label %originalBBpart280, label %originalBB78alteredBB

originalBBpart280:                                ; preds = %originalBB78
  br i1 %424, label %471, label %433, !dbg !5349

433:                                              ; preds = %originalBBpart280
  %434 = load i32, i32* @x.93
  %435 = load i32, i32* @y.94
  %436 = sub i32 %434, 1
  %437 = mul i32 %434, %436
  %438 = urem i32 %437, 2
  %439 = icmp eq i32 %438, 0
  %440 = icmp slt i32 %435, 10
  %441 = or i1 %439, %440
  br i1 %441, label %originalBB82, label %originalBB82alteredBB

originalBB82:                                     ; preds = %433, %originalBB82alteredBB
  %442 = load i8*, i8** %13, align 8, !dbg !5350
  %443 = icmp ne i8* %442, null, !dbg !5350
  %444 = load i32, i32* @x.93
  %445 = load i32, i32* @y.94
  %446 = sub i32 %444, 1
  %447 = mul i32 %444, %446
  %448 = urem i32 %447, 2
  %449 = icmp eq i32 %448, 0
  %450 = icmp slt i32 %445, 10
  %451 = or i1 %449, %450
  br i1 %451, label %originalBBpart284, label %originalBB82alteredBB

originalBBpart284:                                ; preds = %originalBB82
  br i1 %443, label %490, label %452, !dbg !5351

452:                                              ; preds = %originalBBpart284
  %453 = load i32, i32* @x.93
  %454 = load i32, i32* @y.94
  %455 = sub i32 %453, 1
  %456 = mul i32 %453, %455
  %457 = urem i32 %456, 2
  %458 = icmp eq i32 %457, 0
  %459 = icmp slt i32 %454, 10
  %460 = or i1 %458, %459
  br i1 %460, label %originalBB86, label %originalBB86alteredBB

originalBB86:                                     ; preds = %452, %originalBB86alteredBB
  %461 = load i32, i32* %14, align 4, !dbg !5352
  %462 = icmp ne i32 %461, -1, !dbg !5353
  %463 = load i32, i32* @x.93
  %464 = load i32, i32* @y.94
  %465 = sub i32 %463, 1
  %466 = mul i32 %463, %465
  %467 = urem i32 %466, 2
  %468 = icmp eq i32 %467, 0
  %469 = icmp slt i32 %464, 10
  %470 = or i1 %468, %469
  br i1 %470, label %originalBBpart288, label %originalBB86alteredBB

originalBBpart288:                                ; preds = %originalBB86
  br i1 %462, label %471, label %490, !dbg !5354

471:                                              ; preds = %originalBBpart288, %originalBBpart280
  %472 = load i32, i32* @x.93
  %473 = load i32, i32* @y.94
  %474 = sub i32 %472, 1
  %475 = mul i32 %472, %474
  %476 = urem i32 %475, 2
  %477 = icmp eq i32 %476, 0
  %478 = icmp slt i32 %473, 10
  %479 = or i1 %477, %478
  br i1 %479, label %originalBB90, label %originalBB90alteredBB

originalBB90:                                     ; preds = %471, %originalBB90alteredBB
  %480 = load i32, i32* %16, align 4, !dbg !5355
  %481 = add nsw i32 %480, 1, !dbg !5355
  store i32 %481, i32* %16, align 4, !dbg !5355
  %482 = load i32, i32* @x.93
  %483 = load i32, i32* @y.94
  %484 = sub i32 %482, 1
  %485 = mul i32 %482, %484
  %486 = urem i32 %485, 2
  %487 = icmp eq i32 %486, 0
  %488 = icmp slt i32 %483, 10
  %489 = or i1 %487, %488
  br i1 %489, label %originalBBpart296, label %originalBB90alteredBB

originalBBpart296:                                ; preds = %originalBB90
  br label %490, !dbg !5356

490:                                              ; preds = %originalBBpart296, %originalBBpart288, %originalBBpart284
  %491 = load i32, i32* @x.93
  %492 = load i32, i32* @y.94
  %493 = sub i32 %491, 1
  %494 = mul i32 %491, %493
  %495 = urem i32 %494, 2
  %496 = icmp eq i32 %495, 0
  %497 = icmp slt i32 %492, 10
  %498 = or i1 %496, %497
  br i1 %498, label %originalBB98, label %originalBB98alteredBB

originalBB98:                                     ; preds = %490, %originalBB98alteredBB
  %499 = load i32, i32* %16, align 4, !dbg !5357
  %500 = sext i32 %499 to i64, !dbg !5357
  %501 = call i32* @realloc_groupbuf(i32* null, i64 %500), !dbg !5358
  store i32* %501, i32** %18, align 8, !dbg !5359
  %502 = load i32*, i32** %18, align 8, !dbg !5360
  %503 = icmp eq i32* %502, null, !dbg !5362
  %504 = load i32, i32* @x.93
  %505 = load i32, i32* @y.94
  %506 = sub i32 %504, 1
  %507 = mul i32 %504, %506
  %508 = urem i32 %507, 2
  %509 = icmp eq i32 %508, 0
  %510 = icmp slt i32 %505, 10
  %511 = or i1 %509, %510
  br i1 %511, label %originalBBpart2100, label %originalBB98alteredBB

originalBBpart2100:                               ; preds = %originalBB98
  br i1 %503, label %512, label %529, !dbg !5363

512:                                              ; preds = %originalBBpart2100
  %513 = load i32, i32* @x.93
  %514 = load i32, i32* @y.94
  %515 = sub i32 %513, 1
  %516 = mul i32 %513, %515
  %517 = urem i32 %516, 2
  %518 = icmp eq i32 %517, 0
  %519 = icmp slt i32 %514, 10
  %520 = or i1 %518, %519
  br i1 %520, label %originalBB102, label %originalBB102alteredBB

originalBB102:                                    ; preds = %512, %originalBB102alteredBB
  store i32 -1, i32* %12, align 4, !dbg !5364
  %521 = load i32, i32* @x.93
  %522 = load i32, i32* @y.94
  %523 = sub i32 %521, 1
  %524 = mul i32 %521, %523
  %525 = urem i32 %524, 2
  %526 = icmp eq i32 %525, 0
  %527 = icmp slt i32 %522, 10
  %528 = or i1 %526, %527
  br i1 %528, label %originalBBpart2104, label %originalBB102alteredBB

originalBBpart2104:                               ; preds = %originalBB102
  br label %921, !dbg !5364

529:                                              ; preds = %originalBBpart2100
  %530 = load i32, i32* @x.93
  %531 = load i32, i32* @y.94
  %532 = sub i32 %530, 1
  %533 = mul i32 %530, %532
  %534 = urem i32 %533, 2
  %535 = icmp eq i32 %534, 0
  %536 = icmp slt i32 %531, 10
  %537 = or i1 %535, %536
  br i1 %537, label %originalBB106, label %originalBB106alteredBB

originalBB106:                                    ; preds = %529, %originalBB106alteredBB
  %538 = load i8*, i8** %13, align 8, !dbg !5365
  %539 = icmp ne i8* %538, null, !dbg !5365
  %540 = load i32, i32* @x.93
  %541 = load i32, i32* @y.94
  %542 = sub i32 %540, 1
  %543 = mul i32 %540, %542
  %544 = urem i32 %543, 2
  %545 = icmp eq i32 %544, 0
  %546 = icmp slt i32 %541, 10
  %547 = or i1 %545, %546
  br i1 %547, label %originalBBpart2108, label %originalBB106alteredBB

originalBBpart2108:                               ; preds = %originalBB106
  br i1 %539, label %548, label %570, !dbg !5365

548:                                              ; preds = %originalBBpart2108
  %549 = load i32, i32* @x.93
  %550 = load i32, i32* @y.94
  %551 = sub i32 %549, 1
  %552 = mul i32 %549, %551
  %553 = urem i32 %552, 2
  %554 = icmp eq i32 %553, 0
  %555 = icmp slt i32 %550, 10
  %556 = or i1 %554, %555
  br i1 %556, label %originalBB110, label %originalBB110alteredBB

originalBB110:                                    ; preds = %548, %originalBB110alteredBB
  %557 = load i32, i32* %16, align 4, !dbg !5366
  %558 = load i32*, i32** %18, align 8, !dbg !5367
  %559 = load i8*, i8** %13, align 8, !dbg !5368
  %560 = load i32, i32* %14, align 4, !dbg !5369
  %561 = call i32 @getugroups(i32 %557, i32* %558, i8* %559, i32 %560), !dbg !5370
  %562 = load i32, i32* @x.93
  %563 = load i32, i32* @y.94
  %564 = sub i32 %562, 1
  %565 = mul i32 %562, %564
  %566 = urem i32 %565, 2
  %567 = icmp eq i32 %566, 0
  %568 = icmp slt i32 %563, 10
  %569 = or i1 %567, %568
  br i1 %569, label %originalBBpart2112, label %originalBB110alteredBB

originalBBpart2112:                               ; preds = %originalBB110
  br label %599, !dbg !5365

570:                                              ; preds = %originalBBpart2108
  %571 = load i32, i32* @x.93
  %572 = load i32, i32* @y.94
  %573 = sub i32 %571, 1
  %574 = mul i32 %571, %573
  %575 = urem i32 %574, 2
  %576 = icmp eq i32 %575, 0
  %577 = icmp slt i32 %572, 10
  %578 = or i1 %576, %577
  br i1 %578, label %originalBB114, label %originalBB114alteredBB

originalBB114:                                    ; preds = %570, %originalBB114alteredBB
  %579 = load i32, i32* %16, align 4, !dbg !5371
  %580 = load i32, i32* %14, align 4, !dbg !5372
  %581 = icmp ne i32 %580, -1, !dbg !5373
  %582 = zext i1 %581 to i32, !dbg !5373
  %583 = sub nsw i32 %579, %582, !dbg !5374
  %584 = load i32*, i32** %18, align 8, !dbg !5375
  %585 = load i32, i32* %14, align 4, !dbg !5376
  %586 = icmp ne i32 %585, -1, !dbg !5377
  %587 = zext i1 %586 to i32, !dbg !5377
  %588 = sext i32 %587 to i64, !dbg !5378
  %589 = getelementptr inbounds i32, i32* %584, i64 %588, !dbg !5378
  %590 = call i32 @getgroups(i32 %583, i32* %589) #10, !dbg !5379
  %591 = load i32, i32* @x.93
  %592 = load i32, i32* @y.94
  %593 = sub i32 %591, 1
  %594 = mul i32 %591, %593
  %595 = urem i32 %594, 2
  %596 = icmp eq i32 %595, 0
  %597 = icmp slt i32 %592, 10
  %598 = or i1 %596, %597
  br i1 %598, label %originalBBpart2126, label %originalBB114alteredBB

originalBBpart2126:                               ; preds = %originalBB114
  br label %599, !dbg !5365

599:                                              ; preds = %originalBBpart2126, %originalBBpart2112
  %600 = phi i32 [ %561, %originalBBpart2112 ], [ %590, %originalBBpart2126 ], !dbg !5365
  %601 = load i32, i32* @x.93
  %602 = load i32, i32* @y.94
  %603 = sub i32 %601, 1
  %604 = mul i32 %601, %603
  %605 = urem i32 %604, 2
  %606 = icmp eq i32 %605, 0
  %607 = icmp slt i32 %602, 10
  %608 = or i1 %606, %607
  br i1 %608, label %originalBB128, label %originalBB128alteredBB

originalBB128:                                    ; preds = %599, %originalBB128alteredBB
  store i32 %600, i32* %17, align 4, !dbg !5380
  %609 = load i32, i32* %17, align 4, !dbg !5381
  %610 = icmp slt i32 %609, 0, !dbg !5383
  %611 = load i32, i32* @x.93
  %612 = load i32, i32* @y.94
  %613 = sub i32 %611, 1
  %614 = mul i32 %611, %613
  %615 = urem i32 %614, 2
  %616 = icmp eq i32 %615, 0
  %617 = icmp slt i32 %612, 10
  %618 = or i1 %616, %617
  br i1 %618, label %originalBBpart2130, label %originalBB128alteredBB

originalBBpart2130:                               ; preds = %originalBB128
  br i1 %610, label %619, label %642, !dbg !5384

619:                                              ; preds = %originalBBpart2130
  call void @llvm.dbg.declare(metadata i32* %22, metadata !5385, metadata !DIExpression()), !dbg !5387
  %620 = load i32, i32* @x.93
  %621 = load i32, i32* @y.94
  %622 = sub i32 %620, 1
  %623 = mul i32 %620, %622
  %624 = urem i32 %623, 2
  %625 = icmp eq i32 %624, 0
  %626 = icmp slt i32 %621, 10
  %627 = or i1 %625, %626
  br i1 %627, label %originalBB132, label %originalBB132alteredBB

originalBB132:                                    ; preds = %619, %originalBB132alteredBB
  %628 = call i32* @__errno_location() #15, !dbg !5388
  %629 = load i32, i32* %628, align 4, !dbg !5388
  store i32 %629, i32* %22, align 4, !dbg !5387
  %630 = load i32*, i32** %18, align 8, !dbg !5389
  %631 = bitcast i32* %630 to i8*, !dbg !5389
  call void @free(i8* %631) #10, !dbg !5390
  %632 = load i32, i32* %22, align 4, !dbg !5391
  %633 = call i32* @__errno_location() #15, !dbg !5392
  store i32 %632, i32* %633, align 4, !dbg !5393
  store i32 -1, i32* %12, align 4, !dbg !5394
  %634 = load i32, i32* @x.93
  %635 = load i32, i32* @y.94
  %636 = sub i32 %634, 1
  %637 = mul i32 %634, %636
  %638 = urem i32 %637, 2
  %639 = icmp eq i32 %638, 0
  %640 = icmp slt i32 %635, 10
  %641 = or i1 %639, %640
  br i1 %641, label %originalBBpart2134, label %originalBB132alteredBB

originalBBpart2134:                               ; preds = %originalBB132
  br label %921, !dbg !5394

642:                                              ; preds = %originalBBpart2130
  %643 = load i32, i32* @x.93
  %644 = load i32, i32* @y.94
  %645 = sub i32 %643, 1
  %646 = mul i32 %643, %645
  %647 = urem i32 %646, 2
  %648 = icmp eq i32 %647, 0
  %649 = icmp slt i32 %644, 10
  %650 = or i1 %648, %649
  br i1 %650, label %originalBB136, label %originalBB136alteredBB

originalBB136:                                    ; preds = %642, %originalBB136alteredBB
  %651 = load i8*, i8** %13, align 8, !dbg !5395
  %652 = icmp ne i8* %651, null, !dbg !5395
  %653 = load i32, i32* @x.93
  %654 = load i32, i32* @y.94
  %655 = sub i32 %653, 1
  %656 = mul i32 %653, %655
  %657 = urem i32 %656, 2
  %658 = icmp eq i32 %657, 0
  %659 = icmp slt i32 %654, 10
  %660 = or i1 %658, %659
  br i1 %660, label %originalBBpart2138, label %originalBB136alteredBB

originalBBpart2138:                               ; preds = %originalBB136
  br i1 %652, label %701, label %661, !dbg !5397

661:                                              ; preds = %originalBBpart2138
  %662 = load i32, i32* @x.93
  %663 = load i32, i32* @y.94
  %664 = sub i32 %662, 1
  %665 = mul i32 %662, %664
  %666 = urem i32 %665, 2
  %667 = icmp eq i32 %666, 0
  %668 = icmp slt i32 %663, 10
  %669 = or i1 %667, %668
  br i1 %669, label %originalBB140, label %originalBB140alteredBB

originalBB140:                                    ; preds = %661, %originalBB140alteredBB
  %670 = load i32, i32* %14, align 4, !dbg !5398
  %671 = icmp ne i32 %670, -1, !dbg !5399
  %672 = load i32, i32* @x.93
  %673 = load i32, i32* @y.94
  %674 = sub i32 %672, 1
  %675 = mul i32 %672, %674
  %676 = urem i32 %675, 2
  %677 = icmp eq i32 %676, 0
  %678 = icmp slt i32 %673, 10
  %679 = or i1 %677, %678
  br i1 %679, label %originalBBpart2142, label %originalBB140alteredBB

originalBBpart2142:                               ; preds = %originalBB140
  br i1 %671, label %680, label %701, !dbg !5400

680:                                              ; preds = %originalBBpart2142
  %681 = load i32, i32* @x.93
  %682 = load i32, i32* @y.94
  %683 = sub i32 %681, 1
  %684 = mul i32 %681, %683
  %685 = urem i32 %684, 2
  %686 = icmp eq i32 %685, 0
  %687 = icmp slt i32 %682, 10
  %688 = or i1 %686, %687
  br i1 %688, label %originalBB144, label %originalBB144alteredBB

originalBB144:                                    ; preds = %680, %originalBB144alteredBB
  %689 = load i32, i32* %14, align 4, !dbg !5401
  %690 = load i32*, i32** %18, align 8, !dbg !5403
  store i32 %689, i32* %690, align 4, !dbg !5404
  %691 = load i32, i32* %17, align 4, !dbg !5405
  %692 = add nsw i32 %691, 1, !dbg !5405
  store i32 %692, i32* %17, align 4, !dbg !5405
  %693 = load i32, i32* @x.93
  %694 = load i32, i32* @y.94
  %695 = sub i32 %693, 1
  %696 = mul i32 %693, %695
  %697 = urem i32 %696, 2
  %698 = icmp eq i32 %697, 0
  %699 = icmp slt i32 %694, 10
  %700 = or i1 %698, %699
  br i1 %700, label %originalBBpart2152, label %originalBB144alteredBB

originalBBpart2152:                               ; preds = %originalBB144
  br label %701, !dbg !5406

701:                                              ; preds = %originalBBpart2152, %originalBBpart2142, %originalBBpart2138
  %702 = load i32, i32* @x.93
  %703 = load i32, i32* @y.94
  %704 = sub i32 %702, 1
  %705 = mul i32 %702, %704
  %706 = urem i32 %705, 2
  %707 = icmp eq i32 %706, 0
  %708 = icmp slt i32 %703, 10
  %709 = or i1 %707, %708
  br i1 %709, label %originalBB154, label %originalBB154alteredBB

originalBB154:                                    ; preds = %701, %originalBB154alteredBB
  %710 = load i32*, i32** %18, align 8, !dbg !5407
  %711 = load i32**, i32*** %15, align 8, !dbg !5408
  store i32* %710, i32** %711, align 8, !dbg !5409
  %712 = load i32, i32* %17, align 4, !dbg !5410
  %713 = icmp slt i32 1, %712, !dbg !5412
  %714 = load i32, i32* @x.93
  %715 = load i32, i32* @y.94
  %716 = sub i32 %714, 1
  %717 = mul i32 %714, %716
  %718 = urem i32 %717, 2
  %719 = icmp eq i32 %718, 0
  %720 = icmp slt i32 %715, 10
  %721 = or i1 %719, %720
  br i1 %721, label %originalBBpart2156, label %originalBB154alteredBB

originalBBpart2156:                               ; preds = %originalBB154
  br i1 %713, label %722, label %903, !dbg !5413

722:                                              ; preds = %originalBBpart2156
  call void @llvm.dbg.declare(metadata i32* %23, metadata !5414, metadata !DIExpression()), !dbg !5416
  %723 = load i32, i32* @x.93
  %724 = load i32, i32* @y.94
  %725 = sub i32 %723, 1
  %726 = mul i32 %723, %725
  %727 = urem i32 %726, 2
  %728 = icmp eq i32 %727, 0
  %729 = icmp slt i32 %724, 10
  %730 = or i1 %728, %729
  br i1 %730, label %originalBB158, label %originalBB158alteredBB

originalBB158:                                    ; preds = %722, %originalBB158alteredBB
  %731 = load i32*, i32** %18, align 8, !dbg !5417
  %732 = load i32, i32* %731, align 4, !dbg !5418
  store i32 %732, i32* %23, align 4, !dbg !5416
  call void @llvm.dbg.declare(metadata i32** %24, metadata !5419, metadata !DIExpression()), !dbg !5420
  call void @llvm.dbg.declare(metadata i32** %25, metadata !5421, metadata !DIExpression()), !dbg !5422
  %733 = load i32*, i32** %18, align 8, !dbg !5423
  %734 = load i32, i32* %17, align 4, !dbg !5424
  %735 = sext i32 %734 to i64, !dbg !5425
  %736 = getelementptr inbounds i32, i32* %733, i64 %735, !dbg !5425
  store i32* %736, i32** %25, align 8, !dbg !5422
  %737 = load i32*, i32** %18, align 8, !dbg !5426
  %738 = getelementptr inbounds i32, i32* %737, i64 1, !dbg !5428
  store i32* %738, i32** %24, align 8, !dbg !5429
  %739 = load i32, i32* @x.93
  %740 = load i32, i32* @y.94
  %741 = sub i32 %739, 1
  %742 = mul i32 %739, %741
  %743 = urem i32 %742, 2
  %744 = icmp eq i32 %743, 0
  %745 = icmp slt i32 %740, 10
  %746 = or i1 %744, %745
  br i1 %746, label %originalBBpart2160, label %originalBB158alteredBB

originalBBpart2160:                               ; preds = %originalBB158
  br label %747, !dbg !5430

747:                                              ; preds = %originalBBpart2205, %originalBBpart2160
  %748 = load i32, i32* @x.93
  %749 = load i32, i32* @y.94
  %750 = sub i32 %748, 1
  %751 = mul i32 %748, %750
  %752 = urem i32 %751, 2
  %753 = icmp eq i32 %752, 0
  %754 = icmp slt i32 %749, 10
  %755 = or i1 %753, %754
  br i1 %755, label %originalBB162, label %originalBB162alteredBB

originalBB162:                                    ; preds = %747, %originalBB162alteredBB
  %756 = load i32*, i32** %24, align 8, !dbg !5431
  %757 = load i32*, i32** %25, align 8, !dbg !5433
  %758 = icmp ult i32* %756, %757, !dbg !5434
  %759 = load i32, i32* @x.93
  %760 = load i32, i32* @y.94
  %761 = sub i32 %759, 1
  %762 = mul i32 %759, %761
  %763 = urem i32 %762, 2
  %764 = icmp eq i32 %763, 0
  %765 = icmp slt i32 %760, 10
  %766 = or i1 %764, %765
  br i1 %766, label %originalBBpart2164, label %originalBB162alteredBB

originalBBpart2164:                               ; preds = %originalBB162
  br i1 %758, label %767, label %886, !dbg !5435

767:                                              ; preds = %originalBBpart2164
  %768 = load i32, i32* @x.93
  %769 = load i32, i32* @y.94
  %770 = sub i32 %768, 1
  %771 = mul i32 %768, %770
  %772 = urem i32 %771, 2
  %773 = icmp eq i32 %772, 0
  %774 = icmp slt i32 %769, 10
  %775 = or i1 %773, %774
  br i1 %775, label %originalBB166, label %originalBB166alteredBB

originalBB166:                                    ; preds = %767, %originalBB166alteredBB
  %776 = load i32*, i32** %24, align 8, !dbg !5436
  %777 = load i32, i32* %776, align 4, !dbg !5439
  %778 = load i32, i32* %23, align 4, !dbg !5440
  %779 = icmp eq i32 %777, %778, !dbg !5441
  %780 = load i32, i32* @x.93
  %781 = load i32, i32* @y.94
  %782 = sub i32 %780, 1
  %783 = mul i32 %780, %782
  %784 = urem i32 %783, 2
  %785 = icmp eq i32 %784, 0
  %786 = icmp slt i32 %781, 10
  %787 = or i1 %785, %786
  br i1 %787, label %originalBBpart2168, label %originalBB166alteredBB

originalBBpart2168:                               ; preds = %originalBB166
  br i1 %779, label %810, label %788, !dbg !5442

788:                                              ; preds = %originalBBpart2168
  %789 = load i32, i32* @x.93
  %790 = load i32, i32* @y.94
  %791 = sub i32 %789, 1
  %792 = mul i32 %789, %791
  %793 = urem i32 %792, 2
  %794 = icmp eq i32 %793, 0
  %795 = icmp slt i32 %790, 10
  %796 = or i1 %794, %795
  br i1 %796, label %originalBB170, label %originalBB170alteredBB

originalBB170:                                    ; preds = %788, %originalBB170alteredBB
  %797 = load i32*, i32** %24, align 8, !dbg !5443
  %798 = load i32, i32* %797, align 4, !dbg !5444
  %799 = load i32*, i32** %18, align 8, !dbg !5445
  %800 = load i32, i32* %799, align 4, !dbg !5446
  %801 = icmp eq i32 %798, %800, !dbg !5447
  %802 = load i32, i32* @x.93
  %803 = load i32, i32* @y.94
  %804 = sub i32 %802, 1
  %805 = mul i32 %802, %804
  %806 = urem i32 %805, 2
  %807 = icmp eq i32 %806, 0
  %808 = icmp slt i32 %803, 10
  %809 = or i1 %807, %808
  br i1 %809, label %originalBBpart2172, label %originalBB170alteredBB

originalBBpart2172:                               ; preds = %originalBB170
  br i1 %801, label %810, label %829, !dbg !5448

810:                                              ; preds = %originalBBpart2172, %originalBBpart2168
  %811 = load i32, i32* @x.93
  %812 = load i32, i32* @y.94
  %813 = sub i32 %811, 1
  %814 = mul i32 %811, %813
  %815 = urem i32 %814, 2
  %816 = icmp eq i32 %815, 0
  %817 = icmp slt i32 %812, 10
  %818 = or i1 %816, %817
  br i1 %818, label %originalBB174, label %originalBB174alteredBB

originalBB174:                                    ; preds = %810, %originalBB174alteredBB
  %819 = load i32, i32* %17, align 4, !dbg !5449
  %820 = add nsw i32 %819, -1, !dbg !5449
  store i32 %820, i32* %17, align 4, !dbg !5449
  %821 = load i32, i32* @x.93
  %822 = load i32, i32* @y.94
  %823 = sub i32 %821, 1
  %824 = mul i32 %821, %823
  %825 = urem i32 %824, 2
  %826 = icmp eq i32 %825, 0
  %827 = icmp slt i32 %822, 10
  %828 = or i1 %826, %827
  br i1 %828, label %originalBBpart2193, label %originalBB174alteredBB

originalBBpart2193:                               ; preds = %originalBB174
  br label %850, !dbg !5450

829:                                              ; preds = %originalBBpart2172
  %830 = load i32, i32* @x.93
  %831 = load i32, i32* @y.94
  %832 = sub i32 %830, 1
  %833 = mul i32 %830, %832
  %834 = urem i32 %833, 2
  %835 = icmp eq i32 %834, 0
  %836 = icmp slt i32 %831, 10
  %837 = or i1 %835, %836
  br i1 %837, label %originalBB195, label %originalBB195alteredBB

originalBB195:                                    ; preds = %829, %originalBB195alteredBB
  %838 = load i32*, i32** %24, align 8, !dbg !5451
  %839 = load i32, i32* %838, align 4, !dbg !5452
  %840 = load i32*, i32** %18, align 8, !dbg !5453
  %841 = getelementptr inbounds i32, i32* %840, i32 1, !dbg !5453
  store i32* %841, i32** %18, align 8, !dbg !5453
  store i32 %839, i32* %841, align 4, !dbg !5454
  %842 = load i32, i32* @x.93
  %843 = load i32, i32* @y.94
  %844 = sub i32 %842, 1
  %845 = mul i32 %842, %844
  %846 = urem i32 %845, 2
  %847 = icmp eq i32 %846, 0
  %848 = icmp slt i32 %843, 10
  %849 = or i1 %847, %848
  br i1 %849, label %originalBBpart2197, label %originalBB195alteredBB

originalBBpart2197:                               ; preds = %originalBB195
  br label %850

850:                                              ; preds = %originalBBpart2197, %originalBBpart2193
  %851 = load i32, i32* @x.93
  %852 = load i32, i32* @y.94
  %853 = sub i32 %851, 1
  %854 = mul i32 %851, %853
  %855 = urem i32 %854, 2
  %856 = icmp eq i32 %855, 0
  %857 = icmp slt i32 %852, 10
  %858 = or i1 %856, %857
  br i1 %858, label %originalBB199, label %originalBB199alteredBB

originalBB199:                                    ; preds = %850, %originalBB199alteredBB
  %859 = load i32, i32* @x.93
  %860 = load i32, i32* @y.94
  %861 = sub i32 %859, 1
  %862 = mul i32 %859, %861
  %863 = urem i32 %862, 2
  %864 = icmp eq i32 %863, 0
  %865 = icmp slt i32 %860, 10
  %866 = or i1 %864, %865
  br i1 %866, label %originalBBpart2201, label %originalBB199alteredBB

originalBBpart2201:                               ; preds = %originalBB199
  br label %867, !dbg !5455

867:                                              ; preds = %originalBBpart2201
  %868 = load i32, i32* @x.93
  %869 = load i32, i32* @y.94
  %870 = sub i32 %868, 1
  %871 = mul i32 %868, %870
  %872 = urem i32 %871, 2
  %873 = icmp eq i32 %872, 0
  %874 = icmp slt i32 %869, 10
  %875 = or i1 %873, %874
  br i1 %875, label %originalBB203, label %originalBB203alteredBB

originalBB203:                                    ; preds = %867, %originalBB203alteredBB
  %876 = load i32*, i32** %24, align 8, !dbg !5456
  %877 = getelementptr inbounds i32, i32* %876, i32 1, !dbg !5456
  store i32* %877, i32** %24, align 8, !dbg !5456
  %878 = load i32, i32* @x.93
  %879 = load i32, i32* @y.94
  %880 = sub i32 %878, 1
  %881 = mul i32 %878, %880
  %882 = urem i32 %881, 2
  %883 = icmp eq i32 %882, 0
  %884 = icmp slt i32 %879, 10
  %885 = or i1 %883, %884
  br i1 %885, label %originalBBpart2205, label %originalBB203alteredBB

originalBBpart2205:                               ; preds = %originalBB203
  br label %747, !dbg !5457, !llvm.loop !5458

886:                                              ; preds = %originalBBpart2164
  %887 = load i32, i32* @x.93
  %888 = load i32, i32* @y.94
  %889 = sub i32 %887, 1
  %890 = mul i32 %887, %889
  %891 = urem i32 %890, 2
  %892 = icmp eq i32 %891, 0
  %893 = icmp slt i32 %888, 10
  %894 = or i1 %892, %893
  br i1 %894, label %originalBB207, label %originalBB207alteredBB

originalBB207:                                    ; preds = %886, %originalBB207alteredBB
  %895 = load i32, i32* @x.93
  %896 = load i32, i32* @y.94
  %897 = sub i32 %895, 1
  %898 = mul i32 %895, %897
  %899 = urem i32 %898, 2
  %900 = icmp eq i32 %899, 0
  %901 = icmp slt i32 %896, 10
  %902 = or i1 %900, %901
  br i1 %902, label %originalBBpart2209, label %originalBB207alteredBB

originalBBpart2209:                               ; preds = %originalBB207
  br label %903, !dbg !5460

903:                                              ; preds = %originalBBpart2209, %originalBBpart2156
  %904 = load i32, i32* @x.93
  %905 = load i32, i32* @y.94
  %906 = sub i32 %904, 1
  %907 = mul i32 %904, %906
  %908 = urem i32 %907, 2
  %909 = icmp eq i32 %908, 0
  %910 = icmp slt i32 %905, 10
  %911 = or i1 %909, %910
  br i1 %911, label %originalBB211, label %originalBB211alteredBB

originalBB211:                                    ; preds = %903, %originalBB211alteredBB
  %912 = load i32, i32* %17, align 4, !dbg !5461
  store i32 %912, i32* %12, align 4, !dbg !5462
  %913 = load i32, i32* @x.93
  %914 = load i32, i32* @y.94
  %915 = sub i32 %913, 1
  %916 = mul i32 %913, %915
  %917 = urem i32 %916, 2
  %918 = icmp eq i32 %917, 0
  %919 = icmp slt i32 %914, 10
  %920 = or i1 %918, %919
  br i1 %920, label %originalBBpart2213, label %originalBB211alteredBB

originalBBpart2213:                               ; preds = %originalBB211
  br label %921, !dbg !5462

921:                                              ; preds = %originalBBpart2213, %originalBBpart2134, %originalBBpart2104, %originalBBpart276, %originalBBpart272, %originalBBpart240, %originalBBpart232, %originalBBpart28
  %922 = load i32, i32* @x.93
  %923 = load i32, i32* @y.94
  %924 = sub i32 %922, 1
  %925 = mul i32 %922, %924
  %926 = urem i32 %925, 2
  %927 = icmp eq i32 %926, 0
  %928 = icmp slt i32 %923, 10
  %929 = or i1 %927, %928
  br i1 %929, label %originalBB215, label %originalBB215alteredBB

originalBB215:                                    ; preds = %921, %originalBB215alteredBB
  %930 = load i32, i32* %12, align 4, !dbg !5463
  %931 = load i32, i32* @x.93
  %932 = load i32, i32* @y.94
  %933 = sub i32 %931, 1
  %934 = mul i32 %931, %933
  %935 = urem i32 %934, 2
  %936 = icmp eq i32 %935, 0
  %937 = icmp slt i32 %932, 10
  %938 = or i1 %936, %937
  br i1 %938, label %originalBBpart2217, label %originalBB215alteredBB

originalBBpart2217:                               ; preds = %originalBB215
  ret i32 %930, !dbg !5463

originalBBalteredBB:                              ; preds = %originalBB, %3
  %939 = alloca i32, align 4
  %940 = alloca i8*, align 8
  %941 = alloca i32, align 4
  %942 = alloca i32**, align 8
  %943 = alloca i32, align 4
  %944 = alloca i32, align 4
  %945 = alloca i32*, align 8
  %946 = alloca i32*, align 8
  %947 = alloca i32, align 4
  %948 = alloca i32, align 4
  %949 = alloca i32, align 4
  %950 = alloca i32, align 4
  %951 = alloca i32*, align 8
  %952 = alloca i32*, align 8
  store i8* %0, i8** %940, align 8
  call void @llvm.dbg.declare(metadata i8** %940, metadata !5464, metadata !DIExpression()), !dbg !5240
  store i32 %1, i32* %941, align 4
  call void @llvm.dbg.declare(metadata i32* %941, metadata !5467, metadata !DIExpression()), !dbg !5242
  store i32** %2, i32*** %942, align 8
  call void @llvm.dbg.declare(metadata i32*** %942, metadata !5468, metadata !DIExpression()), !dbg !5244
  call void @llvm.dbg.declare(metadata i32* %943, metadata !5469, metadata !DIExpression()), !dbg !5246
  call void @llvm.dbg.declare(metadata i32* %944, metadata !5470, metadata !DIExpression()), !dbg !5248
  call void @llvm.dbg.declare(metadata i32** %945, metadata !5471, metadata !DIExpression()), !dbg !5250
  %953 = load i8*, i8** %940, align 8, !dbg !5251
  %954 = icmp ne i8* %953, null, !dbg !5251
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %36
  store i32 10, i32* %16, align 4, !dbg !5254
  %955 = load i32, i32* %16, align 4, !dbg !5256
  %956 = sext i32 %955 to i64, !dbg !5256
  %957 = call i32* @realloc_groupbuf(i32* null, i64 %956), !dbg !5257
  store i32* %957, i32** %18, align 8, !dbg !5258
  %958 = load i32*, i32** %18, align 8, !dbg !5259
  %959 = icmp eq i32* %958, null, !dbg !5261
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %58
  store i32 -1, i32* %12, align 4, !dbg !5263
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %75
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %92
  %960 = load i32, i32* %16, align 4, !dbg !5270
  store i32 %960, i32* %20, align 4, !dbg !5269
  %961 = load i8*, i8** %13, align 8, !dbg !5271
  %962 = load i32, i32* %14, align 4, !dbg !5272
  %963 = load i32*, i32** %18, align 8, !dbg !5273
  %964 = call i32 @getgrouplist(i8* %961, i32 %962, i32* %963, i32* %16), !dbg !5274
  store i32 %964, i32* %17, align 4, !dbg !5275
  %965 = load i32, i32* %17, align 4, !dbg !5276
  %966 = icmp slt i32 %965, 0, !dbg !5278
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %116
  %967 = load i32, i32* %20, align 4, !dbg !5280
  %968 = load i32, i32* %16, align 4, !dbg !5281
  %969 = icmp eq i32 %967, %968, !dbg !5282
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %136
  %970 = load i32, i32* %16, align 4, !dbg !5284
  %_ = shl i32 %970, 2
  %971 = mul nsw i32 %970, 2, !dbg !5284
  store i32 %971, i32* %16, align 4, !dbg !5284
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %155
  %972 = load i32*, i32** %18, align 8, !dbg !5286
  %973 = load i32, i32* %16, align 4, !dbg !5288
  %974 = sext i32 %973 to i64, !dbg !5288
  %975 = call i32* @realloc_groupbuf(i32* %972, i64 %974), !dbg !5289
  store i32* %975, i32** %19, align 8, !dbg !5290
  %976 = icmp eq i32* %975, null, !dbg !5291
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %177
  %977 = call i32* @__errno_location() #15, !dbg !5296
  %978 = load i32, i32* %977, align 4, !dbg !5296
  store i32 %978, i32* %21, align 4, !dbg !5295
  %979 = load i32*, i32** %18, align 8, !dbg !5297
  %980 = bitcast i32* %979 to i8*, !dbg !5297
  call void @free(i8* %980) #10, !dbg !5298
  %981 = load i32, i32* %21, align 4, !dbg !5299
  %982 = call i32* @__errno_location() #15, !dbg !5300
  store i32 %981, i32* %982, align 4, !dbg !5301
  store i32 -1, i32* %12, align 4, !dbg !5302
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %200
  %983 = load i32*, i32** %19, align 8, !dbg !5303
  store i32* %983, i32** %18, align 8, !dbg !5304
  %984 = load i32, i32* %17, align 4, !dbg !5305
  %985 = icmp sle i32 0, %984, !dbg !5307
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %220
  %986 = load i32*, i32** %18, align 8, !dbg !5309
  %987 = load i32**, i32*** %15, align 8, !dbg !5311
  store i32* %986, i32** %987, align 8, !dbg !5312
  %988 = load i32, i32* %16, align 4, !dbg !5313
  store i32 %988, i32* %12, align 4, !dbg !5314
  br label %originalBB38

originalBB42alteredBB:                            ; preds = %originalBB42, %240
  br label %originalBB42

originalBB46alteredBB:                            ; preds = %originalBB46, %257
  %989 = load i8*, i8** %13, align 8, !dbg !5317
  %990 = icmp ne i8* %989, null, !dbg !5317
  br label %originalBB46

originalBB50alteredBB:                            ; preds = %originalBB50, %276
  %991 = load i8*, i8** %13, align 8, !dbg !5318
  %992 = load i32, i32* %14, align 4, !dbg !5319
  %993 = call i32 @getugroups(i32 0, i32* null, i8* %991, i32 %992), !dbg !5320
  br label %originalBB50

originalBB54alteredBB:                            ; preds = %originalBB54, %296
  %994 = call i32 @getgroups(i32 0, i32* null) #10, !dbg !5321
  br label %originalBB54

originalBB58alteredBB:                            ; preds = %originalBB58, %314
  store i32 %315, i32* %16, align 4, !dbg !5322
  %995 = load i32, i32* %16, align 4, !dbg !5323
  %996 = icmp slt i32 %995, 0, !dbg !5325
  br label %originalBB58

originalBB62alteredBB:                            ; preds = %originalBB62, %334
  %997 = call i32* @__errno_location() #15, !dbg !5327
  %998 = load i32, i32* %997, align 4, !dbg !5327
  %999 = icmp eq i32 %998, 38, !dbg !5330
  br label %originalBB62

originalBB66alteredBB:                            ; preds = %originalBB66, %354
  %1000 = call i32* @realloc_groupbuf(i32* null, i64 1), !dbg !5332
  store i32* %1000, i32** %18, align 8, !dbg !5333
  %1001 = icmp ne i32* %1000, null, !dbg !5333
  br label %originalBB66

originalBB70alteredBB:                            ; preds = %originalBB70, %373
  %1002 = load i32*, i32** %18, align 8, !dbg !5335
  %1003 = load i32**, i32*** %15, align 8, !dbg !5337
  store i32* %1002, i32** %1003, align 8, !dbg !5338
  %1004 = load i32, i32* %14, align 4, !dbg !5339
  %1005 = load i32*, i32** %18, align 8, !dbg !5340
  store i32 %1004, i32* %1005, align 4, !dbg !5341
  %1006 = load i32, i32* %14, align 4, !dbg !5342
  %1007 = icmp ne i32 %1006, -1, !dbg !5343
  %1008 = zext i1 %1007 to i32, !dbg !5343
  store i32 %1008, i32* %12, align 4, !dbg !5344
  br label %originalBB70

originalBB74alteredBB:                            ; preds = %originalBB74, %397
  store i32 -1, i32* %12, align 4, !dbg !5345
  br label %originalBB74

originalBB78alteredBB:                            ; preds = %originalBB78, %414
  %1009 = load i32, i32* %16, align 4, !dbg !5346
  %1010 = icmp eq i32 %1009, 0, !dbg !5348
  br label %originalBB78

originalBB82alteredBB:                            ; preds = %originalBB82, %433
  %1011 = load i8*, i8** %13, align 8, !dbg !5350
  %1012 = icmp ne i8* %1011, null, !dbg !5350
  br label %originalBB82

originalBB86alteredBB:                            ; preds = %originalBB86, %452
  %1013 = load i32, i32* %14, align 4, !dbg !5352
  %1014 = icmp ne i32 %1013, -1, !dbg !5353
  br label %originalBB86

originalBB90alteredBB:                            ; preds = %originalBB90, %471
  %1015 = load i32, i32* %16, align 4, !dbg !5355
  %_91 = sub i32 0, %1015
  %gen = add i32 %_91, 1
  %_92 = sub i32 %1015, 1
  %gen93 = mul i32 %_92, 1
  %_94 = shl i32 %1015, 1
  %1016 = add nsw i32 %1015, 1, !dbg !5355
  store i32 %1016, i32* %16, align 4, !dbg !5355
  br label %originalBB90

originalBB98alteredBB:                            ; preds = %originalBB98, %490
  %1017 = load i32, i32* %16, align 4, !dbg !5357
  %1018 = sext i32 %1017 to i64, !dbg !5357
  %1019 = call i32* @realloc_groupbuf(i32* null, i64 %1018), !dbg !5358
  store i32* %1019, i32** %18, align 8, !dbg !5359
  %1020 = load i32*, i32** %18, align 8, !dbg !5360
  %1021 = icmp eq i32* %1020, null, !dbg !5362
  br label %originalBB98

originalBB102alteredBB:                           ; preds = %originalBB102, %512
  store i32 -1, i32* %12, align 4, !dbg !5364
  br label %originalBB102

originalBB106alteredBB:                           ; preds = %originalBB106, %529
  %1022 = load i8*, i8** %13, align 8, !dbg !5365
  %1023 = icmp ne i8* %1022, null, !dbg !5365
  br label %originalBB106

originalBB110alteredBB:                           ; preds = %originalBB110, %548
  %1024 = load i32, i32* %16, align 4, !dbg !5366
  %1025 = load i32*, i32** %18, align 8, !dbg !5367
  %1026 = load i8*, i8** %13, align 8, !dbg !5368
  %1027 = load i32, i32* %14, align 4, !dbg !5369
  %1028 = call i32 @getugroups(i32 %1024, i32* %1025, i8* %1026, i32 %1027), !dbg !5370
  br label %originalBB110

originalBB114alteredBB:                           ; preds = %originalBB114, %570
  %1029 = load i32, i32* %16, align 4, !dbg !5371
  %1030 = load i32, i32* %14, align 4, !dbg !5372
  %1031 = icmp ne i32 %1030, -1, !dbg !5373
  %1032 = zext i1 %1031 to i32, !dbg !5373
  %_115 = sub i32 %1029, %1032
  %gen116 = mul i32 %_115, %1032
  %_117 = shl i32 %1029, %1032
  %_118 = shl i32 %1029, %1032
  %_119 = sub i32 0, %1029
  %gen120 = add i32 %_119, %1032
  %_121 = sub i32 %1029, %1032
  %gen122 = mul i32 %_121, %1032
  %_123 = sub i32 0, %1029
  %gen124 = add i32 %_123, %1032
  %1033 = sub nsw i32 %1029, %1032, !dbg !5374
  %1034 = load i32*, i32** %18, align 8, !dbg !5375
  %1035 = load i32, i32* %14, align 4, !dbg !5376
  %1036 = icmp ne i32 %1035, -1, !dbg !5377
  %1037 = zext i1 %1036 to i32, !dbg !5377
  %1038 = sext i32 %1037 to i64, !dbg !5378
  %1039 = getelementptr inbounds i32, i32* %1034, i64 %1038, !dbg !5378
  %1040 = call i32 @getgroups(i32 %1033, i32* %1039) #10, !dbg !5379
  br label %originalBB114

originalBB128alteredBB:                           ; preds = %originalBB128, %599
  store i32 %600, i32* %17, align 4, !dbg !5380
  %1041 = load i32, i32* %17, align 4, !dbg !5381
  %1042 = icmp slt i32 %1041, 0, !dbg !5383
  br label %originalBB128

originalBB132alteredBB:                           ; preds = %originalBB132, %619
  %1043 = call i32* @__errno_location() #15, !dbg !5388
  %1044 = load i32, i32* %1043, align 4, !dbg !5388
  store i32 %1044, i32* %22, align 4, !dbg !5387
  %1045 = load i32*, i32** %18, align 8, !dbg !5389
  %1046 = bitcast i32* %1045 to i8*, !dbg !5389
  call void @free(i8* %1046) #10, !dbg !5390
  %1047 = load i32, i32* %22, align 4, !dbg !5391
  %1048 = call i32* @__errno_location() #15, !dbg !5392
  store i32 %1047, i32* %1048, align 4, !dbg !5393
  store i32 -1, i32* %12, align 4, !dbg !5394
  br label %originalBB132

originalBB136alteredBB:                           ; preds = %originalBB136, %642
  %1049 = load i8*, i8** %13, align 8, !dbg !5395
  %1050 = icmp ne i8* %1049, null, !dbg !5395
  br label %originalBB136

originalBB140alteredBB:                           ; preds = %originalBB140, %661
  %1051 = load i32, i32* %14, align 4, !dbg !5398
  %1052 = icmp ne i32 %1051, -1, !dbg !5399
  br label %originalBB140

originalBB144alteredBB:                           ; preds = %originalBB144, %680
  %1053 = load i32, i32* %14, align 4, !dbg !5401
  %1054 = load i32*, i32** %18, align 8, !dbg !5403
  store i32 %1053, i32* %1054, align 4, !dbg !5404
  %1055 = load i32, i32* %17, align 4, !dbg !5405
  %_145 = shl i32 %1055, 1
  %_146 = sub i32 0, %1055
  %gen147 = add i32 %_146, 1
  %_148 = shl i32 %1055, 1
  %_149 = sub i32 0, %1055
  %gen150 = add i32 %_149, 1
  %1056 = add nsw i32 %1055, 1, !dbg !5405
  store i32 %1056, i32* %17, align 4, !dbg !5405
  br label %originalBB144

originalBB154alteredBB:                           ; preds = %originalBB154, %701
  %1057 = load i32*, i32** %18, align 8, !dbg !5407
  %1058 = load i32**, i32*** %15, align 8, !dbg !5408
  store i32* %1057, i32** %1058, align 8, !dbg !5409
  %1059 = load i32, i32* %17, align 4, !dbg !5410
  %1060 = icmp slt i32 1, %1059, !dbg !5412
  br label %originalBB154

originalBB158alteredBB:                           ; preds = %originalBB158, %722
  %1061 = load i32*, i32** %18, align 8, !dbg !5417
  %1062 = load i32, i32* %1061, align 4, !dbg !5418
  store i32 %1062, i32* %23, align 4, !dbg !5416
  call void @llvm.dbg.declare(metadata !4, metadata !5472, metadata !DIExpression()), !dbg !5420
  call void @llvm.dbg.declare(metadata !4, metadata !5477, metadata !DIExpression()), !dbg !5422
  %1063 = load i32*, i32** %18, align 8, !dbg !5423
  %1064 = load i32, i32* %17, align 4, !dbg !5424
  %1065 = sext i32 %1064 to i64, !dbg !5425
  %1066 = getelementptr inbounds i32, i32* %1063, i64 %1065, !dbg !5425
  store i32* %1066, i32** %25, align 8, !dbg !5422
  %1067 = load i32*, i32** %18, align 8, !dbg !5426
  %1068 = getelementptr inbounds i32, i32* %1067, i64 1, !dbg !5428
  store i32* %1068, i32** %24, align 8, !dbg !5429
  br label %originalBB158

originalBB162alteredBB:                           ; preds = %originalBB162, %747
  %1069 = load i32*, i32** %24, align 8, !dbg !5431
  %1070 = load i32*, i32** %25, align 8, !dbg !5433
  %1071 = icmp ult i32* %1069, %1070, !dbg !5434
  br label %originalBB162

originalBB166alteredBB:                           ; preds = %originalBB166, %767
  %1072 = load i32*, i32** %24, align 8, !dbg !5436
  %1073 = load i32, i32* %1072, align 4, !dbg !5439
  %1074 = load i32, i32* %23, align 4, !dbg !5440
  %1075 = icmp eq i32 %1073, %1074, !dbg !5441
  br label %originalBB166

originalBB170alteredBB:                           ; preds = %originalBB170, %788
  %1076 = load i32*, i32** %24, align 8, !dbg !5443
  %1077 = load i32, i32* %1076, align 4, !dbg !5444
  %1078 = load i32*, i32** %18, align 8, !dbg !5445
  %1079 = load i32, i32* %1078, align 4, !dbg !5446
  %1080 = icmp eq i32 %1077, %1079, !dbg !5447
  br label %originalBB170

originalBB174alteredBB:                           ; preds = %originalBB174, %810
  %1081 = load i32, i32* %17, align 4, !dbg !5449
  %_175 = sub i32 0, %1081
  %gen176 = add i32 %_175, -1
  %_177 = sub i32 0, %1081
  %gen178 = add i32 %_177, -1
  %_179 = sub i32 0, %1081
  %gen180 = add i32 %_179, -1
  %_181 = sub i32 %1081, -1
  %gen182 = mul i32 %_181, -1
  %_183 = sub i32 %1081, -1
  %gen184 = mul i32 %_183, -1
  %_185 = shl i32 %1081, -1
  %_186 = sub i32 0, %1081
  %gen187 = add i32 %_186, -1
  %_188 = sub i32 %1081, -1
  %gen189 = mul i32 %_188, -1
  %_190 = sub i32 %1081, -1
  %gen191 = mul i32 %_190, -1
  %1082 = add nsw i32 %1081, -1, !dbg !5449
  store i32 %1082, i32* %17, align 4, !dbg !5449
  br label %originalBB174

originalBB195alteredBB:                           ; preds = %originalBB195, %829
  %1083 = load i32*, i32** %24, align 8, !dbg !5451
  %1084 = load i32, i32* %1083, align 4, !dbg !5452
  %1085 = load i32*, i32** %18, align 8, !dbg !5453
  %1086 = getelementptr inbounds i32, i32* %1085, i32 1, !dbg !5453
  store i32* %1086, i32** %18, align 8, !dbg !5453
  store i32 %1084, i32* %1086, align 4, !dbg !5454
  br label %originalBB195

originalBB199alteredBB:                           ; preds = %originalBB199, %850
  br label %originalBB199

originalBB203alteredBB:                           ; preds = %originalBB203, %867
  %1087 = load i32*, i32** %24, align 8, !dbg !5456
  %1088 = getelementptr inbounds i32, i32* %1087, i32 1, !dbg !5456
  store i32* %1088, i32** %24, align 8, !dbg !5456
  br label %originalBB203

originalBB207alteredBB:                           ; preds = %originalBB207, %886
  br label %originalBB207

originalBB211alteredBB:                           ; preds = %originalBB211, %903
  %1089 = load i32, i32* %17, align 4, !dbg !5461
  store i32 %1089, i32* %12, align 4, !dbg !5462
  br label %originalBB211

originalBB215alteredBB:                           ; preds = %originalBB215, %921
  %1090 = load i32, i32* %12, align 4, !dbg !5463
  br label %originalBB215
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32* @realloc_groupbuf(i32*, i64) #4 !dbg !5478 {
  %3 = load i32, i32* @x.95
  %4 = load i32, i32* @y.96
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca i32*, align 8
  %12 = alloca i32*, align 8
  %13 = alloca i64, align 8
  store i32* %0, i32** %12, align 8
  call void @llvm.dbg.declare(metadata i32** %12, metadata !5481, metadata !DIExpression()), !dbg !5482
  store i64 %1, i64* %13, align 8
  call void @llvm.dbg.declare(metadata i64* %13, metadata !5483, metadata !DIExpression()), !dbg !5484
  %14 = load i64, i64* %13, align 8, !dbg !5485
  %15 = icmp ult i64 2305843009213693951, %14, !dbg !5485
  %16 = load i32, i32* @x.95
  %17 = load i32, i32* @y.96
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %15, label %24, label %42, !dbg !5487

24:                                               ; preds = %originalBBpart2
  %25 = load i32, i32* @x.95
  %26 = load i32, i32* @y.96
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %24, %originalBB1alteredBB
  %33 = call i32* @__errno_location() #15, !dbg !5488
  store i32 12, i32* %33, align 4, !dbg !5490
  store i32* null, i32** %11, align 8, !dbg !5491
  %34 = load i32, i32* @x.95
  %35 = load i32, i32* @y.96
  %36 = sub i32 %34, 1
  %37 = mul i32 %34, %36
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %39, %40
  br i1 %41, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %65, !dbg !5491

42:                                               ; preds = %originalBBpart2
  %43 = load i32, i32* @x.95
  %44 = load i32, i32* @y.96
  %45 = sub i32 %43, 1
  %46 = mul i32 %43, %45
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %48, %49
  br i1 %50, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %42, %originalBB6alteredBB
  %51 = load i32*, i32** %12, align 8, !dbg !5492
  %52 = bitcast i32* %51 to i8*, !dbg !5492
  %53 = load i64, i64* %13, align 8, !dbg !5493
  %54 = mul i64 %53, 4, !dbg !5494
  %55 = call i8* @realloc(i8* %52, i64 %54) #10, !dbg !5495
  %56 = bitcast i8* %55 to i32*, !dbg !5495
  store i32* %56, i32** %11, align 8, !dbg !5496
  %57 = load i32, i32* @x.95
  %58 = load i32, i32* @y.96
  %59 = sub i32 %57, 1
  %60 = mul i32 %57, %59
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %58, 10
  %64 = or i1 %62, %63
  br i1 %64, label %originalBBpart216, label %originalBB6alteredBB

originalBBpart216:                                ; preds = %originalBB6
  br label %65, !dbg !5496

65:                                               ; preds = %originalBBpart216, %originalBBpart24
  %66 = load i32, i32* @x.95
  %67 = load i32, i32* @y.96
  %68 = sub i32 %66, 1
  %69 = mul i32 %66, %68
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %67, 10
  %73 = or i1 %71, %72
  br i1 %73, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %65, %originalBB18alteredBB
  %74 = load i32*, i32** %11, align 8, !dbg !5497
  %75 = load i32, i32* @x.95
  %76 = load i32, i32* @y.96
  %77 = sub i32 %75, 1
  %78 = mul i32 %75, %77
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %76, 10
  %82 = or i1 %80, %81
  br i1 %82, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  ret i32* %74, !dbg !5497

originalBBalteredBB:                              ; preds = %originalBB, %2
  %83 = alloca i32*, align 8
  %84 = alloca i32*, align 8
  %85 = alloca i64, align 8
  store i32* %0, i32** %84, align 8
  call void @llvm.dbg.declare(metadata i32** %84, metadata !5498, metadata !DIExpression()), !dbg !5482
  store i64 %1, i64* %85, align 8
  call void @llvm.dbg.declare(metadata i64* %85, metadata !5501, metadata !DIExpression()), !dbg !5484
  %86 = load i64, i64* %85, align 8, !dbg !5485
  %87 = icmp ult i64 2305843009213693951, %86, !dbg !5485
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %24
  %88 = call i32* @__errno_location() #15, !dbg !5488
  store i32 12, i32* %88, align 4, !dbg !5490
  store i32* null, i32** %11, align 8, !dbg !5491
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %42
  %89 = load i32*, i32** %12, align 8, !dbg !5492
  %90 = bitcast i32* %89 to i8*, !dbg !5492
  %91 = load i64, i64* %13, align 8, !dbg !5493
  %_ = sub i64 0, %91
  %gen = add i64 %_, 4
  %_7 = sub i64 0, %91
  %gen8 = add i64 %_7, 4
  %_9 = sub i64 %91, 4
  %gen10 = mul i64 %_9, 4
  %_11 = sub i64 %91, 4
  %gen12 = mul i64 %_11, 4
  %_13 = sub i64 %91, 4
  %gen14 = mul i64 %_13, 4
  %92 = mul i64 %91, 4, !dbg !5494
  %93 = call i8* @realloc(i8* %90, i64 %92) #10, !dbg !5495
  %94 = bitcast i8* %93 to i32*, !dbg !5495
  store i32* %94, i32** %11, align 8, !dbg !5496
  br label %originalBB6

originalBB18alteredBB:                            ; preds = %originalBB18, %65
  %95 = load i32*, i32** %11, align 8, !dbg !5497
  br label %originalBB18
}

declare dso_local i32 @getgrouplist(i8*, i32, i32*, i32*) #3

; Function Attrs: nounwind
declare dso_local i32 @getgroups(i32, i32*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @setlocale_null_r(i32, i8* nonnull, i64) #4 !dbg !5502 {
  %4 = load i32, i32* @x.97
  %5 = load i32, i32* @y.98
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca i32, align 4
  %13 = alloca i8*, align 8
  %14 = alloca i64, align 8
  store i32 %0, i32* %12, align 4
  call void @llvm.dbg.declare(metadata i32* %12, metadata !5506, metadata !DIExpression()), !dbg !5507
  store i8* %1, i8** %13, align 8
  call void @llvm.dbg.declare(metadata i8** %13, metadata !5508, metadata !DIExpression()), !dbg !5509
  store i64 %2, i64* %14, align 8
  call void @llvm.dbg.declare(metadata i64* %14, metadata !5510, metadata !DIExpression()), !dbg !5511
  %15 = load i32, i32* %12, align 4, !dbg !5512
  %16 = load i8*, i8** %13, align 8, !dbg !5513
  %17 = load i64, i64* %14, align 8, !dbg !5514
  %18 = call i32 @setlocale_null_unlocked(i32 %15, i8* %16, i64 %17), !dbg !5515
  %19 = load i32, i32* @x.97
  %20 = load i32, i32* @y.98
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32 %18, !dbg !5516

originalBBalteredBB:                              ; preds = %originalBB, %3
  %27 = alloca i32, align 4
  %28 = alloca i8*, align 8
  %29 = alloca i64, align 8
  store i32 %0, i32* %27, align 4
  call void @llvm.dbg.declare(metadata i32* %27, metadata !5517, metadata !DIExpression()), !dbg !5507
  store i8* %1, i8** %28, align 8
  call void @llvm.dbg.declare(metadata i8** %28, metadata !5520, metadata !DIExpression()), !dbg !5509
  store i64 %2, i64* %29, align 8
  call void @llvm.dbg.declare(metadata i64* %29, metadata !5521, metadata !DIExpression()), !dbg !5511
  %30 = load i32, i32* %27, align 4, !dbg !5512
  %31 = load i8*, i8** %28, align 8, !dbg !5513
  %32 = load i64, i64* %29, align 8, !dbg !5514
  %33 = call i32 @setlocale_null_unlocked(i32 %30, i8* %31, i64 %32), !dbg !5515
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @setlocale_null_unlocked(i32, i8*, i64) #4 !dbg !5522 {
  %4 = load i32, i32* @x.99
  %5 = load i32, i32* @y.100
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i8*, align 8
  %15 = alloca i64, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i64, align 8
  store i32 %0, i32* %13, align 4
  call void @llvm.dbg.declare(metadata i32* %13, metadata !5523, metadata !DIExpression()), !dbg !5524
  store i8* %1, i8** %14, align 8
  call void @llvm.dbg.declare(metadata i8** %14, metadata !5525, metadata !DIExpression()), !dbg !5526
  store i64 %2, i64* %15, align 8
  call void @llvm.dbg.declare(metadata i64* %15, metadata !5527, metadata !DIExpression()), !dbg !5528
  call void @llvm.dbg.declare(metadata i8** %16, metadata !5529, metadata !DIExpression()), !dbg !5530
  %18 = load i32, i32* %13, align 4, !dbg !5531
  %19 = call i8* @setlocale_null_androidfix(i32 %18), !dbg !5532
  store i8* %19, i8** %16, align 8, !dbg !5530
  %20 = load i8*, i8** %16, align 8, !dbg !5533
  %21 = icmp eq i8* %20, null, !dbg !5535
  %22 = load i32, i32* @x.99
  %23 = load i32, i32* @y.100
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %21, label %30, label %85, !dbg !5536

30:                                               ; preds = %originalBBpart2
  %31 = load i32, i32* @x.99
  %32 = load i32, i32* @y.100
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %30, %originalBB1alteredBB
  %39 = load i64, i64* %15, align 8, !dbg !5537
  %40 = icmp ugt i64 %39, 0, !dbg !5540
  %41 = load i32, i32* @x.99
  %42 = load i32, i32* @y.100
  %43 = sub i32 %41, 1
  %44 = mul i32 %41, %43
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %46, %47
  br i1 %48, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %40, label %49, label %68, !dbg !5541

49:                                               ; preds = %originalBBpart24
  %50 = load i32, i32* @x.99
  %51 = load i32, i32* @y.100
  %52 = sub i32 %50, 1
  %53 = mul i32 %50, %52
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %51, 10
  %57 = or i1 %55, %56
  br i1 %57, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %49, %originalBB6alteredBB
  %58 = load i8*, i8** %14, align 8, !dbg !5542
  %59 = getelementptr inbounds i8, i8* %58, i64 0, !dbg !5542
  store i8 0, i8* %59, align 1, !dbg !5543
  %60 = load i32, i32* @x.99
  %61 = load i32, i32* @y.100
  %62 = sub i32 %60, 1
  %63 = mul i32 %60, %62
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %61, 10
  %67 = or i1 %65, %66
  br i1 %67, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %68, !dbg !5542

68:                                               ; preds = %originalBBpart28, %originalBBpart24
  %69 = load i32, i32* @x.99
  %70 = load i32, i32* @y.100
  %71 = sub i32 %69, 1
  %72 = mul i32 %69, %71
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %74, %75
  br i1 %76, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %68, %originalBB10alteredBB
  store i32 22, i32* %12, align 4, !dbg !5544
  %77 = load i32, i32* @x.99
  %78 = load i32, i32* @y.100
  %79 = sub i32 %77, 1
  %80 = mul i32 %77, %79
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %78, 10
  %84 = or i1 %82, %83
  br i1 %84, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %189, !dbg !5544

85:                                               ; preds = %originalBBpart2
  call void @llvm.dbg.declare(metadata i64* %17, metadata !5545, metadata !DIExpression()), !dbg !5547
  %86 = load i32, i32* @x.99
  %87 = load i32, i32* @y.100
  %88 = sub i32 %86, 1
  %89 = mul i32 %86, %88
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %87, 10
  %93 = or i1 %91, %92
  br i1 %93, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %85, %originalBB14alteredBB
  %94 = load i8*, i8** %16, align 8, !dbg !5548
  %95 = call i64 @strlen(i8* %94) #13, !dbg !5549
  store i64 %95, i64* %17, align 8, !dbg !5547
  %96 = load i64, i64* %17, align 8, !dbg !5550
  %97 = load i64, i64* %15, align 8, !dbg !5552
  %98 = icmp ult i64 %96, %97, !dbg !5553
  %99 = load i32, i32* @x.99
  %100 = load i32, i32* @y.100
  %101 = sub i32 %99, 1
  %102 = mul i32 %99, %101
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %100, 10
  %106 = or i1 %104, %105
  br i1 %106, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %98, label %107, label %128, !dbg !5554

107:                                              ; preds = %originalBBpart216
  %108 = load i32, i32* @x.99
  %109 = load i32, i32* @y.100
  %110 = sub i32 %108, 1
  %111 = mul i32 %108, %110
  %112 = urem i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %109, 10
  %115 = or i1 %113, %114
  br i1 %115, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %107, %originalBB18alteredBB
  %116 = load i8*, i8** %14, align 8, !dbg !5555
  %117 = load i8*, i8** %16, align 8, !dbg !5557
  %118 = load i64, i64* %17, align 8, !dbg !5558
  %119 = add i64 %118, 1, !dbg !5559
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %116, i8* align 1 %117, i64 %119, i1 false), !dbg !5560
  store i32 0, i32* %12, align 4, !dbg !5561
  %120 = load i32, i32* @x.99
  %121 = load i32, i32* @y.100
  %122 = sub i32 %120, 1
  %123 = mul i32 %120, %122
  %124 = urem i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = icmp slt i32 %121, 10
  %127 = or i1 %125, %126
  br i1 %127, label %originalBBpart231, label %originalBB18alteredBB

originalBBpart231:                                ; preds = %originalBB18
  br label %189, !dbg !5561

128:                                              ; preds = %originalBBpart216
  %129 = load i32, i32* @x.99
  %130 = load i32, i32* @y.100
  %131 = sub i32 %129, 1
  %132 = mul i32 %129, %131
  %133 = urem i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = icmp slt i32 %130, 10
  %136 = or i1 %134, %135
  br i1 %136, label %originalBB33, label %originalBB33alteredBB

originalBB33:                                     ; preds = %128, %originalBB33alteredBB
  %137 = load i64, i64* %15, align 8, !dbg !5562
  %138 = icmp ugt i64 %137, 0, !dbg !5565
  %139 = load i32, i32* @x.99
  %140 = load i32, i32* @y.100
  %141 = sub i32 %139, 1
  %142 = mul i32 %139, %141
  %143 = urem i32 %142, 2
  %144 = icmp eq i32 %143, 0
  %145 = icmp slt i32 %140, 10
  %146 = or i1 %144, %145
  br i1 %146, label %originalBBpart235, label %originalBB33alteredBB

originalBBpart235:                                ; preds = %originalBB33
  br i1 %138, label %147, label %172, !dbg !5566

147:                                              ; preds = %originalBBpart235
  %148 = load i32, i32* @x.99
  %149 = load i32, i32* @y.100
  %150 = sub i32 %148, 1
  %151 = mul i32 %148, %150
  %152 = urem i32 %151, 2
  %153 = icmp eq i32 %152, 0
  %154 = icmp slt i32 %149, 10
  %155 = or i1 %153, %154
  br i1 %155, label %originalBB37, label %originalBB37alteredBB

originalBB37:                                     ; preds = %147, %originalBB37alteredBB
  %156 = load i8*, i8** %14, align 8, !dbg !5567
  %157 = load i8*, i8** %16, align 8, !dbg !5569
  %158 = load i64, i64* %15, align 8, !dbg !5570
  %159 = sub i64 %158, 1, !dbg !5571
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %156, i8* align 1 %157, i64 %159, i1 false), !dbg !5572
  %160 = load i8*, i8** %14, align 8, !dbg !5573
  %161 = load i64, i64* %15, align 8, !dbg !5574
  %162 = sub i64 %161, 1, !dbg !5575
  %163 = getelementptr inbounds i8, i8* %160, i64 %162, !dbg !5573
  store i8 0, i8* %163, align 1, !dbg !5576
  %164 = load i32, i32* @x.99
  %165 = load i32, i32* @y.100
  %166 = sub i32 %164, 1
  %167 = mul i32 %164, %166
  %168 = urem i32 %167, 2
  %169 = icmp eq i32 %168, 0
  %170 = icmp slt i32 %165, 10
  %171 = or i1 %169, %170
  br i1 %171, label %originalBBpart252, label %originalBB37alteredBB

originalBBpart252:                                ; preds = %originalBB37
  br label %172, !dbg !5577

172:                                              ; preds = %originalBBpart252, %originalBBpart235
  %173 = load i32, i32* @x.99
  %174 = load i32, i32* @y.100
  %175 = sub i32 %173, 1
  %176 = mul i32 %173, %175
  %177 = urem i32 %176, 2
  %178 = icmp eq i32 %177, 0
  %179 = icmp slt i32 %174, 10
  %180 = or i1 %178, %179
  br i1 %180, label %originalBB54, label %originalBB54alteredBB

originalBB54:                                     ; preds = %172, %originalBB54alteredBB
  store i32 34, i32* %12, align 4, !dbg !5578
  %181 = load i32, i32* @x.99
  %182 = load i32, i32* @y.100
  %183 = sub i32 %181, 1
  %184 = mul i32 %181, %183
  %185 = urem i32 %184, 2
  %186 = icmp eq i32 %185, 0
  %187 = icmp slt i32 %182, 10
  %188 = or i1 %186, %187
  br i1 %188, label %originalBBpart256, label %originalBB54alteredBB

originalBBpart256:                                ; preds = %originalBB54
  br label %189, !dbg !5578

189:                                              ; preds = %originalBBpart256, %originalBBpart231, %originalBBpart212
  %190 = load i32, i32* @x.99
  %191 = load i32, i32* @y.100
  %192 = sub i32 %190, 1
  %193 = mul i32 %190, %192
  %194 = urem i32 %193, 2
  %195 = icmp eq i32 %194, 0
  %196 = icmp slt i32 %191, 10
  %197 = or i1 %195, %196
  br i1 %197, label %originalBB58, label %originalBB58alteredBB

originalBB58:                                     ; preds = %189, %originalBB58alteredBB
  %198 = load i32, i32* %12, align 4, !dbg !5579
  %199 = load i32, i32* @x.99
  %200 = load i32, i32* @y.100
  %201 = sub i32 %199, 1
  %202 = mul i32 %199, %201
  %203 = urem i32 %202, 2
  %204 = icmp eq i32 %203, 0
  %205 = icmp slt i32 %200, 10
  %206 = or i1 %204, %205
  br i1 %206, label %originalBBpart260, label %originalBB58alteredBB

originalBBpart260:                                ; preds = %originalBB58
  ret i32 %198, !dbg !5579

originalBBalteredBB:                              ; preds = %originalBB, %3
  %207 = alloca i32, align 4
  %208 = alloca i32, align 4
  %209 = alloca i8*, align 8
  %210 = alloca i64, align 8
  %211 = alloca i8*, align 8
  %212 = alloca i64, align 8
  store i32 %0, i32* %208, align 4
  call void @llvm.dbg.declare(metadata i32* %208, metadata !5580, metadata !DIExpression()), !dbg !5524
  store i8* %1, i8** %209, align 8
  call void @llvm.dbg.declare(metadata i8** %209, metadata !5583, metadata !DIExpression()), !dbg !5526
  store i64 %2, i64* %210, align 8
  call void @llvm.dbg.declare(metadata i64* %210, metadata !5584, metadata !DIExpression()), !dbg !5528
  call void @llvm.dbg.declare(metadata i8** %211, metadata !5585, metadata !DIExpression()), !dbg !5530
  %213 = load i32, i32* %208, align 4, !dbg !5531
  %214 = call i8* @setlocale_null_androidfix(i32 %213), !dbg !5532
  store i8* %214, i8** %211, align 8, !dbg !5530
  %215 = load i8*, i8** %211, align 8, !dbg !5533
  %216 = icmp eq i8* %215, null, !dbg !5535
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %30
  %217 = load i64, i64* %15, align 8, !dbg !5537
  %218 = icmp ugt i64 %217, 0, !dbg !5540
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %49
  %219 = load i8*, i8** %14, align 8, !dbg !5542
  %220 = getelementptr inbounds i8, i8* %219, i64 0, !dbg !5542
  store i8 0, i8* %220, align 1, !dbg !5543
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %68
  store i32 22, i32* %12, align 4, !dbg !5544
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %85
  %221 = load i8*, i8** %16, align 8, !dbg !5548
  %222 = call i64 @strlen(i8* %221) #13, !dbg !5549
  store i64 %222, i64* %17, align 8, !dbg !5547
  %223 = load i64, i64* %17, align 8, !dbg !5550
  %224 = load i64, i64* %15, align 8, !dbg !5552
  %225 = icmp ult i64 %223, %224, !dbg !5553
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %107
  %226 = load i8*, i8** %14, align 8, !dbg !5555
  %227 = load i8*, i8** %16, align 8, !dbg !5557
  %228 = load i64, i64* %17, align 8, !dbg !5558
  %_ = shl i64 %228, 1
  %_19 = sub i64 %228, 1
  %gen = mul i64 %_19, 1
  %_20 = shl i64 %228, 1
  %_21 = sub i64 %228, 1
  %gen22 = mul i64 %_21, 1
  %_23 = sub i64 0, %228
  %gen24 = add i64 %_23, 1
  %_25 = sub i64 0, %228
  %gen26 = add i64 %_25, 1
  %_27 = sub i64 0, %228
  %gen28 = add i64 %_27, 1
  %229 = add i64 %228, 1, !dbg !5559
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %226, i8* align 1 %227, i64 %229, i1 false), !dbg !5560
  store i32 0, i32* %12, align 4, !dbg !5561
  br label %originalBB18

originalBB33alteredBB:                            ; preds = %originalBB33, %128
  %230 = load i64, i64* %15, align 8, !dbg !5562
  %231 = icmp ugt i64 %230, 0, !dbg !5565
  br label %originalBB33

originalBB37alteredBB:                            ; preds = %originalBB37, %147
  %232 = load i8*, i8** %14, align 8, !dbg !5567
  %233 = load i8*, i8** %16, align 8, !dbg !5569
  %234 = load i64, i64* %15, align 8, !dbg !5570
  %_38 = sub i64 0, %234
  %gen39 = add i64 %_38, 1
  %_40 = sub i64 0, %234
  %gen41 = add i64 %_40, 1
  %_42 = sub i64 0, %234
  %gen43 = add i64 %_42, 1
  %_44 = shl i64 %234, 1
  %235 = sub i64 %234, 1, !dbg !5571
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %232, i8* align 1 %233, i64 %235, i1 false), !dbg !5572
  %236 = load i8*, i8** %14, align 8, !dbg !5573
  %237 = load i64, i64* %15, align 8, !dbg !5574
  %_45 = sub i64 0, %237
  %gen46 = add i64 %_45, 1
  %_47 = sub i64 %237, 1
  %gen48 = mul i64 %_47, 1
  %_49 = sub i64 %237, 1
  %gen50 = mul i64 %_49, 1
  %238 = sub i64 %237, 1, !dbg !5575
  %239 = getelementptr inbounds i8, i8* %236, i64 %238, !dbg !5573
  store i8 0, i8* %239, align 1, !dbg !5576
  br label %originalBB37

originalBB54alteredBB:                            ; preds = %originalBB54, %172
  store i32 34, i32* %12, align 4, !dbg !5578
  br label %originalBB54

originalBB58alteredBB:                            ; preds = %originalBB58, %189
  %240 = load i32, i32* %12, align 4, !dbg !5579
  br label %originalBB58
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @setlocale_null_androidfix(i32) #4 !dbg !5586 {
  %2 = load i32, i32* @x.101
  %3 = load i32, i32* @y.102
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i32, align 4
  %11 = alloca i8*, align 8
  store i32 %0, i32* %10, align 4
  call void @llvm.dbg.declare(metadata i32* %10, metadata !5589, metadata !DIExpression()), !dbg !5590
  call void @llvm.dbg.declare(metadata i8** %11, metadata !5591, metadata !DIExpression()), !dbg !5592
  %12 = load i32, i32* %10, align 4, !dbg !5593
  %13 = call i8* @setlocale(i32 %12, i8* null) #10, !dbg !5594
  store i8* %13, i8** %11, align 8, !dbg !5592
  %14 = load i8*, i8** %11, align 8, !dbg !5595
  %15 = load i32, i32* @x.101
  %16 = load i32, i32* @y.102
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i8* %14, !dbg !5596

originalBBalteredBB:                              ; preds = %originalBB, %1
  %23 = alloca i32, align 4
  %24 = alloca i8*, align 8
  store i32 %0, i32* %23, align 4
  call void @llvm.dbg.declare(metadata i32* %23, metadata !5597, metadata !DIExpression()), !dbg !5590
  call void @llvm.dbg.declare(metadata i8** %24, metadata !5600, metadata !DIExpression()), !dbg !5592
  %25 = load i32, i32* %23, align 4, !dbg !5593
  %26 = call i8* @setlocale(i32 %25, i8* null) #10, !dbg !5594
  store i8* %26, i8** %24, align 8, !dbg !5592
  %27 = load i8*, i8** %24, align 8, !dbg !5595
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rpl_fclose(%struct._IO_FILE* nonnull) #4 !dbg !5601 {
  %2 = load i32, i32* @x.103
  %3 = load i32, i32* @y.104
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i32, align 4
  %11 = alloca %struct._IO_FILE*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  store %struct._IO_FILE* %0, %struct._IO_FILE** %11, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %11, metadata !5639, metadata !DIExpression()), !dbg !5640
  call void @llvm.dbg.declare(metadata i32* %12, metadata !5641, metadata !DIExpression()), !dbg !5642
  store i32 0, i32* %12, align 4, !dbg !5642
  call void @llvm.dbg.declare(metadata i32* %13, metadata !5643, metadata !DIExpression()), !dbg !5644
  call void @llvm.dbg.declare(metadata i32* %14, metadata !5645, metadata !DIExpression()), !dbg !5646
  store i32 0, i32* %14, align 4, !dbg !5646
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !5647
  %16 = call i32 @fileno(%struct._IO_FILE* %15) #10, !dbg !5648
  store i32 %16, i32* %13, align 4, !dbg !5649
  %17 = load i32, i32* %13, align 4, !dbg !5650
  %18 = icmp slt i32 %17, 0, !dbg !5652
  %19 = load i32, i32* @x.103
  %20 = load i32, i32* @y.104
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %18, label %27, label %46, !dbg !5653

27:                                               ; preds = %originalBBpart2
  %28 = load i32, i32* @x.103
  %29 = load i32, i32* @y.104
  %30 = sub i32 %28, 1
  %31 = mul i32 %28, %30
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %33, %34
  br i1 %35, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %27, %originalBB1alteredBB
  %36 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !5654
  %37 = call i32 @fclose(%struct._IO_FILE* %36), !dbg !5655
  store i32 %37, i32* %10, align 4, !dbg !5656
  %38 = load i32, i32* @x.103
  %39 = load i32, i32* @y.104
  %40 = sub i32 %38, 1
  %41 = mul i32 %38, %40
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %43, %44
  br i1 %45, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %184, !dbg !5656

46:                                               ; preds = %originalBBpart2
  %47 = load i32, i32* @x.103
  %48 = load i32, i32* @y.104
  %49 = sub i32 %47, 1
  %50 = mul i32 %47, %49
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %48, 10
  %54 = or i1 %52, %53
  br i1 %54, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %46, %originalBB6alteredBB
  %55 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !5657
  %56 = call i32 @__freading(%struct._IO_FILE* %55) #10, !dbg !5657
  %57 = icmp ne i32 %56, 0, !dbg !5657
  %58 = load i32, i32* @x.103
  %59 = load i32, i32* @y.104
  %60 = sub i32 %58, 1
  %61 = mul i32 %58, %60
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %59, 10
  %65 = or i1 %63, %64
  br i1 %65, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %57, label %66, label %87, !dbg !5659

66:                                               ; preds = %originalBBpart28
  %67 = load i32, i32* @x.103
  %68 = load i32, i32* @y.104
  %69 = sub i32 %67, 1
  %70 = mul i32 %67, %69
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %68, 10
  %74 = or i1 %72, %73
  br i1 %74, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %66, %originalBB10alteredBB
  %75 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !5660
  %76 = call i32 @fileno(%struct._IO_FILE* %75) #10, !dbg !5661
  %77 = call i64 @lseek(i32 %76, i64 0, i32 1) #10, !dbg !5662
  %78 = icmp ne i64 %77, -1, !dbg !5663
  %79 = load i32, i32* @x.103
  %80 = load i32, i32* @y.104
  %81 = sub i32 %79, 1
  %82 = mul i32 %79, %81
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %80, 10
  %86 = or i1 %84, %85
  br i1 %86, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %78, label %87, label %126, !dbg !5664

87:                                               ; preds = %originalBBpart212, %originalBBpart28
  %88 = load i32, i32* @x.103
  %89 = load i32, i32* @y.104
  %90 = sub i32 %88, 1
  %91 = mul i32 %88, %90
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %89, 10
  %95 = or i1 %93, %94
  br i1 %95, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %87, %originalBB14alteredBB
  %96 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !5665
  %97 = call i32 @rpl_fflush(%struct._IO_FILE* %96), !dbg !5666
  %98 = icmp ne i32 %97, 0, !dbg !5666
  %99 = load i32, i32* @x.103
  %100 = load i32, i32* @y.104
  %101 = sub i32 %99, 1
  %102 = mul i32 %99, %101
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %100, 10
  %106 = or i1 %104, %105
  br i1 %106, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %98, label %107, label %126, !dbg !5667

107:                                              ; preds = %originalBBpart216
  %108 = load i32, i32* @x.103
  %109 = load i32, i32* @y.104
  %110 = sub i32 %108, 1
  %111 = mul i32 %108, %110
  %112 = urem i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %109, 10
  %115 = or i1 %113, %114
  br i1 %115, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %107, %originalBB18alteredBB
  %116 = call i32* @__errno_location() #15, !dbg !5668
  %117 = load i32, i32* %116, align 4, !dbg !5668
  store i32 %117, i32* %12, align 4, !dbg !5669
  %118 = load i32, i32* @x.103
  %119 = load i32, i32* @y.104
  %120 = sub i32 %118, 1
  %121 = mul i32 %118, %120
  %122 = urem i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = icmp slt i32 %119, 10
  %125 = or i1 %123, %124
  br i1 %125, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %126, !dbg !5670

126:                                              ; preds = %originalBBpart220, %originalBBpart216, %originalBBpart212
  %127 = load i32, i32* @x.103
  %128 = load i32, i32* @y.104
  %129 = sub i32 %127, 1
  %130 = mul i32 %127, %129
  %131 = urem i32 %130, 2
  %132 = icmp eq i32 %131, 0
  %133 = icmp slt i32 %128, 10
  %134 = or i1 %132, %133
  br i1 %134, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %126, %originalBB22alteredBB
  %135 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !5671
  %136 = call i32 @fclose(%struct._IO_FILE* %135), !dbg !5672
  store i32 %136, i32* %14, align 4, !dbg !5673
  %137 = load i32, i32* %12, align 4, !dbg !5674
  %138 = icmp ne i32 %137, 0, !dbg !5676
  %139 = load i32, i32* @x.103
  %140 = load i32, i32* @y.104
  %141 = sub i32 %139, 1
  %142 = mul i32 %139, %141
  %143 = urem i32 %142, 2
  %144 = icmp eq i32 %143, 0
  %145 = icmp slt i32 %140, 10
  %146 = or i1 %144, %145
  br i1 %146, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br i1 %138, label %147, label %166, !dbg !5677

147:                                              ; preds = %originalBBpart224
  %148 = load i32, i32* @x.103
  %149 = load i32, i32* @y.104
  %150 = sub i32 %148, 1
  %151 = mul i32 %148, %150
  %152 = urem i32 %151, 2
  %153 = icmp eq i32 %152, 0
  %154 = icmp slt i32 %149, 10
  %155 = or i1 %153, %154
  br i1 %155, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %147, %originalBB26alteredBB
  %156 = load i32, i32* %12, align 4, !dbg !5678
  %157 = call i32* @__errno_location() #15, !dbg !5680
  store i32 %156, i32* %157, align 4, !dbg !5681
  store i32 -1, i32* %14, align 4, !dbg !5682
  %158 = load i32, i32* @x.103
  %159 = load i32, i32* @y.104
  %160 = sub i32 %158, 1
  %161 = mul i32 %158, %160
  %162 = urem i32 %161, 2
  %163 = icmp eq i32 %162, 0
  %164 = icmp slt i32 %159, 10
  %165 = or i1 %163, %164
  br i1 %165, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br label %166, !dbg !5683

166:                                              ; preds = %originalBBpart228, %originalBBpart224
  %167 = load i32, i32* @x.103
  %168 = load i32, i32* @y.104
  %169 = sub i32 %167, 1
  %170 = mul i32 %167, %169
  %171 = urem i32 %170, 2
  %172 = icmp eq i32 %171, 0
  %173 = icmp slt i32 %168, 10
  %174 = or i1 %172, %173
  br i1 %174, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %166, %originalBB30alteredBB
  %175 = load i32, i32* %14, align 4, !dbg !5684
  store i32 %175, i32* %10, align 4, !dbg !5685
  %176 = load i32, i32* @x.103
  %177 = load i32, i32* @y.104
  %178 = sub i32 %176, 1
  %179 = mul i32 %176, %178
  %180 = urem i32 %179, 2
  %181 = icmp eq i32 %180, 0
  %182 = icmp slt i32 %177, 10
  %183 = or i1 %181, %182
  br i1 %183, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br label %184, !dbg !5685

184:                                              ; preds = %originalBBpart232, %originalBBpart24
  %185 = load i32, i32* @x.103
  %186 = load i32, i32* @y.104
  %187 = sub i32 %185, 1
  %188 = mul i32 %185, %187
  %189 = urem i32 %188, 2
  %190 = icmp eq i32 %189, 0
  %191 = icmp slt i32 %186, 10
  %192 = or i1 %190, %191
  br i1 %192, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %184, %originalBB34alteredBB
  %193 = load i32, i32* %10, align 4, !dbg !5686
  %194 = load i32, i32* @x.103
  %195 = load i32, i32* @y.104
  %196 = sub i32 %194, 1
  %197 = mul i32 %194, %196
  %198 = urem i32 %197, 2
  %199 = icmp eq i32 %198, 0
  %200 = icmp slt i32 %195, 10
  %201 = or i1 %199, %200
  br i1 %201, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  ret i32 %193, !dbg !5686

originalBBalteredBB:                              ; preds = %originalBB, %1
  %202 = alloca i32, align 4
  %203 = alloca %struct._IO_FILE*, align 8
  %204 = alloca i32, align 4
  %205 = alloca i32, align 4
  %206 = alloca i32, align 4
  store %struct._IO_FILE* %0, %struct._IO_FILE** %203, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %203, metadata !5687, metadata !DIExpression()), !dbg !5640
  call void @llvm.dbg.declare(metadata i32* %204, metadata !5726, metadata !DIExpression()), !dbg !5642
  store i32 0, i32* %204, align 4, !dbg !5642
  call void @llvm.dbg.declare(metadata i32* %205, metadata !5727, metadata !DIExpression()), !dbg !5644
  call void @llvm.dbg.declare(metadata i32* %206, metadata !5728, metadata !DIExpression()), !dbg !5646
  store i32 0, i32* %206, align 4, !dbg !5646
  %207 = load %struct._IO_FILE*, %struct._IO_FILE** %203, align 8, !dbg !5647
  %208 = call i32 @fileno(%struct._IO_FILE* %207) #10, !dbg !5648
  store i32 %208, i32* %205, align 4, !dbg !5649
  %209 = load i32, i32* %205, align 4, !dbg !5650
  %210 = icmp slt i32 %209, 0, !dbg !5652
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %27
  %211 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !5654
  %212 = call i32 @fclose(%struct._IO_FILE* %211), !dbg !5655
  store i32 %212, i32* %10, align 4, !dbg !5656
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %46
  %213 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !5657
  %214 = call i32 @__freading(%struct._IO_FILE* %213) #10, !dbg !5657
  %215 = icmp ne i32 %214, 0, !dbg !5657
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %66
  %216 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !5660
  %217 = call i32 @fileno(%struct._IO_FILE* %216) #10, !dbg !5661
  %218 = call i64 @lseek(i32 %217, i64 0, i32 1) #10, !dbg !5662
  %219 = icmp ne i64 %218, -1, !dbg !5663
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %87
  %220 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !5665
  %221 = call i32 @rpl_fflush(%struct._IO_FILE* %220), !dbg !5666
  %222 = icmp ne i32 %221, 0, !dbg !5666
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %107
  %223 = call i32* @__errno_location() #15, !dbg !5668
  %224 = load i32, i32* %223, align 4, !dbg !5668
  store i32 %224, i32* %12, align 4, !dbg !5669
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %126
  %225 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !5671
  %226 = call i32 @fclose(%struct._IO_FILE* %225), !dbg !5672
  store i32 %226, i32* %14, align 4, !dbg !5673
  %227 = load i32, i32* %12, align 4, !dbg !5674
  %228 = icmp ne i32 %227, 0, !dbg !5676
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %147
  %229 = load i32, i32* %12, align 4, !dbg !5678
  %230 = call i32* @__errno_location() #15, !dbg !5680
  store i32 %229, i32* %230, align 4, !dbg !5681
  store i32 -1, i32* %14, align 4, !dbg !5682
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %166
  %231 = load i32, i32* %14, align 4, !dbg !5684
  store i32 %231, i32* %10, align 4, !dbg !5685
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %184
  %232 = load i32, i32* %10, align 4, !dbg !5686
  br label %originalBB34
}

; Function Attrs: nounwind
declare dso_local i32 @fileno(%struct._IO_FILE*) #2

declare dso_local i32 @fclose(%struct._IO_FILE*) #3

; Function Attrs: nounwind
declare dso_local i32 @__freading(%struct._IO_FILE*) #2

; Function Attrs: nounwind
declare dso_local i64 @lseek(i32, i64, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rpl_fflush(%struct._IO_FILE*) #4 !dbg !5729 {
  %2 = load i32, i32* @x.105
  %3 = load i32, i32* @y.106
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i32, align 4
  %11 = alloca %struct._IO_FILE*, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %11, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %11, metadata !5767, metadata !DIExpression()), !dbg !5768
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !5769
  %13 = icmp eq %struct._IO_FILE* %12, null, !dbg !5771
  %14 = load i32, i32* @x.105
  %15 = load i32, i32* @y.106
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %13, label %42, label %22, !dbg !5772

22:                                               ; preds = %originalBBpart2
  %23 = load i32, i32* @x.105
  %24 = load i32, i32* @y.106
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %22, %originalBB1alteredBB
  %31 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !5773
  %32 = call i32 @__freading(%struct._IO_FILE* %31) #10, !dbg !5773
  %33 = icmp ne i32 %32, 0, !dbg !5773
  %34 = load i32, i32* @x.105
  %35 = load i32, i32* @y.106
  %36 = sub i32 %34, 1
  %37 = mul i32 %34, %36
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %39, %40
  br i1 %41, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %33, label %61, label %42, !dbg !5774

42:                                               ; preds = %originalBBpart24, %originalBBpart2
  %43 = load i32, i32* @x.105
  %44 = load i32, i32* @y.106
  %45 = sub i32 %43, 1
  %46 = mul i32 %43, %45
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %48, %49
  br i1 %50, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %42, %originalBB6alteredBB
  %51 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !5775
  %52 = call i32 @fflush(%struct._IO_FILE* %51), !dbg !5776
  store i32 %52, i32* %10, align 4, !dbg !5777
  %53 = load i32, i32* @x.105
  %54 = load i32, i32* @y.106
  %55 = sub i32 %53, 1
  %56 = mul i32 %53, %55
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %54, 10
  %60 = or i1 %58, %59
  br i1 %60, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %81, !dbg !5777

61:                                               ; preds = %originalBBpart24
  %62 = load i32, i32* @x.105
  %63 = load i32, i32* @y.106
  %64 = sub i32 %62, 1
  %65 = mul i32 %62, %64
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %63, 10
  %69 = or i1 %67, %68
  br i1 %69, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %61, %originalBB10alteredBB
  %70 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !5778
  call void @clear_ungetc_buffer_preserving_position(%struct._IO_FILE* %70), !dbg !5779
  %71 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !5780
  %72 = call i32 @fflush(%struct._IO_FILE* %71), !dbg !5781
  store i32 %72, i32* %10, align 4, !dbg !5782
  %73 = load i32, i32* @x.105
  %74 = load i32, i32* @y.106
  %75 = sub i32 %73, 1
  %76 = mul i32 %73, %75
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %74, 10
  %80 = or i1 %78, %79
  br i1 %80, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %81, !dbg !5782

81:                                               ; preds = %originalBBpart212, %originalBBpart28
  %82 = load i32, i32* @x.105
  %83 = load i32, i32* @y.106
  %84 = sub i32 %82, 1
  %85 = mul i32 %82, %84
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %83, 10
  %89 = or i1 %87, %88
  br i1 %89, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %81, %originalBB14alteredBB
  %90 = load i32, i32* %10, align 4, !dbg !5783
  %91 = load i32, i32* @x.105
  %92 = load i32, i32* @y.106
  %93 = sub i32 %91, 1
  %94 = mul i32 %91, %93
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %92, 10
  %98 = or i1 %96, %97
  br i1 %98, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  ret i32 %90, !dbg !5783

originalBBalteredBB:                              ; preds = %originalBB, %1
  %99 = alloca i32, align 4
  %100 = alloca %struct._IO_FILE*, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %100, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %100, metadata !5784, metadata !DIExpression()), !dbg !5768
  %101 = load %struct._IO_FILE*, %struct._IO_FILE** %100, align 8, !dbg !5769
  %102 = icmp eq %struct._IO_FILE* %101, null, !dbg !5771
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %22
  %103 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !5773
  %104 = call i32 @__freading(%struct._IO_FILE* %103) #10, !dbg !5773
  %105 = icmp ne i32 %104, 0, !dbg !5773
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %42
  %106 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !5775
  %107 = call i32 @fflush(%struct._IO_FILE* %106), !dbg !5776
  store i32 %107, i32* %10, align 4, !dbg !5777
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %61
  %108 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !5778
  call void @clear_ungetc_buffer_preserving_position(%struct._IO_FILE* %108), !dbg !5779
  %109 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !5780
  %110 = call i32 @fflush(%struct._IO_FILE* %109), !dbg !5781
  store i32 %110, i32* %10, align 4, !dbg !5782
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %81
  %111 = load i32, i32* %10, align 4, !dbg !5783
  br label %originalBB14
}

declare dso_local i32 @fflush(%struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @clear_ungetc_buffer_preserving_position(%struct._IO_FILE*) #4 !dbg !5823 {
  %2 = load i32, i32* @x.107
  %3 = load i32, i32* @y.108
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %struct._IO_FILE*, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %10, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %10, metadata !5826, metadata !DIExpression()), !dbg !5827
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %10, align 8, !dbg !5828
  %12 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %11, i32 0, i32 0, !dbg !5830
  %13 = load i32, i32* %12, align 8, !dbg !5830
  %14 = and i32 %13, 256, !dbg !5831
  %15 = icmp ne i32 %14, 0, !dbg !5831
  %16 = load i32, i32* @x.107
  %17 = load i32, i32* @y.108
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %15, label %24, label %43, !dbg !5832

24:                                               ; preds = %originalBBpart2
  %25 = load i32, i32* @x.107
  %26 = load i32, i32* @y.108
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBB5, label %originalBB5alteredBB

originalBB5:                                      ; preds = %24, %originalBB5alteredBB
  %33 = load %struct._IO_FILE*, %struct._IO_FILE** %10, align 8, !dbg !5833
  %34 = call i32 @rpl_fseeko(%struct._IO_FILE* %33, i64 0, i32 1), !dbg !5834
  %35 = load i32, i32* @x.107
  %36 = load i32, i32* @y.108
  %37 = sub i32 %35, 1
  %38 = mul i32 %35, %37
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %40, %41
  br i1 %42, label %originalBBpart27, label %originalBB5alteredBB

originalBBpart27:                                 ; preds = %originalBB5
  br label %43, !dbg !5834

43:                                               ; preds = %originalBBpart27, %originalBBpart2
  %44 = load i32, i32* @x.107
  %45 = load i32, i32* @y.108
  %46 = sub i32 %44, 1
  %47 = mul i32 %44, %46
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %45, 10
  %51 = or i1 %49, %50
  br i1 %51, label %originalBB9, label %originalBB9alteredBB

originalBB9:                                      ; preds = %43, %originalBB9alteredBB
  %52 = load i32, i32* @x.107
  %53 = load i32, i32* @y.108
  %54 = sub i32 %52, 1
  %55 = mul i32 %52, %54
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %53, 10
  %59 = or i1 %57, %58
  br i1 %59, label %originalBBpart211, label %originalBB9alteredBB

originalBBpart211:                                ; preds = %originalBB9
  ret void, !dbg !5835

originalBBalteredBB:                              ; preds = %originalBB, %1
  %60 = alloca %struct._IO_FILE*, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %60, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %60, metadata !5836, metadata !DIExpression()), !dbg !5827
  %61 = load %struct._IO_FILE*, %struct._IO_FILE** %60, align 8, !dbg !5828
  %62 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %61, i32 0, i32 0, !dbg !5830
  %63 = load i32, i32* %62, align 8, !dbg !5830
  %_ = sub i32 0, %63
  %gen = add i32 %_, 256
  %_1 = shl i32 %63, 256
  %_2 = shl i32 %63, 256
  %_3 = sub i32 %63, 256
  %gen4 = mul i32 %_3, 256
  %64 = and i32 %63, 256, !dbg !5831
  %65 = icmp ne i32 %64, 0, !dbg !5831
  br label %originalBB

originalBB5alteredBB:                             ; preds = %originalBB5, %24
  %66 = load %struct._IO_FILE*, %struct._IO_FILE** %10, align 8, !dbg !5833
  %67 = call i32 @rpl_fseeko(%struct._IO_FILE* %66, i64 0, i32 1), !dbg !5834
  br label %originalBB5

originalBB9alteredBB:                             ; preds = %originalBB9, %43
  br label %originalBB9
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rpl_fseeko(%struct._IO_FILE* nonnull, i64, i32) #4 !dbg !5875 {
  %4 = load i32, i32* @x.109
  %5 = load i32, i32* @y.110
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca i32, align 4
  %13 = alloca %struct._IO_FILE*, align 8
  %14 = alloca i64, align 8
  %15 = alloca i32, align 4
  %16 = alloca i64, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %13, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %13, metadata !5914, metadata !DIExpression()), !dbg !5915
  store i64 %1, i64* %14, align 8
  call void @llvm.dbg.declare(metadata i64* %14, metadata !5916, metadata !DIExpression()), !dbg !5917
  store i32 %2, i32* %15, align 4
  call void @llvm.dbg.declare(metadata i32* %15, metadata !5918, metadata !DIExpression()), !dbg !5919
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !5920
  %18 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %17, i32 0, i32 2, !dbg !5922
  %19 = load i8*, i8** %18, align 8, !dbg !5922
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !5923
  %21 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %20, i32 0, i32 1, !dbg !5924
  %22 = load i8*, i8** %21, align 8, !dbg !5924
  %23 = icmp eq i8* %19, %22, !dbg !5925
  %24 = load i32, i32* @x.109
  %25 = load i32, i32* @y.110
  %26 = sub i32 %24, 1
  %27 = mul i32 %24, %26
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %29, %30
  br i1 %31, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %23, label %32, label %142, !dbg !5926

32:                                               ; preds = %originalBBpart2
  %33 = load i32, i32* @x.109
  %34 = load i32, i32* @y.110
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %32, %originalBB1alteredBB
  %41 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !5927
  %42 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %41, i32 0, i32 5, !dbg !5928
  %43 = load i8*, i8** %42, align 8, !dbg !5928
  %44 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !5929
  %45 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %44, i32 0, i32 4, !dbg !5930
  %46 = load i8*, i8** %45, align 8, !dbg !5930
  %47 = icmp eq i8* %43, %46, !dbg !5931
  %48 = load i32, i32* @x.109
  %49 = load i32, i32* @y.110
  %50 = sub i32 %48, 1
  %51 = mul i32 %48, %50
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %53, %54
  br i1 %55, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %47, label %56, label %142, !dbg !5932

56:                                               ; preds = %originalBBpart24
  %57 = load i32, i32* @x.109
  %58 = load i32, i32* @y.110
  %59 = sub i32 %57, 1
  %60 = mul i32 %57, %59
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %58, 10
  %64 = or i1 %62, %63
  br i1 %64, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %56, %originalBB6alteredBB
  %65 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !5933
  %66 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %65, i32 0, i32 9, !dbg !5934
  %67 = load i8*, i8** %66, align 8, !dbg !5934
  %68 = icmp eq i8* %67, null, !dbg !5935
  %69 = load i32, i32* @x.109
  %70 = load i32, i32* @y.110
  %71 = sub i32 %69, 1
  %72 = mul i32 %69, %71
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %74, %75
  br i1 %76, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %68, label %77, label %142, !dbg !5936

77:                                               ; preds = %originalBBpart28
  call void @llvm.dbg.declare(metadata i64* %16, metadata !5937, metadata !DIExpression()), !dbg !5939
  %78 = load i32, i32* @x.109
  %79 = load i32, i32* @y.110
  %80 = sub i32 %78, 1
  %81 = mul i32 %78, %80
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %79, 10
  %85 = or i1 %83, %84
  br i1 %85, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %77, %originalBB10alteredBB
  %86 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !5940
  %87 = call i32 @fileno(%struct._IO_FILE* %86) #10, !dbg !5941
  %88 = load i64, i64* %14, align 8, !dbg !5942
  %89 = load i32, i32* %15, align 4, !dbg !5943
  %90 = call i64 @lseek(i32 %87, i64 %88, i32 %89) #10, !dbg !5944
  store i64 %90, i64* %16, align 8, !dbg !5939
  %91 = load i64, i64* %16, align 8, !dbg !5945
  %92 = icmp eq i64 %91, -1, !dbg !5947
  %93 = load i32, i32* @x.109
  %94 = load i32, i32* @y.110
  %95 = sub i32 %93, 1
  %96 = mul i32 %93, %95
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %94, 10
  %100 = or i1 %98, %99
  br i1 %100, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %92, label %101, label %118, !dbg !5948

101:                                              ; preds = %originalBBpart212
  %102 = load i32, i32* @x.109
  %103 = load i32, i32* @y.110
  %104 = sub i32 %102, 1
  %105 = mul i32 %102, %104
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %103, 10
  %109 = or i1 %107, %108
  br i1 %109, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %101, %originalBB14alteredBB
  store i32 -1, i32* %12, align 4, !dbg !5949
  %110 = load i32, i32* @x.109
  %111 = load i32, i32* @y.110
  %112 = sub i32 %110, 1
  %113 = mul i32 %110, %112
  %114 = urem i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %111, 10
  %117 = or i1 %115, %116
  br i1 %117, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %163, !dbg !5949

118:                                              ; preds = %originalBBpart212
  %119 = load i32, i32* @x.109
  %120 = load i32, i32* @y.110
  %121 = sub i32 %119, 1
  %122 = mul i32 %119, %121
  %123 = urem i32 %122, 2
  %124 = icmp eq i32 %123, 0
  %125 = icmp slt i32 %120, 10
  %126 = or i1 %124, %125
  br i1 %126, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %118, %originalBB18alteredBB
  %127 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !5951
  %128 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %127, i32 0, i32 0, !dbg !5952
  %129 = load i32, i32* %128, align 8, !dbg !5953
  %130 = and i32 %129, -17, !dbg !5953
  store i32 %130, i32* %128, align 8, !dbg !5953
  %131 = load i64, i64* %16, align 8, !dbg !5954
  %132 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !5955
  %133 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %132, i32 0, i32 21, !dbg !5956
  store i64 %131, i64* %133, align 8, !dbg !5957
  store i32 0, i32* %12, align 4, !dbg !5958
  %134 = load i32, i32* @x.109
  %135 = load i32, i32* @y.110
  %136 = sub i32 %134, 1
  %137 = mul i32 %134, %136
  %138 = urem i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = icmp slt i32 %135, 10
  %141 = or i1 %139, %140
  br i1 %141, label %originalBBpart232, label %originalBB18alteredBB

originalBBpart232:                                ; preds = %originalBB18
  br label %163, !dbg !5958

142:                                              ; preds = %originalBBpart28, %originalBBpart24, %originalBBpart2
  %143 = load i32, i32* @x.109
  %144 = load i32, i32* @y.110
  %145 = sub i32 %143, 1
  %146 = mul i32 %143, %145
  %147 = urem i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = icmp slt i32 %144, 10
  %150 = or i1 %148, %149
  br i1 %150, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %142, %originalBB34alteredBB
  %151 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !5959
  %152 = load i64, i64* %14, align 8, !dbg !5960
  %153 = load i32, i32* %15, align 4, !dbg !5961
  %154 = call i32 @fseeko(%struct._IO_FILE* %151, i64 %152, i32 %153), !dbg !5962
  store i32 %154, i32* %12, align 4, !dbg !5963
  %155 = load i32, i32* @x.109
  %156 = load i32, i32* @y.110
  %157 = sub i32 %155, 1
  %158 = mul i32 %155, %157
  %159 = urem i32 %158, 2
  %160 = icmp eq i32 %159, 0
  %161 = icmp slt i32 %156, 10
  %162 = or i1 %160, %161
  br i1 %162, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  br label %163, !dbg !5963

163:                                              ; preds = %originalBBpart236, %originalBBpart232, %originalBBpart216
  %164 = load i32, i32* @x.109
  %165 = load i32, i32* @y.110
  %166 = sub i32 %164, 1
  %167 = mul i32 %164, %166
  %168 = urem i32 %167, 2
  %169 = icmp eq i32 %168, 0
  %170 = icmp slt i32 %165, 10
  %171 = or i1 %169, %170
  br i1 %171, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %163, %originalBB38alteredBB
  %172 = load i32, i32* %12, align 4, !dbg !5964
  %173 = load i32, i32* @x.109
  %174 = load i32, i32* @y.110
  %175 = sub i32 %173, 1
  %176 = mul i32 %173, %175
  %177 = urem i32 %176, 2
  %178 = icmp eq i32 %177, 0
  %179 = icmp slt i32 %174, 10
  %180 = or i1 %178, %179
  br i1 %180, label %originalBBpart240, label %originalBB38alteredBB

originalBBpart240:                                ; preds = %originalBB38
  ret i32 %172, !dbg !5964

originalBBalteredBB:                              ; preds = %originalBB, %3
  %181 = alloca i32, align 4
  %182 = alloca %struct._IO_FILE*, align 8
  %183 = alloca i64, align 8
  %184 = alloca i32, align 4
  %185 = alloca i64, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %182, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %182, metadata !5965, metadata !DIExpression()), !dbg !5915
  store i64 %1, i64* %183, align 8
  call void @llvm.dbg.declare(metadata i64* %183, metadata !6004, metadata !DIExpression()), !dbg !5917
  store i32 %2, i32* %184, align 4
  call void @llvm.dbg.declare(metadata i32* %184, metadata !6005, metadata !DIExpression()), !dbg !5919
  %186 = load %struct._IO_FILE*, %struct._IO_FILE** %182, align 8, !dbg !5920
  %187 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %186, i32 0, i32 2, !dbg !5922
  %188 = load i8*, i8** %187, align 8, !dbg !5922
  %189 = load %struct._IO_FILE*, %struct._IO_FILE** %182, align 8, !dbg !5923
  %190 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %189, i32 0, i32 1, !dbg !5924
  %191 = load i8*, i8** %190, align 8, !dbg !5924
  %192 = icmp eq i8* %188, %191, !dbg !5925
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %32
  %193 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !5927
  %194 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %193, i32 0, i32 5, !dbg !5928
  %195 = load i8*, i8** %194, align 8, !dbg !5928
  %196 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !5929
  %197 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %196, i32 0, i32 4, !dbg !5930
  %198 = load i8*, i8** %197, align 8, !dbg !5930
  %199 = icmp eq i8* %195, %198, !dbg !5931
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %56
  %200 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !5933
  %201 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %200, i32 0, i32 9, !dbg !5934
  %202 = load i8*, i8** %201, align 8, !dbg !5934
  %203 = icmp eq i8* %202, null, !dbg !5935
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %77
  %204 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !5940
  %205 = call i32 @fileno(%struct._IO_FILE* %204) #10, !dbg !5941
  %206 = load i64, i64* %14, align 8, !dbg !5942
  %207 = load i32, i32* %15, align 4, !dbg !5943
  %208 = call i64 @lseek(i32 %205, i64 %206, i32 %207) #10, !dbg !5944
  store i64 %208, i64* %16, align 8, !dbg !5939
  %209 = load i64, i64* %16, align 8, !dbg !5945
  %210 = icmp eq i64 %209, -1, !dbg !5947
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %101
  store i32 -1, i32* %12, align 4, !dbg !5949
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %118
  %211 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !5951
  %212 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %211, i32 0, i32 0, !dbg !5952
  %213 = load i32, i32* %212, align 8, !dbg !5953
  %_ = sub i32 %213, -17
  %gen = mul i32 %_, -17
  %_19 = sub i32 0, %213
  %gen20 = add i32 %_19, -17
  %_21 = sub i32 %213, -17
  %gen22 = mul i32 %_21, -17
  %_23 = shl i32 %213, -17
  %_24 = shl i32 %213, -17
  %_25 = sub i32 0, %213
  %gen26 = add i32 %_25, -17
  %_27 = sub i32 0, %213
  %gen28 = add i32 %_27, -17
  %_29 = sub i32 %213, -17
  %gen30 = mul i32 %_29, -17
  %214 = and i32 %213, -17, !dbg !5953
  store i32 %214, i32* %212, align 8, !dbg !5953
  %215 = load i64, i64* %16, align 8, !dbg !5954
  %216 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !5955
  %217 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %216, i32 0, i32 21, !dbg !5956
  store i64 %215, i64* %217, align 8, !dbg !5957
  store i32 0, i32* %12, align 4, !dbg !5958
  br label %originalBB18

originalBB34alteredBB:                            ; preds = %originalBB34, %142
  %218 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !5959
  %219 = load i64, i64* %14, align 8, !dbg !5960
  %220 = load i32, i32* %15, align 4, !dbg !5961
  %221 = call i32 @fseeko(%struct._IO_FILE* %218, i64 %219, i32 %220), !dbg !5962
  store i32 %221, i32* %12, align 4, !dbg !5963
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %163
  %222 = load i32, i32* %12, align 4, !dbg !5964
  br label %originalBB38
}

declare dso_local i32 @fseeko(%struct._IO_FILE*, i64, i32) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @c_tolower(i32) #4 !dbg !6006 {
  %2 = load i32, i32* @x.111
  %3 = load i32, i32* @y.112
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  store i32 %0, i32* %11, align 4
  call void @llvm.dbg.declare(metadata i32* %11, metadata !6010, metadata !DIExpression()), !dbg !6011
  %12 = load i32, i32* %11, align 4, !dbg !6012
  %13 = load i32, i32* @x.111
  %14 = load i32, i32* @y.112
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  switch i32 %12, label %41 [
    i32 65, label %21
    i32 66, label %21
    i32 67, label %21
    i32 68, label %21
    i32 69, label %21
    i32 70, label %21
    i32 71, label %21
    i32 72, label %21
    i32 73, label %21
    i32 74, label %21
    i32 75, label %21
    i32 76, label %21
    i32 77, label %21
    i32 78, label %21
    i32 79, label %21
    i32 80, label %21
    i32 81, label %21
    i32 82, label %21
    i32 83, label %21
    i32 84, label %21
    i32 85, label %21
    i32 86, label %21
    i32 87, label %21
    i32 88, label %21
    i32 89, label %21
    i32 90, label %21
  ], !dbg !6013

21:                                               ; preds = %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2, %originalBBpart2
  %22 = load i32, i32* @x.111
  %23 = load i32, i32* @y.112
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %21, %originalBB1alteredBB
  %30 = load i32, i32* %11, align 4, !dbg !6014
  %31 = sub nsw i32 %30, 65, !dbg !6016
  %32 = add nsw i32 %31, 97, !dbg !6017
  store i32 %32, i32* %10, align 4, !dbg !6018
  %33 = load i32, i32* @x.111
  %34 = load i32, i32* @y.112
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBBpart28, label %originalBB1alteredBB

originalBBpart28:                                 ; preds = %originalBB1
  br label %59, !dbg !6018

41:                                               ; preds = %originalBBpart2
  %42 = load i32, i32* @x.111
  %43 = load i32, i32* @y.112
  %44 = sub i32 %42, 1
  %45 = mul i32 %42, %44
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %47, %48
  br i1 %49, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %41, %originalBB10alteredBB
  %50 = load i32, i32* %11, align 4, !dbg !6019
  store i32 %50, i32* %10, align 4, !dbg !6020
  %51 = load i32, i32* @x.111
  %52 = load i32, i32* @y.112
  %53 = sub i32 %51, 1
  %54 = mul i32 %51, %53
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %52, 10
  %58 = or i1 %56, %57
  br i1 %58, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %59, !dbg !6020

59:                                               ; preds = %originalBBpart212, %originalBBpart28
  %60 = load i32, i32* @x.111
  %61 = load i32, i32* @y.112
  %62 = sub i32 %60, 1
  %63 = mul i32 %60, %62
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %61, 10
  %67 = or i1 %65, %66
  br i1 %67, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %59, %originalBB14alteredBB
  %68 = load i32, i32* %10, align 4, !dbg !6021
  %69 = load i32, i32* @x.111
  %70 = load i32, i32* @y.112
  %71 = sub i32 %69, 1
  %72 = mul i32 %69, %71
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %74, %75
  br i1 %76, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  ret i32 %68, !dbg !6021

originalBBalteredBB:                              ; preds = %originalBB, %1
  %77 = alloca i32, align 4
  %78 = alloca i32, align 4
  store i32 %0, i32* %78, align 4
  call void @llvm.dbg.declare(metadata i32* %78, metadata !6022, metadata !DIExpression()), !dbg !6011
  %79 = load i32, i32* %78, align 4, !dbg !6012
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %21
  %80 = load i32, i32* %11, align 4, !dbg !6014
  %_ = sub i32 %80, 65
  %gen = mul i32 %_, 65
  %_2 = sub i32 %80, 65
  %gen3 = mul i32 %_2, 65
  %_4 = shl i32 %80, 65
  %81 = sub nsw i32 %80, 65, !dbg !6016
  %_5 = sub i32 0, %81
  %gen6 = add i32 %_5, 97
  %82 = add nsw i32 %81, 97, !dbg !6017
  store i32 %82, i32* %10, align 4, !dbg !6018
  br label %originalBB1

originalBB10alteredBB:                            ; preds = %originalBB10, %41
  %83 = load i32, i32* %11, align 4, !dbg !6019
  store i32 %83, i32* %10, align 4, !dbg !6020
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %59
  %84 = load i32, i32* %10, align 4, !dbg !6021
  br label %originalBB14
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @getugroups(i32, i32*, i8*, i32) #4 !dbg !6025 {
  %5 = load i32, i32* @x.113
  %6 = load i32, i32* @y.114
  %7 = sub i32 %5, 1
  %8 = mul i32 %5, %7
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %6, 10
  %12 = or i1 %10, %11
  br i1 %12, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %4, %originalBBalteredBB
  %13 = alloca i32, align 4
  %14 = alloca i32*, align 8
  %15 = alloca i8*, align 8
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i8**, align 8
  %19 = alloca %struct.group*, align 8
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  store i32 %0, i32* %13, align 4
  call void @llvm.dbg.declare(metadata i32* %13, metadata !6029, metadata !DIExpression()), !dbg !6030
  store i32* %1, i32** %14, align 8
  call void @llvm.dbg.declare(metadata i32** %14, metadata !6031, metadata !DIExpression()), !dbg !6032
  store i8* %2, i8** %15, align 8
  call void @llvm.dbg.declare(metadata i8** %15, metadata !6033, metadata !DIExpression()), !dbg !6034
  store i32 %3, i32* %16, align 4
  call void @llvm.dbg.declare(metadata i32* %16, metadata !6035, metadata !DIExpression()), !dbg !6036
  call void @llvm.dbg.declare(metadata i32* %17, metadata !6037, metadata !DIExpression()), !dbg !6038
  store i32 0, i32* %17, align 4, !dbg !6038
  %22 = load i32, i32* %16, align 4, !dbg !6039
  %23 = icmp ne i32 %22, -1, !dbg !6041
  %24 = load i32, i32* @x.113
  %25 = load i32, i32* @y.114
  %26 = sub i32 %24, 1
  %27 = mul i32 %24, %26
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %29, %30
  br i1 %31, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %23, label %32, label %92, !dbg !6042

32:                                               ; preds = %originalBBpart2
  %33 = load i32, i32* @x.113
  %34 = load i32, i32* @y.114
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %32, %originalBB1alteredBB
  %41 = load i32, i32* %13, align 4, !dbg !6043
  %42 = icmp ne i32 %41, 0, !dbg !6046
  %43 = load i32, i32* @x.113
  %44 = load i32, i32* @y.114
  %45 = sub i32 %43, 1
  %46 = mul i32 %43, %45
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %48, %49
  br i1 %50, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %42, label %51, label %73, !dbg !6047

51:                                               ; preds = %originalBBpart24
  %52 = load i32, i32* @x.113
  %53 = load i32, i32* @y.114
  %54 = sub i32 %52, 1
  %55 = mul i32 %52, %54
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %53, 10
  %59 = or i1 %57, %58
  br i1 %59, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %51, %originalBB6alteredBB
  %60 = load i32, i32* %16, align 4, !dbg !6048
  %61 = load i32*, i32** %14, align 8, !dbg !6049
  %62 = load i32, i32* %17, align 4, !dbg !6050
  %63 = sext i32 %62 to i64, !dbg !6049
  %64 = getelementptr inbounds i32, i32* %61, i64 %63, !dbg !6049
  store i32 %60, i32* %64, align 4, !dbg !6051
  %65 = load i32, i32* @x.113
  %66 = load i32, i32* @y.114
  %67 = sub i32 %65, 1
  %68 = mul i32 %65, %67
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %66, 10
  %72 = or i1 %70, %71
  br i1 %72, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %73, !dbg !6049

73:                                               ; preds = %originalBBpart28, %originalBBpart24
  %74 = load i32, i32* @x.113
  %75 = load i32, i32* @y.114
  %76 = sub i32 %74, 1
  %77 = mul i32 %74, %76
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %75, 10
  %81 = or i1 %79, %80
  br i1 %81, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %73, %originalBB10alteredBB
  %82 = load i32, i32* %17, align 4, !dbg !6052
  %83 = add nsw i32 %82, 1, !dbg !6052
  store i32 %83, i32* %17, align 4, !dbg !6052
  %84 = load i32, i32* @x.113
  %85 = load i32, i32* @y.114
  %86 = sub i32 %84, 1
  %87 = mul i32 %84, %86
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %85, 10
  %91 = or i1 %89, %90
  br i1 %91, label %originalBBpart221, label %originalBB10alteredBB

originalBBpart221:                                ; preds = %originalBB10
  br label %92, !dbg !6053

92:                                               ; preds = %originalBBpart221, %originalBBpart2
  %93 = load i32, i32* @x.113
  %94 = load i32, i32* @y.114
  %95 = sub i32 %93, 1
  %96 = mul i32 %93, %95
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %94, 10
  %100 = or i1 %98, %99
  br i1 %100, label %originalBB23, label %originalBB23alteredBB

originalBB23:                                     ; preds = %92, %originalBB23alteredBB
  call void @setgrent(), !dbg !6054
  %101 = load i32, i32* @x.113
  %102 = load i32, i32* @y.114
  %103 = sub i32 %101, 1
  %104 = mul i32 %101, %103
  %105 = urem i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %102, 10
  %108 = or i1 %106, %107
  br i1 %108, label %originalBBpart225, label %originalBB23alteredBB

originalBBpart225:                                ; preds = %originalBB23
  br label %109, !dbg !6055

109:                                              ; preds = %originalBBpart2128, %originalBBpart225
  call void @llvm.dbg.declare(metadata i8*** %18, metadata !6056, metadata !DIExpression()), !dbg !6058
  call void @llvm.dbg.declare(metadata %struct.group** %19, metadata !6059, metadata !DIExpression()), !dbg !6067
  %110 = load i32, i32* @x.113
  %111 = load i32, i32* @y.114
  %112 = sub i32 %110, 1
  %113 = mul i32 %110, %112
  %114 = urem i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %111, 10
  %117 = or i1 %115, %116
  br i1 %117, label %originalBB27, label %originalBB27alteredBB

originalBB27:                                     ; preds = %109, %originalBB27alteredBB
  %118 = call i32* @__errno_location() #15, !dbg !6068
  store i32 0, i32* %118, align 4, !dbg !6069
  %119 = call %struct.group* @getgrent(), !dbg !6070
  store %struct.group* %119, %struct.group** %19, align 8, !dbg !6071
  %120 = load %struct.group*, %struct.group** %19, align 8, !dbg !6072
  %121 = icmp eq %struct.group* %120, null, !dbg !6074
  %122 = load i32, i32* @x.113
  %123 = load i32, i32* @y.114
  %124 = sub i32 %122, 1
  %125 = mul i32 %122, %124
  %126 = urem i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = icmp slt i32 %123, 10
  %129 = or i1 %127, %128
  br i1 %129, label %originalBBpart229, label %originalBB27alteredBB

originalBBpart229:                                ; preds = %originalBB27
  br i1 %121, label %130, label %147, !dbg !6075

130:                                              ; preds = %originalBBpart229
  %131 = load i32, i32* @x.113
  %132 = load i32, i32* @y.114
  %133 = sub i32 %131, 1
  %134 = mul i32 %131, %133
  %135 = urem i32 %134, 2
  %136 = icmp eq i32 %135, 0
  %137 = icmp slt i32 %132, 10
  %138 = or i1 %136, %137
  br i1 %138, label %originalBB31, label %originalBB31alteredBB

originalBB31:                                     ; preds = %130, %originalBB31alteredBB
  %139 = load i32, i32* @x.113
  %140 = load i32, i32* @y.114
  %141 = sub i32 %139, 1
  %142 = mul i32 %139, %141
  %143 = urem i32 %142, 2
  %144 = icmp eq i32 %143, 0
  %145 = icmp slt i32 %140, 10
  %146 = or i1 %144, %145
  br i1 %146, label %originalBBpart233, label %originalBB31alteredBB

originalBBpart233:                                ; preds = %originalBB31
  br label %570, !dbg !6076

147:                                              ; preds = %originalBBpart229
  %148 = load i32, i32* @x.113
  %149 = load i32, i32* @y.114
  %150 = sub i32 %148, 1
  %151 = mul i32 %148, %150
  %152 = urem i32 %151, 2
  %153 = icmp eq i32 %152, 0
  %154 = icmp slt i32 %149, 10
  %155 = or i1 %153, %154
  br i1 %155, label %originalBB35, label %originalBB35alteredBB

originalBB35:                                     ; preds = %147, %originalBB35alteredBB
  %156 = load %struct.group*, %struct.group** %19, align 8, !dbg !6077
  %157 = getelementptr inbounds %struct.group, %struct.group* %156, i32 0, i32 3, !dbg !6079
  %158 = load i8**, i8*** %157, align 8, !dbg !6079
  store i8** %158, i8*** %18, align 8, !dbg !6080
  %159 = load i32, i32* @x.113
  %160 = load i32, i32* @y.114
  %161 = sub i32 %159, 1
  %162 = mul i32 %159, %161
  %163 = urem i32 %162, 2
  %164 = icmp eq i32 %163, 0
  %165 = icmp slt i32 %160, 10
  %166 = or i1 %164, %165
  br i1 %166, label %originalBBpart237, label %originalBB35alteredBB

originalBBpart237:                                ; preds = %originalBB35
  br label %167, !dbg !6081

167:                                              ; preds = %originalBBpart2124, %originalBBpart237
  %168 = load i32, i32* @x.113
  %169 = load i32, i32* @y.114
  %170 = sub i32 %168, 1
  %171 = mul i32 %168, %170
  %172 = urem i32 %171, 2
  %173 = icmp eq i32 %172, 0
  %174 = icmp slt i32 %169, 10
  %175 = or i1 %173, %174
  br i1 %175, label %originalBB39, label %originalBB39alteredBB

originalBB39:                                     ; preds = %167, %originalBB39alteredBB
  %176 = load i8**, i8*** %18, align 8, !dbg !6082
  %177 = load i8*, i8** %176, align 8, !dbg !6084
  %178 = icmp ne i8* %177, null, !dbg !6085
  %179 = load i32, i32* @x.113
  %180 = load i32, i32* @y.114
  %181 = sub i32 %179, 1
  %182 = mul i32 %179, %181
  %183 = urem i32 %182, 2
  %184 = icmp eq i32 %183, 0
  %185 = icmp slt i32 %180, 10
  %186 = or i1 %184, %185
  br i1 %186, label %originalBBpart241, label %originalBB39alteredBB

originalBBpart241:                                ; preds = %originalBB39
  br i1 %178, label %187, label %553, !dbg !6085

187:                                              ; preds = %originalBBpart241
  call void @llvm.dbg.declare(metadata i32* %20, metadata !6086, metadata !DIExpression()), !dbg !6088
  %188 = load i32, i32* @x.113
  %189 = load i32, i32* @y.114
  %190 = sub i32 %188, 1
  %191 = mul i32 %188, %190
  %192 = urem i32 %191, 2
  %193 = icmp eq i32 %192, 0
  %194 = icmp slt i32 %189, 10
  %195 = or i1 %193, %194
  br i1 %195, label %originalBB43, label %originalBB43alteredBB

originalBB43:                                     ; preds = %187, %originalBB43alteredBB
  %196 = load i8*, i8** %15, align 8, !dbg !6089
  %197 = load i8**, i8*** %18, align 8, !dbg !6089
  %198 = load i8*, i8** %197, align 8, !dbg !6089
  %199 = call i32 @strcmp(i8* %196, i8* %198) #13, !dbg !6089
  %200 = icmp eq i32 %199, 0, !dbg !6089
  %201 = load i32, i32* @x.113
  %202 = load i32, i32* @y.114
  %203 = sub i32 %201, 1
  %204 = mul i32 %201, %203
  %205 = urem i32 %204, 2
  %206 = icmp eq i32 %205, 0
  %207 = icmp slt i32 %202, 10
  %208 = or i1 %206, %207
  br i1 %208, label %originalBBpart245, label %originalBB43alteredBB

originalBBpart245:                                ; preds = %originalBB43
  br i1 %200, label %226, label %209, !dbg !6091

209:                                              ; preds = %originalBBpart245
  %210 = load i32, i32* @x.113
  %211 = load i32, i32* @y.114
  %212 = sub i32 %210, 1
  %213 = mul i32 %210, %212
  %214 = urem i32 %213, 2
  %215 = icmp eq i32 %214, 0
  %216 = icmp slt i32 %211, 10
  %217 = or i1 %215, %216
  br i1 %217, label %originalBB47, label %originalBB47alteredBB

originalBB47:                                     ; preds = %209, %originalBB47alteredBB
  %218 = load i32, i32* @x.113
  %219 = load i32, i32* @y.114
  %220 = sub i32 %218, 1
  %221 = mul i32 %218, %220
  %222 = urem i32 %221, 2
  %223 = icmp eq i32 %222, 0
  %224 = icmp slt i32 %219, 10
  %225 = or i1 %223, %224
  br i1 %225, label %originalBBpart249, label %originalBB47alteredBB

originalBBpart249:                                ; preds = %originalBB47
  br label %534, !dbg !6092

226:                                              ; preds = %originalBBpart245
  %227 = load i32, i32* @x.113
  %228 = load i32, i32* @y.114
  %229 = sub i32 %227, 1
  %230 = mul i32 %227, %229
  %231 = urem i32 %230, 2
  %232 = icmp eq i32 %231, 0
  %233 = icmp slt i32 %228, 10
  %234 = or i1 %232, %233
  br i1 %234, label %originalBB51, label %originalBB51alteredBB

originalBB51:                                     ; preds = %226, %originalBB51alteredBB
  store i32 0, i32* %20, align 4, !dbg !6093
  %235 = load i32, i32* @x.113
  %236 = load i32, i32* @y.114
  %237 = sub i32 %235, 1
  %238 = mul i32 %235, %237
  %239 = urem i32 %238, 2
  %240 = icmp eq i32 %239, 0
  %241 = icmp slt i32 %236, 10
  %242 = or i1 %240, %241
  br i1 %242, label %originalBBpart253, label %originalBB51alteredBB

originalBBpart253:                                ; preds = %originalBB51
  br label %243, !dbg !6095

243:                                              ; preds = %originalBBpart279, %originalBBpart253
  %244 = load i32, i32* @x.113
  %245 = load i32, i32* @y.114
  %246 = sub i32 %244, 1
  %247 = mul i32 %244, %246
  %248 = urem i32 %247, 2
  %249 = icmp eq i32 %248, 0
  %250 = icmp slt i32 %245, 10
  %251 = or i1 %249, %250
  br i1 %251, label %originalBB55, label %originalBB55alteredBB

originalBB55:                                     ; preds = %243, %originalBB55alteredBB
  %252 = load i32, i32* %20, align 4, !dbg !6096
  %253 = load i32, i32* %17, align 4, !dbg !6098
  %254 = icmp slt i32 %252, %253, !dbg !6099
  %255 = load i32, i32* @x.113
  %256 = load i32, i32* @y.114
  %257 = sub i32 %255, 1
  %258 = mul i32 %255, %257
  %259 = urem i32 %258, 2
  %260 = icmp eq i32 %259, 0
  %261 = icmp slt i32 %256, 10
  %262 = or i1 %260, %261
  br i1 %262, label %originalBBpart257, label %originalBB55alteredBB

originalBBpart257:                                ; preds = %originalBB55
  br i1 %254, label %263, label %361, !dbg !6100

263:                                              ; preds = %originalBBpart257
  %264 = load i32, i32* @x.113
  %265 = load i32, i32* @y.114
  %266 = sub i32 %264, 1
  %267 = mul i32 %264, %266
  %268 = urem i32 %267, 2
  %269 = icmp eq i32 %268, 0
  %270 = icmp slt i32 %265, 10
  %271 = or i1 %269, %270
  br i1 %271, label %originalBB59, label %originalBB59alteredBB

originalBB59:                                     ; preds = %263, %originalBB59alteredBB
  %272 = load i32*, i32** %14, align 8, !dbg !6101
  %273 = icmp ne i32* %272, null, !dbg !6101
  %274 = load i32, i32* @x.113
  %275 = load i32, i32* @y.114
  %276 = sub i32 %274, 1
  %277 = mul i32 %274, %276
  %278 = urem i32 %277, 2
  %279 = icmp eq i32 %278, 0
  %280 = icmp slt i32 %275, 10
  %281 = or i1 %279, %280
  br i1 %281, label %originalBBpart261, label %originalBB59alteredBB

originalBBpart261:                                ; preds = %originalBB59
  br i1 %273, label %282, label %325, !dbg !6103

282:                                              ; preds = %originalBBpart261
  %283 = load i32, i32* @x.113
  %284 = load i32, i32* @y.114
  %285 = sub i32 %283, 1
  %286 = mul i32 %283, %285
  %287 = urem i32 %286, 2
  %288 = icmp eq i32 %287, 0
  %289 = icmp slt i32 %284, 10
  %290 = or i1 %288, %289
  br i1 %290, label %originalBB63, label %originalBB63alteredBB

originalBB63:                                     ; preds = %282, %originalBB63alteredBB
  %291 = load i32*, i32** %14, align 8, !dbg !6104
  %292 = load i32, i32* %20, align 4, !dbg !6105
  %293 = sext i32 %292 to i64, !dbg !6104
  %294 = getelementptr inbounds i32, i32* %291, i64 %293, !dbg !6104
  %295 = load i32, i32* %294, align 4, !dbg !6104
  %296 = load %struct.group*, %struct.group** %19, align 8, !dbg !6106
  %297 = getelementptr inbounds %struct.group, %struct.group* %296, i32 0, i32 2, !dbg !6107
  %298 = load i32, i32* %297, align 8, !dbg !6107
  %299 = icmp eq i32 %295, %298, !dbg !6108
  %300 = load i32, i32* @x.113
  %301 = load i32, i32* @y.114
  %302 = sub i32 %300, 1
  %303 = mul i32 %300, %302
  %304 = urem i32 %303, 2
  %305 = icmp eq i32 %304, 0
  %306 = icmp slt i32 %301, 10
  %307 = or i1 %305, %306
  br i1 %307, label %originalBBpart265, label %originalBB63alteredBB

originalBBpart265:                                ; preds = %originalBB63
  br i1 %299, label %308, label %325, !dbg !6109

308:                                              ; preds = %originalBBpart265
  %309 = load i32, i32* @x.113
  %310 = load i32, i32* @y.114
  %311 = sub i32 %309, 1
  %312 = mul i32 %309, %311
  %313 = urem i32 %312, 2
  %314 = icmp eq i32 %313, 0
  %315 = icmp slt i32 %310, 10
  %316 = or i1 %314, %315
  br i1 %316, label %originalBB67, label %originalBB67alteredBB

originalBB67:                                     ; preds = %308, %originalBB67alteredBB
  %317 = load i32, i32* @x.113
  %318 = load i32, i32* @y.114
  %319 = sub i32 %317, 1
  %320 = mul i32 %317, %319
  %321 = urem i32 %320, 2
  %322 = icmp eq i32 %321, 0
  %323 = icmp slt i32 %318, 10
  %324 = or i1 %322, %323
  br i1 %324, label %originalBBpart269, label %originalBB67alteredBB

originalBBpart269:                                ; preds = %originalBB67
  br label %361, !dbg !6110

325:                                              ; preds = %originalBBpart265, %originalBBpart261
  %326 = load i32, i32* @x.113
  %327 = load i32, i32* @y.114
  %328 = sub i32 %326, 1
  %329 = mul i32 %326, %328
  %330 = urem i32 %329, 2
  %331 = icmp eq i32 %330, 0
  %332 = icmp slt i32 %327, 10
  %333 = or i1 %331, %332
  br i1 %333, label %originalBB71, label %originalBB71alteredBB

originalBB71:                                     ; preds = %325, %originalBB71alteredBB
  %334 = load i32, i32* @x.113
  %335 = load i32, i32* @y.114
  %336 = sub i32 %334, 1
  %337 = mul i32 %334, %336
  %338 = urem i32 %337, 2
  %339 = icmp eq i32 %338, 0
  %340 = icmp slt i32 %335, 10
  %341 = or i1 %339, %340
  br i1 %341, label %originalBBpart273, label %originalBB71alteredBB

originalBBpart273:                                ; preds = %originalBB71
  br label %342, !dbg !6107

342:                                              ; preds = %originalBBpart273
  %343 = load i32, i32* @x.113
  %344 = load i32, i32* @y.114
  %345 = sub i32 %343, 1
  %346 = mul i32 %343, %345
  %347 = urem i32 %346, 2
  %348 = icmp eq i32 %347, 0
  %349 = icmp slt i32 %344, 10
  %350 = or i1 %348, %349
  br i1 %350, label %originalBB75, label %originalBB75alteredBB

originalBB75:                                     ; preds = %342, %originalBB75alteredBB
  %351 = load i32, i32* %20, align 4, !dbg !6111
  %352 = add nsw i32 %351, 1, !dbg !6111
  store i32 %352, i32* %20, align 4, !dbg !6111
  %353 = load i32, i32* @x.113
  %354 = load i32, i32* @y.114
  %355 = sub i32 %353, 1
  %356 = mul i32 %353, %355
  %357 = urem i32 %356, 2
  %358 = icmp eq i32 %357, 0
  %359 = icmp slt i32 %354, 10
  %360 = or i1 %358, %359
  br i1 %360, label %originalBBpart279, label %originalBB75alteredBB

originalBBpart279:                                ; preds = %originalBB75
  br label %243, !dbg !6112, !llvm.loop !6113

361:                                              ; preds = %originalBBpart269, %originalBBpart257
  %362 = load i32, i32* @x.113
  %363 = load i32, i32* @y.114
  %364 = sub i32 %362, 1
  %365 = mul i32 %362, %364
  %366 = urem i32 %365, 2
  %367 = icmp eq i32 %366, 0
  %368 = icmp slt i32 %363, 10
  %369 = or i1 %367, %368
  br i1 %369, label %originalBB81, label %originalBB81alteredBB

originalBB81:                                     ; preds = %361, %originalBB81alteredBB
  %370 = load i32, i32* %20, align 4, !dbg !6115
  %371 = load i32, i32* %17, align 4, !dbg !6117
  %372 = icmp eq i32 %370, %371, !dbg !6118
  %373 = load i32, i32* @x.113
  %374 = load i32, i32* @y.114
  %375 = sub i32 %373, 1
  %376 = mul i32 %373, %375
  %377 = urem i32 %376, 2
  %378 = icmp eq i32 %377, 0
  %379 = icmp slt i32 %374, 10
  %380 = or i1 %378, %379
  br i1 %380, label %originalBBpart283, label %originalBB81alteredBB

originalBBpart283:                                ; preds = %originalBB81
  br i1 %372, label %381, label %517, !dbg !6119

381:                                              ; preds = %originalBBpart283
  %382 = load i32, i32* @x.113
  %383 = load i32, i32* @y.114
  %384 = sub i32 %382, 1
  %385 = mul i32 %382, %384
  %386 = urem i32 %385, 2
  %387 = icmp eq i32 %386, 0
  %388 = icmp slt i32 %383, 10
  %389 = or i1 %387, %388
  br i1 %389, label %originalBB85, label %originalBB85alteredBB

originalBB85:                                     ; preds = %381, %originalBB85alteredBB
  %390 = load i32, i32* %13, align 4, !dbg !6120
  %391 = icmp ne i32 %390, 0, !dbg !6123
  %392 = load i32, i32* @x.113
  %393 = load i32, i32* @y.114
  %394 = sub i32 %392, 1
  %395 = mul i32 %392, %394
  %396 = urem i32 %395, 2
  %397 = icmp eq i32 %396, 0
  %398 = icmp slt i32 %393, 10
  %399 = or i1 %397, %398
  br i1 %399, label %originalBBpart287, label %originalBB85alteredBB

originalBBpart287:                                ; preds = %originalBB85
  br i1 %391, label %400, label %461, !dbg !6124

400:                                              ; preds = %originalBBpart287
  %401 = load i32, i32* @x.113
  %402 = load i32, i32* @y.114
  %403 = sub i32 %401, 1
  %404 = mul i32 %401, %403
  %405 = urem i32 %404, 2
  %406 = icmp eq i32 %405, 0
  %407 = icmp slt i32 %402, 10
  %408 = or i1 %406, %407
  br i1 %408, label %originalBB89, label %originalBB89alteredBB

originalBB89:                                     ; preds = %400, %originalBB89alteredBB
  %409 = load i32, i32* %17, align 4, !dbg !6125
  %410 = load i32, i32* %13, align 4, !dbg !6128
  %411 = icmp sge i32 %409, %410, !dbg !6129
  %412 = load i32, i32* @x.113
  %413 = load i32, i32* @y.114
  %414 = sub i32 %412, 1
  %415 = mul i32 %412, %414
  %416 = urem i32 %415, 2
  %417 = icmp eq i32 %416, 0
  %418 = icmp slt i32 %413, 10
  %419 = or i1 %417, %418
  br i1 %419, label %originalBBpart291, label %originalBB89alteredBB

originalBBpart291:                                ; preds = %originalBB89
  br i1 %411, label %420, label %437, !dbg !6130

420:                                              ; preds = %originalBBpart291
  %421 = load i32, i32* @x.113
  %422 = load i32, i32* @y.114
  %423 = sub i32 %421, 1
  %424 = mul i32 %421, %423
  %425 = urem i32 %424, 2
  %426 = icmp eq i32 %425, 0
  %427 = icmp slt i32 %422, 10
  %428 = or i1 %426, %427
  br i1 %428, label %originalBB93, label %originalBB93alteredBB

originalBB93:                                     ; preds = %420, %originalBB93alteredBB
  %429 = load i32, i32* @x.113
  %430 = load i32, i32* @y.114
  %431 = sub i32 %429, 1
  %432 = mul i32 %429, %431
  %433 = urem i32 %432, 2
  %434 = icmp eq i32 %433, 0
  %435 = icmp slt i32 %430, 10
  %436 = or i1 %434, %435
  br i1 %436, label %originalBBpart295, label %originalBB93alteredBB

originalBBpart295:                                ; preds = %originalBB93
  br label %624, !dbg !6131

437:                                              ; preds = %originalBBpart291
  %438 = load i32, i32* @x.113
  %439 = load i32, i32* @y.114
  %440 = sub i32 %438, 1
  %441 = mul i32 %438, %440
  %442 = urem i32 %441, 2
  %443 = icmp eq i32 %442, 0
  %444 = icmp slt i32 %439, 10
  %445 = or i1 %443, %444
  br i1 %445, label %originalBB97, label %originalBB97alteredBB

originalBB97:                                     ; preds = %437, %originalBB97alteredBB
  %446 = load %struct.group*, %struct.group** %19, align 8, !dbg !6132
  %447 = getelementptr inbounds %struct.group, %struct.group* %446, i32 0, i32 2, !dbg !6133
  %448 = load i32, i32* %447, align 8, !dbg !6133
  %449 = load i32*, i32** %14, align 8, !dbg !6134
  %450 = load i32, i32* %17, align 4, !dbg !6135
  %451 = sext i32 %450 to i64, !dbg !6134
  %452 = getelementptr inbounds i32, i32* %449, i64 %451, !dbg !6134
  store i32 %448, i32* %452, align 4, !dbg !6136
  %453 = load i32, i32* @x.113
  %454 = load i32, i32* @y.114
  %455 = sub i32 %453, 1
  %456 = mul i32 %453, %455
  %457 = urem i32 %456, 2
  %458 = icmp eq i32 %457, 0
  %459 = icmp slt i32 %454, 10
  %460 = or i1 %458, %459
  br i1 %460, label %originalBBpart299, label %originalBB97alteredBB

originalBBpart299:                                ; preds = %originalBB97
  br label %461, !dbg !6137

461:                                              ; preds = %originalBBpart299, %originalBBpart287
  %462 = load i32, i32* @x.113
  %463 = load i32, i32* @y.114
  %464 = sub i32 %462, 1
  %465 = mul i32 %462, %464
  %466 = urem i32 %465, 2
  %467 = icmp eq i32 %466, 0
  %468 = icmp slt i32 %463, 10
  %469 = or i1 %467, %468
  br i1 %469, label %originalBB101, label %originalBB101alteredBB

originalBB101:                                    ; preds = %461, %originalBB101alteredBB
  %470 = load i32, i32* %17, align 4, !dbg !6138
  %471 = icmp eq i32 %470, 2147483647, !dbg !6140
  %472 = load i32, i32* @x.113
  %473 = load i32, i32* @y.114
  %474 = sub i32 %472, 1
  %475 = mul i32 %472, %474
  %476 = urem i32 %475, 2
  %477 = icmp eq i32 %476, 0
  %478 = icmp slt i32 %473, 10
  %479 = or i1 %477, %478
  br i1 %479, label %originalBBpart2103, label %originalBB101alteredBB

originalBBpart2103:                               ; preds = %originalBB101
  br i1 %471, label %480, label %498, !dbg !6141

480:                                              ; preds = %originalBBpart2103
  %481 = load i32, i32* @x.113
  %482 = load i32, i32* @y.114
  %483 = sub i32 %481, 1
  %484 = mul i32 %481, %483
  %485 = urem i32 %484, 2
  %486 = icmp eq i32 %485, 0
  %487 = icmp slt i32 %482, 10
  %488 = or i1 %486, %487
  br i1 %488, label %originalBB105, label %originalBB105alteredBB

originalBB105:                                    ; preds = %480, %originalBB105alteredBB
  %489 = call i32* @__errno_location() #15, !dbg !6142
  store i32 75, i32* %489, align 4, !dbg !6144
  %490 = load i32, i32* @x.113
  %491 = load i32, i32* @y.114
  %492 = sub i32 %490, 1
  %493 = mul i32 %490, %492
  %494 = urem i32 %493, 2
  %495 = icmp eq i32 %494, 0
  %496 = icmp slt i32 %491, 10
  %497 = or i1 %495, %496
  br i1 %497, label %originalBBpart2107, label %originalBB105alteredBB

originalBBpart2107:                               ; preds = %originalBB105
  br label %624, !dbg !6145

498:                                              ; preds = %originalBBpart2103
  %499 = load i32, i32* @x.113
  %500 = load i32, i32* @y.114
  %501 = sub i32 %499, 1
  %502 = mul i32 %499, %501
  %503 = urem i32 %502, 2
  %504 = icmp eq i32 %503, 0
  %505 = icmp slt i32 %500, 10
  %506 = or i1 %504, %505
  br i1 %506, label %originalBB109, label %originalBB109alteredBB

originalBB109:                                    ; preds = %498, %originalBB109alteredBB
  %507 = load i32, i32* %17, align 4, !dbg !6146
  %508 = add nsw i32 %507, 1, !dbg !6146
  store i32 %508, i32* %17, align 4, !dbg !6146
  %509 = load i32, i32* @x.113
  %510 = load i32, i32* @y.114
  %511 = sub i32 %509, 1
  %512 = mul i32 %509, %511
  %513 = urem i32 %512, 2
  %514 = icmp eq i32 %513, 0
  %515 = icmp slt i32 %510, 10
  %516 = or i1 %514, %515
  br i1 %516, label %originalBBpart2116, label %originalBB109alteredBB

originalBBpart2116:                               ; preds = %originalBB109
  br label %517, !dbg !6147

517:                                              ; preds = %originalBBpart2116, %originalBBpart283
  %518 = load i32, i32* @x.113
  %519 = load i32, i32* @y.114
  %520 = sub i32 %518, 1
  %521 = mul i32 %518, %520
  %522 = urem i32 %521, 2
  %523 = icmp eq i32 %522, 0
  %524 = icmp slt i32 %519, 10
  %525 = or i1 %523, %524
  br i1 %525, label %originalBB118, label %originalBB118alteredBB

originalBB118:                                    ; preds = %517, %originalBB118alteredBB
  %526 = load i32, i32* @x.113
  %527 = load i32, i32* @y.114
  %528 = sub i32 %526, 1
  %529 = mul i32 %526, %528
  %530 = urem i32 %529, 2
  %531 = icmp eq i32 %530, 0
  %532 = icmp slt i32 %527, 10
  %533 = or i1 %531, %532
  br i1 %533, label %originalBBpart2120, label %originalBB118alteredBB

originalBBpart2120:                               ; preds = %originalBB118
  br label %534, !dbg !6148

534:                                              ; preds = %originalBBpart2120, %originalBBpart249
  %535 = load i32, i32* @x.113
  %536 = load i32, i32* @y.114
  %537 = sub i32 %535, 1
  %538 = mul i32 %535, %537
  %539 = urem i32 %538, 2
  %540 = icmp eq i32 %539, 0
  %541 = icmp slt i32 %536, 10
  %542 = or i1 %540, %541
  br i1 %542, label %originalBB122, label %originalBB122alteredBB

originalBB122:                                    ; preds = %534, %originalBB122alteredBB
  %543 = load i8**, i8*** %18, align 8, !dbg !6149
  %544 = getelementptr inbounds i8*, i8** %543, i32 1, !dbg !6149
  store i8** %544, i8*** %18, align 8, !dbg !6149
  %545 = load i32, i32* @x.113
  %546 = load i32, i32* @y.114
  %547 = sub i32 %545, 1
  %548 = mul i32 %545, %547
  %549 = urem i32 %548, 2
  %550 = icmp eq i32 %549, 0
  %551 = icmp slt i32 %546, 10
  %552 = or i1 %550, %551
  br i1 %552, label %originalBBpart2124, label %originalBB122alteredBB

originalBBpart2124:                               ; preds = %originalBB122
  br label %167, !dbg !6150, !llvm.loop !6151

553:                                              ; preds = %originalBBpart241
  %554 = load i32, i32* @x.113
  %555 = load i32, i32* @y.114
  %556 = sub i32 %554, 1
  %557 = mul i32 %554, %556
  %558 = urem i32 %557, 2
  %559 = icmp eq i32 %558, 0
  %560 = icmp slt i32 %555, 10
  %561 = or i1 %559, %560
  br i1 %561, label %originalBB126, label %originalBB126alteredBB

originalBB126:                                    ; preds = %553, %originalBB126alteredBB
  %562 = load i32, i32* @x.113
  %563 = load i32, i32* @y.114
  %564 = sub i32 %562, 1
  %565 = mul i32 %562, %564
  %566 = urem i32 %565, 2
  %567 = icmp eq i32 %566, 0
  %568 = icmp slt i32 %563, 10
  %569 = or i1 %567, %568
  br i1 %569, label %originalBBpart2128, label %originalBB126alteredBB

originalBBpart2128:                               ; preds = %originalBB126
  br label %109, !dbg !6055, !llvm.loop !6153

570:                                              ; preds = %originalBBpart233
  %571 = load i32, i32* @x.113
  %572 = load i32, i32* @y.114
  %573 = sub i32 %571, 1
  %574 = mul i32 %571, %573
  %575 = urem i32 %574, 2
  %576 = icmp eq i32 %575, 0
  %577 = icmp slt i32 %572, 10
  %578 = or i1 %576, %577
  br i1 %578, label %originalBB130, label %originalBB130alteredBB

originalBB130:                                    ; preds = %570, %originalBB130alteredBB
  %579 = call i32* @__errno_location() #15, !dbg !6155
  %580 = load i32, i32* %579, align 4, !dbg !6155
  %581 = icmp ne i32 %580, 0, !dbg !6157
  %582 = load i32, i32* @x.113
  %583 = load i32, i32* @y.114
  %584 = sub i32 %582, 1
  %585 = mul i32 %582, %584
  %586 = urem i32 %585, 2
  %587 = icmp eq i32 %586, 0
  %588 = icmp slt i32 %583, 10
  %589 = or i1 %587, %588
  br i1 %589, label %originalBBpart2132, label %originalBB130alteredBB

originalBBpart2132:                               ; preds = %originalBB130
  br i1 %581, label %590, label %607, !dbg !6158

590:                                              ; preds = %originalBBpart2132
  %591 = load i32, i32* @x.113
  %592 = load i32, i32* @y.114
  %593 = sub i32 %591, 1
  %594 = mul i32 %591, %593
  %595 = urem i32 %594, 2
  %596 = icmp eq i32 %595, 0
  %597 = icmp slt i32 %592, 10
  %598 = or i1 %596, %597
  br i1 %598, label %originalBB134, label %originalBB134alteredBB

originalBB134:                                    ; preds = %590, %originalBB134alteredBB
  store i32 -1, i32* %17, align 4, !dbg !6159
  %599 = load i32, i32* @x.113
  %600 = load i32, i32* @y.114
  %601 = sub i32 %599, 1
  %602 = mul i32 %599, %601
  %603 = urem i32 %602, 2
  %604 = icmp eq i32 %603, 0
  %605 = icmp slt i32 %600, 10
  %606 = or i1 %604, %605
  br i1 %606, label %originalBBpart2136, label %originalBB134alteredBB

originalBBpart2136:                               ; preds = %originalBB134
  br label %607, !dbg !6160

607:                                              ; preds = %originalBBpart2136, %originalBBpart2132
  %608 = load i32, i32* @x.113
  %609 = load i32, i32* @y.114
  %610 = sub i32 %608, 1
  %611 = mul i32 %608, %610
  %612 = urem i32 %611, 2
  %613 = icmp eq i32 %612, 0
  %614 = icmp slt i32 %609, 10
  %615 = or i1 %613, %614
  br i1 %615, label %originalBB138, label %originalBB138alteredBB

originalBB138:                                    ; preds = %607, %originalBB138alteredBB
  %616 = load i32, i32* @x.113
  %617 = load i32, i32* @y.114
  %618 = sub i32 %616, 1
  %619 = mul i32 %616, %618
  %620 = urem i32 %619, 2
  %621 = icmp eq i32 %620, 0
  %622 = icmp slt i32 %617, 10
  %623 = or i1 %621, %622
  br i1 %623, label %originalBBpart2140, label %originalBB138alteredBB

originalBBpart2140:                               ; preds = %originalBB138
  br label %624, !dbg !6161

624:                                              ; preds = %originalBBpart2140, %originalBBpart2107, %originalBBpart295
  call void @llvm.dbg.label(metadata !6162), !dbg !6163
  call void @llvm.dbg.declare(metadata i32* %21, metadata !6164, metadata !DIExpression()), !dbg !6166
  %625 = load i32, i32* @x.113
  %626 = load i32, i32* @y.114
  %627 = sub i32 %625, 1
  %628 = mul i32 %625, %627
  %629 = urem i32 %628, 2
  %630 = icmp eq i32 %629, 0
  %631 = icmp slt i32 %626, 10
  %632 = or i1 %630, %631
  br i1 %632, label %originalBB142, label %originalBB142alteredBB

originalBB142:                                    ; preds = %624, %originalBB142alteredBB
  %633 = call i32* @__errno_location() #15, !dbg !6167
  %634 = load i32, i32* %633, align 4, !dbg !6167
  store i32 %634, i32* %21, align 4, !dbg !6166
  call void @endgrent(), !dbg !6168
  %635 = load i32, i32* %21, align 4, !dbg !6169
  %636 = call i32* @__errno_location() #15, !dbg !6170
  store i32 %635, i32* %636, align 4, !dbg !6171
  %637 = load i32, i32* %17, align 4, !dbg !6172
  %638 = load i32, i32* @x.113
  %639 = load i32, i32* @y.114
  %640 = sub i32 %638, 1
  %641 = mul i32 %638, %640
  %642 = urem i32 %641, 2
  %643 = icmp eq i32 %642, 0
  %644 = icmp slt i32 %639, 10
  %645 = or i1 %643, %644
  br i1 %645, label %originalBBpart2144, label %originalBB142alteredBB

originalBBpart2144:                               ; preds = %originalBB142
  ret i32 %637, !dbg !6173

originalBBalteredBB:                              ; preds = %originalBB, %4
  %646 = alloca i32, align 4
  %647 = alloca i32*, align 8
  %648 = alloca i8*, align 8
  %649 = alloca i32, align 4
  %650 = alloca i32, align 4
  %651 = alloca i8**, align 8
  %652 = alloca %struct.group*, align 8
  %653 = alloca i32, align 4
  %654 = alloca i32, align 4
  store i32 %0, i32* %646, align 4
  call void @llvm.dbg.declare(metadata i32* %646, metadata !6174, metadata !DIExpression()), !dbg !6030
  store i32* %1, i32** %647, align 8
  call void @llvm.dbg.declare(metadata i32** %647, metadata !6177, metadata !DIExpression()), !dbg !6032
  store i8* %2, i8** %648, align 8
  call void @llvm.dbg.declare(metadata i8** %648, metadata !6178, metadata !DIExpression()), !dbg !6034
  store i32 %3, i32* %649, align 4
  call void @llvm.dbg.declare(metadata i32* %649, metadata !6179, metadata !DIExpression()), !dbg !6036
  call void @llvm.dbg.declare(metadata i32* %650, metadata !6180, metadata !DIExpression()), !dbg !6038
  store i32 0, i32* %650, align 4, !dbg !6038
  %655 = load i32, i32* %649, align 4, !dbg !6039
  %656 = icmp ne i32 %655, -1, !dbg !6041
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %32
  %657 = load i32, i32* %13, align 4, !dbg !6043
  %658 = icmp ne i32 %657, 0, !dbg !6046
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %51
  %659 = load i32, i32* %16, align 4, !dbg !6048
  %660 = load i32*, i32** %14, align 8, !dbg !6049
  %661 = load i32, i32* %17, align 4, !dbg !6050
  %662 = sext i32 %661 to i64, !dbg !6049
  %663 = getelementptr inbounds i32, i32* %660, i64 %662, !dbg !6049
  store i32 %659, i32* %663, align 4, !dbg !6051
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %73
  %664 = load i32, i32* %17, align 4, !dbg !6052
  %_ = sub i32 0, %664
  %gen = add i32 %_, 1
  %_11 = shl i32 %664, 1
  %_12 = shl i32 %664, 1
  %_13 = sub i32 %664, 1
  %gen14 = mul i32 %_13, 1
  %_15 = sub i32 0, %664
  %gen16 = add i32 %_15, 1
  %_17 = shl i32 %664, 1
  %_18 = sub i32 0, %664
  %gen19 = add i32 %_18, 1
  %665 = add nsw i32 %664, 1, !dbg !6052
  store i32 %665, i32* %17, align 4, !dbg !6052
  br label %originalBB10

originalBB23alteredBB:                            ; preds = %originalBB23, %92
  call void @setgrent(), !dbg !6054
  br label %originalBB23

originalBB27alteredBB:                            ; preds = %originalBB27, %109
  %666 = call i32* @__errno_location() #15, !dbg !6068
  store i32 0, i32* %666, align 4, !dbg !6069
  %667 = call %struct.group* @getgrent(), !dbg !6070
  store %struct.group* %667, %struct.group** %19, align 8, !dbg !6071
  %668 = load %struct.group*, %struct.group** %19, align 8, !dbg !6072
  %669 = icmp eq %struct.group* %668, null, !dbg !6074
  br label %originalBB27

originalBB31alteredBB:                            ; preds = %originalBB31, %130
  br label %originalBB31

originalBB35alteredBB:                            ; preds = %originalBB35, %147
  %670 = load %struct.group*, %struct.group** %19, align 8, !dbg !6077
  %671 = getelementptr inbounds %struct.group, %struct.group* %670, i32 0, i32 3, !dbg !6079
  %672 = load i8**, i8*** %671, align 8, !dbg !6079
  store i8** %672, i8*** %18, align 8, !dbg !6080
  br label %originalBB35

originalBB39alteredBB:                            ; preds = %originalBB39, %167
  %673 = load i8**, i8*** %18, align 8, !dbg !6082
  %674 = load i8*, i8** %673, align 8, !dbg !6084
  %675 = icmp ne i8* %674, null, !dbg !6085
  br label %originalBB39

originalBB43alteredBB:                            ; preds = %originalBB43, %187
  %676 = load i8*, i8** %15, align 8, !dbg !6089
  %677 = load i8**, i8*** %18, align 8, !dbg !6089
  %678 = load i8*, i8** %677, align 8, !dbg !6089
  %679 = call i32 @strcmp(i8* %676, i8* %678) #13, !dbg !6089
  %680 = icmp eq i32 %679, 0, !dbg !6089
  br label %originalBB43

originalBB47alteredBB:                            ; preds = %originalBB47, %209
  br label %originalBB47

originalBB51alteredBB:                            ; preds = %originalBB51, %226
  store i32 0, i32* %20, align 4, !dbg !6093
  br label %originalBB51

originalBB55alteredBB:                            ; preds = %originalBB55, %243
  %681 = load i32, i32* %20, align 4, !dbg !6096
  %682 = load i32, i32* %17, align 4, !dbg !6098
  %683 = icmp slt i32 %681, %682, !dbg !6099
  br label %originalBB55

originalBB59alteredBB:                            ; preds = %originalBB59, %263
  %684 = load i32*, i32** %14, align 8, !dbg !6101
  %685 = icmp ne i32* %684, null, !dbg !6101
  br label %originalBB59

originalBB63alteredBB:                            ; preds = %originalBB63, %282
  %686 = load i32*, i32** %14, align 8, !dbg !6104
  %687 = load i32, i32* %20, align 4, !dbg !6105
  %688 = sext i32 %687 to i64, !dbg !6104
  %689 = getelementptr inbounds i32, i32* %686, i64 %688, !dbg !6104
  %690 = load i32, i32* %689, align 4, !dbg !6104
  %691 = load %struct.group*, %struct.group** %19, align 8, !dbg !6106
  %692 = getelementptr inbounds %struct.group, %struct.group* %691, i32 0, i32 2, !dbg !6107
  %693 = load i32, i32* %692, align 8, !dbg !6107
  %694 = icmp eq i32 %690, %693, !dbg !6108
  br label %originalBB63

originalBB67alteredBB:                            ; preds = %originalBB67, %308
  br label %originalBB67

originalBB71alteredBB:                            ; preds = %originalBB71, %325
  br label %originalBB71

originalBB75alteredBB:                            ; preds = %originalBB75, %342
  %695 = load i32, i32* %20, align 4, !dbg !6111
  %_76 = sub i32 0, %695
  %gen77 = add i32 %_76, 1
  %696 = add nsw i32 %695, 1, !dbg !6111
  store i32 %696, i32* %20, align 4, !dbg !6111
  br label %originalBB75

originalBB81alteredBB:                            ; preds = %originalBB81, %361
  %697 = load i32, i32* %20, align 4, !dbg !6115
  %698 = load i32, i32* %17, align 4, !dbg !6117
  %699 = icmp eq i32 %697, %698, !dbg !6118
  br label %originalBB81

originalBB85alteredBB:                            ; preds = %originalBB85, %381
  %700 = load i32, i32* %13, align 4, !dbg !6120
  %701 = icmp ne i32 %700, 0, !dbg !6123
  br label %originalBB85

originalBB89alteredBB:                            ; preds = %originalBB89, %400
  %702 = load i32, i32* %17, align 4, !dbg !6125
  %703 = load i32, i32* %13, align 4, !dbg !6128
  %704 = icmp sge i32 %702, %703, !dbg !6129
  br label %originalBB89

originalBB93alteredBB:                            ; preds = %originalBB93, %420
  br label %originalBB93

originalBB97alteredBB:                            ; preds = %originalBB97, %437
  %705 = load %struct.group*, %struct.group** %19, align 8, !dbg !6132
  %706 = getelementptr inbounds %struct.group, %struct.group* %705, i32 0, i32 2, !dbg !6133
  %707 = load i32, i32* %706, align 8, !dbg !6133
  %708 = load i32*, i32** %14, align 8, !dbg !6134
  %709 = load i32, i32* %17, align 4, !dbg !6135
  %710 = sext i32 %709 to i64, !dbg !6134
  %711 = getelementptr inbounds i32, i32* %708, i64 %710, !dbg !6134
  store i32 %707, i32* %711, align 4, !dbg !6136
  br label %originalBB97

originalBB101alteredBB:                           ; preds = %originalBB101, %461
  %712 = load i32, i32* %17, align 4, !dbg !6138
  %713 = icmp eq i32 %712, 2147483647, !dbg !6140
  br label %originalBB101

originalBB105alteredBB:                           ; preds = %originalBB105, %480
  %714 = call i32* @__errno_location() #15, !dbg !6142
  store i32 75, i32* %714, align 4, !dbg !6144
  br label %originalBB105

originalBB109alteredBB:                           ; preds = %originalBB109, %498
  %715 = load i32, i32* %17, align 4, !dbg !6146
  %_110 = shl i32 %715, 1
  %_111 = shl i32 %715, 1
  %_112 = sub i32 %715, 1
  %gen113 = mul i32 %_112, 1
  %_114 = shl i32 %715, 1
  %716 = add nsw i32 %715, 1, !dbg !6146
  store i32 %716, i32* %17, align 4, !dbg !6146
  br label %originalBB109

originalBB118alteredBB:                           ; preds = %originalBB118, %517
  br label %originalBB118

originalBB122alteredBB:                           ; preds = %originalBB122, %534
  %717 = load i8**, i8*** %18, align 8, !dbg !6149
  %718 = getelementptr inbounds i8*, i8** %717, i32 1, !dbg !6149
  store i8** %718, i8*** %18, align 8, !dbg !6149
  br label %originalBB122

originalBB126alteredBB:                           ; preds = %originalBB126, %553
  br label %originalBB126

originalBB130alteredBB:                           ; preds = %originalBB130, %570
  %719 = call i32* @__errno_location() #15, !dbg !6155
  %720 = load i32, i32* %719, align 4, !dbg !6155
  %721 = icmp ne i32 %720, 0, !dbg !6157
  br label %originalBB130

originalBB134alteredBB:                           ; preds = %originalBB134, %590
  store i32 -1, i32* %17, align 4, !dbg !6159
  br label %originalBB134

originalBB138alteredBB:                           ; preds = %originalBB138, %607
  br label %originalBB138

originalBB142alteredBB:                           ; preds = %originalBB142, %624
  %722 = call i32* @__errno_location() #15, !dbg !6167
  %723 = load i32, i32* %722, align 4, !dbg !6167
  store i32 %723, i32* %21, align 4, !dbg !6166
  call void @endgrent(), !dbg !6168
  %724 = load i32, i32* %21, align 4, !dbg !6169
  %725 = call i32* @__errno_location() #15, !dbg !6170
  store i32 %724, i32* %725, align 4, !dbg !6171
  %726 = load i32, i32* %17, align 4, !dbg !6172
  br label %originalBB142
}

declare dso_local void @setgrent() #3

declare dso_local %struct.group* @getgrent() #3

define private i32 @controle(i8*, i32) {
  %3 = load i32, i32* @x.115
  %4 = load i32, i32* @y.116
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = load i32, i32* @inVal0
  %12 = icmp sgt i32 %11, 0
  %13 = load i32, i32* @x.115
  %14 = load i32, i32* @y.116
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %12, label %41, label %21

21:                                               ; preds = %originalBBpart2
  %22 = load i32, i32* @x.115
  %23 = load i32, i32* @y.116
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %21, %originalBB1alteredBB
  call void @srand(i32 %1)
  %30 = call i32 @rand()
  %31 = srem i32 %30, 50000
  %32 = add i32 %31, 2
  %33 = load i32, i32* @x.115
  %34 = load i32, i32* @y.116
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBBpart210, label %originalBB1alteredBB

originalBBpart210:                                ; preds = %originalBB1
  ret i32 %32

41:                                               ; preds = %originalBBpart2
  %42 = load i32, i32* @x.115
  %43 = load i32, i32* @y.116
  %44 = sub i32 %42, 1
  %45 = mul i32 %42, %44
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %47, %48
  br i1 %49, label %originalBB12, label %originalBB12alteredBB

originalBB12:                                     ; preds = %41, %originalBB12alteredBB
  %50 = getelementptr inbounds [1 x i8], [1 x i8]* @.compVal2, i32 0, i32 0
  %51 = call i32 @strcmp(i8* %50, i8* %0)
  %52 = icmp eq i32 %51, 0
  %53 = load i32, i32* @x.115
  %54 = load i32, i32* @y.116
  %55 = sub i32 %53, 1
  %56 = mul i32 %53, %55
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %54, 10
  %60 = or i1 %58, %59
  br i1 %60, label %originalBBpart214, label %originalBB12alteredBB

originalBBpart214:                                ; preds = %originalBB12
  br i1 %52, label %61, label %96

61:                                               ; preds = %originalBBpart214
  %62 = load i32, i32* @x.115
  %63 = load i32, i32* @y.116
  %64 = sub i32 %62, 1
  %65 = mul i32 %62, %64
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %63, 10
  %69 = or i1 %67, %68
  br i1 %69, label %originalBB16, label %originalBB16alteredBB

originalBB16:                                     ; preds = %61, %originalBB16alteredBB
  %70 = icmp eq i32 %1, 0
  %71 = load i32, i32* @x.115
  %72 = load i32, i32* @y.116
  %73 = sub i32 %71, 1
  %74 = mul i32 %71, %73
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %72, 10
  %78 = or i1 %76, %77
  br i1 %78, label %originalBBpart218, label %originalBB16alteredBB

originalBBpart218:                                ; preds = %originalBB16
  br i1 %70, label %79, label %96

79:                                               ; preds = %originalBBpart218
  %80 = load i32, i32* @x.115
  %81 = load i32, i32* @y.116
  %82 = sub i32 %80, 1
  %83 = mul i32 %80, %82
  %84 = urem i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %81, 10
  %87 = or i1 %85, %86
  br i1 %87, label %originalBB20, label %originalBB20alteredBB

originalBB20:                                     ; preds = %79, %originalBB20alteredBB
  %88 = load i32, i32* @x.115
  %89 = load i32, i32* @y.116
  %90 = sub i32 %88, 1
  %91 = mul i32 %88, %90
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %89, 10
  %95 = or i1 %93, %94
  br i1 %95, label %originalBBpart222, label %originalBB20alteredBB

originalBBpart222:                                ; preds = %originalBB20
  ret i32 5

96:                                               ; preds = %originalBBpart218, %originalBBpart214
  %97 = load i32, i32* @x.115
  %98 = load i32, i32* @y.116
  %99 = sub i32 %97, 1
  %100 = mul i32 %97, %99
  %101 = urem i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %98, 10
  %104 = or i1 %102, %103
  br i1 %104, label %originalBB24, label %originalBB24alteredBB

originalBB24:                                     ; preds = %96, %originalBB24alteredBB
  %105 = getelementptr inbounds [4 x i8], [4 x i8]* @.compVal1, i32 0, i32 0
  %106 = call i32 @strcmp(i8* %105, i8* %0)
  %107 = icmp eq i32 %106, 0
  %108 = load i32, i32* @x.115
  %109 = load i32, i32* @y.116
  %110 = sub i32 %108, 1
  %111 = mul i32 %108, %110
  %112 = urem i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %109, 10
  %115 = or i1 %113, %114
  br i1 %115, label %originalBBpart226, label %originalBB24alteredBB

originalBBpart226:                                ; preds = %originalBB24
  br i1 %107, label %116, label %151

116:                                              ; preds = %originalBBpart226
  %117 = load i32, i32* @x.115
  %118 = load i32, i32* @y.116
  %119 = sub i32 %117, 1
  %120 = mul i32 %117, %119
  %121 = urem i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = icmp slt i32 %118, 10
  %124 = or i1 %122, %123
  br i1 %124, label %originalBB28, label %originalBB28alteredBB

originalBB28:                                     ; preds = %116, %originalBB28alteredBB
  %125 = icmp eq i32 %1, 43
  %126 = load i32, i32* @x.115
  %127 = load i32, i32* @y.116
  %128 = sub i32 %126, 1
  %129 = mul i32 %126, %128
  %130 = urem i32 %129, 2
  %131 = icmp eq i32 %130, 0
  %132 = icmp slt i32 %127, 10
  %133 = or i1 %131, %132
  br i1 %133, label %originalBBpart230, label %originalBB28alteredBB

originalBBpart230:                                ; preds = %originalBB28
  br i1 %125, label %134, label %151

134:                                              ; preds = %originalBBpart230
  %135 = load i32, i32* @x.115
  %136 = load i32, i32* @y.116
  %137 = sub i32 %135, 1
  %138 = mul i32 %135, %137
  %139 = urem i32 %138, 2
  %140 = icmp eq i32 %139, 0
  %141 = icmp slt i32 %136, 10
  %142 = or i1 %140, %141
  br i1 %142, label %originalBB32, label %originalBB32alteredBB

originalBB32:                                     ; preds = %134, %originalBB32alteredBB
  %143 = load i32, i32* @x.115
  %144 = load i32, i32* @y.116
  %145 = sub i32 %143, 1
  %146 = mul i32 %143, %145
  %147 = urem i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = icmp slt i32 %144, 10
  %150 = or i1 %148, %149
  br i1 %150, label %originalBBpart234, label %originalBB32alteredBB

originalBBpart234:                                ; preds = %originalBB32
  ret i32 3

151:                                              ; preds = %originalBBpart230, %originalBBpart226
  %152 = load i32, i32* @x.115
  %153 = load i32, i32* @y.116
  %154 = sub i32 %152, 1
  %155 = mul i32 %152, %154
  %156 = urem i32 %155, 2
  %157 = icmp eq i32 %156, 0
  %158 = icmp slt i32 %153, 10
  %159 = or i1 %157, %158
  br i1 %159, label %originalBB36, label %originalBB36alteredBB

originalBB36:                                     ; preds = %151, %originalBB36alteredBB
  %160 = getelementptr inbounds [2 x i8], [2 x i8]* @.compVal0, i32 0, i32 0
  %161 = call i32 @strcmp(i8* %160, i8* %0)
  %162 = icmp eq i32 %161, 0
  %163 = load i32, i32* @x.115
  %164 = load i32, i32* @y.116
  %165 = sub i32 %163, 1
  %166 = mul i32 %163, %165
  %167 = urem i32 %166, 2
  %168 = icmp eq i32 %167, 0
  %169 = icmp slt i32 %164, 10
  %170 = or i1 %168, %169
  br i1 %170, label %originalBBpart238, label %originalBB36alteredBB

originalBBpart238:                                ; preds = %originalBB36
  br i1 %162, label %171, label %206

171:                                              ; preds = %originalBBpart238
  %172 = load i32, i32* @x.115
  %173 = load i32, i32* @y.116
  %174 = sub i32 %172, 1
  %175 = mul i32 %172, %174
  %176 = urem i32 %175, 2
  %177 = icmp eq i32 %176, 0
  %178 = icmp slt i32 %173, 10
  %179 = or i1 %177, %178
  br i1 %179, label %originalBB40, label %originalBB40alteredBB

originalBB40:                                     ; preds = %171, %originalBB40alteredBB
  %180 = icmp eq i32 %1, -1
  %181 = load i32, i32* @x.115
  %182 = load i32, i32* @y.116
  %183 = sub i32 %181, 1
  %184 = mul i32 %181, %183
  %185 = urem i32 %184, 2
  %186 = icmp eq i32 %185, 0
  %187 = icmp slt i32 %182, 10
  %188 = or i1 %186, %187
  br i1 %188, label %originalBBpart242, label %originalBB40alteredBB

originalBBpart242:                                ; preds = %originalBB40
  br i1 %180, label %189, label %206

189:                                              ; preds = %originalBBpart242
  %190 = load i32, i32* @x.115
  %191 = load i32, i32* @y.116
  %192 = sub i32 %190, 1
  %193 = mul i32 %190, %192
  %194 = urem i32 %193, 2
  %195 = icmp eq i32 %194, 0
  %196 = icmp slt i32 %191, 10
  %197 = or i1 %195, %196
  br i1 %197, label %originalBB44, label %originalBB44alteredBB

originalBB44:                                     ; preds = %189, %originalBB44alteredBB
  %198 = load i32, i32* @x.115
  %199 = load i32, i32* @y.116
  %200 = sub i32 %198, 1
  %201 = mul i32 %198, %200
  %202 = urem i32 %201, 2
  %203 = icmp eq i32 %202, 0
  %204 = icmp slt i32 %199, 10
  %205 = or i1 %203, %204
  br i1 %205, label %originalBBpart246, label %originalBB44alteredBB

originalBBpart246:                                ; preds = %originalBB44
  ret i32 3

206:                                              ; preds = %originalBBpart242, %originalBBpart238
  %207 = load i32, i32* @x.115
  %208 = load i32, i32* @y.116
  %209 = sub i32 %207, 1
  %210 = mul i32 %207, %209
  %211 = urem i32 %210, 2
  %212 = icmp eq i32 %211, 0
  %213 = icmp slt i32 %208, 10
  %214 = or i1 %212, %213
  br i1 %214, label %originalBB48, label %originalBB48alteredBB

originalBB48:                                     ; preds = %206, %originalBB48alteredBB
  %215 = getelementptr inbounds [2 x i8], [2 x i8]* @.compVal0, i32 0, i32 0
  %216 = call i32 @strcmp(i8* %215, i8* %0)
  %217 = icmp eq i32 %216, 0
  %218 = load i32, i32* @x.115
  %219 = load i32, i32* @y.116
  %220 = sub i32 %218, 1
  %221 = mul i32 %218, %220
  %222 = urem i32 %221, 2
  %223 = icmp eq i32 %222, 0
  %224 = icmp slt i32 %219, 10
  %225 = or i1 %223, %224
  br i1 %225, label %originalBBpart250, label %originalBB48alteredBB

originalBBpart250:                                ; preds = %originalBB48
  br i1 %217, label %226, label %261

226:                                              ; preds = %originalBBpart250
  %227 = load i32, i32* @x.115
  %228 = load i32, i32* @y.116
  %229 = sub i32 %227, 1
  %230 = mul i32 %227, %229
  %231 = urem i32 %230, 2
  %232 = icmp eq i32 %231, 0
  %233 = icmp slt i32 %228, 10
  %234 = or i1 %232, %233
  br i1 %234, label %originalBB52, label %originalBB52alteredBB

originalBB52:                                     ; preds = %226, %originalBB52alteredBB
  %235 = icmp eq i32 %1, 0
  %236 = load i32, i32* @x.115
  %237 = load i32, i32* @y.116
  %238 = sub i32 %236, 1
  %239 = mul i32 %236, %238
  %240 = urem i32 %239, 2
  %241 = icmp eq i32 %240, 0
  %242 = icmp slt i32 %237, 10
  %243 = or i1 %241, %242
  br i1 %243, label %originalBBpart254, label %originalBB52alteredBB

originalBBpart254:                                ; preds = %originalBB52
  br i1 %235, label %244, label %261

244:                                              ; preds = %originalBBpart254
  %245 = load i32, i32* @x.115
  %246 = load i32, i32* @y.116
  %247 = sub i32 %245, 1
  %248 = mul i32 %245, %247
  %249 = urem i32 %248, 2
  %250 = icmp eq i32 %249, 0
  %251 = icmp slt i32 %246, 10
  %252 = or i1 %250, %251
  br i1 %252, label %originalBB56, label %originalBB56alteredBB

originalBB56:                                     ; preds = %244, %originalBB56alteredBB
  %253 = load i32, i32* @x.115
  %254 = load i32, i32* @y.116
  %255 = sub i32 %253, 1
  %256 = mul i32 %253, %255
  %257 = urem i32 %256, 2
  %258 = icmp eq i32 %257, 0
  %259 = icmp slt i32 %254, 10
  %260 = or i1 %258, %259
  br i1 %260, label %originalBBpart258, label %originalBB56alteredBB

originalBBpart258:                                ; preds = %originalBB56
  ret i32 5

261:                                              ; preds = %originalBBpart254, %originalBBpart250
  %262 = load i32, i32* @x.115
  %263 = load i32, i32* @y.116
  %264 = sub i32 %262, 1
  %265 = mul i32 %262, %264
  %266 = urem i32 %265, 2
  %267 = icmp eq i32 %266, 0
  %268 = icmp slt i32 %263, 10
  %269 = or i1 %267, %268
  br i1 %269, label %originalBB60, label %originalBB60alteredBB

originalBB60:                                     ; preds = %261, %originalBB60alteredBB
  call void @srand(i32 %1)
  %270 = call i32 @rand()
  %271 = srem i32 %270, 50000
  %272 = add i32 %271, 2
  %273 = load i32, i32* @x.115
  %274 = load i32, i32* @y.116
  %275 = sub i32 %273, 1
  %276 = mul i32 %273, %275
  %277 = urem i32 %276, 2
  %278 = icmp eq i32 %277, 0
  %279 = icmp slt i32 %274, 10
  %280 = or i1 %278, %279
  br i1 %280, label %originalBBpart283, label %originalBB60alteredBB

originalBBpart283:                                ; preds = %originalBB60
  ret i32 %272

originalBBalteredBB:                              ; preds = %originalBB, %2
  %281 = load i32, i32* @inVal0
  %282 = icmp sgt i32 %281, 0
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %21
  call void @srand(i32 %1)
  %283 = call i32 @rand()
  %_ = sub i32 0, %283
  %gen = add i32 %_, 50000
  %_2 = shl i32 %283, 50000
  %_3 = sub i32 %283, 50000
  %gen4 = mul i32 %_3, 50000
  %_5 = shl i32 %283, 50000
  %284 = srem i32 %283, 50000
  %_6 = shl i32 %284, 2
  %_7 = sub i32 0, %284
  %gen8 = add i32 %_7, 2
  %285 = add i32 %284, 2
  br label %originalBB1

originalBB12alteredBB:                            ; preds = %originalBB12, %41
  %286 = getelementptr inbounds [1 x i8], [1 x i8]* @.compVal2, i32 0, i32 0
  %287 = call i32 @strcmp(i8* %286, i8* %0)
  %288 = icmp eq i32 %287, 0
  br label %originalBB12

originalBB16alteredBB:                            ; preds = %originalBB16, %61
  %289 = icmp eq i32 %1, 0
  br label %originalBB16

originalBB20alteredBB:                            ; preds = %originalBB20, %79
  br label %originalBB20

originalBB24alteredBB:                            ; preds = %originalBB24, %96
  %290 = getelementptr inbounds [4 x i8], [4 x i8]* @.compVal1, i32 0, i32 0
  %291 = call i32 @strcmp(i8* %290, i8* %0)
  %292 = icmp eq i32 %291, 0
  br label %originalBB24

originalBB28alteredBB:                            ; preds = %originalBB28, %116
  %293 = icmp eq i32 %1, 43
  br label %originalBB28

originalBB32alteredBB:                            ; preds = %originalBB32, %134
  br label %originalBB32

originalBB36alteredBB:                            ; preds = %originalBB36, %151
  %294 = getelementptr inbounds [2 x i8], [2 x i8]* @.compVal0, i32 0, i32 0
  %295 = call i32 @strcmp(i8* %294, i8* %0)
  %296 = icmp eq i32 %295, 0
  br label %originalBB36

originalBB40alteredBB:                            ; preds = %originalBB40, %171
  %297 = icmp eq i32 %1, -1
  br label %originalBB40

originalBB44alteredBB:                            ; preds = %originalBB44, %189
  br label %originalBB44

originalBB48alteredBB:                            ; preds = %originalBB48, %206
  %298 = getelementptr inbounds [2 x i8], [2 x i8]* @.compVal0, i32 0, i32 0
  %299 = call i32 @strcmp(i8* %298, i8* %0)
  %300 = icmp eq i32 %299, 0
  br label %originalBB48

originalBB52alteredBB:                            ; preds = %originalBB52, %226
  %301 = icmp eq i32 %1, 0
  br label %originalBB52

originalBB56alteredBB:                            ; preds = %originalBB56, %244
  br label %originalBB56

originalBB60alteredBB:                            ; preds = %originalBB60, %261
  call void @srand(i32 %1)
  %302 = call i32 @rand()
  %_61 = shl i32 %302, 50000
  %_62 = sub i32 %302, 50000
  %gen63 = mul i32 %_62, 50000
  %_64 = sub i32 0, %302
  %gen65 = add i32 %_64, 50000
  %_66 = sub i32 0, %302
  %gen67 = add i32 %_66, 50000
  %_68 = shl i32 %302, 50000
  %_69 = sub i32 %302, 50000
  %gen70 = mul i32 %_69, 50000
  %_71 = sub i32 %302, 50000
  %gen72 = mul i32 %_71, 50000
  %303 = srem i32 %302, 50000
  %_73 = sub i32 %303, 2
  %gen74 = mul i32 %_73, 2
  %_75 = sub i32 0, %303
  %gen76 = add i32 %_75, 2
  %_77 = sub i32 %303, 2
  %gen78 = mul i32 %_77, 2
  %_79 = sub i32 %303, 2
  %gen80 = mul i32 %_79, 2
  %_81 = shl i32 %303, 2
  %304 = add i32 %303, 2
  br label %originalBB60
}

declare void @srand(i32)

declare i32 @rand()

attributes #0 = { noinline noreturn nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { noinline nounwind optnone readonly uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn nounwind }
attributes #13 = { nounwind readonly }
attributes #14 = { noreturn }
attributes #15 = { nounwind readnone }

!llvm.dbg.cu = !{!2, !82, !88, !93, !101, !202, !108, !115, !208, !185, !210, !195, !213, !216, !218, !220, !232, !235, !241, !243, !245, !247, !250, !252, !254, !256, !258, !260}
!llvm.ident = !{!263, !263, !263, !263, !263, !263, !263, !263, !263, !263, !263, !263, !263, !263, !263, !263, !263, !263, !263, !263, !263, !263, !263, !263, !263, !263, !263, !263}
!llvm.module.flags = !{!264, !265, !266, !267, !268}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "longopts", scope: !2, file: !3, line: 75, type: !63, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !9, nameTableKind: None)
!3 = !DIFile(filename: "src/id.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!4 = !{}
!5 = !{!6, !8}
!6 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!7 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!8 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!9 = !{!10, !17, !19, !23, !0, !25, !28, !30, !32, !34, !36, !38, !40, !42, !44, !46, !56}
!10 = !DIGlobalVariableExpression(var: !11, expr: !DIExpression())
!11 = distinct !DIGlobalVariable(name: "ruid", scope: !2, file: !3, line: 64, type: !12, isLocal: true, isDefinition: true)
!12 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !13, line: 79, baseType: !14)
!13 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/types.h", directory: "")
!14 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !15, line: 146, baseType: !16)
!15 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!16 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!17 = !DIGlobalVariableExpression(var: !18, expr: !DIExpression())
!18 = distinct !DIGlobalVariable(name: "euid", scope: !2, file: !3, line: 64, type: !12, isLocal: true, isDefinition: true)
!19 = !DIGlobalVariableExpression(var: !20, expr: !DIExpression())
!20 = distinct !DIGlobalVariable(name: "rgid", scope: !2, file: !3, line: 65, type: !21, isLocal: true, isDefinition: true)
!21 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !13, line: 64, baseType: !22)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !15, line: 147, baseType: !16)
!23 = !DIGlobalVariableExpression(var: !24, expr: !DIExpression())
!24 = distinct !DIGlobalVariable(name: "egid", scope: !2, file: !3, line: 65, type: !21, isLocal: true, isDefinition: true)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "just_context", scope: !2, file: !3, line: 45, type: !27, isLocal: true, isDefinition: true)
!27 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!28 = !DIGlobalVariableExpression(var: !29, expr: !DIExpression())
!29 = distinct !DIGlobalVariable(name: "just_group", scope: !2, file: !3, line: 51, type: !27, isLocal: true, isDefinition: true)
!30 = !DIGlobalVariableExpression(var: !31, expr: !DIExpression())
!31 = distinct !DIGlobalVariable(name: "use_name", scope: !2, file: !3, line: 61, type: !27, isLocal: true, isDefinition: true)
!32 = !DIGlobalVariableExpression(var: !33, expr: !DIExpression())
!33 = distinct !DIGlobalVariable(name: "use_real", scope: !2, file: !3, line: 53, type: !27, isLocal: true, isDefinition: true)
!34 = !DIGlobalVariableExpression(var: !35, expr: !DIExpression())
!35 = distinct !DIGlobalVariable(name: "just_user", scope: !2, file: !3, line: 55, type: !27, isLocal: true, isDefinition: true)
!36 = !DIGlobalVariableExpression(var: !37, expr: !DIExpression())
!37 = distinct !DIGlobalVariable(name: "opt_zero", scope: !2, file: !3, line: 47, type: !27, isLocal: true, isDefinition: true)
!38 = !DIGlobalVariableExpression(var: !39, expr: !DIExpression())
!39 = distinct !DIGlobalVariable(name: "just_group_list", scope: !2, file: !3, line: 49, type: !27, isLocal: true, isDefinition: true)
!40 = !DIGlobalVariableExpression(var: !41, expr: !DIExpression())
!41 = distinct !DIGlobalVariable(name: "context", scope: !2, file: !3, line: 69, type: !6, isLocal: true, isDefinition: true)
!42 = !DIGlobalVariableExpression(var: !43, expr: !DIExpression())
!43 = distinct !DIGlobalVariable(name: "multiple_users", scope: !2, file: !3, line: 59, type: !27, isLocal: true, isDefinition: true)
!44 = !DIGlobalVariableExpression(var: !45, expr: !DIExpression())
!45 = distinct !DIGlobalVariable(name: "ok", scope: !2, file: !3, line: 57, type: !27, isLocal: true, isDefinition: true)
!46 = !DIGlobalVariableExpression(var: !47, expr: !DIExpression())
!47 = distinct !DIGlobalVariable(name: "buf", scope: !48, file: !3, line: 327, type: !53, isLocal: true, isDefinition: true)
!48 = distinct !DISubprogram(name: "uidtostr_ptr", scope: !3, file: !3, line: 325, type: !49, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!49 = !DISubroutineType(types: !50)
!50 = !{!6, !51}
!51 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !52, size: 64)
!52 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12)
!53 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 168, elements: !54)
!54 = !{!55}
!55 = !DISubrange(count: 21)
!56 = !DIGlobalVariableExpression(var: !57, expr: !DIExpression())
!57 = distinct !DIGlobalVariable(name: "buf", scope: !58, file: !3, line: 316, type: !53, isLocal: true, isDefinition: true)
!58 = distinct !DISubprogram(name: "gidtostr_ptr", scope: !3, file: !3, line: 314, type: !59, scopeLine: 315, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!59 = !DISubroutineType(types: !60)
!60 = !{!6, !61}
!61 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !62, size: 64)
!62 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !21)
!63 = !DICompositeType(tag: DW_TAG_array_type, baseType: !64, size: 2560, elements: !76)
!64 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !65)
!65 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !66, line: 50, size: 256, elements: !67)
!66 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/getopt_ext.h", directory: "")
!67 = !{!68, !71, !73, !75}
!68 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !65, file: !66, line: 52, baseType: !69, size: 64)
!69 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !70, size: 64)
!70 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!71 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !65, file: !66, line: 55, baseType: !72, size: 32, offset: 64)
!72 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!73 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !65, file: !66, line: 56, baseType: !74, size: 64, offset: 128)
!74 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !72, size: 64)
!75 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !65, file: !66, line: 57, baseType: !72, size: 32, offset: 192)
!76 = !{!77}
!77 = !DISubrange(count: 10)
!78 = !DIGlobalVariableExpression(var: !79, expr: !DIExpression())
!79 = distinct !DIGlobalVariable(name: "buf", scope: !80, file: !81, line: 96, type: !53, isLocal: true, isDefinition: true)
!80 = distinct !DISubprogram(name: "gidtostr_ptr", scope: !81, file: !81, line: 94, type: !59, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, retainedNodes: !4)
!81 = !DIFile(filename: "src/group-list.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!82 = distinct !DICompileUnit(language: DW_LANG_C99, file: !81, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !83, globals: !85, nameTableKind: None)
!83 = !{!8, !84}
!84 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!85 = !{!78}
!86 = !DIGlobalVariableExpression(var: !87, expr: !DIExpression())
!87 = distinct !DIGlobalVariable(name: "Version", scope: !88, file: !89, line: 2, type: !69, isLocal: false, isDefinition: true)
!88 = distinct !DICompileUnit(language: DW_LANG_C99, file: !89, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, globals: !90, nameTableKind: None)
!89 = !DIFile(filename: "src/version.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!90 = !{!86}
!91 = !DIGlobalVariableExpression(var: !92, expr: !DIExpression())
!92 = distinct !DIGlobalVariable(name: "ignore_EPIPE", scope: !93, file: !98, line: 56, type: !27, isLocal: true, isDefinition: true)
!93 = distinct !DICompileUnit(language: DW_LANG_C99, file: !94, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, globals: !95, nameTableKind: None)
!94 = !DIFile(filename: "./lib/closeout.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!95 = !{!96, !91}
!96 = !DIGlobalVariableExpression(var: !97, expr: !DIExpression())
!97 = distinct !DIGlobalVariable(name: "file_name", scope: !93, file: !98, line: 46, type: !69, isLocal: true, isDefinition: true)
!98 = !DIFile(filename: "lib/closeout.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!99 = !DIGlobalVariableExpression(var: !100, expr: !DIExpression())
!100 = distinct !DIGlobalVariable(name: "exit_failure", scope: !101, file: !104, line: 24, type: !105, isLocal: false, isDefinition: true)
!101 = distinct !DICompileUnit(language: DW_LANG_C99, file: !102, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, globals: !103, nameTableKind: None)
!102 = !DIFile(filename: "./lib/exitfail.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!103 = !{!99}
!104 = !DIFile(filename: "lib/exitfail.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!105 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !72)
!106 = !DIGlobalVariableExpression(var: !107, expr: !DIExpression())
!107 = distinct !DIGlobalVariable(name: "program_name", scope: !108, file: !112, line: 33, type: !69, isLocal: false, isDefinition: true)
!108 = distinct !DICompileUnit(language: DW_LANG_C99, file: !109, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !110, globals: !111, nameTableKind: None)
!109 = !DIFile(filename: "./lib/progname.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!110 = !{!8, !6}
!111 = !{!106}
!112 = !DIFile(filename: "lib/progname.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!113 = !DIGlobalVariableExpression(var: !114, expr: !DIExpression())
!114 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !115, file: !139, line: 116, type: !150, isLocal: true, isDefinition: true)
!115 = distinct !DICompileUnit(language: DW_LANG_C99, file: !116, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !117, retainedTypes: !132, globals: !136, nameTableKind: None)
!116 = !DIFile(filename: "./lib/quotearg.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!117 = !{!118}
!118 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quoting_style", file: !119, line: 32, baseType: !16, size: 32, elements: !120)
!119 = !DIFile(filename: "./lib/quotearg.h", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!120 = !{!121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131}
!121 = !DIEnumerator(name: "literal_quoting_style", value: 0, isUnsigned: true)
!122 = !DIEnumerator(name: "shell_quoting_style", value: 1, isUnsigned: true)
!123 = !DIEnumerator(name: "shell_always_quoting_style", value: 2, isUnsigned: true)
!124 = !DIEnumerator(name: "shell_escape_quoting_style", value: 3, isUnsigned: true)
!125 = !DIEnumerator(name: "shell_escape_always_quoting_style", value: 4, isUnsigned: true)
!126 = !DIEnumerator(name: "c_quoting_style", value: 5, isUnsigned: true)
!127 = !DIEnumerator(name: "c_maybe_quoting_style", value: 6, isUnsigned: true)
!128 = !DIEnumerator(name: "escape_quoting_style", value: 7, isUnsigned: true)
!129 = !DIEnumerator(name: "locale_quoting_style", value: 8, isUnsigned: true)
!130 = !DIEnumerator(name: "clocale_quoting_style", value: 9, isUnsigned: true)
!131 = !DIEnumerator(name: "custom_quoting_style", value: 10, isUnsigned: true)
!132 = !{!72, !133, !134}
!133 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!134 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !135, line: 46, baseType: !84)
!135 = !DIFile(filename: "/usr/lib/llvm-9/lib/clang/9.0.1/include/stddef.h", directory: "")
!136 = !{!137, !144, !148, !113, !160, !165, !172, !174}
!137 = !DIGlobalVariableExpression(var: !138, expr: !DIExpression())
!138 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !115, file: !139, line: 85, type: !140, isLocal: false, isDefinition: true)
!139 = !DIFile(filename: "lib/quotearg.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!140 = !DICompositeType(tag: DW_TAG_array_type, baseType: !141, size: 704, elements: !142)
!141 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !69)
!142 = !{!143}
!143 = !DISubrange(count: 11)
!144 = !DIGlobalVariableExpression(var: !145, expr: !DIExpression())
!145 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !115, file: !139, line: 101, type: !146, isLocal: false, isDefinition: true)
!146 = !DICompositeType(tag: DW_TAG_array_type, baseType: !147, size: 320, elements: !76)
!147 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !118)
!148 = !DIGlobalVariableExpression(var: !149, expr: !DIExpression())
!149 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !115, file: !139, line: 1052, type: !150, isLocal: false, isDefinition: true)
!150 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !139, line: 65, size: 448, elements: !151)
!151 = !{!152, !153, !154, !158, !159}
!152 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !150, file: !139, line: 68, baseType: !118, size: 32)
!153 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !150, file: !139, line: 71, baseType: !72, size: 32, offset: 32)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !150, file: !139, line: 75, baseType: !155, size: 256, offset: 64)
!155 = !DICompositeType(tag: DW_TAG_array_type, baseType: !16, size: 256, elements: !156)
!156 = !{!157}
!157 = !DISubrange(count: 8)
!158 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !150, file: !139, line: 78, baseType: !69, size: 64, offset: 320)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !150, file: !139, line: 81, baseType: !69, size: 64, offset: 384)
!160 = !DIGlobalVariableExpression(var: !161, expr: !DIExpression())
!161 = distinct !DIGlobalVariable(name: "slot0", scope: !115, file: !139, line: 842, type: !162, isLocal: true, isDefinition: true)
!162 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 2048, elements: !163)
!163 = !{!164}
!164 = !DISubrange(count: 256)
!165 = !DIGlobalVariableExpression(var: !166, expr: !DIExpression())
!166 = distinct !DIGlobalVariable(name: "slotvec", scope: !115, file: !139, line: 845, type: !167, isLocal: true, isDefinition: true)
!167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !168, size: 64)
!168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !139, line: 834, size: 128, elements: !169)
!169 = !{!170, !171}
!170 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !168, file: !139, line: 836, baseType: !134, size: 64)
!171 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !168, file: !139, line: 837, baseType: !6, size: 64, offset: 64)
!172 = !DIGlobalVariableExpression(var: !173, expr: !DIExpression())
!173 = distinct !DIGlobalVariable(name: "nslots", scope: !115, file: !139, line: 843, type: !72, isLocal: true, isDefinition: true)
!174 = !DIGlobalVariableExpression(var: !175, expr: !DIExpression())
!175 = distinct !DIGlobalVariable(name: "slotvec0", scope: !115, file: !139, line: 844, type: !168, isLocal: true, isDefinition: true)
!176 = !DIGlobalVariableExpression(var: !177, expr: !DIExpression())
!177 = distinct !DIGlobalVariable(name: "E_bad_spec", scope: !178, file: !179, line: 108, type: !69, isLocal: true, isDefinition: true)
!178 = distinct !DISubprogram(name: "parse_with_separator", scope: !179, file: !179, line: 102, type: !180, scopeLine: 105, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !185, retainedNodes: !4)
!179 = !DIFile(filename: "lib/userspec.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!180 = !DISubroutineType(types: !181)
!181 = !{!69, !69, !69, !182, !183, !184, !184}
!182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12, size: 64)
!183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !21, size: 64)
!184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6, size: 64)
!185 = distinct !DICompileUnit(language: DW_LANG_C99, file: !186, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !187, globals: !188, nameTableKind: None)
!186 = !DIFile(filename: "./lib/userspec.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!187 = !{!8, !12, !21}
!188 = !{!189, !191, !176}
!189 = !DIGlobalVariableExpression(var: !190, expr: !DIExpression())
!190 = distinct !DIGlobalVariable(name: "E_invalid_user", scope: !178, file: !179, line: 106, type: !69, isLocal: true, isDefinition: true)
!191 = !DIGlobalVariableExpression(var: !192, expr: !DIExpression())
!192 = distinct !DIGlobalVariable(name: "E_invalid_group", scope: !178, file: !179, line: 107, type: !69, isLocal: true, isDefinition: true)
!193 = !DIGlobalVariableExpression(var: !194, expr: !DIExpression())
!194 = distinct !DIGlobalVariable(name: "version_etc_copyright", scope: !195, file: !198, line: 26, type: !199, isLocal: false, isDefinition: true)
!195 = distinct !DICompileUnit(language: DW_LANG_C99, file: !196, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, globals: !197, nameTableKind: None)
!196 = !DIFile(filename: "./lib/version-etc-fsf.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!197 = !{!193}
!198 = !DIFile(filename: "lib/version-etc-fsf.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!199 = !DICompositeType(tag: DW_TAG_array_type, baseType: !70, size: 376, elements: !200)
!200 = !{!201}
!201 = !DISubrange(count: 47)
!202 = distinct !DICompileUnit(language: DW_LANG_C99, file: !203, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !204, nameTableKind: None)
!203 = !DIFile(filename: "./lib/umaxtostr.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!204 = !{!205}
!205 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !206, line: 102, baseType: !207)
!206 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!207 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uintmax_t", file: !15, line: 73, baseType: !84)
!208 = distinct !DICompileUnit(language: DW_LANG_C99, file: !209, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, nameTableKind: None)
!209 = !DIFile(filename: "./lib/se-selinux.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!210 = distinct !DICompileUnit(language: DW_LANG_C99, file: !211, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !212, nameTableKind: None)
!211 = !DIFile(filename: "./lib/version-etc.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!212 = !{!8}
!213 = distinct !DICompileUnit(language: DW_LANG_C99, file: !214, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !215, nameTableKind: None)
!214 = !DIFile(filename: "./lib/xmalloc.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!215 = !{!134, !6, !8}
!216 = distinct !DICompileUnit(language: DW_LANG_C99, file: !217, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, nameTableKind: None)
!217 = !DIFile(filename: "./lib/xalloc-die.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!218 = distinct !DICompileUnit(language: DW_LANG_C99, file: !219, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, nameTableKind: None)
!219 = !DIFile(filename: "./lib/xgetgroups.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!220 = distinct !DICompileUnit(language: DW_LANG_C99, file: !221, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !222, retainedTypes: !231, nameTableKind: None)
!221 = !DIFile(filename: "./lib/xstrtoul.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!222 = !{!223}
!223 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "strtol_error", file: !224, line: 25, baseType: !16, size: 32, elements: !225)
!224 = !DIFile(filename: "./lib/xstrtol.h", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!225 = !{!226, !227, !228, !229, !230}
!226 = !DIEnumerator(name: "LONGINT_OK", value: 0, isUnsigned: true)
!227 = !DIEnumerator(name: "LONGINT_OVERFLOW", value: 1, isUnsigned: true)
!228 = !DIEnumerator(name: "LONGINT_INVALID_SUFFIX_CHAR", value: 2, isUnsigned: true)
!229 = !DIEnumerator(name: "LONGINT_INVALID_SUFFIX_CHAR_WITH_OVERFLOW", value: 3, isUnsigned: true)
!230 = !DIEnumerator(name: "LONGINT_INVALID", value: 4, isUnsigned: true)
!231 = !{!72, !133}
!232 = distinct !DICompileUnit(language: DW_LANG_C99, file: !233, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !234, nameTableKind: None)
!233 = !DIFile(filename: "./lib/mbrtowc.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!234 = !{!134}
!235 = distinct !DICompileUnit(language: DW_LANG_C99, file: !236, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !237, nameTableKind: None)
!236 = !DIFile(filename: "./lib/c-strcasecmp.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!237 = !{!238}
!238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !239, size: 64)
!239 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !240)
!240 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!241 = distinct !DICompileUnit(language: DW_LANG_C99, file: !242, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, nameTableKind: None)
!242 = !DIFile(filename: "./lib/close-stream.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!243 = distinct !DICompileUnit(language: DW_LANG_C99, file: !244, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, nameTableKind: None)
!244 = !DIFile(filename: "./lib/hard-locale.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!245 = distinct !DICompileUnit(language: DW_LANG_C99, file: !246, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !212, nameTableKind: None)
!246 = !DIFile(filename: "./lib/localcharset.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!247 = distinct !DICompileUnit(language: DW_LANG_C99, file: !248, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !249, nameTableKind: None)
!248 = !DIFile(filename: "./lib/mgetgroups.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!249 = !{!8, !21, !134}
!250 = distinct !DICompileUnit(language: DW_LANG_C99, file: !251, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !212, nameTableKind: None)
!251 = !DIFile(filename: "./lib/setlocale_null.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!252 = distinct !DICompileUnit(language: DW_LANG_C99, file: !253, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, nameTableKind: None)
!253 = !DIFile(filename: "./lib/fclose.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!254 = distinct !DICompileUnit(language: DW_LANG_C99, file: !255, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !212, nameTableKind: None)
!255 = !DIFile(filename: "./lib/fflush.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!256 = distinct !DICompileUnit(language: DW_LANG_C99, file: !257, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !212, nameTableKind: None)
!257 = !DIFile(filename: "./lib/fseeko.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!258 = distinct !DICompileUnit(language: DW_LANG_C99, file: !259, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, nameTableKind: None)
!259 = !DIFile(filename: "./lib/c-ctype.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!260 = distinct !DICompileUnit(language: DW_LANG_C99, file: !261, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !262, nameTableKind: None)
!261 = !DIFile(filename: "./lib/getugroups.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!262 = !{!21, !8}
!263 = !{!"clang version 9.0.1-12 "}
!264 = !{i32 2, !"Dwarf Version", i32 4}
!265 = !{i32 2, !"Debug Info Version", i32 3}
!266 = !{i32 1, !"wchar_size", i32 4}
!267 = !{i32 1, !"ThinLTO", i32 0}
!268 = !{i32 1, !"EnableSplitLTOUnit", i32 0}
!269 = distinct !DISubprogram(name: "usage", scope: !3, file: !3, line: 90, type: !270, scopeLine: 91, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4)
!270 = !DISubroutineType(types: !271)
!271 = !{null, !72}
!272 = !DILocalVariable(name: "status", arg: 1, scope: !269, file: !3, line: 90, type: !72)
!273 = !DILocation(line: 90, column: 12, scope: !269)
!274 = !DILocation(line: 92, column: 7, scope: !275)
!275 = distinct !DILexicalBlock(scope: !269, file: !3, line: 92, column: 7)
!276 = !DILocation(line: 92, column: 14, scope: !275)
!277 = !DILocation(line: 92, column: 7, scope: !269)
!278 = !DILocation(line: 93, column: 5, scope: !275)
!279 = !DILocation(line: 93, column: 5, scope: !280)
!280 = distinct !DILexicalBlock(scope: !275, file: !3, line: 93, column: 5)
!281 = !DILocation(line: 96, column: 15, scope: !282)
!282 = distinct !DILexicalBlock(scope: !275, file: !3, line: 95, column: 5)
!283 = !DILocation(line: 96, column: 55, scope: !282)
!284 = !DILocation(line: 96, column: 7, scope: !282)
!285 = !DILocation(line: 97, column: 7, scope: !282)
!286 = !DILocation(line: 102, column: 7, scope: !282)
!287 = !DILocation(line: 113, column: 7, scope: !282)
!288 = !DILocation(line: 114, column: 7, scope: !282)
!289 = !DILocation(line: 115, column: 7, scope: !282)
!290 = !DILocation(line: 119, column: 7, scope: !282)
!291 = !DILocation(line: 121, column: 9, scope: !269)
!292 = !DILocation(line: 121, column: 3, scope: !269)
!293 = !DILocalVariable(name: "status", arg: 1, scope: !294, file: !3, line: 90, type: !72)
!294 = distinct !DISubprogram(name: "usage", scope: !3, file: !3, line: 90, type: !270, scopeLine: 91, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !295, retainedNodes: !4)
!295 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !296, nameTableKind: None)
!296 = !{!297, !299, !301, !303, !305, !315, !317, !319, !321, !323, !325, !327, !329, !331, !333, !335, !338}
!297 = !DIGlobalVariableExpression(var: !298, expr: !DIExpression())
!298 = distinct !DIGlobalVariable(name: "ruid", scope: !295, file: !3, line: 64, type: !12, isLocal: true, isDefinition: true)
!299 = !DIGlobalVariableExpression(var: !300, expr: !DIExpression())
!300 = distinct !DIGlobalVariable(name: "euid", scope: !295, file: !3, line: 64, type: !12, isLocal: true, isDefinition: true)
!301 = !DIGlobalVariableExpression(var: !302, expr: !DIExpression())
!302 = distinct !DIGlobalVariable(name: "rgid", scope: !295, file: !3, line: 65, type: !21, isLocal: true, isDefinition: true)
!303 = !DIGlobalVariableExpression(var: !304, expr: !DIExpression())
!304 = distinct !DIGlobalVariable(name: "egid", scope: !295, file: !3, line: 65, type: !21, isLocal: true, isDefinition: true)
!305 = !DIGlobalVariableExpression(var: !306, expr: !DIExpression())
!306 = distinct !DIGlobalVariable(name: "longopts", scope: !295, file: !3, line: 75, type: !307, isLocal: true, isDefinition: true)
!307 = !DICompositeType(tag: DW_TAG_array_type, baseType: !308, size: 2560, elements: !76)
!308 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !309)
!309 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !66, line: 50, size: 256, elements: !310)
!310 = !{!311, !312, !313, !314}
!311 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !309, file: !66, line: 52, baseType: !69, size: 64)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !309, file: !66, line: 55, baseType: !72, size: 32, offset: 64)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !309, file: !66, line: 56, baseType: !74, size: 64, offset: 128)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !309, file: !66, line: 57, baseType: !72, size: 32, offset: 192)
!315 = !DIGlobalVariableExpression(var: !316, expr: !DIExpression())
!316 = distinct !DIGlobalVariable(name: "just_context", scope: !295, file: !3, line: 45, type: !27, isLocal: true, isDefinition: true)
!317 = !DIGlobalVariableExpression(var: !318, expr: !DIExpression())
!318 = distinct !DIGlobalVariable(name: "just_group", scope: !295, file: !3, line: 51, type: !27, isLocal: true, isDefinition: true)
!319 = !DIGlobalVariableExpression(var: !320, expr: !DIExpression())
!320 = distinct !DIGlobalVariable(name: "use_name", scope: !295, file: !3, line: 61, type: !27, isLocal: true, isDefinition: true)
!321 = !DIGlobalVariableExpression(var: !322, expr: !DIExpression())
!322 = distinct !DIGlobalVariable(name: "use_real", scope: !295, file: !3, line: 53, type: !27, isLocal: true, isDefinition: true)
!323 = !DIGlobalVariableExpression(var: !324, expr: !DIExpression())
!324 = distinct !DIGlobalVariable(name: "just_user", scope: !295, file: !3, line: 55, type: !27, isLocal: true, isDefinition: true)
!325 = !DIGlobalVariableExpression(var: !326, expr: !DIExpression())
!326 = distinct !DIGlobalVariable(name: "opt_zero", scope: !295, file: !3, line: 47, type: !27, isLocal: true, isDefinition: true)
!327 = !DIGlobalVariableExpression(var: !328, expr: !DIExpression())
!328 = distinct !DIGlobalVariable(name: "just_group_list", scope: !295, file: !3, line: 49, type: !27, isLocal: true, isDefinition: true)
!329 = !DIGlobalVariableExpression(var: !330, expr: !DIExpression())
!330 = distinct !DIGlobalVariable(name: "context", scope: !295, file: !3, line: 69, type: !6, isLocal: true, isDefinition: true)
!331 = !DIGlobalVariableExpression(var: !332, expr: !DIExpression())
!332 = distinct !DIGlobalVariable(name: "multiple_users", scope: !295, file: !3, line: 59, type: !27, isLocal: true, isDefinition: true)
!333 = !DIGlobalVariableExpression(var: !334, expr: !DIExpression())
!334 = distinct !DIGlobalVariable(name: "ok", scope: !295, file: !3, line: 57, type: !27, isLocal: true, isDefinition: true)
!335 = !DIGlobalVariableExpression(var: !336, expr: !DIExpression())
!336 = distinct !DIGlobalVariable(name: "buf", scope: !337, file: !3, line: 327, type: !53, isLocal: true, isDefinition: true)
!337 = distinct !DISubprogram(name: "uidtostr_ptr", scope: !3, file: !3, line: 325, type: !49, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !295, retainedNodes: !4)
!338 = !DIGlobalVariableExpression(var: !339, expr: !DIExpression())
!339 = distinct !DIGlobalVariable(name: "buf", scope: !340, file: !3, line: 316, type: !53, isLocal: true, isDefinition: true)
!340 = distinct !DISubprogram(name: "gidtostr_ptr", scope: !3, file: !3, line: 314, type: !59, scopeLine: 315, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !295, retainedNodes: !4)
!341 = distinct !DISubprogram(name: "emit_ancillary_info", scope: !342, file: !342, line: 634, type: !343, scopeLine: 635, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!342 = !DIFile(filename: "src/system.h", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!343 = !DISubroutineType(types: !344)
!344 = !{null, !69}
!345 = !DILocalVariable(name: "program", arg: 1, scope: !341, file: !342, line: 634, type: !69)
!346 = !DILocation(line: 634, column: 34, scope: !341)
!347 = !DILocalVariable(name: "infomap", scope: !341, file: !342, line: 636, type: !348)
!348 = !DICompositeType(tag: DW_TAG_array_type, baseType: !349, size: 896, elements: !354)
!349 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !350)
!350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "infomap", scope: !341, file: !342, line: 636, size: 128, elements: !351)
!351 = !{!352, !353}
!352 = !DIDerivedType(tag: DW_TAG_member, name: "program", scope: !350, file: !342, line: 636, baseType: !69, size: 64)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !350, file: !342, line: 636, baseType: !69, size: 64, offset: 64)
!354 = !{!355}
!355 = !DISubrange(count: 7)
!356 = !DILocation(line: 636, column: 67, scope: !341)
!357 = !DILocalVariable(name: "node", scope: !341, file: !342, line: 646, type: !69)
!358 = !DILocation(line: 646, column: 15, scope: !341)
!359 = !DILocation(line: 646, column: 22, scope: !341)
!360 = !DILocalVariable(name: "map_prog", scope: !341, file: !342, line: 647, type: !361)
!361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !349, size: 64)
!362 = !DILocation(line: 647, column: 25, scope: !341)
!363 = !DILocation(line: 647, column: 36, scope: !341)
!364 = !DILocation(line: 649, column: 3, scope: !341)
!365 = !DILocation(line: 649, column: 10, scope: !341)
!366 = !DILocation(line: 649, column: 20, scope: !341)
!367 = !DILocation(line: 649, column: 28, scope: !341)
!368 = !DILocation(line: 649, column: 33, scope: !341)
!369 = !DILocation(line: 649, column: 31, scope: !341)
!370 = !DILocation(line: 0, scope: !341)
!371 = !DILocation(line: 650, column: 13, scope: !341)
!372 = distinct !{!372, !364, !371}
!373 = !DILocation(line: 652, column: 7, scope: !374)
!374 = distinct !DILexicalBlock(scope: !341, file: !342, line: 652, column: 7)
!375 = !DILocation(line: 652, column: 17, scope: !374)
!376 = !DILocation(line: 652, column: 7, scope: !341)
!377 = !DILocation(line: 653, column: 12, scope: !374)
!378 = !DILocation(line: 653, column: 22, scope: !374)
!379 = !DILocation(line: 653, column: 10, scope: !374)
!380 = !DILocation(line: 653, column: 5, scope: !374)
!381 = !DILocation(line: 655, column: 11, scope: !341)
!382 = !DILocation(line: 655, column: 3, scope: !341)
!383 = !DILocalVariable(name: "lc_messages", scope: !341, file: !342, line: 659, type: !69)
!384 = !DILocation(line: 659, column: 15, scope: !341)
!385 = !DILocation(line: 659, column: 29, scope: !341)
!386 = !DILocation(line: 660, column: 7, scope: !387)
!387 = distinct !DILexicalBlock(scope: !341, file: !342, line: 660, column: 7)
!388 = !DILocation(line: 660, column: 19, scope: !387)
!389 = !DILocation(line: 660, column: 22, scope: !387)
!390 = !DILocation(line: 660, column: 7, scope: !341)
!391 = !DILocation(line: 666, column: 7, scope: !392)
!392 = distinct !DILexicalBlock(scope: !387, file: !342, line: 661, column: 5)
!393 = !DILocation(line: 668, column: 5, scope: !392)
!394 = !DILocation(line: 669, column: 11, scope: !341)
!395 = !DILocation(line: 670, column: 24, scope: !341)
!396 = !DILocation(line: 669, column: 3, scope: !341)
!397 = !DILocation(line: 671, column: 11, scope: !341)
!398 = !DILocation(line: 672, column: 11, scope: !341)
!399 = !DILocation(line: 672, column: 17, scope: !341)
!400 = !DILocation(line: 672, column: 25, scope: !341)
!401 = !DILocation(line: 672, column: 22, scope: !341)
!402 = !DILocation(line: 671, column: 3, scope: !341)
!403 = !DILocation(line: 673, column: 1, scope: !341)
!404 = !DILocalVariable(name: "program", arg: 1, scope: !405, file: !342, line: 634, type: !69)
!405 = distinct !DISubprogram(name: "emit_ancillary_info", scope: !342, file: !342, line: 634, type: !343, scopeLine: 635, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !406, retainedNodes: !4)
!406 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !407, nameTableKind: None)
!407 = !{!408, !410, !412, !414, !416, !426, !428, !430, !432, !434, !436, !438, !440, !442, !444, !446, !449}
!408 = !DIGlobalVariableExpression(var: !409, expr: !DIExpression())
!409 = distinct !DIGlobalVariable(name: "ruid", scope: !406, file: !3, line: 64, type: !12, isLocal: true, isDefinition: true)
!410 = !DIGlobalVariableExpression(var: !411, expr: !DIExpression())
!411 = distinct !DIGlobalVariable(name: "euid", scope: !406, file: !3, line: 64, type: !12, isLocal: true, isDefinition: true)
!412 = !DIGlobalVariableExpression(var: !413, expr: !DIExpression())
!413 = distinct !DIGlobalVariable(name: "rgid", scope: !406, file: !3, line: 65, type: !21, isLocal: true, isDefinition: true)
!414 = !DIGlobalVariableExpression(var: !415, expr: !DIExpression())
!415 = distinct !DIGlobalVariable(name: "egid", scope: !406, file: !3, line: 65, type: !21, isLocal: true, isDefinition: true)
!416 = !DIGlobalVariableExpression(var: !417, expr: !DIExpression())
!417 = distinct !DIGlobalVariable(name: "longopts", scope: !406, file: !3, line: 75, type: !418, isLocal: true, isDefinition: true)
!418 = !DICompositeType(tag: DW_TAG_array_type, baseType: !419, size: 2560, elements: !76)
!419 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !420)
!420 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !66, line: 50, size: 256, elements: !421)
!421 = !{!422, !423, !424, !425}
!422 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !420, file: !66, line: 52, baseType: !69, size: 64)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !420, file: !66, line: 55, baseType: !72, size: 32, offset: 64)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !420, file: !66, line: 56, baseType: !74, size: 64, offset: 128)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !420, file: !66, line: 57, baseType: !72, size: 32, offset: 192)
!426 = !DIGlobalVariableExpression(var: !427, expr: !DIExpression())
!427 = distinct !DIGlobalVariable(name: "just_context", scope: !406, file: !3, line: 45, type: !27, isLocal: true, isDefinition: true)
!428 = !DIGlobalVariableExpression(var: !429, expr: !DIExpression())
!429 = distinct !DIGlobalVariable(name: "just_group", scope: !406, file: !3, line: 51, type: !27, isLocal: true, isDefinition: true)
!430 = !DIGlobalVariableExpression(var: !431, expr: !DIExpression())
!431 = distinct !DIGlobalVariable(name: "use_name", scope: !406, file: !3, line: 61, type: !27, isLocal: true, isDefinition: true)
!432 = !DIGlobalVariableExpression(var: !433, expr: !DIExpression())
!433 = distinct !DIGlobalVariable(name: "use_real", scope: !406, file: !3, line: 53, type: !27, isLocal: true, isDefinition: true)
!434 = !DIGlobalVariableExpression(var: !435, expr: !DIExpression())
!435 = distinct !DIGlobalVariable(name: "just_user", scope: !406, file: !3, line: 55, type: !27, isLocal: true, isDefinition: true)
!436 = !DIGlobalVariableExpression(var: !437, expr: !DIExpression())
!437 = distinct !DIGlobalVariable(name: "opt_zero", scope: !406, file: !3, line: 47, type: !27, isLocal: true, isDefinition: true)
!438 = !DIGlobalVariableExpression(var: !439, expr: !DIExpression())
!439 = distinct !DIGlobalVariable(name: "just_group_list", scope: !406, file: !3, line: 49, type: !27, isLocal: true, isDefinition: true)
!440 = !DIGlobalVariableExpression(var: !441, expr: !DIExpression())
!441 = distinct !DIGlobalVariable(name: "context", scope: !406, file: !3, line: 69, type: !6, isLocal: true, isDefinition: true)
!442 = !DIGlobalVariableExpression(var: !443, expr: !DIExpression())
!443 = distinct !DIGlobalVariable(name: "multiple_users", scope: !406, file: !3, line: 59, type: !27, isLocal: true, isDefinition: true)
!444 = !DIGlobalVariableExpression(var: !445, expr: !DIExpression())
!445 = distinct !DIGlobalVariable(name: "ok", scope: !406, file: !3, line: 57, type: !27, isLocal: true, isDefinition: true)
!446 = !DIGlobalVariableExpression(var: !447, expr: !DIExpression())
!447 = distinct !DIGlobalVariable(name: "buf", scope: !448, file: !3, line: 327, type: !53, isLocal: true, isDefinition: true)
!448 = distinct !DISubprogram(name: "uidtostr_ptr", scope: !3, file: !3, line: 325, type: !49, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !406, retainedNodes: !4)
!449 = !DIGlobalVariableExpression(var: !450, expr: !DIExpression())
!450 = distinct !DIGlobalVariable(name: "buf", scope: !451, file: !3, line: 316, type: !53, isLocal: true, isDefinition: true)
!451 = distinct !DISubprogram(name: "gidtostr_ptr", scope: !3, file: !3, line: 314, type: !59, scopeLine: 315, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !406, retainedNodes: !4)
!452 = !DILocalVariable(name: "infomap", scope: !405, file: !342, line: 636, type: !453)
!453 = !DICompositeType(tag: DW_TAG_array_type, baseType: !454, size: 896, elements: !354)
!454 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !455)
!455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "infomap", scope: !405, file: !342, line: 636, size: 128, elements: !456)
!456 = !{!457, !458}
!457 = !DIDerivedType(tag: DW_TAG_member, name: "program", scope: !455, file: !342, line: 636, baseType: !69, size: 64)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !455, file: !342, line: 636, baseType: !69, size: 64, offset: 64)
!459 = !DILocalVariable(name: "node", scope: !405, file: !342, line: 646, type: !69)
!460 = !DILocalVariable(name: "map_prog", scope: !405, file: !342, line: 647, type: !461)
!461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !454, size: 64)
!462 = !DILocalVariable(name: "lc_messages", scope: !463, file: !342, line: 659, type: !69)
!463 = distinct !DISubprogram(name: "emit_ancillary_info", scope: !342, file: !342, line: 634, type: !343, scopeLine: 635, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !464, retainedNodes: !4)
!464 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !465, nameTableKind: None)
!465 = !{!466, !468, !470, !472, !474, !484, !486, !488, !490, !492, !494, !496, !498, !500, !502, !504, !507}
!466 = !DIGlobalVariableExpression(var: !467, expr: !DIExpression())
!467 = distinct !DIGlobalVariable(name: "ruid", scope: !464, file: !3, line: 64, type: !12, isLocal: true, isDefinition: true)
!468 = !DIGlobalVariableExpression(var: !469, expr: !DIExpression())
!469 = distinct !DIGlobalVariable(name: "euid", scope: !464, file: !3, line: 64, type: !12, isLocal: true, isDefinition: true)
!470 = !DIGlobalVariableExpression(var: !471, expr: !DIExpression())
!471 = distinct !DIGlobalVariable(name: "rgid", scope: !464, file: !3, line: 65, type: !21, isLocal: true, isDefinition: true)
!472 = !DIGlobalVariableExpression(var: !473, expr: !DIExpression())
!473 = distinct !DIGlobalVariable(name: "egid", scope: !464, file: !3, line: 65, type: !21, isLocal: true, isDefinition: true)
!474 = !DIGlobalVariableExpression(var: !475, expr: !DIExpression())
!475 = distinct !DIGlobalVariable(name: "longopts", scope: !464, file: !3, line: 75, type: !476, isLocal: true, isDefinition: true)
!476 = !DICompositeType(tag: DW_TAG_array_type, baseType: !477, size: 2560, elements: !76)
!477 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !478)
!478 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !66, line: 50, size: 256, elements: !479)
!479 = !{!480, !481, !482, !483}
!480 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !478, file: !66, line: 52, baseType: !69, size: 64)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !478, file: !66, line: 55, baseType: !72, size: 32, offset: 64)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !478, file: !66, line: 56, baseType: !74, size: 64, offset: 128)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !478, file: !66, line: 57, baseType: !72, size: 32, offset: 192)
!484 = !DIGlobalVariableExpression(var: !485, expr: !DIExpression())
!485 = distinct !DIGlobalVariable(name: "just_context", scope: !464, file: !3, line: 45, type: !27, isLocal: true, isDefinition: true)
!486 = !DIGlobalVariableExpression(var: !487, expr: !DIExpression())
!487 = distinct !DIGlobalVariable(name: "just_group", scope: !464, file: !3, line: 51, type: !27, isLocal: true, isDefinition: true)
!488 = !DIGlobalVariableExpression(var: !489, expr: !DIExpression())
!489 = distinct !DIGlobalVariable(name: "use_name", scope: !464, file: !3, line: 61, type: !27, isLocal: true, isDefinition: true)
!490 = !DIGlobalVariableExpression(var: !491, expr: !DIExpression())
!491 = distinct !DIGlobalVariable(name: "use_real", scope: !464, file: !3, line: 53, type: !27, isLocal: true, isDefinition: true)
!492 = !DIGlobalVariableExpression(var: !493, expr: !DIExpression())
!493 = distinct !DIGlobalVariable(name: "just_user", scope: !464, file: !3, line: 55, type: !27, isLocal: true, isDefinition: true)
!494 = !DIGlobalVariableExpression(var: !495, expr: !DIExpression())
!495 = distinct !DIGlobalVariable(name: "opt_zero", scope: !464, file: !3, line: 47, type: !27, isLocal: true, isDefinition: true)
!496 = !DIGlobalVariableExpression(var: !497, expr: !DIExpression())
!497 = distinct !DIGlobalVariable(name: "just_group_list", scope: !464, file: !3, line: 49, type: !27, isLocal: true, isDefinition: true)
!498 = !DIGlobalVariableExpression(var: !499, expr: !DIExpression())
!499 = distinct !DIGlobalVariable(name: "context", scope: !464, file: !3, line: 69, type: !6, isLocal: true, isDefinition: true)
!500 = !DIGlobalVariableExpression(var: !501, expr: !DIExpression())
!501 = distinct !DIGlobalVariable(name: "multiple_users", scope: !464, file: !3, line: 59, type: !27, isLocal: true, isDefinition: true)
!502 = !DIGlobalVariableExpression(var: !503, expr: !DIExpression())
!503 = distinct !DIGlobalVariable(name: "ok", scope: !464, file: !3, line: 57, type: !27, isLocal: true, isDefinition: true)
!504 = !DIGlobalVariableExpression(var: !505, expr: !DIExpression())
!505 = distinct !DIGlobalVariable(name: "buf", scope: !506, file: !3, line: 327, type: !53, isLocal: true, isDefinition: true)
!506 = distinct !DISubprogram(name: "uidtostr_ptr", scope: !3, file: !3, line: 325, type: !49, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !464, retainedNodes: !4)
!507 = !DIGlobalVariableExpression(var: !508, expr: !DIExpression())
!508 = distinct !DIGlobalVariable(name: "buf", scope: !509, file: !3, line: 316, type: !53, isLocal: true, isDefinition: true)
!509 = distinct !DISubprogram(name: "gidtostr_ptr", scope: !3, file: !3, line: 314, type: !59, scopeLine: 315, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !464, retainedNodes: !4)
!510 = distinct !DISubprogram(name: "main", scope: !3, file: !3, line: 125, type: !511, scopeLine: 126, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4)
!511 = !DISubroutineType(types: !512)
!512 = !{!72, !72, !184}
!513 = !DILocalVariable(name: "argc", arg: 1, scope: !510, file: !3, line: 125, type: !72)
!514 = !DILocation(line: 125, column: 11, scope: !510)
!515 = !DILocalVariable(name: "argv", arg: 2, scope: !510, file: !3, line: 125, type: !184)
!516 = !DILocation(line: 125, column: 24, scope: !510)
!517 = !DILocalVariable(name: "optc", scope: !510, file: !3, line: 127, type: !72)
!518 = !DILocation(line: 127, column: 7, scope: !510)
!519 = !DILocalVariable(name: "selinux_enabled", scope: !510, file: !3, line: 128, type: !72)
!520 = !DILocation(line: 128, column: 7, scope: !510)
!521 = !DILocalVariable(name: "smack_enabled", scope: !510, file: !3, line: 129, type: !27)
!522 = !DILocation(line: 129, column: 8, scope: !510)
!523 = !DILocation(line: 129, column: 24, scope: !510)
!524 = !DILocalVariable(name: "pw_name", scope: !510, file: !3, line: 130, type: !6)
!525 = !DILocation(line: 130, column: 9, scope: !510)
!526 = !DILocation(line: 133, column: 21, scope: !510)
!527 = !DILocation(line: 133, column: 3, scope: !510)
!528 = !DILocation(line: 134, column: 3, scope: !510)
!529 = !DILocation(line: 135, column: 3, scope: !510)
!530 = !DILocation(line: 136, column: 3, scope: !510)
!531 = !DILocation(line: 138, column: 3, scope: !510)
!532 = !DILocation(line: 140, column: 3, scope: !510)
!533 = !DILocation(line: 140, column: 31, scope: !510)
!534 = !DILocation(line: 140, column: 37, scope: !510)
!535 = !DILocation(line: 140, column: 18, scope: !510)
!536 = !DILocation(line: 140, column: 16, scope: !510)
!537 = !DILocation(line: 140, column: 72, scope: !510)
!538 = !DILocation(line: 142, column: 15, scope: !539)
!539 = distinct !DILexicalBlock(scope: !510, file: !3, line: 141, column: 5)
!540 = !DILocation(line: 142, column: 7, scope: !539)
!541 = !DILocation(line: 146, column: 11, scope: !542)
!542 = distinct !DILexicalBlock(scope: !539, file: !3, line: 143, column: 9)
!543 = !DILocation(line: 156, column: 16, scope: !544)
!544 = distinct !DILexicalBlock(scope: !542, file: !3, line: 156, column: 15)
!545 = !DILocation(line: 156, column: 15, scope: !542)
!546 = !DILocation(line: 157, column: 13, scope: !544)
!547 = !DILocation(line: 160, column: 24, scope: !542)
!548 = !DILocation(line: 161, column: 11, scope: !542)
!549 = !DILocation(line: 164, column: 22, scope: !542)
!550 = !DILocation(line: 165, column: 11, scope: !542)
!551 = !DILocation(line: 167, column: 20, scope: !542)
!552 = !DILocation(line: 168, column: 11, scope: !542)
!553 = !DILocation(line: 170, column: 20, scope: !542)
!554 = !DILocation(line: 171, column: 11, scope: !542)
!555 = !DILocation(line: 173, column: 21, scope: !542)
!556 = !DILocation(line: 174, column: 11, scope: !542)
!557 = !DILocation(line: 176, column: 20, scope: !542)
!558 = !DILocation(line: 177, column: 11, scope: !542)
!559 = !DILocation(line: 179, column: 27, scope: !542)
!560 = !DILocation(line: 180, column: 11, scope: !542)
!561 = !DILocation(line: 181, column: 9, scope: !542)
!562 = !DILocation(line: 182, column: 9, scope: !542)
!563 = !DILocation(line: 184, column: 11, scope: !542)
!564 = distinct !{!564, !532, !565}
!565 = !DILocation(line: 186, column: 5, scope: !510)
!566 = !DILocalVariable(name: "n_ids", scope: !510, file: !3, line: 188, type: !134)
!567 = !DILocation(line: 188, column: 10, scope: !510)
!568 = !DILocation(line: 188, column: 18, scope: !510)
!569 = !DILocation(line: 188, column: 25, scope: !510)
!570 = !DILocation(line: 188, column: 23, scope: !510)
!571 = !DILocation(line: 190, column: 7, scope: !572)
!572 = distinct !DILexicalBlock(scope: !510, file: !3, line: 190, column: 7)
!573 = !DILocation(line: 190, column: 13, scope: !572)
!574 = !DILocation(line: 190, column: 16, scope: !572)
!575 = !DILocation(line: 190, column: 7, scope: !510)
!576 = !DILocation(line: 191, column: 5, scope: !572)
!577 = !DILocation(line: 194, column: 7, scope: !578)
!578 = distinct !DILexicalBlock(scope: !510, file: !3, line: 194, column: 7)
!579 = !DILocation(line: 194, column: 19, scope: !578)
!580 = !DILocation(line: 194, column: 17, scope: !578)
!581 = !DILocation(line: 194, column: 32, scope: !578)
!582 = !DILocation(line: 194, column: 30, scope: !578)
!583 = !DILocation(line: 194, column: 50, scope: !578)
!584 = !DILocation(line: 194, column: 48, scope: !578)
!585 = !DILocation(line: 194, column: 63, scope: !578)
!586 = !DILocation(line: 194, column: 7, scope: !510)
!587 = !DILocation(line: 195, column: 5, scope: !578)
!588 = !DILocalVariable(name: "default_format", scope: !510, file: !3, line: 197, type: !27)
!589 = !DILocation(line: 197, column: 8, scope: !510)
!590 = !DILocation(line: 197, column: 28, scope: !510)
!591 = !DILocation(line: 198, column: 28, scope: !510)
!592 = !DILocation(line: 198, column: 31, scope: !510)
!593 = !DILocation(line: 199, column: 28, scope: !510)
!594 = !DILocation(line: 199, column: 31, scope: !510)
!595 = !DILocation(line: 200, column: 28, scope: !510)
!596 = !DILocation(line: 200, column: 31, scope: !510)
!597 = !DILocation(line: 197, column: 25, scope: !510)
!598 = !DILocation(line: 202, column: 7, scope: !599)
!599 = distinct !DILexicalBlock(scope: !510, file: !3, line: 202, column: 7)
!600 = !DILocation(line: 202, column: 22, scope: !599)
!601 = !DILocation(line: 202, column: 26, scope: !599)
!602 = !DILocation(line: 202, column: 35, scope: !599)
!603 = !DILocation(line: 202, column: 38, scope: !599)
!604 = !DILocation(line: 202, column: 7, scope: !510)
!605 = !DILocation(line: 203, column: 5, scope: !599)
!606 = !DILocation(line: 206, column: 7, scope: !607)
!607 = distinct !DILexicalBlock(scope: !510, file: !3, line: 206, column: 7)
!608 = !DILocation(line: 206, column: 22, scope: !607)
!609 = !DILocation(line: 206, column: 25, scope: !607)
!610 = !DILocation(line: 206, column: 7, scope: !510)
!611 = !DILocation(line: 207, column: 5, scope: !607)
!612 = !DILocation(line: 215, column: 7, scope: !613)
!613 = distinct !DILexicalBlock(scope: !510, file: !3, line: 215, column: 7)
!614 = !DILocation(line: 215, column: 13, scope: !613)
!615 = !DILocation(line: 216, column: 11, scope: !613)
!616 = !DILocation(line: 217, column: 11, scope: !613)
!617 = !DILocation(line: 217, column: 15, scope: !613)
!618 = !DILocation(line: 217, column: 30, scope: !613)
!619 = !DILocation(line: 217, column: 35, scope: !613)
!620 = !DILocation(line: 215, column: 7, scope: !510)
!621 = !DILocation(line: 220, column: 12, scope: !622)
!622 = distinct !DILexicalBlock(scope: !623, file: !3, line: 220, column: 11)
!623 = distinct !DILexicalBlock(scope: !613, file: !3, line: 218, column: 5)
!624 = !DILocation(line: 220, column: 28, scope: !622)
!625 = !DILocation(line: 220, column: 31, scope: !622)
!626 = !DILocation(line: 220, column: 49, scope: !622)
!627 = !DILocation(line: 220, column: 52, scope: !622)
!628 = !DILocation(line: 221, column: 11, scope: !622)
!629 = !DILocation(line: 221, column: 15, scope: !622)
!630 = !DILocation(line: 222, column: 15, scope: !622)
!631 = !DILocation(line: 222, column: 18, scope: !622)
!632 = !DILocation(line: 222, column: 55, scope: !622)
!633 = !DILocation(line: 223, column: 15, scope: !622)
!634 = !DILocation(line: 223, column: 18, scope: !622)
!635 = !DILocation(line: 220, column: 11, scope: !623)
!636 = !DILocation(line: 224, column: 9, scope: !622)
!637 = !DILocation(line: 225, column: 5, scope: !623)
!638 = !DILocation(line: 227, column: 7, scope: !639)
!639 = distinct !DILexicalBlock(scope: !510, file: !3, line: 227, column: 7)
!640 = !DILocation(line: 227, column: 13, scope: !639)
!641 = !DILocation(line: 227, column: 7, scope: !510)
!642 = !DILocation(line: 229, column: 24, scope: !643)
!643 = distinct !DILexicalBlock(scope: !639, file: !3, line: 228, column: 5)
!644 = !DILocation(line: 229, column: 30, scope: !643)
!645 = !DILocation(line: 229, column: 22, scope: !643)
!646 = !DILocation(line: 234, column: 16, scope: !643)
!647 = !DILocation(line: 234, column: 13, scope: !643)
!648 = !DILocation(line: 236, column: 7, scope: !643)
!649 = !DILocation(line: 236, column: 14, scope: !650)
!650 = distinct !DILexicalBlock(scope: !651, file: !3, line: 236, column: 7)
!651 = distinct !DILexicalBlock(scope: !643, file: !3, line: 236, column: 7)
!652 = !DILocation(line: 236, column: 23, scope: !650)
!653 = !DILocation(line: 236, column: 21, scope: !650)
!654 = !DILocation(line: 236, column: 7, scope: !651)
!655 = !DILocalVariable(name: "pwd", scope: !656, file: !3, line: 238, type: !657)
!656 = distinct !DILexicalBlock(scope: !650, file: !3, line: 237, column: 9)
!657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !658, size: 64)
!658 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "passwd", file: !659, line: 49, size: 384, elements: !660)
!659 = !DIFile(filename: "/usr/include/pwd.h", directory: "")
!660 = !{!661, !662, !663, !664, !665, !666, !667}
!661 = !DIDerivedType(tag: DW_TAG_member, name: "pw_name", scope: !658, file: !659, line: 51, baseType: !6, size: 64)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "pw_passwd", scope: !658, file: !659, line: 52, baseType: !6, size: 64, offset: 64)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "pw_uid", scope: !658, file: !659, line: 54, baseType: !14, size: 32, offset: 128)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "pw_gid", scope: !658, file: !659, line: 55, baseType: !22, size: 32, offset: 160)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "pw_gecos", scope: !658, file: !659, line: 56, baseType: !6, size: 64, offset: 192)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "pw_dir", scope: !658, file: !659, line: 57, baseType: !6, size: 64, offset: 256)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "pw_shell", scope: !658, file: !659, line: 58, baseType: !6, size: 64, offset: 320)
!668 = !DILocation(line: 238, column: 26, scope: !656)
!669 = !DILocalVariable(name: "spec", scope: !656, file: !3, line: 239, type: !69)
!670 = !DILocation(line: 239, column: 23, scope: !656)
!671 = !DILocation(line: 239, column: 30, scope: !656)
!672 = !DILocation(line: 239, column: 35, scope: !656)
!673 = !DILocation(line: 243, column: 16, scope: !674)
!674 = distinct !DILexicalBlock(scope: !656, file: !3, line: 243, column: 15)
!675 = !DILocation(line: 243, column: 15, scope: !674)
!676 = !DILocation(line: 243, column: 15, scope: !656)
!677 = !DILocation(line: 245, column: 36, scope: !678)
!678 = distinct !DILexicalBlock(scope: !679, file: !3, line: 245, column: 19)
!679 = distinct !DILexicalBlock(scope: !674, file: !3, line: 244, column: 13)
!680 = !DILocation(line: 245, column: 19, scope: !678)
!681 = !DILocation(line: 245, column: 67, scope: !678)
!682 = !DILocation(line: 245, column: 19, scope: !679)
!683 = !DILocation(line: 250, column: 35, scope: !684)
!684 = distinct !DILexicalBlock(scope: !678, file: !3, line: 246, column: 17)
!685 = !DILocation(line: 250, column: 25, scope: !684)
!686 = !DILocation(line: 250, column: 23, scope: !684)
!687 = !DILocation(line: 251, column: 17, scope: !684)
!688 = !DILocation(line: 252, column: 13, scope: !679)
!689 = !DILocation(line: 253, column: 15, scope: !690)
!690 = distinct !DILexicalBlock(scope: !656, file: !3, line: 253, column: 15)
!691 = !DILocation(line: 253, column: 19, scope: !690)
!692 = !DILocation(line: 253, column: 15, scope: !656)
!693 = !DILocation(line: 255, column: 25, scope: !694)
!694 = distinct !DILexicalBlock(scope: !690, file: !3, line: 254, column: 13)
!695 = !DILocation(line: 255, column: 32, scope: !694)
!696 = !DILocation(line: 255, column: 62, scope: !694)
!697 = !DILocation(line: 255, column: 67, scope: !694)
!698 = !DILocation(line: 255, column: 55, scope: !694)
!699 = !DILocation(line: 255, column: 15, scope: !694)
!700 = !DILocation(line: 256, column: 18, scope: !694)
!701 = !DILocation(line: 257, column: 15, scope: !694)
!702 = !DILocation(line: 259, column: 30, scope: !656)
!703 = !DILocation(line: 259, column: 35, scope: !656)
!704 = !DILocation(line: 259, column: 21, scope: !656)
!705 = !DILocation(line: 259, column: 19, scope: !656)
!706 = !DILocation(line: 260, column: 25, scope: !656)
!707 = !DILocation(line: 260, column: 30, scope: !656)
!708 = !DILocation(line: 260, column: 23, scope: !656)
!709 = !DILocation(line: 260, column: 16, scope: !656)
!710 = !DILocation(line: 261, column: 25, scope: !656)
!711 = !DILocation(line: 261, column: 30, scope: !656)
!712 = !DILocation(line: 261, column: 23, scope: !656)
!713 = !DILocation(line: 261, column: 16, scope: !656)
!714 = !DILocation(line: 262, column: 24, scope: !656)
!715 = !DILocation(line: 262, column: 11, scope: !656)
!716 = !DILocation(line: 263, column: 17, scope: !656)
!717 = !DILocation(line: 263, column: 11, scope: !656)
!718 = !DILocation(line: 264, column: 9, scope: !656)
!719 = !DILocation(line: 236, column: 36, scope: !650)
!720 = !DILocation(line: 236, column: 7, scope: !650)
!721 = distinct !{!721, !654, !722}
!722 = !DILocation(line: 264, column: 9, scope: !651)
!723 = !DILocation(line: 265, column: 5, scope: !643)
!724 = !DILocalVariable(name: "NO_UID", scope: !725, file: !3, line: 271, type: !12)
!725 = distinct !DILexicalBlock(scope: !639, file: !3, line: 267, column: 5)
!726 = !DILocation(line: 271, column: 13, scope: !725)
!727 = !DILocalVariable(name: "NO_GID", scope: !725, file: !3, line: 272, type: !21)
!728 = !DILocation(line: 272, column: 13, scope: !725)
!729 = !DILocation(line: 274, column: 11, scope: !730)
!730 = distinct !DILexicalBlock(scope: !725, file: !3, line: 274, column: 11)
!731 = !DILocation(line: 274, column: 11, scope: !725)
!732 = !DILocation(line: 274, column: 24, scope: !730)
!733 = !DILocation(line: 275, column: 14, scope: !730)
!734 = !DILocation(line: 275, column: 25, scope: !730)
!735 = !DILocation(line: 275, column: 29, scope: !730)
!736 = !DILocation(line: 275, column: 45, scope: !730)
!737 = !DILocation(line: 275, column: 49, scope: !730)
!738 = !DILocation(line: 277, column: 11, scope: !739)
!739 = distinct !DILexicalBlock(scope: !730, file: !3, line: 276, column: 9)
!740 = !DILocation(line: 277, column: 17, scope: !739)
!741 = !DILocation(line: 278, column: 18, scope: !739)
!742 = !DILocation(line: 278, column: 16, scope: !739)
!743 = !DILocation(line: 279, column: 15, scope: !744)
!744 = distinct !DILexicalBlock(scope: !739, file: !3, line: 279, column: 15)
!745 = !DILocation(line: 279, column: 23, scope: !744)
!746 = !DILocation(line: 279, column: 20, scope: !744)
!747 = !DILocation(line: 279, column: 30, scope: !744)
!748 = !DILocation(line: 279, column: 33, scope: !744)
!749 = !DILocation(line: 279, column: 15, scope: !739)
!750 = !DILocation(line: 280, column: 13, scope: !744)
!751 = !DILocation(line: 281, column: 9, scope: !739)
!752 = !DILocation(line: 283, column: 11, scope: !753)
!753 = distinct !DILexicalBlock(scope: !725, file: !3, line: 283, column: 11)
!754 = !DILocation(line: 283, column: 11, scope: !725)
!755 = !DILocation(line: 283, column: 23, scope: !753)
!756 = !DILocation(line: 284, column: 14, scope: !753)
!757 = !DILocation(line: 284, column: 25, scope: !753)
!758 = !DILocation(line: 284, column: 29, scope: !753)
!759 = !DILocation(line: 284, column: 45, scope: !753)
!760 = !DILocation(line: 284, column: 49, scope: !753)
!761 = !DILocation(line: 286, column: 11, scope: !762)
!762 = distinct !DILexicalBlock(scope: !753, file: !3, line: 285, column: 9)
!763 = !DILocation(line: 286, column: 17, scope: !762)
!764 = !DILocation(line: 287, column: 18, scope: !762)
!765 = !DILocation(line: 287, column: 16, scope: !762)
!766 = !DILocation(line: 288, column: 15, scope: !767)
!767 = distinct !DILexicalBlock(scope: !762, file: !3, line: 288, column: 15)
!768 = !DILocation(line: 288, column: 23, scope: !767)
!769 = !DILocation(line: 288, column: 20, scope: !767)
!770 = !DILocation(line: 288, column: 30, scope: !767)
!771 = !DILocation(line: 288, column: 33, scope: !767)
!772 = !DILocation(line: 288, column: 15, scope: !762)
!773 = !DILocation(line: 289, column: 13, scope: !767)
!774 = !DILocation(line: 290, column: 9, scope: !762)
!775 = !DILocation(line: 292, column: 12, scope: !776)
!776 = distinct !DILexicalBlock(scope: !725, file: !3, line: 292, column: 11)
!777 = !DILocation(line: 292, column: 22, scope: !776)
!778 = !DILocation(line: 292, column: 26, scope: !776)
!779 = !DILocation(line: 292, column: 37, scope: !776)
!780 = !DILocation(line: 292, column: 40, scope: !776)
!781 = !DILocation(line: 292, column: 56, scope: !776)
!782 = !DILocation(line: 292, column: 60, scope: !776)
!783 = !DILocation(line: 292, column: 11, scope: !725)
!784 = !DILocation(line: 294, column: 11, scope: !785)
!785 = distinct !DILexicalBlock(scope: !776, file: !3, line: 293, column: 9)
!786 = !DILocation(line: 294, column: 17, scope: !785)
!787 = !DILocation(line: 295, column: 18, scope: !785)
!788 = !DILocation(line: 295, column: 16, scope: !785)
!789 = !DILocation(line: 296, column: 15, scope: !790)
!790 = distinct !DILexicalBlock(scope: !785, file: !3, line: 296, column: 15)
!791 = !DILocation(line: 296, column: 23, scope: !790)
!792 = !DILocation(line: 296, column: 20, scope: !790)
!793 = !DILocation(line: 296, column: 30, scope: !790)
!794 = !DILocation(line: 296, column: 33, scope: !790)
!795 = !DILocation(line: 296, column: 15, scope: !785)
!796 = !DILocation(line: 297, column: 13, scope: !790)
!797 = !DILocation(line: 299, column: 11, scope: !785)
!798 = !DILocation(line: 299, column: 17, scope: !785)
!799 = !DILocation(line: 300, column: 18, scope: !785)
!800 = !DILocation(line: 300, column: 16, scope: !785)
!801 = !DILocation(line: 301, column: 15, scope: !802)
!802 = distinct !DILexicalBlock(scope: !785, file: !3, line: 301, column: 15)
!803 = !DILocation(line: 301, column: 23, scope: !802)
!804 = !DILocation(line: 301, column: 20, scope: !802)
!805 = !DILocation(line: 301, column: 30, scope: !802)
!806 = !DILocation(line: 301, column: 33, scope: !802)
!807 = !DILocation(line: 301, column: 15, scope: !785)
!808 = !DILocation(line: 302, column: 13, scope: !802)
!809 = !DILocation(line: 303, column: 9, scope: !785)
!810 = !DILocation(line: 304, column: 22, scope: !725)
!811 = !DILocation(line: 304, column: 9, scope: !725)
!812 = !DILocation(line: 307, column: 10, scope: !510)
!813 = !DILocation(line: 307, column: 3, scope: !510)
!814 = !DILocalVariable(name: "argc", arg: 1, scope: !815, file: !3, line: 125, type: !72)
!815 = distinct !DISubprogram(name: "main", scope: !3, file: !3, line: 125, type: !511, scopeLine: 126, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !816, retainedNodes: !4)
!816 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !817, nameTableKind: None)
!817 = !{!818, !820, !822, !824, !826, !836, !838, !840, !842, !844, !846, !848, !850, !852, !854, !856, !859}
!818 = !DIGlobalVariableExpression(var: !819, expr: !DIExpression())
!819 = distinct !DIGlobalVariable(name: "ruid", scope: !816, file: !3, line: 64, type: !12, isLocal: true, isDefinition: true)
!820 = !DIGlobalVariableExpression(var: !821, expr: !DIExpression())
!821 = distinct !DIGlobalVariable(name: "euid", scope: !816, file: !3, line: 64, type: !12, isLocal: true, isDefinition: true)
!822 = !DIGlobalVariableExpression(var: !823, expr: !DIExpression())
!823 = distinct !DIGlobalVariable(name: "rgid", scope: !816, file: !3, line: 65, type: !21, isLocal: true, isDefinition: true)
!824 = !DIGlobalVariableExpression(var: !825, expr: !DIExpression())
!825 = distinct !DIGlobalVariable(name: "egid", scope: !816, file: !3, line: 65, type: !21, isLocal: true, isDefinition: true)
!826 = !DIGlobalVariableExpression(var: !827, expr: !DIExpression())
!827 = distinct !DIGlobalVariable(name: "longopts", scope: !816, file: !3, line: 75, type: !828, isLocal: true, isDefinition: true)
!828 = !DICompositeType(tag: DW_TAG_array_type, baseType: !829, size: 2560, elements: !76)
!829 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !830)
!830 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !66, line: 50, size: 256, elements: !831)
!831 = !{!832, !833, !834, !835}
!832 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !830, file: !66, line: 52, baseType: !69, size: 64)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !830, file: !66, line: 55, baseType: !72, size: 32, offset: 64)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !830, file: !66, line: 56, baseType: !74, size: 64, offset: 128)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !830, file: !66, line: 57, baseType: !72, size: 32, offset: 192)
!836 = !DIGlobalVariableExpression(var: !837, expr: !DIExpression())
!837 = distinct !DIGlobalVariable(name: "just_context", scope: !816, file: !3, line: 45, type: !27, isLocal: true, isDefinition: true)
!838 = !DIGlobalVariableExpression(var: !839, expr: !DIExpression())
!839 = distinct !DIGlobalVariable(name: "just_group", scope: !816, file: !3, line: 51, type: !27, isLocal: true, isDefinition: true)
!840 = !DIGlobalVariableExpression(var: !841, expr: !DIExpression())
!841 = distinct !DIGlobalVariable(name: "use_name", scope: !816, file: !3, line: 61, type: !27, isLocal: true, isDefinition: true)
!842 = !DIGlobalVariableExpression(var: !843, expr: !DIExpression())
!843 = distinct !DIGlobalVariable(name: "use_real", scope: !816, file: !3, line: 53, type: !27, isLocal: true, isDefinition: true)
!844 = !DIGlobalVariableExpression(var: !845, expr: !DIExpression())
!845 = distinct !DIGlobalVariable(name: "just_user", scope: !816, file: !3, line: 55, type: !27, isLocal: true, isDefinition: true)
!846 = !DIGlobalVariableExpression(var: !847, expr: !DIExpression())
!847 = distinct !DIGlobalVariable(name: "opt_zero", scope: !816, file: !3, line: 47, type: !27, isLocal: true, isDefinition: true)
!848 = !DIGlobalVariableExpression(var: !849, expr: !DIExpression())
!849 = distinct !DIGlobalVariable(name: "just_group_list", scope: !816, file: !3, line: 49, type: !27, isLocal: true, isDefinition: true)
!850 = !DIGlobalVariableExpression(var: !851, expr: !DIExpression())
!851 = distinct !DIGlobalVariable(name: "context", scope: !816, file: !3, line: 69, type: !6, isLocal: true, isDefinition: true)
!852 = !DIGlobalVariableExpression(var: !853, expr: !DIExpression())
!853 = distinct !DIGlobalVariable(name: "multiple_users", scope: !816, file: !3, line: 59, type: !27, isLocal: true, isDefinition: true)
!854 = !DIGlobalVariableExpression(var: !855, expr: !DIExpression())
!855 = distinct !DIGlobalVariable(name: "ok", scope: !816, file: !3, line: 57, type: !27, isLocal: true, isDefinition: true)
!856 = !DIGlobalVariableExpression(var: !857, expr: !DIExpression())
!857 = distinct !DIGlobalVariable(name: "buf", scope: !858, file: !3, line: 327, type: !53, isLocal: true, isDefinition: true)
!858 = distinct !DISubprogram(name: "uidtostr_ptr", scope: !3, file: !3, line: 325, type: !49, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !816, retainedNodes: !4)
!859 = !DIGlobalVariableExpression(var: !860, expr: !DIExpression())
!860 = distinct !DIGlobalVariable(name: "buf", scope: !861, file: !3, line: 316, type: !53, isLocal: true, isDefinition: true)
!861 = distinct !DISubprogram(name: "gidtostr_ptr", scope: !3, file: !3, line: 314, type: !59, scopeLine: 315, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !816, retainedNodes: !4)
!862 = !DILocalVariable(name: "argv", arg: 2, scope: !815, file: !3, line: 125, type: !184)
!863 = !DILocalVariable(name: "optc", scope: !815, file: !3, line: 127, type: !72)
!864 = !DILocalVariable(name: "selinux_enabled", scope: !815, file: !3, line: 128, type: !72)
!865 = !DILocalVariable(name: "smack_enabled", scope: !815, file: !3, line: 129, type: !27)
!866 = !DILocalVariable(name: "pw_name", scope: !815, file: !3, line: 130, type: !6)
!867 = !DILocalVariable(name: "spec", scope: !868, file: !3, line: 239, type: !69)
!868 = distinct !DILexicalBlock(scope: !869, file: !3, line: 237, column: 9)
!869 = distinct !DILexicalBlock(scope: !870, file: !3, line: 236, column: 7)
!870 = distinct !DILexicalBlock(scope: !871, file: !3, line: 236, column: 7)
!871 = distinct !DILexicalBlock(scope: !872, file: !3, line: 228, column: 5)
!872 = distinct !DILexicalBlock(scope: !873, file: !3, line: 227, column: 7)
!873 = distinct !DISubprogram(name: "main", scope: !3, file: !3, line: 125, type: !511, scopeLine: 126, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !874, retainedNodes: !4)
!874 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !875, nameTableKind: None)
!875 = !{!876, !878, !880, !882, !884, !894, !896, !898, !900, !902, !904, !906, !908, !910, !912, !914, !917}
!876 = !DIGlobalVariableExpression(var: !877, expr: !DIExpression())
!877 = distinct !DIGlobalVariable(name: "ruid", scope: !874, file: !3, line: 64, type: !12, isLocal: true, isDefinition: true)
!878 = !DIGlobalVariableExpression(var: !879, expr: !DIExpression())
!879 = distinct !DIGlobalVariable(name: "euid", scope: !874, file: !3, line: 64, type: !12, isLocal: true, isDefinition: true)
!880 = !DIGlobalVariableExpression(var: !881, expr: !DIExpression())
!881 = distinct !DIGlobalVariable(name: "rgid", scope: !874, file: !3, line: 65, type: !21, isLocal: true, isDefinition: true)
!882 = !DIGlobalVariableExpression(var: !883, expr: !DIExpression())
!883 = distinct !DIGlobalVariable(name: "egid", scope: !874, file: !3, line: 65, type: !21, isLocal: true, isDefinition: true)
!884 = !DIGlobalVariableExpression(var: !885, expr: !DIExpression())
!885 = distinct !DIGlobalVariable(name: "longopts", scope: !874, file: !3, line: 75, type: !886, isLocal: true, isDefinition: true)
!886 = !DICompositeType(tag: DW_TAG_array_type, baseType: !887, size: 2560, elements: !76)
!887 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !888)
!888 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !66, line: 50, size: 256, elements: !889)
!889 = !{!890, !891, !892, !893}
!890 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !888, file: !66, line: 52, baseType: !69, size: 64)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !888, file: !66, line: 55, baseType: !72, size: 32, offset: 64)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !888, file: !66, line: 56, baseType: !74, size: 64, offset: 128)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !888, file: !66, line: 57, baseType: !72, size: 32, offset: 192)
!894 = !DIGlobalVariableExpression(var: !895, expr: !DIExpression())
!895 = distinct !DIGlobalVariable(name: "just_context", scope: !874, file: !3, line: 45, type: !27, isLocal: true, isDefinition: true)
!896 = !DIGlobalVariableExpression(var: !897, expr: !DIExpression())
!897 = distinct !DIGlobalVariable(name: "just_group", scope: !874, file: !3, line: 51, type: !27, isLocal: true, isDefinition: true)
!898 = !DIGlobalVariableExpression(var: !899, expr: !DIExpression())
!899 = distinct !DIGlobalVariable(name: "use_name", scope: !874, file: !3, line: 61, type: !27, isLocal: true, isDefinition: true)
!900 = !DIGlobalVariableExpression(var: !901, expr: !DIExpression())
!901 = distinct !DIGlobalVariable(name: "use_real", scope: !874, file: !3, line: 53, type: !27, isLocal: true, isDefinition: true)
!902 = !DIGlobalVariableExpression(var: !903, expr: !DIExpression())
!903 = distinct !DIGlobalVariable(name: "just_user", scope: !874, file: !3, line: 55, type: !27, isLocal: true, isDefinition: true)
!904 = !DIGlobalVariableExpression(var: !905, expr: !DIExpression())
!905 = distinct !DIGlobalVariable(name: "opt_zero", scope: !874, file: !3, line: 47, type: !27, isLocal: true, isDefinition: true)
!906 = !DIGlobalVariableExpression(var: !907, expr: !DIExpression())
!907 = distinct !DIGlobalVariable(name: "just_group_list", scope: !874, file: !3, line: 49, type: !27, isLocal: true, isDefinition: true)
!908 = !DIGlobalVariableExpression(var: !909, expr: !DIExpression())
!909 = distinct !DIGlobalVariable(name: "context", scope: !874, file: !3, line: 69, type: !6, isLocal: true, isDefinition: true)
!910 = !DIGlobalVariableExpression(var: !911, expr: !DIExpression())
!911 = distinct !DIGlobalVariable(name: "multiple_users", scope: !874, file: !3, line: 59, type: !27, isLocal: true, isDefinition: true)
!912 = !DIGlobalVariableExpression(var: !913, expr: !DIExpression())
!913 = distinct !DIGlobalVariable(name: "ok", scope: !874, file: !3, line: 57, type: !27, isLocal: true, isDefinition: true)
!914 = !DIGlobalVariableExpression(var: !915, expr: !DIExpression())
!915 = distinct !DIGlobalVariable(name: "buf", scope: !916, file: !3, line: 327, type: !53, isLocal: true, isDefinition: true)
!916 = distinct !DISubprogram(name: "uidtostr_ptr", scope: !3, file: !3, line: 325, type: !49, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !874, retainedNodes: !4)
!917 = !DIGlobalVariableExpression(var: !918, expr: !DIExpression())
!918 = distinct !DIGlobalVariable(name: "buf", scope: !919, file: !3, line: 316, type: !53, isLocal: true, isDefinition: true)
!919 = distinct !DISubprogram(name: "gidtostr_ptr", scope: !3, file: !3, line: 314, type: !59, scopeLine: 315, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !874, retainedNodes: !4)
!920 = !DILocalVariable(name: "NO_GID", scope: !921, file: !3, line: 272, type: !21)
!921 = distinct !DILexicalBlock(scope: !922, file: !3, line: 267, column: 5)
!922 = distinct !DILexicalBlock(scope: !923, file: !3, line: 227, column: 7)
!923 = distinct !DISubprogram(name: "main", scope: !3, file: !3, line: 125, type: !511, scopeLine: 126, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !924, retainedNodes: !4)
!924 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !925, nameTableKind: None)
!925 = !{!926, !928, !930, !932, !934, !944, !946, !948, !950, !952, !954, !956, !958, !960, !962, !964, !967}
!926 = !DIGlobalVariableExpression(var: !927, expr: !DIExpression())
!927 = distinct !DIGlobalVariable(name: "ruid", scope: !924, file: !3, line: 64, type: !12, isLocal: true, isDefinition: true)
!928 = !DIGlobalVariableExpression(var: !929, expr: !DIExpression())
!929 = distinct !DIGlobalVariable(name: "euid", scope: !924, file: !3, line: 64, type: !12, isLocal: true, isDefinition: true)
!930 = !DIGlobalVariableExpression(var: !931, expr: !DIExpression())
!931 = distinct !DIGlobalVariable(name: "rgid", scope: !924, file: !3, line: 65, type: !21, isLocal: true, isDefinition: true)
!932 = !DIGlobalVariableExpression(var: !933, expr: !DIExpression())
!933 = distinct !DIGlobalVariable(name: "egid", scope: !924, file: !3, line: 65, type: !21, isLocal: true, isDefinition: true)
!934 = !DIGlobalVariableExpression(var: !935, expr: !DIExpression())
!935 = distinct !DIGlobalVariable(name: "longopts", scope: !924, file: !3, line: 75, type: !936, isLocal: true, isDefinition: true)
!936 = !DICompositeType(tag: DW_TAG_array_type, baseType: !937, size: 2560, elements: !76)
!937 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !938)
!938 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !66, line: 50, size: 256, elements: !939)
!939 = !{!940, !941, !942, !943}
!940 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !938, file: !66, line: 52, baseType: !69, size: 64)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !938, file: !66, line: 55, baseType: !72, size: 32, offset: 64)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !938, file: !66, line: 56, baseType: !74, size: 64, offset: 128)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !938, file: !66, line: 57, baseType: !72, size: 32, offset: 192)
!944 = !DIGlobalVariableExpression(var: !945, expr: !DIExpression())
!945 = distinct !DIGlobalVariable(name: "just_context", scope: !924, file: !3, line: 45, type: !27, isLocal: true, isDefinition: true)
!946 = !DIGlobalVariableExpression(var: !947, expr: !DIExpression())
!947 = distinct !DIGlobalVariable(name: "just_group", scope: !924, file: !3, line: 51, type: !27, isLocal: true, isDefinition: true)
!948 = !DIGlobalVariableExpression(var: !949, expr: !DIExpression())
!949 = distinct !DIGlobalVariable(name: "use_name", scope: !924, file: !3, line: 61, type: !27, isLocal: true, isDefinition: true)
!950 = !DIGlobalVariableExpression(var: !951, expr: !DIExpression())
!951 = distinct !DIGlobalVariable(name: "use_real", scope: !924, file: !3, line: 53, type: !27, isLocal: true, isDefinition: true)
!952 = !DIGlobalVariableExpression(var: !953, expr: !DIExpression())
!953 = distinct !DIGlobalVariable(name: "just_user", scope: !924, file: !3, line: 55, type: !27, isLocal: true, isDefinition: true)
!954 = !DIGlobalVariableExpression(var: !955, expr: !DIExpression())
!955 = distinct !DIGlobalVariable(name: "opt_zero", scope: !924, file: !3, line: 47, type: !27, isLocal: true, isDefinition: true)
!956 = !DIGlobalVariableExpression(var: !957, expr: !DIExpression())
!957 = distinct !DIGlobalVariable(name: "just_group_list", scope: !924, file: !3, line: 49, type: !27, isLocal: true, isDefinition: true)
!958 = !DIGlobalVariableExpression(var: !959, expr: !DIExpression())
!959 = distinct !DIGlobalVariable(name: "context", scope: !924, file: !3, line: 69, type: !6, isLocal: true, isDefinition: true)
!960 = !DIGlobalVariableExpression(var: !961, expr: !DIExpression())
!961 = distinct !DIGlobalVariable(name: "multiple_users", scope: !924, file: !3, line: 59, type: !27, isLocal: true, isDefinition: true)
!962 = !DIGlobalVariableExpression(var: !963, expr: !DIExpression())
!963 = distinct !DIGlobalVariable(name: "ok", scope: !924, file: !3, line: 57, type: !27, isLocal: true, isDefinition: true)
!964 = !DIGlobalVariableExpression(var: !965, expr: !DIExpression())
!965 = distinct !DIGlobalVariable(name: "buf", scope: !966, file: !3, line: 327, type: !53, isLocal: true, isDefinition: true)
!966 = distinct !DISubprogram(name: "uidtostr_ptr", scope: !3, file: !3, line: 325, type: !49, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !924, retainedNodes: !4)
!967 = !DIGlobalVariableExpression(var: !968, expr: !DIExpression())
!968 = distinct !DIGlobalVariable(name: "buf", scope: !969, file: !3, line: 316, type: !53, isLocal: true, isDefinition: true)
!969 = distinct !DISubprogram(name: "gidtostr_ptr", scope: !3, file: !3, line: 314, type: !59, scopeLine: 315, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !924, retainedNodes: !4)
!970 = distinct !DISubprogram(name: "is_smack_enabled", scope: !971, file: !971, line: 39, type: !972, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!971 = !DIFile(filename: "./lib/smack.h", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!972 = !DISubroutineType(types: !973)
!973 = !{!27}
!974 = !DILocation(line: 44, column: 3, scope: !970)
!975 = distinct !DISubprogram(name: "smack_new_label_from_self", scope: !971, file: !971, line: 26, type: !976, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!976 = !DISubroutineType(types: !977)
!977 = !{!978, !184}
!978 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !979, line: 77, baseType: !980)
!979 = !DIFile(filename: "/usr/include/stdio.h", directory: "")
!980 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !15, line: 193, baseType: !981)
!981 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!982 = !DILocalVariable(name: "label", arg: 1, scope: !975, file: !971, line: 26, type: !184)
!983 = !DILocation(line: 26, column: 35, scope: !975)
!984 = !DILocation(line: 28, column: 3, scope: !975)
!985 = !DILocalVariable(name: "label", arg: 1, scope: !986, file: !971, line: 26, type: !184)
!986 = distinct !DISubprogram(name: "smack_new_label_from_self", scope: !971, file: !971, line: 26, type: !976, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !987, retainedNodes: !4)
!987 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !988, nameTableKind: None)
!988 = !{!989, !991, !993, !995, !997, !1007, !1009, !1011, !1013, !1015, !1017, !1019, !1021, !1023, !1025, !1027, !1030}
!989 = !DIGlobalVariableExpression(var: !990, expr: !DIExpression())
!990 = distinct !DIGlobalVariable(name: "ruid", scope: !987, file: !3, line: 64, type: !12, isLocal: true, isDefinition: true)
!991 = !DIGlobalVariableExpression(var: !992, expr: !DIExpression())
!992 = distinct !DIGlobalVariable(name: "euid", scope: !987, file: !3, line: 64, type: !12, isLocal: true, isDefinition: true)
!993 = !DIGlobalVariableExpression(var: !994, expr: !DIExpression())
!994 = distinct !DIGlobalVariable(name: "rgid", scope: !987, file: !3, line: 65, type: !21, isLocal: true, isDefinition: true)
!995 = !DIGlobalVariableExpression(var: !996, expr: !DIExpression())
!996 = distinct !DIGlobalVariable(name: "egid", scope: !987, file: !3, line: 65, type: !21, isLocal: true, isDefinition: true)
!997 = !DIGlobalVariableExpression(var: !998, expr: !DIExpression())
!998 = distinct !DIGlobalVariable(name: "longopts", scope: !987, file: !3, line: 75, type: !999, isLocal: true, isDefinition: true)
!999 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1000, size: 2560, elements: !76)
!1000 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1001)
!1001 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !66, line: 50, size: 256, elements: !1002)
!1002 = !{!1003, !1004, !1005, !1006}
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1001, file: !66, line: 52, baseType: !69, size: 64)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !1001, file: !66, line: 55, baseType: !72, size: 32, offset: 64)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1001, file: !66, line: 56, baseType: !74, size: 64, offset: 128)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1001, file: !66, line: 57, baseType: !72, size: 32, offset: 192)
!1007 = !DIGlobalVariableExpression(var: !1008, expr: !DIExpression())
!1008 = distinct !DIGlobalVariable(name: "just_context", scope: !987, file: !3, line: 45, type: !27, isLocal: true, isDefinition: true)
!1009 = !DIGlobalVariableExpression(var: !1010, expr: !DIExpression())
!1010 = distinct !DIGlobalVariable(name: "just_group", scope: !987, file: !3, line: 51, type: !27, isLocal: true, isDefinition: true)
!1011 = !DIGlobalVariableExpression(var: !1012, expr: !DIExpression())
!1012 = distinct !DIGlobalVariable(name: "use_name", scope: !987, file: !3, line: 61, type: !27, isLocal: true, isDefinition: true)
!1013 = !DIGlobalVariableExpression(var: !1014, expr: !DIExpression())
!1014 = distinct !DIGlobalVariable(name: "use_real", scope: !987, file: !3, line: 53, type: !27, isLocal: true, isDefinition: true)
!1015 = !DIGlobalVariableExpression(var: !1016, expr: !DIExpression())
!1016 = distinct !DIGlobalVariable(name: "just_user", scope: !987, file: !3, line: 55, type: !27, isLocal: true, isDefinition: true)
!1017 = !DIGlobalVariableExpression(var: !1018, expr: !DIExpression())
!1018 = distinct !DIGlobalVariable(name: "opt_zero", scope: !987, file: !3, line: 47, type: !27, isLocal: true, isDefinition: true)
!1019 = !DIGlobalVariableExpression(var: !1020, expr: !DIExpression())
!1020 = distinct !DIGlobalVariable(name: "just_group_list", scope: !987, file: !3, line: 49, type: !27, isLocal: true, isDefinition: true)
!1021 = !DIGlobalVariableExpression(var: !1022, expr: !DIExpression())
!1022 = distinct !DIGlobalVariable(name: "context", scope: !987, file: !3, line: 69, type: !6, isLocal: true, isDefinition: true)
!1023 = !DIGlobalVariableExpression(var: !1024, expr: !DIExpression())
!1024 = distinct !DIGlobalVariable(name: "multiple_users", scope: !987, file: !3, line: 59, type: !27, isLocal: true, isDefinition: true)
!1025 = !DIGlobalVariableExpression(var: !1026, expr: !DIExpression())
!1026 = distinct !DIGlobalVariable(name: "ok", scope: !987, file: !3, line: 57, type: !27, isLocal: true, isDefinition: true)
!1027 = !DIGlobalVariableExpression(var: !1028, expr: !DIExpression())
!1028 = distinct !DIGlobalVariable(name: "buf", scope: !1029, file: !3, line: 327, type: !53, isLocal: true, isDefinition: true)
!1029 = distinct !DISubprogram(name: "uidtostr_ptr", scope: !3, file: !3, line: 325, type: !49, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !987, retainedNodes: !4)
!1030 = !DIGlobalVariableExpression(var: !1031, expr: !DIExpression())
!1031 = distinct !DIGlobalVariable(name: "buf", scope: !1032, file: !3, line: 316, type: !53, isLocal: true, isDefinition: true)
!1032 = distinct !DISubprogram(name: "gidtostr_ptr", scope: !3, file: !3, line: 314, type: !59, scopeLine: 315, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !987, retainedNodes: !4)
!1033 = distinct !DISubprogram(name: "print_stuff", scope: !3, file: !3, line: 432, type: !343, scopeLine: 433, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!1034 = !DILocalVariable(name: "pw_name", arg: 1, scope: !1033, file: !3, line: 432, type: !69)
!1035 = !DILocation(line: 432, column: 26, scope: !1033)
!1036 = !DILocation(line: 434, column: 7, scope: !1037)
!1037 = distinct !DILexicalBlock(scope: !1033, file: !3, line: 434, column: 7)
!1038 = !DILocation(line: 434, column: 7, scope: !1033)
!1039 = !DILocation(line: 435, column: 19, scope: !1037)
!1040 = !DILocation(line: 435, column: 30, scope: !1037)
!1041 = !DILocation(line: 435, column: 37, scope: !1037)
!1042 = !DILocation(line: 435, column: 7, scope: !1037)
!1043 = !DILocation(line: 442, column: 12, scope: !1044)
!1044 = distinct !DILexicalBlock(scope: !1037, file: !3, line: 442, column: 12)
!1045 = !DILocation(line: 442, column: 12, scope: !1037)
!1046 = !DILocation(line: 443, column: 24, scope: !1044)
!1047 = !DILocation(line: 443, column: 35, scope: !1044)
!1048 = !DILocation(line: 443, column: 42, scope: !1044)
!1049 = !DILocation(line: 443, column: 48, scope: !1044)
!1050 = !DILocation(line: 443, column: 11, scope: !1044)
!1051 = !DILocation(line: 443, column: 8, scope: !1044)
!1052 = !DILocation(line: 443, column: 5, scope: !1044)
!1053 = !DILocation(line: 444, column: 12, scope: !1054)
!1054 = distinct !DILexicalBlock(scope: !1044, file: !3, line: 444, column: 12)
!1055 = !DILocation(line: 444, column: 12, scope: !1044)
!1056 = !DILocation(line: 445, column: 29, scope: !1054)
!1057 = !DILocation(line: 445, column: 38, scope: !1054)
!1058 = !DILocation(line: 445, column: 44, scope: !1054)
!1059 = !DILocation(line: 445, column: 50, scope: !1054)
!1060 = !DILocation(line: 446, column: 29, scope: !1054)
!1061 = !DILocation(line: 446, column: 39, scope: !1054)
!1062 = !DILocation(line: 445, column: 11, scope: !1054)
!1063 = !DILocation(line: 445, column: 8, scope: !1054)
!1064 = !DILocation(line: 445, column: 5, scope: !1054)
!1065 = !DILocation(line: 447, column: 12, scope: !1066)
!1066 = distinct !DILexicalBlock(scope: !1054, file: !3, line: 447, column: 12)
!1067 = !DILocation(line: 447, column: 12, scope: !1054)
!1068 = !DILocation(line: 448, column: 5, scope: !1066)
!1069 = !DILocation(line: 450, column: 22, scope: !1066)
!1070 = !DILocation(line: 450, column: 5, scope: !1066)
!1071 = !DILocation(line: 455, column: 7, scope: !1072)
!1072 = distinct !DILexicalBlock(scope: !1033, file: !3, line: 455, column: 7)
!1073 = !DILocation(line: 455, column: 16, scope: !1072)
!1074 = !DILocation(line: 455, column: 19, scope: !1072)
!1075 = !DILocation(line: 455, column: 35, scope: !1072)
!1076 = !DILocation(line: 455, column: 38, scope: !1072)
!1077 = !DILocation(line: 455, column: 7, scope: !1033)
!1078 = !DILocation(line: 457, column: 7, scope: !1079)
!1079 = distinct !DILexicalBlock(scope: !1072, file: !3, line: 456, column: 5)
!1080 = !DILocation(line: 458, column: 7, scope: !1079)
!1081 = !DILocation(line: 459, column: 5, scope: !1079)
!1082 = !DILocation(line: 462, column: 7, scope: !1083)
!1083 = distinct !DILexicalBlock(scope: !1072, file: !3, line: 461, column: 5)
!1084 = !DILocation(line: 464, column: 1, scope: !1033)
!1085 = !DILocalVariable(name: "pw_name", arg: 1, scope: !1086, file: !3, line: 432, type: !69)
!1086 = distinct !DISubprogram(name: "print_stuff", scope: !3, file: !3, line: 432, type: !343, scopeLine: 433, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1087, retainedNodes: !4)
!1087 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !1088, nameTableKind: None)
!1088 = !{!1089, !1091, !1093, !1095, !1097, !1107, !1109, !1111, !1113, !1115, !1117, !1119, !1121, !1123, !1125, !1127, !1130}
!1089 = !DIGlobalVariableExpression(var: !1090, expr: !DIExpression())
!1090 = distinct !DIGlobalVariable(name: "ruid", scope: !1087, file: !3, line: 64, type: !12, isLocal: true, isDefinition: true)
!1091 = !DIGlobalVariableExpression(var: !1092, expr: !DIExpression())
!1092 = distinct !DIGlobalVariable(name: "euid", scope: !1087, file: !3, line: 64, type: !12, isLocal: true, isDefinition: true)
!1093 = !DIGlobalVariableExpression(var: !1094, expr: !DIExpression())
!1094 = distinct !DIGlobalVariable(name: "rgid", scope: !1087, file: !3, line: 65, type: !21, isLocal: true, isDefinition: true)
!1095 = !DIGlobalVariableExpression(var: !1096, expr: !DIExpression())
!1096 = distinct !DIGlobalVariable(name: "egid", scope: !1087, file: !3, line: 65, type: !21, isLocal: true, isDefinition: true)
!1097 = !DIGlobalVariableExpression(var: !1098, expr: !DIExpression())
!1098 = distinct !DIGlobalVariable(name: "longopts", scope: !1087, file: !3, line: 75, type: !1099, isLocal: true, isDefinition: true)
!1099 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1100, size: 2560, elements: !76)
!1100 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1101)
!1101 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !66, line: 50, size: 256, elements: !1102)
!1102 = !{!1103, !1104, !1105, !1106}
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1101, file: !66, line: 52, baseType: !69, size: 64)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !1101, file: !66, line: 55, baseType: !72, size: 32, offset: 64)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1101, file: !66, line: 56, baseType: !74, size: 64, offset: 128)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1101, file: !66, line: 57, baseType: !72, size: 32, offset: 192)
!1107 = !DIGlobalVariableExpression(var: !1108, expr: !DIExpression())
!1108 = distinct !DIGlobalVariable(name: "just_context", scope: !1087, file: !3, line: 45, type: !27, isLocal: true, isDefinition: true)
!1109 = !DIGlobalVariableExpression(var: !1110, expr: !DIExpression())
!1110 = distinct !DIGlobalVariable(name: "just_group", scope: !1087, file: !3, line: 51, type: !27, isLocal: true, isDefinition: true)
!1111 = !DIGlobalVariableExpression(var: !1112, expr: !DIExpression())
!1112 = distinct !DIGlobalVariable(name: "use_name", scope: !1087, file: !3, line: 61, type: !27, isLocal: true, isDefinition: true)
!1113 = !DIGlobalVariableExpression(var: !1114, expr: !DIExpression())
!1114 = distinct !DIGlobalVariable(name: "use_real", scope: !1087, file: !3, line: 53, type: !27, isLocal: true, isDefinition: true)
!1115 = !DIGlobalVariableExpression(var: !1116, expr: !DIExpression())
!1116 = distinct !DIGlobalVariable(name: "just_user", scope: !1087, file: !3, line: 55, type: !27, isLocal: true, isDefinition: true)
!1117 = !DIGlobalVariableExpression(var: !1118, expr: !DIExpression())
!1118 = distinct !DIGlobalVariable(name: "opt_zero", scope: !1087, file: !3, line: 47, type: !27, isLocal: true, isDefinition: true)
!1119 = !DIGlobalVariableExpression(var: !1120, expr: !DIExpression())
!1120 = distinct !DIGlobalVariable(name: "just_group_list", scope: !1087, file: !3, line: 49, type: !27, isLocal: true, isDefinition: true)
!1121 = !DIGlobalVariableExpression(var: !1122, expr: !DIExpression())
!1122 = distinct !DIGlobalVariable(name: "context", scope: !1087, file: !3, line: 69, type: !6, isLocal: true, isDefinition: true)
!1123 = !DIGlobalVariableExpression(var: !1124, expr: !DIExpression())
!1124 = distinct !DIGlobalVariable(name: "multiple_users", scope: !1087, file: !3, line: 59, type: !27, isLocal: true, isDefinition: true)
!1125 = !DIGlobalVariableExpression(var: !1126, expr: !DIExpression())
!1126 = distinct !DIGlobalVariable(name: "ok", scope: !1087, file: !3, line: 57, type: !27, isLocal: true, isDefinition: true)
!1127 = !DIGlobalVariableExpression(var: !1128, expr: !DIExpression())
!1128 = distinct !DIGlobalVariable(name: "buf", scope: !1129, file: !3, line: 327, type: !53, isLocal: true, isDefinition: true)
!1129 = distinct !DISubprogram(name: "uidtostr_ptr", scope: !3, file: !3, line: 325, type: !49, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1087, retainedNodes: !4)
!1130 = !DIGlobalVariableExpression(var: !1131, expr: !DIExpression())
!1131 = distinct !DIGlobalVariable(name: "buf", scope: !1132, file: !3, line: 316, type: !53, isLocal: true, isDefinition: true)
!1132 = distinct !DISubprogram(name: "gidtostr_ptr", scope: !3, file: !3, line: 314, type: !59, scopeLine: 315, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1087, retainedNodes: !4)
!1133 = distinct !DISubprogram(name: "print_user", scope: !3, file: !3, line: 335, type: !1134, scopeLine: 336, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!1134 = !DISubroutineType(types: !1135)
!1135 = !{null, !12}
!1136 = !DILocalVariable(name: "uid", arg: 1, scope: !1133, file: !3, line: 335, type: !12)
!1137 = !DILocation(line: 335, column: 19, scope: !1133)
!1138 = !DILocalVariable(name: "pwd", scope: !1133, file: !3, line: 337, type: !657)
!1139 = !DILocation(line: 337, column: 18, scope: !1133)
!1140 = !DILocation(line: 339, column: 7, scope: !1141)
!1141 = distinct !DILexicalBlock(scope: !1133, file: !3, line: 339, column: 7)
!1142 = !DILocation(line: 339, column: 7, scope: !1133)
!1143 = !DILocation(line: 341, column: 23, scope: !1144)
!1144 = distinct !DILexicalBlock(scope: !1141, file: !3, line: 340, column: 5)
!1145 = !DILocation(line: 341, column: 13, scope: !1144)
!1146 = !DILocation(line: 341, column: 11, scope: !1144)
!1147 = !DILocation(line: 342, column: 11, scope: !1148)
!1148 = distinct !DILexicalBlock(scope: !1144, file: !3, line: 342, column: 11)
!1149 = !DILocation(line: 342, column: 15, scope: !1148)
!1150 = !DILocation(line: 342, column: 11, scope: !1144)
!1151 = !DILocation(line: 344, column: 24, scope: !1152)
!1152 = distinct !DILexicalBlock(scope: !1148, file: !3, line: 343, column: 9)
!1153 = !DILocation(line: 345, column: 18, scope: !1152)
!1154 = !DILocation(line: 344, column: 11, scope: !1152)
!1155 = !DILocation(line: 346, column: 14, scope: !1152)
!1156 = !DILocation(line: 347, column: 9, scope: !1152)
!1157 = !DILocation(line: 348, column: 5, scope: !1144)
!1158 = !DILocalVariable(name: "s", scope: !1133, file: !3, line: 350, type: !6)
!1159 = !DILocation(line: 350, column: 9, scope: !1133)
!1160 = !DILocation(line: 350, column: 13, scope: !1133)
!1161 = !DILocation(line: 350, column: 19, scope: !1133)
!1162 = !DILocation(line: 350, column: 24, scope: !1133)
!1163 = !DILocation(line: 350, column: 34, scope: !1133)
!1164 = !DILocation(line: 351, column: 3, scope: !1133)
!1165 = !DILocation(line: 352, column: 1, scope: !1133)
!1166 = !DILocalVariable(name: "uid", arg: 1, scope: !1167, file: !3, line: 335, type: !12)
!1167 = distinct !DISubprogram(name: "print_user", scope: !3, file: !3, line: 335, type: !1134, scopeLine: 336, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1168, retainedNodes: !4)
!1168 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !1169, nameTableKind: None)
!1169 = !{!1170, !1172, !1174, !1176, !1178, !1188, !1190, !1192, !1194, !1196, !1198, !1200, !1202, !1204, !1206, !1208, !1211}
!1170 = !DIGlobalVariableExpression(var: !1171, expr: !DIExpression())
!1171 = distinct !DIGlobalVariable(name: "ruid", scope: !1168, file: !3, line: 64, type: !12, isLocal: true, isDefinition: true)
!1172 = !DIGlobalVariableExpression(var: !1173, expr: !DIExpression())
!1173 = distinct !DIGlobalVariable(name: "euid", scope: !1168, file: !3, line: 64, type: !12, isLocal: true, isDefinition: true)
!1174 = !DIGlobalVariableExpression(var: !1175, expr: !DIExpression())
!1175 = distinct !DIGlobalVariable(name: "rgid", scope: !1168, file: !3, line: 65, type: !21, isLocal: true, isDefinition: true)
!1176 = !DIGlobalVariableExpression(var: !1177, expr: !DIExpression())
!1177 = distinct !DIGlobalVariable(name: "egid", scope: !1168, file: !3, line: 65, type: !21, isLocal: true, isDefinition: true)
!1178 = !DIGlobalVariableExpression(var: !1179, expr: !DIExpression())
!1179 = distinct !DIGlobalVariable(name: "longopts", scope: !1168, file: !3, line: 75, type: !1180, isLocal: true, isDefinition: true)
!1180 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1181, size: 2560, elements: !76)
!1181 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1182)
!1182 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !66, line: 50, size: 256, elements: !1183)
!1183 = !{!1184, !1185, !1186, !1187}
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1182, file: !66, line: 52, baseType: !69, size: 64)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !1182, file: !66, line: 55, baseType: !72, size: 32, offset: 64)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1182, file: !66, line: 56, baseType: !74, size: 64, offset: 128)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1182, file: !66, line: 57, baseType: !72, size: 32, offset: 192)
!1188 = !DIGlobalVariableExpression(var: !1189, expr: !DIExpression())
!1189 = distinct !DIGlobalVariable(name: "just_context", scope: !1168, file: !3, line: 45, type: !27, isLocal: true, isDefinition: true)
!1190 = !DIGlobalVariableExpression(var: !1191, expr: !DIExpression())
!1191 = distinct !DIGlobalVariable(name: "just_group", scope: !1168, file: !3, line: 51, type: !27, isLocal: true, isDefinition: true)
!1192 = !DIGlobalVariableExpression(var: !1193, expr: !DIExpression())
!1193 = distinct !DIGlobalVariable(name: "use_name", scope: !1168, file: !3, line: 61, type: !27, isLocal: true, isDefinition: true)
!1194 = !DIGlobalVariableExpression(var: !1195, expr: !DIExpression())
!1195 = distinct !DIGlobalVariable(name: "use_real", scope: !1168, file: !3, line: 53, type: !27, isLocal: true, isDefinition: true)
!1196 = !DIGlobalVariableExpression(var: !1197, expr: !DIExpression())
!1197 = distinct !DIGlobalVariable(name: "just_user", scope: !1168, file: !3, line: 55, type: !27, isLocal: true, isDefinition: true)
!1198 = !DIGlobalVariableExpression(var: !1199, expr: !DIExpression())
!1199 = distinct !DIGlobalVariable(name: "opt_zero", scope: !1168, file: !3, line: 47, type: !27, isLocal: true, isDefinition: true)
!1200 = !DIGlobalVariableExpression(var: !1201, expr: !DIExpression())
!1201 = distinct !DIGlobalVariable(name: "just_group_list", scope: !1168, file: !3, line: 49, type: !27, isLocal: true, isDefinition: true)
!1202 = !DIGlobalVariableExpression(var: !1203, expr: !DIExpression())
!1203 = distinct !DIGlobalVariable(name: "context", scope: !1168, file: !3, line: 69, type: !6, isLocal: true, isDefinition: true)
!1204 = !DIGlobalVariableExpression(var: !1205, expr: !DIExpression())
!1205 = distinct !DIGlobalVariable(name: "multiple_users", scope: !1168, file: !3, line: 59, type: !27, isLocal: true, isDefinition: true)
!1206 = !DIGlobalVariableExpression(var: !1207, expr: !DIExpression())
!1207 = distinct !DIGlobalVariable(name: "ok", scope: !1168, file: !3, line: 57, type: !27, isLocal: true, isDefinition: true)
!1208 = !DIGlobalVariableExpression(var: !1209, expr: !DIExpression())
!1209 = distinct !DIGlobalVariable(name: "buf", scope: !1210, file: !3, line: 327, type: !53, isLocal: true, isDefinition: true)
!1210 = distinct !DISubprogram(name: "uidtostr_ptr", scope: !3, file: !3, line: 325, type: !49, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1168, retainedNodes: !4)
!1211 = !DIGlobalVariableExpression(var: !1212, expr: !DIExpression())
!1212 = distinct !DIGlobalVariable(name: "buf", scope: !1213, file: !3, line: 316, type: !53, isLocal: true, isDefinition: true)
!1213 = distinct !DISubprogram(name: "gidtostr_ptr", scope: !3, file: !3, line: 314, type: !59, scopeLine: 315, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1168, retainedNodes: !4)
!1214 = !DILocalVariable(name: "pwd", scope: !1167, file: !3, line: 337, type: !1215)
!1215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1216, size: 64)
!1216 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "passwd", file: !659, line: 49, size: 384, elements: !1217)
!1217 = !{!1218, !1219, !1220, !1221, !1222, !1223, !1224}
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "pw_name", scope: !1216, file: !659, line: 51, baseType: !6, size: 64)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "pw_passwd", scope: !1216, file: !659, line: 52, baseType: !6, size: 64, offset: 64)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "pw_uid", scope: !1216, file: !659, line: 54, baseType: !14, size: 32, offset: 128)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "pw_gid", scope: !1216, file: !659, line: 55, baseType: !22, size: 32, offset: 160)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "pw_gecos", scope: !1216, file: !659, line: 56, baseType: !6, size: 64, offset: 192)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "pw_dir", scope: !1216, file: !659, line: 57, baseType: !6, size: 64, offset: 256)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "pw_shell", scope: !1216, file: !659, line: 58, baseType: !6, size: 64, offset: 320)
!1225 = distinct !DISubprogram(name: "print_full_info", scope: !3, file: !3, line: 357, type: !343, scopeLine: 358, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!1226 = !DILocalVariable(name: "username", arg: 1, scope: !1225, file: !3, line: 357, type: !69)
!1227 = !DILocation(line: 357, column: 30, scope: !1225)
!1228 = !DILocalVariable(name: "pwd", scope: !1225, file: !3, line: 359, type: !657)
!1229 = !DILocation(line: 359, column: 18, scope: !1225)
!1230 = !DILocalVariable(name: "grp", scope: !1225, file: !3, line: 360, type: !1231)
!1231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1232, size: 64)
!1232 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group", file: !1233, line: 42, size: 256, elements: !1234)
!1233 = !DIFile(filename: "/usr/include/grp.h", directory: "")
!1234 = !{!1235, !1236, !1237, !1238}
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "gr_name", scope: !1232, file: !1233, line: 44, baseType: !6, size: 64)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "gr_passwd", scope: !1232, file: !1233, line: 45, baseType: !6, size: 64, offset: 64)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "gr_gid", scope: !1232, file: !1233, line: 46, baseType: !22, size: 32, offset: 128)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "gr_mem", scope: !1232, file: !1233, line: 47, baseType: !184, size: 64, offset: 192)
!1239 = !DILocation(line: 360, column: 17, scope: !1225)
!1240 = !DILocation(line: 362, column: 11, scope: !1225)
!1241 = !DILocation(line: 362, column: 24, scope: !1225)
!1242 = !DILocation(line: 362, column: 3, scope: !1225)
!1243 = !DILocation(line: 363, column: 19, scope: !1225)
!1244 = !DILocation(line: 363, column: 9, scope: !1225)
!1245 = !DILocation(line: 363, column: 7, scope: !1225)
!1246 = !DILocation(line: 364, column: 7, scope: !1247)
!1247 = distinct !DILexicalBlock(scope: !1225, file: !3, line: 364, column: 7)
!1248 = !DILocation(line: 364, column: 7, scope: !1225)
!1249 = !DILocation(line: 365, column: 21, scope: !1247)
!1250 = !DILocation(line: 365, column: 26, scope: !1247)
!1251 = !DILocation(line: 365, column: 5, scope: !1247)
!1252 = !DILocation(line: 367, column: 11, scope: !1225)
!1253 = !DILocation(line: 367, column: 25, scope: !1225)
!1254 = !DILocation(line: 367, column: 3, scope: !1225)
!1255 = !DILocation(line: 368, column: 19, scope: !1225)
!1256 = !DILocation(line: 368, column: 9, scope: !1225)
!1257 = !DILocation(line: 368, column: 7, scope: !1225)
!1258 = !DILocation(line: 369, column: 7, scope: !1259)
!1259 = distinct !DILexicalBlock(scope: !1225, file: !3, line: 369, column: 7)
!1260 = !DILocation(line: 369, column: 7, scope: !1225)
!1261 = !DILocation(line: 370, column: 21, scope: !1259)
!1262 = !DILocation(line: 370, column: 26, scope: !1259)
!1263 = !DILocation(line: 370, column: 5, scope: !1259)
!1264 = !DILocation(line: 372, column: 7, scope: !1265)
!1265 = distinct !DILexicalBlock(scope: !1225, file: !3, line: 372, column: 7)
!1266 = !DILocation(line: 372, column: 15, scope: !1265)
!1267 = !DILocation(line: 372, column: 12, scope: !1265)
!1268 = !DILocation(line: 372, column: 7, scope: !1225)
!1269 = !DILocation(line: 374, column: 15, scope: !1270)
!1270 = distinct !DILexicalBlock(scope: !1265, file: !3, line: 373, column: 5)
!1271 = !DILocation(line: 374, column: 30, scope: !1270)
!1272 = !DILocation(line: 374, column: 7, scope: !1270)
!1273 = !DILocation(line: 375, column: 23, scope: !1270)
!1274 = !DILocation(line: 375, column: 13, scope: !1270)
!1275 = !DILocation(line: 375, column: 11, scope: !1270)
!1276 = !DILocation(line: 376, column: 11, scope: !1277)
!1277 = distinct !DILexicalBlock(scope: !1270, file: !3, line: 376, column: 11)
!1278 = !DILocation(line: 376, column: 11, scope: !1270)
!1279 = !DILocation(line: 377, column: 25, scope: !1277)
!1280 = !DILocation(line: 377, column: 30, scope: !1277)
!1281 = !DILocation(line: 377, column: 9, scope: !1277)
!1282 = !DILocation(line: 378, column: 5, scope: !1270)
!1283 = !DILocation(line: 380, column: 7, scope: !1284)
!1284 = distinct !DILexicalBlock(scope: !1225, file: !3, line: 380, column: 7)
!1285 = !DILocation(line: 380, column: 15, scope: !1284)
!1286 = !DILocation(line: 380, column: 12, scope: !1284)
!1287 = !DILocation(line: 380, column: 7, scope: !1225)
!1288 = !DILocation(line: 382, column: 15, scope: !1289)
!1289 = distinct !DILexicalBlock(scope: !1284, file: !3, line: 381, column: 5)
!1290 = !DILocation(line: 382, column: 30, scope: !1289)
!1291 = !DILocation(line: 382, column: 7, scope: !1289)
!1292 = !DILocation(line: 383, column: 23, scope: !1289)
!1293 = !DILocation(line: 383, column: 13, scope: !1289)
!1294 = !DILocation(line: 383, column: 11, scope: !1289)
!1295 = !DILocation(line: 384, column: 11, scope: !1296)
!1296 = distinct !DILexicalBlock(scope: !1289, file: !3, line: 384, column: 11)
!1297 = !DILocation(line: 384, column: 11, scope: !1289)
!1298 = !DILocation(line: 385, column: 25, scope: !1296)
!1299 = !DILocation(line: 385, column: 30, scope: !1296)
!1300 = !DILocation(line: 385, column: 9, scope: !1296)
!1301 = !DILocation(line: 386, column: 5, scope: !1289)
!1302 = !DILocalVariable(name: "groups", scope: !1303, file: !3, line: 389, type: !183)
!1303 = distinct !DILexicalBlock(scope: !1225, file: !3, line: 388, column: 3)
!1304 = !DILocation(line: 389, column: 12, scope: !1303)
!1305 = !DILocalVariable(name: "primary_group", scope: !1303, file: !3, line: 391, type: !21)
!1306 = !DILocation(line: 391, column: 11, scope: !1303)
!1307 = !DILocation(line: 392, column: 9, scope: !1308)
!1308 = distinct !DILexicalBlock(scope: !1303, file: !3, line: 392, column: 9)
!1309 = !DILocation(line: 392, column: 9, scope: !1303)
!1310 = !DILocation(line: 393, column: 23, scope: !1308)
!1311 = !DILocation(line: 393, column: 29, scope: !1308)
!1312 = !DILocation(line: 393, column: 34, scope: !1308)
!1313 = !DILocation(line: 393, column: 21, scope: !1308)
!1314 = !DILocation(line: 393, column: 7, scope: !1308)
!1315 = !DILocation(line: 395, column: 23, scope: !1308)
!1316 = !DILocation(line: 395, column: 21, scope: !1308)
!1317 = !DILocalVariable(name: "n_groups", scope: !1303, file: !3, line: 397, type: !72)
!1318 = !DILocation(line: 397, column: 9, scope: !1303)
!1319 = !DILocation(line: 397, column: 32, scope: !1303)
!1320 = !DILocation(line: 397, column: 42, scope: !1303)
!1321 = !DILocation(line: 397, column: 20, scope: !1303)
!1322 = !DILocation(line: 398, column: 9, scope: !1323)
!1323 = distinct !DILexicalBlock(scope: !1303, file: !3, line: 398, column: 9)
!1324 = !DILocation(line: 398, column: 18, scope: !1323)
!1325 = !DILocation(line: 398, column: 9, scope: !1303)
!1326 = !DILocation(line: 400, column: 13, scope: !1327)
!1327 = distinct !DILexicalBlock(scope: !1328, file: !3, line: 400, column: 13)
!1328 = distinct !DILexicalBlock(scope: !1323, file: !3, line: 399, column: 7)
!1329 = !DILocation(line: 400, column: 13, scope: !1328)
!1330 = !DILocation(line: 401, column: 21, scope: !1327)
!1331 = !DILocation(line: 401, column: 28, scope: !1327)
!1332 = !DILocation(line: 402, column: 25, scope: !1327)
!1333 = !DILocation(line: 402, column: 18, scope: !1327)
!1334 = !DILocation(line: 401, column: 11, scope: !1327)
!1335 = !DILocation(line: 404, column: 21, scope: !1327)
!1336 = !DILocation(line: 404, column: 28, scope: !1327)
!1337 = !DILocation(line: 404, column: 11, scope: !1327)
!1338 = !DILocation(line: 405, column: 12, scope: !1328)
!1339 = !DILocation(line: 406, column: 9, scope: !1328)
!1340 = !DILocation(line: 409, column: 9, scope: !1341)
!1341 = distinct !DILexicalBlock(scope: !1303, file: !3, line: 409, column: 9)
!1342 = !DILocation(line: 409, column: 18, scope: !1341)
!1343 = !DILocation(line: 409, column: 9, scope: !1303)
!1344 = !DILocation(line: 410, column: 7, scope: !1341)
!1345 = !DILocalVariable(name: "i", scope: !1346, file: !3, line: 411, type: !72)
!1346 = distinct !DILexicalBlock(scope: !1303, file: !3, line: 411, column: 5)
!1347 = !DILocation(line: 411, column: 14, scope: !1346)
!1348 = !DILocation(line: 411, column: 10, scope: !1346)
!1349 = !DILocation(line: 411, column: 21, scope: !1350)
!1350 = distinct !DILexicalBlock(scope: !1346, file: !3, line: 411, column: 5)
!1351 = !DILocation(line: 411, column: 25, scope: !1350)
!1352 = !DILocation(line: 411, column: 23, scope: !1350)
!1353 = !DILocation(line: 411, column: 5, scope: !1346)
!1354 = !DILocation(line: 413, column: 13, scope: !1355)
!1355 = distinct !DILexicalBlock(scope: !1356, file: !3, line: 413, column: 13)
!1356 = distinct !DILexicalBlock(scope: !1350, file: !3, line: 412, column: 7)
!1357 = !DILocation(line: 413, column: 15, scope: !1355)
!1358 = !DILocation(line: 413, column: 13, scope: !1356)
!1359 = !DILocation(line: 414, column: 11, scope: !1355)
!1360 = !DILocation(line: 415, column: 9, scope: !1356)
!1361 = !DILocation(line: 416, column: 25, scope: !1356)
!1362 = !DILocation(line: 416, column: 32, scope: !1356)
!1363 = !DILocation(line: 416, column: 15, scope: !1356)
!1364 = !DILocation(line: 416, column: 13, scope: !1356)
!1365 = !DILocation(line: 417, column: 13, scope: !1366)
!1366 = distinct !DILexicalBlock(scope: !1356, file: !3, line: 417, column: 13)
!1367 = !DILocation(line: 417, column: 13, scope: !1356)
!1368 = !DILocation(line: 418, column: 27, scope: !1366)
!1369 = !DILocation(line: 418, column: 32, scope: !1366)
!1370 = !DILocation(line: 418, column: 11, scope: !1366)
!1371 = !DILocation(line: 419, column: 7, scope: !1356)
!1372 = !DILocation(line: 411, column: 36, scope: !1350)
!1373 = !DILocation(line: 411, column: 5, scope: !1350)
!1374 = distinct !{!1374, !1353, !1375}
!1375 = !DILocation(line: 419, column: 7, scope: !1346)
!1376 = !DILocation(line: 420, column: 11, scope: !1303)
!1377 = !DILocation(line: 420, column: 5, scope: !1303)
!1378 = !DILocation(line: 425, column: 7, scope: !1379)
!1379 = distinct !DILexicalBlock(scope: !1225, file: !3, line: 425, column: 7)
!1380 = !DILocation(line: 425, column: 7, scope: !1225)
!1381 = !DILocation(line: 426, column: 13, scope: !1379)
!1382 = !DILocation(line: 426, column: 31, scope: !1379)
!1383 = !DILocation(line: 426, column: 5, scope: !1379)
!1384 = !DILocation(line: 427, column: 1, scope: !1225)
!1385 = !DILocalVariable(name: "username", arg: 1, scope: !1386, file: !3, line: 357, type: !69)
!1386 = distinct !DISubprogram(name: "print_full_info", scope: !3, file: !3, line: 357, type: !343, scopeLine: 358, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1387, retainedNodes: !4)
!1387 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !1388, nameTableKind: None)
!1388 = !{!1389, !1391, !1393, !1395, !1397, !1407, !1409, !1411, !1413, !1415, !1417, !1419, !1421, !1423, !1425, !1427, !1430}
!1389 = !DIGlobalVariableExpression(var: !1390, expr: !DIExpression())
!1390 = distinct !DIGlobalVariable(name: "ruid", scope: !1387, file: !3, line: 64, type: !12, isLocal: true, isDefinition: true)
!1391 = !DIGlobalVariableExpression(var: !1392, expr: !DIExpression())
!1392 = distinct !DIGlobalVariable(name: "euid", scope: !1387, file: !3, line: 64, type: !12, isLocal: true, isDefinition: true)
!1393 = !DIGlobalVariableExpression(var: !1394, expr: !DIExpression())
!1394 = distinct !DIGlobalVariable(name: "rgid", scope: !1387, file: !3, line: 65, type: !21, isLocal: true, isDefinition: true)
!1395 = !DIGlobalVariableExpression(var: !1396, expr: !DIExpression())
!1396 = distinct !DIGlobalVariable(name: "egid", scope: !1387, file: !3, line: 65, type: !21, isLocal: true, isDefinition: true)
!1397 = !DIGlobalVariableExpression(var: !1398, expr: !DIExpression())
!1398 = distinct !DIGlobalVariable(name: "longopts", scope: !1387, file: !3, line: 75, type: !1399, isLocal: true, isDefinition: true)
!1399 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1400, size: 2560, elements: !76)
!1400 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1401)
!1401 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !66, line: 50, size: 256, elements: !1402)
!1402 = !{!1403, !1404, !1405, !1406}
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1401, file: !66, line: 52, baseType: !69, size: 64)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !1401, file: !66, line: 55, baseType: !72, size: 32, offset: 64)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1401, file: !66, line: 56, baseType: !74, size: 64, offset: 128)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1401, file: !66, line: 57, baseType: !72, size: 32, offset: 192)
!1407 = !DIGlobalVariableExpression(var: !1408, expr: !DIExpression())
!1408 = distinct !DIGlobalVariable(name: "just_context", scope: !1387, file: !3, line: 45, type: !27, isLocal: true, isDefinition: true)
!1409 = !DIGlobalVariableExpression(var: !1410, expr: !DIExpression())
!1410 = distinct !DIGlobalVariable(name: "just_group", scope: !1387, file: !3, line: 51, type: !27, isLocal: true, isDefinition: true)
!1411 = !DIGlobalVariableExpression(var: !1412, expr: !DIExpression())
!1412 = distinct !DIGlobalVariable(name: "use_name", scope: !1387, file: !3, line: 61, type: !27, isLocal: true, isDefinition: true)
!1413 = !DIGlobalVariableExpression(var: !1414, expr: !DIExpression())
!1414 = distinct !DIGlobalVariable(name: "use_real", scope: !1387, file: !3, line: 53, type: !27, isLocal: true, isDefinition: true)
!1415 = !DIGlobalVariableExpression(var: !1416, expr: !DIExpression())
!1416 = distinct !DIGlobalVariable(name: "just_user", scope: !1387, file: !3, line: 55, type: !27, isLocal: true, isDefinition: true)
!1417 = !DIGlobalVariableExpression(var: !1418, expr: !DIExpression())
!1418 = distinct !DIGlobalVariable(name: "opt_zero", scope: !1387, file: !3, line: 47, type: !27, isLocal: true, isDefinition: true)
!1419 = !DIGlobalVariableExpression(var: !1420, expr: !DIExpression())
!1420 = distinct !DIGlobalVariable(name: "just_group_list", scope: !1387, file: !3, line: 49, type: !27, isLocal: true, isDefinition: true)
!1421 = !DIGlobalVariableExpression(var: !1422, expr: !DIExpression())
!1422 = distinct !DIGlobalVariable(name: "context", scope: !1387, file: !3, line: 69, type: !6, isLocal: true, isDefinition: true)
!1423 = !DIGlobalVariableExpression(var: !1424, expr: !DIExpression())
!1424 = distinct !DIGlobalVariable(name: "multiple_users", scope: !1387, file: !3, line: 59, type: !27, isLocal: true, isDefinition: true)
!1425 = !DIGlobalVariableExpression(var: !1426, expr: !DIExpression())
!1426 = distinct !DIGlobalVariable(name: "ok", scope: !1387, file: !3, line: 57, type: !27, isLocal: true, isDefinition: true)
!1427 = !DIGlobalVariableExpression(var: !1428, expr: !DIExpression())
!1428 = distinct !DIGlobalVariable(name: "buf", scope: !1429, file: !3, line: 327, type: !53, isLocal: true, isDefinition: true)
!1429 = distinct !DISubprogram(name: "uidtostr_ptr", scope: !3, file: !3, line: 325, type: !49, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1387, retainedNodes: !4)
!1430 = !DIGlobalVariableExpression(var: !1431, expr: !DIExpression())
!1431 = distinct !DIGlobalVariable(name: "buf", scope: !1432, file: !3, line: 316, type: !53, isLocal: true, isDefinition: true)
!1432 = distinct !DISubprogram(name: "gidtostr_ptr", scope: !3, file: !3, line: 314, type: !59, scopeLine: 315, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1387, retainedNodes: !4)
!1433 = !DILocalVariable(name: "pwd", scope: !1386, file: !3, line: 359, type: !1434)
!1434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1435, size: 64)
!1435 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "passwd", file: !659, line: 49, size: 384, elements: !1436)
!1436 = !{!1437, !1438, !1439, !1440, !1441, !1442, !1443}
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "pw_name", scope: !1435, file: !659, line: 51, baseType: !6, size: 64)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "pw_passwd", scope: !1435, file: !659, line: 52, baseType: !6, size: 64, offset: 64)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "pw_uid", scope: !1435, file: !659, line: 54, baseType: !14, size: 32, offset: 128)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "pw_gid", scope: !1435, file: !659, line: 55, baseType: !22, size: 32, offset: 160)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "pw_gecos", scope: !1435, file: !659, line: 56, baseType: !6, size: 64, offset: 192)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "pw_dir", scope: !1435, file: !659, line: 57, baseType: !6, size: 64, offset: 256)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "pw_shell", scope: !1435, file: !659, line: 58, baseType: !6, size: 64, offset: 320)
!1444 = !DILocalVariable(name: "grp", scope: !1386, file: !3, line: 360, type: !1445)
!1445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1446, size: 64)
!1446 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group", file: !1233, line: 42, size: 256, elements: !1447)
!1447 = !{!1448, !1449, !1450, !1451}
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "gr_name", scope: !1446, file: !1233, line: 44, baseType: !6, size: 64)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "gr_passwd", scope: !1446, file: !1233, line: 45, baseType: !6, size: 64, offset: 64)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "gr_gid", scope: !1446, file: !1233, line: 46, baseType: !22, size: 32, offset: 128)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "gr_mem", scope: !1446, file: !1233, line: 47, baseType: !184, size: 64, offset: 192)
!1452 = !DILocalVariable(name: "uid", arg: 1, scope: !48, file: !3, line: 325, type: !51)
!1453 = !DILocation(line: 325, column: 28, scope: !48)
!1454 = !DILocation(line: 328, column: 22, scope: !48)
!1455 = !DILocation(line: 328, column: 21, scope: !48)
!1456 = !DILocation(line: 328, column: 10, scope: !48)
!1457 = !DILocation(line: 328, column: 3, scope: !48)
!1458 = !DILocalVariable(name: "uid", arg: 1, scope: !1459, file: !3, line: 325, type: !51)
!1459 = distinct !DISubprogram(name: "uidtostr_ptr", scope: !3, file: !3, line: 325, type: !49, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1460, retainedNodes: !4)
!1460 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !1461, nameTableKind: None)
!1461 = !{!1462, !1464, !1466, !1468, !1470, !1480, !1482, !1484, !1486, !1488, !1490, !1492, !1494, !1496, !1498, !1500, !1502}
!1462 = !DIGlobalVariableExpression(var: !1463, expr: !DIExpression())
!1463 = distinct !DIGlobalVariable(name: "ruid", scope: !1460, file: !3, line: 64, type: !12, isLocal: true, isDefinition: true)
!1464 = !DIGlobalVariableExpression(var: !1465, expr: !DIExpression())
!1465 = distinct !DIGlobalVariable(name: "euid", scope: !1460, file: !3, line: 64, type: !12, isLocal: true, isDefinition: true)
!1466 = !DIGlobalVariableExpression(var: !1467, expr: !DIExpression())
!1467 = distinct !DIGlobalVariable(name: "rgid", scope: !1460, file: !3, line: 65, type: !21, isLocal: true, isDefinition: true)
!1468 = !DIGlobalVariableExpression(var: !1469, expr: !DIExpression())
!1469 = distinct !DIGlobalVariable(name: "egid", scope: !1460, file: !3, line: 65, type: !21, isLocal: true, isDefinition: true)
!1470 = !DIGlobalVariableExpression(var: !1471, expr: !DIExpression())
!1471 = distinct !DIGlobalVariable(name: "longopts", scope: !1460, file: !3, line: 75, type: !1472, isLocal: true, isDefinition: true)
!1472 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1473, size: 2560, elements: !76)
!1473 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1474)
!1474 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !66, line: 50, size: 256, elements: !1475)
!1475 = !{!1476, !1477, !1478, !1479}
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1474, file: !66, line: 52, baseType: !69, size: 64)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !1474, file: !66, line: 55, baseType: !72, size: 32, offset: 64)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1474, file: !66, line: 56, baseType: !74, size: 64, offset: 128)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1474, file: !66, line: 57, baseType: !72, size: 32, offset: 192)
!1480 = !DIGlobalVariableExpression(var: !1481, expr: !DIExpression())
!1481 = distinct !DIGlobalVariable(name: "just_context", scope: !1460, file: !3, line: 45, type: !27, isLocal: true, isDefinition: true)
!1482 = !DIGlobalVariableExpression(var: !1483, expr: !DIExpression())
!1483 = distinct !DIGlobalVariable(name: "just_group", scope: !1460, file: !3, line: 51, type: !27, isLocal: true, isDefinition: true)
!1484 = !DIGlobalVariableExpression(var: !1485, expr: !DIExpression())
!1485 = distinct !DIGlobalVariable(name: "use_name", scope: !1460, file: !3, line: 61, type: !27, isLocal: true, isDefinition: true)
!1486 = !DIGlobalVariableExpression(var: !1487, expr: !DIExpression())
!1487 = distinct !DIGlobalVariable(name: "use_real", scope: !1460, file: !3, line: 53, type: !27, isLocal: true, isDefinition: true)
!1488 = !DIGlobalVariableExpression(var: !1489, expr: !DIExpression())
!1489 = distinct !DIGlobalVariable(name: "just_user", scope: !1460, file: !3, line: 55, type: !27, isLocal: true, isDefinition: true)
!1490 = !DIGlobalVariableExpression(var: !1491, expr: !DIExpression())
!1491 = distinct !DIGlobalVariable(name: "opt_zero", scope: !1460, file: !3, line: 47, type: !27, isLocal: true, isDefinition: true)
!1492 = !DIGlobalVariableExpression(var: !1493, expr: !DIExpression())
!1493 = distinct !DIGlobalVariable(name: "just_group_list", scope: !1460, file: !3, line: 49, type: !27, isLocal: true, isDefinition: true)
!1494 = !DIGlobalVariableExpression(var: !1495, expr: !DIExpression())
!1495 = distinct !DIGlobalVariable(name: "context", scope: !1460, file: !3, line: 69, type: !6, isLocal: true, isDefinition: true)
!1496 = !DIGlobalVariableExpression(var: !1497, expr: !DIExpression())
!1497 = distinct !DIGlobalVariable(name: "multiple_users", scope: !1460, file: !3, line: 59, type: !27, isLocal: true, isDefinition: true)
!1498 = !DIGlobalVariableExpression(var: !1499, expr: !DIExpression())
!1499 = distinct !DIGlobalVariable(name: "ok", scope: !1460, file: !3, line: 57, type: !27, isLocal: true, isDefinition: true)
!1500 = !DIGlobalVariableExpression(var: !1501, expr: !DIExpression())
!1501 = distinct !DIGlobalVariable(name: "buf", scope: !1459, file: !3, line: 327, type: !53, isLocal: true, isDefinition: true)
!1502 = !DIGlobalVariableExpression(var: !1503, expr: !DIExpression())
!1503 = distinct !DIGlobalVariable(name: "buf", scope: !1504, file: !3, line: 316, type: !53, isLocal: true, isDefinition: true)
!1504 = distinct !DISubprogram(name: "gidtostr_ptr", scope: !3, file: !3, line: 314, type: !59, scopeLine: 315, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1460, retainedNodes: !4)
!1505 = !DILocalVariable(name: "gid", arg: 1, scope: !58, file: !3, line: 314, type: !61)
!1506 = !DILocation(line: 314, column: 28, scope: !58)
!1507 = !DILocation(line: 317, column: 22, scope: !58)
!1508 = !DILocation(line: 317, column: 21, scope: !58)
!1509 = !DILocation(line: 317, column: 10, scope: !58)
!1510 = !DILocation(line: 317, column: 3, scope: !58)
!1511 = !DILocalVariable(name: "gid", arg: 1, scope: !1512, file: !3, line: 314, type: !61)
!1512 = distinct !DISubprogram(name: "gidtostr_ptr", scope: !3, file: !3, line: 314, type: !59, scopeLine: 315, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1513, retainedNodes: !4)
!1513 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !1514, nameTableKind: None)
!1514 = !{!1515, !1517, !1519, !1521, !1523, !1533, !1535, !1537, !1539, !1541, !1543, !1545, !1547, !1549, !1551, !1553, !1556}
!1515 = !DIGlobalVariableExpression(var: !1516, expr: !DIExpression())
!1516 = distinct !DIGlobalVariable(name: "ruid", scope: !1513, file: !3, line: 64, type: !12, isLocal: true, isDefinition: true)
!1517 = !DIGlobalVariableExpression(var: !1518, expr: !DIExpression())
!1518 = distinct !DIGlobalVariable(name: "euid", scope: !1513, file: !3, line: 64, type: !12, isLocal: true, isDefinition: true)
!1519 = !DIGlobalVariableExpression(var: !1520, expr: !DIExpression())
!1520 = distinct !DIGlobalVariable(name: "rgid", scope: !1513, file: !3, line: 65, type: !21, isLocal: true, isDefinition: true)
!1521 = !DIGlobalVariableExpression(var: !1522, expr: !DIExpression())
!1522 = distinct !DIGlobalVariable(name: "egid", scope: !1513, file: !3, line: 65, type: !21, isLocal: true, isDefinition: true)
!1523 = !DIGlobalVariableExpression(var: !1524, expr: !DIExpression())
!1524 = distinct !DIGlobalVariable(name: "longopts", scope: !1513, file: !3, line: 75, type: !1525, isLocal: true, isDefinition: true)
!1525 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1526, size: 2560, elements: !76)
!1526 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1527)
!1527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !66, line: 50, size: 256, elements: !1528)
!1528 = !{!1529, !1530, !1531, !1532}
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1527, file: !66, line: 52, baseType: !69, size: 64)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !1527, file: !66, line: 55, baseType: !72, size: 32, offset: 64)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1527, file: !66, line: 56, baseType: !74, size: 64, offset: 128)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1527, file: !66, line: 57, baseType: !72, size: 32, offset: 192)
!1533 = !DIGlobalVariableExpression(var: !1534, expr: !DIExpression())
!1534 = distinct !DIGlobalVariable(name: "just_context", scope: !1513, file: !3, line: 45, type: !27, isLocal: true, isDefinition: true)
!1535 = !DIGlobalVariableExpression(var: !1536, expr: !DIExpression())
!1536 = distinct !DIGlobalVariable(name: "just_group", scope: !1513, file: !3, line: 51, type: !27, isLocal: true, isDefinition: true)
!1537 = !DIGlobalVariableExpression(var: !1538, expr: !DIExpression())
!1538 = distinct !DIGlobalVariable(name: "use_name", scope: !1513, file: !3, line: 61, type: !27, isLocal: true, isDefinition: true)
!1539 = !DIGlobalVariableExpression(var: !1540, expr: !DIExpression())
!1540 = distinct !DIGlobalVariable(name: "use_real", scope: !1513, file: !3, line: 53, type: !27, isLocal: true, isDefinition: true)
!1541 = !DIGlobalVariableExpression(var: !1542, expr: !DIExpression())
!1542 = distinct !DIGlobalVariable(name: "just_user", scope: !1513, file: !3, line: 55, type: !27, isLocal: true, isDefinition: true)
!1543 = !DIGlobalVariableExpression(var: !1544, expr: !DIExpression())
!1544 = distinct !DIGlobalVariable(name: "opt_zero", scope: !1513, file: !3, line: 47, type: !27, isLocal: true, isDefinition: true)
!1545 = !DIGlobalVariableExpression(var: !1546, expr: !DIExpression())
!1546 = distinct !DIGlobalVariable(name: "just_group_list", scope: !1513, file: !3, line: 49, type: !27, isLocal: true, isDefinition: true)
!1547 = !DIGlobalVariableExpression(var: !1548, expr: !DIExpression())
!1548 = distinct !DIGlobalVariable(name: "context", scope: !1513, file: !3, line: 69, type: !6, isLocal: true, isDefinition: true)
!1549 = !DIGlobalVariableExpression(var: !1550, expr: !DIExpression())
!1550 = distinct !DIGlobalVariable(name: "multiple_users", scope: !1513, file: !3, line: 59, type: !27, isLocal: true, isDefinition: true)
!1551 = !DIGlobalVariableExpression(var: !1552, expr: !DIExpression())
!1552 = distinct !DIGlobalVariable(name: "ok", scope: !1513, file: !3, line: 57, type: !27, isLocal: true, isDefinition: true)
!1553 = !DIGlobalVariableExpression(var: !1554, expr: !DIExpression())
!1554 = distinct !DIGlobalVariable(name: "buf", scope: !1555, file: !3, line: 327, type: !53, isLocal: true, isDefinition: true)
!1555 = distinct !DISubprogram(name: "uidtostr_ptr", scope: !3, file: !3, line: 325, type: !49, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1513, retainedNodes: !4)
!1556 = !DIGlobalVariableExpression(var: !1557, expr: !DIExpression())
!1557 = distinct !DIGlobalVariable(name: "buf", scope: !1512, file: !3, line: 316, type: !53, isLocal: true, isDefinition: true)
!1558 = distinct !DISubprogram(name: "print_group_list", scope: !81, file: !81, line: 36, type: !1559, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !82, retainedNodes: !4)
!1559 = !DISubroutineType(types: !1560)
!1560 = !{!27, !69, !12, !21, !21, !27, !7}
!1561 = !DILocalVariable(name: "username", arg: 1, scope: !1558, file: !81, line: 36, type: !69)
!1562 = !DILocation(line: 36, column: 31, scope: !1558)
!1563 = !DILocalVariable(name: "ruid", arg: 2, scope: !1558, file: !81, line: 37, type: !12)
!1564 = !DILocation(line: 37, column: 25, scope: !1558)
!1565 = !DILocalVariable(name: "rgid", arg: 3, scope: !1558, file: !81, line: 37, type: !21)
!1566 = !DILocation(line: 37, column: 37, scope: !1558)
!1567 = !DILocalVariable(name: "egid", arg: 4, scope: !1558, file: !81, line: 37, type: !21)
!1568 = !DILocation(line: 37, column: 49, scope: !1558)
!1569 = !DILocalVariable(name: "use_names", arg: 5, scope: !1558, file: !81, line: 38, type: !27)
!1570 = !DILocation(line: 38, column: 24, scope: !1558)
!1571 = !DILocalVariable(name: "delim", arg: 6, scope: !1558, file: !81, line: 38, type: !7)
!1572 = !DILocation(line: 38, column: 40, scope: !1558)
!1573 = !DILocalVariable(name: "ok", scope: !1558, file: !81, line: 40, type: !27)
!1574 = !DILocation(line: 40, column: 8, scope: !1558)
!1575 = !DILocalVariable(name: "pwd", scope: !1558, file: !81, line: 41, type: !1576)
!1576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1577, size: 64)
!1577 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "passwd", file: !659, line: 49, size: 384, elements: !1578)
!1578 = !{!1579, !1580, !1581, !1582, !1583, !1584, !1585}
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "pw_name", scope: !1577, file: !659, line: 51, baseType: !6, size: 64)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "pw_passwd", scope: !1577, file: !659, line: 52, baseType: !6, size: 64, offset: 64)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "pw_uid", scope: !1577, file: !659, line: 54, baseType: !14, size: 32, offset: 128)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "pw_gid", scope: !1577, file: !659, line: 55, baseType: !22, size: 32, offset: 160)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "pw_gecos", scope: !1577, file: !659, line: 56, baseType: !6, size: 64, offset: 192)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "pw_dir", scope: !1577, file: !659, line: 57, baseType: !6, size: 64, offset: 256)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "pw_shell", scope: !1577, file: !659, line: 58, baseType: !6, size: 64, offset: 320)
!1586 = !DILocation(line: 41, column: 18, scope: !1558)
!1587 = !DILocation(line: 43, column: 7, scope: !1588)
!1588 = distinct !DILexicalBlock(scope: !1558, file: !81, line: 43, column: 7)
!1589 = !DILocation(line: 43, column: 7, scope: !1558)
!1590 = !DILocation(line: 45, column: 23, scope: !1591)
!1591 = distinct !DILexicalBlock(scope: !1588, file: !81, line: 44, column: 5)
!1592 = !DILocation(line: 45, column: 13, scope: !1591)
!1593 = !DILocation(line: 45, column: 11, scope: !1591)
!1594 = !DILocation(line: 46, column: 11, scope: !1595)
!1595 = distinct !DILexicalBlock(scope: !1591, file: !81, line: 46, column: 11)
!1596 = !DILocation(line: 46, column: 15, scope: !1595)
!1597 = !DILocation(line: 46, column: 11, scope: !1591)
!1598 = !DILocation(line: 47, column: 12, scope: !1595)
!1599 = !DILocation(line: 47, column: 9, scope: !1595)
!1600 = !DILocation(line: 48, column: 5, scope: !1591)
!1601 = !DILocation(line: 50, column: 21, scope: !1602)
!1602 = distinct !DILexicalBlock(scope: !1558, file: !81, line: 50, column: 7)
!1603 = !DILocation(line: 50, column: 27, scope: !1602)
!1604 = !DILocation(line: 50, column: 8, scope: !1602)
!1605 = !DILocation(line: 50, column: 7, scope: !1558)
!1606 = !DILocation(line: 51, column: 8, scope: !1602)
!1607 = !DILocation(line: 51, column: 5, scope: !1602)
!1608 = !DILocation(line: 53, column: 7, scope: !1609)
!1609 = distinct !DILexicalBlock(scope: !1558, file: !81, line: 53, column: 7)
!1610 = !DILocation(line: 53, column: 15, scope: !1609)
!1611 = !DILocation(line: 53, column: 12, scope: !1609)
!1612 = !DILocation(line: 53, column: 7, scope: !1558)
!1613 = !DILocation(line: 55, column: 7, scope: !1614)
!1614 = distinct !DILexicalBlock(scope: !1609, file: !81, line: 54, column: 5)
!1615 = !DILocation(line: 56, column: 25, scope: !1616)
!1616 = distinct !DILexicalBlock(scope: !1614, file: !81, line: 56, column: 11)
!1617 = !DILocation(line: 56, column: 31, scope: !1616)
!1618 = !DILocation(line: 56, column: 12, scope: !1616)
!1619 = !DILocation(line: 56, column: 11, scope: !1614)
!1620 = !DILocation(line: 57, column: 12, scope: !1616)
!1621 = !DILocation(line: 57, column: 9, scope: !1616)
!1622 = !DILocation(line: 58, column: 5, scope: !1614)
!1623 = !DILocalVariable(name: "groups", scope: !1624, file: !81, line: 61, type: !183)
!1624 = distinct !DILexicalBlock(scope: !1558, file: !81, line: 60, column: 3)
!1625 = !DILocation(line: 61, column: 12, scope: !1624)
!1626 = !DILocalVariable(name: "n_groups", scope: !1624, file: !81, line: 63, type: !72)
!1627 = !DILocation(line: 63, column: 9, scope: !1624)
!1628 = !DILocation(line: 63, column: 32, scope: !1624)
!1629 = !DILocation(line: 63, column: 43, scope: !1624)
!1630 = !DILocation(line: 63, column: 49, scope: !1624)
!1631 = !DILocation(line: 63, column: 54, scope: !1624)
!1632 = !DILocation(line: 63, column: 63, scope: !1624)
!1633 = !DILocation(line: 63, column: 20, scope: !1624)
!1634 = !DILocation(line: 64, column: 9, scope: !1635)
!1635 = distinct !DILexicalBlock(scope: !1624, file: !81, line: 64, column: 9)
!1636 = !DILocation(line: 64, column: 18, scope: !1635)
!1637 = !DILocation(line: 64, column: 9, scope: !1624)
!1638 = !DILocation(line: 66, column: 13, scope: !1639)
!1639 = distinct !DILexicalBlock(scope: !1640, file: !81, line: 66, column: 13)
!1640 = distinct !DILexicalBlock(scope: !1635, file: !81, line: 65, column: 7)
!1641 = !DILocation(line: 66, column: 13, scope: !1640)
!1642 = !DILocation(line: 68, column: 23, scope: !1643)
!1643 = distinct !DILexicalBlock(scope: !1639, file: !81, line: 67, column: 11)
!1644 = !DILocation(line: 68, column: 30, scope: !1643)
!1645 = !DILocation(line: 69, column: 27, scope: !1643)
!1646 = !DILocation(line: 69, column: 20, scope: !1643)
!1647 = !DILocation(line: 68, column: 13, scope: !1643)
!1648 = !DILocation(line: 70, column: 11, scope: !1643)
!1649 = !DILocation(line: 73, column: 23, scope: !1650)
!1650 = distinct !DILexicalBlock(scope: !1639, file: !81, line: 72, column: 11)
!1651 = !DILocation(line: 73, column: 30, scope: !1650)
!1652 = !DILocation(line: 73, column: 13, scope: !1650)
!1653 = !DILocation(line: 75, column: 9, scope: !1640)
!1654 = !DILocalVariable(name: "i", scope: !1655, file: !81, line: 78, type: !72)
!1655 = distinct !DILexicalBlock(scope: !1624, file: !81, line: 78, column: 5)
!1656 = !DILocation(line: 78, column: 14, scope: !1655)
!1657 = !DILocation(line: 78, column: 10, scope: !1655)
!1658 = !DILocation(line: 78, column: 21, scope: !1659)
!1659 = distinct !DILexicalBlock(scope: !1655, file: !81, line: 78, column: 5)
!1660 = !DILocation(line: 78, column: 25, scope: !1659)
!1661 = !DILocation(line: 78, column: 23, scope: !1659)
!1662 = !DILocation(line: 78, column: 5, scope: !1655)
!1663 = !DILocation(line: 79, column: 11, scope: !1664)
!1664 = distinct !DILexicalBlock(scope: !1659, file: !81, line: 79, column: 11)
!1665 = !DILocation(line: 79, column: 18, scope: !1664)
!1666 = !DILocation(line: 79, column: 24, scope: !1664)
!1667 = !DILocation(line: 79, column: 21, scope: !1664)
!1668 = !DILocation(line: 79, column: 29, scope: !1664)
!1669 = !DILocation(line: 79, column: 32, scope: !1664)
!1670 = !DILocation(line: 79, column: 39, scope: !1664)
!1671 = !DILocation(line: 79, column: 45, scope: !1664)
!1672 = !DILocation(line: 79, column: 42, scope: !1664)
!1673 = !DILocation(line: 79, column: 11, scope: !1659)
!1674 = !DILocation(line: 81, column: 11, scope: !1675)
!1675 = distinct !DILexicalBlock(scope: !1664, file: !81, line: 80, column: 9)
!1676 = !DILocation(line: 82, column: 29, scope: !1677)
!1677 = distinct !DILexicalBlock(scope: !1675, file: !81, line: 82, column: 15)
!1678 = !DILocation(line: 82, column: 36, scope: !1677)
!1679 = !DILocation(line: 82, column: 40, scope: !1677)
!1680 = !DILocation(line: 82, column: 16, scope: !1677)
!1681 = !DILocation(line: 82, column: 15, scope: !1675)
!1682 = !DILocation(line: 83, column: 16, scope: !1677)
!1683 = !DILocation(line: 83, column: 13, scope: !1677)
!1684 = !DILocation(line: 84, column: 9, scope: !1675)
!1685 = !DILocation(line: 78, column: 36, scope: !1659)
!1686 = !DILocation(line: 78, column: 5, scope: !1659)
!1687 = distinct !{!1687, !1662, !1688}
!1688 = !DILocation(line: 84, column: 9, scope: !1655)
!1689 = !DILocation(line: 85, column: 11, scope: !1624)
!1690 = !DILocation(line: 85, column: 5, scope: !1624)
!1691 = !DILocation(line: 87, column: 10, scope: !1558)
!1692 = !DILocation(line: 87, column: 3, scope: !1558)
!1693 = !DILocation(line: 88, column: 1, scope: !1558)
!1694 = !DILocalVariable(name: "username", arg: 1, scope: !1695, file: !81, line: 36, type: !69)
!1695 = distinct !DISubprogram(name: "print_group_list", scope: !81, file: !81, line: 36, type: !1559, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1696, retainedNodes: !4)
!1696 = distinct !DICompileUnit(language: DW_LANG_C99, file: !81, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !83, globals: !1697, nameTableKind: None)
!1697 = !{!1698}
!1698 = !DIGlobalVariableExpression(var: !1699, expr: !DIExpression())
!1699 = distinct !DIGlobalVariable(name: "buf", scope: !1700, file: !81, line: 96, type: !53, isLocal: true, isDefinition: true)
!1700 = distinct !DISubprogram(name: "gidtostr_ptr", scope: !81, file: !81, line: 94, type: !59, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1696, retainedNodes: !4)
!1701 = !DILocalVariable(name: "ruid", arg: 2, scope: !1695, file: !81, line: 37, type: !12)
!1702 = !DILocalVariable(name: "rgid", arg: 3, scope: !1695, file: !81, line: 37, type: !21)
!1703 = !DILocalVariable(name: "egid", arg: 4, scope: !1695, file: !81, line: 37, type: !21)
!1704 = !DILocalVariable(name: "use_names", arg: 5, scope: !1695, file: !81, line: 38, type: !27)
!1705 = !DILocalVariable(name: "delim", arg: 6, scope: !1695, file: !81, line: 38, type: !7)
!1706 = !DILocalVariable(name: "ok", scope: !1695, file: !81, line: 40, type: !27)
!1707 = !DILocalVariable(name: "pwd", scope: !1695, file: !81, line: 41, type: !1708)
!1708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1709, size: 64)
!1709 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "passwd", file: !659, line: 49, size: 384, elements: !1710)
!1710 = !{!1711, !1712, !1713, !1714, !1715, !1716, !1717}
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "pw_name", scope: !1709, file: !659, line: 51, baseType: !6, size: 64)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "pw_passwd", scope: !1709, file: !659, line: 52, baseType: !6, size: 64, offset: 64)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "pw_uid", scope: !1709, file: !659, line: 54, baseType: !14, size: 32, offset: 128)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "pw_gid", scope: !1709, file: !659, line: 55, baseType: !22, size: 32, offset: 160)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "pw_gecos", scope: !1709, file: !659, line: 56, baseType: !6, size: 64, offset: 192)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "pw_dir", scope: !1709, file: !659, line: 57, baseType: !6, size: 64, offset: 256)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "pw_shell", scope: !1709, file: !659, line: 58, baseType: !6, size: 64, offset: 320)
!1718 = distinct !DISubprogram(name: "print_group", scope: !81, file: !81, line: 103, type: !1719, scopeLine: 104, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !82, retainedNodes: !4)
!1719 = !DISubroutineType(types: !1720)
!1720 = !{!27, !21, !27}
!1721 = !DILocalVariable(name: "gid", arg: 1, scope: !1718, file: !81, line: 103, type: !21)
!1722 = !DILocation(line: 103, column: 20, scope: !1718)
!1723 = !DILocalVariable(name: "use_name", arg: 2, scope: !1718, file: !81, line: 103, type: !27)
!1724 = !DILocation(line: 103, column: 30, scope: !1718)
!1725 = !DILocalVariable(name: "grp", scope: !1718, file: !81, line: 105, type: !1726)
!1726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1727, size: 64)
!1727 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group", file: !1233, line: 42, size: 256, elements: !1728)
!1728 = !{!1729, !1730, !1731, !1732}
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "gr_name", scope: !1727, file: !1233, line: 44, baseType: !6, size: 64)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "gr_passwd", scope: !1727, file: !1233, line: 45, baseType: !6, size: 64, offset: 64)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "gr_gid", scope: !1727, file: !1233, line: 46, baseType: !22, size: 32, offset: 128)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "gr_mem", scope: !1727, file: !1233, line: 47, baseType: !184, size: 64, offset: 192)
!1733 = !DILocation(line: 105, column: 17, scope: !1718)
!1734 = !DILocalVariable(name: "ok", scope: !1718, file: !81, line: 106, type: !27)
!1735 = !DILocation(line: 106, column: 8, scope: !1718)
!1736 = !DILocation(line: 108, column: 7, scope: !1737)
!1737 = distinct !DILexicalBlock(scope: !1718, file: !81, line: 108, column: 7)
!1738 = !DILocation(line: 108, column: 7, scope: !1718)
!1739 = !DILocation(line: 110, column: 23, scope: !1740)
!1740 = distinct !DILexicalBlock(scope: !1737, file: !81, line: 109, column: 5)
!1741 = !DILocation(line: 110, column: 13, scope: !1740)
!1742 = !DILocation(line: 110, column: 11, scope: !1740)
!1743 = !DILocation(line: 111, column: 11, scope: !1744)
!1744 = distinct !DILexicalBlock(scope: !1740, file: !81, line: 111, column: 11)
!1745 = !DILocation(line: 111, column: 15, scope: !1744)
!1746 = !DILocation(line: 111, column: 11, scope: !1740)
!1747 = !DILocation(line: 113, column: 24, scope: !1748)
!1748 = distinct !DILexicalBlock(scope: !1744, file: !81, line: 112, column: 9)
!1749 = !DILocation(line: 114, column: 38, scope: !1748)
!1750 = !DILocation(line: 114, column: 18, scope: !1748)
!1751 = !DILocation(line: 113, column: 11, scope: !1748)
!1752 = !DILocation(line: 115, column: 14, scope: !1748)
!1753 = !DILocation(line: 116, column: 9, scope: !1748)
!1754 = !DILocation(line: 117, column: 5, scope: !1740)
!1755 = !DILocalVariable(name: "s", scope: !1718, file: !81, line: 119, type: !6)
!1756 = !DILocation(line: 119, column: 9, scope: !1718)
!1757 = !DILocation(line: 119, column: 13, scope: !1718)
!1758 = !DILocation(line: 119, column: 19, scope: !1718)
!1759 = !DILocation(line: 119, column: 24, scope: !1718)
!1760 = !DILocation(line: 119, column: 34, scope: !1718)
!1761 = !DILocation(line: 120, column: 3, scope: !1718)
!1762 = !DILocation(line: 121, column: 10, scope: !1718)
!1763 = !DILocation(line: 121, column: 3, scope: !1718)
!1764 = !DILocalVariable(name: "gid", arg: 1, scope: !1765, file: !81, line: 103, type: !21)
!1765 = distinct !DISubprogram(name: "print_group", scope: !81, file: !81, line: 103, type: !1719, scopeLine: 104, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1766, retainedNodes: !4)
!1766 = distinct !DICompileUnit(language: DW_LANG_C99, file: !81, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !83, globals: !1767, nameTableKind: None)
!1767 = !{!1768}
!1768 = !DIGlobalVariableExpression(var: !1769, expr: !DIExpression())
!1769 = distinct !DIGlobalVariable(name: "buf", scope: !1770, file: !81, line: 96, type: !53, isLocal: true, isDefinition: true)
!1770 = distinct !DISubprogram(name: "gidtostr_ptr", scope: !81, file: !81, line: 94, type: !59, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1766, retainedNodes: !4)
!1771 = !DILocalVariable(name: "use_name", arg: 2, scope: !1765, file: !81, line: 103, type: !27)
!1772 = !DILocalVariable(name: "grp", scope: !1765, file: !81, line: 105, type: !1773)
!1773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1774, size: 64)
!1774 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group", file: !1233, line: 42, size: 256, elements: !1775)
!1775 = !{!1776, !1777, !1778, !1779}
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "gr_name", scope: !1774, file: !1233, line: 44, baseType: !6, size: 64)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "gr_passwd", scope: !1774, file: !1233, line: 45, baseType: !6, size: 64, offset: 64)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "gr_gid", scope: !1774, file: !1233, line: 46, baseType: !22, size: 32, offset: 128)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "gr_mem", scope: !1774, file: !1233, line: 47, baseType: !184, size: 64, offset: 192)
!1780 = !DILocalVariable(name: "ok", scope: !1765, file: !81, line: 106, type: !27)
!1781 = !DILocalVariable(name: "gid", arg: 1, scope: !80, file: !81, line: 94, type: !61)
!1782 = !DILocation(line: 94, column: 28, scope: !80)
!1783 = !DILocation(line: 97, column: 22, scope: !80)
!1784 = !DILocation(line: 97, column: 21, scope: !80)
!1785 = !DILocation(line: 97, column: 10, scope: !80)
!1786 = !DILocation(line: 97, column: 3, scope: !80)
!1787 = !DILocalVariable(name: "gid", arg: 1, scope: !1788, file: !81, line: 94, type: !61)
!1788 = distinct !DISubprogram(name: "gidtostr_ptr", scope: !81, file: !81, line: 94, type: !59, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1789, retainedNodes: !4)
!1789 = distinct !DICompileUnit(language: DW_LANG_C99, file: !81, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !83, globals: !1790, nameTableKind: None)
!1790 = !{!1791}
!1791 = !DIGlobalVariableExpression(var: !1792, expr: !DIExpression())
!1792 = distinct !DIGlobalVariable(name: "buf", scope: !1788, file: !81, line: 96, type: !53, isLocal: true, isDefinition: true)
!1793 = distinct !DISubprogram(name: "close_stdout", scope: !98, file: !98, line: 117, type: !1794, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !93, retainedNodes: !4)
!1794 = !DISubroutineType(types: !1795)
!1795 = !{null}
!1796 = !DILocation(line: 119, column: 21, scope: !1797)
!1797 = distinct !DILexicalBlock(scope: !1793, file: !98, line: 119, column: 7)
!1798 = !DILocation(line: 119, column: 7, scope: !1797)
!1799 = !DILocation(line: 119, column: 29, scope: !1797)
!1800 = !DILocation(line: 120, column: 7, scope: !1797)
!1801 = !DILocation(line: 120, column: 12, scope: !1797)
!1802 = !DILocation(line: 120, column: 25, scope: !1797)
!1803 = !DILocation(line: 120, column: 28, scope: !1797)
!1804 = !DILocation(line: 120, column: 34, scope: !1797)
!1805 = !DILocation(line: 119, column: 7, scope: !1793)
!1806 = !DILocalVariable(name: "write_error", scope: !1807, file: !98, line: 122, type: !69)
!1807 = distinct !DILexicalBlock(scope: !1797, file: !98, line: 121, column: 5)
!1808 = !DILocation(line: 122, column: 19, scope: !1807)
!1809 = !DILocation(line: 122, column: 33, scope: !1807)
!1810 = !DILocation(line: 123, column: 11, scope: !1811)
!1811 = distinct !DILexicalBlock(scope: !1807, file: !98, line: 123, column: 11)
!1812 = !DILocation(line: 123, column: 11, scope: !1807)
!1813 = !DILocation(line: 124, column: 19, scope: !1811)
!1814 = !DILocation(line: 124, column: 52, scope: !1811)
!1815 = !DILocation(line: 124, column: 36, scope: !1811)
!1816 = !DILocation(line: 125, column: 16, scope: !1811)
!1817 = !DILocation(line: 124, column: 9, scope: !1811)
!1818 = !DILocation(line: 127, column: 19, scope: !1811)
!1819 = !DILocation(line: 127, column: 32, scope: !1811)
!1820 = !DILocation(line: 127, column: 9, scope: !1811)
!1821 = !DILocation(line: 129, column: 14, scope: !1807)
!1822 = !DILocation(line: 129, column: 7, scope: !1807)
!1823 = !DILocation(line: 134, column: 42, scope: !1824)
!1824 = distinct !DILexicalBlock(scope: !1793, file: !98, line: 134, column: 7)
!1825 = !DILocation(line: 134, column: 28, scope: !1824)
!1826 = !DILocation(line: 134, column: 50, scope: !1824)
!1827 = !DILocation(line: 134, column: 7, scope: !1793)
!1828 = !DILocation(line: 135, column: 12, scope: !1824)
!1829 = !DILocation(line: 135, column: 5, scope: !1824)
!1830 = !DILocation(line: 136, column: 1, scope: !1793)
!1831 = distinct !DISubprogram(name: "umaxtostr", scope: !1832, file: !1832, line: 36, type: !1833, scopeLine: 37, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !202, retainedNodes: !4)
!1832 = !DIFile(filename: "./lib/anytostr.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!1833 = !DISubroutineType(types: !1834)
!1834 = !{!6, !205, !6}
!1835 = !DILocalVariable(name: "i", arg: 1, scope: !1831, file: !1832, line: 36, type: !205)
!1836 = !DILocation(line: 36, column: 19, scope: !1831)
!1837 = !DILocalVariable(name: "buf", arg: 2, scope: !1831, file: !1832, line: 36, type: !6)
!1838 = !DILocation(line: 36, column: 28, scope: !1831)
!1839 = !DILocalVariable(name: "p", scope: !1831, file: !1832, line: 38, type: !6)
!1840 = !DILocation(line: 38, column: 9, scope: !1831)
!1841 = !DILocation(line: 38, column: 13, scope: !1831)
!1842 = !DILocation(line: 38, column: 17, scope: !1831)
!1843 = !DILocation(line: 39, column: 4, scope: !1831)
!1844 = !DILocation(line: 39, column: 6, scope: !1831)
!1845 = !DILocation(line: 41, column: 7, scope: !1846)
!1846 = distinct !DILexicalBlock(scope: !1831, file: !1832, line: 41, column: 7)
!1847 = !DILocation(line: 41, column: 9, scope: !1846)
!1848 = !DILocation(line: 41, column: 7, scope: !1831)
!1849 = !DILocation(line: 43, column: 7, scope: !1850)
!1850 = distinct !DILexicalBlock(scope: !1846, file: !1832, line: 42, column: 5)
!1851 = !DILocation(line: 44, column: 22, scope: !1850)
!1852 = !DILocation(line: 44, column: 24, scope: !1850)
!1853 = !DILocation(line: 44, column: 20, scope: !1850)
!1854 = !DILocation(line: 44, column: 16, scope: !1850)
!1855 = !DILocation(line: 44, column: 10, scope: !1850)
!1856 = !DILocation(line: 44, column: 14, scope: !1850)
!1857 = !DILocation(line: 44, column: 9, scope: !1850)
!1858 = !DILocation(line: 45, column: 17, scope: !1850)
!1859 = !DILocation(line: 45, column: 24, scope: !1850)
!1860 = distinct !{!1860, !1849, !1861}
!1861 = !DILocation(line: 45, column: 28, scope: !1850)
!1862 = !DILocation(line: 47, column: 8, scope: !1850)
!1863 = !DILocation(line: 47, column: 12, scope: !1850)
!1864 = !DILocation(line: 48, column: 5, scope: !1850)
!1865 = !DILocation(line: 51, column: 7, scope: !1866)
!1866 = distinct !DILexicalBlock(scope: !1846, file: !1832, line: 50, column: 5)
!1867 = !DILocation(line: 52, column: 22, scope: !1866)
!1868 = !DILocation(line: 52, column: 24, scope: !1866)
!1869 = !DILocation(line: 52, column: 20, scope: !1866)
!1870 = !DILocation(line: 52, column: 16, scope: !1866)
!1871 = !DILocation(line: 52, column: 10, scope: !1866)
!1872 = !DILocation(line: 52, column: 14, scope: !1866)
!1873 = !DILocation(line: 52, column: 9, scope: !1866)
!1874 = !DILocation(line: 53, column: 17, scope: !1866)
!1875 = !DILocation(line: 53, column: 24, scope: !1866)
!1876 = distinct !{!1876, !1865, !1877}
!1877 = !DILocation(line: 53, column: 28, scope: !1866)
!1878 = !DILocation(line: 56, column: 10, scope: !1831)
!1879 = !DILocation(line: 56, column: 3, scope: !1831)
!1880 = !DILocalVariable(name: "i", arg: 1, scope: !1881, file: !1832, line: 36, type: !205)
!1881 = distinct !DISubprogram(name: "umaxtostr", scope: !1832, file: !1832, line: 36, type: !1833, scopeLine: 37, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1882, retainedNodes: !4)
!1882 = distinct !DICompileUnit(language: DW_LANG_C99, file: !203, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !204, nameTableKind: None)
!1883 = !DILocalVariable(name: "buf", arg: 2, scope: !1881, file: !1832, line: 36, type: !6)
!1884 = !DILocalVariable(name: "p", scope: !1881, file: !1832, line: 38, type: !6)
!1885 = distinct !DISubprogram(name: "set_program_name", scope: !112, file: !112, line: 39, type: !343, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !108, retainedNodes: !4)
!1886 = !DILocalVariable(name: "argv0", arg: 1, scope: !1885, file: !112, line: 39, type: !69)
!1887 = !DILocation(line: 39, column: 31, scope: !1885)
!1888 = !DILocalVariable(name: "slash", scope: !1885, file: !112, line: 46, type: !69)
!1889 = !DILocation(line: 46, column: 15, scope: !1885)
!1890 = !DILocalVariable(name: "base", scope: !1885, file: !112, line: 47, type: !69)
!1891 = !DILocation(line: 47, column: 15, scope: !1885)
!1892 = !DILocation(line: 51, column: 7, scope: !1893)
!1893 = distinct !DILexicalBlock(scope: !1885, file: !112, line: 51, column: 7)
!1894 = !DILocation(line: 51, column: 13, scope: !1893)
!1895 = !DILocation(line: 51, column: 7, scope: !1885)
!1896 = !DILocation(line: 55, column: 14, scope: !1897)
!1897 = distinct !DILexicalBlock(scope: !1893, file: !112, line: 52, column: 5)
!1898 = !DILocation(line: 54, column: 7, scope: !1897)
!1899 = !DILocation(line: 56, column: 7, scope: !1897)
!1900 = !DILocation(line: 59, column: 20, scope: !1885)
!1901 = !DILocation(line: 59, column: 11, scope: !1885)
!1902 = !DILocation(line: 59, column: 9, scope: !1885)
!1903 = !DILocation(line: 60, column: 11, scope: !1885)
!1904 = !DILocation(line: 60, column: 17, scope: !1885)
!1905 = !DILocation(line: 60, column: 27, scope: !1885)
!1906 = !DILocation(line: 60, column: 33, scope: !1885)
!1907 = !DILocation(line: 60, column: 39, scope: !1885)
!1908 = !DILocation(line: 60, column: 8, scope: !1885)
!1909 = !DILocation(line: 61, column: 7, scope: !1910)
!1910 = distinct !DILexicalBlock(scope: !1885, file: !112, line: 61, column: 7)
!1911 = !DILocation(line: 61, column: 14, scope: !1910)
!1912 = !DILocation(line: 61, column: 12, scope: !1910)
!1913 = !DILocation(line: 61, column: 20, scope: !1910)
!1914 = !DILocation(line: 61, column: 25, scope: !1910)
!1915 = !DILocation(line: 61, column: 37, scope: !1910)
!1916 = !DILocation(line: 61, column: 42, scope: !1910)
!1917 = !DILocation(line: 61, column: 28, scope: !1910)
!1918 = !DILocation(line: 61, column: 61, scope: !1910)
!1919 = !DILocation(line: 61, column: 7, scope: !1885)
!1920 = !DILocation(line: 63, column: 15, scope: !1921)
!1921 = distinct !DILexicalBlock(scope: !1910, file: !112, line: 62, column: 5)
!1922 = !DILocation(line: 63, column: 13, scope: !1921)
!1923 = !DILocation(line: 64, column: 20, scope: !1924)
!1924 = distinct !DILexicalBlock(scope: !1921, file: !112, line: 64, column: 11)
!1925 = !DILocation(line: 64, column: 11, scope: !1924)
!1926 = !DILocation(line: 64, column: 36, scope: !1924)
!1927 = !DILocation(line: 64, column: 11, scope: !1921)
!1928 = !DILocation(line: 66, column: 19, scope: !1929)
!1929 = distinct !DILexicalBlock(scope: !1924, file: !112, line: 65, column: 9)
!1930 = !DILocation(line: 66, column: 24, scope: !1929)
!1931 = !DILocation(line: 66, column: 17, scope: !1929)
!1932 = !DILocation(line: 70, column: 52, scope: !1929)
!1933 = !DILocation(line: 70, column: 41, scope: !1929)
!1934 = !DILocation(line: 72, column: 9, scope: !1929)
!1935 = !DILocation(line: 73, column: 5, scope: !1921)
!1936 = !DILocation(line: 84, column: 18, scope: !1885)
!1937 = !DILocation(line: 84, column: 16, scope: !1885)
!1938 = !DILocation(line: 90, column: 38, scope: !1885)
!1939 = !DILocation(line: 90, column: 27, scope: !1885)
!1940 = !DILocation(line: 92, column: 1, scope: !1885)
!1941 = !DILocalVariable(name: "argv0", arg: 1, scope: !1942, file: !112, line: 39, type: !69)
!1942 = distinct !DISubprogram(name: "set_program_name", scope: !112, file: !112, line: 39, type: !343, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1943, retainedNodes: !4)
!1943 = distinct !DICompileUnit(language: DW_LANG_C99, file: !109, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !110, globals: !1944, nameTableKind: None)
!1944 = !{!1945}
!1945 = !DIGlobalVariableExpression(var: !1946, expr: !DIExpression())
!1946 = distinct !DIGlobalVariable(name: "program_name", scope: !1943, file: !112, line: 33, type: !69, isLocal: false, isDefinition: true)
!1947 = !DILocalVariable(name: "slash", scope: !1942, file: !112, line: 46, type: !69)
!1948 = !DILocalVariable(name: "base", scope: !1942, file: !112, line: 47, type: !69)
!1949 = distinct !DISubprogram(name: "set_char_quoting", scope: !139, file: !139, line: 152, type: !1950, scopeLine: 153, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !115, retainedNodes: !4)
!1950 = !DISubroutineType(types: !1951)
!1951 = !{!72, !1952, !7, !72}
!1952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !150, size: 64)
!1953 = !DILocalVariable(name: "o", arg: 1, scope: !1949, file: !139, line: 152, type: !1952)
!1954 = !DILocation(line: 152, column: 43, scope: !1949)
!1955 = !DILocalVariable(name: "c", arg: 2, scope: !1949, file: !139, line: 152, type: !7)
!1956 = !DILocation(line: 152, column: 51, scope: !1949)
!1957 = !DILocalVariable(name: "i", arg: 3, scope: !1949, file: !139, line: 152, type: !72)
!1958 = !DILocation(line: 152, column: 58, scope: !1949)
!1959 = !DILocalVariable(name: "uc", scope: !1949, file: !139, line: 154, type: !240)
!1960 = !DILocation(line: 154, column: 17, scope: !1949)
!1961 = !DILocation(line: 154, column: 22, scope: !1949)
!1962 = !DILocalVariable(name: "p", scope: !1949, file: !139, line: 155, type: !1963)
!1963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16, size: 64)
!1964 = !DILocation(line: 155, column: 17, scope: !1949)
!1965 = !DILocation(line: 156, column: 6, scope: !1949)
!1966 = !DILocation(line: 156, column: 10, scope: !1949)
!1967 = !DILocation(line: 156, column: 41, scope: !1949)
!1968 = !DILocation(line: 156, column: 5, scope: !1949)
!1969 = !DILocation(line: 156, column: 59, scope: !1949)
!1970 = !DILocation(line: 156, column: 62, scope: !1949)
!1971 = !DILocation(line: 156, column: 57, scope: !1949)
!1972 = !DILocalVariable(name: "shift", scope: !1949, file: !139, line: 157, type: !72)
!1973 = !DILocation(line: 157, column: 7, scope: !1949)
!1974 = !DILocation(line: 157, column: 15, scope: !1949)
!1975 = !DILocation(line: 157, column: 18, scope: !1949)
!1976 = !DILocalVariable(name: "r", scope: !1949, file: !139, line: 158, type: !72)
!1977 = !DILocation(line: 158, column: 7, scope: !1949)
!1978 = !DILocation(line: 158, column: 13, scope: !1949)
!1979 = !DILocation(line: 158, column: 12, scope: !1949)
!1980 = !DILocation(line: 158, column: 18, scope: !1949)
!1981 = !DILocation(line: 158, column: 15, scope: !1949)
!1982 = !DILocation(line: 158, column: 25, scope: !1949)
!1983 = !DILocation(line: 159, column: 11, scope: !1949)
!1984 = !DILocation(line: 159, column: 13, scope: !1949)
!1985 = !DILocation(line: 159, column: 20, scope: !1949)
!1986 = !DILocation(line: 159, column: 18, scope: !1949)
!1987 = !DILocation(line: 159, column: 26, scope: !1949)
!1988 = !DILocation(line: 159, column: 23, scope: !1949)
!1989 = !DILocation(line: 159, column: 4, scope: !1949)
!1990 = !DILocation(line: 159, column: 6, scope: !1949)
!1991 = !DILocation(line: 160, column: 10, scope: !1949)
!1992 = !DILocation(line: 160, column: 3, scope: !1949)
!1993 = !DILocalVariable(name: "o", arg: 1, scope: !1994, file: !139, line: 152, type: !1997)
!1994 = distinct !DISubprogram(name: "set_char_quoting", scope: !139, file: !139, line: 152, type: !1995, scopeLine: 153, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2005, retainedNodes: !4)
!1995 = !DISubroutineType(types: !1996)
!1996 = !{!72, !1997, !7, !72}
!1997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1998, size: 64)
!1998 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !139, line: 65, size: 448, elements: !1999)
!1999 = !{!2000, !2001, !2002, !2003, !2004}
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !1998, file: !139, line: 68, baseType: !118, size: 32)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1998, file: !139, line: 71, baseType: !72, size: 32, offset: 32)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !1998, file: !139, line: 75, baseType: !155, size: 256, offset: 64)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !1998, file: !139, line: 78, baseType: !69, size: 64, offset: 320)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !1998, file: !139, line: 81, baseType: !69, size: 64, offset: 384)
!2005 = distinct !DICompileUnit(language: DW_LANG_C99, file: !116, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !117, retainedTypes: !132, globals: !2006, nameTableKind: None)
!2006 = !{!2007, !2009, !2011, !2013, !2015, !2017, !2024, !2026}
!2007 = !DIGlobalVariableExpression(var: !2008, expr: !DIExpression())
!2008 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !2005, file: !139, line: 85, type: !140, isLocal: false, isDefinition: true)
!2009 = !DIGlobalVariableExpression(var: !2010, expr: !DIExpression())
!2010 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !2005, file: !139, line: 101, type: !146, isLocal: false, isDefinition: true)
!2011 = !DIGlobalVariableExpression(var: !2012, expr: !DIExpression())
!2012 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !2005, file: !139, line: 1052, type: !1998, isLocal: false, isDefinition: true)
!2013 = !DIGlobalVariableExpression(var: !2014, expr: !DIExpression())
!2014 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !2005, file: !139, line: 116, type: !1998, isLocal: true, isDefinition: true)
!2015 = !DIGlobalVariableExpression(var: !2016, expr: !DIExpression())
!2016 = distinct !DIGlobalVariable(name: "slot0", scope: !2005, file: !139, line: 842, type: !162, isLocal: true, isDefinition: true)
!2017 = !DIGlobalVariableExpression(var: !2018, expr: !DIExpression())
!2018 = distinct !DIGlobalVariable(name: "slotvec", scope: !2005, file: !139, line: 845, type: !2019, isLocal: true, isDefinition: true)
!2019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2020, size: 64)
!2020 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !139, line: 834, size: 128, elements: !2021)
!2021 = !{!2022, !2023}
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2020, file: !139, line: 836, baseType: !134, size: 64)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2020, file: !139, line: 837, baseType: !6, size: 64, offset: 64)
!2024 = !DIGlobalVariableExpression(var: !2025, expr: !DIExpression())
!2025 = distinct !DIGlobalVariable(name: "nslots", scope: !2005, file: !139, line: 843, type: !72, isLocal: true, isDefinition: true)
!2026 = !DIGlobalVariableExpression(var: !2027, expr: !DIExpression())
!2027 = distinct !DIGlobalVariable(name: "slotvec0", scope: !2005, file: !139, line: 844, type: !2020, isLocal: true, isDefinition: true)
!2028 = !DILocalVariable(name: "c", arg: 2, scope: !1994, file: !139, line: 152, type: !7)
!2029 = !DILocalVariable(name: "i", arg: 3, scope: !1994, file: !139, line: 152, type: !72)
!2030 = !DILocalVariable(name: "uc", scope: !1994, file: !139, line: 154, type: !240)
!2031 = !DILocalVariable(name: "p", scope: !1994, file: !139, line: 155, type: !1963)
!2032 = !DILocalVariable(name: "shift", scope: !2033, file: !139, line: 157, type: !72)
!2033 = distinct !DISubprogram(name: "set_char_quoting", scope: !139, file: !139, line: 152, type: !2034, scopeLine: 153, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2044, retainedNodes: !4)
!2034 = !DISubroutineType(types: !2035)
!2035 = !{!72, !2036, !7, !72}
!2036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2037, size: 64)
!2037 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !139, line: 65, size: 448, elements: !2038)
!2038 = !{!2039, !2040, !2041, !2042, !2043}
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !2037, file: !139, line: 68, baseType: !118, size: 32)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2037, file: !139, line: 71, baseType: !72, size: 32, offset: 32)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !2037, file: !139, line: 75, baseType: !155, size: 256, offset: 64)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !2037, file: !139, line: 78, baseType: !69, size: 64, offset: 320)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !2037, file: !139, line: 81, baseType: !69, size: 64, offset: 384)
!2044 = distinct !DICompileUnit(language: DW_LANG_C99, file: !116, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !117, retainedTypes: !132, globals: !2045, nameTableKind: None)
!2045 = !{!2046, !2048, !2050, !2052, !2054, !2056, !2063, !2065}
!2046 = !DIGlobalVariableExpression(var: !2047, expr: !DIExpression())
!2047 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !2044, file: !139, line: 85, type: !140, isLocal: false, isDefinition: true)
!2048 = !DIGlobalVariableExpression(var: !2049, expr: !DIExpression())
!2049 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !2044, file: !139, line: 101, type: !146, isLocal: false, isDefinition: true)
!2050 = !DIGlobalVariableExpression(var: !2051, expr: !DIExpression())
!2051 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !2044, file: !139, line: 1052, type: !2037, isLocal: false, isDefinition: true)
!2052 = !DIGlobalVariableExpression(var: !2053, expr: !DIExpression())
!2053 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !2044, file: !139, line: 116, type: !2037, isLocal: true, isDefinition: true)
!2054 = !DIGlobalVariableExpression(var: !2055, expr: !DIExpression())
!2055 = distinct !DIGlobalVariable(name: "slot0", scope: !2044, file: !139, line: 842, type: !162, isLocal: true, isDefinition: true)
!2056 = !DIGlobalVariableExpression(var: !2057, expr: !DIExpression())
!2057 = distinct !DIGlobalVariable(name: "slotvec", scope: !2044, file: !139, line: 845, type: !2058, isLocal: true, isDefinition: true)
!2058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2059, size: 64)
!2059 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !139, line: 834, size: 128, elements: !2060)
!2060 = !{!2061, !2062}
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2059, file: !139, line: 836, baseType: !134, size: 64)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2059, file: !139, line: 837, baseType: !6, size: 64, offset: 64)
!2063 = !DIGlobalVariableExpression(var: !2064, expr: !DIExpression())
!2064 = distinct !DIGlobalVariable(name: "nslots", scope: !2044, file: !139, line: 843, type: !72, isLocal: true, isDefinition: true)
!2065 = !DIGlobalVariableExpression(var: !2066, expr: !DIExpression())
!2066 = distinct !DIGlobalVariable(name: "slotvec0", scope: !2044, file: !139, line: 844, type: !2059, isLocal: true, isDefinition: true)
!2067 = !DILocalVariable(name: "r", scope: !2033, file: !139, line: 158, type: !72)
!2068 = distinct !DISubprogram(name: "quotearg_char_mem", scope: !139, file: !139, line: 982, type: !2069, scopeLine: 983, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !115, retainedNodes: !4)
!2069 = !DISubroutineType(types: !2070)
!2070 = !{!6, !69, !134, !7}
!2071 = !DILocalVariable(name: "arg", arg: 1, scope: !2068, file: !139, line: 982, type: !69)
!2072 = !DILocation(line: 982, column: 32, scope: !2068)
!2073 = !DILocalVariable(name: "argsize", arg: 2, scope: !2068, file: !139, line: 982, type: !134)
!2074 = !DILocation(line: 982, column: 44, scope: !2068)
!2075 = !DILocalVariable(name: "ch", arg: 3, scope: !2068, file: !139, line: 982, type: !7)
!2076 = !DILocation(line: 982, column: 58, scope: !2068)
!2077 = !DILocalVariable(name: "options", scope: !2068, file: !139, line: 984, type: !150)
!2078 = !DILocation(line: 984, column: 26, scope: !2068)
!2079 = !DILocation(line: 985, column: 13, scope: !2068)
!2080 = !DILocation(line: 986, column: 31, scope: !2068)
!2081 = !DILocation(line: 986, column: 3, scope: !2068)
!2082 = !DILocation(line: 987, column: 33, scope: !2068)
!2083 = !DILocation(line: 987, column: 38, scope: !2068)
!2084 = !DILocation(line: 987, column: 10, scope: !2068)
!2085 = !DILocation(line: 987, column: 3, scope: !2068)
!2086 = !DILocalVariable(name: "arg", arg: 1, scope: !2087, file: !139, line: 982, type: !69)
!2087 = distinct !DISubprogram(name: "quotearg_char_mem", scope: !139, file: !139, line: 982, type: !2069, scopeLine: 983, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2088, retainedNodes: !4)
!2088 = distinct !DICompileUnit(language: DW_LANG_C99, file: !116, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !117, retainedTypes: !132, globals: !2089, nameTableKind: None)
!2089 = !{!2090, !2092, !2094, !2103, !2105, !2107, !2114, !2116}
!2090 = !DIGlobalVariableExpression(var: !2091, expr: !DIExpression())
!2091 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !2088, file: !139, line: 85, type: !140, isLocal: false, isDefinition: true)
!2092 = !DIGlobalVariableExpression(var: !2093, expr: !DIExpression())
!2093 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !2088, file: !139, line: 101, type: !146, isLocal: false, isDefinition: true)
!2094 = !DIGlobalVariableExpression(var: !2095, expr: !DIExpression())
!2095 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !2088, file: !139, line: 1052, type: !2096, isLocal: false, isDefinition: true)
!2096 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !139, line: 65, size: 448, elements: !2097)
!2097 = !{!2098, !2099, !2100, !2101, !2102}
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !2096, file: !139, line: 68, baseType: !118, size: 32)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2096, file: !139, line: 71, baseType: !72, size: 32, offset: 32)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !2096, file: !139, line: 75, baseType: !155, size: 256, offset: 64)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !2096, file: !139, line: 78, baseType: !69, size: 64, offset: 320)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !2096, file: !139, line: 81, baseType: !69, size: 64, offset: 384)
!2103 = !DIGlobalVariableExpression(var: !2104, expr: !DIExpression())
!2104 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !2088, file: !139, line: 116, type: !2096, isLocal: true, isDefinition: true)
!2105 = !DIGlobalVariableExpression(var: !2106, expr: !DIExpression())
!2106 = distinct !DIGlobalVariable(name: "slot0", scope: !2088, file: !139, line: 842, type: !162, isLocal: true, isDefinition: true)
!2107 = !DIGlobalVariableExpression(var: !2108, expr: !DIExpression())
!2108 = distinct !DIGlobalVariable(name: "slotvec", scope: !2088, file: !139, line: 845, type: !2109, isLocal: true, isDefinition: true)
!2109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2110, size: 64)
!2110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !139, line: 834, size: 128, elements: !2111)
!2111 = !{!2112, !2113}
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2110, file: !139, line: 836, baseType: !134, size: 64)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2110, file: !139, line: 837, baseType: !6, size: 64, offset: 64)
!2114 = !DIGlobalVariableExpression(var: !2115, expr: !DIExpression())
!2115 = distinct !DIGlobalVariable(name: "nslots", scope: !2088, file: !139, line: 843, type: !72, isLocal: true, isDefinition: true)
!2116 = !DIGlobalVariableExpression(var: !2117, expr: !DIExpression())
!2117 = distinct !DIGlobalVariable(name: "slotvec0", scope: !2088, file: !139, line: 844, type: !2110, isLocal: true, isDefinition: true)
!2118 = !DILocalVariable(name: "argsize", arg: 2, scope: !2087, file: !139, line: 982, type: !134)
!2119 = !DILocalVariable(name: "ch", arg: 3, scope: !2087, file: !139, line: 982, type: !7)
!2120 = !DILocalVariable(name: "options", scope: !2087, file: !139, line: 984, type: !2096)
!2121 = distinct !DISubprogram(name: "quotearg_n_options", scope: !139, file: !139, line: 877, type: !2122, scopeLine: 879, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !115, retainedNodes: !4)
!2122 = !DISubroutineType(types: !2123)
!2123 = !{!6, !72, !69, !134, !2124}
!2124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2125, size: 64)
!2125 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !150)
!2126 = !DILocalVariable(name: "n", arg: 1, scope: !2121, file: !139, line: 877, type: !72)
!2127 = !DILocation(line: 877, column: 25, scope: !2121)
!2128 = !DILocalVariable(name: "arg", arg: 2, scope: !2121, file: !139, line: 877, type: !69)
!2129 = !DILocation(line: 877, column: 40, scope: !2121)
!2130 = !DILocalVariable(name: "argsize", arg: 3, scope: !2121, file: !139, line: 877, type: !134)
!2131 = !DILocation(line: 877, column: 52, scope: !2121)
!2132 = !DILocalVariable(name: "options", arg: 4, scope: !2121, file: !139, line: 878, type: !2124)
!2133 = !DILocation(line: 878, column: 51, scope: !2121)
!2134 = !DILocalVariable(name: "e", scope: !2121, file: !139, line: 880, type: !72)
!2135 = !DILocation(line: 880, column: 7, scope: !2121)
!2136 = !DILocation(line: 880, column: 11, scope: !2121)
!2137 = !DILocalVariable(name: "sv", scope: !2121, file: !139, line: 882, type: !167)
!2138 = !DILocation(line: 882, column: 19, scope: !2121)
!2139 = !DILocation(line: 882, column: 24, scope: !2121)
!2140 = !DILocation(line: 884, column: 7, scope: !2141)
!2141 = distinct !DILexicalBlock(scope: !2121, file: !139, line: 884, column: 7)
!2142 = !DILocation(line: 884, column: 9, scope: !2141)
!2143 = !DILocation(line: 884, column: 7, scope: !2121)
!2144 = !DILocation(line: 885, column: 5, scope: !2141)
!2145 = !DILocation(line: 887, column: 7, scope: !2146)
!2146 = distinct !DILexicalBlock(scope: !2121, file: !139, line: 887, column: 7)
!2147 = !DILocation(line: 887, column: 17, scope: !2146)
!2148 = !DILocation(line: 887, column: 14, scope: !2146)
!2149 = !DILocation(line: 887, column: 7, scope: !2121)
!2150 = !DILocalVariable(name: "preallocated", scope: !2151, file: !139, line: 889, type: !27)
!2151 = distinct !DILexicalBlock(scope: !2146, file: !139, line: 888, column: 5)
!2152 = !DILocation(line: 889, column: 12, scope: !2151)
!2153 = !DILocation(line: 889, column: 28, scope: !2151)
!2154 = !DILocation(line: 889, column: 31, scope: !2151)
!2155 = !DILocalVariable(name: "nmax", scope: !2151, file: !139, line: 890, type: !72)
!2156 = !DILocation(line: 890, column: 11, scope: !2151)
!2157 = !DILocation(line: 892, column: 11, scope: !2158)
!2158 = distinct !DILexicalBlock(scope: !2151, file: !139, line: 892, column: 11)
!2159 = !DILocation(line: 892, column: 18, scope: !2158)
!2160 = !DILocation(line: 892, column: 16, scope: !2158)
!2161 = !DILocation(line: 892, column: 11, scope: !2151)
!2162 = !DILocation(line: 893, column: 9, scope: !2158)
!2163 = !DILocation(line: 895, column: 32, scope: !2151)
!2164 = !DILocation(line: 895, column: 54, scope: !2151)
!2165 = !DILocation(line: 895, column: 59, scope: !2151)
!2166 = !DILocation(line: 895, column: 61, scope: !2151)
!2167 = !DILocation(line: 895, column: 58, scope: !2151)
!2168 = !DILocation(line: 895, column: 66, scope: !2151)
!2169 = !DILocation(line: 895, column: 22, scope: !2151)
!2170 = !DILocation(line: 895, column: 20, scope: !2151)
!2171 = !DILocation(line: 895, column: 15, scope: !2151)
!2172 = !DILocation(line: 896, column: 11, scope: !2173)
!2173 = distinct !DILexicalBlock(scope: !2151, file: !139, line: 896, column: 11)
!2174 = !DILocation(line: 896, column: 11, scope: !2151)
!2175 = !DILocation(line: 897, column: 10, scope: !2173)
!2176 = !DILocation(line: 897, column: 15, scope: !2173)
!2177 = !DILocation(line: 897, column: 9, scope: !2173)
!2178 = !DILocation(line: 898, column: 15, scope: !2151)
!2179 = !DILocation(line: 898, column: 20, scope: !2151)
!2180 = !DILocation(line: 898, column: 18, scope: !2151)
!2181 = !DILocation(line: 898, column: 7, scope: !2151)
!2182 = !DILocation(line: 898, column: 32, scope: !2151)
!2183 = !DILocation(line: 898, column: 34, scope: !2151)
!2184 = !DILocation(line: 898, column: 40, scope: !2151)
!2185 = !DILocation(line: 898, column: 38, scope: !2151)
!2186 = !DILocation(line: 898, column: 31, scope: !2151)
!2187 = !DILocation(line: 898, column: 48, scope: !2151)
!2188 = !DILocation(line: 899, column: 16, scope: !2151)
!2189 = !DILocation(line: 899, column: 18, scope: !2151)
!2190 = !DILocation(line: 899, column: 14, scope: !2151)
!2191 = !DILocation(line: 900, column: 5, scope: !2151)
!2192 = !DILocalVariable(name: "size", scope: !2193, file: !139, line: 903, type: !134)
!2193 = distinct !DILexicalBlock(scope: !2121, file: !139, line: 902, column: 3)
!2194 = !DILocation(line: 903, column: 12, scope: !2193)
!2195 = !DILocation(line: 903, column: 19, scope: !2193)
!2196 = !DILocation(line: 903, column: 22, scope: !2193)
!2197 = !DILocation(line: 903, column: 25, scope: !2193)
!2198 = !DILocalVariable(name: "val", scope: !2193, file: !139, line: 904, type: !6)
!2199 = !DILocation(line: 904, column: 11, scope: !2193)
!2200 = !DILocation(line: 904, column: 17, scope: !2193)
!2201 = !DILocation(line: 904, column: 20, scope: !2193)
!2202 = !DILocation(line: 904, column: 23, scope: !2193)
!2203 = !DILocalVariable(name: "flags", scope: !2193, file: !139, line: 906, type: !72)
!2204 = !DILocation(line: 906, column: 9, scope: !2193)
!2205 = !DILocation(line: 906, column: 17, scope: !2193)
!2206 = !DILocation(line: 906, column: 26, scope: !2193)
!2207 = !DILocation(line: 906, column: 32, scope: !2193)
!2208 = !DILocalVariable(name: "qsize", scope: !2193, file: !139, line: 907, type: !134)
!2209 = !DILocation(line: 907, column: 12, scope: !2193)
!2210 = !DILocation(line: 907, column: 46, scope: !2193)
!2211 = !DILocation(line: 907, column: 51, scope: !2193)
!2212 = !DILocation(line: 907, column: 57, scope: !2193)
!2213 = !DILocation(line: 907, column: 62, scope: !2193)
!2214 = !DILocation(line: 908, column: 46, scope: !2193)
!2215 = !DILocation(line: 908, column: 55, scope: !2193)
!2216 = !DILocation(line: 908, column: 62, scope: !2193)
!2217 = !DILocation(line: 909, column: 46, scope: !2193)
!2218 = !DILocation(line: 909, column: 55, scope: !2193)
!2219 = !DILocation(line: 910, column: 46, scope: !2193)
!2220 = !DILocation(line: 910, column: 55, scope: !2193)
!2221 = !DILocation(line: 911, column: 46, scope: !2193)
!2222 = !DILocation(line: 911, column: 55, scope: !2193)
!2223 = !DILocation(line: 907, column: 20, scope: !2193)
!2224 = !DILocation(line: 913, column: 9, scope: !2225)
!2225 = distinct !DILexicalBlock(scope: !2193, file: !139, line: 913, column: 9)
!2226 = !DILocation(line: 913, column: 17, scope: !2225)
!2227 = !DILocation(line: 913, column: 14, scope: !2225)
!2228 = !DILocation(line: 913, column: 9, scope: !2193)
!2229 = !DILocation(line: 915, column: 29, scope: !2230)
!2230 = distinct !DILexicalBlock(scope: !2225, file: !139, line: 914, column: 7)
!2231 = !DILocation(line: 915, column: 35, scope: !2230)
!2232 = !DILocation(line: 915, column: 27, scope: !2230)
!2233 = !DILocation(line: 915, column: 9, scope: !2230)
!2234 = !DILocation(line: 915, column: 12, scope: !2230)
!2235 = !DILocation(line: 915, column: 15, scope: !2230)
!2236 = !DILocation(line: 915, column: 20, scope: !2230)
!2237 = !DILocation(line: 916, column: 13, scope: !2238)
!2238 = distinct !DILexicalBlock(scope: !2230, file: !139, line: 916, column: 13)
!2239 = !DILocation(line: 916, column: 17, scope: !2238)
!2240 = !DILocation(line: 916, column: 13, scope: !2230)
!2241 = !DILocation(line: 917, column: 17, scope: !2238)
!2242 = !DILocation(line: 917, column: 11, scope: !2238)
!2243 = !DILocation(line: 918, column: 39, scope: !2230)
!2244 = !DILocation(line: 918, column: 27, scope: !2230)
!2245 = !DILocation(line: 918, column: 25, scope: !2230)
!2246 = !DILocation(line: 918, column: 9, scope: !2230)
!2247 = !DILocation(line: 918, column: 12, scope: !2230)
!2248 = !DILocation(line: 918, column: 15, scope: !2230)
!2249 = !DILocation(line: 918, column: 19, scope: !2230)
!2250 = !DILocation(line: 919, column: 35, scope: !2230)
!2251 = !DILocation(line: 919, column: 40, scope: !2230)
!2252 = !DILocation(line: 919, column: 46, scope: !2230)
!2253 = !DILocation(line: 919, column: 51, scope: !2230)
!2254 = !DILocation(line: 919, column: 60, scope: !2230)
!2255 = !DILocation(line: 919, column: 69, scope: !2230)
!2256 = !DILocation(line: 920, column: 35, scope: !2230)
!2257 = !DILocation(line: 920, column: 42, scope: !2230)
!2258 = !DILocation(line: 920, column: 51, scope: !2230)
!2259 = !DILocation(line: 921, column: 35, scope: !2230)
!2260 = !DILocation(line: 921, column: 44, scope: !2230)
!2261 = !DILocation(line: 922, column: 35, scope: !2230)
!2262 = !DILocation(line: 922, column: 44, scope: !2230)
!2263 = !DILocation(line: 919, column: 9, scope: !2230)
!2264 = !DILocation(line: 923, column: 7, scope: !2230)
!2265 = !DILocation(line: 925, column: 13, scope: !2193)
!2266 = !DILocation(line: 925, column: 5, scope: !2193)
!2267 = !DILocation(line: 925, column: 11, scope: !2193)
!2268 = !DILocation(line: 926, column: 12, scope: !2193)
!2269 = !DILocation(line: 926, column: 5, scope: !2193)
!2270 = !DILocalVariable(name: "n", arg: 1, scope: !2271, file: !139, line: 877, type: !72)
!2271 = distinct !DISubprogram(name: "quotearg_n_options", scope: !139, file: !139, line: 877, type: !2272, scopeLine: 879, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2283, retainedNodes: !4)
!2272 = !DISubroutineType(types: !2273)
!2273 = !{!6, !72, !69, !134, !2274}
!2274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2275, size: 64)
!2275 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2276)
!2276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !139, line: 65, size: 448, elements: !2277)
!2277 = !{!2278, !2279, !2280, !2281, !2282}
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !2276, file: !139, line: 68, baseType: !118, size: 32)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2276, file: !139, line: 71, baseType: !72, size: 32, offset: 32)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !2276, file: !139, line: 75, baseType: !155, size: 256, offset: 64)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !2276, file: !139, line: 78, baseType: !69, size: 64, offset: 320)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !2276, file: !139, line: 81, baseType: !69, size: 64, offset: 384)
!2283 = distinct !DICompileUnit(language: DW_LANG_C99, file: !116, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !117, retainedTypes: !132, globals: !2284, nameTableKind: None)
!2284 = !{!2285, !2287, !2289, !2291, !2293, !2295, !2302, !2304}
!2285 = !DIGlobalVariableExpression(var: !2286, expr: !DIExpression())
!2286 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !2283, file: !139, line: 85, type: !140, isLocal: false, isDefinition: true)
!2287 = !DIGlobalVariableExpression(var: !2288, expr: !DIExpression())
!2288 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !2283, file: !139, line: 101, type: !146, isLocal: false, isDefinition: true)
!2289 = !DIGlobalVariableExpression(var: !2290, expr: !DIExpression())
!2290 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !2283, file: !139, line: 1052, type: !2276, isLocal: false, isDefinition: true)
!2291 = !DIGlobalVariableExpression(var: !2292, expr: !DIExpression())
!2292 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !2283, file: !139, line: 116, type: !2276, isLocal: true, isDefinition: true)
!2293 = !DIGlobalVariableExpression(var: !2294, expr: !DIExpression())
!2294 = distinct !DIGlobalVariable(name: "slot0", scope: !2283, file: !139, line: 842, type: !162, isLocal: true, isDefinition: true)
!2295 = !DIGlobalVariableExpression(var: !2296, expr: !DIExpression())
!2296 = distinct !DIGlobalVariable(name: "slotvec", scope: !2283, file: !139, line: 845, type: !2297, isLocal: true, isDefinition: true)
!2297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2298, size: 64)
!2298 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !139, line: 834, size: 128, elements: !2299)
!2299 = !{!2300, !2301}
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2298, file: !139, line: 836, baseType: !134, size: 64)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2298, file: !139, line: 837, baseType: !6, size: 64, offset: 64)
!2302 = !DIGlobalVariableExpression(var: !2303, expr: !DIExpression())
!2303 = distinct !DIGlobalVariable(name: "nslots", scope: !2283, file: !139, line: 843, type: !72, isLocal: true, isDefinition: true)
!2304 = !DIGlobalVariableExpression(var: !2305, expr: !DIExpression())
!2305 = distinct !DIGlobalVariable(name: "slotvec0", scope: !2283, file: !139, line: 844, type: !2298, isLocal: true, isDefinition: true)
!2306 = !DILocalVariable(name: "arg", arg: 2, scope: !2271, file: !139, line: 877, type: !69)
!2307 = !DILocalVariable(name: "argsize", arg: 3, scope: !2271, file: !139, line: 877, type: !134)
!2308 = !DILocalVariable(name: "options", arg: 4, scope: !2271, file: !139, line: 878, type: !2274)
!2309 = !DILocalVariable(name: "e", scope: !2271, file: !139, line: 880, type: !72)
!2310 = !DILocalVariable(name: "sv", scope: !2271, file: !139, line: 882, type: !2297)
!2311 = !DILocalVariable(name: "nmax", scope: !2312, file: !139, line: 890, type: !72)
!2312 = distinct !DILexicalBlock(scope: !2313, file: !139, line: 888, column: 5)
!2313 = distinct !DILexicalBlock(scope: !2314, file: !139, line: 887, column: 7)
!2314 = distinct !DISubprogram(name: "quotearg_n_options", scope: !139, file: !139, line: 877, type: !2315, scopeLine: 879, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2326, retainedNodes: !4)
!2315 = !DISubroutineType(types: !2316)
!2316 = !{!6, !72, !69, !134, !2317}
!2317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2318, size: 64)
!2318 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2319)
!2319 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !139, line: 65, size: 448, elements: !2320)
!2320 = !{!2321, !2322, !2323, !2324, !2325}
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !2319, file: !139, line: 68, baseType: !118, size: 32)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2319, file: !139, line: 71, baseType: !72, size: 32, offset: 32)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !2319, file: !139, line: 75, baseType: !155, size: 256, offset: 64)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !2319, file: !139, line: 78, baseType: !69, size: 64, offset: 320)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !2319, file: !139, line: 81, baseType: !69, size: 64, offset: 384)
!2326 = distinct !DICompileUnit(language: DW_LANG_C99, file: !116, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !117, retainedTypes: !132, globals: !2327, nameTableKind: None)
!2327 = !{!2328, !2330, !2332, !2334, !2336, !2338, !2345, !2347}
!2328 = !DIGlobalVariableExpression(var: !2329, expr: !DIExpression())
!2329 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !2326, file: !139, line: 85, type: !140, isLocal: false, isDefinition: true)
!2330 = !DIGlobalVariableExpression(var: !2331, expr: !DIExpression())
!2331 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !2326, file: !139, line: 101, type: !146, isLocal: false, isDefinition: true)
!2332 = !DIGlobalVariableExpression(var: !2333, expr: !DIExpression())
!2333 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !2326, file: !139, line: 1052, type: !2319, isLocal: false, isDefinition: true)
!2334 = !DIGlobalVariableExpression(var: !2335, expr: !DIExpression())
!2335 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !2326, file: !139, line: 116, type: !2319, isLocal: true, isDefinition: true)
!2336 = !DIGlobalVariableExpression(var: !2337, expr: !DIExpression())
!2337 = distinct !DIGlobalVariable(name: "slot0", scope: !2326, file: !139, line: 842, type: !162, isLocal: true, isDefinition: true)
!2338 = !DIGlobalVariableExpression(var: !2339, expr: !DIExpression())
!2339 = distinct !DIGlobalVariable(name: "slotvec", scope: !2326, file: !139, line: 845, type: !2340, isLocal: true, isDefinition: true)
!2340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2341, size: 64)
!2341 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !139, line: 834, size: 128, elements: !2342)
!2342 = !{!2343, !2344}
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2341, file: !139, line: 836, baseType: !134, size: 64)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2341, file: !139, line: 837, baseType: !6, size: 64, offset: 64)
!2345 = !DIGlobalVariableExpression(var: !2346, expr: !DIExpression())
!2346 = distinct !DIGlobalVariable(name: "nslots", scope: !2326, file: !139, line: 843, type: !72, isLocal: true, isDefinition: true)
!2347 = !DIGlobalVariableExpression(var: !2348, expr: !DIExpression())
!2348 = distinct !DIGlobalVariable(name: "slotvec0", scope: !2326, file: !139, line: 844, type: !2341, isLocal: true, isDefinition: true)
!2349 = !DILocalVariable(name: "val", scope: !2350, file: !139, line: 904, type: !6)
!2350 = distinct !DILexicalBlock(scope: !2351, file: !139, line: 902, column: 3)
!2351 = distinct !DISubprogram(name: "quotearg_n_options", scope: !139, file: !139, line: 877, type: !2352, scopeLine: 879, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2363, retainedNodes: !4)
!2352 = !DISubroutineType(types: !2353)
!2353 = !{!6, !72, !69, !134, !2354}
!2354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2355, size: 64)
!2355 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2356)
!2356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !139, line: 65, size: 448, elements: !2357)
!2357 = !{!2358, !2359, !2360, !2361, !2362}
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !2356, file: !139, line: 68, baseType: !118, size: 32)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2356, file: !139, line: 71, baseType: !72, size: 32, offset: 32)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !2356, file: !139, line: 75, baseType: !155, size: 256, offset: 64)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !2356, file: !139, line: 78, baseType: !69, size: 64, offset: 320)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !2356, file: !139, line: 81, baseType: !69, size: 64, offset: 384)
!2363 = distinct !DICompileUnit(language: DW_LANG_C99, file: !116, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !117, retainedTypes: !132, globals: !2364, nameTableKind: None)
!2364 = !{!2365, !2367, !2369, !2371, !2373, !2375, !2382, !2384}
!2365 = !DIGlobalVariableExpression(var: !2366, expr: !DIExpression())
!2366 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !2363, file: !139, line: 85, type: !140, isLocal: false, isDefinition: true)
!2367 = !DIGlobalVariableExpression(var: !2368, expr: !DIExpression())
!2368 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !2363, file: !139, line: 101, type: !146, isLocal: false, isDefinition: true)
!2369 = !DIGlobalVariableExpression(var: !2370, expr: !DIExpression())
!2370 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !2363, file: !139, line: 1052, type: !2356, isLocal: false, isDefinition: true)
!2371 = !DIGlobalVariableExpression(var: !2372, expr: !DIExpression())
!2372 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !2363, file: !139, line: 116, type: !2356, isLocal: true, isDefinition: true)
!2373 = !DIGlobalVariableExpression(var: !2374, expr: !DIExpression())
!2374 = distinct !DIGlobalVariable(name: "slot0", scope: !2363, file: !139, line: 842, type: !162, isLocal: true, isDefinition: true)
!2375 = !DIGlobalVariableExpression(var: !2376, expr: !DIExpression())
!2376 = distinct !DIGlobalVariable(name: "slotvec", scope: !2363, file: !139, line: 845, type: !2377, isLocal: true, isDefinition: true)
!2377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2378, size: 64)
!2378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !139, line: 834, size: 128, elements: !2379)
!2379 = !{!2380, !2381}
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2378, file: !139, line: 836, baseType: !134, size: 64)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2378, file: !139, line: 837, baseType: !6, size: 64, offset: 64)
!2382 = !DIGlobalVariableExpression(var: !2383, expr: !DIExpression())
!2383 = distinct !DIGlobalVariable(name: "nslots", scope: !2363, file: !139, line: 843, type: !72, isLocal: true, isDefinition: true)
!2384 = !DIGlobalVariableExpression(var: !2385, expr: !DIExpression())
!2385 = distinct !DIGlobalVariable(name: "slotvec0", scope: !2363, file: !139, line: 844, type: !2378, isLocal: true, isDefinition: true)
!2386 = !DILocalVariable(name: "flags", scope: !2350, file: !139, line: 906, type: !72)
!2387 = !DILocalVariable(name: "qsize", scope: !2350, file: !139, line: 907, type: !134)
!2388 = distinct !DISubprogram(name: "quotearg_buffer_restyled", scope: !139, file: !139, line: 256, type: !2389, scopeLine: 262, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !115, retainedNodes: !4)
!2389 = !DISubroutineType(types: !2390)
!2390 = !{!134, !6, !134, !69, !134, !118, !72, !2391, !69, !69}
!2391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2392, size: 64)
!2392 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !16)
!2393 = !DILocalVariable(name: "buffer", arg: 1, scope: !2388, file: !139, line: 256, type: !6)
!2394 = !DILocation(line: 256, column: 33, scope: !2388)
!2395 = !DILocalVariable(name: "buffersize", arg: 2, scope: !2388, file: !139, line: 256, type: !134)
!2396 = !DILocation(line: 256, column: 48, scope: !2388)
!2397 = !DILocalVariable(name: "arg", arg: 3, scope: !2388, file: !139, line: 257, type: !69)
!2398 = !DILocation(line: 257, column: 39, scope: !2388)
!2399 = !DILocalVariable(name: "argsize", arg: 4, scope: !2388, file: !139, line: 257, type: !134)
!2400 = !DILocation(line: 257, column: 51, scope: !2388)
!2401 = !DILocalVariable(name: "quoting_style", arg: 5, scope: !2388, file: !139, line: 258, type: !118)
!2402 = !DILocation(line: 258, column: 46, scope: !2388)
!2403 = !DILocalVariable(name: "flags", arg: 6, scope: !2388, file: !139, line: 258, type: !72)
!2404 = !DILocation(line: 258, column: 65, scope: !2388)
!2405 = !DILocalVariable(name: "quote_these_too", arg: 7, scope: !2388, file: !139, line: 259, type: !2391)
!2406 = !DILocation(line: 259, column: 47, scope: !2388)
!2407 = !DILocalVariable(name: "left_quote", arg: 8, scope: !2388, file: !139, line: 260, type: !69)
!2408 = !DILocation(line: 260, column: 39, scope: !2388)
!2409 = !DILocalVariable(name: "right_quote", arg: 9, scope: !2388, file: !139, line: 261, type: !69)
!2410 = !DILocation(line: 261, column: 39, scope: !2388)
!2411 = !DILocalVariable(name: "i", scope: !2388, file: !139, line: 263, type: !134)
!2412 = !DILocation(line: 263, column: 10, scope: !2388)
!2413 = !DILocalVariable(name: "len", scope: !2388, file: !139, line: 264, type: !134)
!2414 = !DILocation(line: 264, column: 10, scope: !2388)
!2415 = !DILocalVariable(name: "orig_buffersize", scope: !2388, file: !139, line: 265, type: !134)
!2416 = !DILocation(line: 265, column: 10, scope: !2388)
!2417 = !DILocalVariable(name: "quote_string", scope: !2388, file: !139, line: 266, type: !69)
!2418 = !DILocation(line: 266, column: 15, scope: !2388)
!2419 = !DILocalVariable(name: "quote_string_len", scope: !2388, file: !139, line: 267, type: !134)
!2420 = !DILocation(line: 267, column: 10, scope: !2388)
!2421 = !DILocalVariable(name: "backslash_escapes", scope: !2388, file: !139, line: 268, type: !27)
!2422 = !DILocation(line: 268, column: 8, scope: !2388)
!2423 = !DILocalVariable(name: "unibyte_locale", scope: !2388, file: !139, line: 269, type: !27)
!2424 = !DILocation(line: 269, column: 8, scope: !2388)
!2425 = !DILocation(line: 269, column: 25, scope: !2388)
!2426 = !DILocation(line: 269, column: 36, scope: !2388)
!2427 = !DILocalVariable(name: "elide_outer_quotes", scope: !2388, file: !139, line: 270, type: !27)
!2428 = !DILocation(line: 270, column: 8, scope: !2388)
!2429 = !DILocation(line: 270, column: 30, scope: !2388)
!2430 = !DILocation(line: 270, column: 36, scope: !2388)
!2431 = !DILocation(line: 270, column: 61, scope: !2388)
!2432 = !DILocalVariable(name: "pending_shell_escape_end", scope: !2388, file: !139, line: 271, type: !27)
!2433 = !DILocation(line: 271, column: 8, scope: !2388)
!2434 = !DILocalVariable(name: "encountered_single_quote", scope: !2388, file: !139, line: 272, type: !27)
!2435 = !DILocation(line: 272, column: 8, scope: !2388)
!2436 = !DILocalVariable(name: "all_c_and_shell_quote_compat", scope: !2388, file: !139, line: 273, type: !27)
!2437 = !DILocation(line: 273, column: 8, scope: !2388)
!2438 = !DILocation(line: 273, column: 3, scope: !2388)
!2439 = !DILabel(scope: !2388, name: "process_input", file: !139, line: 314)
!2440 = !DILocation(line: 314, column: 2, scope: !2388)
!2441 = !DILocation(line: 316, column: 11, scope: !2388)
!2442 = !DILocation(line: 316, column: 3, scope: !2388)
!2443 = !DILocation(line: 319, column: 21, scope: !2444)
!2444 = distinct !DILexicalBlock(scope: !2388, file: !139, line: 317, column: 5)
!2445 = !DILocation(line: 320, column: 26, scope: !2444)
!2446 = !DILocation(line: 321, column: 7, scope: !2444)
!2447 = !DILocation(line: 323, column: 12, scope: !2448)
!2448 = distinct !DILexicalBlock(scope: !2444, file: !139, line: 323, column: 11)
!2449 = !DILocation(line: 323, column: 11, scope: !2444)
!2450 = !DILocation(line: 324, column: 9, scope: !2448)
!2451 = !DILocation(line: 324, column: 9, scope: !2452)
!2452 = distinct !DILexicalBlock(scope: !2453, file: !139, line: 324, column: 9)
!2453 = distinct !DILexicalBlock(scope: !2448, file: !139, line: 324, column: 9)
!2454 = !DILocation(line: 324, column: 9, scope: !2453)
!2455 = !DILocation(line: 325, column: 25, scope: !2444)
!2456 = !DILocation(line: 326, column: 20, scope: !2444)
!2457 = !DILocation(line: 327, column: 24, scope: !2444)
!2458 = !DILocation(line: 328, column: 7, scope: !2444)
!2459 = !DILocation(line: 331, column: 25, scope: !2444)
!2460 = !DILocation(line: 332, column: 26, scope: !2444)
!2461 = !DILocation(line: 333, column: 7, scope: !2444)
!2462 = !DILocation(line: 339, column: 13, scope: !2463)
!2463 = distinct !DILexicalBlock(scope: !2464, file: !139, line: 339, column: 13)
!2464 = distinct !DILexicalBlock(scope: !2444, file: !139, line: 338, column: 7)
!2465 = !DILocation(line: 339, column: 27, scope: !2463)
!2466 = !DILocation(line: 339, column: 13, scope: !2464)
!2467 = !DILocation(line: 362, column: 50, scope: !2468)
!2468 = distinct !DILexicalBlock(scope: !2463, file: !139, line: 340, column: 11)
!2469 = !DILocation(line: 362, column: 26, scope: !2468)
!2470 = !DILocation(line: 362, column: 24, scope: !2468)
!2471 = !DILocation(line: 363, column: 51, scope: !2468)
!2472 = !DILocation(line: 363, column: 27, scope: !2468)
!2473 = !DILocation(line: 363, column: 25, scope: !2468)
!2474 = !DILocation(line: 364, column: 11, scope: !2468)
!2475 = !DILocation(line: 365, column: 14, scope: !2476)
!2476 = distinct !DILexicalBlock(scope: !2464, file: !139, line: 365, column: 13)
!2477 = !DILocation(line: 365, column: 13, scope: !2464)
!2478 = !DILocation(line: 366, column: 31, scope: !2479)
!2479 = distinct !DILexicalBlock(scope: !2476, file: !139, line: 366, column: 11)
!2480 = !DILocation(line: 366, column: 29, scope: !2479)
!2481 = !DILocation(line: 366, column: 16, scope: !2479)
!2482 = !DILocation(line: 366, column: 44, scope: !2483)
!2483 = distinct !DILexicalBlock(scope: !2479, file: !139, line: 366, column: 11)
!2484 = !DILocation(line: 366, column: 43, scope: !2483)
!2485 = !DILocation(line: 366, column: 11, scope: !2479)
!2486 = !DILocation(line: 367, column: 13, scope: !2483)
!2487 = !DILocation(line: 367, column: 13, scope: !2488)
!2488 = distinct !DILexicalBlock(scope: !2489, file: !139, line: 367, column: 13)
!2489 = distinct !DILexicalBlock(scope: !2483, file: !139, line: 367, column: 13)
!2490 = !DILocation(line: 367, column: 13, scope: !2489)
!2491 = !DILocation(line: 366, column: 70, scope: !2483)
!2492 = !DILocation(line: 366, column: 11, scope: !2483)
!2493 = distinct !{!2493, !2485, !2494}
!2494 = !DILocation(line: 367, column: 13, scope: !2479)
!2495 = !DILocation(line: 368, column: 27, scope: !2464)
!2496 = !DILocation(line: 369, column: 24, scope: !2464)
!2497 = !DILocation(line: 369, column: 22, scope: !2464)
!2498 = !DILocation(line: 370, column: 36, scope: !2464)
!2499 = !DILocation(line: 370, column: 28, scope: !2464)
!2500 = !DILocation(line: 370, column: 26, scope: !2464)
!2501 = !DILocation(line: 372, column: 7, scope: !2444)
!2502 = !DILocation(line: 375, column: 25, scope: !2444)
!2503 = !DILocation(line: 376, column: 7, scope: !2444)
!2504 = !DILocation(line: 378, column: 26, scope: !2444)
!2505 = !DILocation(line: 379, column: 7, scope: !2444)
!2506 = !DILocation(line: 381, column: 12, scope: !2507)
!2507 = distinct !DILexicalBlock(scope: !2444, file: !139, line: 381, column: 11)
!2508 = !DILocation(line: 381, column: 11, scope: !2444)
!2509 = !DILocation(line: 382, column: 27, scope: !2507)
!2510 = !DILocation(line: 382, column: 9, scope: !2507)
!2511 = !DILocation(line: 383, column: 7, scope: !2444)
!2512 = !DILocation(line: 385, column: 21, scope: !2444)
!2513 = !DILocation(line: 386, column: 12, scope: !2514)
!2514 = distinct !DILexicalBlock(scope: !2444, file: !139, line: 386, column: 11)
!2515 = !DILocation(line: 386, column: 11, scope: !2444)
!2516 = !DILocation(line: 387, column: 9, scope: !2514)
!2517 = !DILocation(line: 387, column: 9, scope: !2518)
!2518 = distinct !DILexicalBlock(scope: !2519, file: !139, line: 387, column: 9)
!2519 = distinct !DILexicalBlock(scope: !2514, file: !139, line: 387, column: 9)
!2520 = !DILocation(line: 387, column: 9, scope: !2519)
!2521 = !DILocation(line: 388, column: 20, scope: !2444)
!2522 = !DILocation(line: 389, column: 24, scope: !2444)
!2523 = !DILocation(line: 390, column: 7, scope: !2444)
!2524 = !DILocation(line: 393, column: 26, scope: !2444)
!2525 = !DILocation(line: 394, column: 7, scope: !2444)
!2526 = !DILocation(line: 397, column: 7, scope: !2444)
!2527 = !DILocation(line: 400, column: 10, scope: !2528)
!2528 = distinct !DILexicalBlock(scope: !2388, file: !139, line: 400, column: 3)
!2529 = !DILocation(line: 400, column: 8, scope: !2528)
!2530 = !DILocation(line: 400, column: 19, scope: !2531)
!2531 = distinct !DILexicalBlock(scope: !2528, file: !139, line: 400, column: 3)
!2532 = !DILocation(line: 400, column: 27, scope: !2531)
!2533 = !DILocation(line: 400, column: 41, scope: !2531)
!2534 = !DILocation(line: 400, column: 45, scope: !2531)
!2535 = !DILocation(line: 400, column: 48, scope: !2531)
!2536 = !DILocation(line: 400, column: 58, scope: !2531)
!2537 = !DILocation(line: 400, column: 63, scope: !2531)
!2538 = !DILocation(line: 400, column: 60, scope: !2531)
!2539 = !DILocation(line: 400, column: 16, scope: !2531)
!2540 = !DILocation(line: 400, column: 3, scope: !2528)
!2541 = !DILocalVariable(name: "c", scope: !2542, file: !139, line: 402, type: !240)
!2542 = distinct !DILexicalBlock(scope: !2531, file: !139, line: 401, column: 5)
!2543 = !DILocation(line: 402, column: 21, scope: !2542)
!2544 = !DILocalVariable(name: "esc", scope: !2542, file: !139, line: 403, type: !240)
!2545 = !DILocation(line: 403, column: 21, scope: !2542)
!2546 = !DILocalVariable(name: "is_right_quote", scope: !2542, file: !139, line: 404, type: !27)
!2547 = !DILocation(line: 404, column: 12, scope: !2542)
!2548 = !DILocalVariable(name: "escaping", scope: !2542, file: !139, line: 405, type: !27)
!2549 = !DILocation(line: 405, column: 12, scope: !2542)
!2550 = !DILocalVariable(name: "c_and_shell_quote_compat", scope: !2542, file: !139, line: 406, type: !27)
!2551 = !DILocation(line: 406, column: 12, scope: !2542)
!2552 = !DILocation(line: 408, column: 11, scope: !2553)
!2553 = distinct !DILexicalBlock(scope: !2542, file: !139, line: 408, column: 11)
!2554 = !DILocation(line: 409, column: 11, scope: !2553)
!2555 = !DILocation(line: 409, column: 14, scope: !2553)
!2556 = !DILocation(line: 409, column: 28, scope: !2553)
!2557 = !DILocation(line: 410, column: 11, scope: !2553)
!2558 = !DILocation(line: 410, column: 14, scope: !2553)
!2559 = !DILocation(line: 411, column: 11, scope: !2553)
!2560 = !DILocation(line: 411, column: 15, scope: !2553)
!2561 = !DILocation(line: 411, column: 19, scope: !2553)
!2562 = !DILocation(line: 411, column: 17, scope: !2553)
!2563 = !DILocation(line: 412, column: 19, scope: !2553)
!2564 = !DILocation(line: 412, column: 27, scope: !2553)
!2565 = !DILocation(line: 412, column: 39, scope: !2553)
!2566 = !DILocation(line: 412, column: 46, scope: !2553)
!2567 = !DILocation(line: 412, column: 44, scope: !2553)
!2568 = !DILocation(line: 416, column: 40, scope: !2553)
!2569 = !DILocation(line: 416, column: 32, scope: !2553)
!2570 = !DILocation(line: 416, column: 30, scope: !2553)
!2571 = !DILocation(line: 416, column: 48, scope: !2553)
!2572 = !DILocation(line: 412, column: 15, scope: !2553)
!2573 = !DILocation(line: 417, column: 11, scope: !2553)
!2574 = !DILocation(line: 417, column: 22, scope: !2553)
!2575 = !DILocation(line: 417, column: 28, scope: !2553)
!2576 = !DILocation(line: 417, column: 26, scope: !2553)
!2577 = !DILocation(line: 417, column: 31, scope: !2553)
!2578 = !DILocation(line: 417, column: 45, scope: !2553)
!2579 = !DILocation(line: 417, column: 14, scope: !2553)
!2580 = !DILocation(line: 417, column: 63, scope: !2553)
!2581 = !DILocation(line: 408, column: 11, scope: !2542)
!2582 = !DILocation(line: 419, column: 15, scope: !2583)
!2583 = distinct !DILexicalBlock(scope: !2584, file: !139, line: 419, column: 15)
!2584 = distinct !DILexicalBlock(scope: !2553, file: !139, line: 418, column: 9)
!2585 = !DILocation(line: 419, column: 15, scope: !2584)
!2586 = !DILocation(line: 420, column: 13, scope: !2583)
!2587 = !DILocation(line: 421, column: 26, scope: !2584)
!2588 = !DILocation(line: 422, column: 9, scope: !2584)
!2589 = !DILocation(line: 424, column: 11, scope: !2542)
!2590 = !DILocation(line: 424, column: 15, scope: !2542)
!2591 = !DILocation(line: 424, column: 9, scope: !2542)
!2592 = !DILocation(line: 425, column: 15, scope: !2542)
!2593 = !DILocation(line: 425, column: 7, scope: !2542)
!2594 = !DILocation(line: 428, column: 15, scope: !2595)
!2595 = distinct !DILexicalBlock(scope: !2596, file: !139, line: 428, column: 15)
!2596 = distinct !DILexicalBlock(scope: !2542, file: !139, line: 426, column: 9)
!2597 = !DILocation(line: 428, column: 15, scope: !2596)
!2598 = !DILocation(line: 430, column: 15, scope: !2599)
!2599 = distinct !DILexicalBlock(scope: !2595, file: !139, line: 429, column: 13)
!2600 = !DILocation(line: 430, column: 15, scope: !2601)
!2601 = distinct !DILexicalBlock(scope: !2602, file: !139, line: 430, column: 15)
!2602 = distinct !DILexicalBlock(scope: !2599, file: !139, line: 430, column: 15)
!2603 = !DILocation(line: 430, column: 15, scope: !2602)
!2604 = !DILocation(line: 430, column: 15, scope: !2605)
!2605 = distinct !DILexicalBlock(scope: !2602, file: !139, line: 430, column: 15)
!2606 = !DILocation(line: 430, column: 15, scope: !2607)
!2607 = distinct !DILexicalBlock(scope: !2605, file: !139, line: 430, column: 15)
!2608 = !DILocation(line: 430, column: 15, scope: !2609)
!2609 = distinct !DILexicalBlock(scope: !2610, file: !139, line: 430, column: 15)
!2610 = distinct !DILexicalBlock(scope: !2607, file: !139, line: 430, column: 15)
!2611 = !DILocation(line: 430, column: 15, scope: !2610)
!2612 = !DILocation(line: 430, column: 15, scope: !2613)
!2613 = distinct !DILexicalBlock(scope: !2614, file: !139, line: 430, column: 15)
!2614 = distinct !DILexicalBlock(scope: !2607, file: !139, line: 430, column: 15)
!2615 = !DILocation(line: 430, column: 15, scope: !2614)
!2616 = !DILocation(line: 430, column: 15, scope: !2617)
!2617 = distinct !DILexicalBlock(scope: !2618, file: !139, line: 430, column: 15)
!2618 = distinct !DILexicalBlock(scope: !2607, file: !139, line: 430, column: 15)
!2619 = !DILocation(line: 430, column: 15, scope: !2618)
!2620 = !DILocation(line: 430, column: 15, scope: !2621)
!2621 = distinct !DILexicalBlock(scope: !2622, file: !139, line: 430, column: 15)
!2622 = distinct !DILexicalBlock(scope: !2602, file: !139, line: 430, column: 15)
!2623 = !DILocation(line: 430, column: 15, scope: !2622)
!2624 = !DILocation(line: 437, column: 19, scope: !2625)
!2625 = distinct !DILexicalBlock(scope: !2599, file: !139, line: 437, column: 19)
!2626 = !DILocation(line: 437, column: 33, scope: !2625)
!2627 = !DILocation(line: 438, column: 19, scope: !2625)
!2628 = !DILocation(line: 438, column: 22, scope: !2625)
!2629 = !DILocation(line: 438, column: 24, scope: !2625)
!2630 = !DILocation(line: 438, column: 30, scope: !2625)
!2631 = !DILocation(line: 438, column: 28, scope: !2625)
!2632 = !DILocation(line: 438, column: 38, scope: !2625)
!2633 = !DILocation(line: 438, column: 48, scope: !2625)
!2634 = !DILocation(line: 438, column: 52, scope: !2625)
!2635 = !DILocation(line: 438, column: 54, scope: !2625)
!2636 = !DILocation(line: 438, column: 45, scope: !2625)
!2637 = !DILocation(line: 438, column: 59, scope: !2625)
!2638 = !DILocation(line: 438, column: 62, scope: !2625)
!2639 = !DILocation(line: 438, column: 66, scope: !2625)
!2640 = !DILocation(line: 438, column: 68, scope: !2625)
!2641 = !DILocation(line: 438, column: 73, scope: !2625)
!2642 = !DILocation(line: 437, column: 19, scope: !2599)
!2643 = !DILocation(line: 440, column: 19, scope: !2644)
!2644 = distinct !DILexicalBlock(scope: !2625, file: !139, line: 439, column: 17)
!2645 = !DILocation(line: 440, column: 19, scope: !2646)
!2646 = distinct !DILexicalBlock(scope: !2647, file: !139, line: 440, column: 19)
!2647 = distinct !DILexicalBlock(scope: !2644, file: !139, line: 440, column: 19)
!2648 = !DILocation(line: 440, column: 19, scope: !2647)
!2649 = !DILocation(line: 441, column: 19, scope: !2644)
!2650 = !DILocation(line: 441, column: 19, scope: !2651)
!2651 = distinct !DILexicalBlock(scope: !2652, file: !139, line: 441, column: 19)
!2652 = distinct !DILexicalBlock(scope: !2644, file: !139, line: 441, column: 19)
!2653 = !DILocation(line: 441, column: 19, scope: !2652)
!2654 = !DILocation(line: 442, column: 17, scope: !2644)
!2655 = !DILocation(line: 443, column: 17, scope: !2599)
!2656 = !DILocation(line: 448, column: 13, scope: !2599)
!2657 = !DILocation(line: 449, column: 20, scope: !2658)
!2658 = distinct !DILexicalBlock(scope: !2595, file: !139, line: 449, column: 20)
!2659 = !DILocation(line: 449, column: 26, scope: !2658)
!2660 = !DILocation(line: 449, column: 20, scope: !2595)
!2661 = !DILocation(line: 450, column: 13, scope: !2658)
!2662 = !DILocation(line: 451, column: 11, scope: !2596)
!2663 = !DILocation(line: 454, column: 19, scope: !2596)
!2664 = !DILocation(line: 454, column: 11, scope: !2596)
!2665 = !DILocation(line: 457, column: 19, scope: !2666)
!2666 = distinct !DILexicalBlock(scope: !2667, file: !139, line: 457, column: 19)
!2667 = distinct !DILexicalBlock(scope: !2596, file: !139, line: 455, column: 13)
!2668 = !DILocation(line: 457, column: 19, scope: !2667)
!2669 = !DILocation(line: 458, column: 17, scope: !2666)
!2670 = !DILocation(line: 459, column: 15, scope: !2667)
!2671 = !DILocation(line: 462, column: 20, scope: !2672)
!2672 = distinct !DILexicalBlock(scope: !2667, file: !139, line: 462, column: 19)
!2673 = !DILocation(line: 462, column: 26, scope: !2672)
!2674 = !DILocation(line: 463, column: 19, scope: !2672)
!2675 = !DILocation(line: 463, column: 22, scope: !2672)
!2676 = !DILocation(line: 463, column: 24, scope: !2672)
!2677 = !DILocation(line: 463, column: 30, scope: !2672)
!2678 = !DILocation(line: 463, column: 28, scope: !2672)
!2679 = !DILocation(line: 463, column: 38, scope: !2672)
!2680 = !DILocation(line: 463, column: 41, scope: !2672)
!2681 = !DILocation(line: 463, column: 45, scope: !2672)
!2682 = !DILocation(line: 463, column: 47, scope: !2672)
!2683 = !DILocation(line: 463, column: 52, scope: !2672)
!2684 = !DILocation(line: 462, column: 19, scope: !2667)
!2685 = !DILocation(line: 464, column: 25, scope: !2672)
!2686 = !DILocation(line: 464, column: 29, scope: !2672)
!2687 = !DILocation(line: 464, column: 31, scope: !2672)
!2688 = !DILocation(line: 464, column: 17, scope: !2672)
!2689 = !DILocation(line: 471, column: 25, scope: !2690)
!2690 = distinct !DILexicalBlock(scope: !2691, file: !139, line: 471, column: 25)
!2691 = distinct !DILexicalBlock(scope: !2672, file: !139, line: 465, column: 19)
!2692 = !DILocation(line: 471, column: 25, scope: !2691)
!2693 = !DILocation(line: 472, column: 23, scope: !2690)
!2694 = !DILocation(line: 473, column: 25, scope: !2691)
!2695 = !DILocation(line: 473, column: 29, scope: !2691)
!2696 = !DILocation(line: 473, column: 31, scope: !2691)
!2697 = !DILocation(line: 473, column: 23, scope: !2691)
!2698 = !DILocation(line: 474, column: 23, scope: !2691)
!2699 = !DILocation(line: 475, column: 21, scope: !2691)
!2700 = !DILocation(line: 475, column: 21, scope: !2701)
!2701 = distinct !DILexicalBlock(scope: !2702, file: !139, line: 475, column: 21)
!2702 = distinct !DILexicalBlock(scope: !2691, file: !139, line: 475, column: 21)
!2703 = !DILocation(line: 475, column: 21, scope: !2702)
!2704 = !DILocation(line: 476, column: 21, scope: !2691)
!2705 = !DILocation(line: 476, column: 21, scope: !2706)
!2706 = distinct !DILexicalBlock(scope: !2707, file: !139, line: 476, column: 21)
!2707 = distinct !DILexicalBlock(scope: !2691, file: !139, line: 476, column: 21)
!2708 = !DILocation(line: 476, column: 21, scope: !2707)
!2709 = !DILocation(line: 477, column: 21, scope: !2691)
!2710 = !DILocation(line: 477, column: 21, scope: !2711)
!2711 = distinct !DILexicalBlock(scope: !2712, file: !139, line: 477, column: 21)
!2712 = distinct !DILexicalBlock(scope: !2691, file: !139, line: 477, column: 21)
!2713 = !DILocation(line: 477, column: 21, scope: !2712)
!2714 = !DILocation(line: 478, column: 21, scope: !2691)
!2715 = !DILocation(line: 478, column: 21, scope: !2716)
!2716 = distinct !DILexicalBlock(scope: !2717, file: !139, line: 478, column: 21)
!2717 = distinct !DILexicalBlock(scope: !2691, file: !139, line: 478, column: 21)
!2718 = !DILocation(line: 478, column: 21, scope: !2717)
!2719 = !DILocation(line: 479, column: 21, scope: !2691)
!2720 = !DILocation(line: 482, column: 21, scope: !2691)
!2721 = !DILocation(line: 483, column: 19, scope: !2691)
!2722 = !DILocation(line: 484, column: 15, scope: !2667)
!2723 = !DILocation(line: 487, column: 15, scope: !2667)
!2724 = !DILocation(line: 489, column: 11, scope: !2596)
!2725 = !DILocation(line: 491, column: 24, scope: !2596)
!2726 = !DILocation(line: 491, column: 31, scope: !2596)
!2727 = !DILocation(line: 492, column: 24, scope: !2596)
!2728 = !DILocation(line: 492, column: 31, scope: !2596)
!2729 = !DILocation(line: 493, column: 24, scope: !2596)
!2730 = !DILocation(line: 493, column: 31, scope: !2596)
!2731 = !DILocation(line: 494, column: 24, scope: !2596)
!2732 = !DILocation(line: 494, column: 31, scope: !2596)
!2733 = !DILocation(line: 495, column: 24, scope: !2596)
!2734 = !DILocation(line: 495, column: 31, scope: !2596)
!2735 = !DILocation(line: 496, column: 24, scope: !2596)
!2736 = !DILocation(line: 496, column: 31, scope: !2596)
!2737 = !DILocation(line: 497, column: 24, scope: !2596)
!2738 = !DILocation(line: 497, column: 31, scope: !2596)
!2739 = !DILocation(line: 498, column: 26, scope: !2596)
!2740 = !DILocation(line: 498, column: 24, scope: !2596)
!2741 = !DILocation(line: 500, column: 15, scope: !2742)
!2742 = distinct !DILexicalBlock(scope: !2596, file: !139, line: 500, column: 15)
!2743 = !DILocation(line: 500, column: 29, scope: !2742)
!2744 = !DILocation(line: 500, column: 15, scope: !2596)
!2745 = !DILocation(line: 502, column: 19, scope: !2746)
!2746 = distinct !DILexicalBlock(scope: !2747, file: !139, line: 502, column: 19)
!2747 = distinct !DILexicalBlock(scope: !2742, file: !139, line: 501, column: 13)
!2748 = !DILocation(line: 502, column: 19, scope: !2747)
!2749 = !DILocation(line: 503, column: 17, scope: !2746)
!2750 = !DILocation(line: 504, column: 15, scope: !2747)
!2751 = !DILocation(line: 509, column: 15, scope: !2752)
!2752 = distinct !DILexicalBlock(scope: !2596, file: !139, line: 509, column: 15)
!2753 = !DILocation(line: 509, column: 33, scope: !2752)
!2754 = !DILocation(line: 509, column: 36, scope: !2752)
!2755 = !DILocation(line: 509, column: 55, scope: !2752)
!2756 = !DILocation(line: 509, column: 58, scope: !2752)
!2757 = !DILocation(line: 509, column: 15, scope: !2596)
!2758 = !DILocation(line: 510, column: 13, scope: !2752)
!2759 = !DILabel(scope: !2596, name: "c_and_shell_escape", file: !139, line: 512)
!2760 = !DILocation(line: 512, column: 9, scope: !2596)
!2761 = !DILocation(line: 513, column: 15, scope: !2762)
!2762 = distinct !DILexicalBlock(scope: !2596, file: !139, line: 513, column: 15)
!2763 = !DILocation(line: 513, column: 29, scope: !2762)
!2764 = !DILocation(line: 514, column: 15, scope: !2762)
!2765 = !DILocation(line: 514, column: 18, scope: !2762)
!2766 = !DILocation(line: 513, column: 15, scope: !2596)
!2767 = !DILocation(line: 515, column: 13, scope: !2762)
!2768 = !DILabel(scope: !2596, name: "c_escape", file: !139, line: 517)
!2769 = !DILocation(line: 517, column: 9, scope: !2596)
!2770 = !DILocation(line: 518, column: 15, scope: !2771)
!2771 = distinct !DILexicalBlock(scope: !2596, file: !139, line: 518, column: 15)
!2772 = !DILocation(line: 518, column: 15, scope: !2596)
!2773 = !DILocation(line: 520, column: 19, scope: !2774)
!2774 = distinct !DILexicalBlock(scope: !2771, file: !139, line: 519, column: 13)
!2775 = !DILocation(line: 520, column: 17, scope: !2774)
!2776 = !DILocation(line: 521, column: 15, scope: !2774)
!2777 = !DILocation(line: 523, column: 11, scope: !2596)
!2778 = !DILocation(line: 526, column: 18, scope: !2779)
!2779 = distinct !DILexicalBlock(scope: !2596, file: !139, line: 526, column: 15)
!2780 = !DILocation(line: 526, column: 26, scope: !2779)
!2781 = !DILocation(line: 526, column: 15, scope: !2596)
!2782 = !DILocation(line: 526, column: 40, scope: !2779)
!2783 = !DILocation(line: 526, column: 47, scope: !2779)
!2784 = !DILocation(line: 526, column: 57, scope: !2779)
!2785 = !DILocation(line: 526, column: 65, scope: !2779)
!2786 = !DILocation(line: 527, column: 13, scope: !2779)
!2787 = !DILocation(line: 528, column: 11, scope: !2596)
!2788 = !DILocation(line: 530, column: 15, scope: !2789)
!2789 = distinct !DILexicalBlock(scope: !2596, file: !139, line: 530, column: 15)
!2790 = !DILocation(line: 530, column: 17, scope: !2789)
!2791 = !DILocation(line: 530, column: 15, scope: !2596)
!2792 = !DILocation(line: 531, column: 13, scope: !2789)
!2793 = !DILocation(line: 532, column: 11, scope: !2596)
!2794 = !DILocation(line: 534, column: 36, scope: !2596)
!2795 = !DILocation(line: 535, column: 11, scope: !2596)
!2796 = !DILocation(line: 548, column: 15, scope: !2797)
!2797 = distinct !DILexicalBlock(scope: !2596, file: !139, line: 548, column: 15)
!2798 = !DILocation(line: 548, column: 29, scope: !2797)
!2799 = !DILocation(line: 549, column: 15, scope: !2797)
!2800 = !DILocation(line: 549, column: 18, scope: !2797)
!2801 = !DILocation(line: 548, column: 15, scope: !2596)
!2802 = !DILocation(line: 550, column: 13, scope: !2797)
!2803 = !DILocation(line: 551, column: 11, scope: !2596)
!2804 = !DILocation(line: 554, column: 36, scope: !2596)
!2805 = !DILocation(line: 555, column: 36, scope: !2596)
!2806 = !DILocation(line: 556, column: 15, scope: !2807)
!2807 = distinct !DILexicalBlock(scope: !2596, file: !139, line: 556, column: 15)
!2808 = !DILocation(line: 556, column: 29, scope: !2807)
!2809 = !DILocation(line: 556, column: 15, scope: !2596)
!2810 = !DILocation(line: 558, column: 19, scope: !2811)
!2811 = distinct !DILexicalBlock(scope: !2812, file: !139, line: 558, column: 19)
!2812 = distinct !DILexicalBlock(scope: !2807, file: !139, line: 557, column: 13)
!2813 = !DILocation(line: 558, column: 19, scope: !2812)
!2814 = !DILocation(line: 559, column: 17, scope: !2811)
!2815 = !DILocation(line: 561, column: 19, scope: !2816)
!2816 = distinct !DILexicalBlock(scope: !2812, file: !139, line: 561, column: 19)
!2817 = !DILocation(line: 561, column: 30, scope: !2816)
!2818 = !DILocation(line: 561, column: 35, scope: !2816)
!2819 = !DILocation(line: 561, column: 19, scope: !2812)
!2820 = !DILocation(line: 566, column: 37, scope: !2821)
!2821 = distinct !DILexicalBlock(scope: !2816, file: !139, line: 562, column: 17)
!2822 = !DILocation(line: 566, column: 35, scope: !2821)
!2823 = !DILocation(line: 567, column: 30, scope: !2821)
!2824 = !DILocation(line: 568, column: 17, scope: !2821)
!2825 = !DILocation(line: 570, column: 15, scope: !2812)
!2826 = !DILocation(line: 570, column: 15, scope: !2827)
!2827 = distinct !DILexicalBlock(scope: !2828, file: !139, line: 570, column: 15)
!2828 = distinct !DILexicalBlock(scope: !2812, file: !139, line: 570, column: 15)
!2829 = !DILocation(line: 570, column: 15, scope: !2828)
!2830 = !DILocation(line: 571, column: 15, scope: !2812)
!2831 = !DILocation(line: 571, column: 15, scope: !2832)
!2832 = distinct !DILexicalBlock(scope: !2833, file: !139, line: 571, column: 15)
!2833 = distinct !DILexicalBlock(scope: !2812, file: !139, line: 571, column: 15)
!2834 = !DILocation(line: 571, column: 15, scope: !2833)
!2835 = !DILocation(line: 572, column: 15, scope: !2812)
!2836 = !DILocation(line: 572, column: 15, scope: !2837)
!2837 = distinct !DILexicalBlock(scope: !2838, file: !139, line: 572, column: 15)
!2838 = distinct !DILexicalBlock(scope: !2812, file: !139, line: 572, column: 15)
!2839 = !DILocation(line: 572, column: 15, scope: !2838)
!2840 = !DILocation(line: 573, column: 40, scope: !2812)
!2841 = !DILocation(line: 574, column: 13, scope: !2812)
!2842 = !DILocation(line: 575, column: 11, scope: !2596)
!2843 = !DILocation(line: 599, column: 36, scope: !2596)
!2844 = !DILocation(line: 600, column: 11, scope: !2596)
!2845 = !DILocalVariable(name: "m", scope: !2846, file: !139, line: 610, type: !134)
!2846 = distinct !DILexicalBlock(scope: !2596, file: !139, line: 608, column: 11)
!2847 = !DILocation(line: 610, column: 20, scope: !2846)
!2848 = !DILocalVariable(name: "printable", scope: !2846, file: !139, line: 612, type: !27)
!2849 = !DILocation(line: 612, column: 18, scope: !2846)
!2850 = !DILocation(line: 614, column: 17, scope: !2851)
!2851 = distinct !DILexicalBlock(scope: !2846, file: !139, line: 614, column: 17)
!2852 = !DILocation(line: 614, column: 17, scope: !2846)
!2853 = !DILocation(line: 616, column: 19, scope: !2854)
!2854 = distinct !DILexicalBlock(scope: !2851, file: !139, line: 615, column: 15)
!2855 = !DILocation(line: 617, column: 29, scope: !2854)
!2856 = !DILocation(line: 617, column: 41, scope: !2854)
!2857 = !DILocation(line: 617, column: 27, scope: !2854)
!2858 = !DILocation(line: 618, column: 15, scope: !2854)
!2859 = !DILocalVariable(name: "mbstate", scope: !2860, file: !139, line: 621, type: !2861)
!2860 = distinct !DILexicalBlock(scope: !2851, file: !139, line: 620, column: 15)
!2861 = !DIDerivedType(tag: DW_TAG_typedef, name: "mbstate_t", file: !2862, line: 6, baseType: !2863)
!2862 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/mbstate_t.h", directory: "")
!2863 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mbstate_t", file: !2864, line: 21, baseType: !2865)
!2864 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h", directory: "")
!2865 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2864, line: 13, size: 64, elements: !2866)
!2866 = !{!2867, !2868}
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !2865, file: !2864, line: 15, baseType: !72, size: 32)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !2865, file: !2864, line: 20, baseType: !2869, size: 32, offset: 32)
!2869 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2865, file: !2864, line: 16, size: 32, elements: !2870)
!2870 = !{!2871, !2872}
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !2869, file: !2864, line: 18, baseType: !16, size: 32)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !2869, file: !2864, line: 19, baseType: !2873, size: 32)
!2873 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 32, elements: !2874)
!2874 = !{!2875}
!2875 = !DISubrange(count: 4)
!2876 = !DILocation(line: 621, column: 27, scope: !2860)
!2877 = !DILocation(line: 622, column: 17, scope: !2860)
!2878 = !DILocation(line: 624, column: 19, scope: !2860)
!2879 = !DILocation(line: 625, column: 27, scope: !2860)
!2880 = !DILocation(line: 626, column: 21, scope: !2881)
!2881 = distinct !DILexicalBlock(scope: !2860, file: !139, line: 626, column: 21)
!2882 = !DILocation(line: 626, column: 29, scope: !2881)
!2883 = !DILocation(line: 626, column: 21, scope: !2860)
!2884 = !DILocation(line: 627, column: 37, scope: !2881)
!2885 = !DILocation(line: 627, column: 29, scope: !2881)
!2886 = !DILocation(line: 627, column: 27, scope: !2881)
!2887 = !DILocation(line: 627, column: 19, scope: !2881)
!2888 = !DILocation(line: 629, column: 17, scope: !2860)
!2889 = !DILocalVariable(name: "w", scope: !2890, file: !139, line: 631, type: !2891)
!2890 = distinct !DILexicalBlock(scope: !2860, file: !139, line: 630, column: 19)
!2891 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !135, line: 74, baseType: !72)
!2892 = !DILocation(line: 631, column: 29, scope: !2890)
!2893 = !DILocalVariable(name: "bytes", scope: !2890, file: !139, line: 632, type: !134)
!2894 = !DILocation(line: 632, column: 28, scope: !2890)
!2895 = !DILocation(line: 632, column: 50, scope: !2890)
!2896 = !DILocation(line: 632, column: 54, scope: !2890)
!2897 = !DILocation(line: 632, column: 58, scope: !2890)
!2898 = !DILocation(line: 632, column: 56, scope: !2890)
!2899 = !DILocation(line: 633, column: 45, scope: !2890)
!2900 = !DILocation(line: 633, column: 56, scope: !2890)
!2901 = !DILocation(line: 633, column: 60, scope: !2890)
!2902 = !DILocation(line: 633, column: 58, scope: !2890)
!2903 = !DILocation(line: 633, column: 53, scope: !2890)
!2904 = !DILocation(line: 632, column: 36, scope: !2890)
!2905 = !DILocation(line: 634, column: 25, scope: !2906)
!2906 = distinct !DILexicalBlock(scope: !2890, file: !139, line: 634, column: 25)
!2907 = !DILocation(line: 634, column: 31, scope: !2906)
!2908 = !DILocation(line: 634, column: 25, scope: !2890)
!2909 = !DILocation(line: 635, column: 23, scope: !2906)
!2910 = !DILocation(line: 636, column: 30, scope: !2911)
!2911 = distinct !DILexicalBlock(scope: !2906, file: !139, line: 636, column: 30)
!2912 = !DILocation(line: 636, column: 36, scope: !2911)
!2913 = !DILocation(line: 636, column: 30, scope: !2906)
!2914 = !DILocation(line: 638, column: 35, scope: !2915)
!2915 = distinct !DILexicalBlock(scope: !2911, file: !139, line: 637, column: 23)
!2916 = !DILocation(line: 639, column: 25, scope: !2915)
!2917 = !DILocation(line: 641, column: 30, scope: !2918)
!2918 = distinct !DILexicalBlock(scope: !2911, file: !139, line: 641, column: 30)
!2919 = !DILocation(line: 641, column: 36, scope: !2918)
!2920 = !DILocation(line: 641, column: 30, scope: !2911)
!2921 = !DILocation(line: 643, column: 35, scope: !2922)
!2922 = distinct !DILexicalBlock(scope: !2918, file: !139, line: 642, column: 23)
!2923 = !DILocation(line: 644, column: 25, scope: !2922)
!2924 = !DILocation(line: 644, column: 32, scope: !2922)
!2925 = !DILocation(line: 644, column: 36, scope: !2922)
!2926 = !DILocation(line: 644, column: 34, scope: !2922)
!2927 = !DILocation(line: 644, column: 40, scope: !2922)
!2928 = !DILocation(line: 644, column: 38, scope: !2922)
!2929 = !DILocation(line: 644, column: 48, scope: !2922)
!2930 = !DILocation(line: 644, column: 51, scope: !2922)
!2931 = !DILocation(line: 644, column: 55, scope: !2922)
!2932 = !DILocation(line: 644, column: 59, scope: !2922)
!2933 = !DILocation(line: 644, column: 57, scope: !2922)
!2934 = !DILocation(line: 0, scope: !2922)
!2935 = !DILocation(line: 645, column: 28, scope: !2922)
!2936 = distinct !{!2936, !2923, !2935}
!2937 = !DILocation(line: 646, column: 25, scope: !2922)
!2938 = !DILocation(line: 654, column: 44, scope: !2939)
!2939 = distinct !DILexicalBlock(scope: !2940, file: !139, line: 654, column: 29)
!2940 = distinct !DILexicalBlock(scope: !2918, file: !139, line: 649, column: 23)
!2941 = !DILocation(line: 655, column: 29, scope: !2939)
!2942 = !DILocation(line: 655, column: 32, scope: !2939)
!2943 = !DILocation(line: 655, column: 46, scope: !2939)
!2944 = !DILocation(line: 654, column: 29, scope: !2940)
!2945 = !DILocalVariable(name: "j", scope: !2946, file: !139, line: 657, type: !134)
!2946 = distinct !DILexicalBlock(scope: !2939, file: !139, line: 656, column: 27)
!2947 = !DILocation(line: 657, column: 36, scope: !2946)
!2948 = !DILocation(line: 658, column: 36, scope: !2949)
!2949 = distinct !DILexicalBlock(scope: !2946, file: !139, line: 658, column: 29)
!2950 = !DILocation(line: 658, column: 34, scope: !2949)
!2951 = !DILocation(line: 658, column: 41, scope: !2952)
!2952 = distinct !DILexicalBlock(scope: !2949, file: !139, line: 658, column: 29)
!2953 = !DILocation(line: 658, column: 45, scope: !2952)
!2954 = !DILocation(line: 658, column: 43, scope: !2952)
!2955 = !DILocation(line: 658, column: 29, scope: !2949)
!2956 = !DILocation(line: 659, column: 39, scope: !2952)
!2957 = !DILocation(line: 659, column: 43, scope: !2952)
!2958 = !DILocation(line: 659, column: 47, scope: !2952)
!2959 = !DILocation(line: 659, column: 45, scope: !2952)
!2960 = !DILocation(line: 659, column: 51, scope: !2952)
!2961 = !DILocation(line: 659, column: 49, scope: !2952)
!2962 = !DILocation(line: 659, column: 31, scope: !2952)
!2963 = !DILocation(line: 663, column: 35, scope: !2964)
!2964 = distinct !DILexicalBlock(scope: !2952, file: !139, line: 660, column: 33)
!2965 = !DILocation(line: 666, column: 35, scope: !2964)
!2966 = !DILocation(line: 667, column: 33, scope: !2964)
!2967 = !DILocation(line: 658, column: 53, scope: !2952)
!2968 = !DILocation(line: 658, column: 29, scope: !2952)
!2969 = distinct !{!2969, !2955, !2970}
!2970 = !DILocation(line: 667, column: 33, scope: !2949)
!2971 = !DILocation(line: 668, column: 27, scope: !2946)
!2972 = !DILocation(line: 670, column: 41, scope: !2973)
!2973 = distinct !DILexicalBlock(scope: !2940, file: !139, line: 670, column: 29)
!2974 = !DILocation(line: 670, column: 31, scope: !2973)
!2975 = !DILocation(line: 670, column: 29, scope: !2940)
!2976 = !DILocation(line: 671, column: 37, scope: !2973)
!2977 = !DILocation(line: 671, column: 27, scope: !2973)
!2978 = !DILocation(line: 672, column: 30, scope: !2940)
!2979 = !DILocation(line: 672, column: 27, scope: !2940)
!2980 = !DILocation(line: 674, column: 19, scope: !2890)
!2981 = !DILocation(line: 675, column: 26, scope: !2860)
!2982 = !DILocation(line: 675, column: 24, scope: !2860)
!2983 = distinct !{!2983, !2888, !2984}
!2984 = !DILocation(line: 675, column: 44, scope: !2860)
!2985 = !DILocation(line: 678, column: 40, scope: !2846)
!2986 = !DILocation(line: 678, column: 38, scope: !2846)
!2987 = !DILocation(line: 680, column: 21, scope: !2988)
!2988 = distinct !DILexicalBlock(scope: !2846, file: !139, line: 680, column: 17)
!2989 = !DILocation(line: 680, column: 19, scope: !2988)
!2990 = !DILocation(line: 680, column: 23, scope: !2988)
!2991 = !DILocation(line: 680, column: 27, scope: !2988)
!2992 = !DILocation(line: 680, column: 45, scope: !2988)
!2993 = !DILocation(line: 680, column: 50, scope: !2988)
!2994 = !DILocation(line: 680, column: 17, scope: !2846)
!2995 = !DILocalVariable(name: "ilim", scope: !2996, file: !139, line: 684, type: !134)
!2996 = distinct !DILexicalBlock(scope: !2988, file: !139, line: 681, column: 15)
!2997 = !DILocation(line: 684, column: 24, scope: !2996)
!2998 = !DILocation(line: 684, column: 31, scope: !2996)
!2999 = !DILocation(line: 684, column: 35, scope: !2996)
!3000 = !DILocation(line: 684, column: 33, scope: !2996)
!3001 = !DILocation(line: 686, column: 17, scope: !2996)
!3002 = !DILocation(line: 688, column: 25, scope: !3003)
!3003 = distinct !DILexicalBlock(scope: !3004, file: !139, line: 688, column: 25)
!3004 = distinct !DILexicalBlock(scope: !3005, file: !139, line: 687, column: 19)
!3005 = distinct !DILexicalBlock(scope: !3006, file: !139, line: 686, column: 17)
!3006 = distinct !DILexicalBlock(scope: !2996, file: !139, line: 686, column: 17)
!3007 = !DILocation(line: 688, column: 43, scope: !3003)
!3008 = !DILocation(line: 688, column: 48, scope: !3003)
!3009 = !DILocation(line: 688, column: 25, scope: !3004)
!3010 = !DILocation(line: 690, column: 25, scope: !3011)
!3011 = distinct !DILexicalBlock(scope: !3003, file: !139, line: 689, column: 23)
!3012 = !DILocation(line: 690, column: 25, scope: !3013)
!3013 = distinct !DILexicalBlock(scope: !3014, file: !139, line: 690, column: 25)
!3014 = distinct !DILexicalBlock(scope: !3011, file: !139, line: 690, column: 25)
!3015 = !DILocation(line: 690, column: 25, scope: !3014)
!3016 = !DILocation(line: 690, column: 25, scope: !3017)
!3017 = distinct !DILexicalBlock(scope: !3014, file: !139, line: 690, column: 25)
!3018 = !DILocation(line: 690, column: 25, scope: !3019)
!3019 = distinct !DILexicalBlock(scope: !3017, file: !139, line: 690, column: 25)
!3020 = !DILocation(line: 690, column: 25, scope: !3021)
!3021 = distinct !DILexicalBlock(scope: !3022, file: !139, line: 690, column: 25)
!3022 = distinct !DILexicalBlock(scope: !3019, file: !139, line: 690, column: 25)
!3023 = !DILocation(line: 690, column: 25, scope: !3022)
!3024 = !DILocation(line: 690, column: 25, scope: !3025)
!3025 = distinct !DILexicalBlock(scope: !3026, file: !139, line: 690, column: 25)
!3026 = distinct !DILexicalBlock(scope: !3019, file: !139, line: 690, column: 25)
!3027 = !DILocation(line: 690, column: 25, scope: !3026)
!3028 = !DILocation(line: 690, column: 25, scope: !3029)
!3029 = distinct !DILexicalBlock(scope: !3030, file: !139, line: 690, column: 25)
!3030 = distinct !DILexicalBlock(scope: !3019, file: !139, line: 690, column: 25)
!3031 = !DILocation(line: 690, column: 25, scope: !3030)
!3032 = !DILocation(line: 690, column: 25, scope: !3033)
!3033 = distinct !DILexicalBlock(scope: !3034, file: !139, line: 690, column: 25)
!3034 = distinct !DILexicalBlock(scope: !3014, file: !139, line: 690, column: 25)
!3035 = !DILocation(line: 690, column: 25, scope: !3034)
!3036 = !DILocation(line: 691, column: 25, scope: !3011)
!3037 = !DILocation(line: 691, column: 25, scope: !3038)
!3038 = distinct !DILexicalBlock(scope: !3039, file: !139, line: 691, column: 25)
!3039 = distinct !DILexicalBlock(scope: !3011, file: !139, line: 691, column: 25)
!3040 = !DILocation(line: 691, column: 25, scope: !3039)
!3041 = !DILocation(line: 692, column: 25, scope: !3011)
!3042 = !DILocation(line: 692, column: 25, scope: !3043)
!3043 = distinct !DILexicalBlock(scope: !3044, file: !139, line: 692, column: 25)
!3044 = distinct !DILexicalBlock(scope: !3011, file: !139, line: 692, column: 25)
!3045 = !DILocation(line: 692, column: 25, scope: !3044)
!3046 = !DILocation(line: 693, column: 36, scope: !3011)
!3047 = !DILocation(line: 693, column: 38, scope: !3011)
!3048 = !DILocation(line: 693, column: 33, scope: !3011)
!3049 = !DILocation(line: 693, column: 29, scope: !3011)
!3050 = !DILocation(line: 693, column: 27, scope: !3011)
!3051 = !DILocation(line: 694, column: 23, scope: !3011)
!3052 = !DILocation(line: 695, column: 30, scope: !3053)
!3053 = distinct !DILexicalBlock(scope: !3003, file: !139, line: 695, column: 30)
!3054 = !DILocation(line: 695, column: 30, scope: !3003)
!3055 = !DILocation(line: 697, column: 25, scope: !3056)
!3056 = distinct !DILexicalBlock(scope: !3053, file: !139, line: 696, column: 23)
!3057 = !DILocation(line: 697, column: 25, scope: !3058)
!3058 = distinct !DILexicalBlock(scope: !3059, file: !139, line: 697, column: 25)
!3059 = distinct !DILexicalBlock(scope: !3056, file: !139, line: 697, column: 25)
!3060 = !DILocation(line: 697, column: 25, scope: !3059)
!3061 = !DILocation(line: 698, column: 40, scope: !3056)
!3062 = !DILocation(line: 699, column: 23, scope: !3056)
!3063 = !DILocation(line: 700, column: 25, scope: !3064)
!3064 = distinct !DILexicalBlock(scope: !3004, file: !139, line: 700, column: 25)
!3065 = !DILocation(line: 700, column: 33, scope: !3064)
!3066 = !DILocation(line: 700, column: 35, scope: !3064)
!3067 = !DILocation(line: 700, column: 30, scope: !3064)
!3068 = !DILocation(line: 700, column: 25, scope: !3004)
!3069 = !DILocation(line: 701, column: 23, scope: !3064)
!3070 = !DILocation(line: 702, column: 21, scope: !3004)
!3071 = !DILocation(line: 702, column: 21, scope: !3072)
!3072 = distinct !DILexicalBlock(scope: !3073, file: !139, line: 702, column: 21)
!3073 = distinct !DILexicalBlock(scope: !3004, file: !139, line: 702, column: 21)
!3074 = !DILocation(line: 702, column: 21, scope: !3073)
!3075 = !DILocation(line: 702, column: 21, scope: !3076)
!3076 = distinct !DILexicalBlock(scope: !3072, file: !139, line: 702, column: 21)
!3077 = !DILocation(line: 702, column: 21, scope: !3078)
!3078 = distinct !DILexicalBlock(scope: !3079, file: !139, line: 702, column: 21)
!3079 = distinct !DILexicalBlock(scope: !3076, file: !139, line: 702, column: 21)
!3080 = !DILocation(line: 702, column: 21, scope: !3079)
!3081 = !DILocation(line: 702, column: 21, scope: !3082)
!3082 = distinct !DILexicalBlock(scope: !3083, file: !139, line: 702, column: 21)
!3083 = distinct !DILexicalBlock(scope: !3076, file: !139, line: 702, column: 21)
!3084 = !DILocation(line: 702, column: 21, scope: !3083)
!3085 = !DILocation(line: 703, column: 21, scope: !3004)
!3086 = !DILocation(line: 703, column: 21, scope: !3087)
!3087 = distinct !DILexicalBlock(scope: !3088, file: !139, line: 703, column: 21)
!3088 = distinct !DILexicalBlock(scope: !3004, file: !139, line: 703, column: 21)
!3089 = !DILocation(line: 703, column: 21, scope: !3088)
!3090 = !DILocation(line: 704, column: 25, scope: !3004)
!3091 = !DILocation(line: 704, column: 29, scope: !3004)
!3092 = !DILocation(line: 704, column: 23, scope: !3004)
!3093 = !DILocation(line: 686, column: 17, scope: !3005)
!3094 = distinct !{!3094, !3095, !3096}
!3095 = !DILocation(line: 686, column: 17, scope: !3006)
!3096 = !DILocation(line: 705, column: 19, scope: !3006)
!3097 = !DILocation(line: 707, column: 17, scope: !2996)
!3098 = !DILocation(line: 710, column: 9, scope: !2596)
!3099 = !DILocation(line: 712, column: 16, scope: !3100)
!3100 = distinct !DILexicalBlock(scope: !2542, file: !139, line: 712, column: 11)
!3101 = !DILocation(line: 712, column: 34, scope: !3100)
!3102 = !DILocation(line: 712, column: 37, scope: !3100)
!3103 = !DILocation(line: 712, column: 51, scope: !3100)
!3104 = !DILocation(line: 713, column: 15, scope: !3100)
!3105 = !DILocation(line: 713, column: 18, scope: !3100)
!3106 = !DILocation(line: 714, column: 14, scope: !3100)
!3107 = !DILocation(line: 714, column: 17, scope: !3100)
!3108 = !DILocation(line: 715, column: 14, scope: !3100)
!3109 = !DILocation(line: 715, column: 17, scope: !3100)
!3110 = !DILocation(line: 715, column: 33, scope: !3100)
!3111 = !DILocation(line: 715, column: 35, scope: !3100)
!3112 = !DILocation(line: 715, column: 51, scope: !3100)
!3113 = !DILocation(line: 715, column: 53, scope: !3100)
!3114 = !DILocation(line: 715, column: 47, scope: !3100)
!3115 = !DILocation(line: 715, column: 65, scope: !3100)
!3116 = !DILocation(line: 716, column: 11, scope: !3100)
!3117 = !DILocation(line: 716, column: 15, scope: !3100)
!3118 = !DILocation(line: 712, column: 11, scope: !2542)
!3119 = !DILocation(line: 717, column: 9, scope: !3100)
!3120 = !DILabel(scope: !2542, name: "store_escape", file: !139, line: 719)
!3121 = !DILocation(line: 719, column: 5, scope: !2542)
!3122 = !DILocation(line: 720, column: 7, scope: !2542)
!3123 = !DILocation(line: 720, column: 7, scope: !3124)
!3124 = distinct !DILexicalBlock(scope: !3125, file: !139, line: 720, column: 7)
!3125 = distinct !DILexicalBlock(scope: !2542, file: !139, line: 720, column: 7)
!3126 = !DILocation(line: 720, column: 7, scope: !3125)
!3127 = !DILocation(line: 720, column: 7, scope: !3128)
!3128 = distinct !DILexicalBlock(scope: !3125, file: !139, line: 720, column: 7)
!3129 = !DILocation(line: 720, column: 7, scope: !3130)
!3130 = distinct !DILexicalBlock(scope: !3128, file: !139, line: 720, column: 7)
!3131 = !DILocation(line: 720, column: 7, scope: !3132)
!3132 = distinct !DILexicalBlock(scope: !3133, file: !139, line: 720, column: 7)
!3133 = distinct !DILexicalBlock(scope: !3130, file: !139, line: 720, column: 7)
!3134 = !DILocation(line: 720, column: 7, scope: !3133)
!3135 = !DILocation(line: 720, column: 7, scope: !3136)
!3136 = distinct !DILexicalBlock(scope: !3137, file: !139, line: 720, column: 7)
!3137 = distinct !DILexicalBlock(scope: !3130, file: !139, line: 720, column: 7)
!3138 = !DILocation(line: 720, column: 7, scope: !3137)
!3139 = !DILocation(line: 720, column: 7, scope: !3140)
!3140 = distinct !DILexicalBlock(scope: !3141, file: !139, line: 720, column: 7)
!3141 = distinct !DILexicalBlock(scope: !3130, file: !139, line: 720, column: 7)
!3142 = !DILocation(line: 720, column: 7, scope: !3141)
!3143 = !DILocation(line: 720, column: 7, scope: !3144)
!3144 = distinct !DILexicalBlock(scope: !3145, file: !139, line: 720, column: 7)
!3145 = distinct !DILexicalBlock(scope: !3125, file: !139, line: 720, column: 7)
!3146 = !DILocation(line: 720, column: 7, scope: !3145)
!3147 = !DILabel(scope: !2542, name: "store_c", file: !139, line: 722)
!3148 = !DILocation(line: 722, column: 5, scope: !2542)
!3149 = !DILocation(line: 723, column: 7, scope: !2542)
!3150 = !DILocation(line: 723, column: 7, scope: !3151)
!3151 = distinct !DILexicalBlock(scope: !3152, file: !139, line: 723, column: 7)
!3152 = distinct !DILexicalBlock(scope: !2542, file: !139, line: 723, column: 7)
!3153 = !DILocation(line: 723, column: 7, scope: !3152)
!3154 = !DILocation(line: 723, column: 7, scope: !3155)
!3155 = distinct !DILexicalBlock(scope: !3151, file: !139, line: 723, column: 7)
!3156 = !DILocation(line: 723, column: 7, scope: !3157)
!3157 = distinct !DILexicalBlock(scope: !3158, file: !139, line: 723, column: 7)
!3158 = distinct !DILexicalBlock(scope: !3155, file: !139, line: 723, column: 7)
!3159 = !DILocation(line: 723, column: 7, scope: !3158)
!3160 = !DILocation(line: 723, column: 7, scope: !3161)
!3161 = distinct !DILexicalBlock(scope: !3162, file: !139, line: 723, column: 7)
!3162 = distinct !DILexicalBlock(scope: !3155, file: !139, line: 723, column: 7)
!3163 = !DILocation(line: 723, column: 7, scope: !3162)
!3164 = !DILocation(line: 724, column: 7, scope: !2542)
!3165 = !DILocation(line: 724, column: 7, scope: !3166)
!3166 = distinct !DILexicalBlock(scope: !3167, file: !139, line: 724, column: 7)
!3167 = distinct !DILexicalBlock(scope: !2542, file: !139, line: 724, column: 7)
!3168 = !DILocation(line: 724, column: 7, scope: !3167)
!3169 = !DILocation(line: 726, column: 13, scope: !3170)
!3170 = distinct !DILexicalBlock(scope: !2542, file: !139, line: 726, column: 11)
!3171 = !DILocation(line: 726, column: 11, scope: !2542)
!3172 = !DILocation(line: 727, column: 38, scope: !3170)
!3173 = !DILocation(line: 727, column: 9, scope: !3170)
!3174 = !DILocation(line: 728, column: 5, scope: !2542)
!3175 = !DILocation(line: 400, column: 75, scope: !2531)
!3176 = !DILocation(line: 400, column: 3, scope: !2531)
!3177 = distinct !{!3177, !2540, !3178}
!3178 = !DILocation(line: 728, column: 5, scope: !2528)
!3179 = !DILocation(line: 730, column: 7, scope: !3180)
!3180 = distinct !DILexicalBlock(scope: !2388, file: !139, line: 730, column: 7)
!3181 = !DILocation(line: 730, column: 11, scope: !3180)
!3182 = !DILocation(line: 730, column: 16, scope: !3180)
!3183 = !DILocation(line: 730, column: 19, scope: !3180)
!3184 = !DILocation(line: 730, column: 33, scope: !3180)
!3185 = !DILocation(line: 731, column: 7, scope: !3180)
!3186 = !DILocation(line: 731, column: 10, scope: !3180)
!3187 = !DILocation(line: 730, column: 7, scope: !2388)
!3188 = !DILocation(line: 732, column: 5, scope: !3180)
!3189 = !DILocation(line: 738, column: 7, scope: !3190)
!3190 = distinct !DILexicalBlock(scope: !2388, file: !139, line: 738, column: 7)
!3191 = !DILocation(line: 738, column: 21, scope: !3190)
!3192 = !DILocation(line: 738, column: 51, scope: !3190)
!3193 = !DILocation(line: 738, column: 56, scope: !3190)
!3194 = !DILocation(line: 739, column: 7, scope: !3190)
!3195 = !DILocation(line: 739, column: 10, scope: !3190)
!3196 = !DILocation(line: 738, column: 7, scope: !2388)
!3197 = !DILocation(line: 741, column: 11, scope: !3198)
!3198 = distinct !DILexicalBlock(scope: !3199, file: !139, line: 741, column: 11)
!3199 = distinct !DILexicalBlock(scope: !3190, file: !139, line: 740, column: 5)
!3200 = !DILocation(line: 741, column: 11, scope: !3199)
!3201 = !DILocation(line: 742, column: 42, scope: !3198)
!3202 = !DILocation(line: 742, column: 50, scope: !3198)
!3203 = !DILocation(line: 742, column: 67, scope: !3198)
!3204 = !DILocation(line: 742, column: 72, scope: !3198)
!3205 = !DILocation(line: 744, column: 42, scope: !3198)
!3206 = !DILocation(line: 744, column: 49, scope: !3198)
!3207 = !DILocation(line: 745, column: 42, scope: !3198)
!3208 = !DILocation(line: 745, column: 54, scope: !3198)
!3209 = !DILocation(line: 742, column: 16, scope: !3198)
!3210 = !DILocation(line: 742, column: 9, scope: !3198)
!3211 = !DILocation(line: 746, column: 18, scope: !3212)
!3212 = distinct !DILexicalBlock(scope: !3198, file: !139, line: 746, column: 16)
!3213 = !DILocation(line: 746, column: 29, scope: !3212)
!3214 = !DILocation(line: 746, column: 32, scope: !3212)
!3215 = !DILocation(line: 746, column: 16, scope: !3198)
!3216 = !DILocation(line: 749, column: 24, scope: !3217)
!3217 = distinct !DILexicalBlock(scope: !3212, file: !139, line: 747, column: 9)
!3218 = !DILocation(line: 749, column: 22, scope: !3217)
!3219 = !DILocation(line: 750, column: 15, scope: !3217)
!3220 = !DILocation(line: 751, column: 11, scope: !3217)
!3221 = !DILocation(line: 753, column: 5, scope: !3199)
!3222 = !DILocation(line: 755, column: 7, scope: !3223)
!3223 = distinct !DILexicalBlock(scope: !2388, file: !139, line: 755, column: 7)
!3224 = !DILocation(line: 755, column: 20, scope: !3223)
!3225 = !DILocation(line: 755, column: 24, scope: !3223)
!3226 = !DILocation(line: 755, column: 7, scope: !2388)
!3227 = !DILocation(line: 756, column: 5, scope: !3223)
!3228 = !DILocation(line: 756, column: 13, scope: !3229)
!3229 = distinct !DILexicalBlock(scope: !3230, file: !139, line: 756, column: 5)
!3230 = distinct !DILexicalBlock(scope: !3223, file: !139, line: 756, column: 5)
!3231 = !DILocation(line: 756, column: 12, scope: !3229)
!3232 = !DILocation(line: 756, column: 5, scope: !3230)
!3233 = !DILocation(line: 757, column: 7, scope: !3229)
!3234 = !DILocation(line: 757, column: 7, scope: !3235)
!3235 = distinct !DILexicalBlock(scope: !3236, file: !139, line: 757, column: 7)
!3236 = distinct !DILexicalBlock(scope: !3229, file: !139, line: 757, column: 7)
!3237 = !DILocation(line: 757, column: 7, scope: !3236)
!3238 = !DILocation(line: 756, column: 39, scope: !3229)
!3239 = !DILocation(line: 756, column: 5, scope: !3229)
!3240 = distinct !{!3240, !3232, !3241}
!3241 = !DILocation(line: 757, column: 7, scope: !3230)
!3242 = !DILocation(line: 759, column: 7, scope: !3243)
!3243 = distinct !DILexicalBlock(scope: !2388, file: !139, line: 759, column: 7)
!3244 = !DILocation(line: 759, column: 13, scope: !3243)
!3245 = !DILocation(line: 759, column: 11, scope: !3243)
!3246 = !DILocation(line: 759, column: 7, scope: !2388)
!3247 = !DILocation(line: 760, column: 5, scope: !3243)
!3248 = !DILocation(line: 760, column: 12, scope: !3243)
!3249 = !DILocation(line: 760, column: 17, scope: !3243)
!3250 = !DILocation(line: 761, column: 10, scope: !2388)
!3251 = !DILocation(line: 761, column: 3, scope: !2388)
!3252 = !DILabel(scope: !2388, name: "force_outer_quoting_style", file: !139, line: 763)
!3253 = !DILocation(line: 763, column: 2, scope: !2388)
!3254 = !DILocation(line: 766, column: 7, scope: !3255)
!3255 = distinct !DILexicalBlock(scope: !2388, file: !139, line: 766, column: 7)
!3256 = !DILocation(line: 766, column: 21, scope: !3255)
!3257 = !DILocation(line: 766, column: 51, scope: !3255)
!3258 = !DILocation(line: 766, column: 54, scope: !3255)
!3259 = !DILocation(line: 766, column: 7, scope: !2388)
!3260 = !DILocation(line: 767, column: 19, scope: !3255)
!3261 = !DILocation(line: 767, column: 5, scope: !3255)
!3262 = !DILocation(line: 768, column: 36, scope: !2388)
!3263 = !DILocation(line: 768, column: 44, scope: !2388)
!3264 = !DILocation(line: 768, column: 56, scope: !2388)
!3265 = !DILocation(line: 768, column: 61, scope: !2388)
!3266 = !DILocation(line: 769, column: 36, scope: !2388)
!3267 = !DILocation(line: 770, column: 36, scope: !2388)
!3268 = !DILocation(line: 770, column: 42, scope: !2388)
!3269 = !DILocation(line: 771, column: 36, scope: !2388)
!3270 = !DILocation(line: 771, column: 48, scope: !2388)
!3271 = !DILocation(line: 768, column: 10, scope: !2388)
!3272 = !DILocation(line: 768, column: 3, scope: !2388)
!3273 = !DILocation(line: 772, column: 1, scope: !2388)
!3274 = !DILocalVariable(name: "buffer", arg: 1, scope: !3275, file: !139, line: 256, type: !6)
!3275 = distinct !DISubprogram(name: "quotearg_buffer_restyled", scope: !139, file: !139, line: 256, type: !2389, scopeLine: 262, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3276, retainedNodes: !4)
!3276 = distinct !DICompileUnit(language: DW_LANG_C99, file: !116, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !117, retainedTypes: !132, globals: !3277, nameTableKind: None)
!3277 = !{!3278, !3280, !3282, !3291, !3293, !3295, !3302, !3304}
!3278 = !DIGlobalVariableExpression(var: !3279, expr: !DIExpression())
!3279 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !3276, file: !139, line: 85, type: !140, isLocal: false, isDefinition: true)
!3280 = !DIGlobalVariableExpression(var: !3281, expr: !DIExpression())
!3281 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !3276, file: !139, line: 101, type: !146, isLocal: false, isDefinition: true)
!3282 = !DIGlobalVariableExpression(var: !3283, expr: !DIExpression())
!3283 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !3276, file: !139, line: 1052, type: !3284, isLocal: false, isDefinition: true)
!3284 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !139, line: 65, size: 448, elements: !3285)
!3285 = !{!3286, !3287, !3288, !3289, !3290}
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !3284, file: !139, line: 68, baseType: !118, size: 32)
!3287 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3284, file: !139, line: 71, baseType: !72, size: 32, offset: 32)
!3288 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !3284, file: !139, line: 75, baseType: !155, size: 256, offset: 64)
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !3284, file: !139, line: 78, baseType: !69, size: 64, offset: 320)
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !3284, file: !139, line: 81, baseType: !69, size: 64, offset: 384)
!3291 = !DIGlobalVariableExpression(var: !3292, expr: !DIExpression())
!3292 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !3276, file: !139, line: 116, type: !3284, isLocal: true, isDefinition: true)
!3293 = !DIGlobalVariableExpression(var: !3294, expr: !DIExpression())
!3294 = distinct !DIGlobalVariable(name: "slot0", scope: !3276, file: !139, line: 842, type: !162, isLocal: true, isDefinition: true)
!3295 = !DIGlobalVariableExpression(var: !3296, expr: !DIExpression())
!3296 = distinct !DIGlobalVariable(name: "slotvec", scope: !3276, file: !139, line: 845, type: !3297, isLocal: true, isDefinition: true)
!3297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3298, size: 64)
!3298 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !139, line: 834, size: 128, elements: !3299)
!3299 = !{!3300, !3301}
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3298, file: !139, line: 836, baseType: !134, size: 64)
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !3298, file: !139, line: 837, baseType: !6, size: 64, offset: 64)
!3302 = !DIGlobalVariableExpression(var: !3303, expr: !DIExpression())
!3303 = distinct !DIGlobalVariable(name: "nslots", scope: !3276, file: !139, line: 843, type: !72, isLocal: true, isDefinition: true)
!3304 = !DIGlobalVariableExpression(var: !3305, expr: !DIExpression())
!3305 = distinct !DIGlobalVariable(name: "slotvec0", scope: !3276, file: !139, line: 844, type: !3298, isLocal: true, isDefinition: true)
!3306 = !DILocalVariable(name: "buffersize", arg: 2, scope: !3275, file: !139, line: 256, type: !134)
!3307 = !DILocalVariable(name: "arg", arg: 3, scope: !3275, file: !139, line: 257, type: !69)
!3308 = !DILocalVariable(name: "argsize", arg: 4, scope: !3275, file: !139, line: 257, type: !134)
!3309 = !DILocalVariable(name: "quoting_style", arg: 5, scope: !3275, file: !139, line: 258, type: !118)
!3310 = !DILocalVariable(name: "flags", arg: 6, scope: !3275, file: !139, line: 258, type: !72)
!3311 = !DILocalVariable(name: "quote_these_too", arg: 7, scope: !3275, file: !139, line: 259, type: !2391)
!3312 = !DILocalVariable(name: "left_quote", arg: 8, scope: !3275, file: !139, line: 260, type: !69)
!3313 = !DILocalVariable(name: "right_quote", arg: 9, scope: !3275, file: !139, line: 261, type: !69)
!3314 = !DILocalVariable(name: "i", scope: !3275, file: !139, line: 263, type: !134)
!3315 = !DILocalVariable(name: "len", scope: !3275, file: !139, line: 264, type: !134)
!3316 = !DILocalVariable(name: "orig_buffersize", scope: !3275, file: !139, line: 265, type: !134)
!3317 = !DILocalVariable(name: "quote_string", scope: !3275, file: !139, line: 266, type: !69)
!3318 = !DILocalVariable(name: "quote_string_len", scope: !3275, file: !139, line: 267, type: !134)
!3319 = !DILocalVariable(name: "backslash_escapes", scope: !3275, file: !139, line: 268, type: !27)
!3320 = !DILocalVariable(name: "unibyte_locale", scope: !3275, file: !139, line: 269, type: !27)
!3321 = !DILocalVariable(name: "elide_outer_quotes", scope: !3275, file: !139, line: 270, type: !27)
!3322 = !DILocalVariable(name: "pending_shell_escape_end", scope: !3275, file: !139, line: 271, type: !27)
!3323 = !DILocalVariable(name: "encountered_single_quote", scope: !3275, file: !139, line: 272, type: !27)
!3324 = !DILocalVariable(name: "all_c_and_shell_quote_compat", scope: !3275, file: !139, line: 273, type: !27)
!3325 = !DILocalVariable(name: "escaping", scope: !3326, file: !139, line: 405, type: !27)
!3326 = distinct !DILexicalBlock(scope: !3327, file: !139, line: 401, column: 5)
!3327 = distinct !DILexicalBlock(scope: !3328, file: !139, line: 400, column: 3)
!3328 = distinct !DILexicalBlock(scope: !3329, file: !139, line: 400, column: 3)
!3329 = distinct !DISubprogram(name: "quotearg_buffer_restyled", scope: !139, file: !139, line: 256, type: !2389, scopeLine: 262, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3330, retainedNodes: !4)
!3330 = distinct !DICompileUnit(language: DW_LANG_C99, file: !116, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !117, retainedTypes: !132, globals: !3331, nameTableKind: None)
!3331 = !{!3332, !3334, !3336, !3345, !3347, !3349, !3356, !3358}
!3332 = !DIGlobalVariableExpression(var: !3333, expr: !DIExpression())
!3333 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !3330, file: !139, line: 85, type: !140, isLocal: false, isDefinition: true)
!3334 = !DIGlobalVariableExpression(var: !3335, expr: !DIExpression())
!3335 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !3330, file: !139, line: 101, type: !146, isLocal: false, isDefinition: true)
!3336 = !DIGlobalVariableExpression(var: !3337, expr: !DIExpression())
!3337 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !3330, file: !139, line: 1052, type: !3338, isLocal: false, isDefinition: true)
!3338 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !139, line: 65, size: 448, elements: !3339)
!3339 = !{!3340, !3341, !3342, !3343, !3344}
!3340 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !3338, file: !139, line: 68, baseType: !118, size: 32)
!3341 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3338, file: !139, line: 71, baseType: !72, size: 32, offset: 32)
!3342 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !3338, file: !139, line: 75, baseType: !155, size: 256, offset: 64)
!3343 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !3338, file: !139, line: 78, baseType: !69, size: 64, offset: 320)
!3344 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !3338, file: !139, line: 81, baseType: !69, size: 64, offset: 384)
!3345 = !DIGlobalVariableExpression(var: !3346, expr: !DIExpression())
!3346 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !3330, file: !139, line: 116, type: !3338, isLocal: true, isDefinition: true)
!3347 = !DIGlobalVariableExpression(var: !3348, expr: !DIExpression())
!3348 = distinct !DIGlobalVariable(name: "slot0", scope: !3330, file: !139, line: 842, type: !162, isLocal: true, isDefinition: true)
!3349 = !DIGlobalVariableExpression(var: !3350, expr: !DIExpression())
!3350 = distinct !DIGlobalVariable(name: "slotvec", scope: !3330, file: !139, line: 845, type: !3351, isLocal: true, isDefinition: true)
!3351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3352, size: 64)
!3352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !139, line: 834, size: 128, elements: !3353)
!3353 = !{!3354, !3355}
!3354 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3352, file: !139, line: 836, baseType: !134, size: 64)
!3355 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !3352, file: !139, line: 837, baseType: !6, size: 64, offset: 64)
!3356 = !DIGlobalVariableExpression(var: !3357, expr: !DIExpression())
!3357 = distinct !DIGlobalVariable(name: "nslots", scope: !3330, file: !139, line: 843, type: !72, isLocal: true, isDefinition: true)
!3358 = !DIGlobalVariableExpression(var: !3359, expr: !DIExpression())
!3359 = distinct !DIGlobalVariable(name: "slotvec0", scope: !3330, file: !139, line: 844, type: !3352, isLocal: true, isDefinition: true)
!3360 = !DILocalVariable(name: "c_and_shell_quote_compat", scope: !3326, file: !139, line: 406, type: !27)
!3361 = distinct !DISubprogram(name: "gettext_quote", scope: !139, file: !139, line: 207, type: !3362, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !115, retainedNodes: !4)
!3362 = !DISubroutineType(types: !3363)
!3363 = !{!69, !69, !118}
!3364 = !DILocalVariable(name: "msgid", arg: 1, scope: !3361, file: !139, line: 207, type: !69)
!3365 = !DILocation(line: 207, column: 28, scope: !3361)
!3366 = !DILocalVariable(name: "s", arg: 2, scope: !3361, file: !139, line: 207, type: !118)
!3367 = !DILocation(line: 207, column: 54, scope: !3361)
!3368 = !DILocalVariable(name: "translation", scope: !3361, file: !139, line: 209, type: !69)
!3369 = !DILocation(line: 209, column: 15, scope: !3361)
!3370 = !DILocation(line: 209, column: 29, scope: !3361)
!3371 = !DILocalVariable(name: "locale_code", scope: !3361, file: !139, line: 210, type: !69)
!3372 = !DILocation(line: 210, column: 15, scope: !3361)
!3373 = !DILocation(line: 212, column: 7, scope: !3374)
!3374 = distinct !DILexicalBlock(scope: !3361, file: !139, line: 212, column: 7)
!3375 = !DILocation(line: 212, column: 22, scope: !3374)
!3376 = !DILocation(line: 212, column: 19, scope: !3374)
!3377 = !DILocation(line: 212, column: 7, scope: !3361)
!3378 = !DILocation(line: 213, column: 12, scope: !3374)
!3379 = !DILocation(line: 213, column: 5, scope: !3374)
!3380 = !DILocation(line: 233, column: 17, scope: !3361)
!3381 = !DILocation(line: 233, column: 15, scope: !3361)
!3382 = !DILocation(line: 234, column: 7, scope: !3383)
!3383 = distinct !DILexicalBlock(scope: !3361, file: !139, line: 234, column: 7)
!3384 = !DILocation(line: 235, column: 12, scope: !3383)
!3385 = !DILocation(line: 235, column: 21, scope: !3383)
!3386 = !DILocation(line: 235, column: 5, scope: !3383)
!3387 = !DILocation(line: 236, column: 7, scope: !3388)
!3388 = distinct !DILexicalBlock(scope: !3361, file: !139, line: 236, column: 7)
!3389 = !DILocation(line: 237, column: 12, scope: !3388)
!3390 = !DILocation(line: 237, column: 21, scope: !3388)
!3391 = !DILocation(line: 237, column: 5, scope: !3388)
!3392 = !DILocation(line: 239, column: 11, scope: !3361)
!3393 = !DILocation(line: 239, column: 13, scope: !3361)
!3394 = !DILocation(line: 239, column: 3, scope: !3361)
!3395 = !DILocation(line: 240, column: 1, scope: !3361)
!3396 = !DILocalVariable(name: "msgid", arg: 1, scope: !3397, file: !139, line: 207, type: !69)
!3397 = distinct !DISubprogram(name: "gettext_quote", scope: !139, file: !139, line: 207, type: !3362, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3398, retainedNodes: !4)
!3398 = distinct !DICompileUnit(language: DW_LANG_C99, file: !116, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !117, retainedTypes: !132, globals: !3399, nameTableKind: None)
!3399 = !{!3400, !3402, !3404, !3413, !3415, !3417, !3424, !3426}
!3400 = !DIGlobalVariableExpression(var: !3401, expr: !DIExpression())
!3401 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !3398, file: !139, line: 85, type: !140, isLocal: false, isDefinition: true)
!3402 = !DIGlobalVariableExpression(var: !3403, expr: !DIExpression())
!3403 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !3398, file: !139, line: 101, type: !146, isLocal: false, isDefinition: true)
!3404 = !DIGlobalVariableExpression(var: !3405, expr: !DIExpression())
!3405 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !3398, file: !139, line: 1052, type: !3406, isLocal: false, isDefinition: true)
!3406 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !139, line: 65, size: 448, elements: !3407)
!3407 = !{!3408, !3409, !3410, !3411, !3412}
!3408 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !3406, file: !139, line: 68, baseType: !118, size: 32)
!3409 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3406, file: !139, line: 71, baseType: !72, size: 32, offset: 32)
!3410 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !3406, file: !139, line: 75, baseType: !155, size: 256, offset: 64)
!3411 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !3406, file: !139, line: 78, baseType: !69, size: 64, offset: 320)
!3412 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !3406, file: !139, line: 81, baseType: !69, size: 64, offset: 384)
!3413 = !DIGlobalVariableExpression(var: !3414, expr: !DIExpression())
!3414 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !3398, file: !139, line: 116, type: !3406, isLocal: true, isDefinition: true)
!3415 = !DIGlobalVariableExpression(var: !3416, expr: !DIExpression())
!3416 = distinct !DIGlobalVariable(name: "slot0", scope: !3398, file: !139, line: 842, type: !162, isLocal: true, isDefinition: true)
!3417 = !DIGlobalVariableExpression(var: !3418, expr: !DIExpression())
!3418 = distinct !DIGlobalVariable(name: "slotvec", scope: !3398, file: !139, line: 845, type: !3419, isLocal: true, isDefinition: true)
!3419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3420, size: 64)
!3420 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !139, line: 834, size: 128, elements: !3421)
!3421 = !{!3422, !3423}
!3422 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3420, file: !139, line: 836, baseType: !134, size: 64)
!3423 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !3420, file: !139, line: 837, baseType: !6, size: 64, offset: 64)
!3424 = !DIGlobalVariableExpression(var: !3425, expr: !DIExpression())
!3425 = distinct !DIGlobalVariable(name: "nslots", scope: !3398, file: !139, line: 843, type: !72, isLocal: true, isDefinition: true)
!3426 = !DIGlobalVariableExpression(var: !3427, expr: !DIExpression())
!3427 = distinct !DIGlobalVariable(name: "slotvec0", scope: !3398, file: !139, line: 844, type: !3420, isLocal: true, isDefinition: true)
!3428 = !DILocalVariable(name: "s", arg: 2, scope: !3397, file: !139, line: 207, type: !118)
!3429 = !DILocalVariable(name: "translation", scope: !3397, file: !139, line: 209, type: !69)
!3430 = !DILocalVariable(name: "locale_code", scope: !3397, file: !139, line: 210, type: !69)
!3431 = distinct !DISubprogram(name: "quotearg_char", scope: !139, file: !139, line: 991, type: !3432, scopeLine: 992, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !115, retainedNodes: !4)
!3432 = !DISubroutineType(types: !3433)
!3433 = !{!6, !69, !7}
!3434 = !DILocalVariable(name: "arg", arg: 1, scope: !3431, file: !139, line: 991, type: !69)
!3435 = !DILocation(line: 991, column: 28, scope: !3431)
!3436 = !DILocalVariable(name: "ch", arg: 2, scope: !3431, file: !139, line: 991, type: !7)
!3437 = !DILocation(line: 991, column: 38, scope: !3431)
!3438 = !DILocation(line: 993, column: 29, scope: !3431)
!3439 = !DILocation(line: 993, column: 44, scope: !3431)
!3440 = !DILocation(line: 993, column: 10, scope: !3431)
!3441 = !DILocation(line: 993, column: 3, scope: !3431)
!3442 = !DILocalVariable(name: "arg", arg: 1, scope: !3443, file: !139, line: 991, type: !69)
!3443 = distinct !DISubprogram(name: "quotearg_char", scope: !139, file: !139, line: 991, type: !3432, scopeLine: 992, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3444, retainedNodes: !4)
!3444 = distinct !DICompileUnit(language: DW_LANG_C99, file: !116, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !117, retainedTypes: !132, globals: !3445, nameTableKind: None)
!3445 = !{!3446, !3448, !3450, !3459, !3461, !3463, !3470, !3472}
!3446 = !DIGlobalVariableExpression(var: !3447, expr: !DIExpression())
!3447 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !3444, file: !139, line: 85, type: !140, isLocal: false, isDefinition: true)
!3448 = !DIGlobalVariableExpression(var: !3449, expr: !DIExpression())
!3449 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !3444, file: !139, line: 101, type: !146, isLocal: false, isDefinition: true)
!3450 = !DIGlobalVariableExpression(var: !3451, expr: !DIExpression())
!3451 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !3444, file: !139, line: 1052, type: !3452, isLocal: false, isDefinition: true)
!3452 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !139, line: 65, size: 448, elements: !3453)
!3453 = !{!3454, !3455, !3456, !3457, !3458}
!3454 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !3452, file: !139, line: 68, baseType: !118, size: 32)
!3455 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3452, file: !139, line: 71, baseType: !72, size: 32, offset: 32)
!3456 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !3452, file: !139, line: 75, baseType: !155, size: 256, offset: 64)
!3457 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !3452, file: !139, line: 78, baseType: !69, size: 64, offset: 320)
!3458 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !3452, file: !139, line: 81, baseType: !69, size: 64, offset: 384)
!3459 = !DIGlobalVariableExpression(var: !3460, expr: !DIExpression())
!3460 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !3444, file: !139, line: 116, type: !3452, isLocal: true, isDefinition: true)
!3461 = !DIGlobalVariableExpression(var: !3462, expr: !DIExpression())
!3462 = distinct !DIGlobalVariable(name: "slot0", scope: !3444, file: !139, line: 842, type: !162, isLocal: true, isDefinition: true)
!3463 = !DIGlobalVariableExpression(var: !3464, expr: !DIExpression())
!3464 = distinct !DIGlobalVariable(name: "slotvec", scope: !3444, file: !139, line: 845, type: !3465, isLocal: true, isDefinition: true)
!3465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3466, size: 64)
!3466 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !139, line: 834, size: 128, elements: !3467)
!3467 = !{!3468, !3469}
!3468 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3466, file: !139, line: 836, baseType: !134, size: 64)
!3469 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !3466, file: !139, line: 837, baseType: !6, size: 64, offset: 64)
!3470 = !DIGlobalVariableExpression(var: !3471, expr: !DIExpression())
!3471 = distinct !DIGlobalVariable(name: "nslots", scope: !3444, file: !139, line: 843, type: !72, isLocal: true, isDefinition: true)
!3472 = !DIGlobalVariableExpression(var: !3473, expr: !DIExpression())
!3473 = distinct !DIGlobalVariable(name: "slotvec0", scope: !3444, file: !139, line: 844, type: !3466, isLocal: true, isDefinition: true)
!3474 = !DILocalVariable(name: "ch", arg: 2, scope: !3443, file: !139, line: 991, type: !7)
!3475 = distinct !DISubprogram(name: "quotearg_colon", scope: !139, file: !139, line: 997, type: !3476, scopeLine: 998, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !115, retainedNodes: !4)
!3476 = !DISubroutineType(types: !3477)
!3477 = !{!6, !69}
!3478 = !DILocalVariable(name: "arg", arg: 1, scope: !3475, file: !139, line: 997, type: !69)
!3479 = !DILocation(line: 997, column: 29, scope: !3475)
!3480 = !DILocation(line: 999, column: 25, scope: !3475)
!3481 = !DILocation(line: 999, column: 10, scope: !3475)
!3482 = !DILocation(line: 999, column: 3, scope: !3475)
!3483 = !DILocalVariable(name: "arg", arg: 1, scope: !3484, file: !139, line: 997, type: !69)
!3484 = distinct !DISubprogram(name: "quotearg_colon", scope: !139, file: !139, line: 997, type: !3476, scopeLine: 998, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3485, retainedNodes: !4)
!3485 = distinct !DICompileUnit(language: DW_LANG_C99, file: !116, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !117, retainedTypes: !132, globals: !3486, nameTableKind: None)
!3486 = !{!3487, !3489, !3491, !3500, !3502, !3504, !3511, !3513}
!3487 = !DIGlobalVariableExpression(var: !3488, expr: !DIExpression())
!3488 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !3485, file: !139, line: 85, type: !140, isLocal: false, isDefinition: true)
!3489 = !DIGlobalVariableExpression(var: !3490, expr: !DIExpression())
!3490 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !3485, file: !139, line: 101, type: !146, isLocal: false, isDefinition: true)
!3491 = !DIGlobalVariableExpression(var: !3492, expr: !DIExpression())
!3492 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !3485, file: !139, line: 1052, type: !3493, isLocal: false, isDefinition: true)
!3493 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !139, line: 65, size: 448, elements: !3494)
!3494 = !{!3495, !3496, !3497, !3498, !3499}
!3495 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !3493, file: !139, line: 68, baseType: !118, size: 32)
!3496 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3493, file: !139, line: 71, baseType: !72, size: 32, offset: 32)
!3497 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !3493, file: !139, line: 75, baseType: !155, size: 256, offset: 64)
!3498 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !3493, file: !139, line: 78, baseType: !69, size: 64, offset: 320)
!3499 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !3493, file: !139, line: 81, baseType: !69, size: 64, offset: 384)
!3500 = !DIGlobalVariableExpression(var: !3501, expr: !DIExpression())
!3501 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !3485, file: !139, line: 116, type: !3493, isLocal: true, isDefinition: true)
!3502 = !DIGlobalVariableExpression(var: !3503, expr: !DIExpression())
!3503 = distinct !DIGlobalVariable(name: "slot0", scope: !3485, file: !139, line: 842, type: !162, isLocal: true, isDefinition: true)
!3504 = !DIGlobalVariableExpression(var: !3505, expr: !DIExpression())
!3505 = distinct !DIGlobalVariable(name: "slotvec", scope: !3485, file: !139, line: 845, type: !3506, isLocal: true, isDefinition: true)
!3506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3507, size: 64)
!3507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !139, line: 834, size: 128, elements: !3508)
!3508 = !{!3509, !3510}
!3509 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3507, file: !139, line: 836, baseType: !134, size: 64)
!3510 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !3507, file: !139, line: 837, baseType: !6, size: 64, offset: 64)
!3511 = !DIGlobalVariableExpression(var: !3512, expr: !DIExpression())
!3512 = distinct !DIGlobalVariable(name: "nslots", scope: !3485, file: !139, line: 843, type: !72, isLocal: true, isDefinition: true)
!3513 = !DIGlobalVariableExpression(var: !3514, expr: !DIExpression())
!3514 = distinct !DIGlobalVariable(name: "slotvec0", scope: !3485, file: !139, line: 844, type: !3507, isLocal: true, isDefinition: true)
!3515 = distinct !DISubprogram(name: "quote_n_mem", scope: !139, file: !139, line: 1061, type: !3516, scopeLine: 1062, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !115, retainedNodes: !4)
!3516 = !DISubroutineType(types: !3517)
!3517 = !{!69, !72, !69, !134}
!3518 = !DILocalVariable(name: "n", arg: 1, scope: !3515, file: !139, line: 1061, type: !72)
!3519 = !DILocation(line: 1061, column: 18, scope: !3515)
!3520 = !DILocalVariable(name: "arg", arg: 2, scope: !3515, file: !139, line: 1061, type: !69)
!3521 = !DILocation(line: 1061, column: 33, scope: !3515)
!3522 = !DILocalVariable(name: "argsize", arg: 3, scope: !3515, file: !139, line: 1061, type: !134)
!3523 = !DILocation(line: 1061, column: 45, scope: !3515)
!3524 = !DILocation(line: 1063, column: 30, scope: !3515)
!3525 = !DILocation(line: 1063, column: 33, scope: !3515)
!3526 = !DILocation(line: 1063, column: 38, scope: !3515)
!3527 = !DILocation(line: 1063, column: 10, scope: !3515)
!3528 = !DILocation(line: 1063, column: 3, scope: !3515)
!3529 = !DILocalVariable(name: "n", arg: 1, scope: !3530, file: !139, line: 1061, type: !72)
!3530 = distinct !DISubprogram(name: "quote_n_mem", scope: !139, file: !139, line: 1061, type: !3516, scopeLine: 1062, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3531, retainedNodes: !4)
!3531 = distinct !DICompileUnit(language: DW_LANG_C99, file: !116, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !117, retainedTypes: !132, globals: !3532, nameTableKind: None)
!3532 = !{!3533, !3535, !3537, !3546, !3548, !3550, !3557, !3559}
!3533 = !DIGlobalVariableExpression(var: !3534, expr: !DIExpression())
!3534 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !3531, file: !139, line: 85, type: !140, isLocal: false, isDefinition: true)
!3535 = !DIGlobalVariableExpression(var: !3536, expr: !DIExpression())
!3536 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !3531, file: !139, line: 101, type: !146, isLocal: false, isDefinition: true)
!3537 = !DIGlobalVariableExpression(var: !3538, expr: !DIExpression())
!3538 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !3531, file: !139, line: 1052, type: !3539, isLocal: false, isDefinition: true)
!3539 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !139, line: 65, size: 448, elements: !3540)
!3540 = !{!3541, !3542, !3543, !3544, !3545}
!3541 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !3539, file: !139, line: 68, baseType: !118, size: 32)
!3542 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3539, file: !139, line: 71, baseType: !72, size: 32, offset: 32)
!3543 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !3539, file: !139, line: 75, baseType: !155, size: 256, offset: 64)
!3544 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !3539, file: !139, line: 78, baseType: !69, size: 64, offset: 320)
!3545 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !3539, file: !139, line: 81, baseType: !69, size: 64, offset: 384)
!3546 = !DIGlobalVariableExpression(var: !3547, expr: !DIExpression())
!3547 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !3531, file: !139, line: 116, type: !3539, isLocal: true, isDefinition: true)
!3548 = !DIGlobalVariableExpression(var: !3549, expr: !DIExpression())
!3549 = distinct !DIGlobalVariable(name: "slot0", scope: !3531, file: !139, line: 842, type: !162, isLocal: true, isDefinition: true)
!3550 = !DIGlobalVariableExpression(var: !3551, expr: !DIExpression())
!3551 = distinct !DIGlobalVariable(name: "slotvec", scope: !3531, file: !139, line: 845, type: !3552, isLocal: true, isDefinition: true)
!3552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3553, size: 64)
!3553 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !139, line: 834, size: 128, elements: !3554)
!3554 = !{!3555, !3556}
!3555 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3553, file: !139, line: 836, baseType: !134, size: 64)
!3556 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !3553, file: !139, line: 837, baseType: !6, size: 64, offset: 64)
!3557 = !DIGlobalVariableExpression(var: !3558, expr: !DIExpression())
!3558 = distinct !DIGlobalVariable(name: "nslots", scope: !3531, file: !139, line: 843, type: !72, isLocal: true, isDefinition: true)
!3559 = !DIGlobalVariableExpression(var: !3560, expr: !DIExpression())
!3560 = distinct !DIGlobalVariable(name: "slotvec0", scope: !3531, file: !139, line: 844, type: !3553, isLocal: true, isDefinition: true)
!3561 = !DILocalVariable(name: "arg", arg: 2, scope: !3530, file: !139, line: 1061, type: !69)
!3562 = !DILocalVariable(name: "argsize", arg: 3, scope: !3530, file: !139, line: 1061, type: !134)
!3563 = distinct !DISubprogram(name: "quote_n", scope: !139, file: !139, line: 1073, type: !3564, scopeLine: 1074, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !115, retainedNodes: !4)
!3564 = !DISubroutineType(types: !3565)
!3565 = !{!69, !72, !69}
!3566 = !DILocalVariable(name: "n", arg: 1, scope: !3563, file: !139, line: 1073, type: !72)
!3567 = !DILocation(line: 1073, column: 14, scope: !3563)
!3568 = !DILocalVariable(name: "arg", arg: 2, scope: !3563, file: !139, line: 1073, type: !69)
!3569 = !DILocation(line: 1073, column: 29, scope: !3563)
!3570 = !DILocation(line: 1075, column: 23, scope: !3563)
!3571 = !DILocation(line: 1075, column: 26, scope: !3563)
!3572 = !DILocation(line: 1075, column: 10, scope: !3563)
!3573 = !DILocation(line: 1075, column: 3, scope: !3563)
!3574 = !DILocalVariable(name: "n", arg: 1, scope: !3575, file: !139, line: 1073, type: !72)
!3575 = distinct !DISubprogram(name: "quote_n", scope: !139, file: !139, line: 1073, type: !3564, scopeLine: 1074, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3576, retainedNodes: !4)
!3576 = distinct !DICompileUnit(language: DW_LANG_C99, file: !116, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !117, retainedTypes: !132, globals: !3577, nameTableKind: None)
!3577 = !{!3578, !3580, !3582, !3591, !3593, !3595, !3602, !3604}
!3578 = !DIGlobalVariableExpression(var: !3579, expr: !DIExpression())
!3579 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !3576, file: !139, line: 85, type: !140, isLocal: false, isDefinition: true)
!3580 = !DIGlobalVariableExpression(var: !3581, expr: !DIExpression())
!3581 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !3576, file: !139, line: 101, type: !146, isLocal: false, isDefinition: true)
!3582 = !DIGlobalVariableExpression(var: !3583, expr: !DIExpression())
!3583 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !3576, file: !139, line: 1052, type: !3584, isLocal: false, isDefinition: true)
!3584 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !139, line: 65, size: 448, elements: !3585)
!3585 = !{!3586, !3587, !3588, !3589, !3590}
!3586 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !3584, file: !139, line: 68, baseType: !118, size: 32)
!3587 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3584, file: !139, line: 71, baseType: !72, size: 32, offset: 32)
!3588 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !3584, file: !139, line: 75, baseType: !155, size: 256, offset: 64)
!3589 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !3584, file: !139, line: 78, baseType: !69, size: 64, offset: 320)
!3590 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !3584, file: !139, line: 81, baseType: !69, size: 64, offset: 384)
!3591 = !DIGlobalVariableExpression(var: !3592, expr: !DIExpression())
!3592 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !3576, file: !139, line: 116, type: !3584, isLocal: true, isDefinition: true)
!3593 = !DIGlobalVariableExpression(var: !3594, expr: !DIExpression())
!3594 = distinct !DIGlobalVariable(name: "slot0", scope: !3576, file: !139, line: 842, type: !162, isLocal: true, isDefinition: true)
!3595 = !DIGlobalVariableExpression(var: !3596, expr: !DIExpression())
!3596 = distinct !DIGlobalVariable(name: "slotvec", scope: !3576, file: !139, line: 845, type: !3597, isLocal: true, isDefinition: true)
!3597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3598, size: 64)
!3598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !139, line: 834, size: 128, elements: !3599)
!3599 = !{!3600, !3601}
!3600 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3598, file: !139, line: 836, baseType: !134, size: 64)
!3601 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !3598, file: !139, line: 837, baseType: !6, size: 64, offset: 64)
!3602 = !DIGlobalVariableExpression(var: !3603, expr: !DIExpression())
!3603 = distinct !DIGlobalVariable(name: "nslots", scope: !3576, file: !139, line: 843, type: !72, isLocal: true, isDefinition: true)
!3604 = !DIGlobalVariableExpression(var: !3605, expr: !DIExpression())
!3605 = distinct !DIGlobalVariable(name: "slotvec0", scope: !3576, file: !139, line: 844, type: !3598, isLocal: true, isDefinition: true)
!3606 = !DILocalVariable(name: "arg", arg: 2, scope: !3575, file: !139, line: 1073, type: !69)
!3607 = distinct !DISubprogram(name: "quote", scope: !139, file: !139, line: 1079, type: !3608, scopeLine: 1080, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !115, retainedNodes: !4)
!3608 = !DISubroutineType(types: !3609)
!3609 = !{!69, !69}
!3610 = !DILocalVariable(name: "arg", arg: 1, scope: !3607, file: !139, line: 1079, type: !69)
!3611 = !DILocation(line: 1079, column: 20, scope: !3607)
!3612 = !DILocation(line: 1081, column: 22, scope: !3607)
!3613 = !DILocation(line: 1081, column: 10, scope: !3607)
!3614 = !DILocation(line: 1081, column: 3, scope: !3607)
!3615 = !DILocalVariable(name: "arg", arg: 1, scope: !3616, file: !139, line: 1079, type: !69)
!3616 = distinct !DISubprogram(name: "quote", scope: !139, file: !139, line: 1079, type: !3608, scopeLine: 1080, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3617, retainedNodes: !4)
!3617 = distinct !DICompileUnit(language: DW_LANG_C99, file: !116, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !117, retainedTypes: !132, globals: !3618, nameTableKind: None)
!3618 = !{!3619, !3621, !3623, !3632, !3634, !3636, !3643, !3645}
!3619 = !DIGlobalVariableExpression(var: !3620, expr: !DIExpression())
!3620 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !3617, file: !139, line: 85, type: !140, isLocal: false, isDefinition: true)
!3621 = !DIGlobalVariableExpression(var: !3622, expr: !DIExpression())
!3622 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !3617, file: !139, line: 101, type: !146, isLocal: false, isDefinition: true)
!3623 = !DIGlobalVariableExpression(var: !3624, expr: !DIExpression())
!3624 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !3617, file: !139, line: 1052, type: !3625, isLocal: false, isDefinition: true)
!3625 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !139, line: 65, size: 448, elements: !3626)
!3626 = !{!3627, !3628, !3629, !3630, !3631}
!3627 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !3625, file: !139, line: 68, baseType: !118, size: 32)
!3628 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3625, file: !139, line: 71, baseType: !72, size: 32, offset: 32)
!3629 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !3625, file: !139, line: 75, baseType: !155, size: 256, offset: 64)
!3630 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !3625, file: !139, line: 78, baseType: !69, size: 64, offset: 320)
!3631 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !3625, file: !139, line: 81, baseType: !69, size: 64, offset: 384)
!3632 = !DIGlobalVariableExpression(var: !3633, expr: !DIExpression())
!3633 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !3617, file: !139, line: 116, type: !3625, isLocal: true, isDefinition: true)
!3634 = !DIGlobalVariableExpression(var: !3635, expr: !DIExpression())
!3635 = distinct !DIGlobalVariable(name: "slot0", scope: !3617, file: !139, line: 842, type: !162, isLocal: true, isDefinition: true)
!3636 = !DIGlobalVariableExpression(var: !3637, expr: !DIExpression())
!3637 = distinct !DIGlobalVariable(name: "slotvec", scope: !3617, file: !139, line: 845, type: !3638, isLocal: true, isDefinition: true)
!3638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3639, size: 64)
!3639 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !139, line: 834, size: 128, elements: !3640)
!3640 = !{!3641, !3642}
!3641 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3639, file: !139, line: 836, baseType: !134, size: 64)
!3642 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !3639, file: !139, line: 837, baseType: !6, size: 64, offset: 64)
!3643 = !DIGlobalVariableExpression(var: !3644, expr: !DIExpression())
!3644 = distinct !DIGlobalVariable(name: "nslots", scope: !3617, file: !139, line: 843, type: !72, isLocal: true, isDefinition: true)
!3645 = !DIGlobalVariableExpression(var: !3646, expr: !DIExpression())
!3646 = distinct !DIGlobalVariable(name: "slotvec0", scope: !3617, file: !139, line: 844, type: !3639, isLocal: true, isDefinition: true)
!3647 = distinct !DISubprogram(name: "getcon", scope: !3648, file: !3648, line: 87, type: !3649, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !208, retainedNodes: !4)
!3648 = !DIFile(filename: "./lib/selinux/selinux.h", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!3649 = !DISubroutineType(types: !3650)
!3650 = !{!72, !3651}
!3651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3652, size: 64)
!3652 = !DIDerivedType(tag: DW_TAG_typedef, name: "security_context_t", file: !3648, line: 83, baseType: !6)
!3653 = !DILocalVariable(name: "con", arg: 1, scope: !3647, file: !3648, line: 87, type: !3651)
!3654 = !DILocation(line: 87, column: 29, scope: !3647)
!3655 = !DILocation(line: 88, column: 5, scope: !3647)
!3656 = !DILocation(line: 88, column: 11, scope: !3647)
!3657 = !DILocation(line: 88, column: 22, scope: !3647)
!3658 = !DILocalVariable(name: "con", arg: 1, scope: !3659, file: !3648, line: 87, type: !3651)
!3659 = distinct !DISubprogram(name: "getcon", scope: !3648, file: !3648, line: 87, type: !3649, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3660, retainedNodes: !4)
!3660 = distinct !DICompileUnit(language: DW_LANG_C99, file: !209, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, nameTableKind: None)
!3661 = distinct !DISubprogram(name: "parse_user_spec", scope: !179, file: !179, line: 259, type: !3662, scopeLine: 261, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !185, retainedNodes: !4)
!3662 = !DISubroutineType(types: !3663)
!3663 = !{!69, !69, !182, !183, !184, !184}
!3664 = !DILocalVariable(name: "spec", arg: 1, scope: !3661, file: !179, line: 259, type: !69)
!3665 = !DILocation(line: 259, column: 30, scope: !3661)
!3666 = !DILocalVariable(name: "uid", arg: 2, scope: !3661, file: !179, line: 259, type: !182)
!3667 = !DILocation(line: 259, column: 43, scope: !3661)
!3668 = !DILocalVariable(name: "gid", arg: 3, scope: !3661, file: !179, line: 259, type: !183)
!3669 = !DILocation(line: 259, column: 55, scope: !3661)
!3670 = !DILocalVariable(name: "username", arg: 4, scope: !3661, file: !179, line: 260, type: !184)
!3671 = !DILocation(line: 260, column: 25, scope: !3661)
!3672 = !DILocalVariable(name: "groupname", arg: 5, scope: !3661, file: !179, line: 260, type: !184)
!3673 = !DILocation(line: 260, column: 42, scope: !3661)
!3674 = !DILocalVariable(name: "colon", scope: !3661, file: !179, line: 262, type: !69)
!3675 = !DILocation(line: 262, column: 15, scope: !3661)
!3676 = !DILocation(line: 262, column: 23, scope: !3661)
!3677 = !DILocation(line: 262, column: 37, scope: !3661)
!3678 = !DILocation(line: 262, column: 29, scope: !3661)
!3679 = !DILocalVariable(name: "error_msg", scope: !3661, file: !179, line: 263, type: !69)
!3680 = !DILocation(line: 263, column: 15, scope: !3661)
!3681 = !DILocation(line: 264, column: 27, scope: !3661)
!3682 = !DILocation(line: 264, column: 33, scope: !3661)
!3683 = !DILocation(line: 264, column: 40, scope: !3661)
!3684 = !DILocation(line: 264, column: 45, scope: !3661)
!3685 = !DILocation(line: 264, column: 50, scope: !3661)
!3686 = !DILocation(line: 264, column: 60, scope: !3661)
!3687 = !DILocation(line: 264, column: 5, scope: !3661)
!3688 = !DILocation(line: 266, column: 7, scope: !3689)
!3689 = distinct !DILexicalBlock(scope: !3661, file: !179, line: 266, column: 7)
!3690 = !DILocation(line: 266, column: 11, scope: !3689)
!3691 = !DILocation(line: 266, column: 15, scope: !3689)
!3692 = !DILocation(line: 266, column: 21, scope: !3689)
!3693 = !DILocation(line: 266, column: 24, scope: !3689)
!3694 = !DILocation(line: 266, column: 7, scope: !3661)
!3695 = !DILocalVariable(name: "dot", scope: !3696, file: !179, line: 274, type: !69)
!3696 = distinct !DILexicalBlock(scope: !3689, file: !179, line: 267, column: 5)
!3697 = !DILocation(line: 274, column: 19, scope: !3696)
!3698 = !DILocation(line: 274, column: 33, scope: !3696)
!3699 = !DILocation(line: 274, column: 25, scope: !3696)
!3700 = !DILocation(line: 275, column: 11, scope: !3701)
!3701 = distinct !DILexicalBlock(scope: !3696, file: !179, line: 275, column: 11)
!3702 = !DILocation(line: 276, column: 11, scope: !3701)
!3703 = !DILocation(line: 276, column: 38, scope: !3701)
!3704 = !DILocation(line: 276, column: 44, scope: !3701)
!3705 = !DILocation(line: 276, column: 49, scope: !3701)
!3706 = !DILocation(line: 276, column: 54, scope: !3701)
!3707 = !DILocation(line: 276, column: 59, scope: !3701)
!3708 = !DILocation(line: 276, column: 69, scope: !3701)
!3709 = !DILocation(line: 276, column: 16, scope: !3701)
!3710 = !DILocation(line: 275, column: 11, scope: !3696)
!3711 = !DILocation(line: 277, column: 19, scope: !3701)
!3712 = !DILocation(line: 277, column: 9, scope: !3701)
!3713 = !DILocation(line: 278, column: 5, scope: !3696)
!3714 = !DILocation(line: 280, column: 10, scope: !3661)
!3715 = !DILocation(line: 280, column: 3, scope: !3661)
!3716 = !DILocalVariable(name: "spec", arg: 1, scope: !3717, file: !179, line: 259, type: !69)
!3717 = distinct !DISubprogram(name: "parse_user_spec", scope: !179, file: !179, line: 259, type: !3662, scopeLine: 261, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3718, retainedNodes: !4)
!3718 = distinct !DICompileUnit(language: DW_LANG_C99, file: !186, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !187, globals: !3719, nameTableKind: None)
!3719 = !{!3720, !3723, !3725}
!3720 = !DIGlobalVariableExpression(var: !3721, expr: !DIExpression())
!3721 = distinct !DIGlobalVariable(name: "E_invalid_user", scope: !3722, file: !179, line: 106, type: !69, isLocal: true, isDefinition: true)
!3722 = distinct !DISubprogram(name: "parse_with_separator", scope: !179, file: !179, line: 102, type: !180, scopeLine: 105, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3718, retainedNodes: !4)
!3723 = !DIGlobalVariableExpression(var: !3724, expr: !DIExpression())
!3724 = distinct !DIGlobalVariable(name: "E_invalid_group", scope: !3722, file: !179, line: 107, type: !69, isLocal: true, isDefinition: true)
!3725 = !DIGlobalVariableExpression(var: !3726, expr: !DIExpression())
!3726 = distinct !DIGlobalVariable(name: "E_bad_spec", scope: !3722, file: !179, line: 108, type: !69, isLocal: true, isDefinition: true)
!3727 = !DILocalVariable(name: "uid", arg: 2, scope: !3717, file: !179, line: 259, type: !182)
!3728 = !DILocalVariable(name: "gid", arg: 3, scope: !3717, file: !179, line: 259, type: !183)
!3729 = !DILocalVariable(name: "username", arg: 4, scope: !3717, file: !179, line: 260, type: !184)
!3730 = !DILocalVariable(name: "groupname", arg: 5, scope: !3717, file: !179, line: 260, type: !184)
!3731 = !DILocalVariable(name: "colon", scope: !3717, file: !179, line: 262, type: !69)
!3732 = !DILocalVariable(name: "error_msg", scope: !3733, file: !179, line: 263, type: !69)
!3733 = distinct !DISubprogram(name: "parse_user_spec", scope: !179, file: !179, line: 259, type: !3662, scopeLine: 261, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3734, retainedNodes: !4)
!3734 = distinct !DICompileUnit(language: DW_LANG_C99, file: !186, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !187, globals: !3735, nameTableKind: None)
!3735 = !{!3736, !3739, !3741}
!3736 = !DIGlobalVariableExpression(var: !3737, expr: !DIExpression())
!3737 = distinct !DIGlobalVariable(name: "E_invalid_user", scope: !3738, file: !179, line: 106, type: !69, isLocal: true, isDefinition: true)
!3738 = distinct !DISubprogram(name: "parse_with_separator", scope: !179, file: !179, line: 102, type: !180, scopeLine: 105, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3734, retainedNodes: !4)
!3739 = !DIGlobalVariableExpression(var: !3740, expr: !DIExpression())
!3740 = distinct !DIGlobalVariable(name: "E_invalid_group", scope: !3738, file: !179, line: 107, type: !69, isLocal: true, isDefinition: true)
!3741 = !DIGlobalVariableExpression(var: !3742, expr: !DIExpression())
!3742 = distinct !DIGlobalVariable(name: "E_bad_spec", scope: !3738, file: !179, line: 108, type: !69, isLocal: true, isDefinition: true)
!3743 = !DILocalVariable(name: "spec", arg: 1, scope: !178, file: !179, line: 102, type: !69)
!3744 = !DILocation(line: 102, column: 35, scope: !178)
!3745 = !DILocalVariable(name: "separator", arg: 2, scope: !178, file: !179, line: 102, type: !69)
!3746 = !DILocation(line: 102, column: 53, scope: !178)
!3747 = !DILocalVariable(name: "uid", arg: 3, scope: !178, file: !179, line: 103, type: !182)
!3748 = !DILocation(line: 103, column: 30, scope: !178)
!3749 = !DILocalVariable(name: "gid", arg: 4, scope: !178, file: !179, line: 103, type: !183)
!3750 = !DILocation(line: 103, column: 42, scope: !178)
!3751 = !DILocalVariable(name: "username", arg: 5, scope: !178, file: !179, line: 104, type: !184)
!3752 = !DILocation(line: 104, column: 30, scope: !178)
!3753 = !DILocalVariable(name: "groupname", arg: 6, scope: !178, file: !179, line: 104, type: !184)
!3754 = !DILocation(line: 104, column: 47, scope: !178)
!3755 = !DILocalVariable(name: "error_msg", scope: !178, file: !179, line: 110, type: !69)
!3756 = !DILocation(line: 110, column: 15, scope: !178)
!3757 = !DILocalVariable(name: "pwd", scope: !178, file: !179, line: 111, type: !3758)
!3758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3759, size: 64)
!3759 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "passwd", file: !659, line: 49, size: 384, elements: !3760)
!3760 = !{!3761, !3762, !3763, !3764, !3765, !3766, !3767}
!3761 = !DIDerivedType(tag: DW_TAG_member, name: "pw_name", scope: !3759, file: !659, line: 51, baseType: !6, size: 64)
!3762 = !DIDerivedType(tag: DW_TAG_member, name: "pw_passwd", scope: !3759, file: !659, line: 52, baseType: !6, size: 64, offset: 64)
!3763 = !DIDerivedType(tag: DW_TAG_member, name: "pw_uid", scope: !3759, file: !659, line: 54, baseType: !14, size: 32, offset: 128)
!3764 = !DIDerivedType(tag: DW_TAG_member, name: "pw_gid", scope: !3759, file: !659, line: 55, baseType: !22, size: 32, offset: 160)
!3765 = !DIDerivedType(tag: DW_TAG_member, name: "pw_gecos", scope: !3759, file: !659, line: 56, baseType: !6, size: 64, offset: 192)
!3766 = !DIDerivedType(tag: DW_TAG_member, name: "pw_dir", scope: !3759, file: !659, line: 57, baseType: !6, size: 64, offset: 256)
!3767 = !DIDerivedType(tag: DW_TAG_member, name: "pw_shell", scope: !3759, file: !659, line: 58, baseType: !6, size: 64, offset: 320)
!3768 = !DILocation(line: 111, column: 18, scope: !178)
!3769 = !DILocalVariable(name: "grp", scope: !178, file: !179, line: 112, type: !3770)
!3770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3771, size: 64)
!3771 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group", file: !1233, line: 42, size: 256, elements: !3772)
!3772 = !{!3773, !3774, !3775, !3776}
!3773 = !DIDerivedType(tag: DW_TAG_member, name: "gr_name", scope: !3771, file: !1233, line: 44, baseType: !6, size: 64)
!3774 = !DIDerivedType(tag: DW_TAG_member, name: "gr_passwd", scope: !3771, file: !1233, line: 45, baseType: !6, size: 64, offset: 64)
!3775 = !DIDerivedType(tag: DW_TAG_member, name: "gr_gid", scope: !3771, file: !1233, line: 46, baseType: !22, size: 32, offset: 128)
!3776 = !DIDerivedType(tag: DW_TAG_member, name: "gr_mem", scope: !3771, file: !1233, line: 47, baseType: !184, size: 64, offset: 192)
!3777 = !DILocation(line: 112, column: 17, scope: !178)
!3778 = !DILocalVariable(name: "u", scope: !178, file: !179, line: 113, type: !6)
!3779 = !DILocation(line: 113, column: 9, scope: !178)
!3780 = !DILocalVariable(name: "g", scope: !178, file: !179, line: 114, type: !69)
!3781 = !DILocation(line: 114, column: 15, scope: !178)
!3782 = !DILocalVariable(name: "gname", scope: !178, file: !179, line: 115, type: !6)
!3783 = !DILocation(line: 115, column: 9, scope: !178)
!3784 = !DILocalVariable(name: "unum", scope: !178, file: !179, line: 116, type: !12)
!3785 = !DILocation(line: 116, column: 9, scope: !178)
!3786 = !DILocation(line: 116, column: 17, scope: !178)
!3787 = !DILocation(line: 116, column: 16, scope: !178)
!3788 = !DILocalVariable(name: "gnum", scope: !178, file: !179, line: 117, type: !21)
!3789 = !DILocation(line: 117, column: 9, scope: !178)
!3790 = !DILocation(line: 117, column: 16, scope: !178)
!3791 = !DILocation(line: 117, column: 23, scope: !178)
!3792 = !DILocation(line: 117, column: 22, scope: !178)
!3793 = !DILocation(line: 119, column: 13, scope: !178)
!3794 = !DILocation(line: 120, column: 7, scope: !3795)
!3795 = distinct !DILexicalBlock(scope: !178, file: !179, line: 120, column: 7)
!3796 = !DILocation(line: 120, column: 7, scope: !178)
!3797 = !DILocation(line: 121, column: 6, scope: !3795)
!3798 = !DILocation(line: 121, column: 15, scope: !3795)
!3799 = !DILocation(line: 121, column: 5, scope: !3795)
!3800 = !DILocation(line: 122, column: 7, scope: !3801)
!3801 = distinct !DILexicalBlock(scope: !178, file: !179, line: 122, column: 7)
!3802 = !DILocation(line: 122, column: 7, scope: !178)
!3803 = !DILocation(line: 123, column: 6, scope: !3801)
!3804 = !DILocation(line: 123, column: 16, scope: !3801)
!3805 = !DILocation(line: 123, column: 5, scope: !3801)
!3806 = !DILocation(line: 129, column: 5, scope: !178)
!3807 = !DILocation(line: 130, column: 7, scope: !3808)
!3808 = distinct !DILexicalBlock(scope: !178, file: !179, line: 130, column: 7)
!3809 = !DILocation(line: 130, column: 17, scope: !3808)
!3810 = !DILocation(line: 130, column: 7, scope: !178)
!3811 = !DILocation(line: 132, column: 12, scope: !3812)
!3812 = distinct !DILexicalBlock(scope: !3813, file: !179, line: 132, column: 11)
!3813 = distinct !DILexicalBlock(scope: !3808, file: !179, line: 131, column: 5)
!3814 = !DILocation(line: 132, column: 11, scope: !3812)
!3815 = !DILocation(line: 132, column: 11, scope: !3813)
!3816 = !DILocation(line: 133, column: 22, scope: !3812)
!3817 = !DILocation(line: 133, column: 13, scope: !3812)
!3818 = !DILocation(line: 133, column: 11, scope: !3812)
!3819 = !DILocation(line: 133, column: 9, scope: !3812)
!3820 = !DILocation(line: 134, column: 5, scope: !3813)
!3821 = !DILocalVariable(name: "ulen", scope: !3822, file: !179, line: 137, type: !134)
!3822 = distinct !DILexicalBlock(scope: !3808, file: !179, line: 136, column: 5)
!3823 = !DILocation(line: 137, column: 14, scope: !3822)
!3824 = !DILocation(line: 137, column: 21, scope: !3822)
!3825 = !DILocation(line: 137, column: 33, scope: !3822)
!3826 = !DILocation(line: 137, column: 31, scope: !3822)
!3827 = !DILocation(line: 138, column: 11, scope: !3828)
!3828 = distinct !DILexicalBlock(scope: !3822, file: !179, line: 138, column: 11)
!3829 = !DILocation(line: 138, column: 16, scope: !3828)
!3830 = !DILocation(line: 138, column: 11, scope: !3822)
!3831 = !DILocation(line: 140, column: 24, scope: !3832)
!3832 = distinct !DILexicalBlock(scope: !3828, file: !179, line: 139, column: 9)
!3833 = !DILocation(line: 140, column: 30, scope: !3832)
!3834 = !DILocation(line: 140, column: 35, scope: !3832)
!3835 = !DILocation(line: 140, column: 15, scope: !3832)
!3836 = !DILocation(line: 140, column: 13, scope: !3832)
!3837 = !DILocation(line: 141, column: 11, scope: !3832)
!3838 = !DILocation(line: 141, column: 13, scope: !3832)
!3839 = !DILocation(line: 141, column: 19, scope: !3832)
!3840 = !DILocation(line: 142, column: 9, scope: !3832)
!3841 = !DILocation(line: 145, column: 8, scope: !178)
!3842 = !DILocation(line: 145, column: 18, scope: !178)
!3843 = !DILocation(line: 145, column: 26, scope: !178)
!3844 = !DILocation(line: 145, column: 31, scope: !178)
!3845 = !DILocation(line: 145, column: 41, scope: !178)
!3846 = !DILocation(line: 145, column: 29, scope: !178)
!3847 = !DILocation(line: 145, column: 46, scope: !178)
!3848 = !DILocation(line: 147, column: 10, scope: !178)
!3849 = !DILocation(line: 147, column: 20, scope: !178)
!3850 = !DILocation(line: 145, column: 5, scope: !178)
!3851 = !DILocation(line: 158, column: 7, scope: !3852)
!3852 = distinct !DILexicalBlock(scope: !178, file: !179, line: 158, column: 7)
!3853 = !DILocation(line: 158, column: 9, scope: !3852)
!3854 = !DILocation(line: 158, column: 7, scope: !178)
!3855 = !DILocation(line: 161, column: 15, scope: !3856)
!3856 = distinct !DILexicalBlock(scope: !3852, file: !179, line: 159, column: 5)
!3857 = !DILocation(line: 161, column: 14, scope: !3856)
!3858 = !DILocation(line: 161, column: 17, scope: !3856)
!3859 = !DILocation(line: 161, column: 43, scope: !3856)
!3860 = !DILocation(line: 161, column: 33, scope: !3856)
!3861 = !DILocation(line: 161, column: 11, scope: !3856)
!3862 = !DILocation(line: 162, column: 11, scope: !3863)
!3863 = distinct !DILexicalBlock(scope: !3856, file: !179, line: 162, column: 11)
!3864 = !DILocation(line: 162, column: 15, scope: !3863)
!3865 = !DILocation(line: 162, column: 11, scope: !3856)
!3866 = !DILocalVariable(name: "use_login_group", scope: !3867, file: !179, line: 164, type: !27)
!3867 = distinct !DILexicalBlock(scope: !3863, file: !179, line: 163, column: 9)
!3868 = !DILocation(line: 164, column: 16, scope: !3867)
!3869 = !DILocation(line: 164, column: 35, scope: !3867)
!3870 = !DILocation(line: 164, column: 45, scope: !3867)
!3871 = !DILocation(line: 164, column: 53, scope: !3867)
!3872 = !DILocation(line: 164, column: 56, scope: !3867)
!3873 = !DILocation(line: 164, column: 58, scope: !3867)
!3874 = !DILocation(line: 0, scope: !3867)
!3875 = !DILocation(line: 165, column: 15, scope: !3876)
!3876 = distinct !DILexicalBlock(scope: !3867, file: !179, line: 165, column: 15)
!3877 = !DILocation(line: 165, column: 15, scope: !3867)
!3878 = !DILocation(line: 169, column: 27, scope: !3879)
!3879 = distinct !DILexicalBlock(scope: !3876, file: !179, line: 166, column: 13)
!3880 = !DILocation(line: 169, column: 25, scope: !3879)
!3881 = !DILocation(line: 170, column: 13, scope: !3879)
!3882 = !DILocalVariable(name: "tmp", scope: !3883, file: !179, line: 173, type: !84)
!3883 = distinct !DILexicalBlock(scope: !3876, file: !179, line: 172, column: 13)
!3884 = !DILocation(line: 173, column: 33, scope: !3883)
!3885 = !DILocation(line: 174, column: 29, scope: !3886)
!3886 = distinct !DILexicalBlock(scope: !3883, file: !179, line: 174, column: 19)
!3887 = !DILocation(line: 174, column: 19, scope: !3886)
!3888 = !DILocation(line: 174, column: 52, scope: !3886)
!3889 = !DILocation(line: 175, column: 19, scope: !3886)
!3890 = !DILocation(line: 175, column: 22, scope: !3886)
!3891 = !DILocation(line: 175, column: 26, scope: !3886)
!3892 = !DILocation(line: 175, column: 36, scope: !3886)
!3893 = !DILocation(line: 175, column: 47, scope: !3886)
!3894 = !DILocation(line: 175, column: 39, scope: !3886)
!3895 = !DILocation(line: 175, column: 51, scope: !3886)
!3896 = !DILocation(line: 174, column: 19, scope: !3883)
!3897 = !DILocation(line: 176, column: 24, scope: !3886)
!3898 = !DILocation(line: 176, column: 22, scope: !3886)
!3899 = !DILocation(line: 176, column: 17, scope: !3886)
!3900 = !DILocation(line: 178, column: 29, scope: !3886)
!3901 = !DILocation(line: 178, column: 27, scope: !3886)
!3902 = !DILocation(line: 180, column: 9, scope: !3867)
!3903 = !DILocation(line: 183, column: 18, scope: !3904)
!3904 = distinct !DILexicalBlock(scope: !3863, file: !179, line: 182, column: 9)
!3905 = !DILocation(line: 183, column: 23, scope: !3904)
!3906 = !DILocation(line: 183, column: 16, scope: !3904)
!3907 = !DILocation(line: 184, column: 15, scope: !3908)
!3908 = distinct !DILexicalBlock(scope: !3904, file: !179, line: 184, column: 15)
!3909 = !DILocation(line: 184, column: 17, scope: !3908)
!3910 = !DILocation(line: 184, column: 25, scope: !3908)
!3911 = !DILocation(line: 184, column: 28, scope: !3908)
!3912 = !DILocation(line: 184, column: 38, scope: !3908)
!3913 = !DILocation(line: 184, column: 15, scope: !3904)
!3914 = !DILocalVariable(name: "buf", scope: !3915, file: !179, line: 188, type: !53)
!3915 = distinct !DILexicalBlock(scope: !3908, file: !179, line: 185, column: 13)
!3916 = !DILocation(line: 188, column: 20, scope: !3915)
!3917 = !DILocation(line: 189, column: 22, scope: !3915)
!3918 = !DILocation(line: 189, column: 27, scope: !3915)
!3919 = !DILocation(line: 189, column: 20, scope: !3915)
!3920 = !DILocation(line: 190, column: 31, scope: !3915)
!3921 = !DILocation(line: 190, column: 21, scope: !3915)
!3922 = !DILocation(line: 190, column: 19, scope: !3915)
!3923 = !DILocation(line: 191, column: 32, scope: !3915)
!3924 = !DILocation(line: 191, column: 38, scope: !3915)
!3925 = !DILocation(line: 191, column: 43, scope: !3915)
!3926 = !DILocation(line: 191, column: 64, scope: !3915)
!3927 = !DILocation(line: 191, column: 70, scope: !3915)
!3928 = !DILocation(line: 191, column: 53, scope: !3915)
!3929 = !DILocation(line: 191, column: 23, scope: !3915)
!3930 = !DILocation(line: 191, column: 21, scope: !3915)
!3931 = !DILocation(line: 192, column: 15, scope: !3915)
!3932 = !DILocation(line: 193, column: 13, scope: !3915)
!3933 = !DILocation(line: 195, column: 7, scope: !3856)
!3934 = !DILocation(line: 196, column: 5, scope: !3856)
!3935 = !DILocation(line: 198, column: 7, scope: !3936)
!3936 = distinct !DILexicalBlock(scope: !178, file: !179, line: 198, column: 7)
!3937 = !DILocation(line: 198, column: 9, scope: !3936)
!3938 = !DILocation(line: 198, column: 17, scope: !3936)
!3939 = !DILocation(line: 198, column: 20, scope: !3936)
!3940 = !DILocation(line: 198, column: 30, scope: !3936)
!3941 = !DILocation(line: 198, column: 7, scope: !178)
!3942 = !DILocation(line: 202, column: 15, scope: !3943)
!3943 = distinct !DILexicalBlock(scope: !3936, file: !179, line: 199, column: 5)
!3944 = !DILocation(line: 202, column: 14, scope: !3943)
!3945 = !DILocation(line: 202, column: 17, scope: !3943)
!3946 = !DILocation(line: 202, column: 43, scope: !3943)
!3947 = !DILocation(line: 202, column: 33, scope: !3943)
!3948 = !DILocation(line: 202, column: 11, scope: !3943)
!3949 = !DILocation(line: 203, column: 11, scope: !3950)
!3950 = distinct !DILexicalBlock(scope: !3943, file: !179, line: 203, column: 11)
!3951 = !DILocation(line: 203, column: 15, scope: !3950)
!3952 = !DILocation(line: 203, column: 11, scope: !3943)
!3953 = !DILocalVariable(name: "tmp", scope: !3954, file: !179, line: 205, type: !84)
!3954 = distinct !DILexicalBlock(scope: !3950, file: !179, line: 204, column: 9)
!3955 = !DILocation(line: 205, column: 29, scope: !3954)
!3956 = !DILocation(line: 206, column: 25, scope: !3957)
!3957 = distinct !DILexicalBlock(scope: !3954, file: !179, line: 206, column: 15)
!3958 = !DILocation(line: 206, column: 15, scope: !3957)
!3959 = !DILocation(line: 206, column: 48, scope: !3957)
!3960 = !DILocation(line: 207, column: 15, scope: !3957)
!3961 = !DILocation(line: 207, column: 18, scope: !3957)
!3962 = !DILocation(line: 207, column: 22, scope: !3957)
!3963 = !DILocation(line: 207, column: 32, scope: !3957)
!3964 = !DILocation(line: 207, column: 43, scope: !3957)
!3965 = !DILocation(line: 207, column: 35, scope: !3957)
!3966 = !DILocation(line: 207, column: 47, scope: !3957)
!3967 = !DILocation(line: 206, column: 15, scope: !3954)
!3968 = !DILocation(line: 208, column: 20, scope: !3957)
!3969 = !DILocation(line: 208, column: 18, scope: !3957)
!3970 = !DILocation(line: 208, column: 13, scope: !3957)
!3971 = !DILocation(line: 210, column: 25, scope: !3957)
!3972 = !DILocation(line: 210, column: 23, scope: !3957)
!3973 = !DILocation(line: 211, column: 9, scope: !3954)
!3974 = !DILocation(line: 213, column: 16, scope: !3950)
!3975 = !DILocation(line: 213, column: 21, scope: !3950)
!3976 = !DILocation(line: 213, column: 14, scope: !3950)
!3977 = !DILocation(line: 214, column: 7, scope: !3943)
!3978 = !DILocation(line: 215, column: 24, scope: !3943)
!3979 = !DILocation(line: 215, column: 15, scope: !3943)
!3980 = !DILocation(line: 215, column: 13, scope: !3943)
!3981 = !DILocation(line: 216, column: 5, scope: !3943)
!3982 = !DILocation(line: 218, column: 7, scope: !3983)
!3983 = distinct !DILexicalBlock(scope: !178, file: !179, line: 218, column: 7)
!3984 = !DILocation(line: 218, column: 17, scope: !3983)
!3985 = !DILocation(line: 218, column: 7, scope: !178)
!3986 = !DILocation(line: 220, column: 14, scope: !3987)
!3987 = distinct !DILexicalBlock(scope: !3983, file: !179, line: 219, column: 5)
!3988 = !DILocation(line: 220, column: 8, scope: !3987)
!3989 = !DILocation(line: 220, column: 12, scope: !3987)
!3990 = !DILocation(line: 221, column: 11, scope: !3991)
!3991 = distinct !DILexicalBlock(scope: !3987, file: !179, line: 221, column: 11)
!3992 = !DILocation(line: 221, column: 11, scope: !3987)
!3993 = !DILocation(line: 222, column: 16, scope: !3991)
!3994 = !DILocation(line: 222, column: 10, scope: !3991)
!3995 = !DILocation(line: 222, column: 14, scope: !3991)
!3996 = !DILocation(line: 222, column: 9, scope: !3991)
!3997 = !DILocation(line: 223, column: 11, scope: !3998)
!3998 = distinct !DILexicalBlock(scope: !3987, file: !179, line: 223, column: 11)
!3999 = !DILocation(line: 223, column: 11, scope: !3987)
!4000 = !DILocation(line: 225, column: 23, scope: !4001)
!4001 = distinct !DILexicalBlock(scope: !3998, file: !179, line: 224, column: 9)
!4002 = !DILocation(line: 225, column: 12, scope: !4001)
!4003 = !DILocation(line: 225, column: 21, scope: !4001)
!4004 = !DILocation(line: 226, column: 13, scope: !4001)
!4005 = !DILocation(line: 227, column: 9, scope: !4001)
!4006 = !DILocation(line: 228, column: 11, scope: !4007)
!4007 = distinct !DILexicalBlock(scope: !3987, file: !179, line: 228, column: 11)
!4008 = !DILocation(line: 228, column: 11, scope: !3987)
!4009 = !DILocation(line: 230, column: 24, scope: !4010)
!4010 = distinct !DILexicalBlock(scope: !4007, file: !179, line: 229, column: 9)
!4011 = !DILocation(line: 230, column: 12, scope: !4010)
!4012 = !DILocation(line: 230, column: 22, scope: !4010)
!4013 = !DILocation(line: 231, column: 17, scope: !4010)
!4014 = !DILocation(line: 232, column: 9, scope: !4010)
!4015 = !DILocation(line: 233, column: 5, scope: !3987)
!4016 = !DILocation(line: 235, column: 9, scope: !178)
!4017 = !DILocation(line: 235, column: 3, scope: !178)
!4018 = !DILocation(line: 236, column: 9, scope: !178)
!4019 = !DILocation(line: 236, column: 3, scope: !178)
!4020 = !DILocation(line: 237, column: 10, scope: !178)
!4021 = !DILocation(line: 237, column: 22, scope: !178)
!4022 = !DILocation(line: 237, column: 3, scope: !178)
!4023 = !DILocalVariable(name: "spec", arg: 1, scope: !4024, file: !179, line: 102, type: !69)
!4024 = distinct !DISubprogram(name: "parse_with_separator", scope: !179, file: !179, line: 102, type: !180, scopeLine: 105, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4025, retainedNodes: !4)
!4025 = distinct !DICompileUnit(language: DW_LANG_C99, file: !186, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !187, globals: !4026, nameTableKind: None)
!4026 = !{!4027, !4029, !4031}
!4027 = !DIGlobalVariableExpression(var: !4028, expr: !DIExpression())
!4028 = distinct !DIGlobalVariable(name: "E_invalid_user", scope: !4024, file: !179, line: 106, type: !69, isLocal: true, isDefinition: true)
!4029 = !DIGlobalVariableExpression(var: !4030, expr: !DIExpression())
!4030 = distinct !DIGlobalVariable(name: "E_invalid_group", scope: !4024, file: !179, line: 107, type: !69, isLocal: true, isDefinition: true)
!4031 = !DIGlobalVariableExpression(var: !4032, expr: !DIExpression())
!4032 = distinct !DIGlobalVariable(name: "E_bad_spec", scope: !4024, file: !179, line: 108, type: !69, isLocal: true, isDefinition: true)
!4033 = !DILocalVariable(name: "separator", arg: 2, scope: !4024, file: !179, line: 102, type: !69)
!4034 = !DILocalVariable(name: "uid", arg: 3, scope: !4024, file: !179, line: 103, type: !182)
!4035 = !DILocalVariable(name: "gid", arg: 4, scope: !4024, file: !179, line: 103, type: !183)
!4036 = !DILocalVariable(name: "username", arg: 5, scope: !4024, file: !179, line: 104, type: !184)
!4037 = !DILocalVariable(name: "groupname", arg: 6, scope: !4024, file: !179, line: 104, type: !184)
!4038 = !DILocalVariable(name: "error_msg", scope: !4024, file: !179, line: 110, type: !69)
!4039 = !DILocalVariable(name: "pwd", scope: !4024, file: !179, line: 111, type: !4040)
!4040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4041, size: 64)
!4041 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "passwd", file: !659, line: 49, size: 384, elements: !4042)
!4042 = !{!4043, !4044, !4045, !4046, !4047, !4048, !4049}
!4043 = !DIDerivedType(tag: DW_TAG_member, name: "pw_name", scope: !4041, file: !659, line: 51, baseType: !6, size: 64)
!4044 = !DIDerivedType(tag: DW_TAG_member, name: "pw_passwd", scope: !4041, file: !659, line: 52, baseType: !6, size: 64, offset: 64)
!4045 = !DIDerivedType(tag: DW_TAG_member, name: "pw_uid", scope: !4041, file: !659, line: 54, baseType: !14, size: 32, offset: 128)
!4046 = !DIDerivedType(tag: DW_TAG_member, name: "pw_gid", scope: !4041, file: !659, line: 55, baseType: !22, size: 32, offset: 160)
!4047 = !DIDerivedType(tag: DW_TAG_member, name: "pw_gecos", scope: !4041, file: !659, line: 56, baseType: !6, size: 64, offset: 192)
!4048 = !DIDerivedType(tag: DW_TAG_member, name: "pw_dir", scope: !4041, file: !659, line: 57, baseType: !6, size: 64, offset: 256)
!4049 = !DIDerivedType(tag: DW_TAG_member, name: "pw_shell", scope: !4041, file: !659, line: 58, baseType: !6, size: 64, offset: 320)
!4050 = !DILocalVariable(name: "grp", scope: !4024, file: !179, line: 112, type: !4051)
!4051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4052, size: 64)
!4052 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group", file: !1233, line: 42, size: 256, elements: !4053)
!4053 = !{!4054, !4055, !4056, !4057}
!4054 = !DIDerivedType(tag: DW_TAG_member, name: "gr_name", scope: !4052, file: !1233, line: 44, baseType: !6, size: 64)
!4055 = !DIDerivedType(tag: DW_TAG_member, name: "gr_passwd", scope: !4052, file: !1233, line: 45, baseType: !6, size: 64, offset: 64)
!4056 = !DIDerivedType(tag: DW_TAG_member, name: "gr_gid", scope: !4052, file: !1233, line: 46, baseType: !22, size: 32, offset: 128)
!4057 = !DIDerivedType(tag: DW_TAG_member, name: "gr_mem", scope: !4052, file: !1233, line: 47, baseType: !184, size: 64, offset: 192)
!4058 = !DILocalVariable(name: "u", scope: !4024, file: !179, line: 113, type: !6)
!4059 = !DILocalVariable(name: "g", scope: !4024, file: !179, line: 114, type: !69)
!4060 = !DILocalVariable(name: "gname", scope: !4024, file: !179, line: 115, type: !6)
!4061 = !DILocalVariable(name: "unum", scope: !4024, file: !179, line: 116, type: !12)
!4062 = !DILocalVariable(name: "gnum", scope: !4024, file: !179, line: 117, type: !21)
!4063 = distinct !DISubprogram(name: "version_etc_arn", scope: !4064, file: !4064, line: 61, type: !4065, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !210, retainedNodes: !4)
!4064 = !DIFile(filename: "lib/version-etc.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!4065 = !DISubroutineType(types: !4066)
!4066 = !{null, !4067, !69, !69, !69, !4120, !134}
!4067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4068, size: 64)
!4068 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !4069, line: 7, baseType: !4070)
!4069 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "")
!4070 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4071, line: 49, size: 1728, elements: !4072)
!4071 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "")
!4072 = !{!4073, !4074, !4075, !4076, !4077, !4078, !4079, !4080, !4081, !4082, !4083, !4084, !4085, !4088, !4090, !4091, !4092, !4094, !4095, !4097, !4101, !4104, !4106, !4109, !4112, !4113, !4114, !4115, !4116}
!4073 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !4070, file: !4071, line: 51, baseType: !72, size: 32)
!4074 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !4070, file: !4071, line: 54, baseType: !6, size: 64, offset: 64)
!4075 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !4070, file: !4071, line: 55, baseType: !6, size: 64, offset: 128)
!4076 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !4070, file: !4071, line: 56, baseType: !6, size: 64, offset: 192)
!4077 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !4070, file: !4071, line: 57, baseType: !6, size: 64, offset: 256)
!4078 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !4070, file: !4071, line: 58, baseType: !6, size: 64, offset: 320)
!4079 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !4070, file: !4071, line: 59, baseType: !6, size: 64, offset: 384)
!4080 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !4070, file: !4071, line: 60, baseType: !6, size: 64, offset: 448)
!4081 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !4070, file: !4071, line: 61, baseType: !6, size: 64, offset: 512)
!4082 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !4070, file: !4071, line: 64, baseType: !6, size: 64, offset: 576)
!4083 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !4070, file: !4071, line: 65, baseType: !6, size: 64, offset: 640)
!4084 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !4070, file: !4071, line: 66, baseType: !6, size: 64, offset: 704)
!4085 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !4070, file: !4071, line: 68, baseType: !4086, size: 64, offset: 768)
!4086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4087, size: 64)
!4087 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !4071, line: 36, flags: DIFlagFwdDecl)
!4088 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !4070, file: !4071, line: 70, baseType: !4089, size: 64, offset: 832)
!4089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4070, size: 64)
!4090 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !4070, file: !4071, line: 72, baseType: !72, size: 32, offset: 896)
!4091 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !4070, file: !4071, line: 73, baseType: !72, size: 32, offset: 928)
!4092 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !4070, file: !4071, line: 74, baseType: !4093, size: 64, offset: 960)
!4093 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !15, line: 152, baseType: !981)
!4094 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !4070, file: !4071, line: 77, baseType: !133, size: 16, offset: 1024)
!4095 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !4070, file: !4071, line: 78, baseType: !4096, size: 8, offset: 1040)
!4096 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!4097 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !4070, file: !4071, line: 79, baseType: !4098, size: 8, offset: 1048)
!4098 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 8, elements: !4099)
!4099 = !{!4100}
!4100 = !DISubrange(count: 1)
!4101 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !4070, file: !4071, line: 81, baseType: !4102, size: 64, offset: 1088)
!4102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4103, size: 64)
!4103 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !4071, line: 43, baseType: null)
!4104 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !4070, file: !4071, line: 89, baseType: !4105, size: 64, offset: 1152)
!4105 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !15, line: 153, baseType: !981)
!4106 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !4070, file: !4071, line: 91, baseType: !4107, size: 64, offset: 1216)
!4107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4108, size: 64)
!4108 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !4071, line: 37, flags: DIFlagFwdDecl)
!4109 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !4070, file: !4071, line: 92, baseType: !4110, size: 64, offset: 1280)
!4110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4111, size: 64)
!4111 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !4071, line: 38, flags: DIFlagFwdDecl)
!4112 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !4070, file: !4071, line: 93, baseType: !4089, size: 64, offset: 1344)
!4113 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !4070, file: !4071, line: 94, baseType: !8, size: 64, offset: 1408)
!4114 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !4070, file: !4071, line: 95, baseType: !134, size: 64, offset: 1472)
!4115 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !4070, file: !4071, line: 96, baseType: !72, size: 32, offset: 1536)
!4116 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !4070, file: !4071, line: 98, baseType: !4117, size: 160, offset: 1568)
!4117 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 160, elements: !4118)
!4118 = !{!4119}
!4119 = !DISubrange(count: 20)
!4120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !141, size: 64)
!4121 = !DILocalVariable(name: "stream", arg: 1, scope: !4063, file: !4064, line: 61, type: !4067)
!4122 = !DILocation(line: 61, column: 24, scope: !4063)
!4123 = !DILocalVariable(name: "command_name", arg: 2, scope: !4063, file: !4064, line: 62, type: !69)
!4124 = !DILocation(line: 62, column: 30, scope: !4063)
!4125 = !DILocalVariable(name: "package", arg: 3, scope: !4063, file: !4064, line: 62, type: !69)
!4126 = !DILocation(line: 62, column: 56, scope: !4063)
!4127 = !DILocalVariable(name: "version", arg: 4, scope: !4063, file: !4064, line: 63, type: !69)
!4128 = !DILocation(line: 63, column: 30, scope: !4063)
!4129 = !DILocalVariable(name: "authors", arg: 5, scope: !4063, file: !4064, line: 64, type: !4120)
!4130 = !DILocation(line: 64, column: 39, scope: !4063)
!4131 = !DILocalVariable(name: "n_authors", arg: 6, scope: !4063, file: !4064, line: 64, type: !134)
!4132 = !DILocation(line: 64, column: 55, scope: !4063)
!4133 = !DILocation(line: 66, column: 7, scope: !4134)
!4134 = distinct !DILexicalBlock(scope: !4063, file: !4064, line: 66, column: 7)
!4135 = !DILocation(line: 66, column: 7, scope: !4063)
!4136 = !DILocation(line: 67, column: 14, scope: !4134)
!4137 = !DILocation(line: 67, column: 38, scope: !4134)
!4138 = !DILocation(line: 67, column: 52, scope: !4134)
!4139 = !DILocation(line: 67, column: 61, scope: !4134)
!4140 = !DILocation(line: 67, column: 5, scope: !4134)
!4141 = !DILocation(line: 69, column: 14, scope: !4134)
!4142 = !DILocation(line: 69, column: 33, scope: !4134)
!4143 = !DILocation(line: 69, column: 42, scope: !4134)
!4144 = !DILocation(line: 69, column: 5, scope: !4134)
!4145 = !DILocation(line: 83, column: 12, scope: !4063)
!4146 = !DILocation(line: 83, column: 43, scope: !4063)
!4147 = !DILocation(line: 83, column: 3, scope: !4063)
!4148 = !DILocation(line: 85, column: 3, scope: !4063)
!4149 = !DILocation(line: 88, column: 12, scope: !4063)
!4150 = !DILocation(line: 88, column: 20, scope: !4063)
!4151 = !DILocation(line: 88, column: 3, scope: !4063)
!4152 = !DILocation(line: 95, column: 3, scope: !4063)
!4153 = !DILocation(line: 97, column: 11, scope: !4063)
!4154 = !DILocation(line: 97, column: 3, scope: !4063)
!4155 = !DILocation(line: 102, column: 7, scope: !4156)
!4156 = distinct !DILexicalBlock(scope: !4063, file: !4064, line: 98, column: 5)
!4157 = !DILocation(line: 105, column: 16, scope: !4156)
!4158 = !DILocation(line: 105, column: 24, scope: !4156)
!4159 = !DILocation(line: 105, column: 47, scope: !4156)
!4160 = !DILocation(line: 105, column: 7, scope: !4156)
!4161 = !DILocation(line: 106, column: 7, scope: !4156)
!4162 = !DILocation(line: 109, column: 16, scope: !4156)
!4163 = !DILocation(line: 109, column: 24, scope: !4156)
!4164 = !DILocation(line: 109, column: 54, scope: !4156)
!4165 = !DILocation(line: 109, column: 66, scope: !4156)
!4166 = !DILocation(line: 109, column: 7, scope: !4156)
!4167 = !DILocation(line: 110, column: 7, scope: !4156)
!4168 = !DILocation(line: 113, column: 16, scope: !4156)
!4169 = !DILocation(line: 113, column: 24, scope: !4156)
!4170 = !DILocation(line: 114, column: 16, scope: !4156)
!4171 = !DILocation(line: 114, column: 28, scope: !4156)
!4172 = !DILocation(line: 114, column: 40, scope: !4156)
!4173 = !DILocation(line: 113, column: 7, scope: !4156)
!4174 = !DILocation(line: 115, column: 7, scope: !4156)
!4175 = !DILocation(line: 120, column: 16, scope: !4156)
!4176 = !DILocation(line: 120, column: 24, scope: !4156)
!4177 = !DILocation(line: 121, column: 16, scope: !4156)
!4178 = !DILocation(line: 121, column: 28, scope: !4156)
!4179 = !DILocation(line: 121, column: 40, scope: !4156)
!4180 = !DILocation(line: 121, column: 52, scope: !4156)
!4181 = !DILocation(line: 120, column: 7, scope: !4156)
!4182 = !DILocation(line: 122, column: 7, scope: !4156)
!4183 = !DILocation(line: 127, column: 16, scope: !4156)
!4184 = !DILocation(line: 127, column: 24, scope: !4156)
!4185 = !DILocation(line: 128, column: 16, scope: !4156)
!4186 = !DILocation(line: 128, column: 28, scope: !4156)
!4187 = !DILocation(line: 128, column: 40, scope: !4156)
!4188 = !DILocation(line: 128, column: 52, scope: !4156)
!4189 = !DILocation(line: 128, column: 64, scope: !4156)
!4190 = !DILocation(line: 127, column: 7, scope: !4156)
!4191 = !DILocation(line: 129, column: 7, scope: !4156)
!4192 = !DILocation(line: 134, column: 16, scope: !4156)
!4193 = !DILocation(line: 134, column: 24, scope: !4156)
!4194 = !DILocation(line: 135, column: 16, scope: !4156)
!4195 = !DILocation(line: 135, column: 28, scope: !4156)
!4196 = !DILocation(line: 135, column: 40, scope: !4156)
!4197 = !DILocation(line: 135, column: 52, scope: !4156)
!4198 = !DILocation(line: 135, column: 64, scope: !4156)
!4199 = !DILocation(line: 136, column: 16, scope: !4156)
!4200 = !DILocation(line: 134, column: 7, scope: !4156)
!4201 = !DILocation(line: 137, column: 7, scope: !4156)
!4202 = !DILocation(line: 142, column: 16, scope: !4156)
!4203 = !DILocation(line: 142, column: 24, scope: !4156)
!4204 = !DILocation(line: 143, column: 16, scope: !4156)
!4205 = !DILocation(line: 143, column: 28, scope: !4156)
!4206 = !DILocation(line: 143, column: 40, scope: !4156)
!4207 = !DILocation(line: 143, column: 52, scope: !4156)
!4208 = !DILocation(line: 143, column: 64, scope: !4156)
!4209 = !DILocation(line: 144, column: 16, scope: !4156)
!4210 = !DILocation(line: 144, column: 28, scope: !4156)
!4211 = !DILocation(line: 142, column: 7, scope: !4156)
!4212 = !DILocation(line: 145, column: 7, scope: !4156)
!4213 = !DILocation(line: 150, column: 16, scope: !4156)
!4214 = !DILocation(line: 150, column: 24, scope: !4156)
!4215 = !DILocation(line: 152, column: 17, scope: !4156)
!4216 = !DILocation(line: 152, column: 29, scope: !4156)
!4217 = !DILocation(line: 152, column: 41, scope: !4156)
!4218 = !DILocation(line: 152, column: 53, scope: !4156)
!4219 = !DILocation(line: 152, column: 65, scope: !4156)
!4220 = !DILocation(line: 153, column: 17, scope: !4156)
!4221 = !DILocation(line: 153, column: 29, scope: !4156)
!4222 = !DILocation(line: 153, column: 41, scope: !4156)
!4223 = !DILocation(line: 150, column: 7, scope: !4156)
!4224 = !DILocation(line: 154, column: 7, scope: !4156)
!4225 = !DILocation(line: 159, column: 16, scope: !4156)
!4226 = !DILocation(line: 159, column: 24, scope: !4156)
!4227 = !DILocation(line: 161, column: 16, scope: !4156)
!4228 = !DILocation(line: 161, column: 28, scope: !4156)
!4229 = !DILocation(line: 161, column: 40, scope: !4156)
!4230 = !DILocation(line: 161, column: 52, scope: !4156)
!4231 = !DILocation(line: 161, column: 64, scope: !4156)
!4232 = !DILocation(line: 162, column: 16, scope: !4156)
!4233 = !DILocation(line: 162, column: 28, scope: !4156)
!4234 = !DILocation(line: 162, column: 40, scope: !4156)
!4235 = !DILocation(line: 162, column: 52, scope: !4156)
!4236 = !DILocation(line: 159, column: 7, scope: !4156)
!4237 = !DILocation(line: 163, column: 7, scope: !4156)
!4238 = !DILocation(line: 170, column: 16, scope: !4156)
!4239 = !DILocation(line: 170, column: 24, scope: !4156)
!4240 = !DILocation(line: 172, column: 17, scope: !4156)
!4241 = !DILocation(line: 172, column: 29, scope: !4156)
!4242 = !DILocation(line: 172, column: 41, scope: !4156)
!4243 = !DILocation(line: 172, column: 53, scope: !4156)
!4244 = !DILocation(line: 172, column: 65, scope: !4156)
!4245 = !DILocation(line: 173, column: 17, scope: !4156)
!4246 = !DILocation(line: 173, column: 29, scope: !4156)
!4247 = !DILocation(line: 173, column: 41, scope: !4156)
!4248 = !DILocation(line: 173, column: 53, scope: !4156)
!4249 = !DILocation(line: 170, column: 7, scope: !4156)
!4250 = !DILocation(line: 174, column: 7, scope: !4156)
!4251 = !DILocation(line: 176, column: 1, scope: !4063)
!4252 = !DILocalVariable(name: "stream", arg: 1, scope: !4253, file: !4064, line: 61, type: !4256)
!4253 = distinct !DISubprogram(name: "version_etc_arn", scope: !4064, file: !4064, line: 61, type: !4254, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !4290, retainedNodes: !4)
!4254 = !DISubroutineType(types: !4255)
!4255 = !{null, !4256, !69, !69, !69, !4120, !134}
!4256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4257, size: 64)
!4257 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !4069, line: 7, baseType: !4258)
!4258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4071, line: 49, size: 1728, elements: !4259)
!4259 = !{!4260, !4261, !4262, !4263, !4264, !4265, !4266, !4267, !4268, !4269, !4270, !4271, !4272, !4273, !4275, !4276, !4277, !4278, !4279, !4280, !4281, !4282, !4283, !4284, !4285, !4286, !4287, !4288, !4289}
!4260 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !4258, file: !4071, line: 51, baseType: !72, size: 32)
!4261 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !4258, file: !4071, line: 54, baseType: !6, size: 64, offset: 64)
!4262 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !4258, file: !4071, line: 55, baseType: !6, size: 64, offset: 128)
!4263 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !4258, file: !4071, line: 56, baseType: !6, size: 64, offset: 192)
!4264 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !4258, file: !4071, line: 57, baseType: !6, size: 64, offset: 256)
!4265 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !4258, file: !4071, line: 58, baseType: !6, size: 64, offset: 320)
!4266 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !4258, file: !4071, line: 59, baseType: !6, size: 64, offset: 384)
!4267 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !4258, file: !4071, line: 60, baseType: !6, size: 64, offset: 448)
!4268 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !4258, file: !4071, line: 61, baseType: !6, size: 64, offset: 512)
!4269 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !4258, file: !4071, line: 64, baseType: !6, size: 64, offset: 576)
!4270 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !4258, file: !4071, line: 65, baseType: !6, size: 64, offset: 640)
!4271 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !4258, file: !4071, line: 66, baseType: !6, size: 64, offset: 704)
!4272 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !4258, file: !4071, line: 68, baseType: !4086, size: 64, offset: 768)
!4273 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !4258, file: !4071, line: 70, baseType: !4274, size: 64, offset: 832)
!4274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4258, size: 64)
!4275 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !4258, file: !4071, line: 72, baseType: !72, size: 32, offset: 896)
!4276 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !4258, file: !4071, line: 73, baseType: !72, size: 32, offset: 928)
!4277 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !4258, file: !4071, line: 74, baseType: !4093, size: 64, offset: 960)
!4278 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !4258, file: !4071, line: 77, baseType: !133, size: 16, offset: 1024)
!4279 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !4258, file: !4071, line: 78, baseType: !4096, size: 8, offset: 1040)
!4280 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !4258, file: !4071, line: 79, baseType: !4098, size: 8, offset: 1048)
!4281 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !4258, file: !4071, line: 81, baseType: !4102, size: 64, offset: 1088)
!4282 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !4258, file: !4071, line: 89, baseType: !4105, size: 64, offset: 1152)
!4283 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !4258, file: !4071, line: 91, baseType: !4107, size: 64, offset: 1216)
!4284 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !4258, file: !4071, line: 92, baseType: !4110, size: 64, offset: 1280)
!4285 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !4258, file: !4071, line: 93, baseType: !4274, size: 64, offset: 1344)
!4286 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !4258, file: !4071, line: 94, baseType: !8, size: 64, offset: 1408)
!4287 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !4258, file: !4071, line: 95, baseType: !134, size: 64, offset: 1472)
!4288 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !4258, file: !4071, line: 96, baseType: !72, size: 32, offset: 1536)
!4289 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !4258, file: !4071, line: 98, baseType: !4117, size: 160, offset: 1568)
!4290 = distinct !DICompileUnit(language: DW_LANG_C99, file: !211, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !212, nameTableKind: None)
!4291 = !DILocalVariable(name: "command_name", arg: 2, scope: !4253, file: !4064, line: 62, type: !69)
!4292 = !DILocalVariable(name: "package", arg: 3, scope: !4253, file: !4064, line: 62, type: !69)
!4293 = !DILocalVariable(name: "version", arg: 4, scope: !4253, file: !4064, line: 63, type: !69)
!4294 = !DILocalVariable(name: "authors", arg: 5, scope: !4253, file: !4064, line: 64, type: !4120)
!4295 = !DILocalVariable(name: "n_authors", arg: 6, scope: !4253, file: !4064, line: 64, type: !134)
!4296 = distinct !DISubprogram(name: "version_etc_va", scope: !4064, file: !4064, line: 199, type: !4297, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !210, retainedNodes: !4)
!4297 = !DISubroutineType(types: !4298)
!4298 = !{null, !4067, !69, !69, !69, !4299}
!4299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4300, size: 64)
!4300 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !211, line: 192, size: 192, elements: !4301)
!4301 = !{!4302, !4303, !4304, !4305}
!4302 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !4300, file: !211, line: 192, baseType: !16, size: 32)
!4303 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !4300, file: !211, line: 192, baseType: !16, size: 32, offset: 32)
!4304 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !4300, file: !211, line: 192, baseType: !8, size: 64, offset: 64)
!4305 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !4300, file: !211, line: 192, baseType: !8, size: 64, offset: 128)
!4306 = !DILocalVariable(name: "stream", arg: 1, scope: !4296, file: !4064, line: 199, type: !4067)
!4307 = !DILocation(line: 199, column: 23, scope: !4296)
!4308 = !DILocalVariable(name: "command_name", arg: 2, scope: !4296, file: !4064, line: 200, type: !69)
!4309 = !DILocation(line: 200, column: 29, scope: !4296)
!4310 = !DILocalVariable(name: "package", arg: 3, scope: !4296, file: !4064, line: 200, type: !69)
!4311 = !DILocation(line: 200, column: 55, scope: !4296)
!4312 = !DILocalVariable(name: "version", arg: 4, scope: !4296, file: !4064, line: 201, type: !69)
!4313 = !DILocation(line: 201, column: 29, scope: !4296)
!4314 = !DILocalVariable(name: "authors", arg: 5, scope: !4296, file: !4064, line: 201, type: !4299)
!4315 = !DILocation(line: 201, column: 46, scope: !4296)
!4316 = !DILocalVariable(name: "n_authors", scope: !4296, file: !4064, line: 203, type: !134)
!4317 = !DILocation(line: 203, column: 10, scope: !4296)
!4318 = !DILocalVariable(name: "authtab", scope: !4296, file: !4064, line: 204, type: !4319)
!4319 = !DICompositeType(tag: DW_TAG_array_type, baseType: !69, size: 640, elements: !76)
!4320 = !DILocation(line: 204, column: 15, scope: !4296)
!4321 = !DILocation(line: 206, column: 18, scope: !4322)
!4322 = distinct !DILexicalBlock(scope: !4296, file: !4064, line: 206, column: 3)
!4323 = !DILocation(line: 206, column: 8, scope: !4322)
!4324 = !DILocation(line: 207, column: 8, scope: !4325)
!4325 = distinct !DILexicalBlock(scope: !4322, file: !4064, line: 206, column: 3)
!4326 = !DILocation(line: 207, column: 18, scope: !4325)
!4327 = !DILocation(line: 208, column: 10, scope: !4325)
!4328 = !DILocation(line: 208, column: 35, scope: !4325)
!4329 = !DILocation(line: 208, column: 22, scope: !4325)
!4330 = !DILocation(line: 208, column: 14, scope: !4325)
!4331 = !DILocation(line: 208, column: 33, scope: !4325)
!4332 = !DILocation(line: 208, column: 67, scope: !4325)
!4333 = !DILocation(line: 0, scope: !4325)
!4334 = !DILocation(line: 206, column: 3, scope: !4322)
!4335 = !DILocation(line: 209, column: 17, scope: !4325)
!4336 = !DILocation(line: 206, column: 3, scope: !4325)
!4337 = distinct !{!4337, !4334, !4338}
!4338 = !DILocation(line: 210, column: 5, scope: !4322)
!4339 = !DILocation(line: 211, column: 20, scope: !4296)
!4340 = !DILocation(line: 211, column: 28, scope: !4296)
!4341 = !DILocation(line: 211, column: 42, scope: !4296)
!4342 = !DILocation(line: 211, column: 51, scope: !4296)
!4343 = !DILocation(line: 212, column: 20, scope: !4296)
!4344 = !DILocation(line: 212, column: 29, scope: !4296)
!4345 = !DILocation(line: 211, column: 3, scope: !4296)
!4346 = !DILocation(line: 213, column: 1, scope: !4296)
!4347 = !DILocalVariable(name: "stream", arg: 1, scope: !4348, file: !4064, line: 199, type: !4351)
!4348 = distinct !DISubprogram(name: "version_etc_va", scope: !4064, file: !4064, line: 199, type: !4349, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !4392, retainedNodes: !4)
!4349 = !DISubroutineType(types: !4350)
!4350 = !{null, !4351, !69, !69, !69, !4385}
!4351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4352, size: 64)
!4352 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !4069, line: 7, baseType: !4353)
!4353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4071, line: 49, size: 1728, elements: !4354)
!4354 = !{!4355, !4356, !4357, !4358, !4359, !4360, !4361, !4362, !4363, !4364, !4365, !4366, !4367, !4368, !4370, !4371, !4372, !4373, !4374, !4375, !4376, !4377, !4378, !4379, !4380, !4381, !4382, !4383, !4384}
!4355 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !4353, file: !4071, line: 51, baseType: !72, size: 32)
!4356 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !4353, file: !4071, line: 54, baseType: !6, size: 64, offset: 64)
!4357 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !4353, file: !4071, line: 55, baseType: !6, size: 64, offset: 128)
!4358 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !4353, file: !4071, line: 56, baseType: !6, size: 64, offset: 192)
!4359 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !4353, file: !4071, line: 57, baseType: !6, size: 64, offset: 256)
!4360 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !4353, file: !4071, line: 58, baseType: !6, size: 64, offset: 320)
!4361 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !4353, file: !4071, line: 59, baseType: !6, size: 64, offset: 384)
!4362 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !4353, file: !4071, line: 60, baseType: !6, size: 64, offset: 448)
!4363 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !4353, file: !4071, line: 61, baseType: !6, size: 64, offset: 512)
!4364 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !4353, file: !4071, line: 64, baseType: !6, size: 64, offset: 576)
!4365 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !4353, file: !4071, line: 65, baseType: !6, size: 64, offset: 640)
!4366 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !4353, file: !4071, line: 66, baseType: !6, size: 64, offset: 704)
!4367 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !4353, file: !4071, line: 68, baseType: !4086, size: 64, offset: 768)
!4368 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !4353, file: !4071, line: 70, baseType: !4369, size: 64, offset: 832)
!4369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4353, size: 64)
!4370 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !4353, file: !4071, line: 72, baseType: !72, size: 32, offset: 896)
!4371 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !4353, file: !4071, line: 73, baseType: !72, size: 32, offset: 928)
!4372 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !4353, file: !4071, line: 74, baseType: !4093, size: 64, offset: 960)
!4373 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !4353, file: !4071, line: 77, baseType: !133, size: 16, offset: 1024)
!4374 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !4353, file: !4071, line: 78, baseType: !4096, size: 8, offset: 1040)
!4375 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !4353, file: !4071, line: 79, baseType: !4098, size: 8, offset: 1048)
!4376 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !4353, file: !4071, line: 81, baseType: !4102, size: 64, offset: 1088)
!4377 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !4353, file: !4071, line: 89, baseType: !4105, size: 64, offset: 1152)
!4378 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !4353, file: !4071, line: 91, baseType: !4107, size: 64, offset: 1216)
!4379 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !4353, file: !4071, line: 92, baseType: !4110, size: 64, offset: 1280)
!4380 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !4353, file: !4071, line: 93, baseType: !4369, size: 64, offset: 1344)
!4381 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !4353, file: !4071, line: 94, baseType: !8, size: 64, offset: 1408)
!4382 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !4353, file: !4071, line: 95, baseType: !134, size: 64, offset: 1472)
!4383 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !4353, file: !4071, line: 96, baseType: !72, size: 32, offset: 1536)
!4384 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !4353, file: !4071, line: 98, baseType: !4117, size: 160, offset: 1568)
!4385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4386, size: 64)
!4386 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !211, line: 192, size: 192, elements: !4387)
!4387 = !{!4388, !4389, !4390, !4391}
!4388 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !4386, file: !211, line: 192, baseType: !16, size: 32)
!4389 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !4386, file: !211, line: 192, baseType: !16, size: 32, offset: 32)
!4390 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !4386, file: !211, line: 192, baseType: !8, size: 64, offset: 64)
!4391 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !4386, file: !211, line: 192, baseType: !8, size: 64, offset: 128)
!4392 = distinct !DICompileUnit(language: DW_LANG_C99, file: !211, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !212, nameTableKind: None)
!4393 = !DILocalVariable(name: "command_name", arg: 2, scope: !4348, file: !4064, line: 200, type: !69)
!4394 = !DILocalVariable(name: "package", arg: 3, scope: !4348, file: !4064, line: 200, type: !69)
!4395 = !DILocalVariable(name: "version", arg: 4, scope: !4348, file: !4064, line: 201, type: !69)
!4396 = !DILocalVariable(name: "authors", arg: 5, scope: !4348, file: !4064, line: 201, type: !4385)
!4397 = !DILocalVariable(name: "n_authors", scope: !4348, file: !4064, line: 203, type: !134)
!4398 = !DILocalVariable(name: "authtab", scope: !4348, file: !4064, line: 204, type: !4319)
!4399 = distinct !DISubprogram(name: "version_etc", scope: !4064, file: !4064, line: 230, type: !4400, scopeLine: 233, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !210, retainedNodes: !4)
!4400 = !DISubroutineType(types: !4401)
!4401 = !{null, !4067, !69, !69, !69, null}
!4402 = !DILocalVariable(name: "stream", arg: 1, scope: !4399, file: !4064, line: 230, type: !4067)
!4403 = !DILocation(line: 230, column: 20, scope: !4399)
!4404 = !DILocalVariable(name: "command_name", arg: 2, scope: !4399, file: !4064, line: 231, type: !69)
!4405 = !DILocation(line: 231, column: 26, scope: !4399)
!4406 = !DILocalVariable(name: "package", arg: 3, scope: !4399, file: !4064, line: 231, type: !69)
!4407 = !DILocation(line: 231, column: 52, scope: !4399)
!4408 = !DILocalVariable(name: "version", arg: 4, scope: !4399, file: !4064, line: 232, type: !69)
!4409 = !DILocation(line: 232, column: 26, scope: !4399)
!4410 = !DILocalVariable(name: "authors", scope: !4399, file: !4064, line: 234, type: !4411)
!4411 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !979, line: 52, baseType: !4412)
!4412 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4413, line: 32, baseType: !4414)
!4413 = !DIFile(filename: "/usr/lib/llvm-9/lib/clang/9.0.1/include/stdarg.h", directory: "")
!4414 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !211, line: 234, baseType: !4415)
!4415 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4300, size: 192, elements: !4099)
!4416 = !DILocation(line: 234, column: 11, scope: !4399)
!4417 = !DILocation(line: 236, column: 3, scope: !4399)
!4418 = !DILocation(line: 237, column: 19, scope: !4399)
!4419 = !DILocation(line: 237, column: 27, scope: !4399)
!4420 = !DILocation(line: 237, column: 41, scope: !4399)
!4421 = !DILocation(line: 237, column: 50, scope: !4399)
!4422 = !DILocation(line: 237, column: 59, scope: !4399)
!4423 = !DILocation(line: 237, column: 3, scope: !4399)
!4424 = !DILocation(line: 238, column: 3, scope: !4399)
!4425 = !DILocation(line: 239, column: 1, scope: !4399)
!4426 = !DILocalVariable(name: "stream", arg: 1, scope: !4427, file: !4064, line: 230, type: !4430)
!4427 = distinct !DISubprogram(name: "version_etc", scope: !4064, file: !4064, line: 230, type: !4428, scopeLine: 233, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !4464, retainedNodes: !4)
!4428 = !DISubroutineType(types: !4429)
!4429 = !{null, !4430, !69, !69, !69, null}
!4430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4431, size: 64)
!4431 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !4069, line: 7, baseType: !4432)
!4432 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4071, line: 49, size: 1728, elements: !4433)
!4433 = !{!4434, !4435, !4436, !4437, !4438, !4439, !4440, !4441, !4442, !4443, !4444, !4445, !4446, !4447, !4449, !4450, !4451, !4452, !4453, !4454, !4455, !4456, !4457, !4458, !4459, !4460, !4461, !4462, !4463}
!4434 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !4432, file: !4071, line: 51, baseType: !72, size: 32)
!4435 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !4432, file: !4071, line: 54, baseType: !6, size: 64, offset: 64)
!4436 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !4432, file: !4071, line: 55, baseType: !6, size: 64, offset: 128)
!4437 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !4432, file: !4071, line: 56, baseType: !6, size: 64, offset: 192)
!4438 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !4432, file: !4071, line: 57, baseType: !6, size: 64, offset: 256)
!4439 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !4432, file: !4071, line: 58, baseType: !6, size: 64, offset: 320)
!4440 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !4432, file: !4071, line: 59, baseType: !6, size: 64, offset: 384)
!4441 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !4432, file: !4071, line: 60, baseType: !6, size: 64, offset: 448)
!4442 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !4432, file: !4071, line: 61, baseType: !6, size: 64, offset: 512)
!4443 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !4432, file: !4071, line: 64, baseType: !6, size: 64, offset: 576)
!4444 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !4432, file: !4071, line: 65, baseType: !6, size: 64, offset: 640)
!4445 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !4432, file: !4071, line: 66, baseType: !6, size: 64, offset: 704)
!4446 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !4432, file: !4071, line: 68, baseType: !4086, size: 64, offset: 768)
!4447 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !4432, file: !4071, line: 70, baseType: !4448, size: 64, offset: 832)
!4448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4432, size: 64)
!4449 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !4432, file: !4071, line: 72, baseType: !72, size: 32, offset: 896)
!4450 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !4432, file: !4071, line: 73, baseType: !72, size: 32, offset: 928)
!4451 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !4432, file: !4071, line: 74, baseType: !4093, size: 64, offset: 960)
!4452 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !4432, file: !4071, line: 77, baseType: !133, size: 16, offset: 1024)
!4453 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !4432, file: !4071, line: 78, baseType: !4096, size: 8, offset: 1040)
!4454 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !4432, file: !4071, line: 79, baseType: !4098, size: 8, offset: 1048)
!4455 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !4432, file: !4071, line: 81, baseType: !4102, size: 64, offset: 1088)
!4456 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !4432, file: !4071, line: 89, baseType: !4105, size: 64, offset: 1152)
!4457 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !4432, file: !4071, line: 91, baseType: !4107, size: 64, offset: 1216)
!4458 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !4432, file: !4071, line: 92, baseType: !4110, size: 64, offset: 1280)
!4459 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !4432, file: !4071, line: 93, baseType: !4448, size: 64, offset: 1344)
!4460 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !4432, file: !4071, line: 94, baseType: !8, size: 64, offset: 1408)
!4461 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !4432, file: !4071, line: 95, baseType: !134, size: 64, offset: 1472)
!4462 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !4432, file: !4071, line: 96, baseType: !72, size: 32, offset: 1536)
!4463 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !4432, file: !4071, line: 98, baseType: !4117, size: 160, offset: 1568)
!4464 = distinct !DICompileUnit(language: DW_LANG_C99, file: !211, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !212, nameTableKind: None)
!4465 = !DILocalVariable(name: "command_name", arg: 2, scope: !4427, file: !4064, line: 231, type: !69)
!4466 = !DILocalVariable(name: "package", arg: 3, scope: !4427, file: !4064, line: 231, type: !69)
!4467 = !DILocalVariable(name: "version", arg: 4, scope: !4427, file: !4064, line: 232, type: !69)
!4468 = !DILocalVariable(name: "authors", scope: !4427, file: !4064, line: 234, type: !4469)
!4469 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !979, line: 52, baseType: !4470)
!4470 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4413, line: 32, baseType: !4471)
!4471 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !211, line: 234, baseType: !4472)
!4472 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4473, size: 192, elements: !4099)
!4473 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !211, line: 192, size: 192, elements: !4474)
!4474 = !{!4475, !4476, !4477, !4478}
!4475 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !4473, file: !211, line: 192, baseType: !16, size: 32)
!4476 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !4473, file: !211, line: 192, baseType: !16, size: 32, offset: 32)
!4477 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !4473, file: !211, line: 192, baseType: !8, size: 64, offset: 64)
!4478 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !4473, file: !211, line: 192, baseType: !8, size: 64, offset: 128)
!4479 = distinct !DISubprogram(name: "xmalloc", scope: !4480, file: !4480, line: 39, type: !4481, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !213, retainedNodes: !4)
!4480 = !DIFile(filename: "lib/xmalloc.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!4481 = !DISubroutineType(types: !4482)
!4482 = !{!8, !134}
!4483 = !DILocalVariable(name: "n", arg: 1, scope: !4479, file: !4480, line: 39, type: !134)
!4484 = !DILocation(line: 39, column: 17, scope: !4479)
!4485 = !DILocalVariable(name: "p", scope: !4479, file: !4480, line: 41, type: !8)
!4486 = !DILocation(line: 41, column: 9, scope: !4479)
!4487 = !DILocation(line: 41, column: 21, scope: !4479)
!4488 = !DILocation(line: 41, column: 13, scope: !4479)
!4489 = !DILocation(line: 42, column: 8, scope: !4490)
!4490 = distinct !DILexicalBlock(scope: !4479, file: !4480, line: 42, column: 7)
!4491 = !DILocation(line: 42, column: 10, scope: !4490)
!4492 = !DILocation(line: 42, column: 13, scope: !4490)
!4493 = !DILocation(line: 42, column: 15, scope: !4490)
!4494 = !DILocation(line: 42, column: 7, scope: !4479)
!4495 = !DILocation(line: 43, column: 5, scope: !4490)
!4496 = !DILocation(line: 44, column: 10, scope: !4479)
!4497 = !DILocation(line: 44, column: 3, scope: !4479)
!4498 = !DILocalVariable(name: "n", arg: 1, scope: !4499, file: !4480, line: 39, type: !134)
!4499 = distinct !DISubprogram(name: "xmalloc", scope: !4480, file: !4480, line: 39, type: !4481, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !4500, retainedNodes: !4)
!4500 = distinct !DICompileUnit(language: DW_LANG_C99, file: !214, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !215, nameTableKind: None)
!4501 = !DILocalVariable(name: "p", scope: !4499, file: !4480, line: 41, type: !8)
!4502 = distinct !DISubprogram(name: "xrealloc", scope: !4480, file: !4480, line: 51, type: !4503, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !213, retainedNodes: !4)
!4503 = !DISubroutineType(types: !4504)
!4504 = !{!8, !8, !134}
!4505 = !DILocalVariable(name: "p", arg: 1, scope: !4502, file: !4480, line: 51, type: !8)
!4506 = !DILocation(line: 51, column: 17, scope: !4502)
!4507 = !DILocalVariable(name: "n", arg: 2, scope: !4502, file: !4480, line: 51, type: !134)
!4508 = !DILocation(line: 51, column: 27, scope: !4502)
!4509 = !DILocation(line: 53, column: 8, scope: !4510)
!4510 = distinct !DILexicalBlock(scope: !4502, file: !4480, line: 53, column: 7)
!4511 = !DILocation(line: 53, column: 10, scope: !4510)
!4512 = !DILocation(line: 53, column: 13, scope: !4510)
!4513 = !DILocation(line: 53, column: 7, scope: !4502)
!4514 = !DILocation(line: 57, column: 13, scope: !4515)
!4515 = distinct !DILexicalBlock(scope: !4510, file: !4480, line: 54, column: 5)
!4516 = !DILocation(line: 57, column: 7, scope: !4515)
!4517 = !DILocation(line: 58, column: 7, scope: !4515)
!4518 = !DILocation(line: 61, column: 16, scope: !4502)
!4519 = !DILocation(line: 61, column: 19, scope: !4502)
!4520 = !DILocation(line: 61, column: 7, scope: !4502)
!4521 = !DILocation(line: 61, column: 5, scope: !4502)
!4522 = !DILocation(line: 62, column: 8, scope: !4523)
!4523 = distinct !DILexicalBlock(scope: !4502, file: !4480, line: 62, column: 7)
!4524 = !DILocation(line: 62, column: 10, scope: !4523)
!4525 = !DILocation(line: 62, column: 13, scope: !4523)
!4526 = !DILocation(line: 62, column: 7, scope: !4502)
!4527 = !DILocation(line: 63, column: 5, scope: !4523)
!4528 = !DILocation(line: 64, column: 10, scope: !4502)
!4529 = !DILocation(line: 64, column: 3, scope: !4502)
!4530 = !DILocation(line: 65, column: 1, scope: !4502)
!4531 = !DILocalVariable(name: "p", arg: 1, scope: !4532, file: !4480, line: 51, type: !8)
!4532 = distinct !DISubprogram(name: "xrealloc", scope: !4480, file: !4480, line: 51, type: !4503, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !4533, retainedNodes: !4)
!4533 = distinct !DICompileUnit(language: DW_LANG_C99, file: !214, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !215, nameTableKind: None)
!4534 = !DILocalVariable(name: "n", arg: 2, scope: !4532, file: !4480, line: 51, type: !134)
!4535 = distinct !DISubprogram(name: "xcharalloc", scope: !4536, file: !4536, line: 216, type: !4537, scopeLine: 217, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !213, retainedNodes: !4)
!4536 = !DIFile(filename: "./lib/xalloc.h", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!4537 = !DISubroutineType(types: !4538)
!4538 = !{!6, !134}
!4539 = !DILocalVariable(name: "n", arg: 1, scope: !4535, file: !4536, line: 216, type: !134)
!4540 = !DILocation(line: 216, column: 20, scope: !4535)
!4541 = !DILocation(line: 218, column: 10, scope: !4535)
!4542 = !DILocation(line: 218, column: 3, scope: !4535)
!4543 = !DILocalVariable(name: "n", arg: 1, scope: !4544, file: !4536, line: 216, type: !134)
!4544 = distinct !DISubprogram(name: "xcharalloc", scope: !4536, file: !4536, line: 216, type: !4537, scopeLine: 217, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !4545, retainedNodes: !4)
!4545 = distinct !DICompileUnit(language: DW_LANG_C99, file: !214, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !215, nameTableKind: None)
!4546 = distinct !DISubprogram(name: "xmemdup", scope: !4480, file: !4480, line: 111, type: !4547, scopeLine: 112, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !213, retainedNodes: !4)
!4547 = !DISubroutineType(types: !4548)
!4548 = !{!8, !4549, !134}
!4549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4550, size: 64)
!4550 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!4551 = !DILocalVariable(name: "p", arg: 1, scope: !4546, file: !4480, line: 111, type: !4549)
!4552 = !DILocation(line: 111, column: 22, scope: !4546)
!4553 = !DILocalVariable(name: "s", arg: 2, scope: !4546, file: !4480, line: 111, type: !134)
!4554 = !DILocation(line: 111, column: 32, scope: !4546)
!4555 = !DILocation(line: 113, column: 27, scope: !4546)
!4556 = !DILocation(line: 113, column: 18, scope: !4546)
!4557 = !DILocation(line: 113, column: 31, scope: !4546)
!4558 = !DILocation(line: 113, column: 34, scope: !4546)
!4559 = !DILocation(line: 113, column: 10, scope: !4546)
!4560 = !DILocation(line: 113, column: 3, scope: !4546)
!4561 = !DILocalVariable(name: "p", arg: 1, scope: !4562, file: !4480, line: 111, type: !4549)
!4562 = distinct !DISubprogram(name: "xmemdup", scope: !4480, file: !4480, line: 111, type: !4547, scopeLine: 112, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !4563, retainedNodes: !4)
!4563 = distinct !DICompileUnit(language: DW_LANG_C99, file: !214, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !215, nameTableKind: None)
!4564 = !DILocalVariable(name: "s", arg: 2, scope: !4562, file: !4480, line: 111, type: !134)
!4565 = distinct !DISubprogram(name: "xstrdup", scope: !4480, file: !4480, line: 119, type: !3476, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !213, retainedNodes: !4)
!4566 = !DILocalVariable(name: "string", arg: 1, scope: !4565, file: !4480, line: 119, type: !69)
!4567 = !DILocation(line: 119, column: 22, scope: !4565)
!4568 = !DILocation(line: 121, column: 19, scope: !4565)
!4569 = !DILocation(line: 121, column: 35, scope: !4565)
!4570 = !DILocation(line: 121, column: 27, scope: !4565)
!4571 = !DILocation(line: 121, column: 43, scope: !4565)
!4572 = !DILocation(line: 121, column: 10, scope: !4565)
!4573 = !DILocation(line: 121, column: 3, scope: !4565)
!4574 = !DILocalVariable(name: "string", arg: 1, scope: !4575, file: !4480, line: 119, type: !69)
!4575 = distinct !DISubprogram(name: "xstrdup", scope: !4480, file: !4480, line: 119, type: !3476, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !4576, retainedNodes: !4)
!4576 = distinct !DICompileUnit(language: DW_LANG_C99, file: !214, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !215, nameTableKind: None)
!4577 = distinct !DISubprogram(name: "xalloc_die", scope: !4578, file: !4578, line: 32, type: !1794, scopeLine: 33, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !216, retainedNodes: !4)
!4578 = !DIFile(filename: "lib/xalloc-die.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!4579 = !DILocation(line: 34, column: 10, scope: !4577)
!4580 = !DILocation(line: 34, column: 33, scope: !4577)
!4581 = !DILocation(line: 34, column: 3, scope: !4577)
!4582 = !DILocation(line: 40, column: 3, scope: !4577)
!4583 = distinct !DISubprogram(name: "xgetgroups", scope: !4584, file: !4584, line: 31, type: !4585, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !218, retainedNodes: !4)
!4584 = !DIFile(filename: "lib/xgetgroups.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!4585 = !DISubroutineType(types: !4586)
!4586 = !{!72, !69, !21, !4587}
!4587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !183, size: 64)
!4588 = !DILocalVariable(name: "username", arg: 1, scope: !4583, file: !4584, line: 31, type: !69)
!4589 = !DILocation(line: 31, column: 25, scope: !4583)
!4590 = !DILocalVariable(name: "gid", arg: 2, scope: !4583, file: !4584, line: 31, type: !21)
!4591 = !DILocation(line: 31, column: 41, scope: !4583)
!4592 = !DILocalVariable(name: "groups", arg: 3, scope: !4583, file: !4584, line: 31, type: !4587)
!4593 = !DILocation(line: 31, column: 54, scope: !4583)
!4594 = !DILocalVariable(name: "result", scope: !4583, file: !4584, line: 33, type: !72)
!4595 = !DILocation(line: 33, column: 7, scope: !4583)
!4596 = !DILocation(line: 33, column: 28, scope: !4583)
!4597 = !DILocation(line: 33, column: 38, scope: !4583)
!4598 = !DILocation(line: 33, column: 43, scope: !4583)
!4599 = !DILocation(line: 33, column: 16, scope: !4583)
!4600 = !DILocation(line: 34, column: 7, scope: !4601)
!4601 = distinct !DILexicalBlock(scope: !4583, file: !4584, line: 34, column: 7)
!4602 = !DILocation(line: 34, column: 14, scope: !4601)
!4603 = !DILocation(line: 34, column: 20, scope: !4601)
!4604 = !DILocation(line: 34, column: 23, scope: !4601)
!4605 = !DILocation(line: 34, column: 29, scope: !4601)
!4606 = !DILocation(line: 34, column: 7, scope: !4583)
!4607 = !DILocation(line: 35, column: 5, scope: !4601)
!4608 = !DILocation(line: 36, column: 10, scope: !4583)
!4609 = !DILocation(line: 36, column: 3, scope: !4583)
!4610 = !DILocalVariable(name: "username", arg: 1, scope: !4611, file: !4584, line: 31, type: !69)
!4611 = distinct !DISubprogram(name: "xgetgroups", scope: !4584, file: !4584, line: 31, type: !4585, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !4612, retainedNodes: !4)
!4612 = distinct !DICompileUnit(language: DW_LANG_C99, file: !219, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, nameTableKind: None)
!4613 = !DILocalVariable(name: "gid", arg: 2, scope: !4611, file: !4584, line: 31, type: !21)
!4614 = !DILocalVariable(name: "groups", arg: 3, scope: !4611, file: !4584, line: 31, type: !4587)
!4615 = !DILocalVariable(name: "result", scope: !4611, file: !4584, line: 33, type: !72)
!4616 = distinct !DISubprogram(name: "xstrtoul", scope: !4617, file: !4617, line: 76, type: !4618, scopeLine: 78, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !220, retainedNodes: !4)
!4617 = !DIFile(filename: "./lib/xstrtol.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!4618 = !DISubroutineType(types: !4619)
!4619 = !{!4620, !69, !184, !72, !4621, !69}
!4620 = !DIDerivedType(tag: DW_TAG_typedef, name: "strtol_error", file: !224, line: 38, baseType: !223)
!4621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !84, size: 64)
!4622 = !DILocalVariable(name: "s", arg: 1, scope: !4616, file: !4617, line: 76, type: !69)
!4623 = !DILocation(line: 76, column: 24, scope: !4616)
!4624 = !DILocalVariable(name: "ptr", arg: 2, scope: !4616, file: !4617, line: 76, type: !184)
!4625 = !DILocation(line: 76, column: 34, scope: !4616)
!4626 = !DILocalVariable(name: "strtol_base", arg: 3, scope: !4616, file: !4617, line: 76, type: !72)
!4627 = !DILocation(line: 76, column: 43, scope: !4616)
!4628 = !DILocalVariable(name: "val", arg: 4, scope: !4616, file: !4617, line: 77, type: !4621)
!4629 = !DILocation(line: 77, column: 24, scope: !4616)
!4630 = !DILocalVariable(name: "valid_suffixes", arg: 5, scope: !4616, file: !4617, line: 77, type: !69)
!4631 = !DILocation(line: 77, column: 41, scope: !4616)
!4632 = !DILocalVariable(name: "t_ptr", scope: !4616, file: !4617, line: 79, type: !6)
!4633 = !DILocation(line: 79, column: 9, scope: !4616)
!4634 = !DILocalVariable(name: "p", scope: !4616, file: !4617, line: 80, type: !184)
!4635 = !DILocation(line: 80, column: 10, scope: !4616)
!4636 = !DILocalVariable(name: "tmp", scope: !4616, file: !4617, line: 81, type: !84)
!4637 = !DILocation(line: 81, column: 14, scope: !4616)
!4638 = !DILocalVariable(name: "err", scope: !4616, file: !4617, line: 82, type: !4620)
!4639 = !DILocation(line: 82, column: 16, scope: !4616)
!4640 = !DILocation(line: 84, column: 3, scope: !4641)
!4641 = distinct !DILexicalBlock(scope: !4642, file: !4617, line: 84, column: 3)
!4642 = distinct !DILexicalBlock(scope: !4616, file: !4617, line: 84, column: 3)
!4643 = !DILocation(line: 84, column: 3, scope: !4642)
!4644 = !DILocation(line: 86, column: 8, scope: !4616)
!4645 = !DILocation(line: 86, column: 14, scope: !4616)
!4646 = !DILocation(line: 86, column: 5, scope: !4616)
!4647 = !DILocation(line: 88, column: 3, scope: !4616)
!4648 = !DILocation(line: 88, column: 9, scope: !4616)
!4649 = !DILocalVariable(name: "q", scope: !4650, file: !4617, line: 92, type: !69)
!4650 = distinct !DILexicalBlock(scope: !4651, file: !4617, line: 91, column: 5)
!4651 = distinct !DILexicalBlock(scope: !4616, file: !4617, line: 90, column: 7)
!4652 = !DILocation(line: 92, column: 19, scope: !4650)
!4653 = !DILocation(line: 92, column: 23, scope: !4650)
!4654 = !DILocalVariable(name: "ch", scope: !4650, file: !4617, line: 93, type: !240)
!4655 = !DILocation(line: 93, column: 21, scope: !4650)
!4656 = !DILocation(line: 93, column: 27, scope: !4650)
!4657 = !DILocation(line: 93, column: 26, scope: !4650)
!4658 = !DILocation(line: 94, column: 7, scope: !4650)
!4659 = !DILocation(line: 94, column: 14, scope: !4650)
!4660 = !DILocation(line: 95, column: 15, scope: !4650)
!4661 = !DILocation(line: 95, column: 14, scope: !4650)
!4662 = !DILocation(line: 95, column: 12, scope: !4650)
!4663 = distinct !{!4663, !4658, !4664}
!4664 = !DILocation(line: 95, column: 17, scope: !4650)
!4665 = !DILocation(line: 96, column: 11, scope: !4666)
!4666 = distinct !DILexicalBlock(scope: !4650, file: !4617, line: 96, column: 11)
!4667 = !DILocation(line: 96, column: 14, scope: !4666)
!4668 = !DILocation(line: 96, column: 11, scope: !4650)
!4669 = !DILocation(line: 97, column: 9, scope: !4666)
!4670 = !DILocation(line: 100, column: 19, scope: !4616)
!4671 = !DILocation(line: 100, column: 22, scope: !4616)
!4672 = !DILocation(line: 100, column: 25, scope: !4616)
!4673 = !DILocation(line: 100, column: 9, scope: !4616)
!4674 = !DILocation(line: 100, column: 7, scope: !4616)
!4675 = !DILocation(line: 102, column: 8, scope: !4676)
!4676 = distinct !DILexicalBlock(scope: !4616, file: !4617, line: 102, column: 7)
!4677 = !DILocation(line: 102, column: 7, scope: !4676)
!4678 = !DILocation(line: 102, column: 13, scope: !4676)
!4679 = !DILocation(line: 102, column: 10, scope: !4676)
!4680 = !DILocation(line: 102, column: 7, scope: !4616)
!4681 = !DILocation(line: 106, column: 11, scope: !4682)
!4682 = distinct !DILexicalBlock(scope: !4683, file: !4617, line: 106, column: 11)
!4683 = distinct !DILexicalBlock(scope: !4676, file: !4617, line: 103, column: 5)
!4684 = !DILocation(line: 106, column: 26, scope: !4682)
!4685 = !DILocation(line: 106, column: 31, scope: !4682)
!4686 = !DILocation(line: 106, column: 30, scope: !4682)
!4687 = !DILocation(line: 106, column: 29, scope: !4682)
!4688 = !DILocation(line: 106, column: 33, scope: !4682)
!4689 = !DILocation(line: 106, column: 44, scope: !4682)
!4690 = !DILocation(line: 106, column: 62, scope: !4682)
!4691 = !DILocation(line: 106, column: 61, scope: !4682)
!4692 = !DILocation(line: 106, column: 60, scope: !4682)
!4693 = !DILocation(line: 106, column: 36, scope: !4682)
!4694 = !DILocation(line: 106, column: 11, scope: !4683)
!4695 = !DILocation(line: 107, column: 13, scope: !4682)
!4696 = !DILocation(line: 107, column: 9, scope: !4682)
!4697 = !DILocation(line: 109, column: 9, scope: !4682)
!4698 = !DILocation(line: 110, column: 5, scope: !4683)
!4699 = !DILocation(line: 111, column: 12, scope: !4700)
!4700 = distinct !DILexicalBlock(scope: !4676, file: !4617, line: 111, column: 12)
!4701 = !DILocation(line: 111, column: 18, scope: !4700)
!4702 = !DILocation(line: 111, column: 12, scope: !4676)
!4703 = !DILocation(line: 113, column: 11, scope: !4704)
!4704 = distinct !DILexicalBlock(scope: !4705, file: !4617, line: 113, column: 11)
!4705 = distinct !DILexicalBlock(scope: !4700, file: !4617, line: 112, column: 5)
!4706 = !DILocation(line: 113, column: 17, scope: !4704)
!4707 = !DILocation(line: 113, column: 11, scope: !4705)
!4708 = !DILocation(line: 114, column: 9, scope: !4704)
!4709 = !DILocation(line: 115, column: 11, scope: !4705)
!4710 = !DILocation(line: 116, column: 5, scope: !4705)
!4711 = !DILocation(line: 121, column: 8, scope: !4712)
!4712 = distinct !DILexicalBlock(scope: !4616, file: !4617, line: 121, column: 7)
!4713 = !DILocation(line: 121, column: 7, scope: !4616)
!4714 = !DILocation(line: 123, column: 14, scope: !4715)
!4715 = distinct !DILexicalBlock(scope: !4712, file: !4617, line: 122, column: 5)
!4716 = !DILocation(line: 123, column: 8, scope: !4715)
!4717 = !DILocation(line: 123, column: 12, scope: !4715)
!4718 = !DILocation(line: 124, column: 14, scope: !4715)
!4719 = !DILocation(line: 124, column: 7, scope: !4715)
!4720 = !DILocation(line: 127, column: 9, scope: !4721)
!4721 = distinct !DILexicalBlock(scope: !4616, file: !4617, line: 127, column: 7)
!4722 = !DILocation(line: 127, column: 8, scope: !4721)
!4723 = !DILocation(line: 127, column: 7, scope: !4721)
!4724 = !DILocation(line: 127, column: 11, scope: !4721)
!4725 = !DILocation(line: 127, column: 7, scope: !4616)
!4726 = !DILocalVariable(name: "base", scope: !4727, file: !4617, line: 129, type: !72)
!4727 = distinct !DILexicalBlock(scope: !4721, file: !4617, line: 128, column: 5)
!4728 = !DILocation(line: 129, column: 11, scope: !4727)
!4729 = !DILocalVariable(name: "suffixes", scope: !4727, file: !4617, line: 130, type: !72)
!4730 = !DILocation(line: 130, column: 11, scope: !4727)
!4731 = !DILocalVariable(name: "overflow", scope: !4727, file: !4617, line: 131, type: !4620)
!4732 = !DILocation(line: 131, column: 20, scope: !4727)
!4733 = !DILocation(line: 133, column: 20, scope: !4734)
!4734 = distinct !DILexicalBlock(scope: !4727, file: !4617, line: 133, column: 11)
!4735 = !DILocation(line: 133, column: 38, scope: !4734)
!4736 = !DILocation(line: 133, column: 37, scope: !4734)
!4737 = !DILocation(line: 133, column: 36, scope: !4734)
!4738 = !DILocation(line: 133, column: 12, scope: !4734)
!4739 = !DILocation(line: 133, column: 11, scope: !4727)
!4740 = !DILocation(line: 135, column: 18, scope: !4741)
!4741 = distinct !DILexicalBlock(scope: !4734, file: !4617, line: 134, column: 9)
!4742 = !DILocation(line: 135, column: 12, scope: !4741)
!4743 = !DILocation(line: 135, column: 16, scope: !4741)
!4744 = !DILocation(line: 136, column: 18, scope: !4741)
!4745 = !DILocation(line: 136, column: 22, scope: !4741)
!4746 = !DILocation(line: 136, column: 11, scope: !4741)
!4747 = !DILocation(line: 139, column: 17, scope: !4727)
!4748 = !DILocation(line: 139, column: 16, scope: !4727)
!4749 = !DILocation(line: 139, column: 15, scope: !4727)
!4750 = !DILocation(line: 139, column: 7, scope: !4727)
!4751 = !DILocation(line: 151, column: 23, scope: !4752)
!4752 = distinct !DILexicalBlock(scope: !4753, file: !4617, line: 151, column: 15)
!4753 = distinct !DILexicalBlock(scope: !4727, file: !4617, line: 140, column: 9)
!4754 = !DILocation(line: 151, column: 15, scope: !4752)
!4755 = !DILocation(line: 151, column: 15, scope: !4753)
!4756 = !DILocation(line: 152, column: 21, scope: !4752)
!4757 = !DILocation(line: 152, column: 13, scope: !4752)
!4758 = !DILocation(line: 155, column: 21, scope: !4759)
!4759 = distinct !DILexicalBlock(scope: !4760, file: !4617, line: 155, column: 21)
!4760 = distinct !DILexicalBlock(scope: !4752, file: !4617, line: 153, column: 15)
!4761 = !DILocation(line: 155, column: 29, scope: !4759)
!4762 = !DILocation(line: 155, column: 21, scope: !4760)
!4763 = !DILocation(line: 156, column: 28, scope: !4759)
!4764 = !DILocation(line: 156, column: 19, scope: !4759)
!4765 = !DILocation(line: 157, column: 17, scope: !4760)
!4766 = !DILocation(line: 161, column: 22, scope: !4760)
!4767 = !DILocation(line: 162, column: 25, scope: !4760)
!4768 = !DILocation(line: 163, column: 17, scope: !4760)
!4769 = !DILocation(line: 164, column: 15, scope: !4760)
!4770 = !DILocation(line: 165, column: 9, scope: !4753)
!4771 = !DILocation(line: 167, column: 17, scope: !4727)
!4772 = !DILocation(line: 167, column: 16, scope: !4727)
!4773 = !DILocation(line: 167, column: 15, scope: !4727)
!4774 = !DILocation(line: 167, column: 7, scope: !4727)
!4775 = !DILocation(line: 170, column: 22, scope: !4776)
!4776 = distinct !DILexicalBlock(scope: !4727, file: !4617, line: 168, column: 9)
!4777 = !DILocation(line: 170, column: 20, scope: !4776)
!4778 = !DILocation(line: 171, column: 11, scope: !4776)
!4779 = !DILocation(line: 177, column: 22, scope: !4776)
!4780 = !DILocation(line: 177, column: 20, scope: !4776)
!4781 = !DILocation(line: 178, column: 11, scope: !4776)
!4782 = !DILocation(line: 181, column: 20, scope: !4776)
!4783 = !DILocation(line: 182, column: 11, scope: !4776)
!4784 = !DILocation(line: 185, column: 48, scope: !4776)
!4785 = !DILocation(line: 185, column: 22, scope: !4776)
!4786 = !DILocation(line: 185, column: 20, scope: !4776)
!4787 = !DILocation(line: 186, column: 11, scope: !4776)
!4788 = !DILocation(line: 190, column: 48, scope: !4776)
!4789 = !DILocation(line: 190, column: 22, scope: !4776)
!4790 = !DILocation(line: 190, column: 20, scope: !4776)
!4791 = !DILocation(line: 191, column: 11, scope: !4776)
!4792 = !DILocation(line: 195, column: 48, scope: !4776)
!4793 = !DILocation(line: 195, column: 22, scope: !4776)
!4794 = !DILocation(line: 195, column: 20, scope: !4776)
!4795 = !DILocation(line: 196, column: 11, scope: !4776)
!4796 = !DILocation(line: 200, column: 48, scope: !4776)
!4797 = !DILocation(line: 200, column: 22, scope: !4776)
!4798 = !DILocation(line: 200, column: 20, scope: !4776)
!4799 = !DILocation(line: 201, column: 11, scope: !4776)
!4800 = !DILocation(line: 204, column: 48, scope: !4776)
!4801 = !DILocation(line: 204, column: 22, scope: !4776)
!4802 = !DILocation(line: 204, column: 20, scope: !4776)
!4803 = !DILocation(line: 205, column: 11, scope: !4776)
!4804 = !DILocation(line: 209, column: 48, scope: !4776)
!4805 = !DILocation(line: 209, column: 22, scope: !4776)
!4806 = !DILocation(line: 209, column: 20, scope: !4776)
!4807 = !DILocation(line: 210, column: 11, scope: !4776)
!4808 = !DILocation(line: 213, column: 22, scope: !4776)
!4809 = !DILocation(line: 213, column: 20, scope: !4776)
!4810 = !DILocation(line: 214, column: 11, scope: !4776)
!4811 = !DILocation(line: 217, column: 48, scope: !4776)
!4812 = !DILocation(line: 217, column: 22, scope: !4776)
!4813 = !DILocation(line: 217, column: 20, scope: !4776)
!4814 = !DILocation(line: 218, column: 11, scope: !4776)
!4815 = !DILocation(line: 221, column: 48, scope: !4776)
!4816 = !DILocation(line: 221, column: 22, scope: !4776)
!4817 = !DILocation(line: 221, column: 20, scope: !4776)
!4818 = !DILocation(line: 222, column: 11, scope: !4776)
!4819 = !DILocation(line: 225, column: 18, scope: !4776)
!4820 = !DILocation(line: 225, column: 12, scope: !4776)
!4821 = !DILocation(line: 225, column: 16, scope: !4776)
!4822 = !DILocation(line: 226, column: 18, scope: !4776)
!4823 = !DILocation(line: 226, column: 22, scope: !4776)
!4824 = !DILocation(line: 226, column: 11, scope: !4776)
!4825 = !DILocation(line: 229, column: 14, scope: !4727)
!4826 = !DILocation(line: 229, column: 11, scope: !4727)
!4827 = !DILocation(line: 230, column: 13, scope: !4727)
!4828 = !DILocation(line: 230, column: 8, scope: !4727)
!4829 = !DILocation(line: 230, column: 10, scope: !4727)
!4830 = !DILocation(line: 231, column: 13, scope: !4831)
!4831 = distinct !DILexicalBlock(scope: !4727, file: !4617, line: 231, column: 11)
!4832 = !DILocation(line: 231, column: 12, scope: !4831)
!4833 = !DILocation(line: 231, column: 11, scope: !4831)
!4834 = !DILocation(line: 231, column: 11, scope: !4727)
!4835 = !DILocation(line: 232, column: 13, scope: !4831)
!4836 = !DILocation(line: 232, column: 9, scope: !4831)
!4837 = !DILocation(line: 233, column: 5, scope: !4727)
!4838 = !DILocation(line: 235, column: 10, scope: !4616)
!4839 = !DILocation(line: 235, column: 4, scope: !4616)
!4840 = !DILocation(line: 235, column: 8, scope: !4616)
!4841 = !DILocation(line: 236, column: 10, scope: !4616)
!4842 = !DILocation(line: 236, column: 3, scope: !4616)
!4843 = !DILocation(line: 237, column: 1, scope: !4616)
!4844 = !DILocalVariable(name: "s", arg: 1, scope: !4845, file: !4617, line: 76, type: !69)
!4845 = distinct !DISubprogram(name: "xstrtoul", scope: !4617, file: !4617, line: 76, type: !4618, scopeLine: 78, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !4846, retainedNodes: !4)
!4846 = distinct !DICompileUnit(language: DW_LANG_C99, file: !221, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !222, retainedTypes: !231, nameTableKind: None)
!4847 = !DILocalVariable(name: "ptr", arg: 2, scope: !4845, file: !4617, line: 76, type: !184)
!4848 = !DILocalVariable(name: "strtol_base", arg: 3, scope: !4845, file: !4617, line: 76, type: !72)
!4849 = !DILocalVariable(name: "val", arg: 4, scope: !4845, file: !4617, line: 77, type: !4621)
!4850 = !DILocalVariable(name: "valid_suffixes", arg: 5, scope: !4845, file: !4617, line: 77, type: !69)
!4851 = !DILocalVariable(name: "t_ptr", scope: !4845, file: !4617, line: 79, type: !6)
!4852 = !DILocalVariable(name: "p", scope: !4845, file: !4617, line: 80, type: !184)
!4853 = !DILocalVariable(name: "tmp", scope: !4845, file: !4617, line: 81, type: !84)
!4854 = !DILocalVariable(name: "err", scope: !4845, file: !4617, line: 82, type: !4620)
!4855 = !DILocalVariable(name: "q", scope: !4856, file: !4617, line: 92, type: !69)
!4856 = distinct !DILexicalBlock(scope: !4857, file: !4617, line: 91, column: 5)
!4857 = distinct !DILexicalBlock(scope: !4858, file: !4617, line: 90, column: 7)
!4858 = distinct !DISubprogram(name: "xstrtoul", scope: !4617, file: !4617, line: 76, type: !4618, scopeLine: 78, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !4859, retainedNodes: !4)
!4859 = distinct !DICompileUnit(language: DW_LANG_C99, file: !221, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !222, retainedTypes: !231, nameTableKind: None)
!4860 = !DILocalVariable(name: "ch", scope: !4856, file: !4617, line: 93, type: !240)
!4861 = !DILocalVariable(name: "suffixes", scope: !4862, file: !4617, line: 130, type: !72)
!4862 = distinct !DILexicalBlock(scope: !4863, file: !4617, line: 128, column: 5)
!4863 = distinct !DILexicalBlock(scope: !4864, file: !4617, line: 127, column: 7)
!4864 = distinct !DISubprogram(name: "xstrtoul", scope: !4617, file: !4617, line: 76, type: !4618, scopeLine: 78, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !4865, retainedNodes: !4)
!4865 = distinct !DICompileUnit(language: DW_LANG_C99, file: !221, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !222, retainedTypes: !231, nameTableKind: None)
!4866 = !DILocalVariable(name: "overflow", scope: !4862, file: !4617, line: 131, type: !4620)
!4867 = distinct !DISubprogram(name: "bkm_scale", scope: !4617, file: !4617, line: 48, type: !4868, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !220, retainedNodes: !4)
!4868 = !DISubroutineType(types: !4869)
!4869 = !{!4620, !4621, !72}
!4870 = !DILocalVariable(name: "x", arg: 1, scope: !4867, file: !4617, line: 48, type: !4621)
!4871 = !DILocation(line: 48, column: 24, scope: !4867)
!4872 = !DILocalVariable(name: "scale_factor", arg: 2, scope: !4867, file: !4617, line: 48, type: !72)
!4873 = !DILocation(line: 48, column: 31, scope: !4867)
!4874 = !DILocation(line: 55, column: 26, scope: !4875)
!4875 = distinct !DILexicalBlock(scope: !4867, file: !4617, line: 55, column: 7)
!4876 = !DILocation(line: 55, column: 24, scope: !4875)
!4877 = !DILocation(line: 55, column: 42, scope: !4875)
!4878 = !DILocation(line: 55, column: 41, scope: !4875)
!4879 = !DILocation(line: 55, column: 39, scope: !4875)
!4880 = !DILocation(line: 55, column: 7, scope: !4867)
!4881 = !DILocation(line: 57, column: 8, scope: !4882)
!4882 = distinct !DILexicalBlock(scope: !4875, file: !4617, line: 56, column: 5)
!4883 = !DILocation(line: 57, column: 10, scope: !4882)
!4884 = !DILocation(line: 58, column: 7, scope: !4882)
!4885 = !DILocation(line: 60, column: 9, scope: !4867)
!4886 = !DILocation(line: 60, column: 4, scope: !4867)
!4887 = !DILocation(line: 60, column: 6, scope: !4867)
!4888 = !DILocation(line: 61, column: 3, scope: !4867)
!4889 = !DILocation(line: 62, column: 1, scope: !4867)
!4890 = !DILocalVariable(name: "x", arg: 1, scope: !4891, file: !4617, line: 48, type: !4621)
!4891 = distinct !DISubprogram(name: "bkm_scale", scope: !4617, file: !4617, line: 48, type: !4868, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4892, retainedNodes: !4)
!4892 = distinct !DICompileUnit(language: DW_LANG_C99, file: !221, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !222, retainedTypes: !231, nameTableKind: None)
!4893 = !DILocalVariable(name: "scale_factor", arg: 2, scope: !4891, file: !4617, line: 48, type: !72)
!4894 = distinct !DISubprogram(name: "bkm_scale_by_power", scope: !4617, file: !4617, line: 65, type: !4895, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !220, retainedNodes: !4)
!4895 = !DISubroutineType(types: !4896)
!4896 = !{!4620, !4621, !72, !72}
!4897 = !DILocalVariable(name: "x", arg: 1, scope: !4894, file: !4617, line: 65, type: !4621)
!4898 = !DILocation(line: 65, column: 33, scope: !4894)
!4899 = !DILocalVariable(name: "base", arg: 2, scope: !4894, file: !4617, line: 65, type: !72)
!4900 = !DILocation(line: 65, column: 40, scope: !4894)
!4901 = !DILocalVariable(name: "power", arg: 3, scope: !4894, file: !4617, line: 65, type: !72)
!4902 = !DILocation(line: 65, column: 50, scope: !4894)
!4903 = !DILocalVariable(name: "err", scope: !4894, file: !4617, line: 67, type: !4620)
!4904 = !DILocation(line: 67, column: 16, scope: !4894)
!4905 = !DILocation(line: 68, column: 3, scope: !4894)
!4906 = !DILocation(line: 68, column: 15, scope: !4894)
!4907 = !DILocation(line: 69, column: 23, scope: !4894)
!4908 = !DILocation(line: 69, column: 26, scope: !4894)
!4909 = !DILocation(line: 69, column: 12, scope: !4894)
!4910 = !DILocation(line: 69, column: 9, scope: !4894)
!4911 = distinct !{!4911, !4905, !4912}
!4912 = !DILocation(line: 69, column: 30, scope: !4894)
!4913 = !DILocation(line: 70, column: 10, scope: !4894)
!4914 = !DILocation(line: 70, column: 3, scope: !4894)
!4915 = !DILocalVariable(name: "x", arg: 1, scope: !4916, file: !4617, line: 65, type: !4621)
!4916 = distinct !DISubprogram(name: "bkm_scale_by_power", scope: !4617, file: !4617, line: 65, type: !4895, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4917, retainedNodes: !4)
!4917 = distinct !DICompileUnit(language: DW_LANG_C99, file: !221, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !222, retainedTypes: !231, nameTableKind: None)
!4918 = !DILocalVariable(name: "base", arg: 2, scope: !4916, file: !4617, line: 65, type: !72)
!4919 = !DILocalVariable(name: "power", arg: 3, scope: !4916, file: !4617, line: 65, type: !72)
!4920 = !DILocalVariable(name: "err", scope: !4916, file: !4617, line: 67, type: !4620)
!4921 = distinct !DISubprogram(name: "rpl_mbrtowc", scope: !4922, file: !4922, line: 86, type: !4923, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !232, retainedNodes: !4)
!4922 = !DIFile(filename: "lib/mbrtowc.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!4923 = !DISubroutineType(types: !4924)
!4924 = !{!134, !4925, !69, !134, !4926}
!4925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2891, size: 64)
!4926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4927, size: 64)
!4927 = !DIDerivedType(tag: DW_TAG_typedef, name: "mbstate_t", file: !2862, line: 6, baseType: !4928)
!4928 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mbstate_t", file: !2864, line: 21, baseType: !4929)
!4929 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2864, line: 13, size: 64, elements: !4930)
!4930 = !{!4931, !4932}
!4931 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !4929, file: !2864, line: 15, baseType: !72, size: 32)
!4932 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !4929, file: !2864, line: 20, baseType: !4933, size: 32, offset: 32)
!4933 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4929, file: !2864, line: 16, size: 32, elements: !4934)
!4934 = !{!4935, !4936}
!4935 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !4933, file: !2864, line: 18, baseType: !16, size: 32)
!4936 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !4933, file: !2864, line: 19, baseType: !2873, size: 32)
!4937 = !DILocalVariable(name: "pwc", arg: 1, scope: !4921, file: !4922, line: 86, type: !4925)
!4938 = !DILocation(line: 86, column: 23, scope: !4921)
!4939 = !DILocalVariable(name: "s", arg: 2, scope: !4921, file: !4922, line: 86, type: !69)
!4940 = !DILocation(line: 86, column: 40, scope: !4921)
!4941 = !DILocalVariable(name: "n", arg: 3, scope: !4921, file: !4922, line: 86, type: !134)
!4942 = !DILocation(line: 86, column: 50, scope: !4921)
!4943 = !DILocalVariable(name: "ps", arg: 4, scope: !4921, file: !4922, line: 86, type: !4926)
!4944 = !DILocation(line: 86, column: 64, scope: !4921)
!4945 = !DILocalVariable(name: "ret", scope: !4921, file: !4922, line: 88, type: !134)
!4946 = !DILocation(line: 88, column: 10, scope: !4921)
!4947 = !DILocalVariable(name: "wc", scope: !4921, file: !4922, line: 89, type: !2891)
!4948 = !DILocation(line: 89, column: 11, scope: !4921)
!4949 = !DILocation(line: 105, column: 9, scope: !4950)
!4950 = distinct !DILexicalBlock(scope: !4921, file: !4922, line: 105, column: 7)
!4951 = !DILocation(line: 105, column: 7, scope: !4921)
!4952 = !DILocation(line: 106, column: 9, scope: !4950)
!4953 = !DILocation(line: 106, column: 5, scope: !4950)
!4954 = !DILocation(line: 145, column: 18, scope: !4921)
!4955 = !DILocation(line: 145, column: 23, scope: !4921)
!4956 = !DILocation(line: 145, column: 26, scope: !4921)
!4957 = !DILocation(line: 145, column: 29, scope: !4921)
!4958 = !DILocation(line: 145, column: 9, scope: !4921)
!4959 = !DILocation(line: 145, column: 7, scope: !4921)
!4960 = !DILocation(line: 154, column: 22, scope: !4961)
!4961 = distinct !DILexicalBlock(scope: !4921, file: !4922, line: 154, column: 7)
!4962 = !DILocation(line: 154, column: 19, scope: !4961)
!4963 = !DILocation(line: 154, column: 26, scope: !4961)
!4964 = !DILocation(line: 154, column: 29, scope: !4961)
!4965 = !DILocation(line: 154, column: 31, scope: !4961)
!4966 = !DILocation(line: 154, column: 36, scope: !4961)
!4967 = !DILocation(line: 154, column: 41, scope: !4961)
!4968 = !DILocation(line: 154, column: 7, scope: !4921)
!4969 = !DILocalVariable(name: "uc", scope: !4970, file: !4922, line: 156, type: !240)
!4970 = distinct !DILexicalBlock(scope: !4961, file: !4922, line: 155, column: 5)
!4971 = !DILocation(line: 156, column: 21, scope: !4970)
!4972 = !DILocation(line: 156, column: 27, scope: !4970)
!4973 = !DILocation(line: 156, column: 26, scope: !4970)
!4974 = !DILocation(line: 157, column: 14, scope: !4970)
!4975 = !DILocation(line: 157, column: 8, scope: !4970)
!4976 = !DILocation(line: 157, column: 12, scope: !4970)
!4977 = !DILocation(line: 158, column: 7, scope: !4970)
!4978 = !DILocation(line: 162, column: 10, scope: !4921)
!4979 = !DILocation(line: 162, column: 3, scope: !4921)
!4980 = !DILocation(line: 163, column: 1, scope: !4921)
!4981 = !DILocalVariable(name: "pwc", arg: 1, scope: !4982, file: !4922, line: 86, type: !4925)
!4982 = distinct !DISubprogram(name: "rpl_mbrtowc", scope: !4922, file: !4922, line: 86, type: !4983, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !4996, retainedNodes: !4)
!4983 = !DISubroutineType(types: !4984)
!4984 = !{!134, !4925, !69, !134, !4985}
!4985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4986, size: 64)
!4986 = !DIDerivedType(tag: DW_TAG_typedef, name: "mbstate_t", file: !2862, line: 6, baseType: !4987)
!4987 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mbstate_t", file: !2864, line: 21, baseType: !4988)
!4988 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2864, line: 13, size: 64, elements: !4989)
!4989 = !{!4990, !4991}
!4990 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !4988, file: !2864, line: 15, baseType: !72, size: 32)
!4991 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !4988, file: !2864, line: 20, baseType: !4992, size: 32, offset: 32)
!4992 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4988, file: !2864, line: 16, size: 32, elements: !4993)
!4993 = !{!4994, !4995}
!4994 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !4992, file: !2864, line: 18, baseType: !16, size: 32)
!4995 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !4992, file: !2864, line: 19, baseType: !2873, size: 32)
!4996 = distinct !DICompileUnit(language: DW_LANG_C99, file: !233, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !234, nameTableKind: None)
!4997 = !DILocalVariable(name: "s", arg: 2, scope: !4982, file: !4922, line: 86, type: !69)
!4998 = !DILocalVariable(name: "n", arg: 3, scope: !4982, file: !4922, line: 86, type: !134)
!4999 = !DILocalVariable(name: "ps", arg: 4, scope: !4982, file: !4922, line: 86, type: !4985)
!5000 = !DILocalVariable(name: "ret", scope: !4982, file: !4922, line: 88, type: !134)
!5001 = !DILocalVariable(name: "wc", scope: !4982, file: !4922, line: 89, type: !2891)
!5002 = distinct !DISubprogram(name: "c_strcasecmp", scope: !5003, file: !5003, line: 27, type: !5004, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !235, retainedNodes: !4)
!5003 = !DIFile(filename: "lib/c-strcasecmp.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!5004 = !DISubroutineType(types: !5005)
!5005 = !{!72, !69, !69}
!5006 = !DILocalVariable(name: "s1", arg: 1, scope: !5002, file: !5003, line: 27, type: !69)
!5007 = !DILocation(line: 27, column: 27, scope: !5002)
!5008 = !DILocalVariable(name: "s2", arg: 2, scope: !5002, file: !5003, line: 27, type: !69)
!5009 = !DILocation(line: 27, column: 43, scope: !5002)
!5010 = !DILocalVariable(name: "p1", scope: !5002, file: !5003, line: 29, type: !238)
!5011 = !DILocation(line: 29, column: 33, scope: !5002)
!5012 = !DILocation(line: 29, column: 62, scope: !5002)
!5013 = !DILocalVariable(name: "p2", scope: !5002, file: !5003, line: 30, type: !238)
!5014 = !DILocation(line: 30, column: 33, scope: !5002)
!5015 = !DILocation(line: 30, column: 62, scope: !5002)
!5016 = !DILocalVariable(name: "c1", scope: !5002, file: !5003, line: 31, type: !240)
!5017 = !DILocation(line: 31, column: 17, scope: !5002)
!5018 = !DILocalVariable(name: "c2", scope: !5002, file: !5003, line: 31, type: !240)
!5019 = !DILocation(line: 31, column: 21, scope: !5002)
!5020 = !DILocation(line: 33, column: 7, scope: !5021)
!5021 = distinct !DILexicalBlock(scope: !5002, file: !5003, line: 33, column: 7)
!5022 = !DILocation(line: 33, column: 13, scope: !5021)
!5023 = !DILocation(line: 33, column: 10, scope: !5021)
!5024 = !DILocation(line: 33, column: 7, scope: !5002)
!5025 = !DILocation(line: 34, column: 5, scope: !5021)
!5026 = !DILocation(line: 36, column: 3, scope: !5002)
!5027 = !DILocation(line: 38, column: 24, scope: !5028)
!5028 = distinct !DILexicalBlock(scope: !5002, file: !5003, line: 37, column: 5)
!5029 = !DILocation(line: 38, column: 23, scope: !5028)
!5030 = !DILocation(line: 38, column: 12, scope: !5028)
!5031 = !DILocation(line: 38, column: 10, scope: !5028)
!5032 = !DILocation(line: 39, column: 24, scope: !5028)
!5033 = !DILocation(line: 39, column: 23, scope: !5028)
!5034 = !DILocation(line: 39, column: 12, scope: !5028)
!5035 = !DILocation(line: 39, column: 10, scope: !5028)
!5036 = !DILocation(line: 41, column: 11, scope: !5037)
!5037 = distinct !DILexicalBlock(scope: !5028, file: !5003, line: 41, column: 11)
!5038 = !DILocation(line: 41, column: 14, scope: !5037)
!5039 = !DILocation(line: 41, column: 11, scope: !5028)
!5040 = !DILocation(line: 42, column: 9, scope: !5037)
!5041 = !DILocation(line: 44, column: 7, scope: !5028)
!5042 = !DILocation(line: 45, column: 7, scope: !5028)
!5043 = !DILocation(line: 46, column: 5, scope: !5028)
!5044 = !DILocation(line: 47, column: 10, scope: !5002)
!5045 = !DILocation(line: 47, column: 16, scope: !5002)
!5046 = !DILocation(line: 47, column: 13, scope: !5002)
!5047 = distinct !{!5047, !5026, !5048}
!5048 = !DILocation(line: 47, column: 18, scope: !5002)
!5049 = !DILocation(line: 50, column: 12, scope: !5050)
!5050 = distinct !DILexicalBlock(scope: !5002, file: !5003, line: 49, column: 7)
!5051 = !DILocation(line: 50, column: 17, scope: !5050)
!5052 = !DILocation(line: 50, column: 15, scope: !5050)
!5053 = !DILocation(line: 50, column: 5, scope: !5050)
!5054 = !DILocation(line: 56, column: 1, scope: !5002)
!5055 = !DILocalVariable(name: "s1", arg: 1, scope: !5056, file: !5003, line: 27, type: !69)
!5056 = distinct !DISubprogram(name: "c_strcasecmp", scope: !5003, file: !5003, line: 27, type: !5004, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !5057, retainedNodes: !4)
!5057 = distinct !DICompileUnit(language: DW_LANG_C99, file: !236, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !237, nameTableKind: None)
!5058 = !DILocalVariable(name: "s2", arg: 2, scope: !5056, file: !5003, line: 27, type: !69)
!5059 = !DILocalVariable(name: "p1", scope: !5056, file: !5003, line: 29, type: !238)
!5060 = !DILocalVariable(name: "p2", scope: !5056, file: !5003, line: 30, type: !238)
!5061 = !DILocalVariable(name: "c1", scope: !5056, file: !5003, line: 31, type: !240)
!5062 = !DILocalVariable(name: "c2", scope: !5056, file: !5003, line: 31, type: !240)
!5063 = distinct !DISubprogram(name: "close_stream", scope: !5064, file: !5064, line: 56, type: !5065, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !241, retainedNodes: !4)
!5064 = !DIFile(filename: "lib/close-stream.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!5065 = !DISubroutineType(types: !5066)
!5066 = !{!72, !5067}
!5067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5068, size: 64)
!5068 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !4069, line: 7, baseType: !5069)
!5069 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4071, line: 49, size: 1728, elements: !5070)
!5070 = !{!5071, !5072, !5073, !5074, !5075, !5076, !5077, !5078, !5079, !5080, !5081, !5082, !5083, !5084, !5086, !5087, !5088, !5089, !5090, !5091, !5092, !5093, !5094, !5095, !5096, !5097, !5098, !5099, !5100}
!5071 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !5069, file: !4071, line: 51, baseType: !72, size: 32)
!5072 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !5069, file: !4071, line: 54, baseType: !6, size: 64, offset: 64)
!5073 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !5069, file: !4071, line: 55, baseType: !6, size: 64, offset: 128)
!5074 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !5069, file: !4071, line: 56, baseType: !6, size: 64, offset: 192)
!5075 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !5069, file: !4071, line: 57, baseType: !6, size: 64, offset: 256)
!5076 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !5069, file: !4071, line: 58, baseType: !6, size: 64, offset: 320)
!5077 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !5069, file: !4071, line: 59, baseType: !6, size: 64, offset: 384)
!5078 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !5069, file: !4071, line: 60, baseType: !6, size: 64, offset: 448)
!5079 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !5069, file: !4071, line: 61, baseType: !6, size: 64, offset: 512)
!5080 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !5069, file: !4071, line: 64, baseType: !6, size: 64, offset: 576)
!5081 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !5069, file: !4071, line: 65, baseType: !6, size: 64, offset: 640)
!5082 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !5069, file: !4071, line: 66, baseType: !6, size: 64, offset: 704)
!5083 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !5069, file: !4071, line: 68, baseType: !4086, size: 64, offset: 768)
!5084 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !5069, file: !4071, line: 70, baseType: !5085, size: 64, offset: 832)
!5085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5069, size: 64)
!5086 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !5069, file: !4071, line: 72, baseType: !72, size: 32, offset: 896)
!5087 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !5069, file: !4071, line: 73, baseType: !72, size: 32, offset: 928)
!5088 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !5069, file: !4071, line: 74, baseType: !4093, size: 64, offset: 960)
!5089 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !5069, file: !4071, line: 77, baseType: !133, size: 16, offset: 1024)
!5090 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !5069, file: !4071, line: 78, baseType: !4096, size: 8, offset: 1040)
!5091 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !5069, file: !4071, line: 79, baseType: !4098, size: 8, offset: 1048)
!5092 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !5069, file: !4071, line: 81, baseType: !4102, size: 64, offset: 1088)
!5093 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !5069, file: !4071, line: 89, baseType: !4105, size: 64, offset: 1152)
!5094 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !5069, file: !4071, line: 91, baseType: !4107, size: 64, offset: 1216)
!5095 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !5069, file: !4071, line: 92, baseType: !4110, size: 64, offset: 1280)
!5096 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !5069, file: !4071, line: 93, baseType: !5085, size: 64, offset: 1344)
!5097 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !5069, file: !4071, line: 94, baseType: !8, size: 64, offset: 1408)
!5098 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !5069, file: !4071, line: 95, baseType: !134, size: 64, offset: 1472)
!5099 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !5069, file: !4071, line: 96, baseType: !72, size: 32, offset: 1536)
!5100 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !5069, file: !4071, line: 98, baseType: !4117, size: 160, offset: 1568)
!5101 = !DILocalVariable(name: "stream", arg: 1, scope: !5063, file: !5064, line: 56, type: !5067)
!5102 = !DILocation(line: 56, column: 21, scope: !5063)
!5103 = !DILocalVariable(name: "some_pending", scope: !5063, file: !5064, line: 58, type: !5104)
!5104 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !27)
!5105 = !DILocation(line: 58, column: 14, scope: !5063)
!5106 = !DILocation(line: 58, column: 42, scope: !5063)
!5107 = !DILocation(line: 58, column: 30, scope: !5063)
!5108 = !DILocation(line: 58, column: 50, scope: !5063)
!5109 = !DILocalVariable(name: "prev_fail", scope: !5063, file: !5064, line: 59, type: !5104)
!5110 = !DILocation(line: 59, column: 14, scope: !5063)
!5111 = !DILocation(line: 59, column: 27, scope: !5063)
!5112 = !DILocation(line: 59, column: 43, scope: !5063)
!5113 = !DILocalVariable(name: "fclose_fail", scope: !5063, file: !5064, line: 60, type: !5104)
!5114 = !DILocation(line: 60, column: 14, scope: !5063)
!5115 = !DILocation(line: 60, column: 37, scope: !5063)
!5116 = !DILocation(line: 60, column: 29, scope: !5063)
!5117 = !DILocation(line: 60, column: 45, scope: !5063)
!5118 = !DILocation(line: 70, column: 7, scope: !5119)
!5119 = distinct !DILexicalBlock(scope: !5063, file: !5064, line: 70, column: 7)
!5120 = !DILocation(line: 70, column: 17, scope: !5119)
!5121 = !DILocation(line: 70, column: 21, scope: !5119)
!5122 = !DILocation(line: 70, column: 33, scope: !5119)
!5123 = !DILocation(line: 70, column: 37, scope: !5119)
!5124 = !DILocation(line: 70, column: 50, scope: !5119)
!5125 = !DILocation(line: 70, column: 53, scope: !5119)
!5126 = !DILocation(line: 70, column: 59, scope: !5119)
!5127 = !DILocation(line: 70, column: 7, scope: !5063)
!5128 = !DILocation(line: 72, column: 13, scope: !5129)
!5129 = distinct !DILexicalBlock(scope: !5130, file: !5064, line: 72, column: 11)
!5130 = distinct !DILexicalBlock(scope: !5119, file: !5064, line: 71, column: 5)
!5131 = !DILocation(line: 72, column: 11, scope: !5130)
!5132 = !DILocation(line: 73, column: 9, scope: !5129)
!5133 = !DILocation(line: 73, column: 15, scope: !5129)
!5134 = !DILocation(line: 74, column: 7, scope: !5130)
!5135 = !DILocation(line: 77, column: 3, scope: !5063)
!5136 = !DILocation(line: 78, column: 1, scope: !5063)
!5137 = !DILocalVariable(name: "stream", arg: 1, scope: !5138, file: !5064, line: 56, type: !5141)
!5138 = distinct !DISubprogram(name: "close_stream", scope: !5064, file: !5064, line: 56, type: !5139, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !5175, retainedNodes: !4)
!5139 = !DISubroutineType(types: !5140)
!5140 = !{!72, !5141}
!5141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5142, size: 64)
!5142 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !4069, line: 7, baseType: !5143)
!5143 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4071, line: 49, size: 1728, elements: !5144)
!5144 = !{!5145, !5146, !5147, !5148, !5149, !5150, !5151, !5152, !5153, !5154, !5155, !5156, !5157, !5158, !5160, !5161, !5162, !5163, !5164, !5165, !5166, !5167, !5168, !5169, !5170, !5171, !5172, !5173, !5174}
!5145 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !5143, file: !4071, line: 51, baseType: !72, size: 32)
!5146 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !5143, file: !4071, line: 54, baseType: !6, size: 64, offset: 64)
!5147 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !5143, file: !4071, line: 55, baseType: !6, size: 64, offset: 128)
!5148 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !5143, file: !4071, line: 56, baseType: !6, size: 64, offset: 192)
!5149 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !5143, file: !4071, line: 57, baseType: !6, size: 64, offset: 256)
!5150 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !5143, file: !4071, line: 58, baseType: !6, size: 64, offset: 320)
!5151 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !5143, file: !4071, line: 59, baseType: !6, size: 64, offset: 384)
!5152 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !5143, file: !4071, line: 60, baseType: !6, size: 64, offset: 448)
!5153 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !5143, file: !4071, line: 61, baseType: !6, size: 64, offset: 512)
!5154 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !5143, file: !4071, line: 64, baseType: !6, size: 64, offset: 576)
!5155 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !5143, file: !4071, line: 65, baseType: !6, size: 64, offset: 640)
!5156 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !5143, file: !4071, line: 66, baseType: !6, size: 64, offset: 704)
!5157 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !5143, file: !4071, line: 68, baseType: !4086, size: 64, offset: 768)
!5158 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !5143, file: !4071, line: 70, baseType: !5159, size: 64, offset: 832)
!5159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5143, size: 64)
!5160 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !5143, file: !4071, line: 72, baseType: !72, size: 32, offset: 896)
!5161 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !5143, file: !4071, line: 73, baseType: !72, size: 32, offset: 928)
!5162 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !5143, file: !4071, line: 74, baseType: !4093, size: 64, offset: 960)
!5163 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !5143, file: !4071, line: 77, baseType: !133, size: 16, offset: 1024)
!5164 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !5143, file: !4071, line: 78, baseType: !4096, size: 8, offset: 1040)
!5165 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !5143, file: !4071, line: 79, baseType: !4098, size: 8, offset: 1048)
!5166 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !5143, file: !4071, line: 81, baseType: !4102, size: 64, offset: 1088)
!5167 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !5143, file: !4071, line: 89, baseType: !4105, size: 64, offset: 1152)
!5168 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !5143, file: !4071, line: 91, baseType: !4107, size: 64, offset: 1216)
!5169 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !5143, file: !4071, line: 92, baseType: !4110, size: 64, offset: 1280)
!5170 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !5143, file: !4071, line: 93, baseType: !5159, size: 64, offset: 1344)
!5171 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !5143, file: !4071, line: 94, baseType: !8, size: 64, offset: 1408)
!5172 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !5143, file: !4071, line: 95, baseType: !134, size: 64, offset: 1472)
!5173 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !5143, file: !4071, line: 96, baseType: !72, size: 32, offset: 1536)
!5174 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !5143, file: !4071, line: 98, baseType: !4117, size: 160, offset: 1568)
!5175 = distinct !DICompileUnit(language: DW_LANG_C99, file: !242, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, nameTableKind: None)
!5176 = !DILocalVariable(name: "some_pending", scope: !5138, file: !5064, line: 58, type: !5104)
!5177 = !DILocalVariable(name: "prev_fail", scope: !5138, file: !5064, line: 59, type: !5104)
!5178 = !DILocalVariable(name: "fclose_fail", scope: !5138, file: !5064, line: 60, type: !5104)
!5179 = distinct !DISubprogram(name: "hard_locale", scope: !5180, file: !5180, line: 27, type: !5181, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !243, retainedNodes: !4)
!5180 = !DIFile(filename: "lib/hard-locale.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!5181 = !DISubroutineType(types: !5182)
!5182 = !{!27, !72}
!5183 = !DILocalVariable(name: "category", arg: 1, scope: !5179, file: !5180, line: 27, type: !72)
!5184 = !DILocation(line: 27, column: 18, scope: !5179)
!5185 = !DILocalVariable(name: "locale", scope: !5179, file: !5180, line: 29, type: !5186)
!5186 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 2056, elements: !5187)
!5187 = !{!5188}
!5188 = !DISubrange(count: 257)
!5189 = !DILocation(line: 29, column: 8, scope: !5179)
!5190 = !DILocation(line: 31, column: 25, scope: !5191)
!5191 = distinct !DILexicalBlock(scope: !5179, file: !5180, line: 31, column: 7)
!5192 = !DILocation(line: 31, column: 35, scope: !5191)
!5193 = !DILocation(line: 31, column: 7, scope: !5191)
!5194 = !DILocation(line: 31, column: 7, scope: !5179)
!5195 = !DILocation(line: 32, column: 5, scope: !5191)
!5196 = !DILocation(line: 34, column: 20, scope: !5179)
!5197 = !DILocation(line: 34, column: 12, scope: !5179)
!5198 = !DILocation(line: 34, column: 33, scope: !5179)
!5199 = !DILocation(line: 34, column: 38, scope: !5179)
!5200 = !DILocation(line: 34, column: 49, scope: !5179)
!5201 = !DILocation(line: 34, column: 41, scope: !5179)
!5202 = !DILocation(line: 34, column: 66, scope: !5179)
!5203 = !DILocation(line: 34, column: 10, scope: !5179)
!5204 = !DILocation(line: 34, column: 3, scope: !5179)
!5205 = !DILocation(line: 35, column: 1, scope: !5179)
!5206 = !DILocalVariable(name: "category", arg: 1, scope: !5207, file: !5180, line: 27, type: !72)
!5207 = distinct !DISubprogram(name: "hard_locale", scope: !5180, file: !5180, line: 27, type: !5181, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !5208, retainedNodes: !4)
!5208 = distinct !DICompileUnit(language: DW_LANG_C99, file: !244, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, nameTableKind: None)
!5209 = !DILocalVariable(name: "locale", scope: !5207, file: !5180, line: 29, type: !5186)
!5210 = distinct !DISubprogram(name: "locale_charset", scope: !5211, file: !5211, line: 831, type: !5212, scopeLine: 832, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !245, retainedNodes: !4)
!5211 = !DIFile(filename: "lib/localcharset.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!5212 = !DISubroutineType(types: !5213)
!5213 = !{!69}
!5214 = !DILocalVariable(name: "codeset", scope: !5210, file: !5211, line: 833, type: !69)
!5215 = !DILocation(line: 833, column: 15, scope: !5210)
!5216 = !DILocation(line: 847, column: 13, scope: !5210)
!5217 = !DILocation(line: 847, column: 11, scope: !5210)
!5218 = !DILocation(line: 911, column: 7, scope: !5219)
!5219 = distinct !DILexicalBlock(scope: !5210, file: !5211, line: 911, column: 7)
!5220 = !DILocation(line: 911, column: 15, scope: !5219)
!5221 = !DILocation(line: 911, column: 7, scope: !5210)
!5222 = !DILocation(line: 913, column: 13, scope: !5219)
!5223 = !DILocation(line: 913, column: 5, scope: !5219)
!5224 = !DILocation(line: 1070, column: 13, scope: !5225)
!5225 = distinct !DILexicalBlock(scope: !5226, file: !5211, line: 1070, column: 13)
!5226 = distinct !DILexicalBlock(scope: !5227, file: !5211, line: 1060, column: 7)
!5227 = distinct !DILexicalBlock(scope: !5210, file: !5211, line: 1019, column: 3)
!5228 = !DILocation(line: 1070, column: 24, scope: !5225)
!5229 = !DILocation(line: 1070, column: 13, scope: !5226)
!5230 = !DILocation(line: 1071, column: 19, scope: !5225)
!5231 = !DILocation(line: 1071, column: 11, scope: !5225)
!5232 = !DILocation(line: 1158, column: 10, scope: !5210)
!5233 = !DILocation(line: 1158, column: 3, scope: !5210)
!5234 = !DILocalVariable(name: "codeset", scope: !5235, file: !5211, line: 833, type: !69)
!5235 = distinct !DISubprogram(name: "locale_charset", scope: !5211, file: !5211, line: 831, type: !5212, scopeLine: 832, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !5236, retainedNodes: !4)
!5236 = distinct !DICompileUnit(language: DW_LANG_C99, file: !246, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !212, nameTableKind: None)
!5237 = distinct !DISubprogram(name: "mgetgroups", scope: !5238, file: !5238, line: 66, type: !4585, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !247, retainedNodes: !4)
!5238 = !DIFile(filename: "lib/mgetgroups.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!5239 = !DILocalVariable(name: "username", arg: 1, scope: !5237, file: !5238, line: 66, type: !69)
!5240 = !DILocation(line: 66, column: 25, scope: !5237)
!5241 = !DILocalVariable(name: "gid", arg: 2, scope: !5237, file: !5238, line: 66, type: !21)
!5242 = !DILocation(line: 66, column: 41, scope: !5237)
!5243 = !DILocalVariable(name: "groups", arg: 3, scope: !5237, file: !5238, line: 66, type: !4587)
!5244 = !DILocation(line: 66, column: 54, scope: !5237)
!5245 = !DILocalVariable(name: "max_n_groups", scope: !5237, file: !5238, line: 68, type: !72)
!5246 = !DILocation(line: 68, column: 7, scope: !5237)
!5247 = !DILocalVariable(name: "ng", scope: !5237, file: !5238, line: 69, type: !72)
!5248 = !DILocation(line: 69, column: 7, scope: !5237)
!5249 = !DILocalVariable(name: "g", scope: !5237, file: !5238, line: 70, type: !183)
!5250 = !DILocation(line: 70, column: 10, scope: !5237)
!5251 = !DILocation(line: 81, column: 7, scope: !5252)
!5252 = distinct !DILexicalBlock(scope: !5237, file: !5238, line: 81, column: 7)
!5253 = !DILocation(line: 81, column: 7, scope: !5237)
!5254 = !DILocation(line: 84, column: 20, scope: !5255)
!5255 = distinct !DILexicalBlock(scope: !5252, file: !5238, line: 82, column: 5)
!5256 = !DILocation(line: 86, column: 35, scope: !5255)
!5257 = !DILocation(line: 86, column: 11, scope: !5255)
!5258 = !DILocation(line: 86, column: 9, scope: !5255)
!5259 = !DILocation(line: 87, column: 11, scope: !5260)
!5260 = distinct !DILexicalBlock(scope: !5255, file: !5238, line: 87, column: 11)
!5261 = !DILocation(line: 87, column: 13, scope: !5260)
!5262 = !DILocation(line: 87, column: 11, scope: !5255)
!5263 = !DILocation(line: 88, column: 9, scope: !5260)
!5264 = !DILocation(line: 90, column: 7, scope: !5255)
!5265 = !DILocalVariable(name: "h", scope: !5266, file: !5238, line: 92, type: !183)
!5266 = distinct !DILexicalBlock(scope: !5255, file: !5238, line: 91, column: 9)
!5267 = !DILocation(line: 92, column: 18, scope: !5266)
!5268 = !DILocalVariable(name: "last_n_groups", scope: !5266, file: !5238, line: 93, type: !72)
!5269 = !DILocation(line: 93, column: 15, scope: !5266)
!5270 = !DILocation(line: 93, column: 31, scope: !5266)
!5271 = !DILocation(line: 96, column: 30, scope: !5266)
!5272 = !DILocation(line: 96, column: 40, scope: !5266)
!5273 = !DILocation(line: 96, column: 45, scope: !5266)
!5274 = !DILocation(line: 96, column: 16, scope: !5266)
!5275 = !DILocation(line: 96, column: 14, scope: !5266)
!5276 = !DILocation(line: 100, column: 15, scope: !5277)
!5277 = distinct !DILexicalBlock(scope: !5266, file: !5238, line: 100, column: 15)
!5278 = !DILocation(line: 100, column: 18, scope: !5277)
!5279 = !DILocation(line: 100, column: 22, scope: !5277)
!5280 = !DILocation(line: 100, column: 25, scope: !5277)
!5281 = !DILocation(line: 100, column: 42, scope: !5277)
!5282 = !DILocation(line: 100, column: 39, scope: !5277)
!5283 = !DILocation(line: 100, column: 15, scope: !5266)
!5284 = !DILocation(line: 101, column: 26, scope: !5277)
!5285 = !DILocation(line: 101, column: 13, scope: !5277)
!5286 = !DILocation(line: 103, column: 38, scope: !5287)
!5287 = distinct !DILexicalBlock(scope: !5266, file: !5238, line: 103, column: 15)
!5288 = !DILocation(line: 103, column: 41, scope: !5287)
!5289 = !DILocation(line: 103, column: 20, scope: !5287)
!5290 = !DILocation(line: 103, column: 18, scope: !5287)
!5291 = !DILocation(line: 103, column: 56, scope: !5287)
!5292 = !DILocation(line: 103, column: 15, scope: !5266)
!5293 = !DILocalVariable(name: "saved_errno", scope: !5294, file: !5238, line: 105, type: !72)
!5294 = distinct !DILexicalBlock(scope: !5287, file: !5238, line: 104, column: 13)
!5295 = !DILocation(line: 105, column: 19, scope: !5294)
!5296 = !DILocation(line: 105, column: 33, scope: !5294)
!5297 = !DILocation(line: 106, column: 21, scope: !5294)
!5298 = !DILocation(line: 106, column: 15, scope: !5294)
!5299 = !DILocation(line: 107, column: 23, scope: !5294)
!5300 = !DILocation(line: 107, column: 15, scope: !5294)
!5301 = !DILocation(line: 107, column: 21, scope: !5294)
!5302 = !DILocation(line: 108, column: 15, scope: !5294)
!5303 = !DILocation(line: 110, column: 15, scope: !5266)
!5304 = !DILocation(line: 110, column: 13, scope: !5266)
!5305 = !DILocation(line: 112, column: 20, scope: !5306)
!5306 = distinct !DILexicalBlock(scope: !5266, file: !5238, line: 112, column: 15)
!5307 = !DILocation(line: 112, column: 17, scope: !5306)
!5308 = !DILocation(line: 112, column: 15, scope: !5266)
!5309 = !DILocation(line: 114, column: 25, scope: !5310)
!5310 = distinct !DILexicalBlock(scope: !5306, file: !5238, line: 113, column: 13)
!5311 = !DILocation(line: 114, column: 16, scope: !5310)
!5312 = !DILocation(line: 114, column: 23, scope: !5310)
!5313 = !DILocation(line: 117, column: 22, scope: !5310)
!5314 = !DILocation(line: 117, column: 15, scope: !5310)
!5315 = distinct !{!5315, !5264, !5316}
!5316 = !DILocation(line: 119, column: 9, scope: !5255)
!5317 = !DILocation(line: 124, column: 19, scope: !5237)
!5318 = !DILocation(line: 125, column: 42, scope: !5237)
!5319 = !DILocation(line: 125, column: 52, scope: !5237)
!5320 = !DILocation(line: 125, column: 21, scope: !5237)
!5321 = !DILocation(line: 126, column: 21, scope: !5237)
!5322 = !DILocation(line: 124, column: 16, scope: !5237)
!5323 = !DILocation(line: 131, column: 7, scope: !5324)
!5324 = distinct !DILexicalBlock(scope: !5237, file: !5238, line: 131, column: 7)
!5325 = !DILocation(line: 131, column: 20, scope: !5324)
!5326 = !DILocation(line: 131, column: 7, scope: !5237)
!5327 = !DILocation(line: 133, column: 11, scope: !5328)
!5328 = distinct !DILexicalBlock(scope: !5329, file: !5238, line: 133, column: 11)
!5329 = distinct !DILexicalBlock(scope: !5324, file: !5238, line: 132, column: 5)
!5330 = !DILocation(line: 133, column: 17, scope: !5328)
!5331 = !DILocation(line: 133, column: 27, scope: !5328)
!5332 = !DILocation(line: 133, column: 35, scope: !5328)
!5333 = !DILocation(line: 133, column: 33, scope: !5328)
!5334 = !DILocation(line: 133, column: 11, scope: !5329)
!5335 = !DILocation(line: 135, column: 21, scope: !5336)
!5336 = distinct !DILexicalBlock(scope: !5328, file: !5238, line: 134, column: 9)
!5337 = !DILocation(line: 135, column: 12, scope: !5336)
!5338 = !DILocation(line: 135, column: 19, scope: !5336)
!5339 = !DILocation(line: 136, column: 16, scope: !5336)
!5340 = !DILocation(line: 136, column: 12, scope: !5336)
!5341 = !DILocation(line: 136, column: 14, scope: !5336)
!5342 = !DILocation(line: 137, column: 18, scope: !5336)
!5343 = !DILocation(line: 137, column: 22, scope: !5336)
!5344 = !DILocation(line: 137, column: 11, scope: !5336)
!5345 = !DILocation(line: 139, column: 7, scope: !5329)
!5346 = !DILocation(line: 142, column: 7, scope: !5347)
!5347 = distinct !DILexicalBlock(scope: !5237, file: !5238, line: 142, column: 7)
!5348 = !DILocation(line: 142, column: 20, scope: !5347)
!5349 = !DILocation(line: 142, column: 25, scope: !5347)
!5350 = !DILocation(line: 142, column: 30, scope: !5347)
!5351 = !DILocation(line: 142, column: 39, scope: !5347)
!5352 = !DILocation(line: 142, column: 42, scope: !5347)
!5353 = !DILocation(line: 142, column: 46, scope: !5347)
!5354 = !DILocation(line: 142, column: 7, scope: !5237)
!5355 = !DILocation(line: 143, column: 17, scope: !5347)
!5356 = !DILocation(line: 143, column: 5, scope: !5347)
!5357 = !DILocation(line: 144, column: 31, scope: !5237)
!5358 = !DILocation(line: 144, column: 7, scope: !5237)
!5359 = !DILocation(line: 144, column: 5, scope: !5237)
!5360 = !DILocation(line: 145, column: 7, scope: !5361)
!5361 = distinct !DILexicalBlock(scope: !5237, file: !5238, line: 145, column: 7)
!5362 = !DILocation(line: 145, column: 9, scope: !5361)
!5363 = !DILocation(line: 145, column: 7, scope: !5237)
!5364 = !DILocation(line: 146, column: 5, scope: !5361)
!5365 = !DILocation(line: 148, column: 9, scope: !5237)
!5366 = !DILocation(line: 149, column: 23, scope: !5237)
!5367 = !DILocation(line: 149, column: 37, scope: !5237)
!5368 = !DILocation(line: 149, column: 40, scope: !5237)
!5369 = !DILocation(line: 149, column: 50, scope: !5237)
!5370 = !DILocation(line: 149, column: 11, scope: !5237)
!5371 = !DILocation(line: 150, column: 22, scope: !5237)
!5372 = !DILocation(line: 150, column: 38, scope: !5237)
!5373 = !DILocation(line: 150, column: 42, scope: !5237)
!5374 = !DILocation(line: 150, column: 35, scope: !5237)
!5375 = !DILocation(line: 151, column: 33, scope: !5237)
!5376 = !DILocation(line: 151, column: 38, scope: !5237)
!5377 = !DILocation(line: 151, column: 42, scope: !5237)
!5378 = !DILocation(line: 151, column: 35, scope: !5237)
!5379 = !DILocation(line: 150, column: 11, scope: !5237)
!5380 = !DILocation(line: 148, column: 6, scope: !5237)
!5381 = !DILocation(line: 153, column: 7, scope: !5382)
!5382 = distinct !DILexicalBlock(scope: !5237, file: !5238, line: 153, column: 7)
!5383 = !DILocation(line: 153, column: 10, scope: !5382)
!5384 = !DILocation(line: 153, column: 7, scope: !5237)
!5385 = !DILocalVariable(name: "saved_errno", scope: !5386, file: !5238, line: 156, type: !72)
!5386 = distinct !DILexicalBlock(scope: !5382, file: !5238, line: 154, column: 5)
!5387 = !DILocation(line: 156, column: 11, scope: !5386)
!5388 = !DILocation(line: 156, column: 25, scope: !5386)
!5389 = !DILocation(line: 157, column: 13, scope: !5386)
!5390 = !DILocation(line: 157, column: 7, scope: !5386)
!5391 = !DILocation(line: 158, column: 15, scope: !5386)
!5392 = !DILocation(line: 158, column: 7, scope: !5386)
!5393 = !DILocation(line: 158, column: 13, scope: !5386)
!5394 = !DILocation(line: 159, column: 7, scope: !5386)
!5395 = !DILocation(line: 162, column: 8, scope: !5396)
!5396 = distinct !DILexicalBlock(scope: !5237, file: !5238, line: 162, column: 7)
!5397 = !DILocation(line: 162, column: 17, scope: !5396)
!5398 = !DILocation(line: 162, column: 20, scope: !5396)
!5399 = !DILocation(line: 162, column: 24, scope: !5396)
!5400 = !DILocation(line: 162, column: 7, scope: !5237)
!5401 = !DILocation(line: 164, column: 12, scope: !5402)
!5402 = distinct !DILexicalBlock(scope: !5396, file: !5238, line: 163, column: 5)
!5403 = !DILocation(line: 164, column: 8, scope: !5402)
!5404 = !DILocation(line: 164, column: 10, scope: !5402)
!5405 = !DILocation(line: 165, column: 9, scope: !5402)
!5406 = !DILocation(line: 166, column: 5, scope: !5402)
!5407 = !DILocation(line: 167, column: 13, scope: !5237)
!5408 = !DILocation(line: 167, column: 4, scope: !5237)
!5409 = !DILocation(line: 167, column: 11, scope: !5237)
!5410 = !DILocation(line: 185, column: 11, scope: !5411)
!5411 = distinct !DILexicalBlock(scope: !5237, file: !5238, line: 185, column: 7)
!5412 = !DILocation(line: 185, column: 9, scope: !5411)
!5413 = !DILocation(line: 185, column: 7, scope: !5237)
!5414 = !DILocalVariable(name: "first", scope: !5415, file: !5238, line: 187, type: !21)
!5415 = distinct !DILexicalBlock(scope: !5411, file: !5238, line: 186, column: 5)
!5416 = !DILocation(line: 187, column: 13, scope: !5415)
!5417 = !DILocation(line: 187, column: 22, scope: !5415)
!5418 = !DILocation(line: 187, column: 21, scope: !5415)
!5419 = !DILocalVariable(name: "next", scope: !5415, file: !5238, line: 188, type: !183)
!5420 = !DILocation(line: 188, column: 14, scope: !5415)
!5421 = !DILocalVariable(name: "groups_end", scope: !5415, file: !5238, line: 189, type: !183)
!5422 = !DILocation(line: 189, column: 14, scope: !5415)
!5423 = !DILocation(line: 189, column: 27, scope: !5415)
!5424 = !DILocation(line: 189, column: 31, scope: !5415)
!5425 = !DILocation(line: 189, column: 29, scope: !5415)
!5426 = !DILocation(line: 191, column: 19, scope: !5427)
!5427 = distinct !DILexicalBlock(scope: !5415, file: !5238, line: 191, column: 7)
!5428 = !DILocation(line: 191, column: 21, scope: !5427)
!5429 = !DILocation(line: 191, column: 17, scope: !5427)
!5430 = !DILocation(line: 191, column: 12, scope: !5427)
!5431 = !DILocation(line: 191, column: 26, scope: !5432)
!5432 = distinct !DILexicalBlock(scope: !5427, file: !5238, line: 191, column: 7)
!5433 = !DILocation(line: 191, column: 33, scope: !5432)
!5434 = !DILocation(line: 191, column: 31, scope: !5432)
!5435 = !DILocation(line: 191, column: 7, scope: !5427)
!5436 = !DILocation(line: 193, column: 16, scope: !5437)
!5437 = distinct !DILexicalBlock(scope: !5438, file: !5238, line: 193, column: 15)
!5438 = distinct !DILexicalBlock(scope: !5432, file: !5238, line: 192, column: 9)
!5439 = !DILocation(line: 193, column: 15, scope: !5437)
!5440 = !DILocation(line: 193, column: 24, scope: !5437)
!5441 = !DILocation(line: 193, column: 21, scope: !5437)
!5442 = !DILocation(line: 193, column: 30, scope: !5437)
!5443 = !DILocation(line: 193, column: 34, scope: !5437)
!5444 = !DILocation(line: 193, column: 33, scope: !5437)
!5445 = !DILocation(line: 193, column: 43, scope: !5437)
!5446 = !DILocation(line: 193, column: 42, scope: !5437)
!5447 = !DILocation(line: 193, column: 39, scope: !5437)
!5448 = !DILocation(line: 193, column: 15, scope: !5438)
!5449 = !DILocation(line: 194, column: 15, scope: !5437)
!5450 = !DILocation(line: 194, column: 13, scope: !5437)
!5451 = !DILocation(line: 196, column: 21, scope: !5437)
!5452 = !DILocation(line: 196, column: 20, scope: !5437)
!5453 = !DILocation(line: 196, column: 14, scope: !5437)
!5454 = !DILocation(line: 196, column: 18, scope: !5437)
!5455 = !DILocation(line: 197, column: 9, scope: !5438)
!5456 = !DILocation(line: 191, column: 49, scope: !5432)
!5457 = !DILocation(line: 191, column: 7, scope: !5432)
!5458 = distinct !{!5458, !5435, !5459}
!5459 = !DILocation(line: 197, column: 9, scope: !5427)
!5460 = !DILocation(line: 198, column: 5, scope: !5415)
!5461 = !DILocation(line: 200, column: 10, scope: !5237)
!5462 = !DILocation(line: 200, column: 3, scope: !5237)
!5463 = !DILocation(line: 201, column: 1, scope: !5237)
!5464 = !DILocalVariable(name: "username", arg: 1, scope: !5465, file: !5238, line: 66, type: !69)
!5465 = distinct !DISubprogram(name: "mgetgroups", scope: !5238, file: !5238, line: 66, type: !4585, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !5466, retainedNodes: !4)
!5466 = distinct !DICompileUnit(language: DW_LANG_C99, file: !248, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !249, nameTableKind: None)
!5467 = !DILocalVariable(name: "gid", arg: 2, scope: !5465, file: !5238, line: 66, type: !21)
!5468 = !DILocalVariable(name: "groups", arg: 3, scope: !5465, file: !5238, line: 66, type: !4587)
!5469 = !DILocalVariable(name: "max_n_groups", scope: !5465, file: !5238, line: 68, type: !72)
!5470 = !DILocalVariable(name: "ng", scope: !5465, file: !5238, line: 69, type: !72)
!5471 = !DILocalVariable(name: "g", scope: !5465, file: !5238, line: 70, type: !183)
!5472 = !DILocalVariable(name: "next", scope: !5473, file: !5238, line: 188, type: !183)
!5473 = distinct !DILexicalBlock(scope: !5474, file: !5238, line: 186, column: 5)
!5474 = distinct !DILexicalBlock(scope: !5475, file: !5238, line: 185, column: 7)
!5475 = distinct !DISubprogram(name: "mgetgroups", scope: !5238, file: !5238, line: 66, type: !4585, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !5476, retainedNodes: !4)
!5476 = distinct !DICompileUnit(language: DW_LANG_C99, file: !248, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !249, nameTableKind: None)
!5477 = !DILocalVariable(name: "groups_end", scope: !5473, file: !5238, line: 189, type: !183)
!5478 = distinct !DISubprogram(name: "realloc_groupbuf", scope: !5238, file: !5238, line: 43, type: !5479, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !247, retainedNodes: !4)
!5479 = !DISubroutineType(types: !5480)
!5480 = !{!183, !183, !134}
!5481 = !DILocalVariable(name: "g", arg: 1, scope: !5478, file: !5238, line: 43, type: !183)
!5482 = !DILocation(line: 43, column: 26, scope: !5478)
!5483 = !DILocalVariable(name: "num", arg: 2, scope: !5478, file: !5238, line: 43, type: !134)
!5484 = !DILocation(line: 43, column: 36, scope: !5478)
!5485 = !DILocation(line: 45, column: 7, scope: !5486)
!5486 = distinct !DILexicalBlock(scope: !5478, file: !5238, line: 45, column: 7)
!5487 = !DILocation(line: 45, column: 7, scope: !5478)
!5488 = !DILocation(line: 47, column: 7, scope: !5489)
!5489 = distinct !DILexicalBlock(scope: !5486, file: !5238, line: 46, column: 5)
!5490 = !DILocation(line: 47, column: 13, scope: !5489)
!5491 = !DILocation(line: 48, column: 7, scope: !5489)
!5492 = !DILocation(line: 51, column: 19, scope: !5478)
!5493 = !DILocation(line: 51, column: 22, scope: !5478)
!5494 = !DILocation(line: 51, column: 26, scope: !5478)
!5495 = !DILocation(line: 51, column: 10, scope: !5478)
!5496 = !DILocation(line: 51, column: 3, scope: !5478)
!5497 = !DILocation(line: 52, column: 1, scope: !5478)
!5498 = !DILocalVariable(name: "g", arg: 1, scope: !5499, file: !5238, line: 43, type: !183)
!5499 = distinct !DISubprogram(name: "realloc_groupbuf", scope: !5238, file: !5238, line: 43, type: !5479, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5500, retainedNodes: !4)
!5500 = distinct !DICompileUnit(language: DW_LANG_C99, file: !248, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !249, nameTableKind: None)
!5501 = !DILocalVariable(name: "num", arg: 2, scope: !5499, file: !5238, line: 43, type: !134)
!5502 = distinct !DISubprogram(name: "setlocale_null_r", scope: !5503, file: !5503, line: 269, type: !5504, scopeLine: 270, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !250, retainedNodes: !4)
!5503 = !DIFile(filename: "lib/setlocale_null.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!5504 = !DISubroutineType(types: !5505)
!5505 = !{!72, !72, !6, !134}
!5506 = !DILocalVariable(name: "category", arg: 1, scope: !5502, file: !5503, line: 269, type: !72)
!5507 = !DILocation(line: 269, column: 23, scope: !5502)
!5508 = !DILocalVariable(name: "buf", arg: 2, scope: !5502, file: !5503, line: 269, type: !6)
!5509 = !DILocation(line: 269, column: 39, scope: !5502)
!5510 = !DILocalVariable(name: "bufsize", arg: 3, scope: !5502, file: !5503, line: 269, type: !134)
!5511 = !DILocation(line: 269, column: 51, scope: !5502)
!5512 = !DILocation(line: 274, column: 35, scope: !5502)
!5513 = !DILocation(line: 274, column: 45, scope: !5502)
!5514 = !DILocation(line: 274, column: 50, scope: !5502)
!5515 = !DILocation(line: 274, column: 10, scope: !5502)
!5516 = !DILocation(line: 274, column: 3, scope: !5502)
!5517 = !DILocalVariable(name: "category", arg: 1, scope: !5518, file: !5503, line: 269, type: !72)
!5518 = distinct !DISubprogram(name: "setlocale_null_r", scope: !5503, file: !5503, line: 269, type: !5504, scopeLine: 270, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !5519, retainedNodes: !4)
!5519 = distinct !DICompileUnit(language: DW_LANG_C99, file: !251, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !212, nameTableKind: None)
!5520 = !DILocalVariable(name: "buf", arg: 2, scope: !5518, file: !5503, line: 269, type: !6)
!5521 = !DILocalVariable(name: "bufsize", arg: 3, scope: !5518, file: !5503, line: 269, type: !134)
!5522 = distinct !DISubprogram(name: "setlocale_null_unlocked", scope: !5503, file: !5503, line: 91, type: !5504, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !250, retainedNodes: !4)
!5523 = !DILocalVariable(name: "category", arg: 1, scope: !5522, file: !5503, line: 91, type: !72)
!5524 = !DILocation(line: 91, column: 30, scope: !5522)
!5525 = !DILocalVariable(name: "buf", arg: 2, scope: !5522, file: !5503, line: 91, type: !6)
!5526 = !DILocation(line: 91, column: 46, scope: !5522)
!5527 = !DILocalVariable(name: "bufsize", arg: 3, scope: !5522, file: !5503, line: 91, type: !134)
!5528 = !DILocation(line: 91, column: 58, scope: !5522)
!5529 = !DILocalVariable(name: "result", scope: !5522, file: !5503, line: 140, type: !69)
!5530 = !DILocation(line: 140, column: 15, scope: !5522)
!5531 = !DILocation(line: 140, column: 51, scope: !5522)
!5532 = !DILocation(line: 140, column: 24, scope: !5522)
!5533 = !DILocation(line: 142, column: 7, scope: !5534)
!5534 = distinct !DILexicalBlock(scope: !5522, file: !5503, line: 142, column: 7)
!5535 = !DILocation(line: 142, column: 14, scope: !5534)
!5536 = !DILocation(line: 142, column: 7, scope: !5522)
!5537 = !DILocation(line: 145, column: 11, scope: !5538)
!5538 = distinct !DILexicalBlock(scope: !5539, file: !5503, line: 145, column: 11)
!5539 = distinct !DILexicalBlock(scope: !5534, file: !5503, line: 143, column: 5)
!5540 = !DILocation(line: 145, column: 19, scope: !5538)
!5541 = !DILocation(line: 145, column: 11, scope: !5539)
!5542 = !DILocation(line: 149, column: 9, scope: !5538)
!5543 = !DILocation(line: 149, column: 16, scope: !5538)
!5544 = !DILocation(line: 150, column: 7, scope: !5539)
!5545 = !DILocalVariable(name: "length", scope: !5546, file: !5503, line: 154, type: !134)
!5546 = distinct !DILexicalBlock(scope: !5534, file: !5503, line: 153, column: 5)
!5547 = !DILocation(line: 154, column: 14, scope: !5546)
!5548 = !DILocation(line: 154, column: 31, scope: !5546)
!5549 = !DILocation(line: 154, column: 23, scope: !5546)
!5550 = !DILocation(line: 155, column: 11, scope: !5551)
!5551 = distinct !DILexicalBlock(scope: !5546, file: !5503, line: 155, column: 11)
!5552 = !DILocation(line: 155, column: 20, scope: !5551)
!5553 = !DILocation(line: 155, column: 18, scope: !5551)
!5554 = !DILocation(line: 155, column: 11, scope: !5546)
!5555 = !DILocation(line: 157, column: 19, scope: !5556)
!5556 = distinct !DILexicalBlock(scope: !5551, file: !5503, line: 156, column: 9)
!5557 = !DILocation(line: 157, column: 24, scope: !5556)
!5558 = !DILocation(line: 157, column: 32, scope: !5556)
!5559 = !DILocation(line: 157, column: 39, scope: !5556)
!5560 = !DILocation(line: 157, column: 11, scope: !5556)
!5561 = !DILocation(line: 158, column: 11, scope: !5556)
!5562 = !DILocation(line: 162, column: 15, scope: !5563)
!5563 = distinct !DILexicalBlock(scope: !5564, file: !5503, line: 162, column: 15)
!5564 = distinct !DILexicalBlock(scope: !5551, file: !5503, line: 161, column: 9)
!5565 = !DILocation(line: 162, column: 23, scope: !5563)
!5566 = !DILocation(line: 162, column: 15, scope: !5564)
!5567 = !DILocation(line: 167, column: 23, scope: !5568)
!5568 = distinct !DILexicalBlock(scope: !5563, file: !5503, line: 163, column: 13)
!5569 = !DILocation(line: 167, column: 28, scope: !5568)
!5570 = !DILocation(line: 167, column: 36, scope: !5568)
!5571 = !DILocation(line: 167, column: 44, scope: !5568)
!5572 = !DILocation(line: 167, column: 15, scope: !5568)
!5573 = !DILocation(line: 168, column: 15, scope: !5568)
!5574 = !DILocation(line: 168, column: 19, scope: !5568)
!5575 = !DILocation(line: 168, column: 27, scope: !5568)
!5576 = !DILocation(line: 168, column: 32, scope: !5568)
!5577 = !DILocation(line: 169, column: 13, scope: !5568)
!5578 = !DILocation(line: 170, column: 11, scope: !5564)
!5579 = !DILocation(line: 174, column: 1, scope: !5522)
!5580 = !DILocalVariable(name: "category", arg: 1, scope: !5581, file: !5503, line: 91, type: !72)
!5581 = distinct !DISubprogram(name: "setlocale_null_unlocked", scope: !5503, file: !5503, line: 91, type: !5504, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5582, retainedNodes: !4)
!5582 = distinct !DICompileUnit(language: DW_LANG_C99, file: !251, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !212, nameTableKind: None)
!5583 = !DILocalVariable(name: "buf", arg: 2, scope: !5581, file: !5503, line: 91, type: !6)
!5584 = !DILocalVariable(name: "bufsize", arg: 3, scope: !5581, file: !5503, line: 91, type: !134)
!5585 = !DILocalVariable(name: "result", scope: !5581, file: !5503, line: 140, type: !69)
!5586 = distinct !DISubprogram(name: "setlocale_null_androidfix", scope: !5503, file: !5503, line: 60, type: !5587, scopeLine: 61, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !250, retainedNodes: !4)
!5587 = !DISubroutineType(types: !5588)
!5588 = !{!69, !72}
!5589 = !DILocalVariable(name: "category", arg: 1, scope: !5586, file: !5503, line: 60, type: !72)
!5590 = !DILocation(line: 60, column: 32, scope: !5586)
!5591 = !DILocalVariable(name: "result", scope: !5586, file: !5503, line: 62, type: !69)
!5592 = !DILocation(line: 62, column: 15, scope: !5586)
!5593 = !DILocation(line: 62, column: 35, scope: !5586)
!5594 = !DILocation(line: 62, column: 24, scope: !5586)
!5595 = !DILocation(line: 87, column: 10, scope: !5586)
!5596 = !DILocation(line: 87, column: 3, scope: !5586)
!5597 = !DILocalVariable(name: "category", arg: 1, scope: !5598, file: !5503, line: 60, type: !72)
!5598 = distinct !DISubprogram(name: "setlocale_null_androidfix", scope: !5503, file: !5503, line: 60, type: !5587, scopeLine: 61, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5599, retainedNodes: !4)
!5599 = distinct !DICompileUnit(language: DW_LANG_C99, file: !251, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !212, nameTableKind: None)
!5600 = !DILocalVariable(name: "result", scope: !5598, file: !5503, line: 62, type: !69)
!5601 = distinct !DISubprogram(name: "rpl_fclose", scope: !5602, file: !5602, line: 58, type: !5603, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !252, retainedNodes: !4)
!5602 = !DIFile(filename: "lib/fclose.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!5603 = !DISubroutineType(types: !5604)
!5604 = !{!72, !5605}
!5605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5606, size: 64)
!5606 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !4069, line: 7, baseType: !5607)
!5607 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4071, line: 49, size: 1728, elements: !5608)
!5608 = !{!5609, !5610, !5611, !5612, !5613, !5614, !5615, !5616, !5617, !5618, !5619, !5620, !5621, !5622, !5624, !5625, !5626, !5627, !5628, !5629, !5630, !5631, !5632, !5633, !5634, !5635, !5636, !5637, !5638}
!5609 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !5607, file: !4071, line: 51, baseType: !72, size: 32)
!5610 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !5607, file: !4071, line: 54, baseType: !6, size: 64, offset: 64)
!5611 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !5607, file: !4071, line: 55, baseType: !6, size: 64, offset: 128)
!5612 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !5607, file: !4071, line: 56, baseType: !6, size: 64, offset: 192)
!5613 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !5607, file: !4071, line: 57, baseType: !6, size: 64, offset: 256)
!5614 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !5607, file: !4071, line: 58, baseType: !6, size: 64, offset: 320)
!5615 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !5607, file: !4071, line: 59, baseType: !6, size: 64, offset: 384)
!5616 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !5607, file: !4071, line: 60, baseType: !6, size: 64, offset: 448)
!5617 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !5607, file: !4071, line: 61, baseType: !6, size: 64, offset: 512)
!5618 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !5607, file: !4071, line: 64, baseType: !6, size: 64, offset: 576)
!5619 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !5607, file: !4071, line: 65, baseType: !6, size: 64, offset: 640)
!5620 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !5607, file: !4071, line: 66, baseType: !6, size: 64, offset: 704)
!5621 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !5607, file: !4071, line: 68, baseType: !4086, size: 64, offset: 768)
!5622 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !5607, file: !4071, line: 70, baseType: !5623, size: 64, offset: 832)
!5623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5607, size: 64)
!5624 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !5607, file: !4071, line: 72, baseType: !72, size: 32, offset: 896)
!5625 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !5607, file: !4071, line: 73, baseType: !72, size: 32, offset: 928)
!5626 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !5607, file: !4071, line: 74, baseType: !4093, size: 64, offset: 960)
!5627 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !5607, file: !4071, line: 77, baseType: !133, size: 16, offset: 1024)
!5628 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !5607, file: !4071, line: 78, baseType: !4096, size: 8, offset: 1040)
!5629 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !5607, file: !4071, line: 79, baseType: !4098, size: 8, offset: 1048)
!5630 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !5607, file: !4071, line: 81, baseType: !4102, size: 64, offset: 1088)
!5631 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !5607, file: !4071, line: 89, baseType: !4105, size: 64, offset: 1152)
!5632 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !5607, file: !4071, line: 91, baseType: !4107, size: 64, offset: 1216)
!5633 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !5607, file: !4071, line: 92, baseType: !4110, size: 64, offset: 1280)
!5634 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !5607, file: !4071, line: 93, baseType: !5623, size: 64, offset: 1344)
!5635 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !5607, file: !4071, line: 94, baseType: !8, size: 64, offset: 1408)
!5636 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !5607, file: !4071, line: 95, baseType: !134, size: 64, offset: 1472)
!5637 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !5607, file: !4071, line: 96, baseType: !72, size: 32, offset: 1536)
!5638 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !5607, file: !4071, line: 98, baseType: !4117, size: 160, offset: 1568)
!5639 = !DILocalVariable(name: "fp", arg: 1, scope: !5601, file: !5602, line: 58, type: !5605)
!5640 = !DILocation(line: 58, column: 19, scope: !5601)
!5641 = !DILocalVariable(name: "saved_errno", scope: !5601, file: !5602, line: 60, type: !72)
!5642 = !DILocation(line: 60, column: 7, scope: !5601)
!5643 = !DILocalVariable(name: "fd", scope: !5601, file: !5602, line: 61, type: !72)
!5644 = !DILocation(line: 61, column: 7, scope: !5601)
!5645 = !DILocalVariable(name: "result", scope: !5601, file: !5602, line: 62, type: !72)
!5646 = !DILocation(line: 62, column: 7, scope: !5601)
!5647 = !DILocation(line: 65, column: 16, scope: !5601)
!5648 = !DILocation(line: 65, column: 8, scope: !5601)
!5649 = !DILocation(line: 65, column: 6, scope: !5601)
!5650 = !DILocation(line: 66, column: 7, scope: !5651)
!5651 = distinct !DILexicalBlock(scope: !5601, file: !5602, line: 66, column: 7)
!5652 = !DILocation(line: 66, column: 10, scope: !5651)
!5653 = !DILocation(line: 66, column: 7, scope: !5601)
!5654 = !DILocation(line: 67, column: 28, scope: !5651)
!5655 = !DILocation(line: 67, column: 12, scope: !5651)
!5656 = !DILocation(line: 67, column: 5, scope: !5651)
!5657 = !DILocation(line: 72, column: 9, scope: !5658)
!5658 = distinct !DILexicalBlock(scope: !5601, file: !5602, line: 72, column: 7)
!5659 = !DILocation(line: 72, column: 23, scope: !5658)
!5660 = !DILocation(line: 72, column: 41, scope: !5658)
!5661 = !DILocation(line: 72, column: 33, scope: !5658)
!5662 = !DILocation(line: 72, column: 26, scope: !5658)
!5663 = !DILocation(line: 72, column: 59, scope: !5658)
!5664 = !DILocation(line: 73, column: 7, scope: !5658)
!5665 = !DILocation(line: 73, column: 18, scope: !5658)
!5666 = !DILocation(line: 73, column: 10, scope: !5658)
!5667 = !DILocation(line: 72, column: 7, scope: !5601)
!5668 = !DILocation(line: 74, column: 19, scope: !5658)
!5669 = !DILocation(line: 74, column: 17, scope: !5658)
!5670 = !DILocation(line: 74, column: 5, scope: !5658)
!5671 = !DILocation(line: 100, column: 28, scope: !5601)
!5672 = !DILocation(line: 100, column: 12, scope: !5601)
!5673 = !DILocation(line: 100, column: 10, scope: !5601)
!5674 = !DILocation(line: 105, column: 7, scope: !5675)
!5675 = distinct !DILexicalBlock(scope: !5601, file: !5602, line: 105, column: 7)
!5676 = !DILocation(line: 105, column: 19, scope: !5675)
!5677 = !DILocation(line: 105, column: 7, scope: !5601)
!5678 = !DILocation(line: 107, column: 15, scope: !5679)
!5679 = distinct !DILexicalBlock(scope: !5675, file: !5602, line: 106, column: 5)
!5680 = !DILocation(line: 107, column: 7, scope: !5679)
!5681 = !DILocation(line: 107, column: 13, scope: !5679)
!5682 = !DILocation(line: 108, column: 14, scope: !5679)
!5683 = !DILocation(line: 109, column: 5, scope: !5679)
!5684 = !DILocation(line: 111, column: 10, scope: !5601)
!5685 = !DILocation(line: 111, column: 3, scope: !5601)
!5686 = !DILocation(line: 112, column: 1, scope: !5601)
!5687 = !DILocalVariable(name: "fp", arg: 1, scope: !5688, file: !5602, line: 58, type: !5691)
!5688 = distinct !DISubprogram(name: "rpl_fclose", scope: !5602, file: !5602, line: 58, type: !5689, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !5725, retainedNodes: !4)
!5689 = !DISubroutineType(types: !5690)
!5690 = !{!72, !5691}
!5691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5692, size: 64)
!5692 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !4069, line: 7, baseType: !5693)
!5693 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4071, line: 49, size: 1728, elements: !5694)
!5694 = !{!5695, !5696, !5697, !5698, !5699, !5700, !5701, !5702, !5703, !5704, !5705, !5706, !5707, !5708, !5710, !5711, !5712, !5713, !5714, !5715, !5716, !5717, !5718, !5719, !5720, !5721, !5722, !5723, !5724}
!5695 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !5693, file: !4071, line: 51, baseType: !72, size: 32)
!5696 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !5693, file: !4071, line: 54, baseType: !6, size: 64, offset: 64)
!5697 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !5693, file: !4071, line: 55, baseType: !6, size: 64, offset: 128)
!5698 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !5693, file: !4071, line: 56, baseType: !6, size: 64, offset: 192)
!5699 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !5693, file: !4071, line: 57, baseType: !6, size: 64, offset: 256)
!5700 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !5693, file: !4071, line: 58, baseType: !6, size: 64, offset: 320)
!5701 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !5693, file: !4071, line: 59, baseType: !6, size: 64, offset: 384)
!5702 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !5693, file: !4071, line: 60, baseType: !6, size: 64, offset: 448)
!5703 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !5693, file: !4071, line: 61, baseType: !6, size: 64, offset: 512)
!5704 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !5693, file: !4071, line: 64, baseType: !6, size: 64, offset: 576)
!5705 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !5693, file: !4071, line: 65, baseType: !6, size: 64, offset: 640)
!5706 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !5693, file: !4071, line: 66, baseType: !6, size: 64, offset: 704)
!5707 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !5693, file: !4071, line: 68, baseType: !4086, size: 64, offset: 768)
!5708 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !5693, file: !4071, line: 70, baseType: !5709, size: 64, offset: 832)
!5709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5693, size: 64)
!5710 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !5693, file: !4071, line: 72, baseType: !72, size: 32, offset: 896)
!5711 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !5693, file: !4071, line: 73, baseType: !72, size: 32, offset: 928)
!5712 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !5693, file: !4071, line: 74, baseType: !4093, size: 64, offset: 960)
!5713 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !5693, file: !4071, line: 77, baseType: !133, size: 16, offset: 1024)
!5714 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !5693, file: !4071, line: 78, baseType: !4096, size: 8, offset: 1040)
!5715 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !5693, file: !4071, line: 79, baseType: !4098, size: 8, offset: 1048)
!5716 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !5693, file: !4071, line: 81, baseType: !4102, size: 64, offset: 1088)
!5717 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !5693, file: !4071, line: 89, baseType: !4105, size: 64, offset: 1152)
!5718 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !5693, file: !4071, line: 91, baseType: !4107, size: 64, offset: 1216)
!5719 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !5693, file: !4071, line: 92, baseType: !4110, size: 64, offset: 1280)
!5720 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !5693, file: !4071, line: 93, baseType: !5709, size: 64, offset: 1344)
!5721 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !5693, file: !4071, line: 94, baseType: !8, size: 64, offset: 1408)
!5722 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !5693, file: !4071, line: 95, baseType: !134, size: 64, offset: 1472)
!5723 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !5693, file: !4071, line: 96, baseType: !72, size: 32, offset: 1536)
!5724 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !5693, file: !4071, line: 98, baseType: !4117, size: 160, offset: 1568)
!5725 = distinct !DICompileUnit(language: DW_LANG_C99, file: !253, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, nameTableKind: None)
!5726 = !DILocalVariable(name: "saved_errno", scope: !5688, file: !5602, line: 60, type: !72)
!5727 = !DILocalVariable(name: "fd", scope: !5688, file: !5602, line: 61, type: !72)
!5728 = !DILocalVariable(name: "result", scope: !5688, file: !5602, line: 62, type: !72)
!5729 = distinct !DISubprogram(name: "rpl_fflush", scope: !5730, file: !5730, line: 129, type: !5731, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !254, retainedNodes: !4)
!5730 = !DIFile(filename: "lib/fflush.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!5731 = !DISubroutineType(types: !5732)
!5732 = !{!72, !5733}
!5733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5734, size: 64)
!5734 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !4069, line: 7, baseType: !5735)
!5735 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4071, line: 49, size: 1728, elements: !5736)
!5736 = !{!5737, !5738, !5739, !5740, !5741, !5742, !5743, !5744, !5745, !5746, !5747, !5748, !5749, !5750, !5752, !5753, !5754, !5755, !5756, !5757, !5758, !5759, !5760, !5761, !5762, !5763, !5764, !5765, !5766}
!5737 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !5735, file: !4071, line: 51, baseType: !72, size: 32)
!5738 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !5735, file: !4071, line: 54, baseType: !6, size: 64, offset: 64)
!5739 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !5735, file: !4071, line: 55, baseType: !6, size: 64, offset: 128)
!5740 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !5735, file: !4071, line: 56, baseType: !6, size: 64, offset: 192)
!5741 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !5735, file: !4071, line: 57, baseType: !6, size: 64, offset: 256)
!5742 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !5735, file: !4071, line: 58, baseType: !6, size: 64, offset: 320)
!5743 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !5735, file: !4071, line: 59, baseType: !6, size: 64, offset: 384)
!5744 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !5735, file: !4071, line: 60, baseType: !6, size: 64, offset: 448)
!5745 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !5735, file: !4071, line: 61, baseType: !6, size: 64, offset: 512)
!5746 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !5735, file: !4071, line: 64, baseType: !6, size: 64, offset: 576)
!5747 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !5735, file: !4071, line: 65, baseType: !6, size: 64, offset: 640)
!5748 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !5735, file: !4071, line: 66, baseType: !6, size: 64, offset: 704)
!5749 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !5735, file: !4071, line: 68, baseType: !4086, size: 64, offset: 768)
!5750 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !5735, file: !4071, line: 70, baseType: !5751, size: 64, offset: 832)
!5751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5735, size: 64)
!5752 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !5735, file: !4071, line: 72, baseType: !72, size: 32, offset: 896)
!5753 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !5735, file: !4071, line: 73, baseType: !72, size: 32, offset: 928)
!5754 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !5735, file: !4071, line: 74, baseType: !4093, size: 64, offset: 960)
!5755 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !5735, file: !4071, line: 77, baseType: !133, size: 16, offset: 1024)
!5756 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !5735, file: !4071, line: 78, baseType: !4096, size: 8, offset: 1040)
!5757 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !5735, file: !4071, line: 79, baseType: !4098, size: 8, offset: 1048)
!5758 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !5735, file: !4071, line: 81, baseType: !4102, size: 64, offset: 1088)
!5759 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !5735, file: !4071, line: 89, baseType: !4105, size: 64, offset: 1152)
!5760 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !5735, file: !4071, line: 91, baseType: !4107, size: 64, offset: 1216)
!5761 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !5735, file: !4071, line: 92, baseType: !4110, size: 64, offset: 1280)
!5762 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !5735, file: !4071, line: 93, baseType: !5751, size: 64, offset: 1344)
!5763 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !5735, file: !4071, line: 94, baseType: !8, size: 64, offset: 1408)
!5764 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !5735, file: !4071, line: 95, baseType: !134, size: 64, offset: 1472)
!5765 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !5735, file: !4071, line: 96, baseType: !72, size: 32, offset: 1536)
!5766 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !5735, file: !4071, line: 98, baseType: !4117, size: 160, offset: 1568)
!5767 = !DILocalVariable(name: "stream", arg: 1, scope: !5729, file: !5730, line: 129, type: !5733)
!5768 = !DILocation(line: 129, column: 19, scope: !5729)
!5769 = !DILocation(line: 150, column: 7, scope: !5770)
!5770 = distinct !DILexicalBlock(scope: !5729, file: !5730, line: 150, column: 7)
!5771 = !DILocation(line: 150, column: 14, scope: !5770)
!5772 = !DILocation(line: 150, column: 22, scope: !5770)
!5773 = !DILocation(line: 150, column: 27, scope: !5770)
!5774 = !DILocation(line: 150, column: 7, scope: !5729)
!5775 = !DILocation(line: 151, column: 20, scope: !5770)
!5776 = !DILocation(line: 151, column: 12, scope: !5770)
!5777 = !DILocation(line: 151, column: 5, scope: !5770)
!5778 = !DILocation(line: 156, column: 44, scope: !5729)
!5779 = !DILocation(line: 156, column: 3, scope: !5729)
!5780 = !DILocation(line: 158, column: 18, scope: !5729)
!5781 = !DILocation(line: 158, column: 10, scope: !5729)
!5782 = !DILocation(line: 158, column: 3, scope: !5729)
!5783 = !DILocation(line: 235, column: 1, scope: !5729)
!5784 = !DILocalVariable(name: "stream", arg: 1, scope: !5785, file: !5730, line: 129, type: !5788)
!5785 = distinct !DISubprogram(name: "rpl_fflush", scope: !5730, file: !5730, line: 129, type: !5786, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !5822, retainedNodes: !4)
!5786 = !DISubroutineType(types: !5787)
!5787 = !{!72, !5788}
!5788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5789, size: 64)
!5789 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !4069, line: 7, baseType: !5790)
!5790 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4071, line: 49, size: 1728, elements: !5791)
!5791 = !{!5792, !5793, !5794, !5795, !5796, !5797, !5798, !5799, !5800, !5801, !5802, !5803, !5804, !5805, !5807, !5808, !5809, !5810, !5811, !5812, !5813, !5814, !5815, !5816, !5817, !5818, !5819, !5820, !5821}
!5792 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !5790, file: !4071, line: 51, baseType: !72, size: 32)
!5793 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !5790, file: !4071, line: 54, baseType: !6, size: 64, offset: 64)
!5794 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !5790, file: !4071, line: 55, baseType: !6, size: 64, offset: 128)
!5795 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !5790, file: !4071, line: 56, baseType: !6, size: 64, offset: 192)
!5796 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !5790, file: !4071, line: 57, baseType: !6, size: 64, offset: 256)
!5797 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !5790, file: !4071, line: 58, baseType: !6, size: 64, offset: 320)
!5798 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !5790, file: !4071, line: 59, baseType: !6, size: 64, offset: 384)
!5799 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !5790, file: !4071, line: 60, baseType: !6, size: 64, offset: 448)
!5800 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !5790, file: !4071, line: 61, baseType: !6, size: 64, offset: 512)
!5801 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !5790, file: !4071, line: 64, baseType: !6, size: 64, offset: 576)
!5802 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !5790, file: !4071, line: 65, baseType: !6, size: 64, offset: 640)
!5803 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !5790, file: !4071, line: 66, baseType: !6, size: 64, offset: 704)
!5804 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !5790, file: !4071, line: 68, baseType: !4086, size: 64, offset: 768)
!5805 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !5790, file: !4071, line: 70, baseType: !5806, size: 64, offset: 832)
!5806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5790, size: 64)
!5807 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !5790, file: !4071, line: 72, baseType: !72, size: 32, offset: 896)
!5808 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !5790, file: !4071, line: 73, baseType: !72, size: 32, offset: 928)
!5809 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !5790, file: !4071, line: 74, baseType: !4093, size: 64, offset: 960)
!5810 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !5790, file: !4071, line: 77, baseType: !133, size: 16, offset: 1024)
!5811 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !5790, file: !4071, line: 78, baseType: !4096, size: 8, offset: 1040)
!5812 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !5790, file: !4071, line: 79, baseType: !4098, size: 8, offset: 1048)
!5813 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !5790, file: !4071, line: 81, baseType: !4102, size: 64, offset: 1088)
!5814 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !5790, file: !4071, line: 89, baseType: !4105, size: 64, offset: 1152)
!5815 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !5790, file: !4071, line: 91, baseType: !4107, size: 64, offset: 1216)
!5816 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !5790, file: !4071, line: 92, baseType: !4110, size: 64, offset: 1280)
!5817 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !5790, file: !4071, line: 93, baseType: !5806, size: 64, offset: 1344)
!5818 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !5790, file: !4071, line: 94, baseType: !8, size: 64, offset: 1408)
!5819 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !5790, file: !4071, line: 95, baseType: !134, size: 64, offset: 1472)
!5820 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !5790, file: !4071, line: 96, baseType: !72, size: 32, offset: 1536)
!5821 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !5790, file: !4071, line: 98, baseType: !4117, size: 160, offset: 1568)
!5822 = distinct !DICompileUnit(language: DW_LANG_C99, file: !255, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !212, nameTableKind: None)
!5823 = distinct !DISubprogram(name: "clear_ungetc_buffer_preserving_position", scope: !5730, file: !5730, line: 41, type: !5824, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !254, retainedNodes: !4)
!5824 = !DISubroutineType(types: !5825)
!5825 = !{null, !5733}
!5826 = !DILocalVariable(name: "fp", arg: 1, scope: !5823, file: !5730, line: 41, type: !5733)
!5827 = !DILocation(line: 41, column: 48, scope: !5823)
!5828 = !DILocation(line: 43, column: 7, scope: !5829)
!5829 = distinct !DILexicalBlock(scope: !5823, file: !5730, line: 43, column: 7)
!5830 = !DILocation(line: 43, column: 11, scope: !5829)
!5831 = !DILocation(line: 43, column: 18, scope: !5829)
!5832 = !DILocation(line: 43, column: 7, scope: !5823)
!5833 = !DILocation(line: 45, column: 13, scope: !5829)
!5834 = !DILocation(line: 45, column: 5, scope: !5829)
!5835 = !DILocation(line: 46, column: 1, scope: !5823)
!5836 = !DILocalVariable(name: "fp", arg: 1, scope: !5837, file: !5730, line: 41, type: !5840)
!5837 = distinct !DISubprogram(name: "clear_ungetc_buffer_preserving_position", scope: !5730, file: !5730, line: 41, type: !5838, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5874, retainedNodes: !4)
!5838 = !DISubroutineType(types: !5839)
!5839 = !{null, !5840}
!5840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5841, size: 64)
!5841 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !4069, line: 7, baseType: !5842)
!5842 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4071, line: 49, size: 1728, elements: !5843)
!5843 = !{!5844, !5845, !5846, !5847, !5848, !5849, !5850, !5851, !5852, !5853, !5854, !5855, !5856, !5857, !5859, !5860, !5861, !5862, !5863, !5864, !5865, !5866, !5867, !5868, !5869, !5870, !5871, !5872, !5873}
!5844 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !5842, file: !4071, line: 51, baseType: !72, size: 32)
!5845 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !5842, file: !4071, line: 54, baseType: !6, size: 64, offset: 64)
!5846 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !5842, file: !4071, line: 55, baseType: !6, size: 64, offset: 128)
!5847 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !5842, file: !4071, line: 56, baseType: !6, size: 64, offset: 192)
!5848 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !5842, file: !4071, line: 57, baseType: !6, size: 64, offset: 256)
!5849 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !5842, file: !4071, line: 58, baseType: !6, size: 64, offset: 320)
!5850 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !5842, file: !4071, line: 59, baseType: !6, size: 64, offset: 384)
!5851 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !5842, file: !4071, line: 60, baseType: !6, size: 64, offset: 448)
!5852 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !5842, file: !4071, line: 61, baseType: !6, size: 64, offset: 512)
!5853 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !5842, file: !4071, line: 64, baseType: !6, size: 64, offset: 576)
!5854 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !5842, file: !4071, line: 65, baseType: !6, size: 64, offset: 640)
!5855 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !5842, file: !4071, line: 66, baseType: !6, size: 64, offset: 704)
!5856 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !5842, file: !4071, line: 68, baseType: !4086, size: 64, offset: 768)
!5857 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !5842, file: !4071, line: 70, baseType: !5858, size: 64, offset: 832)
!5858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5842, size: 64)
!5859 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !5842, file: !4071, line: 72, baseType: !72, size: 32, offset: 896)
!5860 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !5842, file: !4071, line: 73, baseType: !72, size: 32, offset: 928)
!5861 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !5842, file: !4071, line: 74, baseType: !4093, size: 64, offset: 960)
!5862 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !5842, file: !4071, line: 77, baseType: !133, size: 16, offset: 1024)
!5863 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !5842, file: !4071, line: 78, baseType: !4096, size: 8, offset: 1040)
!5864 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !5842, file: !4071, line: 79, baseType: !4098, size: 8, offset: 1048)
!5865 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !5842, file: !4071, line: 81, baseType: !4102, size: 64, offset: 1088)
!5866 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !5842, file: !4071, line: 89, baseType: !4105, size: 64, offset: 1152)
!5867 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !5842, file: !4071, line: 91, baseType: !4107, size: 64, offset: 1216)
!5868 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !5842, file: !4071, line: 92, baseType: !4110, size: 64, offset: 1280)
!5869 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !5842, file: !4071, line: 93, baseType: !5858, size: 64, offset: 1344)
!5870 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !5842, file: !4071, line: 94, baseType: !8, size: 64, offset: 1408)
!5871 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !5842, file: !4071, line: 95, baseType: !134, size: 64, offset: 1472)
!5872 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !5842, file: !4071, line: 96, baseType: !72, size: 32, offset: 1536)
!5873 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !5842, file: !4071, line: 98, baseType: !4117, size: 160, offset: 1568)
!5874 = distinct !DICompileUnit(language: DW_LANG_C99, file: !255, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !212, nameTableKind: None)
!5875 = distinct !DISubprogram(name: "rpl_fseeko", scope: !5876, file: !5876, line: 28, type: !5877, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !256, retainedNodes: !4)
!5876 = !DIFile(filename: "lib/fseeko.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!5877 = !DISubroutineType(types: !5878)
!5878 = !{!72, !5879, !5913, !72}
!5879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5880, size: 64)
!5880 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !4069, line: 7, baseType: !5881)
!5881 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4071, line: 49, size: 1728, elements: !5882)
!5882 = !{!5883, !5884, !5885, !5886, !5887, !5888, !5889, !5890, !5891, !5892, !5893, !5894, !5895, !5896, !5898, !5899, !5900, !5901, !5902, !5903, !5904, !5905, !5906, !5907, !5908, !5909, !5910, !5911, !5912}
!5883 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !5881, file: !4071, line: 51, baseType: !72, size: 32)
!5884 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !5881, file: !4071, line: 54, baseType: !6, size: 64, offset: 64)
!5885 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !5881, file: !4071, line: 55, baseType: !6, size: 64, offset: 128)
!5886 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !5881, file: !4071, line: 56, baseType: !6, size: 64, offset: 192)
!5887 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !5881, file: !4071, line: 57, baseType: !6, size: 64, offset: 256)
!5888 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !5881, file: !4071, line: 58, baseType: !6, size: 64, offset: 320)
!5889 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !5881, file: !4071, line: 59, baseType: !6, size: 64, offset: 384)
!5890 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !5881, file: !4071, line: 60, baseType: !6, size: 64, offset: 448)
!5891 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !5881, file: !4071, line: 61, baseType: !6, size: 64, offset: 512)
!5892 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !5881, file: !4071, line: 64, baseType: !6, size: 64, offset: 576)
!5893 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !5881, file: !4071, line: 65, baseType: !6, size: 64, offset: 640)
!5894 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !5881, file: !4071, line: 66, baseType: !6, size: 64, offset: 704)
!5895 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !5881, file: !4071, line: 68, baseType: !4086, size: 64, offset: 768)
!5896 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !5881, file: !4071, line: 70, baseType: !5897, size: 64, offset: 832)
!5897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5881, size: 64)
!5898 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !5881, file: !4071, line: 72, baseType: !72, size: 32, offset: 896)
!5899 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !5881, file: !4071, line: 73, baseType: !72, size: 32, offset: 928)
!5900 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !5881, file: !4071, line: 74, baseType: !4093, size: 64, offset: 960)
!5901 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !5881, file: !4071, line: 77, baseType: !133, size: 16, offset: 1024)
!5902 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !5881, file: !4071, line: 78, baseType: !4096, size: 8, offset: 1040)
!5903 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !5881, file: !4071, line: 79, baseType: !4098, size: 8, offset: 1048)
!5904 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !5881, file: !4071, line: 81, baseType: !4102, size: 64, offset: 1088)
!5905 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !5881, file: !4071, line: 89, baseType: !4105, size: 64, offset: 1152)
!5906 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !5881, file: !4071, line: 91, baseType: !4107, size: 64, offset: 1216)
!5907 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !5881, file: !4071, line: 92, baseType: !4110, size: 64, offset: 1280)
!5908 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !5881, file: !4071, line: 93, baseType: !5897, size: 64, offset: 1344)
!5909 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !5881, file: !4071, line: 94, baseType: !8, size: 64, offset: 1408)
!5910 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !5881, file: !4071, line: 95, baseType: !134, size: 64, offset: 1472)
!5911 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !5881, file: !4071, line: 96, baseType: !72, size: 32, offset: 1536)
!5912 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !5881, file: !4071, line: 98, baseType: !4117, size: 160, offset: 1568)
!5913 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_t", file: !979, line: 63, baseType: !4093)
!5914 = !DILocalVariable(name: "fp", arg: 1, scope: !5875, file: !5876, line: 28, type: !5879)
!5915 = !DILocation(line: 28, column: 15, scope: !5875)
!5916 = !DILocalVariable(name: "offset", arg: 2, scope: !5875, file: !5876, line: 28, type: !5913)
!5917 = !DILocation(line: 28, column: 25, scope: !5875)
!5918 = !DILocalVariable(name: "whence", arg: 3, scope: !5875, file: !5876, line: 28, type: !72)
!5919 = !DILocation(line: 28, column: 37, scope: !5875)
!5920 = !DILocation(line: 52, column: 7, scope: !5921)
!5921 = distinct !DILexicalBlock(scope: !5875, file: !5876, line: 52, column: 7)
!5922 = !DILocation(line: 52, column: 11, scope: !5921)
!5923 = !DILocation(line: 52, column: 27, scope: !5921)
!5924 = !DILocation(line: 52, column: 31, scope: !5921)
!5925 = !DILocation(line: 52, column: 24, scope: !5921)
!5926 = !DILocation(line: 53, column: 7, scope: !5921)
!5927 = !DILocation(line: 53, column: 10, scope: !5921)
!5928 = !DILocation(line: 53, column: 14, scope: !5921)
!5929 = !DILocation(line: 53, column: 31, scope: !5921)
!5930 = !DILocation(line: 53, column: 35, scope: !5921)
!5931 = !DILocation(line: 53, column: 28, scope: !5921)
!5932 = !DILocation(line: 54, column: 7, scope: !5921)
!5933 = !DILocation(line: 54, column: 10, scope: !5921)
!5934 = !DILocation(line: 54, column: 14, scope: !5921)
!5935 = !DILocation(line: 54, column: 28, scope: !5921)
!5936 = !DILocation(line: 52, column: 7, scope: !5875)
!5937 = !DILocalVariable(name: "pos", scope: !5938, file: !5876, line: 117, type: !5913)
!5938 = distinct !DILexicalBlock(scope: !5921, file: !5876, line: 113, column: 5)
!5939 = !DILocation(line: 117, column: 13, scope: !5938)
!5940 = !DILocation(line: 117, column: 34, scope: !5938)
!5941 = !DILocation(line: 117, column: 26, scope: !5938)
!5942 = !DILocation(line: 117, column: 39, scope: !5938)
!5943 = !DILocation(line: 117, column: 47, scope: !5938)
!5944 = !DILocation(line: 117, column: 19, scope: !5938)
!5945 = !DILocation(line: 118, column: 11, scope: !5946)
!5946 = distinct !DILexicalBlock(scope: !5938, file: !5876, line: 118, column: 11)
!5947 = !DILocation(line: 118, column: 15, scope: !5946)
!5948 = !DILocation(line: 118, column: 11, scope: !5938)
!5949 = !DILocation(line: 124, column: 11, scope: !5950)
!5950 = distinct !DILexicalBlock(scope: !5946, file: !5876, line: 119, column: 9)
!5951 = !DILocation(line: 129, column: 7, scope: !5938)
!5952 = !DILocation(line: 129, column: 11, scope: !5938)
!5953 = !DILocation(line: 129, column: 18, scope: !5938)
!5954 = !DILocation(line: 130, column: 21, scope: !5938)
!5955 = !DILocation(line: 130, column: 7, scope: !5938)
!5956 = !DILocation(line: 130, column: 11, scope: !5938)
!5957 = !DILocation(line: 130, column: 19, scope: !5938)
!5958 = !DILocation(line: 161, column: 7, scope: !5938)
!5959 = !DILocation(line: 163, column: 18, scope: !5875)
!5960 = !DILocation(line: 163, column: 22, scope: !5875)
!5961 = !DILocation(line: 163, column: 30, scope: !5875)
!5962 = !DILocation(line: 163, column: 10, scope: !5875)
!5963 = !DILocation(line: 163, column: 3, scope: !5875)
!5964 = !DILocation(line: 164, column: 1, scope: !5875)
!5965 = !DILocalVariable(name: "fp", arg: 1, scope: !5966, file: !5876, line: 28, type: !5969)
!5966 = distinct !DISubprogram(name: "rpl_fseeko", scope: !5876, file: !5876, line: 28, type: !5967, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !6003, retainedNodes: !4)
!5967 = !DISubroutineType(types: !5968)
!5968 = !{!72, !5969, !5913, !72}
!5969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5970, size: 64)
!5970 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !4069, line: 7, baseType: !5971)
!5971 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4071, line: 49, size: 1728, elements: !5972)
!5972 = !{!5973, !5974, !5975, !5976, !5977, !5978, !5979, !5980, !5981, !5982, !5983, !5984, !5985, !5986, !5988, !5989, !5990, !5991, !5992, !5993, !5994, !5995, !5996, !5997, !5998, !5999, !6000, !6001, !6002}
!5973 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !5971, file: !4071, line: 51, baseType: !72, size: 32)
!5974 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !5971, file: !4071, line: 54, baseType: !6, size: 64, offset: 64)
!5975 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !5971, file: !4071, line: 55, baseType: !6, size: 64, offset: 128)
!5976 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !5971, file: !4071, line: 56, baseType: !6, size: 64, offset: 192)
!5977 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !5971, file: !4071, line: 57, baseType: !6, size: 64, offset: 256)
!5978 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !5971, file: !4071, line: 58, baseType: !6, size: 64, offset: 320)
!5979 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !5971, file: !4071, line: 59, baseType: !6, size: 64, offset: 384)
!5980 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !5971, file: !4071, line: 60, baseType: !6, size: 64, offset: 448)
!5981 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !5971, file: !4071, line: 61, baseType: !6, size: 64, offset: 512)
!5982 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !5971, file: !4071, line: 64, baseType: !6, size: 64, offset: 576)
!5983 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !5971, file: !4071, line: 65, baseType: !6, size: 64, offset: 640)
!5984 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !5971, file: !4071, line: 66, baseType: !6, size: 64, offset: 704)
!5985 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !5971, file: !4071, line: 68, baseType: !4086, size: 64, offset: 768)
!5986 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !5971, file: !4071, line: 70, baseType: !5987, size: 64, offset: 832)
!5987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5971, size: 64)
!5988 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !5971, file: !4071, line: 72, baseType: !72, size: 32, offset: 896)
!5989 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !5971, file: !4071, line: 73, baseType: !72, size: 32, offset: 928)
!5990 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !5971, file: !4071, line: 74, baseType: !4093, size: 64, offset: 960)
!5991 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !5971, file: !4071, line: 77, baseType: !133, size: 16, offset: 1024)
!5992 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !5971, file: !4071, line: 78, baseType: !4096, size: 8, offset: 1040)
!5993 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !5971, file: !4071, line: 79, baseType: !4098, size: 8, offset: 1048)
!5994 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !5971, file: !4071, line: 81, baseType: !4102, size: 64, offset: 1088)
!5995 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !5971, file: !4071, line: 89, baseType: !4105, size: 64, offset: 1152)
!5996 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !5971, file: !4071, line: 91, baseType: !4107, size: 64, offset: 1216)
!5997 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !5971, file: !4071, line: 92, baseType: !4110, size: 64, offset: 1280)
!5998 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !5971, file: !4071, line: 93, baseType: !5987, size: 64, offset: 1344)
!5999 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !5971, file: !4071, line: 94, baseType: !8, size: 64, offset: 1408)
!6000 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !5971, file: !4071, line: 95, baseType: !134, size: 64, offset: 1472)
!6001 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !5971, file: !4071, line: 96, baseType: !72, size: 32, offset: 1536)
!6002 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !5971, file: !4071, line: 98, baseType: !4117, size: 160, offset: 1568)
!6003 = distinct !DICompileUnit(language: DW_LANG_C99, file: !257, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !212, nameTableKind: None)
!6004 = !DILocalVariable(name: "offset", arg: 2, scope: !5966, file: !5876, line: 28, type: !5913)
!6005 = !DILocalVariable(name: "whence", arg: 3, scope: !5966, file: !5876, line: 28, type: !72)
!6006 = distinct !DISubprogram(name: "c_tolower", scope: !6007, file: !6007, line: 337, type: !6008, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !258, retainedNodes: !4)
!6007 = !DIFile(filename: "./lib/c-ctype.h", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!6008 = !DISubroutineType(types: !6009)
!6009 = !{!72, !72}
!6010 = !DILocalVariable(name: "c", arg: 1, scope: !6006, file: !6007, line: 337, type: !72)
!6011 = !DILocation(line: 337, column: 16, scope: !6006)
!6012 = !DILocation(line: 339, column: 11, scope: !6006)
!6013 = !DILocation(line: 339, column: 3, scope: !6006)
!6014 = !DILocation(line: 342, column: 14, scope: !6015)
!6015 = distinct !DILexicalBlock(scope: !6006, file: !6007, line: 340, column: 5)
!6016 = !DILocation(line: 342, column: 16, scope: !6015)
!6017 = !DILocation(line: 342, column: 22, scope: !6015)
!6018 = !DILocation(line: 342, column: 7, scope: !6015)
!6019 = !DILocation(line: 344, column: 14, scope: !6015)
!6020 = !DILocation(line: 344, column: 7, scope: !6015)
!6021 = !DILocation(line: 346, column: 1, scope: !6006)
!6022 = !DILocalVariable(name: "c", arg: 1, scope: !6023, file: !6007, line: 337, type: !72)
!6023 = distinct !DISubprogram(name: "c_tolower", scope: !6007, file: !6007, line: 337, type: !6008, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !6024, retainedNodes: !4)
!6024 = distinct !DICompileUnit(language: DW_LANG_C99, file: !259, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, nameTableKind: None)
!6025 = distinct !DISubprogram(name: "getugroups", scope: !6026, file: !6026, line: 61, type: !6027, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !260, retainedNodes: !4)
!6026 = !DIFile(filename: "lib/getugroups.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!6027 = !DISubroutineType(types: !6028)
!6028 = !{!72, !72, !183, !69, !21}
!6029 = !DILocalVariable(name: "maxcount", arg: 1, scope: !6025, file: !6026, line: 61, type: !72)
!6030 = !DILocation(line: 61, column: 17, scope: !6025)
!6031 = !DILocalVariable(name: "grouplist", arg: 2, scope: !6025, file: !6026, line: 61, type: !183)
!6032 = !DILocation(line: 61, column: 34, scope: !6025)
!6033 = !DILocalVariable(name: "username", arg: 3, scope: !6025, file: !6026, line: 61, type: !69)
!6034 = !DILocation(line: 61, column: 57, scope: !6025)
!6035 = !DILocalVariable(name: "gid", arg: 4, scope: !6025, file: !6026, line: 62, type: !21)
!6036 = !DILocation(line: 62, column: 19, scope: !6025)
!6037 = !DILocalVariable(name: "count", scope: !6025, file: !6026, line: 64, type: !72)
!6038 = !DILocation(line: 64, column: 7, scope: !6025)
!6039 = !DILocation(line: 66, column: 7, scope: !6040)
!6040 = distinct !DILexicalBlock(scope: !6025, file: !6026, line: 66, column: 7)
!6041 = !DILocation(line: 66, column: 11, scope: !6040)
!6042 = !DILocation(line: 66, column: 7, scope: !6025)
!6043 = !DILocation(line: 68, column: 11, scope: !6044)
!6044 = distinct !DILexicalBlock(scope: !6045, file: !6026, line: 68, column: 11)
!6045 = distinct !DILexicalBlock(scope: !6040, file: !6026, line: 67, column: 5)
!6046 = !DILocation(line: 68, column: 20, scope: !6044)
!6047 = !DILocation(line: 68, column: 11, scope: !6045)
!6048 = !DILocation(line: 69, column: 28, scope: !6044)
!6049 = !DILocation(line: 69, column: 9, scope: !6044)
!6050 = !DILocation(line: 69, column: 19, scope: !6044)
!6051 = !DILocation(line: 69, column: 26, scope: !6044)
!6052 = !DILocation(line: 70, column: 7, scope: !6045)
!6053 = !DILocation(line: 71, column: 5, scope: !6045)
!6054 = !DILocation(line: 73, column: 3, scope: !6025)
!6055 = !DILocation(line: 74, column: 3, scope: !6025)
!6056 = !DILocalVariable(name: "cp", scope: !6057, file: !6026, line: 76, type: !184)
!6057 = distinct !DILexicalBlock(scope: !6025, file: !6026, line: 75, column: 5)
!6058 = !DILocation(line: 76, column: 14, scope: !6057)
!6059 = !DILocalVariable(name: "grp", scope: !6057, file: !6026, line: 77, type: !6060)
!6060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6061, size: 64)
!6061 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group", file: !1233, line: 42, size: 256, elements: !6062)
!6062 = !{!6063, !6064, !6065, !6066}
!6063 = !DIDerivedType(tag: DW_TAG_member, name: "gr_name", scope: !6061, file: !1233, line: 44, baseType: !6, size: 64)
!6064 = !DIDerivedType(tag: DW_TAG_member, name: "gr_passwd", scope: !6061, file: !1233, line: 45, baseType: !6, size: 64, offset: 64)
!6065 = !DIDerivedType(tag: DW_TAG_member, name: "gr_gid", scope: !6061, file: !1233, line: 46, baseType: !22, size: 32, offset: 128)
!6066 = !DIDerivedType(tag: DW_TAG_member, name: "gr_mem", scope: !6061, file: !1233, line: 47, baseType: !184, size: 64, offset: 192)
!6067 = !DILocation(line: 77, column: 21, scope: !6057)
!6068 = !DILocation(line: 79, column: 7, scope: !6057)
!6069 = !DILocation(line: 79, column: 13, scope: !6057)
!6070 = !DILocation(line: 80, column: 13, scope: !6057)
!6071 = !DILocation(line: 80, column: 11, scope: !6057)
!6072 = !DILocation(line: 81, column: 11, scope: !6073)
!6073 = distinct !DILexicalBlock(scope: !6057, file: !6026, line: 81, column: 11)
!6074 = !DILocation(line: 81, column: 15, scope: !6073)
!6075 = !DILocation(line: 81, column: 11, scope: !6057)
!6076 = !DILocation(line: 82, column: 9, scope: !6073)
!6077 = !DILocation(line: 84, column: 17, scope: !6078)
!6078 = distinct !DILexicalBlock(scope: !6057, file: !6026, line: 84, column: 7)
!6079 = !DILocation(line: 84, column: 22, scope: !6078)
!6080 = !DILocation(line: 84, column: 15, scope: !6078)
!6081 = !DILocation(line: 84, column: 12, scope: !6078)
!6082 = !DILocation(line: 84, column: 31, scope: !6083)
!6083 = distinct !DILexicalBlock(scope: !6078, file: !6026, line: 84, column: 7)
!6084 = !DILocation(line: 84, column: 30, scope: !6083)
!6085 = !DILocation(line: 84, column: 7, scope: !6078)
!6086 = !DILocalVariable(name: "n", scope: !6087, file: !6026, line: 86, type: !72)
!6087 = distinct !DILexicalBlock(scope: !6083, file: !6026, line: 85, column: 9)
!6088 = !DILocation(line: 86, column: 15, scope: !6087)
!6089 = !DILocation(line: 88, column: 18, scope: !6090)
!6090 = distinct !DILexicalBlock(scope: !6087, file: !6026, line: 88, column: 16)
!6091 = !DILocation(line: 88, column: 16, scope: !6087)
!6092 = !DILocation(line: 89, column: 13, scope: !6090)
!6093 = !DILocation(line: 92, column: 18, scope: !6094)
!6094 = distinct !DILexicalBlock(scope: !6087, file: !6026, line: 92, column: 11)
!6095 = !DILocation(line: 92, column: 16, scope: !6094)
!6096 = !DILocation(line: 92, column: 23, scope: !6097)
!6097 = distinct !DILexicalBlock(scope: !6094, file: !6026, line: 92, column: 11)
!6098 = !DILocation(line: 92, column: 27, scope: !6097)
!6099 = !DILocation(line: 92, column: 25, scope: !6097)
!6100 = !DILocation(line: 92, column: 11, scope: !6094)
!6101 = !DILocation(line: 93, column: 17, scope: !6102)
!6102 = distinct !DILexicalBlock(scope: !6097, file: !6026, line: 93, column: 17)
!6103 = !DILocation(line: 93, column: 27, scope: !6102)
!6104 = !DILocation(line: 93, column: 30, scope: !6102)
!6105 = !DILocation(line: 93, column: 40, scope: !6102)
!6106 = !DILocation(line: 93, column: 46, scope: !6102)
!6107 = !DILocation(line: 93, column: 51, scope: !6102)
!6108 = !DILocation(line: 93, column: 43, scope: !6102)
!6109 = !DILocation(line: 93, column: 17, scope: !6097)
!6110 = !DILocation(line: 94, column: 15, scope: !6102)
!6111 = !DILocation(line: 92, column: 34, scope: !6097)
!6112 = !DILocation(line: 92, column: 11, scope: !6097)
!6113 = distinct !{!6113, !6100, !6114}
!6114 = !DILocation(line: 94, column: 15, scope: !6094)
!6115 = !DILocation(line: 97, column: 15, scope: !6116)
!6116 = distinct !DILexicalBlock(scope: !6087, file: !6026, line: 97, column: 15)
!6117 = !DILocation(line: 97, column: 20, scope: !6116)
!6118 = !DILocation(line: 97, column: 17, scope: !6116)
!6119 = !DILocation(line: 97, column: 15, scope: !6087)
!6120 = !DILocation(line: 99, column: 19, scope: !6121)
!6121 = distinct !DILexicalBlock(scope: !6122, file: !6026, line: 99, column: 19)
!6122 = distinct !DILexicalBlock(scope: !6116, file: !6026, line: 98, column: 13)
!6123 = !DILocation(line: 99, column: 28, scope: !6121)
!6124 = !DILocation(line: 99, column: 19, scope: !6122)
!6125 = !DILocation(line: 101, column: 23, scope: !6126)
!6126 = distinct !DILexicalBlock(scope: !6127, file: !6026, line: 101, column: 23)
!6127 = distinct !DILexicalBlock(scope: !6121, file: !6026, line: 100, column: 17)
!6128 = !DILocation(line: 101, column: 32, scope: !6126)
!6129 = !DILocation(line: 101, column: 29, scope: !6126)
!6130 = !DILocation(line: 101, column: 23, scope: !6127)
!6131 = !DILocation(line: 102, column: 21, scope: !6126)
!6132 = !DILocation(line: 103, column: 38, scope: !6127)
!6133 = !DILocation(line: 103, column: 43, scope: !6127)
!6134 = !DILocation(line: 103, column: 19, scope: !6127)
!6135 = !DILocation(line: 103, column: 29, scope: !6127)
!6136 = !DILocation(line: 103, column: 36, scope: !6127)
!6137 = !DILocation(line: 104, column: 17, scope: !6127)
!6138 = !DILocation(line: 105, column: 19, scope: !6139)
!6139 = distinct !DILexicalBlock(scope: !6122, file: !6026, line: 105, column: 19)
!6140 = !DILocation(line: 105, column: 25, scope: !6139)
!6141 = !DILocation(line: 105, column: 19, scope: !6122)
!6142 = !DILocation(line: 107, column: 19, scope: !6143)
!6143 = distinct !DILexicalBlock(scope: !6139, file: !6026, line: 106, column: 17)
!6144 = !DILocation(line: 107, column: 25, scope: !6143)
!6145 = !DILocation(line: 108, column: 19, scope: !6143)
!6146 = !DILocation(line: 110, column: 20, scope: !6122)
!6147 = !DILocation(line: 111, column: 13, scope: !6122)
!6148 = !DILocation(line: 112, column: 9, scope: !6087)
!6149 = !DILocation(line: 84, column: 35, scope: !6083)
!6150 = !DILocation(line: 84, column: 7, scope: !6083)
!6151 = distinct !{!6151, !6085, !6152}
!6152 = !DILocation(line: 112, column: 9, scope: !6078)
!6153 = distinct !{!6153, !6055, !6154}
!6154 = !DILocation(line: 113, column: 5, scope: !6025)
!6155 = !DILocation(line: 115, column: 7, scope: !6156)
!6156 = distinct !DILexicalBlock(scope: !6025, file: !6026, line: 115, column: 7)
!6157 = !DILocation(line: 115, column: 13, scope: !6156)
!6158 = !DILocation(line: 115, column: 7, scope: !6025)
!6159 = !DILocation(line: 116, column: 11, scope: !6156)
!6160 = !DILocation(line: 116, column: 5, scope: !6156)
!6161 = !DILocation(line: 115, column: 16, scope: !6156)
!6162 = !DILabel(scope: !6025, name: "done", file: !6026, line: 118)
!6163 = !DILocation(line: 118, column: 2, scope: !6025)
!6164 = !DILocalVariable(name: "saved_errno", scope: !6165, file: !6026, line: 120, type: !72)
!6165 = distinct !DILexicalBlock(scope: !6025, file: !6026, line: 119, column: 3)
!6166 = !DILocation(line: 120, column: 9, scope: !6165)
!6167 = !DILocation(line: 120, column: 23, scope: !6165)
!6168 = !DILocation(line: 121, column: 5, scope: !6165)
!6169 = !DILocation(line: 122, column: 13, scope: !6165)
!6170 = !DILocation(line: 122, column: 5, scope: !6165)
!6171 = !DILocation(line: 122, column: 11, scope: !6165)
!6172 = !DILocation(line: 125, column: 10, scope: !6025)
!6173 = !DILocation(line: 125, column: 3, scope: !6025)
!6174 = !DILocalVariable(name: "maxcount", arg: 1, scope: !6175, file: !6026, line: 61, type: !72)
!6175 = distinct !DISubprogram(name: "getugroups", scope: !6026, file: !6026, line: 61, type: !6027, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !6176, retainedNodes: !4)
!6176 = distinct !DICompileUnit(language: DW_LANG_C99, file: !261, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !262, nameTableKind: None)
!6177 = !DILocalVariable(name: "grouplist", arg: 2, scope: !6175, file: !6026, line: 61, type: !183)
!6178 = !DILocalVariable(name: "username", arg: 3, scope: !6175, file: !6026, line: 61, type: !69)
!6179 = !DILocalVariable(name: "gid", arg: 4, scope: !6175, file: !6026, line: 62, type: !21)
!6180 = !DILocalVariable(name: "count", scope: !6175, file: !6026, line: 64, type: !72)
