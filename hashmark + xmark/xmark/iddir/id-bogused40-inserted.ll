; ModuleID = '<stdin>'
source_filename = "ld-temp.o"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.infomap = type { i8*, i8* }
%struct.option = type { i8*, i32, i32*, i32 }
%struct.quoting_options = type { i32, i32, [8 x i32], i8*, i8* }
%struct.slotvec = type { i64, i8* }
%struct.passwd = type { i8*, i8*, i32, i32, i8*, i8*, i8* }
%struct.group = type { i8*, i8*, i32, i8** }
%struct.__mbstate_t = type { i32, %union.anon }
%union.anon = type { i32 }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }

@stderr = external dso_local global %struct._IO_FILE*, align 8
@.str = private unnamed_addr constant [39 x i8] c"Try '%s --help' for more information.\0A\00", align 1
@.str.1 = private unnamed_addr constant [33 x i8] c"Usage: %s [OPTION]... [USER]...\0A\00", align 1
@.str.2 = private unnamed_addr constant [105 x i8] c"Print user and group information for each specified USER,\0Aor (when USER omitted) for the current user.\0A\0A\00", align 1
@stdout = external dso_local global %struct._IO_FILE*, align 8
@.str.3 = private unnamed_addr constant [521 x i8] c"  -a             ignore, for compatibility with other versions\0A  -Z, --context  print only the security context of the process\0A  -g, --group    print only the effective group ID\0A  -G, --groups   print all group IDs\0A  -n, --name     print a name instead of a number, for -ugG\0A  -r, --real     print the real ID instead of the effective ID, with -ugG\0A  -u, --user     print only the effective user ID\0A  -z, --zero     delimit entries with NUL characters, not whitespace;\0A                   not permitted in default format\0A\00", align 1
@.str.4 = private unnamed_addr constant [45 x i8] c"      --help     display this help and exit\0A\00", align 1
@.str.5 = private unnamed_addr constant [54 x i8] c"      --version  output version information and exit\0A\00", align 1
@.str.6 = private unnamed_addr constant [71 x i8] c"\0AWithout any OPTION, print some useful set of identified information.\0A\00", align 1
@.str.7 = private unnamed_addr constant [3 x i8] c"id\00", align 1
@__const.emit_ancillary_info.infomap = private unnamed_addr constant [7 x %struct.infomap] [%struct.infomap { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.27, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.28, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.29, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.30, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.31, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.31, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.33, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.31, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.34, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.31, i32 0, i32 0) }, %struct.infomap zeroinitializer], align 16
@.str.35 = private unnamed_addr constant [23 x i8] c"\0A%s online help: <%s>\0A\00", align 1
@.str.13 = private unnamed_addr constant [14 x i8] c"GNU coreutils\00", align 1
@.str.36 = private unnamed_addr constant [40 x i8] c"https://www.gnu.org/software/coreutils/\00", align 1
@.str.37 = private unnamed_addr constant [4 x i8] c"en_\00", align 1
@.str.38 = private unnamed_addr constant [71 x i8] c"Report any translation bugs to <https://translationproject.org/team/>\0A\00", align 1
@.str.39 = private unnamed_addr constant [27 x i8] c"Full documentation <%s%s>\0A\00", align 1
@.str.40 = private unnamed_addr constant [51 x i8] c"or available locally via: info '(coreutils) %s%s'\0A\00", align 1
@.str.41 = private unnamed_addr constant [12 x i8] c" invocation\00", align 1
@.str.8 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.27 = private unnamed_addr constant [2 x i8] c"[\00", align 1
@.str.28 = private unnamed_addr constant [16 x i8] c"test invocation\00", align 1
@.str.9 = private unnamed_addr constant [10 x i8] c"coreutils\00", align 1
@.str.29 = private unnamed_addr constant [22 x i8] c"Multi-call invocation\00", align 1
@.str.30 = private unnamed_addr constant [10 x i8] c"sha224sum\00", align 1
@.str.31 = private unnamed_addr constant [15 x i8] c"sha2 utilities\00", align 1
@.str.32 = private unnamed_addr constant [10 x i8] c"sha256sum\00", align 1
@.str.33 = private unnamed_addr constant [10 x i8] c"sha384sum\00", align 1
@.str.34 = private unnamed_addr constant [10 x i8] c"sha512sum\00", align 1
@.str.10 = private unnamed_addr constant [24 x i8] c"/usr/local/share/locale\00", align 1
@.str.11 = private unnamed_addr constant [9 x i8] c"agnruzGZ\00", align 1
@longopts = internal constant [10 x %struct.option] [%struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.42, i32 0, i32 0), i32 0, i32* null, i32 90 }, %struct.option { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.43, i32 0, i32 0), i32 0, i32* null, i32 103 }, %struct.option { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.44, i32 0, i32 0), i32 0, i32* null, i32 71 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.45, i32 0, i32 0), i32 0, i32* null, i32 110 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.46, i32 0, i32 0), i32 0, i32* null, i32 114 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.47, i32 0, i32 0), i32 0, i32* null, i32 117 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.48, i32 0, i32 0), i32 0, i32* null, i32 122 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.49, i32 0, i32 0), i32 0, i32* null, i32 -130 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.50, i32 0, i32 0), i32 0, i32* null, i32 -131 }, %struct.option zeroinitializer], align 16, !dbg !0
@.str.12 = private unnamed_addr constant [55 x i8] c"--context (-Z) works only on an SELinux-enabled kernel\00", align 1
@just_context = internal global i8 0, align 1, !dbg !25
@just_group = internal global i8 0, align 1, !dbg !28
@use_name = internal global i8 0, align 1, !dbg !30
@use_real = internal global i8 0, align 1, !dbg !32
@just_user = internal global i8 0, align 1, !dbg !34
@opt_zero = internal global i8 0, align 1, !dbg !36
@just_group_list = internal global i8 0, align 1, !dbg !38
@.str.14 = private unnamed_addr constant [15 x i8] c"Arnold Robbins\00", align 1
@.str.15 = private unnamed_addr constant [16 x i8] c"David MacKenzie\00", align 1
@optind = external dso_local global i32, align 4
@.str.16 = private unnamed_addr constant [50 x i8] c"cannot print security context when user specified\00", align 1
@.str.17 = private unnamed_addr constant [44 x i8] c"cannot print \22only\22 of more than one choice\00", align 1
@.str.18 = private unnamed_addr constant [54 x i8] c"cannot print only names or real IDs in default format\00", align 1
@.str.19 = private unnamed_addr constant [46 x i8] c"option --zero not permitted in default format\00", align 1
@.str.20 = private unnamed_addr constant [16 x i8] c"POSIXLY_CORRECT\00", align 1
@context = internal global i8* null, align 8, !dbg !40
@.str.21 = private unnamed_addr constant [26 x i8] c"can't get process context\00", align 1
@multiple_users = internal global i8 0, align 1, !dbg !42
@euid = internal global i32 0, align 4, !dbg !17
@.str.22 = private unnamed_addr constant [17 x i8] c"%s: no such user\00", align 1
@ok = internal global i8 1, align 1, !dbg !44
@ruid = internal global i32 0, align 4, !dbg !10
@egid = internal global i32 0, align 4, !dbg !23
@rgid = internal global i32 0, align 4, !dbg !19
@.str.23 = private unnamed_addr constant [25 x i8] c"cannot get effective UID\00", align 1
@.str.24 = private unnamed_addr constant [20 x i8] c"cannot get real UID\00", align 1
@.str.25 = private unnamed_addr constant [25 x i8] c"cannot get effective GID\00", align 1
@.str.26 = private unnamed_addr constant [20 x i8] c"cannot get real GID\00", align 1
@.str.52 = private unnamed_addr constant [7 x i8] c"uid=%s\00", align 1
@.str.53 = private unnamed_addr constant [5 x i8] c"(%s)\00", align 1
@.str.54 = private unnamed_addr constant [8 x i8] c" gid=%s\00", align 1
@.str.55 = private unnamed_addr constant [9 x i8] c" euid=%s\00", align 1
@.str.56 = private unnamed_addr constant [9 x i8] c" egid=%s\00", align 1
@.str.57 = private unnamed_addr constant [33 x i8] c"failed to get groups for user %s\00", align 1
@.str.58 = private unnamed_addr constant [45 x i8] c"failed to get groups for the current process\00", align 1
@.str.59 = private unnamed_addr constant [9 x i8] c" groups=\00", align 1
@.str.60 = private unnamed_addr constant [12 x i8] c" context=%s\00", align 1
@gidtostr_ptr.buf = internal global [21 x i8] zeroinitializer, align 16, !dbg !56
@uidtostr_ptr.buf = internal global [21 x i8] zeroinitializer, align 16, !dbg !46
@.str.51 = private unnamed_addr constant [32 x i8] c"cannot find name for user ID %s\00", align 1
@.str.42 = private unnamed_addr constant [8 x i8] c"context\00", align 1
@.str.43 = private unnamed_addr constant [6 x i8] c"group\00", align 1
@.str.44 = private unnamed_addr constant [7 x i8] c"groups\00", align 1
@.str.45 = private unnamed_addr constant [5 x i8] c"name\00", align 1
@.str.46 = private unnamed_addr constant [5 x i8] c"real\00", align 1
@.str.47 = private unnamed_addr constant [5 x i8] c"user\00", align 1
@.str.48 = private unnamed_addr constant [5 x i8] c"zero\00", align 1
@.str.49 = private unnamed_addr constant [5 x i8] c"help\00", align 1
@.str.50 = private unnamed_addr constant [8 x i8] c"version\00", align 1
@.str.61 = private unnamed_addr constant [33 x i8] c"failed to get groups for user %s\00", align 1
@.str.1.62 = private unnamed_addr constant [45 x i8] c"failed to get groups for the current process\00", align 1
@.str.2.63 = private unnamed_addr constant [34 x i8] c"cannot find name for group ID %lu\00", align 1
@gidtostr_ptr.buf.65 = internal global [21 x i8] zeroinitializer, align 16, !dbg !78
@Version = internal global i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.68, i32 0, i32 0), align 8, !dbg !86
@.str.68 = private unnamed_addr constant [5 x i8] c"8.32\00", align 1
@ignore_EPIPE = internal global i8 0, align 1, !dbg !91
@.str.71 = private unnamed_addr constant [12 x i8] c"write error\00", align 1
@file_name = internal global i8* null, align 8, !dbg !96
@.str.1.72 = private unnamed_addr constant [7 x i8] c"%s: %s\00", align 1
@.str.2.73 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@exit_failure = internal global i32 1, align 4, !dbg !99
@.str.80 = private unnamed_addr constant [56 x i8] c"A NULL argv[0] was passed through an exec system call.\0A\00", align 1
@.str.1.81 = private unnamed_addr constant [8 x i8] c"/.libs/\00", align 1
@.str.2.82 = private unnamed_addr constant [4 x i8] c"lt-\00", align 1
@program_invocation_short_name = external dso_local global i8*, align 8
@program_name = internal global i8* null, align 8, !dbg !106
@program_invocation_name = external dso_local global i8*, align 8
@default_quoting_options = internal global %struct.quoting_options zeroinitializer, align 8, !dbg !113
@slotvec = internal global %struct.slotvec* @slotvec0, align 8, !dbg !165
@nslots = internal global i32 1, align 4, !dbg !172
@slotvec0 = internal global %struct.slotvec { i64 256, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i32 0, i32 0) }, align 8, !dbg !174
@slot0 = internal global [256 x i8] zeroinitializer, align 16, !dbg !160
@.str.10.85 = private unnamed_addr constant [2 x i8] c"\22\00", align 1
@.str.11.86 = private unnamed_addr constant [2 x i8] c"`\00", align 1
@.str.12.87 = private unnamed_addr constant [2 x i8] c"'\00", align 1
@.str.13.88 = private unnamed_addr constant [6 x i8] c"UTF-8\00", align 1
@.str.14.89 = private unnamed_addr constant [4 x i8] c"\E2\80\98\00", align 1
@.str.15.90 = private unnamed_addr constant [4 x i8] c"\E2\80\99\00", align 1
@.str.16.91 = private unnamed_addr constant [8 x i8] c"GB18030\00", align 1
@.str.17.92 = private unnamed_addr constant [4 x i8] c"\A1\07e\00", align 1
@.str.18.93 = private unnamed_addr constant [3 x i8] c"\A1\AF\00", align 1
@quote_quoting_options = internal global %struct.quoting_options { i32 8, i32 0, [8 x i32] zeroinitializer, i8* null, i8* null }, align 8, !dbg !148
@parse_with_separator.E_bad_spec = internal global i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2.105, i32 0, i32 0), align 8, !dbg !176
@.str.3.102 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@parse_with_separator.E_invalid_user = internal global i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.104, i32 0, i32 0), align 8, !dbg !189
@parse_with_separator.E_invalid_group = internal global i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.103, i32 0, i32 0), align 8, !dbg !191
@.str.1.103 = private unnamed_addr constant [14 x i8] c"invalid group\00", align 1
@.str.104 = private unnamed_addr constant [13 x i8] c"invalid user\00", align 1
@.str.2.105 = private unnamed_addr constant [13 x i8] c"invalid spec\00", align 1
@.str.106 = private unnamed_addr constant [12 x i8] c"%s (%s) %s\0A\00", align 1
@.str.1.107 = private unnamed_addr constant [7 x i8] c"%s %s\0A\00", align 1
@.str.2.108 = private unnamed_addr constant [4 x i8] c"(C)\00", align 1
@.str.3.109 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.4.110 = private unnamed_addr constant [171 x i8] c"License GPLv3+: GNU GPL version 3 or later <%s>.\0AThis is free software: you are free to change and redistribute it.\0AThere is NO WARRANTY, to the extent permitted by law.\0A\00", align 1
@.str.5.111 = private unnamed_addr constant [34 x i8] c"https://gnu.org/licenses/gpl.html\00", align 1
@.str.6.112 = private unnamed_addr constant [16 x i8] c"Written by %s.\0A\00", align 1
@.str.7.113 = private unnamed_addr constant [23 x i8] c"Written by %s and %s.\0A\00", align 1
@.str.8.114 = private unnamed_addr constant [28 x i8] c"Written by %s, %s, and %s.\0A\00", align 1
@.str.9.115 = private unnamed_addr constant [32 x i8] c"Written by %s, %s, %s,\0Aand %s.\0A\00", align 1
@.str.10.116 = private unnamed_addr constant [36 x i8] c"Written by %s, %s, %s,\0A%s, and %s.\0A\00", align 1
@.str.11.117 = private unnamed_addr constant [40 x i8] c"Written by %s, %s, %s,\0A%s, %s, and %s.\0A\00", align 1
@.str.12.118 = private unnamed_addr constant [44 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, and %s.\0A\00", align 1
@.str.13.119 = private unnamed_addr constant [48 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0Aand %s.\0A\00", align 1
@.str.14.120 = private unnamed_addr constant [52 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0A%s, and %s.\0A\00", align 1
@.str.15.121 = private unnamed_addr constant [60 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0A%s, %s, and others.\0A\00", align 1
@version_etc_copyright = internal constant [47 x i8] c"Copyright %s %d Free Software Foundation, Inc.\00", align 16, !dbg !193
@.str.1.136 = private unnamed_addr constant [17 x i8] c"memory exhausted\00", align 1
@.str.137 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.142 = private unnamed_addr constant [38 x i8] c"0 <= strtol_base && strtol_base <= 36\00", align 1
@.str.1.143 = private unnamed_addr constant [16 x i8] c"./lib/xstrtol.c\00", align 1
@__PRETTY_FUNCTION__.xstrtoul = private unnamed_addr constant [81 x i8] c"strtol_error xstrtoul(const char *, char **, int, unsigned long *, const char *)\00", align 1
@.str.152 = private unnamed_addr constant [2 x i8] c"C\00", align 1
@.str.1.153 = private unnamed_addr constant [6 x i8] c"POSIX\00", align 1
@.str.156 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.1.157 = private unnamed_addr constant [6 x i8] c"ASCII\00", align 1
@inVal0 = global i32 0
@inVal1 = global i8** null
@.compVal0 = private global [2 x i8] c"+\00"
@.compVal1 = private global [4 x i8] c"\01  \00"
@.compVal2 = private global [1 x i8] zeroinitializer
@x = common global i32 0
@y = common global i32 0
@x.1 = common global i32 0
@y.2 = common global i32 0
@x.3 = common global i32 0
@y.4 = common global i32 0
@x.5 = common global i32 0
@y.6 = common global i32 0
@x.7 = common global i32 0
@y.8 = common global i32 0
@x.9 = common global i32 0
@y.10 = common global i32 0
@x.11 = common global i32 0
@y.12 = common global i32 0
@x.13 = common global i32 0
@y.14 = common global i32 0
@x.15 = common global i32 0
@y.16 = common global i32 0
@x.17 = common global i32 0
@y.18 = common global i32 0
@x.19 = common global i32 0
@y.20 = common global i32 0
@x.21 = common global i32 0
@y.22 = common global i32 0
@x.23 = common global i32 0
@y.24 = common global i32 0
@x.25 = common global i32 0
@y.26 = common global i32 0
@x.27 = common global i32 0
@y.28 = common global i32 0
@x.29 = common global i32 0
@y.30 = common global i32 0
@x.31 = common global i32 0
@y.32 = common global i32 0
@x.33 = common global i32 0
@y.34 = common global i32 0
@x.35 = common global i32 0
@y.36 = common global i32 0
@x.37 = common global i32 0
@y.38 = common global i32 0
@x.39 = common global i32 0
@y.40 = common global i32 0
@x.41 = common global i32 0
@y.42 = common global i32 0
@x.43 = common global i32 0
@y.44 = common global i32 0
@x.45 = common global i32 0
@y.46 = common global i32 0
@x.47 = common global i32 0
@y.48 = common global i32 0
@x.49 = common global i32 0
@y.50 = common global i32 0
@x.51 = common global i32 0
@y.52 = common global i32 0
@x.53 = common global i32 0
@y.54 = common global i32 0
@x.55 = common global i32 0
@y.56 = common global i32 0
@x.57 = common global i32 0
@y.58 = common global i32 0
@x.59 = common global i32 0
@y.60 = common global i32 0
@x.61 = common global i32 0
@y.62 = common global i32 0
@x.63 = common global i32 0
@y.64 = common global i32 0
@x.65 = common global i32 0
@y.66 = common global i32 0
@x.67 = common global i32 0
@y.68 = common global i32 0
@x.69 = common global i32 0
@y.70 = common global i32 0
@x.71 = common global i32 0
@y.72 = common global i32 0
@x.73 = common global i32 0
@y.74 = common global i32 0
@x.75 = common global i32 0
@y.76 = common global i32 0
@x.77 = common global i32 0
@y.78 = common global i32 0
@x.79 = common global i32 0
@y.80 = common global i32 0
@x.81 = common global i32 0
@y.82 = common global i32 0
@x.83 = common global i32 0
@y.84 = common global i32 0
@x.85 = common global i32 0
@y.86 = common global i32 0
@x.87 = common global i32 0
@y.88 = common global i32 0
@x.89 = common global i32 0
@y.90 = common global i32 0
@x.91 = common global i32 0
@y.92 = common global i32 0
@x.93 = common global i32 0
@y.94 = common global i32 0
@x.95 = common global i32 0
@y.96 = common global i32 0
@x.97 = common global i32 0
@y.98 = common global i32 0
@x.99 = common global i32 0
@y.100 = common global i32 0
@x.101 = common global i32 0
@y.102 = common global i32 0
@x.103 = common global i32 0
@y.104 = common global i32 0
@x.105 = common global i32 0
@y.106 = common global i32 0
@x.107 = common global i32 0
@y.108 = common global i32 0
@x.109 = common global i32 0
@y.110 = common global i32 0
@x.111 = common global i32 0
@y.112 = common global i32 0
@x.113 = common global i32 0
@y.114 = common global i32 0
@x.115 = common global i32 0
@y.116 = common global i32 0

; Function Attrs: noinline noreturn nounwind optnone uwtable
define internal void @usage(i32) #0 !dbg !269 {
  %2 = load i32, i32* @x
  %3 = load i32, i32* @y
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i32, align 4
  store i32 %0, i32* %10, align 4
  call void @llvm.dbg.declare(metadata i32* %10, metadata !272, metadata !DIExpression()), !dbg !273
  %11 = load i32, i32* %10, align 4, !dbg !274
  %12 = icmp ne i32 %11, 0, !dbg !276
  %13 = load i32, i32* @x
  %14 = load i32, i32* @y
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %12, label %21, label %28, !dbg !277

21:                                               ; preds = %originalBBpart2
  br label %22, !dbg !278

22:                                               ; preds = %21
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !279
  %24 = call i8* @gettext(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str, i64 0, i64 0)) #10, !dbg !279
  %25 = load i8*, i8** @program_name, align 8, !dbg !279
  %26 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %23, i8* %24, i8* %25), !dbg !279
  br label %27, !dbg !279

27:                                               ; preds = %22
  br label %63, !dbg !279

28:                                               ; preds = %originalBBpart2
  %29 = load i32, i32* @x
  %30 = load i32, i32* @y
  %31 = sub i32 %29, 1
  %32 = mul i32 %29, %31
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %34, %35
  br i1 %36, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %28, %originalBB1alteredBB
  %37 = call i8* @gettext(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1, i64 0, i64 0)) #10, !dbg !281
  %38 = load i8*, i8** @program_name, align 8, !dbg !283
  %39 = call i32 (i8*, ...) @printf(i8* %37, i8* %38), !dbg !284
  %40 = call i8* @gettext(i8* getelementptr inbounds ([105 x i8], [105 x i8]* @.str.2, i64 0, i64 0)) #10, !dbg !285
  %41 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !285
  %42 = call i32 @fputs_unlocked(i8* %40, %struct._IO_FILE* %41), !dbg !285
  %43 = call i8* @gettext(i8* getelementptr inbounds ([521 x i8], [521 x i8]* @.str.3, i64 0, i64 0)) #10, !dbg !286
  %44 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !286
  %45 = call i32 @fputs_unlocked(i8* %43, %struct._IO_FILE* %44), !dbg !286
  %46 = call i8* @gettext(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.4, i64 0, i64 0)) #10, !dbg !287
  %47 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !287
  %48 = call i32 @fputs_unlocked(i8* %46, %struct._IO_FILE* %47), !dbg !287
  %49 = call i8* @gettext(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.5, i64 0, i64 0)) #10, !dbg !288
  %50 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !288
  %51 = call i32 @fputs_unlocked(i8* %49, %struct._IO_FILE* %50), !dbg !288
  %52 = call i8* @gettext(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.6, i64 0, i64 0)) #10, !dbg !289
  %53 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !289
  %54 = call i32 @fputs_unlocked(i8* %52, %struct._IO_FILE* %53), !dbg !289
  call void @emit_ancillary_info(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0)), !dbg !290
  %55 = load i32, i32* @x
  %56 = load i32, i32* @y
  %57 = sub i32 %55, 1
  %58 = mul i32 %55, %57
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %56, 10
  %62 = or i1 %60, %61
  br i1 %62, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %63

63:                                               ; preds = %originalBBpart24, %27
  %64 = load i32, i32* %10, align 4, !dbg !291
  call void @exit(i32 %64) #12, !dbg !292
  unreachable, !dbg !292

originalBBalteredBB:                              ; preds = %originalBB, %1
  %65 = alloca i32, align 4
  store i32 %0, i32* %65, align 4
  call void @llvm.dbg.declare(metadata i32* %65, metadata !293, metadata !DIExpression()), !dbg !273
  %66 = load i32, i32* %65, align 4, !dbg !274
  %67 = icmp ne i32 %66, 0, !dbg !276
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %28
  %68 = call i8* @gettext(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1, i64 0, i64 0)) #10, !dbg !281
  %69 = load i8*, i8** @program_name, align 8, !dbg !283
  %70 = call i32 (i8*, ...) @printf(i8* %68, i8* %69), !dbg !284
  %71 = call i8* @gettext(i8* getelementptr inbounds ([105 x i8], [105 x i8]* @.str.2, i64 0, i64 0)) #10, !dbg !285
  %72 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !285
  %73 = call i32 @fputs_unlocked(i8* %71, %struct._IO_FILE* %72), !dbg !285
  %74 = call i8* @gettext(i8* getelementptr inbounds ([521 x i8], [521 x i8]* @.str.3, i64 0, i64 0)) #10, !dbg !286
  %75 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !286
  %76 = call i32 @fputs_unlocked(i8* %74, %struct._IO_FILE* %75), !dbg !286
  %77 = call i8* @gettext(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.4, i64 0, i64 0)) #10, !dbg !287
  %78 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !287
  %79 = call i32 @fputs_unlocked(i8* %77, %struct._IO_FILE* %78), !dbg !287
  %80 = call i8* @gettext(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.5, i64 0, i64 0)) #10, !dbg !288
  %81 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !288
  %82 = call i32 @fputs_unlocked(i8* %80, %struct._IO_FILE* %81), !dbg !288
  %83 = call i8* @gettext(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.6, i64 0, i64 0)) #10, !dbg !289
  %84 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !289
  %85 = call i32 @fputs_unlocked(i8* %83, %struct._IO_FILE* %84), !dbg !289
  call void @emit_ancillary_info(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0)), !dbg !290
  br label %originalBB1
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind
declare dso_local i8* @gettext(i8*) #2

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) #3

declare dso_local i32 @printf(i8*, ...) #3

declare dso_local i32 @fputs_unlocked(i8*, %struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @emit_ancillary_info(i8*) #4 !dbg !341 {
  %2 = alloca i8*, align 8
  %3 = alloca [7 x %struct.infomap], align 16
  %4 = alloca i8*, align 8
  %5 = alloca %struct.infomap*, align 8
  %6 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !345, metadata !DIExpression()), !dbg !346
  call void @llvm.dbg.declare(metadata [7 x %struct.infomap]* %3, metadata !347, metadata !DIExpression()), !dbg !356
  %7 = bitcast [7 x %struct.infomap]* %3 to i8*, !dbg !356
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %7, i8* align 16 bitcast ([7 x %struct.infomap]* @__const.emit_ancillary_info.infomap to i8*), i64 112, i1 false), !dbg !356
  call void @llvm.dbg.declare(metadata i8** %4, metadata !357, metadata !DIExpression()), !dbg !358
  %8 = load i8*, i8** %2, align 8, !dbg !359
  store i8* %8, i8** %4, align 8, !dbg !358
  call void @llvm.dbg.declare(metadata %struct.infomap** %5, metadata !360, metadata !DIExpression()), !dbg !362
  %9 = getelementptr inbounds [7 x %struct.infomap], [7 x %struct.infomap]* %3, i64 0, i64 0, !dbg !363
  store %struct.infomap* %9, %struct.infomap** %5, align 8, !dbg !362
  br label %10, !dbg !364

10:                                               ; preds = %41, %1
  %11 = load %struct.infomap*, %struct.infomap** %5, align 8, !dbg !365
  %12 = getelementptr inbounds %struct.infomap, %struct.infomap* %11, i32 0, i32 0, !dbg !366
  %13 = load i8*, i8** %12, align 8, !dbg !366
  %14 = icmp ne i8* %13, null, !dbg !365
  br i1 %14, label %15, label %39, !dbg !367

15:                                               ; preds = %10
  %16 = load i32, i32* @x.1
  %17 = load i32, i32* @y.2
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %15, %originalBBalteredBB
  %24 = load i8*, i8** %2, align 8, !dbg !368
  %25 = load %struct.infomap*, %struct.infomap** %5, align 8, !dbg !368
  %26 = getelementptr inbounds %struct.infomap, %struct.infomap* %25, i32 0, i32 0, !dbg !368
  %27 = load i8*, i8** %26, align 8, !dbg !368
  %28 = call i32 @strcmp(i8* %24, i8* %27) #13, !dbg !368
  %29 = icmp eq i32 %28, 0, !dbg !368
  %30 = xor i1 %29, true, !dbg !369
  %31 = load i32, i32* @x.1
  %32 = load i32, i32* @y.2
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %39

39:                                               ; preds = %originalBBpart2, %10
  %40 = phi i1 [ false, %10 ], [ %30, %originalBBpart2 ], !dbg !370
  br i1 %40, label %41, label %44, !dbg !364

41:                                               ; preds = %39
  %42 = load %struct.infomap*, %struct.infomap** %5, align 8, !dbg !371
  %43 = getelementptr inbounds %struct.infomap, %struct.infomap* %42, i32 1, !dbg !371
  store %struct.infomap* %43, %struct.infomap** %5, align 8, !dbg !371
  br label %10, !dbg !364, !llvm.loop !372

44:                                               ; preds = %39
  %45 = load %struct.infomap*, %struct.infomap** %5, align 8, !dbg !373
  %46 = getelementptr inbounds %struct.infomap, %struct.infomap* %45, i32 0, i32 1, !dbg !375
  %47 = load i8*, i8** %46, align 8, !dbg !375
  %48 = icmp ne i8* %47, null, !dbg !373
  br i1 %48, label %49, label %53, !dbg !376

49:                                               ; preds = %44
  %50 = load %struct.infomap*, %struct.infomap** %5, align 8, !dbg !377
  %51 = getelementptr inbounds %struct.infomap, %struct.infomap* %50, i32 0, i32 1, !dbg !378
  %52 = load i8*, i8** %51, align 8, !dbg !378
  store i8* %52, i8** %4, align 8, !dbg !379
  br label %53, !dbg !380

53:                                               ; preds = %49, %44
  %54 = load i32, i32* @x.1
  %55 = load i32, i32* @y.2
  %56 = sub i32 %54, 1
  %57 = mul i32 %54, %56
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %55, 10
  %61 = or i1 %59, %60
  br i1 %61, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %53, %originalBB1alteredBB
  %62 = call i8* @gettext(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.35, i64 0, i64 0)) #10, !dbg !381
  %63 = call i32 (i8*, ...) @printf(i8* %62, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.36, i64 0, i64 0)), !dbg !382
  call void @llvm.dbg.declare(metadata i8** %6, metadata !383, metadata !DIExpression()), !dbg !384
  %64 = call i8* @setlocale(i32 5, i8* null) #10, !dbg !385
  store i8* %64, i8** %6, align 8, !dbg !384
  %65 = load i8*, i8** %6, align 8, !dbg !386
  %66 = icmp ne i8* %65, null, !dbg !386
  %67 = load i32, i32* @x.1
  %68 = load i32, i32* @y.2
  %69 = sub i32 %67, 1
  %70 = mul i32 %67, %69
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %68, 10
  %74 = or i1 %72, %73
  br i1 %74, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %66, label %75, label %83, !dbg !388

75:                                               ; preds = %originalBBpart24
  %76 = load i8*, i8** %6, align 8, !dbg !389
  %77 = call i32 @strncmp(i8* %76, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.37, i64 0, i64 0), i64 3) #13, !dbg !389
  %78 = icmp ne i32 %77, 0, !dbg !389
  br i1 %78, label %79, label %83, !dbg !390

79:                                               ; preds = %75
  %80 = call i8* @gettext(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.38, i64 0, i64 0)) #10, !dbg !391
  %81 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !391
  %82 = call i32 @fputs_unlocked(i8* %80, %struct._IO_FILE* %81), !dbg !391
  br label %83, !dbg !393

83:                                               ; preds = %79, %75, %originalBBpart24
  %84 = load i32, i32* @x.1
  %85 = load i32, i32* @y.2
  %86 = sub i32 %84, 1
  %87 = mul i32 %84, %86
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %85, 10
  %91 = or i1 %89, %90
  br i1 %91, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %83, %originalBB6alteredBB
  %92 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.39, i64 0, i64 0)) #10, !dbg !394
  %93 = load i8*, i8** %2, align 8, !dbg !395
  %94 = call i32 (i8*, ...) @printf(i8* %92, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.36, i64 0, i64 0), i8* %93), !dbg !396
  %95 = call i8* @gettext(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.40, i64 0, i64 0)) #10, !dbg !397
  %96 = load i8*, i8** %4, align 8, !dbg !398
  %97 = load i8*, i8** %4, align 8, !dbg !399
  %98 = load i8*, i8** %2, align 8, !dbg !400
  %99 = icmp eq i8* %97, %98, !dbg !401
  %100 = zext i1 %99 to i64, !dbg !399
  %101 = select i1 %99, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.41, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.8, i64 0, i64 0), !dbg !399
  %102 = call i32 (i8*, ...) @printf(i8* %95, i8* %96, i8* %101), !dbg !402
  %103 = load i32, i32* @x.1
  %104 = load i32, i32* @y.2
  %105 = sub i32 %103, 1
  %106 = mul i32 %103, %105
  %107 = urem i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %104, 10
  %110 = or i1 %108, %109
  br i1 %110, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  ret void, !dbg !403

originalBBalteredBB:                              ; preds = %originalBB, %15
  %111 = load i8*, i8** %2, align 8, !dbg !368
  %112 = load %struct.infomap*, %struct.infomap** %5, align 8, !dbg !368
  %113 = getelementptr inbounds %struct.infomap, %struct.infomap* %112, i32 0, i32 0, !dbg !368
  %114 = load i8*, i8** %113, align 8, !dbg !368
  %115 = call i32 @strcmp(i8* %111, i8* %114) #13, !dbg !368
  %116 = icmp eq i32 %115, 0, !dbg !368
  %117 = xor i1 %116, true, !dbg !369
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %53
  %118 = call i8* @gettext(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.35, i64 0, i64 0)) #10, !dbg !381
  %119 = call i32 (i8*, ...) @printf(i8* %118, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.36, i64 0, i64 0)), !dbg !382
  call void @llvm.dbg.declare(metadata !4, metadata !404, metadata !DIExpression()), !dbg !384
  %120 = call i8* @setlocale(i32 5, i8* null) #10, !dbg !385
  store i8* %120, i8** %6, align 8, !dbg !384
  %121 = load i8*, i8** %6, align 8, !dbg !386
  %122 = icmp ne i8* %121, null, !dbg !386
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %83
  %123 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.39, i64 0, i64 0)) #10, !dbg !394
  %124 = load i8*, i8** %2, align 8, !dbg !395
  %125 = call i32 (i8*, ...) @printf(i8* %123, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.36, i64 0, i64 0), i8* %124), !dbg !396
  %126 = call i8* @gettext(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.40, i64 0, i64 0)) #10, !dbg !397
  %127 = load i8*, i8** %4, align 8, !dbg !398
  %128 = load i8*, i8** %4, align 8, !dbg !399
  %129 = load i8*, i8** %2, align 8, !dbg !400
  %130 = icmp eq i8* %128, %129, !dbg !401
  %131 = zext i1 %130 to i64, !dbg !399
  %132 = select i1 %130, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.41, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.8, i64 0, i64 0), !dbg !399
  %133 = call i32 (i8*, ...) @printf(i8* %126, i8* %127, i8* %132), !dbg !402
  br label %originalBB6
}

; Function Attrs: noreturn nounwind
declare dso_local void @exit(i32) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #6

; Function Attrs: nounwind readonly
declare dso_local i32 @strcmp(i8*, i8*) #7

; Function Attrs: nounwind
declare dso_local i8* @setlocale(i32, i8*) #2

; Function Attrs: nounwind readonly
declare dso_local i32 @strncmp(i8*, i8*, i64) #7

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32, i8**) #4 !dbg !452 {
  store i8** %1, i8*** @inVal1
  store i32 %0, i32* @inVal0
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i8, align 1
  %9 = alloca i8*, align 8
  %10 = alloca i64, align 8
  %11 = alloca i8, align 1
  %12 = alloca %struct.passwd*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !455, metadata !DIExpression()), !dbg !456
  store i8** %1, i8*** %5, align 8
  call void @llvm.dbg.declare(metadata i8*** %5, metadata !457, metadata !DIExpression()), !dbg !458
  call void @llvm.dbg.declare(metadata i32* %6, metadata !459, metadata !DIExpression()), !dbg !460
  call void @llvm.dbg.declare(metadata i32* %7, metadata !461, metadata !DIExpression()), !dbg !462
  store i32 0, i32* %7, align 4, !dbg !462
  call void @llvm.dbg.declare(metadata i8* %8, metadata !463, metadata !DIExpression()), !dbg !464
  %16 = call zeroext i1 @is_smack_enabled(), !dbg !465
  %17 = zext i1 %16 to i8, !dbg !464
  store i8 %17, i8* %8, align 1, !dbg !464
  call void @llvm.dbg.declare(metadata i8** %9, metadata !466, metadata !DIExpression()), !dbg !467
  store i8* null, i8** %9, align 8, !dbg !467
  %18 = load i8**, i8*** %5, align 8, !dbg !468
  %19 = getelementptr inbounds i8*, i8** %18, i64 0, !dbg !468
  %20 = load i8*, i8** %19, align 8, !dbg !468
  call void @set_program_name(i8* %20), !dbg !469
  %21 = call i8* @setlocale(i32 6, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.8, i64 0, i64 0)) #10, !dbg !470
  %22 = call i8* @bindtextdomain(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.10, i64 0, i64 0)) #10, !dbg !471
  %23 = call i8* @textdomain(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9, i64 0, i64 0)) #10, !dbg !472
  %24 = call i32 @atexit(void ()* @close_stdout) #10, !dbg !473
  br label %25, !dbg !474

25:                                               ; preds = %originalBBpart216, %2
  %26 = load i32, i32* %4, align 4, !dbg !475
  %27 = load i8**, i8*** %5, align 8, !dbg !476
  %28 = call i32 @getopt_long(i32 %26, i8** %27, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.11, i64 0, i64 0), %struct.option* getelementptr inbounds ([10 x %struct.option], [10 x %struct.option]* @longopts, i64 0, i64 0), i32* null) #10, !dbg !477
  store i32 %28, i32* %6, align 4, !dbg !478
  %29 = icmp ne i32 %28, -1, !dbg !479
  br i1 %29, label %30, label %131, !dbg !474

30:                                               ; preds = %25
  %31 = load i32, i32* %6, align 4, !dbg !480
  switch i32 %31, label %97 [
    i32 97, label %32
    i32 90, label %49
    i32 103, label %71
    i32 110, label %72
    i32 114, label %89
    i32 117, label %90
    i32 122, label %91
    i32 71, label %92
    i32 -130, label %93
    i32 -131, label %94
  ], !dbg !482

32:                                               ; preds = %30
  %33 = load i32, i32* @x.3
  %34 = load i32, i32* @y.4
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %32, %originalBBalteredBB
  %41 = load i32, i32* @x.3
  %42 = load i32, i32* @y.4
  %43 = sub i32 %41, 1
  %44 = mul i32 %41, %43
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %46, %47
  br i1 %48, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %114, !dbg !483

49:                                               ; preds = %30
  %50 = load i32, i32* %7, align 4, !dbg !485
  %51 = icmp ne i32 %50, 0, !dbg !485
  br i1 %51, label %70, label %52, !dbg !487

52:                                               ; preds = %49
  %53 = load i32, i32* @x.3
  %54 = load i32, i32* @y.4
  %55 = sub i32 %53, 1
  %56 = mul i32 %53, %55
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %54, 10
  %60 = or i1 %58, %59
  br i1 %60, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %52, %originalBB1alteredBB
  %61 = call i8* @gettext(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.12, i64 0, i64 0)) #10, !dbg !488
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %61), !dbg !488
  %62 = load i32, i32* @x.3
  %63 = load i32, i32* @y.4
  %64 = sub i32 %62, 1
  %65 = mul i32 %62, %64
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %63, 10
  %69 = or i1 %67, %68
  br i1 %69, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  unreachable, !dbg !488

70:                                               ; preds = %49
  store i8 1, i8* @just_context, align 1, !dbg !489
  br label %114, !dbg !490

71:                                               ; preds = %30
  store i8 1, i8* @just_group, align 1, !dbg !491
  br label %114, !dbg !492

72:                                               ; preds = %30
  %73 = load i32, i32* @x.3
  %74 = load i32, i32* @y.4
  %75 = sub i32 %73, 1
  %76 = mul i32 %73, %75
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %74, 10
  %80 = or i1 %78, %79
  br i1 %80, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %72, %originalBB6alteredBB
  store i8 1, i8* @use_name, align 1, !dbg !493
  %81 = load i32, i32* @x.3
  %82 = load i32, i32* @y.4
  %83 = sub i32 %81, 1
  %84 = mul i32 %81, %83
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %82, 10
  %88 = or i1 %86, %87
  br i1 %88, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %114, !dbg !494

89:                                               ; preds = %30
  store i8 1, i8* @use_real, align 1, !dbg !495
  br label %114, !dbg !496

90:                                               ; preds = %30
  store i8 1, i8* @just_user, align 1, !dbg !497
  br label %114, !dbg !498

91:                                               ; preds = %30
  store i8 1, i8* @opt_zero, align 1, !dbg !499
  br label %114, !dbg !500

92:                                               ; preds = %30
  store i8 1, i8* @just_group_list, align 1, !dbg !501
  br label %114, !dbg !502

93:                                               ; preds = %30
  call void @usage(i32 0) #14, !dbg !503
  unreachable, !dbg !503

94:                                               ; preds = %30
  %95 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !504
  %96 = load i8*, i8** @Version, align 8, !dbg !504
  call void (%struct._IO_FILE*, i8*, i8*, i8*, ...) @version_etc(%struct._IO_FILE* %95, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.13, i64 0, i64 0), i8* %96, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.15, i64 0, i64 0), i8* null), !dbg !504
  call void @exit(i32 0) #12, !dbg !504
  unreachable, !dbg !504

97:                                               ; preds = %30
  %98 = load i32, i32* @x.3
  %99 = load i32, i32* @y.4
  %100 = sub i32 %98, 1
  %101 = mul i32 %98, %100
  %102 = urem i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = icmp slt i32 %99, 10
  %105 = or i1 %103, %104
  br i1 %105, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %97, %originalBB10alteredBB
  call void @usage(i32 1) #14, !dbg !505
  %106 = load i32, i32* @x.3
  %107 = load i32, i32* @y.4
  %108 = sub i32 %106, 1
  %109 = mul i32 %106, %108
  %110 = urem i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %107, 10
  %113 = or i1 %111, %112
  br i1 %113, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  unreachable, !dbg !505

114:                                              ; preds = %92, %91, %90, %89, %originalBBpart28, %71, %70, %originalBBpart2
  %115 = load i32, i32* @x.3
  %116 = load i32, i32* @y.4
  %117 = sub i32 %115, 1
  %118 = mul i32 %115, %117
  %119 = urem i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = icmp slt i32 %116, 10
  %122 = or i1 %120, %121
  br i1 %122, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %114, %originalBB14alteredBB
  %123 = load i32, i32* @x.3
  %124 = load i32, i32* @y.4
  %125 = sub i32 %123, 1
  %126 = mul i32 %123, %125
  %127 = urem i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %124, 10
  %130 = or i1 %128, %129
  br i1 %130, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %25, !dbg !474, !llvm.loop !506

131:                                              ; preds = %25
  call void @llvm.dbg.declare(metadata i64* %10, metadata !508, metadata !DIExpression()), !dbg !509
  %132 = load i32, i32* %4, align 4, !dbg !510
  %133 = load i32, i32* @optind, align 4, !dbg !511
  %134 = sub nsw i32 %132, %133, !dbg !512
  %135 = sext i32 %134 to i64, !dbg !510
  store i64 %135, i64* %10, align 8, !dbg !509
  %136 = load i64, i64* %10, align 8, !dbg !513
  %137 = icmp ne i64 %136, 0, !dbg !513
  br i1 %137, label %138, label %143, !dbg !515

138:                                              ; preds = %131
  %139 = load i8, i8* @just_context, align 1, !dbg !516
  %140 = trunc i8 %139 to i1, !dbg !516
  br i1 %140, label %141, label %143, !dbg !517

141:                                              ; preds = %138
  %142 = call i8* @gettext(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.16, i64 0, i64 0)) #10, !dbg !518
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %142), !dbg !518
  unreachable, !dbg !518

143:                                              ; preds = %138, %131
  %144 = load i8, i8* @just_user, align 1, !dbg !519
  %145 = trunc i8 %144 to i1, !dbg !519
  %146 = zext i1 %145 to i32, !dbg !519
  %147 = load i8, i8* @just_group, align 1, !dbg !521
  %148 = trunc i8 %147 to i1, !dbg !521
  %149 = zext i1 %148 to i32, !dbg !521
  %150 = add nsw i32 %146, %149, !dbg !522
  %151 = load i8, i8* @just_group_list, align 1, !dbg !523
  %152 = trunc i8 %151 to i1, !dbg !523
  %153 = zext i1 %152 to i32, !dbg !523
  %154 = add nsw i32 %150, %153, !dbg !524
  %155 = load i8, i8* @just_context, align 1, !dbg !525
  %156 = trunc i8 %155 to i1, !dbg !525
  %157 = zext i1 %156 to i32, !dbg !525
  %158 = add nsw i32 %154, %157, !dbg !526
  %159 = icmp sgt i32 %158, 1, !dbg !527
  br i1 %159, label %160, label %178, !dbg !528

160:                                              ; preds = %143
  %161 = load i32, i32* @x.3
  %162 = load i32, i32* @y.4
  %163 = sub i32 %161, 1
  %164 = mul i32 %161, %163
  %165 = urem i32 %164, 2
  %166 = icmp eq i32 %165, 0
  %167 = icmp slt i32 %162, 10
  %168 = or i1 %166, %167
  br i1 %168, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %160, %originalBB18alteredBB
  %169 = call i8* @gettext(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.17, i64 0, i64 0)) #10, !dbg !529
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %169), !dbg !529
  %170 = load i32, i32* @x.3
  %171 = load i32, i32* @y.4
  %172 = sub i32 %170, 1
  %173 = mul i32 %170, %172
  %174 = urem i32 %173, 2
  %175 = icmp eq i32 %174, 0
  %176 = icmp slt i32 %171, 10
  %177 = or i1 %175, %176
  br i1 %177, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  unreachable, !dbg !529

178:                                              ; preds = %143
  call void @llvm.dbg.declare(metadata i8* %11, metadata !530, metadata !DIExpression()), !dbg !531
  %179 = load i8, i8* @just_user, align 1, !dbg !532
  %180 = trunc i8 %179 to i1, !dbg !532
  br i1 %180, label %206, label %181, !dbg !533

181:                                              ; preds = %178
  %182 = load i32, i32* @x.3
  %183 = load i32, i32* @y.4
  %184 = sub i32 %182, 1
  %185 = mul i32 %182, %184
  %186 = urem i32 %185, 2
  %187 = icmp eq i32 %186, 0
  %188 = icmp slt i32 %183, 10
  %189 = or i1 %187, %188
  br i1 %189, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %181, %originalBB22alteredBB
  %190 = load i8, i8* @just_group, align 1, !dbg !534
  %191 = trunc i8 %190 to i1, !dbg !534
  %192 = load i32, i32* @x.3
  %193 = load i32, i32* @y.4
  %194 = sub i32 %192, 1
  %195 = mul i32 %192, %194
  %196 = urem i32 %195, 2
  %197 = icmp eq i32 %196, 0
  %198 = icmp slt i32 %193, 10
  %199 = or i1 %197, %198
  br i1 %199, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br i1 %191, label %206, label %200, !dbg !535

200:                                              ; preds = %originalBBpart224
  %201 = load i8, i8* @just_group_list, align 1, !dbg !536
  %202 = trunc i8 %201 to i1, !dbg !536
  br i1 %202, label %206, label %203, !dbg !537

203:                                              ; preds = %200
  %204 = load i8, i8* @just_context, align 1, !dbg !538
  %205 = trunc i8 %204 to i1, !dbg !538
  br label %206, !dbg !537

206:                                              ; preds = %203, %200, %originalBBpart224, %178
  %207 = phi i1 [ true, %200 ], [ true, %originalBBpart224 ], [ true, %178 ], [ %205, %203 ]
  %208 = xor i1 %207, true, !dbg !539
  %209 = zext i1 %208 to i8, !dbg !531
  store i8 %209, i8* %11, align 1, !dbg !531
  %210 = load i8, i8* %11, align 1, !dbg !540
  %211 = trunc i8 %210 to i1, !dbg !540
  br i1 %211, label %212, label %236, !dbg !542

212:                                              ; preds = %206
  %213 = load i8, i8* @use_real, align 1, !dbg !543
  %214 = trunc i8 %213 to i1, !dbg !543
  br i1 %214, label %218, label %215, !dbg !544

215:                                              ; preds = %212
  %216 = load i8, i8* @use_name, align 1, !dbg !545
  %217 = trunc i8 %216 to i1, !dbg !545
  br i1 %217, label %218, label %236, !dbg !546

218:                                              ; preds = %215, %212
  %219 = load i32, i32* @x.3
  %220 = load i32, i32* @y.4
  %221 = sub i32 %219, 1
  %222 = mul i32 %219, %221
  %223 = urem i32 %222, 2
  %224 = icmp eq i32 %223, 0
  %225 = icmp slt i32 %220, 10
  %226 = or i1 %224, %225
  br i1 %226, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %218, %originalBB26alteredBB
  %227 = call i8* @gettext(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.18, i64 0, i64 0)) #10, !dbg !547
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %227), !dbg !547
  %228 = load i32, i32* @x.3
  %229 = load i32, i32* @y.4
  %230 = sub i32 %228, 1
  %231 = mul i32 %228, %230
  %232 = urem i32 %231, 2
  %233 = icmp eq i32 %232, 0
  %234 = icmp slt i32 %229, 10
  %235 = or i1 %233, %234
  br i1 %235, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  unreachable, !dbg !547

236:                                              ; preds = %215, %206
  %237 = load i8, i8* %11, align 1, !dbg !548
  %238 = trunc i8 %237 to i1, !dbg !548
  br i1 %238, label %239, label %244, !dbg !550

239:                                              ; preds = %236
  %240 = load i8, i8* @opt_zero, align 1, !dbg !551
  %241 = trunc i8 %240 to i1, !dbg !551
  br i1 %241, label %242, label %244, !dbg !552

242:                                              ; preds = %239
  %243 = call i8* @gettext(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.19, i64 0, i64 0)) #10, !dbg !553
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %243), !dbg !553
  unreachable, !dbg !553

244:                                              ; preds = %239, %236
  %245 = load i64, i64* %10, align 8, !dbg !554
  br label %246, !dbg !556

246:                                              ; preds = %244
  %collatzVar = alloca i32
  br label %247

247:                                              ; preds = %246
  %248 = load i32, i32* @x.3
  %249 = load i32, i32* @y.4
  %250 = sub i32 %248, 1
  %251 = mul i32 %248, %250
  %252 = urem i32 %251, 2
  %253 = icmp eq i32 %252, 0
  %254 = icmp slt i32 %249, 10
  %255 = or i1 %253, %254
  br i1 %255, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %247, %originalBB30alteredBB
  %256 = load i32, i32* @inVal0
  %257 = icmp sgt i32 %256, 1
  %258 = load i32, i32* @x.3
  %259 = load i32, i32* @y.4
  %260 = sub i32 %258, 1
  %261 = mul i32 %258, %260
  %262 = urem i32 %261, 2
  %263 = icmp eq i32 %262, 0
  %264 = icmp slt i32 %259, 10
  %265 = or i1 %263, %264
  br i1 %265, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br i1 %257, label %267, label %266

266:                                              ; preds = %originalBBpart232
  store i32 88, i32* %collatzVar
  br label %267

267:                                              ; preds = %266, %originalBBpart232
  %268 = load i32, i32* @x.3
  %269 = load i32, i32* @y.4
  %270 = sub i32 %268, 1
  %271 = mul i32 %268, %270
  %272 = urem i32 %271, 2
  %273 = icmp eq i32 %272, 0
  %274 = icmp slt i32 %269, 10
  %275 = or i1 %273, %274
  br i1 %275, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %267, %originalBB34alteredBB
  %276 = load i8**, i8*** @inVal1
  %277 = getelementptr inbounds i8*, i8** %276, i64 1
  %278 = load i8*, i8** %277
  %279 = trunc i64 0 to i32
  %controle = call i32 @controle(i8* %278, i32 %279)
  store i32 %controle, i32* %collatzVar
  %280 = load i32, i32* @x.3
  %281 = load i32, i32* @y.4
  %282 = sub i32 %280, 1
  %283 = mul i32 %280, %282
  %284 = urem i32 %283, 2
  %285 = icmp eq i32 %284, 0
  %286 = icmp slt i32 %281, 10
  %287 = or i1 %285, %286
  br i1 %287, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  br label %288

288:                                              ; preds = %356, %originalBBpart274, %originalBBpart236
  %289 = load i32, i32* %collatzVar
  %290 = icmp sgt i32 %289, 1
  br i1 %290, label %291, label %440

291:                                              ; preds = %288
  %292 = load i32, i32* @x.3
  %293 = load i32, i32* @y.4
  %294 = sub i32 %292, 1
  %295 = mul i32 %292, %294
  %296 = urem i32 %295, 2
  %297 = icmp eq i32 %296, 0
  %298 = icmp slt i32 %293, 10
  %299 = or i1 %297, %298
  br i1 %299, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %291, %originalBB38alteredBB
  %300 = load i32, i32* %collatzVar
  %301 = srem i32 %300, 2
  %302 = icmp eq i32 %301, 0
  %303 = load i32, i32* @x.3
  %304 = load i32, i32* @y.4
  %305 = sub i32 %303, 1
  %306 = mul i32 %303, %305
  %307 = urem i32 %306, 2
  %308 = icmp eq i32 %307, 0
  %309 = icmp slt i32 %304, 10
  %310 = or i1 %308, %309
  br i1 %310, label %originalBBpart246, label %originalBB38alteredBB

originalBBpart246:                                ; preds = %originalBB38
  br i1 %302, label %311, label %314

311:                                              ; preds = %originalBBpart246
  %312 = load i32, i32* %collatzVar
  %313 = sdiv i32 %312, 2
  store i32 %313, i32* %collatzVar
  br label %334

314:                                              ; preds = %originalBBpart246
  %315 = load i32, i32* @x.3
  %316 = load i32, i32* @y.4
  %317 = sub i32 %315, 1
  %318 = mul i32 %315, %317
  %319 = urem i32 %318, 2
  %320 = icmp eq i32 %319, 0
  %321 = icmp slt i32 %316, 10
  %322 = or i1 %320, %321
  br i1 %322, label %originalBB48, label %originalBB48alteredBB

originalBB48:                                     ; preds = %314, %originalBB48alteredBB
  %323 = load i32, i32* %collatzVar
  %324 = mul i32 %323, 3
  %325 = add i32 %324, 1
  store i32 %325, i32* %collatzVar
  %326 = load i32, i32* @x.3
  %327 = load i32, i32* @y.4
  %328 = sub i32 %326, 1
  %329 = mul i32 %326, %328
  %330 = urem i32 %329, 2
  %331 = icmp eq i32 %330, 0
  %332 = icmp slt i32 %327, 10
  %333 = or i1 %331, %332
  br i1 %333, label %originalBBpart262, label %originalBB48alteredBB

originalBBpart262:                                ; preds = %originalBB48
  br label %334

334:                                              ; preds = %originalBBpart262, %311
  %335 = load i32, i32* @x.3
  %336 = load i32, i32* @y.4
  %337 = sub i32 %335, 1
  %338 = mul i32 %335, %337
  %339 = urem i32 %338, 2
  %340 = icmp eq i32 %339, 0
  %341 = icmp slt i32 %336, 10
  %342 = or i1 %340, %341
  br i1 %342, label %originalBB64, label %originalBB64alteredBB

originalBB64:                                     ; preds = %334, %originalBB64alteredBB
  %343 = load i32, i32* %collatzVar
  %344 = sext i32 %343 to i64
  %345 = sext i32 -2 to i64
  %346 = sub i64 %245, %344
  %347 = icmp sgt i64 %346, %345
  %348 = load i32, i32* @x.3
  %349 = load i32, i32* @y.4
  %350 = sub i32 %348, 1
  %351 = mul i32 %348, %350
  %352 = urem i32 %351, 2
  %353 = icmp eq i32 %352, 0
  %354 = icmp slt i32 %349, 10
  %355 = or i1 %353, %354
  br i1 %355, label %originalBBpart274, label %originalBB64alteredBB

originalBBpart274:                                ; preds = %originalBB64
  br i1 %347, label %356, label %288

356:                                              ; preds = %originalBBpart274
  %357 = load i32, i32* %collatzVar
  %358 = sext i32 %357 to i64
  %359 = sext i32 2 to i64
  %360 = add i64 %245, %358
  %361 = icmp slt i64 %360, %359
  br i1 %361, label %362, label %288

362:                                              ; preds = %356
  %363 = load i8, i8* @just_context, align 1, !dbg !557
  %364 = trunc i8 %363 to i1, !dbg !557
  br i1 %364, label %387, label %365, !dbg !558

365:                                              ; preds = %362
  %366 = load i32, i32* @x.3
  %367 = load i32, i32* @y.4
  %368 = sub i32 %366, 1
  %369 = mul i32 %366, %368
  %370 = urem i32 %369, 2
  %371 = icmp eq i32 %370, 0
  %372 = icmp slt i32 %367, 10
  %373 = or i1 %371, %372
  br i1 %373, label %originalBB76, label %originalBB76alteredBB

originalBB76:                                     ; preds = %365, %originalBB76alteredBB
  %374 = load i8, i8* %11, align 1, !dbg !559
  %375 = trunc i8 %374 to i1, !dbg !559
  %376 = load i32, i32* @x.3
  %377 = load i32, i32* @y.4
  %378 = sub i32 %376, 1
  %379 = mul i32 %376, %378
  %380 = urem i32 %379, 2
  %381 = icmp eq i32 %380, 0
  %382 = icmp slt i32 %377, 10
  %383 = or i1 %381, %382
  br i1 %383, label %originalBBpart278, label %originalBB76alteredBB

originalBBpart278:                                ; preds = %originalBB76
  br i1 %375, label %384, label %440, !dbg !560

384:                                              ; preds = %originalBBpart278
  %385 = call i8* @getenv(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.20, i64 0, i64 0)) #10, !dbg !561
  %386 = icmp ne i8* %385, null, !dbg !561
  br i1 %386, label %440, label %387, !dbg !562

387:                                              ; preds = %384, %362
  %388 = load i32, i32* %7, align 4, !dbg !563
  %389 = icmp ne i32 %388, 0, !dbg !563
  br i1 %389, label %390, label %412, !dbg !566

390:                                              ; preds = %387
  %391 = load i32, i32* @x.3
  %392 = load i32, i32* @y.4
  %393 = sub i32 %391, 1
  %394 = mul i32 %391, %393
  %395 = urem i32 %394, 2
  %396 = icmp eq i32 %395, 0
  %397 = icmp slt i32 %392, 10
  %398 = or i1 %396, %397
  br i1 %398, label %originalBB80, label %originalBB80alteredBB

originalBB80:                                     ; preds = %390, %originalBB80alteredBB
  %399 = call i32 @getcon(i8** @context), !dbg !567
  %400 = icmp ne i32 %399, 0, !dbg !567
  %401 = load i32, i32* @x.3
  %402 = load i32, i32* @y.4
  %403 = sub i32 %401, 1
  %404 = mul i32 %401, %403
  %405 = urem i32 %404, 2
  %406 = icmp eq i32 %405, 0
  %407 = icmp slt i32 %402, 10
  %408 = or i1 %406, %407
  br i1 %408, label %originalBBpart282, label %originalBB80alteredBB

originalBBpart282:                                ; preds = %originalBB80
  br i1 %400, label %409, label %412, !dbg !568

409:                                              ; preds = %originalBBpart282
  %410 = load i8, i8* @just_context, align 1, !dbg !569
  %411 = trunc i8 %410 to i1, !dbg !569
  br i1 %411, label %421, label %412, !dbg !570

412:                                              ; preds = %409, %originalBBpart282, %387
  %413 = load i8, i8* %8, align 1, !dbg !571
  %414 = trunc i8 %413 to i1, !dbg !571
  br i1 %414, label %415, label %423, !dbg !572

415:                                              ; preds = %412
  %416 = call i64 @smack_new_label_from_self(i8** @context), !dbg !573
  %417 = icmp slt i64 %416, 0, !dbg !574
  br i1 %417, label %418, label %423, !dbg !575

418:                                              ; preds = %415
  %419 = load i8, i8* @just_context, align 1, !dbg !576
  %420 = trunc i8 %419 to i1, !dbg !576
  br i1 %420, label %421, label %423, !dbg !577

421:                                              ; preds = %418, %409
  %422 = call i8* @gettext(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.21, i64 0, i64 0)) #10, !dbg !578
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %422), !dbg !578
  unreachable, !dbg !578

423:                                              ; preds = %418, %415, %412
  %424 = load i32, i32* @x.3
  %425 = load i32, i32* @y.4
  %426 = sub i32 %424, 1
  %427 = mul i32 %424, %426
  %428 = urem i32 %427, 2
  %429 = icmp eq i32 %428, 0
  %430 = icmp slt i32 %425, 10
  %431 = or i1 %429, %430
  br i1 %431, label %originalBB84, label %originalBB84alteredBB

originalBB84:                                     ; preds = %423, %originalBB84alteredBB
  %432 = load i32, i32* @x.3
  %433 = load i32, i32* @y.4
  %434 = sub i32 %432, 1
  %435 = mul i32 %432, %434
  %436 = urem i32 %435, 2
  %437 = icmp eq i32 %436, 0
  %438 = icmp slt i32 %433, 10
  %439 = or i1 %437, %438
  br i1 %439, label %originalBBpart286, label %originalBB84alteredBB

originalBBpart286:                                ; preds = %originalBB84
  br label %440, !dbg !579

440:                                              ; preds = %originalBBpart286, %384, %originalBBpart278, %288
  %441 = load i64, i64* %10, align 8, !dbg !580
  %442 = icmp uge i64 %441, 1, !dbg !582
  br i1 %442, label %443, label %640, !dbg !583

443:                                              ; preds = %440
  %444 = load i32, i32* @x.3
  %445 = load i32, i32* @y.4
  %446 = sub i32 %444, 1
  %447 = mul i32 %444, %446
  %448 = urem i32 %447, 2
  %449 = icmp eq i32 %448, 0
  %450 = icmp slt i32 %445, 10
  %451 = or i1 %449, %450
  br i1 %451, label %originalBB88, label %originalBB88alteredBB

originalBB88:                                     ; preds = %443, %originalBB88alteredBB
  %452 = load i64, i64* %10, align 8, !dbg !584
  %453 = icmp ugt i64 %452, 1, !dbg !586
  %454 = zext i1 %453 to i64, !dbg !584
  %455 = select i1 %453, i32 1, i32 0, !dbg !584
  %456 = icmp ne i32 %455, 0, !dbg !584
  %457 = zext i1 %456 to i8, !dbg !587
  store i8 %457, i8* @multiple_users, align 1, !dbg !587
  %458 = load i32, i32* @optind, align 4, !dbg !588
  %459 = sext i32 %458 to i64, !dbg !588
  %460 = load i64, i64* %10, align 8, !dbg !589
  %461 = add i64 %460, %459, !dbg !589
  store i64 %461, i64* %10, align 8, !dbg !589
  %462 = load i32, i32* @x.3
  %463 = load i32, i32* @y.4
  %464 = sub i32 %462, 1
  %465 = mul i32 %462, %464
  %466 = urem i32 %465, 2
  %467 = icmp eq i32 %466, 0
  %468 = icmp slt i32 %463, 10
  %469 = or i1 %467, %468
  br i1 %469, label %originalBBpart291, label %originalBB88alteredBB

originalBBpart291:                                ; preds = %originalBB88
  br label %470, !dbg !590

470:                                              ; preds = %620, %originalBBpart291
  %471 = load i32, i32* @optind, align 4, !dbg !591
  %472 = sext i32 %471 to i64, !dbg !591
  %473 = load i64, i64* %10, align 8, !dbg !594
  %474 = icmp ult i64 %472, %473, !dbg !595
  br i1 %474, label %475, label %623, !dbg !596

475:                                              ; preds = %470
  call void @llvm.dbg.declare(metadata %struct.passwd** %12, metadata !597, metadata !DIExpression()), !dbg !610
  %476 = load i32, i32* @x.3
  %477 = load i32, i32* @y.4
  %478 = sub i32 %476, 1
  %479 = mul i32 %476, %478
  %480 = urem i32 %479, 2
  %481 = icmp eq i32 %480, 0
  %482 = icmp slt i32 %477, 10
  %483 = or i1 %481, %482
  br i1 %483, label %originalBB93, label %originalBB93alteredBB

originalBB93:                                     ; preds = %475, %originalBB93alteredBB
  store %struct.passwd* null, %struct.passwd** %12, align 8, !dbg !610
  call void @llvm.dbg.declare(metadata i8** %13, metadata !611, metadata !DIExpression()), !dbg !612
  %484 = load i8**, i8*** %5, align 8, !dbg !613
  %485 = load i32, i32* @optind, align 4, !dbg !614
  %486 = sext i32 %485 to i64, !dbg !613
  %487 = getelementptr inbounds i8*, i8** %484, i64 %486, !dbg !613
  %488 = load i8*, i8** %487, align 8, !dbg !613
  store i8* %488, i8** %13, align 8, !dbg !612
  %489 = load i8*, i8** %13, align 8, !dbg !615
  %490 = load i8, i8* %489, align 1, !dbg !617
  %491 = icmp ne i8 %490, 0, !dbg !617
  %492 = load i32, i32* @x.3
  %493 = load i32, i32* @y.4
  %494 = sub i32 %492, 1
  %495 = mul i32 %492, %494
  %496 = urem i32 %495, 2
  %497 = icmp eq i32 %496, 0
  %498 = icmp slt i32 %493, 10
  %499 = or i1 %497, %498
  br i1 %499, label %originalBBpart295, label %originalBB93alteredBB

originalBBpart295:                                ; preds = %originalBB93
  br i1 %491, label %500, label %556, !dbg !618

500:                                              ; preds = %originalBBpart295
  %501 = load i32, i32* @x.3
  %502 = load i32, i32* @y.4
  %503 = sub i32 %501, 1
  %504 = mul i32 %501, %503
  %505 = urem i32 %504, 2
  %506 = icmp eq i32 %505, 0
  %507 = icmp slt i32 %502, 10
  %508 = or i1 %506, %507
  br i1 %508, label %originalBB97, label %originalBB97alteredBB

originalBB97:                                     ; preds = %500, %originalBB97alteredBB
  %509 = load i8*, i8** %13, align 8, !dbg !619
  %510 = call i8* @parse_user_spec(i8* %509, i32* @euid, i32* null, i8** null, i8** null), !dbg !622
  %511 = icmp eq i8* %510, null, !dbg !623
  %512 = load i32, i32* @x.3
  %513 = load i32, i32* @y.4
  %514 = sub i32 %512, 1
  %515 = mul i32 %512, %514
  %516 = urem i32 %515, 2
  %517 = icmp eq i32 %516, 0
  %518 = icmp slt i32 %513, 10
  %519 = or i1 %517, %518
  br i1 %519, label %originalBBpart299, label %originalBB97alteredBB

originalBBpart299:                                ; preds = %originalBB97
  br i1 %511, label %520, label %539, !dbg !624

520:                                              ; preds = %originalBBpart299
  %521 = load i32, i32* @x.3
  %522 = load i32, i32* @y.4
  %523 = sub i32 %521, 1
  %524 = mul i32 %521, %523
  %525 = urem i32 %524, 2
  %526 = icmp eq i32 %525, 0
  %527 = icmp slt i32 %522, 10
  %528 = or i1 %526, %527
  br i1 %528, label %originalBB101, label %originalBB101alteredBB

originalBB101:                                    ; preds = %520, %originalBB101alteredBB
  %529 = load i32, i32* @euid, align 4, !dbg !625
  %530 = call %struct.passwd* @getpwuid(i32 %529), !dbg !627
  store %struct.passwd* %530, %struct.passwd** %12, align 8, !dbg !628
  %531 = load i32, i32* @x.3
  %532 = load i32, i32* @y.4
  %533 = sub i32 %531, 1
  %534 = mul i32 %531, %533
  %535 = urem i32 %534, 2
  %536 = icmp eq i32 %535, 0
  %537 = icmp slt i32 %532, 10
  %538 = or i1 %536, %537
  br i1 %538, label %originalBBpart2103, label %originalBB101alteredBB

originalBBpart2103:                               ; preds = %originalBB101
  br label %539, !dbg !629

539:                                              ; preds = %originalBBpart2103, %originalBBpart299
  %540 = load i32, i32* @x.3
  %541 = load i32, i32* @y.4
  %542 = sub i32 %540, 1
  %543 = mul i32 %540, %542
  %544 = urem i32 %543, 2
  %545 = icmp eq i32 %544, 0
  %546 = icmp slt i32 %541, 10
  %547 = or i1 %545, %546
  br i1 %547, label %originalBB105, label %originalBB105alteredBB

originalBB105:                                    ; preds = %539, %originalBB105alteredBB
  %548 = load i32, i32* @x.3
  %549 = load i32, i32* @y.4
  %550 = sub i32 %548, 1
  %551 = mul i32 %548, %550
  %552 = urem i32 %551, 2
  %553 = icmp eq i32 %552, 0
  %554 = icmp slt i32 %549, 10
  %555 = or i1 %553, %554
  br i1 %555, label %originalBBpart2107, label %originalBB105alteredBB

originalBBpart2107:                               ; preds = %originalBB105
  br label %556, !dbg !630

556:                                              ; preds = %originalBBpart2107, %originalBBpart295
  %557 = load i32, i32* @x.3
  %558 = load i32, i32* @y.4
  %559 = sub i32 %557, 1
  %560 = mul i32 %557, %559
  %561 = urem i32 %560, 2
  %562 = icmp eq i32 %561, 0
  %563 = icmp slt i32 %558, 10
  %564 = or i1 %562, %563
  br i1 %564, label %originalBB109, label %originalBB109alteredBB

originalBB109:                                    ; preds = %556, %originalBB109alteredBB
  %565 = load %struct.passwd*, %struct.passwd** %12, align 8, !dbg !631
  %566 = icmp eq %struct.passwd* %565, null, !dbg !633
  %567 = load i32, i32* @x.3
  %568 = load i32, i32* @y.4
  %569 = sub i32 %567, 1
  %570 = mul i32 %567, %569
  %571 = urem i32 %570, 2
  %572 = icmp eq i32 %571, 0
  %573 = icmp slt i32 %568, 10
  %574 = or i1 %572, %573
  br i1 %574, label %originalBBpart2111, label %originalBB109alteredBB

originalBBpart2111:                               ; preds = %originalBB109
  br i1 %566, label %575, label %591, !dbg !634

575:                                              ; preds = %originalBBpart2111
  %576 = call i32* @__errno_location() #15, !dbg !635
  %577 = load i32, i32* %576, align 4, !dbg !635
  %578 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.22, i64 0, i64 0)) #10, !dbg !637
  %579 = load i8**, i8*** %5, align 8, !dbg !638
  %580 = load i32, i32* @optind, align 4, !dbg !639
  %581 = sext i32 %580 to i64, !dbg !638
  %582 = getelementptr inbounds i8*, i8** %579, i64 %581, !dbg !638
  %583 = load i8*, i8** %582, align 8, !dbg !638
  %584 = call i8* @quote(i8* %583), !dbg !640
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %577, i8* %578, i8* %584), !dbg !641
  %585 = load i8, i8* @ok, align 1, !dbg !642
  %586 = trunc i8 %585 to i1, !dbg !642
  %587 = zext i1 %586 to i32, !dbg !642
  %588 = and i32 %587, 0, !dbg !642
  %589 = icmp ne i32 %588, 0, !dbg !642
  %590 = zext i1 %589 to i8, !dbg !642
  store i8 %590, i8* @ok, align 1, !dbg !642
  br label %620, !dbg !643

591:                                              ; preds = %originalBBpart2111
  %592 = load i32, i32* @x.3
  %593 = load i32, i32* @y.4
  %594 = sub i32 %592, 1
  %595 = mul i32 %592, %594
  %596 = urem i32 %595, 2
  %597 = icmp eq i32 %596, 0
  %598 = icmp slt i32 %593, 10
  %599 = or i1 %597, %598
  br i1 %599, label %originalBB113, label %originalBB113alteredBB

originalBB113:                                    ; preds = %591, %originalBB113alteredBB
  %600 = load %struct.passwd*, %struct.passwd** %12, align 8, !dbg !644
  %601 = getelementptr inbounds %struct.passwd, %struct.passwd* %600, i32 0, i32 0, !dbg !645
  %602 = load i8*, i8** %601, align 8, !dbg !645
  %603 = call noalias i8* @xstrdup(i8* %602), !dbg !646
  store i8* %603, i8** %9, align 8, !dbg !647
  %604 = load %struct.passwd*, %struct.passwd** %12, align 8, !dbg !648
  %605 = getelementptr inbounds %struct.passwd, %struct.passwd* %604, i32 0, i32 2, !dbg !649
  %606 = load i32, i32* %605, align 8, !dbg !649
  store i32 %606, i32* @euid, align 4, !dbg !650
  store i32 %606, i32* @ruid, align 4, !dbg !651
  %607 = load %struct.passwd*, %struct.passwd** %12, align 8, !dbg !652
  %608 = getelementptr inbounds %struct.passwd, %struct.passwd* %607, i32 0, i32 3, !dbg !653
  %609 = load i32, i32* %608, align 4, !dbg !653
  store i32 %609, i32* @egid, align 4, !dbg !654
  store i32 %609, i32* @rgid, align 4, !dbg !655
  %610 = load i8*, i8** %9, align 8, !dbg !656
  call void @print_stuff(i8* %610), !dbg !657
  %611 = load i8*, i8** %9, align 8, !dbg !658
  call void @free(i8* %611) #10, !dbg !659
  %612 = load i32, i32* @x.3
  %613 = load i32, i32* @y.4
  %614 = sub i32 %612, 1
  %615 = mul i32 %612, %614
  %616 = urem i32 %615, 2
  %617 = icmp eq i32 %616, 0
  %618 = icmp slt i32 %613, 10
  %619 = or i1 %617, %618
  br i1 %619, label %originalBBpart2115, label %originalBB113alteredBB

originalBBpart2115:                               ; preds = %originalBB113
  br label %620, !dbg !660

620:                                              ; preds = %originalBBpart2115, %575
  %621 = load i32, i32* @optind, align 4, !dbg !661
  %622 = add nsw i32 %621, 1, !dbg !661
  store i32 %622, i32* @optind, align 4, !dbg !661
  br label %470, !dbg !662, !llvm.loop !663

623:                                              ; preds = %470
  %624 = load i32, i32* @x.3
  %625 = load i32, i32* @y.4
  %626 = sub i32 %624, 1
  %627 = mul i32 %624, %626
  %628 = urem i32 %627, 2
  %629 = icmp eq i32 %628, 0
  %630 = icmp slt i32 %625, 10
  %631 = or i1 %629, %630
  br i1 %631, label %originalBB117, label %originalBB117alteredBB

originalBB117:                                    ; preds = %623, %originalBB117alteredBB
  %632 = load i32, i32* @x.3
  %633 = load i32, i32* @y.4
  %634 = sub i32 %632, 1
  %635 = mul i32 %632, %634
  %636 = urem i32 %635, 2
  %637 = icmp eq i32 %636, 0
  %638 = icmp slt i32 %633, 10
  %639 = or i1 %637, %638
  br i1 %639, label %originalBBpart2119, label %originalBB117alteredBB

originalBBpart2119:                               ; preds = %originalBB117
  br label %935, !dbg !665

640:                                              ; preds = %440
  call void @llvm.dbg.declare(metadata i32* %14, metadata !666, metadata !DIExpression()), !dbg !668
  %641 = load i32, i32* @x.3
  %642 = load i32, i32* @y.4
  %643 = sub i32 %641, 1
  %644 = mul i32 %641, %643
  %645 = urem i32 %644, 2
  %646 = icmp eq i32 %645, 0
  %647 = icmp slt i32 %642, 10
  %648 = or i1 %646, %647
  br i1 %648, label %originalBB121, label %originalBB121alteredBB

originalBB121:                                    ; preds = %640, %originalBB121alteredBB
  store i32 -1, i32* %14, align 4, !dbg !668
  call void @llvm.dbg.declare(metadata i32* %15, metadata !669, metadata !DIExpression()), !dbg !670
  store i32 -1, i32* %15, align 4, !dbg !670
  %649 = load i8, i8* @just_user, align 1, !dbg !671
  %650 = trunc i8 %649 to i1, !dbg !671
  %651 = load i32, i32* @x.3
  %652 = load i32, i32* @y.4
  %653 = sub i32 %651, 1
  %654 = mul i32 %651, %653
  %655 = urem i32 %654, 2
  %656 = icmp eq i32 %655, 0
  %657 = icmp slt i32 %652, 10
  %658 = or i1 %656, %657
  br i1 %658, label %originalBBpart2123, label %originalBB121alteredBB

originalBBpart2123:                               ; preds = %originalBB121
  br i1 %650, label %659, label %662, !dbg !673

659:                                              ; preds = %originalBBpart2123
  %660 = load i8, i8* @use_real, align 1, !dbg !674
  %661 = trunc i8 %660 to i1, !dbg !674
  br i1 %661, label %718, label %687, !dbg !671

662:                                              ; preds = %originalBBpart2123
  %663 = load i8, i8* @just_group, align 1, !dbg !675
  %664 = trunc i8 %663 to i1, !dbg !675
  br i1 %664, label %718, label %665, !dbg !676

665:                                              ; preds = %662
  %666 = load i32, i32* @x.3
  %667 = load i32, i32* @y.4
  %668 = sub i32 %666, 1
  %669 = mul i32 %666, %668
  %670 = urem i32 %669, 2
  %671 = icmp eq i32 %670, 0
  %672 = icmp slt i32 %667, 10
  %673 = or i1 %671, %672
  br i1 %673, label %originalBB125, label %originalBB125alteredBB

originalBB125:                                    ; preds = %665, %originalBB125alteredBB
  %674 = load i8, i8* @just_group_list, align 1, !dbg !677
  %675 = trunc i8 %674 to i1, !dbg !677
  %676 = load i32, i32* @x.3
  %677 = load i32, i32* @y.4
  %678 = sub i32 %676, 1
  %679 = mul i32 %676, %678
  %680 = urem i32 %679, 2
  %681 = icmp eq i32 %680, 0
  %682 = icmp slt i32 %677, 10
  %683 = or i1 %681, %682
  br i1 %683, label %originalBBpart2127, label %originalBB125alteredBB

originalBBpart2127:                               ; preds = %originalBB125
  br i1 %675, label %718, label %684, !dbg !678

684:                                              ; preds = %originalBBpart2127
  %685 = load i8, i8* @just_context, align 1, !dbg !679
  %686 = trunc i8 %685 to i1, !dbg !679
  br i1 %686, label %718, label %687, !dbg !673

687:                                              ; preds = %684, %659
  %688 = call i32* @__errno_location() #15, !dbg !680
  store i32 0, i32* %688, align 4, !dbg !682
  %689 = call i32 @geteuid() #10, !dbg !683
  store i32 %689, i32* @euid, align 4, !dbg !684
  %690 = load i32, i32* @euid, align 4, !dbg !685
  %691 = load i32, i32* %14, align 4, !dbg !687
  %692 = icmp eq i32 %690, %691, !dbg !688
  br i1 %692, label %693, label %701, !dbg !689

693:                                              ; preds = %687
  %694 = call i32* @__errno_location() #15, !dbg !690
  %695 = load i32, i32* %694, align 4, !dbg !690
  %696 = icmp ne i32 %695, 0, !dbg !690
  br i1 %696, label %697, label %701, !dbg !691

697:                                              ; preds = %693
  %698 = call i32* @__errno_location() #15, !dbg !692
  %699 = load i32, i32* %698, align 4, !dbg !692
  %700 = call i8* @gettext(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.23, i64 0, i64 0)) #10, !dbg !692
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %699, i8* %700), !dbg !692
  unreachable, !dbg !692

701:                                              ; preds = %693, %687
  %702 = load i32, i32* @x.3
  %703 = load i32, i32* @y.4
  %704 = sub i32 %702, 1
  %705 = mul i32 %702, %704
  %706 = urem i32 %705, 2
  %707 = icmp eq i32 %706, 0
  %708 = icmp slt i32 %703, 10
  %709 = or i1 %707, %708
  br i1 %709, label %originalBB129, label %originalBB129alteredBB

originalBB129:                                    ; preds = %701, %originalBB129alteredBB
  %710 = load i32, i32* @x.3
  %711 = load i32, i32* @y.4
  %712 = sub i32 %710, 1
  %713 = mul i32 %710, %712
  %714 = urem i32 %713, 2
  %715 = icmp eq i32 %714, 0
  %716 = icmp slt i32 %711, 10
  %717 = or i1 %715, %716
  br i1 %717, label %originalBBpart2131, label %originalBB129alteredBB

originalBBpart2131:                               ; preds = %originalBB129
  br label %718, !dbg !693

718:                                              ; preds = %originalBBpart2131, %684, %originalBBpart2127, %662, %659
  %719 = load i8, i8* @just_user, align 1, !dbg !694
  %720 = trunc i8 %719 to i1, !dbg !694
  br i1 %720, label %721, label %724, !dbg !696

721:                                              ; preds = %718
  %722 = load i8, i8* @use_real, align 1, !dbg !697
  %723 = trunc i8 %722 to i1, !dbg !697
  br i1 %723, label %733, label %780, !dbg !694

724:                                              ; preds = %718
  %725 = load i8, i8* @just_group, align 1, !dbg !698
  %726 = trunc i8 %725 to i1, !dbg !698
  br i1 %726, label %780, label %727, !dbg !699

727:                                              ; preds = %724
  %728 = load i8, i8* @just_group_list, align 1, !dbg !700
  %729 = trunc i8 %728 to i1, !dbg !700
  br i1 %729, label %733, label %730, !dbg !701

730:                                              ; preds = %727
  %731 = load i8, i8* @just_context, align 1, !dbg !702
  %732 = trunc i8 %731 to i1, !dbg !702
  br i1 %732, label %780, label %733, !dbg !696

733:                                              ; preds = %730, %727, %721
  %734 = call i32* @__errno_location() #15, !dbg !703
  store i32 0, i32* %734, align 4, !dbg !705
  %735 = call i32 @getuid() #10, !dbg !706
  store i32 %735, i32* @ruid, align 4, !dbg !707
  %736 = load i32, i32* @ruid, align 4, !dbg !708
  %737 = load i32, i32* %14, align 4, !dbg !710
  %738 = icmp eq i32 %736, %737, !dbg !711
  br i1 %738, label %739, label %763, !dbg !712

739:                                              ; preds = %733
  %740 = load i32, i32* @x.3
  %741 = load i32, i32* @y.4
  %742 = sub i32 %740, 1
  %743 = mul i32 %740, %742
  %744 = urem i32 %743, 2
  %745 = icmp eq i32 %744, 0
  %746 = icmp slt i32 %741, 10
  %747 = or i1 %745, %746
  br i1 %747, label %originalBB133, label %originalBB133alteredBB

originalBB133:                                    ; preds = %739, %originalBB133alteredBB
  %748 = call i32* @__errno_location() #15, !dbg !713
  %749 = load i32, i32* %748, align 4, !dbg !713
  %750 = icmp ne i32 %749, 0, !dbg !713
  %751 = load i32, i32* @x.3
  %752 = load i32, i32* @y.4
  %753 = sub i32 %751, 1
  %754 = mul i32 %751, %753
  %755 = urem i32 %754, 2
  %756 = icmp eq i32 %755, 0
  %757 = icmp slt i32 %752, 10
  %758 = or i1 %756, %757
  br i1 %758, label %originalBBpart2135, label %originalBB133alteredBB

originalBBpart2135:                               ; preds = %originalBB133
  br i1 %750, label %759, label %763, !dbg !714

759:                                              ; preds = %originalBBpart2135
  %760 = call i32* @__errno_location() #15, !dbg !715
  %761 = load i32, i32* %760, align 4, !dbg !715
  %762 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.24, i64 0, i64 0)) #10, !dbg !715
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %761, i8* %762), !dbg !715
  unreachable, !dbg !715

763:                                              ; preds = %originalBBpart2135, %733
  %764 = load i32, i32* @x.3
  %765 = load i32, i32* @y.4
  %766 = sub i32 %764, 1
  %767 = mul i32 %764, %766
  %768 = urem i32 %767, 2
  %769 = icmp eq i32 %768, 0
  %770 = icmp slt i32 %765, 10
  %771 = or i1 %769, %770
  br i1 %771, label %originalBB137, label %originalBB137alteredBB

originalBB137:                                    ; preds = %763, %originalBB137alteredBB
  %772 = load i32, i32* @x.3
  %773 = load i32, i32* @y.4
  %774 = sub i32 %772, 1
  %775 = mul i32 %772, %774
  %776 = urem i32 %775, 2
  %777 = icmp eq i32 %776, 0
  %778 = icmp slt i32 %773, 10
  %779 = or i1 %777, %778
  br i1 %779, label %originalBBpart2139, label %originalBB137alteredBB

originalBBpart2139:                               ; preds = %originalBB137
  br label %780, !dbg !716

780:                                              ; preds = %originalBBpart2139, %730, %724, %721
  %781 = load i8, i8* @just_user, align 1, !dbg !717
  %782 = trunc i8 %781 to i1, !dbg !717
  br i1 %782, label %917, label %783, !dbg !719

783:                                              ; preds = %780
  %784 = load i8, i8* @just_group, align 1, !dbg !720
  %785 = trunc i8 %784 to i1, !dbg !720
  br i1 %785, label %824, label %786, !dbg !721

786:                                              ; preds = %783
  %787 = load i32, i32* @x.3
  %788 = load i32, i32* @y.4
  %789 = sub i32 %787, 1
  %790 = mul i32 %787, %789
  %791 = urem i32 %790, 2
  %792 = icmp eq i32 %791, 0
  %793 = icmp slt i32 %788, 10
  %794 = or i1 %792, %793
  br i1 %794, label %originalBB141, label %originalBB141alteredBB

originalBB141:                                    ; preds = %786, %originalBB141alteredBB
  %795 = load i8, i8* @just_group_list, align 1, !dbg !722
  %796 = trunc i8 %795 to i1, !dbg !722
  %797 = load i32, i32* @x.3
  %798 = load i32, i32* @y.4
  %799 = sub i32 %797, 1
  %800 = mul i32 %797, %799
  %801 = urem i32 %800, 2
  %802 = icmp eq i32 %801, 0
  %803 = icmp slt i32 %798, 10
  %804 = or i1 %802, %803
  br i1 %804, label %originalBBpart2143, label %originalBB141alteredBB

originalBBpart2143:                               ; preds = %originalBB141
  br i1 %796, label %824, label %805, !dbg !723

805:                                              ; preds = %originalBBpart2143
  %806 = load i32, i32* @x.3
  %807 = load i32, i32* @y.4
  %808 = sub i32 %806, 1
  %809 = mul i32 %806, %808
  %810 = urem i32 %809, 2
  %811 = icmp eq i32 %810, 0
  %812 = icmp slt i32 %807, 10
  %813 = or i1 %811, %812
  br i1 %813, label %originalBB145, label %originalBB145alteredBB

originalBB145:                                    ; preds = %805, %originalBB145alteredBB
  %814 = load i8, i8* @just_context, align 1, !dbg !724
  %815 = trunc i8 %814 to i1, !dbg !724
  %816 = load i32, i32* @x.3
  %817 = load i32, i32* @y.4
  %818 = sub i32 %816, 1
  %819 = mul i32 %816, %818
  %820 = urem i32 %819, 2
  %821 = icmp eq i32 %820, 0
  %822 = icmp slt i32 %817, 10
  %823 = or i1 %821, %822
  br i1 %823, label %originalBBpart2147, label %originalBB145alteredBB

originalBBpart2147:                               ; preds = %originalBB145
  br i1 %815, label %917, label %824, !dbg !725

824:                                              ; preds = %originalBBpart2147, %originalBBpart2143, %783
  %825 = load i32, i32* @x.3
  %826 = load i32, i32* @y.4
  %827 = sub i32 %825, 1
  %828 = mul i32 %825, %827
  %829 = urem i32 %828, 2
  %830 = icmp eq i32 %829, 0
  %831 = icmp slt i32 %826, 10
  %832 = or i1 %830, %831
  br i1 %832, label %originalBB149, label %originalBB149alteredBB

originalBB149:                                    ; preds = %824, %originalBB149alteredBB
  %833 = call i32* @__errno_location() #15, !dbg !726
  store i32 0, i32* %833, align 4, !dbg !728
  %834 = call i32 @getegid() #10, !dbg !729
  store i32 %834, i32* @egid, align 4, !dbg !730
  %835 = load i32, i32* @egid, align 4, !dbg !731
  %836 = load i32, i32* %15, align 4, !dbg !733
  %837 = icmp eq i32 %835, %836, !dbg !734
  %838 = load i32, i32* @x.3
  %839 = load i32, i32* @y.4
  %840 = sub i32 %838, 1
  %841 = mul i32 %838, %840
  %842 = urem i32 %841, 2
  %843 = icmp eq i32 %842, 0
  %844 = icmp slt i32 %839, 10
  %845 = or i1 %843, %844
  br i1 %845, label %originalBBpart2151, label %originalBB149alteredBB

originalBBpart2151:                               ; preds = %originalBB149
  br i1 %837, label %846, label %870, !dbg !735

846:                                              ; preds = %originalBBpart2151
  %847 = load i32, i32* @x.3
  %848 = load i32, i32* @y.4
  %849 = sub i32 %847, 1
  %850 = mul i32 %847, %849
  %851 = urem i32 %850, 2
  %852 = icmp eq i32 %851, 0
  %853 = icmp slt i32 %848, 10
  %854 = or i1 %852, %853
  br i1 %854, label %originalBB153, label %originalBB153alteredBB

originalBB153:                                    ; preds = %846, %originalBB153alteredBB
  %855 = call i32* @__errno_location() #15, !dbg !736
  %856 = load i32, i32* %855, align 4, !dbg !736
  %857 = icmp ne i32 %856, 0, !dbg !736
  %858 = load i32, i32* @x.3
  %859 = load i32, i32* @y.4
  %860 = sub i32 %858, 1
  %861 = mul i32 %858, %860
  %862 = urem i32 %861, 2
  %863 = icmp eq i32 %862, 0
  %864 = icmp slt i32 %859, 10
  %865 = or i1 %863, %864
  br i1 %865, label %originalBBpart2155, label %originalBB153alteredBB

originalBBpart2155:                               ; preds = %originalBB153
  br i1 %857, label %866, label %870, !dbg !737

866:                                              ; preds = %originalBBpart2155
  %867 = call i32* @__errno_location() #15, !dbg !738
  %868 = load i32, i32* %867, align 4, !dbg !738
  %869 = call i8* @gettext(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.25, i64 0, i64 0)) #10, !dbg !738
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %868, i8* %869), !dbg !738
  unreachable, !dbg !738

870:                                              ; preds = %originalBBpart2155, %originalBBpart2151
  %871 = load i32, i32* @x.3
  %872 = load i32, i32* @y.4
  %873 = sub i32 %871, 1
  %874 = mul i32 %871, %873
  %875 = urem i32 %874, 2
  %876 = icmp eq i32 %875, 0
  %877 = icmp slt i32 %872, 10
  %878 = or i1 %876, %877
  br i1 %878, label %originalBB157, label %originalBB157alteredBB

originalBB157:                                    ; preds = %870, %originalBB157alteredBB
  %879 = call i32* @__errno_location() #15, !dbg !739
  store i32 0, i32* %879, align 4, !dbg !740
  %880 = call i32 @getgid() #10, !dbg !741
  store i32 %880, i32* @rgid, align 4, !dbg !742
  %881 = load i32, i32* @rgid, align 4, !dbg !743
  %882 = load i32, i32* %15, align 4, !dbg !745
  %883 = icmp eq i32 %881, %882, !dbg !746
  %884 = load i32, i32* @x.3
  %885 = load i32, i32* @y.4
  %886 = sub i32 %884, 1
  %887 = mul i32 %884, %886
  %888 = urem i32 %887, 2
  %889 = icmp eq i32 %888, 0
  %890 = icmp slt i32 %885, 10
  %891 = or i1 %889, %890
  br i1 %891, label %originalBBpart2159, label %originalBB157alteredBB

originalBBpart2159:                               ; preds = %originalBB157
  br i1 %883, label %892, label %900, !dbg !747

892:                                              ; preds = %originalBBpart2159
  %893 = call i32* @__errno_location() #15, !dbg !748
  %894 = load i32, i32* %893, align 4, !dbg !748
  %895 = icmp ne i32 %894, 0, !dbg !748
  br i1 %895, label %896, label %900, !dbg !749

896:                                              ; preds = %892
  %897 = call i32* @__errno_location() #15, !dbg !750
  %898 = load i32, i32* %897, align 4, !dbg !750
  %899 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.26, i64 0, i64 0)) #10, !dbg !750
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %898, i8* %899), !dbg !750
  unreachable, !dbg !750

900:                                              ; preds = %892, %originalBBpart2159
  %901 = load i32, i32* @x.3
  %902 = load i32, i32* @y.4
  %903 = sub i32 %901, 1
  %904 = mul i32 %901, %903
  %905 = urem i32 %904, 2
  %906 = icmp eq i32 %905, 0
  %907 = icmp slt i32 %902, 10
  %908 = or i1 %906, %907
  br i1 %908, label %originalBB161, label %originalBB161alteredBB

originalBB161:                                    ; preds = %900, %originalBB161alteredBB
  %909 = load i32, i32* @x.3
  %910 = load i32, i32* @y.4
  %911 = sub i32 %909, 1
  %912 = mul i32 %909, %911
  %913 = urem i32 %912, 2
  %914 = icmp eq i32 %913, 0
  %915 = icmp slt i32 %910, 10
  %916 = or i1 %914, %915
  br i1 %916, label %originalBBpart2163, label %originalBB161alteredBB

originalBBpart2163:                               ; preds = %originalBB161
  br label %917, !dbg !751

917:                                              ; preds = %originalBBpart2163, %originalBBpart2147, %780
  %918 = load i32, i32* @x.3
  %919 = load i32, i32* @y.4
  %920 = sub i32 %918, 1
  %921 = mul i32 %918, %920
  %922 = urem i32 %921, 2
  %923 = icmp eq i32 %922, 0
  %924 = icmp slt i32 %919, 10
  %925 = or i1 %923, %924
  br i1 %925, label %originalBB165, label %originalBB165alteredBB

originalBB165:                                    ; preds = %917, %originalBB165alteredBB
  %926 = load i8*, i8** %9, align 8, !dbg !752
  call void @print_stuff(i8* %926), !dbg !753
  %927 = load i32, i32* @x.3
  %928 = load i32, i32* @y.4
  %929 = sub i32 %927, 1
  %930 = mul i32 %927, %929
  %931 = urem i32 %930, 2
  %932 = icmp eq i32 %931, 0
  %933 = icmp slt i32 %928, 10
  %934 = or i1 %932, %933
  br i1 %934, label %originalBBpart2167, label %originalBB165alteredBB

originalBBpart2167:                               ; preds = %originalBB165
  br label %935

935:                                              ; preds = %originalBBpart2167, %originalBBpart2119
  %936 = load i32, i32* @x.3
  %937 = load i32, i32* @y.4
  %938 = sub i32 %936, 1
  %939 = mul i32 %936, %938
  %940 = urem i32 %939, 2
  %941 = icmp eq i32 %940, 0
  %942 = icmp slt i32 %937, 10
  %943 = or i1 %941, %942
  br i1 %943, label %originalBB169, label %originalBB169alteredBB

originalBB169:                                    ; preds = %935, %originalBB169alteredBB
  %944 = load i8, i8* @ok, align 1, !dbg !754
  %945 = trunc i8 %944 to i1, !dbg !754
  %946 = zext i1 %945 to i64, !dbg !754
  %947 = select i1 %945, i32 0, i32 1, !dbg !754
  %948 = load i32, i32* @x.3
  %949 = load i32, i32* @y.4
  %950 = sub i32 %948, 1
  %951 = mul i32 %948, %950
  %952 = urem i32 %951, 2
  %953 = icmp eq i32 %952, 0
  %954 = icmp slt i32 %949, 10
  %955 = or i1 %953, %954
  br i1 %955, label %originalBBpart2171, label %originalBB169alteredBB

originalBBpart2171:                               ; preds = %originalBB169
  ret i32 %947, !dbg !755

originalBBalteredBB:                              ; preds = %originalBB, %32
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %52
  %956 = call i8* @gettext(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.12, i64 0, i64 0)) #10, !dbg !488
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %956), !dbg !488
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %72
  store i8 1, i8* @use_name, align 1, !dbg !493
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %97
  call void @usage(i32 1) #14, !dbg !505
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %114
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %160
  %957 = call i8* @gettext(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.17, i64 0, i64 0)) #10, !dbg !529
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %957), !dbg !529
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %181
  %958 = load i8, i8* @just_group, align 1, !dbg !534
  %959 = trunc i8 %958 to i1, !dbg !534
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %218
  %960 = call i8* @gettext(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.18, i64 0, i64 0)) #10, !dbg !547
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %960), !dbg !547
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %247
  %961 = load i32, i32* @inVal0
  %962 = icmp sgt i32 %961, 1
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %267
  %963 = load i8**, i8*** @inVal1
  %964 = getelementptr inbounds i8*, i8** %963, i64 1
  %965 = load i8*, i8** %964
  %966 = trunc i64 0 to i32
  %controlealteredBB = call i32 @controle(i8* %965, i32 %966)
  store i32 %controlealteredBB, i32* %collatzVar
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %291
  %967 = load i32, i32* %collatzVar
  %_ = sub i32 %967, 2
  %gen = mul i32 %_, 2
  %_39 = shl i32 %967, 2
  %_40 = sub i32 %967, 2
  %gen41 = mul i32 %_40, 2
  %_42 = shl i32 %967, 2
  %_43 = sub i32 %967, 2
  %gen44 = mul i32 %_43, 2
  %968 = srem i32 %967, 2
  %969 = icmp eq i32 %968, 0
  br label %originalBB38

originalBB48alteredBB:                            ; preds = %originalBB48, %314
  %970 = load i32, i32* %collatzVar
  %_49 = sub i32 %970, 3
  %gen50 = mul i32 %_49, 3
  %_51 = shl i32 %970, 3
  %_52 = sub i32 %970, 3
  %gen53 = mul i32 %_52, 3
  %_54 = shl i32 %970, 3
  %_55 = sub i32 0, %970
  %gen56 = add i32 %_55, 3
  %971 = mul i32 %970, 3
  %_57 = sub i32 0, %971
  %gen58 = add i32 %_57, 1
  %_59 = sub i32 0, %971
  %gen60 = add i32 %_59, 1
  %972 = add i32 %971, 1
  store i32 %972, i32* %collatzVar
  br label %originalBB48

originalBB64alteredBB:                            ; preds = %originalBB64, %334
  %973 = load i32, i32* %collatzVar
  %974 = sext i32 %973 to i64
  %975 = sext i32 -2 to i64
  %_65 = sub i64 0, %245
  %gen66 = add i64 %_65, %974
  %_67 = shl i64 %245, %974
  %_68 = sub i64 %245, %974
  %gen69 = mul i64 %_68, %974
  %_70 = shl i64 %245, %974
  %_71 = shl i64 %245, %974
  %_72 = shl i64 %245, %974
  %976 = sub i64 %245, %974
  %977 = icmp sgt i64 %976, %975
  br label %originalBB64

originalBB76alteredBB:                            ; preds = %originalBB76, %365
  %978 = load i8, i8* %11, align 1, !dbg !559
  %979 = trunc i8 %978 to i1, !dbg !559
  br label %originalBB76

originalBB80alteredBB:                            ; preds = %originalBB80, %390
  %980 = call i32 @getcon(i8** @context), !dbg !567
  %981 = icmp ne i32 %980, 0, !dbg !567
  br label %originalBB80

originalBB84alteredBB:                            ; preds = %originalBB84, %423
  br label %originalBB84

originalBB88alteredBB:                            ; preds = %originalBB88, %443
  %982 = load i64, i64* %10, align 8, !dbg !584
  %983 = icmp ugt i64 %982, 1, !dbg !586
  %984 = zext i1 %983 to i64, !dbg !584
  %985 = select i1 %983, i32 1, i32 0, !dbg !584
  %986 = icmp ne i32 %985, 0, !dbg !584
  %987 = zext i1 %986 to i8, !dbg !587
  store i8 %987, i8* @multiple_users, align 1, !dbg !587
  %988 = load i32, i32* @optind, align 4, !dbg !588
  %989 = sext i32 %988 to i64, !dbg !588
  %990 = load i64, i64* %10, align 8, !dbg !589
  %_89 = shl i64 %990, %989
  %991 = add i64 %990, %989, !dbg !589
  store i64 %991, i64* %10, align 8, !dbg !589
  br label %originalBB88

originalBB93alteredBB:                            ; preds = %originalBB93, %475
  store %struct.passwd* null, %struct.passwd** %12, align 8, !dbg !610
  call void @llvm.dbg.declare(metadata !4, metadata !756, metadata !DIExpression()), !dbg !612
  %992 = load i8**, i8*** %5, align 8, !dbg !613
  %993 = load i32, i32* @optind, align 4, !dbg !614
  %994 = sext i32 %993 to i64, !dbg !613
  %995 = getelementptr inbounds i8*, i8** %992, i64 %994, !dbg !613
  %996 = load i8*, i8** %995, align 8, !dbg !613
  store i8* %996, i8** %13, align 8, !dbg !612
  %997 = load i8*, i8** %13, align 8, !dbg !615
  %998 = load i8, i8* %997, align 1, !dbg !617
  %999 = icmp ne i8 %998, 0, !dbg !617
  br label %originalBB93

originalBB97alteredBB:                            ; preds = %originalBB97, %500
  %1000 = load i8*, i8** %13, align 8, !dbg !619
  %1001 = call i8* @parse_user_spec(i8* %1000, i32* @euid, i32* null, i8** null, i8** null), !dbg !622
  %1002 = icmp eq i8* %1001, null, !dbg !623
  br label %originalBB97

originalBB101alteredBB:                           ; preds = %originalBB101, %520
  %1003 = load i32, i32* @euid, align 4, !dbg !625
  %1004 = call %struct.passwd* @getpwuid(i32 %1003), !dbg !627
  store %struct.passwd* %1004, %struct.passwd** %12, align 8, !dbg !628
  br label %originalBB101

originalBB105alteredBB:                           ; preds = %originalBB105, %539
  br label %originalBB105

originalBB109alteredBB:                           ; preds = %originalBB109, %556
  %1005 = load %struct.passwd*, %struct.passwd** %12, align 8, !dbg !631
  %1006 = icmp eq %struct.passwd* %1005, null, !dbg !633
  br label %originalBB109

originalBB113alteredBB:                           ; preds = %originalBB113, %591
  %1007 = load %struct.passwd*, %struct.passwd** %12, align 8, !dbg !644
  %1008 = getelementptr inbounds %struct.passwd, %struct.passwd* %1007, i32 0, i32 0, !dbg !645
  %1009 = load i8*, i8** %1008, align 8, !dbg !645
  %1010 = call noalias i8* @xstrdup(i8* %1009), !dbg !646
  store i8* %1010, i8** %9, align 8, !dbg !647
  %1011 = load %struct.passwd*, %struct.passwd** %12, align 8, !dbg !648
  %1012 = getelementptr inbounds %struct.passwd, %struct.passwd* %1011, i32 0, i32 2, !dbg !649
  %1013 = load i32, i32* %1012, align 8, !dbg !649
  store i32 %1013, i32* @euid, align 4, !dbg !650
  store i32 %1013, i32* @ruid, align 4, !dbg !651
  %1014 = load %struct.passwd*, %struct.passwd** %12, align 8, !dbg !652
  %1015 = getelementptr inbounds %struct.passwd, %struct.passwd* %1014, i32 0, i32 3, !dbg !653
  %1016 = load i32, i32* %1015, align 4, !dbg !653
  store i32 %1016, i32* @egid, align 4, !dbg !654
  store i32 %1016, i32* @rgid, align 4, !dbg !655
  %1017 = load i8*, i8** %9, align 8, !dbg !656
  call void @print_stuff(i8* %1017), !dbg !657
  %1018 = load i8*, i8** %9, align 8, !dbg !658
  call void @free(i8* %1018) #10, !dbg !659
  br label %originalBB113

originalBB117alteredBB:                           ; preds = %originalBB117, %623
  br label %originalBB117

originalBB121alteredBB:                           ; preds = %originalBB121, %640
  store i32 -1, i32* %14, align 4, !dbg !668
  call void @llvm.dbg.declare(metadata !4, metadata !809, metadata !DIExpression()), !dbg !670
  store i32 -1, i32* %15, align 4, !dbg !670
  %1019 = load i8, i8* @just_user, align 1, !dbg !671
  %1020 = trunc i8 %1019 to i1, !dbg !671
  br label %originalBB121

originalBB125alteredBB:                           ; preds = %originalBB125, %665
  %1021 = load i8, i8* @just_group_list, align 1, !dbg !677
  %1022 = trunc i8 %1021 to i1, !dbg !677
  br label %originalBB125

originalBB129alteredBB:                           ; preds = %originalBB129, %701
  br label %originalBB129

originalBB133alteredBB:                           ; preds = %originalBB133, %739
  %1023 = call i32* @__errno_location() #15, !dbg !713
  %1024 = load i32, i32* %1023, align 4, !dbg !713
  %1025 = icmp ne i32 %1024, 0, !dbg !713
  br label %originalBB133

originalBB137alteredBB:                           ; preds = %originalBB137, %763
  br label %originalBB137

originalBB141alteredBB:                           ; preds = %originalBB141, %786
  %1026 = load i8, i8* @just_group_list, align 1, !dbg !722
  %1027 = trunc i8 %1026 to i1, !dbg !722
  br label %originalBB141

originalBB145alteredBB:                           ; preds = %originalBB145, %805
  %1028 = load i8, i8* @just_context, align 1, !dbg !724
  %1029 = trunc i8 %1028 to i1, !dbg !724
  br label %originalBB145

originalBB149alteredBB:                           ; preds = %originalBB149, %824
  %1030 = call i32* @__errno_location() #15, !dbg !726
  store i32 0, i32* %1030, align 4, !dbg !728
  %1031 = call i32 @getegid() #10, !dbg !729
  store i32 %1031, i32* @egid, align 4, !dbg !730
  %1032 = load i32, i32* @egid, align 4, !dbg !731
  %1033 = load i32, i32* %15, align 4, !dbg !733
  %1034 = icmp eq i32 %1032, %1033, !dbg !734
  br label %originalBB149

originalBB153alteredBB:                           ; preds = %originalBB153, %846
  %1035 = call i32* @__errno_location() #15, !dbg !736
  %1036 = load i32, i32* %1035, align 4, !dbg !736
  %1037 = icmp ne i32 %1036, 0, !dbg !736
  br label %originalBB153

originalBB157alteredBB:                           ; preds = %originalBB157, %870
  %1038 = call i32* @__errno_location() #15, !dbg !739
  store i32 0, i32* %1038, align 4, !dbg !740
  %1039 = call i32 @getgid() #10, !dbg !741
  store i32 %1039, i32* @rgid, align 4, !dbg !742
  %1040 = load i32, i32* @rgid, align 4, !dbg !743
  %1041 = load i32, i32* %15, align 4, !dbg !745
  %1042 = icmp eq i32 %1040, %1041, !dbg !746
  br label %originalBB157

originalBB161alteredBB:                           ; preds = %originalBB161, %900
  br label %originalBB161

originalBB165alteredBB:                           ; preds = %originalBB165, %917
  %1043 = load i8*, i8** %9, align 8, !dbg !752
  call void @print_stuff(i8* %1043), !dbg !753
  br label %originalBB165

originalBB169alteredBB:                           ; preds = %originalBB169, %935
  %1044 = load i8, i8* @ok, align 1, !dbg !754
  %1045 = trunc i8 %1044 to i1, !dbg !754
  %1046 = zext i1 %1045 to i64, !dbg !754
  %1047 = select i1 %1045, i32 0, i32 1, !dbg !754
  br label %originalBB169
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @is_smack_enabled() #4 !dbg !859 {
  %1 = load i32, i32* @x.5
  %2 = load i32, i32* @y.6
  %3 = sub i32 %1, 1
  %4 = mul i32 %1, %3
  %5 = urem i32 %4, 2
  %6 = icmp eq i32 %5, 0
  %7 = icmp slt i32 %2, 10
  %8 = or i1 %6, %7
  br i1 %8, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %0, %originalBBalteredBB
  %9 = load i32, i32* @x.5
  %10 = load i32, i32* @y.6
  %11 = sub i32 %9, 1
  %12 = mul i32 %9, %11
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = icmp slt i32 %10, 10
  %16 = or i1 %14, %15
  br i1 %16, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i1 false, !dbg !863

originalBBalteredBB:                              ; preds = %originalBB, %0
  br label %originalBB
}

; Function Attrs: nounwind
declare dso_local i8* @bindtextdomain(i8*, i8*) #2

; Function Attrs: nounwind
declare dso_local i8* @textdomain(i8*) #2

; Function Attrs: nounwind
declare dso_local i32 @atexit(void ()*) #2

; Function Attrs: nounwind
declare dso_local i32 @getopt_long(i32, i8**, i8*, %struct.option*, i32*) #2

declare dso_local void @error(i32, i32, i8*, ...) #3

; Function Attrs: nounwind
declare dso_local i8* @getenv(i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @smack_new_label_from_self(i8**) #4 !dbg !864 {
  %2 = alloca i8**, align 8
  store i8** %0, i8*** %2, align 8
  call void @llvm.dbg.declare(metadata i8*** %2, metadata !871, metadata !DIExpression()), !dbg !872
  ret i64 -1, !dbg !873
}

declare dso_local %struct.passwd* @getpwuid(i32) #3

; Function Attrs: nounwind readnone
declare dso_local i32* @__errno_location() #8

; Function Attrs: noinline nounwind optnone uwtable
define internal void @print_stuff(i8*) #4 !dbg !874 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !875, metadata !DIExpression()), !dbg !876
  %3 = load i8, i8* @just_user, align 1, !dbg !877
  %4 = trunc i8 %3 to i1, !dbg !877
  br i1 %4, label %5, label %46, !dbg !879

5:                                                ; preds = %1
  %6 = load i8, i8* @use_real, align 1, !dbg !880
  %7 = trunc i8 %6 to i1, !dbg !880
  br i1 %7, label %8, label %26, !dbg !880

8:                                                ; preds = %5
  %9 = load i32, i32* @x.9
  %10 = load i32, i32* @y.10
  %11 = sub i32 %9, 1
  %12 = mul i32 %9, %11
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = icmp slt i32 %10, 10
  %16 = or i1 %14, %15
  br i1 %16, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %8, %originalBBalteredBB
  %17 = load i32, i32* @ruid, align 4, !dbg !881
  %18 = load i32, i32* @x.9
  %19 = load i32, i32* @y.10
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %28, !dbg !880

26:                                               ; preds = %5
  %27 = load i32, i32* @euid, align 4, !dbg !882
  br label %28, !dbg !880

28:                                               ; preds = %26, %originalBBpart2
  %29 = phi i32 [ %17, %originalBBpart2 ], [ %27, %26 ], !dbg !880
  %30 = load i32, i32* @x.9
  %31 = load i32, i32* @y.10
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %28, %originalBB1alteredBB
  call void @print_user(i32 %29), !dbg !883
  %38 = load i32, i32* @x.9
  %39 = load i32, i32* @y.10
  %40 = sub i32 %38, 1
  %41 = mul i32 %38, %40
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %43, %44
  br i1 %45, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %183, !dbg !883

46:                                               ; preds = %1
  %47 = load i8, i8* @just_group, align 1, !dbg !884
  %48 = trunc i8 %47 to i1, !dbg !884
  br i1 %48, label %49, label %68, !dbg !886

49:                                               ; preds = %46
  %50 = load i8, i8* @use_real, align 1, !dbg !887
  %51 = trunc i8 %50 to i1, !dbg !887
  br i1 %51, label %52, label %54, !dbg !887

52:                                               ; preds = %49
  %53 = load i32, i32* @rgid, align 4, !dbg !888
  br label %56, !dbg !887

54:                                               ; preds = %49
  %55 = load i32, i32* @egid, align 4, !dbg !889
  br label %56, !dbg !887

56:                                               ; preds = %54, %52
  %57 = phi i32 [ %53, %52 ], [ %55, %54 ], !dbg !887
  %58 = load i8, i8* @use_name, align 1, !dbg !890
  %59 = trunc i8 %58 to i1, !dbg !890
  %60 = call zeroext i1 @print_group(i32 %57, i1 zeroext %59), !dbg !891
  %61 = zext i1 %60 to i32, !dbg !891
  %62 = load i8, i8* @ok, align 1, !dbg !892
  %63 = trunc i8 %62 to i1, !dbg !892
  %64 = zext i1 %63 to i32, !dbg !892
  %65 = and i32 %64, %61, !dbg !892
  %66 = icmp ne i32 %65, 0, !dbg !892
  %67 = zext i1 %66 to i8, !dbg !892
  store i8 %67, i8* @ok, align 1, !dbg !892
  br label %166, !dbg !893

68:                                               ; preds = %46
  %69 = load i8, i8* @just_group_list, align 1, !dbg !894
  %70 = trunc i8 %69 to i1, !dbg !894
  br i1 %70, label %71, label %91, !dbg !896

71:                                               ; preds = %68
  %72 = load i8*, i8** %2, align 8, !dbg !897
  %73 = load i32, i32* @ruid, align 4, !dbg !898
  %74 = load i32, i32* @rgid, align 4, !dbg !899
  %75 = load i32, i32* @egid, align 4, !dbg !900
  %76 = load i8, i8* @use_name, align 1, !dbg !901
  %77 = trunc i8 %76 to i1, !dbg !901
  %78 = load i8, i8* @opt_zero, align 1, !dbg !902
  %79 = trunc i8 %78 to i1, !dbg !902
  %80 = zext i1 %79 to i64, !dbg !902
  %81 = select i1 %79, i32 0, i32 32, !dbg !902
  %82 = trunc i32 %81 to i8, !dbg !902
  %83 = call zeroext i1 @print_group_list(i8* %72, i32 %73, i32 %74, i32 %75, i1 zeroext %77, i8 signext %82), !dbg !903
  %84 = zext i1 %83 to i32, !dbg !903
  %85 = load i8, i8* @ok, align 1, !dbg !904
  %86 = trunc i8 %85 to i1, !dbg !904
  %87 = zext i1 %86 to i32, !dbg !904
  %88 = and i32 %87, %84, !dbg !904
  %89 = icmp ne i32 %88, 0, !dbg !904
  %90 = zext i1 %89 to i8, !dbg !904
  store i8 %90, i8* @ok, align 1, !dbg !904
  br label %149, !dbg !905

91:                                               ; preds = %68
  %92 = load i32, i32* @x.9
  %93 = load i32, i32* @y.10
  %94 = sub i32 %92, 1
  %95 = mul i32 %92, %94
  %96 = urem i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %93, 10
  %99 = or i1 %97, %98
  br i1 %99, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %91, %originalBB6alteredBB
  %100 = load i8, i8* @just_context, align 1, !dbg !906
  %101 = trunc i8 %100 to i1, !dbg !906
  %102 = load i32, i32* @x.9
  %103 = load i32, i32* @y.10
  %104 = sub i32 %102, 1
  %105 = mul i32 %102, %104
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %103, 10
  %109 = or i1 %107, %108
  br i1 %109, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %101, label %110, label %114, !dbg !908

110:                                              ; preds = %originalBBpart28
  %111 = load i8*, i8** @context, align 8, !dbg !909
  %112 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !909
  %113 = call i32 @fputs_unlocked(i8* %111, %struct._IO_FILE* %112), !dbg !909
  br label %132, !dbg !909

114:                                              ; preds = %originalBBpart28
  %115 = load i32, i32* @x.9
  %116 = load i32, i32* @y.10
  %117 = sub i32 %115, 1
  %118 = mul i32 %115, %117
  %119 = urem i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = icmp slt i32 %116, 10
  %122 = or i1 %120, %121
  br i1 %122, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %114, %originalBB10alteredBB
  %123 = load i8*, i8** %2, align 8, !dbg !910
  call void @print_full_info(i8* %123), !dbg !911
  %124 = load i32, i32* @x.9
  %125 = load i32, i32* @y.10
  %126 = sub i32 %124, 1
  %127 = mul i32 %124, %126
  %128 = urem i32 %127, 2
  %129 = icmp eq i32 %128, 0
  %130 = icmp slt i32 %125, 10
  %131 = or i1 %129, %130
  br i1 %131, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %132

132:                                              ; preds = %originalBBpart212, %110
  %133 = load i32, i32* @x.9
  %134 = load i32, i32* @y.10
  %135 = sub i32 %133, 1
  %136 = mul i32 %133, %135
  %137 = urem i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = icmp slt i32 %134, 10
  %140 = or i1 %138, %139
  br i1 %140, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %132, %originalBB14alteredBB
  %141 = load i32, i32* @x.9
  %142 = load i32, i32* @y.10
  %143 = sub i32 %141, 1
  %144 = mul i32 %141, %143
  %145 = urem i32 %144, 2
  %146 = icmp eq i32 %145, 0
  %147 = icmp slt i32 %142, 10
  %148 = or i1 %146, %147
  br i1 %148, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %149

149:                                              ; preds = %originalBBpart216, %71
  %150 = load i32, i32* @x.9
  %151 = load i32, i32* @y.10
  %152 = sub i32 %150, 1
  %153 = mul i32 %150, %152
  %154 = urem i32 %153, 2
  %155 = icmp eq i32 %154, 0
  %156 = icmp slt i32 %151, 10
  %157 = or i1 %155, %156
  br i1 %157, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %149, %originalBB18alteredBB
  %158 = load i32, i32* @x.9
  %159 = load i32, i32* @y.10
  %160 = sub i32 %158, 1
  %161 = mul i32 %158, %160
  %162 = urem i32 %161, 2
  %163 = icmp eq i32 %162, 0
  %164 = icmp slt i32 %159, 10
  %165 = or i1 %163, %164
  br i1 %165, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %166

166:                                              ; preds = %originalBBpart220, %56
  %167 = load i32, i32* @x.9
  %168 = load i32, i32* @y.10
  %169 = sub i32 %167, 1
  %170 = mul i32 %167, %169
  %171 = urem i32 %170, 2
  %172 = icmp eq i32 %171, 0
  %173 = icmp slt i32 %168, 10
  %174 = or i1 %172, %173
  br i1 %174, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %166, %originalBB22alteredBB
  %175 = load i32, i32* @x.9
  %176 = load i32, i32* @y.10
  %177 = sub i32 %175, 1
  %178 = mul i32 %175, %177
  %179 = urem i32 %178, 2
  %180 = icmp eq i32 %179, 0
  %181 = icmp slt i32 %176, 10
  %182 = or i1 %180, %181
  br i1 %182, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br label %183

183:                                              ; preds = %originalBBpart224, %originalBBpart24
  %184 = load i8, i8* @opt_zero, align 1, !dbg !912
  %185 = trunc i8 %184 to i1, !dbg !912
  br i1 %185, label %186, label %227, !dbg !914

186:                                              ; preds = %183
  %187 = load i32, i32* @x.9
  %188 = load i32, i32* @y.10
  %189 = sub i32 %187, 1
  %190 = mul i32 %187, %189
  %191 = urem i32 %190, 2
  %192 = icmp eq i32 %191, 0
  %193 = icmp slt i32 %188, 10
  %194 = or i1 %192, %193
  br i1 %194, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %186, %originalBB26alteredBB
  %195 = load i8, i8* @just_group_list, align 1, !dbg !915
  %196 = trunc i8 %195 to i1, !dbg !915
  %197 = load i32, i32* @x.9
  %198 = load i32, i32* @y.10
  %199 = sub i32 %197, 1
  %200 = mul i32 %197, %199
  %201 = urem i32 %200, 2
  %202 = icmp eq i32 %201, 0
  %203 = icmp slt i32 %198, 10
  %204 = or i1 %202, %203
  br i1 %204, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br i1 %196, label %205, label %227, !dbg !916

205:                                              ; preds = %originalBBpart228
  %206 = load i8, i8* @multiple_users, align 1, !dbg !917
  %207 = trunc i8 %206 to i1, !dbg !917
  br i1 %207, label %208, label %227, !dbg !918

208:                                              ; preds = %205
  %209 = load i32, i32* @x.9
  %210 = load i32, i32* @y.10
  %211 = sub i32 %209, 1
  %212 = mul i32 %209, %211
  %213 = urem i32 %212, 2
  %214 = icmp eq i32 %213, 0
  %215 = icmp slt i32 %210, 10
  %216 = or i1 %214, %215
  br i1 %216, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %208, %originalBB30alteredBB
  %217 = call i32 @putchar_unlocked(i32 0), !dbg !919
  %218 = call i32 @putchar_unlocked(i32 0), !dbg !921
  %219 = load i32, i32* @x.9
  %220 = load i32, i32* @y.10
  %221 = sub i32 %219, 1
  %222 = mul i32 %219, %221
  %223 = urem i32 %222, 2
  %224 = icmp eq i32 %223, 0
  %225 = icmp slt i32 %220, 10
  %226 = or i1 %224, %225
  br i1 %226, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br label %249, !dbg !922

227:                                              ; preds = %205, %originalBBpart228, %183
  %228 = load i32, i32* @x.9
  %229 = load i32, i32* @y.10
  %230 = sub i32 %228, 1
  %231 = mul i32 %228, %230
  %232 = urem i32 %231, 2
  %233 = icmp eq i32 %232, 0
  %234 = icmp slt i32 %229, 10
  %235 = or i1 %233, %234
  br i1 %235, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %227, %originalBB34alteredBB
  %236 = load i8, i8* @opt_zero, align 1, !dbg !923
  %237 = trunc i8 %236 to i1, !dbg !923
  %238 = zext i1 %237 to i64, !dbg !923
  %239 = select i1 %237, i32 0, i32 10, !dbg !923
  %240 = call i32 @putchar_unlocked(i32 %239), !dbg !923
  %241 = load i32, i32* @x.9
  %242 = load i32, i32* @y.10
  %243 = sub i32 %241, 1
  %244 = mul i32 %241, %243
  %245 = urem i32 %244, 2
  %246 = icmp eq i32 %245, 0
  %247 = icmp slt i32 %242, 10
  %248 = or i1 %246, %247
  br i1 %248, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  br label %249

249:                                              ; preds = %originalBBpart236, %originalBBpart232
  ret void, !dbg !925

originalBBalteredBB:                              ; preds = %originalBB, %8
  %250 = load i32, i32* @ruid, align 4, !dbg !881
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %28
  call void @print_user(i32 %29), !dbg !883
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %91
  %251 = load i8, i8* @just_context, align 1, !dbg !906
  %252 = trunc i8 %251 to i1, !dbg !906
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %114
  %253 = load i8*, i8** %2, align 8, !dbg !910
  call void @print_full_info(i8* %253), !dbg !911
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %132
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %149
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %166
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %186
  %254 = load i8, i8* @just_group_list, align 1, !dbg !915
  %255 = trunc i8 %254 to i1, !dbg !915
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %208
  %256 = call i32 @putchar_unlocked(i32 0), !dbg !919
  %257 = call i32 @putchar_unlocked(i32 0), !dbg !921
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %227
  %258 = load i8, i8* @opt_zero, align 1, !dbg !923
  %259 = trunc i8 %258 to i1, !dbg !923
  %260 = zext i1 %259 to i64, !dbg !923
  %261 = select i1 %259, i32 0, i32 10, !dbg !923
  %262 = call i32 @putchar_unlocked(i32 %261), !dbg !923
  br label %originalBB34
}

; Function Attrs: nounwind
declare dso_local void @free(i8*) #2

; Function Attrs: nounwind
declare dso_local i32 @geteuid() #2

; Function Attrs: nounwind
declare dso_local i32 @getuid() #2

; Function Attrs: nounwind
declare dso_local i32 @getegid() #2

; Function Attrs: nounwind
declare dso_local i32 @getgid() #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @print_user(i32) #4 !dbg !926 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.passwd*, align 8
  %4 = alloca i8*, align 8
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !929, metadata !DIExpression()), !dbg !930
  call void @llvm.dbg.declare(metadata %struct.passwd** %3, metadata !931, metadata !DIExpression()), !dbg !932
  store %struct.passwd* null, %struct.passwd** %3, align 8, !dbg !932
  %5 = load i8, i8* @use_name, align 1, !dbg !933
  %6 = trunc i8 %5 to i1, !dbg !933
  br i1 %6, label %7, label %54, !dbg !935

7:                                                ; preds = %1
  %8 = load i32, i32* @x.11
  %9 = load i32, i32* @y.12
  %10 = sub i32 %8, 1
  %11 = mul i32 %8, %10
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = icmp slt i32 %9, 10
  %15 = or i1 %13, %14
  br i1 %15, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %7, %originalBBalteredBB
  %16 = load i32, i32* %2, align 4, !dbg !936
  %17 = call %struct.passwd* @getpwuid(i32 %16), !dbg !938
  store %struct.passwd* %17, %struct.passwd** %3, align 8, !dbg !939
  %18 = load %struct.passwd*, %struct.passwd** %3, align 8, !dbg !940
  %19 = icmp eq %struct.passwd* %18, null, !dbg !942
  %20 = load i32, i32* @x.11
  %21 = load i32, i32* @y.12
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %19, label %28, label %37, !dbg !943

28:                                               ; preds = %originalBBpart2
  %29 = call i8* @gettext(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.51, i64 0, i64 0)) #10, !dbg !944
  %30 = call i8* @uidtostr_ptr(i32* %2), !dbg !946
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %29, i8* %30), !dbg !947
  %31 = load i8, i8* @ok, align 1, !dbg !948
  %32 = trunc i8 %31 to i1, !dbg !948
  %33 = zext i1 %32 to i32, !dbg !948
  %34 = and i32 %33, 0, !dbg !948
  %35 = icmp ne i32 %34, 0, !dbg !948
  %36 = zext i1 %35 to i8, !dbg !948
  store i8 %36, i8* @ok, align 1, !dbg !948
  br label %37, !dbg !949

37:                                               ; preds = %28, %originalBBpart2
  %38 = load i32, i32* @x.11
  %39 = load i32, i32* @y.12
  %40 = sub i32 %38, 1
  %41 = mul i32 %38, %40
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %43, %44
  br i1 %45, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %37, %originalBB1alteredBB
  %46 = load i32, i32* @x.11
  %47 = load i32, i32* @y.12
  %48 = sub i32 %46, 1
  %49 = mul i32 %46, %48
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %47, 10
  %53 = or i1 %51, %52
  br i1 %53, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %54, !dbg !950

54:                                               ; preds = %originalBBpart24, %1
  call void @llvm.dbg.declare(metadata i8** %4, metadata !951, metadata !DIExpression()), !dbg !952
  %55 = load %struct.passwd*, %struct.passwd** %3, align 8, !dbg !953
  %56 = icmp ne %struct.passwd* %55, null, !dbg !953
  br i1 %56, label %57, label %61, !dbg !953

57:                                               ; preds = %54
  %58 = load %struct.passwd*, %struct.passwd** %3, align 8, !dbg !954
  %59 = getelementptr inbounds %struct.passwd, %struct.passwd* %58, i32 0, i32 0, !dbg !955
  %60 = load i8*, i8** %59, align 8, !dbg !955
  br label %63, !dbg !953

61:                                               ; preds = %54
  %62 = call i8* @uidtostr_ptr(i32* %2), !dbg !956
  br label %63, !dbg !953

63:                                               ; preds = %61, %57
  %64 = phi i8* [ %60, %57 ], [ %62, %61 ], !dbg !953
  store i8* %64, i8** %4, align 8, !dbg !952
  %65 = load i8*, i8** %4, align 8, !dbg !957
  %66 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !957
  %67 = call i32 @fputs_unlocked(i8* %65, %struct._IO_FILE* %66), !dbg !957
  ret void, !dbg !958

originalBBalteredBB:                              ; preds = %originalBB, %7
  %68 = load i32, i32* %2, align 4, !dbg !936
  %69 = call %struct.passwd* @getpwuid(i32 %68), !dbg !938
  store %struct.passwd* %69, %struct.passwd** %3, align 8, !dbg !939
  %70 = load %struct.passwd*, %struct.passwd** %3, align 8, !dbg !940
  %71 = icmp eq %struct.passwd* %70, null, !dbg !942
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %37
  br label %originalBB1
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @print_full_info(i8*) #4 !dbg !959 {
  %2 = alloca i8*, align 8
  %3 = alloca %struct.passwd*, align 8
  %4 = alloca %struct.group*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !960, metadata !DIExpression()), !dbg !961
  call void @llvm.dbg.declare(metadata %struct.passwd** %3, metadata !962, metadata !DIExpression()), !dbg !963
  call void @llvm.dbg.declare(metadata %struct.group** %4, metadata !964, metadata !DIExpression()), !dbg !973
  %9 = call i8* @gettext(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.52, i64 0, i64 0)) #10, !dbg !974
  %10 = call i8* @uidtostr_ptr(i32* @ruid), !dbg !975
  %11 = call i32 (i8*, ...) @printf(i8* %9, i8* %10), !dbg !976
  %12 = load i32, i32* @ruid, align 4, !dbg !977
  %13 = call %struct.passwd* @getpwuid(i32 %12), !dbg !978
  store %struct.passwd* %13, %struct.passwd** %3, align 8, !dbg !979
  %14 = load %struct.passwd*, %struct.passwd** %3, align 8, !dbg !980
  %15 = icmp ne %struct.passwd* %14, null, !dbg !980
  br i1 %15, label %16, label %21, !dbg !982

16:                                               ; preds = %1
  %17 = load %struct.passwd*, %struct.passwd** %3, align 8, !dbg !983
  %18 = getelementptr inbounds %struct.passwd, %struct.passwd* %17, i32 0, i32 0, !dbg !984
  %19 = load i8*, i8** %18, align 8, !dbg !984
  %20 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.53, i64 0, i64 0), i8* %19), !dbg !985
  br label %21, !dbg !985

21:                                               ; preds = %16, %1
  %22 = load i32, i32* @x.13
  %23 = load i32, i32* @y.14
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %21, %originalBBalteredBB
  %30 = call i8* @gettext(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.54, i64 0, i64 0)) #10, !dbg !986
  %31 = call i8* @gidtostr_ptr(i32* @rgid), !dbg !987
  %32 = call i32 (i8*, ...) @printf(i8* %30, i8* %31), !dbg !988
  %33 = load i32, i32* @rgid, align 4, !dbg !989
  %34 = call %struct.group* @getgrgid(i32 %33), !dbg !990
  store %struct.group* %34, %struct.group** %4, align 8, !dbg !991
  %35 = load %struct.group*, %struct.group** %4, align 8, !dbg !992
  %36 = icmp ne %struct.group* %35, null, !dbg !992
  %37 = load i32, i32* @x.13
  %38 = load i32, i32* @y.14
  %39 = sub i32 %37, 1
  %40 = mul i32 %37, %39
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %42, %43
  br i1 %44, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %36, label %45, label %66, !dbg !994

45:                                               ; preds = %originalBBpart2
  %46 = load i32, i32* @x.13
  %47 = load i32, i32* @y.14
  %48 = sub i32 %46, 1
  %49 = mul i32 %46, %48
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %47, 10
  %53 = or i1 %51, %52
  br i1 %53, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %45, %originalBB1alteredBB
  %54 = load %struct.group*, %struct.group** %4, align 8, !dbg !995
  %55 = getelementptr inbounds %struct.group, %struct.group* %54, i32 0, i32 0, !dbg !996
  %56 = load i8*, i8** %55, align 8, !dbg !996
  %57 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.53, i64 0, i64 0), i8* %56), !dbg !997
  %58 = load i32, i32* @x.13
  %59 = load i32, i32* @y.14
  %60 = sub i32 %58, 1
  %61 = mul i32 %58, %60
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %59, 10
  %65 = or i1 %63, %64
  br i1 %65, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %66, !dbg !997

66:                                               ; preds = %originalBBpart24, %originalBBpart2
  %67 = load i32, i32* @x.13
  %68 = load i32, i32* @y.14
  %69 = sub i32 %67, 1
  %70 = mul i32 %67, %69
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %68, 10
  %74 = or i1 %72, %73
  br i1 %74, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %66, %originalBB6alteredBB
  %75 = load i32, i32* @euid, align 4, !dbg !998
  %76 = load i32, i32* @ruid, align 4, !dbg !1000
  %77 = icmp ne i32 %75, %76, !dbg !1001
  %78 = load i32, i32* @x.13
  %79 = load i32, i32* @y.14
  %80 = sub i32 %78, 1
  %81 = mul i32 %78, %80
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %79, 10
  %85 = or i1 %83, %84
  br i1 %85, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %77, label %86, label %116, !dbg !1002

86:                                               ; preds = %originalBBpart28
  %87 = call i8* @gettext(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.55, i64 0, i64 0)) #10, !dbg !1003
  %88 = call i8* @uidtostr_ptr(i32* @euid), !dbg !1005
  %89 = call i32 (i8*, ...) @printf(i8* %87, i8* %88), !dbg !1006
  %90 = load i32, i32* @euid, align 4, !dbg !1007
  %91 = call %struct.passwd* @getpwuid(i32 %90), !dbg !1008
  store %struct.passwd* %91, %struct.passwd** %3, align 8, !dbg !1009
  %92 = load %struct.passwd*, %struct.passwd** %3, align 8, !dbg !1010
  %93 = icmp ne %struct.passwd* %92, null, !dbg !1010
  br i1 %93, label %94, label %99, !dbg !1012

94:                                               ; preds = %86
  %95 = load %struct.passwd*, %struct.passwd** %3, align 8, !dbg !1013
  %96 = getelementptr inbounds %struct.passwd, %struct.passwd* %95, i32 0, i32 0, !dbg !1014
  %97 = load i8*, i8** %96, align 8, !dbg !1014
  %98 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.53, i64 0, i64 0), i8* %97), !dbg !1015
  br label %99, !dbg !1015

99:                                               ; preds = %94, %86
  %100 = load i32, i32* @x.13
  %101 = load i32, i32* @y.14
  %102 = sub i32 %100, 1
  %103 = mul i32 %100, %102
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %101, 10
  %107 = or i1 %105, %106
  br i1 %107, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %99, %originalBB10alteredBB
  %108 = load i32, i32* @x.13
  %109 = load i32, i32* @y.14
  %110 = sub i32 %108, 1
  %111 = mul i32 %108, %110
  %112 = urem i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %109, 10
  %115 = or i1 %113, %114
  br i1 %115, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %116, !dbg !1016

116:                                              ; preds = %originalBBpart212, %originalBBpart28
  %117 = load i32, i32* @x.13
  %118 = load i32, i32* @y.14
  %119 = sub i32 %117, 1
  %120 = mul i32 %117, %119
  %121 = urem i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = icmp slt i32 %118, 10
  %124 = or i1 %122, %123
  br i1 %124, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %116, %originalBB14alteredBB
  %125 = load i32, i32* @egid, align 4, !dbg !1017
  %126 = load i32, i32* @rgid, align 4, !dbg !1019
  %127 = icmp ne i32 %125, %126, !dbg !1020
  %128 = load i32, i32* @x.13
  %129 = load i32, i32* @y.14
  %130 = sub i32 %128, 1
  %131 = mul i32 %128, %130
  %132 = urem i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = icmp slt i32 %129, 10
  %135 = or i1 %133, %134
  br i1 %135, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %127, label %136, label %166, !dbg !1021

136:                                              ; preds = %originalBBpart216
  %137 = call i8* @gettext(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.56, i64 0, i64 0)) #10, !dbg !1022
  %138 = call i8* @gidtostr_ptr(i32* @egid), !dbg !1024
  %139 = call i32 (i8*, ...) @printf(i8* %137, i8* %138), !dbg !1025
  %140 = load i32, i32* @egid, align 4, !dbg !1026
  %141 = call %struct.group* @getgrgid(i32 %140), !dbg !1027
  store %struct.group* %141, %struct.group** %4, align 8, !dbg !1028
  %142 = load %struct.group*, %struct.group** %4, align 8, !dbg !1029
  %143 = icmp ne %struct.group* %142, null, !dbg !1029
  br i1 %143, label %144, label %165, !dbg !1031

144:                                              ; preds = %136
  %145 = load i32, i32* @x.13
  %146 = load i32, i32* @y.14
  %147 = sub i32 %145, 1
  %148 = mul i32 %145, %147
  %149 = urem i32 %148, 2
  %150 = icmp eq i32 %149, 0
  %151 = icmp slt i32 %146, 10
  %152 = or i1 %150, %151
  br i1 %152, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %144, %originalBB18alteredBB
  %153 = load %struct.group*, %struct.group** %4, align 8, !dbg !1032
  %154 = getelementptr inbounds %struct.group, %struct.group* %153, i32 0, i32 0, !dbg !1033
  %155 = load i8*, i8** %154, align 8, !dbg !1033
  %156 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.53, i64 0, i64 0), i8* %155), !dbg !1034
  %157 = load i32, i32* @x.13
  %158 = load i32, i32* @y.14
  %159 = sub i32 %157, 1
  %160 = mul i32 %157, %159
  %161 = urem i32 %160, 2
  %162 = icmp eq i32 %161, 0
  %163 = icmp slt i32 %158, 10
  %164 = or i1 %162, %163
  br i1 %164, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %165, !dbg !1034

165:                                              ; preds = %originalBBpart220, %136
  br label %166, !dbg !1035

166:                                              ; preds = %165, %originalBBpart216
  call void @llvm.dbg.declare(metadata i32** %5, metadata !1036, metadata !DIExpression()), !dbg !1038
  call void @llvm.dbg.declare(metadata i32* %6, metadata !1039, metadata !DIExpression()), !dbg !1040
  %167 = load i8*, i8** %2, align 8, !dbg !1041
  %168 = icmp ne i8* %167, null, !dbg !1041
  br i1 %168, label %169, label %195, !dbg !1043

169:                                              ; preds = %166
  %170 = load %struct.passwd*, %struct.passwd** %3, align 8, !dbg !1044
  %171 = icmp ne %struct.passwd* %170, null, !dbg !1044
  br i1 %171, label %172, label %176, !dbg !1044

172:                                              ; preds = %169
  %173 = load %struct.passwd*, %struct.passwd** %3, align 8, !dbg !1045
  %174 = getelementptr inbounds %struct.passwd, %struct.passwd* %173, i32 0, i32 3, !dbg !1046
  %175 = load i32, i32* %174, align 4, !dbg !1046
  br label %177, !dbg !1044

176:                                              ; preds = %169
  br label %177, !dbg !1044

177:                                              ; preds = %176, %172
  %178 = phi i32 [ %175, %172 ], [ -1, %176 ], !dbg !1044
  %179 = load i32, i32* @x.13
  %180 = load i32, i32* @y.14
  %181 = sub i32 %179, 1
  %182 = mul i32 %179, %181
  %183 = urem i32 %182, 2
  %184 = icmp eq i32 %183, 0
  %185 = icmp slt i32 %180, 10
  %186 = or i1 %184, %185
  br i1 %186, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %177, %originalBB22alteredBB
  store i32 %178, i32* %6, align 4, !dbg !1047
  %187 = load i32, i32* @x.13
  %188 = load i32, i32* @y.14
  %189 = sub i32 %187, 1
  %190 = mul i32 %187, %189
  %191 = urem i32 %190, 2
  %192 = icmp eq i32 %191, 0
  %193 = icmp slt i32 %188, 10
  %194 = or i1 %192, %193
  br i1 %194, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br label %197, !dbg !1048

195:                                              ; preds = %166
  %196 = load i32, i32* @egid, align 4, !dbg !1049
  store i32 %196, i32* %6, align 4, !dbg !1050
  br label %197

197:                                              ; preds = %195, %originalBBpart224
  call void @llvm.dbg.declare(metadata i32* %7, metadata !1051, metadata !DIExpression()), !dbg !1052
  %198 = load i32, i32* @x.13
  %199 = load i32, i32* @y.14
  %200 = sub i32 %198, 1
  %201 = mul i32 %198, %200
  %202 = urem i32 %201, 2
  %203 = icmp eq i32 %202, 0
  %204 = icmp slt i32 %199, 10
  %205 = or i1 %203, %204
  br i1 %205, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %197, %originalBB26alteredBB
  %206 = load i8*, i8** %2, align 8, !dbg !1053
  %207 = load i32, i32* %6, align 4, !dbg !1054
  %208 = call i32 @xgetgroups(i8* %206, i32 %207, i32** %5), !dbg !1055
  store i32 %208, i32* %7, align 4, !dbg !1052
  %209 = load i32, i32* %7, align 4, !dbg !1056
  %210 = icmp slt i32 %209, 0, !dbg !1058
  %211 = load i32, i32* @x.13
  %212 = load i32, i32* @y.14
  %213 = sub i32 %211, 1
  %214 = mul i32 %211, %213
  %215 = urem i32 %214, 2
  %216 = icmp eq i32 %215, 0
  %217 = icmp slt i32 %212, 10
  %218 = or i1 %216, %217
  br i1 %218, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br i1 %210, label %219, label %287, !dbg !1059

219:                                              ; preds = %originalBBpart228
  %220 = load i32, i32* @x.13
  %221 = load i32, i32* @y.14
  %222 = sub i32 %220, 1
  %223 = mul i32 %220, %222
  %224 = urem i32 %223, 2
  %225 = icmp eq i32 %224, 0
  %226 = icmp slt i32 %221, 10
  %227 = or i1 %225, %226
  br i1 %227, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %219, %originalBB30alteredBB
  %228 = load i8*, i8** %2, align 8, !dbg !1060
  %229 = icmp ne i8* %228, null, !dbg !1060
  %230 = load i32, i32* @x.13
  %231 = load i32, i32* @y.14
  %232 = sub i32 %230, 1
  %233 = mul i32 %230, %232
  %234 = urem i32 %233, 2
  %235 = icmp eq i32 %234, 0
  %236 = icmp slt i32 %231, 10
  %237 = or i1 %235, %236
  br i1 %237, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br i1 %229, label %238, label %260, !dbg !1063

238:                                              ; preds = %originalBBpart232
  %239 = load i32, i32* @x.13
  %240 = load i32, i32* @y.14
  %241 = sub i32 %239, 1
  %242 = mul i32 %239, %241
  %243 = urem i32 %242, 2
  %244 = icmp eq i32 %243, 0
  %245 = icmp slt i32 %240, 10
  %246 = or i1 %244, %245
  br i1 %246, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %238, %originalBB34alteredBB
  %247 = call i32* @__errno_location() #15, !dbg !1064
  %248 = load i32, i32* %247, align 4, !dbg !1064
  %249 = call i8* @gettext(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.57, i64 0, i64 0)) #10, !dbg !1065
  %250 = load i8*, i8** %2, align 8, !dbg !1066
  %251 = call i8* @quote(i8* %250), !dbg !1067
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %248, i8* %249, i8* %251), !dbg !1068
  %252 = load i32, i32* @x.13
  %253 = load i32, i32* @y.14
  %254 = sub i32 %252, 1
  %255 = mul i32 %252, %254
  %256 = urem i32 %255, 2
  %257 = icmp eq i32 %256, 0
  %258 = icmp slt i32 %253, 10
  %259 = or i1 %257, %258
  br i1 %259, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  br label %264, !dbg !1068

260:                                              ; preds = %originalBBpart232
  %261 = call i32* @__errno_location() #15, !dbg !1069
  %262 = load i32, i32* %261, align 4, !dbg !1069
  %263 = call i8* @gettext(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.58, i64 0, i64 0)) #10, !dbg !1070
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %262, i8* %263), !dbg !1071
  br label %264

264:                                              ; preds = %260, %originalBBpart236
  %265 = load i32, i32* @x.13
  %266 = load i32, i32* @y.14
  %267 = sub i32 %265, 1
  %268 = mul i32 %265, %267
  %269 = urem i32 %268, 2
  %270 = icmp eq i32 %269, 0
  %271 = icmp slt i32 %266, 10
  %272 = or i1 %270, %271
  br i1 %272, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %264, %originalBB38alteredBB
  %273 = load i8, i8* @ok, align 1, !dbg !1072
  %274 = trunc i8 %273 to i1, !dbg !1072
  %275 = zext i1 %274 to i32, !dbg !1072
  %276 = and i32 %275, 0, !dbg !1072
  %277 = icmp ne i32 %276, 0, !dbg !1072
  %278 = zext i1 %277 to i8, !dbg !1072
  store i8 %278, i8* @ok, align 1, !dbg !1072
  %279 = load i32, i32* @x.13
  %280 = load i32, i32* @y.14
  %281 = sub i32 %279, 1
  %282 = mul i32 %279, %281
  %283 = urem i32 %282, 2
  %284 = icmp eq i32 %283, 0
  %285 = icmp slt i32 %280, 10
  %286 = or i1 %284, %285
  br i1 %286, label %originalBBpart243, label %originalBB38alteredBB

originalBBpart243:                                ; preds = %originalBB38
  br label %434, !dbg !1073

287:                                              ; preds = %originalBBpart228
  %288 = load i32, i32* @x.13
  %289 = load i32, i32* @y.14
  %290 = sub i32 %288, 1
  %291 = mul i32 %288, %290
  %292 = urem i32 %291, 2
  %293 = icmp eq i32 %292, 0
  %294 = icmp slt i32 %289, 10
  %295 = or i1 %293, %294
  br i1 %295, label %originalBB45, label %originalBB45alteredBB

originalBB45:                                     ; preds = %287, %originalBB45alteredBB
  %296 = load i32, i32* %7, align 4, !dbg !1074
  %297 = icmp sgt i32 %296, 0, !dbg !1076
  %298 = load i32, i32* @x.13
  %299 = load i32, i32* @y.14
  %300 = sub i32 %298, 1
  %301 = mul i32 %298, %300
  %302 = urem i32 %301, 2
  %303 = icmp eq i32 %302, 0
  %304 = icmp slt i32 %299, 10
  %305 = or i1 %303, %304
  br i1 %305, label %originalBBpart247, label %originalBB45alteredBB

originalBBpart247:                                ; preds = %originalBB45
  br i1 %297, label %306, label %310, !dbg !1077

306:                                              ; preds = %originalBBpart247
  %307 = call i8* @gettext(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.59, i64 0, i64 0)) #10, !dbg !1078
  %308 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1078
  %309 = call i32 @fputs_unlocked(i8* %307, %struct._IO_FILE* %308), !dbg !1078
  br label %310, !dbg !1078

310:                                              ; preds = %306, %originalBBpart247
  call void @llvm.dbg.declare(metadata i32* %8, metadata !1079, metadata !DIExpression()), !dbg !1081
  %311 = load i32, i32* @x.13
  %312 = load i32, i32* @y.14
  %313 = sub i32 %311, 1
  %314 = mul i32 %311, %313
  %315 = urem i32 %314, 2
  %316 = icmp eq i32 %315, 0
  %317 = icmp slt i32 %312, 10
  %318 = or i1 %316, %317
  br i1 %318, label %originalBB49, label %originalBB49alteredBB

originalBB49:                                     ; preds = %310, %originalBB49alteredBB
  store i32 0, i32* %8, align 4, !dbg !1081
  %319 = load i32, i32* @x.13
  %320 = load i32, i32* @y.14
  %321 = sub i32 %319, 1
  %322 = mul i32 %319, %321
  %323 = urem i32 %322, 2
  %324 = icmp eq i32 %323, 0
  %325 = icmp slt i32 %320, 10
  %326 = or i1 %324, %325
  br i1 %326, label %originalBBpart251, label %originalBB49alteredBB

originalBBpart251:                                ; preds = %originalBB49
  br label %327, !dbg !1082

327:                                              ; preds = %originalBBpart264, %originalBBpart251
  %328 = load i32, i32* %8, align 4, !dbg !1083
  %329 = load i32, i32* %7, align 4, !dbg !1085
  %330 = icmp slt i32 %328, %329, !dbg !1086
  br i1 %330, label %331, label %409, !dbg !1087

331:                                              ; preds = %327
  %332 = load i32, i32* %8, align 4, !dbg !1088
  %333 = icmp sgt i32 %332, 0, !dbg !1091
  br i1 %333, label %334, label %336, !dbg !1092

334:                                              ; preds = %331
  %335 = call i32 @putchar_unlocked(i32 44), !dbg !1093
  br label %336, !dbg !1093

336:                                              ; preds = %334, %331
  %337 = load i32, i32* @x.13
  %338 = load i32, i32* @y.14
  %339 = sub i32 %337, 1
  %340 = mul i32 %337, %339
  %341 = urem i32 %340, 2
  %342 = icmp eq i32 %341, 0
  %343 = icmp slt i32 %338, 10
  %344 = or i1 %342, %343
  br i1 %344, label %originalBB53, label %originalBB53alteredBB

originalBB53:                                     ; preds = %336, %originalBB53alteredBB
  %345 = load i32*, i32** %5, align 8, !dbg !1094
  %346 = load i32, i32* %8, align 4, !dbg !1094
  %347 = sext i32 %346 to i64, !dbg !1094
  %348 = getelementptr inbounds i32, i32* %345, i64 %347, !dbg !1094
  %349 = call i8* @gidtostr_ptr(i32* %348), !dbg !1094
  %350 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1094
  %351 = call i32 @fputs_unlocked(i8* %349, %struct._IO_FILE* %350), !dbg !1094
  %352 = load i32*, i32** %5, align 8, !dbg !1095
  %353 = load i32, i32* %8, align 4, !dbg !1096
  %354 = sext i32 %353 to i64, !dbg !1095
  %355 = getelementptr inbounds i32, i32* %352, i64 %354, !dbg !1095
  %356 = load i32, i32* %355, align 4, !dbg !1095
  %357 = call %struct.group* @getgrgid(i32 %356), !dbg !1097
  store %struct.group* %357, %struct.group** %4, align 8, !dbg !1098
  %358 = load %struct.group*, %struct.group** %4, align 8, !dbg !1099
  %359 = icmp ne %struct.group* %358, null, !dbg !1099
  %360 = load i32, i32* @x.13
  %361 = load i32, i32* @y.14
  %362 = sub i32 %360, 1
  %363 = mul i32 %360, %362
  %364 = urem i32 %363, 2
  %365 = icmp eq i32 %364, 0
  %366 = icmp slt i32 %361, 10
  %367 = or i1 %365, %366
  br i1 %367, label %originalBBpart255, label %originalBB53alteredBB

originalBBpart255:                                ; preds = %originalBB53
  br i1 %359, label %368, label %389, !dbg !1101

368:                                              ; preds = %originalBBpart255
  %369 = load i32, i32* @x.13
  %370 = load i32, i32* @y.14
  %371 = sub i32 %369, 1
  %372 = mul i32 %369, %371
  %373 = urem i32 %372, 2
  %374 = icmp eq i32 %373, 0
  %375 = icmp slt i32 %370, 10
  %376 = or i1 %374, %375
  br i1 %376, label %originalBB57, label %originalBB57alteredBB

originalBB57:                                     ; preds = %368, %originalBB57alteredBB
  %377 = load %struct.group*, %struct.group** %4, align 8, !dbg !1102
  %378 = getelementptr inbounds %struct.group, %struct.group* %377, i32 0, i32 0, !dbg !1103
  %379 = load i8*, i8** %378, align 8, !dbg !1103
  %380 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.53, i64 0, i64 0), i8* %379), !dbg !1104
  %381 = load i32, i32* @x.13
  %382 = load i32, i32* @y.14
  %383 = sub i32 %381, 1
  %384 = mul i32 %381, %383
  %385 = urem i32 %384, 2
  %386 = icmp eq i32 %385, 0
  %387 = icmp slt i32 %382, 10
  %388 = or i1 %386, %387
  br i1 %388, label %originalBBpart259, label %originalBB57alteredBB

originalBBpart259:                                ; preds = %originalBB57
  br label %389, !dbg !1104

389:                                              ; preds = %originalBBpart259, %originalBBpart255
  br label %390, !dbg !1105

390:                                              ; preds = %389
  %391 = load i32, i32* @x.13
  %392 = load i32, i32* @y.14
  %393 = sub i32 %391, 1
  %394 = mul i32 %391, %393
  %395 = urem i32 %394, 2
  %396 = icmp eq i32 %395, 0
  %397 = icmp slt i32 %392, 10
  %398 = or i1 %396, %397
  br i1 %398, label %originalBB61, label %originalBB61alteredBB

originalBB61:                                     ; preds = %390, %originalBB61alteredBB
  %399 = load i32, i32* %8, align 4, !dbg !1106
  %400 = add nsw i32 %399, 1, !dbg !1106
  store i32 %400, i32* %8, align 4, !dbg !1106
  %401 = load i32, i32* @x.13
  %402 = load i32, i32* @y.14
  %403 = sub i32 %401, 1
  %404 = mul i32 %401, %403
  %405 = urem i32 %404, 2
  %406 = icmp eq i32 %405, 0
  %407 = icmp slt i32 %402, 10
  %408 = or i1 %406, %407
  br i1 %408, label %originalBBpart264, label %originalBB61alteredBB

originalBBpart264:                                ; preds = %originalBB61
  br label %327, !dbg !1107, !llvm.loop !1108

409:                                              ; preds = %327
  %410 = load i32, i32* @x.13
  %411 = load i32, i32* @y.14
  %412 = sub i32 %410, 1
  %413 = mul i32 %410, %412
  %414 = urem i32 %413, 2
  %415 = icmp eq i32 %414, 0
  %416 = icmp slt i32 %411, 10
  %417 = or i1 %415, %416
  br i1 %417, label %originalBB66, label %originalBB66alteredBB

originalBB66:                                     ; preds = %409, %originalBB66alteredBB
  %418 = load i32*, i32** %5, align 8, !dbg !1110
  %419 = bitcast i32* %418 to i8*, !dbg !1110
  call void @free(i8* %419) #10, !dbg !1111
  %420 = load i8*, i8** @context, align 8, !dbg !1112
  %421 = icmp ne i8* %420, null, !dbg !1112
  %422 = load i32, i32* @x.13
  %423 = load i32, i32* @y.14
  %424 = sub i32 %422, 1
  %425 = mul i32 %422, %424
  %426 = urem i32 %425, 2
  %427 = icmp eq i32 %426, 0
  %428 = icmp slt i32 %423, 10
  %429 = or i1 %427, %428
  br i1 %429, label %originalBBpart268, label %originalBB66alteredBB

originalBBpart268:                                ; preds = %originalBB66
  br i1 %421, label %430, label %434, !dbg !1114

430:                                              ; preds = %originalBBpart268
  %431 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.60, i64 0, i64 0)) #10, !dbg !1115
  %432 = load i8*, i8** @context, align 8, !dbg !1116
  %433 = call i32 (i8*, ...) @printf(i8* %431, i8* %432), !dbg !1117
  br label %434, !dbg !1117

434:                                              ; preds = %430, %originalBBpart268, %originalBBpart243
  %435 = load i32, i32* @x.13
  %436 = load i32, i32* @y.14
  %437 = sub i32 %435, 1
  %438 = mul i32 %435, %437
  %439 = urem i32 %438, 2
  %440 = icmp eq i32 %439, 0
  %441 = icmp slt i32 %436, 10
  %442 = or i1 %440, %441
  br i1 %442, label %originalBB70, label %originalBB70alteredBB

originalBB70:                                     ; preds = %434, %originalBB70alteredBB
  %443 = load i32, i32* @x.13
  %444 = load i32, i32* @y.14
  %445 = sub i32 %443, 1
  %446 = mul i32 %443, %445
  %447 = urem i32 %446, 2
  %448 = icmp eq i32 %447, 0
  %449 = icmp slt i32 %444, 10
  %450 = or i1 %448, %449
  br i1 %450, label %originalBBpart272, label %originalBB70alteredBB

originalBBpart272:                                ; preds = %originalBB70
  ret void, !dbg !1118

originalBBalteredBB:                              ; preds = %originalBB, %21
  %451 = call i8* @gettext(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.54, i64 0, i64 0)) #10, !dbg !986
  %452 = call i8* @gidtostr_ptr(i32* @rgid), !dbg !987
  %453 = call i32 (i8*, ...) @printf(i8* %451, i8* %452), !dbg !988
  %454 = load i32, i32* @rgid, align 4, !dbg !989
  %455 = call %struct.group* @getgrgid(i32 %454), !dbg !990
  store %struct.group* %455, %struct.group** %4, align 8, !dbg !991
  %456 = load %struct.group*, %struct.group** %4, align 8, !dbg !992
  %457 = icmp ne %struct.group* %456, null, !dbg !992
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %45
  %458 = load %struct.group*, %struct.group** %4, align 8, !dbg !995
  %459 = getelementptr inbounds %struct.group, %struct.group* %458, i32 0, i32 0, !dbg !996
  %460 = load i8*, i8** %459, align 8, !dbg !996
  %461 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.53, i64 0, i64 0), i8* %460), !dbg !997
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %66
  %462 = load i32, i32* @euid, align 4, !dbg !998
  %463 = load i32, i32* @ruid, align 4, !dbg !1000
  %464 = icmp ne i32 %462, %463, !dbg !1001
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %99
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %116
  %465 = load i32, i32* @egid, align 4, !dbg !1017
  %466 = load i32, i32* @rgid, align 4, !dbg !1019
  %467 = icmp ne i32 %465, %466, !dbg !1020
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %144
  %468 = load %struct.group*, %struct.group** %4, align 8, !dbg !1032
  %469 = getelementptr inbounds %struct.group, %struct.group* %468, i32 0, i32 0, !dbg !1033
  %470 = load i8*, i8** %469, align 8, !dbg !1033
  %471 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.53, i64 0, i64 0), i8* %470), !dbg !1034
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %177
  store i32 %178, i32* %6, align 4, !dbg !1047
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %197
  %472 = load i8*, i8** %2, align 8, !dbg !1053
  %473 = load i32, i32* %6, align 4, !dbg !1054
  %474 = call i32 @xgetgroups(i8* %472, i32 %473, i32** %5), !dbg !1055
  store i32 %474, i32* %7, align 4, !dbg !1052
  %475 = load i32, i32* %7, align 4, !dbg !1056
  %476 = icmp slt i32 %475, 0, !dbg !1058
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %219
  %477 = load i8*, i8** %2, align 8, !dbg !1060
  %478 = icmp ne i8* %477, null, !dbg !1060
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %238
  %479 = call i32* @__errno_location() #15, !dbg !1064
  %480 = load i32, i32* %479, align 4, !dbg !1064
  %481 = call i8* @gettext(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.57, i64 0, i64 0)) #10, !dbg !1065
  %482 = load i8*, i8** %2, align 8, !dbg !1066
  %483 = call i8* @quote(i8* %482), !dbg !1067
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %480, i8* %481, i8* %483), !dbg !1068
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %264
  %484 = load i8, i8* @ok, align 1, !dbg !1072
  %485 = trunc i8 %484 to i1, !dbg !1072
  %486 = zext i1 %485 to i32, !dbg !1072
  %_ = shl i32 %486, 0
  %_39 = shl i32 %486, 0
  %_40 = shl i32 %486, 0
  %_41 = sub i32 %486, 0
  %gen = mul i32 %_41, 0
  %487 = and i32 %486, 0, !dbg !1072
  %488 = icmp ne i32 %487, 0, !dbg !1072
  %489 = zext i1 %488 to i8, !dbg !1072
  store i8 %489, i8* @ok, align 1, !dbg !1072
  br label %originalBB38

originalBB45alteredBB:                            ; preds = %originalBB45, %287
  %490 = load i32, i32* %7, align 4, !dbg !1074
  %491 = icmp sgt i32 %490, 0, !dbg !1076
  br label %originalBB45

originalBB49alteredBB:                            ; preds = %originalBB49, %310
  store i32 0, i32* %8, align 4, !dbg !1081
  br label %originalBB49

originalBB53alteredBB:                            ; preds = %originalBB53, %336
  %492 = load i32*, i32** %5, align 8, !dbg !1094
  %493 = load i32, i32* %8, align 4, !dbg !1094
  %494 = sext i32 %493 to i64, !dbg !1094
  %495 = getelementptr inbounds i32, i32* %492, i64 %494, !dbg !1094
  %496 = call i8* @gidtostr_ptr(i32* %495), !dbg !1094
  %497 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1094
  %498 = call i32 @fputs_unlocked(i8* %496, %struct._IO_FILE* %497), !dbg !1094
  %499 = load i32*, i32** %5, align 8, !dbg !1095
  %500 = load i32, i32* %8, align 4, !dbg !1096
  %501 = sext i32 %500 to i64, !dbg !1095
  %502 = getelementptr inbounds i32, i32* %499, i64 %501, !dbg !1095
  %503 = load i32, i32* %502, align 4, !dbg !1095
  %504 = call %struct.group* @getgrgid(i32 %503), !dbg !1097
  store %struct.group* %504, %struct.group** %4, align 8, !dbg !1098
  %505 = load %struct.group*, %struct.group** %4, align 8, !dbg !1099
  %506 = icmp ne %struct.group* %505, null, !dbg !1099
  br label %originalBB53

originalBB57alteredBB:                            ; preds = %originalBB57, %368
  %507 = load %struct.group*, %struct.group** %4, align 8, !dbg !1102
  %508 = getelementptr inbounds %struct.group, %struct.group* %507, i32 0, i32 0, !dbg !1103
  %509 = load i8*, i8** %508, align 8, !dbg !1103
  %510 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.53, i64 0, i64 0), i8* %509), !dbg !1104
  br label %originalBB57

originalBB61alteredBB:                            ; preds = %originalBB61, %390
  %511 = load i32, i32* %8, align 4, !dbg !1106
  %_62 = shl i32 %511, 1
  %512 = add nsw i32 %511, 1, !dbg !1106
  store i32 %512, i32* %8, align 4, !dbg !1106
  br label %originalBB61

originalBB66alteredBB:                            ; preds = %originalBB66, %409
  %513 = load i32*, i32** %5, align 8, !dbg !1110
  %514 = bitcast i32* %513 to i8*, !dbg !1110
  call void @free(i8* %514) #10, !dbg !1111
  %515 = load i8*, i8** @context, align 8, !dbg !1112
  %516 = icmp ne i8* %515, null, !dbg !1112
  br label %originalBB66

originalBB70alteredBB:                            ; preds = %originalBB70, %434
  br label %originalBB70
}

declare dso_local i32 @putchar_unlocked(i32) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @uidtostr_ptr(i32*) #4 !dbg !48 {
  %2 = alloca i32*, align 8
  store i32* %0, i32** %2, align 8
  call void @llvm.dbg.declare(metadata i32** %2, metadata !1119, metadata !DIExpression()), !dbg !1120
  %3 = load i32*, i32** %2, align 8, !dbg !1121
  %4 = load i32, i32* %3, align 4, !dbg !1122
  %5 = zext i32 %4 to i64, !dbg !1122
  %6 = call i8* @umaxtostr(i64 %5, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @uidtostr_ptr.buf, i64 0, i64 0)), !dbg !1123
  ret i8* %6, !dbg !1124
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @gidtostr_ptr(i32*) #4 !dbg !58 {
  %2 = alloca i32*, align 8
  store i32* %0, i32** %2, align 8
  call void @llvm.dbg.declare(metadata i32** %2, metadata !1125, metadata !DIExpression()), !dbg !1126
  %3 = load i32*, i32** %2, align 8, !dbg !1127
  %4 = load i32, i32* %3, align 4, !dbg !1128
  %5 = zext i32 %4 to i64, !dbg !1128
  %6 = call i8* @umaxtostr(i64 %5, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @gidtostr_ptr.buf, i64 0, i64 0)), !dbg !1129
  ret i8* %6, !dbg !1130
}

declare dso_local %struct.group* @getgrgid(i32) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @print_group_list(i8*, i32, i32, i32, i1 zeroext, i8 signext) #4 !dbg !1131 {
  %7 = alloca i1, align 1
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i8, align 1
  %13 = alloca i8, align 1
  %14 = alloca i8, align 1
  %15 = alloca %struct.passwd*, align 8
  %16 = alloca i32*, align 8
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  store i8* %0, i8** %8, align 8
  call void @llvm.dbg.declare(metadata i8** %8, metadata !1134, metadata !DIExpression()), !dbg !1135
  store i32 %1, i32* %9, align 4
  call void @llvm.dbg.declare(metadata i32* %9, metadata !1136, metadata !DIExpression()), !dbg !1137
  store i32 %2, i32* %10, align 4
  call void @llvm.dbg.declare(metadata i32* %10, metadata !1138, metadata !DIExpression()), !dbg !1139
  store i32 %3, i32* %11, align 4
  call void @llvm.dbg.declare(metadata i32* %11, metadata !1140, metadata !DIExpression()), !dbg !1141
  %19 = zext i1 %4 to i8
  store i8 %19, i8* %12, align 1
  call void @llvm.dbg.declare(metadata i8* %12, metadata !1142, metadata !DIExpression()), !dbg !1143
  store i8 %5, i8* %13, align 1
  call void @llvm.dbg.declare(metadata i8* %13, metadata !1144, metadata !DIExpression()), !dbg !1145
  call void @llvm.dbg.declare(metadata i8* %14, metadata !1146, metadata !DIExpression()), !dbg !1147
  store i8 1, i8* %14, align 1, !dbg !1147
  call void @llvm.dbg.declare(metadata %struct.passwd** %15, metadata !1148, metadata !DIExpression()), !dbg !1159
  store %struct.passwd* null, %struct.passwd** %15, align 8, !dbg !1159
  %20 = load i8*, i8** %8, align 8, !dbg !1160
  %21 = icmp ne i8* %20, null, !dbg !1160
  br i1 %21, label %22, label %45, !dbg !1162

22:                                               ; preds = %6
  %23 = load i32, i32* %9, align 4, !dbg !1163
  %24 = call %struct.passwd* @getpwuid(i32 %23), !dbg !1165
  store %struct.passwd* %24, %struct.passwd** %15, align 8, !dbg !1166
  %25 = load %struct.passwd*, %struct.passwd** %15, align 8, !dbg !1167
  %26 = icmp eq %struct.passwd* %25, null, !dbg !1169
  br i1 %26, label %27, label %28, !dbg !1170

27:                                               ; preds = %22
  store i8 0, i8* %14, align 1, !dbg !1171
  br label %28, !dbg !1172

28:                                               ; preds = %27, %22
  %29 = load i32, i32* @x.19
  %30 = load i32, i32* @y.20
  %31 = sub i32 %29, 1
  %32 = mul i32 %29, %31
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %34, %35
  br i1 %36, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %28, %originalBBalteredBB
  %37 = load i32, i32* @x.19
  %38 = load i32, i32* @y.20
  %39 = sub i32 %37, 1
  %40 = mul i32 %37, %39
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %42, %43
  br i1 %44, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %45, !dbg !1173

45:                                               ; preds = %originalBBpart2, %6
  %46 = load i32, i32* %10, align 4, !dbg !1174
  %47 = load i8, i8* %12, align 1, !dbg !1176
  %48 = trunc i8 %47 to i1, !dbg !1176
  %49 = call zeroext i1 @print_group(i32 %46, i1 zeroext %48), !dbg !1177
  br i1 %49, label %51, label %50, !dbg !1178

50:                                               ; preds = %45
  store i8 0, i8* %14, align 1, !dbg !1179
  br label %51, !dbg !1180

51:                                               ; preds = %50, %45
  %52 = load i32, i32* @x.19
  %53 = load i32, i32* @y.20
  %54 = sub i32 %52, 1
  %55 = mul i32 %52, %54
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %53, 10
  %59 = or i1 %57, %58
  br i1 %59, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %51, %originalBB1alteredBB
  %60 = load i32, i32* %11, align 4, !dbg !1181
  %61 = load i32, i32* %10, align 4, !dbg !1183
  %62 = icmp ne i32 %60, %61, !dbg !1184
  %63 = load i32, i32* @x.19
  %64 = load i32, i32* @y.20
  %65 = sub i32 %63, 1
  %66 = mul i32 %63, %65
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %64, 10
  %70 = or i1 %68, %69
  br i1 %70, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %62, label %71, label %113, !dbg !1185

71:                                               ; preds = %originalBBpart24
  %72 = load i8, i8* %13, align 1, !dbg !1186
  %73 = sext i8 %72 to i32, !dbg !1186
  %74 = call i32 @putchar_unlocked(i32 %73), !dbg !1186
  %75 = load i32, i32* %11, align 4, !dbg !1188
  %76 = load i8, i8* %12, align 1, !dbg !1190
  %77 = trunc i8 %76 to i1, !dbg !1190
  %78 = call zeroext i1 @print_group(i32 %75, i1 zeroext %77), !dbg !1191
  br i1 %78, label %96, label %79, !dbg !1192

79:                                               ; preds = %71
  %80 = load i32, i32* @x.19
  %81 = load i32, i32* @y.20
  %82 = sub i32 %80, 1
  %83 = mul i32 %80, %82
  %84 = urem i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %81, 10
  %87 = or i1 %85, %86
  br i1 %87, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %79, %originalBB6alteredBB
  store i8 0, i8* %14, align 1, !dbg !1193
  %88 = load i32, i32* @x.19
  %89 = load i32, i32* @y.20
  %90 = sub i32 %88, 1
  %91 = mul i32 %88, %90
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %89, 10
  %95 = or i1 %93, %94
  br i1 %95, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %96, !dbg !1194

96:                                               ; preds = %originalBBpart28, %71
  %97 = load i32, i32* @x.19
  %98 = load i32, i32* @y.20
  %99 = sub i32 %97, 1
  %100 = mul i32 %97, %99
  %101 = urem i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %98, 10
  %104 = or i1 %102, %103
  br i1 %104, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %96, %originalBB10alteredBB
  %105 = load i32, i32* @x.19
  %106 = load i32, i32* @y.20
  %107 = sub i32 %105, 1
  %108 = mul i32 %105, %107
  %109 = urem i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %106, 10
  %112 = or i1 %110, %111
  br i1 %112, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %113, !dbg !1195

113:                                              ; preds = %originalBBpart212, %originalBBpart24
  call void @llvm.dbg.declare(metadata i32** %16, metadata !1196, metadata !DIExpression()), !dbg !1198
  call void @llvm.dbg.declare(metadata i32* %17, metadata !1199, metadata !DIExpression()), !dbg !1200
  %114 = load i8*, i8** %8, align 8, !dbg !1201
  %115 = load %struct.passwd*, %struct.passwd** %15, align 8, !dbg !1202
  %116 = icmp ne %struct.passwd* %115, null, !dbg !1202
  br i1 %116, label %117, label %137, !dbg !1202

117:                                              ; preds = %113
  %118 = load i32, i32* @x.19
  %119 = load i32, i32* @y.20
  %120 = sub i32 %118, 1
  %121 = mul i32 %118, %120
  %122 = urem i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = icmp slt i32 %119, 10
  %125 = or i1 %123, %124
  br i1 %125, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %117, %originalBB14alteredBB
  %126 = load %struct.passwd*, %struct.passwd** %15, align 8, !dbg !1203
  %127 = getelementptr inbounds %struct.passwd, %struct.passwd* %126, i32 0, i32 3, !dbg !1204
  %128 = load i32, i32* %127, align 4, !dbg !1204
  %129 = load i32, i32* @x.19
  %130 = load i32, i32* @y.20
  %131 = sub i32 %129, 1
  %132 = mul i32 %129, %131
  %133 = urem i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = icmp slt i32 %130, 10
  %136 = or i1 %134, %135
  br i1 %136, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %139, !dbg !1202

137:                                              ; preds = %113
  %138 = load i32, i32* %11, align 4, !dbg !1205
  br label %139, !dbg !1202

139:                                              ; preds = %137, %originalBBpart216
  %140 = phi i32 [ %128, %originalBBpart216 ], [ %138, %137 ], !dbg !1202
  %141 = call i32 @xgetgroups(i8* %114, i32 %140, i32** %16), !dbg !1206
  store i32 %141, i32* %17, align 4, !dbg !1200
  %142 = load i32, i32* %17, align 4, !dbg !1207
  %143 = icmp slt i32 %142, 0, !dbg !1209
  br i1 %143, label %144, label %206, !dbg !1210

144:                                              ; preds = %139
  %145 = load i32, i32* @x.19
  %146 = load i32, i32* @y.20
  %147 = sub i32 %145, 1
  %148 = mul i32 %145, %147
  %149 = urem i32 %148, 2
  %150 = icmp eq i32 %149, 0
  %151 = icmp slt i32 %146, 10
  %152 = or i1 %150, %151
  br i1 %152, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %144, %originalBB18alteredBB
  %153 = load i8*, i8** %8, align 8, !dbg !1211
  %154 = icmp ne i8* %153, null, !dbg !1211
  %155 = load i32, i32* @x.19
  %156 = load i32, i32* @y.20
  %157 = sub i32 %155, 1
  %158 = mul i32 %155, %157
  %159 = urem i32 %158, 2
  %160 = icmp eq i32 %159, 0
  %161 = icmp slt i32 %156, 10
  %162 = or i1 %160, %161
  br i1 %162, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br i1 %154, label %163, label %185, !dbg !1214

163:                                              ; preds = %originalBBpart220
  %164 = load i32, i32* @x.19
  %165 = load i32, i32* @y.20
  %166 = sub i32 %164, 1
  %167 = mul i32 %164, %166
  %168 = urem i32 %167, 2
  %169 = icmp eq i32 %168, 0
  %170 = icmp slt i32 %165, 10
  %171 = or i1 %169, %170
  br i1 %171, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %163, %originalBB22alteredBB
  %172 = call i32* @__errno_location() #15, !dbg !1215
  %173 = load i32, i32* %172, align 4, !dbg !1215
  %174 = call i8* @gettext(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.61, i64 0, i64 0)) #10, !dbg !1217
  %175 = load i8*, i8** %8, align 8, !dbg !1218
  %176 = call i8* @quote(i8* %175), !dbg !1219
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %173, i8* %174, i8* %176), !dbg !1220
  %177 = load i32, i32* @x.19
  %178 = load i32, i32* @y.20
  %179 = sub i32 %177, 1
  %180 = mul i32 %177, %179
  %181 = urem i32 %180, 2
  %182 = icmp eq i32 %181, 0
  %183 = icmp slt i32 %178, 10
  %184 = or i1 %182, %183
  br i1 %184, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br label %205, !dbg !1221

185:                                              ; preds = %originalBBpart220
  %186 = load i32, i32* @x.19
  %187 = load i32, i32* @y.20
  %188 = sub i32 %186, 1
  %189 = mul i32 %186, %188
  %190 = urem i32 %189, 2
  %191 = icmp eq i32 %190, 0
  %192 = icmp slt i32 %187, 10
  %193 = or i1 %191, %192
  br i1 %193, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %185, %originalBB26alteredBB
  %194 = call i32* @__errno_location() #15, !dbg !1222
  %195 = load i32, i32* %194, align 4, !dbg !1222
  %196 = call i8* @gettext(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1.62, i64 0, i64 0)) #10, !dbg !1224
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %195, i8* %196), !dbg !1225
  %197 = load i32, i32* @x.19
  %198 = load i32, i32* @y.20
  %199 = sub i32 %197, 1
  %200 = mul i32 %197, %199
  %201 = urem i32 %200, 2
  %202 = icmp eq i32 %201, 0
  %203 = icmp slt i32 %198, 10
  %204 = or i1 %202, %203
  br i1 %204, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br label %205

205:                                              ; preds = %originalBBpart228, %originalBBpart224
  store i1 false, i1* %7, align 1, !dbg !1226
  br label %298, !dbg !1226

206:                                              ; preds = %139
  call void @llvm.dbg.declare(metadata i32* %18, metadata !1227, metadata !DIExpression()), !dbg !1229
  store i32 0, i32* %18, align 4, !dbg !1229
  br label %207, !dbg !1230

207:                                              ; preds = %originalBBpart252, %206
  %208 = load i32, i32* %18, align 4, !dbg !1231
  %209 = load i32, i32* %17, align 4, !dbg !1233
  %210 = icmp slt i32 %208, %209, !dbg !1234
  br i1 %210, label %211, label %293, !dbg !1235

211:                                              ; preds = %207
  %212 = load i32*, i32** %16, align 8, !dbg !1236
  %213 = load i32, i32* %18, align 4, !dbg !1238
  %214 = sext i32 %213 to i64, !dbg !1236
  %215 = getelementptr inbounds i32, i32* %212, i64 %214, !dbg !1236
  %216 = load i32, i32* %215, align 4, !dbg !1236
  %217 = load i32, i32* %10, align 4, !dbg !1239
  %218 = icmp ne i32 %216, %217, !dbg !1240
  br i1 %218, label %219, label %273, !dbg !1241

219:                                              ; preds = %211
  %220 = load i32*, i32** %16, align 8, !dbg !1242
  %221 = load i32, i32* %18, align 4, !dbg !1243
  %222 = sext i32 %221 to i64, !dbg !1242
  %223 = getelementptr inbounds i32, i32* %220, i64 %222, !dbg !1242
  %224 = load i32, i32* %223, align 4, !dbg !1242
  %225 = load i32, i32* %11, align 4, !dbg !1244
  %226 = icmp ne i32 %224, %225, !dbg !1245
  br i1 %226, label %227, label %273, !dbg !1246

227:                                              ; preds = %219
  %228 = load i8, i8* %13, align 1, !dbg !1247
  %229 = sext i8 %228 to i32, !dbg !1247
  %230 = call i32 @putchar_unlocked(i32 %229), !dbg !1247
  %231 = load i32*, i32** %16, align 8, !dbg !1249
  %232 = load i32, i32* %18, align 4, !dbg !1251
  %233 = sext i32 %232 to i64, !dbg !1249
  %234 = getelementptr inbounds i32, i32* %231, i64 %233, !dbg !1249
  %235 = load i32, i32* %234, align 4, !dbg !1249
  %236 = load i8, i8* %12, align 1, !dbg !1252
  %237 = trunc i8 %236 to i1, !dbg !1252
  %238 = call zeroext i1 @print_group(i32 %235, i1 zeroext %237), !dbg !1253
  br i1 %238, label %256, label %239, !dbg !1254

239:                                              ; preds = %227
  %240 = load i32, i32* @x.19
  %241 = load i32, i32* @y.20
  %242 = sub i32 %240, 1
  %243 = mul i32 %240, %242
  %244 = urem i32 %243, 2
  %245 = icmp eq i32 %244, 0
  %246 = icmp slt i32 %241, 10
  %247 = or i1 %245, %246
  br i1 %247, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %239, %originalBB30alteredBB
  store i8 0, i8* %14, align 1, !dbg !1255
  %248 = load i32, i32* @x.19
  %249 = load i32, i32* @y.20
  %250 = sub i32 %248, 1
  %251 = mul i32 %248, %250
  %252 = urem i32 %251, 2
  %253 = icmp eq i32 %252, 0
  %254 = icmp slt i32 %249, 10
  %255 = or i1 %253, %254
  br i1 %255, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br label %256, !dbg !1256

256:                                              ; preds = %originalBBpart232, %227
  %257 = load i32, i32* @x.19
  %258 = load i32, i32* @y.20
  %259 = sub i32 %257, 1
  %260 = mul i32 %257, %259
  %261 = urem i32 %260, 2
  %262 = icmp eq i32 %261, 0
  %263 = icmp slt i32 %258, 10
  %264 = or i1 %262, %263
  br i1 %264, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %256, %originalBB34alteredBB
  %265 = load i32, i32* @x.19
  %266 = load i32, i32* @y.20
  %267 = sub i32 %265, 1
  %268 = mul i32 %265, %267
  %269 = urem i32 %268, 2
  %270 = icmp eq i32 %269, 0
  %271 = icmp slt i32 %266, 10
  %272 = or i1 %270, %271
  br i1 %272, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  br label %273, !dbg !1257

273:                                              ; preds = %originalBBpart236, %219, %211
  br label %274, !dbg !1244

274:                                              ; preds = %273
  %275 = load i32, i32* @x.19
  %276 = load i32, i32* @y.20
  %277 = sub i32 %275, 1
  %278 = mul i32 %275, %277
  %279 = urem i32 %278, 2
  %280 = icmp eq i32 %279, 0
  %281 = icmp slt i32 %276, 10
  %282 = or i1 %280, %281
  br i1 %282, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %274, %originalBB38alteredBB
  %283 = load i32, i32* %18, align 4, !dbg !1258
  %284 = add nsw i32 %283, 1, !dbg !1258
  store i32 %284, i32* %18, align 4, !dbg !1258
  %285 = load i32, i32* @x.19
  %286 = load i32, i32* @y.20
  %287 = sub i32 %285, 1
  %288 = mul i32 %285, %287
  %289 = urem i32 %288, 2
  %290 = icmp eq i32 %289, 0
  %291 = icmp slt i32 %286, 10
  %292 = or i1 %290, %291
  br i1 %292, label %originalBBpart252, label %originalBB38alteredBB

originalBBpart252:                                ; preds = %originalBB38
  br label %207, !dbg !1259, !llvm.loop !1260

293:                                              ; preds = %207
  %294 = load i32*, i32** %16, align 8, !dbg !1262
  %295 = bitcast i32* %294 to i8*, !dbg !1262
  call void @free(i8* %295) #10, !dbg !1263
  %296 = load i8, i8* %14, align 1, !dbg !1264
  %297 = trunc i8 %296 to i1, !dbg !1264
  store i1 %297, i1* %7, align 1, !dbg !1265
  br label %298, !dbg !1265

298:                                              ; preds = %293, %205
  %299 = load i32, i32* @x.19
  %300 = load i32, i32* @y.20
  %301 = sub i32 %299, 1
  %302 = mul i32 %299, %301
  %303 = urem i32 %302, 2
  %304 = icmp eq i32 %303, 0
  %305 = icmp slt i32 %300, 10
  %306 = or i1 %304, %305
  br i1 %306, label %originalBB54, label %originalBB54alteredBB

originalBB54:                                     ; preds = %298, %originalBB54alteredBB
  %307 = load i1, i1* %7, align 1, !dbg !1266
  %308 = load i32, i32* @x.19
  %309 = load i32, i32* @y.20
  %310 = sub i32 %308, 1
  %311 = mul i32 %308, %310
  %312 = urem i32 %311, 2
  %313 = icmp eq i32 %312, 0
  %314 = icmp slt i32 %309, 10
  %315 = or i1 %313, %314
  br i1 %315, label %originalBBpart256, label %originalBB54alteredBB

originalBBpart256:                                ; preds = %originalBB54
  ret i1 %307, !dbg !1266

originalBBalteredBB:                              ; preds = %originalBB, %28
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %51
  %316 = load i32, i32* %11, align 4, !dbg !1181
  %317 = load i32, i32* %10, align 4, !dbg !1183
  %318 = icmp ne i32 %316, %317, !dbg !1184
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %79
  store i8 0, i8* %14, align 1, !dbg !1193
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %96
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %117
  %319 = load %struct.passwd*, %struct.passwd** %15, align 8, !dbg !1203
  %320 = getelementptr inbounds %struct.passwd, %struct.passwd* %319, i32 0, i32 3, !dbg !1204
  %321 = load i32, i32* %320, align 4, !dbg !1204
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %144
  %322 = load i8*, i8** %8, align 8, !dbg !1211
  %323 = icmp ne i8* %322, null, !dbg !1211
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %163
  %324 = call i32* @__errno_location() #15, !dbg !1215
  %325 = load i32, i32* %324, align 4, !dbg !1215
  %326 = call i8* @gettext(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.61, i64 0, i64 0)) #10, !dbg !1217
  %327 = load i8*, i8** %8, align 8, !dbg !1218
  %328 = call i8* @quote(i8* %327), !dbg !1219
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %325, i8* %326, i8* %328), !dbg !1220
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %185
  %329 = call i32* @__errno_location() #15, !dbg !1222
  %330 = load i32, i32* %329, align 4, !dbg !1222
  %331 = call i8* @gettext(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1.62, i64 0, i64 0)) #10, !dbg !1224
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %330, i8* %331), !dbg !1225
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %239
  store i8 0, i8* %14, align 1, !dbg !1255
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %256
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %274
  %332 = load i32, i32* %18, align 4, !dbg !1258
  %_ = sub i32 0, %332
  %gen = add i32 %_, 1
  %_39 = sub i32 0, %332
  %gen40 = add i32 %_39, 1
  %_41 = sub i32 0, %332
  %gen42 = add i32 %_41, 1
  %_43 = sub i32 %332, 1
  %gen44 = mul i32 %_43, 1
  %_45 = sub i32 %332, 1
  %gen46 = mul i32 %_45, 1
  %_47 = sub i32 0, %332
  %gen48 = add i32 %_47, 1
  %_49 = sub i32 %332, 1
  %gen50 = mul i32 %_49, 1
  %333 = add nsw i32 %332, 1, !dbg !1258
  store i32 %333, i32* %18, align 4, !dbg !1258
  br label %originalBB38

originalBB54alteredBB:                            ; preds = %originalBB54, %298
  %334 = load i1, i1* %7, align 1, !dbg !1266
  br label %originalBB54
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @print_group(i32, i1 zeroext) #4 !dbg !1267 {
  %3 = alloca i32, align 4
  %4 = alloca i8, align 1
  %5 = alloca %struct.group*, align 8
  %6 = alloca i8, align 1
  %7 = alloca i8*, align 8
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !1270, metadata !DIExpression()), !dbg !1271
  %8 = zext i1 %1 to i8
  store i8 %8, i8* %4, align 1
  call void @llvm.dbg.declare(metadata i8* %4, metadata !1272, metadata !DIExpression()), !dbg !1273
  call void @llvm.dbg.declare(metadata %struct.group** %5, metadata !1274, metadata !DIExpression()), !dbg !1282
  store %struct.group* null, %struct.group** %5, align 8, !dbg !1282
  call void @llvm.dbg.declare(metadata i8* %6, metadata !1283, metadata !DIExpression()), !dbg !1284
  store i8 1, i8* %6, align 1, !dbg !1284
  %9 = load i8, i8* %4, align 1, !dbg !1285
  %10 = trunc i8 %9 to i1, !dbg !1285
  br i1 %10, label %11, label %37, !dbg !1287

11:                                               ; preds = %2
  %12 = load i32, i32* %3, align 4, !dbg !1288
  %13 = call %struct.group* @getgrgid(i32 %12), !dbg !1290
  store %struct.group* %13, %struct.group** %5, align 8, !dbg !1291
  %14 = load %struct.group*, %struct.group** %5, align 8, !dbg !1292
  %15 = icmp eq %struct.group* %14, null, !dbg !1294
  br i1 %15, label %16, label %36, !dbg !1295

16:                                               ; preds = %11
  %17 = load i32, i32* @x.21
  %18 = load i32, i32* @y.22
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %16, %originalBBalteredBB
  %25 = call i8* @gettext(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.2.63, i64 0, i64 0)) #10, !dbg !1296
  %26 = load i32, i32* %3, align 4, !dbg !1298
  %27 = zext i32 %26 to i64, !dbg !1299
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %25, i64 %27), !dbg !1300
  store i8 0, i8* %6, align 1, !dbg !1301
  %28 = load i32, i32* @x.21
  %29 = load i32, i32* @y.22
  %30 = sub i32 %28, 1
  %31 = mul i32 %28, %30
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %33, %34
  br i1 %35, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %36, !dbg !1302

36:                                               ; preds = %originalBBpart2, %11
  br label %37, !dbg !1303

37:                                               ; preds = %36, %2
  call void @llvm.dbg.declare(metadata i8** %7, metadata !1304, metadata !DIExpression()), !dbg !1305
  %38 = load i32, i32* @x.21
  %39 = load i32, i32* @y.22
  %40 = sub i32 %38, 1
  %41 = mul i32 %38, %40
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %43, %44
  br i1 %45, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %37, %originalBB1alteredBB
  %46 = load %struct.group*, %struct.group** %5, align 8, !dbg !1306
  %47 = icmp ne %struct.group* %46, null, !dbg !1306
  %48 = load i32, i32* @x.21
  %49 = load i32, i32* @y.22
  %50 = sub i32 %48, 1
  %51 = mul i32 %48, %50
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %53, %54
  br i1 %55, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %47, label %56, label %76, !dbg !1306

56:                                               ; preds = %originalBBpart24
  %57 = load i32, i32* @x.21
  %58 = load i32, i32* @y.22
  %59 = sub i32 %57, 1
  %60 = mul i32 %57, %59
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %58, 10
  %64 = or i1 %62, %63
  br i1 %64, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %56, %originalBB6alteredBB
  %65 = load %struct.group*, %struct.group** %5, align 8, !dbg !1307
  %66 = getelementptr inbounds %struct.group, %struct.group* %65, i32 0, i32 0, !dbg !1308
  %67 = load i8*, i8** %66, align 8, !dbg !1308
  %68 = load i32, i32* @x.21
  %69 = load i32, i32* @y.22
  %70 = sub i32 %68, 1
  %71 = mul i32 %68, %70
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %69, 10
  %75 = or i1 %73, %74
  br i1 %75, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %94, !dbg !1306

76:                                               ; preds = %originalBBpart24
  %77 = load i32, i32* @x.21
  %78 = load i32, i32* @y.22
  %79 = sub i32 %77, 1
  %80 = mul i32 %77, %79
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %78, 10
  %84 = or i1 %82, %83
  br i1 %84, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %76, %originalBB10alteredBB
  %85 = call i8* @gidtostr_ptr.64(i32* %3), !dbg !1309
  %86 = load i32, i32* @x.21
  %87 = load i32, i32* @y.22
  %88 = sub i32 %86, 1
  %89 = mul i32 %86, %88
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %87, 10
  %93 = or i1 %91, %92
  br i1 %93, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %94, !dbg !1306

94:                                               ; preds = %originalBBpart212, %originalBBpart28
  %95 = phi i8* [ %67, %originalBBpart28 ], [ %85, %originalBBpart212 ], !dbg !1306
  store i8* %95, i8** %7, align 8, !dbg !1305
  %96 = load i8*, i8** %7, align 8, !dbg !1310
  %97 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1310
  %98 = call i32 @fputs_unlocked(i8* %96, %struct._IO_FILE* %97), !dbg !1310
  %99 = load i8, i8* %6, align 1, !dbg !1311
  %100 = trunc i8 %99 to i1, !dbg !1311
  ret i1 %100, !dbg !1312

originalBBalteredBB:                              ; preds = %originalBB, %16
  %101 = call i8* @gettext(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.2.63, i64 0, i64 0)) #10, !dbg !1296
  %102 = load i32, i32* %3, align 4, !dbg !1298
  %103 = zext i32 %102 to i64, !dbg !1299
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %101, i64 %103), !dbg !1300
  store i8 0, i8* %6, align 1, !dbg !1301
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %37
  %104 = load %struct.group*, %struct.group** %5, align 8, !dbg !1306
  %105 = icmp ne %struct.group* %104, null, !dbg !1306
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %56
  %106 = load %struct.group*, %struct.group** %5, align 8, !dbg !1307
  %107 = getelementptr inbounds %struct.group, %struct.group* %106, i32 0, i32 0, !dbg !1308
  %108 = load i8*, i8** %107, align 8, !dbg !1308
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %76
  %109 = call i8* @gidtostr_ptr.64(i32* %3), !dbg !1309
  br label %originalBB10
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @gidtostr_ptr.64(i32*) #4 !dbg !80 {
  %2 = alloca i32*, align 8
  store i32* %0, i32** %2, align 8
  call void @llvm.dbg.declare(metadata i32** %2, metadata !1313, metadata !DIExpression()), !dbg !1314
  %3 = load i32*, i32** %2, align 8, !dbg !1315
  %4 = load i32, i32* %3, align 4, !dbg !1316
  %5 = zext i32 %4 to i64, !dbg !1316
  %6 = call i8* @umaxtostr(i64 %5, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @gidtostr_ptr.buf.65, i64 0, i64 0)), !dbg !1317
  ret i8* %6, !dbg !1318
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @close_stdout() #4 !dbg !1319 {
  %1 = alloca i8*, align 8
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1322
  %3 = call i32 @close_stream(%struct._IO_FILE* %2), !dbg !1324
  %4 = icmp ne i32 %3, 0, !dbg !1325
  br i1 %4, label %5, label %60, !dbg !1326

5:                                                ; preds = %0
  %6 = load i8, i8* @ignore_EPIPE, align 1, !dbg !1327
  %7 = trunc i8 %6 to i1, !dbg !1327
  br i1 %7, label %8, label %12, !dbg !1328

8:                                                ; preds = %5
  %9 = call i32* @__errno_location() #15, !dbg !1329
  %10 = load i32, i32* %9, align 4, !dbg !1329
  %11 = icmp eq i32 %10, 32, !dbg !1330
  br i1 %11, label %60, label %12, !dbg !1331

12:                                               ; preds = %8, %5
  call void @llvm.dbg.declare(metadata i8** %1, metadata !1332, metadata !DIExpression()), !dbg !1334
  %13 = load i32, i32* @x.25
  %14 = load i32, i32* @y.26
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %12, %originalBBalteredBB
  %21 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.71, i64 0, i64 0)) #10, !dbg !1335
  store i8* %21, i8** %1, align 8, !dbg !1334
  %22 = load i8*, i8** @file_name, align 8, !dbg !1336
  %23 = icmp ne i8* %22, null, !dbg !1336
  %24 = load i32, i32* @x.25
  %25 = load i32, i32* @y.26
  %26 = sub i32 %24, 1
  %27 = mul i32 %24, %26
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %29, %30
  br i1 %31, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %23, label %32, label %38, !dbg !1338

32:                                               ; preds = %originalBBpart2
  %33 = call i32* @__errno_location() #15, !dbg !1339
  %34 = load i32, i32* %33, align 4, !dbg !1339
  %35 = load i8*, i8** @file_name, align 8, !dbg !1340
  %36 = call i8* @quotearg_colon(i8* %35), !dbg !1341
  %37 = load i8*, i8** %1, align 8, !dbg !1342
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %34, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.72, i64 0, i64 0), i8* %36, i8* %37), !dbg !1343
  br label %42, !dbg !1343

38:                                               ; preds = %originalBBpart2
  %39 = call i32* @__errno_location() #15, !dbg !1344
  %40 = load i32, i32* %39, align 4, !dbg !1344
  %41 = load i8*, i8** %1, align 8, !dbg !1345
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %40, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2.73, i64 0, i64 0), i8* %41), !dbg !1346
  br label %42

42:                                               ; preds = %38, %32
  %43 = load i32, i32* @x.25
  %44 = load i32, i32* @y.26
  %45 = sub i32 %43, 1
  %46 = mul i32 %43, %45
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %48, %49
  br i1 %50, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %42, %originalBB1alteredBB
  %51 = load volatile i32, i32* @exit_failure, align 4, !dbg !1347
  call void @_exit(i32 %51) #14, !dbg !1348
  %52 = load i32, i32* @x.25
  %53 = load i32, i32* @y.26
  %54 = sub i32 %52, 1
  %55 = mul i32 %52, %54
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %53, 10
  %59 = or i1 %57, %58
  br i1 %59, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  unreachable, !dbg !1348

60:                                               ; preds = %8, %0
  %61 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1349
  %62 = call i32 @close_stream(%struct._IO_FILE* %61), !dbg !1351
  %63 = icmp ne i32 %62, 0, !dbg !1352
  br i1 %63, label %64, label %66, !dbg !1353

64:                                               ; preds = %60
  %65 = load volatile i32, i32* @exit_failure, align 4, !dbg !1354
  call void @_exit(i32 %65) #14, !dbg !1355
  unreachable, !dbg !1355

66:                                               ; preds = %60
  ret void, !dbg !1356

originalBBalteredBB:                              ; preds = %originalBB, %12
  %67 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.71, i64 0, i64 0)) #10, !dbg !1335
  store i8* %67, i8** %1, align 8, !dbg !1334
  %68 = load i8*, i8** @file_name, align 8, !dbg !1336
  %69 = icmp ne i8* %68, null, !dbg !1336
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %42
  %70 = load volatile i32, i32* @exit_failure, align 4, !dbg !1347
  call void @_exit(i32 %70) #14, !dbg !1348
  br label %originalBB1
}

; Function Attrs: noreturn
declare dso_local void @_exit(i32) #9

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @umaxtostr(i64, i8*) #4 !dbg !1357 {
  %3 = alloca i64, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  store i64 %0, i64* %3, align 8
  call void @llvm.dbg.declare(metadata i64* %3, metadata !1361, metadata !DIExpression()), !dbg !1362
  store i8* %1, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !1363, metadata !DIExpression()), !dbg !1364
  call void @llvm.dbg.declare(metadata i8** %5, metadata !1365, metadata !DIExpression()), !dbg !1366
  %6 = load i8*, i8** %4, align 8, !dbg !1367
  %7 = getelementptr inbounds i8, i8* %6, i64 20, !dbg !1368
  store i8* %7, i8** %5, align 8, !dbg !1366
  %8 = load i8*, i8** %5, align 8, !dbg !1369
  store i8 0, i8* %8, align 1, !dbg !1370
  %9 = load i64, i64* %3, align 8, !dbg !1371
  %10 = icmp ult i64 %9, 0, !dbg !1373
  br i1 %10, label %11, label %42, !dbg !1374

11:                                               ; preds = %2
  br label %12, !dbg !1375

12:                                               ; preds = %originalBBpart2, %11
  %13 = load i64, i64* %3, align 8, !dbg !1377
  %14 = urem i64 %13, 10, !dbg !1378
  %15 = sub i64 48, %14, !dbg !1379
  %16 = trunc i64 %15 to i8, !dbg !1380
  %17 = load i8*, i8** %5, align 8, !dbg !1381
  %18 = getelementptr inbounds i8, i8* %17, i32 -1, !dbg !1381
  store i8* %18, i8** %5, align 8, !dbg !1381
  store i8 %16, i8* %18, align 1, !dbg !1382
  br label %19, !dbg !1383

19:                                               ; preds = %12
  %20 = load i32, i32* @x.27
  %21 = load i32, i32* @y.28
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %19, %originalBBalteredBB
  %28 = load i64, i64* %3, align 8, !dbg !1384
  %29 = udiv i64 %28, 10, !dbg !1384
  store i64 %29, i64* %3, align 8, !dbg !1384
  %30 = icmp ne i64 %29, 0, !dbg !1385
  %31 = load i32, i32* @x.27
  %32 = load i32, i32* @y.28
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %30, label %12, label %39, !dbg !1383, !llvm.loop !1386

39:                                               ; preds = %originalBBpart2
  %40 = load i8*, i8** %5, align 8, !dbg !1388
  %41 = getelementptr inbounds i8, i8* %40, i32 -1, !dbg !1388
  store i8* %41, i8** %5, align 8, !dbg !1388
  store i8 45, i8* %41, align 1, !dbg !1389
  br label %55, !dbg !1390

42:                                               ; preds = %2
  br label %43, !dbg !1391

43:                                               ; preds = %50, %42
  %44 = load i64, i64* %3, align 8, !dbg !1393
  %45 = urem i64 %44, 10, !dbg !1394
  %46 = add i64 48, %45, !dbg !1395
  %47 = trunc i64 %46 to i8, !dbg !1396
  %48 = load i8*, i8** %5, align 8, !dbg !1397
  %49 = getelementptr inbounds i8, i8* %48, i32 -1, !dbg !1397
  store i8* %49, i8** %5, align 8, !dbg !1397
  store i8 %47, i8* %49, align 1, !dbg !1398
  br label %50, !dbg !1399

50:                                               ; preds = %43
  %51 = load i64, i64* %3, align 8, !dbg !1400
  %52 = udiv i64 %51, 10, !dbg !1400
  store i64 %52, i64* %3, align 8, !dbg !1400
  %53 = icmp ne i64 %52, 0, !dbg !1401
  br i1 %53, label %43, label %54, !dbg !1399, !llvm.loop !1402

54:                                               ; preds = %50
  br label %55

55:                                               ; preds = %54, %39
  %56 = load i32, i32* @x.27
  %57 = load i32, i32* @y.28
  %58 = sub i32 %56, 1
  %59 = mul i32 %56, %58
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %61, %62
  br i1 %63, label %originalBB12, label %originalBB12alteredBB

originalBB12:                                     ; preds = %55, %originalBB12alteredBB
  %64 = load i8*, i8** %5, align 8, !dbg !1404
  %65 = load i32, i32* @x.27
  %66 = load i32, i32* @y.28
  %67 = sub i32 %65, 1
  %68 = mul i32 %65, %67
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %66, 10
  %72 = or i1 %70, %71
  br i1 %72, label %originalBBpart214, label %originalBB12alteredBB

originalBBpart214:                                ; preds = %originalBB12
  ret i8* %64, !dbg !1405

originalBBalteredBB:                              ; preds = %originalBB, %19
  %73 = load i64, i64* %3, align 8, !dbg !1384
  %_ = shl i64 %73, 10
  %_1 = shl i64 %73, 10
  %_2 = sub i64 %73, 10
  %gen = mul i64 %_2, 10
  %_3 = sub i64 %73, 10
  %gen4 = mul i64 %_3, 10
  %_5 = shl i64 %73, 10
  %_6 = sub i64 %73, 10
  %gen7 = mul i64 %_6, 10
  %_8 = sub i64 %73, 10
  %gen9 = mul i64 %_8, 10
  %_10 = sub i64 0, %73
  %gen11 = add i64 %_10, 10
  %74 = udiv i64 %73, 10, !dbg !1384
  store i64 %74, i64* %3, align 8, !dbg !1384
  %75 = icmp ne i64 %74, 0, !dbg !1385
  br label %originalBB

originalBB12alteredBB:                            ; preds = %originalBB12, %55
  %76 = load i8*, i8** %5, align 8, !dbg !1404
  br label %originalBB12
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @set_program_name(i8*) #4 !dbg !1406 {
  %2 = load i32, i32* @x.29
  %3 = load i32, i32* @y.30
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  store i8* %0, i8** %10, align 8
  call void @llvm.dbg.declare(metadata i8** %10, metadata !1407, metadata !DIExpression()), !dbg !1408
  call void @llvm.dbg.declare(metadata i8** %11, metadata !1409, metadata !DIExpression()), !dbg !1410
  call void @llvm.dbg.declare(metadata i8** %12, metadata !1411, metadata !DIExpression()), !dbg !1412
  %13 = load i8*, i8** %10, align 8, !dbg !1413
  %14 = icmp eq i8* %13, null, !dbg !1415
  %15 = load i32, i32* @x.29
  %16 = load i32, i32* @y.30
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %14, label %23, label %26, !dbg !1416

23:                                               ; preds = %originalBBpart2
  %24 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1417
  %25 = call i32 @fputs(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.80, i64 0, i64 0), %struct._IO_FILE* %24), !dbg !1419
  call void @abort() #12, !dbg !1420
  unreachable, !dbg !1420

26:                                               ; preds = %originalBBpart2
  %27 = load i32, i32* @x.29
  %28 = load i32, i32* @y.30
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %26, %originalBB1alteredBB
  %35 = load i8*, i8** %10, align 8, !dbg !1421
  %36 = call i8* @strrchr(i8* %35, i32 47) #13, !dbg !1422
  store i8* %36, i8** %11, align 8, !dbg !1423
  %37 = load i8*, i8** %11, align 8, !dbg !1424
  %38 = icmp ne i8* %37, null, !dbg !1425
  %39 = load i32, i32* @x.29
  %40 = load i32, i32* @y.30
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %38, label %47, label %66, !dbg !1424

47:                                               ; preds = %originalBBpart24
  %48 = load i32, i32* @x.29
  %49 = load i32, i32* @y.30
  %50 = sub i32 %48, 1
  %51 = mul i32 %48, %50
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %53, %54
  br i1 %55, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %47, %originalBB6alteredBB
  %56 = load i8*, i8** %11, align 8, !dbg !1426
  %57 = getelementptr inbounds i8, i8* %56, i64 1, !dbg !1427
  %58 = load i32, i32* @x.29
  %59 = load i32, i32* @y.30
  %60 = sub i32 %58, 1
  %61 = mul i32 %58, %60
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %59, 10
  %65 = or i1 %63, %64
  br i1 %65, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %68, !dbg !1424

66:                                               ; preds = %originalBBpart24
  %67 = load i8*, i8** %10, align 8, !dbg !1428
  br label %68, !dbg !1424

68:                                               ; preds = %66, %originalBBpart28
  %69 = phi i8* [ %57, %originalBBpart28 ], [ %67, %66 ], !dbg !1424
  %70 = load i32, i32* @x.29
  %71 = load i32, i32* @y.30
  %72 = sub i32 %70, 1
  %73 = mul i32 %70, %72
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %71, 10
  %77 = or i1 %75, %76
  br i1 %77, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %68, %originalBB10alteredBB
  store i8* %69, i8** %12, align 8, !dbg !1429
  %78 = load i8*, i8** %12, align 8, !dbg !1430
  %79 = load i8*, i8** %10, align 8, !dbg !1432
  %80 = ptrtoint i8* %78 to i64, !dbg !1433
  %81 = ptrtoint i8* %79 to i64, !dbg !1433
  %82 = sub i64 %80, %81, !dbg !1433
  %83 = icmp sge i64 %82, 7, !dbg !1434
  %84 = load i32, i32* @x.29
  %85 = load i32, i32* @y.30
  %86 = sub i32 %84, 1
  %87 = mul i32 %84, %86
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %85, 10
  %91 = or i1 %89, %90
  br i1 %91, label %originalBBpart214, label %originalBB10alteredBB

originalBBpart214:                                ; preds = %originalBB10
  br i1 %83, label %92, label %139, !dbg !1435

92:                                               ; preds = %originalBBpart214
  %93 = load i8*, i8** %12, align 8, !dbg !1436
  %94 = getelementptr inbounds i8, i8* %93, i64 -7, !dbg !1437
  %95 = call i32 @strncmp(i8* %94, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.81, i64 0, i64 0), i64 7) #13, !dbg !1438
  %96 = icmp eq i32 %95, 0, !dbg !1439
  br i1 %96, label %97, label %139, !dbg !1440

97:                                               ; preds = %92
  %98 = load i32, i32* @x.29
  %99 = load i32, i32* @y.30
  %100 = sub i32 %98, 1
  %101 = mul i32 %98, %100
  %102 = urem i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = icmp slt i32 %99, 10
  %105 = or i1 %103, %104
  br i1 %105, label %originalBB16, label %originalBB16alteredBB

originalBB16:                                     ; preds = %97, %originalBB16alteredBB
  %106 = load i8*, i8** %12, align 8, !dbg !1441
  store i8* %106, i8** %10, align 8, !dbg !1443
  %107 = load i8*, i8** %12, align 8, !dbg !1444
  %108 = call i32 @strncmp(i8* %107, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.82, i64 0, i64 0), i64 3) #13, !dbg !1446
  %109 = icmp eq i32 %108, 0, !dbg !1447
  %110 = load i32, i32* @x.29
  %111 = load i32, i32* @y.30
  %112 = sub i32 %110, 1
  %113 = mul i32 %110, %112
  %114 = urem i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %111, 10
  %117 = or i1 %115, %116
  br i1 %117, label %originalBBpart218, label %originalBB16alteredBB

originalBBpart218:                                ; preds = %originalBB16
  br i1 %109, label %118, label %122, !dbg !1448

118:                                              ; preds = %originalBBpart218
  %119 = load i8*, i8** %12, align 8, !dbg !1449
  %120 = getelementptr inbounds i8, i8* %119, i64 3, !dbg !1451
  store i8* %120, i8** %10, align 8, !dbg !1452
  %121 = load i8*, i8** %10, align 8, !dbg !1453
  store i8* %121, i8** @program_invocation_short_name, align 8, !dbg !1454
  br label %122, !dbg !1455

122:                                              ; preds = %118, %originalBBpart218
  %123 = load i32, i32* @x.29
  %124 = load i32, i32* @y.30
  %125 = sub i32 %123, 1
  %126 = mul i32 %123, %125
  %127 = urem i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %124, 10
  %130 = or i1 %128, %129
  br i1 %130, label %originalBB20, label %originalBB20alteredBB

originalBB20:                                     ; preds = %122, %originalBB20alteredBB
  %131 = load i32, i32* @x.29
  %132 = load i32, i32* @y.30
  %133 = sub i32 %131, 1
  %134 = mul i32 %131, %133
  %135 = urem i32 %134, 2
  %136 = icmp eq i32 %135, 0
  %137 = icmp slt i32 %132, 10
  %138 = or i1 %136, %137
  br i1 %138, label %originalBBpart222, label %originalBB20alteredBB

originalBBpart222:                                ; preds = %originalBB20
  br label %139, !dbg !1456

139:                                              ; preds = %originalBBpart222, %92, %originalBBpart214
  %140 = load i32, i32* @x.29
  %141 = load i32, i32* @y.30
  %142 = sub i32 %140, 1
  %143 = mul i32 %140, %142
  %144 = urem i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = icmp slt i32 %141, 10
  %147 = or i1 %145, %146
  br i1 %147, label %originalBB24, label %originalBB24alteredBB

originalBB24:                                     ; preds = %139, %originalBB24alteredBB
  %148 = load i8*, i8** %10, align 8, !dbg !1457
  store i8* %148, i8** @program_name, align 8, !dbg !1458
  %149 = load i8*, i8** %10, align 8, !dbg !1459
  store i8* %149, i8** @program_invocation_name, align 8, !dbg !1460
  %150 = load i32, i32* @x.29
  %151 = load i32, i32* @y.30
  %152 = sub i32 %150, 1
  %153 = mul i32 %150, %152
  %154 = urem i32 %153, 2
  %155 = icmp eq i32 %154, 0
  %156 = icmp slt i32 %151, 10
  %157 = or i1 %155, %156
  br i1 %157, label %originalBBpart227, label %originalBB24alteredBB

originalBBpart227:                                ; preds = %originalBB24
  ret void, !dbg !1461

originalBBalteredBB:                              ; preds = %originalBB, %1
  %158 = alloca i8*, align 8
  %159 = alloca i8*, align 8
  %160 = alloca i8*, align 8
  store i8* %0, i8** %158, align 8
  call void @llvm.dbg.declare(metadata i8** %158, metadata !1462, metadata !DIExpression()), !dbg !1408
  call void @llvm.dbg.declare(metadata i8** %159, metadata !1468, metadata !DIExpression()), !dbg !1410
  call void @llvm.dbg.declare(metadata i8** %160, metadata !1469, metadata !DIExpression()), !dbg !1412
  %161 = load i8*, i8** %158, align 8, !dbg !1413
  %162 = icmp eq i8* %161, null, !dbg !1415
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %26
  %163 = load i8*, i8** %10, align 8, !dbg !1421
  %164 = call i8* @strrchr(i8* %163, i32 47) #13, !dbg !1422
  store i8* %164, i8** %11, align 8, !dbg !1423
  %165 = load i8*, i8** %11, align 8, !dbg !1424
  %166 = icmp ne i8* %165, null, !dbg !1425
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %47
  %167 = load i8*, i8** %11, align 8, !dbg !1426
  %168 = getelementptr inbounds i8, i8* %167, i64 1, !dbg !1427
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %68
  store i8* %69, i8** %12, align 8, !dbg !1429
  %169 = load i8*, i8** %12, align 8, !dbg !1430
  %170 = load i8*, i8** %10, align 8, !dbg !1432
  %171 = ptrtoint i8* %169 to i64, !dbg !1433
  %172 = ptrtoint i8* %170 to i64, !dbg !1433
  %_ = sub i64 0, %171
  %gen = add i64 %_, %172
  %_11 = shl i64 %171, %172
  %_12 = shl i64 %171, %172
  %173 = sub i64 %171, %172, !dbg !1433
  %174 = icmp sge i64 %173, 7, !dbg !1434
  br label %originalBB10

originalBB16alteredBB:                            ; preds = %originalBB16, %97
  %175 = load i8*, i8** %12, align 8, !dbg !1441
  store i8* %175, i8** %10, align 8, !dbg !1443
  %176 = load i8*, i8** %12, align 8, !dbg !1444
  %177 = call i32 @strncmp(i8* %176, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.82, i64 0, i64 0), i64 3) #13, !dbg !1446
  %178 = icmp eq i32 %177, 0, !dbg !1447
  br label %originalBB16

originalBB20alteredBB:                            ; preds = %originalBB20, %122
  br label %originalBB20

originalBB24alteredBB:                            ; preds = %originalBB24, %139
  %179 = load i8*, i8** %10, align 8, !dbg !1457
  store i8* %179, i8** @program_name, align 8, !dbg !1458
  %180 = load i8*, i8** %10, align 8, !dbg !1459
  store i8* %180, i8** @program_invocation_name, align 8, !dbg !1460
  br label %originalBB24
}

declare dso_local i32 @fputs(i8*, %struct._IO_FILE*) #3

; Function Attrs: noreturn nounwind
declare dso_local void @abort() #5

; Function Attrs: nounwind readonly
declare dso_local i8* @strrchr(i8*, i32) #7

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @set_char_quoting(%struct.quoting_options*, i8 signext, i32) #4 !dbg !1470 {
  %4 = load i32, i32* @x.31
  %5 = load i32, i32* @y.32
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %struct.quoting_options*, align 8
  %13 = alloca i8, align 1
  %14 = alloca i32, align 4
  %15 = alloca i8, align 1
  %16 = alloca i32*, align 8
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  store %struct.quoting_options* %0, %struct.quoting_options** %12, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %12, metadata !1474, metadata !DIExpression()), !dbg !1475
  store i8 %1, i8* %13, align 1
  call void @llvm.dbg.declare(metadata i8* %13, metadata !1476, metadata !DIExpression()), !dbg !1477
  store i32 %2, i32* %14, align 4
  call void @llvm.dbg.declare(metadata i32* %14, metadata !1478, metadata !DIExpression()), !dbg !1479
  call void @llvm.dbg.declare(metadata i8* %15, metadata !1480, metadata !DIExpression()), !dbg !1481
  %19 = load i8, i8* %13, align 1, !dbg !1482
  store i8 %19, i8* %15, align 1, !dbg !1481
  call void @llvm.dbg.declare(metadata i32** %16, metadata !1483, metadata !DIExpression()), !dbg !1485
  %20 = load %struct.quoting_options*, %struct.quoting_options** %12, align 8, !dbg !1486
  %21 = icmp ne %struct.quoting_options* %20, null, !dbg !1486
  %22 = load i32, i32* @x.31
  %23 = load i32, i32* @y.32
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %21, label %30, label %32, !dbg !1486

30:                                               ; preds = %originalBBpart2
  %31 = load %struct.quoting_options*, %struct.quoting_options** %12, align 8, !dbg !1487
  br label %33, !dbg !1486

32:                                               ; preds = %originalBBpart2
  br label %33, !dbg !1486

33:                                               ; preds = %32, %30
  %34 = phi %struct.quoting_options* [ %31, %30 ], [ @default_quoting_options, %32 ], !dbg !1486
  %35 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %34, i32 0, i32 2, !dbg !1488
  %36 = getelementptr inbounds [8 x i32], [8 x i32]* %35, i64 0, i64 0, !dbg !1489
  %37 = load i8, i8* %15, align 1, !dbg !1490
  %38 = zext i8 %37 to i64, !dbg !1490
  %39 = udiv i64 %38, 32, !dbg !1491
  %40 = getelementptr inbounds i32, i32* %36, i64 %39, !dbg !1492
  store i32* %40, i32** %16, align 8, !dbg !1485
  call void @llvm.dbg.declare(metadata i32* %17, metadata !1493, metadata !DIExpression()), !dbg !1494
  %41 = load i8, i8* %15, align 1, !dbg !1495
  %42 = zext i8 %41 to i64, !dbg !1495
  %43 = urem i64 %42, 32, !dbg !1496
  %44 = trunc i64 %43 to i32, !dbg !1495
  store i32 %44, i32* %17, align 4, !dbg !1494
  call void @llvm.dbg.declare(metadata i32* %18, metadata !1497, metadata !DIExpression()), !dbg !1498
  %45 = load i32*, i32** %16, align 8, !dbg !1499
  %46 = load i32, i32* %45, align 4, !dbg !1500
  %47 = load i32, i32* %17, align 4, !dbg !1501
  %48 = lshr i32 %46, %47, !dbg !1502
  %49 = and i32 %48, 1, !dbg !1503
  store i32 %49, i32* %18, align 4, !dbg !1498
  %50 = load i32, i32* %14, align 4, !dbg !1504
  %51 = and i32 %50, 1, !dbg !1505
  %52 = load i32, i32* %18, align 4, !dbg !1506
  %53 = xor i32 %51, %52, !dbg !1507
  %54 = load i32, i32* %17, align 4, !dbg !1508
  %55 = shl i32 %53, %54, !dbg !1509
  %56 = load i32*, i32** %16, align 8, !dbg !1510
  %57 = load i32, i32* %56, align 4, !dbg !1511
  %58 = xor i32 %57, %55, !dbg !1511
  store i32 %58, i32* %56, align 4, !dbg !1511
  %59 = load i32, i32* %18, align 4, !dbg !1512
  ret i32 %59, !dbg !1513

originalBBalteredBB:                              ; preds = %originalBB, %3
  %60 = alloca %struct.quoting_options*, align 8
  %61 = alloca i8, align 1
  %62 = alloca i32, align 4
  %63 = alloca i8, align 1
  %64 = alloca i32*, align 8
  %65 = alloca i32, align 4
  %66 = alloca i32, align 4
  store %struct.quoting_options* %0, %struct.quoting_options** %60, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %60, metadata !1514, metadata !DIExpression()), !dbg !1475
  store i8 %1, i8* %61, align 1
  call void @llvm.dbg.declare(metadata i8* %61, metadata !1549, metadata !DIExpression()), !dbg !1477
  store i32 %2, i32* %62, align 4
  call void @llvm.dbg.declare(metadata i32* %62, metadata !1550, metadata !DIExpression()), !dbg !1479
  call void @llvm.dbg.declare(metadata i8* %63, metadata !1551, metadata !DIExpression()), !dbg !1481
  %67 = load i8, i8* %61, align 1, !dbg !1482
  store i8 %67, i8* %63, align 1, !dbg !1481
  call void @llvm.dbg.declare(metadata i32** %64, metadata !1552, metadata !DIExpression()), !dbg !1485
  %68 = load %struct.quoting_options*, %struct.quoting_options** %60, align 8, !dbg !1486
  %69 = icmp ne %struct.quoting_options* %68, null, !dbg !1486
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quotearg_char_mem(i8*, i64, i8 signext) #4 !dbg !1553 {
  %4 = load i32, i32* @x.33
  %5 = load i32, i32* @y.34
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca i8*, align 8
  %13 = alloca i64, align 8
  %14 = alloca i8, align 1
  %15 = alloca %struct.quoting_options, align 8
  store i8* %0, i8** %12, align 8
  call void @llvm.dbg.declare(metadata i8** %12, metadata !1556, metadata !DIExpression()), !dbg !1557
  store i64 %1, i64* %13, align 8
  call void @llvm.dbg.declare(metadata i64* %13, metadata !1558, metadata !DIExpression()), !dbg !1559
  store i8 %2, i8* %14, align 1
  call void @llvm.dbg.declare(metadata i8* %14, metadata !1560, metadata !DIExpression()), !dbg !1561
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %15, metadata !1562, metadata !DIExpression()), !dbg !1563
  %16 = bitcast %struct.quoting_options* %15 to i8*, !dbg !1564
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 bitcast (%struct.quoting_options* @default_quoting_options to i8*), i64 56, i1 false), !dbg !1564
  %17 = load i8, i8* %14, align 1, !dbg !1565
  %18 = call i32 @set_char_quoting(%struct.quoting_options* %15, i8 signext %17, i32 1), !dbg !1566
  %19 = load i8*, i8** %12, align 8, !dbg !1567
  %20 = load i64, i64* %13, align 8, !dbg !1568
  %21 = call i8* @quotearg_n_options(i32 0, i8* %19, i64 %20, %struct.quoting_options* %15), !dbg !1569
  %22 = load i32, i32* @x.33
  %23 = load i32, i32* @y.34
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i8* %21, !dbg !1570

originalBBalteredBB:                              ; preds = %originalBB, %3
  %30 = alloca i8*, align 8
  %31 = alloca i64, align 8
  %32 = alloca i8, align 1
  %33 = alloca %struct.quoting_options, align 8
  store i8* %0, i8** %30, align 8
  call void @llvm.dbg.declare(metadata i8** %30, metadata !1571, metadata !DIExpression()), !dbg !1557
  store i64 %1, i64* %31, align 8
  call void @llvm.dbg.declare(metadata i64* %31, metadata !1603, metadata !DIExpression()), !dbg !1559
  store i8 %2, i8* %32, align 1
  call void @llvm.dbg.declare(metadata i8* %32, metadata !1604, metadata !DIExpression()), !dbg !1561
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %33, metadata !1605, metadata !DIExpression()), !dbg !1563
  %34 = bitcast %struct.quoting_options* %33 to i8*, !dbg !1564
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %34, i8* align 8 bitcast (%struct.quoting_options* @default_quoting_options to i8*), i64 56, i1 false), !dbg !1564
  %35 = load i8, i8* %32, align 1, !dbg !1565
  %36 = call i32 @set_char_quoting(%struct.quoting_options* %33, i8 signext %35, i32 1), !dbg !1566
  %37 = load i8*, i8** %30, align 8, !dbg !1567
  %38 = load i64, i64* %31, align 8, !dbg !1568
  %39 = call i8* @quotearg_n_options(i32 0, i8* %37, i64 %38, %struct.quoting_options* %33), !dbg !1569
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quotearg_n_options(i32, i8*, i64, %struct.quoting_options*) #4 !dbg !1606 {
  %5 = load i32, i32* @x.35
  %6 = load i32, i32* @y.36
  %7 = sub i32 %5, 1
  %8 = mul i32 %5, %7
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %6, 10
  %12 = or i1 %10, %11
  br i1 %12, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %4, %originalBBalteredBB
  %13 = alloca i32, align 4
  %14 = alloca i8*, align 8
  %15 = alloca i64, align 8
  %16 = alloca %struct.quoting_options*, align 8
  %17 = alloca i32, align 4
  %18 = alloca %struct.slotvec*, align 8
  %19 = alloca i8, align 1
  %20 = alloca i32, align 4
  %21 = alloca i64, align 8
  %22 = alloca i8*, align 8
  %23 = alloca i32, align 4
  %24 = alloca i64, align 8
  store i32 %0, i32* %13, align 4
  call void @llvm.dbg.declare(metadata i32* %13, metadata !1611, metadata !DIExpression()), !dbg !1612
  store i8* %1, i8** %14, align 8
  call void @llvm.dbg.declare(metadata i8** %14, metadata !1613, metadata !DIExpression()), !dbg !1614
  store i64 %2, i64* %15, align 8
  call void @llvm.dbg.declare(metadata i64* %15, metadata !1615, metadata !DIExpression()), !dbg !1616
  store %struct.quoting_options* %3, %struct.quoting_options** %16, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %16, metadata !1617, metadata !DIExpression()), !dbg !1618
  call void @llvm.dbg.declare(metadata i32* %17, metadata !1619, metadata !DIExpression()), !dbg !1620
  %25 = call i32* @__errno_location() #15, !dbg !1621
  %26 = load i32, i32* %25, align 4, !dbg !1621
  store i32 %26, i32* %17, align 4, !dbg !1620
  call void @llvm.dbg.declare(metadata %struct.slotvec** %18, metadata !1622, metadata !DIExpression()), !dbg !1623
  %27 = load %struct.slotvec*, %struct.slotvec** @slotvec, align 8, !dbg !1624
  store %struct.slotvec* %27, %struct.slotvec** %18, align 8, !dbg !1623
  %28 = load i32, i32* %13, align 4, !dbg !1625
  %29 = icmp slt i32 %28, 0, !dbg !1627
  %30 = load i32, i32* @x.35
  %31 = load i32, i32* @y.36
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %29, label %38, label %39, !dbg !1628

38:                                               ; preds = %originalBBpart2
  call void @abort() #12, !dbg !1629
  unreachable, !dbg !1629

39:                                               ; preds = %originalBBpart2
  %40 = load i32, i32* @x.35
  %41 = load i32, i32* @y.36
  %42 = sub i32 %40, 1
  %43 = mul i32 %40, %42
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %45, %46
  br i1 %47, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %39, %originalBB1alteredBB
  %48 = load i32, i32* @nslots, align 4, !dbg !1630
  %49 = load i32, i32* %13, align 4, !dbg !1632
  %50 = icmp sle i32 %48, %49, !dbg !1633
  %51 = load i32, i32* @x.35
  %52 = load i32, i32* @y.36
  %53 = sub i32 %51, 1
  %54 = mul i32 %51, %53
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %52, 10
  %58 = or i1 %56, %57
  br i1 %58, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %50, label %59, label %149, !dbg !1634

59:                                               ; preds = %originalBBpart24
  call void @llvm.dbg.declare(metadata i8* %19, metadata !1635, metadata !DIExpression()), !dbg !1637
  %60 = load i32, i32* @x.35
  %61 = load i32, i32* @y.36
  %62 = sub i32 %60, 1
  %63 = mul i32 %60, %62
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %61, 10
  %67 = or i1 %65, %66
  br i1 %67, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %59, %originalBB6alteredBB
  %68 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !1638
  %69 = icmp eq %struct.slotvec* %68, @slotvec0, !dbg !1639
  %70 = zext i1 %69 to i8, !dbg !1637
  store i8 %70, i8* %19, align 1, !dbg !1637
  call void @llvm.dbg.declare(metadata i32* %20, metadata !1640, metadata !DIExpression()), !dbg !1641
  store i32 2147483646, i32* %20, align 4, !dbg !1641
  %71 = load i32, i32* %20, align 4, !dbg !1642
  %72 = load i32, i32* %13, align 4, !dbg !1644
  %73 = icmp slt i32 %71, %72, !dbg !1645
  %74 = load i32, i32* @x.35
  %75 = load i32, i32* @y.36
  %76 = sub i32 %74, 1
  %77 = mul i32 %74, %76
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %75, 10
  %81 = or i1 %79, %80
  br i1 %81, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %73, label %82, label %83, !dbg !1646

82:                                               ; preds = %originalBBpart28
  call void @xalloc_die() #14, !dbg !1647
  unreachable, !dbg !1647

83:                                               ; preds = %originalBBpart28
  %84 = load i8, i8* %19, align 1, !dbg !1648
  %85 = trunc i8 %84 to i1, !dbg !1648
  br i1 %85, label %86, label %87, !dbg !1648

86:                                               ; preds = %83
  br label %105, !dbg !1648

87:                                               ; preds = %83
  %88 = load i32, i32* @x.35
  %89 = load i32, i32* @y.36
  %90 = sub i32 %88, 1
  %91 = mul i32 %88, %90
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %89, 10
  %95 = or i1 %93, %94
  br i1 %95, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %87, %originalBB10alteredBB
  %96 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !1649
  %97 = load i32, i32* @x.35
  %98 = load i32, i32* @y.36
  %99 = sub i32 %97, 1
  %100 = mul i32 %97, %99
  %101 = urem i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %98, 10
  %104 = or i1 %102, %103
  br i1 %104, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %105, !dbg !1648

105:                                              ; preds = %originalBBpart212, %86
  %106 = phi %struct.slotvec* [ null, %86 ], [ %96, %originalBBpart212 ], !dbg !1648
  %107 = bitcast %struct.slotvec* %106 to i8*, !dbg !1648
  %108 = load i32, i32* %13, align 4, !dbg !1650
  %109 = add nsw i32 %108, 1, !dbg !1651
  %110 = sext i32 %109 to i64, !dbg !1652
  %111 = mul i64 %110, 16, !dbg !1653
  %112 = call i8* @xrealloc(i8* %107, i64 %111), !dbg !1654
  %113 = bitcast i8* %112 to %struct.slotvec*, !dbg !1654
  store %struct.slotvec* %113, %struct.slotvec** %18, align 8, !dbg !1655
  store %struct.slotvec* %113, %struct.slotvec** @slotvec, align 8, !dbg !1656
  %114 = load i8, i8* %19, align 1, !dbg !1657
  %115 = trunc i8 %114 to i1, !dbg !1657
  br i1 %115, label %116, label %135, !dbg !1659

116:                                              ; preds = %105
  %117 = load i32, i32* @x.35
  %118 = load i32, i32* @y.36
  %119 = sub i32 %117, 1
  %120 = mul i32 %117, %119
  %121 = urem i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = icmp slt i32 %118, 10
  %124 = or i1 %122, %123
  br i1 %124, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %116, %originalBB14alteredBB
  %125 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !1660
  %126 = bitcast %struct.slotvec* %125 to i8*, !dbg !1661
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %126, i8* align 8 bitcast (%struct.slotvec* @slotvec0 to i8*), i64 16, i1 false), !dbg !1661
  %127 = load i32, i32* @x.35
  %128 = load i32, i32* @y.36
  %129 = sub i32 %127, 1
  %130 = mul i32 %127, %129
  %131 = urem i32 %130, 2
  %132 = icmp eq i32 %131, 0
  %133 = icmp slt i32 %128, 10
  %134 = or i1 %132, %133
  br i1 %134, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %135, !dbg !1662

135:                                              ; preds = %originalBBpart216, %105
  %136 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !1663
  %137 = load i32, i32* @nslots, align 4, !dbg !1664
  %138 = sext i32 %137 to i64, !dbg !1665
  %139 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %136, i64 %138, !dbg !1665
  %140 = bitcast %struct.slotvec* %139 to i8*, !dbg !1666
  %141 = load i32, i32* %13, align 4, !dbg !1667
  %142 = add nsw i32 %141, 1, !dbg !1668
  %143 = load i32, i32* @nslots, align 4, !dbg !1669
  %144 = sub nsw i32 %142, %143, !dbg !1670
  %145 = sext i32 %144 to i64, !dbg !1671
  %146 = mul i64 %145, 16, !dbg !1672
  call void @llvm.memset.p0i8.i64(i8* align 8 %140, i8 0, i64 %146, i1 false), !dbg !1666
  %147 = load i32, i32* %13, align 4, !dbg !1673
  %148 = add nsw i32 %147, 1, !dbg !1674
  store i32 %148, i32* @nslots, align 4, !dbg !1675
  br label %149, !dbg !1676

149:                                              ; preds = %135, %originalBBpart24
  call void @llvm.dbg.declare(metadata i64* %21, metadata !1677, metadata !DIExpression()), !dbg !1679
  %150 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !1680
  %151 = load i32, i32* %13, align 4, !dbg !1681
  %152 = sext i32 %151 to i64, !dbg !1680
  %153 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %150, i64 %152, !dbg !1680
  %154 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %153, i32 0, i32 0, !dbg !1682
  %155 = load i64, i64* %154, align 8, !dbg !1682
  store i64 %155, i64* %21, align 8, !dbg !1679
  call void @llvm.dbg.declare(metadata i8** %22, metadata !1683, metadata !DIExpression()), !dbg !1684
  %156 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !1685
  %157 = load i32, i32* %13, align 4, !dbg !1686
  %158 = sext i32 %157 to i64, !dbg !1685
  %159 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %156, i64 %158, !dbg !1685
  %160 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %159, i32 0, i32 1, !dbg !1687
  %161 = load i8*, i8** %160, align 8, !dbg !1687
  store i8* %161, i8** %22, align 8, !dbg !1684
  call void @llvm.dbg.declare(metadata i32* %23, metadata !1688, metadata !DIExpression()), !dbg !1689
  %162 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !1690
  %163 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %162, i32 0, i32 1, !dbg !1691
  %164 = load i32, i32* %163, align 4, !dbg !1691
  %165 = or i32 %164, 1, !dbg !1692
  store i32 %165, i32* %23, align 4, !dbg !1689
  call void @llvm.dbg.declare(metadata i64* %24, metadata !1693, metadata !DIExpression()), !dbg !1694
  %166 = load i8*, i8** %22, align 8, !dbg !1695
  %167 = load i64, i64* %21, align 8, !dbg !1696
  %168 = load i8*, i8** %14, align 8, !dbg !1697
  %169 = load i64, i64* %15, align 8, !dbg !1698
  %170 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !1699
  %171 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %170, i32 0, i32 0, !dbg !1700
  %172 = load i32, i32* %171, align 8, !dbg !1700
  %173 = load i32, i32* %23, align 4, !dbg !1701
  %174 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !1702
  %175 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %174, i32 0, i32 2, !dbg !1703
  %176 = getelementptr inbounds [8 x i32], [8 x i32]* %175, i64 0, i64 0, !dbg !1702
  %177 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !1704
  %178 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %177, i32 0, i32 3, !dbg !1705
  %179 = load i8*, i8** %178, align 8, !dbg !1705
  %180 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !1706
  %181 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %180, i32 0, i32 4, !dbg !1707
  %182 = load i8*, i8** %181, align 8, !dbg !1707
  %183 = call i64 @quotearg_buffer_restyled(i8* %166, i64 %167, i8* %168, i64 %169, i32 %172, i32 %173, i32* %176, i8* %179, i8* %182), !dbg !1708
  store i64 %183, i64* %24, align 8, !dbg !1694
  %184 = load i64, i64* %21, align 8, !dbg !1709
  %185 = load i64, i64* %24, align 8, !dbg !1711
  %186 = icmp ule i64 %184, %185, !dbg !1712
  br i1 %186, label %187, label %241, !dbg !1713

187:                                              ; preds = %149
  %188 = load i64, i64* %24, align 8, !dbg !1714
  %189 = add i64 %188, 1, !dbg !1716
  store i64 %189, i64* %21, align 8, !dbg !1717
  %190 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !1718
  %191 = load i32, i32* %13, align 4, !dbg !1719
  %192 = sext i32 %191 to i64, !dbg !1718
  %193 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %190, i64 %192, !dbg !1718
  %194 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %193, i32 0, i32 0, !dbg !1720
  store i64 %189, i64* %194, align 8, !dbg !1721
  %195 = load i8*, i8** %22, align 8, !dbg !1722
  %196 = icmp ne i8* %195, getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i64 0, i64 0), !dbg !1724
  br i1 %196, label %197, label %199, !dbg !1725

197:                                              ; preds = %187
  %198 = load i8*, i8** %22, align 8, !dbg !1726
  call void @free(i8* %198) #10, !dbg !1727
  br label %199, !dbg !1727

199:                                              ; preds = %197, %187
  %200 = load i32, i32* @x.35
  %201 = load i32, i32* @y.36
  %202 = sub i32 %200, 1
  %203 = mul i32 %200, %202
  %204 = urem i32 %203, 2
  %205 = icmp eq i32 %204, 0
  %206 = icmp slt i32 %201, 10
  %207 = or i1 %205, %206
  br i1 %207, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %199, %originalBB18alteredBB
  %208 = load i64, i64* %21, align 8, !dbg !1728
  %209 = call noalias i8* @xcharalloc(i64 %208), !dbg !1729
  store i8* %209, i8** %22, align 8, !dbg !1730
  %210 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !1731
  %211 = load i32, i32* %13, align 4, !dbg !1732
  %212 = sext i32 %211 to i64, !dbg !1731
  %213 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %210, i64 %212, !dbg !1731
  %214 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %213, i32 0, i32 1, !dbg !1733
  store i8* %209, i8** %214, align 8, !dbg !1734
  %215 = load i8*, i8** %22, align 8, !dbg !1735
  %216 = load i64, i64* %21, align 8, !dbg !1736
  %217 = load i8*, i8** %14, align 8, !dbg !1737
  %218 = load i64, i64* %15, align 8, !dbg !1738
  %219 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !1739
  %220 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %219, i32 0, i32 0, !dbg !1740
  %221 = load i32, i32* %220, align 8, !dbg !1740
  %222 = load i32, i32* %23, align 4, !dbg !1741
  %223 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !1742
  %224 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %223, i32 0, i32 2, !dbg !1743
  %225 = getelementptr inbounds [8 x i32], [8 x i32]* %224, i64 0, i64 0, !dbg !1742
  %226 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !1744
  %227 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %226, i32 0, i32 3, !dbg !1745
  %228 = load i8*, i8** %227, align 8, !dbg !1745
  %229 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !1746
  %230 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %229, i32 0, i32 4, !dbg !1747
  %231 = load i8*, i8** %230, align 8, !dbg !1747
  %232 = call i64 @quotearg_buffer_restyled(i8* %215, i64 %216, i8* %217, i64 %218, i32 %221, i32 %222, i32* %225, i8* %228, i8* %231), !dbg !1748
  %233 = load i32, i32* @x.35
  %234 = load i32, i32* @y.36
  %235 = sub i32 %233, 1
  %236 = mul i32 %233, %235
  %237 = urem i32 %236, 2
  %238 = icmp eq i32 %237, 0
  %239 = icmp slt i32 %234, 10
  %240 = or i1 %238, %239
  br i1 %240, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %241, !dbg !1749

241:                                              ; preds = %originalBBpart220, %149
  %242 = load i32, i32* @x.35
  %243 = load i32, i32* @y.36
  %244 = sub i32 %242, 1
  %245 = mul i32 %242, %244
  %246 = urem i32 %245, 2
  %247 = icmp eq i32 %246, 0
  %248 = icmp slt i32 %243, 10
  %249 = or i1 %247, %248
  br i1 %249, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %241, %originalBB22alteredBB
  %250 = load i32, i32* %17, align 4, !dbg !1750
  %251 = call i32* @__errno_location() #15, !dbg !1751
  store i32 %250, i32* %251, align 4, !dbg !1752
  %252 = load i8*, i8** %22, align 8, !dbg !1753
  %253 = load i32, i32* @x.35
  %254 = load i32, i32* @y.36
  %255 = sub i32 %253, 1
  %256 = mul i32 %253, %255
  %257 = urem i32 %256, 2
  %258 = icmp eq i32 %257, 0
  %259 = icmp slt i32 %254, 10
  %260 = or i1 %258, %259
  br i1 %260, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  ret i8* %252, !dbg !1754

originalBBalteredBB:                              ; preds = %originalBB, %4
  %261 = alloca i32, align 4
  %262 = alloca i8*, align 8
  %263 = alloca i64, align 8
  %264 = alloca %struct.quoting_options*, align 8
  %265 = alloca i32, align 4
  %266 = alloca %struct.slotvec*, align 8
  %267 = alloca i8, align 1
  %268 = alloca i32, align 4
  %269 = alloca i64, align 8
  %270 = alloca i8*, align 8
  %271 = alloca i32, align 4
  %272 = alloca i64, align 8
  store i32 %0, i32* %261, align 4
  call void @llvm.dbg.declare(metadata i32* %261, metadata !1755, metadata !DIExpression()), !dbg !1612
  store i8* %1, i8** %262, align 8
  call void @llvm.dbg.declare(metadata i8** %262, metadata !1791, metadata !DIExpression()), !dbg !1614
  store i64 %2, i64* %263, align 8
  call void @llvm.dbg.declare(metadata i64* %263, metadata !1792, metadata !DIExpression()), !dbg !1616
  store %struct.quoting_options* %3, %struct.quoting_options** %264, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %264, metadata !1793, metadata !DIExpression()), !dbg !1618
  call void @llvm.dbg.declare(metadata i32* %265, metadata !1794, metadata !DIExpression()), !dbg !1620
  %273 = call i32* @__errno_location() #15, !dbg !1621
  %274 = load i32, i32* %273, align 4, !dbg !1621
  store i32 %274, i32* %265, align 4, !dbg !1620
  call void @llvm.dbg.declare(metadata %struct.slotvec** %266, metadata !1795, metadata !DIExpression()), !dbg !1623
  %275 = load %struct.slotvec*, %struct.slotvec** @slotvec, align 8, !dbg !1624
  store %struct.slotvec* %275, %struct.slotvec** %266, align 8, !dbg !1623
  %276 = load i32, i32* %261, align 4, !dbg !1625
  %277 = icmp slt i32 %276, 0, !dbg !1627
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %39
  %278 = load i32, i32* @nslots, align 4, !dbg !1630
  %279 = load i32, i32* %13, align 4, !dbg !1632
  %280 = icmp sle i32 %278, %279, !dbg !1633
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %59
  %281 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !1638
  %282 = icmp eq %struct.slotvec* %281, @slotvec0, !dbg !1639
  %283 = zext i1 %282 to i8, !dbg !1637
  store i8 %283, i8* %19, align 1, !dbg !1637
  call void @llvm.dbg.declare(metadata !4, metadata !1796, metadata !DIExpression()), !dbg !1641
  store i32 2147483646, i32* %20, align 4, !dbg !1641
  %284 = load i32, i32* %20, align 4, !dbg !1642
  %285 = load i32, i32* %13, align 4, !dbg !1644
  %286 = icmp slt i32 %284, %285, !dbg !1645
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %87
  %287 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !1649
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %116
  %288 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !1660
  %289 = bitcast %struct.slotvec* %288 to i8*, !dbg !1661
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %289, i8* align 8 bitcast (%struct.slotvec* @slotvec0 to i8*), i64 16, i1 false), !dbg !1661
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %199
  %290 = load i64, i64* %21, align 8, !dbg !1728
  %291 = call noalias i8* @xcharalloc(i64 %290), !dbg !1729
  store i8* %291, i8** %22, align 8, !dbg !1730
  %292 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !1731
  %293 = load i32, i32* %13, align 4, !dbg !1732
  %294 = sext i32 %293 to i64, !dbg !1731
  %295 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %292, i64 %294, !dbg !1731
  %296 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %295, i32 0, i32 1, !dbg !1733
  store i8* %291, i8** %296, align 8, !dbg !1734
  %297 = load i8*, i8** %22, align 8, !dbg !1735
  %298 = load i64, i64* %21, align 8, !dbg !1736
  %299 = load i8*, i8** %14, align 8, !dbg !1737
  %300 = load i64, i64* %15, align 8, !dbg !1738
  %301 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !1739
  %302 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %301, i32 0, i32 0, !dbg !1740
  %303 = load i32, i32* %302, align 8, !dbg !1740
  %304 = load i32, i32* %23, align 4, !dbg !1741
  %305 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !1742
  %306 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %305, i32 0, i32 2, !dbg !1743
  %307 = getelementptr inbounds [8 x i32], [8 x i32]* %306, i64 0, i64 0, !dbg !1742
  %308 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !1744
  %309 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %308, i32 0, i32 3, !dbg !1745
  %310 = load i8*, i8** %309, align 8, !dbg !1745
  %311 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !1746
  %312 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %311, i32 0, i32 4, !dbg !1747
  %313 = load i8*, i8** %312, align 8, !dbg !1747
  %314 = call i64 @quotearg_buffer_restyled(i8* %297, i64 %298, i8* %299, i64 %300, i32 %303, i32 %304, i32* %307, i8* %310, i8* %313), !dbg !1748
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %241
  %315 = load i32, i32* %17, align 4, !dbg !1750
  %316 = call i32* @__errno_location() #15, !dbg !1751
  store i32 %315, i32* %316, align 4, !dbg !1752
  %317 = load i8*, i8** %22, align 8, !dbg !1753
  br label %originalBB22
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @quotearg_buffer_restyled(i8*, i64, i8*, i64, i32, i32, i32*, i8*, i8*) #4 !dbg !1834 {
  %10 = alloca i64, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i64, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i64, align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32*, align 8
  %18 = alloca i8*, align 8
  %19 = alloca i8*, align 8
  %20 = alloca i64, align 8
  %21 = alloca i64, align 8
  %22 = alloca i64, align 8
  %23 = alloca i8*, align 8
  %24 = alloca i64, align 8
  %25 = alloca i8, align 1
  %26 = alloca i8, align 1
  %27 = alloca i8, align 1
  %28 = alloca i8, align 1
  %29 = alloca i8, align 1
  %30 = alloca i8, align 1
  %31 = alloca i8, align 1
  %32 = alloca i8, align 1
  %33 = alloca i8, align 1
  %34 = alloca i8, align 1
  %35 = alloca i8, align 1
  %36 = alloca i64, align 8
  %37 = alloca i8, align 1
  %38 = alloca %struct.__mbstate_t, align 4
  %39 = alloca i32, align 4
  %40 = alloca i64, align 8
  %41 = alloca i64, align 8
  %42 = alloca i64, align 8
  store i8* %0, i8** %11, align 8
  call void @llvm.dbg.declare(metadata i8** %11, metadata !1839, metadata !DIExpression()), !dbg !1840
  store i64 %1, i64* %12, align 8
  call void @llvm.dbg.declare(metadata i64* %12, metadata !1841, metadata !DIExpression()), !dbg !1842
  store i8* %2, i8** %13, align 8
  call void @llvm.dbg.declare(metadata i8** %13, metadata !1843, metadata !DIExpression()), !dbg !1844
  store i64 %3, i64* %14, align 8
  call void @llvm.dbg.declare(metadata i64* %14, metadata !1845, metadata !DIExpression()), !dbg !1846
  store i32 %4, i32* %15, align 4
  call void @llvm.dbg.declare(metadata i32* %15, metadata !1847, metadata !DIExpression()), !dbg !1848
  store i32 %5, i32* %16, align 4
  call void @llvm.dbg.declare(metadata i32* %16, metadata !1849, metadata !DIExpression()), !dbg !1850
  store i32* %6, i32** %17, align 8
  call void @llvm.dbg.declare(metadata i32** %17, metadata !1851, metadata !DIExpression()), !dbg !1852
  store i8* %7, i8** %18, align 8
  call void @llvm.dbg.declare(metadata i8** %18, metadata !1853, metadata !DIExpression()), !dbg !1854
  store i8* %8, i8** %19, align 8
  call void @llvm.dbg.declare(metadata i8** %19, metadata !1855, metadata !DIExpression()), !dbg !1856
  call void @llvm.dbg.declare(metadata i64* %20, metadata !1857, metadata !DIExpression()), !dbg !1858
  call void @llvm.dbg.declare(metadata i64* %21, metadata !1859, metadata !DIExpression()), !dbg !1860
  store i64 0, i64* %21, align 8, !dbg !1860
  call void @llvm.dbg.declare(metadata i64* %22, metadata !1861, metadata !DIExpression()), !dbg !1862
  store i64 0, i64* %22, align 8, !dbg !1862
  call void @llvm.dbg.declare(metadata i8** %23, metadata !1863, metadata !DIExpression()), !dbg !1864
  store i8* null, i8** %23, align 8, !dbg !1864
  call void @llvm.dbg.declare(metadata i64* %24, metadata !1865, metadata !DIExpression()), !dbg !1866
  store i64 0, i64* %24, align 8, !dbg !1866
  call void @llvm.dbg.declare(metadata i8* %25, metadata !1867, metadata !DIExpression()), !dbg !1868
  store i8 0, i8* %25, align 1, !dbg !1868
  call void @llvm.dbg.declare(metadata i8* %26, metadata !1869, metadata !DIExpression()), !dbg !1870
  %43 = call i64 @__ctype_get_mb_cur_max() #10, !dbg !1871
  %44 = icmp eq i64 %43, 1, !dbg !1872
  %45 = zext i1 %44 to i8, !dbg !1870
  store i8 %45, i8* %26, align 1, !dbg !1870
  call void @llvm.dbg.declare(metadata i8* %27, metadata !1873, metadata !DIExpression()), !dbg !1874
  %46 = load i32, i32* %16, align 4, !dbg !1875
  %47 = and i32 %46, 2, !dbg !1876
  %48 = icmp ne i32 %47, 0, !dbg !1877
  %49 = zext i1 %48 to i8, !dbg !1874
  store i8 %49, i8* %27, align 1, !dbg !1874
  call void @llvm.dbg.declare(metadata i8* %28, metadata !1878, metadata !DIExpression()), !dbg !1879
  store i8 0, i8* %28, align 1, !dbg !1879
  call void @llvm.dbg.declare(metadata i8* %29, metadata !1880, metadata !DIExpression()), !dbg !1881
  store i8 0, i8* %29, align 1, !dbg !1881
  call void @llvm.dbg.declare(metadata i8* %30, metadata !1882, metadata !DIExpression()), !dbg !1883
  store i8 1, i8* %30, align 1, !dbg !1883
  br label %50, !dbg !1884

50:                                               ; preds = %3170, %9
  call void @llvm.dbg.label(metadata !1885), !dbg !1886
  %51 = load i32, i32* %15, align 4, !dbg !1887
  switch i32 %51, label %360 [
    i32 6, label %52
    i32 5, label %69
    i32 7, label %102
    i32 8, label %119
    i32 9, label %119
    i32 10, label %119
    i32 3, label %239
    i32 1, label %240
    i32 4, label %241
    i32 2, label %294
    i32 0, label %359
  ], !dbg !1888

52:                                               ; preds = %50
  %53 = load i32, i32* @x.37
  %54 = load i32, i32* @y.38
  %55 = sub i32 %53, 1
  %56 = mul i32 %53, %55
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %54, 10
  %60 = or i1 %58, %59
  br i1 %60, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %52, %originalBBalteredBB
  store i32 5, i32* %15, align 4, !dbg !1889
  store i8 1, i8* %27, align 1, !dbg !1891
  %61 = load i32, i32* @x.37
  %62 = load i32, i32* @y.38
  %63 = sub i32 %61, 1
  %64 = mul i32 %61, %63
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %62, 10
  %68 = or i1 %66, %67
  br i1 %68, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %69, !dbg !1892

69:                                               ; preds = %originalBBpart2, %50
  %70 = load i8, i8* %27, align 1, !dbg !1893
  %71 = trunc i8 %70 to i1, !dbg !1893
  br i1 %71, label %101, label %72, !dbg !1895

72:                                               ; preds = %69
  br label %73, !dbg !1896

73:                                               ; preds = %72
  %74 = load i32, i32* @x.37
  %75 = load i32, i32* @y.38
  %76 = sub i32 %74, 1
  %77 = mul i32 %74, %76
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %75, 10
  %81 = or i1 %79, %80
  br i1 %81, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %73, %originalBB1alteredBB
  %82 = load i64, i64* %21, align 8, !dbg !1897
  %83 = load i64, i64* %12, align 8, !dbg !1897
  %84 = icmp ult i64 %82, %83, !dbg !1897
  %85 = load i32, i32* @x.37
  %86 = load i32, i32* @y.38
  %87 = sub i32 %85, 1
  %88 = mul i32 %85, %87
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %86, 10
  %92 = or i1 %90, %91
  br i1 %92, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %84, label %93, label %97, !dbg !1900

93:                                               ; preds = %originalBBpart24
  %94 = load i8*, i8** %11, align 8, !dbg !1897
  %95 = load i64, i64* %21, align 8, !dbg !1897
  %96 = getelementptr inbounds i8, i8* %94, i64 %95, !dbg !1897
  store i8 34, i8* %96, align 1, !dbg !1897
  br label %97, !dbg !1897

97:                                               ; preds = %93, %originalBBpart24
  %98 = load i64, i64* %21, align 8, !dbg !1900
  %99 = add i64 %98, 1, !dbg !1900
  store i64 %99, i64* %21, align 8, !dbg !1900
  br label %100, !dbg !1900

100:                                              ; preds = %97
  br label %101, !dbg !1900

101:                                              ; preds = %100, %69
  store i8 1, i8* %25, align 1, !dbg !1901
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.85, i64 0, i64 0), i8** %23, align 8, !dbg !1902
  store i64 1, i64* %24, align 8, !dbg !1903
  br label %361, !dbg !1904

102:                                              ; preds = %50
  %103 = load i32, i32* @x.37
  %104 = load i32, i32* @y.38
  %105 = sub i32 %103, 1
  %106 = mul i32 %103, %105
  %107 = urem i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %104, 10
  %110 = or i1 %108, %109
  br i1 %110, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %102, %originalBB6alteredBB
  store i8 1, i8* %25, align 1, !dbg !1905
  store i8 0, i8* %27, align 1, !dbg !1906
  %111 = load i32, i32* @x.37
  %112 = load i32, i32* @y.38
  %113 = sub i32 %111, 1
  %114 = mul i32 %111, %113
  %115 = urem i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %112, 10
  %118 = or i1 %116, %117
  br i1 %118, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %361, !dbg !1907

119:                                              ; preds = %50, %50, %50
  %120 = load i32, i32* @x.37
  %121 = load i32, i32* @y.38
  %122 = sub i32 %120, 1
  %123 = mul i32 %120, %122
  %124 = urem i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = icmp slt i32 %121, 10
  %127 = or i1 %125, %126
  br i1 %127, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %119, %originalBB10alteredBB
  %128 = load i32, i32* %15, align 4, !dbg !1908
  %129 = icmp ne i32 %128, 10, !dbg !1911
  %130 = load i32, i32* @x.37
  %131 = load i32, i32* @y.38
  %132 = sub i32 %130, 1
  %133 = mul i32 %130, %132
  %134 = urem i32 %133, 2
  %135 = icmp eq i32 %134, 0
  %136 = icmp slt i32 %131, 10
  %137 = or i1 %135, %136
  br i1 %137, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %129, label %138, label %159, !dbg !1912

138:                                              ; preds = %originalBBpart212
  %139 = load i32, i32* @x.37
  %140 = load i32, i32* @y.38
  %141 = sub i32 %139, 1
  %142 = mul i32 %139, %141
  %143 = urem i32 %142, 2
  %144 = icmp eq i32 %143, 0
  %145 = icmp slt i32 %140, 10
  %146 = or i1 %144, %145
  br i1 %146, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %138, %originalBB14alteredBB
  %147 = load i32, i32* %15, align 4, !dbg !1913
  %148 = call i8* @gettext_quote(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11.86, i64 0, i64 0), i32 %147), !dbg !1915
  store i8* %148, i8** %18, align 8, !dbg !1916
  %149 = load i32, i32* %15, align 4, !dbg !1917
  %150 = call i8* @gettext_quote(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.87, i64 0, i64 0), i32 %149), !dbg !1918
  store i8* %150, i8** %19, align 8, !dbg !1919
  %151 = load i32, i32* @x.37
  %152 = load i32, i32* @y.38
  %153 = sub i32 %151, 1
  %154 = mul i32 %151, %153
  %155 = urem i32 %154, 2
  %156 = icmp eq i32 %155, 0
  %157 = icmp slt i32 %152, 10
  %158 = or i1 %156, %157
  br i1 %158, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %159, !dbg !1920

159:                                              ; preds = %originalBBpart216, %originalBBpart212
  %160 = load i32, i32* @x.37
  %161 = load i32, i32* @y.38
  %162 = sub i32 %160, 1
  %163 = mul i32 %160, %162
  %164 = urem i32 %163, 2
  %165 = icmp eq i32 %164, 0
  %166 = icmp slt i32 %161, 10
  %167 = or i1 %165, %166
  br i1 %167, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %159, %originalBB18alteredBB
  %168 = load i8, i8* %27, align 1, !dbg !1921
  %169 = trunc i8 %168 to i1, !dbg !1921
  %170 = load i32, i32* @x.37
  %171 = load i32, i32* @y.38
  %172 = sub i32 %170, 1
  %173 = mul i32 %170, %172
  %174 = urem i32 %173, 2
  %175 = icmp eq i32 %174, 0
  %176 = icmp slt i32 %171, 10
  %177 = or i1 %175, %176
  br i1 %177, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br i1 %169, label %235, label %178, !dbg !1923

178:                                              ; preds = %originalBBpart220
  %179 = load i8*, i8** %18, align 8, !dbg !1924
  store i8* %179, i8** %23, align 8, !dbg !1926
  br label %180, !dbg !1927

180:                                              ; preds = %231, %178
  %181 = load i32, i32* @x.37
  %182 = load i32, i32* @y.38
  %183 = sub i32 %181, 1
  %184 = mul i32 %181, %183
  %185 = urem i32 %184, 2
  %186 = icmp eq i32 %185, 0
  %187 = icmp slt i32 %182, 10
  %188 = or i1 %186, %187
  br i1 %188, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %180, %originalBB22alteredBB
  %189 = load i8*, i8** %23, align 8, !dbg !1928
  %190 = load i8, i8* %189, align 1, !dbg !1930
  %191 = icmp ne i8 %190, 0, !dbg !1931
  %192 = load i32, i32* @x.37
  %193 = load i32, i32* @y.38
  %194 = sub i32 %192, 1
  %195 = mul i32 %192, %194
  %196 = urem i32 %195, 2
  %197 = icmp eq i32 %196, 0
  %198 = icmp slt i32 %193, 10
  %199 = or i1 %197, %198
  br i1 %199, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br i1 %191, label %200, label %234, !dbg !1931

200:                                              ; preds = %originalBBpart224
  br label %201, !dbg !1932

201:                                              ; preds = %200
  %202 = load i64, i64* %21, align 8, !dbg !1933
  %203 = load i64, i64* %12, align 8, !dbg !1933
  %204 = icmp ult i64 %202, %203, !dbg !1933
  br i1 %204, label %205, label %227, !dbg !1936

205:                                              ; preds = %201
  %206 = load i32, i32* @x.37
  %207 = load i32, i32* @y.38
  %208 = sub i32 %206, 1
  %209 = mul i32 %206, %208
  %210 = urem i32 %209, 2
  %211 = icmp eq i32 %210, 0
  %212 = icmp slt i32 %207, 10
  %213 = or i1 %211, %212
  br i1 %213, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %205, %originalBB26alteredBB
  %214 = load i8*, i8** %23, align 8, !dbg !1933
  %215 = load i8, i8* %214, align 1, !dbg !1933
  %216 = load i8*, i8** %11, align 8, !dbg !1933
  %217 = load i64, i64* %21, align 8, !dbg !1933
  %218 = getelementptr inbounds i8, i8* %216, i64 %217, !dbg !1933
  store i8 %215, i8* %218, align 1, !dbg !1933
  %219 = load i32, i32* @x.37
  %220 = load i32, i32* @y.38
  %221 = sub i32 %219, 1
  %222 = mul i32 %219, %221
  %223 = urem i32 %222, 2
  %224 = icmp eq i32 %223, 0
  %225 = icmp slt i32 %220, 10
  %226 = or i1 %224, %225
  br i1 %226, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br label %227, !dbg !1933

227:                                              ; preds = %originalBBpart228, %201
  %228 = load i64, i64* %21, align 8, !dbg !1936
  %229 = add i64 %228, 1, !dbg !1936
  store i64 %229, i64* %21, align 8, !dbg !1936
  br label %230, !dbg !1936

230:                                              ; preds = %227
  br label %231, !dbg !1936

231:                                              ; preds = %230
  %232 = load i8*, i8** %23, align 8, !dbg !1937
  %233 = getelementptr inbounds i8, i8* %232, i32 1, !dbg !1937
  store i8* %233, i8** %23, align 8, !dbg !1937
  br label %180, !dbg !1938, !llvm.loop !1939

234:                                              ; preds = %originalBBpart224
  br label %235, !dbg !1940

235:                                              ; preds = %234, %originalBBpart220
  store i8 1, i8* %25, align 1, !dbg !1941
  %236 = load i8*, i8** %19, align 8, !dbg !1942
  store i8* %236, i8** %23, align 8, !dbg !1943
  %237 = load i8*, i8** %23, align 8, !dbg !1944
  %238 = call i64 @strlen(i8* %237) #13, !dbg !1945
  store i64 %238, i64* %24, align 8, !dbg !1946
  br label %361, !dbg !1947

239:                                              ; preds = %50
  store i8 1, i8* %25, align 1, !dbg !1948
  br label %240, !dbg !1949

240:                                              ; preds = %239, %50
  store i8 1, i8* %27, align 1, !dbg !1950
  br label %241, !dbg !1951

241:                                              ; preds = %240, %50
  %242 = load i32, i32* @x.37
  %243 = load i32, i32* @y.38
  %244 = sub i32 %242, 1
  %245 = mul i32 %242, %244
  %246 = urem i32 %245, 2
  %247 = icmp eq i32 %246, 0
  %248 = icmp slt i32 %243, 10
  %249 = or i1 %247, %248
  br i1 %249, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %241, %originalBB30alteredBB
  %250 = load i8, i8* %27, align 1, !dbg !1952
  %251 = trunc i8 %250 to i1, !dbg !1952
  %252 = load i32, i32* @x.37
  %253 = load i32, i32* @y.38
  %254 = sub i32 %252, 1
  %255 = mul i32 %252, %254
  %256 = urem i32 %255, 2
  %257 = icmp eq i32 %256, 0
  %258 = icmp slt i32 %253, 10
  %259 = or i1 %257, %258
  br i1 %259, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br i1 %251, label %277, label %260, !dbg !1954

260:                                              ; preds = %originalBBpart232
  %261 = load i32, i32* @x.37
  %262 = load i32, i32* @y.38
  %263 = sub i32 %261, 1
  %264 = mul i32 %261, %263
  %265 = urem i32 %264, 2
  %266 = icmp eq i32 %265, 0
  %267 = icmp slt i32 %262, 10
  %268 = or i1 %266, %267
  br i1 %268, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %260, %originalBB34alteredBB
  store i8 1, i8* %25, align 1, !dbg !1955
  %269 = load i32, i32* @x.37
  %270 = load i32, i32* @y.38
  %271 = sub i32 %269, 1
  %272 = mul i32 %269, %271
  %273 = urem i32 %272, 2
  %274 = icmp eq i32 %273, 0
  %275 = icmp slt i32 %270, 10
  %276 = or i1 %274, %275
  br i1 %276, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  br label %277, !dbg !1956

277:                                              ; preds = %originalBBpart236, %originalBBpart232
  %278 = load i32, i32* @x.37
  %279 = load i32, i32* @y.38
  %280 = sub i32 %278, 1
  %281 = mul i32 %278, %280
  %282 = urem i32 %281, 2
  %283 = icmp eq i32 %282, 0
  %284 = icmp slt i32 %279, 10
  %285 = or i1 %283, %284
  br i1 %285, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %277, %originalBB38alteredBB
  %286 = load i32, i32* @x.37
  %287 = load i32, i32* @y.38
  %288 = sub i32 %286, 1
  %289 = mul i32 %286, %288
  %290 = urem i32 %289, 2
  %291 = icmp eq i32 %290, 0
  %292 = icmp slt i32 %287, 10
  %293 = or i1 %291, %292
  br i1 %293, label %originalBBpart240, label %originalBB38alteredBB

originalBBpart240:                                ; preds = %originalBB38
  br label %294, !dbg !1957

294:                                              ; preds = %originalBBpart240, %50
  store i32 2, i32* %15, align 4, !dbg !1958
  %295 = load i8, i8* %27, align 1, !dbg !1959
  %296 = trunc i8 %295 to i1, !dbg !1959
  br i1 %296, label %342, label %297, !dbg !1961

297:                                              ; preds = %294
  %298 = load i32, i32* @x.37
  %299 = load i32, i32* @y.38
  %300 = sub i32 %298, 1
  %301 = mul i32 %298, %300
  %302 = urem i32 %301, 2
  %303 = icmp eq i32 %302, 0
  %304 = icmp slt i32 %299, 10
  %305 = or i1 %303, %304
  br i1 %305, label %originalBB42, label %originalBB42alteredBB

originalBB42:                                     ; preds = %297, %originalBB42alteredBB
  %306 = load i32, i32* @x.37
  %307 = load i32, i32* @y.38
  %308 = sub i32 %306, 1
  %309 = mul i32 %306, %308
  %310 = urem i32 %309, 2
  %311 = icmp eq i32 %310, 0
  %312 = icmp slt i32 %307, 10
  %313 = or i1 %311, %312
  br i1 %313, label %originalBBpart244, label %originalBB42alteredBB

originalBBpart244:                                ; preds = %originalBB42
  br label %314, !dbg !1962

314:                                              ; preds = %originalBBpart244
  %315 = load i64, i64* %21, align 8, !dbg !1963
  %316 = load i64, i64* %12, align 8, !dbg !1963
  %317 = icmp ult i64 %315, %316, !dbg !1963
  br i1 %317, label %318, label %322, !dbg !1966

318:                                              ; preds = %314
  %319 = load i8*, i8** %11, align 8, !dbg !1963
  %320 = load i64, i64* %21, align 8, !dbg !1963
  %321 = getelementptr inbounds i8, i8* %319, i64 %320, !dbg !1963
  store i8 39, i8* %321, align 1, !dbg !1963
  br label %322, !dbg !1963

322:                                              ; preds = %318, %314
  %323 = load i32, i32* @x.37
  %324 = load i32, i32* @y.38
  %325 = sub i32 %323, 1
  %326 = mul i32 %323, %325
  %327 = urem i32 %326, 2
  %328 = icmp eq i32 %327, 0
  %329 = icmp slt i32 %324, 10
  %330 = or i1 %328, %329
  br i1 %330, label %originalBB46, label %originalBB46alteredBB

originalBB46:                                     ; preds = %322, %originalBB46alteredBB
  %331 = load i64, i64* %21, align 8, !dbg !1966
  %332 = add i64 %331, 1, !dbg !1966
  store i64 %332, i64* %21, align 8, !dbg !1966
  %333 = load i32, i32* @x.37
  %334 = load i32, i32* @y.38
  %335 = sub i32 %333, 1
  %336 = mul i32 %333, %335
  %337 = urem i32 %336, 2
  %338 = icmp eq i32 %337, 0
  %339 = icmp slt i32 %334, 10
  %340 = or i1 %338, %339
  br i1 %340, label %originalBBpart261, label %originalBB46alteredBB

originalBBpart261:                                ; preds = %originalBB46
  br label %341, !dbg !1966

341:                                              ; preds = %originalBBpart261
  br label %342, !dbg !1966

342:                                              ; preds = %341, %294
  %343 = load i32, i32* @x.37
  %344 = load i32, i32* @y.38
  %345 = sub i32 %343, 1
  %346 = mul i32 %343, %345
  %347 = urem i32 %346, 2
  %348 = icmp eq i32 %347, 0
  %349 = icmp slt i32 %344, 10
  %350 = or i1 %348, %349
  br i1 %350, label %originalBB63, label %originalBB63alteredBB

originalBB63:                                     ; preds = %342, %originalBB63alteredBB
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.87, i64 0, i64 0), i8** %23, align 8, !dbg !1967
  store i64 1, i64* %24, align 8, !dbg !1968
  %351 = load i32, i32* @x.37
  %352 = load i32, i32* @y.38
  %353 = sub i32 %351, 1
  %354 = mul i32 %351, %353
  %355 = urem i32 %354, 2
  %356 = icmp eq i32 %355, 0
  %357 = icmp slt i32 %352, 10
  %358 = or i1 %356, %357
  br i1 %358, label %originalBBpart265, label %originalBB63alteredBB

originalBBpart265:                                ; preds = %originalBB63
  br label %361, !dbg !1969

359:                                              ; preds = %50
  store i8 0, i8* %27, align 1, !dbg !1970
  br label %361, !dbg !1971

360:                                              ; preds = %50
  call void @abort() #12, !dbg !1972
  unreachable, !dbg !1972

361:                                              ; preds = %359, %originalBBpart265, %235, %originalBBpart28, %101
  store i64 0, i64* %20, align 8, !dbg !1973
  br label %362, !dbg !1975

362:                                              ; preds = %3033, %361
  %363 = load i64, i64* %14, align 8, !dbg !1976
  %364 = icmp eq i64 %363, -1, !dbg !1978
  br i1 %364, label %365, label %389, !dbg !1976

365:                                              ; preds = %362
  %366 = load i32, i32* @x.37
  %367 = load i32, i32* @y.38
  %368 = sub i32 %366, 1
  %369 = mul i32 %366, %368
  %370 = urem i32 %369, 2
  %371 = icmp eq i32 %370, 0
  %372 = icmp slt i32 %367, 10
  %373 = or i1 %371, %372
  br i1 %373, label %originalBB67, label %originalBB67alteredBB

originalBB67:                                     ; preds = %365, %originalBB67alteredBB
  %374 = load i8*, i8** %13, align 8, !dbg !1979
  %375 = load i64, i64* %20, align 8, !dbg !1980
  %376 = getelementptr inbounds i8, i8* %374, i64 %375, !dbg !1979
  %377 = load i8, i8* %376, align 1, !dbg !1979
  %378 = sext i8 %377 to i32, !dbg !1979
  %379 = icmp eq i32 %378, 0, !dbg !1981
  %380 = zext i1 %379 to i32, !dbg !1981
  %381 = load i32, i32* @x.37
  %382 = load i32, i32* @y.38
  %383 = sub i32 %381, 1
  %384 = mul i32 %381, %383
  %385 = urem i32 %384, 2
  %386 = icmp eq i32 %385, 0
  %387 = icmp slt i32 %382, 10
  %388 = or i1 %386, %387
  br i1 %388, label %originalBBpart269, label %originalBB67alteredBB

originalBBpart269:                                ; preds = %originalBB67
  br label %394, !dbg !1976

389:                                              ; preds = %362
  %390 = load i64, i64* %20, align 8, !dbg !1982
  %391 = load i64, i64* %14, align 8, !dbg !1983
  %392 = icmp eq i64 %390, %391, !dbg !1984
  %393 = zext i1 %392 to i32, !dbg !1984
  br label %394, !dbg !1976

394:                                              ; preds = %389, %originalBBpart269
  %395 = phi i32 [ %380, %originalBBpart269 ], [ %393, %389 ], !dbg !1976
  %396 = load i32, i32* @x.37
  %397 = load i32, i32* @y.38
  %398 = sub i32 %396, 1
  %399 = mul i32 %396, %398
  %400 = urem i32 %399, 2
  %401 = icmp eq i32 %400, 0
  %402 = icmp slt i32 %397, 10
  %403 = or i1 %401, %402
  br i1 %403, label %originalBB71, label %originalBB71alteredBB

originalBB71:                                     ; preds = %394, %originalBB71alteredBB
  %404 = icmp ne i32 %395, 0, !dbg !1985
  %405 = xor i1 %404, true, !dbg !1985
  %406 = load i32, i32* @x.37
  %407 = load i32, i32* @y.38
  %408 = sub i32 %406, 1
  %409 = mul i32 %406, %408
  %410 = urem i32 %409, 2
  %411 = icmp eq i32 %410, 0
  %412 = icmp slt i32 %407, 10
  %413 = or i1 %411, %412
  br i1 %413, label %originalBBpart279, label %originalBB71alteredBB

originalBBpart279:                                ; preds = %originalBB71
  br i1 %405, label %414, label %3036, !dbg !1986

414:                                              ; preds = %originalBBpart279
  call void @llvm.dbg.declare(metadata i8* %31, metadata !1987, metadata !DIExpression()), !dbg !1989
  call void @llvm.dbg.declare(metadata i8* %32, metadata !1990, metadata !DIExpression()), !dbg !1991
  call void @llvm.dbg.declare(metadata i8* %33, metadata !1992, metadata !DIExpression()), !dbg !1993
  store i8 0, i8* %33, align 1, !dbg !1993
  call void @llvm.dbg.declare(metadata i8* %34, metadata !1994, metadata !DIExpression()), !dbg !1995
  store i8 0, i8* %34, align 1, !dbg !1995
  call void @llvm.dbg.declare(metadata i8* %35, metadata !1996, metadata !DIExpression()), !dbg !1997
  store i8 0, i8* %35, align 1, !dbg !1997
  %415 = load i8, i8* %25, align 1, !dbg !1998
  %416 = trunc i8 %415 to i1, !dbg !1998
  br i1 %416, label %417, label %485, !dbg !2000

417:                                              ; preds = %414
  %418 = load i32, i32* %15, align 4, !dbg !2001
  %419 = icmp ne i32 %418, 2, !dbg !2002
  br i1 %419, label %420, label %485, !dbg !2003

420:                                              ; preds = %417
  %421 = load i64, i64* %24, align 8, !dbg !2004
  %422 = icmp ne i64 %421, 0, !dbg !2004
  br i1 %422, label %423, label %485, !dbg !2005

423:                                              ; preds = %420
  %424 = load i64, i64* %20, align 8, !dbg !2006
  %425 = load i64, i64* %24, align 8, !dbg !2007
  %426 = add i64 %424, %425, !dbg !2008
  %427 = load i64, i64* %14, align 8, !dbg !2009
  %428 = icmp eq i64 %427, -1, !dbg !2010
  br i1 %428, label %429, label %451, !dbg !2011

429:                                              ; preds = %423
  %430 = load i64, i64* %24, align 8, !dbg !2012
  %431 = icmp ult i64 1, %430, !dbg !2013
  br i1 %431, label %432, label %451, !dbg !2009

432:                                              ; preds = %429
  %433 = load i32, i32* @x.37
  %434 = load i32, i32* @y.38
  %435 = sub i32 %433, 1
  %436 = mul i32 %433, %435
  %437 = urem i32 %436, 2
  %438 = icmp eq i32 %437, 0
  %439 = icmp slt i32 %434, 10
  %440 = or i1 %438, %439
  br i1 %440, label %originalBB81, label %originalBB81alteredBB

originalBB81:                                     ; preds = %432, %originalBB81alteredBB
  %441 = load i8*, i8** %13, align 8, !dbg !2014
  %442 = call i64 @strlen(i8* %441) #13, !dbg !2015
  store i64 %442, i64* %14, align 8, !dbg !2016
  %443 = load i32, i32* @x.37
  %444 = load i32, i32* @y.38
  %445 = sub i32 %443, 1
  %446 = mul i32 %443, %445
  %447 = urem i32 %446, 2
  %448 = icmp eq i32 %447, 0
  %449 = icmp slt i32 %444, 10
  %450 = or i1 %448, %449
  br i1 %450, label %originalBBpart283, label %originalBB81alteredBB

originalBBpart283:                                ; preds = %originalBB81
  br label %453, !dbg !2009

451:                                              ; preds = %429, %423
  %452 = load i64, i64* %14, align 8, !dbg !2017
  br label %453, !dbg !2009

453:                                              ; preds = %451, %originalBBpart283
  %454 = phi i64 [ %442, %originalBBpart283 ], [ %452, %451 ], !dbg !2009
  %455 = load i32, i32* @x.37
  %456 = load i32, i32* @y.38
  %457 = sub i32 %455, 1
  %458 = mul i32 %455, %457
  %459 = urem i32 %458, 2
  %460 = icmp eq i32 %459, 0
  %461 = icmp slt i32 %456, 10
  %462 = or i1 %460, %461
  br i1 %462, label %originalBB85, label %originalBB85alteredBB

originalBB85:                                     ; preds = %453, %originalBB85alteredBB
  %463 = icmp ule i64 %426, %454, !dbg !2018
  %464 = load i32, i32* @x.37
  %465 = load i32, i32* @y.38
  %466 = sub i32 %464, 1
  %467 = mul i32 %464, %466
  %468 = urem i32 %467, 2
  %469 = icmp eq i32 %468, 0
  %470 = icmp slt i32 %465, 10
  %471 = or i1 %469, %470
  br i1 %471, label %originalBBpart287, label %originalBB85alteredBB

originalBBpart287:                                ; preds = %originalBB85
  br i1 %463, label %472, label %485, !dbg !2019

472:                                              ; preds = %originalBBpart287
  %473 = load i8*, i8** %13, align 8, !dbg !2020
  %474 = load i64, i64* %20, align 8, !dbg !2021
  %475 = getelementptr inbounds i8, i8* %473, i64 %474, !dbg !2022
  %476 = load i8*, i8** %23, align 8, !dbg !2023
  %477 = load i64, i64* %24, align 8, !dbg !2024
  %478 = call i32 @memcmp(i8* %475, i8* %476, i64 %477) #13, !dbg !2025
  %479 = icmp eq i32 %478, 0, !dbg !2026
  br i1 %479, label %480, label %485, !dbg !2027

480:                                              ; preds = %472
  %481 = load i8, i8* %27, align 1, !dbg !2028
  %482 = trunc i8 %481 to i1, !dbg !2028
  br i1 %482, label %483, label %484, !dbg !2031

483:                                              ; preds = %480
  br label %3262, !dbg !2032

484:                                              ; preds = %480
  store i8 1, i8* %33, align 1, !dbg !2033
  br label %485, !dbg !2034

485:                                              ; preds = %484, %472, %originalBBpart287, %420, %417, %414
  %486 = load i8*, i8** %13, align 8, !dbg !2035
  %487 = load i64, i64* %20, align 8, !dbg !2036
  %488 = getelementptr inbounds i8, i8* %486, i64 %487, !dbg !2035
  %489 = load i8, i8* %488, align 1, !dbg !2035
  store i8 %489, i8* %31, align 1, !dbg !2037
  %490 = load i8, i8* %31, align 1, !dbg !2038
  %491 = zext i8 %490 to i32, !dbg !2038
  switch i32 %491, label %1696 [
    i32 0, label %492
    i32 63, label %901
    i32 7, label %1221
    i32 8, label %1238
    i32 12, label %1239
    i32 10, label %1256
    i32 13, label %1257
    i32 9, label %1258
    i32 11, label %1259
    i32 92, label %1260
    i32 123, label %1438
    i32 125, label %1438
    i32 35, label %1468
    i32 126, label %1468
    i32 32, label %1489
    i32 33, label %1490
    i32 34, label %1490
    i32 36, label %1490
    i32 38, label %1490
    i32 40, label %1490
    i32 41, label %1490
    i32 42, label %1490
    i32 59, label %1490
    i32 60, label %1490
    i32 61, label %1490
    i32 62, label %1490
    i32 91, label %1490
    i32 94, label %1490
    i32 96, label %1490
    i32 124, label %1490
    i32 39, label %1530
    i32 37, label %1695
    i32 43, label %1695
    i32 44, label %1695
    i32 45, label %1695
    i32 46, label %1695
    i32 47, label %1695
    i32 48, label %1695
    i32 49, label %1695
    i32 50, label %1695
    i32 51, label %1695
    i32 52, label %1695
    i32 53, label %1695
    i32 54, label %1695
    i32 55, label %1695
    i32 56, label %1695
    i32 57, label %1695
    i32 58, label %1695
    i32 65, label %1695
    i32 66, label %1695
    i32 67, label %1695
    i32 68, label %1695
    i32 69, label %1695
    i32 70, label %1695
    i32 71, label %1695
    i32 72, label %1695
    i32 73, label %1695
    i32 74, label %1695
    i32 75, label %1695
    i32 76, label %1695
    i32 77, label %1695
    i32 78, label %1695
    i32 79, label %1695
    i32 80, label %1695
    i32 81, label %1695
    i32 82, label %1695
    i32 83, label %1695
    i32 84, label %1695
    i32 85, label %1695
    i32 86, label %1695
    i32 87, label %1695
    i32 88, label %1695
    i32 89, label %1695
    i32 90, label %1695
    i32 93, label %1695
    i32 95, label %1695
    i32 97, label %1695
    i32 98, label %1695
    i32 99, label %1695
    i32 100, label %1695
    i32 101, label %1695
    i32 102, label %1695
    i32 103, label %1695
    i32 104, label %1695
    i32 105, label %1695
    i32 106, label %1695
    i32 107, label %1695
    i32 108, label %1695
    i32 109, label %1695
    i32 110, label %1695
    i32 111, label %1695
    i32 112, label %1695
    i32 113, label %1695
    i32 114, label %1695
    i32 115, label %1695
    i32 116, label %1695
    i32 117, label %1695
    i32 118, label %1695
    i32 119, label %1695
    i32 120, label %1695
    i32 121, label %1695
    i32 122, label %1695
  ], !dbg !2039

492:                                              ; preds = %485
  %493 = load i32, i32* @x.37
  %494 = load i32, i32* @y.38
  %495 = sub i32 %493, 1
  %496 = mul i32 %493, %495
  %497 = urem i32 %496, 2
  %498 = icmp eq i32 %497, 0
  %499 = icmp slt i32 %494, 10
  %500 = or i1 %498, %499
  br i1 %500, label %originalBB89, label %originalBB89alteredBB

originalBB89:                                     ; preds = %492, %originalBB89alteredBB
  %501 = load i8, i8* %25, align 1, !dbg !2040
  %502 = trunc i8 %501 to i1, !dbg !2040
  %503 = load i32, i32* @x.37
  %504 = load i32, i32* @y.38
  %505 = sub i32 %503, 1
  %506 = mul i32 %503, %505
  %507 = urem i32 %506, 2
  %508 = icmp eq i32 %507, 0
  %509 = icmp slt i32 %504, 10
  %510 = or i1 %508, %509
  br i1 %510, label %originalBBpart291, label %originalBB89alteredBB

originalBBpart291:                                ; preds = %originalBB89
  br i1 %502, label %511, label %862, !dbg !2043

511:                                              ; preds = %originalBBpart291
  %512 = load i32, i32* @x.37
  %513 = load i32, i32* @y.38
  %514 = sub i32 %512, 1
  %515 = mul i32 %512, %514
  %516 = urem i32 %515, 2
  %517 = icmp eq i32 %516, 0
  %518 = icmp slt i32 %513, 10
  %519 = or i1 %517, %518
  br i1 %519, label %originalBB93, label %originalBB93alteredBB

originalBB93:                                     ; preds = %511, %originalBB93alteredBB
  %520 = load i32, i32* @x.37
  %521 = load i32, i32* @y.38
  %522 = sub i32 %520, 1
  %523 = mul i32 %520, %522
  %524 = urem i32 %523, 2
  %525 = icmp eq i32 %524, 0
  %526 = icmp slt i32 %521, 10
  %527 = or i1 %525, %526
  br i1 %527, label %originalBBpart295, label %originalBB93alteredBB

originalBBpart295:                                ; preds = %originalBB93
  br label %528, !dbg !2044

528:                                              ; preds = %originalBBpart295
  %529 = load i32, i32* @x.37
  %530 = load i32, i32* @y.38
  %531 = sub i32 %529, 1
  %532 = mul i32 %529, %531
  %533 = urem i32 %532, 2
  %534 = icmp eq i32 %533, 0
  %535 = icmp slt i32 %530, 10
  %536 = or i1 %534, %535
  br i1 %536, label %originalBB97, label %originalBB97alteredBB

originalBB97:                                     ; preds = %528, %originalBB97alteredBB
  %537 = load i8, i8* %27, align 1, !dbg !2046
  %538 = trunc i8 %537 to i1, !dbg !2046
  %539 = load i32, i32* @x.37
  %540 = load i32, i32* @y.38
  %541 = sub i32 %539, 1
  %542 = mul i32 %539, %541
  %543 = urem i32 %542, 2
  %544 = icmp eq i32 %543, 0
  %545 = icmp slt i32 %540, 10
  %546 = or i1 %544, %545
  br i1 %546, label %originalBBpart299, label %originalBB97alteredBB

originalBBpart299:                                ; preds = %originalBB97
  br i1 %538, label %547, label %564, !dbg !2049

547:                                              ; preds = %originalBBpart299
  %548 = load i32, i32* @x.37
  %549 = load i32, i32* @y.38
  %550 = sub i32 %548, 1
  %551 = mul i32 %548, %550
  %552 = urem i32 %551, 2
  %553 = icmp eq i32 %552, 0
  %554 = icmp slt i32 %549, 10
  %555 = or i1 %553, %554
  br i1 %555, label %originalBB101, label %originalBB101alteredBB

originalBB101:                                    ; preds = %547, %originalBB101alteredBB
  %556 = load i32, i32* @x.37
  %557 = load i32, i32* @y.38
  %558 = sub i32 %556, 1
  %559 = mul i32 %556, %558
  %560 = urem i32 %559, 2
  %561 = icmp eq i32 %560, 0
  %562 = icmp slt i32 %557, 10
  %563 = or i1 %561, %562
  br i1 %563, label %originalBBpart2103, label %originalBB101alteredBB

originalBBpart2103:                               ; preds = %originalBB101
  br label %3262, !dbg !2046

564:                                              ; preds = %originalBBpart299
  %565 = load i32, i32* @x.37
  %566 = load i32, i32* @y.38
  %567 = sub i32 %565, 1
  %568 = mul i32 %565, %567
  %569 = urem i32 %568, 2
  %570 = icmp eq i32 %569, 0
  %571 = icmp slt i32 %566, 10
  %572 = or i1 %570, %571
  br i1 %572, label %originalBB105, label %originalBB105alteredBB

originalBB105:                                    ; preds = %564, %originalBB105alteredBB
  store i8 1, i8* %34, align 1, !dbg !2049
  %573 = load i32, i32* %15, align 4, !dbg !2050
  %574 = icmp eq i32 %573, 2, !dbg !2050
  %575 = load i32, i32* @x.37
  %576 = load i32, i32* @y.38
  %577 = sub i32 %575, 1
  %578 = mul i32 %575, %577
  %579 = urem i32 %578, 2
  %580 = icmp eq i32 %579, 0
  %581 = icmp slt i32 %576, 10
  %582 = or i1 %580, %581
  br i1 %582, label %originalBBpart2107, label %originalBB105alteredBB

originalBBpart2107:                               ; preds = %originalBB105
  br i1 %574, label %583, label %671, !dbg !2050

583:                                              ; preds = %originalBBpart2107
  %584 = load i8, i8* %28, align 1, !dbg !2050
  %585 = trunc i8 %584 to i1, !dbg !2050
  br i1 %585, label %671, label %586, !dbg !2049

586:                                              ; preds = %583
  br label %587, !dbg !2052

587:                                              ; preds = %586
  %588 = load i32, i32* @x.37
  %589 = load i32, i32* @y.38
  %590 = sub i32 %588, 1
  %591 = mul i32 %588, %590
  %592 = urem i32 %591, 2
  %593 = icmp eq i32 %592, 0
  %594 = icmp slt i32 %589, 10
  %595 = or i1 %593, %594
  br i1 %595, label %originalBB109, label %originalBB109alteredBB

originalBB109:                                    ; preds = %587, %originalBB109alteredBB
  %596 = load i64, i64* %21, align 8, !dbg !2054
  %597 = load i64, i64* %12, align 8, !dbg !2054
  %598 = icmp ult i64 %596, %597, !dbg !2054
  %599 = load i32, i32* @x.37
  %600 = load i32, i32* @y.38
  %601 = sub i32 %599, 1
  %602 = mul i32 %599, %601
  %603 = urem i32 %602, 2
  %604 = icmp eq i32 %603, 0
  %605 = icmp slt i32 %600, 10
  %606 = or i1 %604, %605
  br i1 %606, label %originalBBpart2111, label %originalBB109alteredBB

originalBBpart2111:                               ; preds = %originalBB109
  br i1 %598, label %607, label %611, !dbg !2057

607:                                              ; preds = %originalBBpart2111
  %608 = load i8*, i8** %11, align 8, !dbg !2054
  %609 = load i64, i64* %21, align 8, !dbg !2054
  %610 = getelementptr inbounds i8, i8* %608, i64 %609, !dbg !2054
  store i8 39, i8* %610, align 1, !dbg !2054
  br label %611, !dbg !2054

611:                                              ; preds = %607, %originalBBpart2111
  %612 = load i64, i64* %21, align 8, !dbg !2057
  %613 = add i64 %612, 1, !dbg !2057
  store i64 %613, i64* %21, align 8, !dbg !2057
  br label %614, !dbg !2057

614:                                              ; preds = %611
  br label %615, !dbg !2052

615:                                              ; preds = %614
  %616 = load i64, i64* %21, align 8, !dbg !2058
  %617 = load i64, i64* %12, align 8, !dbg !2058
  %618 = icmp ult i64 %616, %617, !dbg !2058
  br i1 %618, label %619, label %639, !dbg !2061

619:                                              ; preds = %615
  %620 = load i32, i32* @x.37
  %621 = load i32, i32* @y.38
  %622 = sub i32 %620, 1
  %623 = mul i32 %620, %622
  %624 = urem i32 %623, 2
  %625 = icmp eq i32 %624, 0
  %626 = icmp slt i32 %621, 10
  %627 = or i1 %625, %626
  br i1 %627, label %originalBB113, label %originalBB113alteredBB

originalBB113:                                    ; preds = %619, %originalBB113alteredBB
  %628 = load i8*, i8** %11, align 8, !dbg !2058
  %629 = load i64, i64* %21, align 8, !dbg !2058
  %630 = getelementptr inbounds i8, i8* %628, i64 %629, !dbg !2058
  store i8 36, i8* %630, align 1, !dbg !2058
  %631 = load i32, i32* @x.37
  %632 = load i32, i32* @y.38
  %633 = sub i32 %631, 1
  %634 = mul i32 %631, %633
  %635 = urem i32 %634, 2
  %636 = icmp eq i32 %635, 0
  %637 = icmp slt i32 %632, 10
  %638 = or i1 %636, %637
  br i1 %638, label %originalBBpart2115, label %originalBB113alteredBB

originalBBpart2115:                               ; preds = %originalBB113
  br label %639, !dbg !2058

639:                                              ; preds = %originalBBpart2115, %615
  %640 = load i64, i64* %21, align 8, !dbg !2061
  %641 = add i64 %640, 1, !dbg !2061
  store i64 %641, i64* %21, align 8, !dbg !2061
  br label %642, !dbg !2061

642:                                              ; preds = %639
  br label %643, !dbg !2052

643:                                              ; preds = %642
  %644 = load i64, i64* %21, align 8, !dbg !2062
  %645 = load i64, i64* %12, align 8, !dbg !2062
  %646 = icmp ult i64 %644, %645, !dbg !2062
  br i1 %646, label %647, label %667, !dbg !2065

647:                                              ; preds = %643
  %648 = load i32, i32* @x.37
  %649 = load i32, i32* @y.38
  %650 = sub i32 %648, 1
  %651 = mul i32 %648, %650
  %652 = urem i32 %651, 2
  %653 = icmp eq i32 %652, 0
  %654 = icmp slt i32 %649, 10
  %655 = or i1 %653, %654
  br i1 %655, label %originalBB117, label %originalBB117alteredBB

originalBB117:                                    ; preds = %647, %originalBB117alteredBB
  %656 = load i8*, i8** %11, align 8, !dbg !2062
  %657 = load i64, i64* %21, align 8, !dbg !2062
  %658 = getelementptr inbounds i8, i8* %656, i64 %657, !dbg !2062
  store i8 39, i8* %658, align 1, !dbg !2062
  %659 = load i32, i32* @x.37
  %660 = load i32, i32* @y.38
  %661 = sub i32 %659, 1
  %662 = mul i32 %659, %661
  %663 = urem i32 %662, 2
  %664 = icmp eq i32 %663, 0
  %665 = icmp slt i32 %660, 10
  %666 = or i1 %664, %665
  br i1 %666, label %originalBBpart2119, label %originalBB117alteredBB

originalBBpart2119:                               ; preds = %originalBB117
  br label %667, !dbg !2062

667:                                              ; preds = %originalBBpart2119, %643
  %668 = load i64, i64* %21, align 8, !dbg !2065
  %669 = add i64 %668, 1, !dbg !2065
  store i64 %669, i64* %21, align 8, !dbg !2065
  br label %670, !dbg !2065

670:                                              ; preds = %667
  store i8 1, i8* %28, align 1, !dbg !2052
  br label %671, !dbg !2052

671:                                              ; preds = %670, %583, %originalBBpart2107
  br label %672, !dbg !2049

672:                                              ; preds = %671
  %673 = load i64, i64* %21, align 8, !dbg !2066
  %674 = load i64, i64* %12, align 8, !dbg !2066
  %675 = icmp ult i64 %673, %674, !dbg !2066
  br i1 %675, label %676, label %696, !dbg !2069

676:                                              ; preds = %672
  %677 = load i32, i32* @x.37
  %678 = load i32, i32* @y.38
  %679 = sub i32 %677, 1
  %680 = mul i32 %677, %679
  %681 = urem i32 %680, 2
  %682 = icmp eq i32 %681, 0
  %683 = icmp slt i32 %678, 10
  %684 = or i1 %682, %683
  br i1 %684, label %originalBB121, label %originalBB121alteredBB

originalBB121:                                    ; preds = %676, %originalBB121alteredBB
  %685 = load i8*, i8** %11, align 8, !dbg !2066
  %686 = load i64, i64* %21, align 8, !dbg !2066
  %687 = getelementptr inbounds i8, i8* %685, i64 %686, !dbg !2066
  store i8 92, i8* %687, align 1, !dbg !2066
  %688 = load i32, i32* @x.37
  %689 = load i32, i32* @y.38
  %690 = sub i32 %688, 1
  %691 = mul i32 %688, %690
  %692 = urem i32 %691, 2
  %693 = icmp eq i32 %692, 0
  %694 = icmp slt i32 %689, 10
  %695 = or i1 %693, %694
  br i1 %695, label %originalBBpart2123, label %originalBB121alteredBB

originalBBpart2123:                               ; preds = %originalBB121
  br label %696, !dbg !2066

696:                                              ; preds = %originalBBpart2123, %672
  %697 = load i64, i64* %21, align 8, !dbg !2069
  %698 = add i64 %697, 1, !dbg !2069
  store i64 %698, i64* %21, align 8, !dbg !2069
  br label %699, !dbg !2069

699:                                              ; preds = %696
  %700 = load i32, i32* @x.37
  %701 = load i32, i32* @y.38
  %702 = sub i32 %700, 1
  %703 = mul i32 %700, %702
  %704 = urem i32 %703, 2
  %705 = icmp eq i32 %704, 0
  %706 = icmp slt i32 %701, 10
  %707 = or i1 %705, %706
  br i1 %707, label %originalBB125, label %originalBB125alteredBB

originalBB125:                                    ; preds = %699, %originalBB125alteredBB
  %708 = load i32, i32* @x.37
  %709 = load i32, i32* @y.38
  %710 = sub i32 %708, 1
  %711 = mul i32 %708, %710
  %712 = urem i32 %711, 2
  %713 = icmp eq i32 %712, 0
  %714 = icmp slt i32 %709, 10
  %715 = or i1 %713, %714
  br i1 %715, label %originalBBpart2127, label %originalBB125alteredBB

originalBBpart2127:                               ; preds = %originalBB125
  br label %716, !dbg !2049

716:                                              ; preds = %originalBBpart2127
  %717 = load i32, i32* @x.37
  %718 = load i32, i32* @y.38
  %719 = sub i32 %717, 1
  %720 = mul i32 %717, %719
  %721 = urem i32 %720, 2
  %722 = icmp eq i32 %721, 0
  %723 = icmp slt i32 %718, 10
  %724 = or i1 %722, %723
  br i1 %724, label %originalBB129, label %originalBB129alteredBB

originalBB129:                                    ; preds = %716, %originalBB129alteredBB
  %725 = load i32, i32* %15, align 4, !dbg !2070
  %726 = icmp ne i32 %725, 2, !dbg !2072
  %727 = load i32, i32* @x.37
  %728 = load i32, i32* @y.38
  %729 = sub i32 %727, 1
  %730 = mul i32 %727, %729
  %731 = urem i32 %730, 2
  %732 = icmp eq i32 %731, 0
  %733 = icmp slt i32 %728, 10
  %734 = or i1 %732, %733
  br i1 %734, label %originalBBpart2131, label %originalBB129alteredBB

originalBBpart2131:                               ; preds = %originalBB129
  br i1 %726, label %735, label %861, !dbg !2073

735:                                              ; preds = %originalBBpart2131
  %736 = load i32, i32* @x.37
  %737 = load i32, i32* @y.38
  %738 = sub i32 %736, 1
  %739 = mul i32 %736, %738
  %740 = urem i32 %739, 2
  %741 = icmp eq i32 %740, 0
  %742 = icmp slt i32 %737, 10
  %743 = or i1 %741, %742
  br i1 %743, label %originalBB133, label %originalBB133alteredBB

originalBB133:                                    ; preds = %735, %originalBB133alteredBB
  %744 = load i64, i64* %20, align 8, !dbg !2074
  %745 = add i64 %744, 1, !dbg !2075
  %746 = load i64, i64* %14, align 8, !dbg !2076
  %747 = icmp ult i64 %745, %746, !dbg !2077
  %748 = load i32, i32* @x.37
  %749 = load i32, i32* @y.38
  %750 = sub i32 %748, 1
  %751 = mul i32 %748, %750
  %752 = urem i32 %751, 2
  %753 = icmp eq i32 %752, 0
  %754 = icmp slt i32 %749, 10
  %755 = or i1 %753, %754
  br i1 %755, label %originalBBpart2142, label %originalBB133alteredBB

originalBBpart2142:                               ; preds = %originalBB133
  br i1 %747, label %756, label %861, !dbg !2078

756:                                              ; preds = %originalBBpart2142
  %757 = load i8*, i8** %13, align 8, !dbg !2079
  %758 = load i64, i64* %20, align 8, !dbg !2080
  %759 = add i64 %758, 1, !dbg !2081
  %760 = getelementptr inbounds i8, i8* %757, i64 %759, !dbg !2079
  %761 = load i8, i8* %760, align 1, !dbg !2079
  %762 = sext i8 %761 to i32, !dbg !2079
  %763 = icmp sle i32 48, %762, !dbg !2082
  br i1 %763, label %764, label %861, !dbg !2083

764:                                              ; preds = %756
  %765 = load i8*, i8** %13, align 8, !dbg !2084
  %766 = load i64, i64* %20, align 8, !dbg !2085
  %767 = add i64 %766, 1, !dbg !2086
  %768 = getelementptr inbounds i8, i8* %765, i64 %767, !dbg !2084
  %769 = load i8, i8* %768, align 1, !dbg !2084
  %770 = sext i8 %769 to i32, !dbg !2084
  %771 = icmp sle i32 %770, 57, !dbg !2087
  br i1 %771, label %772, label %861, !dbg !2088

772:                                              ; preds = %764
  br label %773, !dbg !2089

773:                                              ; preds = %772
  %774 = load i32, i32* @x.37
  %775 = load i32, i32* @y.38
  %776 = sub i32 %774, 1
  %777 = mul i32 %774, %776
  %778 = urem i32 %777, 2
  %779 = icmp eq i32 %778, 0
  %780 = icmp slt i32 %775, 10
  %781 = or i1 %779, %780
  br i1 %781, label %originalBB144, label %originalBB144alteredBB

originalBB144:                                    ; preds = %773, %originalBB144alteredBB
  %782 = load i64, i64* %21, align 8, !dbg !2091
  %783 = load i64, i64* %12, align 8, !dbg !2091
  %784 = icmp ult i64 %782, %783, !dbg !2091
  %785 = load i32, i32* @x.37
  %786 = load i32, i32* @y.38
  %787 = sub i32 %785, 1
  %788 = mul i32 %785, %787
  %789 = urem i32 %788, 2
  %790 = icmp eq i32 %789, 0
  %791 = icmp slt i32 %786, 10
  %792 = or i1 %790, %791
  br i1 %792, label %originalBBpart2146, label %originalBB144alteredBB

originalBBpart2146:                               ; preds = %originalBB144
  br i1 %784, label %793, label %813, !dbg !2094

793:                                              ; preds = %originalBBpart2146
  %794 = load i32, i32* @x.37
  %795 = load i32, i32* @y.38
  %796 = sub i32 %794, 1
  %797 = mul i32 %794, %796
  %798 = urem i32 %797, 2
  %799 = icmp eq i32 %798, 0
  %800 = icmp slt i32 %795, 10
  %801 = or i1 %799, %800
  br i1 %801, label %originalBB148, label %originalBB148alteredBB

originalBB148:                                    ; preds = %793, %originalBB148alteredBB
  %802 = load i8*, i8** %11, align 8, !dbg !2091
  %803 = load i64, i64* %21, align 8, !dbg !2091
  %804 = getelementptr inbounds i8, i8* %802, i64 %803, !dbg !2091
  store i8 48, i8* %804, align 1, !dbg !2091
  %805 = load i32, i32* @x.37
  %806 = load i32, i32* @y.38
  %807 = sub i32 %805, 1
  %808 = mul i32 %805, %807
  %809 = urem i32 %808, 2
  %810 = icmp eq i32 %809, 0
  %811 = icmp slt i32 %806, 10
  %812 = or i1 %810, %811
  br i1 %812, label %originalBBpart2150, label %originalBB148alteredBB

originalBBpart2150:                               ; preds = %originalBB148
  br label %813, !dbg !2091

813:                                              ; preds = %originalBBpart2150, %originalBBpart2146
  %814 = load i64, i64* %21, align 8, !dbg !2094
  %815 = add i64 %814, 1, !dbg !2094
  store i64 %815, i64* %21, align 8, !dbg !2094
  br label %816, !dbg !2094

816:                                              ; preds = %813
  br label %817, !dbg !2095

817:                                              ; preds = %816
  %818 = load i64, i64* %21, align 8, !dbg !2096
  %819 = load i64, i64* %12, align 8, !dbg !2096
  %820 = icmp ult i64 %818, %819, !dbg !2096
  br i1 %820, label %821, label %841, !dbg !2099

821:                                              ; preds = %817
  %822 = load i32, i32* @x.37
  %823 = load i32, i32* @y.38
  %824 = sub i32 %822, 1
  %825 = mul i32 %822, %824
  %826 = urem i32 %825, 2
  %827 = icmp eq i32 %826, 0
  %828 = icmp slt i32 %823, 10
  %829 = or i1 %827, %828
  br i1 %829, label %originalBB152, label %originalBB152alteredBB

originalBB152:                                    ; preds = %821, %originalBB152alteredBB
  %830 = load i8*, i8** %11, align 8, !dbg !2096
  %831 = load i64, i64* %21, align 8, !dbg !2096
  %832 = getelementptr inbounds i8, i8* %830, i64 %831, !dbg !2096
  store i8 48, i8* %832, align 1, !dbg !2096
  %833 = load i32, i32* @x.37
  %834 = load i32, i32* @y.38
  %835 = sub i32 %833, 1
  %836 = mul i32 %833, %835
  %837 = urem i32 %836, 2
  %838 = icmp eq i32 %837, 0
  %839 = icmp slt i32 %834, 10
  %840 = or i1 %838, %839
  br i1 %840, label %originalBBpart2154, label %originalBB152alteredBB

originalBBpart2154:                               ; preds = %originalBB152
  br label %841, !dbg !2096

841:                                              ; preds = %originalBBpart2154, %817
  %842 = load i32, i32* @x.37
  %843 = load i32, i32* @y.38
  %844 = sub i32 %842, 1
  %845 = mul i32 %842, %844
  %846 = urem i32 %845, 2
  %847 = icmp eq i32 %846, 0
  %848 = icmp slt i32 %843, 10
  %849 = or i1 %847, %848
  br i1 %849, label %originalBB156, label %originalBB156alteredBB

originalBB156:                                    ; preds = %841, %originalBB156alteredBB
  %850 = load i64, i64* %21, align 8, !dbg !2099
  %851 = add i64 %850, 1, !dbg !2099
  store i64 %851, i64* %21, align 8, !dbg !2099
  %852 = load i32, i32* @x.37
  %853 = load i32, i32* @y.38
  %854 = sub i32 %852, 1
  %855 = mul i32 %852, %854
  %856 = urem i32 %855, 2
  %857 = icmp eq i32 %856, 0
  %858 = icmp slt i32 %853, 10
  %859 = or i1 %857, %858
  br i1 %859, label %originalBBpart2160, label %originalBB156alteredBB

originalBBpart2160:                               ; preds = %originalBB156
  br label %860, !dbg !2099

860:                                              ; preds = %originalBBpart2160
  br label %861, !dbg !2100

861:                                              ; preds = %860, %764, %756, %originalBBpart2142, %originalBBpart2131
  store i8 48, i8* %31, align 1, !dbg !2101
  br label %900, !dbg !2102

862:                                              ; preds = %originalBBpart291
  %863 = load i32, i32* %16, align 4, !dbg !2103
  %864 = and i32 %863, 1, !dbg !2105
  %865 = icmp ne i32 %864, 0, !dbg !2105
  br i1 %865, label %866, label %883, !dbg !2106

866:                                              ; preds = %862
  %867 = load i32, i32* @x.37
  %868 = load i32, i32* @y.38
  %869 = sub i32 %867, 1
  %870 = mul i32 %867, %869
  %871 = urem i32 %870, 2
  %872 = icmp eq i32 %871, 0
  %873 = icmp slt i32 %868, 10
  %874 = or i1 %872, %873
  br i1 %874, label %originalBB162, label %originalBB162alteredBB

originalBB162:                                    ; preds = %866, %originalBB162alteredBB
  %875 = load i32, i32* @x.37
  %876 = load i32, i32* @y.38
  %877 = sub i32 %875, 1
  %878 = mul i32 %875, %877
  %879 = urem i32 %878, 2
  %880 = icmp eq i32 %879, 0
  %881 = icmp slt i32 %876, 10
  %882 = or i1 %880, %881
  br i1 %882, label %originalBBpart2164, label %originalBB162alteredBB

originalBBpart2164:                               ; preds = %originalBB162
  br label %3033, !dbg !2107

883:                                              ; preds = %862
  %884 = load i32, i32* @x.37
  %885 = load i32, i32* @y.38
  %886 = sub i32 %884, 1
  %887 = mul i32 %884, %886
  %888 = urem i32 %887, 2
  %889 = icmp eq i32 %888, 0
  %890 = icmp slt i32 %885, 10
  %891 = or i1 %889, %890
  br i1 %891, label %originalBB166, label %originalBB166alteredBB

originalBB166:                                    ; preds = %883, %originalBB166alteredBB
  %892 = load i32, i32* @x.37
  %893 = load i32, i32* @y.38
  %894 = sub i32 %892, 1
  %895 = mul i32 %892, %894
  %896 = urem i32 %895, 2
  %897 = icmp eq i32 %896, 0
  %898 = icmp slt i32 %893, 10
  %899 = or i1 %897, %898
  br i1 %899, label %originalBBpart2168, label %originalBB166alteredBB

originalBBpart2168:                               ; preds = %originalBB166
  br label %900

900:                                              ; preds = %originalBBpart2168, %861
  br label %2649, !dbg !2108

901:                                              ; preds = %485
  %902 = load i32, i32* @x.37
  %903 = load i32, i32* @y.38
  %904 = sub i32 %902, 1
  %905 = mul i32 %902, %904
  %906 = urem i32 %905, 2
  %907 = icmp eq i32 %906, 0
  %908 = icmp slt i32 %903, 10
  %909 = or i1 %907, %908
  br i1 %909, label %originalBB170, label %originalBB170alteredBB

originalBB170:                                    ; preds = %901, %originalBB170alteredBB
  %910 = load i32, i32* %15, align 4, !dbg !2109
  %911 = load i32, i32* @x.37
  %912 = load i32, i32* @y.38
  %913 = sub i32 %911, 1
  %914 = mul i32 %911, %913
  %915 = urem i32 %914, 2
  %916 = icmp eq i32 %915, 0
  %917 = icmp slt i32 %912, 10
  %918 = or i1 %916, %917
  br i1 %918, label %originalBBpart2172, label %originalBB170alteredBB

originalBBpart2172:                               ; preds = %originalBB170
  switch i32 %910, label %1187 [
    i32 2, label %919
    i32 5, label %940
  ], !dbg !2110

919:                                              ; preds = %originalBBpart2172
  %920 = load i32, i32* @x.37
  %921 = load i32, i32* @y.38
  %922 = sub i32 %920, 1
  %923 = mul i32 %920, %922
  %924 = urem i32 %923, 2
  %925 = icmp eq i32 %924, 0
  %926 = icmp slt i32 %921, 10
  %927 = or i1 %925, %926
  br i1 %927, label %originalBB174, label %originalBB174alteredBB

originalBB174:                                    ; preds = %919, %originalBB174alteredBB
  %928 = load i8, i8* %27, align 1, !dbg !2111
  %929 = trunc i8 %928 to i1, !dbg !2111
  %930 = load i32, i32* @x.37
  %931 = load i32, i32* @y.38
  %932 = sub i32 %930, 1
  %933 = mul i32 %930, %932
  %934 = urem i32 %933, 2
  %935 = icmp eq i32 %934, 0
  %936 = icmp slt i32 %931, 10
  %937 = or i1 %935, %936
  br i1 %937, label %originalBBpart2176, label %originalBB174alteredBB

originalBBpart2176:                               ; preds = %originalBB174
  br i1 %929, label %938, label %939, !dbg !2114

938:                                              ; preds = %originalBBpart2176
  br label %3262, !dbg !2115

939:                                              ; preds = %originalBBpart2176
  br label %1204, !dbg !2116

940:                                              ; preds = %originalBBpart2172
  %941 = load i32, i32* %16, align 4, !dbg !2117
  %942 = and i32 %941, 4, !dbg !2119
  %943 = icmp ne i32 %942, 0, !dbg !2119
  br i1 %943, label %944, label %1186, !dbg !2120

944:                                              ; preds = %940
  %945 = load i32, i32* @x.37
  %946 = load i32, i32* @y.38
  %947 = sub i32 %945, 1
  %948 = mul i32 %945, %947
  %949 = urem i32 %948, 2
  %950 = icmp eq i32 %949, 0
  %951 = icmp slt i32 %946, 10
  %952 = or i1 %950, %951
  br i1 %952, label %originalBB178, label %originalBB178alteredBB

originalBB178:                                    ; preds = %944, %originalBB178alteredBB
  %953 = load i64, i64* %20, align 8, !dbg !2121
  %954 = add i64 %953, 2, !dbg !2122
  %955 = load i64, i64* %14, align 8, !dbg !2123
  %956 = icmp ult i64 %954, %955, !dbg !2124
  %957 = load i32, i32* @x.37
  %958 = load i32, i32* @y.38
  %959 = sub i32 %957, 1
  %960 = mul i32 %957, %959
  %961 = urem i32 %960, 2
  %962 = icmp eq i32 %961, 0
  %963 = icmp slt i32 %958, 10
  %964 = or i1 %962, %963
  br i1 %964, label %originalBBpart2192, label %originalBB178alteredBB

originalBBpart2192:                               ; preds = %originalBB178
  br i1 %956, label %965, label %1186, !dbg !2125

965:                                              ; preds = %originalBBpart2192
  %966 = load i8*, i8** %13, align 8, !dbg !2126
  %967 = load i64, i64* %20, align 8, !dbg !2127
  %968 = add i64 %967, 1, !dbg !2128
  %969 = getelementptr inbounds i8, i8* %966, i64 %968, !dbg !2126
  %970 = load i8, i8* %969, align 1, !dbg !2126
  %971 = sext i8 %970 to i32, !dbg !2126
  %972 = icmp eq i32 %971, 63, !dbg !2129
  br i1 %972, label %973, label %1186, !dbg !2130

973:                                              ; preds = %965
  %974 = load i32, i32* @x.37
  %975 = load i32, i32* @y.38
  %976 = sub i32 %974, 1
  %977 = mul i32 %974, %976
  %978 = urem i32 %977, 2
  %979 = icmp eq i32 %978, 0
  %980 = icmp slt i32 %975, 10
  %981 = or i1 %979, %980
  br i1 %981, label %originalBB194, label %originalBB194alteredBB

originalBB194:                                    ; preds = %973, %originalBB194alteredBB
  %982 = load i8*, i8** %13, align 8, !dbg !2131
  %983 = load i64, i64* %20, align 8, !dbg !2132
  %984 = add i64 %983, 2, !dbg !2133
  %985 = getelementptr inbounds i8, i8* %982, i64 %984, !dbg !2131
  %986 = load i8, i8* %985, align 1, !dbg !2131
  %987 = sext i8 %986 to i32, !dbg !2131
  %988 = load i32, i32* @x.37
  %989 = load i32, i32* @y.38
  %990 = sub i32 %988, 1
  %991 = mul i32 %988, %990
  %992 = urem i32 %991, 2
  %993 = icmp eq i32 %992, 0
  %994 = icmp slt i32 %989, 10
  %995 = or i1 %993, %994
  br i1 %995, label %originalBBpart2202, label %originalBB194alteredBB

originalBBpart2202:                               ; preds = %originalBB194
  switch i32 %987, label %1168 [
    i32 33, label %996
    i32 39, label %996
    i32 40, label %996
    i32 41, label %996
    i32 45, label %996
    i32 47, label %996
    i32 60, label %996
    i32 61, label %996
    i32 62, label %996
  ], !dbg !2134

996:                                              ; preds = %originalBBpart2202, %originalBBpart2202, %originalBBpart2202, %originalBBpart2202, %originalBBpart2202, %originalBBpart2202, %originalBBpart2202, %originalBBpart2202, %originalBBpart2202
  %997 = load i8, i8* %27, align 1, !dbg !2135
  %998 = trunc i8 %997 to i1, !dbg !2135
  br i1 %998, label %999, label %1000, !dbg !2138

999:                                              ; preds = %996
  br label %3262, !dbg !2139

1000:                                             ; preds = %996
  %1001 = load i8*, i8** %13, align 8, !dbg !2140
  %1002 = load i64, i64* %20, align 8, !dbg !2141
  %1003 = add i64 %1002, 2, !dbg !2142
  %1004 = getelementptr inbounds i8, i8* %1001, i64 %1003, !dbg !2140
  %1005 = load i8, i8* %1004, align 1, !dbg !2140
  store i8 %1005, i8* %31, align 1, !dbg !2143
  %1006 = load i64, i64* %20, align 8, !dbg !2144
  %1007 = add i64 %1006, 2, !dbg !2144
  store i64 %1007, i64* %20, align 8, !dbg !2144
  br label %1008, !dbg !2145

1008:                                             ; preds = %1000
  %1009 = load i32, i32* @x.37
  %1010 = load i32, i32* @y.38
  %1011 = sub i32 %1009, 1
  %1012 = mul i32 %1009, %1011
  %1013 = urem i32 %1012, 2
  %1014 = icmp eq i32 %1013, 0
  %1015 = icmp slt i32 %1010, 10
  %1016 = or i1 %1014, %1015
  br i1 %1016, label %originalBB204, label %originalBB204alteredBB

originalBB204:                                    ; preds = %1008, %originalBB204alteredBB
  %1017 = load i64, i64* %21, align 8, !dbg !2146
  %1018 = load i64, i64* %12, align 8, !dbg !2146
  %1019 = icmp ult i64 %1017, %1018, !dbg !2146
  %1020 = load i32, i32* @x.37
  %1021 = load i32, i32* @y.38
  %1022 = sub i32 %1020, 1
  %1023 = mul i32 %1020, %1022
  %1024 = urem i32 %1023, 2
  %1025 = icmp eq i32 %1024, 0
  %1026 = icmp slt i32 %1021, 10
  %1027 = or i1 %1025, %1026
  br i1 %1027, label %originalBBpart2206, label %originalBB204alteredBB

originalBBpart2206:                               ; preds = %originalBB204
  br i1 %1019, label %1028, label %1048, !dbg !2149

1028:                                             ; preds = %originalBBpart2206
  %1029 = load i32, i32* @x.37
  %1030 = load i32, i32* @y.38
  %1031 = sub i32 %1029, 1
  %1032 = mul i32 %1029, %1031
  %1033 = urem i32 %1032, 2
  %1034 = icmp eq i32 %1033, 0
  %1035 = icmp slt i32 %1030, 10
  %1036 = or i1 %1034, %1035
  br i1 %1036, label %originalBB208, label %originalBB208alteredBB

originalBB208:                                    ; preds = %1028, %originalBB208alteredBB
  %1037 = load i8*, i8** %11, align 8, !dbg !2146
  %1038 = load i64, i64* %21, align 8, !dbg !2146
  %1039 = getelementptr inbounds i8, i8* %1037, i64 %1038, !dbg !2146
  store i8 63, i8* %1039, align 1, !dbg !2146
  %1040 = load i32, i32* @x.37
  %1041 = load i32, i32* @y.38
  %1042 = sub i32 %1040, 1
  %1043 = mul i32 %1040, %1042
  %1044 = urem i32 %1043, 2
  %1045 = icmp eq i32 %1044, 0
  %1046 = icmp slt i32 %1041, 10
  %1047 = or i1 %1045, %1046
  br i1 %1047, label %originalBBpart2210, label %originalBB208alteredBB

originalBBpart2210:                               ; preds = %originalBB208
  br label %1048, !dbg !2146

1048:                                             ; preds = %originalBBpart2210, %originalBBpart2206
  %1049 = load i32, i32* @x.37
  %1050 = load i32, i32* @y.38
  %1051 = sub i32 %1049, 1
  %1052 = mul i32 %1049, %1051
  %1053 = urem i32 %1052, 2
  %1054 = icmp eq i32 %1053, 0
  %1055 = icmp slt i32 %1050, 10
  %1056 = or i1 %1054, %1055
  br i1 %1056, label %originalBB212, label %originalBB212alteredBB

originalBB212:                                    ; preds = %1048, %originalBB212alteredBB
  %1057 = load i64, i64* %21, align 8, !dbg !2149
  %1058 = add i64 %1057, 1, !dbg !2149
  store i64 %1058, i64* %21, align 8, !dbg !2149
  %1059 = load i32, i32* @x.37
  %1060 = load i32, i32* @y.38
  %1061 = sub i32 %1059, 1
  %1062 = mul i32 %1059, %1061
  %1063 = urem i32 %1062, 2
  %1064 = icmp eq i32 %1063, 0
  %1065 = icmp slt i32 %1060, 10
  %1066 = or i1 %1064, %1065
  br i1 %1066, label %originalBBpart2216, label %originalBB212alteredBB

originalBBpart2216:                               ; preds = %originalBB212
  br label %1067, !dbg !2149

1067:                                             ; preds = %originalBBpart2216
  br label %1068, !dbg !2150

1068:                                             ; preds = %1067
  %1069 = load i64, i64* %21, align 8, !dbg !2151
  %1070 = load i64, i64* %12, align 8, !dbg !2151
  %1071 = icmp ult i64 %1069, %1070, !dbg !2151
  br i1 %1071, label %1072, label %1076, !dbg !2154

1072:                                             ; preds = %1068
  %1073 = load i8*, i8** %11, align 8, !dbg !2151
  %1074 = load i64, i64* %21, align 8, !dbg !2151
  %1075 = getelementptr inbounds i8, i8* %1073, i64 %1074, !dbg !2151
  store i8 34, i8* %1075, align 1, !dbg !2151
  br label %1076, !dbg !2151

1076:                                             ; preds = %1072, %1068
  %1077 = load i64, i64* %21, align 8, !dbg !2154
  %1078 = add i64 %1077, 1, !dbg !2154
  store i64 %1078, i64* %21, align 8, !dbg !2154
  br label %1079, !dbg !2154

1079:                                             ; preds = %1076
  br label %1080, !dbg !2155

1080:                                             ; preds = %1079
  %1081 = load i64, i64* %21, align 8, !dbg !2156
  %1082 = load i64, i64* %12, align 8, !dbg !2156
  %1083 = icmp ult i64 %1081, %1082, !dbg !2156
  br i1 %1083, label %1084, label %1104, !dbg !2159

1084:                                             ; preds = %1080
  %1085 = load i32, i32* @x.37
  %1086 = load i32, i32* @y.38
  %1087 = sub i32 %1085, 1
  %1088 = mul i32 %1085, %1087
  %1089 = urem i32 %1088, 2
  %1090 = icmp eq i32 %1089, 0
  %1091 = icmp slt i32 %1086, 10
  %1092 = or i1 %1090, %1091
  br i1 %1092, label %originalBB218, label %originalBB218alteredBB

originalBB218:                                    ; preds = %1084, %originalBB218alteredBB
  %1093 = load i8*, i8** %11, align 8, !dbg !2156
  %1094 = load i64, i64* %21, align 8, !dbg !2156
  %1095 = getelementptr inbounds i8, i8* %1093, i64 %1094, !dbg !2156
  store i8 34, i8* %1095, align 1, !dbg !2156
  %1096 = load i32, i32* @x.37
  %1097 = load i32, i32* @y.38
  %1098 = sub i32 %1096, 1
  %1099 = mul i32 %1096, %1098
  %1100 = urem i32 %1099, 2
  %1101 = icmp eq i32 %1100, 0
  %1102 = icmp slt i32 %1097, 10
  %1103 = or i1 %1101, %1102
  br i1 %1103, label %originalBBpart2220, label %originalBB218alteredBB

originalBBpart2220:                               ; preds = %originalBB218
  br label %1104, !dbg !2156

1104:                                             ; preds = %originalBBpart2220, %1080
  %1105 = load i32, i32* @x.37
  %1106 = load i32, i32* @y.38
  %1107 = sub i32 %1105, 1
  %1108 = mul i32 %1105, %1107
  %1109 = urem i32 %1108, 2
  %1110 = icmp eq i32 %1109, 0
  %1111 = icmp slt i32 %1106, 10
  %1112 = or i1 %1110, %1111
  br i1 %1112, label %originalBB222, label %originalBB222alteredBB

originalBB222:                                    ; preds = %1104, %originalBB222alteredBB
  %1113 = load i64, i64* %21, align 8, !dbg !2159
  %1114 = add i64 %1113, 1, !dbg !2159
  store i64 %1114, i64* %21, align 8, !dbg !2159
  %1115 = load i32, i32* @x.37
  %1116 = load i32, i32* @y.38
  %1117 = sub i32 %1115, 1
  %1118 = mul i32 %1115, %1117
  %1119 = urem i32 %1118, 2
  %1120 = icmp eq i32 %1119, 0
  %1121 = icmp slt i32 %1116, 10
  %1122 = or i1 %1120, %1121
  br i1 %1122, label %originalBBpart2237, label %originalBB222alteredBB

originalBBpart2237:                               ; preds = %originalBB222
  br label %1123, !dbg !2159

1123:                                             ; preds = %originalBBpart2237
  br label %1124, !dbg !2160

1124:                                             ; preds = %1123
  %1125 = load i64, i64* %21, align 8, !dbg !2161
  %1126 = load i64, i64* %12, align 8, !dbg !2161
  %1127 = icmp ult i64 %1125, %1126, !dbg !2161
  br i1 %1127, label %1128, label %1148, !dbg !2164

1128:                                             ; preds = %1124
  %1129 = load i32, i32* @x.37
  %1130 = load i32, i32* @y.38
  %1131 = sub i32 %1129, 1
  %1132 = mul i32 %1129, %1131
  %1133 = urem i32 %1132, 2
  %1134 = icmp eq i32 %1133, 0
  %1135 = icmp slt i32 %1130, 10
  %1136 = or i1 %1134, %1135
  br i1 %1136, label %originalBB239, label %originalBB239alteredBB

originalBB239:                                    ; preds = %1128, %originalBB239alteredBB
  %1137 = load i8*, i8** %11, align 8, !dbg !2161
  %1138 = load i64, i64* %21, align 8, !dbg !2161
  %1139 = getelementptr inbounds i8, i8* %1137, i64 %1138, !dbg !2161
  store i8 63, i8* %1139, align 1, !dbg !2161
  %1140 = load i32, i32* @x.37
  %1141 = load i32, i32* @y.38
  %1142 = sub i32 %1140, 1
  %1143 = mul i32 %1140, %1142
  %1144 = urem i32 %1143, 2
  %1145 = icmp eq i32 %1144, 0
  %1146 = icmp slt i32 %1141, 10
  %1147 = or i1 %1145, %1146
  br i1 %1147, label %originalBBpart2241, label %originalBB239alteredBB

originalBBpart2241:                               ; preds = %originalBB239
  br label %1148, !dbg !2161

1148:                                             ; preds = %originalBBpart2241, %1124
  %1149 = load i64, i64* %21, align 8, !dbg !2164
  %1150 = add i64 %1149, 1, !dbg !2164
  store i64 %1150, i64* %21, align 8, !dbg !2164
  br label %1151, !dbg !2164

1151:                                             ; preds = %1148
  %1152 = load i32, i32* @x.37
  %1153 = load i32, i32* @y.38
  %1154 = sub i32 %1152, 1
  %1155 = mul i32 %1152, %1154
  %1156 = urem i32 %1155, 2
  %1157 = icmp eq i32 %1156, 0
  %1158 = icmp slt i32 %1153, 10
  %1159 = or i1 %1157, %1158
  br i1 %1159, label %originalBB243, label %originalBB243alteredBB

originalBB243:                                    ; preds = %1151, %originalBB243alteredBB
  %1160 = load i32, i32* @x.37
  %1161 = load i32, i32* @y.38
  %1162 = sub i32 %1160, 1
  %1163 = mul i32 %1160, %1162
  %1164 = urem i32 %1163, 2
  %1165 = icmp eq i32 %1164, 0
  %1166 = icmp slt i32 %1161, 10
  %1167 = or i1 %1165, %1166
  br i1 %1167, label %originalBBpart2245, label %originalBB243alteredBB

originalBBpart2245:                               ; preds = %originalBB243
  br label %1185, !dbg !2165

1168:                                             ; preds = %originalBBpart2202
  %1169 = load i32, i32* @x.37
  %1170 = load i32, i32* @y.38
  %1171 = sub i32 %1169, 1
  %1172 = mul i32 %1169, %1171
  %1173 = urem i32 %1172, 2
  %1174 = icmp eq i32 %1173, 0
  %1175 = icmp slt i32 %1170, 10
  %1176 = or i1 %1174, %1175
  br i1 %1176, label %originalBB247, label %originalBB247alteredBB

originalBB247:                                    ; preds = %1168, %originalBB247alteredBB
  %1177 = load i32, i32* @x.37
  %1178 = load i32, i32* @y.38
  %1179 = sub i32 %1177, 1
  %1180 = mul i32 %1177, %1179
  %1181 = urem i32 %1180, 2
  %1182 = icmp eq i32 %1181, 0
  %1183 = icmp slt i32 %1178, 10
  %1184 = or i1 %1182, %1183
  br i1 %1184, label %originalBBpart2249, label %originalBB247alteredBB

originalBBpart2249:                               ; preds = %originalBB247
  br label %1185, !dbg !2166

1185:                                             ; preds = %originalBBpart2249, %originalBBpart2245
  br label %1186, !dbg !2167

1186:                                             ; preds = %1185, %965, %originalBBpart2192, %940
  br label %1204, !dbg !2168

1187:                                             ; preds = %originalBBpart2172
  %1188 = load i32, i32* @x.37
  %1189 = load i32, i32* @y.38
  %1190 = sub i32 %1188, 1
  %1191 = mul i32 %1188, %1190
  %1192 = urem i32 %1191, 2
  %1193 = icmp eq i32 %1192, 0
  %1194 = icmp slt i32 %1189, 10
  %1195 = or i1 %1193, %1194
  br i1 %1195, label %originalBB251, label %originalBB251alteredBB

originalBB251:                                    ; preds = %1187, %originalBB251alteredBB
  %1196 = load i32, i32* @x.37
  %1197 = load i32, i32* @y.38
  %1198 = sub i32 %1196, 1
  %1199 = mul i32 %1196, %1198
  %1200 = urem i32 %1199, 2
  %1201 = icmp eq i32 %1200, 0
  %1202 = icmp slt i32 %1197, 10
  %1203 = or i1 %1201, %1202
  br i1 %1203, label %originalBBpart2253, label %originalBB251alteredBB

originalBBpart2253:                               ; preds = %originalBB251
  br label %1204, !dbg !2169

1204:                                             ; preds = %originalBBpart2253, %1186, %939
  %1205 = load i32, i32* @x.37
  %1206 = load i32, i32* @y.38
  %1207 = sub i32 %1205, 1
  %1208 = mul i32 %1205, %1207
  %1209 = urem i32 %1208, 2
  %1210 = icmp eq i32 %1209, 0
  %1211 = icmp slt i32 %1206, 10
  %1212 = or i1 %1210, %1211
  br i1 %1212, label %originalBB255, label %originalBB255alteredBB

originalBB255:                                    ; preds = %1204, %originalBB255alteredBB
  %1213 = load i32, i32* @x.37
  %1214 = load i32, i32* @y.38
  %1215 = sub i32 %1213, 1
  %1216 = mul i32 %1213, %1215
  %1217 = urem i32 %1216, 2
  %1218 = icmp eq i32 %1217, 0
  %1219 = icmp slt i32 %1214, 10
  %1220 = or i1 %1218, %1219
  br i1 %1220, label %originalBBpart2257, label %originalBB255alteredBB

originalBBpart2257:                               ; preds = %originalBB255
  br label %2649, !dbg !2170

1221:                                             ; preds = %485
  %1222 = load i32, i32* @x.37
  %1223 = load i32, i32* @y.38
  %1224 = sub i32 %1222, 1
  %1225 = mul i32 %1222, %1224
  %1226 = urem i32 %1225, 2
  %1227 = icmp eq i32 %1226, 0
  %1228 = icmp slt i32 %1223, 10
  %1229 = or i1 %1227, %1228
  br i1 %1229, label %originalBB259, label %originalBB259alteredBB

originalBB259:                                    ; preds = %1221, %originalBB259alteredBB
  store i8 97, i8* %32, align 1, !dbg !2171
  %1230 = load i32, i32* @x.37
  %1231 = load i32, i32* @y.38
  %1232 = sub i32 %1230, 1
  %1233 = mul i32 %1230, %1232
  %1234 = urem i32 %1233, 2
  %1235 = icmp eq i32 %1234, 0
  %1236 = icmp slt i32 %1231, 10
  %1237 = or i1 %1235, %1236
  br i1 %1237, label %originalBBpart2261, label %originalBB259alteredBB

originalBBpart2261:                               ; preds = %originalBB259
  br label %1416, !dbg !2172

1238:                                             ; preds = %485
  store i8 98, i8* %32, align 1, !dbg !2173
  br label %1416, !dbg !2174

1239:                                             ; preds = %485
  %1240 = load i32, i32* @x.37
  %1241 = load i32, i32* @y.38
  %1242 = sub i32 %1240, 1
  %1243 = mul i32 %1240, %1242
  %1244 = urem i32 %1243, 2
  %1245 = icmp eq i32 %1244, 0
  %1246 = icmp slt i32 %1241, 10
  %1247 = or i1 %1245, %1246
  br i1 %1247, label %originalBB263, label %originalBB263alteredBB

originalBB263:                                    ; preds = %1239, %originalBB263alteredBB
  store i8 102, i8* %32, align 1, !dbg !2175
  %1248 = load i32, i32* @x.37
  %1249 = load i32, i32* @y.38
  %1250 = sub i32 %1248, 1
  %1251 = mul i32 %1248, %1250
  %1252 = urem i32 %1251, 2
  %1253 = icmp eq i32 %1252, 0
  %1254 = icmp slt i32 %1249, 10
  %1255 = or i1 %1253, %1254
  br i1 %1255, label %originalBBpart2265, label %originalBB263alteredBB

originalBBpart2265:                               ; preds = %originalBB263
  br label %1416, !dbg !2176

1256:                                             ; preds = %485
  store i8 110, i8* %32, align 1, !dbg !2177
  br label %1392, !dbg !2178

1257:                                             ; preds = %485
  store i8 114, i8* %32, align 1, !dbg !2179
  br label %1392, !dbg !2180

1258:                                             ; preds = %485
  store i8 116, i8* %32, align 1, !dbg !2181
  br label %1392, !dbg !2182

1259:                                             ; preds = %485
  store i8 118, i8* %32, align 1, !dbg !2183
  br label %1416, !dbg !2184

1260:                                             ; preds = %485
  %1261 = load i32, i32* @x.37
  %1262 = load i32, i32* @y.38
  %1263 = sub i32 %1261, 1
  %1264 = mul i32 %1261, %1263
  %1265 = urem i32 %1264, 2
  %1266 = icmp eq i32 %1265, 0
  %1267 = icmp slt i32 %1262, 10
  %1268 = or i1 %1266, %1267
  br i1 %1268, label %originalBB267, label %originalBB267alteredBB

originalBB267:                                    ; preds = %1260, %originalBB267alteredBB
  %1269 = load i8, i8* %31, align 1, !dbg !2185
  store i8 %1269, i8* %32, align 1, !dbg !2186
  %1270 = load i32, i32* %15, align 4, !dbg !2187
  %1271 = icmp eq i32 %1270, 2, !dbg !2189
  %1272 = load i32, i32* @x.37
  %1273 = load i32, i32* @y.38
  %1274 = sub i32 %1272, 1
  %1275 = mul i32 %1272, %1274
  %1276 = urem i32 %1275, 2
  %1277 = icmp eq i32 %1276, 0
  %1278 = icmp slt i32 %1273, 10
  %1279 = or i1 %1277, %1278
  br i1 %1279, label %originalBBpart2269, label %originalBB267alteredBB

originalBBpart2269:                               ; preds = %originalBB267
  br i1 %1271, label %1280, label %1317, !dbg !2190

1280:                                             ; preds = %originalBBpart2269
  %1281 = load i32, i32* @x.37
  %1282 = load i32, i32* @y.38
  %1283 = sub i32 %1281, 1
  %1284 = mul i32 %1281, %1283
  %1285 = urem i32 %1284, 2
  %1286 = icmp eq i32 %1285, 0
  %1287 = icmp slt i32 %1282, 10
  %1288 = or i1 %1286, %1287
  br i1 %1288, label %originalBB271, label %originalBB271alteredBB

originalBB271:                                    ; preds = %1280, %originalBB271alteredBB
  %1289 = load i8, i8* %27, align 1, !dbg !2191
  %1290 = trunc i8 %1289 to i1, !dbg !2191
  %1291 = load i32, i32* @x.37
  %1292 = load i32, i32* @y.38
  %1293 = sub i32 %1291, 1
  %1294 = mul i32 %1291, %1293
  %1295 = urem i32 %1294, 2
  %1296 = icmp eq i32 %1295, 0
  %1297 = icmp slt i32 %1292, 10
  %1298 = or i1 %1296, %1297
  br i1 %1298, label %originalBBpart2273, label %originalBB271alteredBB

originalBBpart2273:                               ; preds = %originalBB271
  br i1 %1290, label %1299, label %1316, !dbg !2194

1299:                                             ; preds = %originalBBpart2273
  %1300 = load i32, i32* @x.37
  %1301 = load i32, i32* @y.38
  %1302 = sub i32 %1300, 1
  %1303 = mul i32 %1300, %1302
  %1304 = urem i32 %1303, 2
  %1305 = icmp eq i32 %1304, 0
  %1306 = icmp slt i32 %1301, 10
  %1307 = or i1 %1305, %1306
  br i1 %1307, label %originalBB275, label %originalBB275alteredBB

originalBB275:                                    ; preds = %1299, %originalBB275alteredBB
  %1308 = load i32, i32* @x.37
  %1309 = load i32, i32* @y.38
  %1310 = sub i32 %1308, 1
  %1311 = mul i32 %1308, %1310
  %1312 = urem i32 %1311, 2
  %1313 = icmp eq i32 %1312, 0
  %1314 = icmp slt i32 %1309, 10
  %1315 = or i1 %1313, %1314
  br i1 %1315, label %originalBBpart2277, label %originalBB275alteredBB

originalBBpart2277:                               ; preds = %originalBB275
  br label %3262, !dbg !2195

1316:                                             ; preds = %originalBBpart2273
  br label %2870, !dbg !2196

1317:                                             ; preds = %originalBBpart2269
  %1318 = load i8, i8* %25, align 1, !dbg !2197
  %1319 = trunc i8 %1318 to i1, !dbg !2197
  br i1 %1319, label %1320, label %1375, !dbg !2199

1320:                                             ; preds = %1317
  %1321 = load i32, i32* @x.37
  %1322 = load i32, i32* @y.38
  %1323 = sub i32 %1321, 1
  %1324 = mul i32 %1321, %1323
  %1325 = urem i32 %1324, 2
  %1326 = icmp eq i32 %1325, 0
  %1327 = icmp slt i32 %1322, 10
  %1328 = or i1 %1326, %1327
  br i1 %1328, label %originalBB279, label %originalBB279alteredBB

originalBB279:                                    ; preds = %1320, %originalBB279alteredBB
  %1329 = load i8, i8* %27, align 1, !dbg !2200
  %1330 = trunc i8 %1329 to i1, !dbg !2200
  %1331 = load i32, i32* @x.37
  %1332 = load i32, i32* @y.38
  %1333 = sub i32 %1331, 1
  %1334 = mul i32 %1331, %1333
  %1335 = urem i32 %1334, 2
  %1336 = icmp eq i32 %1335, 0
  %1337 = icmp slt i32 %1332, 10
  %1338 = or i1 %1336, %1337
  br i1 %1338, label %originalBBpart2282, label %originalBB279alteredBB

originalBBpart2282:                               ; preds = %originalBB279
  br i1 %1330, label %1339, label %1375, !dbg !2201

1339:                                             ; preds = %originalBBpart2282
  %1340 = load i32, i32* @x.37
  %1341 = load i32, i32* @y.38
  %1342 = sub i32 %1340, 1
  %1343 = mul i32 %1340, %1342
  %1344 = urem i32 %1343, 2
  %1345 = icmp eq i32 %1344, 0
  %1346 = icmp slt i32 %1341, 10
  %1347 = or i1 %1345, %1346
  br i1 %1347, label %originalBB284, label %originalBB284alteredBB

originalBB284:                                    ; preds = %1339, %originalBB284alteredBB
  %1348 = load i64, i64* %24, align 8, !dbg !2202
  %1349 = icmp ne i64 %1348, 0, !dbg !2202
  %1350 = load i32, i32* @x.37
  %1351 = load i32, i32* @y.38
  %1352 = sub i32 %1350, 1
  %1353 = mul i32 %1350, %1352
  %1354 = urem i32 %1353, 2
  %1355 = icmp eq i32 %1354, 0
  %1356 = icmp slt i32 %1351, 10
  %1357 = or i1 %1355, %1356
  br i1 %1357, label %originalBBpart2286, label %originalBB284alteredBB

originalBBpart2286:                               ; preds = %originalBB284
  br i1 %1349, label %1358, label %1375, !dbg !2203

1358:                                             ; preds = %originalBBpart2286
  %1359 = load i32, i32* @x.37
  %1360 = load i32, i32* @y.38
  %1361 = sub i32 %1359, 1
  %1362 = mul i32 %1359, %1361
  %1363 = urem i32 %1362, 2
  %1364 = icmp eq i32 %1363, 0
  %1365 = icmp slt i32 %1360, 10
  %1366 = or i1 %1364, %1365
  br i1 %1366, label %originalBB288, label %originalBB288alteredBB

originalBB288:                                    ; preds = %1358, %originalBB288alteredBB
  %1367 = load i32, i32* @x.37
  %1368 = load i32, i32* @y.38
  %1369 = sub i32 %1367, 1
  %1370 = mul i32 %1367, %1369
  %1371 = urem i32 %1370, 2
  %1372 = icmp eq i32 %1371, 0
  %1373 = icmp slt i32 %1368, 10
  %1374 = or i1 %1372, %1373
  br i1 %1374, label %originalBBpart2290, label %originalBB288alteredBB

originalBBpart2290:                               ; preds = %originalBB288
  br label %2870, !dbg !2204

1375:                                             ; preds = %originalBBpart2286, %originalBBpart2282, %1317
  %1376 = load i32, i32* @x.37
  %1377 = load i32, i32* @y.38
  %1378 = sub i32 %1376, 1
  %1379 = mul i32 %1376, %1378
  %1380 = urem i32 %1379, 2
  %1381 = icmp eq i32 %1380, 0
  %1382 = icmp slt i32 %1377, 10
  %1383 = or i1 %1381, %1382
  br i1 %1383, label %originalBB292, label %originalBB292alteredBB

originalBB292:                                    ; preds = %1375, %originalBB292alteredBB
  %1384 = load i32, i32* @x.37
  %1385 = load i32, i32* @y.38
  %1386 = sub i32 %1384, 1
  %1387 = mul i32 %1384, %1386
  %1388 = urem i32 %1387, 2
  %1389 = icmp eq i32 %1388, 0
  %1390 = icmp slt i32 %1385, 10
  %1391 = or i1 %1389, %1390
  br i1 %1391, label %originalBBpart2294, label %originalBB292alteredBB

originalBBpart2294:                               ; preds = %originalBB292
  br label %1392, !dbg !2202

1392:                                             ; preds = %originalBBpart2294, %1258, %1257, %1256
  call void @llvm.dbg.label(metadata !2205), !dbg !2206
  %1393 = load i32, i32* %15, align 4, !dbg !2207
  %1394 = icmp eq i32 %1393, 2, !dbg !2209
  br i1 %1394, label %1395, label %1415, !dbg !2210

1395:                                             ; preds = %1392
  %1396 = load i32, i32* @x.37
  %1397 = load i32, i32* @y.38
  %1398 = sub i32 %1396, 1
  %1399 = mul i32 %1396, %1398
  %1400 = urem i32 %1399, 2
  %1401 = icmp eq i32 %1400, 0
  %1402 = icmp slt i32 %1397, 10
  %1403 = or i1 %1401, %1402
  br i1 %1403, label %originalBB296, label %originalBB296alteredBB

originalBB296:                                    ; preds = %1395, %originalBB296alteredBB
  %1404 = load i8, i8* %27, align 1, !dbg !2211
  %1405 = trunc i8 %1404 to i1, !dbg !2211
  %1406 = load i32, i32* @x.37
  %1407 = load i32, i32* @y.38
  %1408 = sub i32 %1406, 1
  %1409 = mul i32 %1406, %1408
  %1410 = urem i32 %1409, 2
  %1411 = icmp eq i32 %1410, 0
  %1412 = icmp slt i32 %1407, 10
  %1413 = or i1 %1411, %1412
  br i1 %1413, label %originalBBpart2298, label %originalBB296alteredBB

originalBBpart2298:                               ; preds = %originalBB296
  br i1 %1405, label %1414, label %1415, !dbg !2212

1414:                                             ; preds = %originalBBpart2298
  br label %3262, !dbg !2213

1415:                                             ; preds = %originalBBpart2298, %1392
  br label %1416, !dbg !2211

1416:                                             ; preds = %1415, %1259, %originalBBpart2265, %1238, %originalBBpart2261
  call void @llvm.dbg.label(metadata !2214), !dbg !2215
  %1417 = load i32, i32* @x.37
  %1418 = load i32, i32* @y.38
  %1419 = sub i32 %1417, 1
  %1420 = mul i32 %1417, %1419
  %1421 = urem i32 %1420, 2
  %1422 = icmp eq i32 %1421, 0
  %1423 = icmp slt i32 %1418, 10
  %1424 = or i1 %1422, %1423
  br i1 %1424, label %originalBB300, label %originalBB300alteredBB

originalBB300:                                    ; preds = %1416, %originalBB300alteredBB
  %1425 = load i8, i8* %25, align 1, !dbg !2216
  %1426 = trunc i8 %1425 to i1, !dbg !2216
  %1427 = load i32, i32* @x.37
  %1428 = load i32, i32* @y.38
  %1429 = sub i32 %1427, 1
  %1430 = mul i32 %1427, %1429
  %1431 = urem i32 %1430, 2
  %1432 = icmp eq i32 %1431, 0
  %1433 = icmp slt i32 %1428, 10
  %1434 = or i1 %1432, %1433
  br i1 %1434, label %originalBBpart2302, label %originalBB300alteredBB

originalBBpart2302:                               ; preds = %originalBB300
  br i1 %1426, label %1435, label %1437, !dbg !2218

1435:                                             ; preds = %originalBBpart2302
  %1436 = load i8, i8* %32, align 1, !dbg !2219
  store i8 %1436, i8* %31, align 1, !dbg !2221
  br label %2712, !dbg !2222

1437:                                             ; preds = %originalBBpart2302
  br label %2649, !dbg !2223

1438:                                             ; preds = %485, %485
  %1439 = load i64, i64* %14, align 8, !dbg !2224
  %1440 = icmp eq i64 %1439, -1, !dbg !2226
  br i1 %1440, label %1441, label %1463, !dbg !2227

1441:                                             ; preds = %1438
  %1442 = load i32, i32* @x.37
  %1443 = load i32, i32* @y.38
  %1444 = sub i32 %1442, 1
  %1445 = mul i32 %1442, %1444
  %1446 = urem i32 %1445, 2
  %1447 = icmp eq i32 %1446, 0
  %1448 = icmp slt i32 %1443, 10
  %1449 = or i1 %1447, %1448
  br i1 %1449, label %originalBB304, label %originalBB304alteredBB

originalBB304:                                    ; preds = %1441, %originalBB304alteredBB
  %1450 = load i8*, i8** %13, align 8, !dbg !2228
  %1451 = getelementptr inbounds i8, i8* %1450, i64 1, !dbg !2228
  %1452 = load i8, i8* %1451, align 1, !dbg !2228
  %1453 = sext i8 %1452 to i32, !dbg !2228
  %1454 = icmp eq i32 %1453, 0, !dbg !2229
  %1455 = load i32, i32* @x.37
  %1456 = load i32, i32* @y.38
  %1457 = sub i32 %1455, 1
  %1458 = mul i32 %1455, %1457
  %1459 = urem i32 %1458, 2
  %1460 = icmp eq i32 %1459, 0
  %1461 = icmp slt i32 %1456, 10
  %1462 = or i1 %1460, %1461
  br i1 %1462, label %originalBBpart2306, label %originalBB304alteredBB

originalBBpart2306:                               ; preds = %originalBB304
  br i1 %1454, label %1467, label %1466, !dbg !2224

1463:                                             ; preds = %1438
  %1464 = load i64, i64* %14, align 8, !dbg !2230
  %1465 = icmp eq i64 %1464, 1, !dbg !2231
  br i1 %1465, label %1467, label %1466, !dbg !2227

1466:                                             ; preds = %1463, %originalBBpart2306
  br label %2649, !dbg !2232

1467:                                             ; preds = %1463, %originalBBpart2306
  br label %1468, !dbg !2233

1468:                                             ; preds = %1467, %485, %485
  %1469 = load i64, i64* %20, align 8, !dbg !2234
  %1470 = icmp ne i64 %1469, 0, !dbg !2236
  br i1 %1470, label %1471, label %1488, !dbg !2237

1471:                                             ; preds = %1468
  %1472 = load i32, i32* @x.37
  %1473 = load i32, i32* @y.38
  %1474 = sub i32 %1472, 1
  %1475 = mul i32 %1472, %1474
  %1476 = urem i32 %1475, 2
  %1477 = icmp eq i32 %1476, 0
  %1478 = icmp slt i32 %1473, 10
  %1479 = or i1 %1477, %1478
  br i1 %1479, label %originalBB308, label %originalBB308alteredBB

originalBB308:                                    ; preds = %1471, %originalBB308alteredBB
  %1480 = load i32, i32* @x.37
  %1481 = load i32, i32* @y.38
  %1482 = sub i32 %1480, 1
  %1483 = mul i32 %1480, %1482
  %1484 = urem i32 %1483, 2
  %1485 = icmp eq i32 %1484, 0
  %1486 = icmp slt i32 %1481, 10
  %1487 = or i1 %1485, %1486
  br i1 %1487, label %originalBBpart2310, label %originalBB308alteredBB

originalBBpart2310:                               ; preds = %originalBB308
  br label %2649, !dbg !2238

1488:                                             ; preds = %1468
  br label %1489, !dbg !2239

1489:                                             ; preds = %1488, %485
  store i8 1, i8* %35, align 1, !dbg !2240
  br label %1490, !dbg !2241

1490:                                             ; preds = %1489, %485, %485, %485, %485, %485, %485, %485, %485, %485, %485, %485, %485, %485, %485, %485
  %1491 = load i32, i32* @x.37
  %1492 = load i32, i32* @y.38
  %1493 = sub i32 %1491, 1
  %1494 = mul i32 %1491, %1493
  %1495 = urem i32 %1494, 2
  %1496 = icmp eq i32 %1495, 0
  %1497 = icmp slt i32 %1492, 10
  %1498 = or i1 %1496, %1497
  br i1 %1498, label %originalBB312, label %originalBB312alteredBB

originalBB312:                                    ; preds = %1490, %originalBB312alteredBB
  %1499 = load i32, i32* %15, align 4, !dbg !2242
  %1500 = icmp eq i32 %1499, 2, !dbg !2244
  %1501 = load i32, i32* @x.37
  %1502 = load i32, i32* @y.38
  %1503 = sub i32 %1501, 1
  %1504 = mul i32 %1501, %1503
  %1505 = urem i32 %1504, 2
  %1506 = icmp eq i32 %1505, 0
  %1507 = icmp slt i32 %1502, 10
  %1508 = or i1 %1506, %1507
  br i1 %1508, label %originalBBpart2314, label %originalBB312alteredBB

originalBBpart2314:                               ; preds = %originalBB312
  br i1 %1500, label %1509, label %1529, !dbg !2245

1509:                                             ; preds = %originalBBpart2314
  %1510 = load i32, i32* @x.37
  %1511 = load i32, i32* @y.38
  %1512 = sub i32 %1510, 1
  %1513 = mul i32 %1510, %1512
  %1514 = urem i32 %1513, 2
  %1515 = icmp eq i32 %1514, 0
  %1516 = icmp slt i32 %1511, 10
  %1517 = or i1 %1515, %1516
  br i1 %1517, label %originalBB316, label %originalBB316alteredBB

originalBB316:                                    ; preds = %1509, %originalBB316alteredBB
  %1518 = load i8, i8* %27, align 1, !dbg !2246
  %1519 = trunc i8 %1518 to i1, !dbg !2246
  %1520 = load i32, i32* @x.37
  %1521 = load i32, i32* @y.38
  %1522 = sub i32 %1520, 1
  %1523 = mul i32 %1520, %1522
  %1524 = urem i32 %1523, 2
  %1525 = icmp eq i32 %1524, 0
  %1526 = icmp slt i32 %1521, 10
  %1527 = or i1 %1525, %1526
  br i1 %1527, label %originalBBpart2318, label %originalBB316alteredBB

originalBBpart2318:                               ; preds = %originalBB316
  br i1 %1519, label %1528, label %1529, !dbg !2247

1528:                                             ; preds = %originalBBpart2318
  br label %3262, !dbg !2248

1529:                                             ; preds = %originalBBpart2318, %originalBBpart2314
  br label %2649, !dbg !2249

1530:                                             ; preds = %485
  store i8 1, i8* %29, align 1, !dbg !2250
  store i8 1, i8* %35, align 1, !dbg !2251
  %1531 = load i32, i32* %15, align 4, !dbg !2252
  %1532 = icmp eq i32 %1531, 2, !dbg !2254
  br i1 %1532, label %1533, label %1678, !dbg !2255

1533:                                             ; preds = %1530
  %1534 = load i8, i8* %27, align 1, !dbg !2256
  %1535 = trunc i8 %1534 to i1, !dbg !2256
  br i1 %1535, label %1536, label %1553, !dbg !2259

1536:                                             ; preds = %1533
  %1537 = load i32, i32* @x.37
  %1538 = load i32, i32* @y.38
  %1539 = sub i32 %1537, 1
  %1540 = mul i32 %1537, %1539
  %1541 = urem i32 %1540, 2
  %1542 = icmp eq i32 %1541, 0
  %1543 = icmp slt i32 %1538, 10
  %1544 = or i1 %1542, %1543
  br i1 %1544, label %originalBB320, label %originalBB320alteredBB

originalBB320:                                    ; preds = %1536, %originalBB320alteredBB
  %1545 = load i32, i32* @x.37
  %1546 = load i32, i32* @y.38
  %1547 = sub i32 %1545, 1
  %1548 = mul i32 %1545, %1547
  %1549 = urem i32 %1548, 2
  %1550 = icmp eq i32 %1549, 0
  %1551 = icmp slt i32 %1546, 10
  %1552 = or i1 %1550, %1551
  br i1 %1552, label %originalBBpart2322, label %originalBB320alteredBB

originalBBpart2322:                               ; preds = %originalBB320
  br label %3262, !dbg !2260

1553:                                             ; preds = %1533
  %1554 = load i32, i32* @x.37
  %1555 = load i32, i32* @y.38
  %1556 = sub i32 %1554, 1
  %1557 = mul i32 %1554, %1556
  %1558 = urem i32 %1557, 2
  %1559 = icmp eq i32 %1558, 0
  %1560 = icmp slt i32 %1555, 10
  %1561 = or i1 %1559, %1560
  br i1 %1561, label %originalBB324, label %originalBB324alteredBB

originalBB324:                                    ; preds = %1553, %originalBB324alteredBB
  %1562 = load i64, i64* %12, align 8, !dbg !2261
  %1563 = icmp ne i64 %1562, 0, !dbg !2261
  %1564 = load i32, i32* @x.37
  %1565 = load i32, i32* @y.38
  %1566 = sub i32 %1564, 1
  %1567 = mul i32 %1564, %1566
  %1568 = urem i32 %1567, 2
  %1569 = icmp eq i32 %1568, 0
  %1570 = icmp slt i32 %1565, 10
  %1571 = or i1 %1569, %1570
  br i1 %1571, label %originalBBpart2326, label %originalBB324alteredBB

originalBBpart2326:                               ; preds = %originalBB324
  br i1 %1563, label %1572, label %1593, !dbg !2263

1572:                                             ; preds = %originalBBpart2326
  %1573 = load i32, i32* @x.37
  %1574 = load i32, i32* @y.38
  %1575 = sub i32 %1573, 1
  %1576 = mul i32 %1573, %1575
  %1577 = urem i32 %1576, 2
  %1578 = icmp eq i32 %1577, 0
  %1579 = icmp slt i32 %1574, 10
  %1580 = or i1 %1578, %1579
  br i1 %1580, label %originalBB328, label %originalBB328alteredBB

originalBB328:                                    ; preds = %1572, %originalBB328alteredBB
  %1581 = load i64, i64* %22, align 8, !dbg !2264
  %1582 = icmp ne i64 %1581, 0, !dbg !2264
  %1583 = load i32, i32* @x.37
  %1584 = load i32, i32* @y.38
  %1585 = sub i32 %1583, 1
  %1586 = mul i32 %1583, %1585
  %1587 = urem i32 %1586, 2
  %1588 = icmp eq i32 %1587, 0
  %1589 = icmp slt i32 %1584, 10
  %1590 = or i1 %1588, %1589
  br i1 %1590, label %originalBBpart2330, label %originalBB328alteredBB

originalBBpart2330:                               ; preds = %originalBB328
  br i1 %1582, label %1593, label %1591, !dbg !2265

1591:                                             ; preds = %originalBBpart2330
  %1592 = load i64, i64* %12, align 8, !dbg !2266
  store i64 %1592, i64* %22, align 8, !dbg !2268
  store i64 0, i64* %12, align 8, !dbg !2269
  br label %1593, !dbg !2270

1593:                                             ; preds = %1591, %originalBBpart2330, %originalBBpart2326
  %1594 = load i32, i32* @x.37
  %1595 = load i32, i32* @y.38
  %1596 = sub i32 %1594, 1
  %1597 = mul i32 %1594, %1596
  %1598 = urem i32 %1597, 2
  %1599 = icmp eq i32 %1598, 0
  %1600 = icmp slt i32 %1595, 10
  %1601 = or i1 %1599, %1600
  br i1 %1601, label %originalBB332, label %originalBB332alteredBB

originalBB332:                                    ; preds = %1593, %originalBB332alteredBB
  %1602 = load i32, i32* @x.37
  %1603 = load i32, i32* @y.38
  %1604 = sub i32 %1602, 1
  %1605 = mul i32 %1602, %1604
  %1606 = urem i32 %1605, 2
  %1607 = icmp eq i32 %1606, 0
  %1608 = icmp slt i32 %1603, 10
  %1609 = or i1 %1607, %1608
  br i1 %1609, label %originalBBpart2334, label %originalBB332alteredBB

originalBBpart2334:                               ; preds = %originalBB332
  br label %1610, !dbg !2271

1610:                                             ; preds = %originalBBpart2334
  %1611 = load i64, i64* %21, align 8, !dbg !2272
  %1612 = load i64, i64* %12, align 8, !dbg !2272
  %1613 = icmp ult i64 %1611, %1612, !dbg !2272
  br i1 %1613, label %1614, label %1618, !dbg !2275

1614:                                             ; preds = %1610
  %1615 = load i8*, i8** %11, align 8, !dbg !2272
  %1616 = load i64, i64* %21, align 8, !dbg !2272
  %1617 = getelementptr inbounds i8, i8* %1615, i64 %1616, !dbg !2272
  store i8 39, i8* %1617, align 1, !dbg !2272
  br label %1618, !dbg !2272

1618:                                             ; preds = %1614, %1610
  %1619 = load i64, i64* %21, align 8, !dbg !2275
  %1620 = add i64 %1619, 1, !dbg !2275
  store i64 %1620, i64* %21, align 8, !dbg !2275
  br label %1621, !dbg !2275

1621:                                             ; preds = %1618
  %1622 = load i32, i32* @x.37
  %1623 = load i32, i32* @y.38
  %1624 = sub i32 %1622, 1
  %1625 = mul i32 %1622, %1624
  %1626 = urem i32 %1625, 2
  %1627 = icmp eq i32 %1626, 0
  %1628 = icmp slt i32 %1623, 10
  %1629 = or i1 %1627, %1628
  br i1 %1629, label %originalBB336, label %originalBB336alteredBB

originalBB336:                                    ; preds = %1621, %originalBB336alteredBB
  %1630 = load i32, i32* @x.37
  %1631 = load i32, i32* @y.38
  %1632 = sub i32 %1630, 1
  %1633 = mul i32 %1630, %1632
  %1634 = urem i32 %1633, 2
  %1635 = icmp eq i32 %1634, 0
  %1636 = icmp slt i32 %1631, 10
  %1637 = or i1 %1635, %1636
  br i1 %1637, label %originalBBpart2338, label %originalBB336alteredBB

originalBBpart2338:                               ; preds = %originalBB336
  br label %1638, !dbg !2276

1638:                                             ; preds = %originalBBpart2338
  %1639 = load i64, i64* %21, align 8, !dbg !2277
  %1640 = load i64, i64* %12, align 8, !dbg !2277
  %1641 = icmp ult i64 %1639, %1640, !dbg !2277
  br i1 %1641, label %1642, label %1646, !dbg !2280

1642:                                             ; preds = %1638
  %1643 = load i8*, i8** %11, align 8, !dbg !2277
  %1644 = load i64, i64* %21, align 8, !dbg !2277
  %1645 = getelementptr inbounds i8, i8* %1643, i64 %1644, !dbg !2277
  store i8 92, i8* %1645, align 1, !dbg !2277
  br label %1646, !dbg !2277

1646:                                             ; preds = %1642, %1638
  %1647 = load i64, i64* %21, align 8, !dbg !2280
  %1648 = add i64 %1647, 1, !dbg !2280
  store i64 %1648, i64* %21, align 8, !dbg !2280
  br label %1649, !dbg !2280

1649:                                             ; preds = %1646
  %1650 = load i32, i32* @x.37
  %1651 = load i32, i32* @y.38
  %1652 = sub i32 %1650, 1
  %1653 = mul i32 %1650, %1652
  %1654 = urem i32 %1653, 2
  %1655 = icmp eq i32 %1654, 0
  %1656 = icmp slt i32 %1651, 10
  %1657 = or i1 %1655, %1656
  br i1 %1657, label %originalBB340, label %originalBB340alteredBB

originalBB340:                                    ; preds = %1649, %originalBB340alteredBB
  %1658 = load i32, i32* @x.37
  %1659 = load i32, i32* @y.38
  %1660 = sub i32 %1658, 1
  %1661 = mul i32 %1658, %1660
  %1662 = urem i32 %1661, 2
  %1663 = icmp eq i32 %1662, 0
  %1664 = icmp slt i32 %1659, 10
  %1665 = or i1 %1663, %1664
  br i1 %1665, label %originalBBpart2342, label %originalBB340alteredBB

originalBBpart2342:                               ; preds = %originalBB340
  br label %1666, !dbg !2281

1666:                                             ; preds = %originalBBpart2342
  %1667 = load i64, i64* %21, align 8, !dbg !2282
  %1668 = load i64, i64* %12, align 8, !dbg !2282
  %1669 = icmp ult i64 %1667, %1668, !dbg !2282
  br i1 %1669, label %1670, label %1674, !dbg !2285

1670:                                             ; preds = %1666
  %1671 = load i8*, i8** %11, align 8, !dbg !2282
  %1672 = load i64, i64* %21, align 8, !dbg !2282
  %1673 = getelementptr inbounds i8, i8* %1671, i64 %1672, !dbg !2282
  store i8 39, i8* %1673, align 1, !dbg !2282
  br label %1674, !dbg !2282

1674:                                             ; preds = %1670, %1666
  %1675 = load i64, i64* %21, align 8, !dbg !2285
  %1676 = add i64 %1675, 1, !dbg !2285
  store i64 %1676, i64* %21, align 8, !dbg !2285
  br label %1677, !dbg !2285

1677:                                             ; preds = %1674
  store i8 0, i8* %28, align 1, !dbg !2286
  br label %1678, !dbg !2287

1678:                                             ; preds = %1677, %1530
  %1679 = load i32, i32* @x.37
  %1680 = load i32, i32* @y.38
  %1681 = sub i32 %1679, 1
  %1682 = mul i32 %1679, %1681
  %1683 = urem i32 %1682, 2
  %1684 = icmp eq i32 %1683, 0
  %1685 = icmp slt i32 %1680, 10
  %1686 = or i1 %1684, %1685
  br i1 %1686, label %originalBB344, label %originalBB344alteredBB

originalBB344:                                    ; preds = %1678, %originalBB344alteredBB
  %1687 = load i32, i32* @x.37
  %1688 = load i32, i32* @y.38
  %1689 = sub i32 %1687, 1
  %1690 = mul i32 %1687, %1689
  %1691 = urem i32 %1690, 2
  %1692 = icmp eq i32 %1691, 0
  %1693 = icmp slt i32 %1688, 10
  %1694 = or i1 %1692, %1693
  br i1 %1694, label %originalBBpart2346, label %originalBB344alteredBB

originalBBpart2346:                               ; preds = %originalBB344
  br label %2649, !dbg !2288

1695:                                             ; preds = %485, %485, %485, %485, %485, %485, %485, %485, %485, %485, %485, %485, %485, %485, %485, %485, %485, %485, %485, %485, %485, %485, %485, %485, %485, %485, %485, %485, %485, %485, %485, %485, %485, %485, %485, %485, %485, %485, %485, %485, %485, %485, %485, %485, %485, %485, %485, %485, %485, %485, %485, %485, %485, %485, %485, %485, %485, %485, %485, %485, %485, %485, %485, %485, %485, %485, %485, %485, %485, %485, %485
  store i8 1, i8* %35, align 1, !dbg !2289
  br label %2649, !dbg !2290

1696:                                             ; preds = %485
  call void @llvm.dbg.declare(metadata i64* %36, metadata !2291, metadata !DIExpression()), !dbg !2293
  call void @llvm.dbg.declare(metadata i8* %37, metadata !2294, metadata !DIExpression()), !dbg !2295
  %1697 = load i8, i8* %26, align 1, !dbg !2296
  %1698 = trunc i8 %1697 to i1, !dbg !2296
  br i1 %1698, label %1699, label %1727, !dbg !2298

1699:                                             ; preds = %1696
  %1700 = load i32, i32* @x.37
  %1701 = load i32, i32* @y.38
  %1702 = sub i32 %1700, 1
  %1703 = mul i32 %1700, %1702
  %1704 = urem i32 %1703, 2
  %1705 = icmp eq i32 %1704, 0
  %1706 = icmp slt i32 %1701, 10
  %1707 = or i1 %1705, %1706
  br i1 %1707, label %originalBB348, label %originalBB348alteredBB

originalBB348:                                    ; preds = %1699, %originalBB348alteredBB
  store i64 1, i64* %36, align 8, !dbg !2299
  %1708 = call i16** @__ctype_b_loc() #15, !dbg !2301
  %1709 = load i16*, i16** %1708, align 8, !dbg !2301
  %1710 = load i8, i8* %31, align 1, !dbg !2301
  %1711 = zext i8 %1710 to i32, !dbg !2301
  %1712 = sext i32 %1711 to i64, !dbg !2301
  %1713 = getelementptr inbounds i16, i16* %1709, i64 %1712, !dbg !2301
  %1714 = load i16, i16* %1713, align 2, !dbg !2301
  %1715 = zext i16 %1714 to i32, !dbg !2301
  %1716 = and i32 %1715, 16384, !dbg !2301
  %1717 = icmp ne i32 %1716, 0, !dbg !2302
  %1718 = zext i1 %1717 to i8, !dbg !2303
  store i8 %1718, i8* %37, align 1, !dbg !2303
  %1719 = load i32, i32* @x.37
  %1720 = load i32, i32* @y.38
  %1721 = sub i32 %1719, 1
  %1722 = mul i32 %1719, %1721
  %1723 = urem i32 %1722, 2
  %1724 = icmp eq i32 %1723, 0
  %1725 = icmp slt i32 %1720, 10
  %1726 = or i1 %1724, %1725
  br i1 %1726, label %originalBBpart2358, label %originalBB348alteredBB

originalBBpart2358:                               ; preds = %originalBB348
  br label %2000, !dbg !2304

1727:                                             ; preds = %1696
  call void @llvm.dbg.declare(metadata %struct.__mbstate_t* %38, metadata !2305, metadata !DIExpression()), !dbg !2322
  %1728 = bitcast %struct.__mbstate_t* %38 to i8*, !dbg !2323
  call void @llvm.memset.p0i8.i64(i8* align 4 %1728, i8 0, i64 8, i1 false), !dbg !2323
  store i64 0, i64* %36, align 8, !dbg !2324
  store i8 1, i8* %37, align 1, !dbg !2325
  %1729 = load i64, i64* %14, align 8, !dbg !2326
  %1730 = icmp eq i64 %1729, -1, !dbg !2328
  br i1 %1730, label %1731, label %1734, !dbg !2329

1731:                                             ; preds = %1727
  %1732 = load i8*, i8** %13, align 8, !dbg !2330
  %1733 = call i64 @strlen(i8* %1732) #13, !dbg !2331
  store i64 %1733, i64* %14, align 8, !dbg !2332
  br label %1734, !dbg !2333

1734:                                             ; preds = %1731, %1727
  %1735 = load i32, i32* @x.37
  %1736 = load i32, i32* @y.38
  %1737 = sub i32 %1735, 1
  %1738 = mul i32 %1735, %1737
  %1739 = urem i32 %1738, 2
  %1740 = icmp eq i32 %1739, 0
  %1741 = icmp slt i32 %1736, 10
  %1742 = or i1 %1740, %1741
  br i1 %1742, label %originalBB360, label %originalBB360alteredBB

originalBB360:                                    ; preds = %1734, %originalBB360alteredBB
  %1743 = load i32, i32* @x.37
  %1744 = load i32, i32* @y.38
  %1745 = sub i32 %1743, 1
  %1746 = mul i32 %1743, %1745
  %1747 = urem i32 %1746, 2
  %1748 = icmp eq i32 %1747, 0
  %1749 = icmp slt i32 %1744, 10
  %1750 = or i1 %1748, %1749
  br i1 %1750, label %originalBBpart2362, label %originalBB360alteredBB

originalBBpart2362:                               ; preds = %originalBB360
  br label %1751, !dbg !2334

1751:                                             ; preds = %originalBBpart2413, %originalBBpart2362
  call void @llvm.dbg.declare(metadata i32* %39, metadata !2335, metadata !DIExpression()), !dbg !2338
  call void @llvm.dbg.declare(metadata i64* %40, metadata !2339, metadata !DIExpression()), !dbg !2340
  %1752 = load i8*, i8** %13, align 8, !dbg !2341
  %1753 = load i64, i64* %20, align 8, !dbg !2342
  %1754 = load i64, i64* %36, align 8, !dbg !2343
  %1755 = add i64 %1753, %1754, !dbg !2344
  %1756 = getelementptr inbounds i8, i8* %1752, i64 %1755, !dbg !2341
  %1757 = load i64, i64* %14, align 8, !dbg !2345
  %1758 = load i64, i64* %20, align 8, !dbg !2346
  %1759 = load i64, i64* %36, align 8, !dbg !2347
  %1760 = add i64 %1758, %1759, !dbg !2348
  %1761 = sub i64 %1757, %1760, !dbg !2349
  %1762 = call i64 @rpl_mbrtowc(i32* %39, i8* %1756, i64 %1761, %struct.__mbstate_t* %38), !dbg !2350
  store i64 %1762, i64* %40, align 8, !dbg !2340
  %1763 = load i64, i64* %40, align 8, !dbg !2351
  %1764 = icmp eq i64 %1763, 0, !dbg !2353
  br i1 %1764, label %1765, label %1766, !dbg !2354

1765:                                             ; preds = %1751
  br label %1983, !dbg !2355

1766:                                             ; preds = %1751
  %1767 = load i64, i64* %40, align 8, !dbg !2356
  %1768 = icmp eq i64 %1767, -1, !dbg !2358
  br i1 %1768, label %1769, label %1770, !dbg !2359

1769:                                             ; preds = %1766
  store i8 0, i8* %37, align 1, !dbg !2360
  br label %1983, !dbg !2362

1770:                                             ; preds = %1766
  %1771 = load i32, i32* @x.37
  %1772 = load i32, i32* @y.38
  %1773 = sub i32 %1771, 1
  %1774 = mul i32 %1771, %1773
  %1775 = urem i32 %1774, 2
  %1776 = icmp eq i32 %1775, 0
  %1777 = icmp slt i32 %1772, 10
  %1778 = or i1 %1776, %1777
  br i1 %1778, label %originalBB364, label %originalBB364alteredBB

originalBB364:                                    ; preds = %1770, %originalBB364alteredBB
  %1779 = load i64, i64* %40, align 8, !dbg !2363
  %1780 = icmp eq i64 %1779, -2, !dbg !2365
  %1781 = load i32, i32* @x.37
  %1782 = load i32, i32* @y.38
  %1783 = sub i32 %1781, 1
  %1784 = mul i32 %1781, %1783
  %1785 = urem i32 %1784, 2
  %1786 = icmp eq i32 %1785, 0
  %1787 = icmp slt i32 %1782, 10
  %1788 = or i1 %1786, %1787
  br i1 %1788, label %originalBBpart2366, label %originalBB364alteredBB

originalBBpart2366:                               ; preds = %originalBB364
  br i1 %1780, label %1789, label %1827, !dbg !2366

1789:                                             ; preds = %originalBBpart2366
  %1790 = load i32, i32* @x.37
  %1791 = load i32, i32* @y.38
  %1792 = sub i32 %1790, 1
  %1793 = mul i32 %1790, %1792
  %1794 = urem i32 %1793, 2
  %1795 = icmp eq i32 %1794, 0
  %1796 = icmp slt i32 %1791, 10
  %1797 = or i1 %1795, %1796
  br i1 %1797, label %originalBB368, label %originalBB368alteredBB

originalBB368:                                    ; preds = %1789, %originalBB368alteredBB
  store i8 0, i8* %37, align 1, !dbg !2367
  %1798 = load i32, i32* @x.37
  %1799 = load i32, i32* @y.38
  %1800 = sub i32 %1798, 1
  %1801 = mul i32 %1798, %1800
  %1802 = urem i32 %1801, 2
  %1803 = icmp eq i32 %1802, 0
  %1804 = icmp slt i32 %1799, 10
  %1805 = or i1 %1803, %1804
  br i1 %1805, label %originalBBpart2370, label %originalBB368alteredBB

originalBBpart2370:                               ; preds = %originalBB368
  br label %1806, !dbg !2369

1806:                                             ; preds = %1823, %originalBBpart2370
  %1807 = load i64, i64* %20, align 8, !dbg !2370
  %1808 = load i64, i64* %36, align 8, !dbg !2371
  %1809 = add i64 %1807, %1808, !dbg !2372
  %1810 = load i64, i64* %14, align 8, !dbg !2373
  %1811 = icmp ult i64 %1809, %1810, !dbg !2374
  br i1 %1811, label %1812, label %1821, !dbg !2375

1812:                                             ; preds = %1806
  %1813 = load i8*, i8** %13, align 8, !dbg !2376
  %1814 = load i64, i64* %20, align 8, !dbg !2377
  %1815 = load i64, i64* %36, align 8, !dbg !2378
  %1816 = add i64 %1814, %1815, !dbg !2379
  %1817 = getelementptr inbounds i8, i8* %1813, i64 %1816, !dbg !2376
  %1818 = load i8, i8* %1817, align 1, !dbg !2376
  %1819 = sext i8 %1818 to i32, !dbg !2376
  %1820 = icmp ne i32 %1819, 0, !dbg !2375
  br label %1821

1821:                                             ; preds = %1812, %1806
  %1822 = phi i1 [ false, %1806 ], [ %1820, %1812 ], !dbg !2380
  br i1 %1822, label %1823, label %1826, !dbg !2369

1823:                                             ; preds = %1821
  %1824 = load i64, i64* %36, align 8, !dbg !2381
  %1825 = add i64 %1824, 1, !dbg !2381
  store i64 %1825, i64* %36, align 8, !dbg !2381
  br label %1806, !dbg !2369, !llvm.loop !2382

1826:                                             ; preds = %1821
  br label %1983, !dbg !2383

1827:                                             ; preds = %originalBBpart2366
  %1828 = load i8, i8* %27, align 1, !dbg !2384
  %1829 = trunc i8 %1828 to i1, !dbg !2384
  br i1 %1829, label %1830, label %1887, !dbg !2387

1830:                                             ; preds = %1827
  %1831 = load i32, i32* %15, align 4, !dbg !2388
  %1832 = icmp eq i32 %1831, 2, !dbg !2389
  br i1 %1832, label %1833, label %1887, !dbg !2390

1833:                                             ; preds = %1830
  call void @llvm.dbg.declare(metadata i64* %41, metadata !2391, metadata !DIExpression()), !dbg !2393
  store i64 1, i64* %41, align 8, !dbg !2394
  br label %1834, !dbg !2396

1834:                                             ; preds = %1867, %1833
  %1835 = load i32, i32* @x.37
  %1836 = load i32, i32* @y.38
  %1837 = sub i32 %1835, 1
  %1838 = mul i32 %1835, %1837
  %1839 = urem i32 %1838, 2
  %1840 = icmp eq i32 %1839, 0
  %1841 = icmp slt i32 %1836, 10
  %1842 = or i1 %1840, %1841
  br i1 %1842, label %originalBB372, label %originalBB372alteredBB

originalBB372:                                    ; preds = %1834, %originalBB372alteredBB
  %1843 = load i64, i64* %41, align 8, !dbg !2397
  %1844 = load i64, i64* %40, align 8, !dbg !2399
  %1845 = icmp ult i64 %1843, %1844, !dbg !2400
  %1846 = load i32, i32* @x.37
  %1847 = load i32, i32* @y.38
  %1848 = sub i32 %1846, 1
  %1849 = mul i32 %1846, %1848
  %1850 = urem i32 %1849, 2
  %1851 = icmp eq i32 %1850, 0
  %1852 = icmp slt i32 %1847, 10
  %1853 = or i1 %1851, %1852
  br i1 %1853, label %originalBBpart2374, label %originalBB372alteredBB

originalBBpart2374:                               ; preds = %originalBB372
  br i1 %1845, label %1854, label %1870, !dbg !2401

1854:                                             ; preds = %originalBBpart2374
  %1855 = load i8*, i8** %13, align 8, !dbg !2402
  %1856 = load i64, i64* %20, align 8, !dbg !2403
  %1857 = load i64, i64* %36, align 8, !dbg !2404
  %1858 = add i64 %1856, %1857, !dbg !2405
  %1859 = load i64, i64* %41, align 8, !dbg !2406
  %1860 = add i64 %1858, %1859, !dbg !2407
  %1861 = getelementptr inbounds i8, i8* %1855, i64 %1860, !dbg !2402
  %1862 = load i8, i8* %1861, align 1, !dbg !2402
  %1863 = sext i8 %1862 to i32, !dbg !2402
  switch i32 %1863, label %1865 [
    i32 91, label %1864
    i32 92, label %1864
    i32 94, label %1864
    i32 96, label %1864
    i32 124, label %1864
  ], !dbg !2408

1864:                                             ; preds = %1854, %1854, %1854, %1854, %1854
  br label %3262, !dbg !2409

1865:                                             ; preds = %1854
  br label %1866, !dbg !2411

1866:                                             ; preds = %1865
  br label %1867, !dbg !2412

1867:                                             ; preds = %1866
  %1868 = load i64, i64* %41, align 8, !dbg !2413
  %1869 = add i64 %1868, 1, !dbg !2413
  store i64 %1869, i64* %41, align 8, !dbg !2413
  br label %1834, !dbg !2414, !llvm.loop !2415

1870:                                             ; preds = %originalBBpart2374
  %1871 = load i32, i32* @x.37
  %1872 = load i32, i32* @y.38
  %1873 = sub i32 %1871, 1
  %1874 = mul i32 %1871, %1873
  %1875 = urem i32 %1874, 2
  %1876 = icmp eq i32 %1875, 0
  %1877 = icmp slt i32 %1872, 10
  %1878 = or i1 %1876, %1877
  br i1 %1878, label %originalBB376, label %originalBB376alteredBB

originalBB376:                                    ; preds = %1870, %originalBB376alteredBB
  %1879 = load i32, i32* @x.37
  %1880 = load i32, i32* @y.38
  %1881 = sub i32 %1879, 1
  %1882 = mul i32 %1879, %1881
  %1883 = urem i32 %1882, 2
  %1884 = icmp eq i32 %1883, 0
  %1885 = icmp slt i32 %1880, 10
  %1886 = or i1 %1884, %1885
  br i1 %1886, label %originalBBpart2378, label %originalBB376alteredBB

originalBBpart2378:                               ; preds = %originalBB376
  br label %1887, !dbg !2417

1887:                                             ; preds = %originalBBpart2378, %1830, %1827
  %1888 = load i32, i32* @x.37
  %1889 = load i32, i32* @y.38
  %1890 = sub i32 %1888, 1
  %1891 = mul i32 %1888, %1890
  %1892 = urem i32 %1891, 2
  %1893 = icmp eq i32 %1892, 0
  %1894 = icmp slt i32 %1889, 10
  %1895 = or i1 %1893, %1894
  br i1 %1895, label %originalBB380, label %originalBB380alteredBB

originalBB380:                                    ; preds = %1887, %originalBB380alteredBB
  %1896 = load i32, i32* %39, align 4, !dbg !2418
  %1897 = call i32 @iswprint(i32 %1896) #10, !dbg !2420
  %1898 = icmp ne i32 %1897, 0, !dbg !2420
  %1899 = load i32, i32* @x.37
  %1900 = load i32, i32* @y.38
  %1901 = sub i32 %1899, 1
  %1902 = mul i32 %1899, %1901
  %1903 = urem i32 %1902, 2
  %1904 = icmp eq i32 %1903, 0
  %1905 = icmp slt i32 %1900, 10
  %1906 = or i1 %1904, %1905
  br i1 %1906, label %originalBBpart2382, label %originalBB380alteredBB

originalBBpart2382:                               ; preds = %originalBB380
  br i1 %1898, label %1924, label %1907, !dbg !2421

1907:                                             ; preds = %originalBBpart2382
  %1908 = load i32, i32* @x.37
  %1909 = load i32, i32* @y.38
  %1910 = sub i32 %1908, 1
  %1911 = mul i32 %1908, %1910
  %1912 = urem i32 %1911, 2
  %1913 = icmp eq i32 %1912, 0
  %1914 = icmp slt i32 %1909, 10
  %1915 = or i1 %1913, %1914
  br i1 %1915, label %originalBB384, label %originalBB384alteredBB

originalBB384:                                    ; preds = %1907, %originalBB384alteredBB
  store i8 0, i8* %37, align 1, !dbg !2422
  %1916 = load i32, i32* @x.37
  %1917 = load i32, i32* @y.38
  %1918 = sub i32 %1916, 1
  %1919 = mul i32 %1916, %1918
  %1920 = urem i32 %1919, 2
  %1921 = icmp eq i32 %1920, 0
  %1922 = icmp slt i32 %1917, 10
  %1923 = or i1 %1921, %1922
  br i1 %1923, label %originalBBpart2386, label %originalBB384alteredBB

originalBBpart2386:                               ; preds = %originalBB384
  br label %1924, !dbg !2423

1924:                                             ; preds = %originalBBpart2386, %originalBBpart2382
  %1925 = load i32, i32* @x.37
  %1926 = load i32, i32* @y.38
  %1927 = sub i32 %1925, 1
  %1928 = mul i32 %1925, %1927
  %1929 = urem i32 %1928, 2
  %1930 = icmp eq i32 %1929, 0
  %1931 = icmp slt i32 %1926, 10
  %1932 = or i1 %1930, %1931
  br i1 %1932, label %originalBB388, label %originalBB388alteredBB

originalBB388:                                    ; preds = %1924, %originalBB388alteredBB
  %1933 = load i64, i64* %40, align 8, !dbg !2424
  %1934 = load i64, i64* %36, align 8, !dbg !2425
  %1935 = add i64 %1934, %1933, !dbg !2425
  store i64 %1935, i64* %36, align 8, !dbg !2425
  %1936 = load i32, i32* @x.37
  %1937 = load i32, i32* @y.38
  %1938 = sub i32 %1936, 1
  %1939 = mul i32 %1936, %1938
  %1940 = urem i32 %1939, 2
  %1941 = icmp eq i32 %1940, 0
  %1942 = icmp slt i32 %1937, 10
  %1943 = or i1 %1941, %1942
  br i1 %1943, label %originalBBpart2398, label %originalBB388alteredBB

originalBBpart2398:                               ; preds = %originalBB388
  br label %1944

1944:                                             ; preds = %originalBBpart2398
  br label %1945

1945:                                             ; preds = %1944
  br label %1946

1946:                                             ; preds = %1945
  %1947 = load i32, i32* @x.37
  %1948 = load i32, i32* @y.38
  %1949 = sub i32 %1947, 1
  %1950 = mul i32 %1947, %1949
  %1951 = urem i32 %1950, 2
  %1952 = icmp eq i32 %1951, 0
  %1953 = icmp slt i32 %1948, 10
  %1954 = or i1 %1952, %1953
  br i1 %1954, label %originalBB400, label %originalBB400alteredBB

originalBB400:                                    ; preds = %1946, %originalBB400alteredBB
  %1955 = load i32, i32* @x.37
  %1956 = load i32, i32* @y.38
  %1957 = sub i32 %1955, 1
  %1958 = mul i32 %1955, %1957
  %1959 = urem i32 %1958, 2
  %1960 = icmp eq i32 %1959, 0
  %1961 = icmp slt i32 %1956, 10
  %1962 = or i1 %1960, %1961
  br i1 %1962, label %originalBBpart2402, label %originalBB400alteredBB

originalBBpart2402:                               ; preds = %originalBB400
  br label %1963, !dbg !2426

1963:                                             ; preds = %originalBBpart2402
  %1964 = load i32, i32* @x.37
  %1965 = load i32, i32* @y.38
  %1966 = sub i32 %1964, 1
  %1967 = mul i32 %1964, %1966
  %1968 = urem i32 %1967, 2
  %1969 = icmp eq i32 %1968, 0
  %1970 = icmp slt i32 %1965, 10
  %1971 = or i1 %1969, %1970
  br i1 %1971, label %originalBB404, label %originalBB404alteredBB

originalBB404:                                    ; preds = %1963, %originalBB404alteredBB
  %1972 = call i32 @mbsinit(%struct.__mbstate_t* %38) #13, !dbg !2427
  %1973 = icmp ne i32 %1972, 0, !dbg !2428
  %1974 = xor i1 %1973, true, !dbg !2428
  %1975 = load i32, i32* @x.37
  %1976 = load i32, i32* @y.38
  %1977 = sub i32 %1975, 1
  %1978 = mul i32 %1975, %1977
  %1979 = urem i32 %1978, 2
  %1980 = icmp eq i32 %1979, 0
  %1981 = icmp slt i32 %1976, 10
  %1982 = or i1 %1980, %1981
  br i1 %1982, label %originalBBpart2413, label %originalBB404alteredBB

originalBBpart2413:                               ; preds = %originalBB404
  br i1 %1974, label %1751, label %1983, !dbg !2426, !llvm.loop !2429

1983:                                             ; preds = %originalBBpart2413, %1826, %1769, %1765
  %1984 = load i32, i32* @x.37
  %1985 = load i32, i32* @y.38
  %1986 = sub i32 %1984, 1
  %1987 = mul i32 %1984, %1986
  %1988 = urem i32 %1987, 2
  %1989 = icmp eq i32 %1988, 0
  %1990 = icmp slt i32 %1985, 10
  %1991 = or i1 %1989, %1990
  br i1 %1991, label %originalBB415, label %originalBB415alteredBB

originalBB415:                                    ; preds = %1983, %originalBB415alteredBB
  %1992 = load i32, i32* @x.37
  %1993 = load i32, i32* @y.38
  %1994 = sub i32 %1992, 1
  %1995 = mul i32 %1992, %1994
  %1996 = urem i32 %1995, 2
  %1997 = icmp eq i32 %1996, 0
  %1998 = icmp slt i32 %1993, 10
  %1999 = or i1 %1997, %1998
  br i1 %1999, label %originalBBpart2417, label %originalBB415alteredBB

originalBBpart2417:                               ; preds = %originalBB415
  br label %2000

2000:                                             ; preds = %originalBBpart2417, %originalBBpart2358
  %2001 = load i32, i32* @x.37
  %2002 = load i32, i32* @y.38
  %2003 = sub i32 %2001, 1
  %2004 = mul i32 %2001, %2003
  %2005 = urem i32 %2004, 2
  %2006 = icmp eq i32 %2005, 0
  %2007 = icmp slt i32 %2002, 10
  %2008 = or i1 %2006, %2007
  br i1 %2008, label %originalBB419, label %originalBB419alteredBB

originalBB419:                                    ; preds = %2000, %originalBB419alteredBB
  %2009 = load i8, i8* %37, align 1, !dbg !2431
  %2010 = trunc i8 %2009 to i1, !dbg !2431
  %2011 = zext i1 %2010 to i8, !dbg !2432
  store i8 %2011, i8* %35, align 1, !dbg !2432
  %2012 = load i64, i64* %36, align 8, !dbg !2433
  %2013 = icmp ult i64 1, %2012, !dbg !2435
  %2014 = load i32, i32* @x.37
  %2015 = load i32, i32* @y.38
  %2016 = sub i32 %2014, 1
  %2017 = mul i32 %2014, %2016
  %2018 = urem i32 %2017, 2
  %2019 = icmp eq i32 %2018, 0
  %2020 = icmp slt i32 %2015, 10
  %2021 = or i1 %2019, %2020
  br i1 %2021, label %originalBBpart2421, label %originalBB419alteredBB

originalBBpart2421:                               ; preds = %originalBB419
  br i1 %2013, label %2028, label %2022, !dbg !2436

2022:                                             ; preds = %originalBBpart2421
  %2023 = load i8, i8* %25, align 1, !dbg !2437
  %2024 = trunc i8 %2023 to i1, !dbg !2437
  br i1 %2024, label %2025, label %2632, !dbg !2438

2025:                                             ; preds = %2022
  %2026 = load i8, i8* %37, align 1, !dbg !2439
  %2027 = trunc i8 %2026 to i1, !dbg !2439
  br i1 %2027, label %2632, label %2028, !dbg !2440

2028:                                             ; preds = %2025, %originalBBpart2421
  call void @llvm.dbg.declare(metadata i64* %42, metadata !2441, metadata !DIExpression()), !dbg !2443
  %2029 = load i64, i64* %20, align 8, !dbg !2444
  %2030 = load i64, i64* %36, align 8, !dbg !2445
  %2031 = add i64 %2029, %2030, !dbg !2446
  store i64 %2031, i64* %42, align 8, !dbg !2443
  br label %2032, !dbg !2447

2032:                                             ; preds = %2609, %2028
  %2033 = load i8, i8* %25, align 1, !dbg !2448
  %2034 = trunc i8 %2033 to i1, !dbg !2448
  br i1 %2034, label %2035, label %2348, !dbg !2453

2035:                                             ; preds = %2032
  %2036 = load i32, i32* @x.37
  %2037 = load i32, i32* @y.38
  %2038 = sub i32 %2036, 1
  %2039 = mul i32 %2036, %2038
  %2040 = urem i32 %2039, 2
  %2041 = icmp eq i32 %2040, 0
  %2042 = icmp slt i32 %2037, 10
  %2043 = or i1 %2041, %2042
  br i1 %2043, label %originalBB423, label %originalBB423alteredBB

originalBB423:                                    ; preds = %2035, %originalBB423alteredBB
  %2044 = load i8, i8* %37, align 1, !dbg !2454
  %2045 = trunc i8 %2044 to i1, !dbg !2454
  %2046 = load i32, i32* @x.37
  %2047 = load i32, i32* @y.38
  %2048 = sub i32 %2046, 1
  %2049 = mul i32 %2046, %2048
  %2050 = urem i32 %2049, 2
  %2051 = icmp eq i32 %2050, 0
  %2052 = icmp slt i32 %2047, 10
  %2053 = or i1 %2051, %2052
  br i1 %2053, label %originalBBpart2425, label %originalBB423alteredBB

originalBBpart2425:                               ; preds = %originalBB423
  br i1 %2045, label %2348, label %2054, !dbg !2455

2054:                                             ; preds = %originalBBpart2425
  %2055 = load i32, i32* @x.37
  %2056 = load i32, i32* @y.38
  %2057 = sub i32 %2055, 1
  %2058 = mul i32 %2055, %2057
  %2059 = urem i32 %2058, 2
  %2060 = icmp eq i32 %2059, 0
  %2061 = icmp slt i32 %2056, 10
  %2062 = or i1 %2060, %2061
  br i1 %2062, label %originalBB427, label %originalBB427alteredBB

originalBB427:                                    ; preds = %2054, %originalBB427alteredBB
  %2063 = load i32, i32* @x.37
  %2064 = load i32, i32* @y.38
  %2065 = sub i32 %2063, 1
  %2066 = mul i32 %2063, %2065
  %2067 = urem i32 %2066, 2
  %2068 = icmp eq i32 %2067, 0
  %2069 = icmp slt i32 %2064, 10
  %2070 = or i1 %2068, %2069
  br i1 %2070, label %originalBBpart2429, label %originalBB427alteredBB

originalBBpart2429:                               ; preds = %originalBB427
  br label %2071, !dbg !2456

2071:                                             ; preds = %originalBBpart2429
  %2072 = load i8, i8* %27, align 1, !dbg !2458
  %2073 = trunc i8 %2072 to i1, !dbg !2458
  br i1 %2073, label %2074, label %2075, !dbg !2461

2074:                                             ; preds = %2071
  br label %3262, !dbg !2458

2075:                                             ; preds = %2071
  %2076 = load i32, i32* @x.37
  %2077 = load i32, i32* @y.38
  %2078 = sub i32 %2076, 1
  %2079 = mul i32 %2076, %2078
  %2080 = urem i32 %2079, 2
  %2081 = icmp eq i32 %2080, 0
  %2082 = icmp slt i32 %2077, 10
  %2083 = or i1 %2081, %2082
  br i1 %2083, label %originalBB431, label %originalBB431alteredBB

originalBB431:                                    ; preds = %2075, %originalBB431alteredBB
  store i8 1, i8* %34, align 1, !dbg !2461
  %2084 = load i32, i32* %15, align 4, !dbg !2462
  %2085 = icmp eq i32 %2084, 2, !dbg !2462
  %2086 = load i32, i32* @x.37
  %2087 = load i32, i32* @y.38
  %2088 = sub i32 %2086, 1
  %2089 = mul i32 %2086, %2088
  %2090 = urem i32 %2089, 2
  %2091 = icmp eq i32 %2090, 0
  %2092 = icmp slt i32 %2087, 10
  %2093 = or i1 %2091, %2092
  br i1 %2093, label %originalBBpart2433, label %originalBB431alteredBB

originalBBpart2433:                               ; preds = %originalBB431
  br i1 %2085, label %2094, label %2214, !dbg !2462

2094:                                             ; preds = %originalBBpart2433
  %2095 = load i32, i32* @x.37
  %2096 = load i32, i32* @y.38
  %2097 = sub i32 %2095, 1
  %2098 = mul i32 %2095, %2097
  %2099 = urem i32 %2098, 2
  %2100 = icmp eq i32 %2099, 0
  %2101 = icmp slt i32 %2096, 10
  %2102 = or i1 %2100, %2101
  br i1 %2102, label %originalBB435, label %originalBB435alteredBB

originalBB435:                                    ; preds = %2094, %originalBB435alteredBB
  %2103 = load i8, i8* %28, align 1, !dbg !2462
  %2104 = trunc i8 %2103 to i1, !dbg !2462
  %2105 = load i32, i32* @x.37
  %2106 = load i32, i32* @y.38
  %2107 = sub i32 %2105, 1
  %2108 = mul i32 %2105, %2107
  %2109 = urem i32 %2108, 2
  %2110 = icmp eq i32 %2109, 0
  %2111 = icmp slt i32 %2106, 10
  %2112 = or i1 %2110, %2111
  br i1 %2112, label %originalBBpart2437, label %originalBB435alteredBB

originalBBpart2437:                               ; preds = %originalBB435
  br i1 %2104, label %2214, label %2113, !dbg !2461

2113:                                             ; preds = %originalBBpart2437
  br label %2114, !dbg !2464

2114:                                             ; preds = %2113
  %2115 = load i64, i64* %21, align 8, !dbg !2466
  %2116 = load i64, i64* %12, align 8, !dbg !2466
  %2117 = icmp ult i64 %2115, %2116, !dbg !2466
  br i1 %2117, label %2118, label %2122, !dbg !2469

2118:                                             ; preds = %2114
  %2119 = load i8*, i8** %11, align 8, !dbg !2466
  %2120 = load i64, i64* %21, align 8, !dbg !2466
  %2121 = getelementptr inbounds i8, i8* %2119, i64 %2120, !dbg !2466
  store i8 39, i8* %2121, align 1, !dbg !2466
  br label %2122, !dbg !2466

2122:                                             ; preds = %2118, %2114
  %2123 = load i64, i64* %21, align 8, !dbg !2469
  %2124 = add i64 %2123, 1, !dbg !2469
  store i64 %2124, i64* %21, align 8, !dbg !2469
  br label %2125, !dbg !2469

2125:                                             ; preds = %2122
  br label %2126, !dbg !2464

2126:                                             ; preds = %2125
  %2127 = load i64, i64* %21, align 8, !dbg !2470
  %2128 = load i64, i64* %12, align 8, !dbg !2470
  %2129 = icmp ult i64 %2127, %2128, !dbg !2470
  br i1 %2129, label %2130, label %2150, !dbg !2473

2130:                                             ; preds = %2126
  %2131 = load i32, i32* @x.37
  %2132 = load i32, i32* @y.38
  %2133 = sub i32 %2131, 1
  %2134 = mul i32 %2131, %2133
  %2135 = urem i32 %2134, 2
  %2136 = icmp eq i32 %2135, 0
  %2137 = icmp slt i32 %2132, 10
  %2138 = or i1 %2136, %2137
  br i1 %2138, label %originalBB439, label %originalBB439alteredBB

originalBB439:                                    ; preds = %2130, %originalBB439alteredBB
  %2139 = load i8*, i8** %11, align 8, !dbg !2470
  %2140 = load i64, i64* %21, align 8, !dbg !2470
  %2141 = getelementptr inbounds i8, i8* %2139, i64 %2140, !dbg !2470
  store i8 36, i8* %2141, align 1, !dbg !2470
  %2142 = load i32, i32* @x.37
  %2143 = load i32, i32* @y.38
  %2144 = sub i32 %2142, 1
  %2145 = mul i32 %2142, %2144
  %2146 = urem i32 %2145, 2
  %2147 = icmp eq i32 %2146, 0
  %2148 = icmp slt i32 %2143, 10
  %2149 = or i1 %2147, %2148
  br i1 %2149, label %originalBBpart2441, label %originalBB439alteredBB

originalBBpart2441:                               ; preds = %originalBB439
  br label %2150, !dbg !2470

2150:                                             ; preds = %originalBBpart2441, %2126
  %2151 = load i64, i64* %21, align 8, !dbg !2473
  %2152 = add i64 %2151, 1, !dbg !2473
  store i64 %2152, i64* %21, align 8, !dbg !2473
  br label %2153, !dbg !2473

2153:                                             ; preds = %2150
  %2154 = load i32, i32* @x.37
  %2155 = load i32, i32* @y.38
  %2156 = sub i32 %2154, 1
  %2157 = mul i32 %2154, %2156
  %2158 = urem i32 %2157, 2
  %2159 = icmp eq i32 %2158, 0
  %2160 = icmp slt i32 %2155, 10
  %2161 = or i1 %2159, %2160
  br i1 %2161, label %originalBB443, label %originalBB443alteredBB

originalBB443:                                    ; preds = %2153, %originalBB443alteredBB
  %2162 = load i32, i32* @x.37
  %2163 = load i32, i32* @y.38
  %2164 = sub i32 %2162, 1
  %2165 = mul i32 %2162, %2164
  %2166 = urem i32 %2165, 2
  %2167 = icmp eq i32 %2166, 0
  %2168 = icmp slt i32 %2163, 10
  %2169 = or i1 %2167, %2168
  br i1 %2169, label %originalBBpart2445, label %originalBB443alteredBB

originalBBpart2445:                               ; preds = %originalBB443
  br label %2170, !dbg !2464

2170:                                             ; preds = %originalBBpart2445
  %2171 = load i64, i64* %21, align 8, !dbg !2474
  %2172 = load i64, i64* %12, align 8, !dbg !2474
  %2173 = icmp ult i64 %2171, %2172, !dbg !2474
  br i1 %2173, label %2174, label %2194, !dbg !2477

2174:                                             ; preds = %2170
  %2175 = load i32, i32* @x.37
  %2176 = load i32, i32* @y.38
  %2177 = sub i32 %2175, 1
  %2178 = mul i32 %2175, %2177
  %2179 = urem i32 %2178, 2
  %2180 = icmp eq i32 %2179, 0
  %2181 = icmp slt i32 %2176, 10
  %2182 = or i1 %2180, %2181
  br i1 %2182, label %originalBB447, label %originalBB447alteredBB

originalBB447:                                    ; preds = %2174, %originalBB447alteredBB
  %2183 = load i8*, i8** %11, align 8, !dbg !2474
  %2184 = load i64, i64* %21, align 8, !dbg !2474
  %2185 = getelementptr inbounds i8, i8* %2183, i64 %2184, !dbg !2474
  store i8 39, i8* %2185, align 1, !dbg !2474
  %2186 = load i32, i32* @x.37
  %2187 = load i32, i32* @y.38
  %2188 = sub i32 %2186, 1
  %2189 = mul i32 %2186, %2188
  %2190 = urem i32 %2189, 2
  %2191 = icmp eq i32 %2190, 0
  %2192 = icmp slt i32 %2187, 10
  %2193 = or i1 %2191, %2192
  br i1 %2193, label %originalBBpart2449, label %originalBB447alteredBB

originalBBpart2449:                               ; preds = %originalBB447
  br label %2194, !dbg !2474

2194:                                             ; preds = %originalBBpart2449, %2170
  %2195 = load i64, i64* %21, align 8, !dbg !2477
  %2196 = add i64 %2195, 1, !dbg !2477
  store i64 %2196, i64* %21, align 8, !dbg !2477
  br label %2197, !dbg !2477

2197:                                             ; preds = %2194
  %2198 = load i32, i32* @x.37
  %2199 = load i32, i32* @y.38
  %2200 = sub i32 %2198, 1
  %2201 = mul i32 %2198, %2200
  %2202 = urem i32 %2201, 2
  %2203 = icmp eq i32 %2202, 0
  %2204 = icmp slt i32 %2199, 10
  %2205 = or i1 %2203, %2204
  br i1 %2205, label %originalBB451, label %originalBB451alteredBB

originalBB451:                                    ; preds = %2197, %originalBB451alteredBB
  store i8 1, i8* %28, align 1, !dbg !2464
  %2206 = load i32, i32* @x.37
  %2207 = load i32, i32* @y.38
  %2208 = sub i32 %2206, 1
  %2209 = mul i32 %2206, %2208
  %2210 = urem i32 %2209, 2
  %2211 = icmp eq i32 %2210, 0
  %2212 = icmp slt i32 %2207, 10
  %2213 = or i1 %2211, %2212
  br i1 %2213, label %originalBBpart2453, label %originalBB451alteredBB

originalBBpart2453:                               ; preds = %originalBB451
  br label %2214, !dbg !2464

2214:                                             ; preds = %originalBBpart2453, %originalBBpart2437, %originalBBpart2433
  br label %2215, !dbg !2461

2215:                                             ; preds = %2214
  %2216 = load i64, i64* %21, align 8, !dbg !2478
  %2217 = load i64, i64* %12, align 8, !dbg !2478
  %2218 = icmp ult i64 %2216, %2217, !dbg !2478
  br i1 %2218, label %2219, label %2223, !dbg !2481

2219:                                             ; preds = %2215
  %2220 = load i8*, i8** %11, align 8, !dbg !2478
  %2221 = load i64, i64* %21, align 8, !dbg !2478
  %2222 = getelementptr inbounds i8, i8* %2220, i64 %2221, !dbg !2478
  store i8 92, i8* %2222, align 1, !dbg !2478
  br label %2223, !dbg !2478

2223:                                             ; preds = %2219, %2215
  %2224 = load i64, i64* %21, align 8, !dbg !2481
  %2225 = add i64 %2224, 1, !dbg !2481
  store i64 %2225, i64* %21, align 8, !dbg !2481
  br label %2226, !dbg !2481

2226:                                             ; preds = %2223
  %2227 = load i32, i32* @x.37
  %2228 = load i32, i32* @y.38
  %2229 = sub i32 %2227, 1
  %2230 = mul i32 %2227, %2229
  %2231 = urem i32 %2230, 2
  %2232 = icmp eq i32 %2231, 0
  %2233 = icmp slt i32 %2228, 10
  %2234 = or i1 %2232, %2233
  br i1 %2234, label %originalBB455, label %originalBB455alteredBB

originalBB455:                                    ; preds = %2226, %originalBB455alteredBB
  %2235 = load i32, i32* @x.37
  %2236 = load i32, i32* @y.38
  %2237 = sub i32 %2235, 1
  %2238 = mul i32 %2235, %2237
  %2239 = urem i32 %2238, 2
  %2240 = icmp eq i32 %2239, 0
  %2241 = icmp slt i32 %2236, 10
  %2242 = or i1 %2240, %2241
  br i1 %2242, label %originalBBpart2457, label %originalBB455alteredBB

originalBBpart2457:                               ; preds = %originalBB455
  br label %2243, !dbg !2461

2243:                                             ; preds = %originalBBpart2457
  br label %2244, !dbg !2482

2244:                                             ; preds = %2243
  %2245 = load i64, i64* %21, align 8, !dbg !2483
  %2246 = load i64, i64* %12, align 8, !dbg !2483
  %2247 = icmp ult i64 %2245, %2246, !dbg !2483
  br i1 %2247, label %2248, label %2257, !dbg !2486

2248:                                             ; preds = %2244
  %2249 = load i8, i8* %31, align 1, !dbg !2483
  %2250 = zext i8 %2249 to i32, !dbg !2483
  %2251 = ashr i32 %2250, 6, !dbg !2483
  %2252 = add nsw i32 48, %2251, !dbg !2483
  %2253 = trunc i32 %2252 to i8, !dbg !2483
  %2254 = load i8*, i8** %11, align 8, !dbg !2483
  %2255 = load i64, i64* %21, align 8, !dbg !2483
  %2256 = getelementptr inbounds i8, i8* %2254, i64 %2255, !dbg !2483
  store i8 %2253, i8* %2256, align 1, !dbg !2483
  br label %2257, !dbg !2483

2257:                                             ; preds = %2248, %2244
  %2258 = load i64, i64* %21, align 8, !dbg !2486
  %2259 = add i64 %2258, 1, !dbg !2486
  store i64 %2259, i64* %21, align 8, !dbg !2486
  br label %2260, !dbg !2486

2260:                                             ; preds = %2257
  %2261 = load i32, i32* @x.37
  %2262 = load i32, i32* @y.38
  %2263 = sub i32 %2261, 1
  %2264 = mul i32 %2261, %2263
  %2265 = urem i32 %2264, 2
  %2266 = icmp eq i32 %2265, 0
  %2267 = icmp slt i32 %2262, 10
  %2268 = or i1 %2266, %2267
  br i1 %2268, label %originalBB459, label %originalBB459alteredBB

originalBB459:                                    ; preds = %2260, %originalBB459alteredBB
  %2269 = load i32, i32* @x.37
  %2270 = load i32, i32* @y.38
  %2271 = sub i32 %2269, 1
  %2272 = mul i32 %2269, %2271
  %2273 = urem i32 %2272, 2
  %2274 = icmp eq i32 %2273, 0
  %2275 = icmp slt i32 %2270, 10
  %2276 = or i1 %2274, %2275
  br i1 %2276, label %originalBBpart2461, label %originalBB459alteredBB

originalBBpart2461:                               ; preds = %originalBB459
  br label %2277, !dbg !2487

2277:                                             ; preds = %originalBBpart2461
  %2278 = load i32, i32* @x.37
  %2279 = load i32, i32* @y.38
  %2280 = sub i32 %2278, 1
  %2281 = mul i32 %2278, %2280
  %2282 = urem i32 %2281, 2
  %2283 = icmp eq i32 %2282, 0
  %2284 = icmp slt i32 %2279, 10
  %2285 = or i1 %2283, %2284
  br i1 %2285, label %originalBB463, label %originalBB463alteredBB

originalBB463:                                    ; preds = %2277, %originalBB463alteredBB
  %2286 = load i64, i64* %21, align 8, !dbg !2488
  %2287 = load i64, i64* %12, align 8, !dbg !2488
  %2288 = icmp ult i64 %2286, %2287, !dbg !2488
  %2289 = load i32, i32* @x.37
  %2290 = load i32, i32* @y.38
  %2291 = sub i32 %2289, 1
  %2292 = mul i32 %2289, %2291
  %2293 = urem i32 %2292, 2
  %2294 = icmp eq i32 %2293, 0
  %2295 = icmp slt i32 %2290, 10
  %2296 = or i1 %2294, %2295
  br i1 %2296, label %originalBBpart2465, label %originalBB463alteredBB

originalBBpart2465:                               ; preds = %originalBB463
  br i1 %2288, label %2297, label %2307, !dbg !2491

2297:                                             ; preds = %originalBBpart2465
  %2298 = load i8, i8* %31, align 1, !dbg !2488
  %2299 = zext i8 %2298 to i32, !dbg !2488
  %2300 = ashr i32 %2299, 3, !dbg !2488
  %2301 = and i32 %2300, 7, !dbg !2488
  %2302 = add nsw i32 48, %2301, !dbg !2488
  %2303 = trunc i32 %2302 to i8, !dbg !2488
  %2304 = load i8*, i8** %11, align 8, !dbg !2488
  %2305 = load i64, i64* %21, align 8, !dbg !2488
  %2306 = getelementptr inbounds i8, i8* %2304, i64 %2305, !dbg !2488
  store i8 %2303, i8* %2306, align 1, !dbg !2488
  br label %2307, !dbg !2488

2307:                                             ; preds = %2297, %originalBBpart2465
  %2308 = load i32, i32* @x.37
  %2309 = load i32, i32* @y.38
  %2310 = sub i32 %2308, 1
  %2311 = mul i32 %2308, %2310
  %2312 = urem i32 %2311, 2
  %2313 = icmp eq i32 %2312, 0
  %2314 = icmp slt i32 %2309, 10
  %2315 = or i1 %2313, %2314
  br i1 %2315, label %originalBB467, label %originalBB467alteredBB

originalBB467:                                    ; preds = %2307, %originalBB467alteredBB
  %2316 = load i64, i64* %21, align 8, !dbg !2491
  %2317 = add i64 %2316, 1, !dbg !2491
  store i64 %2317, i64* %21, align 8, !dbg !2491
  %2318 = load i32, i32* @x.37
  %2319 = load i32, i32* @y.38
  %2320 = sub i32 %2318, 1
  %2321 = mul i32 %2318, %2320
  %2322 = urem i32 %2321, 2
  %2323 = icmp eq i32 %2322, 0
  %2324 = icmp slt i32 %2319, 10
  %2325 = or i1 %2323, %2324
  br i1 %2325, label %originalBBpart2470, label %originalBB467alteredBB

originalBBpart2470:                               ; preds = %originalBB467
  br label %2326, !dbg !2491

2326:                                             ; preds = %originalBBpart2470
  %2327 = load i32, i32* @x.37
  %2328 = load i32, i32* @y.38
  %2329 = sub i32 %2327, 1
  %2330 = mul i32 %2327, %2329
  %2331 = urem i32 %2330, 2
  %2332 = icmp eq i32 %2331, 0
  %2333 = icmp slt i32 %2328, 10
  %2334 = or i1 %2332, %2333
  br i1 %2334, label %originalBB472, label %originalBB472alteredBB

originalBB472:                                    ; preds = %2326, %originalBB472alteredBB
  %2335 = load i8, i8* %31, align 1, !dbg !2492
  %2336 = zext i8 %2335 to i32, !dbg !2492
  %2337 = and i32 %2336, 7, !dbg !2493
  %2338 = add nsw i32 48, %2337, !dbg !2494
  %2339 = trunc i32 %2338 to i8, !dbg !2495
  store i8 %2339, i8* %31, align 1, !dbg !2496
  %2340 = load i32, i32* @x.37
  %2341 = load i32, i32* @y.38
  %2342 = sub i32 %2340, 1
  %2343 = mul i32 %2340, %2342
  %2344 = urem i32 %2343, 2
  %2345 = icmp eq i32 %2344, 0
  %2346 = icmp slt i32 %2341, 10
  %2347 = or i1 %2345, %2346
  br i1 %2347, label %originalBBpart2485, label %originalBB472alteredBB

originalBBpart2485:                               ; preds = %originalBB472
  br label %2413, !dbg !2497

2348:                                             ; preds = %originalBBpart2425, %2032
  %2349 = load i8, i8* %33, align 1, !dbg !2498
  %2350 = trunc i8 %2349 to i1, !dbg !2498
  br i1 %2350, label %2351, label %2412, !dbg !2500

2351:                                             ; preds = %2348
  %2352 = load i32, i32* @x.37
  %2353 = load i32, i32* @y.38
  %2354 = sub i32 %2352, 1
  %2355 = mul i32 %2352, %2354
  %2356 = urem i32 %2355, 2
  %2357 = icmp eq i32 %2356, 0
  %2358 = icmp slt i32 %2353, 10
  %2359 = or i1 %2357, %2358
  br i1 %2359, label %originalBB487, label %originalBB487alteredBB

originalBB487:                                    ; preds = %2351, %originalBB487alteredBB
  %2360 = load i32, i32* @x.37
  %2361 = load i32, i32* @y.38
  %2362 = sub i32 %2360, 1
  %2363 = mul i32 %2360, %2362
  %2364 = urem i32 %2363, 2
  %2365 = icmp eq i32 %2364, 0
  %2366 = icmp slt i32 %2361, 10
  %2367 = or i1 %2365, %2366
  br i1 %2367, label %originalBBpart2489, label %originalBB487alteredBB

originalBBpart2489:                               ; preds = %originalBB487
  br label %2368, !dbg !2501

2368:                                             ; preds = %originalBBpart2489
  %2369 = load i32, i32* @x.37
  %2370 = load i32, i32* @y.38
  %2371 = sub i32 %2369, 1
  %2372 = mul i32 %2369, %2371
  %2373 = urem i32 %2372, 2
  %2374 = icmp eq i32 %2373, 0
  %2375 = icmp slt i32 %2370, 10
  %2376 = or i1 %2374, %2375
  br i1 %2376, label %originalBB491, label %originalBB491alteredBB

originalBB491:                                    ; preds = %2368, %originalBB491alteredBB
  %2377 = load i64, i64* %21, align 8, !dbg !2503
  %2378 = load i64, i64* %12, align 8, !dbg !2503
  %2379 = icmp ult i64 %2377, %2378, !dbg !2503
  %2380 = load i32, i32* @x.37
  %2381 = load i32, i32* @y.38
  %2382 = sub i32 %2380, 1
  %2383 = mul i32 %2380, %2382
  %2384 = urem i32 %2383, 2
  %2385 = icmp eq i32 %2384, 0
  %2386 = icmp slt i32 %2381, 10
  %2387 = or i1 %2385, %2386
  br i1 %2387, label %originalBBpart2493, label %originalBB491alteredBB

originalBBpart2493:                               ; preds = %originalBB491
  br i1 %2379, label %2388, label %2392, !dbg !2506

2388:                                             ; preds = %originalBBpart2493
  %2389 = load i8*, i8** %11, align 8, !dbg !2503
  %2390 = load i64, i64* %21, align 8, !dbg !2503
  %2391 = getelementptr inbounds i8, i8* %2389, i64 %2390, !dbg !2503
  store i8 92, i8* %2391, align 1, !dbg !2503
  br label %2392, !dbg !2503

2392:                                             ; preds = %2388, %originalBBpart2493
  %2393 = load i32, i32* @x.37
  %2394 = load i32, i32* @y.38
  %2395 = sub i32 %2393, 1
  %2396 = mul i32 %2393, %2395
  %2397 = urem i32 %2396, 2
  %2398 = icmp eq i32 %2397, 0
  %2399 = icmp slt i32 %2394, 10
  %2400 = or i1 %2398, %2399
  br i1 %2400, label %originalBB495, label %originalBB495alteredBB

originalBB495:                                    ; preds = %2392, %originalBB495alteredBB
  %2401 = load i64, i64* %21, align 8, !dbg !2506
  %2402 = add i64 %2401, 1, !dbg !2506
  store i64 %2402, i64* %21, align 8, !dbg !2506
  %2403 = load i32, i32* @x.37
  %2404 = load i32, i32* @y.38
  %2405 = sub i32 %2403, 1
  %2406 = mul i32 %2403, %2405
  %2407 = urem i32 %2406, 2
  %2408 = icmp eq i32 %2407, 0
  %2409 = icmp slt i32 %2404, 10
  %2410 = or i1 %2408, %2409
  br i1 %2410, label %originalBBpart2498, label %originalBB495alteredBB

originalBBpart2498:                               ; preds = %originalBB495
  br label %2411, !dbg !2506

2411:                                             ; preds = %originalBBpart2498
  store i8 0, i8* %33, align 1, !dbg !2507
  br label %2412, !dbg !2508

2412:                                             ; preds = %2411, %2348
  br label %2413

2413:                                             ; preds = %2412, %originalBBpart2485
  %2414 = load i64, i64* %42, align 8, !dbg !2509
  %2415 = load i64, i64* %20, align 8, !dbg !2511
  %2416 = add i64 %2415, 1, !dbg !2512
  %2417 = icmp ule i64 %2414, %2416, !dbg !2513
  br i1 %2417, label %2418, label %2419, !dbg !2514

2418:                                             ; preds = %2413
  br label %2615, !dbg !2515

2419:                                             ; preds = %2413
  %2420 = load i32, i32* @x.37
  %2421 = load i32, i32* @y.38
  %2422 = sub i32 %2420, 1
  %2423 = mul i32 %2420, %2422
  %2424 = urem i32 %2423, 2
  %2425 = icmp eq i32 %2424, 0
  %2426 = icmp slt i32 %2421, 10
  %2427 = or i1 %2425, %2426
  br i1 %2427, label %originalBB500, label %originalBB500alteredBB

originalBB500:                                    ; preds = %2419, %originalBB500alteredBB
  %2428 = load i32, i32* @x.37
  %2429 = load i32, i32* @y.38
  %2430 = sub i32 %2428, 1
  %2431 = mul i32 %2428, %2430
  %2432 = urem i32 %2431, 2
  %2433 = icmp eq i32 %2432, 0
  %2434 = icmp slt i32 %2429, 10
  %2435 = or i1 %2433, %2434
  br i1 %2435, label %originalBBpart2502, label %originalBB500alteredBB

originalBBpart2502:                               ; preds = %originalBB500
  br label %2436, !dbg !2516

2436:                                             ; preds = %originalBBpart2502
  %2437 = load i32, i32* @x.37
  %2438 = load i32, i32* @y.38
  %2439 = sub i32 %2437, 1
  %2440 = mul i32 %2437, %2439
  %2441 = urem i32 %2440, 2
  %2442 = icmp eq i32 %2441, 0
  %2443 = icmp slt i32 %2438, 10
  %2444 = or i1 %2442, %2443
  br i1 %2444, label %originalBB504, label %originalBB504alteredBB

originalBB504:                                    ; preds = %2436, %originalBB504alteredBB
  %2445 = load i8, i8* %28, align 1, !dbg !2517
  %2446 = trunc i8 %2445 to i1, !dbg !2517
  %2447 = load i32, i32* @x.37
  %2448 = load i32, i32* @y.38
  %2449 = sub i32 %2447, 1
  %2450 = mul i32 %2447, %2449
  %2451 = urem i32 %2450, 2
  %2452 = icmp eq i32 %2451, 0
  %2453 = icmp slt i32 %2448, 10
  %2454 = or i1 %2452, %2453
  br i1 %2454, label %originalBBpart2506, label %originalBB504alteredBB

originalBBpart2506:                               ; preds = %originalBB504
  br i1 %2446, label %2455, label %2547, !dbg !2517

2455:                                             ; preds = %originalBBpart2506
  %2456 = load i32, i32* @x.37
  %2457 = load i32, i32* @y.38
  %2458 = sub i32 %2456, 1
  %2459 = mul i32 %2456, %2458
  %2460 = urem i32 %2459, 2
  %2461 = icmp eq i32 %2460, 0
  %2462 = icmp slt i32 %2457, 10
  %2463 = or i1 %2461, %2462
  br i1 %2463, label %originalBB508, label %originalBB508alteredBB

originalBB508:                                    ; preds = %2455, %originalBB508alteredBB
  %2464 = load i8, i8* %34, align 1, !dbg !2517
  %2465 = trunc i8 %2464 to i1, !dbg !2517
  %2466 = load i32, i32* @x.37
  %2467 = load i32, i32* @y.38
  %2468 = sub i32 %2466, 1
  %2469 = mul i32 %2466, %2468
  %2470 = urem i32 %2469, 2
  %2471 = icmp eq i32 %2470, 0
  %2472 = icmp slt i32 %2467, 10
  %2473 = or i1 %2471, %2472
  br i1 %2473, label %originalBBpart2510, label %originalBB508alteredBB

originalBBpart2510:                               ; preds = %originalBB508
  br i1 %2465, label %2547, label %2474, !dbg !2520

2474:                                             ; preds = %originalBBpart2510
  br label %2475, !dbg !2521

2475:                                             ; preds = %2474
  %2476 = load i64, i64* %21, align 8, !dbg !2523
  %2477 = load i64, i64* %12, align 8, !dbg !2523
  %2478 = icmp ult i64 %2476, %2477, !dbg !2523
  br i1 %2478, label %2479, label %2499, !dbg !2526

2479:                                             ; preds = %2475
  %2480 = load i32, i32* @x.37
  %2481 = load i32, i32* @y.38
  %2482 = sub i32 %2480, 1
  %2483 = mul i32 %2480, %2482
  %2484 = urem i32 %2483, 2
  %2485 = icmp eq i32 %2484, 0
  %2486 = icmp slt i32 %2481, 10
  %2487 = or i1 %2485, %2486
  br i1 %2487, label %originalBB512, label %originalBB512alteredBB

originalBB512:                                    ; preds = %2479, %originalBB512alteredBB
  %2488 = load i8*, i8** %11, align 8, !dbg !2523
  %2489 = load i64, i64* %21, align 8, !dbg !2523
  %2490 = getelementptr inbounds i8, i8* %2488, i64 %2489, !dbg !2523
  store i8 39, i8* %2490, align 1, !dbg !2523
  %2491 = load i32, i32* @x.37
  %2492 = load i32, i32* @y.38
  %2493 = sub i32 %2491, 1
  %2494 = mul i32 %2491, %2493
  %2495 = urem i32 %2494, 2
  %2496 = icmp eq i32 %2495, 0
  %2497 = icmp slt i32 %2492, 10
  %2498 = or i1 %2496, %2497
  br i1 %2498, label %originalBBpart2514, label %originalBB512alteredBB

originalBBpart2514:                               ; preds = %originalBB512
  br label %2499, !dbg !2523

2499:                                             ; preds = %originalBBpart2514, %2475
  %2500 = load i64, i64* %21, align 8, !dbg !2526
  %2501 = add i64 %2500, 1, !dbg !2526
  store i64 %2501, i64* %21, align 8, !dbg !2526
  br label %2502, !dbg !2526

2502:                                             ; preds = %2499
  %2503 = load i32, i32* @x.37
  %2504 = load i32, i32* @y.38
  %2505 = sub i32 %2503, 1
  %2506 = mul i32 %2503, %2505
  %2507 = urem i32 %2506, 2
  %2508 = icmp eq i32 %2507, 0
  %2509 = icmp slt i32 %2504, 10
  %2510 = or i1 %2508, %2509
  br i1 %2510, label %originalBB516, label %originalBB516alteredBB

originalBB516:                                    ; preds = %2502, %originalBB516alteredBB
  %2511 = load i32, i32* @x.37
  %2512 = load i32, i32* @y.38
  %2513 = sub i32 %2511, 1
  %2514 = mul i32 %2511, %2513
  %2515 = urem i32 %2514, 2
  %2516 = icmp eq i32 %2515, 0
  %2517 = icmp slt i32 %2512, 10
  %2518 = or i1 %2516, %2517
  br i1 %2518, label %originalBBpart2518, label %originalBB516alteredBB

originalBBpart2518:                               ; preds = %originalBB516
  br label %2519, !dbg !2521

2519:                                             ; preds = %originalBBpart2518
  %2520 = load i64, i64* %21, align 8, !dbg !2527
  %2521 = load i64, i64* %12, align 8, !dbg !2527
  %2522 = icmp ult i64 %2520, %2521, !dbg !2527
  br i1 %2522, label %2523, label %2527, !dbg !2530

2523:                                             ; preds = %2519
  %2524 = load i8*, i8** %11, align 8, !dbg !2527
  %2525 = load i64, i64* %21, align 8, !dbg !2527
  %2526 = getelementptr inbounds i8, i8* %2524, i64 %2525, !dbg !2527
  store i8 39, i8* %2526, align 1, !dbg !2527
  br label %2527, !dbg !2527

2527:                                             ; preds = %2523, %2519
  %2528 = load i32, i32* @x.37
  %2529 = load i32, i32* @y.38
  %2530 = sub i32 %2528, 1
  %2531 = mul i32 %2528, %2530
  %2532 = urem i32 %2531, 2
  %2533 = icmp eq i32 %2532, 0
  %2534 = icmp slt i32 %2529, 10
  %2535 = or i1 %2533, %2534
  br i1 %2535, label %originalBB520, label %originalBB520alteredBB

originalBB520:                                    ; preds = %2527, %originalBB520alteredBB
  %2536 = load i64, i64* %21, align 8, !dbg !2530
  %2537 = add i64 %2536, 1, !dbg !2530
  store i64 %2537, i64* %21, align 8, !dbg !2530
  %2538 = load i32, i32* @x.37
  %2539 = load i32, i32* @y.38
  %2540 = sub i32 %2538, 1
  %2541 = mul i32 %2538, %2540
  %2542 = urem i32 %2541, 2
  %2543 = icmp eq i32 %2542, 0
  %2544 = icmp slt i32 %2539, 10
  %2545 = or i1 %2543, %2544
  br i1 %2545, label %originalBBpart2536, label %originalBB520alteredBB

originalBBpart2536:                               ; preds = %originalBB520
  br label %2546, !dbg !2530

2546:                                             ; preds = %originalBBpart2536
  store i8 0, i8* %28, align 1, !dbg !2521
  br label %2547, !dbg !2521

2547:                                             ; preds = %2546, %originalBBpart2510, %originalBBpart2506
  %2548 = load i32, i32* @x.37
  %2549 = load i32, i32* @y.38
  %2550 = sub i32 %2548, 1
  %2551 = mul i32 %2548, %2550
  %2552 = urem i32 %2551, 2
  %2553 = icmp eq i32 %2552, 0
  %2554 = icmp slt i32 %2549, 10
  %2555 = or i1 %2553, %2554
  br i1 %2555, label %originalBB538, label %originalBB538alteredBB

originalBB538:                                    ; preds = %2547, %originalBB538alteredBB
  %2556 = load i32, i32* @x.37
  %2557 = load i32, i32* @y.38
  %2558 = sub i32 %2556, 1
  %2559 = mul i32 %2556, %2558
  %2560 = urem i32 %2559, 2
  %2561 = icmp eq i32 %2560, 0
  %2562 = icmp slt i32 %2557, 10
  %2563 = or i1 %2561, %2562
  br i1 %2563, label %originalBBpart2540, label %originalBB538alteredBB

originalBBpart2540:                               ; preds = %originalBB538
  br label %2564, !dbg !2520

2564:                                             ; preds = %originalBBpart2540
  %2565 = load i32, i32* @x.37
  %2566 = load i32, i32* @y.38
  %2567 = sub i32 %2565, 1
  %2568 = mul i32 %2565, %2567
  %2569 = urem i32 %2568, 2
  %2570 = icmp eq i32 %2569, 0
  %2571 = icmp slt i32 %2566, 10
  %2572 = or i1 %2570, %2571
  br i1 %2572, label %originalBB542, label %originalBB542alteredBB

originalBB542:                                    ; preds = %2564, %originalBB542alteredBB
  %2573 = load i32, i32* @x.37
  %2574 = load i32, i32* @y.38
  %2575 = sub i32 %2573, 1
  %2576 = mul i32 %2573, %2575
  %2577 = urem i32 %2576, 2
  %2578 = icmp eq i32 %2577, 0
  %2579 = icmp slt i32 %2574, 10
  %2580 = or i1 %2578, %2579
  br i1 %2580, label %originalBBpart2544, label %originalBB542alteredBB

originalBBpart2544:                               ; preds = %originalBB542
  br label %2581, !dbg !2531

2581:                                             ; preds = %originalBBpart2544
  %2582 = load i32, i32* @x.37
  %2583 = load i32, i32* @y.38
  %2584 = sub i32 %2582, 1
  %2585 = mul i32 %2582, %2584
  %2586 = urem i32 %2585, 2
  %2587 = icmp eq i32 %2586, 0
  %2588 = icmp slt i32 %2583, 10
  %2589 = or i1 %2587, %2588
  br i1 %2589, label %originalBB546, label %originalBB546alteredBB

originalBB546:                                    ; preds = %2581, %originalBB546alteredBB
  %2590 = load i64, i64* %21, align 8, !dbg !2532
  %2591 = load i64, i64* %12, align 8, !dbg !2532
  %2592 = icmp ult i64 %2590, %2591, !dbg !2532
  %2593 = load i32, i32* @x.37
  %2594 = load i32, i32* @y.38
  %2595 = sub i32 %2593, 1
  %2596 = mul i32 %2593, %2595
  %2597 = urem i32 %2596, 2
  %2598 = icmp eq i32 %2597, 0
  %2599 = icmp slt i32 %2594, 10
  %2600 = or i1 %2598, %2599
  br i1 %2600, label %originalBBpart2548, label %originalBB546alteredBB

originalBBpart2548:                               ; preds = %originalBB546
  br i1 %2592, label %2601, label %2606, !dbg !2535

2601:                                             ; preds = %originalBBpart2548
  %2602 = load i8, i8* %31, align 1, !dbg !2532
  %2603 = load i8*, i8** %11, align 8, !dbg !2532
  %2604 = load i64, i64* %21, align 8, !dbg !2532
  %2605 = getelementptr inbounds i8, i8* %2603, i64 %2604, !dbg !2532
  store i8 %2602, i8* %2605, align 1, !dbg !2532
  br label %2606, !dbg !2532

2606:                                             ; preds = %2601, %originalBBpart2548
  %2607 = load i64, i64* %21, align 8, !dbg !2535
  %2608 = add i64 %2607, 1, !dbg !2535
  store i64 %2608, i64* %21, align 8, !dbg !2535
  br label %2609, !dbg !2535

2609:                                             ; preds = %2606
  %2610 = load i8*, i8** %13, align 8, !dbg !2536
  %2611 = load i64, i64* %20, align 8, !dbg !2537
  %2612 = add i64 %2611, 1, !dbg !2537
  store i64 %2612, i64* %20, align 8, !dbg !2537
  %2613 = getelementptr inbounds i8, i8* %2610, i64 %2612, !dbg !2536
  %2614 = load i8, i8* %2613, align 1, !dbg !2536
  store i8 %2614, i8* %31, align 1, !dbg !2538
  br label %2032, !dbg !2539, !llvm.loop !2540

2615:                                             ; preds = %2418
  %2616 = load i32, i32* @x.37
  %2617 = load i32, i32* @y.38
  %2618 = sub i32 %2616, 1
  %2619 = mul i32 %2616, %2618
  %2620 = urem i32 %2619, 2
  %2621 = icmp eq i32 %2620, 0
  %2622 = icmp slt i32 %2617, 10
  %2623 = or i1 %2621, %2622
  br i1 %2623, label %originalBB550, label %originalBB550alteredBB

originalBB550:                                    ; preds = %2615, %originalBB550alteredBB
  %2624 = load i32, i32* @x.37
  %2625 = load i32, i32* @y.38
  %2626 = sub i32 %2624, 1
  %2627 = mul i32 %2624, %2626
  %2628 = urem i32 %2627, 2
  %2629 = icmp eq i32 %2628, 0
  %2630 = icmp slt i32 %2625, 10
  %2631 = or i1 %2629, %2630
  br i1 %2631, label %originalBBpart2552, label %originalBB550alteredBB

originalBBpart2552:                               ; preds = %originalBB550
  br label %2870, !dbg !2543

2632:                                             ; preds = %2025, %2022
  %2633 = load i32, i32* @x.37
  %2634 = load i32, i32* @y.38
  %2635 = sub i32 %2633, 1
  %2636 = mul i32 %2633, %2635
  %2637 = urem i32 %2636, 2
  %2638 = icmp eq i32 %2637, 0
  %2639 = icmp slt i32 %2634, 10
  %2640 = or i1 %2638, %2639
  br i1 %2640, label %originalBB554, label %originalBB554alteredBB

originalBB554:                                    ; preds = %2632, %originalBB554alteredBB
  %2641 = load i32, i32* @x.37
  %2642 = load i32, i32* @y.38
  %2643 = sub i32 %2641, 1
  %2644 = mul i32 %2641, %2643
  %2645 = urem i32 %2644, 2
  %2646 = icmp eq i32 %2645, 0
  %2647 = icmp slt i32 %2642, 10
  %2648 = or i1 %2646, %2647
  br i1 %2648, label %originalBBpart2556, label %originalBB554alteredBB

originalBBpart2556:                               ; preds = %originalBB554
  br label %2649, !dbg !2544

2649:                                             ; preds = %originalBBpart2556, %1695, %originalBBpart2346, %1529, %originalBBpart2310, %1466, %1437, %originalBBpart2257, %900
  %2650 = load i32, i32* @x.37
  %2651 = load i32, i32* @y.38
  %2652 = sub i32 %2650, 1
  %2653 = mul i32 %2650, %2652
  %2654 = urem i32 %2653, 2
  %2655 = icmp eq i32 %2654, 0
  %2656 = icmp slt i32 %2651, 10
  %2657 = or i1 %2655, %2656
  br i1 %2657, label %originalBB558, label %originalBB558alteredBB

originalBB558:                                    ; preds = %2649, %originalBB558alteredBB
  %2658 = load i8, i8* %25, align 1, !dbg !2545
  %2659 = trunc i8 %2658 to i1, !dbg !2545
  %2660 = load i32, i32* @x.37
  %2661 = load i32, i32* @y.38
  %2662 = sub i32 %2660, 1
  %2663 = mul i32 %2660, %2662
  %2664 = urem i32 %2663, 2
  %2665 = icmp eq i32 %2664, 0
  %2666 = icmp slt i32 %2661, 10
  %2667 = or i1 %2665, %2666
  br i1 %2667, label %originalBBpart2560, label %originalBB558alteredBB

originalBBpart2560:                               ; preds = %originalBB558
  br i1 %2659, label %2668, label %2687, !dbg !2547

2668:                                             ; preds = %originalBBpart2560
  %2669 = load i32, i32* @x.37
  %2670 = load i32, i32* @y.38
  %2671 = sub i32 %2669, 1
  %2672 = mul i32 %2669, %2671
  %2673 = urem i32 %2672, 2
  %2674 = icmp eq i32 %2673, 0
  %2675 = icmp slt i32 %2670, 10
  %2676 = or i1 %2674, %2675
  br i1 %2676, label %originalBB562, label %originalBB562alteredBB

originalBB562:                                    ; preds = %2668, %originalBB562alteredBB
  %2677 = load i32, i32* %15, align 4, !dbg !2548
  %2678 = icmp ne i32 %2677, 2, !dbg !2549
  %2679 = load i32, i32* @x.37
  %2680 = load i32, i32* @y.38
  %2681 = sub i32 %2679, 1
  %2682 = mul i32 %2679, %2681
  %2683 = urem i32 %2682, 2
  %2684 = icmp eq i32 %2683, 0
  %2685 = icmp slt i32 %2680, 10
  %2686 = or i1 %2684, %2685
  br i1 %2686, label %originalBBpart2564, label %originalBB562alteredBB

originalBBpart2564:                               ; preds = %originalBB562
  br i1 %2678, label %2690, label %2687, !dbg !2550

2687:                                             ; preds = %originalBBpart2564, %originalBBpart2560
  %2688 = load i8, i8* %27, align 1, !dbg !2551
  %2689 = trunc i8 %2688 to i1, !dbg !2551
  br i1 %2689, label %2690, label %2707, !dbg !2552

2690:                                             ; preds = %2687, %originalBBpart2564
  %2691 = load i32*, i32** %17, align 8, !dbg !2553
  %2692 = icmp ne i32* %2691, null, !dbg !2553
  br i1 %2692, label %2693, label %2707, !dbg !2554

2693:                                             ; preds = %2690
  %2694 = load i32*, i32** %17, align 8, !dbg !2555
  %2695 = load i8, i8* %31, align 1, !dbg !2556
  %2696 = zext i8 %2695 to i64, !dbg !2556
  %2697 = udiv i64 %2696, 32, !dbg !2557
  %2698 = getelementptr inbounds i32, i32* %2694, i64 %2697, !dbg !2555
  %2699 = load i32, i32* %2698, align 4, !dbg !2555
  %2700 = load i8, i8* %31, align 1, !dbg !2558
  %2701 = zext i8 %2700 to i64, !dbg !2558
  %2702 = urem i64 %2701, 32, !dbg !2559
  %2703 = trunc i64 %2702 to i32, !dbg !2560
  %2704 = lshr i32 %2699, %2703, !dbg !2560
  %2705 = and i32 %2704, 1, !dbg !2561
  %2706 = icmp ne i32 %2705, 0, !dbg !2561
  br i1 %2706, label %2711, label %2707, !dbg !2562

2707:                                             ; preds = %2693, %2690, %2687
  %2708 = load i8, i8* %33, align 1, !dbg !2563
  %2709 = trunc i8 %2708 to i1, !dbg !2563
  br i1 %2709, label %2711, label %2710, !dbg !2564

2710:                                             ; preds = %2707
  br label %2870, !dbg !2565

2711:                                             ; preds = %2707, %2693
  br label %2712, !dbg !2563

2712:                                             ; preds = %2711, %1435
  call void @llvm.dbg.label(metadata !2566), !dbg !2567
  br label %2713, !dbg !2568

2713:                                             ; preds = %2712
  %2714 = load i8, i8* %27, align 1, !dbg !2569
  %2715 = trunc i8 %2714 to i1, !dbg !2569
  br i1 %2715, label %2716, label %2717, !dbg !2572

2716:                                             ; preds = %2713
  br label %3262, !dbg !2569

2717:                                             ; preds = %2713
  %2718 = load i32, i32* @x.37
  %2719 = load i32, i32* @y.38
  %2720 = sub i32 %2718, 1
  %2721 = mul i32 %2718, %2720
  %2722 = urem i32 %2721, 2
  %2723 = icmp eq i32 %2722, 0
  %2724 = icmp slt i32 %2719, 10
  %2725 = or i1 %2723, %2724
  br i1 %2725, label %originalBB566, label %originalBB566alteredBB

originalBB566:                                    ; preds = %2717, %originalBB566alteredBB
  store i8 1, i8* %34, align 1, !dbg !2572
  %2726 = load i32, i32* %15, align 4, !dbg !2573
  %2727 = icmp eq i32 %2726, 2, !dbg !2573
  %2728 = load i32, i32* @x.37
  %2729 = load i32, i32* @y.38
  %2730 = sub i32 %2728, 1
  %2731 = mul i32 %2728, %2730
  %2732 = urem i32 %2731, 2
  %2733 = icmp eq i32 %2732, 0
  %2734 = icmp slt i32 %2729, 10
  %2735 = or i1 %2733, %2734
  br i1 %2735, label %originalBBpart2568, label %originalBB566alteredBB

originalBBpart2568:                               ; preds = %originalBB566
  br i1 %2727, label %2736, label %2840, !dbg !2573

2736:                                             ; preds = %originalBBpart2568
  %2737 = load i8, i8* %28, align 1, !dbg !2573
  %2738 = trunc i8 %2737 to i1, !dbg !2573
  br i1 %2738, label %2840, label %2739, !dbg !2572

2739:                                             ; preds = %2736
  %2740 = load i32, i32* @x.37
  %2741 = load i32, i32* @y.38
  %2742 = sub i32 %2740, 1
  %2743 = mul i32 %2740, %2742
  %2744 = urem i32 %2743, 2
  %2745 = icmp eq i32 %2744, 0
  %2746 = icmp slt i32 %2741, 10
  %2747 = or i1 %2745, %2746
  br i1 %2747, label %originalBB570, label %originalBB570alteredBB

originalBB570:                                    ; preds = %2739, %originalBB570alteredBB
  %2748 = load i32, i32* @x.37
  %2749 = load i32, i32* @y.38
  %2750 = sub i32 %2748, 1
  %2751 = mul i32 %2748, %2750
  %2752 = urem i32 %2751, 2
  %2753 = icmp eq i32 %2752, 0
  %2754 = icmp slt i32 %2749, 10
  %2755 = or i1 %2753, %2754
  br i1 %2755, label %originalBBpart2572, label %originalBB570alteredBB

originalBBpart2572:                               ; preds = %originalBB570
  br label %2756, !dbg !2575

2756:                                             ; preds = %originalBBpart2572
  %2757 = load i32, i32* @x.37
  %2758 = load i32, i32* @y.38
  %2759 = sub i32 %2757, 1
  %2760 = mul i32 %2757, %2759
  %2761 = urem i32 %2760, 2
  %2762 = icmp eq i32 %2761, 0
  %2763 = icmp slt i32 %2758, 10
  %2764 = or i1 %2762, %2763
  br i1 %2764, label %originalBB574, label %originalBB574alteredBB

originalBB574:                                    ; preds = %2756, %originalBB574alteredBB
  %2765 = load i64, i64* %21, align 8, !dbg !2577
  %2766 = load i64, i64* %12, align 8, !dbg !2577
  %2767 = icmp ult i64 %2765, %2766, !dbg !2577
  %2768 = load i32, i32* @x.37
  %2769 = load i32, i32* @y.38
  %2770 = sub i32 %2768, 1
  %2771 = mul i32 %2768, %2770
  %2772 = urem i32 %2771, 2
  %2773 = icmp eq i32 %2772, 0
  %2774 = icmp slt i32 %2769, 10
  %2775 = or i1 %2773, %2774
  br i1 %2775, label %originalBBpart2576, label %originalBB574alteredBB

originalBBpart2576:                               ; preds = %originalBB574
  br i1 %2767, label %2776, label %2796, !dbg !2580

2776:                                             ; preds = %originalBBpart2576
  %2777 = load i32, i32* @x.37
  %2778 = load i32, i32* @y.38
  %2779 = sub i32 %2777, 1
  %2780 = mul i32 %2777, %2779
  %2781 = urem i32 %2780, 2
  %2782 = icmp eq i32 %2781, 0
  %2783 = icmp slt i32 %2778, 10
  %2784 = or i1 %2782, %2783
  br i1 %2784, label %originalBB578, label %originalBB578alteredBB

originalBB578:                                    ; preds = %2776, %originalBB578alteredBB
  %2785 = load i8*, i8** %11, align 8, !dbg !2577
  %2786 = load i64, i64* %21, align 8, !dbg !2577
  %2787 = getelementptr inbounds i8, i8* %2785, i64 %2786, !dbg !2577
  store i8 39, i8* %2787, align 1, !dbg !2577
  %2788 = load i32, i32* @x.37
  %2789 = load i32, i32* @y.38
  %2790 = sub i32 %2788, 1
  %2791 = mul i32 %2788, %2790
  %2792 = urem i32 %2791, 2
  %2793 = icmp eq i32 %2792, 0
  %2794 = icmp slt i32 %2789, 10
  %2795 = or i1 %2793, %2794
  br i1 %2795, label %originalBBpart2580, label %originalBB578alteredBB

originalBBpart2580:                               ; preds = %originalBB578
  br label %2796, !dbg !2577

2796:                                             ; preds = %originalBBpart2580, %originalBBpart2576
  %2797 = load i64, i64* %21, align 8, !dbg !2580
  %2798 = add i64 %2797, 1, !dbg !2580
  store i64 %2798, i64* %21, align 8, !dbg !2580
  br label %2799, !dbg !2580

2799:                                             ; preds = %2796
  br label %2800, !dbg !2575

2800:                                             ; preds = %2799
  %2801 = load i64, i64* %21, align 8, !dbg !2581
  %2802 = load i64, i64* %12, align 8, !dbg !2581
  %2803 = icmp ult i64 %2801, %2802, !dbg !2581
  br i1 %2803, label %2804, label %2808, !dbg !2584

2804:                                             ; preds = %2800
  %2805 = load i8*, i8** %11, align 8, !dbg !2581
  %2806 = load i64, i64* %21, align 8, !dbg !2581
  %2807 = getelementptr inbounds i8, i8* %2805, i64 %2806, !dbg !2581
  store i8 36, i8* %2807, align 1, !dbg !2581
  br label %2808, !dbg !2581

2808:                                             ; preds = %2804, %2800
  %2809 = load i64, i64* %21, align 8, !dbg !2584
  %2810 = add i64 %2809, 1, !dbg !2584
  store i64 %2810, i64* %21, align 8, !dbg !2584
  br label %2811, !dbg !2584

2811:                                             ; preds = %2808
  br label %2812, !dbg !2575

2812:                                             ; preds = %2811
  %2813 = load i32, i32* @x.37
  %2814 = load i32, i32* @y.38
  %2815 = sub i32 %2813, 1
  %2816 = mul i32 %2813, %2815
  %2817 = urem i32 %2816, 2
  %2818 = icmp eq i32 %2817, 0
  %2819 = icmp slt i32 %2814, 10
  %2820 = or i1 %2818, %2819
  br i1 %2820, label %originalBB582, label %originalBB582alteredBB

originalBB582:                                    ; preds = %2812, %originalBB582alteredBB
  %2821 = load i64, i64* %21, align 8, !dbg !2585
  %2822 = load i64, i64* %12, align 8, !dbg !2585
  %2823 = icmp ult i64 %2821, %2822, !dbg !2585
  %2824 = load i32, i32* @x.37
  %2825 = load i32, i32* @y.38
  %2826 = sub i32 %2824, 1
  %2827 = mul i32 %2824, %2826
  %2828 = urem i32 %2827, 2
  %2829 = icmp eq i32 %2828, 0
  %2830 = icmp slt i32 %2825, 10
  %2831 = or i1 %2829, %2830
  br i1 %2831, label %originalBBpart2584, label %originalBB582alteredBB

originalBBpart2584:                               ; preds = %originalBB582
  br i1 %2823, label %2832, label %2836, !dbg !2588

2832:                                             ; preds = %originalBBpart2584
  %2833 = load i8*, i8** %11, align 8, !dbg !2585
  %2834 = load i64, i64* %21, align 8, !dbg !2585
  %2835 = getelementptr inbounds i8, i8* %2833, i64 %2834, !dbg !2585
  store i8 39, i8* %2835, align 1, !dbg !2585
  br label %2836, !dbg !2585

2836:                                             ; preds = %2832, %originalBBpart2584
  %2837 = load i64, i64* %21, align 8, !dbg !2588
  %2838 = add i64 %2837, 1, !dbg !2588
  store i64 %2838, i64* %21, align 8, !dbg !2588
  br label %2839, !dbg !2588

2839:                                             ; preds = %2836
  store i8 1, i8* %28, align 1, !dbg !2575
  br label %2840, !dbg !2575

2840:                                             ; preds = %2839, %2736, %originalBBpart2568
  br label %2841, !dbg !2572

2841:                                             ; preds = %2840
  %2842 = load i64, i64* %21, align 8, !dbg !2589
  %2843 = load i64, i64* %12, align 8, !dbg !2589
  %2844 = icmp ult i64 %2842, %2843, !dbg !2589
  br i1 %2844, label %2845, label %2849, !dbg !2592

2845:                                             ; preds = %2841
  %2846 = load i8*, i8** %11, align 8, !dbg !2589
  %2847 = load i64, i64* %21, align 8, !dbg !2589
  %2848 = getelementptr inbounds i8, i8* %2846, i64 %2847, !dbg !2589
  store i8 92, i8* %2848, align 1, !dbg !2589
  br label %2849, !dbg !2589

2849:                                             ; preds = %2845, %2841
  %2850 = load i64, i64* %21, align 8, !dbg !2592
  %2851 = add i64 %2850, 1, !dbg !2592
  store i64 %2851, i64* %21, align 8, !dbg !2592
  br label %2852, !dbg !2592

2852:                                             ; preds = %2849
  %2853 = load i32, i32* @x.37
  %2854 = load i32, i32* @y.38
  %2855 = sub i32 %2853, 1
  %2856 = mul i32 %2853, %2855
  %2857 = urem i32 %2856, 2
  %2858 = icmp eq i32 %2857, 0
  %2859 = icmp slt i32 %2854, 10
  %2860 = or i1 %2858, %2859
  br i1 %2860, label %originalBB586, label %originalBB586alteredBB

originalBB586:                                    ; preds = %2852, %originalBB586alteredBB
  %2861 = load i32, i32* @x.37
  %2862 = load i32, i32* @y.38
  %2863 = sub i32 %2861, 1
  %2864 = mul i32 %2861, %2863
  %2865 = urem i32 %2864, 2
  %2866 = icmp eq i32 %2865, 0
  %2867 = icmp slt i32 %2862, 10
  %2868 = or i1 %2866, %2867
  br i1 %2868, label %originalBBpart2588, label %originalBB586alteredBB

originalBBpart2588:                               ; preds = %originalBB586
  br label %2869, !dbg !2572

2869:                                             ; preds = %originalBBpart2588
  br label %2870, !dbg !2572

2870:                                             ; preds = %2869, %2710, %originalBBpart2552, %originalBBpart2290, %1316
  call void @llvm.dbg.label(metadata !2593), !dbg !2594
  br label %2871, !dbg !2595

2871:                                             ; preds = %2870
  %2872 = load i8, i8* %28, align 1, !dbg !2596
  %2873 = trunc i8 %2872 to i1, !dbg !2596
  br i1 %2873, label %2874, label %2966, !dbg !2596

2874:                                             ; preds = %2871
  %2875 = load i32, i32* @x.37
  %2876 = load i32, i32* @y.38
  %2877 = sub i32 %2875, 1
  %2878 = mul i32 %2875, %2877
  %2879 = urem i32 %2878, 2
  %2880 = icmp eq i32 %2879, 0
  %2881 = icmp slt i32 %2876, 10
  %2882 = or i1 %2880, %2881
  br i1 %2882, label %originalBB590, label %originalBB590alteredBB

originalBB590:                                    ; preds = %2874, %originalBB590alteredBB
  %2883 = load i8, i8* %34, align 1, !dbg !2596
  %2884 = trunc i8 %2883 to i1, !dbg !2596
  %2885 = load i32, i32* @x.37
  %2886 = load i32, i32* @y.38
  %2887 = sub i32 %2885, 1
  %2888 = mul i32 %2885, %2887
  %2889 = urem i32 %2888, 2
  %2890 = icmp eq i32 %2889, 0
  %2891 = icmp slt i32 %2886, 10
  %2892 = or i1 %2890, %2891
  br i1 %2892, label %originalBBpart2592, label %originalBB590alteredBB

originalBBpart2592:                               ; preds = %originalBB590
  br i1 %2884, label %2966, label %2893, !dbg !2599

2893:                                             ; preds = %originalBBpart2592
  %2894 = load i32, i32* @x.37
  %2895 = load i32, i32* @y.38
  %2896 = sub i32 %2894, 1
  %2897 = mul i32 %2894, %2896
  %2898 = urem i32 %2897, 2
  %2899 = icmp eq i32 %2898, 0
  %2900 = icmp slt i32 %2895, 10
  %2901 = or i1 %2899, %2900
  br i1 %2901, label %originalBB594, label %originalBB594alteredBB

originalBB594:                                    ; preds = %2893, %originalBB594alteredBB
  %2902 = load i32, i32* @x.37
  %2903 = load i32, i32* @y.38
  %2904 = sub i32 %2902, 1
  %2905 = mul i32 %2902, %2904
  %2906 = urem i32 %2905, 2
  %2907 = icmp eq i32 %2906, 0
  %2908 = icmp slt i32 %2903, 10
  %2909 = or i1 %2907, %2908
  br i1 %2909, label %originalBBpart2596, label %originalBB594alteredBB

originalBBpart2596:                               ; preds = %originalBB594
  br label %2910, !dbg !2600

2910:                                             ; preds = %originalBBpart2596
  %2911 = load i64, i64* %21, align 8, !dbg !2602
  %2912 = load i64, i64* %12, align 8, !dbg !2602
  %2913 = icmp ult i64 %2911, %2912, !dbg !2602
  br i1 %2913, label %2914, label %2918, !dbg !2605

2914:                                             ; preds = %2910
  %2915 = load i8*, i8** %11, align 8, !dbg !2602
  %2916 = load i64, i64* %21, align 8, !dbg !2602
  %2917 = getelementptr inbounds i8, i8* %2915, i64 %2916, !dbg !2602
  store i8 39, i8* %2917, align 1, !dbg !2602
  br label %2918, !dbg !2602

2918:                                             ; preds = %2914, %2910
  %2919 = load i32, i32* @x.37
  %2920 = load i32, i32* @y.38
  %2921 = sub i32 %2919, 1
  %2922 = mul i32 %2919, %2921
  %2923 = urem i32 %2922, 2
  %2924 = icmp eq i32 %2923, 0
  %2925 = icmp slt i32 %2920, 10
  %2926 = or i1 %2924, %2925
  br i1 %2926, label %originalBB598, label %originalBB598alteredBB

originalBB598:                                    ; preds = %2918, %originalBB598alteredBB
  %2927 = load i64, i64* %21, align 8, !dbg !2605
  %2928 = add i64 %2927, 1, !dbg !2605
  store i64 %2928, i64* %21, align 8, !dbg !2605
  %2929 = load i32, i32* @x.37
  %2930 = load i32, i32* @y.38
  %2931 = sub i32 %2929, 1
  %2932 = mul i32 %2929, %2931
  %2933 = urem i32 %2932, 2
  %2934 = icmp eq i32 %2933, 0
  %2935 = icmp slt i32 %2930, 10
  %2936 = or i1 %2934, %2935
  br i1 %2936, label %originalBBpart2614, label %originalBB598alteredBB

originalBBpart2614:                               ; preds = %originalBB598
  br label %2937, !dbg !2605

2937:                                             ; preds = %originalBBpart2614
  br label %2938, !dbg !2600

2938:                                             ; preds = %2937
  %2939 = load i64, i64* %21, align 8, !dbg !2606
  %2940 = load i64, i64* %12, align 8, !dbg !2606
  %2941 = icmp ult i64 %2939, %2940, !dbg !2606
  br i1 %2941, label %2942, label %2946, !dbg !2609

2942:                                             ; preds = %2938
  %2943 = load i8*, i8** %11, align 8, !dbg !2606
  %2944 = load i64, i64* %21, align 8, !dbg !2606
  %2945 = getelementptr inbounds i8, i8* %2943, i64 %2944, !dbg !2606
  store i8 39, i8* %2945, align 1, !dbg !2606
  br label %2946, !dbg !2606

2946:                                             ; preds = %2942, %2938
  %2947 = load i64, i64* %21, align 8, !dbg !2609
  %2948 = add i64 %2947, 1, !dbg !2609
  store i64 %2948, i64* %21, align 8, !dbg !2609
  br label %2949, !dbg !2609

2949:                                             ; preds = %2946
  %2950 = load i32, i32* @x.37
  %2951 = load i32, i32* @y.38
  %2952 = sub i32 %2950, 1
  %2953 = mul i32 %2950, %2952
  %2954 = urem i32 %2953, 2
  %2955 = icmp eq i32 %2954, 0
  %2956 = icmp slt i32 %2951, 10
  %2957 = or i1 %2955, %2956
  br i1 %2957, label %originalBB616, label %originalBB616alteredBB

originalBB616:                                    ; preds = %2949, %originalBB616alteredBB
  store i8 0, i8* %28, align 1, !dbg !2600
  %2958 = load i32, i32* @x.37
  %2959 = load i32, i32* @y.38
  %2960 = sub i32 %2958, 1
  %2961 = mul i32 %2958, %2960
  %2962 = urem i32 %2961, 2
  %2963 = icmp eq i32 %2962, 0
  %2964 = icmp slt i32 %2959, 10
  %2965 = or i1 %2963, %2964
  br i1 %2965, label %originalBBpart2618, label %originalBB616alteredBB

originalBBpart2618:                               ; preds = %originalBB616
  br label %2966, !dbg !2600

2966:                                             ; preds = %originalBBpart2618, %originalBBpart2592, %2871
  br label %2967, !dbg !2599

2967:                                             ; preds = %2966
  br label %2968, !dbg !2610

2968:                                             ; preds = %2967
  %2969 = load i64, i64* %21, align 8, !dbg !2611
  %2970 = load i64, i64* %12, align 8, !dbg !2611
  %2971 = icmp ult i64 %2969, %2970, !dbg !2611
  br i1 %2971, label %2972, label %2977, !dbg !2614

2972:                                             ; preds = %2968
  %2973 = load i8, i8* %31, align 1, !dbg !2611
  %2974 = load i8*, i8** %11, align 8, !dbg !2611
  %2975 = load i64, i64* %21, align 8, !dbg !2611
  %2976 = getelementptr inbounds i8, i8* %2974, i64 %2975, !dbg !2611
  store i8 %2973, i8* %2976, align 1, !dbg !2611
  br label %2977, !dbg !2611

2977:                                             ; preds = %2972, %2968
  %2978 = load i32, i32* @x.37
  %2979 = load i32, i32* @y.38
  %2980 = sub i32 %2978, 1
  %2981 = mul i32 %2978, %2980
  %2982 = urem i32 %2981, 2
  %2983 = icmp eq i32 %2982, 0
  %2984 = icmp slt i32 %2979, 10
  %2985 = or i1 %2983, %2984
  br i1 %2985, label %originalBB620, label %originalBB620alteredBB

originalBB620:                                    ; preds = %2977, %originalBB620alteredBB
  %2986 = load i64, i64* %21, align 8, !dbg !2614
  %2987 = add i64 %2986, 1, !dbg !2614
  store i64 %2987, i64* %21, align 8, !dbg !2614
  %2988 = load i32, i32* @x.37
  %2989 = load i32, i32* @y.38
  %2990 = sub i32 %2988, 1
  %2991 = mul i32 %2988, %2990
  %2992 = urem i32 %2991, 2
  %2993 = icmp eq i32 %2992, 0
  %2994 = icmp slt i32 %2989, 10
  %2995 = or i1 %2993, %2994
  br i1 %2995, label %originalBBpart2632, label %originalBB620alteredBB

originalBBpart2632:                               ; preds = %originalBB620
  br label %2996, !dbg !2614

2996:                                             ; preds = %originalBBpart2632
  %2997 = load i8, i8* %35, align 1, !dbg !2615
  %2998 = trunc i8 %2997 to i1, !dbg !2615
  br i1 %2998, label %3016, label %2999, !dbg !2617

2999:                                             ; preds = %2996
  %3000 = load i32, i32* @x.37
  %3001 = load i32, i32* @y.38
  %3002 = sub i32 %3000, 1
  %3003 = mul i32 %3000, %3002
  %3004 = urem i32 %3003, 2
  %3005 = icmp eq i32 %3004, 0
  %3006 = icmp slt i32 %3001, 10
  %3007 = or i1 %3005, %3006
  br i1 %3007, label %originalBB634, label %originalBB634alteredBB

originalBB634:                                    ; preds = %2999, %originalBB634alteredBB
  store i8 0, i8* %30, align 1, !dbg !2618
  %3008 = load i32, i32* @x.37
  %3009 = load i32, i32* @y.38
  %3010 = sub i32 %3008, 1
  %3011 = mul i32 %3008, %3010
  %3012 = urem i32 %3011, 2
  %3013 = icmp eq i32 %3012, 0
  %3014 = icmp slt i32 %3009, 10
  %3015 = or i1 %3013, %3014
  br i1 %3015, label %originalBBpart2636, label %originalBB634alteredBB

originalBBpart2636:                               ; preds = %originalBB634
  br label %3016, !dbg !2619

3016:                                             ; preds = %originalBBpart2636, %2996
  %3017 = load i32, i32* @x.37
  %3018 = load i32, i32* @y.38
  %3019 = sub i32 %3017, 1
  %3020 = mul i32 %3017, %3019
  %3021 = urem i32 %3020, 2
  %3022 = icmp eq i32 %3021, 0
  %3023 = icmp slt i32 %3018, 10
  %3024 = or i1 %3022, %3023
  br i1 %3024, label %originalBB638, label %originalBB638alteredBB

originalBB638:                                    ; preds = %3016, %originalBB638alteredBB
  %3025 = load i32, i32* @x.37
  %3026 = load i32, i32* @y.38
  %3027 = sub i32 %3025, 1
  %3028 = mul i32 %3025, %3027
  %3029 = urem i32 %3028, 2
  %3030 = icmp eq i32 %3029, 0
  %3031 = icmp slt i32 %3026, 10
  %3032 = or i1 %3030, %3031
  br i1 %3032, label %originalBBpart2640, label %originalBB638alteredBB

originalBBpart2640:                               ; preds = %originalBB638
  br label %3033, !dbg !2620

3033:                                             ; preds = %originalBBpart2640, %originalBBpart2164
  %3034 = load i64, i64* %20, align 8, !dbg !2621
  %3035 = add i64 %3034, 1, !dbg !2621
  store i64 %3035, i64* %20, align 8, !dbg !2621
  br label %362, !dbg !2622, !llvm.loop !2623

3036:                                             ; preds = %originalBBpart279
  %3037 = load i32, i32* @x.37
  %3038 = load i32, i32* @y.38
  %3039 = sub i32 %3037, 1
  %3040 = mul i32 %3037, %3039
  %3041 = urem i32 %3040, 2
  %3042 = icmp eq i32 %3041, 0
  %3043 = icmp slt i32 %3038, 10
  %3044 = or i1 %3042, %3043
  br i1 %3044, label %originalBB642, label %originalBB642alteredBB

originalBB642:                                    ; preds = %3036, %originalBB642alteredBB
  %3045 = load i64, i64* %21, align 8, !dbg !2625
  %3046 = icmp eq i64 %3045, 0, !dbg !2627
  %3047 = load i32, i32* @x.37
  %3048 = load i32, i32* @y.38
  %3049 = sub i32 %3047, 1
  %3050 = mul i32 %3047, %3049
  %3051 = urem i32 %3050, 2
  %3052 = icmp eq i32 %3051, 0
  %3053 = icmp slt i32 %3048, 10
  %3054 = or i1 %3052, %3053
  br i1 %3054, label %originalBBpart2644, label %originalBB642alteredBB

originalBBpart2644:                               ; preds = %originalBB642
  br i1 %3046, label %3055, label %3062, !dbg !2628

3055:                                             ; preds = %originalBBpart2644
  %3056 = load i32, i32* %15, align 4, !dbg !2629
  %3057 = icmp eq i32 %3056, 2, !dbg !2630
  br i1 %3057, label %3058, label %3062, !dbg !2631

3058:                                             ; preds = %3055
  %3059 = load i8, i8* %27, align 1, !dbg !2632
  %3060 = trunc i8 %3059 to i1, !dbg !2632
  br i1 %3060, label %3061, label %3062, !dbg !2633

3061:                                             ; preds = %3058
  br label %3262, !dbg !2634

3062:                                             ; preds = %3058, %3055, %originalBBpart2644
  %3063 = load i32, i32* @x.37
  %3064 = load i32, i32* @y.38
  %3065 = sub i32 %3063, 1
  %3066 = mul i32 %3063, %3065
  %3067 = urem i32 %3066, 2
  %3068 = icmp eq i32 %3067, 0
  %3069 = icmp slt i32 %3064, 10
  %3070 = or i1 %3068, %3069
  br i1 %3070, label %originalBB646, label %originalBB646alteredBB

originalBB646:                                    ; preds = %3062, %originalBB646alteredBB
  %3071 = load i32, i32* %15, align 4, !dbg !2635
  %3072 = icmp eq i32 %3071, 2, !dbg !2637
  %3073 = load i32, i32* @x.37
  %3074 = load i32, i32* @y.38
  %3075 = sub i32 %3073, 1
  %3076 = mul i32 %3073, %3075
  %3077 = urem i32 %3076, 2
  %3078 = icmp eq i32 %3077, 0
  %3079 = icmp slt i32 %3074, 10
  %3080 = or i1 %3078, %3079
  br i1 %3080, label %originalBBpart2648, label %originalBB646alteredBB

originalBBpart2648:                               ; preds = %originalBB646
  br i1 %3072, label %3081, label %3174, !dbg !2638

3081:                                             ; preds = %originalBBpart2648
  %3082 = load i32, i32* @x.37
  %3083 = load i32, i32* @y.38
  %3084 = sub i32 %3082, 1
  %3085 = mul i32 %3082, %3084
  %3086 = urem i32 %3085, 2
  %3087 = icmp eq i32 %3086, 0
  %3088 = icmp slt i32 %3083, 10
  %3089 = or i1 %3087, %3088
  br i1 %3089, label %originalBB650, label %originalBB650alteredBB

originalBB650:                                    ; preds = %3081, %originalBB650alteredBB
  %3090 = load i8, i8* %27, align 1, !dbg !2639
  %3091 = trunc i8 %3090 to i1, !dbg !2639
  %3092 = load i32, i32* @x.37
  %3093 = load i32, i32* @y.38
  %3094 = sub i32 %3092, 1
  %3095 = mul i32 %3092, %3094
  %3096 = urem i32 %3095, 2
  %3097 = icmp eq i32 %3096, 0
  %3098 = icmp slt i32 %3093, 10
  %3099 = or i1 %3097, %3098
  br i1 %3099, label %originalBBpart2652, label %originalBB650alteredBB

originalBBpart2652:                               ; preds = %originalBB650
  br i1 %3091, label %3174, label %3100, !dbg !2640

3100:                                             ; preds = %originalBBpart2652
  %3101 = load i8, i8* %29, align 1, !dbg !2641
  %3102 = trunc i8 %3101 to i1, !dbg !2641
  br i1 %3102, label %3103, label %3174, !dbg !2642

3103:                                             ; preds = %3100
  %3104 = load i32, i32* @x.37
  %3105 = load i32, i32* @y.38
  %3106 = sub i32 %3104, 1
  %3107 = mul i32 %3104, %3106
  %3108 = urem i32 %3107, 2
  %3109 = icmp eq i32 %3108, 0
  %3110 = icmp slt i32 %3105, 10
  %3111 = or i1 %3109, %3110
  br i1 %3111, label %originalBB654, label %originalBB654alteredBB

originalBB654:                                    ; preds = %3103, %originalBB654alteredBB
  %3112 = load i8, i8* %30, align 1, !dbg !2643
  %3113 = trunc i8 %3112 to i1, !dbg !2643
  %3114 = load i32, i32* @x.37
  %3115 = load i32, i32* @y.38
  %3116 = sub i32 %3114, 1
  %3117 = mul i32 %3114, %3116
  %3118 = urem i32 %3117, 2
  %3119 = icmp eq i32 %3118, 0
  %3120 = icmp slt i32 %3115, 10
  %3121 = or i1 %3119, %3120
  br i1 %3121, label %originalBBpart2656, label %originalBB654alteredBB

originalBBpart2656:                               ; preds = %originalBB654
  br i1 %3113, label %3122, label %3148, !dbg !2646

3122:                                             ; preds = %originalBBpart2656
  %3123 = load i32, i32* @x.37
  %3124 = load i32, i32* @y.38
  %3125 = sub i32 %3123, 1
  %3126 = mul i32 %3123, %3125
  %3127 = urem i32 %3126, 2
  %3128 = icmp eq i32 %3127, 0
  %3129 = icmp slt i32 %3124, 10
  %3130 = or i1 %3128, %3129
  br i1 %3130, label %originalBB658, label %originalBB658alteredBB

originalBB658:                                    ; preds = %3122, %originalBB658alteredBB
  %3131 = load i8*, i8** %11, align 8, !dbg !2647
  %3132 = load i64, i64* %22, align 8, !dbg !2648
  %3133 = load i8*, i8** %13, align 8, !dbg !2649
  %3134 = load i64, i64* %14, align 8, !dbg !2650
  %3135 = load i32, i32* %16, align 4, !dbg !2651
  %3136 = load i32*, i32** %17, align 8, !dbg !2652
  %3137 = load i8*, i8** %18, align 8, !dbg !2653
  %3138 = load i8*, i8** %19, align 8, !dbg !2654
  %3139 = call i64 @quotearg_buffer_restyled(i8* %3131, i64 %3132, i8* %3133, i64 %3134, i32 5, i32 %3135, i32* %3136, i8* %3137, i8* %3138), !dbg !2655
  store i64 %3139, i64* %10, align 8, !dbg !2656
  %3140 = load i32, i32* @x.37
  %3141 = load i32, i32* @y.38
  %3142 = sub i32 %3140, 1
  %3143 = mul i32 %3140, %3142
  %3144 = urem i32 %3143, 2
  %3145 = icmp eq i32 %3144, 0
  %3146 = icmp slt i32 %3141, 10
  %3147 = or i1 %3145, %3146
  br i1 %3147, label %originalBBpart2660, label %originalBB658alteredBB

originalBBpart2660:                               ; preds = %originalBB658
  br label %3344, !dbg !2656

3148:                                             ; preds = %originalBBpart2656
  %3149 = load i64, i64* %12, align 8, !dbg !2657
  %3150 = icmp ne i64 %3149, 0, !dbg !2657
  br i1 %3150, label %3172, label %3151, !dbg !2659

3151:                                             ; preds = %3148
  %3152 = load i32, i32* @x.37
  %3153 = load i32, i32* @y.38
  %3154 = sub i32 %3152, 1
  %3155 = mul i32 %3152, %3154
  %3156 = urem i32 %3155, 2
  %3157 = icmp eq i32 %3156, 0
  %3158 = icmp slt i32 %3153, 10
  %3159 = or i1 %3157, %3158
  br i1 %3159, label %originalBB662, label %originalBB662alteredBB

originalBB662:                                    ; preds = %3151, %originalBB662alteredBB
  %3160 = load i64, i64* %22, align 8, !dbg !2660
  %3161 = icmp ne i64 %3160, 0, !dbg !2660
  %3162 = load i32, i32* @x.37
  %3163 = load i32, i32* @y.38
  %3164 = sub i32 %3162, 1
  %3165 = mul i32 %3162, %3164
  %3166 = urem i32 %3165, 2
  %3167 = icmp eq i32 %3166, 0
  %3168 = icmp slt i32 %3163, 10
  %3169 = or i1 %3167, %3168
  br i1 %3169, label %originalBBpart2664, label %originalBB662alteredBB

originalBBpart2664:                               ; preds = %originalBB662
  br i1 %3161, label %3170, label %3172, !dbg !2661

3170:                                             ; preds = %originalBBpart2664
  %3171 = load i64, i64* %22, align 8, !dbg !2662
  store i64 %3171, i64* %12, align 8, !dbg !2664
  store i64 0, i64* %21, align 8, !dbg !2665
  br label %50, !dbg !2666

3172:                                             ; preds = %originalBBpart2664, %3148
  br label %3173

3173:                                             ; preds = %3172
  br label %3174, !dbg !2667

3174:                                             ; preds = %3173, %3100, %originalBBpart2652, %originalBBpart2648
  %3175 = load i8*, i8** %23, align 8, !dbg !2668
  %3176 = icmp ne i8* %3175, null, !dbg !2668
  br i1 %3176, label %3177, label %3236, !dbg !2670

3177:                                             ; preds = %3174
  %3178 = load i32, i32* @x.37
  %3179 = load i32, i32* @y.38
  %3180 = sub i32 %3178, 1
  %3181 = mul i32 %3178, %3180
  %3182 = urem i32 %3181, 2
  %3183 = icmp eq i32 %3182, 0
  %3184 = icmp slt i32 %3179, 10
  %3185 = or i1 %3183, %3184
  br i1 %3185, label %originalBB666, label %originalBB666alteredBB

originalBB666:                                    ; preds = %3177, %originalBB666alteredBB
  %3186 = load i8, i8* %27, align 1, !dbg !2671
  %3187 = trunc i8 %3186 to i1, !dbg !2671
  %3188 = load i32, i32* @x.37
  %3189 = load i32, i32* @y.38
  %3190 = sub i32 %3188, 1
  %3191 = mul i32 %3188, %3190
  %3192 = urem i32 %3191, 2
  %3193 = icmp eq i32 %3192, 0
  %3194 = icmp slt i32 %3189, 10
  %3195 = or i1 %3193, %3194
  br i1 %3195, label %originalBBpart2668, label %originalBB666alteredBB

originalBBpart2668:                               ; preds = %originalBB666
  br i1 %3187, label %3236, label %3196, !dbg !2672

3196:                                             ; preds = %originalBBpart2668
  br label %3197, !dbg !2673

3197:                                             ; preds = %3216, %3196
  %3198 = load i8*, i8** %23, align 8, !dbg !2674
  %3199 = load i8, i8* %3198, align 1, !dbg !2677
  %3200 = icmp ne i8 %3199, 0, !dbg !2678
  br i1 %3200, label %3201, label %3219, !dbg !2678

3201:                                             ; preds = %3197
  br label %3202, !dbg !2679

3202:                                             ; preds = %3201
  %3203 = load i64, i64* %21, align 8, !dbg !2680
  %3204 = load i64, i64* %12, align 8, !dbg !2680
  %3205 = icmp ult i64 %3203, %3204, !dbg !2680
  br i1 %3205, label %3206, label %3212, !dbg !2683

3206:                                             ; preds = %3202
  %3207 = load i8*, i8** %23, align 8, !dbg !2680
  %3208 = load i8, i8* %3207, align 1, !dbg !2680
  %3209 = load i8*, i8** %11, align 8, !dbg !2680
  %3210 = load i64, i64* %21, align 8, !dbg !2680
  %3211 = getelementptr inbounds i8, i8* %3209, i64 %3210, !dbg !2680
  store i8 %3208, i8* %3211, align 1, !dbg !2680
  br label %3212, !dbg !2680

3212:                                             ; preds = %3206, %3202
  %3213 = load i64, i64* %21, align 8, !dbg !2683
  %3214 = add i64 %3213, 1, !dbg !2683
  store i64 %3214, i64* %21, align 8, !dbg !2683
  br label %3215, !dbg !2683

3215:                                             ; preds = %3212
  br label %3216, !dbg !2683

3216:                                             ; preds = %3215
  %3217 = load i8*, i8** %23, align 8, !dbg !2684
  %3218 = getelementptr inbounds i8, i8* %3217, i32 1, !dbg !2684
  store i8* %3218, i8** %23, align 8, !dbg !2684
  br label %3197, !dbg !2685, !llvm.loop !2686

3219:                                             ; preds = %3197
  %3220 = load i32, i32* @x.37
  %3221 = load i32, i32* @y.38
  %3222 = sub i32 %3220, 1
  %3223 = mul i32 %3220, %3222
  %3224 = urem i32 %3223, 2
  %3225 = icmp eq i32 %3224, 0
  %3226 = icmp slt i32 %3221, 10
  %3227 = or i1 %3225, %3226
  br i1 %3227, label %originalBB670, label %originalBB670alteredBB

originalBB670:                                    ; preds = %3219, %originalBB670alteredBB
  %3228 = load i32, i32* @x.37
  %3229 = load i32, i32* @y.38
  %3230 = sub i32 %3228, 1
  %3231 = mul i32 %3228, %3230
  %3232 = urem i32 %3231, 2
  %3233 = icmp eq i32 %3232, 0
  %3234 = icmp slt i32 %3229, 10
  %3235 = or i1 %3233, %3234
  br i1 %3235, label %originalBBpart2672, label %originalBB670alteredBB

originalBBpart2672:                               ; preds = %originalBB670
  br label %3236, !dbg !2687

3236:                                             ; preds = %originalBBpart2672, %originalBBpart2668, %3174
  %3237 = load i32, i32* @x.37
  %3238 = load i32, i32* @y.38
  %3239 = sub i32 %3237, 1
  %3240 = mul i32 %3237, %3239
  %3241 = urem i32 %3240, 2
  %3242 = icmp eq i32 %3241, 0
  %3243 = icmp slt i32 %3238, 10
  %3244 = or i1 %3242, %3243
  br i1 %3244, label %originalBB674, label %originalBB674alteredBB

originalBB674:                                    ; preds = %3236, %originalBB674alteredBB
  %3245 = load i64, i64* %21, align 8, !dbg !2688
  %3246 = load i64, i64* %12, align 8, !dbg !2690
  %3247 = icmp ult i64 %3245, %3246, !dbg !2691
  %3248 = load i32, i32* @x.37
  %3249 = load i32, i32* @y.38
  %3250 = sub i32 %3248, 1
  %3251 = mul i32 %3248, %3250
  %3252 = urem i32 %3251, 2
  %3253 = icmp eq i32 %3252, 0
  %3254 = icmp slt i32 %3249, 10
  %3255 = or i1 %3253, %3254
  br i1 %3255, label %originalBBpart2676, label %originalBB674alteredBB

originalBBpart2676:                               ; preds = %originalBB674
  br i1 %3247, label %3256, label %3260, !dbg !2692

3256:                                             ; preds = %originalBBpart2676
  %3257 = load i8*, i8** %11, align 8, !dbg !2693
  %3258 = load i64, i64* %21, align 8, !dbg !2694
  %3259 = getelementptr inbounds i8, i8* %3257, i64 %3258, !dbg !2693
  store i8 0, i8* %3259, align 1, !dbg !2695
  br label %3260, !dbg !2693

3260:                                             ; preds = %3256, %originalBBpart2676
  %3261 = load i64, i64* %21, align 8, !dbg !2696
  store i64 %3261, i64* %10, align 8, !dbg !2697
  br label %3344, !dbg !2697

3262:                                             ; preds = %3061, %2716, %2074, %1864, %originalBBpart2322, %1528, %1414, %originalBBpart2277, %999, %938, %originalBBpart2103, %483
  call void @llvm.dbg.label(metadata !2698), !dbg !2699
  %3263 = load i32, i32* @x.37
  %3264 = load i32, i32* @y.38
  %3265 = sub i32 %3263, 1
  %3266 = mul i32 %3263, %3265
  %3267 = urem i32 %3266, 2
  %3268 = icmp eq i32 %3267, 0
  %3269 = icmp slt i32 %3264, 10
  %3270 = or i1 %3268, %3269
  br i1 %3270, label %originalBB678, label %originalBB678alteredBB

originalBB678:                                    ; preds = %3262, %originalBB678alteredBB
  %3271 = load i32, i32* %15, align 4, !dbg !2700
  %3272 = icmp eq i32 %3271, 2, !dbg !2702
  %3273 = load i32, i32* @x.37
  %3274 = load i32, i32* @y.38
  %3275 = sub i32 %3273, 1
  %3276 = mul i32 %3273, %3275
  %3277 = urem i32 %3276, 2
  %3278 = icmp eq i32 %3277, 0
  %3279 = icmp slt i32 %3274, 10
  %3280 = or i1 %3278, %3279
  br i1 %3280, label %originalBBpart2680, label %originalBB678alteredBB

originalBBpart2680:                               ; preds = %originalBB678
  br i1 %3272, label %3281, label %3317, !dbg !2703

3281:                                             ; preds = %originalBBpart2680
  %3282 = load i32, i32* @x.37
  %3283 = load i32, i32* @y.38
  %3284 = sub i32 %3282, 1
  %3285 = mul i32 %3282, %3284
  %3286 = urem i32 %3285, 2
  %3287 = icmp eq i32 %3286, 0
  %3288 = icmp slt i32 %3283, 10
  %3289 = or i1 %3287, %3288
  br i1 %3289, label %originalBB682, label %originalBB682alteredBB

originalBB682:                                    ; preds = %3281, %originalBB682alteredBB
  %3290 = load i8, i8* %25, align 1, !dbg !2704
  %3291 = trunc i8 %3290 to i1, !dbg !2704
  %3292 = load i32, i32* @x.37
  %3293 = load i32, i32* @y.38
  %3294 = sub i32 %3292, 1
  %3295 = mul i32 %3292, %3294
  %3296 = urem i32 %3295, 2
  %3297 = icmp eq i32 %3296, 0
  %3298 = icmp slt i32 %3293, 10
  %3299 = or i1 %3297, %3298
  br i1 %3299, label %originalBBpart2684, label %originalBB682alteredBB

originalBBpart2684:                               ; preds = %originalBB682
  br i1 %3291, label %3300, label %3317, !dbg !2705

3300:                                             ; preds = %originalBBpart2684
  %3301 = load i32, i32* @x.37
  %3302 = load i32, i32* @y.38
  %3303 = sub i32 %3301, 1
  %3304 = mul i32 %3301, %3303
  %3305 = urem i32 %3304, 2
  %3306 = icmp eq i32 %3305, 0
  %3307 = icmp slt i32 %3302, 10
  %3308 = or i1 %3306, %3307
  br i1 %3308, label %originalBB686, label %originalBB686alteredBB

originalBB686:                                    ; preds = %3300, %originalBB686alteredBB
  store i32 4, i32* %15, align 4, !dbg !2706
  %3309 = load i32, i32* @x.37
  %3310 = load i32, i32* @y.38
  %3311 = sub i32 %3309, 1
  %3312 = mul i32 %3309, %3311
  %3313 = urem i32 %3312, 2
  %3314 = icmp eq i32 %3313, 0
  %3315 = icmp slt i32 %3310, 10
  %3316 = or i1 %3314, %3315
  br i1 %3316, label %originalBBpart2688, label %originalBB686alteredBB

originalBBpart2688:                               ; preds = %originalBB686
  br label %3317, !dbg !2707

3317:                                             ; preds = %originalBBpart2688, %originalBBpart2684, %originalBBpart2680
  %3318 = load i32, i32* @x.37
  %3319 = load i32, i32* @y.38
  %3320 = sub i32 %3318, 1
  %3321 = mul i32 %3318, %3320
  %3322 = urem i32 %3321, 2
  %3323 = icmp eq i32 %3322, 0
  %3324 = icmp slt i32 %3319, 10
  %3325 = or i1 %3323, %3324
  br i1 %3325, label %originalBB690, label %originalBB690alteredBB

originalBB690:                                    ; preds = %3317, %originalBB690alteredBB
  %3326 = load i8*, i8** %11, align 8, !dbg !2708
  %3327 = load i64, i64* %12, align 8, !dbg !2709
  %3328 = load i8*, i8** %13, align 8, !dbg !2710
  %3329 = load i64, i64* %14, align 8, !dbg !2711
  %3330 = load i32, i32* %15, align 4, !dbg !2712
  %3331 = load i32, i32* %16, align 4, !dbg !2713
  %3332 = and i32 %3331, -3, !dbg !2714
  %3333 = load i8*, i8** %18, align 8, !dbg !2715
  %3334 = load i8*, i8** %19, align 8, !dbg !2716
  %3335 = call i64 @quotearg_buffer_restyled(i8* %3326, i64 %3327, i8* %3328, i64 %3329, i32 %3330, i32 %3332, i32* null, i8* %3333, i8* %3334), !dbg !2717
  store i64 %3335, i64* %10, align 8, !dbg !2718
  %3336 = load i32, i32* @x.37
  %3337 = load i32, i32* @y.38
  %3338 = sub i32 %3336, 1
  %3339 = mul i32 %3336, %3338
  %3340 = urem i32 %3339, 2
  %3341 = icmp eq i32 %3340, 0
  %3342 = icmp slt i32 %3337, 10
  %3343 = or i1 %3341, %3342
  br i1 %3343, label %originalBBpart2697, label %originalBB690alteredBB

originalBBpart2697:                               ; preds = %originalBB690
  br label %3344, !dbg !2718

3344:                                             ; preds = %originalBBpart2697, %3260, %originalBBpart2660
  %3345 = load i32, i32* @x.37
  %3346 = load i32, i32* @y.38
  %3347 = sub i32 %3345, 1
  %3348 = mul i32 %3345, %3347
  %3349 = urem i32 %3348, 2
  %3350 = icmp eq i32 %3349, 0
  %3351 = icmp slt i32 %3346, 10
  %3352 = or i1 %3350, %3351
  br i1 %3352, label %originalBB699, label %originalBB699alteredBB

originalBB699:                                    ; preds = %3344, %originalBB699alteredBB
  %3353 = load i64, i64* %10, align 8, !dbg !2719
  %3354 = load i32, i32* @x.37
  %3355 = load i32, i32* @y.38
  %3356 = sub i32 %3354, 1
  %3357 = mul i32 %3354, %3356
  %3358 = urem i32 %3357, 2
  %3359 = icmp eq i32 %3358, 0
  %3360 = icmp slt i32 %3355, 10
  %3361 = or i1 %3359, %3360
  br i1 %3361, label %originalBBpart2701, label %originalBB699alteredBB

originalBBpart2701:                               ; preds = %originalBB699
  ret i64 %3353, !dbg !2719

originalBBalteredBB:                              ; preds = %originalBB, %52
  store i32 5, i32* %15, align 4, !dbg !1889
  store i8 1, i8* %27, align 1, !dbg !1891
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %73
  %3362 = load i64, i64* %21, align 8, !dbg !1897
  %3363 = load i64, i64* %12, align 8, !dbg !1897
  %3364 = icmp ult i64 %3362, %3363, !dbg !1897
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %102
  store i8 1, i8* %25, align 1, !dbg !1905
  store i8 0, i8* %27, align 1, !dbg !1906
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %119
  %3365 = load i32, i32* %15, align 4, !dbg !1908
  %3366 = icmp ne i32 %3365, 10, !dbg !1911
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %138
  %3367 = load i32, i32* %15, align 4, !dbg !1913
  %3368 = call i8* @gettext_quote(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11.86, i64 0, i64 0), i32 %3367), !dbg !1915
  store i8* %3368, i8** %18, align 8, !dbg !1916
  %3369 = load i32, i32* %15, align 4, !dbg !1917
  %3370 = call i8* @gettext_quote(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.87, i64 0, i64 0), i32 %3369), !dbg !1918
  store i8* %3370, i8** %19, align 8, !dbg !1919
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %159
  %3371 = load i8, i8* %27, align 1, !dbg !1921
  %3372 = trunc i8 %3371 to i1, !dbg !1921
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %180
  %3373 = load i8*, i8** %23, align 8, !dbg !1928
  %3374 = load i8, i8* %3373, align 1, !dbg !1930
  %3375 = icmp ne i8 %3374, 0, !dbg !1931
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %205
  %3376 = load i8*, i8** %23, align 8, !dbg !1933
  %3377 = load i8, i8* %3376, align 1, !dbg !1933
  %3378 = load i8*, i8** %11, align 8, !dbg !1933
  %3379 = load i64, i64* %21, align 8, !dbg !1933
  %3380 = getelementptr inbounds i8, i8* %3378, i64 %3379, !dbg !1933
  store i8 %3377, i8* %3380, align 1, !dbg !1933
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %241
  %3381 = load i8, i8* %27, align 1, !dbg !1952
  %3382 = trunc i8 %3381 to i1, !dbg !1952
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %260
  store i8 1, i8* %25, align 1, !dbg !1955
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %277
  br label %originalBB38

originalBB42alteredBB:                            ; preds = %originalBB42, %297
  br label %originalBB42

originalBB46alteredBB:                            ; preds = %originalBB46, %322
  %3383 = load i64, i64* %21, align 8, !dbg !1966
  %_ = sub i64 %3383, 1
  %gen = mul i64 %_, 1
  %_47 = sub i64 0, %3383
  %gen48 = add i64 %_47, 1
  %_49 = shl i64 %3383, 1
  %_50 = sub i64 %3383, 1
  %gen51 = mul i64 %_50, 1
  %_52 = sub i64 0, %3383
  %gen53 = add i64 %_52, 1
  %_54 = sub i64 0, %3383
  %gen55 = add i64 %_54, 1
  %_56 = sub i64 0, %3383
  %gen57 = add i64 %_56, 1
  %_58 = sub i64 %3383, 1
  %gen59 = mul i64 %_58, 1
  %3384 = add i64 %3383, 1, !dbg !1966
  store i64 %3384, i64* %21, align 8, !dbg !1966
  br label %originalBB46

originalBB63alteredBB:                            ; preds = %originalBB63, %342
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.87, i64 0, i64 0), i8** %23, align 8, !dbg !1967
  store i64 1, i64* %24, align 8, !dbg !1968
  br label %originalBB63

originalBB67alteredBB:                            ; preds = %originalBB67, %365
  %3385 = load i8*, i8** %13, align 8, !dbg !1979
  %3386 = load i64, i64* %20, align 8, !dbg !1980
  %3387 = getelementptr inbounds i8, i8* %3385, i64 %3386, !dbg !1979
  %3388 = load i8, i8* %3387, align 1, !dbg !1979
  %3389 = sext i8 %3388 to i32, !dbg !1979
  %3390 = icmp eq i32 %3389, 0, !dbg !1981
  %3391 = zext i1 %3390 to i32, !dbg !1981
  br label %originalBB67

originalBB71alteredBB:                            ; preds = %originalBB71, %394
  %3392 = icmp ne i32 %395, 0, !dbg !1985
  %_72 = sub i1 %3392, true
  %gen73 = mul i1 %_72, true
  %_74 = sub i1 %3392, true
  %gen75 = mul i1 %_74, true
  %_76 = sub i1 false, %3392
  %gen77 = add i1 %_76, true
  %3393 = xor i1 %3392, true, !dbg !1985
  br label %originalBB71

originalBB81alteredBB:                            ; preds = %originalBB81, %432
  %3394 = load i8*, i8** %13, align 8, !dbg !2014
  %3395 = call i64 @strlen(i8* %3394) #13, !dbg !2015
  store i64 %3395, i64* %14, align 8, !dbg !2016
  br label %originalBB81

originalBB85alteredBB:                            ; preds = %originalBB85, %453
  %3396 = icmp ule i64 %426, %454, !dbg !2018
  br label %originalBB85

originalBB89alteredBB:                            ; preds = %originalBB89, %492
  %3397 = load i8, i8* %25, align 1, !dbg !2040
  %3398 = trunc i8 %3397 to i1, !dbg !2040
  br label %originalBB89

originalBB93alteredBB:                            ; preds = %originalBB93, %511
  br label %originalBB93

originalBB97alteredBB:                            ; preds = %originalBB97, %528
  %3399 = load i8, i8* %27, align 1, !dbg !2046
  %3400 = trunc i8 %3399 to i1, !dbg !2046
  br label %originalBB97

originalBB101alteredBB:                           ; preds = %originalBB101, %547
  br label %originalBB101

originalBB105alteredBB:                           ; preds = %originalBB105, %564
  store i8 1, i8* %34, align 1, !dbg !2049
  %3401 = load i32, i32* %15, align 4, !dbg !2050
  %3402 = icmp eq i32 %3401, 2, !dbg !2050
  br label %originalBB105

originalBB109alteredBB:                           ; preds = %originalBB109, %587
  %3403 = load i64, i64* %21, align 8, !dbg !2054
  %3404 = load i64, i64* %12, align 8, !dbg !2054
  %3405 = icmp ult i64 %3403, %3404, !dbg !2054
  br label %originalBB109

originalBB113alteredBB:                           ; preds = %originalBB113, %619
  %3406 = load i8*, i8** %11, align 8, !dbg !2058
  %3407 = load i64, i64* %21, align 8, !dbg !2058
  %3408 = getelementptr inbounds i8, i8* %3406, i64 %3407, !dbg !2058
  store i8 36, i8* %3408, align 1, !dbg !2058
  br label %originalBB113

originalBB117alteredBB:                           ; preds = %originalBB117, %647
  %3409 = load i8*, i8** %11, align 8, !dbg !2062
  %3410 = load i64, i64* %21, align 8, !dbg !2062
  %3411 = getelementptr inbounds i8, i8* %3409, i64 %3410, !dbg !2062
  store i8 39, i8* %3411, align 1, !dbg !2062
  br label %originalBB117

originalBB121alteredBB:                           ; preds = %originalBB121, %676
  %3412 = load i8*, i8** %11, align 8, !dbg !2066
  %3413 = load i64, i64* %21, align 8, !dbg !2066
  %3414 = getelementptr inbounds i8, i8* %3412, i64 %3413, !dbg !2066
  store i8 92, i8* %3414, align 1, !dbg !2066
  br label %originalBB121

originalBB125alteredBB:                           ; preds = %originalBB125, %699
  br label %originalBB125

originalBB129alteredBB:                           ; preds = %originalBB129, %716
  %3415 = load i32, i32* %15, align 4, !dbg !2070
  %3416 = icmp ne i32 %3415, 2, !dbg !2072
  br label %originalBB129

originalBB133alteredBB:                           ; preds = %originalBB133, %735
  %3417 = load i64, i64* %20, align 8, !dbg !2074
  %_134 = shl i64 %3417, 1
  %_135 = shl i64 %3417, 1
  %_136 = sub i64 %3417, 1
  %gen137 = mul i64 %_136, 1
  %_138 = sub i64 0, %3417
  %gen139 = add i64 %_138, 1
  %_140 = shl i64 %3417, 1
  %3418 = add i64 %3417, 1, !dbg !2075
  %3419 = load i64, i64* %14, align 8, !dbg !2076
  %3420 = icmp ult i64 %3418, %3419, !dbg !2077
  br label %originalBB133

originalBB144alteredBB:                           ; preds = %originalBB144, %773
  %3421 = load i64, i64* %21, align 8, !dbg !2091
  %3422 = load i64, i64* %12, align 8, !dbg !2091
  %3423 = icmp ult i64 %3421, %3422, !dbg !2091
  br label %originalBB144

originalBB148alteredBB:                           ; preds = %originalBB148, %793
  %3424 = load i8*, i8** %11, align 8, !dbg !2091
  %3425 = load i64, i64* %21, align 8, !dbg !2091
  %3426 = getelementptr inbounds i8, i8* %3424, i64 %3425, !dbg !2091
  store i8 48, i8* %3426, align 1, !dbg !2091
  br label %originalBB148

originalBB152alteredBB:                           ; preds = %originalBB152, %821
  %3427 = load i8*, i8** %11, align 8, !dbg !2096
  %3428 = load i64, i64* %21, align 8, !dbg !2096
  %3429 = getelementptr inbounds i8, i8* %3427, i64 %3428, !dbg !2096
  store i8 48, i8* %3429, align 1, !dbg !2096
  br label %originalBB152

originalBB156alteredBB:                           ; preds = %originalBB156, %841
  %3430 = load i64, i64* %21, align 8, !dbg !2099
  %_157 = sub i64 0, %3430
  %gen158 = add i64 %_157, 1
  %3431 = add i64 %3430, 1, !dbg !2099
  store i64 %3431, i64* %21, align 8, !dbg !2099
  br label %originalBB156

originalBB162alteredBB:                           ; preds = %originalBB162, %866
  br label %originalBB162

originalBB166alteredBB:                           ; preds = %originalBB166, %883
  br label %originalBB166

originalBB170alteredBB:                           ; preds = %originalBB170, %901
  %3432 = load i32, i32* %15, align 4, !dbg !2109
  br label %originalBB170

originalBB174alteredBB:                           ; preds = %originalBB174, %919
  %3433 = load i8, i8* %27, align 1, !dbg !2111
  %3434 = trunc i8 %3433 to i1, !dbg !2111
  br label %originalBB174

originalBB178alteredBB:                           ; preds = %originalBB178, %944
  %3435 = load i64, i64* %20, align 8, !dbg !2121
  %_179 = sub i64 0, %3435
  %gen180 = add i64 %_179, 2
  %_181 = sub i64 0, %3435
  %gen182 = add i64 %_181, 2
  %_183 = shl i64 %3435, 2
  %_184 = sub i64 %3435, 2
  %gen185 = mul i64 %_184, 2
  %_186 = sub i64 0, %3435
  %gen187 = add i64 %_186, 2
  %_188 = sub i64 %3435, 2
  %gen189 = mul i64 %_188, 2
  %_190 = shl i64 %3435, 2
  %3436 = add i64 %3435, 2, !dbg !2122
  %3437 = load i64, i64* %14, align 8, !dbg !2123
  %3438 = icmp ult i64 %3436, %3437, !dbg !2124
  br label %originalBB178

originalBB194alteredBB:                           ; preds = %originalBB194, %973
  %3439 = load i8*, i8** %13, align 8, !dbg !2131
  %3440 = load i64, i64* %20, align 8, !dbg !2132
  %_195 = sub i64 %3440, 2
  %gen196 = mul i64 %_195, 2
  %_197 = shl i64 %3440, 2
  %_198 = sub i64 %3440, 2
  %gen199 = mul i64 %_198, 2
  %_200 = shl i64 %3440, 2
  %3441 = add i64 %3440, 2, !dbg !2133
  %3442 = getelementptr inbounds i8, i8* %3439, i64 %3441, !dbg !2131
  %3443 = load i8, i8* %3442, align 1, !dbg !2131
  %3444 = sext i8 %3443 to i32, !dbg !2131
  br label %originalBB194

originalBB204alteredBB:                           ; preds = %originalBB204, %1008
  %3445 = load i64, i64* %21, align 8, !dbg !2146
  %3446 = load i64, i64* %12, align 8, !dbg !2146
  %3447 = icmp ult i64 %3445, %3446, !dbg !2146
  br label %originalBB204

originalBB208alteredBB:                           ; preds = %originalBB208, %1028
  %3448 = load i8*, i8** %11, align 8, !dbg !2146
  %3449 = load i64, i64* %21, align 8, !dbg !2146
  %3450 = getelementptr inbounds i8, i8* %3448, i64 %3449, !dbg !2146
  store i8 63, i8* %3450, align 1, !dbg !2146
  br label %originalBB208

originalBB212alteredBB:                           ; preds = %originalBB212, %1048
  %3451 = load i64, i64* %21, align 8, !dbg !2149
  %_213 = shl i64 %3451, 1
  %_214 = shl i64 %3451, 1
  %3452 = add i64 %3451, 1, !dbg !2149
  store i64 %3452, i64* %21, align 8, !dbg !2149
  br label %originalBB212

originalBB218alteredBB:                           ; preds = %originalBB218, %1084
  %3453 = load i8*, i8** %11, align 8, !dbg !2156
  %3454 = load i64, i64* %21, align 8, !dbg !2156
  %3455 = getelementptr inbounds i8, i8* %3453, i64 %3454, !dbg !2156
  store i8 34, i8* %3455, align 1, !dbg !2156
  br label %originalBB218

originalBB222alteredBB:                           ; preds = %originalBB222, %1104
  %3456 = load i64, i64* %21, align 8, !dbg !2159
  %_223 = sub i64 0, %3456
  %gen224 = add i64 %_223, 1
  %_225 = sub i64 0, %3456
  %gen226 = add i64 %_225, 1
  %_227 = sub i64 0, %3456
  %gen228 = add i64 %_227, 1
  %_229 = sub i64 %3456, 1
  %gen230 = mul i64 %_229, 1
  %_231 = sub i64 0, %3456
  %gen232 = add i64 %_231, 1
  %_233 = shl i64 %3456, 1
  %_234 = sub i64 %3456, 1
  %gen235 = mul i64 %_234, 1
  %3457 = add i64 %3456, 1, !dbg !2159
  store i64 %3457, i64* %21, align 8, !dbg !2159
  br label %originalBB222

originalBB239alteredBB:                           ; preds = %originalBB239, %1128
  %3458 = load i8*, i8** %11, align 8, !dbg !2161
  %3459 = load i64, i64* %21, align 8, !dbg !2161
  %3460 = getelementptr inbounds i8, i8* %3458, i64 %3459, !dbg !2161
  store i8 63, i8* %3460, align 1, !dbg !2161
  br label %originalBB239

originalBB243alteredBB:                           ; preds = %originalBB243, %1151
  br label %originalBB243

originalBB247alteredBB:                           ; preds = %originalBB247, %1168
  br label %originalBB247

originalBB251alteredBB:                           ; preds = %originalBB251, %1187
  br label %originalBB251

originalBB255alteredBB:                           ; preds = %originalBB255, %1204
  br label %originalBB255

originalBB259alteredBB:                           ; preds = %originalBB259, %1221
  store i8 97, i8* %32, align 1, !dbg !2171
  br label %originalBB259

originalBB263alteredBB:                           ; preds = %originalBB263, %1239
  store i8 102, i8* %32, align 1, !dbg !2175
  br label %originalBB263

originalBB267alteredBB:                           ; preds = %originalBB267, %1260
  %3461 = load i8, i8* %31, align 1, !dbg !2185
  store i8 %3461, i8* %32, align 1, !dbg !2186
  %3462 = load i32, i32* %15, align 4, !dbg !2187
  %3463 = icmp eq i32 %3462, 2, !dbg !2189
  br label %originalBB267

originalBB271alteredBB:                           ; preds = %originalBB271, %1280
  %3464 = load i8, i8* %27, align 1, !dbg !2191
  %3465 = trunc i8 %3464 to i1, !dbg !2191
  br label %originalBB271

originalBB275alteredBB:                           ; preds = %originalBB275, %1299
  br label %originalBB275

originalBB279alteredBB:                           ; preds = %originalBB279, %1320
  %3466 = load i8, i8* %27, align 1, !dbg !2200
  %3467 = trunc i8 %3466 to i1, !dbg !2200
  br label %originalBB279

originalBB284alteredBB:                           ; preds = %originalBB284, %1339
  %3468 = load i64, i64* %24, align 8, !dbg !2202
  %3469 = icmp ne i64 %3468, 0, !dbg !2202
  br label %originalBB284

originalBB288alteredBB:                           ; preds = %originalBB288, %1358
  br label %originalBB288

originalBB292alteredBB:                           ; preds = %originalBB292, %1375
  br label %originalBB292

originalBB296alteredBB:                           ; preds = %originalBB296, %1395
  %3470 = load i8, i8* %27, align 1, !dbg !2211
  %3471 = trunc i8 %3470 to i1, !dbg !2211
  br label %originalBB296

originalBB300alteredBB:                           ; preds = %originalBB300, %1416
  %3472 = load i8, i8* %25, align 1, !dbg !2216
  %3473 = trunc i8 %3472 to i1, !dbg !2216
  br label %originalBB300

originalBB304alteredBB:                           ; preds = %originalBB304, %1441
  %3474 = load i8*, i8** %13, align 8, !dbg !2228
  %3475 = getelementptr inbounds i8, i8* %3474, i64 1, !dbg !2228
  %3476 = load i8, i8* %3475, align 1, !dbg !2228
  %3477 = sext i8 %3476 to i32, !dbg !2228
  %3478 = icmp eq i32 %3477, 0, !dbg !2229
  br label %originalBB304

originalBB308alteredBB:                           ; preds = %originalBB308, %1471
  br label %originalBB308

originalBB312alteredBB:                           ; preds = %originalBB312, %1490
  %3479 = load i32, i32* %15, align 4, !dbg !2242
  %3480 = icmp eq i32 %3479, 2, !dbg !2244
  br label %originalBB312

originalBB316alteredBB:                           ; preds = %originalBB316, %1509
  %3481 = load i8, i8* %27, align 1, !dbg !2246
  %3482 = trunc i8 %3481 to i1, !dbg !2246
  br label %originalBB316

originalBB320alteredBB:                           ; preds = %originalBB320, %1536
  br label %originalBB320

originalBB324alteredBB:                           ; preds = %originalBB324, %1553
  %3483 = load i64, i64* %12, align 8, !dbg !2261
  %3484 = icmp ne i64 %3483, 0, !dbg !2261
  br label %originalBB324

originalBB328alteredBB:                           ; preds = %originalBB328, %1572
  %3485 = load i64, i64* %22, align 8, !dbg !2264
  %3486 = icmp ne i64 %3485, 0, !dbg !2264
  br label %originalBB328

originalBB332alteredBB:                           ; preds = %originalBB332, %1593
  br label %originalBB332

originalBB336alteredBB:                           ; preds = %originalBB336, %1621
  br label %originalBB336

originalBB340alteredBB:                           ; preds = %originalBB340, %1649
  br label %originalBB340

originalBB344alteredBB:                           ; preds = %originalBB344, %1678
  br label %originalBB344

originalBB348alteredBB:                           ; preds = %originalBB348, %1699
  store i64 1, i64* %36, align 8, !dbg !2299
  %3487 = call i16** @__ctype_b_loc() #15, !dbg !2301
  %3488 = load i16*, i16** %3487, align 8, !dbg !2301
  %3489 = load i8, i8* %31, align 1, !dbg !2301
  %3490 = zext i8 %3489 to i32, !dbg !2301
  %3491 = sext i32 %3490 to i64, !dbg !2301
  %3492 = getelementptr inbounds i16, i16* %3488, i64 %3491, !dbg !2301
  %3493 = load i16, i16* %3492, align 2, !dbg !2301
  %3494 = zext i16 %3493 to i32, !dbg !2301
  %_349 = sub i32 0, %3494
  %gen350 = add i32 %_349, 16384
  %_351 = sub i32 0, %3494
  %gen352 = add i32 %_351, 16384
  %_353 = sub i32 0, %3494
  %gen354 = add i32 %_353, 16384
  %_355 = sub i32 %3494, 16384
  %gen356 = mul i32 %_355, 16384
  %3495 = and i32 %3494, 16384, !dbg !2301
  %3496 = icmp ne i32 %3495, 0, !dbg !2302
  %3497 = zext i1 %3496 to i8, !dbg !2303
  store i8 %3497, i8* %37, align 1, !dbg !2303
  br label %originalBB348

originalBB360alteredBB:                           ; preds = %originalBB360, %1734
  br label %originalBB360

originalBB364alteredBB:                           ; preds = %originalBB364, %1770
  %3498 = load i64, i64* %40, align 8, !dbg !2363
  %3499 = icmp eq i64 %3498, -2, !dbg !2365
  br label %originalBB364

originalBB368alteredBB:                           ; preds = %originalBB368, %1789
  store i8 0, i8* %37, align 1, !dbg !2367
  br label %originalBB368

originalBB372alteredBB:                           ; preds = %originalBB372, %1834
  %3500 = load i64, i64* %41, align 8, !dbg !2397
  %3501 = load i64, i64* %40, align 8, !dbg !2399
  %3502 = icmp ult i64 %3500, %3501, !dbg !2400
  br label %originalBB372

originalBB376alteredBB:                           ; preds = %originalBB376, %1870
  br label %originalBB376

originalBB380alteredBB:                           ; preds = %originalBB380, %1887
  %3503 = load i32, i32* %39, align 4, !dbg !2418
  %3504 = call i32 @iswprint(i32 %3503) #10, !dbg !2420
  %3505 = icmp ne i32 %3504, 0, !dbg !2420
  br label %originalBB380

originalBB384alteredBB:                           ; preds = %originalBB384, %1907
  store i8 0, i8* %37, align 1, !dbg !2422
  br label %originalBB384

originalBB388alteredBB:                           ; preds = %originalBB388, %1924
  %3506 = load i64, i64* %40, align 8, !dbg !2424
  %3507 = load i64, i64* %36, align 8, !dbg !2425
  %_389 = shl i64 %3507, %3506
  %_390 = shl i64 %3507, %3506
  %_391 = sub i64 %3507, %3506
  %gen392 = mul i64 %_391, %3506
  %_393 = sub i64 0, %3507
  %gen394 = add i64 %_393, %3506
  %_395 = shl i64 %3507, %3506
  %_396 = shl i64 %3507, %3506
  %3508 = add i64 %3507, %3506, !dbg !2425
  store i64 %3508, i64* %36, align 8, !dbg !2425
  br label %originalBB388

originalBB400alteredBB:                           ; preds = %originalBB400, %1946
  br label %originalBB400

originalBB404alteredBB:                           ; preds = %originalBB404, %1963
  %3509 = call i32 @mbsinit(%struct.__mbstate_t* %38) #13, !dbg !2427
  %3510 = icmp ne i32 %3509, 0, !dbg !2428
  %_405 = sub i1 false, %3510
  %gen406 = add i1 %_405, true
  %_407 = sub i1 false, %3510
  %gen408 = add i1 %_407, true
  %_409 = shl i1 %3510, true
  %_410 = sub i1 %3510, true
  %gen411 = mul i1 %_410, true
  %3511 = xor i1 %3510, true, !dbg !2428
  br label %originalBB404

originalBB415alteredBB:                           ; preds = %originalBB415, %1983
  br label %originalBB415

originalBB419alteredBB:                           ; preds = %originalBB419, %2000
  %3512 = load i8, i8* %37, align 1, !dbg !2431
  %3513 = trunc i8 %3512 to i1, !dbg !2431
  %3514 = zext i1 %3513 to i8, !dbg !2432
  store i8 %3514, i8* %35, align 1, !dbg !2432
  %3515 = load i64, i64* %36, align 8, !dbg !2433
  %3516 = icmp ult i64 1, %3515, !dbg !2435
  br label %originalBB419

originalBB423alteredBB:                           ; preds = %originalBB423, %2035
  %3517 = load i8, i8* %37, align 1, !dbg !2454
  %3518 = trunc i8 %3517 to i1, !dbg !2454
  br label %originalBB423

originalBB427alteredBB:                           ; preds = %originalBB427, %2054
  br label %originalBB427

originalBB431alteredBB:                           ; preds = %originalBB431, %2075
  store i8 1, i8* %34, align 1, !dbg !2461
  %3519 = load i32, i32* %15, align 4, !dbg !2462
  %3520 = icmp eq i32 %3519, 2, !dbg !2462
  br label %originalBB431

originalBB435alteredBB:                           ; preds = %originalBB435, %2094
  %3521 = load i8, i8* %28, align 1, !dbg !2462
  %3522 = trunc i8 %3521 to i1, !dbg !2462
  br label %originalBB435

originalBB439alteredBB:                           ; preds = %originalBB439, %2130
  %3523 = load i8*, i8** %11, align 8, !dbg !2470
  %3524 = load i64, i64* %21, align 8, !dbg !2470
  %3525 = getelementptr inbounds i8, i8* %3523, i64 %3524, !dbg !2470
  store i8 36, i8* %3525, align 1, !dbg !2470
  br label %originalBB439

originalBB443alteredBB:                           ; preds = %originalBB443, %2153
  br label %originalBB443

originalBB447alteredBB:                           ; preds = %originalBB447, %2174
  %3526 = load i8*, i8** %11, align 8, !dbg !2474
  %3527 = load i64, i64* %21, align 8, !dbg !2474
  %3528 = getelementptr inbounds i8, i8* %3526, i64 %3527, !dbg !2474
  store i8 39, i8* %3528, align 1, !dbg !2474
  br label %originalBB447

originalBB451alteredBB:                           ; preds = %originalBB451, %2197
  store i8 1, i8* %28, align 1, !dbg !2464
  br label %originalBB451

originalBB455alteredBB:                           ; preds = %originalBB455, %2226
  br label %originalBB455

originalBB459alteredBB:                           ; preds = %originalBB459, %2260
  br label %originalBB459

originalBB463alteredBB:                           ; preds = %originalBB463, %2277
  %3529 = load i64, i64* %21, align 8, !dbg !2488
  %3530 = load i64, i64* %12, align 8, !dbg !2488
  %3531 = icmp ult i64 %3529, %3530, !dbg !2488
  br label %originalBB463

originalBB467alteredBB:                           ; preds = %originalBB467, %2307
  %3532 = load i64, i64* %21, align 8, !dbg !2491
  %_468 = shl i64 %3532, 1
  %3533 = add i64 %3532, 1, !dbg !2491
  store i64 %3533, i64* %21, align 8, !dbg !2491
  br label %originalBB467

originalBB472alteredBB:                           ; preds = %originalBB472, %2326
  %3534 = load i8, i8* %31, align 1, !dbg !2492
  %3535 = zext i8 %3534 to i32, !dbg !2492
  %_473 = sub i32 0, %3535
  %gen474 = add i32 %_473, 7
  %_475 = shl i32 %3535, 7
  %_476 = sub i32 0, %3535
  %gen477 = add i32 %_476, 7
  %_478 = sub i32 %3535, 7
  %gen479 = mul i32 %_478, 7
  %_480 = sub i32 0, %3535
  %gen481 = add i32 %_480, 7
  %3536 = and i32 %3535, 7, !dbg !2493
  %_482 = sub i32 0, 48
  %gen483 = add i32 %_482, %3536
  %3537 = add nsw i32 48, %3536, !dbg !2494
  %3538 = trunc i32 %3537 to i8, !dbg !2495
  store i8 %3538, i8* %31, align 1, !dbg !2496
  br label %originalBB472

originalBB487alteredBB:                           ; preds = %originalBB487, %2351
  br label %originalBB487

originalBB491alteredBB:                           ; preds = %originalBB491, %2368
  %3539 = load i64, i64* %21, align 8, !dbg !2503
  %3540 = load i64, i64* %12, align 8, !dbg !2503
  %3541 = icmp ult i64 %3539, %3540, !dbg !2503
  br label %originalBB491

originalBB495alteredBB:                           ; preds = %originalBB495, %2392
  %3542 = load i64, i64* %21, align 8, !dbg !2506
  %_496 = shl i64 %3542, 1
  %3543 = add i64 %3542, 1, !dbg !2506
  store i64 %3543, i64* %21, align 8, !dbg !2506
  br label %originalBB495

originalBB500alteredBB:                           ; preds = %originalBB500, %2419
  br label %originalBB500

originalBB504alteredBB:                           ; preds = %originalBB504, %2436
  %3544 = load i8, i8* %28, align 1, !dbg !2517
  %3545 = trunc i8 %3544 to i1, !dbg !2517
  br label %originalBB504

originalBB508alteredBB:                           ; preds = %originalBB508, %2455
  %3546 = load i8, i8* %34, align 1, !dbg !2517
  %3547 = trunc i8 %3546 to i1, !dbg !2517
  br label %originalBB508

originalBB512alteredBB:                           ; preds = %originalBB512, %2479
  %3548 = load i8*, i8** %11, align 8, !dbg !2523
  %3549 = load i64, i64* %21, align 8, !dbg !2523
  %3550 = getelementptr inbounds i8, i8* %3548, i64 %3549, !dbg !2523
  store i8 39, i8* %3550, align 1, !dbg !2523
  br label %originalBB512

originalBB516alteredBB:                           ; preds = %originalBB516, %2502
  br label %originalBB516

originalBB520alteredBB:                           ; preds = %originalBB520, %2527
  %3551 = load i64, i64* %21, align 8, !dbg !2530
  %_521 = shl i64 %3551, 1
  %_522 = sub i64 0, %3551
  %gen523 = add i64 %_522, 1
  %_524 = sub i64 0, %3551
  %gen525 = add i64 %_524, 1
  %_526 = shl i64 %3551, 1
  %_527 = sub i64 0, %3551
  %gen528 = add i64 %_527, 1
  %_529 = sub i64 0, %3551
  %gen530 = add i64 %_529, 1
  %_531 = sub i64 %3551, 1
  %gen532 = mul i64 %_531, 1
  %_533 = sub i64 %3551, 1
  %gen534 = mul i64 %_533, 1
  %3552 = add i64 %3551, 1, !dbg !2530
  store i64 %3552, i64* %21, align 8, !dbg !2530
  br label %originalBB520

originalBB538alteredBB:                           ; preds = %originalBB538, %2547
  br label %originalBB538

originalBB542alteredBB:                           ; preds = %originalBB542, %2564
  br label %originalBB542

originalBB546alteredBB:                           ; preds = %originalBB546, %2581
  %3553 = load i64, i64* %21, align 8, !dbg !2532
  %3554 = load i64, i64* %12, align 8, !dbg !2532
  %3555 = icmp ult i64 %3553, %3554, !dbg !2532
  br label %originalBB546

originalBB550alteredBB:                           ; preds = %originalBB550, %2615
  br label %originalBB550

originalBB554alteredBB:                           ; preds = %originalBB554, %2632
  br label %originalBB554

originalBB558alteredBB:                           ; preds = %originalBB558, %2649
  %3556 = load i8, i8* %25, align 1, !dbg !2545
  %3557 = trunc i8 %3556 to i1, !dbg !2545
  br label %originalBB558

originalBB562alteredBB:                           ; preds = %originalBB562, %2668
  %3558 = load i32, i32* %15, align 4, !dbg !2548
  %3559 = icmp ne i32 %3558, 2, !dbg !2549
  br label %originalBB562

originalBB566alteredBB:                           ; preds = %originalBB566, %2717
  store i8 1, i8* %34, align 1, !dbg !2572
  %3560 = load i32, i32* %15, align 4, !dbg !2573
  %3561 = icmp eq i32 %3560, 2, !dbg !2573
  br label %originalBB566

originalBB570alteredBB:                           ; preds = %originalBB570, %2739
  br label %originalBB570

originalBB574alteredBB:                           ; preds = %originalBB574, %2756
  %3562 = load i64, i64* %21, align 8, !dbg !2577
  %3563 = load i64, i64* %12, align 8, !dbg !2577
  %3564 = icmp ult i64 %3562, %3563, !dbg !2577
  br label %originalBB574

originalBB578alteredBB:                           ; preds = %originalBB578, %2776
  %3565 = load i8*, i8** %11, align 8, !dbg !2577
  %3566 = load i64, i64* %21, align 8, !dbg !2577
  %3567 = getelementptr inbounds i8, i8* %3565, i64 %3566, !dbg !2577
  store i8 39, i8* %3567, align 1, !dbg !2577
  br label %originalBB578

originalBB582alteredBB:                           ; preds = %originalBB582, %2812
  %3568 = load i64, i64* %21, align 8, !dbg !2585
  %3569 = load i64, i64* %12, align 8, !dbg !2585
  %3570 = icmp ult i64 %3568, %3569, !dbg !2585
  br label %originalBB582

originalBB586alteredBB:                           ; preds = %originalBB586, %2852
  br label %originalBB586

originalBB590alteredBB:                           ; preds = %originalBB590, %2874
  %3571 = load i8, i8* %34, align 1, !dbg !2596
  %3572 = trunc i8 %3571 to i1, !dbg !2596
  br label %originalBB590

originalBB594alteredBB:                           ; preds = %originalBB594, %2893
  br label %originalBB594

originalBB598alteredBB:                           ; preds = %originalBB598, %2918
  %3573 = load i64, i64* %21, align 8, !dbg !2605
  %_599 = sub i64 %3573, 1
  %gen600 = mul i64 %_599, 1
  %_601 = shl i64 %3573, 1
  %_602 = sub i64 0, %3573
  %gen603 = add i64 %_602, 1
  %_604 = shl i64 %3573, 1
  %_605 = sub i64 0, %3573
  %gen606 = add i64 %_605, 1
  %_607 = sub i64 0, %3573
  %gen608 = add i64 %_607, 1
  %_609 = sub i64 %3573, 1
  %gen610 = mul i64 %_609, 1
  %_611 = sub i64 0, %3573
  %gen612 = add i64 %_611, 1
  %3574 = add i64 %3573, 1, !dbg !2605
  store i64 %3574, i64* %21, align 8, !dbg !2605
  br label %originalBB598

originalBB616alteredBB:                           ; preds = %originalBB616, %2949
  store i8 0, i8* %28, align 1, !dbg !2600
  br label %originalBB616

originalBB620alteredBB:                           ; preds = %originalBB620, %2977
  %3575 = load i64, i64* %21, align 8, !dbg !2614
  %_621 = sub i64 %3575, 1
  %gen622 = mul i64 %_621, 1
  %_623 = sub i64 0, %3575
  %gen624 = add i64 %_623, 1
  %_625 = shl i64 %3575, 1
  %_626 = sub i64 %3575, 1
  %gen627 = mul i64 %_626, 1
  %_628 = sub i64 %3575, 1
  %gen629 = mul i64 %_628, 1
  %_630 = shl i64 %3575, 1
  %3576 = add i64 %3575, 1, !dbg !2614
  store i64 %3576, i64* %21, align 8, !dbg !2614
  br label %originalBB620

originalBB634alteredBB:                           ; preds = %originalBB634, %2999
  store i8 0, i8* %30, align 1, !dbg !2618
  br label %originalBB634

originalBB638alteredBB:                           ; preds = %originalBB638, %3016
  br label %originalBB638

originalBB642alteredBB:                           ; preds = %originalBB642, %3036
  %3577 = load i64, i64* %21, align 8, !dbg !2625
  %3578 = icmp eq i64 %3577, 0, !dbg !2627
  br label %originalBB642

originalBB646alteredBB:                           ; preds = %originalBB646, %3062
  %3579 = load i32, i32* %15, align 4, !dbg !2635
  %3580 = icmp eq i32 %3579, 2, !dbg !2637
  br label %originalBB646

originalBB650alteredBB:                           ; preds = %originalBB650, %3081
  %3581 = load i8, i8* %27, align 1, !dbg !2639
  %3582 = trunc i8 %3581 to i1, !dbg !2639
  br label %originalBB650

originalBB654alteredBB:                           ; preds = %originalBB654, %3103
  %3583 = load i8, i8* %30, align 1, !dbg !2643
  %3584 = trunc i8 %3583 to i1, !dbg !2643
  br label %originalBB654

originalBB658alteredBB:                           ; preds = %originalBB658, %3122
  %3585 = load i8*, i8** %11, align 8, !dbg !2647
  %3586 = load i64, i64* %22, align 8, !dbg !2648
  %3587 = load i8*, i8** %13, align 8, !dbg !2649
  %3588 = load i64, i64* %14, align 8, !dbg !2650
  %3589 = load i32, i32* %16, align 4, !dbg !2651
  %3590 = load i32*, i32** %17, align 8, !dbg !2652
  %3591 = load i8*, i8** %18, align 8, !dbg !2653
  %3592 = load i8*, i8** %19, align 8, !dbg !2654
  %3593 = call i64 @quotearg_buffer_restyled(i8* %3585, i64 %3586, i8* %3587, i64 %3588, i32 5, i32 %3589, i32* %3590, i8* %3591, i8* %3592), !dbg !2655
  store i64 %3593, i64* %10, align 8, !dbg !2656
  br label %originalBB658

originalBB662alteredBB:                           ; preds = %originalBB662, %3151
  %3594 = load i64, i64* %22, align 8, !dbg !2660
  %3595 = icmp ne i64 %3594, 0, !dbg !2660
  br label %originalBB662

originalBB666alteredBB:                           ; preds = %originalBB666, %3177
  %3596 = load i8, i8* %27, align 1, !dbg !2671
  %3597 = trunc i8 %3596 to i1, !dbg !2671
  br label %originalBB666

originalBB670alteredBB:                           ; preds = %originalBB670, %3219
  br label %originalBB670

originalBB674alteredBB:                           ; preds = %originalBB674, %3236
  %3598 = load i64, i64* %21, align 8, !dbg !2688
  %3599 = load i64, i64* %12, align 8, !dbg !2690
  %3600 = icmp ult i64 %3598, %3599, !dbg !2691
  br label %originalBB674

originalBB678alteredBB:                           ; preds = %originalBB678, %3262
  %3601 = load i32, i32* %15, align 4, !dbg !2700
  %3602 = icmp eq i32 %3601, 2, !dbg !2702
  br label %originalBB678

originalBB682alteredBB:                           ; preds = %originalBB682, %3281
  %3603 = load i8, i8* %25, align 1, !dbg !2704
  %3604 = trunc i8 %3603 to i1, !dbg !2704
  br label %originalBB682

originalBB686alteredBB:                           ; preds = %originalBB686, %3300
  store i32 4, i32* %15, align 4, !dbg !2706
  br label %originalBB686

originalBB690alteredBB:                           ; preds = %originalBB690, %3317
  %3605 = load i8*, i8** %11, align 8, !dbg !2708
  %3606 = load i64, i64* %12, align 8, !dbg !2709
  %3607 = load i8*, i8** %13, align 8, !dbg !2710
  %3608 = load i64, i64* %14, align 8, !dbg !2711
  %3609 = load i32, i32* %15, align 4, !dbg !2712
  %3610 = load i32, i32* %16, align 4, !dbg !2713
  %_691 = shl i32 %3610, -3
  %_692 = sub i32 %3610, -3
  %gen693 = mul i32 %_692, -3
  %_694 = sub i32 %3610, -3
  %gen695 = mul i32 %_694, -3
  %3611 = and i32 %3610, -3, !dbg !2714
  %3612 = load i8*, i8** %18, align 8, !dbg !2715
  %3613 = load i8*, i8** %19, align 8, !dbg !2716
  %3614 = call i64 @quotearg_buffer_restyled(i8* %3605, i64 %3606, i8* %3607, i64 %3608, i32 %3609, i32 %3611, i32* null, i8* %3612, i8* %3613), !dbg !2717
  store i64 %3614, i64* %10, align 8, !dbg !2718
  br label %originalBB690

originalBB699alteredBB:                           ; preds = %originalBB699, %3344
  %3615 = load i64, i64* %10, align 8, !dbg !2719
  br label %originalBB699
}

; Function Attrs: nounwind
declare dso_local i64 @__ctype_get_mb_cur_max() #2

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @gettext_quote(i8*, i32) #4 !dbg !2720 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !2723, metadata !DIExpression()), !dbg !2724
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !2725, metadata !DIExpression()), !dbg !2726
  call void @llvm.dbg.declare(metadata i8** %6, metadata !2727, metadata !DIExpression()), !dbg !2728
  %8 = load i8*, i8** %4, align 8, !dbg !2729
  %9 = call i8* @gettext(i8* %8) #10, !dbg !2729
  store i8* %9, i8** %6, align 8, !dbg !2728
  call void @llvm.dbg.declare(metadata i8** %7, metadata !2730, metadata !DIExpression()), !dbg !2731
  %10 = load i8*, i8** %6, align 8, !dbg !2732
  %11 = load i8*, i8** %4, align 8, !dbg !2734
  %12 = icmp ne i8* %10, %11, !dbg !2735
  br i1 %12, label %13, label %15, !dbg !2736

13:                                               ; preds = %2
  %14 = load i8*, i8** %6, align 8, !dbg !2737
  store i8* %14, i8** %3, align 8, !dbg !2738
  br label %218, !dbg !2738

15:                                               ; preds = %2
  %16 = load i32, i32* @x.39
  %17 = load i32, i32* @y.40
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %15, %originalBBalteredBB
  %24 = call i8* @locale_charset(), !dbg !2739
  store i8* %24, i8** %7, align 8, !dbg !2740
  %25 = load i8*, i8** %7, align 8, !dbg !2741
  %26 = call i32 @c_strcasecmp(i8* %25, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.88, i64 0, i64 0)) #13, !dbg !2741
  %27 = load i32, i32* @x.39
  %28 = load i32, i32* @y.40
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %35, !dbg !2741

35:                                               ; preds = %originalBBpart2
  %36 = load i32, i32* @x.39
  %37 = load i32, i32* @y.40
  %38 = sub i32 %36, 1
  %39 = mul i32 %36, %38
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %37, 10
  %43 = or i1 %41, %42
  br i1 %43, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %35, %originalBB1alteredBB
  %collatzVar1 = alloca i32
  %44 = load i32, i32* @x.39
  %45 = load i32, i32* @y.40
  %46 = sub i32 %44, 1
  %47 = mul i32 %44, %46
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %45, 10
  %51 = or i1 %49, %50
  br i1 %51, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %52

52:                                               ; preds = %originalBBpart24
  %53 = load i32, i32* @inVal0
  %54 = icmp sgt i32 %53, 1
  br i1 %54, label %56, label %55

55:                                               ; preds = %52
  store i32 48, i32* %collatzVar1
  br label %56

56:                                               ; preds = %55, %52
  %57 = load i8**, i8*** @inVal1
  %58 = getelementptr inbounds i8*, i8** %57, i64 1
  %59 = load i8*, i8** %58
  %controle2 = call i32 @controle(i8* %59, i32 0)
  store i32 %controle2, i32* %collatzVar1
  br label %60

60:                                               ; preds = %94, %90, %56
  %61 = load i32, i32* %collatzVar1
  %62 = icmp sgt i32 %61, 1
  br i1 %62, label %63, label %106

63:                                               ; preds = %60
  %64 = load i32, i32* @x.39
  %65 = load i32, i32* @y.40
  %66 = sub i32 %64, 1
  %67 = mul i32 %64, %66
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %65, 10
  %71 = or i1 %69, %70
  br i1 %71, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %63, %originalBB6alteredBB
  %72 = load i32, i32* %collatzVar1
  %73 = srem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = load i32, i32* @x.39
  %76 = load i32, i32* @y.40
  %77 = sub i32 %75, 1
  %78 = mul i32 %75, %77
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %76, 10
  %82 = or i1 %80, %81
  br i1 %82, label %originalBBpart212, label %originalBB6alteredBB

originalBBpart212:                                ; preds = %originalBB6
  br i1 %74, label %83, label %86

83:                                               ; preds = %originalBBpart212
  %84 = load i32, i32* %collatzVar1
  %85 = sdiv i32 %84, 2
  store i32 %85, i32* %collatzVar1
  br label %90

86:                                               ; preds = %originalBBpart212
  %87 = load i32, i32* %collatzVar1
  %88 = mul i32 %87, 3
  %89 = add i32 %88, 1
  store i32 %89, i32* %collatzVar1
  br label %90

90:                                               ; preds = %86, %83
  %91 = load i32, i32* %collatzVar1
  %92 = sub i32 %26, %91
  %93 = icmp sgt i32 %92, -2
  br i1 %93, label %94, label %60

94:                                               ; preds = %90
  %95 = load i32, i32* %collatzVar1
  %96 = add i32 %26, %95
  %97 = icmp slt i32 %96, 2
  br i1 %97, label %98, label %60

98:                                               ; preds = %94
  %99 = load i8*, i8** %4, align 8, !dbg !2743
  %100 = getelementptr inbounds i8, i8* %99, i64 0, !dbg !2743
  %101 = load i8, i8* %100, align 1, !dbg !2743
  %102 = sext i8 %101 to i32, !dbg !2743
  %103 = icmp eq i32 %102, 96, !dbg !2744
  %104 = zext i1 %103 to i64, !dbg !2743
  %105 = select i1 %103, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14.89, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.15.90, i64 0, i64 0), !dbg !2743
  store i8* %105, i8** %3, align 8, !dbg !2745
  br label %218, !dbg !2745

106:                                              ; preds = %60
  %107 = load i32, i32* @x.39
  %108 = load i32, i32* @y.40
  %109 = sub i32 %107, 1
  %110 = mul i32 %107, %109
  %111 = urem i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = icmp slt i32 %108, 10
  %114 = or i1 %112, %113
  br i1 %114, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %106, %originalBB14alteredBB
  %115 = load i8*, i8** %7, align 8, !dbg !2746
  %116 = call i32 @c_strcasecmp(i8* %115, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.16.91, i64 0, i64 0)) #13, !dbg !2746
  %117 = load i32, i32* @x.39
  %118 = load i32, i32* @y.40
  %119 = sub i32 %117, 1
  %120 = mul i32 %117, %119
  %121 = urem i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = icmp slt i32 %118, 10
  %124 = or i1 %122, %123
  br i1 %124, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %125, !dbg !2746

125:                                              ; preds = %originalBBpart216
  %collatzVar = alloca i32
  br label %126

126:                                              ; preds = %125
  %127 = load i32, i32* @x.39
  %128 = load i32, i32* @y.40
  %129 = sub i32 %127, 1
  %130 = mul i32 %127, %129
  %131 = urem i32 %130, 2
  %132 = icmp eq i32 %131, 0
  %133 = icmp slt i32 %128, 10
  %134 = or i1 %132, %133
  br i1 %134, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %126, %originalBB18alteredBB
  %135 = load i32, i32* @inVal0
  %136 = icmp sgt i32 %135, 1
  %137 = load i32, i32* @x.39
  %138 = load i32, i32* @y.40
  %139 = sub i32 %137, 1
  %140 = mul i32 %137, %139
  %141 = urem i32 %140, 2
  %142 = icmp eq i32 %141, 0
  %143 = icmp slt i32 %138, 10
  %144 = or i1 %142, %143
  br i1 %144, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br i1 %136, label %146, label %145

145:                                              ; preds = %originalBBpart220
  store i32 46, i32* %collatzVar
  br label %146

146:                                              ; preds = %145, %originalBBpart220
  %147 = load i8**, i8*** @inVal1
  %148 = getelementptr inbounds i8*, i8** %147, i64 1
  %149 = load i8*, i8** %148
  %150 = add i32 0, -1
  %controle = call i32 @controle(i8* %149, i32 %150)
  store i32 %controle, i32* %collatzVar
  br label %151

151:                                              ; preds = %185, %181, %146
  %152 = load i32, i32* %collatzVar
  %153 = icmp sgt i32 %152, 1
  br i1 %153, label %154, label %197

154:                                              ; preds = %151
  %155 = load i32, i32* %collatzVar
  %156 = srem i32 %155, 2
  %157 = icmp eq i32 %156, 0
  br i1 %157, label %158, label %161

158:                                              ; preds = %154
  %159 = load i32, i32* %collatzVar
  %160 = sdiv i32 %159, 2
  store i32 %160, i32* %collatzVar
  br label %181

161:                                              ; preds = %154
  %162 = load i32, i32* @x.39
  %163 = load i32, i32* @y.40
  %164 = sub i32 %162, 1
  %165 = mul i32 %162, %164
  %166 = urem i32 %165, 2
  %167 = icmp eq i32 %166, 0
  %168 = icmp slt i32 %163, 10
  %169 = or i1 %167, %168
  br i1 %169, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %161, %originalBB22alteredBB
  %170 = load i32, i32* %collatzVar
  %171 = mul i32 %170, 3
  %172 = add i32 %171, 1
  store i32 %172, i32* %collatzVar
  %173 = load i32, i32* @x.39
  %174 = load i32, i32* @y.40
  %175 = sub i32 %173, 1
  %176 = mul i32 %173, %175
  %177 = urem i32 %176, 2
  %178 = icmp eq i32 %177, 0
  %179 = icmp slt i32 %174, 10
  %180 = or i1 %178, %179
  br i1 %180, label %originalBBpart234, label %originalBB22alteredBB

originalBBpart234:                                ; preds = %originalBB22
  br label %181

181:                                              ; preds = %originalBBpart234, %158
  %182 = load i32, i32* %collatzVar
  %183 = sub i32 %116, %182
  %184 = icmp sgt i32 %183, -2
  br i1 %184, label %185, label %151

185:                                              ; preds = %181
  %186 = load i32, i32* %collatzVar
  %187 = add i32 %116, %186
  %188 = icmp slt i32 %187, 2
  br i1 %188, label %189, label %151

189:                                              ; preds = %185
  %190 = load i8*, i8** %4, align 8, !dbg !2748
  %191 = getelementptr inbounds i8, i8* %190, i64 0, !dbg !2748
  %192 = load i8, i8* %191, align 1, !dbg !2748
  %193 = sext i8 %192 to i32, !dbg !2748
  %194 = icmp eq i32 %193, 96, !dbg !2749
  %195 = zext i1 %194 to i64, !dbg !2748
  %196 = select i1 %194, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.17.92, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18.93, i64 0, i64 0), !dbg !2748
  store i8* %196, i8** %3, align 8, !dbg !2750
  br label %218, !dbg !2750

197:                                              ; preds = %151
  %198 = load i32, i32* @x.39
  %199 = load i32, i32* @y.40
  %200 = sub i32 %198, 1
  %201 = mul i32 %198, %200
  %202 = urem i32 %201, 2
  %203 = icmp eq i32 %202, 0
  %204 = icmp slt i32 %199, 10
  %205 = or i1 %203, %204
  br i1 %205, label %originalBB36, label %originalBB36alteredBB

originalBB36:                                     ; preds = %197, %originalBB36alteredBB
  %206 = load i32, i32* %5, align 4, !dbg !2751
  %207 = icmp eq i32 %206, 9, !dbg !2752
  %208 = zext i1 %207 to i64, !dbg !2751
  %209 = select i1 %207, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.85, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.87, i64 0, i64 0), !dbg !2751
  store i8* %209, i8** %3, align 8, !dbg !2753
  %210 = load i32, i32* @x.39
  %211 = load i32, i32* @y.40
  %212 = sub i32 %210, 1
  %213 = mul i32 %210, %212
  %214 = urem i32 %213, 2
  %215 = icmp eq i32 %214, 0
  %216 = icmp slt i32 %211, 10
  %217 = or i1 %215, %216
  br i1 %217, label %originalBBpart238, label %originalBB36alteredBB

originalBBpart238:                                ; preds = %originalBB36
  br label %218, !dbg !2753

218:                                              ; preds = %originalBBpart238, %189, %98, %13
  %219 = load i8*, i8** %3, align 8, !dbg !2754
  ret i8* %219, !dbg !2754

originalBBalteredBB:                              ; preds = %originalBB, %15
  %220 = call i8* @locale_charset(), !dbg !2739
  store i8* %220, i8** %7, align 8, !dbg !2740
  %221 = load i8*, i8** %7, align 8, !dbg !2741
  %222 = call i32 @c_strcasecmp(i8* %221, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.88, i64 0, i64 0)) #13, !dbg !2741
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %35
  %collatzVar1alteredBB = alloca i32
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %63
  %223 = load i32, i32* %collatzVar1
  %_ = sub i32 %223, 2
  %gen = mul i32 %_, 2
  %_7 = sub i32 %223, 2
  %gen8 = mul i32 %_7, 2
  %_9 = shl i32 %223, 2
  %_10 = shl i32 %223, 2
  %224 = srem i32 %223, 2
  %225 = icmp eq i32 %224, 0
  br label %originalBB6

originalBB14alteredBB:                            ; preds = %originalBB14, %106
  %226 = load i8*, i8** %7, align 8, !dbg !2746
  %227 = call i32 @c_strcasecmp(i8* %226, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.16.91, i64 0, i64 0)) #13, !dbg !2746
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %126
  %228 = load i32, i32* @inVal0
  %229 = icmp sgt i32 %228, 1
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %161
  %230 = load i32, i32* %collatzVar
  %_23 = sub i32 %230, 3
  %gen24 = mul i32 %_23, 3
  %_25 = sub i32 %230, 3
  %gen26 = mul i32 %_25, 3
  %_27 = sub i32 0, %230
  %gen28 = add i32 %_27, 3
  %231 = mul i32 %230, 3
  %_29 = sub i32 %231, 1
  %gen30 = mul i32 %_29, 1
  %_31 = shl i32 %231, 1
  %_32 = shl i32 %231, 1
  %232 = add i32 %231, 1
  store i32 %232, i32* %collatzVar
  br label %originalBB22

originalBB36alteredBB:                            ; preds = %originalBB36, %197
  %233 = load i32, i32* %5, align 4, !dbg !2751
  %234 = icmp eq i32 %233, 9, !dbg !2752
  %235 = zext i1 %234 to i64, !dbg !2751
  %236 = select i1 %234, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.85, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.87, i64 0, i64 0), !dbg !2751
  store i8* %236, i8** %3, align 8, !dbg !2753
  br label %originalBB36
}

; Function Attrs: nounwind readonly
declare dso_local i64 @strlen(i8*) #7

; Function Attrs: nounwind readonly
declare dso_local i32 @memcmp(i8*, i8*, i64) #7

; Function Attrs: nounwind readnone
declare dso_local i16** @__ctype_b_loc() #8

; Function Attrs: nounwind
declare dso_local i32 @iswprint(i32) #2

; Function Attrs: nounwind readonly
declare dso_local i32 @mbsinit(%struct.__mbstate_t*) #7

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quotearg_char(i8*, i8 signext) #4 !dbg !2755 {
  %3 = alloca i8*, align 8
  %4 = alloca i8, align 1
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !2758, metadata !DIExpression()), !dbg !2759
  store i8 %1, i8* %4, align 1
  call void @llvm.dbg.declare(metadata i8* %4, metadata !2760, metadata !DIExpression()), !dbg !2761
  %5 = load i8*, i8** %3, align 8, !dbg !2762
  %6 = load i8, i8* %4, align 1, !dbg !2763
  %7 = call i8* @quotearg_char_mem(i8* %5, i64 -1, i8 signext %6), !dbg !2764
  ret i8* %7, !dbg !2765
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quotearg_colon(i8*) #4 !dbg !2766 {
  %2 = load i32, i32* @x.43
  %3 = load i32, i32* @y.44
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i8*, align 8
  store i8* %0, i8** %10, align 8
  call void @llvm.dbg.declare(metadata i8** %10, metadata !2769, metadata !DIExpression()), !dbg !2770
  %11 = load i8*, i8** %10, align 8, !dbg !2771
  %12 = call i8* @quotearg_char(i8* %11, i8 signext 58), !dbg !2772
  %13 = load i32, i32* @x.43
  %14 = load i32, i32* @y.44
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i8* %12, !dbg !2773

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca i8*, align 8
  store i8* %0, i8** %21, align 8
  call void @llvm.dbg.declare(metadata i8** %21, metadata !2774, metadata !DIExpression()), !dbg !2770
  %22 = load i8*, i8** %21, align 8, !dbg !2771
  %23 = call i8* @quotearg_char(i8* %22, i8 signext 58), !dbg !2772
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quote_n_mem(i32, i8*, i64) #4 !dbg !2806 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !2809, metadata !DIExpression()), !dbg !2810
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !2811, metadata !DIExpression()), !dbg !2812
  store i64 %2, i64* %6, align 8
  call void @llvm.dbg.declare(metadata i64* %6, metadata !2813, metadata !DIExpression()), !dbg !2814
  %7 = load i32, i32* %4, align 4, !dbg !2815
  %8 = load i8*, i8** %5, align 8, !dbg !2816
  %9 = load i64, i64* %6, align 8, !dbg !2817
  %10 = call i8* @quotearg_n_options(i32 %7, i8* %8, i64 %9, %struct.quoting_options* @quote_quoting_options), !dbg !2818
  ret i8* %10, !dbg !2819
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quote_n(i32, i8*) #4 !dbg !2820 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !2823, metadata !DIExpression()), !dbg !2824
  store i8* %1, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !2825, metadata !DIExpression()), !dbg !2826
  %5 = load i32, i32* %3, align 4, !dbg !2827
  %6 = load i8*, i8** %4, align 8, !dbg !2828
  %7 = call i8* @quote_n_mem(i32 %5, i8* %6, i64 -1), !dbg !2829
  ret i8* %7, !dbg !2830
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quote(i8*) #4 !dbg !2831 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !2834, metadata !DIExpression()), !dbg !2835
  %3 = load i8*, i8** %2, align 8, !dbg !2836
  %4 = call i8* @quote_n(i32 0, i8* %3), !dbg !2837
  ret i8* %4, !dbg !2838
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @getcon(i8**) #4 !dbg !2839 {
  %2 = load i32, i32* @x.51
  %3 = load i32, i32* @y.52
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i8**, align 8
  store i8** %0, i8*** %10, align 8
  call void @llvm.dbg.declare(metadata i8*** %10, metadata !2845, metadata !DIExpression()), !dbg !2846
  %11 = call i32* @__errno_location() #15, !dbg !2847
  store i32 95, i32* %11, align 4, !dbg !2848
  %12 = load i32, i32* @x.51
  %13 = load i32, i32* @y.52
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32 -1, !dbg !2849

originalBBalteredBB:                              ; preds = %originalBB, %1
  %20 = alloca i8**, align 8
  store i8** %0, i8*** %20, align 8
  call void @llvm.dbg.declare(metadata i8*** %20, metadata !2850, metadata !DIExpression()), !dbg !2846
  %21 = call i32* @__errno_location() #15, !dbg !2847
  store i32 95, i32* %21, align 4, !dbg !2848
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @parse_user_spec(i8*, i32*, i32*, i8**, i8**) #4 !dbg !2853 {
  %6 = alloca i8*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i32*, align 8
  %9 = alloca i8**, align 8
  %10 = alloca i8**, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i8*, align 8
  store i8* %0, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !2856, metadata !DIExpression()), !dbg !2857
  store i32* %1, i32** %7, align 8
  call void @llvm.dbg.declare(metadata i32** %7, metadata !2858, metadata !DIExpression()), !dbg !2859
  store i32* %2, i32** %8, align 8
  call void @llvm.dbg.declare(metadata i32** %8, metadata !2860, metadata !DIExpression()), !dbg !2861
  store i8** %3, i8*** %9, align 8
  call void @llvm.dbg.declare(metadata i8*** %9, metadata !2862, metadata !DIExpression()), !dbg !2863
  store i8** %4, i8*** %10, align 8
  call void @llvm.dbg.declare(metadata i8*** %10, metadata !2864, metadata !DIExpression()), !dbg !2865
  call void @llvm.dbg.declare(metadata i8** %11, metadata !2866, metadata !DIExpression()), !dbg !2867
  %14 = load i32*, i32** %8, align 8, !dbg !2868
  %15 = icmp ne i32* %14, null, !dbg !2868
  br i1 %15, label %16, label %35, !dbg !2868

16:                                               ; preds = %5
  %17 = load i32, i32* @x.53
  %18 = load i32, i32* @y.54
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %16, %originalBBalteredBB
  %25 = load i8*, i8** %6, align 8, !dbg !2869
  %26 = call i8* @strchr(i8* %25, i32 58) #13, !dbg !2870
  %27 = load i32, i32* @x.53
  %28 = load i32, i32* @y.54
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %36, !dbg !2868

35:                                               ; preds = %5
  br label %36, !dbg !2868

36:                                               ; preds = %35, %originalBBpart2
  %37 = phi i8* [ %26, %originalBBpart2 ], [ null, %35 ], !dbg !2868
  store i8* %37, i8** %11, align 8, !dbg !2867
  call void @llvm.dbg.declare(metadata i8** %12, metadata !2871, metadata !DIExpression()), !dbg !2872
  %38 = load i8*, i8** %6, align 8, !dbg !2873
  %39 = load i8*, i8** %11, align 8, !dbg !2874
  %40 = load i32*, i32** %7, align 8, !dbg !2875
  %41 = load i32*, i32** %8, align 8, !dbg !2876
  %42 = load i8**, i8*** %9, align 8, !dbg !2877
  %43 = load i8**, i8*** %10, align 8, !dbg !2878
  %44 = call i8* @parse_with_separator(i8* %38, i8* %39, i32* %40, i32* %41, i8** %42, i8** %43), !dbg !2879
  store i8* %44, i8** %12, align 8, !dbg !2872
  %45 = load i32*, i32** %8, align 8, !dbg !2880
  %46 = icmp ne i32* %45, null, !dbg !2880
  br i1 %46, label %47, label %117, !dbg !2882

47:                                               ; preds = %36
  %48 = load i32, i32* @x.53
  %49 = load i32, i32* @y.54
  %50 = sub i32 %48, 1
  %51 = mul i32 %48, %50
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %53, %54
  br i1 %55, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %47, %originalBB1alteredBB
  %56 = load i8*, i8** %11, align 8, !dbg !2883
  %57 = icmp ne i8* %56, null, !dbg !2883
  %58 = load i32, i32* @x.53
  %59 = load i32, i32* @y.54
  %60 = sub i32 %58, 1
  %61 = mul i32 %58, %60
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %59, 10
  %65 = or i1 %63, %64
  br i1 %65, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %57, label %117, label %66, !dbg !2884

66:                                               ; preds = %originalBBpart24
  %67 = load i8*, i8** %12, align 8, !dbg !2885
  %68 = icmp ne i8* %67, null, !dbg !2885
  br i1 %68, label %69, label %117, !dbg !2886

69:                                               ; preds = %66
  call void @llvm.dbg.declare(metadata i8** %13, metadata !2887, metadata !DIExpression()), !dbg !2889
  %70 = load i8*, i8** %6, align 8, !dbg !2890
  %71 = call i8* @strchr(i8* %70, i32 46) #13, !dbg !2891
  store i8* %71, i8** %13, align 8, !dbg !2889
  %72 = load i8*, i8** %13, align 8, !dbg !2892
  %73 = icmp ne i8* %72, null, !dbg !2892
  br i1 %73, label %74, label %100, !dbg !2894

74:                                               ; preds = %69
  %75 = load i8*, i8** %6, align 8, !dbg !2895
  %76 = load i8*, i8** %13, align 8, !dbg !2896
  %77 = load i32*, i32** %7, align 8, !dbg !2897
  %78 = load i32*, i32** %8, align 8, !dbg !2898
  %79 = load i8**, i8*** %9, align 8, !dbg !2899
  %80 = load i8**, i8*** %10, align 8, !dbg !2900
  %81 = call i8* @parse_with_separator(i8* %75, i8* %76, i32* %77, i32* %78, i8** %79, i8** %80), !dbg !2901
  %82 = icmp ne i8* %81, null, !dbg !2901
  br i1 %82, label %100, label %83, !dbg !2902

83:                                               ; preds = %74
  %84 = load i32, i32* @x.53
  %85 = load i32, i32* @y.54
  %86 = sub i32 %84, 1
  %87 = mul i32 %84, %86
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %85, 10
  %91 = or i1 %89, %90
  br i1 %91, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %83, %originalBB6alteredBB
  store i8* null, i8** %12, align 8, !dbg !2903
  %92 = load i32, i32* @x.53
  %93 = load i32, i32* @y.54
  %94 = sub i32 %92, 1
  %95 = mul i32 %92, %94
  %96 = urem i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %93, 10
  %99 = or i1 %97, %98
  br i1 %99, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %100, !dbg !2904

100:                                              ; preds = %originalBBpart28, %74, %69
  %101 = load i32, i32* @x.53
  %102 = load i32, i32* @y.54
  %103 = sub i32 %101, 1
  %104 = mul i32 %101, %103
  %105 = urem i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %102, 10
  %108 = or i1 %106, %107
  br i1 %108, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %100, %originalBB10alteredBB
  %109 = load i32, i32* @x.53
  %110 = load i32, i32* @y.54
  %111 = sub i32 %109, 1
  %112 = mul i32 %109, %111
  %113 = urem i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = icmp slt i32 %110, 10
  %116 = or i1 %114, %115
  br i1 %116, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %117, !dbg !2905

117:                                              ; preds = %originalBBpart212, %66, %originalBBpart24, %36
  %118 = load i8*, i8** %12, align 8, !dbg !2906
  ret i8* %118, !dbg !2907

originalBBalteredBB:                              ; preds = %originalBB, %16
  %119 = load i8*, i8** %6, align 8, !dbg !2869
  %120 = call i8* @strchr(i8* %119, i32 58) #13, !dbg !2870
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %47
  %121 = load i8*, i8** %11, align 8, !dbg !2883
  %122 = icmp ne i8* %121, null, !dbg !2883
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %83
  store i8* null, i8** %12, align 8, !dbg !2903
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %100
  br label %originalBB10
}

; Function Attrs: nounwind readonly
declare dso_local i8* @strchr(i8*, i32) #7

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @parse_with_separator(i8*, i8*, i32*, i32*, i8**, i8**) #4 !dbg !178 {
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i32*, align 8
  %10 = alloca i32*, align 8
  %11 = alloca i8**, align 8
  %12 = alloca i8**, align 8
  %13 = alloca i8*, align 8
  %14 = alloca %struct.passwd*, align 8
  %15 = alloca %struct.group*, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i8*, align 8
  %18 = alloca i8*, align 8
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i64, align 8
  %22 = alloca i8, align 1
  %23 = alloca i64, align 8
  %24 = alloca [21 x i8], align 16
  %25 = alloca i64, align 8
  store i8* %0, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !2908, metadata !DIExpression()), !dbg !2909
  store i8* %1, i8** %8, align 8
  call void @llvm.dbg.declare(metadata i8** %8, metadata !2910, metadata !DIExpression()), !dbg !2911
  store i32* %2, i32** %9, align 8
  call void @llvm.dbg.declare(metadata i32** %9, metadata !2912, metadata !DIExpression()), !dbg !2913
  store i32* %3, i32** %10, align 8
  call void @llvm.dbg.declare(metadata i32** %10, metadata !2914, metadata !DIExpression()), !dbg !2915
  store i8** %4, i8*** %11, align 8
  call void @llvm.dbg.declare(metadata i8*** %11, metadata !2916, metadata !DIExpression()), !dbg !2917
  store i8** %5, i8*** %12, align 8
  call void @llvm.dbg.declare(metadata i8*** %12, metadata !2918, metadata !DIExpression()), !dbg !2919
  call void @llvm.dbg.declare(metadata i8** %13, metadata !2920, metadata !DIExpression()), !dbg !2921
  call void @llvm.dbg.declare(metadata %struct.passwd** %14, metadata !2922, metadata !DIExpression()), !dbg !2933
  call void @llvm.dbg.declare(metadata %struct.group** %15, metadata !2934, metadata !DIExpression()), !dbg !2942
  call void @llvm.dbg.declare(metadata i8** %16, metadata !2943, metadata !DIExpression()), !dbg !2944
  call void @llvm.dbg.declare(metadata i8** %17, metadata !2945, metadata !DIExpression()), !dbg !2946
  call void @llvm.dbg.declare(metadata i8** %18, metadata !2947, metadata !DIExpression()), !dbg !2948
  store i8* null, i8** %18, align 8, !dbg !2948
  call void @llvm.dbg.declare(metadata i32* %19, metadata !2949, metadata !DIExpression()), !dbg !2950
  %26 = load i32*, i32** %9, align 8, !dbg !2951
  %27 = load i32, i32* %26, align 4, !dbg !2952
  store i32 %27, i32* %19, align 4, !dbg !2950
  call void @llvm.dbg.declare(metadata i32* %20, metadata !2953, metadata !DIExpression()), !dbg !2954
  %28 = load i32*, i32** %10, align 8, !dbg !2955
  %29 = icmp ne i32* %28, null, !dbg !2955
  br i1 %29, label %30, label %33, !dbg !2955

30:                                               ; preds = %6
  %31 = load i32*, i32** %10, align 8, !dbg !2956
  %32 = load i32, i32* %31, align 4, !dbg !2957
  br label %34, !dbg !2955

33:                                               ; preds = %6
  br label %34, !dbg !2955

34:                                               ; preds = %33, %30
  %35 = phi i32 [ %32, %30 ], [ -1, %33 ], !dbg !2955
  store i32 %35, i32* %20, align 4, !dbg !2954
  store i8* null, i8** %13, align 8, !dbg !2958
  %36 = load i8**, i8*** %11, align 8, !dbg !2959
  %37 = icmp ne i8** %36, null, !dbg !2959
  br i1 %37, label %38, label %56, !dbg !2961

38:                                               ; preds = %34
  %39 = load i32, i32* @x.55
  %40 = load i32, i32* @y.56
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %38, %originalBBalteredBB
  %47 = load i8**, i8*** %11, align 8, !dbg !2962
  store i8* null, i8** %47, align 8, !dbg !2963
  %48 = load i32, i32* @x.55
  %49 = load i32, i32* @y.56
  %50 = sub i32 %48, 1
  %51 = mul i32 %48, %50
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %53, %54
  br i1 %55, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %56, !dbg !2964

56:                                               ; preds = %originalBBpart2, %34
  %57 = load i8**, i8*** %12, align 8, !dbg !2965
  %58 = icmp ne i8** %57, null, !dbg !2965
  br i1 %58, label %59, label %61, !dbg !2967

59:                                               ; preds = %56
  %60 = load i8**, i8*** %12, align 8, !dbg !2968
  store i8* null, i8** %60, align 8, !dbg !2969
  br label %61, !dbg !2970

61:                                               ; preds = %59, %56
  store i8* null, i8** %16, align 8, !dbg !2971
  %62 = load i8*, i8** %8, align 8, !dbg !2972
  %63 = icmp eq i8* %62, null, !dbg !2974
  br i1 %63, label %64, label %104, !dbg !2975

64:                                               ; preds = %61
  %65 = load i8*, i8** %7, align 8, !dbg !2976
  %66 = load i8, i8* %65, align 1, !dbg !2979
  %67 = icmp ne i8 %66, 0, !dbg !2979
  br i1 %67, label %68, label %87, !dbg !2980

68:                                               ; preds = %64
  %69 = load i32, i32* @x.55
  %70 = load i32, i32* @y.56
  %71 = sub i32 %69, 1
  %72 = mul i32 %69, %71
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %74, %75
  br i1 %76, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %68, %originalBB1alteredBB
  %77 = load i8*, i8** %7, align 8, !dbg !2981
  %78 = call noalias i8* @xstrdup(i8* %77), !dbg !2982
  store i8* %78, i8** %16, align 8, !dbg !2983
  %79 = load i32, i32* @x.55
  %80 = load i32, i32* @y.56
  %81 = sub i32 %79, 1
  %82 = mul i32 %79, %81
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %80, 10
  %86 = or i1 %84, %85
  br i1 %86, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %87, !dbg !2984

87:                                               ; preds = %originalBBpart24, %64
  %88 = load i32, i32* @x.55
  %89 = load i32, i32* @y.56
  %90 = sub i32 %88, 1
  %91 = mul i32 %88, %90
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %89, 10
  %95 = or i1 %93, %94
  br i1 %95, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %87, %originalBB6alteredBB
  %96 = load i32, i32* @x.55
  %97 = load i32, i32* @y.56
  %98 = sub i32 %96, 1
  %99 = mul i32 %96, %98
  %100 = urem i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = icmp slt i32 %97, 10
  %103 = or i1 %101, %102
  br i1 %103, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %121, !dbg !2985

104:                                              ; preds = %61
  call void @llvm.dbg.declare(metadata i64* %21, metadata !2986, metadata !DIExpression()), !dbg !2988
  %105 = load i8*, i8** %8, align 8, !dbg !2989
  %106 = load i8*, i8** %7, align 8, !dbg !2990
  %107 = ptrtoint i8* %105 to i64, !dbg !2991
  %108 = ptrtoint i8* %106 to i64, !dbg !2991
  %109 = sub i64 %107, %108, !dbg !2991
  store i64 %109, i64* %21, align 8, !dbg !2988
  %110 = load i64, i64* %21, align 8, !dbg !2992
  %111 = icmp ne i64 %110, 0, !dbg !2994
  br i1 %111, label %112, label %120, !dbg !2995

112:                                              ; preds = %104
  %113 = load i8*, i8** %7, align 8, !dbg !2996
  %114 = load i64, i64* %21, align 8, !dbg !2998
  %115 = add i64 %114, 1, !dbg !2999
  %116 = call i8* @xmemdup(i8* %113, i64 %115), !dbg !3000
  store i8* %116, i8** %16, align 8, !dbg !3001
  %117 = load i8*, i8** %16, align 8, !dbg !3002
  %118 = load i64, i64* %21, align 8, !dbg !3003
  %119 = getelementptr inbounds i8, i8* %117, i64 %118, !dbg !3002
  store i8 0, i8* %119, align 1, !dbg !3004
  br label %120, !dbg !3005

120:                                              ; preds = %112, %104
  br label %121

121:                                              ; preds = %120, %originalBBpart28
  %122 = load i32, i32* @x.55
  %123 = load i32, i32* @y.56
  %124 = sub i32 %122, 1
  %125 = mul i32 %122, %124
  %126 = urem i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = icmp slt i32 %123, 10
  %129 = or i1 %127, %128
  br i1 %129, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %121, %originalBB10alteredBB
  %130 = load i8*, i8** %8, align 8, !dbg !3006
  %131 = icmp eq i8* %130, null, !dbg !3007
  %132 = load i32, i32* @x.55
  %133 = load i32, i32* @y.56
  %134 = sub i32 %132, 1
  %135 = mul i32 %132, %134
  %136 = urem i32 %135, 2
  %137 = icmp eq i32 %136, 0
  %138 = icmp slt i32 %133, 10
  %139 = or i1 %137, %138
  br i1 %139, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %131, label %146, label %140, !dbg !3008

140:                                              ; preds = %originalBBpart212
  %141 = load i8*, i8** %8, align 8, !dbg !3009
  %142 = getelementptr inbounds i8, i8* %141, i64 1, !dbg !3010
  %143 = load i8, i8* %142, align 1, !dbg !3011
  %144 = sext i8 %143 to i32, !dbg !3011
  %145 = icmp eq i32 %144, 0, !dbg !3012
  br i1 %145, label %146, label %163, !dbg !3006

146:                                              ; preds = %140, %originalBBpart212
  %147 = load i32, i32* @x.55
  %148 = load i32, i32* @y.56
  %149 = sub i32 %147, 1
  %150 = mul i32 %147, %149
  %151 = urem i32 %150, 2
  %152 = icmp eq i32 %151, 0
  %153 = icmp slt i32 %148, 10
  %154 = or i1 %152, %153
  br i1 %154, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %146, %originalBB14alteredBB
  %155 = load i32, i32* @x.55
  %156 = load i32, i32* @y.56
  %157 = sub i32 %155, 1
  %158 = mul i32 %155, %157
  %159 = urem i32 %158, 2
  %160 = icmp eq i32 %159, 0
  %161 = icmp slt i32 %156, 10
  %162 = or i1 %160, %161
  br i1 %162, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %182, !dbg !3006

163:                                              ; preds = %140
  %164 = load i32, i32* @x.55
  %165 = load i32, i32* @y.56
  %166 = sub i32 %164, 1
  %167 = mul i32 %164, %166
  %168 = urem i32 %167, 2
  %169 = icmp eq i32 %168, 0
  %170 = icmp slt i32 %165, 10
  %171 = or i1 %169, %170
  br i1 %171, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %163, %originalBB18alteredBB
  %172 = load i8*, i8** %8, align 8, !dbg !3013
  %173 = getelementptr inbounds i8, i8* %172, i64 1, !dbg !3014
  %174 = load i32, i32* @x.55
  %175 = load i32, i32* @y.56
  %176 = sub i32 %174, 1
  %177 = mul i32 %174, %176
  %178 = urem i32 %177, 2
  %179 = icmp eq i32 %178, 0
  %180 = icmp slt i32 %175, 10
  %181 = or i1 %179, %180
  br i1 %181, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %182, !dbg !3006

182:                                              ; preds = %originalBBpart220, %originalBBpart216
  %183 = phi i8* [ null, %originalBBpart216 ], [ %173, %originalBBpart220 ], !dbg !3006
  store i8* %183, i8** %17, align 8, !dbg !3015
  %184 = load i8*, i8** %16, align 8, !dbg !3016
  %185 = icmp ne i8* %184, null, !dbg !3018
  br i1 %185, label %186, label %499, !dbg !3019

186:                                              ; preds = %182
  %187 = load i32, i32* @x.55
  %188 = load i32, i32* @y.56
  %189 = sub i32 %187, 1
  %190 = mul i32 %187, %189
  %191 = urem i32 %190, 2
  %192 = icmp eq i32 %191, 0
  %193 = icmp slt i32 %188, 10
  %194 = or i1 %192, %193
  br i1 %194, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %186, %originalBB22alteredBB
  %195 = load i8*, i8** %16, align 8, !dbg !3020
  %196 = load i8, i8* %195, align 1, !dbg !3022
  %197 = sext i8 %196 to i32, !dbg !3022
  %198 = load i32, i32* @x.55
  %199 = load i32, i32* @y.56
  %200 = sub i32 %198, 1
  %201 = mul i32 %198, %200
  %202 = urem i32 %201, 2
  %203 = icmp eq i32 %202, 0
  %204 = icmp slt i32 %199, 10
  %205 = or i1 %203, %204
  br i1 %205, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br label %206, !dbg !3023

206:                                              ; preds = %originalBBpart224
  %207 = load i32, i32* @x.55
  %208 = load i32, i32* @y.56
  %209 = sub i32 %207, 1
  %210 = mul i32 %207, %209
  %211 = urem i32 %210, 2
  %212 = icmp eq i32 %211, 0
  %213 = icmp slt i32 %208, 10
  %214 = or i1 %212, %213
  br i1 %214, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %206, %originalBB26alteredBB
  %collatzVar = alloca i32
  %215 = load i32, i32* @x.55
  %216 = load i32, i32* @y.56
  %217 = sub i32 %215, 1
  %218 = mul i32 %215, %217
  %219 = urem i32 %218, 2
  %220 = icmp eq i32 %219, 0
  %221 = icmp slt i32 %216, 10
  %222 = or i1 %220, %221
  br i1 %222, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br label %223

223:                                              ; preds = %originalBBpart228
  %224 = load i32, i32* @x.55
  %225 = load i32, i32* @y.56
  %226 = sub i32 %224, 1
  %227 = mul i32 %224, %226
  %228 = urem i32 %227, 2
  %229 = icmp eq i32 %228, 0
  %230 = icmp slt i32 %225, 10
  %231 = or i1 %229, %230
  br i1 %231, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %223, %originalBB30alteredBB
  %232 = load i32, i32* @inVal0
  %233 = icmp sgt i32 %232, 1
  %234 = load i32, i32* @x.55
  %235 = load i32, i32* @y.56
  %236 = sub i32 %234, 1
  %237 = mul i32 %234, %236
  %238 = urem i32 %237, 2
  %239 = icmp eq i32 %238, 0
  %240 = icmp slt i32 %235, 10
  %241 = or i1 %239, %240
  br i1 %241, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br i1 %233, label %259, label %242

242:                                              ; preds = %originalBBpart232
  %243 = load i32, i32* @x.55
  %244 = load i32, i32* @y.56
  %245 = sub i32 %243, 1
  %246 = mul i32 %243, %245
  %247 = urem i32 %246, 2
  %248 = icmp eq i32 %247, 0
  %249 = icmp slt i32 %244, 10
  %250 = or i1 %248, %249
  br i1 %250, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %242, %originalBB34alteredBB
  store i32 82, i32* %collatzVar
  %251 = load i32, i32* @x.55
  %252 = load i32, i32* @y.56
  %253 = sub i32 %251, 1
  %254 = mul i32 %251, %253
  %255 = urem i32 %254, 2
  %256 = icmp eq i32 %255, 0
  %257 = icmp slt i32 %252, 10
  %258 = or i1 %256, %257
  br i1 %258, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  br label %259

259:                                              ; preds = %originalBBpart236, %originalBBpart232
  %260 = load i32, i32* @x.55
  %261 = load i32, i32* @y.56
  %262 = sub i32 %260, 1
  %263 = mul i32 %260, %262
  %264 = urem i32 %263, 2
  %265 = icmp eq i32 %264, 0
  %266 = icmp slt i32 %261, 10
  %267 = or i1 %265, %266
  br i1 %267, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %259, %originalBB38alteredBB
  %268 = load i8**, i8*** @inVal1
  %269 = getelementptr inbounds i8*, i8** %268, i64 1
  %270 = load i8*, i8** %269
  %controle = call i32 @controle(i8* %270, i32 43)
  store i32 %controle, i32* %collatzVar
  %271 = load i32, i32* @x.55
  %272 = load i32, i32* @y.56
  %273 = sub i32 %271, 1
  %274 = mul i32 %271, %273
  %275 = urem i32 %274, 2
  %276 = icmp eq i32 %275, 0
  %277 = icmp slt i32 %272, 10
  %278 = or i1 %276, %277
  br i1 %278, label %originalBBpart240, label %originalBB38alteredBB

originalBBpart240:                                ; preds = %originalBB38
  br label %279

279:                                              ; preds = %345, %originalBBpart273, %originalBBpart240
  %280 = load i32, i32* @x.55
  %281 = load i32, i32* @y.56
  %282 = sub i32 %280, 1
  %283 = mul i32 %280, %282
  %284 = urem i32 %283, 2
  %285 = icmp eq i32 %284, 0
  %286 = icmp slt i32 %281, 10
  %287 = or i1 %285, %286
  br i1 %287, label %originalBB42, label %originalBB42alteredBB

originalBB42:                                     ; preds = %279, %originalBB42alteredBB
  %288 = load i32, i32* %collatzVar
  %289 = icmp sgt i32 %288, 1
  %290 = load i32, i32* @x.55
  %291 = load i32, i32* @y.56
  %292 = sub i32 %290, 1
  %293 = mul i32 %290, %292
  %294 = urem i32 %293, 2
  %295 = icmp eq i32 %294, 0
  %296 = icmp slt i32 %291, 10
  %297 = or i1 %295, %296
  br i1 %297, label %originalBBpart244, label %originalBB42alteredBB

originalBBpart244:                                ; preds = %originalBB42
  br i1 %289, label %298, label %350

298:                                              ; preds = %originalBBpart244
  %299 = load i32, i32* %collatzVar
  %300 = srem i32 %299, 2
  %301 = icmp eq i32 %300, 0
  br i1 %301, label %302, label %305

302:                                              ; preds = %298
  %303 = load i32, i32* %collatzVar
  %304 = sdiv i32 %303, 2
  store i32 %304, i32* %collatzVar
  br label %325

305:                                              ; preds = %298
  %306 = load i32, i32* @x.55
  %307 = load i32, i32* @y.56
  %308 = sub i32 %306, 1
  %309 = mul i32 %306, %308
  %310 = urem i32 %309, 2
  %311 = icmp eq i32 %310, 0
  %312 = icmp slt i32 %307, 10
  %313 = or i1 %311, %312
  br i1 %313, label %originalBB46, label %originalBB46alteredBB

originalBB46:                                     ; preds = %305, %originalBB46alteredBB
  %314 = load i32, i32* %collatzVar
  %315 = mul i32 %314, 3
  %316 = add i32 %315, 1
  store i32 %316, i32* %collatzVar
  %317 = load i32, i32* @x.55
  %318 = load i32, i32* @y.56
  %319 = sub i32 %317, 1
  %320 = mul i32 %317, %319
  %321 = urem i32 %320, 2
  %322 = icmp eq i32 %321, 0
  %323 = icmp slt i32 %318, 10
  %324 = or i1 %322, %323
  br i1 %324, label %originalBBpart255, label %originalBB46alteredBB

originalBBpart255:                                ; preds = %originalBB46
  br label %325

325:                                              ; preds = %originalBBpart255, %302
  %326 = load i32, i32* @x.55
  %327 = load i32, i32* @y.56
  %328 = sub i32 %326, 1
  %329 = mul i32 %326, %328
  %330 = urem i32 %329, 2
  %331 = icmp eq i32 %330, 0
  %332 = icmp slt i32 %327, 10
  %333 = or i1 %331, %332
  br i1 %333, label %originalBB57, label %originalBB57alteredBB

originalBB57:                                     ; preds = %325, %originalBB57alteredBB
  %334 = load i32, i32* %collatzVar
  %335 = sub i32 %197, %334
  %336 = icmp sgt i32 %335, 41
  %337 = load i32, i32* @x.55
  %338 = load i32, i32* @y.56
  %339 = sub i32 %337, 1
  %340 = mul i32 %337, %339
  %341 = urem i32 %340, 2
  %342 = icmp eq i32 %341, 0
  %343 = icmp slt i32 %338, 10
  %344 = or i1 %342, %343
  br i1 %344, label %originalBBpart273, label %originalBB57alteredBB

originalBBpart273:                                ; preds = %originalBB57
  br i1 %336, label %345, label %279

345:                                              ; preds = %originalBBpart273
  %346 = load i32, i32* %collatzVar
  %347 = add i32 %197, %346
  %348 = icmp slt i32 %347, 45
  br i1 %348, label %349, label %279

349:                                              ; preds = %345
  br label %353, !dbg !3022

350:                                              ; preds = %originalBBpart244
  %351 = load i8*, i8** %16, align 8, !dbg !3024
  %352 = call %struct.passwd* @getpwnam(i8* %351), !dbg !3025
  br label %353, !dbg !3022

353:                                              ; preds = %350, %349
  %354 = phi %struct.passwd* [ null, %349 ], [ %352, %350 ], !dbg !3022
  store %struct.passwd* %354, %struct.passwd** %14, align 8, !dbg !3026
  %355 = load %struct.passwd*, %struct.passwd** %14, align 8, !dbg !3027
  %356 = icmp eq %struct.passwd* %355, null, !dbg !3029
  br i1 %356, label %357, label %420, !dbg !3030

357:                                              ; preds = %353
  call void @llvm.dbg.declare(metadata i8* %22, metadata !3031, metadata !DIExpression()), !dbg !3033
  %358 = load i8*, i8** %8, align 8, !dbg !3034
  %359 = icmp ne i8* %358, null, !dbg !3035
  br i1 %359, label %360, label %363, !dbg !3036

360:                                              ; preds = %357
  %361 = load i8*, i8** %17, align 8, !dbg !3037
  %362 = icmp eq i8* %361, null, !dbg !3038
  br label %363

363:                                              ; preds = %360, %357
  %364 = phi i1 [ false, %357 ], [ %362, %360 ], !dbg !3039
  %365 = zext i1 %364 to i8, !dbg !3033
  store i8 %365, i8* %22, align 1, !dbg !3033
  %366 = load i8, i8* %22, align 1, !dbg !3040
  %367 = trunc i8 %366 to i1, !dbg !3040
  br i1 %367, label %368, label %370, !dbg !3042

368:                                              ; preds = %363
  %369 = load i8*, i8** @parse_with_separator.E_bad_spec, align 8, !dbg !3043
  store i8* %369, i8** %13, align 8, !dbg !3045
  br label %403, !dbg !3046

370:                                              ; preds = %363
  call void @llvm.dbg.declare(metadata i64* %23, metadata !3047, metadata !DIExpression()), !dbg !3049
  %371 = load i32, i32* @x.55
  %372 = load i32, i32* @y.56
  %373 = sub i32 %371, 1
  %374 = mul i32 %371, %373
  %375 = urem i32 %374, 2
  %376 = icmp eq i32 %375, 0
  %377 = icmp slt i32 %372, 10
  %378 = or i1 %376, %377
  br i1 %378, label %originalBB75, label %originalBB75alteredBB

originalBB75:                                     ; preds = %370, %originalBB75alteredBB
  %379 = load i8*, i8** %16, align 8, !dbg !3050
  %380 = call i32 @xstrtoul(i8* %379, i8** null, i32 10, i64* %23, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3.102, i64 0, i64 0)), !dbg !3052
  %381 = icmp eq i32 %380, 0, !dbg !3053
  %382 = load i32, i32* @x.55
  %383 = load i32, i32* @y.56
  %384 = sub i32 %382, 1
  %385 = mul i32 %382, %384
  %386 = urem i32 %385, 2
  %387 = icmp eq i32 %386, 0
  %388 = icmp slt i32 %383, 10
  %389 = or i1 %387, %388
  br i1 %389, label %originalBBpart277, label %originalBB75alteredBB

originalBBpart277:                                ; preds = %originalBB75
  br i1 %381, label %390, label %400, !dbg !3054

390:                                              ; preds = %originalBBpart277
  %391 = load i64, i64* %23, align 8, !dbg !3055
  %392 = icmp ule i64 %391, 4294967295, !dbg !3056
  br i1 %392, label %393, label %400, !dbg !3057

393:                                              ; preds = %390
  %394 = load i64, i64* %23, align 8, !dbg !3058
  %395 = trunc i64 %394 to i32, !dbg !3059
  %396 = icmp ne i32 %395, -1, !dbg !3060
  br i1 %396, label %397, label %400, !dbg !3061

397:                                              ; preds = %393
  %398 = load i64, i64* %23, align 8, !dbg !3062
  %399 = trunc i64 %398 to i32, !dbg !3062
  store i32 %399, i32* %19, align 4, !dbg !3063
  br label %402, !dbg !3064

400:                                              ; preds = %393, %390, %originalBBpart277
  %401 = load i8*, i8** @parse_with_separator.E_invalid_user, align 8, !dbg !3065
  store i8* %401, i8** %13, align 8, !dbg !3066
  br label %402

402:                                              ; preds = %400, %397
  br label %403

403:                                              ; preds = %402, %368
  %404 = load i32, i32* @x.55
  %405 = load i32, i32* @y.56
  %406 = sub i32 %404, 1
  %407 = mul i32 %404, %406
  %408 = urem i32 %407, 2
  %409 = icmp eq i32 %408, 0
  %410 = icmp slt i32 %405, 10
  %411 = or i1 %409, %410
  br i1 %411, label %originalBB79, label %originalBB79alteredBB

originalBB79:                                     ; preds = %403, %originalBB79alteredBB
  %412 = load i32, i32* @x.55
  %413 = load i32, i32* @y.56
  %414 = sub i32 %412, 1
  %415 = mul i32 %412, %414
  %416 = urem i32 %415, 2
  %417 = icmp eq i32 %416, 0
  %418 = icmp slt i32 %413, 10
  %419 = or i1 %417, %418
  br i1 %419, label %originalBBpart281, label %originalBB79alteredBB

originalBBpart281:                                ; preds = %originalBB79
  br label %498, !dbg !3067

420:                                              ; preds = %353
  %421 = load i32, i32* @x.55
  %422 = load i32, i32* @y.56
  %423 = sub i32 %421, 1
  %424 = mul i32 %421, %423
  %425 = urem i32 %424, 2
  %426 = icmp eq i32 %425, 0
  %427 = icmp slt i32 %422, 10
  %428 = or i1 %426, %427
  br i1 %428, label %originalBB83, label %originalBB83alteredBB

originalBB83:                                     ; preds = %420, %originalBB83alteredBB
  %429 = load %struct.passwd*, %struct.passwd** %14, align 8, !dbg !3068
  %430 = getelementptr inbounds %struct.passwd, %struct.passwd* %429, i32 0, i32 2, !dbg !3070
  %431 = load i32, i32* %430, align 8, !dbg !3070
  store i32 %431, i32* %19, align 4, !dbg !3071
  %432 = load i8*, i8** %17, align 8, !dbg !3072
  %433 = icmp eq i8* %432, null, !dbg !3074
  %434 = load i32, i32* @x.55
  %435 = load i32, i32* @y.56
  %436 = sub i32 %434, 1
  %437 = mul i32 %434, %436
  %438 = urem i32 %437, 2
  %439 = icmp eq i32 %438, 0
  %440 = icmp slt i32 %435, 10
  %441 = or i1 %439, %440
  br i1 %441, label %originalBBpart285, label %originalBB83alteredBB

originalBBpart285:                                ; preds = %originalBB83
  br i1 %433, label %442, label %497, !dbg !3075

442:                                              ; preds = %originalBBpart285
  %443 = load i8*, i8** %8, align 8, !dbg !3076
  %444 = icmp ne i8* %443, null, !dbg !3077
  br i1 %444, label %445, label %497, !dbg !3078

445:                                              ; preds = %442
  call void @llvm.dbg.declare(metadata [21 x i8]* %24, metadata !3079, metadata !DIExpression()), !dbg !3081
  %446 = load %struct.passwd*, %struct.passwd** %14, align 8, !dbg !3082
  %447 = getelementptr inbounds %struct.passwd, %struct.passwd* %446, i32 0, i32 3, !dbg !3083
  %448 = load i32, i32* %447, align 4, !dbg !3083
  store i32 %448, i32* %20, align 4, !dbg !3084
  %449 = load i32, i32* %20, align 4, !dbg !3085
  %450 = call %struct.group* @getgrgid(i32 %449), !dbg !3086
  store %struct.group* %450, %struct.group** %15, align 8, !dbg !3087
  %451 = load %struct.group*, %struct.group** %15, align 8, !dbg !3088
  %452 = icmp ne %struct.group* %451, null, !dbg !3088
  br i1 %452, label %453, label %473, !dbg !3088

453:                                              ; preds = %445
  %454 = load i32, i32* @x.55
  %455 = load i32, i32* @y.56
  %456 = sub i32 %454, 1
  %457 = mul i32 %454, %456
  %458 = urem i32 %457, 2
  %459 = icmp eq i32 %458, 0
  %460 = icmp slt i32 %455, 10
  %461 = or i1 %459, %460
  br i1 %461, label %originalBB87, label %originalBB87alteredBB

originalBB87:                                     ; preds = %453, %originalBB87alteredBB
  %462 = load %struct.group*, %struct.group** %15, align 8, !dbg !3089
  %463 = getelementptr inbounds %struct.group, %struct.group* %462, i32 0, i32 0, !dbg !3090
  %464 = load i8*, i8** %463, align 8, !dbg !3090
  %465 = load i32, i32* @x.55
  %466 = load i32, i32* @y.56
  %467 = sub i32 %465, 1
  %468 = mul i32 %465, %467
  %469 = urem i32 %468, 2
  %470 = icmp eq i32 %469, 0
  %471 = icmp slt i32 %466, 10
  %472 = or i1 %470, %471
  br i1 %472, label %originalBBpart289, label %originalBB87alteredBB

originalBBpart289:                                ; preds = %originalBB87
  br label %478, !dbg !3088

473:                                              ; preds = %445
  %474 = load i32, i32* %20, align 4, !dbg !3091
  %475 = zext i32 %474 to i64, !dbg !3091
  %476 = getelementptr inbounds [21 x i8], [21 x i8]* %24, i64 0, i64 0, !dbg !3092
  %477 = call i8* @umaxtostr(i64 %475, i8* %476), !dbg !3093
  br label %478, !dbg !3088

478:                                              ; preds = %473, %originalBBpart289
  %479 = phi i8* [ %464, %originalBBpart289 ], [ %477, %473 ], !dbg !3088
  %480 = load i32, i32* @x.55
  %481 = load i32, i32* @y.56
  %482 = sub i32 %480, 1
  %483 = mul i32 %480, %482
  %484 = urem i32 %483, 2
  %485 = icmp eq i32 %484, 0
  %486 = icmp slt i32 %481, 10
  %487 = or i1 %485, %486
  br i1 %487, label %originalBB91, label %originalBB91alteredBB

originalBB91:                                     ; preds = %478, %originalBB91alteredBB
  %488 = call noalias i8* @xstrdup(i8* %479), !dbg !3094
  store i8* %488, i8** %18, align 8, !dbg !3095
  call void @endgrent(), !dbg !3096
  %489 = load i32, i32* @x.55
  %490 = load i32, i32* @y.56
  %491 = sub i32 %489, 1
  %492 = mul i32 %489, %491
  %493 = urem i32 %492, 2
  %494 = icmp eq i32 %493, 0
  %495 = icmp slt i32 %490, 10
  %496 = or i1 %494, %495
  br i1 %496, label %originalBBpart293, label %originalBB91alteredBB

originalBBpart293:                                ; preds = %originalBB91
  br label %497, !dbg !3097

497:                                              ; preds = %originalBBpart293, %442, %originalBBpart285
  br label %498

498:                                              ; preds = %497, %originalBBpart281
  call void @endpwent(), !dbg !3098
  br label %499, !dbg !3099

499:                                              ; preds = %498, %182
  %500 = load i8*, i8** %17, align 8, !dbg !3100
  %501 = icmp ne i8* %500, null, !dbg !3102
  br i1 %501, label %502, label %622, !dbg !3103

502:                                              ; preds = %499
  %503 = load i8*, i8** %13, align 8, !dbg !3104
  %504 = icmp eq i8* %503, null, !dbg !3105
  br i1 %504, label %505, label %622, !dbg !3106

505:                                              ; preds = %502
  %506 = load i32, i32* @x.55
  %507 = load i32, i32* @y.56
  %508 = sub i32 %506, 1
  %509 = mul i32 %506, %508
  %510 = urem i32 %509, 2
  %511 = icmp eq i32 %510, 0
  %512 = icmp slt i32 %507, 10
  %513 = or i1 %511, %512
  br i1 %513, label %originalBB95, label %originalBB95alteredBB

originalBB95:                                     ; preds = %505, %originalBB95alteredBB
  %514 = load i8*, i8** %17, align 8, !dbg !3107
  %515 = load i8, i8* %514, align 1, !dbg !3109
  %516 = sext i8 %515 to i32, !dbg !3109
  %517 = icmp eq i32 %516, 43, !dbg !3110
  %518 = load i32, i32* @x.55
  %519 = load i32, i32* @y.56
  %520 = sub i32 %518, 1
  %521 = mul i32 %518, %520
  %522 = urem i32 %521, 2
  %523 = icmp eq i32 %522, 0
  %524 = icmp slt i32 %519, 10
  %525 = or i1 %523, %524
  br i1 %525, label %originalBBpart297, label %originalBB95alteredBB

originalBBpart297:                                ; preds = %originalBB95
  br i1 %517, label %526, label %527, !dbg !3109

526:                                              ; preds = %originalBBpart297
  br label %546, !dbg !3109

527:                                              ; preds = %originalBBpart297
  %528 = load i32, i32* @x.55
  %529 = load i32, i32* @y.56
  %530 = sub i32 %528, 1
  %531 = mul i32 %528, %530
  %532 = urem i32 %531, 2
  %533 = icmp eq i32 %532, 0
  %534 = icmp slt i32 %529, 10
  %535 = or i1 %533, %534
  br i1 %535, label %originalBB99, label %originalBB99alteredBB

originalBB99:                                     ; preds = %527, %originalBB99alteredBB
  %536 = load i8*, i8** %17, align 8, !dbg !3111
  %537 = call %struct.group* @getgrnam(i8* %536), !dbg !3112
  %538 = load i32, i32* @x.55
  %539 = load i32, i32* @y.56
  %540 = sub i32 %538, 1
  %541 = mul i32 %538, %540
  %542 = urem i32 %541, 2
  %543 = icmp eq i32 %542, 0
  %544 = icmp slt i32 %539, 10
  %545 = or i1 %543, %544
  br i1 %545, label %originalBBpart2101, label %originalBB99alteredBB

originalBBpart2101:                               ; preds = %originalBB99
  br label %546, !dbg !3109

546:                                              ; preds = %originalBBpart2101, %526
  %547 = phi %struct.group* [ null, %526 ], [ %537, %originalBBpart2101 ], !dbg !3109
  store %struct.group* %547, %struct.group** %15, align 8, !dbg !3113
  %548 = load %struct.group*, %struct.group** %15, align 8, !dbg !3114
  %549 = icmp eq %struct.group* %548, null, !dbg !3116
  br i1 %549, label %550, label %615, !dbg !3117

550:                                              ; preds = %546
  call void @llvm.dbg.declare(metadata i64* %25, metadata !3118, metadata !DIExpression()), !dbg !3120
  %551 = load i32, i32* @x.55
  %552 = load i32, i32* @y.56
  %553 = sub i32 %551, 1
  %554 = mul i32 %551, %553
  %555 = urem i32 %554, 2
  %556 = icmp eq i32 %555, 0
  %557 = icmp slt i32 %552, 10
  %558 = or i1 %556, %557
  br i1 %558, label %originalBB103, label %originalBB103alteredBB

originalBB103:                                    ; preds = %550, %originalBB103alteredBB
  %559 = load i8*, i8** %17, align 8, !dbg !3121
  %560 = call i32 @xstrtoul(i8* %559, i8** null, i32 10, i64* %25, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3.102, i64 0, i64 0)), !dbg !3123
  %561 = icmp eq i32 %560, 0, !dbg !3124
  %562 = load i32, i32* @x.55
  %563 = load i32, i32* @y.56
  %564 = sub i32 %562, 1
  %565 = mul i32 %562, %564
  %566 = urem i32 %565, 2
  %567 = icmp eq i32 %566, 0
  %568 = icmp slt i32 %563, 10
  %569 = or i1 %567, %568
  br i1 %569, label %originalBBpart2105, label %originalBB103alteredBB

originalBBpart2105:                               ; preds = %originalBB103
  br i1 %561, label %570, label %612, !dbg !3125

570:                                              ; preds = %originalBBpart2105
  %571 = load i64, i64* %25, align 8, !dbg !3126
  %572 = icmp ule i64 %571, 4294967295, !dbg !3127
  br i1 %572, label %573, label %612, !dbg !3128

573:                                              ; preds = %570
  %574 = load i32, i32* @x.55
  %575 = load i32, i32* @y.56
  %576 = sub i32 %574, 1
  %577 = mul i32 %574, %576
  %578 = urem i32 %577, 2
  %579 = icmp eq i32 %578, 0
  %580 = icmp slt i32 %575, 10
  %581 = or i1 %579, %580
  br i1 %581, label %originalBB107, label %originalBB107alteredBB

originalBB107:                                    ; preds = %573, %originalBB107alteredBB
  %582 = load i64, i64* %25, align 8, !dbg !3129
  %583 = trunc i64 %582 to i32, !dbg !3130
  %584 = icmp ne i32 %583, -1, !dbg !3131
  %585 = load i32, i32* @x.55
  %586 = load i32, i32* @y.56
  %587 = sub i32 %585, 1
  %588 = mul i32 %585, %587
  %589 = urem i32 %588, 2
  %590 = icmp eq i32 %589, 0
  %591 = icmp slt i32 %586, 10
  %592 = or i1 %590, %591
  br i1 %592, label %originalBBpart2109, label %originalBB107alteredBB

originalBBpart2109:                               ; preds = %originalBB107
  br i1 %584, label %593, label %612, !dbg !3132

593:                                              ; preds = %originalBBpart2109
  %594 = load i32, i32* @x.55
  %595 = load i32, i32* @y.56
  %596 = sub i32 %594, 1
  %597 = mul i32 %594, %596
  %598 = urem i32 %597, 2
  %599 = icmp eq i32 %598, 0
  %600 = icmp slt i32 %595, 10
  %601 = or i1 %599, %600
  br i1 %601, label %originalBB111, label %originalBB111alteredBB

originalBB111:                                    ; preds = %593, %originalBB111alteredBB
  %602 = load i64, i64* %25, align 8, !dbg !3133
  %603 = trunc i64 %602 to i32, !dbg !3133
  store i32 %603, i32* %20, align 4, !dbg !3134
  %604 = load i32, i32* @x.55
  %605 = load i32, i32* @y.56
  %606 = sub i32 %604, 1
  %607 = mul i32 %604, %606
  %608 = urem i32 %607, 2
  %609 = icmp eq i32 %608, 0
  %610 = icmp slt i32 %605, 10
  %611 = or i1 %609, %610
  br i1 %611, label %originalBBpart2113, label %originalBB111alteredBB

originalBBpart2113:                               ; preds = %originalBB111
  br label %614, !dbg !3135

612:                                              ; preds = %originalBBpart2109, %570, %originalBBpart2105
  %613 = load i8*, i8** @parse_with_separator.E_invalid_group, align 8, !dbg !3136
  store i8* %613, i8** %13, align 8, !dbg !3137
  br label %614

614:                                              ; preds = %612, %originalBBpart2113
  br label %619, !dbg !3138

615:                                              ; preds = %546
  %616 = load %struct.group*, %struct.group** %15, align 8, !dbg !3139
  %617 = getelementptr inbounds %struct.group, %struct.group* %616, i32 0, i32 2, !dbg !3140
  %618 = load i32, i32* %617, align 8, !dbg !3140
  store i32 %618, i32* %20, align 4, !dbg !3141
  br label %619

619:                                              ; preds = %615, %614
  call void @endgrent(), !dbg !3142
  %620 = load i8*, i8** %17, align 8, !dbg !3143
  %621 = call noalias i8* @xstrdup(i8* %620), !dbg !3144
  store i8* %621, i8** %18, align 8, !dbg !3145
  br label %622, !dbg !3146

622:                                              ; preds = %619, %502, %499
  %623 = load i8*, i8** %13, align 8, !dbg !3147
  %624 = icmp eq i8* %623, null, !dbg !3149
  br i1 %624, label %625, label %678, !dbg !3150

625:                                              ; preds = %622
  %626 = load i32, i32* @x.55
  %627 = load i32, i32* @y.56
  %628 = sub i32 %626, 1
  %629 = mul i32 %626, %628
  %630 = urem i32 %629, 2
  %631 = icmp eq i32 %630, 0
  %632 = icmp slt i32 %627, 10
  %633 = or i1 %631, %632
  br i1 %633, label %originalBB115, label %originalBB115alteredBB

originalBB115:                                    ; preds = %625, %originalBB115alteredBB
  %634 = load i32, i32* %19, align 4, !dbg !3151
  %635 = load i32*, i32** %9, align 8, !dbg !3153
  store i32 %634, i32* %635, align 4, !dbg !3154
  %636 = load i32*, i32** %10, align 8, !dbg !3155
  %637 = icmp ne i32* %636, null, !dbg !3155
  %638 = load i32, i32* @x.55
  %639 = load i32, i32* @y.56
  %640 = sub i32 %638, 1
  %641 = mul i32 %638, %640
  %642 = urem i32 %641, 2
  %643 = icmp eq i32 %642, 0
  %644 = icmp slt i32 %639, 10
  %645 = or i1 %643, %644
  br i1 %645, label %originalBBpart2117, label %originalBB115alteredBB

originalBBpart2117:                               ; preds = %originalBB115
  br i1 %637, label %646, label %665, !dbg !3157

646:                                              ; preds = %originalBBpart2117
  %647 = load i32, i32* @x.55
  %648 = load i32, i32* @y.56
  %649 = sub i32 %647, 1
  %650 = mul i32 %647, %649
  %651 = urem i32 %650, 2
  %652 = icmp eq i32 %651, 0
  %653 = icmp slt i32 %648, 10
  %654 = or i1 %652, %653
  br i1 %654, label %originalBB119, label %originalBB119alteredBB

originalBB119:                                    ; preds = %646, %originalBB119alteredBB
  %655 = load i32, i32* %20, align 4, !dbg !3158
  %656 = load i32*, i32** %10, align 8, !dbg !3159
  store i32 %655, i32* %656, align 4, !dbg !3160
  %657 = load i32, i32* @x.55
  %658 = load i32, i32* @y.56
  %659 = sub i32 %657, 1
  %660 = mul i32 %657, %659
  %661 = urem i32 %660, 2
  %662 = icmp eq i32 %661, 0
  %663 = icmp slt i32 %658, 10
  %664 = or i1 %662, %663
  br i1 %664, label %originalBBpart2121, label %originalBB119alteredBB

originalBBpart2121:                               ; preds = %originalBB119
  br label %665, !dbg !3161

665:                                              ; preds = %originalBBpart2121, %originalBBpart2117
  %666 = load i8**, i8*** %11, align 8, !dbg !3162
  %667 = icmp ne i8** %666, null, !dbg !3162
  br i1 %667, label %668, label %671, !dbg !3164

668:                                              ; preds = %665
  %669 = load i8*, i8** %16, align 8, !dbg !3165
  %670 = load i8**, i8*** %11, align 8, !dbg !3167
  store i8* %669, i8** %670, align 8, !dbg !3168
  store i8* null, i8** %16, align 8, !dbg !3169
  br label %671, !dbg !3170

671:                                              ; preds = %668, %665
  %672 = load i8**, i8*** %12, align 8, !dbg !3171
  %673 = icmp ne i8** %672, null, !dbg !3171
  br i1 %673, label %674, label %677, !dbg !3173

674:                                              ; preds = %671
  %675 = load i8*, i8** %18, align 8, !dbg !3174
  %676 = load i8**, i8*** %12, align 8, !dbg !3176
  store i8* %675, i8** %676, align 8, !dbg !3177
  store i8* null, i8** %18, align 8, !dbg !3178
  br label %677, !dbg !3179

677:                                              ; preds = %674, %671
  br label %678, !dbg !3180

678:                                              ; preds = %677, %622
  %679 = load i8*, i8** %16, align 8, !dbg !3181
  call void @free(i8* %679) #10, !dbg !3182
  %680 = load i8*, i8** %18, align 8, !dbg !3183
  call void @free(i8* %680) #10, !dbg !3184
  %681 = load i8*, i8** %13, align 8, !dbg !3185
  %682 = icmp ne i8* %681, null, !dbg !3185
  br i1 %682, label %683, label %686, !dbg !3185

683:                                              ; preds = %678
  %684 = load i8*, i8** %13, align 8, !dbg !3186
  %685 = call i8* @gettext(i8* %684) #10, !dbg !3186
  br label %687, !dbg !3185

686:                                              ; preds = %678
  br label %687, !dbg !3185

687:                                              ; preds = %686, %683
  %688 = phi i8* [ %685, %683 ], [ null, %686 ], !dbg !3185
  %689 = load i32, i32* @x.55
  %690 = load i32, i32* @y.56
  %691 = sub i32 %689, 1
  %692 = mul i32 %689, %691
  %693 = urem i32 %692, 2
  %694 = icmp eq i32 %693, 0
  %695 = icmp slt i32 %690, 10
  %696 = or i1 %694, %695
  br i1 %696, label %originalBB123, label %originalBB123alteredBB

originalBB123:                                    ; preds = %687, %originalBB123alteredBB
  %697 = load i32, i32* @x.55
  %698 = load i32, i32* @y.56
  %699 = sub i32 %697, 1
  %700 = mul i32 %697, %699
  %701 = urem i32 %700, 2
  %702 = icmp eq i32 %701, 0
  %703 = icmp slt i32 %698, 10
  %704 = or i1 %702, %703
  br i1 %704, label %originalBBpart2125, label %originalBB123alteredBB

originalBBpart2125:                               ; preds = %originalBB123
  ret i8* %688, !dbg !3187

originalBBalteredBB:                              ; preds = %originalBB, %38
  %705 = load i8**, i8*** %11, align 8, !dbg !2962
  store i8* null, i8** %705, align 8, !dbg !2963
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %68
  %706 = load i8*, i8** %7, align 8, !dbg !2981
  %707 = call noalias i8* @xstrdup(i8* %706), !dbg !2982
  store i8* %707, i8** %16, align 8, !dbg !2983
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %87
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %121
  %708 = load i8*, i8** %8, align 8, !dbg !3006
  %709 = icmp eq i8* %708, null, !dbg !3007
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %146
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %163
  %710 = load i8*, i8** %8, align 8, !dbg !3013
  %711 = getelementptr inbounds i8, i8* %710, i64 1, !dbg !3014
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %186
  %712 = load i8*, i8** %16, align 8, !dbg !3020
  %713 = load i8, i8* %712, align 1, !dbg !3022
  %714 = sext i8 %713 to i32, !dbg !3022
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %206
  %collatzVaralteredBB = alloca i32
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %223
  %715 = load i32, i32* @inVal0
  %716 = icmp sgt i32 %715, 1
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %242
  store i32 82, i32* %collatzVar
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %259
  %717 = load i8**, i8*** @inVal1
  %718 = getelementptr inbounds i8*, i8** %717, i64 1
  %719 = load i8*, i8** %718
  %controlealteredBB = call i32 @controle(i8* %719, i32 43)
  store i32 %controlealteredBB, i32* %collatzVar
  br label %originalBB38

originalBB42alteredBB:                            ; preds = %originalBB42, %279
  %720 = load i32, i32* %collatzVar
  %721 = icmp sgt i32 %720, 1
  br label %originalBB42

originalBB46alteredBB:                            ; preds = %originalBB46, %305
  %722 = load i32, i32* %collatzVar
  %_ = sub i32 %722, 3
  %gen = mul i32 %_, 3
  %_47 = sub i32 0, %722
  %gen48 = add i32 %_47, 3
  %_49 = sub i32 0, %722
  %gen50 = add i32 %_49, 3
  %_51 = shl i32 %722, 3
  %723 = mul i32 %722, 3
  %_52 = sub i32 %723, 1
  %gen53 = mul i32 %_52, 1
  %724 = add i32 %723, 1
  store i32 %724, i32* %collatzVar
  br label %originalBB46

originalBB57alteredBB:                            ; preds = %originalBB57, %325
  %725 = load i32, i32* %collatzVar
  %_58 = shl i32 %197, %725
  %_59 = sub i32 0, %197
  %gen60 = add i32 %_59, %725
  %_61 = shl i32 %197, %725
  %_62 = shl i32 %197, %725
  %_63 = sub i32 0, %197
  %gen64 = add i32 %_63, %725
  %_65 = sub i32 0, %197
  %gen66 = add i32 %_65, %725
  %_67 = sub i32 0, %197
  %gen68 = add i32 %_67, %725
  %_69 = sub i32 %197, %725
  %gen70 = mul i32 %_69, %725
  %_71 = shl i32 %197, %725
  %726 = sub i32 %197, %725
  %727 = icmp sgt i32 %726, 41
  br label %originalBB57

originalBB75alteredBB:                            ; preds = %originalBB75, %370
  %728 = load i8*, i8** %16, align 8, !dbg !3050
  %729 = call i32 @xstrtoul(i8* %728, i8** null, i32 10, i64* %23, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3.102, i64 0, i64 0)), !dbg !3052
  %730 = icmp eq i32 %729, 0, !dbg !3053
  br label %originalBB75

originalBB79alteredBB:                            ; preds = %originalBB79, %403
  br label %originalBB79

originalBB83alteredBB:                            ; preds = %originalBB83, %420
  %731 = load %struct.passwd*, %struct.passwd** %14, align 8, !dbg !3068
  %732 = getelementptr inbounds %struct.passwd, %struct.passwd* %731, i32 0, i32 2, !dbg !3070
  %733 = load i32, i32* %732, align 8, !dbg !3070
  store i32 %733, i32* %19, align 4, !dbg !3071
  %734 = load i8*, i8** %17, align 8, !dbg !3072
  %735 = icmp eq i8* %734, null, !dbg !3074
  br label %originalBB83

originalBB87alteredBB:                            ; preds = %originalBB87, %453
  %736 = load %struct.group*, %struct.group** %15, align 8, !dbg !3089
  %737 = getelementptr inbounds %struct.group, %struct.group* %736, i32 0, i32 0, !dbg !3090
  %738 = load i8*, i8** %737, align 8, !dbg !3090
  br label %originalBB87

originalBB91alteredBB:                            ; preds = %originalBB91, %478
  %739 = call noalias i8* @xstrdup(i8* %479), !dbg !3094
  store i8* %739, i8** %18, align 8, !dbg !3095
  call void @endgrent(), !dbg !3096
  br label %originalBB91

originalBB95alteredBB:                            ; preds = %originalBB95, %505
  %740 = load i8*, i8** %17, align 8, !dbg !3107
  %741 = load i8, i8* %740, align 1, !dbg !3109
  %742 = sext i8 %741 to i32, !dbg !3109
  %743 = icmp eq i32 %742, 43, !dbg !3110
  br label %originalBB95

originalBB99alteredBB:                            ; preds = %originalBB99, %527
  %744 = load i8*, i8** %17, align 8, !dbg !3111
  %745 = call %struct.group* @getgrnam(i8* %744), !dbg !3112
  br label %originalBB99

originalBB103alteredBB:                           ; preds = %originalBB103, %550
  %746 = load i8*, i8** %17, align 8, !dbg !3121
  %747 = call i32 @xstrtoul(i8* %746, i8** null, i32 10, i64* %25, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3.102, i64 0, i64 0)), !dbg !3123
  %748 = icmp eq i32 %747, 0, !dbg !3124
  br label %originalBB103

originalBB107alteredBB:                           ; preds = %originalBB107, %573
  %749 = load i64, i64* %25, align 8, !dbg !3129
  %750 = trunc i64 %749 to i32, !dbg !3130
  %751 = icmp ne i32 %750, -1, !dbg !3131
  br label %originalBB107

originalBB111alteredBB:                           ; preds = %originalBB111, %593
  %752 = load i64, i64* %25, align 8, !dbg !3133
  %753 = trunc i64 %752 to i32, !dbg !3133
  store i32 %753, i32* %20, align 4, !dbg !3134
  br label %originalBB111

originalBB115alteredBB:                           ; preds = %originalBB115, %625
  %754 = load i32, i32* %19, align 4, !dbg !3151
  %755 = load i32*, i32** %9, align 8, !dbg !3153
  store i32 %754, i32* %755, align 4, !dbg !3154
  %756 = load i32*, i32** %10, align 8, !dbg !3155
  %757 = icmp ne i32* %756, null, !dbg !3155
  br label %originalBB115

originalBB119alteredBB:                           ; preds = %originalBB119, %646
  %758 = load i32, i32* %20, align 4, !dbg !3158
  %759 = load i32*, i32** %10, align 8, !dbg !3159
  store i32 %758, i32* %759, align 4, !dbg !3160
  br label %originalBB119

originalBB123alteredBB:                           ; preds = %originalBB123, %687
  br label %originalBB123
}

declare dso_local %struct.passwd* @getpwnam(i8*) #3

declare dso_local void @endgrent() #3

declare dso_local void @endpwent() #3

declare dso_local %struct.group* @getgrnam(i8*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @version_etc_arn(%struct._IO_FILE*, i8*, i8*, i8*, i8**, i64) #4 !dbg !3188 {
  %7 = alloca %struct._IO_FILE*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i8**, align 8
  %12 = alloca i64, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %7, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %7, metadata !3246, metadata !DIExpression()), !dbg !3247
  store i8* %1, i8** %8, align 8
  call void @llvm.dbg.declare(metadata i8** %8, metadata !3248, metadata !DIExpression()), !dbg !3249
  store i8* %2, i8** %9, align 8
  call void @llvm.dbg.declare(metadata i8** %9, metadata !3250, metadata !DIExpression()), !dbg !3251
  store i8* %3, i8** %10, align 8
  call void @llvm.dbg.declare(metadata i8** %10, metadata !3252, metadata !DIExpression()), !dbg !3253
  store i8** %4, i8*** %11, align 8
  call void @llvm.dbg.declare(metadata i8*** %11, metadata !3254, metadata !DIExpression()), !dbg !3255
  store i64 %5, i64* %12, align 8
  call void @llvm.dbg.declare(metadata i64* %12, metadata !3256, metadata !DIExpression()), !dbg !3257
  %13 = load i8*, i8** %8, align 8, !dbg !3258
  %14 = icmp ne i8* %13, null, !dbg !3258
  br i1 %14, label %15, label %37, !dbg !3260

15:                                               ; preds = %6
  %16 = load i32, i32* @x.57
  %17 = load i32, i32* @y.58
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %15, %originalBBalteredBB
  %24 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !3261
  %25 = load i8*, i8** %8, align 8, !dbg !3262
  %26 = load i8*, i8** %9, align 8, !dbg !3263
  %27 = load i8*, i8** %10, align 8, !dbg !3264
  %28 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %24, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.106, i64 0, i64 0), i8* %25, i8* %26, i8* %27), !dbg !3265
  %29 = load i32, i32* @x.57
  %30 = load i32, i32* @y.58
  %31 = sub i32 %29, 1
  %32 = mul i32 %29, %31
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %34, %35
  br i1 %36, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %58, !dbg !3265

37:                                               ; preds = %6
  %38 = load i32, i32* @x.57
  %39 = load i32, i32* @y.58
  %40 = sub i32 %38, 1
  %41 = mul i32 %38, %40
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %43, %44
  br i1 %45, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %37, %originalBB1alteredBB
  %46 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !3266
  %47 = load i8*, i8** %9, align 8, !dbg !3267
  %48 = load i8*, i8** %10, align 8, !dbg !3268
  %49 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %46, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.107, i64 0, i64 0), i8* %47, i8* %48), !dbg !3269
  %50 = load i32, i32* @x.57
  %51 = load i32, i32* @y.58
  %52 = sub i32 %50, 1
  %53 = mul i32 %50, %52
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %51, 10
  %57 = or i1 %55, %56
  br i1 %57, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %58

58:                                               ; preds = %originalBBpart24, %originalBBpart2
  %59 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !3270
  %60 = call i8* @gettext(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.108, i64 0, i64 0)) #10, !dbg !3271
  %61 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %59, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @version_etc_copyright, i64 0, i64 0), i8* %60, i32 2020), !dbg !3272
  %62 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !3273
  %63 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.109, i64 0, i64 0), %struct._IO_FILE* %62), !dbg !3273
  %64 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !3274
  %65 = call i8* @gettext(i8* getelementptr inbounds ([171 x i8], [171 x i8]* @.str.4.110, i64 0, i64 0)) #10, !dbg !3275
  %66 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %64, i8* %65, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.5.111, i64 0, i64 0)), !dbg !3276
  %67 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !3277
  %68 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.109, i64 0, i64 0), %struct._IO_FILE* %67), !dbg !3277
  %69 = load i64, i64* %12, align 8, !dbg !3278
  switch i64 %69, label %274 [
    i64 0, label %70
    i64 1, label %71
    i64 2, label %94
    i64 3, label %104
    i64 4, label %133
    i64 5, label %149
    i64 6, label %168
    i64 7, label %190
    i64 8, label %215
    i64 9, label %243
  ], !dbg !3279

70:                                               ; preds = %58
  br label %305, !dbg !3280

71:                                               ; preds = %58
  %72 = load i32, i32* @x.57
  %73 = load i32, i32* @y.58
  %74 = sub i32 %72, 1
  %75 = mul i32 %72, %74
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %73, 10
  %79 = or i1 %77, %78
  br i1 %79, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %71, %originalBB6alteredBB
  %80 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !3282
  %81 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6.112, i64 0, i64 0)) #10, !dbg !3283
  %82 = load i8**, i8*** %11, align 8, !dbg !3284
  %83 = getelementptr inbounds i8*, i8** %82, i64 0, !dbg !3284
  %84 = load i8*, i8** %83, align 8, !dbg !3284
  %85 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %80, i8* %81, i8* %84), !dbg !3285
  %86 = load i32, i32* @x.57
  %87 = load i32, i32* @y.58
  %88 = sub i32 %86, 1
  %89 = mul i32 %86, %88
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %87, 10
  %93 = or i1 %91, %92
  br i1 %93, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %305, !dbg !3286

94:                                               ; preds = %58
  %95 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !3287
  %96 = call i8* @gettext(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.113, i64 0, i64 0)) #10, !dbg !3288
  %97 = load i8**, i8*** %11, align 8, !dbg !3289
  %98 = getelementptr inbounds i8*, i8** %97, i64 0, !dbg !3289
  %99 = load i8*, i8** %98, align 8, !dbg !3289
  %100 = load i8**, i8*** %11, align 8, !dbg !3290
  %101 = getelementptr inbounds i8*, i8** %100, i64 1, !dbg !3290
  %102 = load i8*, i8** %101, align 8, !dbg !3290
  %103 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %95, i8* %96, i8* %99, i8* %102), !dbg !3291
  br label %305, !dbg !3292

104:                                              ; preds = %58
  %105 = load i32, i32* @x.57
  %106 = load i32, i32* @y.58
  %107 = sub i32 %105, 1
  %108 = mul i32 %105, %107
  %109 = urem i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %106, 10
  %112 = or i1 %110, %111
  br i1 %112, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %104, %originalBB10alteredBB
  %113 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !3293
  %114 = call i8* @gettext(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.8.114, i64 0, i64 0)) #10, !dbg !3294
  %115 = load i8**, i8*** %11, align 8, !dbg !3295
  %116 = getelementptr inbounds i8*, i8** %115, i64 0, !dbg !3295
  %117 = load i8*, i8** %116, align 8, !dbg !3295
  %118 = load i8**, i8*** %11, align 8, !dbg !3296
  %119 = getelementptr inbounds i8*, i8** %118, i64 1, !dbg !3296
  %120 = load i8*, i8** %119, align 8, !dbg !3296
  %121 = load i8**, i8*** %11, align 8, !dbg !3297
  %122 = getelementptr inbounds i8*, i8** %121, i64 2, !dbg !3297
  %123 = load i8*, i8** %122, align 8, !dbg !3297
  %124 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %113, i8* %114, i8* %117, i8* %120, i8* %123), !dbg !3298
  %125 = load i32, i32* @x.57
  %126 = load i32, i32* @y.58
  %127 = sub i32 %125, 1
  %128 = mul i32 %125, %127
  %129 = urem i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = icmp slt i32 %126, 10
  %132 = or i1 %130, %131
  br i1 %132, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %305, !dbg !3299

133:                                              ; preds = %58
  %134 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !3300
  %135 = call i8* @gettext(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.9.115, i64 0, i64 0)) #10, !dbg !3301
  %136 = load i8**, i8*** %11, align 8, !dbg !3302
  %137 = getelementptr inbounds i8*, i8** %136, i64 0, !dbg !3302
  %138 = load i8*, i8** %137, align 8, !dbg !3302
  %139 = load i8**, i8*** %11, align 8, !dbg !3303
  %140 = getelementptr inbounds i8*, i8** %139, i64 1, !dbg !3303
  %141 = load i8*, i8** %140, align 8, !dbg !3303
  %142 = load i8**, i8*** %11, align 8, !dbg !3304
  %143 = getelementptr inbounds i8*, i8** %142, i64 2, !dbg !3304
  %144 = load i8*, i8** %143, align 8, !dbg !3304
  %145 = load i8**, i8*** %11, align 8, !dbg !3305
  %146 = getelementptr inbounds i8*, i8** %145, i64 3, !dbg !3305
  %147 = load i8*, i8** %146, align 8, !dbg !3305
  %148 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %134, i8* %135, i8* %138, i8* %141, i8* %144, i8* %147), !dbg !3306
  br label %305, !dbg !3307

149:                                              ; preds = %58
  %150 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !3308
  %151 = call i8* @gettext(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.10.116, i64 0, i64 0)) #10, !dbg !3309
  %152 = load i8**, i8*** %11, align 8, !dbg !3310
  %153 = getelementptr inbounds i8*, i8** %152, i64 0, !dbg !3310
  %154 = load i8*, i8** %153, align 8, !dbg !3310
  %155 = load i8**, i8*** %11, align 8, !dbg !3311
  %156 = getelementptr inbounds i8*, i8** %155, i64 1, !dbg !3311
  %157 = load i8*, i8** %156, align 8, !dbg !3311
  %158 = load i8**, i8*** %11, align 8, !dbg !3312
  %159 = getelementptr inbounds i8*, i8** %158, i64 2, !dbg !3312
  %160 = load i8*, i8** %159, align 8, !dbg !3312
  %161 = load i8**, i8*** %11, align 8, !dbg !3313
  %162 = getelementptr inbounds i8*, i8** %161, i64 3, !dbg !3313
  %163 = load i8*, i8** %162, align 8, !dbg !3313
  %164 = load i8**, i8*** %11, align 8, !dbg !3314
  %165 = getelementptr inbounds i8*, i8** %164, i64 4, !dbg !3314
  %166 = load i8*, i8** %165, align 8, !dbg !3314
  %167 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %150, i8* %151, i8* %154, i8* %157, i8* %160, i8* %163, i8* %166), !dbg !3315
  br label %305, !dbg !3316

168:                                              ; preds = %58
  %169 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !3317
  %170 = call i8* @gettext(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.11.117, i64 0, i64 0)) #10, !dbg !3318
  %171 = load i8**, i8*** %11, align 8, !dbg !3319
  %172 = getelementptr inbounds i8*, i8** %171, i64 0, !dbg !3319
  %173 = load i8*, i8** %172, align 8, !dbg !3319
  %174 = load i8**, i8*** %11, align 8, !dbg !3320
  %175 = getelementptr inbounds i8*, i8** %174, i64 1, !dbg !3320
  %176 = load i8*, i8** %175, align 8, !dbg !3320
  %177 = load i8**, i8*** %11, align 8, !dbg !3321
  %178 = getelementptr inbounds i8*, i8** %177, i64 2, !dbg !3321
  %179 = load i8*, i8** %178, align 8, !dbg !3321
  %180 = load i8**, i8*** %11, align 8, !dbg !3322
  %181 = getelementptr inbounds i8*, i8** %180, i64 3, !dbg !3322
  %182 = load i8*, i8** %181, align 8, !dbg !3322
  %183 = load i8**, i8*** %11, align 8, !dbg !3323
  %184 = getelementptr inbounds i8*, i8** %183, i64 4, !dbg !3323
  %185 = load i8*, i8** %184, align 8, !dbg !3323
  %186 = load i8**, i8*** %11, align 8, !dbg !3324
  %187 = getelementptr inbounds i8*, i8** %186, i64 5, !dbg !3324
  %188 = load i8*, i8** %187, align 8, !dbg !3324
  %189 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %169, i8* %170, i8* %173, i8* %176, i8* %179, i8* %182, i8* %185, i8* %188), !dbg !3325
  br label %305, !dbg !3326

190:                                              ; preds = %58
  %191 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !3327
  %192 = call i8* @gettext(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.12.118, i64 0, i64 0)) #10, !dbg !3328
  %193 = load i8**, i8*** %11, align 8, !dbg !3329
  %194 = getelementptr inbounds i8*, i8** %193, i64 0, !dbg !3329
  %195 = load i8*, i8** %194, align 8, !dbg !3329
  %196 = load i8**, i8*** %11, align 8, !dbg !3330
  %197 = getelementptr inbounds i8*, i8** %196, i64 1, !dbg !3330
  %198 = load i8*, i8** %197, align 8, !dbg !3330
  %199 = load i8**, i8*** %11, align 8, !dbg !3331
  %200 = getelementptr inbounds i8*, i8** %199, i64 2, !dbg !3331
  %201 = load i8*, i8** %200, align 8, !dbg !3331
  %202 = load i8**, i8*** %11, align 8, !dbg !3332
  %203 = getelementptr inbounds i8*, i8** %202, i64 3, !dbg !3332
  %204 = load i8*, i8** %203, align 8, !dbg !3332
  %205 = load i8**, i8*** %11, align 8, !dbg !3333
  %206 = getelementptr inbounds i8*, i8** %205, i64 4, !dbg !3333
  %207 = load i8*, i8** %206, align 8, !dbg !3333
  %208 = load i8**, i8*** %11, align 8, !dbg !3334
  %209 = getelementptr inbounds i8*, i8** %208, i64 5, !dbg !3334
  %210 = load i8*, i8** %209, align 8, !dbg !3334
  %211 = load i8**, i8*** %11, align 8, !dbg !3335
  %212 = getelementptr inbounds i8*, i8** %211, i64 6, !dbg !3335
  %213 = load i8*, i8** %212, align 8, !dbg !3335
  %214 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %191, i8* %192, i8* %195, i8* %198, i8* %201, i8* %204, i8* %207, i8* %210, i8* %213), !dbg !3336
  br label %305, !dbg !3337

215:                                              ; preds = %58
  %216 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !3338
  %217 = call i8* @gettext(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.13.119, i64 0, i64 0)) #10, !dbg !3339
  %218 = load i8**, i8*** %11, align 8, !dbg !3340
  %219 = getelementptr inbounds i8*, i8** %218, i64 0, !dbg !3340
  %220 = load i8*, i8** %219, align 8, !dbg !3340
  %221 = load i8**, i8*** %11, align 8, !dbg !3341
  %222 = getelementptr inbounds i8*, i8** %221, i64 1, !dbg !3341
  %223 = load i8*, i8** %222, align 8, !dbg !3341
  %224 = load i8**, i8*** %11, align 8, !dbg !3342
  %225 = getelementptr inbounds i8*, i8** %224, i64 2, !dbg !3342
  %226 = load i8*, i8** %225, align 8, !dbg !3342
  %227 = load i8**, i8*** %11, align 8, !dbg !3343
  %228 = getelementptr inbounds i8*, i8** %227, i64 3, !dbg !3343
  %229 = load i8*, i8** %228, align 8, !dbg !3343
  %230 = load i8**, i8*** %11, align 8, !dbg !3344
  %231 = getelementptr inbounds i8*, i8** %230, i64 4, !dbg !3344
  %232 = load i8*, i8** %231, align 8, !dbg !3344
  %233 = load i8**, i8*** %11, align 8, !dbg !3345
  %234 = getelementptr inbounds i8*, i8** %233, i64 5, !dbg !3345
  %235 = load i8*, i8** %234, align 8, !dbg !3345
  %236 = load i8**, i8*** %11, align 8, !dbg !3346
  %237 = getelementptr inbounds i8*, i8** %236, i64 6, !dbg !3346
  %238 = load i8*, i8** %237, align 8, !dbg !3346
  %239 = load i8**, i8*** %11, align 8, !dbg !3347
  %240 = getelementptr inbounds i8*, i8** %239, i64 7, !dbg !3347
  %241 = load i8*, i8** %240, align 8, !dbg !3347
  %242 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %216, i8* %217, i8* %220, i8* %223, i8* %226, i8* %229, i8* %232, i8* %235, i8* %238, i8* %241), !dbg !3348
  br label %305, !dbg !3349

243:                                              ; preds = %58
  %244 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !3350
  %245 = call i8* @gettext(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.14.120, i64 0, i64 0)) #10, !dbg !3351
  %246 = load i8**, i8*** %11, align 8, !dbg !3352
  %247 = getelementptr inbounds i8*, i8** %246, i64 0, !dbg !3352
  %248 = load i8*, i8** %247, align 8, !dbg !3352
  %249 = load i8**, i8*** %11, align 8, !dbg !3353
  %250 = getelementptr inbounds i8*, i8** %249, i64 1, !dbg !3353
  %251 = load i8*, i8** %250, align 8, !dbg !3353
  %252 = load i8**, i8*** %11, align 8, !dbg !3354
  %253 = getelementptr inbounds i8*, i8** %252, i64 2, !dbg !3354
  %254 = load i8*, i8** %253, align 8, !dbg !3354
  %255 = load i8**, i8*** %11, align 8, !dbg !3355
  %256 = getelementptr inbounds i8*, i8** %255, i64 3, !dbg !3355
  %257 = load i8*, i8** %256, align 8, !dbg !3355
  %258 = load i8**, i8*** %11, align 8, !dbg !3356
  %259 = getelementptr inbounds i8*, i8** %258, i64 4, !dbg !3356
  %260 = load i8*, i8** %259, align 8, !dbg !3356
  %261 = load i8**, i8*** %11, align 8, !dbg !3357
  %262 = getelementptr inbounds i8*, i8** %261, i64 5, !dbg !3357
  %263 = load i8*, i8** %262, align 8, !dbg !3357
  %264 = load i8**, i8*** %11, align 8, !dbg !3358
  %265 = getelementptr inbounds i8*, i8** %264, i64 6, !dbg !3358
  %266 = load i8*, i8** %265, align 8, !dbg !3358
  %267 = load i8**, i8*** %11, align 8, !dbg !3359
  %268 = getelementptr inbounds i8*, i8** %267, i64 7, !dbg !3359
  %269 = load i8*, i8** %268, align 8, !dbg !3359
  %270 = load i8**, i8*** %11, align 8, !dbg !3360
  %271 = getelementptr inbounds i8*, i8** %270, i64 8, !dbg !3360
  %272 = load i8*, i8** %271, align 8, !dbg !3360
  %273 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %244, i8* %245, i8* %248, i8* %251, i8* %254, i8* %257, i8* %260, i8* %263, i8* %266, i8* %269, i8* %272), !dbg !3361
  br label %305, !dbg !3362

274:                                              ; preds = %58
  %275 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !3363
  %276 = call i8* @gettext(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.15.121, i64 0, i64 0)) #10, !dbg !3364
  %277 = load i8**, i8*** %11, align 8, !dbg !3365
  %278 = getelementptr inbounds i8*, i8** %277, i64 0, !dbg !3365
  %279 = load i8*, i8** %278, align 8, !dbg !3365
  %280 = load i8**, i8*** %11, align 8, !dbg !3366
  %281 = getelementptr inbounds i8*, i8** %280, i64 1, !dbg !3366
  %282 = load i8*, i8** %281, align 8, !dbg !3366
  %283 = load i8**, i8*** %11, align 8, !dbg !3367
  %284 = getelementptr inbounds i8*, i8** %283, i64 2, !dbg !3367
  %285 = load i8*, i8** %284, align 8, !dbg !3367
  %286 = load i8**, i8*** %11, align 8, !dbg !3368
  %287 = getelementptr inbounds i8*, i8** %286, i64 3, !dbg !3368
  %288 = load i8*, i8** %287, align 8, !dbg !3368
  %289 = load i8**, i8*** %11, align 8, !dbg !3369
  %290 = getelementptr inbounds i8*, i8** %289, i64 4, !dbg !3369
  %291 = load i8*, i8** %290, align 8, !dbg !3369
  %292 = load i8**, i8*** %11, align 8, !dbg !3370
  %293 = getelementptr inbounds i8*, i8** %292, i64 5, !dbg !3370
  %294 = load i8*, i8** %293, align 8, !dbg !3370
  %295 = load i8**, i8*** %11, align 8, !dbg !3371
  %296 = getelementptr inbounds i8*, i8** %295, i64 6, !dbg !3371
  %297 = load i8*, i8** %296, align 8, !dbg !3371
  %298 = load i8**, i8*** %11, align 8, !dbg !3372
  %299 = getelementptr inbounds i8*, i8** %298, i64 7, !dbg !3372
  %300 = load i8*, i8** %299, align 8, !dbg !3372
  %301 = load i8**, i8*** %11, align 8, !dbg !3373
  %302 = getelementptr inbounds i8*, i8** %301, i64 8, !dbg !3373
  %303 = load i8*, i8** %302, align 8, !dbg !3373
  %304 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %275, i8* %276, i8* %279, i8* %282, i8* %285, i8* %288, i8* %291, i8* %294, i8* %297, i8* %300, i8* %303), !dbg !3374
  br label %305, !dbg !3375

305:                                              ; preds = %274, %243, %215, %190, %168, %149, %133, %originalBBpart212, %94, %originalBBpart28, %70
  ret void, !dbg !3376

originalBBalteredBB:                              ; preds = %originalBB, %15
  %306 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !3261
  %307 = load i8*, i8** %8, align 8, !dbg !3262
  %308 = load i8*, i8** %9, align 8, !dbg !3263
  %309 = load i8*, i8** %10, align 8, !dbg !3264
  %310 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %306, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.106, i64 0, i64 0), i8* %307, i8* %308, i8* %309), !dbg !3265
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %37
  %311 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !3266
  %312 = load i8*, i8** %9, align 8, !dbg !3267
  %313 = load i8*, i8** %10, align 8, !dbg !3268
  %314 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %311, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.107, i64 0, i64 0), i8* %312, i8* %313), !dbg !3269
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %71
  %315 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !3282
  %316 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6.112, i64 0, i64 0)) #10, !dbg !3283
  %317 = load i8**, i8*** %11, align 8, !dbg !3284
  %318 = getelementptr inbounds i8*, i8** %317, i64 0, !dbg !3284
  %319 = load i8*, i8** %318, align 8, !dbg !3284
  %320 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %315, i8* %316, i8* %319), !dbg !3285
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %104
  %321 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !3293
  %322 = call i8* @gettext(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.8.114, i64 0, i64 0)) #10, !dbg !3294
  %323 = load i8**, i8*** %11, align 8, !dbg !3295
  %324 = getelementptr inbounds i8*, i8** %323, i64 0, !dbg !3295
  %325 = load i8*, i8** %324, align 8, !dbg !3295
  %326 = load i8**, i8*** %11, align 8, !dbg !3296
  %327 = getelementptr inbounds i8*, i8** %326, i64 1, !dbg !3296
  %328 = load i8*, i8** %327, align 8, !dbg !3296
  %329 = load i8**, i8*** %11, align 8, !dbg !3297
  %330 = getelementptr inbounds i8*, i8** %329, i64 2, !dbg !3297
  %331 = load i8*, i8** %330, align 8, !dbg !3297
  %332 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %321, i8* %322, i8* %325, i8* %328, i8* %331), !dbg !3298
  br label %originalBB10
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @version_etc_va(%struct._IO_FILE*, i8*, i8*, i8*, %struct.__va_list_tag*) #4 !dbg !3377 {
  %6 = alloca %struct._IO_FILE*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca %struct.__va_list_tag*, align 8
  %11 = alloca i64, align 8
  %12 = alloca [10 x i8*], align 16
  store %struct._IO_FILE* %0, %struct._IO_FILE** %6, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %6, metadata !3387, metadata !DIExpression()), !dbg !3388
  store i8* %1, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !3389, metadata !DIExpression()), !dbg !3390
  store i8* %2, i8** %8, align 8
  call void @llvm.dbg.declare(metadata i8** %8, metadata !3391, metadata !DIExpression()), !dbg !3392
  store i8* %3, i8** %9, align 8
  call void @llvm.dbg.declare(metadata i8** %9, metadata !3393, metadata !DIExpression()), !dbg !3394
  store %struct.__va_list_tag* %4, %struct.__va_list_tag** %10, align 8
  call void @llvm.dbg.declare(metadata %struct.__va_list_tag** %10, metadata !3395, metadata !DIExpression()), !dbg !3396
  call void @llvm.dbg.declare(metadata i64* %11, metadata !3397, metadata !DIExpression()), !dbg !3398
  call void @llvm.dbg.declare(metadata [10 x i8*]* %12, metadata !3399, metadata !DIExpression()), !dbg !3401
  store i64 0, i64* %11, align 8, !dbg !3402
  br label %13, !dbg !3404

13:                                               ; preds = %105, %5
  %14 = load i32, i32* @x.59
  %15 = load i32, i32* @y.60
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %13, %originalBBalteredBB
  %22 = load i64, i64* %11, align 8, !dbg !3405
  %23 = icmp ult i64 %22, 10, !dbg !3407
  %24 = load i32, i32* @x.59
  %25 = load i32, i32* @y.60
  %26 = sub i32 %24, 1
  %27 = mul i32 %24, %26
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %29, %30
  br i1 %31, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %23, label %32, label %86, !dbg !3408

32:                                               ; preds = %originalBBpart2
  %33 = load i32, i32* @x.59
  %34 = load i32, i32* @y.60
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %32, %originalBB1alteredBB
  %41 = load %struct.__va_list_tag*, %struct.__va_list_tag** %10, align 8, !dbg !3409
  %42 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %41, i32 0, i32 0, !dbg !3409
  %43 = load i32, i32* %42, align 8, !dbg !3409
  %44 = icmp ule i32 %43, 40, !dbg !3409
  %45 = load i32, i32* @x.59
  %46 = load i32, i32* @y.60
  %47 = sub i32 %45, 1
  %48 = mul i32 %45, %47
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %50, %51
  br i1 %52, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %44, label %53, label %59, !dbg !3409

53:                                               ; preds = %originalBBpart24
  %54 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %41, i32 0, i32 3, !dbg !3409
  %55 = load i8*, i8** %54, align 8, !dbg !3409
  %56 = getelementptr i8, i8* %55, i32 %43, !dbg !3409
  %57 = bitcast i8* %56 to i8**, !dbg !3409
  %58 = add i32 %43, 8, !dbg !3409
  store i32 %58, i32* %42, align 8, !dbg !3409
  br label %64, !dbg !3409

59:                                               ; preds = %originalBBpart24
  %60 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %41, i32 0, i32 2, !dbg !3409
  %61 = load i8*, i8** %60, align 8, !dbg !3409
  %62 = bitcast i8* %61 to i8**, !dbg !3409
  %63 = getelementptr i8, i8* %61, i32 8, !dbg !3409
  store i8* %63, i8** %60, align 8, !dbg !3409
  br label %64, !dbg !3409

64:                                               ; preds = %59, %53
  %65 = phi i8** [ %57, %53 ], [ %62, %59 ], !dbg !3409
  %66 = load i32, i32* @x.59
  %67 = load i32, i32* @y.60
  %68 = sub i32 %66, 1
  %69 = mul i32 %66, %68
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %67, 10
  %73 = or i1 %71, %72
  br i1 %73, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %64, %originalBB6alteredBB
  %74 = load i8*, i8** %65, align 8, !dbg !3409
  %75 = load i64, i64* %11, align 8, !dbg !3410
  %76 = getelementptr inbounds [10 x i8*], [10 x i8*]* %12, i64 0, i64 %75, !dbg !3411
  store i8* %74, i8** %76, align 8, !dbg !3412
  %77 = icmp ne i8* %74, null, !dbg !3413
  %78 = load i32, i32* @x.59
  %79 = load i32, i32* @y.60
  %80 = sub i32 %78, 1
  %81 = mul i32 %78, %80
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %79, 10
  %85 = or i1 %83, %84
  br i1 %85, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %86

86:                                               ; preds = %originalBBpart28, %originalBBpart2
  %87 = phi i1 [ false, %originalBBpart2 ], [ %77, %originalBBpart28 ], !dbg !3414
  %88 = load i32, i32* @x.59
  %89 = load i32, i32* @y.60
  %90 = sub i32 %88, 1
  %91 = mul i32 %88, %90
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %89, 10
  %95 = or i1 %93, %94
  br i1 %95, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %86, %originalBB10alteredBB
  %96 = load i32, i32* @x.59
  %97 = load i32, i32* @y.60
  %98 = sub i32 %96, 1
  %99 = mul i32 %96, %98
  %100 = urem i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = icmp slt i32 %97, 10
  %103 = or i1 %101, %102
  br i1 %103, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %87, label %104, label %108, !dbg !3415

104:                                              ; preds = %originalBBpart212
  br label %105, !dbg !3415

105:                                              ; preds = %104
  %106 = load i64, i64* %11, align 8, !dbg !3416
  %107 = add i64 %106, 1, !dbg !3416
  store i64 %107, i64* %11, align 8, !dbg !3416
  br label %13, !dbg !3417, !llvm.loop !3418

108:                                              ; preds = %originalBBpart212
  %109 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8, !dbg !3420
  %110 = load i8*, i8** %7, align 8, !dbg !3421
  %111 = load i8*, i8** %8, align 8, !dbg !3422
  %112 = load i8*, i8** %9, align 8, !dbg !3423
  %113 = getelementptr inbounds [10 x i8*], [10 x i8*]* %12, i64 0, i64 0, !dbg !3424
  %114 = load i64, i64* %11, align 8, !dbg !3425
  call void @version_etc_arn(%struct._IO_FILE* %109, i8* %110, i8* %111, i8* %112, i8** %113, i64 %114), !dbg !3426
  ret void, !dbg !3427

originalBBalteredBB:                              ; preds = %originalBB, %13
  %115 = load i64, i64* %11, align 8, !dbg !3405
  %116 = icmp ult i64 %115, 10, !dbg !3407
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %32
  %117 = load %struct.__va_list_tag*, %struct.__va_list_tag** %10, align 8, !dbg !3409
  %118 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %117, i32 0, i32 0, !dbg !3409
  %119 = load i32, i32* %118, align 8, !dbg !3409
  %120 = icmp ule i32 %119, 40, !dbg !3409
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %64
  %121 = load i8*, i8** %65, align 8, !dbg !3409
  %122 = load i64, i64* %11, align 8, !dbg !3410
  %123 = getelementptr inbounds [10 x i8*], [10 x i8*]* %12, i64 0, i64 %122, !dbg !3411
  store i8* %121, i8** %123, align 8, !dbg !3412
  %124 = icmp ne i8* %121, null, !dbg !3413
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %86
  br label %originalBB10
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @version_etc(%struct._IO_FILE*, i8*, i8*, i8*, ...) #4 !dbg !3428 {
  %5 = load i32, i32* @x.61
  %6 = load i32, i32* @y.62
  %7 = sub i32 %5, 1
  %8 = mul i32 %5, %7
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %6, 10
  %12 = or i1 %10, %11
  br i1 %12, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %4, %originalBBalteredBB
  %13 = alloca %struct._IO_FILE*, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i8*, align 8
  %16 = alloca i8*, align 8
  %17 = alloca [1 x %struct.__va_list_tag], align 16
  store %struct._IO_FILE* %0, %struct._IO_FILE** %13, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %13, metadata !3431, metadata !DIExpression()), !dbg !3432
  store i8* %1, i8** %14, align 8
  call void @llvm.dbg.declare(metadata i8** %14, metadata !3433, metadata !DIExpression()), !dbg !3434
  store i8* %2, i8** %15, align 8
  call void @llvm.dbg.declare(metadata i8** %15, metadata !3435, metadata !DIExpression()), !dbg !3436
  store i8* %3, i8** %16, align 8
  call void @llvm.dbg.declare(metadata i8** %16, metadata !3437, metadata !DIExpression()), !dbg !3438
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %17, metadata !3439, metadata !DIExpression()), !dbg !3445
  %18 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %17, i64 0, i64 0, !dbg !3446
  %19 = bitcast %struct.__va_list_tag* %18 to i8*, !dbg !3446
  call void @llvm.va_start(i8* %19), !dbg !3446
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !3447
  %21 = load i8*, i8** %14, align 8, !dbg !3448
  %22 = load i8*, i8** %15, align 8, !dbg !3449
  %23 = load i8*, i8** %16, align 8, !dbg !3450
  %24 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %17, i64 0, i64 0, !dbg !3451
  call void @version_etc_va(%struct._IO_FILE* %20, i8* %21, i8* %22, i8* %23, %struct.__va_list_tag* %24), !dbg !3452
  %25 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %17, i64 0, i64 0, !dbg !3453
  %26 = bitcast %struct.__va_list_tag* %25 to i8*, !dbg !3453
  call void @llvm.va_end(i8* %26), !dbg !3453
  %27 = load i32, i32* @x.61
  %28 = load i32, i32* @y.62
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void, !dbg !3454

originalBBalteredBB:                              ; preds = %originalBB, %4
  %35 = alloca %struct._IO_FILE*, align 8
  %36 = alloca i8*, align 8
  %37 = alloca i8*, align 8
  %38 = alloca i8*, align 8
  %39 = alloca [1 x %struct.__va_list_tag], align 16
  store %struct._IO_FILE* %0, %struct._IO_FILE** %35, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %35, metadata !3455, metadata !DIExpression()), !dbg !3432
  store i8* %1, i8** %36, align 8
  call void @llvm.dbg.declare(metadata i8** %36, metadata !3494, metadata !DIExpression()), !dbg !3434
  store i8* %2, i8** %37, align 8
  call void @llvm.dbg.declare(metadata i8** %37, metadata !3495, metadata !DIExpression()), !dbg !3436
  store i8* %3, i8** %38, align 8
  call void @llvm.dbg.declare(metadata i8** %38, metadata !3496, metadata !DIExpression()), !dbg !3438
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %39, metadata !3497, metadata !DIExpression()), !dbg !3445
  %40 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %39, i64 0, i64 0, !dbg !3446
  %41 = bitcast %struct.__va_list_tag* %40 to i8*, !dbg !3446
  call void @llvm.va_start(i8* %41), !dbg !3446
  %42 = load %struct._IO_FILE*, %struct._IO_FILE** %35, align 8, !dbg !3447
  %43 = load i8*, i8** %36, align 8, !dbg !3448
  %44 = load i8*, i8** %37, align 8, !dbg !3449
  %45 = load i8*, i8** %38, align 8, !dbg !3450
  %46 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %39, i64 0, i64 0, !dbg !3451
  call void @version_etc_va(%struct._IO_FILE* %42, i8* %43, i8* %44, i8* %45, %struct.__va_list_tag* %46), !dbg !3452
  %47 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %39, i64 0, i64 0, !dbg !3453
  %48 = bitcast %struct.__va_list_tag* %47 to i8*, !dbg !3453
  call void @llvm.va_end(i8* %48), !dbg !3453
  br label %originalBB
}

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #10

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #10

; Function Attrs: noinline nounwind optnone uwtable
define internal noalias i8* @xmalloc(i64) #4 !dbg !3508 {
  %2 = alloca i64, align 8
  %3 = alloca i8*, align 8
  store i64 %0, i64* %2, align 8
  call void @llvm.dbg.declare(metadata i64* %2, metadata !3512, metadata !DIExpression()), !dbg !3513
  call void @llvm.dbg.declare(metadata i8** %3, metadata !3514, metadata !DIExpression()), !dbg !3515
  %4 = load i64, i64* %2, align 8, !dbg !3516
  %5 = call noalias i8* @malloc(i64 %4) #10, !dbg !3517
  store i8* %5, i8** %3, align 8, !dbg !3515
  %6 = load i8*, i8** %3, align 8, !dbg !3518
  %7 = icmp ne i8* %6, null, !dbg !3518
  br i1 %7, label %28, label %8, !dbg !3520

8:                                                ; preds = %1
  %9 = load i64, i64* %2, align 8, !dbg !3521
  %10 = icmp ne i64 %9, 0, !dbg !3522
  br i1 %10, label %11, label %28, !dbg !3523

11:                                               ; preds = %8
  %12 = load i32, i32* @x.63
  %13 = load i32, i32* @y.64
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %11, %originalBBalteredBB
  call void @xalloc_die() #14, !dbg !3524
  %20 = load i32, i32* @x.63
  %21 = load i32, i32* @y.64
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  unreachable, !dbg !3524

28:                                               ; preds = %8, %1
  %29 = load i8*, i8** %3, align 8, !dbg !3525
  ret i8* %29, !dbg !3526

originalBBalteredBB:                              ; preds = %originalBB, %11
  call void @xalloc_die() #14, !dbg !3524
  br label %originalBB
}

; Function Attrs: nounwind
declare dso_local noalias i8* @malloc(i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @xrealloc(i8*, i64) #4 !dbg !3527 {
  %3 = load i32, i32* @x.65
  %4 = load i32, i32* @y.66
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i64, align 8
  store i8* %0, i8** %12, align 8
  call void @llvm.dbg.declare(metadata i8** %12, metadata !3530, metadata !DIExpression()), !dbg !3531
  store i64 %1, i64* %13, align 8
  call void @llvm.dbg.declare(metadata i64* %13, metadata !3532, metadata !DIExpression()), !dbg !3533
  %14 = load i64, i64* %13, align 8, !dbg !3534
  %15 = icmp ne i64 %14, 0, !dbg !3534
  %16 = load i32, i32* @x.65
  %17 = load i32, i32* @y.66
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %15, label %45, label %24, !dbg !3536

24:                                               ; preds = %originalBBpart2
  %25 = load i32, i32* @x.65
  %26 = load i32, i32* @y.66
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %24, %originalBB1alteredBB
  %33 = load i8*, i8** %12, align 8, !dbg !3537
  %34 = icmp ne i8* %33, null, !dbg !3537
  %35 = load i32, i32* @x.65
  %36 = load i32, i32* @y.66
  %37 = sub i32 %35, 1
  %38 = mul i32 %35, %37
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %40, %41
  br i1 %42, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %34, label %43, label %45, !dbg !3538

43:                                               ; preds = %originalBBpart24
  %44 = load i8*, i8** %12, align 8, !dbg !3539
  call void @free(i8* %44) #10, !dbg !3541
  store i8* null, i8** %11, align 8, !dbg !3542
  br label %105, !dbg !3542

45:                                               ; preds = %originalBBpart24, %originalBBpart2
  %46 = load i32, i32* @x.65
  %47 = load i32, i32* @y.66
  %48 = sub i32 %46, 1
  %49 = mul i32 %46, %48
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %47, 10
  %53 = or i1 %51, %52
  br i1 %53, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %45, %originalBB6alteredBB
  %54 = load i8*, i8** %12, align 8, !dbg !3543
  %55 = load i64, i64* %13, align 8, !dbg !3544
  %56 = call i8* @realloc(i8* %54, i64 %55) #10, !dbg !3545
  store i8* %56, i8** %12, align 8, !dbg !3546
  %57 = load i8*, i8** %12, align 8, !dbg !3547
  %58 = icmp ne i8* %57, null, !dbg !3547
  %59 = load i32, i32* @x.65
  %60 = load i32, i32* @y.66
  %61 = sub i32 %59, 1
  %62 = mul i32 %59, %61
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %60, 10
  %66 = or i1 %64, %65
  br i1 %66, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %58, label %87, label %67, !dbg !3549

67:                                               ; preds = %originalBBpart28
  %68 = load i32, i32* @x.65
  %69 = load i32, i32* @y.66
  %70 = sub i32 %68, 1
  %71 = mul i32 %68, %70
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %69, 10
  %75 = or i1 %73, %74
  br i1 %75, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %67, %originalBB10alteredBB
  %76 = load i64, i64* %13, align 8, !dbg !3550
  %77 = icmp ne i64 %76, 0, !dbg !3550
  %78 = load i32, i32* @x.65
  %79 = load i32, i32* @y.66
  %80 = sub i32 %78, 1
  %81 = mul i32 %78, %80
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %79, 10
  %85 = or i1 %83, %84
  br i1 %85, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %77, label %86, label %87, !dbg !3551

86:                                               ; preds = %originalBBpart212
  call void @xalloc_die() #14, !dbg !3552
  unreachable, !dbg !3552

87:                                               ; preds = %originalBBpart212, %originalBBpart28
  %88 = load i32, i32* @x.65
  %89 = load i32, i32* @y.66
  %90 = sub i32 %88, 1
  %91 = mul i32 %88, %90
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %89, 10
  %95 = or i1 %93, %94
  br i1 %95, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %87, %originalBB14alteredBB
  %96 = load i8*, i8** %12, align 8, !dbg !3553
  store i8* %96, i8** %11, align 8, !dbg !3554
  %97 = load i32, i32* @x.65
  %98 = load i32, i32* @y.66
  %99 = sub i32 %97, 1
  %100 = mul i32 %97, %99
  %101 = urem i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %98, 10
  %104 = or i1 %102, %103
  br i1 %104, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %105, !dbg !3554

105:                                              ; preds = %originalBBpart216, %43
  %106 = load i8*, i8** %11, align 8, !dbg !3555
  ret i8* %106, !dbg !3555

originalBBalteredBB:                              ; preds = %originalBB, %2
  %107 = alloca i8*, align 8
  %108 = alloca i8*, align 8
  %109 = alloca i64, align 8
  store i8* %0, i8** %108, align 8
  call void @llvm.dbg.declare(metadata i8** %108, metadata !3556, metadata !DIExpression()), !dbg !3531
  store i64 %1, i64* %109, align 8
  call void @llvm.dbg.declare(metadata i64* %109, metadata !3559, metadata !DIExpression()), !dbg !3533
  %110 = load i64, i64* %109, align 8, !dbg !3534
  %111 = icmp ne i64 %110, 0, !dbg !3534
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %24
  %112 = load i8*, i8** %12, align 8, !dbg !3537
  %113 = icmp ne i8* %112, null, !dbg !3537
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %45
  %114 = load i8*, i8** %12, align 8, !dbg !3543
  %115 = load i64, i64* %13, align 8, !dbg !3544
  %116 = call i8* @realloc(i8* %114, i64 %115) #10, !dbg !3545
  store i8* %116, i8** %12, align 8, !dbg !3546
  %117 = load i8*, i8** %12, align 8, !dbg !3547
  %118 = icmp ne i8* %117, null, !dbg !3547
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %67
  %119 = load i64, i64* %13, align 8, !dbg !3550
  %120 = icmp ne i64 %119, 0, !dbg !3550
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %87
  %121 = load i8*, i8** %12, align 8, !dbg !3553
  store i8* %121, i8** %11, align 8, !dbg !3554
  br label %originalBB14
}

; Function Attrs: nounwind
declare dso_local i8* @realloc(i8*, i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal noalias i8* @xcharalloc(i64) #4 !dbg !3560 {
  %2 = alloca i64, align 8
  store i64 %0, i64* %2, align 8
  call void @llvm.dbg.declare(metadata i64* %2, metadata !3564, metadata !DIExpression()), !dbg !3565
  %3 = load i64, i64* %2, align 8, !dbg !3566
  %4 = call noalias i8* @xmalloc(i64 %3), !dbg !3566
  ret i8* %4, !dbg !3567
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @xmemdup(i8*, i64) #4 !dbg !3568 {
  %3 = load i32, i32* @x.69
  %4 = load i32, i32* @y.70
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca i8*, align 8
  %12 = alloca i64, align 8
  store i8* %0, i8** %11, align 8
  call void @llvm.dbg.declare(metadata i8** %11, metadata !3573, metadata !DIExpression()), !dbg !3574
  store i64 %1, i64* %12, align 8
  call void @llvm.dbg.declare(metadata i64* %12, metadata !3575, metadata !DIExpression()), !dbg !3576
  %13 = load i64, i64* %12, align 8, !dbg !3577
  %14 = call noalias i8* @xmalloc(i64 %13), !dbg !3578
  %15 = load i8*, i8** %11, align 8, !dbg !3579
  %16 = load i64, i64* %12, align 8, !dbg !3580
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %14, i8* align 1 %15, i64 %16, i1 false), !dbg !3581
  %17 = load i32, i32* @x.69
  %18 = load i32, i32* @y.70
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i8* %14, !dbg !3582

originalBBalteredBB:                              ; preds = %originalBB, %2
  %25 = alloca i8*, align 8
  %26 = alloca i64, align 8
  store i8* %0, i8** %25, align 8
  call void @llvm.dbg.declare(metadata i8** %25, metadata !3583, metadata !DIExpression()), !dbg !3574
  store i64 %1, i64* %26, align 8
  call void @llvm.dbg.declare(metadata i64* %26, metadata !3586, metadata !DIExpression()), !dbg !3576
  %27 = load i64, i64* %26, align 8, !dbg !3577
  %28 = call noalias i8* @xmalloc(i64 %27), !dbg !3578
  %29 = load i8*, i8** %25, align 8, !dbg !3579
  %30 = load i64, i64* %26, align 8, !dbg !3580
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %28, i8* align 1 %29, i64 %30, i1 false), !dbg !3581
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal noalias i8* @xstrdup(i8*) #4 !dbg !3587 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !3588, metadata !DIExpression()), !dbg !3589
  %3 = load i8*, i8** %2, align 8, !dbg !3590
  %4 = load i8*, i8** %2, align 8, !dbg !3591
  %5 = call i64 @strlen(i8* %4) #13, !dbg !3592
  %6 = add i64 %5, 1, !dbg !3593
  %7 = call i8* @xmemdup(i8* %3, i64 %6), !dbg !3594
  ret i8* %7, !dbg !3595
}

; Function Attrs: noinline noreturn nounwind optnone uwtable
define internal void @xalloc_die() #0 !dbg !3596 {
  %1 = load i32, i32* @x.73
  %2 = load i32, i32* @y.74
  %3 = sub i32 %1, 1
  %4 = mul i32 %1, %3
  %5 = urem i32 %4, 2
  %6 = icmp eq i32 %5, 0
  %7 = icmp slt i32 %2, 10
  %8 = or i1 %6, %7
  br i1 %8, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %0, %originalBBalteredBB
  %9 = load volatile i32, i32* @exit_failure, align 4, !dbg !3598
  %10 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1.136, i64 0, i64 0)) #10, !dbg !3599
  call void (i32, i32, i8*, ...) @error(i32 %9, i32 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.137, i64 0, i64 0), i8* %10), !dbg !3600
  call void @abort() #12, !dbg !3601
  %11 = load i32, i32* @x.73
  %12 = load i32, i32* @y.74
  %13 = sub i32 %11, 1
  %14 = mul i32 %11, %13
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = icmp slt i32 %12, 10
  %18 = or i1 %16, %17
  br i1 %18, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  unreachable, !dbg !3601

originalBBalteredBB:                              ; preds = %originalBB, %0
  %19 = load volatile i32, i32* @exit_failure, align 4, !dbg !3598
  %20 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1.136, i64 0, i64 0)) #10, !dbg !3599
  call void (i32, i32, i8*, ...) @error(i32 %19, i32 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.137, i64 0, i64 0), i8* %20), !dbg !3600
  call void @abort() #12, !dbg !3601
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @xgetgroups(i8*, i32, i32**) #4 !dbg !3602 {
  %4 = load i32, i32* @x.75
  %5 = load i32, i32* @y.76
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca i8*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32**, align 8
  %15 = alloca i32, align 4
  store i8* %0, i8** %12, align 8
  call void @llvm.dbg.declare(metadata i8** %12, metadata !3607, metadata !DIExpression()), !dbg !3608
  store i32 %1, i32* %13, align 4
  call void @llvm.dbg.declare(metadata i32* %13, metadata !3609, metadata !DIExpression()), !dbg !3610
  store i32** %2, i32*** %14, align 8
  call void @llvm.dbg.declare(metadata i32*** %14, metadata !3611, metadata !DIExpression()), !dbg !3612
  call void @llvm.dbg.declare(metadata i32* %15, metadata !3613, metadata !DIExpression()), !dbg !3614
  %16 = load i8*, i8** %12, align 8, !dbg !3615
  %17 = load i32, i32* %13, align 4, !dbg !3616
  %18 = load i32**, i32*** %14, align 8, !dbg !3617
  %19 = call i32 @mgetgroups(i8* %16, i32 %17, i32** %18), !dbg !3618
  store i32 %19, i32* %15, align 4, !dbg !3614
  %20 = load i32, i32* %15, align 4, !dbg !3619
  %21 = icmp eq i32 %20, -1, !dbg !3621
  %22 = load i32, i32* @x.75
  %23 = load i32, i32* @y.76
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %21, label %30, label %51, !dbg !3622

30:                                               ; preds = %originalBBpart2
  %31 = load i32, i32* @x.75
  %32 = load i32, i32* @y.76
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %30, %originalBB1alteredBB
  %39 = call i32* @__errno_location() #15, !dbg !3623
  %40 = load i32, i32* %39, align 4, !dbg !3623
  %41 = icmp eq i32 %40, 12, !dbg !3624
  %42 = load i32, i32* @x.75
  %43 = load i32, i32* @y.76
  %44 = sub i32 %42, 1
  %45 = mul i32 %42, %44
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %47, %48
  br i1 %49, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %41, label %50, label %51, !dbg !3625

50:                                               ; preds = %originalBBpart24
  call void @xalloc_die() #14, !dbg !3626
  unreachable, !dbg !3626

51:                                               ; preds = %originalBBpart24, %originalBBpart2
  %52 = load i32, i32* @x.75
  %53 = load i32, i32* @y.76
  %54 = sub i32 %52, 1
  %55 = mul i32 %52, %54
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %53, 10
  %59 = or i1 %57, %58
  br i1 %59, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %51, %originalBB6alteredBB
  %60 = load i32, i32* %15, align 4, !dbg !3627
  %61 = load i32, i32* @x.75
  %62 = load i32, i32* @y.76
  %63 = sub i32 %61, 1
  %64 = mul i32 %61, %63
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %62, 10
  %68 = or i1 %66, %67
  br i1 %68, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  ret i32 %60, !dbg !3628

originalBBalteredBB:                              ; preds = %originalBB, %3
  %69 = alloca i8*, align 8
  %70 = alloca i32, align 4
  %71 = alloca i32**, align 8
  %72 = alloca i32, align 4
  store i8* %0, i8** %69, align 8
  call void @llvm.dbg.declare(metadata i8** %69, metadata !3629, metadata !DIExpression()), !dbg !3608
  store i32 %1, i32* %70, align 4
  call void @llvm.dbg.declare(metadata i32* %70, metadata !3632, metadata !DIExpression()), !dbg !3610
  store i32** %2, i32*** %71, align 8
  call void @llvm.dbg.declare(metadata i32*** %71, metadata !3633, metadata !DIExpression()), !dbg !3612
  call void @llvm.dbg.declare(metadata i32* %72, metadata !3634, metadata !DIExpression()), !dbg !3614
  %73 = load i8*, i8** %69, align 8, !dbg !3615
  %74 = load i32, i32* %70, align 4, !dbg !3616
  %75 = load i32**, i32*** %71, align 8, !dbg !3617
  %76 = call i32 @mgetgroups(i8* %73, i32 %74, i32** %75), !dbg !3618
  store i32 %76, i32* %72, align 4, !dbg !3614
  %77 = load i32, i32* %72, align 4, !dbg !3619
  %78 = icmp eq i32 %77, -1, !dbg !3621
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %30
  %79 = call i32* @__errno_location() #15, !dbg !3623
  %80 = load i32, i32* %79, align 4, !dbg !3623
  %81 = icmp eq i32 %80, 12, !dbg !3624
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %51
  %82 = load i32, i32* %15, align 4, !dbg !3627
  br label %originalBB6
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @xstrtoul(i8*, i8**, i32, i64*, i8*) #4 !dbg !3635 {
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca i8**, align 8
  %9 = alloca i32, align 4
  %10 = alloca i64*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i8**, align 8
  %14 = alloca i64, align 8
  %15 = alloca i32, align 4
  %16 = alloca i8*, align 8
  %17 = alloca i8, align 1
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  store i8* %0, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !3641, metadata !DIExpression()), !dbg !3642
  store i8** %1, i8*** %8, align 8
  call void @llvm.dbg.declare(metadata i8*** %8, metadata !3643, metadata !DIExpression()), !dbg !3644
  store i32 %2, i32* %9, align 4
  call void @llvm.dbg.declare(metadata i32* %9, metadata !3645, metadata !DIExpression()), !dbg !3646
  store i64* %3, i64** %10, align 8
  call void @llvm.dbg.declare(metadata i64** %10, metadata !3647, metadata !DIExpression()), !dbg !3648
  store i8* %4, i8** %11, align 8
  call void @llvm.dbg.declare(metadata i8** %11, metadata !3649, metadata !DIExpression()), !dbg !3650
  call void @llvm.dbg.declare(metadata i8** %12, metadata !3651, metadata !DIExpression()), !dbg !3652
  call void @llvm.dbg.declare(metadata i8*** %13, metadata !3653, metadata !DIExpression()), !dbg !3654
  call void @llvm.dbg.declare(metadata i64* %14, metadata !3655, metadata !DIExpression()), !dbg !3656
  call void @llvm.dbg.declare(metadata i32* %15, metadata !3657, metadata !DIExpression()), !dbg !3658
  store i32 0, i32* %15, align 4, !dbg !3658
  %21 = load i32, i32* %9, align 4, !dbg !3659
  %22 = icmp sle i32 0, %21, !dbg !3659
  br i1 %22, label %23, label %59, !dbg !3659

23:                                               ; preds = %5
  %24 = load i32, i32* @x.77
  %25 = load i32, i32* @y.78
  %26 = sub i32 %24, 1
  %27 = mul i32 %24, %26
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %29, %30
  br i1 %31, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %23, %originalBBalteredBB
  %32 = load i32, i32* %9, align 4, !dbg !3659
  %33 = icmp sle i32 %32, 36, !dbg !3659
  %34 = load i32, i32* @x.77
  %35 = load i32, i32* @y.78
  %36 = sub i32 %34, 1
  %37 = mul i32 %34, %36
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %39, %40
  br i1 %41, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %33, label %42, label %59, !dbg !3662

42:                                               ; preds = %originalBBpart2
  %43 = load i32, i32* @x.77
  %44 = load i32, i32* @y.78
  %45 = sub i32 %43, 1
  %46 = mul i32 %43, %45
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %48, %49
  br i1 %50, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %42, %originalBB1alteredBB
  %51 = load i32, i32* @x.77
  %52 = load i32, i32* @y.78
  %53 = sub i32 %51, 1
  %54 = mul i32 %51, %53
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %52, 10
  %58 = or i1 %56, %57
  br i1 %58, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %60, !dbg !3662

59:                                               ; preds = %originalBBpart2, %5
  call void @__assert_fail(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.142, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.143, i64 0, i64 0), i32 84, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @__PRETTY_FUNCTION__.xstrtoul, i64 0, i64 0)) #12, !dbg !3659
  unreachable, !dbg !3659

60:                                               ; preds = %originalBBpart24
  %61 = load i8**, i8*** %8, align 8, !dbg !3663
  %62 = icmp ne i8** %61, null, !dbg !3663
  br i1 %62, label %63, label %81, !dbg !3663

63:                                               ; preds = %60
  %64 = load i32, i32* @x.77
  %65 = load i32, i32* @y.78
  %66 = sub i32 %64, 1
  %67 = mul i32 %64, %66
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %65, 10
  %71 = or i1 %69, %70
  br i1 %71, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %63, %originalBB6alteredBB
  %72 = load i8**, i8*** %8, align 8, !dbg !3664
  %73 = load i32, i32* @x.77
  %74 = load i32, i32* @y.78
  %75 = sub i32 %73, 1
  %76 = mul i32 %73, %75
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %74, 10
  %80 = or i1 %78, %79
  br i1 %80, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %98, !dbg !3663

81:                                               ; preds = %60
  %82 = load i32, i32* @x.77
  %83 = load i32, i32* @y.78
  %84 = sub i32 %82, 1
  %85 = mul i32 %82, %84
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %83, 10
  %89 = or i1 %87, %88
  br i1 %89, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %81, %originalBB10alteredBB
  %90 = load i32, i32* @x.77
  %91 = load i32, i32* @y.78
  %92 = sub i32 %90, 1
  %93 = mul i32 %90, %92
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %91, 10
  %97 = or i1 %95, %96
  br i1 %97, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %98, !dbg !3663

98:                                               ; preds = %originalBBpart212, %originalBBpart28
  %99 = phi i8** [ %72, %originalBBpart28 ], [ %12, %originalBBpart212 ], !dbg !3663
  %100 = load i32, i32* @x.77
  %101 = load i32, i32* @y.78
  %102 = sub i32 %100, 1
  %103 = mul i32 %100, %102
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %101, 10
  %107 = or i1 %105, %106
  br i1 %107, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %98, %originalBB14alteredBB
  store i8** %99, i8*** %13, align 8, !dbg !3665
  %108 = call i32* @__errno_location() #15, !dbg !3666
  store i32 0, i32* %108, align 4, !dbg !3667
  call void @llvm.dbg.declare(metadata i8** %16, metadata !3668, metadata !DIExpression()), !dbg !3671
  %109 = load i8*, i8** %7, align 8, !dbg !3672
  store i8* %109, i8** %16, align 8, !dbg !3671
  call void @llvm.dbg.declare(metadata i8* %17, metadata !3673, metadata !DIExpression()), !dbg !3674
  %110 = load i8*, i8** %16, align 8, !dbg !3675
  %111 = load i8, i8* %110, align 1, !dbg !3676
  store i8 %111, i8* %17, align 1, !dbg !3674
  %112 = load i32, i32* @x.77
  %113 = load i32, i32* @y.78
  %114 = sub i32 %112, 1
  %115 = mul i32 %112, %114
  %116 = urem i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = icmp slt i32 %113, 10
  %119 = or i1 %117, %118
  br i1 %119, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %120, !dbg !3677

120:                                              ; preds = %originalBBpart220, %originalBBpart216
  %121 = call i16** @__ctype_b_loc() #15, !dbg !3678
  %122 = load i16*, i16** %121, align 8, !dbg !3678
  %123 = load i8, i8* %17, align 1, !dbg !3678
  %124 = zext i8 %123 to i32, !dbg !3678
  %125 = sext i32 %124 to i64, !dbg !3678
  %126 = getelementptr inbounds i16, i16* %122, i64 %125, !dbg !3678
  %127 = load i16, i16* %126, align 2, !dbg !3678
  %128 = zext i16 %127 to i32, !dbg !3678
  %129 = and i32 %128, 8192, !dbg !3678
  %130 = icmp ne i32 %129, 0, !dbg !3677
  br i1 %130, label %131, label %151, !dbg !3677

131:                                              ; preds = %120
  %132 = load i32, i32* @x.77
  %133 = load i32, i32* @y.78
  %134 = sub i32 %132, 1
  %135 = mul i32 %132, %134
  %136 = urem i32 %135, 2
  %137 = icmp eq i32 %136, 0
  %138 = icmp slt i32 %133, 10
  %139 = or i1 %137, %138
  br i1 %139, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %131, %originalBB18alteredBB
  %140 = load i8*, i8** %16, align 8, !dbg !3679
  %141 = getelementptr inbounds i8, i8* %140, i32 1, !dbg !3679
  store i8* %141, i8** %16, align 8, !dbg !3679
  %142 = load i8, i8* %141, align 1, !dbg !3680
  store i8 %142, i8* %17, align 1, !dbg !3681
  %143 = load i32, i32* @x.77
  %144 = load i32, i32* @y.78
  %145 = sub i32 %143, 1
  %146 = mul i32 %143, %145
  %147 = urem i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = icmp slt i32 %144, 10
  %150 = or i1 %148, %149
  br i1 %150, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %120, !dbg !3677, !llvm.loop !3682

151:                                              ; preds = %120
  %152 = load i8, i8* %17, align 1, !dbg !3684
  %153 = zext i8 %152 to i32, !dbg !3684
  %154 = icmp eq i32 %153, 45, !dbg !3686
  br i1 %154, label %155, label %156, !dbg !3687

155:                                              ; preds = %151
  store i32 4, i32* %6, align 4, !dbg !3688
  br label %653, !dbg !3688

156:                                              ; preds = %151
  %157 = load i32, i32* @x.77
  %158 = load i32, i32* @y.78
  %159 = sub i32 %157, 1
  %160 = mul i32 %157, %159
  %161 = urem i32 %160, 2
  %162 = icmp eq i32 %161, 0
  %163 = icmp slt i32 %158, 10
  %164 = or i1 %162, %163
  br i1 %164, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %156, %originalBB22alteredBB
  %165 = load i8*, i8** %7, align 8, !dbg !3689
  %166 = load i8**, i8*** %13, align 8, !dbg !3690
  %167 = load i32, i32* %9, align 4, !dbg !3691
  %168 = call i64 @strtoul(i8* %165, i8** %166, i32 %167) #10, !dbg !3692
  store i64 %168, i64* %14, align 8, !dbg !3693
  %169 = load i8**, i8*** %13, align 8, !dbg !3694
  %170 = load i8*, i8** %169, align 8, !dbg !3696
  %171 = load i8*, i8** %7, align 8, !dbg !3697
  %172 = icmp eq i8* %170, %171, !dbg !3698
  %173 = load i32, i32* @x.77
  %174 = load i32, i32* @y.78
  %175 = sub i32 %173, 1
  %176 = mul i32 %173, %175
  %177 = urem i32 %176, 2
  %178 = icmp eq i32 %177, 0
  %179 = icmp slt i32 %174, 10
  %180 = or i1 %178, %179
  br i1 %180, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br i1 %172, label %181, label %233, !dbg !3699

181:                                              ; preds = %originalBBpart224
  %182 = load i8*, i8** %11, align 8, !dbg !3700
  %183 = icmp ne i8* %182, null, !dbg !3700
  br i1 %183, label %184, label %231, !dbg !3703

184:                                              ; preds = %181
  %185 = load i32, i32* @x.77
  %186 = load i32, i32* @y.78
  %187 = sub i32 %185, 1
  %188 = mul i32 %185, %187
  %189 = urem i32 %188, 2
  %190 = icmp eq i32 %189, 0
  %191 = icmp slt i32 %186, 10
  %192 = or i1 %190, %191
  br i1 %192, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %184, %originalBB26alteredBB
  %193 = load i8**, i8*** %13, align 8, !dbg !3704
  %194 = load i8*, i8** %193, align 8, !dbg !3705
  %195 = load i8, i8* %194, align 1, !dbg !3706
  %196 = sext i8 %195 to i32, !dbg !3706
  %197 = icmp ne i32 %196, 0, !dbg !3706
  %198 = load i32, i32* @x.77
  %199 = load i32, i32* @y.78
  %200 = sub i32 %198, 1
  %201 = mul i32 %198, %200
  %202 = urem i32 %201, 2
  %203 = icmp eq i32 %202, 0
  %204 = icmp slt i32 %199, 10
  %205 = or i1 %203, %204
  br i1 %205, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br i1 %197, label %206, label %231, !dbg !3707

206:                                              ; preds = %originalBBpart228
  %207 = load i32, i32* @x.77
  %208 = load i32, i32* @y.78
  %209 = sub i32 %207, 1
  %210 = mul i32 %207, %209
  %211 = urem i32 %210, 2
  %212 = icmp eq i32 %211, 0
  %213 = icmp slt i32 %208, 10
  %214 = or i1 %212, %213
  br i1 %214, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %206, %originalBB30alteredBB
  %215 = load i8*, i8** %11, align 8, !dbg !3708
  %216 = load i8**, i8*** %13, align 8, !dbg !3709
  %217 = load i8*, i8** %216, align 8, !dbg !3710
  %218 = load i8, i8* %217, align 1, !dbg !3711
  %219 = sext i8 %218 to i32, !dbg !3711
  %220 = call i8* @strchr(i8* %215, i32 %219) #13, !dbg !3712
  %221 = icmp ne i8* %220, null, !dbg !3712
  %222 = load i32, i32* @x.77
  %223 = load i32, i32* @y.78
  %224 = sub i32 %222, 1
  %225 = mul i32 %222, %224
  %226 = urem i32 %225, 2
  %227 = icmp eq i32 %226, 0
  %228 = icmp slt i32 %223, 10
  %229 = or i1 %227, %228
  br i1 %229, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br i1 %221, label %230, label %231, !dbg !3713

230:                                              ; preds = %originalBBpart232
  store i64 1, i64* %14, align 8, !dbg !3714
  br label %232, !dbg !3715

231:                                              ; preds = %originalBBpart232, %originalBBpart228, %181
  store i32 4, i32* %6, align 4, !dbg !3716
  br label %653, !dbg !3716

232:                                              ; preds = %230
  br label %292, !dbg !3717

233:                                              ; preds = %originalBBpart224
  %234 = call i32* @__errno_location() #15, !dbg !3718
  %235 = load i32, i32* %234, align 4, !dbg !3718
  %236 = icmp ne i32 %235, 0, !dbg !3720
  br i1 %236, label %237, label %275, !dbg !3721

237:                                              ; preds = %233
  %238 = load i32, i32* @x.77
  %239 = load i32, i32* @y.78
  %240 = sub i32 %238, 1
  %241 = mul i32 %238, %240
  %242 = urem i32 %241, 2
  %243 = icmp eq i32 %242, 0
  %244 = icmp slt i32 %239, 10
  %245 = or i1 %243, %244
  br i1 %245, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %237, %originalBB34alteredBB
  %246 = call i32* @__errno_location() #15, !dbg !3722
  %247 = load i32, i32* %246, align 4, !dbg !3722
  %248 = icmp ne i32 %247, 34, !dbg !3725
  %249 = load i32, i32* @x.77
  %250 = load i32, i32* @y.78
  %251 = sub i32 %249, 1
  %252 = mul i32 %249, %251
  %253 = urem i32 %252, 2
  %254 = icmp eq i32 %253, 0
  %255 = icmp slt i32 %250, 10
  %256 = or i1 %254, %255
  br i1 %256, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  br i1 %248, label %257, label %274, !dbg !3726

257:                                              ; preds = %originalBBpart236
  %258 = load i32, i32* @x.77
  %259 = load i32, i32* @y.78
  %260 = sub i32 %258, 1
  %261 = mul i32 %258, %260
  %262 = urem i32 %261, 2
  %263 = icmp eq i32 %262, 0
  %264 = icmp slt i32 %259, 10
  %265 = or i1 %263, %264
  br i1 %265, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %257, %originalBB38alteredBB
  store i32 4, i32* %6, align 4, !dbg !3727
  %266 = load i32, i32* @x.77
  %267 = load i32, i32* @y.78
  %268 = sub i32 %266, 1
  %269 = mul i32 %266, %268
  %270 = urem i32 %269, 2
  %271 = icmp eq i32 %270, 0
  %272 = icmp slt i32 %267, 10
  %273 = or i1 %271, %272
  br i1 %273, label %originalBBpart240, label %originalBB38alteredBB

originalBBpart240:                                ; preds = %originalBB38
  br label %653, !dbg !3727

274:                                              ; preds = %originalBBpart236
  store i32 1, i32* %15, align 4, !dbg !3728
  br label %275, !dbg !3729

275:                                              ; preds = %274, %233
  %276 = load i32, i32* @x.77
  %277 = load i32, i32* @y.78
  %278 = sub i32 %276, 1
  %279 = mul i32 %276, %278
  %280 = urem i32 %279, 2
  %281 = icmp eq i32 %280, 0
  %282 = icmp slt i32 %277, 10
  %283 = or i1 %281, %282
  br i1 %283, label %originalBB42, label %originalBB42alteredBB

originalBB42:                                     ; preds = %275, %originalBB42alteredBB
  %284 = load i32, i32* @x.77
  %285 = load i32, i32* @y.78
  %286 = sub i32 %284, 1
  %287 = mul i32 %284, %286
  %288 = urem i32 %287, 2
  %289 = icmp eq i32 %288, 0
  %290 = icmp slt i32 %285, 10
  %291 = or i1 %289, %290
  br i1 %291, label %originalBBpart244, label %originalBB42alteredBB

originalBBpart244:                                ; preds = %originalBB42
  br label %292

292:                                              ; preds = %originalBBpart244, %232
  %293 = load i8*, i8** %11, align 8, !dbg !3730
  %294 = icmp ne i8* %293, null, !dbg !3730
  br i1 %294, label %299, label %295, !dbg !3732

295:                                              ; preds = %292
  %296 = load i64, i64* %14, align 8, !dbg !3733
  %297 = load i64*, i64** %10, align 8, !dbg !3735
  store i64 %296, i64* %297, align 8, !dbg !3736
  %298 = load i32, i32* %15, align 4, !dbg !3737
  store i32 %298, i32* %6, align 4, !dbg !3738
  br label %653, !dbg !3738

299:                                              ; preds = %292
  %300 = load i8**, i8*** %13, align 8, !dbg !3739
  %301 = load i8*, i8** %300, align 8, !dbg !3741
  %302 = load i8, i8* %301, align 1, !dbg !3742
  %303 = sext i8 %302 to i32, !dbg !3742
  %304 = icmp ne i32 %303, 0, !dbg !3743
  br i1 %304, label %305, label %633, !dbg !3744

305:                                              ; preds = %299
  call void @llvm.dbg.declare(metadata i32* %18, metadata !3745, metadata !DIExpression()), !dbg !3747
  store i32 1024, i32* %18, align 4, !dbg !3747
  call void @llvm.dbg.declare(metadata i32* %19, metadata !3748, metadata !DIExpression()), !dbg !3749
  store i32 1, i32* %19, align 4, !dbg !3749
  call void @llvm.dbg.declare(metadata i32* %20, metadata !3750, metadata !DIExpression()), !dbg !3751
  %306 = load i8*, i8** %11, align 8, !dbg !3752
  %307 = load i8**, i8*** %13, align 8, !dbg !3754
  %308 = load i8*, i8** %307, align 8, !dbg !3755
  %309 = load i8, i8* %308, align 1, !dbg !3756
  %310 = sext i8 %309 to i32, !dbg !3756
  %311 = call i8* @strchr(i8* %306, i32 %310) #13, !dbg !3757
  %312 = icmp ne i8* %311, null, !dbg !3757
  br i1 %312, label %334, label %313, !dbg !3758

313:                                              ; preds = %305
  %314 = load i32, i32* @x.77
  %315 = load i32, i32* @y.78
  %316 = sub i32 %314, 1
  %317 = mul i32 %314, %316
  %318 = urem i32 %317, 2
  %319 = icmp eq i32 %318, 0
  %320 = icmp slt i32 %315, 10
  %321 = or i1 %319, %320
  br i1 %321, label %originalBB46, label %originalBB46alteredBB

originalBB46:                                     ; preds = %313, %originalBB46alteredBB
  %322 = load i64, i64* %14, align 8, !dbg !3759
  %323 = load i64*, i64** %10, align 8, !dbg !3761
  store i64 %322, i64* %323, align 8, !dbg !3762
  %324 = load i32, i32* %15, align 4, !dbg !3763
  %325 = or i32 %324, 2, !dbg !3764
  store i32 %325, i32* %6, align 4, !dbg !3765
  %326 = load i32, i32* @x.77
  %327 = load i32, i32* @y.78
  %328 = sub i32 %326, 1
  %329 = mul i32 %326, %328
  %330 = urem i32 %329, 2
  %331 = icmp eq i32 %330, 0
  %332 = icmp slt i32 %327, 10
  %333 = or i1 %331, %332
  br i1 %333, label %originalBBpart256, label %originalBB46alteredBB

originalBBpart256:                                ; preds = %originalBB46
  br label %653, !dbg !3765

334:                                              ; preds = %305
  %335 = load i8**, i8*** %13, align 8, !dbg !3766
  %336 = load i8*, i8** %335, align 8, !dbg !3767
  %337 = load i8, i8* %336, align 1, !dbg !3768
  %338 = sext i8 %337 to i32, !dbg !3768
  switch i32 %338, label %447 [
    i32 69, label %339
    i32 71, label %339
    i32 103, label %339
    i32 107, label %339
    i32 75, label %339
    i32 77, label %339
    i32 109, label %339
    i32 80, label %339
    i32 84, label %339
    i32 116, label %339
    i32 89, label %339
    i32 90, label %339
  ], !dbg !3769

339:                                              ; preds = %334, %334, %334, %334, %334, %334, %334, %334, %334, %334, %334, %334
  %340 = load i32, i32* @x.77
  %341 = load i32, i32* @y.78
  %342 = sub i32 %340, 1
  %343 = mul i32 %340, %342
  %344 = urem i32 %343, 2
  %345 = icmp eq i32 %344, 0
  %346 = icmp slt i32 %341, 10
  %347 = or i1 %345, %346
  br i1 %347, label %originalBB58, label %originalBB58alteredBB

originalBB58:                                     ; preds = %339, %originalBB58alteredBB
  %348 = load i8*, i8** %11, align 8, !dbg !3770
  %349 = call i8* @strchr(i8* %348, i32 48) #13, !dbg !3773
  %350 = icmp ne i8* %349, null, !dbg !3773
  %351 = load i32, i32* @x.77
  %352 = load i32, i32* @y.78
  %353 = sub i32 %351, 1
  %354 = mul i32 %351, %353
  %355 = urem i32 %354, 2
  %356 = icmp eq i32 %355, 0
  %357 = icmp slt i32 %352, 10
  %358 = or i1 %356, %357
  br i1 %358, label %originalBBpart260, label %originalBB58alteredBB

originalBBpart260:                                ; preds = %originalBB58
  br i1 %350, label %359, label %430, !dbg !3774

359:                                              ; preds = %originalBBpart260
  %360 = load i8**, i8*** %13, align 8, !dbg !3775
  %361 = getelementptr inbounds i8*, i8** %360, i64 0, !dbg !3775
  %362 = load i8*, i8** %361, align 8, !dbg !3775
  %363 = getelementptr inbounds i8, i8* %362, i64 1, !dbg !3775
  %364 = load i8, i8* %363, align 1, !dbg !3775
  %365 = sext i8 %364 to i32, !dbg !3775
  switch i32 %365, label %413 [
    i32 105, label %366
    i32 66, label %410
    i32 68, label %410
  ], !dbg !3776

366:                                              ; preds = %359
  %367 = load i32, i32* @x.77
  %368 = load i32, i32* @y.78
  %369 = sub i32 %367, 1
  %370 = mul i32 %367, %369
  %371 = urem i32 %370, 2
  %372 = icmp eq i32 %371, 0
  %373 = icmp slt i32 %368, 10
  %374 = or i1 %372, %373
  br i1 %374, label %originalBB62, label %originalBB62alteredBB

originalBB62:                                     ; preds = %366, %originalBB62alteredBB
  %375 = load i8**, i8*** %13, align 8, !dbg !3777
  %376 = getelementptr inbounds i8*, i8** %375, i64 0, !dbg !3777
  %377 = load i8*, i8** %376, align 8, !dbg !3777
  %378 = getelementptr inbounds i8, i8* %377, i64 2, !dbg !3777
  %379 = load i8, i8* %378, align 1, !dbg !3777
  %380 = sext i8 %379 to i32, !dbg !3777
  %381 = icmp eq i32 %380, 66, !dbg !3780
  %382 = load i32, i32* @x.77
  %383 = load i32, i32* @y.78
  %384 = sub i32 %382, 1
  %385 = mul i32 %382, %384
  %386 = urem i32 %385, 2
  %387 = icmp eq i32 %386, 0
  %388 = icmp slt i32 %383, 10
  %389 = or i1 %387, %388
  br i1 %389, label %originalBBpart264, label %originalBB62alteredBB

originalBBpart264:                                ; preds = %originalBB62
  br i1 %381, label %390, label %409, !dbg !3781

390:                                              ; preds = %originalBBpart264
  %391 = load i32, i32* @x.77
  %392 = load i32, i32* @y.78
  %393 = sub i32 %391, 1
  %394 = mul i32 %391, %393
  %395 = urem i32 %394, 2
  %396 = icmp eq i32 %395, 0
  %397 = icmp slt i32 %392, 10
  %398 = or i1 %396, %397
  br i1 %398, label %originalBB66, label %originalBB66alteredBB

originalBB66:                                     ; preds = %390, %originalBB66alteredBB
  %399 = load i32, i32* %19, align 4, !dbg !3782
  %400 = add nsw i32 %399, 2, !dbg !3782
  store i32 %400, i32* %19, align 4, !dbg !3782
  %401 = load i32, i32* @x.77
  %402 = load i32, i32* @y.78
  %403 = sub i32 %401, 1
  %404 = mul i32 %401, %403
  %405 = urem i32 %404, 2
  %406 = icmp eq i32 %405, 0
  %407 = icmp slt i32 %402, 10
  %408 = or i1 %406, %407
  br i1 %408, label %originalBBpart282, label %originalBB66alteredBB

originalBBpart282:                                ; preds = %originalBB66
  br label %409, !dbg !3783

409:                                              ; preds = %originalBBpart282, %originalBBpart264
  br label %413, !dbg !3784

410:                                              ; preds = %359, %359
  store i32 1000, i32* %18, align 4, !dbg !3785
  %411 = load i32, i32* %19, align 4, !dbg !3786
  %412 = add nsw i32 %411, 1, !dbg !3786
  store i32 %412, i32* %19, align 4, !dbg !3786
  br label %413, !dbg !3787

413:                                              ; preds = %410, %409, %359
  %414 = load i32, i32* @x.77
  %415 = load i32, i32* @y.78
  %416 = sub i32 %414, 1
  %417 = mul i32 %414, %416
  %418 = urem i32 %417, 2
  %419 = icmp eq i32 %418, 0
  %420 = icmp slt i32 %415, 10
  %421 = or i1 %419, %420
  br i1 %421, label %originalBB84, label %originalBB84alteredBB

originalBB84:                                     ; preds = %413, %originalBB84alteredBB
  %422 = load i32, i32* @x.77
  %423 = load i32, i32* @y.78
  %424 = sub i32 %422, 1
  %425 = mul i32 %422, %424
  %426 = urem i32 %425, 2
  %427 = icmp eq i32 %426, 0
  %428 = icmp slt i32 %423, 10
  %429 = or i1 %427, %428
  br i1 %429, label %originalBBpart286, label %originalBB84alteredBB

originalBBpart286:                                ; preds = %originalBB84
  br label %430, !dbg !3788

430:                                              ; preds = %originalBBpart286, %originalBBpart260
  %431 = load i32, i32* @x.77
  %432 = load i32, i32* @y.78
  %433 = sub i32 %431, 1
  %434 = mul i32 %431, %433
  %435 = urem i32 %434, 2
  %436 = icmp eq i32 %435, 0
  %437 = icmp slt i32 %432, 10
  %438 = or i1 %436, %437
  br i1 %438, label %originalBB88, label %originalBB88alteredBB

originalBB88:                                     ; preds = %430, %originalBB88alteredBB
  %439 = load i32, i32* @x.77
  %440 = load i32, i32* @y.78
  %441 = sub i32 %439, 1
  %442 = mul i32 %439, %441
  %443 = urem i32 %442, 2
  %444 = icmp eq i32 %443, 0
  %445 = icmp slt i32 %440, 10
  %446 = or i1 %444, %445
  br i1 %446, label %originalBBpart290, label %originalBB88alteredBB

originalBBpart290:                                ; preds = %originalBB88
  br label %447, !dbg !3789

447:                                              ; preds = %originalBBpart290, %334
  %448 = load i8**, i8*** %13, align 8, !dbg !3790
  %449 = load i8*, i8** %448, align 8, !dbg !3791
  %450 = load i8, i8* %449, align 1, !dbg !3792
  %451 = sext i8 %450 to i32, !dbg !3792
  switch i32 %451, label %563 [
    i32 98, label %452
    i32 66, label %470
    i32 99, label %472
    i32 69, label %489
    i32 71, label %508
    i32 103, label %508
    i32 107, label %511
    i32 75, label %511
    i32 77, label %514
    i32 109, label %514
    i32 80, label %533
    i32 84, label %536
    i32 116, label %536
    i32 119, label %539
    i32 89, label %557
    i32 90, label %560
  ], !dbg !3793

452:                                              ; preds = %447
  %453 = load i32, i32* @x.77
  %454 = load i32, i32* @y.78
  %455 = sub i32 %453, 1
  %456 = mul i32 %453, %455
  %457 = urem i32 %456, 2
  %458 = icmp eq i32 %457, 0
  %459 = icmp slt i32 %454, 10
  %460 = or i1 %458, %459
  br i1 %460, label %originalBB92, label %originalBB92alteredBB

originalBB92:                                     ; preds = %452, %originalBB92alteredBB
  %461 = call i32 @bkm_scale(i64* %14, i32 512), !dbg !3794
  store i32 %461, i32* %20, align 4, !dbg !3796
  %462 = load i32, i32* @x.77
  %463 = load i32, i32* @y.78
  %464 = sub i32 %462, 1
  %465 = mul i32 %462, %464
  %466 = urem i32 %465, 2
  %467 = icmp eq i32 %466, 0
  %468 = icmp slt i32 %463, 10
  %469 = or i1 %467, %468
  br i1 %469, label %originalBBpart294, label %originalBB92alteredBB

originalBBpart294:                                ; preds = %originalBB92
  br label %584, !dbg !3797

470:                                              ; preds = %447
  %471 = call i32 @bkm_scale(i64* %14, i32 1024), !dbg !3798
  store i32 %471, i32* %20, align 4, !dbg !3799
  br label %584, !dbg !3800

472:                                              ; preds = %447
  %473 = load i32, i32* @x.77
  %474 = load i32, i32* @y.78
  %475 = sub i32 %473, 1
  %476 = mul i32 %473, %475
  %477 = urem i32 %476, 2
  %478 = icmp eq i32 %477, 0
  %479 = icmp slt i32 %474, 10
  %480 = or i1 %478, %479
  br i1 %480, label %originalBB96, label %originalBB96alteredBB

originalBB96:                                     ; preds = %472, %originalBB96alteredBB
  store i32 0, i32* %20, align 4, !dbg !3801
  %481 = load i32, i32* @x.77
  %482 = load i32, i32* @y.78
  %483 = sub i32 %481, 1
  %484 = mul i32 %481, %483
  %485 = urem i32 %484, 2
  %486 = icmp eq i32 %485, 0
  %487 = icmp slt i32 %482, 10
  %488 = or i1 %486, %487
  br i1 %488, label %originalBBpart298, label %originalBB96alteredBB

originalBBpart298:                                ; preds = %originalBB96
  br label %584, !dbg !3802

489:                                              ; preds = %447
  %490 = load i32, i32* @x.77
  %491 = load i32, i32* @y.78
  %492 = sub i32 %490, 1
  %493 = mul i32 %490, %492
  %494 = urem i32 %493, 2
  %495 = icmp eq i32 %494, 0
  %496 = icmp slt i32 %491, 10
  %497 = or i1 %495, %496
  br i1 %497, label %originalBB100, label %originalBB100alteredBB

originalBB100:                                    ; preds = %489, %originalBB100alteredBB
  %498 = load i32, i32* %18, align 4, !dbg !3803
  %499 = call i32 @bkm_scale_by_power(i64* %14, i32 %498, i32 6), !dbg !3804
  store i32 %499, i32* %20, align 4, !dbg !3805
  %500 = load i32, i32* @x.77
  %501 = load i32, i32* @y.78
  %502 = sub i32 %500, 1
  %503 = mul i32 %500, %502
  %504 = urem i32 %503, 2
  %505 = icmp eq i32 %504, 0
  %506 = icmp slt i32 %501, 10
  %507 = or i1 %505, %506
  br i1 %507, label %originalBBpart2102, label %originalBB100alteredBB

originalBBpart2102:                               ; preds = %originalBB100
  br label %584, !dbg !3806

508:                                              ; preds = %447, %447
  %509 = load i32, i32* %18, align 4, !dbg !3807
  %510 = call i32 @bkm_scale_by_power(i64* %14, i32 %509, i32 3), !dbg !3808
  store i32 %510, i32* %20, align 4, !dbg !3809
  br label %584, !dbg !3810

511:                                              ; preds = %447, %447
  %512 = load i32, i32* %18, align 4, !dbg !3811
  %513 = call i32 @bkm_scale_by_power(i64* %14, i32 %512, i32 1), !dbg !3812
  store i32 %513, i32* %20, align 4, !dbg !3813
  br label %584, !dbg !3814

514:                                              ; preds = %447, %447
  %515 = load i32, i32* @x.77
  %516 = load i32, i32* @y.78
  %517 = sub i32 %515, 1
  %518 = mul i32 %515, %517
  %519 = urem i32 %518, 2
  %520 = icmp eq i32 %519, 0
  %521 = icmp slt i32 %516, 10
  %522 = or i1 %520, %521
  br i1 %522, label %originalBB104, label %originalBB104alteredBB

originalBB104:                                    ; preds = %514, %originalBB104alteredBB
  %523 = load i32, i32* %18, align 4, !dbg !3815
  %524 = call i32 @bkm_scale_by_power(i64* %14, i32 %523, i32 2), !dbg !3816
  store i32 %524, i32* %20, align 4, !dbg !3817
  %525 = load i32, i32* @x.77
  %526 = load i32, i32* @y.78
  %527 = sub i32 %525, 1
  %528 = mul i32 %525, %527
  %529 = urem i32 %528, 2
  %530 = icmp eq i32 %529, 0
  %531 = icmp slt i32 %526, 10
  %532 = or i1 %530, %531
  br i1 %532, label %originalBBpart2106, label %originalBB104alteredBB

originalBBpart2106:                               ; preds = %originalBB104
  br label %584, !dbg !3818

533:                                              ; preds = %447
  %534 = load i32, i32* %18, align 4, !dbg !3819
  %535 = call i32 @bkm_scale_by_power(i64* %14, i32 %534, i32 5), !dbg !3820
  store i32 %535, i32* %20, align 4, !dbg !3821
  br label %584, !dbg !3822

536:                                              ; preds = %447, %447
  %537 = load i32, i32* %18, align 4, !dbg !3823
  %538 = call i32 @bkm_scale_by_power(i64* %14, i32 %537, i32 4), !dbg !3824
  store i32 %538, i32* %20, align 4, !dbg !3825
  br label %584, !dbg !3826

539:                                              ; preds = %447
  %540 = load i32, i32* @x.77
  %541 = load i32, i32* @y.78
  %542 = sub i32 %540, 1
  %543 = mul i32 %540, %542
  %544 = urem i32 %543, 2
  %545 = icmp eq i32 %544, 0
  %546 = icmp slt i32 %541, 10
  %547 = or i1 %545, %546
  br i1 %547, label %originalBB108, label %originalBB108alteredBB

originalBB108:                                    ; preds = %539, %originalBB108alteredBB
  %548 = call i32 @bkm_scale(i64* %14, i32 2), !dbg !3827
  store i32 %548, i32* %20, align 4, !dbg !3828
  %549 = load i32, i32* @x.77
  %550 = load i32, i32* @y.78
  %551 = sub i32 %549, 1
  %552 = mul i32 %549, %551
  %553 = urem i32 %552, 2
  %554 = icmp eq i32 %553, 0
  %555 = icmp slt i32 %550, 10
  %556 = or i1 %554, %555
  br i1 %556, label %originalBBpart2110, label %originalBB108alteredBB

originalBBpart2110:                               ; preds = %originalBB108
  br label %584, !dbg !3829

557:                                              ; preds = %447
  %558 = load i32, i32* %18, align 4, !dbg !3830
  %559 = call i32 @bkm_scale_by_power(i64* %14, i32 %558, i32 8), !dbg !3831
  store i32 %559, i32* %20, align 4, !dbg !3832
  br label %584, !dbg !3833

560:                                              ; preds = %447
  %561 = load i32, i32* %18, align 4, !dbg !3834
  %562 = call i32 @bkm_scale_by_power(i64* %14, i32 %561, i32 7), !dbg !3835
  store i32 %562, i32* %20, align 4, !dbg !3836
  br label %584, !dbg !3837

563:                                              ; preds = %447
  %564 = load i32, i32* @x.77
  %565 = load i32, i32* @y.78
  %566 = sub i32 %564, 1
  %567 = mul i32 %564, %566
  %568 = urem i32 %567, 2
  %569 = icmp eq i32 %568, 0
  %570 = icmp slt i32 %565, 10
  %571 = or i1 %569, %570
  br i1 %571, label %originalBB112, label %originalBB112alteredBB

originalBB112:                                    ; preds = %563, %originalBB112alteredBB
  %572 = load i64, i64* %14, align 8, !dbg !3838
  %573 = load i64*, i64** %10, align 8, !dbg !3839
  store i64 %572, i64* %573, align 8, !dbg !3840
  %574 = load i32, i32* %15, align 4, !dbg !3841
  %575 = or i32 %574, 2, !dbg !3842
  store i32 %575, i32* %6, align 4, !dbg !3843
  %576 = load i32, i32* @x.77
  %577 = load i32, i32* @y.78
  %578 = sub i32 %576, 1
  %579 = mul i32 %576, %578
  %580 = urem i32 %579, 2
  %581 = icmp eq i32 %580, 0
  %582 = icmp slt i32 %577, 10
  %583 = or i1 %581, %582
  br i1 %583, label %originalBBpart2117, label %originalBB112alteredBB

originalBBpart2117:                               ; preds = %originalBB112
  br label %653, !dbg !3843

584:                                              ; preds = %560, %557, %originalBBpart2110, %536, %533, %originalBBpart2106, %511, %508, %originalBBpart2102, %originalBBpart298, %470, %originalBBpart294
  %585 = load i32, i32* %20, align 4, !dbg !3844
  %586 = load i32, i32* %15, align 4, !dbg !3845
  %587 = or i32 %586, %585, !dbg !3845
  store i32 %587, i32* %15, align 4, !dbg !3845
  %588 = load i32, i32* %19, align 4, !dbg !3846
  %589 = load i8**, i8*** %13, align 8, !dbg !3847
  %590 = load i8*, i8** %589, align 8, !dbg !3848
  %591 = sext i32 %588 to i64, !dbg !3848
  %592 = getelementptr inbounds i8, i8* %590, i64 %591, !dbg !3848
  store i8* %592, i8** %589, align 8, !dbg !3848
  %593 = load i8**, i8*** %13, align 8, !dbg !3849
  %594 = load i8*, i8** %593, align 8, !dbg !3851
  %595 = load i8, i8* %594, align 1, !dbg !3852
  %596 = icmp ne i8 %595, 0, !dbg !3852
  br i1 %596, label %597, label %616, !dbg !3853

597:                                              ; preds = %584
  %598 = load i32, i32* @x.77
  %599 = load i32, i32* @y.78
  %600 = sub i32 %598, 1
  %601 = mul i32 %598, %600
  %602 = urem i32 %601, 2
  %603 = icmp eq i32 %602, 0
  %604 = icmp slt i32 %599, 10
  %605 = or i1 %603, %604
  br i1 %605, label %originalBB119, label %originalBB119alteredBB

originalBB119:                                    ; preds = %597, %originalBB119alteredBB
  %606 = load i32, i32* %15, align 4, !dbg !3854
  %607 = or i32 %606, 2, !dbg !3854
  store i32 %607, i32* %15, align 4, !dbg !3854
  %608 = load i32, i32* @x.77
  %609 = load i32, i32* @y.78
  %610 = sub i32 %608, 1
  %611 = mul i32 %608, %610
  %612 = urem i32 %611, 2
  %613 = icmp eq i32 %612, 0
  %614 = icmp slt i32 %609, 10
  %615 = or i1 %613, %614
  br i1 %615, label %originalBBpart2126, label %originalBB119alteredBB

originalBBpart2126:                               ; preds = %originalBB119
  br label %616, !dbg !3855

616:                                              ; preds = %originalBBpart2126, %584
  %617 = load i32, i32* @x.77
  %618 = load i32, i32* @y.78
  %619 = sub i32 %617, 1
  %620 = mul i32 %617, %619
  %621 = urem i32 %620, 2
  %622 = icmp eq i32 %621, 0
  %623 = icmp slt i32 %618, 10
  %624 = or i1 %622, %623
  br i1 %624, label %originalBB128, label %originalBB128alteredBB

originalBB128:                                    ; preds = %616, %originalBB128alteredBB
  %625 = load i32, i32* @x.77
  %626 = load i32, i32* @y.78
  %627 = sub i32 %625, 1
  %628 = mul i32 %625, %627
  %629 = urem i32 %628, 2
  %630 = icmp eq i32 %629, 0
  %631 = icmp slt i32 %626, 10
  %632 = or i1 %630, %631
  br i1 %632, label %originalBBpart2130, label %originalBB128alteredBB

originalBBpart2130:                               ; preds = %originalBB128
  br label %633, !dbg !3856

633:                                              ; preds = %originalBBpart2130, %299
  %634 = load i32, i32* @x.77
  %635 = load i32, i32* @y.78
  %636 = sub i32 %634, 1
  %637 = mul i32 %634, %636
  %638 = urem i32 %637, 2
  %639 = icmp eq i32 %638, 0
  %640 = icmp slt i32 %635, 10
  %641 = or i1 %639, %640
  br i1 %641, label %originalBB132, label %originalBB132alteredBB

originalBB132:                                    ; preds = %633, %originalBB132alteredBB
  %642 = load i64, i64* %14, align 8, !dbg !3857
  %643 = load i64*, i64** %10, align 8, !dbg !3858
  store i64 %642, i64* %643, align 8, !dbg !3859
  %644 = load i32, i32* %15, align 4, !dbg !3860
  store i32 %644, i32* %6, align 4, !dbg !3861
  %645 = load i32, i32* @x.77
  %646 = load i32, i32* @y.78
  %647 = sub i32 %645, 1
  %648 = mul i32 %645, %647
  %649 = urem i32 %648, 2
  %650 = icmp eq i32 %649, 0
  %651 = icmp slt i32 %646, 10
  %652 = or i1 %650, %651
  br i1 %652, label %originalBBpart2134, label %originalBB132alteredBB

originalBBpart2134:                               ; preds = %originalBB132
  br label %653, !dbg !3861

653:                                              ; preds = %originalBBpart2134, %originalBBpart2117, %originalBBpart256, %295, %originalBBpart240, %231, %155
  %654 = load i32, i32* %6, align 4, !dbg !3862
  ret i32 %654, !dbg !3862

originalBBalteredBB:                              ; preds = %originalBB, %23
  %655 = load i32, i32* %9, align 4, !dbg !3659
  %656 = icmp sle i32 %655, 36, !dbg !3659
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %42
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %63
  %657 = load i8**, i8*** %8, align 8, !dbg !3664
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %81
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %98
  store i8** %99, i8*** %13, align 8, !dbg !3665
  %658 = call i32* @__errno_location() #15, !dbg !3666
  store i32 0, i32* %658, align 4, !dbg !3667
  call void @llvm.dbg.declare(metadata !4, metadata !3863, metadata !DIExpression()), !dbg !3671
  %659 = load i8*, i8** %7, align 8, !dbg !3672
  store i8* %659, i8** %16, align 8, !dbg !3671
  call void @llvm.dbg.declare(metadata !4, metadata !3868, metadata !DIExpression()), !dbg !3674
  %660 = load i8*, i8** %16, align 8, !dbg !3675
  %661 = load i8, i8* %660, align 1, !dbg !3676
  store i8 %661, i8* %17, align 1, !dbg !3674
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %131
  %662 = load i8*, i8** %16, align 8, !dbg !3679
  %663 = getelementptr inbounds i8, i8* %662, i32 1, !dbg !3679
  store i8* %663, i8** %16, align 8, !dbg !3679
  %664 = load i8, i8* %663, align 1, !dbg !3680
  store i8 %664, i8* %17, align 1, !dbg !3681
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %156
  %665 = load i8*, i8** %7, align 8, !dbg !3689
  %666 = load i8**, i8*** %13, align 8, !dbg !3690
  %667 = load i32, i32* %9, align 4, !dbg !3691
  %668 = call i64 @strtoul(i8* %665, i8** %666, i32 %667) #10, !dbg !3692
  store i64 %668, i64* %14, align 8, !dbg !3693
  %669 = load i8**, i8*** %13, align 8, !dbg !3694
  %670 = load i8*, i8** %669, align 8, !dbg !3696
  %671 = load i8*, i8** %7, align 8, !dbg !3697
  %672 = icmp eq i8* %670, %671, !dbg !3698
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %184
  %673 = load i8**, i8*** %13, align 8, !dbg !3704
  %674 = load i8*, i8** %673, align 8, !dbg !3705
  %675 = load i8, i8* %674, align 1, !dbg !3706
  %676 = sext i8 %675 to i32, !dbg !3706
  %677 = icmp ne i32 %676, 0, !dbg !3706
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %206
  %678 = load i8*, i8** %11, align 8, !dbg !3708
  %679 = load i8**, i8*** %13, align 8, !dbg !3709
  %680 = load i8*, i8** %679, align 8, !dbg !3710
  %681 = load i8, i8* %680, align 1, !dbg !3711
  %682 = sext i8 %681 to i32, !dbg !3711
  %683 = call i8* @strchr(i8* %678, i32 %682) #13, !dbg !3712
  %684 = icmp ne i8* %683, null, !dbg !3712
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %237
  %685 = call i32* @__errno_location() #15, !dbg !3722
  %686 = load i32, i32* %685, align 4, !dbg !3722
  %687 = icmp ne i32 %686, 34, !dbg !3725
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %257
  store i32 4, i32* %6, align 4, !dbg !3727
  br label %originalBB38

originalBB42alteredBB:                            ; preds = %originalBB42, %275
  br label %originalBB42

originalBB46alteredBB:                            ; preds = %originalBB46, %313
  %688 = load i64, i64* %14, align 8, !dbg !3759
  %689 = load i64*, i64** %10, align 8, !dbg !3761
  store i64 %688, i64* %689, align 8, !dbg !3762
  %690 = load i32, i32* %15, align 4, !dbg !3763
  %_ = shl i32 %690, 2
  %_47 = sub i32 %690, 2
  %gen = mul i32 %_47, 2
  %_48 = sub i32 0, %690
  %gen49 = add i32 %_48, 2
  %_50 = shl i32 %690, 2
  %_51 = sub i32 0, %690
  %gen52 = add i32 %_51, 2
  %_53 = sub i32 0, %690
  %gen54 = add i32 %_53, 2
  %691 = or i32 %690, 2, !dbg !3764
  store i32 %691, i32* %6, align 4, !dbg !3765
  br label %originalBB46

originalBB58alteredBB:                            ; preds = %originalBB58, %339
  %692 = load i8*, i8** %11, align 8, !dbg !3770
  %693 = call i8* @strchr(i8* %692, i32 48) #13, !dbg !3773
  %694 = icmp ne i8* %693, null, !dbg !3773
  br label %originalBB58

originalBB62alteredBB:                            ; preds = %originalBB62, %366
  %695 = load i8**, i8*** %13, align 8, !dbg !3777
  %696 = getelementptr inbounds i8*, i8** %695, i64 0, !dbg !3777
  %697 = load i8*, i8** %696, align 8, !dbg !3777
  %698 = getelementptr inbounds i8, i8* %697, i64 2, !dbg !3777
  %699 = load i8, i8* %698, align 1, !dbg !3777
  %700 = sext i8 %699 to i32, !dbg !3777
  %701 = icmp eq i32 %700, 66, !dbg !3780
  br label %originalBB62

originalBB66alteredBB:                            ; preds = %originalBB66, %390
  %702 = load i32, i32* %19, align 4, !dbg !3782
  %_67 = sub i32 0, %702
  %gen68 = add i32 %_67, 2
  %_69 = sub i32 0, %702
  %gen70 = add i32 %_69, 2
  %_71 = sub i32 0, %702
  %gen72 = add i32 %_71, 2
  %_73 = shl i32 %702, 2
  %_74 = sub i32 %702, 2
  %gen75 = mul i32 %_74, 2
  %_76 = sub i32 0, %702
  %gen77 = add i32 %_76, 2
  %_78 = shl i32 %702, 2
  %_79 = sub i32 0, %702
  %gen80 = add i32 %_79, 2
  %703 = add nsw i32 %702, 2, !dbg !3782
  store i32 %703, i32* %19, align 4, !dbg !3782
  br label %originalBB66

originalBB84alteredBB:                            ; preds = %originalBB84, %413
  br label %originalBB84

originalBB88alteredBB:                            ; preds = %originalBB88, %430
  br label %originalBB88

originalBB92alteredBB:                            ; preds = %originalBB92, %452
  %704 = call i32 @bkm_scale(i64* %14, i32 512), !dbg !3794
  store i32 %704, i32* %20, align 4, !dbg !3796
  br label %originalBB92

originalBB96alteredBB:                            ; preds = %originalBB96, %472
  store i32 0, i32* %20, align 4, !dbg !3801
  br label %originalBB96

originalBB100alteredBB:                           ; preds = %originalBB100, %489
  %705 = load i32, i32* %18, align 4, !dbg !3803
  %706 = call i32 @bkm_scale_by_power(i64* %14, i32 %705, i32 6), !dbg !3804
  store i32 %706, i32* %20, align 4, !dbg !3805
  br label %originalBB100

originalBB104alteredBB:                           ; preds = %originalBB104, %514
  %707 = load i32, i32* %18, align 4, !dbg !3815
  %708 = call i32 @bkm_scale_by_power(i64* %14, i32 %707, i32 2), !dbg !3816
  store i32 %708, i32* %20, align 4, !dbg !3817
  br label %originalBB104

originalBB108alteredBB:                           ; preds = %originalBB108, %539
  %709 = call i32 @bkm_scale(i64* %14, i32 2), !dbg !3827
  store i32 %709, i32* %20, align 4, !dbg !3828
  br label %originalBB108

originalBB112alteredBB:                           ; preds = %originalBB112, %563
  %710 = load i64, i64* %14, align 8, !dbg !3838
  %711 = load i64*, i64** %10, align 8, !dbg !3839
  store i64 %710, i64* %711, align 8, !dbg !3840
  %712 = load i32, i32* %15, align 4, !dbg !3841
  %_113 = shl i32 %712, 2
  %_114 = sub i32 %712, 2
  %gen115 = mul i32 %_114, 2
  %713 = or i32 %712, 2, !dbg !3842
  store i32 %713, i32* %6, align 4, !dbg !3843
  br label %originalBB112

originalBB119alteredBB:                           ; preds = %originalBB119, %597
  %714 = load i32, i32* %15, align 4, !dbg !3854
  %_120 = sub i32 0, %714
  %gen121 = add i32 %_120, 2
  %_122 = sub i32 0, %714
  %gen123 = add i32 %_122, 2
  %_124 = shl i32 %714, 2
  %715 = or i32 %714, 2, !dbg !3854
  store i32 %715, i32* %15, align 4, !dbg !3854
  br label %originalBB119

originalBB128alteredBB:                           ; preds = %originalBB128, %616
  br label %originalBB128

originalBB132alteredBB:                           ; preds = %originalBB132, %633
  %716 = load i64, i64* %14, align 8, !dbg !3857
  %717 = load i64*, i64** %10, align 8, !dbg !3858
  store i64 %716, i64* %717, align 8, !dbg !3859
  %718 = load i32, i32* %15, align 4, !dbg !3860
  store i32 %718, i32* %6, align 4, !dbg !3861
  br label %originalBB132
}

; Function Attrs: noreturn nounwind
declare dso_local void @__assert_fail(i8*, i8*, i32, i8*) #5

; Function Attrs: nounwind
declare dso_local i64 @strtoul(i8*, i8**, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @bkm_scale(i64*, i32) #4 !dbg !3869 {
  %3 = alloca i32, align 4
  %4 = alloca i64*, align 8
  %5 = alloca i32, align 4
  store i64* %0, i64** %4, align 8
  call void @llvm.dbg.declare(metadata i64** %4, metadata !3872, metadata !DIExpression()), !dbg !3873
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !3874, metadata !DIExpression()), !dbg !3875
  %6 = load i32, i32* %5, align 4, !dbg !3876
  %7 = sext i32 %6 to i64, !dbg !3876
  %8 = udiv i64 -1, %7, !dbg !3878
  %9 = load i64*, i64** %4, align 8, !dbg !3879
  %10 = load i64, i64* %9, align 8, !dbg !3880
  %11 = icmp ult i64 %8, %10, !dbg !3881
  br i1 %11, label %12, label %30, !dbg !3882

12:                                               ; preds = %2
  %13 = load i32, i32* @x.79
  %14 = load i32, i32* @y.80
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %12, %originalBBalteredBB
  %21 = load i64*, i64** %4, align 8, !dbg !3883
  store i64 -1, i64* %21, align 8, !dbg !3885
  store i32 1, i32* %3, align 4, !dbg !3886
  %22 = load i32, i32* @x.79
  %23 = load i32, i32* @y.80
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %36, !dbg !3886

30:                                               ; preds = %2
  %31 = load i32, i32* %5, align 4, !dbg !3887
  %32 = sext i32 %31 to i64, !dbg !3887
  %33 = load i64*, i64** %4, align 8, !dbg !3888
  %34 = load i64, i64* %33, align 8, !dbg !3889
  %35 = mul i64 %34, %32, !dbg !3889
  store i64 %35, i64* %33, align 8, !dbg !3889
  store i32 0, i32* %3, align 4, !dbg !3890
  br label %36, !dbg !3890

36:                                               ; preds = %30, %originalBBpart2
  %37 = load i32, i32* %3, align 4, !dbg !3891
  ret i32 %37, !dbg !3891

originalBBalteredBB:                              ; preds = %originalBB, %12
  %38 = load i64*, i64** %4, align 8, !dbg !3883
  store i64 -1, i64* %38, align 8, !dbg !3885
  store i32 1, i32* %3, align 4, !dbg !3886
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @bkm_scale_by_power(i64*, i32, i32) #4 !dbg !3892 {
  %4 = alloca i64*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store i64* %0, i64** %4, align 8
  call void @llvm.dbg.declare(metadata i64** %4, metadata !3895, metadata !DIExpression()), !dbg !3896
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !3897, metadata !DIExpression()), !dbg !3898
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !3899, metadata !DIExpression()), !dbg !3900
  call void @llvm.dbg.declare(metadata i32* %7, metadata !3901, metadata !DIExpression()), !dbg !3902
  store i32 0, i32* %7, align 4, !dbg !3902
  br label %8, !dbg !3903

8:                                                ; preds = %originalBBpart220, %3
  %9 = load i32, i32* @x.81
  %10 = load i32, i32* @y.82
  %11 = sub i32 %9, 1
  %12 = mul i32 %9, %11
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = icmp slt i32 %10, 10
  %16 = or i1 %14, %15
  br i1 %16, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %8, %originalBBalteredBB
  %17 = load i32, i32* %6, align 4, !dbg !3904
  %18 = add nsw i32 %17, -1, !dbg !3904
  store i32 %18, i32* %6, align 4, !dbg !3904
  %19 = icmp ne i32 %17, 0, !dbg !3903
  %20 = load i32, i32* @x.81
  %21 = load i32, i32* @y.82
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %19, label %28, label %50, !dbg !3903

28:                                               ; preds = %originalBBpart2
  %29 = load i32, i32* @x.81
  %30 = load i32, i32* @y.82
  %31 = sub i32 %29, 1
  %32 = mul i32 %29, %31
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %34, %35
  br i1 %36, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %28, %originalBB6alteredBB
  %37 = load i64*, i64** %4, align 8, !dbg !3905
  %38 = load i32, i32* %5, align 4, !dbg !3906
  %39 = call i32 @bkm_scale(i64* %37, i32 %38), !dbg !3907
  %40 = load i32, i32* %7, align 4, !dbg !3908
  %41 = or i32 %40, %39, !dbg !3908
  store i32 %41, i32* %7, align 4, !dbg !3908
  %42 = load i32, i32* @x.81
  %43 = load i32, i32* @y.82
  %44 = sub i32 %42, 1
  %45 = mul i32 %42, %44
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %47, %48
  br i1 %49, label %originalBBpart220, label %originalBB6alteredBB

originalBBpart220:                                ; preds = %originalBB6
  br label %8, !dbg !3903, !llvm.loop !3909

50:                                               ; preds = %originalBBpart2
  %51 = load i32, i32* @x.81
  %52 = load i32, i32* @y.82
  %53 = sub i32 %51, 1
  %54 = mul i32 %51, %53
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %52, 10
  %58 = or i1 %56, %57
  br i1 %58, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %50, %originalBB22alteredBB
  %59 = load i32, i32* %7, align 4, !dbg !3911
  %60 = load i32, i32* @x.81
  %61 = load i32, i32* @y.82
  %62 = sub i32 %60, 1
  %63 = mul i32 %60, %62
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %61, 10
  %67 = or i1 %65, %66
  br i1 %67, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  ret i32 %59, !dbg !3912

originalBBalteredBB:                              ; preds = %originalBB, %8
  %68 = load i32, i32* %6, align 4, !dbg !3904
  %_ = sub i32 %68, -1
  %gen = mul i32 %_, -1
  %_1 = shl i32 %68, -1
  %_2 = sub i32 0, %68
  %gen3 = add i32 %_2, -1
  %_4 = sub i32 %68, -1
  %gen5 = mul i32 %_4, -1
  %69 = add nsw i32 %68, -1, !dbg !3904
  store i32 %69, i32* %6, align 4, !dbg !3904
  %70 = icmp ne i32 %68, 0, !dbg !3903
  br label %originalBB

originalBB6alteredBB:                             ; preds = %originalBB6, %28
  %71 = load i64*, i64** %4, align 8, !dbg !3905
  %72 = load i32, i32* %5, align 4, !dbg !3906
  %73 = call i32 @bkm_scale(i64* %71, i32 %72), !dbg !3907
  %74 = load i32, i32* %7, align 4, !dbg !3908
  %_7 = shl i32 %74, %73
  %_8 = sub i32 %74, %73
  %gen9 = mul i32 %_8, %73
  %_10 = sub i32 0, %74
  %gen11 = add i32 %_10, %73
  %_12 = sub i32 %74, %73
  %gen13 = mul i32 %_12, %73
  %_14 = sub i32 0, %74
  %gen15 = add i32 %_14, %73
  %_16 = shl i32 %74, %73
  %_17 = sub i32 0, %74
  %gen18 = add i32 %_17, %73
  %75 = or i32 %74, %73, !dbg !3908
  store i32 %75, i32* %7, align 4, !dbg !3908
  br label %originalBB6

originalBB22alteredBB:                            ; preds = %originalBB22, %50
  %76 = load i32, i32* %7, align 4, !dbg !3911
  br label %originalBB22
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @rpl_mbrtowc(i32*, i8*, i64, %struct.__mbstate_t*) #4 !dbg !3913 {
  %5 = load i32, i32* @x.83
  %6 = load i32, i32* @y.84
  %7 = sub i32 %5, 1
  %8 = mul i32 %5, %7
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %6, 10
  %12 = or i1 %10, %11
  br i1 %12, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %4, %originalBBalteredBB
  %13 = alloca i64, align 8
  %14 = alloca i32*, align 8
  %15 = alloca i8*, align 8
  %16 = alloca i64, align 8
  %17 = alloca %struct.__mbstate_t*, align 8
  %18 = alloca i64, align 8
  %19 = alloca i32, align 4
  %20 = alloca i8, align 1
  store i32* %0, i32** %14, align 8
  call void @llvm.dbg.declare(metadata i32** %14, metadata !3929, metadata !DIExpression()), !dbg !3930
  store i8* %1, i8** %15, align 8
  call void @llvm.dbg.declare(metadata i8** %15, metadata !3931, metadata !DIExpression()), !dbg !3932
  store i64 %2, i64* %16, align 8
  call void @llvm.dbg.declare(metadata i64* %16, metadata !3933, metadata !DIExpression()), !dbg !3934
  store %struct.__mbstate_t* %3, %struct.__mbstate_t** %17, align 8
  call void @llvm.dbg.declare(metadata %struct.__mbstate_t** %17, metadata !3935, metadata !DIExpression()), !dbg !3936
  call void @llvm.dbg.declare(metadata i64* %18, metadata !3937, metadata !DIExpression()), !dbg !3938
  call void @llvm.dbg.declare(metadata i32* %19, metadata !3939, metadata !DIExpression()), !dbg !3940
  %21 = load i32*, i32** %14, align 8, !dbg !3941
  %22 = icmp ne i32* %21, null, !dbg !3941
  %23 = load i32, i32* @x.83
  %24 = load i32, i32* @y.84
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %22, label %32, label %31, !dbg !3943

31:                                               ; preds = %originalBBpart2
  store i32* %19, i32** %14, align 8, !dbg !3944
  br label %32, !dbg !3945

32:                                               ; preds = %31, %originalBBpart2
  %33 = load i32*, i32** %14, align 8, !dbg !3946
  %34 = load i8*, i8** %15, align 8, !dbg !3947
  %35 = load i64, i64* %16, align 8, !dbg !3948
  %36 = load %struct.__mbstate_t*, %struct.__mbstate_t** %17, align 8, !dbg !3949
  %37 = call i64 @mbrtowc(i32* %33, i8* %34, i64 %35, %struct.__mbstate_t* %36) #10, !dbg !3950
  store i64 %37, i64* %18, align 8, !dbg !3951
  %38 = load i64, i64* %18, align 8, !dbg !3952
  %39 = icmp ule i64 -2, %38, !dbg !3954
  br i1 %39, label %40, label %67, !dbg !3955

40:                                               ; preds = %32
  %41 = load i64, i64* %16, align 8, !dbg !3956
  %42 = icmp ne i64 %41, 0, !dbg !3957
  br i1 %42, label %43, label %67, !dbg !3958

43:                                               ; preds = %40
  %44 = load i32, i32* @x.83
  %45 = load i32, i32* @y.84
  %46 = sub i32 %44, 1
  %47 = mul i32 %44, %46
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %45, 10
  %51 = or i1 %49, %50
  br i1 %51, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %43, %originalBB1alteredBB
  %52 = call zeroext i1 @hard_locale(i32 0), !dbg !3959
  %53 = load i32, i32* @x.83
  %54 = load i32, i32* @y.84
  %55 = sub i32 %53, 1
  %56 = mul i32 %53, %55
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %54, 10
  %60 = or i1 %58, %59
  br i1 %60, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %52, label %67, label %61, !dbg !3960

61:                                               ; preds = %originalBBpart24
  call void @llvm.dbg.declare(metadata i8* %20, metadata !3961, metadata !DIExpression()), !dbg !3963
  %62 = load i8*, i8** %15, align 8, !dbg !3964
  %63 = load i8, i8* %62, align 1, !dbg !3965
  store i8 %63, i8* %20, align 1, !dbg !3963
  %64 = load i8, i8* %20, align 1, !dbg !3966
  %65 = zext i8 %64 to i32, !dbg !3966
  %66 = load i32*, i32** %14, align 8, !dbg !3967
  store i32 %65, i32* %66, align 4, !dbg !3968
  store i64 1, i64* %13, align 8, !dbg !3969
  br label %69, !dbg !3969

67:                                               ; preds = %originalBBpart24, %40, %32
  %68 = load i64, i64* %18, align 8, !dbg !3970
  store i64 %68, i64* %13, align 8, !dbg !3971
  br label %69, !dbg !3971

69:                                               ; preds = %67, %61
  %70 = load i32, i32* @x.83
  %71 = load i32, i32* @y.84
  %72 = sub i32 %70, 1
  %73 = mul i32 %70, %72
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %71, 10
  %77 = or i1 %75, %76
  br i1 %77, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %69, %originalBB6alteredBB
  %78 = load i64, i64* %13, align 8, !dbg !3972
  %79 = load i32, i32* @x.83
  %80 = load i32, i32* @y.84
  %81 = sub i32 %79, 1
  %82 = mul i32 %79, %81
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %80, 10
  %86 = or i1 %84, %85
  br i1 %86, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  ret i64 %78, !dbg !3972

originalBBalteredBB:                              ; preds = %originalBB, %4
  %87 = alloca i64, align 8
  %88 = alloca i32*, align 8
  %89 = alloca i8*, align 8
  %90 = alloca i64, align 8
  %91 = alloca %struct.__mbstate_t*, align 8
  %92 = alloca i64, align 8
  %93 = alloca i32, align 4
  %94 = alloca i8, align 1
  store i32* %0, i32** %88, align 8
  call void @llvm.dbg.declare(metadata i32** %88, metadata !3973, metadata !DIExpression()), !dbg !3930
  store i8* %1, i8** %89, align 8
  call void @llvm.dbg.declare(metadata i8** %89, metadata !3989, metadata !DIExpression()), !dbg !3932
  store i64 %2, i64* %90, align 8
  call void @llvm.dbg.declare(metadata i64* %90, metadata !3990, metadata !DIExpression()), !dbg !3934
  store %struct.__mbstate_t* %3, %struct.__mbstate_t** %91, align 8
  call void @llvm.dbg.declare(metadata %struct.__mbstate_t** %91, metadata !3991, metadata !DIExpression()), !dbg !3936
  call void @llvm.dbg.declare(metadata i64* %92, metadata !3992, metadata !DIExpression()), !dbg !3938
  call void @llvm.dbg.declare(metadata i32* %93, metadata !3993, metadata !DIExpression()), !dbg !3940
  %95 = load i32*, i32** %88, align 8, !dbg !3941
  %96 = icmp ne i32* %95, null, !dbg !3941
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %43
  %97 = call zeroext i1 @hard_locale(i32 0), !dbg !3959
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %69
  %98 = load i64, i64* %13, align 8, !dbg !3972
  br label %originalBB6
}

; Function Attrs: nounwind
declare dso_local i64 @mbrtowc(i32*, i8*, i64, %struct.__mbstate_t*) #2

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @c_strcasecmp(i8*, i8*) #11 !dbg !3994 {
  %3 = load i32, i32* @x.85
  %4 = load i32, i32* @y.86
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca i32, align 4
  %12 = alloca i8*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i8*, align 8
  %16 = alloca i8, align 1
  %17 = alloca i8, align 1
  store i8* %0, i8** %12, align 8
  call void @llvm.dbg.declare(metadata i8** %12, metadata !3998, metadata !DIExpression()), !dbg !3999
  store i8* %1, i8** %13, align 8
  call void @llvm.dbg.declare(metadata i8** %13, metadata !4000, metadata !DIExpression()), !dbg !4001
  call void @llvm.dbg.declare(metadata i8** %14, metadata !4002, metadata !DIExpression()), !dbg !4003
  %18 = load i8*, i8** %12, align 8, !dbg !4004
  store i8* %18, i8** %14, align 8, !dbg !4003
  call void @llvm.dbg.declare(metadata i8** %15, metadata !4005, metadata !DIExpression()), !dbg !4006
  %19 = load i8*, i8** %13, align 8, !dbg !4007
  store i8* %19, i8** %15, align 8, !dbg !4006
  call void @llvm.dbg.declare(metadata i8* %16, metadata !4008, metadata !DIExpression()), !dbg !4009
  call void @llvm.dbg.declare(metadata i8* %17, metadata !4010, metadata !DIExpression()), !dbg !4011
  %20 = load i8*, i8** %14, align 8, !dbg !4012
  %21 = load i8*, i8** %15, align 8, !dbg !4014
  %22 = icmp eq i8* %20, %21, !dbg !4015
  %23 = load i32, i32* @x.85
  %24 = load i32, i32* @y.86
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %22, label %31, label %32, !dbg !4016

31:                                               ; preds = %originalBBpart2
  store i32 0, i32* %11, align 4, !dbg !4017
  br label %81, !dbg !4017

32:                                               ; preds = %originalBBpart2
  br label %33, !dbg !4018

33:                                               ; preds = %69, %32
  %34 = load i8*, i8** %14, align 8, !dbg !4019
  %35 = load i8, i8* %34, align 1, !dbg !4021
  %36 = zext i8 %35 to i32, !dbg !4021
  %37 = call i32 @c_tolower(i32 %36), !dbg !4022
  %38 = trunc i32 %37 to i8, !dbg !4022
  store i8 %38, i8* %16, align 1, !dbg !4023
  %39 = load i8*, i8** %15, align 8, !dbg !4024
  %40 = load i8, i8* %39, align 1, !dbg !4025
  %41 = zext i8 %40 to i32, !dbg !4025
  %42 = call i32 @c_tolower(i32 %41), !dbg !4026
  %43 = trunc i32 %42 to i8, !dbg !4026
  store i8 %43, i8* %17, align 1, !dbg !4027
  %44 = load i8, i8* %16, align 1, !dbg !4028
  %45 = zext i8 %44 to i32, !dbg !4028
  %46 = icmp eq i32 %45, 0, !dbg !4030
  br i1 %46, label %47, label %48, !dbg !4031

47:                                               ; preds = %33
  br label %75, !dbg !4032

48:                                               ; preds = %33
  %49 = load i32, i32* @x.85
  %50 = load i32, i32* @y.86
  %51 = sub i32 %49, 1
  %52 = mul i32 %49, %51
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %50, 10
  %56 = or i1 %54, %55
  br i1 %56, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %48, %originalBB1alteredBB
  %57 = load i8*, i8** %14, align 8, !dbg !4033
  %58 = getelementptr inbounds i8, i8* %57, i32 1, !dbg !4033
  store i8* %58, i8** %14, align 8, !dbg !4033
  %59 = load i8*, i8** %15, align 8, !dbg !4034
  %60 = getelementptr inbounds i8, i8* %59, i32 1, !dbg !4034
  store i8* %60, i8** %15, align 8, !dbg !4034
  %61 = load i32, i32* @x.85
  %62 = load i32, i32* @y.86
  %63 = sub i32 %61, 1
  %64 = mul i32 %61, %63
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %62, 10
  %68 = or i1 %66, %67
  br i1 %68, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %69, !dbg !4035

69:                                               ; preds = %originalBBpart24
  %70 = load i8, i8* %16, align 1, !dbg !4036
  %71 = zext i8 %70 to i32, !dbg !4036
  %72 = load i8, i8* %17, align 1, !dbg !4037
  %73 = zext i8 %72 to i32, !dbg !4037
  %74 = icmp eq i32 %71, %73, !dbg !4038
  br i1 %74, label %33, label %75, !dbg !4035, !llvm.loop !4039

75:                                               ; preds = %69, %47
  %76 = load i8, i8* %16, align 1, !dbg !4041
  %77 = zext i8 %76 to i32, !dbg !4041
  %78 = load i8, i8* %17, align 1, !dbg !4043
  %79 = zext i8 %78 to i32, !dbg !4043
  %80 = sub nsw i32 %77, %79, !dbg !4044
  store i32 %80, i32* %11, align 4, !dbg !4045
  br label %81, !dbg !4045

81:                                               ; preds = %75, %31
  %82 = load i32, i32* %11, align 4, !dbg !4046
  ret i32 %82, !dbg !4046

originalBBalteredBB:                              ; preds = %originalBB, %2
  %83 = alloca i32, align 4
  %84 = alloca i8*, align 8
  %85 = alloca i8*, align 8
  %86 = alloca i8*, align 8
  %87 = alloca i8*, align 8
  %88 = alloca i8, align 1
  %89 = alloca i8, align 1
  store i8* %0, i8** %84, align 8
  call void @llvm.dbg.declare(metadata i8** %84, metadata !4047, metadata !DIExpression()), !dbg !3999
  store i8* %1, i8** %85, align 8
  call void @llvm.dbg.declare(metadata i8** %85, metadata !4050, metadata !DIExpression()), !dbg !4001
  call void @llvm.dbg.declare(metadata i8** %86, metadata !4051, metadata !DIExpression()), !dbg !4003
  %90 = load i8*, i8** %84, align 8, !dbg !4004
  store i8* %90, i8** %86, align 8, !dbg !4003
  call void @llvm.dbg.declare(metadata i8** %87, metadata !4052, metadata !DIExpression()), !dbg !4006
  %91 = load i8*, i8** %85, align 8, !dbg !4007
  store i8* %91, i8** %87, align 8, !dbg !4006
  call void @llvm.dbg.declare(metadata i8* %88, metadata !4053, metadata !DIExpression()), !dbg !4009
  call void @llvm.dbg.declare(metadata i8* %89, metadata !4054, metadata !DIExpression()), !dbg !4011
  %92 = load i8*, i8** %86, align 8, !dbg !4012
  %93 = load i8*, i8** %87, align 8, !dbg !4014
  %94 = icmp eq i8* %92, %93, !dbg !4015
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %48
  %95 = load i8*, i8** %14, align 8, !dbg !4033
  %96 = getelementptr inbounds i8, i8* %95, i32 1, !dbg !4033
  store i8* %96, i8** %14, align 8, !dbg !4033
  %97 = load i8*, i8** %15, align 8, !dbg !4034
  %98 = getelementptr inbounds i8, i8* %97, i32 1, !dbg !4034
  store i8* %98, i8** %15, align 8, !dbg !4034
  br label %originalBB1
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @close_stream(%struct._IO_FILE*) #4 !dbg !4055 {
  %2 = alloca i32, align 4
  %3 = alloca %struct._IO_FILE*, align 8
  %4 = alloca i8, align 1
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  store %struct._IO_FILE* %0, %struct._IO_FILE** %3, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %3, metadata !4093, metadata !DIExpression()), !dbg !4094
  call void @llvm.dbg.declare(metadata i8* %4, metadata !4095, metadata !DIExpression()), !dbg !4097
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8, !dbg !4098
  %8 = call i64 @__fpending(%struct._IO_FILE* %7) #10, !dbg !4099
  %9 = icmp ne i64 %8, 0, !dbg !4100
  %10 = zext i1 %9 to i8, !dbg !4097
  store i8 %10, i8* %4, align 1, !dbg !4097
  call void @llvm.dbg.declare(metadata i8* %5, metadata !4101, metadata !DIExpression()), !dbg !4102
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8, !dbg !4103
  %12 = call i32 @ferror_unlocked(%struct._IO_FILE* %11) #10, !dbg !4103
  %13 = icmp ne i32 %12, 0, !dbg !4104
  %14 = zext i1 %13 to i8, !dbg !4102
  store i8 %14, i8* %5, align 1, !dbg !4102
  call void @llvm.dbg.declare(metadata i8* %6, metadata !4105, metadata !DIExpression()), !dbg !4106
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8, !dbg !4107
  %16 = call i32 @rpl_fclose(%struct._IO_FILE* %15), !dbg !4108
  %17 = icmp ne i32 %16, 0, !dbg !4109
  %18 = zext i1 %17 to i8, !dbg !4106
  store i8 %18, i8* %6, align 1, !dbg !4106
  %19 = load i8, i8* %5, align 1, !dbg !4110
  %20 = trunc i8 %19 to i1, !dbg !4110
  br i1 %20, label %47, label %21, !dbg !4112

21:                                               ; preds = %1
  %22 = load i8, i8* %6, align 1, !dbg !4113
  %23 = trunc i8 %22 to i1, !dbg !4113
  br i1 %23, label %24, label %69, !dbg !4114

24:                                               ; preds = %21
  %25 = load i8, i8* %4, align 1, !dbg !4115
  %26 = trunc i8 %25 to i1, !dbg !4115
  br i1 %26, label %47, label %27, !dbg !4116

27:                                               ; preds = %24
  %28 = load i32, i32* @x.87
  %29 = load i32, i32* @y.88
  %30 = sub i32 %28, 1
  %31 = mul i32 %28, %30
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %33, %34
  br i1 %35, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %27, %originalBBalteredBB
  %36 = call i32* @__errno_location() #15, !dbg !4117
  %37 = load i32, i32* %36, align 4, !dbg !4117
  %38 = icmp ne i32 %37, 9, !dbg !4118
  %39 = load i32, i32* @x.87
  %40 = load i32, i32* @y.88
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %38, label %47, label %69, !dbg !4119

47:                                               ; preds = %originalBBpart2, %24, %1
  %48 = load i32, i32* @x.87
  %49 = load i32, i32* @y.88
  %50 = sub i32 %48, 1
  %51 = mul i32 %48, %50
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %53, %54
  br i1 %55, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %47, %originalBB1alteredBB
  %56 = load i8, i8* %6, align 1, !dbg !4120
  %57 = trunc i8 %56 to i1, !dbg !4120
  %58 = load i32, i32* @x.87
  %59 = load i32, i32* @y.88
  %60 = sub i32 %58, 1
  %61 = mul i32 %58, %60
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %59, 10
  %65 = or i1 %63, %64
  br i1 %65, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %57, label %68, label %66, !dbg !4123

66:                                               ; preds = %originalBBpart24
  %67 = call i32* @__errno_location() #15, !dbg !4124
  store i32 0, i32* %67, align 4, !dbg !4125
  br label %68, !dbg !4124

68:                                               ; preds = %66, %originalBBpart24
  store i32 -1, i32* %2, align 4, !dbg !4126
  br label %70, !dbg !4126

69:                                               ; preds = %originalBBpart2, %21
  store i32 0, i32* %2, align 4, !dbg !4127
  br label %70, !dbg !4127

70:                                               ; preds = %69, %68
  %71 = load i32, i32* @x.87
  %72 = load i32, i32* @y.88
  %73 = sub i32 %71, 1
  %74 = mul i32 %71, %73
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %72, 10
  %78 = or i1 %76, %77
  br i1 %78, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %70, %originalBB6alteredBB
  %79 = load i32, i32* %2, align 4, !dbg !4128
  %80 = load i32, i32* @x.87
  %81 = load i32, i32* @y.88
  %82 = sub i32 %80, 1
  %83 = mul i32 %80, %82
  %84 = urem i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %81, 10
  %87 = or i1 %85, %86
  br i1 %87, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  ret i32 %79, !dbg !4128

originalBBalteredBB:                              ; preds = %originalBB, %27
  %88 = call i32* @__errno_location() #15, !dbg !4117
  %89 = load i32, i32* %88, align 4, !dbg !4117
  %90 = icmp ne i32 %89, 9, !dbg !4118
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %47
  %91 = load i8, i8* %6, align 1, !dbg !4120
  %92 = trunc i8 %91 to i1, !dbg !4120
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %70
  %93 = load i32, i32* %2, align 4, !dbg !4128
  br label %originalBB6
}

; Function Attrs: nounwind
declare dso_local i64 @__fpending(%struct._IO_FILE*) #2

; Function Attrs: nounwind
declare dso_local i32 @ferror_unlocked(%struct._IO_FILE*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @hard_locale(i32) #4 !dbg !4129 {
  %2 = alloca i1, align 1
  %3 = alloca i32, align 4
  %4 = alloca [257 x i8], align 16
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !4133, metadata !DIExpression()), !dbg !4134
  call void @llvm.dbg.declare(metadata [257 x i8]* %4, metadata !4135, metadata !DIExpression()), !dbg !4139
  %5 = load i32, i32* %3, align 4, !dbg !4140
  %6 = getelementptr inbounds [257 x i8], [257 x i8]* %4, i64 0, i64 0, !dbg !4142
  %7 = call i32 @setlocale_null_r(i32 %5, i8* %6, i64 257), !dbg !4143
  %8 = icmp ne i32 %7, 0, !dbg !4143
  br i1 %8, label %9, label %10, !dbg !4144

9:                                                ; preds = %1
  store i1 false, i1* %2, align 1, !dbg !4145
  br label %53, !dbg !4145

10:                                               ; preds = %1
  %11 = getelementptr inbounds [257 x i8], [257 x i8]* %4, i64 0, i64 0, !dbg !4146
  %12 = call i32 @strcmp(i8* %11, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.152, i64 0, i64 0)) #13, !dbg !4147
  %13 = icmp eq i32 %12, 0, !dbg !4148
  br i1 %13, label %34, label %14, !dbg !4149

14:                                               ; preds = %10
  %15 = load i32, i32* @x.89
  %16 = load i32, i32* @y.90
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %14, %originalBBalteredBB
  %23 = getelementptr inbounds [257 x i8], [257 x i8]* %4, i64 0, i64 0, !dbg !4150
  %24 = call i32 @strcmp(i8* %23, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.153, i64 0, i64 0)) #13, !dbg !4151
  %25 = icmp eq i32 %24, 0, !dbg !4152
  %26 = load i32, i32* @x.89
  %27 = load i32, i32* @y.90
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %34, !dbg !4149

34:                                               ; preds = %originalBBpart2, %10
  %35 = phi i1 [ true, %10 ], [ %25, %originalBBpart2 ]
  %36 = load i32, i32* @x.89
  %37 = load i32, i32* @y.90
  %38 = sub i32 %36, 1
  %39 = mul i32 %36, %38
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %37, 10
  %43 = or i1 %41, %42
  br i1 %43, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %34, %originalBB1alteredBB
  %44 = xor i1 %35, true, !dbg !4153
  store i1 %44, i1* %2, align 1, !dbg !4154
  %45 = load i32, i32* @x.89
  %46 = load i32, i32* @y.90
  %47 = sub i32 %45, 1
  %48 = mul i32 %45, %47
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %50, %51
  br i1 %52, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %53, !dbg !4154

53:                                               ; preds = %originalBBpart24, %9
  %54 = load i32, i32* @x.89
  %55 = load i32, i32* @y.90
  %56 = sub i32 %54, 1
  %57 = mul i32 %54, %56
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %55, 10
  %61 = or i1 %59, %60
  br i1 %61, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %53, %originalBB6alteredBB
  %62 = load i1, i1* %2, align 1, !dbg !4155
  %63 = load i32, i32* @x.89
  %64 = load i32, i32* @y.90
  %65 = sub i32 %63, 1
  %66 = mul i32 %63, %65
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %64, 10
  %70 = or i1 %68, %69
  br i1 %70, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  ret i1 %62, !dbg !4155

originalBBalteredBB:                              ; preds = %originalBB, %14
  %71 = getelementptr inbounds [257 x i8], [257 x i8]* %4, i64 0, i64 0, !dbg !4150
  %72 = call i32 @strcmp(i8* %71, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.153, i64 0, i64 0)) #13, !dbg !4151
  %73 = icmp eq i32 %72, 0, !dbg !4152
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %34
  %_ = sub i1 false, %35
  %gen = add i1 %_, true
  %74 = xor i1 %35, true, !dbg !4153
  store i1 %74, i1* %2, align 1, !dbg !4154
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %53
  %75 = load i1, i1* %2, align 1, !dbg !4155
  br label %originalBB6
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @locale_charset() #4 !dbg !4156 {
  %1 = load i32, i32* @x.91
  %2 = load i32, i32* @y.92
  %3 = sub i32 %1, 1
  %4 = mul i32 %1, %3
  %5 = urem i32 %4, 2
  %6 = icmp eq i32 %5, 0
  %7 = icmp slt i32 %2, 10
  %8 = or i1 %6, %7
  br i1 %8, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %0, %originalBBalteredBB
  %9 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %9, metadata !4160, metadata !DIExpression()), !dbg !4161
  %10 = call i8* @nl_langinfo(i32 14) #10, !dbg !4162
  store i8* %10, i8** %9, align 8, !dbg !4163
  %11 = load i8*, i8** %9, align 8, !dbg !4164
  %12 = icmp eq i8* %11, null, !dbg !4166
  %13 = load i32, i32* @x.91
  %14 = load i32, i32* @y.92
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %12, label %21, label %38, !dbg !4167

21:                                               ; preds = %originalBBpart2
  %22 = load i32, i32* @x.91
  %23 = load i32, i32* @y.92
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %21, %originalBB1alteredBB
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.156, i64 0, i64 0), i8** %9, align 8, !dbg !4168
  %30 = load i32, i32* @x.91
  %31 = load i32, i32* @y.92
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %38, !dbg !4169

38:                                               ; preds = %originalBBpart24, %originalBBpart2
  %39 = load i8*, i8** %9, align 8, !dbg !4170
  %40 = getelementptr inbounds i8, i8* %39, i64 0, !dbg !4170
  %41 = load i8, i8* %40, align 1, !dbg !4170
  %42 = sext i8 %41 to i32, !dbg !4170
  %43 = icmp eq i32 %42, 0, !dbg !4174
  br i1 %43, label %44, label %45, !dbg !4175

44:                                               ; preds = %38
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.157, i64 0, i64 0), i8** %9, align 8, !dbg !4176
  br label %45, !dbg !4177

45:                                               ; preds = %44, %38
  %46 = load i32, i32* @x.91
  %47 = load i32, i32* @y.92
  %48 = sub i32 %46, 1
  %49 = mul i32 %46, %48
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %47, 10
  %53 = or i1 %51, %52
  br i1 %53, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %45, %originalBB6alteredBB
  %54 = load i8*, i8** %9, align 8, !dbg !4178
  %55 = load i32, i32* @x.91
  %56 = load i32, i32* @y.92
  %57 = sub i32 %55, 1
  %58 = mul i32 %55, %57
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %56, 10
  %62 = or i1 %60, %61
  br i1 %62, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  ret i8* %54, !dbg !4179

originalBBalteredBB:                              ; preds = %originalBB, %0
  %63 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %63, metadata !4180, metadata !DIExpression()), !dbg !4161
  %64 = call i8* @nl_langinfo(i32 14) #10, !dbg !4162
  store i8* %64, i8** %63, align 8, !dbg !4163
  %65 = load i8*, i8** %63, align 8, !dbg !4164
  %66 = icmp eq i8* %65, null, !dbg !4166
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %21
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.156, i64 0, i64 0), i8** %9, align 8, !dbg !4168
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %45
  %67 = load i8*, i8** %9, align 8, !dbg !4178
  br label %originalBB6
}

; Function Attrs: nounwind
declare dso_local i8* @nl_langinfo(i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @mgetgroups(i8*, i32, i32**) #4 !dbg !4183 {
  %4 = load i32, i32* @x.93
  %5 = load i32, i32* @y.94
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca i32, align 4
  %13 = alloca i8*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i32**, align 8
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32*, align 8
  %19 = alloca i32*, align 8
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32*, align 8
  %25 = alloca i32*, align 8
  store i8* %0, i8** %13, align 8
  call void @llvm.dbg.declare(metadata i8** %13, metadata !4185, metadata !DIExpression()), !dbg !4186
  store i32 %1, i32* %14, align 4
  call void @llvm.dbg.declare(metadata i32* %14, metadata !4187, metadata !DIExpression()), !dbg !4188
  store i32** %2, i32*** %15, align 8
  call void @llvm.dbg.declare(metadata i32*** %15, metadata !4189, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.declare(metadata i32* %16, metadata !4191, metadata !DIExpression()), !dbg !4192
  call void @llvm.dbg.declare(metadata i32* %17, metadata !4193, metadata !DIExpression()), !dbg !4194
  call void @llvm.dbg.declare(metadata i32** %18, metadata !4195, metadata !DIExpression()), !dbg !4196
  %26 = load i8*, i8** %13, align 8, !dbg !4197
  %27 = icmp ne i8* %26, null, !dbg !4197
  %28 = load i32, i32* @x.93
  %29 = load i32, i32* @y.94
  %30 = sub i32 %28, 1
  %31 = mul i32 %28, %30
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %33, %34
  br i1 %35, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %27, label %36, label %113, !dbg !4199

36:                                               ; preds = %originalBBpart2
  store i32 10, i32* %16, align 4, !dbg !4200
  %37 = load i32, i32* %16, align 4, !dbg !4202
  %38 = sext i32 %37 to i64, !dbg !4202
  %39 = call i32* @realloc_groupbuf(i32* null, i64 %38), !dbg !4203
  store i32* %39, i32** %18, align 8, !dbg !4204
  %40 = load i32*, i32** %18, align 8, !dbg !4205
  %41 = icmp eq i32* %40, null, !dbg !4207
  br i1 %41, label %42, label %59, !dbg !4208

42:                                               ; preds = %36
  %43 = load i32, i32* @x.93
  %44 = load i32, i32* @y.94
  %45 = sub i32 %43, 1
  %46 = mul i32 %43, %45
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %48, %49
  br i1 %50, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %42, %originalBB1alteredBB
  store i32 -1, i32* %12, align 4, !dbg !4209
  %51 = load i32, i32* @x.93
  %52 = load i32, i32* @y.94
  %53 = sub i32 %51, 1
  %54 = mul i32 %51, %53
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %52, 10
  %58 = or i1 %56, %57
  br i1 %58, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %425, !dbg !4209

59:                                               ; preds = %36
  %60 = load i32, i32* @x.93
  %61 = load i32, i32* @y.94
  %62 = sub i32 %60, 1
  %63 = mul i32 %60, %62
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %61, 10
  %67 = or i1 %65, %66
  br i1 %67, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %59, %originalBB6alteredBB
  %68 = load i32, i32* @x.93
  %69 = load i32, i32* @y.94
  %70 = sub i32 %68, 1
  %71 = mul i32 %68, %70
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %69, 10
  %75 = or i1 %73, %74
  br i1 %75, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %76, !dbg !4210

76:                                               ; preds = %112, %originalBBpart28
  call void @llvm.dbg.declare(metadata i32** %19, metadata !4211, metadata !DIExpression()), !dbg !4213
  call void @llvm.dbg.declare(metadata i32* %20, metadata !4214, metadata !DIExpression()), !dbg !4215
  %77 = load i32, i32* %16, align 4, !dbg !4216
  store i32 %77, i32* %20, align 4, !dbg !4215
  %78 = load i8*, i8** %13, align 8, !dbg !4217
  %79 = load i32, i32* %14, align 4, !dbg !4218
  %80 = load i32*, i32** %18, align 8, !dbg !4219
  %81 = call i32 @getgrouplist(i8* %78, i32 %79, i32* %80, i32* %16), !dbg !4220
  store i32 %81, i32* %17, align 4, !dbg !4221
  %82 = load i32, i32* %17, align 4, !dbg !4222
  %83 = icmp slt i32 %82, 0, !dbg !4224
  br i1 %83, label %84, label %91, !dbg !4225

84:                                               ; preds = %76
  %85 = load i32, i32* %20, align 4, !dbg !4226
  %86 = load i32, i32* %16, align 4, !dbg !4227
  %87 = icmp eq i32 %85, %86, !dbg !4228
  br i1 %87, label %88, label %91, !dbg !4229

88:                                               ; preds = %84
  %89 = load i32, i32* %16, align 4, !dbg !4230
  %90 = mul nsw i32 %89, 2, !dbg !4230
  store i32 %90, i32* %16, align 4, !dbg !4230
  br label %91, !dbg !4231

91:                                               ; preds = %88, %84, %76
  %92 = load i32*, i32** %18, align 8, !dbg !4232
  %93 = load i32, i32* %16, align 4, !dbg !4234
  %94 = sext i32 %93 to i64, !dbg !4234
  %95 = call i32* @realloc_groupbuf(i32* %92, i64 %94), !dbg !4235
  store i32* %95, i32** %19, align 8, !dbg !4236
  %96 = icmp eq i32* %95, null, !dbg !4237
  br i1 %96, label %97, label %104, !dbg !4238

97:                                               ; preds = %91
  call void @llvm.dbg.declare(metadata i32* %21, metadata !4239, metadata !DIExpression()), !dbg !4241
  %98 = call i32* @__errno_location() #15, !dbg !4242
  %99 = load i32, i32* %98, align 4, !dbg !4242
  store i32 %99, i32* %21, align 4, !dbg !4241
  %100 = load i32*, i32** %18, align 8, !dbg !4243
  %101 = bitcast i32* %100 to i8*, !dbg !4243
  call void @free(i8* %101) #10, !dbg !4244
  %102 = load i32, i32* %21, align 4, !dbg !4245
  %103 = call i32* @__errno_location() #15, !dbg !4246
  store i32 %102, i32* %103, align 4, !dbg !4247
  store i32 -1, i32* %12, align 4, !dbg !4248
  br label %425, !dbg !4248

104:                                              ; preds = %91
  %105 = load i32*, i32** %19, align 8, !dbg !4249
  store i32* %105, i32** %18, align 8, !dbg !4250
  %106 = load i32, i32* %17, align 4, !dbg !4251
  %107 = icmp sle i32 0, %106, !dbg !4253
  br i1 %107, label %108, label %112, !dbg !4254

108:                                              ; preds = %104
  %109 = load i32*, i32** %18, align 8, !dbg !4255
  %110 = load i32**, i32*** %15, align 8, !dbg !4257
  store i32* %109, i32** %110, align 8, !dbg !4258
  %111 = load i32, i32* %16, align 4, !dbg !4259
  store i32 %111, i32* %12, align 4, !dbg !4260
  br label %425, !dbg !4260

112:                                              ; preds = %104
  br label %76, !dbg !4210, !llvm.loop !4261

113:                                              ; preds = %originalBBpart2
  %114 = load i32, i32* @x.93
  %115 = load i32, i32* @y.94
  %116 = sub i32 %114, 1
  %117 = mul i32 %114, %116
  %118 = urem i32 %117, 2
  %119 = icmp eq i32 %118, 0
  %120 = icmp slt i32 %115, 10
  %121 = or i1 %119, %120
  br i1 %121, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %113, %originalBB10alteredBB
  %122 = load i8*, i8** %13, align 8, !dbg !4263
  %123 = icmp ne i8* %122, null, !dbg !4263
  %124 = load i32, i32* @x.93
  %125 = load i32, i32* @y.94
  %126 = sub i32 %124, 1
  %127 = mul i32 %124, %126
  %128 = urem i32 %127, 2
  %129 = icmp eq i32 %128, 0
  %130 = icmp slt i32 %125, 10
  %131 = or i1 %129, %130
  br i1 %131, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %123, label %132, label %152, !dbg !4263

132:                                              ; preds = %originalBBpart212
  %133 = load i32, i32* @x.93
  %134 = load i32, i32* @y.94
  %135 = sub i32 %133, 1
  %136 = mul i32 %133, %135
  %137 = urem i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = icmp slt i32 %134, 10
  %140 = or i1 %138, %139
  br i1 %140, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %132, %originalBB14alteredBB
  %141 = load i8*, i8** %13, align 8, !dbg !4264
  %142 = load i32, i32* %14, align 4, !dbg !4265
  %143 = call i32 @getugroups(i32 0, i32* null, i8* %141, i32 %142), !dbg !4266
  %144 = load i32, i32* @x.93
  %145 = load i32, i32* @y.94
  %146 = sub i32 %144, 1
  %147 = mul i32 %144, %146
  %148 = urem i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = icmp slt i32 %145, 10
  %151 = or i1 %149, %150
  br i1 %151, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %170, !dbg !4263

152:                                              ; preds = %originalBBpart212
  %153 = load i32, i32* @x.93
  %154 = load i32, i32* @y.94
  %155 = sub i32 %153, 1
  %156 = mul i32 %153, %155
  %157 = urem i32 %156, 2
  %158 = icmp eq i32 %157, 0
  %159 = icmp slt i32 %154, 10
  %160 = or i1 %158, %159
  br i1 %160, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %152, %originalBB18alteredBB
  %161 = call i32 @getgroups(i32 0, i32* null) #10, !dbg !4267
  %162 = load i32, i32* @x.93
  %163 = load i32, i32* @y.94
  %164 = sub i32 %162, 1
  %165 = mul i32 %162, %164
  %166 = urem i32 %165, 2
  %167 = icmp eq i32 %166, 0
  %168 = icmp slt i32 %163, 10
  %169 = or i1 %167, %168
  br i1 %169, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %170, !dbg !4263

170:                                              ; preds = %originalBBpart220, %originalBBpart216
  %171 = phi i32 [ %143, %originalBBpart216 ], [ %161, %originalBBpart220 ], !dbg !4263
  store i32 %171, i32* %16, align 4, !dbg !4268
  %172 = load i32, i32* %16, align 4, !dbg !4269
  %173 = icmp slt i32 %172, 0, !dbg !4271
  br i1 %173, label %174, label %222, !dbg !4272

174:                                              ; preds = %170
  %175 = load i32, i32* @x.93
  %176 = load i32, i32* @y.94
  %177 = sub i32 %175, 1
  %178 = mul i32 %175, %177
  %179 = urem i32 %178, 2
  %180 = icmp eq i32 %179, 0
  %181 = icmp slt i32 %176, 10
  %182 = or i1 %180, %181
  br i1 %182, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %174, %originalBB22alteredBB
  %183 = call i32* @__errno_location() #15, !dbg !4273
  %184 = load i32, i32* %183, align 4, !dbg !4273
  %185 = icmp eq i32 %184, 38, !dbg !4276
  %186 = load i32, i32* @x.93
  %187 = load i32, i32* @y.94
  %188 = sub i32 %186, 1
  %189 = mul i32 %186, %188
  %190 = urem i32 %189, 2
  %191 = icmp eq i32 %190, 0
  %192 = icmp slt i32 %187, 10
  %193 = or i1 %191, %192
  br i1 %193, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br i1 %185, label %194, label %205, !dbg !4277

194:                                              ; preds = %originalBBpart224
  %195 = call i32* @realloc_groupbuf(i32* null, i64 1), !dbg !4278
  store i32* %195, i32** %18, align 8, !dbg !4279
  %196 = icmp ne i32* %195, null, !dbg !4279
  br i1 %196, label %197, label %205, !dbg !4280

197:                                              ; preds = %194
  %198 = load i32*, i32** %18, align 8, !dbg !4281
  %199 = load i32**, i32*** %15, align 8, !dbg !4283
  store i32* %198, i32** %199, align 8, !dbg !4284
  %200 = load i32, i32* %14, align 4, !dbg !4285
  %201 = load i32*, i32** %18, align 8, !dbg !4286
  store i32 %200, i32* %201, align 4, !dbg !4287
  %202 = load i32, i32* %14, align 4, !dbg !4288
  %203 = icmp ne i32 %202, -1, !dbg !4289
  %204 = zext i1 %203 to i32, !dbg !4289
  store i32 %204, i32* %12, align 4, !dbg !4290
  br label %425, !dbg !4290

205:                                              ; preds = %194, %originalBBpart224
  %206 = load i32, i32* @x.93
  %207 = load i32, i32* @y.94
  %208 = sub i32 %206, 1
  %209 = mul i32 %206, %208
  %210 = urem i32 %209, 2
  %211 = icmp eq i32 %210, 0
  %212 = icmp slt i32 %207, 10
  %213 = or i1 %211, %212
  br i1 %213, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %205, %originalBB26alteredBB
  store i32 -1, i32* %12, align 4, !dbg !4291
  %214 = load i32, i32* @x.93
  %215 = load i32, i32* @y.94
  %216 = sub i32 %214, 1
  %217 = mul i32 %214, %216
  %218 = urem i32 %217, 2
  %219 = icmp eq i32 %218, 0
  %220 = icmp slt i32 %215, 10
  %221 = or i1 %219, %220
  br i1 %221, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br label %425, !dbg !4291

222:                                              ; preds = %170
  %223 = load i32, i32* @x.93
  %224 = load i32, i32* @y.94
  %225 = sub i32 %223, 1
  %226 = mul i32 %223, %225
  %227 = urem i32 %226, 2
  %228 = icmp eq i32 %227, 0
  %229 = icmp slt i32 %224, 10
  %230 = or i1 %228, %229
  br i1 %230, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %222, %originalBB30alteredBB
  %231 = load i32, i32* %16, align 4, !dbg !4292
  %232 = icmp eq i32 %231, 0, !dbg !4294
  %233 = load i32, i32* @x.93
  %234 = load i32, i32* @y.94
  %235 = sub i32 %233, 1
  %236 = mul i32 %233, %235
  %237 = urem i32 %236, 2
  %238 = icmp eq i32 %237, 0
  %239 = icmp slt i32 %234, 10
  %240 = or i1 %238, %239
  br i1 %240, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br i1 %232, label %263, label %241, !dbg !4295

241:                                              ; preds = %originalBBpart232
  %242 = load i8*, i8** %13, align 8, !dbg !4296
  %243 = icmp ne i8* %242, null, !dbg !4296
  br i1 %243, label %282, label %244, !dbg !4297

244:                                              ; preds = %241
  %245 = load i32, i32* @x.93
  %246 = load i32, i32* @y.94
  %247 = sub i32 %245, 1
  %248 = mul i32 %245, %247
  %249 = urem i32 %248, 2
  %250 = icmp eq i32 %249, 0
  %251 = icmp slt i32 %246, 10
  %252 = or i1 %250, %251
  br i1 %252, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %244, %originalBB34alteredBB
  %253 = load i32, i32* %14, align 4, !dbg !4298
  %254 = icmp ne i32 %253, -1, !dbg !4299
  %255 = load i32, i32* @x.93
  %256 = load i32, i32* @y.94
  %257 = sub i32 %255, 1
  %258 = mul i32 %255, %257
  %259 = urem i32 %258, 2
  %260 = icmp eq i32 %259, 0
  %261 = icmp slt i32 %256, 10
  %262 = or i1 %260, %261
  br i1 %262, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  br i1 %254, label %263, label %282, !dbg !4300

263:                                              ; preds = %originalBBpart236, %originalBBpart232
  %264 = load i32, i32* @x.93
  %265 = load i32, i32* @y.94
  %266 = sub i32 %264, 1
  %267 = mul i32 %264, %266
  %268 = urem i32 %267, 2
  %269 = icmp eq i32 %268, 0
  %270 = icmp slt i32 %265, 10
  %271 = or i1 %269, %270
  br i1 %271, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %263, %originalBB38alteredBB
  %272 = load i32, i32* %16, align 4, !dbg !4301
  %273 = add nsw i32 %272, 1, !dbg !4301
  store i32 %273, i32* %16, align 4, !dbg !4301
  %274 = load i32, i32* @x.93
  %275 = load i32, i32* @y.94
  %276 = sub i32 %274, 1
  %277 = mul i32 %274, %276
  %278 = urem i32 %277, 2
  %279 = icmp eq i32 %278, 0
  %280 = icmp slt i32 %275, 10
  %281 = or i1 %279, %280
  br i1 %281, label %originalBBpart250, label %originalBB38alteredBB

originalBBpart250:                                ; preds = %originalBB38
  br label %282, !dbg !4302

282:                                              ; preds = %originalBBpart250, %originalBBpart236, %241
  %283 = load i32, i32* %16, align 4, !dbg !4303
  %284 = sext i32 %283 to i64, !dbg !4303
  %285 = call i32* @realloc_groupbuf(i32* null, i64 %284), !dbg !4304
  store i32* %285, i32** %18, align 8, !dbg !4305
  %286 = load i32*, i32** %18, align 8, !dbg !4306
  %287 = icmp eq i32* %286, null, !dbg !4308
  br i1 %287, label %288, label %289, !dbg !4309

288:                                              ; preds = %282
  store i32 -1, i32* %12, align 4, !dbg !4310
  br label %425, !dbg !4310

289:                                              ; preds = %282
  %290 = load i8*, i8** %13, align 8, !dbg !4311
  %291 = icmp ne i8* %290, null, !dbg !4311
  br i1 %291, label %292, label %314, !dbg !4311

292:                                              ; preds = %289
  %293 = load i32, i32* @x.93
  %294 = load i32, i32* @y.94
  %295 = sub i32 %293, 1
  %296 = mul i32 %293, %295
  %297 = urem i32 %296, 2
  %298 = icmp eq i32 %297, 0
  %299 = icmp slt i32 %294, 10
  %300 = or i1 %298, %299
  br i1 %300, label %originalBB52, label %originalBB52alteredBB

originalBB52:                                     ; preds = %292, %originalBB52alteredBB
  %301 = load i32, i32* %16, align 4, !dbg !4312
  %302 = load i32*, i32** %18, align 8, !dbg !4313
  %303 = load i8*, i8** %13, align 8, !dbg !4314
  %304 = load i32, i32* %14, align 4, !dbg !4315
  %305 = call i32 @getugroups(i32 %301, i32* %302, i8* %303, i32 %304), !dbg !4316
  %306 = load i32, i32* @x.93
  %307 = load i32, i32* @y.94
  %308 = sub i32 %306, 1
  %309 = mul i32 %306, %308
  %310 = urem i32 %309, 2
  %311 = icmp eq i32 %310, 0
  %312 = icmp slt i32 %307, 10
  %313 = or i1 %311, %312
  br i1 %313, label %originalBBpart254, label %originalBB52alteredBB

originalBBpart254:                                ; preds = %originalBB52
  br label %327, !dbg !4311

314:                                              ; preds = %289
  %315 = load i32, i32* %16, align 4, !dbg !4317
  %316 = load i32, i32* %14, align 4, !dbg !4318
  %317 = icmp ne i32 %316, -1, !dbg !4319
  %318 = zext i1 %317 to i32, !dbg !4319
  %319 = sub nsw i32 %315, %318, !dbg !4320
  %320 = load i32*, i32** %18, align 8, !dbg !4321
  %321 = load i32, i32* %14, align 4, !dbg !4322
  %322 = icmp ne i32 %321, -1, !dbg !4323
  %323 = zext i1 %322 to i32, !dbg !4323
  %324 = sext i32 %323 to i64, !dbg !4324
  %325 = getelementptr inbounds i32, i32* %320, i64 %324, !dbg !4324
  %326 = call i32 @getgroups(i32 %319, i32* %325) #10, !dbg !4325
  br label %327, !dbg !4311

327:                                              ; preds = %314, %originalBBpart254
  %328 = phi i32 [ %305, %originalBBpart254 ], [ %326, %314 ], !dbg !4311
  store i32 %328, i32* %17, align 4, !dbg !4326
  %329 = load i32, i32* %17, align 4, !dbg !4327
  %330 = icmp slt i32 %329, 0, !dbg !4329
  br i1 %330, label %331, label %338, !dbg !4330

331:                                              ; preds = %327
  call void @llvm.dbg.declare(metadata i32* %22, metadata !4331, metadata !DIExpression()), !dbg !4333
  %332 = call i32* @__errno_location() #15, !dbg !4334
  %333 = load i32, i32* %332, align 4, !dbg !4334
  store i32 %333, i32* %22, align 4, !dbg !4333
  %334 = load i32*, i32** %18, align 8, !dbg !4335
  %335 = bitcast i32* %334 to i8*, !dbg !4335
  call void @free(i8* %335) #10, !dbg !4336
  %336 = load i32, i32* %22, align 4, !dbg !4337
  %337 = call i32* @__errno_location() #15, !dbg !4338
  store i32 %336, i32* %337, align 4, !dbg !4339
  store i32 -1, i32* %12, align 4, !dbg !4340
  br label %425, !dbg !4340

338:                                              ; preds = %327
  %339 = load i8*, i8** %13, align 8, !dbg !4341
  %340 = icmp ne i8* %339, null, !dbg !4341
  br i1 %340, label %365, label %341, !dbg !4343

341:                                              ; preds = %338
  %342 = load i32, i32* @x.93
  %343 = load i32, i32* @y.94
  %344 = sub i32 %342, 1
  %345 = mul i32 %342, %344
  %346 = urem i32 %345, 2
  %347 = icmp eq i32 %346, 0
  %348 = icmp slt i32 %343, 10
  %349 = or i1 %347, %348
  br i1 %349, label %originalBB56, label %originalBB56alteredBB

originalBB56:                                     ; preds = %341, %originalBB56alteredBB
  %350 = load i32, i32* %14, align 4, !dbg !4344
  %351 = icmp ne i32 %350, -1, !dbg !4345
  %352 = load i32, i32* @x.93
  %353 = load i32, i32* @y.94
  %354 = sub i32 %352, 1
  %355 = mul i32 %352, %354
  %356 = urem i32 %355, 2
  %357 = icmp eq i32 %356, 0
  %358 = icmp slt i32 %353, 10
  %359 = or i1 %357, %358
  br i1 %359, label %originalBBpart258, label %originalBB56alteredBB

originalBBpart258:                                ; preds = %originalBB56
  br i1 %351, label %360, label %365, !dbg !4346

360:                                              ; preds = %originalBBpart258
  %361 = load i32, i32* %14, align 4, !dbg !4347
  %362 = load i32*, i32** %18, align 8, !dbg !4349
  store i32 %361, i32* %362, align 4, !dbg !4350
  %363 = load i32, i32* %17, align 4, !dbg !4351
  %364 = add nsw i32 %363, 1, !dbg !4351
  store i32 %364, i32* %17, align 4, !dbg !4351
  br label %365, !dbg !4352

365:                                              ; preds = %360, %originalBBpart258, %338
  %366 = load i32*, i32** %18, align 8, !dbg !4353
  %367 = load i32**, i32*** %15, align 8, !dbg !4354
  store i32* %366, i32** %367, align 8, !dbg !4355
  %368 = load i32, i32* %17, align 4, !dbg !4356
  %369 = icmp slt i32 1, %368, !dbg !4358
  br i1 %369, label %370, label %423, !dbg !4359

370:                                              ; preds = %365
  call void @llvm.dbg.declare(metadata i32* %23, metadata !4360, metadata !DIExpression()), !dbg !4362
  %371 = load i32*, i32** %18, align 8, !dbg !4363
  %372 = load i32, i32* %371, align 4, !dbg !4364
  store i32 %372, i32* %23, align 4, !dbg !4362
  call void @llvm.dbg.declare(metadata i32** %24, metadata !4365, metadata !DIExpression()), !dbg !4366
  call void @llvm.dbg.declare(metadata i32** %25, metadata !4367, metadata !DIExpression()), !dbg !4368
  %373 = load i32*, i32** %18, align 8, !dbg !4369
  %374 = load i32, i32* %17, align 4, !dbg !4370
  %375 = sext i32 %374 to i64, !dbg !4371
  %376 = getelementptr inbounds i32, i32* %373, i64 %375, !dbg !4371
  store i32* %376, i32** %25, align 8, !dbg !4368
  %377 = load i32*, i32** %18, align 8, !dbg !4372
  %378 = getelementptr inbounds i32, i32* %377, i64 1, !dbg !4374
  store i32* %378, i32** %24, align 8, !dbg !4375
  br label %379, !dbg !4376

379:                                              ; preds = %419, %370
  %380 = load i32*, i32** %24, align 8, !dbg !4377
  %381 = load i32*, i32** %25, align 8, !dbg !4379
  %382 = icmp ult i32* %380, %381, !dbg !4380
  br i1 %382, label %383, label %422, !dbg !4381

383:                                              ; preds = %379
  %384 = load i32, i32* @x.93
  %385 = load i32, i32* @y.94
  %386 = sub i32 %384, 1
  %387 = mul i32 %384, %386
  %388 = urem i32 %387, 2
  %389 = icmp eq i32 %388, 0
  %390 = icmp slt i32 %385, 10
  %391 = or i1 %389, %390
  br i1 %391, label %originalBB60, label %originalBB60alteredBB

originalBB60:                                     ; preds = %383, %originalBB60alteredBB
  %392 = load i32*, i32** %24, align 8, !dbg !4382
  %393 = load i32, i32* %392, align 4, !dbg !4385
  %394 = load i32, i32* %23, align 4, !dbg !4386
  %395 = icmp eq i32 %393, %394, !dbg !4387
  %396 = load i32, i32* @x.93
  %397 = load i32, i32* @y.94
  %398 = sub i32 %396, 1
  %399 = mul i32 %396, %398
  %400 = urem i32 %399, 2
  %401 = icmp eq i32 %400, 0
  %402 = icmp slt i32 %397, 10
  %403 = or i1 %401, %402
  br i1 %403, label %originalBBpart262, label %originalBB60alteredBB

originalBBpart262:                                ; preds = %originalBB60
  br i1 %395, label %410, label %404, !dbg !4388

404:                                              ; preds = %originalBBpart262
  %405 = load i32*, i32** %24, align 8, !dbg !4389
  %406 = load i32, i32* %405, align 4, !dbg !4390
  %407 = load i32*, i32** %18, align 8, !dbg !4391
  %408 = load i32, i32* %407, align 4, !dbg !4392
  %409 = icmp eq i32 %406, %408, !dbg !4393
  br i1 %409, label %410, label %413, !dbg !4394

410:                                              ; preds = %404, %originalBBpart262
  %411 = load i32, i32* %17, align 4, !dbg !4395
  %412 = add nsw i32 %411, -1, !dbg !4395
  store i32 %412, i32* %17, align 4, !dbg !4395
  br label %418, !dbg !4396

413:                                              ; preds = %404
  %414 = load i32*, i32** %24, align 8, !dbg !4397
  %415 = load i32, i32* %414, align 4, !dbg !4398
  %416 = load i32*, i32** %18, align 8, !dbg !4399
  %417 = getelementptr inbounds i32, i32* %416, i32 1, !dbg !4399
  store i32* %417, i32** %18, align 8, !dbg !4399
  store i32 %415, i32* %417, align 4, !dbg !4400
  br label %418

418:                                              ; preds = %413, %410
  br label %419, !dbg !4401

419:                                              ; preds = %418
  %420 = load i32*, i32** %24, align 8, !dbg !4402
  %421 = getelementptr inbounds i32, i32* %420, i32 1, !dbg !4402
  store i32* %421, i32** %24, align 8, !dbg !4402
  br label %379, !dbg !4403, !llvm.loop !4404

422:                                              ; preds = %379
  br label %423, !dbg !4406

423:                                              ; preds = %422, %365
  %424 = load i32, i32* %17, align 4, !dbg !4407
  store i32 %424, i32* %12, align 4, !dbg !4408
  br label %425, !dbg !4408

425:                                              ; preds = %423, %331, %288, %originalBBpart228, %197, %108, %97, %originalBBpart24
  %426 = load i32, i32* %12, align 4, !dbg !4409
  ret i32 %426, !dbg !4409

originalBBalteredBB:                              ; preds = %originalBB, %3
  %427 = alloca i32, align 4
  %428 = alloca i8*, align 8
  %429 = alloca i32, align 4
  %430 = alloca i32**, align 8
  %431 = alloca i32, align 4
  %432 = alloca i32, align 4
  %433 = alloca i32*, align 8
  %434 = alloca i32*, align 8
  %435 = alloca i32, align 4
  %436 = alloca i32, align 4
  %437 = alloca i32, align 4
  %438 = alloca i32, align 4
  %439 = alloca i32*, align 8
  %440 = alloca i32*, align 8
  store i8* %0, i8** %428, align 8
  call void @llvm.dbg.declare(metadata i8** %428, metadata !4410, metadata !DIExpression()), !dbg !4186
  store i32 %1, i32* %429, align 4
  call void @llvm.dbg.declare(metadata i32* %429, metadata !4413, metadata !DIExpression()), !dbg !4188
  store i32** %2, i32*** %430, align 8
  call void @llvm.dbg.declare(metadata i32*** %430, metadata !4414, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.declare(metadata i32* %431, metadata !4415, metadata !DIExpression()), !dbg !4192
  call void @llvm.dbg.declare(metadata i32* %432, metadata !4416, metadata !DIExpression()), !dbg !4194
  call void @llvm.dbg.declare(metadata i32** %433, metadata !4417, metadata !DIExpression()), !dbg !4196
  %441 = load i8*, i8** %428, align 8, !dbg !4197
  %442 = icmp ne i8* %441, null, !dbg !4197
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %42
  store i32 -1, i32* %12, align 4, !dbg !4209
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %59
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %113
  %443 = load i8*, i8** %13, align 8, !dbg !4263
  %444 = icmp ne i8* %443, null, !dbg !4263
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %132
  %445 = load i8*, i8** %13, align 8, !dbg !4264
  %446 = load i32, i32* %14, align 4, !dbg !4265
  %447 = call i32 @getugroups(i32 0, i32* null, i8* %445, i32 %446), !dbg !4266
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %152
  %448 = call i32 @getgroups(i32 0, i32* null) #10, !dbg !4267
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %174
  %449 = call i32* @__errno_location() #15, !dbg !4273
  %450 = load i32, i32* %449, align 4, !dbg !4273
  %451 = icmp eq i32 %450, 38, !dbg !4276
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %205
  store i32 -1, i32* %12, align 4, !dbg !4291
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %222
  %452 = load i32, i32* %16, align 4, !dbg !4292
  %453 = icmp eq i32 %452, 0, !dbg !4294
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %244
  %454 = load i32, i32* %14, align 4, !dbg !4298
  %455 = icmp ne i32 %454, -1, !dbg !4299
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %263
  %456 = load i32, i32* %16, align 4, !dbg !4301
  %_ = sub i32 %456, 1
  %gen = mul i32 %_, 1
  %_39 = sub i32 %456, 1
  %gen40 = mul i32 %_39, 1
  %_41 = sub i32 0, %456
  %gen42 = add i32 %_41, 1
  %_43 = sub i32 0, %456
  %gen44 = add i32 %_43, 1
  %_45 = sub i32 %456, 1
  %gen46 = mul i32 %_45, 1
  %_47 = sub i32 0, %456
  %gen48 = add i32 %_47, 1
  %457 = add nsw i32 %456, 1, !dbg !4301
  store i32 %457, i32* %16, align 4, !dbg !4301
  br label %originalBB38

originalBB52alteredBB:                            ; preds = %originalBB52, %292
  %458 = load i32, i32* %16, align 4, !dbg !4312
  %459 = load i32*, i32** %18, align 8, !dbg !4313
  %460 = load i8*, i8** %13, align 8, !dbg !4314
  %461 = load i32, i32* %14, align 4, !dbg !4315
  %462 = call i32 @getugroups(i32 %458, i32* %459, i8* %460, i32 %461), !dbg !4316
  br label %originalBB52

originalBB56alteredBB:                            ; preds = %originalBB56, %341
  %463 = load i32, i32* %14, align 4, !dbg !4344
  %464 = icmp ne i32 %463, -1, !dbg !4345
  br label %originalBB56

originalBB60alteredBB:                            ; preds = %originalBB60, %383
  %465 = load i32*, i32** %24, align 8, !dbg !4382
  %466 = load i32, i32* %465, align 4, !dbg !4385
  %467 = load i32, i32* %23, align 4, !dbg !4386
  %468 = icmp eq i32 %466, %467, !dbg !4387
  br label %originalBB60
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32* @realloc_groupbuf(i32*, i64) #4 !dbg !4418 {
  %3 = alloca i32*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca i64, align 8
  store i32* %0, i32** %4, align 8
  call void @llvm.dbg.declare(metadata i32** %4, metadata !4421, metadata !DIExpression()), !dbg !4422
  store i64 %1, i64* %5, align 8
  call void @llvm.dbg.declare(metadata i64* %5, metadata !4423, metadata !DIExpression()), !dbg !4424
  %6 = load i64, i64* %5, align 8, !dbg !4425
  %7 = icmp ult i64 2305843009213693951, %6, !dbg !4425
  br i1 %7, label %8, label %10, !dbg !4427

8:                                                ; preds = %2
  %9 = call i32* @__errno_location() #15, !dbg !4428
  store i32 12, i32* %9, align 4, !dbg !4430
  store i32* null, i32** %3, align 8, !dbg !4431
  br label %17, !dbg !4431

10:                                               ; preds = %2
  %11 = load i32*, i32** %4, align 8, !dbg !4432
  %12 = bitcast i32* %11 to i8*, !dbg !4432
  %13 = load i64, i64* %5, align 8, !dbg !4433
  %14 = mul i64 %13, 4, !dbg !4434
  %15 = call i8* @realloc(i8* %12, i64 %14) #10, !dbg !4435
  %16 = bitcast i8* %15 to i32*, !dbg !4435
  store i32* %16, i32** %3, align 8, !dbg !4436
  br label %17, !dbg !4436

17:                                               ; preds = %10, %8
  %18 = load i32*, i32** %3, align 8, !dbg !4437
  ret i32* %18, !dbg !4437
}

declare dso_local i32 @getgrouplist(i8*, i32, i32*, i32*) #3

; Function Attrs: nounwind
declare dso_local i32 @getgroups(i32, i32*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @setlocale_null_r(i32, i8* nonnull, i64) #4 !dbg !4438 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !4442, metadata !DIExpression()), !dbg !4443
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !4444, metadata !DIExpression()), !dbg !4445
  store i64 %2, i64* %6, align 8
  call void @llvm.dbg.declare(metadata i64* %6, metadata !4446, metadata !DIExpression()), !dbg !4447
  %7 = load i32, i32* %4, align 4, !dbg !4448
  %8 = load i8*, i8** %5, align 8, !dbg !4449
  %9 = load i64, i64* %6, align 8, !dbg !4450
  %10 = call i32 @setlocale_null_unlocked(i32 %7, i8* %8, i64 %9), !dbg !4451
  ret i32 %10, !dbg !4452
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @setlocale_null_unlocked(i32, i8*, i64) #4 !dbg !4453 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i64, align 8
  store i32 %0, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !4454, metadata !DIExpression()), !dbg !4455
  store i8* %1, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !4456, metadata !DIExpression()), !dbg !4457
  store i64 %2, i64* %7, align 8
  call void @llvm.dbg.declare(metadata i64* %7, metadata !4458, metadata !DIExpression()), !dbg !4459
  call void @llvm.dbg.declare(metadata i8** %8, metadata !4460, metadata !DIExpression()), !dbg !4461
  %10 = load i32, i32* %5, align 4, !dbg !4462
  %11 = call i8* @setlocale_null_androidfix(i32 %10), !dbg !4463
  store i8* %11, i8** %8, align 8, !dbg !4461
  %12 = load i8*, i8** %8, align 8, !dbg !4464
  %13 = icmp eq i8* %12, null, !dbg !4466
  br i1 %13, label %14, label %37, !dbg !4467

14:                                               ; preds = %3
  %15 = load i32, i32* @x.99
  %16 = load i32, i32* @y.100
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %14, %originalBBalteredBB
  %23 = load i64, i64* %7, align 8, !dbg !4468
  %24 = icmp ugt i64 %23, 0, !dbg !4471
  %25 = load i32, i32* @x.99
  %26 = load i32, i32* @y.100
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %24, label %33, label %36, !dbg !4472

33:                                               ; preds = %originalBBpart2
  %34 = load i8*, i8** %6, align 8, !dbg !4473
  %35 = getelementptr inbounds i8, i8* %34, i64 0, !dbg !4473
  store i8 0, i8* %35, align 1, !dbg !4474
  br label %36, !dbg !4473

36:                                               ; preds = %33, %originalBBpart2
  store i32 22, i32* %4, align 4, !dbg !4475
  br label %77, !dbg !4475

37:                                               ; preds = %3
  call void @llvm.dbg.declare(metadata i64* %9, metadata !4476, metadata !DIExpression()), !dbg !4478
  %38 = load i8*, i8** %8, align 8, !dbg !4479
  %39 = call i64 @strlen(i8* %38) #13, !dbg !4480
  store i64 %39, i64* %9, align 8, !dbg !4478
  %40 = load i64, i64* %9, align 8, !dbg !4481
  %41 = load i64, i64* %7, align 8, !dbg !4483
  %42 = icmp ult i64 %40, %41, !dbg !4484
  br i1 %42, label %43, label %48, !dbg !4485

43:                                               ; preds = %37
  %44 = load i8*, i8** %6, align 8, !dbg !4486
  %45 = load i8*, i8** %8, align 8, !dbg !4488
  %46 = load i64, i64* %9, align 8, !dbg !4489
  %47 = add i64 %46, 1, !dbg !4490
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %44, i8* align 1 %45, i64 %47, i1 false), !dbg !4491
  store i32 0, i32* %4, align 4, !dbg !4492
  br label %77, !dbg !4492

48:                                               ; preds = %37
  %49 = load i32, i32* @x.99
  %50 = load i32, i32* @y.100
  %51 = sub i32 %49, 1
  %52 = mul i32 %49, %51
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %50, 10
  %56 = or i1 %54, %55
  br i1 %56, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %48, %originalBB1alteredBB
  %57 = load i64, i64* %7, align 8, !dbg !4493
  %58 = icmp ugt i64 %57, 0, !dbg !4496
  %59 = load i32, i32* @x.99
  %60 = load i32, i32* @y.100
  %61 = sub i32 %59, 1
  %62 = mul i32 %59, %61
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %60, 10
  %66 = or i1 %64, %65
  br i1 %66, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %58, label %67, label %76, !dbg !4497

67:                                               ; preds = %originalBBpart24
  %68 = load i8*, i8** %6, align 8, !dbg !4498
  %69 = load i8*, i8** %8, align 8, !dbg !4500
  %70 = load i64, i64* %7, align 8, !dbg !4501
  %71 = sub i64 %70, 1, !dbg !4502
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %68, i8* align 1 %69, i64 %71, i1 false), !dbg !4503
  %72 = load i8*, i8** %6, align 8, !dbg !4504
  %73 = load i64, i64* %7, align 8, !dbg !4505
  %74 = sub i64 %73, 1, !dbg !4506
  %75 = getelementptr inbounds i8, i8* %72, i64 %74, !dbg !4504
  store i8 0, i8* %75, align 1, !dbg !4507
  br label %76, !dbg !4508

76:                                               ; preds = %67, %originalBBpart24
  store i32 34, i32* %4, align 4, !dbg !4509
  br label %77, !dbg !4509

77:                                               ; preds = %76, %43, %36
  %78 = load i32, i32* %4, align 4, !dbg !4510
  ret i32 %78, !dbg !4510

originalBBalteredBB:                              ; preds = %originalBB, %14
  %79 = load i64, i64* %7, align 8, !dbg !4468
  %80 = icmp ugt i64 %79, 0, !dbg !4471
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %48
  %81 = load i64, i64* %7, align 8, !dbg !4493
  %82 = icmp ugt i64 %81, 0, !dbg !4496
  br label %originalBB1
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @setlocale_null_androidfix(i32) #4 !dbg !4511 {
  %2 = alloca i32, align 4
  %3 = alloca i8*, align 8
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !4514, metadata !DIExpression()), !dbg !4515
  call void @llvm.dbg.declare(metadata i8** %3, metadata !4516, metadata !DIExpression()), !dbg !4517
  %4 = load i32, i32* %2, align 4, !dbg !4518
  %5 = call i8* @setlocale(i32 %4, i8* null) #10, !dbg !4519
  store i8* %5, i8** %3, align 8, !dbg !4517
  %6 = load i8*, i8** %3, align 8, !dbg !4520
  ret i8* %6, !dbg !4521
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rpl_fclose(%struct._IO_FILE* nonnull) #4 !dbg !4522 {
  %2 = alloca i32, align 4
  %3 = alloca %struct._IO_FILE*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store %struct._IO_FILE* %0, %struct._IO_FILE** %3, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %3, metadata !4560, metadata !DIExpression()), !dbg !4561
  call void @llvm.dbg.declare(metadata i32* %4, metadata !4562, metadata !DIExpression()), !dbg !4563
  store i32 0, i32* %4, align 4, !dbg !4563
  call void @llvm.dbg.declare(metadata i32* %5, metadata !4564, metadata !DIExpression()), !dbg !4565
  call void @llvm.dbg.declare(metadata i32* %6, metadata !4566, metadata !DIExpression()), !dbg !4567
  store i32 0, i32* %6, align 4, !dbg !4567
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8, !dbg !4568
  %8 = call i32 @fileno(%struct._IO_FILE* %7) #10, !dbg !4569
  store i32 %8, i32* %5, align 4, !dbg !4570
  %9 = load i32, i32* %5, align 4, !dbg !4571
  %10 = icmp slt i32 %9, 0, !dbg !4573
  br i1 %10, label %11, label %30, !dbg !4574

11:                                               ; preds = %1
  %12 = load i32, i32* @x.103
  %13 = load i32, i32* @y.104
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %11, %originalBBalteredBB
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8, !dbg !4575
  %21 = call i32 @fclose(%struct._IO_FILE* %20), !dbg !4576
  store i32 %21, i32* %2, align 4, !dbg !4577
  %22 = load i32, i32* @x.103
  %23 = load i32, i32* @y.104
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %104, !dbg !4577

30:                                               ; preds = %1
  %31 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8, !dbg !4578
  %32 = call i32 @__freading(%struct._IO_FILE* %31) #10, !dbg !4578
  %33 = icmp ne i32 %32, 0, !dbg !4578
  br i1 %33, label %34, label %39, !dbg !4580

34:                                               ; preds = %30
  %35 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8, !dbg !4581
  %36 = call i32 @fileno(%struct._IO_FILE* %35) #10, !dbg !4582
  %37 = call i64 @lseek(i32 %36, i64 0, i32 1) #10, !dbg !4583
  %38 = icmp ne i64 %37, -1, !dbg !4584
  br i1 %38, label %39, label %62, !dbg !4585

39:                                               ; preds = %34, %30
  %40 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8, !dbg !4586
  %41 = call i32 @rpl_fflush(%struct._IO_FILE* %40), !dbg !4587
  %42 = icmp ne i32 %41, 0, !dbg !4587
  br i1 %42, label %43, label %62, !dbg !4588

43:                                               ; preds = %39
  %44 = load i32, i32* @x.103
  %45 = load i32, i32* @y.104
  %46 = sub i32 %44, 1
  %47 = mul i32 %44, %46
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %45, 10
  %51 = or i1 %49, %50
  br i1 %51, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %43, %originalBB1alteredBB
  %52 = call i32* @__errno_location() #15, !dbg !4589
  %53 = load i32, i32* %52, align 4, !dbg !4589
  store i32 %53, i32* %4, align 4, !dbg !4590
  %54 = load i32, i32* @x.103
  %55 = load i32, i32* @y.104
  %56 = sub i32 %54, 1
  %57 = mul i32 %54, %56
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %55, 10
  %61 = or i1 %59, %60
  br i1 %61, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %62, !dbg !4591

62:                                               ; preds = %originalBBpart24, %39, %34
  %63 = load i32, i32* @x.103
  %64 = load i32, i32* @y.104
  %65 = sub i32 %63, 1
  %66 = mul i32 %63, %65
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %64, 10
  %70 = or i1 %68, %69
  br i1 %70, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %62, %originalBB6alteredBB
  %71 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8, !dbg !4592
  %72 = call i32 @fclose(%struct._IO_FILE* %71), !dbg !4593
  store i32 %72, i32* %6, align 4, !dbg !4594
  %73 = load i32, i32* %4, align 4, !dbg !4595
  %74 = icmp ne i32 %73, 0, !dbg !4597
  %75 = load i32, i32* @x.103
  %76 = load i32, i32* @y.104
  %77 = sub i32 %75, 1
  %78 = mul i32 %75, %77
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %76, 10
  %82 = or i1 %80, %81
  br i1 %82, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %74, label %83, label %86, !dbg !4598

83:                                               ; preds = %originalBBpart28
  %84 = load i32, i32* %4, align 4, !dbg !4599
  %85 = call i32* @__errno_location() #15, !dbg !4601
  store i32 %84, i32* %85, align 4, !dbg !4602
  store i32 -1, i32* %6, align 4, !dbg !4603
  br label %86, !dbg !4604

86:                                               ; preds = %83, %originalBBpart28
  %87 = load i32, i32* @x.103
  %88 = load i32, i32* @y.104
  %89 = sub i32 %87, 1
  %90 = mul i32 %87, %89
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %88, 10
  %94 = or i1 %92, %93
  br i1 %94, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %86, %originalBB10alteredBB
  %95 = load i32, i32* %6, align 4, !dbg !4605
  store i32 %95, i32* %2, align 4, !dbg !4606
  %96 = load i32, i32* @x.103
  %97 = load i32, i32* @y.104
  %98 = sub i32 %96, 1
  %99 = mul i32 %96, %98
  %100 = urem i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = icmp slt i32 %97, 10
  %103 = or i1 %101, %102
  br i1 %103, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %104, !dbg !4606

104:                                              ; preds = %originalBBpart212, %originalBBpart2
  %105 = load i32, i32* %2, align 4, !dbg !4607
  ret i32 %105, !dbg !4607

originalBBalteredBB:                              ; preds = %originalBB, %11
  %106 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8, !dbg !4575
  %107 = call i32 @fclose(%struct._IO_FILE* %106), !dbg !4576
  store i32 %107, i32* %2, align 4, !dbg !4577
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %43
  %108 = call i32* @__errno_location() #15, !dbg !4589
  %109 = load i32, i32* %108, align 4, !dbg !4589
  store i32 %109, i32* %4, align 4, !dbg !4590
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %62
  %110 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8, !dbg !4592
  %111 = call i32 @fclose(%struct._IO_FILE* %110), !dbg !4593
  store i32 %111, i32* %6, align 4, !dbg !4594
  %112 = load i32, i32* %4, align 4, !dbg !4595
  %113 = icmp ne i32 %112, 0, !dbg !4597
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %86
  %114 = load i32, i32* %6, align 4, !dbg !4605
  store i32 %114, i32* %2, align 4, !dbg !4606
  br label %originalBB10
}

; Function Attrs: nounwind
declare dso_local i32 @fileno(%struct._IO_FILE*) #2

declare dso_local i32 @fclose(%struct._IO_FILE*) #3

; Function Attrs: nounwind
declare dso_local i32 @__freading(%struct._IO_FILE*) #2

; Function Attrs: nounwind
declare dso_local i64 @lseek(i32, i64, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rpl_fflush(%struct._IO_FILE*) #4 !dbg !4608 {
  %2 = load i32, i32* @x.105
  %3 = load i32, i32* @y.106
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i32, align 4
  %11 = alloca %struct._IO_FILE*, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %11, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %11, metadata !4646, metadata !DIExpression()), !dbg !4647
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !4648
  %13 = icmp eq %struct._IO_FILE* %12, null, !dbg !4650
  %14 = load i32, i32* @x.105
  %15 = load i32, i32* @y.106
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %13, label %26, label %22, !dbg !4651

22:                                               ; preds = %originalBBpart2
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !4652
  %24 = call i32 @__freading(%struct._IO_FILE* %23) #10, !dbg !4652
  %25 = icmp ne i32 %24, 0, !dbg !4652
  br i1 %25, label %29, label %26, !dbg !4653

26:                                               ; preds = %22, %originalBBpart2
  %27 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !4654
  %28 = call i32 @fflush(%struct._IO_FILE* %27), !dbg !4655
  store i32 %28, i32* %10, align 4, !dbg !4656
  br label %49, !dbg !4656

29:                                               ; preds = %22
  %30 = load i32, i32* @x.105
  %31 = load i32, i32* @y.106
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %29, %originalBB1alteredBB
  %38 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !4657
  call void @clear_ungetc_buffer_preserving_position(%struct._IO_FILE* %38), !dbg !4658
  %39 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !4659
  %40 = call i32 @fflush(%struct._IO_FILE* %39), !dbg !4660
  store i32 %40, i32* %10, align 4, !dbg !4661
  %41 = load i32, i32* @x.105
  %42 = load i32, i32* @y.106
  %43 = sub i32 %41, 1
  %44 = mul i32 %41, %43
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %46, %47
  br i1 %48, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %49, !dbg !4661

49:                                               ; preds = %originalBBpart24, %26
  %50 = load i32, i32* %10, align 4, !dbg !4662
  ret i32 %50, !dbg !4662

originalBBalteredBB:                              ; preds = %originalBB, %1
  %51 = alloca i32, align 4
  %52 = alloca %struct._IO_FILE*, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %52, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %52, metadata !4663, metadata !DIExpression()), !dbg !4647
  %53 = load %struct._IO_FILE*, %struct._IO_FILE** %52, align 8, !dbg !4648
  %54 = icmp eq %struct._IO_FILE* %53, null, !dbg !4650
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %29
  %55 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !4657
  call void @clear_ungetc_buffer_preserving_position(%struct._IO_FILE* %55), !dbg !4658
  %56 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !4659
  %57 = call i32 @fflush(%struct._IO_FILE* %56), !dbg !4660
  store i32 %57, i32* %10, align 4, !dbg !4661
  br label %originalBB1
}

declare dso_local i32 @fflush(%struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @clear_ungetc_buffer_preserving_position(%struct._IO_FILE*) #4 !dbg !4702 {
  %2 = alloca %struct._IO_FILE*, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %2, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %2, metadata !4705, metadata !DIExpression()), !dbg !4706
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %2, align 8, !dbg !4707
  %4 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %3, i32 0, i32 0, !dbg !4709
  %5 = load i32, i32* %4, align 8, !dbg !4709
  %6 = and i32 %5, 256, !dbg !4710
  %7 = icmp ne i32 %6, 0, !dbg !4710
  br i1 %7, label %8, label %11, !dbg !4711

8:                                                ; preds = %1
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** %2, align 8, !dbg !4712
  %10 = call i32 @rpl_fseeko(%struct._IO_FILE* %9, i64 0, i32 1), !dbg !4713
  br label %11, !dbg !4713

11:                                               ; preds = %8, %1
  %12 = load i32, i32* @x.107
  %13 = load i32, i32* @y.108
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %11, %originalBBalteredBB
  %20 = load i32, i32* @x.107
  %21 = load i32, i32* @y.108
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void, !dbg !4714

originalBBalteredBB:                              ; preds = %originalBB, %11
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rpl_fseeko(%struct._IO_FILE* nonnull, i64, i32) #4 !dbg !4715 {
  %4 = alloca i32, align 4
  %5 = alloca %struct._IO_FILE*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i32, align 4
  %8 = alloca i64, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %5, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %5, metadata !4754, metadata !DIExpression()), !dbg !4755
  store i64 %1, i64* %6, align 8
  call void @llvm.dbg.declare(metadata i64* %6, metadata !4756, metadata !DIExpression()), !dbg !4757
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !4758, metadata !DIExpression()), !dbg !4759
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8, !dbg !4760
  %10 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %9, i32 0, i32 2, !dbg !4762
  %11 = load i8*, i8** %10, align 8, !dbg !4762
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8, !dbg !4763
  %13 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %12, i32 0, i32 1, !dbg !4764
  %14 = load i8*, i8** %13, align 8, !dbg !4764
  %15 = icmp eq i8* %11, %14, !dbg !4765
  br i1 %15, label %16, label %78, !dbg !4766

16:                                               ; preds = %3
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8, !dbg !4767
  %18 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %17, i32 0, i32 5, !dbg !4768
  %19 = load i8*, i8** %18, align 8, !dbg !4768
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8, !dbg !4769
  %21 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %20, i32 0, i32 4, !dbg !4770
  %22 = load i8*, i8** %21, align 8, !dbg !4770
  %23 = icmp eq i8* %19, %22, !dbg !4771
  br i1 %23, label %24, label %78, !dbg !4772

24:                                               ; preds = %16
  %25 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8, !dbg !4773
  %26 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %25, i32 0, i32 9, !dbg !4774
  %27 = load i8*, i8** %26, align 8, !dbg !4774
  %28 = icmp eq i8* %27, null, !dbg !4775
  br i1 %28, label %29, label %78, !dbg !4776

29:                                               ; preds = %24
  call void @llvm.dbg.declare(metadata i64* %8, metadata !4777, metadata !DIExpression()), !dbg !4779
  %30 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8, !dbg !4780
  %31 = call i32 @fileno(%struct._IO_FILE* %30) #10, !dbg !4781
  %32 = load i64, i64* %6, align 8, !dbg !4782
  %33 = load i32, i32* %7, align 4, !dbg !4783
  %34 = call i64 @lseek(i32 %31, i64 %32, i32 %33) #10, !dbg !4784
  store i64 %34, i64* %8, align 8, !dbg !4779
  %35 = load i64, i64* %8, align 8, !dbg !4785
  %36 = icmp eq i64 %35, -1, !dbg !4787
  br i1 %36, label %37, label %54, !dbg !4788

37:                                               ; preds = %29
  %38 = load i32, i32* @x.109
  %39 = load i32, i32* @y.110
  %40 = sub i32 %38, 1
  %41 = mul i32 %38, %40
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %43, %44
  br i1 %45, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %37, %originalBBalteredBB
  store i32 -1, i32* %4, align 4, !dbg !4789
  %46 = load i32, i32* @x.109
  %47 = load i32, i32* @y.110
  %48 = sub i32 %46, 1
  %49 = mul i32 %46, %48
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %47, 10
  %53 = or i1 %51, %52
  br i1 %53, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %99, !dbg !4789

54:                                               ; preds = %29
  %55 = load i32, i32* @x.109
  %56 = load i32, i32* @y.110
  %57 = sub i32 %55, 1
  %58 = mul i32 %55, %57
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %56, 10
  %62 = or i1 %60, %61
  br i1 %62, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %54, %originalBB1alteredBB
  %63 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8, !dbg !4791
  %64 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %63, i32 0, i32 0, !dbg !4792
  %65 = load i32, i32* %64, align 8, !dbg !4793
  %66 = and i32 %65, -17, !dbg !4793
  store i32 %66, i32* %64, align 8, !dbg !4793
  %67 = load i64, i64* %8, align 8, !dbg !4794
  %68 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8, !dbg !4795
  %69 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %68, i32 0, i32 21, !dbg !4796
  store i64 %67, i64* %69, align 8, !dbg !4797
  store i32 0, i32* %4, align 4, !dbg !4798
  %70 = load i32, i32* @x.109
  %71 = load i32, i32* @y.110
  %72 = sub i32 %70, 1
  %73 = mul i32 %70, %72
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %71, 10
  %77 = or i1 %75, %76
  br i1 %77, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %99, !dbg !4798

78:                                               ; preds = %24, %16, %3
  %79 = load i32, i32* @x.109
  %80 = load i32, i32* @y.110
  %81 = sub i32 %79, 1
  %82 = mul i32 %79, %81
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %80, 10
  %86 = or i1 %84, %85
  br i1 %86, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %78, %originalBB6alteredBB
  %87 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8, !dbg !4799
  %88 = load i64, i64* %6, align 8, !dbg !4800
  %89 = load i32, i32* %7, align 4, !dbg !4801
  %90 = call i32 @fseeko(%struct._IO_FILE* %87, i64 %88, i32 %89), !dbg !4802
  store i32 %90, i32* %4, align 4, !dbg !4803
  %91 = load i32, i32* @x.109
  %92 = load i32, i32* @y.110
  %93 = sub i32 %91, 1
  %94 = mul i32 %91, %93
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %92, 10
  %98 = or i1 %96, %97
  br i1 %98, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %99, !dbg !4803

99:                                               ; preds = %originalBBpart28, %originalBBpart24, %originalBBpart2
  %100 = load i32, i32* %4, align 4, !dbg !4804
  ret i32 %100, !dbg !4804

originalBBalteredBB:                              ; preds = %originalBB, %37
  store i32 -1, i32* %4, align 4, !dbg !4789
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %54
  %101 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8, !dbg !4791
  %102 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %101, i32 0, i32 0, !dbg !4792
  %103 = load i32, i32* %102, align 8, !dbg !4793
  %_ = sub i32 %103, -17
  %gen = mul i32 %_, -17
  %104 = and i32 %103, -17, !dbg !4793
  store i32 %104, i32* %102, align 8, !dbg !4793
  %105 = load i64, i64* %8, align 8, !dbg !4794
  %106 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8, !dbg !4795
  %107 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %106, i32 0, i32 21, !dbg !4796
  store i64 %105, i64* %107, align 8, !dbg !4797
  store i32 0, i32* %4, align 4, !dbg !4798
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %78
  %108 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8, !dbg !4799
  %109 = load i64, i64* %6, align 8, !dbg !4800
  %110 = load i32, i32* %7, align 4, !dbg !4801
  %111 = call i32 @fseeko(%struct._IO_FILE* %108, i64 %109, i32 %110), !dbg !4802
  store i32 %111, i32* %4, align 4, !dbg !4803
  br label %originalBB6
}

declare dso_local i32 @fseeko(%struct._IO_FILE*, i64, i32) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @c_tolower(i32) #4 !dbg !4805 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !4809, metadata !DIExpression()), !dbg !4810
  %4 = load i32, i32* %3, align 4, !dbg !4811
  switch i32 %4, label %25 [
    i32 65, label %5
    i32 66, label %5
    i32 67, label %5
    i32 68, label %5
    i32 69, label %5
    i32 70, label %5
    i32 71, label %5
    i32 72, label %5
    i32 73, label %5
    i32 74, label %5
    i32 75, label %5
    i32 76, label %5
    i32 77, label %5
    i32 78, label %5
    i32 79, label %5
    i32 80, label %5
    i32 81, label %5
    i32 82, label %5
    i32 83, label %5
    i32 84, label %5
    i32 85, label %5
    i32 86, label %5
    i32 87, label %5
    i32 88, label %5
    i32 89, label %5
    i32 90, label %5
  ], !dbg !4812

5:                                                ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1
  %6 = load i32, i32* @x.111
  %7 = load i32, i32* @y.112
  %8 = sub i32 %6, 1
  %9 = mul i32 %6, %8
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %7, 10
  %13 = or i1 %11, %12
  br i1 %13, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %5, %originalBBalteredBB
  %14 = load i32, i32* %3, align 4, !dbg !4813
  %15 = sub nsw i32 %14, 65, !dbg !4815
  %16 = add nsw i32 %15, 97, !dbg !4816
  store i32 %16, i32* %2, align 4, !dbg !4817
  %17 = load i32, i32* @x.111
  %18 = load i32, i32* @y.112
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %43, !dbg !4817

25:                                               ; preds = %1
  %26 = load i32, i32* @x.111
  %27 = load i32, i32* @y.112
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %25, %originalBB26alteredBB
  %34 = load i32, i32* %3, align 4, !dbg !4818
  store i32 %34, i32* %2, align 4, !dbg !4819
  %35 = load i32, i32* @x.111
  %36 = load i32, i32* @y.112
  %37 = sub i32 %35, 1
  %38 = mul i32 %35, %37
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %40, %41
  br i1 %42, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br label %43, !dbg !4819

43:                                               ; preds = %originalBBpart228, %originalBBpart2
  %44 = load i32, i32* %2, align 4, !dbg !4820
  ret i32 %44, !dbg !4820

originalBBalteredBB:                              ; preds = %originalBB, %5
  %45 = load i32, i32* %3, align 4, !dbg !4813
  %_ = sub i32 %45, 65
  %gen = mul i32 %_, 65
  %_1 = shl i32 %45, 65
  %_2 = sub i32 0, %45
  %gen3 = add i32 %_2, 65
  %_4 = sub i32 %45, 65
  %gen5 = mul i32 %_4, 65
  %_6 = sub i32 %45, 65
  %gen7 = mul i32 %_6, 65
  %_8 = shl i32 %45, 65
  %_9 = sub i32 %45, 65
  %gen10 = mul i32 %_9, 65
  %_11 = sub i32 %45, 65
  %gen12 = mul i32 %_11, 65
  %46 = sub nsw i32 %45, 65, !dbg !4815
  %_13 = sub i32 %46, 97
  %gen14 = mul i32 %_13, 97
  %_15 = sub i32 %46, 97
  %gen16 = mul i32 %_15, 97
  %_17 = shl i32 %46, 97
  %_18 = sub i32 %46, 97
  %gen19 = mul i32 %_18, 97
  %_20 = shl i32 %46, 97
  %_21 = sub i32 0, %46
  %gen22 = add i32 %_21, 97
  %_23 = shl i32 %46, 97
  %_24 = sub i32 0, %46
  %gen25 = add i32 %_24, 97
  %47 = add nsw i32 %46, 97, !dbg !4816
  store i32 %47, i32* %2, align 4, !dbg !4817
  br label %originalBB

originalBB26alteredBB:                            ; preds = %originalBB26, %25
  %48 = load i32, i32* %3, align 4, !dbg !4818
  store i32 %48, i32* %2, align 4, !dbg !4819
  br label %originalBB26
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @getugroups(i32, i32*, i8*, i32) #4 !dbg !4821 {
  %5 = alloca i32, align 4
  %6 = alloca i32*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i8**, align 8
  %11 = alloca %struct.group*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  store i32 %0, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !4825, metadata !DIExpression()), !dbg !4826
  store i32* %1, i32** %6, align 8
  call void @llvm.dbg.declare(metadata i32** %6, metadata !4827, metadata !DIExpression()), !dbg !4828
  store i8* %2, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !4829, metadata !DIExpression()), !dbg !4830
  store i32 %3, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !4831, metadata !DIExpression()), !dbg !4832
  call void @llvm.dbg.declare(metadata i32* %9, metadata !4833, metadata !DIExpression()), !dbg !4834
  store i32 0, i32* %9, align 4, !dbg !4834
  %14 = load i32, i32* %8, align 4, !dbg !4835
  %15 = icmp ne i32 %14, -1, !dbg !4837
  br i1 %15, label %16, label %60, !dbg !4838

16:                                               ; preds = %4
  %17 = load i32, i32* @x.113
  %18 = load i32, i32* @y.114
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %16, %originalBBalteredBB
  %25 = load i32, i32* %5, align 4, !dbg !4839
  %26 = icmp ne i32 %25, 0, !dbg !4842
  %27 = load i32, i32* @x.113
  %28 = load i32, i32* @y.114
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %26, label %35, label %57, !dbg !4843

35:                                               ; preds = %originalBBpart2
  %36 = load i32, i32* @x.113
  %37 = load i32, i32* @y.114
  %38 = sub i32 %36, 1
  %39 = mul i32 %36, %38
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %37, 10
  %43 = or i1 %41, %42
  br i1 %43, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %35, %originalBB1alteredBB
  %44 = load i32, i32* %8, align 4, !dbg !4844
  %45 = load i32*, i32** %6, align 8, !dbg !4845
  %46 = load i32, i32* %9, align 4, !dbg !4846
  %47 = sext i32 %46 to i64, !dbg !4845
  %48 = getelementptr inbounds i32, i32* %45, i64 %47, !dbg !4845
  store i32 %44, i32* %48, align 4, !dbg !4847
  %49 = load i32, i32* @x.113
  %50 = load i32, i32* @y.114
  %51 = sub i32 %49, 1
  %52 = mul i32 %49, %51
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %50, 10
  %56 = or i1 %54, %55
  br i1 %56, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %57, !dbg !4845

57:                                               ; preds = %originalBBpart24, %originalBBpart2
  %58 = load i32, i32* %9, align 4, !dbg !4848
  %59 = add nsw i32 %58, 1, !dbg !4848
  store i32 %59, i32* %9, align 4, !dbg !4848
  br label %60, !dbg !4849

60:                                               ; preds = %57, %4
  %61 = load i32, i32* @x.113
  %62 = load i32, i32* @y.114
  %63 = sub i32 %61, 1
  %64 = mul i32 %61, %63
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %62, 10
  %68 = or i1 %66, %67
  br i1 %68, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %60, %originalBB6alteredBB
  call void @setgrent(), !dbg !4850
  %69 = load i32, i32* @x.113
  %70 = load i32, i32* @y.114
  %71 = sub i32 %69, 1
  %72 = mul i32 %69, %71
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %74, %75
  br i1 %76, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %77, !dbg !4851

77:                                               ; preds = %217, %originalBBpart28
  call void @llvm.dbg.declare(metadata i8*** %10, metadata !4852, metadata !DIExpression()), !dbg !4854
  call void @llvm.dbg.declare(metadata %struct.group** %11, metadata !4855, metadata !DIExpression()), !dbg !4863
  %78 = call i32* @__errno_location() #15, !dbg !4864
  store i32 0, i32* %78, align 4, !dbg !4865
  %79 = call %struct.group* @getgrent(), !dbg !4866
  store %struct.group* %79, %struct.group** %11, align 8, !dbg !4867
  %80 = load %struct.group*, %struct.group** %11, align 8, !dbg !4868
  %81 = icmp eq %struct.group* %80, null, !dbg !4870
  br i1 %81, label %82, label %99, !dbg !4871

82:                                               ; preds = %77
  %83 = load i32, i32* @x.113
  %84 = load i32, i32* @y.114
  %85 = sub i32 %83, 1
  %86 = mul i32 %83, %85
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %84, 10
  %90 = or i1 %88, %89
  br i1 %90, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %82, %originalBB10alteredBB
  %91 = load i32, i32* @x.113
  %92 = load i32, i32* @y.114
  %93 = sub i32 %91, 1
  %94 = mul i32 %91, %93
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %92, 10
  %98 = or i1 %96, %97
  br i1 %98, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %218, !dbg !4872

99:                                               ; preds = %77
  %100 = load i32, i32* @x.113
  %101 = load i32, i32* @y.114
  %102 = sub i32 %100, 1
  %103 = mul i32 %100, %102
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %101, 10
  %107 = or i1 %105, %106
  br i1 %107, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %99, %originalBB14alteredBB
  %108 = load %struct.group*, %struct.group** %11, align 8, !dbg !4873
  %109 = getelementptr inbounds %struct.group, %struct.group* %108, i32 0, i32 3, !dbg !4875
  %110 = load i8**, i8*** %109, align 8, !dbg !4875
  store i8** %110, i8*** %10, align 8, !dbg !4876
  %111 = load i32, i32* @x.113
  %112 = load i32, i32* @y.114
  %113 = sub i32 %111, 1
  %114 = mul i32 %111, %113
  %115 = urem i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %112, 10
  %118 = or i1 %116, %117
  br i1 %118, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %119, !dbg !4877

119:                                              ; preds = %214, %originalBBpart216
  %120 = load i8**, i8*** %10, align 8, !dbg !4878
  %121 = load i8*, i8** %120, align 8, !dbg !4880
  %122 = icmp ne i8* %121, null, !dbg !4881
  br i1 %122, label %123, label %217, !dbg !4881

123:                                              ; preds = %119
  call void @llvm.dbg.declare(metadata i32* %12, metadata !4882, metadata !DIExpression()), !dbg !4884
  %124 = load i32, i32* @x.113
  %125 = load i32, i32* @y.114
  %126 = sub i32 %124, 1
  %127 = mul i32 %124, %126
  %128 = urem i32 %127, 2
  %129 = icmp eq i32 %128, 0
  %130 = icmp slt i32 %125, 10
  %131 = or i1 %129, %130
  br i1 %131, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %123, %originalBB18alteredBB
  %132 = load i8*, i8** %7, align 8, !dbg !4885
  %133 = load i8**, i8*** %10, align 8, !dbg !4885
  %134 = load i8*, i8** %133, align 8, !dbg !4885
  %135 = call i32 @strcmp(i8* %132, i8* %134) #13, !dbg !4885
  %136 = icmp eq i32 %135, 0, !dbg !4885
  %137 = load i32, i32* @x.113
  %138 = load i32, i32* @y.114
  %139 = sub i32 %137, 1
  %140 = mul i32 %137, %139
  %141 = urem i32 %140, 2
  %142 = icmp eq i32 %141, 0
  %143 = icmp slt i32 %138, 10
  %144 = or i1 %142, %143
  br i1 %144, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br i1 %136, label %146, label %145, !dbg !4887

145:                                              ; preds = %originalBBpart220
  br label %214, !dbg !4888

146:                                              ; preds = %originalBBpart220
  store i32 0, i32* %12, align 4, !dbg !4889
  br label %147, !dbg !4891

147:                                              ; preds = %182, %146
  %148 = load i32, i32* %12, align 4, !dbg !4892
  %149 = load i32, i32* %9, align 4, !dbg !4894
  %150 = icmp slt i32 %148, %149, !dbg !4895
  br i1 %150, label %151, label %185, !dbg !4896

151:                                              ; preds = %147
  %152 = load i32*, i32** %6, align 8, !dbg !4897
  %153 = icmp ne i32* %152, null, !dbg !4897
  br i1 %153, label %154, label %181, !dbg !4899

154:                                              ; preds = %151
  %155 = load i32, i32* @x.113
  %156 = load i32, i32* @y.114
  %157 = sub i32 %155, 1
  %158 = mul i32 %155, %157
  %159 = urem i32 %158, 2
  %160 = icmp eq i32 %159, 0
  %161 = icmp slt i32 %156, 10
  %162 = or i1 %160, %161
  br i1 %162, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %154, %originalBB22alteredBB
  %163 = load i32*, i32** %6, align 8, !dbg !4900
  %164 = load i32, i32* %12, align 4, !dbg !4901
  %165 = sext i32 %164 to i64, !dbg !4900
  %166 = getelementptr inbounds i32, i32* %163, i64 %165, !dbg !4900
  %167 = load i32, i32* %166, align 4, !dbg !4900
  %168 = load %struct.group*, %struct.group** %11, align 8, !dbg !4902
  %169 = getelementptr inbounds %struct.group, %struct.group* %168, i32 0, i32 2, !dbg !4903
  %170 = load i32, i32* %169, align 8, !dbg !4903
  %171 = icmp eq i32 %167, %170, !dbg !4904
  %172 = load i32, i32* @x.113
  %173 = load i32, i32* @y.114
  %174 = sub i32 %172, 1
  %175 = mul i32 %172, %174
  %176 = urem i32 %175, 2
  %177 = icmp eq i32 %176, 0
  %178 = icmp slt i32 %173, 10
  %179 = or i1 %177, %178
  br i1 %179, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br i1 %171, label %180, label %181, !dbg !4905

180:                                              ; preds = %originalBBpart224
  br label %185, !dbg !4906

181:                                              ; preds = %originalBBpart224, %151
  br label %182, !dbg !4903

182:                                              ; preds = %181
  %183 = load i32, i32* %12, align 4, !dbg !4907
  %184 = add nsw i32 %183, 1, !dbg !4907
  store i32 %184, i32* %12, align 4, !dbg !4907
  br label %147, !dbg !4908, !llvm.loop !4909

185:                                              ; preds = %180, %147
  %186 = load i32, i32* %12, align 4, !dbg !4911
  %187 = load i32, i32* %9, align 4, !dbg !4913
  %188 = icmp eq i32 %186, %187, !dbg !4914
  br i1 %188, label %189, label %213, !dbg !4915

189:                                              ; preds = %185
  %190 = load i32, i32* %5, align 4, !dbg !4916
  %191 = icmp ne i32 %190, 0, !dbg !4919
  br i1 %191, label %192, label %205, !dbg !4920

192:                                              ; preds = %189
  %193 = load i32, i32* %9, align 4, !dbg !4921
  %194 = load i32, i32* %5, align 4, !dbg !4924
  %195 = icmp sge i32 %193, %194, !dbg !4925
  br i1 %195, label %196, label %197, !dbg !4926

196:                                              ; preds = %192
  br label %256, !dbg !4927

197:                                              ; preds = %192
  %198 = load %struct.group*, %struct.group** %11, align 8, !dbg !4928
  %199 = getelementptr inbounds %struct.group, %struct.group* %198, i32 0, i32 2, !dbg !4929
  %200 = load i32, i32* %199, align 8, !dbg !4929
  %201 = load i32*, i32** %6, align 8, !dbg !4930
  %202 = load i32, i32* %9, align 4, !dbg !4931
  %203 = sext i32 %202 to i64, !dbg !4930
  %204 = getelementptr inbounds i32, i32* %201, i64 %203, !dbg !4930
  store i32 %200, i32* %204, align 4, !dbg !4932
  br label %205, !dbg !4933

205:                                              ; preds = %197, %189
  %206 = load i32, i32* %9, align 4, !dbg !4934
  %207 = icmp eq i32 %206, 2147483647, !dbg !4936
  br i1 %207, label %208, label %210, !dbg !4937

208:                                              ; preds = %205
  %209 = call i32* @__errno_location() #15, !dbg !4938
  store i32 75, i32* %209, align 4, !dbg !4940
  br label %256, !dbg !4941

210:                                              ; preds = %205
  %211 = load i32, i32* %9, align 4, !dbg !4942
  %212 = add nsw i32 %211, 1, !dbg !4942
  store i32 %212, i32* %9, align 4, !dbg !4942
  br label %213, !dbg !4943

213:                                              ; preds = %210, %185
  br label %214, !dbg !4944

214:                                              ; preds = %213, %145
  %215 = load i8**, i8*** %10, align 8, !dbg !4945
  %216 = getelementptr inbounds i8*, i8** %215, i32 1, !dbg !4945
  store i8** %216, i8*** %10, align 8, !dbg !4945
  br label %119, !dbg !4946, !llvm.loop !4947

217:                                              ; preds = %119
  br label %77, !dbg !4851, !llvm.loop !4949

218:                                              ; preds = %originalBBpart212
  %219 = load i32, i32* @x.113
  %220 = load i32, i32* @y.114
  %221 = sub i32 %219, 1
  %222 = mul i32 %219, %221
  %223 = urem i32 %222, 2
  %224 = icmp eq i32 %223, 0
  %225 = icmp slt i32 %220, 10
  %226 = or i1 %224, %225
  br i1 %226, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %218, %originalBB26alteredBB
  %227 = call i32* @__errno_location() #15, !dbg !4951
  %228 = load i32, i32* %227, align 4, !dbg !4951
  %229 = icmp ne i32 %228, 0, !dbg !4953
  %230 = load i32, i32* @x.113
  %231 = load i32, i32* @y.114
  %232 = sub i32 %230, 1
  %233 = mul i32 %230, %232
  %234 = urem i32 %233, 2
  %235 = icmp eq i32 %234, 0
  %236 = icmp slt i32 %231, 10
  %237 = or i1 %235, %236
  br i1 %237, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br i1 %229, label %238, label %255, !dbg !4954

238:                                              ; preds = %originalBBpart228
  %239 = load i32, i32* @x.113
  %240 = load i32, i32* @y.114
  %241 = sub i32 %239, 1
  %242 = mul i32 %239, %241
  %243 = urem i32 %242, 2
  %244 = icmp eq i32 %243, 0
  %245 = icmp slt i32 %240, 10
  %246 = or i1 %244, %245
  br i1 %246, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %238, %originalBB30alteredBB
  store i32 -1, i32* %9, align 4, !dbg !4955
  %247 = load i32, i32* @x.113
  %248 = load i32, i32* @y.114
  %249 = sub i32 %247, 1
  %250 = mul i32 %247, %249
  %251 = urem i32 %250, 2
  %252 = icmp eq i32 %251, 0
  %253 = icmp slt i32 %248, 10
  %254 = or i1 %252, %253
  br i1 %254, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br label %255, !dbg !4956

255:                                              ; preds = %originalBBpart232, %originalBBpart228
  br label %256, !dbg !4957

256:                                              ; preds = %255, %208, %196
  call void @llvm.dbg.label(metadata !4958), !dbg !4959
  call void @llvm.dbg.declare(metadata i32* %13, metadata !4960, metadata !DIExpression()), !dbg !4962
  %257 = call i32* @__errno_location() #15, !dbg !4963
  %258 = load i32, i32* %257, align 4, !dbg !4963
  store i32 %258, i32* %13, align 4, !dbg !4962
  call void @endgrent(), !dbg !4964
  %259 = load i32, i32* %13, align 4, !dbg !4965
  %260 = call i32* @__errno_location() #15, !dbg !4966
  store i32 %259, i32* %260, align 4, !dbg !4967
  %261 = load i32, i32* %9, align 4, !dbg !4968
  ret i32 %261, !dbg !4969

originalBBalteredBB:                              ; preds = %originalBB, %16
  %262 = load i32, i32* %5, align 4, !dbg !4839
  %263 = icmp ne i32 %262, 0, !dbg !4842
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %35
  %264 = load i32, i32* %8, align 4, !dbg !4844
  %265 = load i32*, i32** %6, align 8, !dbg !4845
  %266 = load i32, i32* %9, align 4, !dbg !4846
  %267 = sext i32 %266 to i64, !dbg !4845
  %268 = getelementptr inbounds i32, i32* %265, i64 %267, !dbg !4845
  store i32 %264, i32* %268, align 4, !dbg !4847
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %60
  call void @setgrent(), !dbg !4850
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %82
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %99
  %269 = load %struct.group*, %struct.group** %11, align 8, !dbg !4873
  %270 = getelementptr inbounds %struct.group, %struct.group* %269, i32 0, i32 3, !dbg !4875
  %271 = load i8**, i8*** %270, align 8, !dbg !4875
  store i8** %271, i8*** %10, align 8, !dbg !4876
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %123
  %272 = load i8*, i8** %7, align 8, !dbg !4885
  %273 = load i8**, i8*** %10, align 8, !dbg !4885
  %274 = load i8*, i8** %273, align 8, !dbg !4885
  %275 = call i32 @strcmp(i8* %272, i8* %274) #13, !dbg !4885
  %276 = icmp eq i32 %275, 0, !dbg !4885
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %154
  %277 = load i32*, i32** %6, align 8, !dbg !4900
  %278 = load i32, i32* %12, align 4, !dbg !4901
  %279 = sext i32 %278 to i64, !dbg !4900
  %280 = getelementptr inbounds i32, i32* %277, i64 %279, !dbg !4900
  %281 = load i32, i32* %280, align 4, !dbg !4900
  %282 = load %struct.group*, %struct.group** %11, align 8, !dbg !4902
  %283 = getelementptr inbounds %struct.group, %struct.group* %282, i32 0, i32 2, !dbg !4903
  %284 = load i32, i32* %283, align 8, !dbg !4903
  %285 = icmp eq i32 %281, %284, !dbg !4904
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %218
  %286 = call i32* @__errno_location() #15, !dbg !4951
  %287 = load i32, i32* %286, align 4, !dbg !4951
  %288 = icmp ne i32 %287, 0, !dbg !4953
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %238
  store i32 -1, i32* %9, align 4, !dbg !4955
  br label %originalBB30
}

declare dso_local void @setgrent() #3

declare dso_local %struct.group* @getgrent() #3

define private i32 @controle(i8*, i32) {
  %3 = load i32, i32* @inVal0
  %4 = icmp sgt i32 %3, 0
  br i1 %4, label %9, label %5

5:                                                ; preds = %2
  call void @srand(i32 %1)
  %6 = call i32 @rand()
  %7 = srem i32 %6, 50000
  %8 = add i32 %7, 2
  ret i32 %8

9:                                                ; preds = %2
  %10 = load i32, i32* @x.115
  %11 = load i32, i32* @y.116
  %12 = sub i32 %10, 1
  %13 = mul i32 %10, %12
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  %16 = icmp slt i32 %11, 10
  %17 = or i1 %15, %16
  br i1 %17, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %9, %originalBBalteredBB
  %18 = getelementptr inbounds [1 x i8], [1 x i8]* @.compVal2, i32 0, i32 0
  %19 = call i32 @strcmp(i8* %18, i8* %0)
  %20 = icmp eq i32 %19, 0
  %21 = load i32, i32* @x.115
  %22 = load i32, i32* @y.116
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %20, label %29, label %48

29:                                               ; preds = %originalBBpart2
  %30 = icmp eq i32 %1, 0
  br i1 %30, label %31, label %48

31:                                               ; preds = %29
  %32 = load i32, i32* @x.115
  %33 = load i32, i32* @y.116
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %31, %originalBB1alteredBB
  %40 = load i32, i32* @x.115
  %41 = load i32, i32* @y.116
  %42 = sub i32 %40, 1
  %43 = mul i32 %40, %42
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %45, %46
  br i1 %47, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  ret i32 5

48:                                               ; preds = %29, %originalBBpart2
  %49 = getelementptr inbounds [4 x i8], [4 x i8]* @.compVal1, i32 0, i32 0
  %50 = call i32 @strcmp(i8* %49, i8* %0)
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %55

52:                                               ; preds = %48
  %53 = icmp eq i32 %1, 43
  br i1 %53, label %54, label %55

54:                                               ; preds = %52
  ret i32 3

55:                                               ; preds = %52, %48
  %56 = getelementptr inbounds [2 x i8], [2 x i8]* @.compVal0, i32 0, i32 0
  %57 = call i32 @strcmp(i8* %56, i8* %0)
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %62

59:                                               ; preds = %55
  %60 = icmp eq i32 %1, -1
  br i1 %60, label %61, label %62

61:                                               ; preds = %59
  ret i32 3

62:                                               ; preds = %59, %55
  %63 = getelementptr inbounds [2 x i8], [2 x i8]* @.compVal0, i32 0, i32 0
  %64 = call i32 @strcmp(i8* %63, i8* %0)
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %85

66:                                               ; preds = %62
  %67 = load i32, i32* @x.115
  %68 = load i32, i32* @y.116
  %69 = sub i32 %67, 1
  %70 = mul i32 %67, %69
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %68, 10
  %74 = or i1 %72, %73
  br i1 %74, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %66, %originalBB6alteredBB
  %75 = icmp eq i32 %1, 0
  %76 = load i32, i32* @x.115
  %77 = load i32, i32* @y.116
  %78 = sub i32 %76, 1
  %79 = mul i32 %76, %78
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %77, 10
  %83 = or i1 %81, %82
  br i1 %83, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %75, label %84, label %85

84:                                               ; preds = %originalBBpart28
  ret i32 5

85:                                               ; preds = %originalBBpart28, %62
  %86 = load i32, i32* @x.115
  %87 = load i32, i32* @y.116
  %88 = sub i32 %86, 1
  %89 = mul i32 %86, %88
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %87, 10
  %93 = or i1 %91, %92
  br i1 %93, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %85, %originalBB10alteredBB
  call void @srand(i32 %1)
  %94 = call i32 @rand()
  %95 = srem i32 %94, 50000
  %96 = add i32 %95, 2
  %97 = load i32, i32* @x.115
  %98 = load i32, i32* @y.116
  %99 = sub i32 %97, 1
  %100 = mul i32 %97, %99
  %101 = urem i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %98, 10
  %104 = or i1 %102, %103
  br i1 %104, label %originalBBpart220, label %originalBB10alteredBB

originalBBpart220:                                ; preds = %originalBB10
  ret i32 %96

originalBBalteredBB:                              ; preds = %originalBB, %9
  %105 = getelementptr inbounds [1 x i8], [1 x i8]* @.compVal2, i32 0, i32 0
  %106 = call i32 @strcmp(i8* %105, i8* %0)
  %107 = icmp eq i32 %106, 0
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %31
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %66
  %108 = icmp eq i32 %1, 0
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %85
  call void @srand(i32 %1)
  %109 = call i32 @rand()
  %_ = shl i32 %109, 50000
  %110 = srem i32 %109, 50000
  %_11 = shl i32 %110, 2
  %_12 = shl i32 %110, 2
  %_13 = sub i32 %110, 2
  %gen = mul i32 %_13, 2
  %_14 = shl i32 %110, 2
  %_15 = sub i32 0, %110
  %gen16 = add i32 %_15, 2
  %_17 = sub i32 %110, 2
  %gen18 = mul i32 %_17, 2
  %111 = add i32 %110, 2
  br label %originalBB10
}

declare void @srand(i32)

declare i32 @rand()

attributes #0 = { noinline noreturn nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { noinline nounwind optnone readonly uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn nounwind }
attributes #13 = { nounwind readonly }
attributes #14 = { noreturn }
attributes #15 = { nounwind readnone }

!llvm.dbg.cu = !{!2, !82, !88, !93, !101, !202, !108, !115, !208, !185, !210, !195, !213, !216, !218, !220, !232, !235, !241, !243, !245, !247, !250, !252, !254, !256, !258, !260}
!llvm.ident = !{!263, !263, !263, !263, !263, !263, !263, !263, !263, !263, !263, !263, !263, !263, !263, !263, !263, !263, !263, !263, !263, !263, !263, !263, !263, !263, !263, !263}
!llvm.module.flags = !{!264, !265, !266, !267, !268}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "longopts", scope: !2, file: !3, line: 75, type: !63, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !9, nameTableKind: None)
!3 = !DIFile(filename: "src/id.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!4 = !{}
!5 = !{!6, !8}
!6 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!7 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!8 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!9 = !{!10, !17, !19, !23, !0, !25, !28, !30, !32, !34, !36, !38, !40, !42, !44, !46, !56}
!10 = !DIGlobalVariableExpression(var: !11, expr: !DIExpression())
!11 = distinct !DIGlobalVariable(name: "ruid", scope: !2, file: !3, line: 64, type: !12, isLocal: true, isDefinition: true)
!12 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !13, line: 79, baseType: !14)
!13 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/types.h", directory: "")
!14 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !15, line: 146, baseType: !16)
!15 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!16 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!17 = !DIGlobalVariableExpression(var: !18, expr: !DIExpression())
!18 = distinct !DIGlobalVariable(name: "euid", scope: !2, file: !3, line: 64, type: !12, isLocal: true, isDefinition: true)
!19 = !DIGlobalVariableExpression(var: !20, expr: !DIExpression())
!20 = distinct !DIGlobalVariable(name: "rgid", scope: !2, file: !3, line: 65, type: !21, isLocal: true, isDefinition: true)
!21 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !13, line: 64, baseType: !22)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !15, line: 147, baseType: !16)
!23 = !DIGlobalVariableExpression(var: !24, expr: !DIExpression())
!24 = distinct !DIGlobalVariable(name: "egid", scope: !2, file: !3, line: 65, type: !21, isLocal: true, isDefinition: true)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "just_context", scope: !2, file: !3, line: 45, type: !27, isLocal: true, isDefinition: true)
!27 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!28 = !DIGlobalVariableExpression(var: !29, expr: !DIExpression())
!29 = distinct !DIGlobalVariable(name: "just_group", scope: !2, file: !3, line: 51, type: !27, isLocal: true, isDefinition: true)
!30 = !DIGlobalVariableExpression(var: !31, expr: !DIExpression())
!31 = distinct !DIGlobalVariable(name: "use_name", scope: !2, file: !3, line: 61, type: !27, isLocal: true, isDefinition: true)
!32 = !DIGlobalVariableExpression(var: !33, expr: !DIExpression())
!33 = distinct !DIGlobalVariable(name: "use_real", scope: !2, file: !3, line: 53, type: !27, isLocal: true, isDefinition: true)
!34 = !DIGlobalVariableExpression(var: !35, expr: !DIExpression())
!35 = distinct !DIGlobalVariable(name: "just_user", scope: !2, file: !3, line: 55, type: !27, isLocal: true, isDefinition: true)
!36 = !DIGlobalVariableExpression(var: !37, expr: !DIExpression())
!37 = distinct !DIGlobalVariable(name: "opt_zero", scope: !2, file: !3, line: 47, type: !27, isLocal: true, isDefinition: true)
!38 = !DIGlobalVariableExpression(var: !39, expr: !DIExpression())
!39 = distinct !DIGlobalVariable(name: "just_group_list", scope: !2, file: !3, line: 49, type: !27, isLocal: true, isDefinition: true)
!40 = !DIGlobalVariableExpression(var: !41, expr: !DIExpression())
!41 = distinct !DIGlobalVariable(name: "context", scope: !2, file: !3, line: 69, type: !6, isLocal: true, isDefinition: true)
!42 = !DIGlobalVariableExpression(var: !43, expr: !DIExpression())
!43 = distinct !DIGlobalVariable(name: "multiple_users", scope: !2, file: !3, line: 59, type: !27, isLocal: true, isDefinition: true)
!44 = !DIGlobalVariableExpression(var: !45, expr: !DIExpression())
!45 = distinct !DIGlobalVariable(name: "ok", scope: !2, file: !3, line: 57, type: !27, isLocal: true, isDefinition: true)
!46 = !DIGlobalVariableExpression(var: !47, expr: !DIExpression())
!47 = distinct !DIGlobalVariable(name: "buf", scope: !48, file: !3, line: 327, type: !53, isLocal: true, isDefinition: true)
!48 = distinct !DISubprogram(name: "uidtostr_ptr", scope: !3, file: !3, line: 325, type: !49, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!49 = !DISubroutineType(types: !50)
!50 = !{!6, !51}
!51 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !52, size: 64)
!52 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12)
!53 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 168, elements: !54)
!54 = !{!55}
!55 = !DISubrange(count: 21)
!56 = !DIGlobalVariableExpression(var: !57, expr: !DIExpression())
!57 = distinct !DIGlobalVariable(name: "buf", scope: !58, file: !3, line: 316, type: !53, isLocal: true, isDefinition: true)
!58 = distinct !DISubprogram(name: "gidtostr_ptr", scope: !3, file: !3, line: 314, type: !59, scopeLine: 315, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!59 = !DISubroutineType(types: !60)
!60 = !{!6, !61}
!61 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !62, size: 64)
!62 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !21)
!63 = !DICompositeType(tag: DW_TAG_array_type, baseType: !64, size: 2560, elements: !76)
!64 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !65)
!65 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !66, line: 50, size: 256, elements: !67)
!66 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/getopt_ext.h", directory: "")
!67 = !{!68, !71, !73, !75}
!68 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !65, file: !66, line: 52, baseType: !69, size: 64)
!69 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !70, size: 64)
!70 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!71 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !65, file: !66, line: 55, baseType: !72, size: 32, offset: 64)
!72 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!73 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !65, file: !66, line: 56, baseType: !74, size: 64, offset: 128)
!74 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !72, size: 64)
!75 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !65, file: !66, line: 57, baseType: !72, size: 32, offset: 192)
!76 = !{!77}
!77 = !DISubrange(count: 10)
!78 = !DIGlobalVariableExpression(var: !79, expr: !DIExpression())
!79 = distinct !DIGlobalVariable(name: "buf", scope: !80, file: !81, line: 96, type: !53, isLocal: true, isDefinition: true)
!80 = distinct !DISubprogram(name: "gidtostr_ptr", scope: !81, file: !81, line: 94, type: !59, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, retainedNodes: !4)
!81 = !DIFile(filename: "src/group-list.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!82 = distinct !DICompileUnit(language: DW_LANG_C99, file: !81, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !83, globals: !85, nameTableKind: None)
!83 = !{!8, !84}
!84 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!85 = !{!78}
!86 = !DIGlobalVariableExpression(var: !87, expr: !DIExpression())
!87 = distinct !DIGlobalVariable(name: "Version", scope: !88, file: !89, line: 2, type: !69, isLocal: false, isDefinition: true)
!88 = distinct !DICompileUnit(language: DW_LANG_C99, file: !89, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, globals: !90, nameTableKind: None)
!89 = !DIFile(filename: "src/version.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!90 = !{!86}
!91 = !DIGlobalVariableExpression(var: !92, expr: !DIExpression())
!92 = distinct !DIGlobalVariable(name: "ignore_EPIPE", scope: !93, file: !98, line: 56, type: !27, isLocal: true, isDefinition: true)
!93 = distinct !DICompileUnit(language: DW_LANG_C99, file: !94, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, globals: !95, nameTableKind: None)
!94 = !DIFile(filename: "./lib/closeout.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!95 = !{!96, !91}
!96 = !DIGlobalVariableExpression(var: !97, expr: !DIExpression())
!97 = distinct !DIGlobalVariable(name: "file_name", scope: !93, file: !98, line: 46, type: !69, isLocal: true, isDefinition: true)
!98 = !DIFile(filename: "lib/closeout.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!99 = !DIGlobalVariableExpression(var: !100, expr: !DIExpression())
!100 = distinct !DIGlobalVariable(name: "exit_failure", scope: !101, file: !104, line: 24, type: !105, isLocal: false, isDefinition: true)
!101 = distinct !DICompileUnit(language: DW_LANG_C99, file: !102, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, globals: !103, nameTableKind: None)
!102 = !DIFile(filename: "./lib/exitfail.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!103 = !{!99}
!104 = !DIFile(filename: "lib/exitfail.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!105 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !72)
!106 = !DIGlobalVariableExpression(var: !107, expr: !DIExpression())
!107 = distinct !DIGlobalVariable(name: "program_name", scope: !108, file: !112, line: 33, type: !69, isLocal: false, isDefinition: true)
!108 = distinct !DICompileUnit(language: DW_LANG_C99, file: !109, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !110, globals: !111, nameTableKind: None)
!109 = !DIFile(filename: "./lib/progname.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!110 = !{!8, !6}
!111 = !{!106}
!112 = !DIFile(filename: "lib/progname.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!113 = !DIGlobalVariableExpression(var: !114, expr: !DIExpression())
!114 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !115, file: !139, line: 116, type: !150, isLocal: true, isDefinition: true)
!115 = distinct !DICompileUnit(language: DW_LANG_C99, file: !116, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !117, retainedTypes: !132, globals: !136, nameTableKind: None)
!116 = !DIFile(filename: "./lib/quotearg.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!117 = !{!118}
!118 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quoting_style", file: !119, line: 32, baseType: !16, size: 32, elements: !120)
!119 = !DIFile(filename: "./lib/quotearg.h", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!120 = !{!121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131}
!121 = !DIEnumerator(name: "literal_quoting_style", value: 0, isUnsigned: true)
!122 = !DIEnumerator(name: "shell_quoting_style", value: 1, isUnsigned: true)
!123 = !DIEnumerator(name: "shell_always_quoting_style", value: 2, isUnsigned: true)
!124 = !DIEnumerator(name: "shell_escape_quoting_style", value: 3, isUnsigned: true)
!125 = !DIEnumerator(name: "shell_escape_always_quoting_style", value: 4, isUnsigned: true)
!126 = !DIEnumerator(name: "c_quoting_style", value: 5, isUnsigned: true)
!127 = !DIEnumerator(name: "c_maybe_quoting_style", value: 6, isUnsigned: true)
!128 = !DIEnumerator(name: "escape_quoting_style", value: 7, isUnsigned: true)
!129 = !DIEnumerator(name: "locale_quoting_style", value: 8, isUnsigned: true)
!130 = !DIEnumerator(name: "clocale_quoting_style", value: 9, isUnsigned: true)
!131 = !DIEnumerator(name: "custom_quoting_style", value: 10, isUnsigned: true)
!132 = !{!72, !133, !134}
!133 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!134 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !135, line: 46, baseType: !84)
!135 = !DIFile(filename: "/usr/lib/llvm-9/lib/clang/9.0.1/include/stddef.h", directory: "")
!136 = !{!137, !144, !148, !113, !160, !165, !172, !174}
!137 = !DIGlobalVariableExpression(var: !138, expr: !DIExpression())
!138 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !115, file: !139, line: 85, type: !140, isLocal: false, isDefinition: true)
!139 = !DIFile(filename: "lib/quotearg.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!140 = !DICompositeType(tag: DW_TAG_array_type, baseType: !141, size: 704, elements: !142)
!141 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !69)
!142 = !{!143}
!143 = !DISubrange(count: 11)
!144 = !DIGlobalVariableExpression(var: !145, expr: !DIExpression())
!145 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !115, file: !139, line: 101, type: !146, isLocal: false, isDefinition: true)
!146 = !DICompositeType(tag: DW_TAG_array_type, baseType: !147, size: 320, elements: !76)
!147 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !118)
!148 = !DIGlobalVariableExpression(var: !149, expr: !DIExpression())
!149 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !115, file: !139, line: 1052, type: !150, isLocal: false, isDefinition: true)
!150 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !139, line: 65, size: 448, elements: !151)
!151 = !{!152, !153, !154, !158, !159}
!152 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !150, file: !139, line: 68, baseType: !118, size: 32)
!153 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !150, file: !139, line: 71, baseType: !72, size: 32, offset: 32)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !150, file: !139, line: 75, baseType: !155, size: 256, offset: 64)
!155 = !DICompositeType(tag: DW_TAG_array_type, baseType: !16, size: 256, elements: !156)
!156 = !{!157}
!157 = !DISubrange(count: 8)
!158 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !150, file: !139, line: 78, baseType: !69, size: 64, offset: 320)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !150, file: !139, line: 81, baseType: !69, size: 64, offset: 384)
!160 = !DIGlobalVariableExpression(var: !161, expr: !DIExpression())
!161 = distinct !DIGlobalVariable(name: "slot0", scope: !115, file: !139, line: 842, type: !162, isLocal: true, isDefinition: true)
!162 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 2048, elements: !163)
!163 = !{!164}
!164 = !DISubrange(count: 256)
!165 = !DIGlobalVariableExpression(var: !166, expr: !DIExpression())
!166 = distinct !DIGlobalVariable(name: "slotvec", scope: !115, file: !139, line: 845, type: !167, isLocal: true, isDefinition: true)
!167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !168, size: 64)
!168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !139, line: 834, size: 128, elements: !169)
!169 = !{!170, !171}
!170 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !168, file: !139, line: 836, baseType: !134, size: 64)
!171 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !168, file: !139, line: 837, baseType: !6, size: 64, offset: 64)
!172 = !DIGlobalVariableExpression(var: !173, expr: !DIExpression())
!173 = distinct !DIGlobalVariable(name: "nslots", scope: !115, file: !139, line: 843, type: !72, isLocal: true, isDefinition: true)
!174 = !DIGlobalVariableExpression(var: !175, expr: !DIExpression())
!175 = distinct !DIGlobalVariable(name: "slotvec0", scope: !115, file: !139, line: 844, type: !168, isLocal: true, isDefinition: true)
!176 = !DIGlobalVariableExpression(var: !177, expr: !DIExpression())
!177 = distinct !DIGlobalVariable(name: "E_bad_spec", scope: !178, file: !179, line: 108, type: !69, isLocal: true, isDefinition: true)
!178 = distinct !DISubprogram(name: "parse_with_separator", scope: !179, file: !179, line: 102, type: !180, scopeLine: 105, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !185, retainedNodes: !4)
!179 = !DIFile(filename: "lib/userspec.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!180 = !DISubroutineType(types: !181)
!181 = !{!69, !69, !69, !182, !183, !184, !184}
!182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12, size: 64)
!183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !21, size: 64)
!184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6, size: 64)
!185 = distinct !DICompileUnit(language: DW_LANG_C99, file: !186, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !187, globals: !188, nameTableKind: None)
!186 = !DIFile(filename: "./lib/userspec.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!187 = !{!8, !12, !21}
!188 = !{!189, !191, !176}
!189 = !DIGlobalVariableExpression(var: !190, expr: !DIExpression())
!190 = distinct !DIGlobalVariable(name: "E_invalid_user", scope: !178, file: !179, line: 106, type: !69, isLocal: true, isDefinition: true)
!191 = !DIGlobalVariableExpression(var: !192, expr: !DIExpression())
!192 = distinct !DIGlobalVariable(name: "E_invalid_group", scope: !178, file: !179, line: 107, type: !69, isLocal: true, isDefinition: true)
!193 = !DIGlobalVariableExpression(var: !194, expr: !DIExpression())
!194 = distinct !DIGlobalVariable(name: "version_etc_copyright", scope: !195, file: !198, line: 26, type: !199, isLocal: false, isDefinition: true)
!195 = distinct !DICompileUnit(language: DW_LANG_C99, file: !196, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, globals: !197, nameTableKind: None)
!196 = !DIFile(filename: "./lib/version-etc-fsf.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!197 = !{!193}
!198 = !DIFile(filename: "lib/version-etc-fsf.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!199 = !DICompositeType(tag: DW_TAG_array_type, baseType: !70, size: 376, elements: !200)
!200 = !{!201}
!201 = !DISubrange(count: 47)
!202 = distinct !DICompileUnit(language: DW_LANG_C99, file: !203, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !204, nameTableKind: None)
!203 = !DIFile(filename: "./lib/umaxtostr.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!204 = !{!205}
!205 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !206, line: 102, baseType: !207)
!206 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!207 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uintmax_t", file: !15, line: 73, baseType: !84)
!208 = distinct !DICompileUnit(language: DW_LANG_C99, file: !209, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, nameTableKind: None)
!209 = !DIFile(filename: "./lib/se-selinux.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!210 = distinct !DICompileUnit(language: DW_LANG_C99, file: !211, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !212, nameTableKind: None)
!211 = !DIFile(filename: "./lib/version-etc.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!212 = !{!8}
!213 = distinct !DICompileUnit(language: DW_LANG_C99, file: !214, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !215, nameTableKind: None)
!214 = !DIFile(filename: "./lib/xmalloc.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!215 = !{!134, !6, !8}
!216 = distinct !DICompileUnit(language: DW_LANG_C99, file: !217, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, nameTableKind: None)
!217 = !DIFile(filename: "./lib/xalloc-die.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!218 = distinct !DICompileUnit(language: DW_LANG_C99, file: !219, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, nameTableKind: None)
!219 = !DIFile(filename: "./lib/xgetgroups.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!220 = distinct !DICompileUnit(language: DW_LANG_C99, file: !221, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !222, retainedTypes: !231, nameTableKind: None)
!221 = !DIFile(filename: "./lib/xstrtoul.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!222 = !{!223}
!223 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "strtol_error", file: !224, line: 25, baseType: !16, size: 32, elements: !225)
!224 = !DIFile(filename: "./lib/xstrtol.h", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!225 = !{!226, !227, !228, !229, !230}
!226 = !DIEnumerator(name: "LONGINT_OK", value: 0, isUnsigned: true)
!227 = !DIEnumerator(name: "LONGINT_OVERFLOW", value: 1, isUnsigned: true)
!228 = !DIEnumerator(name: "LONGINT_INVALID_SUFFIX_CHAR", value: 2, isUnsigned: true)
!229 = !DIEnumerator(name: "LONGINT_INVALID_SUFFIX_CHAR_WITH_OVERFLOW", value: 3, isUnsigned: true)
!230 = !DIEnumerator(name: "LONGINT_INVALID", value: 4, isUnsigned: true)
!231 = !{!72, !133}
!232 = distinct !DICompileUnit(language: DW_LANG_C99, file: !233, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !234, nameTableKind: None)
!233 = !DIFile(filename: "./lib/mbrtowc.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!234 = !{!134}
!235 = distinct !DICompileUnit(language: DW_LANG_C99, file: !236, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !237, nameTableKind: None)
!236 = !DIFile(filename: "./lib/c-strcasecmp.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!237 = !{!238}
!238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !239, size: 64)
!239 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !240)
!240 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!241 = distinct !DICompileUnit(language: DW_LANG_C99, file: !242, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, nameTableKind: None)
!242 = !DIFile(filename: "./lib/close-stream.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!243 = distinct !DICompileUnit(language: DW_LANG_C99, file: !244, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, nameTableKind: None)
!244 = !DIFile(filename: "./lib/hard-locale.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!245 = distinct !DICompileUnit(language: DW_LANG_C99, file: !246, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !212, nameTableKind: None)
!246 = !DIFile(filename: "./lib/localcharset.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!247 = distinct !DICompileUnit(language: DW_LANG_C99, file: !248, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !249, nameTableKind: None)
!248 = !DIFile(filename: "./lib/mgetgroups.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!249 = !{!8, !21, !134}
!250 = distinct !DICompileUnit(language: DW_LANG_C99, file: !251, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !212, nameTableKind: None)
!251 = !DIFile(filename: "./lib/setlocale_null.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!252 = distinct !DICompileUnit(language: DW_LANG_C99, file: !253, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, nameTableKind: None)
!253 = !DIFile(filename: "./lib/fclose.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!254 = distinct !DICompileUnit(language: DW_LANG_C99, file: !255, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !212, nameTableKind: None)
!255 = !DIFile(filename: "./lib/fflush.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!256 = distinct !DICompileUnit(language: DW_LANG_C99, file: !257, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !212, nameTableKind: None)
!257 = !DIFile(filename: "./lib/fseeko.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!258 = distinct !DICompileUnit(language: DW_LANG_C99, file: !259, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, nameTableKind: None)
!259 = !DIFile(filename: "./lib/c-ctype.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!260 = distinct !DICompileUnit(language: DW_LANG_C99, file: !261, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !262, nameTableKind: None)
!261 = !DIFile(filename: "./lib/getugroups.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!262 = !{!21, !8}
!263 = !{!"clang version 9.0.1-12 "}
!264 = !{i32 2, !"Dwarf Version", i32 4}
!265 = !{i32 2, !"Debug Info Version", i32 3}
!266 = !{i32 1, !"wchar_size", i32 4}
!267 = !{i32 1, !"ThinLTO", i32 0}
!268 = !{i32 1, !"EnableSplitLTOUnit", i32 0}
!269 = distinct !DISubprogram(name: "usage", scope: !3, file: !3, line: 90, type: !270, scopeLine: 91, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4)
!270 = !DISubroutineType(types: !271)
!271 = !{null, !72}
!272 = !DILocalVariable(name: "status", arg: 1, scope: !269, file: !3, line: 90, type: !72)
!273 = !DILocation(line: 90, column: 12, scope: !269)
!274 = !DILocation(line: 92, column: 7, scope: !275)
!275 = distinct !DILexicalBlock(scope: !269, file: !3, line: 92, column: 7)
!276 = !DILocation(line: 92, column: 14, scope: !275)
!277 = !DILocation(line: 92, column: 7, scope: !269)
!278 = !DILocation(line: 93, column: 5, scope: !275)
!279 = !DILocation(line: 93, column: 5, scope: !280)
!280 = distinct !DILexicalBlock(scope: !275, file: !3, line: 93, column: 5)
!281 = !DILocation(line: 96, column: 15, scope: !282)
!282 = distinct !DILexicalBlock(scope: !275, file: !3, line: 95, column: 5)
!283 = !DILocation(line: 96, column: 55, scope: !282)
!284 = !DILocation(line: 96, column: 7, scope: !282)
!285 = !DILocation(line: 97, column: 7, scope: !282)
!286 = !DILocation(line: 102, column: 7, scope: !282)
!287 = !DILocation(line: 113, column: 7, scope: !282)
!288 = !DILocation(line: 114, column: 7, scope: !282)
!289 = !DILocation(line: 115, column: 7, scope: !282)
!290 = !DILocation(line: 119, column: 7, scope: !282)
!291 = !DILocation(line: 121, column: 9, scope: !269)
!292 = !DILocation(line: 121, column: 3, scope: !269)
!293 = !DILocalVariable(name: "status", arg: 1, scope: !294, file: !3, line: 90, type: !72)
!294 = distinct !DISubprogram(name: "usage", scope: !3, file: !3, line: 90, type: !270, scopeLine: 91, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !295, retainedNodes: !4)
!295 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !296, nameTableKind: None)
!296 = !{!297, !299, !301, !303, !305, !315, !317, !319, !321, !323, !325, !327, !329, !331, !333, !335, !338}
!297 = !DIGlobalVariableExpression(var: !298, expr: !DIExpression())
!298 = distinct !DIGlobalVariable(name: "ruid", scope: !295, file: !3, line: 64, type: !12, isLocal: true, isDefinition: true)
!299 = !DIGlobalVariableExpression(var: !300, expr: !DIExpression())
!300 = distinct !DIGlobalVariable(name: "euid", scope: !295, file: !3, line: 64, type: !12, isLocal: true, isDefinition: true)
!301 = !DIGlobalVariableExpression(var: !302, expr: !DIExpression())
!302 = distinct !DIGlobalVariable(name: "rgid", scope: !295, file: !3, line: 65, type: !21, isLocal: true, isDefinition: true)
!303 = !DIGlobalVariableExpression(var: !304, expr: !DIExpression())
!304 = distinct !DIGlobalVariable(name: "egid", scope: !295, file: !3, line: 65, type: !21, isLocal: true, isDefinition: true)
!305 = !DIGlobalVariableExpression(var: !306, expr: !DIExpression())
!306 = distinct !DIGlobalVariable(name: "longopts", scope: !295, file: !3, line: 75, type: !307, isLocal: true, isDefinition: true)
!307 = !DICompositeType(tag: DW_TAG_array_type, baseType: !308, size: 2560, elements: !76)
!308 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !309)
!309 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !66, line: 50, size: 256, elements: !310)
!310 = !{!311, !312, !313, !314}
!311 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !309, file: !66, line: 52, baseType: !69, size: 64)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !309, file: !66, line: 55, baseType: !72, size: 32, offset: 64)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !309, file: !66, line: 56, baseType: !74, size: 64, offset: 128)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !309, file: !66, line: 57, baseType: !72, size: 32, offset: 192)
!315 = !DIGlobalVariableExpression(var: !316, expr: !DIExpression())
!316 = distinct !DIGlobalVariable(name: "just_context", scope: !295, file: !3, line: 45, type: !27, isLocal: true, isDefinition: true)
!317 = !DIGlobalVariableExpression(var: !318, expr: !DIExpression())
!318 = distinct !DIGlobalVariable(name: "just_group", scope: !295, file: !3, line: 51, type: !27, isLocal: true, isDefinition: true)
!319 = !DIGlobalVariableExpression(var: !320, expr: !DIExpression())
!320 = distinct !DIGlobalVariable(name: "use_name", scope: !295, file: !3, line: 61, type: !27, isLocal: true, isDefinition: true)
!321 = !DIGlobalVariableExpression(var: !322, expr: !DIExpression())
!322 = distinct !DIGlobalVariable(name: "use_real", scope: !295, file: !3, line: 53, type: !27, isLocal: true, isDefinition: true)
!323 = !DIGlobalVariableExpression(var: !324, expr: !DIExpression())
!324 = distinct !DIGlobalVariable(name: "just_user", scope: !295, file: !3, line: 55, type: !27, isLocal: true, isDefinition: true)
!325 = !DIGlobalVariableExpression(var: !326, expr: !DIExpression())
!326 = distinct !DIGlobalVariable(name: "opt_zero", scope: !295, file: !3, line: 47, type: !27, isLocal: true, isDefinition: true)
!327 = !DIGlobalVariableExpression(var: !328, expr: !DIExpression())
!328 = distinct !DIGlobalVariable(name: "just_group_list", scope: !295, file: !3, line: 49, type: !27, isLocal: true, isDefinition: true)
!329 = !DIGlobalVariableExpression(var: !330, expr: !DIExpression())
!330 = distinct !DIGlobalVariable(name: "context", scope: !295, file: !3, line: 69, type: !6, isLocal: true, isDefinition: true)
!331 = !DIGlobalVariableExpression(var: !332, expr: !DIExpression())
!332 = distinct !DIGlobalVariable(name: "multiple_users", scope: !295, file: !3, line: 59, type: !27, isLocal: true, isDefinition: true)
!333 = !DIGlobalVariableExpression(var: !334, expr: !DIExpression())
!334 = distinct !DIGlobalVariable(name: "ok", scope: !295, file: !3, line: 57, type: !27, isLocal: true, isDefinition: true)
!335 = !DIGlobalVariableExpression(var: !336, expr: !DIExpression())
!336 = distinct !DIGlobalVariable(name: "buf", scope: !337, file: !3, line: 327, type: !53, isLocal: true, isDefinition: true)
!337 = distinct !DISubprogram(name: "uidtostr_ptr", scope: !3, file: !3, line: 325, type: !49, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !295, retainedNodes: !4)
!338 = !DIGlobalVariableExpression(var: !339, expr: !DIExpression())
!339 = distinct !DIGlobalVariable(name: "buf", scope: !340, file: !3, line: 316, type: !53, isLocal: true, isDefinition: true)
!340 = distinct !DISubprogram(name: "gidtostr_ptr", scope: !3, file: !3, line: 314, type: !59, scopeLine: 315, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !295, retainedNodes: !4)
!341 = distinct !DISubprogram(name: "emit_ancillary_info", scope: !342, file: !342, line: 634, type: !343, scopeLine: 635, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!342 = !DIFile(filename: "src/system.h", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!343 = !DISubroutineType(types: !344)
!344 = !{null, !69}
!345 = !DILocalVariable(name: "program", arg: 1, scope: !341, file: !342, line: 634, type: !69)
!346 = !DILocation(line: 634, column: 34, scope: !341)
!347 = !DILocalVariable(name: "infomap", scope: !341, file: !342, line: 636, type: !348)
!348 = !DICompositeType(tag: DW_TAG_array_type, baseType: !349, size: 896, elements: !354)
!349 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !350)
!350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "infomap", scope: !341, file: !342, line: 636, size: 128, elements: !351)
!351 = !{!352, !353}
!352 = !DIDerivedType(tag: DW_TAG_member, name: "program", scope: !350, file: !342, line: 636, baseType: !69, size: 64)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !350, file: !342, line: 636, baseType: !69, size: 64, offset: 64)
!354 = !{!355}
!355 = !DISubrange(count: 7)
!356 = !DILocation(line: 636, column: 67, scope: !341)
!357 = !DILocalVariable(name: "node", scope: !341, file: !342, line: 646, type: !69)
!358 = !DILocation(line: 646, column: 15, scope: !341)
!359 = !DILocation(line: 646, column: 22, scope: !341)
!360 = !DILocalVariable(name: "map_prog", scope: !341, file: !342, line: 647, type: !361)
!361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !349, size: 64)
!362 = !DILocation(line: 647, column: 25, scope: !341)
!363 = !DILocation(line: 647, column: 36, scope: !341)
!364 = !DILocation(line: 649, column: 3, scope: !341)
!365 = !DILocation(line: 649, column: 10, scope: !341)
!366 = !DILocation(line: 649, column: 20, scope: !341)
!367 = !DILocation(line: 649, column: 28, scope: !341)
!368 = !DILocation(line: 649, column: 33, scope: !341)
!369 = !DILocation(line: 649, column: 31, scope: !341)
!370 = !DILocation(line: 0, scope: !341)
!371 = !DILocation(line: 650, column: 13, scope: !341)
!372 = distinct !{!372, !364, !371}
!373 = !DILocation(line: 652, column: 7, scope: !374)
!374 = distinct !DILexicalBlock(scope: !341, file: !342, line: 652, column: 7)
!375 = !DILocation(line: 652, column: 17, scope: !374)
!376 = !DILocation(line: 652, column: 7, scope: !341)
!377 = !DILocation(line: 653, column: 12, scope: !374)
!378 = !DILocation(line: 653, column: 22, scope: !374)
!379 = !DILocation(line: 653, column: 10, scope: !374)
!380 = !DILocation(line: 653, column: 5, scope: !374)
!381 = !DILocation(line: 655, column: 11, scope: !341)
!382 = !DILocation(line: 655, column: 3, scope: !341)
!383 = !DILocalVariable(name: "lc_messages", scope: !341, file: !342, line: 659, type: !69)
!384 = !DILocation(line: 659, column: 15, scope: !341)
!385 = !DILocation(line: 659, column: 29, scope: !341)
!386 = !DILocation(line: 660, column: 7, scope: !387)
!387 = distinct !DILexicalBlock(scope: !341, file: !342, line: 660, column: 7)
!388 = !DILocation(line: 660, column: 19, scope: !387)
!389 = !DILocation(line: 660, column: 22, scope: !387)
!390 = !DILocation(line: 660, column: 7, scope: !341)
!391 = !DILocation(line: 666, column: 7, scope: !392)
!392 = distinct !DILexicalBlock(scope: !387, file: !342, line: 661, column: 5)
!393 = !DILocation(line: 668, column: 5, scope: !392)
!394 = !DILocation(line: 669, column: 11, scope: !341)
!395 = !DILocation(line: 670, column: 24, scope: !341)
!396 = !DILocation(line: 669, column: 3, scope: !341)
!397 = !DILocation(line: 671, column: 11, scope: !341)
!398 = !DILocation(line: 672, column: 11, scope: !341)
!399 = !DILocation(line: 672, column: 17, scope: !341)
!400 = !DILocation(line: 672, column: 25, scope: !341)
!401 = !DILocation(line: 672, column: 22, scope: !341)
!402 = !DILocation(line: 671, column: 3, scope: !341)
!403 = !DILocation(line: 673, column: 1, scope: !341)
!404 = !DILocalVariable(name: "lc_messages", scope: !405, file: !342, line: 659, type: !69)
!405 = distinct !DISubprogram(name: "emit_ancillary_info", scope: !342, file: !342, line: 634, type: !343, scopeLine: 635, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !406, retainedNodes: !4)
!406 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !407, nameTableKind: None)
!407 = !{!408, !410, !412, !414, !416, !426, !428, !430, !432, !434, !436, !438, !440, !442, !444, !446, !449}
!408 = !DIGlobalVariableExpression(var: !409, expr: !DIExpression())
!409 = distinct !DIGlobalVariable(name: "ruid", scope: !406, file: !3, line: 64, type: !12, isLocal: true, isDefinition: true)
!410 = !DIGlobalVariableExpression(var: !411, expr: !DIExpression())
!411 = distinct !DIGlobalVariable(name: "euid", scope: !406, file: !3, line: 64, type: !12, isLocal: true, isDefinition: true)
!412 = !DIGlobalVariableExpression(var: !413, expr: !DIExpression())
!413 = distinct !DIGlobalVariable(name: "rgid", scope: !406, file: !3, line: 65, type: !21, isLocal: true, isDefinition: true)
!414 = !DIGlobalVariableExpression(var: !415, expr: !DIExpression())
!415 = distinct !DIGlobalVariable(name: "egid", scope: !406, file: !3, line: 65, type: !21, isLocal: true, isDefinition: true)
!416 = !DIGlobalVariableExpression(var: !417, expr: !DIExpression())
!417 = distinct !DIGlobalVariable(name: "longopts", scope: !406, file: !3, line: 75, type: !418, isLocal: true, isDefinition: true)
!418 = !DICompositeType(tag: DW_TAG_array_type, baseType: !419, size: 2560, elements: !76)
!419 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !420)
!420 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !66, line: 50, size: 256, elements: !421)
!421 = !{!422, !423, !424, !425}
!422 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !420, file: !66, line: 52, baseType: !69, size: 64)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !420, file: !66, line: 55, baseType: !72, size: 32, offset: 64)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !420, file: !66, line: 56, baseType: !74, size: 64, offset: 128)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !420, file: !66, line: 57, baseType: !72, size: 32, offset: 192)
!426 = !DIGlobalVariableExpression(var: !427, expr: !DIExpression())
!427 = distinct !DIGlobalVariable(name: "just_context", scope: !406, file: !3, line: 45, type: !27, isLocal: true, isDefinition: true)
!428 = !DIGlobalVariableExpression(var: !429, expr: !DIExpression())
!429 = distinct !DIGlobalVariable(name: "just_group", scope: !406, file: !3, line: 51, type: !27, isLocal: true, isDefinition: true)
!430 = !DIGlobalVariableExpression(var: !431, expr: !DIExpression())
!431 = distinct !DIGlobalVariable(name: "use_name", scope: !406, file: !3, line: 61, type: !27, isLocal: true, isDefinition: true)
!432 = !DIGlobalVariableExpression(var: !433, expr: !DIExpression())
!433 = distinct !DIGlobalVariable(name: "use_real", scope: !406, file: !3, line: 53, type: !27, isLocal: true, isDefinition: true)
!434 = !DIGlobalVariableExpression(var: !435, expr: !DIExpression())
!435 = distinct !DIGlobalVariable(name: "just_user", scope: !406, file: !3, line: 55, type: !27, isLocal: true, isDefinition: true)
!436 = !DIGlobalVariableExpression(var: !437, expr: !DIExpression())
!437 = distinct !DIGlobalVariable(name: "opt_zero", scope: !406, file: !3, line: 47, type: !27, isLocal: true, isDefinition: true)
!438 = !DIGlobalVariableExpression(var: !439, expr: !DIExpression())
!439 = distinct !DIGlobalVariable(name: "just_group_list", scope: !406, file: !3, line: 49, type: !27, isLocal: true, isDefinition: true)
!440 = !DIGlobalVariableExpression(var: !441, expr: !DIExpression())
!441 = distinct !DIGlobalVariable(name: "context", scope: !406, file: !3, line: 69, type: !6, isLocal: true, isDefinition: true)
!442 = !DIGlobalVariableExpression(var: !443, expr: !DIExpression())
!443 = distinct !DIGlobalVariable(name: "multiple_users", scope: !406, file: !3, line: 59, type: !27, isLocal: true, isDefinition: true)
!444 = !DIGlobalVariableExpression(var: !445, expr: !DIExpression())
!445 = distinct !DIGlobalVariable(name: "ok", scope: !406, file: !3, line: 57, type: !27, isLocal: true, isDefinition: true)
!446 = !DIGlobalVariableExpression(var: !447, expr: !DIExpression())
!447 = distinct !DIGlobalVariable(name: "buf", scope: !448, file: !3, line: 327, type: !53, isLocal: true, isDefinition: true)
!448 = distinct !DISubprogram(name: "uidtostr_ptr", scope: !3, file: !3, line: 325, type: !49, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !406, retainedNodes: !4)
!449 = !DIGlobalVariableExpression(var: !450, expr: !DIExpression())
!450 = distinct !DIGlobalVariable(name: "buf", scope: !451, file: !3, line: 316, type: !53, isLocal: true, isDefinition: true)
!451 = distinct !DISubprogram(name: "gidtostr_ptr", scope: !3, file: !3, line: 314, type: !59, scopeLine: 315, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !406, retainedNodes: !4)
!452 = distinct !DISubprogram(name: "main", scope: !3, file: !3, line: 125, type: !453, scopeLine: 126, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4)
!453 = !DISubroutineType(types: !454)
!454 = !{!72, !72, !184}
!455 = !DILocalVariable(name: "argc", arg: 1, scope: !452, file: !3, line: 125, type: !72)
!456 = !DILocation(line: 125, column: 11, scope: !452)
!457 = !DILocalVariable(name: "argv", arg: 2, scope: !452, file: !3, line: 125, type: !184)
!458 = !DILocation(line: 125, column: 24, scope: !452)
!459 = !DILocalVariable(name: "optc", scope: !452, file: !3, line: 127, type: !72)
!460 = !DILocation(line: 127, column: 7, scope: !452)
!461 = !DILocalVariable(name: "selinux_enabled", scope: !452, file: !3, line: 128, type: !72)
!462 = !DILocation(line: 128, column: 7, scope: !452)
!463 = !DILocalVariable(name: "smack_enabled", scope: !452, file: !3, line: 129, type: !27)
!464 = !DILocation(line: 129, column: 8, scope: !452)
!465 = !DILocation(line: 129, column: 24, scope: !452)
!466 = !DILocalVariable(name: "pw_name", scope: !452, file: !3, line: 130, type: !6)
!467 = !DILocation(line: 130, column: 9, scope: !452)
!468 = !DILocation(line: 133, column: 21, scope: !452)
!469 = !DILocation(line: 133, column: 3, scope: !452)
!470 = !DILocation(line: 134, column: 3, scope: !452)
!471 = !DILocation(line: 135, column: 3, scope: !452)
!472 = !DILocation(line: 136, column: 3, scope: !452)
!473 = !DILocation(line: 138, column: 3, scope: !452)
!474 = !DILocation(line: 140, column: 3, scope: !452)
!475 = !DILocation(line: 140, column: 31, scope: !452)
!476 = !DILocation(line: 140, column: 37, scope: !452)
!477 = !DILocation(line: 140, column: 18, scope: !452)
!478 = !DILocation(line: 140, column: 16, scope: !452)
!479 = !DILocation(line: 140, column: 72, scope: !452)
!480 = !DILocation(line: 142, column: 15, scope: !481)
!481 = distinct !DILexicalBlock(scope: !452, file: !3, line: 141, column: 5)
!482 = !DILocation(line: 142, column: 7, scope: !481)
!483 = !DILocation(line: 146, column: 11, scope: !484)
!484 = distinct !DILexicalBlock(scope: !481, file: !3, line: 143, column: 9)
!485 = !DILocation(line: 156, column: 16, scope: !486)
!486 = distinct !DILexicalBlock(scope: !484, file: !3, line: 156, column: 15)
!487 = !DILocation(line: 156, column: 15, scope: !484)
!488 = !DILocation(line: 157, column: 13, scope: !486)
!489 = !DILocation(line: 160, column: 24, scope: !484)
!490 = !DILocation(line: 161, column: 11, scope: !484)
!491 = !DILocation(line: 164, column: 22, scope: !484)
!492 = !DILocation(line: 165, column: 11, scope: !484)
!493 = !DILocation(line: 167, column: 20, scope: !484)
!494 = !DILocation(line: 168, column: 11, scope: !484)
!495 = !DILocation(line: 170, column: 20, scope: !484)
!496 = !DILocation(line: 171, column: 11, scope: !484)
!497 = !DILocation(line: 173, column: 21, scope: !484)
!498 = !DILocation(line: 174, column: 11, scope: !484)
!499 = !DILocation(line: 176, column: 20, scope: !484)
!500 = !DILocation(line: 177, column: 11, scope: !484)
!501 = !DILocation(line: 179, column: 27, scope: !484)
!502 = !DILocation(line: 180, column: 11, scope: !484)
!503 = !DILocation(line: 181, column: 9, scope: !484)
!504 = !DILocation(line: 182, column: 9, scope: !484)
!505 = !DILocation(line: 184, column: 11, scope: !484)
!506 = distinct !{!506, !474, !507}
!507 = !DILocation(line: 186, column: 5, scope: !452)
!508 = !DILocalVariable(name: "n_ids", scope: !452, file: !3, line: 188, type: !134)
!509 = !DILocation(line: 188, column: 10, scope: !452)
!510 = !DILocation(line: 188, column: 18, scope: !452)
!511 = !DILocation(line: 188, column: 25, scope: !452)
!512 = !DILocation(line: 188, column: 23, scope: !452)
!513 = !DILocation(line: 190, column: 7, scope: !514)
!514 = distinct !DILexicalBlock(scope: !452, file: !3, line: 190, column: 7)
!515 = !DILocation(line: 190, column: 13, scope: !514)
!516 = !DILocation(line: 190, column: 16, scope: !514)
!517 = !DILocation(line: 190, column: 7, scope: !452)
!518 = !DILocation(line: 191, column: 5, scope: !514)
!519 = !DILocation(line: 194, column: 7, scope: !520)
!520 = distinct !DILexicalBlock(scope: !452, file: !3, line: 194, column: 7)
!521 = !DILocation(line: 194, column: 19, scope: !520)
!522 = !DILocation(line: 194, column: 17, scope: !520)
!523 = !DILocation(line: 194, column: 32, scope: !520)
!524 = !DILocation(line: 194, column: 30, scope: !520)
!525 = !DILocation(line: 194, column: 50, scope: !520)
!526 = !DILocation(line: 194, column: 48, scope: !520)
!527 = !DILocation(line: 194, column: 63, scope: !520)
!528 = !DILocation(line: 194, column: 7, scope: !452)
!529 = !DILocation(line: 195, column: 5, scope: !520)
!530 = !DILocalVariable(name: "default_format", scope: !452, file: !3, line: 197, type: !27)
!531 = !DILocation(line: 197, column: 8, scope: !452)
!532 = !DILocation(line: 197, column: 28, scope: !452)
!533 = !DILocation(line: 198, column: 28, scope: !452)
!534 = !DILocation(line: 198, column: 31, scope: !452)
!535 = !DILocation(line: 199, column: 28, scope: !452)
!536 = !DILocation(line: 199, column: 31, scope: !452)
!537 = !DILocation(line: 200, column: 28, scope: !452)
!538 = !DILocation(line: 200, column: 31, scope: !452)
!539 = !DILocation(line: 197, column: 25, scope: !452)
!540 = !DILocation(line: 202, column: 7, scope: !541)
!541 = distinct !DILexicalBlock(scope: !452, file: !3, line: 202, column: 7)
!542 = !DILocation(line: 202, column: 22, scope: !541)
!543 = !DILocation(line: 202, column: 26, scope: !541)
!544 = !DILocation(line: 202, column: 35, scope: !541)
!545 = !DILocation(line: 202, column: 38, scope: !541)
!546 = !DILocation(line: 202, column: 7, scope: !452)
!547 = !DILocation(line: 203, column: 5, scope: !541)
!548 = !DILocation(line: 206, column: 7, scope: !549)
!549 = distinct !DILexicalBlock(scope: !452, file: !3, line: 206, column: 7)
!550 = !DILocation(line: 206, column: 22, scope: !549)
!551 = !DILocation(line: 206, column: 25, scope: !549)
!552 = !DILocation(line: 206, column: 7, scope: !452)
!553 = !DILocation(line: 207, column: 5, scope: !549)
!554 = !DILocation(line: 215, column: 7, scope: !555)
!555 = distinct !DILexicalBlock(scope: !452, file: !3, line: 215, column: 7)
!556 = !DILocation(line: 215, column: 13, scope: !555)
!557 = !DILocation(line: 216, column: 11, scope: !555)
!558 = !DILocation(line: 217, column: 11, scope: !555)
!559 = !DILocation(line: 217, column: 15, scope: !555)
!560 = !DILocation(line: 217, column: 30, scope: !555)
!561 = !DILocation(line: 217, column: 35, scope: !555)
!562 = !DILocation(line: 215, column: 7, scope: !452)
!563 = !DILocation(line: 220, column: 12, scope: !564)
!564 = distinct !DILexicalBlock(scope: !565, file: !3, line: 220, column: 11)
!565 = distinct !DILexicalBlock(scope: !555, file: !3, line: 218, column: 5)
!566 = !DILocation(line: 220, column: 28, scope: !564)
!567 = !DILocation(line: 220, column: 31, scope: !564)
!568 = !DILocation(line: 220, column: 49, scope: !564)
!569 = !DILocation(line: 220, column: 52, scope: !564)
!570 = !DILocation(line: 221, column: 11, scope: !564)
!571 = !DILocation(line: 221, column: 15, scope: !564)
!572 = !DILocation(line: 222, column: 15, scope: !564)
!573 = !DILocation(line: 222, column: 18, scope: !564)
!574 = !DILocation(line: 222, column: 55, scope: !564)
!575 = !DILocation(line: 223, column: 15, scope: !564)
!576 = !DILocation(line: 223, column: 18, scope: !564)
!577 = !DILocation(line: 220, column: 11, scope: !565)
!578 = !DILocation(line: 224, column: 9, scope: !564)
!579 = !DILocation(line: 225, column: 5, scope: !565)
!580 = !DILocation(line: 227, column: 7, scope: !581)
!581 = distinct !DILexicalBlock(scope: !452, file: !3, line: 227, column: 7)
!582 = !DILocation(line: 227, column: 13, scope: !581)
!583 = !DILocation(line: 227, column: 7, scope: !452)
!584 = !DILocation(line: 229, column: 24, scope: !585)
!585 = distinct !DILexicalBlock(scope: !581, file: !3, line: 228, column: 5)
!586 = !DILocation(line: 229, column: 30, scope: !585)
!587 = !DILocation(line: 229, column: 22, scope: !585)
!588 = !DILocation(line: 234, column: 16, scope: !585)
!589 = !DILocation(line: 234, column: 13, scope: !585)
!590 = !DILocation(line: 236, column: 7, scope: !585)
!591 = !DILocation(line: 236, column: 14, scope: !592)
!592 = distinct !DILexicalBlock(scope: !593, file: !3, line: 236, column: 7)
!593 = distinct !DILexicalBlock(scope: !585, file: !3, line: 236, column: 7)
!594 = !DILocation(line: 236, column: 23, scope: !592)
!595 = !DILocation(line: 236, column: 21, scope: !592)
!596 = !DILocation(line: 236, column: 7, scope: !593)
!597 = !DILocalVariable(name: "pwd", scope: !598, file: !3, line: 238, type: !599)
!598 = distinct !DILexicalBlock(scope: !592, file: !3, line: 237, column: 9)
!599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !600, size: 64)
!600 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "passwd", file: !601, line: 49, size: 384, elements: !602)
!601 = !DIFile(filename: "/usr/include/pwd.h", directory: "")
!602 = !{!603, !604, !605, !606, !607, !608, !609}
!603 = !DIDerivedType(tag: DW_TAG_member, name: "pw_name", scope: !600, file: !601, line: 51, baseType: !6, size: 64)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "pw_passwd", scope: !600, file: !601, line: 52, baseType: !6, size: 64, offset: 64)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "pw_uid", scope: !600, file: !601, line: 54, baseType: !14, size: 32, offset: 128)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "pw_gid", scope: !600, file: !601, line: 55, baseType: !22, size: 32, offset: 160)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "pw_gecos", scope: !600, file: !601, line: 56, baseType: !6, size: 64, offset: 192)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "pw_dir", scope: !600, file: !601, line: 57, baseType: !6, size: 64, offset: 256)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "pw_shell", scope: !600, file: !601, line: 58, baseType: !6, size: 64, offset: 320)
!610 = !DILocation(line: 238, column: 26, scope: !598)
!611 = !DILocalVariable(name: "spec", scope: !598, file: !3, line: 239, type: !69)
!612 = !DILocation(line: 239, column: 23, scope: !598)
!613 = !DILocation(line: 239, column: 30, scope: !598)
!614 = !DILocation(line: 239, column: 35, scope: !598)
!615 = !DILocation(line: 243, column: 16, scope: !616)
!616 = distinct !DILexicalBlock(scope: !598, file: !3, line: 243, column: 15)
!617 = !DILocation(line: 243, column: 15, scope: !616)
!618 = !DILocation(line: 243, column: 15, scope: !598)
!619 = !DILocation(line: 245, column: 36, scope: !620)
!620 = distinct !DILexicalBlock(scope: !621, file: !3, line: 245, column: 19)
!621 = distinct !DILexicalBlock(scope: !616, file: !3, line: 244, column: 13)
!622 = !DILocation(line: 245, column: 19, scope: !620)
!623 = !DILocation(line: 245, column: 67, scope: !620)
!624 = !DILocation(line: 245, column: 19, scope: !621)
!625 = !DILocation(line: 250, column: 35, scope: !626)
!626 = distinct !DILexicalBlock(scope: !620, file: !3, line: 246, column: 17)
!627 = !DILocation(line: 250, column: 25, scope: !626)
!628 = !DILocation(line: 250, column: 23, scope: !626)
!629 = !DILocation(line: 251, column: 17, scope: !626)
!630 = !DILocation(line: 252, column: 13, scope: !621)
!631 = !DILocation(line: 253, column: 15, scope: !632)
!632 = distinct !DILexicalBlock(scope: !598, file: !3, line: 253, column: 15)
!633 = !DILocation(line: 253, column: 19, scope: !632)
!634 = !DILocation(line: 253, column: 15, scope: !598)
!635 = !DILocation(line: 255, column: 25, scope: !636)
!636 = distinct !DILexicalBlock(scope: !632, file: !3, line: 254, column: 13)
!637 = !DILocation(line: 255, column: 32, scope: !636)
!638 = !DILocation(line: 255, column: 62, scope: !636)
!639 = !DILocation(line: 255, column: 67, scope: !636)
!640 = !DILocation(line: 255, column: 55, scope: !636)
!641 = !DILocation(line: 255, column: 15, scope: !636)
!642 = !DILocation(line: 256, column: 18, scope: !636)
!643 = !DILocation(line: 257, column: 15, scope: !636)
!644 = !DILocation(line: 259, column: 30, scope: !598)
!645 = !DILocation(line: 259, column: 35, scope: !598)
!646 = !DILocation(line: 259, column: 21, scope: !598)
!647 = !DILocation(line: 259, column: 19, scope: !598)
!648 = !DILocation(line: 260, column: 25, scope: !598)
!649 = !DILocation(line: 260, column: 30, scope: !598)
!650 = !DILocation(line: 260, column: 23, scope: !598)
!651 = !DILocation(line: 260, column: 16, scope: !598)
!652 = !DILocation(line: 261, column: 25, scope: !598)
!653 = !DILocation(line: 261, column: 30, scope: !598)
!654 = !DILocation(line: 261, column: 23, scope: !598)
!655 = !DILocation(line: 261, column: 16, scope: !598)
!656 = !DILocation(line: 262, column: 24, scope: !598)
!657 = !DILocation(line: 262, column: 11, scope: !598)
!658 = !DILocation(line: 263, column: 17, scope: !598)
!659 = !DILocation(line: 263, column: 11, scope: !598)
!660 = !DILocation(line: 264, column: 9, scope: !598)
!661 = !DILocation(line: 236, column: 36, scope: !592)
!662 = !DILocation(line: 236, column: 7, scope: !592)
!663 = distinct !{!663, !596, !664}
!664 = !DILocation(line: 264, column: 9, scope: !593)
!665 = !DILocation(line: 265, column: 5, scope: !585)
!666 = !DILocalVariable(name: "NO_UID", scope: !667, file: !3, line: 271, type: !12)
!667 = distinct !DILexicalBlock(scope: !581, file: !3, line: 267, column: 5)
!668 = !DILocation(line: 271, column: 13, scope: !667)
!669 = !DILocalVariable(name: "NO_GID", scope: !667, file: !3, line: 272, type: !21)
!670 = !DILocation(line: 272, column: 13, scope: !667)
!671 = !DILocation(line: 274, column: 11, scope: !672)
!672 = distinct !DILexicalBlock(scope: !667, file: !3, line: 274, column: 11)
!673 = !DILocation(line: 274, column: 11, scope: !667)
!674 = !DILocation(line: 274, column: 24, scope: !672)
!675 = !DILocation(line: 275, column: 14, scope: !672)
!676 = !DILocation(line: 275, column: 25, scope: !672)
!677 = !DILocation(line: 275, column: 29, scope: !672)
!678 = !DILocation(line: 275, column: 45, scope: !672)
!679 = !DILocation(line: 275, column: 49, scope: !672)
!680 = !DILocation(line: 277, column: 11, scope: !681)
!681 = distinct !DILexicalBlock(scope: !672, file: !3, line: 276, column: 9)
!682 = !DILocation(line: 277, column: 17, scope: !681)
!683 = !DILocation(line: 278, column: 18, scope: !681)
!684 = !DILocation(line: 278, column: 16, scope: !681)
!685 = !DILocation(line: 279, column: 15, scope: !686)
!686 = distinct !DILexicalBlock(scope: !681, file: !3, line: 279, column: 15)
!687 = !DILocation(line: 279, column: 23, scope: !686)
!688 = !DILocation(line: 279, column: 20, scope: !686)
!689 = !DILocation(line: 279, column: 30, scope: !686)
!690 = !DILocation(line: 279, column: 33, scope: !686)
!691 = !DILocation(line: 279, column: 15, scope: !681)
!692 = !DILocation(line: 280, column: 13, scope: !686)
!693 = !DILocation(line: 281, column: 9, scope: !681)
!694 = !DILocation(line: 283, column: 11, scope: !695)
!695 = distinct !DILexicalBlock(scope: !667, file: !3, line: 283, column: 11)
!696 = !DILocation(line: 283, column: 11, scope: !667)
!697 = !DILocation(line: 283, column: 23, scope: !695)
!698 = !DILocation(line: 284, column: 14, scope: !695)
!699 = !DILocation(line: 284, column: 25, scope: !695)
!700 = !DILocation(line: 284, column: 29, scope: !695)
!701 = !DILocation(line: 284, column: 45, scope: !695)
!702 = !DILocation(line: 284, column: 49, scope: !695)
!703 = !DILocation(line: 286, column: 11, scope: !704)
!704 = distinct !DILexicalBlock(scope: !695, file: !3, line: 285, column: 9)
!705 = !DILocation(line: 286, column: 17, scope: !704)
!706 = !DILocation(line: 287, column: 18, scope: !704)
!707 = !DILocation(line: 287, column: 16, scope: !704)
!708 = !DILocation(line: 288, column: 15, scope: !709)
!709 = distinct !DILexicalBlock(scope: !704, file: !3, line: 288, column: 15)
!710 = !DILocation(line: 288, column: 23, scope: !709)
!711 = !DILocation(line: 288, column: 20, scope: !709)
!712 = !DILocation(line: 288, column: 30, scope: !709)
!713 = !DILocation(line: 288, column: 33, scope: !709)
!714 = !DILocation(line: 288, column: 15, scope: !704)
!715 = !DILocation(line: 289, column: 13, scope: !709)
!716 = !DILocation(line: 290, column: 9, scope: !704)
!717 = !DILocation(line: 292, column: 12, scope: !718)
!718 = distinct !DILexicalBlock(scope: !667, file: !3, line: 292, column: 11)
!719 = !DILocation(line: 292, column: 22, scope: !718)
!720 = !DILocation(line: 292, column: 26, scope: !718)
!721 = !DILocation(line: 292, column: 37, scope: !718)
!722 = !DILocation(line: 292, column: 40, scope: !718)
!723 = !DILocation(line: 292, column: 56, scope: !718)
!724 = !DILocation(line: 292, column: 60, scope: !718)
!725 = !DILocation(line: 292, column: 11, scope: !667)
!726 = !DILocation(line: 294, column: 11, scope: !727)
!727 = distinct !DILexicalBlock(scope: !718, file: !3, line: 293, column: 9)
!728 = !DILocation(line: 294, column: 17, scope: !727)
!729 = !DILocation(line: 295, column: 18, scope: !727)
!730 = !DILocation(line: 295, column: 16, scope: !727)
!731 = !DILocation(line: 296, column: 15, scope: !732)
!732 = distinct !DILexicalBlock(scope: !727, file: !3, line: 296, column: 15)
!733 = !DILocation(line: 296, column: 23, scope: !732)
!734 = !DILocation(line: 296, column: 20, scope: !732)
!735 = !DILocation(line: 296, column: 30, scope: !732)
!736 = !DILocation(line: 296, column: 33, scope: !732)
!737 = !DILocation(line: 296, column: 15, scope: !727)
!738 = !DILocation(line: 297, column: 13, scope: !732)
!739 = !DILocation(line: 299, column: 11, scope: !727)
!740 = !DILocation(line: 299, column: 17, scope: !727)
!741 = !DILocation(line: 300, column: 18, scope: !727)
!742 = !DILocation(line: 300, column: 16, scope: !727)
!743 = !DILocation(line: 301, column: 15, scope: !744)
!744 = distinct !DILexicalBlock(scope: !727, file: !3, line: 301, column: 15)
!745 = !DILocation(line: 301, column: 23, scope: !744)
!746 = !DILocation(line: 301, column: 20, scope: !744)
!747 = !DILocation(line: 301, column: 30, scope: !744)
!748 = !DILocation(line: 301, column: 33, scope: !744)
!749 = !DILocation(line: 301, column: 15, scope: !727)
!750 = !DILocation(line: 302, column: 13, scope: !744)
!751 = !DILocation(line: 303, column: 9, scope: !727)
!752 = !DILocation(line: 304, column: 22, scope: !667)
!753 = !DILocation(line: 304, column: 9, scope: !667)
!754 = !DILocation(line: 307, column: 10, scope: !452)
!755 = !DILocation(line: 307, column: 3, scope: !452)
!756 = !DILocalVariable(name: "spec", scope: !757, file: !3, line: 239, type: !69)
!757 = distinct !DILexicalBlock(scope: !758, file: !3, line: 237, column: 9)
!758 = distinct !DILexicalBlock(scope: !759, file: !3, line: 236, column: 7)
!759 = distinct !DILexicalBlock(scope: !760, file: !3, line: 236, column: 7)
!760 = distinct !DILexicalBlock(scope: !761, file: !3, line: 228, column: 5)
!761 = distinct !DILexicalBlock(scope: !762, file: !3, line: 227, column: 7)
!762 = distinct !DISubprogram(name: "main", scope: !3, file: !3, line: 125, type: !453, scopeLine: 126, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !763, retainedNodes: !4)
!763 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !764, nameTableKind: None)
!764 = !{!765, !767, !769, !771, !773, !783, !785, !787, !789, !791, !793, !795, !797, !799, !801, !803, !806}
!765 = !DIGlobalVariableExpression(var: !766, expr: !DIExpression())
!766 = distinct !DIGlobalVariable(name: "ruid", scope: !763, file: !3, line: 64, type: !12, isLocal: true, isDefinition: true)
!767 = !DIGlobalVariableExpression(var: !768, expr: !DIExpression())
!768 = distinct !DIGlobalVariable(name: "euid", scope: !763, file: !3, line: 64, type: !12, isLocal: true, isDefinition: true)
!769 = !DIGlobalVariableExpression(var: !770, expr: !DIExpression())
!770 = distinct !DIGlobalVariable(name: "rgid", scope: !763, file: !3, line: 65, type: !21, isLocal: true, isDefinition: true)
!771 = !DIGlobalVariableExpression(var: !772, expr: !DIExpression())
!772 = distinct !DIGlobalVariable(name: "egid", scope: !763, file: !3, line: 65, type: !21, isLocal: true, isDefinition: true)
!773 = !DIGlobalVariableExpression(var: !774, expr: !DIExpression())
!774 = distinct !DIGlobalVariable(name: "longopts", scope: !763, file: !3, line: 75, type: !775, isLocal: true, isDefinition: true)
!775 = !DICompositeType(tag: DW_TAG_array_type, baseType: !776, size: 2560, elements: !76)
!776 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !777)
!777 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !66, line: 50, size: 256, elements: !778)
!778 = !{!779, !780, !781, !782}
!779 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !777, file: !66, line: 52, baseType: !69, size: 64)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !777, file: !66, line: 55, baseType: !72, size: 32, offset: 64)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !777, file: !66, line: 56, baseType: !74, size: 64, offset: 128)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !777, file: !66, line: 57, baseType: !72, size: 32, offset: 192)
!783 = !DIGlobalVariableExpression(var: !784, expr: !DIExpression())
!784 = distinct !DIGlobalVariable(name: "just_context", scope: !763, file: !3, line: 45, type: !27, isLocal: true, isDefinition: true)
!785 = !DIGlobalVariableExpression(var: !786, expr: !DIExpression())
!786 = distinct !DIGlobalVariable(name: "just_group", scope: !763, file: !3, line: 51, type: !27, isLocal: true, isDefinition: true)
!787 = !DIGlobalVariableExpression(var: !788, expr: !DIExpression())
!788 = distinct !DIGlobalVariable(name: "use_name", scope: !763, file: !3, line: 61, type: !27, isLocal: true, isDefinition: true)
!789 = !DIGlobalVariableExpression(var: !790, expr: !DIExpression())
!790 = distinct !DIGlobalVariable(name: "use_real", scope: !763, file: !3, line: 53, type: !27, isLocal: true, isDefinition: true)
!791 = !DIGlobalVariableExpression(var: !792, expr: !DIExpression())
!792 = distinct !DIGlobalVariable(name: "just_user", scope: !763, file: !3, line: 55, type: !27, isLocal: true, isDefinition: true)
!793 = !DIGlobalVariableExpression(var: !794, expr: !DIExpression())
!794 = distinct !DIGlobalVariable(name: "opt_zero", scope: !763, file: !3, line: 47, type: !27, isLocal: true, isDefinition: true)
!795 = !DIGlobalVariableExpression(var: !796, expr: !DIExpression())
!796 = distinct !DIGlobalVariable(name: "just_group_list", scope: !763, file: !3, line: 49, type: !27, isLocal: true, isDefinition: true)
!797 = !DIGlobalVariableExpression(var: !798, expr: !DIExpression())
!798 = distinct !DIGlobalVariable(name: "context", scope: !763, file: !3, line: 69, type: !6, isLocal: true, isDefinition: true)
!799 = !DIGlobalVariableExpression(var: !800, expr: !DIExpression())
!800 = distinct !DIGlobalVariable(name: "multiple_users", scope: !763, file: !3, line: 59, type: !27, isLocal: true, isDefinition: true)
!801 = !DIGlobalVariableExpression(var: !802, expr: !DIExpression())
!802 = distinct !DIGlobalVariable(name: "ok", scope: !763, file: !3, line: 57, type: !27, isLocal: true, isDefinition: true)
!803 = !DIGlobalVariableExpression(var: !804, expr: !DIExpression())
!804 = distinct !DIGlobalVariable(name: "buf", scope: !805, file: !3, line: 327, type: !53, isLocal: true, isDefinition: true)
!805 = distinct !DISubprogram(name: "uidtostr_ptr", scope: !3, file: !3, line: 325, type: !49, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !763, retainedNodes: !4)
!806 = !DIGlobalVariableExpression(var: !807, expr: !DIExpression())
!807 = distinct !DIGlobalVariable(name: "buf", scope: !808, file: !3, line: 316, type: !53, isLocal: true, isDefinition: true)
!808 = distinct !DISubprogram(name: "gidtostr_ptr", scope: !3, file: !3, line: 314, type: !59, scopeLine: 315, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !763, retainedNodes: !4)
!809 = !DILocalVariable(name: "NO_GID", scope: !810, file: !3, line: 272, type: !21)
!810 = distinct !DILexicalBlock(scope: !811, file: !3, line: 267, column: 5)
!811 = distinct !DILexicalBlock(scope: !812, file: !3, line: 227, column: 7)
!812 = distinct !DISubprogram(name: "main", scope: !3, file: !3, line: 125, type: !453, scopeLine: 126, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !813, retainedNodes: !4)
!813 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !814, nameTableKind: None)
!814 = !{!815, !817, !819, !821, !823, !833, !835, !837, !839, !841, !843, !845, !847, !849, !851, !853, !856}
!815 = !DIGlobalVariableExpression(var: !816, expr: !DIExpression())
!816 = distinct !DIGlobalVariable(name: "ruid", scope: !813, file: !3, line: 64, type: !12, isLocal: true, isDefinition: true)
!817 = !DIGlobalVariableExpression(var: !818, expr: !DIExpression())
!818 = distinct !DIGlobalVariable(name: "euid", scope: !813, file: !3, line: 64, type: !12, isLocal: true, isDefinition: true)
!819 = !DIGlobalVariableExpression(var: !820, expr: !DIExpression())
!820 = distinct !DIGlobalVariable(name: "rgid", scope: !813, file: !3, line: 65, type: !21, isLocal: true, isDefinition: true)
!821 = !DIGlobalVariableExpression(var: !822, expr: !DIExpression())
!822 = distinct !DIGlobalVariable(name: "egid", scope: !813, file: !3, line: 65, type: !21, isLocal: true, isDefinition: true)
!823 = !DIGlobalVariableExpression(var: !824, expr: !DIExpression())
!824 = distinct !DIGlobalVariable(name: "longopts", scope: !813, file: !3, line: 75, type: !825, isLocal: true, isDefinition: true)
!825 = !DICompositeType(tag: DW_TAG_array_type, baseType: !826, size: 2560, elements: !76)
!826 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !827)
!827 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !66, line: 50, size: 256, elements: !828)
!828 = !{!829, !830, !831, !832}
!829 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !827, file: !66, line: 52, baseType: !69, size: 64)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !827, file: !66, line: 55, baseType: !72, size: 32, offset: 64)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !827, file: !66, line: 56, baseType: !74, size: 64, offset: 128)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !827, file: !66, line: 57, baseType: !72, size: 32, offset: 192)
!833 = !DIGlobalVariableExpression(var: !834, expr: !DIExpression())
!834 = distinct !DIGlobalVariable(name: "just_context", scope: !813, file: !3, line: 45, type: !27, isLocal: true, isDefinition: true)
!835 = !DIGlobalVariableExpression(var: !836, expr: !DIExpression())
!836 = distinct !DIGlobalVariable(name: "just_group", scope: !813, file: !3, line: 51, type: !27, isLocal: true, isDefinition: true)
!837 = !DIGlobalVariableExpression(var: !838, expr: !DIExpression())
!838 = distinct !DIGlobalVariable(name: "use_name", scope: !813, file: !3, line: 61, type: !27, isLocal: true, isDefinition: true)
!839 = !DIGlobalVariableExpression(var: !840, expr: !DIExpression())
!840 = distinct !DIGlobalVariable(name: "use_real", scope: !813, file: !3, line: 53, type: !27, isLocal: true, isDefinition: true)
!841 = !DIGlobalVariableExpression(var: !842, expr: !DIExpression())
!842 = distinct !DIGlobalVariable(name: "just_user", scope: !813, file: !3, line: 55, type: !27, isLocal: true, isDefinition: true)
!843 = !DIGlobalVariableExpression(var: !844, expr: !DIExpression())
!844 = distinct !DIGlobalVariable(name: "opt_zero", scope: !813, file: !3, line: 47, type: !27, isLocal: true, isDefinition: true)
!845 = !DIGlobalVariableExpression(var: !846, expr: !DIExpression())
!846 = distinct !DIGlobalVariable(name: "just_group_list", scope: !813, file: !3, line: 49, type: !27, isLocal: true, isDefinition: true)
!847 = !DIGlobalVariableExpression(var: !848, expr: !DIExpression())
!848 = distinct !DIGlobalVariable(name: "context", scope: !813, file: !3, line: 69, type: !6, isLocal: true, isDefinition: true)
!849 = !DIGlobalVariableExpression(var: !850, expr: !DIExpression())
!850 = distinct !DIGlobalVariable(name: "multiple_users", scope: !813, file: !3, line: 59, type: !27, isLocal: true, isDefinition: true)
!851 = !DIGlobalVariableExpression(var: !852, expr: !DIExpression())
!852 = distinct !DIGlobalVariable(name: "ok", scope: !813, file: !3, line: 57, type: !27, isLocal: true, isDefinition: true)
!853 = !DIGlobalVariableExpression(var: !854, expr: !DIExpression())
!854 = distinct !DIGlobalVariable(name: "buf", scope: !855, file: !3, line: 327, type: !53, isLocal: true, isDefinition: true)
!855 = distinct !DISubprogram(name: "uidtostr_ptr", scope: !3, file: !3, line: 325, type: !49, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !813, retainedNodes: !4)
!856 = !DIGlobalVariableExpression(var: !857, expr: !DIExpression())
!857 = distinct !DIGlobalVariable(name: "buf", scope: !858, file: !3, line: 316, type: !53, isLocal: true, isDefinition: true)
!858 = distinct !DISubprogram(name: "gidtostr_ptr", scope: !3, file: !3, line: 314, type: !59, scopeLine: 315, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !813, retainedNodes: !4)
!859 = distinct !DISubprogram(name: "is_smack_enabled", scope: !860, file: !860, line: 39, type: !861, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!860 = !DIFile(filename: "./lib/smack.h", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!861 = !DISubroutineType(types: !862)
!862 = !{!27}
!863 = !DILocation(line: 44, column: 3, scope: !859)
!864 = distinct !DISubprogram(name: "smack_new_label_from_self", scope: !860, file: !860, line: 26, type: !865, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!865 = !DISubroutineType(types: !866)
!866 = !{!867, !184}
!867 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !868, line: 77, baseType: !869)
!868 = !DIFile(filename: "/usr/include/stdio.h", directory: "")
!869 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !15, line: 193, baseType: !870)
!870 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!871 = !DILocalVariable(name: "label", arg: 1, scope: !864, file: !860, line: 26, type: !184)
!872 = !DILocation(line: 26, column: 35, scope: !864)
!873 = !DILocation(line: 28, column: 3, scope: !864)
!874 = distinct !DISubprogram(name: "print_stuff", scope: !3, file: !3, line: 432, type: !343, scopeLine: 433, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!875 = !DILocalVariable(name: "pw_name", arg: 1, scope: !874, file: !3, line: 432, type: !69)
!876 = !DILocation(line: 432, column: 26, scope: !874)
!877 = !DILocation(line: 434, column: 7, scope: !878)
!878 = distinct !DILexicalBlock(scope: !874, file: !3, line: 434, column: 7)
!879 = !DILocation(line: 434, column: 7, scope: !874)
!880 = !DILocation(line: 435, column: 19, scope: !878)
!881 = !DILocation(line: 435, column: 30, scope: !878)
!882 = !DILocation(line: 435, column: 37, scope: !878)
!883 = !DILocation(line: 435, column: 7, scope: !878)
!884 = !DILocation(line: 442, column: 12, scope: !885)
!885 = distinct !DILexicalBlock(scope: !878, file: !3, line: 442, column: 12)
!886 = !DILocation(line: 442, column: 12, scope: !878)
!887 = !DILocation(line: 443, column: 24, scope: !885)
!888 = !DILocation(line: 443, column: 35, scope: !885)
!889 = !DILocation(line: 443, column: 42, scope: !885)
!890 = !DILocation(line: 443, column: 48, scope: !885)
!891 = !DILocation(line: 443, column: 11, scope: !885)
!892 = !DILocation(line: 443, column: 8, scope: !885)
!893 = !DILocation(line: 443, column: 5, scope: !885)
!894 = !DILocation(line: 444, column: 12, scope: !895)
!895 = distinct !DILexicalBlock(scope: !885, file: !3, line: 444, column: 12)
!896 = !DILocation(line: 444, column: 12, scope: !885)
!897 = !DILocation(line: 445, column: 29, scope: !895)
!898 = !DILocation(line: 445, column: 38, scope: !895)
!899 = !DILocation(line: 445, column: 44, scope: !895)
!900 = !DILocation(line: 445, column: 50, scope: !895)
!901 = !DILocation(line: 446, column: 29, scope: !895)
!902 = !DILocation(line: 446, column: 39, scope: !895)
!903 = !DILocation(line: 445, column: 11, scope: !895)
!904 = !DILocation(line: 445, column: 8, scope: !895)
!905 = !DILocation(line: 445, column: 5, scope: !895)
!906 = !DILocation(line: 447, column: 12, scope: !907)
!907 = distinct !DILexicalBlock(scope: !895, file: !3, line: 447, column: 12)
!908 = !DILocation(line: 447, column: 12, scope: !895)
!909 = !DILocation(line: 448, column: 5, scope: !907)
!910 = !DILocation(line: 450, column: 22, scope: !907)
!911 = !DILocation(line: 450, column: 5, scope: !907)
!912 = !DILocation(line: 455, column: 7, scope: !913)
!913 = distinct !DILexicalBlock(scope: !874, file: !3, line: 455, column: 7)
!914 = !DILocation(line: 455, column: 16, scope: !913)
!915 = !DILocation(line: 455, column: 19, scope: !913)
!916 = !DILocation(line: 455, column: 35, scope: !913)
!917 = !DILocation(line: 455, column: 38, scope: !913)
!918 = !DILocation(line: 455, column: 7, scope: !874)
!919 = !DILocation(line: 457, column: 7, scope: !920)
!920 = distinct !DILexicalBlock(scope: !913, file: !3, line: 456, column: 5)
!921 = !DILocation(line: 458, column: 7, scope: !920)
!922 = !DILocation(line: 459, column: 5, scope: !920)
!923 = !DILocation(line: 462, column: 7, scope: !924)
!924 = distinct !DILexicalBlock(scope: !913, file: !3, line: 461, column: 5)
!925 = !DILocation(line: 464, column: 1, scope: !874)
!926 = distinct !DISubprogram(name: "print_user", scope: !3, file: !3, line: 335, type: !927, scopeLine: 336, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!927 = !DISubroutineType(types: !928)
!928 = !{null, !12}
!929 = !DILocalVariable(name: "uid", arg: 1, scope: !926, file: !3, line: 335, type: !12)
!930 = !DILocation(line: 335, column: 19, scope: !926)
!931 = !DILocalVariable(name: "pwd", scope: !926, file: !3, line: 337, type: !599)
!932 = !DILocation(line: 337, column: 18, scope: !926)
!933 = !DILocation(line: 339, column: 7, scope: !934)
!934 = distinct !DILexicalBlock(scope: !926, file: !3, line: 339, column: 7)
!935 = !DILocation(line: 339, column: 7, scope: !926)
!936 = !DILocation(line: 341, column: 23, scope: !937)
!937 = distinct !DILexicalBlock(scope: !934, file: !3, line: 340, column: 5)
!938 = !DILocation(line: 341, column: 13, scope: !937)
!939 = !DILocation(line: 341, column: 11, scope: !937)
!940 = !DILocation(line: 342, column: 11, scope: !941)
!941 = distinct !DILexicalBlock(scope: !937, file: !3, line: 342, column: 11)
!942 = !DILocation(line: 342, column: 15, scope: !941)
!943 = !DILocation(line: 342, column: 11, scope: !937)
!944 = !DILocation(line: 344, column: 24, scope: !945)
!945 = distinct !DILexicalBlock(scope: !941, file: !3, line: 343, column: 9)
!946 = !DILocation(line: 345, column: 18, scope: !945)
!947 = !DILocation(line: 344, column: 11, scope: !945)
!948 = !DILocation(line: 346, column: 14, scope: !945)
!949 = !DILocation(line: 347, column: 9, scope: !945)
!950 = !DILocation(line: 348, column: 5, scope: !937)
!951 = !DILocalVariable(name: "s", scope: !926, file: !3, line: 350, type: !6)
!952 = !DILocation(line: 350, column: 9, scope: !926)
!953 = !DILocation(line: 350, column: 13, scope: !926)
!954 = !DILocation(line: 350, column: 19, scope: !926)
!955 = !DILocation(line: 350, column: 24, scope: !926)
!956 = !DILocation(line: 350, column: 34, scope: !926)
!957 = !DILocation(line: 351, column: 3, scope: !926)
!958 = !DILocation(line: 352, column: 1, scope: !926)
!959 = distinct !DISubprogram(name: "print_full_info", scope: !3, file: !3, line: 357, type: !343, scopeLine: 358, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!960 = !DILocalVariable(name: "username", arg: 1, scope: !959, file: !3, line: 357, type: !69)
!961 = !DILocation(line: 357, column: 30, scope: !959)
!962 = !DILocalVariable(name: "pwd", scope: !959, file: !3, line: 359, type: !599)
!963 = !DILocation(line: 359, column: 18, scope: !959)
!964 = !DILocalVariable(name: "grp", scope: !959, file: !3, line: 360, type: !965)
!965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !966, size: 64)
!966 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group", file: !967, line: 42, size: 256, elements: !968)
!967 = !DIFile(filename: "/usr/include/grp.h", directory: "")
!968 = !{!969, !970, !971, !972}
!969 = !DIDerivedType(tag: DW_TAG_member, name: "gr_name", scope: !966, file: !967, line: 44, baseType: !6, size: 64)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "gr_passwd", scope: !966, file: !967, line: 45, baseType: !6, size: 64, offset: 64)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "gr_gid", scope: !966, file: !967, line: 46, baseType: !22, size: 32, offset: 128)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "gr_mem", scope: !966, file: !967, line: 47, baseType: !184, size: 64, offset: 192)
!973 = !DILocation(line: 360, column: 17, scope: !959)
!974 = !DILocation(line: 362, column: 11, scope: !959)
!975 = !DILocation(line: 362, column: 24, scope: !959)
!976 = !DILocation(line: 362, column: 3, scope: !959)
!977 = !DILocation(line: 363, column: 19, scope: !959)
!978 = !DILocation(line: 363, column: 9, scope: !959)
!979 = !DILocation(line: 363, column: 7, scope: !959)
!980 = !DILocation(line: 364, column: 7, scope: !981)
!981 = distinct !DILexicalBlock(scope: !959, file: !3, line: 364, column: 7)
!982 = !DILocation(line: 364, column: 7, scope: !959)
!983 = !DILocation(line: 365, column: 21, scope: !981)
!984 = !DILocation(line: 365, column: 26, scope: !981)
!985 = !DILocation(line: 365, column: 5, scope: !981)
!986 = !DILocation(line: 367, column: 11, scope: !959)
!987 = !DILocation(line: 367, column: 25, scope: !959)
!988 = !DILocation(line: 367, column: 3, scope: !959)
!989 = !DILocation(line: 368, column: 19, scope: !959)
!990 = !DILocation(line: 368, column: 9, scope: !959)
!991 = !DILocation(line: 368, column: 7, scope: !959)
!992 = !DILocation(line: 369, column: 7, scope: !993)
!993 = distinct !DILexicalBlock(scope: !959, file: !3, line: 369, column: 7)
!994 = !DILocation(line: 369, column: 7, scope: !959)
!995 = !DILocation(line: 370, column: 21, scope: !993)
!996 = !DILocation(line: 370, column: 26, scope: !993)
!997 = !DILocation(line: 370, column: 5, scope: !993)
!998 = !DILocation(line: 372, column: 7, scope: !999)
!999 = distinct !DILexicalBlock(scope: !959, file: !3, line: 372, column: 7)
!1000 = !DILocation(line: 372, column: 15, scope: !999)
!1001 = !DILocation(line: 372, column: 12, scope: !999)
!1002 = !DILocation(line: 372, column: 7, scope: !959)
!1003 = !DILocation(line: 374, column: 15, scope: !1004)
!1004 = distinct !DILexicalBlock(scope: !999, file: !3, line: 373, column: 5)
!1005 = !DILocation(line: 374, column: 30, scope: !1004)
!1006 = !DILocation(line: 374, column: 7, scope: !1004)
!1007 = !DILocation(line: 375, column: 23, scope: !1004)
!1008 = !DILocation(line: 375, column: 13, scope: !1004)
!1009 = !DILocation(line: 375, column: 11, scope: !1004)
!1010 = !DILocation(line: 376, column: 11, scope: !1011)
!1011 = distinct !DILexicalBlock(scope: !1004, file: !3, line: 376, column: 11)
!1012 = !DILocation(line: 376, column: 11, scope: !1004)
!1013 = !DILocation(line: 377, column: 25, scope: !1011)
!1014 = !DILocation(line: 377, column: 30, scope: !1011)
!1015 = !DILocation(line: 377, column: 9, scope: !1011)
!1016 = !DILocation(line: 378, column: 5, scope: !1004)
!1017 = !DILocation(line: 380, column: 7, scope: !1018)
!1018 = distinct !DILexicalBlock(scope: !959, file: !3, line: 380, column: 7)
!1019 = !DILocation(line: 380, column: 15, scope: !1018)
!1020 = !DILocation(line: 380, column: 12, scope: !1018)
!1021 = !DILocation(line: 380, column: 7, scope: !959)
!1022 = !DILocation(line: 382, column: 15, scope: !1023)
!1023 = distinct !DILexicalBlock(scope: !1018, file: !3, line: 381, column: 5)
!1024 = !DILocation(line: 382, column: 30, scope: !1023)
!1025 = !DILocation(line: 382, column: 7, scope: !1023)
!1026 = !DILocation(line: 383, column: 23, scope: !1023)
!1027 = !DILocation(line: 383, column: 13, scope: !1023)
!1028 = !DILocation(line: 383, column: 11, scope: !1023)
!1029 = !DILocation(line: 384, column: 11, scope: !1030)
!1030 = distinct !DILexicalBlock(scope: !1023, file: !3, line: 384, column: 11)
!1031 = !DILocation(line: 384, column: 11, scope: !1023)
!1032 = !DILocation(line: 385, column: 25, scope: !1030)
!1033 = !DILocation(line: 385, column: 30, scope: !1030)
!1034 = !DILocation(line: 385, column: 9, scope: !1030)
!1035 = !DILocation(line: 386, column: 5, scope: !1023)
!1036 = !DILocalVariable(name: "groups", scope: !1037, file: !3, line: 389, type: !183)
!1037 = distinct !DILexicalBlock(scope: !959, file: !3, line: 388, column: 3)
!1038 = !DILocation(line: 389, column: 12, scope: !1037)
!1039 = !DILocalVariable(name: "primary_group", scope: !1037, file: !3, line: 391, type: !21)
!1040 = !DILocation(line: 391, column: 11, scope: !1037)
!1041 = !DILocation(line: 392, column: 9, scope: !1042)
!1042 = distinct !DILexicalBlock(scope: !1037, file: !3, line: 392, column: 9)
!1043 = !DILocation(line: 392, column: 9, scope: !1037)
!1044 = !DILocation(line: 393, column: 23, scope: !1042)
!1045 = !DILocation(line: 393, column: 29, scope: !1042)
!1046 = !DILocation(line: 393, column: 34, scope: !1042)
!1047 = !DILocation(line: 393, column: 21, scope: !1042)
!1048 = !DILocation(line: 393, column: 7, scope: !1042)
!1049 = !DILocation(line: 395, column: 23, scope: !1042)
!1050 = !DILocation(line: 395, column: 21, scope: !1042)
!1051 = !DILocalVariable(name: "n_groups", scope: !1037, file: !3, line: 397, type: !72)
!1052 = !DILocation(line: 397, column: 9, scope: !1037)
!1053 = !DILocation(line: 397, column: 32, scope: !1037)
!1054 = !DILocation(line: 397, column: 42, scope: !1037)
!1055 = !DILocation(line: 397, column: 20, scope: !1037)
!1056 = !DILocation(line: 398, column: 9, scope: !1057)
!1057 = distinct !DILexicalBlock(scope: !1037, file: !3, line: 398, column: 9)
!1058 = !DILocation(line: 398, column: 18, scope: !1057)
!1059 = !DILocation(line: 398, column: 9, scope: !1037)
!1060 = !DILocation(line: 400, column: 13, scope: !1061)
!1061 = distinct !DILexicalBlock(scope: !1062, file: !3, line: 400, column: 13)
!1062 = distinct !DILexicalBlock(scope: !1057, file: !3, line: 399, column: 7)
!1063 = !DILocation(line: 400, column: 13, scope: !1062)
!1064 = !DILocation(line: 401, column: 21, scope: !1061)
!1065 = !DILocation(line: 401, column: 28, scope: !1061)
!1066 = !DILocation(line: 402, column: 25, scope: !1061)
!1067 = !DILocation(line: 402, column: 18, scope: !1061)
!1068 = !DILocation(line: 401, column: 11, scope: !1061)
!1069 = !DILocation(line: 404, column: 21, scope: !1061)
!1070 = !DILocation(line: 404, column: 28, scope: !1061)
!1071 = !DILocation(line: 404, column: 11, scope: !1061)
!1072 = !DILocation(line: 405, column: 12, scope: !1062)
!1073 = !DILocation(line: 406, column: 9, scope: !1062)
!1074 = !DILocation(line: 409, column: 9, scope: !1075)
!1075 = distinct !DILexicalBlock(scope: !1037, file: !3, line: 409, column: 9)
!1076 = !DILocation(line: 409, column: 18, scope: !1075)
!1077 = !DILocation(line: 409, column: 9, scope: !1037)
!1078 = !DILocation(line: 410, column: 7, scope: !1075)
!1079 = !DILocalVariable(name: "i", scope: !1080, file: !3, line: 411, type: !72)
!1080 = distinct !DILexicalBlock(scope: !1037, file: !3, line: 411, column: 5)
!1081 = !DILocation(line: 411, column: 14, scope: !1080)
!1082 = !DILocation(line: 411, column: 10, scope: !1080)
!1083 = !DILocation(line: 411, column: 21, scope: !1084)
!1084 = distinct !DILexicalBlock(scope: !1080, file: !3, line: 411, column: 5)
!1085 = !DILocation(line: 411, column: 25, scope: !1084)
!1086 = !DILocation(line: 411, column: 23, scope: !1084)
!1087 = !DILocation(line: 411, column: 5, scope: !1080)
!1088 = !DILocation(line: 413, column: 13, scope: !1089)
!1089 = distinct !DILexicalBlock(scope: !1090, file: !3, line: 413, column: 13)
!1090 = distinct !DILexicalBlock(scope: !1084, file: !3, line: 412, column: 7)
!1091 = !DILocation(line: 413, column: 15, scope: !1089)
!1092 = !DILocation(line: 413, column: 13, scope: !1090)
!1093 = !DILocation(line: 414, column: 11, scope: !1089)
!1094 = !DILocation(line: 415, column: 9, scope: !1090)
!1095 = !DILocation(line: 416, column: 25, scope: !1090)
!1096 = !DILocation(line: 416, column: 32, scope: !1090)
!1097 = !DILocation(line: 416, column: 15, scope: !1090)
!1098 = !DILocation(line: 416, column: 13, scope: !1090)
!1099 = !DILocation(line: 417, column: 13, scope: !1100)
!1100 = distinct !DILexicalBlock(scope: !1090, file: !3, line: 417, column: 13)
!1101 = !DILocation(line: 417, column: 13, scope: !1090)
!1102 = !DILocation(line: 418, column: 27, scope: !1100)
!1103 = !DILocation(line: 418, column: 32, scope: !1100)
!1104 = !DILocation(line: 418, column: 11, scope: !1100)
!1105 = !DILocation(line: 419, column: 7, scope: !1090)
!1106 = !DILocation(line: 411, column: 36, scope: !1084)
!1107 = !DILocation(line: 411, column: 5, scope: !1084)
!1108 = distinct !{!1108, !1087, !1109}
!1109 = !DILocation(line: 419, column: 7, scope: !1080)
!1110 = !DILocation(line: 420, column: 11, scope: !1037)
!1111 = !DILocation(line: 420, column: 5, scope: !1037)
!1112 = !DILocation(line: 425, column: 7, scope: !1113)
!1113 = distinct !DILexicalBlock(scope: !959, file: !3, line: 425, column: 7)
!1114 = !DILocation(line: 425, column: 7, scope: !959)
!1115 = !DILocation(line: 426, column: 13, scope: !1113)
!1116 = !DILocation(line: 426, column: 31, scope: !1113)
!1117 = !DILocation(line: 426, column: 5, scope: !1113)
!1118 = !DILocation(line: 427, column: 1, scope: !959)
!1119 = !DILocalVariable(name: "uid", arg: 1, scope: !48, file: !3, line: 325, type: !51)
!1120 = !DILocation(line: 325, column: 28, scope: !48)
!1121 = !DILocation(line: 328, column: 22, scope: !48)
!1122 = !DILocation(line: 328, column: 21, scope: !48)
!1123 = !DILocation(line: 328, column: 10, scope: !48)
!1124 = !DILocation(line: 328, column: 3, scope: !48)
!1125 = !DILocalVariable(name: "gid", arg: 1, scope: !58, file: !3, line: 314, type: !61)
!1126 = !DILocation(line: 314, column: 28, scope: !58)
!1127 = !DILocation(line: 317, column: 22, scope: !58)
!1128 = !DILocation(line: 317, column: 21, scope: !58)
!1129 = !DILocation(line: 317, column: 10, scope: !58)
!1130 = !DILocation(line: 317, column: 3, scope: !58)
!1131 = distinct !DISubprogram(name: "print_group_list", scope: !81, file: !81, line: 36, type: !1132, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !82, retainedNodes: !4)
!1132 = !DISubroutineType(types: !1133)
!1133 = !{!27, !69, !12, !21, !21, !27, !7}
!1134 = !DILocalVariable(name: "username", arg: 1, scope: !1131, file: !81, line: 36, type: !69)
!1135 = !DILocation(line: 36, column: 31, scope: !1131)
!1136 = !DILocalVariable(name: "ruid", arg: 2, scope: !1131, file: !81, line: 37, type: !12)
!1137 = !DILocation(line: 37, column: 25, scope: !1131)
!1138 = !DILocalVariable(name: "rgid", arg: 3, scope: !1131, file: !81, line: 37, type: !21)
!1139 = !DILocation(line: 37, column: 37, scope: !1131)
!1140 = !DILocalVariable(name: "egid", arg: 4, scope: !1131, file: !81, line: 37, type: !21)
!1141 = !DILocation(line: 37, column: 49, scope: !1131)
!1142 = !DILocalVariable(name: "use_names", arg: 5, scope: !1131, file: !81, line: 38, type: !27)
!1143 = !DILocation(line: 38, column: 24, scope: !1131)
!1144 = !DILocalVariable(name: "delim", arg: 6, scope: !1131, file: !81, line: 38, type: !7)
!1145 = !DILocation(line: 38, column: 40, scope: !1131)
!1146 = !DILocalVariable(name: "ok", scope: !1131, file: !81, line: 40, type: !27)
!1147 = !DILocation(line: 40, column: 8, scope: !1131)
!1148 = !DILocalVariable(name: "pwd", scope: !1131, file: !81, line: 41, type: !1149)
!1149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1150, size: 64)
!1150 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "passwd", file: !601, line: 49, size: 384, elements: !1151)
!1151 = !{!1152, !1153, !1154, !1155, !1156, !1157, !1158}
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "pw_name", scope: !1150, file: !601, line: 51, baseType: !6, size: 64)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "pw_passwd", scope: !1150, file: !601, line: 52, baseType: !6, size: 64, offset: 64)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "pw_uid", scope: !1150, file: !601, line: 54, baseType: !14, size: 32, offset: 128)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "pw_gid", scope: !1150, file: !601, line: 55, baseType: !22, size: 32, offset: 160)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "pw_gecos", scope: !1150, file: !601, line: 56, baseType: !6, size: 64, offset: 192)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "pw_dir", scope: !1150, file: !601, line: 57, baseType: !6, size: 64, offset: 256)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "pw_shell", scope: !1150, file: !601, line: 58, baseType: !6, size: 64, offset: 320)
!1159 = !DILocation(line: 41, column: 18, scope: !1131)
!1160 = !DILocation(line: 43, column: 7, scope: !1161)
!1161 = distinct !DILexicalBlock(scope: !1131, file: !81, line: 43, column: 7)
!1162 = !DILocation(line: 43, column: 7, scope: !1131)
!1163 = !DILocation(line: 45, column: 23, scope: !1164)
!1164 = distinct !DILexicalBlock(scope: !1161, file: !81, line: 44, column: 5)
!1165 = !DILocation(line: 45, column: 13, scope: !1164)
!1166 = !DILocation(line: 45, column: 11, scope: !1164)
!1167 = !DILocation(line: 46, column: 11, scope: !1168)
!1168 = distinct !DILexicalBlock(scope: !1164, file: !81, line: 46, column: 11)
!1169 = !DILocation(line: 46, column: 15, scope: !1168)
!1170 = !DILocation(line: 46, column: 11, scope: !1164)
!1171 = !DILocation(line: 47, column: 12, scope: !1168)
!1172 = !DILocation(line: 47, column: 9, scope: !1168)
!1173 = !DILocation(line: 48, column: 5, scope: !1164)
!1174 = !DILocation(line: 50, column: 21, scope: !1175)
!1175 = distinct !DILexicalBlock(scope: !1131, file: !81, line: 50, column: 7)
!1176 = !DILocation(line: 50, column: 27, scope: !1175)
!1177 = !DILocation(line: 50, column: 8, scope: !1175)
!1178 = !DILocation(line: 50, column: 7, scope: !1131)
!1179 = !DILocation(line: 51, column: 8, scope: !1175)
!1180 = !DILocation(line: 51, column: 5, scope: !1175)
!1181 = !DILocation(line: 53, column: 7, scope: !1182)
!1182 = distinct !DILexicalBlock(scope: !1131, file: !81, line: 53, column: 7)
!1183 = !DILocation(line: 53, column: 15, scope: !1182)
!1184 = !DILocation(line: 53, column: 12, scope: !1182)
!1185 = !DILocation(line: 53, column: 7, scope: !1131)
!1186 = !DILocation(line: 55, column: 7, scope: !1187)
!1187 = distinct !DILexicalBlock(scope: !1182, file: !81, line: 54, column: 5)
!1188 = !DILocation(line: 56, column: 25, scope: !1189)
!1189 = distinct !DILexicalBlock(scope: !1187, file: !81, line: 56, column: 11)
!1190 = !DILocation(line: 56, column: 31, scope: !1189)
!1191 = !DILocation(line: 56, column: 12, scope: !1189)
!1192 = !DILocation(line: 56, column: 11, scope: !1187)
!1193 = !DILocation(line: 57, column: 12, scope: !1189)
!1194 = !DILocation(line: 57, column: 9, scope: !1189)
!1195 = !DILocation(line: 58, column: 5, scope: !1187)
!1196 = !DILocalVariable(name: "groups", scope: !1197, file: !81, line: 61, type: !183)
!1197 = distinct !DILexicalBlock(scope: !1131, file: !81, line: 60, column: 3)
!1198 = !DILocation(line: 61, column: 12, scope: !1197)
!1199 = !DILocalVariable(name: "n_groups", scope: !1197, file: !81, line: 63, type: !72)
!1200 = !DILocation(line: 63, column: 9, scope: !1197)
!1201 = !DILocation(line: 63, column: 32, scope: !1197)
!1202 = !DILocation(line: 63, column: 43, scope: !1197)
!1203 = !DILocation(line: 63, column: 49, scope: !1197)
!1204 = !DILocation(line: 63, column: 54, scope: !1197)
!1205 = !DILocation(line: 63, column: 63, scope: !1197)
!1206 = !DILocation(line: 63, column: 20, scope: !1197)
!1207 = !DILocation(line: 64, column: 9, scope: !1208)
!1208 = distinct !DILexicalBlock(scope: !1197, file: !81, line: 64, column: 9)
!1209 = !DILocation(line: 64, column: 18, scope: !1208)
!1210 = !DILocation(line: 64, column: 9, scope: !1197)
!1211 = !DILocation(line: 66, column: 13, scope: !1212)
!1212 = distinct !DILexicalBlock(scope: !1213, file: !81, line: 66, column: 13)
!1213 = distinct !DILexicalBlock(scope: !1208, file: !81, line: 65, column: 7)
!1214 = !DILocation(line: 66, column: 13, scope: !1213)
!1215 = !DILocation(line: 68, column: 23, scope: !1216)
!1216 = distinct !DILexicalBlock(scope: !1212, file: !81, line: 67, column: 11)
!1217 = !DILocation(line: 68, column: 30, scope: !1216)
!1218 = !DILocation(line: 69, column: 27, scope: !1216)
!1219 = !DILocation(line: 69, column: 20, scope: !1216)
!1220 = !DILocation(line: 68, column: 13, scope: !1216)
!1221 = !DILocation(line: 70, column: 11, scope: !1216)
!1222 = !DILocation(line: 73, column: 23, scope: !1223)
!1223 = distinct !DILexicalBlock(scope: !1212, file: !81, line: 72, column: 11)
!1224 = !DILocation(line: 73, column: 30, scope: !1223)
!1225 = !DILocation(line: 73, column: 13, scope: !1223)
!1226 = !DILocation(line: 75, column: 9, scope: !1213)
!1227 = !DILocalVariable(name: "i", scope: !1228, file: !81, line: 78, type: !72)
!1228 = distinct !DILexicalBlock(scope: !1197, file: !81, line: 78, column: 5)
!1229 = !DILocation(line: 78, column: 14, scope: !1228)
!1230 = !DILocation(line: 78, column: 10, scope: !1228)
!1231 = !DILocation(line: 78, column: 21, scope: !1232)
!1232 = distinct !DILexicalBlock(scope: !1228, file: !81, line: 78, column: 5)
!1233 = !DILocation(line: 78, column: 25, scope: !1232)
!1234 = !DILocation(line: 78, column: 23, scope: !1232)
!1235 = !DILocation(line: 78, column: 5, scope: !1228)
!1236 = !DILocation(line: 79, column: 11, scope: !1237)
!1237 = distinct !DILexicalBlock(scope: !1232, file: !81, line: 79, column: 11)
!1238 = !DILocation(line: 79, column: 18, scope: !1237)
!1239 = !DILocation(line: 79, column: 24, scope: !1237)
!1240 = !DILocation(line: 79, column: 21, scope: !1237)
!1241 = !DILocation(line: 79, column: 29, scope: !1237)
!1242 = !DILocation(line: 79, column: 32, scope: !1237)
!1243 = !DILocation(line: 79, column: 39, scope: !1237)
!1244 = !DILocation(line: 79, column: 45, scope: !1237)
!1245 = !DILocation(line: 79, column: 42, scope: !1237)
!1246 = !DILocation(line: 79, column: 11, scope: !1232)
!1247 = !DILocation(line: 81, column: 11, scope: !1248)
!1248 = distinct !DILexicalBlock(scope: !1237, file: !81, line: 80, column: 9)
!1249 = !DILocation(line: 82, column: 29, scope: !1250)
!1250 = distinct !DILexicalBlock(scope: !1248, file: !81, line: 82, column: 15)
!1251 = !DILocation(line: 82, column: 36, scope: !1250)
!1252 = !DILocation(line: 82, column: 40, scope: !1250)
!1253 = !DILocation(line: 82, column: 16, scope: !1250)
!1254 = !DILocation(line: 82, column: 15, scope: !1248)
!1255 = !DILocation(line: 83, column: 16, scope: !1250)
!1256 = !DILocation(line: 83, column: 13, scope: !1250)
!1257 = !DILocation(line: 84, column: 9, scope: !1248)
!1258 = !DILocation(line: 78, column: 36, scope: !1232)
!1259 = !DILocation(line: 78, column: 5, scope: !1232)
!1260 = distinct !{!1260, !1235, !1261}
!1261 = !DILocation(line: 84, column: 9, scope: !1228)
!1262 = !DILocation(line: 85, column: 11, scope: !1197)
!1263 = !DILocation(line: 85, column: 5, scope: !1197)
!1264 = !DILocation(line: 87, column: 10, scope: !1131)
!1265 = !DILocation(line: 87, column: 3, scope: !1131)
!1266 = !DILocation(line: 88, column: 1, scope: !1131)
!1267 = distinct !DISubprogram(name: "print_group", scope: !81, file: !81, line: 103, type: !1268, scopeLine: 104, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !82, retainedNodes: !4)
!1268 = !DISubroutineType(types: !1269)
!1269 = !{!27, !21, !27}
!1270 = !DILocalVariable(name: "gid", arg: 1, scope: !1267, file: !81, line: 103, type: !21)
!1271 = !DILocation(line: 103, column: 20, scope: !1267)
!1272 = !DILocalVariable(name: "use_name", arg: 2, scope: !1267, file: !81, line: 103, type: !27)
!1273 = !DILocation(line: 103, column: 30, scope: !1267)
!1274 = !DILocalVariable(name: "grp", scope: !1267, file: !81, line: 105, type: !1275)
!1275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1276, size: 64)
!1276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group", file: !967, line: 42, size: 256, elements: !1277)
!1277 = !{!1278, !1279, !1280, !1281}
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "gr_name", scope: !1276, file: !967, line: 44, baseType: !6, size: 64)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "gr_passwd", scope: !1276, file: !967, line: 45, baseType: !6, size: 64, offset: 64)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "gr_gid", scope: !1276, file: !967, line: 46, baseType: !22, size: 32, offset: 128)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "gr_mem", scope: !1276, file: !967, line: 47, baseType: !184, size: 64, offset: 192)
!1282 = !DILocation(line: 105, column: 17, scope: !1267)
!1283 = !DILocalVariable(name: "ok", scope: !1267, file: !81, line: 106, type: !27)
!1284 = !DILocation(line: 106, column: 8, scope: !1267)
!1285 = !DILocation(line: 108, column: 7, scope: !1286)
!1286 = distinct !DILexicalBlock(scope: !1267, file: !81, line: 108, column: 7)
!1287 = !DILocation(line: 108, column: 7, scope: !1267)
!1288 = !DILocation(line: 110, column: 23, scope: !1289)
!1289 = distinct !DILexicalBlock(scope: !1286, file: !81, line: 109, column: 5)
!1290 = !DILocation(line: 110, column: 13, scope: !1289)
!1291 = !DILocation(line: 110, column: 11, scope: !1289)
!1292 = !DILocation(line: 111, column: 11, scope: !1293)
!1293 = distinct !DILexicalBlock(scope: !1289, file: !81, line: 111, column: 11)
!1294 = !DILocation(line: 111, column: 15, scope: !1293)
!1295 = !DILocation(line: 111, column: 11, scope: !1289)
!1296 = !DILocation(line: 113, column: 24, scope: !1297)
!1297 = distinct !DILexicalBlock(scope: !1293, file: !81, line: 112, column: 9)
!1298 = !DILocation(line: 114, column: 38, scope: !1297)
!1299 = !DILocation(line: 114, column: 18, scope: !1297)
!1300 = !DILocation(line: 113, column: 11, scope: !1297)
!1301 = !DILocation(line: 115, column: 14, scope: !1297)
!1302 = !DILocation(line: 116, column: 9, scope: !1297)
!1303 = !DILocation(line: 117, column: 5, scope: !1289)
!1304 = !DILocalVariable(name: "s", scope: !1267, file: !81, line: 119, type: !6)
!1305 = !DILocation(line: 119, column: 9, scope: !1267)
!1306 = !DILocation(line: 119, column: 13, scope: !1267)
!1307 = !DILocation(line: 119, column: 19, scope: !1267)
!1308 = !DILocation(line: 119, column: 24, scope: !1267)
!1309 = !DILocation(line: 119, column: 34, scope: !1267)
!1310 = !DILocation(line: 120, column: 3, scope: !1267)
!1311 = !DILocation(line: 121, column: 10, scope: !1267)
!1312 = !DILocation(line: 121, column: 3, scope: !1267)
!1313 = !DILocalVariable(name: "gid", arg: 1, scope: !80, file: !81, line: 94, type: !61)
!1314 = !DILocation(line: 94, column: 28, scope: !80)
!1315 = !DILocation(line: 97, column: 22, scope: !80)
!1316 = !DILocation(line: 97, column: 21, scope: !80)
!1317 = !DILocation(line: 97, column: 10, scope: !80)
!1318 = !DILocation(line: 97, column: 3, scope: !80)
!1319 = distinct !DISubprogram(name: "close_stdout", scope: !98, file: !98, line: 117, type: !1320, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !93, retainedNodes: !4)
!1320 = !DISubroutineType(types: !1321)
!1321 = !{null}
!1322 = !DILocation(line: 119, column: 21, scope: !1323)
!1323 = distinct !DILexicalBlock(scope: !1319, file: !98, line: 119, column: 7)
!1324 = !DILocation(line: 119, column: 7, scope: !1323)
!1325 = !DILocation(line: 119, column: 29, scope: !1323)
!1326 = !DILocation(line: 120, column: 7, scope: !1323)
!1327 = !DILocation(line: 120, column: 12, scope: !1323)
!1328 = !DILocation(line: 120, column: 25, scope: !1323)
!1329 = !DILocation(line: 120, column: 28, scope: !1323)
!1330 = !DILocation(line: 120, column: 34, scope: !1323)
!1331 = !DILocation(line: 119, column: 7, scope: !1319)
!1332 = !DILocalVariable(name: "write_error", scope: !1333, file: !98, line: 122, type: !69)
!1333 = distinct !DILexicalBlock(scope: !1323, file: !98, line: 121, column: 5)
!1334 = !DILocation(line: 122, column: 19, scope: !1333)
!1335 = !DILocation(line: 122, column: 33, scope: !1333)
!1336 = !DILocation(line: 123, column: 11, scope: !1337)
!1337 = distinct !DILexicalBlock(scope: !1333, file: !98, line: 123, column: 11)
!1338 = !DILocation(line: 123, column: 11, scope: !1333)
!1339 = !DILocation(line: 124, column: 19, scope: !1337)
!1340 = !DILocation(line: 124, column: 52, scope: !1337)
!1341 = !DILocation(line: 124, column: 36, scope: !1337)
!1342 = !DILocation(line: 125, column: 16, scope: !1337)
!1343 = !DILocation(line: 124, column: 9, scope: !1337)
!1344 = !DILocation(line: 127, column: 19, scope: !1337)
!1345 = !DILocation(line: 127, column: 32, scope: !1337)
!1346 = !DILocation(line: 127, column: 9, scope: !1337)
!1347 = !DILocation(line: 129, column: 14, scope: !1333)
!1348 = !DILocation(line: 129, column: 7, scope: !1333)
!1349 = !DILocation(line: 134, column: 42, scope: !1350)
!1350 = distinct !DILexicalBlock(scope: !1319, file: !98, line: 134, column: 7)
!1351 = !DILocation(line: 134, column: 28, scope: !1350)
!1352 = !DILocation(line: 134, column: 50, scope: !1350)
!1353 = !DILocation(line: 134, column: 7, scope: !1319)
!1354 = !DILocation(line: 135, column: 12, scope: !1350)
!1355 = !DILocation(line: 135, column: 5, scope: !1350)
!1356 = !DILocation(line: 136, column: 1, scope: !1319)
!1357 = distinct !DISubprogram(name: "umaxtostr", scope: !1358, file: !1358, line: 36, type: !1359, scopeLine: 37, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !202, retainedNodes: !4)
!1358 = !DIFile(filename: "./lib/anytostr.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!1359 = !DISubroutineType(types: !1360)
!1360 = !{!6, !205, !6}
!1361 = !DILocalVariable(name: "i", arg: 1, scope: !1357, file: !1358, line: 36, type: !205)
!1362 = !DILocation(line: 36, column: 19, scope: !1357)
!1363 = !DILocalVariable(name: "buf", arg: 2, scope: !1357, file: !1358, line: 36, type: !6)
!1364 = !DILocation(line: 36, column: 28, scope: !1357)
!1365 = !DILocalVariable(name: "p", scope: !1357, file: !1358, line: 38, type: !6)
!1366 = !DILocation(line: 38, column: 9, scope: !1357)
!1367 = !DILocation(line: 38, column: 13, scope: !1357)
!1368 = !DILocation(line: 38, column: 17, scope: !1357)
!1369 = !DILocation(line: 39, column: 4, scope: !1357)
!1370 = !DILocation(line: 39, column: 6, scope: !1357)
!1371 = !DILocation(line: 41, column: 7, scope: !1372)
!1372 = distinct !DILexicalBlock(scope: !1357, file: !1358, line: 41, column: 7)
!1373 = !DILocation(line: 41, column: 9, scope: !1372)
!1374 = !DILocation(line: 41, column: 7, scope: !1357)
!1375 = !DILocation(line: 43, column: 7, scope: !1376)
!1376 = distinct !DILexicalBlock(scope: !1372, file: !1358, line: 42, column: 5)
!1377 = !DILocation(line: 44, column: 22, scope: !1376)
!1378 = !DILocation(line: 44, column: 24, scope: !1376)
!1379 = !DILocation(line: 44, column: 20, scope: !1376)
!1380 = !DILocation(line: 44, column: 16, scope: !1376)
!1381 = !DILocation(line: 44, column: 10, scope: !1376)
!1382 = !DILocation(line: 44, column: 14, scope: !1376)
!1383 = !DILocation(line: 44, column: 9, scope: !1376)
!1384 = !DILocation(line: 45, column: 17, scope: !1376)
!1385 = !DILocation(line: 45, column: 24, scope: !1376)
!1386 = distinct !{!1386, !1375, !1387}
!1387 = !DILocation(line: 45, column: 28, scope: !1376)
!1388 = !DILocation(line: 47, column: 8, scope: !1376)
!1389 = !DILocation(line: 47, column: 12, scope: !1376)
!1390 = !DILocation(line: 48, column: 5, scope: !1376)
!1391 = !DILocation(line: 51, column: 7, scope: !1392)
!1392 = distinct !DILexicalBlock(scope: !1372, file: !1358, line: 50, column: 5)
!1393 = !DILocation(line: 52, column: 22, scope: !1392)
!1394 = !DILocation(line: 52, column: 24, scope: !1392)
!1395 = !DILocation(line: 52, column: 20, scope: !1392)
!1396 = !DILocation(line: 52, column: 16, scope: !1392)
!1397 = !DILocation(line: 52, column: 10, scope: !1392)
!1398 = !DILocation(line: 52, column: 14, scope: !1392)
!1399 = !DILocation(line: 52, column: 9, scope: !1392)
!1400 = !DILocation(line: 53, column: 17, scope: !1392)
!1401 = !DILocation(line: 53, column: 24, scope: !1392)
!1402 = distinct !{!1402, !1391, !1403}
!1403 = !DILocation(line: 53, column: 28, scope: !1392)
!1404 = !DILocation(line: 56, column: 10, scope: !1357)
!1405 = !DILocation(line: 56, column: 3, scope: !1357)
!1406 = distinct !DISubprogram(name: "set_program_name", scope: !112, file: !112, line: 39, type: !343, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !108, retainedNodes: !4)
!1407 = !DILocalVariable(name: "argv0", arg: 1, scope: !1406, file: !112, line: 39, type: !69)
!1408 = !DILocation(line: 39, column: 31, scope: !1406)
!1409 = !DILocalVariable(name: "slash", scope: !1406, file: !112, line: 46, type: !69)
!1410 = !DILocation(line: 46, column: 15, scope: !1406)
!1411 = !DILocalVariable(name: "base", scope: !1406, file: !112, line: 47, type: !69)
!1412 = !DILocation(line: 47, column: 15, scope: !1406)
!1413 = !DILocation(line: 51, column: 7, scope: !1414)
!1414 = distinct !DILexicalBlock(scope: !1406, file: !112, line: 51, column: 7)
!1415 = !DILocation(line: 51, column: 13, scope: !1414)
!1416 = !DILocation(line: 51, column: 7, scope: !1406)
!1417 = !DILocation(line: 55, column: 14, scope: !1418)
!1418 = distinct !DILexicalBlock(scope: !1414, file: !112, line: 52, column: 5)
!1419 = !DILocation(line: 54, column: 7, scope: !1418)
!1420 = !DILocation(line: 56, column: 7, scope: !1418)
!1421 = !DILocation(line: 59, column: 20, scope: !1406)
!1422 = !DILocation(line: 59, column: 11, scope: !1406)
!1423 = !DILocation(line: 59, column: 9, scope: !1406)
!1424 = !DILocation(line: 60, column: 11, scope: !1406)
!1425 = !DILocation(line: 60, column: 17, scope: !1406)
!1426 = !DILocation(line: 60, column: 27, scope: !1406)
!1427 = !DILocation(line: 60, column: 33, scope: !1406)
!1428 = !DILocation(line: 60, column: 39, scope: !1406)
!1429 = !DILocation(line: 60, column: 8, scope: !1406)
!1430 = !DILocation(line: 61, column: 7, scope: !1431)
!1431 = distinct !DILexicalBlock(scope: !1406, file: !112, line: 61, column: 7)
!1432 = !DILocation(line: 61, column: 14, scope: !1431)
!1433 = !DILocation(line: 61, column: 12, scope: !1431)
!1434 = !DILocation(line: 61, column: 20, scope: !1431)
!1435 = !DILocation(line: 61, column: 25, scope: !1431)
!1436 = !DILocation(line: 61, column: 37, scope: !1431)
!1437 = !DILocation(line: 61, column: 42, scope: !1431)
!1438 = !DILocation(line: 61, column: 28, scope: !1431)
!1439 = !DILocation(line: 61, column: 61, scope: !1431)
!1440 = !DILocation(line: 61, column: 7, scope: !1406)
!1441 = !DILocation(line: 63, column: 15, scope: !1442)
!1442 = distinct !DILexicalBlock(scope: !1431, file: !112, line: 62, column: 5)
!1443 = !DILocation(line: 63, column: 13, scope: !1442)
!1444 = !DILocation(line: 64, column: 20, scope: !1445)
!1445 = distinct !DILexicalBlock(scope: !1442, file: !112, line: 64, column: 11)
!1446 = !DILocation(line: 64, column: 11, scope: !1445)
!1447 = !DILocation(line: 64, column: 36, scope: !1445)
!1448 = !DILocation(line: 64, column: 11, scope: !1442)
!1449 = !DILocation(line: 66, column: 19, scope: !1450)
!1450 = distinct !DILexicalBlock(scope: !1445, file: !112, line: 65, column: 9)
!1451 = !DILocation(line: 66, column: 24, scope: !1450)
!1452 = !DILocation(line: 66, column: 17, scope: !1450)
!1453 = !DILocation(line: 70, column: 52, scope: !1450)
!1454 = !DILocation(line: 70, column: 41, scope: !1450)
!1455 = !DILocation(line: 72, column: 9, scope: !1450)
!1456 = !DILocation(line: 73, column: 5, scope: !1442)
!1457 = !DILocation(line: 84, column: 18, scope: !1406)
!1458 = !DILocation(line: 84, column: 16, scope: !1406)
!1459 = !DILocation(line: 90, column: 38, scope: !1406)
!1460 = !DILocation(line: 90, column: 27, scope: !1406)
!1461 = !DILocation(line: 92, column: 1, scope: !1406)
!1462 = !DILocalVariable(name: "argv0", arg: 1, scope: !1463, file: !112, line: 39, type: !69)
!1463 = distinct !DISubprogram(name: "set_program_name", scope: !112, file: !112, line: 39, type: !343, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1464, retainedNodes: !4)
!1464 = distinct !DICompileUnit(language: DW_LANG_C99, file: !109, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !110, globals: !1465, nameTableKind: None)
!1465 = !{!1466}
!1466 = !DIGlobalVariableExpression(var: !1467, expr: !DIExpression())
!1467 = distinct !DIGlobalVariable(name: "program_name", scope: !1464, file: !112, line: 33, type: !69, isLocal: false, isDefinition: true)
!1468 = !DILocalVariable(name: "slash", scope: !1463, file: !112, line: 46, type: !69)
!1469 = !DILocalVariable(name: "base", scope: !1463, file: !112, line: 47, type: !69)
!1470 = distinct !DISubprogram(name: "set_char_quoting", scope: !139, file: !139, line: 152, type: !1471, scopeLine: 153, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !115, retainedNodes: !4)
!1471 = !DISubroutineType(types: !1472)
!1472 = !{!72, !1473, !7, !72}
!1473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !150, size: 64)
!1474 = !DILocalVariable(name: "o", arg: 1, scope: !1470, file: !139, line: 152, type: !1473)
!1475 = !DILocation(line: 152, column: 43, scope: !1470)
!1476 = !DILocalVariable(name: "c", arg: 2, scope: !1470, file: !139, line: 152, type: !7)
!1477 = !DILocation(line: 152, column: 51, scope: !1470)
!1478 = !DILocalVariable(name: "i", arg: 3, scope: !1470, file: !139, line: 152, type: !72)
!1479 = !DILocation(line: 152, column: 58, scope: !1470)
!1480 = !DILocalVariable(name: "uc", scope: !1470, file: !139, line: 154, type: !240)
!1481 = !DILocation(line: 154, column: 17, scope: !1470)
!1482 = !DILocation(line: 154, column: 22, scope: !1470)
!1483 = !DILocalVariable(name: "p", scope: !1470, file: !139, line: 155, type: !1484)
!1484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16, size: 64)
!1485 = !DILocation(line: 155, column: 17, scope: !1470)
!1486 = !DILocation(line: 156, column: 6, scope: !1470)
!1487 = !DILocation(line: 156, column: 10, scope: !1470)
!1488 = !DILocation(line: 156, column: 41, scope: !1470)
!1489 = !DILocation(line: 156, column: 5, scope: !1470)
!1490 = !DILocation(line: 156, column: 59, scope: !1470)
!1491 = !DILocation(line: 156, column: 62, scope: !1470)
!1492 = !DILocation(line: 156, column: 57, scope: !1470)
!1493 = !DILocalVariable(name: "shift", scope: !1470, file: !139, line: 157, type: !72)
!1494 = !DILocation(line: 157, column: 7, scope: !1470)
!1495 = !DILocation(line: 157, column: 15, scope: !1470)
!1496 = !DILocation(line: 157, column: 18, scope: !1470)
!1497 = !DILocalVariable(name: "r", scope: !1470, file: !139, line: 158, type: !72)
!1498 = !DILocation(line: 158, column: 7, scope: !1470)
!1499 = !DILocation(line: 158, column: 13, scope: !1470)
!1500 = !DILocation(line: 158, column: 12, scope: !1470)
!1501 = !DILocation(line: 158, column: 18, scope: !1470)
!1502 = !DILocation(line: 158, column: 15, scope: !1470)
!1503 = !DILocation(line: 158, column: 25, scope: !1470)
!1504 = !DILocation(line: 159, column: 11, scope: !1470)
!1505 = !DILocation(line: 159, column: 13, scope: !1470)
!1506 = !DILocation(line: 159, column: 20, scope: !1470)
!1507 = !DILocation(line: 159, column: 18, scope: !1470)
!1508 = !DILocation(line: 159, column: 26, scope: !1470)
!1509 = !DILocation(line: 159, column: 23, scope: !1470)
!1510 = !DILocation(line: 159, column: 4, scope: !1470)
!1511 = !DILocation(line: 159, column: 6, scope: !1470)
!1512 = !DILocation(line: 160, column: 10, scope: !1470)
!1513 = !DILocation(line: 160, column: 3, scope: !1470)
!1514 = !DILocalVariable(name: "o", arg: 1, scope: !1515, file: !139, line: 152, type: !1518)
!1515 = distinct !DISubprogram(name: "set_char_quoting", scope: !139, file: !139, line: 152, type: !1516, scopeLine: 153, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1526, retainedNodes: !4)
!1516 = !DISubroutineType(types: !1517)
!1517 = !{!72, !1518, !7, !72}
!1518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1519, size: 64)
!1519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !139, line: 65, size: 448, elements: !1520)
!1520 = !{!1521, !1522, !1523, !1524, !1525}
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !1519, file: !139, line: 68, baseType: !118, size: 32)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1519, file: !139, line: 71, baseType: !72, size: 32, offset: 32)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !1519, file: !139, line: 75, baseType: !155, size: 256, offset: 64)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !1519, file: !139, line: 78, baseType: !69, size: 64, offset: 320)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !1519, file: !139, line: 81, baseType: !69, size: 64, offset: 384)
!1526 = distinct !DICompileUnit(language: DW_LANG_C99, file: !116, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !117, retainedTypes: !132, globals: !1527, nameTableKind: None)
!1527 = !{!1528, !1530, !1532, !1534, !1536, !1538, !1545, !1547}
!1528 = !DIGlobalVariableExpression(var: !1529, expr: !DIExpression())
!1529 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !1526, file: !139, line: 85, type: !140, isLocal: false, isDefinition: true)
!1530 = !DIGlobalVariableExpression(var: !1531, expr: !DIExpression())
!1531 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !1526, file: !139, line: 101, type: !146, isLocal: false, isDefinition: true)
!1532 = !DIGlobalVariableExpression(var: !1533, expr: !DIExpression())
!1533 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !1526, file: !139, line: 1052, type: !1519, isLocal: false, isDefinition: true)
!1534 = !DIGlobalVariableExpression(var: !1535, expr: !DIExpression())
!1535 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !1526, file: !139, line: 116, type: !1519, isLocal: true, isDefinition: true)
!1536 = !DIGlobalVariableExpression(var: !1537, expr: !DIExpression())
!1537 = distinct !DIGlobalVariable(name: "slot0", scope: !1526, file: !139, line: 842, type: !162, isLocal: true, isDefinition: true)
!1538 = !DIGlobalVariableExpression(var: !1539, expr: !DIExpression())
!1539 = distinct !DIGlobalVariable(name: "slotvec", scope: !1526, file: !139, line: 845, type: !1540, isLocal: true, isDefinition: true)
!1540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1541, size: 64)
!1541 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !139, line: 834, size: 128, elements: !1542)
!1542 = !{!1543, !1544}
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1541, file: !139, line: 836, baseType: !134, size: 64)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1541, file: !139, line: 837, baseType: !6, size: 64, offset: 64)
!1545 = !DIGlobalVariableExpression(var: !1546, expr: !DIExpression())
!1546 = distinct !DIGlobalVariable(name: "nslots", scope: !1526, file: !139, line: 843, type: !72, isLocal: true, isDefinition: true)
!1547 = !DIGlobalVariableExpression(var: !1548, expr: !DIExpression())
!1548 = distinct !DIGlobalVariable(name: "slotvec0", scope: !1526, file: !139, line: 844, type: !1541, isLocal: true, isDefinition: true)
!1549 = !DILocalVariable(name: "c", arg: 2, scope: !1515, file: !139, line: 152, type: !7)
!1550 = !DILocalVariable(name: "i", arg: 3, scope: !1515, file: !139, line: 152, type: !72)
!1551 = !DILocalVariable(name: "uc", scope: !1515, file: !139, line: 154, type: !240)
!1552 = !DILocalVariable(name: "p", scope: !1515, file: !139, line: 155, type: !1484)
!1553 = distinct !DISubprogram(name: "quotearg_char_mem", scope: !139, file: !139, line: 982, type: !1554, scopeLine: 983, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !115, retainedNodes: !4)
!1554 = !DISubroutineType(types: !1555)
!1555 = !{!6, !69, !134, !7}
!1556 = !DILocalVariable(name: "arg", arg: 1, scope: !1553, file: !139, line: 982, type: !69)
!1557 = !DILocation(line: 982, column: 32, scope: !1553)
!1558 = !DILocalVariable(name: "argsize", arg: 2, scope: !1553, file: !139, line: 982, type: !134)
!1559 = !DILocation(line: 982, column: 44, scope: !1553)
!1560 = !DILocalVariable(name: "ch", arg: 3, scope: !1553, file: !139, line: 982, type: !7)
!1561 = !DILocation(line: 982, column: 58, scope: !1553)
!1562 = !DILocalVariable(name: "options", scope: !1553, file: !139, line: 984, type: !150)
!1563 = !DILocation(line: 984, column: 26, scope: !1553)
!1564 = !DILocation(line: 985, column: 13, scope: !1553)
!1565 = !DILocation(line: 986, column: 31, scope: !1553)
!1566 = !DILocation(line: 986, column: 3, scope: !1553)
!1567 = !DILocation(line: 987, column: 33, scope: !1553)
!1568 = !DILocation(line: 987, column: 38, scope: !1553)
!1569 = !DILocation(line: 987, column: 10, scope: !1553)
!1570 = !DILocation(line: 987, column: 3, scope: !1553)
!1571 = !DILocalVariable(name: "arg", arg: 1, scope: !1572, file: !139, line: 982, type: !69)
!1572 = distinct !DISubprogram(name: "quotearg_char_mem", scope: !139, file: !139, line: 982, type: !1554, scopeLine: 983, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1573, retainedNodes: !4)
!1573 = distinct !DICompileUnit(language: DW_LANG_C99, file: !116, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !117, retainedTypes: !132, globals: !1574, nameTableKind: None)
!1574 = !{!1575, !1577, !1579, !1588, !1590, !1592, !1599, !1601}
!1575 = !DIGlobalVariableExpression(var: !1576, expr: !DIExpression())
!1576 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !1573, file: !139, line: 85, type: !140, isLocal: false, isDefinition: true)
!1577 = !DIGlobalVariableExpression(var: !1578, expr: !DIExpression())
!1578 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !1573, file: !139, line: 101, type: !146, isLocal: false, isDefinition: true)
!1579 = !DIGlobalVariableExpression(var: !1580, expr: !DIExpression())
!1580 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !1573, file: !139, line: 1052, type: !1581, isLocal: false, isDefinition: true)
!1581 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !139, line: 65, size: 448, elements: !1582)
!1582 = !{!1583, !1584, !1585, !1586, !1587}
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !1581, file: !139, line: 68, baseType: !118, size: 32)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1581, file: !139, line: 71, baseType: !72, size: 32, offset: 32)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !1581, file: !139, line: 75, baseType: !155, size: 256, offset: 64)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !1581, file: !139, line: 78, baseType: !69, size: 64, offset: 320)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !1581, file: !139, line: 81, baseType: !69, size: 64, offset: 384)
!1588 = !DIGlobalVariableExpression(var: !1589, expr: !DIExpression())
!1589 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !1573, file: !139, line: 116, type: !1581, isLocal: true, isDefinition: true)
!1590 = !DIGlobalVariableExpression(var: !1591, expr: !DIExpression())
!1591 = distinct !DIGlobalVariable(name: "slot0", scope: !1573, file: !139, line: 842, type: !162, isLocal: true, isDefinition: true)
!1592 = !DIGlobalVariableExpression(var: !1593, expr: !DIExpression())
!1593 = distinct !DIGlobalVariable(name: "slotvec", scope: !1573, file: !139, line: 845, type: !1594, isLocal: true, isDefinition: true)
!1594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1595, size: 64)
!1595 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !139, line: 834, size: 128, elements: !1596)
!1596 = !{!1597, !1598}
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1595, file: !139, line: 836, baseType: !134, size: 64)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1595, file: !139, line: 837, baseType: !6, size: 64, offset: 64)
!1599 = !DIGlobalVariableExpression(var: !1600, expr: !DIExpression())
!1600 = distinct !DIGlobalVariable(name: "nslots", scope: !1573, file: !139, line: 843, type: !72, isLocal: true, isDefinition: true)
!1601 = !DIGlobalVariableExpression(var: !1602, expr: !DIExpression())
!1602 = distinct !DIGlobalVariable(name: "slotvec0", scope: !1573, file: !139, line: 844, type: !1595, isLocal: true, isDefinition: true)
!1603 = !DILocalVariable(name: "argsize", arg: 2, scope: !1572, file: !139, line: 982, type: !134)
!1604 = !DILocalVariable(name: "ch", arg: 3, scope: !1572, file: !139, line: 982, type: !7)
!1605 = !DILocalVariable(name: "options", scope: !1572, file: !139, line: 984, type: !1581)
!1606 = distinct !DISubprogram(name: "quotearg_n_options", scope: !139, file: !139, line: 877, type: !1607, scopeLine: 879, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !115, retainedNodes: !4)
!1607 = !DISubroutineType(types: !1608)
!1608 = !{!6, !72, !69, !134, !1609}
!1609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1610, size: 64)
!1610 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !150)
!1611 = !DILocalVariable(name: "n", arg: 1, scope: !1606, file: !139, line: 877, type: !72)
!1612 = !DILocation(line: 877, column: 25, scope: !1606)
!1613 = !DILocalVariable(name: "arg", arg: 2, scope: !1606, file: !139, line: 877, type: !69)
!1614 = !DILocation(line: 877, column: 40, scope: !1606)
!1615 = !DILocalVariable(name: "argsize", arg: 3, scope: !1606, file: !139, line: 877, type: !134)
!1616 = !DILocation(line: 877, column: 52, scope: !1606)
!1617 = !DILocalVariable(name: "options", arg: 4, scope: !1606, file: !139, line: 878, type: !1609)
!1618 = !DILocation(line: 878, column: 51, scope: !1606)
!1619 = !DILocalVariable(name: "e", scope: !1606, file: !139, line: 880, type: !72)
!1620 = !DILocation(line: 880, column: 7, scope: !1606)
!1621 = !DILocation(line: 880, column: 11, scope: !1606)
!1622 = !DILocalVariable(name: "sv", scope: !1606, file: !139, line: 882, type: !167)
!1623 = !DILocation(line: 882, column: 19, scope: !1606)
!1624 = !DILocation(line: 882, column: 24, scope: !1606)
!1625 = !DILocation(line: 884, column: 7, scope: !1626)
!1626 = distinct !DILexicalBlock(scope: !1606, file: !139, line: 884, column: 7)
!1627 = !DILocation(line: 884, column: 9, scope: !1626)
!1628 = !DILocation(line: 884, column: 7, scope: !1606)
!1629 = !DILocation(line: 885, column: 5, scope: !1626)
!1630 = !DILocation(line: 887, column: 7, scope: !1631)
!1631 = distinct !DILexicalBlock(scope: !1606, file: !139, line: 887, column: 7)
!1632 = !DILocation(line: 887, column: 17, scope: !1631)
!1633 = !DILocation(line: 887, column: 14, scope: !1631)
!1634 = !DILocation(line: 887, column: 7, scope: !1606)
!1635 = !DILocalVariable(name: "preallocated", scope: !1636, file: !139, line: 889, type: !27)
!1636 = distinct !DILexicalBlock(scope: !1631, file: !139, line: 888, column: 5)
!1637 = !DILocation(line: 889, column: 12, scope: !1636)
!1638 = !DILocation(line: 889, column: 28, scope: !1636)
!1639 = !DILocation(line: 889, column: 31, scope: !1636)
!1640 = !DILocalVariable(name: "nmax", scope: !1636, file: !139, line: 890, type: !72)
!1641 = !DILocation(line: 890, column: 11, scope: !1636)
!1642 = !DILocation(line: 892, column: 11, scope: !1643)
!1643 = distinct !DILexicalBlock(scope: !1636, file: !139, line: 892, column: 11)
!1644 = !DILocation(line: 892, column: 18, scope: !1643)
!1645 = !DILocation(line: 892, column: 16, scope: !1643)
!1646 = !DILocation(line: 892, column: 11, scope: !1636)
!1647 = !DILocation(line: 893, column: 9, scope: !1643)
!1648 = !DILocation(line: 895, column: 32, scope: !1636)
!1649 = !DILocation(line: 895, column: 54, scope: !1636)
!1650 = !DILocation(line: 895, column: 59, scope: !1636)
!1651 = !DILocation(line: 895, column: 61, scope: !1636)
!1652 = !DILocation(line: 895, column: 58, scope: !1636)
!1653 = !DILocation(line: 895, column: 66, scope: !1636)
!1654 = !DILocation(line: 895, column: 22, scope: !1636)
!1655 = !DILocation(line: 895, column: 20, scope: !1636)
!1656 = !DILocation(line: 895, column: 15, scope: !1636)
!1657 = !DILocation(line: 896, column: 11, scope: !1658)
!1658 = distinct !DILexicalBlock(scope: !1636, file: !139, line: 896, column: 11)
!1659 = !DILocation(line: 896, column: 11, scope: !1636)
!1660 = !DILocation(line: 897, column: 10, scope: !1658)
!1661 = !DILocation(line: 897, column: 15, scope: !1658)
!1662 = !DILocation(line: 897, column: 9, scope: !1658)
!1663 = !DILocation(line: 898, column: 15, scope: !1636)
!1664 = !DILocation(line: 898, column: 20, scope: !1636)
!1665 = !DILocation(line: 898, column: 18, scope: !1636)
!1666 = !DILocation(line: 898, column: 7, scope: !1636)
!1667 = !DILocation(line: 898, column: 32, scope: !1636)
!1668 = !DILocation(line: 898, column: 34, scope: !1636)
!1669 = !DILocation(line: 898, column: 40, scope: !1636)
!1670 = !DILocation(line: 898, column: 38, scope: !1636)
!1671 = !DILocation(line: 898, column: 31, scope: !1636)
!1672 = !DILocation(line: 898, column: 48, scope: !1636)
!1673 = !DILocation(line: 899, column: 16, scope: !1636)
!1674 = !DILocation(line: 899, column: 18, scope: !1636)
!1675 = !DILocation(line: 899, column: 14, scope: !1636)
!1676 = !DILocation(line: 900, column: 5, scope: !1636)
!1677 = !DILocalVariable(name: "size", scope: !1678, file: !139, line: 903, type: !134)
!1678 = distinct !DILexicalBlock(scope: !1606, file: !139, line: 902, column: 3)
!1679 = !DILocation(line: 903, column: 12, scope: !1678)
!1680 = !DILocation(line: 903, column: 19, scope: !1678)
!1681 = !DILocation(line: 903, column: 22, scope: !1678)
!1682 = !DILocation(line: 903, column: 25, scope: !1678)
!1683 = !DILocalVariable(name: "val", scope: !1678, file: !139, line: 904, type: !6)
!1684 = !DILocation(line: 904, column: 11, scope: !1678)
!1685 = !DILocation(line: 904, column: 17, scope: !1678)
!1686 = !DILocation(line: 904, column: 20, scope: !1678)
!1687 = !DILocation(line: 904, column: 23, scope: !1678)
!1688 = !DILocalVariable(name: "flags", scope: !1678, file: !139, line: 906, type: !72)
!1689 = !DILocation(line: 906, column: 9, scope: !1678)
!1690 = !DILocation(line: 906, column: 17, scope: !1678)
!1691 = !DILocation(line: 906, column: 26, scope: !1678)
!1692 = !DILocation(line: 906, column: 32, scope: !1678)
!1693 = !DILocalVariable(name: "qsize", scope: !1678, file: !139, line: 907, type: !134)
!1694 = !DILocation(line: 907, column: 12, scope: !1678)
!1695 = !DILocation(line: 907, column: 46, scope: !1678)
!1696 = !DILocation(line: 907, column: 51, scope: !1678)
!1697 = !DILocation(line: 907, column: 57, scope: !1678)
!1698 = !DILocation(line: 907, column: 62, scope: !1678)
!1699 = !DILocation(line: 908, column: 46, scope: !1678)
!1700 = !DILocation(line: 908, column: 55, scope: !1678)
!1701 = !DILocation(line: 908, column: 62, scope: !1678)
!1702 = !DILocation(line: 909, column: 46, scope: !1678)
!1703 = !DILocation(line: 909, column: 55, scope: !1678)
!1704 = !DILocation(line: 910, column: 46, scope: !1678)
!1705 = !DILocation(line: 910, column: 55, scope: !1678)
!1706 = !DILocation(line: 911, column: 46, scope: !1678)
!1707 = !DILocation(line: 911, column: 55, scope: !1678)
!1708 = !DILocation(line: 907, column: 20, scope: !1678)
!1709 = !DILocation(line: 913, column: 9, scope: !1710)
!1710 = distinct !DILexicalBlock(scope: !1678, file: !139, line: 913, column: 9)
!1711 = !DILocation(line: 913, column: 17, scope: !1710)
!1712 = !DILocation(line: 913, column: 14, scope: !1710)
!1713 = !DILocation(line: 913, column: 9, scope: !1678)
!1714 = !DILocation(line: 915, column: 29, scope: !1715)
!1715 = distinct !DILexicalBlock(scope: !1710, file: !139, line: 914, column: 7)
!1716 = !DILocation(line: 915, column: 35, scope: !1715)
!1717 = !DILocation(line: 915, column: 27, scope: !1715)
!1718 = !DILocation(line: 915, column: 9, scope: !1715)
!1719 = !DILocation(line: 915, column: 12, scope: !1715)
!1720 = !DILocation(line: 915, column: 15, scope: !1715)
!1721 = !DILocation(line: 915, column: 20, scope: !1715)
!1722 = !DILocation(line: 916, column: 13, scope: !1723)
!1723 = distinct !DILexicalBlock(scope: !1715, file: !139, line: 916, column: 13)
!1724 = !DILocation(line: 916, column: 17, scope: !1723)
!1725 = !DILocation(line: 916, column: 13, scope: !1715)
!1726 = !DILocation(line: 917, column: 17, scope: !1723)
!1727 = !DILocation(line: 917, column: 11, scope: !1723)
!1728 = !DILocation(line: 918, column: 39, scope: !1715)
!1729 = !DILocation(line: 918, column: 27, scope: !1715)
!1730 = !DILocation(line: 918, column: 25, scope: !1715)
!1731 = !DILocation(line: 918, column: 9, scope: !1715)
!1732 = !DILocation(line: 918, column: 12, scope: !1715)
!1733 = !DILocation(line: 918, column: 15, scope: !1715)
!1734 = !DILocation(line: 918, column: 19, scope: !1715)
!1735 = !DILocation(line: 919, column: 35, scope: !1715)
!1736 = !DILocation(line: 919, column: 40, scope: !1715)
!1737 = !DILocation(line: 919, column: 46, scope: !1715)
!1738 = !DILocation(line: 919, column: 51, scope: !1715)
!1739 = !DILocation(line: 919, column: 60, scope: !1715)
!1740 = !DILocation(line: 919, column: 69, scope: !1715)
!1741 = !DILocation(line: 920, column: 35, scope: !1715)
!1742 = !DILocation(line: 920, column: 42, scope: !1715)
!1743 = !DILocation(line: 920, column: 51, scope: !1715)
!1744 = !DILocation(line: 921, column: 35, scope: !1715)
!1745 = !DILocation(line: 921, column: 44, scope: !1715)
!1746 = !DILocation(line: 922, column: 35, scope: !1715)
!1747 = !DILocation(line: 922, column: 44, scope: !1715)
!1748 = !DILocation(line: 919, column: 9, scope: !1715)
!1749 = !DILocation(line: 923, column: 7, scope: !1715)
!1750 = !DILocation(line: 925, column: 13, scope: !1678)
!1751 = !DILocation(line: 925, column: 5, scope: !1678)
!1752 = !DILocation(line: 925, column: 11, scope: !1678)
!1753 = !DILocation(line: 926, column: 12, scope: !1678)
!1754 = !DILocation(line: 926, column: 5, scope: !1678)
!1755 = !DILocalVariable(name: "n", arg: 1, scope: !1756, file: !139, line: 877, type: !72)
!1756 = distinct !DISubprogram(name: "quotearg_n_options", scope: !139, file: !139, line: 877, type: !1757, scopeLine: 879, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1768, retainedNodes: !4)
!1757 = !DISubroutineType(types: !1758)
!1758 = !{!6, !72, !69, !134, !1759}
!1759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1760, size: 64)
!1760 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1761)
!1761 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !139, line: 65, size: 448, elements: !1762)
!1762 = !{!1763, !1764, !1765, !1766, !1767}
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !1761, file: !139, line: 68, baseType: !118, size: 32)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1761, file: !139, line: 71, baseType: !72, size: 32, offset: 32)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !1761, file: !139, line: 75, baseType: !155, size: 256, offset: 64)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !1761, file: !139, line: 78, baseType: !69, size: 64, offset: 320)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !1761, file: !139, line: 81, baseType: !69, size: 64, offset: 384)
!1768 = distinct !DICompileUnit(language: DW_LANG_C99, file: !116, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !117, retainedTypes: !132, globals: !1769, nameTableKind: None)
!1769 = !{!1770, !1772, !1774, !1776, !1778, !1780, !1787, !1789}
!1770 = !DIGlobalVariableExpression(var: !1771, expr: !DIExpression())
!1771 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !1768, file: !139, line: 85, type: !140, isLocal: false, isDefinition: true)
!1772 = !DIGlobalVariableExpression(var: !1773, expr: !DIExpression())
!1773 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !1768, file: !139, line: 101, type: !146, isLocal: false, isDefinition: true)
!1774 = !DIGlobalVariableExpression(var: !1775, expr: !DIExpression())
!1775 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !1768, file: !139, line: 1052, type: !1761, isLocal: false, isDefinition: true)
!1776 = !DIGlobalVariableExpression(var: !1777, expr: !DIExpression())
!1777 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !1768, file: !139, line: 116, type: !1761, isLocal: true, isDefinition: true)
!1778 = !DIGlobalVariableExpression(var: !1779, expr: !DIExpression())
!1779 = distinct !DIGlobalVariable(name: "slot0", scope: !1768, file: !139, line: 842, type: !162, isLocal: true, isDefinition: true)
!1780 = !DIGlobalVariableExpression(var: !1781, expr: !DIExpression())
!1781 = distinct !DIGlobalVariable(name: "slotvec", scope: !1768, file: !139, line: 845, type: !1782, isLocal: true, isDefinition: true)
!1782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1783, size: 64)
!1783 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !139, line: 834, size: 128, elements: !1784)
!1784 = !{!1785, !1786}
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1783, file: !139, line: 836, baseType: !134, size: 64)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1783, file: !139, line: 837, baseType: !6, size: 64, offset: 64)
!1787 = !DIGlobalVariableExpression(var: !1788, expr: !DIExpression())
!1788 = distinct !DIGlobalVariable(name: "nslots", scope: !1768, file: !139, line: 843, type: !72, isLocal: true, isDefinition: true)
!1789 = !DIGlobalVariableExpression(var: !1790, expr: !DIExpression())
!1790 = distinct !DIGlobalVariable(name: "slotvec0", scope: !1768, file: !139, line: 844, type: !1783, isLocal: true, isDefinition: true)
!1791 = !DILocalVariable(name: "arg", arg: 2, scope: !1756, file: !139, line: 877, type: !69)
!1792 = !DILocalVariable(name: "argsize", arg: 3, scope: !1756, file: !139, line: 877, type: !134)
!1793 = !DILocalVariable(name: "options", arg: 4, scope: !1756, file: !139, line: 878, type: !1759)
!1794 = !DILocalVariable(name: "e", scope: !1756, file: !139, line: 880, type: !72)
!1795 = !DILocalVariable(name: "sv", scope: !1756, file: !139, line: 882, type: !1782)
!1796 = !DILocalVariable(name: "nmax", scope: !1797, file: !139, line: 890, type: !72)
!1797 = distinct !DILexicalBlock(scope: !1798, file: !139, line: 888, column: 5)
!1798 = distinct !DILexicalBlock(scope: !1799, file: !139, line: 887, column: 7)
!1799 = distinct !DISubprogram(name: "quotearg_n_options", scope: !139, file: !139, line: 877, type: !1800, scopeLine: 879, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1811, retainedNodes: !4)
!1800 = !DISubroutineType(types: !1801)
!1801 = !{!6, !72, !69, !134, !1802}
!1802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1803, size: 64)
!1803 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1804)
!1804 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !139, line: 65, size: 448, elements: !1805)
!1805 = !{!1806, !1807, !1808, !1809, !1810}
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !1804, file: !139, line: 68, baseType: !118, size: 32)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1804, file: !139, line: 71, baseType: !72, size: 32, offset: 32)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !1804, file: !139, line: 75, baseType: !155, size: 256, offset: 64)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !1804, file: !139, line: 78, baseType: !69, size: 64, offset: 320)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !1804, file: !139, line: 81, baseType: !69, size: 64, offset: 384)
!1811 = distinct !DICompileUnit(language: DW_LANG_C99, file: !116, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !117, retainedTypes: !132, globals: !1812, nameTableKind: None)
!1812 = !{!1813, !1815, !1817, !1819, !1821, !1823, !1830, !1832}
!1813 = !DIGlobalVariableExpression(var: !1814, expr: !DIExpression())
!1814 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !1811, file: !139, line: 85, type: !140, isLocal: false, isDefinition: true)
!1815 = !DIGlobalVariableExpression(var: !1816, expr: !DIExpression())
!1816 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !1811, file: !139, line: 101, type: !146, isLocal: false, isDefinition: true)
!1817 = !DIGlobalVariableExpression(var: !1818, expr: !DIExpression())
!1818 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !1811, file: !139, line: 1052, type: !1804, isLocal: false, isDefinition: true)
!1819 = !DIGlobalVariableExpression(var: !1820, expr: !DIExpression())
!1820 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !1811, file: !139, line: 116, type: !1804, isLocal: true, isDefinition: true)
!1821 = !DIGlobalVariableExpression(var: !1822, expr: !DIExpression())
!1822 = distinct !DIGlobalVariable(name: "slot0", scope: !1811, file: !139, line: 842, type: !162, isLocal: true, isDefinition: true)
!1823 = !DIGlobalVariableExpression(var: !1824, expr: !DIExpression())
!1824 = distinct !DIGlobalVariable(name: "slotvec", scope: !1811, file: !139, line: 845, type: !1825, isLocal: true, isDefinition: true)
!1825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1826, size: 64)
!1826 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !139, line: 834, size: 128, elements: !1827)
!1827 = !{!1828, !1829}
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1826, file: !139, line: 836, baseType: !134, size: 64)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1826, file: !139, line: 837, baseType: !6, size: 64, offset: 64)
!1830 = !DIGlobalVariableExpression(var: !1831, expr: !DIExpression())
!1831 = distinct !DIGlobalVariable(name: "nslots", scope: !1811, file: !139, line: 843, type: !72, isLocal: true, isDefinition: true)
!1832 = !DIGlobalVariableExpression(var: !1833, expr: !DIExpression())
!1833 = distinct !DIGlobalVariable(name: "slotvec0", scope: !1811, file: !139, line: 844, type: !1826, isLocal: true, isDefinition: true)
!1834 = distinct !DISubprogram(name: "quotearg_buffer_restyled", scope: !139, file: !139, line: 256, type: !1835, scopeLine: 262, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !115, retainedNodes: !4)
!1835 = !DISubroutineType(types: !1836)
!1836 = !{!134, !6, !134, !69, !134, !118, !72, !1837, !69, !69}
!1837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1838, size: 64)
!1838 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !16)
!1839 = !DILocalVariable(name: "buffer", arg: 1, scope: !1834, file: !139, line: 256, type: !6)
!1840 = !DILocation(line: 256, column: 33, scope: !1834)
!1841 = !DILocalVariable(name: "buffersize", arg: 2, scope: !1834, file: !139, line: 256, type: !134)
!1842 = !DILocation(line: 256, column: 48, scope: !1834)
!1843 = !DILocalVariable(name: "arg", arg: 3, scope: !1834, file: !139, line: 257, type: !69)
!1844 = !DILocation(line: 257, column: 39, scope: !1834)
!1845 = !DILocalVariable(name: "argsize", arg: 4, scope: !1834, file: !139, line: 257, type: !134)
!1846 = !DILocation(line: 257, column: 51, scope: !1834)
!1847 = !DILocalVariable(name: "quoting_style", arg: 5, scope: !1834, file: !139, line: 258, type: !118)
!1848 = !DILocation(line: 258, column: 46, scope: !1834)
!1849 = !DILocalVariable(name: "flags", arg: 6, scope: !1834, file: !139, line: 258, type: !72)
!1850 = !DILocation(line: 258, column: 65, scope: !1834)
!1851 = !DILocalVariable(name: "quote_these_too", arg: 7, scope: !1834, file: !139, line: 259, type: !1837)
!1852 = !DILocation(line: 259, column: 47, scope: !1834)
!1853 = !DILocalVariable(name: "left_quote", arg: 8, scope: !1834, file: !139, line: 260, type: !69)
!1854 = !DILocation(line: 260, column: 39, scope: !1834)
!1855 = !DILocalVariable(name: "right_quote", arg: 9, scope: !1834, file: !139, line: 261, type: !69)
!1856 = !DILocation(line: 261, column: 39, scope: !1834)
!1857 = !DILocalVariable(name: "i", scope: !1834, file: !139, line: 263, type: !134)
!1858 = !DILocation(line: 263, column: 10, scope: !1834)
!1859 = !DILocalVariable(name: "len", scope: !1834, file: !139, line: 264, type: !134)
!1860 = !DILocation(line: 264, column: 10, scope: !1834)
!1861 = !DILocalVariable(name: "orig_buffersize", scope: !1834, file: !139, line: 265, type: !134)
!1862 = !DILocation(line: 265, column: 10, scope: !1834)
!1863 = !DILocalVariable(name: "quote_string", scope: !1834, file: !139, line: 266, type: !69)
!1864 = !DILocation(line: 266, column: 15, scope: !1834)
!1865 = !DILocalVariable(name: "quote_string_len", scope: !1834, file: !139, line: 267, type: !134)
!1866 = !DILocation(line: 267, column: 10, scope: !1834)
!1867 = !DILocalVariable(name: "backslash_escapes", scope: !1834, file: !139, line: 268, type: !27)
!1868 = !DILocation(line: 268, column: 8, scope: !1834)
!1869 = !DILocalVariable(name: "unibyte_locale", scope: !1834, file: !139, line: 269, type: !27)
!1870 = !DILocation(line: 269, column: 8, scope: !1834)
!1871 = !DILocation(line: 269, column: 25, scope: !1834)
!1872 = !DILocation(line: 269, column: 36, scope: !1834)
!1873 = !DILocalVariable(name: "elide_outer_quotes", scope: !1834, file: !139, line: 270, type: !27)
!1874 = !DILocation(line: 270, column: 8, scope: !1834)
!1875 = !DILocation(line: 270, column: 30, scope: !1834)
!1876 = !DILocation(line: 270, column: 36, scope: !1834)
!1877 = !DILocation(line: 270, column: 61, scope: !1834)
!1878 = !DILocalVariable(name: "pending_shell_escape_end", scope: !1834, file: !139, line: 271, type: !27)
!1879 = !DILocation(line: 271, column: 8, scope: !1834)
!1880 = !DILocalVariable(name: "encountered_single_quote", scope: !1834, file: !139, line: 272, type: !27)
!1881 = !DILocation(line: 272, column: 8, scope: !1834)
!1882 = !DILocalVariable(name: "all_c_and_shell_quote_compat", scope: !1834, file: !139, line: 273, type: !27)
!1883 = !DILocation(line: 273, column: 8, scope: !1834)
!1884 = !DILocation(line: 273, column: 3, scope: !1834)
!1885 = !DILabel(scope: !1834, name: "process_input", file: !139, line: 314)
!1886 = !DILocation(line: 314, column: 2, scope: !1834)
!1887 = !DILocation(line: 316, column: 11, scope: !1834)
!1888 = !DILocation(line: 316, column: 3, scope: !1834)
!1889 = !DILocation(line: 319, column: 21, scope: !1890)
!1890 = distinct !DILexicalBlock(scope: !1834, file: !139, line: 317, column: 5)
!1891 = !DILocation(line: 320, column: 26, scope: !1890)
!1892 = !DILocation(line: 321, column: 7, scope: !1890)
!1893 = !DILocation(line: 323, column: 12, scope: !1894)
!1894 = distinct !DILexicalBlock(scope: !1890, file: !139, line: 323, column: 11)
!1895 = !DILocation(line: 323, column: 11, scope: !1890)
!1896 = !DILocation(line: 324, column: 9, scope: !1894)
!1897 = !DILocation(line: 324, column: 9, scope: !1898)
!1898 = distinct !DILexicalBlock(scope: !1899, file: !139, line: 324, column: 9)
!1899 = distinct !DILexicalBlock(scope: !1894, file: !139, line: 324, column: 9)
!1900 = !DILocation(line: 324, column: 9, scope: !1899)
!1901 = !DILocation(line: 325, column: 25, scope: !1890)
!1902 = !DILocation(line: 326, column: 20, scope: !1890)
!1903 = !DILocation(line: 327, column: 24, scope: !1890)
!1904 = !DILocation(line: 328, column: 7, scope: !1890)
!1905 = !DILocation(line: 331, column: 25, scope: !1890)
!1906 = !DILocation(line: 332, column: 26, scope: !1890)
!1907 = !DILocation(line: 333, column: 7, scope: !1890)
!1908 = !DILocation(line: 339, column: 13, scope: !1909)
!1909 = distinct !DILexicalBlock(scope: !1910, file: !139, line: 339, column: 13)
!1910 = distinct !DILexicalBlock(scope: !1890, file: !139, line: 338, column: 7)
!1911 = !DILocation(line: 339, column: 27, scope: !1909)
!1912 = !DILocation(line: 339, column: 13, scope: !1910)
!1913 = !DILocation(line: 362, column: 50, scope: !1914)
!1914 = distinct !DILexicalBlock(scope: !1909, file: !139, line: 340, column: 11)
!1915 = !DILocation(line: 362, column: 26, scope: !1914)
!1916 = !DILocation(line: 362, column: 24, scope: !1914)
!1917 = !DILocation(line: 363, column: 51, scope: !1914)
!1918 = !DILocation(line: 363, column: 27, scope: !1914)
!1919 = !DILocation(line: 363, column: 25, scope: !1914)
!1920 = !DILocation(line: 364, column: 11, scope: !1914)
!1921 = !DILocation(line: 365, column: 14, scope: !1922)
!1922 = distinct !DILexicalBlock(scope: !1910, file: !139, line: 365, column: 13)
!1923 = !DILocation(line: 365, column: 13, scope: !1910)
!1924 = !DILocation(line: 366, column: 31, scope: !1925)
!1925 = distinct !DILexicalBlock(scope: !1922, file: !139, line: 366, column: 11)
!1926 = !DILocation(line: 366, column: 29, scope: !1925)
!1927 = !DILocation(line: 366, column: 16, scope: !1925)
!1928 = !DILocation(line: 366, column: 44, scope: !1929)
!1929 = distinct !DILexicalBlock(scope: !1925, file: !139, line: 366, column: 11)
!1930 = !DILocation(line: 366, column: 43, scope: !1929)
!1931 = !DILocation(line: 366, column: 11, scope: !1925)
!1932 = !DILocation(line: 367, column: 13, scope: !1929)
!1933 = !DILocation(line: 367, column: 13, scope: !1934)
!1934 = distinct !DILexicalBlock(scope: !1935, file: !139, line: 367, column: 13)
!1935 = distinct !DILexicalBlock(scope: !1929, file: !139, line: 367, column: 13)
!1936 = !DILocation(line: 367, column: 13, scope: !1935)
!1937 = !DILocation(line: 366, column: 70, scope: !1929)
!1938 = !DILocation(line: 366, column: 11, scope: !1929)
!1939 = distinct !{!1939, !1931, !1940}
!1940 = !DILocation(line: 367, column: 13, scope: !1925)
!1941 = !DILocation(line: 368, column: 27, scope: !1910)
!1942 = !DILocation(line: 369, column: 24, scope: !1910)
!1943 = !DILocation(line: 369, column: 22, scope: !1910)
!1944 = !DILocation(line: 370, column: 36, scope: !1910)
!1945 = !DILocation(line: 370, column: 28, scope: !1910)
!1946 = !DILocation(line: 370, column: 26, scope: !1910)
!1947 = !DILocation(line: 372, column: 7, scope: !1890)
!1948 = !DILocation(line: 375, column: 25, scope: !1890)
!1949 = !DILocation(line: 376, column: 7, scope: !1890)
!1950 = !DILocation(line: 378, column: 26, scope: !1890)
!1951 = !DILocation(line: 379, column: 7, scope: !1890)
!1952 = !DILocation(line: 381, column: 12, scope: !1953)
!1953 = distinct !DILexicalBlock(scope: !1890, file: !139, line: 381, column: 11)
!1954 = !DILocation(line: 381, column: 11, scope: !1890)
!1955 = !DILocation(line: 382, column: 27, scope: !1953)
!1956 = !DILocation(line: 382, column: 9, scope: !1953)
!1957 = !DILocation(line: 383, column: 7, scope: !1890)
!1958 = !DILocation(line: 385, column: 21, scope: !1890)
!1959 = !DILocation(line: 386, column: 12, scope: !1960)
!1960 = distinct !DILexicalBlock(scope: !1890, file: !139, line: 386, column: 11)
!1961 = !DILocation(line: 386, column: 11, scope: !1890)
!1962 = !DILocation(line: 387, column: 9, scope: !1960)
!1963 = !DILocation(line: 387, column: 9, scope: !1964)
!1964 = distinct !DILexicalBlock(scope: !1965, file: !139, line: 387, column: 9)
!1965 = distinct !DILexicalBlock(scope: !1960, file: !139, line: 387, column: 9)
!1966 = !DILocation(line: 387, column: 9, scope: !1965)
!1967 = !DILocation(line: 388, column: 20, scope: !1890)
!1968 = !DILocation(line: 389, column: 24, scope: !1890)
!1969 = !DILocation(line: 390, column: 7, scope: !1890)
!1970 = !DILocation(line: 393, column: 26, scope: !1890)
!1971 = !DILocation(line: 394, column: 7, scope: !1890)
!1972 = !DILocation(line: 397, column: 7, scope: !1890)
!1973 = !DILocation(line: 400, column: 10, scope: !1974)
!1974 = distinct !DILexicalBlock(scope: !1834, file: !139, line: 400, column: 3)
!1975 = !DILocation(line: 400, column: 8, scope: !1974)
!1976 = !DILocation(line: 400, column: 19, scope: !1977)
!1977 = distinct !DILexicalBlock(scope: !1974, file: !139, line: 400, column: 3)
!1978 = !DILocation(line: 400, column: 27, scope: !1977)
!1979 = !DILocation(line: 400, column: 41, scope: !1977)
!1980 = !DILocation(line: 400, column: 45, scope: !1977)
!1981 = !DILocation(line: 400, column: 48, scope: !1977)
!1982 = !DILocation(line: 400, column: 58, scope: !1977)
!1983 = !DILocation(line: 400, column: 63, scope: !1977)
!1984 = !DILocation(line: 400, column: 60, scope: !1977)
!1985 = !DILocation(line: 400, column: 16, scope: !1977)
!1986 = !DILocation(line: 400, column: 3, scope: !1974)
!1987 = !DILocalVariable(name: "c", scope: !1988, file: !139, line: 402, type: !240)
!1988 = distinct !DILexicalBlock(scope: !1977, file: !139, line: 401, column: 5)
!1989 = !DILocation(line: 402, column: 21, scope: !1988)
!1990 = !DILocalVariable(name: "esc", scope: !1988, file: !139, line: 403, type: !240)
!1991 = !DILocation(line: 403, column: 21, scope: !1988)
!1992 = !DILocalVariable(name: "is_right_quote", scope: !1988, file: !139, line: 404, type: !27)
!1993 = !DILocation(line: 404, column: 12, scope: !1988)
!1994 = !DILocalVariable(name: "escaping", scope: !1988, file: !139, line: 405, type: !27)
!1995 = !DILocation(line: 405, column: 12, scope: !1988)
!1996 = !DILocalVariable(name: "c_and_shell_quote_compat", scope: !1988, file: !139, line: 406, type: !27)
!1997 = !DILocation(line: 406, column: 12, scope: !1988)
!1998 = !DILocation(line: 408, column: 11, scope: !1999)
!1999 = distinct !DILexicalBlock(scope: !1988, file: !139, line: 408, column: 11)
!2000 = !DILocation(line: 409, column: 11, scope: !1999)
!2001 = !DILocation(line: 409, column: 14, scope: !1999)
!2002 = !DILocation(line: 409, column: 28, scope: !1999)
!2003 = !DILocation(line: 410, column: 11, scope: !1999)
!2004 = !DILocation(line: 410, column: 14, scope: !1999)
!2005 = !DILocation(line: 411, column: 11, scope: !1999)
!2006 = !DILocation(line: 411, column: 15, scope: !1999)
!2007 = !DILocation(line: 411, column: 19, scope: !1999)
!2008 = !DILocation(line: 411, column: 17, scope: !1999)
!2009 = !DILocation(line: 412, column: 19, scope: !1999)
!2010 = !DILocation(line: 412, column: 27, scope: !1999)
!2011 = !DILocation(line: 412, column: 39, scope: !1999)
!2012 = !DILocation(line: 412, column: 46, scope: !1999)
!2013 = !DILocation(line: 412, column: 44, scope: !1999)
!2014 = !DILocation(line: 416, column: 40, scope: !1999)
!2015 = !DILocation(line: 416, column: 32, scope: !1999)
!2016 = !DILocation(line: 416, column: 30, scope: !1999)
!2017 = !DILocation(line: 416, column: 48, scope: !1999)
!2018 = !DILocation(line: 412, column: 15, scope: !1999)
!2019 = !DILocation(line: 417, column: 11, scope: !1999)
!2020 = !DILocation(line: 417, column: 22, scope: !1999)
!2021 = !DILocation(line: 417, column: 28, scope: !1999)
!2022 = !DILocation(line: 417, column: 26, scope: !1999)
!2023 = !DILocation(line: 417, column: 31, scope: !1999)
!2024 = !DILocation(line: 417, column: 45, scope: !1999)
!2025 = !DILocation(line: 417, column: 14, scope: !1999)
!2026 = !DILocation(line: 417, column: 63, scope: !1999)
!2027 = !DILocation(line: 408, column: 11, scope: !1988)
!2028 = !DILocation(line: 419, column: 15, scope: !2029)
!2029 = distinct !DILexicalBlock(scope: !2030, file: !139, line: 419, column: 15)
!2030 = distinct !DILexicalBlock(scope: !1999, file: !139, line: 418, column: 9)
!2031 = !DILocation(line: 419, column: 15, scope: !2030)
!2032 = !DILocation(line: 420, column: 13, scope: !2029)
!2033 = !DILocation(line: 421, column: 26, scope: !2030)
!2034 = !DILocation(line: 422, column: 9, scope: !2030)
!2035 = !DILocation(line: 424, column: 11, scope: !1988)
!2036 = !DILocation(line: 424, column: 15, scope: !1988)
!2037 = !DILocation(line: 424, column: 9, scope: !1988)
!2038 = !DILocation(line: 425, column: 15, scope: !1988)
!2039 = !DILocation(line: 425, column: 7, scope: !1988)
!2040 = !DILocation(line: 428, column: 15, scope: !2041)
!2041 = distinct !DILexicalBlock(scope: !2042, file: !139, line: 428, column: 15)
!2042 = distinct !DILexicalBlock(scope: !1988, file: !139, line: 426, column: 9)
!2043 = !DILocation(line: 428, column: 15, scope: !2042)
!2044 = !DILocation(line: 430, column: 15, scope: !2045)
!2045 = distinct !DILexicalBlock(scope: !2041, file: !139, line: 429, column: 13)
!2046 = !DILocation(line: 430, column: 15, scope: !2047)
!2047 = distinct !DILexicalBlock(scope: !2048, file: !139, line: 430, column: 15)
!2048 = distinct !DILexicalBlock(scope: !2045, file: !139, line: 430, column: 15)
!2049 = !DILocation(line: 430, column: 15, scope: !2048)
!2050 = !DILocation(line: 430, column: 15, scope: !2051)
!2051 = distinct !DILexicalBlock(scope: !2048, file: !139, line: 430, column: 15)
!2052 = !DILocation(line: 430, column: 15, scope: !2053)
!2053 = distinct !DILexicalBlock(scope: !2051, file: !139, line: 430, column: 15)
!2054 = !DILocation(line: 430, column: 15, scope: !2055)
!2055 = distinct !DILexicalBlock(scope: !2056, file: !139, line: 430, column: 15)
!2056 = distinct !DILexicalBlock(scope: !2053, file: !139, line: 430, column: 15)
!2057 = !DILocation(line: 430, column: 15, scope: !2056)
!2058 = !DILocation(line: 430, column: 15, scope: !2059)
!2059 = distinct !DILexicalBlock(scope: !2060, file: !139, line: 430, column: 15)
!2060 = distinct !DILexicalBlock(scope: !2053, file: !139, line: 430, column: 15)
!2061 = !DILocation(line: 430, column: 15, scope: !2060)
!2062 = !DILocation(line: 430, column: 15, scope: !2063)
!2063 = distinct !DILexicalBlock(scope: !2064, file: !139, line: 430, column: 15)
!2064 = distinct !DILexicalBlock(scope: !2053, file: !139, line: 430, column: 15)
!2065 = !DILocation(line: 430, column: 15, scope: !2064)
!2066 = !DILocation(line: 430, column: 15, scope: !2067)
!2067 = distinct !DILexicalBlock(scope: !2068, file: !139, line: 430, column: 15)
!2068 = distinct !DILexicalBlock(scope: !2048, file: !139, line: 430, column: 15)
!2069 = !DILocation(line: 430, column: 15, scope: !2068)
!2070 = !DILocation(line: 437, column: 19, scope: !2071)
!2071 = distinct !DILexicalBlock(scope: !2045, file: !139, line: 437, column: 19)
!2072 = !DILocation(line: 437, column: 33, scope: !2071)
!2073 = !DILocation(line: 438, column: 19, scope: !2071)
!2074 = !DILocation(line: 438, column: 22, scope: !2071)
!2075 = !DILocation(line: 438, column: 24, scope: !2071)
!2076 = !DILocation(line: 438, column: 30, scope: !2071)
!2077 = !DILocation(line: 438, column: 28, scope: !2071)
!2078 = !DILocation(line: 438, column: 38, scope: !2071)
!2079 = !DILocation(line: 438, column: 48, scope: !2071)
!2080 = !DILocation(line: 438, column: 52, scope: !2071)
!2081 = !DILocation(line: 438, column: 54, scope: !2071)
!2082 = !DILocation(line: 438, column: 45, scope: !2071)
!2083 = !DILocation(line: 438, column: 59, scope: !2071)
!2084 = !DILocation(line: 438, column: 62, scope: !2071)
!2085 = !DILocation(line: 438, column: 66, scope: !2071)
!2086 = !DILocation(line: 438, column: 68, scope: !2071)
!2087 = !DILocation(line: 438, column: 73, scope: !2071)
!2088 = !DILocation(line: 437, column: 19, scope: !2045)
!2089 = !DILocation(line: 440, column: 19, scope: !2090)
!2090 = distinct !DILexicalBlock(scope: !2071, file: !139, line: 439, column: 17)
!2091 = !DILocation(line: 440, column: 19, scope: !2092)
!2092 = distinct !DILexicalBlock(scope: !2093, file: !139, line: 440, column: 19)
!2093 = distinct !DILexicalBlock(scope: !2090, file: !139, line: 440, column: 19)
!2094 = !DILocation(line: 440, column: 19, scope: !2093)
!2095 = !DILocation(line: 441, column: 19, scope: !2090)
!2096 = !DILocation(line: 441, column: 19, scope: !2097)
!2097 = distinct !DILexicalBlock(scope: !2098, file: !139, line: 441, column: 19)
!2098 = distinct !DILexicalBlock(scope: !2090, file: !139, line: 441, column: 19)
!2099 = !DILocation(line: 441, column: 19, scope: !2098)
!2100 = !DILocation(line: 442, column: 17, scope: !2090)
!2101 = !DILocation(line: 443, column: 17, scope: !2045)
!2102 = !DILocation(line: 448, column: 13, scope: !2045)
!2103 = !DILocation(line: 449, column: 20, scope: !2104)
!2104 = distinct !DILexicalBlock(scope: !2041, file: !139, line: 449, column: 20)
!2105 = !DILocation(line: 449, column: 26, scope: !2104)
!2106 = !DILocation(line: 449, column: 20, scope: !2041)
!2107 = !DILocation(line: 450, column: 13, scope: !2104)
!2108 = !DILocation(line: 451, column: 11, scope: !2042)
!2109 = !DILocation(line: 454, column: 19, scope: !2042)
!2110 = !DILocation(line: 454, column: 11, scope: !2042)
!2111 = !DILocation(line: 457, column: 19, scope: !2112)
!2112 = distinct !DILexicalBlock(scope: !2113, file: !139, line: 457, column: 19)
!2113 = distinct !DILexicalBlock(scope: !2042, file: !139, line: 455, column: 13)
!2114 = !DILocation(line: 457, column: 19, scope: !2113)
!2115 = !DILocation(line: 458, column: 17, scope: !2112)
!2116 = !DILocation(line: 459, column: 15, scope: !2113)
!2117 = !DILocation(line: 462, column: 20, scope: !2118)
!2118 = distinct !DILexicalBlock(scope: !2113, file: !139, line: 462, column: 19)
!2119 = !DILocation(line: 462, column: 26, scope: !2118)
!2120 = !DILocation(line: 463, column: 19, scope: !2118)
!2121 = !DILocation(line: 463, column: 22, scope: !2118)
!2122 = !DILocation(line: 463, column: 24, scope: !2118)
!2123 = !DILocation(line: 463, column: 30, scope: !2118)
!2124 = !DILocation(line: 463, column: 28, scope: !2118)
!2125 = !DILocation(line: 463, column: 38, scope: !2118)
!2126 = !DILocation(line: 463, column: 41, scope: !2118)
!2127 = !DILocation(line: 463, column: 45, scope: !2118)
!2128 = !DILocation(line: 463, column: 47, scope: !2118)
!2129 = !DILocation(line: 463, column: 52, scope: !2118)
!2130 = !DILocation(line: 462, column: 19, scope: !2113)
!2131 = !DILocation(line: 464, column: 25, scope: !2118)
!2132 = !DILocation(line: 464, column: 29, scope: !2118)
!2133 = !DILocation(line: 464, column: 31, scope: !2118)
!2134 = !DILocation(line: 464, column: 17, scope: !2118)
!2135 = !DILocation(line: 471, column: 25, scope: !2136)
!2136 = distinct !DILexicalBlock(scope: !2137, file: !139, line: 471, column: 25)
!2137 = distinct !DILexicalBlock(scope: !2118, file: !139, line: 465, column: 19)
!2138 = !DILocation(line: 471, column: 25, scope: !2137)
!2139 = !DILocation(line: 472, column: 23, scope: !2136)
!2140 = !DILocation(line: 473, column: 25, scope: !2137)
!2141 = !DILocation(line: 473, column: 29, scope: !2137)
!2142 = !DILocation(line: 473, column: 31, scope: !2137)
!2143 = !DILocation(line: 473, column: 23, scope: !2137)
!2144 = !DILocation(line: 474, column: 23, scope: !2137)
!2145 = !DILocation(line: 475, column: 21, scope: !2137)
!2146 = !DILocation(line: 475, column: 21, scope: !2147)
!2147 = distinct !DILexicalBlock(scope: !2148, file: !139, line: 475, column: 21)
!2148 = distinct !DILexicalBlock(scope: !2137, file: !139, line: 475, column: 21)
!2149 = !DILocation(line: 475, column: 21, scope: !2148)
!2150 = !DILocation(line: 476, column: 21, scope: !2137)
!2151 = !DILocation(line: 476, column: 21, scope: !2152)
!2152 = distinct !DILexicalBlock(scope: !2153, file: !139, line: 476, column: 21)
!2153 = distinct !DILexicalBlock(scope: !2137, file: !139, line: 476, column: 21)
!2154 = !DILocation(line: 476, column: 21, scope: !2153)
!2155 = !DILocation(line: 477, column: 21, scope: !2137)
!2156 = !DILocation(line: 477, column: 21, scope: !2157)
!2157 = distinct !DILexicalBlock(scope: !2158, file: !139, line: 477, column: 21)
!2158 = distinct !DILexicalBlock(scope: !2137, file: !139, line: 477, column: 21)
!2159 = !DILocation(line: 477, column: 21, scope: !2158)
!2160 = !DILocation(line: 478, column: 21, scope: !2137)
!2161 = !DILocation(line: 478, column: 21, scope: !2162)
!2162 = distinct !DILexicalBlock(scope: !2163, file: !139, line: 478, column: 21)
!2163 = distinct !DILexicalBlock(scope: !2137, file: !139, line: 478, column: 21)
!2164 = !DILocation(line: 478, column: 21, scope: !2163)
!2165 = !DILocation(line: 479, column: 21, scope: !2137)
!2166 = !DILocation(line: 482, column: 21, scope: !2137)
!2167 = !DILocation(line: 483, column: 19, scope: !2137)
!2168 = !DILocation(line: 484, column: 15, scope: !2113)
!2169 = !DILocation(line: 487, column: 15, scope: !2113)
!2170 = !DILocation(line: 489, column: 11, scope: !2042)
!2171 = !DILocation(line: 491, column: 24, scope: !2042)
!2172 = !DILocation(line: 491, column: 31, scope: !2042)
!2173 = !DILocation(line: 492, column: 24, scope: !2042)
!2174 = !DILocation(line: 492, column: 31, scope: !2042)
!2175 = !DILocation(line: 493, column: 24, scope: !2042)
!2176 = !DILocation(line: 493, column: 31, scope: !2042)
!2177 = !DILocation(line: 494, column: 24, scope: !2042)
!2178 = !DILocation(line: 494, column: 31, scope: !2042)
!2179 = !DILocation(line: 495, column: 24, scope: !2042)
!2180 = !DILocation(line: 495, column: 31, scope: !2042)
!2181 = !DILocation(line: 496, column: 24, scope: !2042)
!2182 = !DILocation(line: 496, column: 31, scope: !2042)
!2183 = !DILocation(line: 497, column: 24, scope: !2042)
!2184 = !DILocation(line: 497, column: 31, scope: !2042)
!2185 = !DILocation(line: 498, column: 26, scope: !2042)
!2186 = !DILocation(line: 498, column: 24, scope: !2042)
!2187 = !DILocation(line: 500, column: 15, scope: !2188)
!2188 = distinct !DILexicalBlock(scope: !2042, file: !139, line: 500, column: 15)
!2189 = !DILocation(line: 500, column: 29, scope: !2188)
!2190 = !DILocation(line: 500, column: 15, scope: !2042)
!2191 = !DILocation(line: 502, column: 19, scope: !2192)
!2192 = distinct !DILexicalBlock(scope: !2193, file: !139, line: 502, column: 19)
!2193 = distinct !DILexicalBlock(scope: !2188, file: !139, line: 501, column: 13)
!2194 = !DILocation(line: 502, column: 19, scope: !2193)
!2195 = !DILocation(line: 503, column: 17, scope: !2192)
!2196 = !DILocation(line: 504, column: 15, scope: !2193)
!2197 = !DILocation(line: 509, column: 15, scope: !2198)
!2198 = distinct !DILexicalBlock(scope: !2042, file: !139, line: 509, column: 15)
!2199 = !DILocation(line: 509, column: 33, scope: !2198)
!2200 = !DILocation(line: 509, column: 36, scope: !2198)
!2201 = !DILocation(line: 509, column: 55, scope: !2198)
!2202 = !DILocation(line: 509, column: 58, scope: !2198)
!2203 = !DILocation(line: 509, column: 15, scope: !2042)
!2204 = !DILocation(line: 510, column: 13, scope: !2198)
!2205 = !DILabel(scope: !2042, name: "c_and_shell_escape", file: !139, line: 512)
!2206 = !DILocation(line: 512, column: 9, scope: !2042)
!2207 = !DILocation(line: 513, column: 15, scope: !2208)
!2208 = distinct !DILexicalBlock(scope: !2042, file: !139, line: 513, column: 15)
!2209 = !DILocation(line: 513, column: 29, scope: !2208)
!2210 = !DILocation(line: 514, column: 15, scope: !2208)
!2211 = !DILocation(line: 514, column: 18, scope: !2208)
!2212 = !DILocation(line: 513, column: 15, scope: !2042)
!2213 = !DILocation(line: 515, column: 13, scope: !2208)
!2214 = !DILabel(scope: !2042, name: "c_escape", file: !139, line: 517)
!2215 = !DILocation(line: 517, column: 9, scope: !2042)
!2216 = !DILocation(line: 518, column: 15, scope: !2217)
!2217 = distinct !DILexicalBlock(scope: !2042, file: !139, line: 518, column: 15)
!2218 = !DILocation(line: 518, column: 15, scope: !2042)
!2219 = !DILocation(line: 520, column: 19, scope: !2220)
!2220 = distinct !DILexicalBlock(scope: !2217, file: !139, line: 519, column: 13)
!2221 = !DILocation(line: 520, column: 17, scope: !2220)
!2222 = !DILocation(line: 521, column: 15, scope: !2220)
!2223 = !DILocation(line: 523, column: 11, scope: !2042)
!2224 = !DILocation(line: 526, column: 18, scope: !2225)
!2225 = distinct !DILexicalBlock(scope: !2042, file: !139, line: 526, column: 15)
!2226 = !DILocation(line: 526, column: 26, scope: !2225)
!2227 = !DILocation(line: 526, column: 15, scope: !2042)
!2228 = !DILocation(line: 526, column: 40, scope: !2225)
!2229 = !DILocation(line: 526, column: 47, scope: !2225)
!2230 = !DILocation(line: 526, column: 57, scope: !2225)
!2231 = !DILocation(line: 526, column: 65, scope: !2225)
!2232 = !DILocation(line: 527, column: 13, scope: !2225)
!2233 = !DILocation(line: 528, column: 11, scope: !2042)
!2234 = !DILocation(line: 530, column: 15, scope: !2235)
!2235 = distinct !DILexicalBlock(scope: !2042, file: !139, line: 530, column: 15)
!2236 = !DILocation(line: 530, column: 17, scope: !2235)
!2237 = !DILocation(line: 530, column: 15, scope: !2042)
!2238 = !DILocation(line: 531, column: 13, scope: !2235)
!2239 = !DILocation(line: 532, column: 11, scope: !2042)
!2240 = !DILocation(line: 534, column: 36, scope: !2042)
!2241 = !DILocation(line: 535, column: 11, scope: !2042)
!2242 = !DILocation(line: 548, column: 15, scope: !2243)
!2243 = distinct !DILexicalBlock(scope: !2042, file: !139, line: 548, column: 15)
!2244 = !DILocation(line: 548, column: 29, scope: !2243)
!2245 = !DILocation(line: 549, column: 15, scope: !2243)
!2246 = !DILocation(line: 549, column: 18, scope: !2243)
!2247 = !DILocation(line: 548, column: 15, scope: !2042)
!2248 = !DILocation(line: 550, column: 13, scope: !2243)
!2249 = !DILocation(line: 551, column: 11, scope: !2042)
!2250 = !DILocation(line: 554, column: 36, scope: !2042)
!2251 = !DILocation(line: 555, column: 36, scope: !2042)
!2252 = !DILocation(line: 556, column: 15, scope: !2253)
!2253 = distinct !DILexicalBlock(scope: !2042, file: !139, line: 556, column: 15)
!2254 = !DILocation(line: 556, column: 29, scope: !2253)
!2255 = !DILocation(line: 556, column: 15, scope: !2042)
!2256 = !DILocation(line: 558, column: 19, scope: !2257)
!2257 = distinct !DILexicalBlock(scope: !2258, file: !139, line: 558, column: 19)
!2258 = distinct !DILexicalBlock(scope: !2253, file: !139, line: 557, column: 13)
!2259 = !DILocation(line: 558, column: 19, scope: !2258)
!2260 = !DILocation(line: 559, column: 17, scope: !2257)
!2261 = !DILocation(line: 561, column: 19, scope: !2262)
!2262 = distinct !DILexicalBlock(scope: !2258, file: !139, line: 561, column: 19)
!2263 = !DILocation(line: 561, column: 30, scope: !2262)
!2264 = !DILocation(line: 561, column: 35, scope: !2262)
!2265 = !DILocation(line: 561, column: 19, scope: !2258)
!2266 = !DILocation(line: 566, column: 37, scope: !2267)
!2267 = distinct !DILexicalBlock(scope: !2262, file: !139, line: 562, column: 17)
!2268 = !DILocation(line: 566, column: 35, scope: !2267)
!2269 = !DILocation(line: 567, column: 30, scope: !2267)
!2270 = !DILocation(line: 568, column: 17, scope: !2267)
!2271 = !DILocation(line: 570, column: 15, scope: !2258)
!2272 = !DILocation(line: 570, column: 15, scope: !2273)
!2273 = distinct !DILexicalBlock(scope: !2274, file: !139, line: 570, column: 15)
!2274 = distinct !DILexicalBlock(scope: !2258, file: !139, line: 570, column: 15)
!2275 = !DILocation(line: 570, column: 15, scope: !2274)
!2276 = !DILocation(line: 571, column: 15, scope: !2258)
!2277 = !DILocation(line: 571, column: 15, scope: !2278)
!2278 = distinct !DILexicalBlock(scope: !2279, file: !139, line: 571, column: 15)
!2279 = distinct !DILexicalBlock(scope: !2258, file: !139, line: 571, column: 15)
!2280 = !DILocation(line: 571, column: 15, scope: !2279)
!2281 = !DILocation(line: 572, column: 15, scope: !2258)
!2282 = !DILocation(line: 572, column: 15, scope: !2283)
!2283 = distinct !DILexicalBlock(scope: !2284, file: !139, line: 572, column: 15)
!2284 = distinct !DILexicalBlock(scope: !2258, file: !139, line: 572, column: 15)
!2285 = !DILocation(line: 572, column: 15, scope: !2284)
!2286 = !DILocation(line: 573, column: 40, scope: !2258)
!2287 = !DILocation(line: 574, column: 13, scope: !2258)
!2288 = !DILocation(line: 575, column: 11, scope: !2042)
!2289 = !DILocation(line: 599, column: 36, scope: !2042)
!2290 = !DILocation(line: 600, column: 11, scope: !2042)
!2291 = !DILocalVariable(name: "m", scope: !2292, file: !139, line: 610, type: !134)
!2292 = distinct !DILexicalBlock(scope: !2042, file: !139, line: 608, column: 11)
!2293 = !DILocation(line: 610, column: 20, scope: !2292)
!2294 = !DILocalVariable(name: "printable", scope: !2292, file: !139, line: 612, type: !27)
!2295 = !DILocation(line: 612, column: 18, scope: !2292)
!2296 = !DILocation(line: 614, column: 17, scope: !2297)
!2297 = distinct !DILexicalBlock(scope: !2292, file: !139, line: 614, column: 17)
!2298 = !DILocation(line: 614, column: 17, scope: !2292)
!2299 = !DILocation(line: 616, column: 19, scope: !2300)
!2300 = distinct !DILexicalBlock(scope: !2297, file: !139, line: 615, column: 15)
!2301 = !DILocation(line: 617, column: 29, scope: !2300)
!2302 = !DILocation(line: 617, column: 41, scope: !2300)
!2303 = !DILocation(line: 617, column: 27, scope: !2300)
!2304 = !DILocation(line: 618, column: 15, scope: !2300)
!2305 = !DILocalVariable(name: "mbstate", scope: !2306, file: !139, line: 621, type: !2307)
!2306 = distinct !DILexicalBlock(scope: !2297, file: !139, line: 620, column: 15)
!2307 = !DIDerivedType(tag: DW_TAG_typedef, name: "mbstate_t", file: !2308, line: 6, baseType: !2309)
!2308 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/mbstate_t.h", directory: "")
!2309 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mbstate_t", file: !2310, line: 21, baseType: !2311)
!2310 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h", directory: "")
!2311 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2310, line: 13, size: 64, elements: !2312)
!2312 = !{!2313, !2314}
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !2311, file: !2310, line: 15, baseType: !72, size: 32)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !2311, file: !2310, line: 20, baseType: !2315, size: 32, offset: 32)
!2315 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2311, file: !2310, line: 16, size: 32, elements: !2316)
!2316 = !{!2317, !2318}
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !2315, file: !2310, line: 18, baseType: !16, size: 32)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !2315, file: !2310, line: 19, baseType: !2319, size: 32)
!2319 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 32, elements: !2320)
!2320 = !{!2321}
!2321 = !DISubrange(count: 4)
!2322 = !DILocation(line: 621, column: 27, scope: !2306)
!2323 = !DILocation(line: 622, column: 17, scope: !2306)
!2324 = !DILocation(line: 624, column: 19, scope: !2306)
!2325 = !DILocation(line: 625, column: 27, scope: !2306)
!2326 = !DILocation(line: 626, column: 21, scope: !2327)
!2327 = distinct !DILexicalBlock(scope: !2306, file: !139, line: 626, column: 21)
!2328 = !DILocation(line: 626, column: 29, scope: !2327)
!2329 = !DILocation(line: 626, column: 21, scope: !2306)
!2330 = !DILocation(line: 627, column: 37, scope: !2327)
!2331 = !DILocation(line: 627, column: 29, scope: !2327)
!2332 = !DILocation(line: 627, column: 27, scope: !2327)
!2333 = !DILocation(line: 627, column: 19, scope: !2327)
!2334 = !DILocation(line: 629, column: 17, scope: !2306)
!2335 = !DILocalVariable(name: "w", scope: !2336, file: !139, line: 631, type: !2337)
!2336 = distinct !DILexicalBlock(scope: !2306, file: !139, line: 630, column: 19)
!2337 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !135, line: 74, baseType: !72)
!2338 = !DILocation(line: 631, column: 29, scope: !2336)
!2339 = !DILocalVariable(name: "bytes", scope: !2336, file: !139, line: 632, type: !134)
!2340 = !DILocation(line: 632, column: 28, scope: !2336)
!2341 = !DILocation(line: 632, column: 50, scope: !2336)
!2342 = !DILocation(line: 632, column: 54, scope: !2336)
!2343 = !DILocation(line: 632, column: 58, scope: !2336)
!2344 = !DILocation(line: 632, column: 56, scope: !2336)
!2345 = !DILocation(line: 633, column: 45, scope: !2336)
!2346 = !DILocation(line: 633, column: 56, scope: !2336)
!2347 = !DILocation(line: 633, column: 60, scope: !2336)
!2348 = !DILocation(line: 633, column: 58, scope: !2336)
!2349 = !DILocation(line: 633, column: 53, scope: !2336)
!2350 = !DILocation(line: 632, column: 36, scope: !2336)
!2351 = !DILocation(line: 634, column: 25, scope: !2352)
!2352 = distinct !DILexicalBlock(scope: !2336, file: !139, line: 634, column: 25)
!2353 = !DILocation(line: 634, column: 31, scope: !2352)
!2354 = !DILocation(line: 634, column: 25, scope: !2336)
!2355 = !DILocation(line: 635, column: 23, scope: !2352)
!2356 = !DILocation(line: 636, column: 30, scope: !2357)
!2357 = distinct !DILexicalBlock(scope: !2352, file: !139, line: 636, column: 30)
!2358 = !DILocation(line: 636, column: 36, scope: !2357)
!2359 = !DILocation(line: 636, column: 30, scope: !2352)
!2360 = !DILocation(line: 638, column: 35, scope: !2361)
!2361 = distinct !DILexicalBlock(scope: !2357, file: !139, line: 637, column: 23)
!2362 = !DILocation(line: 639, column: 25, scope: !2361)
!2363 = !DILocation(line: 641, column: 30, scope: !2364)
!2364 = distinct !DILexicalBlock(scope: !2357, file: !139, line: 641, column: 30)
!2365 = !DILocation(line: 641, column: 36, scope: !2364)
!2366 = !DILocation(line: 641, column: 30, scope: !2357)
!2367 = !DILocation(line: 643, column: 35, scope: !2368)
!2368 = distinct !DILexicalBlock(scope: !2364, file: !139, line: 642, column: 23)
!2369 = !DILocation(line: 644, column: 25, scope: !2368)
!2370 = !DILocation(line: 644, column: 32, scope: !2368)
!2371 = !DILocation(line: 644, column: 36, scope: !2368)
!2372 = !DILocation(line: 644, column: 34, scope: !2368)
!2373 = !DILocation(line: 644, column: 40, scope: !2368)
!2374 = !DILocation(line: 644, column: 38, scope: !2368)
!2375 = !DILocation(line: 644, column: 48, scope: !2368)
!2376 = !DILocation(line: 644, column: 51, scope: !2368)
!2377 = !DILocation(line: 644, column: 55, scope: !2368)
!2378 = !DILocation(line: 644, column: 59, scope: !2368)
!2379 = !DILocation(line: 644, column: 57, scope: !2368)
!2380 = !DILocation(line: 0, scope: !2368)
!2381 = !DILocation(line: 645, column: 28, scope: !2368)
!2382 = distinct !{!2382, !2369, !2381}
!2383 = !DILocation(line: 646, column: 25, scope: !2368)
!2384 = !DILocation(line: 654, column: 44, scope: !2385)
!2385 = distinct !DILexicalBlock(scope: !2386, file: !139, line: 654, column: 29)
!2386 = distinct !DILexicalBlock(scope: !2364, file: !139, line: 649, column: 23)
!2387 = !DILocation(line: 655, column: 29, scope: !2385)
!2388 = !DILocation(line: 655, column: 32, scope: !2385)
!2389 = !DILocation(line: 655, column: 46, scope: !2385)
!2390 = !DILocation(line: 654, column: 29, scope: !2386)
!2391 = !DILocalVariable(name: "j", scope: !2392, file: !139, line: 657, type: !134)
!2392 = distinct !DILexicalBlock(scope: !2385, file: !139, line: 656, column: 27)
!2393 = !DILocation(line: 657, column: 36, scope: !2392)
!2394 = !DILocation(line: 658, column: 36, scope: !2395)
!2395 = distinct !DILexicalBlock(scope: !2392, file: !139, line: 658, column: 29)
!2396 = !DILocation(line: 658, column: 34, scope: !2395)
!2397 = !DILocation(line: 658, column: 41, scope: !2398)
!2398 = distinct !DILexicalBlock(scope: !2395, file: !139, line: 658, column: 29)
!2399 = !DILocation(line: 658, column: 45, scope: !2398)
!2400 = !DILocation(line: 658, column: 43, scope: !2398)
!2401 = !DILocation(line: 658, column: 29, scope: !2395)
!2402 = !DILocation(line: 659, column: 39, scope: !2398)
!2403 = !DILocation(line: 659, column: 43, scope: !2398)
!2404 = !DILocation(line: 659, column: 47, scope: !2398)
!2405 = !DILocation(line: 659, column: 45, scope: !2398)
!2406 = !DILocation(line: 659, column: 51, scope: !2398)
!2407 = !DILocation(line: 659, column: 49, scope: !2398)
!2408 = !DILocation(line: 659, column: 31, scope: !2398)
!2409 = !DILocation(line: 663, column: 35, scope: !2410)
!2410 = distinct !DILexicalBlock(scope: !2398, file: !139, line: 660, column: 33)
!2411 = !DILocation(line: 666, column: 35, scope: !2410)
!2412 = !DILocation(line: 667, column: 33, scope: !2410)
!2413 = !DILocation(line: 658, column: 53, scope: !2398)
!2414 = !DILocation(line: 658, column: 29, scope: !2398)
!2415 = distinct !{!2415, !2401, !2416}
!2416 = !DILocation(line: 667, column: 33, scope: !2395)
!2417 = !DILocation(line: 668, column: 27, scope: !2392)
!2418 = !DILocation(line: 670, column: 41, scope: !2419)
!2419 = distinct !DILexicalBlock(scope: !2386, file: !139, line: 670, column: 29)
!2420 = !DILocation(line: 670, column: 31, scope: !2419)
!2421 = !DILocation(line: 670, column: 29, scope: !2386)
!2422 = !DILocation(line: 671, column: 37, scope: !2419)
!2423 = !DILocation(line: 671, column: 27, scope: !2419)
!2424 = !DILocation(line: 672, column: 30, scope: !2386)
!2425 = !DILocation(line: 672, column: 27, scope: !2386)
!2426 = !DILocation(line: 674, column: 19, scope: !2336)
!2427 = !DILocation(line: 675, column: 26, scope: !2306)
!2428 = !DILocation(line: 675, column: 24, scope: !2306)
!2429 = distinct !{!2429, !2334, !2430}
!2430 = !DILocation(line: 675, column: 44, scope: !2306)
!2431 = !DILocation(line: 678, column: 40, scope: !2292)
!2432 = !DILocation(line: 678, column: 38, scope: !2292)
!2433 = !DILocation(line: 680, column: 21, scope: !2434)
!2434 = distinct !DILexicalBlock(scope: !2292, file: !139, line: 680, column: 17)
!2435 = !DILocation(line: 680, column: 19, scope: !2434)
!2436 = !DILocation(line: 680, column: 23, scope: !2434)
!2437 = !DILocation(line: 680, column: 27, scope: !2434)
!2438 = !DILocation(line: 680, column: 45, scope: !2434)
!2439 = !DILocation(line: 680, column: 50, scope: !2434)
!2440 = !DILocation(line: 680, column: 17, scope: !2292)
!2441 = !DILocalVariable(name: "ilim", scope: !2442, file: !139, line: 684, type: !134)
!2442 = distinct !DILexicalBlock(scope: !2434, file: !139, line: 681, column: 15)
!2443 = !DILocation(line: 684, column: 24, scope: !2442)
!2444 = !DILocation(line: 684, column: 31, scope: !2442)
!2445 = !DILocation(line: 684, column: 35, scope: !2442)
!2446 = !DILocation(line: 684, column: 33, scope: !2442)
!2447 = !DILocation(line: 686, column: 17, scope: !2442)
!2448 = !DILocation(line: 688, column: 25, scope: !2449)
!2449 = distinct !DILexicalBlock(scope: !2450, file: !139, line: 688, column: 25)
!2450 = distinct !DILexicalBlock(scope: !2451, file: !139, line: 687, column: 19)
!2451 = distinct !DILexicalBlock(scope: !2452, file: !139, line: 686, column: 17)
!2452 = distinct !DILexicalBlock(scope: !2442, file: !139, line: 686, column: 17)
!2453 = !DILocation(line: 688, column: 43, scope: !2449)
!2454 = !DILocation(line: 688, column: 48, scope: !2449)
!2455 = !DILocation(line: 688, column: 25, scope: !2450)
!2456 = !DILocation(line: 690, column: 25, scope: !2457)
!2457 = distinct !DILexicalBlock(scope: !2449, file: !139, line: 689, column: 23)
!2458 = !DILocation(line: 690, column: 25, scope: !2459)
!2459 = distinct !DILexicalBlock(scope: !2460, file: !139, line: 690, column: 25)
!2460 = distinct !DILexicalBlock(scope: !2457, file: !139, line: 690, column: 25)
!2461 = !DILocation(line: 690, column: 25, scope: !2460)
!2462 = !DILocation(line: 690, column: 25, scope: !2463)
!2463 = distinct !DILexicalBlock(scope: !2460, file: !139, line: 690, column: 25)
!2464 = !DILocation(line: 690, column: 25, scope: !2465)
!2465 = distinct !DILexicalBlock(scope: !2463, file: !139, line: 690, column: 25)
!2466 = !DILocation(line: 690, column: 25, scope: !2467)
!2467 = distinct !DILexicalBlock(scope: !2468, file: !139, line: 690, column: 25)
!2468 = distinct !DILexicalBlock(scope: !2465, file: !139, line: 690, column: 25)
!2469 = !DILocation(line: 690, column: 25, scope: !2468)
!2470 = !DILocation(line: 690, column: 25, scope: !2471)
!2471 = distinct !DILexicalBlock(scope: !2472, file: !139, line: 690, column: 25)
!2472 = distinct !DILexicalBlock(scope: !2465, file: !139, line: 690, column: 25)
!2473 = !DILocation(line: 690, column: 25, scope: !2472)
!2474 = !DILocation(line: 690, column: 25, scope: !2475)
!2475 = distinct !DILexicalBlock(scope: !2476, file: !139, line: 690, column: 25)
!2476 = distinct !DILexicalBlock(scope: !2465, file: !139, line: 690, column: 25)
!2477 = !DILocation(line: 690, column: 25, scope: !2476)
!2478 = !DILocation(line: 690, column: 25, scope: !2479)
!2479 = distinct !DILexicalBlock(scope: !2480, file: !139, line: 690, column: 25)
!2480 = distinct !DILexicalBlock(scope: !2460, file: !139, line: 690, column: 25)
!2481 = !DILocation(line: 690, column: 25, scope: !2480)
!2482 = !DILocation(line: 691, column: 25, scope: !2457)
!2483 = !DILocation(line: 691, column: 25, scope: !2484)
!2484 = distinct !DILexicalBlock(scope: !2485, file: !139, line: 691, column: 25)
!2485 = distinct !DILexicalBlock(scope: !2457, file: !139, line: 691, column: 25)
!2486 = !DILocation(line: 691, column: 25, scope: !2485)
!2487 = !DILocation(line: 692, column: 25, scope: !2457)
!2488 = !DILocation(line: 692, column: 25, scope: !2489)
!2489 = distinct !DILexicalBlock(scope: !2490, file: !139, line: 692, column: 25)
!2490 = distinct !DILexicalBlock(scope: !2457, file: !139, line: 692, column: 25)
!2491 = !DILocation(line: 692, column: 25, scope: !2490)
!2492 = !DILocation(line: 693, column: 36, scope: !2457)
!2493 = !DILocation(line: 693, column: 38, scope: !2457)
!2494 = !DILocation(line: 693, column: 33, scope: !2457)
!2495 = !DILocation(line: 693, column: 29, scope: !2457)
!2496 = !DILocation(line: 693, column: 27, scope: !2457)
!2497 = !DILocation(line: 694, column: 23, scope: !2457)
!2498 = !DILocation(line: 695, column: 30, scope: !2499)
!2499 = distinct !DILexicalBlock(scope: !2449, file: !139, line: 695, column: 30)
!2500 = !DILocation(line: 695, column: 30, scope: !2449)
!2501 = !DILocation(line: 697, column: 25, scope: !2502)
!2502 = distinct !DILexicalBlock(scope: !2499, file: !139, line: 696, column: 23)
!2503 = !DILocation(line: 697, column: 25, scope: !2504)
!2504 = distinct !DILexicalBlock(scope: !2505, file: !139, line: 697, column: 25)
!2505 = distinct !DILexicalBlock(scope: !2502, file: !139, line: 697, column: 25)
!2506 = !DILocation(line: 697, column: 25, scope: !2505)
!2507 = !DILocation(line: 698, column: 40, scope: !2502)
!2508 = !DILocation(line: 699, column: 23, scope: !2502)
!2509 = !DILocation(line: 700, column: 25, scope: !2510)
!2510 = distinct !DILexicalBlock(scope: !2450, file: !139, line: 700, column: 25)
!2511 = !DILocation(line: 700, column: 33, scope: !2510)
!2512 = !DILocation(line: 700, column: 35, scope: !2510)
!2513 = !DILocation(line: 700, column: 30, scope: !2510)
!2514 = !DILocation(line: 700, column: 25, scope: !2450)
!2515 = !DILocation(line: 701, column: 23, scope: !2510)
!2516 = !DILocation(line: 702, column: 21, scope: !2450)
!2517 = !DILocation(line: 702, column: 21, scope: !2518)
!2518 = distinct !DILexicalBlock(scope: !2519, file: !139, line: 702, column: 21)
!2519 = distinct !DILexicalBlock(scope: !2450, file: !139, line: 702, column: 21)
!2520 = !DILocation(line: 702, column: 21, scope: !2519)
!2521 = !DILocation(line: 702, column: 21, scope: !2522)
!2522 = distinct !DILexicalBlock(scope: !2518, file: !139, line: 702, column: 21)
!2523 = !DILocation(line: 702, column: 21, scope: !2524)
!2524 = distinct !DILexicalBlock(scope: !2525, file: !139, line: 702, column: 21)
!2525 = distinct !DILexicalBlock(scope: !2522, file: !139, line: 702, column: 21)
!2526 = !DILocation(line: 702, column: 21, scope: !2525)
!2527 = !DILocation(line: 702, column: 21, scope: !2528)
!2528 = distinct !DILexicalBlock(scope: !2529, file: !139, line: 702, column: 21)
!2529 = distinct !DILexicalBlock(scope: !2522, file: !139, line: 702, column: 21)
!2530 = !DILocation(line: 702, column: 21, scope: !2529)
!2531 = !DILocation(line: 703, column: 21, scope: !2450)
!2532 = !DILocation(line: 703, column: 21, scope: !2533)
!2533 = distinct !DILexicalBlock(scope: !2534, file: !139, line: 703, column: 21)
!2534 = distinct !DILexicalBlock(scope: !2450, file: !139, line: 703, column: 21)
!2535 = !DILocation(line: 703, column: 21, scope: !2534)
!2536 = !DILocation(line: 704, column: 25, scope: !2450)
!2537 = !DILocation(line: 704, column: 29, scope: !2450)
!2538 = !DILocation(line: 704, column: 23, scope: !2450)
!2539 = !DILocation(line: 686, column: 17, scope: !2451)
!2540 = distinct !{!2540, !2541, !2542}
!2541 = !DILocation(line: 686, column: 17, scope: !2452)
!2542 = !DILocation(line: 705, column: 19, scope: !2452)
!2543 = !DILocation(line: 707, column: 17, scope: !2442)
!2544 = !DILocation(line: 710, column: 9, scope: !2042)
!2545 = !DILocation(line: 712, column: 16, scope: !2546)
!2546 = distinct !DILexicalBlock(scope: !1988, file: !139, line: 712, column: 11)
!2547 = !DILocation(line: 712, column: 34, scope: !2546)
!2548 = !DILocation(line: 712, column: 37, scope: !2546)
!2549 = !DILocation(line: 712, column: 51, scope: !2546)
!2550 = !DILocation(line: 713, column: 15, scope: !2546)
!2551 = !DILocation(line: 713, column: 18, scope: !2546)
!2552 = !DILocation(line: 714, column: 14, scope: !2546)
!2553 = !DILocation(line: 714, column: 17, scope: !2546)
!2554 = !DILocation(line: 715, column: 14, scope: !2546)
!2555 = !DILocation(line: 715, column: 17, scope: !2546)
!2556 = !DILocation(line: 715, column: 33, scope: !2546)
!2557 = !DILocation(line: 715, column: 35, scope: !2546)
!2558 = !DILocation(line: 715, column: 51, scope: !2546)
!2559 = !DILocation(line: 715, column: 53, scope: !2546)
!2560 = !DILocation(line: 715, column: 47, scope: !2546)
!2561 = !DILocation(line: 715, column: 65, scope: !2546)
!2562 = !DILocation(line: 716, column: 11, scope: !2546)
!2563 = !DILocation(line: 716, column: 15, scope: !2546)
!2564 = !DILocation(line: 712, column: 11, scope: !1988)
!2565 = !DILocation(line: 717, column: 9, scope: !2546)
!2566 = !DILabel(scope: !1988, name: "store_escape", file: !139, line: 719)
!2567 = !DILocation(line: 719, column: 5, scope: !1988)
!2568 = !DILocation(line: 720, column: 7, scope: !1988)
!2569 = !DILocation(line: 720, column: 7, scope: !2570)
!2570 = distinct !DILexicalBlock(scope: !2571, file: !139, line: 720, column: 7)
!2571 = distinct !DILexicalBlock(scope: !1988, file: !139, line: 720, column: 7)
!2572 = !DILocation(line: 720, column: 7, scope: !2571)
!2573 = !DILocation(line: 720, column: 7, scope: !2574)
!2574 = distinct !DILexicalBlock(scope: !2571, file: !139, line: 720, column: 7)
!2575 = !DILocation(line: 720, column: 7, scope: !2576)
!2576 = distinct !DILexicalBlock(scope: !2574, file: !139, line: 720, column: 7)
!2577 = !DILocation(line: 720, column: 7, scope: !2578)
!2578 = distinct !DILexicalBlock(scope: !2579, file: !139, line: 720, column: 7)
!2579 = distinct !DILexicalBlock(scope: !2576, file: !139, line: 720, column: 7)
!2580 = !DILocation(line: 720, column: 7, scope: !2579)
!2581 = !DILocation(line: 720, column: 7, scope: !2582)
!2582 = distinct !DILexicalBlock(scope: !2583, file: !139, line: 720, column: 7)
!2583 = distinct !DILexicalBlock(scope: !2576, file: !139, line: 720, column: 7)
!2584 = !DILocation(line: 720, column: 7, scope: !2583)
!2585 = !DILocation(line: 720, column: 7, scope: !2586)
!2586 = distinct !DILexicalBlock(scope: !2587, file: !139, line: 720, column: 7)
!2587 = distinct !DILexicalBlock(scope: !2576, file: !139, line: 720, column: 7)
!2588 = !DILocation(line: 720, column: 7, scope: !2587)
!2589 = !DILocation(line: 720, column: 7, scope: !2590)
!2590 = distinct !DILexicalBlock(scope: !2591, file: !139, line: 720, column: 7)
!2591 = distinct !DILexicalBlock(scope: !2571, file: !139, line: 720, column: 7)
!2592 = !DILocation(line: 720, column: 7, scope: !2591)
!2593 = !DILabel(scope: !1988, name: "store_c", file: !139, line: 722)
!2594 = !DILocation(line: 722, column: 5, scope: !1988)
!2595 = !DILocation(line: 723, column: 7, scope: !1988)
!2596 = !DILocation(line: 723, column: 7, scope: !2597)
!2597 = distinct !DILexicalBlock(scope: !2598, file: !139, line: 723, column: 7)
!2598 = distinct !DILexicalBlock(scope: !1988, file: !139, line: 723, column: 7)
!2599 = !DILocation(line: 723, column: 7, scope: !2598)
!2600 = !DILocation(line: 723, column: 7, scope: !2601)
!2601 = distinct !DILexicalBlock(scope: !2597, file: !139, line: 723, column: 7)
!2602 = !DILocation(line: 723, column: 7, scope: !2603)
!2603 = distinct !DILexicalBlock(scope: !2604, file: !139, line: 723, column: 7)
!2604 = distinct !DILexicalBlock(scope: !2601, file: !139, line: 723, column: 7)
!2605 = !DILocation(line: 723, column: 7, scope: !2604)
!2606 = !DILocation(line: 723, column: 7, scope: !2607)
!2607 = distinct !DILexicalBlock(scope: !2608, file: !139, line: 723, column: 7)
!2608 = distinct !DILexicalBlock(scope: !2601, file: !139, line: 723, column: 7)
!2609 = !DILocation(line: 723, column: 7, scope: !2608)
!2610 = !DILocation(line: 724, column: 7, scope: !1988)
!2611 = !DILocation(line: 724, column: 7, scope: !2612)
!2612 = distinct !DILexicalBlock(scope: !2613, file: !139, line: 724, column: 7)
!2613 = distinct !DILexicalBlock(scope: !1988, file: !139, line: 724, column: 7)
!2614 = !DILocation(line: 724, column: 7, scope: !2613)
!2615 = !DILocation(line: 726, column: 13, scope: !2616)
!2616 = distinct !DILexicalBlock(scope: !1988, file: !139, line: 726, column: 11)
!2617 = !DILocation(line: 726, column: 11, scope: !1988)
!2618 = !DILocation(line: 727, column: 38, scope: !2616)
!2619 = !DILocation(line: 727, column: 9, scope: !2616)
!2620 = !DILocation(line: 728, column: 5, scope: !1988)
!2621 = !DILocation(line: 400, column: 75, scope: !1977)
!2622 = !DILocation(line: 400, column: 3, scope: !1977)
!2623 = distinct !{!2623, !1986, !2624}
!2624 = !DILocation(line: 728, column: 5, scope: !1974)
!2625 = !DILocation(line: 730, column: 7, scope: !2626)
!2626 = distinct !DILexicalBlock(scope: !1834, file: !139, line: 730, column: 7)
!2627 = !DILocation(line: 730, column: 11, scope: !2626)
!2628 = !DILocation(line: 730, column: 16, scope: !2626)
!2629 = !DILocation(line: 730, column: 19, scope: !2626)
!2630 = !DILocation(line: 730, column: 33, scope: !2626)
!2631 = !DILocation(line: 731, column: 7, scope: !2626)
!2632 = !DILocation(line: 731, column: 10, scope: !2626)
!2633 = !DILocation(line: 730, column: 7, scope: !1834)
!2634 = !DILocation(line: 732, column: 5, scope: !2626)
!2635 = !DILocation(line: 738, column: 7, scope: !2636)
!2636 = distinct !DILexicalBlock(scope: !1834, file: !139, line: 738, column: 7)
!2637 = !DILocation(line: 738, column: 21, scope: !2636)
!2638 = !DILocation(line: 738, column: 51, scope: !2636)
!2639 = !DILocation(line: 738, column: 56, scope: !2636)
!2640 = !DILocation(line: 739, column: 7, scope: !2636)
!2641 = !DILocation(line: 739, column: 10, scope: !2636)
!2642 = !DILocation(line: 738, column: 7, scope: !1834)
!2643 = !DILocation(line: 741, column: 11, scope: !2644)
!2644 = distinct !DILexicalBlock(scope: !2645, file: !139, line: 741, column: 11)
!2645 = distinct !DILexicalBlock(scope: !2636, file: !139, line: 740, column: 5)
!2646 = !DILocation(line: 741, column: 11, scope: !2645)
!2647 = !DILocation(line: 742, column: 42, scope: !2644)
!2648 = !DILocation(line: 742, column: 50, scope: !2644)
!2649 = !DILocation(line: 742, column: 67, scope: !2644)
!2650 = !DILocation(line: 742, column: 72, scope: !2644)
!2651 = !DILocation(line: 744, column: 42, scope: !2644)
!2652 = !DILocation(line: 744, column: 49, scope: !2644)
!2653 = !DILocation(line: 745, column: 42, scope: !2644)
!2654 = !DILocation(line: 745, column: 54, scope: !2644)
!2655 = !DILocation(line: 742, column: 16, scope: !2644)
!2656 = !DILocation(line: 742, column: 9, scope: !2644)
!2657 = !DILocation(line: 746, column: 18, scope: !2658)
!2658 = distinct !DILexicalBlock(scope: !2644, file: !139, line: 746, column: 16)
!2659 = !DILocation(line: 746, column: 29, scope: !2658)
!2660 = !DILocation(line: 746, column: 32, scope: !2658)
!2661 = !DILocation(line: 746, column: 16, scope: !2644)
!2662 = !DILocation(line: 749, column: 24, scope: !2663)
!2663 = distinct !DILexicalBlock(scope: !2658, file: !139, line: 747, column: 9)
!2664 = !DILocation(line: 749, column: 22, scope: !2663)
!2665 = !DILocation(line: 750, column: 15, scope: !2663)
!2666 = !DILocation(line: 751, column: 11, scope: !2663)
!2667 = !DILocation(line: 753, column: 5, scope: !2645)
!2668 = !DILocation(line: 755, column: 7, scope: !2669)
!2669 = distinct !DILexicalBlock(scope: !1834, file: !139, line: 755, column: 7)
!2670 = !DILocation(line: 755, column: 20, scope: !2669)
!2671 = !DILocation(line: 755, column: 24, scope: !2669)
!2672 = !DILocation(line: 755, column: 7, scope: !1834)
!2673 = !DILocation(line: 756, column: 5, scope: !2669)
!2674 = !DILocation(line: 756, column: 13, scope: !2675)
!2675 = distinct !DILexicalBlock(scope: !2676, file: !139, line: 756, column: 5)
!2676 = distinct !DILexicalBlock(scope: !2669, file: !139, line: 756, column: 5)
!2677 = !DILocation(line: 756, column: 12, scope: !2675)
!2678 = !DILocation(line: 756, column: 5, scope: !2676)
!2679 = !DILocation(line: 757, column: 7, scope: !2675)
!2680 = !DILocation(line: 757, column: 7, scope: !2681)
!2681 = distinct !DILexicalBlock(scope: !2682, file: !139, line: 757, column: 7)
!2682 = distinct !DILexicalBlock(scope: !2675, file: !139, line: 757, column: 7)
!2683 = !DILocation(line: 757, column: 7, scope: !2682)
!2684 = !DILocation(line: 756, column: 39, scope: !2675)
!2685 = !DILocation(line: 756, column: 5, scope: !2675)
!2686 = distinct !{!2686, !2678, !2687}
!2687 = !DILocation(line: 757, column: 7, scope: !2676)
!2688 = !DILocation(line: 759, column: 7, scope: !2689)
!2689 = distinct !DILexicalBlock(scope: !1834, file: !139, line: 759, column: 7)
!2690 = !DILocation(line: 759, column: 13, scope: !2689)
!2691 = !DILocation(line: 759, column: 11, scope: !2689)
!2692 = !DILocation(line: 759, column: 7, scope: !1834)
!2693 = !DILocation(line: 760, column: 5, scope: !2689)
!2694 = !DILocation(line: 760, column: 12, scope: !2689)
!2695 = !DILocation(line: 760, column: 17, scope: !2689)
!2696 = !DILocation(line: 761, column: 10, scope: !1834)
!2697 = !DILocation(line: 761, column: 3, scope: !1834)
!2698 = !DILabel(scope: !1834, name: "force_outer_quoting_style", file: !139, line: 763)
!2699 = !DILocation(line: 763, column: 2, scope: !1834)
!2700 = !DILocation(line: 766, column: 7, scope: !2701)
!2701 = distinct !DILexicalBlock(scope: !1834, file: !139, line: 766, column: 7)
!2702 = !DILocation(line: 766, column: 21, scope: !2701)
!2703 = !DILocation(line: 766, column: 51, scope: !2701)
!2704 = !DILocation(line: 766, column: 54, scope: !2701)
!2705 = !DILocation(line: 766, column: 7, scope: !1834)
!2706 = !DILocation(line: 767, column: 19, scope: !2701)
!2707 = !DILocation(line: 767, column: 5, scope: !2701)
!2708 = !DILocation(line: 768, column: 36, scope: !1834)
!2709 = !DILocation(line: 768, column: 44, scope: !1834)
!2710 = !DILocation(line: 768, column: 56, scope: !1834)
!2711 = !DILocation(line: 768, column: 61, scope: !1834)
!2712 = !DILocation(line: 769, column: 36, scope: !1834)
!2713 = !DILocation(line: 770, column: 36, scope: !1834)
!2714 = !DILocation(line: 770, column: 42, scope: !1834)
!2715 = !DILocation(line: 771, column: 36, scope: !1834)
!2716 = !DILocation(line: 771, column: 48, scope: !1834)
!2717 = !DILocation(line: 768, column: 10, scope: !1834)
!2718 = !DILocation(line: 768, column: 3, scope: !1834)
!2719 = !DILocation(line: 772, column: 1, scope: !1834)
!2720 = distinct !DISubprogram(name: "gettext_quote", scope: !139, file: !139, line: 207, type: !2721, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !115, retainedNodes: !4)
!2721 = !DISubroutineType(types: !2722)
!2722 = !{!69, !69, !118}
!2723 = !DILocalVariable(name: "msgid", arg: 1, scope: !2720, file: !139, line: 207, type: !69)
!2724 = !DILocation(line: 207, column: 28, scope: !2720)
!2725 = !DILocalVariable(name: "s", arg: 2, scope: !2720, file: !139, line: 207, type: !118)
!2726 = !DILocation(line: 207, column: 54, scope: !2720)
!2727 = !DILocalVariable(name: "translation", scope: !2720, file: !139, line: 209, type: !69)
!2728 = !DILocation(line: 209, column: 15, scope: !2720)
!2729 = !DILocation(line: 209, column: 29, scope: !2720)
!2730 = !DILocalVariable(name: "locale_code", scope: !2720, file: !139, line: 210, type: !69)
!2731 = !DILocation(line: 210, column: 15, scope: !2720)
!2732 = !DILocation(line: 212, column: 7, scope: !2733)
!2733 = distinct !DILexicalBlock(scope: !2720, file: !139, line: 212, column: 7)
!2734 = !DILocation(line: 212, column: 22, scope: !2733)
!2735 = !DILocation(line: 212, column: 19, scope: !2733)
!2736 = !DILocation(line: 212, column: 7, scope: !2720)
!2737 = !DILocation(line: 213, column: 12, scope: !2733)
!2738 = !DILocation(line: 213, column: 5, scope: !2733)
!2739 = !DILocation(line: 233, column: 17, scope: !2720)
!2740 = !DILocation(line: 233, column: 15, scope: !2720)
!2741 = !DILocation(line: 234, column: 7, scope: !2742)
!2742 = distinct !DILexicalBlock(scope: !2720, file: !139, line: 234, column: 7)
!2743 = !DILocation(line: 235, column: 12, scope: !2742)
!2744 = !DILocation(line: 235, column: 21, scope: !2742)
!2745 = !DILocation(line: 235, column: 5, scope: !2742)
!2746 = !DILocation(line: 236, column: 7, scope: !2747)
!2747 = distinct !DILexicalBlock(scope: !2720, file: !139, line: 236, column: 7)
!2748 = !DILocation(line: 237, column: 12, scope: !2747)
!2749 = !DILocation(line: 237, column: 21, scope: !2747)
!2750 = !DILocation(line: 237, column: 5, scope: !2747)
!2751 = !DILocation(line: 239, column: 11, scope: !2720)
!2752 = !DILocation(line: 239, column: 13, scope: !2720)
!2753 = !DILocation(line: 239, column: 3, scope: !2720)
!2754 = !DILocation(line: 240, column: 1, scope: !2720)
!2755 = distinct !DISubprogram(name: "quotearg_char", scope: !139, file: !139, line: 991, type: !2756, scopeLine: 992, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !115, retainedNodes: !4)
!2756 = !DISubroutineType(types: !2757)
!2757 = !{!6, !69, !7}
!2758 = !DILocalVariable(name: "arg", arg: 1, scope: !2755, file: !139, line: 991, type: !69)
!2759 = !DILocation(line: 991, column: 28, scope: !2755)
!2760 = !DILocalVariable(name: "ch", arg: 2, scope: !2755, file: !139, line: 991, type: !7)
!2761 = !DILocation(line: 991, column: 38, scope: !2755)
!2762 = !DILocation(line: 993, column: 29, scope: !2755)
!2763 = !DILocation(line: 993, column: 44, scope: !2755)
!2764 = !DILocation(line: 993, column: 10, scope: !2755)
!2765 = !DILocation(line: 993, column: 3, scope: !2755)
!2766 = distinct !DISubprogram(name: "quotearg_colon", scope: !139, file: !139, line: 997, type: !2767, scopeLine: 998, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !115, retainedNodes: !4)
!2767 = !DISubroutineType(types: !2768)
!2768 = !{!6, !69}
!2769 = !DILocalVariable(name: "arg", arg: 1, scope: !2766, file: !139, line: 997, type: !69)
!2770 = !DILocation(line: 997, column: 29, scope: !2766)
!2771 = !DILocation(line: 999, column: 25, scope: !2766)
!2772 = !DILocation(line: 999, column: 10, scope: !2766)
!2773 = !DILocation(line: 999, column: 3, scope: !2766)
!2774 = !DILocalVariable(name: "arg", arg: 1, scope: !2775, file: !139, line: 997, type: !69)
!2775 = distinct !DISubprogram(name: "quotearg_colon", scope: !139, file: !139, line: 997, type: !2767, scopeLine: 998, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2776, retainedNodes: !4)
!2776 = distinct !DICompileUnit(language: DW_LANG_C99, file: !116, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !117, retainedTypes: !132, globals: !2777, nameTableKind: None)
!2777 = !{!2778, !2780, !2782, !2791, !2793, !2795, !2802, !2804}
!2778 = !DIGlobalVariableExpression(var: !2779, expr: !DIExpression())
!2779 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !2776, file: !139, line: 85, type: !140, isLocal: false, isDefinition: true)
!2780 = !DIGlobalVariableExpression(var: !2781, expr: !DIExpression())
!2781 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !2776, file: !139, line: 101, type: !146, isLocal: false, isDefinition: true)
!2782 = !DIGlobalVariableExpression(var: !2783, expr: !DIExpression())
!2783 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !2776, file: !139, line: 1052, type: !2784, isLocal: false, isDefinition: true)
!2784 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !139, line: 65, size: 448, elements: !2785)
!2785 = !{!2786, !2787, !2788, !2789, !2790}
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !2784, file: !139, line: 68, baseType: !118, size: 32)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2784, file: !139, line: 71, baseType: !72, size: 32, offset: 32)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !2784, file: !139, line: 75, baseType: !155, size: 256, offset: 64)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !2784, file: !139, line: 78, baseType: !69, size: 64, offset: 320)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !2784, file: !139, line: 81, baseType: !69, size: 64, offset: 384)
!2791 = !DIGlobalVariableExpression(var: !2792, expr: !DIExpression())
!2792 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !2776, file: !139, line: 116, type: !2784, isLocal: true, isDefinition: true)
!2793 = !DIGlobalVariableExpression(var: !2794, expr: !DIExpression())
!2794 = distinct !DIGlobalVariable(name: "slot0", scope: !2776, file: !139, line: 842, type: !162, isLocal: true, isDefinition: true)
!2795 = !DIGlobalVariableExpression(var: !2796, expr: !DIExpression())
!2796 = distinct !DIGlobalVariable(name: "slotvec", scope: !2776, file: !139, line: 845, type: !2797, isLocal: true, isDefinition: true)
!2797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2798, size: 64)
!2798 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !139, line: 834, size: 128, elements: !2799)
!2799 = !{!2800, !2801}
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2798, file: !139, line: 836, baseType: !134, size: 64)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2798, file: !139, line: 837, baseType: !6, size: 64, offset: 64)
!2802 = !DIGlobalVariableExpression(var: !2803, expr: !DIExpression())
!2803 = distinct !DIGlobalVariable(name: "nslots", scope: !2776, file: !139, line: 843, type: !72, isLocal: true, isDefinition: true)
!2804 = !DIGlobalVariableExpression(var: !2805, expr: !DIExpression())
!2805 = distinct !DIGlobalVariable(name: "slotvec0", scope: !2776, file: !139, line: 844, type: !2798, isLocal: true, isDefinition: true)
!2806 = distinct !DISubprogram(name: "quote_n_mem", scope: !139, file: !139, line: 1061, type: !2807, scopeLine: 1062, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !115, retainedNodes: !4)
!2807 = !DISubroutineType(types: !2808)
!2808 = !{!69, !72, !69, !134}
!2809 = !DILocalVariable(name: "n", arg: 1, scope: !2806, file: !139, line: 1061, type: !72)
!2810 = !DILocation(line: 1061, column: 18, scope: !2806)
!2811 = !DILocalVariable(name: "arg", arg: 2, scope: !2806, file: !139, line: 1061, type: !69)
!2812 = !DILocation(line: 1061, column: 33, scope: !2806)
!2813 = !DILocalVariable(name: "argsize", arg: 3, scope: !2806, file: !139, line: 1061, type: !134)
!2814 = !DILocation(line: 1061, column: 45, scope: !2806)
!2815 = !DILocation(line: 1063, column: 30, scope: !2806)
!2816 = !DILocation(line: 1063, column: 33, scope: !2806)
!2817 = !DILocation(line: 1063, column: 38, scope: !2806)
!2818 = !DILocation(line: 1063, column: 10, scope: !2806)
!2819 = !DILocation(line: 1063, column: 3, scope: !2806)
!2820 = distinct !DISubprogram(name: "quote_n", scope: !139, file: !139, line: 1073, type: !2821, scopeLine: 1074, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !115, retainedNodes: !4)
!2821 = !DISubroutineType(types: !2822)
!2822 = !{!69, !72, !69}
!2823 = !DILocalVariable(name: "n", arg: 1, scope: !2820, file: !139, line: 1073, type: !72)
!2824 = !DILocation(line: 1073, column: 14, scope: !2820)
!2825 = !DILocalVariable(name: "arg", arg: 2, scope: !2820, file: !139, line: 1073, type: !69)
!2826 = !DILocation(line: 1073, column: 29, scope: !2820)
!2827 = !DILocation(line: 1075, column: 23, scope: !2820)
!2828 = !DILocation(line: 1075, column: 26, scope: !2820)
!2829 = !DILocation(line: 1075, column: 10, scope: !2820)
!2830 = !DILocation(line: 1075, column: 3, scope: !2820)
!2831 = distinct !DISubprogram(name: "quote", scope: !139, file: !139, line: 1079, type: !2832, scopeLine: 1080, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !115, retainedNodes: !4)
!2832 = !DISubroutineType(types: !2833)
!2833 = !{!69, !69}
!2834 = !DILocalVariable(name: "arg", arg: 1, scope: !2831, file: !139, line: 1079, type: !69)
!2835 = !DILocation(line: 1079, column: 20, scope: !2831)
!2836 = !DILocation(line: 1081, column: 22, scope: !2831)
!2837 = !DILocation(line: 1081, column: 10, scope: !2831)
!2838 = !DILocation(line: 1081, column: 3, scope: !2831)
!2839 = distinct !DISubprogram(name: "getcon", scope: !2840, file: !2840, line: 87, type: !2841, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !208, retainedNodes: !4)
!2840 = !DIFile(filename: "./lib/selinux/selinux.h", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!2841 = !DISubroutineType(types: !2842)
!2842 = !{!72, !2843}
!2843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2844, size: 64)
!2844 = !DIDerivedType(tag: DW_TAG_typedef, name: "security_context_t", file: !2840, line: 83, baseType: !6)
!2845 = !DILocalVariable(name: "con", arg: 1, scope: !2839, file: !2840, line: 87, type: !2843)
!2846 = !DILocation(line: 87, column: 29, scope: !2839)
!2847 = !DILocation(line: 88, column: 5, scope: !2839)
!2848 = !DILocation(line: 88, column: 11, scope: !2839)
!2849 = !DILocation(line: 88, column: 22, scope: !2839)
!2850 = !DILocalVariable(name: "con", arg: 1, scope: !2851, file: !2840, line: 87, type: !2843)
!2851 = distinct !DISubprogram(name: "getcon", scope: !2840, file: !2840, line: 87, type: !2841, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2852, retainedNodes: !4)
!2852 = distinct !DICompileUnit(language: DW_LANG_C99, file: !209, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, nameTableKind: None)
!2853 = distinct !DISubprogram(name: "parse_user_spec", scope: !179, file: !179, line: 259, type: !2854, scopeLine: 261, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !185, retainedNodes: !4)
!2854 = !DISubroutineType(types: !2855)
!2855 = !{!69, !69, !182, !183, !184, !184}
!2856 = !DILocalVariable(name: "spec", arg: 1, scope: !2853, file: !179, line: 259, type: !69)
!2857 = !DILocation(line: 259, column: 30, scope: !2853)
!2858 = !DILocalVariable(name: "uid", arg: 2, scope: !2853, file: !179, line: 259, type: !182)
!2859 = !DILocation(line: 259, column: 43, scope: !2853)
!2860 = !DILocalVariable(name: "gid", arg: 3, scope: !2853, file: !179, line: 259, type: !183)
!2861 = !DILocation(line: 259, column: 55, scope: !2853)
!2862 = !DILocalVariable(name: "username", arg: 4, scope: !2853, file: !179, line: 260, type: !184)
!2863 = !DILocation(line: 260, column: 25, scope: !2853)
!2864 = !DILocalVariable(name: "groupname", arg: 5, scope: !2853, file: !179, line: 260, type: !184)
!2865 = !DILocation(line: 260, column: 42, scope: !2853)
!2866 = !DILocalVariable(name: "colon", scope: !2853, file: !179, line: 262, type: !69)
!2867 = !DILocation(line: 262, column: 15, scope: !2853)
!2868 = !DILocation(line: 262, column: 23, scope: !2853)
!2869 = !DILocation(line: 262, column: 37, scope: !2853)
!2870 = !DILocation(line: 262, column: 29, scope: !2853)
!2871 = !DILocalVariable(name: "error_msg", scope: !2853, file: !179, line: 263, type: !69)
!2872 = !DILocation(line: 263, column: 15, scope: !2853)
!2873 = !DILocation(line: 264, column: 27, scope: !2853)
!2874 = !DILocation(line: 264, column: 33, scope: !2853)
!2875 = !DILocation(line: 264, column: 40, scope: !2853)
!2876 = !DILocation(line: 264, column: 45, scope: !2853)
!2877 = !DILocation(line: 264, column: 50, scope: !2853)
!2878 = !DILocation(line: 264, column: 60, scope: !2853)
!2879 = !DILocation(line: 264, column: 5, scope: !2853)
!2880 = !DILocation(line: 266, column: 7, scope: !2881)
!2881 = distinct !DILexicalBlock(scope: !2853, file: !179, line: 266, column: 7)
!2882 = !DILocation(line: 266, column: 11, scope: !2881)
!2883 = !DILocation(line: 266, column: 15, scope: !2881)
!2884 = !DILocation(line: 266, column: 21, scope: !2881)
!2885 = !DILocation(line: 266, column: 24, scope: !2881)
!2886 = !DILocation(line: 266, column: 7, scope: !2853)
!2887 = !DILocalVariable(name: "dot", scope: !2888, file: !179, line: 274, type: !69)
!2888 = distinct !DILexicalBlock(scope: !2881, file: !179, line: 267, column: 5)
!2889 = !DILocation(line: 274, column: 19, scope: !2888)
!2890 = !DILocation(line: 274, column: 33, scope: !2888)
!2891 = !DILocation(line: 274, column: 25, scope: !2888)
!2892 = !DILocation(line: 275, column: 11, scope: !2893)
!2893 = distinct !DILexicalBlock(scope: !2888, file: !179, line: 275, column: 11)
!2894 = !DILocation(line: 276, column: 11, scope: !2893)
!2895 = !DILocation(line: 276, column: 38, scope: !2893)
!2896 = !DILocation(line: 276, column: 44, scope: !2893)
!2897 = !DILocation(line: 276, column: 49, scope: !2893)
!2898 = !DILocation(line: 276, column: 54, scope: !2893)
!2899 = !DILocation(line: 276, column: 59, scope: !2893)
!2900 = !DILocation(line: 276, column: 69, scope: !2893)
!2901 = !DILocation(line: 276, column: 16, scope: !2893)
!2902 = !DILocation(line: 275, column: 11, scope: !2888)
!2903 = !DILocation(line: 277, column: 19, scope: !2893)
!2904 = !DILocation(line: 277, column: 9, scope: !2893)
!2905 = !DILocation(line: 278, column: 5, scope: !2888)
!2906 = !DILocation(line: 280, column: 10, scope: !2853)
!2907 = !DILocation(line: 280, column: 3, scope: !2853)
!2908 = !DILocalVariable(name: "spec", arg: 1, scope: !178, file: !179, line: 102, type: !69)
!2909 = !DILocation(line: 102, column: 35, scope: !178)
!2910 = !DILocalVariable(name: "separator", arg: 2, scope: !178, file: !179, line: 102, type: !69)
!2911 = !DILocation(line: 102, column: 53, scope: !178)
!2912 = !DILocalVariable(name: "uid", arg: 3, scope: !178, file: !179, line: 103, type: !182)
!2913 = !DILocation(line: 103, column: 30, scope: !178)
!2914 = !DILocalVariable(name: "gid", arg: 4, scope: !178, file: !179, line: 103, type: !183)
!2915 = !DILocation(line: 103, column: 42, scope: !178)
!2916 = !DILocalVariable(name: "username", arg: 5, scope: !178, file: !179, line: 104, type: !184)
!2917 = !DILocation(line: 104, column: 30, scope: !178)
!2918 = !DILocalVariable(name: "groupname", arg: 6, scope: !178, file: !179, line: 104, type: !184)
!2919 = !DILocation(line: 104, column: 47, scope: !178)
!2920 = !DILocalVariable(name: "error_msg", scope: !178, file: !179, line: 110, type: !69)
!2921 = !DILocation(line: 110, column: 15, scope: !178)
!2922 = !DILocalVariable(name: "pwd", scope: !178, file: !179, line: 111, type: !2923)
!2923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2924, size: 64)
!2924 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "passwd", file: !601, line: 49, size: 384, elements: !2925)
!2925 = !{!2926, !2927, !2928, !2929, !2930, !2931, !2932}
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "pw_name", scope: !2924, file: !601, line: 51, baseType: !6, size: 64)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "pw_passwd", scope: !2924, file: !601, line: 52, baseType: !6, size: 64, offset: 64)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "pw_uid", scope: !2924, file: !601, line: 54, baseType: !14, size: 32, offset: 128)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "pw_gid", scope: !2924, file: !601, line: 55, baseType: !22, size: 32, offset: 160)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "pw_gecos", scope: !2924, file: !601, line: 56, baseType: !6, size: 64, offset: 192)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "pw_dir", scope: !2924, file: !601, line: 57, baseType: !6, size: 64, offset: 256)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "pw_shell", scope: !2924, file: !601, line: 58, baseType: !6, size: 64, offset: 320)
!2933 = !DILocation(line: 111, column: 18, scope: !178)
!2934 = !DILocalVariable(name: "grp", scope: !178, file: !179, line: 112, type: !2935)
!2935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2936, size: 64)
!2936 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group", file: !967, line: 42, size: 256, elements: !2937)
!2937 = !{!2938, !2939, !2940, !2941}
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "gr_name", scope: !2936, file: !967, line: 44, baseType: !6, size: 64)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "gr_passwd", scope: !2936, file: !967, line: 45, baseType: !6, size: 64, offset: 64)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "gr_gid", scope: !2936, file: !967, line: 46, baseType: !22, size: 32, offset: 128)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "gr_mem", scope: !2936, file: !967, line: 47, baseType: !184, size: 64, offset: 192)
!2942 = !DILocation(line: 112, column: 17, scope: !178)
!2943 = !DILocalVariable(name: "u", scope: !178, file: !179, line: 113, type: !6)
!2944 = !DILocation(line: 113, column: 9, scope: !178)
!2945 = !DILocalVariable(name: "g", scope: !178, file: !179, line: 114, type: !69)
!2946 = !DILocation(line: 114, column: 15, scope: !178)
!2947 = !DILocalVariable(name: "gname", scope: !178, file: !179, line: 115, type: !6)
!2948 = !DILocation(line: 115, column: 9, scope: !178)
!2949 = !DILocalVariable(name: "unum", scope: !178, file: !179, line: 116, type: !12)
!2950 = !DILocation(line: 116, column: 9, scope: !178)
!2951 = !DILocation(line: 116, column: 17, scope: !178)
!2952 = !DILocation(line: 116, column: 16, scope: !178)
!2953 = !DILocalVariable(name: "gnum", scope: !178, file: !179, line: 117, type: !21)
!2954 = !DILocation(line: 117, column: 9, scope: !178)
!2955 = !DILocation(line: 117, column: 16, scope: !178)
!2956 = !DILocation(line: 117, column: 23, scope: !178)
!2957 = !DILocation(line: 117, column: 22, scope: !178)
!2958 = !DILocation(line: 119, column: 13, scope: !178)
!2959 = !DILocation(line: 120, column: 7, scope: !2960)
!2960 = distinct !DILexicalBlock(scope: !178, file: !179, line: 120, column: 7)
!2961 = !DILocation(line: 120, column: 7, scope: !178)
!2962 = !DILocation(line: 121, column: 6, scope: !2960)
!2963 = !DILocation(line: 121, column: 15, scope: !2960)
!2964 = !DILocation(line: 121, column: 5, scope: !2960)
!2965 = !DILocation(line: 122, column: 7, scope: !2966)
!2966 = distinct !DILexicalBlock(scope: !178, file: !179, line: 122, column: 7)
!2967 = !DILocation(line: 122, column: 7, scope: !178)
!2968 = !DILocation(line: 123, column: 6, scope: !2966)
!2969 = !DILocation(line: 123, column: 16, scope: !2966)
!2970 = !DILocation(line: 123, column: 5, scope: !2966)
!2971 = !DILocation(line: 129, column: 5, scope: !178)
!2972 = !DILocation(line: 130, column: 7, scope: !2973)
!2973 = distinct !DILexicalBlock(scope: !178, file: !179, line: 130, column: 7)
!2974 = !DILocation(line: 130, column: 17, scope: !2973)
!2975 = !DILocation(line: 130, column: 7, scope: !178)
!2976 = !DILocation(line: 132, column: 12, scope: !2977)
!2977 = distinct !DILexicalBlock(scope: !2978, file: !179, line: 132, column: 11)
!2978 = distinct !DILexicalBlock(scope: !2973, file: !179, line: 131, column: 5)
!2979 = !DILocation(line: 132, column: 11, scope: !2977)
!2980 = !DILocation(line: 132, column: 11, scope: !2978)
!2981 = !DILocation(line: 133, column: 22, scope: !2977)
!2982 = !DILocation(line: 133, column: 13, scope: !2977)
!2983 = !DILocation(line: 133, column: 11, scope: !2977)
!2984 = !DILocation(line: 133, column: 9, scope: !2977)
!2985 = !DILocation(line: 134, column: 5, scope: !2978)
!2986 = !DILocalVariable(name: "ulen", scope: !2987, file: !179, line: 137, type: !134)
!2987 = distinct !DILexicalBlock(scope: !2973, file: !179, line: 136, column: 5)
!2988 = !DILocation(line: 137, column: 14, scope: !2987)
!2989 = !DILocation(line: 137, column: 21, scope: !2987)
!2990 = !DILocation(line: 137, column: 33, scope: !2987)
!2991 = !DILocation(line: 137, column: 31, scope: !2987)
!2992 = !DILocation(line: 138, column: 11, scope: !2993)
!2993 = distinct !DILexicalBlock(scope: !2987, file: !179, line: 138, column: 11)
!2994 = !DILocation(line: 138, column: 16, scope: !2993)
!2995 = !DILocation(line: 138, column: 11, scope: !2987)
!2996 = !DILocation(line: 140, column: 24, scope: !2997)
!2997 = distinct !DILexicalBlock(scope: !2993, file: !179, line: 139, column: 9)
!2998 = !DILocation(line: 140, column: 30, scope: !2997)
!2999 = !DILocation(line: 140, column: 35, scope: !2997)
!3000 = !DILocation(line: 140, column: 15, scope: !2997)
!3001 = !DILocation(line: 140, column: 13, scope: !2997)
!3002 = !DILocation(line: 141, column: 11, scope: !2997)
!3003 = !DILocation(line: 141, column: 13, scope: !2997)
!3004 = !DILocation(line: 141, column: 19, scope: !2997)
!3005 = !DILocation(line: 142, column: 9, scope: !2997)
!3006 = !DILocation(line: 145, column: 8, scope: !178)
!3007 = !DILocation(line: 145, column: 18, scope: !178)
!3008 = !DILocation(line: 145, column: 26, scope: !178)
!3009 = !DILocation(line: 145, column: 31, scope: !178)
!3010 = !DILocation(line: 145, column: 41, scope: !178)
!3011 = !DILocation(line: 145, column: 29, scope: !178)
!3012 = !DILocation(line: 145, column: 46, scope: !178)
!3013 = !DILocation(line: 147, column: 10, scope: !178)
!3014 = !DILocation(line: 147, column: 20, scope: !178)
!3015 = !DILocation(line: 145, column: 5, scope: !178)
!3016 = !DILocation(line: 158, column: 7, scope: !3017)
!3017 = distinct !DILexicalBlock(scope: !178, file: !179, line: 158, column: 7)
!3018 = !DILocation(line: 158, column: 9, scope: !3017)
!3019 = !DILocation(line: 158, column: 7, scope: !178)
!3020 = !DILocation(line: 161, column: 15, scope: !3021)
!3021 = distinct !DILexicalBlock(scope: !3017, file: !179, line: 159, column: 5)
!3022 = !DILocation(line: 161, column: 14, scope: !3021)
!3023 = !DILocation(line: 161, column: 17, scope: !3021)
!3024 = !DILocation(line: 161, column: 43, scope: !3021)
!3025 = !DILocation(line: 161, column: 33, scope: !3021)
!3026 = !DILocation(line: 161, column: 11, scope: !3021)
!3027 = !DILocation(line: 162, column: 11, scope: !3028)
!3028 = distinct !DILexicalBlock(scope: !3021, file: !179, line: 162, column: 11)
!3029 = !DILocation(line: 162, column: 15, scope: !3028)
!3030 = !DILocation(line: 162, column: 11, scope: !3021)
!3031 = !DILocalVariable(name: "use_login_group", scope: !3032, file: !179, line: 164, type: !27)
!3032 = distinct !DILexicalBlock(scope: !3028, file: !179, line: 163, column: 9)
!3033 = !DILocation(line: 164, column: 16, scope: !3032)
!3034 = !DILocation(line: 164, column: 35, scope: !3032)
!3035 = !DILocation(line: 164, column: 45, scope: !3032)
!3036 = !DILocation(line: 164, column: 53, scope: !3032)
!3037 = !DILocation(line: 164, column: 56, scope: !3032)
!3038 = !DILocation(line: 164, column: 58, scope: !3032)
!3039 = !DILocation(line: 0, scope: !3032)
!3040 = !DILocation(line: 165, column: 15, scope: !3041)
!3041 = distinct !DILexicalBlock(scope: !3032, file: !179, line: 165, column: 15)
!3042 = !DILocation(line: 165, column: 15, scope: !3032)
!3043 = !DILocation(line: 169, column: 27, scope: !3044)
!3044 = distinct !DILexicalBlock(scope: !3041, file: !179, line: 166, column: 13)
!3045 = !DILocation(line: 169, column: 25, scope: !3044)
!3046 = !DILocation(line: 170, column: 13, scope: !3044)
!3047 = !DILocalVariable(name: "tmp", scope: !3048, file: !179, line: 173, type: !84)
!3048 = distinct !DILexicalBlock(scope: !3041, file: !179, line: 172, column: 13)
!3049 = !DILocation(line: 173, column: 33, scope: !3048)
!3050 = !DILocation(line: 174, column: 29, scope: !3051)
!3051 = distinct !DILexicalBlock(scope: !3048, file: !179, line: 174, column: 19)
!3052 = !DILocation(line: 174, column: 19, scope: !3051)
!3053 = !DILocation(line: 174, column: 52, scope: !3051)
!3054 = !DILocation(line: 175, column: 19, scope: !3051)
!3055 = !DILocation(line: 175, column: 22, scope: !3051)
!3056 = !DILocation(line: 175, column: 26, scope: !3051)
!3057 = !DILocation(line: 175, column: 36, scope: !3051)
!3058 = !DILocation(line: 175, column: 47, scope: !3051)
!3059 = !DILocation(line: 175, column: 39, scope: !3051)
!3060 = !DILocation(line: 175, column: 51, scope: !3051)
!3061 = !DILocation(line: 174, column: 19, scope: !3048)
!3062 = !DILocation(line: 176, column: 24, scope: !3051)
!3063 = !DILocation(line: 176, column: 22, scope: !3051)
!3064 = !DILocation(line: 176, column: 17, scope: !3051)
!3065 = !DILocation(line: 178, column: 29, scope: !3051)
!3066 = !DILocation(line: 178, column: 27, scope: !3051)
!3067 = !DILocation(line: 180, column: 9, scope: !3032)
!3068 = !DILocation(line: 183, column: 18, scope: !3069)
!3069 = distinct !DILexicalBlock(scope: !3028, file: !179, line: 182, column: 9)
!3070 = !DILocation(line: 183, column: 23, scope: !3069)
!3071 = !DILocation(line: 183, column: 16, scope: !3069)
!3072 = !DILocation(line: 184, column: 15, scope: !3073)
!3073 = distinct !DILexicalBlock(scope: !3069, file: !179, line: 184, column: 15)
!3074 = !DILocation(line: 184, column: 17, scope: !3073)
!3075 = !DILocation(line: 184, column: 25, scope: !3073)
!3076 = !DILocation(line: 184, column: 28, scope: !3073)
!3077 = !DILocation(line: 184, column: 38, scope: !3073)
!3078 = !DILocation(line: 184, column: 15, scope: !3069)
!3079 = !DILocalVariable(name: "buf", scope: !3080, file: !179, line: 188, type: !53)
!3080 = distinct !DILexicalBlock(scope: !3073, file: !179, line: 185, column: 13)
!3081 = !DILocation(line: 188, column: 20, scope: !3080)
!3082 = !DILocation(line: 189, column: 22, scope: !3080)
!3083 = !DILocation(line: 189, column: 27, scope: !3080)
!3084 = !DILocation(line: 189, column: 20, scope: !3080)
!3085 = !DILocation(line: 190, column: 31, scope: !3080)
!3086 = !DILocation(line: 190, column: 21, scope: !3080)
!3087 = !DILocation(line: 190, column: 19, scope: !3080)
!3088 = !DILocation(line: 191, column: 32, scope: !3080)
!3089 = !DILocation(line: 191, column: 38, scope: !3080)
!3090 = !DILocation(line: 191, column: 43, scope: !3080)
!3091 = !DILocation(line: 191, column: 64, scope: !3080)
!3092 = !DILocation(line: 191, column: 70, scope: !3080)
!3093 = !DILocation(line: 191, column: 53, scope: !3080)
!3094 = !DILocation(line: 191, column: 23, scope: !3080)
!3095 = !DILocation(line: 191, column: 21, scope: !3080)
!3096 = !DILocation(line: 192, column: 15, scope: !3080)
!3097 = !DILocation(line: 193, column: 13, scope: !3080)
!3098 = !DILocation(line: 195, column: 7, scope: !3021)
!3099 = !DILocation(line: 196, column: 5, scope: !3021)
!3100 = !DILocation(line: 198, column: 7, scope: !3101)
!3101 = distinct !DILexicalBlock(scope: !178, file: !179, line: 198, column: 7)
!3102 = !DILocation(line: 198, column: 9, scope: !3101)
!3103 = !DILocation(line: 198, column: 17, scope: !3101)
!3104 = !DILocation(line: 198, column: 20, scope: !3101)
!3105 = !DILocation(line: 198, column: 30, scope: !3101)
!3106 = !DILocation(line: 198, column: 7, scope: !178)
!3107 = !DILocation(line: 202, column: 15, scope: !3108)
!3108 = distinct !DILexicalBlock(scope: !3101, file: !179, line: 199, column: 5)
!3109 = !DILocation(line: 202, column: 14, scope: !3108)
!3110 = !DILocation(line: 202, column: 17, scope: !3108)
!3111 = !DILocation(line: 202, column: 43, scope: !3108)
!3112 = !DILocation(line: 202, column: 33, scope: !3108)
!3113 = !DILocation(line: 202, column: 11, scope: !3108)
!3114 = !DILocation(line: 203, column: 11, scope: !3115)
!3115 = distinct !DILexicalBlock(scope: !3108, file: !179, line: 203, column: 11)
!3116 = !DILocation(line: 203, column: 15, scope: !3115)
!3117 = !DILocation(line: 203, column: 11, scope: !3108)
!3118 = !DILocalVariable(name: "tmp", scope: !3119, file: !179, line: 205, type: !84)
!3119 = distinct !DILexicalBlock(scope: !3115, file: !179, line: 204, column: 9)
!3120 = !DILocation(line: 205, column: 29, scope: !3119)
!3121 = !DILocation(line: 206, column: 25, scope: !3122)
!3122 = distinct !DILexicalBlock(scope: !3119, file: !179, line: 206, column: 15)
!3123 = !DILocation(line: 206, column: 15, scope: !3122)
!3124 = !DILocation(line: 206, column: 48, scope: !3122)
!3125 = !DILocation(line: 207, column: 15, scope: !3122)
!3126 = !DILocation(line: 207, column: 18, scope: !3122)
!3127 = !DILocation(line: 207, column: 22, scope: !3122)
!3128 = !DILocation(line: 207, column: 32, scope: !3122)
!3129 = !DILocation(line: 207, column: 43, scope: !3122)
!3130 = !DILocation(line: 207, column: 35, scope: !3122)
!3131 = !DILocation(line: 207, column: 47, scope: !3122)
!3132 = !DILocation(line: 206, column: 15, scope: !3119)
!3133 = !DILocation(line: 208, column: 20, scope: !3122)
!3134 = !DILocation(line: 208, column: 18, scope: !3122)
!3135 = !DILocation(line: 208, column: 13, scope: !3122)
!3136 = !DILocation(line: 210, column: 25, scope: !3122)
!3137 = !DILocation(line: 210, column: 23, scope: !3122)
!3138 = !DILocation(line: 211, column: 9, scope: !3119)
!3139 = !DILocation(line: 213, column: 16, scope: !3115)
!3140 = !DILocation(line: 213, column: 21, scope: !3115)
!3141 = !DILocation(line: 213, column: 14, scope: !3115)
!3142 = !DILocation(line: 214, column: 7, scope: !3108)
!3143 = !DILocation(line: 215, column: 24, scope: !3108)
!3144 = !DILocation(line: 215, column: 15, scope: !3108)
!3145 = !DILocation(line: 215, column: 13, scope: !3108)
!3146 = !DILocation(line: 216, column: 5, scope: !3108)
!3147 = !DILocation(line: 218, column: 7, scope: !3148)
!3148 = distinct !DILexicalBlock(scope: !178, file: !179, line: 218, column: 7)
!3149 = !DILocation(line: 218, column: 17, scope: !3148)
!3150 = !DILocation(line: 218, column: 7, scope: !178)
!3151 = !DILocation(line: 220, column: 14, scope: !3152)
!3152 = distinct !DILexicalBlock(scope: !3148, file: !179, line: 219, column: 5)
!3153 = !DILocation(line: 220, column: 8, scope: !3152)
!3154 = !DILocation(line: 220, column: 12, scope: !3152)
!3155 = !DILocation(line: 221, column: 11, scope: !3156)
!3156 = distinct !DILexicalBlock(scope: !3152, file: !179, line: 221, column: 11)
!3157 = !DILocation(line: 221, column: 11, scope: !3152)
!3158 = !DILocation(line: 222, column: 16, scope: !3156)
!3159 = !DILocation(line: 222, column: 10, scope: !3156)
!3160 = !DILocation(line: 222, column: 14, scope: !3156)
!3161 = !DILocation(line: 222, column: 9, scope: !3156)
!3162 = !DILocation(line: 223, column: 11, scope: !3163)
!3163 = distinct !DILexicalBlock(scope: !3152, file: !179, line: 223, column: 11)
!3164 = !DILocation(line: 223, column: 11, scope: !3152)
!3165 = !DILocation(line: 225, column: 23, scope: !3166)
!3166 = distinct !DILexicalBlock(scope: !3163, file: !179, line: 224, column: 9)
!3167 = !DILocation(line: 225, column: 12, scope: !3166)
!3168 = !DILocation(line: 225, column: 21, scope: !3166)
!3169 = !DILocation(line: 226, column: 13, scope: !3166)
!3170 = !DILocation(line: 227, column: 9, scope: !3166)
!3171 = !DILocation(line: 228, column: 11, scope: !3172)
!3172 = distinct !DILexicalBlock(scope: !3152, file: !179, line: 228, column: 11)
!3173 = !DILocation(line: 228, column: 11, scope: !3152)
!3174 = !DILocation(line: 230, column: 24, scope: !3175)
!3175 = distinct !DILexicalBlock(scope: !3172, file: !179, line: 229, column: 9)
!3176 = !DILocation(line: 230, column: 12, scope: !3175)
!3177 = !DILocation(line: 230, column: 22, scope: !3175)
!3178 = !DILocation(line: 231, column: 17, scope: !3175)
!3179 = !DILocation(line: 232, column: 9, scope: !3175)
!3180 = !DILocation(line: 233, column: 5, scope: !3152)
!3181 = !DILocation(line: 235, column: 9, scope: !178)
!3182 = !DILocation(line: 235, column: 3, scope: !178)
!3183 = !DILocation(line: 236, column: 9, scope: !178)
!3184 = !DILocation(line: 236, column: 3, scope: !178)
!3185 = !DILocation(line: 237, column: 10, scope: !178)
!3186 = !DILocation(line: 237, column: 22, scope: !178)
!3187 = !DILocation(line: 237, column: 3, scope: !178)
!3188 = distinct !DISubprogram(name: "version_etc_arn", scope: !3189, file: !3189, line: 61, type: !3190, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !210, retainedNodes: !4)
!3189 = !DIFile(filename: "lib/version-etc.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!3190 = !DISubroutineType(types: !3191)
!3191 = !{null, !3192, !69, !69, !69, !3245, !134}
!3192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3193, size: 64)
!3193 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !3194, line: 7, baseType: !3195)
!3194 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "")
!3195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !3196, line: 49, size: 1728, elements: !3197)
!3196 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "")
!3197 = !{!3198, !3199, !3200, !3201, !3202, !3203, !3204, !3205, !3206, !3207, !3208, !3209, !3210, !3213, !3215, !3216, !3217, !3219, !3220, !3222, !3226, !3229, !3231, !3234, !3237, !3238, !3239, !3240, !3241}
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !3195, file: !3196, line: 51, baseType: !72, size: 32)
!3199 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !3195, file: !3196, line: 54, baseType: !6, size: 64, offset: 64)
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !3195, file: !3196, line: 55, baseType: !6, size: 64, offset: 128)
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !3195, file: !3196, line: 56, baseType: !6, size: 64, offset: 192)
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !3195, file: !3196, line: 57, baseType: !6, size: 64, offset: 256)
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !3195, file: !3196, line: 58, baseType: !6, size: 64, offset: 320)
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !3195, file: !3196, line: 59, baseType: !6, size: 64, offset: 384)
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !3195, file: !3196, line: 60, baseType: !6, size: 64, offset: 448)
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !3195, file: !3196, line: 61, baseType: !6, size: 64, offset: 512)
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !3195, file: !3196, line: 64, baseType: !6, size: 64, offset: 576)
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !3195, file: !3196, line: 65, baseType: !6, size: 64, offset: 640)
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !3195, file: !3196, line: 66, baseType: !6, size: 64, offset: 704)
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !3195, file: !3196, line: 68, baseType: !3211, size: 64, offset: 768)
!3211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3212, size: 64)
!3212 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !3196, line: 36, flags: DIFlagFwdDecl)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !3195, file: !3196, line: 70, baseType: !3214, size: 64, offset: 832)
!3214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3195, size: 64)
!3215 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !3195, file: !3196, line: 72, baseType: !72, size: 32, offset: 896)
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !3195, file: !3196, line: 73, baseType: !72, size: 32, offset: 928)
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !3195, file: !3196, line: 74, baseType: !3218, size: 64, offset: 960)
!3218 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !15, line: 152, baseType: !870)
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !3195, file: !3196, line: 77, baseType: !133, size: 16, offset: 1024)
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !3195, file: !3196, line: 78, baseType: !3221, size: 8, offset: 1040)
!3221 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !3195, file: !3196, line: 79, baseType: !3223, size: 8, offset: 1048)
!3223 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 8, elements: !3224)
!3224 = !{!3225}
!3225 = !DISubrange(count: 1)
!3226 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !3195, file: !3196, line: 81, baseType: !3227, size: 64, offset: 1088)
!3227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3228, size: 64)
!3228 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !3196, line: 43, baseType: null)
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !3195, file: !3196, line: 89, baseType: !3230, size: 64, offset: 1152)
!3230 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !15, line: 153, baseType: !870)
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !3195, file: !3196, line: 91, baseType: !3232, size: 64, offset: 1216)
!3232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3233, size: 64)
!3233 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !3196, line: 37, flags: DIFlagFwdDecl)
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !3195, file: !3196, line: 92, baseType: !3235, size: 64, offset: 1280)
!3235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3236, size: 64)
!3236 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !3196, line: 38, flags: DIFlagFwdDecl)
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !3195, file: !3196, line: 93, baseType: !3214, size: 64, offset: 1344)
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !3195, file: !3196, line: 94, baseType: !8, size: 64, offset: 1408)
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !3195, file: !3196, line: 95, baseType: !134, size: 64, offset: 1472)
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !3195, file: !3196, line: 96, baseType: !72, size: 32, offset: 1536)
!3241 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !3195, file: !3196, line: 98, baseType: !3242, size: 160, offset: 1568)
!3242 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 160, elements: !3243)
!3243 = !{!3244}
!3244 = !DISubrange(count: 20)
!3245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !141, size: 64)
!3246 = !DILocalVariable(name: "stream", arg: 1, scope: !3188, file: !3189, line: 61, type: !3192)
!3247 = !DILocation(line: 61, column: 24, scope: !3188)
!3248 = !DILocalVariable(name: "command_name", arg: 2, scope: !3188, file: !3189, line: 62, type: !69)
!3249 = !DILocation(line: 62, column: 30, scope: !3188)
!3250 = !DILocalVariable(name: "package", arg: 3, scope: !3188, file: !3189, line: 62, type: !69)
!3251 = !DILocation(line: 62, column: 56, scope: !3188)
!3252 = !DILocalVariable(name: "version", arg: 4, scope: !3188, file: !3189, line: 63, type: !69)
!3253 = !DILocation(line: 63, column: 30, scope: !3188)
!3254 = !DILocalVariable(name: "authors", arg: 5, scope: !3188, file: !3189, line: 64, type: !3245)
!3255 = !DILocation(line: 64, column: 39, scope: !3188)
!3256 = !DILocalVariable(name: "n_authors", arg: 6, scope: !3188, file: !3189, line: 64, type: !134)
!3257 = !DILocation(line: 64, column: 55, scope: !3188)
!3258 = !DILocation(line: 66, column: 7, scope: !3259)
!3259 = distinct !DILexicalBlock(scope: !3188, file: !3189, line: 66, column: 7)
!3260 = !DILocation(line: 66, column: 7, scope: !3188)
!3261 = !DILocation(line: 67, column: 14, scope: !3259)
!3262 = !DILocation(line: 67, column: 38, scope: !3259)
!3263 = !DILocation(line: 67, column: 52, scope: !3259)
!3264 = !DILocation(line: 67, column: 61, scope: !3259)
!3265 = !DILocation(line: 67, column: 5, scope: !3259)
!3266 = !DILocation(line: 69, column: 14, scope: !3259)
!3267 = !DILocation(line: 69, column: 33, scope: !3259)
!3268 = !DILocation(line: 69, column: 42, scope: !3259)
!3269 = !DILocation(line: 69, column: 5, scope: !3259)
!3270 = !DILocation(line: 83, column: 12, scope: !3188)
!3271 = !DILocation(line: 83, column: 43, scope: !3188)
!3272 = !DILocation(line: 83, column: 3, scope: !3188)
!3273 = !DILocation(line: 85, column: 3, scope: !3188)
!3274 = !DILocation(line: 88, column: 12, scope: !3188)
!3275 = !DILocation(line: 88, column: 20, scope: !3188)
!3276 = !DILocation(line: 88, column: 3, scope: !3188)
!3277 = !DILocation(line: 95, column: 3, scope: !3188)
!3278 = !DILocation(line: 97, column: 11, scope: !3188)
!3279 = !DILocation(line: 97, column: 3, scope: !3188)
!3280 = !DILocation(line: 102, column: 7, scope: !3281)
!3281 = distinct !DILexicalBlock(scope: !3188, file: !3189, line: 98, column: 5)
!3282 = !DILocation(line: 105, column: 16, scope: !3281)
!3283 = !DILocation(line: 105, column: 24, scope: !3281)
!3284 = !DILocation(line: 105, column: 47, scope: !3281)
!3285 = !DILocation(line: 105, column: 7, scope: !3281)
!3286 = !DILocation(line: 106, column: 7, scope: !3281)
!3287 = !DILocation(line: 109, column: 16, scope: !3281)
!3288 = !DILocation(line: 109, column: 24, scope: !3281)
!3289 = !DILocation(line: 109, column: 54, scope: !3281)
!3290 = !DILocation(line: 109, column: 66, scope: !3281)
!3291 = !DILocation(line: 109, column: 7, scope: !3281)
!3292 = !DILocation(line: 110, column: 7, scope: !3281)
!3293 = !DILocation(line: 113, column: 16, scope: !3281)
!3294 = !DILocation(line: 113, column: 24, scope: !3281)
!3295 = !DILocation(line: 114, column: 16, scope: !3281)
!3296 = !DILocation(line: 114, column: 28, scope: !3281)
!3297 = !DILocation(line: 114, column: 40, scope: !3281)
!3298 = !DILocation(line: 113, column: 7, scope: !3281)
!3299 = !DILocation(line: 115, column: 7, scope: !3281)
!3300 = !DILocation(line: 120, column: 16, scope: !3281)
!3301 = !DILocation(line: 120, column: 24, scope: !3281)
!3302 = !DILocation(line: 121, column: 16, scope: !3281)
!3303 = !DILocation(line: 121, column: 28, scope: !3281)
!3304 = !DILocation(line: 121, column: 40, scope: !3281)
!3305 = !DILocation(line: 121, column: 52, scope: !3281)
!3306 = !DILocation(line: 120, column: 7, scope: !3281)
!3307 = !DILocation(line: 122, column: 7, scope: !3281)
!3308 = !DILocation(line: 127, column: 16, scope: !3281)
!3309 = !DILocation(line: 127, column: 24, scope: !3281)
!3310 = !DILocation(line: 128, column: 16, scope: !3281)
!3311 = !DILocation(line: 128, column: 28, scope: !3281)
!3312 = !DILocation(line: 128, column: 40, scope: !3281)
!3313 = !DILocation(line: 128, column: 52, scope: !3281)
!3314 = !DILocation(line: 128, column: 64, scope: !3281)
!3315 = !DILocation(line: 127, column: 7, scope: !3281)
!3316 = !DILocation(line: 129, column: 7, scope: !3281)
!3317 = !DILocation(line: 134, column: 16, scope: !3281)
!3318 = !DILocation(line: 134, column: 24, scope: !3281)
!3319 = !DILocation(line: 135, column: 16, scope: !3281)
!3320 = !DILocation(line: 135, column: 28, scope: !3281)
!3321 = !DILocation(line: 135, column: 40, scope: !3281)
!3322 = !DILocation(line: 135, column: 52, scope: !3281)
!3323 = !DILocation(line: 135, column: 64, scope: !3281)
!3324 = !DILocation(line: 136, column: 16, scope: !3281)
!3325 = !DILocation(line: 134, column: 7, scope: !3281)
!3326 = !DILocation(line: 137, column: 7, scope: !3281)
!3327 = !DILocation(line: 142, column: 16, scope: !3281)
!3328 = !DILocation(line: 142, column: 24, scope: !3281)
!3329 = !DILocation(line: 143, column: 16, scope: !3281)
!3330 = !DILocation(line: 143, column: 28, scope: !3281)
!3331 = !DILocation(line: 143, column: 40, scope: !3281)
!3332 = !DILocation(line: 143, column: 52, scope: !3281)
!3333 = !DILocation(line: 143, column: 64, scope: !3281)
!3334 = !DILocation(line: 144, column: 16, scope: !3281)
!3335 = !DILocation(line: 144, column: 28, scope: !3281)
!3336 = !DILocation(line: 142, column: 7, scope: !3281)
!3337 = !DILocation(line: 145, column: 7, scope: !3281)
!3338 = !DILocation(line: 150, column: 16, scope: !3281)
!3339 = !DILocation(line: 150, column: 24, scope: !3281)
!3340 = !DILocation(line: 152, column: 17, scope: !3281)
!3341 = !DILocation(line: 152, column: 29, scope: !3281)
!3342 = !DILocation(line: 152, column: 41, scope: !3281)
!3343 = !DILocation(line: 152, column: 53, scope: !3281)
!3344 = !DILocation(line: 152, column: 65, scope: !3281)
!3345 = !DILocation(line: 153, column: 17, scope: !3281)
!3346 = !DILocation(line: 153, column: 29, scope: !3281)
!3347 = !DILocation(line: 153, column: 41, scope: !3281)
!3348 = !DILocation(line: 150, column: 7, scope: !3281)
!3349 = !DILocation(line: 154, column: 7, scope: !3281)
!3350 = !DILocation(line: 159, column: 16, scope: !3281)
!3351 = !DILocation(line: 159, column: 24, scope: !3281)
!3352 = !DILocation(line: 161, column: 16, scope: !3281)
!3353 = !DILocation(line: 161, column: 28, scope: !3281)
!3354 = !DILocation(line: 161, column: 40, scope: !3281)
!3355 = !DILocation(line: 161, column: 52, scope: !3281)
!3356 = !DILocation(line: 161, column: 64, scope: !3281)
!3357 = !DILocation(line: 162, column: 16, scope: !3281)
!3358 = !DILocation(line: 162, column: 28, scope: !3281)
!3359 = !DILocation(line: 162, column: 40, scope: !3281)
!3360 = !DILocation(line: 162, column: 52, scope: !3281)
!3361 = !DILocation(line: 159, column: 7, scope: !3281)
!3362 = !DILocation(line: 163, column: 7, scope: !3281)
!3363 = !DILocation(line: 170, column: 16, scope: !3281)
!3364 = !DILocation(line: 170, column: 24, scope: !3281)
!3365 = !DILocation(line: 172, column: 17, scope: !3281)
!3366 = !DILocation(line: 172, column: 29, scope: !3281)
!3367 = !DILocation(line: 172, column: 41, scope: !3281)
!3368 = !DILocation(line: 172, column: 53, scope: !3281)
!3369 = !DILocation(line: 172, column: 65, scope: !3281)
!3370 = !DILocation(line: 173, column: 17, scope: !3281)
!3371 = !DILocation(line: 173, column: 29, scope: !3281)
!3372 = !DILocation(line: 173, column: 41, scope: !3281)
!3373 = !DILocation(line: 173, column: 53, scope: !3281)
!3374 = !DILocation(line: 170, column: 7, scope: !3281)
!3375 = !DILocation(line: 174, column: 7, scope: !3281)
!3376 = !DILocation(line: 176, column: 1, scope: !3188)
!3377 = distinct !DISubprogram(name: "version_etc_va", scope: !3189, file: !3189, line: 199, type: !3378, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !210, retainedNodes: !4)
!3378 = !DISubroutineType(types: !3379)
!3379 = !{null, !3192, !69, !69, !69, !3380}
!3380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3381, size: 64)
!3381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !211, line: 192, size: 192, elements: !3382)
!3382 = !{!3383, !3384, !3385, !3386}
!3383 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !3381, file: !211, line: 192, baseType: !16, size: 32)
!3384 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !3381, file: !211, line: 192, baseType: !16, size: 32, offset: 32)
!3385 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !3381, file: !211, line: 192, baseType: !8, size: 64, offset: 64)
!3386 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !3381, file: !211, line: 192, baseType: !8, size: 64, offset: 128)
!3387 = !DILocalVariable(name: "stream", arg: 1, scope: !3377, file: !3189, line: 199, type: !3192)
!3388 = !DILocation(line: 199, column: 23, scope: !3377)
!3389 = !DILocalVariable(name: "command_name", arg: 2, scope: !3377, file: !3189, line: 200, type: !69)
!3390 = !DILocation(line: 200, column: 29, scope: !3377)
!3391 = !DILocalVariable(name: "package", arg: 3, scope: !3377, file: !3189, line: 200, type: !69)
!3392 = !DILocation(line: 200, column: 55, scope: !3377)
!3393 = !DILocalVariable(name: "version", arg: 4, scope: !3377, file: !3189, line: 201, type: !69)
!3394 = !DILocation(line: 201, column: 29, scope: !3377)
!3395 = !DILocalVariable(name: "authors", arg: 5, scope: !3377, file: !3189, line: 201, type: !3380)
!3396 = !DILocation(line: 201, column: 46, scope: !3377)
!3397 = !DILocalVariable(name: "n_authors", scope: !3377, file: !3189, line: 203, type: !134)
!3398 = !DILocation(line: 203, column: 10, scope: !3377)
!3399 = !DILocalVariable(name: "authtab", scope: !3377, file: !3189, line: 204, type: !3400)
!3400 = !DICompositeType(tag: DW_TAG_array_type, baseType: !69, size: 640, elements: !76)
!3401 = !DILocation(line: 204, column: 15, scope: !3377)
!3402 = !DILocation(line: 206, column: 18, scope: !3403)
!3403 = distinct !DILexicalBlock(scope: !3377, file: !3189, line: 206, column: 3)
!3404 = !DILocation(line: 206, column: 8, scope: !3403)
!3405 = !DILocation(line: 207, column: 8, scope: !3406)
!3406 = distinct !DILexicalBlock(scope: !3403, file: !3189, line: 206, column: 3)
!3407 = !DILocation(line: 207, column: 18, scope: !3406)
!3408 = !DILocation(line: 208, column: 10, scope: !3406)
!3409 = !DILocation(line: 208, column: 35, scope: !3406)
!3410 = !DILocation(line: 208, column: 22, scope: !3406)
!3411 = !DILocation(line: 208, column: 14, scope: !3406)
!3412 = !DILocation(line: 208, column: 33, scope: !3406)
!3413 = !DILocation(line: 208, column: 67, scope: !3406)
!3414 = !DILocation(line: 0, scope: !3406)
!3415 = !DILocation(line: 206, column: 3, scope: !3403)
!3416 = !DILocation(line: 209, column: 17, scope: !3406)
!3417 = !DILocation(line: 206, column: 3, scope: !3406)
!3418 = distinct !{!3418, !3415, !3419}
!3419 = !DILocation(line: 210, column: 5, scope: !3403)
!3420 = !DILocation(line: 211, column: 20, scope: !3377)
!3421 = !DILocation(line: 211, column: 28, scope: !3377)
!3422 = !DILocation(line: 211, column: 42, scope: !3377)
!3423 = !DILocation(line: 211, column: 51, scope: !3377)
!3424 = !DILocation(line: 212, column: 20, scope: !3377)
!3425 = !DILocation(line: 212, column: 29, scope: !3377)
!3426 = !DILocation(line: 211, column: 3, scope: !3377)
!3427 = !DILocation(line: 213, column: 1, scope: !3377)
!3428 = distinct !DISubprogram(name: "version_etc", scope: !3189, file: !3189, line: 230, type: !3429, scopeLine: 233, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !210, retainedNodes: !4)
!3429 = !DISubroutineType(types: !3430)
!3430 = !{null, !3192, !69, !69, !69, null}
!3431 = !DILocalVariable(name: "stream", arg: 1, scope: !3428, file: !3189, line: 230, type: !3192)
!3432 = !DILocation(line: 230, column: 20, scope: !3428)
!3433 = !DILocalVariable(name: "command_name", arg: 2, scope: !3428, file: !3189, line: 231, type: !69)
!3434 = !DILocation(line: 231, column: 26, scope: !3428)
!3435 = !DILocalVariable(name: "package", arg: 3, scope: !3428, file: !3189, line: 231, type: !69)
!3436 = !DILocation(line: 231, column: 52, scope: !3428)
!3437 = !DILocalVariable(name: "version", arg: 4, scope: !3428, file: !3189, line: 232, type: !69)
!3438 = !DILocation(line: 232, column: 26, scope: !3428)
!3439 = !DILocalVariable(name: "authors", scope: !3428, file: !3189, line: 234, type: !3440)
!3440 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !868, line: 52, baseType: !3441)
!3441 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3442, line: 32, baseType: !3443)
!3442 = !DIFile(filename: "/usr/lib/llvm-9/lib/clang/9.0.1/include/stdarg.h", directory: "")
!3443 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !211, line: 234, baseType: !3444)
!3444 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3381, size: 192, elements: !3224)
!3445 = !DILocation(line: 234, column: 11, scope: !3428)
!3446 = !DILocation(line: 236, column: 3, scope: !3428)
!3447 = !DILocation(line: 237, column: 19, scope: !3428)
!3448 = !DILocation(line: 237, column: 27, scope: !3428)
!3449 = !DILocation(line: 237, column: 41, scope: !3428)
!3450 = !DILocation(line: 237, column: 50, scope: !3428)
!3451 = !DILocation(line: 237, column: 59, scope: !3428)
!3452 = !DILocation(line: 237, column: 3, scope: !3428)
!3453 = !DILocation(line: 238, column: 3, scope: !3428)
!3454 = !DILocation(line: 239, column: 1, scope: !3428)
!3455 = !DILocalVariable(name: "stream", arg: 1, scope: !3456, file: !3189, line: 230, type: !3459)
!3456 = distinct !DISubprogram(name: "version_etc", scope: !3189, file: !3189, line: 230, type: !3457, scopeLine: 233, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3493, retainedNodes: !4)
!3457 = !DISubroutineType(types: !3458)
!3458 = !{null, !3459, !69, !69, !69, null}
!3459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3460, size: 64)
!3460 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !3194, line: 7, baseType: !3461)
!3461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !3196, line: 49, size: 1728, elements: !3462)
!3462 = !{!3463, !3464, !3465, !3466, !3467, !3468, !3469, !3470, !3471, !3472, !3473, !3474, !3475, !3476, !3478, !3479, !3480, !3481, !3482, !3483, !3484, !3485, !3486, !3487, !3488, !3489, !3490, !3491, !3492}
!3463 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !3461, file: !3196, line: 51, baseType: !72, size: 32)
!3464 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !3461, file: !3196, line: 54, baseType: !6, size: 64, offset: 64)
!3465 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !3461, file: !3196, line: 55, baseType: !6, size: 64, offset: 128)
!3466 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !3461, file: !3196, line: 56, baseType: !6, size: 64, offset: 192)
!3467 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !3461, file: !3196, line: 57, baseType: !6, size: 64, offset: 256)
!3468 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !3461, file: !3196, line: 58, baseType: !6, size: 64, offset: 320)
!3469 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !3461, file: !3196, line: 59, baseType: !6, size: 64, offset: 384)
!3470 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !3461, file: !3196, line: 60, baseType: !6, size: 64, offset: 448)
!3471 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !3461, file: !3196, line: 61, baseType: !6, size: 64, offset: 512)
!3472 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !3461, file: !3196, line: 64, baseType: !6, size: 64, offset: 576)
!3473 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !3461, file: !3196, line: 65, baseType: !6, size: 64, offset: 640)
!3474 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !3461, file: !3196, line: 66, baseType: !6, size: 64, offset: 704)
!3475 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !3461, file: !3196, line: 68, baseType: !3211, size: 64, offset: 768)
!3476 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !3461, file: !3196, line: 70, baseType: !3477, size: 64, offset: 832)
!3477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3461, size: 64)
!3478 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !3461, file: !3196, line: 72, baseType: !72, size: 32, offset: 896)
!3479 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !3461, file: !3196, line: 73, baseType: !72, size: 32, offset: 928)
!3480 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !3461, file: !3196, line: 74, baseType: !3218, size: 64, offset: 960)
!3481 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !3461, file: !3196, line: 77, baseType: !133, size: 16, offset: 1024)
!3482 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !3461, file: !3196, line: 78, baseType: !3221, size: 8, offset: 1040)
!3483 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !3461, file: !3196, line: 79, baseType: !3223, size: 8, offset: 1048)
!3484 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !3461, file: !3196, line: 81, baseType: !3227, size: 64, offset: 1088)
!3485 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !3461, file: !3196, line: 89, baseType: !3230, size: 64, offset: 1152)
!3486 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !3461, file: !3196, line: 91, baseType: !3232, size: 64, offset: 1216)
!3487 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !3461, file: !3196, line: 92, baseType: !3235, size: 64, offset: 1280)
!3488 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !3461, file: !3196, line: 93, baseType: !3477, size: 64, offset: 1344)
!3489 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !3461, file: !3196, line: 94, baseType: !8, size: 64, offset: 1408)
!3490 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !3461, file: !3196, line: 95, baseType: !134, size: 64, offset: 1472)
!3491 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !3461, file: !3196, line: 96, baseType: !72, size: 32, offset: 1536)
!3492 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !3461, file: !3196, line: 98, baseType: !3242, size: 160, offset: 1568)
!3493 = distinct !DICompileUnit(language: DW_LANG_C99, file: !211, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !212, nameTableKind: None)
!3494 = !DILocalVariable(name: "command_name", arg: 2, scope: !3456, file: !3189, line: 231, type: !69)
!3495 = !DILocalVariable(name: "package", arg: 3, scope: !3456, file: !3189, line: 231, type: !69)
!3496 = !DILocalVariable(name: "version", arg: 4, scope: !3456, file: !3189, line: 232, type: !69)
!3497 = !DILocalVariable(name: "authors", scope: !3456, file: !3189, line: 234, type: !3498)
!3498 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !868, line: 52, baseType: !3499)
!3499 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3442, line: 32, baseType: !3500)
!3500 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !211, line: 234, baseType: !3501)
!3501 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3502, size: 192, elements: !3224)
!3502 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !211, line: 192, size: 192, elements: !3503)
!3503 = !{!3504, !3505, !3506, !3507}
!3504 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !3502, file: !211, line: 192, baseType: !16, size: 32)
!3505 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !3502, file: !211, line: 192, baseType: !16, size: 32, offset: 32)
!3506 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !3502, file: !211, line: 192, baseType: !8, size: 64, offset: 64)
!3507 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !3502, file: !211, line: 192, baseType: !8, size: 64, offset: 128)
!3508 = distinct !DISubprogram(name: "xmalloc", scope: !3509, file: !3509, line: 39, type: !3510, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !213, retainedNodes: !4)
!3509 = !DIFile(filename: "lib/xmalloc.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!3510 = !DISubroutineType(types: !3511)
!3511 = !{!8, !134}
!3512 = !DILocalVariable(name: "n", arg: 1, scope: !3508, file: !3509, line: 39, type: !134)
!3513 = !DILocation(line: 39, column: 17, scope: !3508)
!3514 = !DILocalVariable(name: "p", scope: !3508, file: !3509, line: 41, type: !8)
!3515 = !DILocation(line: 41, column: 9, scope: !3508)
!3516 = !DILocation(line: 41, column: 21, scope: !3508)
!3517 = !DILocation(line: 41, column: 13, scope: !3508)
!3518 = !DILocation(line: 42, column: 8, scope: !3519)
!3519 = distinct !DILexicalBlock(scope: !3508, file: !3509, line: 42, column: 7)
!3520 = !DILocation(line: 42, column: 10, scope: !3519)
!3521 = !DILocation(line: 42, column: 13, scope: !3519)
!3522 = !DILocation(line: 42, column: 15, scope: !3519)
!3523 = !DILocation(line: 42, column: 7, scope: !3508)
!3524 = !DILocation(line: 43, column: 5, scope: !3519)
!3525 = !DILocation(line: 44, column: 10, scope: !3508)
!3526 = !DILocation(line: 44, column: 3, scope: !3508)
!3527 = distinct !DISubprogram(name: "xrealloc", scope: !3509, file: !3509, line: 51, type: !3528, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !213, retainedNodes: !4)
!3528 = !DISubroutineType(types: !3529)
!3529 = !{!8, !8, !134}
!3530 = !DILocalVariable(name: "p", arg: 1, scope: !3527, file: !3509, line: 51, type: !8)
!3531 = !DILocation(line: 51, column: 17, scope: !3527)
!3532 = !DILocalVariable(name: "n", arg: 2, scope: !3527, file: !3509, line: 51, type: !134)
!3533 = !DILocation(line: 51, column: 27, scope: !3527)
!3534 = !DILocation(line: 53, column: 8, scope: !3535)
!3535 = distinct !DILexicalBlock(scope: !3527, file: !3509, line: 53, column: 7)
!3536 = !DILocation(line: 53, column: 10, scope: !3535)
!3537 = !DILocation(line: 53, column: 13, scope: !3535)
!3538 = !DILocation(line: 53, column: 7, scope: !3527)
!3539 = !DILocation(line: 57, column: 13, scope: !3540)
!3540 = distinct !DILexicalBlock(scope: !3535, file: !3509, line: 54, column: 5)
!3541 = !DILocation(line: 57, column: 7, scope: !3540)
!3542 = !DILocation(line: 58, column: 7, scope: !3540)
!3543 = !DILocation(line: 61, column: 16, scope: !3527)
!3544 = !DILocation(line: 61, column: 19, scope: !3527)
!3545 = !DILocation(line: 61, column: 7, scope: !3527)
!3546 = !DILocation(line: 61, column: 5, scope: !3527)
!3547 = !DILocation(line: 62, column: 8, scope: !3548)
!3548 = distinct !DILexicalBlock(scope: !3527, file: !3509, line: 62, column: 7)
!3549 = !DILocation(line: 62, column: 10, scope: !3548)
!3550 = !DILocation(line: 62, column: 13, scope: !3548)
!3551 = !DILocation(line: 62, column: 7, scope: !3527)
!3552 = !DILocation(line: 63, column: 5, scope: !3548)
!3553 = !DILocation(line: 64, column: 10, scope: !3527)
!3554 = !DILocation(line: 64, column: 3, scope: !3527)
!3555 = !DILocation(line: 65, column: 1, scope: !3527)
!3556 = !DILocalVariable(name: "p", arg: 1, scope: !3557, file: !3509, line: 51, type: !8)
!3557 = distinct !DISubprogram(name: "xrealloc", scope: !3509, file: !3509, line: 51, type: !3528, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3558, retainedNodes: !4)
!3558 = distinct !DICompileUnit(language: DW_LANG_C99, file: !214, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !215, nameTableKind: None)
!3559 = !DILocalVariable(name: "n", arg: 2, scope: !3557, file: !3509, line: 51, type: !134)
!3560 = distinct !DISubprogram(name: "xcharalloc", scope: !3561, file: !3561, line: 216, type: !3562, scopeLine: 217, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !213, retainedNodes: !4)
!3561 = !DIFile(filename: "./lib/xalloc.h", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!3562 = !DISubroutineType(types: !3563)
!3563 = !{!6, !134}
!3564 = !DILocalVariable(name: "n", arg: 1, scope: !3560, file: !3561, line: 216, type: !134)
!3565 = !DILocation(line: 216, column: 20, scope: !3560)
!3566 = !DILocation(line: 218, column: 10, scope: !3560)
!3567 = !DILocation(line: 218, column: 3, scope: !3560)
!3568 = distinct !DISubprogram(name: "xmemdup", scope: !3509, file: !3509, line: 111, type: !3569, scopeLine: 112, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !213, retainedNodes: !4)
!3569 = !DISubroutineType(types: !3570)
!3570 = !{!8, !3571, !134}
!3571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3572, size: 64)
!3572 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!3573 = !DILocalVariable(name: "p", arg: 1, scope: !3568, file: !3509, line: 111, type: !3571)
!3574 = !DILocation(line: 111, column: 22, scope: !3568)
!3575 = !DILocalVariable(name: "s", arg: 2, scope: !3568, file: !3509, line: 111, type: !134)
!3576 = !DILocation(line: 111, column: 32, scope: !3568)
!3577 = !DILocation(line: 113, column: 27, scope: !3568)
!3578 = !DILocation(line: 113, column: 18, scope: !3568)
!3579 = !DILocation(line: 113, column: 31, scope: !3568)
!3580 = !DILocation(line: 113, column: 34, scope: !3568)
!3581 = !DILocation(line: 113, column: 10, scope: !3568)
!3582 = !DILocation(line: 113, column: 3, scope: !3568)
!3583 = !DILocalVariable(name: "p", arg: 1, scope: !3584, file: !3509, line: 111, type: !3571)
!3584 = distinct !DISubprogram(name: "xmemdup", scope: !3509, file: !3509, line: 111, type: !3569, scopeLine: 112, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3585, retainedNodes: !4)
!3585 = distinct !DICompileUnit(language: DW_LANG_C99, file: !214, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !215, nameTableKind: None)
!3586 = !DILocalVariable(name: "s", arg: 2, scope: !3584, file: !3509, line: 111, type: !134)
!3587 = distinct !DISubprogram(name: "xstrdup", scope: !3509, file: !3509, line: 119, type: !2767, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !213, retainedNodes: !4)
!3588 = !DILocalVariable(name: "string", arg: 1, scope: !3587, file: !3509, line: 119, type: !69)
!3589 = !DILocation(line: 119, column: 22, scope: !3587)
!3590 = !DILocation(line: 121, column: 19, scope: !3587)
!3591 = !DILocation(line: 121, column: 35, scope: !3587)
!3592 = !DILocation(line: 121, column: 27, scope: !3587)
!3593 = !DILocation(line: 121, column: 43, scope: !3587)
!3594 = !DILocation(line: 121, column: 10, scope: !3587)
!3595 = !DILocation(line: 121, column: 3, scope: !3587)
!3596 = distinct !DISubprogram(name: "xalloc_die", scope: !3597, file: !3597, line: 32, type: !1320, scopeLine: 33, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !216, retainedNodes: !4)
!3597 = !DIFile(filename: "lib/xalloc-die.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!3598 = !DILocation(line: 34, column: 10, scope: !3596)
!3599 = !DILocation(line: 34, column: 33, scope: !3596)
!3600 = !DILocation(line: 34, column: 3, scope: !3596)
!3601 = !DILocation(line: 40, column: 3, scope: !3596)
!3602 = distinct !DISubprogram(name: "xgetgroups", scope: !3603, file: !3603, line: 31, type: !3604, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !218, retainedNodes: !4)
!3603 = !DIFile(filename: "lib/xgetgroups.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!3604 = !DISubroutineType(types: !3605)
!3605 = !{!72, !69, !21, !3606}
!3606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !183, size: 64)
!3607 = !DILocalVariable(name: "username", arg: 1, scope: !3602, file: !3603, line: 31, type: !69)
!3608 = !DILocation(line: 31, column: 25, scope: !3602)
!3609 = !DILocalVariable(name: "gid", arg: 2, scope: !3602, file: !3603, line: 31, type: !21)
!3610 = !DILocation(line: 31, column: 41, scope: !3602)
!3611 = !DILocalVariable(name: "groups", arg: 3, scope: !3602, file: !3603, line: 31, type: !3606)
!3612 = !DILocation(line: 31, column: 54, scope: !3602)
!3613 = !DILocalVariable(name: "result", scope: !3602, file: !3603, line: 33, type: !72)
!3614 = !DILocation(line: 33, column: 7, scope: !3602)
!3615 = !DILocation(line: 33, column: 28, scope: !3602)
!3616 = !DILocation(line: 33, column: 38, scope: !3602)
!3617 = !DILocation(line: 33, column: 43, scope: !3602)
!3618 = !DILocation(line: 33, column: 16, scope: !3602)
!3619 = !DILocation(line: 34, column: 7, scope: !3620)
!3620 = distinct !DILexicalBlock(scope: !3602, file: !3603, line: 34, column: 7)
!3621 = !DILocation(line: 34, column: 14, scope: !3620)
!3622 = !DILocation(line: 34, column: 20, scope: !3620)
!3623 = !DILocation(line: 34, column: 23, scope: !3620)
!3624 = !DILocation(line: 34, column: 29, scope: !3620)
!3625 = !DILocation(line: 34, column: 7, scope: !3602)
!3626 = !DILocation(line: 35, column: 5, scope: !3620)
!3627 = !DILocation(line: 36, column: 10, scope: !3602)
!3628 = !DILocation(line: 36, column: 3, scope: !3602)
!3629 = !DILocalVariable(name: "username", arg: 1, scope: !3630, file: !3603, line: 31, type: !69)
!3630 = distinct !DISubprogram(name: "xgetgroups", scope: !3603, file: !3603, line: 31, type: !3604, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3631, retainedNodes: !4)
!3631 = distinct !DICompileUnit(language: DW_LANG_C99, file: !219, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, nameTableKind: None)
!3632 = !DILocalVariable(name: "gid", arg: 2, scope: !3630, file: !3603, line: 31, type: !21)
!3633 = !DILocalVariable(name: "groups", arg: 3, scope: !3630, file: !3603, line: 31, type: !3606)
!3634 = !DILocalVariable(name: "result", scope: !3630, file: !3603, line: 33, type: !72)
!3635 = distinct !DISubprogram(name: "xstrtoul", scope: !3636, file: !3636, line: 76, type: !3637, scopeLine: 78, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !220, retainedNodes: !4)
!3636 = !DIFile(filename: "./lib/xstrtol.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!3637 = !DISubroutineType(types: !3638)
!3638 = !{!3639, !69, !184, !72, !3640, !69}
!3639 = !DIDerivedType(tag: DW_TAG_typedef, name: "strtol_error", file: !224, line: 38, baseType: !223)
!3640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !84, size: 64)
!3641 = !DILocalVariable(name: "s", arg: 1, scope: !3635, file: !3636, line: 76, type: !69)
!3642 = !DILocation(line: 76, column: 24, scope: !3635)
!3643 = !DILocalVariable(name: "ptr", arg: 2, scope: !3635, file: !3636, line: 76, type: !184)
!3644 = !DILocation(line: 76, column: 34, scope: !3635)
!3645 = !DILocalVariable(name: "strtol_base", arg: 3, scope: !3635, file: !3636, line: 76, type: !72)
!3646 = !DILocation(line: 76, column: 43, scope: !3635)
!3647 = !DILocalVariable(name: "val", arg: 4, scope: !3635, file: !3636, line: 77, type: !3640)
!3648 = !DILocation(line: 77, column: 24, scope: !3635)
!3649 = !DILocalVariable(name: "valid_suffixes", arg: 5, scope: !3635, file: !3636, line: 77, type: !69)
!3650 = !DILocation(line: 77, column: 41, scope: !3635)
!3651 = !DILocalVariable(name: "t_ptr", scope: !3635, file: !3636, line: 79, type: !6)
!3652 = !DILocation(line: 79, column: 9, scope: !3635)
!3653 = !DILocalVariable(name: "p", scope: !3635, file: !3636, line: 80, type: !184)
!3654 = !DILocation(line: 80, column: 10, scope: !3635)
!3655 = !DILocalVariable(name: "tmp", scope: !3635, file: !3636, line: 81, type: !84)
!3656 = !DILocation(line: 81, column: 14, scope: !3635)
!3657 = !DILocalVariable(name: "err", scope: !3635, file: !3636, line: 82, type: !3639)
!3658 = !DILocation(line: 82, column: 16, scope: !3635)
!3659 = !DILocation(line: 84, column: 3, scope: !3660)
!3660 = distinct !DILexicalBlock(scope: !3661, file: !3636, line: 84, column: 3)
!3661 = distinct !DILexicalBlock(scope: !3635, file: !3636, line: 84, column: 3)
!3662 = !DILocation(line: 84, column: 3, scope: !3661)
!3663 = !DILocation(line: 86, column: 8, scope: !3635)
!3664 = !DILocation(line: 86, column: 14, scope: !3635)
!3665 = !DILocation(line: 86, column: 5, scope: !3635)
!3666 = !DILocation(line: 88, column: 3, scope: !3635)
!3667 = !DILocation(line: 88, column: 9, scope: !3635)
!3668 = !DILocalVariable(name: "q", scope: !3669, file: !3636, line: 92, type: !69)
!3669 = distinct !DILexicalBlock(scope: !3670, file: !3636, line: 91, column: 5)
!3670 = distinct !DILexicalBlock(scope: !3635, file: !3636, line: 90, column: 7)
!3671 = !DILocation(line: 92, column: 19, scope: !3669)
!3672 = !DILocation(line: 92, column: 23, scope: !3669)
!3673 = !DILocalVariable(name: "ch", scope: !3669, file: !3636, line: 93, type: !240)
!3674 = !DILocation(line: 93, column: 21, scope: !3669)
!3675 = !DILocation(line: 93, column: 27, scope: !3669)
!3676 = !DILocation(line: 93, column: 26, scope: !3669)
!3677 = !DILocation(line: 94, column: 7, scope: !3669)
!3678 = !DILocation(line: 94, column: 14, scope: !3669)
!3679 = !DILocation(line: 95, column: 15, scope: !3669)
!3680 = !DILocation(line: 95, column: 14, scope: !3669)
!3681 = !DILocation(line: 95, column: 12, scope: !3669)
!3682 = distinct !{!3682, !3677, !3683}
!3683 = !DILocation(line: 95, column: 17, scope: !3669)
!3684 = !DILocation(line: 96, column: 11, scope: !3685)
!3685 = distinct !DILexicalBlock(scope: !3669, file: !3636, line: 96, column: 11)
!3686 = !DILocation(line: 96, column: 14, scope: !3685)
!3687 = !DILocation(line: 96, column: 11, scope: !3669)
!3688 = !DILocation(line: 97, column: 9, scope: !3685)
!3689 = !DILocation(line: 100, column: 19, scope: !3635)
!3690 = !DILocation(line: 100, column: 22, scope: !3635)
!3691 = !DILocation(line: 100, column: 25, scope: !3635)
!3692 = !DILocation(line: 100, column: 9, scope: !3635)
!3693 = !DILocation(line: 100, column: 7, scope: !3635)
!3694 = !DILocation(line: 102, column: 8, scope: !3695)
!3695 = distinct !DILexicalBlock(scope: !3635, file: !3636, line: 102, column: 7)
!3696 = !DILocation(line: 102, column: 7, scope: !3695)
!3697 = !DILocation(line: 102, column: 13, scope: !3695)
!3698 = !DILocation(line: 102, column: 10, scope: !3695)
!3699 = !DILocation(line: 102, column: 7, scope: !3635)
!3700 = !DILocation(line: 106, column: 11, scope: !3701)
!3701 = distinct !DILexicalBlock(scope: !3702, file: !3636, line: 106, column: 11)
!3702 = distinct !DILexicalBlock(scope: !3695, file: !3636, line: 103, column: 5)
!3703 = !DILocation(line: 106, column: 26, scope: !3701)
!3704 = !DILocation(line: 106, column: 31, scope: !3701)
!3705 = !DILocation(line: 106, column: 30, scope: !3701)
!3706 = !DILocation(line: 106, column: 29, scope: !3701)
!3707 = !DILocation(line: 106, column: 33, scope: !3701)
!3708 = !DILocation(line: 106, column: 44, scope: !3701)
!3709 = !DILocation(line: 106, column: 62, scope: !3701)
!3710 = !DILocation(line: 106, column: 61, scope: !3701)
!3711 = !DILocation(line: 106, column: 60, scope: !3701)
!3712 = !DILocation(line: 106, column: 36, scope: !3701)
!3713 = !DILocation(line: 106, column: 11, scope: !3702)
!3714 = !DILocation(line: 107, column: 13, scope: !3701)
!3715 = !DILocation(line: 107, column: 9, scope: !3701)
!3716 = !DILocation(line: 109, column: 9, scope: !3701)
!3717 = !DILocation(line: 110, column: 5, scope: !3702)
!3718 = !DILocation(line: 111, column: 12, scope: !3719)
!3719 = distinct !DILexicalBlock(scope: !3695, file: !3636, line: 111, column: 12)
!3720 = !DILocation(line: 111, column: 18, scope: !3719)
!3721 = !DILocation(line: 111, column: 12, scope: !3695)
!3722 = !DILocation(line: 113, column: 11, scope: !3723)
!3723 = distinct !DILexicalBlock(scope: !3724, file: !3636, line: 113, column: 11)
!3724 = distinct !DILexicalBlock(scope: !3719, file: !3636, line: 112, column: 5)
!3725 = !DILocation(line: 113, column: 17, scope: !3723)
!3726 = !DILocation(line: 113, column: 11, scope: !3724)
!3727 = !DILocation(line: 114, column: 9, scope: !3723)
!3728 = !DILocation(line: 115, column: 11, scope: !3724)
!3729 = !DILocation(line: 116, column: 5, scope: !3724)
!3730 = !DILocation(line: 121, column: 8, scope: !3731)
!3731 = distinct !DILexicalBlock(scope: !3635, file: !3636, line: 121, column: 7)
!3732 = !DILocation(line: 121, column: 7, scope: !3635)
!3733 = !DILocation(line: 123, column: 14, scope: !3734)
!3734 = distinct !DILexicalBlock(scope: !3731, file: !3636, line: 122, column: 5)
!3735 = !DILocation(line: 123, column: 8, scope: !3734)
!3736 = !DILocation(line: 123, column: 12, scope: !3734)
!3737 = !DILocation(line: 124, column: 14, scope: !3734)
!3738 = !DILocation(line: 124, column: 7, scope: !3734)
!3739 = !DILocation(line: 127, column: 9, scope: !3740)
!3740 = distinct !DILexicalBlock(scope: !3635, file: !3636, line: 127, column: 7)
!3741 = !DILocation(line: 127, column: 8, scope: !3740)
!3742 = !DILocation(line: 127, column: 7, scope: !3740)
!3743 = !DILocation(line: 127, column: 11, scope: !3740)
!3744 = !DILocation(line: 127, column: 7, scope: !3635)
!3745 = !DILocalVariable(name: "base", scope: !3746, file: !3636, line: 129, type: !72)
!3746 = distinct !DILexicalBlock(scope: !3740, file: !3636, line: 128, column: 5)
!3747 = !DILocation(line: 129, column: 11, scope: !3746)
!3748 = !DILocalVariable(name: "suffixes", scope: !3746, file: !3636, line: 130, type: !72)
!3749 = !DILocation(line: 130, column: 11, scope: !3746)
!3750 = !DILocalVariable(name: "overflow", scope: !3746, file: !3636, line: 131, type: !3639)
!3751 = !DILocation(line: 131, column: 20, scope: !3746)
!3752 = !DILocation(line: 133, column: 20, scope: !3753)
!3753 = distinct !DILexicalBlock(scope: !3746, file: !3636, line: 133, column: 11)
!3754 = !DILocation(line: 133, column: 38, scope: !3753)
!3755 = !DILocation(line: 133, column: 37, scope: !3753)
!3756 = !DILocation(line: 133, column: 36, scope: !3753)
!3757 = !DILocation(line: 133, column: 12, scope: !3753)
!3758 = !DILocation(line: 133, column: 11, scope: !3746)
!3759 = !DILocation(line: 135, column: 18, scope: !3760)
!3760 = distinct !DILexicalBlock(scope: !3753, file: !3636, line: 134, column: 9)
!3761 = !DILocation(line: 135, column: 12, scope: !3760)
!3762 = !DILocation(line: 135, column: 16, scope: !3760)
!3763 = !DILocation(line: 136, column: 18, scope: !3760)
!3764 = !DILocation(line: 136, column: 22, scope: !3760)
!3765 = !DILocation(line: 136, column: 11, scope: !3760)
!3766 = !DILocation(line: 139, column: 17, scope: !3746)
!3767 = !DILocation(line: 139, column: 16, scope: !3746)
!3768 = !DILocation(line: 139, column: 15, scope: !3746)
!3769 = !DILocation(line: 139, column: 7, scope: !3746)
!3770 = !DILocation(line: 151, column: 23, scope: !3771)
!3771 = distinct !DILexicalBlock(scope: !3772, file: !3636, line: 151, column: 15)
!3772 = distinct !DILexicalBlock(scope: !3746, file: !3636, line: 140, column: 9)
!3773 = !DILocation(line: 151, column: 15, scope: !3771)
!3774 = !DILocation(line: 151, column: 15, scope: !3772)
!3775 = !DILocation(line: 152, column: 21, scope: !3771)
!3776 = !DILocation(line: 152, column: 13, scope: !3771)
!3777 = !DILocation(line: 155, column: 21, scope: !3778)
!3778 = distinct !DILexicalBlock(scope: !3779, file: !3636, line: 155, column: 21)
!3779 = distinct !DILexicalBlock(scope: !3771, file: !3636, line: 153, column: 15)
!3780 = !DILocation(line: 155, column: 29, scope: !3778)
!3781 = !DILocation(line: 155, column: 21, scope: !3779)
!3782 = !DILocation(line: 156, column: 28, scope: !3778)
!3783 = !DILocation(line: 156, column: 19, scope: !3778)
!3784 = !DILocation(line: 157, column: 17, scope: !3779)
!3785 = !DILocation(line: 161, column: 22, scope: !3779)
!3786 = !DILocation(line: 162, column: 25, scope: !3779)
!3787 = !DILocation(line: 163, column: 17, scope: !3779)
!3788 = !DILocation(line: 164, column: 15, scope: !3779)
!3789 = !DILocation(line: 165, column: 9, scope: !3772)
!3790 = !DILocation(line: 167, column: 17, scope: !3746)
!3791 = !DILocation(line: 167, column: 16, scope: !3746)
!3792 = !DILocation(line: 167, column: 15, scope: !3746)
!3793 = !DILocation(line: 167, column: 7, scope: !3746)
!3794 = !DILocation(line: 170, column: 22, scope: !3795)
!3795 = distinct !DILexicalBlock(scope: !3746, file: !3636, line: 168, column: 9)
!3796 = !DILocation(line: 170, column: 20, scope: !3795)
!3797 = !DILocation(line: 171, column: 11, scope: !3795)
!3798 = !DILocation(line: 177, column: 22, scope: !3795)
!3799 = !DILocation(line: 177, column: 20, scope: !3795)
!3800 = !DILocation(line: 178, column: 11, scope: !3795)
!3801 = !DILocation(line: 181, column: 20, scope: !3795)
!3802 = !DILocation(line: 182, column: 11, scope: !3795)
!3803 = !DILocation(line: 185, column: 48, scope: !3795)
!3804 = !DILocation(line: 185, column: 22, scope: !3795)
!3805 = !DILocation(line: 185, column: 20, scope: !3795)
!3806 = !DILocation(line: 186, column: 11, scope: !3795)
!3807 = !DILocation(line: 190, column: 48, scope: !3795)
!3808 = !DILocation(line: 190, column: 22, scope: !3795)
!3809 = !DILocation(line: 190, column: 20, scope: !3795)
!3810 = !DILocation(line: 191, column: 11, scope: !3795)
!3811 = !DILocation(line: 195, column: 48, scope: !3795)
!3812 = !DILocation(line: 195, column: 22, scope: !3795)
!3813 = !DILocation(line: 195, column: 20, scope: !3795)
!3814 = !DILocation(line: 196, column: 11, scope: !3795)
!3815 = !DILocation(line: 200, column: 48, scope: !3795)
!3816 = !DILocation(line: 200, column: 22, scope: !3795)
!3817 = !DILocation(line: 200, column: 20, scope: !3795)
!3818 = !DILocation(line: 201, column: 11, scope: !3795)
!3819 = !DILocation(line: 204, column: 48, scope: !3795)
!3820 = !DILocation(line: 204, column: 22, scope: !3795)
!3821 = !DILocation(line: 204, column: 20, scope: !3795)
!3822 = !DILocation(line: 205, column: 11, scope: !3795)
!3823 = !DILocation(line: 209, column: 48, scope: !3795)
!3824 = !DILocation(line: 209, column: 22, scope: !3795)
!3825 = !DILocation(line: 209, column: 20, scope: !3795)
!3826 = !DILocation(line: 210, column: 11, scope: !3795)
!3827 = !DILocation(line: 213, column: 22, scope: !3795)
!3828 = !DILocation(line: 213, column: 20, scope: !3795)
!3829 = !DILocation(line: 214, column: 11, scope: !3795)
!3830 = !DILocation(line: 217, column: 48, scope: !3795)
!3831 = !DILocation(line: 217, column: 22, scope: !3795)
!3832 = !DILocation(line: 217, column: 20, scope: !3795)
!3833 = !DILocation(line: 218, column: 11, scope: !3795)
!3834 = !DILocation(line: 221, column: 48, scope: !3795)
!3835 = !DILocation(line: 221, column: 22, scope: !3795)
!3836 = !DILocation(line: 221, column: 20, scope: !3795)
!3837 = !DILocation(line: 222, column: 11, scope: !3795)
!3838 = !DILocation(line: 225, column: 18, scope: !3795)
!3839 = !DILocation(line: 225, column: 12, scope: !3795)
!3840 = !DILocation(line: 225, column: 16, scope: !3795)
!3841 = !DILocation(line: 226, column: 18, scope: !3795)
!3842 = !DILocation(line: 226, column: 22, scope: !3795)
!3843 = !DILocation(line: 226, column: 11, scope: !3795)
!3844 = !DILocation(line: 229, column: 14, scope: !3746)
!3845 = !DILocation(line: 229, column: 11, scope: !3746)
!3846 = !DILocation(line: 230, column: 13, scope: !3746)
!3847 = !DILocation(line: 230, column: 8, scope: !3746)
!3848 = !DILocation(line: 230, column: 10, scope: !3746)
!3849 = !DILocation(line: 231, column: 13, scope: !3850)
!3850 = distinct !DILexicalBlock(scope: !3746, file: !3636, line: 231, column: 11)
!3851 = !DILocation(line: 231, column: 12, scope: !3850)
!3852 = !DILocation(line: 231, column: 11, scope: !3850)
!3853 = !DILocation(line: 231, column: 11, scope: !3746)
!3854 = !DILocation(line: 232, column: 13, scope: !3850)
!3855 = !DILocation(line: 232, column: 9, scope: !3850)
!3856 = !DILocation(line: 233, column: 5, scope: !3746)
!3857 = !DILocation(line: 235, column: 10, scope: !3635)
!3858 = !DILocation(line: 235, column: 4, scope: !3635)
!3859 = !DILocation(line: 235, column: 8, scope: !3635)
!3860 = !DILocation(line: 236, column: 10, scope: !3635)
!3861 = !DILocation(line: 236, column: 3, scope: !3635)
!3862 = !DILocation(line: 237, column: 1, scope: !3635)
!3863 = !DILocalVariable(name: "q", scope: !3864, file: !3636, line: 92, type: !69)
!3864 = distinct !DILexicalBlock(scope: !3865, file: !3636, line: 91, column: 5)
!3865 = distinct !DILexicalBlock(scope: !3866, file: !3636, line: 90, column: 7)
!3866 = distinct !DISubprogram(name: "xstrtoul", scope: !3636, file: !3636, line: 76, type: !3637, scopeLine: 78, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3867, retainedNodes: !4)
!3867 = distinct !DICompileUnit(language: DW_LANG_C99, file: !221, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !222, retainedTypes: !231, nameTableKind: None)
!3868 = !DILocalVariable(name: "ch", scope: !3864, file: !3636, line: 93, type: !240)
!3869 = distinct !DISubprogram(name: "bkm_scale", scope: !3636, file: !3636, line: 48, type: !3870, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !220, retainedNodes: !4)
!3870 = !DISubroutineType(types: !3871)
!3871 = !{!3639, !3640, !72}
!3872 = !DILocalVariable(name: "x", arg: 1, scope: !3869, file: !3636, line: 48, type: !3640)
!3873 = !DILocation(line: 48, column: 24, scope: !3869)
!3874 = !DILocalVariable(name: "scale_factor", arg: 2, scope: !3869, file: !3636, line: 48, type: !72)
!3875 = !DILocation(line: 48, column: 31, scope: !3869)
!3876 = !DILocation(line: 55, column: 26, scope: !3877)
!3877 = distinct !DILexicalBlock(scope: !3869, file: !3636, line: 55, column: 7)
!3878 = !DILocation(line: 55, column: 24, scope: !3877)
!3879 = !DILocation(line: 55, column: 42, scope: !3877)
!3880 = !DILocation(line: 55, column: 41, scope: !3877)
!3881 = !DILocation(line: 55, column: 39, scope: !3877)
!3882 = !DILocation(line: 55, column: 7, scope: !3869)
!3883 = !DILocation(line: 57, column: 8, scope: !3884)
!3884 = distinct !DILexicalBlock(scope: !3877, file: !3636, line: 56, column: 5)
!3885 = !DILocation(line: 57, column: 10, scope: !3884)
!3886 = !DILocation(line: 58, column: 7, scope: !3884)
!3887 = !DILocation(line: 60, column: 9, scope: !3869)
!3888 = !DILocation(line: 60, column: 4, scope: !3869)
!3889 = !DILocation(line: 60, column: 6, scope: !3869)
!3890 = !DILocation(line: 61, column: 3, scope: !3869)
!3891 = !DILocation(line: 62, column: 1, scope: !3869)
!3892 = distinct !DISubprogram(name: "bkm_scale_by_power", scope: !3636, file: !3636, line: 65, type: !3893, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !220, retainedNodes: !4)
!3893 = !DISubroutineType(types: !3894)
!3894 = !{!3639, !3640, !72, !72}
!3895 = !DILocalVariable(name: "x", arg: 1, scope: !3892, file: !3636, line: 65, type: !3640)
!3896 = !DILocation(line: 65, column: 33, scope: !3892)
!3897 = !DILocalVariable(name: "base", arg: 2, scope: !3892, file: !3636, line: 65, type: !72)
!3898 = !DILocation(line: 65, column: 40, scope: !3892)
!3899 = !DILocalVariable(name: "power", arg: 3, scope: !3892, file: !3636, line: 65, type: !72)
!3900 = !DILocation(line: 65, column: 50, scope: !3892)
!3901 = !DILocalVariable(name: "err", scope: !3892, file: !3636, line: 67, type: !3639)
!3902 = !DILocation(line: 67, column: 16, scope: !3892)
!3903 = !DILocation(line: 68, column: 3, scope: !3892)
!3904 = !DILocation(line: 68, column: 15, scope: !3892)
!3905 = !DILocation(line: 69, column: 23, scope: !3892)
!3906 = !DILocation(line: 69, column: 26, scope: !3892)
!3907 = !DILocation(line: 69, column: 12, scope: !3892)
!3908 = !DILocation(line: 69, column: 9, scope: !3892)
!3909 = distinct !{!3909, !3903, !3910}
!3910 = !DILocation(line: 69, column: 30, scope: !3892)
!3911 = !DILocation(line: 70, column: 10, scope: !3892)
!3912 = !DILocation(line: 70, column: 3, scope: !3892)
!3913 = distinct !DISubprogram(name: "rpl_mbrtowc", scope: !3914, file: !3914, line: 86, type: !3915, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !232, retainedNodes: !4)
!3914 = !DIFile(filename: "lib/mbrtowc.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!3915 = !DISubroutineType(types: !3916)
!3916 = !{!134, !3917, !69, !134, !3918}
!3917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2337, size: 64)
!3918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3919, size: 64)
!3919 = !DIDerivedType(tag: DW_TAG_typedef, name: "mbstate_t", file: !2308, line: 6, baseType: !3920)
!3920 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mbstate_t", file: !2310, line: 21, baseType: !3921)
!3921 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2310, line: 13, size: 64, elements: !3922)
!3922 = !{!3923, !3924}
!3923 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !3921, file: !2310, line: 15, baseType: !72, size: 32)
!3924 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !3921, file: !2310, line: 20, baseType: !3925, size: 32, offset: 32)
!3925 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3921, file: !2310, line: 16, size: 32, elements: !3926)
!3926 = !{!3927, !3928}
!3927 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !3925, file: !2310, line: 18, baseType: !16, size: 32)
!3928 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !3925, file: !2310, line: 19, baseType: !2319, size: 32)
!3929 = !DILocalVariable(name: "pwc", arg: 1, scope: !3913, file: !3914, line: 86, type: !3917)
!3930 = !DILocation(line: 86, column: 23, scope: !3913)
!3931 = !DILocalVariable(name: "s", arg: 2, scope: !3913, file: !3914, line: 86, type: !69)
!3932 = !DILocation(line: 86, column: 40, scope: !3913)
!3933 = !DILocalVariable(name: "n", arg: 3, scope: !3913, file: !3914, line: 86, type: !134)
!3934 = !DILocation(line: 86, column: 50, scope: !3913)
!3935 = !DILocalVariable(name: "ps", arg: 4, scope: !3913, file: !3914, line: 86, type: !3918)
!3936 = !DILocation(line: 86, column: 64, scope: !3913)
!3937 = !DILocalVariable(name: "ret", scope: !3913, file: !3914, line: 88, type: !134)
!3938 = !DILocation(line: 88, column: 10, scope: !3913)
!3939 = !DILocalVariable(name: "wc", scope: !3913, file: !3914, line: 89, type: !2337)
!3940 = !DILocation(line: 89, column: 11, scope: !3913)
!3941 = !DILocation(line: 105, column: 9, scope: !3942)
!3942 = distinct !DILexicalBlock(scope: !3913, file: !3914, line: 105, column: 7)
!3943 = !DILocation(line: 105, column: 7, scope: !3913)
!3944 = !DILocation(line: 106, column: 9, scope: !3942)
!3945 = !DILocation(line: 106, column: 5, scope: !3942)
!3946 = !DILocation(line: 145, column: 18, scope: !3913)
!3947 = !DILocation(line: 145, column: 23, scope: !3913)
!3948 = !DILocation(line: 145, column: 26, scope: !3913)
!3949 = !DILocation(line: 145, column: 29, scope: !3913)
!3950 = !DILocation(line: 145, column: 9, scope: !3913)
!3951 = !DILocation(line: 145, column: 7, scope: !3913)
!3952 = !DILocation(line: 154, column: 22, scope: !3953)
!3953 = distinct !DILexicalBlock(scope: !3913, file: !3914, line: 154, column: 7)
!3954 = !DILocation(line: 154, column: 19, scope: !3953)
!3955 = !DILocation(line: 154, column: 26, scope: !3953)
!3956 = !DILocation(line: 154, column: 29, scope: !3953)
!3957 = !DILocation(line: 154, column: 31, scope: !3953)
!3958 = !DILocation(line: 154, column: 36, scope: !3953)
!3959 = !DILocation(line: 154, column: 41, scope: !3953)
!3960 = !DILocation(line: 154, column: 7, scope: !3913)
!3961 = !DILocalVariable(name: "uc", scope: !3962, file: !3914, line: 156, type: !240)
!3962 = distinct !DILexicalBlock(scope: !3953, file: !3914, line: 155, column: 5)
!3963 = !DILocation(line: 156, column: 21, scope: !3962)
!3964 = !DILocation(line: 156, column: 27, scope: !3962)
!3965 = !DILocation(line: 156, column: 26, scope: !3962)
!3966 = !DILocation(line: 157, column: 14, scope: !3962)
!3967 = !DILocation(line: 157, column: 8, scope: !3962)
!3968 = !DILocation(line: 157, column: 12, scope: !3962)
!3969 = !DILocation(line: 158, column: 7, scope: !3962)
!3970 = !DILocation(line: 162, column: 10, scope: !3913)
!3971 = !DILocation(line: 162, column: 3, scope: !3913)
!3972 = !DILocation(line: 163, column: 1, scope: !3913)
!3973 = !DILocalVariable(name: "pwc", arg: 1, scope: !3974, file: !3914, line: 86, type: !3917)
!3974 = distinct !DISubprogram(name: "rpl_mbrtowc", scope: !3914, file: !3914, line: 86, type: !3975, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3988, retainedNodes: !4)
!3975 = !DISubroutineType(types: !3976)
!3976 = !{!134, !3917, !69, !134, !3977}
!3977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3978, size: 64)
!3978 = !DIDerivedType(tag: DW_TAG_typedef, name: "mbstate_t", file: !2308, line: 6, baseType: !3979)
!3979 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mbstate_t", file: !2310, line: 21, baseType: !3980)
!3980 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2310, line: 13, size: 64, elements: !3981)
!3981 = !{!3982, !3983}
!3982 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !3980, file: !2310, line: 15, baseType: !72, size: 32)
!3983 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !3980, file: !2310, line: 20, baseType: !3984, size: 32, offset: 32)
!3984 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3980, file: !2310, line: 16, size: 32, elements: !3985)
!3985 = !{!3986, !3987}
!3986 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !3984, file: !2310, line: 18, baseType: !16, size: 32)
!3987 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !3984, file: !2310, line: 19, baseType: !2319, size: 32)
!3988 = distinct !DICompileUnit(language: DW_LANG_C99, file: !233, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !234, nameTableKind: None)
!3989 = !DILocalVariable(name: "s", arg: 2, scope: !3974, file: !3914, line: 86, type: !69)
!3990 = !DILocalVariable(name: "n", arg: 3, scope: !3974, file: !3914, line: 86, type: !134)
!3991 = !DILocalVariable(name: "ps", arg: 4, scope: !3974, file: !3914, line: 86, type: !3977)
!3992 = !DILocalVariable(name: "ret", scope: !3974, file: !3914, line: 88, type: !134)
!3993 = !DILocalVariable(name: "wc", scope: !3974, file: !3914, line: 89, type: !2337)
!3994 = distinct !DISubprogram(name: "c_strcasecmp", scope: !3995, file: !3995, line: 27, type: !3996, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !235, retainedNodes: !4)
!3995 = !DIFile(filename: "lib/c-strcasecmp.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!3996 = !DISubroutineType(types: !3997)
!3997 = !{!72, !69, !69}
!3998 = !DILocalVariable(name: "s1", arg: 1, scope: !3994, file: !3995, line: 27, type: !69)
!3999 = !DILocation(line: 27, column: 27, scope: !3994)
!4000 = !DILocalVariable(name: "s2", arg: 2, scope: !3994, file: !3995, line: 27, type: !69)
!4001 = !DILocation(line: 27, column: 43, scope: !3994)
!4002 = !DILocalVariable(name: "p1", scope: !3994, file: !3995, line: 29, type: !238)
!4003 = !DILocation(line: 29, column: 33, scope: !3994)
!4004 = !DILocation(line: 29, column: 62, scope: !3994)
!4005 = !DILocalVariable(name: "p2", scope: !3994, file: !3995, line: 30, type: !238)
!4006 = !DILocation(line: 30, column: 33, scope: !3994)
!4007 = !DILocation(line: 30, column: 62, scope: !3994)
!4008 = !DILocalVariable(name: "c1", scope: !3994, file: !3995, line: 31, type: !240)
!4009 = !DILocation(line: 31, column: 17, scope: !3994)
!4010 = !DILocalVariable(name: "c2", scope: !3994, file: !3995, line: 31, type: !240)
!4011 = !DILocation(line: 31, column: 21, scope: !3994)
!4012 = !DILocation(line: 33, column: 7, scope: !4013)
!4013 = distinct !DILexicalBlock(scope: !3994, file: !3995, line: 33, column: 7)
!4014 = !DILocation(line: 33, column: 13, scope: !4013)
!4015 = !DILocation(line: 33, column: 10, scope: !4013)
!4016 = !DILocation(line: 33, column: 7, scope: !3994)
!4017 = !DILocation(line: 34, column: 5, scope: !4013)
!4018 = !DILocation(line: 36, column: 3, scope: !3994)
!4019 = !DILocation(line: 38, column: 24, scope: !4020)
!4020 = distinct !DILexicalBlock(scope: !3994, file: !3995, line: 37, column: 5)
!4021 = !DILocation(line: 38, column: 23, scope: !4020)
!4022 = !DILocation(line: 38, column: 12, scope: !4020)
!4023 = !DILocation(line: 38, column: 10, scope: !4020)
!4024 = !DILocation(line: 39, column: 24, scope: !4020)
!4025 = !DILocation(line: 39, column: 23, scope: !4020)
!4026 = !DILocation(line: 39, column: 12, scope: !4020)
!4027 = !DILocation(line: 39, column: 10, scope: !4020)
!4028 = !DILocation(line: 41, column: 11, scope: !4029)
!4029 = distinct !DILexicalBlock(scope: !4020, file: !3995, line: 41, column: 11)
!4030 = !DILocation(line: 41, column: 14, scope: !4029)
!4031 = !DILocation(line: 41, column: 11, scope: !4020)
!4032 = !DILocation(line: 42, column: 9, scope: !4029)
!4033 = !DILocation(line: 44, column: 7, scope: !4020)
!4034 = !DILocation(line: 45, column: 7, scope: !4020)
!4035 = !DILocation(line: 46, column: 5, scope: !4020)
!4036 = !DILocation(line: 47, column: 10, scope: !3994)
!4037 = !DILocation(line: 47, column: 16, scope: !3994)
!4038 = !DILocation(line: 47, column: 13, scope: !3994)
!4039 = distinct !{!4039, !4018, !4040}
!4040 = !DILocation(line: 47, column: 18, scope: !3994)
!4041 = !DILocation(line: 50, column: 12, scope: !4042)
!4042 = distinct !DILexicalBlock(scope: !3994, file: !3995, line: 49, column: 7)
!4043 = !DILocation(line: 50, column: 17, scope: !4042)
!4044 = !DILocation(line: 50, column: 15, scope: !4042)
!4045 = !DILocation(line: 50, column: 5, scope: !4042)
!4046 = !DILocation(line: 56, column: 1, scope: !3994)
!4047 = !DILocalVariable(name: "s1", arg: 1, scope: !4048, file: !3995, line: 27, type: !69)
!4048 = distinct !DISubprogram(name: "c_strcasecmp", scope: !3995, file: !3995, line: 27, type: !3996, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !4049, retainedNodes: !4)
!4049 = distinct !DICompileUnit(language: DW_LANG_C99, file: !236, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !237, nameTableKind: None)
!4050 = !DILocalVariable(name: "s2", arg: 2, scope: !4048, file: !3995, line: 27, type: !69)
!4051 = !DILocalVariable(name: "p1", scope: !4048, file: !3995, line: 29, type: !238)
!4052 = !DILocalVariable(name: "p2", scope: !4048, file: !3995, line: 30, type: !238)
!4053 = !DILocalVariable(name: "c1", scope: !4048, file: !3995, line: 31, type: !240)
!4054 = !DILocalVariable(name: "c2", scope: !4048, file: !3995, line: 31, type: !240)
!4055 = distinct !DISubprogram(name: "close_stream", scope: !4056, file: !4056, line: 56, type: !4057, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !241, retainedNodes: !4)
!4056 = !DIFile(filename: "lib/close-stream.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!4057 = !DISubroutineType(types: !4058)
!4058 = !{!72, !4059}
!4059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4060, size: 64)
!4060 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !3194, line: 7, baseType: !4061)
!4061 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !3196, line: 49, size: 1728, elements: !4062)
!4062 = !{!4063, !4064, !4065, !4066, !4067, !4068, !4069, !4070, !4071, !4072, !4073, !4074, !4075, !4076, !4078, !4079, !4080, !4081, !4082, !4083, !4084, !4085, !4086, !4087, !4088, !4089, !4090, !4091, !4092}
!4063 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !4061, file: !3196, line: 51, baseType: !72, size: 32)
!4064 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !4061, file: !3196, line: 54, baseType: !6, size: 64, offset: 64)
!4065 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !4061, file: !3196, line: 55, baseType: !6, size: 64, offset: 128)
!4066 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !4061, file: !3196, line: 56, baseType: !6, size: 64, offset: 192)
!4067 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !4061, file: !3196, line: 57, baseType: !6, size: 64, offset: 256)
!4068 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !4061, file: !3196, line: 58, baseType: !6, size: 64, offset: 320)
!4069 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !4061, file: !3196, line: 59, baseType: !6, size: 64, offset: 384)
!4070 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !4061, file: !3196, line: 60, baseType: !6, size: 64, offset: 448)
!4071 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !4061, file: !3196, line: 61, baseType: !6, size: 64, offset: 512)
!4072 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !4061, file: !3196, line: 64, baseType: !6, size: 64, offset: 576)
!4073 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !4061, file: !3196, line: 65, baseType: !6, size: 64, offset: 640)
!4074 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !4061, file: !3196, line: 66, baseType: !6, size: 64, offset: 704)
!4075 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !4061, file: !3196, line: 68, baseType: !3211, size: 64, offset: 768)
!4076 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !4061, file: !3196, line: 70, baseType: !4077, size: 64, offset: 832)
!4077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4061, size: 64)
!4078 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !4061, file: !3196, line: 72, baseType: !72, size: 32, offset: 896)
!4079 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !4061, file: !3196, line: 73, baseType: !72, size: 32, offset: 928)
!4080 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !4061, file: !3196, line: 74, baseType: !3218, size: 64, offset: 960)
!4081 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !4061, file: !3196, line: 77, baseType: !133, size: 16, offset: 1024)
!4082 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !4061, file: !3196, line: 78, baseType: !3221, size: 8, offset: 1040)
!4083 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !4061, file: !3196, line: 79, baseType: !3223, size: 8, offset: 1048)
!4084 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !4061, file: !3196, line: 81, baseType: !3227, size: 64, offset: 1088)
!4085 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !4061, file: !3196, line: 89, baseType: !3230, size: 64, offset: 1152)
!4086 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !4061, file: !3196, line: 91, baseType: !3232, size: 64, offset: 1216)
!4087 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !4061, file: !3196, line: 92, baseType: !3235, size: 64, offset: 1280)
!4088 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !4061, file: !3196, line: 93, baseType: !4077, size: 64, offset: 1344)
!4089 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !4061, file: !3196, line: 94, baseType: !8, size: 64, offset: 1408)
!4090 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !4061, file: !3196, line: 95, baseType: !134, size: 64, offset: 1472)
!4091 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !4061, file: !3196, line: 96, baseType: !72, size: 32, offset: 1536)
!4092 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !4061, file: !3196, line: 98, baseType: !3242, size: 160, offset: 1568)
!4093 = !DILocalVariable(name: "stream", arg: 1, scope: !4055, file: !4056, line: 56, type: !4059)
!4094 = !DILocation(line: 56, column: 21, scope: !4055)
!4095 = !DILocalVariable(name: "some_pending", scope: !4055, file: !4056, line: 58, type: !4096)
!4096 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !27)
!4097 = !DILocation(line: 58, column: 14, scope: !4055)
!4098 = !DILocation(line: 58, column: 42, scope: !4055)
!4099 = !DILocation(line: 58, column: 30, scope: !4055)
!4100 = !DILocation(line: 58, column: 50, scope: !4055)
!4101 = !DILocalVariable(name: "prev_fail", scope: !4055, file: !4056, line: 59, type: !4096)
!4102 = !DILocation(line: 59, column: 14, scope: !4055)
!4103 = !DILocation(line: 59, column: 27, scope: !4055)
!4104 = !DILocation(line: 59, column: 43, scope: !4055)
!4105 = !DILocalVariable(name: "fclose_fail", scope: !4055, file: !4056, line: 60, type: !4096)
!4106 = !DILocation(line: 60, column: 14, scope: !4055)
!4107 = !DILocation(line: 60, column: 37, scope: !4055)
!4108 = !DILocation(line: 60, column: 29, scope: !4055)
!4109 = !DILocation(line: 60, column: 45, scope: !4055)
!4110 = !DILocation(line: 70, column: 7, scope: !4111)
!4111 = distinct !DILexicalBlock(scope: !4055, file: !4056, line: 70, column: 7)
!4112 = !DILocation(line: 70, column: 17, scope: !4111)
!4113 = !DILocation(line: 70, column: 21, scope: !4111)
!4114 = !DILocation(line: 70, column: 33, scope: !4111)
!4115 = !DILocation(line: 70, column: 37, scope: !4111)
!4116 = !DILocation(line: 70, column: 50, scope: !4111)
!4117 = !DILocation(line: 70, column: 53, scope: !4111)
!4118 = !DILocation(line: 70, column: 59, scope: !4111)
!4119 = !DILocation(line: 70, column: 7, scope: !4055)
!4120 = !DILocation(line: 72, column: 13, scope: !4121)
!4121 = distinct !DILexicalBlock(scope: !4122, file: !4056, line: 72, column: 11)
!4122 = distinct !DILexicalBlock(scope: !4111, file: !4056, line: 71, column: 5)
!4123 = !DILocation(line: 72, column: 11, scope: !4122)
!4124 = !DILocation(line: 73, column: 9, scope: !4121)
!4125 = !DILocation(line: 73, column: 15, scope: !4121)
!4126 = !DILocation(line: 74, column: 7, scope: !4122)
!4127 = !DILocation(line: 77, column: 3, scope: !4055)
!4128 = !DILocation(line: 78, column: 1, scope: !4055)
!4129 = distinct !DISubprogram(name: "hard_locale", scope: !4130, file: !4130, line: 27, type: !4131, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !243, retainedNodes: !4)
!4130 = !DIFile(filename: "lib/hard-locale.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!4131 = !DISubroutineType(types: !4132)
!4132 = !{!27, !72}
!4133 = !DILocalVariable(name: "category", arg: 1, scope: !4129, file: !4130, line: 27, type: !72)
!4134 = !DILocation(line: 27, column: 18, scope: !4129)
!4135 = !DILocalVariable(name: "locale", scope: !4129, file: !4130, line: 29, type: !4136)
!4136 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 2056, elements: !4137)
!4137 = !{!4138}
!4138 = !DISubrange(count: 257)
!4139 = !DILocation(line: 29, column: 8, scope: !4129)
!4140 = !DILocation(line: 31, column: 25, scope: !4141)
!4141 = distinct !DILexicalBlock(scope: !4129, file: !4130, line: 31, column: 7)
!4142 = !DILocation(line: 31, column: 35, scope: !4141)
!4143 = !DILocation(line: 31, column: 7, scope: !4141)
!4144 = !DILocation(line: 31, column: 7, scope: !4129)
!4145 = !DILocation(line: 32, column: 5, scope: !4141)
!4146 = !DILocation(line: 34, column: 20, scope: !4129)
!4147 = !DILocation(line: 34, column: 12, scope: !4129)
!4148 = !DILocation(line: 34, column: 33, scope: !4129)
!4149 = !DILocation(line: 34, column: 38, scope: !4129)
!4150 = !DILocation(line: 34, column: 49, scope: !4129)
!4151 = !DILocation(line: 34, column: 41, scope: !4129)
!4152 = !DILocation(line: 34, column: 66, scope: !4129)
!4153 = !DILocation(line: 34, column: 10, scope: !4129)
!4154 = !DILocation(line: 34, column: 3, scope: !4129)
!4155 = !DILocation(line: 35, column: 1, scope: !4129)
!4156 = distinct !DISubprogram(name: "locale_charset", scope: !4157, file: !4157, line: 831, type: !4158, scopeLine: 832, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !245, retainedNodes: !4)
!4157 = !DIFile(filename: "lib/localcharset.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!4158 = !DISubroutineType(types: !4159)
!4159 = !{!69}
!4160 = !DILocalVariable(name: "codeset", scope: !4156, file: !4157, line: 833, type: !69)
!4161 = !DILocation(line: 833, column: 15, scope: !4156)
!4162 = !DILocation(line: 847, column: 13, scope: !4156)
!4163 = !DILocation(line: 847, column: 11, scope: !4156)
!4164 = !DILocation(line: 911, column: 7, scope: !4165)
!4165 = distinct !DILexicalBlock(scope: !4156, file: !4157, line: 911, column: 7)
!4166 = !DILocation(line: 911, column: 15, scope: !4165)
!4167 = !DILocation(line: 911, column: 7, scope: !4156)
!4168 = !DILocation(line: 913, column: 13, scope: !4165)
!4169 = !DILocation(line: 913, column: 5, scope: !4165)
!4170 = !DILocation(line: 1070, column: 13, scope: !4171)
!4171 = distinct !DILexicalBlock(scope: !4172, file: !4157, line: 1070, column: 13)
!4172 = distinct !DILexicalBlock(scope: !4173, file: !4157, line: 1060, column: 7)
!4173 = distinct !DILexicalBlock(scope: !4156, file: !4157, line: 1019, column: 3)
!4174 = !DILocation(line: 1070, column: 24, scope: !4171)
!4175 = !DILocation(line: 1070, column: 13, scope: !4172)
!4176 = !DILocation(line: 1071, column: 19, scope: !4171)
!4177 = !DILocation(line: 1071, column: 11, scope: !4171)
!4178 = !DILocation(line: 1158, column: 10, scope: !4156)
!4179 = !DILocation(line: 1158, column: 3, scope: !4156)
!4180 = !DILocalVariable(name: "codeset", scope: !4181, file: !4157, line: 833, type: !69)
!4181 = distinct !DISubprogram(name: "locale_charset", scope: !4157, file: !4157, line: 831, type: !4158, scopeLine: 832, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !4182, retainedNodes: !4)
!4182 = distinct !DICompileUnit(language: DW_LANG_C99, file: !246, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !212, nameTableKind: None)
!4183 = distinct !DISubprogram(name: "mgetgroups", scope: !4184, file: !4184, line: 66, type: !3604, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !247, retainedNodes: !4)
!4184 = !DIFile(filename: "lib/mgetgroups.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!4185 = !DILocalVariable(name: "username", arg: 1, scope: !4183, file: !4184, line: 66, type: !69)
!4186 = !DILocation(line: 66, column: 25, scope: !4183)
!4187 = !DILocalVariable(name: "gid", arg: 2, scope: !4183, file: !4184, line: 66, type: !21)
!4188 = !DILocation(line: 66, column: 41, scope: !4183)
!4189 = !DILocalVariable(name: "groups", arg: 3, scope: !4183, file: !4184, line: 66, type: !3606)
!4190 = !DILocation(line: 66, column: 54, scope: !4183)
!4191 = !DILocalVariable(name: "max_n_groups", scope: !4183, file: !4184, line: 68, type: !72)
!4192 = !DILocation(line: 68, column: 7, scope: !4183)
!4193 = !DILocalVariable(name: "ng", scope: !4183, file: !4184, line: 69, type: !72)
!4194 = !DILocation(line: 69, column: 7, scope: !4183)
!4195 = !DILocalVariable(name: "g", scope: !4183, file: !4184, line: 70, type: !183)
!4196 = !DILocation(line: 70, column: 10, scope: !4183)
!4197 = !DILocation(line: 81, column: 7, scope: !4198)
!4198 = distinct !DILexicalBlock(scope: !4183, file: !4184, line: 81, column: 7)
!4199 = !DILocation(line: 81, column: 7, scope: !4183)
!4200 = !DILocation(line: 84, column: 20, scope: !4201)
!4201 = distinct !DILexicalBlock(scope: !4198, file: !4184, line: 82, column: 5)
!4202 = !DILocation(line: 86, column: 35, scope: !4201)
!4203 = !DILocation(line: 86, column: 11, scope: !4201)
!4204 = !DILocation(line: 86, column: 9, scope: !4201)
!4205 = !DILocation(line: 87, column: 11, scope: !4206)
!4206 = distinct !DILexicalBlock(scope: !4201, file: !4184, line: 87, column: 11)
!4207 = !DILocation(line: 87, column: 13, scope: !4206)
!4208 = !DILocation(line: 87, column: 11, scope: !4201)
!4209 = !DILocation(line: 88, column: 9, scope: !4206)
!4210 = !DILocation(line: 90, column: 7, scope: !4201)
!4211 = !DILocalVariable(name: "h", scope: !4212, file: !4184, line: 92, type: !183)
!4212 = distinct !DILexicalBlock(scope: !4201, file: !4184, line: 91, column: 9)
!4213 = !DILocation(line: 92, column: 18, scope: !4212)
!4214 = !DILocalVariable(name: "last_n_groups", scope: !4212, file: !4184, line: 93, type: !72)
!4215 = !DILocation(line: 93, column: 15, scope: !4212)
!4216 = !DILocation(line: 93, column: 31, scope: !4212)
!4217 = !DILocation(line: 96, column: 30, scope: !4212)
!4218 = !DILocation(line: 96, column: 40, scope: !4212)
!4219 = !DILocation(line: 96, column: 45, scope: !4212)
!4220 = !DILocation(line: 96, column: 16, scope: !4212)
!4221 = !DILocation(line: 96, column: 14, scope: !4212)
!4222 = !DILocation(line: 100, column: 15, scope: !4223)
!4223 = distinct !DILexicalBlock(scope: !4212, file: !4184, line: 100, column: 15)
!4224 = !DILocation(line: 100, column: 18, scope: !4223)
!4225 = !DILocation(line: 100, column: 22, scope: !4223)
!4226 = !DILocation(line: 100, column: 25, scope: !4223)
!4227 = !DILocation(line: 100, column: 42, scope: !4223)
!4228 = !DILocation(line: 100, column: 39, scope: !4223)
!4229 = !DILocation(line: 100, column: 15, scope: !4212)
!4230 = !DILocation(line: 101, column: 26, scope: !4223)
!4231 = !DILocation(line: 101, column: 13, scope: !4223)
!4232 = !DILocation(line: 103, column: 38, scope: !4233)
!4233 = distinct !DILexicalBlock(scope: !4212, file: !4184, line: 103, column: 15)
!4234 = !DILocation(line: 103, column: 41, scope: !4233)
!4235 = !DILocation(line: 103, column: 20, scope: !4233)
!4236 = !DILocation(line: 103, column: 18, scope: !4233)
!4237 = !DILocation(line: 103, column: 56, scope: !4233)
!4238 = !DILocation(line: 103, column: 15, scope: !4212)
!4239 = !DILocalVariable(name: "saved_errno", scope: !4240, file: !4184, line: 105, type: !72)
!4240 = distinct !DILexicalBlock(scope: !4233, file: !4184, line: 104, column: 13)
!4241 = !DILocation(line: 105, column: 19, scope: !4240)
!4242 = !DILocation(line: 105, column: 33, scope: !4240)
!4243 = !DILocation(line: 106, column: 21, scope: !4240)
!4244 = !DILocation(line: 106, column: 15, scope: !4240)
!4245 = !DILocation(line: 107, column: 23, scope: !4240)
!4246 = !DILocation(line: 107, column: 15, scope: !4240)
!4247 = !DILocation(line: 107, column: 21, scope: !4240)
!4248 = !DILocation(line: 108, column: 15, scope: !4240)
!4249 = !DILocation(line: 110, column: 15, scope: !4212)
!4250 = !DILocation(line: 110, column: 13, scope: !4212)
!4251 = !DILocation(line: 112, column: 20, scope: !4252)
!4252 = distinct !DILexicalBlock(scope: !4212, file: !4184, line: 112, column: 15)
!4253 = !DILocation(line: 112, column: 17, scope: !4252)
!4254 = !DILocation(line: 112, column: 15, scope: !4212)
!4255 = !DILocation(line: 114, column: 25, scope: !4256)
!4256 = distinct !DILexicalBlock(scope: !4252, file: !4184, line: 113, column: 13)
!4257 = !DILocation(line: 114, column: 16, scope: !4256)
!4258 = !DILocation(line: 114, column: 23, scope: !4256)
!4259 = !DILocation(line: 117, column: 22, scope: !4256)
!4260 = !DILocation(line: 117, column: 15, scope: !4256)
!4261 = distinct !{!4261, !4210, !4262}
!4262 = !DILocation(line: 119, column: 9, scope: !4201)
!4263 = !DILocation(line: 124, column: 19, scope: !4183)
!4264 = !DILocation(line: 125, column: 42, scope: !4183)
!4265 = !DILocation(line: 125, column: 52, scope: !4183)
!4266 = !DILocation(line: 125, column: 21, scope: !4183)
!4267 = !DILocation(line: 126, column: 21, scope: !4183)
!4268 = !DILocation(line: 124, column: 16, scope: !4183)
!4269 = !DILocation(line: 131, column: 7, scope: !4270)
!4270 = distinct !DILexicalBlock(scope: !4183, file: !4184, line: 131, column: 7)
!4271 = !DILocation(line: 131, column: 20, scope: !4270)
!4272 = !DILocation(line: 131, column: 7, scope: !4183)
!4273 = !DILocation(line: 133, column: 11, scope: !4274)
!4274 = distinct !DILexicalBlock(scope: !4275, file: !4184, line: 133, column: 11)
!4275 = distinct !DILexicalBlock(scope: !4270, file: !4184, line: 132, column: 5)
!4276 = !DILocation(line: 133, column: 17, scope: !4274)
!4277 = !DILocation(line: 133, column: 27, scope: !4274)
!4278 = !DILocation(line: 133, column: 35, scope: !4274)
!4279 = !DILocation(line: 133, column: 33, scope: !4274)
!4280 = !DILocation(line: 133, column: 11, scope: !4275)
!4281 = !DILocation(line: 135, column: 21, scope: !4282)
!4282 = distinct !DILexicalBlock(scope: !4274, file: !4184, line: 134, column: 9)
!4283 = !DILocation(line: 135, column: 12, scope: !4282)
!4284 = !DILocation(line: 135, column: 19, scope: !4282)
!4285 = !DILocation(line: 136, column: 16, scope: !4282)
!4286 = !DILocation(line: 136, column: 12, scope: !4282)
!4287 = !DILocation(line: 136, column: 14, scope: !4282)
!4288 = !DILocation(line: 137, column: 18, scope: !4282)
!4289 = !DILocation(line: 137, column: 22, scope: !4282)
!4290 = !DILocation(line: 137, column: 11, scope: !4282)
!4291 = !DILocation(line: 139, column: 7, scope: !4275)
!4292 = !DILocation(line: 142, column: 7, scope: !4293)
!4293 = distinct !DILexicalBlock(scope: !4183, file: !4184, line: 142, column: 7)
!4294 = !DILocation(line: 142, column: 20, scope: !4293)
!4295 = !DILocation(line: 142, column: 25, scope: !4293)
!4296 = !DILocation(line: 142, column: 30, scope: !4293)
!4297 = !DILocation(line: 142, column: 39, scope: !4293)
!4298 = !DILocation(line: 142, column: 42, scope: !4293)
!4299 = !DILocation(line: 142, column: 46, scope: !4293)
!4300 = !DILocation(line: 142, column: 7, scope: !4183)
!4301 = !DILocation(line: 143, column: 17, scope: !4293)
!4302 = !DILocation(line: 143, column: 5, scope: !4293)
!4303 = !DILocation(line: 144, column: 31, scope: !4183)
!4304 = !DILocation(line: 144, column: 7, scope: !4183)
!4305 = !DILocation(line: 144, column: 5, scope: !4183)
!4306 = !DILocation(line: 145, column: 7, scope: !4307)
!4307 = distinct !DILexicalBlock(scope: !4183, file: !4184, line: 145, column: 7)
!4308 = !DILocation(line: 145, column: 9, scope: !4307)
!4309 = !DILocation(line: 145, column: 7, scope: !4183)
!4310 = !DILocation(line: 146, column: 5, scope: !4307)
!4311 = !DILocation(line: 148, column: 9, scope: !4183)
!4312 = !DILocation(line: 149, column: 23, scope: !4183)
!4313 = !DILocation(line: 149, column: 37, scope: !4183)
!4314 = !DILocation(line: 149, column: 40, scope: !4183)
!4315 = !DILocation(line: 149, column: 50, scope: !4183)
!4316 = !DILocation(line: 149, column: 11, scope: !4183)
!4317 = !DILocation(line: 150, column: 22, scope: !4183)
!4318 = !DILocation(line: 150, column: 38, scope: !4183)
!4319 = !DILocation(line: 150, column: 42, scope: !4183)
!4320 = !DILocation(line: 150, column: 35, scope: !4183)
!4321 = !DILocation(line: 151, column: 33, scope: !4183)
!4322 = !DILocation(line: 151, column: 38, scope: !4183)
!4323 = !DILocation(line: 151, column: 42, scope: !4183)
!4324 = !DILocation(line: 151, column: 35, scope: !4183)
!4325 = !DILocation(line: 150, column: 11, scope: !4183)
!4326 = !DILocation(line: 148, column: 6, scope: !4183)
!4327 = !DILocation(line: 153, column: 7, scope: !4328)
!4328 = distinct !DILexicalBlock(scope: !4183, file: !4184, line: 153, column: 7)
!4329 = !DILocation(line: 153, column: 10, scope: !4328)
!4330 = !DILocation(line: 153, column: 7, scope: !4183)
!4331 = !DILocalVariable(name: "saved_errno", scope: !4332, file: !4184, line: 156, type: !72)
!4332 = distinct !DILexicalBlock(scope: !4328, file: !4184, line: 154, column: 5)
!4333 = !DILocation(line: 156, column: 11, scope: !4332)
!4334 = !DILocation(line: 156, column: 25, scope: !4332)
!4335 = !DILocation(line: 157, column: 13, scope: !4332)
!4336 = !DILocation(line: 157, column: 7, scope: !4332)
!4337 = !DILocation(line: 158, column: 15, scope: !4332)
!4338 = !DILocation(line: 158, column: 7, scope: !4332)
!4339 = !DILocation(line: 158, column: 13, scope: !4332)
!4340 = !DILocation(line: 159, column: 7, scope: !4332)
!4341 = !DILocation(line: 162, column: 8, scope: !4342)
!4342 = distinct !DILexicalBlock(scope: !4183, file: !4184, line: 162, column: 7)
!4343 = !DILocation(line: 162, column: 17, scope: !4342)
!4344 = !DILocation(line: 162, column: 20, scope: !4342)
!4345 = !DILocation(line: 162, column: 24, scope: !4342)
!4346 = !DILocation(line: 162, column: 7, scope: !4183)
!4347 = !DILocation(line: 164, column: 12, scope: !4348)
!4348 = distinct !DILexicalBlock(scope: !4342, file: !4184, line: 163, column: 5)
!4349 = !DILocation(line: 164, column: 8, scope: !4348)
!4350 = !DILocation(line: 164, column: 10, scope: !4348)
!4351 = !DILocation(line: 165, column: 9, scope: !4348)
!4352 = !DILocation(line: 166, column: 5, scope: !4348)
!4353 = !DILocation(line: 167, column: 13, scope: !4183)
!4354 = !DILocation(line: 167, column: 4, scope: !4183)
!4355 = !DILocation(line: 167, column: 11, scope: !4183)
!4356 = !DILocation(line: 185, column: 11, scope: !4357)
!4357 = distinct !DILexicalBlock(scope: !4183, file: !4184, line: 185, column: 7)
!4358 = !DILocation(line: 185, column: 9, scope: !4357)
!4359 = !DILocation(line: 185, column: 7, scope: !4183)
!4360 = !DILocalVariable(name: "first", scope: !4361, file: !4184, line: 187, type: !21)
!4361 = distinct !DILexicalBlock(scope: !4357, file: !4184, line: 186, column: 5)
!4362 = !DILocation(line: 187, column: 13, scope: !4361)
!4363 = !DILocation(line: 187, column: 22, scope: !4361)
!4364 = !DILocation(line: 187, column: 21, scope: !4361)
!4365 = !DILocalVariable(name: "next", scope: !4361, file: !4184, line: 188, type: !183)
!4366 = !DILocation(line: 188, column: 14, scope: !4361)
!4367 = !DILocalVariable(name: "groups_end", scope: !4361, file: !4184, line: 189, type: !183)
!4368 = !DILocation(line: 189, column: 14, scope: !4361)
!4369 = !DILocation(line: 189, column: 27, scope: !4361)
!4370 = !DILocation(line: 189, column: 31, scope: !4361)
!4371 = !DILocation(line: 189, column: 29, scope: !4361)
!4372 = !DILocation(line: 191, column: 19, scope: !4373)
!4373 = distinct !DILexicalBlock(scope: !4361, file: !4184, line: 191, column: 7)
!4374 = !DILocation(line: 191, column: 21, scope: !4373)
!4375 = !DILocation(line: 191, column: 17, scope: !4373)
!4376 = !DILocation(line: 191, column: 12, scope: !4373)
!4377 = !DILocation(line: 191, column: 26, scope: !4378)
!4378 = distinct !DILexicalBlock(scope: !4373, file: !4184, line: 191, column: 7)
!4379 = !DILocation(line: 191, column: 33, scope: !4378)
!4380 = !DILocation(line: 191, column: 31, scope: !4378)
!4381 = !DILocation(line: 191, column: 7, scope: !4373)
!4382 = !DILocation(line: 193, column: 16, scope: !4383)
!4383 = distinct !DILexicalBlock(scope: !4384, file: !4184, line: 193, column: 15)
!4384 = distinct !DILexicalBlock(scope: !4378, file: !4184, line: 192, column: 9)
!4385 = !DILocation(line: 193, column: 15, scope: !4383)
!4386 = !DILocation(line: 193, column: 24, scope: !4383)
!4387 = !DILocation(line: 193, column: 21, scope: !4383)
!4388 = !DILocation(line: 193, column: 30, scope: !4383)
!4389 = !DILocation(line: 193, column: 34, scope: !4383)
!4390 = !DILocation(line: 193, column: 33, scope: !4383)
!4391 = !DILocation(line: 193, column: 43, scope: !4383)
!4392 = !DILocation(line: 193, column: 42, scope: !4383)
!4393 = !DILocation(line: 193, column: 39, scope: !4383)
!4394 = !DILocation(line: 193, column: 15, scope: !4384)
!4395 = !DILocation(line: 194, column: 15, scope: !4383)
!4396 = !DILocation(line: 194, column: 13, scope: !4383)
!4397 = !DILocation(line: 196, column: 21, scope: !4383)
!4398 = !DILocation(line: 196, column: 20, scope: !4383)
!4399 = !DILocation(line: 196, column: 14, scope: !4383)
!4400 = !DILocation(line: 196, column: 18, scope: !4383)
!4401 = !DILocation(line: 197, column: 9, scope: !4384)
!4402 = !DILocation(line: 191, column: 49, scope: !4378)
!4403 = !DILocation(line: 191, column: 7, scope: !4378)
!4404 = distinct !{!4404, !4381, !4405}
!4405 = !DILocation(line: 197, column: 9, scope: !4373)
!4406 = !DILocation(line: 198, column: 5, scope: !4361)
!4407 = !DILocation(line: 200, column: 10, scope: !4183)
!4408 = !DILocation(line: 200, column: 3, scope: !4183)
!4409 = !DILocation(line: 201, column: 1, scope: !4183)
!4410 = !DILocalVariable(name: "username", arg: 1, scope: !4411, file: !4184, line: 66, type: !69)
!4411 = distinct !DISubprogram(name: "mgetgroups", scope: !4184, file: !4184, line: 66, type: !3604, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !4412, retainedNodes: !4)
!4412 = distinct !DICompileUnit(language: DW_LANG_C99, file: !248, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !249, nameTableKind: None)
!4413 = !DILocalVariable(name: "gid", arg: 2, scope: !4411, file: !4184, line: 66, type: !21)
!4414 = !DILocalVariable(name: "groups", arg: 3, scope: !4411, file: !4184, line: 66, type: !3606)
!4415 = !DILocalVariable(name: "max_n_groups", scope: !4411, file: !4184, line: 68, type: !72)
!4416 = !DILocalVariable(name: "ng", scope: !4411, file: !4184, line: 69, type: !72)
!4417 = !DILocalVariable(name: "g", scope: !4411, file: !4184, line: 70, type: !183)
!4418 = distinct !DISubprogram(name: "realloc_groupbuf", scope: !4184, file: !4184, line: 43, type: !4419, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !247, retainedNodes: !4)
!4419 = !DISubroutineType(types: !4420)
!4420 = !{!183, !183, !134}
!4421 = !DILocalVariable(name: "g", arg: 1, scope: !4418, file: !4184, line: 43, type: !183)
!4422 = !DILocation(line: 43, column: 26, scope: !4418)
!4423 = !DILocalVariable(name: "num", arg: 2, scope: !4418, file: !4184, line: 43, type: !134)
!4424 = !DILocation(line: 43, column: 36, scope: !4418)
!4425 = !DILocation(line: 45, column: 7, scope: !4426)
!4426 = distinct !DILexicalBlock(scope: !4418, file: !4184, line: 45, column: 7)
!4427 = !DILocation(line: 45, column: 7, scope: !4418)
!4428 = !DILocation(line: 47, column: 7, scope: !4429)
!4429 = distinct !DILexicalBlock(scope: !4426, file: !4184, line: 46, column: 5)
!4430 = !DILocation(line: 47, column: 13, scope: !4429)
!4431 = !DILocation(line: 48, column: 7, scope: !4429)
!4432 = !DILocation(line: 51, column: 19, scope: !4418)
!4433 = !DILocation(line: 51, column: 22, scope: !4418)
!4434 = !DILocation(line: 51, column: 26, scope: !4418)
!4435 = !DILocation(line: 51, column: 10, scope: !4418)
!4436 = !DILocation(line: 51, column: 3, scope: !4418)
!4437 = !DILocation(line: 52, column: 1, scope: !4418)
!4438 = distinct !DISubprogram(name: "setlocale_null_r", scope: !4439, file: !4439, line: 269, type: !4440, scopeLine: 270, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !250, retainedNodes: !4)
!4439 = !DIFile(filename: "lib/setlocale_null.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!4440 = !DISubroutineType(types: !4441)
!4441 = !{!72, !72, !6, !134}
!4442 = !DILocalVariable(name: "category", arg: 1, scope: !4438, file: !4439, line: 269, type: !72)
!4443 = !DILocation(line: 269, column: 23, scope: !4438)
!4444 = !DILocalVariable(name: "buf", arg: 2, scope: !4438, file: !4439, line: 269, type: !6)
!4445 = !DILocation(line: 269, column: 39, scope: !4438)
!4446 = !DILocalVariable(name: "bufsize", arg: 3, scope: !4438, file: !4439, line: 269, type: !134)
!4447 = !DILocation(line: 269, column: 51, scope: !4438)
!4448 = !DILocation(line: 274, column: 35, scope: !4438)
!4449 = !DILocation(line: 274, column: 45, scope: !4438)
!4450 = !DILocation(line: 274, column: 50, scope: !4438)
!4451 = !DILocation(line: 274, column: 10, scope: !4438)
!4452 = !DILocation(line: 274, column: 3, scope: !4438)
!4453 = distinct !DISubprogram(name: "setlocale_null_unlocked", scope: !4439, file: !4439, line: 91, type: !4440, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !250, retainedNodes: !4)
!4454 = !DILocalVariable(name: "category", arg: 1, scope: !4453, file: !4439, line: 91, type: !72)
!4455 = !DILocation(line: 91, column: 30, scope: !4453)
!4456 = !DILocalVariable(name: "buf", arg: 2, scope: !4453, file: !4439, line: 91, type: !6)
!4457 = !DILocation(line: 91, column: 46, scope: !4453)
!4458 = !DILocalVariable(name: "bufsize", arg: 3, scope: !4453, file: !4439, line: 91, type: !134)
!4459 = !DILocation(line: 91, column: 58, scope: !4453)
!4460 = !DILocalVariable(name: "result", scope: !4453, file: !4439, line: 140, type: !69)
!4461 = !DILocation(line: 140, column: 15, scope: !4453)
!4462 = !DILocation(line: 140, column: 51, scope: !4453)
!4463 = !DILocation(line: 140, column: 24, scope: !4453)
!4464 = !DILocation(line: 142, column: 7, scope: !4465)
!4465 = distinct !DILexicalBlock(scope: !4453, file: !4439, line: 142, column: 7)
!4466 = !DILocation(line: 142, column: 14, scope: !4465)
!4467 = !DILocation(line: 142, column: 7, scope: !4453)
!4468 = !DILocation(line: 145, column: 11, scope: !4469)
!4469 = distinct !DILexicalBlock(scope: !4470, file: !4439, line: 145, column: 11)
!4470 = distinct !DILexicalBlock(scope: !4465, file: !4439, line: 143, column: 5)
!4471 = !DILocation(line: 145, column: 19, scope: !4469)
!4472 = !DILocation(line: 145, column: 11, scope: !4470)
!4473 = !DILocation(line: 149, column: 9, scope: !4469)
!4474 = !DILocation(line: 149, column: 16, scope: !4469)
!4475 = !DILocation(line: 150, column: 7, scope: !4470)
!4476 = !DILocalVariable(name: "length", scope: !4477, file: !4439, line: 154, type: !134)
!4477 = distinct !DILexicalBlock(scope: !4465, file: !4439, line: 153, column: 5)
!4478 = !DILocation(line: 154, column: 14, scope: !4477)
!4479 = !DILocation(line: 154, column: 31, scope: !4477)
!4480 = !DILocation(line: 154, column: 23, scope: !4477)
!4481 = !DILocation(line: 155, column: 11, scope: !4482)
!4482 = distinct !DILexicalBlock(scope: !4477, file: !4439, line: 155, column: 11)
!4483 = !DILocation(line: 155, column: 20, scope: !4482)
!4484 = !DILocation(line: 155, column: 18, scope: !4482)
!4485 = !DILocation(line: 155, column: 11, scope: !4477)
!4486 = !DILocation(line: 157, column: 19, scope: !4487)
!4487 = distinct !DILexicalBlock(scope: !4482, file: !4439, line: 156, column: 9)
!4488 = !DILocation(line: 157, column: 24, scope: !4487)
!4489 = !DILocation(line: 157, column: 32, scope: !4487)
!4490 = !DILocation(line: 157, column: 39, scope: !4487)
!4491 = !DILocation(line: 157, column: 11, scope: !4487)
!4492 = !DILocation(line: 158, column: 11, scope: !4487)
!4493 = !DILocation(line: 162, column: 15, scope: !4494)
!4494 = distinct !DILexicalBlock(scope: !4495, file: !4439, line: 162, column: 15)
!4495 = distinct !DILexicalBlock(scope: !4482, file: !4439, line: 161, column: 9)
!4496 = !DILocation(line: 162, column: 23, scope: !4494)
!4497 = !DILocation(line: 162, column: 15, scope: !4495)
!4498 = !DILocation(line: 167, column: 23, scope: !4499)
!4499 = distinct !DILexicalBlock(scope: !4494, file: !4439, line: 163, column: 13)
!4500 = !DILocation(line: 167, column: 28, scope: !4499)
!4501 = !DILocation(line: 167, column: 36, scope: !4499)
!4502 = !DILocation(line: 167, column: 44, scope: !4499)
!4503 = !DILocation(line: 167, column: 15, scope: !4499)
!4504 = !DILocation(line: 168, column: 15, scope: !4499)
!4505 = !DILocation(line: 168, column: 19, scope: !4499)
!4506 = !DILocation(line: 168, column: 27, scope: !4499)
!4507 = !DILocation(line: 168, column: 32, scope: !4499)
!4508 = !DILocation(line: 169, column: 13, scope: !4499)
!4509 = !DILocation(line: 170, column: 11, scope: !4495)
!4510 = !DILocation(line: 174, column: 1, scope: !4453)
!4511 = distinct !DISubprogram(name: "setlocale_null_androidfix", scope: !4439, file: !4439, line: 60, type: !4512, scopeLine: 61, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !250, retainedNodes: !4)
!4512 = !DISubroutineType(types: !4513)
!4513 = !{!69, !72}
!4514 = !DILocalVariable(name: "category", arg: 1, scope: !4511, file: !4439, line: 60, type: !72)
!4515 = !DILocation(line: 60, column: 32, scope: !4511)
!4516 = !DILocalVariable(name: "result", scope: !4511, file: !4439, line: 62, type: !69)
!4517 = !DILocation(line: 62, column: 15, scope: !4511)
!4518 = !DILocation(line: 62, column: 35, scope: !4511)
!4519 = !DILocation(line: 62, column: 24, scope: !4511)
!4520 = !DILocation(line: 87, column: 10, scope: !4511)
!4521 = !DILocation(line: 87, column: 3, scope: !4511)
!4522 = distinct !DISubprogram(name: "rpl_fclose", scope: !4523, file: !4523, line: 58, type: !4524, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !252, retainedNodes: !4)
!4523 = !DIFile(filename: "lib/fclose.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!4524 = !DISubroutineType(types: !4525)
!4525 = !{!72, !4526}
!4526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4527, size: 64)
!4527 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !3194, line: 7, baseType: !4528)
!4528 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !3196, line: 49, size: 1728, elements: !4529)
!4529 = !{!4530, !4531, !4532, !4533, !4534, !4535, !4536, !4537, !4538, !4539, !4540, !4541, !4542, !4543, !4545, !4546, !4547, !4548, !4549, !4550, !4551, !4552, !4553, !4554, !4555, !4556, !4557, !4558, !4559}
!4530 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !4528, file: !3196, line: 51, baseType: !72, size: 32)
!4531 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !4528, file: !3196, line: 54, baseType: !6, size: 64, offset: 64)
!4532 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !4528, file: !3196, line: 55, baseType: !6, size: 64, offset: 128)
!4533 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !4528, file: !3196, line: 56, baseType: !6, size: 64, offset: 192)
!4534 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !4528, file: !3196, line: 57, baseType: !6, size: 64, offset: 256)
!4535 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !4528, file: !3196, line: 58, baseType: !6, size: 64, offset: 320)
!4536 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !4528, file: !3196, line: 59, baseType: !6, size: 64, offset: 384)
!4537 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !4528, file: !3196, line: 60, baseType: !6, size: 64, offset: 448)
!4538 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !4528, file: !3196, line: 61, baseType: !6, size: 64, offset: 512)
!4539 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !4528, file: !3196, line: 64, baseType: !6, size: 64, offset: 576)
!4540 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !4528, file: !3196, line: 65, baseType: !6, size: 64, offset: 640)
!4541 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !4528, file: !3196, line: 66, baseType: !6, size: 64, offset: 704)
!4542 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !4528, file: !3196, line: 68, baseType: !3211, size: 64, offset: 768)
!4543 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !4528, file: !3196, line: 70, baseType: !4544, size: 64, offset: 832)
!4544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4528, size: 64)
!4545 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !4528, file: !3196, line: 72, baseType: !72, size: 32, offset: 896)
!4546 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !4528, file: !3196, line: 73, baseType: !72, size: 32, offset: 928)
!4547 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !4528, file: !3196, line: 74, baseType: !3218, size: 64, offset: 960)
!4548 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !4528, file: !3196, line: 77, baseType: !133, size: 16, offset: 1024)
!4549 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !4528, file: !3196, line: 78, baseType: !3221, size: 8, offset: 1040)
!4550 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !4528, file: !3196, line: 79, baseType: !3223, size: 8, offset: 1048)
!4551 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !4528, file: !3196, line: 81, baseType: !3227, size: 64, offset: 1088)
!4552 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !4528, file: !3196, line: 89, baseType: !3230, size: 64, offset: 1152)
!4553 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !4528, file: !3196, line: 91, baseType: !3232, size: 64, offset: 1216)
!4554 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !4528, file: !3196, line: 92, baseType: !3235, size: 64, offset: 1280)
!4555 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !4528, file: !3196, line: 93, baseType: !4544, size: 64, offset: 1344)
!4556 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !4528, file: !3196, line: 94, baseType: !8, size: 64, offset: 1408)
!4557 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !4528, file: !3196, line: 95, baseType: !134, size: 64, offset: 1472)
!4558 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !4528, file: !3196, line: 96, baseType: !72, size: 32, offset: 1536)
!4559 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !4528, file: !3196, line: 98, baseType: !3242, size: 160, offset: 1568)
!4560 = !DILocalVariable(name: "fp", arg: 1, scope: !4522, file: !4523, line: 58, type: !4526)
!4561 = !DILocation(line: 58, column: 19, scope: !4522)
!4562 = !DILocalVariable(name: "saved_errno", scope: !4522, file: !4523, line: 60, type: !72)
!4563 = !DILocation(line: 60, column: 7, scope: !4522)
!4564 = !DILocalVariable(name: "fd", scope: !4522, file: !4523, line: 61, type: !72)
!4565 = !DILocation(line: 61, column: 7, scope: !4522)
!4566 = !DILocalVariable(name: "result", scope: !4522, file: !4523, line: 62, type: !72)
!4567 = !DILocation(line: 62, column: 7, scope: !4522)
!4568 = !DILocation(line: 65, column: 16, scope: !4522)
!4569 = !DILocation(line: 65, column: 8, scope: !4522)
!4570 = !DILocation(line: 65, column: 6, scope: !4522)
!4571 = !DILocation(line: 66, column: 7, scope: !4572)
!4572 = distinct !DILexicalBlock(scope: !4522, file: !4523, line: 66, column: 7)
!4573 = !DILocation(line: 66, column: 10, scope: !4572)
!4574 = !DILocation(line: 66, column: 7, scope: !4522)
!4575 = !DILocation(line: 67, column: 28, scope: !4572)
!4576 = !DILocation(line: 67, column: 12, scope: !4572)
!4577 = !DILocation(line: 67, column: 5, scope: !4572)
!4578 = !DILocation(line: 72, column: 9, scope: !4579)
!4579 = distinct !DILexicalBlock(scope: !4522, file: !4523, line: 72, column: 7)
!4580 = !DILocation(line: 72, column: 23, scope: !4579)
!4581 = !DILocation(line: 72, column: 41, scope: !4579)
!4582 = !DILocation(line: 72, column: 33, scope: !4579)
!4583 = !DILocation(line: 72, column: 26, scope: !4579)
!4584 = !DILocation(line: 72, column: 59, scope: !4579)
!4585 = !DILocation(line: 73, column: 7, scope: !4579)
!4586 = !DILocation(line: 73, column: 18, scope: !4579)
!4587 = !DILocation(line: 73, column: 10, scope: !4579)
!4588 = !DILocation(line: 72, column: 7, scope: !4522)
!4589 = !DILocation(line: 74, column: 19, scope: !4579)
!4590 = !DILocation(line: 74, column: 17, scope: !4579)
!4591 = !DILocation(line: 74, column: 5, scope: !4579)
!4592 = !DILocation(line: 100, column: 28, scope: !4522)
!4593 = !DILocation(line: 100, column: 12, scope: !4522)
!4594 = !DILocation(line: 100, column: 10, scope: !4522)
!4595 = !DILocation(line: 105, column: 7, scope: !4596)
!4596 = distinct !DILexicalBlock(scope: !4522, file: !4523, line: 105, column: 7)
!4597 = !DILocation(line: 105, column: 19, scope: !4596)
!4598 = !DILocation(line: 105, column: 7, scope: !4522)
!4599 = !DILocation(line: 107, column: 15, scope: !4600)
!4600 = distinct !DILexicalBlock(scope: !4596, file: !4523, line: 106, column: 5)
!4601 = !DILocation(line: 107, column: 7, scope: !4600)
!4602 = !DILocation(line: 107, column: 13, scope: !4600)
!4603 = !DILocation(line: 108, column: 14, scope: !4600)
!4604 = !DILocation(line: 109, column: 5, scope: !4600)
!4605 = !DILocation(line: 111, column: 10, scope: !4522)
!4606 = !DILocation(line: 111, column: 3, scope: !4522)
!4607 = !DILocation(line: 112, column: 1, scope: !4522)
!4608 = distinct !DISubprogram(name: "rpl_fflush", scope: !4609, file: !4609, line: 129, type: !4610, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !254, retainedNodes: !4)
!4609 = !DIFile(filename: "lib/fflush.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!4610 = !DISubroutineType(types: !4611)
!4611 = !{!72, !4612}
!4612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4613, size: 64)
!4613 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !3194, line: 7, baseType: !4614)
!4614 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !3196, line: 49, size: 1728, elements: !4615)
!4615 = !{!4616, !4617, !4618, !4619, !4620, !4621, !4622, !4623, !4624, !4625, !4626, !4627, !4628, !4629, !4631, !4632, !4633, !4634, !4635, !4636, !4637, !4638, !4639, !4640, !4641, !4642, !4643, !4644, !4645}
!4616 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !4614, file: !3196, line: 51, baseType: !72, size: 32)
!4617 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !4614, file: !3196, line: 54, baseType: !6, size: 64, offset: 64)
!4618 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !4614, file: !3196, line: 55, baseType: !6, size: 64, offset: 128)
!4619 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !4614, file: !3196, line: 56, baseType: !6, size: 64, offset: 192)
!4620 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !4614, file: !3196, line: 57, baseType: !6, size: 64, offset: 256)
!4621 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !4614, file: !3196, line: 58, baseType: !6, size: 64, offset: 320)
!4622 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !4614, file: !3196, line: 59, baseType: !6, size: 64, offset: 384)
!4623 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !4614, file: !3196, line: 60, baseType: !6, size: 64, offset: 448)
!4624 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !4614, file: !3196, line: 61, baseType: !6, size: 64, offset: 512)
!4625 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !4614, file: !3196, line: 64, baseType: !6, size: 64, offset: 576)
!4626 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !4614, file: !3196, line: 65, baseType: !6, size: 64, offset: 640)
!4627 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !4614, file: !3196, line: 66, baseType: !6, size: 64, offset: 704)
!4628 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !4614, file: !3196, line: 68, baseType: !3211, size: 64, offset: 768)
!4629 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !4614, file: !3196, line: 70, baseType: !4630, size: 64, offset: 832)
!4630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4614, size: 64)
!4631 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !4614, file: !3196, line: 72, baseType: !72, size: 32, offset: 896)
!4632 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !4614, file: !3196, line: 73, baseType: !72, size: 32, offset: 928)
!4633 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !4614, file: !3196, line: 74, baseType: !3218, size: 64, offset: 960)
!4634 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !4614, file: !3196, line: 77, baseType: !133, size: 16, offset: 1024)
!4635 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !4614, file: !3196, line: 78, baseType: !3221, size: 8, offset: 1040)
!4636 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !4614, file: !3196, line: 79, baseType: !3223, size: 8, offset: 1048)
!4637 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !4614, file: !3196, line: 81, baseType: !3227, size: 64, offset: 1088)
!4638 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !4614, file: !3196, line: 89, baseType: !3230, size: 64, offset: 1152)
!4639 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !4614, file: !3196, line: 91, baseType: !3232, size: 64, offset: 1216)
!4640 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !4614, file: !3196, line: 92, baseType: !3235, size: 64, offset: 1280)
!4641 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !4614, file: !3196, line: 93, baseType: !4630, size: 64, offset: 1344)
!4642 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !4614, file: !3196, line: 94, baseType: !8, size: 64, offset: 1408)
!4643 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !4614, file: !3196, line: 95, baseType: !134, size: 64, offset: 1472)
!4644 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !4614, file: !3196, line: 96, baseType: !72, size: 32, offset: 1536)
!4645 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !4614, file: !3196, line: 98, baseType: !3242, size: 160, offset: 1568)
!4646 = !DILocalVariable(name: "stream", arg: 1, scope: !4608, file: !4609, line: 129, type: !4612)
!4647 = !DILocation(line: 129, column: 19, scope: !4608)
!4648 = !DILocation(line: 150, column: 7, scope: !4649)
!4649 = distinct !DILexicalBlock(scope: !4608, file: !4609, line: 150, column: 7)
!4650 = !DILocation(line: 150, column: 14, scope: !4649)
!4651 = !DILocation(line: 150, column: 22, scope: !4649)
!4652 = !DILocation(line: 150, column: 27, scope: !4649)
!4653 = !DILocation(line: 150, column: 7, scope: !4608)
!4654 = !DILocation(line: 151, column: 20, scope: !4649)
!4655 = !DILocation(line: 151, column: 12, scope: !4649)
!4656 = !DILocation(line: 151, column: 5, scope: !4649)
!4657 = !DILocation(line: 156, column: 44, scope: !4608)
!4658 = !DILocation(line: 156, column: 3, scope: !4608)
!4659 = !DILocation(line: 158, column: 18, scope: !4608)
!4660 = !DILocation(line: 158, column: 10, scope: !4608)
!4661 = !DILocation(line: 158, column: 3, scope: !4608)
!4662 = !DILocation(line: 235, column: 1, scope: !4608)
!4663 = !DILocalVariable(name: "stream", arg: 1, scope: !4664, file: !4609, line: 129, type: !4667)
!4664 = distinct !DISubprogram(name: "rpl_fflush", scope: !4609, file: !4609, line: 129, type: !4665, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !4701, retainedNodes: !4)
!4665 = !DISubroutineType(types: !4666)
!4666 = !{!72, !4667}
!4667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4668, size: 64)
!4668 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !3194, line: 7, baseType: !4669)
!4669 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !3196, line: 49, size: 1728, elements: !4670)
!4670 = !{!4671, !4672, !4673, !4674, !4675, !4676, !4677, !4678, !4679, !4680, !4681, !4682, !4683, !4684, !4686, !4687, !4688, !4689, !4690, !4691, !4692, !4693, !4694, !4695, !4696, !4697, !4698, !4699, !4700}
!4671 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !4669, file: !3196, line: 51, baseType: !72, size: 32)
!4672 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !4669, file: !3196, line: 54, baseType: !6, size: 64, offset: 64)
!4673 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !4669, file: !3196, line: 55, baseType: !6, size: 64, offset: 128)
!4674 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !4669, file: !3196, line: 56, baseType: !6, size: 64, offset: 192)
!4675 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !4669, file: !3196, line: 57, baseType: !6, size: 64, offset: 256)
!4676 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !4669, file: !3196, line: 58, baseType: !6, size: 64, offset: 320)
!4677 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !4669, file: !3196, line: 59, baseType: !6, size: 64, offset: 384)
!4678 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !4669, file: !3196, line: 60, baseType: !6, size: 64, offset: 448)
!4679 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !4669, file: !3196, line: 61, baseType: !6, size: 64, offset: 512)
!4680 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !4669, file: !3196, line: 64, baseType: !6, size: 64, offset: 576)
!4681 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !4669, file: !3196, line: 65, baseType: !6, size: 64, offset: 640)
!4682 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !4669, file: !3196, line: 66, baseType: !6, size: 64, offset: 704)
!4683 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !4669, file: !3196, line: 68, baseType: !3211, size: 64, offset: 768)
!4684 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !4669, file: !3196, line: 70, baseType: !4685, size: 64, offset: 832)
!4685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4669, size: 64)
!4686 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !4669, file: !3196, line: 72, baseType: !72, size: 32, offset: 896)
!4687 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !4669, file: !3196, line: 73, baseType: !72, size: 32, offset: 928)
!4688 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !4669, file: !3196, line: 74, baseType: !3218, size: 64, offset: 960)
!4689 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !4669, file: !3196, line: 77, baseType: !133, size: 16, offset: 1024)
!4690 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !4669, file: !3196, line: 78, baseType: !3221, size: 8, offset: 1040)
!4691 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !4669, file: !3196, line: 79, baseType: !3223, size: 8, offset: 1048)
!4692 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !4669, file: !3196, line: 81, baseType: !3227, size: 64, offset: 1088)
!4693 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !4669, file: !3196, line: 89, baseType: !3230, size: 64, offset: 1152)
!4694 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !4669, file: !3196, line: 91, baseType: !3232, size: 64, offset: 1216)
!4695 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !4669, file: !3196, line: 92, baseType: !3235, size: 64, offset: 1280)
!4696 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !4669, file: !3196, line: 93, baseType: !4685, size: 64, offset: 1344)
!4697 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !4669, file: !3196, line: 94, baseType: !8, size: 64, offset: 1408)
!4698 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !4669, file: !3196, line: 95, baseType: !134, size: 64, offset: 1472)
!4699 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !4669, file: !3196, line: 96, baseType: !72, size: 32, offset: 1536)
!4700 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !4669, file: !3196, line: 98, baseType: !3242, size: 160, offset: 1568)
!4701 = distinct !DICompileUnit(language: DW_LANG_C99, file: !255, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !212, nameTableKind: None)
!4702 = distinct !DISubprogram(name: "clear_ungetc_buffer_preserving_position", scope: !4609, file: !4609, line: 41, type: !4703, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !254, retainedNodes: !4)
!4703 = !DISubroutineType(types: !4704)
!4704 = !{null, !4612}
!4705 = !DILocalVariable(name: "fp", arg: 1, scope: !4702, file: !4609, line: 41, type: !4612)
!4706 = !DILocation(line: 41, column: 48, scope: !4702)
!4707 = !DILocation(line: 43, column: 7, scope: !4708)
!4708 = distinct !DILexicalBlock(scope: !4702, file: !4609, line: 43, column: 7)
!4709 = !DILocation(line: 43, column: 11, scope: !4708)
!4710 = !DILocation(line: 43, column: 18, scope: !4708)
!4711 = !DILocation(line: 43, column: 7, scope: !4702)
!4712 = !DILocation(line: 45, column: 13, scope: !4708)
!4713 = !DILocation(line: 45, column: 5, scope: !4708)
!4714 = !DILocation(line: 46, column: 1, scope: !4702)
!4715 = distinct !DISubprogram(name: "rpl_fseeko", scope: !4716, file: !4716, line: 28, type: !4717, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !256, retainedNodes: !4)
!4716 = !DIFile(filename: "lib/fseeko.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!4717 = !DISubroutineType(types: !4718)
!4718 = !{!72, !4719, !4753, !72}
!4719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4720, size: 64)
!4720 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !3194, line: 7, baseType: !4721)
!4721 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !3196, line: 49, size: 1728, elements: !4722)
!4722 = !{!4723, !4724, !4725, !4726, !4727, !4728, !4729, !4730, !4731, !4732, !4733, !4734, !4735, !4736, !4738, !4739, !4740, !4741, !4742, !4743, !4744, !4745, !4746, !4747, !4748, !4749, !4750, !4751, !4752}
!4723 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !4721, file: !3196, line: 51, baseType: !72, size: 32)
!4724 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !4721, file: !3196, line: 54, baseType: !6, size: 64, offset: 64)
!4725 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !4721, file: !3196, line: 55, baseType: !6, size: 64, offset: 128)
!4726 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !4721, file: !3196, line: 56, baseType: !6, size: 64, offset: 192)
!4727 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !4721, file: !3196, line: 57, baseType: !6, size: 64, offset: 256)
!4728 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !4721, file: !3196, line: 58, baseType: !6, size: 64, offset: 320)
!4729 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !4721, file: !3196, line: 59, baseType: !6, size: 64, offset: 384)
!4730 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !4721, file: !3196, line: 60, baseType: !6, size: 64, offset: 448)
!4731 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !4721, file: !3196, line: 61, baseType: !6, size: 64, offset: 512)
!4732 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !4721, file: !3196, line: 64, baseType: !6, size: 64, offset: 576)
!4733 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !4721, file: !3196, line: 65, baseType: !6, size: 64, offset: 640)
!4734 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !4721, file: !3196, line: 66, baseType: !6, size: 64, offset: 704)
!4735 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !4721, file: !3196, line: 68, baseType: !3211, size: 64, offset: 768)
!4736 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !4721, file: !3196, line: 70, baseType: !4737, size: 64, offset: 832)
!4737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4721, size: 64)
!4738 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !4721, file: !3196, line: 72, baseType: !72, size: 32, offset: 896)
!4739 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !4721, file: !3196, line: 73, baseType: !72, size: 32, offset: 928)
!4740 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !4721, file: !3196, line: 74, baseType: !3218, size: 64, offset: 960)
!4741 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !4721, file: !3196, line: 77, baseType: !133, size: 16, offset: 1024)
!4742 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !4721, file: !3196, line: 78, baseType: !3221, size: 8, offset: 1040)
!4743 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !4721, file: !3196, line: 79, baseType: !3223, size: 8, offset: 1048)
!4744 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !4721, file: !3196, line: 81, baseType: !3227, size: 64, offset: 1088)
!4745 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !4721, file: !3196, line: 89, baseType: !3230, size: 64, offset: 1152)
!4746 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !4721, file: !3196, line: 91, baseType: !3232, size: 64, offset: 1216)
!4747 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !4721, file: !3196, line: 92, baseType: !3235, size: 64, offset: 1280)
!4748 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !4721, file: !3196, line: 93, baseType: !4737, size: 64, offset: 1344)
!4749 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !4721, file: !3196, line: 94, baseType: !8, size: 64, offset: 1408)
!4750 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !4721, file: !3196, line: 95, baseType: !134, size: 64, offset: 1472)
!4751 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !4721, file: !3196, line: 96, baseType: !72, size: 32, offset: 1536)
!4752 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !4721, file: !3196, line: 98, baseType: !3242, size: 160, offset: 1568)
!4753 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_t", file: !868, line: 63, baseType: !3218)
!4754 = !DILocalVariable(name: "fp", arg: 1, scope: !4715, file: !4716, line: 28, type: !4719)
!4755 = !DILocation(line: 28, column: 15, scope: !4715)
!4756 = !DILocalVariable(name: "offset", arg: 2, scope: !4715, file: !4716, line: 28, type: !4753)
!4757 = !DILocation(line: 28, column: 25, scope: !4715)
!4758 = !DILocalVariable(name: "whence", arg: 3, scope: !4715, file: !4716, line: 28, type: !72)
!4759 = !DILocation(line: 28, column: 37, scope: !4715)
!4760 = !DILocation(line: 52, column: 7, scope: !4761)
!4761 = distinct !DILexicalBlock(scope: !4715, file: !4716, line: 52, column: 7)
!4762 = !DILocation(line: 52, column: 11, scope: !4761)
!4763 = !DILocation(line: 52, column: 27, scope: !4761)
!4764 = !DILocation(line: 52, column: 31, scope: !4761)
!4765 = !DILocation(line: 52, column: 24, scope: !4761)
!4766 = !DILocation(line: 53, column: 7, scope: !4761)
!4767 = !DILocation(line: 53, column: 10, scope: !4761)
!4768 = !DILocation(line: 53, column: 14, scope: !4761)
!4769 = !DILocation(line: 53, column: 31, scope: !4761)
!4770 = !DILocation(line: 53, column: 35, scope: !4761)
!4771 = !DILocation(line: 53, column: 28, scope: !4761)
!4772 = !DILocation(line: 54, column: 7, scope: !4761)
!4773 = !DILocation(line: 54, column: 10, scope: !4761)
!4774 = !DILocation(line: 54, column: 14, scope: !4761)
!4775 = !DILocation(line: 54, column: 28, scope: !4761)
!4776 = !DILocation(line: 52, column: 7, scope: !4715)
!4777 = !DILocalVariable(name: "pos", scope: !4778, file: !4716, line: 117, type: !4753)
!4778 = distinct !DILexicalBlock(scope: !4761, file: !4716, line: 113, column: 5)
!4779 = !DILocation(line: 117, column: 13, scope: !4778)
!4780 = !DILocation(line: 117, column: 34, scope: !4778)
!4781 = !DILocation(line: 117, column: 26, scope: !4778)
!4782 = !DILocation(line: 117, column: 39, scope: !4778)
!4783 = !DILocation(line: 117, column: 47, scope: !4778)
!4784 = !DILocation(line: 117, column: 19, scope: !4778)
!4785 = !DILocation(line: 118, column: 11, scope: !4786)
!4786 = distinct !DILexicalBlock(scope: !4778, file: !4716, line: 118, column: 11)
!4787 = !DILocation(line: 118, column: 15, scope: !4786)
!4788 = !DILocation(line: 118, column: 11, scope: !4778)
!4789 = !DILocation(line: 124, column: 11, scope: !4790)
!4790 = distinct !DILexicalBlock(scope: !4786, file: !4716, line: 119, column: 9)
!4791 = !DILocation(line: 129, column: 7, scope: !4778)
!4792 = !DILocation(line: 129, column: 11, scope: !4778)
!4793 = !DILocation(line: 129, column: 18, scope: !4778)
!4794 = !DILocation(line: 130, column: 21, scope: !4778)
!4795 = !DILocation(line: 130, column: 7, scope: !4778)
!4796 = !DILocation(line: 130, column: 11, scope: !4778)
!4797 = !DILocation(line: 130, column: 19, scope: !4778)
!4798 = !DILocation(line: 161, column: 7, scope: !4778)
!4799 = !DILocation(line: 163, column: 18, scope: !4715)
!4800 = !DILocation(line: 163, column: 22, scope: !4715)
!4801 = !DILocation(line: 163, column: 30, scope: !4715)
!4802 = !DILocation(line: 163, column: 10, scope: !4715)
!4803 = !DILocation(line: 163, column: 3, scope: !4715)
!4804 = !DILocation(line: 164, column: 1, scope: !4715)
!4805 = distinct !DISubprogram(name: "c_tolower", scope: !4806, file: !4806, line: 337, type: !4807, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !258, retainedNodes: !4)
!4806 = !DIFile(filename: "./lib/c-ctype.h", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!4807 = !DISubroutineType(types: !4808)
!4808 = !{!72, !72}
!4809 = !DILocalVariable(name: "c", arg: 1, scope: !4805, file: !4806, line: 337, type: !72)
!4810 = !DILocation(line: 337, column: 16, scope: !4805)
!4811 = !DILocation(line: 339, column: 11, scope: !4805)
!4812 = !DILocation(line: 339, column: 3, scope: !4805)
!4813 = !DILocation(line: 342, column: 14, scope: !4814)
!4814 = distinct !DILexicalBlock(scope: !4805, file: !4806, line: 340, column: 5)
!4815 = !DILocation(line: 342, column: 16, scope: !4814)
!4816 = !DILocation(line: 342, column: 22, scope: !4814)
!4817 = !DILocation(line: 342, column: 7, scope: !4814)
!4818 = !DILocation(line: 344, column: 14, scope: !4814)
!4819 = !DILocation(line: 344, column: 7, scope: !4814)
!4820 = !DILocation(line: 346, column: 1, scope: !4805)
!4821 = distinct !DISubprogram(name: "getugroups", scope: !4822, file: !4822, line: 61, type: !4823, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !260, retainedNodes: !4)
!4822 = !DIFile(filename: "lib/getugroups.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!4823 = !DISubroutineType(types: !4824)
!4824 = !{!72, !72, !183, !69, !21}
!4825 = !DILocalVariable(name: "maxcount", arg: 1, scope: !4821, file: !4822, line: 61, type: !72)
!4826 = !DILocation(line: 61, column: 17, scope: !4821)
!4827 = !DILocalVariable(name: "grouplist", arg: 2, scope: !4821, file: !4822, line: 61, type: !183)
!4828 = !DILocation(line: 61, column: 34, scope: !4821)
!4829 = !DILocalVariable(name: "username", arg: 3, scope: !4821, file: !4822, line: 61, type: !69)
!4830 = !DILocation(line: 61, column: 57, scope: !4821)
!4831 = !DILocalVariable(name: "gid", arg: 4, scope: !4821, file: !4822, line: 62, type: !21)
!4832 = !DILocation(line: 62, column: 19, scope: !4821)
!4833 = !DILocalVariable(name: "count", scope: !4821, file: !4822, line: 64, type: !72)
!4834 = !DILocation(line: 64, column: 7, scope: !4821)
!4835 = !DILocation(line: 66, column: 7, scope: !4836)
!4836 = distinct !DILexicalBlock(scope: !4821, file: !4822, line: 66, column: 7)
!4837 = !DILocation(line: 66, column: 11, scope: !4836)
!4838 = !DILocation(line: 66, column: 7, scope: !4821)
!4839 = !DILocation(line: 68, column: 11, scope: !4840)
!4840 = distinct !DILexicalBlock(scope: !4841, file: !4822, line: 68, column: 11)
!4841 = distinct !DILexicalBlock(scope: !4836, file: !4822, line: 67, column: 5)
!4842 = !DILocation(line: 68, column: 20, scope: !4840)
!4843 = !DILocation(line: 68, column: 11, scope: !4841)
!4844 = !DILocation(line: 69, column: 28, scope: !4840)
!4845 = !DILocation(line: 69, column: 9, scope: !4840)
!4846 = !DILocation(line: 69, column: 19, scope: !4840)
!4847 = !DILocation(line: 69, column: 26, scope: !4840)
!4848 = !DILocation(line: 70, column: 7, scope: !4841)
!4849 = !DILocation(line: 71, column: 5, scope: !4841)
!4850 = !DILocation(line: 73, column: 3, scope: !4821)
!4851 = !DILocation(line: 74, column: 3, scope: !4821)
!4852 = !DILocalVariable(name: "cp", scope: !4853, file: !4822, line: 76, type: !184)
!4853 = distinct !DILexicalBlock(scope: !4821, file: !4822, line: 75, column: 5)
!4854 = !DILocation(line: 76, column: 14, scope: !4853)
!4855 = !DILocalVariable(name: "grp", scope: !4853, file: !4822, line: 77, type: !4856)
!4856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4857, size: 64)
!4857 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group", file: !967, line: 42, size: 256, elements: !4858)
!4858 = !{!4859, !4860, !4861, !4862}
!4859 = !DIDerivedType(tag: DW_TAG_member, name: "gr_name", scope: !4857, file: !967, line: 44, baseType: !6, size: 64)
!4860 = !DIDerivedType(tag: DW_TAG_member, name: "gr_passwd", scope: !4857, file: !967, line: 45, baseType: !6, size: 64, offset: 64)
!4861 = !DIDerivedType(tag: DW_TAG_member, name: "gr_gid", scope: !4857, file: !967, line: 46, baseType: !22, size: 32, offset: 128)
!4862 = !DIDerivedType(tag: DW_TAG_member, name: "gr_mem", scope: !4857, file: !967, line: 47, baseType: !184, size: 64, offset: 192)
!4863 = !DILocation(line: 77, column: 21, scope: !4853)
!4864 = !DILocation(line: 79, column: 7, scope: !4853)
!4865 = !DILocation(line: 79, column: 13, scope: !4853)
!4866 = !DILocation(line: 80, column: 13, scope: !4853)
!4867 = !DILocation(line: 80, column: 11, scope: !4853)
!4868 = !DILocation(line: 81, column: 11, scope: !4869)
!4869 = distinct !DILexicalBlock(scope: !4853, file: !4822, line: 81, column: 11)
!4870 = !DILocation(line: 81, column: 15, scope: !4869)
!4871 = !DILocation(line: 81, column: 11, scope: !4853)
!4872 = !DILocation(line: 82, column: 9, scope: !4869)
!4873 = !DILocation(line: 84, column: 17, scope: !4874)
!4874 = distinct !DILexicalBlock(scope: !4853, file: !4822, line: 84, column: 7)
!4875 = !DILocation(line: 84, column: 22, scope: !4874)
!4876 = !DILocation(line: 84, column: 15, scope: !4874)
!4877 = !DILocation(line: 84, column: 12, scope: !4874)
!4878 = !DILocation(line: 84, column: 31, scope: !4879)
!4879 = distinct !DILexicalBlock(scope: !4874, file: !4822, line: 84, column: 7)
!4880 = !DILocation(line: 84, column: 30, scope: !4879)
!4881 = !DILocation(line: 84, column: 7, scope: !4874)
!4882 = !DILocalVariable(name: "n", scope: !4883, file: !4822, line: 86, type: !72)
!4883 = distinct !DILexicalBlock(scope: !4879, file: !4822, line: 85, column: 9)
!4884 = !DILocation(line: 86, column: 15, scope: !4883)
!4885 = !DILocation(line: 88, column: 18, scope: !4886)
!4886 = distinct !DILexicalBlock(scope: !4883, file: !4822, line: 88, column: 16)
!4887 = !DILocation(line: 88, column: 16, scope: !4883)
!4888 = !DILocation(line: 89, column: 13, scope: !4886)
!4889 = !DILocation(line: 92, column: 18, scope: !4890)
!4890 = distinct !DILexicalBlock(scope: !4883, file: !4822, line: 92, column: 11)
!4891 = !DILocation(line: 92, column: 16, scope: !4890)
!4892 = !DILocation(line: 92, column: 23, scope: !4893)
!4893 = distinct !DILexicalBlock(scope: !4890, file: !4822, line: 92, column: 11)
!4894 = !DILocation(line: 92, column: 27, scope: !4893)
!4895 = !DILocation(line: 92, column: 25, scope: !4893)
!4896 = !DILocation(line: 92, column: 11, scope: !4890)
!4897 = !DILocation(line: 93, column: 17, scope: !4898)
!4898 = distinct !DILexicalBlock(scope: !4893, file: !4822, line: 93, column: 17)
!4899 = !DILocation(line: 93, column: 27, scope: !4898)
!4900 = !DILocation(line: 93, column: 30, scope: !4898)
!4901 = !DILocation(line: 93, column: 40, scope: !4898)
!4902 = !DILocation(line: 93, column: 46, scope: !4898)
!4903 = !DILocation(line: 93, column: 51, scope: !4898)
!4904 = !DILocation(line: 93, column: 43, scope: !4898)
!4905 = !DILocation(line: 93, column: 17, scope: !4893)
!4906 = !DILocation(line: 94, column: 15, scope: !4898)
!4907 = !DILocation(line: 92, column: 34, scope: !4893)
!4908 = !DILocation(line: 92, column: 11, scope: !4893)
!4909 = distinct !{!4909, !4896, !4910}
!4910 = !DILocation(line: 94, column: 15, scope: !4890)
!4911 = !DILocation(line: 97, column: 15, scope: !4912)
!4912 = distinct !DILexicalBlock(scope: !4883, file: !4822, line: 97, column: 15)
!4913 = !DILocation(line: 97, column: 20, scope: !4912)
!4914 = !DILocation(line: 97, column: 17, scope: !4912)
!4915 = !DILocation(line: 97, column: 15, scope: !4883)
!4916 = !DILocation(line: 99, column: 19, scope: !4917)
!4917 = distinct !DILexicalBlock(scope: !4918, file: !4822, line: 99, column: 19)
!4918 = distinct !DILexicalBlock(scope: !4912, file: !4822, line: 98, column: 13)
!4919 = !DILocation(line: 99, column: 28, scope: !4917)
!4920 = !DILocation(line: 99, column: 19, scope: !4918)
!4921 = !DILocation(line: 101, column: 23, scope: !4922)
!4922 = distinct !DILexicalBlock(scope: !4923, file: !4822, line: 101, column: 23)
!4923 = distinct !DILexicalBlock(scope: !4917, file: !4822, line: 100, column: 17)
!4924 = !DILocation(line: 101, column: 32, scope: !4922)
!4925 = !DILocation(line: 101, column: 29, scope: !4922)
!4926 = !DILocation(line: 101, column: 23, scope: !4923)
!4927 = !DILocation(line: 102, column: 21, scope: !4922)
!4928 = !DILocation(line: 103, column: 38, scope: !4923)
!4929 = !DILocation(line: 103, column: 43, scope: !4923)
!4930 = !DILocation(line: 103, column: 19, scope: !4923)
!4931 = !DILocation(line: 103, column: 29, scope: !4923)
!4932 = !DILocation(line: 103, column: 36, scope: !4923)
!4933 = !DILocation(line: 104, column: 17, scope: !4923)
!4934 = !DILocation(line: 105, column: 19, scope: !4935)
!4935 = distinct !DILexicalBlock(scope: !4918, file: !4822, line: 105, column: 19)
!4936 = !DILocation(line: 105, column: 25, scope: !4935)
!4937 = !DILocation(line: 105, column: 19, scope: !4918)
!4938 = !DILocation(line: 107, column: 19, scope: !4939)
!4939 = distinct !DILexicalBlock(scope: !4935, file: !4822, line: 106, column: 17)
!4940 = !DILocation(line: 107, column: 25, scope: !4939)
!4941 = !DILocation(line: 108, column: 19, scope: !4939)
!4942 = !DILocation(line: 110, column: 20, scope: !4918)
!4943 = !DILocation(line: 111, column: 13, scope: !4918)
!4944 = !DILocation(line: 112, column: 9, scope: !4883)
!4945 = !DILocation(line: 84, column: 35, scope: !4879)
!4946 = !DILocation(line: 84, column: 7, scope: !4879)
!4947 = distinct !{!4947, !4881, !4948}
!4948 = !DILocation(line: 112, column: 9, scope: !4874)
!4949 = distinct !{!4949, !4851, !4950}
!4950 = !DILocation(line: 113, column: 5, scope: !4821)
!4951 = !DILocation(line: 115, column: 7, scope: !4952)
!4952 = distinct !DILexicalBlock(scope: !4821, file: !4822, line: 115, column: 7)
!4953 = !DILocation(line: 115, column: 13, scope: !4952)
!4954 = !DILocation(line: 115, column: 7, scope: !4821)
!4955 = !DILocation(line: 116, column: 11, scope: !4952)
!4956 = !DILocation(line: 116, column: 5, scope: !4952)
!4957 = !DILocation(line: 115, column: 16, scope: !4952)
!4958 = !DILabel(scope: !4821, name: "done", file: !4822, line: 118)
!4959 = !DILocation(line: 118, column: 2, scope: !4821)
!4960 = !DILocalVariable(name: "saved_errno", scope: !4961, file: !4822, line: 120, type: !72)
!4961 = distinct !DILexicalBlock(scope: !4821, file: !4822, line: 119, column: 3)
!4962 = !DILocation(line: 120, column: 9, scope: !4961)
!4963 = !DILocation(line: 120, column: 23, scope: !4961)
!4964 = !DILocation(line: 121, column: 5, scope: !4961)
!4965 = !DILocation(line: 122, column: 13, scope: !4961)
!4966 = !DILocation(line: 122, column: 5, scope: !4961)
!4967 = !DILocation(line: 122, column: 11, scope: !4961)
!4968 = !DILocation(line: 125, column: 10, scope: !4821)
!4969 = !DILocation(line: 125, column: 3, scope: !4821)
