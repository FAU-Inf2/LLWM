; ModuleID = '<stdin>'
source_filename = "ld-temp.o"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.infomap = type { i8*, i8* }
%struct.option = type { i8*, i32, i32*, i32 }
%struct.quoting_options = type { i32, i32, [8 x i32], i8*, i8* }
%struct.slotvec = type { i64, i8* }
%struct.passwd = type { i8*, i8*, i32, i32, i8*, i8*, i8* }
%struct.group = type { i8*, i8*, i32, i8** }
%struct.__mbstate_t = type { i32, %union.anon }
%union.anon = type { i32 }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }

@stderr = external dso_local global %struct._IO_FILE*, align 8
@.str = private unnamed_addr constant [39 x i8] c"Try '%s --help' for more information.\0A\00", align 1
@.str.1 = private unnamed_addr constant [33 x i8] c"Usage: %s [OPTION]... [USER]...\0A\00", align 1
@.str.2 = private unnamed_addr constant [105 x i8] c"Print user and group information for each specified USER,\0Aor (when USER omitted) for the current user.\0A\0A\00", align 1
@stdout = external dso_local global %struct._IO_FILE*, align 8
@.str.3 = private unnamed_addr constant [521 x i8] c"  -a             ignore, for compatibility with other versions\0A  -Z, --context  print only the security context of the process\0A  -g, --group    print only the effective group ID\0A  -G, --groups   print all group IDs\0A  -n, --name     print a name instead of a number, for -ugG\0A  -r, --real     print the real ID instead of the effective ID, with -ugG\0A  -u, --user     print only the effective user ID\0A  -z, --zero     delimit entries with NUL characters, not whitespace;\0A                   not permitted in default format\0A\00", align 1
@.str.4 = private unnamed_addr constant [45 x i8] c"      --help     display this help and exit\0A\00", align 1
@.str.5 = private unnamed_addr constant [54 x i8] c"      --version  output version information and exit\0A\00", align 1
@.str.6 = private unnamed_addr constant [71 x i8] c"\0AWithout any OPTION, print some useful set of identified information.\0A\00", align 1
@.str.7 = private unnamed_addr constant [3 x i8] c"id\00", align 1
@__const.emit_ancillary_info.infomap = private unnamed_addr constant [7 x %struct.infomap] [%struct.infomap { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.27, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.28, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.29, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.30, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.31, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.31, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.33, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.31, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.34, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.31, i32 0, i32 0) }, %struct.infomap zeroinitializer], align 16
@.str.35 = private unnamed_addr constant [23 x i8] c"\0A%s online help: <%s>\0A\00", align 1
@.str.13 = private unnamed_addr constant [14 x i8] c"GNU coreutils\00", align 1
@.str.36 = private unnamed_addr constant [40 x i8] c"https://www.gnu.org/software/coreutils/\00", align 1
@.str.37 = private unnamed_addr constant [4 x i8] c"en_\00", align 1
@.str.38 = private unnamed_addr constant [71 x i8] c"Report any translation bugs to <https://translationproject.org/team/>\0A\00", align 1
@.str.39 = private unnamed_addr constant [27 x i8] c"Full documentation <%s%s>\0A\00", align 1
@.str.40 = private unnamed_addr constant [51 x i8] c"or available locally via: info '(coreutils) %s%s'\0A\00", align 1
@.str.41 = private unnamed_addr constant [12 x i8] c" invocation\00", align 1
@.str.8 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.27 = private unnamed_addr constant [2 x i8] c"[\00", align 1
@.str.28 = private unnamed_addr constant [16 x i8] c"test invocation\00", align 1
@.str.9 = private unnamed_addr constant [10 x i8] c"coreutils\00", align 1
@.str.29 = private unnamed_addr constant [22 x i8] c"Multi-call invocation\00", align 1
@.str.30 = private unnamed_addr constant [10 x i8] c"sha224sum\00", align 1
@.str.31 = private unnamed_addr constant [15 x i8] c"sha2 utilities\00", align 1
@.str.32 = private unnamed_addr constant [10 x i8] c"sha256sum\00", align 1
@.str.33 = private unnamed_addr constant [10 x i8] c"sha384sum\00", align 1
@.str.34 = private unnamed_addr constant [10 x i8] c"sha512sum\00", align 1
@.str.10 = private unnamed_addr constant [24 x i8] c"/usr/local/share/locale\00", align 1
@.str.11 = private unnamed_addr constant [9 x i8] c"agnruzGZ\00", align 1
@longopts = internal constant [10 x %struct.option] [%struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.42, i32 0, i32 0), i32 0, i32* null, i32 90 }, %struct.option { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.43, i32 0, i32 0), i32 0, i32* null, i32 103 }, %struct.option { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.44, i32 0, i32 0), i32 0, i32* null, i32 71 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.45, i32 0, i32 0), i32 0, i32* null, i32 110 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.46, i32 0, i32 0), i32 0, i32* null, i32 114 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.47, i32 0, i32 0), i32 0, i32* null, i32 117 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.48, i32 0, i32 0), i32 0, i32* null, i32 122 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.49, i32 0, i32 0), i32 0, i32* null, i32 -130 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.50, i32 0, i32 0), i32 0, i32* null, i32 -131 }, %struct.option zeroinitializer], align 16, !dbg !0
@.str.12 = private unnamed_addr constant [55 x i8] c"--context (-Z) works only on an SELinux-enabled kernel\00", align 1
@just_context = internal global i8 0, align 1, !dbg !25
@just_group = internal global i8 0, align 1, !dbg !28
@use_name = internal global i8 0, align 1, !dbg !30
@use_real = internal global i8 0, align 1, !dbg !32
@just_user = internal global i8 0, align 1, !dbg !34
@opt_zero = internal global i8 0, align 1, !dbg !36
@just_group_list = internal global i8 0, align 1, !dbg !38
@.str.14 = private unnamed_addr constant [15 x i8] c"Arnold Robbins\00", align 1
@.str.15 = private unnamed_addr constant [16 x i8] c"David MacKenzie\00", align 1
@optind = external dso_local global i32, align 4
@.str.16 = private unnamed_addr constant [50 x i8] c"cannot print security context when user specified\00", align 1
@.str.17 = private unnamed_addr constant [44 x i8] c"cannot print \22only\22 of more than one choice\00", align 1
@.str.18 = private unnamed_addr constant [54 x i8] c"cannot print only names or real IDs in default format\00", align 1
@.str.19 = private unnamed_addr constant [46 x i8] c"option --zero not permitted in default format\00", align 1
@.str.20 = private unnamed_addr constant [16 x i8] c"POSIXLY_CORRECT\00", align 1
@context = internal global i8* null, align 8, !dbg !40
@.str.21 = private unnamed_addr constant [26 x i8] c"can't get process context\00", align 1
@multiple_users = internal global i8 0, align 1, !dbg !42
@euid = internal global i32 0, align 4, !dbg !17
@.str.22 = private unnamed_addr constant [17 x i8] c"%s: no such user\00", align 1
@ok = internal global i8 1, align 1, !dbg !44
@ruid = internal global i32 0, align 4, !dbg !10
@egid = internal global i32 0, align 4, !dbg !23
@rgid = internal global i32 0, align 4, !dbg !19
@.str.23 = private unnamed_addr constant [25 x i8] c"cannot get effective UID\00", align 1
@.str.24 = private unnamed_addr constant [20 x i8] c"cannot get real UID\00", align 1
@.str.25 = private unnamed_addr constant [25 x i8] c"cannot get effective GID\00", align 1
@.str.26 = private unnamed_addr constant [20 x i8] c"cannot get real GID\00", align 1
@.str.52 = private unnamed_addr constant [7 x i8] c"uid=%s\00", align 1
@.str.53 = private unnamed_addr constant [5 x i8] c"(%s)\00", align 1
@.str.54 = private unnamed_addr constant [8 x i8] c" gid=%s\00", align 1
@.str.55 = private unnamed_addr constant [9 x i8] c" euid=%s\00", align 1
@.str.56 = private unnamed_addr constant [9 x i8] c" egid=%s\00", align 1
@.str.57 = private unnamed_addr constant [33 x i8] c"failed to get groups for user %s\00", align 1
@.str.58 = private unnamed_addr constant [45 x i8] c"failed to get groups for the current process\00", align 1
@.str.59 = private unnamed_addr constant [9 x i8] c" groups=\00", align 1
@.str.60 = private unnamed_addr constant [12 x i8] c" context=%s\00", align 1
@gidtostr_ptr.buf = internal global [21 x i8] zeroinitializer, align 16, !dbg !56
@uidtostr_ptr.buf = internal global [21 x i8] zeroinitializer, align 16, !dbg !46
@.str.51 = private unnamed_addr constant [32 x i8] c"cannot find name for user ID %s\00", align 1
@.str.42 = private unnamed_addr constant [8 x i8] c"context\00", align 1
@.str.43 = private unnamed_addr constant [6 x i8] c"group\00", align 1
@.str.44 = private unnamed_addr constant [7 x i8] c"groups\00", align 1
@.str.45 = private unnamed_addr constant [5 x i8] c"name\00", align 1
@.str.46 = private unnamed_addr constant [5 x i8] c"real\00", align 1
@.str.47 = private unnamed_addr constant [5 x i8] c"user\00", align 1
@.str.48 = private unnamed_addr constant [5 x i8] c"zero\00", align 1
@.str.49 = private unnamed_addr constant [5 x i8] c"help\00", align 1
@.str.50 = private unnamed_addr constant [8 x i8] c"version\00", align 1
@.str.61 = private unnamed_addr constant [33 x i8] c"failed to get groups for user %s\00", align 1
@.str.1.62 = private unnamed_addr constant [45 x i8] c"failed to get groups for the current process\00", align 1
@.str.2.63 = private unnamed_addr constant [34 x i8] c"cannot find name for group ID %lu\00", align 1
@gidtostr_ptr.buf.65 = internal global [21 x i8] zeroinitializer, align 16, !dbg !78
@Version = internal global i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.68, i32 0, i32 0), align 8, !dbg !86
@.str.68 = private unnamed_addr constant [5 x i8] c"8.32\00", align 1
@ignore_EPIPE = internal global i8 0, align 1, !dbg !91
@.str.71 = private unnamed_addr constant [12 x i8] c"write error\00", align 1
@file_name = internal global i8* null, align 8, !dbg !96
@.str.1.72 = private unnamed_addr constant [7 x i8] c"%s: %s\00", align 1
@.str.2.73 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@exit_failure = internal global i32 1, align 4, !dbg !99
@.str.80 = private unnamed_addr constant [56 x i8] c"A NULL argv[0] was passed through an exec system call.\0A\00", align 1
@.str.1.81 = private unnamed_addr constant [8 x i8] c"/.libs/\00", align 1
@.str.2.82 = private unnamed_addr constant [4 x i8] c"lt-\00", align 1
@program_invocation_short_name = external dso_local global i8*, align 8
@program_name = internal global i8* null, align 8, !dbg !106
@program_invocation_name = external dso_local global i8*, align 8
@default_quoting_options = internal global %struct.quoting_options zeroinitializer, align 8, !dbg !113
@slotvec = internal global %struct.slotvec* @slotvec0, align 8, !dbg !165
@nslots = internal global i32 1, align 4, !dbg !172
@slotvec0 = internal global %struct.slotvec { i64 256, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i32 0, i32 0) }, align 8, !dbg !174
@slot0 = internal global [256 x i8] zeroinitializer, align 16, !dbg !160
@.str.10.85 = private unnamed_addr constant [2 x i8] c"\22\00", align 1
@.str.11.86 = private unnamed_addr constant [2 x i8] c"`\00", align 1
@.str.12.87 = private unnamed_addr constant [2 x i8] c"'\00", align 1
@.str.13.88 = private unnamed_addr constant [6 x i8] c"UTF-8\00", align 1
@.str.14.89 = private unnamed_addr constant [4 x i8] c"\E2\80\98\00", align 1
@.str.15.90 = private unnamed_addr constant [4 x i8] c"\E2\80\99\00", align 1
@.str.16.91 = private unnamed_addr constant [8 x i8] c"GB18030\00", align 1
@.str.17.92 = private unnamed_addr constant [4 x i8] c"\A1\07e\00", align 1
@.str.18.93 = private unnamed_addr constant [3 x i8] c"\A1\AF\00", align 1
@quote_quoting_options = internal global %struct.quoting_options { i32 8, i32 0, [8 x i32] zeroinitializer, i8* null, i8* null }, align 8, !dbg !148
@parse_with_separator.E_bad_spec = internal global i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2.105, i32 0, i32 0), align 8, !dbg !176
@.str.3.102 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@parse_with_separator.E_invalid_user = internal global i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.104, i32 0, i32 0), align 8, !dbg !189
@parse_with_separator.E_invalid_group = internal global i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.103, i32 0, i32 0), align 8, !dbg !191
@.str.1.103 = private unnamed_addr constant [14 x i8] c"invalid group\00", align 1
@.str.104 = private unnamed_addr constant [13 x i8] c"invalid user\00", align 1
@.str.2.105 = private unnamed_addr constant [13 x i8] c"invalid spec\00", align 1
@.str.106 = private unnamed_addr constant [12 x i8] c"%s (%s) %s\0A\00", align 1
@.str.1.107 = private unnamed_addr constant [7 x i8] c"%s %s\0A\00", align 1
@.str.2.108 = private unnamed_addr constant [4 x i8] c"(C)\00", align 1
@.str.3.109 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.4.110 = private unnamed_addr constant [171 x i8] c"License GPLv3+: GNU GPL version 3 or later <%s>.\0AThis is free software: you are free to change and redistribute it.\0AThere is NO WARRANTY, to the extent permitted by law.\0A\00", align 1
@.str.5.111 = private unnamed_addr constant [34 x i8] c"https://gnu.org/licenses/gpl.html\00", align 1
@.str.6.112 = private unnamed_addr constant [16 x i8] c"Written by %s.\0A\00", align 1
@.str.7.113 = private unnamed_addr constant [23 x i8] c"Written by %s and %s.\0A\00", align 1
@.str.8.114 = private unnamed_addr constant [28 x i8] c"Written by %s, %s, and %s.\0A\00", align 1
@.str.9.115 = private unnamed_addr constant [32 x i8] c"Written by %s, %s, %s,\0Aand %s.\0A\00", align 1
@.str.10.116 = private unnamed_addr constant [36 x i8] c"Written by %s, %s, %s,\0A%s, and %s.\0A\00", align 1
@.str.11.117 = private unnamed_addr constant [40 x i8] c"Written by %s, %s, %s,\0A%s, %s, and %s.\0A\00", align 1
@.str.12.118 = private unnamed_addr constant [44 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, and %s.\0A\00", align 1
@.str.13.119 = private unnamed_addr constant [48 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0Aand %s.\0A\00", align 1
@.str.14.120 = private unnamed_addr constant [52 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0A%s, and %s.\0A\00", align 1
@.str.15.121 = private unnamed_addr constant [60 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0A%s, %s, and others.\0A\00", align 1
@version_etc_copyright = internal constant [47 x i8] c"Copyright %s %d Free Software Foundation, Inc.\00", align 16, !dbg !193
@.str.1.136 = private unnamed_addr constant [17 x i8] c"memory exhausted\00", align 1
@.str.137 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.142 = private unnamed_addr constant [38 x i8] c"0 <= strtol_base && strtol_base <= 36\00", align 1
@.str.1.143 = private unnamed_addr constant [16 x i8] c"./lib/xstrtol.c\00", align 1
@__PRETTY_FUNCTION__.xstrtoul = private unnamed_addr constant [81 x i8] c"strtol_error xstrtoul(const char *, char **, int, unsigned long *, const char *)\00", align 1
@.str.152 = private unnamed_addr constant [2 x i8] c"C\00", align 1
@.str.1.153 = private unnamed_addr constant [6 x i8] c"POSIX\00", align 1
@.str.156 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.1.157 = private unnamed_addr constant [6 x i8] c"ASCII\00", align 1
@inVal0 = global i32 0
@inVal1 = global i8** null
@.compVal0 = private global [2 x i8] c"+\00"
@.compVal1 = private global [4 x i8] c"\01  \00"
@.compVal2 = private global [1 x i8] zeroinitializer
@x = common global i32 0
@y = common global i32 0
@x.1 = common global i32 0
@y.2 = common global i32 0
@x.3 = common global i32 0
@y.4 = common global i32 0
@x.5 = common global i32 0
@y.6 = common global i32 0
@x.7 = common global i32 0
@y.8 = common global i32 0
@x.9 = common global i32 0
@y.10 = common global i32 0
@x.11 = common global i32 0
@y.12 = common global i32 0
@x.13 = common global i32 0
@y.14 = common global i32 0
@x.15 = common global i32 0
@y.16 = common global i32 0
@x.17 = common global i32 0
@y.18 = common global i32 0
@x.19 = common global i32 0
@y.20 = common global i32 0
@x.21 = common global i32 0
@y.22 = common global i32 0
@x.23 = common global i32 0
@y.24 = common global i32 0
@x.25 = common global i32 0
@y.26 = common global i32 0
@x.27 = common global i32 0
@y.28 = common global i32 0
@x.29 = common global i32 0
@y.30 = common global i32 0
@x.31 = common global i32 0
@y.32 = common global i32 0
@x.33 = common global i32 0
@y.34 = common global i32 0
@x.35 = common global i32 0
@y.36 = common global i32 0
@x.37 = common global i32 0
@y.38 = common global i32 0
@x.39 = common global i32 0
@y.40 = common global i32 0
@x.41 = common global i32 0
@y.42 = common global i32 0
@x.43 = common global i32 0
@y.44 = common global i32 0
@x.45 = common global i32 0
@y.46 = common global i32 0
@x.47 = common global i32 0
@y.48 = common global i32 0
@x.49 = common global i32 0
@y.50 = common global i32 0
@x.51 = common global i32 0
@y.52 = common global i32 0
@x.53 = common global i32 0
@y.54 = common global i32 0
@x.55 = common global i32 0
@y.56 = common global i32 0
@x.57 = common global i32 0
@y.58 = common global i32 0
@x.59 = common global i32 0
@y.60 = common global i32 0
@x.61 = common global i32 0
@y.62 = common global i32 0
@x.63 = common global i32 0
@y.64 = common global i32 0
@x.65 = common global i32 0
@y.66 = common global i32 0
@x.67 = common global i32 0
@y.68 = common global i32 0
@x.69 = common global i32 0
@y.70 = common global i32 0
@x.71 = common global i32 0
@y.72 = common global i32 0
@x.73 = common global i32 0
@y.74 = common global i32 0
@x.75 = common global i32 0
@y.76 = common global i32 0
@x.77 = common global i32 0
@y.78 = common global i32 0
@x.79 = common global i32 0
@y.80 = common global i32 0
@x.81 = common global i32 0
@y.82 = common global i32 0
@x.83 = common global i32 0
@y.84 = common global i32 0
@x.85 = common global i32 0
@y.86 = common global i32 0
@x.87 = common global i32 0
@y.88 = common global i32 0
@x.89 = common global i32 0
@y.90 = common global i32 0
@x.91 = common global i32 0
@y.92 = common global i32 0
@x.93 = common global i32 0
@y.94 = common global i32 0
@x.95 = common global i32 0
@y.96 = common global i32 0
@x.97 = common global i32 0
@y.98 = common global i32 0
@x.99 = common global i32 0
@y.100 = common global i32 0
@x.101 = common global i32 0
@y.102 = common global i32 0
@x.103 = common global i32 0
@y.104 = common global i32 0
@x.105 = common global i32 0
@y.106 = common global i32 0
@x.107 = common global i32 0
@y.108 = common global i32 0
@x.109 = common global i32 0
@y.110 = common global i32 0
@x.111 = common global i32 0
@y.112 = common global i32 0
@x.113 = common global i32 0
@y.114 = common global i32 0
@x.115 = common global i32 0
@y.116 = common global i32 0

; Function Attrs: noinline noreturn nounwind optnone uwtable
define internal void @usage(i32) #0 !dbg !269 {
  %2 = load i32, i32* @x
  %3 = load i32, i32* @y
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i32, align 4
  store i32 %0, i32* %10, align 4
  call void @llvm.dbg.declare(metadata i32* %10, metadata !272, metadata !DIExpression()), !dbg !273
  %11 = load i32, i32* %10, align 4, !dbg !274
  %12 = icmp ne i32 %11, 0, !dbg !276
  %13 = load i32, i32* @x
  %14 = load i32, i32* @y
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %12, label %21, label %60, !dbg !277

21:                                               ; preds = %originalBBpart2
  %22 = load i32, i32* @x
  %23 = load i32, i32* @y
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %21, %originalBB1alteredBB
  %30 = load i32, i32* @x
  %31 = load i32, i32* @y
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %38, !dbg !278

38:                                               ; preds = %originalBBpart24
  %39 = load i32, i32* @x
  %40 = load i32, i32* @y
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %38, %originalBB6alteredBB
  %47 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !279
  %48 = call i8* @gettext(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str, i64 0, i64 0)) #10, !dbg !279
  %49 = load i8*, i8** @program_name, align 8, !dbg !279
  %50 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %47, i8* %48, i8* %49), !dbg !279
  %51 = load i32, i32* @x
  %52 = load i32, i32* @y
  %53 = sub i32 %51, 1
  %54 = mul i32 %51, %53
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %52, 10
  %58 = or i1 %56, %57
  br i1 %58, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %59, !dbg !279

59:                                               ; preds = %originalBBpart28
  br label %95, !dbg !279

60:                                               ; preds = %originalBBpart2
  %61 = load i32, i32* @x
  %62 = load i32, i32* @y
  %63 = sub i32 %61, 1
  %64 = mul i32 %61, %63
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %62, 10
  %68 = or i1 %66, %67
  br i1 %68, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %60, %originalBB10alteredBB
  %69 = call i8* @gettext(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1, i64 0, i64 0)) #10, !dbg !281
  %70 = load i8*, i8** @program_name, align 8, !dbg !283
  %71 = call i32 (i8*, ...) @printf(i8* %69, i8* %70), !dbg !284
  %72 = call i8* @gettext(i8* getelementptr inbounds ([105 x i8], [105 x i8]* @.str.2, i64 0, i64 0)) #10, !dbg !285
  %73 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !285
  %74 = call i32 @fputs_unlocked(i8* %72, %struct._IO_FILE* %73), !dbg !285
  %75 = call i8* @gettext(i8* getelementptr inbounds ([521 x i8], [521 x i8]* @.str.3, i64 0, i64 0)) #10, !dbg !286
  %76 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !286
  %77 = call i32 @fputs_unlocked(i8* %75, %struct._IO_FILE* %76), !dbg !286
  %78 = call i8* @gettext(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.4, i64 0, i64 0)) #10, !dbg !287
  %79 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !287
  %80 = call i32 @fputs_unlocked(i8* %78, %struct._IO_FILE* %79), !dbg !287
  %81 = call i8* @gettext(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.5, i64 0, i64 0)) #10, !dbg !288
  %82 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !288
  %83 = call i32 @fputs_unlocked(i8* %81, %struct._IO_FILE* %82), !dbg !288
  %84 = call i8* @gettext(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.6, i64 0, i64 0)) #10, !dbg !289
  %85 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !289
  %86 = call i32 @fputs_unlocked(i8* %84, %struct._IO_FILE* %85), !dbg !289
  call void @emit_ancillary_info(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0)), !dbg !290
  %87 = load i32, i32* @x
  %88 = load i32, i32* @y
  %89 = sub i32 %87, 1
  %90 = mul i32 %87, %89
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %88, 10
  %94 = or i1 %92, %93
  br i1 %94, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %95

95:                                               ; preds = %originalBBpart212, %59
  %96 = load i32, i32* %10, align 4, !dbg !291
  call void @exit(i32 %96) #12, !dbg !292
  unreachable, !dbg !292

originalBBalteredBB:                              ; preds = %originalBB, %1
  %97 = alloca i32, align 4
  store i32 %0, i32* %97, align 4
  call void @llvm.dbg.declare(metadata i32* %97, metadata !293, metadata !DIExpression()), !dbg !273
  %98 = load i32, i32* %97, align 4, !dbg !274
  %99 = icmp ne i32 %98, 0, !dbg !276
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %21
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %38
  %100 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !279
  %101 = call i8* @gettext(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str, i64 0, i64 0)) #10, !dbg !279
  %102 = load i8*, i8** @program_name, align 8, !dbg !279
  %103 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %100, i8* %101, i8* %102), !dbg !279
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %60
  %104 = call i8* @gettext(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1, i64 0, i64 0)) #10, !dbg !281
  %105 = load i8*, i8** @program_name, align 8, !dbg !283
  %106 = call i32 (i8*, ...) @printf(i8* %104, i8* %105), !dbg !284
  %107 = call i8* @gettext(i8* getelementptr inbounds ([105 x i8], [105 x i8]* @.str.2, i64 0, i64 0)) #10, !dbg !285
  %108 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !285
  %109 = call i32 @fputs_unlocked(i8* %107, %struct._IO_FILE* %108), !dbg !285
  %110 = call i8* @gettext(i8* getelementptr inbounds ([521 x i8], [521 x i8]* @.str.3, i64 0, i64 0)) #10, !dbg !286
  %111 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !286
  %112 = call i32 @fputs_unlocked(i8* %110, %struct._IO_FILE* %111), !dbg !286
  %113 = call i8* @gettext(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.4, i64 0, i64 0)) #10, !dbg !287
  %114 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !287
  %115 = call i32 @fputs_unlocked(i8* %113, %struct._IO_FILE* %114), !dbg !287
  %116 = call i8* @gettext(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.5, i64 0, i64 0)) #10, !dbg !288
  %117 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !288
  %118 = call i32 @fputs_unlocked(i8* %116, %struct._IO_FILE* %117), !dbg !288
  %119 = call i8* @gettext(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.6, i64 0, i64 0)) #10, !dbg !289
  %120 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !289
  %121 = call i32 @fputs_unlocked(i8* %119, %struct._IO_FILE* %120), !dbg !289
  call void @emit_ancillary_info(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0)), !dbg !290
  br label %originalBB10
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind
declare dso_local i8* @gettext(i8*) #2

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) #3

declare dso_local i32 @printf(i8*, ...) #3

declare dso_local i32 @fputs_unlocked(i8*, %struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @emit_ancillary_info(i8*) #4 !dbg !341 {
  %2 = alloca i8*, align 8
  %3 = alloca [7 x %struct.infomap], align 16
  %4 = alloca i8*, align 8
  %5 = alloca %struct.infomap*, align 8
  %6 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !345, metadata !DIExpression()), !dbg !346
  call void @llvm.dbg.declare(metadata [7 x %struct.infomap]* %3, metadata !347, metadata !DIExpression()), !dbg !356
  %7 = bitcast [7 x %struct.infomap]* %3 to i8*, !dbg !356
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %7, i8* align 16 bitcast ([7 x %struct.infomap]* @__const.emit_ancillary_info.infomap to i8*), i64 112, i1 false), !dbg !356
  call void @llvm.dbg.declare(metadata i8** %4, metadata !357, metadata !DIExpression()), !dbg !358
  %8 = load i8*, i8** %2, align 8, !dbg !359
  store i8* %8, i8** %4, align 8, !dbg !358
  call void @llvm.dbg.declare(metadata %struct.infomap** %5, metadata !360, metadata !DIExpression()), !dbg !362
  %9 = getelementptr inbounds [7 x %struct.infomap], [7 x %struct.infomap]* %3, i64 0, i64 0, !dbg !363
  store %struct.infomap* %9, %struct.infomap** %5, align 8, !dbg !362
  br label %10, !dbg !364

10:                                               ; preds = %originalBBpart29, %1
  %11 = load i32, i32* @x.1
  %12 = load i32, i32* @y.2
  %13 = sub i32 %11, 1
  %14 = mul i32 %11, %13
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = icmp slt i32 %12, 10
  %18 = or i1 %16, %17
  br i1 %18, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %10, %originalBBalteredBB
  %19 = load %struct.infomap*, %struct.infomap** %5, align 8, !dbg !365
  %20 = getelementptr inbounds %struct.infomap, %struct.infomap* %19, i32 0, i32 0, !dbg !366
  %21 = load i8*, i8** %20, align 8, !dbg !366
  %22 = icmp ne i8* %21, null, !dbg !365
  %23 = load i32, i32* @x.1
  %24 = load i32, i32* @y.2
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %22, label %31, label %55, !dbg !367

31:                                               ; preds = %originalBBpart2
  %32 = load i32, i32* @x.1
  %33 = load i32, i32* @y.2
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %31, %originalBB1alteredBB
  %40 = load i8*, i8** %2, align 8, !dbg !368
  %41 = load %struct.infomap*, %struct.infomap** %5, align 8, !dbg !368
  %42 = getelementptr inbounds %struct.infomap, %struct.infomap* %41, i32 0, i32 0, !dbg !368
  %43 = load i8*, i8** %42, align 8, !dbg !368
  %44 = call i32 @strcmp(i8* %40, i8* %43) #13, !dbg !368
  %45 = icmp eq i32 %44, 0, !dbg !368
  %46 = xor i1 %45, true, !dbg !369
  %47 = load i32, i32* @x.1
  %48 = load i32, i32* @y.2
  %49 = sub i32 %47, 1
  %50 = mul i32 %47, %49
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %48, 10
  %54 = or i1 %52, %53
  br i1 %54, label %originalBBpart25, label %originalBB1alteredBB

originalBBpart25:                                 ; preds = %originalBB1
  br label %55

55:                                               ; preds = %originalBBpart25, %originalBBpart2
  %56 = phi i1 [ false, %originalBBpart2 ], [ %46, %originalBBpart25 ], !dbg !370
  br i1 %56, label %57, label %76, !dbg !364

57:                                               ; preds = %55
  %58 = load i32, i32* @x.1
  %59 = load i32, i32* @y.2
  %60 = sub i32 %58, 1
  %61 = mul i32 %58, %60
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %59, 10
  %65 = or i1 %63, %64
  br i1 %65, label %originalBB7, label %originalBB7alteredBB

originalBB7:                                      ; preds = %57, %originalBB7alteredBB
  %66 = load %struct.infomap*, %struct.infomap** %5, align 8, !dbg !371
  %67 = getelementptr inbounds %struct.infomap, %struct.infomap* %66, i32 1, !dbg !371
  store %struct.infomap* %67, %struct.infomap** %5, align 8, !dbg !371
  %68 = load i32, i32* @x.1
  %69 = load i32, i32* @y.2
  %70 = sub i32 %68, 1
  %71 = mul i32 %68, %70
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %69, 10
  %75 = or i1 %73, %74
  br i1 %75, label %originalBBpart29, label %originalBB7alteredBB

originalBBpart29:                                 ; preds = %originalBB7
  br label %10, !dbg !364, !llvm.loop !372

76:                                               ; preds = %55
  %77 = load %struct.infomap*, %struct.infomap** %5, align 8, !dbg !373
  %78 = getelementptr inbounds %struct.infomap, %struct.infomap* %77, i32 0, i32 1, !dbg !375
  %79 = load i8*, i8** %78, align 8, !dbg !375
  %80 = icmp ne i8* %79, null, !dbg !373
  br i1 %80, label %81, label %85, !dbg !376

81:                                               ; preds = %76
  %82 = load %struct.infomap*, %struct.infomap** %5, align 8, !dbg !377
  %83 = getelementptr inbounds %struct.infomap, %struct.infomap* %82, i32 0, i32 1, !dbg !378
  %84 = load i8*, i8** %83, align 8, !dbg !378
  store i8* %84, i8** %4, align 8, !dbg !379
  br label %85, !dbg !380

85:                                               ; preds = %81, %76
  %86 = load i32, i32* @x.1
  %87 = load i32, i32* @y.2
  %88 = sub i32 %86, 1
  %89 = mul i32 %86, %88
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %87, 10
  %93 = or i1 %91, %92
  br i1 %93, label %originalBB11, label %originalBB11alteredBB

originalBB11:                                     ; preds = %85, %originalBB11alteredBB
  %94 = call i8* @gettext(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.35, i64 0, i64 0)) #10, !dbg !381
  %95 = call i32 (i8*, ...) @printf(i8* %94, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.36, i64 0, i64 0)), !dbg !382
  call void @llvm.dbg.declare(metadata i8** %6, metadata !383, metadata !DIExpression()), !dbg !384
  %96 = call i8* @setlocale(i32 5, i8* null) #10, !dbg !385
  store i8* %96, i8** %6, align 8, !dbg !384
  %97 = load i8*, i8** %6, align 8, !dbg !386
  %98 = icmp ne i8* %97, null, !dbg !386
  %99 = load i32, i32* @x.1
  %100 = load i32, i32* @y.2
  %101 = sub i32 %99, 1
  %102 = mul i32 %99, %101
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %100, 10
  %106 = or i1 %104, %105
  br i1 %106, label %originalBBpart213, label %originalBB11alteredBB

originalBBpart213:                                ; preds = %originalBB11
  br i1 %98, label %107, label %131, !dbg !388

107:                                              ; preds = %originalBBpart213
  %108 = load i8*, i8** %6, align 8, !dbg !389
  %109 = call i32 @strncmp(i8* %108, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.37, i64 0, i64 0), i64 3) #13, !dbg !389
  %110 = icmp ne i32 %109, 0, !dbg !389
  br i1 %110, label %111, label %131, !dbg !390

111:                                              ; preds = %107
  %112 = load i32, i32* @x.1
  %113 = load i32, i32* @y.2
  %114 = sub i32 %112, 1
  %115 = mul i32 %112, %114
  %116 = urem i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = icmp slt i32 %113, 10
  %119 = or i1 %117, %118
  br i1 %119, label %originalBB15, label %originalBB15alteredBB

originalBB15:                                     ; preds = %111, %originalBB15alteredBB
  %120 = call i8* @gettext(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.38, i64 0, i64 0)) #10, !dbg !391
  %121 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !391
  %122 = call i32 @fputs_unlocked(i8* %120, %struct._IO_FILE* %121), !dbg !391
  %123 = load i32, i32* @x.1
  %124 = load i32, i32* @y.2
  %125 = sub i32 %123, 1
  %126 = mul i32 %123, %125
  %127 = urem i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %124, 10
  %130 = or i1 %128, %129
  br i1 %130, label %originalBBpart217, label %originalBB15alteredBB

originalBBpart217:                                ; preds = %originalBB15
  br label %131, !dbg !393

131:                                              ; preds = %originalBBpart217, %107, %originalBBpart213
  %132 = load i32, i32* @x.1
  %133 = load i32, i32* @y.2
  %134 = sub i32 %132, 1
  %135 = mul i32 %132, %134
  %136 = urem i32 %135, 2
  %137 = icmp eq i32 %136, 0
  %138 = icmp slt i32 %133, 10
  %139 = or i1 %137, %138
  br i1 %139, label %originalBB19, label %originalBB19alteredBB

originalBB19:                                     ; preds = %131, %originalBB19alteredBB
  %140 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.39, i64 0, i64 0)) #10, !dbg !394
  %141 = load i8*, i8** %2, align 8, !dbg !395
  %142 = call i32 (i8*, ...) @printf(i8* %140, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.36, i64 0, i64 0), i8* %141), !dbg !396
  %143 = call i8* @gettext(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.40, i64 0, i64 0)) #10, !dbg !397
  %144 = load i8*, i8** %4, align 8, !dbg !398
  %145 = load i8*, i8** %4, align 8, !dbg !399
  %146 = load i8*, i8** %2, align 8, !dbg !400
  %147 = icmp eq i8* %145, %146, !dbg !401
  %148 = zext i1 %147 to i64, !dbg !399
  %149 = select i1 %147, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.41, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.8, i64 0, i64 0), !dbg !399
  %150 = call i32 (i8*, ...) @printf(i8* %143, i8* %144, i8* %149), !dbg !402
  %151 = load i32, i32* @x.1
  %152 = load i32, i32* @y.2
  %153 = sub i32 %151, 1
  %154 = mul i32 %151, %153
  %155 = urem i32 %154, 2
  %156 = icmp eq i32 %155, 0
  %157 = icmp slt i32 %152, 10
  %158 = or i1 %156, %157
  br i1 %158, label %originalBBpart221, label %originalBB19alteredBB

originalBBpart221:                                ; preds = %originalBB19
  ret void, !dbg !403

originalBBalteredBB:                              ; preds = %originalBB, %10
  %159 = load %struct.infomap*, %struct.infomap** %5, align 8, !dbg !365
  %160 = getelementptr inbounds %struct.infomap, %struct.infomap* %159, i32 0, i32 0, !dbg !366
  %161 = load i8*, i8** %160, align 8, !dbg !366
  %162 = icmp ne i8* %161, null, !dbg !365
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %31
  %163 = load i8*, i8** %2, align 8, !dbg !368
  %164 = load %struct.infomap*, %struct.infomap** %5, align 8, !dbg !368
  %165 = getelementptr inbounds %struct.infomap, %struct.infomap* %164, i32 0, i32 0, !dbg !368
  %166 = load i8*, i8** %165, align 8, !dbg !368
  %167 = call i32 @strcmp(i8* %163, i8* %166) #13, !dbg !368
  %168 = icmp eq i32 %167, 0, !dbg !368
  %_ = shl i1 %168, true
  %_2 = shl i1 %168, true
  %_3 = shl i1 %168, true
  %169 = xor i1 %168, true, !dbg !369
  br label %originalBB1

originalBB7alteredBB:                             ; preds = %originalBB7, %57
  %170 = load %struct.infomap*, %struct.infomap** %5, align 8, !dbg !371
  %171 = getelementptr inbounds %struct.infomap, %struct.infomap* %170, i32 1, !dbg !371
  store %struct.infomap* %171, %struct.infomap** %5, align 8, !dbg !371
  br label %originalBB7

originalBB11alteredBB:                            ; preds = %originalBB11, %85
  %172 = call i8* @gettext(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.35, i64 0, i64 0)) #10, !dbg !381
  %173 = call i32 (i8*, ...) @printf(i8* %172, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.36, i64 0, i64 0)), !dbg !382
  call void @llvm.dbg.declare(metadata !4, metadata !404, metadata !DIExpression()), !dbg !384
  %174 = call i8* @setlocale(i32 5, i8* null) #10, !dbg !385
  store i8* %174, i8** %6, align 8, !dbg !384
  %175 = load i8*, i8** %6, align 8, !dbg !386
  %176 = icmp ne i8* %175, null, !dbg !386
  br label %originalBB11

originalBB15alteredBB:                            ; preds = %originalBB15, %111
  %177 = call i8* @gettext(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.38, i64 0, i64 0)) #10, !dbg !391
  %178 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !391
  %179 = call i32 @fputs_unlocked(i8* %177, %struct._IO_FILE* %178), !dbg !391
  br label %originalBB15

originalBB19alteredBB:                            ; preds = %originalBB19, %131
  %180 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.39, i64 0, i64 0)) #10, !dbg !394
  %181 = load i8*, i8** %2, align 8, !dbg !395
  %182 = call i32 (i8*, ...) @printf(i8* %180, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.36, i64 0, i64 0), i8* %181), !dbg !396
  %183 = call i8* @gettext(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.40, i64 0, i64 0)) #10, !dbg !397
  %184 = load i8*, i8** %4, align 8, !dbg !398
  %185 = load i8*, i8** %4, align 8, !dbg !399
  %186 = load i8*, i8** %2, align 8, !dbg !400
  %187 = icmp eq i8* %185, %186, !dbg !401
  %188 = zext i1 %187 to i64, !dbg !399
  %189 = select i1 %187, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.41, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.8, i64 0, i64 0), !dbg !399
  %190 = call i32 (i8*, ...) @printf(i8* %183, i8* %184, i8* %189), !dbg !402
  br label %originalBB19
}

; Function Attrs: noreturn nounwind
declare dso_local void @exit(i32) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #6

; Function Attrs: nounwind readonly
declare dso_local i32 @strcmp(i8*, i8*) #7

; Function Attrs: nounwind
declare dso_local i8* @setlocale(i32, i8*) #2

; Function Attrs: nounwind readonly
declare dso_local i32 @strncmp(i8*, i8*, i64) #7

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32, i8**) #4 !dbg !452 {
  %3 = load i32, i32* @x.3
  %4 = load i32, i32* @y.4
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  store i8** %1, i8*** @inVal1
  store i32 %0, i32* @inVal0
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i8**, align 8
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i8, align 1
  %17 = alloca i8*, align 8
  %18 = alloca i64, align 8
  %19 = alloca i8, align 1
  %20 = alloca %struct.passwd*, align 8
  %21 = alloca i8*, align 8
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  store i32 0, i32* %11, align 4
  store i32 %0, i32* %12, align 4
  call void @llvm.dbg.declare(metadata i32* %12, metadata !455, metadata !DIExpression()), !dbg !456
  store i8** %1, i8*** %13, align 8
  call void @llvm.dbg.declare(metadata i8*** %13, metadata !457, metadata !DIExpression()), !dbg !458
  call void @llvm.dbg.declare(metadata i32* %14, metadata !459, metadata !DIExpression()), !dbg !460
  call void @llvm.dbg.declare(metadata i32* %15, metadata !461, metadata !DIExpression()), !dbg !462
  store i32 0, i32* %15, align 4, !dbg !462
  call void @llvm.dbg.declare(metadata i8* %16, metadata !463, metadata !DIExpression()), !dbg !464
  %24 = call zeroext i1 @is_smack_enabled(), !dbg !465
  %25 = zext i1 %24 to i8, !dbg !464
  store i8 %25, i8* %16, align 1, !dbg !464
  call void @llvm.dbg.declare(metadata i8** %17, metadata !466, metadata !DIExpression()), !dbg !467
  store i8* null, i8** %17, align 8, !dbg !467
  %26 = load i8**, i8*** %13, align 8, !dbg !468
  %27 = getelementptr inbounds i8*, i8** %26, i64 0, !dbg !468
  %28 = load i8*, i8** %27, align 8, !dbg !468
  call void @set_program_name(i8* %28), !dbg !469
  %29 = call i8* @setlocale(i32 6, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.8, i64 0, i64 0)) #10, !dbg !470
  %30 = call i8* @bindtextdomain(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.10, i64 0, i64 0)) #10, !dbg !471
  %31 = call i8* @textdomain(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9, i64 0, i64 0)) #10, !dbg !472
  %32 = call i32 @atexit(void ()* @close_stdout) #10, !dbg !473
  %33 = load i32, i32* @x.3
  %34 = load i32, i32* @y.4
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %41, !dbg !474

41:                                               ; preds = %originalBBpart240, %originalBBpart2
  %42 = load i32, i32* %12, align 4, !dbg !475
  %43 = load i8**, i8*** %13, align 8, !dbg !476
  %44 = call i32 @getopt_long(i32 %42, i8** %43, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.11, i64 0, i64 0), %struct.option* getelementptr inbounds ([10 x %struct.option], [10 x %struct.option]* @longopts, i64 0, i64 0), i32* null) #10, !dbg !477
  store i32 %44, i32* %14, align 4, !dbg !478
  %45 = icmp ne i32 %44, -1, !dbg !479
  br i1 %45, label %46, label %227, !dbg !474

46:                                               ; preds = %41
  %47 = load i32, i32* %14, align 4, !dbg !480
  switch i32 %47, label %193 [
    i32 97, label %48
    i32 90, label %49
    i32 103, label %87
    i32 110, label %104
    i32 114, label %105
    i32 117, label %122
    i32 122, label %139
    i32 71, label %140
    i32 -130, label %157
    i32 -131, label %174
  ], !dbg !482

48:                                               ; preds = %46
  br label %210, !dbg !483

49:                                               ; preds = %46
  %50 = load i32, i32* @x.3
  %51 = load i32, i32* @y.4
  %52 = sub i32 %50, 1
  %53 = mul i32 %50, %52
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %51, 10
  %57 = or i1 %55, %56
  br i1 %57, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %49, %originalBB1alteredBB
  %58 = load i32, i32* %15, align 4, !dbg !485
  %59 = icmp ne i32 %58, 0, !dbg !485
  %60 = load i32, i32* @x.3
  %61 = load i32, i32* @y.4
  %62 = sub i32 %60, 1
  %63 = mul i32 %60, %62
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %61, 10
  %67 = or i1 %65, %66
  br i1 %67, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %59, label %70, label %68, !dbg !487

68:                                               ; preds = %originalBBpart24
  %69 = call i8* @gettext(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.12, i64 0, i64 0)) #10, !dbg !488
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %69), !dbg !488
  unreachable, !dbg !488

70:                                               ; preds = %originalBBpart24
  %71 = load i32, i32* @x.3
  %72 = load i32, i32* @y.4
  %73 = sub i32 %71, 1
  %74 = mul i32 %71, %73
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %72, 10
  %78 = or i1 %76, %77
  br i1 %78, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %70, %originalBB6alteredBB
  store i8 1, i8* @just_context, align 1, !dbg !489
  %79 = load i32, i32* @x.3
  %80 = load i32, i32* @y.4
  %81 = sub i32 %79, 1
  %82 = mul i32 %79, %81
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %80, 10
  %86 = or i1 %84, %85
  br i1 %86, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %210, !dbg !490

87:                                               ; preds = %46
  %88 = load i32, i32* @x.3
  %89 = load i32, i32* @y.4
  %90 = sub i32 %88, 1
  %91 = mul i32 %88, %90
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %89, 10
  %95 = or i1 %93, %94
  br i1 %95, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %87, %originalBB10alteredBB
  store i8 1, i8* @just_group, align 1, !dbg !491
  %96 = load i32, i32* @x.3
  %97 = load i32, i32* @y.4
  %98 = sub i32 %96, 1
  %99 = mul i32 %96, %98
  %100 = urem i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = icmp slt i32 %97, 10
  %103 = or i1 %101, %102
  br i1 %103, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %210, !dbg !492

104:                                              ; preds = %46
  store i8 1, i8* @use_name, align 1, !dbg !493
  br label %210, !dbg !494

105:                                              ; preds = %46
  %106 = load i32, i32* @x.3
  %107 = load i32, i32* @y.4
  %108 = sub i32 %106, 1
  %109 = mul i32 %106, %108
  %110 = urem i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %107, 10
  %113 = or i1 %111, %112
  br i1 %113, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %105, %originalBB14alteredBB
  store i8 1, i8* @use_real, align 1, !dbg !495
  %114 = load i32, i32* @x.3
  %115 = load i32, i32* @y.4
  %116 = sub i32 %114, 1
  %117 = mul i32 %114, %116
  %118 = urem i32 %117, 2
  %119 = icmp eq i32 %118, 0
  %120 = icmp slt i32 %115, 10
  %121 = or i1 %119, %120
  br i1 %121, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %210, !dbg !496

122:                                              ; preds = %46
  %123 = load i32, i32* @x.3
  %124 = load i32, i32* @y.4
  %125 = sub i32 %123, 1
  %126 = mul i32 %123, %125
  %127 = urem i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %124, 10
  %130 = or i1 %128, %129
  br i1 %130, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %122, %originalBB18alteredBB
  store i8 1, i8* @just_user, align 1, !dbg !497
  %131 = load i32, i32* @x.3
  %132 = load i32, i32* @y.4
  %133 = sub i32 %131, 1
  %134 = mul i32 %131, %133
  %135 = urem i32 %134, 2
  %136 = icmp eq i32 %135, 0
  %137 = icmp slt i32 %132, 10
  %138 = or i1 %136, %137
  br i1 %138, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %210, !dbg !498

139:                                              ; preds = %46
  store i8 1, i8* @opt_zero, align 1, !dbg !499
  br label %210, !dbg !500

140:                                              ; preds = %46
  %141 = load i32, i32* @x.3
  %142 = load i32, i32* @y.4
  %143 = sub i32 %141, 1
  %144 = mul i32 %141, %143
  %145 = urem i32 %144, 2
  %146 = icmp eq i32 %145, 0
  %147 = icmp slt i32 %142, 10
  %148 = or i1 %146, %147
  br i1 %148, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %140, %originalBB22alteredBB
  store i8 1, i8* @just_group_list, align 1, !dbg !501
  %149 = load i32, i32* @x.3
  %150 = load i32, i32* @y.4
  %151 = sub i32 %149, 1
  %152 = mul i32 %149, %151
  %153 = urem i32 %152, 2
  %154 = icmp eq i32 %153, 0
  %155 = icmp slt i32 %150, 10
  %156 = or i1 %154, %155
  br i1 %156, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br label %210, !dbg !502

157:                                              ; preds = %46
  %158 = load i32, i32* @x.3
  %159 = load i32, i32* @y.4
  %160 = sub i32 %158, 1
  %161 = mul i32 %158, %160
  %162 = urem i32 %161, 2
  %163 = icmp eq i32 %162, 0
  %164 = icmp slt i32 %159, 10
  %165 = or i1 %163, %164
  br i1 %165, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %157, %originalBB26alteredBB
  call void @usage(i32 0) #14, !dbg !503
  %166 = load i32, i32* @x.3
  %167 = load i32, i32* @y.4
  %168 = sub i32 %166, 1
  %169 = mul i32 %166, %168
  %170 = urem i32 %169, 2
  %171 = icmp eq i32 %170, 0
  %172 = icmp slt i32 %167, 10
  %173 = or i1 %171, %172
  br i1 %173, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  unreachable, !dbg !503

174:                                              ; preds = %46
  %175 = load i32, i32* @x.3
  %176 = load i32, i32* @y.4
  %177 = sub i32 %175, 1
  %178 = mul i32 %175, %177
  %179 = urem i32 %178, 2
  %180 = icmp eq i32 %179, 0
  %181 = icmp slt i32 %176, 10
  %182 = or i1 %180, %181
  br i1 %182, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %174, %originalBB30alteredBB
  %183 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !504
  %184 = load i8*, i8** @Version, align 8, !dbg !504
  call void (%struct._IO_FILE*, i8*, i8*, i8*, ...) @version_etc(%struct._IO_FILE* %183, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.13, i64 0, i64 0), i8* %184, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.15, i64 0, i64 0), i8* null), !dbg !504
  call void @exit(i32 0) #12, !dbg !504
  %185 = load i32, i32* @x.3
  %186 = load i32, i32* @y.4
  %187 = sub i32 %185, 1
  %188 = mul i32 %185, %187
  %189 = urem i32 %188, 2
  %190 = icmp eq i32 %189, 0
  %191 = icmp slt i32 %186, 10
  %192 = or i1 %190, %191
  br i1 %192, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  unreachable, !dbg !504

193:                                              ; preds = %46
  %194 = load i32, i32* @x.3
  %195 = load i32, i32* @y.4
  %196 = sub i32 %194, 1
  %197 = mul i32 %194, %196
  %198 = urem i32 %197, 2
  %199 = icmp eq i32 %198, 0
  %200 = icmp slt i32 %195, 10
  %201 = or i1 %199, %200
  br i1 %201, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %193, %originalBB34alteredBB
  call void @usage(i32 1) #14, !dbg !505
  %202 = load i32, i32* @x.3
  %203 = load i32, i32* @y.4
  %204 = sub i32 %202, 1
  %205 = mul i32 %202, %204
  %206 = urem i32 %205, 2
  %207 = icmp eq i32 %206, 0
  %208 = icmp slt i32 %203, 10
  %209 = or i1 %207, %208
  br i1 %209, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  unreachable, !dbg !505

210:                                              ; preds = %originalBBpart224, %139, %originalBBpart220, %originalBBpart216, %104, %originalBBpart212, %originalBBpart28, %48
  %211 = load i32, i32* @x.3
  %212 = load i32, i32* @y.4
  %213 = sub i32 %211, 1
  %214 = mul i32 %211, %213
  %215 = urem i32 %214, 2
  %216 = icmp eq i32 %215, 0
  %217 = icmp slt i32 %212, 10
  %218 = or i1 %216, %217
  br i1 %218, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %210, %originalBB38alteredBB
  %219 = load i32, i32* @x.3
  %220 = load i32, i32* @y.4
  %221 = sub i32 %219, 1
  %222 = mul i32 %219, %221
  %223 = urem i32 %222, 2
  %224 = icmp eq i32 %223, 0
  %225 = icmp slt i32 %220, 10
  %226 = or i1 %224, %225
  br i1 %226, label %originalBBpart240, label %originalBB38alteredBB

originalBBpart240:                                ; preds = %originalBB38
  br label %41, !dbg !474, !llvm.loop !506

227:                                              ; preds = %41
  call void @llvm.dbg.declare(metadata i64* %18, metadata !508, metadata !DIExpression()), !dbg !509
  %228 = load i32, i32* @x.3
  %229 = load i32, i32* @y.4
  %230 = sub i32 %228, 1
  %231 = mul i32 %228, %230
  %232 = urem i32 %231, 2
  %233 = icmp eq i32 %232, 0
  %234 = icmp slt i32 %229, 10
  %235 = or i1 %233, %234
  br i1 %235, label %originalBB42, label %originalBB42alteredBB

originalBB42:                                     ; preds = %227, %originalBB42alteredBB
  %236 = load i32, i32* %12, align 4, !dbg !510
  %237 = load i32, i32* @optind, align 4, !dbg !511
  %238 = sub nsw i32 %236, %237, !dbg !512
  %239 = sext i32 %238 to i64, !dbg !510
  store i64 %239, i64* %18, align 8, !dbg !509
  %240 = load i64, i64* %18, align 8, !dbg !513
  %241 = icmp ne i64 %240, 0, !dbg !513
  %242 = load i32, i32* @x.3
  %243 = load i32, i32* @y.4
  %244 = sub i32 %242, 1
  %245 = mul i32 %242, %244
  %246 = urem i32 %245, 2
  %247 = icmp eq i32 %246, 0
  %248 = icmp slt i32 %243, 10
  %249 = or i1 %247, %248
  br i1 %249, label %originalBBpart247, label %originalBB42alteredBB

originalBBpart247:                                ; preds = %originalBB42
  br i1 %241, label %250, label %287, !dbg !515

250:                                              ; preds = %originalBBpart247
  %251 = load i32, i32* @x.3
  %252 = load i32, i32* @y.4
  %253 = sub i32 %251, 1
  %254 = mul i32 %251, %253
  %255 = urem i32 %254, 2
  %256 = icmp eq i32 %255, 0
  %257 = icmp slt i32 %252, 10
  %258 = or i1 %256, %257
  br i1 %258, label %originalBB49, label %originalBB49alteredBB

originalBB49:                                     ; preds = %250, %originalBB49alteredBB
  %259 = load i8, i8* @just_context, align 1, !dbg !516
  %260 = trunc i8 %259 to i1, !dbg !516
  %261 = load i32, i32* @x.3
  %262 = load i32, i32* @y.4
  %263 = sub i32 %261, 1
  %264 = mul i32 %261, %263
  %265 = urem i32 %264, 2
  %266 = icmp eq i32 %265, 0
  %267 = icmp slt i32 %262, 10
  %268 = or i1 %266, %267
  br i1 %268, label %originalBBpart251, label %originalBB49alteredBB

originalBBpart251:                                ; preds = %originalBB49
  br i1 %260, label %269, label %287, !dbg !517

269:                                              ; preds = %originalBBpart251
  %270 = load i32, i32* @x.3
  %271 = load i32, i32* @y.4
  %272 = sub i32 %270, 1
  %273 = mul i32 %270, %272
  %274 = urem i32 %273, 2
  %275 = icmp eq i32 %274, 0
  %276 = icmp slt i32 %271, 10
  %277 = or i1 %275, %276
  br i1 %277, label %originalBB53, label %originalBB53alteredBB

originalBB53:                                     ; preds = %269, %originalBB53alteredBB
  %278 = call i8* @gettext(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.16, i64 0, i64 0)) #10, !dbg !518
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %278), !dbg !518
  %279 = load i32, i32* @x.3
  %280 = load i32, i32* @y.4
  %281 = sub i32 %279, 1
  %282 = mul i32 %279, %281
  %283 = urem i32 %282, 2
  %284 = icmp eq i32 %283, 0
  %285 = icmp slt i32 %280, 10
  %286 = or i1 %284, %285
  br i1 %286, label %originalBBpart255, label %originalBB53alteredBB

originalBBpart255:                                ; preds = %originalBB53
  unreachable, !dbg !518

287:                                              ; preds = %originalBBpart251, %originalBBpart247
  %288 = load i32, i32* @x.3
  %289 = load i32, i32* @y.4
  %290 = sub i32 %288, 1
  %291 = mul i32 %288, %290
  %292 = urem i32 %291, 2
  %293 = icmp eq i32 %292, 0
  %294 = icmp slt i32 %289, 10
  %295 = or i1 %293, %294
  br i1 %295, label %originalBB57, label %originalBB57alteredBB

originalBB57:                                     ; preds = %287, %originalBB57alteredBB
  %296 = load i8, i8* @just_user, align 1, !dbg !519
  %297 = trunc i8 %296 to i1, !dbg !519
  %298 = zext i1 %297 to i32, !dbg !519
  %299 = load i8, i8* @just_group, align 1, !dbg !521
  %300 = trunc i8 %299 to i1, !dbg !521
  %301 = zext i1 %300 to i32, !dbg !521
  %302 = add nsw i32 %298, %301, !dbg !522
  %303 = load i8, i8* @just_group_list, align 1, !dbg !523
  %304 = trunc i8 %303 to i1, !dbg !523
  %305 = zext i1 %304 to i32, !dbg !523
  %306 = add nsw i32 %302, %305, !dbg !524
  %307 = load i8, i8* @just_context, align 1, !dbg !525
  %308 = trunc i8 %307 to i1, !dbg !525
  %309 = zext i1 %308 to i32, !dbg !525
  %310 = add nsw i32 %306, %309, !dbg !526
  %311 = icmp sgt i32 %310, 1, !dbg !527
  %312 = load i32, i32* @x.3
  %313 = load i32, i32* @y.4
  %314 = sub i32 %312, 1
  %315 = mul i32 %312, %314
  %316 = urem i32 %315, 2
  %317 = icmp eq i32 %316, 0
  %318 = icmp slt i32 %313, 10
  %319 = or i1 %317, %318
  br i1 %319, label %originalBBpart295, label %originalBB57alteredBB

originalBBpart295:                                ; preds = %originalBB57
  br i1 %311, label %320, label %338, !dbg !528

320:                                              ; preds = %originalBBpart295
  %321 = load i32, i32* @x.3
  %322 = load i32, i32* @y.4
  %323 = sub i32 %321, 1
  %324 = mul i32 %321, %323
  %325 = urem i32 %324, 2
  %326 = icmp eq i32 %325, 0
  %327 = icmp slt i32 %322, 10
  %328 = or i1 %326, %327
  br i1 %328, label %originalBB97, label %originalBB97alteredBB

originalBB97:                                     ; preds = %320, %originalBB97alteredBB
  %329 = call i8* @gettext(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.17, i64 0, i64 0)) #10, !dbg !529
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %329), !dbg !529
  %330 = load i32, i32* @x.3
  %331 = load i32, i32* @y.4
  %332 = sub i32 %330, 1
  %333 = mul i32 %330, %332
  %334 = urem i32 %333, 2
  %335 = icmp eq i32 %334, 0
  %336 = icmp slt i32 %331, 10
  %337 = or i1 %335, %336
  br i1 %337, label %originalBBpart299, label %originalBB97alteredBB

originalBBpart299:                                ; preds = %originalBB97
  unreachable, !dbg !529

338:                                              ; preds = %originalBBpart295
  call void @llvm.dbg.declare(metadata i8* %19, metadata !530, metadata !DIExpression()), !dbg !531
  %339 = load i32, i32* @x.3
  %340 = load i32, i32* @y.4
  %341 = sub i32 %339, 1
  %342 = mul i32 %339, %341
  %343 = urem i32 %342, 2
  %344 = icmp eq i32 %343, 0
  %345 = icmp slt i32 %340, 10
  %346 = or i1 %344, %345
  br i1 %346, label %originalBB101, label %originalBB101alteredBB

originalBB101:                                    ; preds = %338, %originalBB101alteredBB
  %347 = load i8, i8* @just_user, align 1, !dbg !532
  %348 = trunc i8 %347 to i1, !dbg !532
  %349 = load i32, i32* @x.3
  %350 = load i32, i32* @y.4
  %351 = sub i32 %349, 1
  %352 = mul i32 %349, %351
  %353 = urem i32 %352, 2
  %354 = icmp eq i32 %353, 0
  %355 = icmp slt i32 %350, 10
  %356 = or i1 %354, %355
  br i1 %356, label %originalBBpart2103, label %originalBB101alteredBB

originalBBpart2103:                               ; preds = %originalBB101
  br i1 %348, label %398, label %357, !dbg !533

357:                                              ; preds = %originalBBpart2103
  %358 = load i32, i32* @x.3
  %359 = load i32, i32* @y.4
  %360 = sub i32 %358, 1
  %361 = mul i32 %358, %360
  %362 = urem i32 %361, 2
  %363 = icmp eq i32 %362, 0
  %364 = icmp slt i32 %359, 10
  %365 = or i1 %363, %364
  br i1 %365, label %originalBB105, label %originalBB105alteredBB

originalBB105:                                    ; preds = %357, %originalBB105alteredBB
  %366 = load i8, i8* @just_group, align 1, !dbg !534
  %367 = trunc i8 %366 to i1, !dbg !534
  %368 = load i32, i32* @x.3
  %369 = load i32, i32* @y.4
  %370 = sub i32 %368, 1
  %371 = mul i32 %368, %370
  %372 = urem i32 %371, 2
  %373 = icmp eq i32 %372, 0
  %374 = icmp slt i32 %369, 10
  %375 = or i1 %373, %374
  br i1 %375, label %originalBBpart2107, label %originalBB105alteredBB

originalBBpart2107:                               ; preds = %originalBB105
  br i1 %367, label %398, label %376, !dbg !535

376:                                              ; preds = %originalBBpart2107
  %377 = load i8, i8* @just_group_list, align 1, !dbg !536
  %378 = trunc i8 %377 to i1, !dbg !536
  br i1 %378, label %398, label %379, !dbg !537

379:                                              ; preds = %376
  %380 = load i32, i32* @x.3
  %381 = load i32, i32* @y.4
  %382 = sub i32 %380, 1
  %383 = mul i32 %380, %382
  %384 = urem i32 %383, 2
  %385 = icmp eq i32 %384, 0
  %386 = icmp slt i32 %381, 10
  %387 = or i1 %385, %386
  br i1 %387, label %originalBB109, label %originalBB109alteredBB

originalBB109:                                    ; preds = %379, %originalBB109alteredBB
  %388 = load i8, i8* @just_context, align 1, !dbg !538
  %389 = trunc i8 %388 to i1, !dbg !538
  %390 = load i32, i32* @x.3
  %391 = load i32, i32* @y.4
  %392 = sub i32 %390, 1
  %393 = mul i32 %390, %392
  %394 = urem i32 %393, 2
  %395 = icmp eq i32 %394, 0
  %396 = icmp slt i32 %391, 10
  %397 = or i1 %395, %396
  br i1 %397, label %originalBBpart2111, label %originalBB109alteredBB

originalBBpart2111:                               ; preds = %originalBB109
  br label %398, !dbg !537

398:                                              ; preds = %originalBBpart2111, %376, %originalBBpart2107, %originalBBpart2103
  %399 = phi i1 [ true, %376 ], [ true, %originalBBpart2107 ], [ true, %originalBBpart2103 ], [ %389, %originalBBpart2111 ]
  %400 = xor i1 %399, true, !dbg !539
  %401 = zext i1 %400 to i8, !dbg !531
  store i8 %401, i8* %19, align 1, !dbg !531
  %402 = load i8, i8* %19, align 1, !dbg !540
  %403 = trunc i8 %402 to i1, !dbg !540
  br i1 %403, label %404, label %460, !dbg !542

404:                                              ; preds = %398
  %405 = load i32, i32* @x.3
  %406 = load i32, i32* @y.4
  %407 = sub i32 %405, 1
  %408 = mul i32 %405, %407
  %409 = urem i32 %408, 2
  %410 = icmp eq i32 %409, 0
  %411 = icmp slt i32 %406, 10
  %412 = or i1 %410, %411
  br i1 %412, label %originalBB113, label %originalBB113alteredBB

originalBB113:                                    ; preds = %404, %originalBB113alteredBB
  %413 = load i8, i8* @use_real, align 1, !dbg !543
  %414 = trunc i8 %413 to i1, !dbg !543
  %415 = load i32, i32* @x.3
  %416 = load i32, i32* @y.4
  %417 = sub i32 %415, 1
  %418 = mul i32 %415, %417
  %419 = urem i32 %418, 2
  %420 = icmp eq i32 %419, 0
  %421 = icmp slt i32 %416, 10
  %422 = or i1 %420, %421
  br i1 %422, label %originalBBpart2115, label %originalBB113alteredBB

originalBBpart2115:                               ; preds = %originalBB113
  br i1 %414, label %442, label %423, !dbg !544

423:                                              ; preds = %originalBBpart2115
  %424 = load i32, i32* @x.3
  %425 = load i32, i32* @y.4
  %426 = sub i32 %424, 1
  %427 = mul i32 %424, %426
  %428 = urem i32 %427, 2
  %429 = icmp eq i32 %428, 0
  %430 = icmp slt i32 %425, 10
  %431 = or i1 %429, %430
  br i1 %431, label %originalBB117, label %originalBB117alteredBB

originalBB117:                                    ; preds = %423, %originalBB117alteredBB
  %432 = load i8, i8* @use_name, align 1, !dbg !545
  %433 = trunc i8 %432 to i1, !dbg !545
  %434 = load i32, i32* @x.3
  %435 = load i32, i32* @y.4
  %436 = sub i32 %434, 1
  %437 = mul i32 %434, %436
  %438 = urem i32 %437, 2
  %439 = icmp eq i32 %438, 0
  %440 = icmp slt i32 %435, 10
  %441 = or i1 %439, %440
  br i1 %441, label %originalBBpart2119, label %originalBB117alteredBB

originalBBpart2119:                               ; preds = %originalBB117
  br i1 %433, label %442, label %460, !dbg !546

442:                                              ; preds = %originalBBpart2119, %originalBBpart2115
  %443 = load i32, i32* @x.3
  %444 = load i32, i32* @y.4
  %445 = sub i32 %443, 1
  %446 = mul i32 %443, %445
  %447 = urem i32 %446, 2
  %448 = icmp eq i32 %447, 0
  %449 = icmp slt i32 %444, 10
  %450 = or i1 %448, %449
  br i1 %450, label %originalBB121, label %originalBB121alteredBB

originalBB121:                                    ; preds = %442, %originalBB121alteredBB
  %451 = call i8* @gettext(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.18, i64 0, i64 0)) #10, !dbg !547
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %451), !dbg !547
  %452 = load i32, i32* @x.3
  %453 = load i32, i32* @y.4
  %454 = sub i32 %452, 1
  %455 = mul i32 %452, %454
  %456 = urem i32 %455, 2
  %457 = icmp eq i32 %456, 0
  %458 = icmp slt i32 %453, 10
  %459 = or i1 %457, %458
  br i1 %459, label %originalBBpart2123, label %originalBB121alteredBB

originalBBpart2123:                               ; preds = %originalBB121
  unreachable, !dbg !547

460:                                              ; preds = %originalBBpart2119, %398
  %461 = load i8, i8* %19, align 1, !dbg !548
  %462 = trunc i8 %461 to i1, !dbg !548
  br i1 %462, label %463, label %500, !dbg !550

463:                                              ; preds = %460
  %464 = load i32, i32* @x.3
  %465 = load i32, i32* @y.4
  %466 = sub i32 %464, 1
  %467 = mul i32 %464, %466
  %468 = urem i32 %467, 2
  %469 = icmp eq i32 %468, 0
  %470 = icmp slt i32 %465, 10
  %471 = or i1 %469, %470
  br i1 %471, label %originalBB125, label %originalBB125alteredBB

originalBB125:                                    ; preds = %463, %originalBB125alteredBB
  %472 = load i8, i8* @opt_zero, align 1, !dbg !551
  %473 = trunc i8 %472 to i1, !dbg !551
  %474 = load i32, i32* @x.3
  %475 = load i32, i32* @y.4
  %476 = sub i32 %474, 1
  %477 = mul i32 %474, %476
  %478 = urem i32 %477, 2
  %479 = icmp eq i32 %478, 0
  %480 = icmp slt i32 %475, 10
  %481 = or i1 %479, %480
  br i1 %481, label %originalBBpart2127, label %originalBB125alteredBB

originalBBpart2127:                               ; preds = %originalBB125
  br i1 %473, label %482, label %500, !dbg !552

482:                                              ; preds = %originalBBpart2127
  %483 = load i32, i32* @x.3
  %484 = load i32, i32* @y.4
  %485 = sub i32 %483, 1
  %486 = mul i32 %483, %485
  %487 = urem i32 %486, 2
  %488 = icmp eq i32 %487, 0
  %489 = icmp slt i32 %484, 10
  %490 = or i1 %488, %489
  br i1 %490, label %originalBB129, label %originalBB129alteredBB

originalBB129:                                    ; preds = %482, %originalBB129alteredBB
  %491 = call i8* @gettext(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.19, i64 0, i64 0)) #10, !dbg !553
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %491), !dbg !553
  %492 = load i32, i32* @x.3
  %493 = load i32, i32* @y.4
  %494 = sub i32 %492, 1
  %495 = mul i32 %492, %494
  %496 = urem i32 %495, 2
  %497 = icmp eq i32 %496, 0
  %498 = icmp slt i32 %493, 10
  %499 = or i1 %497, %498
  br i1 %499, label %originalBBpart2131, label %originalBB129alteredBB

originalBBpart2131:                               ; preds = %originalBB129
  unreachable, !dbg !553

500:                                              ; preds = %originalBBpart2127, %460
  %501 = load i32, i32* @x.3
  %502 = load i32, i32* @y.4
  %503 = sub i32 %501, 1
  %504 = mul i32 %501, %503
  %505 = urem i32 %504, 2
  %506 = icmp eq i32 %505, 0
  %507 = icmp slt i32 %502, 10
  %508 = or i1 %506, %507
  br i1 %508, label %originalBB133, label %originalBB133alteredBB

originalBB133:                                    ; preds = %500, %originalBB133alteredBB
  %509 = load i64, i64* %18, align 8, !dbg !554
  %510 = load i32, i32* @x.3
  %511 = load i32, i32* @y.4
  %512 = sub i32 %510, 1
  %513 = mul i32 %510, %512
  %514 = urem i32 %513, 2
  %515 = icmp eq i32 %514, 0
  %516 = icmp slt i32 %511, 10
  %517 = or i1 %515, %516
  br i1 %517, label %originalBBpart2135, label %originalBB133alteredBB

originalBBpart2135:                               ; preds = %originalBB133
  br label %518, !dbg !556

518:                                              ; preds = %originalBBpart2135
  %519 = load i32, i32* @x.3
  %520 = load i32, i32* @y.4
  %521 = sub i32 %519, 1
  %522 = mul i32 %519, %521
  %523 = urem i32 %522, 2
  %524 = icmp eq i32 %523, 0
  %525 = icmp slt i32 %520, 10
  %526 = or i1 %524, %525
  br i1 %526, label %originalBB137, label %originalBB137alteredBB

originalBB137:                                    ; preds = %518, %originalBB137alteredBB
  %collatzVar = alloca i32
  %527 = load i32, i32* @x.3
  %528 = load i32, i32* @y.4
  %529 = sub i32 %527, 1
  %530 = mul i32 %527, %529
  %531 = urem i32 %530, 2
  %532 = icmp eq i32 %531, 0
  %533 = icmp slt i32 %528, 10
  %534 = or i1 %532, %533
  br i1 %534, label %originalBBpart2139, label %originalBB137alteredBB

originalBBpart2139:                               ; preds = %originalBB137
  br label %535

535:                                              ; preds = %originalBBpart2139
  %536 = load i32, i32* @inVal0
  %537 = icmp sgt i32 %536, 1
  br i1 %537, label %555, label %538

538:                                              ; preds = %535
  %539 = load i32, i32* @x.3
  %540 = load i32, i32* @y.4
  %541 = sub i32 %539, 1
  %542 = mul i32 %539, %541
  %543 = urem i32 %542, 2
  %544 = icmp eq i32 %543, 0
  %545 = icmp slt i32 %540, 10
  %546 = or i1 %544, %545
  br i1 %546, label %originalBB141, label %originalBB141alteredBB

originalBB141:                                    ; preds = %538, %originalBB141alteredBB
  store i32 88, i32* %collatzVar
  %547 = load i32, i32* @x.3
  %548 = load i32, i32* @y.4
  %549 = sub i32 %547, 1
  %550 = mul i32 %547, %549
  %551 = urem i32 %550, 2
  %552 = icmp eq i32 %551, 0
  %553 = icmp slt i32 %548, 10
  %554 = or i1 %552, %553
  br i1 %554, label %originalBBpart2143, label %originalBB141alteredBB

originalBBpart2143:                               ; preds = %originalBB141
  br label %555

555:                                              ; preds = %originalBBpart2143, %535
  %556 = load i8**, i8*** @inVal1
  %557 = getelementptr inbounds i8*, i8** %556, i64 1
  %558 = load i8*, i8** %557
  %559 = trunc i64 0 to i32
  %controle = call i32 @controle(i8* %558, i32 %559)
  store i32 %controle, i32* %collatzVar
  br label %560

560:                                              ; preds = %originalBBpart2162, %590, %555
  %561 = load i32, i32* %collatzVar
  %562 = icmp sgt i32 %561, 1
  br i1 %562, label %563, label %808

563:                                              ; preds = %560
  %564 = load i32, i32* @x.3
  %565 = load i32, i32* @y.4
  %566 = sub i32 %564, 1
  %567 = mul i32 %564, %566
  %568 = urem i32 %567, 2
  %569 = icmp eq i32 %568, 0
  %570 = icmp slt i32 %565, 10
  %571 = or i1 %569, %570
  br i1 %571, label %originalBB145, label %originalBB145alteredBB

originalBB145:                                    ; preds = %563, %originalBB145alteredBB
  %572 = load i32, i32* %collatzVar
  %573 = srem i32 %572, 2
  %574 = icmp eq i32 %573, 0
  %575 = load i32, i32* @x.3
  %576 = load i32, i32* @y.4
  %577 = sub i32 %575, 1
  %578 = mul i32 %575, %577
  %579 = urem i32 %578, 2
  %580 = icmp eq i32 %579, 0
  %581 = icmp slt i32 %576, 10
  %582 = or i1 %580, %581
  br i1 %582, label %originalBBpart2155, label %originalBB145alteredBB

originalBBpart2155:                               ; preds = %originalBB145
  br i1 %574, label %583, label %586

583:                                              ; preds = %originalBBpart2155
  %584 = load i32, i32* %collatzVar
  %585 = sdiv i32 %584, 2
  store i32 %585, i32* %collatzVar
  br label %590

586:                                              ; preds = %originalBBpart2155
  %587 = load i32, i32* %collatzVar
  %588 = mul i32 %587, 3
  %589 = add i32 %588, 1
  store i32 %589, i32* %collatzVar
  br label %590

590:                                              ; preds = %586, %583
  %591 = load i32, i32* %collatzVar
  %592 = sext i32 %591 to i64
  %593 = sext i32 -2 to i64
  %594 = sub i64 %509, %592
  %595 = icmp sgt i64 %594, %593
  br i1 %595, label %596, label %560

596:                                              ; preds = %590
  %597 = load i32, i32* @x.3
  %598 = load i32, i32* @y.4
  %599 = sub i32 %597, 1
  %600 = mul i32 %597, %599
  %601 = urem i32 %600, 2
  %602 = icmp eq i32 %601, 0
  %603 = icmp slt i32 %598, 10
  %604 = or i1 %602, %603
  br i1 %604, label %originalBB157, label %originalBB157alteredBB

originalBB157:                                    ; preds = %596, %originalBB157alteredBB
  %605 = load i32, i32* %collatzVar
  %606 = sext i32 %605 to i64
  %607 = sext i32 2 to i64
  %608 = add i64 %509, %606
  %609 = icmp slt i64 %608, %607
  %610 = load i32, i32* @x.3
  %611 = load i32, i32* @y.4
  %612 = sub i32 %610, 1
  %613 = mul i32 %610, %612
  %614 = urem i32 %613, 2
  %615 = icmp eq i32 %614, 0
  %616 = icmp slt i32 %611, 10
  %617 = or i1 %615, %616
  br i1 %617, label %originalBBpart2162, label %originalBB157alteredBB

originalBBpart2162:                               ; preds = %originalBB157
  br i1 %609, label %618, label %560

618:                                              ; preds = %originalBBpart2162
  %619 = load i32, i32* @x.3
  %620 = load i32, i32* @y.4
  %621 = sub i32 %619, 1
  %622 = mul i32 %619, %621
  %623 = urem i32 %622, 2
  %624 = icmp eq i32 %623, 0
  %625 = icmp slt i32 %620, 10
  %626 = or i1 %624, %625
  br i1 %626, label %originalBB164, label %originalBB164alteredBB

originalBB164:                                    ; preds = %618, %originalBB164alteredBB
  %627 = load i8, i8* @just_context, align 1, !dbg !557
  %628 = trunc i8 %627 to i1, !dbg !557
  %629 = load i32, i32* @x.3
  %630 = load i32, i32* @y.4
  %631 = sub i32 %629, 1
  %632 = mul i32 %629, %631
  %633 = urem i32 %632, 2
  %634 = icmp eq i32 %633, 0
  %635 = icmp slt i32 %630, 10
  %636 = or i1 %634, %635
  br i1 %636, label %originalBBpart2166, label %originalBB164alteredBB

originalBBpart2166:                               ; preds = %originalBB164
  br i1 %628, label %659, label %637, !dbg !558

637:                                              ; preds = %originalBBpart2166
  %638 = load i8, i8* %19, align 1, !dbg !559
  %639 = trunc i8 %638 to i1, !dbg !559
  br i1 %639, label %640, label %808, !dbg !560

640:                                              ; preds = %637
  %641 = load i32, i32* @x.3
  %642 = load i32, i32* @y.4
  %643 = sub i32 %641, 1
  %644 = mul i32 %641, %643
  %645 = urem i32 %644, 2
  %646 = icmp eq i32 %645, 0
  %647 = icmp slt i32 %642, 10
  %648 = or i1 %646, %647
  br i1 %648, label %originalBB168, label %originalBB168alteredBB

originalBB168:                                    ; preds = %640, %originalBB168alteredBB
  %649 = call i8* @getenv(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.20, i64 0, i64 0)) #10, !dbg !561
  %650 = icmp ne i8* %649, null, !dbg !561
  %651 = load i32, i32* @x.3
  %652 = load i32, i32* @y.4
  %653 = sub i32 %651, 1
  %654 = mul i32 %651, %653
  %655 = urem i32 %654, 2
  %656 = icmp eq i32 %655, 0
  %657 = icmp slt i32 %652, 10
  %658 = or i1 %656, %657
  br i1 %658, label %originalBBpart2170, label %originalBB168alteredBB

originalBBpart2170:                               ; preds = %originalBB168
  br i1 %650, label %808, label %659, !dbg !562

659:                                              ; preds = %originalBBpart2170, %originalBBpart2166
  %660 = load i32, i32* @x.3
  %661 = load i32, i32* @y.4
  %662 = sub i32 %660, 1
  %663 = mul i32 %660, %662
  %664 = urem i32 %663, 2
  %665 = icmp eq i32 %664, 0
  %666 = icmp slt i32 %661, 10
  %667 = or i1 %665, %666
  br i1 %667, label %originalBB172, label %originalBB172alteredBB

originalBB172:                                    ; preds = %659, %originalBB172alteredBB
  %668 = load i32, i32* %15, align 4, !dbg !563
  %669 = icmp ne i32 %668, 0, !dbg !563
  %670 = load i32, i32* @x.3
  %671 = load i32, i32* @y.4
  %672 = sub i32 %670, 1
  %673 = mul i32 %670, %672
  %674 = urem i32 %673, 2
  %675 = icmp eq i32 %674, 0
  %676 = icmp slt i32 %671, 10
  %677 = or i1 %675, %676
  br i1 %677, label %originalBBpart2174, label %originalBB172alteredBB

originalBBpart2174:                               ; preds = %originalBB172
  br i1 %669, label %678, label %716, !dbg !566

678:                                              ; preds = %originalBBpart2174
  %679 = load i32, i32* @x.3
  %680 = load i32, i32* @y.4
  %681 = sub i32 %679, 1
  %682 = mul i32 %679, %681
  %683 = urem i32 %682, 2
  %684 = icmp eq i32 %683, 0
  %685 = icmp slt i32 %680, 10
  %686 = or i1 %684, %685
  br i1 %686, label %originalBB176, label %originalBB176alteredBB

originalBB176:                                    ; preds = %678, %originalBB176alteredBB
  %687 = call i32 @getcon(i8** @context), !dbg !567
  %688 = icmp ne i32 %687, 0, !dbg !567
  %689 = load i32, i32* @x.3
  %690 = load i32, i32* @y.4
  %691 = sub i32 %689, 1
  %692 = mul i32 %689, %691
  %693 = urem i32 %692, 2
  %694 = icmp eq i32 %693, 0
  %695 = icmp slt i32 %690, 10
  %696 = or i1 %694, %695
  br i1 %696, label %originalBBpart2178, label %originalBB176alteredBB

originalBBpart2178:                               ; preds = %originalBB176
  br i1 %688, label %697, label %716, !dbg !568

697:                                              ; preds = %originalBBpart2178
  %698 = load i32, i32* @x.3
  %699 = load i32, i32* @y.4
  %700 = sub i32 %698, 1
  %701 = mul i32 %698, %700
  %702 = urem i32 %701, 2
  %703 = icmp eq i32 %702, 0
  %704 = icmp slt i32 %699, 10
  %705 = or i1 %703, %704
  br i1 %705, label %originalBB180, label %originalBB180alteredBB

originalBB180:                                    ; preds = %697, %originalBB180alteredBB
  %706 = load i8, i8* @just_context, align 1, !dbg !569
  %707 = trunc i8 %706 to i1, !dbg !569
  %708 = load i32, i32* @x.3
  %709 = load i32, i32* @y.4
  %710 = sub i32 %708, 1
  %711 = mul i32 %708, %710
  %712 = urem i32 %711, 2
  %713 = icmp eq i32 %712, 0
  %714 = icmp slt i32 %709, 10
  %715 = or i1 %713, %714
  br i1 %715, label %originalBBpart2182, label %originalBB180alteredBB

originalBBpart2182:                               ; preds = %originalBB180
  br i1 %707, label %773, label %716, !dbg !570

716:                                              ; preds = %originalBBpart2182, %originalBBpart2178, %originalBBpart2174
  %717 = load i32, i32* @x.3
  %718 = load i32, i32* @y.4
  %719 = sub i32 %717, 1
  %720 = mul i32 %717, %719
  %721 = urem i32 %720, 2
  %722 = icmp eq i32 %721, 0
  %723 = icmp slt i32 %718, 10
  %724 = or i1 %722, %723
  br i1 %724, label %originalBB184, label %originalBB184alteredBB

originalBB184:                                    ; preds = %716, %originalBB184alteredBB
  %725 = load i8, i8* %16, align 1, !dbg !571
  %726 = trunc i8 %725 to i1, !dbg !571
  %727 = load i32, i32* @x.3
  %728 = load i32, i32* @y.4
  %729 = sub i32 %727, 1
  %730 = mul i32 %727, %729
  %731 = urem i32 %730, 2
  %732 = icmp eq i32 %731, 0
  %733 = icmp slt i32 %728, 10
  %734 = or i1 %732, %733
  br i1 %734, label %originalBBpart2186, label %originalBB184alteredBB

originalBBpart2186:                               ; preds = %originalBB184
  br i1 %726, label %735, label %791, !dbg !572

735:                                              ; preds = %originalBBpart2186
  %736 = load i32, i32* @x.3
  %737 = load i32, i32* @y.4
  %738 = sub i32 %736, 1
  %739 = mul i32 %736, %738
  %740 = urem i32 %739, 2
  %741 = icmp eq i32 %740, 0
  %742 = icmp slt i32 %737, 10
  %743 = or i1 %741, %742
  br i1 %743, label %originalBB188, label %originalBB188alteredBB

originalBB188:                                    ; preds = %735, %originalBB188alteredBB
  %744 = call i64 @smack_new_label_from_self(i8** @context), !dbg !573
  %745 = icmp slt i64 %744, 0, !dbg !574
  %746 = load i32, i32* @x.3
  %747 = load i32, i32* @y.4
  %748 = sub i32 %746, 1
  %749 = mul i32 %746, %748
  %750 = urem i32 %749, 2
  %751 = icmp eq i32 %750, 0
  %752 = icmp slt i32 %747, 10
  %753 = or i1 %751, %752
  br i1 %753, label %originalBBpart2190, label %originalBB188alteredBB

originalBBpart2190:                               ; preds = %originalBB188
  br i1 %745, label %754, label %791, !dbg !575

754:                                              ; preds = %originalBBpart2190
  %755 = load i32, i32* @x.3
  %756 = load i32, i32* @y.4
  %757 = sub i32 %755, 1
  %758 = mul i32 %755, %757
  %759 = urem i32 %758, 2
  %760 = icmp eq i32 %759, 0
  %761 = icmp slt i32 %756, 10
  %762 = or i1 %760, %761
  br i1 %762, label %originalBB192, label %originalBB192alteredBB

originalBB192:                                    ; preds = %754, %originalBB192alteredBB
  %763 = load i8, i8* @just_context, align 1, !dbg !576
  %764 = trunc i8 %763 to i1, !dbg !576
  %765 = load i32, i32* @x.3
  %766 = load i32, i32* @y.4
  %767 = sub i32 %765, 1
  %768 = mul i32 %765, %767
  %769 = urem i32 %768, 2
  %770 = icmp eq i32 %769, 0
  %771 = icmp slt i32 %766, 10
  %772 = or i1 %770, %771
  br i1 %772, label %originalBBpart2194, label %originalBB192alteredBB

originalBBpart2194:                               ; preds = %originalBB192
  br i1 %764, label %773, label %791, !dbg !577

773:                                              ; preds = %originalBBpart2194, %originalBBpart2182
  %774 = load i32, i32* @x.3
  %775 = load i32, i32* @y.4
  %776 = sub i32 %774, 1
  %777 = mul i32 %774, %776
  %778 = urem i32 %777, 2
  %779 = icmp eq i32 %778, 0
  %780 = icmp slt i32 %775, 10
  %781 = or i1 %779, %780
  br i1 %781, label %originalBB196, label %originalBB196alteredBB

originalBB196:                                    ; preds = %773, %originalBB196alteredBB
  %782 = call i8* @gettext(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.21, i64 0, i64 0)) #10, !dbg !578
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %782), !dbg !578
  %783 = load i32, i32* @x.3
  %784 = load i32, i32* @y.4
  %785 = sub i32 %783, 1
  %786 = mul i32 %783, %785
  %787 = urem i32 %786, 2
  %788 = icmp eq i32 %787, 0
  %789 = icmp slt i32 %784, 10
  %790 = or i1 %788, %789
  br i1 %790, label %originalBBpart2198, label %originalBB196alteredBB

originalBBpart2198:                               ; preds = %originalBB196
  unreachable, !dbg !578

791:                                              ; preds = %originalBBpart2194, %originalBBpart2190, %originalBBpart2186
  %792 = load i32, i32* @x.3
  %793 = load i32, i32* @y.4
  %794 = sub i32 %792, 1
  %795 = mul i32 %792, %794
  %796 = urem i32 %795, 2
  %797 = icmp eq i32 %796, 0
  %798 = icmp slt i32 %793, 10
  %799 = or i1 %797, %798
  br i1 %799, label %originalBB200, label %originalBB200alteredBB

originalBB200:                                    ; preds = %791, %originalBB200alteredBB
  %800 = load i32, i32* @x.3
  %801 = load i32, i32* @y.4
  %802 = sub i32 %800, 1
  %803 = mul i32 %800, %802
  %804 = urem i32 %803, 2
  %805 = icmp eq i32 %804, 0
  %806 = icmp slt i32 %801, 10
  %807 = or i1 %805, %806
  br i1 %807, label %originalBBpart2202, label %originalBB200alteredBB

originalBBpart2202:                               ; preds = %originalBB200
  br label %808, !dbg !579

808:                                              ; preds = %originalBBpart2202, %originalBBpart2170, %637, %560
  %809 = load i64, i64* %18, align 8, !dbg !580
  %810 = icmp uge i64 %809, 1, !dbg !582
  br i1 %810, label %811, label %976, !dbg !583

811:                                              ; preds = %808
  %812 = load i32, i32* @x.3
  %813 = load i32, i32* @y.4
  %814 = sub i32 %812, 1
  %815 = mul i32 %812, %814
  %816 = urem i32 %815, 2
  %817 = icmp eq i32 %816, 0
  %818 = icmp slt i32 %813, 10
  %819 = or i1 %817, %818
  br i1 %819, label %originalBB204, label %originalBB204alteredBB

originalBB204:                                    ; preds = %811, %originalBB204alteredBB
  %820 = load i64, i64* %18, align 8, !dbg !584
  %821 = icmp ugt i64 %820, 1, !dbg !586
  %822 = zext i1 %821 to i64, !dbg !584
  %823 = select i1 %821, i32 1, i32 0, !dbg !584
  %824 = icmp ne i32 %823, 0, !dbg !584
  %825 = zext i1 %824 to i8, !dbg !587
  store i8 %825, i8* @multiple_users, align 1, !dbg !587
  %826 = load i32, i32* @optind, align 4, !dbg !588
  %827 = sext i32 %826 to i64, !dbg !588
  %828 = load i64, i64* %18, align 8, !dbg !589
  %829 = add i64 %828, %827, !dbg !589
  store i64 %829, i64* %18, align 8, !dbg !589
  %830 = load i32, i32* @x.3
  %831 = load i32, i32* @y.4
  %832 = sub i32 %830, 1
  %833 = mul i32 %830, %832
  %834 = urem i32 %833, 2
  %835 = icmp eq i32 %834, 0
  %836 = icmp slt i32 %831, 10
  %837 = or i1 %835, %836
  br i1 %837, label %originalBBpart2215, label %originalBB204alteredBB

originalBBpart2215:                               ; preds = %originalBB204
  br label %838, !dbg !590

838:                                              ; preds = %originalBBpart2247, %originalBBpart2215
  %839 = load i32, i32* @x.3
  %840 = load i32, i32* @y.4
  %841 = sub i32 %839, 1
  %842 = mul i32 %839, %841
  %843 = urem i32 %842, 2
  %844 = icmp eq i32 %843, 0
  %845 = icmp slt i32 %840, 10
  %846 = or i1 %844, %845
  br i1 %846, label %originalBB217, label %originalBB217alteredBB

originalBB217:                                    ; preds = %838, %originalBB217alteredBB
  %847 = load i32, i32* @optind, align 4, !dbg !591
  %848 = sext i32 %847 to i64, !dbg !591
  %849 = load i64, i64* %18, align 8, !dbg !594
  %850 = icmp ult i64 %848, %849, !dbg !595
  %851 = load i32, i32* @x.3
  %852 = load i32, i32* @y.4
  %853 = sub i32 %851, 1
  %854 = mul i32 %851, %853
  %855 = urem i32 %854, 2
  %856 = icmp eq i32 %855, 0
  %857 = icmp slt i32 %852, 10
  %858 = or i1 %856, %857
  br i1 %858, label %originalBBpart2219, label %originalBB217alteredBB

originalBBpart2219:                               ; preds = %originalBB217
  br i1 %850, label %859, label %975, !dbg !596

859:                                              ; preds = %originalBBpart2219
  call void @llvm.dbg.declare(metadata %struct.passwd** %20, metadata !597, metadata !DIExpression()), !dbg !610
  %860 = load i32, i32* @x.3
  %861 = load i32, i32* @y.4
  %862 = sub i32 %860, 1
  %863 = mul i32 %860, %862
  %864 = urem i32 %863, 2
  %865 = icmp eq i32 %864, 0
  %866 = icmp slt i32 %861, 10
  %867 = or i1 %865, %866
  br i1 %867, label %originalBB221, label %originalBB221alteredBB

originalBB221:                                    ; preds = %859, %originalBB221alteredBB
  store %struct.passwd* null, %struct.passwd** %20, align 8, !dbg !610
  call void @llvm.dbg.declare(metadata i8** %21, metadata !611, metadata !DIExpression()), !dbg !612
  %868 = load i8**, i8*** %13, align 8, !dbg !613
  %869 = load i32, i32* @optind, align 4, !dbg !614
  %870 = sext i32 %869 to i64, !dbg !613
  %871 = getelementptr inbounds i8*, i8** %868, i64 %870, !dbg !613
  %872 = load i8*, i8** %871, align 8, !dbg !613
  store i8* %872, i8** %21, align 8, !dbg !612
  %873 = load i8*, i8** %21, align 8, !dbg !615
  %874 = load i8, i8* %873, align 1, !dbg !617
  %875 = icmp ne i8 %874, 0, !dbg !617
  %876 = load i32, i32* @x.3
  %877 = load i32, i32* @y.4
  %878 = sub i32 %876, 1
  %879 = mul i32 %876, %878
  %880 = urem i32 %879, 2
  %881 = icmp eq i32 %880, 0
  %882 = icmp slt i32 %877, 10
  %883 = or i1 %881, %882
  br i1 %883, label %originalBBpart2223, label %originalBB221alteredBB

originalBBpart2223:                               ; preds = %originalBB221
  br i1 %875, label %884, label %908, !dbg !618

884:                                              ; preds = %originalBBpart2223
  %885 = load i8*, i8** %21, align 8, !dbg !619
  %886 = call i8* @parse_user_spec(i8* %885, i32* @euid, i32* null, i8** null, i8** null), !dbg !622
  %887 = icmp eq i8* %886, null, !dbg !623
  br i1 %887, label %888, label %907, !dbg !624

888:                                              ; preds = %884
  %889 = load i32, i32* @x.3
  %890 = load i32, i32* @y.4
  %891 = sub i32 %889, 1
  %892 = mul i32 %889, %891
  %893 = urem i32 %892, 2
  %894 = icmp eq i32 %893, 0
  %895 = icmp slt i32 %890, 10
  %896 = or i1 %894, %895
  br i1 %896, label %originalBB225, label %originalBB225alteredBB

originalBB225:                                    ; preds = %888, %originalBB225alteredBB
  %897 = load i32, i32* @euid, align 4, !dbg !625
  %898 = call %struct.passwd* @getpwuid(i32 %897), !dbg !627
  store %struct.passwd* %898, %struct.passwd** %20, align 8, !dbg !628
  %899 = load i32, i32* @x.3
  %900 = load i32, i32* @y.4
  %901 = sub i32 %899, 1
  %902 = mul i32 %899, %901
  %903 = urem i32 %902, 2
  %904 = icmp eq i32 %903, 0
  %905 = icmp slt i32 %900, 10
  %906 = or i1 %904, %905
  br i1 %906, label %originalBBpart2227, label %originalBB225alteredBB

originalBBpart2227:                               ; preds = %originalBB225
  br label %907, !dbg !629

907:                                              ; preds = %originalBBpart2227, %884
  br label %908, !dbg !630

908:                                              ; preds = %907, %originalBBpart2223
  %909 = load i32, i32* @x.3
  %910 = load i32, i32* @y.4
  %911 = sub i32 %909, 1
  %912 = mul i32 %909, %911
  %913 = urem i32 %912, 2
  %914 = icmp eq i32 %913, 0
  %915 = icmp slt i32 %910, 10
  %916 = or i1 %914, %915
  br i1 %916, label %originalBB229, label %originalBB229alteredBB

originalBB229:                                    ; preds = %908, %originalBB229alteredBB
  %917 = load %struct.passwd*, %struct.passwd** %20, align 8, !dbg !631
  %918 = icmp eq %struct.passwd* %917, null, !dbg !633
  %919 = load i32, i32* @x.3
  %920 = load i32, i32* @y.4
  %921 = sub i32 %919, 1
  %922 = mul i32 %919, %921
  %923 = urem i32 %922, 2
  %924 = icmp eq i32 %923, 0
  %925 = icmp slt i32 %920, 10
  %926 = or i1 %924, %925
  br i1 %926, label %originalBBpart2231, label %originalBB229alteredBB

originalBBpart2231:                               ; preds = %originalBB229
  br i1 %918, label %927, label %943, !dbg !634

927:                                              ; preds = %originalBBpart2231
  %928 = call i32* @__errno_location() #15, !dbg !635
  %929 = load i32, i32* %928, align 4, !dbg !635
  %930 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.22, i64 0, i64 0)) #10, !dbg !637
  %931 = load i8**, i8*** %13, align 8, !dbg !638
  %932 = load i32, i32* @optind, align 4, !dbg !639
  %933 = sext i32 %932 to i64, !dbg !638
  %934 = getelementptr inbounds i8*, i8** %931, i64 %933, !dbg !638
  %935 = load i8*, i8** %934, align 8, !dbg !638
  %936 = call i8* @quote(i8* %935), !dbg !640
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %929, i8* %930, i8* %936), !dbg !641
  %937 = load i8, i8* @ok, align 1, !dbg !642
  %938 = trunc i8 %937 to i1, !dbg !642
  %939 = zext i1 %938 to i32, !dbg !642
  %940 = and i32 %939, 0, !dbg !642
  %941 = icmp ne i32 %940, 0, !dbg !642
  %942 = zext i1 %941 to i8, !dbg !642
  store i8 %942, i8* @ok, align 1, !dbg !642
  br label %956, !dbg !643

943:                                              ; preds = %originalBBpart2231
  %944 = load %struct.passwd*, %struct.passwd** %20, align 8, !dbg !644
  %945 = getelementptr inbounds %struct.passwd, %struct.passwd* %944, i32 0, i32 0, !dbg !645
  %946 = load i8*, i8** %945, align 8, !dbg !645
  %947 = call noalias i8* @xstrdup(i8* %946), !dbg !646
  store i8* %947, i8** %17, align 8, !dbg !647
  %948 = load %struct.passwd*, %struct.passwd** %20, align 8, !dbg !648
  %949 = getelementptr inbounds %struct.passwd, %struct.passwd* %948, i32 0, i32 2, !dbg !649
  %950 = load i32, i32* %949, align 8, !dbg !649
  store i32 %950, i32* @euid, align 4, !dbg !650
  store i32 %950, i32* @ruid, align 4, !dbg !651
  %951 = load %struct.passwd*, %struct.passwd** %20, align 8, !dbg !652
  %952 = getelementptr inbounds %struct.passwd, %struct.passwd* %951, i32 0, i32 3, !dbg !653
  %953 = load i32, i32* %952, align 4, !dbg !653
  store i32 %953, i32* @egid, align 4, !dbg !654
  store i32 %953, i32* @rgid, align 4, !dbg !655
  %954 = load i8*, i8** %17, align 8, !dbg !656
  call void @print_stuff(i8* %954), !dbg !657
  %955 = load i8*, i8** %17, align 8, !dbg !658
  call void @free(i8* %955) #10, !dbg !659
  br label %956, !dbg !660

956:                                              ; preds = %943, %927
  %957 = load i32, i32* @x.3
  %958 = load i32, i32* @y.4
  %959 = sub i32 %957, 1
  %960 = mul i32 %957, %959
  %961 = urem i32 %960, 2
  %962 = icmp eq i32 %961, 0
  %963 = icmp slt i32 %958, 10
  %964 = or i1 %962, %963
  br i1 %964, label %originalBB233, label %originalBB233alteredBB

originalBB233:                                    ; preds = %956, %originalBB233alteredBB
  %965 = load i32, i32* @optind, align 4, !dbg !661
  %966 = add nsw i32 %965, 1, !dbg !661
  store i32 %966, i32* @optind, align 4, !dbg !661
  %967 = load i32, i32* @x.3
  %968 = load i32, i32* @y.4
  %969 = sub i32 %967, 1
  %970 = mul i32 %967, %969
  %971 = urem i32 %970, 2
  %972 = icmp eq i32 %971, 0
  %973 = icmp slt i32 %968, 10
  %974 = or i1 %972, %973
  br i1 %974, label %originalBBpart2247, label %originalBB233alteredBB

originalBBpart2247:                               ; preds = %originalBB233
  br label %838, !dbg !662, !llvm.loop !663

975:                                              ; preds = %originalBBpart2219
  br label %1335, !dbg !665

976:                                              ; preds = %808
  call void @llvm.dbg.declare(metadata i32* %22, metadata !666, metadata !DIExpression()), !dbg !668
  store i32 -1, i32* %22, align 4, !dbg !668
  call void @llvm.dbg.declare(metadata i32* %23, metadata !669, metadata !DIExpression()), !dbg !670
  store i32 -1, i32* %23, align 4, !dbg !670
  %977 = load i8, i8* @just_user, align 1, !dbg !671
  %978 = trunc i8 %977 to i1, !dbg !671
  br i1 %978, label %979, label %982, !dbg !673

979:                                              ; preds = %976
  %980 = load i8, i8* @use_real, align 1, !dbg !674
  %981 = trunc i8 %980 to i1, !dbg !674
  br i1 %981, label %1086, label %1039, !dbg !671

982:                                              ; preds = %976
  %983 = load i32, i32* @x.3
  %984 = load i32, i32* @y.4
  %985 = sub i32 %983, 1
  %986 = mul i32 %983, %985
  %987 = urem i32 %986, 2
  %988 = icmp eq i32 %987, 0
  %989 = icmp slt i32 %984, 10
  %990 = or i1 %988, %989
  br i1 %990, label %originalBB249, label %originalBB249alteredBB

originalBB249:                                    ; preds = %982, %originalBB249alteredBB
  %991 = load i8, i8* @just_group, align 1, !dbg !675
  %992 = trunc i8 %991 to i1, !dbg !675
  %993 = load i32, i32* @x.3
  %994 = load i32, i32* @y.4
  %995 = sub i32 %993, 1
  %996 = mul i32 %993, %995
  %997 = urem i32 %996, 2
  %998 = icmp eq i32 %997, 0
  %999 = icmp slt i32 %994, 10
  %1000 = or i1 %998, %999
  br i1 %1000, label %originalBBpart2251, label %originalBB249alteredBB

originalBBpart2251:                               ; preds = %originalBB249
  br i1 %992, label %1086, label %1001, !dbg !676

1001:                                             ; preds = %originalBBpart2251
  %1002 = load i32, i32* @x.3
  %1003 = load i32, i32* @y.4
  %1004 = sub i32 %1002, 1
  %1005 = mul i32 %1002, %1004
  %1006 = urem i32 %1005, 2
  %1007 = icmp eq i32 %1006, 0
  %1008 = icmp slt i32 %1003, 10
  %1009 = or i1 %1007, %1008
  br i1 %1009, label %originalBB253, label %originalBB253alteredBB

originalBB253:                                    ; preds = %1001, %originalBB253alteredBB
  %1010 = load i8, i8* @just_group_list, align 1, !dbg !677
  %1011 = trunc i8 %1010 to i1, !dbg !677
  %1012 = load i32, i32* @x.3
  %1013 = load i32, i32* @y.4
  %1014 = sub i32 %1012, 1
  %1015 = mul i32 %1012, %1014
  %1016 = urem i32 %1015, 2
  %1017 = icmp eq i32 %1016, 0
  %1018 = icmp slt i32 %1013, 10
  %1019 = or i1 %1017, %1018
  br i1 %1019, label %originalBBpart2255, label %originalBB253alteredBB

originalBBpart2255:                               ; preds = %originalBB253
  br i1 %1011, label %1086, label %1020, !dbg !678

1020:                                             ; preds = %originalBBpart2255
  %1021 = load i32, i32* @x.3
  %1022 = load i32, i32* @y.4
  %1023 = sub i32 %1021, 1
  %1024 = mul i32 %1021, %1023
  %1025 = urem i32 %1024, 2
  %1026 = icmp eq i32 %1025, 0
  %1027 = icmp slt i32 %1022, 10
  %1028 = or i1 %1026, %1027
  br i1 %1028, label %originalBB257, label %originalBB257alteredBB

originalBB257:                                    ; preds = %1020, %originalBB257alteredBB
  %1029 = load i8, i8* @just_context, align 1, !dbg !679
  %1030 = trunc i8 %1029 to i1, !dbg !679
  %1031 = load i32, i32* @x.3
  %1032 = load i32, i32* @y.4
  %1033 = sub i32 %1031, 1
  %1034 = mul i32 %1031, %1033
  %1035 = urem i32 %1034, 2
  %1036 = icmp eq i32 %1035, 0
  %1037 = icmp slt i32 %1032, 10
  %1038 = or i1 %1036, %1037
  br i1 %1038, label %originalBBpart2259, label %originalBB257alteredBB

originalBBpart2259:                               ; preds = %originalBB257
  br i1 %1030, label %1086, label %1039, !dbg !673

1039:                                             ; preds = %originalBBpart2259, %979
  %1040 = load i32, i32* @x.3
  %1041 = load i32, i32* @y.4
  %1042 = sub i32 %1040, 1
  %1043 = mul i32 %1040, %1042
  %1044 = urem i32 %1043, 2
  %1045 = icmp eq i32 %1044, 0
  %1046 = icmp slt i32 %1041, 10
  %1047 = or i1 %1045, %1046
  br i1 %1047, label %originalBB261, label %originalBB261alteredBB

originalBB261:                                    ; preds = %1039, %originalBB261alteredBB
  %1048 = call i32* @__errno_location() #15, !dbg !680
  store i32 0, i32* %1048, align 4, !dbg !682
  %1049 = call i32 @geteuid() #10, !dbg !683
  store i32 %1049, i32* @euid, align 4, !dbg !684
  %1050 = load i32, i32* @euid, align 4, !dbg !685
  %1051 = load i32, i32* %22, align 4, !dbg !687
  %1052 = icmp eq i32 %1050, %1051, !dbg !688
  %1053 = load i32, i32* @x.3
  %1054 = load i32, i32* @y.4
  %1055 = sub i32 %1053, 1
  %1056 = mul i32 %1053, %1055
  %1057 = urem i32 %1056, 2
  %1058 = icmp eq i32 %1057, 0
  %1059 = icmp slt i32 %1054, 10
  %1060 = or i1 %1058, %1059
  br i1 %1060, label %originalBBpart2263, label %originalBB261alteredBB

originalBBpart2263:                               ; preds = %originalBB261
  br i1 %1052, label %1061, label %1085, !dbg !689

1061:                                             ; preds = %originalBBpart2263
  %1062 = call i32* @__errno_location() #15, !dbg !690
  %1063 = load i32, i32* %1062, align 4, !dbg !690
  %1064 = icmp ne i32 %1063, 0, !dbg !690
  br i1 %1064, label %1065, label %1085, !dbg !691

1065:                                             ; preds = %1061
  %1066 = load i32, i32* @x.3
  %1067 = load i32, i32* @y.4
  %1068 = sub i32 %1066, 1
  %1069 = mul i32 %1066, %1068
  %1070 = urem i32 %1069, 2
  %1071 = icmp eq i32 %1070, 0
  %1072 = icmp slt i32 %1067, 10
  %1073 = or i1 %1071, %1072
  br i1 %1073, label %originalBB265, label %originalBB265alteredBB

originalBB265:                                    ; preds = %1065, %originalBB265alteredBB
  %1074 = call i32* @__errno_location() #15, !dbg !692
  %1075 = load i32, i32* %1074, align 4, !dbg !692
  %1076 = call i8* @gettext(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.23, i64 0, i64 0)) #10, !dbg !692
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %1075, i8* %1076), !dbg !692
  %1077 = load i32, i32* @x.3
  %1078 = load i32, i32* @y.4
  %1079 = sub i32 %1077, 1
  %1080 = mul i32 %1077, %1079
  %1081 = urem i32 %1080, 2
  %1082 = icmp eq i32 %1081, 0
  %1083 = icmp slt i32 %1078, 10
  %1084 = or i1 %1082, %1083
  br i1 %1084, label %originalBBpart2267, label %originalBB265alteredBB

originalBBpart2267:                               ; preds = %originalBB265
  unreachable, !dbg !692

1085:                                             ; preds = %1061, %originalBBpart2263
  br label %1086, !dbg !693

1086:                                             ; preds = %1085, %originalBBpart2259, %originalBBpart2255, %originalBBpart2251, %979
  %1087 = load i32, i32* @x.3
  %1088 = load i32, i32* @y.4
  %1089 = sub i32 %1087, 1
  %1090 = mul i32 %1087, %1089
  %1091 = urem i32 %1090, 2
  %1092 = icmp eq i32 %1091, 0
  %1093 = icmp slt i32 %1088, 10
  %1094 = or i1 %1092, %1093
  br i1 %1094, label %originalBB269, label %originalBB269alteredBB

originalBB269:                                    ; preds = %1086, %originalBB269alteredBB
  %1095 = load i8, i8* @just_user, align 1, !dbg !694
  %1096 = trunc i8 %1095 to i1, !dbg !694
  %1097 = load i32, i32* @x.3
  %1098 = load i32, i32* @y.4
  %1099 = sub i32 %1097, 1
  %1100 = mul i32 %1097, %1099
  %1101 = urem i32 %1100, 2
  %1102 = icmp eq i32 %1101, 0
  %1103 = icmp slt i32 %1098, 10
  %1104 = or i1 %1102, %1103
  br i1 %1104, label %originalBBpart2271, label %originalBB269alteredBB

originalBBpart2271:                               ; preds = %originalBB269
  br i1 %1096, label %1105, label %1124, !dbg !696

1105:                                             ; preds = %originalBBpart2271
  %1106 = load i32, i32* @x.3
  %1107 = load i32, i32* @y.4
  %1108 = sub i32 %1106, 1
  %1109 = mul i32 %1106, %1108
  %1110 = urem i32 %1109, 2
  %1111 = icmp eq i32 %1110, 0
  %1112 = icmp slt i32 %1107, 10
  %1113 = or i1 %1111, %1112
  br i1 %1113, label %originalBB273, label %originalBB273alteredBB

originalBB273:                                    ; preds = %1105, %originalBB273alteredBB
  %1114 = load i8, i8* @use_real, align 1, !dbg !697
  %1115 = trunc i8 %1114 to i1, !dbg !697
  %1116 = load i32, i32* @x.3
  %1117 = load i32, i32* @y.4
  %1118 = sub i32 %1116, 1
  %1119 = mul i32 %1116, %1118
  %1120 = urem i32 %1119, 2
  %1121 = icmp eq i32 %1120, 0
  %1122 = icmp slt i32 %1117, 10
  %1123 = or i1 %1121, %1122
  br i1 %1123, label %originalBBpart2275, label %originalBB273alteredBB

originalBBpart2275:                               ; preds = %originalBB273
  br i1 %1115, label %1165, label %1196, !dbg !694

1124:                                             ; preds = %originalBBpart2271
  %1125 = load i32, i32* @x.3
  %1126 = load i32, i32* @y.4
  %1127 = sub i32 %1125, 1
  %1128 = mul i32 %1125, %1127
  %1129 = urem i32 %1128, 2
  %1130 = icmp eq i32 %1129, 0
  %1131 = icmp slt i32 %1126, 10
  %1132 = or i1 %1130, %1131
  br i1 %1132, label %originalBB277, label %originalBB277alteredBB

originalBB277:                                    ; preds = %1124, %originalBB277alteredBB
  %1133 = load i8, i8* @just_group, align 1, !dbg !698
  %1134 = trunc i8 %1133 to i1, !dbg !698
  %1135 = load i32, i32* @x.3
  %1136 = load i32, i32* @y.4
  %1137 = sub i32 %1135, 1
  %1138 = mul i32 %1135, %1137
  %1139 = urem i32 %1138, 2
  %1140 = icmp eq i32 %1139, 0
  %1141 = icmp slt i32 %1136, 10
  %1142 = or i1 %1140, %1141
  br i1 %1142, label %originalBBpart2279, label %originalBB277alteredBB

originalBBpart2279:                               ; preds = %originalBB277
  br i1 %1134, label %1196, label %1143, !dbg !699

1143:                                             ; preds = %originalBBpart2279
  %1144 = load i32, i32* @x.3
  %1145 = load i32, i32* @y.4
  %1146 = sub i32 %1144, 1
  %1147 = mul i32 %1144, %1146
  %1148 = urem i32 %1147, 2
  %1149 = icmp eq i32 %1148, 0
  %1150 = icmp slt i32 %1145, 10
  %1151 = or i1 %1149, %1150
  br i1 %1151, label %originalBB281, label %originalBB281alteredBB

originalBB281:                                    ; preds = %1143, %originalBB281alteredBB
  %1152 = load i8, i8* @just_group_list, align 1, !dbg !700
  %1153 = trunc i8 %1152 to i1, !dbg !700
  %1154 = load i32, i32* @x.3
  %1155 = load i32, i32* @y.4
  %1156 = sub i32 %1154, 1
  %1157 = mul i32 %1154, %1156
  %1158 = urem i32 %1157, 2
  %1159 = icmp eq i32 %1158, 0
  %1160 = icmp slt i32 %1155, 10
  %1161 = or i1 %1159, %1160
  br i1 %1161, label %originalBBpart2283, label %originalBB281alteredBB

originalBBpart2283:                               ; preds = %originalBB281
  br i1 %1153, label %1165, label %1162, !dbg !701

1162:                                             ; preds = %originalBBpart2283
  %1163 = load i8, i8* @just_context, align 1, !dbg !702
  %1164 = trunc i8 %1163 to i1, !dbg !702
  br i1 %1164, label %1196, label %1165, !dbg !696

1165:                                             ; preds = %1162, %originalBBpart2283, %originalBBpart2275
  %1166 = load i32, i32* @x.3
  %1167 = load i32, i32* @y.4
  %1168 = sub i32 %1166, 1
  %1169 = mul i32 %1166, %1168
  %1170 = urem i32 %1169, 2
  %1171 = icmp eq i32 %1170, 0
  %1172 = icmp slt i32 %1167, 10
  %1173 = or i1 %1171, %1172
  br i1 %1173, label %originalBB285, label %originalBB285alteredBB

originalBB285:                                    ; preds = %1165, %originalBB285alteredBB
  %1174 = call i32* @__errno_location() #15, !dbg !703
  store i32 0, i32* %1174, align 4, !dbg !705
  %1175 = call i32 @getuid() #10, !dbg !706
  store i32 %1175, i32* @ruid, align 4, !dbg !707
  %1176 = load i32, i32* @ruid, align 4, !dbg !708
  %1177 = load i32, i32* %22, align 4, !dbg !710
  %1178 = icmp eq i32 %1176, %1177, !dbg !711
  %1179 = load i32, i32* @x.3
  %1180 = load i32, i32* @y.4
  %1181 = sub i32 %1179, 1
  %1182 = mul i32 %1179, %1181
  %1183 = urem i32 %1182, 2
  %1184 = icmp eq i32 %1183, 0
  %1185 = icmp slt i32 %1180, 10
  %1186 = or i1 %1184, %1185
  br i1 %1186, label %originalBBpart2287, label %originalBB285alteredBB

originalBBpart2287:                               ; preds = %originalBB285
  br i1 %1178, label %1187, label %1195, !dbg !712

1187:                                             ; preds = %originalBBpart2287
  %1188 = call i32* @__errno_location() #15, !dbg !713
  %1189 = load i32, i32* %1188, align 4, !dbg !713
  %1190 = icmp ne i32 %1189, 0, !dbg !713
  br i1 %1190, label %1191, label %1195, !dbg !714

1191:                                             ; preds = %1187
  %1192 = call i32* @__errno_location() #15, !dbg !715
  %1193 = load i32, i32* %1192, align 4, !dbg !715
  %1194 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.24, i64 0, i64 0)) #10, !dbg !715
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %1193, i8* %1194), !dbg !715
  unreachable, !dbg !715

1195:                                             ; preds = %1187, %originalBBpart2287
  br label %1196, !dbg !716

1196:                                             ; preds = %1195, %1162, %originalBBpart2279, %originalBBpart2275
  %1197 = load i32, i32* @x.3
  %1198 = load i32, i32* @y.4
  %1199 = sub i32 %1197, 1
  %1200 = mul i32 %1197, %1199
  %1201 = urem i32 %1200, 2
  %1202 = icmp eq i32 %1201, 0
  %1203 = icmp slt i32 %1198, 10
  %1204 = or i1 %1202, %1203
  br i1 %1204, label %originalBB289, label %originalBB289alteredBB

originalBB289:                                    ; preds = %1196, %originalBB289alteredBB
  %1205 = load i8, i8* @just_user, align 1, !dbg !717
  %1206 = trunc i8 %1205 to i1, !dbg !717
  %1207 = load i32, i32* @x.3
  %1208 = load i32, i32* @y.4
  %1209 = sub i32 %1207, 1
  %1210 = mul i32 %1207, %1209
  %1211 = urem i32 %1210, 2
  %1212 = icmp eq i32 %1211, 0
  %1213 = icmp slt i32 %1208, 10
  %1214 = or i1 %1212, %1213
  br i1 %1214, label %originalBBpart2291, label %originalBB289alteredBB

originalBBpart2291:                               ; preds = %originalBB289
  br i1 %1206, label %1317, label %1215, !dbg !719

1215:                                             ; preds = %originalBBpart2291
  %1216 = load i32, i32* @x.3
  %1217 = load i32, i32* @y.4
  %1218 = sub i32 %1216, 1
  %1219 = mul i32 %1216, %1218
  %1220 = urem i32 %1219, 2
  %1221 = icmp eq i32 %1220, 0
  %1222 = icmp slt i32 %1217, 10
  %1223 = or i1 %1221, %1222
  br i1 %1223, label %originalBB293, label %originalBB293alteredBB

originalBB293:                                    ; preds = %1215, %originalBB293alteredBB
  %1224 = load i8, i8* @just_group, align 1, !dbg !720
  %1225 = trunc i8 %1224 to i1, !dbg !720
  %1226 = load i32, i32* @x.3
  %1227 = load i32, i32* @y.4
  %1228 = sub i32 %1226, 1
  %1229 = mul i32 %1226, %1228
  %1230 = urem i32 %1229, 2
  %1231 = icmp eq i32 %1230, 0
  %1232 = icmp slt i32 %1227, 10
  %1233 = or i1 %1231, %1232
  br i1 %1233, label %originalBBpart2295, label %originalBB293alteredBB

originalBBpart2295:                               ; preds = %originalBB293
  br i1 %1225, label %1240, label %1234, !dbg !721

1234:                                             ; preds = %originalBBpart2295
  %1235 = load i8, i8* @just_group_list, align 1, !dbg !722
  %1236 = trunc i8 %1235 to i1, !dbg !722
  br i1 %1236, label %1240, label %1237, !dbg !723

1237:                                             ; preds = %1234
  %1238 = load i8, i8* @just_context, align 1, !dbg !724
  %1239 = trunc i8 %1238 to i1, !dbg !724
  br i1 %1239, label %1317, label %1240, !dbg !725

1240:                                             ; preds = %1237, %1234, %originalBBpart2295
  %1241 = load i32, i32* @x.3
  %1242 = load i32, i32* @y.4
  %1243 = sub i32 %1241, 1
  %1244 = mul i32 %1241, %1243
  %1245 = urem i32 %1244, 2
  %1246 = icmp eq i32 %1245, 0
  %1247 = icmp slt i32 %1242, 10
  %1248 = or i1 %1246, %1247
  br i1 %1248, label %originalBB297, label %originalBB297alteredBB

originalBB297:                                    ; preds = %1240, %originalBB297alteredBB
  %1249 = call i32* @__errno_location() #15, !dbg !726
  store i32 0, i32* %1249, align 4, !dbg !728
  %1250 = call i32 @getegid() #10, !dbg !729
  store i32 %1250, i32* @egid, align 4, !dbg !730
  %1251 = load i32, i32* @egid, align 4, !dbg !731
  %1252 = load i32, i32* %23, align 4, !dbg !733
  %1253 = icmp eq i32 %1251, %1252, !dbg !734
  %1254 = load i32, i32* @x.3
  %1255 = load i32, i32* @y.4
  %1256 = sub i32 %1254, 1
  %1257 = mul i32 %1254, %1256
  %1258 = urem i32 %1257, 2
  %1259 = icmp eq i32 %1258, 0
  %1260 = icmp slt i32 %1255, 10
  %1261 = or i1 %1259, %1260
  br i1 %1261, label %originalBBpart2299, label %originalBB297alteredBB

originalBBpart2299:                               ; preds = %originalBB297
  br i1 %1253, label %1262, label %1270, !dbg !735

1262:                                             ; preds = %originalBBpart2299
  %1263 = call i32* @__errno_location() #15, !dbg !736
  %1264 = load i32, i32* %1263, align 4, !dbg !736
  %1265 = icmp ne i32 %1264, 0, !dbg !736
  br i1 %1265, label %1266, label %1270, !dbg !737

1266:                                             ; preds = %1262
  %1267 = call i32* @__errno_location() #15, !dbg !738
  %1268 = load i32, i32* %1267, align 4, !dbg !738
  %1269 = call i8* @gettext(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.25, i64 0, i64 0)) #10, !dbg !738
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %1268, i8* %1269), !dbg !738
  unreachable, !dbg !738

1270:                                             ; preds = %1262, %originalBBpart2299
  %1271 = call i32* @__errno_location() #15, !dbg !739
  store i32 0, i32* %1271, align 4, !dbg !740
  %1272 = call i32 @getgid() #10, !dbg !741
  store i32 %1272, i32* @rgid, align 4, !dbg !742
  %1273 = load i32, i32* @rgid, align 4, !dbg !743
  %1274 = load i32, i32* %23, align 4, !dbg !745
  %1275 = icmp eq i32 %1273, %1274, !dbg !746
  br i1 %1275, label %1276, label %1300, !dbg !747

1276:                                             ; preds = %1270
  %1277 = call i32* @__errno_location() #15, !dbg !748
  %1278 = load i32, i32* %1277, align 4, !dbg !748
  %1279 = icmp ne i32 %1278, 0, !dbg !748
  br i1 %1279, label %1280, label %1300, !dbg !749

1280:                                             ; preds = %1276
  %1281 = load i32, i32* @x.3
  %1282 = load i32, i32* @y.4
  %1283 = sub i32 %1281, 1
  %1284 = mul i32 %1281, %1283
  %1285 = urem i32 %1284, 2
  %1286 = icmp eq i32 %1285, 0
  %1287 = icmp slt i32 %1282, 10
  %1288 = or i1 %1286, %1287
  br i1 %1288, label %originalBB301, label %originalBB301alteredBB

originalBB301:                                    ; preds = %1280, %originalBB301alteredBB
  %1289 = call i32* @__errno_location() #15, !dbg !750
  %1290 = load i32, i32* %1289, align 4, !dbg !750
  %1291 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.26, i64 0, i64 0)) #10, !dbg !750
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %1290, i8* %1291), !dbg !750
  %1292 = load i32, i32* @x.3
  %1293 = load i32, i32* @y.4
  %1294 = sub i32 %1292, 1
  %1295 = mul i32 %1292, %1294
  %1296 = urem i32 %1295, 2
  %1297 = icmp eq i32 %1296, 0
  %1298 = icmp slt i32 %1293, 10
  %1299 = or i1 %1297, %1298
  br i1 %1299, label %originalBBpart2303, label %originalBB301alteredBB

originalBBpart2303:                               ; preds = %originalBB301
  unreachable, !dbg !750

1300:                                             ; preds = %1276, %1270
  %1301 = load i32, i32* @x.3
  %1302 = load i32, i32* @y.4
  %1303 = sub i32 %1301, 1
  %1304 = mul i32 %1301, %1303
  %1305 = urem i32 %1304, 2
  %1306 = icmp eq i32 %1305, 0
  %1307 = icmp slt i32 %1302, 10
  %1308 = or i1 %1306, %1307
  br i1 %1308, label %originalBB305, label %originalBB305alteredBB

originalBB305:                                    ; preds = %1300, %originalBB305alteredBB
  %1309 = load i32, i32* @x.3
  %1310 = load i32, i32* @y.4
  %1311 = sub i32 %1309, 1
  %1312 = mul i32 %1309, %1311
  %1313 = urem i32 %1312, 2
  %1314 = icmp eq i32 %1313, 0
  %1315 = icmp slt i32 %1310, 10
  %1316 = or i1 %1314, %1315
  br i1 %1316, label %originalBBpart2307, label %originalBB305alteredBB

originalBBpart2307:                               ; preds = %originalBB305
  br label %1317, !dbg !751

1317:                                             ; preds = %originalBBpart2307, %1237, %originalBBpart2291
  %1318 = load i32, i32* @x.3
  %1319 = load i32, i32* @y.4
  %1320 = sub i32 %1318, 1
  %1321 = mul i32 %1318, %1320
  %1322 = urem i32 %1321, 2
  %1323 = icmp eq i32 %1322, 0
  %1324 = icmp slt i32 %1319, 10
  %1325 = or i1 %1323, %1324
  br i1 %1325, label %originalBB309, label %originalBB309alteredBB

originalBB309:                                    ; preds = %1317, %originalBB309alteredBB
  %1326 = load i8*, i8** %17, align 8, !dbg !752
  call void @print_stuff(i8* %1326), !dbg !753
  %1327 = load i32, i32* @x.3
  %1328 = load i32, i32* @y.4
  %1329 = sub i32 %1327, 1
  %1330 = mul i32 %1327, %1329
  %1331 = urem i32 %1330, 2
  %1332 = icmp eq i32 %1331, 0
  %1333 = icmp slt i32 %1328, 10
  %1334 = or i1 %1332, %1333
  br i1 %1334, label %originalBBpart2311, label %originalBB309alteredBB

originalBBpart2311:                               ; preds = %originalBB309
  br label %1335

1335:                                             ; preds = %originalBBpart2311, %975
  %1336 = load i32, i32* @x.3
  %1337 = load i32, i32* @y.4
  %1338 = sub i32 %1336, 1
  %1339 = mul i32 %1336, %1338
  %1340 = urem i32 %1339, 2
  %1341 = icmp eq i32 %1340, 0
  %1342 = icmp slt i32 %1337, 10
  %1343 = or i1 %1341, %1342
  br i1 %1343, label %originalBB313, label %originalBB313alteredBB

originalBB313:                                    ; preds = %1335, %originalBB313alteredBB
  %1344 = load i8, i8* @ok, align 1, !dbg !754
  %1345 = trunc i8 %1344 to i1, !dbg !754
  %1346 = zext i1 %1345 to i64, !dbg !754
  %1347 = select i1 %1345, i32 0, i32 1, !dbg !754
  %1348 = load i32, i32* @x.3
  %1349 = load i32, i32* @y.4
  %1350 = sub i32 %1348, 1
  %1351 = mul i32 %1348, %1350
  %1352 = urem i32 %1351, 2
  %1353 = icmp eq i32 %1352, 0
  %1354 = icmp slt i32 %1349, 10
  %1355 = or i1 %1353, %1354
  br i1 %1355, label %originalBBpart2315, label %originalBB313alteredBB

originalBBpart2315:                               ; preds = %originalBB313
  ret i32 %1347, !dbg !755

originalBBalteredBB:                              ; preds = %originalBB, %2
  store i8** %1, i8*** @inVal1
  store i32 %0, i32* @inVal0
  %1356 = alloca i32, align 4
  %1357 = alloca i32, align 4
  %1358 = alloca i8**, align 8
  %1359 = alloca i32, align 4
  %1360 = alloca i32, align 4
  %1361 = alloca i8, align 1
  %1362 = alloca i8*, align 8
  %1363 = alloca i64, align 8
  %1364 = alloca i8, align 1
  %1365 = alloca %struct.passwd*, align 8
  %1366 = alloca i8*, align 8
  %1367 = alloca i32, align 4
  %1368 = alloca i32, align 4
  store i32 0, i32* %1356, align 4
  store i32 %0, i32* %1357, align 4
  call void @llvm.dbg.declare(metadata i32* %1357, metadata !756, metadata !DIExpression()), !dbg !456
  store i8** %1, i8*** %1358, align 8
  call void @llvm.dbg.declare(metadata i8*** %1358, metadata !804, metadata !DIExpression()), !dbg !458
  call void @llvm.dbg.declare(metadata i32* %1359, metadata !805, metadata !DIExpression()), !dbg !460
  call void @llvm.dbg.declare(metadata i32* %1360, metadata !806, metadata !DIExpression()), !dbg !462
  store i32 0, i32* %1360, align 4, !dbg !462
  call void @llvm.dbg.declare(metadata i8* %1361, metadata !807, metadata !DIExpression()), !dbg !464
  %1369 = call zeroext i1 @is_smack_enabled(), !dbg !465
  %1370 = zext i1 %1369 to i8, !dbg !464
  store i8 %1370, i8* %1361, align 1, !dbg !464
  call void @llvm.dbg.declare(metadata i8** %1362, metadata !808, metadata !DIExpression()), !dbg !467
  store i8* null, i8** %1362, align 8, !dbg !467
  %1371 = load i8**, i8*** %1358, align 8, !dbg !468
  %1372 = getelementptr inbounds i8*, i8** %1371, i64 0, !dbg !468
  %1373 = load i8*, i8** %1372, align 8, !dbg !468
  call void @set_program_name(i8* %1373), !dbg !469
  %1374 = call i8* @setlocale(i32 6, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.8, i64 0, i64 0)) #10, !dbg !470
  %1375 = call i8* @bindtextdomain(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.10, i64 0, i64 0)) #10, !dbg !471
  %1376 = call i8* @textdomain(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9, i64 0, i64 0)) #10, !dbg !472
  %1377 = call i32 @atexit(void ()* @close_stdout) #10, !dbg !473
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %49
  %1378 = load i32, i32* %15, align 4, !dbg !485
  %1379 = icmp ne i32 %1378, 0, !dbg !485
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %70
  store i8 1, i8* @just_context, align 1, !dbg !489
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %87
  store i8 1, i8* @just_group, align 1, !dbg !491
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %105
  store i8 1, i8* @use_real, align 1, !dbg !495
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %122
  store i8 1, i8* @just_user, align 1, !dbg !497
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %140
  store i8 1, i8* @just_group_list, align 1, !dbg !501
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %157
  call void @usage(i32 0) #14, !dbg !503
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %174
  %1380 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !504
  %1381 = load i8*, i8** @Version, align 8, !dbg !504
  call void (%struct._IO_FILE*, i8*, i8*, i8*, ...) @version_etc(%struct._IO_FILE* %1380, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.13, i64 0, i64 0), i8* %1381, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.15, i64 0, i64 0), i8* null), !dbg !504
  call void @exit(i32 0) #12, !dbg !504
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %193
  call void @usage(i32 1) #14, !dbg !505
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %210
  br label %originalBB38

originalBB42alteredBB:                            ; preds = %originalBB42, %227
  %1382 = load i32, i32* %12, align 4, !dbg !510
  %1383 = load i32, i32* @optind, align 4, !dbg !511
  %_ = shl i32 %1382, %1383
  %_43 = sub i32 0, %1382
  %gen = add i32 %_43, %1383
  %_44 = shl i32 %1382, %1383
  %_45 = shl i32 %1382, %1383
  %1384 = sub nsw i32 %1382, %1383, !dbg !512
  %1385 = sext i32 %1384 to i64, !dbg !510
  store i64 %1385, i64* %18, align 8, !dbg !509
  %1386 = load i64, i64* %18, align 8, !dbg !513
  %1387 = icmp ne i64 %1386, 0, !dbg !513
  br label %originalBB42

originalBB49alteredBB:                            ; preds = %originalBB49, %250
  %1388 = load i8, i8* @just_context, align 1, !dbg !516
  %1389 = trunc i8 %1388 to i1, !dbg !516
  br label %originalBB49

originalBB53alteredBB:                            ; preds = %originalBB53, %269
  %1390 = call i8* @gettext(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.16, i64 0, i64 0)) #10, !dbg !518
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %1390), !dbg !518
  br label %originalBB53

originalBB57alteredBB:                            ; preds = %originalBB57, %287
  %1391 = load i8, i8* @just_user, align 1, !dbg !519
  %1392 = trunc i8 %1391 to i1, !dbg !519
  %1393 = zext i1 %1392 to i32, !dbg !519
  %1394 = load i8, i8* @just_group, align 1, !dbg !521
  %1395 = trunc i8 %1394 to i1, !dbg !521
  %1396 = zext i1 %1395 to i32, !dbg !521
  %_58 = sub i32 0, %1393
  %gen59 = add i32 %_58, %1396
  %_60 = sub i32 %1393, %1396
  %gen61 = mul i32 %_60, %1396
  %_62 = shl i32 %1393, %1396
  %_63 = sub i32 0, %1393
  %gen64 = add i32 %_63, %1396
  %_65 = sub i32 %1393, %1396
  %gen66 = mul i32 %_65, %1396
  %_67 = sub i32 0, %1393
  %gen68 = add i32 %_67, %1396
  %_69 = sub i32 0, %1393
  %gen70 = add i32 %_69, %1396
  %1397 = add nsw i32 %1393, %1396, !dbg !522
  %1398 = load i8, i8* @just_group_list, align 1, !dbg !523
  %1399 = trunc i8 %1398 to i1, !dbg !523
  %1400 = zext i1 %1399 to i32, !dbg !523
  %_71 = sub i32 %1397, %1400
  %gen72 = mul i32 %_71, %1400
  %_73 = sub i32 %1397, %1400
  %gen74 = mul i32 %_73, %1400
  %_75 = sub i32 0, %1397
  %gen76 = add i32 %_75, %1400
  %_77 = sub i32 %1397, %1400
  %gen78 = mul i32 %_77, %1400
  %_79 = sub i32 %1397, %1400
  %gen80 = mul i32 %_79, %1400
  %_81 = sub i32 0, %1397
  %gen82 = add i32 %_81, %1400
  %1401 = add nsw i32 %1397, %1400, !dbg !524
  %1402 = load i8, i8* @just_context, align 1, !dbg !525
  %1403 = trunc i8 %1402 to i1, !dbg !525
  %1404 = zext i1 %1403 to i32, !dbg !525
  %_83 = shl i32 %1401, %1404
  %_84 = shl i32 %1401, %1404
  %_85 = sub i32 %1401, %1404
  %gen86 = mul i32 %_85, %1404
  %_87 = sub i32 %1401, %1404
  %gen88 = mul i32 %_87, %1404
  %_89 = shl i32 %1401, %1404
  %_90 = sub i32 %1401, %1404
  %gen91 = mul i32 %_90, %1404
  %_92 = sub i32 %1401, %1404
  %gen93 = mul i32 %_92, %1404
  %1405 = add nsw i32 %1401, %1404, !dbg !526
  %1406 = icmp sgt i32 %1405, 1, !dbg !527
  br label %originalBB57

originalBB97alteredBB:                            ; preds = %originalBB97, %320
  %1407 = call i8* @gettext(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.17, i64 0, i64 0)) #10, !dbg !529
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %1407), !dbg !529
  br label %originalBB97

originalBB101alteredBB:                           ; preds = %originalBB101, %338
  %1408 = load i8, i8* @just_user, align 1, !dbg !532
  %1409 = trunc i8 %1408 to i1, !dbg !532
  br label %originalBB101

originalBB105alteredBB:                           ; preds = %originalBB105, %357
  %1410 = load i8, i8* @just_group, align 1, !dbg !534
  %1411 = trunc i8 %1410 to i1, !dbg !534
  br label %originalBB105

originalBB109alteredBB:                           ; preds = %originalBB109, %379
  %1412 = load i8, i8* @just_context, align 1, !dbg !538
  %1413 = trunc i8 %1412 to i1, !dbg !538
  br label %originalBB109

originalBB113alteredBB:                           ; preds = %originalBB113, %404
  %1414 = load i8, i8* @use_real, align 1, !dbg !543
  %1415 = trunc i8 %1414 to i1, !dbg !543
  br label %originalBB113

originalBB117alteredBB:                           ; preds = %originalBB117, %423
  %1416 = load i8, i8* @use_name, align 1, !dbg !545
  %1417 = trunc i8 %1416 to i1, !dbg !545
  br label %originalBB117

originalBB121alteredBB:                           ; preds = %originalBB121, %442
  %1418 = call i8* @gettext(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.18, i64 0, i64 0)) #10, !dbg !547
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %1418), !dbg !547
  br label %originalBB121

originalBB125alteredBB:                           ; preds = %originalBB125, %463
  %1419 = load i8, i8* @opt_zero, align 1, !dbg !551
  %1420 = trunc i8 %1419 to i1, !dbg !551
  br label %originalBB125

originalBB129alteredBB:                           ; preds = %originalBB129, %482
  %1421 = call i8* @gettext(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.19, i64 0, i64 0)) #10, !dbg !553
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %1421), !dbg !553
  br label %originalBB129

originalBB133alteredBB:                           ; preds = %originalBB133, %500
  %1422 = load i64, i64* %18, align 8, !dbg !554
  br label %originalBB133

originalBB137alteredBB:                           ; preds = %originalBB137, %518
  %collatzVaralteredBB = alloca i32
  br label %originalBB137

originalBB141alteredBB:                           ; preds = %originalBB141, %538
  store i32 88, i32* %collatzVar
  br label %originalBB141

originalBB145alteredBB:                           ; preds = %originalBB145, %563
  %1423 = load i32, i32* %collatzVar
  %_146 = sub i32 %1423, 2
  %gen147 = mul i32 %_146, 2
  %_148 = sub i32 0, %1423
  %gen149 = add i32 %_148, 2
  %_150 = sub i32 0, %1423
  %gen151 = add i32 %_150, 2
  %_152 = sub i32 0, %1423
  %gen153 = add i32 %_152, 2
  %1424 = srem i32 %1423, 2
  %1425 = icmp eq i32 %1424, 0
  br label %originalBB145

originalBB157alteredBB:                           ; preds = %originalBB157, %596
  %1426 = load i32, i32* %collatzVar
  %1427 = sext i32 %1426 to i64
  %1428 = sext i32 2 to i64
  %_158 = shl i64 %509, %1427
  %_159 = shl i64 %509, %1427
  %_160 = shl i64 %509, %1427
  %1429 = add i64 %509, %1427
  %1430 = icmp slt i64 %1429, %1428
  br label %originalBB157

originalBB164alteredBB:                           ; preds = %originalBB164, %618
  %1431 = load i8, i8* @just_context, align 1, !dbg !557
  %1432 = trunc i8 %1431 to i1, !dbg !557
  br label %originalBB164

originalBB168alteredBB:                           ; preds = %originalBB168, %640
  %1433 = call i8* @getenv(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.20, i64 0, i64 0)) #10, !dbg !561
  %1434 = icmp ne i8* %1433, null, !dbg !561
  br label %originalBB168

originalBB172alteredBB:                           ; preds = %originalBB172, %659
  %1435 = load i32, i32* %15, align 4, !dbg !563
  %1436 = icmp ne i32 %1435, 0, !dbg !563
  br label %originalBB172

originalBB176alteredBB:                           ; preds = %originalBB176, %678
  %1437 = call i32 @getcon(i8** @context), !dbg !567
  %1438 = icmp ne i32 %1437, 0, !dbg !567
  br label %originalBB176

originalBB180alteredBB:                           ; preds = %originalBB180, %697
  %1439 = load i8, i8* @just_context, align 1, !dbg !569
  %1440 = trunc i8 %1439 to i1, !dbg !569
  br label %originalBB180

originalBB184alteredBB:                           ; preds = %originalBB184, %716
  %1441 = load i8, i8* %16, align 1, !dbg !571
  %1442 = trunc i8 %1441 to i1, !dbg !571
  br label %originalBB184

originalBB188alteredBB:                           ; preds = %originalBB188, %735
  %1443 = call i64 @smack_new_label_from_self(i8** @context), !dbg !573
  %1444 = icmp slt i64 %1443, 0, !dbg !574
  br label %originalBB188

originalBB192alteredBB:                           ; preds = %originalBB192, %754
  %1445 = load i8, i8* @just_context, align 1, !dbg !576
  %1446 = trunc i8 %1445 to i1, !dbg !576
  br label %originalBB192

originalBB196alteredBB:                           ; preds = %originalBB196, %773
  %1447 = call i8* @gettext(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.21, i64 0, i64 0)) #10, !dbg !578
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %1447), !dbg !578
  br label %originalBB196

originalBB200alteredBB:                           ; preds = %originalBB200, %791
  br label %originalBB200

originalBB204alteredBB:                           ; preds = %originalBB204, %811
  %1448 = load i64, i64* %18, align 8, !dbg !584
  %1449 = icmp ugt i64 %1448, 1, !dbg !586
  %1450 = zext i1 %1449 to i64, !dbg !584
  %1451 = select i1 %1449, i32 1, i32 0, !dbg !584
  %1452 = icmp ne i32 %1451, 0, !dbg !584
  %1453 = zext i1 %1452 to i8, !dbg !587
  store i8 %1453, i8* @multiple_users, align 1, !dbg !587
  %1454 = load i32, i32* @optind, align 4, !dbg !588
  %1455 = sext i32 %1454 to i64, !dbg !588
  %1456 = load i64, i64* %18, align 8, !dbg !589
  %_205 = sub i64 0, %1456
  %gen206 = add i64 %_205, %1455
  %_207 = sub i64 0, %1456
  %gen208 = add i64 %_207, %1455
  %_209 = sub i64 %1456, %1455
  %gen210 = mul i64 %_209, %1455
  %_211 = sub i64 0, %1456
  %gen212 = add i64 %_211, %1455
  %_213 = shl i64 %1456, %1455
  %1457 = add i64 %1456, %1455, !dbg !589
  store i64 %1457, i64* %18, align 8, !dbg !589
  br label %originalBB204

originalBB217alteredBB:                           ; preds = %originalBB217, %838
  %1458 = load i32, i32* @optind, align 4, !dbg !591
  %1459 = sext i32 %1458 to i64, !dbg !591
  %1460 = load i64, i64* %18, align 8, !dbg !594
  %1461 = icmp ult i64 %1459, %1460, !dbg !595
  br label %originalBB217

originalBB221alteredBB:                           ; preds = %originalBB221, %859
  store %struct.passwd* null, %struct.passwd** %20, align 8, !dbg !610
  call void @llvm.dbg.declare(metadata !4, metadata !809, metadata !DIExpression()), !dbg !612
  %1462 = load i8**, i8*** %13, align 8, !dbg !613
  %1463 = load i32, i32* @optind, align 4, !dbg !614
  %1464 = sext i32 %1463 to i64, !dbg !613
  %1465 = getelementptr inbounds i8*, i8** %1462, i64 %1464, !dbg !613
  %1466 = load i8*, i8** %1465, align 8, !dbg !613
  store i8* %1466, i8** %21, align 8, !dbg !612
  %1467 = load i8*, i8** %21, align 8, !dbg !615
  %1468 = load i8, i8* %1467, align 1, !dbg !617
  %1469 = icmp ne i8 %1468, 0, !dbg !617
  br label %originalBB221

originalBB225alteredBB:                           ; preds = %originalBB225, %888
  %1470 = load i32, i32* @euid, align 4, !dbg !625
  %1471 = call %struct.passwd* @getpwuid(i32 %1470), !dbg !627
  store %struct.passwd* %1471, %struct.passwd** %20, align 8, !dbg !628
  br label %originalBB225

originalBB229alteredBB:                           ; preds = %originalBB229, %908
  %1472 = load %struct.passwd*, %struct.passwd** %20, align 8, !dbg !631
  %1473 = icmp eq %struct.passwd* %1472, null, !dbg !633
  br label %originalBB229

originalBB233alteredBB:                           ; preds = %originalBB233, %956
  %1474 = load i32, i32* @optind, align 4, !dbg !661
  %_234 = sub i32 %1474, 1
  %gen235 = mul i32 %_234, 1
  %_236 = sub i32 0, %1474
  %gen237 = add i32 %_236, 1
  %_238 = sub i32 %1474, 1
  %gen239 = mul i32 %_238, 1
  %_240 = sub i32 0, %1474
  %gen241 = add i32 %_240, 1
  %_242 = sub i32 0, %1474
  %gen243 = add i32 %_242, 1
  %_244 = sub i32 %1474, 1
  %gen245 = mul i32 %_244, 1
  %1475 = add nsw i32 %1474, 1, !dbg !661
  store i32 %1475, i32* @optind, align 4, !dbg !661
  br label %originalBB233

originalBB249alteredBB:                           ; preds = %originalBB249, %982
  %1476 = load i8, i8* @just_group, align 1, !dbg !675
  %1477 = trunc i8 %1476 to i1, !dbg !675
  br label %originalBB249

originalBB253alteredBB:                           ; preds = %originalBB253, %1001
  %1478 = load i8, i8* @just_group_list, align 1, !dbg !677
  %1479 = trunc i8 %1478 to i1, !dbg !677
  br label %originalBB253

originalBB257alteredBB:                           ; preds = %originalBB257, %1020
  %1480 = load i8, i8* @just_context, align 1, !dbg !679
  %1481 = trunc i8 %1480 to i1, !dbg !679
  br label %originalBB257

originalBB261alteredBB:                           ; preds = %originalBB261, %1039
  %1482 = call i32* @__errno_location() #15, !dbg !680
  store i32 0, i32* %1482, align 4, !dbg !682
  %1483 = call i32 @geteuid() #10, !dbg !683
  store i32 %1483, i32* @euid, align 4, !dbg !684
  %1484 = load i32, i32* @euid, align 4, !dbg !685
  %1485 = load i32, i32* %22, align 4, !dbg !687
  %1486 = icmp eq i32 %1484, %1485, !dbg !688
  br label %originalBB261

originalBB265alteredBB:                           ; preds = %originalBB265, %1065
  %1487 = call i32* @__errno_location() #15, !dbg !692
  %1488 = load i32, i32* %1487, align 4, !dbg !692
  %1489 = call i8* @gettext(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.23, i64 0, i64 0)) #10, !dbg !692
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %1488, i8* %1489), !dbg !692
  br label %originalBB265

originalBB269alteredBB:                           ; preds = %originalBB269, %1086
  %1490 = load i8, i8* @just_user, align 1, !dbg !694
  %1491 = trunc i8 %1490 to i1, !dbg !694
  br label %originalBB269

originalBB273alteredBB:                           ; preds = %originalBB273, %1105
  %1492 = load i8, i8* @use_real, align 1, !dbg !697
  %1493 = trunc i8 %1492 to i1, !dbg !697
  br label %originalBB273

originalBB277alteredBB:                           ; preds = %originalBB277, %1124
  %1494 = load i8, i8* @just_group, align 1, !dbg !698
  %1495 = trunc i8 %1494 to i1, !dbg !698
  br label %originalBB277

originalBB281alteredBB:                           ; preds = %originalBB281, %1143
  %1496 = load i8, i8* @just_group_list, align 1, !dbg !700
  %1497 = trunc i8 %1496 to i1, !dbg !700
  br label %originalBB281

originalBB285alteredBB:                           ; preds = %originalBB285, %1165
  %1498 = call i32* @__errno_location() #15, !dbg !703
  store i32 0, i32* %1498, align 4, !dbg !705
  %1499 = call i32 @getuid() #10, !dbg !706
  store i32 %1499, i32* @ruid, align 4, !dbg !707
  %1500 = load i32, i32* @ruid, align 4, !dbg !708
  %1501 = load i32, i32* %22, align 4, !dbg !710
  %1502 = icmp eq i32 %1500, %1501, !dbg !711
  br label %originalBB285

originalBB289alteredBB:                           ; preds = %originalBB289, %1196
  %1503 = load i8, i8* @just_user, align 1, !dbg !717
  %1504 = trunc i8 %1503 to i1, !dbg !717
  br label %originalBB289

originalBB293alteredBB:                           ; preds = %originalBB293, %1215
  %1505 = load i8, i8* @just_group, align 1, !dbg !720
  %1506 = trunc i8 %1505 to i1, !dbg !720
  br label %originalBB293

originalBB297alteredBB:                           ; preds = %originalBB297, %1240
  %1507 = call i32* @__errno_location() #15, !dbg !726
  store i32 0, i32* %1507, align 4, !dbg !728
  %1508 = call i32 @getegid() #10, !dbg !729
  store i32 %1508, i32* @egid, align 4, !dbg !730
  %1509 = load i32, i32* @egid, align 4, !dbg !731
  %1510 = load i32, i32* %23, align 4, !dbg !733
  %1511 = icmp eq i32 %1509, %1510, !dbg !734
  br label %originalBB297

originalBB301alteredBB:                           ; preds = %originalBB301, %1280
  %1512 = call i32* @__errno_location() #15, !dbg !750
  %1513 = load i32, i32* %1512, align 4, !dbg !750
  %1514 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.26, i64 0, i64 0)) #10, !dbg !750
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %1513, i8* %1514), !dbg !750
  br label %originalBB301

originalBB305alteredBB:                           ; preds = %originalBB305, %1300
  br label %originalBB305

originalBB309alteredBB:                           ; preds = %originalBB309, %1317
  %1515 = load i8*, i8** %17, align 8, !dbg !752
  call void @print_stuff(i8* %1515), !dbg !753
  br label %originalBB309

originalBB313alteredBB:                           ; preds = %originalBB313, %1335
  %1516 = load i8, i8* @ok, align 1, !dbg !754
  %1517 = trunc i8 %1516 to i1, !dbg !754
  %1518 = zext i1 %1517 to i64, !dbg !754
  %1519 = select i1 %1517, i32 0, i32 1, !dbg !754
  br label %originalBB313
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @is_smack_enabled() #4 !dbg !862 {
  %1 = load i32, i32* @x.5
  %2 = load i32, i32* @y.6
  %3 = sub i32 %1, 1
  %4 = mul i32 %1, %3
  %5 = urem i32 %4, 2
  %6 = icmp eq i32 %5, 0
  %7 = icmp slt i32 %2, 10
  %8 = or i1 %6, %7
  br i1 %8, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %0, %originalBBalteredBB
  %9 = load i32, i32* @x.5
  %10 = load i32, i32* @y.6
  %11 = sub i32 %9, 1
  %12 = mul i32 %9, %11
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = icmp slt i32 %10, 10
  %16 = or i1 %14, %15
  br i1 %16, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i1 false, !dbg !866

originalBBalteredBB:                              ; preds = %originalBB, %0
  br label %originalBB
}

; Function Attrs: nounwind
declare dso_local i8* @bindtextdomain(i8*, i8*) #2

; Function Attrs: nounwind
declare dso_local i8* @textdomain(i8*) #2

; Function Attrs: nounwind
declare dso_local i32 @atexit(void ()*) #2

; Function Attrs: nounwind
declare dso_local i32 @getopt_long(i32, i8**, i8*, %struct.option*, i32*) #2

declare dso_local void @error(i32, i32, i8*, ...) #3

; Function Attrs: nounwind
declare dso_local i8* @getenv(i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @smack_new_label_from_self(i8**) #4 !dbg !867 {
  %2 = load i32, i32* @x.7
  %3 = load i32, i32* @y.8
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i8**, align 8
  store i8** %0, i8*** %10, align 8
  call void @llvm.dbg.declare(metadata i8*** %10, metadata !874, metadata !DIExpression()), !dbg !875
  %11 = load i32, i32* @x.7
  %12 = load i32, i32* @y.8
  %13 = sub i32 %11, 1
  %14 = mul i32 %11, %13
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = icmp slt i32 %12, 10
  %18 = or i1 %16, %17
  br i1 %18, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i64 -1, !dbg !876

originalBBalteredBB:                              ; preds = %originalBB, %1
  %19 = alloca i8**, align 8
  store i8** %0, i8*** %19, align 8
  call void @llvm.dbg.declare(metadata i8*** %19, metadata !877, metadata !DIExpression()), !dbg !875
  br label %originalBB
}

declare dso_local %struct.passwd* @getpwuid(i32) #3

; Function Attrs: nounwind readnone
declare dso_local i32* @__errno_location() #8

; Function Attrs: noinline nounwind optnone uwtable
define internal void @print_stuff(i8*) #4 !dbg !925 {
  %2 = load i32, i32* @x.9
  %3 = load i32, i32* @y.10
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i8*, align 8
  store i8* %0, i8** %10, align 8
  call void @llvm.dbg.declare(metadata i8** %10, metadata !926, metadata !DIExpression()), !dbg !927
  %11 = load i8, i8* @just_user, align 1, !dbg !928
  %12 = trunc i8 %11 to i1, !dbg !928
  %13 = load i32, i32* @x.9
  %14 = load i32, i32* @y.10
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %12, label %21, label %78, !dbg !930

21:                                               ; preds = %originalBBpart2
  %22 = load i32, i32* @x.9
  %23 = load i32, i32* @y.10
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %21, %originalBB1alteredBB
  %30 = load i8, i8* @use_real, align 1, !dbg !931
  %31 = trunc i8 %30 to i1, !dbg !931
  %32 = load i32, i32* @x.9
  %33 = load i32, i32* @y.10
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %31, label %40, label %42, !dbg !931

40:                                               ; preds = %originalBBpart24
  %41 = load i32, i32* @ruid, align 4, !dbg !932
  br label %60, !dbg !931

42:                                               ; preds = %originalBBpart24
  %43 = load i32, i32* @x.9
  %44 = load i32, i32* @y.10
  %45 = sub i32 %43, 1
  %46 = mul i32 %43, %45
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %48, %49
  br i1 %50, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %42, %originalBB6alteredBB
  %51 = load i32, i32* @euid, align 4, !dbg !933
  %52 = load i32, i32* @x.9
  %53 = load i32, i32* @y.10
  %54 = sub i32 %52, 1
  %55 = mul i32 %52, %54
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %53, 10
  %59 = or i1 %57, %58
  br i1 %59, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %60, !dbg !931

60:                                               ; preds = %originalBBpart28, %40
  %61 = phi i32 [ %41, %40 ], [ %51, %originalBBpart28 ], !dbg !931
  %62 = load i32, i32* @x.9
  %63 = load i32, i32* @y.10
  %64 = sub i32 %62, 1
  %65 = mul i32 %62, %64
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %63, 10
  %69 = or i1 %67, %68
  br i1 %69, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %60, %originalBB10alteredBB
  call void @print_user(i32 %61), !dbg !934
  %70 = load i32, i32* @x.9
  %71 = load i32, i32* @y.10
  %72 = sub i32 %70, 1
  %73 = mul i32 %70, %72
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %71, 10
  %77 = or i1 %75, %76
  br i1 %77, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %247, !dbg !934

78:                                               ; preds = %originalBBpart2
  %79 = load i8, i8* @just_group, align 1, !dbg !935
  %80 = trunc i8 %79 to i1, !dbg !935
  br i1 %80, label %81, label %148, !dbg !937

81:                                               ; preds = %78
  %82 = load i32, i32* @x.9
  %83 = load i32, i32* @y.10
  %84 = sub i32 %82, 1
  %85 = mul i32 %82, %84
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %83, 10
  %89 = or i1 %87, %88
  br i1 %89, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %81, %originalBB14alteredBB
  %90 = load i8, i8* @use_real, align 1, !dbg !938
  %91 = trunc i8 %90 to i1, !dbg !938
  %92 = load i32, i32* @x.9
  %93 = load i32, i32* @y.10
  %94 = sub i32 %92, 1
  %95 = mul i32 %92, %94
  %96 = urem i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %93, 10
  %99 = or i1 %97, %98
  br i1 %99, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %91, label %100, label %118, !dbg !938

100:                                              ; preds = %originalBBpart216
  %101 = load i32, i32* @x.9
  %102 = load i32, i32* @y.10
  %103 = sub i32 %101, 1
  %104 = mul i32 %101, %103
  %105 = urem i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %102, 10
  %108 = or i1 %106, %107
  br i1 %108, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %100, %originalBB18alteredBB
  %109 = load i32, i32* @rgid, align 4, !dbg !939
  %110 = load i32, i32* @x.9
  %111 = load i32, i32* @y.10
  %112 = sub i32 %110, 1
  %113 = mul i32 %110, %112
  %114 = urem i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %111, 10
  %117 = or i1 %115, %116
  br i1 %117, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %120, !dbg !938

118:                                              ; preds = %originalBBpart216
  %119 = load i32, i32* @egid, align 4, !dbg !940
  br label %120, !dbg !938

120:                                              ; preds = %118, %originalBBpart220
  %121 = phi i32 [ %109, %originalBBpart220 ], [ %119, %118 ], !dbg !938
  %122 = load i32, i32* @x.9
  %123 = load i32, i32* @y.10
  %124 = sub i32 %122, 1
  %125 = mul i32 %122, %124
  %126 = urem i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = icmp slt i32 %123, 10
  %129 = or i1 %127, %128
  br i1 %129, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %120, %originalBB22alteredBB
  %130 = load i8, i8* @use_name, align 1, !dbg !941
  %131 = trunc i8 %130 to i1, !dbg !941
  %132 = call zeroext i1 @print_group(i32 %121, i1 zeroext %131), !dbg !942
  %133 = zext i1 %132 to i32, !dbg !942
  %134 = load i8, i8* @ok, align 1, !dbg !943
  %135 = trunc i8 %134 to i1, !dbg !943
  %136 = zext i1 %135 to i32, !dbg !943
  %137 = and i32 %136, %133, !dbg !943
  %138 = icmp ne i32 %137, 0, !dbg !943
  %139 = zext i1 %138 to i8, !dbg !943
  store i8 %139, i8* @ok, align 1, !dbg !943
  %140 = load i32, i32* @x.9
  %141 = load i32, i32* @y.10
  %142 = sub i32 %140, 1
  %143 = mul i32 %140, %142
  %144 = urem i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = icmp slt i32 %141, 10
  %147 = or i1 %145, %146
  br i1 %147, label %originalBBpart227, label %originalBB22alteredBB

originalBBpart227:                                ; preds = %originalBB22
  br label %246, !dbg !944

148:                                              ; preds = %78
  %149 = load i32, i32* @x.9
  %150 = load i32, i32* @y.10
  %151 = sub i32 %149, 1
  %152 = mul i32 %149, %151
  %153 = urem i32 %152, 2
  %154 = icmp eq i32 %153, 0
  %155 = icmp slt i32 %150, 10
  %156 = or i1 %154, %155
  br i1 %156, label %originalBB29, label %originalBB29alteredBB

originalBB29:                                     ; preds = %148, %originalBB29alteredBB
  %157 = load i8, i8* @just_group_list, align 1, !dbg !945
  %158 = trunc i8 %157 to i1, !dbg !945
  %159 = load i32, i32* @x.9
  %160 = load i32, i32* @y.10
  %161 = sub i32 %159, 1
  %162 = mul i32 %159, %161
  %163 = urem i32 %162, 2
  %164 = icmp eq i32 %163, 0
  %165 = icmp slt i32 %160, 10
  %166 = or i1 %164, %165
  br i1 %166, label %originalBBpart231, label %originalBB29alteredBB

originalBBpart231:                                ; preds = %originalBB29
  br i1 %158, label %167, label %187, !dbg !947

167:                                              ; preds = %originalBBpart231
  %168 = load i8*, i8** %10, align 8, !dbg !948
  %169 = load i32, i32* @ruid, align 4, !dbg !949
  %170 = load i32, i32* @rgid, align 4, !dbg !950
  %171 = load i32, i32* @egid, align 4, !dbg !951
  %172 = load i8, i8* @use_name, align 1, !dbg !952
  %173 = trunc i8 %172 to i1, !dbg !952
  %174 = load i8, i8* @opt_zero, align 1, !dbg !953
  %175 = trunc i8 %174 to i1, !dbg !953
  %176 = zext i1 %175 to i64, !dbg !953
  %177 = select i1 %175, i32 0, i32 32, !dbg !953
  %178 = trunc i32 %177 to i8, !dbg !953
  %179 = call zeroext i1 @print_group_list(i8* %168, i32 %169, i32 %170, i32 %171, i1 zeroext %173, i8 signext %178), !dbg !954
  %180 = zext i1 %179 to i32, !dbg !954
  %181 = load i8, i8* @ok, align 1, !dbg !955
  %182 = trunc i8 %181 to i1, !dbg !955
  %183 = zext i1 %182 to i32, !dbg !955
  %184 = and i32 %183, %180, !dbg !955
  %185 = icmp ne i32 %184, 0, !dbg !955
  %186 = zext i1 %185 to i8, !dbg !955
  store i8 %186, i8* @ok, align 1, !dbg !955
  br label %245, !dbg !956

187:                                              ; preds = %originalBBpart231
  %188 = load i8, i8* @just_context, align 1, !dbg !957
  %189 = trunc i8 %188 to i1, !dbg !957
  br i1 %189, label %190, label %210, !dbg !959

190:                                              ; preds = %187
  %191 = load i32, i32* @x.9
  %192 = load i32, i32* @y.10
  %193 = sub i32 %191, 1
  %194 = mul i32 %191, %193
  %195 = urem i32 %194, 2
  %196 = icmp eq i32 %195, 0
  %197 = icmp slt i32 %192, 10
  %198 = or i1 %196, %197
  br i1 %198, label %originalBB33, label %originalBB33alteredBB

originalBB33:                                     ; preds = %190, %originalBB33alteredBB
  %199 = load i8*, i8** @context, align 8, !dbg !960
  %200 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !960
  %201 = call i32 @fputs_unlocked(i8* %199, %struct._IO_FILE* %200), !dbg !960
  %202 = load i32, i32* @x.9
  %203 = load i32, i32* @y.10
  %204 = sub i32 %202, 1
  %205 = mul i32 %202, %204
  %206 = urem i32 %205, 2
  %207 = icmp eq i32 %206, 0
  %208 = icmp slt i32 %203, 10
  %209 = or i1 %207, %208
  br i1 %209, label %originalBBpart235, label %originalBB33alteredBB

originalBBpart235:                                ; preds = %originalBB33
  br label %228, !dbg !960

210:                                              ; preds = %187
  %211 = load i32, i32* @x.9
  %212 = load i32, i32* @y.10
  %213 = sub i32 %211, 1
  %214 = mul i32 %211, %213
  %215 = urem i32 %214, 2
  %216 = icmp eq i32 %215, 0
  %217 = icmp slt i32 %212, 10
  %218 = or i1 %216, %217
  br i1 %218, label %originalBB37, label %originalBB37alteredBB

originalBB37:                                     ; preds = %210, %originalBB37alteredBB
  %219 = load i8*, i8** %10, align 8, !dbg !961
  call void @print_full_info(i8* %219), !dbg !962
  %220 = load i32, i32* @x.9
  %221 = load i32, i32* @y.10
  %222 = sub i32 %220, 1
  %223 = mul i32 %220, %222
  %224 = urem i32 %223, 2
  %225 = icmp eq i32 %224, 0
  %226 = icmp slt i32 %221, 10
  %227 = or i1 %225, %226
  br i1 %227, label %originalBBpart239, label %originalBB37alteredBB

originalBBpart239:                                ; preds = %originalBB37
  br label %228

228:                                              ; preds = %originalBBpart239, %originalBBpart235
  %229 = load i32, i32* @x.9
  %230 = load i32, i32* @y.10
  %231 = sub i32 %229, 1
  %232 = mul i32 %229, %231
  %233 = urem i32 %232, 2
  %234 = icmp eq i32 %233, 0
  %235 = icmp slt i32 %230, 10
  %236 = or i1 %234, %235
  br i1 %236, label %originalBB41, label %originalBB41alteredBB

originalBB41:                                     ; preds = %228, %originalBB41alteredBB
  %237 = load i32, i32* @x.9
  %238 = load i32, i32* @y.10
  %239 = sub i32 %237, 1
  %240 = mul i32 %237, %239
  %241 = urem i32 %240, 2
  %242 = icmp eq i32 %241, 0
  %243 = icmp slt i32 %238, 10
  %244 = or i1 %242, %243
  br i1 %244, label %originalBBpart243, label %originalBB41alteredBB

originalBBpart243:                                ; preds = %originalBB41
  br label %245

245:                                              ; preds = %originalBBpart243, %167
  br label %246

246:                                              ; preds = %245, %originalBBpart227
  br label %247

247:                                              ; preds = %246, %originalBBpart212
  %248 = load i8, i8* @opt_zero, align 1, !dbg !963
  %249 = trunc i8 %248 to i1, !dbg !963
  br i1 %249, label %250, label %275, !dbg !965

250:                                              ; preds = %247
  %251 = load i8, i8* @just_group_list, align 1, !dbg !966
  %252 = trunc i8 %251 to i1, !dbg !966
  br i1 %252, label %253, label %275, !dbg !967

253:                                              ; preds = %250
  %254 = load i32, i32* @x.9
  %255 = load i32, i32* @y.10
  %256 = sub i32 %254, 1
  %257 = mul i32 %254, %256
  %258 = urem i32 %257, 2
  %259 = icmp eq i32 %258, 0
  %260 = icmp slt i32 %255, 10
  %261 = or i1 %259, %260
  br i1 %261, label %originalBB45, label %originalBB45alteredBB

originalBB45:                                     ; preds = %253, %originalBB45alteredBB
  %262 = load i8, i8* @multiple_users, align 1, !dbg !968
  %263 = trunc i8 %262 to i1, !dbg !968
  %264 = load i32, i32* @x.9
  %265 = load i32, i32* @y.10
  %266 = sub i32 %264, 1
  %267 = mul i32 %264, %266
  %268 = urem i32 %267, 2
  %269 = icmp eq i32 %268, 0
  %270 = icmp slt i32 %265, 10
  %271 = or i1 %269, %270
  br i1 %271, label %originalBBpart247, label %originalBB45alteredBB

originalBBpart247:                                ; preds = %originalBB45
  br i1 %263, label %272, label %275, !dbg !969

272:                                              ; preds = %originalBBpart247
  %273 = call i32 @putchar_unlocked(i32 0), !dbg !970
  %274 = call i32 @putchar_unlocked(i32 0), !dbg !972
  br label %281, !dbg !973

275:                                              ; preds = %originalBBpart247, %250, %247
  %276 = load i8, i8* @opt_zero, align 1, !dbg !974
  %277 = trunc i8 %276 to i1, !dbg !974
  %278 = zext i1 %277 to i64, !dbg !974
  %279 = select i1 %277, i32 0, i32 10, !dbg !974
  %280 = call i32 @putchar_unlocked(i32 %279), !dbg !974
  br label %281

281:                                              ; preds = %275, %272
  %282 = load i32, i32* @x.9
  %283 = load i32, i32* @y.10
  %284 = sub i32 %282, 1
  %285 = mul i32 %282, %284
  %286 = urem i32 %285, 2
  %287 = icmp eq i32 %286, 0
  %288 = icmp slt i32 %283, 10
  %289 = or i1 %287, %288
  br i1 %289, label %originalBB49, label %originalBB49alteredBB

originalBB49:                                     ; preds = %281, %originalBB49alteredBB
  %290 = load i32, i32* @x.9
  %291 = load i32, i32* @y.10
  %292 = sub i32 %290, 1
  %293 = mul i32 %290, %292
  %294 = urem i32 %293, 2
  %295 = icmp eq i32 %294, 0
  %296 = icmp slt i32 %291, 10
  %297 = or i1 %295, %296
  br i1 %297, label %originalBBpart251, label %originalBB49alteredBB

originalBBpart251:                                ; preds = %originalBB49
  ret void, !dbg !976

originalBBalteredBB:                              ; preds = %originalBB, %1
  %298 = alloca i8*, align 8
  store i8* %0, i8** %298, align 8
  call void @llvm.dbg.declare(metadata i8** %298, metadata !977, metadata !DIExpression()), !dbg !927
  %299 = load i8, i8* @just_user, align 1, !dbg !928
  %300 = trunc i8 %299 to i1, !dbg !928
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %21
  %301 = load i8, i8* @use_real, align 1, !dbg !931
  %302 = trunc i8 %301 to i1, !dbg !931
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %42
  %303 = load i32, i32* @euid, align 4, !dbg !933
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %60
  call void @print_user(i32 %61), !dbg !934
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %81
  %304 = load i8, i8* @use_real, align 1, !dbg !938
  %305 = trunc i8 %304 to i1, !dbg !938
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %100
  %306 = load i32, i32* @rgid, align 4, !dbg !939
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %120
  %307 = load i8, i8* @use_name, align 1, !dbg !941
  %308 = trunc i8 %307 to i1, !dbg !941
  %309 = call zeroext i1 @print_group(i32 %121, i1 zeroext %308), !dbg !942
  %310 = zext i1 %309 to i32, !dbg !942
  %311 = load i8, i8* @ok, align 1, !dbg !943
  %312 = trunc i8 %311 to i1, !dbg !943
  %313 = zext i1 %312 to i32, !dbg !943
  %_ = sub i32 0, %313
  %gen = add i32 %_, %310
  %_23 = shl i32 %313, %310
  %_24 = sub i32 0, %313
  %gen25 = add i32 %_24, %310
  %314 = and i32 %313, %310, !dbg !943
  %315 = icmp ne i32 %314, 0, !dbg !943
  %316 = zext i1 %315 to i8, !dbg !943
  store i8 %316, i8* @ok, align 1, !dbg !943
  br label %originalBB22

originalBB29alteredBB:                            ; preds = %originalBB29, %148
  %317 = load i8, i8* @just_group_list, align 1, !dbg !945
  %318 = trunc i8 %317 to i1, !dbg !945
  br label %originalBB29

originalBB33alteredBB:                            ; preds = %originalBB33, %190
  %319 = load i8*, i8** @context, align 8, !dbg !960
  %320 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !960
  %321 = call i32 @fputs_unlocked(i8* %319, %struct._IO_FILE* %320), !dbg !960
  br label %originalBB33

originalBB37alteredBB:                            ; preds = %originalBB37, %210
  %322 = load i8*, i8** %10, align 8, !dbg !961
  call void @print_full_info(i8* %322), !dbg !962
  br label %originalBB37

originalBB41alteredBB:                            ; preds = %originalBB41, %228
  br label %originalBB41

originalBB45alteredBB:                            ; preds = %originalBB45, %253
  %323 = load i8, i8* @multiple_users, align 1, !dbg !968
  %324 = trunc i8 %323 to i1, !dbg !968
  br label %originalBB45

originalBB49alteredBB:                            ; preds = %originalBB49, %281
  br label %originalBB49
}

; Function Attrs: nounwind
declare dso_local void @free(i8*) #2

; Function Attrs: nounwind
declare dso_local i32 @geteuid() #2

; Function Attrs: nounwind
declare dso_local i32 @getuid() #2

; Function Attrs: nounwind
declare dso_local i32 @getegid() #2

; Function Attrs: nounwind
declare dso_local i32 @getgid() #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @print_user(i32) #4 !dbg !1025 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.passwd*, align 8
  %4 = alloca i8*, align 8
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !1028, metadata !DIExpression()), !dbg !1029
  call void @llvm.dbg.declare(metadata %struct.passwd** %3, metadata !1030, metadata !DIExpression()), !dbg !1031
  store %struct.passwd* null, %struct.passwd** %3, align 8, !dbg !1031
  %5 = load i8, i8* @use_name, align 1, !dbg !1032
  %6 = trunc i8 %5 to i1, !dbg !1032
  br i1 %6, label %7, label %22, !dbg !1034

7:                                                ; preds = %1
  %8 = load i32, i32* %2, align 4, !dbg !1035
  %9 = call %struct.passwd* @getpwuid(i32 %8), !dbg !1037
  store %struct.passwd* %9, %struct.passwd** %3, align 8, !dbg !1038
  %10 = load %struct.passwd*, %struct.passwd** %3, align 8, !dbg !1039
  %11 = icmp eq %struct.passwd* %10, null, !dbg !1041
  br i1 %11, label %12, label %21, !dbg !1042

12:                                               ; preds = %7
  %13 = call i8* @gettext(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.51, i64 0, i64 0)) #10, !dbg !1043
  %14 = call i8* @uidtostr_ptr(i32* %2), !dbg !1045
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %13, i8* %14), !dbg !1046
  %15 = load i8, i8* @ok, align 1, !dbg !1047
  %16 = trunc i8 %15 to i1, !dbg !1047
  %17 = zext i1 %16 to i32, !dbg !1047
  %18 = and i32 %17, 0, !dbg !1047
  %19 = icmp ne i32 %18, 0, !dbg !1047
  %20 = zext i1 %19 to i8, !dbg !1047
  store i8 %20, i8* @ok, align 1, !dbg !1047
  br label %21, !dbg !1048

21:                                               ; preds = %12, %7
  br label %22, !dbg !1049

22:                                               ; preds = %21, %1
  call void @llvm.dbg.declare(metadata i8** %4, metadata !1050, metadata !DIExpression()), !dbg !1051
  %23 = load i32, i32* @x.11
  %24 = load i32, i32* @y.12
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %22, %originalBBalteredBB
  %31 = load %struct.passwd*, %struct.passwd** %3, align 8, !dbg !1052
  %32 = icmp ne %struct.passwd* %31, null, !dbg !1052
  %33 = load i32, i32* @x.11
  %34 = load i32, i32* @y.12
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %32, label %41, label %61, !dbg !1052

41:                                               ; preds = %originalBBpart2
  %42 = load i32, i32* @x.11
  %43 = load i32, i32* @y.12
  %44 = sub i32 %42, 1
  %45 = mul i32 %42, %44
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %47, %48
  br i1 %49, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %41, %originalBB1alteredBB
  %50 = load %struct.passwd*, %struct.passwd** %3, align 8, !dbg !1053
  %51 = getelementptr inbounds %struct.passwd, %struct.passwd* %50, i32 0, i32 0, !dbg !1054
  %52 = load i8*, i8** %51, align 8, !dbg !1054
  %53 = load i32, i32* @x.11
  %54 = load i32, i32* @y.12
  %55 = sub i32 %53, 1
  %56 = mul i32 %53, %55
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %54, 10
  %60 = or i1 %58, %59
  br i1 %60, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %63, !dbg !1052

61:                                               ; preds = %originalBBpart2
  %62 = call i8* @uidtostr_ptr(i32* %2), !dbg !1055
  br label %63, !dbg !1052

63:                                               ; preds = %61, %originalBBpart24
  %64 = phi i8* [ %52, %originalBBpart24 ], [ %62, %61 ], !dbg !1052
  %65 = load i32, i32* @x.11
  %66 = load i32, i32* @y.12
  %67 = sub i32 %65, 1
  %68 = mul i32 %65, %67
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %66, 10
  %72 = or i1 %70, %71
  br i1 %72, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %63, %originalBB6alteredBB
  store i8* %64, i8** %4, align 8, !dbg !1051
  %73 = load i8*, i8** %4, align 8, !dbg !1056
  %74 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1056
  %75 = call i32 @fputs_unlocked(i8* %73, %struct._IO_FILE* %74), !dbg !1056
  %76 = load i32, i32* @x.11
  %77 = load i32, i32* @y.12
  %78 = sub i32 %76, 1
  %79 = mul i32 %76, %78
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %77, 10
  %83 = or i1 %81, %82
  br i1 %83, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  ret void, !dbg !1057

originalBBalteredBB:                              ; preds = %originalBB, %22
  %84 = load %struct.passwd*, %struct.passwd** %3, align 8, !dbg !1052
  %85 = icmp ne %struct.passwd* %84, null, !dbg !1052
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %41
  %86 = load %struct.passwd*, %struct.passwd** %3, align 8, !dbg !1053
  %87 = getelementptr inbounds %struct.passwd, %struct.passwd* %86, i32 0, i32 0, !dbg !1054
  %88 = load i8*, i8** %87, align 8, !dbg !1054
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %63
  store i8* %64, i8** %4, align 8, !dbg !1051
  %89 = load i8*, i8** %4, align 8, !dbg !1056
  %90 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1056
  %91 = call i32 @fputs_unlocked(i8* %89, %struct._IO_FILE* %90), !dbg !1056
  br label %originalBB6
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @print_full_info(i8*) #4 !dbg !1058 {
  %2 = load i32, i32* @x.13
  %3 = load i32, i32* @y.14
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i8*, align 8
  %11 = alloca %struct.passwd*, align 8
  %12 = alloca %struct.group*, align 8
  %13 = alloca i32*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  store i8* %0, i8** %10, align 8
  call void @llvm.dbg.declare(metadata i8** %10, metadata !1059, metadata !DIExpression()), !dbg !1060
  call void @llvm.dbg.declare(metadata %struct.passwd** %11, metadata !1061, metadata !DIExpression()), !dbg !1062
  call void @llvm.dbg.declare(metadata %struct.group** %12, metadata !1063, metadata !DIExpression()), !dbg !1072
  %17 = call i8* @gettext(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.52, i64 0, i64 0)) #10, !dbg !1073
  %18 = call i8* @uidtostr_ptr(i32* @ruid), !dbg !1074
  %19 = call i32 (i8*, ...) @printf(i8* %17, i8* %18), !dbg !1075
  %20 = load i32, i32* @ruid, align 4, !dbg !1076
  %21 = call %struct.passwd* @getpwuid(i32 %20), !dbg !1077
  store %struct.passwd* %21, %struct.passwd** %11, align 8, !dbg !1078
  %22 = load %struct.passwd*, %struct.passwd** %11, align 8, !dbg !1079
  %23 = icmp ne %struct.passwd* %22, null, !dbg !1079
  %24 = load i32, i32* @x.13
  %25 = load i32, i32* @y.14
  %26 = sub i32 %24, 1
  %27 = mul i32 %24, %26
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %29, %30
  br i1 %31, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %23, label %32, label %53, !dbg !1081

32:                                               ; preds = %originalBBpart2
  %33 = load i32, i32* @x.13
  %34 = load i32, i32* @y.14
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %32, %originalBB1alteredBB
  %41 = load %struct.passwd*, %struct.passwd** %11, align 8, !dbg !1082
  %42 = getelementptr inbounds %struct.passwd, %struct.passwd* %41, i32 0, i32 0, !dbg !1083
  %43 = load i8*, i8** %42, align 8, !dbg !1083
  %44 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.53, i64 0, i64 0), i8* %43), !dbg !1084
  %45 = load i32, i32* @x.13
  %46 = load i32, i32* @y.14
  %47 = sub i32 %45, 1
  %48 = mul i32 %45, %47
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %50, %51
  br i1 %52, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %53, !dbg !1084

53:                                               ; preds = %originalBBpart24, %originalBBpart2
  %54 = load i32, i32* @x.13
  %55 = load i32, i32* @y.14
  %56 = sub i32 %54, 1
  %57 = mul i32 %54, %56
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %55, 10
  %61 = or i1 %59, %60
  br i1 %61, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %53, %originalBB6alteredBB
  %62 = call i8* @gettext(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.54, i64 0, i64 0)) #10, !dbg !1085
  %63 = call i8* @gidtostr_ptr(i32* @rgid), !dbg !1086
  %64 = call i32 (i8*, ...) @printf(i8* %62, i8* %63), !dbg !1087
  %65 = load i32, i32* @rgid, align 4, !dbg !1088
  %66 = call %struct.group* @getgrgid(i32 %65), !dbg !1089
  store %struct.group* %66, %struct.group** %12, align 8, !dbg !1090
  %67 = load %struct.group*, %struct.group** %12, align 8, !dbg !1091
  %68 = icmp ne %struct.group* %67, null, !dbg !1091
  %69 = load i32, i32* @x.13
  %70 = load i32, i32* @y.14
  %71 = sub i32 %69, 1
  %72 = mul i32 %69, %71
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %74, %75
  br i1 %76, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %68, label %77, label %82, !dbg !1093

77:                                               ; preds = %originalBBpart28
  %78 = load %struct.group*, %struct.group** %12, align 8, !dbg !1094
  %79 = getelementptr inbounds %struct.group, %struct.group* %78, i32 0, i32 0, !dbg !1095
  %80 = load i8*, i8** %79, align 8, !dbg !1095
  %81 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.53, i64 0, i64 0), i8* %80), !dbg !1096
  br label %82, !dbg !1096

82:                                               ; preds = %77, %originalBBpart28
  %83 = load i32, i32* @euid, align 4, !dbg !1097
  %84 = load i32, i32* @ruid, align 4, !dbg !1099
  %85 = icmp ne i32 %83, %84, !dbg !1100
  br i1 %85, label %86, label %132, !dbg !1101

86:                                               ; preds = %82
  %87 = call i8* @gettext(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.55, i64 0, i64 0)) #10, !dbg !1102
  %88 = call i8* @uidtostr_ptr(i32* @euid), !dbg !1104
  %89 = call i32 (i8*, ...) @printf(i8* %87, i8* %88), !dbg !1105
  %90 = load i32, i32* @euid, align 4, !dbg !1106
  %91 = call %struct.passwd* @getpwuid(i32 %90), !dbg !1107
  store %struct.passwd* %91, %struct.passwd** %11, align 8, !dbg !1108
  %92 = load %struct.passwd*, %struct.passwd** %11, align 8, !dbg !1109
  %93 = icmp ne %struct.passwd* %92, null, !dbg !1109
  br i1 %93, label %94, label %115, !dbg !1111

94:                                               ; preds = %86
  %95 = load i32, i32* @x.13
  %96 = load i32, i32* @y.14
  %97 = sub i32 %95, 1
  %98 = mul i32 %95, %97
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %96, 10
  %102 = or i1 %100, %101
  br i1 %102, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %94, %originalBB10alteredBB
  %103 = load %struct.passwd*, %struct.passwd** %11, align 8, !dbg !1112
  %104 = getelementptr inbounds %struct.passwd, %struct.passwd* %103, i32 0, i32 0, !dbg !1113
  %105 = load i8*, i8** %104, align 8, !dbg !1113
  %106 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.53, i64 0, i64 0), i8* %105), !dbg !1114
  %107 = load i32, i32* @x.13
  %108 = load i32, i32* @y.14
  %109 = sub i32 %107, 1
  %110 = mul i32 %107, %109
  %111 = urem i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = icmp slt i32 %108, 10
  %114 = or i1 %112, %113
  br i1 %114, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %115, !dbg !1114

115:                                              ; preds = %originalBBpart212, %86
  %116 = load i32, i32* @x.13
  %117 = load i32, i32* @y.14
  %118 = sub i32 %116, 1
  %119 = mul i32 %116, %118
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %117, 10
  %123 = or i1 %121, %122
  br i1 %123, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %115, %originalBB14alteredBB
  %124 = load i32, i32* @x.13
  %125 = load i32, i32* @y.14
  %126 = sub i32 %124, 1
  %127 = mul i32 %124, %126
  %128 = urem i32 %127, 2
  %129 = icmp eq i32 %128, 0
  %130 = icmp slt i32 %125, 10
  %131 = or i1 %129, %130
  br i1 %131, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %132, !dbg !1115

132:                                              ; preds = %originalBBpart216, %82
  %133 = load i32, i32* @egid, align 4, !dbg !1116
  %134 = load i32, i32* @rgid, align 4, !dbg !1118
  %135 = icmp ne i32 %133, %134, !dbg !1119
  br i1 %135, label %136, label %182, !dbg !1120

136:                                              ; preds = %132
  %137 = call i8* @gettext(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.56, i64 0, i64 0)) #10, !dbg !1121
  %138 = call i8* @gidtostr_ptr(i32* @egid), !dbg !1123
  %139 = call i32 (i8*, ...) @printf(i8* %137, i8* %138), !dbg !1124
  %140 = load i32, i32* @egid, align 4, !dbg !1125
  %141 = call %struct.group* @getgrgid(i32 %140), !dbg !1126
  store %struct.group* %141, %struct.group** %12, align 8, !dbg !1127
  %142 = load %struct.group*, %struct.group** %12, align 8, !dbg !1128
  %143 = icmp ne %struct.group* %142, null, !dbg !1128
  br i1 %143, label %144, label %165, !dbg !1130

144:                                              ; preds = %136
  %145 = load i32, i32* @x.13
  %146 = load i32, i32* @y.14
  %147 = sub i32 %145, 1
  %148 = mul i32 %145, %147
  %149 = urem i32 %148, 2
  %150 = icmp eq i32 %149, 0
  %151 = icmp slt i32 %146, 10
  %152 = or i1 %150, %151
  br i1 %152, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %144, %originalBB18alteredBB
  %153 = load %struct.group*, %struct.group** %12, align 8, !dbg !1131
  %154 = getelementptr inbounds %struct.group, %struct.group* %153, i32 0, i32 0, !dbg !1132
  %155 = load i8*, i8** %154, align 8, !dbg !1132
  %156 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.53, i64 0, i64 0), i8* %155), !dbg !1133
  %157 = load i32, i32* @x.13
  %158 = load i32, i32* @y.14
  %159 = sub i32 %157, 1
  %160 = mul i32 %157, %159
  %161 = urem i32 %160, 2
  %162 = icmp eq i32 %161, 0
  %163 = icmp slt i32 %158, 10
  %164 = or i1 %162, %163
  br i1 %164, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %165, !dbg !1133

165:                                              ; preds = %originalBBpart220, %136
  %166 = load i32, i32* @x.13
  %167 = load i32, i32* @y.14
  %168 = sub i32 %166, 1
  %169 = mul i32 %166, %168
  %170 = urem i32 %169, 2
  %171 = icmp eq i32 %170, 0
  %172 = icmp slt i32 %167, 10
  %173 = or i1 %171, %172
  br i1 %173, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %165, %originalBB22alteredBB
  %174 = load i32, i32* @x.13
  %175 = load i32, i32* @y.14
  %176 = sub i32 %174, 1
  %177 = mul i32 %174, %176
  %178 = urem i32 %177, 2
  %179 = icmp eq i32 %178, 0
  %180 = icmp slt i32 %175, 10
  %181 = or i1 %179, %180
  br i1 %181, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br label %182, !dbg !1134

182:                                              ; preds = %originalBBpart224, %132
  call void @llvm.dbg.declare(metadata i32** %13, metadata !1135, metadata !DIExpression()), !dbg !1137
  call void @llvm.dbg.declare(metadata i32* %14, metadata !1138, metadata !DIExpression()), !dbg !1139
  %183 = load i32, i32* @x.13
  %184 = load i32, i32* @y.14
  %185 = sub i32 %183, 1
  %186 = mul i32 %183, %185
  %187 = urem i32 %186, 2
  %188 = icmp eq i32 %187, 0
  %189 = icmp slt i32 %184, 10
  %190 = or i1 %188, %189
  br i1 %190, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %182, %originalBB26alteredBB
  %191 = load i8*, i8** %10, align 8, !dbg !1140
  %192 = icmp ne i8* %191, null, !dbg !1140
  %193 = load i32, i32* @x.13
  %194 = load i32, i32* @y.14
  %195 = sub i32 %193, 1
  %196 = mul i32 %193, %195
  %197 = urem i32 %196, 2
  %198 = icmp eq i32 %197, 0
  %199 = icmp slt i32 %194, 10
  %200 = or i1 %198, %199
  br i1 %200, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br i1 %192, label %201, label %243, !dbg !1142

201:                                              ; preds = %originalBBpart228
  %202 = load %struct.passwd*, %struct.passwd** %11, align 8, !dbg !1143
  %203 = icmp ne %struct.passwd* %202, null, !dbg !1143
  br i1 %203, label %204, label %224, !dbg !1143

204:                                              ; preds = %201
  %205 = load i32, i32* @x.13
  %206 = load i32, i32* @y.14
  %207 = sub i32 %205, 1
  %208 = mul i32 %205, %207
  %209 = urem i32 %208, 2
  %210 = icmp eq i32 %209, 0
  %211 = icmp slt i32 %206, 10
  %212 = or i1 %210, %211
  br i1 %212, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %204, %originalBB30alteredBB
  %213 = load %struct.passwd*, %struct.passwd** %11, align 8, !dbg !1144
  %214 = getelementptr inbounds %struct.passwd, %struct.passwd* %213, i32 0, i32 3, !dbg !1145
  %215 = load i32, i32* %214, align 4, !dbg !1145
  %216 = load i32, i32* @x.13
  %217 = load i32, i32* @y.14
  %218 = sub i32 %216, 1
  %219 = mul i32 %216, %218
  %220 = urem i32 %219, 2
  %221 = icmp eq i32 %220, 0
  %222 = icmp slt i32 %217, 10
  %223 = or i1 %221, %222
  br i1 %223, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br label %241, !dbg !1143

224:                                              ; preds = %201
  %225 = load i32, i32* @x.13
  %226 = load i32, i32* @y.14
  %227 = sub i32 %225, 1
  %228 = mul i32 %225, %227
  %229 = urem i32 %228, 2
  %230 = icmp eq i32 %229, 0
  %231 = icmp slt i32 %226, 10
  %232 = or i1 %230, %231
  br i1 %232, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %224, %originalBB34alteredBB
  %233 = load i32, i32* @x.13
  %234 = load i32, i32* @y.14
  %235 = sub i32 %233, 1
  %236 = mul i32 %233, %235
  %237 = urem i32 %236, 2
  %238 = icmp eq i32 %237, 0
  %239 = icmp slt i32 %234, 10
  %240 = or i1 %238, %239
  br i1 %240, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  br label %241, !dbg !1143

241:                                              ; preds = %originalBBpart236, %originalBBpart232
  %242 = phi i32 [ %215, %originalBBpart232 ], [ -1, %originalBBpart236 ], !dbg !1143
  store i32 %242, i32* %14, align 4, !dbg !1146
  br label %261, !dbg !1147

243:                                              ; preds = %originalBBpart228
  %244 = load i32, i32* @x.13
  %245 = load i32, i32* @y.14
  %246 = sub i32 %244, 1
  %247 = mul i32 %244, %246
  %248 = urem i32 %247, 2
  %249 = icmp eq i32 %248, 0
  %250 = icmp slt i32 %245, 10
  %251 = or i1 %249, %250
  br i1 %251, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %243, %originalBB38alteredBB
  %252 = load i32, i32* @egid, align 4, !dbg !1148
  store i32 %252, i32* %14, align 4, !dbg !1149
  %253 = load i32, i32* @x.13
  %254 = load i32, i32* @y.14
  %255 = sub i32 %253, 1
  %256 = mul i32 %253, %255
  %257 = urem i32 %256, 2
  %258 = icmp eq i32 %257, 0
  %259 = icmp slt i32 %254, 10
  %260 = or i1 %258, %259
  br i1 %260, label %originalBBpart240, label %originalBB38alteredBB

originalBBpart240:                                ; preds = %originalBB38
  br label %261

261:                                              ; preds = %originalBBpart240, %241
  call void @llvm.dbg.declare(metadata i32* %15, metadata !1150, metadata !DIExpression()), !dbg !1151
  %262 = load i8*, i8** %10, align 8, !dbg !1152
  %263 = load i32, i32* %14, align 4, !dbg !1153
  %264 = call i32 @xgetgroups(i8* %262, i32 %263, i32** %13), !dbg !1154
  store i32 %264, i32* %15, align 4, !dbg !1151
  %265 = load i32, i32* %15, align 4, !dbg !1155
  %266 = icmp slt i32 %265, 0, !dbg !1157
  br i1 %266, label %267, label %319, !dbg !1158

267:                                              ; preds = %261
  %268 = load i8*, i8** %10, align 8, !dbg !1159
  %269 = icmp ne i8* %268, null, !dbg !1159
  br i1 %269, label %270, label %292, !dbg !1162

270:                                              ; preds = %267
  %271 = load i32, i32* @x.13
  %272 = load i32, i32* @y.14
  %273 = sub i32 %271, 1
  %274 = mul i32 %271, %273
  %275 = urem i32 %274, 2
  %276 = icmp eq i32 %275, 0
  %277 = icmp slt i32 %272, 10
  %278 = or i1 %276, %277
  br i1 %278, label %originalBB42, label %originalBB42alteredBB

originalBB42:                                     ; preds = %270, %originalBB42alteredBB
  %279 = call i32* @__errno_location() #15, !dbg !1163
  %280 = load i32, i32* %279, align 4, !dbg !1163
  %281 = call i8* @gettext(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.57, i64 0, i64 0)) #10, !dbg !1164
  %282 = load i8*, i8** %10, align 8, !dbg !1165
  %283 = call i8* @quote(i8* %282), !dbg !1166
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %280, i8* %281, i8* %283), !dbg !1167
  %284 = load i32, i32* @x.13
  %285 = load i32, i32* @y.14
  %286 = sub i32 %284, 1
  %287 = mul i32 %284, %286
  %288 = urem i32 %287, 2
  %289 = icmp eq i32 %288, 0
  %290 = icmp slt i32 %285, 10
  %291 = or i1 %289, %290
  br i1 %291, label %originalBBpart244, label %originalBB42alteredBB

originalBBpart244:                                ; preds = %originalBB42
  br label %296, !dbg !1167

292:                                              ; preds = %267
  %293 = call i32* @__errno_location() #15, !dbg !1168
  %294 = load i32, i32* %293, align 4, !dbg !1168
  %295 = call i8* @gettext(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.58, i64 0, i64 0)) #10, !dbg !1169
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %294, i8* %295), !dbg !1170
  br label %296

296:                                              ; preds = %292, %originalBBpart244
  %297 = load i32, i32* @x.13
  %298 = load i32, i32* @y.14
  %299 = sub i32 %297, 1
  %300 = mul i32 %297, %299
  %301 = urem i32 %300, 2
  %302 = icmp eq i32 %301, 0
  %303 = icmp slt i32 %298, 10
  %304 = or i1 %302, %303
  br i1 %304, label %originalBB46, label %originalBB46alteredBB

originalBB46:                                     ; preds = %296, %originalBB46alteredBB
  %305 = load i8, i8* @ok, align 1, !dbg !1171
  %306 = trunc i8 %305 to i1, !dbg !1171
  %307 = zext i1 %306 to i32, !dbg !1171
  %308 = and i32 %307, 0, !dbg !1171
  %309 = icmp ne i32 %308, 0, !dbg !1171
  %310 = zext i1 %309 to i8, !dbg !1171
  store i8 %310, i8* @ok, align 1, !dbg !1171
  %311 = load i32, i32* @x.13
  %312 = load i32, i32* @y.14
  %313 = sub i32 %311, 1
  %314 = mul i32 %311, %313
  %315 = urem i32 %314, 2
  %316 = icmp eq i32 %315, 0
  %317 = icmp slt i32 %312, 10
  %318 = or i1 %316, %317
  br i1 %318, label %originalBBpart263, label %originalBB46alteredBB

originalBBpart263:                                ; preds = %originalBB46
  br label %466, !dbg !1172

319:                                              ; preds = %261
  %320 = load i32, i32* %15, align 4, !dbg !1173
  %321 = icmp sgt i32 %320, 0, !dbg !1175
  br i1 %321, label %322, label %342, !dbg !1176

322:                                              ; preds = %319
  %323 = load i32, i32* @x.13
  %324 = load i32, i32* @y.14
  %325 = sub i32 %323, 1
  %326 = mul i32 %323, %325
  %327 = urem i32 %326, 2
  %328 = icmp eq i32 %327, 0
  %329 = icmp slt i32 %324, 10
  %330 = or i1 %328, %329
  br i1 %330, label %originalBB65, label %originalBB65alteredBB

originalBB65:                                     ; preds = %322, %originalBB65alteredBB
  %331 = call i8* @gettext(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.59, i64 0, i64 0)) #10, !dbg !1177
  %332 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1177
  %333 = call i32 @fputs_unlocked(i8* %331, %struct._IO_FILE* %332), !dbg !1177
  %334 = load i32, i32* @x.13
  %335 = load i32, i32* @y.14
  %336 = sub i32 %334, 1
  %337 = mul i32 %334, %336
  %338 = urem i32 %337, 2
  %339 = icmp eq i32 %338, 0
  %340 = icmp slt i32 %335, 10
  %341 = or i1 %339, %340
  br i1 %341, label %originalBBpart267, label %originalBB65alteredBB

originalBBpart267:                                ; preds = %originalBB65
  br label %342, !dbg !1177

342:                                              ; preds = %originalBBpart267, %319
  call void @llvm.dbg.declare(metadata i32* %16, metadata !1178, metadata !DIExpression()), !dbg !1180
  store i32 0, i32* %16, align 4, !dbg !1180
  br label %343, !dbg !1181

343:                                              ; preds = %originalBBpart289, %342
  %344 = load i32, i32* @x.13
  %345 = load i32, i32* @y.14
  %346 = sub i32 %344, 1
  %347 = mul i32 %344, %346
  %348 = urem i32 %347, 2
  %349 = icmp eq i32 %348, 0
  %350 = icmp slt i32 %345, 10
  %351 = or i1 %349, %350
  br i1 %351, label %originalBB69, label %originalBB69alteredBB

originalBB69:                                     ; preds = %343, %originalBB69alteredBB
  %352 = load i32, i32* %16, align 4, !dbg !1182
  %353 = load i32, i32* %15, align 4, !dbg !1184
  %354 = icmp slt i32 %352, %353, !dbg !1185
  %355 = load i32, i32* @x.13
  %356 = load i32, i32* @y.14
  %357 = sub i32 %355, 1
  %358 = mul i32 %355, %357
  %359 = urem i32 %358, 2
  %360 = icmp eq i32 %359, 0
  %361 = icmp slt i32 %356, 10
  %362 = or i1 %360, %361
  br i1 %362, label %originalBBpart271, label %originalBB69alteredBB

originalBBpart271:                                ; preds = %originalBB69
  br i1 %354, label %363, label %425, !dbg !1186

363:                                              ; preds = %originalBBpart271
  %364 = load i32, i32* %16, align 4, !dbg !1187
  %365 = icmp sgt i32 %364, 0, !dbg !1190
  br i1 %365, label %366, label %368, !dbg !1191

366:                                              ; preds = %363
  %367 = call i32 @putchar_unlocked(i32 44), !dbg !1192
  br label %368, !dbg !1192

368:                                              ; preds = %366, %363
  %369 = load i32, i32* @x.13
  %370 = load i32, i32* @y.14
  %371 = sub i32 %369, 1
  %372 = mul i32 %369, %371
  %373 = urem i32 %372, 2
  %374 = icmp eq i32 %373, 0
  %375 = icmp slt i32 %370, 10
  %376 = or i1 %374, %375
  br i1 %376, label %originalBB73, label %originalBB73alteredBB

originalBB73:                                     ; preds = %368, %originalBB73alteredBB
  %377 = load i32*, i32** %13, align 8, !dbg !1193
  %378 = load i32, i32* %16, align 4, !dbg !1193
  %379 = sext i32 %378 to i64, !dbg !1193
  %380 = getelementptr inbounds i32, i32* %377, i64 %379, !dbg !1193
  %381 = call i8* @gidtostr_ptr(i32* %380), !dbg !1193
  %382 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1193
  %383 = call i32 @fputs_unlocked(i8* %381, %struct._IO_FILE* %382), !dbg !1193
  %384 = load i32*, i32** %13, align 8, !dbg !1194
  %385 = load i32, i32* %16, align 4, !dbg !1195
  %386 = sext i32 %385 to i64, !dbg !1194
  %387 = getelementptr inbounds i32, i32* %384, i64 %386, !dbg !1194
  %388 = load i32, i32* %387, align 4, !dbg !1194
  %389 = call %struct.group* @getgrgid(i32 %388), !dbg !1196
  store %struct.group* %389, %struct.group** %12, align 8, !dbg !1197
  %390 = load %struct.group*, %struct.group** %12, align 8, !dbg !1198
  %391 = icmp ne %struct.group* %390, null, !dbg !1198
  %392 = load i32, i32* @x.13
  %393 = load i32, i32* @y.14
  %394 = sub i32 %392, 1
  %395 = mul i32 %392, %394
  %396 = urem i32 %395, 2
  %397 = icmp eq i32 %396, 0
  %398 = icmp slt i32 %393, 10
  %399 = or i1 %397, %398
  br i1 %399, label %originalBBpart275, label %originalBB73alteredBB

originalBBpart275:                                ; preds = %originalBB73
  br i1 %391, label %400, label %405, !dbg !1200

400:                                              ; preds = %originalBBpart275
  %401 = load %struct.group*, %struct.group** %12, align 8, !dbg !1201
  %402 = getelementptr inbounds %struct.group, %struct.group* %401, i32 0, i32 0, !dbg !1202
  %403 = load i8*, i8** %402, align 8, !dbg !1202
  %404 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.53, i64 0, i64 0), i8* %403), !dbg !1203
  br label %405, !dbg !1203

405:                                              ; preds = %400, %originalBBpart275
  br label %406, !dbg !1204

406:                                              ; preds = %405
  %407 = load i32, i32* @x.13
  %408 = load i32, i32* @y.14
  %409 = sub i32 %407, 1
  %410 = mul i32 %407, %409
  %411 = urem i32 %410, 2
  %412 = icmp eq i32 %411, 0
  %413 = icmp slt i32 %408, 10
  %414 = or i1 %412, %413
  br i1 %414, label %originalBB77, label %originalBB77alteredBB

originalBB77:                                     ; preds = %406, %originalBB77alteredBB
  %415 = load i32, i32* %16, align 4, !dbg !1205
  %416 = add nsw i32 %415, 1, !dbg !1205
  store i32 %416, i32* %16, align 4, !dbg !1205
  %417 = load i32, i32* @x.13
  %418 = load i32, i32* @y.14
  %419 = sub i32 %417, 1
  %420 = mul i32 %417, %419
  %421 = urem i32 %420, 2
  %422 = icmp eq i32 %421, 0
  %423 = icmp slt i32 %418, 10
  %424 = or i1 %422, %423
  br i1 %424, label %originalBBpart289, label %originalBB77alteredBB

originalBBpart289:                                ; preds = %originalBB77
  br label %343, !dbg !1206, !llvm.loop !1207

425:                                              ; preds = %originalBBpart271
  %426 = load i32, i32* @x.13
  %427 = load i32, i32* @y.14
  %428 = sub i32 %426, 1
  %429 = mul i32 %426, %428
  %430 = urem i32 %429, 2
  %431 = icmp eq i32 %430, 0
  %432 = icmp slt i32 %427, 10
  %433 = or i1 %431, %432
  br i1 %433, label %originalBB91, label %originalBB91alteredBB

originalBB91:                                     ; preds = %425, %originalBB91alteredBB
  %434 = load i32*, i32** %13, align 8, !dbg !1209
  %435 = bitcast i32* %434 to i8*, !dbg !1209
  call void @free(i8* %435) #10, !dbg !1210
  %436 = load i8*, i8** @context, align 8, !dbg !1211
  %437 = icmp ne i8* %436, null, !dbg !1211
  %438 = load i32, i32* @x.13
  %439 = load i32, i32* @y.14
  %440 = sub i32 %438, 1
  %441 = mul i32 %438, %440
  %442 = urem i32 %441, 2
  %443 = icmp eq i32 %442, 0
  %444 = icmp slt i32 %439, 10
  %445 = or i1 %443, %444
  br i1 %445, label %originalBBpart293, label %originalBB91alteredBB

originalBBpart293:                                ; preds = %originalBB91
  br i1 %437, label %446, label %466, !dbg !1213

446:                                              ; preds = %originalBBpart293
  %447 = load i32, i32* @x.13
  %448 = load i32, i32* @y.14
  %449 = sub i32 %447, 1
  %450 = mul i32 %447, %449
  %451 = urem i32 %450, 2
  %452 = icmp eq i32 %451, 0
  %453 = icmp slt i32 %448, 10
  %454 = or i1 %452, %453
  br i1 %454, label %originalBB95, label %originalBB95alteredBB

originalBB95:                                     ; preds = %446, %originalBB95alteredBB
  %455 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.60, i64 0, i64 0)) #10, !dbg !1214
  %456 = load i8*, i8** @context, align 8, !dbg !1215
  %457 = call i32 (i8*, ...) @printf(i8* %455, i8* %456), !dbg !1216
  %458 = load i32, i32* @x.13
  %459 = load i32, i32* @y.14
  %460 = sub i32 %458, 1
  %461 = mul i32 %458, %460
  %462 = urem i32 %461, 2
  %463 = icmp eq i32 %462, 0
  %464 = icmp slt i32 %459, 10
  %465 = or i1 %463, %464
  br i1 %465, label %originalBBpart297, label %originalBB95alteredBB

originalBBpart297:                                ; preds = %originalBB95
  br label %466, !dbg !1216

466:                                              ; preds = %originalBBpart297, %originalBBpart293, %originalBBpart263
  %467 = load i32, i32* @x.13
  %468 = load i32, i32* @y.14
  %469 = sub i32 %467, 1
  %470 = mul i32 %467, %469
  %471 = urem i32 %470, 2
  %472 = icmp eq i32 %471, 0
  %473 = icmp slt i32 %468, 10
  %474 = or i1 %472, %473
  br i1 %474, label %originalBB99, label %originalBB99alteredBB

originalBB99:                                     ; preds = %466, %originalBB99alteredBB
  %475 = load i32, i32* @x.13
  %476 = load i32, i32* @y.14
  %477 = sub i32 %475, 1
  %478 = mul i32 %475, %477
  %479 = urem i32 %478, 2
  %480 = icmp eq i32 %479, 0
  %481 = icmp slt i32 %476, 10
  %482 = or i1 %480, %481
  br i1 %482, label %originalBBpart2101, label %originalBB99alteredBB

originalBBpart2101:                               ; preds = %originalBB99
  ret void, !dbg !1217

originalBBalteredBB:                              ; preds = %originalBB, %1
  %483 = alloca i8*, align 8
  %484 = alloca %struct.passwd*, align 8
  %485 = alloca %struct.group*, align 8
  %486 = alloca i32*, align 8
  %487 = alloca i32, align 4
  %488 = alloca i32, align 4
  %489 = alloca i32, align 4
  store i8* %0, i8** %483, align 8
  call void @llvm.dbg.declare(metadata i8** %483, metadata !1218, metadata !DIExpression()), !dbg !1060
  call void @llvm.dbg.declare(metadata %struct.passwd** %484, metadata !1266, metadata !DIExpression()), !dbg !1062
  call void @llvm.dbg.declare(metadata %struct.group** %485, metadata !1277, metadata !DIExpression()), !dbg !1072
  %490 = call i8* @gettext(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.52, i64 0, i64 0)) #10, !dbg !1073
  %491 = call i8* @uidtostr_ptr(i32* @ruid), !dbg !1074
  %492 = call i32 (i8*, ...) @printf(i8* %490, i8* %491), !dbg !1075
  %493 = load i32, i32* @ruid, align 4, !dbg !1076
  %494 = call %struct.passwd* @getpwuid(i32 %493), !dbg !1077
  store %struct.passwd* %494, %struct.passwd** %484, align 8, !dbg !1078
  %495 = load %struct.passwd*, %struct.passwd** %484, align 8, !dbg !1079
  %496 = icmp ne %struct.passwd* %495, null, !dbg !1079
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %32
  %497 = load %struct.passwd*, %struct.passwd** %11, align 8, !dbg !1082
  %498 = getelementptr inbounds %struct.passwd, %struct.passwd* %497, i32 0, i32 0, !dbg !1083
  %499 = load i8*, i8** %498, align 8, !dbg !1083
  %500 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.53, i64 0, i64 0), i8* %499), !dbg !1084
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %53
  %501 = call i8* @gettext(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.54, i64 0, i64 0)) #10, !dbg !1085
  %502 = call i8* @gidtostr_ptr(i32* @rgid), !dbg !1086
  %503 = call i32 (i8*, ...) @printf(i8* %501, i8* %502), !dbg !1087
  %504 = load i32, i32* @rgid, align 4, !dbg !1088
  %505 = call %struct.group* @getgrgid(i32 %504), !dbg !1089
  store %struct.group* %505, %struct.group** %12, align 8, !dbg !1090
  %506 = load %struct.group*, %struct.group** %12, align 8, !dbg !1091
  %507 = icmp ne %struct.group* %506, null, !dbg !1091
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %94
  %508 = load %struct.passwd*, %struct.passwd** %11, align 8, !dbg !1112
  %509 = getelementptr inbounds %struct.passwd, %struct.passwd* %508, i32 0, i32 0, !dbg !1113
  %510 = load i8*, i8** %509, align 8, !dbg !1113
  %511 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.53, i64 0, i64 0), i8* %510), !dbg !1114
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %115
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %144
  %512 = load %struct.group*, %struct.group** %12, align 8, !dbg !1131
  %513 = getelementptr inbounds %struct.group, %struct.group* %512, i32 0, i32 0, !dbg !1132
  %514 = load i8*, i8** %513, align 8, !dbg !1132
  %515 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.53, i64 0, i64 0), i8* %514), !dbg !1133
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %165
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %182
  %516 = load i8*, i8** %10, align 8, !dbg !1140
  %517 = icmp ne i8* %516, null, !dbg !1140
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %204
  %518 = load %struct.passwd*, %struct.passwd** %11, align 8, !dbg !1144
  %519 = getelementptr inbounds %struct.passwd, %struct.passwd* %518, i32 0, i32 3, !dbg !1145
  %520 = load i32, i32* %519, align 4, !dbg !1145
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %224
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %243
  %521 = load i32, i32* @egid, align 4, !dbg !1148
  store i32 %521, i32* %14, align 4, !dbg !1149
  br label %originalBB38

originalBB42alteredBB:                            ; preds = %originalBB42, %270
  %522 = call i32* @__errno_location() #15, !dbg !1163
  %523 = load i32, i32* %522, align 4, !dbg !1163
  %524 = call i8* @gettext(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.57, i64 0, i64 0)) #10, !dbg !1164
  %525 = load i8*, i8** %10, align 8, !dbg !1165
  %526 = call i8* @quote(i8* %525), !dbg !1166
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %523, i8* %524, i8* %526), !dbg !1167
  br label %originalBB42

originalBB46alteredBB:                            ; preds = %originalBB46, %296
  %527 = load i8, i8* @ok, align 1, !dbg !1171
  %528 = trunc i8 %527 to i1, !dbg !1171
  %529 = zext i1 %528 to i32, !dbg !1171
  %_ = sub i32 %529, 0
  %gen = mul i32 %_, 0
  %_47 = sub i32 %529, 0
  %gen48 = mul i32 %_47, 0
  %_49 = sub i32 %529, 0
  %gen50 = mul i32 %_49, 0
  %_51 = shl i32 %529, 0
  %_52 = sub i32 %529, 0
  %gen53 = mul i32 %_52, 0
  %_54 = sub i32 0, %529
  %gen55 = add i32 %_54, 0
  %_56 = sub i32 %529, 0
  %gen57 = mul i32 %_56, 0
  %_58 = sub i32 0, %529
  %gen59 = add i32 %_58, 0
  %_60 = sub i32 %529, 0
  %gen61 = mul i32 %_60, 0
  %530 = and i32 %529, 0, !dbg !1171
  %531 = icmp ne i32 %530, 0, !dbg !1171
  %532 = zext i1 %531 to i8, !dbg !1171
  store i8 %532, i8* @ok, align 1, !dbg !1171
  br label %originalBB46

originalBB65alteredBB:                            ; preds = %originalBB65, %322
  %533 = call i8* @gettext(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.59, i64 0, i64 0)) #10, !dbg !1177
  %534 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1177
  %535 = call i32 @fputs_unlocked(i8* %533, %struct._IO_FILE* %534), !dbg !1177
  br label %originalBB65

originalBB69alteredBB:                            ; preds = %originalBB69, %343
  %536 = load i32, i32* %16, align 4, !dbg !1182
  %537 = load i32, i32* %15, align 4, !dbg !1184
  %538 = icmp slt i32 %536, %537, !dbg !1185
  br label %originalBB69

originalBB73alteredBB:                            ; preds = %originalBB73, %368
  %539 = load i32*, i32** %13, align 8, !dbg !1193
  %540 = load i32, i32* %16, align 4, !dbg !1193
  %541 = sext i32 %540 to i64, !dbg !1193
  %542 = getelementptr inbounds i32, i32* %539, i64 %541, !dbg !1193
  %543 = call i8* @gidtostr_ptr(i32* %542), !dbg !1193
  %544 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1193
  %545 = call i32 @fputs_unlocked(i8* %543, %struct._IO_FILE* %544), !dbg !1193
  %546 = load i32*, i32** %13, align 8, !dbg !1194
  %547 = load i32, i32* %16, align 4, !dbg !1195
  %548 = sext i32 %547 to i64, !dbg !1194
  %549 = getelementptr inbounds i32, i32* %546, i64 %548, !dbg !1194
  %550 = load i32, i32* %549, align 4, !dbg !1194
  %551 = call %struct.group* @getgrgid(i32 %550), !dbg !1196
  store %struct.group* %551, %struct.group** %12, align 8, !dbg !1197
  %552 = load %struct.group*, %struct.group** %12, align 8, !dbg !1198
  %553 = icmp ne %struct.group* %552, null, !dbg !1198
  br label %originalBB73

originalBB77alteredBB:                            ; preds = %originalBB77, %406
  %554 = load i32, i32* %16, align 4, !dbg !1205
  %_78 = shl i32 %554, 1
  %_79 = sub i32 0, %554
  %gen80 = add i32 %_79, 1
  %_81 = sub i32 0, %554
  %gen82 = add i32 %_81, 1
  %_83 = shl i32 %554, 1
  %_84 = sub i32 0, %554
  %gen85 = add i32 %_84, 1
  %_86 = shl i32 %554, 1
  %_87 = shl i32 %554, 1
  %555 = add nsw i32 %554, 1, !dbg !1205
  store i32 %555, i32* %16, align 4, !dbg !1205
  br label %originalBB77

originalBB91alteredBB:                            ; preds = %originalBB91, %425
  %556 = load i32*, i32** %13, align 8, !dbg !1209
  %557 = bitcast i32* %556 to i8*, !dbg !1209
  call void @free(i8* %557) #10, !dbg !1210
  %558 = load i8*, i8** @context, align 8, !dbg !1211
  %559 = icmp ne i8* %558, null, !dbg !1211
  br label %originalBB91

originalBB95alteredBB:                            ; preds = %originalBB95, %446
  %560 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.60, i64 0, i64 0)) #10, !dbg !1214
  %561 = load i8*, i8** @context, align 8, !dbg !1215
  %562 = call i32 (i8*, ...) @printf(i8* %560, i8* %561), !dbg !1216
  br label %originalBB95

originalBB99alteredBB:                            ; preds = %originalBB99, %466
  br label %originalBB99
}

declare dso_local i32 @putchar_unlocked(i32) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @uidtostr_ptr(i32*) #4 !dbg !48 {
  %2 = load i32, i32* @x.15
  %3 = load i32, i32* @y.16
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i32*, align 8
  store i32* %0, i32** %10, align 8
  call void @llvm.dbg.declare(metadata i32** %10, metadata !1285, metadata !DIExpression()), !dbg !1286
  %11 = load i32*, i32** %10, align 8, !dbg !1287
  %12 = load i32, i32* %11, align 4, !dbg !1288
  %13 = zext i32 %12 to i64, !dbg !1288
  %14 = call i8* @umaxtostr(i64 %13, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @uidtostr_ptr.buf, i64 0, i64 0)), !dbg !1289
  %15 = load i32, i32* @x.15
  %16 = load i32, i32* @y.16
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i8* %14, !dbg !1290

originalBBalteredBB:                              ; preds = %originalBB, %1
  %23 = alloca i32*, align 8
  store i32* %0, i32** %23, align 8
  call void @llvm.dbg.declare(metadata i32** %23, metadata !1291, metadata !DIExpression()), !dbg !1286
  %24 = load i32*, i32** %23, align 8, !dbg !1287
  %25 = load i32, i32* %24, align 4, !dbg !1288
  %26 = zext i32 %25 to i64, !dbg !1288
  %27 = call i8* @umaxtostr(i64 %26, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @uidtostr_ptr.buf, i64 0, i64 0)), !dbg !1289
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @gidtostr_ptr(i32*) #4 !dbg !58 {
  %2 = load i32, i32* @x.17
  %3 = load i32, i32* @y.18
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i32*, align 8
  store i32* %0, i32** %10, align 8
  call void @llvm.dbg.declare(metadata i32** %10, metadata !1338, metadata !DIExpression()), !dbg !1339
  %11 = load i32*, i32** %10, align 8, !dbg !1340
  %12 = load i32, i32* %11, align 4, !dbg !1341
  %13 = zext i32 %12 to i64, !dbg !1341
  %14 = call i8* @umaxtostr(i64 %13, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @gidtostr_ptr.buf, i64 0, i64 0)), !dbg !1342
  %15 = load i32, i32* @x.17
  %16 = load i32, i32* @y.18
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i8* %14, !dbg !1343

originalBBalteredBB:                              ; preds = %originalBB, %1
  %23 = alloca i32*, align 8
  store i32* %0, i32** %23, align 8
  call void @llvm.dbg.declare(metadata i32** %23, metadata !1344, metadata !DIExpression()), !dbg !1339
  %24 = load i32*, i32** %23, align 8, !dbg !1340
  %25 = load i32, i32* %24, align 4, !dbg !1341
  %26 = zext i32 %25 to i64, !dbg !1341
  %27 = call i8* @umaxtostr(i64 %26, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @gidtostr_ptr.buf, i64 0, i64 0)), !dbg !1342
  br label %originalBB
}

declare dso_local %struct.group* @getgrgid(i32) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @print_group_list(i8*, i32, i32, i32, i1 zeroext, i8 signext) #4 !dbg !1391 {
  %7 = load i32, i32* @x.19
  %8 = load i32, i32* @y.20
  %9 = sub i32 %7, 1
  %10 = mul i32 %7, %9
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %8, 10
  %14 = or i1 %12, %13
  br i1 %14, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %6, %originalBBalteredBB
  %15 = alloca i1, align 1
  %16 = alloca i8*, align 8
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i8, align 1
  %21 = alloca i8, align 1
  %22 = alloca i8, align 1
  %23 = alloca %struct.passwd*, align 8
  %24 = alloca i32*, align 8
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  store i8* %0, i8** %16, align 8
  call void @llvm.dbg.declare(metadata i8** %16, metadata !1394, metadata !DIExpression()), !dbg !1395
  store i32 %1, i32* %17, align 4
  call void @llvm.dbg.declare(metadata i32* %17, metadata !1396, metadata !DIExpression()), !dbg !1397
  store i32 %2, i32* %18, align 4
  call void @llvm.dbg.declare(metadata i32* %18, metadata !1398, metadata !DIExpression()), !dbg !1399
  store i32 %3, i32* %19, align 4
  call void @llvm.dbg.declare(metadata i32* %19, metadata !1400, metadata !DIExpression()), !dbg !1401
  %27 = zext i1 %4 to i8
  store i8 %27, i8* %20, align 1
  call void @llvm.dbg.declare(metadata i8* %20, metadata !1402, metadata !DIExpression()), !dbg !1403
  store i8 %5, i8* %21, align 1
  call void @llvm.dbg.declare(metadata i8* %21, metadata !1404, metadata !DIExpression()), !dbg !1405
  call void @llvm.dbg.declare(metadata i8* %22, metadata !1406, metadata !DIExpression()), !dbg !1407
  store i8 1, i8* %22, align 1, !dbg !1407
  call void @llvm.dbg.declare(metadata %struct.passwd** %23, metadata !1408, metadata !DIExpression()), !dbg !1419
  store %struct.passwd* null, %struct.passwd** %23, align 8, !dbg !1419
  %28 = load i8*, i8** %16, align 8, !dbg !1420
  %29 = icmp ne i8* %28, null, !dbg !1420
  %30 = load i32, i32* @x.19
  %31 = load i32, i32* @y.20
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %29, label %38, label %45, !dbg !1422

38:                                               ; preds = %originalBBpart2
  %39 = load i32, i32* %17, align 4, !dbg !1423
  %40 = call %struct.passwd* @getpwuid(i32 %39), !dbg !1425
  store %struct.passwd* %40, %struct.passwd** %23, align 8, !dbg !1426
  %41 = load %struct.passwd*, %struct.passwd** %23, align 8, !dbg !1427
  %42 = icmp eq %struct.passwd* %41, null, !dbg !1429
  br i1 %42, label %43, label %44, !dbg !1430

43:                                               ; preds = %38
  store i8 0, i8* %22, align 1, !dbg !1431
  br label %44, !dbg !1432

44:                                               ; preds = %43, %38
  br label %45, !dbg !1433

45:                                               ; preds = %44, %originalBBpart2
  %46 = load i32, i32* @x.19
  %47 = load i32, i32* @y.20
  %48 = sub i32 %46, 1
  %49 = mul i32 %46, %48
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %47, 10
  %53 = or i1 %51, %52
  br i1 %53, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %45, %originalBB1alteredBB
  %54 = load i32, i32* %18, align 4, !dbg !1434
  %55 = load i8, i8* %20, align 1, !dbg !1436
  %56 = trunc i8 %55 to i1, !dbg !1436
  %57 = call zeroext i1 @print_group(i32 %54, i1 zeroext %56), !dbg !1437
  %58 = load i32, i32* @x.19
  %59 = load i32, i32* @y.20
  %60 = sub i32 %58, 1
  %61 = mul i32 %58, %60
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %59, 10
  %65 = or i1 %63, %64
  br i1 %65, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %57, label %67, label %66, !dbg !1438

66:                                               ; preds = %originalBBpart24
  store i8 0, i8* %22, align 1, !dbg !1439
  br label %67, !dbg !1440

67:                                               ; preds = %66, %originalBBpart24
  %68 = load i32, i32* @x.19
  %69 = load i32, i32* @y.20
  %70 = sub i32 %68, 1
  %71 = mul i32 %68, %70
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %69, 10
  %75 = or i1 %73, %74
  br i1 %75, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %67, %originalBB6alteredBB
  %76 = load i32, i32* %19, align 4, !dbg !1441
  %77 = load i32, i32* %18, align 4, !dbg !1443
  %78 = icmp ne i32 %76, %77, !dbg !1444
  %79 = load i32, i32* @x.19
  %80 = load i32, i32* @y.20
  %81 = sub i32 %79, 1
  %82 = mul i32 %79, %81
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %80, 10
  %86 = or i1 %84, %85
  br i1 %86, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %78, label %87, label %113, !dbg !1445

87:                                               ; preds = %originalBBpart28
  %88 = load i8, i8* %21, align 1, !dbg !1446
  %89 = sext i8 %88 to i32, !dbg !1446
  %90 = call i32 @putchar_unlocked(i32 %89), !dbg !1446
  %91 = load i32, i32* %19, align 4, !dbg !1448
  %92 = load i8, i8* %20, align 1, !dbg !1450
  %93 = trunc i8 %92 to i1, !dbg !1450
  %94 = call zeroext i1 @print_group(i32 %91, i1 zeroext %93), !dbg !1451
  br i1 %94, label %96, label %95, !dbg !1452

95:                                               ; preds = %87
  store i8 0, i8* %22, align 1, !dbg !1453
  br label %96, !dbg !1454

96:                                               ; preds = %95, %87
  %97 = load i32, i32* @x.19
  %98 = load i32, i32* @y.20
  %99 = sub i32 %97, 1
  %100 = mul i32 %97, %99
  %101 = urem i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %98, 10
  %104 = or i1 %102, %103
  br i1 %104, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %96, %originalBB10alteredBB
  %105 = load i32, i32* @x.19
  %106 = load i32, i32* @y.20
  %107 = sub i32 %105, 1
  %108 = mul i32 %105, %107
  %109 = urem i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %106, 10
  %112 = or i1 %110, %111
  br i1 %112, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %113, !dbg !1455

113:                                              ; preds = %originalBBpart212, %originalBBpart28
  call void @llvm.dbg.declare(metadata i32** %24, metadata !1456, metadata !DIExpression()), !dbg !1458
  call void @llvm.dbg.declare(metadata i32* %25, metadata !1459, metadata !DIExpression()), !dbg !1460
  %114 = load i32, i32* @x.19
  %115 = load i32, i32* @y.20
  %116 = sub i32 %114, 1
  %117 = mul i32 %114, %116
  %118 = urem i32 %117, 2
  %119 = icmp eq i32 %118, 0
  %120 = icmp slt i32 %115, 10
  %121 = or i1 %119, %120
  br i1 %121, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %113, %originalBB14alteredBB
  %122 = load i8*, i8** %16, align 8, !dbg !1461
  %123 = load %struct.passwd*, %struct.passwd** %23, align 8, !dbg !1462
  %124 = icmp ne %struct.passwd* %123, null, !dbg !1462
  %125 = load i32, i32* @x.19
  %126 = load i32, i32* @y.20
  %127 = sub i32 %125, 1
  %128 = mul i32 %125, %127
  %129 = urem i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = icmp slt i32 %126, 10
  %132 = or i1 %130, %131
  br i1 %132, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %124, label %133, label %153, !dbg !1462

133:                                              ; preds = %originalBBpart216
  %134 = load i32, i32* @x.19
  %135 = load i32, i32* @y.20
  %136 = sub i32 %134, 1
  %137 = mul i32 %134, %136
  %138 = urem i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = icmp slt i32 %135, 10
  %141 = or i1 %139, %140
  br i1 %141, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %133, %originalBB18alteredBB
  %142 = load %struct.passwd*, %struct.passwd** %23, align 8, !dbg !1463
  %143 = getelementptr inbounds %struct.passwd, %struct.passwd* %142, i32 0, i32 3, !dbg !1464
  %144 = load i32, i32* %143, align 4, !dbg !1464
  %145 = load i32, i32* @x.19
  %146 = load i32, i32* @y.20
  %147 = sub i32 %145, 1
  %148 = mul i32 %145, %147
  %149 = urem i32 %148, 2
  %150 = icmp eq i32 %149, 0
  %151 = icmp slt i32 %146, 10
  %152 = or i1 %150, %151
  br i1 %152, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %155, !dbg !1462

153:                                              ; preds = %originalBBpart216
  %154 = load i32, i32* %19, align 4, !dbg !1465
  br label %155, !dbg !1462

155:                                              ; preds = %153, %originalBBpart220
  %156 = phi i32 [ %144, %originalBBpart220 ], [ %154, %153 ], !dbg !1462
  %157 = call i32 @xgetgroups(i8* %122, i32 %156, i32** %24), !dbg !1466
  store i32 %157, i32* %25, align 4, !dbg !1460
  %158 = load i32, i32* %25, align 4, !dbg !1467
  %159 = icmp slt i32 %158, 0, !dbg !1469
  br i1 %159, label %160, label %222, !dbg !1470

160:                                              ; preds = %155
  %161 = load i32, i32* @x.19
  %162 = load i32, i32* @y.20
  %163 = sub i32 %161, 1
  %164 = mul i32 %161, %163
  %165 = urem i32 %164, 2
  %166 = icmp eq i32 %165, 0
  %167 = icmp slt i32 %162, 10
  %168 = or i1 %166, %167
  br i1 %168, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %160, %originalBB22alteredBB
  %169 = load i8*, i8** %16, align 8, !dbg !1471
  %170 = icmp ne i8* %169, null, !dbg !1471
  %171 = load i32, i32* @x.19
  %172 = load i32, i32* @y.20
  %173 = sub i32 %171, 1
  %174 = mul i32 %171, %173
  %175 = urem i32 %174, 2
  %176 = icmp eq i32 %175, 0
  %177 = icmp slt i32 %172, 10
  %178 = or i1 %176, %177
  br i1 %178, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br i1 %170, label %179, label %201, !dbg !1474

179:                                              ; preds = %originalBBpart224
  %180 = load i32, i32* @x.19
  %181 = load i32, i32* @y.20
  %182 = sub i32 %180, 1
  %183 = mul i32 %180, %182
  %184 = urem i32 %183, 2
  %185 = icmp eq i32 %184, 0
  %186 = icmp slt i32 %181, 10
  %187 = or i1 %185, %186
  br i1 %187, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %179, %originalBB26alteredBB
  %188 = call i32* @__errno_location() #15, !dbg !1475
  %189 = load i32, i32* %188, align 4, !dbg !1475
  %190 = call i8* @gettext(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.61, i64 0, i64 0)) #10, !dbg !1477
  %191 = load i8*, i8** %16, align 8, !dbg !1478
  %192 = call i8* @quote(i8* %191), !dbg !1479
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %189, i8* %190, i8* %192), !dbg !1480
  %193 = load i32, i32* @x.19
  %194 = load i32, i32* @y.20
  %195 = sub i32 %193, 1
  %196 = mul i32 %193, %195
  %197 = urem i32 %196, 2
  %198 = icmp eq i32 %197, 0
  %199 = icmp slt i32 %194, 10
  %200 = or i1 %198, %199
  br i1 %200, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br label %221, !dbg !1481

201:                                              ; preds = %originalBBpart224
  %202 = load i32, i32* @x.19
  %203 = load i32, i32* @y.20
  %204 = sub i32 %202, 1
  %205 = mul i32 %202, %204
  %206 = urem i32 %205, 2
  %207 = icmp eq i32 %206, 0
  %208 = icmp slt i32 %203, 10
  %209 = or i1 %207, %208
  br i1 %209, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %201, %originalBB30alteredBB
  %210 = call i32* @__errno_location() #15, !dbg !1482
  %211 = load i32, i32* %210, align 4, !dbg !1482
  %212 = call i8* @gettext(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1.62, i64 0, i64 0)) #10, !dbg !1484
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %211, i8* %212), !dbg !1485
  %213 = load i32, i32* @x.19
  %214 = load i32, i32* @y.20
  %215 = sub i32 %213, 1
  %216 = mul i32 %213, %215
  %217 = urem i32 %216, 2
  %218 = icmp eq i32 %217, 0
  %219 = icmp slt i32 %214, 10
  %220 = or i1 %218, %219
  br i1 %220, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br label %221

221:                                              ; preds = %originalBBpart232, %originalBBpart228
  store i1 false, i1* %15, align 1, !dbg !1486
  br label %394, !dbg !1486

222:                                              ; preds = %155
  call void @llvm.dbg.declare(metadata i32* %26, metadata !1487, metadata !DIExpression()), !dbg !1489
  %223 = load i32, i32* @x.19
  %224 = load i32, i32* @y.20
  %225 = sub i32 %223, 1
  %226 = mul i32 %223, %225
  %227 = urem i32 %226, 2
  %228 = icmp eq i32 %227, 0
  %229 = icmp slt i32 %224, 10
  %230 = or i1 %228, %229
  br i1 %230, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %222, %originalBB34alteredBB
  store i32 0, i32* %26, align 4, !dbg !1489
  %231 = load i32, i32* @x.19
  %232 = load i32, i32* @y.20
  %233 = sub i32 %231, 1
  %234 = mul i32 %231, %233
  %235 = urem i32 %234, 2
  %236 = icmp eq i32 %235, 0
  %237 = icmp slt i32 %232, 10
  %238 = or i1 %236, %237
  br i1 %238, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  br label %239, !dbg !1490

239:                                              ; preds = %originalBBpart262, %originalBBpart236
  %240 = load i32, i32* @x.19
  %241 = load i32, i32* @y.20
  %242 = sub i32 %240, 1
  %243 = mul i32 %240, %242
  %244 = urem i32 %243, 2
  %245 = icmp eq i32 %244, 0
  %246 = icmp slt i32 %241, 10
  %247 = or i1 %245, %246
  br i1 %247, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %239, %originalBB38alteredBB
  %248 = load i32, i32* %26, align 4, !dbg !1491
  %249 = load i32, i32* %25, align 4, !dbg !1493
  %250 = icmp slt i32 %248, %249, !dbg !1494
  %251 = load i32, i32* @x.19
  %252 = load i32, i32* @y.20
  %253 = sub i32 %251, 1
  %254 = mul i32 %251, %253
  %255 = urem i32 %254, 2
  %256 = icmp eq i32 %255, 0
  %257 = icmp slt i32 %252, 10
  %258 = or i1 %256, %257
  br i1 %258, label %originalBBpart240, label %originalBB38alteredBB

originalBBpart240:                                ; preds = %originalBB38
  br i1 %250, label %259, label %373, !dbg !1495

259:                                              ; preds = %originalBBpart240
  %260 = load i32, i32* @x.19
  %261 = load i32, i32* @y.20
  %262 = sub i32 %260, 1
  %263 = mul i32 %260, %262
  %264 = urem i32 %263, 2
  %265 = icmp eq i32 %264, 0
  %266 = icmp slt i32 %261, 10
  %267 = or i1 %265, %266
  br i1 %267, label %originalBB42, label %originalBB42alteredBB

originalBB42:                                     ; preds = %259, %originalBB42alteredBB
  %268 = load i32*, i32** %24, align 8, !dbg !1496
  %269 = load i32, i32* %26, align 4, !dbg !1498
  %270 = sext i32 %269 to i64, !dbg !1496
  %271 = getelementptr inbounds i32, i32* %268, i64 %270, !dbg !1496
  %272 = load i32, i32* %271, align 4, !dbg !1496
  %273 = load i32, i32* %18, align 4, !dbg !1499
  %274 = icmp ne i32 %272, %273, !dbg !1500
  %275 = load i32, i32* @x.19
  %276 = load i32, i32* @y.20
  %277 = sub i32 %275, 1
  %278 = mul i32 %275, %277
  %279 = urem i32 %278, 2
  %280 = icmp eq i32 %279, 0
  %281 = icmp slt i32 %276, 10
  %282 = or i1 %280, %281
  br i1 %282, label %originalBBpart244, label %originalBB42alteredBB

originalBBpart244:                                ; preds = %originalBB42
  br i1 %274, label %283, label %353, !dbg !1501

283:                                              ; preds = %originalBBpart244
  %284 = load i32, i32* @x.19
  %285 = load i32, i32* @y.20
  %286 = sub i32 %284, 1
  %287 = mul i32 %284, %286
  %288 = urem i32 %287, 2
  %289 = icmp eq i32 %288, 0
  %290 = icmp slt i32 %285, 10
  %291 = or i1 %289, %290
  br i1 %291, label %originalBB46, label %originalBB46alteredBB

originalBB46:                                     ; preds = %283, %originalBB46alteredBB
  %292 = load i32*, i32** %24, align 8, !dbg !1502
  %293 = load i32, i32* %26, align 4, !dbg !1503
  %294 = sext i32 %293 to i64, !dbg !1502
  %295 = getelementptr inbounds i32, i32* %292, i64 %294, !dbg !1502
  %296 = load i32, i32* %295, align 4, !dbg !1502
  %297 = load i32, i32* %19, align 4, !dbg !1504
  %298 = icmp ne i32 %296, %297, !dbg !1505
  %299 = load i32, i32* @x.19
  %300 = load i32, i32* @y.20
  %301 = sub i32 %299, 1
  %302 = mul i32 %299, %301
  %303 = urem i32 %302, 2
  %304 = icmp eq i32 %303, 0
  %305 = icmp slt i32 %300, 10
  %306 = or i1 %304, %305
  br i1 %306, label %originalBBpart248, label %originalBB46alteredBB

originalBBpart248:                                ; preds = %originalBB46
  br i1 %298, label %307, label %353, !dbg !1506

307:                                              ; preds = %originalBBpart248
  %308 = load i32, i32* @x.19
  %309 = load i32, i32* @y.20
  %310 = sub i32 %308, 1
  %311 = mul i32 %308, %310
  %312 = urem i32 %311, 2
  %313 = icmp eq i32 %312, 0
  %314 = icmp slt i32 %309, 10
  %315 = or i1 %313, %314
  br i1 %315, label %originalBB50, label %originalBB50alteredBB

originalBB50:                                     ; preds = %307, %originalBB50alteredBB
  %316 = load i8, i8* %21, align 1, !dbg !1507
  %317 = sext i8 %316 to i32, !dbg !1507
  %318 = call i32 @putchar_unlocked(i32 %317), !dbg !1507
  %319 = load i32*, i32** %24, align 8, !dbg !1509
  %320 = load i32, i32* %26, align 4, !dbg !1511
  %321 = sext i32 %320 to i64, !dbg !1509
  %322 = getelementptr inbounds i32, i32* %319, i64 %321, !dbg !1509
  %323 = load i32, i32* %322, align 4, !dbg !1509
  %324 = load i8, i8* %20, align 1, !dbg !1512
  %325 = trunc i8 %324 to i1, !dbg !1512
  %326 = call zeroext i1 @print_group(i32 %323, i1 zeroext %325), !dbg !1513
  %327 = load i32, i32* @x.19
  %328 = load i32, i32* @y.20
  %329 = sub i32 %327, 1
  %330 = mul i32 %327, %329
  %331 = urem i32 %330, 2
  %332 = icmp eq i32 %331, 0
  %333 = icmp slt i32 %328, 10
  %334 = or i1 %332, %333
  br i1 %334, label %originalBBpart252, label %originalBB50alteredBB

originalBBpart252:                                ; preds = %originalBB50
  br i1 %326, label %336, label %335, !dbg !1514

335:                                              ; preds = %originalBBpart252
  store i8 0, i8* %22, align 1, !dbg !1515
  br label %336, !dbg !1516

336:                                              ; preds = %335, %originalBBpart252
  %337 = load i32, i32* @x.19
  %338 = load i32, i32* @y.20
  %339 = sub i32 %337, 1
  %340 = mul i32 %337, %339
  %341 = urem i32 %340, 2
  %342 = icmp eq i32 %341, 0
  %343 = icmp slt i32 %338, 10
  %344 = or i1 %342, %343
  br i1 %344, label %originalBB54, label %originalBB54alteredBB

originalBB54:                                     ; preds = %336, %originalBB54alteredBB
  %345 = load i32, i32* @x.19
  %346 = load i32, i32* @y.20
  %347 = sub i32 %345, 1
  %348 = mul i32 %345, %347
  %349 = urem i32 %348, 2
  %350 = icmp eq i32 %349, 0
  %351 = icmp slt i32 %346, 10
  %352 = or i1 %350, %351
  br i1 %352, label %originalBBpart256, label %originalBB54alteredBB

originalBBpart256:                                ; preds = %originalBB54
  br label %353, !dbg !1517

353:                                              ; preds = %originalBBpart256, %originalBBpart248, %originalBBpart244
  br label %354, !dbg !1504

354:                                              ; preds = %353
  %355 = load i32, i32* @x.19
  %356 = load i32, i32* @y.20
  %357 = sub i32 %355, 1
  %358 = mul i32 %355, %357
  %359 = urem i32 %358, 2
  %360 = icmp eq i32 %359, 0
  %361 = icmp slt i32 %356, 10
  %362 = or i1 %360, %361
  br i1 %362, label %originalBB58, label %originalBB58alteredBB

originalBB58:                                     ; preds = %354, %originalBB58alteredBB
  %363 = load i32, i32* %26, align 4, !dbg !1518
  %364 = add nsw i32 %363, 1, !dbg !1518
  store i32 %364, i32* %26, align 4, !dbg !1518
  %365 = load i32, i32* @x.19
  %366 = load i32, i32* @y.20
  %367 = sub i32 %365, 1
  %368 = mul i32 %365, %367
  %369 = urem i32 %368, 2
  %370 = icmp eq i32 %369, 0
  %371 = icmp slt i32 %366, 10
  %372 = or i1 %370, %371
  br i1 %372, label %originalBBpart262, label %originalBB58alteredBB

originalBBpart262:                                ; preds = %originalBB58
  br label %239, !dbg !1519, !llvm.loop !1520

373:                                              ; preds = %originalBBpart240
  %374 = load i32, i32* @x.19
  %375 = load i32, i32* @y.20
  %376 = sub i32 %374, 1
  %377 = mul i32 %374, %376
  %378 = urem i32 %377, 2
  %379 = icmp eq i32 %378, 0
  %380 = icmp slt i32 %375, 10
  %381 = or i1 %379, %380
  br i1 %381, label %originalBB64, label %originalBB64alteredBB

originalBB64:                                     ; preds = %373, %originalBB64alteredBB
  %382 = load i32*, i32** %24, align 8, !dbg !1522
  %383 = bitcast i32* %382 to i8*, !dbg !1522
  call void @free(i8* %383) #10, !dbg !1523
  %384 = load i8, i8* %22, align 1, !dbg !1524
  %385 = trunc i8 %384 to i1, !dbg !1524
  store i1 %385, i1* %15, align 1, !dbg !1525
  %386 = load i32, i32* @x.19
  %387 = load i32, i32* @y.20
  %388 = sub i32 %386, 1
  %389 = mul i32 %386, %388
  %390 = urem i32 %389, 2
  %391 = icmp eq i32 %390, 0
  %392 = icmp slt i32 %387, 10
  %393 = or i1 %391, %392
  br i1 %393, label %originalBBpart266, label %originalBB64alteredBB

originalBBpart266:                                ; preds = %originalBB64
  br label %394, !dbg !1525

394:                                              ; preds = %originalBBpart266, %221
  %395 = load i32, i32* @x.19
  %396 = load i32, i32* @y.20
  %397 = sub i32 %395, 1
  %398 = mul i32 %395, %397
  %399 = urem i32 %398, 2
  %400 = icmp eq i32 %399, 0
  %401 = icmp slt i32 %396, 10
  %402 = or i1 %400, %401
  br i1 %402, label %originalBB68, label %originalBB68alteredBB

originalBB68:                                     ; preds = %394, %originalBB68alteredBB
  %403 = load i1, i1* %15, align 1, !dbg !1526
  %404 = load i32, i32* @x.19
  %405 = load i32, i32* @y.20
  %406 = sub i32 %404, 1
  %407 = mul i32 %404, %406
  %408 = urem i32 %407, 2
  %409 = icmp eq i32 %408, 0
  %410 = icmp slt i32 %405, 10
  %411 = or i1 %409, %410
  br i1 %411, label %originalBBpart270, label %originalBB68alteredBB

originalBBpart270:                                ; preds = %originalBB68
  ret i1 %403, !dbg !1526

originalBBalteredBB:                              ; preds = %originalBB, %6
  %412 = alloca i1, align 1
  %413 = alloca i8*, align 8
  %414 = alloca i32, align 4
  %415 = alloca i32, align 4
  %416 = alloca i32, align 4
  %417 = alloca i8, align 1
  %418 = alloca i8, align 1
  %419 = alloca i8, align 1
  %420 = alloca %struct.passwd*, align 8
  %421 = alloca i32*, align 8
  %422 = alloca i32, align 4
  %423 = alloca i32, align 4
  store i8* %0, i8** %413, align 8
  call void @llvm.dbg.declare(metadata i8** %413, metadata !1527, metadata !DIExpression()), !dbg !1395
  store i32 %1, i32* %414, align 4
  call void @llvm.dbg.declare(metadata i32* %414, metadata !1534, metadata !DIExpression()), !dbg !1397
  store i32 %2, i32* %415, align 4
  call void @llvm.dbg.declare(metadata i32* %415, metadata !1535, metadata !DIExpression()), !dbg !1399
  store i32 %3, i32* %416, align 4
  call void @llvm.dbg.declare(metadata i32* %416, metadata !1536, metadata !DIExpression()), !dbg !1401
  %424 = zext i1 %4 to i8
  store i8 %424, i8* %417, align 1
  call void @llvm.dbg.declare(metadata i8* %417, metadata !1537, metadata !DIExpression()), !dbg !1403
  store i8 %5, i8* %418, align 1
  call void @llvm.dbg.declare(metadata i8* %418, metadata !1538, metadata !DIExpression()), !dbg !1405
  call void @llvm.dbg.declare(metadata i8* %419, metadata !1539, metadata !DIExpression()), !dbg !1407
  store i8 1, i8* %419, align 1, !dbg !1407
  call void @llvm.dbg.declare(metadata %struct.passwd** %420, metadata !1540, metadata !DIExpression()), !dbg !1419
  store %struct.passwd* null, %struct.passwd** %420, align 8, !dbg !1419
  %425 = load i8*, i8** %413, align 8, !dbg !1420
  %426 = icmp ne i8* %425, null, !dbg !1420
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %45
  %427 = load i32, i32* %18, align 4, !dbg !1434
  %428 = load i8, i8* %20, align 1, !dbg !1436
  %429 = trunc i8 %428 to i1, !dbg !1436
  %430 = call zeroext i1 @print_group(i32 %427, i1 zeroext %429), !dbg !1437
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %67
  %431 = load i32, i32* %19, align 4, !dbg !1441
  %432 = load i32, i32* %18, align 4, !dbg !1443
  %433 = icmp ne i32 %431, %432, !dbg !1444
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %96
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %113
  %434 = load i8*, i8** %16, align 8, !dbg !1461
  %435 = load %struct.passwd*, %struct.passwd** %23, align 8, !dbg !1462
  %436 = icmp ne %struct.passwd* %435, null, !dbg !1462
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %133
  %437 = load %struct.passwd*, %struct.passwd** %23, align 8, !dbg !1463
  %438 = getelementptr inbounds %struct.passwd, %struct.passwd* %437, i32 0, i32 3, !dbg !1464
  %439 = load i32, i32* %438, align 4, !dbg !1464
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %160
  %440 = load i8*, i8** %16, align 8, !dbg !1471
  %441 = icmp ne i8* %440, null, !dbg !1471
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %179
  %442 = call i32* @__errno_location() #15, !dbg !1475
  %443 = load i32, i32* %442, align 4, !dbg !1475
  %444 = call i8* @gettext(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.61, i64 0, i64 0)) #10, !dbg !1477
  %445 = load i8*, i8** %16, align 8, !dbg !1478
  %446 = call i8* @quote(i8* %445), !dbg !1479
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %443, i8* %444, i8* %446), !dbg !1480
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %201
  %447 = call i32* @__errno_location() #15, !dbg !1482
  %448 = load i32, i32* %447, align 4, !dbg !1482
  %449 = call i8* @gettext(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1.62, i64 0, i64 0)) #10, !dbg !1484
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %448, i8* %449), !dbg !1485
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %222
  store i32 0, i32* %26, align 4, !dbg !1489
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %239
  %450 = load i32, i32* %26, align 4, !dbg !1491
  %451 = load i32, i32* %25, align 4, !dbg !1493
  %452 = icmp slt i32 %450, %451, !dbg !1494
  br label %originalBB38

originalBB42alteredBB:                            ; preds = %originalBB42, %259
  %453 = load i32*, i32** %24, align 8, !dbg !1496
  %454 = load i32, i32* %26, align 4, !dbg !1498
  %455 = sext i32 %454 to i64, !dbg !1496
  %456 = getelementptr inbounds i32, i32* %453, i64 %455, !dbg !1496
  %457 = load i32, i32* %456, align 4, !dbg !1496
  %458 = load i32, i32* %18, align 4, !dbg !1499
  %459 = icmp ne i32 %457, %458, !dbg !1500
  br label %originalBB42

originalBB46alteredBB:                            ; preds = %originalBB46, %283
  %460 = load i32*, i32** %24, align 8, !dbg !1502
  %461 = load i32, i32* %26, align 4, !dbg !1503
  %462 = sext i32 %461 to i64, !dbg !1502
  %463 = getelementptr inbounds i32, i32* %460, i64 %462, !dbg !1502
  %464 = load i32, i32* %463, align 4, !dbg !1502
  %465 = load i32, i32* %19, align 4, !dbg !1504
  %466 = icmp ne i32 %464, %465, !dbg !1505
  br label %originalBB46

originalBB50alteredBB:                            ; preds = %originalBB50, %307
  %467 = load i8, i8* %21, align 1, !dbg !1507
  %468 = sext i8 %467 to i32, !dbg !1507
  %469 = call i32 @putchar_unlocked(i32 %468), !dbg !1507
  %470 = load i32*, i32** %24, align 8, !dbg !1509
  %471 = load i32, i32* %26, align 4, !dbg !1511
  %472 = sext i32 %471 to i64, !dbg !1509
  %473 = getelementptr inbounds i32, i32* %470, i64 %472, !dbg !1509
  %474 = load i32, i32* %473, align 4, !dbg !1509
  %475 = load i8, i8* %20, align 1, !dbg !1512
  %476 = trunc i8 %475 to i1, !dbg !1512
  %477 = call zeroext i1 @print_group(i32 %474, i1 zeroext %476), !dbg !1513
  br label %originalBB50

originalBB54alteredBB:                            ; preds = %originalBB54, %336
  br label %originalBB54

originalBB58alteredBB:                            ; preds = %originalBB58, %354
  %478 = load i32, i32* %26, align 4, !dbg !1518
  %_ = sub i32 0, %478
  %gen = add i32 %_, 1
  %_59 = sub i32 %478, 1
  %gen60 = mul i32 %_59, 1
  %479 = add nsw i32 %478, 1, !dbg !1518
  store i32 %479, i32* %26, align 4, !dbg !1518
  br label %originalBB58

originalBB64alteredBB:                            ; preds = %originalBB64, %373
  %480 = load i32*, i32** %24, align 8, !dbg !1522
  %481 = bitcast i32* %480 to i8*, !dbg !1522
  call void @free(i8* %481) #10, !dbg !1523
  %482 = load i8, i8* %22, align 1, !dbg !1524
  %483 = trunc i8 %482 to i1, !dbg !1524
  store i1 %483, i1* %15, align 1, !dbg !1525
  br label %originalBB64

originalBB68alteredBB:                            ; preds = %originalBB68, %394
  %484 = load i1, i1* %15, align 1, !dbg !1526
  br label %originalBB68
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @print_group(i32, i1 zeroext) #4 !dbg !1551 {
  %3 = load i32, i32* @x.21
  %4 = load i32, i32* @y.22
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca i32, align 4
  %12 = alloca i8, align 1
  %13 = alloca %struct.group*, align 8
  %14 = alloca i8, align 1
  %15 = alloca i8*, align 8
  store i32 %0, i32* %11, align 4
  call void @llvm.dbg.declare(metadata i32* %11, metadata !1554, metadata !DIExpression()), !dbg !1555
  %16 = zext i1 %1 to i8
  store i8 %16, i8* %12, align 1
  call void @llvm.dbg.declare(metadata i8* %12, metadata !1556, metadata !DIExpression()), !dbg !1557
  call void @llvm.dbg.declare(metadata %struct.group** %13, metadata !1558, metadata !DIExpression()), !dbg !1566
  store %struct.group* null, %struct.group** %13, align 8, !dbg !1566
  call void @llvm.dbg.declare(metadata i8* %14, metadata !1567, metadata !DIExpression()), !dbg !1568
  store i8 1, i8* %14, align 1, !dbg !1568
  %17 = load i8, i8* %12, align 1, !dbg !1569
  %18 = trunc i8 %17 to i1, !dbg !1569
  %19 = load i32, i32* @x.21
  %20 = load i32, i32* @y.22
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %18, label %27, label %53, !dbg !1571

27:                                               ; preds = %originalBBpart2
  %28 = load i32, i32* %11, align 4, !dbg !1572
  %29 = call %struct.group* @getgrgid(i32 %28), !dbg !1574
  store %struct.group* %29, %struct.group** %13, align 8, !dbg !1575
  %30 = load %struct.group*, %struct.group** %13, align 8, !dbg !1576
  %31 = icmp eq %struct.group* %30, null, !dbg !1578
  br i1 %31, label %32, label %52, !dbg !1579

32:                                               ; preds = %27
  %33 = load i32, i32* @x.21
  %34 = load i32, i32* @y.22
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %32, %originalBB1alteredBB
  %41 = call i8* @gettext(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.2.63, i64 0, i64 0)) #10, !dbg !1580
  %42 = load i32, i32* %11, align 4, !dbg !1582
  %43 = zext i32 %42 to i64, !dbg !1583
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %41, i64 %43), !dbg !1584
  store i8 0, i8* %14, align 1, !dbg !1585
  %44 = load i32, i32* @x.21
  %45 = load i32, i32* @y.22
  %46 = sub i32 %44, 1
  %47 = mul i32 %44, %46
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %45, 10
  %51 = or i1 %49, %50
  br i1 %51, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %52, !dbg !1586

52:                                               ; preds = %originalBBpart24, %27
  br label %53, !dbg !1587

53:                                               ; preds = %52, %originalBBpart2
  call void @llvm.dbg.declare(metadata i8** %15, metadata !1588, metadata !DIExpression()), !dbg !1589
  %54 = load %struct.group*, %struct.group** %13, align 8, !dbg !1590
  %55 = icmp ne %struct.group* %54, null, !dbg !1590
  br i1 %55, label %56, label %76, !dbg !1590

56:                                               ; preds = %53
  %57 = load i32, i32* @x.21
  %58 = load i32, i32* @y.22
  %59 = sub i32 %57, 1
  %60 = mul i32 %57, %59
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %58, 10
  %64 = or i1 %62, %63
  br i1 %64, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %56, %originalBB6alteredBB
  %65 = load %struct.group*, %struct.group** %13, align 8, !dbg !1591
  %66 = getelementptr inbounds %struct.group, %struct.group* %65, i32 0, i32 0, !dbg !1592
  %67 = load i8*, i8** %66, align 8, !dbg !1592
  %68 = load i32, i32* @x.21
  %69 = load i32, i32* @y.22
  %70 = sub i32 %68, 1
  %71 = mul i32 %68, %70
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %69, 10
  %75 = or i1 %73, %74
  br i1 %75, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %78, !dbg !1590

76:                                               ; preds = %53
  %77 = call i8* @gidtostr_ptr.64(i32* %11), !dbg !1593
  br label %78, !dbg !1590

78:                                               ; preds = %76, %originalBBpart28
  %79 = phi i8* [ %67, %originalBBpart28 ], [ %77, %76 ], !dbg !1590
  %80 = load i32, i32* @x.21
  %81 = load i32, i32* @y.22
  %82 = sub i32 %80, 1
  %83 = mul i32 %80, %82
  %84 = urem i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %81, 10
  %87 = or i1 %85, %86
  br i1 %87, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %78, %originalBB10alteredBB
  store i8* %79, i8** %15, align 8, !dbg !1589
  %88 = load i8*, i8** %15, align 8, !dbg !1594
  %89 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1594
  %90 = call i32 @fputs_unlocked(i8* %88, %struct._IO_FILE* %89), !dbg !1594
  %91 = load i8, i8* %14, align 1, !dbg !1595
  %92 = trunc i8 %91 to i1, !dbg !1595
  %93 = load i32, i32* @x.21
  %94 = load i32, i32* @y.22
  %95 = sub i32 %93, 1
  %96 = mul i32 %93, %95
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %94, 10
  %100 = or i1 %98, %99
  br i1 %100, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  ret i1 %92, !dbg !1596

originalBBalteredBB:                              ; preds = %originalBB, %2
  %101 = alloca i32, align 4
  %102 = alloca i8, align 1
  %103 = alloca %struct.group*, align 8
  %104 = alloca i8, align 1
  %105 = alloca i8*, align 8
  store i32 %0, i32* %101, align 4
  call void @llvm.dbg.declare(metadata i32* %101, metadata !1597, metadata !DIExpression()), !dbg !1555
  %106 = zext i1 %1 to i8
  store i8 %106, i8* %102, align 1
  call void @llvm.dbg.declare(metadata i8* %102, metadata !1604, metadata !DIExpression()), !dbg !1557
  call void @llvm.dbg.declare(metadata %struct.group** %103, metadata !1605, metadata !DIExpression()), !dbg !1566
  store %struct.group* null, %struct.group** %103, align 8, !dbg !1566
  call void @llvm.dbg.declare(metadata i8* %104, metadata !1613, metadata !DIExpression()), !dbg !1568
  store i8 1, i8* %104, align 1, !dbg !1568
  %107 = load i8, i8* %102, align 1, !dbg !1569
  %108 = trunc i8 %107 to i1, !dbg !1569
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %32
  %109 = call i8* @gettext(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.2.63, i64 0, i64 0)) #10, !dbg !1580
  %110 = load i32, i32* %11, align 4, !dbg !1582
  %111 = zext i32 %110 to i64, !dbg !1583
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %109, i64 %111), !dbg !1584
  store i8 0, i8* %14, align 1, !dbg !1585
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %56
  %112 = load %struct.group*, %struct.group** %13, align 8, !dbg !1591
  %113 = getelementptr inbounds %struct.group, %struct.group* %112, i32 0, i32 0, !dbg !1592
  %114 = load i8*, i8** %113, align 8, !dbg !1592
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %78
  store i8* %79, i8** %15, align 8, !dbg !1589
  %115 = load i8*, i8** %15, align 8, !dbg !1594
  %116 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1594
  %117 = call i32 @fputs_unlocked(i8* %115, %struct._IO_FILE* %116), !dbg !1594
  %118 = load i8, i8* %14, align 1, !dbg !1595
  %119 = trunc i8 %118 to i1, !dbg !1595
  br label %originalBB10
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @gidtostr_ptr.64(i32*) #4 !dbg !80 {
  %2 = load i32, i32* @x.23
  %3 = load i32, i32* @y.24
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i32*, align 8
  store i32* %0, i32** %10, align 8
  call void @llvm.dbg.declare(metadata i32** %10, metadata !1614, metadata !DIExpression()), !dbg !1615
  %11 = load i32*, i32** %10, align 8, !dbg !1616
  %12 = load i32, i32* %11, align 4, !dbg !1617
  %13 = zext i32 %12 to i64, !dbg !1617
  %14 = call i8* @umaxtostr(i64 %13, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @gidtostr_ptr.buf.65, i64 0, i64 0)), !dbg !1618
  %15 = load i32, i32* @x.23
  %16 = load i32, i32* @y.24
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i8* %14, !dbg !1619

originalBBalteredBB:                              ; preds = %originalBB, %1
  %23 = alloca i32*, align 8
  store i32* %0, i32** %23, align 8
  call void @llvm.dbg.declare(metadata i32** %23, metadata !1620, metadata !DIExpression()), !dbg !1615
  %24 = load i32*, i32** %23, align 8, !dbg !1616
  %25 = load i32, i32* %24, align 4, !dbg !1617
  %26 = zext i32 %25 to i64, !dbg !1617
  %27 = call i8* @umaxtostr(i64 %26, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @gidtostr_ptr.buf.65, i64 0, i64 0)), !dbg !1618
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @close_stdout() #4 !dbg !1626 {
  %1 = load i32, i32* @x.25
  %2 = load i32, i32* @y.26
  %3 = sub i32 %1, 1
  %4 = mul i32 %1, %3
  %5 = urem i32 %4, 2
  %6 = icmp eq i32 %5, 0
  %7 = icmp slt i32 %2, 10
  %8 = or i1 %6, %7
  br i1 %8, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %0, %originalBBalteredBB
  %9 = alloca i8*, align 8
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1629
  %11 = call i32 @close_stream(%struct._IO_FILE* %10), !dbg !1631
  %12 = icmp ne i32 %11, 0, !dbg !1632
  %13 = load i32, i32* @x.25
  %14 = load i32, i32* @y.26
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %12, label %21, label %76, !dbg !1633

21:                                               ; preds = %originalBBpart2
  %22 = load i8, i8* @ignore_EPIPE, align 1, !dbg !1634
  %23 = trunc i8 %22 to i1, !dbg !1634
  br i1 %23, label %24, label %44, !dbg !1635

24:                                               ; preds = %21
  %25 = load i32, i32* @x.25
  %26 = load i32, i32* @y.26
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %24, %originalBB1alteredBB
  %33 = call i32* @__errno_location() #15, !dbg !1636
  %34 = load i32, i32* %33, align 4, !dbg !1636
  %35 = icmp eq i32 %34, 32, !dbg !1637
  %36 = load i32, i32* @x.25
  %37 = load i32, i32* @y.26
  %38 = sub i32 %36, 1
  %39 = mul i32 %36, %38
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %37, 10
  %43 = or i1 %41, %42
  br i1 %43, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %35, label %76, label %44, !dbg !1638

44:                                               ; preds = %originalBBpart24, %21
  call void @llvm.dbg.declare(metadata i8** %9, metadata !1639, metadata !DIExpression()), !dbg !1641
  %45 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.71, i64 0, i64 0)) #10, !dbg !1642
  store i8* %45, i8** %9, align 8, !dbg !1641
  %46 = load i8*, i8** @file_name, align 8, !dbg !1643
  %47 = icmp ne i8* %46, null, !dbg !1643
  br i1 %47, label %48, label %70, !dbg !1645

48:                                               ; preds = %44
  %49 = load i32, i32* @x.25
  %50 = load i32, i32* @y.26
  %51 = sub i32 %49, 1
  %52 = mul i32 %49, %51
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %50, 10
  %56 = or i1 %54, %55
  br i1 %56, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %48, %originalBB6alteredBB
  %57 = call i32* @__errno_location() #15, !dbg !1646
  %58 = load i32, i32* %57, align 4, !dbg !1646
  %59 = load i8*, i8** @file_name, align 8, !dbg !1647
  %60 = call i8* @quotearg_colon(i8* %59), !dbg !1648
  %61 = load i8*, i8** %9, align 8, !dbg !1649
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %58, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.72, i64 0, i64 0), i8* %60, i8* %61), !dbg !1650
  %62 = load i32, i32* @x.25
  %63 = load i32, i32* @y.26
  %64 = sub i32 %62, 1
  %65 = mul i32 %62, %64
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %63, 10
  %69 = or i1 %67, %68
  br i1 %69, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %74, !dbg !1650

70:                                               ; preds = %44
  %71 = call i32* @__errno_location() #15, !dbg !1651
  %72 = load i32, i32* %71, align 4, !dbg !1651
  %73 = load i8*, i8** %9, align 8, !dbg !1652
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %72, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2.73, i64 0, i64 0), i8* %73), !dbg !1653
  br label %74

74:                                               ; preds = %70, %originalBBpart28
  %75 = load volatile i32, i32* @exit_failure, align 4, !dbg !1654
  call void @_exit(i32 %75) #14, !dbg !1655
  unreachable, !dbg !1655

76:                                               ; preds = %originalBBpart24, %originalBBpart2
  %77 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1656
  %78 = call i32 @close_stream(%struct._IO_FILE* %77), !dbg !1658
  %79 = icmp ne i32 %78, 0, !dbg !1659
  br i1 %79, label %80, label %98, !dbg !1660

80:                                               ; preds = %76
  %81 = load i32, i32* @x.25
  %82 = load i32, i32* @y.26
  %83 = sub i32 %81, 1
  %84 = mul i32 %81, %83
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %82, 10
  %88 = or i1 %86, %87
  br i1 %88, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %80, %originalBB10alteredBB
  %89 = load volatile i32, i32* @exit_failure, align 4, !dbg !1661
  call void @_exit(i32 %89) #14, !dbg !1662
  %90 = load i32, i32* @x.25
  %91 = load i32, i32* @y.26
  %92 = sub i32 %90, 1
  %93 = mul i32 %90, %92
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %91, 10
  %97 = or i1 %95, %96
  br i1 %97, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  unreachable, !dbg !1662

98:                                               ; preds = %76
  %99 = load i32, i32* @x.25
  %100 = load i32, i32* @y.26
  %101 = sub i32 %99, 1
  %102 = mul i32 %99, %101
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %100, 10
  %106 = or i1 %104, %105
  br i1 %106, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %98, %originalBB14alteredBB
  %107 = load i32, i32* @x.25
  %108 = load i32, i32* @y.26
  %109 = sub i32 %107, 1
  %110 = mul i32 %107, %109
  %111 = urem i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = icmp slt i32 %108, 10
  %114 = or i1 %112, %113
  br i1 %114, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  ret void, !dbg !1663

originalBBalteredBB:                              ; preds = %originalBB, %0
  %115 = alloca i8*, align 8
  %116 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1629
  %117 = call i32 @close_stream(%struct._IO_FILE* %116), !dbg !1631
  %118 = icmp ne i32 %117, 0, !dbg !1632
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %24
  %119 = call i32* @__errno_location() #15, !dbg !1636
  %120 = load i32, i32* %119, align 4, !dbg !1636
  %121 = icmp eq i32 %120, 32, !dbg !1637
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %48
  %122 = call i32* @__errno_location() #15, !dbg !1646
  %123 = load i32, i32* %122, align 4, !dbg !1646
  %124 = load i8*, i8** @file_name, align 8, !dbg !1647
  %125 = call i8* @quotearg_colon(i8* %124), !dbg !1648
  %126 = load i8*, i8** %9, align 8, !dbg !1649
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %123, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.72, i64 0, i64 0), i8* %125, i8* %126), !dbg !1650
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %80
  %127 = load volatile i32, i32* @exit_failure, align 4, !dbg !1661
  call void @_exit(i32 %127) #14, !dbg !1662
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %98
  br label %originalBB14
}

; Function Attrs: noreturn
declare dso_local void @_exit(i32) #9

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @umaxtostr(i64, i8*) #4 !dbg !1664 {
  %3 = load i32, i32* @x.27
  %4 = load i32, i32* @y.28
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca i64, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i8*, align 8
  store i64 %0, i64* %11, align 8
  call void @llvm.dbg.declare(metadata i64* %11, metadata !1668, metadata !DIExpression()), !dbg !1669
  store i8* %1, i8** %12, align 8
  call void @llvm.dbg.declare(metadata i8** %12, metadata !1670, metadata !DIExpression()), !dbg !1671
  call void @llvm.dbg.declare(metadata i8** %13, metadata !1672, metadata !DIExpression()), !dbg !1673
  %14 = load i8*, i8** %12, align 8, !dbg !1674
  %15 = getelementptr inbounds i8, i8* %14, i64 20, !dbg !1675
  store i8* %15, i8** %13, align 8, !dbg !1673
  %16 = load i8*, i8** %13, align 8, !dbg !1676
  store i8 0, i8* %16, align 1, !dbg !1677
  %17 = load i64, i64* %11, align 8, !dbg !1678
  %18 = icmp ult i64 %17, 0, !dbg !1680
  %19 = load i32, i32* @x.27
  %20 = load i32, i32* @y.28
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %18, label %27, label %74, !dbg !1681

27:                                               ; preds = %originalBBpart2
  %28 = load i32, i32* @x.27
  %29 = load i32, i32* @y.28
  %30 = sub i32 %28, 1
  %31 = mul i32 %28, %30
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %33, %34
  br i1 %35, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %27, %originalBB1alteredBB
  %36 = load i32, i32* @x.27
  %37 = load i32, i32* @y.28
  %38 = sub i32 %36, 1
  %39 = mul i32 %36, %38
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %37, 10
  %43 = or i1 %41, %42
  br i1 %43, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %44, !dbg !1682

44:                                               ; preds = %originalBBpart221, %originalBBpart24
  %45 = load i64, i64* %11, align 8, !dbg !1684
  %46 = urem i64 %45, 10, !dbg !1685
  %47 = sub i64 48, %46, !dbg !1686
  %48 = trunc i64 %47 to i8, !dbg !1687
  %49 = load i8*, i8** %13, align 8, !dbg !1688
  %50 = getelementptr inbounds i8, i8* %49, i32 -1, !dbg !1688
  store i8* %50, i8** %13, align 8, !dbg !1688
  store i8 %48, i8* %50, align 1, !dbg !1689
  br label %51, !dbg !1690

51:                                               ; preds = %44
  %52 = load i32, i32* @x.27
  %53 = load i32, i32* @y.28
  %54 = sub i32 %52, 1
  %55 = mul i32 %52, %54
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %53, 10
  %59 = or i1 %57, %58
  br i1 %59, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %51, %originalBB6alteredBB
  %60 = load i64, i64* %11, align 8, !dbg !1691
  %61 = udiv i64 %60, 10, !dbg !1691
  store i64 %61, i64* %11, align 8, !dbg !1691
  %62 = icmp ne i64 %61, 0, !dbg !1692
  %63 = load i32, i32* @x.27
  %64 = load i32, i32* @y.28
  %65 = sub i32 %63, 1
  %66 = mul i32 %63, %65
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %64, 10
  %70 = or i1 %68, %69
  br i1 %70, label %originalBBpart221, label %originalBB6alteredBB

originalBBpart221:                                ; preds = %originalBB6
  br i1 %62, label %44, label %71, !dbg !1690, !llvm.loop !1693

71:                                               ; preds = %originalBBpart221
  %72 = load i8*, i8** %13, align 8, !dbg !1695
  %73 = getelementptr inbounds i8, i8* %72, i32 -1, !dbg !1695
  store i8* %73, i8** %13, align 8, !dbg !1695
  store i8 45, i8* %73, align 1, !dbg !1696
  br label %151, !dbg !1697

74:                                               ; preds = %originalBBpart2
  %75 = load i32, i32* @x.27
  %76 = load i32, i32* @y.28
  %77 = sub i32 %75, 1
  %78 = mul i32 %75, %77
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %76, 10
  %82 = or i1 %80, %81
  br i1 %82, label %originalBB23, label %originalBB23alteredBB

originalBB23:                                     ; preds = %74, %originalBB23alteredBB
  %83 = load i32, i32* @x.27
  %84 = load i32, i32* @y.28
  %85 = sub i32 %83, 1
  %86 = mul i32 %83, %85
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %84, 10
  %90 = or i1 %88, %89
  br i1 %90, label %originalBBpart225, label %originalBB23alteredBB

originalBBpart225:                                ; preds = %originalBB23
  br label %91, !dbg !1698

91:                                               ; preds = %originalBBpart245, %originalBBpart225
  %92 = load i32, i32* @x.27
  %93 = load i32, i32* @y.28
  %94 = sub i32 %92, 1
  %95 = mul i32 %92, %94
  %96 = urem i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %93, 10
  %99 = or i1 %97, %98
  br i1 %99, label %originalBB27, label %originalBB27alteredBB

originalBB27:                                     ; preds = %91, %originalBB27alteredBB
  %100 = load i64, i64* %11, align 8, !dbg !1700
  %101 = urem i64 %100, 10, !dbg !1701
  %102 = add i64 48, %101, !dbg !1702
  %103 = trunc i64 %102 to i8, !dbg !1703
  %104 = load i8*, i8** %13, align 8, !dbg !1704
  %105 = getelementptr inbounds i8, i8* %104, i32 -1, !dbg !1704
  store i8* %105, i8** %13, align 8, !dbg !1704
  store i8 %103, i8* %105, align 1, !dbg !1705
  %106 = load i32, i32* @x.27
  %107 = load i32, i32* @y.28
  %108 = sub i32 %106, 1
  %109 = mul i32 %106, %108
  %110 = urem i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %107, 10
  %113 = or i1 %111, %112
  br i1 %113, label %originalBBpart237, label %originalBB27alteredBB

originalBBpart237:                                ; preds = %originalBB27
  br label %114, !dbg !1706

114:                                              ; preds = %originalBBpart237
  %115 = load i32, i32* @x.27
  %116 = load i32, i32* @y.28
  %117 = sub i32 %115, 1
  %118 = mul i32 %115, %117
  %119 = urem i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = icmp slt i32 %116, 10
  %122 = or i1 %120, %121
  br i1 %122, label %originalBB39, label %originalBB39alteredBB

originalBB39:                                     ; preds = %114, %originalBB39alteredBB
  %123 = load i64, i64* %11, align 8, !dbg !1707
  %124 = udiv i64 %123, 10, !dbg !1707
  store i64 %124, i64* %11, align 8, !dbg !1707
  %125 = icmp ne i64 %124, 0, !dbg !1708
  %126 = load i32, i32* @x.27
  %127 = load i32, i32* @y.28
  %128 = sub i32 %126, 1
  %129 = mul i32 %126, %128
  %130 = urem i32 %129, 2
  %131 = icmp eq i32 %130, 0
  %132 = icmp slt i32 %127, 10
  %133 = or i1 %131, %132
  br i1 %133, label %originalBBpart245, label %originalBB39alteredBB

originalBBpart245:                                ; preds = %originalBB39
  br i1 %125, label %91, label %134, !dbg !1706, !llvm.loop !1709

134:                                              ; preds = %originalBBpart245
  %135 = load i32, i32* @x.27
  %136 = load i32, i32* @y.28
  %137 = sub i32 %135, 1
  %138 = mul i32 %135, %137
  %139 = urem i32 %138, 2
  %140 = icmp eq i32 %139, 0
  %141 = icmp slt i32 %136, 10
  %142 = or i1 %140, %141
  br i1 %142, label %originalBB47, label %originalBB47alteredBB

originalBB47:                                     ; preds = %134, %originalBB47alteredBB
  %143 = load i32, i32* @x.27
  %144 = load i32, i32* @y.28
  %145 = sub i32 %143, 1
  %146 = mul i32 %143, %145
  %147 = urem i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = icmp slt i32 %144, 10
  %150 = or i1 %148, %149
  br i1 %150, label %originalBBpart249, label %originalBB47alteredBB

originalBBpart249:                                ; preds = %originalBB47
  br label %151

151:                                              ; preds = %originalBBpart249, %71
  %152 = load i8*, i8** %13, align 8, !dbg !1711
  ret i8* %152, !dbg !1712

originalBBalteredBB:                              ; preds = %originalBB, %2
  %153 = alloca i64, align 8
  %154 = alloca i8*, align 8
  %155 = alloca i8*, align 8
  store i64 %0, i64* %153, align 8
  call void @llvm.dbg.declare(metadata i64* %153, metadata !1713, metadata !DIExpression()), !dbg !1669
  store i8* %1, i8** %154, align 8
  call void @llvm.dbg.declare(metadata i8** %154, metadata !1716, metadata !DIExpression()), !dbg !1671
  call void @llvm.dbg.declare(metadata i8** %155, metadata !1717, metadata !DIExpression()), !dbg !1673
  %156 = load i8*, i8** %154, align 8, !dbg !1674
  %157 = getelementptr inbounds i8, i8* %156, i64 20, !dbg !1675
  store i8* %157, i8** %155, align 8, !dbg !1673
  %158 = load i8*, i8** %155, align 8, !dbg !1676
  store i8 0, i8* %158, align 1, !dbg !1677
  %159 = load i64, i64* %153, align 8, !dbg !1678
  %160 = icmp ult i64 %159, 0, !dbg !1680
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %27
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %51
  %161 = load i64, i64* %11, align 8, !dbg !1691
  %_ = sub i64 %161, 10
  %gen = mul i64 %_, 10
  %_7 = sub i64 %161, 10
  %gen8 = mul i64 %_7, 10
  %_9 = sub i64 0, %161
  %gen10 = add i64 %_9, 10
  %_11 = shl i64 %161, 10
  %_12 = shl i64 %161, 10
  %_13 = sub i64 0, %161
  %gen14 = add i64 %_13, 10
  %_15 = sub i64 %161, 10
  %gen16 = mul i64 %_15, 10
  %_17 = shl i64 %161, 10
  %_18 = sub i64 %161, 10
  %gen19 = mul i64 %_18, 10
  %162 = udiv i64 %161, 10, !dbg !1691
  store i64 %162, i64* %11, align 8, !dbg !1691
  %163 = icmp ne i64 %162, 0, !dbg !1692
  br label %originalBB6

originalBB23alteredBB:                            ; preds = %originalBB23, %74
  br label %originalBB23

originalBB27alteredBB:                            ; preds = %originalBB27, %91
  %164 = load i64, i64* %11, align 8, !dbg !1700
  %_28 = sub i64 %164, 10
  %gen29 = mul i64 %_28, 10
  %_30 = sub i64 %164, 10
  %gen31 = mul i64 %_30, 10
  %165 = urem i64 %164, 10, !dbg !1701
  %_32 = shl i64 48, %165
  %_33 = shl i64 48, %165
  %_34 = sub i64 0, 48
  %gen35 = add i64 %_34, %165
  %166 = add i64 48, %165, !dbg !1702
  %167 = trunc i64 %166 to i8, !dbg !1703
  %168 = load i8*, i8** %13, align 8, !dbg !1704
  %169 = getelementptr inbounds i8, i8* %168, i32 -1, !dbg !1704
  store i8* %169, i8** %13, align 8, !dbg !1704
  store i8 %167, i8* %169, align 1, !dbg !1705
  br label %originalBB27

originalBB39alteredBB:                            ; preds = %originalBB39, %114
  %170 = load i64, i64* %11, align 8, !dbg !1707
  %_40 = sub i64 0, %170
  %gen41 = add i64 %_40, 10
  %_42 = shl i64 %170, 10
  %_43 = shl i64 %170, 10
  %171 = udiv i64 %170, 10, !dbg !1707
  store i64 %171, i64* %11, align 8, !dbg !1707
  %172 = icmp ne i64 %171, 0, !dbg !1708
  br label %originalBB39

originalBB47alteredBB:                            ; preds = %originalBB47, %134
  br label %originalBB47
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @set_program_name(i8*) #4 !dbg !1718 {
  %2 = load i32, i32* @x.29
  %3 = load i32, i32* @y.30
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  store i8* %0, i8** %10, align 8
  call void @llvm.dbg.declare(metadata i8** %10, metadata !1719, metadata !DIExpression()), !dbg !1720
  call void @llvm.dbg.declare(metadata i8** %11, metadata !1721, metadata !DIExpression()), !dbg !1722
  call void @llvm.dbg.declare(metadata i8** %12, metadata !1723, metadata !DIExpression()), !dbg !1724
  %13 = load i8*, i8** %10, align 8, !dbg !1725
  %14 = icmp eq i8* %13, null, !dbg !1727
  %15 = load i32, i32* @x.29
  %16 = load i32, i32* @y.30
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %14, label %23, label %42, !dbg !1728

23:                                               ; preds = %originalBBpart2
  %24 = load i32, i32* @x.29
  %25 = load i32, i32* @y.30
  %26 = sub i32 %24, 1
  %27 = mul i32 %24, %26
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %29, %30
  br i1 %31, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %23, %originalBB1alteredBB
  %32 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1729
  %33 = call i32 @fputs(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.80, i64 0, i64 0), %struct._IO_FILE* %32), !dbg !1731
  call void @abort() #12, !dbg !1732
  %34 = load i32, i32* @x.29
  %35 = load i32, i32* @y.30
  %36 = sub i32 %34, 1
  %37 = mul i32 %34, %36
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %39, %40
  br i1 %41, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  unreachable, !dbg !1732

42:                                               ; preds = %originalBBpart2
  %43 = load i8*, i8** %10, align 8, !dbg !1733
  %44 = call i8* @strrchr(i8* %43, i32 47) #13, !dbg !1734
  store i8* %44, i8** %11, align 8, !dbg !1735
  %45 = load i8*, i8** %11, align 8, !dbg !1736
  %46 = icmp ne i8* %45, null, !dbg !1737
  br i1 %46, label %47, label %50, !dbg !1736

47:                                               ; preds = %42
  %48 = load i8*, i8** %11, align 8, !dbg !1738
  %49 = getelementptr inbounds i8, i8* %48, i64 1, !dbg !1739
  br label %52, !dbg !1736

50:                                               ; preds = %42
  %51 = load i8*, i8** %10, align 8, !dbg !1740
  br label %52, !dbg !1736

52:                                               ; preds = %50, %47
  %53 = phi i8* [ %49, %47 ], [ %51, %50 ], !dbg !1736
  %54 = load i32, i32* @x.29
  %55 = load i32, i32* @y.30
  %56 = sub i32 %54, 1
  %57 = mul i32 %54, %56
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %55, 10
  %61 = or i1 %59, %60
  br i1 %61, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %52, %originalBB6alteredBB
  store i8* %53, i8** %12, align 8, !dbg !1741
  %62 = load i8*, i8** %12, align 8, !dbg !1742
  %63 = load i8*, i8** %10, align 8, !dbg !1744
  %64 = ptrtoint i8* %62 to i64, !dbg !1745
  %65 = ptrtoint i8* %63 to i64, !dbg !1745
  %66 = sub i64 %64, %65, !dbg !1745
  %67 = icmp sge i64 %66, 7, !dbg !1746
  %68 = load i32, i32* @x.29
  %69 = load i32, i32* @y.30
  %70 = sub i32 %68, 1
  %71 = mul i32 %68, %70
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %69, 10
  %75 = or i1 %73, %74
  br i1 %75, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %67, label %76, label %139, !dbg !1747

76:                                               ; preds = %originalBBpart28
  %77 = load i32, i32* @x.29
  %78 = load i32, i32* @y.30
  %79 = sub i32 %77, 1
  %80 = mul i32 %77, %79
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %78, 10
  %84 = or i1 %82, %83
  br i1 %84, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %76, %originalBB10alteredBB
  %85 = load i8*, i8** %12, align 8, !dbg !1748
  %86 = getelementptr inbounds i8, i8* %85, i64 -7, !dbg !1749
  %87 = call i32 @strncmp(i8* %86, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.81, i64 0, i64 0), i64 7) #13, !dbg !1750
  %88 = icmp eq i32 %87, 0, !dbg !1751
  %89 = load i32, i32* @x.29
  %90 = load i32, i32* @y.30
  %91 = sub i32 %89, 1
  %92 = mul i32 %89, %91
  %93 = urem i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %90, 10
  %96 = or i1 %94, %95
  br i1 %96, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %88, label %97, label %139, !dbg !1752

97:                                               ; preds = %originalBBpart212
  %98 = load i8*, i8** %12, align 8, !dbg !1753
  store i8* %98, i8** %10, align 8, !dbg !1755
  %99 = load i8*, i8** %12, align 8, !dbg !1756
  %100 = call i32 @strncmp(i8* %99, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.82, i64 0, i64 0), i64 3) #13, !dbg !1758
  %101 = icmp eq i32 %100, 0, !dbg !1759
  br i1 %101, label %102, label %122, !dbg !1760

102:                                              ; preds = %97
  %103 = load i32, i32* @x.29
  %104 = load i32, i32* @y.30
  %105 = sub i32 %103, 1
  %106 = mul i32 %103, %105
  %107 = urem i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %104, 10
  %110 = or i1 %108, %109
  br i1 %110, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %102, %originalBB14alteredBB
  %111 = load i8*, i8** %12, align 8, !dbg !1761
  %112 = getelementptr inbounds i8, i8* %111, i64 3, !dbg !1763
  store i8* %112, i8** %10, align 8, !dbg !1764
  %113 = load i8*, i8** %10, align 8, !dbg !1765
  store i8* %113, i8** @program_invocation_short_name, align 8, !dbg !1766
  %114 = load i32, i32* @x.29
  %115 = load i32, i32* @y.30
  %116 = sub i32 %114, 1
  %117 = mul i32 %114, %116
  %118 = urem i32 %117, 2
  %119 = icmp eq i32 %118, 0
  %120 = icmp slt i32 %115, 10
  %121 = or i1 %119, %120
  br i1 %121, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %122, !dbg !1767

122:                                              ; preds = %originalBBpart216, %97
  %123 = load i32, i32* @x.29
  %124 = load i32, i32* @y.30
  %125 = sub i32 %123, 1
  %126 = mul i32 %123, %125
  %127 = urem i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %124, 10
  %130 = or i1 %128, %129
  br i1 %130, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %122, %originalBB18alteredBB
  %131 = load i32, i32* @x.29
  %132 = load i32, i32* @y.30
  %133 = sub i32 %131, 1
  %134 = mul i32 %131, %133
  %135 = urem i32 %134, 2
  %136 = icmp eq i32 %135, 0
  %137 = icmp slt i32 %132, 10
  %138 = or i1 %136, %137
  br i1 %138, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %139, !dbg !1768

139:                                              ; preds = %originalBBpart220, %originalBBpart212, %originalBBpart28
  %140 = load i32, i32* @x.29
  %141 = load i32, i32* @y.30
  %142 = sub i32 %140, 1
  %143 = mul i32 %140, %142
  %144 = urem i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = icmp slt i32 %141, 10
  %147 = or i1 %145, %146
  br i1 %147, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %139, %originalBB22alteredBB
  %148 = load i8*, i8** %10, align 8, !dbg !1769
  store i8* %148, i8** @program_name, align 8, !dbg !1770
  %149 = load i8*, i8** %10, align 8, !dbg !1771
  store i8* %149, i8** @program_invocation_name, align 8, !dbg !1772
  %150 = load i32, i32* @x.29
  %151 = load i32, i32* @y.30
  %152 = sub i32 %150, 1
  %153 = mul i32 %150, %152
  %154 = urem i32 %153, 2
  %155 = icmp eq i32 %154, 0
  %156 = icmp slt i32 %151, 10
  %157 = or i1 %155, %156
  br i1 %157, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  ret void, !dbg !1773

originalBBalteredBB:                              ; preds = %originalBB, %1
  %158 = alloca i8*, align 8
  %159 = alloca i8*, align 8
  %160 = alloca i8*, align 8
  store i8* %0, i8** %158, align 8
  call void @llvm.dbg.declare(metadata i8** %158, metadata !1774, metadata !DIExpression()), !dbg !1720
  call void @llvm.dbg.declare(metadata i8** %159, metadata !1780, metadata !DIExpression()), !dbg !1722
  call void @llvm.dbg.declare(metadata i8** %160, metadata !1781, metadata !DIExpression()), !dbg !1724
  %161 = load i8*, i8** %158, align 8, !dbg !1725
  %162 = icmp eq i8* %161, null, !dbg !1727
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %23
  %163 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1729
  %164 = call i32 @fputs(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.80, i64 0, i64 0), %struct._IO_FILE* %163), !dbg !1731
  call void @abort() #12, !dbg !1732
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %52
  store i8* %53, i8** %12, align 8, !dbg !1741
  %165 = load i8*, i8** %12, align 8, !dbg !1742
  %166 = load i8*, i8** %10, align 8, !dbg !1744
  %167 = ptrtoint i8* %165 to i64, !dbg !1745
  %168 = ptrtoint i8* %166 to i64, !dbg !1745
  %_ = sub i64 %167, %168
  %gen = mul i64 %_, %168
  %169 = sub i64 %167, %168, !dbg !1745
  %170 = icmp sge i64 %169, 7, !dbg !1746
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %76
  %171 = load i8*, i8** %12, align 8, !dbg !1748
  %172 = getelementptr inbounds i8, i8* %171, i64 -7, !dbg !1749
  %173 = call i32 @strncmp(i8* %172, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.81, i64 0, i64 0), i64 7) #13, !dbg !1750
  %174 = icmp eq i32 %173, 0, !dbg !1751
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %102
  %175 = load i8*, i8** %12, align 8, !dbg !1761
  %176 = getelementptr inbounds i8, i8* %175, i64 3, !dbg !1763
  store i8* %176, i8** %10, align 8, !dbg !1764
  %177 = load i8*, i8** %10, align 8, !dbg !1765
  store i8* %177, i8** @program_invocation_short_name, align 8, !dbg !1766
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %122
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %139
  %178 = load i8*, i8** %10, align 8, !dbg !1769
  store i8* %178, i8** @program_name, align 8, !dbg !1770
  %179 = load i8*, i8** %10, align 8, !dbg !1771
  store i8* %179, i8** @program_invocation_name, align 8, !dbg !1772
  br label %originalBB22
}

declare dso_local i32 @fputs(i8*, %struct._IO_FILE*) #3

; Function Attrs: noreturn nounwind
declare dso_local void @abort() #5

; Function Attrs: nounwind readonly
declare dso_local i8* @strrchr(i8*, i32) #7

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @set_char_quoting(%struct.quoting_options*, i8 signext, i32) #4 !dbg !1782 {
  %4 = load i32, i32* @x.31
  %5 = load i32, i32* @y.32
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %struct.quoting_options*, align 8
  %13 = alloca i8, align 1
  %14 = alloca i32, align 4
  %15 = alloca i8, align 1
  %16 = alloca i32*, align 8
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  store %struct.quoting_options* %0, %struct.quoting_options** %12, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %12, metadata !1786, metadata !DIExpression()), !dbg !1787
  store i8 %1, i8* %13, align 1
  call void @llvm.dbg.declare(metadata i8* %13, metadata !1788, metadata !DIExpression()), !dbg !1789
  store i32 %2, i32* %14, align 4
  call void @llvm.dbg.declare(metadata i32* %14, metadata !1790, metadata !DIExpression()), !dbg !1791
  call void @llvm.dbg.declare(metadata i8* %15, metadata !1792, metadata !DIExpression()), !dbg !1793
  %19 = load i8, i8* %13, align 1, !dbg !1794
  store i8 %19, i8* %15, align 1, !dbg !1793
  call void @llvm.dbg.declare(metadata i32** %16, metadata !1795, metadata !DIExpression()), !dbg !1797
  %20 = load %struct.quoting_options*, %struct.quoting_options** %12, align 8, !dbg !1798
  %21 = icmp ne %struct.quoting_options* %20, null, !dbg !1798
  %22 = load i32, i32* @x.31
  %23 = load i32, i32* @y.32
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %21, label %30, label %48, !dbg !1798

30:                                               ; preds = %originalBBpart2
  %31 = load i32, i32* @x.31
  %32 = load i32, i32* @y.32
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %30, %originalBB1alteredBB
  %39 = load %struct.quoting_options*, %struct.quoting_options** %12, align 8, !dbg !1799
  %40 = load i32, i32* @x.31
  %41 = load i32, i32* @y.32
  %42 = sub i32 %40, 1
  %43 = mul i32 %40, %42
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %45, %46
  br i1 %47, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %65, !dbg !1798

48:                                               ; preds = %originalBBpart2
  %49 = load i32, i32* @x.31
  %50 = load i32, i32* @y.32
  %51 = sub i32 %49, 1
  %52 = mul i32 %49, %51
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %50, 10
  %56 = or i1 %54, %55
  br i1 %56, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %48, %originalBB6alteredBB
  %57 = load i32, i32* @x.31
  %58 = load i32, i32* @y.32
  %59 = sub i32 %57, 1
  %60 = mul i32 %57, %59
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %58, 10
  %64 = or i1 %62, %63
  br i1 %64, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %65, !dbg !1798

65:                                               ; preds = %originalBBpart28, %originalBBpart24
  %66 = phi %struct.quoting_options* [ %39, %originalBBpart24 ], [ @default_quoting_options, %originalBBpart28 ], !dbg !1798
  %67 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %66, i32 0, i32 2, !dbg !1800
  %68 = getelementptr inbounds [8 x i32], [8 x i32]* %67, i64 0, i64 0, !dbg !1801
  %69 = load i8, i8* %15, align 1, !dbg !1802
  %70 = zext i8 %69 to i64, !dbg !1802
  %71 = udiv i64 %70, 32, !dbg !1803
  %72 = getelementptr inbounds i32, i32* %68, i64 %71, !dbg !1804
  store i32* %72, i32** %16, align 8, !dbg !1797
  call void @llvm.dbg.declare(metadata i32* %17, metadata !1805, metadata !DIExpression()), !dbg !1806
  %73 = load i8, i8* %15, align 1, !dbg !1807
  %74 = zext i8 %73 to i64, !dbg !1807
  %75 = urem i64 %74, 32, !dbg !1808
  %76 = trunc i64 %75 to i32, !dbg !1807
  store i32 %76, i32* %17, align 4, !dbg !1806
  call void @llvm.dbg.declare(metadata i32* %18, metadata !1809, metadata !DIExpression()), !dbg !1810
  %77 = load i32*, i32** %16, align 8, !dbg !1811
  %78 = load i32, i32* %77, align 4, !dbg !1812
  %79 = load i32, i32* %17, align 4, !dbg !1813
  %80 = lshr i32 %78, %79, !dbg !1814
  %81 = and i32 %80, 1, !dbg !1815
  store i32 %81, i32* %18, align 4, !dbg !1810
  %82 = load i32, i32* %14, align 4, !dbg !1816
  %83 = and i32 %82, 1, !dbg !1817
  %84 = load i32, i32* %18, align 4, !dbg !1818
  %85 = xor i32 %83, %84, !dbg !1819
  %86 = load i32, i32* %17, align 4, !dbg !1820
  %87 = shl i32 %85, %86, !dbg !1821
  %88 = load i32*, i32** %16, align 8, !dbg !1822
  %89 = load i32, i32* %88, align 4, !dbg !1823
  %90 = xor i32 %89, %87, !dbg !1823
  store i32 %90, i32* %88, align 4, !dbg !1823
  %91 = load i32, i32* %18, align 4, !dbg !1824
  ret i32 %91, !dbg !1825

originalBBalteredBB:                              ; preds = %originalBB, %3
  %92 = alloca %struct.quoting_options*, align 8
  %93 = alloca i8, align 1
  %94 = alloca i32, align 4
  %95 = alloca i8, align 1
  %96 = alloca i32*, align 8
  %97 = alloca i32, align 4
  %98 = alloca i32, align 4
  store %struct.quoting_options* %0, %struct.quoting_options** %92, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %92, metadata !1826, metadata !DIExpression()), !dbg !1787
  store i8 %1, i8* %93, align 1
  call void @llvm.dbg.declare(metadata i8* %93, metadata !1861, metadata !DIExpression()), !dbg !1789
  store i32 %2, i32* %94, align 4
  call void @llvm.dbg.declare(metadata i32* %94, metadata !1862, metadata !DIExpression()), !dbg !1791
  call void @llvm.dbg.declare(metadata i8* %95, metadata !1863, metadata !DIExpression()), !dbg !1793
  %99 = load i8, i8* %93, align 1, !dbg !1794
  store i8 %99, i8* %95, align 1, !dbg !1793
  call void @llvm.dbg.declare(metadata i32** %96, metadata !1864, metadata !DIExpression()), !dbg !1797
  %100 = load %struct.quoting_options*, %struct.quoting_options** %92, align 8, !dbg !1798
  %101 = icmp ne %struct.quoting_options* %100, null, !dbg !1798
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %30
  %102 = load %struct.quoting_options*, %struct.quoting_options** %12, align 8, !dbg !1799
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %48
  br label %originalBB6
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quotearg_char_mem(i8*, i64, i8 signext) #4 !dbg !1865 {
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8, align 1
  %7 = alloca %struct.quoting_options, align 8
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !1868, metadata !DIExpression()), !dbg !1869
  store i64 %1, i64* %5, align 8
  call void @llvm.dbg.declare(metadata i64* %5, metadata !1870, metadata !DIExpression()), !dbg !1871
  store i8 %2, i8* %6, align 1
  call void @llvm.dbg.declare(metadata i8* %6, metadata !1872, metadata !DIExpression()), !dbg !1873
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %7, metadata !1874, metadata !DIExpression()), !dbg !1875
  %8 = bitcast %struct.quoting_options* %7 to i8*, !dbg !1876
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 bitcast (%struct.quoting_options* @default_quoting_options to i8*), i64 56, i1 false), !dbg !1876
  %9 = load i8, i8* %6, align 1, !dbg !1877
  %10 = call i32 @set_char_quoting(%struct.quoting_options* %7, i8 signext %9, i32 1), !dbg !1878
  %11 = load i8*, i8** %4, align 8, !dbg !1879
  %12 = load i64, i64* %5, align 8, !dbg !1880
  %13 = call i8* @quotearg_n_options(i32 0, i8* %11, i64 %12, %struct.quoting_options* %7), !dbg !1881
  ret i8* %13, !dbg !1882
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quotearg_n_options(i32, i8*, i64, %struct.quoting_options*) #4 !dbg !1883 {
  %5 = load i32, i32* @x.35
  %6 = load i32, i32* @y.36
  %7 = sub i32 %5, 1
  %8 = mul i32 %5, %7
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %6, 10
  %12 = or i1 %10, %11
  br i1 %12, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %4, %originalBBalteredBB
  %13 = alloca i32, align 4
  %14 = alloca i8*, align 8
  %15 = alloca i64, align 8
  %16 = alloca %struct.quoting_options*, align 8
  %17 = alloca i32, align 4
  %18 = alloca %struct.slotvec*, align 8
  %19 = alloca i8, align 1
  %20 = alloca i32, align 4
  %21 = alloca i64, align 8
  %22 = alloca i8*, align 8
  %23 = alloca i32, align 4
  %24 = alloca i64, align 8
  store i32 %0, i32* %13, align 4
  call void @llvm.dbg.declare(metadata i32* %13, metadata !1888, metadata !DIExpression()), !dbg !1889
  store i8* %1, i8** %14, align 8
  call void @llvm.dbg.declare(metadata i8** %14, metadata !1890, metadata !DIExpression()), !dbg !1891
  store i64 %2, i64* %15, align 8
  call void @llvm.dbg.declare(metadata i64* %15, metadata !1892, metadata !DIExpression()), !dbg !1893
  store %struct.quoting_options* %3, %struct.quoting_options** %16, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %16, metadata !1894, metadata !DIExpression()), !dbg !1895
  call void @llvm.dbg.declare(metadata i32* %17, metadata !1896, metadata !DIExpression()), !dbg !1897
  %25 = call i32* @__errno_location() #15, !dbg !1898
  %26 = load i32, i32* %25, align 4, !dbg !1898
  store i32 %26, i32* %17, align 4, !dbg !1897
  call void @llvm.dbg.declare(metadata %struct.slotvec** %18, metadata !1899, metadata !DIExpression()), !dbg !1900
  %27 = load %struct.slotvec*, %struct.slotvec** @slotvec, align 8, !dbg !1901
  store %struct.slotvec* %27, %struct.slotvec** %18, align 8, !dbg !1900
  %28 = load i32, i32* %13, align 4, !dbg !1902
  %29 = icmp slt i32 %28, 0, !dbg !1904
  %30 = load i32, i32* @x.35
  %31 = load i32, i32* @y.36
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %29, label %38, label %39, !dbg !1905

38:                                               ; preds = %originalBBpart2
  call void @abort() #12, !dbg !1906
  unreachable, !dbg !1906

39:                                               ; preds = %originalBBpart2
  %40 = load i32, i32* @x.35
  %41 = load i32, i32* @y.36
  %42 = sub i32 %40, 1
  %43 = mul i32 %40, %42
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %45, %46
  br i1 %47, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %39, %originalBB1alteredBB
  %48 = load i32, i32* @nslots, align 4, !dbg !1907
  %49 = load i32, i32* %13, align 4, !dbg !1909
  %50 = icmp sle i32 %48, %49, !dbg !1910
  %51 = load i32, i32* @x.35
  %52 = load i32, i32* @y.36
  %53 = sub i32 %51, 1
  %54 = mul i32 %51, %53
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %52, 10
  %58 = or i1 %56, %57
  br i1 %58, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %50, label %59, label %197, !dbg !1911

59:                                               ; preds = %originalBBpart24
  call void @llvm.dbg.declare(metadata i8* %19, metadata !1912, metadata !DIExpression()), !dbg !1914
  %60 = load i32, i32* @x.35
  %61 = load i32, i32* @y.36
  %62 = sub i32 %60, 1
  %63 = mul i32 %60, %62
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %61, 10
  %67 = or i1 %65, %66
  br i1 %67, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %59, %originalBB6alteredBB
  %68 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !1915
  %69 = icmp eq %struct.slotvec* %68, @slotvec0, !dbg !1916
  %70 = zext i1 %69 to i8, !dbg !1914
  store i8 %70, i8* %19, align 1, !dbg !1914
  call void @llvm.dbg.declare(metadata i32* %20, metadata !1917, metadata !DIExpression()), !dbg !1918
  store i32 2147483646, i32* %20, align 4, !dbg !1918
  %71 = load i32, i32* %20, align 4, !dbg !1919
  %72 = load i32, i32* %13, align 4, !dbg !1921
  %73 = icmp slt i32 %71, %72, !dbg !1922
  %74 = load i32, i32* @x.35
  %75 = load i32, i32* @y.36
  %76 = sub i32 %74, 1
  %77 = mul i32 %74, %76
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %75, 10
  %81 = or i1 %79, %80
  br i1 %81, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %73, label %82, label %83, !dbg !1923

82:                                               ; preds = %originalBBpart28
  call void @xalloc_die() #14, !dbg !1924
  unreachable, !dbg !1924

83:                                               ; preds = %originalBBpart28
  %84 = load i8, i8* %19, align 1, !dbg !1925
  %85 = trunc i8 %84 to i1, !dbg !1925
  br i1 %85, label %86, label %103, !dbg !1925

86:                                               ; preds = %83
  %87 = load i32, i32* @x.35
  %88 = load i32, i32* @y.36
  %89 = sub i32 %87, 1
  %90 = mul i32 %87, %89
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %88, 10
  %94 = or i1 %92, %93
  br i1 %94, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %86, %originalBB10alteredBB
  %95 = load i32, i32* @x.35
  %96 = load i32, i32* @y.36
  %97 = sub i32 %95, 1
  %98 = mul i32 %95, %97
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %96, 10
  %102 = or i1 %100, %101
  br i1 %102, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %121, !dbg !1925

103:                                              ; preds = %83
  %104 = load i32, i32* @x.35
  %105 = load i32, i32* @y.36
  %106 = sub i32 %104, 1
  %107 = mul i32 %104, %106
  %108 = urem i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = icmp slt i32 %105, 10
  %111 = or i1 %109, %110
  br i1 %111, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %103, %originalBB14alteredBB
  %112 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !1926
  %113 = load i32, i32* @x.35
  %114 = load i32, i32* @y.36
  %115 = sub i32 %113, 1
  %116 = mul i32 %113, %115
  %117 = urem i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = icmp slt i32 %114, 10
  %120 = or i1 %118, %119
  br i1 %120, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %121, !dbg !1925

121:                                              ; preds = %originalBBpart216, %originalBBpart212
  %122 = phi %struct.slotvec* [ null, %originalBBpart212 ], [ %112, %originalBBpart216 ], !dbg !1925
  %123 = load i32, i32* @x.35
  %124 = load i32, i32* @y.36
  %125 = sub i32 %123, 1
  %126 = mul i32 %123, %125
  %127 = urem i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %124, 10
  %130 = or i1 %128, %129
  br i1 %130, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %121, %originalBB18alteredBB
  %131 = bitcast %struct.slotvec* %122 to i8*, !dbg !1925
  %132 = load i32, i32* %13, align 4, !dbg !1927
  %133 = add nsw i32 %132, 1, !dbg !1928
  %134 = sext i32 %133 to i64, !dbg !1929
  %135 = mul i64 %134, 16, !dbg !1930
  %136 = call i8* @xrealloc(i8* %131, i64 %135), !dbg !1931
  %137 = bitcast i8* %136 to %struct.slotvec*, !dbg !1931
  store %struct.slotvec* %137, %struct.slotvec** %18, align 8, !dbg !1932
  store %struct.slotvec* %137, %struct.slotvec** @slotvec, align 8, !dbg !1933
  %138 = load i8, i8* %19, align 1, !dbg !1934
  %139 = trunc i8 %138 to i1, !dbg !1934
  %140 = load i32, i32* @x.35
  %141 = load i32, i32* @y.36
  %142 = sub i32 %140, 1
  %143 = mul i32 %140, %142
  %144 = urem i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = icmp slt i32 %141, 10
  %147 = or i1 %145, %146
  br i1 %147, label %originalBBpart239, label %originalBB18alteredBB

originalBBpart239:                                ; preds = %originalBB18
  br i1 %139, label %148, label %167, !dbg !1936

148:                                              ; preds = %originalBBpart239
  %149 = load i32, i32* @x.35
  %150 = load i32, i32* @y.36
  %151 = sub i32 %149, 1
  %152 = mul i32 %149, %151
  %153 = urem i32 %152, 2
  %154 = icmp eq i32 %153, 0
  %155 = icmp slt i32 %150, 10
  %156 = or i1 %154, %155
  br i1 %156, label %originalBB41, label %originalBB41alteredBB

originalBB41:                                     ; preds = %148, %originalBB41alteredBB
  %157 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !1937
  %158 = bitcast %struct.slotvec* %157 to i8*, !dbg !1938
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %158, i8* align 8 bitcast (%struct.slotvec* @slotvec0 to i8*), i64 16, i1 false), !dbg !1938
  %159 = load i32, i32* @x.35
  %160 = load i32, i32* @y.36
  %161 = sub i32 %159, 1
  %162 = mul i32 %159, %161
  %163 = urem i32 %162, 2
  %164 = icmp eq i32 %163, 0
  %165 = icmp slt i32 %160, 10
  %166 = or i1 %164, %165
  br i1 %166, label %originalBBpart243, label %originalBB41alteredBB

originalBBpart243:                                ; preds = %originalBB41
  br label %167, !dbg !1939

167:                                              ; preds = %originalBBpart243, %originalBBpart239
  %168 = load i32, i32* @x.35
  %169 = load i32, i32* @y.36
  %170 = sub i32 %168, 1
  %171 = mul i32 %168, %170
  %172 = urem i32 %171, 2
  %173 = icmp eq i32 %172, 0
  %174 = icmp slt i32 %169, 10
  %175 = or i1 %173, %174
  br i1 %175, label %originalBB45, label %originalBB45alteredBB

originalBB45:                                     ; preds = %167, %originalBB45alteredBB
  %176 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !1940
  %177 = load i32, i32* @nslots, align 4, !dbg !1941
  %178 = sext i32 %177 to i64, !dbg !1942
  %179 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %176, i64 %178, !dbg !1942
  %180 = bitcast %struct.slotvec* %179 to i8*, !dbg !1943
  %181 = load i32, i32* %13, align 4, !dbg !1944
  %182 = add nsw i32 %181, 1, !dbg !1945
  %183 = load i32, i32* @nslots, align 4, !dbg !1946
  %184 = sub nsw i32 %182, %183, !dbg !1947
  %185 = sext i32 %184 to i64, !dbg !1948
  %186 = mul i64 %185, 16, !dbg !1949
  call void @llvm.memset.p0i8.i64(i8* align 8 %180, i8 0, i64 %186, i1 false), !dbg !1943
  %187 = load i32, i32* %13, align 4, !dbg !1950
  %188 = add nsw i32 %187, 1, !dbg !1951
  store i32 %188, i32* @nslots, align 4, !dbg !1952
  %189 = load i32, i32* @x.35
  %190 = load i32, i32* @y.36
  %191 = sub i32 %189, 1
  %192 = mul i32 %189, %191
  %193 = urem i32 %192, 2
  %194 = icmp eq i32 %193, 0
  %195 = icmp slt i32 %190, 10
  %196 = or i1 %194, %195
  br i1 %196, label %originalBBpart284, label %originalBB45alteredBB

originalBBpart284:                                ; preds = %originalBB45
  br label %197, !dbg !1953

197:                                              ; preds = %originalBBpart284, %originalBBpart24
  call void @llvm.dbg.declare(metadata i64* %21, metadata !1954, metadata !DIExpression()), !dbg !1956
  %198 = load i32, i32* @x.35
  %199 = load i32, i32* @y.36
  %200 = sub i32 %198, 1
  %201 = mul i32 %198, %200
  %202 = urem i32 %201, 2
  %203 = icmp eq i32 %202, 0
  %204 = icmp slt i32 %199, 10
  %205 = or i1 %203, %204
  br i1 %205, label %originalBB86, label %originalBB86alteredBB

originalBB86:                                     ; preds = %197, %originalBB86alteredBB
  %206 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !1957
  %207 = load i32, i32* %13, align 4, !dbg !1958
  %208 = sext i32 %207 to i64, !dbg !1957
  %209 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %206, i64 %208, !dbg !1957
  %210 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %209, i32 0, i32 0, !dbg !1959
  %211 = load i64, i64* %210, align 8, !dbg !1959
  store i64 %211, i64* %21, align 8, !dbg !1956
  call void @llvm.dbg.declare(metadata i8** %22, metadata !1960, metadata !DIExpression()), !dbg !1961
  %212 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !1962
  %213 = load i32, i32* %13, align 4, !dbg !1963
  %214 = sext i32 %213 to i64, !dbg !1962
  %215 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %212, i64 %214, !dbg !1962
  %216 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %215, i32 0, i32 1, !dbg !1964
  %217 = load i8*, i8** %216, align 8, !dbg !1964
  store i8* %217, i8** %22, align 8, !dbg !1961
  call void @llvm.dbg.declare(metadata i32* %23, metadata !1965, metadata !DIExpression()), !dbg !1966
  %218 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !1967
  %219 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %218, i32 0, i32 1, !dbg !1968
  %220 = load i32, i32* %219, align 4, !dbg !1968
  %221 = or i32 %220, 1, !dbg !1969
  store i32 %221, i32* %23, align 4, !dbg !1966
  call void @llvm.dbg.declare(metadata i64* %24, metadata !1970, metadata !DIExpression()), !dbg !1971
  %222 = load i8*, i8** %22, align 8, !dbg !1972
  %223 = load i64, i64* %21, align 8, !dbg !1973
  %224 = load i8*, i8** %14, align 8, !dbg !1974
  %225 = load i64, i64* %15, align 8, !dbg !1975
  %226 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !1976
  %227 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %226, i32 0, i32 0, !dbg !1977
  %228 = load i32, i32* %227, align 8, !dbg !1977
  %229 = load i32, i32* %23, align 4, !dbg !1978
  %230 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !1979
  %231 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %230, i32 0, i32 2, !dbg !1980
  %232 = getelementptr inbounds [8 x i32], [8 x i32]* %231, i64 0, i64 0, !dbg !1979
  %233 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !1981
  %234 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %233, i32 0, i32 3, !dbg !1982
  %235 = load i8*, i8** %234, align 8, !dbg !1982
  %236 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !1983
  %237 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %236, i32 0, i32 4, !dbg !1984
  %238 = load i8*, i8** %237, align 8, !dbg !1984
  %239 = call i64 @quotearg_buffer_restyled(i8* %222, i64 %223, i8* %224, i64 %225, i32 %228, i32 %229, i32* %232, i8* %235, i8* %238), !dbg !1985
  store i64 %239, i64* %24, align 8, !dbg !1971
  %240 = load i64, i64* %21, align 8, !dbg !1986
  %241 = load i64, i64* %24, align 8, !dbg !1988
  %242 = icmp ule i64 %240, %241, !dbg !1989
  %243 = load i32, i32* @x.35
  %244 = load i32, i32* @y.36
  %245 = sub i32 %243, 1
  %246 = mul i32 %243, %245
  %247 = urem i32 %246, 2
  %248 = icmp eq i32 %247, 0
  %249 = icmp slt i32 %244, 10
  %250 = or i1 %248, %249
  br i1 %250, label %originalBBpart297, label %originalBB86alteredBB

originalBBpart297:                                ; preds = %originalBB86
  br i1 %242, label %251, label %305, !dbg !1990

251:                                              ; preds = %originalBBpart297
  %252 = load i64, i64* %24, align 8, !dbg !1991
  %253 = add i64 %252, 1, !dbg !1993
  store i64 %253, i64* %21, align 8, !dbg !1994
  %254 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !1995
  %255 = load i32, i32* %13, align 4, !dbg !1996
  %256 = sext i32 %255 to i64, !dbg !1995
  %257 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %254, i64 %256, !dbg !1995
  %258 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %257, i32 0, i32 0, !dbg !1997
  store i64 %253, i64* %258, align 8, !dbg !1998
  %259 = load i8*, i8** %22, align 8, !dbg !1999
  %260 = icmp ne i8* %259, getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i64 0, i64 0), !dbg !2001
  br i1 %260, label %261, label %263, !dbg !2002

261:                                              ; preds = %251
  %262 = load i8*, i8** %22, align 8, !dbg !2003
  call void @free(i8* %262) #10, !dbg !2004
  br label %263, !dbg !2004

263:                                              ; preds = %261, %251
  %264 = load i32, i32* @x.35
  %265 = load i32, i32* @y.36
  %266 = sub i32 %264, 1
  %267 = mul i32 %264, %266
  %268 = urem i32 %267, 2
  %269 = icmp eq i32 %268, 0
  %270 = icmp slt i32 %265, 10
  %271 = or i1 %269, %270
  br i1 %271, label %originalBB99, label %originalBB99alteredBB

originalBB99:                                     ; preds = %263, %originalBB99alteredBB
  %272 = load i64, i64* %21, align 8, !dbg !2005
  %273 = call noalias i8* @xcharalloc(i64 %272), !dbg !2006
  store i8* %273, i8** %22, align 8, !dbg !2007
  %274 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !2008
  %275 = load i32, i32* %13, align 4, !dbg !2009
  %276 = sext i32 %275 to i64, !dbg !2008
  %277 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %274, i64 %276, !dbg !2008
  %278 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %277, i32 0, i32 1, !dbg !2010
  store i8* %273, i8** %278, align 8, !dbg !2011
  %279 = load i8*, i8** %22, align 8, !dbg !2012
  %280 = load i64, i64* %21, align 8, !dbg !2013
  %281 = load i8*, i8** %14, align 8, !dbg !2014
  %282 = load i64, i64* %15, align 8, !dbg !2015
  %283 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !2016
  %284 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %283, i32 0, i32 0, !dbg !2017
  %285 = load i32, i32* %284, align 8, !dbg !2017
  %286 = load i32, i32* %23, align 4, !dbg !2018
  %287 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !2019
  %288 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %287, i32 0, i32 2, !dbg !2020
  %289 = getelementptr inbounds [8 x i32], [8 x i32]* %288, i64 0, i64 0, !dbg !2019
  %290 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !2021
  %291 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %290, i32 0, i32 3, !dbg !2022
  %292 = load i8*, i8** %291, align 8, !dbg !2022
  %293 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !2023
  %294 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %293, i32 0, i32 4, !dbg !2024
  %295 = load i8*, i8** %294, align 8, !dbg !2024
  %296 = call i64 @quotearg_buffer_restyled(i8* %279, i64 %280, i8* %281, i64 %282, i32 %285, i32 %286, i32* %289, i8* %292, i8* %295), !dbg !2025
  %297 = load i32, i32* @x.35
  %298 = load i32, i32* @y.36
  %299 = sub i32 %297, 1
  %300 = mul i32 %297, %299
  %301 = urem i32 %300, 2
  %302 = icmp eq i32 %301, 0
  %303 = icmp slt i32 %298, 10
  %304 = or i1 %302, %303
  br i1 %304, label %originalBBpart2101, label %originalBB99alteredBB

originalBBpart2101:                               ; preds = %originalBB99
  br label %305, !dbg !2026

305:                                              ; preds = %originalBBpart2101, %originalBBpart297
  %306 = load i32, i32* %17, align 4, !dbg !2027
  %307 = call i32* @__errno_location() #15, !dbg !2028
  store i32 %306, i32* %307, align 4, !dbg !2029
  %308 = load i8*, i8** %22, align 8, !dbg !2030
  ret i8* %308, !dbg !2031

originalBBalteredBB:                              ; preds = %originalBB, %4
  %309 = alloca i32, align 4
  %310 = alloca i8*, align 8
  %311 = alloca i64, align 8
  %312 = alloca %struct.quoting_options*, align 8
  %313 = alloca i32, align 4
  %314 = alloca %struct.slotvec*, align 8
  %315 = alloca i8, align 1
  %316 = alloca i32, align 4
  %317 = alloca i64, align 8
  %318 = alloca i8*, align 8
  %319 = alloca i32, align 4
  %320 = alloca i64, align 8
  store i32 %0, i32* %309, align 4
  call void @llvm.dbg.declare(metadata i32* %309, metadata !2032, metadata !DIExpression()), !dbg !1889
  store i8* %1, i8** %310, align 8
  call void @llvm.dbg.declare(metadata i8** %310, metadata !2068, metadata !DIExpression()), !dbg !1891
  store i64 %2, i64* %311, align 8
  call void @llvm.dbg.declare(metadata i64* %311, metadata !2069, metadata !DIExpression()), !dbg !1893
  store %struct.quoting_options* %3, %struct.quoting_options** %312, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %312, metadata !2070, metadata !DIExpression()), !dbg !1895
  call void @llvm.dbg.declare(metadata i32* %313, metadata !2071, metadata !DIExpression()), !dbg !1897
  %321 = call i32* @__errno_location() #15, !dbg !1898
  %322 = load i32, i32* %321, align 4, !dbg !1898
  store i32 %322, i32* %313, align 4, !dbg !1897
  call void @llvm.dbg.declare(metadata %struct.slotvec** %314, metadata !2072, metadata !DIExpression()), !dbg !1900
  %323 = load %struct.slotvec*, %struct.slotvec** @slotvec, align 8, !dbg !1901
  store %struct.slotvec* %323, %struct.slotvec** %314, align 8, !dbg !1900
  %324 = load i32, i32* %309, align 4, !dbg !1902
  %325 = icmp slt i32 %324, 0, !dbg !1904
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %39
  %326 = load i32, i32* @nslots, align 4, !dbg !1907
  %327 = load i32, i32* %13, align 4, !dbg !1909
  %328 = icmp sle i32 %326, %327, !dbg !1910
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %59
  %329 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !1915
  %330 = icmp eq %struct.slotvec* %329, @slotvec0, !dbg !1916
  %331 = zext i1 %330 to i8, !dbg !1914
  store i8 %331, i8* %19, align 1, !dbg !1914
  call void @llvm.dbg.declare(metadata !4, metadata !2073, metadata !DIExpression()), !dbg !1918
  store i32 2147483646, i32* %20, align 4, !dbg !1918
  %332 = load i32, i32* %20, align 4, !dbg !1919
  %333 = load i32, i32* %13, align 4, !dbg !1921
  %334 = icmp slt i32 %332, %333, !dbg !1922
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %86
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %103
  %335 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !1926
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %121
  %336 = bitcast %struct.slotvec* %122 to i8*, !dbg !1925
  %337 = load i32, i32* %13, align 4, !dbg !1927
  %_ = sub i32 0, %337
  %gen = add i32 %_, 1
  %_19 = sub i32 0, %337
  %gen20 = add i32 %_19, 1
  %_21 = shl i32 %337, 1
  %_22 = sub i32 %337, 1
  %gen23 = mul i32 %_22, 1
  %_24 = sub i32 %337, 1
  %gen25 = mul i32 %_24, 1
  %_26 = shl i32 %337, 1
  %_27 = sub i32 %337, 1
  %gen28 = mul i32 %_27, 1
  %338 = add nsw i32 %337, 1, !dbg !1928
  %339 = sext i32 %338 to i64, !dbg !1929
  %_29 = shl i64 %339, 16
  %_30 = sub i64 %339, 16
  %gen31 = mul i64 %_30, 16
  %_32 = sub i64 0, %339
  %gen33 = add i64 %_32, 16
  %_34 = sub i64 0, %339
  %gen35 = add i64 %_34, 16
  %_36 = sub i64 0, %339
  %gen37 = add i64 %_36, 16
  %340 = mul i64 %339, 16, !dbg !1930
  %341 = call i8* @xrealloc(i8* %336, i64 %340), !dbg !1931
  %342 = bitcast i8* %341 to %struct.slotvec*, !dbg !1931
  store %struct.slotvec* %342, %struct.slotvec** %18, align 8, !dbg !1932
  store %struct.slotvec* %342, %struct.slotvec** @slotvec, align 8, !dbg !1933
  %343 = load i8, i8* %19, align 1, !dbg !1934
  %344 = trunc i8 %343 to i1, !dbg !1934
  br label %originalBB18

originalBB41alteredBB:                            ; preds = %originalBB41, %148
  %345 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !1937
  %346 = bitcast %struct.slotvec* %345 to i8*, !dbg !1938
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %346, i8* align 8 bitcast (%struct.slotvec* @slotvec0 to i8*), i64 16, i1 false), !dbg !1938
  br label %originalBB41

originalBB45alteredBB:                            ; preds = %originalBB45, %167
  %347 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !1940
  %348 = load i32, i32* @nslots, align 4, !dbg !1941
  %349 = sext i32 %348 to i64, !dbg !1942
  %350 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %347, i64 %349, !dbg !1942
  %351 = bitcast %struct.slotvec* %350 to i8*, !dbg !1943
  %352 = load i32, i32* %13, align 4, !dbg !1944
  %_46 = sub i32 0, %352
  %gen47 = add i32 %_46, 1
  %_48 = sub i32 0, %352
  %gen49 = add i32 %_48, 1
  %_50 = shl i32 %352, 1
  %_51 = sub i32 %352, 1
  %gen52 = mul i32 %_51, 1
  %_53 = sub i32 0, %352
  %gen54 = add i32 %_53, 1
  %353 = add nsw i32 %352, 1, !dbg !1945
  %354 = load i32, i32* @nslots, align 4, !dbg !1946
  %_55 = sub i32 %353, %354
  %gen56 = mul i32 %_55, %354
  %355 = sub nsw i32 %353, %354, !dbg !1947
  %356 = sext i32 %355 to i64, !dbg !1948
  %_57 = sub i64 %356, 16
  %gen58 = mul i64 %_57, 16
  %_59 = shl i64 %356, 16
  %_60 = sub i64 0, %356
  %gen61 = add i64 %_60, 16
  %_62 = sub i64 0, %356
  %gen63 = add i64 %_62, 16
  %_64 = sub i64 %356, 16
  %gen65 = mul i64 %_64, 16
  %_66 = sub i64 0, %356
  %gen67 = add i64 %_66, 16
  %_68 = sub i64 %356, 16
  %gen69 = mul i64 %_68, 16
  %357 = mul i64 %356, 16, !dbg !1949
  call void @llvm.memset.p0i8.i64(i8* align 8 %351, i8 0, i64 %357, i1 false), !dbg !1943
  %358 = load i32, i32* %13, align 4, !dbg !1950
  %_70 = shl i32 %358, 1
  %_71 = sub i32 0, %358
  %gen72 = add i32 %_71, 1
  %_73 = sub i32 %358, 1
  %gen74 = mul i32 %_73, 1
  %_75 = shl i32 %358, 1
  %_76 = shl i32 %358, 1
  %_77 = sub i32 0, %358
  %gen78 = add i32 %_77, 1
  %_79 = sub i32 %358, 1
  %gen80 = mul i32 %_79, 1
  %_81 = sub i32 0, %358
  %gen82 = add i32 %_81, 1
  %359 = add nsw i32 %358, 1, !dbg !1951
  store i32 %359, i32* @nslots, align 4, !dbg !1952
  br label %originalBB45

originalBB86alteredBB:                            ; preds = %originalBB86, %197
  %360 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !1957
  %361 = load i32, i32* %13, align 4, !dbg !1958
  %362 = sext i32 %361 to i64, !dbg !1957
  %363 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %360, i64 %362, !dbg !1957
  %364 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %363, i32 0, i32 0, !dbg !1959
  %365 = load i64, i64* %364, align 8, !dbg !1959
  store i64 %365, i64* %21, align 8, !dbg !1956
  call void @llvm.dbg.declare(metadata !4, metadata !2111, metadata !DIExpression()), !dbg !1961
  %366 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !1962
  %367 = load i32, i32* %13, align 4, !dbg !1963
  %368 = sext i32 %367 to i64, !dbg !1962
  %369 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %366, i64 %368, !dbg !1962
  %370 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %369, i32 0, i32 1, !dbg !1964
  %371 = load i8*, i8** %370, align 8, !dbg !1964
  store i8* %371, i8** %22, align 8, !dbg !1961
  call void @llvm.dbg.declare(metadata !4, metadata !2148, metadata !DIExpression()), !dbg !1966
  %372 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !1967
  %373 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %372, i32 0, i32 1, !dbg !1968
  %374 = load i32, i32* %373, align 4, !dbg !1968
  %_87 = shl i32 %374, 1
  %_88 = sub i32 %374, 1
  %gen89 = mul i32 %_88, 1
  %_90 = shl i32 %374, 1
  %_91 = sub i32 0, %374
  %gen92 = add i32 %_91, 1
  %_93 = shl i32 %374, 1
  %_94 = sub i32 0, %374
  %gen95 = add i32 %_94, 1
  %375 = or i32 %374, 1, !dbg !1969
  store i32 %375, i32* %23, align 4, !dbg !1966
  call void @llvm.dbg.declare(metadata !4, metadata !2149, metadata !DIExpression()), !dbg !1971
  %376 = load i8*, i8** %22, align 8, !dbg !1972
  %377 = load i64, i64* %21, align 8, !dbg !1973
  %378 = load i8*, i8** %14, align 8, !dbg !1974
  %379 = load i64, i64* %15, align 8, !dbg !1975
  %380 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !1976
  %381 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %380, i32 0, i32 0, !dbg !1977
  %382 = load i32, i32* %381, align 8, !dbg !1977
  %383 = load i32, i32* %23, align 4, !dbg !1978
  %384 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !1979
  %385 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %384, i32 0, i32 2, !dbg !1980
  %386 = getelementptr inbounds [8 x i32], [8 x i32]* %385, i64 0, i64 0, !dbg !1979
  %387 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !1981
  %388 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %387, i32 0, i32 3, !dbg !1982
  %389 = load i8*, i8** %388, align 8, !dbg !1982
  %390 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !1983
  %391 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %390, i32 0, i32 4, !dbg !1984
  %392 = load i8*, i8** %391, align 8, !dbg !1984
  %393 = call i64 @quotearg_buffer_restyled(i8* %376, i64 %377, i8* %378, i64 %379, i32 %382, i32 %383, i32* %386, i8* %389, i8* %392), !dbg !1985
  store i64 %393, i64* %24, align 8, !dbg !1971
  %394 = load i64, i64* %21, align 8, !dbg !1986
  %395 = load i64, i64* %24, align 8, !dbg !1988
  %396 = icmp ule i64 %394, %395, !dbg !1989
  br label %originalBB86

originalBB99alteredBB:                            ; preds = %originalBB99, %263
  %397 = load i64, i64* %21, align 8, !dbg !2005
  %398 = call noalias i8* @xcharalloc(i64 %397), !dbg !2006
  store i8* %398, i8** %22, align 8, !dbg !2007
  %399 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !2008
  %400 = load i32, i32* %13, align 4, !dbg !2009
  %401 = sext i32 %400 to i64, !dbg !2008
  %402 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %399, i64 %401, !dbg !2008
  %403 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %402, i32 0, i32 1, !dbg !2010
  store i8* %398, i8** %403, align 8, !dbg !2011
  %404 = load i8*, i8** %22, align 8, !dbg !2012
  %405 = load i64, i64* %21, align 8, !dbg !2013
  %406 = load i8*, i8** %14, align 8, !dbg !2014
  %407 = load i64, i64* %15, align 8, !dbg !2015
  %408 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !2016
  %409 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %408, i32 0, i32 0, !dbg !2017
  %410 = load i32, i32* %409, align 8, !dbg !2017
  %411 = load i32, i32* %23, align 4, !dbg !2018
  %412 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !2019
  %413 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %412, i32 0, i32 2, !dbg !2020
  %414 = getelementptr inbounds [8 x i32], [8 x i32]* %413, i64 0, i64 0, !dbg !2019
  %415 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !2021
  %416 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %415, i32 0, i32 3, !dbg !2022
  %417 = load i8*, i8** %416, align 8, !dbg !2022
  %418 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !2023
  %419 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %418, i32 0, i32 4, !dbg !2024
  %420 = load i8*, i8** %419, align 8, !dbg !2024
  %421 = call i64 @quotearg_buffer_restyled(i8* %404, i64 %405, i8* %406, i64 %407, i32 %410, i32 %411, i32* %414, i8* %417, i8* %420), !dbg !2025
  br label %originalBB99
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @quotearg_buffer_restyled(i8*, i64, i8*, i64, i32, i32, i32*, i8*, i8*) #4 !dbg !2150 {
  %10 = load i32, i32* @x.37
  %11 = load i32, i32* @y.38
  %12 = sub i32 %10, 1
  %13 = mul i32 %10, %12
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  %16 = icmp slt i32 %11, 10
  %17 = or i1 %15, %16
  br i1 %17, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %9, %originalBBalteredBB
  %18 = alloca i64, align 8
  %19 = alloca i8*, align 8
  %20 = alloca i64, align 8
  %21 = alloca i8*, align 8
  %22 = alloca i64, align 8
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32*, align 8
  %26 = alloca i8*, align 8
  %27 = alloca i8*, align 8
  %28 = alloca i64, align 8
  %29 = alloca i64, align 8
  %30 = alloca i64, align 8
  %31 = alloca i8*, align 8
  %32 = alloca i64, align 8
  %33 = alloca i8, align 1
  %34 = alloca i8, align 1
  %35 = alloca i8, align 1
  %36 = alloca i8, align 1
  %37 = alloca i8, align 1
  %38 = alloca i8, align 1
  %39 = alloca i8, align 1
  %40 = alloca i8, align 1
  %41 = alloca i8, align 1
  %42 = alloca i8, align 1
  %43 = alloca i8, align 1
  %44 = alloca i64, align 8
  %45 = alloca i8, align 1
  %46 = alloca %struct.__mbstate_t, align 4
  %47 = alloca i32, align 4
  %48 = alloca i64, align 8
  %49 = alloca i64, align 8
  %50 = alloca i64, align 8
  store i8* %0, i8** %19, align 8
  call void @llvm.dbg.declare(metadata i8** %19, metadata !2155, metadata !DIExpression()), !dbg !2156
  store i64 %1, i64* %20, align 8
  call void @llvm.dbg.declare(metadata i64* %20, metadata !2157, metadata !DIExpression()), !dbg !2158
  store i8* %2, i8** %21, align 8
  call void @llvm.dbg.declare(metadata i8** %21, metadata !2159, metadata !DIExpression()), !dbg !2160
  store i64 %3, i64* %22, align 8
  call void @llvm.dbg.declare(metadata i64* %22, metadata !2161, metadata !DIExpression()), !dbg !2162
  store i32 %4, i32* %23, align 4
  call void @llvm.dbg.declare(metadata i32* %23, metadata !2163, metadata !DIExpression()), !dbg !2164
  store i32 %5, i32* %24, align 4
  call void @llvm.dbg.declare(metadata i32* %24, metadata !2165, metadata !DIExpression()), !dbg !2166
  store i32* %6, i32** %25, align 8
  call void @llvm.dbg.declare(metadata i32** %25, metadata !2167, metadata !DIExpression()), !dbg !2168
  store i8* %7, i8** %26, align 8
  call void @llvm.dbg.declare(metadata i8** %26, metadata !2169, metadata !DIExpression()), !dbg !2170
  store i8* %8, i8** %27, align 8
  call void @llvm.dbg.declare(metadata i8** %27, metadata !2171, metadata !DIExpression()), !dbg !2172
  call void @llvm.dbg.declare(metadata i64* %28, metadata !2173, metadata !DIExpression()), !dbg !2174
  call void @llvm.dbg.declare(metadata i64* %29, metadata !2175, metadata !DIExpression()), !dbg !2176
  store i64 0, i64* %29, align 8, !dbg !2176
  call void @llvm.dbg.declare(metadata i64* %30, metadata !2177, metadata !DIExpression()), !dbg !2178
  store i64 0, i64* %30, align 8, !dbg !2178
  call void @llvm.dbg.declare(metadata i8** %31, metadata !2179, metadata !DIExpression()), !dbg !2180
  store i8* null, i8** %31, align 8, !dbg !2180
  call void @llvm.dbg.declare(metadata i64* %32, metadata !2181, metadata !DIExpression()), !dbg !2182
  store i64 0, i64* %32, align 8, !dbg !2182
  call void @llvm.dbg.declare(metadata i8* %33, metadata !2183, metadata !DIExpression()), !dbg !2184
  store i8 0, i8* %33, align 1, !dbg !2184
  call void @llvm.dbg.declare(metadata i8* %34, metadata !2185, metadata !DIExpression()), !dbg !2186
  %51 = call i64 @__ctype_get_mb_cur_max() #10, !dbg !2187
  %52 = icmp eq i64 %51, 1, !dbg !2188
  %53 = zext i1 %52 to i8, !dbg !2186
  store i8 %53, i8* %34, align 1, !dbg !2186
  call void @llvm.dbg.declare(metadata i8* %35, metadata !2189, metadata !DIExpression()), !dbg !2190
  %54 = load i32, i32* %24, align 4, !dbg !2191
  %55 = and i32 %54, 2, !dbg !2192
  %56 = icmp ne i32 %55, 0, !dbg !2193
  %57 = zext i1 %56 to i8, !dbg !2190
  store i8 %57, i8* %35, align 1, !dbg !2190
  call void @llvm.dbg.declare(metadata i8* %36, metadata !2194, metadata !DIExpression()), !dbg !2195
  store i8 0, i8* %36, align 1, !dbg !2195
  call void @llvm.dbg.declare(metadata i8* %37, metadata !2196, metadata !DIExpression()), !dbg !2197
  store i8 0, i8* %37, align 1, !dbg !2197
  call void @llvm.dbg.declare(metadata i8* %38, metadata !2198, metadata !DIExpression()), !dbg !2199
  store i8 1, i8* %38, align 1, !dbg !2199
  %58 = load i32, i32* @x.37
  %59 = load i32, i32* @y.38
  %60 = sub i32 %58, 1
  %61 = mul i32 %58, %60
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %59, 10
  %65 = or i1 %63, %64
  br i1 %65, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %66, !dbg !2200

66:                                               ; preds = %4418, %originalBBpart2
  call void @llvm.dbg.label(metadata !2201), !dbg !2202
  %67 = load i32, i32* %23, align 4, !dbg !2203
  switch i32 %67, label %472 [
    i32 6, label %68
    i32 5, label %69
    i32 7, label %150
    i32 8, label %167
    i32 9, label %167
    i32 10, label %167
    i32 3, label %351
    i32 1, label %352
    i32 4, label %353
    i32 2, label %374
    i32 0, label %471
  ], !dbg !2204

68:                                               ; preds = %66
  store i32 5, i32* %23, align 4, !dbg !2205
  store i8 1, i8* %35, align 1, !dbg !2207
  br label %69, !dbg !2208

69:                                               ; preds = %68, %66
  %70 = load i32, i32* @x.37
  %71 = load i32, i32* @y.38
  %72 = sub i32 %70, 1
  %73 = mul i32 %70, %72
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %71, 10
  %77 = or i1 %75, %76
  br i1 %77, label %originalBB7, label %originalBB7alteredBB

originalBB7:                                      ; preds = %69, %originalBB7alteredBB
  %78 = load i8, i8* %35, align 1, !dbg !2209
  %79 = trunc i8 %78 to i1, !dbg !2209
  %80 = load i32, i32* @x.37
  %81 = load i32, i32* @y.38
  %82 = sub i32 %80, 1
  %83 = mul i32 %80, %82
  %84 = urem i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %81, 10
  %87 = or i1 %85, %86
  br i1 %87, label %originalBBpart29, label %originalBB7alteredBB

originalBBpart29:                                 ; preds = %originalBB7
  br i1 %79, label %149, label %88, !dbg !2211

88:                                               ; preds = %originalBBpart29
  %89 = load i32, i32* @x.37
  %90 = load i32, i32* @y.38
  %91 = sub i32 %89, 1
  %92 = mul i32 %89, %91
  %93 = urem i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %90, 10
  %96 = or i1 %94, %95
  br i1 %96, label %originalBB11, label %originalBB11alteredBB

originalBB11:                                     ; preds = %88, %originalBB11alteredBB
  %97 = load i32, i32* @x.37
  %98 = load i32, i32* @y.38
  %99 = sub i32 %97, 1
  %100 = mul i32 %97, %99
  %101 = urem i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %98, 10
  %104 = or i1 %102, %103
  br i1 %104, label %originalBBpart213, label %originalBB11alteredBB

originalBBpart213:                                ; preds = %originalBB11
  br label %105, !dbg !2212

105:                                              ; preds = %originalBBpart213
  %106 = load i32, i32* @x.37
  %107 = load i32, i32* @y.38
  %108 = sub i32 %106, 1
  %109 = mul i32 %106, %108
  %110 = urem i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %107, 10
  %113 = or i1 %111, %112
  br i1 %113, label %originalBB15, label %originalBB15alteredBB

originalBB15:                                     ; preds = %105, %originalBB15alteredBB
  %114 = load i64, i64* %29, align 8, !dbg !2213
  %115 = load i64, i64* %20, align 8, !dbg !2213
  %116 = icmp ult i64 %114, %115, !dbg !2213
  %117 = load i32, i32* @x.37
  %118 = load i32, i32* @y.38
  %119 = sub i32 %117, 1
  %120 = mul i32 %117, %119
  %121 = urem i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = icmp slt i32 %118, 10
  %124 = or i1 %122, %123
  br i1 %124, label %originalBBpart217, label %originalBB15alteredBB

originalBBpart217:                                ; preds = %originalBB15
  br i1 %116, label %125, label %129, !dbg !2216

125:                                              ; preds = %originalBBpart217
  %126 = load i8*, i8** %19, align 8, !dbg !2213
  %127 = load i64, i64* %29, align 8, !dbg !2213
  %128 = getelementptr inbounds i8, i8* %126, i64 %127, !dbg !2213
  store i8 34, i8* %128, align 1, !dbg !2213
  br label %129, !dbg !2213

129:                                              ; preds = %125, %originalBBpart217
  %130 = load i64, i64* %29, align 8, !dbg !2216
  %131 = add i64 %130, 1, !dbg !2216
  store i64 %131, i64* %29, align 8, !dbg !2216
  br label %132, !dbg !2216

132:                                              ; preds = %129
  %133 = load i32, i32* @x.37
  %134 = load i32, i32* @y.38
  %135 = sub i32 %133, 1
  %136 = mul i32 %133, %135
  %137 = urem i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = icmp slt i32 %134, 10
  %140 = or i1 %138, %139
  br i1 %140, label %originalBB19, label %originalBB19alteredBB

originalBB19:                                     ; preds = %132, %originalBB19alteredBB
  %141 = load i32, i32* @x.37
  %142 = load i32, i32* @y.38
  %143 = sub i32 %141, 1
  %144 = mul i32 %141, %143
  %145 = urem i32 %144, 2
  %146 = icmp eq i32 %145, 0
  %147 = icmp slt i32 %142, 10
  %148 = or i1 %146, %147
  br i1 %148, label %originalBBpart221, label %originalBB19alteredBB

originalBBpart221:                                ; preds = %originalBB19
  br label %149, !dbg !2216

149:                                              ; preds = %originalBBpart221, %originalBBpart29
  store i8 1, i8* %33, align 1, !dbg !2217
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.85, i64 0, i64 0), i8** %31, align 8, !dbg !2218
  store i64 1, i64* %32, align 8, !dbg !2219
  br label %489, !dbg !2220

150:                                              ; preds = %66
  %151 = load i32, i32* @x.37
  %152 = load i32, i32* @y.38
  %153 = sub i32 %151, 1
  %154 = mul i32 %151, %153
  %155 = urem i32 %154, 2
  %156 = icmp eq i32 %155, 0
  %157 = icmp slt i32 %152, 10
  %158 = or i1 %156, %157
  br i1 %158, label %originalBB23, label %originalBB23alteredBB

originalBB23:                                     ; preds = %150, %originalBB23alteredBB
  store i8 1, i8* %33, align 1, !dbg !2221
  store i8 0, i8* %35, align 1, !dbg !2222
  %159 = load i32, i32* @x.37
  %160 = load i32, i32* @y.38
  %161 = sub i32 %159, 1
  %162 = mul i32 %159, %161
  %163 = urem i32 %162, 2
  %164 = icmp eq i32 %163, 0
  %165 = icmp slt i32 %160, 10
  %166 = or i1 %164, %165
  br i1 %166, label %originalBBpart225, label %originalBB23alteredBB

originalBBpart225:                                ; preds = %originalBB23
  br label %489, !dbg !2223

167:                                              ; preds = %66, %66, %66
  %168 = load i32, i32* @x.37
  %169 = load i32, i32* @y.38
  %170 = sub i32 %168, 1
  %171 = mul i32 %168, %170
  %172 = urem i32 %171, 2
  %173 = icmp eq i32 %172, 0
  %174 = icmp slt i32 %169, 10
  %175 = or i1 %173, %174
  br i1 %175, label %originalBB27, label %originalBB27alteredBB

originalBB27:                                     ; preds = %167, %originalBB27alteredBB
  %176 = load i32, i32* %23, align 4, !dbg !2224
  %177 = icmp ne i32 %176, 10, !dbg !2227
  %178 = load i32, i32* @x.37
  %179 = load i32, i32* @y.38
  %180 = sub i32 %178, 1
  %181 = mul i32 %178, %180
  %182 = urem i32 %181, 2
  %183 = icmp eq i32 %182, 0
  %184 = icmp slt i32 %179, 10
  %185 = or i1 %183, %184
  br i1 %185, label %originalBBpart229, label %originalBB27alteredBB

originalBBpart229:                                ; preds = %originalBB27
  br i1 %177, label %186, label %191, !dbg !2228

186:                                              ; preds = %originalBBpart229
  %187 = load i32, i32* %23, align 4, !dbg !2229
  %188 = call i8* @gettext_quote(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11.86, i64 0, i64 0), i32 %187), !dbg !2231
  store i8* %188, i8** %26, align 8, !dbg !2232
  %189 = load i32, i32* %23, align 4, !dbg !2233
  %190 = call i8* @gettext_quote(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.87, i64 0, i64 0), i32 %189), !dbg !2234
  store i8* %190, i8** %27, align 8, !dbg !2235
  br label %191, !dbg !2236

191:                                              ; preds = %186, %originalBBpart229
  %192 = load i32, i32* @x.37
  %193 = load i32, i32* @y.38
  %194 = sub i32 %192, 1
  %195 = mul i32 %192, %194
  %196 = urem i32 %195, 2
  %197 = icmp eq i32 %196, 0
  %198 = icmp slt i32 %193, 10
  %199 = or i1 %197, %198
  br i1 %199, label %originalBB31, label %originalBB31alteredBB

originalBB31:                                     ; preds = %191, %originalBB31alteredBB
  %200 = load i8, i8* %35, align 1, !dbg !2237
  %201 = trunc i8 %200 to i1, !dbg !2237
  %202 = load i32, i32* @x.37
  %203 = load i32, i32* @y.38
  %204 = sub i32 %202, 1
  %205 = mul i32 %202, %204
  %206 = urem i32 %205, 2
  %207 = icmp eq i32 %206, 0
  %208 = icmp slt i32 %203, 10
  %209 = or i1 %207, %208
  br i1 %209, label %originalBBpart233, label %originalBB31alteredBB

originalBBpart233:                                ; preds = %originalBB31
  br i1 %201, label %331, label %210, !dbg !2239

210:                                              ; preds = %originalBBpart233
  %211 = load i8*, i8** %26, align 8, !dbg !2240
  store i8* %211, i8** %31, align 8, !dbg !2242
  br label %212, !dbg !2243

212:                                              ; preds = %originalBBpart266, %210
  %213 = load i32, i32* @x.37
  %214 = load i32, i32* @y.38
  %215 = sub i32 %213, 1
  %216 = mul i32 %213, %215
  %217 = urem i32 %216, 2
  %218 = icmp eq i32 %217, 0
  %219 = icmp slt i32 %214, 10
  %220 = or i1 %218, %219
  br i1 %220, label %originalBB35, label %originalBB35alteredBB

originalBB35:                                     ; preds = %212, %originalBB35alteredBB
  %221 = load i8*, i8** %31, align 8, !dbg !2244
  %222 = load i8, i8* %221, align 1, !dbg !2246
  %223 = icmp ne i8 %222, 0, !dbg !2247
  %224 = load i32, i32* @x.37
  %225 = load i32, i32* @y.38
  %226 = sub i32 %224, 1
  %227 = mul i32 %224, %226
  %228 = urem i32 %227, 2
  %229 = icmp eq i32 %228, 0
  %230 = icmp slt i32 %225, 10
  %231 = or i1 %229, %230
  br i1 %231, label %originalBBpart237, label %originalBB35alteredBB

originalBBpart237:                                ; preds = %originalBB35
  br i1 %223, label %232, label %330, !dbg !2247

232:                                              ; preds = %originalBBpart237
  %233 = load i32, i32* @x.37
  %234 = load i32, i32* @y.38
  %235 = sub i32 %233, 1
  %236 = mul i32 %233, %235
  %237 = urem i32 %236, 2
  %238 = icmp eq i32 %237, 0
  %239 = icmp slt i32 %234, 10
  %240 = or i1 %238, %239
  br i1 %240, label %originalBB39, label %originalBB39alteredBB

originalBB39:                                     ; preds = %232, %originalBB39alteredBB
  %241 = load i32, i32* @x.37
  %242 = load i32, i32* @y.38
  %243 = sub i32 %241, 1
  %244 = mul i32 %241, %243
  %245 = urem i32 %244, 2
  %246 = icmp eq i32 %245, 0
  %247 = icmp slt i32 %242, 10
  %248 = or i1 %246, %247
  br i1 %248, label %originalBBpart241, label %originalBB39alteredBB

originalBBpart241:                                ; preds = %originalBB39
  br label %249, !dbg !2248

249:                                              ; preds = %originalBBpart241
  %250 = load i32, i32* @x.37
  %251 = load i32, i32* @y.38
  %252 = sub i32 %250, 1
  %253 = mul i32 %250, %252
  %254 = urem i32 %253, 2
  %255 = icmp eq i32 %254, 0
  %256 = icmp slt i32 %251, 10
  %257 = or i1 %255, %256
  br i1 %257, label %originalBB43, label %originalBB43alteredBB

originalBB43:                                     ; preds = %249, %originalBB43alteredBB
  %258 = load i64, i64* %29, align 8, !dbg !2249
  %259 = load i64, i64* %20, align 8, !dbg !2249
  %260 = icmp ult i64 %258, %259, !dbg !2249
  %261 = load i32, i32* @x.37
  %262 = load i32, i32* @y.38
  %263 = sub i32 %261, 1
  %264 = mul i32 %261, %263
  %265 = urem i32 %264, 2
  %266 = icmp eq i32 %265, 0
  %267 = icmp slt i32 %262, 10
  %268 = or i1 %266, %267
  br i1 %268, label %originalBBpart245, label %originalBB43alteredBB

originalBBpart245:                                ; preds = %originalBB43
  br i1 %260, label %269, label %275, !dbg !2252

269:                                              ; preds = %originalBBpart245
  %270 = load i8*, i8** %31, align 8, !dbg !2249
  %271 = load i8, i8* %270, align 1, !dbg !2249
  %272 = load i8*, i8** %19, align 8, !dbg !2249
  %273 = load i64, i64* %29, align 8, !dbg !2249
  %274 = getelementptr inbounds i8, i8* %272, i64 %273, !dbg !2249
  store i8 %271, i8* %274, align 1, !dbg !2249
  br label %275, !dbg !2249

275:                                              ; preds = %269, %originalBBpart245
  %276 = load i32, i32* @x.37
  %277 = load i32, i32* @y.38
  %278 = sub i32 %276, 1
  %279 = mul i32 %276, %278
  %280 = urem i32 %279, 2
  %281 = icmp eq i32 %280, 0
  %282 = icmp slt i32 %277, 10
  %283 = or i1 %281, %282
  br i1 %283, label %originalBB47, label %originalBB47alteredBB

originalBB47:                                     ; preds = %275, %originalBB47alteredBB
  %284 = load i64, i64* %29, align 8, !dbg !2252
  %285 = add i64 %284, 1, !dbg !2252
  store i64 %285, i64* %29, align 8, !dbg !2252
  %286 = load i32, i32* @x.37
  %287 = load i32, i32* @y.38
  %288 = sub i32 %286, 1
  %289 = mul i32 %286, %288
  %290 = urem i32 %289, 2
  %291 = icmp eq i32 %290, 0
  %292 = icmp slt i32 %287, 10
  %293 = or i1 %291, %292
  br i1 %293, label %originalBBpart258, label %originalBB47alteredBB

originalBBpart258:                                ; preds = %originalBB47
  br label %294, !dbg !2252

294:                                              ; preds = %originalBBpart258
  %295 = load i32, i32* @x.37
  %296 = load i32, i32* @y.38
  %297 = sub i32 %295, 1
  %298 = mul i32 %295, %297
  %299 = urem i32 %298, 2
  %300 = icmp eq i32 %299, 0
  %301 = icmp slt i32 %296, 10
  %302 = or i1 %300, %301
  br i1 %302, label %originalBB60, label %originalBB60alteredBB

originalBB60:                                     ; preds = %294, %originalBB60alteredBB
  %303 = load i32, i32* @x.37
  %304 = load i32, i32* @y.38
  %305 = sub i32 %303, 1
  %306 = mul i32 %303, %305
  %307 = urem i32 %306, 2
  %308 = icmp eq i32 %307, 0
  %309 = icmp slt i32 %304, 10
  %310 = or i1 %308, %309
  br i1 %310, label %originalBBpart262, label %originalBB60alteredBB

originalBBpart262:                                ; preds = %originalBB60
  br label %311, !dbg !2252

311:                                              ; preds = %originalBBpart262
  %312 = load i32, i32* @x.37
  %313 = load i32, i32* @y.38
  %314 = sub i32 %312, 1
  %315 = mul i32 %312, %314
  %316 = urem i32 %315, 2
  %317 = icmp eq i32 %316, 0
  %318 = icmp slt i32 %313, 10
  %319 = or i1 %317, %318
  br i1 %319, label %originalBB64, label %originalBB64alteredBB

originalBB64:                                     ; preds = %311, %originalBB64alteredBB
  %320 = load i8*, i8** %31, align 8, !dbg !2253
  %321 = getelementptr inbounds i8, i8* %320, i32 1, !dbg !2253
  store i8* %321, i8** %31, align 8, !dbg !2253
  %322 = load i32, i32* @x.37
  %323 = load i32, i32* @y.38
  %324 = sub i32 %322, 1
  %325 = mul i32 %322, %324
  %326 = urem i32 %325, 2
  %327 = icmp eq i32 %326, 0
  %328 = icmp slt i32 %323, 10
  %329 = or i1 %327, %328
  br i1 %329, label %originalBBpart266, label %originalBB64alteredBB

originalBBpart266:                                ; preds = %originalBB64
  br label %212, !dbg !2254, !llvm.loop !2255

330:                                              ; preds = %originalBBpart237
  br label %331, !dbg !2256

331:                                              ; preds = %330, %originalBBpart233
  %332 = load i32, i32* @x.37
  %333 = load i32, i32* @y.38
  %334 = sub i32 %332, 1
  %335 = mul i32 %332, %334
  %336 = urem i32 %335, 2
  %337 = icmp eq i32 %336, 0
  %338 = icmp slt i32 %333, 10
  %339 = or i1 %337, %338
  br i1 %339, label %originalBB68, label %originalBB68alteredBB

originalBB68:                                     ; preds = %331, %originalBB68alteredBB
  store i8 1, i8* %33, align 1, !dbg !2257
  %340 = load i8*, i8** %27, align 8, !dbg !2258
  store i8* %340, i8** %31, align 8, !dbg !2259
  %341 = load i8*, i8** %31, align 8, !dbg !2260
  %342 = call i64 @strlen(i8* %341) #13, !dbg !2261
  store i64 %342, i64* %32, align 8, !dbg !2262
  %343 = load i32, i32* @x.37
  %344 = load i32, i32* @y.38
  %345 = sub i32 %343, 1
  %346 = mul i32 %343, %345
  %347 = urem i32 %346, 2
  %348 = icmp eq i32 %347, 0
  %349 = icmp slt i32 %344, 10
  %350 = or i1 %348, %349
  br i1 %350, label %originalBBpart270, label %originalBB68alteredBB

originalBBpart270:                                ; preds = %originalBB68
  br label %489, !dbg !2263

351:                                              ; preds = %66
  store i8 1, i8* %33, align 1, !dbg !2264
  br label %352, !dbg !2265

352:                                              ; preds = %351, %66
  store i8 1, i8* %35, align 1, !dbg !2266
  br label %353, !dbg !2267

353:                                              ; preds = %352, %66
  %354 = load i32, i32* @x.37
  %355 = load i32, i32* @y.38
  %356 = sub i32 %354, 1
  %357 = mul i32 %354, %356
  %358 = urem i32 %357, 2
  %359 = icmp eq i32 %358, 0
  %360 = icmp slt i32 %355, 10
  %361 = or i1 %359, %360
  br i1 %361, label %originalBB72, label %originalBB72alteredBB

originalBB72:                                     ; preds = %353, %originalBB72alteredBB
  %362 = load i8, i8* %35, align 1, !dbg !2268
  %363 = trunc i8 %362 to i1, !dbg !2268
  %364 = load i32, i32* @x.37
  %365 = load i32, i32* @y.38
  %366 = sub i32 %364, 1
  %367 = mul i32 %364, %366
  %368 = urem i32 %367, 2
  %369 = icmp eq i32 %368, 0
  %370 = icmp slt i32 %365, 10
  %371 = or i1 %369, %370
  br i1 %371, label %originalBBpart274, label %originalBB72alteredBB

originalBBpart274:                                ; preds = %originalBB72
  br i1 %363, label %373, label %372, !dbg !2270

372:                                              ; preds = %originalBBpart274
  store i8 1, i8* %33, align 1, !dbg !2271
  br label %373, !dbg !2272

373:                                              ; preds = %372, %originalBBpart274
  br label %374, !dbg !2273

374:                                              ; preds = %373, %66
  %375 = load i32, i32* @x.37
  %376 = load i32, i32* @y.38
  %377 = sub i32 %375, 1
  %378 = mul i32 %375, %377
  %379 = urem i32 %378, 2
  %380 = icmp eq i32 %379, 0
  %381 = icmp slt i32 %376, 10
  %382 = or i1 %380, %381
  br i1 %382, label %originalBB76, label %originalBB76alteredBB

originalBB76:                                     ; preds = %374, %originalBB76alteredBB
  store i32 2, i32* %23, align 4, !dbg !2274
  %383 = load i8, i8* %35, align 1, !dbg !2275
  %384 = trunc i8 %383 to i1, !dbg !2275
  %385 = load i32, i32* @x.37
  %386 = load i32, i32* @y.38
  %387 = sub i32 %385, 1
  %388 = mul i32 %385, %387
  %389 = urem i32 %388, 2
  %390 = icmp eq i32 %389, 0
  %391 = icmp slt i32 %386, 10
  %392 = or i1 %390, %391
  br i1 %392, label %originalBBpart278, label %originalBB76alteredBB

originalBBpart278:                                ; preds = %originalBB76
  br i1 %384, label %470, label %393, !dbg !2277

393:                                              ; preds = %originalBBpart278
  %394 = load i32, i32* @x.37
  %395 = load i32, i32* @y.38
  %396 = sub i32 %394, 1
  %397 = mul i32 %394, %396
  %398 = urem i32 %397, 2
  %399 = icmp eq i32 %398, 0
  %400 = icmp slt i32 %395, 10
  %401 = or i1 %399, %400
  br i1 %401, label %originalBB80, label %originalBB80alteredBB

originalBB80:                                     ; preds = %393, %originalBB80alteredBB
  %402 = load i32, i32* @x.37
  %403 = load i32, i32* @y.38
  %404 = sub i32 %402, 1
  %405 = mul i32 %402, %404
  %406 = urem i32 %405, 2
  %407 = icmp eq i32 %406, 0
  %408 = icmp slt i32 %403, 10
  %409 = or i1 %407, %408
  br i1 %409, label %originalBBpart282, label %originalBB80alteredBB

originalBBpart282:                                ; preds = %originalBB80
  br label %410, !dbg !2278

410:                                              ; preds = %originalBBpart282
  %411 = load i64, i64* %29, align 8, !dbg !2279
  %412 = load i64, i64* %20, align 8, !dbg !2279
  %413 = icmp ult i64 %411, %412, !dbg !2279
  br i1 %413, label %414, label %434, !dbg !2282

414:                                              ; preds = %410
  %415 = load i32, i32* @x.37
  %416 = load i32, i32* @y.38
  %417 = sub i32 %415, 1
  %418 = mul i32 %415, %417
  %419 = urem i32 %418, 2
  %420 = icmp eq i32 %419, 0
  %421 = icmp slt i32 %416, 10
  %422 = or i1 %420, %421
  br i1 %422, label %originalBB84, label %originalBB84alteredBB

originalBB84:                                     ; preds = %414, %originalBB84alteredBB
  %423 = load i8*, i8** %19, align 8, !dbg !2279
  %424 = load i64, i64* %29, align 8, !dbg !2279
  %425 = getelementptr inbounds i8, i8* %423, i64 %424, !dbg !2279
  store i8 39, i8* %425, align 1, !dbg !2279
  %426 = load i32, i32* @x.37
  %427 = load i32, i32* @y.38
  %428 = sub i32 %426, 1
  %429 = mul i32 %426, %428
  %430 = urem i32 %429, 2
  %431 = icmp eq i32 %430, 0
  %432 = icmp slt i32 %427, 10
  %433 = or i1 %431, %432
  br i1 %433, label %originalBBpart286, label %originalBB84alteredBB

originalBBpart286:                                ; preds = %originalBB84
  br label %434, !dbg !2279

434:                                              ; preds = %originalBBpart286, %410
  %435 = load i32, i32* @x.37
  %436 = load i32, i32* @y.38
  %437 = sub i32 %435, 1
  %438 = mul i32 %435, %437
  %439 = urem i32 %438, 2
  %440 = icmp eq i32 %439, 0
  %441 = icmp slt i32 %436, 10
  %442 = or i1 %440, %441
  br i1 %442, label %originalBB88, label %originalBB88alteredBB

originalBB88:                                     ; preds = %434, %originalBB88alteredBB
  %443 = load i64, i64* %29, align 8, !dbg !2282
  %444 = add i64 %443, 1, !dbg !2282
  store i64 %444, i64* %29, align 8, !dbg !2282
  %445 = load i32, i32* @x.37
  %446 = load i32, i32* @y.38
  %447 = sub i32 %445, 1
  %448 = mul i32 %445, %447
  %449 = urem i32 %448, 2
  %450 = icmp eq i32 %449, 0
  %451 = icmp slt i32 %446, 10
  %452 = or i1 %450, %451
  br i1 %452, label %originalBBpart298, label %originalBB88alteredBB

originalBBpart298:                                ; preds = %originalBB88
  br label %453, !dbg !2282

453:                                              ; preds = %originalBBpart298
  %454 = load i32, i32* @x.37
  %455 = load i32, i32* @y.38
  %456 = sub i32 %454, 1
  %457 = mul i32 %454, %456
  %458 = urem i32 %457, 2
  %459 = icmp eq i32 %458, 0
  %460 = icmp slt i32 %455, 10
  %461 = or i1 %459, %460
  br i1 %461, label %originalBB100, label %originalBB100alteredBB

originalBB100:                                    ; preds = %453, %originalBB100alteredBB
  %462 = load i32, i32* @x.37
  %463 = load i32, i32* @y.38
  %464 = sub i32 %462, 1
  %465 = mul i32 %462, %464
  %466 = urem i32 %465, 2
  %467 = icmp eq i32 %466, 0
  %468 = icmp slt i32 %463, 10
  %469 = or i1 %467, %468
  br i1 %469, label %originalBBpart2102, label %originalBB100alteredBB

originalBBpart2102:                               ; preds = %originalBB100
  br label %470, !dbg !2282

470:                                              ; preds = %originalBBpart2102, %originalBBpart278
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.87, i64 0, i64 0), i8** %31, align 8, !dbg !2283
  store i64 1, i64* %32, align 8, !dbg !2284
  br label %489, !dbg !2285

471:                                              ; preds = %66
  store i8 0, i8* %35, align 1, !dbg !2286
  br label %489, !dbg !2287

472:                                              ; preds = %66
  %473 = load i32, i32* @x.37
  %474 = load i32, i32* @y.38
  %475 = sub i32 %473, 1
  %476 = mul i32 %473, %475
  %477 = urem i32 %476, 2
  %478 = icmp eq i32 %477, 0
  %479 = icmp slt i32 %474, 10
  %480 = or i1 %478, %479
  br i1 %480, label %originalBB104, label %originalBB104alteredBB

originalBB104:                                    ; preds = %472, %originalBB104alteredBB
  call void @abort() #12, !dbg !2288
  %481 = load i32, i32* @x.37
  %482 = load i32, i32* @y.38
  %483 = sub i32 %481, 1
  %484 = mul i32 %481, %483
  %485 = urem i32 %484, 2
  %486 = icmp eq i32 %485, 0
  %487 = icmp slt i32 %482, 10
  %488 = or i1 %486, %487
  br i1 %488, label %originalBBpart2106, label %originalBB104alteredBB

originalBBpart2106:                               ; preds = %originalBB104
  unreachable, !dbg !2288

489:                                              ; preds = %471, %470, %originalBBpart270, %originalBBpart225, %149
  %490 = load i32, i32* @x.37
  %491 = load i32, i32* @y.38
  %492 = sub i32 %490, 1
  %493 = mul i32 %490, %492
  %494 = urem i32 %493, 2
  %495 = icmp eq i32 %494, 0
  %496 = icmp slt i32 %491, 10
  %497 = or i1 %495, %496
  br i1 %497, label %originalBB108, label %originalBB108alteredBB

originalBB108:                                    ; preds = %489, %originalBB108alteredBB
  store i64 0, i64* %28, align 8, !dbg !2289
  %498 = load i32, i32* @x.37
  %499 = load i32, i32* @y.38
  %500 = sub i32 %498, 1
  %501 = mul i32 %498, %500
  %502 = urem i32 %501, 2
  %503 = icmp eq i32 %502, 0
  %504 = icmp slt i32 %499, 10
  %505 = or i1 %503, %504
  br i1 %505, label %originalBBpart2110, label %originalBB108alteredBB

originalBBpart2110:                               ; preds = %originalBB108
  br label %506, !dbg !2291

506:                                              ; preds = %originalBBpart21170, %originalBBpart2110
  %507 = load i64, i64* %22, align 8, !dbg !2292
  %508 = icmp eq i64 %507, -1, !dbg !2294
  br i1 %508, label %509, label %533, !dbg !2292

509:                                              ; preds = %506
  %510 = load i32, i32* @x.37
  %511 = load i32, i32* @y.38
  %512 = sub i32 %510, 1
  %513 = mul i32 %510, %512
  %514 = urem i32 %513, 2
  %515 = icmp eq i32 %514, 0
  %516 = icmp slt i32 %511, 10
  %517 = or i1 %515, %516
  br i1 %517, label %originalBB112, label %originalBB112alteredBB

originalBB112:                                    ; preds = %509, %originalBB112alteredBB
  %518 = load i8*, i8** %21, align 8, !dbg !2295
  %519 = load i64, i64* %28, align 8, !dbg !2296
  %520 = getelementptr inbounds i8, i8* %518, i64 %519, !dbg !2295
  %521 = load i8, i8* %520, align 1, !dbg !2295
  %522 = sext i8 %521 to i32, !dbg !2295
  %523 = icmp eq i32 %522, 0, !dbg !2297
  %524 = zext i1 %523 to i32, !dbg !2297
  %525 = load i32, i32* @x.37
  %526 = load i32, i32* @y.38
  %527 = sub i32 %525, 1
  %528 = mul i32 %525, %527
  %529 = urem i32 %528, 2
  %530 = icmp eq i32 %529, 0
  %531 = icmp slt i32 %526, 10
  %532 = or i1 %530, %531
  br i1 %532, label %originalBBpart2114, label %originalBB112alteredBB

originalBBpart2114:                               ; preds = %originalBB112
  br label %538, !dbg !2292

533:                                              ; preds = %506
  %534 = load i64, i64* %28, align 8, !dbg !2298
  %535 = load i64, i64* %22, align 8, !dbg !2299
  %536 = icmp eq i64 %534, %535, !dbg !2300
  %537 = zext i1 %536 to i32, !dbg !2300
  br label %538, !dbg !2292

538:                                              ; preds = %533, %originalBBpart2114
  %539 = phi i32 [ %524, %originalBBpart2114 ], [ %537, %533 ], !dbg !2292
  %540 = load i32, i32* @x.37
  %541 = load i32, i32* @y.38
  %542 = sub i32 %540, 1
  %543 = mul i32 %540, %542
  %544 = urem i32 %543, 2
  %545 = icmp eq i32 %544, 0
  %546 = icmp slt i32 %541, 10
  %547 = or i1 %545, %546
  br i1 %547, label %originalBB116, label %originalBB116alteredBB

originalBB116:                                    ; preds = %538, %originalBB116alteredBB
  %548 = icmp ne i32 %539, 0, !dbg !2301
  %549 = xor i1 %548, true, !dbg !2301
  %550 = load i32, i32* @x.37
  %551 = load i32, i32* @y.38
  %552 = sub i32 %550, 1
  %553 = mul i32 %550, %552
  %554 = urem i32 %553, 2
  %555 = icmp eq i32 %554, 0
  %556 = icmp slt i32 %551, 10
  %557 = or i1 %555, %556
  br i1 %557, label %originalBBpart2123, label %originalBB116alteredBB

originalBBpart2123:                               ; preds = %originalBB116
  br i1 %549, label %558, label %4252, !dbg !2302

558:                                              ; preds = %originalBBpart2123
  call void @llvm.dbg.declare(metadata i8* %39, metadata !2303, metadata !DIExpression()), !dbg !2305
  call void @llvm.dbg.declare(metadata i8* %40, metadata !2306, metadata !DIExpression()), !dbg !2307
  call void @llvm.dbg.declare(metadata i8* %41, metadata !2308, metadata !DIExpression()), !dbg !2309
  store i8 0, i8* %41, align 1, !dbg !2309
  call void @llvm.dbg.declare(metadata i8* %42, metadata !2310, metadata !DIExpression()), !dbg !2311
  store i8 0, i8* %42, align 1, !dbg !2311
  call void @llvm.dbg.declare(metadata i8* %43, metadata !2312, metadata !DIExpression()), !dbg !2313
  store i8 0, i8* %43, align 1, !dbg !2313
  %559 = load i8, i8* %33, align 1, !dbg !2314
  %560 = trunc i8 %559 to i1, !dbg !2314
  br i1 %560, label %561, label %661, !dbg !2316

561:                                              ; preds = %558
  %562 = load i32, i32* %23, align 4, !dbg !2317
  %563 = icmp ne i32 %562, 2, !dbg !2318
  br i1 %563, label %564, label %661, !dbg !2319

564:                                              ; preds = %561
  %565 = load i64, i64* %32, align 8, !dbg !2320
  %566 = icmp ne i64 %565, 0, !dbg !2320
  br i1 %566, label %567, label %661, !dbg !2321

567:                                              ; preds = %564
  %568 = load i64, i64* %28, align 8, !dbg !2322
  %569 = load i64, i64* %32, align 8, !dbg !2323
  %570 = add i64 %568, %569, !dbg !2324
  %571 = load i64, i64* %22, align 8, !dbg !2325
  %572 = icmp eq i64 %571, -1, !dbg !2326
  br i1 %572, label %573, label %579, !dbg !2327

573:                                              ; preds = %567
  %574 = load i64, i64* %32, align 8, !dbg !2328
  %575 = icmp ult i64 1, %574, !dbg !2329
  br i1 %575, label %576, label %579, !dbg !2325

576:                                              ; preds = %573
  %577 = load i8*, i8** %21, align 8, !dbg !2330
  %578 = call i64 @strlen(i8* %577) #13, !dbg !2331
  store i64 %578, i64* %22, align 8, !dbg !2332
  br label %581, !dbg !2325

579:                                              ; preds = %573, %567
  %580 = load i64, i64* %22, align 8, !dbg !2333
  br label %581, !dbg !2325

581:                                              ; preds = %579, %576
  %582 = phi i64 [ %578, %576 ], [ %580, %579 ], !dbg !2325
  %583 = load i32, i32* @x.37
  %584 = load i32, i32* @y.38
  %585 = sub i32 %583, 1
  %586 = mul i32 %583, %585
  %587 = urem i32 %586, 2
  %588 = icmp eq i32 %587, 0
  %589 = icmp slt i32 %584, 10
  %590 = or i1 %588, %589
  br i1 %590, label %originalBB125, label %originalBB125alteredBB

originalBB125:                                    ; preds = %581, %originalBB125alteredBB
  %591 = icmp ule i64 %570, %582, !dbg !2334
  %592 = load i32, i32* @x.37
  %593 = load i32, i32* @y.38
  %594 = sub i32 %592, 1
  %595 = mul i32 %592, %594
  %596 = urem i32 %595, 2
  %597 = icmp eq i32 %596, 0
  %598 = icmp slt i32 %593, 10
  %599 = or i1 %597, %598
  br i1 %599, label %originalBBpart2127, label %originalBB125alteredBB

originalBBpart2127:                               ; preds = %originalBB125
  br i1 %591, label %600, label %661, !dbg !2335

600:                                              ; preds = %originalBBpart2127
  %601 = load i8*, i8** %21, align 8, !dbg !2336
  %602 = load i64, i64* %28, align 8, !dbg !2337
  %603 = getelementptr inbounds i8, i8* %601, i64 %602, !dbg !2338
  %604 = load i8*, i8** %31, align 8, !dbg !2339
  %605 = load i64, i64* %32, align 8, !dbg !2340
  %606 = call i32 @memcmp(i8* %603, i8* %604, i64 %605) #13, !dbg !2341
  %607 = icmp eq i32 %606, 0, !dbg !2342
  br i1 %607, label %608, label %661, !dbg !2343

608:                                              ; preds = %600
  %609 = load i32, i32* @x.37
  %610 = load i32, i32* @y.38
  %611 = sub i32 %609, 1
  %612 = mul i32 %609, %611
  %613 = urem i32 %612, 2
  %614 = icmp eq i32 %613, 0
  %615 = icmp slt i32 %610, 10
  %616 = or i1 %614, %615
  br i1 %616, label %originalBB129, label %originalBB129alteredBB

originalBB129:                                    ; preds = %608, %originalBB129alteredBB
  %617 = load i8, i8* %35, align 1, !dbg !2344
  %618 = trunc i8 %617 to i1, !dbg !2344
  %619 = load i32, i32* @x.37
  %620 = load i32, i32* @y.38
  %621 = sub i32 %619, 1
  %622 = mul i32 %619, %621
  %623 = urem i32 %622, 2
  %624 = icmp eq i32 %623, 0
  %625 = icmp slt i32 %620, 10
  %626 = or i1 %624, %625
  br i1 %626, label %originalBBpart2131, label %originalBB129alteredBB

originalBBpart2131:                               ; preds = %originalBB129
  br i1 %618, label %627, label %644, !dbg !2347

627:                                              ; preds = %originalBBpart2131
  %628 = load i32, i32* @x.37
  %629 = load i32, i32* @y.38
  %630 = sub i32 %628, 1
  %631 = mul i32 %628, %630
  %632 = urem i32 %631, 2
  %633 = icmp eq i32 %632, 0
  %634 = icmp slt i32 %629, 10
  %635 = or i1 %633, %634
  br i1 %635, label %originalBB133, label %originalBB133alteredBB

originalBB133:                                    ; preds = %627, %originalBB133alteredBB
  %636 = load i32, i32* @x.37
  %637 = load i32, i32* @y.38
  %638 = sub i32 %636, 1
  %639 = mul i32 %636, %638
  %640 = urem i32 %639, 2
  %641 = icmp eq i32 %640, 0
  %642 = icmp slt i32 %637, 10
  %643 = or i1 %641, %642
  br i1 %643, label %originalBBpart2135, label %originalBB133alteredBB

originalBBpart2135:                               ; preds = %originalBB133
  br label %4606, !dbg !2348

644:                                              ; preds = %originalBBpart2131
  %645 = load i32, i32* @x.37
  %646 = load i32, i32* @y.38
  %647 = sub i32 %645, 1
  %648 = mul i32 %645, %647
  %649 = urem i32 %648, 2
  %650 = icmp eq i32 %649, 0
  %651 = icmp slt i32 %646, 10
  %652 = or i1 %650, %651
  br i1 %652, label %originalBB137, label %originalBB137alteredBB

originalBB137:                                    ; preds = %644, %originalBB137alteredBB
  store i8 1, i8* %41, align 1, !dbg !2349
  %653 = load i32, i32* @x.37
  %654 = load i32, i32* @y.38
  %655 = sub i32 %653, 1
  %656 = mul i32 %653, %655
  %657 = urem i32 %656, 2
  %658 = icmp eq i32 %657, 0
  %659 = icmp slt i32 %654, 10
  %660 = or i1 %658, %659
  br i1 %660, label %originalBBpart2139, label %originalBB137alteredBB

originalBBpart2139:                               ; preds = %originalBB137
  br label %661, !dbg !2350

661:                                              ; preds = %originalBBpart2139, %600, %originalBBpart2127, %564, %561, %558
  %662 = load i8*, i8** %21, align 8, !dbg !2351
  %663 = load i64, i64* %28, align 8, !dbg !2352
  %664 = getelementptr inbounds i8, i8* %662, i64 %663, !dbg !2351
  %665 = load i8, i8* %664, align 1, !dbg !2351
  store i8 %665, i8* %39, align 1, !dbg !2353
  %666 = load i8, i8* %39, align 1, !dbg !2354
  %667 = zext i8 %666 to i32, !dbg !2354
  switch i32 %667, label %2192 [
    i32 0, label %668
    i32 63, label %1205
    i32 7, label %1653
    i32 8, label %1654
    i32 12, label %1655
    i32 10, label %1656
    i32 13, label %1673
    i32 9, label %1674
    i32 11, label %1691
    i32 92, label %1692
    i32 123, label %1886
    i32 125, label %1886
    i32 35, label %1932
    i32 126, label %1932
    i32 32, label %1953
    i32 33, label %1954
    i32 34, label %1954
    i32 36, label %1954
    i32 38, label %1954
    i32 40, label %1954
    i32 41, label %1954
    i32 42, label %1954
    i32 59, label %1954
    i32 60, label %1954
    i32 61, label %1954
    i32 62, label %1954
    i32 91, label %1954
    i32 94, label %1954
    i32 96, label %1954
    i32 124, label %1954
    i32 39, label %1978
    i32 37, label %2175
    i32 43, label %2175
    i32 44, label %2175
    i32 45, label %2175
    i32 46, label %2175
    i32 47, label %2175
    i32 48, label %2175
    i32 49, label %2175
    i32 50, label %2175
    i32 51, label %2175
    i32 52, label %2175
    i32 53, label %2175
    i32 54, label %2175
    i32 55, label %2175
    i32 56, label %2175
    i32 57, label %2175
    i32 58, label %2175
    i32 65, label %2175
    i32 66, label %2175
    i32 67, label %2175
    i32 68, label %2175
    i32 69, label %2175
    i32 70, label %2175
    i32 71, label %2175
    i32 72, label %2175
    i32 73, label %2175
    i32 74, label %2175
    i32 75, label %2175
    i32 76, label %2175
    i32 77, label %2175
    i32 78, label %2175
    i32 79, label %2175
    i32 80, label %2175
    i32 81, label %2175
    i32 82, label %2175
    i32 83, label %2175
    i32 84, label %2175
    i32 85, label %2175
    i32 86, label %2175
    i32 87, label %2175
    i32 88, label %2175
    i32 89, label %2175
    i32 90, label %2175
    i32 93, label %2175
    i32 95, label %2175
    i32 97, label %2175
    i32 98, label %2175
    i32 99, label %2175
    i32 100, label %2175
    i32 101, label %2175
    i32 102, label %2175
    i32 103, label %2175
    i32 104, label %2175
    i32 105, label %2175
    i32 106, label %2175
    i32 107, label %2175
    i32 108, label %2175
    i32 109, label %2175
    i32 110, label %2175
    i32 111, label %2175
    i32 112, label %2175
    i32 113, label %2175
    i32 114, label %2175
    i32 115, label %2175
    i32 116, label %2175
    i32 117, label %2175
    i32 118, label %2175
    i32 119, label %2175
    i32 120, label %2175
    i32 121, label %2175
    i32 122, label %2175
  ], !dbg !2355

668:                                              ; preds = %661
  %669 = load i8, i8* %33, align 1, !dbg !2356
  %670 = trunc i8 %669 to i1, !dbg !2356
  br i1 %670, label %671, label %1166, !dbg !2359

671:                                              ; preds = %668
  br label %672, !dbg !2360

672:                                              ; preds = %671
  %673 = load i32, i32* @x.37
  %674 = load i32, i32* @y.38
  %675 = sub i32 %673, 1
  %676 = mul i32 %673, %675
  %677 = urem i32 %676, 2
  %678 = icmp eq i32 %677, 0
  %679 = icmp slt i32 %674, 10
  %680 = or i1 %678, %679
  br i1 %680, label %originalBB141, label %originalBB141alteredBB

originalBB141:                                    ; preds = %672, %originalBB141alteredBB
  %681 = load i8, i8* %35, align 1, !dbg !2362
  %682 = trunc i8 %681 to i1, !dbg !2362
  %683 = load i32, i32* @x.37
  %684 = load i32, i32* @y.38
  %685 = sub i32 %683, 1
  %686 = mul i32 %683, %685
  %687 = urem i32 %686, 2
  %688 = icmp eq i32 %687, 0
  %689 = icmp slt i32 %684, 10
  %690 = or i1 %688, %689
  br i1 %690, label %originalBBpart2143, label %originalBB141alteredBB

originalBBpart2143:                               ; preds = %originalBB141
  br i1 %682, label %691, label %708, !dbg !2365

691:                                              ; preds = %originalBBpart2143
  %692 = load i32, i32* @x.37
  %693 = load i32, i32* @y.38
  %694 = sub i32 %692, 1
  %695 = mul i32 %692, %694
  %696 = urem i32 %695, 2
  %697 = icmp eq i32 %696, 0
  %698 = icmp slt i32 %693, 10
  %699 = or i1 %697, %698
  br i1 %699, label %originalBB145, label %originalBB145alteredBB

originalBB145:                                    ; preds = %691, %originalBB145alteredBB
  %700 = load i32, i32* @x.37
  %701 = load i32, i32* @y.38
  %702 = sub i32 %700, 1
  %703 = mul i32 %700, %702
  %704 = urem i32 %703, 2
  %705 = icmp eq i32 %704, 0
  %706 = icmp slt i32 %701, 10
  %707 = or i1 %705, %706
  br i1 %707, label %originalBBpart2147, label %originalBB145alteredBB

originalBBpart2147:                               ; preds = %originalBB145
  br label %4606, !dbg !2362

708:                                              ; preds = %originalBBpart2143
  %709 = load i32, i32* @x.37
  %710 = load i32, i32* @y.38
  %711 = sub i32 %709, 1
  %712 = mul i32 %709, %711
  %713 = urem i32 %712, 2
  %714 = icmp eq i32 %713, 0
  %715 = icmp slt i32 %710, 10
  %716 = or i1 %714, %715
  br i1 %716, label %originalBB149, label %originalBB149alteredBB

originalBB149:                                    ; preds = %708, %originalBB149alteredBB
  store i8 1, i8* %42, align 1, !dbg !2365
  %717 = load i32, i32* %23, align 4, !dbg !2366
  %718 = icmp eq i32 %717, 2, !dbg !2366
  %719 = load i32, i32* @x.37
  %720 = load i32, i32* @y.38
  %721 = sub i32 %719, 1
  %722 = mul i32 %719, %721
  %723 = urem i32 %722, 2
  %724 = icmp eq i32 %723, 0
  %725 = icmp slt i32 %720, 10
  %726 = or i1 %724, %725
  br i1 %726, label %originalBBpart2151, label %originalBB149alteredBB

originalBBpart2151:                               ; preds = %originalBB149
  br i1 %718, label %727, label %927, !dbg !2366

727:                                              ; preds = %originalBBpart2151
  %728 = load i32, i32* @x.37
  %729 = load i32, i32* @y.38
  %730 = sub i32 %728, 1
  %731 = mul i32 %728, %730
  %732 = urem i32 %731, 2
  %733 = icmp eq i32 %732, 0
  %734 = icmp slt i32 %729, 10
  %735 = or i1 %733, %734
  br i1 %735, label %originalBB153, label %originalBB153alteredBB

originalBB153:                                    ; preds = %727, %originalBB153alteredBB
  %736 = load i8, i8* %36, align 1, !dbg !2366
  %737 = trunc i8 %736 to i1, !dbg !2366
  %738 = load i32, i32* @x.37
  %739 = load i32, i32* @y.38
  %740 = sub i32 %738, 1
  %741 = mul i32 %738, %740
  %742 = urem i32 %741, 2
  %743 = icmp eq i32 %742, 0
  %744 = icmp slt i32 %739, 10
  %745 = or i1 %743, %744
  br i1 %745, label %originalBBpart2155, label %originalBB153alteredBB

originalBBpart2155:                               ; preds = %originalBB153
  br i1 %737, label %927, label %746, !dbg !2365

746:                                              ; preds = %originalBBpart2155
  %747 = load i32, i32* @x.37
  %748 = load i32, i32* @y.38
  %749 = sub i32 %747, 1
  %750 = mul i32 %747, %749
  %751 = urem i32 %750, 2
  %752 = icmp eq i32 %751, 0
  %753 = icmp slt i32 %748, 10
  %754 = or i1 %752, %753
  br i1 %754, label %originalBB157, label %originalBB157alteredBB

originalBB157:                                    ; preds = %746, %originalBB157alteredBB
  %755 = load i32, i32* @x.37
  %756 = load i32, i32* @y.38
  %757 = sub i32 %755, 1
  %758 = mul i32 %755, %757
  %759 = urem i32 %758, 2
  %760 = icmp eq i32 %759, 0
  %761 = icmp slt i32 %756, 10
  %762 = or i1 %760, %761
  br i1 %762, label %originalBBpart2159, label %originalBB157alteredBB

originalBBpart2159:                               ; preds = %originalBB157
  br label %763, !dbg !2368

763:                                              ; preds = %originalBBpart2159
  %764 = load i64, i64* %29, align 8, !dbg !2370
  %765 = load i64, i64* %20, align 8, !dbg !2370
  %766 = icmp ult i64 %764, %765, !dbg !2370
  br i1 %766, label %767, label %771, !dbg !2373

767:                                              ; preds = %763
  %768 = load i8*, i8** %19, align 8, !dbg !2370
  %769 = load i64, i64* %29, align 8, !dbg !2370
  %770 = getelementptr inbounds i8, i8* %768, i64 %769, !dbg !2370
  store i8 39, i8* %770, align 1, !dbg !2370
  br label %771, !dbg !2370

771:                                              ; preds = %767, %763
  %772 = load i32, i32* @x.37
  %773 = load i32, i32* @y.38
  %774 = sub i32 %772, 1
  %775 = mul i32 %772, %774
  %776 = urem i32 %775, 2
  %777 = icmp eq i32 %776, 0
  %778 = icmp slt i32 %773, 10
  %779 = or i1 %777, %778
  br i1 %779, label %originalBB161, label %originalBB161alteredBB

originalBB161:                                    ; preds = %771, %originalBB161alteredBB
  %780 = load i64, i64* %29, align 8, !dbg !2373
  %781 = add i64 %780, 1, !dbg !2373
  store i64 %781, i64* %29, align 8, !dbg !2373
  %782 = load i32, i32* @x.37
  %783 = load i32, i32* @y.38
  %784 = sub i32 %782, 1
  %785 = mul i32 %782, %784
  %786 = urem i32 %785, 2
  %787 = icmp eq i32 %786, 0
  %788 = icmp slt i32 %783, 10
  %789 = or i1 %787, %788
  br i1 %789, label %originalBBpart2169, label %originalBB161alteredBB

originalBBpart2169:                               ; preds = %originalBB161
  br label %790, !dbg !2373

790:                                              ; preds = %originalBBpart2169
  %791 = load i32, i32* @x.37
  %792 = load i32, i32* @y.38
  %793 = sub i32 %791, 1
  %794 = mul i32 %791, %793
  %795 = urem i32 %794, 2
  %796 = icmp eq i32 %795, 0
  %797 = icmp slt i32 %792, 10
  %798 = or i1 %796, %797
  br i1 %798, label %originalBB171, label %originalBB171alteredBB

originalBB171:                                    ; preds = %790, %originalBB171alteredBB
  %799 = load i32, i32* @x.37
  %800 = load i32, i32* @y.38
  %801 = sub i32 %799, 1
  %802 = mul i32 %799, %801
  %803 = urem i32 %802, 2
  %804 = icmp eq i32 %803, 0
  %805 = icmp slt i32 %800, 10
  %806 = or i1 %804, %805
  br i1 %806, label %originalBBpart2173, label %originalBB171alteredBB

originalBBpart2173:                               ; preds = %originalBB171
  br label %807, !dbg !2368

807:                                              ; preds = %originalBBpart2173
  %808 = load i64, i64* %29, align 8, !dbg !2374
  %809 = load i64, i64* %20, align 8, !dbg !2374
  %810 = icmp ult i64 %808, %809, !dbg !2374
  br i1 %810, label %811, label %831, !dbg !2377

811:                                              ; preds = %807
  %812 = load i32, i32* @x.37
  %813 = load i32, i32* @y.38
  %814 = sub i32 %812, 1
  %815 = mul i32 %812, %814
  %816 = urem i32 %815, 2
  %817 = icmp eq i32 %816, 0
  %818 = icmp slt i32 %813, 10
  %819 = or i1 %817, %818
  br i1 %819, label %originalBB175, label %originalBB175alteredBB

originalBB175:                                    ; preds = %811, %originalBB175alteredBB
  %820 = load i8*, i8** %19, align 8, !dbg !2374
  %821 = load i64, i64* %29, align 8, !dbg !2374
  %822 = getelementptr inbounds i8, i8* %820, i64 %821, !dbg !2374
  store i8 36, i8* %822, align 1, !dbg !2374
  %823 = load i32, i32* @x.37
  %824 = load i32, i32* @y.38
  %825 = sub i32 %823, 1
  %826 = mul i32 %823, %825
  %827 = urem i32 %826, 2
  %828 = icmp eq i32 %827, 0
  %829 = icmp slt i32 %824, 10
  %830 = or i1 %828, %829
  br i1 %830, label %originalBBpart2177, label %originalBB175alteredBB

originalBBpart2177:                               ; preds = %originalBB175
  br label %831, !dbg !2374

831:                                              ; preds = %originalBBpart2177, %807
  %832 = load i32, i32* @x.37
  %833 = load i32, i32* @y.38
  %834 = sub i32 %832, 1
  %835 = mul i32 %832, %834
  %836 = urem i32 %835, 2
  %837 = icmp eq i32 %836, 0
  %838 = icmp slt i32 %833, 10
  %839 = or i1 %837, %838
  br i1 %839, label %originalBB179, label %originalBB179alteredBB

originalBB179:                                    ; preds = %831, %originalBB179alteredBB
  %840 = load i64, i64* %29, align 8, !dbg !2377
  %841 = add i64 %840, 1, !dbg !2377
  store i64 %841, i64* %29, align 8, !dbg !2377
  %842 = load i32, i32* @x.37
  %843 = load i32, i32* @y.38
  %844 = sub i32 %842, 1
  %845 = mul i32 %842, %844
  %846 = urem i32 %845, 2
  %847 = icmp eq i32 %846, 0
  %848 = icmp slt i32 %843, 10
  %849 = or i1 %847, %848
  br i1 %849, label %originalBBpart2194, label %originalBB179alteredBB

originalBBpart2194:                               ; preds = %originalBB179
  br label %850, !dbg !2377

850:                                              ; preds = %originalBBpart2194
  %851 = load i32, i32* @x.37
  %852 = load i32, i32* @y.38
  %853 = sub i32 %851, 1
  %854 = mul i32 %851, %853
  %855 = urem i32 %854, 2
  %856 = icmp eq i32 %855, 0
  %857 = icmp slt i32 %852, 10
  %858 = or i1 %856, %857
  br i1 %858, label %originalBB196, label %originalBB196alteredBB

originalBB196:                                    ; preds = %850, %originalBB196alteredBB
  %859 = load i32, i32* @x.37
  %860 = load i32, i32* @y.38
  %861 = sub i32 %859, 1
  %862 = mul i32 %859, %861
  %863 = urem i32 %862, 2
  %864 = icmp eq i32 %863, 0
  %865 = icmp slt i32 %860, 10
  %866 = or i1 %864, %865
  br i1 %866, label %originalBBpart2198, label %originalBB196alteredBB

originalBBpart2198:                               ; preds = %originalBB196
  br label %867, !dbg !2368

867:                                              ; preds = %originalBBpart2198
  %868 = load i64, i64* %29, align 8, !dbg !2378
  %869 = load i64, i64* %20, align 8, !dbg !2378
  %870 = icmp ult i64 %868, %869, !dbg !2378
  br i1 %870, label %871, label %891, !dbg !2381

871:                                              ; preds = %867
  %872 = load i32, i32* @x.37
  %873 = load i32, i32* @y.38
  %874 = sub i32 %872, 1
  %875 = mul i32 %872, %874
  %876 = urem i32 %875, 2
  %877 = icmp eq i32 %876, 0
  %878 = icmp slt i32 %873, 10
  %879 = or i1 %877, %878
  br i1 %879, label %originalBB200, label %originalBB200alteredBB

originalBB200:                                    ; preds = %871, %originalBB200alteredBB
  %880 = load i8*, i8** %19, align 8, !dbg !2378
  %881 = load i64, i64* %29, align 8, !dbg !2378
  %882 = getelementptr inbounds i8, i8* %880, i64 %881, !dbg !2378
  store i8 39, i8* %882, align 1, !dbg !2378
  %883 = load i32, i32* @x.37
  %884 = load i32, i32* @y.38
  %885 = sub i32 %883, 1
  %886 = mul i32 %883, %885
  %887 = urem i32 %886, 2
  %888 = icmp eq i32 %887, 0
  %889 = icmp slt i32 %884, 10
  %890 = or i1 %888, %889
  br i1 %890, label %originalBBpart2202, label %originalBB200alteredBB

originalBBpart2202:                               ; preds = %originalBB200
  br label %891, !dbg !2378

891:                                              ; preds = %originalBBpart2202, %867
  %892 = load i32, i32* @x.37
  %893 = load i32, i32* @y.38
  %894 = sub i32 %892, 1
  %895 = mul i32 %892, %894
  %896 = urem i32 %895, 2
  %897 = icmp eq i32 %896, 0
  %898 = icmp slt i32 %893, 10
  %899 = or i1 %897, %898
  br i1 %899, label %originalBB204, label %originalBB204alteredBB

originalBB204:                                    ; preds = %891, %originalBB204alteredBB
  %900 = load i64, i64* %29, align 8, !dbg !2381
  %901 = add i64 %900, 1, !dbg !2381
  store i64 %901, i64* %29, align 8, !dbg !2381
  %902 = load i32, i32* @x.37
  %903 = load i32, i32* @y.38
  %904 = sub i32 %902, 1
  %905 = mul i32 %902, %904
  %906 = urem i32 %905, 2
  %907 = icmp eq i32 %906, 0
  %908 = icmp slt i32 %903, 10
  %909 = or i1 %907, %908
  br i1 %909, label %originalBBpart2210, label %originalBB204alteredBB

originalBBpart2210:                               ; preds = %originalBB204
  br label %910, !dbg !2381

910:                                              ; preds = %originalBBpart2210
  %911 = load i32, i32* @x.37
  %912 = load i32, i32* @y.38
  %913 = sub i32 %911, 1
  %914 = mul i32 %911, %913
  %915 = urem i32 %914, 2
  %916 = icmp eq i32 %915, 0
  %917 = icmp slt i32 %912, 10
  %918 = or i1 %916, %917
  br i1 %918, label %originalBB212, label %originalBB212alteredBB

originalBB212:                                    ; preds = %910, %originalBB212alteredBB
  store i8 1, i8* %36, align 1, !dbg !2368
  %919 = load i32, i32* @x.37
  %920 = load i32, i32* @y.38
  %921 = sub i32 %919, 1
  %922 = mul i32 %919, %921
  %923 = urem i32 %922, 2
  %924 = icmp eq i32 %923, 0
  %925 = icmp slt i32 %920, 10
  %926 = or i1 %924, %925
  br i1 %926, label %originalBBpart2214, label %originalBB212alteredBB

originalBBpart2214:                               ; preds = %originalBB212
  br label %927, !dbg !2368

927:                                              ; preds = %originalBBpart2214, %originalBBpart2155, %originalBBpart2151
  br label %928, !dbg !2365

928:                                              ; preds = %927
  %929 = load i32, i32* @x.37
  %930 = load i32, i32* @y.38
  %931 = sub i32 %929, 1
  %932 = mul i32 %929, %931
  %933 = urem i32 %932, 2
  %934 = icmp eq i32 %933, 0
  %935 = icmp slt i32 %930, 10
  %936 = or i1 %934, %935
  br i1 %936, label %originalBB216, label %originalBB216alteredBB

originalBB216:                                    ; preds = %928, %originalBB216alteredBB
  %937 = load i64, i64* %29, align 8, !dbg !2382
  %938 = load i64, i64* %20, align 8, !dbg !2382
  %939 = icmp ult i64 %937, %938, !dbg !2382
  %940 = load i32, i32* @x.37
  %941 = load i32, i32* @y.38
  %942 = sub i32 %940, 1
  %943 = mul i32 %940, %942
  %944 = urem i32 %943, 2
  %945 = icmp eq i32 %944, 0
  %946 = icmp slt i32 %941, 10
  %947 = or i1 %945, %946
  br i1 %947, label %originalBBpart2218, label %originalBB216alteredBB

originalBBpart2218:                               ; preds = %originalBB216
  br i1 %939, label %948, label %952, !dbg !2385

948:                                              ; preds = %originalBBpart2218
  %949 = load i8*, i8** %19, align 8, !dbg !2382
  %950 = load i64, i64* %29, align 8, !dbg !2382
  %951 = getelementptr inbounds i8, i8* %949, i64 %950, !dbg !2382
  store i8 92, i8* %951, align 1, !dbg !2382
  br label %952, !dbg !2382

952:                                              ; preds = %948, %originalBBpart2218
  %953 = load i64, i64* %29, align 8, !dbg !2385
  %954 = add i64 %953, 1, !dbg !2385
  store i64 %954, i64* %29, align 8, !dbg !2385
  br label %955, !dbg !2385

955:                                              ; preds = %952
  %956 = load i32, i32* @x.37
  %957 = load i32, i32* @y.38
  %958 = sub i32 %956, 1
  %959 = mul i32 %956, %958
  %960 = urem i32 %959, 2
  %961 = icmp eq i32 %960, 0
  %962 = icmp slt i32 %957, 10
  %963 = or i1 %961, %962
  br i1 %963, label %originalBB220, label %originalBB220alteredBB

originalBB220:                                    ; preds = %955, %originalBB220alteredBB
  %964 = load i32, i32* @x.37
  %965 = load i32, i32* @y.38
  %966 = sub i32 %964, 1
  %967 = mul i32 %964, %966
  %968 = urem i32 %967, 2
  %969 = icmp eq i32 %968, 0
  %970 = icmp slt i32 %965, 10
  %971 = or i1 %969, %970
  br i1 %971, label %originalBBpart2222, label %originalBB220alteredBB

originalBBpart2222:                               ; preds = %originalBB220
  br label %972, !dbg !2365

972:                                              ; preds = %originalBBpart2222
  %973 = load i32, i32* @x.37
  %974 = load i32, i32* @y.38
  %975 = sub i32 %973, 1
  %976 = mul i32 %973, %975
  %977 = urem i32 %976, 2
  %978 = icmp eq i32 %977, 0
  %979 = icmp slt i32 %974, 10
  %980 = or i1 %978, %979
  br i1 %980, label %originalBB224, label %originalBB224alteredBB

originalBB224:                                    ; preds = %972, %originalBB224alteredBB
  %981 = load i32, i32* %23, align 4, !dbg !2386
  %982 = icmp ne i32 %981, 2, !dbg !2388
  %983 = load i32, i32* @x.37
  %984 = load i32, i32* @y.38
  %985 = sub i32 %983, 1
  %986 = mul i32 %983, %985
  %987 = urem i32 %986, 2
  %988 = icmp eq i32 %987, 0
  %989 = icmp slt i32 %984, 10
  %990 = or i1 %988, %989
  br i1 %990, label %originalBBpart2226, label %originalBB224alteredBB

originalBBpart2226:                               ; preds = %originalBB224
  br i1 %982, label %991, label %1149, !dbg !2389

991:                                              ; preds = %originalBBpart2226
  %992 = load i64, i64* %28, align 8, !dbg !2390
  %993 = add i64 %992, 1, !dbg !2391
  %994 = load i64, i64* %22, align 8, !dbg !2392
  %995 = icmp ult i64 %993, %994, !dbg !2393
  br i1 %995, label %996, label %1149, !dbg !2394

996:                                              ; preds = %991
  %997 = load i8*, i8** %21, align 8, !dbg !2395
  %998 = load i64, i64* %28, align 8, !dbg !2396
  %999 = add i64 %998, 1, !dbg !2397
  %1000 = getelementptr inbounds i8, i8* %997, i64 %999, !dbg !2395
  %1001 = load i8, i8* %1000, align 1, !dbg !2395
  %1002 = sext i8 %1001 to i32, !dbg !2395
  %1003 = icmp sle i32 48, %1002, !dbg !2398
  br i1 %1003, label %1004, label %1149, !dbg !2399

1004:                                             ; preds = %996
  %1005 = load i8*, i8** %21, align 8, !dbg !2400
  %1006 = load i64, i64* %28, align 8, !dbg !2401
  %1007 = add i64 %1006, 1, !dbg !2402
  %1008 = getelementptr inbounds i8, i8* %1005, i64 %1007, !dbg !2400
  %1009 = load i8, i8* %1008, align 1, !dbg !2400
  %1010 = sext i8 %1009 to i32, !dbg !2400
  %1011 = icmp sle i32 %1010, 57, !dbg !2403
  br i1 %1011, label %1012, label %1149, !dbg !2404

1012:                                             ; preds = %1004
  %1013 = load i32, i32* @x.37
  %1014 = load i32, i32* @y.38
  %1015 = sub i32 %1013, 1
  %1016 = mul i32 %1013, %1015
  %1017 = urem i32 %1016, 2
  %1018 = icmp eq i32 %1017, 0
  %1019 = icmp slt i32 %1014, 10
  %1020 = or i1 %1018, %1019
  br i1 %1020, label %originalBB228, label %originalBB228alteredBB

originalBB228:                                    ; preds = %1012, %originalBB228alteredBB
  %1021 = load i32, i32* @x.37
  %1022 = load i32, i32* @y.38
  %1023 = sub i32 %1021, 1
  %1024 = mul i32 %1021, %1023
  %1025 = urem i32 %1024, 2
  %1026 = icmp eq i32 %1025, 0
  %1027 = icmp slt i32 %1022, 10
  %1028 = or i1 %1026, %1027
  br i1 %1028, label %originalBBpart2230, label %originalBB228alteredBB

originalBBpart2230:                               ; preds = %originalBB228
  br label %1029, !dbg !2405

1029:                                             ; preds = %originalBBpart2230
  %1030 = load i32, i32* @x.37
  %1031 = load i32, i32* @y.38
  %1032 = sub i32 %1030, 1
  %1033 = mul i32 %1030, %1032
  %1034 = urem i32 %1033, 2
  %1035 = icmp eq i32 %1034, 0
  %1036 = icmp slt i32 %1031, 10
  %1037 = or i1 %1035, %1036
  br i1 %1037, label %originalBB232, label %originalBB232alteredBB

originalBB232:                                    ; preds = %1029, %originalBB232alteredBB
  %1038 = load i64, i64* %29, align 8, !dbg !2407
  %1039 = load i64, i64* %20, align 8, !dbg !2407
  %1040 = icmp ult i64 %1038, %1039, !dbg !2407
  %1041 = load i32, i32* @x.37
  %1042 = load i32, i32* @y.38
  %1043 = sub i32 %1041, 1
  %1044 = mul i32 %1041, %1043
  %1045 = urem i32 %1044, 2
  %1046 = icmp eq i32 %1045, 0
  %1047 = icmp slt i32 %1042, 10
  %1048 = or i1 %1046, %1047
  br i1 %1048, label %originalBBpart2234, label %originalBB232alteredBB

originalBBpart2234:                               ; preds = %originalBB232
  br i1 %1040, label %1049, label %1053, !dbg !2410

1049:                                             ; preds = %originalBBpart2234
  %1050 = load i8*, i8** %19, align 8, !dbg !2407
  %1051 = load i64, i64* %29, align 8, !dbg !2407
  %1052 = getelementptr inbounds i8, i8* %1050, i64 %1051, !dbg !2407
  store i8 48, i8* %1052, align 1, !dbg !2407
  br label %1053, !dbg !2407

1053:                                             ; preds = %1049, %originalBBpart2234
  %1054 = load i32, i32* @x.37
  %1055 = load i32, i32* @y.38
  %1056 = sub i32 %1054, 1
  %1057 = mul i32 %1054, %1056
  %1058 = urem i32 %1057, 2
  %1059 = icmp eq i32 %1058, 0
  %1060 = icmp slt i32 %1055, 10
  %1061 = or i1 %1059, %1060
  br i1 %1061, label %originalBB236, label %originalBB236alteredBB

originalBB236:                                    ; preds = %1053, %originalBB236alteredBB
  %1062 = load i64, i64* %29, align 8, !dbg !2410
  %1063 = add i64 %1062, 1, !dbg !2410
  store i64 %1063, i64* %29, align 8, !dbg !2410
  %1064 = load i32, i32* @x.37
  %1065 = load i32, i32* @y.38
  %1066 = sub i32 %1064, 1
  %1067 = mul i32 %1064, %1066
  %1068 = urem i32 %1067, 2
  %1069 = icmp eq i32 %1068, 0
  %1070 = icmp slt i32 %1065, 10
  %1071 = or i1 %1069, %1070
  br i1 %1071, label %originalBBpart2254, label %originalBB236alteredBB

originalBBpart2254:                               ; preds = %originalBB236
  br label %1072, !dbg !2410

1072:                                             ; preds = %originalBBpart2254
  %1073 = load i32, i32* @x.37
  %1074 = load i32, i32* @y.38
  %1075 = sub i32 %1073, 1
  %1076 = mul i32 %1073, %1075
  %1077 = urem i32 %1076, 2
  %1078 = icmp eq i32 %1077, 0
  %1079 = icmp slt i32 %1074, 10
  %1080 = or i1 %1078, %1079
  br i1 %1080, label %originalBB256, label %originalBB256alteredBB

originalBB256:                                    ; preds = %1072, %originalBB256alteredBB
  %1081 = load i32, i32* @x.37
  %1082 = load i32, i32* @y.38
  %1083 = sub i32 %1081, 1
  %1084 = mul i32 %1081, %1083
  %1085 = urem i32 %1084, 2
  %1086 = icmp eq i32 %1085, 0
  %1087 = icmp slt i32 %1082, 10
  %1088 = or i1 %1086, %1087
  br i1 %1088, label %originalBBpart2258, label %originalBB256alteredBB

originalBBpart2258:                               ; preds = %originalBB256
  br label %1089, !dbg !2411

1089:                                             ; preds = %originalBBpart2258
  %1090 = load i64, i64* %29, align 8, !dbg !2412
  %1091 = load i64, i64* %20, align 8, !dbg !2412
  %1092 = icmp ult i64 %1090, %1091, !dbg !2412
  br i1 %1092, label %1093, label %1113, !dbg !2415

1093:                                             ; preds = %1089
  %1094 = load i32, i32* @x.37
  %1095 = load i32, i32* @y.38
  %1096 = sub i32 %1094, 1
  %1097 = mul i32 %1094, %1096
  %1098 = urem i32 %1097, 2
  %1099 = icmp eq i32 %1098, 0
  %1100 = icmp slt i32 %1095, 10
  %1101 = or i1 %1099, %1100
  br i1 %1101, label %originalBB260, label %originalBB260alteredBB

originalBB260:                                    ; preds = %1093, %originalBB260alteredBB
  %1102 = load i8*, i8** %19, align 8, !dbg !2412
  %1103 = load i64, i64* %29, align 8, !dbg !2412
  %1104 = getelementptr inbounds i8, i8* %1102, i64 %1103, !dbg !2412
  store i8 48, i8* %1104, align 1, !dbg !2412
  %1105 = load i32, i32* @x.37
  %1106 = load i32, i32* @y.38
  %1107 = sub i32 %1105, 1
  %1108 = mul i32 %1105, %1107
  %1109 = urem i32 %1108, 2
  %1110 = icmp eq i32 %1109, 0
  %1111 = icmp slt i32 %1106, 10
  %1112 = or i1 %1110, %1111
  br i1 %1112, label %originalBBpart2262, label %originalBB260alteredBB

originalBBpart2262:                               ; preds = %originalBB260
  br label %1113, !dbg !2412

1113:                                             ; preds = %originalBBpart2262, %1089
  %1114 = load i32, i32* @x.37
  %1115 = load i32, i32* @y.38
  %1116 = sub i32 %1114, 1
  %1117 = mul i32 %1114, %1116
  %1118 = urem i32 %1117, 2
  %1119 = icmp eq i32 %1118, 0
  %1120 = icmp slt i32 %1115, 10
  %1121 = or i1 %1119, %1120
  br i1 %1121, label %originalBB264, label %originalBB264alteredBB

originalBB264:                                    ; preds = %1113, %originalBB264alteredBB
  %1122 = load i64, i64* %29, align 8, !dbg !2415
  %1123 = add i64 %1122, 1, !dbg !2415
  store i64 %1123, i64* %29, align 8, !dbg !2415
  %1124 = load i32, i32* @x.37
  %1125 = load i32, i32* @y.38
  %1126 = sub i32 %1124, 1
  %1127 = mul i32 %1124, %1126
  %1128 = urem i32 %1127, 2
  %1129 = icmp eq i32 %1128, 0
  %1130 = icmp slt i32 %1125, 10
  %1131 = or i1 %1129, %1130
  br i1 %1131, label %originalBBpart2273, label %originalBB264alteredBB

originalBBpart2273:                               ; preds = %originalBB264
  br label %1132, !dbg !2415

1132:                                             ; preds = %originalBBpart2273
  %1133 = load i32, i32* @x.37
  %1134 = load i32, i32* @y.38
  %1135 = sub i32 %1133, 1
  %1136 = mul i32 %1133, %1135
  %1137 = urem i32 %1136, 2
  %1138 = icmp eq i32 %1137, 0
  %1139 = icmp slt i32 %1134, 10
  %1140 = or i1 %1138, %1139
  br i1 %1140, label %originalBB275, label %originalBB275alteredBB

originalBB275:                                    ; preds = %1132, %originalBB275alteredBB
  %1141 = load i32, i32* @x.37
  %1142 = load i32, i32* @y.38
  %1143 = sub i32 %1141, 1
  %1144 = mul i32 %1141, %1143
  %1145 = urem i32 %1144, 2
  %1146 = icmp eq i32 %1145, 0
  %1147 = icmp slt i32 %1142, 10
  %1148 = or i1 %1146, %1147
  br i1 %1148, label %originalBBpart2277, label %originalBB275alteredBB

originalBBpart2277:                               ; preds = %originalBB275
  br label %1149, !dbg !2416

1149:                                             ; preds = %originalBBpart2277, %1004, %996, %991, %originalBBpart2226
  %1150 = load i32, i32* @x.37
  %1151 = load i32, i32* @y.38
  %1152 = sub i32 %1150, 1
  %1153 = mul i32 %1150, %1152
  %1154 = urem i32 %1153, 2
  %1155 = icmp eq i32 %1154, 0
  %1156 = icmp slt i32 %1151, 10
  %1157 = or i1 %1155, %1156
  br i1 %1157, label %originalBB279, label %originalBB279alteredBB

originalBB279:                                    ; preds = %1149, %originalBB279alteredBB
  store i8 48, i8* %39, align 1, !dbg !2417
  %1158 = load i32, i32* @x.37
  %1159 = load i32, i32* @y.38
  %1160 = sub i32 %1158, 1
  %1161 = mul i32 %1158, %1160
  %1162 = urem i32 %1161, 2
  %1163 = icmp eq i32 %1162, 0
  %1164 = icmp slt i32 %1159, 10
  %1165 = or i1 %1163, %1164
  br i1 %1165, label %originalBBpart2281, label %originalBB279alteredBB

originalBBpart2281:                               ; preds = %originalBB279
  br label %1204, !dbg !2418

1166:                                             ; preds = %668
  %1167 = load i32, i32* @x.37
  %1168 = load i32, i32* @y.38
  %1169 = sub i32 %1167, 1
  %1170 = mul i32 %1167, %1169
  %1171 = urem i32 %1170, 2
  %1172 = icmp eq i32 %1171, 0
  %1173 = icmp slt i32 %1168, 10
  %1174 = or i1 %1172, %1173
  br i1 %1174, label %originalBB283, label %originalBB283alteredBB

originalBB283:                                    ; preds = %1166, %originalBB283alteredBB
  %1175 = load i32, i32* %24, align 4, !dbg !2419
  %1176 = and i32 %1175, 1, !dbg !2421
  %1177 = icmp ne i32 %1176, 0, !dbg !2421
  %1178 = load i32, i32* @x.37
  %1179 = load i32, i32* @y.38
  %1180 = sub i32 %1178, 1
  %1181 = mul i32 %1178, %1180
  %1182 = urem i32 %1181, 2
  %1183 = icmp eq i32 %1182, 0
  %1184 = icmp slt i32 %1179, 10
  %1185 = or i1 %1183, %1184
  br i1 %1185, label %originalBBpart2291, label %originalBB283alteredBB

originalBBpart2291:                               ; preds = %originalBB283
  br i1 %1177, label %1186, label %1187, !dbg !2422

1186:                                             ; preds = %originalBBpart2291
  br label %4233, !dbg !2423

1187:                                             ; preds = %originalBBpart2291
  %1188 = load i32, i32* @x.37
  %1189 = load i32, i32* @y.38
  %1190 = sub i32 %1188, 1
  %1191 = mul i32 %1188, %1190
  %1192 = urem i32 %1191, 2
  %1193 = icmp eq i32 %1192, 0
  %1194 = icmp slt i32 %1189, 10
  %1195 = or i1 %1193, %1194
  br i1 %1195, label %originalBB293, label %originalBB293alteredBB

originalBB293:                                    ; preds = %1187, %originalBB293alteredBB
  %1196 = load i32, i32* @x.37
  %1197 = load i32, i32* @y.38
  %1198 = sub i32 %1196, 1
  %1199 = mul i32 %1196, %1198
  %1200 = urem i32 %1199, 2
  %1201 = icmp eq i32 %1200, 0
  %1202 = icmp slt i32 %1197, 10
  %1203 = or i1 %1201, %1202
  br i1 %1203, label %originalBBpart2295, label %originalBB293alteredBB

originalBBpart2295:                               ; preds = %originalBB293
  br label %1204

1204:                                             ; preds = %originalBBpart2295, %originalBBpart2281
  br label %3593, !dbg !2424

1205:                                             ; preds = %661
  %1206 = load i32, i32* %23, align 4, !dbg !2425
  switch i32 %1206, label %1635 [
    i32 2, label %1207
    i32 5, label %1244
  ], !dbg !2426

1207:                                             ; preds = %1205
  %1208 = load i32, i32* @x.37
  %1209 = load i32, i32* @y.38
  %1210 = sub i32 %1208, 1
  %1211 = mul i32 %1208, %1210
  %1212 = urem i32 %1211, 2
  %1213 = icmp eq i32 %1212, 0
  %1214 = icmp slt i32 %1209, 10
  %1215 = or i1 %1213, %1214
  br i1 %1215, label %originalBB297, label %originalBB297alteredBB

originalBB297:                                    ; preds = %1207, %originalBB297alteredBB
  %1216 = load i8, i8* %35, align 1, !dbg !2427
  %1217 = trunc i8 %1216 to i1, !dbg !2427
  %1218 = load i32, i32* @x.37
  %1219 = load i32, i32* @y.38
  %1220 = sub i32 %1218, 1
  %1221 = mul i32 %1218, %1220
  %1222 = urem i32 %1221, 2
  %1223 = icmp eq i32 %1222, 0
  %1224 = icmp slt i32 %1219, 10
  %1225 = or i1 %1223, %1224
  br i1 %1225, label %originalBBpart2299, label %originalBB297alteredBB

originalBBpart2299:                               ; preds = %originalBB297
  br i1 %1217, label %1226, label %1227, !dbg !2430

1226:                                             ; preds = %originalBBpart2299
  br label %4606, !dbg !2431

1227:                                             ; preds = %originalBBpart2299
  %1228 = load i32, i32* @x.37
  %1229 = load i32, i32* @y.38
  %1230 = sub i32 %1228, 1
  %1231 = mul i32 %1228, %1230
  %1232 = urem i32 %1231, 2
  %1233 = icmp eq i32 %1232, 0
  %1234 = icmp slt i32 %1229, 10
  %1235 = or i1 %1233, %1234
  br i1 %1235, label %originalBB301, label %originalBB301alteredBB

originalBB301:                                    ; preds = %1227, %originalBB301alteredBB
  %1236 = load i32, i32* @x.37
  %1237 = load i32, i32* @y.38
  %1238 = sub i32 %1236, 1
  %1239 = mul i32 %1236, %1238
  %1240 = urem i32 %1239, 2
  %1241 = icmp eq i32 %1240, 0
  %1242 = icmp slt i32 %1237, 10
  %1243 = or i1 %1241, %1242
  br i1 %1243, label %originalBBpart2303, label %originalBB301alteredBB

originalBBpart2303:                               ; preds = %originalBB301
  br label %1636, !dbg !2432

1244:                                             ; preds = %1205
  %1245 = load i32, i32* %24, align 4, !dbg !2433
  %1246 = and i32 %1245, 4, !dbg !2435
  %1247 = icmp ne i32 %1246, 0, !dbg !2435
  br i1 %1247, label %1248, label %1618, !dbg !2436

1248:                                             ; preds = %1244
  %1249 = load i32, i32* @x.37
  %1250 = load i32, i32* @y.38
  %1251 = sub i32 %1249, 1
  %1252 = mul i32 %1249, %1251
  %1253 = urem i32 %1252, 2
  %1254 = icmp eq i32 %1253, 0
  %1255 = icmp slt i32 %1250, 10
  %1256 = or i1 %1254, %1255
  br i1 %1256, label %originalBB305, label %originalBB305alteredBB

originalBB305:                                    ; preds = %1248, %originalBB305alteredBB
  %1257 = load i64, i64* %28, align 8, !dbg !2437
  %1258 = add i64 %1257, 2, !dbg !2438
  %1259 = load i64, i64* %22, align 8, !dbg !2439
  %1260 = icmp ult i64 %1258, %1259, !dbg !2440
  %1261 = load i32, i32* @x.37
  %1262 = load i32, i32* @y.38
  %1263 = sub i32 %1261, 1
  %1264 = mul i32 %1261, %1263
  %1265 = urem i32 %1264, 2
  %1266 = icmp eq i32 %1265, 0
  %1267 = icmp slt i32 %1262, 10
  %1268 = or i1 %1266, %1267
  br i1 %1268, label %originalBBpart2318, label %originalBB305alteredBB

originalBBpart2318:                               ; preds = %originalBB305
  br i1 %1260, label %1269, label %1618, !dbg !2441

1269:                                             ; preds = %originalBBpart2318
  %1270 = load i32, i32* @x.37
  %1271 = load i32, i32* @y.38
  %1272 = sub i32 %1270, 1
  %1273 = mul i32 %1270, %1272
  %1274 = urem i32 %1273, 2
  %1275 = icmp eq i32 %1274, 0
  %1276 = icmp slt i32 %1271, 10
  %1277 = or i1 %1275, %1276
  br i1 %1277, label %originalBB320, label %originalBB320alteredBB

originalBB320:                                    ; preds = %1269, %originalBB320alteredBB
  %1278 = load i8*, i8** %21, align 8, !dbg !2442
  %1279 = load i64, i64* %28, align 8, !dbg !2443
  %1280 = add i64 %1279, 1, !dbg !2444
  %1281 = getelementptr inbounds i8, i8* %1278, i64 %1280, !dbg !2442
  %1282 = load i8, i8* %1281, align 1, !dbg !2442
  %1283 = sext i8 %1282 to i32, !dbg !2442
  %1284 = icmp eq i32 %1283, 63, !dbg !2445
  %1285 = load i32, i32* @x.37
  %1286 = load i32, i32* @y.38
  %1287 = sub i32 %1285, 1
  %1288 = mul i32 %1285, %1287
  %1289 = urem i32 %1288, 2
  %1290 = icmp eq i32 %1289, 0
  %1291 = icmp slt i32 %1286, 10
  %1292 = or i1 %1290, %1291
  br i1 %1292, label %originalBBpart2330, label %originalBB320alteredBB

originalBBpart2330:                               ; preds = %originalBB320
  br i1 %1284, label %1293, label %1618, !dbg !2446

1293:                                             ; preds = %originalBBpart2330
  %1294 = load i32, i32* @x.37
  %1295 = load i32, i32* @y.38
  %1296 = sub i32 %1294, 1
  %1297 = mul i32 %1294, %1296
  %1298 = urem i32 %1297, 2
  %1299 = icmp eq i32 %1298, 0
  %1300 = icmp slt i32 %1295, 10
  %1301 = or i1 %1299, %1300
  br i1 %1301, label %originalBB332, label %originalBB332alteredBB

originalBB332:                                    ; preds = %1293, %originalBB332alteredBB
  %1302 = load i8*, i8** %21, align 8, !dbg !2447
  %1303 = load i64, i64* %28, align 8, !dbg !2448
  %1304 = add i64 %1303, 2, !dbg !2449
  %1305 = getelementptr inbounds i8, i8* %1302, i64 %1304, !dbg !2447
  %1306 = load i8, i8* %1305, align 1, !dbg !2447
  %1307 = sext i8 %1306 to i32, !dbg !2447
  %1308 = load i32, i32* @x.37
  %1309 = load i32, i32* @y.38
  %1310 = sub i32 %1308, 1
  %1311 = mul i32 %1308, %1310
  %1312 = urem i32 %1311, 2
  %1313 = icmp eq i32 %1312, 0
  %1314 = icmp slt i32 %1309, 10
  %1315 = or i1 %1313, %1314
  br i1 %1315, label %originalBBpart2342, label %originalBB332alteredBB

originalBBpart2342:                               ; preds = %originalBB332
  switch i32 %1307, label %1600 [
    i32 33, label %1316
    i32 39, label %1316
    i32 40, label %1316
    i32 41, label %1316
    i32 45, label %1316
    i32 47, label %1316
    i32 60, label %1316
    i32 61, label %1316
    i32 62, label %1316
  ], !dbg !2450

1316:                                             ; preds = %originalBBpart2342, %originalBBpart2342, %originalBBpart2342, %originalBBpart2342, %originalBBpart2342, %originalBBpart2342, %originalBBpart2342, %originalBBpart2342, %originalBBpart2342
  %1317 = load i8, i8* %35, align 1, !dbg !2451
  %1318 = trunc i8 %1317 to i1, !dbg !2451
  br i1 %1318, label %1319, label %1320, !dbg !2454

1319:                                             ; preds = %1316
  br label %4606, !dbg !2455

1320:                                             ; preds = %1316
  %1321 = load i32, i32* @x.37
  %1322 = load i32, i32* @y.38
  %1323 = sub i32 %1321, 1
  %1324 = mul i32 %1321, %1323
  %1325 = urem i32 %1324, 2
  %1326 = icmp eq i32 %1325, 0
  %1327 = icmp slt i32 %1322, 10
  %1328 = or i1 %1326, %1327
  br i1 %1328, label %originalBB344, label %originalBB344alteredBB

originalBB344:                                    ; preds = %1320, %originalBB344alteredBB
  %1329 = load i8*, i8** %21, align 8, !dbg !2456
  %1330 = load i64, i64* %28, align 8, !dbg !2457
  %1331 = add i64 %1330, 2, !dbg !2458
  %1332 = getelementptr inbounds i8, i8* %1329, i64 %1331, !dbg !2456
  %1333 = load i8, i8* %1332, align 1, !dbg !2456
  store i8 %1333, i8* %39, align 1, !dbg !2459
  %1334 = load i64, i64* %28, align 8, !dbg !2460
  %1335 = add i64 %1334, 2, !dbg !2460
  store i64 %1335, i64* %28, align 8, !dbg !2460
  %1336 = load i32, i32* @x.37
  %1337 = load i32, i32* @y.38
  %1338 = sub i32 %1336, 1
  %1339 = mul i32 %1336, %1338
  %1340 = urem i32 %1339, 2
  %1341 = icmp eq i32 %1340, 0
  %1342 = icmp slt i32 %1337, 10
  %1343 = or i1 %1341, %1342
  br i1 %1343, label %originalBBpart2367, label %originalBB344alteredBB

originalBBpart2367:                               ; preds = %originalBB344
  br label %1344, !dbg !2461

1344:                                             ; preds = %originalBBpart2367
  %1345 = load i32, i32* @x.37
  %1346 = load i32, i32* @y.38
  %1347 = sub i32 %1345, 1
  %1348 = mul i32 %1345, %1347
  %1349 = urem i32 %1348, 2
  %1350 = icmp eq i32 %1349, 0
  %1351 = icmp slt i32 %1346, 10
  %1352 = or i1 %1350, %1351
  br i1 %1352, label %originalBB369, label %originalBB369alteredBB

originalBB369:                                    ; preds = %1344, %originalBB369alteredBB
  %1353 = load i64, i64* %29, align 8, !dbg !2462
  %1354 = load i64, i64* %20, align 8, !dbg !2462
  %1355 = icmp ult i64 %1353, %1354, !dbg !2462
  %1356 = load i32, i32* @x.37
  %1357 = load i32, i32* @y.38
  %1358 = sub i32 %1356, 1
  %1359 = mul i32 %1356, %1358
  %1360 = urem i32 %1359, 2
  %1361 = icmp eq i32 %1360, 0
  %1362 = icmp slt i32 %1357, 10
  %1363 = or i1 %1361, %1362
  br i1 %1363, label %originalBBpart2371, label %originalBB369alteredBB

originalBBpart2371:                               ; preds = %originalBB369
  br i1 %1355, label %1364, label %1384, !dbg !2465

1364:                                             ; preds = %originalBBpart2371
  %1365 = load i32, i32* @x.37
  %1366 = load i32, i32* @y.38
  %1367 = sub i32 %1365, 1
  %1368 = mul i32 %1365, %1367
  %1369 = urem i32 %1368, 2
  %1370 = icmp eq i32 %1369, 0
  %1371 = icmp slt i32 %1366, 10
  %1372 = or i1 %1370, %1371
  br i1 %1372, label %originalBB373, label %originalBB373alteredBB

originalBB373:                                    ; preds = %1364, %originalBB373alteredBB
  %1373 = load i8*, i8** %19, align 8, !dbg !2462
  %1374 = load i64, i64* %29, align 8, !dbg !2462
  %1375 = getelementptr inbounds i8, i8* %1373, i64 %1374, !dbg !2462
  store i8 63, i8* %1375, align 1, !dbg !2462
  %1376 = load i32, i32* @x.37
  %1377 = load i32, i32* @y.38
  %1378 = sub i32 %1376, 1
  %1379 = mul i32 %1376, %1378
  %1380 = urem i32 %1379, 2
  %1381 = icmp eq i32 %1380, 0
  %1382 = icmp slt i32 %1377, 10
  %1383 = or i1 %1381, %1382
  br i1 %1383, label %originalBBpart2375, label %originalBB373alteredBB

originalBBpart2375:                               ; preds = %originalBB373
  br label %1384, !dbg !2462

1384:                                             ; preds = %originalBBpart2375, %originalBBpart2371
  %1385 = load i32, i32* @x.37
  %1386 = load i32, i32* @y.38
  %1387 = sub i32 %1385, 1
  %1388 = mul i32 %1385, %1387
  %1389 = urem i32 %1388, 2
  %1390 = icmp eq i32 %1389, 0
  %1391 = icmp slt i32 %1386, 10
  %1392 = or i1 %1390, %1391
  br i1 %1392, label %originalBB377, label %originalBB377alteredBB

originalBB377:                                    ; preds = %1384, %originalBB377alteredBB
  %1393 = load i64, i64* %29, align 8, !dbg !2465
  %1394 = add i64 %1393, 1, !dbg !2465
  store i64 %1394, i64* %29, align 8, !dbg !2465
  %1395 = load i32, i32* @x.37
  %1396 = load i32, i32* @y.38
  %1397 = sub i32 %1395, 1
  %1398 = mul i32 %1395, %1397
  %1399 = urem i32 %1398, 2
  %1400 = icmp eq i32 %1399, 0
  %1401 = icmp slt i32 %1396, 10
  %1402 = or i1 %1400, %1401
  br i1 %1402, label %originalBBpart2386, label %originalBB377alteredBB

originalBBpart2386:                               ; preds = %originalBB377
  br label %1403, !dbg !2465

1403:                                             ; preds = %originalBBpart2386
  %1404 = load i32, i32* @x.37
  %1405 = load i32, i32* @y.38
  %1406 = sub i32 %1404, 1
  %1407 = mul i32 %1404, %1406
  %1408 = urem i32 %1407, 2
  %1409 = icmp eq i32 %1408, 0
  %1410 = icmp slt i32 %1405, 10
  %1411 = or i1 %1409, %1410
  br i1 %1411, label %originalBB388, label %originalBB388alteredBB

originalBB388:                                    ; preds = %1403, %originalBB388alteredBB
  %1412 = load i32, i32* @x.37
  %1413 = load i32, i32* @y.38
  %1414 = sub i32 %1412, 1
  %1415 = mul i32 %1412, %1414
  %1416 = urem i32 %1415, 2
  %1417 = icmp eq i32 %1416, 0
  %1418 = icmp slt i32 %1413, 10
  %1419 = or i1 %1417, %1418
  br i1 %1419, label %originalBBpart2390, label %originalBB388alteredBB

originalBBpart2390:                               ; preds = %originalBB388
  br label %1420, !dbg !2466

1420:                                             ; preds = %originalBBpart2390
  %1421 = load i32, i32* @x.37
  %1422 = load i32, i32* @y.38
  %1423 = sub i32 %1421, 1
  %1424 = mul i32 %1421, %1423
  %1425 = urem i32 %1424, 2
  %1426 = icmp eq i32 %1425, 0
  %1427 = icmp slt i32 %1422, 10
  %1428 = or i1 %1426, %1427
  br i1 %1428, label %originalBB392, label %originalBB392alteredBB

originalBB392:                                    ; preds = %1420, %originalBB392alteredBB
  %1429 = load i64, i64* %29, align 8, !dbg !2467
  %1430 = load i64, i64* %20, align 8, !dbg !2467
  %1431 = icmp ult i64 %1429, %1430, !dbg !2467
  %1432 = load i32, i32* @x.37
  %1433 = load i32, i32* @y.38
  %1434 = sub i32 %1432, 1
  %1435 = mul i32 %1432, %1434
  %1436 = urem i32 %1435, 2
  %1437 = icmp eq i32 %1436, 0
  %1438 = icmp slt i32 %1433, 10
  %1439 = or i1 %1437, %1438
  br i1 %1439, label %originalBBpart2394, label %originalBB392alteredBB

originalBBpart2394:                               ; preds = %originalBB392
  br i1 %1431, label %1440, label %1444, !dbg !2470

1440:                                             ; preds = %originalBBpart2394
  %1441 = load i8*, i8** %19, align 8, !dbg !2467
  %1442 = load i64, i64* %29, align 8, !dbg !2467
  %1443 = getelementptr inbounds i8, i8* %1441, i64 %1442, !dbg !2467
  store i8 34, i8* %1443, align 1, !dbg !2467
  br label %1444, !dbg !2467

1444:                                             ; preds = %1440, %originalBBpart2394
  %1445 = load i32, i32* @x.37
  %1446 = load i32, i32* @y.38
  %1447 = sub i32 %1445, 1
  %1448 = mul i32 %1445, %1447
  %1449 = urem i32 %1448, 2
  %1450 = icmp eq i32 %1449, 0
  %1451 = icmp slt i32 %1446, 10
  %1452 = or i1 %1450, %1451
  br i1 %1452, label %originalBB396, label %originalBB396alteredBB

originalBB396:                                    ; preds = %1444, %originalBB396alteredBB
  %1453 = load i64, i64* %29, align 8, !dbg !2470
  %1454 = add i64 %1453, 1, !dbg !2470
  store i64 %1454, i64* %29, align 8, !dbg !2470
  %1455 = load i32, i32* @x.37
  %1456 = load i32, i32* @y.38
  %1457 = sub i32 %1455, 1
  %1458 = mul i32 %1455, %1457
  %1459 = urem i32 %1458, 2
  %1460 = icmp eq i32 %1459, 0
  %1461 = icmp slt i32 %1456, 10
  %1462 = or i1 %1460, %1461
  br i1 %1462, label %originalBBpart2407, label %originalBB396alteredBB

originalBBpart2407:                               ; preds = %originalBB396
  br label %1463, !dbg !2470

1463:                                             ; preds = %originalBBpart2407
  %1464 = load i32, i32* @x.37
  %1465 = load i32, i32* @y.38
  %1466 = sub i32 %1464, 1
  %1467 = mul i32 %1464, %1466
  %1468 = urem i32 %1467, 2
  %1469 = icmp eq i32 %1468, 0
  %1470 = icmp slt i32 %1465, 10
  %1471 = or i1 %1469, %1470
  br i1 %1471, label %originalBB409, label %originalBB409alteredBB

originalBB409:                                    ; preds = %1463, %originalBB409alteredBB
  %1472 = load i32, i32* @x.37
  %1473 = load i32, i32* @y.38
  %1474 = sub i32 %1472, 1
  %1475 = mul i32 %1472, %1474
  %1476 = urem i32 %1475, 2
  %1477 = icmp eq i32 %1476, 0
  %1478 = icmp slt i32 %1473, 10
  %1479 = or i1 %1477, %1478
  br i1 %1479, label %originalBBpart2411, label %originalBB409alteredBB

originalBBpart2411:                               ; preds = %originalBB409
  br label %1480, !dbg !2471

1480:                                             ; preds = %originalBBpart2411
  %1481 = load i32, i32* @x.37
  %1482 = load i32, i32* @y.38
  %1483 = sub i32 %1481, 1
  %1484 = mul i32 %1481, %1483
  %1485 = urem i32 %1484, 2
  %1486 = icmp eq i32 %1485, 0
  %1487 = icmp slt i32 %1482, 10
  %1488 = or i1 %1486, %1487
  br i1 %1488, label %originalBB413, label %originalBB413alteredBB

originalBB413:                                    ; preds = %1480, %originalBB413alteredBB
  %1489 = load i64, i64* %29, align 8, !dbg !2472
  %1490 = load i64, i64* %20, align 8, !dbg !2472
  %1491 = icmp ult i64 %1489, %1490, !dbg !2472
  %1492 = load i32, i32* @x.37
  %1493 = load i32, i32* @y.38
  %1494 = sub i32 %1492, 1
  %1495 = mul i32 %1492, %1494
  %1496 = urem i32 %1495, 2
  %1497 = icmp eq i32 %1496, 0
  %1498 = icmp slt i32 %1493, 10
  %1499 = or i1 %1497, %1498
  br i1 %1499, label %originalBBpart2415, label %originalBB413alteredBB

originalBBpart2415:                               ; preds = %originalBB413
  br i1 %1491, label %1500, label %1520, !dbg !2475

1500:                                             ; preds = %originalBBpart2415
  %1501 = load i32, i32* @x.37
  %1502 = load i32, i32* @y.38
  %1503 = sub i32 %1501, 1
  %1504 = mul i32 %1501, %1503
  %1505 = urem i32 %1504, 2
  %1506 = icmp eq i32 %1505, 0
  %1507 = icmp slt i32 %1502, 10
  %1508 = or i1 %1506, %1507
  br i1 %1508, label %originalBB417, label %originalBB417alteredBB

originalBB417:                                    ; preds = %1500, %originalBB417alteredBB
  %1509 = load i8*, i8** %19, align 8, !dbg !2472
  %1510 = load i64, i64* %29, align 8, !dbg !2472
  %1511 = getelementptr inbounds i8, i8* %1509, i64 %1510, !dbg !2472
  store i8 34, i8* %1511, align 1, !dbg !2472
  %1512 = load i32, i32* @x.37
  %1513 = load i32, i32* @y.38
  %1514 = sub i32 %1512, 1
  %1515 = mul i32 %1512, %1514
  %1516 = urem i32 %1515, 2
  %1517 = icmp eq i32 %1516, 0
  %1518 = icmp slt i32 %1513, 10
  %1519 = or i1 %1517, %1518
  br i1 %1519, label %originalBBpart2419, label %originalBB417alteredBB

originalBBpart2419:                               ; preds = %originalBB417
  br label %1520, !dbg !2472

1520:                                             ; preds = %originalBBpart2419, %originalBBpart2415
  %1521 = load i32, i32* @x.37
  %1522 = load i32, i32* @y.38
  %1523 = sub i32 %1521, 1
  %1524 = mul i32 %1521, %1523
  %1525 = urem i32 %1524, 2
  %1526 = icmp eq i32 %1525, 0
  %1527 = icmp slt i32 %1522, 10
  %1528 = or i1 %1526, %1527
  br i1 %1528, label %originalBB421, label %originalBB421alteredBB

originalBB421:                                    ; preds = %1520, %originalBB421alteredBB
  %1529 = load i64, i64* %29, align 8, !dbg !2475
  %1530 = add i64 %1529, 1, !dbg !2475
  store i64 %1530, i64* %29, align 8, !dbg !2475
  %1531 = load i32, i32* @x.37
  %1532 = load i32, i32* @y.38
  %1533 = sub i32 %1531, 1
  %1534 = mul i32 %1531, %1533
  %1535 = urem i32 %1534, 2
  %1536 = icmp eq i32 %1535, 0
  %1537 = icmp slt i32 %1532, 10
  %1538 = or i1 %1536, %1537
  br i1 %1538, label %originalBBpart2429, label %originalBB421alteredBB

originalBBpart2429:                               ; preds = %originalBB421
  br label %1539, !dbg !2475

1539:                                             ; preds = %originalBBpart2429
  br label %1540, !dbg !2476

1540:                                             ; preds = %1539
  %1541 = load i32, i32* @x.37
  %1542 = load i32, i32* @y.38
  %1543 = sub i32 %1541, 1
  %1544 = mul i32 %1541, %1543
  %1545 = urem i32 %1544, 2
  %1546 = icmp eq i32 %1545, 0
  %1547 = icmp slt i32 %1542, 10
  %1548 = or i1 %1546, %1547
  br i1 %1548, label %originalBB431, label %originalBB431alteredBB

originalBB431:                                    ; preds = %1540, %originalBB431alteredBB
  %1549 = load i64, i64* %29, align 8, !dbg !2477
  %1550 = load i64, i64* %20, align 8, !dbg !2477
  %1551 = icmp ult i64 %1549, %1550, !dbg !2477
  %1552 = load i32, i32* @x.37
  %1553 = load i32, i32* @y.38
  %1554 = sub i32 %1552, 1
  %1555 = mul i32 %1552, %1554
  %1556 = urem i32 %1555, 2
  %1557 = icmp eq i32 %1556, 0
  %1558 = icmp slt i32 %1553, 10
  %1559 = or i1 %1557, %1558
  br i1 %1559, label %originalBBpart2433, label %originalBB431alteredBB

originalBBpart2433:                               ; preds = %originalBB431
  br i1 %1551, label %1560, label %1580, !dbg !2480

1560:                                             ; preds = %originalBBpart2433
  %1561 = load i32, i32* @x.37
  %1562 = load i32, i32* @y.38
  %1563 = sub i32 %1561, 1
  %1564 = mul i32 %1561, %1563
  %1565 = urem i32 %1564, 2
  %1566 = icmp eq i32 %1565, 0
  %1567 = icmp slt i32 %1562, 10
  %1568 = or i1 %1566, %1567
  br i1 %1568, label %originalBB435, label %originalBB435alteredBB

originalBB435:                                    ; preds = %1560, %originalBB435alteredBB
  %1569 = load i8*, i8** %19, align 8, !dbg !2477
  %1570 = load i64, i64* %29, align 8, !dbg !2477
  %1571 = getelementptr inbounds i8, i8* %1569, i64 %1570, !dbg !2477
  store i8 63, i8* %1571, align 1, !dbg !2477
  %1572 = load i32, i32* @x.37
  %1573 = load i32, i32* @y.38
  %1574 = sub i32 %1572, 1
  %1575 = mul i32 %1572, %1574
  %1576 = urem i32 %1575, 2
  %1577 = icmp eq i32 %1576, 0
  %1578 = icmp slt i32 %1573, 10
  %1579 = or i1 %1577, %1578
  br i1 %1579, label %originalBBpart2437, label %originalBB435alteredBB

originalBBpart2437:                               ; preds = %originalBB435
  br label %1580, !dbg !2477

1580:                                             ; preds = %originalBBpart2437, %originalBBpart2433
  %1581 = load i64, i64* %29, align 8, !dbg !2480
  %1582 = add i64 %1581, 1, !dbg !2480
  store i64 %1582, i64* %29, align 8, !dbg !2480
  br label %1583, !dbg !2480

1583:                                             ; preds = %1580
  %1584 = load i32, i32* @x.37
  %1585 = load i32, i32* @y.38
  %1586 = sub i32 %1584, 1
  %1587 = mul i32 %1584, %1586
  %1588 = urem i32 %1587, 2
  %1589 = icmp eq i32 %1588, 0
  %1590 = icmp slt i32 %1585, 10
  %1591 = or i1 %1589, %1590
  br i1 %1591, label %originalBB439, label %originalBB439alteredBB

originalBB439:                                    ; preds = %1583, %originalBB439alteredBB
  %1592 = load i32, i32* @x.37
  %1593 = load i32, i32* @y.38
  %1594 = sub i32 %1592, 1
  %1595 = mul i32 %1592, %1594
  %1596 = urem i32 %1595, 2
  %1597 = icmp eq i32 %1596, 0
  %1598 = icmp slt i32 %1593, 10
  %1599 = or i1 %1597, %1598
  br i1 %1599, label %originalBBpart2441, label %originalBB439alteredBB

originalBBpart2441:                               ; preds = %originalBB439
  br label %1601, !dbg !2481

1600:                                             ; preds = %originalBBpart2342
  br label %1601, !dbg !2482

1601:                                             ; preds = %1600, %originalBBpart2441
  %1602 = load i32, i32* @x.37
  %1603 = load i32, i32* @y.38
  %1604 = sub i32 %1602, 1
  %1605 = mul i32 %1602, %1604
  %1606 = urem i32 %1605, 2
  %1607 = icmp eq i32 %1606, 0
  %1608 = icmp slt i32 %1603, 10
  %1609 = or i1 %1607, %1608
  br i1 %1609, label %originalBB443, label %originalBB443alteredBB

originalBB443:                                    ; preds = %1601, %originalBB443alteredBB
  %1610 = load i32, i32* @x.37
  %1611 = load i32, i32* @y.38
  %1612 = sub i32 %1610, 1
  %1613 = mul i32 %1610, %1612
  %1614 = urem i32 %1613, 2
  %1615 = icmp eq i32 %1614, 0
  %1616 = icmp slt i32 %1611, 10
  %1617 = or i1 %1615, %1616
  br i1 %1617, label %originalBBpart2445, label %originalBB443alteredBB

originalBBpart2445:                               ; preds = %originalBB443
  br label %1618, !dbg !2483

1618:                                             ; preds = %originalBBpart2445, %originalBBpart2330, %originalBBpart2318, %1244
  %1619 = load i32, i32* @x.37
  %1620 = load i32, i32* @y.38
  %1621 = sub i32 %1619, 1
  %1622 = mul i32 %1619, %1621
  %1623 = urem i32 %1622, 2
  %1624 = icmp eq i32 %1623, 0
  %1625 = icmp slt i32 %1620, 10
  %1626 = or i1 %1624, %1625
  br i1 %1626, label %originalBB447, label %originalBB447alteredBB

originalBB447:                                    ; preds = %1618, %originalBB447alteredBB
  %1627 = load i32, i32* @x.37
  %1628 = load i32, i32* @y.38
  %1629 = sub i32 %1627, 1
  %1630 = mul i32 %1627, %1629
  %1631 = urem i32 %1630, 2
  %1632 = icmp eq i32 %1631, 0
  %1633 = icmp slt i32 %1628, 10
  %1634 = or i1 %1632, %1633
  br i1 %1634, label %originalBBpart2449, label %originalBB447alteredBB

originalBBpart2449:                               ; preds = %originalBB447
  br label %1636, !dbg !2484

1635:                                             ; preds = %1205
  br label %1636, !dbg !2485

1636:                                             ; preds = %1635, %originalBBpart2449, %originalBBpart2303
  %1637 = load i32, i32* @x.37
  %1638 = load i32, i32* @y.38
  %1639 = sub i32 %1637, 1
  %1640 = mul i32 %1637, %1639
  %1641 = urem i32 %1640, 2
  %1642 = icmp eq i32 %1641, 0
  %1643 = icmp slt i32 %1638, 10
  %1644 = or i1 %1642, %1643
  br i1 %1644, label %originalBB451, label %originalBB451alteredBB

originalBB451:                                    ; preds = %1636, %originalBB451alteredBB
  %1645 = load i32, i32* @x.37
  %1646 = load i32, i32* @y.38
  %1647 = sub i32 %1645, 1
  %1648 = mul i32 %1645, %1647
  %1649 = urem i32 %1648, 2
  %1650 = icmp eq i32 %1649, 0
  %1651 = icmp slt i32 %1646, 10
  %1652 = or i1 %1650, %1651
  br i1 %1652, label %originalBBpart2453, label %originalBB451alteredBB

originalBBpart2453:                               ; preds = %originalBB451
  br label %3593, !dbg !2486

1653:                                             ; preds = %661
  store i8 97, i8* %40, align 1, !dbg !2487
  br label %1848, !dbg !2488

1654:                                             ; preds = %661
  store i8 98, i8* %40, align 1, !dbg !2489
  br label %1848, !dbg !2490

1655:                                             ; preds = %661
  store i8 102, i8* %40, align 1, !dbg !2491
  br label %1848, !dbg !2492

1656:                                             ; preds = %661
  %1657 = load i32, i32* @x.37
  %1658 = load i32, i32* @y.38
  %1659 = sub i32 %1657, 1
  %1660 = mul i32 %1657, %1659
  %1661 = urem i32 %1660, 2
  %1662 = icmp eq i32 %1661, 0
  %1663 = icmp slt i32 %1658, 10
  %1664 = or i1 %1662, %1663
  br i1 %1664, label %originalBB455, label %originalBB455alteredBB

originalBB455:                                    ; preds = %1656, %originalBB455alteredBB
  store i8 110, i8* %40, align 1, !dbg !2493
  %1665 = load i32, i32* @x.37
  %1666 = load i32, i32* @y.38
  %1667 = sub i32 %1665, 1
  %1668 = mul i32 %1665, %1667
  %1669 = urem i32 %1668, 2
  %1670 = icmp eq i32 %1669, 0
  %1671 = icmp slt i32 %1666, 10
  %1672 = or i1 %1670, %1671
  br i1 %1672, label %originalBBpart2457, label %originalBB455alteredBB

originalBBpart2457:                               ; preds = %originalBB455
  br label %1808, !dbg !2494

1673:                                             ; preds = %661
  store i8 114, i8* %40, align 1, !dbg !2495
  br label %1808, !dbg !2496

1674:                                             ; preds = %661
  %1675 = load i32, i32* @x.37
  %1676 = load i32, i32* @y.38
  %1677 = sub i32 %1675, 1
  %1678 = mul i32 %1675, %1677
  %1679 = urem i32 %1678, 2
  %1680 = icmp eq i32 %1679, 0
  %1681 = icmp slt i32 %1676, 10
  %1682 = or i1 %1680, %1681
  br i1 %1682, label %originalBB459, label %originalBB459alteredBB

originalBB459:                                    ; preds = %1674, %originalBB459alteredBB
  store i8 116, i8* %40, align 1, !dbg !2497
  %1683 = load i32, i32* @x.37
  %1684 = load i32, i32* @y.38
  %1685 = sub i32 %1683, 1
  %1686 = mul i32 %1683, %1685
  %1687 = urem i32 %1686, 2
  %1688 = icmp eq i32 %1687, 0
  %1689 = icmp slt i32 %1684, 10
  %1690 = or i1 %1688, %1689
  br i1 %1690, label %originalBBpart2461, label %originalBB459alteredBB

originalBBpart2461:                               ; preds = %originalBB459
  br label %1808, !dbg !2498

1691:                                             ; preds = %661
  store i8 118, i8* %40, align 1, !dbg !2499
  br label %1848, !dbg !2500

1692:                                             ; preds = %661
  %1693 = load i32, i32* @x.37
  %1694 = load i32, i32* @y.38
  %1695 = sub i32 %1693, 1
  %1696 = mul i32 %1693, %1695
  %1697 = urem i32 %1696, 2
  %1698 = icmp eq i32 %1697, 0
  %1699 = icmp slt i32 %1694, 10
  %1700 = or i1 %1698, %1699
  br i1 %1700, label %originalBB463, label %originalBB463alteredBB

originalBB463:                                    ; preds = %1692, %originalBB463alteredBB
  %1701 = load i8, i8* %39, align 1, !dbg !2501
  store i8 %1701, i8* %40, align 1, !dbg !2502
  %1702 = load i32, i32* %23, align 4, !dbg !2503
  %1703 = icmp eq i32 %1702, 2, !dbg !2505
  %1704 = load i32, i32* @x.37
  %1705 = load i32, i32* @y.38
  %1706 = sub i32 %1704, 1
  %1707 = mul i32 %1704, %1706
  %1708 = urem i32 %1707, 2
  %1709 = icmp eq i32 %1708, 0
  %1710 = icmp slt i32 %1705, 10
  %1711 = or i1 %1709, %1710
  br i1 %1711, label %originalBBpart2465, label %originalBB463alteredBB

originalBBpart2465:                               ; preds = %originalBB463
  br i1 %1703, label %1712, label %1733, !dbg !2506

1712:                                             ; preds = %originalBBpart2465
  %1713 = load i8, i8* %35, align 1, !dbg !2507
  %1714 = trunc i8 %1713 to i1, !dbg !2507
  br i1 %1714, label %1715, label %1716, !dbg !2510

1715:                                             ; preds = %1712
  br label %4606, !dbg !2511

1716:                                             ; preds = %1712
  %1717 = load i32, i32* @x.37
  %1718 = load i32, i32* @y.38
  %1719 = sub i32 %1717, 1
  %1720 = mul i32 %1717, %1719
  %1721 = urem i32 %1720, 2
  %1722 = icmp eq i32 %1721, 0
  %1723 = icmp slt i32 %1718, 10
  %1724 = or i1 %1722, %1723
  br i1 %1724, label %originalBB467, label %originalBB467alteredBB

originalBB467:                                    ; preds = %1716, %originalBB467alteredBB
  %1725 = load i32, i32* @x.37
  %1726 = load i32, i32* @y.38
  %1727 = sub i32 %1725, 1
  %1728 = mul i32 %1725, %1727
  %1729 = urem i32 %1728, 2
  %1730 = icmp eq i32 %1729, 0
  %1731 = icmp slt i32 %1726, 10
  %1732 = or i1 %1730, %1731
  br i1 %1732, label %originalBBpart2469, label %originalBB467alteredBB

originalBBpart2469:                               ; preds = %originalBB467
  br label %4006, !dbg !2512

1733:                                             ; preds = %originalBBpart2465
  %1734 = load i32, i32* @x.37
  %1735 = load i32, i32* @y.38
  %1736 = sub i32 %1734, 1
  %1737 = mul i32 %1734, %1736
  %1738 = urem i32 %1737, 2
  %1739 = icmp eq i32 %1738, 0
  %1740 = icmp slt i32 %1735, 10
  %1741 = or i1 %1739, %1740
  br i1 %1741, label %originalBB471, label %originalBB471alteredBB

originalBB471:                                    ; preds = %1733, %originalBB471alteredBB
  %1742 = load i8, i8* %33, align 1, !dbg !2513
  %1743 = trunc i8 %1742 to i1, !dbg !2513
  %1744 = load i32, i32* @x.37
  %1745 = load i32, i32* @y.38
  %1746 = sub i32 %1744, 1
  %1747 = mul i32 %1744, %1746
  %1748 = urem i32 %1747, 2
  %1749 = icmp eq i32 %1748, 0
  %1750 = icmp slt i32 %1745, 10
  %1751 = or i1 %1749, %1750
  br i1 %1751, label %originalBBpart2473, label %originalBB471alteredBB

originalBBpart2473:                               ; preds = %originalBB471
  br i1 %1743, label %1752, label %1807, !dbg !2515

1752:                                             ; preds = %originalBBpart2473
  %1753 = load i32, i32* @x.37
  %1754 = load i32, i32* @y.38
  %1755 = sub i32 %1753, 1
  %1756 = mul i32 %1753, %1755
  %1757 = urem i32 %1756, 2
  %1758 = icmp eq i32 %1757, 0
  %1759 = icmp slt i32 %1754, 10
  %1760 = or i1 %1758, %1759
  br i1 %1760, label %originalBB475, label %originalBB475alteredBB

originalBB475:                                    ; preds = %1752, %originalBB475alteredBB
  %1761 = load i8, i8* %35, align 1, !dbg !2516
  %1762 = trunc i8 %1761 to i1, !dbg !2516
  %1763 = load i32, i32* @x.37
  %1764 = load i32, i32* @y.38
  %1765 = sub i32 %1763, 1
  %1766 = mul i32 %1763, %1765
  %1767 = urem i32 %1766, 2
  %1768 = icmp eq i32 %1767, 0
  %1769 = icmp slt i32 %1764, 10
  %1770 = or i1 %1768, %1769
  br i1 %1770, label %originalBBpart2477, label %originalBB475alteredBB

originalBBpart2477:                               ; preds = %originalBB475
  br i1 %1762, label %1771, label %1807, !dbg !2517

1771:                                             ; preds = %originalBBpart2477
  %1772 = load i32, i32* @x.37
  %1773 = load i32, i32* @y.38
  %1774 = sub i32 %1772, 1
  %1775 = mul i32 %1772, %1774
  %1776 = urem i32 %1775, 2
  %1777 = icmp eq i32 %1776, 0
  %1778 = icmp slt i32 %1773, 10
  %1779 = or i1 %1777, %1778
  br i1 %1779, label %originalBB479, label %originalBB479alteredBB

originalBB479:                                    ; preds = %1771, %originalBB479alteredBB
  %1780 = load i64, i64* %32, align 8, !dbg !2518
  %1781 = icmp ne i64 %1780, 0, !dbg !2518
  %1782 = load i32, i32* @x.37
  %1783 = load i32, i32* @y.38
  %1784 = sub i32 %1782, 1
  %1785 = mul i32 %1782, %1784
  %1786 = urem i32 %1785, 2
  %1787 = icmp eq i32 %1786, 0
  %1788 = icmp slt i32 %1783, 10
  %1789 = or i1 %1787, %1788
  br i1 %1789, label %originalBBpart2481, label %originalBB479alteredBB

originalBBpart2481:                               ; preds = %originalBB479
  br i1 %1781, label %1790, label %1807, !dbg !2519

1790:                                             ; preds = %originalBBpart2481
  %1791 = load i32, i32* @x.37
  %1792 = load i32, i32* @y.38
  %1793 = sub i32 %1791, 1
  %1794 = mul i32 %1791, %1793
  %1795 = urem i32 %1794, 2
  %1796 = icmp eq i32 %1795, 0
  %1797 = icmp slt i32 %1792, 10
  %1798 = or i1 %1796, %1797
  br i1 %1798, label %originalBB483, label %originalBB483alteredBB

originalBB483:                                    ; preds = %1790, %originalBB483alteredBB
  %1799 = load i32, i32* @x.37
  %1800 = load i32, i32* @y.38
  %1801 = sub i32 %1799, 1
  %1802 = mul i32 %1799, %1801
  %1803 = urem i32 %1802, 2
  %1804 = icmp eq i32 %1803, 0
  %1805 = icmp slt i32 %1800, 10
  %1806 = or i1 %1804, %1805
  br i1 %1806, label %originalBBpart2485, label %originalBB483alteredBB

originalBBpart2485:                               ; preds = %originalBB483
  br label %4006, !dbg !2520

1807:                                             ; preds = %originalBBpart2481, %originalBBpart2477, %originalBBpart2473
  br label %1808, !dbg !2518

1808:                                             ; preds = %1807, %originalBBpart2461, %1673, %originalBBpart2457
  call void @llvm.dbg.label(metadata !2521), !dbg !2522
  %1809 = load i32, i32* @x.37
  %1810 = load i32, i32* @y.38
  %1811 = sub i32 %1809, 1
  %1812 = mul i32 %1809, %1811
  %1813 = urem i32 %1812, 2
  %1814 = icmp eq i32 %1813, 0
  %1815 = icmp slt i32 %1810, 10
  %1816 = or i1 %1814, %1815
  br i1 %1816, label %originalBB487, label %originalBB487alteredBB

originalBB487:                                    ; preds = %1808, %originalBB487alteredBB
  %1817 = load i32, i32* %23, align 4, !dbg !2523
  %1818 = icmp eq i32 %1817, 2, !dbg !2525
  %1819 = load i32, i32* @x.37
  %1820 = load i32, i32* @y.38
  %1821 = sub i32 %1819, 1
  %1822 = mul i32 %1819, %1821
  %1823 = urem i32 %1822, 2
  %1824 = icmp eq i32 %1823, 0
  %1825 = icmp slt i32 %1820, 10
  %1826 = or i1 %1824, %1825
  br i1 %1826, label %originalBBpart2489, label %originalBB487alteredBB

originalBBpart2489:                               ; preds = %originalBB487
  br i1 %1818, label %1827, label %1847, !dbg !2526

1827:                                             ; preds = %originalBBpart2489
  %1828 = load i8, i8* %35, align 1, !dbg !2527
  %1829 = trunc i8 %1828 to i1, !dbg !2527
  br i1 %1829, label %1830, label %1847, !dbg !2528

1830:                                             ; preds = %1827
  %1831 = load i32, i32* @x.37
  %1832 = load i32, i32* @y.38
  %1833 = sub i32 %1831, 1
  %1834 = mul i32 %1831, %1833
  %1835 = urem i32 %1834, 2
  %1836 = icmp eq i32 %1835, 0
  %1837 = icmp slt i32 %1832, 10
  %1838 = or i1 %1836, %1837
  br i1 %1838, label %originalBB491, label %originalBB491alteredBB

originalBB491:                                    ; preds = %1830, %originalBB491alteredBB
  %1839 = load i32, i32* @x.37
  %1840 = load i32, i32* @y.38
  %1841 = sub i32 %1839, 1
  %1842 = mul i32 %1839, %1841
  %1843 = urem i32 %1842, 2
  %1844 = icmp eq i32 %1843, 0
  %1845 = icmp slt i32 %1840, 10
  %1846 = or i1 %1844, %1845
  br i1 %1846, label %originalBBpart2493, label %originalBB491alteredBB

originalBBpart2493:                               ; preds = %originalBB491
  br label %4606, !dbg !2529

1847:                                             ; preds = %1827, %originalBBpart2489
  br label %1848, !dbg !2527

1848:                                             ; preds = %1847, %1691, %1655, %1654, %1653
  call void @llvm.dbg.label(metadata !2530), !dbg !2531
  %1849 = load i8, i8* %33, align 1, !dbg !2532
  %1850 = trunc i8 %1849 to i1, !dbg !2532
  br i1 %1850, label %1851, label %1869, !dbg !2534

1851:                                             ; preds = %1848
  %1852 = load i32, i32* @x.37
  %1853 = load i32, i32* @y.38
  %1854 = sub i32 %1852, 1
  %1855 = mul i32 %1852, %1854
  %1856 = urem i32 %1855, 2
  %1857 = icmp eq i32 %1856, 0
  %1858 = icmp slt i32 %1853, 10
  %1859 = or i1 %1857, %1858
  br i1 %1859, label %originalBB495, label %originalBB495alteredBB

originalBB495:                                    ; preds = %1851, %originalBB495alteredBB
  %1860 = load i8, i8* %40, align 1, !dbg !2535
  store i8 %1860, i8* %39, align 1, !dbg !2537
  %1861 = load i32, i32* @x.37
  %1862 = load i32, i32* @y.38
  %1863 = sub i32 %1861, 1
  %1864 = mul i32 %1861, %1863
  %1865 = urem i32 %1864, 2
  %1866 = icmp eq i32 %1865, 0
  %1867 = icmp slt i32 %1862, 10
  %1868 = or i1 %1866, %1867
  br i1 %1868, label %originalBBpart2497, label %originalBB495alteredBB

originalBBpart2497:                               ; preds = %originalBB495
  br label %3720, !dbg !2538

1869:                                             ; preds = %1848
  %1870 = load i32, i32* @x.37
  %1871 = load i32, i32* @y.38
  %1872 = sub i32 %1870, 1
  %1873 = mul i32 %1870, %1872
  %1874 = urem i32 %1873, 2
  %1875 = icmp eq i32 %1874, 0
  %1876 = icmp slt i32 %1871, 10
  %1877 = or i1 %1875, %1876
  br i1 %1877, label %originalBB499, label %originalBB499alteredBB

originalBB499:                                    ; preds = %1869, %originalBB499alteredBB
  %1878 = load i32, i32* @x.37
  %1879 = load i32, i32* @y.38
  %1880 = sub i32 %1878, 1
  %1881 = mul i32 %1878, %1880
  %1882 = urem i32 %1881, 2
  %1883 = icmp eq i32 %1882, 0
  %1884 = icmp slt i32 %1879, 10
  %1885 = or i1 %1883, %1884
  br i1 %1885, label %originalBBpart2501, label %originalBB499alteredBB

originalBBpart2501:                               ; preds = %originalBB499
  br label %3593, !dbg !2539

1886:                                             ; preds = %661, %661
  %1887 = load i64, i64* %22, align 8, !dbg !2540
  %1888 = icmp eq i64 %1887, -1, !dbg !2542
  br i1 %1888, label %1889, label %1895, !dbg !2543

1889:                                             ; preds = %1886
  %1890 = load i8*, i8** %21, align 8, !dbg !2544
  %1891 = getelementptr inbounds i8, i8* %1890, i64 1, !dbg !2544
  %1892 = load i8, i8* %1891, align 1, !dbg !2544
  %1893 = sext i8 %1892 to i32, !dbg !2544
  %1894 = icmp eq i32 %1893, 0, !dbg !2545
  br i1 %1894, label %1931, label %1914, !dbg !2540

1895:                                             ; preds = %1886
  %1896 = load i32, i32* @x.37
  %1897 = load i32, i32* @y.38
  %1898 = sub i32 %1896, 1
  %1899 = mul i32 %1896, %1898
  %1900 = urem i32 %1899, 2
  %1901 = icmp eq i32 %1900, 0
  %1902 = icmp slt i32 %1897, 10
  %1903 = or i1 %1901, %1902
  br i1 %1903, label %originalBB503, label %originalBB503alteredBB

originalBB503:                                    ; preds = %1895, %originalBB503alteredBB
  %1904 = load i64, i64* %22, align 8, !dbg !2546
  %1905 = icmp eq i64 %1904, 1, !dbg !2547
  %1906 = load i32, i32* @x.37
  %1907 = load i32, i32* @y.38
  %1908 = sub i32 %1906, 1
  %1909 = mul i32 %1906, %1908
  %1910 = urem i32 %1909, 2
  %1911 = icmp eq i32 %1910, 0
  %1912 = icmp slt i32 %1907, 10
  %1913 = or i1 %1911, %1912
  br i1 %1913, label %originalBBpart2505, label %originalBB503alteredBB

originalBBpart2505:                               ; preds = %originalBB503
  br i1 %1905, label %1931, label %1914, !dbg !2543

1914:                                             ; preds = %originalBBpart2505, %1889
  %1915 = load i32, i32* @x.37
  %1916 = load i32, i32* @y.38
  %1917 = sub i32 %1915, 1
  %1918 = mul i32 %1915, %1917
  %1919 = urem i32 %1918, 2
  %1920 = icmp eq i32 %1919, 0
  %1921 = icmp slt i32 %1916, 10
  %1922 = or i1 %1920, %1921
  br i1 %1922, label %originalBB507, label %originalBB507alteredBB

originalBB507:                                    ; preds = %1914, %originalBB507alteredBB
  %1923 = load i32, i32* @x.37
  %1924 = load i32, i32* @y.38
  %1925 = sub i32 %1923, 1
  %1926 = mul i32 %1923, %1925
  %1927 = urem i32 %1926, 2
  %1928 = icmp eq i32 %1927, 0
  %1929 = icmp slt i32 %1924, 10
  %1930 = or i1 %1928, %1929
  br i1 %1930, label %originalBBpart2509, label %originalBB507alteredBB

originalBBpart2509:                               ; preds = %originalBB507
  br label %3593, !dbg !2548

1931:                                             ; preds = %originalBBpart2505, %1889
  br label %1932, !dbg !2549

1932:                                             ; preds = %1931, %661, %661
  %1933 = load i64, i64* %28, align 8, !dbg !2550
  %1934 = icmp ne i64 %1933, 0, !dbg !2552
  br i1 %1934, label %1935, label %1952, !dbg !2553

1935:                                             ; preds = %1932
  %1936 = load i32, i32* @x.37
  %1937 = load i32, i32* @y.38
  %1938 = sub i32 %1936, 1
  %1939 = mul i32 %1936, %1938
  %1940 = urem i32 %1939, 2
  %1941 = icmp eq i32 %1940, 0
  %1942 = icmp slt i32 %1937, 10
  %1943 = or i1 %1941, %1942
  br i1 %1943, label %originalBB511, label %originalBB511alteredBB

originalBB511:                                    ; preds = %1935, %originalBB511alteredBB
  %1944 = load i32, i32* @x.37
  %1945 = load i32, i32* @y.38
  %1946 = sub i32 %1944, 1
  %1947 = mul i32 %1944, %1946
  %1948 = urem i32 %1947, 2
  %1949 = icmp eq i32 %1948, 0
  %1950 = icmp slt i32 %1945, 10
  %1951 = or i1 %1949, %1950
  br i1 %1951, label %originalBBpart2513, label %originalBB511alteredBB

originalBBpart2513:                               ; preds = %originalBB511
  br label %3593, !dbg !2554

1952:                                             ; preds = %1932
  br label %1953, !dbg !2555

1953:                                             ; preds = %1952, %661
  store i8 1, i8* %43, align 1, !dbg !2556
  br label %1954, !dbg !2557

1954:                                             ; preds = %1953, %661, %661, %661, %661, %661, %661, %661, %661, %661, %661, %661, %661, %661, %661, %661
  %1955 = load i32, i32* %23, align 4, !dbg !2558
  %1956 = icmp eq i32 %1955, 2, !dbg !2560
  br i1 %1956, label %1957, label %1977, !dbg !2561

1957:                                             ; preds = %1954
  %1958 = load i8, i8* %35, align 1, !dbg !2562
  %1959 = trunc i8 %1958 to i1, !dbg !2562
  br i1 %1959, label %1960, label %1977, !dbg !2563

1960:                                             ; preds = %1957
  %1961 = load i32, i32* @x.37
  %1962 = load i32, i32* @y.38
  %1963 = sub i32 %1961, 1
  %1964 = mul i32 %1961, %1963
  %1965 = urem i32 %1964, 2
  %1966 = icmp eq i32 %1965, 0
  %1967 = icmp slt i32 %1962, 10
  %1968 = or i1 %1966, %1967
  br i1 %1968, label %originalBB515, label %originalBB515alteredBB

originalBB515:                                    ; preds = %1960, %originalBB515alteredBB
  %1969 = load i32, i32* @x.37
  %1970 = load i32, i32* @y.38
  %1971 = sub i32 %1969, 1
  %1972 = mul i32 %1969, %1971
  %1973 = urem i32 %1972, 2
  %1974 = icmp eq i32 %1973, 0
  %1975 = icmp slt i32 %1970, 10
  %1976 = or i1 %1974, %1975
  br i1 %1976, label %originalBBpart2517, label %originalBB515alteredBB

originalBBpart2517:                               ; preds = %originalBB515
  br label %4606, !dbg !2564

1977:                                             ; preds = %1957, %1954
  br label %3593, !dbg !2565

1978:                                             ; preds = %661
  store i8 1, i8* %37, align 1, !dbg !2566
  store i8 1, i8* %43, align 1, !dbg !2567
  %1979 = load i32, i32* %23, align 4, !dbg !2568
  %1980 = icmp eq i32 %1979, 2, !dbg !2570
  br i1 %1980, label %1981, label %2174, !dbg !2571

1981:                                             ; preds = %1978
  %1982 = load i32, i32* @x.37
  %1983 = load i32, i32* @y.38
  %1984 = sub i32 %1982, 1
  %1985 = mul i32 %1982, %1984
  %1986 = urem i32 %1985, 2
  %1987 = icmp eq i32 %1986, 0
  %1988 = icmp slt i32 %1983, 10
  %1989 = or i1 %1987, %1988
  br i1 %1989, label %originalBB519, label %originalBB519alteredBB

originalBB519:                                    ; preds = %1981, %originalBB519alteredBB
  %1990 = load i8, i8* %35, align 1, !dbg !2572
  %1991 = trunc i8 %1990 to i1, !dbg !2572
  %1992 = load i32, i32* @x.37
  %1993 = load i32, i32* @y.38
  %1994 = sub i32 %1992, 1
  %1995 = mul i32 %1992, %1994
  %1996 = urem i32 %1995, 2
  %1997 = icmp eq i32 %1996, 0
  %1998 = icmp slt i32 %1993, 10
  %1999 = or i1 %1997, %1998
  br i1 %1999, label %originalBBpart2521, label %originalBB519alteredBB

originalBBpart2521:                               ; preds = %originalBB519
  br i1 %1991, label %2000, label %2017, !dbg !2575

2000:                                             ; preds = %originalBBpart2521
  %2001 = load i32, i32* @x.37
  %2002 = load i32, i32* @y.38
  %2003 = sub i32 %2001, 1
  %2004 = mul i32 %2001, %2003
  %2005 = urem i32 %2004, 2
  %2006 = icmp eq i32 %2005, 0
  %2007 = icmp slt i32 %2002, 10
  %2008 = or i1 %2006, %2007
  br i1 %2008, label %originalBB523, label %originalBB523alteredBB

originalBB523:                                    ; preds = %2000, %originalBB523alteredBB
  %2009 = load i32, i32* @x.37
  %2010 = load i32, i32* @y.38
  %2011 = sub i32 %2009, 1
  %2012 = mul i32 %2009, %2011
  %2013 = urem i32 %2012, 2
  %2014 = icmp eq i32 %2013, 0
  %2015 = icmp slt i32 %2010, 10
  %2016 = or i1 %2014, %2015
  br i1 %2016, label %originalBBpart2525, label %originalBB523alteredBB

originalBBpart2525:                               ; preds = %originalBB523
  br label %4606, !dbg !2576

2017:                                             ; preds = %originalBBpart2521
  %2018 = load i32, i32* @x.37
  %2019 = load i32, i32* @y.38
  %2020 = sub i32 %2018, 1
  %2021 = mul i32 %2018, %2020
  %2022 = urem i32 %2021, 2
  %2023 = icmp eq i32 %2022, 0
  %2024 = icmp slt i32 %2019, 10
  %2025 = or i1 %2023, %2024
  br i1 %2025, label %originalBB527, label %originalBB527alteredBB

originalBB527:                                    ; preds = %2017, %originalBB527alteredBB
  %2026 = load i64, i64* %20, align 8, !dbg !2577
  %2027 = icmp ne i64 %2026, 0, !dbg !2577
  %2028 = load i32, i32* @x.37
  %2029 = load i32, i32* @y.38
  %2030 = sub i32 %2028, 1
  %2031 = mul i32 %2028, %2030
  %2032 = urem i32 %2031, 2
  %2033 = icmp eq i32 %2032, 0
  %2034 = icmp slt i32 %2029, 10
  %2035 = or i1 %2033, %2034
  br i1 %2035, label %originalBBpart2529, label %originalBB527alteredBB

originalBBpart2529:                               ; preds = %originalBB527
  br i1 %2027, label %2036, label %2041, !dbg !2579

2036:                                             ; preds = %originalBBpart2529
  %2037 = load i64, i64* %30, align 8, !dbg !2580
  %2038 = icmp ne i64 %2037, 0, !dbg !2580
  br i1 %2038, label %2041, label %2039, !dbg !2581

2039:                                             ; preds = %2036
  %2040 = load i64, i64* %20, align 8, !dbg !2582
  store i64 %2040, i64* %30, align 8, !dbg !2584
  store i64 0, i64* %20, align 8, !dbg !2585
  br label %2041, !dbg !2586

2041:                                             ; preds = %2039, %2036, %originalBBpart2529
  %2042 = load i32, i32* @x.37
  %2043 = load i32, i32* @y.38
  %2044 = sub i32 %2042, 1
  %2045 = mul i32 %2042, %2044
  %2046 = urem i32 %2045, 2
  %2047 = icmp eq i32 %2046, 0
  %2048 = icmp slt i32 %2043, 10
  %2049 = or i1 %2047, %2048
  br i1 %2049, label %originalBB531, label %originalBB531alteredBB

originalBB531:                                    ; preds = %2041, %originalBB531alteredBB
  %2050 = load i32, i32* @x.37
  %2051 = load i32, i32* @y.38
  %2052 = sub i32 %2050, 1
  %2053 = mul i32 %2050, %2052
  %2054 = urem i32 %2053, 2
  %2055 = icmp eq i32 %2054, 0
  %2056 = icmp slt i32 %2051, 10
  %2057 = or i1 %2055, %2056
  br i1 %2057, label %originalBBpart2533, label %originalBB531alteredBB

originalBBpart2533:                               ; preds = %originalBB531
  br label %2058, !dbg !2587

2058:                                             ; preds = %originalBBpart2533
  %2059 = load i64, i64* %29, align 8, !dbg !2588
  %2060 = load i64, i64* %20, align 8, !dbg !2588
  %2061 = icmp ult i64 %2059, %2060, !dbg !2588
  br i1 %2061, label %2062, label %2066, !dbg !2591

2062:                                             ; preds = %2058
  %2063 = load i8*, i8** %19, align 8, !dbg !2588
  %2064 = load i64, i64* %29, align 8, !dbg !2588
  %2065 = getelementptr inbounds i8, i8* %2063, i64 %2064, !dbg !2588
  store i8 39, i8* %2065, align 1, !dbg !2588
  br label %2066, !dbg !2588

2066:                                             ; preds = %2062, %2058
  %2067 = load i64, i64* %29, align 8, !dbg !2591
  %2068 = add i64 %2067, 1, !dbg !2591
  store i64 %2068, i64* %29, align 8, !dbg !2591
  br label %2069, !dbg !2591

2069:                                             ; preds = %2066
  br label %2070, !dbg !2592

2070:                                             ; preds = %2069
  %2071 = load i32, i32* @x.37
  %2072 = load i32, i32* @y.38
  %2073 = sub i32 %2071, 1
  %2074 = mul i32 %2071, %2073
  %2075 = urem i32 %2074, 2
  %2076 = icmp eq i32 %2075, 0
  %2077 = icmp slt i32 %2072, 10
  %2078 = or i1 %2076, %2077
  br i1 %2078, label %originalBB535, label %originalBB535alteredBB

originalBB535:                                    ; preds = %2070, %originalBB535alteredBB
  %2079 = load i64, i64* %29, align 8, !dbg !2593
  %2080 = load i64, i64* %20, align 8, !dbg !2593
  %2081 = icmp ult i64 %2079, %2080, !dbg !2593
  %2082 = load i32, i32* @x.37
  %2083 = load i32, i32* @y.38
  %2084 = sub i32 %2082, 1
  %2085 = mul i32 %2082, %2084
  %2086 = urem i32 %2085, 2
  %2087 = icmp eq i32 %2086, 0
  %2088 = icmp slt i32 %2083, 10
  %2089 = or i1 %2087, %2088
  br i1 %2089, label %originalBBpart2537, label %originalBB535alteredBB

originalBBpart2537:                               ; preds = %originalBB535
  br i1 %2081, label %2090, label %2110, !dbg !2596

2090:                                             ; preds = %originalBBpart2537
  %2091 = load i32, i32* @x.37
  %2092 = load i32, i32* @y.38
  %2093 = sub i32 %2091, 1
  %2094 = mul i32 %2091, %2093
  %2095 = urem i32 %2094, 2
  %2096 = icmp eq i32 %2095, 0
  %2097 = icmp slt i32 %2092, 10
  %2098 = or i1 %2096, %2097
  br i1 %2098, label %originalBB539, label %originalBB539alteredBB

originalBB539:                                    ; preds = %2090, %originalBB539alteredBB
  %2099 = load i8*, i8** %19, align 8, !dbg !2593
  %2100 = load i64, i64* %29, align 8, !dbg !2593
  %2101 = getelementptr inbounds i8, i8* %2099, i64 %2100, !dbg !2593
  store i8 92, i8* %2101, align 1, !dbg !2593
  %2102 = load i32, i32* @x.37
  %2103 = load i32, i32* @y.38
  %2104 = sub i32 %2102, 1
  %2105 = mul i32 %2102, %2104
  %2106 = urem i32 %2105, 2
  %2107 = icmp eq i32 %2106, 0
  %2108 = icmp slt i32 %2103, 10
  %2109 = or i1 %2107, %2108
  br i1 %2109, label %originalBBpart2541, label %originalBB539alteredBB

originalBBpart2541:                               ; preds = %originalBB539
  br label %2110, !dbg !2593

2110:                                             ; preds = %originalBBpart2541, %originalBBpart2537
  %2111 = load i64, i64* %29, align 8, !dbg !2596
  %2112 = add i64 %2111, 1, !dbg !2596
  store i64 %2112, i64* %29, align 8, !dbg !2596
  br label %2113, !dbg !2596

2113:                                             ; preds = %2110
  br label %2114, !dbg !2597

2114:                                             ; preds = %2113
  %2115 = load i64, i64* %29, align 8, !dbg !2598
  %2116 = load i64, i64* %20, align 8, !dbg !2598
  %2117 = icmp ult i64 %2115, %2116, !dbg !2598
  br i1 %2117, label %2118, label %2138, !dbg !2601

2118:                                             ; preds = %2114
  %2119 = load i32, i32* @x.37
  %2120 = load i32, i32* @y.38
  %2121 = sub i32 %2119, 1
  %2122 = mul i32 %2119, %2121
  %2123 = urem i32 %2122, 2
  %2124 = icmp eq i32 %2123, 0
  %2125 = icmp slt i32 %2120, 10
  %2126 = or i1 %2124, %2125
  br i1 %2126, label %originalBB543, label %originalBB543alteredBB

originalBB543:                                    ; preds = %2118, %originalBB543alteredBB
  %2127 = load i8*, i8** %19, align 8, !dbg !2598
  %2128 = load i64, i64* %29, align 8, !dbg !2598
  %2129 = getelementptr inbounds i8, i8* %2127, i64 %2128, !dbg !2598
  store i8 39, i8* %2129, align 1, !dbg !2598
  %2130 = load i32, i32* @x.37
  %2131 = load i32, i32* @y.38
  %2132 = sub i32 %2130, 1
  %2133 = mul i32 %2130, %2132
  %2134 = urem i32 %2133, 2
  %2135 = icmp eq i32 %2134, 0
  %2136 = icmp slt i32 %2131, 10
  %2137 = or i1 %2135, %2136
  br i1 %2137, label %originalBBpart2545, label %originalBB543alteredBB

originalBBpart2545:                               ; preds = %originalBB543
  br label %2138, !dbg !2598

2138:                                             ; preds = %originalBBpart2545, %2114
  %2139 = load i32, i32* @x.37
  %2140 = load i32, i32* @y.38
  %2141 = sub i32 %2139, 1
  %2142 = mul i32 %2139, %2141
  %2143 = urem i32 %2142, 2
  %2144 = icmp eq i32 %2143, 0
  %2145 = icmp slt i32 %2140, 10
  %2146 = or i1 %2144, %2145
  br i1 %2146, label %originalBB547, label %originalBB547alteredBB

originalBB547:                                    ; preds = %2138, %originalBB547alteredBB
  %2147 = load i64, i64* %29, align 8, !dbg !2601
  %2148 = add i64 %2147, 1, !dbg !2601
  store i64 %2148, i64* %29, align 8, !dbg !2601
  %2149 = load i32, i32* @x.37
  %2150 = load i32, i32* @y.38
  %2151 = sub i32 %2149, 1
  %2152 = mul i32 %2149, %2151
  %2153 = urem i32 %2152, 2
  %2154 = icmp eq i32 %2153, 0
  %2155 = icmp slt i32 %2150, 10
  %2156 = or i1 %2154, %2155
  br i1 %2156, label %originalBBpart2563, label %originalBB547alteredBB

originalBBpart2563:                               ; preds = %originalBB547
  br label %2157, !dbg !2601

2157:                                             ; preds = %originalBBpart2563
  %2158 = load i32, i32* @x.37
  %2159 = load i32, i32* @y.38
  %2160 = sub i32 %2158, 1
  %2161 = mul i32 %2158, %2160
  %2162 = urem i32 %2161, 2
  %2163 = icmp eq i32 %2162, 0
  %2164 = icmp slt i32 %2159, 10
  %2165 = or i1 %2163, %2164
  br i1 %2165, label %originalBB565, label %originalBB565alteredBB

originalBB565:                                    ; preds = %2157, %originalBB565alteredBB
  store i8 0, i8* %36, align 1, !dbg !2602
  %2166 = load i32, i32* @x.37
  %2167 = load i32, i32* @y.38
  %2168 = sub i32 %2166, 1
  %2169 = mul i32 %2166, %2168
  %2170 = urem i32 %2169, 2
  %2171 = icmp eq i32 %2170, 0
  %2172 = icmp slt i32 %2167, 10
  %2173 = or i1 %2171, %2172
  br i1 %2173, label %originalBBpart2567, label %originalBB565alteredBB

originalBBpart2567:                               ; preds = %originalBB565
  br label %2174, !dbg !2603

2174:                                             ; preds = %originalBBpart2567, %1978
  br label %3593, !dbg !2604

2175:                                             ; preds = %661, %661, %661, %661, %661, %661, %661, %661, %661, %661, %661, %661, %661, %661, %661, %661, %661, %661, %661, %661, %661, %661, %661, %661, %661, %661, %661, %661, %661, %661, %661, %661, %661, %661, %661, %661, %661, %661, %661, %661, %661, %661, %661, %661, %661, %661, %661, %661, %661, %661, %661, %661, %661, %661, %661, %661, %661, %661, %661, %661, %661, %661, %661, %661, %661, %661, %661, %661, %661, %661, %661
  %2176 = load i32, i32* @x.37
  %2177 = load i32, i32* @y.38
  %2178 = sub i32 %2176, 1
  %2179 = mul i32 %2176, %2178
  %2180 = urem i32 %2179, 2
  %2181 = icmp eq i32 %2180, 0
  %2182 = icmp slt i32 %2177, 10
  %2183 = or i1 %2181, %2182
  br i1 %2183, label %originalBB569, label %originalBB569alteredBB

originalBB569:                                    ; preds = %2175, %originalBB569alteredBB
  store i8 1, i8* %43, align 1, !dbg !2605
  %2184 = load i32, i32* @x.37
  %2185 = load i32, i32* @y.38
  %2186 = sub i32 %2184, 1
  %2187 = mul i32 %2184, %2186
  %2188 = urem i32 %2187, 2
  %2189 = icmp eq i32 %2188, 0
  %2190 = icmp slt i32 %2185, 10
  %2191 = or i1 %2189, %2190
  br i1 %2191, label %originalBBpart2571, label %originalBB569alteredBB

originalBBpart2571:                               ; preds = %originalBB569
  br label %3593, !dbg !2606

2192:                                             ; preds = %661
  call void @llvm.dbg.declare(metadata i64* %44, metadata !2607, metadata !DIExpression()), !dbg !2609
  call void @llvm.dbg.declare(metadata i8* %45, metadata !2610, metadata !DIExpression()), !dbg !2611
  %2193 = load i8, i8* %34, align 1, !dbg !2612
  %2194 = trunc i8 %2193 to i1, !dbg !2612
  br i1 %2194, label %2195, label %2207, !dbg !2614

2195:                                             ; preds = %2192
  store i64 1, i64* %44, align 8, !dbg !2615
  %2196 = call i16** @__ctype_b_loc() #15, !dbg !2617
  %2197 = load i16*, i16** %2196, align 8, !dbg !2617
  %2198 = load i8, i8* %39, align 1, !dbg !2617
  %2199 = zext i8 %2198 to i32, !dbg !2617
  %2200 = sext i32 %2199 to i64, !dbg !2617
  %2201 = getelementptr inbounds i16, i16* %2197, i64 %2200, !dbg !2617
  %2202 = load i16, i16* %2201, align 2, !dbg !2617
  %2203 = zext i16 %2202 to i32, !dbg !2617
  %2204 = and i32 %2203, 16384, !dbg !2617
  %2205 = icmp ne i32 %2204, 0, !dbg !2618
  %2206 = zext i1 %2205 to i8, !dbg !2619
  store i8 %2206, i8* %45, align 1, !dbg !2619
  br label %2672, !dbg !2620

2207:                                             ; preds = %2192
  call void @llvm.dbg.declare(metadata %struct.__mbstate_t* %46, metadata !2621, metadata !DIExpression()), !dbg !2638
  %2208 = load i32, i32* @x.37
  %2209 = load i32, i32* @y.38
  %2210 = sub i32 %2208, 1
  %2211 = mul i32 %2208, %2210
  %2212 = urem i32 %2211, 2
  %2213 = icmp eq i32 %2212, 0
  %2214 = icmp slt i32 %2209, 10
  %2215 = or i1 %2213, %2214
  br i1 %2215, label %originalBB573, label %originalBB573alteredBB

originalBB573:                                    ; preds = %2207, %originalBB573alteredBB
  %2216 = bitcast %struct.__mbstate_t* %46 to i8*, !dbg !2639
  call void @llvm.memset.p0i8.i64(i8* align 4 %2216, i8 0, i64 8, i1 false), !dbg !2639
  store i64 0, i64* %44, align 8, !dbg !2640
  store i8 1, i8* %45, align 1, !dbg !2641
  %2217 = load i64, i64* %22, align 8, !dbg !2642
  %2218 = icmp eq i64 %2217, -1, !dbg !2644
  %2219 = load i32, i32* @x.37
  %2220 = load i32, i32* @y.38
  %2221 = sub i32 %2219, 1
  %2222 = mul i32 %2219, %2221
  %2223 = urem i32 %2222, 2
  %2224 = icmp eq i32 %2223, 0
  %2225 = icmp slt i32 %2220, 10
  %2226 = or i1 %2224, %2225
  br i1 %2226, label %originalBBpart2575, label %originalBB573alteredBB

originalBBpart2575:                               ; preds = %originalBB573
  br i1 %2218, label %2227, label %2246, !dbg !2645

2227:                                             ; preds = %originalBBpart2575
  %2228 = load i32, i32* @x.37
  %2229 = load i32, i32* @y.38
  %2230 = sub i32 %2228, 1
  %2231 = mul i32 %2228, %2230
  %2232 = urem i32 %2231, 2
  %2233 = icmp eq i32 %2232, 0
  %2234 = icmp slt i32 %2229, 10
  %2235 = or i1 %2233, %2234
  br i1 %2235, label %originalBB577, label %originalBB577alteredBB

originalBB577:                                    ; preds = %2227, %originalBB577alteredBB
  %2236 = load i8*, i8** %21, align 8, !dbg !2646
  %2237 = call i64 @strlen(i8* %2236) #13, !dbg !2647
  store i64 %2237, i64* %22, align 8, !dbg !2648
  %2238 = load i32, i32* @x.37
  %2239 = load i32, i32* @y.38
  %2240 = sub i32 %2238, 1
  %2241 = mul i32 %2238, %2240
  %2242 = urem i32 %2241, 2
  %2243 = icmp eq i32 %2242, 0
  %2244 = icmp slt i32 %2239, 10
  %2245 = or i1 %2243, %2244
  br i1 %2245, label %originalBBpart2579, label %originalBB577alteredBB

originalBBpart2579:                               ; preds = %originalBB577
  br label %2246, !dbg !2649

2246:                                             ; preds = %originalBBpart2579, %originalBBpart2575
  %2247 = load i32, i32* @x.37
  %2248 = load i32, i32* @y.38
  %2249 = sub i32 %2247, 1
  %2250 = mul i32 %2247, %2249
  %2251 = urem i32 %2250, 2
  %2252 = icmp eq i32 %2251, 0
  %2253 = icmp slt i32 %2248, 10
  %2254 = or i1 %2252, %2253
  br i1 %2254, label %originalBB581, label %originalBB581alteredBB

originalBB581:                                    ; preds = %2246, %originalBB581alteredBB
  %2255 = load i32, i32* @x.37
  %2256 = load i32, i32* @y.38
  %2257 = sub i32 %2255, 1
  %2258 = mul i32 %2255, %2257
  %2259 = urem i32 %2258, 2
  %2260 = icmp eq i32 %2259, 0
  %2261 = icmp slt i32 %2256, 10
  %2262 = or i1 %2260, %2261
  br i1 %2262, label %originalBBpart2583, label %originalBB581alteredBB

originalBBpart2583:                               ; preds = %originalBB581
  br label %2263, !dbg !2650

2263:                                             ; preds = %originalBBpart2723, %originalBBpart2583
  call void @llvm.dbg.declare(metadata i32* %47, metadata !2651, metadata !DIExpression()), !dbg !2654
  call void @llvm.dbg.declare(metadata i64* %48, metadata !2655, metadata !DIExpression()), !dbg !2656
  %2264 = load i32, i32* @x.37
  %2265 = load i32, i32* @y.38
  %2266 = sub i32 %2264, 1
  %2267 = mul i32 %2264, %2266
  %2268 = urem i32 %2267, 2
  %2269 = icmp eq i32 %2268, 0
  %2270 = icmp slt i32 %2265, 10
  %2271 = or i1 %2269, %2270
  br i1 %2271, label %originalBB585, label %originalBB585alteredBB

originalBB585:                                    ; preds = %2263, %originalBB585alteredBB
  %2272 = load i8*, i8** %21, align 8, !dbg !2657
  %2273 = load i64, i64* %28, align 8, !dbg !2658
  %2274 = load i64, i64* %44, align 8, !dbg !2659
  %2275 = add i64 %2273, %2274, !dbg !2660
  %2276 = getelementptr inbounds i8, i8* %2272, i64 %2275, !dbg !2657
  %2277 = load i64, i64* %22, align 8, !dbg !2661
  %2278 = load i64, i64* %28, align 8, !dbg !2662
  %2279 = load i64, i64* %44, align 8, !dbg !2663
  %2280 = add i64 %2278, %2279, !dbg !2664
  %2281 = sub i64 %2277, %2280, !dbg !2665
  %2282 = call i64 @rpl_mbrtowc(i32* %47, i8* %2276, i64 %2281, %struct.__mbstate_t* %46), !dbg !2666
  store i64 %2282, i64* %48, align 8, !dbg !2656
  %2283 = load i64, i64* %48, align 8, !dbg !2667
  %2284 = icmp eq i64 %2283, 0, !dbg !2669
  %2285 = load i32, i32* @x.37
  %2286 = load i32, i32* @y.38
  %2287 = sub i32 %2285, 1
  %2288 = mul i32 %2285, %2287
  %2289 = urem i32 %2288, 2
  %2290 = icmp eq i32 %2289, 0
  %2291 = icmp slt i32 %2286, 10
  %2292 = or i1 %2290, %2291
  br i1 %2292, label %originalBBpart2599, label %originalBB585alteredBB

originalBBpart2599:                               ; preds = %originalBB585
  br i1 %2284, label %2293, label %2310, !dbg !2670

2293:                                             ; preds = %originalBBpart2599
  %2294 = load i32, i32* @x.37
  %2295 = load i32, i32* @y.38
  %2296 = sub i32 %2294, 1
  %2297 = mul i32 %2294, %2296
  %2298 = urem i32 %2297, 2
  %2299 = icmp eq i32 %2298, 0
  %2300 = icmp slt i32 %2295, 10
  %2301 = or i1 %2299, %2300
  br i1 %2301, label %originalBB601, label %originalBB601alteredBB

originalBB601:                                    ; preds = %2293, %originalBB601alteredBB
  %2302 = load i32, i32* @x.37
  %2303 = load i32, i32* @y.38
  %2304 = sub i32 %2302, 1
  %2305 = mul i32 %2302, %2304
  %2306 = urem i32 %2305, 2
  %2307 = icmp eq i32 %2306, 0
  %2308 = icmp slt i32 %2303, 10
  %2309 = or i1 %2307, %2308
  br i1 %2309, label %originalBBpart2603, label %originalBB601alteredBB

originalBBpart2603:                               ; preds = %originalBB601
  br label %2655, !dbg !2671

2310:                                             ; preds = %originalBBpart2599
  %2311 = load i32, i32* @x.37
  %2312 = load i32, i32* @y.38
  %2313 = sub i32 %2311, 1
  %2314 = mul i32 %2311, %2313
  %2315 = urem i32 %2314, 2
  %2316 = icmp eq i32 %2315, 0
  %2317 = icmp slt i32 %2312, 10
  %2318 = or i1 %2316, %2317
  br i1 %2318, label %originalBB605, label %originalBB605alteredBB

originalBB605:                                    ; preds = %2310, %originalBB605alteredBB
  %2319 = load i64, i64* %48, align 8, !dbg !2672
  %2320 = icmp eq i64 %2319, -1, !dbg !2674
  %2321 = load i32, i32* @x.37
  %2322 = load i32, i32* @y.38
  %2323 = sub i32 %2321, 1
  %2324 = mul i32 %2321, %2323
  %2325 = urem i32 %2324, 2
  %2326 = icmp eq i32 %2325, 0
  %2327 = icmp slt i32 %2322, 10
  %2328 = or i1 %2326, %2327
  br i1 %2328, label %originalBBpart2607, label %originalBB605alteredBB

originalBBpart2607:                               ; preds = %originalBB605
  br i1 %2320, label %2329, label %2330, !dbg !2675

2329:                                             ; preds = %originalBBpart2607
  store i8 0, i8* %45, align 1, !dbg !2676
  br label %2655, !dbg !2678

2330:                                             ; preds = %originalBBpart2607
  %2331 = load i64, i64* %48, align 8, !dbg !2679
  %2332 = icmp eq i64 %2331, -2, !dbg !2681
  br i1 %2332, label %2333, label %2403, !dbg !2682

2333:                                             ; preds = %2330
  store i8 0, i8* %45, align 1, !dbg !2683
  br label %2334, !dbg !2685

2334:                                             ; preds = %originalBBpart2627, %2333
  %2335 = load i32, i32* @x.37
  %2336 = load i32, i32* @y.38
  %2337 = sub i32 %2335, 1
  %2338 = mul i32 %2335, %2337
  %2339 = urem i32 %2338, 2
  %2340 = icmp eq i32 %2339, 0
  %2341 = icmp slt i32 %2336, 10
  %2342 = or i1 %2340, %2341
  br i1 %2342, label %originalBB609, label %originalBB609alteredBB

originalBB609:                                    ; preds = %2334, %originalBB609alteredBB
  %2343 = load i64, i64* %28, align 8, !dbg !2686
  %2344 = load i64, i64* %44, align 8, !dbg !2687
  %2345 = add i64 %2343, %2344, !dbg !2688
  %2346 = load i64, i64* %22, align 8, !dbg !2689
  %2347 = icmp ult i64 %2345, %2346, !dbg !2690
  %2348 = load i32, i32* @x.37
  %2349 = load i32, i32* @y.38
  %2350 = sub i32 %2348, 1
  %2351 = mul i32 %2348, %2350
  %2352 = urem i32 %2351, 2
  %2353 = icmp eq i32 %2352, 0
  %2354 = icmp slt i32 %2349, 10
  %2355 = or i1 %2353, %2354
  br i1 %2355, label %originalBBpart2619, label %originalBB609alteredBB

originalBBpart2619:                               ; preds = %originalBB609
  br i1 %2347, label %2356, label %2365, !dbg !2691

2356:                                             ; preds = %originalBBpart2619
  %2357 = load i8*, i8** %21, align 8, !dbg !2692
  %2358 = load i64, i64* %28, align 8, !dbg !2693
  %2359 = load i64, i64* %44, align 8, !dbg !2694
  %2360 = add i64 %2358, %2359, !dbg !2695
  %2361 = getelementptr inbounds i8, i8* %2357, i64 %2360, !dbg !2692
  %2362 = load i8, i8* %2361, align 1, !dbg !2692
  %2363 = sext i8 %2362 to i32, !dbg !2692
  %2364 = icmp ne i32 %2363, 0, !dbg !2691
  br label %2365

2365:                                             ; preds = %2356, %originalBBpart2619
  %2366 = phi i1 [ false, %originalBBpart2619 ], [ %2364, %2356 ], !dbg !2696
  br i1 %2366, label %2367, label %2386, !dbg !2685

2367:                                             ; preds = %2365
  %2368 = load i32, i32* @x.37
  %2369 = load i32, i32* @y.38
  %2370 = sub i32 %2368, 1
  %2371 = mul i32 %2368, %2370
  %2372 = urem i32 %2371, 2
  %2373 = icmp eq i32 %2372, 0
  %2374 = icmp slt i32 %2369, 10
  %2375 = or i1 %2373, %2374
  br i1 %2375, label %originalBB621, label %originalBB621alteredBB

originalBB621:                                    ; preds = %2367, %originalBB621alteredBB
  %2376 = load i64, i64* %44, align 8, !dbg !2697
  %2377 = add i64 %2376, 1, !dbg !2697
  store i64 %2377, i64* %44, align 8, !dbg !2697
  %2378 = load i32, i32* @x.37
  %2379 = load i32, i32* @y.38
  %2380 = sub i32 %2378, 1
  %2381 = mul i32 %2378, %2380
  %2382 = urem i32 %2381, 2
  %2383 = icmp eq i32 %2382, 0
  %2384 = icmp slt i32 %2379, 10
  %2385 = or i1 %2383, %2384
  br i1 %2385, label %originalBBpart2627, label %originalBB621alteredBB

originalBBpart2627:                               ; preds = %originalBB621
  br label %2334, !dbg !2685, !llvm.loop !2698

2386:                                             ; preds = %2365
  %2387 = load i32, i32* @x.37
  %2388 = load i32, i32* @y.38
  %2389 = sub i32 %2387, 1
  %2390 = mul i32 %2387, %2389
  %2391 = urem i32 %2390, 2
  %2392 = icmp eq i32 %2391, 0
  %2393 = icmp slt i32 %2388, 10
  %2394 = or i1 %2392, %2393
  br i1 %2394, label %originalBB629, label %originalBB629alteredBB

originalBB629:                                    ; preds = %2386, %originalBB629alteredBB
  %2395 = load i32, i32* @x.37
  %2396 = load i32, i32* @y.38
  %2397 = sub i32 %2395, 1
  %2398 = mul i32 %2395, %2397
  %2399 = urem i32 %2398, 2
  %2400 = icmp eq i32 %2399, 0
  %2401 = icmp slt i32 %2396, 10
  %2402 = or i1 %2400, %2401
  br i1 %2402, label %originalBBpart2631, label %originalBB629alteredBB

originalBBpart2631:                               ; preds = %originalBB629
  br label %2655, !dbg !2699

2403:                                             ; preds = %2330
  %2404 = load i32, i32* @x.37
  %2405 = load i32, i32* @y.38
  %2406 = sub i32 %2404, 1
  %2407 = mul i32 %2404, %2406
  %2408 = urem i32 %2407, 2
  %2409 = icmp eq i32 %2408, 0
  %2410 = icmp slt i32 %2405, 10
  %2411 = or i1 %2409, %2410
  br i1 %2411, label %originalBB633, label %originalBB633alteredBB

originalBB633:                                    ; preds = %2403, %originalBB633alteredBB
  %2412 = load i8, i8* %35, align 1, !dbg !2700
  %2413 = trunc i8 %2412 to i1, !dbg !2700
  %2414 = load i32, i32* @x.37
  %2415 = load i32, i32* @y.38
  %2416 = sub i32 %2414, 1
  %2417 = mul i32 %2414, %2416
  %2418 = urem i32 %2417, 2
  %2419 = icmp eq i32 %2418, 0
  %2420 = icmp slt i32 %2415, 10
  %2421 = or i1 %2419, %2420
  br i1 %2421, label %originalBBpart2635, label %originalBB633alteredBB

originalBBpart2635:                               ; preds = %originalBB633
  br i1 %2413, label %2422, label %2543, !dbg !2703

2422:                                             ; preds = %originalBBpart2635
  %2423 = load i32, i32* @x.37
  %2424 = load i32, i32* @y.38
  %2425 = sub i32 %2423, 1
  %2426 = mul i32 %2423, %2425
  %2427 = urem i32 %2426, 2
  %2428 = icmp eq i32 %2427, 0
  %2429 = icmp slt i32 %2424, 10
  %2430 = or i1 %2428, %2429
  br i1 %2430, label %originalBB637, label %originalBB637alteredBB

originalBB637:                                    ; preds = %2422, %originalBB637alteredBB
  %2431 = load i32, i32* %23, align 4, !dbg !2704
  %2432 = icmp eq i32 %2431, 2, !dbg !2705
  %2433 = load i32, i32* @x.37
  %2434 = load i32, i32* @y.38
  %2435 = sub i32 %2433, 1
  %2436 = mul i32 %2433, %2435
  %2437 = urem i32 %2436, 2
  %2438 = icmp eq i32 %2437, 0
  %2439 = icmp slt i32 %2434, 10
  %2440 = or i1 %2438, %2439
  br i1 %2440, label %originalBBpart2639, label %originalBB637alteredBB

originalBBpart2639:                               ; preds = %originalBB637
  br i1 %2432, label %2441, label %2543, !dbg !2706

2441:                                             ; preds = %originalBBpart2639
  call void @llvm.dbg.declare(metadata i64* %49, metadata !2707, metadata !DIExpression()), !dbg !2709
  %2442 = load i32, i32* @x.37
  %2443 = load i32, i32* @y.38
  %2444 = sub i32 %2442, 1
  %2445 = mul i32 %2442, %2444
  %2446 = urem i32 %2445, 2
  %2447 = icmp eq i32 %2446, 0
  %2448 = icmp slt i32 %2443, 10
  %2449 = or i1 %2447, %2448
  br i1 %2449, label %originalBB641, label %originalBB641alteredBB

originalBB641:                                    ; preds = %2441, %originalBB641alteredBB
  store i64 1, i64* %49, align 8, !dbg !2710
  %2450 = load i32, i32* @x.37
  %2451 = load i32, i32* @y.38
  %2452 = sub i32 %2450, 1
  %2453 = mul i32 %2450, %2452
  %2454 = urem i32 %2453, 2
  %2455 = icmp eq i32 %2454, 0
  %2456 = icmp slt i32 %2451, 10
  %2457 = or i1 %2455, %2456
  br i1 %2457, label %originalBBpart2643, label %originalBB641alteredBB

originalBBpart2643:                               ; preds = %originalBB641
  br label %2458, !dbg !2712

2458:                                             ; preds = %originalBBpart2691, %originalBBpart2643
  %2459 = load i64, i64* %49, align 8, !dbg !2713
  %2460 = load i64, i64* %48, align 8, !dbg !2715
  %2461 = icmp ult i64 %2459, %2460, !dbg !2716
  br i1 %2461, label %2462, label %2542, !dbg !2717

2462:                                             ; preds = %2458
  %2463 = load i32, i32* @x.37
  %2464 = load i32, i32* @y.38
  %2465 = sub i32 %2463, 1
  %2466 = mul i32 %2463, %2465
  %2467 = urem i32 %2466, 2
  %2468 = icmp eq i32 %2467, 0
  %2469 = icmp slt i32 %2464, 10
  %2470 = or i1 %2468, %2469
  br i1 %2470, label %originalBB645, label %originalBB645alteredBB

originalBB645:                                    ; preds = %2462, %originalBB645alteredBB
  %2471 = load i8*, i8** %21, align 8, !dbg !2718
  %2472 = load i64, i64* %28, align 8, !dbg !2719
  %2473 = load i64, i64* %44, align 8, !dbg !2720
  %2474 = add i64 %2472, %2473, !dbg !2721
  %2475 = load i64, i64* %49, align 8, !dbg !2722
  %2476 = add i64 %2474, %2475, !dbg !2723
  %2477 = getelementptr inbounds i8, i8* %2471, i64 %2476, !dbg !2718
  %2478 = load i8, i8* %2477, align 1, !dbg !2718
  %2479 = sext i8 %2478 to i32, !dbg !2718
  %2480 = load i32, i32* @x.37
  %2481 = load i32, i32* @y.38
  %2482 = sub i32 %2480, 1
  %2483 = mul i32 %2480, %2482
  %2484 = urem i32 %2483, 2
  %2485 = icmp eq i32 %2484, 0
  %2486 = icmp slt i32 %2481, 10
  %2487 = or i1 %2485, %2486
  br i1 %2487, label %originalBBpart2667, label %originalBB645alteredBB

originalBBpart2667:                               ; preds = %originalBB645
  switch i32 %2479, label %2505 [
    i32 91, label %2488
    i32 92, label %2488
    i32 94, label %2488
    i32 96, label %2488
    i32 124, label %2488
  ], !dbg !2724

2488:                                             ; preds = %originalBBpart2667, %originalBBpart2667, %originalBBpart2667, %originalBBpart2667, %originalBBpart2667
  %2489 = load i32, i32* @x.37
  %2490 = load i32, i32* @y.38
  %2491 = sub i32 %2489, 1
  %2492 = mul i32 %2489, %2491
  %2493 = urem i32 %2492, 2
  %2494 = icmp eq i32 %2493, 0
  %2495 = icmp slt i32 %2490, 10
  %2496 = or i1 %2494, %2495
  br i1 %2496, label %originalBB669, label %originalBB669alteredBB

originalBB669:                                    ; preds = %2488, %originalBB669alteredBB
  %2497 = load i32, i32* @x.37
  %2498 = load i32, i32* @y.38
  %2499 = sub i32 %2497, 1
  %2500 = mul i32 %2497, %2499
  %2501 = urem i32 %2500, 2
  %2502 = icmp eq i32 %2501, 0
  %2503 = icmp slt i32 %2498, 10
  %2504 = or i1 %2502, %2503
  br i1 %2504, label %originalBBpart2671, label %originalBB669alteredBB

originalBBpart2671:                               ; preds = %originalBB669
  br label %4606, !dbg !2725

2505:                                             ; preds = %originalBBpart2667
  %2506 = load i32, i32* @x.37
  %2507 = load i32, i32* @y.38
  %2508 = sub i32 %2506, 1
  %2509 = mul i32 %2506, %2508
  %2510 = urem i32 %2509, 2
  %2511 = icmp eq i32 %2510, 0
  %2512 = icmp slt i32 %2507, 10
  %2513 = or i1 %2511, %2512
  br i1 %2513, label %originalBB673, label %originalBB673alteredBB

originalBB673:                                    ; preds = %2505, %originalBB673alteredBB
  %2514 = load i32, i32* @x.37
  %2515 = load i32, i32* @y.38
  %2516 = sub i32 %2514, 1
  %2517 = mul i32 %2514, %2516
  %2518 = urem i32 %2517, 2
  %2519 = icmp eq i32 %2518, 0
  %2520 = icmp slt i32 %2515, 10
  %2521 = or i1 %2519, %2520
  br i1 %2521, label %originalBBpart2675, label %originalBB673alteredBB

originalBBpart2675:                               ; preds = %originalBB673
  br label %2522, !dbg !2727

2522:                                             ; preds = %originalBBpart2675
  br label %2523, !dbg !2728

2523:                                             ; preds = %2522
  %2524 = load i32, i32* @x.37
  %2525 = load i32, i32* @y.38
  %2526 = sub i32 %2524, 1
  %2527 = mul i32 %2524, %2526
  %2528 = urem i32 %2527, 2
  %2529 = icmp eq i32 %2528, 0
  %2530 = icmp slt i32 %2525, 10
  %2531 = or i1 %2529, %2530
  br i1 %2531, label %originalBB677, label %originalBB677alteredBB

originalBB677:                                    ; preds = %2523, %originalBB677alteredBB
  %2532 = load i64, i64* %49, align 8, !dbg !2729
  %2533 = add i64 %2532, 1, !dbg !2729
  store i64 %2533, i64* %49, align 8, !dbg !2729
  %2534 = load i32, i32* @x.37
  %2535 = load i32, i32* @y.38
  %2536 = sub i32 %2534, 1
  %2537 = mul i32 %2534, %2536
  %2538 = urem i32 %2537, 2
  %2539 = icmp eq i32 %2538, 0
  %2540 = icmp slt i32 %2535, 10
  %2541 = or i1 %2539, %2540
  br i1 %2541, label %originalBBpart2691, label %originalBB677alteredBB

originalBBpart2691:                               ; preds = %originalBB677
  br label %2458, !dbg !2730, !llvm.loop !2731

2542:                                             ; preds = %2458
  br label %2543, !dbg !2733

2543:                                             ; preds = %2542, %originalBBpart2639, %originalBBpart2635
  %2544 = load i32, i32* %47, align 4, !dbg !2734
  %2545 = call i32 @iswprint(i32 %2544) #10, !dbg !2736
  %2546 = icmp ne i32 %2545, 0, !dbg !2736
  br i1 %2546, label %2564, label %2547, !dbg !2737

2547:                                             ; preds = %2543
  %2548 = load i32, i32* @x.37
  %2549 = load i32, i32* @y.38
  %2550 = sub i32 %2548, 1
  %2551 = mul i32 %2548, %2550
  %2552 = urem i32 %2551, 2
  %2553 = icmp eq i32 %2552, 0
  %2554 = icmp slt i32 %2549, 10
  %2555 = or i1 %2553, %2554
  br i1 %2555, label %originalBB693, label %originalBB693alteredBB

originalBB693:                                    ; preds = %2547, %originalBB693alteredBB
  store i8 0, i8* %45, align 1, !dbg !2738
  %2556 = load i32, i32* @x.37
  %2557 = load i32, i32* @y.38
  %2558 = sub i32 %2556, 1
  %2559 = mul i32 %2556, %2558
  %2560 = urem i32 %2559, 2
  %2561 = icmp eq i32 %2560, 0
  %2562 = icmp slt i32 %2557, 10
  %2563 = or i1 %2561, %2562
  br i1 %2563, label %originalBBpart2695, label %originalBB693alteredBB

originalBBpart2695:                               ; preds = %originalBB693
  br label %2564, !dbg !2739

2564:                                             ; preds = %originalBBpart2695, %2543
  %2565 = load i32, i32* @x.37
  %2566 = load i32, i32* @y.38
  %2567 = sub i32 %2565, 1
  %2568 = mul i32 %2565, %2567
  %2569 = urem i32 %2568, 2
  %2570 = icmp eq i32 %2569, 0
  %2571 = icmp slt i32 %2566, 10
  %2572 = or i1 %2570, %2571
  br i1 %2572, label %originalBB697, label %originalBB697alteredBB

originalBB697:                                    ; preds = %2564, %originalBB697alteredBB
  %2573 = load i64, i64* %48, align 8, !dbg !2740
  %2574 = load i64, i64* %44, align 8, !dbg !2741
  %2575 = add i64 %2574, %2573, !dbg !2741
  store i64 %2575, i64* %44, align 8, !dbg !2741
  %2576 = load i32, i32* @x.37
  %2577 = load i32, i32* @y.38
  %2578 = sub i32 %2576, 1
  %2579 = mul i32 %2576, %2578
  %2580 = urem i32 %2579, 2
  %2581 = icmp eq i32 %2580, 0
  %2582 = icmp slt i32 %2577, 10
  %2583 = or i1 %2581, %2582
  br i1 %2583, label %originalBBpart2703, label %originalBB697alteredBB

originalBBpart2703:                               ; preds = %originalBB697
  br label %2584

2584:                                             ; preds = %originalBBpart2703
  %2585 = load i32, i32* @x.37
  %2586 = load i32, i32* @y.38
  %2587 = sub i32 %2585, 1
  %2588 = mul i32 %2585, %2587
  %2589 = urem i32 %2588, 2
  %2590 = icmp eq i32 %2589, 0
  %2591 = icmp slt i32 %2586, 10
  %2592 = or i1 %2590, %2591
  br i1 %2592, label %originalBB705, label %originalBB705alteredBB

originalBB705:                                    ; preds = %2584, %originalBB705alteredBB
  %2593 = load i32, i32* @x.37
  %2594 = load i32, i32* @y.38
  %2595 = sub i32 %2593, 1
  %2596 = mul i32 %2593, %2595
  %2597 = urem i32 %2596, 2
  %2598 = icmp eq i32 %2597, 0
  %2599 = icmp slt i32 %2594, 10
  %2600 = or i1 %2598, %2599
  br i1 %2600, label %originalBBpart2707, label %originalBB705alteredBB

originalBBpart2707:                               ; preds = %originalBB705
  br label %2601

2601:                                             ; preds = %originalBBpart2707
  %2602 = load i32, i32* @x.37
  %2603 = load i32, i32* @y.38
  %2604 = sub i32 %2602, 1
  %2605 = mul i32 %2602, %2604
  %2606 = urem i32 %2605, 2
  %2607 = icmp eq i32 %2606, 0
  %2608 = icmp slt i32 %2603, 10
  %2609 = or i1 %2607, %2608
  br i1 %2609, label %originalBB709, label %originalBB709alteredBB

originalBB709:                                    ; preds = %2601, %originalBB709alteredBB
  %2610 = load i32, i32* @x.37
  %2611 = load i32, i32* @y.38
  %2612 = sub i32 %2610, 1
  %2613 = mul i32 %2610, %2612
  %2614 = urem i32 %2613, 2
  %2615 = icmp eq i32 %2614, 0
  %2616 = icmp slt i32 %2611, 10
  %2617 = or i1 %2615, %2616
  br i1 %2617, label %originalBBpart2711, label %originalBB709alteredBB

originalBBpart2711:                               ; preds = %originalBB709
  br label %2618

2618:                                             ; preds = %originalBBpart2711
  %2619 = load i32, i32* @x.37
  %2620 = load i32, i32* @y.38
  %2621 = sub i32 %2619, 1
  %2622 = mul i32 %2619, %2621
  %2623 = urem i32 %2622, 2
  %2624 = icmp eq i32 %2623, 0
  %2625 = icmp slt i32 %2620, 10
  %2626 = or i1 %2624, %2625
  br i1 %2626, label %originalBB713, label %originalBB713alteredBB

originalBB713:                                    ; preds = %2618, %originalBB713alteredBB
  %2627 = load i32, i32* @x.37
  %2628 = load i32, i32* @y.38
  %2629 = sub i32 %2627, 1
  %2630 = mul i32 %2627, %2629
  %2631 = urem i32 %2630, 2
  %2632 = icmp eq i32 %2631, 0
  %2633 = icmp slt i32 %2628, 10
  %2634 = or i1 %2632, %2633
  br i1 %2634, label %originalBBpart2715, label %originalBB713alteredBB

originalBBpart2715:                               ; preds = %originalBB713
  br label %2635, !dbg !2742

2635:                                             ; preds = %originalBBpart2715
  %2636 = load i32, i32* @x.37
  %2637 = load i32, i32* @y.38
  %2638 = sub i32 %2636, 1
  %2639 = mul i32 %2636, %2638
  %2640 = urem i32 %2639, 2
  %2641 = icmp eq i32 %2640, 0
  %2642 = icmp slt i32 %2637, 10
  %2643 = or i1 %2641, %2642
  br i1 %2643, label %originalBB717, label %originalBB717alteredBB

originalBB717:                                    ; preds = %2635, %originalBB717alteredBB
  %2644 = call i32 @mbsinit(%struct.__mbstate_t* %46) #13, !dbg !2743
  %2645 = icmp ne i32 %2644, 0, !dbg !2744
  %2646 = xor i1 %2645, true, !dbg !2744
  %2647 = load i32, i32* @x.37
  %2648 = load i32, i32* @y.38
  %2649 = sub i32 %2647, 1
  %2650 = mul i32 %2647, %2649
  %2651 = urem i32 %2650, 2
  %2652 = icmp eq i32 %2651, 0
  %2653 = icmp slt i32 %2648, 10
  %2654 = or i1 %2652, %2653
  br i1 %2654, label %originalBBpart2723, label %originalBB717alteredBB

originalBBpart2723:                               ; preds = %originalBB717
  br i1 %2646, label %2263, label %2655, !dbg !2742, !llvm.loop !2745

2655:                                             ; preds = %originalBBpart2723, %originalBBpart2631, %2329, %originalBBpart2603
  %2656 = load i32, i32* @x.37
  %2657 = load i32, i32* @y.38
  %2658 = sub i32 %2656, 1
  %2659 = mul i32 %2656, %2658
  %2660 = urem i32 %2659, 2
  %2661 = icmp eq i32 %2660, 0
  %2662 = icmp slt i32 %2657, 10
  %2663 = or i1 %2661, %2662
  br i1 %2663, label %originalBB725, label %originalBB725alteredBB

originalBB725:                                    ; preds = %2655, %originalBB725alteredBB
  %2664 = load i32, i32* @x.37
  %2665 = load i32, i32* @y.38
  %2666 = sub i32 %2664, 1
  %2667 = mul i32 %2664, %2666
  %2668 = urem i32 %2667, 2
  %2669 = icmp eq i32 %2668, 0
  %2670 = icmp slt i32 %2665, 10
  %2671 = or i1 %2669, %2670
  br i1 %2671, label %originalBBpart2727, label %originalBB725alteredBB

originalBBpart2727:                               ; preds = %originalBB725
  br label %2672

2672:                                             ; preds = %originalBBpart2727, %2195
  %2673 = load i8, i8* %45, align 1, !dbg !2747
  %2674 = trunc i8 %2673 to i1, !dbg !2747
  %2675 = zext i1 %2674 to i8, !dbg !2748
  store i8 %2675, i8* %43, align 1, !dbg !2748
  %2676 = load i64, i64* %44, align 8, !dbg !2749
  %2677 = icmp ult i64 1, %2676, !dbg !2751
  br i1 %2677, label %2700, label %2678, !dbg !2752

2678:                                             ; preds = %2672
  %2679 = load i32, i32* @x.37
  %2680 = load i32, i32* @y.38
  %2681 = sub i32 %2679, 1
  %2682 = mul i32 %2679, %2681
  %2683 = urem i32 %2682, 2
  %2684 = icmp eq i32 %2683, 0
  %2685 = icmp slt i32 %2680, 10
  %2686 = or i1 %2684, %2685
  br i1 %2686, label %originalBB729, label %originalBB729alteredBB

originalBB729:                                    ; preds = %2678, %originalBB729alteredBB
  %2687 = load i8, i8* %33, align 1, !dbg !2753
  %2688 = trunc i8 %2687 to i1, !dbg !2753
  %2689 = load i32, i32* @x.37
  %2690 = load i32, i32* @y.38
  %2691 = sub i32 %2689, 1
  %2692 = mul i32 %2689, %2691
  %2693 = urem i32 %2692, 2
  %2694 = icmp eq i32 %2693, 0
  %2695 = icmp slt i32 %2690, 10
  %2696 = or i1 %2694, %2695
  br i1 %2696, label %originalBBpart2731, label %originalBB729alteredBB

originalBBpart2731:                               ; preds = %originalBB729
  br i1 %2688, label %2697, label %3576, !dbg !2754

2697:                                             ; preds = %originalBBpart2731
  %2698 = load i8, i8* %45, align 1, !dbg !2755
  %2699 = trunc i8 %2698 to i1, !dbg !2755
  br i1 %2699, label %3576, label %2700, !dbg !2756

2700:                                             ; preds = %2697, %2672
  call void @llvm.dbg.declare(metadata i64* %50, metadata !2757, metadata !DIExpression()), !dbg !2759
  %2701 = load i32, i32* @x.37
  %2702 = load i32, i32* @y.38
  %2703 = sub i32 %2701, 1
  %2704 = mul i32 %2701, %2703
  %2705 = urem i32 %2704, 2
  %2706 = icmp eq i32 %2705, 0
  %2707 = icmp slt i32 %2702, 10
  %2708 = or i1 %2706, %2707
  br i1 %2708, label %originalBB733, label %originalBB733alteredBB

originalBB733:                                    ; preds = %2700, %originalBB733alteredBB
  %2709 = load i64, i64* %28, align 8, !dbg !2760
  %2710 = load i64, i64* %44, align 8, !dbg !2761
  %2711 = add i64 %2709, %2710, !dbg !2762
  store i64 %2711, i64* %50, align 8, !dbg !2759
  %2712 = load i32, i32* @x.37
  %2713 = load i32, i32* @y.38
  %2714 = sub i32 %2712, 1
  %2715 = mul i32 %2712, %2714
  %2716 = urem i32 %2715, 2
  %2717 = icmp eq i32 %2716, 0
  %2718 = icmp slt i32 %2713, 10
  %2719 = or i1 %2717, %2718
  br i1 %2719, label %originalBBpart2737, label %originalBB733alteredBB

originalBBpart2737:                               ; preds = %originalBB733
  br label %2720, !dbg !2763

2720:                                             ; preds = %originalBBpart2959, %originalBBpart2737
  %2721 = load i32, i32* @x.37
  %2722 = load i32, i32* @y.38
  %2723 = sub i32 %2721, 1
  %2724 = mul i32 %2721, %2723
  %2725 = urem i32 %2724, 2
  %2726 = icmp eq i32 %2725, 0
  %2727 = icmp slt i32 %2722, 10
  %2728 = or i1 %2726, %2727
  br i1 %2728, label %originalBB739, label %originalBB739alteredBB

originalBB739:                                    ; preds = %2720, %originalBB739alteredBB
  %2729 = load i8, i8* %33, align 1, !dbg !2764
  %2730 = trunc i8 %2729 to i1, !dbg !2764
  %2731 = load i32, i32* @x.37
  %2732 = load i32, i32* @y.38
  %2733 = sub i32 %2731, 1
  %2734 = mul i32 %2731, %2733
  %2735 = urem i32 %2734, 2
  %2736 = icmp eq i32 %2735, 0
  %2737 = icmp slt i32 %2732, 10
  %2738 = or i1 %2736, %2737
  br i1 %2738, label %originalBBpart2741, label %originalBB739alteredBB

originalBBpart2741:                               ; preds = %originalBB739
  br i1 %2730, label %2739, label %3148, !dbg !2769

2739:                                             ; preds = %originalBBpart2741
  %2740 = load i32, i32* @x.37
  %2741 = load i32, i32* @y.38
  %2742 = sub i32 %2740, 1
  %2743 = mul i32 %2740, %2742
  %2744 = urem i32 %2743, 2
  %2745 = icmp eq i32 %2744, 0
  %2746 = icmp slt i32 %2741, 10
  %2747 = or i1 %2745, %2746
  br i1 %2747, label %originalBB743, label %originalBB743alteredBB

originalBB743:                                    ; preds = %2739, %originalBB743alteredBB
  %2748 = load i8, i8* %45, align 1, !dbg !2770
  %2749 = trunc i8 %2748 to i1, !dbg !2770
  %2750 = load i32, i32* @x.37
  %2751 = load i32, i32* @y.38
  %2752 = sub i32 %2750, 1
  %2753 = mul i32 %2750, %2752
  %2754 = urem i32 %2753, 2
  %2755 = icmp eq i32 %2754, 0
  %2756 = icmp slt i32 %2751, 10
  %2757 = or i1 %2755, %2756
  br i1 %2757, label %originalBBpart2745, label %originalBB743alteredBB

originalBBpart2745:                               ; preds = %originalBB743
  br i1 %2749, label %3148, label %2758, !dbg !2771

2758:                                             ; preds = %originalBBpart2745
  %2759 = load i32, i32* @x.37
  %2760 = load i32, i32* @y.38
  %2761 = sub i32 %2759, 1
  %2762 = mul i32 %2759, %2761
  %2763 = urem i32 %2762, 2
  %2764 = icmp eq i32 %2763, 0
  %2765 = icmp slt i32 %2760, 10
  %2766 = or i1 %2764, %2765
  br i1 %2766, label %originalBB747, label %originalBB747alteredBB

originalBB747:                                    ; preds = %2758, %originalBB747alteredBB
  %2767 = load i32, i32* @x.37
  %2768 = load i32, i32* @y.38
  %2769 = sub i32 %2767, 1
  %2770 = mul i32 %2767, %2769
  %2771 = urem i32 %2770, 2
  %2772 = icmp eq i32 %2771, 0
  %2773 = icmp slt i32 %2768, 10
  %2774 = or i1 %2772, %2773
  br i1 %2774, label %originalBBpart2749, label %originalBB747alteredBB

originalBBpart2749:                               ; preds = %originalBB747
  br label %2775, !dbg !2772

2775:                                             ; preds = %originalBBpart2749
  %2776 = load i32, i32* @x.37
  %2777 = load i32, i32* @y.38
  %2778 = sub i32 %2776, 1
  %2779 = mul i32 %2776, %2778
  %2780 = urem i32 %2779, 2
  %2781 = icmp eq i32 %2780, 0
  %2782 = icmp slt i32 %2777, 10
  %2783 = or i1 %2781, %2782
  br i1 %2783, label %originalBB751, label %originalBB751alteredBB

originalBB751:                                    ; preds = %2775, %originalBB751alteredBB
  %2784 = load i8, i8* %35, align 1, !dbg !2774
  %2785 = trunc i8 %2784 to i1, !dbg !2774
  %2786 = load i32, i32* @x.37
  %2787 = load i32, i32* @y.38
  %2788 = sub i32 %2786, 1
  %2789 = mul i32 %2786, %2788
  %2790 = urem i32 %2789, 2
  %2791 = icmp eq i32 %2790, 0
  %2792 = icmp slt i32 %2787, 10
  %2793 = or i1 %2791, %2792
  br i1 %2793, label %originalBBpart2753, label %originalBB751alteredBB

originalBBpart2753:                               ; preds = %originalBB751
  br i1 %2785, label %2794, label %2811, !dbg !2777

2794:                                             ; preds = %originalBBpart2753
  %2795 = load i32, i32* @x.37
  %2796 = load i32, i32* @y.38
  %2797 = sub i32 %2795, 1
  %2798 = mul i32 %2795, %2797
  %2799 = urem i32 %2798, 2
  %2800 = icmp eq i32 %2799, 0
  %2801 = icmp slt i32 %2796, 10
  %2802 = or i1 %2800, %2801
  br i1 %2802, label %originalBB755, label %originalBB755alteredBB

originalBB755:                                    ; preds = %2794, %originalBB755alteredBB
  %2803 = load i32, i32* @x.37
  %2804 = load i32, i32* @y.38
  %2805 = sub i32 %2803, 1
  %2806 = mul i32 %2803, %2805
  %2807 = urem i32 %2806, 2
  %2808 = icmp eq i32 %2807, 0
  %2809 = icmp slt i32 %2804, 10
  %2810 = or i1 %2808, %2809
  br i1 %2810, label %originalBBpart2757, label %originalBB755alteredBB

originalBBpart2757:                               ; preds = %originalBB755
  br label %4606, !dbg !2774

2811:                                             ; preds = %originalBBpart2753
  store i8 1, i8* %42, align 1, !dbg !2777
  %2812 = load i32, i32* %23, align 4, !dbg !2778
  %2813 = icmp eq i32 %2812, 2, !dbg !2778
  br i1 %2813, label %2814, label %2966, !dbg !2778

2814:                                             ; preds = %2811
  %2815 = load i32, i32* @x.37
  %2816 = load i32, i32* @y.38
  %2817 = sub i32 %2815, 1
  %2818 = mul i32 %2815, %2817
  %2819 = urem i32 %2818, 2
  %2820 = icmp eq i32 %2819, 0
  %2821 = icmp slt i32 %2816, 10
  %2822 = or i1 %2820, %2821
  br i1 %2822, label %originalBB759, label %originalBB759alteredBB

originalBB759:                                    ; preds = %2814, %originalBB759alteredBB
  %2823 = load i8, i8* %36, align 1, !dbg !2778
  %2824 = trunc i8 %2823 to i1, !dbg !2778
  %2825 = load i32, i32* @x.37
  %2826 = load i32, i32* @y.38
  %2827 = sub i32 %2825, 1
  %2828 = mul i32 %2825, %2827
  %2829 = urem i32 %2828, 2
  %2830 = icmp eq i32 %2829, 0
  %2831 = icmp slt i32 %2826, 10
  %2832 = or i1 %2830, %2831
  br i1 %2832, label %originalBBpart2761, label %originalBB759alteredBB

originalBBpart2761:                               ; preds = %originalBB759
  br i1 %2824, label %2966, label %2833, !dbg !2777

2833:                                             ; preds = %originalBBpart2761
  %2834 = load i32, i32* @x.37
  %2835 = load i32, i32* @y.38
  %2836 = sub i32 %2834, 1
  %2837 = mul i32 %2834, %2836
  %2838 = urem i32 %2837, 2
  %2839 = icmp eq i32 %2838, 0
  %2840 = icmp slt i32 %2835, 10
  %2841 = or i1 %2839, %2840
  br i1 %2841, label %originalBB763, label %originalBB763alteredBB

originalBB763:                                    ; preds = %2833, %originalBB763alteredBB
  %2842 = load i32, i32* @x.37
  %2843 = load i32, i32* @y.38
  %2844 = sub i32 %2842, 1
  %2845 = mul i32 %2842, %2844
  %2846 = urem i32 %2845, 2
  %2847 = icmp eq i32 %2846, 0
  %2848 = icmp slt i32 %2843, 10
  %2849 = or i1 %2847, %2848
  br i1 %2849, label %originalBBpart2765, label %originalBB763alteredBB

originalBBpart2765:                               ; preds = %originalBB763
  br label %2850, !dbg !2780

2850:                                             ; preds = %originalBBpart2765
  %2851 = load i32, i32* @x.37
  %2852 = load i32, i32* @y.38
  %2853 = sub i32 %2851, 1
  %2854 = mul i32 %2851, %2853
  %2855 = urem i32 %2854, 2
  %2856 = icmp eq i32 %2855, 0
  %2857 = icmp slt i32 %2852, 10
  %2858 = or i1 %2856, %2857
  br i1 %2858, label %originalBB767, label %originalBB767alteredBB

originalBB767:                                    ; preds = %2850, %originalBB767alteredBB
  %2859 = load i64, i64* %29, align 8, !dbg !2782
  %2860 = load i64, i64* %20, align 8, !dbg !2782
  %2861 = icmp ult i64 %2859, %2860, !dbg !2782
  %2862 = load i32, i32* @x.37
  %2863 = load i32, i32* @y.38
  %2864 = sub i32 %2862, 1
  %2865 = mul i32 %2862, %2864
  %2866 = urem i32 %2865, 2
  %2867 = icmp eq i32 %2866, 0
  %2868 = icmp slt i32 %2863, 10
  %2869 = or i1 %2867, %2868
  br i1 %2869, label %originalBBpart2769, label %originalBB767alteredBB

originalBBpart2769:                               ; preds = %originalBB767
  br i1 %2861, label %2870, label %2874, !dbg !2785

2870:                                             ; preds = %originalBBpart2769
  %2871 = load i8*, i8** %19, align 8, !dbg !2782
  %2872 = load i64, i64* %29, align 8, !dbg !2782
  %2873 = getelementptr inbounds i8, i8* %2871, i64 %2872, !dbg !2782
  store i8 39, i8* %2873, align 1, !dbg !2782
  br label %2874, !dbg !2782

2874:                                             ; preds = %2870, %originalBBpart2769
  %2875 = load i64, i64* %29, align 8, !dbg !2785
  %2876 = add i64 %2875, 1, !dbg !2785
  store i64 %2876, i64* %29, align 8, !dbg !2785
  br label %2877, !dbg !2785

2877:                                             ; preds = %2874
  br label %2878, !dbg !2780

2878:                                             ; preds = %2877
  %2879 = load i32, i32* @x.37
  %2880 = load i32, i32* @y.38
  %2881 = sub i32 %2879, 1
  %2882 = mul i32 %2879, %2881
  %2883 = urem i32 %2882, 2
  %2884 = icmp eq i32 %2883, 0
  %2885 = icmp slt i32 %2880, 10
  %2886 = or i1 %2884, %2885
  br i1 %2886, label %originalBB771, label %originalBB771alteredBB

originalBB771:                                    ; preds = %2878, %originalBB771alteredBB
  %2887 = load i64, i64* %29, align 8, !dbg !2786
  %2888 = load i64, i64* %20, align 8, !dbg !2786
  %2889 = icmp ult i64 %2887, %2888, !dbg !2786
  %2890 = load i32, i32* @x.37
  %2891 = load i32, i32* @y.38
  %2892 = sub i32 %2890, 1
  %2893 = mul i32 %2890, %2892
  %2894 = urem i32 %2893, 2
  %2895 = icmp eq i32 %2894, 0
  %2896 = icmp slt i32 %2891, 10
  %2897 = or i1 %2895, %2896
  br i1 %2897, label %originalBBpart2773, label %originalBB771alteredBB

originalBBpart2773:                               ; preds = %originalBB771
  br i1 %2889, label %2898, label %2918, !dbg !2789

2898:                                             ; preds = %originalBBpart2773
  %2899 = load i32, i32* @x.37
  %2900 = load i32, i32* @y.38
  %2901 = sub i32 %2899, 1
  %2902 = mul i32 %2899, %2901
  %2903 = urem i32 %2902, 2
  %2904 = icmp eq i32 %2903, 0
  %2905 = icmp slt i32 %2900, 10
  %2906 = or i1 %2904, %2905
  br i1 %2906, label %originalBB775, label %originalBB775alteredBB

originalBB775:                                    ; preds = %2898, %originalBB775alteredBB
  %2907 = load i8*, i8** %19, align 8, !dbg !2786
  %2908 = load i64, i64* %29, align 8, !dbg !2786
  %2909 = getelementptr inbounds i8, i8* %2907, i64 %2908, !dbg !2786
  store i8 36, i8* %2909, align 1, !dbg !2786
  %2910 = load i32, i32* @x.37
  %2911 = load i32, i32* @y.38
  %2912 = sub i32 %2910, 1
  %2913 = mul i32 %2910, %2912
  %2914 = urem i32 %2913, 2
  %2915 = icmp eq i32 %2914, 0
  %2916 = icmp slt i32 %2911, 10
  %2917 = or i1 %2915, %2916
  br i1 %2917, label %originalBBpart2777, label %originalBB775alteredBB

originalBBpart2777:                               ; preds = %originalBB775
  br label %2918, !dbg !2786

2918:                                             ; preds = %originalBBpart2777, %originalBBpart2773
  %2919 = load i64, i64* %29, align 8, !dbg !2789
  %2920 = add i64 %2919, 1, !dbg !2789
  store i64 %2920, i64* %29, align 8, !dbg !2789
  br label %2921, !dbg !2789

2921:                                             ; preds = %2918
  br label %2922, !dbg !2780

2922:                                             ; preds = %2921
  %2923 = load i64, i64* %29, align 8, !dbg !2790
  %2924 = load i64, i64* %20, align 8, !dbg !2790
  %2925 = icmp ult i64 %2923, %2924, !dbg !2790
  br i1 %2925, label %2926, label %2946, !dbg !2793

2926:                                             ; preds = %2922
  %2927 = load i32, i32* @x.37
  %2928 = load i32, i32* @y.38
  %2929 = sub i32 %2927, 1
  %2930 = mul i32 %2927, %2929
  %2931 = urem i32 %2930, 2
  %2932 = icmp eq i32 %2931, 0
  %2933 = icmp slt i32 %2928, 10
  %2934 = or i1 %2932, %2933
  br i1 %2934, label %originalBB779, label %originalBB779alteredBB

originalBB779:                                    ; preds = %2926, %originalBB779alteredBB
  %2935 = load i8*, i8** %19, align 8, !dbg !2790
  %2936 = load i64, i64* %29, align 8, !dbg !2790
  %2937 = getelementptr inbounds i8, i8* %2935, i64 %2936, !dbg !2790
  store i8 39, i8* %2937, align 1, !dbg !2790
  %2938 = load i32, i32* @x.37
  %2939 = load i32, i32* @y.38
  %2940 = sub i32 %2938, 1
  %2941 = mul i32 %2938, %2940
  %2942 = urem i32 %2941, 2
  %2943 = icmp eq i32 %2942, 0
  %2944 = icmp slt i32 %2939, 10
  %2945 = or i1 %2943, %2944
  br i1 %2945, label %originalBBpart2781, label %originalBB779alteredBB

originalBBpart2781:                               ; preds = %originalBB779
  br label %2946, !dbg !2790

2946:                                             ; preds = %originalBBpart2781, %2922
  %2947 = load i64, i64* %29, align 8, !dbg !2793
  %2948 = add i64 %2947, 1, !dbg !2793
  store i64 %2948, i64* %29, align 8, !dbg !2793
  br label %2949, !dbg !2793

2949:                                             ; preds = %2946
  %2950 = load i32, i32* @x.37
  %2951 = load i32, i32* @y.38
  %2952 = sub i32 %2950, 1
  %2953 = mul i32 %2950, %2952
  %2954 = urem i32 %2953, 2
  %2955 = icmp eq i32 %2954, 0
  %2956 = icmp slt i32 %2951, 10
  %2957 = or i1 %2955, %2956
  br i1 %2957, label %originalBB783, label %originalBB783alteredBB

originalBB783:                                    ; preds = %2949, %originalBB783alteredBB
  store i8 1, i8* %36, align 1, !dbg !2780
  %2958 = load i32, i32* @x.37
  %2959 = load i32, i32* @y.38
  %2960 = sub i32 %2958, 1
  %2961 = mul i32 %2958, %2960
  %2962 = urem i32 %2961, 2
  %2963 = icmp eq i32 %2962, 0
  %2964 = icmp slt i32 %2959, 10
  %2965 = or i1 %2963, %2964
  br i1 %2965, label %originalBBpart2785, label %originalBB783alteredBB

originalBBpart2785:                               ; preds = %originalBB783
  br label %2966, !dbg !2780

2966:                                             ; preds = %originalBBpart2785, %originalBBpart2761, %2811
  br label %2967, !dbg !2777

2967:                                             ; preds = %2966
  %2968 = load i32, i32* @x.37
  %2969 = load i32, i32* @y.38
  %2970 = sub i32 %2968, 1
  %2971 = mul i32 %2968, %2970
  %2972 = urem i32 %2971, 2
  %2973 = icmp eq i32 %2972, 0
  %2974 = icmp slt i32 %2969, 10
  %2975 = or i1 %2973, %2974
  br i1 %2975, label %originalBB787, label %originalBB787alteredBB

originalBB787:                                    ; preds = %2967, %originalBB787alteredBB
  %2976 = load i64, i64* %29, align 8, !dbg !2794
  %2977 = load i64, i64* %20, align 8, !dbg !2794
  %2978 = icmp ult i64 %2976, %2977, !dbg !2794
  %2979 = load i32, i32* @x.37
  %2980 = load i32, i32* @y.38
  %2981 = sub i32 %2979, 1
  %2982 = mul i32 %2979, %2981
  %2983 = urem i32 %2982, 2
  %2984 = icmp eq i32 %2983, 0
  %2985 = icmp slt i32 %2980, 10
  %2986 = or i1 %2984, %2985
  br i1 %2986, label %originalBBpart2789, label %originalBB787alteredBB

originalBBpart2789:                               ; preds = %originalBB787
  br i1 %2978, label %2987, label %3007, !dbg !2797

2987:                                             ; preds = %originalBBpart2789
  %2988 = load i32, i32* @x.37
  %2989 = load i32, i32* @y.38
  %2990 = sub i32 %2988, 1
  %2991 = mul i32 %2988, %2990
  %2992 = urem i32 %2991, 2
  %2993 = icmp eq i32 %2992, 0
  %2994 = icmp slt i32 %2989, 10
  %2995 = or i1 %2993, %2994
  br i1 %2995, label %originalBB791, label %originalBB791alteredBB

originalBB791:                                    ; preds = %2987, %originalBB791alteredBB
  %2996 = load i8*, i8** %19, align 8, !dbg !2794
  %2997 = load i64, i64* %29, align 8, !dbg !2794
  %2998 = getelementptr inbounds i8, i8* %2996, i64 %2997, !dbg !2794
  store i8 92, i8* %2998, align 1, !dbg !2794
  %2999 = load i32, i32* @x.37
  %3000 = load i32, i32* @y.38
  %3001 = sub i32 %2999, 1
  %3002 = mul i32 %2999, %3001
  %3003 = urem i32 %3002, 2
  %3004 = icmp eq i32 %3003, 0
  %3005 = icmp slt i32 %3000, 10
  %3006 = or i1 %3004, %3005
  br i1 %3006, label %originalBBpart2793, label %originalBB791alteredBB

originalBBpart2793:                               ; preds = %originalBB791
  br label %3007, !dbg !2794

3007:                                             ; preds = %originalBBpart2793, %originalBBpart2789
  %3008 = load i64, i64* %29, align 8, !dbg !2797
  %3009 = add i64 %3008, 1, !dbg !2797
  store i64 %3009, i64* %29, align 8, !dbg !2797
  br label %3010, !dbg !2797

3010:                                             ; preds = %3007
  br label %3011, !dbg !2777

3011:                                             ; preds = %3010
  br label %3012, !dbg !2798

3012:                                             ; preds = %3011
  %3013 = load i64, i64* %29, align 8, !dbg !2799
  %3014 = load i64, i64* %20, align 8, !dbg !2799
  %3015 = icmp ult i64 %3013, %3014, !dbg !2799
  br i1 %3015, label %3016, label %3041, !dbg !2802

3016:                                             ; preds = %3012
  %3017 = load i32, i32* @x.37
  %3018 = load i32, i32* @y.38
  %3019 = sub i32 %3017, 1
  %3020 = mul i32 %3017, %3019
  %3021 = urem i32 %3020, 2
  %3022 = icmp eq i32 %3021, 0
  %3023 = icmp slt i32 %3018, 10
  %3024 = or i1 %3022, %3023
  br i1 %3024, label %originalBB795, label %originalBB795alteredBB

originalBB795:                                    ; preds = %3016, %originalBB795alteredBB
  %3025 = load i8, i8* %39, align 1, !dbg !2799
  %3026 = zext i8 %3025 to i32, !dbg !2799
  %3027 = ashr i32 %3026, 6, !dbg !2799
  %3028 = add nsw i32 48, %3027, !dbg !2799
  %3029 = trunc i32 %3028 to i8, !dbg !2799
  %3030 = load i8*, i8** %19, align 8, !dbg !2799
  %3031 = load i64, i64* %29, align 8, !dbg !2799
  %3032 = getelementptr inbounds i8, i8* %3030, i64 %3031, !dbg !2799
  store i8 %3029, i8* %3032, align 1, !dbg !2799
  %3033 = load i32, i32* @x.37
  %3034 = load i32, i32* @y.38
  %3035 = sub i32 %3033, 1
  %3036 = mul i32 %3033, %3035
  %3037 = urem i32 %3036, 2
  %3038 = icmp eq i32 %3037, 0
  %3039 = icmp slt i32 %3034, 10
  %3040 = or i1 %3038, %3039
  br i1 %3040, label %originalBBpart2811, label %originalBB795alteredBB

originalBBpart2811:                               ; preds = %originalBB795
  br label %3041, !dbg !2799

3041:                                             ; preds = %originalBBpart2811, %3012
  %3042 = load i32, i32* @x.37
  %3043 = load i32, i32* @y.38
  %3044 = sub i32 %3042, 1
  %3045 = mul i32 %3042, %3044
  %3046 = urem i32 %3045, 2
  %3047 = icmp eq i32 %3046, 0
  %3048 = icmp slt i32 %3043, 10
  %3049 = or i1 %3047, %3048
  br i1 %3049, label %originalBB813, label %originalBB813alteredBB

originalBB813:                                    ; preds = %3041, %originalBB813alteredBB
  %3050 = load i64, i64* %29, align 8, !dbg !2802
  %3051 = add i64 %3050, 1, !dbg !2802
  store i64 %3051, i64* %29, align 8, !dbg !2802
  %3052 = load i32, i32* @x.37
  %3053 = load i32, i32* @y.38
  %3054 = sub i32 %3052, 1
  %3055 = mul i32 %3052, %3054
  %3056 = urem i32 %3055, 2
  %3057 = icmp eq i32 %3056, 0
  %3058 = icmp slt i32 %3053, 10
  %3059 = or i1 %3057, %3058
  br i1 %3059, label %originalBBpart2820, label %originalBB813alteredBB

originalBBpart2820:                               ; preds = %originalBB813
  br label %3060, !dbg !2802

3060:                                             ; preds = %originalBBpart2820
  %3061 = load i32, i32* @x.37
  %3062 = load i32, i32* @y.38
  %3063 = sub i32 %3061, 1
  %3064 = mul i32 %3061, %3063
  %3065 = urem i32 %3064, 2
  %3066 = icmp eq i32 %3065, 0
  %3067 = icmp slt i32 %3062, 10
  %3068 = or i1 %3066, %3067
  br i1 %3068, label %originalBB822, label %originalBB822alteredBB

originalBB822:                                    ; preds = %3060, %originalBB822alteredBB
  %3069 = load i32, i32* @x.37
  %3070 = load i32, i32* @y.38
  %3071 = sub i32 %3069, 1
  %3072 = mul i32 %3069, %3071
  %3073 = urem i32 %3072, 2
  %3074 = icmp eq i32 %3073, 0
  %3075 = icmp slt i32 %3070, 10
  %3076 = or i1 %3074, %3075
  br i1 %3076, label %originalBBpart2824, label %originalBB822alteredBB

originalBBpart2824:                               ; preds = %originalBB822
  br label %3077, !dbg !2803

3077:                                             ; preds = %originalBBpart2824
  %3078 = load i32, i32* @x.37
  %3079 = load i32, i32* @y.38
  %3080 = sub i32 %3078, 1
  %3081 = mul i32 %3078, %3080
  %3082 = urem i32 %3081, 2
  %3083 = icmp eq i32 %3082, 0
  %3084 = icmp slt i32 %3079, 10
  %3085 = or i1 %3083, %3084
  br i1 %3085, label %originalBB826, label %originalBB826alteredBB

originalBB826:                                    ; preds = %3077, %originalBB826alteredBB
  %3086 = load i64, i64* %29, align 8, !dbg !2804
  %3087 = load i64, i64* %20, align 8, !dbg !2804
  %3088 = icmp ult i64 %3086, %3087, !dbg !2804
  %3089 = load i32, i32* @x.37
  %3090 = load i32, i32* @y.38
  %3091 = sub i32 %3089, 1
  %3092 = mul i32 %3089, %3091
  %3093 = urem i32 %3092, 2
  %3094 = icmp eq i32 %3093, 0
  %3095 = icmp slt i32 %3090, 10
  %3096 = or i1 %3094, %3095
  br i1 %3096, label %originalBBpart2828, label %originalBB826alteredBB

originalBBpart2828:                               ; preds = %originalBB826
  br i1 %3088, label %3097, label %3123, !dbg !2807

3097:                                             ; preds = %originalBBpart2828
  %3098 = load i32, i32* @x.37
  %3099 = load i32, i32* @y.38
  %3100 = sub i32 %3098, 1
  %3101 = mul i32 %3098, %3100
  %3102 = urem i32 %3101, 2
  %3103 = icmp eq i32 %3102, 0
  %3104 = icmp slt i32 %3099, 10
  %3105 = or i1 %3103, %3104
  br i1 %3105, label %originalBB830, label %originalBB830alteredBB

originalBB830:                                    ; preds = %3097, %originalBB830alteredBB
  %3106 = load i8, i8* %39, align 1, !dbg !2804
  %3107 = zext i8 %3106 to i32, !dbg !2804
  %3108 = ashr i32 %3107, 3, !dbg !2804
  %3109 = and i32 %3108, 7, !dbg !2804
  %3110 = add nsw i32 48, %3109, !dbg !2804
  %3111 = trunc i32 %3110 to i8, !dbg !2804
  %3112 = load i8*, i8** %19, align 8, !dbg !2804
  %3113 = load i64, i64* %29, align 8, !dbg !2804
  %3114 = getelementptr inbounds i8, i8* %3112, i64 %3113, !dbg !2804
  store i8 %3111, i8* %3114, align 1, !dbg !2804
  %3115 = load i32, i32* @x.37
  %3116 = load i32, i32* @y.38
  %3117 = sub i32 %3115, 1
  %3118 = mul i32 %3115, %3117
  %3119 = urem i32 %3118, 2
  %3120 = icmp eq i32 %3119, 0
  %3121 = icmp slt i32 %3116, 10
  %3122 = or i1 %3120, %3121
  br i1 %3122, label %originalBBpart2850, label %originalBB830alteredBB

originalBBpart2850:                               ; preds = %originalBB830
  br label %3123, !dbg !2804

3123:                                             ; preds = %originalBBpart2850, %originalBBpart2828
  %3124 = load i32, i32* @x.37
  %3125 = load i32, i32* @y.38
  %3126 = sub i32 %3124, 1
  %3127 = mul i32 %3124, %3126
  %3128 = urem i32 %3127, 2
  %3129 = icmp eq i32 %3128, 0
  %3130 = icmp slt i32 %3125, 10
  %3131 = or i1 %3129, %3130
  br i1 %3131, label %originalBB852, label %originalBB852alteredBB

originalBB852:                                    ; preds = %3123, %originalBB852alteredBB
  %3132 = load i64, i64* %29, align 8, !dbg !2807
  %3133 = add i64 %3132, 1, !dbg !2807
  store i64 %3133, i64* %29, align 8, !dbg !2807
  %3134 = load i32, i32* @x.37
  %3135 = load i32, i32* @y.38
  %3136 = sub i32 %3134, 1
  %3137 = mul i32 %3134, %3136
  %3138 = urem i32 %3137, 2
  %3139 = icmp eq i32 %3138, 0
  %3140 = icmp slt i32 %3135, 10
  %3141 = or i1 %3139, %3140
  br i1 %3141, label %originalBBpart2854, label %originalBB852alteredBB

originalBBpart2854:                               ; preds = %originalBB852
  br label %3142, !dbg !2807

3142:                                             ; preds = %originalBBpart2854
  %3143 = load i8, i8* %39, align 1, !dbg !2808
  %3144 = zext i8 %3143 to i32, !dbg !2808
  %3145 = and i32 %3144, 7, !dbg !2809
  %3146 = add nsw i32 48, %3145, !dbg !2810
  %3147 = trunc i32 %3146 to i8, !dbg !2811
  store i8 %3147, i8* %39, align 1, !dbg !2812
  br label %3261, !dbg !2813

3148:                                             ; preds = %originalBBpart2745, %originalBBpart2741
  %3149 = load i32, i32* @x.37
  %3150 = load i32, i32* @y.38
  %3151 = sub i32 %3149, 1
  %3152 = mul i32 %3149, %3151
  %3153 = urem i32 %3152, 2
  %3154 = icmp eq i32 %3153, 0
  %3155 = icmp slt i32 %3150, 10
  %3156 = or i1 %3154, %3155
  br i1 %3156, label %originalBB856, label %originalBB856alteredBB

originalBB856:                                    ; preds = %3148, %originalBB856alteredBB
  %3157 = load i8, i8* %41, align 1, !dbg !2814
  %3158 = trunc i8 %3157 to i1, !dbg !2814
  %3159 = load i32, i32* @x.37
  %3160 = load i32, i32* @y.38
  %3161 = sub i32 %3159, 1
  %3162 = mul i32 %3159, %3161
  %3163 = urem i32 %3162, 2
  %3164 = icmp eq i32 %3163, 0
  %3165 = icmp slt i32 %3160, 10
  %3166 = or i1 %3164, %3165
  br i1 %3166, label %originalBBpart2858, label %originalBB856alteredBB

originalBBpart2858:                               ; preds = %originalBB856
  br i1 %3158, label %3167, label %3244, !dbg !2816

3167:                                             ; preds = %originalBBpart2858
  %3168 = load i32, i32* @x.37
  %3169 = load i32, i32* @y.38
  %3170 = sub i32 %3168, 1
  %3171 = mul i32 %3168, %3170
  %3172 = urem i32 %3171, 2
  %3173 = icmp eq i32 %3172, 0
  %3174 = icmp slt i32 %3169, 10
  %3175 = or i1 %3173, %3174
  br i1 %3175, label %originalBB860, label %originalBB860alteredBB

originalBB860:                                    ; preds = %3167, %originalBB860alteredBB
  %3176 = load i32, i32* @x.37
  %3177 = load i32, i32* @y.38
  %3178 = sub i32 %3176, 1
  %3179 = mul i32 %3176, %3178
  %3180 = urem i32 %3179, 2
  %3181 = icmp eq i32 %3180, 0
  %3182 = icmp slt i32 %3177, 10
  %3183 = or i1 %3181, %3182
  br i1 %3183, label %originalBBpart2862, label %originalBB860alteredBB

originalBBpart2862:                               ; preds = %originalBB860
  br label %3184, !dbg !2817

3184:                                             ; preds = %originalBBpart2862
  %3185 = load i32, i32* @x.37
  %3186 = load i32, i32* @y.38
  %3187 = sub i32 %3185, 1
  %3188 = mul i32 %3185, %3187
  %3189 = urem i32 %3188, 2
  %3190 = icmp eq i32 %3189, 0
  %3191 = icmp slt i32 %3186, 10
  %3192 = or i1 %3190, %3191
  br i1 %3192, label %originalBB864, label %originalBB864alteredBB

originalBB864:                                    ; preds = %3184, %originalBB864alteredBB
  %3193 = load i64, i64* %29, align 8, !dbg !2819
  %3194 = load i64, i64* %20, align 8, !dbg !2819
  %3195 = icmp ult i64 %3193, %3194, !dbg !2819
  %3196 = load i32, i32* @x.37
  %3197 = load i32, i32* @y.38
  %3198 = sub i32 %3196, 1
  %3199 = mul i32 %3196, %3198
  %3200 = urem i32 %3199, 2
  %3201 = icmp eq i32 %3200, 0
  %3202 = icmp slt i32 %3197, 10
  %3203 = or i1 %3201, %3202
  br i1 %3203, label %originalBBpart2866, label %originalBB864alteredBB

originalBBpart2866:                               ; preds = %originalBB864
  br i1 %3195, label %3204, label %3208, !dbg !2822

3204:                                             ; preds = %originalBBpart2866
  %3205 = load i8*, i8** %19, align 8, !dbg !2819
  %3206 = load i64, i64* %29, align 8, !dbg !2819
  %3207 = getelementptr inbounds i8, i8* %3205, i64 %3206, !dbg !2819
  store i8 92, i8* %3207, align 1, !dbg !2819
  br label %3208, !dbg !2819

3208:                                             ; preds = %3204, %originalBBpart2866
  %3209 = load i32, i32* @x.37
  %3210 = load i32, i32* @y.38
  %3211 = sub i32 %3209, 1
  %3212 = mul i32 %3209, %3211
  %3213 = urem i32 %3212, 2
  %3214 = icmp eq i32 %3213, 0
  %3215 = icmp slt i32 %3210, 10
  %3216 = or i1 %3214, %3215
  br i1 %3216, label %originalBB868, label %originalBB868alteredBB

originalBB868:                                    ; preds = %3208, %originalBB868alteredBB
  %3217 = load i64, i64* %29, align 8, !dbg !2822
  %3218 = add i64 %3217, 1, !dbg !2822
  store i64 %3218, i64* %29, align 8, !dbg !2822
  %3219 = load i32, i32* @x.37
  %3220 = load i32, i32* @y.38
  %3221 = sub i32 %3219, 1
  %3222 = mul i32 %3219, %3221
  %3223 = urem i32 %3222, 2
  %3224 = icmp eq i32 %3223, 0
  %3225 = icmp slt i32 %3220, 10
  %3226 = or i1 %3224, %3225
  br i1 %3226, label %originalBBpart2872, label %originalBB868alteredBB

originalBBpart2872:                               ; preds = %originalBB868
  br label %3227, !dbg !2822

3227:                                             ; preds = %originalBBpart2872
  %3228 = load i32, i32* @x.37
  %3229 = load i32, i32* @y.38
  %3230 = sub i32 %3228, 1
  %3231 = mul i32 %3228, %3230
  %3232 = urem i32 %3231, 2
  %3233 = icmp eq i32 %3232, 0
  %3234 = icmp slt i32 %3229, 10
  %3235 = or i1 %3233, %3234
  br i1 %3235, label %originalBB874, label %originalBB874alteredBB

originalBB874:                                    ; preds = %3227, %originalBB874alteredBB
  store i8 0, i8* %41, align 1, !dbg !2823
  %3236 = load i32, i32* @x.37
  %3237 = load i32, i32* @y.38
  %3238 = sub i32 %3236, 1
  %3239 = mul i32 %3236, %3238
  %3240 = urem i32 %3239, 2
  %3241 = icmp eq i32 %3240, 0
  %3242 = icmp slt i32 %3237, 10
  %3243 = or i1 %3241, %3242
  br i1 %3243, label %originalBBpart2876, label %originalBB874alteredBB

originalBBpart2876:                               ; preds = %originalBB874
  br label %3244, !dbg !2824

3244:                                             ; preds = %originalBBpart2876, %originalBBpart2858
  %3245 = load i32, i32* @x.37
  %3246 = load i32, i32* @y.38
  %3247 = sub i32 %3245, 1
  %3248 = mul i32 %3245, %3247
  %3249 = urem i32 %3248, 2
  %3250 = icmp eq i32 %3249, 0
  %3251 = icmp slt i32 %3246, 10
  %3252 = or i1 %3250, %3251
  br i1 %3252, label %originalBB878, label %originalBB878alteredBB

originalBB878:                                    ; preds = %3244, %originalBB878alteredBB
  %3253 = load i32, i32* @x.37
  %3254 = load i32, i32* @y.38
  %3255 = sub i32 %3253, 1
  %3256 = mul i32 %3253, %3255
  %3257 = urem i32 %3256, 2
  %3258 = icmp eq i32 %3257, 0
  %3259 = icmp slt i32 %3254, 10
  %3260 = or i1 %3258, %3259
  br i1 %3260, label %originalBBpart2880, label %originalBB878alteredBB

originalBBpart2880:                               ; preds = %originalBB878
  br label %3261

3261:                                             ; preds = %originalBBpart2880, %3142
  %3262 = load i32, i32* @x.37
  %3263 = load i32, i32* @y.38
  %3264 = sub i32 %3262, 1
  %3265 = mul i32 %3262, %3264
  %3266 = urem i32 %3265, 2
  %3267 = icmp eq i32 %3266, 0
  %3268 = icmp slt i32 %3263, 10
  %3269 = or i1 %3267, %3268
  br i1 %3269, label %originalBB882, label %originalBB882alteredBB

originalBB882:                                    ; preds = %3261, %originalBB882alteredBB
  %3270 = load i64, i64* %50, align 8, !dbg !2825
  %3271 = load i64, i64* %28, align 8, !dbg !2827
  %3272 = add i64 %3271, 1, !dbg !2828
  %3273 = icmp ule i64 %3270, %3272, !dbg !2829
  %3274 = load i32, i32* @x.37
  %3275 = load i32, i32* @y.38
  %3276 = sub i32 %3274, 1
  %3277 = mul i32 %3274, %3276
  %3278 = urem i32 %3277, 2
  %3279 = icmp eq i32 %3278, 0
  %3280 = icmp slt i32 %3275, 10
  %3281 = or i1 %3279, %3280
  br i1 %3281, label %originalBBpart2886, label %originalBB882alteredBB

originalBBpart2886:                               ; preds = %originalBB882
  br i1 %3273, label %3282, label %3299, !dbg !2830

3282:                                             ; preds = %originalBBpart2886
  %3283 = load i32, i32* @x.37
  %3284 = load i32, i32* @y.38
  %3285 = sub i32 %3283, 1
  %3286 = mul i32 %3283, %3285
  %3287 = urem i32 %3286, 2
  %3288 = icmp eq i32 %3287, 0
  %3289 = icmp slt i32 %3284, 10
  %3290 = or i1 %3288, %3289
  br i1 %3290, label %originalBB888, label %originalBB888alteredBB

originalBB888:                                    ; preds = %3282, %originalBB888alteredBB
  %3291 = load i32, i32* @x.37
  %3292 = load i32, i32* @y.38
  %3293 = sub i32 %3291, 1
  %3294 = mul i32 %3291, %3293
  %3295 = urem i32 %3294, 2
  %3296 = icmp eq i32 %3295, 0
  %3297 = icmp slt i32 %3292, 10
  %3298 = or i1 %3296, %3297
  br i1 %3298, label %originalBBpart2890, label %originalBB888alteredBB

originalBBpart2890:                               ; preds = %originalBB888
  br label %3559, !dbg !2831

3299:                                             ; preds = %originalBBpart2886
  %3300 = load i32, i32* @x.37
  %3301 = load i32, i32* @y.38
  %3302 = sub i32 %3300, 1
  %3303 = mul i32 %3300, %3302
  %3304 = urem i32 %3303, 2
  %3305 = icmp eq i32 %3304, 0
  %3306 = icmp slt i32 %3301, 10
  %3307 = or i1 %3305, %3306
  br i1 %3307, label %originalBB892, label %originalBB892alteredBB

originalBB892:                                    ; preds = %3299, %originalBB892alteredBB
  %3308 = load i32, i32* @x.37
  %3309 = load i32, i32* @y.38
  %3310 = sub i32 %3308, 1
  %3311 = mul i32 %3308, %3310
  %3312 = urem i32 %3311, 2
  %3313 = icmp eq i32 %3312, 0
  %3314 = icmp slt i32 %3309, 10
  %3315 = or i1 %3313, %3314
  br i1 %3315, label %originalBBpart2894, label %originalBB892alteredBB

originalBBpart2894:                               ; preds = %originalBB892
  br label %3316, !dbg !2832

3316:                                             ; preds = %originalBBpart2894
  %3317 = load i32, i32* @x.37
  %3318 = load i32, i32* @y.38
  %3319 = sub i32 %3317, 1
  %3320 = mul i32 %3317, %3319
  %3321 = urem i32 %3320, 2
  %3322 = icmp eq i32 %3321, 0
  %3323 = icmp slt i32 %3318, 10
  %3324 = or i1 %3322, %3323
  br i1 %3324, label %originalBB896, label %originalBB896alteredBB

originalBB896:                                    ; preds = %3316, %originalBB896alteredBB
  %3325 = load i8, i8* %36, align 1, !dbg !2833
  %3326 = trunc i8 %3325 to i1, !dbg !2833
  %3327 = load i32, i32* @x.37
  %3328 = load i32, i32* @y.38
  %3329 = sub i32 %3327, 1
  %3330 = mul i32 %3327, %3329
  %3331 = urem i32 %3330, 2
  %3332 = icmp eq i32 %3331, 0
  %3333 = icmp slt i32 %3328, 10
  %3334 = or i1 %3332, %3333
  br i1 %3334, label %originalBBpart2898, label %originalBB896alteredBB

originalBBpart2898:                               ; preds = %originalBB896
  br i1 %3326, label %3335, label %3475, !dbg !2833

3335:                                             ; preds = %originalBBpart2898
  %3336 = load i32, i32* @x.37
  %3337 = load i32, i32* @y.38
  %3338 = sub i32 %3336, 1
  %3339 = mul i32 %3336, %3338
  %3340 = urem i32 %3339, 2
  %3341 = icmp eq i32 %3340, 0
  %3342 = icmp slt i32 %3337, 10
  %3343 = or i1 %3341, %3342
  br i1 %3343, label %originalBB900, label %originalBB900alteredBB

originalBB900:                                    ; preds = %3335, %originalBB900alteredBB
  %3344 = load i8, i8* %42, align 1, !dbg !2833
  %3345 = trunc i8 %3344 to i1, !dbg !2833
  %3346 = load i32, i32* @x.37
  %3347 = load i32, i32* @y.38
  %3348 = sub i32 %3346, 1
  %3349 = mul i32 %3346, %3348
  %3350 = urem i32 %3349, 2
  %3351 = icmp eq i32 %3350, 0
  %3352 = icmp slt i32 %3347, 10
  %3353 = or i1 %3351, %3352
  br i1 %3353, label %originalBBpart2902, label %originalBB900alteredBB

originalBBpart2902:                               ; preds = %originalBB900
  br i1 %3345, label %3475, label %3354, !dbg !2836

3354:                                             ; preds = %originalBBpart2902
  %3355 = load i32, i32* @x.37
  %3356 = load i32, i32* @y.38
  %3357 = sub i32 %3355, 1
  %3358 = mul i32 %3355, %3357
  %3359 = urem i32 %3358, 2
  %3360 = icmp eq i32 %3359, 0
  %3361 = icmp slt i32 %3356, 10
  %3362 = or i1 %3360, %3361
  br i1 %3362, label %originalBB904, label %originalBB904alteredBB

originalBB904:                                    ; preds = %3354, %originalBB904alteredBB
  %3363 = load i32, i32* @x.37
  %3364 = load i32, i32* @y.38
  %3365 = sub i32 %3363, 1
  %3366 = mul i32 %3363, %3365
  %3367 = urem i32 %3366, 2
  %3368 = icmp eq i32 %3367, 0
  %3369 = icmp slt i32 %3364, 10
  %3370 = or i1 %3368, %3369
  br i1 %3370, label %originalBBpart2906, label %originalBB904alteredBB

originalBBpart2906:                               ; preds = %originalBB904
  br label %3371, !dbg !2837

3371:                                             ; preds = %originalBBpart2906
  %3372 = load i32, i32* @x.37
  %3373 = load i32, i32* @y.38
  %3374 = sub i32 %3372, 1
  %3375 = mul i32 %3372, %3374
  %3376 = urem i32 %3375, 2
  %3377 = icmp eq i32 %3376, 0
  %3378 = icmp slt i32 %3373, 10
  %3379 = or i1 %3377, %3378
  br i1 %3379, label %originalBB908, label %originalBB908alteredBB

originalBB908:                                    ; preds = %3371, %originalBB908alteredBB
  %3380 = load i64, i64* %29, align 8, !dbg !2839
  %3381 = load i64, i64* %20, align 8, !dbg !2839
  %3382 = icmp ult i64 %3380, %3381, !dbg !2839
  %3383 = load i32, i32* @x.37
  %3384 = load i32, i32* @y.38
  %3385 = sub i32 %3383, 1
  %3386 = mul i32 %3383, %3385
  %3387 = urem i32 %3386, 2
  %3388 = icmp eq i32 %3387, 0
  %3389 = icmp slt i32 %3384, 10
  %3390 = or i1 %3388, %3389
  br i1 %3390, label %originalBBpart2910, label %originalBB908alteredBB

originalBBpart2910:                               ; preds = %originalBB908
  br i1 %3382, label %3391, label %3411, !dbg !2842

3391:                                             ; preds = %originalBBpart2910
  %3392 = load i32, i32* @x.37
  %3393 = load i32, i32* @y.38
  %3394 = sub i32 %3392, 1
  %3395 = mul i32 %3392, %3394
  %3396 = urem i32 %3395, 2
  %3397 = icmp eq i32 %3396, 0
  %3398 = icmp slt i32 %3393, 10
  %3399 = or i1 %3397, %3398
  br i1 %3399, label %originalBB912, label %originalBB912alteredBB

originalBB912:                                    ; preds = %3391, %originalBB912alteredBB
  %3400 = load i8*, i8** %19, align 8, !dbg !2839
  %3401 = load i64, i64* %29, align 8, !dbg !2839
  %3402 = getelementptr inbounds i8, i8* %3400, i64 %3401, !dbg !2839
  store i8 39, i8* %3402, align 1, !dbg !2839
  %3403 = load i32, i32* @x.37
  %3404 = load i32, i32* @y.38
  %3405 = sub i32 %3403, 1
  %3406 = mul i32 %3403, %3405
  %3407 = urem i32 %3406, 2
  %3408 = icmp eq i32 %3407, 0
  %3409 = icmp slt i32 %3404, 10
  %3410 = or i1 %3408, %3409
  br i1 %3410, label %originalBBpart2914, label %originalBB912alteredBB

originalBBpart2914:                               ; preds = %originalBB912
  br label %3411, !dbg !2839

3411:                                             ; preds = %originalBBpart2914, %originalBBpart2910
  %3412 = load i64, i64* %29, align 8, !dbg !2842
  %3413 = add i64 %3412, 1, !dbg !2842
  store i64 %3413, i64* %29, align 8, !dbg !2842
  br label %3414, !dbg !2842

3414:                                             ; preds = %3411
  %3415 = load i32, i32* @x.37
  %3416 = load i32, i32* @y.38
  %3417 = sub i32 %3415, 1
  %3418 = mul i32 %3415, %3417
  %3419 = urem i32 %3418, 2
  %3420 = icmp eq i32 %3419, 0
  %3421 = icmp slt i32 %3416, 10
  %3422 = or i1 %3420, %3421
  br i1 %3422, label %originalBB916, label %originalBB916alteredBB

originalBB916:                                    ; preds = %3414, %originalBB916alteredBB
  %3423 = load i32, i32* @x.37
  %3424 = load i32, i32* @y.38
  %3425 = sub i32 %3423, 1
  %3426 = mul i32 %3423, %3425
  %3427 = urem i32 %3426, 2
  %3428 = icmp eq i32 %3427, 0
  %3429 = icmp slt i32 %3424, 10
  %3430 = or i1 %3428, %3429
  br i1 %3430, label %originalBBpart2918, label %originalBB916alteredBB

originalBBpart2918:                               ; preds = %originalBB916
  br label %3431, !dbg !2837

3431:                                             ; preds = %originalBBpart2918
  %3432 = load i32, i32* @x.37
  %3433 = load i32, i32* @y.38
  %3434 = sub i32 %3432, 1
  %3435 = mul i32 %3432, %3434
  %3436 = urem i32 %3435, 2
  %3437 = icmp eq i32 %3436, 0
  %3438 = icmp slt i32 %3433, 10
  %3439 = or i1 %3437, %3438
  br i1 %3439, label %originalBB920, label %originalBB920alteredBB

originalBB920:                                    ; preds = %3431, %originalBB920alteredBB
  %3440 = load i64, i64* %29, align 8, !dbg !2843
  %3441 = load i64, i64* %20, align 8, !dbg !2843
  %3442 = icmp ult i64 %3440, %3441, !dbg !2843
  %3443 = load i32, i32* @x.37
  %3444 = load i32, i32* @y.38
  %3445 = sub i32 %3443, 1
  %3446 = mul i32 %3443, %3445
  %3447 = urem i32 %3446, 2
  %3448 = icmp eq i32 %3447, 0
  %3449 = icmp slt i32 %3444, 10
  %3450 = or i1 %3448, %3449
  br i1 %3450, label %originalBBpart2922, label %originalBB920alteredBB

originalBBpart2922:                               ; preds = %originalBB920
  br i1 %3442, label %3451, label %3471, !dbg !2846

3451:                                             ; preds = %originalBBpart2922
  %3452 = load i32, i32* @x.37
  %3453 = load i32, i32* @y.38
  %3454 = sub i32 %3452, 1
  %3455 = mul i32 %3452, %3454
  %3456 = urem i32 %3455, 2
  %3457 = icmp eq i32 %3456, 0
  %3458 = icmp slt i32 %3453, 10
  %3459 = or i1 %3457, %3458
  br i1 %3459, label %originalBB924, label %originalBB924alteredBB

originalBB924:                                    ; preds = %3451, %originalBB924alteredBB
  %3460 = load i8*, i8** %19, align 8, !dbg !2843
  %3461 = load i64, i64* %29, align 8, !dbg !2843
  %3462 = getelementptr inbounds i8, i8* %3460, i64 %3461, !dbg !2843
  store i8 39, i8* %3462, align 1, !dbg !2843
  %3463 = load i32, i32* @x.37
  %3464 = load i32, i32* @y.38
  %3465 = sub i32 %3463, 1
  %3466 = mul i32 %3463, %3465
  %3467 = urem i32 %3466, 2
  %3468 = icmp eq i32 %3467, 0
  %3469 = icmp slt i32 %3464, 10
  %3470 = or i1 %3468, %3469
  br i1 %3470, label %originalBBpart2926, label %originalBB924alteredBB

originalBBpart2926:                               ; preds = %originalBB924
  br label %3471, !dbg !2843

3471:                                             ; preds = %originalBBpart2926, %originalBBpart2922
  %3472 = load i64, i64* %29, align 8, !dbg !2846
  %3473 = add i64 %3472, 1, !dbg !2846
  store i64 %3473, i64* %29, align 8, !dbg !2846
  br label %3474, !dbg !2846

3474:                                             ; preds = %3471
  store i8 0, i8* %36, align 1, !dbg !2837
  br label %3475, !dbg !2837

3475:                                             ; preds = %3474, %originalBBpart2902, %originalBBpart2898
  %3476 = load i32, i32* @x.37
  %3477 = load i32, i32* @y.38
  %3478 = sub i32 %3476, 1
  %3479 = mul i32 %3476, %3478
  %3480 = urem i32 %3479, 2
  %3481 = icmp eq i32 %3480, 0
  %3482 = icmp slt i32 %3477, 10
  %3483 = or i1 %3481, %3482
  br i1 %3483, label %originalBB928, label %originalBB928alteredBB

originalBB928:                                    ; preds = %3475, %originalBB928alteredBB
  %3484 = load i32, i32* @x.37
  %3485 = load i32, i32* @y.38
  %3486 = sub i32 %3484, 1
  %3487 = mul i32 %3484, %3486
  %3488 = urem i32 %3487, 2
  %3489 = icmp eq i32 %3488, 0
  %3490 = icmp slt i32 %3485, 10
  %3491 = or i1 %3489, %3490
  br i1 %3491, label %originalBBpart2930, label %originalBB928alteredBB

originalBBpart2930:                               ; preds = %originalBB928
  br label %3492, !dbg !2836

3492:                                             ; preds = %originalBBpart2930
  %3493 = load i32, i32* @x.37
  %3494 = load i32, i32* @y.38
  %3495 = sub i32 %3493, 1
  %3496 = mul i32 %3493, %3495
  %3497 = urem i32 %3496, 2
  %3498 = icmp eq i32 %3497, 0
  %3499 = icmp slt i32 %3494, 10
  %3500 = or i1 %3498, %3499
  br i1 %3500, label %originalBB932, label %originalBB932alteredBB

originalBB932:                                    ; preds = %3492, %originalBB932alteredBB
  %3501 = load i32, i32* @x.37
  %3502 = load i32, i32* @y.38
  %3503 = sub i32 %3501, 1
  %3504 = mul i32 %3501, %3503
  %3505 = urem i32 %3504, 2
  %3506 = icmp eq i32 %3505, 0
  %3507 = icmp slt i32 %3502, 10
  %3508 = or i1 %3506, %3507
  br i1 %3508, label %originalBBpart2934, label %originalBB932alteredBB

originalBBpart2934:                               ; preds = %originalBB932
  br label %3509, !dbg !2847

3509:                                             ; preds = %originalBBpart2934
  %3510 = load i64, i64* %29, align 8, !dbg !2848
  %3511 = load i64, i64* %20, align 8, !dbg !2848
  %3512 = icmp ult i64 %3510, %3511, !dbg !2848
  br i1 %3512, label %3513, label %3518, !dbg !2851

3513:                                             ; preds = %3509
  %3514 = load i8, i8* %39, align 1, !dbg !2848
  %3515 = load i8*, i8** %19, align 8, !dbg !2848
  %3516 = load i64, i64* %29, align 8, !dbg !2848
  %3517 = getelementptr inbounds i8, i8* %3515, i64 %3516, !dbg !2848
  store i8 %3514, i8* %3517, align 1, !dbg !2848
  br label %3518, !dbg !2848

3518:                                             ; preds = %3513, %3509
  %3519 = load i32, i32* @x.37
  %3520 = load i32, i32* @y.38
  %3521 = sub i32 %3519, 1
  %3522 = mul i32 %3519, %3521
  %3523 = urem i32 %3522, 2
  %3524 = icmp eq i32 %3523, 0
  %3525 = icmp slt i32 %3520, 10
  %3526 = or i1 %3524, %3525
  br i1 %3526, label %originalBB936, label %originalBB936alteredBB

originalBB936:                                    ; preds = %3518, %originalBB936alteredBB
  %3527 = load i64, i64* %29, align 8, !dbg !2851
  %3528 = add i64 %3527, 1, !dbg !2851
  store i64 %3528, i64* %29, align 8, !dbg !2851
  %3529 = load i32, i32* @x.37
  %3530 = load i32, i32* @y.38
  %3531 = sub i32 %3529, 1
  %3532 = mul i32 %3529, %3531
  %3533 = urem i32 %3532, 2
  %3534 = icmp eq i32 %3533, 0
  %3535 = icmp slt i32 %3530, 10
  %3536 = or i1 %3534, %3535
  br i1 %3536, label %originalBBpart2947, label %originalBB936alteredBB

originalBBpart2947:                               ; preds = %originalBB936
  br label %3537, !dbg !2851

3537:                                             ; preds = %originalBBpart2947
  %3538 = load i32, i32* @x.37
  %3539 = load i32, i32* @y.38
  %3540 = sub i32 %3538, 1
  %3541 = mul i32 %3538, %3540
  %3542 = urem i32 %3541, 2
  %3543 = icmp eq i32 %3542, 0
  %3544 = icmp slt i32 %3539, 10
  %3545 = or i1 %3543, %3544
  br i1 %3545, label %originalBB949, label %originalBB949alteredBB

originalBB949:                                    ; preds = %3537, %originalBB949alteredBB
  %3546 = load i8*, i8** %21, align 8, !dbg !2852
  %3547 = load i64, i64* %28, align 8, !dbg !2853
  %3548 = add i64 %3547, 1, !dbg !2853
  store i64 %3548, i64* %28, align 8, !dbg !2853
  %3549 = getelementptr inbounds i8, i8* %3546, i64 %3548, !dbg !2852
  %3550 = load i8, i8* %3549, align 1, !dbg !2852
  store i8 %3550, i8* %39, align 1, !dbg !2854
  %3551 = load i32, i32* @x.37
  %3552 = load i32, i32* @y.38
  %3553 = sub i32 %3551, 1
  %3554 = mul i32 %3551, %3553
  %3555 = urem i32 %3554, 2
  %3556 = icmp eq i32 %3555, 0
  %3557 = icmp slt i32 %3552, 10
  %3558 = or i1 %3556, %3557
  br i1 %3558, label %originalBBpart2959, label %originalBB949alteredBB

originalBBpart2959:                               ; preds = %originalBB949
  br label %2720, !dbg !2855, !llvm.loop !2856

3559:                                             ; preds = %originalBBpart2890
  %3560 = load i32, i32* @x.37
  %3561 = load i32, i32* @y.38
  %3562 = sub i32 %3560, 1
  %3563 = mul i32 %3560, %3562
  %3564 = urem i32 %3563, 2
  %3565 = icmp eq i32 %3564, 0
  %3566 = icmp slt i32 %3561, 10
  %3567 = or i1 %3565, %3566
  br i1 %3567, label %originalBB961, label %originalBB961alteredBB

originalBB961:                                    ; preds = %3559, %originalBB961alteredBB
  %3568 = load i32, i32* @x.37
  %3569 = load i32, i32* @y.38
  %3570 = sub i32 %3568, 1
  %3571 = mul i32 %3568, %3570
  %3572 = urem i32 %3571, 2
  %3573 = icmp eq i32 %3572, 0
  %3574 = icmp slt i32 %3569, 10
  %3575 = or i1 %3573, %3574
  br i1 %3575, label %originalBBpart2963, label %originalBB961alteredBB

originalBBpart2963:                               ; preds = %originalBB961
  br label %4006, !dbg !2859

3576:                                             ; preds = %2697, %originalBBpart2731
  %3577 = load i32, i32* @x.37
  %3578 = load i32, i32* @y.38
  %3579 = sub i32 %3577, 1
  %3580 = mul i32 %3577, %3579
  %3581 = urem i32 %3580, 2
  %3582 = icmp eq i32 %3581, 0
  %3583 = icmp slt i32 %3578, 10
  %3584 = or i1 %3582, %3583
  br i1 %3584, label %originalBB965, label %originalBB965alteredBB

originalBB965:                                    ; preds = %3576, %originalBB965alteredBB
  %3585 = load i32, i32* @x.37
  %3586 = load i32, i32* @y.38
  %3587 = sub i32 %3585, 1
  %3588 = mul i32 %3585, %3587
  %3589 = urem i32 %3588, 2
  %3590 = icmp eq i32 %3589, 0
  %3591 = icmp slt i32 %3586, 10
  %3592 = or i1 %3590, %3591
  br i1 %3592, label %originalBBpart2967, label %originalBB965alteredBB

originalBBpart2967:                               ; preds = %originalBB965
  br label %3593, !dbg !2860

3593:                                             ; preds = %originalBBpart2967, %originalBBpart2571, %2174, %1977, %originalBBpart2513, %originalBBpart2509, %originalBBpart2501, %originalBBpart2453, %1204
  %3594 = load i32, i32* @x.37
  %3595 = load i32, i32* @y.38
  %3596 = sub i32 %3594, 1
  %3597 = mul i32 %3594, %3596
  %3598 = urem i32 %3597, 2
  %3599 = icmp eq i32 %3598, 0
  %3600 = icmp slt i32 %3595, 10
  %3601 = or i1 %3599, %3600
  br i1 %3601, label %originalBB969, label %originalBB969alteredBB

originalBB969:                                    ; preds = %3593, %originalBB969alteredBB
  %3602 = load i8, i8* %33, align 1, !dbg !2861
  %3603 = trunc i8 %3602 to i1, !dbg !2861
  %3604 = load i32, i32* @x.37
  %3605 = load i32, i32* @y.38
  %3606 = sub i32 %3604, 1
  %3607 = mul i32 %3604, %3606
  %3608 = urem i32 %3607, 2
  %3609 = icmp eq i32 %3608, 0
  %3610 = icmp slt i32 %3605, 10
  %3611 = or i1 %3609, %3610
  br i1 %3611, label %originalBBpart2971, label %originalBB969alteredBB

originalBBpart2971:                               ; preds = %originalBB969
  br i1 %3603, label %3612, label %3631, !dbg !2863

3612:                                             ; preds = %originalBBpart2971
  %3613 = load i32, i32* @x.37
  %3614 = load i32, i32* @y.38
  %3615 = sub i32 %3613, 1
  %3616 = mul i32 %3613, %3615
  %3617 = urem i32 %3616, 2
  %3618 = icmp eq i32 %3617, 0
  %3619 = icmp slt i32 %3614, 10
  %3620 = or i1 %3618, %3619
  br i1 %3620, label %originalBB973, label %originalBB973alteredBB

originalBB973:                                    ; preds = %3612, %originalBB973alteredBB
  %3621 = load i32, i32* %23, align 4, !dbg !2864
  %3622 = icmp ne i32 %3621, 2, !dbg !2865
  %3623 = load i32, i32* @x.37
  %3624 = load i32, i32* @y.38
  %3625 = sub i32 %3623, 1
  %3626 = mul i32 %3623, %3625
  %3627 = urem i32 %3626, 2
  %3628 = icmp eq i32 %3627, 0
  %3629 = icmp slt i32 %3624, 10
  %3630 = or i1 %3628, %3629
  br i1 %3630, label %originalBBpart2975, label %originalBB973alteredBB

originalBBpart2975:                               ; preds = %originalBB973
  br i1 %3622, label %3650, label %3631, !dbg !2866

3631:                                             ; preds = %originalBBpart2975, %originalBBpart2971
  %3632 = load i32, i32* @x.37
  %3633 = load i32, i32* @y.38
  %3634 = sub i32 %3632, 1
  %3635 = mul i32 %3632, %3634
  %3636 = urem i32 %3635, 2
  %3637 = icmp eq i32 %3636, 0
  %3638 = icmp slt i32 %3633, 10
  %3639 = or i1 %3637, %3638
  br i1 %3639, label %originalBB977, label %originalBB977alteredBB

originalBB977:                                    ; preds = %3631, %originalBB977alteredBB
  %3640 = load i8, i8* %35, align 1, !dbg !2867
  %3641 = trunc i8 %3640 to i1, !dbg !2867
  %3642 = load i32, i32* @x.37
  %3643 = load i32, i32* @y.38
  %3644 = sub i32 %3642, 1
  %3645 = mul i32 %3642, %3644
  %3646 = urem i32 %3645, 2
  %3647 = icmp eq i32 %3646, 0
  %3648 = icmp slt i32 %3643, 10
  %3649 = or i1 %3647, %3648
  br i1 %3649, label %originalBBpart2979, label %originalBB977alteredBB

originalBBpart2979:                               ; preds = %originalBB977
  br i1 %3641, label %3650, label %3699, !dbg !2868

3650:                                             ; preds = %originalBBpart2979, %originalBBpart2975
  %3651 = load i32, i32* @x.37
  %3652 = load i32, i32* @y.38
  %3653 = sub i32 %3651, 1
  %3654 = mul i32 %3651, %3653
  %3655 = urem i32 %3654, 2
  %3656 = icmp eq i32 %3655, 0
  %3657 = icmp slt i32 %3652, 10
  %3658 = or i1 %3656, %3657
  br i1 %3658, label %originalBB981, label %originalBB981alteredBB

originalBB981:                                    ; preds = %3650, %originalBB981alteredBB
  %3659 = load i32*, i32** %25, align 8, !dbg !2869
  %3660 = icmp ne i32* %3659, null, !dbg !2869
  %3661 = load i32, i32* @x.37
  %3662 = load i32, i32* @y.38
  %3663 = sub i32 %3661, 1
  %3664 = mul i32 %3661, %3663
  %3665 = urem i32 %3664, 2
  %3666 = icmp eq i32 %3665, 0
  %3667 = icmp slt i32 %3662, 10
  %3668 = or i1 %3666, %3667
  br i1 %3668, label %originalBBpart2983, label %originalBB981alteredBB

originalBBpart2983:                               ; preds = %originalBB981
  br i1 %3660, label %3669, label %3699, !dbg !2870

3669:                                             ; preds = %originalBBpart2983
  %3670 = load i32, i32* @x.37
  %3671 = load i32, i32* @y.38
  %3672 = sub i32 %3670, 1
  %3673 = mul i32 %3670, %3672
  %3674 = urem i32 %3673, 2
  %3675 = icmp eq i32 %3674, 0
  %3676 = icmp slt i32 %3671, 10
  %3677 = or i1 %3675, %3676
  br i1 %3677, label %originalBB985, label %originalBB985alteredBB

originalBB985:                                    ; preds = %3669, %originalBB985alteredBB
  %3678 = load i32*, i32** %25, align 8, !dbg !2871
  %3679 = load i8, i8* %39, align 1, !dbg !2872
  %3680 = zext i8 %3679 to i64, !dbg !2872
  %3681 = udiv i64 %3680, 32, !dbg !2873
  %3682 = getelementptr inbounds i32, i32* %3678, i64 %3681, !dbg !2871
  %3683 = load i32, i32* %3682, align 4, !dbg !2871
  %3684 = load i8, i8* %39, align 1, !dbg !2874
  %3685 = zext i8 %3684 to i64, !dbg !2874
  %3686 = urem i64 %3685, 32, !dbg !2875
  %3687 = trunc i64 %3686 to i32, !dbg !2876
  %3688 = lshr i32 %3683, %3687, !dbg !2876
  %3689 = and i32 %3688, 1, !dbg !2877
  %3690 = icmp ne i32 %3689, 0, !dbg !2877
  %3691 = load i32, i32* @x.37
  %3692 = load i32, i32* @y.38
  %3693 = sub i32 %3691, 1
  %3694 = mul i32 %3691, %3693
  %3695 = urem i32 %3694, 2
  %3696 = icmp eq i32 %3695, 0
  %3697 = icmp slt i32 %3692, 10
  %3698 = or i1 %3696, %3697
  br i1 %3698, label %originalBBpart21017, label %originalBB985alteredBB

originalBBpart21017:                              ; preds = %originalBB985
  br i1 %3690, label %3719, label %3699, !dbg !2878

3699:                                             ; preds = %originalBBpart21017, %originalBBpart2983, %originalBBpart2979
  %3700 = load i32, i32* @x.37
  %3701 = load i32, i32* @y.38
  %3702 = sub i32 %3700, 1
  %3703 = mul i32 %3700, %3702
  %3704 = urem i32 %3703, 2
  %3705 = icmp eq i32 %3704, 0
  %3706 = icmp slt i32 %3701, 10
  %3707 = or i1 %3705, %3706
  br i1 %3707, label %originalBB1019, label %originalBB1019alteredBB

originalBB1019:                                   ; preds = %3699, %originalBB1019alteredBB
  %3708 = load i8, i8* %41, align 1, !dbg !2879
  %3709 = trunc i8 %3708 to i1, !dbg !2879
  %3710 = load i32, i32* @x.37
  %3711 = load i32, i32* @y.38
  %3712 = sub i32 %3710, 1
  %3713 = mul i32 %3710, %3712
  %3714 = urem i32 %3713, 2
  %3715 = icmp eq i32 %3714, 0
  %3716 = icmp slt i32 %3711, 10
  %3717 = or i1 %3715, %3716
  br i1 %3717, label %originalBBpart21021, label %originalBB1019alteredBB

originalBBpart21021:                              ; preds = %originalBB1019
  br i1 %3709, label %3719, label %3718, !dbg !2880

3718:                                             ; preds = %originalBBpart21021
  br label %4006, !dbg !2881

3719:                                             ; preds = %originalBBpart21021, %originalBBpart21017
  br label %3720, !dbg !2879

3720:                                             ; preds = %3719, %originalBBpart2497
  call void @llvm.dbg.label(metadata !2882), !dbg !2883
  br label %3721, !dbg !2884

3721:                                             ; preds = %3720
  %3722 = load i32, i32* @x.37
  %3723 = load i32, i32* @y.38
  %3724 = sub i32 %3722, 1
  %3725 = mul i32 %3722, %3724
  %3726 = urem i32 %3725, 2
  %3727 = icmp eq i32 %3726, 0
  %3728 = icmp slt i32 %3723, 10
  %3729 = or i1 %3727, %3728
  br i1 %3729, label %originalBB1023, label %originalBB1023alteredBB

originalBB1023:                                   ; preds = %3721, %originalBB1023alteredBB
  %3730 = load i8, i8* %35, align 1, !dbg !2885
  %3731 = trunc i8 %3730 to i1, !dbg !2885
  %3732 = load i32, i32* @x.37
  %3733 = load i32, i32* @y.38
  %3734 = sub i32 %3732, 1
  %3735 = mul i32 %3732, %3734
  %3736 = urem i32 %3735, 2
  %3737 = icmp eq i32 %3736, 0
  %3738 = icmp slt i32 %3733, 10
  %3739 = or i1 %3737, %3738
  br i1 %3739, label %originalBBpart21025, label %originalBB1023alteredBB

originalBBpart21025:                              ; preds = %originalBB1023
  br i1 %3731, label %3740, label %3741, !dbg !2888

3740:                                             ; preds = %originalBBpart21025
  br label %4606, !dbg !2885

3741:                                             ; preds = %originalBBpart21025
  %3742 = load i32, i32* @x.37
  %3743 = load i32, i32* @y.38
  %3744 = sub i32 %3742, 1
  %3745 = mul i32 %3742, %3744
  %3746 = urem i32 %3745, 2
  %3747 = icmp eq i32 %3746, 0
  %3748 = icmp slt i32 %3743, 10
  %3749 = or i1 %3747, %3748
  br i1 %3749, label %originalBB1027, label %originalBB1027alteredBB

originalBB1027:                                   ; preds = %3741, %originalBB1027alteredBB
  store i8 1, i8* %42, align 1, !dbg !2888
  %3750 = load i32, i32* %23, align 4, !dbg !2889
  %3751 = icmp eq i32 %3750, 2, !dbg !2889
  %3752 = load i32, i32* @x.37
  %3753 = load i32, i32* @y.38
  %3754 = sub i32 %3752, 1
  %3755 = mul i32 %3752, %3754
  %3756 = urem i32 %3755, 2
  %3757 = icmp eq i32 %3756, 0
  %3758 = icmp slt i32 %3753, 10
  %3759 = or i1 %3757, %3758
  br i1 %3759, label %originalBBpart21029, label %originalBB1027alteredBB

originalBBpart21029:                              ; preds = %originalBB1027
  br i1 %3751, label %3760, label %3944, !dbg !2889

3760:                                             ; preds = %originalBBpart21029
  %3761 = load i8, i8* %36, align 1, !dbg !2889
  %3762 = trunc i8 %3761 to i1, !dbg !2889
  br i1 %3762, label %3944, label %3763, !dbg !2888

3763:                                             ; preds = %3760
  %3764 = load i32, i32* @x.37
  %3765 = load i32, i32* @y.38
  %3766 = sub i32 %3764, 1
  %3767 = mul i32 %3764, %3766
  %3768 = urem i32 %3767, 2
  %3769 = icmp eq i32 %3768, 0
  %3770 = icmp slt i32 %3765, 10
  %3771 = or i1 %3769, %3770
  br i1 %3771, label %originalBB1031, label %originalBB1031alteredBB

originalBB1031:                                   ; preds = %3763, %originalBB1031alteredBB
  %3772 = load i32, i32* @x.37
  %3773 = load i32, i32* @y.38
  %3774 = sub i32 %3772, 1
  %3775 = mul i32 %3772, %3774
  %3776 = urem i32 %3775, 2
  %3777 = icmp eq i32 %3776, 0
  %3778 = icmp slt i32 %3773, 10
  %3779 = or i1 %3777, %3778
  br i1 %3779, label %originalBBpart21033, label %originalBB1031alteredBB

originalBBpart21033:                              ; preds = %originalBB1031
  br label %3780, !dbg !2891

3780:                                             ; preds = %originalBBpart21033
  %3781 = load i64, i64* %29, align 8, !dbg !2893
  %3782 = load i64, i64* %20, align 8, !dbg !2893
  %3783 = icmp ult i64 %3781, %3782, !dbg !2893
  br i1 %3783, label %3784, label %3804, !dbg !2896

3784:                                             ; preds = %3780
  %3785 = load i32, i32* @x.37
  %3786 = load i32, i32* @y.38
  %3787 = sub i32 %3785, 1
  %3788 = mul i32 %3785, %3787
  %3789 = urem i32 %3788, 2
  %3790 = icmp eq i32 %3789, 0
  %3791 = icmp slt i32 %3786, 10
  %3792 = or i1 %3790, %3791
  br i1 %3792, label %originalBB1035, label %originalBB1035alteredBB

originalBB1035:                                   ; preds = %3784, %originalBB1035alteredBB
  %3793 = load i8*, i8** %19, align 8, !dbg !2893
  %3794 = load i64, i64* %29, align 8, !dbg !2893
  %3795 = getelementptr inbounds i8, i8* %3793, i64 %3794, !dbg !2893
  store i8 39, i8* %3795, align 1, !dbg !2893
  %3796 = load i32, i32* @x.37
  %3797 = load i32, i32* @y.38
  %3798 = sub i32 %3796, 1
  %3799 = mul i32 %3796, %3798
  %3800 = urem i32 %3799, 2
  %3801 = icmp eq i32 %3800, 0
  %3802 = icmp slt i32 %3797, 10
  %3803 = or i1 %3801, %3802
  br i1 %3803, label %originalBBpart21037, label %originalBB1035alteredBB

originalBBpart21037:                              ; preds = %originalBB1035
  br label %3804, !dbg !2893

3804:                                             ; preds = %originalBBpart21037, %3780
  %3805 = load i32, i32* @x.37
  %3806 = load i32, i32* @y.38
  %3807 = sub i32 %3805, 1
  %3808 = mul i32 %3805, %3807
  %3809 = urem i32 %3808, 2
  %3810 = icmp eq i32 %3809, 0
  %3811 = icmp slt i32 %3806, 10
  %3812 = or i1 %3810, %3811
  br i1 %3812, label %originalBB1039, label %originalBB1039alteredBB

originalBB1039:                                   ; preds = %3804, %originalBB1039alteredBB
  %3813 = load i64, i64* %29, align 8, !dbg !2896
  %3814 = add i64 %3813, 1, !dbg !2896
  store i64 %3814, i64* %29, align 8, !dbg !2896
  %3815 = load i32, i32* @x.37
  %3816 = load i32, i32* @y.38
  %3817 = sub i32 %3815, 1
  %3818 = mul i32 %3815, %3817
  %3819 = urem i32 %3818, 2
  %3820 = icmp eq i32 %3819, 0
  %3821 = icmp slt i32 %3816, 10
  %3822 = or i1 %3820, %3821
  br i1 %3822, label %originalBBpart21045, label %originalBB1039alteredBB

originalBBpart21045:                              ; preds = %originalBB1039
  br label %3823, !dbg !2896

3823:                                             ; preds = %originalBBpart21045
  %3824 = load i32, i32* @x.37
  %3825 = load i32, i32* @y.38
  %3826 = sub i32 %3824, 1
  %3827 = mul i32 %3824, %3826
  %3828 = urem i32 %3827, 2
  %3829 = icmp eq i32 %3828, 0
  %3830 = icmp slt i32 %3825, 10
  %3831 = or i1 %3829, %3830
  br i1 %3831, label %originalBB1047, label %originalBB1047alteredBB

originalBB1047:                                   ; preds = %3823, %originalBB1047alteredBB
  %3832 = load i32, i32* @x.37
  %3833 = load i32, i32* @y.38
  %3834 = sub i32 %3832, 1
  %3835 = mul i32 %3832, %3834
  %3836 = urem i32 %3835, 2
  %3837 = icmp eq i32 %3836, 0
  %3838 = icmp slt i32 %3833, 10
  %3839 = or i1 %3837, %3838
  br i1 %3839, label %originalBBpart21049, label %originalBB1047alteredBB

originalBBpart21049:                              ; preds = %originalBB1047
  br label %3840, !dbg !2891

3840:                                             ; preds = %originalBBpart21049
  %3841 = load i32, i32* @x.37
  %3842 = load i32, i32* @y.38
  %3843 = sub i32 %3841, 1
  %3844 = mul i32 %3841, %3843
  %3845 = urem i32 %3844, 2
  %3846 = icmp eq i32 %3845, 0
  %3847 = icmp slt i32 %3842, 10
  %3848 = or i1 %3846, %3847
  br i1 %3848, label %originalBB1051, label %originalBB1051alteredBB

originalBB1051:                                   ; preds = %3840, %originalBB1051alteredBB
  %3849 = load i64, i64* %29, align 8, !dbg !2897
  %3850 = load i64, i64* %20, align 8, !dbg !2897
  %3851 = icmp ult i64 %3849, %3850, !dbg !2897
  %3852 = load i32, i32* @x.37
  %3853 = load i32, i32* @y.38
  %3854 = sub i32 %3852, 1
  %3855 = mul i32 %3852, %3854
  %3856 = urem i32 %3855, 2
  %3857 = icmp eq i32 %3856, 0
  %3858 = icmp slt i32 %3853, 10
  %3859 = or i1 %3857, %3858
  br i1 %3859, label %originalBBpart21053, label %originalBB1051alteredBB

originalBBpart21053:                              ; preds = %originalBB1051
  br i1 %3851, label %3860, label %3864, !dbg !2900

3860:                                             ; preds = %originalBBpart21053
  %3861 = load i8*, i8** %19, align 8, !dbg !2897
  %3862 = load i64, i64* %29, align 8, !dbg !2897
  %3863 = getelementptr inbounds i8, i8* %3861, i64 %3862, !dbg !2897
  store i8 36, i8* %3863, align 1, !dbg !2897
  br label %3864, !dbg !2897

3864:                                             ; preds = %3860, %originalBBpart21053
  %3865 = load i64, i64* %29, align 8, !dbg !2900
  %3866 = add i64 %3865, 1, !dbg !2900
  store i64 %3866, i64* %29, align 8, !dbg !2900
  br label %3867, !dbg !2900

3867:                                             ; preds = %3864
  %3868 = load i32, i32* @x.37
  %3869 = load i32, i32* @y.38
  %3870 = sub i32 %3868, 1
  %3871 = mul i32 %3868, %3870
  %3872 = urem i32 %3871, 2
  %3873 = icmp eq i32 %3872, 0
  %3874 = icmp slt i32 %3869, 10
  %3875 = or i1 %3873, %3874
  br i1 %3875, label %originalBB1055, label %originalBB1055alteredBB

originalBB1055:                                   ; preds = %3867, %originalBB1055alteredBB
  %3876 = load i32, i32* @x.37
  %3877 = load i32, i32* @y.38
  %3878 = sub i32 %3876, 1
  %3879 = mul i32 %3876, %3878
  %3880 = urem i32 %3879, 2
  %3881 = icmp eq i32 %3880, 0
  %3882 = icmp slt i32 %3877, 10
  %3883 = or i1 %3881, %3882
  br i1 %3883, label %originalBBpart21057, label %originalBB1055alteredBB

originalBBpart21057:                              ; preds = %originalBB1055
  br label %3884, !dbg !2891

3884:                                             ; preds = %originalBBpart21057
  %3885 = load i32, i32* @x.37
  %3886 = load i32, i32* @y.38
  %3887 = sub i32 %3885, 1
  %3888 = mul i32 %3885, %3887
  %3889 = urem i32 %3888, 2
  %3890 = icmp eq i32 %3889, 0
  %3891 = icmp slt i32 %3886, 10
  %3892 = or i1 %3890, %3891
  br i1 %3892, label %originalBB1059, label %originalBB1059alteredBB

originalBB1059:                                   ; preds = %3884, %originalBB1059alteredBB
  %3893 = load i64, i64* %29, align 8, !dbg !2901
  %3894 = load i64, i64* %20, align 8, !dbg !2901
  %3895 = icmp ult i64 %3893, %3894, !dbg !2901
  %3896 = load i32, i32* @x.37
  %3897 = load i32, i32* @y.38
  %3898 = sub i32 %3896, 1
  %3899 = mul i32 %3896, %3898
  %3900 = urem i32 %3899, 2
  %3901 = icmp eq i32 %3900, 0
  %3902 = icmp slt i32 %3897, 10
  %3903 = or i1 %3901, %3902
  br i1 %3903, label %originalBBpart21061, label %originalBB1059alteredBB

originalBBpart21061:                              ; preds = %originalBB1059
  br i1 %3895, label %3904, label %3908, !dbg !2904

3904:                                             ; preds = %originalBBpart21061
  %3905 = load i8*, i8** %19, align 8, !dbg !2901
  %3906 = load i64, i64* %29, align 8, !dbg !2901
  %3907 = getelementptr inbounds i8, i8* %3905, i64 %3906, !dbg !2901
  store i8 39, i8* %3907, align 1, !dbg !2901
  br label %3908, !dbg !2901

3908:                                             ; preds = %3904, %originalBBpart21061
  %3909 = load i32, i32* @x.37
  %3910 = load i32, i32* @y.38
  %3911 = sub i32 %3909, 1
  %3912 = mul i32 %3909, %3911
  %3913 = urem i32 %3912, 2
  %3914 = icmp eq i32 %3913, 0
  %3915 = icmp slt i32 %3910, 10
  %3916 = or i1 %3914, %3915
  br i1 %3916, label %originalBB1063, label %originalBB1063alteredBB

originalBB1063:                                   ; preds = %3908, %originalBB1063alteredBB
  %3917 = load i64, i64* %29, align 8, !dbg !2904
  %3918 = add i64 %3917, 1, !dbg !2904
  store i64 %3918, i64* %29, align 8, !dbg !2904
  %3919 = load i32, i32* @x.37
  %3920 = load i32, i32* @y.38
  %3921 = sub i32 %3919, 1
  %3922 = mul i32 %3919, %3921
  %3923 = urem i32 %3922, 2
  %3924 = icmp eq i32 %3923, 0
  %3925 = icmp slt i32 %3920, 10
  %3926 = or i1 %3924, %3925
  br i1 %3926, label %originalBBpart21080, label %originalBB1063alteredBB

originalBBpart21080:                              ; preds = %originalBB1063
  br label %3927, !dbg !2904

3927:                                             ; preds = %originalBBpart21080
  %3928 = load i32, i32* @x.37
  %3929 = load i32, i32* @y.38
  %3930 = sub i32 %3928, 1
  %3931 = mul i32 %3928, %3930
  %3932 = urem i32 %3931, 2
  %3933 = icmp eq i32 %3932, 0
  %3934 = icmp slt i32 %3929, 10
  %3935 = or i1 %3933, %3934
  br i1 %3935, label %originalBB1082, label %originalBB1082alteredBB

originalBB1082:                                   ; preds = %3927, %originalBB1082alteredBB
  store i8 1, i8* %36, align 1, !dbg !2891
  %3936 = load i32, i32* @x.37
  %3937 = load i32, i32* @y.38
  %3938 = sub i32 %3936, 1
  %3939 = mul i32 %3936, %3938
  %3940 = urem i32 %3939, 2
  %3941 = icmp eq i32 %3940, 0
  %3942 = icmp slt i32 %3937, 10
  %3943 = or i1 %3941, %3942
  br i1 %3943, label %originalBBpart21084, label %originalBB1082alteredBB

originalBBpart21084:                              ; preds = %originalBB1082
  br label %3944, !dbg !2891

3944:                                             ; preds = %originalBBpart21084, %3760, %originalBBpart21029
  br label %3945, !dbg !2888

3945:                                             ; preds = %3944
  %3946 = load i64, i64* %29, align 8, !dbg !2905
  %3947 = load i64, i64* %20, align 8, !dbg !2905
  %3948 = icmp ult i64 %3946, %3947, !dbg !2905
  br i1 %3948, label %3949, label %3969, !dbg !2908

3949:                                             ; preds = %3945
  %3950 = load i32, i32* @x.37
  %3951 = load i32, i32* @y.38
  %3952 = sub i32 %3950, 1
  %3953 = mul i32 %3950, %3952
  %3954 = urem i32 %3953, 2
  %3955 = icmp eq i32 %3954, 0
  %3956 = icmp slt i32 %3951, 10
  %3957 = or i1 %3955, %3956
  br i1 %3957, label %originalBB1086, label %originalBB1086alteredBB

originalBB1086:                                   ; preds = %3949, %originalBB1086alteredBB
  %3958 = load i8*, i8** %19, align 8, !dbg !2905
  %3959 = load i64, i64* %29, align 8, !dbg !2905
  %3960 = getelementptr inbounds i8, i8* %3958, i64 %3959, !dbg !2905
  store i8 92, i8* %3960, align 1, !dbg !2905
  %3961 = load i32, i32* @x.37
  %3962 = load i32, i32* @y.38
  %3963 = sub i32 %3961, 1
  %3964 = mul i32 %3961, %3963
  %3965 = urem i32 %3964, 2
  %3966 = icmp eq i32 %3965, 0
  %3967 = icmp slt i32 %3962, 10
  %3968 = or i1 %3966, %3967
  br i1 %3968, label %originalBBpart21088, label %originalBB1086alteredBB

originalBBpart21088:                              ; preds = %originalBB1086
  br label %3969, !dbg !2905

3969:                                             ; preds = %originalBBpart21088, %3945
  %3970 = load i32, i32* @x.37
  %3971 = load i32, i32* @y.38
  %3972 = sub i32 %3970, 1
  %3973 = mul i32 %3970, %3972
  %3974 = urem i32 %3973, 2
  %3975 = icmp eq i32 %3974, 0
  %3976 = icmp slt i32 %3971, 10
  %3977 = or i1 %3975, %3976
  br i1 %3977, label %originalBB1090, label %originalBB1090alteredBB

originalBB1090:                                   ; preds = %3969, %originalBB1090alteredBB
  %3978 = load i64, i64* %29, align 8, !dbg !2908
  %3979 = add i64 %3978, 1, !dbg !2908
  store i64 %3979, i64* %29, align 8, !dbg !2908
  %3980 = load i32, i32* @x.37
  %3981 = load i32, i32* @y.38
  %3982 = sub i32 %3980, 1
  %3983 = mul i32 %3980, %3982
  %3984 = urem i32 %3983, 2
  %3985 = icmp eq i32 %3984, 0
  %3986 = icmp slt i32 %3981, 10
  %3987 = or i1 %3985, %3986
  br i1 %3987, label %originalBBpart21094, label %originalBB1090alteredBB

originalBBpart21094:                              ; preds = %originalBB1090
  br label %3988, !dbg !2908

3988:                                             ; preds = %originalBBpart21094
  %3989 = load i32, i32* @x.37
  %3990 = load i32, i32* @y.38
  %3991 = sub i32 %3989, 1
  %3992 = mul i32 %3989, %3991
  %3993 = urem i32 %3992, 2
  %3994 = icmp eq i32 %3993, 0
  %3995 = icmp slt i32 %3990, 10
  %3996 = or i1 %3994, %3995
  br i1 %3996, label %originalBB1096, label %originalBB1096alteredBB

originalBB1096:                                   ; preds = %3988, %originalBB1096alteredBB
  %3997 = load i32, i32* @x.37
  %3998 = load i32, i32* @y.38
  %3999 = sub i32 %3997, 1
  %4000 = mul i32 %3997, %3999
  %4001 = urem i32 %4000, 2
  %4002 = icmp eq i32 %4001, 0
  %4003 = icmp slt i32 %3998, 10
  %4004 = or i1 %4002, %4003
  br i1 %4004, label %originalBBpart21098, label %originalBB1096alteredBB

originalBBpart21098:                              ; preds = %originalBB1096
  br label %4005, !dbg !2888

4005:                                             ; preds = %originalBBpart21098
  br label %4006, !dbg !2888

4006:                                             ; preds = %4005, %3718, %originalBBpart2963, %originalBBpart2485, %originalBBpart2469
  call void @llvm.dbg.label(metadata !2909), !dbg !2910
  br label %4007, !dbg !2911

4007:                                             ; preds = %4006
  %4008 = load i32, i32* @x.37
  %4009 = load i32, i32* @y.38
  %4010 = sub i32 %4008, 1
  %4011 = mul i32 %4008, %4010
  %4012 = urem i32 %4011, 2
  %4013 = icmp eq i32 %4012, 0
  %4014 = icmp slt i32 %4009, 10
  %4015 = or i1 %4013, %4014
  br i1 %4015, label %originalBB1100, label %originalBB1100alteredBB

originalBB1100:                                   ; preds = %4007, %originalBB1100alteredBB
  %4016 = load i8, i8* %36, align 1, !dbg !2912
  %4017 = trunc i8 %4016 to i1, !dbg !2912
  %4018 = load i32, i32* @x.37
  %4019 = load i32, i32* @y.38
  %4020 = sub i32 %4018, 1
  %4021 = mul i32 %4018, %4020
  %4022 = urem i32 %4021, 2
  %4023 = icmp eq i32 %4022, 0
  %4024 = icmp slt i32 %4019, 10
  %4025 = or i1 %4023, %4024
  br i1 %4025, label %originalBBpart21102, label %originalBB1100alteredBB

originalBBpart21102:                              ; preds = %originalBB1100
  br i1 %4017, label %4026, label %4150, !dbg !2912

4026:                                             ; preds = %originalBBpart21102
  %4027 = load i8, i8* %42, align 1, !dbg !2912
  %4028 = trunc i8 %4027 to i1, !dbg !2912
  br i1 %4028, label %4150, label %4029, !dbg !2915

4029:                                             ; preds = %4026
  br label %4030, !dbg !2916

4030:                                             ; preds = %4029
  %4031 = load i32, i32* @x.37
  %4032 = load i32, i32* @y.38
  %4033 = sub i32 %4031, 1
  %4034 = mul i32 %4031, %4033
  %4035 = urem i32 %4034, 2
  %4036 = icmp eq i32 %4035, 0
  %4037 = icmp slt i32 %4032, 10
  %4038 = or i1 %4036, %4037
  br i1 %4038, label %originalBB1104, label %originalBB1104alteredBB

originalBB1104:                                   ; preds = %4030, %originalBB1104alteredBB
  %4039 = load i64, i64* %29, align 8, !dbg !2918
  %4040 = load i64, i64* %20, align 8, !dbg !2918
  %4041 = icmp ult i64 %4039, %4040, !dbg !2918
  %4042 = load i32, i32* @x.37
  %4043 = load i32, i32* @y.38
  %4044 = sub i32 %4042, 1
  %4045 = mul i32 %4042, %4044
  %4046 = urem i32 %4045, 2
  %4047 = icmp eq i32 %4046, 0
  %4048 = icmp slt i32 %4043, 10
  %4049 = or i1 %4047, %4048
  br i1 %4049, label %originalBBpart21106, label %originalBB1104alteredBB

originalBBpart21106:                              ; preds = %originalBB1104
  br i1 %4041, label %4050, label %4054, !dbg !2921

4050:                                             ; preds = %originalBBpart21106
  %4051 = load i8*, i8** %19, align 8, !dbg !2918
  %4052 = load i64, i64* %29, align 8, !dbg !2918
  %4053 = getelementptr inbounds i8, i8* %4051, i64 %4052, !dbg !2918
  store i8 39, i8* %4053, align 1, !dbg !2918
  br label %4054, !dbg !2918

4054:                                             ; preds = %4050, %originalBBpart21106
  %4055 = load i32, i32* @x.37
  %4056 = load i32, i32* @y.38
  %4057 = sub i32 %4055, 1
  %4058 = mul i32 %4055, %4057
  %4059 = urem i32 %4058, 2
  %4060 = icmp eq i32 %4059, 0
  %4061 = icmp slt i32 %4056, 10
  %4062 = or i1 %4060, %4061
  br i1 %4062, label %originalBB1108, label %originalBB1108alteredBB

originalBB1108:                                   ; preds = %4054, %originalBB1108alteredBB
  %4063 = load i64, i64* %29, align 8, !dbg !2921
  %4064 = add i64 %4063, 1, !dbg !2921
  store i64 %4064, i64* %29, align 8, !dbg !2921
  %4065 = load i32, i32* @x.37
  %4066 = load i32, i32* @y.38
  %4067 = sub i32 %4065, 1
  %4068 = mul i32 %4065, %4067
  %4069 = urem i32 %4068, 2
  %4070 = icmp eq i32 %4069, 0
  %4071 = icmp slt i32 %4066, 10
  %4072 = or i1 %4070, %4071
  br i1 %4072, label %originalBBpart21113, label %originalBB1108alteredBB

originalBBpart21113:                              ; preds = %originalBB1108
  br label %4073, !dbg !2921

4073:                                             ; preds = %originalBBpart21113
  %4074 = load i32, i32* @x.37
  %4075 = load i32, i32* @y.38
  %4076 = sub i32 %4074, 1
  %4077 = mul i32 %4074, %4076
  %4078 = urem i32 %4077, 2
  %4079 = icmp eq i32 %4078, 0
  %4080 = icmp slt i32 %4075, 10
  %4081 = or i1 %4079, %4080
  br i1 %4081, label %originalBB1115, label %originalBB1115alteredBB

originalBB1115:                                   ; preds = %4073, %originalBB1115alteredBB
  %4082 = load i32, i32* @x.37
  %4083 = load i32, i32* @y.38
  %4084 = sub i32 %4082, 1
  %4085 = mul i32 %4082, %4084
  %4086 = urem i32 %4085, 2
  %4087 = icmp eq i32 %4086, 0
  %4088 = icmp slt i32 %4083, 10
  %4089 = or i1 %4087, %4088
  br i1 %4089, label %originalBBpart21117, label %originalBB1115alteredBB

originalBBpart21117:                              ; preds = %originalBB1115
  br label %4090, !dbg !2916

4090:                                             ; preds = %originalBBpart21117
  %4091 = load i32, i32* @x.37
  %4092 = load i32, i32* @y.38
  %4093 = sub i32 %4091, 1
  %4094 = mul i32 %4091, %4093
  %4095 = urem i32 %4094, 2
  %4096 = icmp eq i32 %4095, 0
  %4097 = icmp slt i32 %4092, 10
  %4098 = or i1 %4096, %4097
  br i1 %4098, label %originalBB1119, label %originalBB1119alteredBB

originalBB1119:                                   ; preds = %4090, %originalBB1119alteredBB
  %4099 = load i64, i64* %29, align 8, !dbg !2922
  %4100 = load i64, i64* %20, align 8, !dbg !2922
  %4101 = icmp ult i64 %4099, %4100, !dbg !2922
  %4102 = load i32, i32* @x.37
  %4103 = load i32, i32* @y.38
  %4104 = sub i32 %4102, 1
  %4105 = mul i32 %4102, %4104
  %4106 = urem i32 %4105, 2
  %4107 = icmp eq i32 %4106, 0
  %4108 = icmp slt i32 %4103, 10
  %4109 = or i1 %4107, %4108
  br i1 %4109, label %originalBBpart21121, label %originalBB1119alteredBB

originalBBpart21121:                              ; preds = %originalBB1119
  br i1 %4101, label %4110, label %4130, !dbg !2925

4110:                                             ; preds = %originalBBpart21121
  %4111 = load i32, i32* @x.37
  %4112 = load i32, i32* @y.38
  %4113 = sub i32 %4111, 1
  %4114 = mul i32 %4111, %4113
  %4115 = urem i32 %4114, 2
  %4116 = icmp eq i32 %4115, 0
  %4117 = icmp slt i32 %4112, 10
  %4118 = or i1 %4116, %4117
  br i1 %4118, label %originalBB1123, label %originalBB1123alteredBB

originalBB1123:                                   ; preds = %4110, %originalBB1123alteredBB
  %4119 = load i8*, i8** %19, align 8, !dbg !2922
  %4120 = load i64, i64* %29, align 8, !dbg !2922
  %4121 = getelementptr inbounds i8, i8* %4119, i64 %4120, !dbg !2922
  store i8 39, i8* %4121, align 1, !dbg !2922
  %4122 = load i32, i32* @x.37
  %4123 = load i32, i32* @y.38
  %4124 = sub i32 %4122, 1
  %4125 = mul i32 %4122, %4124
  %4126 = urem i32 %4125, 2
  %4127 = icmp eq i32 %4126, 0
  %4128 = icmp slt i32 %4123, 10
  %4129 = or i1 %4127, %4128
  br i1 %4129, label %originalBBpart21125, label %originalBB1123alteredBB

originalBBpart21125:                              ; preds = %originalBB1123
  br label %4130, !dbg !2922

4130:                                             ; preds = %originalBBpart21125, %originalBBpart21121
  %4131 = load i64, i64* %29, align 8, !dbg !2925
  %4132 = add i64 %4131, 1, !dbg !2925
  store i64 %4132, i64* %29, align 8, !dbg !2925
  br label %4133, !dbg !2925

4133:                                             ; preds = %4130
  %4134 = load i32, i32* @x.37
  %4135 = load i32, i32* @y.38
  %4136 = sub i32 %4134, 1
  %4137 = mul i32 %4134, %4136
  %4138 = urem i32 %4137, 2
  %4139 = icmp eq i32 %4138, 0
  %4140 = icmp slt i32 %4135, 10
  %4141 = or i1 %4139, %4140
  br i1 %4141, label %originalBB1127, label %originalBB1127alteredBB

originalBB1127:                                   ; preds = %4133, %originalBB1127alteredBB
  store i8 0, i8* %36, align 1, !dbg !2916
  %4142 = load i32, i32* @x.37
  %4143 = load i32, i32* @y.38
  %4144 = sub i32 %4142, 1
  %4145 = mul i32 %4142, %4144
  %4146 = urem i32 %4145, 2
  %4147 = icmp eq i32 %4146, 0
  %4148 = icmp slt i32 %4143, 10
  %4149 = or i1 %4147, %4148
  br i1 %4149, label %originalBBpart21129, label %originalBB1127alteredBB

originalBBpart21129:                              ; preds = %originalBB1127
  br label %4150, !dbg !2916

4150:                                             ; preds = %originalBBpart21129, %4026, %originalBBpart21102
  %4151 = load i32, i32* @x.37
  %4152 = load i32, i32* @y.38
  %4153 = sub i32 %4151, 1
  %4154 = mul i32 %4151, %4153
  %4155 = urem i32 %4154, 2
  %4156 = icmp eq i32 %4155, 0
  %4157 = icmp slt i32 %4152, 10
  %4158 = or i1 %4156, %4157
  br i1 %4158, label %originalBB1131, label %originalBB1131alteredBB

originalBB1131:                                   ; preds = %4150, %originalBB1131alteredBB
  %4159 = load i32, i32* @x.37
  %4160 = load i32, i32* @y.38
  %4161 = sub i32 %4159, 1
  %4162 = mul i32 %4159, %4161
  %4163 = urem i32 %4162, 2
  %4164 = icmp eq i32 %4163, 0
  %4165 = icmp slt i32 %4160, 10
  %4166 = or i1 %4164, %4165
  br i1 %4166, label %originalBBpart21133, label %originalBB1131alteredBB

originalBBpart21133:                              ; preds = %originalBB1131
  br label %4167, !dbg !2915

4167:                                             ; preds = %originalBBpart21133
  br label %4168, !dbg !2926

4168:                                             ; preds = %4167
  %4169 = load i64, i64* %29, align 8, !dbg !2927
  %4170 = load i64, i64* %20, align 8, !dbg !2927
  %4171 = icmp ult i64 %4169, %4170, !dbg !2927
  br i1 %4171, label %4172, label %4177, !dbg !2930

4172:                                             ; preds = %4168
  %4173 = load i8, i8* %39, align 1, !dbg !2927
  %4174 = load i8*, i8** %19, align 8, !dbg !2927
  %4175 = load i64, i64* %29, align 8, !dbg !2927
  %4176 = getelementptr inbounds i8, i8* %4174, i64 %4175, !dbg !2927
  store i8 %4173, i8* %4176, align 1, !dbg !2927
  br label %4177, !dbg !2927

4177:                                             ; preds = %4172, %4168
  %4178 = load i32, i32* @x.37
  %4179 = load i32, i32* @y.38
  %4180 = sub i32 %4178, 1
  %4181 = mul i32 %4178, %4180
  %4182 = urem i32 %4181, 2
  %4183 = icmp eq i32 %4182, 0
  %4184 = icmp slt i32 %4179, 10
  %4185 = or i1 %4183, %4184
  br i1 %4185, label %originalBB1135, label %originalBB1135alteredBB

originalBB1135:                                   ; preds = %4177, %originalBB1135alteredBB
  %4186 = load i64, i64* %29, align 8, !dbg !2930
  %4187 = add i64 %4186, 1, !dbg !2930
  store i64 %4187, i64* %29, align 8, !dbg !2930
  %4188 = load i32, i32* @x.37
  %4189 = load i32, i32* @y.38
  %4190 = sub i32 %4188, 1
  %4191 = mul i32 %4188, %4190
  %4192 = urem i32 %4191, 2
  %4193 = icmp eq i32 %4192, 0
  %4194 = icmp slt i32 %4189, 10
  %4195 = or i1 %4193, %4194
  br i1 %4195, label %originalBBpart21144, label %originalBB1135alteredBB

originalBBpart21144:                              ; preds = %originalBB1135
  br label %4196, !dbg !2930

4196:                                             ; preds = %originalBBpart21144
  %4197 = load i32, i32* @x.37
  %4198 = load i32, i32* @y.38
  %4199 = sub i32 %4197, 1
  %4200 = mul i32 %4197, %4199
  %4201 = urem i32 %4200, 2
  %4202 = icmp eq i32 %4201, 0
  %4203 = icmp slt i32 %4198, 10
  %4204 = or i1 %4202, %4203
  br i1 %4204, label %originalBB1146, label %originalBB1146alteredBB

originalBB1146:                                   ; preds = %4196, %originalBB1146alteredBB
  %4205 = load i8, i8* %43, align 1, !dbg !2931
  %4206 = trunc i8 %4205 to i1, !dbg !2931
  %4207 = load i32, i32* @x.37
  %4208 = load i32, i32* @y.38
  %4209 = sub i32 %4207, 1
  %4210 = mul i32 %4207, %4209
  %4211 = urem i32 %4210, 2
  %4212 = icmp eq i32 %4211, 0
  %4213 = icmp slt i32 %4208, 10
  %4214 = or i1 %4212, %4213
  br i1 %4214, label %originalBBpart21148, label %originalBB1146alteredBB

originalBBpart21148:                              ; preds = %originalBB1146
  br i1 %4206, label %4216, label %4215, !dbg !2933

4215:                                             ; preds = %originalBBpart21148
  store i8 0, i8* %38, align 1, !dbg !2934
  br label %4216, !dbg !2935

4216:                                             ; preds = %4215, %originalBBpart21148
  %4217 = load i32, i32* @x.37
  %4218 = load i32, i32* @y.38
  %4219 = sub i32 %4217, 1
  %4220 = mul i32 %4217, %4219
  %4221 = urem i32 %4220, 2
  %4222 = icmp eq i32 %4221, 0
  %4223 = icmp slt i32 %4218, 10
  %4224 = or i1 %4222, %4223
  br i1 %4224, label %originalBB1150, label %originalBB1150alteredBB

originalBB1150:                                   ; preds = %4216, %originalBB1150alteredBB
  %4225 = load i32, i32* @x.37
  %4226 = load i32, i32* @y.38
  %4227 = sub i32 %4225, 1
  %4228 = mul i32 %4225, %4227
  %4229 = urem i32 %4228, 2
  %4230 = icmp eq i32 %4229, 0
  %4231 = icmp slt i32 %4226, 10
  %4232 = or i1 %4230, %4231
  br i1 %4232, label %originalBBpart21152, label %originalBB1150alteredBB

originalBBpart21152:                              ; preds = %originalBB1150
  br label %4233, !dbg !2936

4233:                                             ; preds = %originalBBpart21152, %1186
  %4234 = load i32, i32* @x.37
  %4235 = load i32, i32* @y.38
  %4236 = sub i32 %4234, 1
  %4237 = mul i32 %4234, %4236
  %4238 = urem i32 %4237, 2
  %4239 = icmp eq i32 %4238, 0
  %4240 = icmp slt i32 %4235, 10
  %4241 = or i1 %4239, %4240
  br i1 %4241, label %originalBB1154, label %originalBB1154alteredBB

originalBB1154:                                   ; preds = %4233, %originalBB1154alteredBB
  %4242 = load i64, i64* %28, align 8, !dbg !2937
  %4243 = add i64 %4242, 1, !dbg !2937
  store i64 %4243, i64* %28, align 8, !dbg !2937
  %4244 = load i32, i32* @x.37
  %4245 = load i32, i32* @y.38
  %4246 = sub i32 %4244, 1
  %4247 = mul i32 %4244, %4246
  %4248 = urem i32 %4247, 2
  %4249 = icmp eq i32 %4248, 0
  %4250 = icmp slt i32 %4245, 10
  %4251 = or i1 %4249, %4250
  br i1 %4251, label %originalBBpart21170, label %originalBB1154alteredBB

originalBBpart21170:                              ; preds = %originalBB1154
  br label %506, !dbg !2938, !llvm.loop !2939

4252:                                             ; preds = %originalBBpart2123
  %4253 = load i32, i32* @x.37
  %4254 = load i32, i32* @y.38
  %4255 = sub i32 %4253, 1
  %4256 = mul i32 %4253, %4255
  %4257 = urem i32 %4256, 2
  %4258 = icmp eq i32 %4257, 0
  %4259 = icmp slt i32 %4254, 10
  %4260 = or i1 %4258, %4259
  br i1 %4260, label %originalBB1172, label %originalBB1172alteredBB

originalBB1172:                                   ; preds = %4252, %originalBB1172alteredBB
  %4261 = load i64, i64* %29, align 8, !dbg !2941
  %4262 = icmp eq i64 %4261, 0, !dbg !2943
  %4263 = load i32, i32* @x.37
  %4264 = load i32, i32* @y.38
  %4265 = sub i32 %4263, 1
  %4266 = mul i32 %4263, %4265
  %4267 = urem i32 %4266, 2
  %4268 = icmp eq i32 %4267, 0
  %4269 = icmp slt i32 %4264, 10
  %4270 = or i1 %4268, %4269
  br i1 %4270, label %originalBBpart21174, label %originalBB1172alteredBB

originalBBpart21174:                              ; preds = %originalBB1172
  br i1 %4262, label %4271, label %4310, !dbg !2944

4271:                                             ; preds = %originalBBpart21174
  %4272 = load i32, i32* @x.37
  %4273 = load i32, i32* @y.38
  %4274 = sub i32 %4272, 1
  %4275 = mul i32 %4272, %4274
  %4276 = urem i32 %4275, 2
  %4277 = icmp eq i32 %4276, 0
  %4278 = icmp slt i32 %4273, 10
  %4279 = or i1 %4277, %4278
  br i1 %4279, label %originalBB1176, label %originalBB1176alteredBB

originalBB1176:                                   ; preds = %4271, %originalBB1176alteredBB
  %4280 = load i32, i32* %23, align 4, !dbg !2945
  %4281 = icmp eq i32 %4280, 2, !dbg !2946
  %4282 = load i32, i32* @x.37
  %4283 = load i32, i32* @y.38
  %4284 = sub i32 %4282, 1
  %4285 = mul i32 %4282, %4284
  %4286 = urem i32 %4285, 2
  %4287 = icmp eq i32 %4286, 0
  %4288 = icmp slt i32 %4283, 10
  %4289 = or i1 %4287, %4288
  br i1 %4289, label %originalBBpart21178, label %originalBB1176alteredBB

originalBBpart21178:                              ; preds = %originalBB1176
  br i1 %4281, label %4290, label %4310, !dbg !2947

4290:                                             ; preds = %originalBBpart21178
  %4291 = load i8, i8* %35, align 1, !dbg !2948
  %4292 = trunc i8 %4291 to i1, !dbg !2948
  br i1 %4292, label %4293, label %4310, !dbg !2949

4293:                                             ; preds = %4290
  %4294 = load i32, i32* @x.37
  %4295 = load i32, i32* @y.38
  %4296 = sub i32 %4294, 1
  %4297 = mul i32 %4294, %4296
  %4298 = urem i32 %4297, 2
  %4299 = icmp eq i32 %4298, 0
  %4300 = icmp slt i32 %4295, 10
  %4301 = or i1 %4299, %4300
  br i1 %4301, label %originalBB1180, label %originalBB1180alteredBB

originalBB1180:                                   ; preds = %4293, %originalBB1180alteredBB
  %4302 = load i32, i32* @x.37
  %4303 = load i32, i32* @y.38
  %4304 = sub i32 %4302, 1
  %4305 = mul i32 %4302, %4304
  %4306 = urem i32 %4305, 2
  %4307 = icmp eq i32 %4306, 0
  %4308 = icmp slt i32 %4303, 10
  %4309 = or i1 %4307, %4308
  br i1 %4309, label %originalBBpart21182, label %originalBB1180alteredBB

originalBBpart21182:                              ; preds = %originalBB1180
  br label %4606, !dbg !2950

4310:                                             ; preds = %4290, %originalBBpart21178, %originalBBpart21174
  %4311 = load i32, i32* %23, align 4, !dbg !2951
  %4312 = icmp eq i32 %4311, 2, !dbg !2953
  br i1 %4312, label %4313, label %4438, !dbg !2954

4313:                                             ; preds = %4310
  %4314 = load i8, i8* %35, align 1, !dbg !2955
  %4315 = trunc i8 %4314 to i1, !dbg !2955
  br i1 %4315, label %4438, label %4316, !dbg !2956

4316:                                             ; preds = %4313
  %4317 = load i32, i32* @x.37
  %4318 = load i32, i32* @y.38
  %4319 = sub i32 %4317, 1
  %4320 = mul i32 %4317, %4319
  %4321 = urem i32 %4320, 2
  %4322 = icmp eq i32 %4321, 0
  %4323 = icmp slt i32 %4318, 10
  %4324 = or i1 %4322, %4323
  br i1 %4324, label %originalBB1184, label %originalBB1184alteredBB

originalBB1184:                                   ; preds = %4316, %originalBB1184alteredBB
  %4325 = load i8, i8* %37, align 1, !dbg !2957
  %4326 = trunc i8 %4325 to i1, !dbg !2957
  %4327 = load i32, i32* @x.37
  %4328 = load i32, i32* @y.38
  %4329 = sub i32 %4327, 1
  %4330 = mul i32 %4327, %4329
  %4331 = urem i32 %4330, 2
  %4332 = icmp eq i32 %4331, 0
  %4333 = icmp slt i32 %4328, 10
  %4334 = or i1 %4332, %4333
  br i1 %4334, label %originalBBpart21186, label %originalBB1184alteredBB

originalBBpart21186:                              ; preds = %originalBB1184
  br i1 %4326, label %4335, label %4438, !dbg !2958

4335:                                             ; preds = %originalBBpart21186
  %4336 = load i32, i32* @x.37
  %4337 = load i32, i32* @y.38
  %4338 = sub i32 %4336, 1
  %4339 = mul i32 %4336, %4338
  %4340 = urem i32 %4339, 2
  %4341 = icmp eq i32 %4340, 0
  %4342 = icmp slt i32 %4337, 10
  %4343 = or i1 %4341, %4342
  br i1 %4343, label %originalBB1188, label %originalBB1188alteredBB

originalBB1188:                                   ; preds = %4335, %originalBB1188alteredBB
  %4344 = load i8, i8* %38, align 1, !dbg !2959
  %4345 = trunc i8 %4344 to i1, !dbg !2959
  %4346 = load i32, i32* @x.37
  %4347 = load i32, i32* @y.38
  %4348 = sub i32 %4346, 1
  %4349 = mul i32 %4346, %4348
  %4350 = urem i32 %4349, 2
  %4351 = icmp eq i32 %4350, 0
  %4352 = icmp slt i32 %4347, 10
  %4353 = or i1 %4351, %4352
  br i1 %4353, label %originalBBpart21190, label %originalBB1188alteredBB

originalBBpart21190:                              ; preds = %originalBB1188
  br i1 %4345, label %4354, label %4380, !dbg !2962

4354:                                             ; preds = %originalBBpart21190
  %4355 = load i32, i32* @x.37
  %4356 = load i32, i32* @y.38
  %4357 = sub i32 %4355, 1
  %4358 = mul i32 %4355, %4357
  %4359 = urem i32 %4358, 2
  %4360 = icmp eq i32 %4359, 0
  %4361 = icmp slt i32 %4356, 10
  %4362 = or i1 %4360, %4361
  br i1 %4362, label %originalBB1192, label %originalBB1192alteredBB

originalBB1192:                                   ; preds = %4354, %originalBB1192alteredBB
  %4363 = load i8*, i8** %19, align 8, !dbg !2963
  %4364 = load i64, i64* %30, align 8, !dbg !2964
  %4365 = load i8*, i8** %21, align 8, !dbg !2965
  %4366 = load i64, i64* %22, align 8, !dbg !2966
  %4367 = load i32, i32* %24, align 4, !dbg !2967
  %4368 = load i32*, i32** %25, align 8, !dbg !2968
  %4369 = load i8*, i8** %26, align 8, !dbg !2969
  %4370 = load i8*, i8** %27, align 8, !dbg !2970
  %4371 = call i64 @quotearg_buffer_restyled(i8* %4363, i64 %4364, i8* %4365, i64 %4366, i32 5, i32 %4367, i32* %4368, i8* %4369, i8* %4370), !dbg !2971
  store i64 %4371, i64* %18, align 8, !dbg !2972
  %4372 = load i32, i32* @x.37
  %4373 = load i32, i32* @y.38
  %4374 = sub i32 %4372, 1
  %4375 = mul i32 %4372, %4374
  %4376 = urem i32 %4375, 2
  %4377 = icmp eq i32 %4376, 0
  %4378 = icmp slt i32 %4373, 10
  %4379 = or i1 %4377, %4378
  br i1 %4379, label %originalBBpart21194, label %originalBB1192alteredBB

originalBBpart21194:                              ; preds = %originalBB1192
  br label %4640, !dbg !2972

4380:                                             ; preds = %originalBBpart21190
  %4381 = load i32, i32* @x.37
  %4382 = load i32, i32* @y.38
  %4383 = sub i32 %4381, 1
  %4384 = mul i32 %4381, %4383
  %4385 = urem i32 %4384, 2
  %4386 = icmp eq i32 %4385, 0
  %4387 = icmp slt i32 %4382, 10
  %4388 = or i1 %4386, %4387
  br i1 %4388, label %originalBB1196, label %originalBB1196alteredBB

originalBB1196:                                   ; preds = %4380, %originalBB1196alteredBB
  %4389 = load i64, i64* %20, align 8, !dbg !2973
  %4390 = icmp ne i64 %4389, 0, !dbg !2973
  %4391 = load i32, i32* @x.37
  %4392 = load i32, i32* @y.38
  %4393 = sub i32 %4391, 1
  %4394 = mul i32 %4391, %4393
  %4395 = urem i32 %4394, 2
  %4396 = icmp eq i32 %4395, 0
  %4397 = icmp slt i32 %4392, 10
  %4398 = or i1 %4396, %4397
  br i1 %4398, label %originalBBpart21198, label %originalBB1196alteredBB

originalBBpart21198:                              ; preds = %originalBB1196
  br i1 %4390, label %4420, label %4399, !dbg !2975

4399:                                             ; preds = %originalBBpart21198
  %4400 = load i32, i32* @x.37
  %4401 = load i32, i32* @y.38
  %4402 = sub i32 %4400, 1
  %4403 = mul i32 %4400, %4402
  %4404 = urem i32 %4403, 2
  %4405 = icmp eq i32 %4404, 0
  %4406 = icmp slt i32 %4401, 10
  %4407 = or i1 %4405, %4406
  br i1 %4407, label %originalBB1200, label %originalBB1200alteredBB

originalBB1200:                                   ; preds = %4399, %originalBB1200alteredBB
  %4408 = load i64, i64* %30, align 8, !dbg !2976
  %4409 = icmp ne i64 %4408, 0, !dbg !2976
  %4410 = load i32, i32* @x.37
  %4411 = load i32, i32* @y.38
  %4412 = sub i32 %4410, 1
  %4413 = mul i32 %4410, %4412
  %4414 = urem i32 %4413, 2
  %4415 = icmp eq i32 %4414, 0
  %4416 = icmp slt i32 %4411, 10
  %4417 = or i1 %4415, %4416
  br i1 %4417, label %originalBBpart21202, label %originalBB1200alteredBB

originalBBpart21202:                              ; preds = %originalBB1200
  br i1 %4409, label %4418, label %4420, !dbg !2977

4418:                                             ; preds = %originalBBpart21202
  %4419 = load i64, i64* %30, align 8, !dbg !2978
  store i64 %4419, i64* %20, align 8, !dbg !2980
  store i64 0, i64* %29, align 8, !dbg !2981
  br label %66, !dbg !2982

4420:                                             ; preds = %originalBBpart21202, %originalBBpart21198
  br label %4421

4421:                                             ; preds = %4420
  %4422 = load i32, i32* @x.37
  %4423 = load i32, i32* @y.38
  %4424 = sub i32 %4422, 1
  %4425 = mul i32 %4422, %4424
  %4426 = urem i32 %4425, 2
  %4427 = icmp eq i32 %4426, 0
  %4428 = icmp slt i32 %4423, 10
  %4429 = or i1 %4427, %4428
  br i1 %4429, label %originalBB1204, label %originalBB1204alteredBB

originalBB1204:                                   ; preds = %4421, %originalBB1204alteredBB
  %4430 = load i32, i32* @x.37
  %4431 = load i32, i32* @y.38
  %4432 = sub i32 %4430, 1
  %4433 = mul i32 %4430, %4432
  %4434 = urem i32 %4433, 2
  %4435 = icmp eq i32 %4434, 0
  %4436 = icmp slt i32 %4431, 10
  %4437 = or i1 %4435, %4436
  br i1 %4437, label %originalBBpart21206, label %originalBB1204alteredBB

originalBBpart21206:                              ; preds = %originalBB1204
  br label %4438, !dbg !2983

4438:                                             ; preds = %originalBBpart21206, %originalBBpart21186, %4313, %4310
  %4439 = load i8*, i8** %31, align 8, !dbg !2984
  %4440 = icmp ne i8* %4439, null, !dbg !2984
  br i1 %4440, label %4441, label %4564, !dbg !2986

4441:                                             ; preds = %4438
  %4442 = load i32, i32* @x.37
  %4443 = load i32, i32* @y.38
  %4444 = sub i32 %4442, 1
  %4445 = mul i32 %4442, %4444
  %4446 = urem i32 %4445, 2
  %4447 = icmp eq i32 %4446, 0
  %4448 = icmp slt i32 %4443, 10
  %4449 = or i1 %4447, %4448
  br i1 %4449, label %originalBB1208, label %originalBB1208alteredBB

originalBB1208:                                   ; preds = %4441, %originalBB1208alteredBB
  %4450 = load i8, i8* %35, align 1, !dbg !2987
  %4451 = trunc i8 %4450 to i1, !dbg !2987
  %4452 = load i32, i32* @x.37
  %4453 = load i32, i32* @y.38
  %4454 = sub i32 %4452, 1
  %4455 = mul i32 %4452, %4454
  %4456 = urem i32 %4455, 2
  %4457 = icmp eq i32 %4456, 0
  %4458 = icmp slt i32 %4453, 10
  %4459 = or i1 %4457, %4458
  br i1 %4459, label %originalBBpart21210, label %originalBB1208alteredBB

originalBBpart21210:                              ; preds = %originalBB1208
  br i1 %4451, label %4564, label %4460, !dbg !2988

4460:                                             ; preds = %originalBBpart21210
  %4461 = load i32, i32* @x.37
  %4462 = load i32, i32* @y.38
  %4463 = sub i32 %4461, 1
  %4464 = mul i32 %4461, %4463
  %4465 = urem i32 %4464, 2
  %4466 = icmp eq i32 %4465, 0
  %4467 = icmp slt i32 %4462, 10
  %4468 = or i1 %4466, %4467
  br i1 %4468, label %originalBB1212, label %originalBB1212alteredBB

originalBB1212:                                   ; preds = %4460, %originalBB1212alteredBB
  %4469 = load i32, i32* @x.37
  %4470 = load i32, i32* @y.38
  %4471 = sub i32 %4469, 1
  %4472 = mul i32 %4469, %4471
  %4473 = urem i32 %4472, 2
  %4474 = icmp eq i32 %4473, 0
  %4475 = icmp slt i32 %4470, 10
  %4476 = or i1 %4474, %4475
  br i1 %4476, label %originalBBpart21214, label %originalBB1212alteredBB

originalBBpart21214:                              ; preds = %originalBB1212
  br label %4477, !dbg !2989

4477:                                             ; preds = %originalBBpart21230, %originalBBpart21214
  %4478 = load i8*, i8** %31, align 8, !dbg !2990
  %4479 = load i8, i8* %4478, align 1, !dbg !2993
  %4480 = icmp ne i8 %4479, 0, !dbg !2994
  br i1 %4480, label %4481, label %4563, !dbg !2994

4481:                                             ; preds = %4477
  %4482 = load i32, i32* @x.37
  %4483 = load i32, i32* @y.38
  %4484 = sub i32 %4482, 1
  %4485 = mul i32 %4482, %4484
  %4486 = urem i32 %4485, 2
  %4487 = icmp eq i32 %4486, 0
  %4488 = icmp slt i32 %4483, 10
  %4489 = or i1 %4487, %4488
  br i1 %4489, label %originalBB1216, label %originalBB1216alteredBB

originalBB1216:                                   ; preds = %4481, %originalBB1216alteredBB
  %4490 = load i32, i32* @x.37
  %4491 = load i32, i32* @y.38
  %4492 = sub i32 %4490, 1
  %4493 = mul i32 %4490, %4492
  %4494 = urem i32 %4493, 2
  %4495 = icmp eq i32 %4494, 0
  %4496 = icmp slt i32 %4491, 10
  %4497 = or i1 %4495, %4496
  br i1 %4497, label %originalBBpart21218, label %originalBB1216alteredBB

originalBBpart21218:                              ; preds = %originalBB1216
  br label %4498, !dbg !2995

4498:                                             ; preds = %originalBBpart21218
  %4499 = load i64, i64* %29, align 8, !dbg !2996
  %4500 = load i64, i64* %20, align 8, !dbg !2996
  %4501 = icmp ult i64 %4499, %4500, !dbg !2996
  br i1 %4501, label %4502, label %4524, !dbg !2999

4502:                                             ; preds = %4498
  %4503 = load i32, i32* @x.37
  %4504 = load i32, i32* @y.38
  %4505 = sub i32 %4503, 1
  %4506 = mul i32 %4503, %4505
  %4507 = urem i32 %4506, 2
  %4508 = icmp eq i32 %4507, 0
  %4509 = icmp slt i32 %4504, 10
  %4510 = or i1 %4508, %4509
  br i1 %4510, label %originalBB1220, label %originalBB1220alteredBB

originalBB1220:                                   ; preds = %4502, %originalBB1220alteredBB
  %4511 = load i8*, i8** %31, align 8, !dbg !2996
  %4512 = load i8, i8* %4511, align 1, !dbg !2996
  %4513 = load i8*, i8** %19, align 8, !dbg !2996
  %4514 = load i64, i64* %29, align 8, !dbg !2996
  %4515 = getelementptr inbounds i8, i8* %4513, i64 %4514, !dbg !2996
  store i8 %4512, i8* %4515, align 1, !dbg !2996
  %4516 = load i32, i32* @x.37
  %4517 = load i32, i32* @y.38
  %4518 = sub i32 %4516, 1
  %4519 = mul i32 %4516, %4518
  %4520 = urem i32 %4519, 2
  %4521 = icmp eq i32 %4520, 0
  %4522 = icmp slt i32 %4517, 10
  %4523 = or i1 %4521, %4522
  br i1 %4523, label %originalBBpart21222, label %originalBB1220alteredBB

originalBBpart21222:                              ; preds = %originalBB1220
  br label %4524, !dbg !2996

4524:                                             ; preds = %originalBBpart21222, %4498
  %4525 = load i64, i64* %29, align 8, !dbg !2999
  %4526 = add i64 %4525, 1, !dbg !2999
  store i64 %4526, i64* %29, align 8, !dbg !2999
  br label %4527, !dbg !2999

4527:                                             ; preds = %4524
  %4528 = load i32, i32* @x.37
  %4529 = load i32, i32* @y.38
  %4530 = sub i32 %4528, 1
  %4531 = mul i32 %4528, %4530
  %4532 = urem i32 %4531, 2
  %4533 = icmp eq i32 %4532, 0
  %4534 = icmp slt i32 %4529, 10
  %4535 = or i1 %4533, %4534
  br i1 %4535, label %originalBB1224, label %originalBB1224alteredBB

originalBB1224:                                   ; preds = %4527, %originalBB1224alteredBB
  %4536 = load i32, i32* @x.37
  %4537 = load i32, i32* @y.38
  %4538 = sub i32 %4536, 1
  %4539 = mul i32 %4536, %4538
  %4540 = urem i32 %4539, 2
  %4541 = icmp eq i32 %4540, 0
  %4542 = icmp slt i32 %4537, 10
  %4543 = or i1 %4541, %4542
  br i1 %4543, label %originalBBpart21226, label %originalBB1224alteredBB

originalBBpart21226:                              ; preds = %originalBB1224
  br label %4544, !dbg !2999

4544:                                             ; preds = %originalBBpart21226
  %4545 = load i32, i32* @x.37
  %4546 = load i32, i32* @y.38
  %4547 = sub i32 %4545, 1
  %4548 = mul i32 %4545, %4547
  %4549 = urem i32 %4548, 2
  %4550 = icmp eq i32 %4549, 0
  %4551 = icmp slt i32 %4546, 10
  %4552 = or i1 %4550, %4551
  br i1 %4552, label %originalBB1228, label %originalBB1228alteredBB

originalBB1228:                                   ; preds = %4544, %originalBB1228alteredBB
  %4553 = load i8*, i8** %31, align 8, !dbg !3000
  %4554 = getelementptr inbounds i8, i8* %4553, i32 1, !dbg !3000
  store i8* %4554, i8** %31, align 8, !dbg !3000
  %4555 = load i32, i32* @x.37
  %4556 = load i32, i32* @y.38
  %4557 = sub i32 %4555, 1
  %4558 = mul i32 %4555, %4557
  %4559 = urem i32 %4558, 2
  %4560 = icmp eq i32 %4559, 0
  %4561 = icmp slt i32 %4556, 10
  %4562 = or i1 %4560, %4561
  br i1 %4562, label %originalBBpart21230, label %originalBB1228alteredBB

originalBBpart21230:                              ; preds = %originalBB1228
  br label %4477, !dbg !3001, !llvm.loop !3002

4563:                                             ; preds = %4477
  br label %4564, !dbg !3003

4564:                                             ; preds = %4563, %originalBBpart21210, %4438
  %4565 = load i32, i32* @x.37
  %4566 = load i32, i32* @y.38
  %4567 = sub i32 %4565, 1
  %4568 = mul i32 %4565, %4567
  %4569 = urem i32 %4568, 2
  %4570 = icmp eq i32 %4569, 0
  %4571 = icmp slt i32 %4566, 10
  %4572 = or i1 %4570, %4571
  br i1 %4572, label %originalBB1232, label %originalBB1232alteredBB

originalBB1232:                                   ; preds = %4564, %originalBB1232alteredBB
  %4573 = load i64, i64* %29, align 8, !dbg !3004
  %4574 = load i64, i64* %20, align 8, !dbg !3006
  %4575 = icmp ult i64 %4573, %4574, !dbg !3007
  %4576 = load i32, i32* @x.37
  %4577 = load i32, i32* @y.38
  %4578 = sub i32 %4576, 1
  %4579 = mul i32 %4576, %4578
  %4580 = urem i32 %4579, 2
  %4581 = icmp eq i32 %4580, 0
  %4582 = icmp slt i32 %4577, 10
  %4583 = or i1 %4581, %4582
  br i1 %4583, label %originalBBpart21234, label %originalBB1232alteredBB

originalBBpart21234:                              ; preds = %originalBB1232
  br i1 %4575, label %4584, label %4604, !dbg !3008

4584:                                             ; preds = %originalBBpart21234
  %4585 = load i32, i32* @x.37
  %4586 = load i32, i32* @y.38
  %4587 = sub i32 %4585, 1
  %4588 = mul i32 %4585, %4587
  %4589 = urem i32 %4588, 2
  %4590 = icmp eq i32 %4589, 0
  %4591 = icmp slt i32 %4586, 10
  %4592 = or i1 %4590, %4591
  br i1 %4592, label %originalBB1236, label %originalBB1236alteredBB

originalBB1236:                                   ; preds = %4584, %originalBB1236alteredBB
  %4593 = load i8*, i8** %19, align 8, !dbg !3009
  %4594 = load i64, i64* %29, align 8, !dbg !3010
  %4595 = getelementptr inbounds i8, i8* %4593, i64 %4594, !dbg !3009
  store i8 0, i8* %4595, align 1, !dbg !3011
  %4596 = load i32, i32* @x.37
  %4597 = load i32, i32* @y.38
  %4598 = sub i32 %4596, 1
  %4599 = mul i32 %4596, %4598
  %4600 = urem i32 %4599, 2
  %4601 = icmp eq i32 %4600, 0
  %4602 = icmp slt i32 %4597, 10
  %4603 = or i1 %4601, %4602
  br i1 %4603, label %originalBBpart21238, label %originalBB1236alteredBB

originalBBpart21238:                              ; preds = %originalBB1236
  br label %4604, !dbg !3009

4604:                                             ; preds = %originalBBpart21238, %originalBBpart21234
  %4605 = load i64, i64* %29, align 8, !dbg !3012
  store i64 %4605, i64* %18, align 8, !dbg !3013
  br label %4640, !dbg !3013

4606:                                             ; preds = %originalBBpart21182, %3740, %originalBBpart2757, %originalBBpart2671, %originalBBpart2525, %originalBBpart2517, %originalBBpart2493, %1715, %1319, %1226, %originalBBpart2147, %originalBBpart2135
  call void @llvm.dbg.label(metadata !3014), !dbg !3015
  %4607 = load i32, i32* %23, align 4, !dbg !3016
  %4608 = icmp eq i32 %4607, 2, !dbg !3018
  br i1 %4608, label %4609, label %4629, !dbg !3019

4609:                                             ; preds = %4606
  %4610 = load i32, i32* @x.37
  %4611 = load i32, i32* @y.38
  %4612 = sub i32 %4610, 1
  %4613 = mul i32 %4610, %4612
  %4614 = urem i32 %4613, 2
  %4615 = icmp eq i32 %4614, 0
  %4616 = icmp slt i32 %4611, 10
  %4617 = or i1 %4615, %4616
  br i1 %4617, label %originalBB1240, label %originalBB1240alteredBB

originalBB1240:                                   ; preds = %4609, %originalBB1240alteredBB
  %4618 = load i8, i8* %33, align 1, !dbg !3020
  %4619 = trunc i8 %4618 to i1, !dbg !3020
  %4620 = load i32, i32* @x.37
  %4621 = load i32, i32* @y.38
  %4622 = sub i32 %4620, 1
  %4623 = mul i32 %4620, %4622
  %4624 = urem i32 %4623, 2
  %4625 = icmp eq i32 %4624, 0
  %4626 = icmp slt i32 %4621, 10
  %4627 = or i1 %4625, %4626
  br i1 %4627, label %originalBBpart21242, label %originalBB1240alteredBB

originalBBpart21242:                              ; preds = %originalBB1240
  br i1 %4619, label %4628, label %4629, !dbg !3021

4628:                                             ; preds = %originalBBpart21242
  store i32 4, i32* %23, align 4, !dbg !3022
  br label %4629, !dbg !3023

4629:                                             ; preds = %4628, %originalBBpart21242, %4606
  %4630 = load i8*, i8** %19, align 8, !dbg !3024
  %4631 = load i64, i64* %20, align 8, !dbg !3025
  %4632 = load i8*, i8** %21, align 8, !dbg !3026
  %4633 = load i64, i64* %22, align 8, !dbg !3027
  %4634 = load i32, i32* %23, align 4, !dbg !3028
  %4635 = load i32, i32* %24, align 4, !dbg !3029
  %4636 = and i32 %4635, -3, !dbg !3030
  %4637 = load i8*, i8** %26, align 8, !dbg !3031
  %4638 = load i8*, i8** %27, align 8, !dbg !3032
  %4639 = call i64 @quotearg_buffer_restyled(i8* %4630, i64 %4631, i8* %4632, i64 %4633, i32 %4634, i32 %4636, i32* null, i8* %4637, i8* %4638), !dbg !3033
  store i64 %4639, i64* %18, align 8, !dbg !3034
  br label %4640, !dbg !3034

4640:                                             ; preds = %4629, %4604, %originalBBpart21194
  %4641 = load i32, i32* @x.37
  %4642 = load i32, i32* @y.38
  %4643 = sub i32 %4641, 1
  %4644 = mul i32 %4641, %4643
  %4645 = urem i32 %4644, 2
  %4646 = icmp eq i32 %4645, 0
  %4647 = icmp slt i32 %4642, 10
  %4648 = or i1 %4646, %4647
  br i1 %4648, label %originalBB1244, label %originalBB1244alteredBB

originalBB1244:                                   ; preds = %4640, %originalBB1244alteredBB
  %4649 = load i64, i64* %18, align 8, !dbg !3035
  %4650 = load i32, i32* @x.37
  %4651 = load i32, i32* @y.38
  %4652 = sub i32 %4650, 1
  %4653 = mul i32 %4650, %4652
  %4654 = urem i32 %4653, 2
  %4655 = icmp eq i32 %4654, 0
  %4656 = icmp slt i32 %4651, 10
  %4657 = or i1 %4655, %4656
  br i1 %4657, label %originalBBpart21246, label %originalBB1244alteredBB

originalBBpart21246:                              ; preds = %originalBB1244
  ret i64 %4649, !dbg !3035

originalBBalteredBB:                              ; preds = %originalBB, %9
  %4658 = alloca i64, align 8
  %4659 = alloca i8*, align 8
  %4660 = alloca i64, align 8
  %4661 = alloca i8*, align 8
  %4662 = alloca i64, align 8
  %4663 = alloca i32, align 4
  %4664 = alloca i32, align 4
  %4665 = alloca i32*, align 8
  %4666 = alloca i8*, align 8
  %4667 = alloca i8*, align 8
  %4668 = alloca i64, align 8
  %4669 = alloca i64, align 8
  %4670 = alloca i64, align 8
  %4671 = alloca i8*, align 8
  %4672 = alloca i64, align 8
  %4673 = alloca i8, align 1
  %4674 = alloca i8, align 1
  %4675 = alloca i8, align 1
  %4676 = alloca i8, align 1
  %4677 = alloca i8, align 1
  %4678 = alloca i8, align 1
  %4679 = alloca i8, align 1
  %4680 = alloca i8, align 1
  %4681 = alloca i8, align 1
  %4682 = alloca i8, align 1
  %4683 = alloca i8, align 1
  %4684 = alloca i64, align 8
  %4685 = alloca i8, align 1
  %4686 = alloca %struct.__mbstate_t, align 4
  %4687 = alloca i32, align 4
  %4688 = alloca i64, align 8
  %4689 = alloca i64, align 8
  %4690 = alloca i64, align 8
  store i8* %0, i8** %4659, align 8
  call void @llvm.dbg.declare(metadata i8** %4659, metadata !3036, metadata !DIExpression()), !dbg !2156
  store i64 %1, i64* %4660, align 8
  call void @llvm.dbg.declare(metadata i64* %4660, metadata !3068, metadata !DIExpression()), !dbg !2158
  store i8* %2, i8** %4661, align 8
  call void @llvm.dbg.declare(metadata i8** %4661, metadata !3069, metadata !DIExpression()), !dbg !2160
  store i64 %3, i64* %4662, align 8
  call void @llvm.dbg.declare(metadata i64* %4662, metadata !3070, metadata !DIExpression()), !dbg !2162
  store i32 %4, i32* %4663, align 4
  call void @llvm.dbg.declare(metadata i32* %4663, metadata !3071, metadata !DIExpression()), !dbg !2164
  store i32 %5, i32* %4664, align 4
  call void @llvm.dbg.declare(metadata i32* %4664, metadata !3072, metadata !DIExpression()), !dbg !2166
  store i32* %6, i32** %4665, align 8
  call void @llvm.dbg.declare(metadata i32** %4665, metadata !3073, metadata !DIExpression()), !dbg !2168
  store i8* %7, i8** %4666, align 8
  call void @llvm.dbg.declare(metadata i8** %4666, metadata !3074, metadata !DIExpression()), !dbg !2170
  store i8* %8, i8** %4667, align 8
  call void @llvm.dbg.declare(metadata i8** %4667, metadata !3075, metadata !DIExpression()), !dbg !2172
  call void @llvm.dbg.declare(metadata i64* %4668, metadata !3076, metadata !DIExpression()), !dbg !2174
  call void @llvm.dbg.declare(metadata i64* %4669, metadata !3077, metadata !DIExpression()), !dbg !2176
  store i64 0, i64* %4669, align 8, !dbg !2176
  call void @llvm.dbg.declare(metadata i64* %4670, metadata !3078, metadata !DIExpression()), !dbg !2178
  store i64 0, i64* %4670, align 8, !dbg !2178
  call void @llvm.dbg.declare(metadata i8** %4671, metadata !3079, metadata !DIExpression()), !dbg !2180
  store i8* null, i8** %4671, align 8, !dbg !2180
  call void @llvm.dbg.declare(metadata i64* %4672, metadata !3080, metadata !DIExpression()), !dbg !2182
  store i64 0, i64* %4672, align 8, !dbg !2182
  call void @llvm.dbg.declare(metadata i8* %4673, metadata !3081, metadata !DIExpression()), !dbg !2184
  store i8 0, i8* %4673, align 1, !dbg !2184
  call void @llvm.dbg.declare(metadata i8* %4674, metadata !3082, metadata !DIExpression()), !dbg !2186
  %4691 = call i64 @__ctype_get_mb_cur_max() #10, !dbg !2187
  %4692 = icmp eq i64 %4691, 1, !dbg !2188
  %4693 = zext i1 %4692 to i8, !dbg !2186
  store i8 %4693, i8* %4674, align 1, !dbg !2186
  call void @llvm.dbg.declare(metadata i8* %4675, metadata !3083, metadata !DIExpression()), !dbg !2190
  %4694 = load i32, i32* %4664, align 4, !dbg !2191
  %_ = sub i32 0, %4694
  %gen = add i32 %_, 2
  %_1 = sub i32 0, %4694
  %gen2 = add i32 %_1, 2
  %_3 = sub i32 %4694, 2
  %gen4 = mul i32 %_3, 2
  %_5 = sub i32 0, %4694
  %gen6 = add i32 %_5, 2
  %4695 = and i32 %4694, 2, !dbg !2192
  %4696 = icmp ne i32 %4695, 0, !dbg !2193
  %4697 = zext i1 %4696 to i8, !dbg !2190
  store i8 %4697, i8* %4675, align 1, !dbg !2190
  call void @llvm.dbg.declare(metadata i8* %4676, metadata !3084, metadata !DIExpression()), !dbg !2195
  store i8 0, i8* %4676, align 1, !dbg !2195
  call void @llvm.dbg.declare(metadata i8* %4677, metadata !3085, metadata !DIExpression()), !dbg !2197
  store i8 0, i8* %4677, align 1, !dbg !2197
  call void @llvm.dbg.declare(metadata i8* %4678, metadata !3086, metadata !DIExpression()), !dbg !2199
  store i8 1, i8* %4678, align 1, !dbg !2199
  br label %originalBB

originalBB7alteredBB:                             ; preds = %originalBB7, %69
  %4698 = load i8, i8* %35, align 1, !dbg !2209
  %4699 = trunc i8 %4698 to i1, !dbg !2209
  br label %originalBB7

originalBB11alteredBB:                            ; preds = %originalBB11, %88
  br label %originalBB11

originalBB15alteredBB:                            ; preds = %originalBB15, %105
  %4700 = load i64, i64* %29, align 8, !dbg !2213
  %4701 = load i64, i64* %20, align 8, !dbg !2213
  %4702 = icmp ult i64 %4700, %4701, !dbg !2213
  br label %originalBB15

originalBB19alteredBB:                            ; preds = %originalBB19, %132
  br label %originalBB19

originalBB23alteredBB:                            ; preds = %originalBB23, %150
  store i8 1, i8* %33, align 1, !dbg !2221
  store i8 0, i8* %35, align 1, !dbg !2222
  br label %originalBB23

originalBB27alteredBB:                            ; preds = %originalBB27, %167
  %4703 = load i32, i32* %23, align 4, !dbg !2224
  %4704 = icmp ne i32 %4703, 10, !dbg !2227
  br label %originalBB27

originalBB31alteredBB:                            ; preds = %originalBB31, %191
  %4705 = load i8, i8* %35, align 1, !dbg !2237
  %4706 = trunc i8 %4705 to i1, !dbg !2237
  br label %originalBB31

originalBB35alteredBB:                            ; preds = %originalBB35, %212
  %4707 = load i8*, i8** %31, align 8, !dbg !2244
  %4708 = load i8, i8* %4707, align 1, !dbg !2246
  %4709 = icmp ne i8 %4708, 0, !dbg !2247
  br label %originalBB35

originalBB39alteredBB:                            ; preds = %originalBB39, %232
  br label %originalBB39

originalBB43alteredBB:                            ; preds = %originalBB43, %249
  %4710 = load i64, i64* %29, align 8, !dbg !2249
  %4711 = load i64, i64* %20, align 8, !dbg !2249
  %4712 = icmp ult i64 %4710, %4711, !dbg !2249
  br label %originalBB43

originalBB47alteredBB:                            ; preds = %originalBB47, %275
  %4713 = load i64, i64* %29, align 8, !dbg !2252
  %_48 = sub i64 %4713, 1
  %gen49 = mul i64 %_48, 1
  %_50 = sub i64 0, %4713
  %gen51 = add i64 %_50, 1
  %_52 = sub i64 %4713, 1
  %gen53 = mul i64 %_52, 1
  %_54 = shl i64 %4713, 1
  %_55 = sub i64 0, %4713
  %gen56 = add i64 %_55, 1
  %4714 = add i64 %4713, 1, !dbg !2252
  store i64 %4714, i64* %29, align 8, !dbg !2252
  br label %originalBB47

originalBB60alteredBB:                            ; preds = %originalBB60, %294
  br label %originalBB60

originalBB64alteredBB:                            ; preds = %originalBB64, %311
  %4715 = load i8*, i8** %31, align 8, !dbg !2253
  %4716 = getelementptr inbounds i8, i8* %4715, i32 1, !dbg !2253
  store i8* %4716, i8** %31, align 8, !dbg !2253
  br label %originalBB64

originalBB68alteredBB:                            ; preds = %originalBB68, %331
  store i8 1, i8* %33, align 1, !dbg !2257
  %4717 = load i8*, i8** %27, align 8, !dbg !2258
  store i8* %4717, i8** %31, align 8, !dbg !2259
  %4718 = load i8*, i8** %31, align 8, !dbg !2260
  %4719 = call i64 @strlen(i8* %4718) #13, !dbg !2261
  store i64 %4719, i64* %32, align 8, !dbg !2262
  br label %originalBB68

originalBB72alteredBB:                            ; preds = %originalBB72, %353
  %4720 = load i8, i8* %35, align 1, !dbg !2268
  %4721 = trunc i8 %4720 to i1, !dbg !2268
  br label %originalBB72

originalBB76alteredBB:                            ; preds = %originalBB76, %374
  store i32 2, i32* %23, align 4, !dbg !2274
  %4722 = load i8, i8* %35, align 1, !dbg !2275
  %4723 = trunc i8 %4722 to i1, !dbg !2275
  br label %originalBB76

originalBB80alteredBB:                            ; preds = %originalBB80, %393
  br label %originalBB80

originalBB84alteredBB:                            ; preds = %originalBB84, %414
  %4724 = load i8*, i8** %19, align 8, !dbg !2279
  %4725 = load i64, i64* %29, align 8, !dbg !2279
  %4726 = getelementptr inbounds i8, i8* %4724, i64 %4725, !dbg !2279
  store i8 39, i8* %4726, align 1, !dbg !2279
  br label %originalBB84

originalBB88alteredBB:                            ; preds = %originalBB88, %434
  %4727 = load i64, i64* %29, align 8, !dbg !2282
  %_89 = sub i64 %4727, 1
  %gen90 = mul i64 %_89, 1
  %_91 = shl i64 %4727, 1
  %_92 = shl i64 %4727, 1
  %_93 = sub i64 %4727, 1
  %gen94 = mul i64 %_93, 1
  %_95 = sub i64 0, %4727
  %gen96 = add i64 %_95, 1
  %4728 = add i64 %4727, 1, !dbg !2282
  store i64 %4728, i64* %29, align 8, !dbg !2282
  br label %originalBB88

originalBB100alteredBB:                           ; preds = %originalBB100, %453
  br label %originalBB100

originalBB104alteredBB:                           ; preds = %originalBB104, %472
  call void @abort() #12, !dbg !2288
  br label %originalBB104

originalBB108alteredBB:                           ; preds = %originalBB108, %489
  store i64 0, i64* %28, align 8, !dbg !2289
  br label %originalBB108

originalBB112alteredBB:                           ; preds = %originalBB112, %509
  %4729 = load i8*, i8** %21, align 8, !dbg !2295
  %4730 = load i64, i64* %28, align 8, !dbg !2296
  %4731 = getelementptr inbounds i8, i8* %4729, i64 %4730, !dbg !2295
  %4732 = load i8, i8* %4731, align 1, !dbg !2295
  %4733 = sext i8 %4732 to i32, !dbg !2295
  %4734 = icmp eq i32 %4733, 0, !dbg !2297
  %4735 = zext i1 %4734 to i32, !dbg !2297
  br label %originalBB112

originalBB116alteredBB:                           ; preds = %originalBB116, %538
  %4736 = icmp ne i32 %539, 0, !dbg !2301
  %_117 = sub i1 false, %4736
  %gen118 = add i1 %_117, true
  %_119 = shl i1 %4736, true
  %_120 = sub i1 false, %4736
  %gen121 = add i1 %_120, true
  %4737 = xor i1 %4736, true, !dbg !2301
  br label %originalBB116

originalBB125alteredBB:                           ; preds = %originalBB125, %581
  %4738 = icmp ule i64 %570, %582, !dbg !2334
  br label %originalBB125

originalBB129alteredBB:                           ; preds = %originalBB129, %608
  %4739 = load i8, i8* %35, align 1, !dbg !2344
  %4740 = trunc i8 %4739 to i1, !dbg !2344
  br label %originalBB129

originalBB133alteredBB:                           ; preds = %originalBB133, %627
  br label %originalBB133

originalBB137alteredBB:                           ; preds = %originalBB137, %644
  store i8 1, i8* %41, align 1, !dbg !2349
  br label %originalBB137

originalBB141alteredBB:                           ; preds = %originalBB141, %672
  %4741 = load i8, i8* %35, align 1, !dbg !2362
  %4742 = trunc i8 %4741 to i1, !dbg !2362
  br label %originalBB141

originalBB145alteredBB:                           ; preds = %originalBB145, %691
  br label %originalBB145

originalBB149alteredBB:                           ; preds = %originalBB149, %708
  store i8 1, i8* %42, align 1, !dbg !2365
  %4743 = load i32, i32* %23, align 4, !dbg !2366
  %4744 = icmp eq i32 %4743, 2, !dbg !2366
  br label %originalBB149

originalBB153alteredBB:                           ; preds = %originalBB153, %727
  %4745 = load i8, i8* %36, align 1, !dbg !2366
  %4746 = trunc i8 %4745 to i1, !dbg !2366
  br label %originalBB153

originalBB157alteredBB:                           ; preds = %originalBB157, %746
  br label %originalBB157

originalBB161alteredBB:                           ; preds = %originalBB161, %771
  %4747 = load i64, i64* %29, align 8, !dbg !2373
  %_162 = sub i64 0, %4747
  %gen163 = add i64 %_162, 1
  %_164 = sub i64 0, %4747
  %gen165 = add i64 %_164, 1
  %_166 = sub i64 %4747, 1
  %gen167 = mul i64 %_166, 1
  %4748 = add i64 %4747, 1, !dbg !2373
  store i64 %4748, i64* %29, align 8, !dbg !2373
  br label %originalBB161

originalBB171alteredBB:                           ; preds = %originalBB171, %790
  br label %originalBB171

originalBB175alteredBB:                           ; preds = %originalBB175, %811
  %4749 = load i8*, i8** %19, align 8, !dbg !2374
  %4750 = load i64, i64* %29, align 8, !dbg !2374
  %4751 = getelementptr inbounds i8, i8* %4749, i64 %4750, !dbg !2374
  store i8 36, i8* %4751, align 1, !dbg !2374
  br label %originalBB175

originalBB179alteredBB:                           ; preds = %originalBB179, %831
  %4752 = load i64, i64* %29, align 8, !dbg !2377
  %_180 = sub i64 0, %4752
  %gen181 = add i64 %_180, 1
  %_182 = sub i64 %4752, 1
  %gen183 = mul i64 %_182, 1
  %_184 = sub i64 %4752, 1
  %gen185 = mul i64 %_184, 1
  %_186 = sub i64 0, %4752
  %gen187 = add i64 %_186, 1
  %_188 = shl i64 %4752, 1
  %_189 = sub i64 0, %4752
  %gen190 = add i64 %_189, 1
  %_191 = sub i64 0, %4752
  %gen192 = add i64 %_191, 1
  %4753 = add i64 %4752, 1, !dbg !2377
  store i64 %4753, i64* %29, align 8, !dbg !2377
  br label %originalBB179

originalBB196alteredBB:                           ; preds = %originalBB196, %850
  br label %originalBB196

originalBB200alteredBB:                           ; preds = %originalBB200, %871
  %4754 = load i8*, i8** %19, align 8, !dbg !2378
  %4755 = load i64, i64* %29, align 8, !dbg !2378
  %4756 = getelementptr inbounds i8, i8* %4754, i64 %4755, !dbg !2378
  store i8 39, i8* %4756, align 1, !dbg !2378
  br label %originalBB200

originalBB204alteredBB:                           ; preds = %originalBB204, %891
  %4757 = load i64, i64* %29, align 8, !dbg !2381
  %_205 = sub i64 0, %4757
  %gen206 = add i64 %_205, 1
  %_207 = sub i64 0, %4757
  %gen208 = add i64 %_207, 1
  %4758 = add i64 %4757, 1, !dbg !2381
  store i64 %4758, i64* %29, align 8, !dbg !2381
  br label %originalBB204

originalBB212alteredBB:                           ; preds = %originalBB212, %910
  store i8 1, i8* %36, align 1, !dbg !2368
  br label %originalBB212

originalBB216alteredBB:                           ; preds = %originalBB216, %928
  %4759 = load i64, i64* %29, align 8, !dbg !2382
  %4760 = load i64, i64* %20, align 8, !dbg !2382
  %4761 = icmp ult i64 %4759, %4760, !dbg !2382
  br label %originalBB216

originalBB220alteredBB:                           ; preds = %originalBB220, %955
  br label %originalBB220

originalBB224alteredBB:                           ; preds = %originalBB224, %972
  %4762 = load i32, i32* %23, align 4, !dbg !2386
  %4763 = icmp ne i32 %4762, 2, !dbg !2388
  br label %originalBB224

originalBB228alteredBB:                           ; preds = %originalBB228, %1012
  br label %originalBB228

originalBB232alteredBB:                           ; preds = %originalBB232, %1029
  %4764 = load i64, i64* %29, align 8, !dbg !2407
  %4765 = load i64, i64* %20, align 8, !dbg !2407
  %4766 = icmp ult i64 %4764, %4765, !dbg !2407
  br label %originalBB232

originalBB236alteredBB:                           ; preds = %originalBB236, %1053
  %4767 = load i64, i64* %29, align 8, !dbg !2410
  %_237 = sub i64 %4767, 1
  %gen238 = mul i64 %_237, 1
  %_239 = sub i64 %4767, 1
  %gen240 = mul i64 %_239, 1
  %_241 = sub i64 %4767, 1
  %gen242 = mul i64 %_241, 1
  %_243 = sub i64 0, %4767
  %gen244 = add i64 %_243, 1
  %_245 = sub i64 %4767, 1
  %gen246 = mul i64 %_245, 1
  %_247 = sub i64 0, %4767
  %gen248 = add i64 %_247, 1
  %_249 = sub i64 %4767, 1
  %gen250 = mul i64 %_249, 1
  %_251 = sub i64 %4767, 1
  %gen252 = mul i64 %_251, 1
  %4768 = add i64 %4767, 1, !dbg !2410
  store i64 %4768, i64* %29, align 8, !dbg !2410
  br label %originalBB236

originalBB256alteredBB:                           ; preds = %originalBB256, %1072
  br label %originalBB256

originalBB260alteredBB:                           ; preds = %originalBB260, %1093
  %4769 = load i8*, i8** %19, align 8, !dbg !2412
  %4770 = load i64, i64* %29, align 8, !dbg !2412
  %4771 = getelementptr inbounds i8, i8* %4769, i64 %4770, !dbg !2412
  store i8 48, i8* %4771, align 1, !dbg !2412
  br label %originalBB260

originalBB264alteredBB:                           ; preds = %originalBB264, %1113
  %4772 = load i64, i64* %29, align 8, !dbg !2415
  %_265 = shl i64 %4772, 1
  %_266 = sub i64 %4772, 1
  %gen267 = mul i64 %_266, 1
  %_268 = sub i64 %4772, 1
  %gen269 = mul i64 %_268, 1
  %_270 = sub i64 %4772, 1
  %gen271 = mul i64 %_270, 1
  %4773 = add i64 %4772, 1, !dbg !2415
  store i64 %4773, i64* %29, align 8, !dbg !2415
  br label %originalBB264

originalBB275alteredBB:                           ; preds = %originalBB275, %1132
  br label %originalBB275

originalBB279alteredBB:                           ; preds = %originalBB279, %1149
  store i8 48, i8* %39, align 1, !dbg !2417
  br label %originalBB279

originalBB283alteredBB:                           ; preds = %originalBB283, %1166
  %4774 = load i32, i32* %24, align 4, !dbg !2419
  %_284 = sub i32 0, %4774
  %gen285 = add i32 %_284, 1
  %_286 = shl i32 %4774, 1
  %_287 = shl i32 %4774, 1
  %_288 = sub i32 0, %4774
  %gen289 = add i32 %_288, 1
  %4775 = and i32 %4774, 1, !dbg !2421
  %4776 = icmp ne i32 %4775, 0, !dbg !2421
  br label %originalBB283

originalBB293alteredBB:                           ; preds = %originalBB293, %1187
  br label %originalBB293

originalBB297alteredBB:                           ; preds = %originalBB297, %1207
  %4777 = load i8, i8* %35, align 1, !dbg !2427
  %4778 = trunc i8 %4777 to i1, !dbg !2427
  br label %originalBB297

originalBB301alteredBB:                           ; preds = %originalBB301, %1227
  br label %originalBB301

originalBB305alteredBB:                           ; preds = %originalBB305, %1248
  %4779 = load i64, i64* %28, align 8, !dbg !2437
  %_306 = sub i64 0, %4779
  %gen307 = add i64 %_306, 2
  %_308 = sub i64 %4779, 2
  %gen309 = mul i64 %_308, 2
  %_310 = sub i64 %4779, 2
  %gen311 = mul i64 %_310, 2
  %_312 = shl i64 %4779, 2
  %_313 = shl i64 %4779, 2
  %_314 = shl i64 %4779, 2
  %_315 = sub i64 %4779, 2
  %gen316 = mul i64 %_315, 2
  %4780 = add i64 %4779, 2, !dbg !2438
  %4781 = load i64, i64* %22, align 8, !dbg !2439
  %4782 = icmp ult i64 %4780, %4781, !dbg !2440
  br label %originalBB305

originalBB320alteredBB:                           ; preds = %originalBB320, %1269
  %4783 = load i8*, i8** %21, align 8, !dbg !2442
  %4784 = load i64, i64* %28, align 8, !dbg !2443
  %_321 = shl i64 %4784, 1
  %_322 = shl i64 %4784, 1
  %_323 = sub i64 0, %4784
  %gen324 = add i64 %_323, 1
  %_325 = sub i64 0, %4784
  %gen326 = add i64 %_325, 1
  %_327 = sub i64 0, %4784
  %gen328 = add i64 %_327, 1
  %4785 = add i64 %4784, 1, !dbg !2444
  %4786 = getelementptr inbounds i8, i8* %4783, i64 %4785, !dbg !2442
  %4787 = load i8, i8* %4786, align 1, !dbg !2442
  %4788 = sext i8 %4787 to i32, !dbg !2442
  %4789 = icmp eq i32 %4788, 63, !dbg !2445
  br label %originalBB320

originalBB332alteredBB:                           ; preds = %originalBB332, %1293
  %4790 = load i8*, i8** %21, align 8, !dbg !2447
  %4791 = load i64, i64* %28, align 8, !dbg !2448
  %_333 = sub i64 %4791, 2
  %gen334 = mul i64 %_333, 2
  %_335 = sub i64 %4791, 2
  %gen336 = mul i64 %_335, 2
  %_337 = sub i64 0, %4791
  %gen338 = add i64 %_337, 2
  %_339 = sub i64 0, %4791
  %gen340 = add i64 %_339, 2
  %4792 = add i64 %4791, 2, !dbg !2449
  %4793 = getelementptr inbounds i8, i8* %4790, i64 %4792, !dbg !2447
  %4794 = load i8, i8* %4793, align 1, !dbg !2447
  %4795 = sext i8 %4794 to i32, !dbg !2447
  br label %originalBB332

originalBB344alteredBB:                           ; preds = %originalBB344, %1320
  %4796 = load i8*, i8** %21, align 8, !dbg !2456
  %4797 = load i64, i64* %28, align 8, !dbg !2457
  %_345 = sub i64 0, %4797
  %gen346 = add i64 %_345, 2
  %_347 = sub i64 %4797, 2
  %gen348 = mul i64 %_347, 2
  %_349 = sub i64 %4797, 2
  %gen350 = mul i64 %_349, 2
  %_351 = sub i64 0, %4797
  %gen352 = add i64 %_351, 2
  %4798 = add i64 %4797, 2, !dbg !2458
  %4799 = getelementptr inbounds i8, i8* %4796, i64 %4798, !dbg !2456
  %4800 = load i8, i8* %4799, align 1, !dbg !2456
  store i8 %4800, i8* %39, align 1, !dbg !2459
  %4801 = load i64, i64* %28, align 8, !dbg !2460
  %_353 = sub i64 %4801, 2
  %gen354 = mul i64 %_353, 2
  %_355 = sub i64 0, %4801
  %gen356 = add i64 %_355, 2
  %_357 = sub i64 %4801, 2
  %gen358 = mul i64 %_357, 2
  %_359 = sub i64 0, %4801
  %gen360 = add i64 %_359, 2
  %_361 = sub i64 0, %4801
  %gen362 = add i64 %_361, 2
  %_363 = sub i64 0, %4801
  %gen364 = add i64 %_363, 2
  %_365 = shl i64 %4801, 2
  %4802 = add i64 %4801, 2, !dbg !2460
  store i64 %4802, i64* %28, align 8, !dbg !2460
  br label %originalBB344

originalBB369alteredBB:                           ; preds = %originalBB369, %1344
  %4803 = load i64, i64* %29, align 8, !dbg !2462
  %4804 = load i64, i64* %20, align 8, !dbg !2462
  %4805 = icmp ult i64 %4803, %4804, !dbg !2462
  br label %originalBB369

originalBB373alteredBB:                           ; preds = %originalBB373, %1364
  %4806 = load i8*, i8** %19, align 8, !dbg !2462
  %4807 = load i64, i64* %29, align 8, !dbg !2462
  %4808 = getelementptr inbounds i8, i8* %4806, i64 %4807, !dbg !2462
  store i8 63, i8* %4808, align 1, !dbg !2462
  br label %originalBB373

originalBB377alteredBB:                           ; preds = %originalBB377, %1384
  %4809 = load i64, i64* %29, align 8, !dbg !2465
  %_378 = sub i64 %4809, 1
  %gen379 = mul i64 %_378, 1
  %_380 = sub i64 %4809, 1
  %gen381 = mul i64 %_380, 1
  %_382 = sub i64 %4809, 1
  %gen383 = mul i64 %_382, 1
  %_384 = shl i64 %4809, 1
  %4810 = add i64 %4809, 1, !dbg !2465
  store i64 %4810, i64* %29, align 8, !dbg !2465
  br label %originalBB377

originalBB388alteredBB:                           ; preds = %originalBB388, %1403
  br label %originalBB388

originalBB392alteredBB:                           ; preds = %originalBB392, %1420
  %4811 = load i64, i64* %29, align 8, !dbg !2467
  %4812 = load i64, i64* %20, align 8, !dbg !2467
  %4813 = icmp ult i64 %4811, %4812, !dbg !2467
  br label %originalBB392

originalBB396alteredBB:                           ; preds = %originalBB396, %1444
  %4814 = load i64, i64* %29, align 8, !dbg !2470
  %_397 = shl i64 %4814, 1
  %_398 = sub i64 0, %4814
  %gen399 = add i64 %_398, 1
  %_400 = sub i64 %4814, 1
  %gen401 = mul i64 %_400, 1
  %_402 = sub i64 %4814, 1
  %gen403 = mul i64 %_402, 1
  %_404 = sub i64 0, %4814
  %gen405 = add i64 %_404, 1
  %4815 = add i64 %4814, 1, !dbg !2470
  store i64 %4815, i64* %29, align 8, !dbg !2470
  br label %originalBB396

originalBB409alteredBB:                           ; preds = %originalBB409, %1463
  br label %originalBB409

originalBB413alteredBB:                           ; preds = %originalBB413, %1480
  %4816 = load i64, i64* %29, align 8, !dbg !2472
  %4817 = load i64, i64* %20, align 8, !dbg !2472
  %4818 = icmp ult i64 %4816, %4817, !dbg !2472
  br label %originalBB413

originalBB417alteredBB:                           ; preds = %originalBB417, %1500
  %4819 = load i8*, i8** %19, align 8, !dbg !2472
  %4820 = load i64, i64* %29, align 8, !dbg !2472
  %4821 = getelementptr inbounds i8, i8* %4819, i64 %4820, !dbg !2472
  store i8 34, i8* %4821, align 1, !dbg !2472
  br label %originalBB417

originalBB421alteredBB:                           ; preds = %originalBB421, %1520
  %4822 = load i64, i64* %29, align 8, !dbg !2475
  %_422 = sub i64 %4822, 1
  %gen423 = mul i64 %_422, 1
  %_424 = sub i64 0, %4822
  %gen425 = add i64 %_424, 1
  %_426 = sub i64 %4822, 1
  %gen427 = mul i64 %_426, 1
  %4823 = add i64 %4822, 1, !dbg !2475
  store i64 %4823, i64* %29, align 8, !dbg !2475
  br label %originalBB421

originalBB431alteredBB:                           ; preds = %originalBB431, %1540
  %4824 = load i64, i64* %29, align 8, !dbg !2477
  %4825 = load i64, i64* %20, align 8, !dbg !2477
  %4826 = icmp ult i64 %4824, %4825, !dbg !2477
  br label %originalBB431

originalBB435alteredBB:                           ; preds = %originalBB435, %1560
  %4827 = load i8*, i8** %19, align 8, !dbg !2477
  %4828 = load i64, i64* %29, align 8, !dbg !2477
  %4829 = getelementptr inbounds i8, i8* %4827, i64 %4828, !dbg !2477
  store i8 63, i8* %4829, align 1, !dbg !2477
  br label %originalBB435

originalBB439alteredBB:                           ; preds = %originalBB439, %1583
  br label %originalBB439

originalBB443alteredBB:                           ; preds = %originalBB443, %1601
  br label %originalBB443

originalBB447alteredBB:                           ; preds = %originalBB447, %1618
  br label %originalBB447

originalBB451alteredBB:                           ; preds = %originalBB451, %1636
  br label %originalBB451

originalBB455alteredBB:                           ; preds = %originalBB455, %1656
  store i8 110, i8* %40, align 1, !dbg !2493
  br label %originalBB455

originalBB459alteredBB:                           ; preds = %originalBB459, %1674
  store i8 116, i8* %40, align 1, !dbg !2497
  br label %originalBB459

originalBB463alteredBB:                           ; preds = %originalBB463, %1692
  %4830 = load i8, i8* %39, align 1, !dbg !2501
  store i8 %4830, i8* %40, align 1, !dbg !2502
  %4831 = load i32, i32* %23, align 4, !dbg !2503
  %4832 = icmp eq i32 %4831, 2, !dbg !2505
  br label %originalBB463

originalBB467alteredBB:                           ; preds = %originalBB467, %1716
  br label %originalBB467

originalBB471alteredBB:                           ; preds = %originalBB471, %1733
  %4833 = load i8, i8* %33, align 1, !dbg !2513
  %4834 = trunc i8 %4833 to i1, !dbg !2513
  br label %originalBB471

originalBB475alteredBB:                           ; preds = %originalBB475, %1752
  %4835 = load i8, i8* %35, align 1, !dbg !2516
  %4836 = trunc i8 %4835 to i1, !dbg !2516
  br label %originalBB475

originalBB479alteredBB:                           ; preds = %originalBB479, %1771
  %4837 = load i64, i64* %32, align 8, !dbg !2518
  %4838 = icmp ne i64 %4837, 0, !dbg !2518
  br label %originalBB479

originalBB483alteredBB:                           ; preds = %originalBB483, %1790
  br label %originalBB483

originalBB487alteredBB:                           ; preds = %originalBB487, %1808
  %4839 = load i32, i32* %23, align 4, !dbg !2523
  %4840 = icmp eq i32 %4839, 2, !dbg !2525
  br label %originalBB487

originalBB491alteredBB:                           ; preds = %originalBB491, %1830
  br label %originalBB491

originalBB495alteredBB:                           ; preds = %originalBB495, %1851
  %4841 = load i8, i8* %40, align 1, !dbg !2535
  store i8 %4841, i8* %39, align 1, !dbg !2537
  br label %originalBB495

originalBB499alteredBB:                           ; preds = %originalBB499, %1869
  br label %originalBB499

originalBB503alteredBB:                           ; preds = %originalBB503, %1895
  %4842 = load i64, i64* %22, align 8, !dbg !2546
  %4843 = icmp eq i64 %4842, 1, !dbg !2547
  br label %originalBB503

originalBB507alteredBB:                           ; preds = %originalBB507, %1914
  br label %originalBB507

originalBB511alteredBB:                           ; preds = %originalBB511, %1935
  br label %originalBB511

originalBB515alteredBB:                           ; preds = %originalBB515, %1960
  br label %originalBB515

originalBB519alteredBB:                           ; preds = %originalBB519, %1981
  %4844 = load i8, i8* %35, align 1, !dbg !2572
  %4845 = trunc i8 %4844 to i1, !dbg !2572
  br label %originalBB519

originalBB523alteredBB:                           ; preds = %originalBB523, %2000
  br label %originalBB523

originalBB527alteredBB:                           ; preds = %originalBB527, %2017
  %4846 = load i64, i64* %20, align 8, !dbg !2577
  %4847 = icmp ne i64 %4846, 0, !dbg !2577
  br label %originalBB527

originalBB531alteredBB:                           ; preds = %originalBB531, %2041
  br label %originalBB531

originalBB535alteredBB:                           ; preds = %originalBB535, %2070
  %4848 = load i64, i64* %29, align 8, !dbg !2593
  %4849 = load i64, i64* %20, align 8, !dbg !2593
  %4850 = icmp ult i64 %4848, %4849, !dbg !2593
  br label %originalBB535

originalBB539alteredBB:                           ; preds = %originalBB539, %2090
  %4851 = load i8*, i8** %19, align 8, !dbg !2593
  %4852 = load i64, i64* %29, align 8, !dbg !2593
  %4853 = getelementptr inbounds i8, i8* %4851, i64 %4852, !dbg !2593
  store i8 92, i8* %4853, align 1, !dbg !2593
  br label %originalBB539

originalBB543alteredBB:                           ; preds = %originalBB543, %2118
  %4854 = load i8*, i8** %19, align 8, !dbg !2598
  %4855 = load i64, i64* %29, align 8, !dbg !2598
  %4856 = getelementptr inbounds i8, i8* %4854, i64 %4855, !dbg !2598
  store i8 39, i8* %4856, align 1, !dbg !2598
  br label %originalBB543

originalBB547alteredBB:                           ; preds = %originalBB547, %2138
  %4857 = load i64, i64* %29, align 8, !dbg !2601
  %_548 = shl i64 %4857, 1
  %_549 = sub i64 0, %4857
  %gen550 = add i64 %_549, 1
  %_551 = sub i64 0, %4857
  %gen552 = add i64 %_551, 1
  %_553 = sub i64 %4857, 1
  %gen554 = mul i64 %_553, 1
  %_555 = sub i64 %4857, 1
  %gen556 = mul i64 %_555, 1
  %_557 = sub i64 0, %4857
  %gen558 = add i64 %_557, 1
  %_559 = sub i64 0, %4857
  %gen560 = add i64 %_559, 1
  %_561 = shl i64 %4857, 1
  %4858 = add i64 %4857, 1, !dbg !2601
  store i64 %4858, i64* %29, align 8, !dbg !2601
  br label %originalBB547

originalBB565alteredBB:                           ; preds = %originalBB565, %2157
  store i8 0, i8* %36, align 1, !dbg !2602
  br label %originalBB565

originalBB569alteredBB:                           ; preds = %originalBB569, %2175
  store i8 1, i8* %43, align 1, !dbg !2605
  br label %originalBB569

originalBB573alteredBB:                           ; preds = %originalBB573, %2207
  %4859 = bitcast %struct.__mbstate_t* %46 to i8*, !dbg !2639
  call void @llvm.memset.p0i8.i64(i8* align 4 %4859, i8 0, i64 8, i1 false), !dbg !2639
  store i64 0, i64* %44, align 8, !dbg !2640
  store i8 1, i8* %45, align 1, !dbg !2641
  %4860 = load i64, i64* %22, align 8, !dbg !2642
  %4861 = icmp eq i64 %4860, -1, !dbg !2644
  br label %originalBB573

originalBB577alteredBB:                           ; preds = %originalBB577, %2227
  %4862 = load i8*, i8** %21, align 8, !dbg !2646
  %4863 = call i64 @strlen(i8* %4862) #13, !dbg !2647
  store i64 %4863, i64* %22, align 8, !dbg !2648
  br label %originalBB577

originalBB581alteredBB:                           ; preds = %originalBB581, %2246
  br label %originalBB581

originalBB585alteredBB:                           ; preds = %originalBB585, %2263
  %4864 = load i8*, i8** %21, align 8, !dbg !2657
  %4865 = load i64, i64* %28, align 8, !dbg !2658
  %4866 = load i64, i64* %44, align 8, !dbg !2659
  %_586 = sub i64 0, %4865
  %gen587 = add i64 %_586, %4866
  %4867 = add i64 %4865, %4866, !dbg !2660
  %4868 = getelementptr inbounds i8, i8* %4864, i64 %4867, !dbg !2657
  %4869 = load i64, i64* %22, align 8, !dbg !2661
  %4870 = load i64, i64* %28, align 8, !dbg !2662
  %4871 = load i64, i64* %44, align 8, !dbg !2663
  %_588 = sub i64 %4870, %4871
  %gen589 = mul i64 %_588, %4871
  %4872 = add i64 %4870, %4871, !dbg !2664
  %_590 = sub i64 0, %4869
  %gen591 = add i64 %_590, %4872
  %_592 = sub i64 0, %4869
  %gen593 = add i64 %_592, %4872
  %_594 = sub i64 0, %4869
  %gen595 = add i64 %_594, %4872
  %_596 = sub i64 %4869, %4872
  %gen597 = mul i64 %_596, %4872
  %4873 = sub i64 %4869, %4872, !dbg !2665
  %4874 = call i64 @rpl_mbrtowc(i32* %47, i8* %4868, i64 %4873, %struct.__mbstate_t* %46), !dbg !2666
  store i64 %4874, i64* %48, align 8, !dbg !2656
  %4875 = load i64, i64* %48, align 8, !dbg !2667
  %4876 = icmp eq i64 %4875, 0, !dbg !2669
  br label %originalBB585

originalBB601alteredBB:                           ; preds = %originalBB601, %2293
  br label %originalBB601

originalBB605alteredBB:                           ; preds = %originalBB605, %2310
  %4877 = load i64, i64* %48, align 8, !dbg !2672
  %4878 = icmp eq i64 %4877, -1, !dbg !2674
  br label %originalBB605

originalBB609alteredBB:                           ; preds = %originalBB609, %2334
  %4879 = load i64, i64* %28, align 8, !dbg !2686
  %4880 = load i64, i64* %44, align 8, !dbg !2687
  %_610 = shl i64 %4879, %4880
  %_611 = sub i64 0, %4879
  %gen612 = add i64 %_611, %4880
  %_613 = sub i64 %4879, %4880
  %gen614 = mul i64 %_613, %4880
  %_615 = sub i64 %4879, %4880
  %gen616 = mul i64 %_615, %4880
  %_617 = shl i64 %4879, %4880
  %4881 = add i64 %4879, %4880, !dbg !2688
  %4882 = load i64, i64* %22, align 8, !dbg !2689
  %4883 = icmp ult i64 %4881, %4882, !dbg !2690
  br label %originalBB609

originalBB621alteredBB:                           ; preds = %originalBB621, %2367
  %4884 = load i64, i64* %44, align 8, !dbg !2697
  %_622 = sub i64 %4884, 1
  %gen623 = mul i64 %_622, 1
  %_624 = sub i64 0, %4884
  %gen625 = add i64 %_624, 1
  %4885 = add i64 %4884, 1, !dbg !2697
  store i64 %4885, i64* %44, align 8, !dbg !2697
  br label %originalBB621

originalBB629alteredBB:                           ; preds = %originalBB629, %2386
  br label %originalBB629

originalBB633alteredBB:                           ; preds = %originalBB633, %2403
  %4886 = load i8, i8* %35, align 1, !dbg !2700
  %4887 = trunc i8 %4886 to i1, !dbg !2700
  br label %originalBB633

originalBB637alteredBB:                           ; preds = %originalBB637, %2422
  %4888 = load i32, i32* %23, align 4, !dbg !2704
  %4889 = icmp eq i32 %4888, 2, !dbg !2705
  br label %originalBB637

originalBB641alteredBB:                           ; preds = %originalBB641, %2441
  store i64 1, i64* %49, align 8, !dbg !2710
  br label %originalBB641

originalBB645alteredBB:                           ; preds = %originalBB645, %2462
  %4890 = load i8*, i8** %21, align 8, !dbg !2718
  %4891 = load i64, i64* %28, align 8, !dbg !2719
  %4892 = load i64, i64* %44, align 8, !dbg !2720
  %_646 = shl i64 %4891, %4892
  %_647 = sub i64 0, %4891
  %gen648 = add i64 %_647, %4892
  %_649 = shl i64 %4891, %4892
  %_650 = shl i64 %4891, %4892
  %_651 = sub i64 0, %4891
  %gen652 = add i64 %_651, %4892
  %_653 = sub i64 0, %4891
  %gen654 = add i64 %_653, %4892
  %4893 = add i64 %4891, %4892, !dbg !2721
  %4894 = load i64, i64* %49, align 8, !dbg !2722
  %_655 = shl i64 %4893, %4894
  %_656 = sub i64 %4893, %4894
  %gen657 = mul i64 %_656, %4894
  %_658 = shl i64 %4893, %4894
  %_659 = sub i64 %4893, %4894
  %gen660 = mul i64 %_659, %4894
  %_661 = sub i64 0, %4893
  %gen662 = add i64 %_661, %4894
  %_663 = shl i64 %4893, %4894
  %_664 = sub i64 %4893, %4894
  %gen665 = mul i64 %_664, %4894
  %4895 = add i64 %4893, %4894, !dbg !2723
  %4896 = getelementptr inbounds i8, i8* %4890, i64 %4895, !dbg !2718
  %4897 = load i8, i8* %4896, align 1, !dbg !2718
  %4898 = sext i8 %4897 to i32, !dbg !2718
  br label %originalBB645

originalBB669alteredBB:                           ; preds = %originalBB669, %2488
  br label %originalBB669

originalBB673alteredBB:                           ; preds = %originalBB673, %2505
  br label %originalBB673

originalBB677alteredBB:                           ; preds = %originalBB677, %2523
  %4899 = load i64, i64* %49, align 8, !dbg !2729
  %_678 = sub i64 0, %4899
  %gen679 = add i64 %_678, 1
  %_680 = sub i64 %4899, 1
  %gen681 = mul i64 %_680, 1
  %_682 = sub i64 0, %4899
  %gen683 = add i64 %_682, 1
  %_684 = shl i64 %4899, 1
  %_685 = sub i64 0, %4899
  %gen686 = add i64 %_685, 1
  %_687 = shl i64 %4899, 1
  %_688 = sub i64 %4899, 1
  %gen689 = mul i64 %_688, 1
  %4900 = add i64 %4899, 1, !dbg !2729
  store i64 %4900, i64* %49, align 8, !dbg !2729
  br label %originalBB677

originalBB693alteredBB:                           ; preds = %originalBB693, %2547
  store i8 0, i8* %45, align 1, !dbg !2738
  br label %originalBB693

originalBB697alteredBB:                           ; preds = %originalBB697, %2564
  %4901 = load i64, i64* %48, align 8, !dbg !2740
  %4902 = load i64, i64* %44, align 8, !dbg !2741
  %_698 = sub i64 0, %4902
  %gen699 = add i64 %_698, %4901
  %_700 = shl i64 %4902, %4901
  %_701 = shl i64 %4902, %4901
  %4903 = add i64 %4902, %4901, !dbg !2741
  store i64 %4903, i64* %44, align 8, !dbg !2741
  br label %originalBB697

originalBB705alteredBB:                           ; preds = %originalBB705, %2584
  br label %originalBB705

originalBB709alteredBB:                           ; preds = %originalBB709, %2601
  br label %originalBB709

originalBB713alteredBB:                           ; preds = %originalBB713, %2618
  br label %originalBB713

originalBB717alteredBB:                           ; preds = %originalBB717, %2635
  %4904 = call i32 @mbsinit(%struct.__mbstate_t* %46) #13, !dbg !2743
  %4905 = icmp ne i32 %4904, 0, !dbg !2744
  %_718 = shl i1 %4905, true
  %_719 = shl i1 %4905, true
  %_720 = sub i1 %4905, true
  %gen721 = mul i1 %_720, true
  %4906 = xor i1 %4905, true, !dbg !2744
  br label %originalBB717

originalBB725alteredBB:                           ; preds = %originalBB725, %2655
  br label %originalBB725

originalBB729alteredBB:                           ; preds = %originalBB729, %2678
  %4907 = load i8, i8* %33, align 1, !dbg !2753
  %4908 = trunc i8 %4907 to i1, !dbg !2753
  br label %originalBB729

originalBB733alteredBB:                           ; preds = %originalBB733, %2700
  %4909 = load i64, i64* %28, align 8, !dbg !2760
  %4910 = load i64, i64* %44, align 8, !dbg !2761
  %_734 = sub i64 %4909, %4910
  %gen735 = mul i64 %_734, %4910
  %4911 = add i64 %4909, %4910, !dbg !2762
  store i64 %4911, i64* %50, align 8, !dbg !2759
  br label %originalBB733

originalBB739alteredBB:                           ; preds = %originalBB739, %2720
  %4912 = load i8, i8* %33, align 1, !dbg !2764
  %4913 = trunc i8 %4912 to i1, !dbg !2764
  br label %originalBB739

originalBB743alteredBB:                           ; preds = %originalBB743, %2739
  %4914 = load i8, i8* %45, align 1, !dbg !2770
  %4915 = trunc i8 %4914 to i1, !dbg !2770
  br label %originalBB743

originalBB747alteredBB:                           ; preds = %originalBB747, %2758
  br label %originalBB747

originalBB751alteredBB:                           ; preds = %originalBB751, %2775
  %4916 = load i8, i8* %35, align 1, !dbg !2774
  %4917 = trunc i8 %4916 to i1, !dbg !2774
  br label %originalBB751

originalBB755alteredBB:                           ; preds = %originalBB755, %2794
  br label %originalBB755

originalBB759alteredBB:                           ; preds = %originalBB759, %2814
  %4918 = load i8, i8* %36, align 1, !dbg !2778
  %4919 = trunc i8 %4918 to i1, !dbg !2778
  br label %originalBB759

originalBB763alteredBB:                           ; preds = %originalBB763, %2833
  br label %originalBB763

originalBB767alteredBB:                           ; preds = %originalBB767, %2850
  %4920 = load i64, i64* %29, align 8, !dbg !2782
  %4921 = load i64, i64* %20, align 8, !dbg !2782
  %4922 = icmp ult i64 %4920, %4921, !dbg !2782
  br label %originalBB767

originalBB771alteredBB:                           ; preds = %originalBB771, %2878
  %4923 = load i64, i64* %29, align 8, !dbg !2786
  %4924 = load i64, i64* %20, align 8, !dbg !2786
  %4925 = icmp ult i64 %4923, %4924, !dbg !2786
  br label %originalBB771

originalBB775alteredBB:                           ; preds = %originalBB775, %2898
  %4926 = load i8*, i8** %19, align 8, !dbg !2786
  %4927 = load i64, i64* %29, align 8, !dbg !2786
  %4928 = getelementptr inbounds i8, i8* %4926, i64 %4927, !dbg !2786
  store i8 36, i8* %4928, align 1, !dbg !2786
  br label %originalBB775

originalBB779alteredBB:                           ; preds = %originalBB779, %2926
  %4929 = load i8*, i8** %19, align 8, !dbg !2790
  %4930 = load i64, i64* %29, align 8, !dbg !2790
  %4931 = getelementptr inbounds i8, i8* %4929, i64 %4930, !dbg !2790
  store i8 39, i8* %4931, align 1, !dbg !2790
  br label %originalBB779

originalBB783alteredBB:                           ; preds = %originalBB783, %2949
  store i8 1, i8* %36, align 1, !dbg !2780
  br label %originalBB783

originalBB787alteredBB:                           ; preds = %originalBB787, %2967
  %4932 = load i64, i64* %29, align 8, !dbg !2794
  %4933 = load i64, i64* %20, align 8, !dbg !2794
  %4934 = icmp ult i64 %4932, %4933, !dbg !2794
  br label %originalBB787

originalBB791alteredBB:                           ; preds = %originalBB791, %2987
  %4935 = load i8*, i8** %19, align 8, !dbg !2794
  %4936 = load i64, i64* %29, align 8, !dbg !2794
  %4937 = getelementptr inbounds i8, i8* %4935, i64 %4936, !dbg !2794
  store i8 92, i8* %4937, align 1, !dbg !2794
  br label %originalBB791

originalBB795alteredBB:                           ; preds = %originalBB795, %3016
  %4938 = load i8, i8* %39, align 1, !dbg !2799
  %4939 = zext i8 %4938 to i32, !dbg !2799
  %_796 = sub i32 0, %4939
  %gen797 = add i32 %_796, 6
  %4940 = ashr i32 %4939, 6, !dbg !2799
  %_798 = shl i32 48, %4940
  %_799 = sub i32 0, 48
  %gen800 = add i32 %_799, %4940
  %_801 = sub i32 0, 48
  %gen802 = add i32 %_801, %4940
  %_803 = sub i32 48, %4940
  %gen804 = mul i32 %_803, %4940
  %_805 = sub i32 48, %4940
  %gen806 = mul i32 %_805, %4940
  %_807 = shl i32 48, %4940
  %_808 = sub i32 0, 48
  %gen809 = add i32 %_808, %4940
  %4941 = add nsw i32 48, %4940, !dbg !2799
  %4942 = trunc i32 %4941 to i8, !dbg !2799
  %4943 = load i8*, i8** %19, align 8, !dbg !2799
  %4944 = load i64, i64* %29, align 8, !dbg !2799
  %4945 = getelementptr inbounds i8, i8* %4943, i64 %4944, !dbg !2799
  store i8 %4942, i8* %4945, align 1, !dbg !2799
  br label %originalBB795

originalBB813alteredBB:                           ; preds = %originalBB813, %3041
  %4946 = load i64, i64* %29, align 8, !dbg !2802
  %_814 = shl i64 %4946, 1
  %_815 = shl i64 %4946, 1
  %_816 = sub i64 %4946, 1
  %gen817 = mul i64 %_816, 1
  %_818 = shl i64 %4946, 1
  %4947 = add i64 %4946, 1, !dbg !2802
  store i64 %4947, i64* %29, align 8, !dbg !2802
  br label %originalBB813

originalBB822alteredBB:                           ; preds = %originalBB822, %3060
  br label %originalBB822

originalBB826alteredBB:                           ; preds = %originalBB826, %3077
  %4948 = load i64, i64* %29, align 8, !dbg !2804
  %4949 = load i64, i64* %20, align 8, !dbg !2804
  %4950 = icmp ult i64 %4948, %4949, !dbg !2804
  br label %originalBB826

originalBB830alteredBB:                           ; preds = %originalBB830, %3097
  %4951 = load i8, i8* %39, align 1, !dbg !2804
  %4952 = zext i8 %4951 to i32, !dbg !2804
  %_831 = sub i32 %4952, 3
  %gen832 = mul i32 %_831, 3
  %_833 = shl i32 %4952, 3
  %_834 = shl i32 %4952, 3
  %4953 = ashr i32 %4952, 3, !dbg !2804
  %_835 = sub i32 %4953, 7
  %gen836 = mul i32 %_835, 7
  %_837 = sub i32 0, %4953
  %gen838 = add i32 %_837, 7
  %_839 = shl i32 %4953, 7
  %_840 = sub i32 %4953, 7
  %gen841 = mul i32 %_840, 7
  %4954 = and i32 %4953, 7, !dbg !2804
  %_842 = shl i32 48, %4954
  %_843 = sub i32 0, 48
  %gen844 = add i32 %_843, %4954
  %_845 = sub i32 0, 48
  %gen846 = add i32 %_845, %4954
  %_847 = sub i32 0, 48
  %gen848 = add i32 %_847, %4954
  %4955 = add nsw i32 48, %4954, !dbg !2804
  %4956 = trunc i32 %4955 to i8, !dbg !2804
  %4957 = load i8*, i8** %19, align 8, !dbg !2804
  %4958 = load i64, i64* %29, align 8, !dbg !2804
  %4959 = getelementptr inbounds i8, i8* %4957, i64 %4958, !dbg !2804
  store i8 %4956, i8* %4959, align 1, !dbg !2804
  br label %originalBB830

originalBB852alteredBB:                           ; preds = %originalBB852, %3123
  %4960 = load i64, i64* %29, align 8, !dbg !2807
  %4961 = add i64 %4960, 1, !dbg !2807
  store i64 %4961, i64* %29, align 8, !dbg !2807
  br label %originalBB852

originalBB856alteredBB:                           ; preds = %originalBB856, %3148
  %4962 = load i8, i8* %41, align 1, !dbg !2814
  %4963 = trunc i8 %4962 to i1, !dbg !2814
  br label %originalBB856

originalBB860alteredBB:                           ; preds = %originalBB860, %3167
  br label %originalBB860

originalBB864alteredBB:                           ; preds = %originalBB864, %3184
  %4964 = load i64, i64* %29, align 8, !dbg !2819
  %4965 = load i64, i64* %20, align 8, !dbg !2819
  %4966 = icmp ult i64 %4964, %4965, !dbg !2819
  br label %originalBB864

originalBB868alteredBB:                           ; preds = %originalBB868, %3208
  %4967 = load i64, i64* %29, align 8, !dbg !2822
  %_869 = sub i64 %4967, 1
  %gen870 = mul i64 %_869, 1
  %4968 = add i64 %4967, 1, !dbg !2822
  store i64 %4968, i64* %29, align 8, !dbg !2822
  br label %originalBB868

originalBB874alteredBB:                           ; preds = %originalBB874, %3227
  store i8 0, i8* %41, align 1, !dbg !2823
  br label %originalBB874

originalBB878alteredBB:                           ; preds = %originalBB878, %3244
  br label %originalBB878

originalBB882alteredBB:                           ; preds = %originalBB882, %3261
  %4969 = load i64, i64* %50, align 8, !dbg !2825
  %4970 = load i64, i64* %28, align 8, !dbg !2827
  %_883 = sub i64 %4970, 1
  %gen884 = mul i64 %_883, 1
  %4971 = add i64 %4970, 1, !dbg !2828
  %4972 = icmp ule i64 %4969, %4971, !dbg !2829
  br label %originalBB882

originalBB888alteredBB:                           ; preds = %originalBB888, %3282
  br label %originalBB888

originalBB892alteredBB:                           ; preds = %originalBB892, %3299
  br label %originalBB892

originalBB896alteredBB:                           ; preds = %originalBB896, %3316
  %4973 = load i8, i8* %36, align 1, !dbg !2833
  %4974 = trunc i8 %4973 to i1, !dbg !2833
  br label %originalBB896

originalBB900alteredBB:                           ; preds = %originalBB900, %3335
  %4975 = load i8, i8* %42, align 1, !dbg !2833
  %4976 = trunc i8 %4975 to i1, !dbg !2833
  br label %originalBB900

originalBB904alteredBB:                           ; preds = %originalBB904, %3354
  br label %originalBB904

originalBB908alteredBB:                           ; preds = %originalBB908, %3371
  %4977 = load i64, i64* %29, align 8, !dbg !2839
  %4978 = load i64, i64* %20, align 8, !dbg !2839
  %4979 = icmp ult i64 %4977, %4978, !dbg !2839
  br label %originalBB908

originalBB912alteredBB:                           ; preds = %originalBB912, %3391
  %4980 = load i8*, i8** %19, align 8, !dbg !2839
  %4981 = load i64, i64* %29, align 8, !dbg !2839
  %4982 = getelementptr inbounds i8, i8* %4980, i64 %4981, !dbg !2839
  store i8 39, i8* %4982, align 1, !dbg !2839
  br label %originalBB912

originalBB916alteredBB:                           ; preds = %originalBB916, %3414
  br label %originalBB916

originalBB920alteredBB:                           ; preds = %originalBB920, %3431
  %4983 = load i64, i64* %29, align 8, !dbg !2843
  %4984 = load i64, i64* %20, align 8, !dbg !2843
  %4985 = icmp ult i64 %4983, %4984, !dbg !2843
  br label %originalBB920

originalBB924alteredBB:                           ; preds = %originalBB924, %3451
  %4986 = load i8*, i8** %19, align 8, !dbg !2843
  %4987 = load i64, i64* %29, align 8, !dbg !2843
  %4988 = getelementptr inbounds i8, i8* %4986, i64 %4987, !dbg !2843
  store i8 39, i8* %4988, align 1, !dbg !2843
  br label %originalBB924

originalBB928alteredBB:                           ; preds = %originalBB928, %3475
  br label %originalBB928

originalBB932alteredBB:                           ; preds = %originalBB932, %3492
  br label %originalBB932

originalBB936alteredBB:                           ; preds = %originalBB936, %3518
  %4989 = load i64, i64* %29, align 8, !dbg !2851
  %_937 = sub i64 %4989, 1
  %gen938 = mul i64 %_937, 1
  %_939 = sub i64 %4989, 1
  %gen940 = mul i64 %_939, 1
  %_941 = sub i64 %4989, 1
  %gen942 = mul i64 %_941, 1
  %_943 = sub i64 0, %4989
  %gen944 = add i64 %_943, 1
  %_945 = shl i64 %4989, 1
  %4990 = add i64 %4989, 1, !dbg !2851
  store i64 %4990, i64* %29, align 8, !dbg !2851
  br label %originalBB936

originalBB949alteredBB:                           ; preds = %originalBB949, %3537
  %4991 = load i8*, i8** %21, align 8, !dbg !2852
  %4992 = load i64, i64* %28, align 8, !dbg !2853
  %_950 = shl i64 %4992, 1
  %_951 = shl i64 %4992, 1
  %_952 = sub i64 %4992, 1
  %gen953 = mul i64 %_952, 1
  %_954 = shl i64 %4992, 1
  %_955 = shl i64 %4992, 1
  %_956 = sub i64 0, %4992
  %gen957 = add i64 %_956, 1
  %4993 = add i64 %4992, 1, !dbg !2853
  store i64 %4993, i64* %28, align 8, !dbg !2853
  %4994 = getelementptr inbounds i8, i8* %4991, i64 %4993, !dbg !2852
  %4995 = load i8, i8* %4994, align 1, !dbg !2852
  store i8 %4995, i8* %39, align 1, !dbg !2854
  br label %originalBB949

originalBB961alteredBB:                           ; preds = %originalBB961, %3559
  br label %originalBB961

originalBB965alteredBB:                           ; preds = %originalBB965, %3576
  br label %originalBB965

originalBB969alteredBB:                           ; preds = %originalBB969, %3593
  %4996 = load i8, i8* %33, align 1, !dbg !2861
  %4997 = trunc i8 %4996 to i1, !dbg !2861
  br label %originalBB969

originalBB973alteredBB:                           ; preds = %originalBB973, %3612
  %4998 = load i32, i32* %23, align 4, !dbg !2864
  %4999 = icmp ne i32 %4998, 2, !dbg !2865
  br label %originalBB973

originalBB977alteredBB:                           ; preds = %originalBB977, %3631
  %5000 = load i8, i8* %35, align 1, !dbg !2867
  %5001 = trunc i8 %5000 to i1, !dbg !2867
  br label %originalBB977

originalBB981alteredBB:                           ; preds = %originalBB981, %3650
  %5002 = load i32*, i32** %25, align 8, !dbg !2869
  %5003 = icmp ne i32* %5002, null, !dbg !2869
  br label %originalBB981

originalBB985alteredBB:                           ; preds = %originalBB985, %3669
  %5004 = load i32*, i32** %25, align 8, !dbg !2871
  %5005 = load i8, i8* %39, align 1, !dbg !2872
  %5006 = zext i8 %5005 to i64, !dbg !2872
  %_986 = sub i64 0, %5006
  %gen987 = add i64 %_986, 32
  %_988 = sub i64 %5006, 32
  %gen989 = mul i64 %_988, 32
  %_990 = sub i64 %5006, 32
  %gen991 = mul i64 %_990, 32
  %_992 = sub i64 0, %5006
  %gen993 = add i64 %_992, 32
  %5007 = udiv i64 %5006, 32, !dbg !2873
  %5008 = getelementptr inbounds i32, i32* %5004, i64 %5007, !dbg !2871
  %5009 = load i32, i32* %5008, align 4, !dbg !2871
  %5010 = load i8, i8* %39, align 1, !dbg !2874
  %5011 = zext i8 %5010 to i64, !dbg !2874
  %_994 = sub i64 %5011, 32
  %gen995 = mul i64 %_994, 32
  %_996 = sub i64 %5011, 32
  %gen997 = mul i64 %_996, 32
  %_998 = sub i64 %5011, 32
  %gen999 = mul i64 %_998, 32
  %_1000 = sub i64 0, %5011
  %gen1001 = add i64 %_1000, 32
  %_1002 = sub i64 %5011, 32
  %gen1003 = mul i64 %_1002, 32
  %_1004 = shl i64 %5011, 32
  %5012 = urem i64 %5011, 32, !dbg !2875
  %5013 = trunc i64 %5012 to i32, !dbg !2876
  %_1005 = sub i32 0, %5009
  %gen1006 = add i32 %_1005, %5013
  %5014 = lshr i32 %5009, %5013, !dbg !2876
  %_1007 = sub i32 %5014, 1
  %gen1008 = mul i32 %_1007, 1
  %_1009 = shl i32 %5014, 1
  %_1010 = shl i32 %5014, 1
  %_1011 = sub i32 0, %5014
  %gen1012 = add i32 %_1011, 1
  %_1013 = shl i32 %5014, 1
  %_1014 = sub i32 %5014, 1
  %gen1015 = mul i32 %_1014, 1
  %5015 = and i32 %5014, 1, !dbg !2877
  %5016 = icmp ne i32 %5015, 0, !dbg !2877
  br label %originalBB985

originalBB1019alteredBB:                          ; preds = %originalBB1019, %3699
  %5017 = load i8, i8* %41, align 1, !dbg !2879
  %5018 = trunc i8 %5017 to i1, !dbg !2879
  br label %originalBB1019

originalBB1023alteredBB:                          ; preds = %originalBB1023, %3721
  %5019 = load i8, i8* %35, align 1, !dbg !2885
  %5020 = trunc i8 %5019 to i1, !dbg !2885
  br label %originalBB1023

originalBB1027alteredBB:                          ; preds = %originalBB1027, %3741
  store i8 1, i8* %42, align 1, !dbg !2888
  %5021 = load i32, i32* %23, align 4, !dbg !2889
  %5022 = icmp eq i32 %5021, 2, !dbg !2889
  br label %originalBB1027

originalBB1031alteredBB:                          ; preds = %originalBB1031, %3763
  br label %originalBB1031

originalBB1035alteredBB:                          ; preds = %originalBB1035, %3784
  %5023 = load i8*, i8** %19, align 8, !dbg !2893
  %5024 = load i64, i64* %29, align 8, !dbg !2893
  %5025 = getelementptr inbounds i8, i8* %5023, i64 %5024, !dbg !2893
  store i8 39, i8* %5025, align 1, !dbg !2893
  br label %originalBB1035

originalBB1039alteredBB:                          ; preds = %originalBB1039, %3804
  %5026 = load i64, i64* %29, align 8, !dbg !2896
  %_1040 = sub i64 0, %5026
  %gen1041 = add i64 %_1040, 1
  %_1042 = sub i64 0, %5026
  %gen1043 = add i64 %_1042, 1
  %5027 = add i64 %5026, 1, !dbg !2896
  store i64 %5027, i64* %29, align 8, !dbg !2896
  br label %originalBB1039

originalBB1047alteredBB:                          ; preds = %originalBB1047, %3823
  br label %originalBB1047

originalBB1051alteredBB:                          ; preds = %originalBB1051, %3840
  %5028 = load i64, i64* %29, align 8, !dbg !2897
  %5029 = load i64, i64* %20, align 8, !dbg !2897
  %5030 = icmp ult i64 %5028, %5029, !dbg !2897
  br label %originalBB1051

originalBB1055alteredBB:                          ; preds = %originalBB1055, %3867
  br label %originalBB1055

originalBB1059alteredBB:                          ; preds = %originalBB1059, %3884
  %5031 = load i64, i64* %29, align 8, !dbg !2901
  %5032 = load i64, i64* %20, align 8, !dbg !2901
  %5033 = icmp ult i64 %5031, %5032, !dbg !2901
  br label %originalBB1059

originalBB1063alteredBB:                          ; preds = %originalBB1063, %3908
  %5034 = load i64, i64* %29, align 8, !dbg !2904
  %_1064 = sub i64 %5034, 1
  %gen1065 = mul i64 %_1064, 1
  %_1066 = sub i64 %5034, 1
  %gen1067 = mul i64 %_1066, 1
  %_1068 = sub i64 0, %5034
  %gen1069 = add i64 %_1068, 1
  %_1070 = shl i64 %5034, 1
  %_1071 = sub i64 0, %5034
  %gen1072 = add i64 %_1071, 1
  %_1073 = sub i64 0, %5034
  %gen1074 = add i64 %_1073, 1
  %_1075 = sub i64 0, %5034
  %gen1076 = add i64 %_1075, 1
  %_1077 = sub i64 %5034, 1
  %gen1078 = mul i64 %_1077, 1
  %5035 = add i64 %5034, 1, !dbg !2904
  store i64 %5035, i64* %29, align 8, !dbg !2904
  br label %originalBB1063

originalBB1082alteredBB:                          ; preds = %originalBB1082, %3927
  store i8 1, i8* %36, align 1, !dbg !2891
  br label %originalBB1082

originalBB1086alteredBB:                          ; preds = %originalBB1086, %3949
  %5036 = load i8*, i8** %19, align 8, !dbg !2905
  %5037 = load i64, i64* %29, align 8, !dbg !2905
  %5038 = getelementptr inbounds i8, i8* %5036, i64 %5037, !dbg !2905
  store i8 92, i8* %5038, align 1, !dbg !2905
  br label %originalBB1086

originalBB1090alteredBB:                          ; preds = %originalBB1090, %3969
  %5039 = load i64, i64* %29, align 8, !dbg !2908
  %_1091 = sub i64 0, %5039
  %gen1092 = add i64 %_1091, 1
  %5040 = add i64 %5039, 1, !dbg !2908
  store i64 %5040, i64* %29, align 8, !dbg !2908
  br label %originalBB1090

originalBB1096alteredBB:                          ; preds = %originalBB1096, %3988
  br label %originalBB1096

originalBB1100alteredBB:                          ; preds = %originalBB1100, %4007
  %5041 = load i8, i8* %36, align 1, !dbg !2912
  %5042 = trunc i8 %5041 to i1, !dbg !2912
  br label %originalBB1100

originalBB1104alteredBB:                          ; preds = %originalBB1104, %4030
  %5043 = load i64, i64* %29, align 8, !dbg !2918
  %5044 = load i64, i64* %20, align 8, !dbg !2918
  %5045 = icmp ult i64 %5043, %5044, !dbg !2918
  br label %originalBB1104

originalBB1108alteredBB:                          ; preds = %originalBB1108, %4054
  %5046 = load i64, i64* %29, align 8, !dbg !2921
  %_1109 = shl i64 %5046, 1
  %_1110 = sub i64 0, %5046
  %gen1111 = add i64 %_1110, 1
  %5047 = add i64 %5046, 1, !dbg !2921
  store i64 %5047, i64* %29, align 8, !dbg !2921
  br label %originalBB1108

originalBB1115alteredBB:                          ; preds = %originalBB1115, %4073
  br label %originalBB1115

originalBB1119alteredBB:                          ; preds = %originalBB1119, %4090
  %5048 = load i64, i64* %29, align 8, !dbg !2922
  %5049 = load i64, i64* %20, align 8, !dbg !2922
  %5050 = icmp ult i64 %5048, %5049, !dbg !2922
  br label %originalBB1119

originalBB1123alteredBB:                          ; preds = %originalBB1123, %4110
  %5051 = load i8*, i8** %19, align 8, !dbg !2922
  %5052 = load i64, i64* %29, align 8, !dbg !2922
  %5053 = getelementptr inbounds i8, i8* %5051, i64 %5052, !dbg !2922
  store i8 39, i8* %5053, align 1, !dbg !2922
  br label %originalBB1123

originalBB1127alteredBB:                          ; preds = %originalBB1127, %4133
  store i8 0, i8* %36, align 1, !dbg !2916
  br label %originalBB1127

originalBB1131alteredBB:                          ; preds = %originalBB1131, %4150
  br label %originalBB1131

originalBB1135alteredBB:                          ; preds = %originalBB1135, %4177
  %5054 = load i64, i64* %29, align 8, !dbg !2930
  %_1136 = sub i64 0, %5054
  %gen1137 = add i64 %_1136, 1
  %_1138 = shl i64 %5054, 1
  %_1139 = shl i64 %5054, 1
  %_1140 = shl i64 %5054, 1
  %_1141 = sub i64 %5054, 1
  %gen1142 = mul i64 %_1141, 1
  %5055 = add i64 %5054, 1, !dbg !2930
  store i64 %5055, i64* %29, align 8, !dbg !2930
  br label %originalBB1135

originalBB1146alteredBB:                          ; preds = %originalBB1146, %4196
  %5056 = load i8, i8* %43, align 1, !dbg !2931
  %5057 = trunc i8 %5056 to i1, !dbg !2931
  br label %originalBB1146

originalBB1150alteredBB:                          ; preds = %originalBB1150, %4216
  br label %originalBB1150

originalBB1154alteredBB:                          ; preds = %originalBB1154, %4233
  %5058 = load i64, i64* %28, align 8, !dbg !2937
  %_1155 = sub i64 0, %5058
  %gen1156 = add i64 %_1155, 1
  %_1157 = sub i64 %5058, 1
  %gen1158 = mul i64 %_1157, 1
  %_1159 = sub i64 %5058, 1
  %gen1160 = mul i64 %_1159, 1
  %_1161 = shl i64 %5058, 1
  %_1162 = sub i64 0, %5058
  %gen1163 = add i64 %_1162, 1
  %_1164 = shl i64 %5058, 1
  %_1165 = sub i64 0, %5058
  %gen1166 = add i64 %_1165, 1
  %_1167 = sub i64 0, %5058
  %gen1168 = add i64 %_1167, 1
  %5059 = add i64 %5058, 1, !dbg !2937
  store i64 %5059, i64* %28, align 8, !dbg !2937
  br label %originalBB1154

originalBB1172alteredBB:                          ; preds = %originalBB1172, %4252
  %5060 = load i64, i64* %29, align 8, !dbg !2941
  %5061 = icmp eq i64 %5060, 0, !dbg !2943
  br label %originalBB1172

originalBB1176alteredBB:                          ; preds = %originalBB1176, %4271
  %5062 = load i32, i32* %23, align 4, !dbg !2945
  %5063 = icmp eq i32 %5062, 2, !dbg !2946
  br label %originalBB1176

originalBB1180alteredBB:                          ; preds = %originalBB1180, %4293
  br label %originalBB1180

originalBB1184alteredBB:                          ; preds = %originalBB1184, %4316
  %5064 = load i8, i8* %37, align 1, !dbg !2957
  %5065 = trunc i8 %5064 to i1, !dbg !2957
  br label %originalBB1184

originalBB1188alteredBB:                          ; preds = %originalBB1188, %4335
  %5066 = load i8, i8* %38, align 1, !dbg !2959
  %5067 = trunc i8 %5066 to i1, !dbg !2959
  br label %originalBB1188

originalBB1192alteredBB:                          ; preds = %originalBB1192, %4354
  %5068 = load i8*, i8** %19, align 8, !dbg !2963
  %5069 = load i64, i64* %30, align 8, !dbg !2964
  %5070 = load i8*, i8** %21, align 8, !dbg !2965
  %5071 = load i64, i64* %22, align 8, !dbg !2966
  %5072 = load i32, i32* %24, align 4, !dbg !2967
  %5073 = load i32*, i32** %25, align 8, !dbg !2968
  %5074 = load i8*, i8** %26, align 8, !dbg !2969
  %5075 = load i8*, i8** %27, align 8, !dbg !2970
  %5076 = call i64 @quotearg_buffer_restyled(i8* %5068, i64 %5069, i8* %5070, i64 %5071, i32 5, i32 %5072, i32* %5073, i8* %5074, i8* %5075), !dbg !2971
  store i64 %5076, i64* %18, align 8, !dbg !2972
  br label %originalBB1192

originalBB1196alteredBB:                          ; preds = %originalBB1196, %4380
  %5077 = load i64, i64* %20, align 8, !dbg !2973
  %5078 = icmp ne i64 %5077, 0, !dbg !2973
  br label %originalBB1196

originalBB1200alteredBB:                          ; preds = %originalBB1200, %4399
  %5079 = load i64, i64* %30, align 8, !dbg !2976
  %5080 = icmp ne i64 %5079, 0, !dbg !2976
  br label %originalBB1200

originalBB1204alteredBB:                          ; preds = %originalBB1204, %4421
  br label %originalBB1204

originalBB1208alteredBB:                          ; preds = %originalBB1208, %4441
  %5081 = load i8, i8* %35, align 1, !dbg !2987
  %5082 = trunc i8 %5081 to i1, !dbg !2987
  br label %originalBB1208

originalBB1212alteredBB:                          ; preds = %originalBB1212, %4460
  br label %originalBB1212

originalBB1216alteredBB:                          ; preds = %originalBB1216, %4481
  br label %originalBB1216

originalBB1220alteredBB:                          ; preds = %originalBB1220, %4502
  %5083 = load i8*, i8** %31, align 8, !dbg !2996
  %5084 = load i8, i8* %5083, align 1, !dbg !2996
  %5085 = load i8*, i8** %19, align 8, !dbg !2996
  %5086 = load i64, i64* %29, align 8, !dbg !2996
  %5087 = getelementptr inbounds i8, i8* %5085, i64 %5086, !dbg !2996
  store i8 %5084, i8* %5087, align 1, !dbg !2996
  br label %originalBB1220

originalBB1224alteredBB:                          ; preds = %originalBB1224, %4527
  br label %originalBB1224

originalBB1228alteredBB:                          ; preds = %originalBB1228, %4544
  %5088 = load i8*, i8** %31, align 8, !dbg !3000
  %5089 = getelementptr inbounds i8, i8* %5088, i32 1, !dbg !3000
  store i8* %5089, i8** %31, align 8, !dbg !3000
  br label %originalBB1228

originalBB1232alteredBB:                          ; preds = %originalBB1232, %4564
  %5090 = load i64, i64* %29, align 8, !dbg !3004
  %5091 = load i64, i64* %20, align 8, !dbg !3006
  %5092 = icmp ult i64 %5090, %5091, !dbg !3007
  br label %originalBB1232

originalBB1236alteredBB:                          ; preds = %originalBB1236, %4584
  %5093 = load i8*, i8** %19, align 8, !dbg !3009
  %5094 = load i64, i64* %29, align 8, !dbg !3010
  %5095 = getelementptr inbounds i8, i8* %5093, i64 %5094, !dbg !3009
  store i8 0, i8* %5095, align 1, !dbg !3011
  br label %originalBB1236

originalBB1240alteredBB:                          ; preds = %originalBB1240, %4609
  %5096 = load i8, i8* %33, align 1, !dbg !3020
  %5097 = trunc i8 %5096 to i1, !dbg !3020
  br label %originalBB1240

originalBB1244alteredBB:                          ; preds = %originalBB1244, %4640
  %5098 = load i64, i64* %18, align 8, !dbg !3035
  br label %originalBB1244
}

; Function Attrs: nounwind
declare dso_local i64 @__ctype_get_mb_cur_max() #2

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @gettext_quote(i8*, i32) #4 !dbg !3087 {
  %3 = load i32, i32* @x.39
  %4 = load i32, i32* @y.40
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i8*, align 8
  %15 = alloca i8*, align 8
  store i8* %0, i8** %12, align 8
  call void @llvm.dbg.declare(metadata i8** %12, metadata !3090, metadata !DIExpression()), !dbg !3091
  store i32 %1, i32* %13, align 4
  call void @llvm.dbg.declare(metadata i32* %13, metadata !3092, metadata !DIExpression()), !dbg !3093
  call void @llvm.dbg.declare(metadata i8** %14, metadata !3094, metadata !DIExpression()), !dbg !3095
  %16 = load i8*, i8** %12, align 8, !dbg !3096
  %17 = call i8* @gettext(i8* %16) #10, !dbg !3096
  store i8* %17, i8** %14, align 8, !dbg !3095
  call void @llvm.dbg.declare(metadata i8** %15, metadata !3097, metadata !DIExpression()), !dbg !3098
  %18 = load i8*, i8** %14, align 8, !dbg !3099
  %19 = load i8*, i8** %12, align 8, !dbg !3101
  %20 = icmp ne i8* %18, %19, !dbg !3102
  %21 = load i32, i32* @x.39
  %22 = load i32, i32* @y.40
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %20, label %29, label %47, !dbg !3103

29:                                               ; preds = %originalBBpart2
  %30 = load i32, i32* @x.39
  %31 = load i32, i32* @y.40
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %29, %originalBB1alteredBB
  %38 = load i8*, i8** %14, align 8, !dbg !3104
  store i8* %38, i8** %11, align 8, !dbg !3105
  %39 = load i32, i32* @x.39
  %40 = load i32, i32* @y.40
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %378, !dbg !3105

47:                                               ; preds = %originalBBpart2
  %48 = call i8* @locale_charset(), !dbg !3106
  store i8* %48, i8** %15, align 8, !dbg !3107
  %49 = load i8*, i8** %15, align 8, !dbg !3108
  %50 = call i32 @c_strcasecmp(i8* %49, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.88, i64 0, i64 0)) #13, !dbg !3108
  br label %51, !dbg !3108

51:                                               ; preds = %47
  %52 = load i32, i32* @x.39
  %53 = load i32, i32* @y.40
  %54 = sub i32 %52, 1
  %55 = mul i32 %52, %54
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %53, 10
  %59 = or i1 %57, %58
  br i1 %59, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %51, %originalBB6alteredBB
  %collatzVar1 = alloca i32
  %60 = load i32, i32* @x.39
  %61 = load i32, i32* @y.40
  %62 = sub i32 %60, 1
  %63 = mul i32 %60, %62
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %61, 10
  %67 = or i1 %65, %66
  br i1 %67, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %68

68:                                               ; preds = %originalBBpart28
  %69 = load i32, i32* @inVal0
  %70 = icmp sgt i32 %69, 1
  br i1 %70, label %72, label %71

71:                                               ; preds = %68
  store i32 48, i32* %collatzVar1
  br label %72

72:                                               ; preds = %71, %68
  %73 = load i8**, i8*** @inVal1
  %74 = getelementptr inbounds i8*, i8** %73, i64 1
  %75 = load i8*, i8** %74
  %controle2 = call i32 @controle(i8* %75, i32 0)
  store i32 %controle2, i32* %collatzVar1
  br label %76

76:                                               ; preds = %originalBBpart255, %originalBBpart250, %72
  %77 = load i32, i32* @x.39
  %78 = load i32, i32* @y.40
  %79 = sub i32 %77, 1
  %80 = mul i32 %77, %79
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %78, 10
  %84 = or i1 %82, %83
  br i1 %84, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %76, %originalBB10alteredBB
  %85 = load i32, i32* %collatzVar1
  %86 = icmp sgt i32 %85, 1
  %87 = load i32, i32* @x.39
  %88 = load i32, i32* @y.40
  %89 = sub i32 %87, 1
  %90 = mul i32 %87, %89
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %88, 10
  %94 = or i1 %92, %93
  br i1 %94, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %86, label %95, label %218

95:                                               ; preds = %originalBBpart212
  %96 = load i32, i32* @x.39
  %97 = load i32, i32* @y.40
  %98 = sub i32 %96, 1
  %99 = mul i32 %96, %98
  %100 = urem i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = icmp slt i32 %97, 10
  %103 = or i1 %101, %102
  br i1 %103, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %95, %originalBB14alteredBB
  %104 = load i32, i32* %collatzVar1
  %105 = srem i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = load i32, i32* @x.39
  %108 = load i32, i32* @y.40
  %109 = sub i32 %107, 1
  %110 = mul i32 %107, %109
  %111 = urem i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = icmp slt i32 %108, 10
  %114 = or i1 %112, %113
  br i1 %114, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %106, label %115, label %134

115:                                              ; preds = %originalBBpart216
  %116 = load i32, i32* @x.39
  %117 = load i32, i32* @y.40
  %118 = sub i32 %116, 1
  %119 = mul i32 %116, %118
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %117, 10
  %123 = or i1 %121, %122
  br i1 %123, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %115, %originalBB18alteredBB
  %124 = load i32, i32* %collatzVar1
  %125 = sdiv i32 %124, 2
  store i32 %125, i32* %collatzVar1
  %126 = load i32, i32* @x.39
  %127 = load i32, i32* @y.40
  %128 = sub i32 %126, 1
  %129 = mul i32 %126, %128
  %130 = urem i32 %129, 2
  %131 = icmp eq i32 %130, 0
  %132 = icmp slt i32 %127, 10
  %133 = or i1 %131, %132
  br i1 %133, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %154

134:                                              ; preds = %originalBBpart216
  %135 = load i32, i32* @x.39
  %136 = load i32, i32* @y.40
  %137 = sub i32 %135, 1
  %138 = mul i32 %135, %137
  %139 = urem i32 %138, 2
  %140 = icmp eq i32 %139, 0
  %141 = icmp slt i32 %136, 10
  %142 = or i1 %140, %141
  br i1 %142, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %134, %originalBB22alteredBB
  %143 = load i32, i32* %collatzVar1
  %144 = mul i32 %143, 3
  %145 = add i32 %144, 1
  store i32 %145, i32* %collatzVar1
  %146 = load i32, i32* @x.39
  %147 = load i32, i32* @y.40
  %148 = sub i32 %146, 1
  %149 = mul i32 %146, %148
  %150 = urem i32 %149, 2
  %151 = icmp eq i32 %150, 0
  %152 = icmp slt i32 %147, 10
  %153 = or i1 %151, %152
  br i1 %153, label %originalBBpart235, label %originalBB22alteredBB

originalBBpart235:                                ; preds = %originalBB22
  br label %154

154:                                              ; preds = %originalBBpart235, %originalBBpart220
  %155 = load i32, i32* @x.39
  %156 = load i32, i32* @y.40
  %157 = sub i32 %155, 1
  %158 = mul i32 %155, %157
  %159 = urem i32 %158, 2
  %160 = icmp eq i32 %159, 0
  %161 = icmp slt i32 %156, 10
  %162 = or i1 %160, %161
  br i1 %162, label %originalBB37, label %originalBB37alteredBB

originalBB37:                                     ; preds = %154, %originalBB37alteredBB
  %163 = load i32, i32* %collatzVar1
  %164 = sub i32 %50, %163
  %165 = icmp sgt i32 %164, -2
  %166 = load i32, i32* @x.39
  %167 = load i32, i32* @y.40
  %168 = sub i32 %166, 1
  %169 = mul i32 %166, %168
  %170 = urem i32 %169, 2
  %171 = icmp eq i32 %170, 0
  %172 = icmp slt i32 %167, 10
  %173 = or i1 %171, %172
  br i1 %173, label %originalBBpart250, label %originalBB37alteredBB

originalBBpart250:                                ; preds = %originalBB37
  br i1 %165, label %174, label %76

174:                                              ; preds = %originalBBpart250
  %175 = load i32, i32* @x.39
  %176 = load i32, i32* @y.40
  %177 = sub i32 %175, 1
  %178 = mul i32 %175, %177
  %179 = urem i32 %178, 2
  %180 = icmp eq i32 %179, 0
  %181 = icmp slt i32 %176, 10
  %182 = or i1 %180, %181
  br i1 %182, label %originalBB52, label %originalBB52alteredBB

originalBB52:                                     ; preds = %174, %originalBB52alteredBB
  %183 = load i32, i32* %collatzVar1
  %184 = add i32 %50, %183
  %185 = icmp slt i32 %184, 2
  %186 = load i32, i32* @x.39
  %187 = load i32, i32* @y.40
  %188 = sub i32 %186, 1
  %189 = mul i32 %186, %188
  %190 = urem i32 %189, 2
  %191 = icmp eq i32 %190, 0
  %192 = icmp slt i32 %187, 10
  %193 = or i1 %191, %192
  br i1 %193, label %originalBBpart255, label %originalBB52alteredBB

originalBBpart255:                                ; preds = %originalBB52
  br i1 %185, label %194, label %76

194:                                              ; preds = %originalBBpart255
  %195 = load i32, i32* @x.39
  %196 = load i32, i32* @y.40
  %197 = sub i32 %195, 1
  %198 = mul i32 %195, %197
  %199 = urem i32 %198, 2
  %200 = icmp eq i32 %199, 0
  %201 = icmp slt i32 %196, 10
  %202 = or i1 %200, %201
  br i1 %202, label %originalBB57, label %originalBB57alteredBB

originalBB57:                                     ; preds = %194, %originalBB57alteredBB
  %203 = load i8*, i8** %12, align 8, !dbg !3110
  %204 = getelementptr inbounds i8, i8* %203, i64 0, !dbg !3110
  %205 = load i8, i8* %204, align 1, !dbg !3110
  %206 = sext i8 %205 to i32, !dbg !3110
  %207 = icmp eq i32 %206, 96, !dbg !3111
  %208 = zext i1 %207 to i64, !dbg !3110
  %209 = select i1 %207, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14.89, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.15.90, i64 0, i64 0), !dbg !3110
  store i8* %209, i8** %11, align 8, !dbg !3112
  %210 = load i32, i32* @x.39
  %211 = load i32, i32* @y.40
  %212 = sub i32 %210, 1
  %213 = mul i32 %210, %212
  %214 = urem i32 %213, 2
  %215 = icmp eq i32 %214, 0
  %216 = icmp slt i32 %211, 10
  %217 = or i1 %215, %216
  br i1 %217, label %originalBBpart259, label %originalBB57alteredBB

originalBBpart259:                                ; preds = %originalBB57
  br label %378, !dbg !3112

218:                                              ; preds = %originalBBpart212
  %219 = load i32, i32* @x.39
  %220 = load i32, i32* @y.40
  %221 = sub i32 %219, 1
  %222 = mul i32 %219, %221
  %223 = urem i32 %222, 2
  %224 = icmp eq i32 %223, 0
  %225 = icmp slt i32 %220, 10
  %226 = or i1 %224, %225
  br i1 %226, label %originalBB61, label %originalBB61alteredBB

originalBB61:                                     ; preds = %218, %originalBB61alteredBB
  %227 = load i8*, i8** %15, align 8, !dbg !3113
  %228 = call i32 @c_strcasecmp(i8* %227, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.16.91, i64 0, i64 0)) #13, !dbg !3113
  %229 = load i32, i32* @x.39
  %230 = load i32, i32* @y.40
  %231 = sub i32 %229, 1
  %232 = mul i32 %229, %231
  %233 = urem i32 %232, 2
  %234 = icmp eq i32 %233, 0
  %235 = icmp slt i32 %230, 10
  %236 = or i1 %234, %235
  br i1 %236, label %originalBBpart263, label %originalBB61alteredBB

originalBBpart263:                                ; preds = %originalBB61
  br label %237, !dbg !3113

237:                                              ; preds = %originalBBpart263
  %238 = load i32, i32* @x.39
  %239 = load i32, i32* @y.40
  %240 = sub i32 %238, 1
  %241 = mul i32 %238, %240
  %242 = urem i32 %241, 2
  %243 = icmp eq i32 %242, 0
  %244 = icmp slt i32 %239, 10
  %245 = or i1 %243, %244
  br i1 %245, label %originalBB65, label %originalBB65alteredBB

originalBB65:                                     ; preds = %237, %originalBB65alteredBB
  %collatzVar = alloca i32
  %246 = load i32, i32* @x.39
  %247 = load i32, i32* @y.40
  %248 = sub i32 %246, 1
  %249 = mul i32 %246, %248
  %250 = urem i32 %249, 2
  %251 = icmp eq i32 %250, 0
  %252 = icmp slt i32 %247, 10
  %253 = or i1 %251, %252
  br i1 %253, label %originalBBpart267, label %originalBB65alteredBB

originalBBpart267:                                ; preds = %originalBB65
  br label %254

254:                                              ; preds = %originalBBpart267
  %255 = load i32, i32* @x.39
  %256 = load i32, i32* @y.40
  %257 = sub i32 %255, 1
  %258 = mul i32 %255, %257
  %259 = urem i32 %258, 2
  %260 = icmp eq i32 %259, 0
  %261 = icmp slt i32 %256, 10
  %262 = or i1 %260, %261
  br i1 %262, label %originalBB69, label %originalBB69alteredBB

originalBB69:                                     ; preds = %254, %originalBB69alteredBB
  %263 = load i32, i32* @inVal0
  %264 = icmp sgt i32 %263, 1
  %265 = load i32, i32* @x.39
  %266 = load i32, i32* @y.40
  %267 = sub i32 %265, 1
  %268 = mul i32 %265, %267
  %269 = urem i32 %268, 2
  %270 = icmp eq i32 %269, 0
  %271 = icmp slt i32 %266, 10
  %272 = or i1 %270, %271
  br i1 %272, label %originalBBpart271, label %originalBB69alteredBB

originalBBpart271:                                ; preds = %originalBB69
  br i1 %264, label %274, label %273

273:                                              ; preds = %originalBBpart271
  store i32 46, i32* %collatzVar
  br label %274

274:                                              ; preds = %273, %originalBBpart271
  %275 = load i32, i32* @x.39
  %276 = load i32, i32* @y.40
  %277 = sub i32 %275, 1
  %278 = mul i32 %275, %277
  %279 = urem i32 %278, 2
  %280 = icmp eq i32 %279, 0
  %281 = icmp slt i32 %276, 10
  %282 = or i1 %280, %281
  br i1 %282, label %originalBB73, label %originalBB73alteredBB

originalBB73:                                     ; preds = %274, %originalBB73alteredBB
  %283 = load i8**, i8*** @inVal1
  %284 = getelementptr inbounds i8*, i8** %283, i64 1
  %285 = load i8*, i8** %284
  %286 = add i32 0, -1
  %controle = call i32 @controle(i8* %285, i32 %286)
  store i32 %controle, i32* %collatzVar
  %287 = load i32, i32* @x.39
  %288 = load i32, i32* @y.40
  %289 = sub i32 %287, 1
  %290 = mul i32 %287, %289
  %291 = urem i32 %290, 2
  %292 = icmp eq i32 %291, 0
  %293 = icmp slt i32 %288, 10
  %294 = or i1 %292, %293
  br i1 %294, label %originalBBpart282, label %originalBB73alteredBB

originalBBpart282:                                ; preds = %originalBB73
  br label %295

295:                                              ; preds = %361, %357, %originalBBpart282
  %296 = load i32, i32* %collatzVar
  %297 = icmp sgt i32 %296, 1
  br i1 %297, label %298, label %373

298:                                              ; preds = %295
  %299 = load i32, i32* @x.39
  %300 = load i32, i32* @y.40
  %301 = sub i32 %299, 1
  %302 = mul i32 %299, %301
  %303 = urem i32 %302, 2
  %304 = icmp eq i32 %303, 0
  %305 = icmp slt i32 %300, 10
  %306 = or i1 %304, %305
  br i1 %306, label %originalBB84, label %originalBB84alteredBB

originalBB84:                                     ; preds = %298, %originalBB84alteredBB
  %307 = load i32, i32* %collatzVar
  %308 = srem i32 %307, 2
  %309 = icmp eq i32 %308, 0
  %310 = load i32, i32* @x.39
  %311 = load i32, i32* @y.40
  %312 = sub i32 %310, 1
  %313 = mul i32 %310, %312
  %314 = urem i32 %313, 2
  %315 = icmp eq i32 %314, 0
  %316 = icmp slt i32 %311, 10
  %317 = or i1 %315, %316
  br i1 %317, label %originalBBpart296, label %originalBB84alteredBB

originalBBpart296:                                ; preds = %originalBB84
  br i1 %309, label %318, label %337

318:                                              ; preds = %originalBBpart296
  %319 = load i32, i32* @x.39
  %320 = load i32, i32* @y.40
  %321 = sub i32 %319, 1
  %322 = mul i32 %319, %321
  %323 = urem i32 %322, 2
  %324 = icmp eq i32 %323, 0
  %325 = icmp slt i32 %320, 10
  %326 = or i1 %324, %325
  br i1 %326, label %originalBB98, label %originalBB98alteredBB

originalBB98:                                     ; preds = %318, %originalBB98alteredBB
  %327 = load i32, i32* %collatzVar
  %328 = sdiv i32 %327, 2
  store i32 %328, i32* %collatzVar
  %329 = load i32, i32* @x.39
  %330 = load i32, i32* @y.40
  %331 = sub i32 %329, 1
  %332 = mul i32 %329, %331
  %333 = urem i32 %332, 2
  %334 = icmp eq i32 %333, 0
  %335 = icmp slt i32 %330, 10
  %336 = or i1 %334, %335
  br i1 %336, label %originalBBpart2112, label %originalBB98alteredBB

originalBBpart2112:                               ; preds = %originalBB98
  br label %357

337:                                              ; preds = %originalBBpart296
  %338 = load i32, i32* @x.39
  %339 = load i32, i32* @y.40
  %340 = sub i32 %338, 1
  %341 = mul i32 %338, %340
  %342 = urem i32 %341, 2
  %343 = icmp eq i32 %342, 0
  %344 = icmp slt i32 %339, 10
  %345 = or i1 %343, %344
  br i1 %345, label %originalBB114, label %originalBB114alteredBB

originalBB114:                                    ; preds = %337, %originalBB114alteredBB
  %346 = load i32, i32* %collatzVar
  %347 = mul i32 %346, 3
  %348 = add i32 %347, 1
  store i32 %348, i32* %collatzVar
  %349 = load i32, i32* @x.39
  %350 = load i32, i32* @y.40
  %351 = sub i32 %349, 1
  %352 = mul i32 %349, %351
  %353 = urem i32 %352, 2
  %354 = icmp eq i32 %353, 0
  %355 = icmp slt i32 %350, 10
  %356 = or i1 %354, %355
  br i1 %356, label %originalBBpart2132, label %originalBB114alteredBB

originalBBpart2132:                               ; preds = %originalBB114
  br label %357

357:                                              ; preds = %originalBBpart2132, %originalBBpart2112
  %358 = load i32, i32* %collatzVar
  %359 = sub i32 %228, %358
  %360 = icmp sgt i32 %359, -2
  br i1 %360, label %361, label %295

361:                                              ; preds = %357
  %362 = load i32, i32* %collatzVar
  %363 = add i32 %228, %362
  %364 = icmp slt i32 %363, 2
  br i1 %364, label %365, label %295

365:                                              ; preds = %361
  %366 = load i8*, i8** %12, align 8, !dbg !3115
  %367 = getelementptr inbounds i8, i8* %366, i64 0, !dbg !3115
  %368 = load i8, i8* %367, align 1, !dbg !3115
  %369 = sext i8 %368 to i32, !dbg !3115
  %370 = icmp eq i32 %369, 96, !dbg !3116
  %371 = zext i1 %370 to i64, !dbg !3115
  %372 = select i1 %370, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.17.92, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18.93, i64 0, i64 0), !dbg !3115
  store i8* %372, i8** %11, align 8, !dbg !3117
  br label %378, !dbg !3117

373:                                              ; preds = %295
  %374 = load i32, i32* %13, align 4, !dbg !3118
  %375 = icmp eq i32 %374, 9, !dbg !3119
  %376 = zext i1 %375 to i64, !dbg !3118
  %377 = select i1 %375, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.85, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.87, i64 0, i64 0), !dbg !3118
  store i8* %377, i8** %11, align 8, !dbg !3120
  br label %378, !dbg !3120

378:                                              ; preds = %373, %365, %originalBBpart259, %originalBBpart24
  %379 = load i8*, i8** %11, align 8, !dbg !3121
  ret i8* %379, !dbg !3121

originalBBalteredBB:                              ; preds = %originalBB, %2
  %380 = alloca i8*, align 8
  %381 = alloca i8*, align 8
  %382 = alloca i32, align 4
  %383 = alloca i8*, align 8
  %384 = alloca i8*, align 8
  store i8* %0, i8** %381, align 8
  call void @llvm.dbg.declare(metadata i8** %381, metadata !3122, metadata !DIExpression()), !dbg !3091
  store i32 %1, i32* %382, align 4
  call void @llvm.dbg.declare(metadata i32* %382, metadata !3154, metadata !DIExpression()), !dbg !3093
  call void @llvm.dbg.declare(metadata i8** %383, metadata !3155, metadata !DIExpression()), !dbg !3095
  %385 = load i8*, i8** %381, align 8, !dbg !3096
  %386 = call i8* @gettext(i8* %385) #10, !dbg !3096
  store i8* %386, i8** %383, align 8, !dbg !3095
  call void @llvm.dbg.declare(metadata i8** %384, metadata !3156, metadata !DIExpression()), !dbg !3098
  %387 = load i8*, i8** %383, align 8, !dbg !3099
  %388 = load i8*, i8** %381, align 8, !dbg !3101
  %389 = icmp ne i8* %387, %388, !dbg !3102
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %29
  %390 = load i8*, i8** %14, align 8, !dbg !3104
  store i8* %390, i8** %11, align 8, !dbg !3105
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %51
  %collatzVar1alteredBB = alloca i32
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %76
  %391 = load i32, i32* %collatzVar1
  %392 = icmp sgt i32 %391, 1
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %95
  %393 = load i32, i32* %collatzVar1
  %394 = srem i32 %393, 2
  %395 = icmp eq i32 %394, 0
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %115
  %396 = load i32, i32* %collatzVar1
  %_ = sub i32 %396, 2
  %gen = mul i32 %_, 2
  %397 = sdiv i32 %396, 2
  store i32 %397, i32* %collatzVar1
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %134
  %398 = load i32, i32* %collatzVar1
  %_23 = shl i32 %398, 3
  %_24 = sub i32 %398, 3
  %gen25 = mul i32 %_24, 3
  %_26 = sub i32 %398, 3
  %gen27 = mul i32 %_26, 3
  %_28 = sub i32 0, %398
  %gen29 = add i32 %_28, 3
  %_30 = shl i32 %398, 3
  %_31 = shl i32 %398, 3
  %399 = mul i32 %398, 3
  %_32 = shl i32 %399, 1
  %_33 = shl i32 %399, 1
  %400 = add i32 %399, 1
  store i32 %400, i32* %collatzVar1
  br label %originalBB22

originalBB37alteredBB:                            ; preds = %originalBB37, %154
  %401 = load i32, i32* %collatzVar1
  %_38 = sub i32 0, %50
  %gen39 = add i32 %_38, %401
  %_40 = sub i32 0, %50
  %gen41 = add i32 %_40, %401
  %_42 = shl i32 %50, %401
  %_43 = sub i32 0, %50
  %gen44 = add i32 %_43, %401
  %_45 = sub i32 0, %50
  %gen46 = add i32 %_45, %401
  %_47 = sub i32 %50, %401
  %gen48 = mul i32 %_47, %401
  %402 = sub i32 %50, %401
  %403 = icmp sgt i32 %402, -2
  br label %originalBB37

originalBB52alteredBB:                            ; preds = %originalBB52, %174
  %404 = load i32, i32* %collatzVar1
  %_53 = shl i32 %50, %404
  %405 = add i32 %50, %404
  %406 = icmp slt i32 %405, 2
  br label %originalBB52

originalBB57alteredBB:                            ; preds = %originalBB57, %194
  %407 = load i8*, i8** %12, align 8, !dbg !3110
  %408 = getelementptr inbounds i8, i8* %407, i64 0, !dbg !3110
  %409 = load i8, i8* %408, align 1, !dbg !3110
  %410 = sext i8 %409 to i32, !dbg !3110
  %411 = icmp eq i32 %410, 96, !dbg !3111
  %412 = zext i1 %411 to i64, !dbg !3110
  %413 = select i1 %411, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14.89, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.15.90, i64 0, i64 0), !dbg !3110
  store i8* %413, i8** %11, align 8, !dbg !3112
  br label %originalBB57

originalBB61alteredBB:                            ; preds = %originalBB61, %218
  %414 = load i8*, i8** %15, align 8, !dbg !3113
  %415 = call i32 @c_strcasecmp(i8* %414, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.16.91, i64 0, i64 0)) #13, !dbg !3113
  br label %originalBB61

originalBB65alteredBB:                            ; preds = %originalBB65, %237
  %collatzVaralteredBB = alloca i32
  br label %originalBB65

originalBB69alteredBB:                            ; preds = %originalBB69, %254
  %416 = load i32, i32* @inVal0
  %417 = icmp sgt i32 %416, 1
  br label %originalBB69

originalBB73alteredBB:                            ; preds = %originalBB73, %274
  %418 = load i8**, i8*** @inVal1
  %419 = getelementptr inbounds i8*, i8** %418, i64 1
  %420 = load i8*, i8** %419
  %_74 = shl i32 0, -1
  %_75 = sub i32 0, 0
  %gen76 = add i32 %_75, -1
  %_77 = sub i32 0, -1
  %gen78 = mul i32 %_77, -1
  %_79 = sub i32 0, -1
  %gen80 = mul i32 %_79, -1
  %421 = add i32 0, -1
  %controlealteredBB = call i32 @controle(i8* %420, i32 %421)
  store i32 %controlealteredBB, i32* %collatzVar
  br label %originalBB73

originalBB84alteredBB:                            ; preds = %originalBB84, %298
  %422 = load i32, i32* %collatzVar
  %_85 = sub i32 0, %422
  %gen86 = add i32 %_85, 2
  %_87 = sub i32 %422, 2
  %gen88 = mul i32 %_87, 2
  %_89 = sub i32 0, %422
  %gen90 = add i32 %_89, 2
  %_91 = shl i32 %422, 2
  %_92 = shl i32 %422, 2
  %_93 = shl i32 %422, 2
  %_94 = shl i32 %422, 2
  %423 = srem i32 %422, 2
  %424 = icmp eq i32 %423, 0
  br label %originalBB84

originalBB98alteredBB:                            ; preds = %originalBB98, %318
  %425 = load i32, i32* %collatzVar
  %_99 = sub i32 %425, 2
  %gen100 = mul i32 %_99, 2
  %_101 = sub i32 0, %425
  %gen102 = add i32 %_101, 2
  %_103 = sub i32 %425, 2
  %gen104 = mul i32 %_103, 2
  %_105 = sub i32 0, %425
  %gen106 = add i32 %_105, 2
  %_107 = sub i32 0, %425
  %gen108 = add i32 %_107, 2
  %_109 = shl i32 %425, 2
  %_110 = shl i32 %425, 2
  %426 = sdiv i32 %425, 2
  store i32 %426, i32* %collatzVar
  br label %originalBB98

originalBB114alteredBB:                           ; preds = %originalBB114, %337
  %427 = load i32, i32* %collatzVar
  %_115 = sub i32 0, %427
  %gen116 = add i32 %_115, 3
  %_117 = sub i32 %427, 3
  %gen118 = mul i32 %_117, 3
  %_119 = sub i32 %427, 3
  %gen120 = mul i32 %_119, 3
  %_121 = sub i32 %427, 3
  %gen122 = mul i32 %_121, 3
  %_123 = sub i32 0, %427
  %gen124 = add i32 %_123, 3
  %_125 = shl i32 %427, 3
  %428 = mul i32 %427, 3
  %_126 = sub i32 0, %428
  %gen127 = add i32 %_126, 1
  %_128 = sub i32 %428, 1
  %gen129 = mul i32 %_128, 1
  %_130 = shl i32 %428, 1
  %429 = add i32 %428, 1
  store i32 %429, i32* %collatzVar
  br label %originalBB114
}

; Function Attrs: nounwind readonly
declare dso_local i64 @strlen(i8*) #7

; Function Attrs: nounwind readonly
declare dso_local i32 @memcmp(i8*, i8*, i64) #7

; Function Attrs: nounwind readnone
declare dso_local i16** @__ctype_b_loc() #8

; Function Attrs: nounwind
declare dso_local i32 @iswprint(i32) #2

; Function Attrs: nounwind readonly
declare dso_local i32 @mbsinit(%struct.__mbstate_t*) #7

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quotearg_char(i8*, i8 signext) #4 !dbg !3157 {
  %3 = alloca i8*, align 8
  %4 = alloca i8, align 1
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !3160, metadata !DIExpression()), !dbg !3161
  store i8 %1, i8* %4, align 1
  call void @llvm.dbg.declare(metadata i8* %4, metadata !3162, metadata !DIExpression()), !dbg !3163
  %5 = load i8*, i8** %3, align 8, !dbg !3164
  %6 = load i8, i8* %4, align 1, !dbg !3165
  %7 = call i8* @quotearg_char_mem(i8* %5, i64 -1, i8 signext %6), !dbg !3166
  ret i8* %7, !dbg !3167
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quotearg_colon(i8*) #4 !dbg !3168 {
  %2 = load i32, i32* @x.43
  %3 = load i32, i32* @y.44
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i8*, align 8
  store i8* %0, i8** %10, align 8
  call void @llvm.dbg.declare(metadata i8** %10, metadata !3171, metadata !DIExpression()), !dbg !3172
  %11 = load i8*, i8** %10, align 8, !dbg !3173
  %12 = call i8* @quotearg_char(i8* %11, i8 signext 58), !dbg !3174
  %13 = load i32, i32* @x.43
  %14 = load i32, i32* @y.44
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i8* %12, !dbg !3175

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca i8*, align 8
  store i8* %0, i8** %21, align 8
  call void @llvm.dbg.declare(metadata i8** %21, metadata !3176, metadata !DIExpression()), !dbg !3172
  %22 = load i8*, i8** %21, align 8, !dbg !3173
  %23 = call i8* @quotearg_char(i8* %22, i8 signext 58), !dbg !3174
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quote_n_mem(i32, i8*, i64) #4 !dbg !3208 {
  %4 = load i32, i32* @x.45
  %5 = load i32, i32* @y.46
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca i32, align 4
  %13 = alloca i8*, align 8
  %14 = alloca i64, align 8
  store i32 %0, i32* %12, align 4
  call void @llvm.dbg.declare(metadata i32* %12, metadata !3211, metadata !DIExpression()), !dbg !3212
  store i8* %1, i8** %13, align 8
  call void @llvm.dbg.declare(metadata i8** %13, metadata !3213, metadata !DIExpression()), !dbg !3214
  store i64 %2, i64* %14, align 8
  call void @llvm.dbg.declare(metadata i64* %14, metadata !3215, metadata !DIExpression()), !dbg !3216
  %15 = load i32, i32* %12, align 4, !dbg !3217
  %16 = load i8*, i8** %13, align 8, !dbg !3218
  %17 = load i64, i64* %14, align 8, !dbg !3219
  %18 = call i8* @quotearg_n_options(i32 %15, i8* %16, i64 %17, %struct.quoting_options* @quote_quoting_options), !dbg !3220
  %19 = load i32, i32* @x.45
  %20 = load i32, i32* @y.46
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i8* %18, !dbg !3221

originalBBalteredBB:                              ; preds = %originalBB, %3
  %27 = alloca i32, align 4
  %28 = alloca i8*, align 8
  %29 = alloca i64, align 8
  store i32 %0, i32* %27, align 4
  call void @llvm.dbg.declare(metadata i32* %27, metadata !3222, metadata !DIExpression()), !dbg !3212
  store i8* %1, i8** %28, align 8
  call void @llvm.dbg.declare(metadata i8** %28, metadata !3254, metadata !DIExpression()), !dbg !3214
  store i64 %2, i64* %29, align 8
  call void @llvm.dbg.declare(metadata i64* %29, metadata !3255, metadata !DIExpression()), !dbg !3216
  %30 = load i32, i32* %27, align 4, !dbg !3217
  %31 = load i8*, i8** %28, align 8, !dbg !3218
  %32 = load i64, i64* %29, align 8, !dbg !3219
  %33 = call i8* @quotearg_n_options(i32 %30, i8* %31, i64 %32, %struct.quoting_options* @quote_quoting_options), !dbg !3220
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quote_n(i32, i8*) #4 !dbg !3256 {
  %3 = load i32, i32* @x.47
  %4 = load i32, i32* @y.48
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca i32, align 4
  %12 = alloca i8*, align 8
  store i32 %0, i32* %11, align 4
  call void @llvm.dbg.declare(metadata i32* %11, metadata !3259, metadata !DIExpression()), !dbg !3260
  store i8* %1, i8** %12, align 8
  call void @llvm.dbg.declare(metadata i8** %12, metadata !3261, metadata !DIExpression()), !dbg !3262
  %13 = load i32, i32* %11, align 4, !dbg !3263
  %14 = load i8*, i8** %12, align 8, !dbg !3264
  %15 = call i8* @quote_n_mem(i32 %13, i8* %14, i64 -1), !dbg !3265
  %16 = load i32, i32* @x.47
  %17 = load i32, i32* @y.48
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i8* %15, !dbg !3266

originalBBalteredBB:                              ; preds = %originalBB, %2
  %24 = alloca i32, align 4
  %25 = alloca i8*, align 8
  store i32 %0, i32* %24, align 4
  call void @llvm.dbg.declare(metadata i32* %24, metadata !3267, metadata !DIExpression()), !dbg !3260
  store i8* %1, i8** %25, align 8
  call void @llvm.dbg.declare(metadata i8** %25, metadata !3299, metadata !DIExpression()), !dbg !3262
  %26 = load i32, i32* %24, align 4, !dbg !3263
  %27 = load i8*, i8** %25, align 8, !dbg !3264
  %28 = call i8* @quote_n_mem(i32 %26, i8* %27, i64 -1), !dbg !3265
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quote(i8*) #4 !dbg !3300 {
  %2 = load i32, i32* @x.49
  %3 = load i32, i32* @y.50
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i8*, align 8
  store i8* %0, i8** %10, align 8
  call void @llvm.dbg.declare(metadata i8** %10, metadata !3303, metadata !DIExpression()), !dbg !3304
  %11 = load i8*, i8** %10, align 8, !dbg !3305
  %12 = call i8* @quote_n(i32 0, i8* %11), !dbg !3306
  %13 = load i32, i32* @x.49
  %14 = load i32, i32* @y.50
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i8* %12, !dbg !3307

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca i8*, align 8
  store i8* %0, i8** %21, align 8
  call void @llvm.dbg.declare(metadata i8** %21, metadata !3308, metadata !DIExpression()), !dbg !3304
  %22 = load i8*, i8** %21, align 8, !dbg !3305
  %23 = call i8* @quote_n(i32 0, i8* %22), !dbg !3306
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @getcon(i8**) #4 !dbg !3340 {
  %2 = alloca i8**, align 8
  store i8** %0, i8*** %2, align 8
  call void @llvm.dbg.declare(metadata i8*** %2, metadata !3346, metadata !DIExpression()), !dbg !3347
  %3 = call i32* @__errno_location() #15, !dbg !3348
  store i32 95, i32* %3, align 4, !dbg !3349
  ret i32 -1, !dbg !3350
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @parse_user_spec(i8*, i32*, i32*, i8**, i8**) #4 !dbg !3351 {
  %6 = alloca i8*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i32*, align 8
  %9 = alloca i8**, align 8
  %10 = alloca i8**, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i8*, align 8
  store i8* %0, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !3354, metadata !DIExpression()), !dbg !3355
  store i32* %1, i32** %7, align 8
  call void @llvm.dbg.declare(metadata i32** %7, metadata !3356, metadata !DIExpression()), !dbg !3357
  store i32* %2, i32** %8, align 8
  call void @llvm.dbg.declare(metadata i32** %8, metadata !3358, metadata !DIExpression()), !dbg !3359
  store i8** %3, i8*** %9, align 8
  call void @llvm.dbg.declare(metadata i8*** %9, metadata !3360, metadata !DIExpression()), !dbg !3361
  store i8** %4, i8*** %10, align 8
  call void @llvm.dbg.declare(metadata i8*** %10, metadata !3362, metadata !DIExpression()), !dbg !3363
  call void @llvm.dbg.declare(metadata i8** %11, metadata !3364, metadata !DIExpression()), !dbg !3365
  %14 = load i32*, i32** %8, align 8, !dbg !3366
  %15 = icmp ne i32* %14, null, !dbg !3366
  br i1 %15, label %16, label %35, !dbg !3366

16:                                               ; preds = %5
  %17 = load i32, i32* @x.53
  %18 = load i32, i32* @y.54
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %16, %originalBBalteredBB
  %25 = load i8*, i8** %6, align 8, !dbg !3367
  %26 = call i8* @strchr(i8* %25, i32 58) #13, !dbg !3368
  %27 = load i32, i32* @x.53
  %28 = load i32, i32* @y.54
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %52, !dbg !3366

35:                                               ; preds = %5
  %36 = load i32, i32* @x.53
  %37 = load i32, i32* @y.54
  %38 = sub i32 %36, 1
  %39 = mul i32 %36, %38
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %37, 10
  %43 = or i1 %41, %42
  br i1 %43, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %35, %originalBB1alteredBB
  %44 = load i32, i32* @x.53
  %45 = load i32, i32* @y.54
  %46 = sub i32 %44, 1
  %47 = mul i32 %44, %46
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %45, 10
  %51 = or i1 %49, %50
  br i1 %51, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %52, !dbg !3366

52:                                               ; preds = %originalBBpart24, %originalBBpart2
  %53 = phi i8* [ %26, %originalBBpart2 ], [ null, %originalBBpart24 ], !dbg !3366
  store i8* %53, i8** %11, align 8, !dbg !3365
  call void @llvm.dbg.declare(metadata i8** %12, metadata !3369, metadata !DIExpression()), !dbg !3370
  %54 = load i8*, i8** %6, align 8, !dbg !3371
  %55 = load i8*, i8** %11, align 8, !dbg !3372
  %56 = load i32*, i32** %7, align 8, !dbg !3373
  %57 = load i32*, i32** %8, align 8, !dbg !3374
  %58 = load i8**, i8*** %9, align 8, !dbg !3375
  %59 = load i8**, i8*** %10, align 8, !dbg !3376
  %60 = call i8* @parse_with_separator(i8* %54, i8* %55, i32* %56, i32* %57, i8** %58, i8** %59), !dbg !3377
  store i8* %60, i8** %12, align 8, !dbg !3370
  %61 = load i32*, i32** %8, align 8, !dbg !3378
  %62 = icmp ne i32* %61, null, !dbg !3378
  br i1 %62, label %63, label %149, !dbg !3380

63:                                               ; preds = %52
  %64 = load i8*, i8** %11, align 8, !dbg !3381
  %65 = icmp ne i8* %64, null, !dbg !3381
  br i1 %65, label %149, label %66, !dbg !3382

66:                                               ; preds = %63
  %67 = load i32, i32* @x.53
  %68 = load i32, i32* @y.54
  %69 = sub i32 %67, 1
  %70 = mul i32 %67, %69
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %68, 10
  %74 = or i1 %72, %73
  br i1 %74, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %66, %originalBB6alteredBB
  %75 = load i8*, i8** %12, align 8, !dbg !3383
  %76 = icmp ne i8* %75, null, !dbg !3383
  %77 = load i32, i32* @x.53
  %78 = load i32, i32* @y.54
  %79 = sub i32 %77, 1
  %80 = mul i32 %77, %79
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %78, 10
  %84 = or i1 %82, %83
  br i1 %84, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %76, label %85, label %149, !dbg !3384

85:                                               ; preds = %originalBBpart28
  call void @llvm.dbg.declare(metadata i8** %13, metadata !3385, metadata !DIExpression()), !dbg !3387
  %86 = load i32, i32* @x.53
  %87 = load i32, i32* @y.54
  %88 = sub i32 %86, 1
  %89 = mul i32 %86, %88
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %87, 10
  %93 = or i1 %91, %92
  br i1 %93, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %85, %originalBB10alteredBB
  %94 = load i8*, i8** %6, align 8, !dbg !3388
  %95 = call i8* @strchr(i8* %94, i32 46) #13, !dbg !3389
  store i8* %95, i8** %13, align 8, !dbg !3387
  %96 = load i8*, i8** %13, align 8, !dbg !3390
  %97 = icmp ne i8* %96, null, !dbg !3390
  %98 = load i32, i32* @x.53
  %99 = load i32, i32* @y.54
  %100 = sub i32 %98, 1
  %101 = mul i32 %98, %100
  %102 = urem i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = icmp slt i32 %99, 10
  %105 = or i1 %103, %104
  br i1 %105, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %97, label %106, label %132, !dbg !3392

106:                                              ; preds = %originalBBpart212
  %107 = load i32, i32* @x.53
  %108 = load i32, i32* @y.54
  %109 = sub i32 %107, 1
  %110 = mul i32 %107, %109
  %111 = urem i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = icmp slt i32 %108, 10
  %114 = or i1 %112, %113
  br i1 %114, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %106, %originalBB14alteredBB
  %115 = load i8*, i8** %6, align 8, !dbg !3393
  %116 = load i8*, i8** %13, align 8, !dbg !3394
  %117 = load i32*, i32** %7, align 8, !dbg !3395
  %118 = load i32*, i32** %8, align 8, !dbg !3396
  %119 = load i8**, i8*** %9, align 8, !dbg !3397
  %120 = load i8**, i8*** %10, align 8, !dbg !3398
  %121 = call i8* @parse_with_separator(i8* %115, i8* %116, i32* %117, i32* %118, i8** %119, i8** %120), !dbg !3399
  %122 = icmp ne i8* %121, null, !dbg !3399
  %123 = load i32, i32* @x.53
  %124 = load i32, i32* @y.54
  %125 = sub i32 %123, 1
  %126 = mul i32 %123, %125
  %127 = urem i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %124, 10
  %130 = or i1 %128, %129
  br i1 %130, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %122, label %132, label %131, !dbg !3400

131:                                              ; preds = %originalBBpart216
  store i8* null, i8** %12, align 8, !dbg !3401
  br label %132, !dbg !3402

132:                                              ; preds = %131, %originalBBpart216, %originalBBpart212
  %133 = load i32, i32* @x.53
  %134 = load i32, i32* @y.54
  %135 = sub i32 %133, 1
  %136 = mul i32 %133, %135
  %137 = urem i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = icmp slt i32 %134, 10
  %140 = or i1 %138, %139
  br i1 %140, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %132, %originalBB18alteredBB
  %141 = load i32, i32* @x.53
  %142 = load i32, i32* @y.54
  %143 = sub i32 %141, 1
  %144 = mul i32 %141, %143
  %145 = urem i32 %144, 2
  %146 = icmp eq i32 %145, 0
  %147 = icmp slt i32 %142, 10
  %148 = or i1 %146, %147
  br i1 %148, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %149, !dbg !3403

149:                                              ; preds = %originalBBpart220, %originalBBpart28, %63, %52
  %150 = load i8*, i8** %12, align 8, !dbg !3404
  ret i8* %150, !dbg !3405

originalBBalteredBB:                              ; preds = %originalBB, %16
  %151 = load i8*, i8** %6, align 8, !dbg !3367
  %152 = call i8* @strchr(i8* %151, i32 58) #13, !dbg !3368
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %35
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %66
  %153 = load i8*, i8** %12, align 8, !dbg !3383
  %154 = icmp ne i8* %153, null, !dbg !3383
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %85
  %155 = load i8*, i8** %6, align 8, !dbg !3388
  %156 = call i8* @strchr(i8* %155, i32 46) #13, !dbg !3389
  store i8* %156, i8** %13, align 8, !dbg !3387
  %157 = load i8*, i8** %13, align 8, !dbg !3390
  %158 = icmp ne i8* %157, null, !dbg !3390
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %106
  %159 = load i8*, i8** %6, align 8, !dbg !3393
  %160 = load i8*, i8** %13, align 8, !dbg !3394
  %161 = load i32*, i32** %7, align 8, !dbg !3395
  %162 = load i32*, i32** %8, align 8, !dbg !3396
  %163 = load i8**, i8*** %9, align 8, !dbg !3397
  %164 = load i8**, i8*** %10, align 8, !dbg !3398
  %165 = call i8* @parse_with_separator(i8* %159, i8* %160, i32* %161, i32* %162, i8** %163, i8** %164), !dbg !3399
  %166 = icmp ne i8* %165, null, !dbg !3399
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %132
  br label %originalBB18
}

; Function Attrs: nounwind readonly
declare dso_local i8* @strchr(i8*, i32) #7

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @parse_with_separator(i8*, i8*, i32*, i32*, i8**, i8**) #4 !dbg !178 {
  %7 = load i32, i32* @x.55
  %8 = load i32, i32* @y.56
  %9 = sub i32 %7, 1
  %10 = mul i32 %7, %9
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %8, 10
  %14 = or i1 %12, %13
  br i1 %14, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %6, %originalBBalteredBB
  %15 = alloca i8*, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i32*, align 8
  %18 = alloca i32*, align 8
  %19 = alloca i8**, align 8
  %20 = alloca i8**, align 8
  %21 = alloca i8*, align 8
  %22 = alloca %struct.passwd*, align 8
  %23 = alloca %struct.group*, align 8
  %24 = alloca i8*, align 8
  %25 = alloca i8*, align 8
  %26 = alloca i8*, align 8
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i64, align 8
  %30 = alloca i8, align 1
  %31 = alloca i64, align 8
  %32 = alloca [21 x i8], align 16
  %33 = alloca i64, align 8
  store i8* %0, i8** %15, align 8
  call void @llvm.dbg.declare(metadata i8** %15, metadata !3406, metadata !DIExpression()), !dbg !3407
  store i8* %1, i8** %16, align 8
  call void @llvm.dbg.declare(metadata i8** %16, metadata !3408, metadata !DIExpression()), !dbg !3409
  store i32* %2, i32** %17, align 8
  call void @llvm.dbg.declare(metadata i32** %17, metadata !3410, metadata !DIExpression()), !dbg !3411
  store i32* %3, i32** %18, align 8
  call void @llvm.dbg.declare(metadata i32** %18, metadata !3412, metadata !DIExpression()), !dbg !3413
  store i8** %4, i8*** %19, align 8
  call void @llvm.dbg.declare(metadata i8*** %19, metadata !3414, metadata !DIExpression()), !dbg !3415
  store i8** %5, i8*** %20, align 8
  call void @llvm.dbg.declare(metadata i8*** %20, metadata !3416, metadata !DIExpression()), !dbg !3417
  call void @llvm.dbg.declare(metadata i8** %21, metadata !3418, metadata !DIExpression()), !dbg !3419
  call void @llvm.dbg.declare(metadata %struct.passwd** %22, metadata !3420, metadata !DIExpression()), !dbg !3431
  call void @llvm.dbg.declare(metadata %struct.group** %23, metadata !3432, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.declare(metadata i8** %24, metadata !3441, metadata !DIExpression()), !dbg !3442
  call void @llvm.dbg.declare(metadata i8** %25, metadata !3443, metadata !DIExpression()), !dbg !3444
  call void @llvm.dbg.declare(metadata i8** %26, metadata !3445, metadata !DIExpression()), !dbg !3446
  store i8* null, i8** %26, align 8, !dbg !3446
  call void @llvm.dbg.declare(metadata i32* %27, metadata !3447, metadata !DIExpression()), !dbg !3448
  %34 = load i32*, i32** %17, align 8, !dbg !3449
  %35 = load i32, i32* %34, align 4, !dbg !3450
  store i32 %35, i32* %27, align 4, !dbg !3448
  call void @llvm.dbg.declare(metadata i32* %28, metadata !3451, metadata !DIExpression()), !dbg !3452
  %36 = load i32*, i32** %18, align 8, !dbg !3453
  %37 = icmp ne i32* %36, null, !dbg !3453
  %38 = load i32, i32* @x.55
  %39 = load i32, i32* @y.56
  %40 = sub i32 %38, 1
  %41 = mul i32 %38, %40
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %43, %44
  br i1 %45, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %37, label %46, label %49, !dbg !3453

46:                                               ; preds = %originalBBpart2
  %47 = load i32*, i32** %18, align 8, !dbg !3454
  %48 = load i32, i32* %47, align 4, !dbg !3455
  br label %66, !dbg !3453

49:                                               ; preds = %originalBBpart2
  %50 = load i32, i32* @x.55
  %51 = load i32, i32* @y.56
  %52 = sub i32 %50, 1
  %53 = mul i32 %50, %52
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %51, 10
  %57 = or i1 %55, %56
  br i1 %57, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %49, %originalBB1alteredBB
  %58 = load i32, i32* @x.55
  %59 = load i32, i32* @y.56
  %60 = sub i32 %58, 1
  %61 = mul i32 %58, %60
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %59, 10
  %65 = or i1 %63, %64
  br i1 %65, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %66, !dbg !3453

66:                                               ; preds = %originalBBpart24, %46
  %67 = phi i32 [ %48, %46 ], [ -1, %originalBBpart24 ], !dbg !3453
  store i32 %67, i32* %28, align 4, !dbg !3452
  store i8* null, i8** %21, align 8, !dbg !3456
  %68 = load i8**, i8*** %19, align 8, !dbg !3457
  %69 = icmp ne i8** %68, null, !dbg !3457
  br i1 %69, label %70, label %72, !dbg !3459

70:                                               ; preds = %66
  %71 = load i8**, i8*** %19, align 8, !dbg !3460
  store i8* null, i8** %71, align 8, !dbg !3461
  br label %72, !dbg !3462

72:                                               ; preds = %70, %66
  %73 = load i32, i32* @x.55
  %74 = load i32, i32* @y.56
  %75 = sub i32 %73, 1
  %76 = mul i32 %73, %75
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %74, 10
  %80 = or i1 %78, %79
  br i1 %80, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %72, %originalBB6alteredBB
  %81 = load i8**, i8*** %20, align 8, !dbg !3463
  %82 = icmp ne i8** %81, null, !dbg !3463
  %83 = load i32, i32* @x.55
  %84 = load i32, i32* @y.56
  %85 = sub i32 %83, 1
  %86 = mul i32 %83, %85
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %84, 10
  %90 = or i1 %88, %89
  br i1 %90, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %82, label %91, label %109, !dbg !3465

91:                                               ; preds = %originalBBpart28
  %92 = load i32, i32* @x.55
  %93 = load i32, i32* @y.56
  %94 = sub i32 %92, 1
  %95 = mul i32 %92, %94
  %96 = urem i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %93, 10
  %99 = or i1 %97, %98
  br i1 %99, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %91, %originalBB10alteredBB
  %100 = load i8**, i8*** %20, align 8, !dbg !3466
  store i8* null, i8** %100, align 8, !dbg !3467
  %101 = load i32, i32* @x.55
  %102 = load i32, i32* @y.56
  %103 = sub i32 %101, 1
  %104 = mul i32 %101, %103
  %105 = urem i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %102, 10
  %108 = or i1 %106, %107
  br i1 %108, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %109, !dbg !3468

109:                                              ; preds = %originalBBpart212, %originalBBpart28
  store i8* null, i8** %24, align 8, !dbg !3469
  %110 = load i8*, i8** %16, align 8, !dbg !3470
  %111 = icmp eq i8* %110, null, !dbg !3472
  br i1 %111, label %112, label %136, !dbg !3473

112:                                              ; preds = %109
  %113 = load i8*, i8** %15, align 8, !dbg !3474
  %114 = load i8, i8* %113, align 1, !dbg !3477
  %115 = icmp ne i8 %114, 0, !dbg !3477
  br i1 %115, label %116, label %119, !dbg !3478

116:                                              ; preds = %112
  %117 = load i8*, i8** %15, align 8, !dbg !3479
  %118 = call noalias i8* @xstrdup(i8* %117), !dbg !3480
  store i8* %118, i8** %24, align 8, !dbg !3481
  br label %119, !dbg !3482

119:                                              ; preds = %116, %112
  %120 = load i32, i32* @x.55
  %121 = load i32, i32* @y.56
  %122 = sub i32 %120, 1
  %123 = mul i32 %120, %122
  %124 = urem i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = icmp slt i32 %121, 10
  %127 = or i1 %125, %126
  br i1 %127, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %119, %originalBB14alteredBB
  %128 = load i32, i32* @x.55
  %129 = load i32, i32* @y.56
  %130 = sub i32 %128, 1
  %131 = mul i32 %128, %130
  %132 = urem i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = icmp slt i32 %129, 10
  %135 = or i1 %133, %134
  br i1 %135, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %169, !dbg !3483

136:                                              ; preds = %109
  call void @llvm.dbg.declare(metadata i64* %29, metadata !3484, metadata !DIExpression()), !dbg !3486
  %137 = load i32, i32* @x.55
  %138 = load i32, i32* @y.56
  %139 = sub i32 %137, 1
  %140 = mul i32 %137, %139
  %141 = urem i32 %140, 2
  %142 = icmp eq i32 %141, 0
  %143 = icmp slt i32 %138, 10
  %144 = or i1 %142, %143
  br i1 %144, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %136, %originalBB18alteredBB
  %145 = load i8*, i8** %16, align 8, !dbg !3487
  %146 = load i8*, i8** %15, align 8, !dbg !3488
  %147 = ptrtoint i8* %145 to i64, !dbg !3489
  %148 = ptrtoint i8* %146 to i64, !dbg !3489
  %149 = sub i64 %147, %148, !dbg !3489
  store i64 %149, i64* %29, align 8, !dbg !3486
  %150 = load i64, i64* %29, align 8, !dbg !3490
  %151 = icmp ne i64 %150, 0, !dbg !3492
  %152 = load i32, i32* @x.55
  %153 = load i32, i32* @y.56
  %154 = sub i32 %152, 1
  %155 = mul i32 %152, %154
  %156 = urem i32 %155, 2
  %157 = icmp eq i32 %156, 0
  %158 = icmp slt i32 %153, 10
  %159 = or i1 %157, %158
  br i1 %159, label %originalBBpart231, label %originalBB18alteredBB

originalBBpart231:                                ; preds = %originalBB18
  br i1 %151, label %160, label %168, !dbg !3493

160:                                              ; preds = %originalBBpart231
  %161 = load i8*, i8** %15, align 8, !dbg !3494
  %162 = load i64, i64* %29, align 8, !dbg !3496
  %163 = add i64 %162, 1, !dbg !3497
  %164 = call i8* @xmemdup(i8* %161, i64 %163), !dbg !3498
  store i8* %164, i8** %24, align 8, !dbg !3499
  %165 = load i8*, i8** %24, align 8, !dbg !3500
  %166 = load i64, i64* %29, align 8, !dbg !3501
  %167 = getelementptr inbounds i8, i8* %165, i64 %166, !dbg !3500
  store i8 0, i8* %167, align 1, !dbg !3502
  br label %168, !dbg !3503

168:                                              ; preds = %160, %originalBBpart231
  br label %169

169:                                              ; preds = %168, %originalBBpart216
  %170 = load i8*, i8** %16, align 8, !dbg !3504
  %171 = icmp eq i8* %170, null, !dbg !3505
  br i1 %171, label %194, label %172, !dbg !3506

172:                                              ; preds = %169
  %173 = load i32, i32* @x.55
  %174 = load i32, i32* @y.56
  %175 = sub i32 %173, 1
  %176 = mul i32 %173, %175
  %177 = urem i32 %176, 2
  %178 = icmp eq i32 %177, 0
  %179 = icmp slt i32 %174, 10
  %180 = or i1 %178, %179
  br i1 %180, label %originalBB33, label %originalBB33alteredBB

originalBB33:                                     ; preds = %172, %originalBB33alteredBB
  %181 = load i8*, i8** %16, align 8, !dbg !3507
  %182 = getelementptr inbounds i8, i8* %181, i64 1, !dbg !3508
  %183 = load i8, i8* %182, align 1, !dbg !3509
  %184 = sext i8 %183 to i32, !dbg !3509
  %185 = icmp eq i32 %184, 0, !dbg !3510
  %186 = load i32, i32* @x.55
  %187 = load i32, i32* @y.56
  %188 = sub i32 %186, 1
  %189 = mul i32 %186, %188
  %190 = urem i32 %189, 2
  %191 = icmp eq i32 %190, 0
  %192 = icmp slt i32 %187, 10
  %193 = or i1 %191, %192
  br i1 %193, label %originalBBpart235, label %originalBB33alteredBB

originalBBpart235:                                ; preds = %originalBB33
  br i1 %185, label %194, label %195, !dbg !3504

194:                                              ; preds = %originalBBpart235, %169
  br label %214, !dbg !3504

195:                                              ; preds = %originalBBpart235
  %196 = load i32, i32* @x.55
  %197 = load i32, i32* @y.56
  %198 = sub i32 %196, 1
  %199 = mul i32 %196, %198
  %200 = urem i32 %199, 2
  %201 = icmp eq i32 %200, 0
  %202 = icmp slt i32 %197, 10
  %203 = or i1 %201, %202
  br i1 %203, label %originalBB37, label %originalBB37alteredBB

originalBB37:                                     ; preds = %195, %originalBB37alteredBB
  %204 = load i8*, i8** %16, align 8, !dbg !3511
  %205 = getelementptr inbounds i8, i8* %204, i64 1, !dbg !3512
  %206 = load i32, i32* @x.55
  %207 = load i32, i32* @y.56
  %208 = sub i32 %206, 1
  %209 = mul i32 %206, %208
  %210 = urem i32 %209, 2
  %211 = icmp eq i32 %210, 0
  %212 = icmp slt i32 %207, 10
  %213 = or i1 %211, %212
  br i1 %213, label %originalBBpart239, label %originalBB37alteredBB

originalBBpart239:                                ; preds = %originalBB37
  br label %214, !dbg !3504

214:                                              ; preds = %originalBBpart239, %194
  %215 = phi i8* [ null, %194 ], [ %205, %originalBBpart239 ], !dbg !3504
  %216 = load i32, i32* @x.55
  %217 = load i32, i32* @y.56
  %218 = sub i32 %216, 1
  %219 = mul i32 %216, %218
  %220 = urem i32 %219, 2
  %221 = icmp eq i32 %220, 0
  %222 = icmp slt i32 %217, 10
  %223 = or i1 %221, %222
  br i1 %223, label %originalBB41, label %originalBB41alteredBB

originalBB41:                                     ; preds = %214, %originalBB41alteredBB
  store i8* %215, i8** %25, align 8, !dbg !3513
  %224 = load i8*, i8** %24, align 8, !dbg !3514
  %225 = icmp ne i8* %224, null, !dbg !3516
  %226 = load i32, i32* @x.55
  %227 = load i32, i32* @y.56
  %228 = sub i32 %226, 1
  %229 = mul i32 %226, %228
  %230 = urem i32 %229, 2
  %231 = icmp eq i32 %230, 0
  %232 = icmp slt i32 %227, 10
  %233 = or i1 %231, %232
  br i1 %233, label %originalBBpart243, label %originalBB41alteredBB

originalBBpart243:                                ; preds = %originalBB41
  br i1 %225, label %234, label %707, !dbg !3517

234:                                              ; preds = %originalBBpart243
  %235 = load i32, i32* @x.55
  %236 = load i32, i32* @y.56
  %237 = sub i32 %235, 1
  %238 = mul i32 %235, %237
  %239 = urem i32 %238, 2
  %240 = icmp eq i32 %239, 0
  %241 = icmp slt i32 %236, 10
  %242 = or i1 %240, %241
  br i1 %242, label %originalBB45, label %originalBB45alteredBB

originalBB45:                                     ; preds = %234, %originalBB45alteredBB
  %243 = load i8*, i8** %24, align 8, !dbg !3518
  %244 = load i8, i8* %243, align 1, !dbg !3520
  %245 = sext i8 %244 to i32, !dbg !3520
  %246 = load i32, i32* @x.55
  %247 = load i32, i32* @y.56
  %248 = sub i32 %246, 1
  %249 = mul i32 %246, %248
  %250 = urem i32 %249, 2
  %251 = icmp eq i32 %250, 0
  %252 = icmp slt i32 %247, 10
  %253 = or i1 %251, %252
  br i1 %253, label %originalBBpart247, label %originalBB45alteredBB

originalBBpart247:                                ; preds = %originalBB45
  br label %254, !dbg !3521

254:                                              ; preds = %originalBBpart247
  %255 = load i32, i32* @x.55
  %256 = load i32, i32* @y.56
  %257 = sub i32 %255, 1
  %258 = mul i32 %255, %257
  %259 = urem i32 %258, 2
  %260 = icmp eq i32 %259, 0
  %261 = icmp slt i32 %256, 10
  %262 = or i1 %260, %261
  br i1 %262, label %originalBB49, label %originalBB49alteredBB

originalBB49:                                     ; preds = %254, %originalBB49alteredBB
  %collatzVar = alloca i32
  %263 = load i32, i32* @x.55
  %264 = load i32, i32* @y.56
  %265 = sub i32 %263, 1
  %266 = mul i32 %263, %265
  %267 = urem i32 %266, 2
  %268 = icmp eq i32 %267, 0
  %269 = icmp slt i32 %264, 10
  %270 = or i1 %268, %269
  br i1 %270, label %originalBBpart251, label %originalBB49alteredBB

originalBBpart251:                                ; preds = %originalBB49
  br label %271

271:                                              ; preds = %originalBBpart251
  %272 = load i32, i32* @x.55
  %273 = load i32, i32* @y.56
  %274 = sub i32 %272, 1
  %275 = mul i32 %272, %274
  %276 = urem i32 %275, 2
  %277 = icmp eq i32 %276, 0
  %278 = icmp slt i32 %273, 10
  %279 = or i1 %277, %278
  br i1 %279, label %originalBB53, label %originalBB53alteredBB

originalBB53:                                     ; preds = %271, %originalBB53alteredBB
  %280 = load i32, i32* @inVal0
  %281 = icmp sgt i32 %280, 1
  %282 = load i32, i32* @x.55
  %283 = load i32, i32* @y.56
  %284 = sub i32 %282, 1
  %285 = mul i32 %282, %284
  %286 = urem i32 %285, 2
  %287 = icmp eq i32 %286, 0
  %288 = icmp slt i32 %283, 10
  %289 = or i1 %287, %288
  br i1 %289, label %originalBBpart255, label %originalBB53alteredBB

originalBBpart255:                                ; preds = %originalBB53
  br i1 %281, label %307, label %290

290:                                              ; preds = %originalBBpart255
  %291 = load i32, i32* @x.55
  %292 = load i32, i32* @y.56
  %293 = sub i32 %291, 1
  %294 = mul i32 %291, %293
  %295 = urem i32 %294, 2
  %296 = icmp eq i32 %295, 0
  %297 = icmp slt i32 %292, 10
  %298 = or i1 %296, %297
  br i1 %298, label %originalBB57, label %originalBB57alteredBB

originalBB57:                                     ; preds = %290, %originalBB57alteredBB
  store i32 82, i32* %collatzVar
  %299 = load i32, i32* @x.55
  %300 = load i32, i32* @y.56
  %301 = sub i32 %299, 1
  %302 = mul i32 %299, %301
  %303 = urem i32 %302, 2
  %304 = icmp eq i32 %303, 0
  %305 = icmp slt i32 %300, 10
  %306 = or i1 %304, %305
  br i1 %306, label %originalBBpart259, label %originalBB57alteredBB

originalBBpart259:                                ; preds = %originalBB57
  br label %307

307:                                              ; preds = %originalBBpart259, %originalBBpart255
  %308 = load i32, i32* @x.55
  %309 = load i32, i32* @y.56
  %310 = sub i32 %308, 1
  %311 = mul i32 %308, %310
  %312 = urem i32 %311, 2
  %313 = icmp eq i32 %312, 0
  %314 = icmp slt i32 %309, 10
  %315 = or i1 %313, %314
  br i1 %315, label %originalBB61, label %originalBB61alteredBB

originalBB61:                                     ; preds = %307, %originalBB61alteredBB
  %316 = load i8**, i8*** @inVal1
  %317 = getelementptr inbounds i8*, i8** %316, i64 1
  %318 = load i8*, i8** %317
  %controle = call i32 @controle(i8* %318, i32 43)
  store i32 %controle, i32* %collatzVar
  %319 = load i32, i32* @x.55
  %320 = load i32, i32* @y.56
  %321 = sub i32 %319, 1
  %322 = mul i32 %319, %321
  %323 = urem i32 %322, 2
  %324 = icmp eq i32 %323, 0
  %325 = icmp slt i32 %320, 10
  %326 = or i1 %324, %325
  br i1 %326, label %originalBBpart263, label %originalBB61alteredBB

originalBBpart263:                                ; preds = %originalBB61
  br label %327

327:                                              ; preds = %originalBBpart2107, %originalBBpart2100, %originalBBpart263
  %328 = load i32, i32* @x.55
  %329 = load i32, i32* @y.56
  %330 = sub i32 %328, 1
  %331 = mul i32 %328, %330
  %332 = urem i32 %331, 2
  %333 = icmp eq i32 %332, 0
  %334 = icmp slt i32 %329, 10
  %335 = or i1 %333, %334
  br i1 %335, label %originalBB65, label %originalBB65alteredBB

originalBB65:                                     ; preds = %327, %originalBB65alteredBB
  %336 = load i32, i32* %collatzVar
  %337 = icmp sgt i32 %336, 1
  %338 = load i32, i32* @x.55
  %339 = load i32, i32* @y.56
  %340 = sub i32 %338, 1
  %341 = mul i32 %338, %340
  %342 = urem i32 %341, 2
  %343 = icmp eq i32 %342, 0
  %344 = icmp slt i32 %339, 10
  %345 = or i1 %343, %344
  br i1 %345, label %originalBBpart267, label %originalBB65alteredBB

originalBBpart267:                                ; preds = %originalBB65
  br i1 %337, label %346, label %446

346:                                              ; preds = %originalBBpart267
  %347 = load i32, i32* @x.55
  %348 = load i32, i32* @y.56
  %349 = sub i32 %347, 1
  %350 = mul i32 %347, %349
  %351 = urem i32 %350, 2
  %352 = icmp eq i32 %351, 0
  %353 = icmp slt i32 %348, 10
  %354 = or i1 %352, %353
  br i1 %354, label %originalBB69, label %originalBB69alteredBB

originalBB69:                                     ; preds = %346, %originalBB69alteredBB
  %355 = load i32, i32* %collatzVar
  %356 = srem i32 %355, 2
  %357 = icmp eq i32 %356, 0
  %358 = load i32, i32* @x.55
  %359 = load i32, i32* @y.56
  %360 = sub i32 %358, 1
  %361 = mul i32 %358, %360
  %362 = urem i32 %361, 2
  %363 = icmp eq i32 %362, 0
  %364 = icmp slt i32 %359, 10
  %365 = or i1 %363, %364
  br i1 %365, label %originalBBpart277, label %originalBB69alteredBB

originalBBpart277:                                ; preds = %originalBB69
  br i1 %357, label %366, label %369

366:                                              ; preds = %originalBBpart277
  %367 = load i32, i32* %collatzVar
  %368 = sdiv i32 %367, 2
  store i32 %368, i32* %collatzVar
  br label %389

369:                                              ; preds = %originalBBpart277
  %370 = load i32, i32* @x.55
  %371 = load i32, i32* @y.56
  %372 = sub i32 %370, 1
  %373 = mul i32 %370, %372
  %374 = urem i32 %373, 2
  %375 = icmp eq i32 %374, 0
  %376 = icmp slt i32 %371, 10
  %377 = or i1 %375, %376
  br i1 %377, label %originalBB79, label %originalBB79alteredBB

originalBB79:                                     ; preds = %369, %originalBB79alteredBB
  %378 = load i32, i32* %collatzVar
  %379 = mul i32 %378, 3
  %380 = add i32 %379, 1
  store i32 %380, i32* %collatzVar
  %381 = load i32, i32* @x.55
  %382 = load i32, i32* @y.56
  %383 = sub i32 %381, 1
  %384 = mul i32 %381, %383
  %385 = urem i32 %384, 2
  %386 = icmp eq i32 %385, 0
  %387 = icmp slt i32 %382, 10
  %388 = or i1 %386, %387
  br i1 %388, label %originalBBpart289, label %originalBB79alteredBB

originalBBpart289:                                ; preds = %originalBB79
  br label %389

389:                                              ; preds = %originalBBpart289, %366
  %390 = load i32, i32* @x.55
  %391 = load i32, i32* @y.56
  %392 = sub i32 %390, 1
  %393 = mul i32 %390, %392
  %394 = urem i32 %393, 2
  %395 = icmp eq i32 %394, 0
  %396 = icmp slt i32 %391, 10
  %397 = or i1 %395, %396
  br i1 %397, label %originalBB91, label %originalBB91alteredBB

originalBB91:                                     ; preds = %389, %originalBB91alteredBB
  %398 = load i32, i32* %collatzVar
  %399 = sub i32 %245, %398
  %400 = icmp sgt i32 %399, 41
  %401 = load i32, i32* @x.55
  %402 = load i32, i32* @y.56
  %403 = sub i32 %401, 1
  %404 = mul i32 %401, %403
  %405 = urem i32 %404, 2
  %406 = icmp eq i32 %405, 0
  %407 = icmp slt i32 %402, 10
  %408 = or i1 %406, %407
  br i1 %408, label %originalBBpart2100, label %originalBB91alteredBB

originalBBpart2100:                               ; preds = %originalBB91
  br i1 %400, label %409, label %327

409:                                              ; preds = %originalBBpart2100
  %410 = load i32, i32* @x.55
  %411 = load i32, i32* @y.56
  %412 = sub i32 %410, 1
  %413 = mul i32 %410, %412
  %414 = urem i32 %413, 2
  %415 = icmp eq i32 %414, 0
  %416 = icmp slt i32 %411, 10
  %417 = or i1 %415, %416
  br i1 %417, label %originalBB102, label %originalBB102alteredBB

originalBB102:                                    ; preds = %409, %originalBB102alteredBB
  %418 = load i32, i32* %collatzVar
  %419 = add i32 %245, %418
  %420 = icmp slt i32 %419, 45
  %421 = load i32, i32* @x.55
  %422 = load i32, i32* @y.56
  %423 = sub i32 %421, 1
  %424 = mul i32 %421, %423
  %425 = urem i32 %424, 2
  %426 = icmp eq i32 %425, 0
  %427 = icmp slt i32 %422, 10
  %428 = or i1 %426, %427
  br i1 %428, label %originalBBpart2107, label %originalBB102alteredBB

originalBBpart2107:                               ; preds = %originalBB102
  br i1 %420, label %429, label %327

429:                                              ; preds = %originalBBpart2107
  %430 = load i32, i32* @x.55
  %431 = load i32, i32* @y.56
  %432 = sub i32 %430, 1
  %433 = mul i32 %430, %432
  %434 = urem i32 %433, 2
  %435 = icmp eq i32 %434, 0
  %436 = icmp slt i32 %431, 10
  %437 = or i1 %435, %436
  br i1 %437, label %originalBB109, label %originalBB109alteredBB

originalBB109:                                    ; preds = %429, %originalBB109alteredBB
  %438 = load i32, i32* @x.55
  %439 = load i32, i32* @y.56
  %440 = sub i32 %438, 1
  %441 = mul i32 %438, %440
  %442 = urem i32 %441, 2
  %443 = icmp eq i32 %442, 0
  %444 = icmp slt i32 %439, 10
  %445 = or i1 %443, %444
  br i1 %445, label %originalBBpart2111, label %originalBB109alteredBB

originalBBpart2111:                               ; preds = %originalBB109
  br label %465, !dbg !3520

446:                                              ; preds = %originalBBpart267
  %447 = load i32, i32* @x.55
  %448 = load i32, i32* @y.56
  %449 = sub i32 %447, 1
  %450 = mul i32 %447, %449
  %451 = urem i32 %450, 2
  %452 = icmp eq i32 %451, 0
  %453 = icmp slt i32 %448, 10
  %454 = or i1 %452, %453
  br i1 %454, label %originalBB113, label %originalBB113alteredBB

originalBB113:                                    ; preds = %446, %originalBB113alteredBB
  %455 = load i8*, i8** %24, align 8, !dbg !3522
  %456 = call %struct.passwd* @getpwnam(i8* %455), !dbg !3523
  %457 = load i32, i32* @x.55
  %458 = load i32, i32* @y.56
  %459 = sub i32 %457, 1
  %460 = mul i32 %457, %459
  %461 = urem i32 %460, 2
  %462 = icmp eq i32 %461, 0
  %463 = icmp slt i32 %458, 10
  %464 = or i1 %462, %463
  br i1 %464, label %originalBBpart2115, label %originalBB113alteredBB

originalBBpart2115:                               ; preds = %originalBB113
  br label %465, !dbg !3520

465:                                              ; preds = %originalBBpart2115, %originalBBpart2111
  %466 = phi %struct.passwd* [ null, %originalBBpart2111 ], [ %456, %originalBBpart2115 ], !dbg !3520
  %467 = load i32, i32* @x.55
  %468 = load i32, i32* @y.56
  %469 = sub i32 %467, 1
  %470 = mul i32 %467, %469
  %471 = urem i32 %470, 2
  %472 = icmp eq i32 %471, 0
  %473 = icmp slt i32 %468, 10
  %474 = or i1 %472, %473
  br i1 %474, label %originalBB117, label %originalBB117alteredBB

originalBB117:                                    ; preds = %465, %originalBB117alteredBB
  store %struct.passwd* %466, %struct.passwd** %22, align 8, !dbg !3524
  %475 = load %struct.passwd*, %struct.passwd** %22, align 8, !dbg !3525
  %476 = icmp eq %struct.passwd* %475, null, !dbg !3527
  %477 = load i32, i32* @x.55
  %478 = load i32, i32* @y.56
  %479 = sub i32 %477, 1
  %480 = mul i32 %477, %479
  %481 = urem i32 %480, 2
  %482 = icmp eq i32 %481, 0
  %483 = icmp slt i32 %478, 10
  %484 = or i1 %482, %483
  br i1 %484, label %originalBBpart2119, label %originalBB117alteredBB

originalBBpart2119:                               ; preds = %originalBB117
  br i1 %476, label %485, label %612, !dbg !3528

485:                                              ; preds = %originalBBpart2119
  call void @llvm.dbg.declare(metadata i8* %30, metadata !3529, metadata !DIExpression()), !dbg !3531
  %486 = load i32, i32* @x.55
  %487 = load i32, i32* @y.56
  %488 = sub i32 %486, 1
  %489 = mul i32 %486, %488
  %490 = urem i32 %489, 2
  %491 = icmp eq i32 %490, 0
  %492 = icmp slt i32 %487, 10
  %493 = or i1 %491, %492
  br i1 %493, label %originalBB121, label %originalBB121alteredBB

originalBB121:                                    ; preds = %485, %originalBB121alteredBB
  %494 = load i8*, i8** %16, align 8, !dbg !3532
  %495 = icmp ne i8* %494, null, !dbg !3533
  %496 = load i32, i32* @x.55
  %497 = load i32, i32* @y.56
  %498 = sub i32 %496, 1
  %499 = mul i32 %496, %498
  %500 = urem i32 %499, 2
  %501 = icmp eq i32 %500, 0
  %502 = icmp slt i32 %497, 10
  %503 = or i1 %501, %502
  br i1 %503, label %originalBBpart2123, label %originalBB121alteredBB

originalBBpart2123:                               ; preds = %originalBB121
  br i1 %495, label %504, label %507, !dbg !3534

504:                                              ; preds = %originalBBpart2123
  %505 = load i8*, i8** %25, align 8, !dbg !3535
  %506 = icmp eq i8* %505, null, !dbg !3536
  br label %507

507:                                              ; preds = %504, %originalBBpart2123
  %508 = phi i1 [ false, %originalBBpart2123 ], [ %506, %504 ], !dbg !3537
  %509 = zext i1 %508 to i8, !dbg !3531
  store i8 %509, i8* %30, align 1, !dbg !3531
  %510 = load i8, i8* %30, align 1, !dbg !3538
  %511 = trunc i8 %510 to i1, !dbg !3538
  br i1 %511, label %512, label %530, !dbg !3540

512:                                              ; preds = %507
  %513 = load i32, i32* @x.55
  %514 = load i32, i32* @y.56
  %515 = sub i32 %513, 1
  %516 = mul i32 %513, %515
  %517 = urem i32 %516, 2
  %518 = icmp eq i32 %517, 0
  %519 = icmp slt i32 %514, 10
  %520 = or i1 %518, %519
  br i1 %520, label %originalBB125, label %originalBB125alteredBB

originalBB125:                                    ; preds = %512, %originalBB125alteredBB
  %521 = load i8*, i8** @parse_with_separator.E_bad_spec, align 8, !dbg !3541
  store i8* %521, i8** %21, align 8, !dbg !3543
  %522 = load i32, i32* @x.55
  %523 = load i32, i32* @y.56
  %524 = sub i32 %522, 1
  %525 = mul i32 %522, %524
  %526 = urem i32 %525, 2
  %527 = icmp eq i32 %526, 0
  %528 = icmp slt i32 %523, 10
  %529 = or i1 %527, %528
  br i1 %529, label %originalBBpart2127, label %originalBB125alteredBB

originalBBpart2127:                               ; preds = %originalBB125
  br label %611, !dbg !3544

530:                                              ; preds = %507
  call void @llvm.dbg.declare(metadata i64* %31, metadata !3545, metadata !DIExpression()), !dbg !3547
  %531 = load i32, i32* @x.55
  %532 = load i32, i32* @y.56
  %533 = sub i32 %531, 1
  %534 = mul i32 %531, %533
  %535 = urem i32 %534, 2
  %536 = icmp eq i32 %535, 0
  %537 = icmp slt i32 %532, 10
  %538 = or i1 %536, %537
  br i1 %538, label %originalBB129, label %originalBB129alteredBB

originalBB129:                                    ; preds = %530, %originalBB129alteredBB
  %539 = load i8*, i8** %24, align 8, !dbg !3548
  %540 = call i32 @xstrtoul(i8* %539, i8** null, i32 10, i64* %31, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3.102, i64 0, i64 0)), !dbg !3550
  %541 = icmp eq i32 %540, 0, !dbg !3551
  %542 = load i32, i32* @x.55
  %543 = load i32, i32* @y.56
  %544 = sub i32 %542, 1
  %545 = mul i32 %542, %544
  %546 = urem i32 %545, 2
  %547 = icmp eq i32 %546, 0
  %548 = icmp slt i32 %543, 10
  %549 = or i1 %547, %548
  br i1 %549, label %originalBBpart2131, label %originalBB129alteredBB

originalBBpart2131:                               ; preds = %originalBB129
  br i1 %541, label %550, label %608, !dbg !3552

550:                                              ; preds = %originalBBpart2131
  %551 = load i32, i32* @x.55
  %552 = load i32, i32* @y.56
  %553 = sub i32 %551, 1
  %554 = mul i32 %551, %553
  %555 = urem i32 %554, 2
  %556 = icmp eq i32 %555, 0
  %557 = icmp slt i32 %552, 10
  %558 = or i1 %556, %557
  br i1 %558, label %originalBB133, label %originalBB133alteredBB

originalBB133:                                    ; preds = %550, %originalBB133alteredBB
  %559 = load i64, i64* %31, align 8, !dbg !3553
  %560 = icmp ule i64 %559, 4294967295, !dbg !3554
  %561 = load i32, i32* @x.55
  %562 = load i32, i32* @y.56
  %563 = sub i32 %561, 1
  %564 = mul i32 %561, %563
  %565 = urem i32 %564, 2
  %566 = icmp eq i32 %565, 0
  %567 = icmp slt i32 %562, 10
  %568 = or i1 %566, %567
  br i1 %568, label %originalBBpart2135, label %originalBB133alteredBB

originalBBpart2135:                               ; preds = %originalBB133
  br i1 %560, label %569, label %608, !dbg !3555

569:                                              ; preds = %originalBBpart2135
  %570 = load i32, i32* @x.55
  %571 = load i32, i32* @y.56
  %572 = sub i32 %570, 1
  %573 = mul i32 %570, %572
  %574 = urem i32 %573, 2
  %575 = icmp eq i32 %574, 0
  %576 = icmp slt i32 %571, 10
  %577 = or i1 %575, %576
  br i1 %577, label %originalBB137, label %originalBB137alteredBB

originalBB137:                                    ; preds = %569, %originalBB137alteredBB
  %578 = load i64, i64* %31, align 8, !dbg !3556
  %579 = trunc i64 %578 to i32, !dbg !3557
  %580 = icmp ne i32 %579, -1, !dbg !3558
  %581 = load i32, i32* @x.55
  %582 = load i32, i32* @y.56
  %583 = sub i32 %581, 1
  %584 = mul i32 %581, %583
  %585 = urem i32 %584, 2
  %586 = icmp eq i32 %585, 0
  %587 = icmp slt i32 %582, 10
  %588 = or i1 %586, %587
  br i1 %588, label %originalBBpart2139, label %originalBB137alteredBB

originalBBpart2139:                               ; preds = %originalBB137
  br i1 %580, label %589, label %608, !dbg !3559

589:                                              ; preds = %originalBBpart2139
  %590 = load i32, i32* @x.55
  %591 = load i32, i32* @y.56
  %592 = sub i32 %590, 1
  %593 = mul i32 %590, %592
  %594 = urem i32 %593, 2
  %595 = icmp eq i32 %594, 0
  %596 = icmp slt i32 %591, 10
  %597 = or i1 %595, %596
  br i1 %597, label %originalBB141, label %originalBB141alteredBB

originalBB141:                                    ; preds = %589, %originalBB141alteredBB
  %598 = load i64, i64* %31, align 8, !dbg !3560
  %599 = trunc i64 %598 to i32, !dbg !3560
  store i32 %599, i32* %27, align 4, !dbg !3561
  %600 = load i32, i32* @x.55
  %601 = load i32, i32* @y.56
  %602 = sub i32 %600, 1
  %603 = mul i32 %600, %602
  %604 = urem i32 %603, 2
  %605 = icmp eq i32 %604, 0
  %606 = icmp slt i32 %601, 10
  %607 = or i1 %605, %606
  br i1 %607, label %originalBBpart2143, label %originalBB141alteredBB

originalBBpart2143:                               ; preds = %originalBB141
  br label %610, !dbg !3562

608:                                              ; preds = %originalBBpart2139, %originalBBpart2135, %originalBBpart2131
  %609 = load i8*, i8** @parse_with_separator.E_invalid_user, align 8, !dbg !3563
  store i8* %609, i8** %21, align 8, !dbg !3564
  br label %610

610:                                              ; preds = %608, %originalBBpart2143
  br label %611

611:                                              ; preds = %610, %originalBBpart2127
  br label %706, !dbg !3565

612:                                              ; preds = %originalBBpart2119
  %613 = load i32, i32* @x.55
  %614 = load i32, i32* @y.56
  %615 = sub i32 %613, 1
  %616 = mul i32 %613, %615
  %617 = urem i32 %616, 2
  %618 = icmp eq i32 %617, 0
  %619 = icmp slt i32 %614, 10
  %620 = or i1 %618, %619
  br i1 %620, label %originalBB145, label %originalBB145alteredBB

originalBB145:                                    ; preds = %612, %originalBB145alteredBB
  %621 = load %struct.passwd*, %struct.passwd** %22, align 8, !dbg !3566
  %622 = getelementptr inbounds %struct.passwd, %struct.passwd* %621, i32 0, i32 2, !dbg !3568
  %623 = load i32, i32* %622, align 8, !dbg !3568
  store i32 %623, i32* %27, align 4, !dbg !3569
  %624 = load i8*, i8** %25, align 8, !dbg !3570
  %625 = icmp eq i8* %624, null, !dbg !3572
  %626 = load i32, i32* @x.55
  %627 = load i32, i32* @y.56
  %628 = sub i32 %626, 1
  %629 = mul i32 %626, %628
  %630 = urem i32 %629, 2
  %631 = icmp eq i32 %630, 0
  %632 = icmp slt i32 %627, 10
  %633 = or i1 %631, %632
  br i1 %633, label %originalBBpart2147, label %originalBB145alteredBB

originalBBpart2147:                               ; preds = %originalBB145
  br i1 %625, label %634, label %689, !dbg !3573

634:                                              ; preds = %originalBBpart2147
  %635 = load i8*, i8** %16, align 8, !dbg !3574
  %636 = icmp ne i8* %635, null, !dbg !3575
  br i1 %636, label %637, label %689, !dbg !3576

637:                                              ; preds = %634
  call void @llvm.dbg.declare(metadata [21 x i8]* %32, metadata !3577, metadata !DIExpression()), !dbg !3579
  %638 = load %struct.passwd*, %struct.passwd** %22, align 8, !dbg !3580
  %639 = getelementptr inbounds %struct.passwd, %struct.passwd* %638, i32 0, i32 3, !dbg !3581
  %640 = load i32, i32* %639, align 4, !dbg !3581
  store i32 %640, i32* %28, align 4, !dbg !3582
  %641 = load i32, i32* %28, align 4, !dbg !3583
  %642 = call %struct.group* @getgrgid(i32 %641), !dbg !3584
  store %struct.group* %642, %struct.group** %23, align 8, !dbg !3585
  %643 = load %struct.group*, %struct.group** %23, align 8, !dbg !3586
  %644 = icmp ne %struct.group* %643, null, !dbg !3586
  br i1 %644, label %645, label %649, !dbg !3586

645:                                              ; preds = %637
  %646 = load %struct.group*, %struct.group** %23, align 8, !dbg !3587
  %647 = getelementptr inbounds %struct.group, %struct.group* %646, i32 0, i32 0, !dbg !3588
  %648 = load i8*, i8** %647, align 8, !dbg !3588
  br label %670, !dbg !3586

649:                                              ; preds = %637
  %650 = load i32, i32* @x.55
  %651 = load i32, i32* @y.56
  %652 = sub i32 %650, 1
  %653 = mul i32 %650, %652
  %654 = urem i32 %653, 2
  %655 = icmp eq i32 %654, 0
  %656 = icmp slt i32 %651, 10
  %657 = or i1 %655, %656
  br i1 %657, label %originalBB149, label %originalBB149alteredBB

originalBB149:                                    ; preds = %649, %originalBB149alteredBB
  %658 = load i32, i32* %28, align 4, !dbg !3589
  %659 = zext i32 %658 to i64, !dbg !3589
  %660 = getelementptr inbounds [21 x i8], [21 x i8]* %32, i64 0, i64 0, !dbg !3590
  %661 = call i8* @umaxtostr(i64 %659, i8* %660), !dbg !3591
  %662 = load i32, i32* @x.55
  %663 = load i32, i32* @y.56
  %664 = sub i32 %662, 1
  %665 = mul i32 %662, %664
  %666 = urem i32 %665, 2
  %667 = icmp eq i32 %666, 0
  %668 = icmp slt i32 %663, 10
  %669 = or i1 %667, %668
  br i1 %669, label %originalBBpart2151, label %originalBB149alteredBB

originalBBpart2151:                               ; preds = %originalBB149
  br label %670, !dbg !3586

670:                                              ; preds = %originalBBpart2151, %645
  %671 = phi i8* [ %648, %645 ], [ %661, %originalBBpart2151 ], !dbg !3586
  %672 = load i32, i32* @x.55
  %673 = load i32, i32* @y.56
  %674 = sub i32 %672, 1
  %675 = mul i32 %672, %674
  %676 = urem i32 %675, 2
  %677 = icmp eq i32 %676, 0
  %678 = icmp slt i32 %673, 10
  %679 = or i1 %677, %678
  br i1 %679, label %originalBB153, label %originalBB153alteredBB

originalBB153:                                    ; preds = %670, %originalBB153alteredBB
  %680 = call noalias i8* @xstrdup(i8* %671), !dbg !3592
  store i8* %680, i8** %26, align 8, !dbg !3593
  call void @endgrent(), !dbg !3594
  %681 = load i32, i32* @x.55
  %682 = load i32, i32* @y.56
  %683 = sub i32 %681, 1
  %684 = mul i32 %681, %683
  %685 = urem i32 %684, 2
  %686 = icmp eq i32 %685, 0
  %687 = icmp slt i32 %682, 10
  %688 = or i1 %686, %687
  br i1 %688, label %originalBBpart2155, label %originalBB153alteredBB

originalBBpart2155:                               ; preds = %originalBB153
  br label %689, !dbg !3595

689:                                              ; preds = %originalBBpart2155, %634, %originalBBpart2147
  %690 = load i32, i32* @x.55
  %691 = load i32, i32* @y.56
  %692 = sub i32 %690, 1
  %693 = mul i32 %690, %692
  %694 = urem i32 %693, 2
  %695 = icmp eq i32 %694, 0
  %696 = icmp slt i32 %691, 10
  %697 = or i1 %695, %696
  br i1 %697, label %originalBB157, label %originalBB157alteredBB

originalBB157:                                    ; preds = %689, %originalBB157alteredBB
  %698 = load i32, i32* @x.55
  %699 = load i32, i32* @y.56
  %700 = sub i32 %698, 1
  %701 = mul i32 %698, %700
  %702 = urem i32 %701, 2
  %703 = icmp eq i32 %702, 0
  %704 = icmp slt i32 %699, 10
  %705 = or i1 %703, %704
  br i1 %705, label %originalBBpart2159, label %originalBB157alteredBB

originalBBpart2159:                               ; preds = %originalBB157
  br label %706

706:                                              ; preds = %originalBBpart2159, %611
  call void @endpwent(), !dbg !3596
  br label %707, !dbg !3597

707:                                              ; preds = %706, %originalBBpart243
  %708 = load i8*, i8** %25, align 8, !dbg !3598
  %709 = icmp ne i8* %708, null, !dbg !3600
  br i1 %709, label %710, label %894, !dbg !3601

710:                                              ; preds = %707
  %711 = load i32, i32* @x.55
  %712 = load i32, i32* @y.56
  %713 = sub i32 %711, 1
  %714 = mul i32 %711, %713
  %715 = urem i32 %714, 2
  %716 = icmp eq i32 %715, 0
  %717 = icmp slt i32 %712, 10
  %718 = or i1 %716, %717
  br i1 %718, label %originalBB161, label %originalBB161alteredBB

originalBB161:                                    ; preds = %710, %originalBB161alteredBB
  %719 = load i8*, i8** %21, align 8, !dbg !3602
  %720 = icmp eq i8* %719, null, !dbg !3603
  %721 = load i32, i32* @x.55
  %722 = load i32, i32* @y.56
  %723 = sub i32 %721, 1
  %724 = mul i32 %721, %723
  %725 = urem i32 %724, 2
  %726 = icmp eq i32 %725, 0
  %727 = icmp slt i32 %722, 10
  %728 = or i1 %726, %727
  br i1 %728, label %originalBBpart2163, label %originalBB161alteredBB

originalBBpart2163:                               ; preds = %originalBB161
  br i1 %720, label %729, label %894, !dbg !3604

729:                                              ; preds = %originalBBpart2163
  %730 = load i32, i32* @x.55
  %731 = load i32, i32* @y.56
  %732 = sub i32 %730, 1
  %733 = mul i32 %730, %732
  %734 = urem i32 %733, 2
  %735 = icmp eq i32 %734, 0
  %736 = icmp slt i32 %731, 10
  %737 = or i1 %735, %736
  br i1 %737, label %originalBB165, label %originalBB165alteredBB

originalBB165:                                    ; preds = %729, %originalBB165alteredBB
  %738 = load i8*, i8** %25, align 8, !dbg !3605
  %739 = load i8, i8* %738, align 1, !dbg !3607
  %740 = sext i8 %739 to i32, !dbg !3607
  %741 = icmp eq i32 %740, 43, !dbg !3608
  %742 = load i32, i32* @x.55
  %743 = load i32, i32* @y.56
  %744 = sub i32 %742, 1
  %745 = mul i32 %742, %744
  %746 = urem i32 %745, 2
  %747 = icmp eq i32 %746, 0
  %748 = icmp slt i32 %743, 10
  %749 = or i1 %747, %748
  br i1 %749, label %originalBBpart2167, label %originalBB165alteredBB

originalBBpart2167:                               ; preds = %originalBB165
  br i1 %741, label %750, label %751, !dbg !3607

750:                                              ; preds = %originalBBpart2167
  br label %754, !dbg !3607

751:                                              ; preds = %originalBBpart2167
  %752 = load i8*, i8** %25, align 8, !dbg !3609
  %753 = call %struct.group* @getgrnam(i8* %752), !dbg !3610
  br label %754, !dbg !3607

754:                                              ; preds = %751, %750
  %755 = phi %struct.group* [ null, %750 ], [ %753, %751 ], !dbg !3607
  %756 = load i32, i32* @x.55
  %757 = load i32, i32* @y.56
  %758 = sub i32 %756, 1
  %759 = mul i32 %756, %758
  %760 = urem i32 %759, 2
  %761 = icmp eq i32 %760, 0
  %762 = icmp slt i32 %757, 10
  %763 = or i1 %761, %762
  br i1 %763, label %originalBB169, label %originalBB169alteredBB

originalBB169:                                    ; preds = %754, %originalBB169alteredBB
  store %struct.group* %755, %struct.group** %23, align 8, !dbg !3611
  %764 = load %struct.group*, %struct.group** %23, align 8, !dbg !3612
  %765 = icmp eq %struct.group* %764, null, !dbg !3614
  %766 = load i32, i32* @x.55
  %767 = load i32, i32* @y.56
  %768 = sub i32 %766, 1
  %769 = mul i32 %766, %768
  %770 = urem i32 %769, 2
  %771 = icmp eq i32 %770, 0
  %772 = icmp slt i32 %767, 10
  %773 = or i1 %771, %772
  br i1 %773, label %originalBBpart2171, label %originalBB169alteredBB

originalBBpart2171:                               ; preds = %originalBB169
  br i1 %765, label %774, label %855, !dbg !3615

774:                                              ; preds = %originalBBpart2171
  call void @llvm.dbg.declare(metadata i64* %33, metadata !3616, metadata !DIExpression()), !dbg !3618
  %775 = load i32, i32* @x.55
  %776 = load i32, i32* @y.56
  %777 = sub i32 %775, 1
  %778 = mul i32 %775, %777
  %779 = urem i32 %778, 2
  %780 = icmp eq i32 %779, 0
  %781 = icmp slt i32 %776, 10
  %782 = or i1 %780, %781
  br i1 %782, label %originalBB173, label %originalBB173alteredBB

originalBB173:                                    ; preds = %774, %originalBB173alteredBB
  %783 = load i8*, i8** %25, align 8, !dbg !3619
  %784 = call i32 @xstrtoul(i8* %783, i8** null, i32 10, i64* %33, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3.102, i64 0, i64 0)), !dbg !3621
  %785 = icmp eq i32 %784, 0, !dbg !3622
  %786 = load i32, i32* @x.55
  %787 = load i32, i32* @y.56
  %788 = sub i32 %786, 1
  %789 = mul i32 %786, %788
  %790 = urem i32 %789, 2
  %791 = icmp eq i32 %790, 0
  %792 = icmp slt i32 %787, 10
  %793 = or i1 %791, %792
  br i1 %793, label %originalBBpart2175, label %originalBB173alteredBB

originalBBpart2175:                               ; preds = %originalBB173
  br i1 %785, label %794, label %836, !dbg !3623

794:                                              ; preds = %originalBBpart2175
  %795 = load i32, i32* @x.55
  %796 = load i32, i32* @y.56
  %797 = sub i32 %795, 1
  %798 = mul i32 %795, %797
  %799 = urem i32 %798, 2
  %800 = icmp eq i32 %799, 0
  %801 = icmp slt i32 %796, 10
  %802 = or i1 %800, %801
  br i1 %802, label %originalBB177, label %originalBB177alteredBB

originalBB177:                                    ; preds = %794, %originalBB177alteredBB
  %803 = load i64, i64* %33, align 8, !dbg !3624
  %804 = icmp ule i64 %803, 4294967295, !dbg !3625
  %805 = load i32, i32* @x.55
  %806 = load i32, i32* @y.56
  %807 = sub i32 %805, 1
  %808 = mul i32 %805, %807
  %809 = urem i32 %808, 2
  %810 = icmp eq i32 %809, 0
  %811 = icmp slt i32 %806, 10
  %812 = or i1 %810, %811
  br i1 %812, label %originalBBpart2179, label %originalBB177alteredBB

originalBBpart2179:                               ; preds = %originalBB177
  br i1 %804, label %813, label %836, !dbg !3626

813:                                              ; preds = %originalBBpart2179
  %814 = load i64, i64* %33, align 8, !dbg !3627
  %815 = trunc i64 %814 to i32, !dbg !3628
  %816 = icmp ne i32 %815, -1, !dbg !3629
  br i1 %816, label %817, label %836, !dbg !3630

817:                                              ; preds = %813
  %818 = load i32, i32* @x.55
  %819 = load i32, i32* @y.56
  %820 = sub i32 %818, 1
  %821 = mul i32 %818, %820
  %822 = urem i32 %821, 2
  %823 = icmp eq i32 %822, 0
  %824 = icmp slt i32 %819, 10
  %825 = or i1 %823, %824
  br i1 %825, label %originalBB181, label %originalBB181alteredBB

originalBB181:                                    ; preds = %817, %originalBB181alteredBB
  %826 = load i64, i64* %33, align 8, !dbg !3631
  %827 = trunc i64 %826 to i32, !dbg !3631
  store i32 %827, i32* %28, align 4, !dbg !3632
  %828 = load i32, i32* @x.55
  %829 = load i32, i32* @y.56
  %830 = sub i32 %828, 1
  %831 = mul i32 %828, %830
  %832 = urem i32 %831, 2
  %833 = icmp eq i32 %832, 0
  %834 = icmp slt i32 %829, 10
  %835 = or i1 %833, %834
  br i1 %835, label %originalBBpart2183, label %originalBB181alteredBB

originalBBpart2183:                               ; preds = %originalBB181
  br label %854, !dbg !3633

836:                                              ; preds = %813, %originalBBpart2179, %originalBBpart2175
  %837 = load i32, i32* @x.55
  %838 = load i32, i32* @y.56
  %839 = sub i32 %837, 1
  %840 = mul i32 %837, %839
  %841 = urem i32 %840, 2
  %842 = icmp eq i32 %841, 0
  %843 = icmp slt i32 %838, 10
  %844 = or i1 %842, %843
  br i1 %844, label %originalBB185, label %originalBB185alteredBB

originalBB185:                                    ; preds = %836, %originalBB185alteredBB
  %845 = load i8*, i8** @parse_with_separator.E_invalid_group, align 8, !dbg !3634
  store i8* %845, i8** %21, align 8, !dbg !3635
  %846 = load i32, i32* @x.55
  %847 = load i32, i32* @y.56
  %848 = sub i32 %846, 1
  %849 = mul i32 %846, %848
  %850 = urem i32 %849, 2
  %851 = icmp eq i32 %850, 0
  %852 = icmp slt i32 %847, 10
  %853 = or i1 %851, %852
  br i1 %853, label %originalBBpart2187, label %originalBB185alteredBB

originalBBpart2187:                               ; preds = %originalBB185
  br label %854

854:                                              ; preds = %originalBBpart2187, %originalBBpart2183
  br label %875, !dbg !3636

855:                                              ; preds = %originalBBpart2171
  %856 = load i32, i32* @x.55
  %857 = load i32, i32* @y.56
  %858 = sub i32 %856, 1
  %859 = mul i32 %856, %858
  %860 = urem i32 %859, 2
  %861 = icmp eq i32 %860, 0
  %862 = icmp slt i32 %857, 10
  %863 = or i1 %861, %862
  br i1 %863, label %originalBB189, label %originalBB189alteredBB

originalBB189:                                    ; preds = %855, %originalBB189alteredBB
  %864 = load %struct.group*, %struct.group** %23, align 8, !dbg !3637
  %865 = getelementptr inbounds %struct.group, %struct.group* %864, i32 0, i32 2, !dbg !3638
  %866 = load i32, i32* %865, align 8, !dbg !3638
  store i32 %866, i32* %28, align 4, !dbg !3639
  %867 = load i32, i32* @x.55
  %868 = load i32, i32* @y.56
  %869 = sub i32 %867, 1
  %870 = mul i32 %867, %869
  %871 = urem i32 %870, 2
  %872 = icmp eq i32 %871, 0
  %873 = icmp slt i32 %868, 10
  %874 = or i1 %872, %873
  br i1 %874, label %originalBBpart2191, label %originalBB189alteredBB

originalBBpart2191:                               ; preds = %originalBB189
  br label %875

875:                                              ; preds = %originalBBpart2191, %854
  %876 = load i32, i32* @x.55
  %877 = load i32, i32* @y.56
  %878 = sub i32 %876, 1
  %879 = mul i32 %876, %878
  %880 = urem i32 %879, 2
  %881 = icmp eq i32 %880, 0
  %882 = icmp slt i32 %877, 10
  %883 = or i1 %881, %882
  br i1 %883, label %originalBB193, label %originalBB193alteredBB

originalBB193:                                    ; preds = %875, %originalBB193alteredBB
  call void @endgrent(), !dbg !3640
  %884 = load i8*, i8** %25, align 8, !dbg !3641
  %885 = call noalias i8* @xstrdup(i8* %884), !dbg !3642
  store i8* %885, i8** %26, align 8, !dbg !3643
  %886 = load i32, i32* @x.55
  %887 = load i32, i32* @y.56
  %888 = sub i32 %886, 1
  %889 = mul i32 %886, %888
  %890 = urem i32 %889, 2
  %891 = icmp eq i32 %890, 0
  %892 = icmp slt i32 %887, 10
  %893 = or i1 %891, %892
  br i1 %893, label %originalBBpart2195, label %originalBB193alteredBB

originalBBpart2195:                               ; preds = %originalBB193
  br label %894, !dbg !3644

894:                                              ; preds = %originalBBpart2195, %originalBBpart2163, %707
  %895 = load i32, i32* @x.55
  %896 = load i32, i32* @y.56
  %897 = sub i32 %895, 1
  %898 = mul i32 %895, %897
  %899 = urem i32 %898, 2
  %900 = icmp eq i32 %899, 0
  %901 = icmp slt i32 %896, 10
  %902 = or i1 %900, %901
  br i1 %902, label %originalBB197, label %originalBB197alteredBB

originalBB197:                                    ; preds = %894, %originalBB197alteredBB
  %903 = load i8*, i8** %21, align 8, !dbg !3645
  %904 = icmp eq i8* %903, null, !dbg !3647
  %905 = load i32, i32* @x.55
  %906 = load i32, i32* @y.56
  %907 = sub i32 %905, 1
  %908 = mul i32 %905, %907
  %909 = urem i32 %908, 2
  %910 = icmp eq i32 %909, 0
  %911 = icmp slt i32 %906, 10
  %912 = or i1 %910, %911
  br i1 %912, label %originalBBpart2199, label %originalBB197alteredBB

originalBBpart2199:                               ; preds = %originalBB197
  br i1 %904, label %913, label %982, !dbg !3648

913:                                              ; preds = %originalBBpart2199
  %914 = load i32, i32* %27, align 4, !dbg !3649
  %915 = load i32*, i32** %17, align 8, !dbg !3651
  store i32 %914, i32* %915, align 4, !dbg !3652
  %916 = load i32*, i32** %18, align 8, !dbg !3653
  %917 = icmp ne i32* %916, null, !dbg !3653
  br i1 %917, label %918, label %937, !dbg !3655

918:                                              ; preds = %913
  %919 = load i32, i32* @x.55
  %920 = load i32, i32* @y.56
  %921 = sub i32 %919, 1
  %922 = mul i32 %919, %921
  %923 = urem i32 %922, 2
  %924 = icmp eq i32 %923, 0
  %925 = icmp slt i32 %920, 10
  %926 = or i1 %924, %925
  br i1 %926, label %originalBB201, label %originalBB201alteredBB

originalBB201:                                    ; preds = %918, %originalBB201alteredBB
  %927 = load i32, i32* %28, align 4, !dbg !3656
  %928 = load i32*, i32** %18, align 8, !dbg !3657
  store i32 %927, i32* %928, align 4, !dbg !3658
  %929 = load i32, i32* @x.55
  %930 = load i32, i32* @y.56
  %931 = sub i32 %929, 1
  %932 = mul i32 %929, %931
  %933 = urem i32 %932, 2
  %934 = icmp eq i32 %933, 0
  %935 = icmp slt i32 %930, 10
  %936 = or i1 %934, %935
  br i1 %936, label %originalBBpart2203, label %originalBB201alteredBB

originalBBpart2203:                               ; preds = %originalBB201
  br label %937, !dbg !3659

937:                                              ; preds = %originalBBpart2203, %913
  %938 = load i8**, i8*** %19, align 8, !dbg !3660
  %939 = icmp ne i8** %938, null, !dbg !3660
  br i1 %939, label %940, label %943, !dbg !3662

940:                                              ; preds = %937
  %941 = load i8*, i8** %24, align 8, !dbg !3663
  %942 = load i8**, i8*** %19, align 8, !dbg !3665
  store i8* %941, i8** %942, align 8, !dbg !3666
  store i8* null, i8** %24, align 8, !dbg !3667
  br label %943, !dbg !3668

943:                                              ; preds = %940, %937
  %944 = load i32, i32* @x.55
  %945 = load i32, i32* @y.56
  %946 = sub i32 %944, 1
  %947 = mul i32 %944, %946
  %948 = urem i32 %947, 2
  %949 = icmp eq i32 %948, 0
  %950 = icmp slt i32 %945, 10
  %951 = or i1 %949, %950
  br i1 %951, label %originalBB205, label %originalBB205alteredBB

originalBB205:                                    ; preds = %943, %originalBB205alteredBB
  %952 = load i8**, i8*** %20, align 8, !dbg !3669
  %953 = icmp ne i8** %952, null, !dbg !3669
  %954 = load i32, i32* @x.55
  %955 = load i32, i32* @y.56
  %956 = sub i32 %954, 1
  %957 = mul i32 %954, %956
  %958 = urem i32 %957, 2
  %959 = icmp eq i32 %958, 0
  %960 = icmp slt i32 %955, 10
  %961 = or i1 %959, %960
  br i1 %961, label %originalBBpart2207, label %originalBB205alteredBB

originalBBpart2207:                               ; preds = %originalBB205
  br i1 %953, label %962, label %965, !dbg !3671

962:                                              ; preds = %originalBBpart2207
  %963 = load i8*, i8** %26, align 8, !dbg !3672
  %964 = load i8**, i8*** %20, align 8, !dbg !3674
  store i8* %963, i8** %964, align 8, !dbg !3675
  store i8* null, i8** %26, align 8, !dbg !3676
  br label %965, !dbg !3677

965:                                              ; preds = %962, %originalBBpart2207
  %966 = load i32, i32* @x.55
  %967 = load i32, i32* @y.56
  %968 = sub i32 %966, 1
  %969 = mul i32 %966, %968
  %970 = urem i32 %969, 2
  %971 = icmp eq i32 %970, 0
  %972 = icmp slt i32 %967, 10
  %973 = or i1 %971, %972
  br i1 %973, label %originalBB209, label %originalBB209alteredBB

originalBB209:                                    ; preds = %965, %originalBB209alteredBB
  %974 = load i32, i32* @x.55
  %975 = load i32, i32* @y.56
  %976 = sub i32 %974, 1
  %977 = mul i32 %974, %976
  %978 = urem i32 %977, 2
  %979 = icmp eq i32 %978, 0
  %980 = icmp slt i32 %975, 10
  %981 = or i1 %979, %980
  br i1 %981, label %originalBBpart2211, label %originalBB209alteredBB

originalBBpart2211:                               ; preds = %originalBB209
  br label %982, !dbg !3678

982:                                              ; preds = %originalBBpart2211, %originalBBpart2199
  %983 = load i8*, i8** %24, align 8, !dbg !3679
  call void @free(i8* %983) #10, !dbg !3680
  %984 = load i8*, i8** %26, align 8, !dbg !3681
  call void @free(i8* %984) #10, !dbg !3682
  %985 = load i8*, i8** %21, align 8, !dbg !3683
  %986 = icmp ne i8* %985, null, !dbg !3683
  br i1 %986, label %987, label %990, !dbg !3683

987:                                              ; preds = %982
  %988 = load i8*, i8** %21, align 8, !dbg !3684
  %989 = call i8* @gettext(i8* %988) #10, !dbg !3684
  br label %991, !dbg !3683

990:                                              ; preds = %982
  br label %991, !dbg !3683

991:                                              ; preds = %990, %987
  %992 = phi i8* [ %989, %987 ], [ null, %990 ], !dbg !3683
  %993 = load i32, i32* @x.55
  %994 = load i32, i32* @y.56
  %995 = sub i32 %993, 1
  %996 = mul i32 %993, %995
  %997 = urem i32 %996, 2
  %998 = icmp eq i32 %997, 0
  %999 = icmp slt i32 %994, 10
  %1000 = or i1 %998, %999
  br i1 %1000, label %originalBB213, label %originalBB213alteredBB

originalBB213:                                    ; preds = %991, %originalBB213alteredBB
  %1001 = load i32, i32* @x.55
  %1002 = load i32, i32* @y.56
  %1003 = sub i32 %1001, 1
  %1004 = mul i32 %1001, %1003
  %1005 = urem i32 %1004, 2
  %1006 = icmp eq i32 %1005, 0
  %1007 = icmp slt i32 %1002, 10
  %1008 = or i1 %1006, %1007
  br i1 %1008, label %originalBBpart2215, label %originalBB213alteredBB

originalBBpart2215:                               ; preds = %originalBB213
  ret i8* %992, !dbg !3685

originalBBalteredBB:                              ; preds = %originalBB, %6
  %1009 = alloca i8*, align 8
  %1010 = alloca i8*, align 8
  %1011 = alloca i32*, align 8
  %1012 = alloca i32*, align 8
  %1013 = alloca i8**, align 8
  %1014 = alloca i8**, align 8
  %1015 = alloca i8*, align 8
  %1016 = alloca %struct.passwd*, align 8
  %1017 = alloca %struct.group*, align 8
  %1018 = alloca i8*, align 8
  %1019 = alloca i8*, align 8
  %1020 = alloca i8*, align 8
  %1021 = alloca i32, align 4
  %1022 = alloca i32, align 4
  %1023 = alloca i64, align 8
  %1024 = alloca i8, align 1
  %1025 = alloca i64, align 8
  %1026 = alloca [21 x i8], align 16
  %1027 = alloca i64, align 8
  store i8* %0, i8** %1009, align 8
  call void @llvm.dbg.declare(metadata i8** %1009, metadata !3686, metadata !DIExpression()), !dbg !3407
  store i8* %1, i8** %1010, align 8
  call void @llvm.dbg.declare(metadata i8** %1010, metadata !3696, metadata !DIExpression()), !dbg !3409
  store i32* %2, i32** %1011, align 8
  call void @llvm.dbg.declare(metadata i32** %1011, metadata !3697, metadata !DIExpression()), !dbg !3411
  store i32* %3, i32** %1012, align 8
  call void @llvm.dbg.declare(metadata i32** %1012, metadata !3698, metadata !DIExpression()), !dbg !3413
  store i8** %4, i8*** %1013, align 8
  call void @llvm.dbg.declare(metadata i8*** %1013, metadata !3699, metadata !DIExpression()), !dbg !3415
  store i8** %5, i8*** %1014, align 8
  call void @llvm.dbg.declare(metadata i8*** %1014, metadata !3700, metadata !DIExpression()), !dbg !3417
  call void @llvm.dbg.declare(metadata i8** %1015, metadata !3701, metadata !DIExpression()), !dbg !3419
  call void @llvm.dbg.declare(metadata %struct.passwd** %1016, metadata !3702, metadata !DIExpression()), !dbg !3431
  call void @llvm.dbg.declare(metadata %struct.group** %1017, metadata !3713, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.declare(metadata i8** %1018, metadata !3721, metadata !DIExpression()), !dbg !3442
  call void @llvm.dbg.declare(metadata i8** %1019, metadata !3722, metadata !DIExpression()), !dbg !3444
  call void @llvm.dbg.declare(metadata i8** %1020, metadata !3723, metadata !DIExpression()), !dbg !3446
  store i8* null, i8** %1020, align 8, !dbg !3446
  call void @llvm.dbg.declare(metadata i32* %1021, metadata !3724, metadata !DIExpression()), !dbg !3448
  %1028 = load i32*, i32** %1011, align 8, !dbg !3449
  %1029 = load i32, i32* %1028, align 4, !dbg !3450
  store i32 %1029, i32* %1021, align 4, !dbg !3448
  call void @llvm.dbg.declare(metadata i32* %1022, metadata !3725, metadata !DIExpression()), !dbg !3452
  %1030 = load i32*, i32** %1012, align 8, !dbg !3453
  %1031 = icmp ne i32* %1030, null, !dbg !3453
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %49
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %72
  %1032 = load i8**, i8*** %20, align 8, !dbg !3463
  %1033 = icmp ne i8** %1032, null, !dbg !3463
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %91
  %1034 = load i8**, i8*** %20, align 8, !dbg !3466
  store i8* null, i8** %1034, align 8, !dbg !3467
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %119
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %136
  %1035 = load i8*, i8** %16, align 8, !dbg !3487
  %1036 = load i8*, i8** %15, align 8, !dbg !3488
  %1037 = ptrtoint i8* %1035 to i64, !dbg !3489
  %1038 = ptrtoint i8* %1036 to i64, !dbg !3489
  %_ = shl i64 %1037, %1038
  %_19 = sub i64 0, %1037
  %gen = add i64 %_19, %1038
  %_20 = sub i64 %1037, %1038
  %gen21 = mul i64 %_20, %1038
  %_22 = shl i64 %1037, %1038
  %_23 = sub i64 0, %1037
  %gen24 = add i64 %_23, %1038
  %_25 = sub i64 %1037, %1038
  %gen26 = mul i64 %_25, %1038
  %_27 = sub i64 %1037, %1038
  %gen28 = mul i64 %_27, %1038
  %1039 = sub i64 %1037, %1038, !dbg !3489
  store i64 %1039, i64* %29, align 8, !dbg !3486
  %1040 = load i64, i64* %29, align 8, !dbg !3490
  %1041 = icmp ne i64 %1040, 0, !dbg !3492
  br label %originalBB18

originalBB33alteredBB:                            ; preds = %originalBB33, %172
  %1042 = load i8*, i8** %16, align 8, !dbg !3507
  %1043 = getelementptr inbounds i8, i8* %1042, i64 1, !dbg !3508
  %1044 = load i8, i8* %1043, align 1, !dbg !3509
  %1045 = sext i8 %1044 to i32, !dbg !3509
  %1046 = icmp eq i32 %1045, 0, !dbg !3510
  br label %originalBB33

originalBB37alteredBB:                            ; preds = %originalBB37, %195
  %1047 = load i8*, i8** %16, align 8, !dbg !3511
  %1048 = getelementptr inbounds i8, i8* %1047, i64 1, !dbg !3512
  br label %originalBB37

originalBB41alteredBB:                            ; preds = %originalBB41, %214
  store i8* %215, i8** %25, align 8, !dbg !3513
  %1049 = load i8*, i8** %24, align 8, !dbg !3514
  %1050 = icmp ne i8* %1049, null, !dbg !3516
  br label %originalBB41

originalBB45alteredBB:                            ; preds = %originalBB45, %234
  %1051 = load i8*, i8** %24, align 8, !dbg !3518
  %1052 = load i8, i8* %1051, align 1, !dbg !3520
  %1053 = sext i8 %1052 to i32, !dbg !3520
  br label %originalBB45

originalBB49alteredBB:                            ; preds = %originalBB49, %254
  %collatzVaralteredBB = alloca i32
  br label %originalBB49

originalBB53alteredBB:                            ; preds = %originalBB53, %271
  %1054 = load i32, i32* @inVal0
  %1055 = icmp sgt i32 %1054, 1
  br label %originalBB53

originalBB57alteredBB:                            ; preds = %originalBB57, %290
  store i32 82, i32* %collatzVar
  br label %originalBB57

originalBB61alteredBB:                            ; preds = %originalBB61, %307
  %1056 = load i8**, i8*** @inVal1
  %1057 = getelementptr inbounds i8*, i8** %1056, i64 1
  %1058 = load i8*, i8** %1057
  %controlealteredBB = call i32 @controle(i8* %1058, i32 43)
  store i32 %controlealteredBB, i32* %collatzVar
  br label %originalBB61

originalBB65alteredBB:                            ; preds = %originalBB65, %327
  %1059 = load i32, i32* %collatzVar
  %1060 = icmp sgt i32 %1059, 1
  br label %originalBB65

originalBB69alteredBB:                            ; preds = %originalBB69, %346
  %1061 = load i32, i32* %collatzVar
  %_70 = shl i32 %1061, 2
  %_71 = sub i32 0, %1061
  %gen72 = add i32 %_71, 2
  %_73 = sub i32 0, %1061
  %gen74 = add i32 %_73, 2
  %_75 = shl i32 %1061, 2
  %1062 = srem i32 %1061, 2
  %1063 = icmp eq i32 %1062, 0
  br label %originalBB69

originalBB79alteredBB:                            ; preds = %originalBB79, %369
  %1064 = load i32, i32* %collatzVar
  %_80 = shl i32 %1064, 3
  %1065 = mul i32 %1064, 3
  %_81 = sub i32 0, %1065
  %gen82 = add i32 %_81, 1
  %_83 = sub i32 0, %1065
  %gen84 = add i32 %_83, 1
  %_85 = shl i32 %1065, 1
  %_86 = sub i32 %1065, 1
  %gen87 = mul i32 %_86, 1
  %1066 = add i32 %1065, 1
  store i32 %1066, i32* %collatzVar
  br label %originalBB79

originalBB91alteredBB:                            ; preds = %originalBB91, %389
  %1067 = load i32, i32* %collatzVar
  %_92 = sub i32 %245, %1067
  %gen93 = mul i32 %_92, %1067
  %_94 = sub i32 0, %245
  %gen95 = add i32 %_94, %1067
  %_96 = shl i32 %245, %1067
  %_97 = sub i32 0, %245
  %gen98 = add i32 %_97, %1067
  %1068 = sub i32 %245, %1067
  %1069 = icmp sgt i32 %1068, 41
  br label %originalBB91

originalBB102alteredBB:                           ; preds = %originalBB102, %409
  %1070 = load i32, i32* %collatzVar
  %_103 = sub i32 %245, %1070
  %gen104 = mul i32 %_103, %1070
  %_105 = shl i32 %245, %1070
  %1071 = add i32 %245, %1070
  %1072 = icmp slt i32 %1071, 45
  br label %originalBB102

originalBB109alteredBB:                           ; preds = %originalBB109, %429
  br label %originalBB109

originalBB113alteredBB:                           ; preds = %originalBB113, %446
  %1073 = load i8*, i8** %24, align 8, !dbg !3522
  %1074 = call %struct.passwd* @getpwnam(i8* %1073), !dbg !3523
  br label %originalBB113

originalBB117alteredBB:                           ; preds = %originalBB117, %465
  store %struct.passwd* %466, %struct.passwd** %22, align 8, !dbg !3524
  %1075 = load %struct.passwd*, %struct.passwd** %22, align 8, !dbg !3525
  %1076 = icmp eq %struct.passwd* %1075, null, !dbg !3527
  br label %originalBB117

originalBB121alteredBB:                           ; preds = %originalBB121, %485
  %1077 = load i8*, i8** %16, align 8, !dbg !3532
  %1078 = icmp ne i8* %1077, null, !dbg !3533
  br label %originalBB121

originalBB125alteredBB:                           ; preds = %originalBB125, %512
  %1079 = load i8*, i8** @parse_with_separator.E_bad_spec, align 8, !dbg !3541
  store i8* %1079, i8** %21, align 8, !dbg !3543
  br label %originalBB125

originalBB129alteredBB:                           ; preds = %originalBB129, %530
  %1080 = load i8*, i8** %24, align 8, !dbg !3548
  %1081 = call i32 @xstrtoul(i8* %1080, i8** null, i32 10, i64* %31, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3.102, i64 0, i64 0)), !dbg !3550
  %1082 = icmp eq i32 %1081, 0, !dbg !3551
  br label %originalBB129

originalBB133alteredBB:                           ; preds = %originalBB133, %550
  %1083 = load i64, i64* %31, align 8, !dbg !3553
  %1084 = icmp ule i64 %1083, 4294967295, !dbg !3554
  br label %originalBB133

originalBB137alteredBB:                           ; preds = %originalBB137, %569
  %1085 = load i64, i64* %31, align 8, !dbg !3556
  %1086 = trunc i64 %1085 to i32, !dbg !3557
  %1087 = icmp ne i32 %1086, -1, !dbg !3558
  br label %originalBB137

originalBB141alteredBB:                           ; preds = %originalBB141, %589
  %1088 = load i64, i64* %31, align 8, !dbg !3560
  %1089 = trunc i64 %1088 to i32, !dbg !3560
  store i32 %1089, i32* %27, align 4, !dbg !3561
  br label %originalBB141

originalBB145alteredBB:                           ; preds = %originalBB145, %612
  %1090 = load %struct.passwd*, %struct.passwd** %22, align 8, !dbg !3566
  %1091 = getelementptr inbounds %struct.passwd, %struct.passwd* %1090, i32 0, i32 2, !dbg !3568
  %1092 = load i32, i32* %1091, align 8, !dbg !3568
  store i32 %1092, i32* %27, align 4, !dbg !3569
  %1093 = load i8*, i8** %25, align 8, !dbg !3570
  %1094 = icmp eq i8* %1093, null, !dbg !3572
  br label %originalBB145

originalBB149alteredBB:                           ; preds = %originalBB149, %649
  %1095 = load i32, i32* %28, align 4, !dbg !3589
  %1096 = zext i32 %1095 to i64, !dbg !3589
  %1097 = getelementptr inbounds [21 x i8], [21 x i8]* %32, i64 0, i64 0, !dbg !3590
  %1098 = call i8* @umaxtostr(i64 %1096, i8* %1097), !dbg !3591
  br label %originalBB149

originalBB153alteredBB:                           ; preds = %originalBB153, %670
  %1099 = call noalias i8* @xstrdup(i8* %671), !dbg !3592
  store i8* %1099, i8** %26, align 8, !dbg !3593
  call void @endgrent(), !dbg !3594
  br label %originalBB153

originalBB157alteredBB:                           ; preds = %originalBB157, %689
  br label %originalBB157

originalBB161alteredBB:                           ; preds = %originalBB161, %710
  %1100 = load i8*, i8** %21, align 8, !dbg !3602
  %1101 = icmp eq i8* %1100, null, !dbg !3603
  br label %originalBB161

originalBB165alteredBB:                           ; preds = %originalBB165, %729
  %1102 = load i8*, i8** %25, align 8, !dbg !3605
  %1103 = load i8, i8* %1102, align 1, !dbg !3607
  %1104 = sext i8 %1103 to i32, !dbg !3607
  %1105 = icmp eq i32 %1104, 43, !dbg !3608
  br label %originalBB165

originalBB169alteredBB:                           ; preds = %originalBB169, %754
  store %struct.group* %755, %struct.group** %23, align 8, !dbg !3611
  %1106 = load %struct.group*, %struct.group** %23, align 8, !dbg !3612
  %1107 = icmp eq %struct.group* %1106, null, !dbg !3614
  br label %originalBB169

originalBB173alteredBB:                           ; preds = %originalBB173, %774
  %1108 = load i8*, i8** %25, align 8, !dbg !3619
  %1109 = call i32 @xstrtoul(i8* %1108, i8** null, i32 10, i64* %33, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3.102, i64 0, i64 0)), !dbg !3621
  %1110 = icmp eq i32 %1109, 0, !dbg !3622
  br label %originalBB173

originalBB177alteredBB:                           ; preds = %originalBB177, %794
  %1111 = load i64, i64* %33, align 8, !dbg !3624
  %1112 = icmp ule i64 %1111, 4294967295, !dbg !3625
  br label %originalBB177

originalBB181alteredBB:                           ; preds = %originalBB181, %817
  %1113 = load i64, i64* %33, align 8, !dbg !3631
  %1114 = trunc i64 %1113 to i32, !dbg !3631
  store i32 %1114, i32* %28, align 4, !dbg !3632
  br label %originalBB181

originalBB185alteredBB:                           ; preds = %originalBB185, %836
  %1115 = load i8*, i8** @parse_with_separator.E_invalid_group, align 8, !dbg !3634
  store i8* %1115, i8** %21, align 8, !dbg !3635
  br label %originalBB185

originalBB189alteredBB:                           ; preds = %originalBB189, %855
  %1116 = load %struct.group*, %struct.group** %23, align 8, !dbg !3637
  %1117 = getelementptr inbounds %struct.group, %struct.group* %1116, i32 0, i32 2, !dbg !3638
  %1118 = load i32, i32* %1117, align 8, !dbg !3638
  store i32 %1118, i32* %28, align 4, !dbg !3639
  br label %originalBB189

originalBB193alteredBB:                           ; preds = %originalBB193, %875
  call void @endgrent(), !dbg !3640
  %1119 = load i8*, i8** %25, align 8, !dbg !3641
  %1120 = call noalias i8* @xstrdup(i8* %1119), !dbg !3642
  store i8* %1120, i8** %26, align 8, !dbg !3643
  br label %originalBB193

originalBB197alteredBB:                           ; preds = %originalBB197, %894
  %1121 = load i8*, i8** %21, align 8, !dbg !3645
  %1122 = icmp eq i8* %1121, null, !dbg !3647
  br label %originalBB197

originalBB201alteredBB:                           ; preds = %originalBB201, %918
  %1123 = load i32, i32* %28, align 4, !dbg !3656
  %1124 = load i32*, i32** %18, align 8, !dbg !3657
  store i32 %1123, i32* %1124, align 4, !dbg !3658
  br label %originalBB201

originalBB205alteredBB:                           ; preds = %originalBB205, %943
  %1125 = load i8**, i8*** %20, align 8, !dbg !3669
  %1126 = icmp ne i8** %1125, null, !dbg !3669
  br label %originalBB205

originalBB209alteredBB:                           ; preds = %originalBB209, %965
  br label %originalBB209

originalBB213alteredBB:                           ; preds = %originalBB213, %991
  br label %originalBB213
}

declare dso_local %struct.passwd* @getpwnam(i8*) #3

declare dso_local void @endgrent() #3

declare dso_local void @endpwent() #3

declare dso_local %struct.group* @getgrnam(i8*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @version_etc_arn(%struct._IO_FILE*, i8*, i8*, i8*, i8**, i64) #4 !dbg !3726 {
  %7 = load i32, i32* @x.57
  %8 = load i32, i32* @y.58
  %9 = sub i32 %7, 1
  %10 = mul i32 %7, %9
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %8, 10
  %14 = or i1 %12, %13
  br i1 %14, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %6, %originalBBalteredBB
  %15 = alloca %struct._IO_FILE*, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i8*, align 8
  %18 = alloca i8*, align 8
  %19 = alloca i8**, align 8
  %20 = alloca i64, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %15, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %15, metadata !3784, metadata !DIExpression()), !dbg !3785
  store i8* %1, i8** %16, align 8
  call void @llvm.dbg.declare(metadata i8** %16, metadata !3786, metadata !DIExpression()), !dbg !3787
  store i8* %2, i8** %17, align 8
  call void @llvm.dbg.declare(metadata i8** %17, metadata !3788, metadata !DIExpression()), !dbg !3789
  store i8* %3, i8** %18, align 8
  call void @llvm.dbg.declare(metadata i8** %18, metadata !3790, metadata !DIExpression()), !dbg !3791
  store i8** %4, i8*** %19, align 8
  call void @llvm.dbg.declare(metadata i8*** %19, metadata !3792, metadata !DIExpression()), !dbg !3793
  store i64 %5, i64* %20, align 8
  call void @llvm.dbg.declare(metadata i64* %20, metadata !3794, metadata !DIExpression()), !dbg !3795
  %21 = load i8*, i8** %16, align 8, !dbg !3796
  %22 = icmp ne i8* %21, null, !dbg !3796
  %23 = load i32, i32* @x.57
  %24 = load i32, i32* @y.58
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %22, label %31, label %37, !dbg !3798

31:                                               ; preds = %originalBBpart2
  %32 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !3799
  %33 = load i8*, i8** %16, align 8, !dbg !3800
  %34 = load i8*, i8** %17, align 8, !dbg !3801
  %35 = load i8*, i8** %18, align 8, !dbg !3802
  %36 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %32, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.106, i64 0, i64 0), i8* %33, i8* %34, i8* %35), !dbg !3803
  br label %42, !dbg !3803

37:                                               ; preds = %originalBBpart2
  %38 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !3804
  %39 = load i8*, i8** %17, align 8, !dbg !3805
  %40 = load i8*, i8** %18, align 8, !dbg !3806
  %41 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %38, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.107, i64 0, i64 0), i8* %39, i8* %40), !dbg !3807
  br label %42

42:                                               ; preds = %37, %31
  %43 = load i32, i32* @x.57
  %44 = load i32, i32* @y.58
  %45 = sub i32 %43, 1
  %46 = mul i32 %43, %45
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %48, %49
  br i1 %50, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %42, %originalBB1alteredBB
  %51 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !3808
  %52 = call i8* @gettext(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.108, i64 0, i64 0)) #10, !dbg !3809
  %53 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %51, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @version_etc_copyright, i64 0, i64 0), i8* %52, i32 2020), !dbg !3810
  %54 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !3811
  %55 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.109, i64 0, i64 0), %struct._IO_FILE* %54), !dbg !3811
  %56 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !3812
  %57 = call i8* @gettext(i8* getelementptr inbounds ([171 x i8], [171 x i8]* @.str.4.110, i64 0, i64 0)) #10, !dbg !3813
  %58 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %56, i8* %57, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.5.111, i64 0, i64 0)), !dbg !3814
  %59 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !3815
  %60 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.109, i64 0, i64 0), %struct._IO_FILE* %59), !dbg !3815
  %61 = load i64, i64* %20, align 8, !dbg !3816
  %62 = load i32, i32* @x.57
  %63 = load i32, i32* @y.58
  %64 = sub i32 %62, 1
  %65 = mul i32 %62, %64
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %63, 10
  %69 = or i1 %67, %68
  br i1 %69, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  switch i64 %61, label %354 [
    i64 0, label %70
    i64 1, label %87
    i64 2, label %110
    i64 3, label %136
    i64 4, label %165
    i64 5, label %181
    i64 6, label %200
    i64 7, label %222
    i64 8, label %263
    i64 9, label %307
  ], !dbg !3817

70:                                               ; preds = %originalBBpart24
  %71 = load i32, i32* @x.57
  %72 = load i32, i32* @y.58
  %73 = sub i32 %71, 1
  %74 = mul i32 %71, %73
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %72, 10
  %78 = or i1 %76, %77
  br i1 %78, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %70, %originalBB6alteredBB
  %79 = load i32, i32* @x.57
  %80 = load i32, i32* @y.58
  %81 = sub i32 %79, 1
  %82 = mul i32 %79, %81
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %80, 10
  %86 = or i1 %84, %85
  br i1 %86, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %401, !dbg !3818

87:                                               ; preds = %originalBBpart24
  %88 = load i32, i32* @x.57
  %89 = load i32, i32* @y.58
  %90 = sub i32 %88, 1
  %91 = mul i32 %88, %90
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %89, 10
  %95 = or i1 %93, %94
  br i1 %95, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %87, %originalBB10alteredBB
  %96 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !3820
  %97 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6.112, i64 0, i64 0)) #10, !dbg !3821
  %98 = load i8**, i8*** %19, align 8, !dbg !3822
  %99 = getelementptr inbounds i8*, i8** %98, i64 0, !dbg !3822
  %100 = load i8*, i8** %99, align 8, !dbg !3822
  %101 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %96, i8* %97, i8* %100), !dbg !3823
  %102 = load i32, i32* @x.57
  %103 = load i32, i32* @y.58
  %104 = sub i32 %102, 1
  %105 = mul i32 %102, %104
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %103, 10
  %109 = or i1 %107, %108
  br i1 %109, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %401, !dbg !3824

110:                                              ; preds = %originalBBpart24
  %111 = load i32, i32* @x.57
  %112 = load i32, i32* @y.58
  %113 = sub i32 %111, 1
  %114 = mul i32 %111, %113
  %115 = urem i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %112, 10
  %118 = or i1 %116, %117
  br i1 %118, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %110, %originalBB14alteredBB
  %119 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !3825
  %120 = call i8* @gettext(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.113, i64 0, i64 0)) #10, !dbg !3826
  %121 = load i8**, i8*** %19, align 8, !dbg !3827
  %122 = getelementptr inbounds i8*, i8** %121, i64 0, !dbg !3827
  %123 = load i8*, i8** %122, align 8, !dbg !3827
  %124 = load i8**, i8*** %19, align 8, !dbg !3828
  %125 = getelementptr inbounds i8*, i8** %124, i64 1, !dbg !3828
  %126 = load i8*, i8** %125, align 8, !dbg !3828
  %127 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %119, i8* %120, i8* %123, i8* %126), !dbg !3829
  %128 = load i32, i32* @x.57
  %129 = load i32, i32* @y.58
  %130 = sub i32 %128, 1
  %131 = mul i32 %128, %130
  %132 = urem i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = icmp slt i32 %129, 10
  %135 = or i1 %133, %134
  br i1 %135, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %401, !dbg !3830

136:                                              ; preds = %originalBBpart24
  %137 = load i32, i32* @x.57
  %138 = load i32, i32* @y.58
  %139 = sub i32 %137, 1
  %140 = mul i32 %137, %139
  %141 = urem i32 %140, 2
  %142 = icmp eq i32 %141, 0
  %143 = icmp slt i32 %138, 10
  %144 = or i1 %142, %143
  br i1 %144, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %136, %originalBB18alteredBB
  %145 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !3831
  %146 = call i8* @gettext(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.8.114, i64 0, i64 0)) #10, !dbg !3832
  %147 = load i8**, i8*** %19, align 8, !dbg !3833
  %148 = getelementptr inbounds i8*, i8** %147, i64 0, !dbg !3833
  %149 = load i8*, i8** %148, align 8, !dbg !3833
  %150 = load i8**, i8*** %19, align 8, !dbg !3834
  %151 = getelementptr inbounds i8*, i8** %150, i64 1, !dbg !3834
  %152 = load i8*, i8** %151, align 8, !dbg !3834
  %153 = load i8**, i8*** %19, align 8, !dbg !3835
  %154 = getelementptr inbounds i8*, i8** %153, i64 2, !dbg !3835
  %155 = load i8*, i8** %154, align 8, !dbg !3835
  %156 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %145, i8* %146, i8* %149, i8* %152, i8* %155), !dbg !3836
  %157 = load i32, i32* @x.57
  %158 = load i32, i32* @y.58
  %159 = sub i32 %157, 1
  %160 = mul i32 %157, %159
  %161 = urem i32 %160, 2
  %162 = icmp eq i32 %161, 0
  %163 = icmp slt i32 %158, 10
  %164 = or i1 %162, %163
  br i1 %164, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %401, !dbg !3837

165:                                              ; preds = %originalBBpart24
  %166 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !3838
  %167 = call i8* @gettext(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.9.115, i64 0, i64 0)) #10, !dbg !3839
  %168 = load i8**, i8*** %19, align 8, !dbg !3840
  %169 = getelementptr inbounds i8*, i8** %168, i64 0, !dbg !3840
  %170 = load i8*, i8** %169, align 8, !dbg !3840
  %171 = load i8**, i8*** %19, align 8, !dbg !3841
  %172 = getelementptr inbounds i8*, i8** %171, i64 1, !dbg !3841
  %173 = load i8*, i8** %172, align 8, !dbg !3841
  %174 = load i8**, i8*** %19, align 8, !dbg !3842
  %175 = getelementptr inbounds i8*, i8** %174, i64 2, !dbg !3842
  %176 = load i8*, i8** %175, align 8, !dbg !3842
  %177 = load i8**, i8*** %19, align 8, !dbg !3843
  %178 = getelementptr inbounds i8*, i8** %177, i64 3, !dbg !3843
  %179 = load i8*, i8** %178, align 8, !dbg !3843
  %180 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %166, i8* %167, i8* %170, i8* %173, i8* %176, i8* %179), !dbg !3844
  br label %401, !dbg !3845

181:                                              ; preds = %originalBBpart24
  %182 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !3846
  %183 = call i8* @gettext(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.10.116, i64 0, i64 0)) #10, !dbg !3847
  %184 = load i8**, i8*** %19, align 8, !dbg !3848
  %185 = getelementptr inbounds i8*, i8** %184, i64 0, !dbg !3848
  %186 = load i8*, i8** %185, align 8, !dbg !3848
  %187 = load i8**, i8*** %19, align 8, !dbg !3849
  %188 = getelementptr inbounds i8*, i8** %187, i64 1, !dbg !3849
  %189 = load i8*, i8** %188, align 8, !dbg !3849
  %190 = load i8**, i8*** %19, align 8, !dbg !3850
  %191 = getelementptr inbounds i8*, i8** %190, i64 2, !dbg !3850
  %192 = load i8*, i8** %191, align 8, !dbg !3850
  %193 = load i8**, i8*** %19, align 8, !dbg !3851
  %194 = getelementptr inbounds i8*, i8** %193, i64 3, !dbg !3851
  %195 = load i8*, i8** %194, align 8, !dbg !3851
  %196 = load i8**, i8*** %19, align 8, !dbg !3852
  %197 = getelementptr inbounds i8*, i8** %196, i64 4, !dbg !3852
  %198 = load i8*, i8** %197, align 8, !dbg !3852
  %199 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %182, i8* %183, i8* %186, i8* %189, i8* %192, i8* %195, i8* %198), !dbg !3853
  br label %401, !dbg !3854

200:                                              ; preds = %originalBBpart24
  %201 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !3855
  %202 = call i8* @gettext(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.11.117, i64 0, i64 0)) #10, !dbg !3856
  %203 = load i8**, i8*** %19, align 8, !dbg !3857
  %204 = getelementptr inbounds i8*, i8** %203, i64 0, !dbg !3857
  %205 = load i8*, i8** %204, align 8, !dbg !3857
  %206 = load i8**, i8*** %19, align 8, !dbg !3858
  %207 = getelementptr inbounds i8*, i8** %206, i64 1, !dbg !3858
  %208 = load i8*, i8** %207, align 8, !dbg !3858
  %209 = load i8**, i8*** %19, align 8, !dbg !3859
  %210 = getelementptr inbounds i8*, i8** %209, i64 2, !dbg !3859
  %211 = load i8*, i8** %210, align 8, !dbg !3859
  %212 = load i8**, i8*** %19, align 8, !dbg !3860
  %213 = getelementptr inbounds i8*, i8** %212, i64 3, !dbg !3860
  %214 = load i8*, i8** %213, align 8, !dbg !3860
  %215 = load i8**, i8*** %19, align 8, !dbg !3861
  %216 = getelementptr inbounds i8*, i8** %215, i64 4, !dbg !3861
  %217 = load i8*, i8** %216, align 8, !dbg !3861
  %218 = load i8**, i8*** %19, align 8, !dbg !3862
  %219 = getelementptr inbounds i8*, i8** %218, i64 5, !dbg !3862
  %220 = load i8*, i8** %219, align 8, !dbg !3862
  %221 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %201, i8* %202, i8* %205, i8* %208, i8* %211, i8* %214, i8* %217, i8* %220), !dbg !3863
  br label %401, !dbg !3864

222:                                              ; preds = %originalBBpart24
  %223 = load i32, i32* @x.57
  %224 = load i32, i32* @y.58
  %225 = sub i32 %223, 1
  %226 = mul i32 %223, %225
  %227 = urem i32 %226, 2
  %228 = icmp eq i32 %227, 0
  %229 = icmp slt i32 %224, 10
  %230 = or i1 %228, %229
  br i1 %230, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %222, %originalBB22alteredBB
  %231 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !3865
  %232 = call i8* @gettext(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.12.118, i64 0, i64 0)) #10, !dbg !3866
  %233 = load i8**, i8*** %19, align 8, !dbg !3867
  %234 = getelementptr inbounds i8*, i8** %233, i64 0, !dbg !3867
  %235 = load i8*, i8** %234, align 8, !dbg !3867
  %236 = load i8**, i8*** %19, align 8, !dbg !3868
  %237 = getelementptr inbounds i8*, i8** %236, i64 1, !dbg !3868
  %238 = load i8*, i8** %237, align 8, !dbg !3868
  %239 = load i8**, i8*** %19, align 8, !dbg !3869
  %240 = getelementptr inbounds i8*, i8** %239, i64 2, !dbg !3869
  %241 = load i8*, i8** %240, align 8, !dbg !3869
  %242 = load i8**, i8*** %19, align 8, !dbg !3870
  %243 = getelementptr inbounds i8*, i8** %242, i64 3, !dbg !3870
  %244 = load i8*, i8** %243, align 8, !dbg !3870
  %245 = load i8**, i8*** %19, align 8, !dbg !3871
  %246 = getelementptr inbounds i8*, i8** %245, i64 4, !dbg !3871
  %247 = load i8*, i8** %246, align 8, !dbg !3871
  %248 = load i8**, i8*** %19, align 8, !dbg !3872
  %249 = getelementptr inbounds i8*, i8** %248, i64 5, !dbg !3872
  %250 = load i8*, i8** %249, align 8, !dbg !3872
  %251 = load i8**, i8*** %19, align 8, !dbg !3873
  %252 = getelementptr inbounds i8*, i8** %251, i64 6, !dbg !3873
  %253 = load i8*, i8** %252, align 8, !dbg !3873
  %254 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %231, i8* %232, i8* %235, i8* %238, i8* %241, i8* %244, i8* %247, i8* %250, i8* %253), !dbg !3874
  %255 = load i32, i32* @x.57
  %256 = load i32, i32* @y.58
  %257 = sub i32 %255, 1
  %258 = mul i32 %255, %257
  %259 = urem i32 %258, 2
  %260 = icmp eq i32 %259, 0
  %261 = icmp slt i32 %256, 10
  %262 = or i1 %260, %261
  br i1 %262, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br label %401, !dbg !3875

263:                                              ; preds = %originalBBpart24
  %264 = load i32, i32* @x.57
  %265 = load i32, i32* @y.58
  %266 = sub i32 %264, 1
  %267 = mul i32 %264, %266
  %268 = urem i32 %267, 2
  %269 = icmp eq i32 %268, 0
  %270 = icmp slt i32 %265, 10
  %271 = or i1 %269, %270
  br i1 %271, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %263, %originalBB26alteredBB
  %272 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !3876
  %273 = call i8* @gettext(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.13.119, i64 0, i64 0)) #10, !dbg !3877
  %274 = load i8**, i8*** %19, align 8, !dbg !3878
  %275 = getelementptr inbounds i8*, i8** %274, i64 0, !dbg !3878
  %276 = load i8*, i8** %275, align 8, !dbg !3878
  %277 = load i8**, i8*** %19, align 8, !dbg !3879
  %278 = getelementptr inbounds i8*, i8** %277, i64 1, !dbg !3879
  %279 = load i8*, i8** %278, align 8, !dbg !3879
  %280 = load i8**, i8*** %19, align 8, !dbg !3880
  %281 = getelementptr inbounds i8*, i8** %280, i64 2, !dbg !3880
  %282 = load i8*, i8** %281, align 8, !dbg !3880
  %283 = load i8**, i8*** %19, align 8, !dbg !3881
  %284 = getelementptr inbounds i8*, i8** %283, i64 3, !dbg !3881
  %285 = load i8*, i8** %284, align 8, !dbg !3881
  %286 = load i8**, i8*** %19, align 8, !dbg !3882
  %287 = getelementptr inbounds i8*, i8** %286, i64 4, !dbg !3882
  %288 = load i8*, i8** %287, align 8, !dbg !3882
  %289 = load i8**, i8*** %19, align 8, !dbg !3883
  %290 = getelementptr inbounds i8*, i8** %289, i64 5, !dbg !3883
  %291 = load i8*, i8** %290, align 8, !dbg !3883
  %292 = load i8**, i8*** %19, align 8, !dbg !3884
  %293 = getelementptr inbounds i8*, i8** %292, i64 6, !dbg !3884
  %294 = load i8*, i8** %293, align 8, !dbg !3884
  %295 = load i8**, i8*** %19, align 8, !dbg !3885
  %296 = getelementptr inbounds i8*, i8** %295, i64 7, !dbg !3885
  %297 = load i8*, i8** %296, align 8, !dbg !3885
  %298 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %272, i8* %273, i8* %276, i8* %279, i8* %282, i8* %285, i8* %288, i8* %291, i8* %294, i8* %297), !dbg !3886
  %299 = load i32, i32* @x.57
  %300 = load i32, i32* @y.58
  %301 = sub i32 %299, 1
  %302 = mul i32 %299, %301
  %303 = urem i32 %302, 2
  %304 = icmp eq i32 %303, 0
  %305 = icmp slt i32 %300, 10
  %306 = or i1 %304, %305
  br i1 %306, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br label %401, !dbg !3887

307:                                              ; preds = %originalBBpart24
  %308 = load i32, i32* @x.57
  %309 = load i32, i32* @y.58
  %310 = sub i32 %308, 1
  %311 = mul i32 %308, %310
  %312 = urem i32 %311, 2
  %313 = icmp eq i32 %312, 0
  %314 = icmp slt i32 %309, 10
  %315 = or i1 %313, %314
  br i1 %315, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %307, %originalBB30alteredBB
  %316 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !3888
  %317 = call i8* @gettext(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.14.120, i64 0, i64 0)) #10, !dbg !3889
  %318 = load i8**, i8*** %19, align 8, !dbg !3890
  %319 = getelementptr inbounds i8*, i8** %318, i64 0, !dbg !3890
  %320 = load i8*, i8** %319, align 8, !dbg !3890
  %321 = load i8**, i8*** %19, align 8, !dbg !3891
  %322 = getelementptr inbounds i8*, i8** %321, i64 1, !dbg !3891
  %323 = load i8*, i8** %322, align 8, !dbg !3891
  %324 = load i8**, i8*** %19, align 8, !dbg !3892
  %325 = getelementptr inbounds i8*, i8** %324, i64 2, !dbg !3892
  %326 = load i8*, i8** %325, align 8, !dbg !3892
  %327 = load i8**, i8*** %19, align 8, !dbg !3893
  %328 = getelementptr inbounds i8*, i8** %327, i64 3, !dbg !3893
  %329 = load i8*, i8** %328, align 8, !dbg !3893
  %330 = load i8**, i8*** %19, align 8, !dbg !3894
  %331 = getelementptr inbounds i8*, i8** %330, i64 4, !dbg !3894
  %332 = load i8*, i8** %331, align 8, !dbg !3894
  %333 = load i8**, i8*** %19, align 8, !dbg !3895
  %334 = getelementptr inbounds i8*, i8** %333, i64 5, !dbg !3895
  %335 = load i8*, i8** %334, align 8, !dbg !3895
  %336 = load i8**, i8*** %19, align 8, !dbg !3896
  %337 = getelementptr inbounds i8*, i8** %336, i64 6, !dbg !3896
  %338 = load i8*, i8** %337, align 8, !dbg !3896
  %339 = load i8**, i8*** %19, align 8, !dbg !3897
  %340 = getelementptr inbounds i8*, i8** %339, i64 7, !dbg !3897
  %341 = load i8*, i8** %340, align 8, !dbg !3897
  %342 = load i8**, i8*** %19, align 8, !dbg !3898
  %343 = getelementptr inbounds i8*, i8** %342, i64 8, !dbg !3898
  %344 = load i8*, i8** %343, align 8, !dbg !3898
  %345 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %316, i8* %317, i8* %320, i8* %323, i8* %326, i8* %329, i8* %332, i8* %335, i8* %338, i8* %341, i8* %344), !dbg !3899
  %346 = load i32, i32* @x.57
  %347 = load i32, i32* @y.58
  %348 = sub i32 %346, 1
  %349 = mul i32 %346, %348
  %350 = urem i32 %349, 2
  %351 = icmp eq i32 %350, 0
  %352 = icmp slt i32 %347, 10
  %353 = or i1 %351, %352
  br i1 %353, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br label %401, !dbg !3900

354:                                              ; preds = %originalBBpart24
  %355 = load i32, i32* @x.57
  %356 = load i32, i32* @y.58
  %357 = sub i32 %355, 1
  %358 = mul i32 %355, %357
  %359 = urem i32 %358, 2
  %360 = icmp eq i32 %359, 0
  %361 = icmp slt i32 %356, 10
  %362 = or i1 %360, %361
  br i1 %362, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %354, %originalBB34alteredBB
  %363 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !3901
  %364 = call i8* @gettext(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.15.121, i64 0, i64 0)) #10, !dbg !3902
  %365 = load i8**, i8*** %19, align 8, !dbg !3903
  %366 = getelementptr inbounds i8*, i8** %365, i64 0, !dbg !3903
  %367 = load i8*, i8** %366, align 8, !dbg !3903
  %368 = load i8**, i8*** %19, align 8, !dbg !3904
  %369 = getelementptr inbounds i8*, i8** %368, i64 1, !dbg !3904
  %370 = load i8*, i8** %369, align 8, !dbg !3904
  %371 = load i8**, i8*** %19, align 8, !dbg !3905
  %372 = getelementptr inbounds i8*, i8** %371, i64 2, !dbg !3905
  %373 = load i8*, i8** %372, align 8, !dbg !3905
  %374 = load i8**, i8*** %19, align 8, !dbg !3906
  %375 = getelementptr inbounds i8*, i8** %374, i64 3, !dbg !3906
  %376 = load i8*, i8** %375, align 8, !dbg !3906
  %377 = load i8**, i8*** %19, align 8, !dbg !3907
  %378 = getelementptr inbounds i8*, i8** %377, i64 4, !dbg !3907
  %379 = load i8*, i8** %378, align 8, !dbg !3907
  %380 = load i8**, i8*** %19, align 8, !dbg !3908
  %381 = getelementptr inbounds i8*, i8** %380, i64 5, !dbg !3908
  %382 = load i8*, i8** %381, align 8, !dbg !3908
  %383 = load i8**, i8*** %19, align 8, !dbg !3909
  %384 = getelementptr inbounds i8*, i8** %383, i64 6, !dbg !3909
  %385 = load i8*, i8** %384, align 8, !dbg !3909
  %386 = load i8**, i8*** %19, align 8, !dbg !3910
  %387 = getelementptr inbounds i8*, i8** %386, i64 7, !dbg !3910
  %388 = load i8*, i8** %387, align 8, !dbg !3910
  %389 = load i8**, i8*** %19, align 8, !dbg !3911
  %390 = getelementptr inbounds i8*, i8** %389, i64 8, !dbg !3911
  %391 = load i8*, i8** %390, align 8, !dbg !3911
  %392 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %363, i8* %364, i8* %367, i8* %370, i8* %373, i8* %376, i8* %379, i8* %382, i8* %385, i8* %388, i8* %391), !dbg !3912
  %393 = load i32, i32* @x.57
  %394 = load i32, i32* @y.58
  %395 = sub i32 %393, 1
  %396 = mul i32 %393, %395
  %397 = urem i32 %396, 2
  %398 = icmp eq i32 %397, 0
  %399 = icmp slt i32 %394, 10
  %400 = or i1 %398, %399
  br i1 %400, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  br label %401, !dbg !3913

401:                                              ; preds = %originalBBpart236, %originalBBpart232, %originalBBpart228, %originalBBpart224, %200, %181, %165, %originalBBpart220, %originalBBpart216, %originalBBpart212, %originalBBpart28
  %402 = load i32, i32* @x.57
  %403 = load i32, i32* @y.58
  %404 = sub i32 %402, 1
  %405 = mul i32 %402, %404
  %406 = urem i32 %405, 2
  %407 = icmp eq i32 %406, 0
  %408 = icmp slt i32 %403, 10
  %409 = or i1 %407, %408
  br i1 %409, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %401, %originalBB38alteredBB
  %410 = load i32, i32* @x.57
  %411 = load i32, i32* @y.58
  %412 = sub i32 %410, 1
  %413 = mul i32 %410, %412
  %414 = urem i32 %413, 2
  %415 = icmp eq i32 %414, 0
  %416 = icmp slt i32 %411, 10
  %417 = or i1 %415, %416
  br i1 %417, label %originalBBpart240, label %originalBB38alteredBB

originalBBpart240:                                ; preds = %originalBB38
  ret void, !dbg !3914

originalBBalteredBB:                              ; preds = %originalBB, %6
  %418 = alloca %struct._IO_FILE*, align 8
  %419 = alloca i8*, align 8
  %420 = alloca i8*, align 8
  %421 = alloca i8*, align 8
  %422 = alloca i8**, align 8
  %423 = alloca i64, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %418, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %418, metadata !3915, metadata !DIExpression()), !dbg !3785
  store i8* %1, i8** %419, align 8
  call void @llvm.dbg.declare(metadata i8** %419, metadata !3954, metadata !DIExpression()), !dbg !3787
  store i8* %2, i8** %420, align 8
  call void @llvm.dbg.declare(metadata i8** %420, metadata !3955, metadata !DIExpression()), !dbg !3789
  store i8* %3, i8** %421, align 8
  call void @llvm.dbg.declare(metadata i8** %421, metadata !3956, metadata !DIExpression()), !dbg !3791
  store i8** %4, i8*** %422, align 8
  call void @llvm.dbg.declare(metadata i8*** %422, metadata !3957, metadata !DIExpression()), !dbg !3793
  store i64 %5, i64* %423, align 8
  call void @llvm.dbg.declare(metadata i64* %423, metadata !3958, metadata !DIExpression()), !dbg !3795
  %424 = load i8*, i8** %419, align 8, !dbg !3796
  %425 = icmp ne i8* %424, null, !dbg !3796
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %42
  %426 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !3808
  %427 = call i8* @gettext(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.108, i64 0, i64 0)) #10, !dbg !3809
  %428 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %426, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @version_etc_copyright, i64 0, i64 0), i8* %427, i32 2020), !dbg !3810
  %429 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !3811
  %430 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.109, i64 0, i64 0), %struct._IO_FILE* %429), !dbg !3811
  %431 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !3812
  %432 = call i8* @gettext(i8* getelementptr inbounds ([171 x i8], [171 x i8]* @.str.4.110, i64 0, i64 0)) #10, !dbg !3813
  %433 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %431, i8* %432, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.5.111, i64 0, i64 0)), !dbg !3814
  %434 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !3815
  %435 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.109, i64 0, i64 0), %struct._IO_FILE* %434), !dbg !3815
  %436 = load i64, i64* %20, align 8, !dbg !3816
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %70
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %87
  %437 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !3820
  %438 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6.112, i64 0, i64 0)) #10, !dbg !3821
  %439 = load i8**, i8*** %19, align 8, !dbg !3822
  %440 = getelementptr inbounds i8*, i8** %439, i64 0, !dbg !3822
  %441 = load i8*, i8** %440, align 8, !dbg !3822
  %442 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %437, i8* %438, i8* %441), !dbg !3823
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %110
  %443 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !3825
  %444 = call i8* @gettext(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.113, i64 0, i64 0)) #10, !dbg !3826
  %445 = load i8**, i8*** %19, align 8, !dbg !3827
  %446 = getelementptr inbounds i8*, i8** %445, i64 0, !dbg !3827
  %447 = load i8*, i8** %446, align 8, !dbg !3827
  %448 = load i8**, i8*** %19, align 8, !dbg !3828
  %449 = getelementptr inbounds i8*, i8** %448, i64 1, !dbg !3828
  %450 = load i8*, i8** %449, align 8, !dbg !3828
  %451 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %443, i8* %444, i8* %447, i8* %450), !dbg !3829
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %136
  %452 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !3831
  %453 = call i8* @gettext(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.8.114, i64 0, i64 0)) #10, !dbg !3832
  %454 = load i8**, i8*** %19, align 8, !dbg !3833
  %455 = getelementptr inbounds i8*, i8** %454, i64 0, !dbg !3833
  %456 = load i8*, i8** %455, align 8, !dbg !3833
  %457 = load i8**, i8*** %19, align 8, !dbg !3834
  %458 = getelementptr inbounds i8*, i8** %457, i64 1, !dbg !3834
  %459 = load i8*, i8** %458, align 8, !dbg !3834
  %460 = load i8**, i8*** %19, align 8, !dbg !3835
  %461 = getelementptr inbounds i8*, i8** %460, i64 2, !dbg !3835
  %462 = load i8*, i8** %461, align 8, !dbg !3835
  %463 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %452, i8* %453, i8* %456, i8* %459, i8* %462), !dbg !3836
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %222
  %464 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !3865
  %465 = call i8* @gettext(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.12.118, i64 0, i64 0)) #10, !dbg !3866
  %466 = load i8**, i8*** %19, align 8, !dbg !3867
  %467 = getelementptr inbounds i8*, i8** %466, i64 0, !dbg !3867
  %468 = load i8*, i8** %467, align 8, !dbg !3867
  %469 = load i8**, i8*** %19, align 8, !dbg !3868
  %470 = getelementptr inbounds i8*, i8** %469, i64 1, !dbg !3868
  %471 = load i8*, i8** %470, align 8, !dbg !3868
  %472 = load i8**, i8*** %19, align 8, !dbg !3869
  %473 = getelementptr inbounds i8*, i8** %472, i64 2, !dbg !3869
  %474 = load i8*, i8** %473, align 8, !dbg !3869
  %475 = load i8**, i8*** %19, align 8, !dbg !3870
  %476 = getelementptr inbounds i8*, i8** %475, i64 3, !dbg !3870
  %477 = load i8*, i8** %476, align 8, !dbg !3870
  %478 = load i8**, i8*** %19, align 8, !dbg !3871
  %479 = getelementptr inbounds i8*, i8** %478, i64 4, !dbg !3871
  %480 = load i8*, i8** %479, align 8, !dbg !3871
  %481 = load i8**, i8*** %19, align 8, !dbg !3872
  %482 = getelementptr inbounds i8*, i8** %481, i64 5, !dbg !3872
  %483 = load i8*, i8** %482, align 8, !dbg !3872
  %484 = load i8**, i8*** %19, align 8, !dbg !3873
  %485 = getelementptr inbounds i8*, i8** %484, i64 6, !dbg !3873
  %486 = load i8*, i8** %485, align 8, !dbg !3873
  %487 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %464, i8* %465, i8* %468, i8* %471, i8* %474, i8* %477, i8* %480, i8* %483, i8* %486), !dbg !3874
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %263
  %488 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !3876
  %489 = call i8* @gettext(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.13.119, i64 0, i64 0)) #10, !dbg !3877
  %490 = load i8**, i8*** %19, align 8, !dbg !3878
  %491 = getelementptr inbounds i8*, i8** %490, i64 0, !dbg !3878
  %492 = load i8*, i8** %491, align 8, !dbg !3878
  %493 = load i8**, i8*** %19, align 8, !dbg !3879
  %494 = getelementptr inbounds i8*, i8** %493, i64 1, !dbg !3879
  %495 = load i8*, i8** %494, align 8, !dbg !3879
  %496 = load i8**, i8*** %19, align 8, !dbg !3880
  %497 = getelementptr inbounds i8*, i8** %496, i64 2, !dbg !3880
  %498 = load i8*, i8** %497, align 8, !dbg !3880
  %499 = load i8**, i8*** %19, align 8, !dbg !3881
  %500 = getelementptr inbounds i8*, i8** %499, i64 3, !dbg !3881
  %501 = load i8*, i8** %500, align 8, !dbg !3881
  %502 = load i8**, i8*** %19, align 8, !dbg !3882
  %503 = getelementptr inbounds i8*, i8** %502, i64 4, !dbg !3882
  %504 = load i8*, i8** %503, align 8, !dbg !3882
  %505 = load i8**, i8*** %19, align 8, !dbg !3883
  %506 = getelementptr inbounds i8*, i8** %505, i64 5, !dbg !3883
  %507 = load i8*, i8** %506, align 8, !dbg !3883
  %508 = load i8**, i8*** %19, align 8, !dbg !3884
  %509 = getelementptr inbounds i8*, i8** %508, i64 6, !dbg !3884
  %510 = load i8*, i8** %509, align 8, !dbg !3884
  %511 = load i8**, i8*** %19, align 8, !dbg !3885
  %512 = getelementptr inbounds i8*, i8** %511, i64 7, !dbg !3885
  %513 = load i8*, i8** %512, align 8, !dbg !3885
  %514 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %488, i8* %489, i8* %492, i8* %495, i8* %498, i8* %501, i8* %504, i8* %507, i8* %510, i8* %513), !dbg !3886
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %307
  %515 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !3888
  %516 = call i8* @gettext(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.14.120, i64 0, i64 0)) #10, !dbg !3889
  %517 = load i8**, i8*** %19, align 8, !dbg !3890
  %518 = getelementptr inbounds i8*, i8** %517, i64 0, !dbg !3890
  %519 = load i8*, i8** %518, align 8, !dbg !3890
  %520 = load i8**, i8*** %19, align 8, !dbg !3891
  %521 = getelementptr inbounds i8*, i8** %520, i64 1, !dbg !3891
  %522 = load i8*, i8** %521, align 8, !dbg !3891
  %523 = load i8**, i8*** %19, align 8, !dbg !3892
  %524 = getelementptr inbounds i8*, i8** %523, i64 2, !dbg !3892
  %525 = load i8*, i8** %524, align 8, !dbg !3892
  %526 = load i8**, i8*** %19, align 8, !dbg !3893
  %527 = getelementptr inbounds i8*, i8** %526, i64 3, !dbg !3893
  %528 = load i8*, i8** %527, align 8, !dbg !3893
  %529 = load i8**, i8*** %19, align 8, !dbg !3894
  %530 = getelementptr inbounds i8*, i8** %529, i64 4, !dbg !3894
  %531 = load i8*, i8** %530, align 8, !dbg !3894
  %532 = load i8**, i8*** %19, align 8, !dbg !3895
  %533 = getelementptr inbounds i8*, i8** %532, i64 5, !dbg !3895
  %534 = load i8*, i8** %533, align 8, !dbg !3895
  %535 = load i8**, i8*** %19, align 8, !dbg !3896
  %536 = getelementptr inbounds i8*, i8** %535, i64 6, !dbg !3896
  %537 = load i8*, i8** %536, align 8, !dbg !3896
  %538 = load i8**, i8*** %19, align 8, !dbg !3897
  %539 = getelementptr inbounds i8*, i8** %538, i64 7, !dbg !3897
  %540 = load i8*, i8** %539, align 8, !dbg !3897
  %541 = load i8**, i8*** %19, align 8, !dbg !3898
  %542 = getelementptr inbounds i8*, i8** %541, i64 8, !dbg !3898
  %543 = load i8*, i8** %542, align 8, !dbg !3898
  %544 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %515, i8* %516, i8* %519, i8* %522, i8* %525, i8* %528, i8* %531, i8* %534, i8* %537, i8* %540, i8* %543), !dbg !3899
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %354
  %545 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !3901
  %546 = call i8* @gettext(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.15.121, i64 0, i64 0)) #10, !dbg !3902
  %547 = load i8**, i8*** %19, align 8, !dbg !3903
  %548 = getelementptr inbounds i8*, i8** %547, i64 0, !dbg !3903
  %549 = load i8*, i8** %548, align 8, !dbg !3903
  %550 = load i8**, i8*** %19, align 8, !dbg !3904
  %551 = getelementptr inbounds i8*, i8** %550, i64 1, !dbg !3904
  %552 = load i8*, i8** %551, align 8, !dbg !3904
  %553 = load i8**, i8*** %19, align 8, !dbg !3905
  %554 = getelementptr inbounds i8*, i8** %553, i64 2, !dbg !3905
  %555 = load i8*, i8** %554, align 8, !dbg !3905
  %556 = load i8**, i8*** %19, align 8, !dbg !3906
  %557 = getelementptr inbounds i8*, i8** %556, i64 3, !dbg !3906
  %558 = load i8*, i8** %557, align 8, !dbg !3906
  %559 = load i8**, i8*** %19, align 8, !dbg !3907
  %560 = getelementptr inbounds i8*, i8** %559, i64 4, !dbg !3907
  %561 = load i8*, i8** %560, align 8, !dbg !3907
  %562 = load i8**, i8*** %19, align 8, !dbg !3908
  %563 = getelementptr inbounds i8*, i8** %562, i64 5, !dbg !3908
  %564 = load i8*, i8** %563, align 8, !dbg !3908
  %565 = load i8**, i8*** %19, align 8, !dbg !3909
  %566 = getelementptr inbounds i8*, i8** %565, i64 6, !dbg !3909
  %567 = load i8*, i8** %566, align 8, !dbg !3909
  %568 = load i8**, i8*** %19, align 8, !dbg !3910
  %569 = getelementptr inbounds i8*, i8** %568, i64 7, !dbg !3910
  %570 = load i8*, i8** %569, align 8, !dbg !3910
  %571 = load i8**, i8*** %19, align 8, !dbg !3911
  %572 = getelementptr inbounds i8*, i8** %571, i64 8, !dbg !3911
  %573 = load i8*, i8** %572, align 8, !dbg !3911
  %574 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %545, i8* %546, i8* %549, i8* %552, i8* %555, i8* %558, i8* %561, i8* %564, i8* %567, i8* %570, i8* %573), !dbg !3912
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %401
  br label %originalBB38
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @version_etc_va(%struct._IO_FILE*, i8*, i8*, i8*, %struct.__va_list_tag*) #4 !dbg !3959 {
  %6 = load i32, i32* @x.59
  %7 = load i32, i32* @y.60
  %8 = sub i32 %6, 1
  %9 = mul i32 %6, %8
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %7, 10
  %13 = or i1 %11, %12
  br i1 %13, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %5, %originalBBalteredBB
  %14 = alloca %struct._IO_FILE*, align 8
  %15 = alloca i8*, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i8*, align 8
  %18 = alloca %struct.__va_list_tag*, align 8
  %19 = alloca i64, align 8
  %20 = alloca [10 x i8*], align 16
  store %struct._IO_FILE* %0, %struct._IO_FILE** %14, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %14, metadata !3969, metadata !DIExpression()), !dbg !3970
  store i8* %1, i8** %15, align 8
  call void @llvm.dbg.declare(metadata i8** %15, metadata !3971, metadata !DIExpression()), !dbg !3972
  store i8* %2, i8** %16, align 8
  call void @llvm.dbg.declare(metadata i8** %16, metadata !3973, metadata !DIExpression()), !dbg !3974
  store i8* %3, i8** %17, align 8
  call void @llvm.dbg.declare(metadata i8** %17, metadata !3975, metadata !DIExpression()), !dbg !3976
  store %struct.__va_list_tag* %4, %struct.__va_list_tag** %18, align 8
  call void @llvm.dbg.declare(metadata %struct.__va_list_tag** %18, metadata !3977, metadata !DIExpression()), !dbg !3978
  call void @llvm.dbg.declare(metadata i64* %19, metadata !3979, metadata !DIExpression()), !dbg !3980
  call void @llvm.dbg.declare(metadata [10 x i8*]* %20, metadata !3981, metadata !DIExpression()), !dbg !3983
  store i64 0, i64* %19, align 8, !dbg !3984
  %21 = load i32, i32* @x.59
  %22 = load i32, i32* @y.60
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %29, !dbg !3986

29:                                               ; preds = %originalBBpart230, %originalBBpart2
  %30 = load i64, i64* %19, align 8, !dbg !3987
  %31 = icmp ult i64 %30, 10, !dbg !3989
  br i1 %31, label %32, label %102, !dbg !3990

32:                                               ; preds = %29
  %33 = load %struct.__va_list_tag*, %struct.__va_list_tag** %18, align 8, !dbg !3991
  %34 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %33, i32 0, i32 0, !dbg !3991
  %35 = load i32, i32* %34, align 8, !dbg !3991
  %36 = icmp ule i32 %35, 40, !dbg !3991
  br i1 %36, label %37, label %59, !dbg !3991

37:                                               ; preds = %32
  %38 = load i32, i32* @x.59
  %39 = load i32, i32* @y.60
  %40 = sub i32 %38, 1
  %41 = mul i32 %38, %40
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %43, %44
  br i1 %45, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %37, %originalBB1alteredBB
  %46 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %33, i32 0, i32 3, !dbg !3991
  %47 = load i8*, i8** %46, align 8, !dbg !3991
  %48 = getelementptr i8, i8* %47, i32 %35, !dbg !3991
  %49 = bitcast i8* %48 to i8**, !dbg !3991
  %50 = add i32 %35, 8, !dbg !3991
  store i32 %50, i32* %34, align 8, !dbg !3991
  %51 = load i32, i32* @x.59
  %52 = load i32, i32* @y.60
  %53 = sub i32 %51, 1
  %54 = mul i32 %51, %53
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %52, 10
  %58 = or i1 %56, %57
  br i1 %58, label %originalBBpart216, label %originalBB1alteredBB

originalBBpart216:                                ; preds = %originalBB1
  br label %80, !dbg !3991

59:                                               ; preds = %32
  %60 = load i32, i32* @x.59
  %61 = load i32, i32* @y.60
  %62 = sub i32 %60, 1
  %63 = mul i32 %60, %62
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %61, 10
  %67 = or i1 %65, %66
  br i1 %67, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %59, %originalBB18alteredBB
  %68 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %33, i32 0, i32 2, !dbg !3991
  %69 = load i8*, i8** %68, align 8, !dbg !3991
  %70 = bitcast i8* %69 to i8**, !dbg !3991
  %71 = getelementptr i8, i8* %69, i32 8, !dbg !3991
  store i8* %71, i8** %68, align 8, !dbg !3991
  %72 = load i32, i32* @x.59
  %73 = load i32, i32* @y.60
  %74 = sub i32 %72, 1
  %75 = mul i32 %72, %74
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %73, 10
  %79 = or i1 %77, %78
  br i1 %79, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %80, !dbg !3991

80:                                               ; preds = %originalBBpart220, %originalBBpart216
  %81 = phi i8** [ %49, %originalBBpart216 ], [ %70, %originalBBpart220 ], !dbg !3991
  %82 = load i32, i32* @x.59
  %83 = load i32, i32* @y.60
  %84 = sub i32 %82, 1
  %85 = mul i32 %82, %84
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %83, 10
  %89 = or i1 %87, %88
  br i1 %89, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %80, %originalBB22alteredBB
  %90 = load i8*, i8** %81, align 8, !dbg !3991
  %91 = load i64, i64* %19, align 8, !dbg !3992
  %92 = getelementptr inbounds [10 x i8*], [10 x i8*]* %20, i64 0, i64 %91, !dbg !3993
  store i8* %90, i8** %92, align 8, !dbg !3994
  %93 = icmp ne i8* %90, null, !dbg !3995
  %94 = load i32, i32* @x.59
  %95 = load i32, i32* @y.60
  %96 = sub i32 %94, 1
  %97 = mul i32 %94, %96
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %95, 10
  %101 = or i1 %99, %100
  br i1 %101, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br label %102

102:                                              ; preds = %originalBBpart224, %29
  %103 = phi i1 [ false, %29 ], [ %93, %originalBBpart224 ], !dbg !3996
  br i1 %103, label %104, label %124, !dbg !3997

104:                                              ; preds = %102
  br label %105, !dbg !3997

105:                                              ; preds = %104
  %106 = load i32, i32* @x.59
  %107 = load i32, i32* @y.60
  %108 = sub i32 %106, 1
  %109 = mul i32 %106, %108
  %110 = urem i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %107, 10
  %113 = or i1 %111, %112
  br i1 %113, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %105, %originalBB26alteredBB
  %114 = load i64, i64* %19, align 8, !dbg !3998
  %115 = add i64 %114, 1, !dbg !3998
  store i64 %115, i64* %19, align 8, !dbg !3998
  %116 = load i32, i32* @x.59
  %117 = load i32, i32* @y.60
  %118 = sub i32 %116, 1
  %119 = mul i32 %116, %118
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %117, 10
  %123 = or i1 %121, %122
  br i1 %123, label %originalBBpart230, label %originalBB26alteredBB

originalBBpart230:                                ; preds = %originalBB26
  br label %29, !dbg !3999, !llvm.loop !4000

124:                                              ; preds = %102
  %125 = load i32, i32* @x.59
  %126 = load i32, i32* @y.60
  %127 = sub i32 %125, 1
  %128 = mul i32 %125, %127
  %129 = urem i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = icmp slt i32 %126, 10
  %132 = or i1 %130, %131
  br i1 %132, label %originalBB32, label %originalBB32alteredBB

originalBB32:                                     ; preds = %124, %originalBB32alteredBB
  %133 = load %struct._IO_FILE*, %struct._IO_FILE** %14, align 8, !dbg !4002
  %134 = load i8*, i8** %15, align 8, !dbg !4003
  %135 = load i8*, i8** %16, align 8, !dbg !4004
  %136 = load i8*, i8** %17, align 8, !dbg !4005
  %137 = getelementptr inbounds [10 x i8*], [10 x i8*]* %20, i64 0, i64 0, !dbg !4006
  %138 = load i64, i64* %19, align 8, !dbg !4007
  call void @version_etc_arn(%struct._IO_FILE* %133, i8* %134, i8* %135, i8* %136, i8** %137, i64 %138), !dbg !4008
  %139 = load i32, i32* @x.59
  %140 = load i32, i32* @y.60
  %141 = sub i32 %139, 1
  %142 = mul i32 %139, %141
  %143 = urem i32 %142, 2
  %144 = icmp eq i32 %143, 0
  %145 = icmp slt i32 %140, 10
  %146 = or i1 %144, %145
  br i1 %146, label %originalBBpart234, label %originalBB32alteredBB

originalBBpart234:                                ; preds = %originalBB32
  ret void, !dbg !4009

originalBBalteredBB:                              ; preds = %originalBB, %5
  %147 = alloca %struct._IO_FILE*, align 8
  %148 = alloca i8*, align 8
  %149 = alloca i8*, align 8
  %150 = alloca i8*, align 8
  %151 = alloca %struct.__va_list_tag*, align 8
  %152 = alloca i64, align 8
  %153 = alloca [10 x i8*], align 16
  store %struct._IO_FILE* %0, %struct._IO_FILE** %147, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %147, metadata !4010, metadata !DIExpression()), !dbg !3970
  store i8* %1, i8** %148, align 8
  call void @llvm.dbg.declare(metadata i8** %148, metadata !4056, metadata !DIExpression()), !dbg !3972
  store i8* %2, i8** %149, align 8
  call void @llvm.dbg.declare(metadata i8** %149, metadata !4057, metadata !DIExpression()), !dbg !3974
  store i8* %3, i8** %150, align 8
  call void @llvm.dbg.declare(metadata i8** %150, metadata !4058, metadata !DIExpression()), !dbg !3976
  store %struct.__va_list_tag* %4, %struct.__va_list_tag** %151, align 8
  call void @llvm.dbg.declare(metadata %struct.__va_list_tag** %151, metadata !4059, metadata !DIExpression()), !dbg !3978
  call void @llvm.dbg.declare(metadata i64* %152, metadata !4060, metadata !DIExpression()), !dbg !3980
  call void @llvm.dbg.declare(metadata [10 x i8*]* %153, metadata !4061, metadata !DIExpression()), !dbg !3983
  store i64 0, i64* %152, align 8, !dbg !3984
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %37
  %154 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %33, i32 0, i32 3, !dbg !3991
  %155 = load i8*, i8** %154, align 8, !dbg !3991
  %156 = getelementptr i8, i8* %155, i32 %35, !dbg !3991
  %157 = bitcast i8* %156 to i8**, !dbg !3991
  %_ = sub i32 %35, 8
  %gen = mul i32 %_, 8
  %_2 = sub i32 0, %35
  %gen3 = add i32 %_2, 8
  %_4 = sub i32 %35, 8
  %gen5 = mul i32 %_4, 8
  %_6 = sub i32 %35, 8
  %gen7 = mul i32 %_6, 8
  %_8 = sub i32 0, %35
  %gen9 = add i32 %_8, 8
  %_10 = sub i32 0, %35
  %gen11 = add i32 %_10, 8
  %_12 = shl i32 %35, 8
  %_13 = sub i32 0, %35
  %gen14 = add i32 %_13, 8
  %158 = add i32 %35, 8, !dbg !3991
  store i32 %158, i32* %34, align 8, !dbg !3991
  br label %originalBB1

originalBB18alteredBB:                            ; preds = %originalBB18, %59
  %159 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %33, i32 0, i32 2, !dbg !3991
  %160 = load i8*, i8** %159, align 8, !dbg !3991
  %161 = bitcast i8* %160 to i8**, !dbg !3991
  %162 = getelementptr i8, i8* %160, i32 8, !dbg !3991
  store i8* %162, i8** %159, align 8, !dbg !3991
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %80
  %163 = load i8*, i8** %81, align 8, !dbg !3991
  %164 = load i64, i64* %19, align 8, !dbg !3992
  %165 = getelementptr inbounds [10 x i8*], [10 x i8*]* %20, i64 0, i64 %164, !dbg !3993
  store i8* %163, i8** %165, align 8, !dbg !3994
  %166 = icmp ne i8* %163, null, !dbg !3995
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %105
  %167 = load i64, i64* %19, align 8, !dbg !3998
  %_27 = sub i64 %167, 1
  %gen28 = mul i64 %_27, 1
  %168 = add i64 %167, 1, !dbg !3998
  store i64 %168, i64* %19, align 8, !dbg !3998
  br label %originalBB26

originalBB32alteredBB:                            ; preds = %originalBB32, %124
  %169 = load %struct._IO_FILE*, %struct._IO_FILE** %14, align 8, !dbg !4002
  %170 = load i8*, i8** %15, align 8, !dbg !4003
  %171 = load i8*, i8** %16, align 8, !dbg !4004
  %172 = load i8*, i8** %17, align 8, !dbg !4005
  %173 = getelementptr inbounds [10 x i8*], [10 x i8*]* %20, i64 0, i64 0, !dbg !4006
  %174 = load i64, i64* %19, align 8, !dbg !4007
  call void @version_etc_arn(%struct._IO_FILE* %169, i8* %170, i8* %171, i8* %172, i8** %173, i64 %174), !dbg !4008
  br label %originalBB32
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @version_etc(%struct._IO_FILE*, i8*, i8*, i8*, ...) #4 !dbg !4062 {
  %5 = load i32, i32* @x.61
  %6 = load i32, i32* @y.62
  %7 = sub i32 %5, 1
  %8 = mul i32 %5, %7
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %6, 10
  %12 = or i1 %10, %11
  br i1 %12, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %4, %originalBBalteredBB
  %13 = alloca %struct._IO_FILE*, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i8*, align 8
  %16 = alloca i8*, align 8
  %17 = alloca [1 x %struct.__va_list_tag], align 16
  store %struct._IO_FILE* %0, %struct._IO_FILE** %13, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %13, metadata !4065, metadata !DIExpression()), !dbg !4066
  store i8* %1, i8** %14, align 8
  call void @llvm.dbg.declare(metadata i8** %14, metadata !4067, metadata !DIExpression()), !dbg !4068
  store i8* %2, i8** %15, align 8
  call void @llvm.dbg.declare(metadata i8** %15, metadata !4069, metadata !DIExpression()), !dbg !4070
  store i8* %3, i8** %16, align 8
  call void @llvm.dbg.declare(metadata i8** %16, metadata !4071, metadata !DIExpression()), !dbg !4072
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %17, metadata !4073, metadata !DIExpression()), !dbg !4079
  %18 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %17, i64 0, i64 0, !dbg !4080
  %19 = bitcast %struct.__va_list_tag* %18 to i8*, !dbg !4080
  call void @llvm.va_start(i8* %19), !dbg !4080
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !4081
  %21 = load i8*, i8** %14, align 8, !dbg !4082
  %22 = load i8*, i8** %15, align 8, !dbg !4083
  %23 = load i8*, i8** %16, align 8, !dbg !4084
  %24 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %17, i64 0, i64 0, !dbg !4085
  call void @version_etc_va(%struct._IO_FILE* %20, i8* %21, i8* %22, i8* %23, %struct.__va_list_tag* %24), !dbg !4086
  %25 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %17, i64 0, i64 0, !dbg !4087
  %26 = bitcast %struct.__va_list_tag* %25 to i8*, !dbg !4087
  call void @llvm.va_end(i8* %26), !dbg !4087
  %27 = load i32, i32* @x.61
  %28 = load i32, i32* @y.62
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void, !dbg !4088

originalBBalteredBB:                              ; preds = %originalBB, %4
  %35 = alloca %struct._IO_FILE*, align 8
  %36 = alloca i8*, align 8
  %37 = alloca i8*, align 8
  %38 = alloca i8*, align 8
  %39 = alloca [1 x %struct.__va_list_tag], align 16
  store %struct._IO_FILE* %0, %struct._IO_FILE** %35, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %35, metadata !4089, metadata !DIExpression()), !dbg !4066
  store i8* %1, i8** %36, align 8
  call void @llvm.dbg.declare(metadata i8** %36, metadata !4128, metadata !DIExpression()), !dbg !4068
  store i8* %2, i8** %37, align 8
  call void @llvm.dbg.declare(metadata i8** %37, metadata !4129, metadata !DIExpression()), !dbg !4070
  store i8* %3, i8** %38, align 8
  call void @llvm.dbg.declare(metadata i8** %38, metadata !4130, metadata !DIExpression()), !dbg !4072
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %39, metadata !4131, metadata !DIExpression()), !dbg !4079
  %40 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %39, i64 0, i64 0, !dbg !4080
  %41 = bitcast %struct.__va_list_tag* %40 to i8*, !dbg !4080
  call void @llvm.va_start(i8* %41), !dbg !4080
  %42 = load %struct._IO_FILE*, %struct._IO_FILE** %35, align 8, !dbg !4081
  %43 = load i8*, i8** %36, align 8, !dbg !4082
  %44 = load i8*, i8** %37, align 8, !dbg !4083
  %45 = load i8*, i8** %38, align 8, !dbg !4084
  %46 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %39, i64 0, i64 0, !dbg !4085
  call void @version_etc_va(%struct._IO_FILE* %42, i8* %43, i8* %44, i8* %45, %struct.__va_list_tag* %46), !dbg !4086
  %47 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %39, i64 0, i64 0, !dbg !4087
  %48 = bitcast %struct.__va_list_tag* %47 to i8*, !dbg !4087
  call void @llvm.va_end(i8* %48), !dbg !4087
  br label %originalBB
}

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #10

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #10

; Function Attrs: noinline nounwind optnone uwtable
define internal noalias i8* @xmalloc(i64) #4 !dbg !4142 {
  %2 = load i32, i32* @x.63
  %3 = load i32, i32* @y.64
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i64, align 8
  %11 = alloca i8*, align 8
  store i64 %0, i64* %10, align 8
  call void @llvm.dbg.declare(metadata i64* %10, metadata !4146, metadata !DIExpression()), !dbg !4147
  call void @llvm.dbg.declare(metadata i8** %11, metadata !4148, metadata !DIExpression()), !dbg !4149
  %12 = load i64, i64* %10, align 8, !dbg !4150
  %13 = call noalias i8* @malloc(i64 %12) #10, !dbg !4151
  store i8* %13, i8** %11, align 8, !dbg !4149
  %14 = load i8*, i8** %11, align 8, !dbg !4152
  %15 = icmp ne i8* %14, null, !dbg !4152
  %16 = load i32, i32* @x.63
  %17 = load i32, i32* @y.64
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %15, label %60, label %24, !dbg !4154

24:                                               ; preds = %originalBBpart2
  %25 = load i32, i32* @x.63
  %26 = load i32, i32* @y.64
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %24, %originalBB1alteredBB
  %33 = load i64, i64* %10, align 8, !dbg !4155
  %34 = icmp ne i64 %33, 0, !dbg !4156
  %35 = load i32, i32* @x.63
  %36 = load i32, i32* @y.64
  %37 = sub i32 %35, 1
  %38 = mul i32 %35, %37
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %40, %41
  br i1 %42, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %34, label %43, label %60, !dbg !4157

43:                                               ; preds = %originalBBpart24
  %44 = load i32, i32* @x.63
  %45 = load i32, i32* @y.64
  %46 = sub i32 %44, 1
  %47 = mul i32 %44, %46
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %45, 10
  %51 = or i1 %49, %50
  br i1 %51, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %43, %originalBB6alteredBB
  call void @xalloc_die() #14, !dbg !4158
  %52 = load i32, i32* @x.63
  %53 = load i32, i32* @y.64
  %54 = sub i32 %52, 1
  %55 = mul i32 %52, %54
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %53, 10
  %59 = or i1 %57, %58
  br i1 %59, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  unreachable, !dbg !4158

60:                                               ; preds = %originalBBpart24, %originalBBpart2
  %61 = load i32, i32* @x.63
  %62 = load i32, i32* @y.64
  %63 = sub i32 %61, 1
  %64 = mul i32 %61, %63
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %62, 10
  %68 = or i1 %66, %67
  br i1 %68, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %60, %originalBB10alteredBB
  %69 = load i8*, i8** %11, align 8, !dbg !4159
  %70 = load i32, i32* @x.63
  %71 = load i32, i32* @y.64
  %72 = sub i32 %70, 1
  %73 = mul i32 %70, %72
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %71, 10
  %77 = or i1 %75, %76
  br i1 %77, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  ret i8* %69, !dbg !4160

originalBBalteredBB:                              ; preds = %originalBB, %1
  %78 = alloca i64, align 8
  %79 = alloca i8*, align 8
  store i64 %0, i64* %78, align 8
  call void @llvm.dbg.declare(metadata i64* %78, metadata !4161, metadata !DIExpression()), !dbg !4147
  call void @llvm.dbg.declare(metadata i8** %79, metadata !4164, metadata !DIExpression()), !dbg !4149
  %80 = load i64, i64* %78, align 8, !dbg !4150
  %81 = call noalias i8* @malloc(i64 %80) #10, !dbg !4151
  store i8* %81, i8** %79, align 8, !dbg !4149
  %82 = load i8*, i8** %79, align 8, !dbg !4152
  %83 = icmp ne i8* %82, null, !dbg !4152
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %24
  %84 = load i64, i64* %10, align 8, !dbg !4155
  %85 = icmp ne i64 %84, 0, !dbg !4156
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %43
  call void @xalloc_die() #14, !dbg !4158
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %60
  %86 = load i8*, i8** %11, align 8, !dbg !4159
  br label %originalBB10
}

; Function Attrs: nounwind
declare dso_local noalias i8* @malloc(i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @xrealloc(i8*, i64) #4 !dbg !4165 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !4168, metadata !DIExpression()), !dbg !4169
  store i64 %1, i64* %5, align 8
  call void @llvm.dbg.declare(metadata i64* %5, metadata !4170, metadata !DIExpression()), !dbg !4171
  %6 = load i64, i64* %5, align 8, !dbg !4172
  %7 = icmp ne i64 %6, 0, !dbg !4172
  br i1 %7, label %29, label %8, !dbg !4174

8:                                                ; preds = %2
  %9 = load i32, i32* @x.65
  %10 = load i32, i32* @y.66
  %11 = sub i32 %9, 1
  %12 = mul i32 %9, %11
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = icmp slt i32 %10, 10
  %16 = or i1 %14, %15
  br i1 %16, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %8, %originalBBalteredBB
  %17 = load i8*, i8** %4, align 8, !dbg !4175
  %18 = icmp ne i8* %17, null, !dbg !4175
  %19 = load i32, i32* @x.65
  %20 = load i32, i32* @y.66
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %18, label %27, label %29, !dbg !4176

27:                                               ; preds = %originalBBpart2
  %28 = load i8*, i8** %4, align 8, !dbg !4177
  call void @free(i8* %28) #10, !dbg !4179
  store i8* null, i8** %3, align 8, !dbg !4180
  br label %73, !dbg !4180

29:                                               ; preds = %originalBBpart2, %2
  %30 = load i8*, i8** %4, align 8, !dbg !4181
  %31 = load i64, i64* %5, align 8, !dbg !4182
  %32 = call i8* @realloc(i8* %30, i64 %31) #10, !dbg !4183
  store i8* %32, i8** %4, align 8, !dbg !4184
  %33 = load i8*, i8** %4, align 8, !dbg !4185
  %34 = icmp ne i8* %33, null, !dbg !4185
  br i1 %34, label %71, label %35, !dbg !4187

35:                                               ; preds = %29
  %36 = load i32, i32* @x.65
  %37 = load i32, i32* @y.66
  %38 = sub i32 %36, 1
  %39 = mul i32 %36, %38
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %37, 10
  %43 = or i1 %41, %42
  br i1 %43, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %35, %originalBB1alteredBB
  %44 = load i64, i64* %5, align 8, !dbg !4188
  %45 = icmp ne i64 %44, 0, !dbg !4188
  %46 = load i32, i32* @x.65
  %47 = load i32, i32* @y.66
  %48 = sub i32 %46, 1
  %49 = mul i32 %46, %48
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %47, 10
  %53 = or i1 %51, %52
  br i1 %53, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %45, label %54, label %71, !dbg !4189

54:                                               ; preds = %originalBBpart24
  %55 = load i32, i32* @x.65
  %56 = load i32, i32* @y.66
  %57 = sub i32 %55, 1
  %58 = mul i32 %55, %57
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %56, 10
  %62 = or i1 %60, %61
  br i1 %62, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %54, %originalBB6alteredBB
  call void @xalloc_die() #14, !dbg !4190
  %63 = load i32, i32* @x.65
  %64 = load i32, i32* @y.66
  %65 = sub i32 %63, 1
  %66 = mul i32 %63, %65
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %64, 10
  %70 = or i1 %68, %69
  br i1 %70, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  unreachable, !dbg !4190

71:                                               ; preds = %originalBBpart24, %29
  %72 = load i8*, i8** %4, align 8, !dbg !4191
  store i8* %72, i8** %3, align 8, !dbg !4192
  br label %73, !dbg !4192

73:                                               ; preds = %71, %27
  %74 = load i8*, i8** %3, align 8, !dbg !4193
  ret i8* %74, !dbg !4193

originalBBalteredBB:                              ; preds = %originalBB, %8
  %75 = load i8*, i8** %4, align 8, !dbg !4175
  %76 = icmp ne i8* %75, null, !dbg !4175
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %35
  %77 = load i64, i64* %5, align 8, !dbg !4188
  %78 = icmp ne i64 %77, 0, !dbg !4188
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %54
  call void @xalloc_die() #14, !dbg !4190
  br label %originalBB6
}

; Function Attrs: nounwind
declare dso_local i8* @realloc(i8*, i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal noalias i8* @xcharalloc(i64) #4 !dbg !4194 {
  %2 = alloca i64, align 8
  store i64 %0, i64* %2, align 8
  call void @llvm.dbg.declare(metadata i64* %2, metadata !4198, metadata !DIExpression()), !dbg !4199
  %3 = load i64, i64* %2, align 8, !dbg !4200
  %4 = call noalias i8* @xmalloc(i64 %3), !dbg !4200
  ret i8* %4, !dbg !4201
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @xmemdup(i8*, i64) #4 !dbg !4202 {
  %3 = load i32, i32* @x.69
  %4 = load i32, i32* @y.70
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca i8*, align 8
  %12 = alloca i64, align 8
  store i8* %0, i8** %11, align 8
  call void @llvm.dbg.declare(metadata i8** %11, metadata !4207, metadata !DIExpression()), !dbg !4208
  store i64 %1, i64* %12, align 8
  call void @llvm.dbg.declare(metadata i64* %12, metadata !4209, metadata !DIExpression()), !dbg !4210
  %13 = load i64, i64* %12, align 8, !dbg !4211
  %14 = call noalias i8* @xmalloc(i64 %13), !dbg !4212
  %15 = load i8*, i8** %11, align 8, !dbg !4213
  %16 = load i64, i64* %12, align 8, !dbg !4214
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %14, i8* align 1 %15, i64 %16, i1 false), !dbg !4215
  %17 = load i32, i32* @x.69
  %18 = load i32, i32* @y.70
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i8* %14, !dbg !4216

originalBBalteredBB:                              ; preds = %originalBB, %2
  %25 = alloca i8*, align 8
  %26 = alloca i64, align 8
  store i8* %0, i8** %25, align 8
  call void @llvm.dbg.declare(metadata i8** %25, metadata !4217, metadata !DIExpression()), !dbg !4208
  store i64 %1, i64* %26, align 8
  call void @llvm.dbg.declare(metadata i64* %26, metadata !4220, metadata !DIExpression()), !dbg !4210
  %27 = load i64, i64* %26, align 8, !dbg !4211
  %28 = call noalias i8* @xmalloc(i64 %27), !dbg !4212
  %29 = load i8*, i8** %25, align 8, !dbg !4213
  %30 = load i64, i64* %26, align 8, !dbg !4214
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %28, i8* align 1 %29, i64 %30, i1 false), !dbg !4215
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal noalias i8* @xstrdup(i8*) #4 !dbg !4221 {
  %2 = load i32, i32* @x.71
  %3 = load i32, i32* @y.72
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i8*, align 8
  store i8* %0, i8** %10, align 8
  call void @llvm.dbg.declare(metadata i8** %10, metadata !4222, metadata !DIExpression()), !dbg !4223
  %11 = load i8*, i8** %10, align 8, !dbg !4224
  %12 = load i8*, i8** %10, align 8, !dbg !4225
  %13 = call i64 @strlen(i8* %12) #13, !dbg !4226
  %14 = add i64 %13, 1, !dbg !4227
  %15 = call i8* @xmemdup(i8* %11, i64 %14), !dbg !4228
  %16 = load i32, i32* @x.71
  %17 = load i32, i32* @y.72
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i8* %15, !dbg !4229

originalBBalteredBB:                              ; preds = %originalBB, %1
  %24 = alloca i8*, align 8
  store i8* %0, i8** %24, align 8
  call void @llvm.dbg.declare(metadata i8** %24, metadata !4230, metadata !DIExpression()), !dbg !4223
  %25 = load i8*, i8** %24, align 8, !dbg !4224
  %26 = load i8*, i8** %24, align 8, !dbg !4225
  %27 = call i64 @strlen(i8* %26) #13, !dbg !4226
  %_ = shl i64 %27, 1
  %_1 = sub i64 0, %27
  %gen = add i64 %_1, 1
  %_2 = sub i64 %27, 1
  %gen3 = mul i64 %_2, 1
  %_4 = sub i64 %27, 1
  %gen5 = mul i64 %_4, 1
  %_6 = sub i64 %27, 1
  %gen7 = mul i64 %_6, 1
  %28 = add i64 %27, 1, !dbg !4227
  %29 = call i8* @xmemdup(i8* %25, i64 %28), !dbg !4228
  br label %originalBB
}

; Function Attrs: noinline noreturn nounwind optnone uwtable
define internal void @xalloc_die() #0 !dbg !4233 {
  %1 = load i32, i32* @x.73
  %2 = load i32, i32* @y.74
  %3 = sub i32 %1, 1
  %4 = mul i32 %1, %3
  %5 = urem i32 %4, 2
  %6 = icmp eq i32 %5, 0
  %7 = icmp slt i32 %2, 10
  %8 = or i1 %6, %7
  br i1 %8, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %0, %originalBBalteredBB
  %9 = load volatile i32, i32* @exit_failure, align 4, !dbg !4235
  %10 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1.136, i64 0, i64 0)) #10, !dbg !4236
  call void (i32, i32, i8*, ...) @error(i32 %9, i32 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.137, i64 0, i64 0), i8* %10), !dbg !4237
  call void @abort() #12, !dbg !4238
  %11 = load i32, i32* @x.73
  %12 = load i32, i32* @y.74
  %13 = sub i32 %11, 1
  %14 = mul i32 %11, %13
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = icmp slt i32 %12, 10
  %18 = or i1 %16, %17
  br i1 %18, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  unreachable, !dbg !4238

originalBBalteredBB:                              ; preds = %originalBB, %0
  %19 = load volatile i32, i32* @exit_failure, align 4, !dbg !4235
  %20 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1.136, i64 0, i64 0)) #10, !dbg !4236
  call void (i32, i32, i8*, ...) @error(i32 %19, i32 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.137, i64 0, i64 0), i8* %20), !dbg !4237
  call void @abort() #12, !dbg !4238
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @xgetgroups(i8*, i32, i32**) #4 !dbg !4239 {
  %4 = load i32, i32* @x.75
  %5 = load i32, i32* @y.76
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca i8*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32**, align 8
  %15 = alloca i32, align 4
  store i8* %0, i8** %12, align 8
  call void @llvm.dbg.declare(metadata i8** %12, metadata !4244, metadata !DIExpression()), !dbg !4245
  store i32 %1, i32* %13, align 4
  call void @llvm.dbg.declare(metadata i32* %13, metadata !4246, metadata !DIExpression()), !dbg !4247
  store i32** %2, i32*** %14, align 8
  call void @llvm.dbg.declare(metadata i32*** %14, metadata !4248, metadata !DIExpression()), !dbg !4249
  call void @llvm.dbg.declare(metadata i32* %15, metadata !4250, metadata !DIExpression()), !dbg !4251
  %16 = load i8*, i8** %12, align 8, !dbg !4252
  %17 = load i32, i32* %13, align 4, !dbg !4253
  %18 = load i32**, i32*** %14, align 8, !dbg !4254
  %19 = call i32 @mgetgroups(i8* %16, i32 %17, i32** %18), !dbg !4255
  store i32 %19, i32* %15, align 4, !dbg !4251
  %20 = load i32, i32* %15, align 4, !dbg !4256
  %21 = icmp eq i32 %20, -1, !dbg !4258
  %22 = load i32, i32* @x.75
  %23 = load i32, i32* @y.76
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %21, label %30, label %51, !dbg !4259

30:                                               ; preds = %originalBBpart2
  %31 = load i32, i32* @x.75
  %32 = load i32, i32* @y.76
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %30, %originalBB1alteredBB
  %39 = call i32* @__errno_location() #15, !dbg !4260
  %40 = load i32, i32* %39, align 4, !dbg !4260
  %41 = icmp eq i32 %40, 12, !dbg !4261
  %42 = load i32, i32* @x.75
  %43 = load i32, i32* @y.76
  %44 = sub i32 %42, 1
  %45 = mul i32 %42, %44
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %47, %48
  br i1 %49, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %41, label %50, label %51, !dbg !4262

50:                                               ; preds = %originalBBpart24
  call void @xalloc_die() #14, !dbg !4263
  unreachable, !dbg !4263

51:                                               ; preds = %originalBBpart24, %originalBBpart2
  %52 = load i32, i32* @x.75
  %53 = load i32, i32* @y.76
  %54 = sub i32 %52, 1
  %55 = mul i32 %52, %54
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %53, 10
  %59 = or i1 %57, %58
  br i1 %59, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %51, %originalBB6alteredBB
  %60 = load i32, i32* %15, align 4, !dbg !4264
  %61 = load i32, i32* @x.75
  %62 = load i32, i32* @y.76
  %63 = sub i32 %61, 1
  %64 = mul i32 %61, %63
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %62, 10
  %68 = or i1 %66, %67
  br i1 %68, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  ret i32 %60, !dbg !4265

originalBBalteredBB:                              ; preds = %originalBB, %3
  %69 = alloca i8*, align 8
  %70 = alloca i32, align 4
  %71 = alloca i32**, align 8
  %72 = alloca i32, align 4
  store i8* %0, i8** %69, align 8
  call void @llvm.dbg.declare(metadata i8** %69, metadata !4266, metadata !DIExpression()), !dbg !4245
  store i32 %1, i32* %70, align 4
  call void @llvm.dbg.declare(metadata i32* %70, metadata !4269, metadata !DIExpression()), !dbg !4247
  store i32** %2, i32*** %71, align 8
  call void @llvm.dbg.declare(metadata i32*** %71, metadata !4270, metadata !DIExpression()), !dbg !4249
  call void @llvm.dbg.declare(metadata i32* %72, metadata !4271, metadata !DIExpression()), !dbg !4251
  %73 = load i8*, i8** %69, align 8, !dbg !4252
  %74 = load i32, i32* %70, align 4, !dbg !4253
  %75 = load i32**, i32*** %71, align 8, !dbg !4254
  %76 = call i32 @mgetgroups(i8* %73, i32 %74, i32** %75), !dbg !4255
  store i32 %76, i32* %72, align 4, !dbg !4251
  %77 = load i32, i32* %72, align 4, !dbg !4256
  %78 = icmp eq i32 %77, -1, !dbg !4258
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %30
  %79 = call i32* @__errno_location() #15, !dbg !4260
  %80 = load i32, i32* %79, align 4, !dbg !4260
  %81 = icmp eq i32 %80, 12, !dbg !4261
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %51
  %82 = load i32, i32* %15, align 4, !dbg !4264
  br label %originalBB6
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @xstrtoul(i8*, i8**, i32, i64*, i8*) #4 !dbg !4272 {
  %6 = load i32, i32* @x.77
  %7 = load i32, i32* @y.78
  %8 = sub i32 %6, 1
  %9 = mul i32 %6, %8
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %7, 10
  %13 = or i1 %11, %12
  br i1 %13, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %5, %originalBBalteredBB
  %14 = alloca i32, align 4
  %15 = alloca i8*, align 8
  %16 = alloca i8**, align 8
  %17 = alloca i32, align 4
  %18 = alloca i64*, align 8
  %19 = alloca i8*, align 8
  %20 = alloca i8*, align 8
  %21 = alloca i8**, align 8
  %22 = alloca i64, align 8
  %23 = alloca i32, align 4
  %24 = alloca i8*, align 8
  %25 = alloca i8, align 1
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  store i8* %0, i8** %15, align 8
  call void @llvm.dbg.declare(metadata i8** %15, metadata !4278, metadata !DIExpression()), !dbg !4279
  store i8** %1, i8*** %16, align 8
  call void @llvm.dbg.declare(metadata i8*** %16, metadata !4280, metadata !DIExpression()), !dbg !4281
  store i32 %2, i32* %17, align 4
  call void @llvm.dbg.declare(metadata i32* %17, metadata !4282, metadata !DIExpression()), !dbg !4283
  store i64* %3, i64** %18, align 8
  call void @llvm.dbg.declare(metadata i64** %18, metadata !4284, metadata !DIExpression()), !dbg !4285
  store i8* %4, i8** %19, align 8
  call void @llvm.dbg.declare(metadata i8** %19, metadata !4286, metadata !DIExpression()), !dbg !4287
  call void @llvm.dbg.declare(metadata i8** %20, metadata !4288, metadata !DIExpression()), !dbg !4289
  call void @llvm.dbg.declare(metadata i8*** %21, metadata !4290, metadata !DIExpression()), !dbg !4291
  call void @llvm.dbg.declare(metadata i64* %22, metadata !4292, metadata !DIExpression()), !dbg !4293
  call void @llvm.dbg.declare(metadata i32* %23, metadata !4294, metadata !DIExpression()), !dbg !4295
  store i32 0, i32* %23, align 4, !dbg !4295
  %29 = load i32, i32* %17, align 4, !dbg !4296
  %30 = icmp sle i32 0, %29, !dbg !4296
  %31 = load i32, i32* @x.77
  %32 = load i32, i32* @y.78
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %30, label %39, label %75, !dbg !4296

39:                                               ; preds = %originalBBpart2
  %40 = load i32, i32* @x.77
  %41 = load i32, i32* @y.78
  %42 = sub i32 %40, 1
  %43 = mul i32 %40, %42
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %45, %46
  br i1 %47, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %39, %originalBB1alteredBB
  %48 = load i32, i32* %17, align 4, !dbg !4296
  %49 = icmp sle i32 %48, 36, !dbg !4296
  %50 = load i32, i32* @x.77
  %51 = load i32, i32* @y.78
  %52 = sub i32 %50, 1
  %53 = mul i32 %50, %52
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %51, 10
  %57 = or i1 %55, %56
  br i1 %57, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %49, label %58, label %75, !dbg !4299

58:                                               ; preds = %originalBBpart24
  %59 = load i32, i32* @x.77
  %60 = load i32, i32* @y.78
  %61 = sub i32 %59, 1
  %62 = mul i32 %59, %61
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %60, 10
  %66 = or i1 %64, %65
  br i1 %66, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %58, %originalBB6alteredBB
  %67 = load i32, i32* @x.77
  %68 = load i32, i32* @y.78
  %69 = sub i32 %67, 1
  %70 = mul i32 %67, %69
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %68, 10
  %74 = or i1 %72, %73
  br i1 %74, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %92, !dbg !4299

75:                                               ; preds = %originalBBpart24, %originalBBpart2
  %76 = load i32, i32* @x.77
  %77 = load i32, i32* @y.78
  %78 = sub i32 %76, 1
  %79 = mul i32 %76, %78
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %77, 10
  %83 = or i1 %81, %82
  br i1 %83, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %75, %originalBB10alteredBB
  call void @__assert_fail(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.142, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.143, i64 0, i64 0), i32 84, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @__PRETTY_FUNCTION__.xstrtoul, i64 0, i64 0)) #12, !dbg !4296
  %84 = load i32, i32* @x.77
  %85 = load i32, i32* @y.78
  %86 = sub i32 %84, 1
  %87 = mul i32 %84, %86
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %85, 10
  %91 = or i1 %89, %90
  br i1 %91, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  unreachable, !dbg !4296

92:                                               ; preds = %originalBBpart28
  %93 = load i8**, i8*** %16, align 8, !dbg !4300
  %94 = icmp ne i8** %93, null, !dbg !4300
  br i1 %94, label %95, label %97, !dbg !4300

95:                                               ; preds = %92
  %96 = load i8**, i8*** %16, align 8, !dbg !4301
  br label %114, !dbg !4300

97:                                               ; preds = %92
  %98 = load i32, i32* @x.77
  %99 = load i32, i32* @y.78
  %100 = sub i32 %98, 1
  %101 = mul i32 %98, %100
  %102 = urem i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = icmp slt i32 %99, 10
  %105 = or i1 %103, %104
  br i1 %105, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %97, %originalBB14alteredBB
  %106 = load i32, i32* @x.77
  %107 = load i32, i32* @y.78
  %108 = sub i32 %106, 1
  %109 = mul i32 %106, %108
  %110 = urem i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %107, 10
  %113 = or i1 %111, %112
  br i1 %113, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %114, !dbg !4300

114:                                              ; preds = %originalBBpart216, %95
  %115 = phi i8** [ %96, %95 ], [ %20, %originalBBpart216 ], !dbg !4300
  store i8** %115, i8*** %21, align 8, !dbg !4302
  %116 = call i32* @__errno_location() #15, !dbg !4303
  store i32 0, i32* %116, align 4, !dbg !4304
  call void @llvm.dbg.declare(metadata i8** %24, metadata !4305, metadata !DIExpression()), !dbg !4308
  %117 = load i8*, i8** %15, align 8, !dbg !4309
  store i8* %117, i8** %24, align 8, !dbg !4308
  call void @llvm.dbg.declare(metadata i8* %25, metadata !4310, metadata !DIExpression()), !dbg !4311
  %118 = load i8*, i8** %24, align 8, !dbg !4312
  %119 = load i8, i8* %118, align 1, !dbg !4313
  store i8 %119, i8* %25, align 1, !dbg !4311
  br label %120, !dbg !4314

120:                                              ; preds = %originalBBpart232, %114
  %121 = load i32, i32* @x.77
  %122 = load i32, i32* @y.78
  %123 = sub i32 %121, 1
  %124 = mul i32 %121, %123
  %125 = urem i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %122, 10
  %128 = or i1 %126, %127
  br i1 %128, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %120, %originalBB18alteredBB
  %129 = call i16** @__ctype_b_loc() #15, !dbg !4315
  %130 = load i16*, i16** %129, align 8, !dbg !4315
  %131 = load i8, i8* %25, align 1, !dbg !4315
  %132 = zext i8 %131 to i32, !dbg !4315
  %133 = sext i32 %132 to i64, !dbg !4315
  %134 = getelementptr inbounds i16, i16* %130, i64 %133, !dbg !4315
  %135 = load i16, i16* %134, align 2, !dbg !4315
  %136 = zext i16 %135 to i32, !dbg !4315
  %137 = and i32 %136, 8192, !dbg !4315
  %138 = icmp ne i32 %137, 0, !dbg !4314
  %139 = load i32, i32* @x.77
  %140 = load i32, i32* @y.78
  %141 = sub i32 %139, 1
  %142 = mul i32 %139, %141
  %143 = urem i32 %142, 2
  %144 = icmp eq i32 %143, 0
  %145 = icmp slt i32 %140, 10
  %146 = or i1 %144, %145
  br i1 %146, label %originalBBpart228, label %originalBB18alteredBB

originalBBpart228:                                ; preds = %originalBB18
  br i1 %138, label %147, label %167, !dbg !4314

147:                                              ; preds = %originalBBpart228
  %148 = load i32, i32* @x.77
  %149 = load i32, i32* @y.78
  %150 = sub i32 %148, 1
  %151 = mul i32 %148, %150
  %152 = urem i32 %151, 2
  %153 = icmp eq i32 %152, 0
  %154 = icmp slt i32 %149, 10
  %155 = or i1 %153, %154
  br i1 %155, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %147, %originalBB30alteredBB
  %156 = load i8*, i8** %24, align 8, !dbg !4316
  %157 = getelementptr inbounds i8, i8* %156, i32 1, !dbg !4316
  store i8* %157, i8** %24, align 8, !dbg !4316
  %158 = load i8, i8* %157, align 1, !dbg !4317
  store i8 %158, i8* %25, align 1, !dbg !4318
  %159 = load i32, i32* @x.77
  %160 = load i32, i32* @y.78
  %161 = sub i32 %159, 1
  %162 = mul i32 %159, %161
  %163 = urem i32 %162, 2
  %164 = icmp eq i32 %163, 0
  %165 = icmp slt i32 %160, 10
  %166 = or i1 %164, %165
  br i1 %166, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br label %120, !dbg !4314, !llvm.loop !4319

167:                                              ; preds = %originalBBpart228
  %168 = load i8, i8* %25, align 1, !dbg !4321
  %169 = zext i8 %168 to i32, !dbg !4321
  %170 = icmp eq i32 %169, 45, !dbg !4323
  br i1 %170, label %171, label %188, !dbg !4324

171:                                              ; preds = %167
  %172 = load i32, i32* @x.77
  %173 = load i32, i32* @y.78
  %174 = sub i32 %172, 1
  %175 = mul i32 %172, %174
  %176 = urem i32 %175, 2
  %177 = icmp eq i32 %176, 0
  %178 = icmp slt i32 %173, 10
  %179 = or i1 %177, %178
  br i1 %179, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %171, %originalBB34alteredBB
  store i32 4, i32* %14, align 4, !dbg !4325
  %180 = load i32, i32* @x.77
  %181 = load i32, i32* @y.78
  %182 = sub i32 %180, 1
  %183 = mul i32 %180, %182
  %184 = urem i32 %183, 2
  %185 = icmp eq i32 %184, 0
  %186 = icmp slt i32 %181, 10
  %187 = or i1 %185, %186
  br i1 %187, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  br label %813, !dbg !4325

188:                                              ; preds = %167
  %189 = load i8*, i8** %15, align 8, !dbg !4326
  %190 = load i8**, i8*** %21, align 8, !dbg !4327
  %191 = load i32, i32* %17, align 4, !dbg !4328
  %192 = call i64 @strtoul(i8* %189, i8** %190, i32 %191) #10, !dbg !4329
  store i64 %192, i64* %22, align 8, !dbg !4330
  %193 = load i8**, i8*** %21, align 8, !dbg !4331
  %194 = load i8*, i8** %193, align 8, !dbg !4333
  %195 = load i8*, i8** %15, align 8, !dbg !4334
  %196 = icmp eq i8* %194, %195, !dbg !4335
  br i1 %196, label %197, label %281, !dbg !4336

197:                                              ; preds = %188
  %198 = load i32, i32* @x.77
  %199 = load i32, i32* @y.78
  %200 = sub i32 %198, 1
  %201 = mul i32 %198, %200
  %202 = urem i32 %201, 2
  %203 = icmp eq i32 %202, 0
  %204 = icmp slt i32 %199, 10
  %205 = or i1 %203, %204
  br i1 %205, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %197, %originalBB38alteredBB
  %206 = load i8*, i8** %19, align 8, !dbg !4337
  %207 = icmp ne i8* %206, null, !dbg !4337
  %208 = load i32, i32* @x.77
  %209 = load i32, i32* @y.78
  %210 = sub i32 %208, 1
  %211 = mul i32 %208, %210
  %212 = urem i32 %211, 2
  %213 = icmp eq i32 %212, 0
  %214 = icmp slt i32 %209, 10
  %215 = or i1 %213, %214
  br i1 %215, label %originalBBpart240, label %originalBB38alteredBB

originalBBpart240:                                ; preds = %originalBB38
  br i1 %207, label %216, label %247, !dbg !4340

216:                                              ; preds = %originalBBpart240
  %217 = load i8**, i8*** %21, align 8, !dbg !4341
  %218 = load i8*, i8** %217, align 8, !dbg !4342
  %219 = load i8, i8* %218, align 1, !dbg !4343
  %220 = sext i8 %219 to i32, !dbg !4343
  %221 = icmp ne i32 %220, 0, !dbg !4343
  br i1 %221, label %222, label %247, !dbg !4344

222:                                              ; preds = %216
  %223 = load i8*, i8** %19, align 8, !dbg !4345
  %224 = load i8**, i8*** %21, align 8, !dbg !4346
  %225 = load i8*, i8** %224, align 8, !dbg !4347
  %226 = load i8, i8* %225, align 1, !dbg !4348
  %227 = sext i8 %226 to i32, !dbg !4348
  %228 = call i8* @strchr(i8* %223, i32 %227) #13, !dbg !4349
  %229 = icmp ne i8* %228, null, !dbg !4349
  br i1 %229, label %230, label %247, !dbg !4350

230:                                              ; preds = %222
  %231 = load i32, i32* @x.77
  %232 = load i32, i32* @y.78
  %233 = sub i32 %231, 1
  %234 = mul i32 %231, %233
  %235 = urem i32 %234, 2
  %236 = icmp eq i32 %235, 0
  %237 = icmp slt i32 %232, 10
  %238 = or i1 %236, %237
  br i1 %238, label %originalBB42, label %originalBB42alteredBB

originalBB42:                                     ; preds = %230, %originalBB42alteredBB
  store i64 1, i64* %22, align 8, !dbg !4351
  %239 = load i32, i32* @x.77
  %240 = load i32, i32* @y.78
  %241 = sub i32 %239, 1
  %242 = mul i32 %239, %241
  %243 = urem i32 %242, 2
  %244 = icmp eq i32 %243, 0
  %245 = icmp slt i32 %240, 10
  %246 = or i1 %244, %245
  br i1 %246, label %originalBBpart244, label %originalBB42alteredBB

originalBBpart244:                                ; preds = %originalBB42
  br label %264, !dbg !4352

247:                                              ; preds = %222, %216, %originalBBpart240
  %248 = load i32, i32* @x.77
  %249 = load i32, i32* @y.78
  %250 = sub i32 %248, 1
  %251 = mul i32 %248, %250
  %252 = urem i32 %251, 2
  %253 = icmp eq i32 %252, 0
  %254 = icmp slt i32 %249, 10
  %255 = or i1 %253, %254
  br i1 %255, label %originalBB46, label %originalBB46alteredBB

originalBB46:                                     ; preds = %247, %originalBB46alteredBB
  store i32 4, i32* %14, align 4, !dbg !4353
  %256 = load i32, i32* @x.77
  %257 = load i32, i32* @y.78
  %258 = sub i32 %256, 1
  %259 = mul i32 %256, %258
  %260 = urem i32 %259, 2
  %261 = icmp eq i32 %260, 0
  %262 = icmp slt i32 %257, 10
  %263 = or i1 %261, %262
  br i1 %263, label %originalBBpart248, label %originalBB46alteredBB

originalBBpart248:                                ; preds = %originalBB46
  br label %813, !dbg !4353

264:                                              ; preds = %originalBBpart244
  %265 = load i32, i32* @x.77
  %266 = load i32, i32* @y.78
  %267 = sub i32 %265, 1
  %268 = mul i32 %265, %267
  %269 = urem i32 %268, 2
  %270 = icmp eq i32 %269, 0
  %271 = icmp slt i32 %266, 10
  %272 = or i1 %270, %271
  br i1 %272, label %originalBB50, label %originalBB50alteredBB

originalBB50:                                     ; preds = %264, %originalBB50alteredBB
  %273 = load i32, i32* @x.77
  %274 = load i32, i32* @y.78
  %275 = sub i32 %273, 1
  %276 = mul i32 %273, %275
  %277 = urem i32 %276, 2
  %278 = icmp eq i32 %277, 0
  %279 = icmp slt i32 %274, 10
  %280 = or i1 %278, %279
  br i1 %280, label %originalBBpart252, label %originalBB50alteredBB

originalBBpart252:                                ; preds = %originalBB50
  br label %340, !dbg !4354

281:                                              ; preds = %188
  %282 = call i32* @__errno_location() #15, !dbg !4355
  %283 = load i32, i32* %282, align 4, !dbg !4355
  %284 = icmp ne i32 %283, 0, !dbg !4357
  br i1 %284, label %285, label %323, !dbg !4358

285:                                              ; preds = %281
  %286 = call i32* @__errno_location() #15, !dbg !4359
  %287 = load i32, i32* %286, align 4, !dbg !4359
  %288 = icmp ne i32 %287, 34, !dbg !4362
  br i1 %288, label %289, label %306, !dbg !4363

289:                                              ; preds = %285
  %290 = load i32, i32* @x.77
  %291 = load i32, i32* @y.78
  %292 = sub i32 %290, 1
  %293 = mul i32 %290, %292
  %294 = urem i32 %293, 2
  %295 = icmp eq i32 %294, 0
  %296 = icmp slt i32 %291, 10
  %297 = or i1 %295, %296
  br i1 %297, label %originalBB54, label %originalBB54alteredBB

originalBB54:                                     ; preds = %289, %originalBB54alteredBB
  store i32 4, i32* %14, align 4, !dbg !4364
  %298 = load i32, i32* @x.77
  %299 = load i32, i32* @y.78
  %300 = sub i32 %298, 1
  %301 = mul i32 %298, %300
  %302 = urem i32 %301, 2
  %303 = icmp eq i32 %302, 0
  %304 = icmp slt i32 %299, 10
  %305 = or i1 %303, %304
  br i1 %305, label %originalBBpart256, label %originalBB54alteredBB

originalBBpart256:                                ; preds = %originalBB54
  br label %813, !dbg !4364

306:                                              ; preds = %285
  %307 = load i32, i32* @x.77
  %308 = load i32, i32* @y.78
  %309 = sub i32 %307, 1
  %310 = mul i32 %307, %309
  %311 = urem i32 %310, 2
  %312 = icmp eq i32 %311, 0
  %313 = icmp slt i32 %308, 10
  %314 = or i1 %312, %313
  br i1 %314, label %originalBB58, label %originalBB58alteredBB

originalBB58:                                     ; preds = %306, %originalBB58alteredBB
  store i32 1, i32* %23, align 4, !dbg !4365
  %315 = load i32, i32* @x.77
  %316 = load i32, i32* @y.78
  %317 = sub i32 %315, 1
  %318 = mul i32 %315, %317
  %319 = urem i32 %318, 2
  %320 = icmp eq i32 %319, 0
  %321 = icmp slt i32 %316, 10
  %322 = or i1 %320, %321
  br i1 %322, label %originalBBpart260, label %originalBB58alteredBB

originalBBpart260:                                ; preds = %originalBB58
  br label %323, !dbg !4366

323:                                              ; preds = %originalBBpart260, %281
  %324 = load i32, i32* @x.77
  %325 = load i32, i32* @y.78
  %326 = sub i32 %324, 1
  %327 = mul i32 %324, %326
  %328 = urem i32 %327, 2
  %329 = icmp eq i32 %328, 0
  %330 = icmp slt i32 %325, 10
  %331 = or i1 %329, %330
  br i1 %331, label %originalBB62, label %originalBB62alteredBB

originalBB62:                                     ; preds = %323, %originalBB62alteredBB
  %332 = load i32, i32* @x.77
  %333 = load i32, i32* @y.78
  %334 = sub i32 %332, 1
  %335 = mul i32 %332, %334
  %336 = urem i32 %335, 2
  %337 = icmp eq i32 %336, 0
  %338 = icmp slt i32 %333, 10
  %339 = or i1 %337, %338
  br i1 %339, label %originalBBpart264, label %originalBB62alteredBB

originalBBpart264:                                ; preds = %originalBB62
  br label %340

340:                                              ; preds = %originalBBpart264, %originalBBpart252
  %341 = load i32, i32* @x.77
  %342 = load i32, i32* @y.78
  %343 = sub i32 %341, 1
  %344 = mul i32 %341, %343
  %345 = urem i32 %344, 2
  %346 = icmp eq i32 %345, 0
  %347 = icmp slt i32 %342, 10
  %348 = or i1 %346, %347
  br i1 %348, label %originalBB66, label %originalBB66alteredBB

originalBB66:                                     ; preds = %340, %originalBB66alteredBB
  %349 = load i8*, i8** %19, align 8, !dbg !4367
  %350 = icmp ne i8* %349, null, !dbg !4367
  %351 = load i32, i32* @x.77
  %352 = load i32, i32* @y.78
  %353 = sub i32 %351, 1
  %354 = mul i32 %351, %353
  %355 = urem i32 %354, 2
  %356 = icmp eq i32 %355, 0
  %357 = icmp slt i32 %352, 10
  %358 = or i1 %356, %357
  br i1 %358, label %originalBBpart268, label %originalBB66alteredBB

originalBBpart268:                                ; preds = %originalBB66
  br i1 %350, label %379, label %359, !dbg !4369

359:                                              ; preds = %originalBBpart268
  %360 = load i32, i32* @x.77
  %361 = load i32, i32* @y.78
  %362 = sub i32 %360, 1
  %363 = mul i32 %360, %362
  %364 = urem i32 %363, 2
  %365 = icmp eq i32 %364, 0
  %366 = icmp slt i32 %361, 10
  %367 = or i1 %365, %366
  br i1 %367, label %originalBB70, label %originalBB70alteredBB

originalBB70:                                     ; preds = %359, %originalBB70alteredBB
  %368 = load i64, i64* %22, align 8, !dbg !4370
  %369 = load i64*, i64** %18, align 8, !dbg !4372
  store i64 %368, i64* %369, align 8, !dbg !4373
  %370 = load i32, i32* %23, align 4, !dbg !4374
  store i32 %370, i32* %14, align 4, !dbg !4375
  %371 = load i32, i32* @x.77
  %372 = load i32, i32* @y.78
  %373 = sub i32 %371, 1
  %374 = mul i32 %371, %373
  %375 = urem i32 %374, 2
  %376 = icmp eq i32 %375, 0
  %377 = icmp slt i32 %372, 10
  %378 = or i1 %376, %377
  br i1 %378, label %originalBBpart272, label %originalBB70alteredBB

originalBBpart272:                                ; preds = %originalBB70
  br label %813, !dbg !4375

379:                                              ; preds = %originalBBpart268
  %380 = load i32, i32* @x.77
  %381 = load i32, i32* @y.78
  %382 = sub i32 %380, 1
  %383 = mul i32 %380, %382
  %384 = urem i32 %383, 2
  %385 = icmp eq i32 %384, 0
  %386 = icmp slt i32 %381, 10
  %387 = or i1 %385, %386
  br i1 %387, label %originalBB74, label %originalBB74alteredBB

originalBB74:                                     ; preds = %379, %originalBB74alteredBB
  %388 = load i8**, i8*** %21, align 8, !dbg !4376
  %389 = load i8*, i8** %388, align 8, !dbg !4378
  %390 = load i8, i8* %389, align 1, !dbg !4379
  %391 = sext i8 %390 to i32, !dbg !4379
  %392 = icmp ne i32 %391, 0, !dbg !4380
  %393 = load i32, i32* @x.77
  %394 = load i32, i32* @y.78
  %395 = sub i32 %393, 1
  %396 = mul i32 %393, %395
  %397 = urem i32 %396, 2
  %398 = icmp eq i32 %397, 0
  %399 = icmp slt i32 %394, 10
  %400 = or i1 %398, %399
  br i1 %400, label %originalBBpart276, label %originalBB74alteredBB

originalBBpart276:                                ; preds = %originalBB74
  br i1 %392, label %401, label %809, !dbg !4381

401:                                              ; preds = %originalBBpart276
  call void @llvm.dbg.declare(metadata i32* %26, metadata !4382, metadata !DIExpression()), !dbg !4384
  %402 = load i32, i32* @x.77
  %403 = load i32, i32* @y.78
  %404 = sub i32 %402, 1
  %405 = mul i32 %402, %404
  %406 = urem i32 %405, 2
  %407 = icmp eq i32 %406, 0
  %408 = icmp slt i32 %403, 10
  %409 = or i1 %407, %408
  br i1 %409, label %originalBB78, label %originalBB78alteredBB

originalBB78:                                     ; preds = %401, %originalBB78alteredBB
  store i32 1024, i32* %26, align 4, !dbg !4384
  call void @llvm.dbg.declare(metadata i32* %27, metadata !4385, metadata !DIExpression()), !dbg !4386
  store i32 1, i32* %27, align 4, !dbg !4386
  call void @llvm.dbg.declare(metadata i32* %28, metadata !4387, metadata !DIExpression()), !dbg !4388
  %410 = load i8*, i8** %19, align 8, !dbg !4389
  %411 = load i8**, i8*** %21, align 8, !dbg !4391
  %412 = load i8*, i8** %411, align 8, !dbg !4392
  %413 = load i8, i8* %412, align 1, !dbg !4393
  %414 = sext i8 %413 to i32, !dbg !4393
  %415 = call i8* @strchr(i8* %410, i32 %414) #13, !dbg !4394
  %416 = icmp ne i8* %415, null, !dbg !4394
  %417 = load i32, i32* @x.77
  %418 = load i32, i32* @y.78
  %419 = sub i32 %417, 1
  %420 = mul i32 %417, %419
  %421 = urem i32 %420, 2
  %422 = icmp eq i32 %421, 0
  %423 = icmp slt i32 %418, 10
  %424 = or i1 %422, %423
  br i1 %424, label %originalBBpart280, label %originalBB78alteredBB

originalBBpart280:                                ; preds = %originalBB78
  br i1 %416, label %446, label %425, !dbg !4395

425:                                              ; preds = %originalBBpart280
  %426 = load i32, i32* @x.77
  %427 = load i32, i32* @y.78
  %428 = sub i32 %426, 1
  %429 = mul i32 %426, %428
  %430 = urem i32 %429, 2
  %431 = icmp eq i32 %430, 0
  %432 = icmp slt i32 %427, 10
  %433 = or i1 %431, %432
  br i1 %433, label %originalBB82, label %originalBB82alteredBB

originalBB82:                                     ; preds = %425, %originalBB82alteredBB
  %434 = load i64, i64* %22, align 8, !dbg !4396
  %435 = load i64*, i64** %18, align 8, !dbg !4398
  store i64 %434, i64* %435, align 8, !dbg !4399
  %436 = load i32, i32* %23, align 4, !dbg !4400
  %437 = or i32 %436, 2, !dbg !4401
  store i32 %437, i32* %14, align 4, !dbg !4402
  %438 = load i32, i32* @x.77
  %439 = load i32, i32* @y.78
  %440 = sub i32 %438, 1
  %441 = mul i32 %438, %440
  %442 = urem i32 %441, 2
  %443 = icmp eq i32 %442, 0
  %444 = icmp slt i32 %439, 10
  %445 = or i1 %443, %444
  br i1 %445, label %originalBBpart295, label %originalBB82alteredBB

originalBBpart295:                                ; preds = %originalBB82
  br label %813, !dbg !4402

446:                                              ; preds = %originalBBpart280
  %447 = load i32, i32* @x.77
  %448 = load i32, i32* @y.78
  %449 = sub i32 %447, 1
  %450 = mul i32 %447, %449
  %451 = urem i32 %450, 2
  %452 = icmp eq i32 %451, 0
  %453 = icmp slt i32 %448, 10
  %454 = or i1 %452, %453
  br i1 %454, label %originalBB97, label %originalBB97alteredBB

originalBB97:                                     ; preds = %446, %originalBB97alteredBB
  %455 = load i8**, i8*** %21, align 8, !dbg !4403
  %456 = load i8*, i8** %455, align 8, !dbg !4404
  %457 = load i8, i8* %456, align 1, !dbg !4405
  %458 = sext i8 %457 to i32, !dbg !4405
  %459 = load i32, i32* @x.77
  %460 = load i32, i32* @y.78
  %461 = sub i32 %459, 1
  %462 = mul i32 %459, %461
  %463 = urem i32 %462, 2
  %464 = icmp eq i32 %463, 0
  %465 = icmp slt i32 %460, 10
  %466 = or i1 %464, %465
  br i1 %466, label %originalBBpart299, label %originalBB97alteredBB

originalBBpart299:                                ; preds = %originalBB97
  switch i32 %458, label %559 [
    i32 69, label %467
    i32 71, label %467
    i32 103, label %467
    i32 107, label %467
    i32 75, label %467
    i32 77, label %467
    i32 109, label %467
    i32 80, label %467
    i32 84, label %467
    i32 116, label %467
    i32 89, label %467
    i32 90, label %467
  ], !dbg !4406

467:                                              ; preds = %originalBBpart299, %originalBBpart299, %originalBBpart299, %originalBBpart299, %originalBBpart299, %originalBBpart299, %originalBBpart299, %originalBBpart299, %originalBBpart299, %originalBBpart299, %originalBBpart299, %originalBBpart299
  %468 = load i8*, i8** %19, align 8, !dbg !4407
  %469 = call i8* @strchr(i8* %468, i32 48) #13, !dbg !4410
  %470 = icmp ne i8* %469, null, !dbg !4410
  br i1 %470, label %471, label %558, !dbg !4411

471:                                              ; preds = %467
  %472 = load i8**, i8*** %21, align 8, !dbg !4412
  %473 = getelementptr inbounds i8*, i8** %472, i64 0, !dbg !4412
  %474 = load i8*, i8** %473, align 8, !dbg !4412
  %475 = getelementptr inbounds i8, i8* %474, i64 1, !dbg !4412
  %476 = load i8, i8* %475, align 1, !dbg !4412
  %477 = sext i8 %476 to i32, !dbg !4412
  switch i32 %477, label %557 [
    i32 105, label %478
    i32 66, label %538
    i32 68, label %538
  ], !dbg !4413

478:                                              ; preds = %471
  %479 = load i32, i32* @x.77
  %480 = load i32, i32* @y.78
  %481 = sub i32 %479, 1
  %482 = mul i32 %479, %481
  %483 = urem i32 %482, 2
  %484 = icmp eq i32 %483, 0
  %485 = icmp slt i32 %480, 10
  %486 = or i1 %484, %485
  br i1 %486, label %originalBB101, label %originalBB101alteredBB

originalBB101:                                    ; preds = %478, %originalBB101alteredBB
  %487 = load i8**, i8*** %21, align 8, !dbg !4414
  %488 = getelementptr inbounds i8*, i8** %487, i64 0, !dbg !4414
  %489 = load i8*, i8** %488, align 8, !dbg !4414
  %490 = getelementptr inbounds i8, i8* %489, i64 2, !dbg !4414
  %491 = load i8, i8* %490, align 1, !dbg !4414
  %492 = sext i8 %491 to i32, !dbg !4414
  %493 = icmp eq i32 %492, 66, !dbg !4417
  %494 = load i32, i32* @x.77
  %495 = load i32, i32* @y.78
  %496 = sub i32 %494, 1
  %497 = mul i32 %494, %496
  %498 = urem i32 %497, 2
  %499 = icmp eq i32 %498, 0
  %500 = icmp slt i32 %495, 10
  %501 = or i1 %499, %500
  br i1 %501, label %originalBBpart2103, label %originalBB101alteredBB

originalBBpart2103:                               ; preds = %originalBB101
  br i1 %493, label %502, label %521, !dbg !4418

502:                                              ; preds = %originalBBpart2103
  %503 = load i32, i32* @x.77
  %504 = load i32, i32* @y.78
  %505 = sub i32 %503, 1
  %506 = mul i32 %503, %505
  %507 = urem i32 %506, 2
  %508 = icmp eq i32 %507, 0
  %509 = icmp slt i32 %504, 10
  %510 = or i1 %508, %509
  br i1 %510, label %originalBB105, label %originalBB105alteredBB

originalBB105:                                    ; preds = %502, %originalBB105alteredBB
  %511 = load i32, i32* %27, align 4, !dbg !4419
  %512 = add nsw i32 %511, 2, !dbg !4419
  store i32 %512, i32* %27, align 4, !dbg !4419
  %513 = load i32, i32* @x.77
  %514 = load i32, i32* @y.78
  %515 = sub i32 %513, 1
  %516 = mul i32 %513, %515
  %517 = urem i32 %516, 2
  %518 = icmp eq i32 %517, 0
  %519 = icmp slt i32 %514, 10
  %520 = or i1 %518, %519
  br i1 %520, label %originalBBpart2110, label %originalBB105alteredBB

originalBBpart2110:                               ; preds = %originalBB105
  br label %521, !dbg !4420

521:                                              ; preds = %originalBBpart2110, %originalBBpart2103
  %522 = load i32, i32* @x.77
  %523 = load i32, i32* @y.78
  %524 = sub i32 %522, 1
  %525 = mul i32 %522, %524
  %526 = urem i32 %525, 2
  %527 = icmp eq i32 %526, 0
  %528 = icmp slt i32 %523, 10
  %529 = or i1 %527, %528
  br i1 %529, label %originalBB112, label %originalBB112alteredBB

originalBB112:                                    ; preds = %521, %originalBB112alteredBB
  %530 = load i32, i32* @x.77
  %531 = load i32, i32* @y.78
  %532 = sub i32 %530, 1
  %533 = mul i32 %530, %532
  %534 = urem i32 %533, 2
  %535 = icmp eq i32 %534, 0
  %536 = icmp slt i32 %531, 10
  %537 = or i1 %535, %536
  br i1 %537, label %originalBBpart2114, label %originalBB112alteredBB

originalBBpart2114:                               ; preds = %originalBB112
  br label %557, !dbg !4421

538:                                              ; preds = %471, %471
  %539 = load i32, i32* @x.77
  %540 = load i32, i32* @y.78
  %541 = sub i32 %539, 1
  %542 = mul i32 %539, %541
  %543 = urem i32 %542, 2
  %544 = icmp eq i32 %543, 0
  %545 = icmp slt i32 %540, 10
  %546 = or i1 %544, %545
  br i1 %546, label %originalBB116, label %originalBB116alteredBB

originalBB116:                                    ; preds = %538, %originalBB116alteredBB
  store i32 1000, i32* %26, align 4, !dbg !4422
  %547 = load i32, i32* %27, align 4, !dbg !4423
  %548 = add nsw i32 %547, 1, !dbg !4423
  store i32 %548, i32* %27, align 4, !dbg !4423
  %549 = load i32, i32* @x.77
  %550 = load i32, i32* @y.78
  %551 = sub i32 %549, 1
  %552 = mul i32 %549, %551
  %553 = urem i32 %552, 2
  %554 = icmp eq i32 %553, 0
  %555 = icmp slt i32 %550, 10
  %556 = or i1 %554, %555
  br i1 %556, label %originalBBpart2123, label %originalBB116alteredBB

originalBBpart2123:                               ; preds = %originalBB116
  br label %557, !dbg !4424

557:                                              ; preds = %originalBBpart2123, %originalBBpart2114, %471
  br label %558, !dbg !4425

558:                                              ; preds = %557, %467
  br label %559, !dbg !4426

559:                                              ; preds = %558, %originalBBpart299
  %560 = load i8**, i8*** %21, align 8, !dbg !4427
  %561 = load i8*, i8** %560, align 8, !dbg !4428
  %562 = load i8, i8* %561, align 1, !dbg !4429
  %563 = sext i8 %562 to i32, !dbg !4429
  switch i32 %563, label %771 [
    i32 98, label %564
    i32 66, label %582
    i32 99, label %600
    i32 69, label %617
    i32 71, label %620
    i32 103, label %620
    i32 107, label %639
    i32 75, label %639
    i32 77, label %658
    i32 109, label %658
    i32 80, label %677
    i32 84, label %696
    i32 116, label %696
    i32 119, label %715
    i32 89, label %733
    i32 90, label %752
  ], !dbg !4430

564:                                              ; preds = %559
  %565 = load i32, i32* @x.77
  %566 = load i32, i32* @y.78
  %567 = sub i32 %565, 1
  %568 = mul i32 %565, %567
  %569 = urem i32 %568, 2
  %570 = icmp eq i32 %569, 0
  %571 = icmp slt i32 %566, 10
  %572 = or i1 %570, %571
  br i1 %572, label %originalBB125, label %originalBB125alteredBB

originalBB125:                                    ; preds = %564, %originalBB125alteredBB
  %573 = call i32 @bkm_scale(i64* %22, i32 512), !dbg !4431
  store i32 %573, i32* %28, align 4, !dbg !4433
  %574 = load i32, i32* @x.77
  %575 = load i32, i32* @y.78
  %576 = sub i32 %574, 1
  %577 = mul i32 %574, %576
  %578 = urem i32 %577, 2
  %579 = icmp eq i32 %578, 0
  %580 = icmp slt i32 %575, 10
  %581 = or i1 %579, %580
  br i1 %581, label %originalBBpart2127, label %originalBB125alteredBB

originalBBpart2127:                               ; preds = %originalBB125
  br label %776, !dbg !4434

582:                                              ; preds = %559
  %583 = load i32, i32* @x.77
  %584 = load i32, i32* @y.78
  %585 = sub i32 %583, 1
  %586 = mul i32 %583, %585
  %587 = urem i32 %586, 2
  %588 = icmp eq i32 %587, 0
  %589 = icmp slt i32 %584, 10
  %590 = or i1 %588, %589
  br i1 %590, label %originalBB129, label %originalBB129alteredBB

originalBB129:                                    ; preds = %582, %originalBB129alteredBB
  %591 = call i32 @bkm_scale(i64* %22, i32 1024), !dbg !4435
  store i32 %591, i32* %28, align 4, !dbg !4436
  %592 = load i32, i32* @x.77
  %593 = load i32, i32* @y.78
  %594 = sub i32 %592, 1
  %595 = mul i32 %592, %594
  %596 = urem i32 %595, 2
  %597 = icmp eq i32 %596, 0
  %598 = icmp slt i32 %593, 10
  %599 = or i1 %597, %598
  br i1 %599, label %originalBBpart2131, label %originalBB129alteredBB

originalBBpart2131:                               ; preds = %originalBB129
  br label %776, !dbg !4437

600:                                              ; preds = %559
  %601 = load i32, i32* @x.77
  %602 = load i32, i32* @y.78
  %603 = sub i32 %601, 1
  %604 = mul i32 %601, %603
  %605 = urem i32 %604, 2
  %606 = icmp eq i32 %605, 0
  %607 = icmp slt i32 %602, 10
  %608 = or i1 %606, %607
  br i1 %608, label %originalBB133, label %originalBB133alteredBB

originalBB133:                                    ; preds = %600, %originalBB133alteredBB
  store i32 0, i32* %28, align 4, !dbg !4438
  %609 = load i32, i32* @x.77
  %610 = load i32, i32* @y.78
  %611 = sub i32 %609, 1
  %612 = mul i32 %609, %611
  %613 = urem i32 %612, 2
  %614 = icmp eq i32 %613, 0
  %615 = icmp slt i32 %610, 10
  %616 = or i1 %614, %615
  br i1 %616, label %originalBBpart2135, label %originalBB133alteredBB

originalBBpart2135:                               ; preds = %originalBB133
  br label %776, !dbg !4439

617:                                              ; preds = %559
  %618 = load i32, i32* %26, align 4, !dbg !4440
  %619 = call i32 @bkm_scale_by_power(i64* %22, i32 %618, i32 6), !dbg !4441
  store i32 %619, i32* %28, align 4, !dbg !4442
  br label %776, !dbg !4443

620:                                              ; preds = %559, %559
  %621 = load i32, i32* @x.77
  %622 = load i32, i32* @y.78
  %623 = sub i32 %621, 1
  %624 = mul i32 %621, %623
  %625 = urem i32 %624, 2
  %626 = icmp eq i32 %625, 0
  %627 = icmp slt i32 %622, 10
  %628 = or i1 %626, %627
  br i1 %628, label %originalBB137, label %originalBB137alteredBB

originalBB137:                                    ; preds = %620, %originalBB137alteredBB
  %629 = load i32, i32* %26, align 4, !dbg !4444
  %630 = call i32 @bkm_scale_by_power(i64* %22, i32 %629, i32 3), !dbg !4445
  store i32 %630, i32* %28, align 4, !dbg !4446
  %631 = load i32, i32* @x.77
  %632 = load i32, i32* @y.78
  %633 = sub i32 %631, 1
  %634 = mul i32 %631, %633
  %635 = urem i32 %634, 2
  %636 = icmp eq i32 %635, 0
  %637 = icmp slt i32 %632, 10
  %638 = or i1 %636, %637
  br i1 %638, label %originalBBpart2139, label %originalBB137alteredBB

originalBBpart2139:                               ; preds = %originalBB137
  br label %776, !dbg !4447

639:                                              ; preds = %559, %559
  %640 = load i32, i32* @x.77
  %641 = load i32, i32* @y.78
  %642 = sub i32 %640, 1
  %643 = mul i32 %640, %642
  %644 = urem i32 %643, 2
  %645 = icmp eq i32 %644, 0
  %646 = icmp slt i32 %641, 10
  %647 = or i1 %645, %646
  br i1 %647, label %originalBB141, label %originalBB141alteredBB

originalBB141:                                    ; preds = %639, %originalBB141alteredBB
  %648 = load i32, i32* %26, align 4, !dbg !4448
  %649 = call i32 @bkm_scale_by_power(i64* %22, i32 %648, i32 1), !dbg !4449
  store i32 %649, i32* %28, align 4, !dbg !4450
  %650 = load i32, i32* @x.77
  %651 = load i32, i32* @y.78
  %652 = sub i32 %650, 1
  %653 = mul i32 %650, %652
  %654 = urem i32 %653, 2
  %655 = icmp eq i32 %654, 0
  %656 = icmp slt i32 %651, 10
  %657 = or i1 %655, %656
  br i1 %657, label %originalBBpart2143, label %originalBB141alteredBB

originalBBpart2143:                               ; preds = %originalBB141
  br label %776, !dbg !4451

658:                                              ; preds = %559, %559
  %659 = load i32, i32* @x.77
  %660 = load i32, i32* @y.78
  %661 = sub i32 %659, 1
  %662 = mul i32 %659, %661
  %663 = urem i32 %662, 2
  %664 = icmp eq i32 %663, 0
  %665 = icmp slt i32 %660, 10
  %666 = or i1 %664, %665
  br i1 %666, label %originalBB145, label %originalBB145alteredBB

originalBB145:                                    ; preds = %658, %originalBB145alteredBB
  %667 = load i32, i32* %26, align 4, !dbg !4452
  %668 = call i32 @bkm_scale_by_power(i64* %22, i32 %667, i32 2), !dbg !4453
  store i32 %668, i32* %28, align 4, !dbg !4454
  %669 = load i32, i32* @x.77
  %670 = load i32, i32* @y.78
  %671 = sub i32 %669, 1
  %672 = mul i32 %669, %671
  %673 = urem i32 %672, 2
  %674 = icmp eq i32 %673, 0
  %675 = icmp slt i32 %670, 10
  %676 = or i1 %674, %675
  br i1 %676, label %originalBBpart2147, label %originalBB145alteredBB

originalBBpart2147:                               ; preds = %originalBB145
  br label %776, !dbg !4455

677:                                              ; preds = %559
  %678 = load i32, i32* @x.77
  %679 = load i32, i32* @y.78
  %680 = sub i32 %678, 1
  %681 = mul i32 %678, %680
  %682 = urem i32 %681, 2
  %683 = icmp eq i32 %682, 0
  %684 = icmp slt i32 %679, 10
  %685 = or i1 %683, %684
  br i1 %685, label %originalBB149, label %originalBB149alteredBB

originalBB149:                                    ; preds = %677, %originalBB149alteredBB
  %686 = load i32, i32* %26, align 4, !dbg !4456
  %687 = call i32 @bkm_scale_by_power(i64* %22, i32 %686, i32 5), !dbg !4457
  store i32 %687, i32* %28, align 4, !dbg !4458
  %688 = load i32, i32* @x.77
  %689 = load i32, i32* @y.78
  %690 = sub i32 %688, 1
  %691 = mul i32 %688, %690
  %692 = urem i32 %691, 2
  %693 = icmp eq i32 %692, 0
  %694 = icmp slt i32 %689, 10
  %695 = or i1 %693, %694
  br i1 %695, label %originalBBpart2151, label %originalBB149alteredBB

originalBBpart2151:                               ; preds = %originalBB149
  br label %776, !dbg !4459

696:                                              ; preds = %559, %559
  %697 = load i32, i32* @x.77
  %698 = load i32, i32* @y.78
  %699 = sub i32 %697, 1
  %700 = mul i32 %697, %699
  %701 = urem i32 %700, 2
  %702 = icmp eq i32 %701, 0
  %703 = icmp slt i32 %698, 10
  %704 = or i1 %702, %703
  br i1 %704, label %originalBB153, label %originalBB153alteredBB

originalBB153:                                    ; preds = %696, %originalBB153alteredBB
  %705 = load i32, i32* %26, align 4, !dbg !4460
  %706 = call i32 @bkm_scale_by_power(i64* %22, i32 %705, i32 4), !dbg !4461
  store i32 %706, i32* %28, align 4, !dbg !4462
  %707 = load i32, i32* @x.77
  %708 = load i32, i32* @y.78
  %709 = sub i32 %707, 1
  %710 = mul i32 %707, %709
  %711 = urem i32 %710, 2
  %712 = icmp eq i32 %711, 0
  %713 = icmp slt i32 %708, 10
  %714 = or i1 %712, %713
  br i1 %714, label %originalBBpart2155, label %originalBB153alteredBB

originalBBpart2155:                               ; preds = %originalBB153
  br label %776, !dbg !4463

715:                                              ; preds = %559
  %716 = load i32, i32* @x.77
  %717 = load i32, i32* @y.78
  %718 = sub i32 %716, 1
  %719 = mul i32 %716, %718
  %720 = urem i32 %719, 2
  %721 = icmp eq i32 %720, 0
  %722 = icmp slt i32 %717, 10
  %723 = or i1 %721, %722
  br i1 %723, label %originalBB157, label %originalBB157alteredBB

originalBB157:                                    ; preds = %715, %originalBB157alteredBB
  %724 = call i32 @bkm_scale(i64* %22, i32 2), !dbg !4464
  store i32 %724, i32* %28, align 4, !dbg !4465
  %725 = load i32, i32* @x.77
  %726 = load i32, i32* @y.78
  %727 = sub i32 %725, 1
  %728 = mul i32 %725, %727
  %729 = urem i32 %728, 2
  %730 = icmp eq i32 %729, 0
  %731 = icmp slt i32 %726, 10
  %732 = or i1 %730, %731
  br i1 %732, label %originalBBpart2159, label %originalBB157alteredBB

originalBBpart2159:                               ; preds = %originalBB157
  br label %776, !dbg !4466

733:                                              ; preds = %559
  %734 = load i32, i32* @x.77
  %735 = load i32, i32* @y.78
  %736 = sub i32 %734, 1
  %737 = mul i32 %734, %736
  %738 = urem i32 %737, 2
  %739 = icmp eq i32 %738, 0
  %740 = icmp slt i32 %735, 10
  %741 = or i1 %739, %740
  br i1 %741, label %originalBB161, label %originalBB161alteredBB

originalBB161:                                    ; preds = %733, %originalBB161alteredBB
  %742 = load i32, i32* %26, align 4, !dbg !4467
  %743 = call i32 @bkm_scale_by_power(i64* %22, i32 %742, i32 8), !dbg !4468
  store i32 %743, i32* %28, align 4, !dbg !4469
  %744 = load i32, i32* @x.77
  %745 = load i32, i32* @y.78
  %746 = sub i32 %744, 1
  %747 = mul i32 %744, %746
  %748 = urem i32 %747, 2
  %749 = icmp eq i32 %748, 0
  %750 = icmp slt i32 %745, 10
  %751 = or i1 %749, %750
  br i1 %751, label %originalBBpart2163, label %originalBB161alteredBB

originalBBpart2163:                               ; preds = %originalBB161
  br label %776, !dbg !4470

752:                                              ; preds = %559
  %753 = load i32, i32* @x.77
  %754 = load i32, i32* @y.78
  %755 = sub i32 %753, 1
  %756 = mul i32 %753, %755
  %757 = urem i32 %756, 2
  %758 = icmp eq i32 %757, 0
  %759 = icmp slt i32 %754, 10
  %760 = or i1 %758, %759
  br i1 %760, label %originalBB165, label %originalBB165alteredBB

originalBB165:                                    ; preds = %752, %originalBB165alteredBB
  %761 = load i32, i32* %26, align 4, !dbg !4471
  %762 = call i32 @bkm_scale_by_power(i64* %22, i32 %761, i32 7), !dbg !4472
  store i32 %762, i32* %28, align 4, !dbg !4473
  %763 = load i32, i32* @x.77
  %764 = load i32, i32* @y.78
  %765 = sub i32 %763, 1
  %766 = mul i32 %763, %765
  %767 = urem i32 %766, 2
  %768 = icmp eq i32 %767, 0
  %769 = icmp slt i32 %764, 10
  %770 = or i1 %768, %769
  br i1 %770, label %originalBBpart2167, label %originalBB165alteredBB

originalBBpart2167:                               ; preds = %originalBB165
  br label %776, !dbg !4474

771:                                              ; preds = %559
  %772 = load i64, i64* %22, align 8, !dbg !4475
  %773 = load i64*, i64** %18, align 8, !dbg !4476
  store i64 %772, i64* %773, align 8, !dbg !4477
  %774 = load i32, i32* %23, align 4, !dbg !4478
  %775 = or i32 %774, 2, !dbg !4479
  store i32 %775, i32* %14, align 4, !dbg !4480
  br label %813, !dbg !4480

776:                                              ; preds = %originalBBpart2167, %originalBBpart2163, %originalBBpart2159, %originalBBpart2155, %originalBBpart2151, %originalBBpart2147, %originalBBpart2143, %originalBBpart2139, %617, %originalBBpart2135, %originalBBpart2131, %originalBBpart2127
  %777 = load i32, i32* %28, align 4, !dbg !4481
  %778 = load i32, i32* %23, align 4, !dbg !4482
  %779 = or i32 %778, %777, !dbg !4482
  store i32 %779, i32* %23, align 4, !dbg !4482
  %780 = load i32, i32* %27, align 4, !dbg !4483
  %781 = load i8**, i8*** %21, align 8, !dbg !4484
  %782 = load i8*, i8** %781, align 8, !dbg !4485
  %783 = sext i32 %780 to i64, !dbg !4485
  %784 = getelementptr inbounds i8, i8* %782, i64 %783, !dbg !4485
  store i8* %784, i8** %781, align 8, !dbg !4485
  %785 = load i8**, i8*** %21, align 8, !dbg !4486
  %786 = load i8*, i8** %785, align 8, !dbg !4488
  %787 = load i8, i8* %786, align 1, !dbg !4489
  %788 = icmp ne i8 %787, 0, !dbg !4489
  br i1 %788, label %789, label %808, !dbg !4490

789:                                              ; preds = %776
  %790 = load i32, i32* @x.77
  %791 = load i32, i32* @y.78
  %792 = sub i32 %790, 1
  %793 = mul i32 %790, %792
  %794 = urem i32 %793, 2
  %795 = icmp eq i32 %794, 0
  %796 = icmp slt i32 %791, 10
  %797 = or i1 %795, %796
  br i1 %797, label %originalBB169, label %originalBB169alteredBB

originalBB169:                                    ; preds = %789, %originalBB169alteredBB
  %798 = load i32, i32* %23, align 4, !dbg !4491
  %799 = or i32 %798, 2, !dbg !4491
  store i32 %799, i32* %23, align 4, !dbg !4491
  %800 = load i32, i32* @x.77
  %801 = load i32, i32* @y.78
  %802 = sub i32 %800, 1
  %803 = mul i32 %800, %802
  %804 = urem i32 %803, 2
  %805 = icmp eq i32 %804, 0
  %806 = icmp slt i32 %801, 10
  %807 = or i1 %805, %806
  br i1 %807, label %originalBBpart2173, label %originalBB169alteredBB

originalBBpart2173:                               ; preds = %originalBB169
  br label %808, !dbg !4492

808:                                              ; preds = %originalBBpart2173, %776
  br label %809, !dbg !4493

809:                                              ; preds = %808, %originalBBpart276
  %810 = load i64, i64* %22, align 8, !dbg !4494
  %811 = load i64*, i64** %18, align 8, !dbg !4495
  store i64 %810, i64* %811, align 8, !dbg !4496
  %812 = load i32, i32* %23, align 4, !dbg !4497
  store i32 %812, i32* %14, align 4, !dbg !4498
  br label %813, !dbg !4498

813:                                              ; preds = %809, %771, %originalBBpart295, %originalBBpart272, %originalBBpart256, %originalBBpart248, %originalBBpart236
  %814 = load i32, i32* @x.77
  %815 = load i32, i32* @y.78
  %816 = sub i32 %814, 1
  %817 = mul i32 %814, %816
  %818 = urem i32 %817, 2
  %819 = icmp eq i32 %818, 0
  %820 = icmp slt i32 %815, 10
  %821 = or i1 %819, %820
  br i1 %821, label %originalBB175, label %originalBB175alteredBB

originalBB175:                                    ; preds = %813, %originalBB175alteredBB
  %822 = load i32, i32* %14, align 4, !dbg !4499
  %823 = load i32, i32* @x.77
  %824 = load i32, i32* @y.78
  %825 = sub i32 %823, 1
  %826 = mul i32 %823, %825
  %827 = urem i32 %826, 2
  %828 = icmp eq i32 %827, 0
  %829 = icmp slt i32 %824, 10
  %830 = or i1 %828, %829
  br i1 %830, label %originalBBpart2177, label %originalBB175alteredBB

originalBBpart2177:                               ; preds = %originalBB175
  ret i32 %822, !dbg !4499

originalBBalteredBB:                              ; preds = %originalBB, %5
  %831 = alloca i32, align 4
  %832 = alloca i8*, align 8
  %833 = alloca i8**, align 8
  %834 = alloca i32, align 4
  %835 = alloca i64*, align 8
  %836 = alloca i8*, align 8
  %837 = alloca i8*, align 8
  %838 = alloca i8**, align 8
  %839 = alloca i64, align 8
  %840 = alloca i32, align 4
  %841 = alloca i8*, align 8
  %842 = alloca i8, align 1
  %843 = alloca i32, align 4
  %844 = alloca i32, align 4
  %845 = alloca i32, align 4
  store i8* %0, i8** %832, align 8
  call void @llvm.dbg.declare(metadata i8** %832, metadata !4500, metadata !DIExpression()), !dbg !4279
  store i8** %1, i8*** %833, align 8
  call void @llvm.dbg.declare(metadata i8*** %833, metadata !4503, metadata !DIExpression()), !dbg !4281
  store i32 %2, i32* %834, align 4
  call void @llvm.dbg.declare(metadata i32* %834, metadata !4504, metadata !DIExpression()), !dbg !4283
  store i64* %3, i64** %835, align 8
  call void @llvm.dbg.declare(metadata i64** %835, metadata !4505, metadata !DIExpression()), !dbg !4285
  store i8* %4, i8** %836, align 8
  call void @llvm.dbg.declare(metadata i8** %836, metadata !4506, metadata !DIExpression()), !dbg !4287
  call void @llvm.dbg.declare(metadata i8** %837, metadata !4507, metadata !DIExpression()), !dbg !4289
  call void @llvm.dbg.declare(metadata i8*** %838, metadata !4508, metadata !DIExpression()), !dbg !4291
  call void @llvm.dbg.declare(metadata i64* %839, metadata !4509, metadata !DIExpression()), !dbg !4293
  call void @llvm.dbg.declare(metadata i32* %840, metadata !4510, metadata !DIExpression()), !dbg !4295
  store i32 0, i32* %840, align 4, !dbg !4295
  %846 = load i32, i32* %834, align 4, !dbg !4296
  %847 = icmp sle i32 0, %846, !dbg !4296
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %39
  %848 = load i32, i32* %17, align 4, !dbg !4296
  %849 = icmp sle i32 %848, 36, !dbg !4296
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %58
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %75
  call void @__assert_fail(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.142, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.143, i64 0, i64 0), i32 84, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @__PRETTY_FUNCTION__.xstrtoul, i64 0, i64 0)) #12, !dbg !4296
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %97
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %120
  %850 = call i16** @__ctype_b_loc() #15, !dbg !4315
  %851 = load i16*, i16** %850, align 8, !dbg !4315
  %852 = load i8, i8* %25, align 1, !dbg !4315
  %853 = zext i8 %852 to i32, !dbg !4315
  %854 = sext i32 %853 to i64, !dbg !4315
  %855 = getelementptr inbounds i16, i16* %851, i64 %854, !dbg !4315
  %856 = load i16, i16* %855, align 2, !dbg !4315
  %857 = zext i16 %856 to i32, !dbg !4315
  %_ = sub i32 0, %857
  %gen = add i32 %_, 8192
  %_19 = shl i32 %857, 8192
  %_20 = shl i32 %857, 8192
  %_21 = sub i32 %857, 8192
  %gen22 = mul i32 %_21, 8192
  %_23 = sub i32 0, %857
  %gen24 = add i32 %_23, 8192
  %_25 = shl i32 %857, 8192
  %_26 = shl i32 %857, 8192
  %858 = and i32 %857, 8192, !dbg !4315
  %859 = icmp ne i32 %858, 0, !dbg !4314
  br label %originalBB18

originalBB30alteredBB:                            ; preds = %originalBB30, %147
  %860 = load i8*, i8** %24, align 8, !dbg !4316
  %861 = getelementptr inbounds i8, i8* %860, i32 1, !dbg !4316
  store i8* %861, i8** %24, align 8, !dbg !4316
  %862 = load i8, i8* %861, align 1, !dbg !4317
  store i8 %862, i8* %25, align 1, !dbg !4318
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %171
  store i32 4, i32* %14, align 4, !dbg !4325
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %197
  %863 = load i8*, i8** %19, align 8, !dbg !4337
  %864 = icmp ne i8* %863, null, !dbg !4337
  br label %originalBB38

originalBB42alteredBB:                            ; preds = %originalBB42, %230
  store i64 1, i64* %22, align 8, !dbg !4351
  br label %originalBB42

originalBB46alteredBB:                            ; preds = %originalBB46, %247
  store i32 4, i32* %14, align 4, !dbg !4353
  br label %originalBB46

originalBB50alteredBB:                            ; preds = %originalBB50, %264
  br label %originalBB50

originalBB54alteredBB:                            ; preds = %originalBB54, %289
  store i32 4, i32* %14, align 4, !dbg !4364
  br label %originalBB54

originalBB58alteredBB:                            ; preds = %originalBB58, %306
  store i32 1, i32* %23, align 4, !dbg !4365
  br label %originalBB58

originalBB62alteredBB:                            ; preds = %originalBB62, %323
  br label %originalBB62

originalBB66alteredBB:                            ; preds = %originalBB66, %340
  %865 = load i8*, i8** %19, align 8, !dbg !4367
  %866 = icmp ne i8* %865, null, !dbg !4367
  br label %originalBB66

originalBB70alteredBB:                            ; preds = %originalBB70, %359
  %867 = load i64, i64* %22, align 8, !dbg !4370
  %868 = load i64*, i64** %18, align 8, !dbg !4372
  store i64 %867, i64* %868, align 8, !dbg !4373
  %869 = load i32, i32* %23, align 4, !dbg !4374
  store i32 %869, i32* %14, align 4, !dbg !4375
  br label %originalBB70

originalBB74alteredBB:                            ; preds = %originalBB74, %379
  %870 = load i8**, i8*** %21, align 8, !dbg !4376
  %871 = load i8*, i8** %870, align 8, !dbg !4378
  %872 = load i8, i8* %871, align 1, !dbg !4379
  %873 = sext i8 %872 to i32, !dbg !4379
  %874 = icmp ne i32 %873, 0, !dbg !4380
  br label %originalBB74

originalBB78alteredBB:                            ; preds = %originalBB78, %401
  store i32 1024, i32* %26, align 4, !dbg !4384
  call void @llvm.dbg.declare(metadata !4, metadata !4511, metadata !DIExpression()), !dbg !4386
  store i32 1, i32* %27, align 4, !dbg !4386
  call void @llvm.dbg.declare(metadata !4, metadata !4516, metadata !DIExpression()), !dbg !4388
  %875 = load i8*, i8** %19, align 8, !dbg !4389
  %876 = load i8**, i8*** %21, align 8, !dbg !4391
  %877 = load i8*, i8** %876, align 8, !dbg !4392
  %878 = load i8, i8* %877, align 1, !dbg !4393
  %879 = sext i8 %878 to i32, !dbg !4393
  %880 = call i8* @strchr(i8* %875, i32 %879) #13, !dbg !4394
  %881 = icmp ne i8* %880, null, !dbg !4394
  br label %originalBB78

originalBB82alteredBB:                            ; preds = %originalBB82, %425
  %882 = load i64, i64* %22, align 8, !dbg !4396
  %883 = load i64*, i64** %18, align 8, !dbg !4398
  store i64 %882, i64* %883, align 8, !dbg !4399
  %884 = load i32, i32* %23, align 4, !dbg !4400
  %_83 = sub i32 0, %884
  %gen84 = add i32 %_83, 2
  %_85 = shl i32 %884, 2
  %_86 = sub i32 %884, 2
  %gen87 = mul i32 %_86, 2
  %_88 = sub i32 %884, 2
  %gen89 = mul i32 %_88, 2
  %_90 = sub i32 %884, 2
  %gen91 = mul i32 %_90, 2
  %_92 = sub i32 0, %884
  %gen93 = add i32 %_92, 2
  %885 = or i32 %884, 2, !dbg !4401
  store i32 %885, i32* %14, align 4, !dbg !4402
  br label %originalBB82

originalBB97alteredBB:                            ; preds = %originalBB97, %446
  %886 = load i8**, i8*** %21, align 8, !dbg !4403
  %887 = load i8*, i8** %886, align 8, !dbg !4404
  %888 = load i8, i8* %887, align 1, !dbg !4405
  %889 = sext i8 %888 to i32, !dbg !4405
  br label %originalBB97

originalBB101alteredBB:                           ; preds = %originalBB101, %478
  %890 = load i8**, i8*** %21, align 8, !dbg !4414
  %891 = getelementptr inbounds i8*, i8** %890, i64 0, !dbg !4414
  %892 = load i8*, i8** %891, align 8, !dbg !4414
  %893 = getelementptr inbounds i8, i8* %892, i64 2, !dbg !4414
  %894 = load i8, i8* %893, align 1, !dbg !4414
  %895 = sext i8 %894 to i32, !dbg !4414
  %896 = icmp eq i32 %895, 66, !dbg !4417
  br label %originalBB101

originalBB105alteredBB:                           ; preds = %originalBB105, %502
  %897 = load i32, i32* %27, align 4, !dbg !4419
  %_106 = shl i32 %897, 2
  %_107 = sub i32 %897, 2
  %gen108 = mul i32 %_107, 2
  %898 = add nsw i32 %897, 2, !dbg !4419
  store i32 %898, i32* %27, align 4, !dbg !4419
  br label %originalBB105

originalBB112alteredBB:                           ; preds = %originalBB112, %521
  br label %originalBB112

originalBB116alteredBB:                           ; preds = %originalBB116, %538
  store i32 1000, i32* %26, align 4, !dbg !4422
  %899 = load i32, i32* %27, align 4, !dbg !4423
  %_117 = shl i32 %899, 1
  %_118 = sub i32 0, %899
  %gen119 = add i32 %_118, 1
  %_120 = sub i32 0, %899
  %gen121 = add i32 %_120, 1
  %900 = add nsw i32 %899, 1, !dbg !4423
  store i32 %900, i32* %27, align 4, !dbg !4423
  br label %originalBB116

originalBB125alteredBB:                           ; preds = %originalBB125, %564
  %901 = call i32 @bkm_scale(i64* %22, i32 512), !dbg !4431
  store i32 %901, i32* %28, align 4, !dbg !4433
  br label %originalBB125

originalBB129alteredBB:                           ; preds = %originalBB129, %582
  %902 = call i32 @bkm_scale(i64* %22, i32 1024), !dbg !4435
  store i32 %902, i32* %28, align 4, !dbg !4436
  br label %originalBB129

originalBB133alteredBB:                           ; preds = %originalBB133, %600
  store i32 0, i32* %28, align 4, !dbg !4438
  br label %originalBB133

originalBB137alteredBB:                           ; preds = %originalBB137, %620
  %903 = load i32, i32* %26, align 4, !dbg !4444
  %904 = call i32 @bkm_scale_by_power(i64* %22, i32 %903, i32 3), !dbg !4445
  store i32 %904, i32* %28, align 4, !dbg !4446
  br label %originalBB137

originalBB141alteredBB:                           ; preds = %originalBB141, %639
  %905 = load i32, i32* %26, align 4, !dbg !4448
  %906 = call i32 @bkm_scale_by_power(i64* %22, i32 %905, i32 1), !dbg !4449
  store i32 %906, i32* %28, align 4, !dbg !4450
  br label %originalBB141

originalBB145alteredBB:                           ; preds = %originalBB145, %658
  %907 = load i32, i32* %26, align 4, !dbg !4452
  %908 = call i32 @bkm_scale_by_power(i64* %22, i32 %907, i32 2), !dbg !4453
  store i32 %908, i32* %28, align 4, !dbg !4454
  br label %originalBB145

originalBB149alteredBB:                           ; preds = %originalBB149, %677
  %909 = load i32, i32* %26, align 4, !dbg !4456
  %910 = call i32 @bkm_scale_by_power(i64* %22, i32 %909, i32 5), !dbg !4457
  store i32 %910, i32* %28, align 4, !dbg !4458
  br label %originalBB149

originalBB153alteredBB:                           ; preds = %originalBB153, %696
  %911 = load i32, i32* %26, align 4, !dbg !4460
  %912 = call i32 @bkm_scale_by_power(i64* %22, i32 %911, i32 4), !dbg !4461
  store i32 %912, i32* %28, align 4, !dbg !4462
  br label %originalBB153

originalBB157alteredBB:                           ; preds = %originalBB157, %715
  %913 = call i32 @bkm_scale(i64* %22, i32 2), !dbg !4464
  store i32 %913, i32* %28, align 4, !dbg !4465
  br label %originalBB157

originalBB161alteredBB:                           ; preds = %originalBB161, %733
  %914 = load i32, i32* %26, align 4, !dbg !4467
  %915 = call i32 @bkm_scale_by_power(i64* %22, i32 %914, i32 8), !dbg !4468
  store i32 %915, i32* %28, align 4, !dbg !4469
  br label %originalBB161

originalBB165alteredBB:                           ; preds = %originalBB165, %752
  %916 = load i32, i32* %26, align 4, !dbg !4471
  %917 = call i32 @bkm_scale_by_power(i64* %22, i32 %916, i32 7), !dbg !4472
  store i32 %917, i32* %28, align 4, !dbg !4473
  br label %originalBB165

originalBB169alteredBB:                           ; preds = %originalBB169, %789
  %918 = load i32, i32* %23, align 4, !dbg !4491
  %_170 = shl i32 %918, 2
  %_171 = shl i32 %918, 2
  %919 = or i32 %918, 2, !dbg !4491
  store i32 %919, i32* %23, align 4, !dbg !4491
  br label %originalBB169

originalBB175alteredBB:                           ; preds = %originalBB175, %813
  %920 = load i32, i32* %14, align 4, !dbg !4499
  br label %originalBB175
}

; Function Attrs: noreturn nounwind
declare dso_local void @__assert_fail(i8*, i8*, i32, i8*) #5

; Function Attrs: nounwind
declare dso_local i64 @strtoul(i8*, i8**, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @bkm_scale(i64*, i32) #4 !dbg !4517 {
  %3 = alloca i32, align 4
  %4 = alloca i64*, align 8
  %5 = alloca i32, align 4
  store i64* %0, i64** %4, align 8
  call void @llvm.dbg.declare(metadata i64** %4, metadata !4520, metadata !DIExpression()), !dbg !4521
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !4522, metadata !DIExpression()), !dbg !4523
  %6 = load i32, i32* %5, align 4, !dbg !4524
  %7 = sext i32 %6 to i64, !dbg !4524
  %8 = udiv i64 -1, %7, !dbg !4526
  %9 = load i64*, i64** %4, align 8, !dbg !4527
  %10 = load i64, i64* %9, align 8, !dbg !4528
  %11 = icmp ult i64 %8, %10, !dbg !4529
  br i1 %11, label %12, label %14, !dbg !4530

12:                                               ; preds = %2
  %13 = load i64*, i64** %4, align 8, !dbg !4531
  store i64 -1, i64* %13, align 8, !dbg !4533
  store i32 1, i32* %3, align 4, !dbg !4534
  br label %20, !dbg !4534

14:                                               ; preds = %2
  %15 = load i32, i32* %5, align 4, !dbg !4535
  %16 = sext i32 %15 to i64, !dbg !4535
  %17 = load i64*, i64** %4, align 8, !dbg !4536
  %18 = load i64, i64* %17, align 8, !dbg !4537
  %19 = mul i64 %18, %16, !dbg !4537
  store i64 %19, i64* %17, align 8, !dbg !4537
  store i32 0, i32* %3, align 4, !dbg !4538
  br label %20, !dbg !4538

20:                                               ; preds = %14, %12
  %21 = load i32, i32* @x.79
  %22 = load i32, i32* @y.80
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %20, %originalBBalteredBB
  %29 = load i32, i32* %3, align 4, !dbg !4539
  %30 = load i32, i32* @x.79
  %31 = load i32, i32* @y.80
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32 %29, !dbg !4539

originalBBalteredBB:                              ; preds = %originalBB, %20
  %38 = load i32, i32* %3, align 4, !dbg !4539
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @bkm_scale_by_power(i64*, i32, i32) #4 !dbg !4540 {
  %4 = alloca i64*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store i64* %0, i64** %4, align 8
  call void @llvm.dbg.declare(metadata i64** %4, metadata !4543, metadata !DIExpression()), !dbg !4544
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !4545, metadata !DIExpression()), !dbg !4546
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !4547, metadata !DIExpression()), !dbg !4548
  call void @llvm.dbg.declare(metadata i32* %7, metadata !4549, metadata !DIExpression()), !dbg !4550
  store i32 0, i32* %7, align 4, !dbg !4550
  br label %8, !dbg !4551

8:                                                ; preds = %28, %3
  %9 = load i32, i32* @x.81
  %10 = load i32, i32* @y.82
  %11 = sub i32 %9, 1
  %12 = mul i32 %9, %11
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = icmp slt i32 %10, 10
  %16 = or i1 %14, %15
  br i1 %16, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %8, %originalBBalteredBB
  %17 = load i32, i32* %6, align 4, !dbg !4552
  %18 = add nsw i32 %17, -1, !dbg !4552
  store i32 %18, i32* %6, align 4, !dbg !4552
  %19 = icmp ne i32 %17, 0, !dbg !4551
  %20 = load i32, i32* @x.81
  %21 = load i32, i32* @y.82
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %19, label %28, label %34, !dbg !4551

28:                                               ; preds = %originalBBpart2
  %29 = load i64*, i64** %4, align 8, !dbg !4553
  %30 = load i32, i32* %5, align 4, !dbg !4554
  %31 = call i32 @bkm_scale(i64* %29, i32 %30), !dbg !4555
  %32 = load i32, i32* %7, align 4, !dbg !4556
  %33 = or i32 %32, %31, !dbg !4556
  store i32 %33, i32* %7, align 4, !dbg !4556
  br label %8, !dbg !4551, !llvm.loop !4557

34:                                               ; preds = %originalBBpart2
  %35 = load i32, i32* %7, align 4, !dbg !4559
  ret i32 %35, !dbg !4560

originalBBalteredBB:                              ; preds = %originalBB, %8
  %36 = load i32, i32* %6, align 4, !dbg !4552
  %_ = sub i32 0, %36
  %gen = add i32 %_, -1
  %_1 = sub i32 0, %36
  %gen2 = add i32 %_1, -1
  %_3 = sub i32 0, %36
  %gen4 = add i32 %_3, -1
  %_5 = shl i32 %36, -1
  %37 = add nsw i32 %36, -1, !dbg !4552
  store i32 %37, i32* %6, align 4, !dbg !4552
  %38 = icmp ne i32 %36, 0, !dbg !4551
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @rpl_mbrtowc(i32*, i8*, i64, %struct.__mbstate_t*) #4 !dbg !4561 {
  %5 = alloca i64, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca %struct.__mbstate_t*, align 8
  %10 = alloca i64, align 8
  %11 = alloca i32, align 4
  %12 = alloca i8, align 1
  store i32* %0, i32** %6, align 8
  call void @llvm.dbg.declare(metadata i32** %6, metadata !4577, metadata !DIExpression()), !dbg !4578
  store i8* %1, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !4579, metadata !DIExpression()), !dbg !4580
  store i64 %2, i64* %8, align 8
  call void @llvm.dbg.declare(metadata i64* %8, metadata !4581, metadata !DIExpression()), !dbg !4582
  store %struct.__mbstate_t* %3, %struct.__mbstate_t** %9, align 8
  call void @llvm.dbg.declare(metadata %struct.__mbstate_t** %9, metadata !4583, metadata !DIExpression()), !dbg !4584
  call void @llvm.dbg.declare(metadata i64* %10, metadata !4585, metadata !DIExpression()), !dbg !4586
  call void @llvm.dbg.declare(metadata i32* %11, metadata !4587, metadata !DIExpression()), !dbg !4588
  %13 = load i32*, i32** %6, align 8, !dbg !4589
  %14 = icmp ne i32* %13, null, !dbg !4589
  br i1 %14, label %16, label %15, !dbg !4591

15:                                               ; preds = %4
  store i32* %11, i32** %6, align 8, !dbg !4592
  br label %16, !dbg !4593

16:                                               ; preds = %15, %4
  %17 = load i32, i32* @x.83
  %18 = load i32, i32* @y.84
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %16, %originalBBalteredBB
  %25 = load i32*, i32** %6, align 8, !dbg !4594
  %26 = load i8*, i8** %7, align 8, !dbg !4595
  %27 = load i64, i64* %8, align 8, !dbg !4596
  %28 = load %struct.__mbstate_t*, %struct.__mbstate_t** %9, align 8, !dbg !4597
  %29 = call i64 @mbrtowc(i32* %25, i8* %26, i64 %27, %struct.__mbstate_t* %28) #10, !dbg !4598
  store i64 %29, i64* %10, align 8, !dbg !4599
  %30 = load i64, i64* %10, align 8, !dbg !4600
  %31 = icmp ule i64 -2, %30, !dbg !4602
  %32 = load i32, i32* @x.83
  %33 = load i32, i32* @y.84
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %31, label %40, label %83, !dbg !4603

40:                                               ; preds = %originalBBpart2
  %41 = load i64, i64* %8, align 8, !dbg !4604
  %42 = icmp ne i64 %41, 0, !dbg !4605
  br i1 %42, label %43, label %83, !dbg !4606

43:                                               ; preds = %40
  %44 = load i32, i32* @x.83
  %45 = load i32, i32* @y.84
  %46 = sub i32 %44, 1
  %47 = mul i32 %44, %46
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %45, 10
  %51 = or i1 %49, %50
  br i1 %51, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %43, %originalBB1alteredBB
  %52 = call zeroext i1 @hard_locale(i32 0), !dbg !4607
  %53 = load i32, i32* @x.83
  %54 = load i32, i32* @y.84
  %55 = sub i32 %53, 1
  %56 = mul i32 %53, %55
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %54, 10
  %60 = or i1 %58, %59
  br i1 %60, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %52, label %83, label %61, !dbg !4608

61:                                               ; preds = %originalBBpart24
  call void @llvm.dbg.declare(metadata i8* %12, metadata !4609, metadata !DIExpression()), !dbg !4611
  %62 = load i32, i32* @x.83
  %63 = load i32, i32* @y.84
  %64 = sub i32 %62, 1
  %65 = mul i32 %62, %64
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %63, 10
  %69 = or i1 %67, %68
  br i1 %69, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %61, %originalBB6alteredBB
  %70 = load i8*, i8** %7, align 8, !dbg !4612
  %71 = load i8, i8* %70, align 1, !dbg !4613
  store i8 %71, i8* %12, align 1, !dbg !4611
  %72 = load i8, i8* %12, align 1, !dbg !4614
  %73 = zext i8 %72 to i32, !dbg !4614
  %74 = load i32*, i32** %6, align 8, !dbg !4615
  store i32 %73, i32* %74, align 4, !dbg !4616
  store i64 1, i64* %5, align 8, !dbg !4617
  %75 = load i32, i32* @x.83
  %76 = load i32, i32* @y.84
  %77 = sub i32 %75, 1
  %78 = mul i32 %75, %77
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %76, 10
  %82 = or i1 %80, %81
  br i1 %82, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %85, !dbg !4617

83:                                               ; preds = %originalBBpart24, %40, %originalBBpart2
  %84 = load i64, i64* %10, align 8, !dbg !4618
  store i64 %84, i64* %5, align 8, !dbg !4619
  br label %85, !dbg !4619

85:                                               ; preds = %83, %originalBBpart28
  %86 = load i32, i32* @x.83
  %87 = load i32, i32* @y.84
  %88 = sub i32 %86, 1
  %89 = mul i32 %86, %88
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %87, 10
  %93 = or i1 %91, %92
  br i1 %93, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %85, %originalBB10alteredBB
  %94 = load i64, i64* %5, align 8, !dbg !4620
  %95 = load i32, i32* @x.83
  %96 = load i32, i32* @y.84
  %97 = sub i32 %95, 1
  %98 = mul i32 %95, %97
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %96, 10
  %102 = or i1 %100, %101
  br i1 %102, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  ret i64 %94, !dbg !4620

originalBBalteredBB:                              ; preds = %originalBB, %16
  %103 = load i32*, i32** %6, align 8, !dbg !4594
  %104 = load i8*, i8** %7, align 8, !dbg !4595
  %105 = load i64, i64* %8, align 8, !dbg !4596
  %106 = load %struct.__mbstate_t*, %struct.__mbstate_t** %9, align 8, !dbg !4597
  %107 = call i64 @mbrtowc(i32* %103, i8* %104, i64 %105, %struct.__mbstate_t* %106) #10, !dbg !4598
  store i64 %107, i64* %10, align 8, !dbg !4599
  %108 = load i64, i64* %10, align 8, !dbg !4600
  %109 = icmp ule i64 -2, %108, !dbg !4602
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %43
  %110 = call zeroext i1 @hard_locale(i32 0), !dbg !4607
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %61
  %111 = load i8*, i8** %7, align 8, !dbg !4612
  %112 = load i8, i8* %111, align 1, !dbg !4613
  store i8 %112, i8* %12, align 1, !dbg !4611
  %113 = load i8, i8* %12, align 1, !dbg !4614
  %114 = zext i8 %113 to i32, !dbg !4614
  %115 = load i32*, i32** %6, align 8, !dbg !4615
  store i32 %114, i32* %115, align 4, !dbg !4616
  store i64 1, i64* %5, align 8, !dbg !4617
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %85
  %116 = load i64, i64* %5, align 8, !dbg !4620
  br label %originalBB10
}

; Function Attrs: nounwind
declare dso_local i64 @mbrtowc(i32*, i8*, i64, %struct.__mbstate_t*) #2

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @c_strcasecmp(i8*, i8*) #11 !dbg !4621 {
  %3 = load i32, i32* @x.85
  %4 = load i32, i32* @y.86
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca i32, align 4
  %12 = alloca i8*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i8*, align 8
  %16 = alloca i8, align 1
  %17 = alloca i8, align 1
  store i8* %0, i8** %12, align 8
  call void @llvm.dbg.declare(metadata i8** %12, metadata !4625, metadata !DIExpression()), !dbg !4626
  store i8* %1, i8** %13, align 8
  call void @llvm.dbg.declare(metadata i8** %13, metadata !4627, metadata !DIExpression()), !dbg !4628
  call void @llvm.dbg.declare(metadata i8** %14, metadata !4629, metadata !DIExpression()), !dbg !4630
  %18 = load i8*, i8** %12, align 8, !dbg !4631
  store i8* %18, i8** %14, align 8, !dbg !4630
  call void @llvm.dbg.declare(metadata i8** %15, metadata !4632, metadata !DIExpression()), !dbg !4633
  %19 = load i8*, i8** %13, align 8, !dbg !4634
  store i8* %19, i8** %15, align 8, !dbg !4633
  call void @llvm.dbg.declare(metadata i8* %16, metadata !4635, metadata !DIExpression()), !dbg !4636
  call void @llvm.dbg.declare(metadata i8* %17, metadata !4637, metadata !DIExpression()), !dbg !4638
  %20 = load i8*, i8** %14, align 8, !dbg !4639
  %21 = load i8*, i8** %15, align 8, !dbg !4641
  %22 = icmp eq i8* %20, %21, !dbg !4642
  %23 = load i32, i32* @x.85
  %24 = load i32, i32* @y.86
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %22, label %31, label %48, !dbg !4643

31:                                               ; preds = %originalBBpart2
  %32 = load i32, i32* @x.85
  %33 = load i32, i32* @y.86
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %31, %originalBB1alteredBB
  store i32 0, i32* %11, align 4, !dbg !4644
  %40 = load i32, i32* @x.85
  %41 = load i32, i32* @y.86
  %42 = sub i32 %40, 1
  %43 = mul i32 %40, %42
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %45, %46
  br i1 %47, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %129, !dbg !4644

48:                                               ; preds = %originalBBpart2
  br label %49, !dbg !4645

49:                                               ; preds = %101, %48
  %50 = load i32, i32* @x.85
  %51 = load i32, i32* @y.86
  %52 = sub i32 %50, 1
  %53 = mul i32 %50, %52
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %51, 10
  %57 = or i1 %55, %56
  br i1 %57, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %49, %originalBB6alteredBB
  %58 = load i8*, i8** %14, align 8, !dbg !4646
  %59 = load i8, i8* %58, align 1, !dbg !4648
  %60 = zext i8 %59 to i32, !dbg !4648
  %61 = call i32 @c_tolower(i32 %60), !dbg !4649
  %62 = trunc i32 %61 to i8, !dbg !4649
  store i8 %62, i8* %16, align 1, !dbg !4650
  %63 = load i8*, i8** %15, align 8, !dbg !4651
  %64 = load i8, i8* %63, align 1, !dbg !4652
  %65 = zext i8 %64 to i32, !dbg !4652
  %66 = call i32 @c_tolower(i32 %65), !dbg !4653
  %67 = trunc i32 %66 to i8, !dbg !4653
  store i8 %67, i8* %17, align 1, !dbg !4654
  %68 = load i8, i8* %16, align 1, !dbg !4655
  %69 = zext i8 %68 to i32, !dbg !4655
  %70 = icmp eq i32 %69, 0, !dbg !4657
  %71 = load i32, i32* @x.85
  %72 = load i32, i32* @y.86
  %73 = sub i32 %71, 1
  %74 = mul i32 %71, %73
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %72, 10
  %78 = or i1 %76, %77
  br i1 %78, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %70, label %79, label %80, !dbg !4658

79:                                               ; preds = %originalBBpart28
  br label %107, !dbg !4659

80:                                               ; preds = %originalBBpart28
  %81 = load i32, i32* @x.85
  %82 = load i32, i32* @y.86
  %83 = sub i32 %81, 1
  %84 = mul i32 %81, %83
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %82, 10
  %88 = or i1 %86, %87
  br i1 %88, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %80, %originalBB10alteredBB
  %89 = load i8*, i8** %14, align 8, !dbg !4660
  %90 = getelementptr inbounds i8, i8* %89, i32 1, !dbg !4660
  store i8* %90, i8** %14, align 8, !dbg !4660
  %91 = load i8*, i8** %15, align 8, !dbg !4661
  %92 = getelementptr inbounds i8, i8* %91, i32 1, !dbg !4661
  store i8* %92, i8** %15, align 8, !dbg !4661
  %93 = load i32, i32* @x.85
  %94 = load i32, i32* @y.86
  %95 = sub i32 %93, 1
  %96 = mul i32 %93, %95
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %94, 10
  %100 = or i1 %98, %99
  br i1 %100, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %101, !dbg !4662

101:                                              ; preds = %originalBBpart212
  %102 = load i8, i8* %16, align 1, !dbg !4663
  %103 = zext i8 %102 to i32, !dbg !4663
  %104 = load i8, i8* %17, align 1, !dbg !4664
  %105 = zext i8 %104 to i32, !dbg !4664
  %106 = icmp eq i32 %103, %105, !dbg !4665
  br i1 %106, label %49, label %107, !dbg !4662, !llvm.loop !4666

107:                                              ; preds = %101, %79
  %108 = load i32, i32* @x.85
  %109 = load i32, i32* @y.86
  %110 = sub i32 %108, 1
  %111 = mul i32 %108, %110
  %112 = urem i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %109, 10
  %115 = or i1 %113, %114
  br i1 %115, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %107, %originalBB14alteredBB
  %116 = load i8, i8* %16, align 1, !dbg !4668
  %117 = zext i8 %116 to i32, !dbg !4668
  %118 = load i8, i8* %17, align 1, !dbg !4670
  %119 = zext i8 %118 to i32, !dbg !4670
  %120 = sub nsw i32 %117, %119, !dbg !4671
  store i32 %120, i32* %11, align 4, !dbg !4672
  %121 = load i32, i32* @x.85
  %122 = load i32, i32* @y.86
  %123 = sub i32 %121, 1
  %124 = mul i32 %121, %123
  %125 = urem i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %122, 10
  %128 = or i1 %126, %127
  br i1 %128, label %originalBBpart220, label %originalBB14alteredBB

originalBBpart220:                                ; preds = %originalBB14
  br label %129, !dbg !4672

129:                                              ; preds = %originalBBpart220, %originalBBpart24
  %130 = load i32, i32* %11, align 4, !dbg !4673
  ret i32 %130, !dbg !4673

originalBBalteredBB:                              ; preds = %originalBB, %2
  %131 = alloca i32, align 4
  %132 = alloca i8*, align 8
  %133 = alloca i8*, align 8
  %134 = alloca i8*, align 8
  %135 = alloca i8*, align 8
  %136 = alloca i8, align 1
  %137 = alloca i8, align 1
  store i8* %0, i8** %132, align 8
  call void @llvm.dbg.declare(metadata i8** %132, metadata !4674, metadata !DIExpression()), !dbg !4626
  store i8* %1, i8** %133, align 8
  call void @llvm.dbg.declare(metadata i8** %133, metadata !4677, metadata !DIExpression()), !dbg !4628
  call void @llvm.dbg.declare(metadata i8** %134, metadata !4678, metadata !DIExpression()), !dbg !4630
  %138 = load i8*, i8** %132, align 8, !dbg !4631
  store i8* %138, i8** %134, align 8, !dbg !4630
  call void @llvm.dbg.declare(metadata i8** %135, metadata !4679, metadata !DIExpression()), !dbg !4633
  %139 = load i8*, i8** %133, align 8, !dbg !4634
  store i8* %139, i8** %135, align 8, !dbg !4633
  call void @llvm.dbg.declare(metadata i8* %136, metadata !4680, metadata !DIExpression()), !dbg !4636
  call void @llvm.dbg.declare(metadata i8* %137, metadata !4681, metadata !DIExpression()), !dbg !4638
  %140 = load i8*, i8** %134, align 8, !dbg !4639
  %141 = load i8*, i8** %135, align 8, !dbg !4641
  %142 = icmp eq i8* %140, %141, !dbg !4642
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %31
  store i32 0, i32* %11, align 4, !dbg !4644
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %49
  %143 = load i8*, i8** %14, align 8, !dbg !4646
  %144 = load i8, i8* %143, align 1, !dbg !4648
  %145 = zext i8 %144 to i32, !dbg !4648
  %146 = call i32 @c_tolower(i32 %145), !dbg !4649
  %147 = trunc i32 %146 to i8, !dbg !4649
  store i8 %147, i8* %16, align 1, !dbg !4650
  %148 = load i8*, i8** %15, align 8, !dbg !4651
  %149 = load i8, i8* %148, align 1, !dbg !4652
  %150 = zext i8 %149 to i32, !dbg !4652
  %151 = call i32 @c_tolower(i32 %150), !dbg !4653
  %152 = trunc i32 %151 to i8, !dbg !4653
  store i8 %152, i8* %17, align 1, !dbg !4654
  %153 = load i8, i8* %16, align 1, !dbg !4655
  %154 = zext i8 %153 to i32, !dbg !4655
  %155 = icmp eq i32 %154, 0, !dbg !4657
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %80
  %156 = load i8*, i8** %14, align 8, !dbg !4660
  %157 = getelementptr inbounds i8, i8* %156, i32 1, !dbg !4660
  store i8* %157, i8** %14, align 8, !dbg !4660
  %158 = load i8*, i8** %15, align 8, !dbg !4661
  %159 = getelementptr inbounds i8, i8* %158, i32 1, !dbg !4661
  store i8* %159, i8** %15, align 8, !dbg !4661
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %107
  %160 = load i8, i8* %16, align 1, !dbg !4668
  %161 = zext i8 %160 to i32, !dbg !4668
  %162 = load i8, i8* %17, align 1, !dbg !4670
  %163 = zext i8 %162 to i32, !dbg !4670
  %_ = sub i32 0, %161
  %gen = add i32 %_, %163
  %_15 = sub i32 %161, %163
  %gen16 = mul i32 %_15, %163
  %_17 = sub i32 0, %161
  %gen18 = add i32 %_17, %163
  %164 = sub nsw i32 %161, %163, !dbg !4671
  store i32 %164, i32* %11, align 4, !dbg !4672
  br label %originalBB14
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @close_stream(%struct._IO_FILE*) #4 !dbg !4682 {
  %2 = load i32, i32* @x.87
  %3 = load i32, i32* @y.88
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i32, align 4
  %11 = alloca %struct._IO_FILE*, align 8
  %12 = alloca i8, align 1
  %13 = alloca i8, align 1
  %14 = alloca i8, align 1
  store %struct._IO_FILE* %0, %struct._IO_FILE** %11, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %11, metadata !4720, metadata !DIExpression()), !dbg !4721
  call void @llvm.dbg.declare(metadata i8* %12, metadata !4722, metadata !DIExpression()), !dbg !4724
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !4725
  %16 = call i64 @__fpending(%struct._IO_FILE* %15) #10, !dbg !4726
  %17 = icmp ne i64 %16, 0, !dbg !4727
  %18 = zext i1 %17 to i8, !dbg !4724
  store i8 %18, i8* %12, align 1, !dbg !4724
  call void @llvm.dbg.declare(metadata i8* %13, metadata !4728, metadata !DIExpression()), !dbg !4729
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !4730
  %20 = call i32 @ferror_unlocked(%struct._IO_FILE* %19) #10, !dbg !4730
  %21 = icmp ne i32 %20, 0, !dbg !4731
  %22 = zext i1 %21 to i8, !dbg !4729
  store i8 %22, i8* %13, align 1, !dbg !4729
  call void @llvm.dbg.declare(metadata i8* %14, metadata !4732, metadata !DIExpression()), !dbg !4733
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !4734
  %24 = call i32 @rpl_fclose(%struct._IO_FILE* %23), !dbg !4735
  %25 = icmp ne i32 %24, 0, !dbg !4736
  %26 = zext i1 %25 to i8, !dbg !4733
  store i8 %26, i8* %14, align 1, !dbg !4733
  %27 = load i8, i8* %13, align 1, !dbg !4737
  %28 = trunc i8 %27 to i1, !dbg !4737
  %29 = load i32, i32* @x.87
  %30 = load i32, i32* @y.88
  %31 = sub i32 %29, 1
  %32 = mul i32 %29, %31
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %34, %35
  br i1 %36, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %28, label %79, label %37, !dbg !4739

37:                                               ; preds = %originalBBpart2
  %38 = load i32, i32* @x.87
  %39 = load i32, i32* @y.88
  %40 = sub i32 %38, 1
  %41 = mul i32 %38, %40
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %43, %44
  br i1 %45, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %37, %originalBB1alteredBB
  %46 = load i8, i8* %14, align 1, !dbg !4740
  %47 = trunc i8 %46 to i1, !dbg !4740
  %48 = load i32, i32* @x.87
  %49 = load i32, i32* @y.88
  %50 = sub i32 %48, 1
  %51 = mul i32 %48, %50
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %53, %54
  br i1 %55, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %47, label %56, label %117, !dbg !4741

56:                                               ; preds = %originalBBpart24
  %57 = load i32, i32* @x.87
  %58 = load i32, i32* @y.88
  %59 = sub i32 %57, 1
  %60 = mul i32 %57, %59
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %58, 10
  %64 = or i1 %62, %63
  br i1 %64, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %56, %originalBB6alteredBB
  %65 = load i8, i8* %12, align 1, !dbg !4742
  %66 = trunc i8 %65 to i1, !dbg !4742
  %67 = load i32, i32* @x.87
  %68 = load i32, i32* @y.88
  %69 = sub i32 %67, 1
  %70 = mul i32 %67, %69
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %68, 10
  %74 = or i1 %72, %73
  br i1 %74, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %66, label %79, label %75, !dbg !4743

75:                                               ; preds = %originalBBpart28
  %76 = call i32* @__errno_location() #15, !dbg !4744
  %77 = load i32, i32* %76, align 4, !dbg !4744
  %78 = icmp ne i32 %77, 9, !dbg !4745
  br i1 %78, label %79, label %117, !dbg !4746

79:                                               ; preds = %75, %originalBBpart28, %originalBBpart2
  %80 = load i8, i8* %14, align 1, !dbg !4747
  %81 = trunc i8 %80 to i1, !dbg !4747
  br i1 %81, label %100, label %82, !dbg !4750

82:                                               ; preds = %79
  %83 = load i32, i32* @x.87
  %84 = load i32, i32* @y.88
  %85 = sub i32 %83, 1
  %86 = mul i32 %83, %85
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %84, 10
  %90 = or i1 %88, %89
  br i1 %90, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %82, %originalBB10alteredBB
  %91 = call i32* @__errno_location() #15, !dbg !4751
  store i32 0, i32* %91, align 4, !dbg !4752
  %92 = load i32, i32* @x.87
  %93 = load i32, i32* @y.88
  %94 = sub i32 %92, 1
  %95 = mul i32 %92, %94
  %96 = urem i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %93, 10
  %99 = or i1 %97, %98
  br i1 %99, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %100, !dbg !4751

100:                                              ; preds = %originalBBpart212, %79
  %101 = load i32, i32* @x.87
  %102 = load i32, i32* @y.88
  %103 = sub i32 %101, 1
  %104 = mul i32 %101, %103
  %105 = urem i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %102, 10
  %108 = or i1 %106, %107
  br i1 %108, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %100, %originalBB14alteredBB
  store i32 -1, i32* %10, align 4, !dbg !4753
  %109 = load i32, i32* @x.87
  %110 = load i32, i32* @y.88
  %111 = sub i32 %109, 1
  %112 = mul i32 %109, %111
  %113 = urem i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = icmp slt i32 %110, 10
  %116 = or i1 %114, %115
  br i1 %116, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %134, !dbg !4753

117:                                              ; preds = %75, %originalBBpart24
  %118 = load i32, i32* @x.87
  %119 = load i32, i32* @y.88
  %120 = sub i32 %118, 1
  %121 = mul i32 %118, %120
  %122 = urem i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = icmp slt i32 %119, 10
  %125 = or i1 %123, %124
  br i1 %125, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %117, %originalBB18alteredBB
  store i32 0, i32* %10, align 4, !dbg !4754
  %126 = load i32, i32* @x.87
  %127 = load i32, i32* @y.88
  %128 = sub i32 %126, 1
  %129 = mul i32 %126, %128
  %130 = urem i32 %129, 2
  %131 = icmp eq i32 %130, 0
  %132 = icmp slt i32 %127, 10
  %133 = or i1 %131, %132
  br i1 %133, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %134, !dbg !4754

134:                                              ; preds = %originalBBpart220, %originalBBpart216
  %135 = load i32, i32* %10, align 4, !dbg !4755
  ret i32 %135, !dbg !4755

originalBBalteredBB:                              ; preds = %originalBB, %1
  %136 = alloca i32, align 4
  %137 = alloca %struct._IO_FILE*, align 8
  %138 = alloca i8, align 1
  %139 = alloca i8, align 1
  %140 = alloca i8, align 1
  store %struct._IO_FILE* %0, %struct._IO_FILE** %137, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %137, metadata !4756, metadata !DIExpression()), !dbg !4721
  call void @llvm.dbg.declare(metadata i8* %138, metadata !4795, metadata !DIExpression()), !dbg !4724
  %141 = load %struct._IO_FILE*, %struct._IO_FILE** %137, align 8, !dbg !4725
  %142 = call i64 @__fpending(%struct._IO_FILE* %141) #10, !dbg !4726
  %143 = icmp ne i64 %142, 0, !dbg !4727
  %144 = zext i1 %143 to i8, !dbg !4724
  store i8 %144, i8* %138, align 1, !dbg !4724
  call void @llvm.dbg.declare(metadata i8* %139, metadata !4796, metadata !DIExpression()), !dbg !4729
  %145 = load %struct._IO_FILE*, %struct._IO_FILE** %137, align 8, !dbg !4730
  %146 = call i32 @ferror_unlocked(%struct._IO_FILE* %145) #10, !dbg !4730
  %147 = icmp ne i32 %146, 0, !dbg !4731
  %148 = zext i1 %147 to i8, !dbg !4729
  store i8 %148, i8* %139, align 1, !dbg !4729
  call void @llvm.dbg.declare(metadata i8* %140, metadata !4797, metadata !DIExpression()), !dbg !4733
  %149 = load %struct._IO_FILE*, %struct._IO_FILE** %137, align 8, !dbg !4734
  %150 = call i32 @rpl_fclose(%struct._IO_FILE* %149), !dbg !4735
  %151 = icmp ne i32 %150, 0, !dbg !4736
  %152 = zext i1 %151 to i8, !dbg !4733
  store i8 %152, i8* %140, align 1, !dbg !4733
  %153 = load i8, i8* %139, align 1, !dbg !4737
  %154 = trunc i8 %153 to i1, !dbg !4737
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %37
  %155 = load i8, i8* %14, align 1, !dbg !4740
  %156 = trunc i8 %155 to i1, !dbg !4740
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %56
  %157 = load i8, i8* %12, align 1, !dbg !4742
  %158 = trunc i8 %157 to i1, !dbg !4742
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %82
  %159 = call i32* @__errno_location() #15, !dbg !4751
  store i32 0, i32* %159, align 4, !dbg !4752
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %100
  store i32 -1, i32* %10, align 4, !dbg !4753
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %117
  store i32 0, i32* %10, align 4, !dbg !4754
  br label %originalBB18
}

; Function Attrs: nounwind
declare dso_local i64 @__fpending(%struct._IO_FILE*) #2

; Function Attrs: nounwind
declare dso_local i32 @ferror_unlocked(%struct._IO_FILE*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @hard_locale(i32) #4 !dbg !4798 {
  %2 = alloca i1, align 1
  %3 = alloca i32, align 4
  %4 = alloca [257 x i8], align 16
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !4802, metadata !DIExpression()), !dbg !4803
  call void @llvm.dbg.declare(metadata [257 x i8]* %4, metadata !4804, metadata !DIExpression()), !dbg !4808
  %5 = load i32, i32* %3, align 4, !dbg !4809
  %6 = getelementptr inbounds [257 x i8], [257 x i8]* %4, i64 0, i64 0, !dbg !4811
  %7 = call i32 @setlocale_null_r(i32 %5, i8* %6, i64 257), !dbg !4812
  %8 = icmp ne i32 %7, 0, !dbg !4812
  br i1 %8, label %9, label %26, !dbg !4813

9:                                                ; preds = %1
  %10 = load i32, i32* @x.89
  %11 = load i32, i32* @y.90
  %12 = sub i32 %10, 1
  %13 = mul i32 %10, %12
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  %16 = icmp slt i32 %11, 10
  %17 = or i1 %15, %16
  br i1 %17, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %9, %originalBBalteredBB
  store i1 false, i1* %2, align 1, !dbg !4814
  %18 = load i32, i32* @x.89
  %19 = load i32, i32* @y.90
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %53, !dbg !4814

26:                                               ; preds = %1
  %27 = getelementptr inbounds [257 x i8], [257 x i8]* %4, i64 0, i64 0, !dbg !4815
  %28 = call i32 @strcmp(i8* %27, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.152, i64 0, i64 0)) #13, !dbg !4816
  %29 = icmp eq i32 %28, 0, !dbg !4817
  br i1 %29, label %34, label %30, !dbg !4818

30:                                               ; preds = %26
  %31 = getelementptr inbounds [257 x i8], [257 x i8]* %4, i64 0, i64 0, !dbg !4819
  %32 = call i32 @strcmp(i8* %31, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.153, i64 0, i64 0)) #13, !dbg !4820
  %33 = icmp eq i32 %32, 0, !dbg !4821
  br label %34, !dbg !4818

34:                                               ; preds = %30, %26
  %35 = phi i1 [ true, %26 ], [ %33, %30 ]
  %36 = load i32, i32* @x.89
  %37 = load i32, i32* @y.90
  %38 = sub i32 %36, 1
  %39 = mul i32 %36, %38
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %37, 10
  %43 = or i1 %41, %42
  br i1 %43, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %34, %originalBB1alteredBB
  %44 = xor i1 %35, true, !dbg !4822
  store i1 %44, i1* %2, align 1, !dbg !4823
  %45 = load i32, i32* @x.89
  %46 = load i32, i32* @y.90
  %47 = sub i32 %45, 1
  %48 = mul i32 %45, %47
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %50, %51
  br i1 %52, label %originalBBpart214, label %originalBB1alteredBB

originalBBpart214:                                ; preds = %originalBB1
  br label %53, !dbg !4823

53:                                               ; preds = %originalBBpart214, %originalBBpart2
  %54 = load i32, i32* @x.89
  %55 = load i32, i32* @y.90
  %56 = sub i32 %54, 1
  %57 = mul i32 %54, %56
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %55, 10
  %61 = or i1 %59, %60
  br i1 %61, label %originalBB16, label %originalBB16alteredBB

originalBB16:                                     ; preds = %53, %originalBB16alteredBB
  %62 = load i1, i1* %2, align 1, !dbg !4824
  %63 = load i32, i32* @x.89
  %64 = load i32, i32* @y.90
  %65 = sub i32 %63, 1
  %66 = mul i32 %63, %65
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %64, 10
  %70 = or i1 %68, %69
  br i1 %70, label %originalBBpart218, label %originalBB16alteredBB

originalBBpart218:                                ; preds = %originalBB16
  ret i1 %62, !dbg !4824

originalBBalteredBB:                              ; preds = %originalBB, %9
  store i1 false, i1* %2, align 1, !dbg !4814
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %34
  %_ = shl i1 %35, true
  %_2 = shl i1 %35, true
  %_3 = sub i1 false, %35
  %gen = add i1 %_3, true
  %_4 = sub i1 %35, true
  %gen5 = mul i1 %_4, true
  %_6 = sub i1 false, %35
  %gen7 = add i1 %_6, true
  %_8 = sub i1 %35, true
  %gen9 = mul i1 %_8, true
  %_10 = shl i1 %35, true
  %_11 = sub i1 %35, true
  %gen12 = mul i1 %_11, true
  %71 = xor i1 %35, true, !dbg !4822
  store i1 %71, i1* %2, align 1, !dbg !4823
  br label %originalBB1

originalBB16alteredBB:                            ; preds = %originalBB16, %53
  %72 = load i1, i1* %2, align 1, !dbg !4824
  br label %originalBB16
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @locale_charset() #4 !dbg !4825 {
  %1 = load i32, i32* @x.91
  %2 = load i32, i32* @y.92
  %3 = sub i32 %1, 1
  %4 = mul i32 %1, %3
  %5 = urem i32 %4, 2
  %6 = icmp eq i32 %5, 0
  %7 = icmp slt i32 %2, 10
  %8 = or i1 %6, %7
  br i1 %8, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %0, %originalBBalteredBB
  %9 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %9, metadata !4829, metadata !DIExpression()), !dbg !4830
  %10 = call i8* @nl_langinfo(i32 14) #10, !dbg !4831
  store i8* %10, i8** %9, align 8, !dbg !4832
  %11 = load i8*, i8** %9, align 8, !dbg !4833
  %12 = icmp eq i8* %11, null, !dbg !4835
  %13 = load i32, i32* @x.91
  %14 = load i32, i32* @y.92
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %12, label %21, label %38, !dbg !4836

21:                                               ; preds = %originalBBpart2
  %22 = load i32, i32* @x.91
  %23 = load i32, i32* @y.92
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %21, %originalBB1alteredBB
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.156, i64 0, i64 0), i8** %9, align 8, !dbg !4837
  %30 = load i32, i32* @x.91
  %31 = load i32, i32* @y.92
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %38, !dbg !4838

38:                                               ; preds = %originalBBpart24, %originalBBpart2
  %39 = load i32, i32* @x.91
  %40 = load i32, i32* @y.92
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %38, %originalBB6alteredBB
  %47 = load i8*, i8** %9, align 8, !dbg !4839
  %48 = getelementptr inbounds i8, i8* %47, i64 0, !dbg !4839
  %49 = load i8, i8* %48, align 1, !dbg !4839
  %50 = sext i8 %49 to i32, !dbg !4839
  %51 = icmp eq i32 %50, 0, !dbg !4843
  %52 = load i32, i32* @x.91
  %53 = load i32, i32* @y.92
  %54 = sub i32 %52, 1
  %55 = mul i32 %52, %54
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %53, 10
  %59 = or i1 %57, %58
  br i1 %59, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %51, label %60, label %61, !dbg !4844

60:                                               ; preds = %originalBBpart28
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.157, i64 0, i64 0), i8** %9, align 8, !dbg !4845
  br label %61, !dbg !4846

61:                                               ; preds = %60, %originalBBpart28
  %62 = load i32, i32* @x.91
  %63 = load i32, i32* @y.92
  %64 = sub i32 %62, 1
  %65 = mul i32 %62, %64
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %63, 10
  %69 = or i1 %67, %68
  br i1 %69, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %61, %originalBB10alteredBB
  %70 = load i8*, i8** %9, align 8, !dbg !4847
  %71 = load i32, i32* @x.91
  %72 = load i32, i32* @y.92
  %73 = sub i32 %71, 1
  %74 = mul i32 %71, %73
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %72, 10
  %78 = or i1 %76, %77
  br i1 %78, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  ret i8* %70, !dbg !4848

originalBBalteredBB:                              ; preds = %originalBB, %0
  %79 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %79, metadata !4849, metadata !DIExpression()), !dbg !4830
  %80 = call i8* @nl_langinfo(i32 14) #10, !dbg !4831
  store i8* %80, i8** %79, align 8, !dbg !4832
  %81 = load i8*, i8** %79, align 8, !dbg !4833
  %82 = icmp eq i8* %81, null, !dbg !4835
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %21
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.156, i64 0, i64 0), i8** %9, align 8, !dbg !4837
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %38
  %83 = load i8*, i8** %9, align 8, !dbg !4839
  %84 = getelementptr inbounds i8, i8* %83, i64 0, !dbg !4839
  %85 = load i8, i8* %84, align 1, !dbg !4839
  %86 = sext i8 %85 to i32, !dbg !4839
  %87 = icmp eq i32 %86, 0, !dbg !4843
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %61
  %88 = load i8*, i8** %9, align 8, !dbg !4847
  br label %originalBB10
}

; Function Attrs: nounwind
declare dso_local i8* @nl_langinfo(i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @mgetgroups(i8*, i32, i32**) #4 !dbg !4852 {
  %4 = load i32, i32* @x.93
  %5 = load i32, i32* @y.94
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca i32, align 4
  %13 = alloca i8*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i32**, align 8
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32*, align 8
  %19 = alloca i32*, align 8
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32*, align 8
  %25 = alloca i32*, align 8
  store i8* %0, i8** %13, align 8
  call void @llvm.dbg.declare(metadata i8** %13, metadata !4854, metadata !DIExpression()), !dbg !4855
  store i32 %1, i32* %14, align 4
  call void @llvm.dbg.declare(metadata i32* %14, metadata !4856, metadata !DIExpression()), !dbg !4857
  store i32** %2, i32*** %15, align 8
  call void @llvm.dbg.declare(metadata i32*** %15, metadata !4858, metadata !DIExpression()), !dbg !4859
  call void @llvm.dbg.declare(metadata i32* %16, metadata !4860, metadata !DIExpression()), !dbg !4861
  call void @llvm.dbg.declare(metadata i32* %17, metadata !4862, metadata !DIExpression()), !dbg !4863
  call void @llvm.dbg.declare(metadata i32** %18, metadata !4864, metadata !DIExpression()), !dbg !4865
  %26 = load i8*, i8** %13, align 8, !dbg !4866
  %27 = icmp ne i8* %26, null, !dbg !4866
  %28 = load i32, i32* @x.93
  %29 = load i32, i32* @y.94
  %30 = sub i32 %28, 1
  %31 = mul i32 %28, %30
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %33, %34
  br i1 %35, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %27, label %36, label %161, !dbg !4868

36:                                               ; preds = %originalBBpart2
  %37 = load i32, i32* @x.93
  %38 = load i32, i32* @y.94
  %39 = sub i32 %37, 1
  %40 = mul i32 %37, %39
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %42, %43
  br i1 %44, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %36, %originalBB1alteredBB
  store i32 10, i32* %16, align 4, !dbg !4869
  %45 = load i32, i32* %16, align 4, !dbg !4871
  %46 = sext i32 %45 to i64, !dbg !4871
  %47 = call i32* @realloc_groupbuf(i32* null, i64 %46), !dbg !4872
  store i32* %47, i32** %18, align 8, !dbg !4873
  %48 = load i32*, i32** %18, align 8, !dbg !4874
  %49 = icmp eq i32* %48, null, !dbg !4876
  %50 = load i32, i32* @x.93
  %51 = load i32, i32* @y.94
  %52 = sub i32 %50, 1
  %53 = mul i32 %50, %52
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %51, 10
  %57 = or i1 %55, %56
  br i1 %57, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %49, label %58, label %75, !dbg !4877

58:                                               ; preds = %originalBBpart24
  %59 = load i32, i32* @x.93
  %60 = load i32, i32* @y.94
  %61 = sub i32 %59, 1
  %62 = mul i32 %59, %61
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %60, 10
  %66 = or i1 %64, %65
  br i1 %66, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %58, %originalBB6alteredBB
  store i32 -1, i32* %12, align 4, !dbg !4878
  %67 = load i32, i32* @x.93
  %68 = load i32, i32* @y.94
  %69 = sub i32 %67, 1
  %70 = mul i32 %67, %69
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %68, 10
  %74 = or i1 %72, %73
  br i1 %74, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %553, !dbg !4878

75:                                               ; preds = %originalBBpart24
  br label %76, !dbg !4879

76:                                               ; preds = %originalBBpart220, %75
  call void @llvm.dbg.declare(metadata i32** %19, metadata !4880, metadata !DIExpression()), !dbg !4882
  call void @llvm.dbg.declare(metadata i32* %20, metadata !4883, metadata !DIExpression()), !dbg !4884
  %77 = load i32, i32* %16, align 4, !dbg !4885
  store i32 %77, i32* %20, align 4, !dbg !4884
  %78 = load i8*, i8** %13, align 8, !dbg !4886
  %79 = load i32, i32* %14, align 4, !dbg !4887
  %80 = load i32*, i32** %18, align 8, !dbg !4888
  %81 = call i32 @getgrouplist(i8* %78, i32 %79, i32* %80, i32* %16), !dbg !4889
  store i32 %81, i32* %17, align 4, !dbg !4890
  %82 = load i32, i32* %17, align 4, !dbg !4891
  %83 = icmp slt i32 %82, 0, !dbg !4893
  br i1 %83, label %84, label %91, !dbg !4894

84:                                               ; preds = %76
  %85 = load i32, i32* %20, align 4, !dbg !4895
  %86 = load i32, i32* %16, align 4, !dbg !4896
  %87 = icmp eq i32 %85, %86, !dbg !4897
  br i1 %87, label %88, label %91, !dbg !4898

88:                                               ; preds = %84
  %89 = load i32, i32* %16, align 4, !dbg !4899
  %90 = mul nsw i32 %89, 2, !dbg !4899
  store i32 %90, i32* %16, align 4, !dbg !4899
  br label %91, !dbg !4900

91:                                               ; preds = %88, %84, %76
  %92 = load i32, i32* @x.93
  %93 = load i32, i32* @y.94
  %94 = sub i32 %92, 1
  %95 = mul i32 %92, %94
  %96 = urem i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %93, 10
  %99 = or i1 %97, %98
  br i1 %99, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %91, %originalBB10alteredBB
  %100 = load i32*, i32** %18, align 8, !dbg !4901
  %101 = load i32, i32* %16, align 4, !dbg !4903
  %102 = sext i32 %101 to i64, !dbg !4903
  %103 = call i32* @realloc_groupbuf(i32* %100, i64 %102), !dbg !4904
  store i32* %103, i32** %19, align 8, !dbg !4905
  %104 = icmp eq i32* %103, null, !dbg !4906
  %105 = load i32, i32* @x.93
  %106 = load i32, i32* @y.94
  %107 = sub i32 %105, 1
  %108 = mul i32 %105, %107
  %109 = urem i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %106, 10
  %112 = or i1 %110, %111
  br i1 %112, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %104, label %113, label %120, !dbg !4907

113:                                              ; preds = %originalBBpart212
  call void @llvm.dbg.declare(metadata i32* %21, metadata !4908, metadata !DIExpression()), !dbg !4910
  %114 = call i32* @__errno_location() #15, !dbg !4911
  %115 = load i32, i32* %114, align 4, !dbg !4911
  store i32 %115, i32* %21, align 4, !dbg !4910
  %116 = load i32*, i32** %18, align 8, !dbg !4912
  %117 = bitcast i32* %116 to i8*, !dbg !4912
  call void @free(i8* %117) #10, !dbg !4913
  %118 = load i32, i32* %21, align 4, !dbg !4914
  %119 = call i32* @__errno_location() #15, !dbg !4915
  store i32 %118, i32* %119, align 4, !dbg !4916
  store i32 -1, i32* %12, align 4, !dbg !4917
  br label %553, !dbg !4917

120:                                              ; preds = %originalBBpart212
  %121 = load i32*, i32** %19, align 8, !dbg !4918
  store i32* %121, i32** %18, align 8, !dbg !4919
  %122 = load i32, i32* %17, align 4, !dbg !4920
  %123 = icmp sle i32 0, %122, !dbg !4922
  br i1 %123, label %124, label %144, !dbg !4923

124:                                              ; preds = %120
  %125 = load i32, i32* @x.93
  %126 = load i32, i32* @y.94
  %127 = sub i32 %125, 1
  %128 = mul i32 %125, %127
  %129 = urem i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = icmp slt i32 %126, 10
  %132 = or i1 %130, %131
  br i1 %132, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %124, %originalBB14alteredBB
  %133 = load i32*, i32** %18, align 8, !dbg !4924
  %134 = load i32**, i32*** %15, align 8, !dbg !4926
  store i32* %133, i32** %134, align 8, !dbg !4927
  %135 = load i32, i32* %16, align 4, !dbg !4928
  store i32 %135, i32* %12, align 4, !dbg !4929
  %136 = load i32, i32* @x.93
  %137 = load i32, i32* @y.94
  %138 = sub i32 %136, 1
  %139 = mul i32 %136, %138
  %140 = urem i32 %139, 2
  %141 = icmp eq i32 %140, 0
  %142 = icmp slt i32 %137, 10
  %143 = or i1 %141, %142
  br i1 %143, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %553, !dbg !4929

144:                                              ; preds = %120
  %145 = load i32, i32* @x.93
  %146 = load i32, i32* @y.94
  %147 = sub i32 %145, 1
  %148 = mul i32 %145, %147
  %149 = urem i32 %148, 2
  %150 = icmp eq i32 %149, 0
  %151 = icmp slt i32 %146, 10
  %152 = or i1 %150, %151
  br i1 %152, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %144, %originalBB18alteredBB
  %153 = load i32, i32* @x.93
  %154 = load i32, i32* @y.94
  %155 = sub i32 %153, 1
  %156 = mul i32 %153, %155
  %157 = urem i32 %156, 2
  %158 = icmp eq i32 %157, 0
  %159 = icmp slt i32 %154, 10
  %160 = or i1 %158, %159
  br i1 %160, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %76, !dbg !4879, !llvm.loop !4930

161:                                              ; preds = %originalBBpart2
  %162 = load i32, i32* @x.93
  %163 = load i32, i32* @y.94
  %164 = sub i32 %162, 1
  %165 = mul i32 %162, %164
  %166 = urem i32 %165, 2
  %167 = icmp eq i32 %166, 0
  %168 = icmp slt i32 %163, 10
  %169 = or i1 %167, %168
  br i1 %169, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %161, %originalBB22alteredBB
  %170 = load i8*, i8** %13, align 8, !dbg !4932
  %171 = icmp ne i8* %170, null, !dbg !4932
  %172 = load i32, i32* @x.93
  %173 = load i32, i32* @y.94
  %174 = sub i32 %172, 1
  %175 = mul i32 %172, %174
  %176 = urem i32 %175, 2
  %177 = icmp eq i32 %176, 0
  %178 = icmp slt i32 %173, 10
  %179 = or i1 %177, %178
  br i1 %179, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br i1 %171, label %180, label %184, !dbg !4932

180:                                              ; preds = %originalBBpart224
  %181 = load i8*, i8** %13, align 8, !dbg !4933
  %182 = load i32, i32* %14, align 4, !dbg !4934
  %183 = call i32 @getugroups(i32 0, i32* null, i8* %181, i32 %182), !dbg !4935
  br label %202, !dbg !4932

184:                                              ; preds = %originalBBpart224
  %185 = load i32, i32* @x.93
  %186 = load i32, i32* @y.94
  %187 = sub i32 %185, 1
  %188 = mul i32 %185, %187
  %189 = urem i32 %188, 2
  %190 = icmp eq i32 %189, 0
  %191 = icmp slt i32 %186, 10
  %192 = or i1 %190, %191
  br i1 %192, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %184, %originalBB26alteredBB
  %193 = call i32 @getgroups(i32 0, i32* null) #10, !dbg !4936
  %194 = load i32, i32* @x.93
  %195 = load i32, i32* @y.94
  %196 = sub i32 %194, 1
  %197 = mul i32 %194, %196
  %198 = urem i32 %197, 2
  %199 = icmp eq i32 %198, 0
  %200 = icmp slt i32 %195, 10
  %201 = or i1 %199, %200
  br i1 %201, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br label %202, !dbg !4932

202:                                              ; preds = %originalBBpart228, %180
  %203 = phi i32 [ %183, %180 ], [ %193, %originalBBpart228 ], !dbg !4932
  %204 = load i32, i32* @x.93
  %205 = load i32, i32* @y.94
  %206 = sub i32 %204, 1
  %207 = mul i32 %204, %206
  %208 = urem i32 %207, 2
  %209 = icmp eq i32 %208, 0
  %210 = icmp slt i32 %205, 10
  %211 = or i1 %209, %210
  br i1 %211, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %202, %originalBB30alteredBB
  store i32 %203, i32* %16, align 4, !dbg !4937
  %212 = load i32, i32* %16, align 4, !dbg !4938
  %213 = icmp slt i32 %212, 0, !dbg !4940
  %214 = load i32, i32* @x.93
  %215 = load i32, i32* @y.94
  %216 = sub i32 %214, 1
  %217 = mul i32 %214, %216
  %218 = urem i32 %217, 2
  %219 = icmp eq i32 %218, 0
  %220 = icmp slt i32 %215, 10
  %221 = or i1 %219, %220
  br i1 %221, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br i1 %213, label %222, label %254, !dbg !4941

222:                                              ; preds = %originalBBpart232
  %223 = call i32* @__errno_location() #15, !dbg !4942
  %224 = load i32, i32* %223, align 4, !dbg !4942
  %225 = icmp eq i32 %224, 38, !dbg !4945
  br i1 %225, label %226, label %237, !dbg !4946

226:                                              ; preds = %222
  %227 = call i32* @realloc_groupbuf(i32* null, i64 1), !dbg !4947
  store i32* %227, i32** %18, align 8, !dbg !4948
  %228 = icmp ne i32* %227, null, !dbg !4948
  br i1 %228, label %229, label %237, !dbg !4949

229:                                              ; preds = %226
  %230 = load i32*, i32** %18, align 8, !dbg !4950
  %231 = load i32**, i32*** %15, align 8, !dbg !4952
  store i32* %230, i32** %231, align 8, !dbg !4953
  %232 = load i32, i32* %14, align 4, !dbg !4954
  %233 = load i32*, i32** %18, align 8, !dbg !4955
  store i32 %232, i32* %233, align 4, !dbg !4956
  %234 = load i32, i32* %14, align 4, !dbg !4957
  %235 = icmp ne i32 %234, -1, !dbg !4958
  %236 = zext i1 %235 to i32, !dbg !4958
  store i32 %236, i32* %12, align 4, !dbg !4959
  br label %553, !dbg !4959

237:                                              ; preds = %226, %222
  %238 = load i32, i32* @x.93
  %239 = load i32, i32* @y.94
  %240 = sub i32 %238, 1
  %241 = mul i32 %238, %240
  %242 = urem i32 %241, 2
  %243 = icmp eq i32 %242, 0
  %244 = icmp slt i32 %239, 10
  %245 = or i1 %243, %244
  br i1 %245, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %237, %originalBB34alteredBB
  store i32 -1, i32* %12, align 4, !dbg !4960
  %246 = load i32, i32* @x.93
  %247 = load i32, i32* @y.94
  %248 = sub i32 %246, 1
  %249 = mul i32 %246, %248
  %250 = urem i32 %249, 2
  %251 = icmp eq i32 %250, 0
  %252 = icmp slt i32 %247, 10
  %253 = or i1 %251, %252
  br i1 %253, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  br label %553, !dbg !4960

254:                                              ; preds = %originalBBpart232
  %255 = load i32, i32* %16, align 4, !dbg !4961
  %256 = icmp eq i32 %255, 0, !dbg !4963
  br i1 %256, label %263, label %257, !dbg !4964

257:                                              ; preds = %254
  %258 = load i8*, i8** %13, align 8, !dbg !4965
  %259 = icmp ne i8* %258, null, !dbg !4965
  br i1 %259, label %266, label %260, !dbg !4966

260:                                              ; preds = %257
  %261 = load i32, i32* %14, align 4, !dbg !4967
  %262 = icmp ne i32 %261, -1, !dbg !4968
  br i1 %262, label %263, label %266, !dbg !4969

263:                                              ; preds = %260, %254
  %264 = load i32, i32* %16, align 4, !dbg !4970
  %265 = add nsw i32 %264, 1, !dbg !4970
  store i32 %265, i32* %16, align 4, !dbg !4970
  br label %266, !dbg !4971

266:                                              ; preds = %263, %260, %257
  %267 = load i32, i32* %16, align 4, !dbg !4972
  %268 = sext i32 %267 to i64, !dbg !4972
  %269 = call i32* @realloc_groupbuf(i32* null, i64 %268), !dbg !4973
  store i32* %269, i32** %18, align 8, !dbg !4974
  %270 = load i32*, i32** %18, align 8, !dbg !4975
  %271 = icmp eq i32* %270, null, !dbg !4977
  br i1 %271, label %272, label %273, !dbg !4978

272:                                              ; preds = %266
  store i32 -1, i32* %12, align 4, !dbg !4979
  br label %553, !dbg !4979

273:                                              ; preds = %266
  %274 = load i32, i32* @x.93
  %275 = load i32, i32* @y.94
  %276 = sub i32 %274, 1
  %277 = mul i32 %274, %276
  %278 = urem i32 %277, 2
  %279 = icmp eq i32 %278, 0
  %280 = icmp slt i32 %275, 10
  %281 = or i1 %279, %280
  br i1 %281, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %273, %originalBB38alteredBB
  %282 = load i8*, i8** %13, align 8, !dbg !4980
  %283 = icmp ne i8* %282, null, !dbg !4980
  %284 = load i32, i32* @x.93
  %285 = load i32, i32* @y.94
  %286 = sub i32 %284, 1
  %287 = mul i32 %284, %286
  %288 = urem i32 %287, 2
  %289 = icmp eq i32 %288, 0
  %290 = icmp slt i32 %285, 10
  %291 = or i1 %289, %290
  br i1 %291, label %originalBBpart240, label %originalBB38alteredBB

originalBBpart240:                                ; preds = %originalBB38
  br i1 %283, label %292, label %314, !dbg !4980

292:                                              ; preds = %originalBBpart240
  %293 = load i32, i32* @x.93
  %294 = load i32, i32* @y.94
  %295 = sub i32 %293, 1
  %296 = mul i32 %293, %295
  %297 = urem i32 %296, 2
  %298 = icmp eq i32 %297, 0
  %299 = icmp slt i32 %294, 10
  %300 = or i1 %298, %299
  br i1 %300, label %originalBB42, label %originalBB42alteredBB

originalBB42:                                     ; preds = %292, %originalBB42alteredBB
  %301 = load i32, i32* %16, align 4, !dbg !4981
  %302 = load i32*, i32** %18, align 8, !dbg !4982
  %303 = load i8*, i8** %13, align 8, !dbg !4983
  %304 = load i32, i32* %14, align 4, !dbg !4984
  %305 = call i32 @getugroups(i32 %301, i32* %302, i8* %303, i32 %304), !dbg !4985
  %306 = load i32, i32* @x.93
  %307 = load i32, i32* @y.94
  %308 = sub i32 %306, 1
  %309 = mul i32 %306, %308
  %310 = urem i32 %309, 2
  %311 = icmp eq i32 %310, 0
  %312 = icmp slt i32 %307, 10
  %313 = or i1 %311, %312
  br i1 %313, label %originalBBpart244, label %originalBB42alteredBB

originalBBpart244:                                ; preds = %originalBB42
  br label %343, !dbg !4980

314:                                              ; preds = %originalBBpart240
  %315 = load i32, i32* @x.93
  %316 = load i32, i32* @y.94
  %317 = sub i32 %315, 1
  %318 = mul i32 %315, %317
  %319 = urem i32 %318, 2
  %320 = icmp eq i32 %319, 0
  %321 = icmp slt i32 %316, 10
  %322 = or i1 %320, %321
  br i1 %322, label %originalBB46, label %originalBB46alteredBB

originalBB46:                                     ; preds = %314, %originalBB46alteredBB
  %323 = load i32, i32* %16, align 4, !dbg !4986
  %324 = load i32, i32* %14, align 4, !dbg !4987
  %325 = icmp ne i32 %324, -1, !dbg !4988
  %326 = zext i1 %325 to i32, !dbg !4988
  %327 = sub nsw i32 %323, %326, !dbg !4989
  %328 = load i32*, i32** %18, align 8, !dbg !4990
  %329 = load i32, i32* %14, align 4, !dbg !4991
  %330 = icmp ne i32 %329, -1, !dbg !4992
  %331 = zext i1 %330 to i32, !dbg !4992
  %332 = sext i32 %331 to i64, !dbg !4993
  %333 = getelementptr inbounds i32, i32* %328, i64 %332, !dbg !4993
  %334 = call i32 @getgroups(i32 %327, i32* %333) #10, !dbg !4994
  %335 = load i32, i32* @x.93
  %336 = load i32, i32* @y.94
  %337 = sub i32 %335, 1
  %338 = mul i32 %335, %337
  %339 = urem i32 %338, 2
  %340 = icmp eq i32 %339, 0
  %341 = icmp slt i32 %336, 10
  %342 = or i1 %340, %341
  br i1 %342, label %originalBBpart258, label %originalBB46alteredBB

originalBBpart258:                                ; preds = %originalBB46
  br label %343, !dbg !4980

343:                                              ; preds = %originalBBpart258, %originalBBpart244
  %344 = phi i32 [ %305, %originalBBpart244 ], [ %334, %originalBBpart258 ], !dbg !4980
  store i32 %344, i32* %17, align 4, !dbg !4995
  %345 = load i32, i32* %17, align 4, !dbg !4996
  %346 = icmp slt i32 %345, 0, !dbg !4998
  br i1 %346, label %347, label %370, !dbg !4999

347:                                              ; preds = %343
  call void @llvm.dbg.declare(metadata i32* %22, metadata !5000, metadata !DIExpression()), !dbg !5002
  %348 = load i32, i32* @x.93
  %349 = load i32, i32* @y.94
  %350 = sub i32 %348, 1
  %351 = mul i32 %348, %350
  %352 = urem i32 %351, 2
  %353 = icmp eq i32 %352, 0
  %354 = icmp slt i32 %349, 10
  %355 = or i1 %353, %354
  br i1 %355, label %originalBB60, label %originalBB60alteredBB

originalBB60:                                     ; preds = %347, %originalBB60alteredBB
  %356 = call i32* @__errno_location() #15, !dbg !5003
  %357 = load i32, i32* %356, align 4, !dbg !5003
  store i32 %357, i32* %22, align 4, !dbg !5002
  %358 = load i32*, i32** %18, align 8, !dbg !5004
  %359 = bitcast i32* %358 to i8*, !dbg !5004
  call void @free(i8* %359) #10, !dbg !5005
  %360 = load i32, i32* %22, align 4, !dbg !5006
  %361 = call i32* @__errno_location() #15, !dbg !5007
  store i32 %360, i32* %361, align 4, !dbg !5008
  store i32 -1, i32* %12, align 4, !dbg !5009
  %362 = load i32, i32* @x.93
  %363 = load i32, i32* @y.94
  %364 = sub i32 %362, 1
  %365 = mul i32 %362, %364
  %366 = urem i32 %365, 2
  %367 = icmp eq i32 %366, 0
  %368 = icmp slt i32 %363, 10
  %369 = or i1 %367, %368
  br i1 %369, label %originalBBpart262, label %originalBB60alteredBB

originalBBpart262:                                ; preds = %originalBB60
  br label %553, !dbg !5009

370:                                              ; preds = %343
  %371 = load i32, i32* @x.93
  %372 = load i32, i32* @y.94
  %373 = sub i32 %371, 1
  %374 = mul i32 %371, %373
  %375 = urem i32 %374, 2
  %376 = icmp eq i32 %375, 0
  %377 = icmp slt i32 %372, 10
  %378 = or i1 %376, %377
  br i1 %378, label %originalBB64, label %originalBB64alteredBB

originalBB64:                                     ; preds = %370, %originalBB64alteredBB
  %379 = load i8*, i8** %13, align 8, !dbg !5010
  %380 = icmp ne i8* %379, null, !dbg !5010
  %381 = load i32, i32* @x.93
  %382 = load i32, i32* @y.94
  %383 = sub i32 %381, 1
  %384 = mul i32 %381, %383
  %385 = urem i32 %384, 2
  %386 = icmp eq i32 %385, 0
  %387 = icmp slt i32 %382, 10
  %388 = or i1 %386, %387
  br i1 %388, label %originalBBpart266, label %originalBB64alteredBB

originalBBpart266:                                ; preds = %originalBB64
  br i1 %380, label %413, label %389, !dbg !5012

389:                                              ; preds = %originalBBpart266
  %390 = load i32, i32* @x.93
  %391 = load i32, i32* @y.94
  %392 = sub i32 %390, 1
  %393 = mul i32 %390, %392
  %394 = urem i32 %393, 2
  %395 = icmp eq i32 %394, 0
  %396 = icmp slt i32 %391, 10
  %397 = or i1 %395, %396
  br i1 %397, label %originalBB68, label %originalBB68alteredBB

originalBB68:                                     ; preds = %389, %originalBB68alteredBB
  %398 = load i32, i32* %14, align 4, !dbg !5013
  %399 = icmp ne i32 %398, -1, !dbg !5014
  %400 = load i32, i32* @x.93
  %401 = load i32, i32* @y.94
  %402 = sub i32 %400, 1
  %403 = mul i32 %400, %402
  %404 = urem i32 %403, 2
  %405 = icmp eq i32 %404, 0
  %406 = icmp slt i32 %401, 10
  %407 = or i1 %405, %406
  br i1 %407, label %originalBBpart270, label %originalBB68alteredBB

originalBBpart270:                                ; preds = %originalBB68
  br i1 %399, label %408, label %413, !dbg !5015

408:                                              ; preds = %originalBBpart270
  %409 = load i32, i32* %14, align 4, !dbg !5016
  %410 = load i32*, i32** %18, align 8, !dbg !5018
  store i32 %409, i32* %410, align 4, !dbg !5019
  %411 = load i32, i32* %17, align 4, !dbg !5020
  %412 = add nsw i32 %411, 1, !dbg !5020
  store i32 %412, i32* %17, align 4, !dbg !5020
  br label %413, !dbg !5021

413:                                              ; preds = %408, %originalBBpart270, %originalBBpart266
  %414 = load i32*, i32** %18, align 8, !dbg !5022
  %415 = load i32**, i32*** %15, align 8, !dbg !5023
  store i32* %414, i32** %415, align 8, !dbg !5024
  %416 = load i32, i32* %17, align 4, !dbg !5025
  %417 = icmp slt i32 1, %416, !dbg !5027
  br i1 %417, label %418, label %535, !dbg !5028

418:                                              ; preds = %413
  call void @llvm.dbg.declare(metadata i32* %23, metadata !5029, metadata !DIExpression()), !dbg !5031
  %419 = load i32, i32* @x.93
  %420 = load i32, i32* @y.94
  %421 = sub i32 %419, 1
  %422 = mul i32 %419, %421
  %423 = urem i32 %422, 2
  %424 = icmp eq i32 %423, 0
  %425 = icmp slt i32 %420, 10
  %426 = or i1 %424, %425
  br i1 %426, label %originalBB72, label %originalBB72alteredBB

originalBB72:                                     ; preds = %418, %originalBB72alteredBB
  %427 = load i32*, i32** %18, align 8, !dbg !5032
  %428 = load i32, i32* %427, align 4, !dbg !5033
  store i32 %428, i32* %23, align 4, !dbg !5031
  call void @llvm.dbg.declare(metadata i32** %24, metadata !5034, metadata !DIExpression()), !dbg !5035
  call void @llvm.dbg.declare(metadata i32** %25, metadata !5036, metadata !DIExpression()), !dbg !5037
  %429 = load i32*, i32** %18, align 8, !dbg !5038
  %430 = load i32, i32* %17, align 4, !dbg !5039
  %431 = sext i32 %430 to i64, !dbg !5040
  %432 = getelementptr inbounds i32, i32* %429, i64 %431, !dbg !5040
  store i32* %432, i32** %25, align 8, !dbg !5037
  %433 = load i32*, i32** %18, align 8, !dbg !5041
  %434 = getelementptr inbounds i32, i32* %433, i64 1, !dbg !5043
  store i32* %434, i32** %24, align 8, !dbg !5044
  %435 = load i32, i32* @x.93
  %436 = load i32, i32* @y.94
  %437 = sub i32 %435, 1
  %438 = mul i32 %435, %437
  %439 = urem i32 %438, 2
  %440 = icmp eq i32 %439, 0
  %441 = icmp slt i32 %436, 10
  %442 = or i1 %440, %441
  br i1 %442, label %originalBBpart274, label %originalBB72alteredBB

originalBBpart274:                                ; preds = %originalBB72
  br label %443, !dbg !5045

443:                                              ; preds = %515, %originalBBpart274
  %444 = load i32*, i32** %24, align 8, !dbg !5046
  %445 = load i32*, i32** %25, align 8, !dbg !5048
  %446 = icmp ult i32* %444, %445, !dbg !5049
  br i1 %446, label %447, label %518, !dbg !5050

447:                                              ; preds = %443
  %448 = load i32, i32* @x.93
  %449 = load i32, i32* @y.94
  %450 = sub i32 %448, 1
  %451 = mul i32 %448, %450
  %452 = urem i32 %451, 2
  %453 = icmp eq i32 %452, 0
  %454 = icmp slt i32 %449, 10
  %455 = or i1 %453, %454
  br i1 %455, label %originalBB76, label %originalBB76alteredBB

originalBB76:                                     ; preds = %447, %originalBB76alteredBB
  %456 = load i32*, i32** %24, align 8, !dbg !5051
  %457 = load i32, i32* %456, align 4, !dbg !5054
  %458 = load i32, i32* %23, align 4, !dbg !5055
  %459 = icmp eq i32 %457, %458, !dbg !5056
  %460 = load i32, i32* @x.93
  %461 = load i32, i32* @y.94
  %462 = sub i32 %460, 1
  %463 = mul i32 %460, %462
  %464 = urem i32 %463, 2
  %465 = icmp eq i32 %464, 0
  %466 = icmp slt i32 %461, 10
  %467 = or i1 %465, %466
  br i1 %467, label %originalBBpart278, label %originalBB76alteredBB

originalBBpart278:                                ; preds = %originalBB76
  br i1 %459, label %490, label %468, !dbg !5057

468:                                              ; preds = %originalBBpart278
  %469 = load i32, i32* @x.93
  %470 = load i32, i32* @y.94
  %471 = sub i32 %469, 1
  %472 = mul i32 %469, %471
  %473 = urem i32 %472, 2
  %474 = icmp eq i32 %473, 0
  %475 = icmp slt i32 %470, 10
  %476 = or i1 %474, %475
  br i1 %476, label %originalBB80, label %originalBB80alteredBB

originalBB80:                                     ; preds = %468, %originalBB80alteredBB
  %477 = load i32*, i32** %24, align 8, !dbg !5058
  %478 = load i32, i32* %477, align 4, !dbg !5059
  %479 = load i32*, i32** %18, align 8, !dbg !5060
  %480 = load i32, i32* %479, align 4, !dbg !5061
  %481 = icmp eq i32 %478, %480, !dbg !5062
  %482 = load i32, i32* @x.93
  %483 = load i32, i32* @y.94
  %484 = sub i32 %482, 1
  %485 = mul i32 %482, %484
  %486 = urem i32 %485, 2
  %487 = icmp eq i32 %486, 0
  %488 = icmp slt i32 %483, 10
  %489 = or i1 %487, %488
  br i1 %489, label %originalBBpart282, label %originalBB80alteredBB

originalBBpart282:                                ; preds = %originalBB80
  br i1 %481, label %490, label %493, !dbg !5063

490:                                              ; preds = %originalBBpart282, %originalBBpart278
  %491 = load i32, i32* %17, align 4, !dbg !5064
  %492 = add nsw i32 %491, -1, !dbg !5064
  store i32 %492, i32* %17, align 4, !dbg !5064
  br label %498, !dbg !5065

493:                                              ; preds = %originalBBpart282
  %494 = load i32*, i32** %24, align 8, !dbg !5066
  %495 = load i32, i32* %494, align 4, !dbg !5067
  %496 = load i32*, i32** %18, align 8, !dbg !5068
  %497 = getelementptr inbounds i32, i32* %496, i32 1, !dbg !5068
  store i32* %497, i32** %18, align 8, !dbg !5068
  store i32 %495, i32* %497, align 4, !dbg !5069
  br label %498

498:                                              ; preds = %493, %490
  %499 = load i32, i32* @x.93
  %500 = load i32, i32* @y.94
  %501 = sub i32 %499, 1
  %502 = mul i32 %499, %501
  %503 = urem i32 %502, 2
  %504 = icmp eq i32 %503, 0
  %505 = icmp slt i32 %500, 10
  %506 = or i1 %504, %505
  br i1 %506, label %originalBB84, label %originalBB84alteredBB

originalBB84:                                     ; preds = %498, %originalBB84alteredBB
  %507 = load i32, i32* @x.93
  %508 = load i32, i32* @y.94
  %509 = sub i32 %507, 1
  %510 = mul i32 %507, %509
  %511 = urem i32 %510, 2
  %512 = icmp eq i32 %511, 0
  %513 = icmp slt i32 %508, 10
  %514 = or i1 %512, %513
  br i1 %514, label %originalBBpart286, label %originalBB84alteredBB

originalBBpart286:                                ; preds = %originalBB84
  br label %515, !dbg !5070

515:                                              ; preds = %originalBBpart286
  %516 = load i32*, i32** %24, align 8, !dbg !5071
  %517 = getelementptr inbounds i32, i32* %516, i32 1, !dbg !5071
  store i32* %517, i32** %24, align 8, !dbg !5071
  br label %443, !dbg !5072, !llvm.loop !5073

518:                                              ; preds = %443
  %519 = load i32, i32* @x.93
  %520 = load i32, i32* @y.94
  %521 = sub i32 %519, 1
  %522 = mul i32 %519, %521
  %523 = urem i32 %522, 2
  %524 = icmp eq i32 %523, 0
  %525 = icmp slt i32 %520, 10
  %526 = or i1 %524, %525
  br i1 %526, label %originalBB88, label %originalBB88alteredBB

originalBB88:                                     ; preds = %518, %originalBB88alteredBB
  %527 = load i32, i32* @x.93
  %528 = load i32, i32* @y.94
  %529 = sub i32 %527, 1
  %530 = mul i32 %527, %529
  %531 = urem i32 %530, 2
  %532 = icmp eq i32 %531, 0
  %533 = icmp slt i32 %528, 10
  %534 = or i1 %532, %533
  br i1 %534, label %originalBBpart290, label %originalBB88alteredBB

originalBBpart290:                                ; preds = %originalBB88
  br label %535, !dbg !5075

535:                                              ; preds = %originalBBpart290, %413
  %536 = load i32, i32* @x.93
  %537 = load i32, i32* @y.94
  %538 = sub i32 %536, 1
  %539 = mul i32 %536, %538
  %540 = urem i32 %539, 2
  %541 = icmp eq i32 %540, 0
  %542 = icmp slt i32 %537, 10
  %543 = or i1 %541, %542
  br i1 %543, label %originalBB92, label %originalBB92alteredBB

originalBB92:                                     ; preds = %535, %originalBB92alteredBB
  %544 = load i32, i32* %17, align 4, !dbg !5076
  store i32 %544, i32* %12, align 4, !dbg !5077
  %545 = load i32, i32* @x.93
  %546 = load i32, i32* @y.94
  %547 = sub i32 %545, 1
  %548 = mul i32 %545, %547
  %549 = urem i32 %548, 2
  %550 = icmp eq i32 %549, 0
  %551 = icmp slt i32 %546, 10
  %552 = or i1 %550, %551
  br i1 %552, label %originalBBpart294, label %originalBB92alteredBB

originalBBpart294:                                ; preds = %originalBB92
  br label %553, !dbg !5077

553:                                              ; preds = %originalBBpart294, %originalBBpart262, %272, %originalBBpart236, %229, %originalBBpart216, %113, %originalBBpart28
  %554 = load i32, i32* @x.93
  %555 = load i32, i32* @y.94
  %556 = sub i32 %554, 1
  %557 = mul i32 %554, %556
  %558 = urem i32 %557, 2
  %559 = icmp eq i32 %558, 0
  %560 = icmp slt i32 %555, 10
  %561 = or i1 %559, %560
  br i1 %561, label %originalBB96, label %originalBB96alteredBB

originalBB96:                                     ; preds = %553, %originalBB96alteredBB
  %562 = load i32, i32* %12, align 4, !dbg !5078
  %563 = load i32, i32* @x.93
  %564 = load i32, i32* @y.94
  %565 = sub i32 %563, 1
  %566 = mul i32 %563, %565
  %567 = urem i32 %566, 2
  %568 = icmp eq i32 %567, 0
  %569 = icmp slt i32 %564, 10
  %570 = or i1 %568, %569
  br i1 %570, label %originalBBpart298, label %originalBB96alteredBB

originalBBpart298:                                ; preds = %originalBB96
  ret i32 %562, !dbg !5078

originalBBalteredBB:                              ; preds = %originalBB, %3
  %571 = alloca i32, align 4
  %572 = alloca i8*, align 8
  %573 = alloca i32, align 4
  %574 = alloca i32**, align 8
  %575 = alloca i32, align 4
  %576 = alloca i32, align 4
  %577 = alloca i32*, align 8
  %578 = alloca i32*, align 8
  %579 = alloca i32, align 4
  %580 = alloca i32, align 4
  %581 = alloca i32, align 4
  %582 = alloca i32, align 4
  %583 = alloca i32*, align 8
  %584 = alloca i32*, align 8
  store i8* %0, i8** %572, align 8
  call void @llvm.dbg.declare(metadata i8** %572, metadata !5079, metadata !DIExpression()), !dbg !4855
  store i32 %1, i32* %573, align 4
  call void @llvm.dbg.declare(metadata i32* %573, metadata !5082, metadata !DIExpression()), !dbg !4857
  store i32** %2, i32*** %574, align 8
  call void @llvm.dbg.declare(metadata i32*** %574, metadata !5083, metadata !DIExpression()), !dbg !4859
  call void @llvm.dbg.declare(metadata i32* %575, metadata !5084, metadata !DIExpression()), !dbg !4861
  call void @llvm.dbg.declare(metadata i32* %576, metadata !5085, metadata !DIExpression()), !dbg !4863
  call void @llvm.dbg.declare(metadata i32** %577, metadata !5086, metadata !DIExpression()), !dbg !4865
  %585 = load i8*, i8** %572, align 8, !dbg !4866
  %586 = icmp ne i8* %585, null, !dbg !4866
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %36
  store i32 10, i32* %16, align 4, !dbg !4869
  %587 = load i32, i32* %16, align 4, !dbg !4871
  %588 = sext i32 %587 to i64, !dbg !4871
  %589 = call i32* @realloc_groupbuf(i32* null, i64 %588), !dbg !4872
  store i32* %589, i32** %18, align 8, !dbg !4873
  %590 = load i32*, i32** %18, align 8, !dbg !4874
  %591 = icmp eq i32* %590, null, !dbg !4876
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %58
  store i32 -1, i32* %12, align 4, !dbg !4878
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %91
  %592 = load i32*, i32** %18, align 8, !dbg !4901
  %593 = load i32, i32* %16, align 4, !dbg !4903
  %594 = sext i32 %593 to i64, !dbg !4903
  %595 = call i32* @realloc_groupbuf(i32* %592, i64 %594), !dbg !4904
  store i32* %595, i32** %19, align 8, !dbg !4905
  %596 = icmp eq i32* %595, null, !dbg !4906
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %124
  %597 = load i32*, i32** %18, align 8, !dbg !4924
  %598 = load i32**, i32*** %15, align 8, !dbg !4926
  store i32* %597, i32** %598, align 8, !dbg !4927
  %599 = load i32, i32* %16, align 4, !dbg !4928
  store i32 %599, i32* %12, align 4, !dbg !4929
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %144
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %161
  %600 = load i8*, i8** %13, align 8, !dbg !4932
  %601 = icmp ne i8* %600, null, !dbg !4932
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %184
  %602 = call i32 @getgroups(i32 0, i32* null) #10, !dbg !4936
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %202
  store i32 %203, i32* %16, align 4, !dbg !4937
  %603 = load i32, i32* %16, align 4, !dbg !4938
  %604 = icmp slt i32 %603, 0, !dbg !4940
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %237
  store i32 -1, i32* %12, align 4, !dbg !4960
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %273
  %605 = load i8*, i8** %13, align 8, !dbg !4980
  %606 = icmp ne i8* %605, null, !dbg !4980
  br label %originalBB38

originalBB42alteredBB:                            ; preds = %originalBB42, %292
  %607 = load i32, i32* %16, align 4, !dbg !4981
  %608 = load i32*, i32** %18, align 8, !dbg !4982
  %609 = load i8*, i8** %13, align 8, !dbg !4983
  %610 = load i32, i32* %14, align 4, !dbg !4984
  %611 = call i32 @getugroups(i32 %607, i32* %608, i8* %609, i32 %610), !dbg !4985
  br label %originalBB42

originalBB46alteredBB:                            ; preds = %originalBB46, %314
  %612 = load i32, i32* %16, align 4, !dbg !4986
  %613 = load i32, i32* %14, align 4, !dbg !4987
  %614 = icmp ne i32 %613, -1, !dbg !4988
  %615 = zext i1 %614 to i32, !dbg !4988
  %_ = sub i32 0, %612
  %gen = add i32 %_, %615
  %_47 = sub i32 %612, %615
  %gen48 = mul i32 %_47, %615
  %_49 = sub i32 0, %612
  %gen50 = add i32 %_49, %615
  %_51 = shl i32 %612, %615
  %_52 = sub i32 %612, %615
  %gen53 = mul i32 %_52, %615
  %_54 = sub i32 %612, %615
  %gen55 = mul i32 %_54, %615
  %_56 = shl i32 %612, %615
  %616 = sub nsw i32 %612, %615, !dbg !4989
  %617 = load i32*, i32** %18, align 8, !dbg !4990
  %618 = load i32, i32* %14, align 4, !dbg !4991
  %619 = icmp ne i32 %618, -1, !dbg !4992
  %620 = zext i1 %619 to i32, !dbg !4992
  %621 = sext i32 %620 to i64, !dbg !4993
  %622 = getelementptr inbounds i32, i32* %617, i64 %621, !dbg !4993
  %623 = call i32 @getgroups(i32 %616, i32* %622) #10, !dbg !4994
  br label %originalBB46

originalBB60alteredBB:                            ; preds = %originalBB60, %347
  %624 = call i32* @__errno_location() #15, !dbg !5003
  %625 = load i32, i32* %624, align 4, !dbg !5003
  store i32 %625, i32* %22, align 4, !dbg !5002
  %626 = load i32*, i32** %18, align 8, !dbg !5004
  %627 = bitcast i32* %626 to i8*, !dbg !5004
  call void @free(i8* %627) #10, !dbg !5005
  %628 = load i32, i32* %22, align 4, !dbg !5006
  %629 = call i32* @__errno_location() #15, !dbg !5007
  store i32 %628, i32* %629, align 4, !dbg !5008
  store i32 -1, i32* %12, align 4, !dbg !5009
  br label %originalBB60

originalBB64alteredBB:                            ; preds = %originalBB64, %370
  %630 = load i8*, i8** %13, align 8, !dbg !5010
  %631 = icmp ne i8* %630, null, !dbg !5010
  br label %originalBB64

originalBB68alteredBB:                            ; preds = %originalBB68, %389
  %632 = load i32, i32* %14, align 4, !dbg !5013
  %633 = icmp ne i32 %632, -1, !dbg !5014
  br label %originalBB68

originalBB72alteredBB:                            ; preds = %originalBB72, %418
  %634 = load i32*, i32** %18, align 8, !dbg !5032
  %635 = load i32, i32* %634, align 4, !dbg !5033
  store i32 %635, i32* %23, align 4, !dbg !5031
  call void @llvm.dbg.declare(metadata !4, metadata !5087, metadata !DIExpression()), !dbg !5035
  call void @llvm.dbg.declare(metadata !4, metadata !5092, metadata !DIExpression()), !dbg !5037
  %636 = load i32*, i32** %18, align 8, !dbg !5038
  %637 = load i32, i32* %17, align 4, !dbg !5039
  %638 = sext i32 %637 to i64, !dbg !5040
  %639 = getelementptr inbounds i32, i32* %636, i64 %638, !dbg !5040
  store i32* %639, i32** %25, align 8, !dbg !5037
  %640 = load i32*, i32** %18, align 8, !dbg !5041
  %641 = getelementptr inbounds i32, i32* %640, i64 1, !dbg !5043
  store i32* %641, i32** %24, align 8, !dbg !5044
  br label %originalBB72

originalBB76alteredBB:                            ; preds = %originalBB76, %447
  %642 = load i32*, i32** %24, align 8, !dbg !5051
  %643 = load i32, i32* %642, align 4, !dbg !5054
  %644 = load i32, i32* %23, align 4, !dbg !5055
  %645 = icmp eq i32 %643, %644, !dbg !5056
  br label %originalBB76

originalBB80alteredBB:                            ; preds = %originalBB80, %468
  %646 = load i32*, i32** %24, align 8, !dbg !5058
  %647 = load i32, i32* %646, align 4, !dbg !5059
  %648 = load i32*, i32** %18, align 8, !dbg !5060
  %649 = load i32, i32* %648, align 4, !dbg !5061
  %650 = icmp eq i32 %647, %649, !dbg !5062
  br label %originalBB80

originalBB84alteredBB:                            ; preds = %originalBB84, %498
  br label %originalBB84

originalBB88alteredBB:                            ; preds = %originalBB88, %518
  br label %originalBB88

originalBB92alteredBB:                            ; preds = %originalBB92, %535
  %651 = load i32, i32* %17, align 4, !dbg !5076
  store i32 %651, i32* %12, align 4, !dbg !5077
  br label %originalBB92

originalBB96alteredBB:                            ; preds = %originalBB96, %553
  %652 = load i32, i32* %12, align 4, !dbg !5078
  br label %originalBB96
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32* @realloc_groupbuf(i32*, i64) #4 !dbg !5093 {
  %3 = alloca i32*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca i64, align 8
  store i32* %0, i32** %4, align 8
  call void @llvm.dbg.declare(metadata i32** %4, metadata !5096, metadata !DIExpression()), !dbg !5097
  store i64 %1, i64* %5, align 8
  call void @llvm.dbg.declare(metadata i64* %5, metadata !5098, metadata !DIExpression()), !dbg !5099
  %6 = load i64, i64* %5, align 8, !dbg !5100
  %7 = icmp ult i64 2305843009213693951, %6, !dbg !5100
  br i1 %7, label %8, label %26, !dbg !5102

8:                                                ; preds = %2
  %9 = load i32, i32* @x.95
  %10 = load i32, i32* @y.96
  %11 = sub i32 %9, 1
  %12 = mul i32 %9, %11
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = icmp slt i32 %10, 10
  %16 = or i1 %14, %15
  br i1 %16, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %8, %originalBBalteredBB
  %17 = call i32* @__errno_location() #15, !dbg !5103
  store i32 12, i32* %17, align 4, !dbg !5105
  store i32* null, i32** %3, align 8, !dbg !5106
  %18 = load i32, i32* @x.95
  %19 = load i32, i32* @y.96
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %49, !dbg !5106

26:                                               ; preds = %2
  %27 = load i32, i32* @x.95
  %28 = load i32, i32* @y.96
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %26, %originalBB1alteredBB
  %35 = load i32*, i32** %4, align 8, !dbg !5107
  %36 = bitcast i32* %35 to i8*, !dbg !5107
  %37 = load i64, i64* %5, align 8, !dbg !5108
  %38 = mul i64 %37, 4, !dbg !5109
  %39 = call i8* @realloc(i8* %36, i64 %38) #10, !dbg !5110
  %40 = bitcast i8* %39 to i32*, !dbg !5110
  store i32* %40, i32** %3, align 8, !dbg !5111
  %41 = load i32, i32* @x.95
  %42 = load i32, i32* @y.96
  %43 = sub i32 %41, 1
  %44 = mul i32 %41, %43
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %46, %47
  br i1 %48, label %originalBBpart213, label %originalBB1alteredBB

originalBBpart213:                                ; preds = %originalBB1
  br label %49, !dbg !5111

49:                                               ; preds = %originalBBpart213, %originalBBpart2
  %50 = load i32*, i32** %3, align 8, !dbg !5112
  ret i32* %50, !dbg !5112

originalBBalteredBB:                              ; preds = %originalBB, %8
  %51 = call i32* @__errno_location() #15, !dbg !5103
  store i32 12, i32* %51, align 4, !dbg !5105
  store i32* null, i32** %3, align 8, !dbg !5106
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %26
  %52 = load i32*, i32** %4, align 8, !dbg !5107
  %53 = bitcast i32* %52 to i8*, !dbg !5107
  %54 = load i64, i64* %5, align 8, !dbg !5108
  %_ = sub i64 %54, 4
  %gen = mul i64 %_, 4
  %_2 = sub i64 %54, 4
  %gen3 = mul i64 %_2, 4
  %_4 = sub i64 %54, 4
  %gen5 = mul i64 %_4, 4
  %_6 = shl i64 %54, 4
  %_7 = shl i64 %54, 4
  %_8 = sub i64 0, %54
  %gen9 = add i64 %_8, 4
  %_10 = sub i64 0, %54
  %gen11 = add i64 %_10, 4
  %55 = mul i64 %54, 4, !dbg !5109
  %56 = call i8* @realloc(i8* %53, i64 %55) #10, !dbg !5110
  %57 = bitcast i8* %56 to i32*, !dbg !5110
  store i32* %57, i32** %3, align 8, !dbg !5111
  br label %originalBB1
}

declare dso_local i32 @getgrouplist(i8*, i32, i32*, i32*) #3

; Function Attrs: nounwind
declare dso_local i32 @getgroups(i32, i32*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @setlocale_null_r(i32, i8* nonnull, i64) #4 !dbg !5113 {
  %4 = load i32, i32* @x.97
  %5 = load i32, i32* @y.98
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca i32, align 4
  %13 = alloca i8*, align 8
  %14 = alloca i64, align 8
  store i32 %0, i32* %12, align 4
  call void @llvm.dbg.declare(metadata i32* %12, metadata !5117, metadata !DIExpression()), !dbg !5118
  store i8* %1, i8** %13, align 8
  call void @llvm.dbg.declare(metadata i8** %13, metadata !5119, metadata !DIExpression()), !dbg !5120
  store i64 %2, i64* %14, align 8
  call void @llvm.dbg.declare(metadata i64* %14, metadata !5121, metadata !DIExpression()), !dbg !5122
  %15 = load i32, i32* %12, align 4, !dbg !5123
  %16 = load i8*, i8** %13, align 8, !dbg !5124
  %17 = load i64, i64* %14, align 8, !dbg !5125
  %18 = call i32 @setlocale_null_unlocked(i32 %15, i8* %16, i64 %17), !dbg !5126
  %19 = load i32, i32* @x.97
  %20 = load i32, i32* @y.98
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32 %18, !dbg !5127

originalBBalteredBB:                              ; preds = %originalBB, %3
  %27 = alloca i32, align 4
  %28 = alloca i8*, align 8
  %29 = alloca i64, align 8
  store i32 %0, i32* %27, align 4
  call void @llvm.dbg.declare(metadata i32* %27, metadata !5128, metadata !DIExpression()), !dbg !5118
  store i8* %1, i8** %28, align 8
  call void @llvm.dbg.declare(metadata i8** %28, metadata !5131, metadata !DIExpression()), !dbg !5120
  store i64 %2, i64* %29, align 8
  call void @llvm.dbg.declare(metadata i64* %29, metadata !5132, metadata !DIExpression()), !dbg !5122
  %30 = load i32, i32* %27, align 4, !dbg !5123
  %31 = load i8*, i8** %28, align 8, !dbg !5124
  %32 = load i64, i64* %29, align 8, !dbg !5125
  %33 = call i32 @setlocale_null_unlocked(i32 %30, i8* %31, i64 %32), !dbg !5126
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @setlocale_null_unlocked(i32, i8*, i64) #4 !dbg !5133 {
  %4 = load i32, i32* @x.99
  %5 = load i32, i32* @y.100
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i8*, align 8
  %15 = alloca i64, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i64, align 8
  store i32 %0, i32* %13, align 4
  call void @llvm.dbg.declare(metadata i32* %13, metadata !5134, metadata !DIExpression()), !dbg !5135
  store i8* %1, i8** %14, align 8
  call void @llvm.dbg.declare(metadata i8** %14, metadata !5136, metadata !DIExpression()), !dbg !5137
  store i64 %2, i64* %15, align 8
  call void @llvm.dbg.declare(metadata i64* %15, metadata !5138, metadata !DIExpression()), !dbg !5139
  call void @llvm.dbg.declare(metadata i8** %16, metadata !5140, metadata !DIExpression()), !dbg !5141
  %18 = load i32, i32* %13, align 4, !dbg !5142
  %19 = call i8* @setlocale_null_androidfix(i32 %18), !dbg !5143
  store i8* %19, i8** %16, align 8, !dbg !5141
  %20 = load i8*, i8** %16, align 8, !dbg !5144
  %21 = icmp eq i8* %20, null, !dbg !5146
  %22 = load i32, i32* @x.99
  %23 = load i32, i32* @y.100
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %21, label %30, label %85, !dbg !5147

30:                                               ; preds = %originalBBpart2
  %31 = load i32, i32* @x.99
  %32 = load i32, i32* @y.100
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %30, %originalBB1alteredBB
  %39 = load i64, i64* %15, align 8, !dbg !5148
  %40 = icmp ugt i64 %39, 0, !dbg !5151
  %41 = load i32, i32* @x.99
  %42 = load i32, i32* @y.100
  %43 = sub i32 %41, 1
  %44 = mul i32 %41, %43
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %46, %47
  br i1 %48, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %40, label %49, label %68, !dbg !5152

49:                                               ; preds = %originalBBpart24
  %50 = load i32, i32* @x.99
  %51 = load i32, i32* @y.100
  %52 = sub i32 %50, 1
  %53 = mul i32 %50, %52
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %51, 10
  %57 = or i1 %55, %56
  br i1 %57, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %49, %originalBB6alteredBB
  %58 = load i8*, i8** %14, align 8, !dbg !5153
  %59 = getelementptr inbounds i8, i8* %58, i64 0, !dbg !5153
  store i8 0, i8* %59, align 1, !dbg !5154
  %60 = load i32, i32* @x.99
  %61 = load i32, i32* @y.100
  %62 = sub i32 %60, 1
  %63 = mul i32 %60, %62
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %61, 10
  %67 = or i1 %65, %66
  br i1 %67, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %68, !dbg !5153

68:                                               ; preds = %originalBBpart28, %originalBBpart24
  %69 = load i32, i32* @x.99
  %70 = load i32, i32* @y.100
  %71 = sub i32 %69, 1
  %72 = mul i32 %69, %71
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %74, %75
  br i1 %76, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %68, %originalBB10alteredBB
  store i32 22, i32* %12, align 4, !dbg !5155
  %77 = load i32, i32* @x.99
  %78 = load i32, i32* @y.100
  %79 = sub i32 %77, 1
  %80 = mul i32 %77, %79
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %78, 10
  %84 = or i1 %82, %83
  br i1 %84, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %189, !dbg !5155

85:                                               ; preds = %originalBBpart2
  call void @llvm.dbg.declare(metadata i64* %17, metadata !5156, metadata !DIExpression()), !dbg !5158
  %86 = load i32, i32* @x.99
  %87 = load i32, i32* @y.100
  %88 = sub i32 %86, 1
  %89 = mul i32 %86, %88
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %87, 10
  %93 = or i1 %91, %92
  br i1 %93, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %85, %originalBB14alteredBB
  %94 = load i8*, i8** %16, align 8, !dbg !5159
  %95 = call i64 @strlen(i8* %94) #13, !dbg !5160
  store i64 %95, i64* %17, align 8, !dbg !5158
  %96 = load i64, i64* %17, align 8, !dbg !5161
  %97 = load i64, i64* %15, align 8, !dbg !5163
  %98 = icmp ult i64 %96, %97, !dbg !5164
  %99 = load i32, i32* @x.99
  %100 = load i32, i32* @y.100
  %101 = sub i32 %99, 1
  %102 = mul i32 %99, %101
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %100, 10
  %106 = or i1 %104, %105
  br i1 %106, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %98, label %107, label %128, !dbg !5165

107:                                              ; preds = %originalBBpart216
  %108 = load i32, i32* @x.99
  %109 = load i32, i32* @y.100
  %110 = sub i32 %108, 1
  %111 = mul i32 %108, %110
  %112 = urem i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %109, 10
  %115 = or i1 %113, %114
  br i1 %115, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %107, %originalBB18alteredBB
  %116 = load i8*, i8** %14, align 8, !dbg !5166
  %117 = load i8*, i8** %16, align 8, !dbg !5168
  %118 = load i64, i64* %17, align 8, !dbg !5169
  %119 = add i64 %118, 1, !dbg !5170
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %116, i8* align 1 %117, i64 %119, i1 false), !dbg !5171
  store i32 0, i32* %12, align 4, !dbg !5172
  %120 = load i32, i32* @x.99
  %121 = load i32, i32* @y.100
  %122 = sub i32 %120, 1
  %123 = mul i32 %120, %122
  %124 = urem i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = icmp slt i32 %121, 10
  %127 = or i1 %125, %126
  br i1 %127, label %originalBBpart223, label %originalBB18alteredBB

originalBBpart223:                                ; preds = %originalBB18
  br label %189, !dbg !5172

128:                                              ; preds = %originalBBpart216
  %129 = load i32, i32* @x.99
  %130 = load i32, i32* @y.100
  %131 = sub i32 %129, 1
  %132 = mul i32 %129, %131
  %133 = urem i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = icmp slt i32 %130, 10
  %136 = or i1 %134, %135
  br i1 %136, label %originalBB25, label %originalBB25alteredBB

originalBB25:                                     ; preds = %128, %originalBB25alteredBB
  %137 = load i64, i64* %15, align 8, !dbg !5173
  %138 = icmp ugt i64 %137, 0, !dbg !5176
  %139 = load i32, i32* @x.99
  %140 = load i32, i32* @y.100
  %141 = sub i32 %139, 1
  %142 = mul i32 %139, %141
  %143 = urem i32 %142, 2
  %144 = icmp eq i32 %143, 0
  %145 = icmp slt i32 %140, 10
  %146 = or i1 %144, %145
  br i1 %146, label %originalBBpart227, label %originalBB25alteredBB

originalBBpart227:                                ; preds = %originalBB25
  br i1 %138, label %147, label %172, !dbg !5177

147:                                              ; preds = %originalBBpart227
  %148 = load i32, i32* @x.99
  %149 = load i32, i32* @y.100
  %150 = sub i32 %148, 1
  %151 = mul i32 %148, %150
  %152 = urem i32 %151, 2
  %153 = icmp eq i32 %152, 0
  %154 = icmp slt i32 %149, 10
  %155 = or i1 %153, %154
  br i1 %155, label %originalBB29, label %originalBB29alteredBB

originalBB29:                                     ; preds = %147, %originalBB29alteredBB
  %156 = load i8*, i8** %14, align 8, !dbg !5178
  %157 = load i8*, i8** %16, align 8, !dbg !5180
  %158 = load i64, i64* %15, align 8, !dbg !5181
  %159 = sub i64 %158, 1, !dbg !5182
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %156, i8* align 1 %157, i64 %159, i1 false), !dbg !5183
  %160 = load i8*, i8** %14, align 8, !dbg !5184
  %161 = load i64, i64* %15, align 8, !dbg !5185
  %162 = sub i64 %161, 1, !dbg !5186
  %163 = getelementptr inbounds i8, i8* %160, i64 %162, !dbg !5184
  store i8 0, i8* %163, align 1, !dbg !5187
  %164 = load i32, i32* @x.99
  %165 = load i32, i32* @y.100
  %166 = sub i32 %164, 1
  %167 = mul i32 %164, %166
  %168 = urem i32 %167, 2
  %169 = icmp eq i32 %168, 0
  %170 = icmp slt i32 %165, 10
  %171 = or i1 %169, %170
  br i1 %171, label %originalBBpart236, label %originalBB29alteredBB

originalBBpart236:                                ; preds = %originalBB29
  br label %172, !dbg !5188

172:                                              ; preds = %originalBBpart236, %originalBBpart227
  %173 = load i32, i32* @x.99
  %174 = load i32, i32* @y.100
  %175 = sub i32 %173, 1
  %176 = mul i32 %173, %175
  %177 = urem i32 %176, 2
  %178 = icmp eq i32 %177, 0
  %179 = icmp slt i32 %174, 10
  %180 = or i1 %178, %179
  br i1 %180, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %172, %originalBB38alteredBB
  store i32 34, i32* %12, align 4, !dbg !5189
  %181 = load i32, i32* @x.99
  %182 = load i32, i32* @y.100
  %183 = sub i32 %181, 1
  %184 = mul i32 %181, %183
  %185 = urem i32 %184, 2
  %186 = icmp eq i32 %185, 0
  %187 = icmp slt i32 %182, 10
  %188 = or i1 %186, %187
  br i1 %188, label %originalBBpart240, label %originalBB38alteredBB

originalBBpart240:                                ; preds = %originalBB38
  br label %189, !dbg !5189

189:                                              ; preds = %originalBBpart240, %originalBBpart223, %originalBBpart212
  %190 = load i32, i32* %12, align 4, !dbg !5190
  ret i32 %190, !dbg !5190

originalBBalteredBB:                              ; preds = %originalBB, %3
  %191 = alloca i32, align 4
  %192 = alloca i32, align 4
  %193 = alloca i8*, align 8
  %194 = alloca i64, align 8
  %195 = alloca i8*, align 8
  %196 = alloca i64, align 8
  store i32 %0, i32* %192, align 4
  call void @llvm.dbg.declare(metadata i32* %192, metadata !5191, metadata !DIExpression()), !dbg !5135
  store i8* %1, i8** %193, align 8
  call void @llvm.dbg.declare(metadata i8** %193, metadata !5194, metadata !DIExpression()), !dbg !5137
  store i64 %2, i64* %194, align 8
  call void @llvm.dbg.declare(metadata i64* %194, metadata !5195, metadata !DIExpression()), !dbg !5139
  call void @llvm.dbg.declare(metadata i8** %195, metadata !5196, metadata !DIExpression()), !dbg !5141
  %197 = load i32, i32* %192, align 4, !dbg !5142
  %198 = call i8* @setlocale_null_androidfix(i32 %197), !dbg !5143
  store i8* %198, i8** %195, align 8, !dbg !5141
  %199 = load i8*, i8** %195, align 8, !dbg !5144
  %200 = icmp eq i8* %199, null, !dbg !5146
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %30
  %201 = load i64, i64* %15, align 8, !dbg !5148
  %202 = icmp ugt i64 %201, 0, !dbg !5151
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %49
  %203 = load i8*, i8** %14, align 8, !dbg !5153
  %204 = getelementptr inbounds i8, i8* %203, i64 0, !dbg !5153
  store i8 0, i8* %204, align 1, !dbg !5154
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %68
  store i32 22, i32* %12, align 4, !dbg !5155
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %85
  %205 = load i8*, i8** %16, align 8, !dbg !5159
  %206 = call i64 @strlen(i8* %205) #13, !dbg !5160
  store i64 %206, i64* %17, align 8, !dbg !5158
  %207 = load i64, i64* %17, align 8, !dbg !5161
  %208 = load i64, i64* %15, align 8, !dbg !5163
  %209 = icmp ult i64 %207, %208, !dbg !5164
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %107
  %210 = load i8*, i8** %14, align 8, !dbg !5166
  %211 = load i8*, i8** %16, align 8, !dbg !5168
  %212 = load i64, i64* %17, align 8, !dbg !5169
  %_ = sub i64 %212, 1
  %gen = mul i64 %_, 1
  %_19 = shl i64 %212, 1
  %_20 = sub i64 0, %212
  %gen21 = add i64 %_20, 1
  %213 = add i64 %212, 1, !dbg !5170
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %210, i8* align 1 %211, i64 %213, i1 false), !dbg !5171
  store i32 0, i32* %12, align 4, !dbg !5172
  br label %originalBB18

originalBB25alteredBB:                            ; preds = %originalBB25, %128
  %214 = load i64, i64* %15, align 8, !dbg !5173
  %215 = icmp ugt i64 %214, 0, !dbg !5176
  br label %originalBB25

originalBB29alteredBB:                            ; preds = %originalBB29, %147
  %216 = load i8*, i8** %14, align 8, !dbg !5178
  %217 = load i8*, i8** %16, align 8, !dbg !5180
  %218 = load i64, i64* %15, align 8, !dbg !5181
  %_30 = sub i64 %218, 1
  %gen31 = mul i64 %_30, 1
  %_32 = shl i64 %218, 1
  %219 = sub i64 %218, 1, !dbg !5182
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %216, i8* align 1 %217, i64 %219, i1 false), !dbg !5183
  %220 = load i8*, i8** %14, align 8, !dbg !5184
  %221 = load i64, i64* %15, align 8, !dbg !5185
  %_33 = sub i64 0, %221
  %gen34 = add i64 %_33, 1
  %222 = sub i64 %221, 1, !dbg !5186
  %223 = getelementptr inbounds i8, i8* %220, i64 %222, !dbg !5184
  store i8 0, i8* %223, align 1, !dbg !5187
  br label %originalBB29

originalBB38alteredBB:                            ; preds = %originalBB38, %172
  store i32 34, i32* %12, align 4, !dbg !5189
  br label %originalBB38
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @setlocale_null_androidfix(i32) #4 !dbg !5197 {
  %2 = load i32, i32* @x.101
  %3 = load i32, i32* @y.102
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i32, align 4
  %11 = alloca i8*, align 8
  store i32 %0, i32* %10, align 4
  call void @llvm.dbg.declare(metadata i32* %10, metadata !5200, metadata !DIExpression()), !dbg !5201
  call void @llvm.dbg.declare(metadata i8** %11, metadata !5202, metadata !DIExpression()), !dbg !5203
  %12 = load i32, i32* %10, align 4, !dbg !5204
  %13 = call i8* @setlocale(i32 %12, i8* null) #10, !dbg !5205
  store i8* %13, i8** %11, align 8, !dbg !5203
  %14 = load i8*, i8** %11, align 8, !dbg !5206
  %15 = load i32, i32* @x.101
  %16 = load i32, i32* @y.102
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i8* %14, !dbg !5207

originalBBalteredBB:                              ; preds = %originalBB, %1
  %23 = alloca i32, align 4
  %24 = alloca i8*, align 8
  store i32 %0, i32* %23, align 4
  call void @llvm.dbg.declare(metadata i32* %23, metadata !5208, metadata !DIExpression()), !dbg !5201
  call void @llvm.dbg.declare(metadata i8** %24, metadata !5211, metadata !DIExpression()), !dbg !5203
  %25 = load i32, i32* %23, align 4, !dbg !5204
  %26 = call i8* @setlocale(i32 %25, i8* null) #10, !dbg !5205
  store i8* %26, i8** %24, align 8, !dbg !5203
  %27 = load i8*, i8** %24, align 8, !dbg !5206
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rpl_fclose(%struct._IO_FILE* nonnull) #4 !dbg !5212 {
  %2 = load i32, i32* @x.103
  %3 = load i32, i32* @y.104
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i32, align 4
  %11 = alloca %struct._IO_FILE*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  store %struct._IO_FILE* %0, %struct._IO_FILE** %11, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %11, metadata !5250, metadata !DIExpression()), !dbg !5251
  call void @llvm.dbg.declare(metadata i32* %12, metadata !5252, metadata !DIExpression()), !dbg !5253
  store i32 0, i32* %12, align 4, !dbg !5253
  call void @llvm.dbg.declare(metadata i32* %13, metadata !5254, metadata !DIExpression()), !dbg !5255
  call void @llvm.dbg.declare(metadata i32* %14, metadata !5256, metadata !DIExpression()), !dbg !5257
  store i32 0, i32* %14, align 4, !dbg !5257
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !5258
  %16 = call i32 @fileno(%struct._IO_FILE* %15) #10, !dbg !5259
  store i32 %16, i32* %13, align 4, !dbg !5260
  %17 = load i32, i32* %13, align 4, !dbg !5261
  %18 = icmp slt i32 %17, 0, !dbg !5263
  %19 = load i32, i32* @x.103
  %20 = load i32, i32* @y.104
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %18, label %27, label %46, !dbg !5264

27:                                               ; preds = %originalBBpart2
  %28 = load i32, i32* @x.103
  %29 = load i32, i32* @y.104
  %30 = sub i32 %28, 1
  %31 = mul i32 %28, %30
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %33, %34
  br i1 %35, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %27, %originalBB1alteredBB
  %36 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !5265
  %37 = call i32 @fclose(%struct._IO_FILE* %36), !dbg !5266
  store i32 %37, i32* %10, align 4, !dbg !5267
  %38 = load i32, i32* @x.103
  %39 = load i32, i32* @y.104
  %40 = sub i32 %38, 1
  %41 = mul i32 %38, %40
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %43, %44
  br i1 %45, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %152, !dbg !5267

46:                                               ; preds = %originalBBpart2
  %47 = load i32, i32* @x.103
  %48 = load i32, i32* @y.104
  %49 = sub i32 %47, 1
  %50 = mul i32 %47, %49
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %48, 10
  %54 = or i1 %52, %53
  br i1 %54, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %46, %originalBB6alteredBB
  %55 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !5268
  %56 = call i32 @__freading(%struct._IO_FILE* %55) #10, !dbg !5268
  %57 = icmp ne i32 %56, 0, !dbg !5268
  %58 = load i32, i32* @x.103
  %59 = load i32, i32* @y.104
  %60 = sub i32 %58, 1
  %61 = mul i32 %58, %60
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %59, 10
  %65 = or i1 %63, %64
  br i1 %65, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %57, label %66, label %71, !dbg !5270

66:                                               ; preds = %originalBBpart28
  %67 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !5271
  %68 = call i32 @fileno(%struct._IO_FILE* %67) #10, !dbg !5272
  %69 = call i64 @lseek(i32 %68, i64 0, i32 1) #10, !dbg !5273
  %70 = icmp ne i64 %69, -1, !dbg !5274
  br i1 %70, label %71, label %94, !dbg !5275

71:                                               ; preds = %66, %originalBBpart28
  %72 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !5276
  %73 = call i32 @rpl_fflush(%struct._IO_FILE* %72), !dbg !5277
  %74 = icmp ne i32 %73, 0, !dbg !5277
  br i1 %74, label %75, label %94, !dbg !5278

75:                                               ; preds = %71
  %76 = load i32, i32* @x.103
  %77 = load i32, i32* @y.104
  %78 = sub i32 %76, 1
  %79 = mul i32 %76, %78
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %77, 10
  %83 = or i1 %81, %82
  br i1 %83, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %75, %originalBB10alteredBB
  %84 = call i32* @__errno_location() #15, !dbg !5279
  %85 = load i32, i32* %84, align 4, !dbg !5279
  store i32 %85, i32* %12, align 4, !dbg !5280
  %86 = load i32, i32* @x.103
  %87 = load i32, i32* @y.104
  %88 = sub i32 %86, 1
  %89 = mul i32 %86, %88
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %87, 10
  %93 = or i1 %91, %92
  br i1 %93, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %94, !dbg !5281

94:                                               ; preds = %originalBBpart212, %71, %66
  %95 = load i32, i32* @x.103
  %96 = load i32, i32* @y.104
  %97 = sub i32 %95, 1
  %98 = mul i32 %95, %97
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %96, 10
  %102 = or i1 %100, %101
  br i1 %102, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %94, %originalBB14alteredBB
  %103 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !5282
  %104 = call i32 @fclose(%struct._IO_FILE* %103), !dbg !5283
  store i32 %104, i32* %14, align 4, !dbg !5284
  %105 = load i32, i32* %12, align 4, !dbg !5285
  %106 = icmp ne i32 %105, 0, !dbg !5287
  %107 = load i32, i32* @x.103
  %108 = load i32, i32* @y.104
  %109 = sub i32 %107, 1
  %110 = mul i32 %107, %109
  %111 = urem i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = icmp slt i32 %108, 10
  %114 = or i1 %112, %113
  br i1 %114, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %106, label %115, label %134, !dbg !5288

115:                                              ; preds = %originalBBpart216
  %116 = load i32, i32* @x.103
  %117 = load i32, i32* @y.104
  %118 = sub i32 %116, 1
  %119 = mul i32 %116, %118
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %117, 10
  %123 = or i1 %121, %122
  br i1 %123, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %115, %originalBB18alteredBB
  %124 = load i32, i32* %12, align 4, !dbg !5289
  %125 = call i32* @__errno_location() #15, !dbg !5291
  store i32 %124, i32* %125, align 4, !dbg !5292
  store i32 -1, i32* %14, align 4, !dbg !5293
  %126 = load i32, i32* @x.103
  %127 = load i32, i32* @y.104
  %128 = sub i32 %126, 1
  %129 = mul i32 %126, %128
  %130 = urem i32 %129, 2
  %131 = icmp eq i32 %130, 0
  %132 = icmp slt i32 %127, 10
  %133 = or i1 %131, %132
  br i1 %133, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %134, !dbg !5294

134:                                              ; preds = %originalBBpart220, %originalBBpart216
  %135 = load i32, i32* @x.103
  %136 = load i32, i32* @y.104
  %137 = sub i32 %135, 1
  %138 = mul i32 %135, %137
  %139 = urem i32 %138, 2
  %140 = icmp eq i32 %139, 0
  %141 = icmp slt i32 %136, 10
  %142 = or i1 %140, %141
  br i1 %142, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %134, %originalBB22alteredBB
  %143 = load i32, i32* %14, align 4, !dbg !5295
  store i32 %143, i32* %10, align 4, !dbg !5296
  %144 = load i32, i32* @x.103
  %145 = load i32, i32* @y.104
  %146 = sub i32 %144, 1
  %147 = mul i32 %144, %146
  %148 = urem i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = icmp slt i32 %145, 10
  %151 = or i1 %149, %150
  br i1 %151, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br label %152, !dbg !5296

152:                                              ; preds = %originalBBpart224, %originalBBpart24
  %153 = load i32, i32* @x.103
  %154 = load i32, i32* @y.104
  %155 = sub i32 %153, 1
  %156 = mul i32 %153, %155
  %157 = urem i32 %156, 2
  %158 = icmp eq i32 %157, 0
  %159 = icmp slt i32 %154, 10
  %160 = or i1 %158, %159
  br i1 %160, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %152, %originalBB26alteredBB
  %161 = load i32, i32* %10, align 4, !dbg !5297
  %162 = load i32, i32* @x.103
  %163 = load i32, i32* @y.104
  %164 = sub i32 %162, 1
  %165 = mul i32 %162, %164
  %166 = urem i32 %165, 2
  %167 = icmp eq i32 %166, 0
  %168 = icmp slt i32 %163, 10
  %169 = or i1 %167, %168
  br i1 %169, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  ret i32 %161, !dbg !5297

originalBBalteredBB:                              ; preds = %originalBB, %1
  %170 = alloca i32, align 4
  %171 = alloca %struct._IO_FILE*, align 8
  %172 = alloca i32, align 4
  %173 = alloca i32, align 4
  %174 = alloca i32, align 4
  store %struct._IO_FILE* %0, %struct._IO_FILE** %171, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %171, metadata !5298, metadata !DIExpression()), !dbg !5251
  call void @llvm.dbg.declare(metadata i32* %172, metadata !5337, metadata !DIExpression()), !dbg !5253
  store i32 0, i32* %172, align 4, !dbg !5253
  call void @llvm.dbg.declare(metadata i32* %173, metadata !5338, metadata !DIExpression()), !dbg !5255
  call void @llvm.dbg.declare(metadata i32* %174, metadata !5339, metadata !DIExpression()), !dbg !5257
  store i32 0, i32* %174, align 4, !dbg !5257
  %175 = load %struct._IO_FILE*, %struct._IO_FILE** %171, align 8, !dbg !5258
  %176 = call i32 @fileno(%struct._IO_FILE* %175) #10, !dbg !5259
  store i32 %176, i32* %173, align 4, !dbg !5260
  %177 = load i32, i32* %173, align 4, !dbg !5261
  %178 = icmp slt i32 %177, 0, !dbg !5263
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %27
  %179 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !5265
  %180 = call i32 @fclose(%struct._IO_FILE* %179), !dbg !5266
  store i32 %180, i32* %10, align 4, !dbg !5267
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %46
  %181 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !5268
  %182 = call i32 @__freading(%struct._IO_FILE* %181) #10, !dbg !5268
  %183 = icmp ne i32 %182, 0, !dbg !5268
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %75
  %184 = call i32* @__errno_location() #15, !dbg !5279
  %185 = load i32, i32* %184, align 4, !dbg !5279
  store i32 %185, i32* %12, align 4, !dbg !5280
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %94
  %186 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !5282
  %187 = call i32 @fclose(%struct._IO_FILE* %186), !dbg !5283
  store i32 %187, i32* %14, align 4, !dbg !5284
  %188 = load i32, i32* %12, align 4, !dbg !5285
  %189 = icmp ne i32 %188, 0, !dbg !5287
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %115
  %190 = load i32, i32* %12, align 4, !dbg !5289
  %191 = call i32* @__errno_location() #15, !dbg !5291
  store i32 %190, i32* %191, align 4, !dbg !5292
  store i32 -1, i32* %14, align 4, !dbg !5293
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %134
  %192 = load i32, i32* %14, align 4, !dbg !5295
  store i32 %192, i32* %10, align 4, !dbg !5296
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %152
  %193 = load i32, i32* %10, align 4, !dbg !5297
  br label %originalBB26
}

; Function Attrs: nounwind
declare dso_local i32 @fileno(%struct._IO_FILE*) #2

declare dso_local i32 @fclose(%struct._IO_FILE*) #3

; Function Attrs: nounwind
declare dso_local i32 @__freading(%struct._IO_FILE*) #2

; Function Attrs: nounwind
declare dso_local i64 @lseek(i32, i64, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rpl_fflush(%struct._IO_FILE*) #4 !dbg !5340 {
  %2 = load i32, i32* @x.105
  %3 = load i32, i32* @y.106
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i32, align 4
  %11 = alloca %struct._IO_FILE*, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %11, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %11, metadata !5378, metadata !DIExpression()), !dbg !5379
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !5380
  %13 = icmp eq %struct._IO_FILE* %12, null, !dbg !5382
  %14 = load i32, i32* @x.105
  %15 = load i32, i32* @y.106
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %13, label %42, label %22, !dbg !5383

22:                                               ; preds = %originalBBpart2
  %23 = load i32, i32* @x.105
  %24 = load i32, i32* @y.106
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %22, %originalBB1alteredBB
  %31 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !5384
  %32 = call i32 @__freading(%struct._IO_FILE* %31) #10, !dbg !5384
  %33 = icmp ne i32 %32, 0, !dbg !5384
  %34 = load i32, i32* @x.105
  %35 = load i32, i32* @y.106
  %36 = sub i32 %34, 1
  %37 = mul i32 %34, %36
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %39, %40
  br i1 %41, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %33, label %61, label %42, !dbg !5385

42:                                               ; preds = %originalBBpart24, %originalBBpart2
  %43 = load i32, i32* @x.105
  %44 = load i32, i32* @y.106
  %45 = sub i32 %43, 1
  %46 = mul i32 %43, %45
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %48, %49
  br i1 %50, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %42, %originalBB6alteredBB
  %51 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !5386
  %52 = call i32 @fflush(%struct._IO_FILE* %51), !dbg !5387
  store i32 %52, i32* %10, align 4, !dbg !5388
  %53 = load i32, i32* @x.105
  %54 = load i32, i32* @y.106
  %55 = sub i32 %53, 1
  %56 = mul i32 %53, %55
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %54, 10
  %60 = or i1 %58, %59
  br i1 %60, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %65, !dbg !5388

61:                                               ; preds = %originalBBpart24
  %62 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !5389
  call void @clear_ungetc_buffer_preserving_position(%struct._IO_FILE* %62), !dbg !5390
  %63 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !5391
  %64 = call i32 @fflush(%struct._IO_FILE* %63), !dbg !5392
  store i32 %64, i32* %10, align 4, !dbg !5393
  br label %65, !dbg !5393

65:                                               ; preds = %61, %originalBBpart28
  %66 = load i32, i32* %10, align 4, !dbg !5394
  ret i32 %66, !dbg !5394

originalBBalteredBB:                              ; preds = %originalBB, %1
  %67 = alloca i32, align 4
  %68 = alloca %struct._IO_FILE*, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %68, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %68, metadata !5395, metadata !DIExpression()), !dbg !5379
  %69 = load %struct._IO_FILE*, %struct._IO_FILE** %68, align 8, !dbg !5380
  %70 = icmp eq %struct._IO_FILE* %69, null, !dbg !5382
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %22
  %71 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !5384
  %72 = call i32 @__freading(%struct._IO_FILE* %71) #10, !dbg !5384
  %73 = icmp ne i32 %72, 0, !dbg !5384
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %42
  %74 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !5386
  %75 = call i32 @fflush(%struct._IO_FILE* %74), !dbg !5387
  store i32 %75, i32* %10, align 4, !dbg !5388
  br label %originalBB6
}

declare dso_local i32 @fflush(%struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @clear_ungetc_buffer_preserving_position(%struct._IO_FILE*) #4 !dbg !5434 {
  %2 = load i32, i32* @x.107
  %3 = load i32, i32* @y.108
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %struct._IO_FILE*, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %10, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %10, metadata !5437, metadata !DIExpression()), !dbg !5438
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %10, align 8, !dbg !5439
  %12 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %11, i32 0, i32 0, !dbg !5441
  %13 = load i32, i32* %12, align 8, !dbg !5441
  %14 = and i32 %13, 256, !dbg !5442
  %15 = icmp ne i32 %14, 0, !dbg !5442
  %16 = load i32, i32* @x.107
  %17 = load i32, i32* @y.108
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %15, label %24, label %43, !dbg !5443

24:                                               ; preds = %originalBBpart2
  %25 = load i32, i32* @x.107
  %26 = load i32, i32* @y.108
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %24, %originalBB10alteredBB
  %33 = load %struct._IO_FILE*, %struct._IO_FILE** %10, align 8, !dbg !5444
  %34 = call i32 @rpl_fseeko(%struct._IO_FILE* %33, i64 0, i32 1), !dbg !5445
  %35 = load i32, i32* @x.107
  %36 = load i32, i32* @y.108
  %37 = sub i32 %35, 1
  %38 = mul i32 %35, %37
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %40, %41
  br i1 %42, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %43, !dbg !5445

43:                                               ; preds = %originalBBpart212, %originalBBpart2
  ret void, !dbg !5446

originalBBalteredBB:                              ; preds = %originalBB, %1
  %44 = alloca %struct._IO_FILE*, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %44, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %44, metadata !5447, metadata !DIExpression()), !dbg !5438
  %45 = load %struct._IO_FILE*, %struct._IO_FILE** %44, align 8, !dbg !5439
  %46 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %45, i32 0, i32 0, !dbg !5441
  %47 = load i32, i32* %46, align 8, !dbg !5441
  %_ = shl i32 %47, 256
  %_1 = sub i32 %47, 256
  %gen = mul i32 %_1, 256
  %_2 = sub i32 0, %47
  %gen3 = add i32 %_2, 256
  %_4 = sub i32 0, %47
  %gen5 = add i32 %_4, 256
  %_6 = shl i32 %47, 256
  %_7 = sub i32 0, %47
  %gen8 = add i32 %_7, 256
  %_9 = shl i32 %47, 256
  %48 = and i32 %47, 256, !dbg !5442
  %49 = icmp ne i32 %48, 0, !dbg !5442
  br label %originalBB

originalBB10alteredBB:                            ; preds = %originalBB10, %24
  %50 = load %struct._IO_FILE*, %struct._IO_FILE** %10, align 8, !dbg !5444
  %51 = call i32 @rpl_fseeko(%struct._IO_FILE* %50, i64 0, i32 1), !dbg !5445
  br label %originalBB10
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rpl_fseeko(%struct._IO_FILE* nonnull, i64, i32) #4 !dbg !5486 {
  %4 = load i32, i32* @x.109
  %5 = load i32, i32* @y.110
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca i32, align 4
  %13 = alloca %struct._IO_FILE*, align 8
  %14 = alloca i64, align 8
  %15 = alloca i32, align 4
  %16 = alloca i64, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %13, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %13, metadata !5525, metadata !DIExpression()), !dbg !5526
  store i64 %1, i64* %14, align 8
  call void @llvm.dbg.declare(metadata i64* %14, metadata !5527, metadata !DIExpression()), !dbg !5528
  store i32 %2, i32* %15, align 4
  call void @llvm.dbg.declare(metadata i32* %15, metadata !5529, metadata !DIExpression()), !dbg !5530
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !5531
  %18 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %17, i32 0, i32 2, !dbg !5533
  %19 = load i8*, i8** %18, align 8, !dbg !5533
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !5534
  %21 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %20, i32 0, i32 1, !dbg !5535
  %22 = load i8*, i8** %21, align 8, !dbg !5535
  %23 = icmp eq i8* %19, %22, !dbg !5536
  %24 = load i32, i32* @x.109
  %25 = load i32, i32* @y.110
  %26 = sub i32 %24, 1
  %27 = mul i32 %24, %26
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %29, %30
  br i1 %31, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %23, label %32, label %126, !dbg !5537

32:                                               ; preds = %originalBBpart2
  %33 = load i32, i32* @x.109
  %34 = load i32, i32* @y.110
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %32, %originalBB1alteredBB
  %41 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !5538
  %42 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %41, i32 0, i32 5, !dbg !5539
  %43 = load i8*, i8** %42, align 8, !dbg !5539
  %44 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !5540
  %45 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %44, i32 0, i32 4, !dbg !5541
  %46 = load i8*, i8** %45, align 8, !dbg !5541
  %47 = icmp eq i8* %43, %46, !dbg !5542
  %48 = load i32, i32* @x.109
  %49 = load i32, i32* @y.110
  %50 = sub i32 %48, 1
  %51 = mul i32 %48, %50
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %53, %54
  br i1 %55, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %47, label %56, label %126, !dbg !5543

56:                                               ; preds = %originalBBpart24
  %57 = load i32, i32* @x.109
  %58 = load i32, i32* @y.110
  %59 = sub i32 %57, 1
  %60 = mul i32 %57, %59
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %58, 10
  %64 = or i1 %62, %63
  br i1 %64, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %56, %originalBB6alteredBB
  %65 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !5544
  %66 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %65, i32 0, i32 9, !dbg !5545
  %67 = load i8*, i8** %66, align 8, !dbg !5545
  %68 = icmp eq i8* %67, null, !dbg !5546
  %69 = load i32, i32* @x.109
  %70 = load i32, i32* @y.110
  %71 = sub i32 %69, 1
  %72 = mul i32 %69, %71
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %74, %75
  br i1 %76, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %68, label %77, label %126, !dbg !5547

77:                                               ; preds = %originalBBpart28
  call void @llvm.dbg.declare(metadata i64* %16, metadata !5548, metadata !DIExpression()), !dbg !5550
  %78 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !5551
  %79 = call i32 @fileno(%struct._IO_FILE* %78) #10, !dbg !5552
  %80 = load i64, i64* %14, align 8, !dbg !5553
  %81 = load i32, i32* %15, align 4, !dbg !5554
  %82 = call i64 @lseek(i32 %79, i64 %80, i32 %81) #10, !dbg !5555
  store i64 %82, i64* %16, align 8, !dbg !5550
  %83 = load i64, i64* %16, align 8, !dbg !5556
  %84 = icmp eq i64 %83, -1, !dbg !5558
  br i1 %84, label %85, label %102, !dbg !5559

85:                                               ; preds = %77
  %86 = load i32, i32* @x.109
  %87 = load i32, i32* @y.110
  %88 = sub i32 %86, 1
  %89 = mul i32 %86, %88
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %87, 10
  %93 = or i1 %91, %92
  br i1 %93, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %85, %originalBB10alteredBB
  store i32 -1, i32* %12, align 4, !dbg !5560
  %94 = load i32, i32* @x.109
  %95 = load i32, i32* @y.110
  %96 = sub i32 %94, 1
  %97 = mul i32 %94, %96
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %95, 10
  %101 = or i1 %99, %100
  br i1 %101, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %147, !dbg !5560

102:                                              ; preds = %77
  %103 = load i32, i32* @x.109
  %104 = load i32, i32* @y.110
  %105 = sub i32 %103, 1
  %106 = mul i32 %103, %105
  %107 = urem i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %104, 10
  %110 = or i1 %108, %109
  br i1 %110, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %102, %originalBB14alteredBB
  %111 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !5562
  %112 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %111, i32 0, i32 0, !dbg !5563
  %113 = load i32, i32* %112, align 8, !dbg !5564
  %114 = and i32 %113, -17, !dbg !5564
  store i32 %114, i32* %112, align 8, !dbg !5564
  %115 = load i64, i64* %16, align 8, !dbg !5565
  %116 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !5566
  %117 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %116, i32 0, i32 21, !dbg !5567
  store i64 %115, i64* %117, align 8, !dbg !5568
  store i32 0, i32* %12, align 4, !dbg !5569
  %118 = load i32, i32* @x.109
  %119 = load i32, i32* @y.110
  %120 = sub i32 %118, 1
  %121 = mul i32 %118, %120
  %122 = urem i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = icmp slt i32 %119, 10
  %125 = or i1 %123, %124
  br i1 %125, label %originalBBpart222, label %originalBB14alteredBB

originalBBpart222:                                ; preds = %originalBB14
  br label %147, !dbg !5569

126:                                              ; preds = %originalBBpart28, %originalBBpart24, %originalBBpart2
  %127 = load i32, i32* @x.109
  %128 = load i32, i32* @y.110
  %129 = sub i32 %127, 1
  %130 = mul i32 %127, %129
  %131 = urem i32 %130, 2
  %132 = icmp eq i32 %131, 0
  %133 = icmp slt i32 %128, 10
  %134 = or i1 %132, %133
  br i1 %134, label %originalBB24, label %originalBB24alteredBB

originalBB24:                                     ; preds = %126, %originalBB24alteredBB
  %135 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !5570
  %136 = load i64, i64* %14, align 8, !dbg !5571
  %137 = load i32, i32* %15, align 4, !dbg !5572
  %138 = call i32 @fseeko(%struct._IO_FILE* %135, i64 %136, i32 %137), !dbg !5573
  store i32 %138, i32* %12, align 4, !dbg !5574
  %139 = load i32, i32* @x.109
  %140 = load i32, i32* @y.110
  %141 = sub i32 %139, 1
  %142 = mul i32 %139, %141
  %143 = urem i32 %142, 2
  %144 = icmp eq i32 %143, 0
  %145 = icmp slt i32 %140, 10
  %146 = or i1 %144, %145
  br i1 %146, label %originalBBpart227, label %originalBB24alteredBB

originalBBpart227:                                ; preds = %originalBB24
  br label %147, !dbg !5574

147:                                              ; preds = %originalBBpart227, %originalBBpart222, %originalBBpart212
  %148 = load i32, i32* @x.109
  %149 = load i32, i32* @y.110
  %150 = sub i32 %148, 1
  %151 = mul i32 %148, %150
  %152 = urem i32 %151, 2
  %153 = icmp eq i32 %152, 0
  %154 = icmp slt i32 %149, 10
  %155 = or i1 %153, %154
  br i1 %155, label %originalBB29, label %originalBB29alteredBB

originalBB29:                                     ; preds = %147, %originalBB29alteredBB
  %156 = load i32, i32* %12, align 4, !dbg !5575
  %157 = load i32, i32* @x.109
  %158 = load i32, i32* @y.110
  %159 = sub i32 %157, 1
  %160 = mul i32 %157, %159
  %161 = urem i32 %160, 2
  %162 = icmp eq i32 %161, 0
  %163 = icmp slt i32 %158, 10
  %164 = or i1 %162, %163
  br i1 %164, label %originalBBpart231, label %originalBB29alteredBB

originalBBpart231:                                ; preds = %originalBB29
  ret i32 %156, !dbg !5575

originalBBalteredBB:                              ; preds = %originalBB, %3
  %165 = alloca i32, align 4
  %166 = alloca %struct._IO_FILE*, align 8
  %167 = alloca i64, align 8
  %168 = alloca i32, align 4
  %169 = alloca i64, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %166, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %166, metadata !5576, metadata !DIExpression()), !dbg !5526
  store i64 %1, i64* %167, align 8
  call void @llvm.dbg.declare(metadata i64* %167, metadata !5615, metadata !DIExpression()), !dbg !5528
  store i32 %2, i32* %168, align 4
  call void @llvm.dbg.declare(metadata i32* %168, metadata !5616, metadata !DIExpression()), !dbg !5530
  %170 = load %struct._IO_FILE*, %struct._IO_FILE** %166, align 8, !dbg !5531
  %171 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %170, i32 0, i32 2, !dbg !5533
  %172 = load i8*, i8** %171, align 8, !dbg !5533
  %173 = load %struct._IO_FILE*, %struct._IO_FILE** %166, align 8, !dbg !5534
  %174 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %173, i32 0, i32 1, !dbg !5535
  %175 = load i8*, i8** %174, align 8, !dbg !5535
  %176 = icmp eq i8* %172, %175, !dbg !5536
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %32
  %177 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !5538
  %178 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %177, i32 0, i32 5, !dbg !5539
  %179 = load i8*, i8** %178, align 8, !dbg !5539
  %180 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !5540
  %181 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %180, i32 0, i32 4, !dbg !5541
  %182 = load i8*, i8** %181, align 8, !dbg !5541
  %183 = icmp eq i8* %179, %182, !dbg !5542
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %56
  %184 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !5544
  %185 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %184, i32 0, i32 9, !dbg !5545
  %186 = load i8*, i8** %185, align 8, !dbg !5545
  %187 = icmp eq i8* %186, null, !dbg !5546
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %85
  store i32 -1, i32* %12, align 4, !dbg !5560
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %102
  %188 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !5562
  %189 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %188, i32 0, i32 0, !dbg !5563
  %190 = load i32, i32* %189, align 8, !dbg !5564
  %_ = sub i32 %190, -17
  %gen = mul i32 %_, -17
  %_15 = shl i32 %190, -17
  %_16 = shl i32 %190, -17
  %_17 = shl i32 %190, -17
  %_18 = sub i32 %190, -17
  %gen19 = mul i32 %_18, -17
  %_20 = shl i32 %190, -17
  %191 = and i32 %190, -17, !dbg !5564
  store i32 %191, i32* %189, align 8, !dbg !5564
  %192 = load i64, i64* %16, align 8, !dbg !5565
  %193 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !5566
  %194 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %193, i32 0, i32 21, !dbg !5567
  store i64 %192, i64* %194, align 8, !dbg !5568
  store i32 0, i32* %12, align 4, !dbg !5569
  br label %originalBB14

originalBB24alteredBB:                            ; preds = %originalBB24, %126
  %195 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !5570
  %196 = load i64, i64* %14, align 8, !dbg !5571
  %197 = load i32, i32* %15, align 4, !dbg !5572
  %198 = call i32 @fseeko(%struct._IO_FILE* %195, i64 %196, i32 %197), !dbg !5573
  store i32 %198, i32* %12, align 4, !dbg !5574
  br label %originalBB24

originalBB29alteredBB:                            ; preds = %originalBB29, %147
  %199 = load i32, i32* %12, align 4, !dbg !5575
  br label %originalBB29
}

declare dso_local i32 @fseeko(%struct._IO_FILE*, i64, i32) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @c_tolower(i32) #4 !dbg !5617 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !5621, metadata !DIExpression()), !dbg !5622
  %4 = load i32, i32* %3, align 4, !dbg !5623
  switch i32 %4, label %25 [
    i32 65, label %5
    i32 66, label %5
    i32 67, label %5
    i32 68, label %5
    i32 69, label %5
    i32 70, label %5
    i32 71, label %5
    i32 72, label %5
    i32 73, label %5
    i32 74, label %5
    i32 75, label %5
    i32 76, label %5
    i32 77, label %5
    i32 78, label %5
    i32 79, label %5
    i32 80, label %5
    i32 81, label %5
    i32 82, label %5
    i32 83, label %5
    i32 84, label %5
    i32 85, label %5
    i32 86, label %5
    i32 87, label %5
    i32 88, label %5
    i32 89, label %5
    i32 90, label %5
  ], !dbg !5624

5:                                                ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1
  %6 = load i32, i32* @x.111
  %7 = load i32, i32* @y.112
  %8 = sub i32 %6, 1
  %9 = mul i32 %6, %8
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %7, 10
  %13 = or i1 %11, %12
  br i1 %13, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %5, %originalBBalteredBB
  %14 = load i32, i32* %3, align 4, !dbg !5625
  %15 = sub nsw i32 %14, 65, !dbg !5627
  %16 = add nsw i32 %15, 97, !dbg !5628
  store i32 %16, i32* %2, align 4, !dbg !5629
  %17 = load i32, i32* @x.111
  %18 = load i32, i32* @y.112
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %43, !dbg !5629

25:                                               ; preds = %1
  %26 = load i32, i32* @x.111
  %27 = load i32, i32* @y.112
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %25, %originalBB22alteredBB
  %34 = load i32, i32* %3, align 4, !dbg !5630
  store i32 %34, i32* %2, align 4, !dbg !5631
  %35 = load i32, i32* @x.111
  %36 = load i32, i32* @y.112
  %37 = sub i32 %35, 1
  %38 = mul i32 %35, %37
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %40, %41
  br i1 %42, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br label %43, !dbg !5631

43:                                               ; preds = %originalBBpart224, %originalBBpart2
  %44 = load i32, i32* %2, align 4, !dbg !5632
  ret i32 %44, !dbg !5632

originalBBalteredBB:                              ; preds = %originalBB, %5
  %45 = load i32, i32* %3, align 4, !dbg !5625
  %_ = sub i32 0, %45
  %gen = add i32 %_, 65
  %_1 = shl i32 %45, 65
  %_2 = sub i32 %45, 65
  %gen3 = mul i32 %_2, 65
  %_4 = sub i32 %45, 65
  %gen5 = mul i32 %_4, 65
  %_6 = sub i32 %45, 65
  %gen7 = mul i32 %_6, 65
  %_8 = shl i32 %45, 65
  %46 = sub nsw i32 %45, 65, !dbg !5627
  %_9 = shl i32 %46, 97
  %_10 = sub i32 %46, 97
  %gen11 = mul i32 %_10, 97
  %_12 = sub i32 0, %46
  %gen13 = add i32 %_12, 97
  %_14 = sub i32 0, %46
  %gen15 = add i32 %_14, 97
  %_16 = sub i32 0, %46
  %gen17 = add i32 %_16, 97
  %_18 = sub i32 0, %46
  %gen19 = add i32 %_18, 97
  %_20 = sub i32 %46, 97
  %gen21 = mul i32 %_20, 97
  %47 = add nsw i32 %46, 97, !dbg !5628
  store i32 %47, i32* %2, align 4, !dbg !5629
  br label %originalBB

originalBB22alteredBB:                            ; preds = %originalBB22, %25
  %48 = load i32, i32* %3, align 4, !dbg !5630
  store i32 %48, i32* %2, align 4, !dbg !5631
  br label %originalBB22
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @getugroups(i32, i32*, i8*, i32) #4 !dbg !5633 {
  %5 = alloca i32, align 4
  %6 = alloca i32*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i8**, align 8
  %11 = alloca %struct.group*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  store i32 %0, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !5637, metadata !DIExpression()), !dbg !5638
  store i32* %1, i32** %6, align 8
  call void @llvm.dbg.declare(metadata i32** %6, metadata !5639, metadata !DIExpression()), !dbg !5640
  store i8* %2, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !5641, metadata !DIExpression()), !dbg !5642
  store i32 %3, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !5643, metadata !DIExpression()), !dbg !5644
  call void @llvm.dbg.declare(metadata i32* %9, metadata !5645, metadata !DIExpression()), !dbg !5646
  store i32 0, i32* %9, align 4, !dbg !5646
  %14 = load i32, i32* %8, align 4, !dbg !5647
  %15 = icmp ne i32 %14, -1, !dbg !5649
  br i1 %15, label %16, label %44, !dbg !5650

16:                                               ; preds = %4
  %17 = load i32, i32* %5, align 4, !dbg !5651
  %18 = icmp ne i32 %17, 0, !dbg !5654
  br i1 %18, label %19, label %41, !dbg !5655

19:                                               ; preds = %16
  %20 = load i32, i32* @x.113
  %21 = load i32, i32* @y.114
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %19, %originalBBalteredBB
  %28 = load i32, i32* %8, align 4, !dbg !5656
  %29 = load i32*, i32** %6, align 8, !dbg !5657
  %30 = load i32, i32* %9, align 4, !dbg !5658
  %31 = sext i32 %30 to i64, !dbg !5657
  %32 = getelementptr inbounds i32, i32* %29, i64 %31, !dbg !5657
  store i32 %28, i32* %32, align 4, !dbg !5659
  %33 = load i32, i32* @x.113
  %34 = load i32, i32* @y.114
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %41, !dbg !5657

41:                                               ; preds = %originalBBpart2, %16
  %42 = load i32, i32* %9, align 4, !dbg !5660
  %43 = add nsw i32 %42, 1, !dbg !5660
  store i32 %43, i32* %9, align 4, !dbg !5660
  br label %44, !dbg !5661

44:                                               ; preds = %41, %4
  %45 = load i32, i32* @x.113
  %46 = load i32, i32* @y.114
  %47 = sub i32 %45, 1
  %48 = mul i32 %45, %47
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %50, %51
  br i1 %52, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %44, %originalBB1alteredBB
  call void @setgrent(), !dbg !5662
  %53 = load i32, i32* @x.113
  %54 = load i32, i32* @y.114
  %55 = sub i32 %53, 1
  %56 = mul i32 %53, %55
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %54, 10
  %60 = or i1 %58, %59
  br i1 %60, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %61, !dbg !5663

61:                                               ; preds = %409, %originalBBpart24
  call void @llvm.dbg.declare(metadata i8*** %10, metadata !5664, metadata !DIExpression()), !dbg !5666
  call void @llvm.dbg.declare(metadata %struct.group** %11, metadata !5667, metadata !DIExpression()), !dbg !5675
  %62 = load i32, i32* @x.113
  %63 = load i32, i32* @y.114
  %64 = sub i32 %62, 1
  %65 = mul i32 %62, %64
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %63, 10
  %69 = or i1 %67, %68
  br i1 %69, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %61, %originalBB6alteredBB
  %70 = call i32* @__errno_location() #15, !dbg !5676
  store i32 0, i32* %70, align 4, !dbg !5677
  %71 = call %struct.group* @getgrent(), !dbg !5678
  store %struct.group* %71, %struct.group** %11, align 8, !dbg !5679
  %72 = load %struct.group*, %struct.group** %11, align 8, !dbg !5680
  %73 = icmp eq %struct.group* %72, null, !dbg !5682
  %74 = load i32, i32* @x.113
  %75 = load i32, i32* @y.114
  %76 = sub i32 %74, 1
  %77 = mul i32 %74, %76
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %75, 10
  %81 = or i1 %79, %80
  br i1 %81, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %73, label %82, label %99, !dbg !5683

82:                                               ; preds = %originalBBpart28
  %83 = load i32, i32* @x.113
  %84 = load i32, i32* @y.114
  %85 = sub i32 %83, 1
  %86 = mul i32 %83, %85
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %84, 10
  %90 = or i1 %88, %89
  br i1 %90, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %82, %originalBB10alteredBB
  %91 = load i32, i32* @x.113
  %92 = load i32, i32* @y.114
  %93 = sub i32 %91, 1
  %94 = mul i32 %91, %93
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %92, 10
  %98 = or i1 %96, %97
  br i1 %98, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %410, !dbg !5684

99:                                               ; preds = %originalBBpart28
  %100 = load i32, i32* @x.113
  %101 = load i32, i32* @y.114
  %102 = sub i32 %100, 1
  %103 = mul i32 %100, %102
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %101, 10
  %107 = or i1 %105, %106
  br i1 %107, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %99, %originalBB14alteredBB
  %108 = load %struct.group*, %struct.group** %11, align 8, !dbg !5685
  %109 = getelementptr inbounds %struct.group, %struct.group* %108, i32 0, i32 3, !dbg !5687
  %110 = load i8**, i8*** %109, align 8, !dbg !5687
  store i8** %110, i8*** %10, align 8, !dbg !5688
  %111 = load i32, i32* @x.113
  %112 = load i32, i32* @y.114
  %113 = sub i32 %111, 1
  %114 = mul i32 %111, %113
  %115 = urem i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %112, 10
  %118 = or i1 %116, %117
  br i1 %118, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %119, !dbg !5689

119:                                              ; preds = %originalBBpart272, %originalBBpart216
  %120 = load i32, i32* @x.113
  %121 = load i32, i32* @y.114
  %122 = sub i32 %120, 1
  %123 = mul i32 %120, %122
  %124 = urem i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = icmp slt i32 %121, 10
  %127 = or i1 %125, %126
  br i1 %127, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %119, %originalBB18alteredBB
  %128 = load i8**, i8*** %10, align 8, !dbg !5690
  %129 = load i8*, i8** %128, align 8, !dbg !5692
  %130 = icmp ne i8* %129, null, !dbg !5693
  %131 = load i32, i32* @x.113
  %132 = load i32, i32* @y.114
  %133 = sub i32 %131, 1
  %134 = mul i32 %131, %133
  %135 = urem i32 %134, 2
  %136 = icmp eq i32 %135, 0
  %137 = icmp slt i32 %132, 10
  %138 = or i1 %136, %137
  br i1 %138, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br i1 %130, label %139, label %409, !dbg !5693

139:                                              ; preds = %originalBBpart220
  call void @llvm.dbg.declare(metadata i32* %12, metadata !5694, metadata !DIExpression()), !dbg !5696
  %140 = load i32, i32* @x.113
  %141 = load i32, i32* @y.114
  %142 = sub i32 %140, 1
  %143 = mul i32 %140, %142
  %144 = urem i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = icmp slt i32 %141, 10
  %147 = or i1 %145, %146
  br i1 %147, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %139, %originalBB22alteredBB
  %148 = load i8*, i8** %7, align 8, !dbg !5697
  %149 = load i8**, i8*** %10, align 8, !dbg !5697
  %150 = load i8*, i8** %149, align 8, !dbg !5697
  %151 = call i32 @strcmp(i8* %148, i8* %150) #13, !dbg !5697
  %152 = icmp eq i32 %151, 0, !dbg !5697
  %153 = load i32, i32* @x.113
  %154 = load i32, i32* @y.114
  %155 = sub i32 %153, 1
  %156 = mul i32 %153, %155
  %157 = urem i32 %156, 2
  %158 = icmp eq i32 %157, 0
  %159 = icmp slt i32 %154, 10
  %160 = or i1 %158, %159
  br i1 %160, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br i1 %152, label %178, label %161, !dbg !5699

161:                                              ; preds = %originalBBpart224
  %162 = load i32, i32* @x.113
  %163 = load i32, i32* @y.114
  %164 = sub i32 %162, 1
  %165 = mul i32 %162, %164
  %166 = urem i32 %165, 2
  %167 = icmp eq i32 %166, 0
  %168 = icmp slt i32 %163, 10
  %169 = or i1 %167, %168
  br i1 %169, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %161, %originalBB26alteredBB
  %170 = load i32, i32* @x.113
  %171 = load i32, i32* @y.114
  %172 = sub i32 %170, 1
  %173 = mul i32 %170, %172
  %174 = urem i32 %173, 2
  %175 = icmp eq i32 %174, 0
  %176 = icmp slt i32 %171, 10
  %177 = or i1 %175, %176
  br i1 %177, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br label %390, !dbg !5700

178:                                              ; preds = %originalBBpart224
  store i32 0, i32* %12, align 4, !dbg !5701
  br label %179, !dbg !5703

179:                                              ; preds = %originalBBpart240, %178
  %180 = load i32, i32* %12, align 4, !dbg !5704
  %181 = load i32, i32* %9, align 4, !dbg !5706
  %182 = icmp slt i32 %180, %181, !dbg !5707
  br i1 %182, label %183, label %249, !dbg !5708

183:                                              ; preds = %179
  %184 = load i32*, i32** %6, align 8, !dbg !5709
  %185 = icmp ne i32* %184, null, !dbg !5709
  br i1 %185, label %186, label %213, !dbg !5711

186:                                              ; preds = %183
  %187 = load i32, i32* @x.113
  %188 = load i32, i32* @y.114
  %189 = sub i32 %187, 1
  %190 = mul i32 %187, %189
  %191 = urem i32 %190, 2
  %192 = icmp eq i32 %191, 0
  %193 = icmp slt i32 %188, 10
  %194 = or i1 %192, %193
  br i1 %194, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %186, %originalBB30alteredBB
  %195 = load i32*, i32** %6, align 8, !dbg !5712
  %196 = load i32, i32* %12, align 4, !dbg !5713
  %197 = sext i32 %196 to i64, !dbg !5712
  %198 = getelementptr inbounds i32, i32* %195, i64 %197, !dbg !5712
  %199 = load i32, i32* %198, align 4, !dbg !5712
  %200 = load %struct.group*, %struct.group** %11, align 8, !dbg !5714
  %201 = getelementptr inbounds %struct.group, %struct.group* %200, i32 0, i32 2, !dbg !5715
  %202 = load i32, i32* %201, align 8, !dbg !5715
  %203 = icmp eq i32 %199, %202, !dbg !5716
  %204 = load i32, i32* @x.113
  %205 = load i32, i32* @y.114
  %206 = sub i32 %204, 1
  %207 = mul i32 %204, %206
  %208 = urem i32 %207, 2
  %209 = icmp eq i32 %208, 0
  %210 = icmp slt i32 %205, 10
  %211 = or i1 %209, %210
  br i1 %211, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br i1 %203, label %212, label %213, !dbg !5717

212:                                              ; preds = %originalBBpart232
  br label %249, !dbg !5718

213:                                              ; preds = %originalBBpart232, %183
  %214 = load i32, i32* @x.113
  %215 = load i32, i32* @y.114
  %216 = sub i32 %214, 1
  %217 = mul i32 %214, %216
  %218 = urem i32 %217, 2
  %219 = icmp eq i32 %218, 0
  %220 = icmp slt i32 %215, 10
  %221 = or i1 %219, %220
  br i1 %221, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %213, %originalBB34alteredBB
  %222 = load i32, i32* @x.113
  %223 = load i32, i32* @y.114
  %224 = sub i32 %222, 1
  %225 = mul i32 %222, %224
  %226 = urem i32 %225, 2
  %227 = icmp eq i32 %226, 0
  %228 = icmp slt i32 %223, 10
  %229 = or i1 %227, %228
  br i1 %229, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  br label %230, !dbg !5715

230:                                              ; preds = %originalBBpart236
  %231 = load i32, i32* @x.113
  %232 = load i32, i32* @y.114
  %233 = sub i32 %231, 1
  %234 = mul i32 %231, %233
  %235 = urem i32 %234, 2
  %236 = icmp eq i32 %235, 0
  %237 = icmp slt i32 %232, 10
  %238 = or i1 %236, %237
  br i1 %238, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %230, %originalBB38alteredBB
  %239 = load i32, i32* %12, align 4, !dbg !5719
  %240 = add nsw i32 %239, 1, !dbg !5719
  store i32 %240, i32* %12, align 4, !dbg !5719
  %241 = load i32, i32* @x.113
  %242 = load i32, i32* @y.114
  %243 = sub i32 %241, 1
  %244 = mul i32 %241, %243
  %245 = urem i32 %244, 2
  %246 = icmp eq i32 %245, 0
  %247 = icmp slt i32 %242, 10
  %248 = or i1 %246, %247
  br i1 %248, label %originalBBpart240, label %originalBB38alteredBB

originalBBpart240:                                ; preds = %originalBB38
  br label %179, !dbg !5720, !llvm.loop !5721

249:                                              ; preds = %212, %179
  %250 = load i32, i32* @x.113
  %251 = load i32, i32* @y.114
  %252 = sub i32 %250, 1
  %253 = mul i32 %250, %252
  %254 = urem i32 %253, 2
  %255 = icmp eq i32 %254, 0
  %256 = icmp slt i32 %251, 10
  %257 = or i1 %255, %256
  br i1 %257, label %originalBB42, label %originalBB42alteredBB

originalBB42:                                     ; preds = %249, %originalBB42alteredBB
  %258 = load i32, i32* %12, align 4, !dbg !5723
  %259 = load i32, i32* %9, align 4, !dbg !5725
  %260 = icmp eq i32 %258, %259, !dbg !5726
  %261 = load i32, i32* @x.113
  %262 = load i32, i32* @y.114
  %263 = sub i32 %261, 1
  %264 = mul i32 %261, %263
  %265 = urem i32 %264, 2
  %266 = icmp eq i32 %265, 0
  %267 = icmp slt i32 %262, 10
  %268 = or i1 %266, %267
  br i1 %268, label %originalBBpart244, label %originalBB42alteredBB

originalBBpart244:                                ; preds = %originalBB42
  br i1 %260, label %269, label %389, !dbg !5727

269:                                              ; preds = %originalBBpart244
  %270 = load i32, i32* @x.113
  %271 = load i32, i32* @y.114
  %272 = sub i32 %270, 1
  %273 = mul i32 %270, %272
  %274 = urem i32 %273, 2
  %275 = icmp eq i32 %274, 0
  %276 = icmp slt i32 %271, 10
  %277 = or i1 %275, %276
  br i1 %277, label %originalBB46, label %originalBB46alteredBB

originalBB46:                                     ; preds = %269, %originalBB46alteredBB
  %278 = load i32, i32* %5, align 4, !dbg !5728
  %279 = icmp ne i32 %278, 0, !dbg !5731
  %280 = load i32, i32* @x.113
  %281 = load i32, i32* @y.114
  %282 = sub i32 %280, 1
  %283 = mul i32 %280, %282
  %284 = urem i32 %283, 2
  %285 = icmp eq i32 %284, 0
  %286 = icmp slt i32 %281, 10
  %287 = or i1 %285, %286
  br i1 %287, label %originalBBpart248, label %originalBB46alteredBB

originalBBpart248:                                ; preds = %originalBB46
  br i1 %279, label %288, label %349, !dbg !5732

288:                                              ; preds = %originalBBpart248
  %289 = load i32, i32* @x.113
  %290 = load i32, i32* @y.114
  %291 = sub i32 %289, 1
  %292 = mul i32 %289, %291
  %293 = urem i32 %292, 2
  %294 = icmp eq i32 %293, 0
  %295 = icmp slt i32 %290, 10
  %296 = or i1 %294, %295
  br i1 %296, label %originalBB50, label %originalBB50alteredBB

originalBB50:                                     ; preds = %288, %originalBB50alteredBB
  %297 = load i32, i32* %9, align 4, !dbg !5733
  %298 = load i32, i32* %5, align 4, !dbg !5736
  %299 = icmp sge i32 %297, %298, !dbg !5737
  %300 = load i32, i32* @x.113
  %301 = load i32, i32* @y.114
  %302 = sub i32 %300, 1
  %303 = mul i32 %300, %302
  %304 = urem i32 %303, 2
  %305 = icmp eq i32 %304, 0
  %306 = icmp slt i32 %301, 10
  %307 = or i1 %305, %306
  br i1 %307, label %originalBBpart252, label %originalBB50alteredBB

originalBBpart252:                                ; preds = %originalBB50
  br i1 %299, label %308, label %325, !dbg !5738

308:                                              ; preds = %originalBBpart252
  %309 = load i32, i32* @x.113
  %310 = load i32, i32* @y.114
  %311 = sub i32 %309, 1
  %312 = mul i32 %309, %311
  %313 = urem i32 %312, 2
  %314 = icmp eq i32 %313, 0
  %315 = icmp slt i32 %310, 10
  %316 = or i1 %314, %315
  br i1 %316, label %originalBB54, label %originalBB54alteredBB

originalBB54:                                     ; preds = %308, %originalBB54alteredBB
  %317 = load i32, i32* @x.113
  %318 = load i32, i32* @y.114
  %319 = sub i32 %317, 1
  %320 = mul i32 %317, %319
  %321 = urem i32 %320, 2
  %322 = icmp eq i32 %321, 0
  %323 = icmp slt i32 %318, 10
  %324 = or i1 %322, %323
  br i1 %324, label %originalBBpart256, label %originalBB54alteredBB

originalBBpart256:                                ; preds = %originalBB54
  br label %432, !dbg !5739

325:                                              ; preds = %originalBBpart252
  %326 = load i32, i32* @x.113
  %327 = load i32, i32* @y.114
  %328 = sub i32 %326, 1
  %329 = mul i32 %326, %328
  %330 = urem i32 %329, 2
  %331 = icmp eq i32 %330, 0
  %332 = icmp slt i32 %327, 10
  %333 = or i1 %331, %332
  br i1 %333, label %originalBB58, label %originalBB58alteredBB

originalBB58:                                     ; preds = %325, %originalBB58alteredBB
  %334 = load %struct.group*, %struct.group** %11, align 8, !dbg !5740
  %335 = getelementptr inbounds %struct.group, %struct.group* %334, i32 0, i32 2, !dbg !5741
  %336 = load i32, i32* %335, align 8, !dbg !5741
  %337 = load i32*, i32** %6, align 8, !dbg !5742
  %338 = load i32, i32* %9, align 4, !dbg !5743
  %339 = sext i32 %338 to i64, !dbg !5742
  %340 = getelementptr inbounds i32, i32* %337, i64 %339, !dbg !5742
  store i32 %336, i32* %340, align 4, !dbg !5744
  %341 = load i32, i32* @x.113
  %342 = load i32, i32* @y.114
  %343 = sub i32 %341, 1
  %344 = mul i32 %341, %343
  %345 = urem i32 %344, 2
  %346 = icmp eq i32 %345, 0
  %347 = icmp slt i32 %342, 10
  %348 = or i1 %346, %347
  br i1 %348, label %originalBBpart260, label %originalBB58alteredBB

originalBBpart260:                                ; preds = %originalBB58
  br label %349, !dbg !5745

349:                                              ; preds = %originalBBpart260, %originalBBpart248
  %350 = load i32, i32* @x.113
  %351 = load i32, i32* @y.114
  %352 = sub i32 %350, 1
  %353 = mul i32 %350, %352
  %354 = urem i32 %353, 2
  %355 = icmp eq i32 %354, 0
  %356 = icmp slt i32 %351, 10
  %357 = or i1 %355, %356
  br i1 %357, label %originalBB62, label %originalBB62alteredBB

originalBB62:                                     ; preds = %349, %originalBB62alteredBB
  %358 = load i32, i32* %9, align 4, !dbg !5746
  %359 = icmp eq i32 %358, 2147483647, !dbg !5748
  %360 = load i32, i32* @x.113
  %361 = load i32, i32* @y.114
  %362 = sub i32 %360, 1
  %363 = mul i32 %360, %362
  %364 = urem i32 %363, 2
  %365 = icmp eq i32 %364, 0
  %366 = icmp slt i32 %361, 10
  %367 = or i1 %365, %366
  br i1 %367, label %originalBBpart264, label %originalBB62alteredBB

originalBBpart264:                                ; preds = %originalBB62
  br i1 %359, label %368, label %386, !dbg !5749

368:                                              ; preds = %originalBBpart264
  %369 = load i32, i32* @x.113
  %370 = load i32, i32* @y.114
  %371 = sub i32 %369, 1
  %372 = mul i32 %369, %371
  %373 = urem i32 %372, 2
  %374 = icmp eq i32 %373, 0
  %375 = icmp slt i32 %370, 10
  %376 = or i1 %374, %375
  br i1 %376, label %originalBB66, label %originalBB66alteredBB

originalBB66:                                     ; preds = %368, %originalBB66alteredBB
  %377 = call i32* @__errno_location() #15, !dbg !5750
  store i32 75, i32* %377, align 4, !dbg !5752
  %378 = load i32, i32* @x.113
  %379 = load i32, i32* @y.114
  %380 = sub i32 %378, 1
  %381 = mul i32 %378, %380
  %382 = urem i32 %381, 2
  %383 = icmp eq i32 %382, 0
  %384 = icmp slt i32 %379, 10
  %385 = or i1 %383, %384
  br i1 %385, label %originalBBpart268, label %originalBB66alteredBB

originalBBpart268:                                ; preds = %originalBB66
  br label %432, !dbg !5753

386:                                              ; preds = %originalBBpart264
  %387 = load i32, i32* %9, align 4, !dbg !5754
  %388 = add nsw i32 %387, 1, !dbg !5754
  store i32 %388, i32* %9, align 4, !dbg !5754
  br label %389, !dbg !5755

389:                                              ; preds = %386, %originalBBpart244
  br label %390, !dbg !5756

390:                                              ; preds = %389, %originalBBpart228
  %391 = load i32, i32* @x.113
  %392 = load i32, i32* @y.114
  %393 = sub i32 %391, 1
  %394 = mul i32 %391, %393
  %395 = urem i32 %394, 2
  %396 = icmp eq i32 %395, 0
  %397 = icmp slt i32 %392, 10
  %398 = or i1 %396, %397
  br i1 %398, label %originalBB70, label %originalBB70alteredBB

originalBB70:                                     ; preds = %390, %originalBB70alteredBB
  %399 = load i8**, i8*** %10, align 8, !dbg !5757
  %400 = getelementptr inbounds i8*, i8** %399, i32 1, !dbg !5757
  store i8** %400, i8*** %10, align 8, !dbg !5757
  %401 = load i32, i32* @x.113
  %402 = load i32, i32* @y.114
  %403 = sub i32 %401, 1
  %404 = mul i32 %401, %403
  %405 = urem i32 %404, 2
  %406 = icmp eq i32 %405, 0
  %407 = icmp slt i32 %402, 10
  %408 = or i1 %406, %407
  br i1 %408, label %originalBBpart272, label %originalBB70alteredBB

originalBBpart272:                                ; preds = %originalBB70
  br label %119, !dbg !5758, !llvm.loop !5759

409:                                              ; preds = %originalBBpart220
  br label %61, !dbg !5663, !llvm.loop !5761

410:                                              ; preds = %originalBBpart212
  %411 = load i32, i32* @x.113
  %412 = load i32, i32* @y.114
  %413 = sub i32 %411, 1
  %414 = mul i32 %411, %413
  %415 = urem i32 %414, 2
  %416 = icmp eq i32 %415, 0
  %417 = icmp slt i32 %412, 10
  %418 = or i1 %416, %417
  br i1 %418, label %originalBB74, label %originalBB74alteredBB

originalBB74:                                     ; preds = %410, %originalBB74alteredBB
  %419 = call i32* @__errno_location() #15, !dbg !5763
  %420 = load i32, i32* %419, align 4, !dbg !5763
  %421 = icmp ne i32 %420, 0, !dbg !5765
  %422 = load i32, i32* @x.113
  %423 = load i32, i32* @y.114
  %424 = sub i32 %422, 1
  %425 = mul i32 %422, %424
  %426 = urem i32 %425, 2
  %427 = icmp eq i32 %426, 0
  %428 = icmp slt i32 %423, 10
  %429 = or i1 %427, %428
  br i1 %429, label %originalBBpart276, label %originalBB74alteredBB

originalBBpart276:                                ; preds = %originalBB74
  br i1 %421, label %430, label %431, !dbg !5766

430:                                              ; preds = %originalBBpart276
  store i32 -1, i32* %9, align 4, !dbg !5767
  br label %431, !dbg !5768

431:                                              ; preds = %430, %originalBBpart276
  br label %432, !dbg !5769

432:                                              ; preds = %431, %originalBBpart268, %originalBBpart256
  call void @llvm.dbg.label(metadata !5770), !dbg !5771
  call void @llvm.dbg.declare(metadata i32* %13, metadata !5772, metadata !DIExpression()), !dbg !5774
  %433 = load i32, i32* @x.113
  %434 = load i32, i32* @y.114
  %435 = sub i32 %433, 1
  %436 = mul i32 %433, %435
  %437 = urem i32 %436, 2
  %438 = icmp eq i32 %437, 0
  %439 = icmp slt i32 %434, 10
  %440 = or i1 %438, %439
  br i1 %440, label %originalBB78, label %originalBB78alteredBB

originalBB78:                                     ; preds = %432, %originalBB78alteredBB
  %441 = call i32* @__errno_location() #15, !dbg !5775
  %442 = load i32, i32* %441, align 4, !dbg !5775
  store i32 %442, i32* %13, align 4, !dbg !5774
  call void @endgrent(), !dbg !5776
  %443 = load i32, i32* %13, align 4, !dbg !5777
  %444 = call i32* @__errno_location() #15, !dbg !5778
  store i32 %443, i32* %444, align 4, !dbg !5779
  %445 = load i32, i32* %9, align 4, !dbg !5780
  %446 = load i32, i32* @x.113
  %447 = load i32, i32* @y.114
  %448 = sub i32 %446, 1
  %449 = mul i32 %446, %448
  %450 = urem i32 %449, 2
  %451 = icmp eq i32 %450, 0
  %452 = icmp slt i32 %447, 10
  %453 = or i1 %451, %452
  br i1 %453, label %originalBBpart280, label %originalBB78alteredBB

originalBBpart280:                                ; preds = %originalBB78
  ret i32 %445, !dbg !5781

originalBBalteredBB:                              ; preds = %originalBB, %19
  %454 = load i32, i32* %8, align 4, !dbg !5656
  %455 = load i32*, i32** %6, align 8, !dbg !5657
  %456 = load i32, i32* %9, align 4, !dbg !5658
  %457 = sext i32 %456 to i64, !dbg !5657
  %458 = getelementptr inbounds i32, i32* %455, i64 %457, !dbg !5657
  store i32 %454, i32* %458, align 4, !dbg !5659
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %44
  call void @setgrent(), !dbg !5662
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %61
  %459 = call i32* @__errno_location() #15, !dbg !5676
  store i32 0, i32* %459, align 4, !dbg !5677
  %460 = call %struct.group* @getgrent(), !dbg !5678
  store %struct.group* %460, %struct.group** %11, align 8, !dbg !5679
  %461 = load %struct.group*, %struct.group** %11, align 8, !dbg !5680
  %462 = icmp eq %struct.group* %461, null, !dbg !5682
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %82
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %99
  %463 = load %struct.group*, %struct.group** %11, align 8, !dbg !5685
  %464 = getelementptr inbounds %struct.group, %struct.group* %463, i32 0, i32 3, !dbg !5687
  %465 = load i8**, i8*** %464, align 8, !dbg !5687
  store i8** %465, i8*** %10, align 8, !dbg !5688
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %119
  %466 = load i8**, i8*** %10, align 8, !dbg !5690
  %467 = load i8*, i8** %466, align 8, !dbg !5692
  %468 = icmp ne i8* %467, null, !dbg !5693
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %139
  %469 = load i8*, i8** %7, align 8, !dbg !5697
  %470 = load i8**, i8*** %10, align 8, !dbg !5697
  %471 = load i8*, i8** %470, align 8, !dbg !5697
  %472 = call i32 @strcmp(i8* %469, i8* %471) #13, !dbg !5697
  %473 = icmp eq i32 %472, 0, !dbg !5697
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %161
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %186
  %474 = load i32*, i32** %6, align 8, !dbg !5712
  %475 = load i32, i32* %12, align 4, !dbg !5713
  %476 = sext i32 %475 to i64, !dbg !5712
  %477 = getelementptr inbounds i32, i32* %474, i64 %476, !dbg !5712
  %478 = load i32, i32* %477, align 4, !dbg !5712
  %479 = load %struct.group*, %struct.group** %11, align 8, !dbg !5714
  %480 = getelementptr inbounds %struct.group, %struct.group* %479, i32 0, i32 2, !dbg !5715
  %481 = load i32, i32* %480, align 8, !dbg !5715
  %482 = icmp eq i32 %478, %481, !dbg !5716
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %213
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %230
  %483 = load i32, i32* %12, align 4, !dbg !5719
  %_ = sub i32 0, %483
  %gen = add i32 %_, 1
  %484 = add nsw i32 %483, 1, !dbg !5719
  store i32 %484, i32* %12, align 4, !dbg !5719
  br label %originalBB38

originalBB42alteredBB:                            ; preds = %originalBB42, %249
  %485 = load i32, i32* %12, align 4, !dbg !5723
  %486 = load i32, i32* %9, align 4, !dbg !5725
  %487 = icmp eq i32 %485, %486, !dbg !5726
  br label %originalBB42

originalBB46alteredBB:                            ; preds = %originalBB46, %269
  %488 = load i32, i32* %5, align 4, !dbg !5728
  %489 = icmp ne i32 %488, 0, !dbg !5731
  br label %originalBB46

originalBB50alteredBB:                            ; preds = %originalBB50, %288
  %490 = load i32, i32* %9, align 4, !dbg !5733
  %491 = load i32, i32* %5, align 4, !dbg !5736
  %492 = icmp sge i32 %490, %491, !dbg !5737
  br label %originalBB50

originalBB54alteredBB:                            ; preds = %originalBB54, %308
  br label %originalBB54

originalBB58alteredBB:                            ; preds = %originalBB58, %325
  %493 = load %struct.group*, %struct.group** %11, align 8, !dbg !5740
  %494 = getelementptr inbounds %struct.group, %struct.group* %493, i32 0, i32 2, !dbg !5741
  %495 = load i32, i32* %494, align 8, !dbg !5741
  %496 = load i32*, i32** %6, align 8, !dbg !5742
  %497 = load i32, i32* %9, align 4, !dbg !5743
  %498 = sext i32 %497 to i64, !dbg !5742
  %499 = getelementptr inbounds i32, i32* %496, i64 %498, !dbg !5742
  store i32 %495, i32* %499, align 4, !dbg !5744
  br label %originalBB58

originalBB62alteredBB:                            ; preds = %originalBB62, %349
  %500 = load i32, i32* %9, align 4, !dbg !5746
  %501 = icmp eq i32 %500, 2147483647, !dbg !5748
  br label %originalBB62

originalBB66alteredBB:                            ; preds = %originalBB66, %368
  %502 = call i32* @__errno_location() #15, !dbg !5750
  store i32 75, i32* %502, align 4, !dbg !5752
  br label %originalBB66

originalBB70alteredBB:                            ; preds = %originalBB70, %390
  %503 = load i8**, i8*** %10, align 8, !dbg !5757
  %504 = getelementptr inbounds i8*, i8** %503, i32 1, !dbg !5757
  store i8** %504, i8*** %10, align 8, !dbg !5757
  br label %originalBB70

originalBB74alteredBB:                            ; preds = %originalBB74, %410
  %505 = call i32* @__errno_location() #15, !dbg !5763
  %506 = load i32, i32* %505, align 4, !dbg !5763
  %507 = icmp ne i32 %506, 0, !dbg !5765
  br label %originalBB74

originalBB78alteredBB:                            ; preds = %originalBB78, %432
  %508 = call i32* @__errno_location() #15, !dbg !5775
  %509 = load i32, i32* %508, align 4, !dbg !5775
  store i32 %509, i32* %13, align 4, !dbg !5774
  call void @endgrent(), !dbg !5776
  %510 = load i32, i32* %13, align 4, !dbg !5777
  %511 = call i32* @__errno_location() #15, !dbg !5778
  store i32 %510, i32* %511, align 4, !dbg !5779
  %512 = load i32, i32* %9, align 4, !dbg !5780
  br label %originalBB78
}

declare dso_local void @setgrent() #3

declare dso_local %struct.group* @getgrent() #3

define private i32 @controle(i8*, i32) {
  %3 = load i32, i32* @x.115
  %4 = load i32, i32* @y.116
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = load i32, i32* @inVal0
  %12 = icmp sgt i32 %11, 0
  %13 = load i32, i32* @x.115
  %14 = load i32, i32* @y.116
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %12, label %41, label %21

21:                                               ; preds = %originalBBpart2
  %22 = load i32, i32* @x.115
  %23 = load i32, i32* @y.116
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %21, %originalBB1alteredBB
  call void @srand(i32 %1)
  %30 = call i32 @rand()
  %31 = srem i32 %30, 50000
  %32 = add i32 %31, 2
  %33 = load i32, i32* @x.115
  %34 = load i32, i32* @y.116
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBBpart223, label %originalBB1alteredBB

originalBBpart223:                                ; preds = %originalBB1
  ret i32 %32

41:                                               ; preds = %originalBBpart2
  %42 = load i32, i32* @x.115
  %43 = load i32, i32* @y.116
  %44 = sub i32 %42, 1
  %45 = mul i32 %42, %44
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %47, %48
  br i1 %49, label %originalBB25, label %originalBB25alteredBB

originalBB25:                                     ; preds = %41, %originalBB25alteredBB
  %50 = getelementptr inbounds [1 x i8], [1 x i8]* @.compVal2, i32 0, i32 0
  %51 = call i32 @strcmp(i8* %50, i8* %0)
  %52 = icmp eq i32 %51, 0
  %53 = load i32, i32* @x.115
  %54 = load i32, i32* @y.116
  %55 = sub i32 %53, 1
  %56 = mul i32 %53, %55
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %54, 10
  %60 = or i1 %58, %59
  br i1 %60, label %originalBBpart227, label %originalBB25alteredBB

originalBBpart227:                                ; preds = %originalBB25
  br i1 %52, label %61, label %96

61:                                               ; preds = %originalBBpart227
  %62 = load i32, i32* @x.115
  %63 = load i32, i32* @y.116
  %64 = sub i32 %62, 1
  %65 = mul i32 %62, %64
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %63, 10
  %69 = or i1 %67, %68
  br i1 %69, label %originalBB29, label %originalBB29alteredBB

originalBB29:                                     ; preds = %61, %originalBB29alteredBB
  %70 = icmp eq i32 %1, 0
  %71 = load i32, i32* @x.115
  %72 = load i32, i32* @y.116
  %73 = sub i32 %71, 1
  %74 = mul i32 %71, %73
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %72, 10
  %78 = or i1 %76, %77
  br i1 %78, label %originalBBpart231, label %originalBB29alteredBB

originalBBpart231:                                ; preds = %originalBB29
  br i1 %70, label %79, label %96

79:                                               ; preds = %originalBBpart231
  %80 = load i32, i32* @x.115
  %81 = load i32, i32* @y.116
  %82 = sub i32 %80, 1
  %83 = mul i32 %80, %82
  %84 = urem i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %81, 10
  %87 = or i1 %85, %86
  br i1 %87, label %originalBB33, label %originalBB33alteredBB

originalBB33:                                     ; preds = %79, %originalBB33alteredBB
  %88 = load i32, i32* @x.115
  %89 = load i32, i32* @y.116
  %90 = sub i32 %88, 1
  %91 = mul i32 %88, %90
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %89, 10
  %95 = or i1 %93, %94
  br i1 %95, label %originalBBpart235, label %originalBB33alteredBB

originalBBpart235:                                ; preds = %originalBB33
  ret i32 5

96:                                               ; preds = %originalBBpart231, %originalBBpart227
  %97 = getelementptr inbounds [4 x i8], [4 x i8]* @.compVal1, i32 0, i32 0
  %98 = call i32 @strcmp(i8* %97, i8* %0)
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %119

100:                                              ; preds = %96
  %101 = load i32, i32* @x.115
  %102 = load i32, i32* @y.116
  %103 = sub i32 %101, 1
  %104 = mul i32 %101, %103
  %105 = urem i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %102, 10
  %108 = or i1 %106, %107
  br i1 %108, label %originalBB37, label %originalBB37alteredBB

originalBB37:                                     ; preds = %100, %originalBB37alteredBB
  %109 = icmp eq i32 %1, 43
  %110 = load i32, i32* @x.115
  %111 = load i32, i32* @y.116
  %112 = sub i32 %110, 1
  %113 = mul i32 %110, %112
  %114 = urem i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %111, 10
  %117 = or i1 %115, %116
  br i1 %117, label %originalBBpart239, label %originalBB37alteredBB

originalBBpart239:                                ; preds = %originalBB37
  br i1 %109, label %118, label %119

118:                                              ; preds = %originalBBpart239
  ret i32 3

119:                                              ; preds = %originalBBpart239, %96
  %120 = getelementptr inbounds [2 x i8], [2 x i8]* @.compVal0, i32 0, i32 0
  %121 = call i32 @strcmp(i8* %120, i8* %0)
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %142

123:                                              ; preds = %119
  %124 = icmp eq i32 %1, -1
  br i1 %124, label %125, label %142

125:                                              ; preds = %123
  %126 = load i32, i32* @x.115
  %127 = load i32, i32* @y.116
  %128 = sub i32 %126, 1
  %129 = mul i32 %126, %128
  %130 = urem i32 %129, 2
  %131 = icmp eq i32 %130, 0
  %132 = icmp slt i32 %127, 10
  %133 = or i1 %131, %132
  br i1 %133, label %originalBB41, label %originalBB41alteredBB

originalBB41:                                     ; preds = %125, %originalBB41alteredBB
  %134 = load i32, i32* @x.115
  %135 = load i32, i32* @y.116
  %136 = sub i32 %134, 1
  %137 = mul i32 %134, %136
  %138 = urem i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = icmp slt i32 %135, 10
  %141 = or i1 %139, %140
  br i1 %141, label %originalBBpart243, label %originalBB41alteredBB

originalBBpart243:                                ; preds = %originalBB41
  ret i32 3

142:                                              ; preds = %123, %119
  %143 = load i32, i32* @x.115
  %144 = load i32, i32* @y.116
  %145 = sub i32 %143, 1
  %146 = mul i32 %143, %145
  %147 = urem i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = icmp slt i32 %144, 10
  %150 = or i1 %148, %149
  br i1 %150, label %originalBB45, label %originalBB45alteredBB

originalBB45:                                     ; preds = %142, %originalBB45alteredBB
  %151 = getelementptr inbounds [2 x i8], [2 x i8]* @.compVal0, i32 0, i32 0
  %152 = call i32 @strcmp(i8* %151, i8* %0)
  %153 = icmp eq i32 %152, 0
  %154 = load i32, i32* @x.115
  %155 = load i32, i32* @y.116
  %156 = sub i32 %154, 1
  %157 = mul i32 %154, %156
  %158 = urem i32 %157, 2
  %159 = icmp eq i32 %158, 0
  %160 = icmp slt i32 %155, 10
  %161 = or i1 %159, %160
  br i1 %161, label %originalBBpart247, label %originalBB45alteredBB

originalBBpart247:                                ; preds = %originalBB45
  br i1 %153, label %162, label %181

162:                                              ; preds = %originalBBpart247
  %163 = load i32, i32* @x.115
  %164 = load i32, i32* @y.116
  %165 = sub i32 %163, 1
  %166 = mul i32 %163, %165
  %167 = urem i32 %166, 2
  %168 = icmp eq i32 %167, 0
  %169 = icmp slt i32 %164, 10
  %170 = or i1 %168, %169
  br i1 %170, label %originalBB49, label %originalBB49alteredBB

originalBB49:                                     ; preds = %162, %originalBB49alteredBB
  %171 = icmp eq i32 %1, 0
  %172 = load i32, i32* @x.115
  %173 = load i32, i32* @y.116
  %174 = sub i32 %172, 1
  %175 = mul i32 %172, %174
  %176 = urem i32 %175, 2
  %177 = icmp eq i32 %176, 0
  %178 = icmp slt i32 %173, 10
  %179 = or i1 %177, %178
  br i1 %179, label %originalBBpart251, label %originalBB49alteredBB

originalBBpart251:                                ; preds = %originalBB49
  br i1 %171, label %180, label %181

180:                                              ; preds = %originalBBpart251
  ret i32 5

181:                                              ; preds = %originalBBpart251, %originalBBpart247
  %182 = load i32, i32* @x.115
  %183 = load i32, i32* @y.116
  %184 = sub i32 %182, 1
  %185 = mul i32 %182, %184
  %186 = urem i32 %185, 2
  %187 = icmp eq i32 %186, 0
  %188 = icmp slt i32 %183, 10
  %189 = or i1 %187, %188
  br i1 %189, label %originalBB53, label %originalBB53alteredBB

originalBB53:                                     ; preds = %181, %originalBB53alteredBB
  call void @srand(i32 %1)
  %190 = call i32 @rand()
  %191 = srem i32 %190, 50000
  %192 = add i32 %191, 2
  %193 = load i32, i32* @x.115
  %194 = load i32, i32* @y.116
  %195 = sub i32 %193, 1
  %196 = mul i32 %193, %195
  %197 = urem i32 %196, 2
  %198 = icmp eq i32 %197, 0
  %199 = icmp slt i32 %194, 10
  %200 = or i1 %198, %199
  br i1 %200, label %originalBBpart270, label %originalBB53alteredBB

originalBBpart270:                                ; preds = %originalBB53
  ret i32 %192

originalBBalteredBB:                              ; preds = %originalBB, %2
  %201 = load i32, i32* @inVal0
  %202 = icmp sgt i32 %201, 0
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %21
  call void @srand(i32 %1)
  %203 = call i32 @rand()
  %_ = sub i32 %203, 50000
  %gen = mul i32 %_, 50000
  %_2 = shl i32 %203, 50000
  %_3 = shl i32 %203, 50000
  %_4 = sub i32 %203, 50000
  %gen5 = mul i32 %_4, 50000
  %_6 = sub i32 0, %203
  %gen7 = add i32 %_6, 50000
  %_8 = sub i32 0, %203
  %gen9 = add i32 %_8, 50000
  %_10 = sub i32 %203, 50000
  %gen11 = mul i32 %_10, 50000
  %_12 = sub i32 %203, 50000
  %gen13 = mul i32 %_12, 50000
  %204 = srem i32 %203, 50000
  %_14 = sub i32 0, %204
  %gen15 = add i32 %_14, 2
  %_16 = sub i32 0, %204
  %gen17 = add i32 %_16, 2
  %_18 = sub i32 0, %204
  %gen19 = add i32 %_18, 2
  %_20 = sub i32 %204, 2
  %gen21 = mul i32 %_20, 2
  %205 = add i32 %204, 2
  br label %originalBB1

originalBB25alteredBB:                            ; preds = %originalBB25, %41
  %206 = getelementptr inbounds [1 x i8], [1 x i8]* @.compVal2, i32 0, i32 0
  %207 = call i32 @strcmp(i8* %206, i8* %0)
  %208 = icmp eq i32 %207, 0
  br label %originalBB25

originalBB29alteredBB:                            ; preds = %originalBB29, %61
  %209 = icmp eq i32 %1, 0
  br label %originalBB29

originalBB33alteredBB:                            ; preds = %originalBB33, %79
  br label %originalBB33

originalBB37alteredBB:                            ; preds = %originalBB37, %100
  %210 = icmp eq i32 %1, 43
  br label %originalBB37

originalBB41alteredBB:                            ; preds = %originalBB41, %125
  br label %originalBB41

originalBB45alteredBB:                            ; preds = %originalBB45, %142
  %211 = getelementptr inbounds [2 x i8], [2 x i8]* @.compVal0, i32 0, i32 0
  %212 = call i32 @strcmp(i8* %211, i8* %0)
  %213 = icmp eq i32 %212, 0
  br label %originalBB45

originalBB49alteredBB:                            ; preds = %originalBB49, %162
  %214 = icmp eq i32 %1, 0
  br label %originalBB49

originalBB53alteredBB:                            ; preds = %originalBB53, %181
  call void @srand(i32 %1)
  %215 = call i32 @rand()
  %_54 = sub i32 %215, 50000
  %gen55 = mul i32 %_54, 50000
  %_56 = sub i32 %215, 50000
  %gen57 = mul i32 %_56, 50000
  %_58 = sub i32 %215, 50000
  %gen59 = mul i32 %_58, 50000
  %_60 = sub i32 0, %215
  %gen61 = add i32 %_60, 50000
  %_62 = shl i32 %215, 50000
  %_63 = sub i32 0, %215
  %gen64 = add i32 %_63, 50000
  %216 = srem i32 %215, 50000
  %_65 = sub i32 %216, 2
  %gen66 = mul i32 %_65, 2
  %_67 = sub i32 0, %216
  %gen68 = add i32 %_67, 2
  %217 = add i32 %216, 2
  br label %originalBB53
}

declare void @srand(i32)

declare i32 @rand()

attributes #0 = { noinline noreturn nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { noinline nounwind optnone readonly uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn nounwind }
attributes #13 = { nounwind readonly }
attributes #14 = { noreturn }
attributes #15 = { nounwind readnone }

!llvm.dbg.cu = !{!2, !82, !88, !93, !101, !202, !108, !115, !208, !185, !210, !195, !213, !216, !218, !220, !232, !235, !241, !243, !245, !247, !250, !252, !254, !256, !258, !260}
!llvm.ident = !{!263, !263, !263, !263, !263, !263, !263, !263, !263, !263, !263, !263, !263, !263, !263, !263, !263, !263, !263, !263, !263, !263, !263, !263, !263, !263, !263, !263}
!llvm.module.flags = !{!264, !265, !266, !267, !268}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "longopts", scope: !2, file: !3, line: 75, type: !63, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !9, nameTableKind: None)
!3 = !DIFile(filename: "src/id.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!4 = !{}
!5 = !{!6, !8}
!6 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!7 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!8 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!9 = !{!10, !17, !19, !23, !0, !25, !28, !30, !32, !34, !36, !38, !40, !42, !44, !46, !56}
!10 = !DIGlobalVariableExpression(var: !11, expr: !DIExpression())
!11 = distinct !DIGlobalVariable(name: "ruid", scope: !2, file: !3, line: 64, type: !12, isLocal: true, isDefinition: true)
!12 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !13, line: 79, baseType: !14)
!13 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/types.h", directory: "")
!14 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !15, line: 146, baseType: !16)
!15 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!16 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!17 = !DIGlobalVariableExpression(var: !18, expr: !DIExpression())
!18 = distinct !DIGlobalVariable(name: "euid", scope: !2, file: !3, line: 64, type: !12, isLocal: true, isDefinition: true)
!19 = !DIGlobalVariableExpression(var: !20, expr: !DIExpression())
!20 = distinct !DIGlobalVariable(name: "rgid", scope: !2, file: !3, line: 65, type: !21, isLocal: true, isDefinition: true)
!21 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !13, line: 64, baseType: !22)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !15, line: 147, baseType: !16)
!23 = !DIGlobalVariableExpression(var: !24, expr: !DIExpression())
!24 = distinct !DIGlobalVariable(name: "egid", scope: !2, file: !3, line: 65, type: !21, isLocal: true, isDefinition: true)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "just_context", scope: !2, file: !3, line: 45, type: !27, isLocal: true, isDefinition: true)
!27 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!28 = !DIGlobalVariableExpression(var: !29, expr: !DIExpression())
!29 = distinct !DIGlobalVariable(name: "just_group", scope: !2, file: !3, line: 51, type: !27, isLocal: true, isDefinition: true)
!30 = !DIGlobalVariableExpression(var: !31, expr: !DIExpression())
!31 = distinct !DIGlobalVariable(name: "use_name", scope: !2, file: !3, line: 61, type: !27, isLocal: true, isDefinition: true)
!32 = !DIGlobalVariableExpression(var: !33, expr: !DIExpression())
!33 = distinct !DIGlobalVariable(name: "use_real", scope: !2, file: !3, line: 53, type: !27, isLocal: true, isDefinition: true)
!34 = !DIGlobalVariableExpression(var: !35, expr: !DIExpression())
!35 = distinct !DIGlobalVariable(name: "just_user", scope: !2, file: !3, line: 55, type: !27, isLocal: true, isDefinition: true)
!36 = !DIGlobalVariableExpression(var: !37, expr: !DIExpression())
!37 = distinct !DIGlobalVariable(name: "opt_zero", scope: !2, file: !3, line: 47, type: !27, isLocal: true, isDefinition: true)
!38 = !DIGlobalVariableExpression(var: !39, expr: !DIExpression())
!39 = distinct !DIGlobalVariable(name: "just_group_list", scope: !2, file: !3, line: 49, type: !27, isLocal: true, isDefinition: true)
!40 = !DIGlobalVariableExpression(var: !41, expr: !DIExpression())
!41 = distinct !DIGlobalVariable(name: "context", scope: !2, file: !3, line: 69, type: !6, isLocal: true, isDefinition: true)
!42 = !DIGlobalVariableExpression(var: !43, expr: !DIExpression())
!43 = distinct !DIGlobalVariable(name: "multiple_users", scope: !2, file: !3, line: 59, type: !27, isLocal: true, isDefinition: true)
!44 = !DIGlobalVariableExpression(var: !45, expr: !DIExpression())
!45 = distinct !DIGlobalVariable(name: "ok", scope: !2, file: !3, line: 57, type: !27, isLocal: true, isDefinition: true)
!46 = !DIGlobalVariableExpression(var: !47, expr: !DIExpression())
!47 = distinct !DIGlobalVariable(name: "buf", scope: !48, file: !3, line: 327, type: !53, isLocal: true, isDefinition: true)
!48 = distinct !DISubprogram(name: "uidtostr_ptr", scope: !3, file: !3, line: 325, type: !49, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!49 = !DISubroutineType(types: !50)
!50 = !{!6, !51}
!51 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !52, size: 64)
!52 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12)
!53 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 168, elements: !54)
!54 = !{!55}
!55 = !DISubrange(count: 21)
!56 = !DIGlobalVariableExpression(var: !57, expr: !DIExpression())
!57 = distinct !DIGlobalVariable(name: "buf", scope: !58, file: !3, line: 316, type: !53, isLocal: true, isDefinition: true)
!58 = distinct !DISubprogram(name: "gidtostr_ptr", scope: !3, file: !3, line: 314, type: !59, scopeLine: 315, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!59 = !DISubroutineType(types: !60)
!60 = !{!6, !61}
!61 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !62, size: 64)
!62 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !21)
!63 = !DICompositeType(tag: DW_TAG_array_type, baseType: !64, size: 2560, elements: !76)
!64 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !65)
!65 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !66, line: 50, size: 256, elements: !67)
!66 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/getopt_ext.h", directory: "")
!67 = !{!68, !71, !73, !75}
!68 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !65, file: !66, line: 52, baseType: !69, size: 64)
!69 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !70, size: 64)
!70 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!71 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !65, file: !66, line: 55, baseType: !72, size: 32, offset: 64)
!72 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!73 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !65, file: !66, line: 56, baseType: !74, size: 64, offset: 128)
!74 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !72, size: 64)
!75 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !65, file: !66, line: 57, baseType: !72, size: 32, offset: 192)
!76 = !{!77}
!77 = !DISubrange(count: 10)
!78 = !DIGlobalVariableExpression(var: !79, expr: !DIExpression())
!79 = distinct !DIGlobalVariable(name: "buf", scope: !80, file: !81, line: 96, type: !53, isLocal: true, isDefinition: true)
!80 = distinct !DISubprogram(name: "gidtostr_ptr", scope: !81, file: !81, line: 94, type: !59, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, retainedNodes: !4)
!81 = !DIFile(filename: "src/group-list.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!82 = distinct !DICompileUnit(language: DW_LANG_C99, file: !81, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !83, globals: !85, nameTableKind: None)
!83 = !{!8, !84}
!84 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!85 = !{!78}
!86 = !DIGlobalVariableExpression(var: !87, expr: !DIExpression())
!87 = distinct !DIGlobalVariable(name: "Version", scope: !88, file: !89, line: 2, type: !69, isLocal: false, isDefinition: true)
!88 = distinct !DICompileUnit(language: DW_LANG_C99, file: !89, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, globals: !90, nameTableKind: None)
!89 = !DIFile(filename: "src/version.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!90 = !{!86}
!91 = !DIGlobalVariableExpression(var: !92, expr: !DIExpression())
!92 = distinct !DIGlobalVariable(name: "ignore_EPIPE", scope: !93, file: !98, line: 56, type: !27, isLocal: true, isDefinition: true)
!93 = distinct !DICompileUnit(language: DW_LANG_C99, file: !94, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, globals: !95, nameTableKind: None)
!94 = !DIFile(filename: "./lib/closeout.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!95 = !{!96, !91}
!96 = !DIGlobalVariableExpression(var: !97, expr: !DIExpression())
!97 = distinct !DIGlobalVariable(name: "file_name", scope: !93, file: !98, line: 46, type: !69, isLocal: true, isDefinition: true)
!98 = !DIFile(filename: "lib/closeout.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!99 = !DIGlobalVariableExpression(var: !100, expr: !DIExpression())
!100 = distinct !DIGlobalVariable(name: "exit_failure", scope: !101, file: !104, line: 24, type: !105, isLocal: false, isDefinition: true)
!101 = distinct !DICompileUnit(language: DW_LANG_C99, file: !102, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, globals: !103, nameTableKind: None)
!102 = !DIFile(filename: "./lib/exitfail.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!103 = !{!99}
!104 = !DIFile(filename: "lib/exitfail.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!105 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !72)
!106 = !DIGlobalVariableExpression(var: !107, expr: !DIExpression())
!107 = distinct !DIGlobalVariable(name: "program_name", scope: !108, file: !112, line: 33, type: !69, isLocal: false, isDefinition: true)
!108 = distinct !DICompileUnit(language: DW_LANG_C99, file: !109, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !110, globals: !111, nameTableKind: None)
!109 = !DIFile(filename: "./lib/progname.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!110 = !{!8, !6}
!111 = !{!106}
!112 = !DIFile(filename: "lib/progname.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!113 = !DIGlobalVariableExpression(var: !114, expr: !DIExpression())
!114 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !115, file: !139, line: 116, type: !150, isLocal: true, isDefinition: true)
!115 = distinct !DICompileUnit(language: DW_LANG_C99, file: !116, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !117, retainedTypes: !132, globals: !136, nameTableKind: None)
!116 = !DIFile(filename: "./lib/quotearg.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!117 = !{!118}
!118 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quoting_style", file: !119, line: 32, baseType: !16, size: 32, elements: !120)
!119 = !DIFile(filename: "./lib/quotearg.h", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!120 = !{!121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131}
!121 = !DIEnumerator(name: "literal_quoting_style", value: 0, isUnsigned: true)
!122 = !DIEnumerator(name: "shell_quoting_style", value: 1, isUnsigned: true)
!123 = !DIEnumerator(name: "shell_always_quoting_style", value: 2, isUnsigned: true)
!124 = !DIEnumerator(name: "shell_escape_quoting_style", value: 3, isUnsigned: true)
!125 = !DIEnumerator(name: "shell_escape_always_quoting_style", value: 4, isUnsigned: true)
!126 = !DIEnumerator(name: "c_quoting_style", value: 5, isUnsigned: true)
!127 = !DIEnumerator(name: "c_maybe_quoting_style", value: 6, isUnsigned: true)
!128 = !DIEnumerator(name: "escape_quoting_style", value: 7, isUnsigned: true)
!129 = !DIEnumerator(name: "locale_quoting_style", value: 8, isUnsigned: true)
!130 = !DIEnumerator(name: "clocale_quoting_style", value: 9, isUnsigned: true)
!131 = !DIEnumerator(name: "custom_quoting_style", value: 10, isUnsigned: true)
!132 = !{!72, !133, !134}
!133 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!134 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !135, line: 46, baseType: !84)
!135 = !DIFile(filename: "/usr/lib/llvm-9/lib/clang/9.0.1/include/stddef.h", directory: "")
!136 = !{!137, !144, !148, !113, !160, !165, !172, !174}
!137 = !DIGlobalVariableExpression(var: !138, expr: !DIExpression())
!138 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !115, file: !139, line: 85, type: !140, isLocal: false, isDefinition: true)
!139 = !DIFile(filename: "lib/quotearg.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!140 = !DICompositeType(tag: DW_TAG_array_type, baseType: !141, size: 704, elements: !142)
!141 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !69)
!142 = !{!143}
!143 = !DISubrange(count: 11)
!144 = !DIGlobalVariableExpression(var: !145, expr: !DIExpression())
!145 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !115, file: !139, line: 101, type: !146, isLocal: false, isDefinition: true)
!146 = !DICompositeType(tag: DW_TAG_array_type, baseType: !147, size: 320, elements: !76)
!147 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !118)
!148 = !DIGlobalVariableExpression(var: !149, expr: !DIExpression())
!149 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !115, file: !139, line: 1052, type: !150, isLocal: false, isDefinition: true)
!150 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !139, line: 65, size: 448, elements: !151)
!151 = !{!152, !153, !154, !158, !159}
!152 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !150, file: !139, line: 68, baseType: !118, size: 32)
!153 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !150, file: !139, line: 71, baseType: !72, size: 32, offset: 32)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !150, file: !139, line: 75, baseType: !155, size: 256, offset: 64)
!155 = !DICompositeType(tag: DW_TAG_array_type, baseType: !16, size: 256, elements: !156)
!156 = !{!157}
!157 = !DISubrange(count: 8)
!158 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !150, file: !139, line: 78, baseType: !69, size: 64, offset: 320)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !150, file: !139, line: 81, baseType: !69, size: 64, offset: 384)
!160 = !DIGlobalVariableExpression(var: !161, expr: !DIExpression())
!161 = distinct !DIGlobalVariable(name: "slot0", scope: !115, file: !139, line: 842, type: !162, isLocal: true, isDefinition: true)
!162 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 2048, elements: !163)
!163 = !{!164}
!164 = !DISubrange(count: 256)
!165 = !DIGlobalVariableExpression(var: !166, expr: !DIExpression())
!166 = distinct !DIGlobalVariable(name: "slotvec", scope: !115, file: !139, line: 845, type: !167, isLocal: true, isDefinition: true)
!167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !168, size: 64)
!168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !139, line: 834, size: 128, elements: !169)
!169 = !{!170, !171}
!170 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !168, file: !139, line: 836, baseType: !134, size: 64)
!171 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !168, file: !139, line: 837, baseType: !6, size: 64, offset: 64)
!172 = !DIGlobalVariableExpression(var: !173, expr: !DIExpression())
!173 = distinct !DIGlobalVariable(name: "nslots", scope: !115, file: !139, line: 843, type: !72, isLocal: true, isDefinition: true)
!174 = !DIGlobalVariableExpression(var: !175, expr: !DIExpression())
!175 = distinct !DIGlobalVariable(name: "slotvec0", scope: !115, file: !139, line: 844, type: !168, isLocal: true, isDefinition: true)
!176 = !DIGlobalVariableExpression(var: !177, expr: !DIExpression())
!177 = distinct !DIGlobalVariable(name: "E_bad_spec", scope: !178, file: !179, line: 108, type: !69, isLocal: true, isDefinition: true)
!178 = distinct !DISubprogram(name: "parse_with_separator", scope: !179, file: !179, line: 102, type: !180, scopeLine: 105, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !185, retainedNodes: !4)
!179 = !DIFile(filename: "lib/userspec.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!180 = !DISubroutineType(types: !181)
!181 = !{!69, !69, !69, !182, !183, !184, !184}
!182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12, size: 64)
!183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !21, size: 64)
!184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6, size: 64)
!185 = distinct !DICompileUnit(language: DW_LANG_C99, file: !186, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !187, globals: !188, nameTableKind: None)
!186 = !DIFile(filename: "./lib/userspec.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!187 = !{!8, !12, !21}
!188 = !{!189, !191, !176}
!189 = !DIGlobalVariableExpression(var: !190, expr: !DIExpression())
!190 = distinct !DIGlobalVariable(name: "E_invalid_user", scope: !178, file: !179, line: 106, type: !69, isLocal: true, isDefinition: true)
!191 = !DIGlobalVariableExpression(var: !192, expr: !DIExpression())
!192 = distinct !DIGlobalVariable(name: "E_invalid_group", scope: !178, file: !179, line: 107, type: !69, isLocal: true, isDefinition: true)
!193 = !DIGlobalVariableExpression(var: !194, expr: !DIExpression())
!194 = distinct !DIGlobalVariable(name: "version_etc_copyright", scope: !195, file: !198, line: 26, type: !199, isLocal: false, isDefinition: true)
!195 = distinct !DICompileUnit(language: DW_LANG_C99, file: !196, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, globals: !197, nameTableKind: None)
!196 = !DIFile(filename: "./lib/version-etc-fsf.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!197 = !{!193}
!198 = !DIFile(filename: "lib/version-etc-fsf.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!199 = !DICompositeType(tag: DW_TAG_array_type, baseType: !70, size: 376, elements: !200)
!200 = !{!201}
!201 = !DISubrange(count: 47)
!202 = distinct !DICompileUnit(language: DW_LANG_C99, file: !203, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !204, nameTableKind: None)
!203 = !DIFile(filename: "./lib/umaxtostr.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!204 = !{!205}
!205 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !206, line: 102, baseType: !207)
!206 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!207 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uintmax_t", file: !15, line: 73, baseType: !84)
!208 = distinct !DICompileUnit(language: DW_LANG_C99, file: !209, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, nameTableKind: None)
!209 = !DIFile(filename: "./lib/se-selinux.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!210 = distinct !DICompileUnit(language: DW_LANG_C99, file: !211, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !212, nameTableKind: None)
!211 = !DIFile(filename: "./lib/version-etc.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!212 = !{!8}
!213 = distinct !DICompileUnit(language: DW_LANG_C99, file: !214, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !215, nameTableKind: None)
!214 = !DIFile(filename: "./lib/xmalloc.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!215 = !{!134, !6, !8}
!216 = distinct !DICompileUnit(language: DW_LANG_C99, file: !217, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, nameTableKind: None)
!217 = !DIFile(filename: "./lib/xalloc-die.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!218 = distinct !DICompileUnit(language: DW_LANG_C99, file: !219, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, nameTableKind: None)
!219 = !DIFile(filename: "./lib/xgetgroups.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!220 = distinct !DICompileUnit(language: DW_LANG_C99, file: !221, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !222, retainedTypes: !231, nameTableKind: None)
!221 = !DIFile(filename: "./lib/xstrtoul.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!222 = !{!223}
!223 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "strtol_error", file: !224, line: 25, baseType: !16, size: 32, elements: !225)
!224 = !DIFile(filename: "./lib/xstrtol.h", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!225 = !{!226, !227, !228, !229, !230}
!226 = !DIEnumerator(name: "LONGINT_OK", value: 0, isUnsigned: true)
!227 = !DIEnumerator(name: "LONGINT_OVERFLOW", value: 1, isUnsigned: true)
!228 = !DIEnumerator(name: "LONGINT_INVALID_SUFFIX_CHAR", value: 2, isUnsigned: true)
!229 = !DIEnumerator(name: "LONGINT_INVALID_SUFFIX_CHAR_WITH_OVERFLOW", value: 3, isUnsigned: true)
!230 = !DIEnumerator(name: "LONGINT_INVALID", value: 4, isUnsigned: true)
!231 = !{!72, !133}
!232 = distinct !DICompileUnit(language: DW_LANG_C99, file: !233, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !234, nameTableKind: None)
!233 = !DIFile(filename: "./lib/mbrtowc.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!234 = !{!134}
!235 = distinct !DICompileUnit(language: DW_LANG_C99, file: !236, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !237, nameTableKind: None)
!236 = !DIFile(filename: "./lib/c-strcasecmp.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!237 = !{!238}
!238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !239, size: 64)
!239 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !240)
!240 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!241 = distinct !DICompileUnit(language: DW_LANG_C99, file: !242, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, nameTableKind: None)
!242 = !DIFile(filename: "./lib/close-stream.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!243 = distinct !DICompileUnit(language: DW_LANG_C99, file: !244, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, nameTableKind: None)
!244 = !DIFile(filename: "./lib/hard-locale.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!245 = distinct !DICompileUnit(language: DW_LANG_C99, file: !246, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !212, nameTableKind: None)
!246 = !DIFile(filename: "./lib/localcharset.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!247 = distinct !DICompileUnit(language: DW_LANG_C99, file: !248, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !249, nameTableKind: None)
!248 = !DIFile(filename: "./lib/mgetgroups.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!249 = !{!8, !21, !134}
!250 = distinct !DICompileUnit(language: DW_LANG_C99, file: !251, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !212, nameTableKind: None)
!251 = !DIFile(filename: "./lib/setlocale_null.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!252 = distinct !DICompileUnit(language: DW_LANG_C99, file: !253, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, nameTableKind: None)
!253 = !DIFile(filename: "./lib/fclose.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!254 = distinct !DICompileUnit(language: DW_LANG_C99, file: !255, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !212, nameTableKind: None)
!255 = !DIFile(filename: "./lib/fflush.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!256 = distinct !DICompileUnit(language: DW_LANG_C99, file: !257, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !212, nameTableKind: None)
!257 = !DIFile(filename: "./lib/fseeko.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!258 = distinct !DICompileUnit(language: DW_LANG_C99, file: !259, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, nameTableKind: None)
!259 = !DIFile(filename: "./lib/c-ctype.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!260 = distinct !DICompileUnit(language: DW_LANG_C99, file: !261, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !262, nameTableKind: None)
!261 = !DIFile(filename: "./lib/getugroups.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!262 = !{!21, !8}
!263 = !{!"clang version 9.0.1-12 "}
!264 = !{i32 2, !"Dwarf Version", i32 4}
!265 = !{i32 2, !"Debug Info Version", i32 3}
!266 = !{i32 1, !"wchar_size", i32 4}
!267 = !{i32 1, !"ThinLTO", i32 0}
!268 = !{i32 1, !"EnableSplitLTOUnit", i32 0}
!269 = distinct !DISubprogram(name: "usage", scope: !3, file: !3, line: 90, type: !270, scopeLine: 91, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4)
!270 = !DISubroutineType(types: !271)
!271 = !{null, !72}
!272 = !DILocalVariable(name: "status", arg: 1, scope: !269, file: !3, line: 90, type: !72)
!273 = !DILocation(line: 90, column: 12, scope: !269)
!274 = !DILocation(line: 92, column: 7, scope: !275)
!275 = distinct !DILexicalBlock(scope: !269, file: !3, line: 92, column: 7)
!276 = !DILocation(line: 92, column: 14, scope: !275)
!277 = !DILocation(line: 92, column: 7, scope: !269)
!278 = !DILocation(line: 93, column: 5, scope: !275)
!279 = !DILocation(line: 93, column: 5, scope: !280)
!280 = distinct !DILexicalBlock(scope: !275, file: !3, line: 93, column: 5)
!281 = !DILocation(line: 96, column: 15, scope: !282)
!282 = distinct !DILexicalBlock(scope: !275, file: !3, line: 95, column: 5)
!283 = !DILocation(line: 96, column: 55, scope: !282)
!284 = !DILocation(line: 96, column: 7, scope: !282)
!285 = !DILocation(line: 97, column: 7, scope: !282)
!286 = !DILocation(line: 102, column: 7, scope: !282)
!287 = !DILocation(line: 113, column: 7, scope: !282)
!288 = !DILocation(line: 114, column: 7, scope: !282)
!289 = !DILocation(line: 115, column: 7, scope: !282)
!290 = !DILocation(line: 119, column: 7, scope: !282)
!291 = !DILocation(line: 121, column: 9, scope: !269)
!292 = !DILocation(line: 121, column: 3, scope: !269)
!293 = !DILocalVariable(name: "status", arg: 1, scope: !294, file: !3, line: 90, type: !72)
!294 = distinct !DISubprogram(name: "usage", scope: !3, file: !3, line: 90, type: !270, scopeLine: 91, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !295, retainedNodes: !4)
!295 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !296, nameTableKind: None)
!296 = !{!297, !299, !301, !303, !305, !315, !317, !319, !321, !323, !325, !327, !329, !331, !333, !335, !338}
!297 = !DIGlobalVariableExpression(var: !298, expr: !DIExpression())
!298 = distinct !DIGlobalVariable(name: "ruid", scope: !295, file: !3, line: 64, type: !12, isLocal: true, isDefinition: true)
!299 = !DIGlobalVariableExpression(var: !300, expr: !DIExpression())
!300 = distinct !DIGlobalVariable(name: "euid", scope: !295, file: !3, line: 64, type: !12, isLocal: true, isDefinition: true)
!301 = !DIGlobalVariableExpression(var: !302, expr: !DIExpression())
!302 = distinct !DIGlobalVariable(name: "rgid", scope: !295, file: !3, line: 65, type: !21, isLocal: true, isDefinition: true)
!303 = !DIGlobalVariableExpression(var: !304, expr: !DIExpression())
!304 = distinct !DIGlobalVariable(name: "egid", scope: !295, file: !3, line: 65, type: !21, isLocal: true, isDefinition: true)
!305 = !DIGlobalVariableExpression(var: !306, expr: !DIExpression())
!306 = distinct !DIGlobalVariable(name: "longopts", scope: !295, file: !3, line: 75, type: !307, isLocal: true, isDefinition: true)
!307 = !DICompositeType(tag: DW_TAG_array_type, baseType: !308, size: 2560, elements: !76)
!308 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !309)
!309 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !66, line: 50, size: 256, elements: !310)
!310 = !{!311, !312, !313, !314}
!311 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !309, file: !66, line: 52, baseType: !69, size: 64)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !309, file: !66, line: 55, baseType: !72, size: 32, offset: 64)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !309, file: !66, line: 56, baseType: !74, size: 64, offset: 128)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !309, file: !66, line: 57, baseType: !72, size: 32, offset: 192)
!315 = !DIGlobalVariableExpression(var: !316, expr: !DIExpression())
!316 = distinct !DIGlobalVariable(name: "just_context", scope: !295, file: !3, line: 45, type: !27, isLocal: true, isDefinition: true)
!317 = !DIGlobalVariableExpression(var: !318, expr: !DIExpression())
!318 = distinct !DIGlobalVariable(name: "just_group", scope: !295, file: !3, line: 51, type: !27, isLocal: true, isDefinition: true)
!319 = !DIGlobalVariableExpression(var: !320, expr: !DIExpression())
!320 = distinct !DIGlobalVariable(name: "use_name", scope: !295, file: !3, line: 61, type: !27, isLocal: true, isDefinition: true)
!321 = !DIGlobalVariableExpression(var: !322, expr: !DIExpression())
!322 = distinct !DIGlobalVariable(name: "use_real", scope: !295, file: !3, line: 53, type: !27, isLocal: true, isDefinition: true)
!323 = !DIGlobalVariableExpression(var: !324, expr: !DIExpression())
!324 = distinct !DIGlobalVariable(name: "just_user", scope: !295, file: !3, line: 55, type: !27, isLocal: true, isDefinition: true)
!325 = !DIGlobalVariableExpression(var: !326, expr: !DIExpression())
!326 = distinct !DIGlobalVariable(name: "opt_zero", scope: !295, file: !3, line: 47, type: !27, isLocal: true, isDefinition: true)
!327 = !DIGlobalVariableExpression(var: !328, expr: !DIExpression())
!328 = distinct !DIGlobalVariable(name: "just_group_list", scope: !295, file: !3, line: 49, type: !27, isLocal: true, isDefinition: true)
!329 = !DIGlobalVariableExpression(var: !330, expr: !DIExpression())
!330 = distinct !DIGlobalVariable(name: "context", scope: !295, file: !3, line: 69, type: !6, isLocal: true, isDefinition: true)
!331 = !DIGlobalVariableExpression(var: !332, expr: !DIExpression())
!332 = distinct !DIGlobalVariable(name: "multiple_users", scope: !295, file: !3, line: 59, type: !27, isLocal: true, isDefinition: true)
!333 = !DIGlobalVariableExpression(var: !334, expr: !DIExpression())
!334 = distinct !DIGlobalVariable(name: "ok", scope: !295, file: !3, line: 57, type: !27, isLocal: true, isDefinition: true)
!335 = !DIGlobalVariableExpression(var: !336, expr: !DIExpression())
!336 = distinct !DIGlobalVariable(name: "buf", scope: !337, file: !3, line: 327, type: !53, isLocal: true, isDefinition: true)
!337 = distinct !DISubprogram(name: "uidtostr_ptr", scope: !3, file: !3, line: 325, type: !49, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !295, retainedNodes: !4)
!338 = !DIGlobalVariableExpression(var: !339, expr: !DIExpression())
!339 = distinct !DIGlobalVariable(name: "buf", scope: !340, file: !3, line: 316, type: !53, isLocal: true, isDefinition: true)
!340 = distinct !DISubprogram(name: "gidtostr_ptr", scope: !3, file: !3, line: 314, type: !59, scopeLine: 315, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !295, retainedNodes: !4)
!341 = distinct !DISubprogram(name: "emit_ancillary_info", scope: !342, file: !342, line: 634, type: !343, scopeLine: 635, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!342 = !DIFile(filename: "src/system.h", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!343 = !DISubroutineType(types: !344)
!344 = !{null, !69}
!345 = !DILocalVariable(name: "program", arg: 1, scope: !341, file: !342, line: 634, type: !69)
!346 = !DILocation(line: 634, column: 34, scope: !341)
!347 = !DILocalVariable(name: "infomap", scope: !341, file: !342, line: 636, type: !348)
!348 = !DICompositeType(tag: DW_TAG_array_type, baseType: !349, size: 896, elements: !354)
!349 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !350)
!350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "infomap", scope: !341, file: !342, line: 636, size: 128, elements: !351)
!351 = !{!352, !353}
!352 = !DIDerivedType(tag: DW_TAG_member, name: "program", scope: !350, file: !342, line: 636, baseType: !69, size: 64)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !350, file: !342, line: 636, baseType: !69, size: 64, offset: 64)
!354 = !{!355}
!355 = !DISubrange(count: 7)
!356 = !DILocation(line: 636, column: 67, scope: !341)
!357 = !DILocalVariable(name: "node", scope: !341, file: !342, line: 646, type: !69)
!358 = !DILocation(line: 646, column: 15, scope: !341)
!359 = !DILocation(line: 646, column: 22, scope: !341)
!360 = !DILocalVariable(name: "map_prog", scope: !341, file: !342, line: 647, type: !361)
!361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !349, size: 64)
!362 = !DILocation(line: 647, column: 25, scope: !341)
!363 = !DILocation(line: 647, column: 36, scope: !341)
!364 = !DILocation(line: 649, column: 3, scope: !341)
!365 = !DILocation(line: 649, column: 10, scope: !341)
!366 = !DILocation(line: 649, column: 20, scope: !341)
!367 = !DILocation(line: 649, column: 28, scope: !341)
!368 = !DILocation(line: 649, column: 33, scope: !341)
!369 = !DILocation(line: 649, column: 31, scope: !341)
!370 = !DILocation(line: 0, scope: !341)
!371 = !DILocation(line: 650, column: 13, scope: !341)
!372 = distinct !{!372, !364, !371}
!373 = !DILocation(line: 652, column: 7, scope: !374)
!374 = distinct !DILexicalBlock(scope: !341, file: !342, line: 652, column: 7)
!375 = !DILocation(line: 652, column: 17, scope: !374)
!376 = !DILocation(line: 652, column: 7, scope: !341)
!377 = !DILocation(line: 653, column: 12, scope: !374)
!378 = !DILocation(line: 653, column: 22, scope: !374)
!379 = !DILocation(line: 653, column: 10, scope: !374)
!380 = !DILocation(line: 653, column: 5, scope: !374)
!381 = !DILocation(line: 655, column: 11, scope: !341)
!382 = !DILocation(line: 655, column: 3, scope: !341)
!383 = !DILocalVariable(name: "lc_messages", scope: !341, file: !342, line: 659, type: !69)
!384 = !DILocation(line: 659, column: 15, scope: !341)
!385 = !DILocation(line: 659, column: 29, scope: !341)
!386 = !DILocation(line: 660, column: 7, scope: !387)
!387 = distinct !DILexicalBlock(scope: !341, file: !342, line: 660, column: 7)
!388 = !DILocation(line: 660, column: 19, scope: !387)
!389 = !DILocation(line: 660, column: 22, scope: !387)
!390 = !DILocation(line: 660, column: 7, scope: !341)
!391 = !DILocation(line: 666, column: 7, scope: !392)
!392 = distinct !DILexicalBlock(scope: !387, file: !342, line: 661, column: 5)
!393 = !DILocation(line: 668, column: 5, scope: !392)
!394 = !DILocation(line: 669, column: 11, scope: !341)
!395 = !DILocation(line: 670, column: 24, scope: !341)
!396 = !DILocation(line: 669, column: 3, scope: !341)
!397 = !DILocation(line: 671, column: 11, scope: !341)
!398 = !DILocation(line: 672, column: 11, scope: !341)
!399 = !DILocation(line: 672, column: 17, scope: !341)
!400 = !DILocation(line: 672, column: 25, scope: !341)
!401 = !DILocation(line: 672, column: 22, scope: !341)
!402 = !DILocation(line: 671, column: 3, scope: !341)
!403 = !DILocation(line: 673, column: 1, scope: !341)
!404 = !DILocalVariable(name: "lc_messages", scope: !405, file: !342, line: 659, type: !69)
!405 = distinct !DISubprogram(name: "emit_ancillary_info", scope: !342, file: !342, line: 634, type: !343, scopeLine: 635, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !406, retainedNodes: !4)
!406 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !407, nameTableKind: None)
!407 = !{!408, !410, !412, !414, !416, !426, !428, !430, !432, !434, !436, !438, !440, !442, !444, !446, !449}
!408 = !DIGlobalVariableExpression(var: !409, expr: !DIExpression())
!409 = distinct !DIGlobalVariable(name: "ruid", scope: !406, file: !3, line: 64, type: !12, isLocal: true, isDefinition: true)
!410 = !DIGlobalVariableExpression(var: !411, expr: !DIExpression())
!411 = distinct !DIGlobalVariable(name: "euid", scope: !406, file: !3, line: 64, type: !12, isLocal: true, isDefinition: true)
!412 = !DIGlobalVariableExpression(var: !413, expr: !DIExpression())
!413 = distinct !DIGlobalVariable(name: "rgid", scope: !406, file: !3, line: 65, type: !21, isLocal: true, isDefinition: true)
!414 = !DIGlobalVariableExpression(var: !415, expr: !DIExpression())
!415 = distinct !DIGlobalVariable(name: "egid", scope: !406, file: !3, line: 65, type: !21, isLocal: true, isDefinition: true)
!416 = !DIGlobalVariableExpression(var: !417, expr: !DIExpression())
!417 = distinct !DIGlobalVariable(name: "longopts", scope: !406, file: !3, line: 75, type: !418, isLocal: true, isDefinition: true)
!418 = !DICompositeType(tag: DW_TAG_array_type, baseType: !419, size: 2560, elements: !76)
!419 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !420)
!420 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !66, line: 50, size: 256, elements: !421)
!421 = !{!422, !423, !424, !425}
!422 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !420, file: !66, line: 52, baseType: !69, size: 64)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !420, file: !66, line: 55, baseType: !72, size: 32, offset: 64)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !420, file: !66, line: 56, baseType: !74, size: 64, offset: 128)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !420, file: !66, line: 57, baseType: !72, size: 32, offset: 192)
!426 = !DIGlobalVariableExpression(var: !427, expr: !DIExpression())
!427 = distinct !DIGlobalVariable(name: "just_context", scope: !406, file: !3, line: 45, type: !27, isLocal: true, isDefinition: true)
!428 = !DIGlobalVariableExpression(var: !429, expr: !DIExpression())
!429 = distinct !DIGlobalVariable(name: "just_group", scope: !406, file: !3, line: 51, type: !27, isLocal: true, isDefinition: true)
!430 = !DIGlobalVariableExpression(var: !431, expr: !DIExpression())
!431 = distinct !DIGlobalVariable(name: "use_name", scope: !406, file: !3, line: 61, type: !27, isLocal: true, isDefinition: true)
!432 = !DIGlobalVariableExpression(var: !433, expr: !DIExpression())
!433 = distinct !DIGlobalVariable(name: "use_real", scope: !406, file: !3, line: 53, type: !27, isLocal: true, isDefinition: true)
!434 = !DIGlobalVariableExpression(var: !435, expr: !DIExpression())
!435 = distinct !DIGlobalVariable(name: "just_user", scope: !406, file: !3, line: 55, type: !27, isLocal: true, isDefinition: true)
!436 = !DIGlobalVariableExpression(var: !437, expr: !DIExpression())
!437 = distinct !DIGlobalVariable(name: "opt_zero", scope: !406, file: !3, line: 47, type: !27, isLocal: true, isDefinition: true)
!438 = !DIGlobalVariableExpression(var: !439, expr: !DIExpression())
!439 = distinct !DIGlobalVariable(name: "just_group_list", scope: !406, file: !3, line: 49, type: !27, isLocal: true, isDefinition: true)
!440 = !DIGlobalVariableExpression(var: !441, expr: !DIExpression())
!441 = distinct !DIGlobalVariable(name: "context", scope: !406, file: !3, line: 69, type: !6, isLocal: true, isDefinition: true)
!442 = !DIGlobalVariableExpression(var: !443, expr: !DIExpression())
!443 = distinct !DIGlobalVariable(name: "multiple_users", scope: !406, file: !3, line: 59, type: !27, isLocal: true, isDefinition: true)
!444 = !DIGlobalVariableExpression(var: !445, expr: !DIExpression())
!445 = distinct !DIGlobalVariable(name: "ok", scope: !406, file: !3, line: 57, type: !27, isLocal: true, isDefinition: true)
!446 = !DIGlobalVariableExpression(var: !447, expr: !DIExpression())
!447 = distinct !DIGlobalVariable(name: "buf", scope: !448, file: !3, line: 327, type: !53, isLocal: true, isDefinition: true)
!448 = distinct !DISubprogram(name: "uidtostr_ptr", scope: !3, file: !3, line: 325, type: !49, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !406, retainedNodes: !4)
!449 = !DIGlobalVariableExpression(var: !450, expr: !DIExpression())
!450 = distinct !DIGlobalVariable(name: "buf", scope: !451, file: !3, line: 316, type: !53, isLocal: true, isDefinition: true)
!451 = distinct !DISubprogram(name: "gidtostr_ptr", scope: !3, file: !3, line: 314, type: !59, scopeLine: 315, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !406, retainedNodes: !4)
!452 = distinct !DISubprogram(name: "main", scope: !3, file: !3, line: 125, type: !453, scopeLine: 126, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4)
!453 = !DISubroutineType(types: !454)
!454 = !{!72, !72, !184}
!455 = !DILocalVariable(name: "argc", arg: 1, scope: !452, file: !3, line: 125, type: !72)
!456 = !DILocation(line: 125, column: 11, scope: !452)
!457 = !DILocalVariable(name: "argv", arg: 2, scope: !452, file: !3, line: 125, type: !184)
!458 = !DILocation(line: 125, column: 24, scope: !452)
!459 = !DILocalVariable(name: "optc", scope: !452, file: !3, line: 127, type: !72)
!460 = !DILocation(line: 127, column: 7, scope: !452)
!461 = !DILocalVariable(name: "selinux_enabled", scope: !452, file: !3, line: 128, type: !72)
!462 = !DILocation(line: 128, column: 7, scope: !452)
!463 = !DILocalVariable(name: "smack_enabled", scope: !452, file: !3, line: 129, type: !27)
!464 = !DILocation(line: 129, column: 8, scope: !452)
!465 = !DILocation(line: 129, column: 24, scope: !452)
!466 = !DILocalVariable(name: "pw_name", scope: !452, file: !3, line: 130, type: !6)
!467 = !DILocation(line: 130, column: 9, scope: !452)
!468 = !DILocation(line: 133, column: 21, scope: !452)
!469 = !DILocation(line: 133, column: 3, scope: !452)
!470 = !DILocation(line: 134, column: 3, scope: !452)
!471 = !DILocation(line: 135, column: 3, scope: !452)
!472 = !DILocation(line: 136, column: 3, scope: !452)
!473 = !DILocation(line: 138, column: 3, scope: !452)
!474 = !DILocation(line: 140, column: 3, scope: !452)
!475 = !DILocation(line: 140, column: 31, scope: !452)
!476 = !DILocation(line: 140, column: 37, scope: !452)
!477 = !DILocation(line: 140, column: 18, scope: !452)
!478 = !DILocation(line: 140, column: 16, scope: !452)
!479 = !DILocation(line: 140, column: 72, scope: !452)
!480 = !DILocation(line: 142, column: 15, scope: !481)
!481 = distinct !DILexicalBlock(scope: !452, file: !3, line: 141, column: 5)
!482 = !DILocation(line: 142, column: 7, scope: !481)
!483 = !DILocation(line: 146, column: 11, scope: !484)
!484 = distinct !DILexicalBlock(scope: !481, file: !3, line: 143, column: 9)
!485 = !DILocation(line: 156, column: 16, scope: !486)
!486 = distinct !DILexicalBlock(scope: !484, file: !3, line: 156, column: 15)
!487 = !DILocation(line: 156, column: 15, scope: !484)
!488 = !DILocation(line: 157, column: 13, scope: !486)
!489 = !DILocation(line: 160, column: 24, scope: !484)
!490 = !DILocation(line: 161, column: 11, scope: !484)
!491 = !DILocation(line: 164, column: 22, scope: !484)
!492 = !DILocation(line: 165, column: 11, scope: !484)
!493 = !DILocation(line: 167, column: 20, scope: !484)
!494 = !DILocation(line: 168, column: 11, scope: !484)
!495 = !DILocation(line: 170, column: 20, scope: !484)
!496 = !DILocation(line: 171, column: 11, scope: !484)
!497 = !DILocation(line: 173, column: 21, scope: !484)
!498 = !DILocation(line: 174, column: 11, scope: !484)
!499 = !DILocation(line: 176, column: 20, scope: !484)
!500 = !DILocation(line: 177, column: 11, scope: !484)
!501 = !DILocation(line: 179, column: 27, scope: !484)
!502 = !DILocation(line: 180, column: 11, scope: !484)
!503 = !DILocation(line: 181, column: 9, scope: !484)
!504 = !DILocation(line: 182, column: 9, scope: !484)
!505 = !DILocation(line: 184, column: 11, scope: !484)
!506 = distinct !{!506, !474, !507}
!507 = !DILocation(line: 186, column: 5, scope: !452)
!508 = !DILocalVariable(name: "n_ids", scope: !452, file: !3, line: 188, type: !134)
!509 = !DILocation(line: 188, column: 10, scope: !452)
!510 = !DILocation(line: 188, column: 18, scope: !452)
!511 = !DILocation(line: 188, column: 25, scope: !452)
!512 = !DILocation(line: 188, column: 23, scope: !452)
!513 = !DILocation(line: 190, column: 7, scope: !514)
!514 = distinct !DILexicalBlock(scope: !452, file: !3, line: 190, column: 7)
!515 = !DILocation(line: 190, column: 13, scope: !514)
!516 = !DILocation(line: 190, column: 16, scope: !514)
!517 = !DILocation(line: 190, column: 7, scope: !452)
!518 = !DILocation(line: 191, column: 5, scope: !514)
!519 = !DILocation(line: 194, column: 7, scope: !520)
!520 = distinct !DILexicalBlock(scope: !452, file: !3, line: 194, column: 7)
!521 = !DILocation(line: 194, column: 19, scope: !520)
!522 = !DILocation(line: 194, column: 17, scope: !520)
!523 = !DILocation(line: 194, column: 32, scope: !520)
!524 = !DILocation(line: 194, column: 30, scope: !520)
!525 = !DILocation(line: 194, column: 50, scope: !520)
!526 = !DILocation(line: 194, column: 48, scope: !520)
!527 = !DILocation(line: 194, column: 63, scope: !520)
!528 = !DILocation(line: 194, column: 7, scope: !452)
!529 = !DILocation(line: 195, column: 5, scope: !520)
!530 = !DILocalVariable(name: "default_format", scope: !452, file: !3, line: 197, type: !27)
!531 = !DILocation(line: 197, column: 8, scope: !452)
!532 = !DILocation(line: 197, column: 28, scope: !452)
!533 = !DILocation(line: 198, column: 28, scope: !452)
!534 = !DILocation(line: 198, column: 31, scope: !452)
!535 = !DILocation(line: 199, column: 28, scope: !452)
!536 = !DILocation(line: 199, column: 31, scope: !452)
!537 = !DILocation(line: 200, column: 28, scope: !452)
!538 = !DILocation(line: 200, column: 31, scope: !452)
!539 = !DILocation(line: 197, column: 25, scope: !452)
!540 = !DILocation(line: 202, column: 7, scope: !541)
!541 = distinct !DILexicalBlock(scope: !452, file: !3, line: 202, column: 7)
!542 = !DILocation(line: 202, column: 22, scope: !541)
!543 = !DILocation(line: 202, column: 26, scope: !541)
!544 = !DILocation(line: 202, column: 35, scope: !541)
!545 = !DILocation(line: 202, column: 38, scope: !541)
!546 = !DILocation(line: 202, column: 7, scope: !452)
!547 = !DILocation(line: 203, column: 5, scope: !541)
!548 = !DILocation(line: 206, column: 7, scope: !549)
!549 = distinct !DILexicalBlock(scope: !452, file: !3, line: 206, column: 7)
!550 = !DILocation(line: 206, column: 22, scope: !549)
!551 = !DILocation(line: 206, column: 25, scope: !549)
!552 = !DILocation(line: 206, column: 7, scope: !452)
!553 = !DILocation(line: 207, column: 5, scope: !549)
!554 = !DILocation(line: 215, column: 7, scope: !555)
!555 = distinct !DILexicalBlock(scope: !452, file: !3, line: 215, column: 7)
!556 = !DILocation(line: 215, column: 13, scope: !555)
!557 = !DILocation(line: 216, column: 11, scope: !555)
!558 = !DILocation(line: 217, column: 11, scope: !555)
!559 = !DILocation(line: 217, column: 15, scope: !555)
!560 = !DILocation(line: 217, column: 30, scope: !555)
!561 = !DILocation(line: 217, column: 35, scope: !555)
!562 = !DILocation(line: 215, column: 7, scope: !452)
!563 = !DILocation(line: 220, column: 12, scope: !564)
!564 = distinct !DILexicalBlock(scope: !565, file: !3, line: 220, column: 11)
!565 = distinct !DILexicalBlock(scope: !555, file: !3, line: 218, column: 5)
!566 = !DILocation(line: 220, column: 28, scope: !564)
!567 = !DILocation(line: 220, column: 31, scope: !564)
!568 = !DILocation(line: 220, column: 49, scope: !564)
!569 = !DILocation(line: 220, column: 52, scope: !564)
!570 = !DILocation(line: 221, column: 11, scope: !564)
!571 = !DILocation(line: 221, column: 15, scope: !564)
!572 = !DILocation(line: 222, column: 15, scope: !564)
!573 = !DILocation(line: 222, column: 18, scope: !564)
!574 = !DILocation(line: 222, column: 55, scope: !564)
!575 = !DILocation(line: 223, column: 15, scope: !564)
!576 = !DILocation(line: 223, column: 18, scope: !564)
!577 = !DILocation(line: 220, column: 11, scope: !565)
!578 = !DILocation(line: 224, column: 9, scope: !564)
!579 = !DILocation(line: 225, column: 5, scope: !565)
!580 = !DILocation(line: 227, column: 7, scope: !581)
!581 = distinct !DILexicalBlock(scope: !452, file: !3, line: 227, column: 7)
!582 = !DILocation(line: 227, column: 13, scope: !581)
!583 = !DILocation(line: 227, column: 7, scope: !452)
!584 = !DILocation(line: 229, column: 24, scope: !585)
!585 = distinct !DILexicalBlock(scope: !581, file: !3, line: 228, column: 5)
!586 = !DILocation(line: 229, column: 30, scope: !585)
!587 = !DILocation(line: 229, column: 22, scope: !585)
!588 = !DILocation(line: 234, column: 16, scope: !585)
!589 = !DILocation(line: 234, column: 13, scope: !585)
!590 = !DILocation(line: 236, column: 7, scope: !585)
!591 = !DILocation(line: 236, column: 14, scope: !592)
!592 = distinct !DILexicalBlock(scope: !593, file: !3, line: 236, column: 7)
!593 = distinct !DILexicalBlock(scope: !585, file: !3, line: 236, column: 7)
!594 = !DILocation(line: 236, column: 23, scope: !592)
!595 = !DILocation(line: 236, column: 21, scope: !592)
!596 = !DILocation(line: 236, column: 7, scope: !593)
!597 = !DILocalVariable(name: "pwd", scope: !598, file: !3, line: 238, type: !599)
!598 = distinct !DILexicalBlock(scope: !592, file: !3, line: 237, column: 9)
!599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !600, size: 64)
!600 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "passwd", file: !601, line: 49, size: 384, elements: !602)
!601 = !DIFile(filename: "/usr/include/pwd.h", directory: "")
!602 = !{!603, !604, !605, !606, !607, !608, !609}
!603 = !DIDerivedType(tag: DW_TAG_member, name: "pw_name", scope: !600, file: !601, line: 51, baseType: !6, size: 64)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "pw_passwd", scope: !600, file: !601, line: 52, baseType: !6, size: 64, offset: 64)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "pw_uid", scope: !600, file: !601, line: 54, baseType: !14, size: 32, offset: 128)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "pw_gid", scope: !600, file: !601, line: 55, baseType: !22, size: 32, offset: 160)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "pw_gecos", scope: !600, file: !601, line: 56, baseType: !6, size: 64, offset: 192)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "pw_dir", scope: !600, file: !601, line: 57, baseType: !6, size: 64, offset: 256)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "pw_shell", scope: !600, file: !601, line: 58, baseType: !6, size: 64, offset: 320)
!610 = !DILocation(line: 238, column: 26, scope: !598)
!611 = !DILocalVariable(name: "spec", scope: !598, file: !3, line: 239, type: !69)
!612 = !DILocation(line: 239, column: 23, scope: !598)
!613 = !DILocation(line: 239, column: 30, scope: !598)
!614 = !DILocation(line: 239, column: 35, scope: !598)
!615 = !DILocation(line: 243, column: 16, scope: !616)
!616 = distinct !DILexicalBlock(scope: !598, file: !3, line: 243, column: 15)
!617 = !DILocation(line: 243, column: 15, scope: !616)
!618 = !DILocation(line: 243, column: 15, scope: !598)
!619 = !DILocation(line: 245, column: 36, scope: !620)
!620 = distinct !DILexicalBlock(scope: !621, file: !3, line: 245, column: 19)
!621 = distinct !DILexicalBlock(scope: !616, file: !3, line: 244, column: 13)
!622 = !DILocation(line: 245, column: 19, scope: !620)
!623 = !DILocation(line: 245, column: 67, scope: !620)
!624 = !DILocation(line: 245, column: 19, scope: !621)
!625 = !DILocation(line: 250, column: 35, scope: !626)
!626 = distinct !DILexicalBlock(scope: !620, file: !3, line: 246, column: 17)
!627 = !DILocation(line: 250, column: 25, scope: !626)
!628 = !DILocation(line: 250, column: 23, scope: !626)
!629 = !DILocation(line: 251, column: 17, scope: !626)
!630 = !DILocation(line: 252, column: 13, scope: !621)
!631 = !DILocation(line: 253, column: 15, scope: !632)
!632 = distinct !DILexicalBlock(scope: !598, file: !3, line: 253, column: 15)
!633 = !DILocation(line: 253, column: 19, scope: !632)
!634 = !DILocation(line: 253, column: 15, scope: !598)
!635 = !DILocation(line: 255, column: 25, scope: !636)
!636 = distinct !DILexicalBlock(scope: !632, file: !3, line: 254, column: 13)
!637 = !DILocation(line: 255, column: 32, scope: !636)
!638 = !DILocation(line: 255, column: 62, scope: !636)
!639 = !DILocation(line: 255, column: 67, scope: !636)
!640 = !DILocation(line: 255, column: 55, scope: !636)
!641 = !DILocation(line: 255, column: 15, scope: !636)
!642 = !DILocation(line: 256, column: 18, scope: !636)
!643 = !DILocation(line: 257, column: 15, scope: !636)
!644 = !DILocation(line: 259, column: 30, scope: !598)
!645 = !DILocation(line: 259, column: 35, scope: !598)
!646 = !DILocation(line: 259, column: 21, scope: !598)
!647 = !DILocation(line: 259, column: 19, scope: !598)
!648 = !DILocation(line: 260, column: 25, scope: !598)
!649 = !DILocation(line: 260, column: 30, scope: !598)
!650 = !DILocation(line: 260, column: 23, scope: !598)
!651 = !DILocation(line: 260, column: 16, scope: !598)
!652 = !DILocation(line: 261, column: 25, scope: !598)
!653 = !DILocation(line: 261, column: 30, scope: !598)
!654 = !DILocation(line: 261, column: 23, scope: !598)
!655 = !DILocation(line: 261, column: 16, scope: !598)
!656 = !DILocation(line: 262, column: 24, scope: !598)
!657 = !DILocation(line: 262, column: 11, scope: !598)
!658 = !DILocation(line: 263, column: 17, scope: !598)
!659 = !DILocation(line: 263, column: 11, scope: !598)
!660 = !DILocation(line: 264, column: 9, scope: !598)
!661 = !DILocation(line: 236, column: 36, scope: !592)
!662 = !DILocation(line: 236, column: 7, scope: !592)
!663 = distinct !{!663, !596, !664}
!664 = !DILocation(line: 264, column: 9, scope: !593)
!665 = !DILocation(line: 265, column: 5, scope: !585)
!666 = !DILocalVariable(name: "NO_UID", scope: !667, file: !3, line: 271, type: !12)
!667 = distinct !DILexicalBlock(scope: !581, file: !3, line: 267, column: 5)
!668 = !DILocation(line: 271, column: 13, scope: !667)
!669 = !DILocalVariable(name: "NO_GID", scope: !667, file: !3, line: 272, type: !21)
!670 = !DILocation(line: 272, column: 13, scope: !667)
!671 = !DILocation(line: 274, column: 11, scope: !672)
!672 = distinct !DILexicalBlock(scope: !667, file: !3, line: 274, column: 11)
!673 = !DILocation(line: 274, column: 11, scope: !667)
!674 = !DILocation(line: 274, column: 24, scope: !672)
!675 = !DILocation(line: 275, column: 14, scope: !672)
!676 = !DILocation(line: 275, column: 25, scope: !672)
!677 = !DILocation(line: 275, column: 29, scope: !672)
!678 = !DILocation(line: 275, column: 45, scope: !672)
!679 = !DILocation(line: 275, column: 49, scope: !672)
!680 = !DILocation(line: 277, column: 11, scope: !681)
!681 = distinct !DILexicalBlock(scope: !672, file: !3, line: 276, column: 9)
!682 = !DILocation(line: 277, column: 17, scope: !681)
!683 = !DILocation(line: 278, column: 18, scope: !681)
!684 = !DILocation(line: 278, column: 16, scope: !681)
!685 = !DILocation(line: 279, column: 15, scope: !686)
!686 = distinct !DILexicalBlock(scope: !681, file: !3, line: 279, column: 15)
!687 = !DILocation(line: 279, column: 23, scope: !686)
!688 = !DILocation(line: 279, column: 20, scope: !686)
!689 = !DILocation(line: 279, column: 30, scope: !686)
!690 = !DILocation(line: 279, column: 33, scope: !686)
!691 = !DILocation(line: 279, column: 15, scope: !681)
!692 = !DILocation(line: 280, column: 13, scope: !686)
!693 = !DILocation(line: 281, column: 9, scope: !681)
!694 = !DILocation(line: 283, column: 11, scope: !695)
!695 = distinct !DILexicalBlock(scope: !667, file: !3, line: 283, column: 11)
!696 = !DILocation(line: 283, column: 11, scope: !667)
!697 = !DILocation(line: 283, column: 23, scope: !695)
!698 = !DILocation(line: 284, column: 14, scope: !695)
!699 = !DILocation(line: 284, column: 25, scope: !695)
!700 = !DILocation(line: 284, column: 29, scope: !695)
!701 = !DILocation(line: 284, column: 45, scope: !695)
!702 = !DILocation(line: 284, column: 49, scope: !695)
!703 = !DILocation(line: 286, column: 11, scope: !704)
!704 = distinct !DILexicalBlock(scope: !695, file: !3, line: 285, column: 9)
!705 = !DILocation(line: 286, column: 17, scope: !704)
!706 = !DILocation(line: 287, column: 18, scope: !704)
!707 = !DILocation(line: 287, column: 16, scope: !704)
!708 = !DILocation(line: 288, column: 15, scope: !709)
!709 = distinct !DILexicalBlock(scope: !704, file: !3, line: 288, column: 15)
!710 = !DILocation(line: 288, column: 23, scope: !709)
!711 = !DILocation(line: 288, column: 20, scope: !709)
!712 = !DILocation(line: 288, column: 30, scope: !709)
!713 = !DILocation(line: 288, column: 33, scope: !709)
!714 = !DILocation(line: 288, column: 15, scope: !704)
!715 = !DILocation(line: 289, column: 13, scope: !709)
!716 = !DILocation(line: 290, column: 9, scope: !704)
!717 = !DILocation(line: 292, column: 12, scope: !718)
!718 = distinct !DILexicalBlock(scope: !667, file: !3, line: 292, column: 11)
!719 = !DILocation(line: 292, column: 22, scope: !718)
!720 = !DILocation(line: 292, column: 26, scope: !718)
!721 = !DILocation(line: 292, column: 37, scope: !718)
!722 = !DILocation(line: 292, column: 40, scope: !718)
!723 = !DILocation(line: 292, column: 56, scope: !718)
!724 = !DILocation(line: 292, column: 60, scope: !718)
!725 = !DILocation(line: 292, column: 11, scope: !667)
!726 = !DILocation(line: 294, column: 11, scope: !727)
!727 = distinct !DILexicalBlock(scope: !718, file: !3, line: 293, column: 9)
!728 = !DILocation(line: 294, column: 17, scope: !727)
!729 = !DILocation(line: 295, column: 18, scope: !727)
!730 = !DILocation(line: 295, column: 16, scope: !727)
!731 = !DILocation(line: 296, column: 15, scope: !732)
!732 = distinct !DILexicalBlock(scope: !727, file: !3, line: 296, column: 15)
!733 = !DILocation(line: 296, column: 23, scope: !732)
!734 = !DILocation(line: 296, column: 20, scope: !732)
!735 = !DILocation(line: 296, column: 30, scope: !732)
!736 = !DILocation(line: 296, column: 33, scope: !732)
!737 = !DILocation(line: 296, column: 15, scope: !727)
!738 = !DILocation(line: 297, column: 13, scope: !732)
!739 = !DILocation(line: 299, column: 11, scope: !727)
!740 = !DILocation(line: 299, column: 17, scope: !727)
!741 = !DILocation(line: 300, column: 18, scope: !727)
!742 = !DILocation(line: 300, column: 16, scope: !727)
!743 = !DILocation(line: 301, column: 15, scope: !744)
!744 = distinct !DILexicalBlock(scope: !727, file: !3, line: 301, column: 15)
!745 = !DILocation(line: 301, column: 23, scope: !744)
!746 = !DILocation(line: 301, column: 20, scope: !744)
!747 = !DILocation(line: 301, column: 30, scope: !744)
!748 = !DILocation(line: 301, column: 33, scope: !744)
!749 = !DILocation(line: 301, column: 15, scope: !727)
!750 = !DILocation(line: 302, column: 13, scope: !744)
!751 = !DILocation(line: 303, column: 9, scope: !727)
!752 = !DILocation(line: 304, column: 22, scope: !667)
!753 = !DILocation(line: 304, column: 9, scope: !667)
!754 = !DILocation(line: 307, column: 10, scope: !452)
!755 = !DILocation(line: 307, column: 3, scope: !452)
!756 = !DILocalVariable(name: "argc", arg: 1, scope: !757, file: !3, line: 125, type: !72)
!757 = distinct !DISubprogram(name: "main", scope: !3, file: !3, line: 125, type: !453, scopeLine: 126, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !758, retainedNodes: !4)
!758 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !759, nameTableKind: None)
!759 = !{!760, !762, !764, !766, !768, !778, !780, !782, !784, !786, !788, !790, !792, !794, !796, !798, !801}
!760 = !DIGlobalVariableExpression(var: !761, expr: !DIExpression())
!761 = distinct !DIGlobalVariable(name: "ruid", scope: !758, file: !3, line: 64, type: !12, isLocal: true, isDefinition: true)
!762 = !DIGlobalVariableExpression(var: !763, expr: !DIExpression())
!763 = distinct !DIGlobalVariable(name: "euid", scope: !758, file: !3, line: 64, type: !12, isLocal: true, isDefinition: true)
!764 = !DIGlobalVariableExpression(var: !765, expr: !DIExpression())
!765 = distinct !DIGlobalVariable(name: "rgid", scope: !758, file: !3, line: 65, type: !21, isLocal: true, isDefinition: true)
!766 = !DIGlobalVariableExpression(var: !767, expr: !DIExpression())
!767 = distinct !DIGlobalVariable(name: "egid", scope: !758, file: !3, line: 65, type: !21, isLocal: true, isDefinition: true)
!768 = !DIGlobalVariableExpression(var: !769, expr: !DIExpression())
!769 = distinct !DIGlobalVariable(name: "longopts", scope: !758, file: !3, line: 75, type: !770, isLocal: true, isDefinition: true)
!770 = !DICompositeType(tag: DW_TAG_array_type, baseType: !771, size: 2560, elements: !76)
!771 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !772)
!772 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !66, line: 50, size: 256, elements: !773)
!773 = !{!774, !775, !776, !777}
!774 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !772, file: !66, line: 52, baseType: !69, size: 64)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !772, file: !66, line: 55, baseType: !72, size: 32, offset: 64)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !772, file: !66, line: 56, baseType: !74, size: 64, offset: 128)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !772, file: !66, line: 57, baseType: !72, size: 32, offset: 192)
!778 = !DIGlobalVariableExpression(var: !779, expr: !DIExpression())
!779 = distinct !DIGlobalVariable(name: "just_context", scope: !758, file: !3, line: 45, type: !27, isLocal: true, isDefinition: true)
!780 = !DIGlobalVariableExpression(var: !781, expr: !DIExpression())
!781 = distinct !DIGlobalVariable(name: "just_group", scope: !758, file: !3, line: 51, type: !27, isLocal: true, isDefinition: true)
!782 = !DIGlobalVariableExpression(var: !783, expr: !DIExpression())
!783 = distinct !DIGlobalVariable(name: "use_name", scope: !758, file: !3, line: 61, type: !27, isLocal: true, isDefinition: true)
!784 = !DIGlobalVariableExpression(var: !785, expr: !DIExpression())
!785 = distinct !DIGlobalVariable(name: "use_real", scope: !758, file: !3, line: 53, type: !27, isLocal: true, isDefinition: true)
!786 = !DIGlobalVariableExpression(var: !787, expr: !DIExpression())
!787 = distinct !DIGlobalVariable(name: "just_user", scope: !758, file: !3, line: 55, type: !27, isLocal: true, isDefinition: true)
!788 = !DIGlobalVariableExpression(var: !789, expr: !DIExpression())
!789 = distinct !DIGlobalVariable(name: "opt_zero", scope: !758, file: !3, line: 47, type: !27, isLocal: true, isDefinition: true)
!790 = !DIGlobalVariableExpression(var: !791, expr: !DIExpression())
!791 = distinct !DIGlobalVariable(name: "just_group_list", scope: !758, file: !3, line: 49, type: !27, isLocal: true, isDefinition: true)
!792 = !DIGlobalVariableExpression(var: !793, expr: !DIExpression())
!793 = distinct !DIGlobalVariable(name: "context", scope: !758, file: !3, line: 69, type: !6, isLocal: true, isDefinition: true)
!794 = !DIGlobalVariableExpression(var: !795, expr: !DIExpression())
!795 = distinct !DIGlobalVariable(name: "multiple_users", scope: !758, file: !3, line: 59, type: !27, isLocal: true, isDefinition: true)
!796 = !DIGlobalVariableExpression(var: !797, expr: !DIExpression())
!797 = distinct !DIGlobalVariable(name: "ok", scope: !758, file: !3, line: 57, type: !27, isLocal: true, isDefinition: true)
!798 = !DIGlobalVariableExpression(var: !799, expr: !DIExpression())
!799 = distinct !DIGlobalVariable(name: "buf", scope: !800, file: !3, line: 327, type: !53, isLocal: true, isDefinition: true)
!800 = distinct !DISubprogram(name: "uidtostr_ptr", scope: !3, file: !3, line: 325, type: !49, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !758, retainedNodes: !4)
!801 = !DIGlobalVariableExpression(var: !802, expr: !DIExpression())
!802 = distinct !DIGlobalVariable(name: "buf", scope: !803, file: !3, line: 316, type: !53, isLocal: true, isDefinition: true)
!803 = distinct !DISubprogram(name: "gidtostr_ptr", scope: !3, file: !3, line: 314, type: !59, scopeLine: 315, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !758, retainedNodes: !4)
!804 = !DILocalVariable(name: "argv", arg: 2, scope: !757, file: !3, line: 125, type: !184)
!805 = !DILocalVariable(name: "optc", scope: !757, file: !3, line: 127, type: !72)
!806 = !DILocalVariable(name: "selinux_enabled", scope: !757, file: !3, line: 128, type: !72)
!807 = !DILocalVariable(name: "smack_enabled", scope: !757, file: !3, line: 129, type: !27)
!808 = !DILocalVariable(name: "pw_name", scope: !757, file: !3, line: 130, type: !6)
!809 = !DILocalVariable(name: "spec", scope: !810, file: !3, line: 239, type: !69)
!810 = distinct !DILexicalBlock(scope: !811, file: !3, line: 237, column: 9)
!811 = distinct !DILexicalBlock(scope: !812, file: !3, line: 236, column: 7)
!812 = distinct !DILexicalBlock(scope: !813, file: !3, line: 236, column: 7)
!813 = distinct !DILexicalBlock(scope: !814, file: !3, line: 228, column: 5)
!814 = distinct !DILexicalBlock(scope: !815, file: !3, line: 227, column: 7)
!815 = distinct !DISubprogram(name: "main", scope: !3, file: !3, line: 125, type: !453, scopeLine: 126, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !816, retainedNodes: !4)
!816 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !817, nameTableKind: None)
!817 = !{!818, !820, !822, !824, !826, !836, !838, !840, !842, !844, !846, !848, !850, !852, !854, !856, !859}
!818 = !DIGlobalVariableExpression(var: !819, expr: !DIExpression())
!819 = distinct !DIGlobalVariable(name: "ruid", scope: !816, file: !3, line: 64, type: !12, isLocal: true, isDefinition: true)
!820 = !DIGlobalVariableExpression(var: !821, expr: !DIExpression())
!821 = distinct !DIGlobalVariable(name: "euid", scope: !816, file: !3, line: 64, type: !12, isLocal: true, isDefinition: true)
!822 = !DIGlobalVariableExpression(var: !823, expr: !DIExpression())
!823 = distinct !DIGlobalVariable(name: "rgid", scope: !816, file: !3, line: 65, type: !21, isLocal: true, isDefinition: true)
!824 = !DIGlobalVariableExpression(var: !825, expr: !DIExpression())
!825 = distinct !DIGlobalVariable(name: "egid", scope: !816, file: !3, line: 65, type: !21, isLocal: true, isDefinition: true)
!826 = !DIGlobalVariableExpression(var: !827, expr: !DIExpression())
!827 = distinct !DIGlobalVariable(name: "longopts", scope: !816, file: !3, line: 75, type: !828, isLocal: true, isDefinition: true)
!828 = !DICompositeType(tag: DW_TAG_array_type, baseType: !829, size: 2560, elements: !76)
!829 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !830)
!830 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !66, line: 50, size: 256, elements: !831)
!831 = !{!832, !833, !834, !835}
!832 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !830, file: !66, line: 52, baseType: !69, size: 64)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !830, file: !66, line: 55, baseType: !72, size: 32, offset: 64)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !830, file: !66, line: 56, baseType: !74, size: 64, offset: 128)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !830, file: !66, line: 57, baseType: !72, size: 32, offset: 192)
!836 = !DIGlobalVariableExpression(var: !837, expr: !DIExpression())
!837 = distinct !DIGlobalVariable(name: "just_context", scope: !816, file: !3, line: 45, type: !27, isLocal: true, isDefinition: true)
!838 = !DIGlobalVariableExpression(var: !839, expr: !DIExpression())
!839 = distinct !DIGlobalVariable(name: "just_group", scope: !816, file: !3, line: 51, type: !27, isLocal: true, isDefinition: true)
!840 = !DIGlobalVariableExpression(var: !841, expr: !DIExpression())
!841 = distinct !DIGlobalVariable(name: "use_name", scope: !816, file: !3, line: 61, type: !27, isLocal: true, isDefinition: true)
!842 = !DIGlobalVariableExpression(var: !843, expr: !DIExpression())
!843 = distinct !DIGlobalVariable(name: "use_real", scope: !816, file: !3, line: 53, type: !27, isLocal: true, isDefinition: true)
!844 = !DIGlobalVariableExpression(var: !845, expr: !DIExpression())
!845 = distinct !DIGlobalVariable(name: "just_user", scope: !816, file: !3, line: 55, type: !27, isLocal: true, isDefinition: true)
!846 = !DIGlobalVariableExpression(var: !847, expr: !DIExpression())
!847 = distinct !DIGlobalVariable(name: "opt_zero", scope: !816, file: !3, line: 47, type: !27, isLocal: true, isDefinition: true)
!848 = !DIGlobalVariableExpression(var: !849, expr: !DIExpression())
!849 = distinct !DIGlobalVariable(name: "just_group_list", scope: !816, file: !3, line: 49, type: !27, isLocal: true, isDefinition: true)
!850 = !DIGlobalVariableExpression(var: !851, expr: !DIExpression())
!851 = distinct !DIGlobalVariable(name: "context", scope: !816, file: !3, line: 69, type: !6, isLocal: true, isDefinition: true)
!852 = !DIGlobalVariableExpression(var: !853, expr: !DIExpression())
!853 = distinct !DIGlobalVariable(name: "multiple_users", scope: !816, file: !3, line: 59, type: !27, isLocal: true, isDefinition: true)
!854 = !DIGlobalVariableExpression(var: !855, expr: !DIExpression())
!855 = distinct !DIGlobalVariable(name: "ok", scope: !816, file: !3, line: 57, type: !27, isLocal: true, isDefinition: true)
!856 = !DIGlobalVariableExpression(var: !857, expr: !DIExpression())
!857 = distinct !DIGlobalVariable(name: "buf", scope: !858, file: !3, line: 327, type: !53, isLocal: true, isDefinition: true)
!858 = distinct !DISubprogram(name: "uidtostr_ptr", scope: !3, file: !3, line: 325, type: !49, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !816, retainedNodes: !4)
!859 = !DIGlobalVariableExpression(var: !860, expr: !DIExpression())
!860 = distinct !DIGlobalVariable(name: "buf", scope: !861, file: !3, line: 316, type: !53, isLocal: true, isDefinition: true)
!861 = distinct !DISubprogram(name: "gidtostr_ptr", scope: !3, file: !3, line: 314, type: !59, scopeLine: 315, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !816, retainedNodes: !4)
!862 = distinct !DISubprogram(name: "is_smack_enabled", scope: !863, file: !863, line: 39, type: !864, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!863 = !DIFile(filename: "./lib/smack.h", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!864 = !DISubroutineType(types: !865)
!865 = !{!27}
!866 = !DILocation(line: 44, column: 3, scope: !862)
!867 = distinct !DISubprogram(name: "smack_new_label_from_self", scope: !863, file: !863, line: 26, type: !868, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!868 = !DISubroutineType(types: !869)
!869 = !{!870, !184}
!870 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !871, line: 77, baseType: !872)
!871 = !DIFile(filename: "/usr/include/stdio.h", directory: "")
!872 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !15, line: 193, baseType: !873)
!873 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!874 = !DILocalVariable(name: "label", arg: 1, scope: !867, file: !863, line: 26, type: !184)
!875 = !DILocation(line: 26, column: 35, scope: !867)
!876 = !DILocation(line: 28, column: 3, scope: !867)
!877 = !DILocalVariable(name: "label", arg: 1, scope: !878, file: !863, line: 26, type: !184)
!878 = distinct !DISubprogram(name: "smack_new_label_from_self", scope: !863, file: !863, line: 26, type: !868, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !879, retainedNodes: !4)
!879 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !880, nameTableKind: None)
!880 = !{!881, !883, !885, !887, !889, !899, !901, !903, !905, !907, !909, !911, !913, !915, !917, !919, !922}
!881 = !DIGlobalVariableExpression(var: !882, expr: !DIExpression())
!882 = distinct !DIGlobalVariable(name: "ruid", scope: !879, file: !3, line: 64, type: !12, isLocal: true, isDefinition: true)
!883 = !DIGlobalVariableExpression(var: !884, expr: !DIExpression())
!884 = distinct !DIGlobalVariable(name: "euid", scope: !879, file: !3, line: 64, type: !12, isLocal: true, isDefinition: true)
!885 = !DIGlobalVariableExpression(var: !886, expr: !DIExpression())
!886 = distinct !DIGlobalVariable(name: "rgid", scope: !879, file: !3, line: 65, type: !21, isLocal: true, isDefinition: true)
!887 = !DIGlobalVariableExpression(var: !888, expr: !DIExpression())
!888 = distinct !DIGlobalVariable(name: "egid", scope: !879, file: !3, line: 65, type: !21, isLocal: true, isDefinition: true)
!889 = !DIGlobalVariableExpression(var: !890, expr: !DIExpression())
!890 = distinct !DIGlobalVariable(name: "longopts", scope: !879, file: !3, line: 75, type: !891, isLocal: true, isDefinition: true)
!891 = !DICompositeType(tag: DW_TAG_array_type, baseType: !892, size: 2560, elements: !76)
!892 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !893)
!893 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !66, line: 50, size: 256, elements: !894)
!894 = !{!895, !896, !897, !898}
!895 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !893, file: !66, line: 52, baseType: !69, size: 64)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !893, file: !66, line: 55, baseType: !72, size: 32, offset: 64)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !893, file: !66, line: 56, baseType: !74, size: 64, offset: 128)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !893, file: !66, line: 57, baseType: !72, size: 32, offset: 192)
!899 = !DIGlobalVariableExpression(var: !900, expr: !DIExpression())
!900 = distinct !DIGlobalVariable(name: "just_context", scope: !879, file: !3, line: 45, type: !27, isLocal: true, isDefinition: true)
!901 = !DIGlobalVariableExpression(var: !902, expr: !DIExpression())
!902 = distinct !DIGlobalVariable(name: "just_group", scope: !879, file: !3, line: 51, type: !27, isLocal: true, isDefinition: true)
!903 = !DIGlobalVariableExpression(var: !904, expr: !DIExpression())
!904 = distinct !DIGlobalVariable(name: "use_name", scope: !879, file: !3, line: 61, type: !27, isLocal: true, isDefinition: true)
!905 = !DIGlobalVariableExpression(var: !906, expr: !DIExpression())
!906 = distinct !DIGlobalVariable(name: "use_real", scope: !879, file: !3, line: 53, type: !27, isLocal: true, isDefinition: true)
!907 = !DIGlobalVariableExpression(var: !908, expr: !DIExpression())
!908 = distinct !DIGlobalVariable(name: "just_user", scope: !879, file: !3, line: 55, type: !27, isLocal: true, isDefinition: true)
!909 = !DIGlobalVariableExpression(var: !910, expr: !DIExpression())
!910 = distinct !DIGlobalVariable(name: "opt_zero", scope: !879, file: !3, line: 47, type: !27, isLocal: true, isDefinition: true)
!911 = !DIGlobalVariableExpression(var: !912, expr: !DIExpression())
!912 = distinct !DIGlobalVariable(name: "just_group_list", scope: !879, file: !3, line: 49, type: !27, isLocal: true, isDefinition: true)
!913 = !DIGlobalVariableExpression(var: !914, expr: !DIExpression())
!914 = distinct !DIGlobalVariable(name: "context", scope: !879, file: !3, line: 69, type: !6, isLocal: true, isDefinition: true)
!915 = !DIGlobalVariableExpression(var: !916, expr: !DIExpression())
!916 = distinct !DIGlobalVariable(name: "multiple_users", scope: !879, file: !3, line: 59, type: !27, isLocal: true, isDefinition: true)
!917 = !DIGlobalVariableExpression(var: !918, expr: !DIExpression())
!918 = distinct !DIGlobalVariable(name: "ok", scope: !879, file: !3, line: 57, type: !27, isLocal: true, isDefinition: true)
!919 = !DIGlobalVariableExpression(var: !920, expr: !DIExpression())
!920 = distinct !DIGlobalVariable(name: "buf", scope: !921, file: !3, line: 327, type: !53, isLocal: true, isDefinition: true)
!921 = distinct !DISubprogram(name: "uidtostr_ptr", scope: !3, file: !3, line: 325, type: !49, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !879, retainedNodes: !4)
!922 = !DIGlobalVariableExpression(var: !923, expr: !DIExpression())
!923 = distinct !DIGlobalVariable(name: "buf", scope: !924, file: !3, line: 316, type: !53, isLocal: true, isDefinition: true)
!924 = distinct !DISubprogram(name: "gidtostr_ptr", scope: !3, file: !3, line: 314, type: !59, scopeLine: 315, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !879, retainedNodes: !4)
!925 = distinct !DISubprogram(name: "print_stuff", scope: !3, file: !3, line: 432, type: !343, scopeLine: 433, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!926 = !DILocalVariable(name: "pw_name", arg: 1, scope: !925, file: !3, line: 432, type: !69)
!927 = !DILocation(line: 432, column: 26, scope: !925)
!928 = !DILocation(line: 434, column: 7, scope: !929)
!929 = distinct !DILexicalBlock(scope: !925, file: !3, line: 434, column: 7)
!930 = !DILocation(line: 434, column: 7, scope: !925)
!931 = !DILocation(line: 435, column: 19, scope: !929)
!932 = !DILocation(line: 435, column: 30, scope: !929)
!933 = !DILocation(line: 435, column: 37, scope: !929)
!934 = !DILocation(line: 435, column: 7, scope: !929)
!935 = !DILocation(line: 442, column: 12, scope: !936)
!936 = distinct !DILexicalBlock(scope: !929, file: !3, line: 442, column: 12)
!937 = !DILocation(line: 442, column: 12, scope: !929)
!938 = !DILocation(line: 443, column: 24, scope: !936)
!939 = !DILocation(line: 443, column: 35, scope: !936)
!940 = !DILocation(line: 443, column: 42, scope: !936)
!941 = !DILocation(line: 443, column: 48, scope: !936)
!942 = !DILocation(line: 443, column: 11, scope: !936)
!943 = !DILocation(line: 443, column: 8, scope: !936)
!944 = !DILocation(line: 443, column: 5, scope: !936)
!945 = !DILocation(line: 444, column: 12, scope: !946)
!946 = distinct !DILexicalBlock(scope: !936, file: !3, line: 444, column: 12)
!947 = !DILocation(line: 444, column: 12, scope: !936)
!948 = !DILocation(line: 445, column: 29, scope: !946)
!949 = !DILocation(line: 445, column: 38, scope: !946)
!950 = !DILocation(line: 445, column: 44, scope: !946)
!951 = !DILocation(line: 445, column: 50, scope: !946)
!952 = !DILocation(line: 446, column: 29, scope: !946)
!953 = !DILocation(line: 446, column: 39, scope: !946)
!954 = !DILocation(line: 445, column: 11, scope: !946)
!955 = !DILocation(line: 445, column: 8, scope: !946)
!956 = !DILocation(line: 445, column: 5, scope: !946)
!957 = !DILocation(line: 447, column: 12, scope: !958)
!958 = distinct !DILexicalBlock(scope: !946, file: !3, line: 447, column: 12)
!959 = !DILocation(line: 447, column: 12, scope: !946)
!960 = !DILocation(line: 448, column: 5, scope: !958)
!961 = !DILocation(line: 450, column: 22, scope: !958)
!962 = !DILocation(line: 450, column: 5, scope: !958)
!963 = !DILocation(line: 455, column: 7, scope: !964)
!964 = distinct !DILexicalBlock(scope: !925, file: !3, line: 455, column: 7)
!965 = !DILocation(line: 455, column: 16, scope: !964)
!966 = !DILocation(line: 455, column: 19, scope: !964)
!967 = !DILocation(line: 455, column: 35, scope: !964)
!968 = !DILocation(line: 455, column: 38, scope: !964)
!969 = !DILocation(line: 455, column: 7, scope: !925)
!970 = !DILocation(line: 457, column: 7, scope: !971)
!971 = distinct !DILexicalBlock(scope: !964, file: !3, line: 456, column: 5)
!972 = !DILocation(line: 458, column: 7, scope: !971)
!973 = !DILocation(line: 459, column: 5, scope: !971)
!974 = !DILocation(line: 462, column: 7, scope: !975)
!975 = distinct !DILexicalBlock(scope: !964, file: !3, line: 461, column: 5)
!976 = !DILocation(line: 464, column: 1, scope: !925)
!977 = !DILocalVariable(name: "pw_name", arg: 1, scope: !978, file: !3, line: 432, type: !69)
!978 = distinct !DISubprogram(name: "print_stuff", scope: !3, file: !3, line: 432, type: !343, scopeLine: 433, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !979, retainedNodes: !4)
!979 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !980, nameTableKind: None)
!980 = !{!981, !983, !985, !987, !989, !999, !1001, !1003, !1005, !1007, !1009, !1011, !1013, !1015, !1017, !1019, !1022}
!981 = !DIGlobalVariableExpression(var: !982, expr: !DIExpression())
!982 = distinct !DIGlobalVariable(name: "ruid", scope: !979, file: !3, line: 64, type: !12, isLocal: true, isDefinition: true)
!983 = !DIGlobalVariableExpression(var: !984, expr: !DIExpression())
!984 = distinct !DIGlobalVariable(name: "euid", scope: !979, file: !3, line: 64, type: !12, isLocal: true, isDefinition: true)
!985 = !DIGlobalVariableExpression(var: !986, expr: !DIExpression())
!986 = distinct !DIGlobalVariable(name: "rgid", scope: !979, file: !3, line: 65, type: !21, isLocal: true, isDefinition: true)
!987 = !DIGlobalVariableExpression(var: !988, expr: !DIExpression())
!988 = distinct !DIGlobalVariable(name: "egid", scope: !979, file: !3, line: 65, type: !21, isLocal: true, isDefinition: true)
!989 = !DIGlobalVariableExpression(var: !990, expr: !DIExpression())
!990 = distinct !DIGlobalVariable(name: "longopts", scope: !979, file: !3, line: 75, type: !991, isLocal: true, isDefinition: true)
!991 = !DICompositeType(tag: DW_TAG_array_type, baseType: !992, size: 2560, elements: !76)
!992 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !993)
!993 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !66, line: 50, size: 256, elements: !994)
!994 = !{!995, !996, !997, !998}
!995 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !993, file: !66, line: 52, baseType: !69, size: 64)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !993, file: !66, line: 55, baseType: !72, size: 32, offset: 64)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !993, file: !66, line: 56, baseType: !74, size: 64, offset: 128)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !993, file: !66, line: 57, baseType: !72, size: 32, offset: 192)
!999 = !DIGlobalVariableExpression(var: !1000, expr: !DIExpression())
!1000 = distinct !DIGlobalVariable(name: "just_context", scope: !979, file: !3, line: 45, type: !27, isLocal: true, isDefinition: true)
!1001 = !DIGlobalVariableExpression(var: !1002, expr: !DIExpression())
!1002 = distinct !DIGlobalVariable(name: "just_group", scope: !979, file: !3, line: 51, type: !27, isLocal: true, isDefinition: true)
!1003 = !DIGlobalVariableExpression(var: !1004, expr: !DIExpression())
!1004 = distinct !DIGlobalVariable(name: "use_name", scope: !979, file: !3, line: 61, type: !27, isLocal: true, isDefinition: true)
!1005 = !DIGlobalVariableExpression(var: !1006, expr: !DIExpression())
!1006 = distinct !DIGlobalVariable(name: "use_real", scope: !979, file: !3, line: 53, type: !27, isLocal: true, isDefinition: true)
!1007 = !DIGlobalVariableExpression(var: !1008, expr: !DIExpression())
!1008 = distinct !DIGlobalVariable(name: "just_user", scope: !979, file: !3, line: 55, type: !27, isLocal: true, isDefinition: true)
!1009 = !DIGlobalVariableExpression(var: !1010, expr: !DIExpression())
!1010 = distinct !DIGlobalVariable(name: "opt_zero", scope: !979, file: !3, line: 47, type: !27, isLocal: true, isDefinition: true)
!1011 = !DIGlobalVariableExpression(var: !1012, expr: !DIExpression())
!1012 = distinct !DIGlobalVariable(name: "just_group_list", scope: !979, file: !3, line: 49, type: !27, isLocal: true, isDefinition: true)
!1013 = !DIGlobalVariableExpression(var: !1014, expr: !DIExpression())
!1014 = distinct !DIGlobalVariable(name: "context", scope: !979, file: !3, line: 69, type: !6, isLocal: true, isDefinition: true)
!1015 = !DIGlobalVariableExpression(var: !1016, expr: !DIExpression())
!1016 = distinct !DIGlobalVariable(name: "multiple_users", scope: !979, file: !3, line: 59, type: !27, isLocal: true, isDefinition: true)
!1017 = !DIGlobalVariableExpression(var: !1018, expr: !DIExpression())
!1018 = distinct !DIGlobalVariable(name: "ok", scope: !979, file: !3, line: 57, type: !27, isLocal: true, isDefinition: true)
!1019 = !DIGlobalVariableExpression(var: !1020, expr: !DIExpression())
!1020 = distinct !DIGlobalVariable(name: "buf", scope: !1021, file: !3, line: 327, type: !53, isLocal: true, isDefinition: true)
!1021 = distinct !DISubprogram(name: "uidtostr_ptr", scope: !3, file: !3, line: 325, type: !49, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !979, retainedNodes: !4)
!1022 = !DIGlobalVariableExpression(var: !1023, expr: !DIExpression())
!1023 = distinct !DIGlobalVariable(name: "buf", scope: !1024, file: !3, line: 316, type: !53, isLocal: true, isDefinition: true)
!1024 = distinct !DISubprogram(name: "gidtostr_ptr", scope: !3, file: !3, line: 314, type: !59, scopeLine: 315, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !979, retainedNodes: !4)
!1025 = distinct !DISubprogram(name: "print_user", scope: !3, file: !3, line: 335, type: !1026, scopeLine: 336, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!1026 = !DISubroutineType(types: !1027)
!1027 = !{null, !12}
!1028 = !DILocalVariable(name: "uid", arg: 1, scope: !1025, file: !3, line: 335, type: !12)
!1029 = !DILocation(line: 335, column: 19, scope: !1025)
!1030 = !DILocalVariable(name: "pwd", scope: !1025, file: !3, line: 337, type: !599)
!1031 = !DILocation(line: 337, column: 18, scope: !1025)
!1032 = !DILocation(line: 339, column: 7, scope: !1033)
!1033 = distinct !DILexicalBlock(scope: !1025, file: !3, line: 339, column: 7)
!1034 = !DILocation(line: 339, column: 7, scope: !1025)
!1035 = !DILocation(line: 341, column: 23, scope: !1036)
!1036 = distinct !DILexicalBlock(scope: !1033, file: !3, line: 340, column: 5)
!1037 = !DILocation(line: 341, column: 13, scope: !1036)
!1038 = !DILocation(line: 341, column: 11, scope: !1036)
!1039 = !DILocation(line: 342, column: 11, scope: !1040)
!1040 = distinct !DILexicalBlock(scope: !1036, file: !3, line: 342, column: 11)
!1041 = !DILocation(line: 342, column: 15, scope: !1040)
!1042 = !DILocation(line: 342, column: 11, scope: !1036)
!1043 = !DILocation(line: 344, column: 24, scope: !1044)
!1044 = distinct !DILexicalBlock(scope: !1040, file: !3, line: 343, column: 9)
!1045 = !DILocation(line: 345, column: 18, scope: !1044)
!1046 = !DILocation(line: 344, column: 11, scope: !1044)
!1047 = !DILocation(line: 346, column: 14, scope: !1044)
!1048 = !DILocation(line: 347, column: 9, scope: !1044)
!1049 = !DILocation(line: 348, column: 5, scope: !1036)
!1050 = !DILocalVariable(name: "s", scope: !1025, file: !3, line: 350, type: !6)
!1051 = !DILocation(line: 350, column: 9, scope: !1025)
!1052 = !DILocation(line: 350, column: 13, scope: !1025)
!1053 = !DILocation(line: 350, column: 19, scope: !1025)
!1054 = !DILocation(line: 350, column: 24, scope: !1025)
!1055 = !DILocation(line: 350, column: 34, scope: !1025)
!1056 = !DILocation(line: 351, column: 3, scope: !1025)
!1057 = !DILocation(line: 352, column: 1, scope: !1025)
!1058 = distinct !DISubprogram(name: "print_full_info", scope: !3, file: !3, line: 357, type: !343, scopeLine: 358, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!1059 = !DILocalVariable(name: "username", arg: 1, scope: !1058, file: !3, line: 357, type: !69)
!1060 = !DILocation(line: 357, column: 30, scope: !1058)
!1061 = !DILocalVariable(name: "pwd", scope: !1058, file: !3, line: 359, type: !599)
!1062 = !DILocation(line: 359, column: 18, scope: !1058)
!1063 = !DILocalVariable(name: "grp", scope: !1058, file: !3, line: 360, type: !1064)
!1064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1065, size: 64)
!1065 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group", file: !1066, line: 42, size: 256, elements: !1067)
!1066 = !DIFile(filename: "/usr/include/grp.h", directory: "")
!1067 = !{!1068, !1069, !1070, !1071}
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "gr_name", scope: !1065, file: !1066, line: 44, baseType: !6, size: 64)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "gr_passwd", scope: !1065, file: !1066, line: 45, baseType: !6, size: 64, offset: 64)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "gr_gid", scope: !1065, file: !1066, line: 46, baseType: !22, size: 32, offset: 128)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "gr_mem", scope: !1065, file: !1066, line: 47, baseType: !184, size: 64, offset: 192)
!1072 = !DILocation(line: 360, column: 17, scope: !1058)
!1073 = !DILocation(line: 362, column: 11, scope: !1058)
!1074 = !DILocation(line: 362, column: 24, scope: !1058)
!1075 = !DILocation(line: 362, column: 3, scope: !1058)
!1076 = !DILocation(line: 363, column: 19, scope: !1058)
!1077 = !DILocation(line: 363, column: 9, scope: !1058)
!1078 = !DILocation(line: 363, column: 7, scope: !1058)
!1079 = !DILocation(line: 364, column: 7, scope: !1080)
!1080 = distinct !DILexicalBlock(scope: !1058, file: !3, line: 364, column: 7)
!1081 = !DILocation(line: 364, column: 7, scope: !1058)
!1082 = !DILocation(line: 365, column: 21, scope: !1080)
!1083 = !DILocation(line: 365, column: 26, scope: !1080)
!1084 = !DILocation(line: 365, column: 5, scope: !1080)
!1085 = !DILocation(line: 367, column: 11, scope: !1058)
!1086 = !DILocation(line: 367, column: 25, scope: !1058)
!1087 = !DILocation(line: 367, column: 3, scope: !1058)
!1088 = !DILocation(line: 368, column: 19, scope: !1058)
!1089 = !DILocation(line: 368, column: 9, scope: !1058)
!1090 = !DILocation(line: 368, column: 7, scope: !1058)
!1091 = !DILocation(line: 369, column: 7, scope: !1092)
!1092 = distinct !DILexicalBlock(scope: !1058, file: !3, line: 369, column: 7)
!1093 = !DILocation(line: 369, column: 7, scope: !1058)
!1094 = !DILocation(line: 370, column: 21, scope: !1092)
!1095 = !DILocation(line: 370, column: 26, scope: !1092)
!1096 = !DILocation(line: 370, column: 5, scope: !1092)
!1097 = !DILocation(line: 372, column: 7, scope: !1098)
!1098 = distinct !DILexicalBlock(scope: !1058, file: !3, line: 372, column: 7)
!1099 = !DILocation(line: 372, column: 15, scope: !1098)
!1100 = !DILocation(line: 372, column: 12, scope: !1098)
!1101 = !DILocation(line: 372, column: 7, scope: !1058)
!1102 = !DILocation(line: 374, column: 15, scope: !1103)
!1103 = distinct !DILexicalBlock(scope: !1098, file: !3, line: 373, column: 5)
!1104 = !DILocation(line: 374, column: 30, scope: !1103)
!1105 = !DILocation(line: 374, column: 7, scope: !1103)
!1106 = !DILocation(line: 375, column: 23, scope: !1103)
!1107 = !DILocation(line: 375, column: 13, scope: !1103)
!1108 = !DILocation(line: 375, column: 11, scope: !1103)
!1109 = !DILocation(line: 376, column: 11, scope: !1110)
!1110 = distinct !DILexicalBlock(scope: !1103, file: !3, line: 376, column: 11)
!1111 = !DILocation(line: 376, column: 11, scope: !1103)
!1112 = !DILocation(line: 377, column: 25, scope: !1110)
!1113 = !DILocation(line: 377, column: 30, scope: !1110)
!1114 = !DILocation(line: 377, column: 9, scope: !1110)
!1115 = !DILocation(line: 378, column: 5, scope: !1103)
!1116 = !DILocation(line: 380, column: 7, scope: !1117)
!1117 = distinct !DILexicalBlock(scope: !1058, file: !3, line: 380, column: 7)
!1118 = !DILocation(line: 380, column: 15, scope: !1117)
!1119 = !DILocation(line: 380, column: 12, scope: !1117)
!1120 = !DILocation(line: 380, column: 7, scope: !1058)
!1121 = !DILocation(line: 382, column: 15, scope: !1122)
!1122 = distinct !DILexicalBlock(scope: !1117, file: !3, line: 381, column: 5)
!1123 = !DILocation(line: 382, column: 30, scope: !1122)
!1124 = !DILocation(line: 382, column: 7, scope: !1122)
!1125 = !DILocation(line: 383, column: 23, scope: !1122)
!1126 = !DILocation(line: 383, column: 13, scope: !1122)
!1127 = !DILocation(line: 383, column: 11, scope: !1122)
!1128 = !DILocation(line: 384, column: 11, scope: !1129)
!1129 = distinct !DILexicalBlock(scope: !1122, file: !3, line: 384, column: 11)
!1130 = !DILocation(line: 384, column: 11, scope: !1122)
!1131 = !DILocation(line: 385, column: 25, scope: !1129)
!1132 = !DILocation(line: 385, column: 30, scope: !1129)
!1133 = !DILocation(line: 385, column: 9, scope: !1129)
!1134 = !DILocation(line: 386, column: 5, scope: !1122)
!1135 = !DILocalVariable(name: "groups", scope: !1136, file: !3, line: 389, type: !183)
!1136 = distinct !DILexicalBlock(scope: !1058, file: !3, line: 388, column: 3)
!1137 = !DILocation(line: 389, column: 12, scope: !1136)
!1138 = !DILocalVariable(name: "primary_group", scope: !1136, file: !3, line: 391, type: !21)
!1139 = !DILocation(line: 391, column: 11, scope: !1136)
!1140 = !DILocation(line: 392, column: 9, scope: !1141)
!1141 = distinct !DILexicalBlock(scope: !1136, file: !3, line: 392, column: 9)
!1142 = !DILocation(line: 392, column: 9, scope: !1136)
!1143 = !DILocation(line: 393, column: 23, scope: !1141)
!1144 = !DILocation(line: 393, column: 29, scope: !1141)
!1145 = !DILocation(line: 393, column: 34, scope: !1141)
!1146 = !DILocation(line: 393, column: 21, scope: !1141)
!1147 = !DILocation(line: 393, column: 7, scope: !1141)
!1148 = !DILocation(line: 395, column: 23, scope: !1141)
!1149 = !DILocation(line: 395, column: 21, scope: !1141)
!1150 = !DILocalVariable(name: "n_groups", scope: !1136, file: !3, line: 397, type: !72)
!1151 = !DILocation(line: 397, column: 9, scope: !1136)
!1152 = !DILocation(line: 397, column: 32, scope: !1136)
!1153 = !DILocation(line: 397, column: 42, scope: !1136)
!1154 = !DILocation(line: 397, column: 20, scope: !1136)
!1155 = !DILocation(line: 398, column: 9, scope: !1156)
!1156 = distinct !DILexicalBlock(scope: !1136, file: !3, line: 398, column: 9)
!1157 = !DILocation(line: 398, column: 18, scope: !1156)
!1158 = !DILocation(line: 398, column: 9, scope: !1136)
!1159 = !DILocation(line: 400, column: 13, scope: !1160)
!1160 = distinct !DILexicalBlock(scope: !1161, file: !3, line: 400, column: 13)
!1161 = distinct !DILexicalBlock(scope: !1156, file: !3, line: 399, column: 7)
!1162 = !DILocation(line: 400, column: 13, scope: !1161)
!1163 = !DILocation(line: 401, column: 21, scope: !1160)
!1164 = !DILocation(line: 401, column: 28, scope: !1160)
!1165 = !DILocation(line: 402, column: 25, scope: !1160)
!1166 = !DILocation(line: 402, column: 18, scope: !1160)
!1167 = !DILocation(line: 401, column: 11, scope: !1160)
!1168 = !DILocation(line: 404, column: 21, scope: !1160)
!1169 = !DILocation(line: 404, column: 28, scope: !1160)
!1170 = !DILocation(line: 404, column: 11, scope: !1160)
!1171 = !DILocation(line: 405, column: 12, scope: !1161)
!1172 = !DILocation(line: 406, column: 9, scope: !1161)
!1173 = !DILocation(line: 409, column: 9, scope: !1174)
!1174 = distinct !DILexicalBlock(scope: !1136, file: !3, line: 409, column: 9)
!1175 = !DILocation(line: 409, column: 18, scope: !1174)
!1176 = !DILocation(line: 409, column: 9, scope: !1136)
!1177 = !DILocation(line: 410, column: 7, scope: !1174)
!1178 = !DILocalVariable(name: "i", scope: !1179, file: !3, line: 411, type: !72)
!1179 = distinct !DILexicalBlock(scope: !1136, file: !3, line: 411, column: 5)
!1180 = !DILocation(line: 411, column: 14, scope: !1179)
!1181 = !DILocation(line: 411, column: 10, scope: !1179)
!1182 = !DILocation(line: 411, column: 21, scope: !1183)
!1183 = distinct !DILexicalBlock(scope: !1179, file: !3, line: 411, column: 5)
!1184 = !DILocation(line: 411, column: 25, scope: !1183)
!1185 = !DILocation(line: 411, column: 23, scope: !1183)
!1186 = !DILocation(line: 411, column: 5, scope: !1179)
!1187 = !DILocation(line: 413, column: 13, scope: !1188)
!1188 = distinct !DILexicalBlock(scope: !1189, file: !3, line: 413, column: 13)
!1189 = distinct !DILexicalBlock(scope: !1183, file: !3, line: 412, column: 7)
!1190 = !DILocation(line: 413, column: 15, scope: !1188)
!1191 = !DILocation(line: 413, column: 13, scope: !1189)
!1192 = !DILocation(line: 414, column: 11, scope: !1188)
!1193 = !DILocation(line: 415, column: 9, scope: !1189)
!1194 = !DILocation(line: 416, column: 25, scope: !1189)
!1195 = !DILocation(line: 416, column: 32, scope: !1189)
!1196 = !DILocation(line: 416, column: 15, scope: !1189)
!1197 = !DILocation(line: 416, column: 13, scope: !1189)
!1198 = !DILocation(line: 417, column: 13, scope: !1199)
!1199 = distinct !DILexicalBlock(scope: !1189, file: !3, line: 417, column: 13)
!1200 = !DILocation(line: 417, column: 13, scope: !1189)
!1201 = !DILocation(line: 418, column: 27, scope: !1199)
!1202 = !DILocation(line: 418, column: 32, scope: !1199)
!1203 = !DILocation(line: 418, column: 11, scope: !1199)
!1204 = !DILocation(line: 419, column: 7, scope: !1189)
!1205 = !DILocation(line: 411, column: 36, scope: !1183)
!1206 = !DILocation(line: 411, column: 5, scope: !1183)
!1207 = distinct !{!1207, !1186, !1208}
!1208 = !DILocation(line: 419, column: 7, scope: !1179)
!1209 = !DILocation(line: 420, column: 11, scope: !1136)
!1210 = !DILocation(line: 420, column: 5, scope: !1136)
!1211 = !DILocation(line: 425, column: 7, scope: !1212)
!1212 = distinct !DILexicalBlock(scope: !1058, file: !3, line: 425, column: 7)
!1213 = !DILocation(line: 425, column: 7, scope: !1058)
!1214 = !DILocation(line: 426, column: 13, scope: !1212)
!1215 = !DILocation(line: 426, column: 31, scope: !1212)
!1216 = !DILocation(line: 426, column: 5, scope: !1212)
!1217 = !DILocation(line: 427, column: 1, scope: !1058)
!1218 = !DILocalVariable(name: "username", arg: 1, scope: !1219, file: !3, line: 357, type: !69)
!1219 = distinct !DISubprogram(name: "print_full_info", scope: !3, file: !3, line: 357, type: !343, scopeLine: 358, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1220, retainedNodes: !4)
!1220 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !1221, nameTableKind: None)
!1221 = !{!1222, !1224, !1226, !1228, !1230, !1240, !1242, !1244, !1246, !1248, !1250, !1252, !1254, !1256, !1258, !1260, !1263}
!1222 = !DIGlobalVariableExpression(var: !1223, expr: !DIExpression())
!1223 = distinct !DIGlobalVariable(name: "ruid", scope: !1220, file: !3, line: 64, type: !12, isLocal: true, isDefinition: true)
!1224 = !DIGlobalVariableExpression(var: !1225, expr: !DIExpression())
!1225 = distinct !DIGlobalVariable(name: "euid", scope: !1220, file: !3, line: 64, type: !12, isLocal: true, isDefinition: true)
!1226 = !DIGlobalVariableExpression(var: !1227, expr: !DIExpression())
!1227 = distinct !DIGlobalVariable(name: "rgid", scope: !1220, file: !3, line: 65, type: !21, isLocal: true, isDefinition: true)
!1228 = !DIGlobalVariableExpression(var: !1229, expr: !DIExpression())
!1229 = distinct !DIGlobalVariable(name: "egid", scope: !1220, file: !3, line: 65, type: !21, isLocal: true, isDefinition: true)
!1230 = !DIGlobalVariableExpression(var: !1231, expr: !DIExpression())
!1231 = distinct !DIGlobalVariable(name: "longopts", scope: !1220, file: !3, line: 75, type: !1232, isLocal: true, isDefinition: true)
!1232 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1233, size: 2560, elements: !76)
!1233 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1234)
!1234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !66, line: 50, size: 256, elements: !1235)
!1235 = !{!1236, !1237, !1238, !1239}
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1234, file: !66, line: 52, baseType: !69, size: 64)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !1234, file: !66, line: 55, baseType: !72, size: 32, offset: 64)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1234, file: !66, line: 56, baseType: !74, size: 64, offset: 128)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1234, file: !66, line: 57, baseType: !72, size: 32, offset: 192)
!1240 = !DIGlobalVariableExpression(var: !1241, expr: !DIExpression())
!1241 = distinct !DIGlobalVariable(name: "just_context", scope: !1220, file: !3, line: 45, type: !27, isLocal: true, isDefinition: true)
!1242 = !DIGlobalVariableExpression(var: !1243, expr: !DIExpression())
!1243 = distinct !DIGlobalVariable(name: "just_group", scope: !1220, file: !3, line: 51, type: !27, isLocal: true, isDefinition: true)
!1244 = !DIGlobalVariableExpression(var: !1245, expr: !DIExpression())
!1245 = distinct !DIGlobalVariable(name: "use_name", scope: !1220, file: !3, line: 61, type: !27, isLocal: true, isDefinition: true)
!1246 = !DIGlobalVariableExpression(var: !1247, expr: !DIExpression())
!1247 = distinct !DIGlobalVariable(name: "use_real", scope: !1220, file: !3, line: 53, type: !27, isLocal: true, isDefinition: true)
!1248 = !DIGlobalVariableExpression(var: !1249, expr: !DIExpression())
!1249 = distinct !DIGlobalVariable(name: "just_user", scope: !1220, file: !3, line: 55, type: !27, isLocal: true, isDefinition: true)
!1250 = !DIGlobalVariableExpression(var: !1251, expr: !DIExpression())
!1251 = distinct !DIGlobalVariable(name: "opt_zero", scope: !1220, file: !3, line: 47, type: !27, isLocal: true, isDefinition: true)
!1252 = !DIGlobalVariableExpression(var: !1253, expr: !DIExpression())
!1253 = distinct !DIGlobalVariable(name: "just_group_list", scope: !1220, file: !3, line: 49, type: !27, isLocal: true, isDefinition: true)
!1254 = !DIGlobalVariableExpression(var: !1255, expr: !DIExpression())
!1255 = distinct !DIGlobalVariable(name: "context", scope: !1220, file: !3, line: 69, type: !6, isLocal: true, isDefinition: true)
!1256 = !DIGlobalVariableExpression(var: !1257, expr: !DIExpression())
!1257 = distinct !DIGlobalVariable(name: "multiple_users", scope: !1220, file: !3, line: 59, type: !27, isLocal: true, isDefinition: true)
!1258 = !DIGlobalVariableExpression(var: !1259, expr: !DIExpression())
!1259 = distinct !DIGlobalVariable(name: "ok", scope: !1220, file: !3, line: 57, type: !27, isLocal: true, isDefinition: true)
!1260 = !DIGlobalVariableExpression(var: !1261, expr: !DIExpression())
!1261 = distinct !DIGlobalVariable(name: "buf", scope: !1262, file: !3, line: 327, type: !53, isLocal: true, isDefinition: true)
!1262 = distinct !DISubprogram(name: "uidtostr_ptr", scope: !3, file: !3, line: 325, type: !49, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1220, retainedNodes: !4)
!1263 = !DIGlobalVariableExpression(var: !1264, expr: !DIExpression())
!1264 = distinct !DIGlobalVariable(name: "buf", scope: !1265, file: !3, line: 316, type: !53, isLocal: true, isDefinition: true)
!1265 = distinct !DISubprogram(name: "gidtostr_ptr", scope: !3, file: !3, line: 314, type: !59, scopeLine: 315, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1220, retainedNodes: !4)
!1266 = !DILocalVariable(name: "pwd", scope: !1219, file: !3, line: 359, type: !1267)
!1267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1268, size: 64)
!1268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "passwd", file: !601, line: 49, size: 384, elements: !1269)
!1269 = !{!1270, !1271, !1272, !1273, !1274, !1275, !1276}
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "pw_name", scope: !1268, file: !601, line: 51, baseType: !6, size: 64)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "pw_passwd", scope: !1268, file: !601, line: 52, baseType: !6, size: 64, offset: 64)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "pw_uid", scope: !1268, file: !601, line: 54, baseType: !14, size: 32, offset: 128)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "pw_gid", scope: !1268, file: !601, line: 55, baseType: !22, size: 32, offset: 160)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "pw_gecos", scope: !1268, file: !601, line: 56, baseType: !6, size: 64, offset: 192)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "pw_dir", scope: !1268, file: !601, line: 57, baseType: !6, size: 64, offset: 256)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "pw_shell", scope: !1268, file: !601, line: 58, baseType: !6, size: 64, offset: 320)
!1277 = !DILocalVariable(name: "grp", scope: !1219, file: !3, line: 360, type: !1278)
!1278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1279, size: 64)
!1279 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group", file: !1066, line: 42, size: 256, elements: !1280)
!1280 = !{!1281, !1282, !1283, !1284}
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "gr_name", scope: !1279, file: !1066, line: 44, baseType: !6, size: 64)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "gr_passwd", scope: !1279, file: !1066, line: 45, baseType: !6, size: 64, offset: 64)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "gr_gid", scope: !1279, file: !1066, line: 46, baseType: !22, size: 32, offset: 128)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "gr_mem", scope: !1279, file: !1066, line: 47, baseType: !184, size: 64, offset: 192)
!1285 = !DILocalVariable(name: "uid", arg: 1, scope: !48, file: !3, line: 325, type: !51)
!1286 = !DILocation(line: 325, column: 28, scope: !48)
!1287 = !DILocation(line: 328, column: 22, scope: !48)
!1288 = !DILocation(line: 328, column: 21, scope: !48)
!1289 = !DILocation(line: 328, column: 10, scope: !48)
!1290 = !DILocation(line: 328, column: 3, scope: !48)
!1291 = !DILocalVariable(name: "uid", arg: 1, scope: !1292, file: !3, line: 325, type: !51)
!1292 = distinct !DISubprogram(name: "uidtostr_ptr", scope: !3, file: !3, line: 325, type: !49, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1293, retainedNodes: !4)
!1293 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !1294, nameTableKind: None)
!1294 = !{!1295, !1297, !1299, !1301, !1303, !1313, !1315, !1317, !1319, !1321, !1323, !1325, !1327, !1329, !1331, !1333, !1335}
!1295 = !DIGlobalVariableExpression(var: !1296, expr: !DIExpression())
!1296 = distinct !DIGlobalVariable(name: "ruid", scope: !1293, file: !3, line: 64, type: !12, isLocal: true, isDefinition: true)
!1297 = !DIGlobalVariableExpression(var: !1298, expr: !DIExpression())
!1298 = distinct !DIGlobalVariable(name: "euid", scope: !1293, file: !3, line: 64, type: !12, isLocal: true, isDefinition: true)
!1299 = !DIGlobalVariableExpression(var: !1300, expr: !DIExpression())
!1300 = distinct !DIGlobalVariable(name: "rgid", scope: !1293, file: !3, line: 65, type: !21, isLocal: true, isDefinition: true)
!1301 = !DIGlobalVariableExpression(var: !1302, expr: !DIExpression())
!1302 = distinct !DIGlobalVariable(name: "egid", scope: !1293, file: !3, line: 65, type: !21, isLocal: true, isDefinition: true)
!1303 = !DIGlobalVariableExpression(var: !1304, expr: !DIExpression())
!1304 = distinct !DIGlobalVariable(name: "longopts", scope: !1293, file: !3, line: 75, type: !1305, isLocal: true, isDefinition: true)
!1305 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1306, size: 2560, elements: !76)
!1306 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1307)
!1307 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !66, line: 50, size: 256, elements: !1308)
!1308 = !{!1309, !1310, !1311, !1312}
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1307, file: !66, line: 52, baseType: !69, size: 64)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !1307, file: !66, line: 55, baseType: !72, size: 32, offset: 64)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1307, file: !66, line: 56, baseType: !74, size: 64, offset: 128)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1307, file: !66, line: 57, baseType: !72, size: 32, offset: 192)
!1313 = !DIGlobalVariableExpression(var: !1314, expr: !DIExpression())
!1314 = distinct !DIGlobalVariable(name: "just_context", scope: !1293, file: !3, line: 45, type: !27, isLocal: true, isDefinition: true)
!1315 = !DIGlobalVariableExpression(var: !1316, expr: !DIExpression())
!1316 = distinct !DIGlobalVariable(name: "just_group", scope: !1293, file: !3, line: 51, type: !27, isLocal: true, isDefinition: true)
!1317 = !DIGlobalVariableExpression(var: !1318, expr: !DIExpression())
!1318 = distinct !DIGlobalVariable(name: "use_name", scope: !1293, file: !3, line: 61, type: !27, isLocal: true, isDefinition: true)
!1319 = !DIGlobalVariableExpression(var: !1320, expr: !DIExpression())
!1320 = distinct !DIGlobalVariable(name: "use_real", scope: !1293, file: !3, line: 53, type: !27, isLocal: true, isDefinition: true)
!1321 = !DIGlobalVariableExpression(var: !1322, expr: !DIExpression())
!1322 = distinct !DIGlobalVariable(name: "just_user", scope: !1293, file: !3, line: 55, type: !27, isLocal: true, isDefinition: true)
!1323 = !DIGlobalVariableExpression(var: !1324, expr: !DIExpression())
!1324 = distinct !DIGlobalVariable(name: "opt_zero", scope: !1293, file: !3, line: 47, type: !27, isLocal: true, isDefinition: true)
!1325 = !DIGlobalVariableExpression(var: !1326, expr: !DIExpression())
!1326 = distinct !DIGlobalVariable(name: "just_group_list", scope: !1293, file: !3, line: 49, type: !27, isLocal: true, isDefinition: true)
!1327 = !DIGlobalVariableExpression(var: !1328, expr: !DIExpression())
!1328 = distinct !DIGlobalVariable(name: "context", scope: !1293, file: !3, line: 69, type: !6, isLocal: true, isDefinition: true)
!1329 = !DIGlobalVariableExpression(var: !1330, expr: !DIExpression())
!1330 = distinct !DIGlobalVariable(name: "multiple_users", scope: !1293, file: !3, line: 59, type: !27, isLocal: true, isDefinition: true)
!1331 = !DIGlobalVariableExpression(var: !1332, expr: !DIExpression())
!1332 = distinct !DIGlobalVariable(name: "ok", scope: !1293, file: !3, line: 57, type: !27, isLocal: true, isDefinition: true)
!1333 = !DIGlobalVariableExpression(var: !1334, expr: !DIExpression())
!1334 = distinct !DIGlobalVariable(name: "buf", scope: !1292, file: !3, line: 327, type: !53, isLocal: true, isDefinition: true)
!1335 = !DIGlobalVariableExpression(var: !1336, expr: !DIExpression())
!1336 = distinct !DIGlobalVariable(name: "buf", scope: !1337, file: !3, line: 316, type: !53, isLocal: true, isDefinition: true)
!1337 = distinct !DISubprogram(name: "gidtostr_ptr", scope: !3, file: !3, line: 314, type: !59, scopeLine: 315, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1293, retainedNodes: !4)
!1338 = !DILocalVariable(name: "gid", arg: 1, scope: !58, file: !3, line: 314, type: !61)
!1339 = !DILocation(line: 314, column: 28, scope: !58)
!1340 = !DILocation(line: 317, column: 22, scope: !58)
!1341 = !DILocation(line: 317, column: 21, scope: !58)
!1342 = !DILocation(line: 317, column: 10, scope: !58)
!1343 = !DILocation(line: 317, column: 3, scope: !58)
!1344 = !DILocalVariable(name: "gid", arg: 1, scope: !1345, file: !3, line: 314, type: !61)
!1345 = distinct !DISubprogram(name: "gidtostr_ptr", scope: !3, file: !3, line: 314, type: !59, scopeLine: 315, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1346, retainedNodes: !4)
!1346 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !1347, nameTableKind: None)
!1347 = !{!1348, !1350, !1352, !1354, !1356, !1366, !1368, !1370, !1372, !1374, !1376, !1378, !1380, !1382, !1384, !1386, !1389}
!1348 = !DIGlobalVariableExpression(var: !1349, expr: !DIExpression())
!1349 = distinct !DIGlobalVariable(name: "ruid", scope: !1346, file: !3, line: 64, type: !12, isLocal: true, isDefinition: true)
!1350 = !DIGlobalVariableExpression(var: !1351, expr: !DIExpression())
!1351 = distinct !DIGlobalVariable(name: "euid", scope: !1346, file: !3, line: 64, type: !12, isLocal: true, isDefinition: true)
!1352 = !DIGlobalVariableExpression(var: !1353, expr: !DIExpression())
!1353 = distinct !DIGlobalVariable(name: "rgid", scope: !1346, file: !3, line: 65, type: !21, isLocal: true, isDefinition: true)
!1354 = !DIGlobalVariableExpression(var: !1355, expr: !DIExpression())
!1355 = distinct !DIGlobalVariable(name: "egid", scope: !1346, file: !3, line: 65, type: !21, isLocal: true, isDefinition: true)
!1356 = !DIGlobalVariableExpression(var: !1357, expr: !DIExpression())
!1357 = distinct !DIGlobalVariable(name: "longopts", scope: !1346, file: !3, line: 75, type: !1358, isLocal: true, isDefinition: true)
!1358 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1359, size: 2560, elements: !76)
!1359 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1360)
!1360 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !66, line: 50, size: 256, elements: !1361)
!1361 = !{!1362, !1363, !1364, !1365}
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1360, file: !66, line: 52, baseType: !69, size: 64)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !1360, file: !66, line: 55, baseType: !72, size: 32, offset: 64)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1360, file: !66, line: 56, baseType: !74, size: 64, offset: 128)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1360, file: !66, line: 57, baseType: !72, size: 32, offset: 192)
!1366 = !DIGlobalVariableExpression(var: !1367, expr: !DIExpression())
!1367 = distinct !DIGlobalVariable(name: "just_context", scope: !1346, file: !3, line: 45, type: !27, isLocal: true, isDefinition: true)
!1368 = !DIGlobalVariableExpression(var: !1369, expr: !DIExpression())
!1369 = distinct !DIGlobalVariable(name: "just_group", scope: !1346, file: !3, line: 51, type: !27, isLocal: true, isDefinition: true)
!1370 = !DIGlobalVariableExpression(var: !1371, expr: !DIExpression())
!1371 = distinct !DIGlobalVariable(name: "use_name", scope: !1346, file: !3, line: 61, type: !27, isLocal: true, isDefinition: true)
!1372 = !DIGlobalVariableExpression(var: !1373, expr: !DIExpression())
!1373 = distinct !DIGlobalVariable(name: "use_real", scope: !1346, file: !3, line: 53, type: !27, isLocal: true, isDefinition: true)
!1374 = !DIGlobalVariableExpression(var: !1375, expr: !DIExpression())
!1375 = distinct !DIGlobalVariable(name: "just_user", scope: !1346, file: !3, line: 55, type: !27, isLocal: true, isDefinition: true)
!1376 = !DIGlobalVariableExpression(var: !1377, expr: !DIExpression())
!1377 = distinct !DIGlobalVariable(name: "opt_zero", scope: !1346, file: !3, line: 47, type: !27, isLocal: true, isDefinition: true)
!1378 = !DIGlobalVariableExpression(var: !1379, expr: !DIExpression())
!1379 = distinct !DIGlobalVariable(name: "just_group_list", scope: !1346, file: !3, line: 49, type: !27, isLocal: true, isDefinition: true)
!1380 = !DIGlobalVariableExpression(var: !1381, expr: !DIExpression())
!1381 = distinct !DIGlobalVariable(name: "context", scope: !1346, file: !3, line: 69, type: !6, isLocal: true, isDefinition: true)
!1382 = !DIGlobalVariableExpression(var: !1383, expr: !DIExpression())
!1383 = distinct !DIGlobalVariable(name: "multiple_users", scope: !1346, file: !3, line: 59, type: !27, isLocal: true, isDefinition: true)
!1384 = !DIGlobalVariableExpression(var: !1385, expr: !DIExpression())
!1385 = distinct !DIGlobalVariable(name: "ok", scope: !1346, file: !3, line: 57, type: !27, isLocal: true, isDefinition: true)
!1386 = !DIGlobalVariableExpression(var: !1387, expr: !DIExpression())
!1387 = distinct !DIGlobalVariable(name: "buf", scope: !1388, file: !3, line: 327, type: !53, isLocal: true, isDefinition: true)
!1388 = distinct !DISubprogram(name: "uidtostr_ptr", scope: !3, file: !3, line: 325, type: !49, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1346, retainedNodes: !4)
!1389 = !DIGlobalVariableExpression(var: !1390, expr: !DIExpression())
!1390 = distinct !DIGlobalVariable(name: "buf", scope: !1345, file: !3, line: 316, type: !53, isLocal: true, isDefinition: true)
!1391 = distinct !DISubprogram(name: "print_group_list", scope: !81, file: !81, line: 36, type: !1392, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !82, retainedNodes: !4)
!1392 = !DISubroutineType(types: !1393)
!1393 = !{!27, !69, !12, !21, !21, !27, !7}
!1394 = !DILocalVariable(name: "username", arg: 1, scope: !1391, file: !81, line: 36, type: !69)
!1395 = !DILocation(line: 36, column: 31, scope: !1391)
!1396 = !DILocalVariable(name: "ruid", arg: 2, scope: !1391, file: !81, line: 37, type: !12)
!1397 = !DILocation(line: 37, column: 25, scope: !1391)
!1398 = !DILocalVariable(name: "rgid", arg: 3, scope: !1391, file: !81, line: 37, type: !21)
!1399 = !DILocation(line: 37, column: 37, scope: !1391)
!1400 = !DILocalVariable(name: "egid", arg: 4, scope: !1391, file: !81, line: 37, type: !21)
!1401 = !DILocation(line: 37, column: 49, scope: !1391)
!1402 = !DILocalVariable(name: "use_names", arg: 5, scope: !1391, file: !81, line: 38, type: !27)
!1403 = !DILocation(line: 38, column: 24, scope: !1391)
!1404 = !DILocalVariable(name: "delim", arg: 6, scope: !1391, file: !81, line: 38, type: !7)
!1405 = !DILocation(line: 38, column: 40, scope: !1391)
!1406 = !DILocalVariable(name: "ok", scope: !1391, file: !81, line: 40, type: !27)
!1407 = !DILocation(line: 40, column: 8, scope: !1391)
!1408 = !DILocalVariable(name: "pwd", scope: !1391, file: !81, line: 41, type: !1409)
!1409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1410, size: 64)
!1410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "passwd", file: !601, line: 49, size: 384, elements: !1411)
!1411 = !{!1412, !1413, !1414, !1415, !1416, !1417, !1418}
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "pw_name", scope: !1410, file: !601, line: 51, baseType: !6, size: 64)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "pw_passwd", scope: !1410, file: !601, line: 52, baseType: !6, size: 64, offset: 64)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "pw_uid", scope: !1410, file: !601, line: 54, baseType: !14, size: 32, offset: 128)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "pw_gid", scope: !1410, file: !601, line: 55, baseType: !22, size: 32, offset: 160)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "pw_gecos", scope: !1410, file: !601, line: 56, baseType: !6, size: 64, offset: 192)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "pw_dir", scope: !1410, file: !601, line: 57, baseType: !6, size: 64, offset: 256)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "pw_shell", scope: !1410, file: !601, line: 58, baseType: !6, size: 64, offset: 320)
!1419 = !DILocation(line: 41, column: 18, scope: !1391)
!1420 = !DILocation(line: 43, column: 7, scope: !1421)
!1421 = distinct !DILexicalBlock(scope: !1391, file: !81, line: 43, column: 7)
!1422 = !DILocation(line: 43, column: 7, scope: !1391)
!1423 = !DILocation(line: 45, column: 23, scope: !1424)
!1424 = distinct !DILexicalBlock(scope: !1421, file: !81, line: 44, column: 5)
!1425 = !DILocation(line: 45, column: 13, scope: !1424)
!1426 = !DILocation(line: 45, column: 11, scope: !1424)
!1427 = !DILocation(line: 46, column: 11, scope: !1428)
!1428 = distinct !DILexicalBlock(scope: !1424, file: !81, line: 46, column: 11)
!1429 = !DILocation(line: 46, column: 15, scope: !1428)
!1430 = !DILocation(line: 46, column: 11, scope: !1424)
!1431 = !DILocation(line: 47, column: 12, scope: !1428)
!1432 = !DILocation(line: 47, column: 9, scope: !1428)
!1433 = !DILocation(line: 48, column: 5, scope: !1424)
!1434 = !DILocation(line: 50, column: 21, scope: !1435)
!1435 = distinct !DILexicalBlock(scope: !1391, file: !81, line: 50, column: 7)
!1436 = !DILocation(line: 50, column: 27, scope: !1435)
!1437 = !DILocation(line: 50, column: 8, scope: !1435)
!1438 = !DILocation(line: 50, column: 7, scope: !1391)
!1439 = !DILocation(line: 51, column: 8, scope: !1435)
!1440 = !DILocation(line: 51, column: 5, scope: !1435)
!1441 = !DILocation(line: 53, column: 7, scope: !1442)
!1442 = distinct !DILexicalBlock(scope: !1391, file: !81, line: 53, column: 7)
!1443 = !DILocation(line: 53, column: 15, scope: !1442)
!1444 = !DILocation(line: 53, column: 12, scope: !1442)
!1445 = !DILocation(line: 53, column: 7, scope: !1391)
!1446 = !DILocation(line: 55, column: 7, scope: !1447)
!1447 = distinct !DILexicalBlock(scope: !1442, file: !81, line: 54, column: 5)
!1448 = !DILocation(line: 56, column: 25, scope: !1449)
!1449 = distinct !DILexicalBlock(scope: !1447, file: !81, line: 56, column: 11)
!1450 = !DILocation(line: 56, column: 31, scope: !1449)
!1451 = !DILocation(line: 56, column: 12, scope: !1449)
!1452 = !DILocation(line: 56, column: 11, scope: !1447)
!1453 = !DILocation(line: 57, column: 12, scope: !1449)
!1454 = !DILocation(line: 57, column: 9, scope: !1449)
!1455 = !DILocation(line: 58, column: 5, scope: !1447)
!1456 = !DILocalVariable(name: "groups", scope: !1457, file: !81, line: 61, type: !183)
!1457 = distinct !DILexicalBlock(scope: !1391, file: !81, line: 60, column: 3)
!1458 = !DILocation(line: 61, column: 12, scope: !1457)
!1459 = !DILocalVariable(name: "n_groups", scope: !1457, file: !81, line: 63, type: !72)
!1460 = !DILocation(line: 63, column: 9, scope: !1457)
!1461 = !DILocation(line: 63, column: 32, scope: !1457)
!1462 = !DILocation(line: 63, column: 43, scope: !1457)
!1463 = !DILocation(line: 63, column: 49, scope: !1457)
!1464 = !DILocation(line: 63, column: 54, scope: !1457)
!1465 = !DILocation(line: 63, column: 63, scope: !1457)
!1466 = !DILocation(line: 63, column: 20, scope: !1457)
!1467 = !DILocation(line: 64, column: 9, scope: !1468)
!1468 = distinct !DILexicalBlock(scope: !1457, file: !81, line: 64, column: 9)
!1469 = !DILocation(line: 64, column: 18, scope: !1468)
!1470 = !DILocation(line: 64, column: 9, scope: !1457)
!1471 = !DILocation(line: 66, column: 13, scope: !1472)
!1472 = distinct !DILexicalBlock(scope: !1473, file: !81, line: 66, column: 13)
!1473 = distinct !DILexicalBlock(scope: !1468, file: !81, line: 65, column: 7)
!1474 = !DILocation(line: 66, column: 13, scope: !1473)
!1475 = !DILocation(line: 68, column: 23, scope: !1476)
!1476 = distinct !DILexicalBlock(scope: !1472, file: !81, line: 67, column: 11)
!1477 = !DILocation(line: 68, column: 30, scope: !1476)
!1478 = !DILocation(line: 69, column: 27, scope: !1476)
!1479 = !DILocation(line: 69, column: 20, scope: !1476)
!1480 = !DILocation(line: 68, column: 13, scope: !1476)
!1481 = !DILocation(line: 70, column: 11, scope: !1476)
!1482 = !DILocation(line: 73, column: 23, scope: !1483)
!1483 = distinct !DILexicalBlock(scope: !1472, file: !81, line: 72, column: 11)
!1484 = !DILocation(line: 73, column: 30, scope: !1483)
!1485 = !DILocation(line: 73, column: 13, scope: !1483)
!1486 = !DILocation(line: 75, column: 9, scope: !1473)
!1487 = !DILocalVariable(name: "i", scope: !1488, file: !81, line: 78, type: !72)
!1488 = distinct !DILexicalBlock(scope: !1457, file: !81, line: 78, column: 5)
!1489 = !DILocation(line: 78, column: 14, scope: !1488)
!1490 = !DILocation(line: 78, column: 10, scope: !1488)
!1491 = !DILocation(line: 78, column: 21, scope: !1492)
!1492 = distinct !DILexicalBlock(scope: !1488, file: !81, line: 78, column: 5)
!1493 = !DILocation(line: 78, column: 25, scope: !1492)
!1494 = !DILocation(line: 78, column: 23, scope: !1492)
!1495 = !DILocation(line: 78, column: 5, scope: !1488)
!1496 = !DILocation(line: 79, column: 11, scope: !1497)
!1497 = distinct !DILexicalBlock(scope: !1492, file: !81, line: 79, column: 11)
!1498 = !DILocation(line: 79, column: 18, scope: !1497)
!1499 = !DILocation(line: 79, column: 24, scope: !1497)
!1500 = !DILocation(line: 79, column: 21, scope: !1497)
!1501 = !DILocation(line: 79, column: 29, scope: !1497)
!1502 = !DILocation(line: 79, column: 32, scope: !1497)
!1503 = !DILocation(line: 79, column: 39, scope: !1497)
!1504 = !DILocation(line: 79, column: 45, scope: !1497)
!1505 = !DILocation(line: 79, column: 42, scope: !1497)
!1506 = !DILocation(line: 79, column: 11, scope: !1492)
!1507 = !DILocation(line: 81, column: 11, scope: !1508)
!1508 = distinct !DILexicalBlock(scope: !1497, file: !81, line: 80, column: 9)
!1509 = !DILocation(line: 82, column: 29, scope: !1510)
!1510 = distinct !DILexicalBlock(scope: !1508, file: !81, line: 82, column: 15)
!1511 = !DILocation(line: 82, column: 36, scope: !1510)
!1512 = !DILocation(line: 82, column: 40, scope: !1510)
!1513 = !DILocation(line: 82, column: 16, scope: !1510)
!1514 = !DILocation(line: 82, column: 15, scope: !1508)
!1515 = !DILocation(line: 83, column: 16, scope: !1510)
!1516 = !DILocation(line: 83, column: 13, scope: !1510)
!1517 = !DILocation(line: 84, column: 9, scope: !1508)
!1518 = !DILocation(line: 78, column: 36, scope: !1492)
!1519 = !DILocation(line: 78, column: 5, scope: !1492)
!1520 = distinct !{!1520, !1495, !1521}
!1521 = !DILocation(line: 84, column: 9, scope: !1488)
!1522 = !DILocation(line: 85, column: 11, scope: !1457)
!1523 = !DILocation(line: 85, column: 5, scope: !1457)
!1524 = !DILocation(line: 87, column: 10, scope: !1391)
!1525 = !DILocation(line: 87, column: 3, scope: !1391)
!1526 = !DILocation(line: 88, column: 1, scope: !1391)
!1527 = !DILocalVariable(name: "username", arg: 1, scope: !1528, file: !81, line: 36, type: !69)
!1528 = distinct !DISubprogram(name: "print_group_list", scope: !81, file: !81, line: 36, type: !1392, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1529, retainedNodes: !4)
!1529 = distinct !DICompileUnit(language: DW_LANG_C99, file: !81, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !83, globals: !1530, nameTableKind: None)
!1530 = !{!1531}
!1531 = !DIGlobalVariableExpression(var: !1532, expr: !DIExpression())
!1532 = distinct !DIGlobalVariable(name: "buf", scope: !1533, file: !81, line: 96, type: !53, isLocal: true, isDefinition: true)
!1533 = distinct !DISubprogram(name: "gidtostr_ptr", scope: !81, file: !81, line: 94, type: !59, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1529, retainedNodes: !4)
!1534 = !DILocalVariable(name: "ruid", arg: 2, scope: !1528, file: !81, line: 37, type: !12)
!1535 = !DILocalVariable(name: "rgid", arg: 3, scope: !1528, file: !81, line: 37, type: !21)
!1536 = !DILocalVariable(name: "egid", arg: 4, scope: !1528, file: !81, line: 37, type: !21)
!1537 = !DILocalVariable(name: "use_names", arg: 5, scope: !1528, file: !81, line: 38, type: !27)
!1538 = !DILocalVariable(name: "delim", arg: 6, scope: !1528, file: !81, line: 38, type: !7)
!1539 = !DILocalVariable(name: "ok", scope: !1528, file: !81, line: 40, type: !27)
!1540 = !DILocalVariable(name: "pwd", scope: !1528, file: !81, line: 41, type: !1541)
!1541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1542, size: 64)
!1542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "passwd", file: !601, line: 49, size: 384, elements: !1543)
!1543 = !{!1544, !1545, !1546, !1547, !1548, !1549, !1550}
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "pw_name", scope: !1542, file: !601, line: 51, baseType: !6, size: 64)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "pw_passwd", scope: !1542, file: !601, line: 52, baseType: !6, size: 64, offset: 64)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "pw_uid", scope: !1542, file: !601, line: 54, baseType: !14, size: 32, offset: 128)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "pw_gid", scope: !1542, file: !601, line: 55, baseType: !22, size: 32, offset: 160)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "pw_gecos", scope: !1542, file: !601, line: 56, baseType: !6, size: 64, offset: 192)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "pw_dir", scope: !1542, file: !601, line: 57, baseType: !6, size: 64, offset: 256)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "pw_shell", scope: !1542, file: !601, line: 58, baseType: !6, size: 64, offset: 320)
!1551 = distinct !DISubprogram(name: "print_group", scope: !81, file: !81, line: 103, type: !1552, scopeLine: 104, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !82, retainedNodes: !4)
!1552 = !DISubroutineType(types: !1553)
!1553 = !{!27, !21, !27}
!1554 = !DILocalVariable(name: "gid", arg: 1, scope: !1551, file: !81, line: 103, type: !21)
!1555 = !DILocation(line: 103, column: 20, scope: !1551)
!1556 = !DILocalVariable(name: "use_name", arg: 2, scope: !1551, file: !81, line: 103, type: !27)
!1557 = !DILocation(line: 103, column: 30, scope: !1551)
!1558 = !DILocalVariable(name: "grp", scope: !1551, file: !81, line: 105, type: !1559)
!1559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1560, size: 64)
!1560 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group", file: !1066, line: 42, size: 256, elements: !1561)
!1561 = !{!1562, !1563, !1564, !1565}
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "gr_name", scope: !1560, file: !1066, line: 44, baseType: !6, size: 64)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "gr_passwd", scope: !1560, file: !1066, line: 45, baseType: !6, size: 64, offset: 64)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "gr_gid", scope: !1560, file: !1066, line: 46, baseType: !22, size: 32, offset: 128)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "gr_mem", scope: !1560, file: !1066, line: 47, baseType: !184, size: 64, offset: 192)
!1566 = !DILocation(line: 105, column: 17, scope: !1551)
!1567 = !DILocalVariable(name: "ok", scope: !1551, file: !81, line: 106, type: !27)
!1568 = !DILocation(line: 106, column: 8, scope: !1551)
!1569 = !DILocation(line: 108, column: 7, scope: !1570)
!1570 = distinct !DILexicalBlock(scope: !1551, file: !81, line: 108, column: 7)
!1571 = !DILocation(line: 108, column: 7, scope: !1551)
!1572 = !DILocation(line: 110, column: 23, scope: !1573)
!1573 = distinct !DILexicalBlock(scope: !1570, file: !81, line: 109, column: 5)
!1574 = !DILocation(line: 110, column: 13, scope: !1573)
!1575 = !DILocation(line: 110, column: 11, scope: !1573)
!1576 = !DILocation(line: 111, column: 11, scope: !1577)
!1577 = distinct !DILexicalBlock(scope: !1573, file: !81, line: 111, column: 11)
!1578 = !DILocation(line: 111, column: 15, scope: !1577)
!1579 = !DILocation(line: 111, column: 11, scope: !1573)
!1580 = !DILocation(line: 113, column: 24, scope: !1581)
!1581 = distinct !DILexicalBlock(scope: !1577, file: !81, line: 112, column: 9)
!1582 = !DILocation(line: 114, column: 38, scope: !1581)
!1583 = !DILocation(line: 114, column: 18, scope: !1581)
!1584 = !DILocation(line: 113, column: 11, scope: !1581)
!1585 = !DILocation(line: 115, column: 14, scope: !1581)
!1586 = !DILocation(line: 116, column: 9, scope: !1581)
!1587 = !DILocation(line: 117, column: 5, scope: !1573)
!1588 = !DILocalVariable(name: "s", scope: !1551, file: !81, line: 119, type: !6)
!1589 = !DILocation(line: 119, column: 9, scope: !1551)
!1590 = !DILocation(line: 119, column: 13, scope: !1551)
!1591 = !DILocation(line: 119, column: 19, scope: !1551)
!1592 = !DILocation(line: 119, column: 24, scope: !1551)
!1593 = !DILocation(line: 119, column: 34, scope: !1551)
!1594 = !DILocation(line: 120, column: 3, scope: !1551)
!1595 = !DILocation(line: 121, column: 10, scope: !1551)
!1596 = !DILocation(line: 121, column: 3, scope: !1551)
!1597 = !DILocalVariable(name: "gid", arg: 1, scope: !1598, file: !81, line: 103, type: !21)
!1598 = distinct !DISubprogram(name: "print_group", scope: !81, file: !81, line: 103, type: !1552, scopeLine: 104, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1599, retainedNodes: !4)
!1599 = distinct !DICompileUnit(language: DW_LANG_C99, file: !81, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !83, globals: !1600, nameTableKind: None)
!1600 = !{!1601}
!1601 = !DIGlobalVariableExpression(var: !1602, expr: !DIExpression())
!1602 = distinct !DIGlobalVariable(name: "buf", scope: !1603, file: !81, line: 96, type: !53, isLocal: true, isDefinition: true)
!1603 = distinct !DISubprogram(name: "gidtostr_ptr", scope: !81, file: !81, line: 94, type: !59, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1599, retainedNodes: !4)
!1604 = !DILocalVariable(name: "use_name", arg: 2, scope: !1598, file: !81, line: 103, type: !27)
!1605 = !DILocalVariable(name: "grp", scope: !1598, file: !81, line: 105, type: !1606)
!1606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1607, size: 64)
!1607 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group", file: !1066, line: 42, size: 256, elements: !1608)
!1608 = !{!1609, !1610, !1611, !1612}
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "gr_name", scope: !1607, file: !1066, line: 44, baseType: !6, size: 64)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "gr_passwd", scope: !1607, file: !1066, line: 45, baseType: !6, size: 64, offset: 64)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "gr_gid", scope: !1607, file: !1066, line: 46, baseType: !22, size: 32, offset: 128)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "gr_mem", scope: !1607, file: !1066, line: 47, baseType: !184, size: 64, offset: 192)
!1613 = !DILocalVariable(name: "ok", scope: !1598, file: !81, line: 106, type: !27)
!1614 = !DILocalVariable(name: "gid", arg: 1, scope: !80, file: !81, line: 94, type: !61)
!1615 = !DILocation(line: 94, column: 28, scope: !80)
!1616 = !DILocation(line: 97, column: 22, scope: !80)
!1617 = !DILocation(line: 97, column: 21, scope: !80)
!1618 = !DILocation(line: 97, column: 10, scope: !80)
!1619 = !DILocation(line: 97, column: 3, scope: !80)
!1620 = !DILocalVariable(name: "gid", arg: 1, scope: !1621, file: !81, line: 94, type: !61)
!1621 = distinct !DISubprogram(name: "gidtostr_ptr", scope: !81, file: !81, line: 94, type: !59, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1622, retainedNodes: !4)
!1622 = distinct !DICompileUnit(language: DW_LANG_C99, file: !81, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !83, globals: !1623, nameTableKind: None)
!1623 = !{!1624}
!1624 = !DIGlobalVariableExpression(var: !1625, expr: !DIExpression())
!1625 = distinct !DIGlobalVariable(name: "buf", scope: !1621, file: !81, line: 96, type: !53, isLocal: true, isDefinition: true)
!1626 = distinct !DISubprogram(name: "close_stdout", scope: !98, file: !98, line: 117, type: !1627, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !93, retainedNodes: !4)
!1627 = !DISubroutineType(types: !1628)
!1628 = !{null}
!1629 = !DILocation(line: 119, column: 21, scope: !1630)
!1630 = distinct !DILexicalBlock(scope: !1626, file: !98, line: 119, column: 7)
!1631 = !DILocation(line: 119, column: 7, scope: !1630)
!1632 = !DILocation(line: 119, column: 29, scope: !1630)
!1633 = !DILocation(line: 120, column: 7, scope: !1630)
!1634 = !DILocation(line: 120, column: 12, scope: !1630)
!1635 = !DILocation(line: 120, column: 25, scope: !1630)
!1636 = !DILocation(line: 120, column: 28, scope: !1630)
!1637 = !DILocation(line: 120, column: 34, scope: !1630)
!1638 = !DILocation(line: 119, column: 7, scope: !1626)
!1639 = !DILocalVariable(name: "write_error", scope: !1640, file: !98, line: 122, type: !69)
!1640 = distinct !DILexicalBlock(scope: !1630, file: !98, line: 121, column: 5)
!1641 = !DILocation(line: 122, column: 19, scope: !1640)
!1642 = !DILocation(line: 122, column: 33, scope: !1640)
!1643 = !DILocation(line: 123, column: 11, scope: !1644)
!1644 = distinct !DILexicalBlock(scope: !1640, file: !98, line: 123, column: 11)
!1645 = !DILocation(line: 123, column: 11, scope: !1640)
!1646 = !DILocation(line: 124, column: 19, scope: !1644)
!1647 = !DILocation(line: 124, column: 52, scope: !1644)
!1648 = !DILocation(line: 124, column: 36, scope: !1644)
!1649 = !DILocation(line: 125, column: 16, scope: !1644)
!1650 = !DILocation(line: 124, column: 9, scope: !1644)
!1651 = !DILocation(line: 127, column: 19, scope: !1644)
!1652 = !DILocation(line: 127, column: 32, scope: !1644)
!1653 = !DILocation(line: 127, column: 9, scope: !1644)
!1654 = !DILocation(line: 129, column: 14, scope: !1640)
!1655 = !DILocation(line: 129, column: 7, scope: !1640)
!1656 = !DILocation(line: 134, column: 42, scope: !1657)
!1657 = distinct !DILexicalBlock(scope: !1626, file: !98, line: 134, column: 7)
!1658 = !DILocation(line: 134, column: 28, scope: !1657)
!1659 = !DILocation(line: 134, column: 50, scope: !1657)
!1660 = !DILocation(line: 134, column: 7, scope: !1626)
!1661 = !DILocation(line: 135, column: 12, scope: !1657)
!1662 = !DILocation(line: 135, column: 5, scope: !1657)
!1663 = !DILocation(line: 136, column: 1, scope: !1626)
!1664 = distinct !DISubprogram(name: "umaxtostr", scope: !1665, file: !1665, line: 36, type: !1666, scopeLine: 37, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !202, retainedNodes: !4)
!1665 = !DIFile(filename: "./lib/anytostr.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!1666 = !DISubroutineType(types: !1667)
!1667 = !{!6, !205, !6}
!1668 = !DILocalVariable(name: "i", arg: 1, scope: !1664, file: !1665, line: 36, type: !205)
!1669 = !DILocation(line: 36, column: 19, scope: !1664)
!1670 = !DILocalVariable(name: "buf", arg: 2, scope: !1664, file: !1665, line: 36, type: !6)
!1671 = !DILocation(line: 36, column: 28, scope: !1664)
!1672 = !DILocalVariable(name: "p", scope: !1664, file: !1665, line: 38, type: !6)
!1673 = !DILocation(line: 38, column: 9, scope: !1664)
!1674 = !DILocation(line: 38, column: 13, scope: !1664)
!1675 = !DILocation(line: 38, column: 17, scope: !1664)
!1676 = !DILocation(line: 39, column: 4, scope: !1664)
!1677 = !DILocation(line: 39, column: 6, scope: !1664)
!1678 = !DILocation(line: 41, column: 7, scope: !1679)
!1679 = distinct !DILexicalBlock(scope: !1664, file: !1665, line: 41, column: 7)
!1680 = !DILocation(line: 41, column: 9, scope: !1679)
!1681 = !DILocation(line: 41, column: 7, scope: !1664)
!1682 = !DILocation(line: 43, column: 7, scope: !1683)
!1683 = distinct !DILexicalBlock(scope: !1679, file: !1665, line: 42, column: 5)
!1684 = !DILocation(line: 44, column: 22, scope: !1683)
!1685 = !DILocation(line: 44, column: 24, scope: !1683)
!1686 = !DILocation(line: 44, column: 20, scope: !1683)
!1687 = !DILocation(line: 44, column: 16, scope: !1683)
!1688 = !DILocation(line: 44, column: 10, scope: !1683)
!1689 = !DILocation(line: 44, column: 14, scope: !1683)
!1690 = !DILocation(line: 44, column: 9, scope: !1683)
!1691 = !DILocation(line: 45, column: 17, scope: !1683)
!1692 = !DILocation(line: 45, column: 24, scope: !1683)
!1693 = distinct !{!1693, !1682, !1694}
!1694 = !DILocation(line: 45, column: 28, scope: !1683)
!1695 = !DILocation(line: 47, column: 8, scope: !1683)
!1696 = !DILocation(line: 47, column: 12, scope: !1683)
!1697 = !DILocation(line: 48, column: 5, scope: !1683)
!1698 = !DILocation(line: 51, column: 7, scope: !1699)
!1699 = distinct !DILexicalBlock(scope: !1679, file: !1665, line: 50, column: 5)
!1700 = !DILocation(line: 52, column: 22, scope: !1699)
!1701 = !DILocation(line: 52, column: 24, scope: !1699)
!1702 = !DILocation(line: 52, column: 20, scope: !1699)
!1703 = !DILocation(line: 52, column: 16, scope: !1699)
!1704 = !DILocation(line: 52, column: 10, scope: !1699)
!1705 = !DILocation(line: 52, column: 14, scope: !1699)
!1706 = !DILocation(line: 52, column: 9, scope: !1699)
!1707 = !DILocation(line: 53, column: 17, scope: !1699)
!1708 = !DILocation(line: 53, column: 24, scope: !1699)
!1709 = distinct !{!1709, !1698, !1710}
!1710 = !DILocation(line: 53, column: 28, scope: !1699)
!1711 = !DILocation(line: 56, column: 10, scope: !1664)
!1712 = !DILocation(line: 56, column: 3, scope: !1664)
!1713 = !DILocalVariable(name: "i", arg: 1, scope: !1714, file: !1665, line: 36, type: !205)
!1714 = distinct !DISubprogram(name: "umaxtostr", scope: !1665, file: !1665, line: 36, type: !1666, scopeLine: 37, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1715, retainedNodes: !4)
!1715 = distinct !DICompileUnit(language: DW_LANG_C99, file: !203, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !204, nameTableKind: None)
!1716 = !DILocalVariable(name: "buf", arg: 2, scope: !1714, file: !1665, line: 36, type: !6)
!1717 = !DILocalVariable(name: "p", scope: !1714, file: !1665, line: 38, type: !6)
!1718 = distinct !DISubprogram(name: "set_program_name", scope: !112, file: !112, line: 39, type: !343, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !108, retainedNodes: !4)
!1719 = !DILocalVariable(name: "argv0", arg: 1, scope: !1718, file: !112, line: 39, type: !69)
!1720 = !DILocation(line: 39, column: 31, scope: !1718)
!1721 = !DILocalVariable(name: "slash", scope: !1718, file: !112, line: 46, type: !69)
!1722 = !DILocation(line: 46, column: 15, scope: !1718)
!1723 = !DILocalVariable(name: "base", scope: !1718, file: !112, line: 47, type: !69)
!1724 = !DILocation(line: 47, column: 15, scope: !1718)
!1725 = !DILocation(line: 51, column: 7, scope: !1726)
!1726 = distinct !DILexicalBlock(scope: !1718, file: !112, line: 51, column: 7)
!1727 = !DILocation(line: 51, column: 13, scope: !1726)
!1728 = !DILocation(line: 51, column: 7, scope: !1718)
!1729 = !DILocation(line: 55, column: 14, scope: !1730)
!1730 = distinct !DILexicalBlock(scope: !1726, file: !112, line: 52, column: 5)
!1731 = !DILocation(line: 54, column: 7, scope: !1730)
!1732 = !DILocation(line: 56, column: 7, scope: !1730)
!1733 = !DILocation(line: 59, column: 20, scope: !1718)
!1734 = !DILocation(line: 59, column: 11, scope: !1718)
!1735 = !DILocation(line: 59, column: 9, scope: !1718)
!1736 = !DILocation(line: 60, column: 11, scope: !1718)
!1737 = !DILocation(line: 60, column: 17, scope: !1718)
!1738 = !DILocation(line: 60, column: 27, scope: !1718)
!1739 = !DILocation(line: 60, column: 33, scope: !1718)
!1740 = !DILocation(line: 60, column: 39, scope: !1718)
!1741 = !DILocation(line: 60, column: 8, scope: !1718)
!1742 = !DILocation(line: 61, column: 7, scope: !1743)
!1743 = distinct !DILexicalBlock(scope: !1718, file: !112, line: 61, column: 7)
!1744 = !DILocation(line: 61, column: 14, scope: !1743)
!1745 = !DILocation(line: 61, column: 12, scope: !1743)
!1746 = !DILocation(line: 61, column: 20, scope: !1743)
!1747 = !DILocation(line: 61, column: 25, scope: !1743)
!1748 = !DILocation(line: 61, column: 37, scope: !1743)
!1749 = !DILocation(line: 61, column: 42, scope: !1743)
!1750 = !DILocation(line: 61, column: 28, scope: !1743)
!1751 = !DILocation(line: 61, column: 61, scope: !1743)
!1752 = !DILocation(line: 61, column: 7, scope: !1718)
!1753 = !DILocation(line: 63, column: 15, scope: !1754)
!1754 = distinct !DILexicalBlock(scope: !1743, file: !112, line: 62, column: 5)
!1755 = !DILocation(line: 63, column: 13, scope: !1754)
!1756 = !DILocation(line: 64, column: 20, scope: !1757)
!1757 = distinct !DILexicalBlock(scope: !1754, file: !112, line: 64, column: 11)
!1758 = !DILocation(line: 64, column: 11, scope: !1757)
!1759 = !DILocation(line: 64, column: 36, scope: !1757)
!1760 = !DILocation(line: 64, column: 11, scope: !1754)
!1761 = !DILocation(line: 66, column: 19, scope: !1762)
!1762 = distinct !DILexicalBlock(scope: !1757, file: !112, line: 65, column: 9)
!1763 = !DILocation(line: 66, column: 24, scope: !1762)
!1764 = !DILocation(line: 66, column: 17, scope: !1762)
!1765 = !DILocation(line: 70, column: 52, scope: !1762)
!1766 = !DILocation(line: 70, column: 41, scope: !1762)
!1767 = !DILocation(line: 72, column: 9, scope: !1762)
!1768 = !DILocation(line: 73, column: 5, scope: !1754)
!1769 = !DILocation(line: 84, column: 18, scope: !1718)
!1770 = !DILocation(line: 84, column: 16, scope: !1718)
!1771 = !DILocation(line: 90, column: 38, scope: !1718)
!1772 = !DILocation(line: 90, column: 27, scope: !1718)
!1773 = !DILocation(line: 92, column: 1, scope: !1718)
!1774 = !DILocalVariable(name: "argv0", arg: 1, scope: !1775, file: !112, line: 39, type: !69)
!1775 = distinct !DISubprogram(name: "set_program_name", scope: !112, file: !112, line: 39, type: !343, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1776, retainedNodes: !4)
!1776 = distinct !DICompileUnit(language: DW_LANG_C99, file: !109, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !110, globals: !1777, nameTableKind: None)
!1777 = !{!1778}
!1778 = !DIGlobalVariableExpression(var: !1779, expr: !DIExpression())
!1779 = distinct !DIGlobalVariable(name: "program_name", scope: !1776, file: !112, line: 33, type: !69, isLocal: false, isDefinition: true)
!1780 = !DILocalVariable(name: "slash", scope: !1775, file: !112, line: 46, type: !69)
!1781 = !DILocalVariable(name: "base", scope: !1775, file: !112, line: 47, type: !69)
!1782 = distinct !DISubprogram(name: "set_char_quoting", scope: !139, file: !139, line: 152, type: !1783, scopeLine: 153, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !115, retainedNodes: !4)
!1783 = !DISubroutineType(types: !1784)
!1784 = !{!72, !1785, !7, !72}
!1785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !150, size: 64)
!1786 = !DILocalVariable(name: "o", arg: 1, scope: !1782, file: !139, line: 152, type: !1785)
!1787 = !DILocation(line: 152, column: 43, scope: !1782)
!1788 = !DILocalVariable(name: "c", arg: 2, scope: !1782, file: !139, line: 152, type: !7)
!1789 = !DILocation(line: 152, column: 51, scope: !1782)
!1790 = !DILocalVariable(name: "i", arg: 3, scope: !1782, file: !139, line: 152, type: !72)
!1791 = !DILocation(line: 152, column: 58, scope: !1782)
!1792 = !DILocalVariable(name: "uc", scope: !1782, file: !139, line: 154, type: !240)
!1793 = !DILocation(line: 154, column: 17, scope: !1782)
!1794 = !DILocation(line: 154, column: 22, scope: !1782)
!1795 = !DILocalVariable(name: "p", scope: !1782, file: !139, line: 155, type: !1796)
!1796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16, size: 64)
!1797 = !DILocation(line: 155, column: 17, scope: !1782)
!1798 = !DILocation(line: 156, column: 6, scope: !1782)
!1799 = !DILocation(line: 156, column: 10, scope: !1782)
!1800 = !DILocation(line: 156, column: 41, scope: !1782)
!1801 = !DILocation(line: 156, column: 5, scope: !1782)
!1802 = !DILocation(line: 156, column: 59, scope: !1782)
!1803 = !DILocation(line: 156, column: 62, scope: !1782)
!1804 = !DILocation(line: 156, column: 57, scope: !1782)
!1805 = !DILocalVariable(name: "shift", scope: !1782, file: !139, line: 157, type: !72)
!1806 = !DILocation(line: 157, column: 7, scope: !1782)
!1807 = !DILocation(line: 157, column: 15, scope: !1782)
!1808 = !DILocation(line: 157, column: 18, scope: !1782)
!1809 = !DILocalVariable(name: "r", scope: !1782, file: !139, line: 158, type: !72)
!1810 = !DILocation(line: 158, column: 7, scope: !1782)
!1811 = !DILocation(line: 158, column: 13, scope: !1782)
!1812 = !DILocation(line: 158, column: 12, scope: !1782)
!1813 = !DILocation(line: 158, column: 18, scope: !1782)
!1814 = !DILocation(line: 158, column: 15, scope: !1782)
!1815 = !DILocation(line: 158, column: 25, scope: !1782)
!1816 = !DILocation(line: 159, column: 11, scope: !1782)
!1817 = !DILocation(line: 159, column: 13, scope: !1782)
!1818 = !DILocation(line: 159, column: 20, scope: !1782)
!1819 = !DILocation(line: 159, column: 18, scope: !1782)
!1820 = !DILocation(line: 159, column: 26, scope: !1782)
!1821 = !DILocation(line: 159, column: 23, scope: !1782)
!1822 = !DILocation(line: 159, column: 4, scope: !1782)
!1823 = !DILocation(line: 159, column: 6, scope: !1782)
!1824 = !DILocation(line: 160, column: 10, scope: !1782)
!1825 = !DILocation(line: 160, column: 3, scope: !1782)
!1826 = !DILocalVariable(name: "o", arg: 1, scope: !1827, file: !139, line: 152, type: !1830)
!1827 = distinct !DISubprogram(name: "set_char_quoting", scope: !139, file: !139, line: 152, type: !1828, scopeLine: 153, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1838, retainedNodes: !4)
!1828 = !DISubroutineType(types: !1829)
!1829 = !{!72, !1830, !7, !72}
!1830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1831, size: 64)
!1831 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !139, line: 65, size: 448, elements: !1832)
!1832 = !{!1833, !1834, !1835, !1836, !1837}
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !1831, file: !139, line: 68, baseType: !118, size: 32)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1831, file: !139, line: 71, baseType: !72, size: 32, offset: 32)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !1831, file: !139, line: 75, baseType: !155, size: 256, offset: 64)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !1831, file: !139, line: 78, baseType: !69, size: 64, offset: 320)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !1831, file: !139, line: 81, baseType: !69, size: 64, offset: 384)
!1838 = distinct !DICompileUnit(language: DW_LANG_C99, file: !116, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !117, retainedTypes: !132, globals: !1839, nameTableKind: None)
!1839 = !{!1840, !1842, !1844, !1846, !1848, !1850, !1857, !1859}
!1840 = !DIGlobalVariableExpression(var: !1841, expr: !DIExpression())
!1841 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !1838, file: !139, line: 85, type: !140, isLocal: false, isDefinition: true)
!1842 = !DIGlobalVariableExpression(var: !1843, expr: !DIExpression())
!1843 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !1838, file: !139, line: 101, type: !146, isLocal: false, isDefinition: true)
!1844 = !DIGlobalVariableExpression(var: !1845, expr: !DIExpression())
!1845 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !1838, file: !139, line: 1052, type: !1831, isLocal: false, isDefinition: true)
!1846 = !DIGlobalVariableExpression(var: !1847, expr: !DIExpression())
!1847 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !1838, file: !139, line: 116, type: !1831, isLocal: true, isDefinition: true)
!1848 = !DIGlobalVariableExpression(var: !1849, expr: !DIExpression())
!1849 = distinct !DIGlobalVariable(name: "slot0", scope: !1838, file: !139, line: 842, type: !162, isLocal: true, isDefinition: true)
!1850 = !DIGlobalVariableExpression(var: !1851, expr: !DIExpression())
!1851 = distinct !DIGlobalVariable(name: "slotvec", scope: !1838, file: !139, line: 845, type: !1852, isLocal: true, isDefinition: true)
!1852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1853, size: 64)
!1853 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !139, line: 834, size: 128, elements: !1854)
!1854 = !{!1855, !1856}
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1853, file: !139, line: 836, baseType: !134, size: 64)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1853, file: !139, line: 837, baseType: !6, size: 64, offset: 64)
!1857 = !DIGlobalVariableExpression(var: !1858, expr: !DIExpression())
!1858 = distinct !DIGlobalVariable(name: "nslots", scope: !1838, file: !139, line: 843, type: !72, isLocal: true, isDefinition: true)
!1859 = !DIGlobalVariableExpression(var: !1860, expr: !DIExpression())
!1860 = distinct !DIGlobalVariable(name: "slotvec0", scope: !1838, file: !139, line: 844, type: !1853, isLocal: true, isDefinition: true)
!1861 = !DILocalVariable(name: "c", arg: 2, scope: !1827, file: !139, line: 152, type: !7)
!1862 = !DILocalVariable(name: "i", arg: 3, scope: !1827, file: !139, line: 152, type: !72)
!1863 = !DILocalVariable(name: "uc", scope: !1827, file: !139, line: 154, type: !240)
!1864 = !DILocalVariable(name: "p", scope: !1827, file: !139, line: 155, type: !1796)
!1865 = distinct !DISubprogram(name: "quotearg_char_mem", scope: !139, file: !139, line: 982, type: !1866, scopeLine: 983, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !115, retainedNodes: !4)
!1866 = !DISubroutineType(types: !1867)
!1867 = !{!6, !69, !134, !7}
!1868 = !DILocalVariable(name: "arg", arg: 1, scope: !1865, file: !139, line: 982, type: !69)
!1869 = !DILocation(line: 982, column: 32, scope: !1865)
!1870 = !DILocalVariable(name: "argsize", arg: 2, scope: !1865, file: !139, line: 982, type: !134)
!1871 = !DILocation(line: 982, column: 44, scope: !1865)
!1872 = !DILocalVariable(name: "ch", arg: 3, scope: !1865, file: !139, line: 982, type: !7)
!1873 = !DILocation(line: 982, column: 58, scope: !1865)
!1874 = !DILocalVariable(name: "options", scope: !1865, file: !139, line: 984, type: !150)
!1875 = !DILocation(line: 984, column: 26, scope: !1865)
!1876 = !DILocation(line: 985, column: 13, scope: !1865)
!1877 = !DILocation(line: 986, column: 31, scope: !1865)
!1878 = !DILocation(line: 986, column: 3, scope: !1865)
!1879 = !DILocation(line: 987, column: 33, scope: !1865)
!1880 = !DILocation(line: 987, column: 38, scope: !1865)
!1881 = !DILocation(line: 987, column: 10, scope: !1865)
!1882 = !DILocation(line: 987, column: 3, scope: !1865)
!1883 = distinct !DISubprogram(name: "quotearg_n_options", scope: !139, file: !139, line: 877, type: !1884, scopeLine: 879, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !115, retainedNodes: !4)
!1884 = !DISubroutineType(types: !1885)
!1885 = !{!6, !72, !69, !134, !1886}
!1886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1887, size: 64)
!1887 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !150)
!1888 = !DILocalVariable(name: "n", arg: 1, scope: !1883, file: !139, line: 877, type: !72)
!1889 = !DILocation(line: 877, column: 25, scope: !1883)
!1890 = !DILocalVariable(name: "arg", arg: 2, scope: !1883, file: !139, line: 877, type: !69)
!1891 = !DILocation(line: 877, column: 40, scope: !1883)
!1892 = !DILocalVariable(name: "argsize", arg: 3, scope: !1883, file: !139, line: 877, type: !134)
!1893 = !DILocation(line: 877, column: 52, scope: !1883)
!1894 = !DILocalVariable(name: "options", arg: 4, scope: !1883, file: !139, line: 878, type: !1886)
!1895 = !DILocation(line: 878, column: 51, scope: !1883)
!1896 = !DILocalVariable(name: "e", scope: !1883, file: !139, line: 880, type: !72)
!1897 = !DILocation(line: 880, column: 7, scope: !1883)
!1898 = !DILocation(line: 880, column: 11, scope: !1883)
!1899 = !DILocalVariable(name: "sv", scope: !1883, file: !139, line: 882, type: !167)
!1900 = !DILocation(line: 882, column: 19, scope: !1883)
!1901 = !DILocation(line: 882, column: 24, scope: !1883)
!1902 = !DILocation(line: 884, column: 7, scope: !1903)
!1903 = distinct !DILexicalBlock(scope: !1883, file: !139, line: 884, column: 7)
!1904 = !DILocation(line: 884, column: 9, scope: !1903)
!1905 = !DILocation(line: 884, column: 7, scope: !1883)
!1906 = !DILocation(line: 885, column: 5, scope: !1903)
!1907 = !DILocation(line: 887, column: 7, scope: !1908)
!1908 = distinct !DILexicalBlock(scope: !1883, file: !139, line: 887, column: 7)
!1909 = !DILocation(line: 887, column: 17, scope: !1908)
!1910 = !DILocation(line: 887, column: 14, scope: !1908)
!1911 = !DILocation(line: 887, column: 7, scope: !1883)
!1912 = !DILocalVariable(name: "preallocated", scope: !1913, file: !139, line: 889, type: !27)
!1913 = distinct !DILexicalBlock(scope: !1908, file: !139, line: 888, column: 5)
!1914 = !DILocation(line: 889, column: 12, scope: !1913)
!1915 = !DILocation(line: 889, column: 28, scope: !1913)
!1916 = !DILocation(line: 889, column: 31, scope: !1913)
!1917 = !DILocalVariable(name: "nmax", scope: !1913, file: !139, line: 890, type: !72)
!1918 = !DILocation(line: 890, column: 11, scope: !1913)
!1919 = !DILocation(line: 892, column: 11, scope: !1920)
!1920 = distinct !DILexicalBlock(scope: !1913, file: !139, line: 892, column: 11)
!1921 = !DILocation(line: 892, column: 18, scope: !1920)
!1922 = !DILocation(line: 892, column: 16, scope: !1920)
!1923 = !DILocation(line: 892, column: 11, scope: !1913)
!1924 = !DILocation(line: 893, column: 9, scope: !1920)
!1925 = !DILocation(line: 895, column: 32, scope: !1913)
!1926 = !DILocation(line: 895, column: 54, scope: !1913)
!1927 = !DILocation(line: 895, column: 59, scope: !1913)
!1928 = !DILocation(line: 895, column: 61, scope: !1913)
!1929 = !DILocation(line: 895, column: 58, scope: !1913)
!1930 = !DILocation(line: 895, column: 66, scope: !1913)
!1931 = !DILocation(line: 895, column: 22, scope: !1913)
!1932 = !DILocation(line: 895, column: 20, scope: !1913)
!1933 = !DILocation(line: 895, column: 15, scope: !1913)
!1934 = !DILocation(line: 896, column: 11, scope: !1935)
!1935 = distinct !DILexicalBlock(scope: !1913, file: !139, line: 896, column: 11)
!1936 = !DILocation(line: 896, column: 11, scope: !1913)
!1937 = !DILocation(line: 897, column: 10, scope: !1935)
!1938 = !DILocation(line: 897, column: 15, scope: !1935)
!1939 = !DILocation(line: 897, column: 9, scope: !1935)
!1940 = !DILocation(line: 898, column: 15, scope: !1913)
!1941 = !DILocation(line: 898, column: 20, scope: !1913)
!1942 = !DILocation(line: 898, column: 18, scope: !1913)
!1943 = !DILocation(line: 898, column: 7, scope: !1913)
!1944 = !DILocation(line: 898, column: 32, scope: !1913)
!1945 = !DILocation(line: 898, column: 34, scope: !1913)
!1946 = !DILocation(line: 898, column: 40, scope: !1913)
!1947 = !DILocation(line: 898, column: 38, scope: !1913)
!1948 = !DILocation(line: 898, column: 31, scope: !1913)
!1949 = !DILocation(line: 898, column: 48, scope: !1913)
!1950 = !DILocation(line: 899, column: 16, scope: !1913)
!1951 = !DILocation(line: 899, column: 18, scope: !1913)
!1952 = !DILocation(line: 899, column: 14, scope: !1913)
!1953 = !DILocation(line: 900, column: 5, scope: !1913)
!1954 = !DILocalVariable(name: "size", scope: !1955, file: !139, line: 903, type: !134)
!1955 = distinct !DILexicalBlock(scope: !1883, file: !139, line: 902, column: 3)
!1956 = !DILocation(line: 903, column: 12, scope: !1955)
!1957 = !DILocation(line: 903, column: 19, scope: !1955)
!1958 = !DILocation(line: 903, column: 22, scope: !1955)
!1959 = !DILocation(line: 903, column: 25, scope: !1955)
!1960 = !DILocalVariable(name: "val", scope: !1955, file: !139, line: 904, type: !6)
!1961 = !DILocation(line: 904, column: 11, scope: !1955)
!1962 = !DILocation(line: 904, column: 17, scope: !1955)
!1963 = !DILocation(line: 904, column: 20, scope: !1955)
!1964 = !DILocation(line: 904, column: 23, scope: !1955)
!1965 = !DILocalVariable(name: "flags", scope: !1955, file: !139, line: 906, type: !72)
!1966 = !DILocation(line: 906, column: 9, scope: !1955)
!1967 = !DILocation(line: 906, column: 17, scope: !1955)
!1968 = !DILocation(line: 906, column: 26, scope: !1955)
!1969 = !DILocation(line: 906, column: 32, scope: !1955)
!1970 = !DILocalVariable(name: "qsize", scope: !1955, file: !139, line: 907, type: !134)
!1971 = !DILocation(line: 907, column: 12, scope: !1955)
!1972 = !DILocation(line: 907, column: 46, scope: !1955)
!1973 = !DILocation(line: 907, column: 51, scope: !1955)
!1974 = !DILocation(line: 907, column: 57, scope: !1955)
!1975 = !DILocation(line: 907, column: 62, scope: !1955)
!1976 = !DILocation(line: 908, column: 46, scope: !1955)
!1977 = !DILocation(line: 908, column: 55, scope: !1955)
!1978 = !DILocation(line: 908, column: 62, scope: !1955)
!1979 = !DILocation(line: 909, column: 46, scope: !1955)
!1980 = !DILocation(line: 909, column: 55, scope: !1955)
!1981 = !DILocation(line: 910, column: 46, scope: !1955)
!1982 = !DILocation(line: 910, column: 55, scope: !1955)
!1983 = !DILocation(line: 911, column: 46, scope: !1955)
!1984 = !DILocation(line: 911, column: 55, scope: !1955)
!1985 = !DILocation(line: 907, column: 20, scope: !1955)
!1986 = !DILocation(line: 913, column: 9, scope: !1987)
!1987 = distinct !DILexicalBlock(scope: !1955, file: !139, line: 913, column: 9)
!1988 = !DILocation(line: 913, column: 17, scope: !1987)
!1989 = !DILocation(line: 913, column: 14, scope: !1987)
!1990 = !DILocation(line: 913, column: 9, scope: !1955)
!1991 = !DILocation(line: 915, column: 29, scope: !1992)
!1992 = distinct !DILexicalBlock(scope: !1987, file: !139, line: 914, column: 7)
!1993 = !DILocation(line: 915, column: 35, scope: !1992)
!1994 = !DILocation(line: 915, column: 27, scope: !1992)
!1995 = !DILocation(line: 915, column: 9, scope: !1992)
!1996 = !DILocation(line: 915, column: 12, scope: !1992)
!1997 = !DILocation(line: 915, column: 15, scope: !1992)
!1998 = !DILocation(line: 915, column: 20, scope: !1992)
!1999 = !DILocation(line: 916, column: 13, scope: !2000)
!2000 = distinct !DILexicalBlock(scope: !1992, file: !139, line: 916, column: 13)
!2001 = !DILocation(line: 916, column: 17, scope: !2000)
!2002 = !DILocation(line: 916, column: 13, scope: !1992)
!2003 = !DILocation(line: 917, column: 17, scope: !2000)
!2004 = !DILocation(line: 917, column: 11, scope: !2000)
!2005 = !DILocation(line: 918, column: 39, scope: !1992)
!2006 = !DILocation(line: 918, column: 27, scope: !1992)
!2007 = !DILocation(line: 918, column: 25, scope: !1992)
!2008 = !DILocation(line: 918, column: 9, scope: !1992)
!2009 = !DILocation(line: 918, column: 12, scope: !1992)
!2010 = !DILocation(line: 918, column: 15, scope: !1992)
!2011 = !DILocation(line: 918, column: 19, scope: !1992)
!2012 = !DILocation(line: 919, column: 35, scope: !1992)
!2013 = !DILocation(line: 919, column: 40, scope: !1992)
!2014 = !DILocation(line: 919, column: 46, scope: !1992)
!2015 = !DILocation(line: 919, column: 51, scope: !1992)
!2016 = !DILocation(line: 919, column: 60, scope: !1992)
!2017 = !DILocation(line: 919, column: 69, scope: !1992)
!2018 = !DILocation(line: 920, column: 35, scope: !1992)
!2019 = !DILocation(line: 920, column: 42, scope: !1992)
!2020 = !DILocation(line: 920, column: 51, scope: !1992)
!2021 = !DILocation(line: 921, column: 35, scope: !1992)
!2022 = !DILocation(line: 921, column: 44, scope: !1992)
!2023 = !DILocation(line: 922, column: 35, scope: !1992)
!2024 = !DILocation(line: 922, column: 44, scope: !1992)
!2025 = !DILocation(line: 919, column: 9, scope: !1992)
!2026 = !DILocation(line: 923, column: 7, scope: !1992)
!2027 = !DILocation(line: 925, column: 13, scope: !1955)
!2028 = !DILocation(line: 925, column: 5, scope: !1955)
!2029 = !DILocation(line: 925, column: 11, scope: !1955)
!2030 = !DILocation(line: 926, column: 12, scope: !1955)
!2031 = !DILocation(line: 926, column: 5, scope: !1955)
!2032 = !DILocalVariable(name: "n", arg: 1, scope: !2033, file: !139, line: 877, type: !72)
!2033 = distinct !DISubprogram(name: "quotearg_n_options", scope: !139, file: !139, line: 877, type: !2034, scopeLine: 879, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2045, retainedNodes: !4)
!2034 = !DISubroutineType(types: !2035)
!2035 = !{!6, !72, !69, !134, !2036}
!2036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2037, size: 64)
!2037 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2038)
!2038 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !139, line: 65, size: 448, elements: !2039)
!2039 = !{!2040, !2041, !2042, !2043, !2044}
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !2038, file: !139, line: 68, baseType: !118, size: 32)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2038, file: !139, line: 71, baseType: !72, size: 32, offset: 32)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !2038, file: !139, line: 75, baseType: !155, size: 256, offset: 64)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !2038, file: !139, line: 78, baseType: !69, size: 64, offset: 320)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !2038, file: !139, line: 81, baseType: !69, size: 64, offset: 384)
!2045 = distinct !DICompileUnit(language: DW_LANG_C99, file: !116, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !117, retainedTypes: !132, globals: !2046, nameTableKind: None)
!2046 = !{!2047, !2049, !2051, !2053, !2055, !2057, !2064, !2066}
!2047 = !DIGlobalVariableExpression(var: !2048, expr: !DIExpression())
!2048 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !2045, file: !139, line: 85, type: !140, isLocal: false, isDefinition: true)
!2049 = !DIGlobalVariableExpression(var: !2050, expr: !DIExpression())
!2050 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !2045, file: !139, line: 101, type: !146, isLocal: false, isDefinition: true)
!2051 = !DIGlobalVariableExpression(var: !2052, expr: !DIExpression())
!2052 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !2045, file: !139, line: 1052, type: !2038, isLocal: false, isDefinition: true)
!2053 = !DIGlobalVariableExpression(var: !2054, expr: !DIExpression())
!2054 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !2045, file: !139, line: 116, type: !2038, isLocal: true, isDefinition: true)
!2055 = !DIGlobalVariableExpression(var: !2056, expr: !DIExpression())
!2056 = distinct !DIGlobalVariable(name: "slot0", scope: !2045, file: !139, line: 842, type: !162, isLocal: true, isDefinition: true)
!2057 = !DIGlobalVariableExpression(var: !2058, expr: !DIExpression())
!2058 = distinct !DIGlobalVariable(name: "slotvec", scope: !2045, file: !139, line: 845, type: !2059, isLocal: true, isDefinition: true)
!2059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2060, size: 64)
!2060 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !139, line: 834, size: 128, elements: !2061)
!2061 = !{!2062, !2063}
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2060, file: !139, line: 836, baseType: !134, size: 64)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2060, file: !139, line: 837, baseType: !6, size: 64, offset: 64)
!2064 = !DIGlobalVariableExpression(var: !2065, expr: !DIExpression())
!2065 = distinct !DIGlobalVariable(name: "nslots", scope: !2045, file: !139, line: 843, type: !72, isLocal: true, isDefinition: true)
!2066 = !DIGlobalVariableExpression(var: !2067, expr: !DIExpression())
!2067 = distinct !DIGlobalVariable(name: "slotvec0", scope: !2045, file: !139, line: 844, type: !2060, isLocal: true, isDefinition: true)
!2068 = !DILocalVariable(name: "arg", arg: 2, scope: !2033, file: !139, line: 877, type: !69)
!2069 = !DILocalVariable(name: "argsize", arg: 3, scope: !2033, file: !139, line: 877, type: !134)
!2070 = !DILocalVariable(name: "options", arg: 4, scope: !2033, file: !139, line: 878, type: !2036)
!2071 = !DILocalVariable(name: "e", scope: !2033, file: !139, line: 880, type: !72)
!2072 = !DILocalVariable(name: "sv", scope: !2033, file: !139, line: 882, type: !2059)
!2073 = !DILocalVariable(name: "nmax", scope: !2074, file: !139, line: 890, type: !72)
!2074 = distinct !DILexicalBlock(scope: !2075, file: !139, line: 888, column: 5)
!2075 = distinct !DILexicalBlock(scope: !2076, file: !139, line: 887, column: 7)
!2076 = distinct !DISubprogram(name: "quotearg_n_options", scope: !139, file: !139, line: 877, type: !2077, scopeLine: 879, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2088, retainedNodes: !4)
!2077 = !DISubroutineType(types: !2078)
!2078 = !{!6, !72, !69, !134, !2079}
!2079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2080, size: 64)
!2080 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2081)
!2081 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !139, line: 65, size: 448, elements: !2082)
!2082 = !{!2083, !2084, !2085, !2086, !2087}
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !2081, file: !139, line: 68, baseType: !118, size: 32)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2081, file: !139, line: 71, baseType: !72, size: 32, offset: 32)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !2081, file: !139, line: 75, baseType: !155, size: 256, offset: 64)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !2081, file: !139, line: 78, baseType: !69, size: 64, offset: 320)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !2081, file: !139, line: 81, baseType: !69, size: 64, offset: 384)
!2088 = distinct !DICompileUnit(language: DW_LANG_C99, file: !116, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !117, retainedTypes: !132, globals: !2089, nameTableKind: None)
!2089 = !{!2090, !2092, !2094, !2096, !2098, !2100, !2107, !2109}
!2090 = !DIGlobalVariableExpression(var: !2091, expr: !DIExpression())
!2091 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !2088, file: !139, line: 85, type: !140, isLocal: false, isDefinition: true)
!2092 = !DIGlobalVariableExpression(var: !2093, expr: !DIExpression())
!2093 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !2088, file: !139, line: 101, type: !146, isLocal: false, isDefinition: true)
!2094 = !DIGlobalVariableExpression(var: !2095, expr: !DIExpression())
!2095 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !2088, file: !139, line: 1052, type: !2081, isLocal: false, isDefinition: true)
!2096 = !DIGlobalVariableExpression(var: !2097, expr: !DIExpression())
!2097 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !2088, file: !139, line: 116, type: !2081, isLocal: true, isDefinition: true)
!2098 = !DIGlobalVariableExpression(var: !2099, expr: !DIExpression())
!2099 = distinct !DIGlobalVariable(name: "slot0", scope: !2088, file: !139, line: 842, type: !162, isLocal: true, isDefinition: true)
!2100 = !DIGlobalVariableExpression(var: !2101, expr: !DIExpression())
!2101 = distinct !DIGlobalVariable(name: "slotvec", scope: !2088, file: !139, line: 845, type: !2102, isLocal: true, isDefinition: true)
!2102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2103, size: 64)
!2103 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !139, line: 834, size: 128, elements: !2104)
!2104 = !{!2105, !2106}
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2103, file: !139, line: 836, baseType: !134, size: 64)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2103, file: !139, line: 837, baseType: !6, size: 64, offset: 64)
!2107 = !DIGlobalVariableExpression(var: !2108, expr: !DIExpression())
!2108 = distinct !DIGlobalVariable(name: "nslots", scope: !2088, file: !139, line: 843, type: !72, isLocal: true, isDefinition: true)
!2109 = !DIGlobalVariableExpression(var: !2110, expr: !DIExpression())
!2110 = distinct !DIGlobalVariable(name: "slotvec0", scope: !2088, file: !139, line: 844, type: !2103, isLocal: true, isDefinition: true)
!2111 = !DILocalVariable(name: "val", scope: !2112, file: !139, line: 904, type: !6)
!2112 = distinct !DILexicalBlock(scope: !2113, file: !139, line: 902, column: 3)
!2113 = distinct !DISubprogram(name: "quotearg_n_options", scope: !139, file: !139, line: 877, type: !2114, scopeLine: 879, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2125, retainedNodes: !4)
!2114 = !DISubroutineType(types: !2115)
!2115 = !{!6, !72, !69, !134, !2116}
!2116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2117, size: 64)
!2117 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2118)
!2118 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !139, line: 65, size: 448, elements: !2119)
!2119 = !{!2120, !2121, !2122, !2123, !2124}
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !2118, file: !139, line: 68, baseType: !118, size: 32)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2118, file: !139, line: 71, baseType: !72, size: 32, offset: 32)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !2118, file: !139, line: 75, baseType: !155, size: 256, offset: 64)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !2118, file: !139, line: 78, baseType: !69, size: 64, offset: 320)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !2118, file: !139, line: 81, baseType: !69, size: 64, offset: 384)
!2125 = distinct !DICompileUnit(language: DW_LANG_C99, file: !116, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !117, retainedTypes: !132, globals: !2126, nameTableKind: None)
!2126 = !{!2127, !2129, !2131, !2133, !2135, !2137, !2144, !2146}
!2127 = !DIGlobalVariableExpression(var: !2128, expr: !DIExpression())
!2128 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !2125, file: !139, line: 85, type: !140, isLocal: false, isDefinition: true)
!2129 = !DIGlobalVariableExpression(var: !2130, expr: !DIExpression())
!2130 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !2125, file: !139, line: 101, type: !146, isLocal: false, isDefinition: true)
!2131 = !DIGlobalVariableExpression(var: !2132, expr: !DIExpression())
!2132 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !2125, file: !139, line: 1052, type: !2118, isLocal: false, isDefinition: true)
!2133 = !DIGlobalVariableExpression(var: !2134, expr: !DIExpression())
!2134 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !2125, file: !139, line: 116, type: !2118, isLocal: true, isDefinition: true)
!2135 = !DIGlobalVariableExpression(var: !2136, expr: !DIExpression())
!2136 = distinct !DIGlobalVariable(name: "slot0", scope: !2125, file: !139, line: 842, type: !162, isLocal: true, isDefinition: true)
!2137 = !DIGlobalVariableExpression(var: !2138, expr: !DIExpression())
!2138 = distinct !DIGlobalVariable(name: "slotvec", scope: !2125, file: !139, line: 845, type: !2139, isLocal: true, isDefinition: true)
!2139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2140, size: 64)
!2140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !139, line: 834, size: 128, elements: !2141)
!2141 = !{!2142, !2143}
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2140, file: !139, line: 836, baseType: !134, size: 64)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2140, file: !139, line: 837, baseType: !6, size: 64, offset: 64)
!2144 = !DIGlobalVariableExpression(var: !2145, expr: !DIExpression())
!2145 = distinct !DIGlobalVariable(name: "nslots", scope: !2125, file: !139, line: 843, type: !72, isLocal: true, isDefinition: true)
!2146 = !DIGlobalVariableExpression(var: !2147, expr: !DIExpression())
!2147 = distinct !DIGlobalVariable(name: "slotvec0", scope: !2125, file: !139, line: 844, type: !2140, isLocal: true, isDefinition: true)
!2148 = !DILocalVariable(name: "flags", scope: !2112, file: !139, line: 906, type: !72)
!2149 = !DILocalVariable(name: "qsize", scope: !2112, file: !139, line: 907, type: !134)
!2150 = distinct !DISubprogram(name: "quotearg_buffer_restyled", scope: !139, file: !139, line: 256, type: !2151, scopeLine: 262, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !115, retainedNodes: !4)
!2151 = !DISubroutineType(types: !2152)
!2152 = !{!134, !6, !134, !69, !134, !118, !72, !2153, !69, !69}
!2153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2154, size: 64)
!2154 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !16)
!2155 = !DILocalVariable(name: "buffer", arg: 1, scope: !2150, file: !139, line: 256, type: !6)
!2156 = !DILocation(line: 256, column: 33, scope: !2150)
!2157 = !DILocalVariable(name: "buffersize", arg: 2, scope: !2150, file: !139, line: 256, type: !134)
!2158 = !DILocation(line: 256, column: 48, scope: !2150)
!2159 = !DILocalVariable(name: "arg", arg: 3, scope: !2150, file: !139, line: 257, type: !69)
!2160 = !DILocation(line: 257, column: 39, scope: !2150)
!2161 = !DILocalVariable(name: "argsize", arg: 4, scope: !2150, file: !139, line: 257, type: !134)
!2162 = !DILocation(line: 257, column: 51, scope: !2150)
!2163 = !DILocalVariable(name: "quoting_style", arg: 5, scope: !2150, file: !139, line: 258, type: !118)
!2164 = !DILocation(line: 258, column: 46, scope: !2150)
!2165 = !DILocalVariable(name: "flags", arg: 6, scope: !2150, file: !139, line: 258, type: !72)
!2166 = !DILocation(line: 258, column: 65, scope: !2150)
!2167 = !DILocalVariable(name: "quote_these_too", arg: 7, scope: !2150, file: !139, line: 259, type: !2153)
!2168 = !DILocation(line: 259, column: 47, scope: !2150)
!2169 = !DILocalVariable(name: "left_quote", arg: 8, scope: !2150, file: !139, line: 260, type: !69)
!2170 = !DILocation(line: 260, column: 39, scope: !2150)
!2171 = !DILocalVariable(name: "right_quote", arg: 9, scope: !2150, file: !139, line: 261, type: !69)
!2172 = !DILocation(line: 261, column: 39, scope: !2150)
!2173 = !DILocalVariable(name: "i", scope: !2150, file: !139, line: 263, type: !134)
!2174 = !DILocation(line: 263, column: 10, scope: !2150)
!2175 = !DILocalVariable(name: "len", scope: !2150, file: !139, line: 264, type: !134)
!2176 = !DILocation(line: 264, column: 10, scope: !2150)
!2177 = !DILocalVariable(name: "orig_buffersize", scope: !2150, file: !139, line: 265, type: !134)
!2178 = !DILocation(line: 265, column: 10, scope: !2150)
!2179 = !DILocalVariable(name: "quote_string", scope: !2150, file: !139, line: 266, type: !69)
!2180 = !DILocation(line: 266, column: 15, scope: !2150)
!2181 = !DILocalVariable(name: "quote_string_len", scope: !2150, file: !139, line: 267, type: !134)
!2182 = !DILocation(line: 267, column: 10, scope: !2150)
!2183 = !DILocalVariable(name: "backslash_escapes", scope: !2150, file: !139, line: 268, type: !27)
!2184 = !DILocation(line: 268, column: 8, scope: !2150)
!2185 = !DILocalVariable(name: "unibyte_locale", scope: !2150, file: !139, line: 269, type: !27)
!2186 = !DILocation(line: 269, column: 8, scope: !2150)
!2187 = !DILocation(line: 269, column: 25, scope: !2150)
!2188 = !DILocation(line: 269, column: 36, scope: !2150)
!2189 = !DILocalVariable(name: "elide_outer_quotes", scope: !2150, file: !139, line: 270, type: !27)
!2190 = !DILocation(line: 270, column: 8, scope: !2150)
!2191 = !DILocation(line: 270, column: 30, scope: !2150)
!2192 = !DILocation(line: 270, column: 36, scope: !2150)
!2193 = !DILocation(line: 270, column: 61, scope: !2150)
!2194 = !DILocalVariable(name: "pending_shell_escape_end", scope: !2150, file: !139, line: 271, type: !27)
!2195 = !DILocation(line: 271, column: 8, scope: !2150)
!2196 = !DILocalVariable(name: "encountered_single_quote", scope: !2150, file: !139, line: 272, type: !27)
!2197 = !DILocation(line: 272, column: 8, scope: !2150)
!2198 = !DILocalVariable(name: "all_c_and_shell_quote_compat", scope: !2150, file: !139, line: 273, type: !27)
!2199 = !DILocation(line: 273, column: 8, scope: !2150)
!2200 = !DILocation(line: 273, column: 3, scope: !2150)
!2201 = !DILabel(scope: !2150, name: "process_input", file: !139, line: 314)
!2202 = !DILocation(line: 314, column: 2, scope: !2150)
!2203 = !DILocation(line: 316, column: 11, scope: !2150)
!2204 = !DILocation(line: 316, column: 3, scope: !2150)
!2205 = !DILocation(line: 319, column: 21, scope: !2206)
!2206 = distinct !DILexicalBlock(scope: !2150, file: !139, line: 317, column: 5)
!2207 = !DILocation(line: 320, column: 26, scope: !2206)
!2208 = !DILocation(line: 321, column: 7, scope: !2206)
!2209 = !DILocation(line: 323, column: 12, scope: !2210)
!2210 = distinct !DILexicalBlock(scope: !2206, file: !139, line: 323, column: 11)
!2211 = !DILocation(line: 323, column: 11, scope: !2206)
!2212 = !DILocation(line: 324, column: 9, scope: !2210)
!2213 = !DILocation(line: 324, column: 9, scope: !2214)
!2214 = distinct !DILexicalBlock(scope: !2215, file: !139, line: 324, column: 9)
!2215 = distinct !DILexicalBlock(scope: !2210, file: !139, line: 324, column: 9)
!2216 = !DILocation(line: 324, column: 9, scope: !2215)
!2217 = !DILocation(line: 325, column: 25, scope: !2206)
!2218 = !DILocation(line: 326, column: 20, scope: !2206)
!2219 = !DILocation(line: 327, column: 24, scope: !2206)
!2220 = !DILocation(line: 328, column: 7, scope: !2206)
!2221 = !DILocation(line: 331, column: 25, scope: !2206)
!2222 = !DILocation(line: 332, column: 26, scope: !2206)
!2223 = !DILocation(line: 333, column: 7, scope: !2206)
!2224 = !DILocation(line: 339, column: 13, scope: !2225)
!2225 = distinct !DILexicalBlock(scope: !2226, file: !139, line: 339, column: 13)
!2226 = distinct !DILexicalBlock(scope: !2206, file: !139, line: 338, column: 7)
!2227 = !DILocation(line: 339, column: 27, scope: !2225)
!2228 = !DILocation(line: 339, column: 13, scope: !2226)
!2229 = !DILocation(line: 362, column: 50, scope: !2230)
!2230 = distinct !DILexicalBlock(scope: !2225, file: !139, line: 340, column: 11)
!2231 = !DILocation(line: 362, column: 26, scope: !2230)
!2232 = !DILocation(line: 362, column: 24, scope: !2230)
!2233 = !DILocation(line: 363, column: 51, scope: !2230)
!2234 = !DILocation(line: 363, column: 27, scope: !2230)
!2235 = !DILocation(line: 363, column: 25, scope: !2230)
!2236 = !DILocation(line: 364, column: 11, scope: !2230)
!2237 = !DILocation(line: 365, column: 14, scope: !2238)
!2238 = distinct !DILexicalBlock(scope: !2226, file: !139, line: 365, column: 13)
!2239 = !DILocation(line: 365, column: 13, scope: !2226)
!2240 = !DILocation(line: 366, column: 31, scope: !2241)
!2241 = distinct !DILexicalBlock(scope: !2238, file: !139, line: 366, column: 11)
!2242 = !DILocation(line: 366, column: 29, scope: !2241)
!2243 = !DILocation(line: 366, column: 16, scope: !2241)
!2244 = !DILocation(line: 366, column: 44, scope: !2245)
!2245 = distinct !DILexicalBlock(scope: !2241, file: !139, line: 366, column: 11)
!2246 = !DILocation(line: 366, column: 43, scope: !2245)
!2247 = !DILocation(line: 366, column: 11, scope: !2241)
!2248 = !DILocation(line: 367, column: 13, scope: !2245)
!2249 = !DILocation(line: 367, column: 13, scope: !2250)
!2250 = distinct !DILexicalBlock(scope: !2251, file: !139, line: 367, column: 13)
!2251 = distinct !DILexicalBlock(scope: !2245, file: !139, line: 367, column: 13)
!2252 = !DILocation(line: 367, column: 13, scope: !2251)
!2253 = !DILocation(line: 366, column: 70, scope: !2245)
!2254 = !DILocation(line: 366, column: 11, scope: !2245)
!2255 = distinct !{!2255, !2247, !2256}
!2256 = !DILocation(line: 367, column: 13, scope: !2241)
!2257 = !DILocation(line: 368, column: 27, scope: !2226)
!2258 = !DILocation(line: 369, column: 24, scope: !2226)
!2259 = !DILocation(line: 369, column: 22, scope: !2226)
!2260 = !DILocation(line: 370, column: 36, scope: !2226)
!2261 = !DILocation(line: 370, column: 28, scope: !2226)
!2262 = !DILocation(line: 370, column: 26, scope: !2226)
!2263 = !DILocation(line: 372, column: 7, scope: !2206)
!2264 = !DILocation(line: 375, column: 25, scope: !2206)
!2265 = !DILocation(line: 376, column: 7, scope: !2206)
!2266 = !DILocation(line: 378, column: 26, scope: !2206)
!2267 = !DILocation(line: 379, column: 7, scope: !2206)
!2268 = !DILocation(line: 381, column: 12, scope: !2269)
!2269 = distinct !DILexicalBlock(scope: !2206, file: !139, line: 381, column: 11)
!2270 = !DILocation(line: 381, column: 11, scope: !2206)
!2271 = !DILocation(line: 382, column: 27, scope: !2269)
!2272 = !DILocation(line: 382, column: 9, scope: !2269)
!2273 = !DILocation(line: 383, column: 7, scope: !2206)
!2274 = !DILocation(line: 385, column: 21, scope: !2206)
!2275 = !DILocation(line: 386, column: 12, scope: !2276)
!2276 = distinct !DILexicalBlock(scope: !2206, file: !139, line: 386, column: 11)
!2277 = !DILocation(line: 386, column: 11, scope: !2206)
!2278 = !DILocation(line: 387, column: 9, scope: !2276)
!2279 = !DILocation(line: 387, column: 9, scope: !2280)
!2280 = distinct !DILexicalBlock(scope: !2281, file: !139, line: 387, column: 9)
!2281 = distinct !DILexicalBlock(scope: !2276, file: !139, line: 387, column: 9)
!2282 = !DILocation(line: 387, column: 9, scope: !2281)
!2283 = !DILocation(line: 388, column: 20, scope: !2206)
!2284 = !DILocation(line: 389, column: 24, scope: !2206)
!2285 = !DILocation(line: 390, column: 7, scope: !2206)
!2286 = !DILocation(line: 393, column: 26, scope: !2206)
!2287 = !DILocation(line: 394, column: 7, scope: !2206)
!2288 = !DILocation(line: 397, column: 7, scope: !2206)
!2289 = !DILocation(line: 400, column: 10, scope: !2290)
!2290 = distinct !DILexicalBlock(scope: !2150, file: !139, line: 400, column: 3)
!2291 = !DILocation(line: 400, column: 8, scope: !2290)
!2292 = !DILocation(line: 400, column: 19, scope: !2293)
!2293 = distinct !DILexicalBlock(scope: !2290, file: !139, line: 400, column: 3)
!2294 = !DILocation(line: 400, column: 27, scope: !2293)
!2295 = !DILocation(line: 400, column: 41, scope: !2293)
!2296 = !DILocation(line: 400, column: 45, scope: !2293)
!2297 = !DILocation(line: 400, column: 48, scope: !2293)
!2298 = !DILocation(line: 400, column: 58, scope: !2293)
!2299 = !DILocation(line: 400, column: 63, scope: !2293)
!2300 = !DILocation(line: 400, column: 60, scope: !2293)
!2301 = !DILocation(line: 400, column: 16, scope: !2293)
!2302 = !DILocation(line: 400, column: 3, scope: !2290)
!2303 = !DILocalVariable(name: "c", scope: !2304, file: !139, line: 402, type: !240)
!2304 = distinct !DILexicalBlock(scope: !2293, file: !139, line: 401, column: 5)
!2305 = !DILocation(line: 402, column: 21, scope: !2304)
!2306 = !DILocalVariable(name: "esc", scope: !2304, file: !139, line: 403, type: !240)
!2307 = !DILocation(line: 403, column: 21, scope: !2304)
!2308 = !DILocalVariable(name: "is_right_quote", scope: !2304, file: !139, line: 404, type: !27)
!2309 = !DILocation(line: 404, column: 12, scope: !2304)
!2310 = !DILocalVariable(name: "escaping", scope: !2304, file: !139, line: 405, type: !27)
!2311 = !DILocation(line: 405, column: 12, scope: !2304)
!2312 = !DILocalVariable(name: "c_and_shell_quote_compat", scope: !2304, file: !139, line: 406, type: !27)
!2313 = !DILocation(line: 406, column: 12, scope: !2304)
!2314 = !DILocation(line: 408, column: 11, scope: !2315)
!2315 = distinct !DILexicalBlock(scope: !2304, file: !139, line: 408, column: 11)
!2316 = !DILocation(line: 409, column: 11, scope: !2315)
!2317 = !DILocation(line: 409, column: 14, scope: !2315)
!2318 = !DILocation(line: 409, column: 28, scope: !2315)
!2319 = !DILocation(line: 410, column: 11, scope: !2315)
!2320 = !DILocation(line: 410, column: 14, scope: !2315)
!2321 = !DILocation(line: 411, column: 11, scope: !2315)
!2322 = !DILocation(line: 411, column: 15, scope: !2315)
!2323 = !DILocation(line: 411, column: 19, scope: !2315)
!2324 = !DILocation(line: 411, column: 17, scope: !2315)
!2325 = !DILocation(line: 412, column: 19, scope: !2315)
!2326 = !DILocation(line: 412, column: 27, scope: !2315)
!2327 = !DILocation(line: 412, column: 39, scope: !2315)
!2328 = !DILocation(line: 412, column: 46, scope: !2315)
!2329 = !DILocation(line: 412, column: 44, scope: !2315)
!2330 = !DILocation(line: 416, column: 40, scope: !2315)
!2331 = !DILocation(line: 416, column: 32, scope: !2315)
!2332 = !DILocation(line: 416, column: 30, scope: !2315)
!2333 = !DILocation(line: 416, column: 48, scope: !2315)
!2334 = !DILocation(line: 412, column: 15, scope: !2315)
!2335 = !DILocation(line: 417, column: 11, scope: !2315)
!2336 = !DILocation(line: 417, column: 22, scope: !2315)
!2337 = !DILocation(line: 417, column: 28, scope: !2315)
!2338 = !DILocation(line: 417, column: 26, scope: !2315)
!2339 = !DILocation(line: 417, column: 31, scope: !2315)
!2340 = !DILocation(line: 417, column: 45, scope: !2315)
!2341 = !DILocation(line: 417, column: 14, scope: !2315)
!2342 = !DILocation(line: 417, column: 63, scope: !2315)
!2343 = !DILocation(line: 408, column: 11, scope: !2304)
!2344 = !DILocation(line: 419, column: 15, scope: !2345)
!2345 = distinct !DILexicalBlock(scope: !2346, file: !139, line: 419, column: 15)
!2346 = distinct !DILexicalBlock(scope: !2315, file: !139, line: 418, column: 9)
!2347 = !DILocation(line: 419, column: 15, scope: !2346)
!2348 = !DILocation(line: 420, column: 13, scope: !2345)
!2349 = !DILocation(line: 421, column: 26, scope: !2346)
!2350 = !DILocation(line: 422, column: 9, scope: !2346)
!2351 = !DILocation(line: 424, column: 11, scope: !2304)
!2352 = !DILocation(line: 424, column: 15, scope: !2304)
!2353 = !DILocation(line: 424, column: 9, scope: !2304)
!2354 = !DILocation(line: 425, column: 15, scope: !2304)
!2355 = !DILocation(line: 425, column: 7, scope: !2304)
!2356 = !DILocation(line: 428, column: 15, scope: !2357)
!2357 = distinct !DILexicalBlock(scope: !2358, file: !139, line: 428, column: 15)
!2358 = distinct !DILexicalBlock(scope: !2304, file: !139, line: 426, column: 9)
!2359 = !DILocation(line: 428, column: 15, scope: !2358)
!2360 = !DILocation(line: 430, column: 15, scope: !2361)
!2361 = distinct !DILexicalBlock(scope: !2357, file: !139, line: 429, column: 13)
!2362 = !DILocation(line: 430, column: 15, scope: !2363)
!2363 = distinct !DILexicalBlock(scope: !2364, file: !139, line: 430, column: 15)
!2364 = distinct !DILexicalBlock(scope: !2361, file: !139, line: 430, column: 15)
!2365 = !DILocation(line: 430, column: 15, scope: !2364)
!2366 = !DILocation(line: 430, column: 15, scope: !2367)
!2367 = distinct !DILexicalBlock(scope: !2364, file: !139, line: 430, column: 15)
!2368 = !DILocation(line: 430, column: 15, scope: !2369)
!2369 = distinct !DILexicalBlock(scope: !2367, file: !139, line: 430, column: 15)
!2370 = !DILocation(line: 430, column: 15, scope: !2371)
!2371 = distinct !DILexicalBlock(scope: !2372, file: !139, line: 430, column: 15)
!2372 = distinct !DILexicalBlock(scope: !2369, file: !139, line: 430, column: 15)
!2373 = !DILocation(line: 430, column: 15, scope: !2372)
!2374 = !DILocation(line: 430, column: 15, scope: !2375)
!2375 = distinct !DILexicalBlock(scope: !2376, file: !139, line: 430, column: 15)
!2376 = distinct !DILexicalBlock(scope: !2369, file: !139, line: 430, column: 15)
!2377 = !DILocation(line: 430, column: 15, scope: !2376)
!2378 = !DILocation(line: 430, column: 15, scope: !2379)
!2379 = distinct !DILexicalBlock(scope: !2380, file: !139, line: 430, column: 15)
!2380 = distinct !DILexicalBlock(scope: !2369, file: !139, line: 430, column: 15)
!2381 = !DILocation(line: 430, column: 15, scope: !2380)
!2382 = !DILocation(line: 430, column: 15, scope: !2383)
!2383 = distinct !DILexicalBlock(scope: !2384, file: !139, line: 430, column: 15)
!2384 = distinct !DILexicalBlock(scope: !2364, file: !139, line: 430, column: 15)
!2385 = !DILocation(line: 430, column: 15, scope: !2384)
!2386 = !DILocation(line: 437, column: 19, scope: !2387)
!2387 = distinct !DILexicalBlock(scope: !2361, file: !139, line: 437, column: 19)
!2388 = !DILocation(line: 437, column: 33, scope: !2387)
!2389 = !DILocation(line: 438, column: 19, scope: !2387)
!2390 = !DILocation(line: 438, column: 22, scope: !2387)
!2391 = !DILocation(line: 438, column: 24, scope: !2387)
!2392 = !DILocation(line: 438, column: 30, scope: !2387)
!2393 = !DILocation(line: 438, column: 28, scope: !2387)
!2394 = !DILocation(line: 438, column: 38, scope: !2387)
!2395 = !DILocation(line: 438, column: 48, scope: !2387)
!2396 = !DILocation(line: 438, column: 52, scope: !2387)
!2397 = !DILocation(line: 438, column: 54, scope: !2387)
!2398 = !DILocation(line: 438, column: 45, scope: !2387)
!2399 = !DILocation(line: 438, column: 59, scope: !2387)
!2400 = !DILocation(line: 438, column: 62, scope: !2387)
!2401 = !DILocation(line: 438, column: 66, scope: !2387)
!2402 = !DILocation(line: 438, column: 68, scope: !2387)
!2403 = !DILocation(line: 438, column: 73, scope: !2387)
!2404 = !DILocation(line: 437, column: 19, scope: !2361)
!2405 = !DILocation(line: 440, column: 19, scope: !2406)
!2406 = distinct !DILexicalBlock(scope: !2387, file: !139, line: 439, column: 17)
!2407 = !DILocation(line: 440, column: 19, scope: !2408)
!2408 = distinct !DILexicalBlock(scope: !2409, file: !139, line: 440, column: 19)
!2409 = distinct !DILexicalBlock(scope: !2406, file: !139, line: 440, column: 19)
!2410 = !DILocation(line: 440, column: 19, scope: !2409)
!2411 = !DILocation(line: 441, column: 19, scope: !2406)
!2412 = !DILocation(line: 441, column: 19, scope: !2413)
!2413 = distinct !DILexicalBlock(scope: !2414, file: !139, line: 441, column: 19)
!2414 = distinct !DILexicalBlock(scope: !2406, file: !139, line: 441, column: 19)
!2415 = !DILocation(line: 441, column: 19, scope: !2414)
!2416 = !DILocation(line: 442, column: 17, scope: !2406)
!2417 = !DILocation(line: 443, column: 17, scope: !2361)
!2418 = !DILocation(line: 448, column: 13, scope: !2361)
!2419 = !DILocation(line: 449, column: 20, scope: !2420)
!2420 = distinct !DILexicalBlock(scope: !2357, file: !139, line: 449, column: 20)
!2421 = !DILocation(line: 449, column: 26, scope: !2420)
!2422 = !DILocation(line: 449, column: 20, scope: !2357)
!2423 = !DILocation(line: 450, column: 13, scope: !2420)
!2424 = !DILocation(line: 451, column: 11, scope: !2358)
!2425 = !DILocation(line: 454, column: 19, scope: !2358)
!2426 = !DILocation(line: 454, column: 11, scope: !2358)
!2427 = !DILocation(line: 457, column: 19, scope: !2428)
!2428 = distinct !DILexicalBlock(scope: !2429, file: !139, line: 457, column: 19)
!2429 = distinct !DILexicalBlock(scope: !2358, file: !139, line: 455, column: 13)
!2430 = !DILocation(line: 457, column: 19, scope: !2429)
!2431 = !DILocation(line: 458, column: 17, scope: !2428)
!2432 = !DILocation(line: 459, column: 15, scope: !2429)
!2433 = !DILocation(line: 462, column: 20, scope: !2434)
!2434 = distinct !DILexicalBlock(scope: !2429, file: !139, line: 462, column: 19)
!2435 = !DILocation(line: 462, column: 26, scope: !2434)
!2436 = !DILocation(line: 463, column: 19, scope: !2434)
!2437 = !DILocation(line: 463, column: 22, scope: !2434)
!2438 = !DILocation(line: 463, column: 24, scope: !2434)
!2439 = !DILocation(line: 463, column: 30, scope: !2434)
!2440 = !DILocation(line: 463, column: 28, scope: !2434)
!2441 = !DILocation(line: 463, column: 38, scope: !2434)
!2442 = !DILocation(line: 463, column: 41, scope: !2434)
!2443 = !DILocation(line: 463, column: 45, scope: !2434)
!2444 = !DILocation(line: 463, column: 47, scope: !2434)
!2445 = !DILocation(line: 463, column: 52, scope: !2434)
!2446 = !DILocation(line: 462, column: 19, scope: !2429)
!2447 = !DILocation(line: 464, column: 25, scope: !2434)
!2448 = !DILocation(line: 464, column: 29, scope: !2434)
!2449 = !DILocation(line: 464, column: 31, scope: !2434)
!2450 = !DILocation(line: 464, column: 17, scope: !2434)
!2451 = !DILocation(line: 471, column: 25, scope: !2452)
!2452 = distinct !DILexicalBlock(scope: !2453, file: !139, line: 471, column: 25)
!2453 = distinct !DILexicalBlock(scope: !2434, file: !139, line: 465, column: 19)
!2454 = !DILocation(line: 471, column: 25, scope: !2453)
!2455 = !DILocation(line: 472, column: 23, scope: !2452)
!2456 = !DILocation(line: 473, column: 25, scope: !2453)
!2457 = !DILocation(line: 473, column: 29, scope: !2453)
!2458 = !DILocation(line: 473, column: 31, scope: !2453)
!2459 = !DILocation(line: 473, column: 23, scope: !2453)
!2460 = !DILocation(line: 474, column: 23, scope: !2453)
!2461 = !DILocation(line: 475, column: 21, scope: !2453)
!2462 = !DILocation(line: 475, column: 21, scope: !2463)
!2463 = distinct !DILexicalBlock(scope: !2464, file: !139, line: 475, column: 21)
!2464 = distinct !DILexicalBlock(scope: !2453, file: !139, line: 475, column: 21)
!2465 = !DILocation(line: 475, column: 21, scope: !2464)
!2466 = !DILocation(line: 476, column: 21, scope: !2453)
!2467 = !DILocation(line: 476, column: 21, scope: !2468)
!2468 = distinct !DILexicalBlock(scope: !2469, file: !139, line: 476, column: 21)
!2469 = distinct !DILexicalBlock(scope: !2453, file: !139, line: 476, column: 21)
!2470 = !DILocation(line: 476, column: 21, scope: !2469)
!2471 = !DILocation(line: 477, column: 21, scope: !2453)
!2472 = !DILocation(line: 477, column: 21, scope: !2473)
!2473 = distinct !DILexicalBlock(scope: !2474, file: !139, line: 477, column: 21)
!2474 = distinct !DILexicalBlock(scope: !2453, file: !139, line: 477, column: 21)
!2475 = !DILocation(line: 477, column: 21, scope: !2474)
!2476 = !DILocation(line: 478, column: 21, scope: !2453)
!2477 = !DILocation(line: 478, column: 21, scope: !2478)
!2478 = distinct !DILexicalBlock(scope: !2479, file: !139, line: 478, column: 21)
!2479 = distinct !DILexicalBlock(scope: !2453, file: !139, line: 478, column: 21)
!2480 = !DILocation(line: 478, column: 21, scope: !2479)
!2481 = !DILocation(line: 479, column: 21, scope: !2453)
!2482 = !DILocation(line: 482, column: 21, scope: !2453)
!2483 = !DILocation(line: 483, column: 19, scope: !2453)
!2484 = !DILocation(line: 484, column: 15, scope: !2429)
!2485 = !DILocation(line: 487, column: 15, scope: !2429)
!2486 = !DILocation(line: 489, column: 11, scope: !2358)
!2487 = !DILocation(line: 491, column: 24, scope: !2358)
!2488 = !DILocation(line: 491, column: 31, scope: !2358)
!2489 = !DILocation(line: 492, column: 24, scope: !2358)
!2490 = !DILocation(line: 492, column: 31, scope: !2358)
!2491 = !DILocation(line: 493, column: 24, scope: !2358)
!2492 = !DILocation(line: 493, column: 31, scope: !2358)
!2493 = !DILocation(line: 494, column: 24, scope: !2358)
!2494 = !DILocation(line: 494, column: 31, scope: !2358)
!2495 = !DILocation(line: 495, column: 24, scope: !2358)
!2496 = !DILocation(line: 495, column: 31, scope: !2358)
!2497 = !DILocation(line: 496, column: 24, scope: !2358)
!2498 = !DILocation(line: 496, column: 31, scope: !2358)
!2499 = !DILocation(line: 497, column: 24, scope: !2358)
!2500 = !DILocation(line: 497, column: 31, scope: !2358)
!2501 = !DILocation(line: 498, column: 26, scope: !2358)
!2502 = !DILocation(line: 498, column: 24, scope: !2358)
!2503 = !DILocation(line: 500, column: 15, scope: !2504)
!2504 = distinct !DILexicalBlock(scope: !2358, file: !139, line: 500, column: 15)
!2505 = !DILocation(line: 500, column: 29, scope: !2504)
!2506 = !DILocation(line: 500, column: 15, scope: !2358)
!2507 = !DILocation(line: 502, column: 19, scope: !2508)
!2508 = distinct !DILexicalBlock(scope: !2509, file: !139, line: 502, column: 19)
!2509 = distinct !DILexicalBlock(scope: !2504, file: !139, line: 501, column: 13)
!2510 = !DILocation(line: 502, column: 19, scope: !2509)
!2511 = !DILocation(line: 503, column: 17, scope: !2508)
!2512 = !DILocation(line: 504, column: 15, scope: !2509)
!2513 = !DILocation(line: 509, column: 15, scope: !2514)
!2514 = distinct !DILexicalBlock(scope: !2358, file: !139, line: 509, column: 15)
!2515 = !DILocation(line: 509, column: 33, scope: !2514)
!2516 = !DILocation(line: 509, column: 36, scope: !2514)
!2517 = !DILocation(line: 509, column: 55, scope: !2514)
!2518 = !DILocation(line: 509, column: 58, scope: !2514)
!2519 = !DILocation(line: 509, column: 15, scope: !2358)
!2520 = !DILocation(line: 510, column: 13, scope: !2514)
!2521 = !DILabel(scope: !2358, name: "c_and_shell_escape", file: !139, line: 512)
!2522 = !DILocation(line: 512, column: 9, scope: !2358)
!2523 = !DILocation(line: 513, column: 15, scope: !2524)
!2524 = distinct !DILexicalBlock(scope: !2358, file: !139, line: 513, column: 15)
!2525 = !DILocation(line: 513, column: 29, scope: !2524)
!2526 = !DILocation(line: 514, column: 15, scope: !2524)
!2527 = !DILocation(line: 514, column: 18, scope: !2524)
!2528 = !DILocation(line: 513, column: 15, scope: !2358)
!2529 = !DILocation(line: 515, column: 13, scope: !2524)
!2530 = !DILabel(scope: !2358, name: "c_escape", file: !139, line: 517)
!2531 = !DILocation(line: 517, column: 9, scope: !2358)
!2532 = !DILocation(line: 518, column: 15, scope: !2533)
!2533 = distinct !DILexicalBlock(scope: !2358, file: !139, line: 518, column: 15)
!2534 = !DILocation(line: 518, column: 15, scope: !2358)
!2535 = !DILocation(line: 520, column: 19, scope: !2536)
!2536 = distinct !DILexicalBlock(scope: !2533, file: !139, line: 519, column: 13)
!2537 = !DILocation(line: 520, column: 17, scope: !2536)
!2538 = !DILocation(line: 521, column: 15, scope: !2536)
!2539 = !DILocation(line: 523, column: 11, scope: !2358)
!2540 = !DILocation(line: 526, column: 18, scope: !2541)
!2541 = distinct !DILexicalBlock(scope: !2358, file: !139, line: 526, column: 15)
!2542 = !DILocation(line: 526, column: 26, scope: !2541)
!2543 = !DILocation(line: 526, column: 15, scope: !2358)
!2544 = !DILocation(line: 526, column: 40, scope: !2541)
!2545 = !DILocation(line: 526, column: 47, scope: !2541)
!2546 = !DILocation(line: 526, column: 57, scope: !2541)
!2547 = !DILocation(line: 526, column: 65, scope: !2541)
!2548 = !DILocation(line: 527, column: 13, scope: !2541)
!2549 = !DILocation(line: 528, column: 11, scope: !2358)
!2550 = !DILocation(line: 530, column: 15, scope: !2551)
!2551 = distinct !DILexicalBlock(scope: !2358, file: !139, line: 530, column: 15)
!2552 = !DILocation(line: 530, column: 17, scope: !2551)
!2553 = !DILocation(line: 530, column: 15, scope: !2358)
!2554 = !DILocation(line: 531, column: 13, scope: !2551)
!2555 = !DILocation(line: 532, column: 11, scope: !2358)
!2556 = !DILocation(line: 534, column: 36, scope: !2358)
!2557 = !DILocation(line: 535, column: 11, scope: !2358)
!2558 = !DILocation(line: 548, column: 15, scope: !2559)
!2559 = distinct !DILexicalBlock(scope: !2358, file: !139, line: 548, column: 15)
!2560 = !DILocation(line: 548, column: 29, scope: !2559)
!2561 = !DILocation(line: 549, column: 15, scope: !2559)
!2562 = !DILocation(line: 549, column: 18, scope: !2559)
!2563 = !DILocation(line: 548, column: 15, scope: !2358)
!2564 = !DILocation(line: 550, column: 13, scope: !2559)
!2565 = !DILocation(line: 551, column: 11, scope: !2358)
!2566 = !DILocation(line: 554, column: 36, scope: !2358)
!2567 = !DILocation(line: 555, column: 36, scope: !2358)
!2568 = !DILocation(line: 556, column: 15, scope: !2569)
!2569 = distinct !DILexicalBlock(scope: !2358, file: !139, line: 556, column: 15)
!2570 = !DILocation(line: 556, column: 29, scope: !2569)
!2571 = !DILocation(line: 556, column: 15, scope: !2358)
!2572 = !DILocation(line: 558, column: 19, scope: !2573)
!2573 = distinct !DILexicalBlock(scope: !2574, file: !139, line: 558, column: 19)
!2574 = distinct !DILexicalBlock(scope: !2569, file: !139, line: 557, column: 13)
!2575 = !DILocation(line: 558, column: 19, scope: !2574)
!2576 = !DILocation(line: 559, column: 17, scope: !2573)
!2577 = !DILocation(line: 561, column: 19, scope: !2578)
!2578 = distinct !DILexicalBlock(scope: !2574, file: !139, line: 561, column: 19)
!2579 = !DILocation(line: 561, column: 30, scope: !2578)
!2580 = !DILocation(line: 561, column: 35, scope: !2578)
!2581 = !DILocation(line: 561, column: 19, scope: !2574)
!2582 = !DILocation(line: 566, column: 37, scope: !2583)
!2583 = distinct !DILexicalBlock(scope: !2578, file: !139, line: 562, column: 17)
!2584 = !DILocation(line: 566, column: 35, scope: !2583)
!2585 = !DILocation(line: 567, column: 30, scope: !2583)
!2586 = !DILocation(line: 568, column: 17, scope: !2583)
!2587 = !DILocation(line: 570, column: 15, scope: !2574)
!2588 = !DILocation(line: 570, column: 15, scope: !2589)
!2589 = distinct !DILexicalBlock(scope: !2590, file: !139, line: 570, column: 15)
!2590 = distinct !DILexicalBlock(scope: !2574, file: !139, line: 570, column: 15)
!2591 = !DILocation(line: 570, column: 15, scope: !2590)
!2592 = !DILocation(line: 571, column: 15, scope: !2574)
!2593 = !DILocation(line: 571, column: 15, scope: !2594)
!2594 = distinct !DILexicalBlock(scope: !2595, file: !139, line: 571, column: 15)
!2595 = distinct !DILexicalBlock(scope: !2574, file: !139, line: 571, column: 15)
!2596 = !DILocation(line: 571, column: 15, scope: !2595)
!2597 = !DILocation(line: 572, column: 15, scope: !2574)
!2598 = !DILocation(line: 572, column: 15, scope: !2599)
!2599 = distinct !DILexicalBlock(scope: !2600, file: !139, line: 572, column: 15)
!2600 = distinct !DILexicalBlock(scope: !2574, file: !139, line: 572, column: 15)
!2601 = !DILocation(line: 572, column: 15, scope: !2600)
!2602 = !DILocation(line: 573, column: 40, scope: !2574)
!2603 = !DILocation(line: 574, column: 13, scope: !2574)
!2604 = !DILocation(line: 575, column: 11, scope: !2358)
!2605 = !DILocation(line: 599, column: 36, scope: !2358)
!2606 = !DILocation(line: 600, column: 11, scope: !2358)
!2607 = !DILocalVariable(name: "m", scope: !2608, file: !139, line: 610, type: !134)
!2608 = distinct !DILexicalBlock(scope: !2358, file: !139, line: 608, column: 11)
!2609 = !DILocation(line: 610, column: 20, scope: !2608)
!2610 = !DILocalVariable(name: "printable", scope: !2608, file: !139, line: 612, type: !27)
!2611 = !DILocation(line: 612, column: 18, scope: !2608)
!2612 = !DILocation(line: 614, column: 17, scope: !2613)
!2613 = distinct !DILexicalBlock(scope: !2608, file: !139, line: 614, column: 17)
!2614 = !DILocation(line: 614, column: 17, scope: !2608)
!2615 = !DILocation(line: 616, column: 19, scope: !2616)
!2616 = distinct !DILexicalBlock(scope: !2613, file: !139, line: 615, column: 15)
!2617 = !DILocation(line: 617, column: 29, scope: !2616)
!2618 = !DILocation(line: 617, column: 41, scope: !2616)
!2619 = !DILocation(line: 617, column: 27, scope: !2616)
!2620 = !DILocation(line: 618, column: 15, scope: !2616)
!2621 = !DILocalVariable(name: "mbstate", scope: !2622, file: !139, line: 621, type: !2623)
!2622 = distinct !DILexicalBlock(scope: !2613, file: !139, line: 620, column: 15)
!2623 = !DIDerivedType(tag: DW_TAG_typedef, name: "mbstate_t", file: !2624, line: 6, baseType: !2625)
!2624 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/mbstate_t.h", directory: "")
!2625 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mbstate_t", file: !2626, line: 21, baseType: !2627)
!2626 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h", directory: "")
!2627 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2626, line: 13, size: 64, elements: !2628)
!2628 = !{!2629, !2630}
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !2627, file: !2626, line: 15, baseType: !72, size: 32)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !2627, file: !2626, line: 20, baseType: !2631, size: 32, offset: 32)
!2631 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2627, file: !2626, line: 16, size: 32, elements: !2632)
!2632 = !{!2633, !2634}
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !2631, file: !2626, line: 18, baseType: !16, size: 32)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !2631, file: !2626, line: 19, baseType: !2635, size: 32)
!2635 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 32, elements: !2636)
!2636 = !{!2637}
!2637 = !DISubrange(count: 4)
!2638 = !DILocation(line: 621, column: 27, scope: !2622)
!2639 = !DILocation(line: 622, column: 17, scope: !2622)
!2640 = !DILocation(line: 624, column: 19, scope: !2622)
!2641 = !DILocation(line: 625, column: 27, scope: !2622)
!2642 = !DILocation(line: 626, column: 21, scope: !2643)
!2643 = distinct !DILexicalBlock(scope: !2622, file: !139, line: 626, column: 21)
!2644 = !DILocation(line: 626, column: 29, scope: !2643)
!2645 = !DILocation(line: 626, column: 21, scope: !2622)
!2646 = !DILocation(line: 627, column: 37, scope: !2643)
!2647 = !DILocation(line: 627, column: 29, scope: !2643)
!2648 = !DILocation(line: 627, column: 27, scope: !2643)
!2649 = !DILocation(line: 627, column: 19, scope: !2643)
!2650 = !DILocation(line: 629, column: 17, scope: !2622)
!2651 = !DILocalVariable(name: "w", scope: !2652, file: !139, line: 631, type: !2653)
!2652 = distinct !DILexicalBlock(scope: !2622, file: !139, line: 630, column: 19)
!2653 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !135, line: 74, baseType: !72)
!2654 = !DILocation(line: 631, column: 29, scope: !2652)
!2655 = !DILocalVariable(name: "bytes", scope: !2652, file: !139, line: 632, type: !134)
!2656 = !DILocation(line: 632, column: 28, scope: !2652)
!2657 = !DILocation(line: 632, column: 50, scope: !2652)
!2658 = !DILocation(line: 632, column: 54, scope: !2652)
!2659 = !DILocation(line: 632, column: 58, scope: !2652)
!2660 = !DILocation(line: 632, column: 56, scope: !2652)
!2661 = !DILocation(line: 633, column: 45, scope: !2652)
!2662 = !DILocation(line: 633, column: 56, scope: !2652)
!2663 = !DILocation(line: 633, column: 60, scope: !2652)
!2664 = !DILocation(line: 633, column: 58, scope: !2652)
!2665 = !DILocation(line: 633, column: 53, scope: !2652)
!2666 = !DILocation(line: 632, column: 36, scope: !2652)
!2667 = !DILocation(line: 634, column: 25, scope: !2668)
!2668 = distinct !DILexicalBlock(scope: !2652, file: !139, line: 634, column: 25)
!2669 = !DILocation(line: 634, column: 31, scope: !2668)
!2670 = !DILocation(line: 634, column: 25, scope: !2652)
!2671 = !DILocation(line: 635, column: 23, scope: !2668)
!2672 = !DILocation(line: 636, column: 30, scope: !2673)
!2673 = distinct !DILexicalBlock(scope: !2668, file: !139, line: 636, column: 30)
!2674 = !DILocation(line: 636, column: 36, scope: !2673)
!2675 = !DILocation(line: 636, column: 30, scope: !2668)
!2676 = !DILocation(line: 638, column: 35, scope: !2677)
!2677 = distinct !DILexicalBlock(scope: !2673, file: !139, line: 637, column: 23)
!2678 = !DILocation(line: 639, column: 25, scope: !2677)
!2679 = !DILocation(line: 641, column: 30, scope: !2680)
!2680 = distinct !DILexicalBlock(scope: !2673, file: !139, line: 641, column: 30)
!2681 = !DILocation(line: 641, column: 36, scope: !2680)
!2682 = !DILocation(line: 641, column: 30, scope: !2673)
!2683 = !DILocation(line: 643, column: 35, scope: !2684)
!2684 = distinct !DILexicalBlock(scope: !2680, file: !139, line: 642, column: 23)
!2685 = !DILocation(line: 644, column: 25, scope: !2684)
!2686 = !DILocation(line: 644, column: 32, scope: !2684)
!2687 = !DILocation(line: 644, column: 36, scope: !2684)
!2688 = !DILocation(line: 644, column: 34, scope: !2684)
!2689 = !DILocation(line: 644, column: 40, scope: !2684)
!2690 = !DILocation(line: 644, column: 38, scope: !2684)
!2691 = !DILocation(line: 644, column: 48, scope: !2684)
!2692 = !DILocation(line: 644, column: 51, scope: !2684)
!2693 = !DILocation(line: 644, column: 55, scope: !2684)
!2694 = !DILocation(line: 644, column: 59, scope: !2684)
!2695 = !DILocation(line: 644, column: 57, scope: !2684)
!2696 = !DILocation(line: 0, scope: !2684)
!2697 = !DILocation(line: 645, column: 28, scope: !2684)
!2698 = distinct !{!2698, !2685, !2697}
!2699 = !DILocation(line: 646, column: 25, scope: !2684)
!2700 = !DILocation(line: 654, column: 44, scope: !2701)
!2701 = distinct !DILexicalBlock(scope: !2702, file: !139, line: 654, column: 29)
!2702 = distinct !DILexicalBlock(scope: !2680, file: !139, line: 649, column: 23)
!2703 = !DILocation(line: 655, column: 29, scope: !2701)
!2704 = !DILocation(line: 655, column: 32, scope: !2701)
!2705 = !DILocation(line: 655, column: 46, scope: !2701)
!2706 = !DILocation(line: 654, column: 29, scope: !2702)
!2707 = !DILocalVariable(name: "j", scope: !2708, file: !139, line: 657, type: !134)
!2708 = distinct !DILexicalBlock(scope: !2701, file: !139, line: 656, column: 27)
!2709 = !DILocation(line: 657, column: 36, scope: !2708)
!2710 = !DILocation(line: 658, column: 36, scope: !2711)
!2711 = distinct !DILexicalBlock(scope: !2708, file: !139, line: 658, column: 29)
!2712 = !DILocation(line: 658, column: 34, scope: !2711)
!2713 = !DILocation(line: 658, column: 41, scope: !2714)
!2714 = distinct !DILexicalBlock(scope: !2711, file: !139, line: 658, column: 29)
!2715 = !DILocation(line: 658, column: 45, scope: !2714)
!2716 = !DILocation(line: 658, column: 43, scope: !2714)
!2717 = !DILocation(line: 658, column: 29, scope: !2711)
!2718 = !DILocation(line: 659, column: 39, scope: !2714)
!2719 = !DILocation(line: 659, column: 43, scope: !2714)
!2720 = !DILocation(line: 659, column: 47, scope: !2714)
!2721 = !DILocation(line: 659, column: 45, scope: !2714)
!2722 = !DILocation(line: 659, column: 51, scope: !2714)
!2723 = !DILocation(line: 659, column: 49, scope: !2714)
!2724 = !DILocation(line: 659, column: 31, scope: !2714)
!2725 = !DILocation(line: 663, column: 35, scope: !2726)
!2726 = distinct !DILexicalBlock(scope: !2714, file: !139, line: 660, column: 33)
!2727 = !DILocation(line: 666, column: 35, scope: !2726)
!2728 = !DILocation(line: 667, column: 33, scope: !2726)
!2729 = !DILocation(line: 658, column: 53, scope: !2714)
!2730 = !DILocation(line: 658, column: 29, scope: !2714)
!2731 = distinct !{!2731, !2717, !2732}
!2732 = !DILocation(line: 667, column: 33, scope: !2711)
!2733 = !DILocation(line: 668, column: 27, scope: !2708)
!2734 = !DILocation(line: 670, column: 41, scope: !2735)
!2735 = distinct !DILexicalBlock(scope: !2702, file: !139, line: 670, column: 29)
!2736 = !DILocation(line: 670, column: 31, scope: !2735)
!2737 = !DILocation(line: 670, column: 29, scope: !2702)
!2738 = !DILocation(line: 671, column: 37, scope: !2735)
!2739 = !DILocation(line: 671, column: 27, scope: !2735)
!2740 = !DILocation(line: 672, column: 30, scope: !2702)
!2741 = !DILocation(line: 672, column: 27, scope: !2702)
!2742 = !DILocation(line: 674, column: 19, scope: !2652)
!2743 = !DILocation(line: 675, column: 26, scope: !2622)
!2744 = !DILocation(line: 675, column: 24, scope: !2622)
!2745 = distinct !{!2745, !2650, !2746}
!2746 = !DILocation(line: 675, column: 44, scope: !2622)
!2747 = !DILocation(line: 678, column: 40, scope: !2608)
!2748 = !DILocation(line: 678, column: 38, scope: !2608)
!2749 = !DILocation(line: 680, column: 21, scope: !2750)
!2750 = distinct !DILexicalBlock(scope: !2608, file: !139, line: 680, column: 17)
!2751 = !DILocation(line: 680, column: 19, scope: !2750)
!2752 = !DILocation(line: 680, column: 23, scope: !2750)
!2753 = !DILocation(line: 680, column: 27, scope: !2750)
!2754 = !DILocation(line: 680, column: 45, scope: !2750)
!2755 = !DILocation(line: 680, column: 50, scope: !2750)
!2756 = !DILocation(line: 680, column: 17, scope: !2608)
!2757 = !DILocalVariable(name: "ilim", scope: !2758, file: !139, line: 684, type: !134)
!2758 = distinct !DILexicalBlock(scope: !2750, file: !139, line: 681, column: 15)
!2759 = !DILocation(line: 684, column: 24, scope: !2758)
!2760 = !DILocation(line: 684, column: 31, scope: !2758)
!2761 = !DILocation(line: 684, column: 35, scope: !2758)
!2762 = !DILocation(line: 684, column: 33, scope: !2758)
!2763 = !DILocation(line: 686, column: 17, scope: !2758)
!2764 = !DILocation(line: 688, column: 25, scope: !2765)
!2765 = distinct !DILexicalBlock(scope: !2766, file: !139, line: 688, column: 25)
!2766 = distinct !DILexicalBlock(scope: !2767, file: !139, line: 687, column: 19)
!2767 = distinct !DILexicalBlock(scope: !2768, file: !139, line: 686, column: 17)
!2768 = distinct !DILexicalBlock(scope: !2758, file: !139, line: 686, column: 17)
!2769 = !DILocation(line: 688, column: 43, scope: !2765)
!2770 = !DILocation(line: 688, column: 48, scope: !2765)
!2771 = !DILocation(line: 688, column: 25, scope: !2766)
!2772 = !DILocation(line: 690, column: 25, scope: !2773)
!2773 = distinct !DILexicalBlock(scope: !2765, file: !139, line: 689, column: 23)
!2774 = !DILocation(line: 690, column: 25, scope: !2775)
!2775 = distinct !DILexicalBlock(scope: !2776, file: !139, line: 690, column: 25)
!2776 = distinct !DILexicalBlock(scope: !2773, file: !139, line: 690, column: 25)
!2777 = !DILocation(line: 690, column: 25, scope: !2776)
!2778 = !DILocation(line: 690, column: 25, scope: !2779)
!2779 = distinct !DILexicalBlock(scope: !2776, file: !139, line: 690, column: 25)
!2780 = !DILocation(line: 690, column: 25, scope: !2781)
!2781 = distinct !DILexicalBlock(scope: !2779, file: !139, line: 690, column: 25)
!2782 = !DILocation(line: 690, column: 25, scope: !2783)
!2783 = distinct !DILexicalBlock(scope: !2784, file: !139, line: 690, column: 25)
!2784 = distinct !DILexicalBlock(scope: !2781, file: !139, line: 690, column: 25)
!2785 = !DILocation(line: 690, column: 25, scope: !2784)
!2786 = !DILocation(line: 690, column: 25, scope: !2787)
!2787 = distinct !DILexicalBlock(scope: !2788, file: !139, line: 690, column: 25)
!2788 = distinct !DILexicalBlock(scope: !2781, file: !139, line: 690, column: 25)
!2789 = !DILocation(line: 690, column: 25, scope: !2788)
!2790 = !DILocation(line: 690, column: 25, scope: !2791)
!2791 = distinct !DILexicalBlock(scope: !2792, file: !139, line: 690, column: 25)
!2792 = distinct !DILexicalBlock(scope: !2781, file: !139, line: 690, column: 25)
!2793 = !DILocation(line: 690, column: 25, scope: !2792)
!2794 = !DILocation(line: 690, column: 25, scope: !2795)
!2795 = distinct !DILexicalBlock(scope: !2796, file: !139, line: 690, column: 25)
!2796 = distinct !DILexicalBlock(scope: !2776, file: !139, line: 690, column: 25)
!2797 = !DILocation(line: 690, column: 25, scope: !2796)
!2798 = !DILocation(line: 691, column: 25, scope: !2773)
!2799 = !DILocation(line: 691, column: 25, scope: !2800)
!2800 = distinct !DILexicalBlock(scope: !2801, file: !139, line: 691, column: 25)
!2801 = distinct !DILexicalBlock(scope: !2773, file: !139, line: 691, column: 25)
!2802 = !DILocation(line: 691, column: 25, scope: !2801)
!2803 = !DILocation(line: 692, column: 25, scope: !2773)
!2804 = !DILocation(line: 692, column: 25, scope: !2805)
!2805 = distinct !DILexicalBlock(scope: !2806, file: !139, line: 692, column: 25)
!2806 = distinct !DILexicalBlock(scope: !2773, file: !139, line: 692, column: 25)
!2807 = !DILocation(line: 692, column: 25, scope: !2806)
!2808 = !DILocation(line: 693, column: 36, scope: !2773)
!2809 = !DILocation(line: 693, column: 38, scope: !2773)
!2810 = !DILocation(line: 693, column: 33, scope: !2773)
!2811 = !DILocation(line: 693, column: 29, scope: !2773)
!2812 = !DILocation(line: 693, column: 27, scope: !2773)
!2813 = !DILocation(line: 694, column: 23, scope: !2773)
!2814 = !DILocation(line: 695, column: 30, scope: !2815)
!2815 = distinct !DILexicalBlock(scope: !2765, file: !139, line: 695, column: 30)
!2816 = !DILocation(line: 695, column: 30, scope: !2765)
!2817 = !DILocation(line: 697, column: 25, scope: !2818)
!2818 = distinct !DILexicalBlock(scope: !2815, file: !139, line: 696, column: 23)
!2819 = !DILocation(line: 697, column: 25, scope: !2820)
!2820 = distinct !DILexicalBlock(scope: !2821, file: !139, line: 697, column: 25)
!2821 = distinct !DILexicalBlock(scope: !2818, file: !139, line: 697, column: 25)
!2822 = !DILocation(line: 697, column: 25, scope: !2821)
!2823 = !DILocation(line: 698, column: 40, scope: !2818)
!2824 = !DILocation(line: 699, column: 23, scope: !2818)
!2825 = !DILocation(line: 700, column: 25, scope: !2826)
!2826 = distinct !DILexicalBlock(scope: !2766, file: !139, line: 700, column: 25)
!2827 = !DILocation(line: 700, column: 33, scope: !2826)
!2828 = !DILocation(line: 700, column: 35, scope: !2826)
!2829 = !DILocation(line: 700, column: 30, scope: !2826)
!2830 = !DILocation(line: 700, column: 25, scope: !2766)
!2831 = !DILocation(line: 701, column: 23, scope: !2826)
!2832 = !DILocation(line: 702, column: 21, scope: !2766)
!2833 = !DILocation(line: 702, column: 21, scope: !2834)
!2834 = distinct !DILexicalBlock(scope: !2835, file: !139, line: 702, column: 21)
!2835 = distinct !DILexicalBlock(scope: !2766, file: !139, line: 702, column: 21)
!2836 = !DILocation(line: 702, column: 21, scope: !2835)
!2837 = !DILocation(line: 702, column: 21, scope: !2838)
!2838 = distinct !DILexicalBlock(scope: !2834, file: !139, line: 702, column: 21)
!2839 = !DILocation(line: 702, column: 21, scope: !2840)
!2840 = distinct !DILexicalBlock(scope: !2841, file: !139, line: 702, column: 21)
!2841 = distinct !DILexicalBlock(scope: !2838, file: !139, line: 702, column: 21)
!2842 = !DILocation(line: 702, column: 21, scope: !2841)
!2843 = !DILocation(line: 702, column: 21, scope: !2844)
!2844 = distinct !DILexicalBlock(scope: !2845, file: !139, line: 702, column: 21)
!2845 = distinct !DILexicalBlock(scope: !2838, file: !139, line: 702, column: 21)
!2846 = !DILocation(line: 702, column: 21, scope: !2845)
!2847 = !DILocation(line: 703, column: 21, scope: !2766)
!2848 = !DILocation(line: 703, column: 21, scope: !2849)
!2849 = distinct !DILexicalBlock(scope: !2850, file: !139, line: 703, column: 21)
!2850 = distinct !DILexicalBlock(scope: !2766, file: !139, line: 703, column: 21)
!2851 = !DILocation(line: 703, column: 21, scope: !2850)
!2852 = !DILocation(line: 704, column: 25, scope: !2766)
!2853 = !DILocation(line: 704, column: 29, scope: !2766)
!2854 = !DILocation(line: 704, column: 23, scope: !2766)
!2855 = !DILocation(line: 686, column: 17, scope: !2767)
!2856 = distinct !{!2856, !2857, !2858}
!2857 = !DILocation(line: 686, column: 17, scope: !2768)
!2858 = !DILocation(line: 705, column: 19, scope: !2768)
!2859 = !DILocation(line: 707, column: 17, scope: !2758)
!2860 = !DILocation(line: 710, column: 9, scope: !2358)
!2861 = !DILocation(line: 712, column: 16, scope: !2862)
!2862 = distinct !DILexicalBlock(scope: !2304, file: !139, line: 712, column: 11)
!2863 = !DILocation(line: 712, column: 34, scope: !2862)
!2864 = !DILocation(line: 712, column: 37, scope: !2862)
!2865 = !DILocation(line: 712, column: 51, scope: !2862)
!2866 = !DILocation(line: 713, column: 15, scope: !2862)
!2867 = !DILocation(line: 713, column: 18, scope: !2862)
!2868 = !DILocation(line: 714, column: 14, scope: !2862)
!2869 = !DILocation(line: 714, column: 17, scope: !2862)
!2870 = !DILocation(line: 715, column: 14, scope: !2862)
!2871 = !DILocation(line: 715, column: 17, scope: !2862)
!2872 = !DILocation(line: 715, column: 33, scope: !2862)
!2873 = !DILocation(line: 715, column: 35, scope: !2862)
!2874 = !DILocation(line: 715, column: 51, scope: !2862)
!2875 = !DILocation(line: 715, column: 53, scope: !2862)
!2876 = !DILocation(line: 715, column: 47, scope: !2862)
!2877 = !DILocation(line: 715, column: 65, scope: !2862)
!2878 = !DILocation(line: 716, column: 11, scope: !2862)
!2879 = !DILocation(line: 716, column: 15, scope: !2862)
!2880 = !DILocation(line: 712, column: 11, scope: !2304)
!2881 = !DILocation(line: 717, column: 9, scope: !2862)
!2882 = !DILabel(scope: !2304, name: "store_escape", file: !139, line: 719)
!2883 = !DILocation(line: 719, column: 5, scope: !2304)
!2884 = !DILocation(line: 720, column: 7, scope: !2304)
!2885 = !DILocation(line: 720, column: 7, scope: !2886)
!2886 = distinct !DILexicalBlock(scope: !2887, file: !139, line: 720, column: 7)
!2887 = distinct !DILexicalBlock(scope: !2304, file: !139, line: 720, column: 7)
!2888 = !DILocation(line: 720, column: 7, scope: !2887)
!2889 = !DILocation(line: 720, column: 7, scope: !2890)
!2890 = distinct !DILexicalBlock(scope: !2887, file: !139, line: 720, column: 7)
!2891 = !DILocation(line: 720, column: 7, scope: !2892)
!2892 = distinct !DILexicalBlock(scope: !2890, file: !139, line: 720, column: 7)
!2893 = !DILocation(line: 720, column: 7, scope: !2894)
!2894 = distinct !DILexicalBlock(scope: !2895, file: !139, line: 720, column: 7)
!2895 = distinct !DILexicalBlock(scope: !2892, file: !139, line: 720, column: 7)
!2896 = !DILocation(line: 720, column: 7, scope: !2895)
!2897 = !DILocation(line: 720, column: 7, scope: !2898)
!2898 = distinct !DILexicalBlock(scope: !2899, file: !139, line: 720, column: 7)
!2899 = distinct !DILexicalBlock(scope: !2892, file: !139, line: 720, column: 7)
!2900 = !DILocation(line: 720, column: 7, scope: !2899)
!2901 = !DILocation(line: 720, column: 7, scope: !2902)
!2902 = distinct !DILexicalBlock(scope: !2903, file: !139, line: 720, column: 7)
!2903 = distinct !DILexicalBlock(scope: !2892, file: !139, line: 720, column: 7)
!2904 = !DILocation(line: 720, column: 7, scope: !2903)
!2905 = !DILocation(line: 720, column: 7, scope: !2906)
!2906 = distinct !DILexicalBlock(scope: !2907, file: !139, line: 720, column: 7)
!2907 = distinct !DILexicalBlock(scope: !2887, file: !139, line: 720, column: 7)
!2908 = !DILocation(line: 720, column: 7, scope: !2907)
!2909 = !DILabel(scope: !2304, name: "store_c", file: !139, line: 722)
!2910 = !DILocation(line: 722, column: 5, scope: !2304)
!2911 = !DILocation(line: 723, column: 7, scope: !2304)
!2912 = !DILocation(line: 723, column: 7, scope: !2913)
!2913 = distinct !DILexicalBlock(scope: !2914, file: !139, line: 723, column: 7)
!2914 = distinct !DILexicalBlock(scope: !2304, file: !139, line: 723, column: 7)
!2915 = !DILocation(line: 723, column: 7, scope: !2914)
!2916 = !DILocation(line: 723, column: 7, scope: !2917)
!2917 = distinct !DILexicalBlock(scope: !2913, file: !139, line: 723, column: 7)
!2918 = !DILocation(line: 723, column: 7, scope: !2919)
!2919 = distinct !DILexicalBlock(scope: !2920, file: !139, line: 723, column: 7)
!2920 = distinct !DILexicalBlock(scope: !2917, file: !139, line: 723, column: 7)
!2921 = !DILocation(line: 723, column: 7, scope: !2920)
!2922 = !DILocation(line: 723, column: 7, scope: !2923)
!2923 = distinct !DILexicalBlock(scope: !2924, file: !139, line: 723, column: 7)
!2924 = distinct !DILexicalBlock(scope: !2917, file: !139, line: 723, column: 7)
!2925 = !DILocation(line: 723, column: 7, scope: !2924)
!2926 = !DILocation(line: 724, column: 7, scope: !2304)
!2927 = !DILocation(line: 724, column: 7, scope: !2928)
!2928 = distinct !DILexicalBlock(scope: !2929, file: !139, line: 724, column: 7)
!2929 = distinct !DILexicalBlock(scope: !2304, file: !139, line: 724, column: 7)
!2930 = !DILocation(line: 724, column: 7, scope: !2929)
!2931 = !DILocation(line: 726, column: 13, scope: !2932)
!2932 = distinct !DILexicalBlock(scope: !2304, file: !139, line: 726, column: 11)
!2933 = !DILocation(line: 726, column: 11, scope: !2304)
!2934 = !DILocation(line: 727, column: 38, scope: !2932)
!2935 = !DILocation(line: 727, column: 9, scope: !2932)
!2936 = !DILocation(line: 728, column: 5, scope: !2304)
!2937 = !DILocation(line: 400, column: 75, scope: !2293)
!2938 = !DILocation(line: 400, column: 3, scope: !2293)
!2939 = distinct !{!2939, !2302, !2940}
!2940 = !DILocation(line: 728, column: 5, scope: !2290)
!2941 = !DILocation(line: 730, column: 7, scope: !2942)
!2942 = distinct !DILexicalBlock(scope: !2150, file: !139, line: 730, column: 7)
!2943 = !DILocation(line: 730, column: 11, scope: !2942)
!2944 = !DILocation(line: 730, column: 16, scope: !2942)
!2945 = !DILocation(line: 730, column: 19, scope: !2942)
!2946 = !DILocation(line: 730, column: 33, scope: !2942)
!2947 = !DILocation(line: 731, column: 7, scope: !2942)
!2948 = !DILocation(line: 731, column: 10, scope: !2942)
!2949 = !DILocation(line: 730, column: 7, scope: !2150)
!2950 = !DILocation(line: 732, column: 5, scope: !2942)
!2951 = !DILocation(line: 738, column: 7, scope: !2952)
!2952 = distinct !DILexicalBlock(scope: !2150, file: !139, line: 738, column: 7)
!2953 = !DILocation(line: 738, column: 21, scope: !2952)
!2954 = !DILocation(line: 738, column: 51, scope: !2952)
!2955 = !DILocation(line: 738, column: 56, scope: !2952)
!2956 = !DILocation(line: 739, column: 7, scope: !2952)
!2957 = !DILocation(line: 739, column: 10, scope: !2952)
!2958 = !DILocation(line: 738, column: 7, scope: !2150)
!2959 = !DILocation(line: 741, column: 11, scope: !2960)
!2960 = distinct !DILexicalBlock(scope: !2961, file: !139, line: 741, column: 11)
!2961 = distinct !DILexicalBlock(scope: !2952, file: !139, line: 740, column: 5)
!2962 = !DILocation(line: 741, column: 11, scope: !2961)
!2963 = !DILocation(line: 742, column: 42, scope: !2960)
!2964 = !DILocation(line: 742, column: 50, scope: !2960)
!2965 = !DILocation(line: 742, column: 67, scope: !2960)
!2966 = !DILocation(line: 742, column: 72, scope: !2960)
!2967 = !DILocation(line: 744, column: 42, scope: !2960)
!2968 = !DILocation(line: 744, column: 49, scope: !2960)
!2969 = !DILocation(line: 745, column: 42, scope: !2960)
!2970 = !DILocation(line: 745, column: 54, scope: !2960)
!2971 = !DILocation(line: 742, column: 16, scope: !2960)
!2972 = !DILocation(line: 742, column: 9, scope: !2960)
!2973 = !DILocation(line: 746, column: 18, scope: !2974)
!2974 = distinct !DILexicalBlock(scope: !2960, file: !139, line: 746, column: 16)
!2975 = !DILocation(line: 746, column: 29, scope: !2974)
!2976 = !DILocation(line: 746, column: 32, scope: !2974)
!2977 = !DILocation(line: 746, column: 16, scope: !2960)
!2978 = !DILocation(line: 749, column: 24, scope: !2979)
!2979 = distinct !DILexicalBlock(scope: !2974, file: !139, line: 747, column: 9)
!2980 = !DILocation(line: 749, column: 22, scope: !2979)
!2981 = !DILocation(line: 750, column: 15, scope: !2979)
!2982 = !DILocation(line: 751, column: 11, scope: !2979)
!2983 = !DILocation(line: 753, column: 5, scope: !2961)
!2984 = !DILocation(line: 755, column: 7, scope: !2985)
!2985 = distinct !DILexicalBlock(scope: !2150, file: !139, line: 755, column: 7)
!2986 = !DILocation(line: 755, column: 20, scope: !2985)
!2987 = !DILocation(line: 755, column: 24, scope: !2985)
!2988 = !DILocation(line: 755, column: 7, scope: !2150)
!2989 = !DILocation(line: 756, column: 5, scope: !2985)
!2990 = !DILocation(line: 756, column: 13, scope: !2991)
!2991 = distinct !DILexicalBlock(scope: !2992, file: !139, line: 756, column: 5)
!2992 = distinct !DILexicalBlock(scope: !2985, file: !139, line: 756, column: 5)
!2993 = !DILocation(line: 756, column: 12, scope: !2991)
!2994 = !DILocation(line: 756, column: 5, scope: !2992)
!2995 = !DILocation(line: 757, column: 7, scope: !2991)
!2996 = !DILocation(line: 757, column: 7, scope: !2997)
!2997 = distinct !DILexicalBlock(scope: !2998, file: !139, line: 757, column: 7)
!2998 = distinct !DILexicalBlock(scope: !2991, file: !139, line: 757, column: 7)
!2999 = !DILocation(line: 757, column: 7, scope: !2998)
!3000 = !DILocation(line: 756, column: 39, scope: !2991)
!3001 = !DILocation(line: 756, column: 5, scope: !2991)
!3002 = distinct !{!3002, !2994, !3003}
!3003 = !DILocation(line: 757, column: 7, scope: !2992)
!3004 = !DILocation(line: 759, column: 7, scope: !3005)
!3005 = distinct !DILexicalBlock(scope: !2150, file: !139, line: 759, column: 7)
!3006 = !DILocation(line: 759, column: 13, scope: !3005)
!3007 = !DILocation(line: 759, column: 11, scope: !3005)
!3008 = !DILocation(line: 759, column: 7, scope: !2150)
!3009 = !DILocation(line: 760, column: 5, scope: !3005)
!3010 = !DILocation(line: 760, column: 12, scope: !3005)
!3011 = !DILocation(line: 760, column: 17, scope: !3005)
!3012 = !DILocation(line: 761, column: 10, scope: !2150)
!3013 = !DILocation(line: 761, column: 3, scope: !2150)
!3014 = !DILabel(scope: !2150, name: "force_outer_quoting_style", file: !139, line: 763)
!3015 = !DILocation(line: 763, column: 2, scope: !2150)
!3016 = !DILocation(line: 766, column: 7, scope: !3017)
!3017 = distinct !DILexicalBlock(scope: !2150, file: !139, line: 766, column: 7)
!3018 = !DILocation(line: 766, column: 21, scope: !3017)
!3019 = !DILocation(line: 766, column: 51, scope: !3017)
!3020 = !DILocation(line: 766, column: 54, scope: !3017)
!3021 = !DILocation(line: 766, column: 7, scope: !2150)
!3022 = !DILocation(line: 767, column: 19, scope: !3017)
!3023 = !DILocation(line: 767, column: 5, scope: !3017)
!3024 = !DILocation(line: 768, column: 36, scope: !2150)
!3025 = !DILocation(line: 768, column: 44, scope: !2150)
!3026 = !DILocation(line: 768, column: 56, scope: !2150)
!3027 = !DILocation(line: 768, column: 61, scope: !2150)
!3028 = !DILocation(line: 769, column: 36, scope: !2150)
!3029 = !DILocation(line: 770, column: 36, scope: !2150)
!3030 = !DILocation(line: 770, column: 42, scope: !2150)
!3031 = !DILocation(line: 771, column: 36, scope: !2150)
!3032 = !DILocation(line: 771, column: 48, scope: !2150)
!3033 = !DILocation(line: 768, column: 10, scope: !2150)
!3034 = !DILocation(line: 768, column: 3, scope: !2150)
!3035 = !DILocation(line: 772, column: 1, scope: !2150)
!3036 = !DILocalVariable(name: "buffer", arg: 1, scope: !3037, file: !139, line: 256, type: !6)
!3037 = distinct !DISubprogram(name: "quotearg_buffer_restyled", scope: !139, file: !139, line: 256, type: !2151, scopeLine: 262, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3038, retainedNodes: !4)
!3038 = distinct !DICompileUnit(language: DW_LANG_C99, file: !116, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !117, retainedTypes: !132, globals: !3039, nameTableKind: None)
!3039 = !{!3040, !3042, !3044, !3053, !3055, !3057, !3064, !3066}
!3040 = !DIGlobalVariableExpression(var: !3041, expr: !DIExpression())
!3041 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !3038, file: !139, line: 85, type: !140, isLocal: false, isDefinition: true)
!3042 = !DIGlobalVariableExpression(var: !3043, expr: !DIExpression())
!3043 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !3038, file: !139, line: 101, type: !146, isLocal: false, isDefinition: true)
!3044 = !DIGlobalVariableExpression(var: !3045, expr: !DIExpression())
!3045 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !3038, file: !139, line: 1052, type: !3046, isLocal: false, isDefinition: true)
!3046 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !139, line: 65, size: 448, elements: !3047)
!3047 = !{!3048, !3049, !3050, !3051, !3052}
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !3046, file: !139, line: 68, baseType: !118, size: 32)
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3046, file: !139, line: 71, baseType: !72, size: 32, offset: 32)
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !3046, file: !139, line: 75, baseType: !155, size: 256, offset: 64)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !3046, file: !139, line: 78, baseType: !69, size: 64, offset: 320)
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !3046, file: !139, line: 81, baseType: !69, size: 64, offset: 384)
!3053 = !DIGlobalVariableExpression(var: !3054, expr: !DIExpression())
!3054 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !3038, file: !139, line: 116, type: !3046, isLocal: true, isDefinition: true)
!3055 = !DIGlobalVariableExpression(var: !3056, expr: !DIExpression())
!3056 = distinct !DIGlobalVariable(name: "slot0", scope: !3038, file: !139, line: 842, type: !162, isLocal: true, isDefinition: true)
!3057 = !DIGlobalVariableExpression(var: !3058, expr: !DIExpression())
!3058 = distinct !DIGlobalVariable(name: "slotvec", scope: !3038, file: !139, line: 845, type: !3059, isLocal: true, isDefinition: true)
!3059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3060, size: 64)
!3060 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !139, line: 834, size: 128, elements: !3061)
!3061 = !{!3062, !3063}
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3060, file: !139, line: 836, baseType: !134, size: 64)
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !3060, file: !139, line: 837, baseType: !6, size: 64, offset: 64)
!3064 = !DIGlobalVariableExpression(var: !3065, expr: !DIExpression())
!3065 = distinct !DIGlobalVariable(name: "nslots", scope: !3038, file: !139, line: 843, type: !72, isLocal: true, isDefinition: true)
!3066 = !DIGlobalVariableExpression(var: !3067, expr: !DIExpression())
!3067 = distinct !DIGlobalVariable(name: "slotvec0", scope: !3038, file: !139, line: 844, type: !3060, isLocal: true, isDefinition: true)
!3068 = !DILocalVariable(name: "buffersize", arg: 2, scope: !3037, file: !139, line: 256, type: !134)
!3069 = !DILocalVariable(name: "arg", arg: 3, scope: !3037, file: !139, line: 257, type: !69)
!3070 = !DILocalVariable(name: "argsize", arg: 4, scope: !3037, file: !139, line: 257, type: !134)
!3071 = !DILocalVariable(name: "quoting_style", arg: 5, scope: !3037, file: !139, line: 258, type: !118)
!3072 = !DILocalVariable(name: "flags", arg: 6, scope: !3037, file: !139, line: 258, type: !72)
!3073 = !DILocalVariable(name: "quote_these_too", arg: 7, scope: !3037, file: !139, line: 259, type: !2153)
!3074 = !DILocalVariable(name: "left_quote", arg: 8, scope: !3037, file: !139, line: 260, type: !69)
!3075 = !DILocalVariable(name: "right_quote", arg: 9, scope: !3037, file: !139, line: 261, type: !69)
!3076 = !DILocalVariable(name: "i", scope: !3037, file: !139, line: 263, type: !134)
!3077 = !DILocalVariable(name: "len", scope: !3037, file: !139, line: 264, type: !134)
!3078 = !DILocalVariable(name: "orig_buffersize", scope: !3037, file: !139, line: 265, type: !134)
!3079 = !DILocalVariable(name: "quote_string", scope: !3037, file: !139, line: 266, type: !69)
!3080 = !DILocalVariable(name: "quote_string_len", scope: !3037, file: !139, line: 267, type: !134)
!3081 = !DILocalVariable(name: "backslash_escapes", scope: !3037, file: !139, line: 268, type: !27)
!3082 = !DILocalVariable(name: "unibyte_locale", scope: !3037, file: !139, line: 269, type: !27)
!3083 = !DILocalVariable(name: "elide_outer_quotes", scope: !3037, file: !139, line: 270, type: !27)
!3084 = !DILocalVariable(name: "pending_shell_escape_end", scope: !3037, file: !139, line: 271, type: !27)
!3085 = !DILocalVariable(name: "encountered_single_quote", scope: !3037, file: !139, line: 272, type: !27)
!3086 = !DILocalVariable(name: "all_c_and_shell_quote_compat", scope: !3037, file: !139, line: 273, type: !27)
!3087 = distinct !DISubprogram(name: "gettext_quote", scope: !139, file: !139, line: 207, type: !3088, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !115, retainedNodes: !4)
!3088 = !DISubroutineType(types: !3089)
!3089 = !{!69, !69, !118}
!3090 = !DILocalVariable(name: "msgid", arg: 1, scope: !3087, file: !139, line: 207, type: !69)
!3091 = !DILocation(line: 207, column: 28, scope: !3087)
!3092 = !DILocalVariable(name: "s", arg: 2, scope: !3087, file: !139, line: 207, type: !118)
!3093 = !DILocation(line: 207, column: 54, scope: !3087)
!3094 = !DILocalVariable(name: "translation", scope: !3087, file: !139, line: 209, type: !69)
!3095 = !DILocation(line: 209, column: 15, scope: !3087)
!3096 = !DILocation(line: 209, column: 29, scope: !3087)
!3097 = !DILocalVariable(name: "locale_code", scope: !3087, file: !139, line: 210, type: !69)
!3098 = !DILocation(line: 210, column: 15, scope: !3087)
!3099 = !DILocation(line: 212, column: 7, scope: !3100)
!3100 = distinct !DILexicalBlock(scope: !3087, file: !139, line: 212, column: 7)
!3101 = !DILocation(line: 212, column: 22, scope: !3100)
!3102 = !DILocation(line: 212, column: 19, scope: !3100)
!3103 = !DILocation(line: 212, column: 7, scope: !3087)
!3104 = !DILocation(line: 213, column: 12, scope: !3100)
!3105 = !DILocation(line: 213, column: 5, scope: !3100)
!3106 = !DILocation(line: 233, column: 17, scope: !3087)
!3107 = !DILocation(line: 233, column: 15, scope: !3087)
!3108 = !DILocation(line: 234, column: 7, scope: !3109)
!3109 = distinct !DILexicalBlock(scope: !3087, file: !139, line: 234, column: 7)
!3110 = !DILocation(line: 235, column: 12, scope: !3109)
!3111 = !DILocation(line: 235, column: 21, scope: !3109)
!3112 = !DILocation(line: 235, column: 5, scope: !3109)
!3113 = !DILocation(line: 236, column: 7, scope: !3114)
!3114 = distinct !DILexicalBlock(scope: !3087, file: !139, line: 236, column: 7)
!3115 = !DILocation(line: 237, column: 12, scope: !3114)
!3116 = !DILocation(line: 237, column: 21, scope: !3114)
!3117 = !DILocation(line: 237, column: 5, scope: !3114)
!3118 = !DILocation(line: 239, column: 11, scope: !3087)
!3119 = !DILocation(line: 239, column: 13, scope: !3087)
!3120 = !DILocation(line: 239, column: 3, scope: !3087)
!3121 = !DILocation(line: 240, column: 1, scope: !3087)
!3122 = !DILocalVariable(name: "msgid", arg: 1, scope: !3123, file: !139, line: 207, type: !69)
!3123 = distinct !DISubprogram(name: "gettext_quote", scope: !139, file: !139, line: 207, type: !3088, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3124, retainedNodes: !4)
!3124 = distinct !DICompileUnit(language: DW_LANG_C99, file: !116, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !117, retainedTypes: !132, globals: !3125, nameTableKind: None)
!3125 = !{!3126, !3128, !3130, !3139, !3141, !3143, !3150, !3152}
!3126 = !DIGlobalVariableExpression(var: !3127, expr: !DIExpression())
!3127 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !3124, file: !139, line: 85, type: !140, isLocal: false, isDefinition: true)
!3128 = !DIGlobalVariableExpression(var: !3129, expr: !DIExpression())
!3129 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !3124, file: !139, line: 101, type: !146, isLocal: false, isDefinition: true)
!3130 = !DIGlobalVariableExpression(var: !3131, expr: !DIExpression())
!3131 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !3124, file: !139, line: 1052, type: !3132, isLocal: false, isDefinition: true)
!3132 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !139, line: 65, size: 448, elements: !3133)
!3133 = !{!3134, !3135, !3136, !3137, !3138}
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !3132, file: !139, line: 68, baseType: !118, size: 32)
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3132, file: !139, line: 71, baseType: !72, size: 32, offset: 32)
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !3132, file: !139, line: 75, baseType: !155, size: 256, offset: 64)
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !3132, file: !139, line: 78, baseType: !69, size: 64, offset: 320)
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !3132, file: !139, line: 81, baseType: !69, size: 64, offset: 384)
!3139 = !DIGlobalVariableExpression(var: !3140, expr: !DIExpression())
!3140 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !3124, file: !139, line: 116, type: !3132, isLocal: true, isDefinition: true)
!3141 = !DIGlobalVariableExpression(var: !3142, expr: !DIExpression())
!3142 = distinct !DIGlobalVariable(name: "slot0", scope: !3124, file: !139, line: 842, type: !162, isLocal: true, isDefinition: true)
!3143 = !DIGlobalVariableExpression(var: !3144, expr: !DIExpression())
!3144 = distinct !DIGlobalVariable(name: "slotvec", scope: !3124, file: !139, line: 845, type: !3145, isLocal: true, isDefinition: true)
!3145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3146, size: 64)
!3146 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !139, line: 834, size: 128, elements: !3147)
!3147 = !{!3148, !3149}
!3148 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3146, file: !139, line: 836, baseType: !134, size: 64)
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !3146, file: !139, line: 837, baseType: !6, size: 64, offset: 64)
!3150 = !DIGlobalVariableExpression(var: !3151, expr: !DIExpression())
!3151 = distinct !DIGlobalVariable(name: "nslots", scope: !3124, file: !139, line: 843, type: !72, isLocal: true, isDefinition: true)
!3152 = !DIGlobalVariableExpression(var: !3153, expr: !DIExpression())
!3153 = distinct !DIGlobalVariable(name: "slotvec0", scope: !3124, file: !139, line: 844, type: !3146, isLocal: true, isDefinition: true)
!3154 = !DILocalVariable(name: "s", arg: 2, scope: !3123, file: !139, line: 207, type: !118)
!3155 = !DILocalVariable(name: "translation", scope: !3123, file: !139, line: 209, type: !69)
!3156 = !DILocalVariable(name: "locale_code", scope: !3123, file: !139, line: 210, type: !69)
!3157 = distinct !DISubprogram(name: "quotearg_char", scope: !139, file: !139, line: 991, type: !3158, scopeLine: 992, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !115, retainedNodes: !4)
!3158 = !DISubroutineType(types: !3159)
!3159 = !{!6, !69, !7}
!3160 = !DILocalVariable(name: "arg", arg: 1, scope: !3157, file: !139, line: 991, type: !69)
!3161 = !DILocation(line: 991, column: 28, scope: !3157)
!3162 = !DILocalVariable(name: "ch", arg: 2, scope: !3157, file: !139, line: 991, type: !7)
!3163 = !DILocation(line: 991, column: 38, scope: !3157)
!3164 = !DILocation(line: 993, column: 29, scope: !3157)
!3165 = !DILocation(line: 993, column: 44, scope: !3157)
!3166 = !DILocation(line: 993, column: 10, scope: !3157)
!3167 = !DILocation(line: 993, column: 3, scope: !3157)
!3168 = distinct !DISubprogram(name: "quotearg_colon", scope: !139, file: !139, line: 997, type: !3169, scopeLine: 998, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !115, retainedNodes: !4)
!3169 = !DISubroutineType(types: !3170)
!3170 = !{!6, !69}
!3171 = !DILocalVariable(name: "arg", arg: 1, scope: !3168, file: !139, line: 997, type: !69)
!3172 = !DILocation(line: 997, column: 29, scope: !3168)
!3173 = !DILocation(line: 999, column: 25, scope: !3168)
!3174 = !DILocation(line: 999, column: 10, scope: !3168)
!3175 = !DILocation(line: 999, column: 3, scope: !3168)
!3176 = !DILocalVariable(name: "arg", arg: 1, scope: !3177, file: !139, line: 997, type: !69)
!3177 = distinct !DISubprogram(name: "quotearg_colon", scope: !139, file: !139, line: 997, type: !3169, scopeLine: 998, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3178, retainedNodes: !4)
!3178 = distinct !DICompileUnit(language: DW_LANG_C99, file: !116, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !117, retainedTypes: !132, globals: !3179, nameTableKind: None)
!3179 = !{!3180, !3182, !3184, !3193, !3195, !3197, !3204, !3206}
!3180 = !DIGlobalVariableExpression(var: !3181, expr: !DIExpression())
!3181 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !3178, file: !139, line: 85, type: !140, isLocal: false, isDefinition: true)
!3182 = !DIGlobalVariableExpression(var: !3183, expr: !DIExpression())
!3183 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !3178, file: !139, line: 101, type: !146, isLocal: false, isDefinition: true)
!3184 = !DIGlobalVariableExpression(var: !3185, expr: !DIExpression())
!3185 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !3178, file: !139, line: 1052, type: !3186, isLocal: false, isDefinition: true)
!3186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !139, line: 65, size: 448, elements: !3187)
!3187 = !{!3188, !3189, !3190, !3191, !3192}
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !3186, file: !139, line: 68, baseType: !118, size: 32)
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3186, file: !139, line: 71, baseType: !72, size: 32, offset: 32)
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !3186, file: !139, line: 75, baseType: !155, size: 256, offset: 64)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !3186, file: !139, line: 78, baseType: !69, size: 64, offset: 320)
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !3186, file: !139, line: 81, baseType: !69, size: 64, offset: 384)
!3193 = !DIGlobalVariableExpression(var: !3194, expr: !DIExpression())
!3194 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !3178, file: !139, line: 116, type: !3186, isLocal: true, isDefinition: true)
!3195 = !DIGlobalVariableExpression(var: !3196, expr: !DIExpression())
!3196 = distinct !DIGlobalVariable(name: "slot0", scope: !3178, file: !139, line: 842, type: !162, isLocal: true, isDefinition: true)
!3197 = !DIGlobalVariableExpression(var: !3198, expr: !DIExpression())
!3198 = distinct !DIGlobalVariable(name: "slotvec", scope: !3178, file: !139, line: 845, type: !3199, isLocal: true, isDefinition: true)
!3199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3200, size: 64)
!3200 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !139, line: 834, size: 128, elements: !3201)
!3201 = !{!3202, !3203}
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3200, file: !139, line: 836, baseType: !134, size: 64)
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !3200, file: !139, line: 837, baseType: !6, size: 64, offset: 64)
!3204 = !DIGlobalVariableExpression(var: !3205, expr: !DIExpression())
!3205 = distinct !DIGlobalVariable(name: "nslots", scope: !3178, file: !139, line: 843, type: !72, isLocal: true, isDefinition: true)
!3206 = !DIGlobalVariableExpression(var: !3207, expr: !DIExpression())
!3207 = distinct !DIGlobalVariable(name: "slotvec0", scope: !3178, file: !139, line: 844, type: !3200, isLocal: true, isDefinition: true)
!3208 = distinct !DISubprogram(name: "quote_n_mem", scope: !139, file: !139, line: 1061, type: !3209, scopeLine: 1062, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !115, retainedNodes: !4)
!3209 = !DISubroutineType(types: !3210)
!3210 = !{!69, !72, !69, !134}
!3211 = !DILocalVariable(name: "n", arg: 1, scope: !3208, file: !139, line: 1061, type: !72)
!3212 = !DILocation(line: 1061, column: 18, scope: !3208)
!3213 = !DILocalVariable(name: "arg", arg: 2, scope: !3208, file: !139, line: 1061, type: !69)
!3214 = !DILocation(line: 1061, column: 33, scope: !3208)
!3215 = !DILocalVariable(name: "argsize", arg: 3, scope: !3208, file: !139, line: 1061, type: !134)
!3216 = !DILocation(line: 1061, column: 45, scope: !3208)
!3217 = !DILocation(line: 1063, column: 30, scope: !3208)
!3218 = !DILocation(line: 1063, column: 33, scope: !3208)
!3219 = !DILocation(line: 1063, column: 38, scope: !3208)
!3220 = !DILocation(line: 1063, column: 10, scope: !3208)
!3221 = !DILocation(line: 1063, column: 3, scope: !3208)
!3222 = !DILocalVariable(name: "n", arg: 1, scope: !3223, file: !139, line: 1061, type: !72)
!3223 = distinct !DISubprogram(name: "quote_n_mem", scope: !139, file: !139, line: 1061, type: !3209, scopeLine: 1062, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3224, retainedNodes: !4)
!3224 = distinct !DICompileUnit(language: DW_LANG_C99, file: !116, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !117, retainedTypes: !132, globals: !3225, nameTableKind: None)
!3225 = !{!3226, !3228, !3230, !3239, !3241, !3243, !3250, !3252}
!3226 = !DIGlobalVariableExpression(var: !3227, expr: !DIExpression())
!3227 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !3224, file: !139, line: 85, type: !140, isLocal: false, isDefinition: true)
!3228 = !DIGlobalVariableExpression(var: !3229, expr: !DIExpression())
!3229 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !3224, file: !139, line: 101, type: !146, isLocal: false, isDefinition: true)
!3230 = !DIGlobalVariableExpression(var: !3231, expr: !DIExpression())
!3231 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !3224, file: !139, line: 1052, type: !3232, isLocal: false, isDefinition: true)
!3232 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !139, line: 65, size: 448, elements: !3233)
!3233 = !{!3234, !3235, !3236, !3237, !3238}
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !3232, file: !139, line: 68, baseType: !118, size: 32)
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3232, file: !139, line: 71, baseType: !72, size: 32, offset: 32)
!3236 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !3232, file: !139, line: 75, baseType: !155, size: 256, offset: 64)
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !3232, file: !139, line: 78, baseType: !69, size: 64, offset: 320)
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !3232, file: !139, line: 81, baseType: !69, size: 64, offset: 384)
!3239 = !DIGlobalVariableExpression(var: !3240, expr: !DIExpression())
!3240 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !3224, file: !139, line: 116, type: !3232, isLocal: true, isDefinition: true)
!3241 = !DIGlobalVariableExpression(var: !3242, expr: !DIExpression())
!3242 = distinct !DIGlobalVariable(name: "slot0", scope: !3224, file: !139, line: 842, type: !162, isLocal: true, isDefinition: true)
!3243 = !DIGlobalVariableExpression(var: !3244, expr: !DIExpression())
!3244 = distinct !DIGlobalVariable(name: "slotvec", scope: !3224, file: !139, line: 845, type: !3245, isLocal: true, isDefinition: true)
!3245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3246, size: 64)
!3246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !139, line: 834, size: 128, elements: !3247)
!3247 = !{!3248, !3249}
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3246, file: !139, line: 836, baseType: !134, size: 64)
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !3246, file: !139, line: 837, baseType: !6, size: 64, offset: 64)
!3250 = !DIGlobalVariableExpression(var: !3251, expr: !DIExpression())
!3251 = distinct !DIGlobalVariable(name: "nslots", scope: !3224, file: !139, line: 843, type: !72, isLocal: true, isDefinition: true)
!3252 = !DIGlobalVariableExpression(var: !3253, expr: !DIExpression())
!3253 = distinct !DIGlobalVariable(name: "slotvec0", scope: !3224, file: !139, line: 844, type: !3246, isLocal: true, isDefinition: true)
!3254 = !DILocalVariable(name: "arg", arg: 2, scope: !3223, file: !139, line: 1061, type: !69)
!3255 = !DILocalVariable(name: "argsize", arg: 3, scope: !3223, file: !139, line: 1061, type: !134)
!3256 = distinct !DISubprogram(name: "quote_n", scope: !139, file: !139, line: 1073, type: !3257, scopeLine: 1074, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !115, retainedNodes: !4)
!3257 = !DISubroutineType(types: !3258)
!3258 = !{!69, !72, !69}
!3259 = !DILocalVariable(name: "n", arg: 1, scope: !3256, file: !139, line: 1073, type: !72)
!3260 = !DILocation(line: 1073, column: 14, scope: !3256)
!3261 = !DILocalVariable(name: "arg", arg: 2, scope: !3256, file: !139, line: 1073, type: !69)
!3262 = !DILocation(line: 1073, column: 29, scope: !3256)
!3263 = !DILocation(line: 1075, column: 23, scope: !3256)
!3264 = !DILocation(line: 1075, column: 26, scope: !3256)
!3265 = !DILocation(line: 1075, column: 10, scope: !3256)
!3266 = !DILocation(line: 1075, column: 3, scope: !3256)
!3267 = !DILocalVariable(name: "n", arg: 1, scope: !3268, file: !139, line: 1073, type: !72)
!3268 = distinct !DISubprogram(name: "quote_n", scope: !139, file: !139, line: 1073, type: !3257, scopeLine: 1074, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3269, retainedNodes: !4)
!3269 = distinct !DICompileUnit(language: DW_LANG_C99, file: !116, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !117, retainedTypes: !132, globals: !3270, nameTableKind: None)
!3270 = !{!3271, !3273, !3275, !3284, !3286, !3288, !3295, !3297}
!3271 = !DIGlobalVariableExpression(var: !3272, expr: !DIExpression())
!3272 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !3269, file: !139, line: 85, type: !140, isLocal: false, isDefinition: true)
!3273 = !DIGlobalVariableExpression(var: !3274, expr: !DIExpression())
!3274 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !3269, file: !139, line: 101, type: !146, isLocal: false, isDefinition: true)
!3275 = !DIGlobalVariableExpression(var: !3276, expr: !DIExpression())
!3276 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !3269, file: !139, line: 1052, type: !3277, isLocal: false, isDefinition: true)
!3277 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !139, line: 65, size: 448, elements: !3278)
!3278 = !{!3279, !3280, !3281, !3282, !3283}
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !3277, file: !139, line: 68, baseType: !118, size: 32)
!3280 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3277, file: !139, line: 71, baseType: !72, size: 32, offset: 32)
!3281 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !3277, file: !139, line: 75, baseType: !155, size: 256, offset: 64)
!3282 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !3277, file: !139, line: 78, baseType: !69, size: 64, offset: 320)
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !3277, file: !139, line: 81, baseType: !69, size: 64, offset: 384)
!3284 = !DIGlobalVariableExpression(var: !3285, expr: !DIExpression())
!3285 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !3269, file: !139, line: 116, type: !3277, isLocal: true, isDefinition: true)
!3286 = !DIGlobalVariableExpression(var: !3287, expr: !DIExpression())
!3287 = distinct !DIGlobalVariable(name: "slot0", scope: !3269, file: !139, line: 842, type: !162, isLocal: true, isDefinition: true)
!3288 = !DIGlobalVariableExpression(var: !3289, expr: !DIExpression())
!3289 = distinct !DIGlobalVariable(name: "slotvec", scope: !3269, file: !139, line: 845, type: !3290, isLocal: true, isDefinition: true)
!3290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3291, size: 64)
!3291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !139, line: 834, size: 128, elements: !3292)
!3292 = !{!3293, !3294}
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3291, file: !139, line: 836, baseType: !134, size: 64)
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !3291, file: !139, line: 837, baseType: !6, size: 64, offset: 64)
!3295 = !DIGlobalVariableExpression(var: !3296, expr: !DIExpression())
!3296 = distinct !DIGlobalVariable(name: "nslots", scope: !3269, file: !139, line: 843, type: !72, isLocal: true, isDefinition: true)
!3297 = !DIGlobalVariableExpression(var: !3298, expr: !DIExpression())
!3298 = distinct !DIGlobalVariable(name: "slotvec0", scope: !3269, file: !139, line: 844, type: !3291, isLocal: true, isDefinition: true)
!3299 = !DILocalVariable(name: "arg", arg: 2, scope: !3268, file: !139, line: 1073, type: !69)
!3300 = distinct !DISubprogram(name: "quote", scope: !139, file: !139, line: 1079, type: !3301, scopeLine: 1080, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !115, retainedNodes: !4)
!3301 = !DISubroutineType(types: !3302)
!3302 = !{!69, !69}
!3303 = !DILocalVariable(name: "arg", arg: 1, scope: !3300, file: !139, line: 1079, type: !69)
!3304 = !DILocation(line: 1079, column: 20, scope: !3300)
!3305 = !DILocation(line: 1081, column: 22, scope: !3300)
!3306 = !DILocation(line: 1081, column: 10, scope: !3300)
!3307 = !DILocation(line: 1081, column: 3, scope: !3300)
!3308 = !DILocalVariable(name: "arg", arg: 1, scope: !3309, file: !139, line: 1079, type: !69)
!3309 = distinct !DISubprogram(name: "quote", scope: !139, file: !139, line: 1079, type: !3301, scopeLine: 1080, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3310, retainedNodes: !4)
!3310 = distinct !DICompileUnit(language: DW_LANG_C99, file: !116, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !117, retainedTypes: !132, globals: !3311, nameTableKind: None)
!3311 = !{!3312, !3314, !3316, !3325, !3327, !3329, !3336, !3338}
!3312 = !DIGlobalVariableExpression(var: !3313, expr: !DIExpression())
!3313 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !3310, file: !139, line: 85, type: !140, isLocal: false, isDefinition: true)
!3314 = !DIGlobalVariableExpression(var: !3315, expr: !DIExpression())
!3315 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !3310, file: !139, line: 101, type: !146, isLocal: false, isDefinition: true)
!3316 = !DIGlobalVariableExpression(var: !3317, expr: !DIExpression())
!3317 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !3310, file: !139, line: 1052, type: !3318, isLocal: false, isDefinition: true)
!3318 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !139, line: 65, size: 448, elements: !3319)
!3319 = !{!3320, !3321, !3322, !3323, !3324}
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !3318, file: !139, line: 68, baseType: !118, size: 32)
!3321 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3318, file: !139, line: 71, baseType: !72, size: 32, offset: 32)
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !3318, file: !139, line: 75, baseType: !155, size: 256, offset: 64)
!3323 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !3318, file: !139, line: 78, baseType: !69, size: 64, offset: 320)
!3324 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !3318, file: !139, line: 81, baseType: !69, size: 64, offset: 384)
!3325 = !DIGlobalVariableExpression(var: !3326, expr: !DIExpression())
!3326 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !3310, file: !139, line: 116, type: !3318, isLocal: true, isDefinition: true)
!3327 = !DIGlobalVariableExpression(var: !3328, expr: !DIExpression())
!3328 = distinct !DIGlobalVariable(name: "slot0", scope: !3310, file: !139, line: 842, type: !162, isLocal: true, isDefinition: true)
!3329 = !DIGlobalVariableExpression(var: !3330, expr: !DIExpression())
!3330 = distinct !DIGlobalVariable(name: "slotvec", scope: !3310, file: !139, line: 845, type: !3331, isLocal: true, isDefinition: true)
!3331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3332, size: 64)
!3332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !139, line: 834, size: 128, elements: !3333)
!3333 = !{!3334, !3335}
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3332, file: !139, line: 836, baseType: !134, size: 64)
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !3332, file: !139, line: 837, baseType: !6, size: 64, offset: 64)
!3336 = !DIGlobalVariableExpression(var: !3337, expr: !DIExpression())
!3337 = distinct !DIGlobalVariable(name: "nslots", scope: !3310, file: !139, line: 843, type: !72, isLocal: true, isDefinition: true)
!3338 = !DIGlobalVariableExpression(var: !3339, expr: !DIExpression())
!3339 = distinct !DIGlobalVariable(name: "slotvec0", scope: !3310, file: !139, line: 844, type: !3332, isLocal: true, isDefinition: true)
!3340 = distinct !DISubprogram(name: "getcon", scope: !3341, file: !3341, line: 87, type: !3342, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !208, retainedNodes: !4)
!3341 = !DIFile(filename: "./lib/selinux/selinux.h", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!3342 = !DISubroutineType(types: !3343)
!3343 = !{!72, !3344}
!3344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3345, size: 64)
!3345 = !DIDerivedType(tag: DW_TAG_typedef, name: "security_context_t", file: !3341, line: 83, baseType: !6)
!3346 = !DILocalVariable(name: "con", arg: 1, scope: !3340, file: !3341, line: 87, type: !3344)
!3347 = !DILocation(line: 87, column: 29, scope: !3340)
!3348 = !DILocation(line: 88, column: 5, scope: !3340)
!3349 = !DILocation(line: 88, column: 11, scope: !3340)
!3350 = !DILocation(line: 88, column: 22, scope: !3340)
!3351 = distinct !DISubprogram(name: "parse_user_spec", scope: !179, file: !179, line: 259, type: !3352, scopeLine: 261, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !185, retainedNodes: !4)
!3352 = !DISubroutineType(types: !3353)
!3353 = !{!69, !69, !182, !183, !184, !184}
!3354 = !DILocalVariable(name: "spec", arg: 1, scope: !3351, file: !179, line: 259, type: !69)
!3355 = !DILocation(line: 259, column: 30, scope: !3351)
!3356 = !DILocalVariable(name: "uid", arg: 2, scope: !3351, file: !179, line: 259, type: !182)
!3357 = !DILocation(line: 259, column: 43, scope: !3351)
!3358 = !DILocalVariable(name: "gid", arg: 3, scope: !3351, file: !179, line: 259, type: !183)
!3359 = !DILocation(line: 259, column: 55, scope: !3351)
!3360 = !DILocalVariable(name: "username", arg: 4, scope: !3351, file: !179, line: 260, type: !184)
!3361 = !DILocation(line: 260, column: 25, scope: !3351)
!3362 = !DILocalVariable(name: "groupname", arg: 5, scope: !3351, file: !179, line: 260, type: !184)
!3363 = !DILocation(line: 260, column: 42, scope: !3351)
!3364 = !DILocalVariable(name: "colon", scope: !3351, file: !179, line: 262, type: !69)
!3365 = !DILocation(line: 262, column: 15, scope: !3351)
!3366 = !DILocation(line: 262, column: 23, scope: !3351)
!3367 = !DILocation(line: 262, column: 37, scope: !3351)
!3368 = !DILocation(line: 262, column: 29, scope: !3351)
!3369 = !DILocalVariable(name: "error_msg", scope: !3351, file: !179, line: 263, type: !69)
!3370 = !DILocation(line: 263, column: 15, scope: !3351)
!3371 = !DILocation(line: 264, column: 27, scope: !3351)
!3372 = !DILocation(line: 264, column: 33, scope: !3351)
!3373 = !DILocation(line: 264, column: 40, scope: !3351)
!3374 = !DILocation(line: 264, column: 45, scope: !3351)
!3375 = !DILocation(line: 264, column: 50, scope: !3351)
!3376 = !DILocation(line: 264, column: 60, scope: !3351)
!3377 = !DILocation(line: 264, column: 5, scope: !3351)
!3378 = !DILocation(line: 266, column: 7, scope: !3379)
!3379 = distinct !DILexicalBlock(scope: !3351, file: !179, line: 266, column: 7)
!3380 = !DILocation(line: 266, column: 11, scope: !3379)
!3381 = !DILocation(line: 266, column: 15, scope: !3379)
!3382 = !DILocation(line: 266, column: 21, scope: !3379)
!3383 = !DILocation(line: 266, column: 24, scope: !3379)
!3384 = !DILocation(line: 266, column: 7, scope: !3351)
!3385 = !DILocalVariable(name: "dot", scope: !3386, file: !179, line: 274, type: !69)
!3386 = distinct !DILexicalBlock(scope: !3379, file: !179, line: 267, column: 5)
!3387 = !DILocation(line: 274, column: 19, scope: !3386)
!3388 = !DILocation(line: 274, column: 33, scope: !3386)
!3389 = !DILocation(line: 274, column: 25, scope: !3386)
!3390 = !DILocation(line: 275, column: 11, scope: !3391)
!3391 = distinct !DILexicalBlock(scope: !3386, file: !179, line: 275, column: 11)
!3392 = !DILocation(line: 276, column: 11, scope: !3391)
!3393 = !DILocation(line: 276, column: 38, scope: !3391)
!3394 = !DILocation(line: 276, column: 44, scope: !3391)
!3395 = !DILocation(line: 276, column: 49, scope: !3391)
!3396 = !DILocation(line: 276, column: 54, scope: !3391)
!3397 = !DILocation(line: 276, column: 59, scope: !3391)
!3398 = !DILocation(line: 276, column: 69, scope: !3391)
!3399 = !DILocation(line: 276, column: 16, scope: !3391)
!3400 = !DILocation(line: 275, column: 11, scope: !3386)
!3401 = !DILocation(line: 277, column: 19, scope: !3391)
!3402 = !DILocation(line: 277, column: 9, scope: !3391)
!3403 = !DILocation(line: 278, column: 5, scope: !3386)
!3404 = !DILocation(line: 280, column: 10, scope: !3351)
!3405 = !DILocation(line: 280, column: 3, scope: !3351)
!3406 = !DILocalVariable(name: "spec", arg: 1, scope: !178, file: !179, line: 102, type: !69)
!3407 = !DILocation(line: 102, column: 35, scope: !178)
!3408 = !DILocalVariable(name: "separator", arg: 2, scope: !178, file: !179, line: 102, type: !69)
!3409 = !DILocation(line: 102, column: 53, scope: !178)
!3410 = !DILocalVariable(name: "uid", arg: 3, scope: !178, file: !179, line: 103, type: !182)
!3411 = !DILocation(line: 103, column: 30, scope: !178)
!3412 = !DILocalVariable(name: "gid", arg: 4, scope: !178, file: !179, line: 103, type: !183)
!3413 = !DILocation(line: 103, column: 42, scope: !178)
!3414 = !DILocalVariable(name: "username", arg: 5, scope: !178, file: !179, line: 104, type: !184)
!3415 = !DILocation(line: 104, column: 30, scope: !178)
!3416 = !DILocalVariable(name: "groupname", arg: 6, scope: !178, file: !179, line: 104, type: !184)
!3417 = !DILocation(line: 104, column: 47, scope: !178)
!3418 = !DILocalVariable(name: "error_msg", scope: !178, file: !179, line: 110, type: !69)
!3419 = !DILocation(line: 110, column: 15, scope: !178)
!3420 = !DILocalVariable(name: "pwd", scope: !178, file: !179, line: 111, type: !3421)
!3421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3422, size: 64)
!3422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "passwd", file: !601, line: 49, size: 384, elements: !3423)
!3423 = !{!3424, !3425, !3426, !3427, !3428, !3429, !3430}
!3424 = !DIDerivedType(tag: DW_TAG_member, name: "pw_name", scope: !3422, file: !601, line: 51, baseType: !6, size: 64)
!3425 = !DIDerivedType(tag: DW_TAG_member, name: "pw_passwd", scope: !3422, file: !601, line: 52, baseType: !6, size: 64, offset: 64)
!3426 = !DIDerivedType(tag: DW_TAG_member, name: "pw_uid", scope: !3422, file: !601, line: 54, baseType: !14, size: 32, offset: 128)
!3427 = !DIDerivedType(tag: DW_TAG_member, name: "pw_gid", scope: !3422, file: !601, line: 55, baseType: !22, size: 32, offset: 160)
!3428 = !DIDerivedType(tag: DW_TAG_member, name: "pw_gecos", scope: !3422, file: !601, line: 56, baseType: !6, size: 64, offset: 192)
!3429 = !DIDerivedType(tag: DW_TAG_member, name: "pw_dir", scope: !3422, file: !601, line: 57, baseType: !6, size: 64, offset: 256)
!3430 = !DIDerivedType(tag: DW_TAG_member, name: "pw_shell", scope: !3422, file: !601, line: 58, baseType: !6, size: 64, offset: 320)
!3431 = !DILocation(line: 111, column: 18, scope: !178)
!3432 = !DILocalVariable(name: "grp", scope: !178, file: !179, line: 112, type: !3433)
!3433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3434, size: 64)
!3434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group", file: !1066, line: 42, size: 256, elements: !3435)
!3435 = !{!3436, !3437, !3438, !3439}
!3436 = !DIDerivedType(tag: DW_TAG_member, name: "gr_name", scope: !3434, file: !1066, line: 44, baseType: !6, size: 64)
!3437 = !DIDerivedType(tag: DW_TAG_member, name: "gr_passwd", scope: !3434, file: !1066, line: 45, baseType: !6, size: 64, offset: 64)
!3438 = !DIDerivedType(tag: DW_TAG_member, name: "gr_gid", scope: !3434, file: !1066, line: 46, baseType: !22, size: 32, offset: 128)
!3439 = !DIDerivedType(tag: DW_TAG_member, name: "gr_mem", scope: !3434, file: !1066, line: 47, baseType: !184, size: 64, offset: 192)
!3440 = !DILocation(line: 112, column: 17, scope: !178)
!3441 = !DILocalVariable(name: "u", scope: !178, file: !179, line: 113, type: !6)
!3442 = !DILocation(line: 113, column: 9, scope: !178)
!3443 = !DILocalVariable(name: "g", scope: !178, file: !179, line: 114, type: !69)
!3444 = !DILocation(line: 114, column: 15, scope: !178)
!3445 = !DILocalVariable(name: "gname", scope: !178, file: !179, line: 115, type: !6)
!3446 = !DILocation(line: 115, column: 9, scope: !178)
!3447 = !DILocalVariable(name: "unum", scope: !178, file: !179, line: 116, type: !12)
!3448 = !DILocation(line: 116, column: 9, scope: !178)
!3449 = !DILocation(line: 116, column: 17, scope: !178)
!3450 = !DILocation(line: 116, column: 16, scope: !178)
!3451 = !DILocalVariable(name: "gnum", scope: !178, file: !179, line: 117, type: !21)
!3452 = !DILocation(line: 117, column: 9, scope: !178)
!3453 = !DILocation(line: 117, column: 16, scope: !178)
!3454 = !DILocation(line: 117, column: 23, scope: !178)
!3455 = !DILocation(line: 117, column: 22, scope: !178)
!3456 = !DILocation(line: 119, column: 13, scope: !178)
!3457 = !DILocation(line: 120, column: 7, scope: !3458)
!3458 = distinct !DILexicalBlock(scope: !178, file: !179, line: 120, column: 7)
!3459 = !DILocation(line: 120, column: 7, scope: !178)
!3460 = !DILocation(line: 121, column: 6, scope: !3458)
!3461 = !DILocation(line: 121, column: 15, scope: !3458)
!3462 = !DILocation(line: 121, column: 5, scope: !3458)
!3463 = !DILocation(line: 122, column: 7, scope: !3464)
!3464 = distinct !DILexicalBlock(scope: !178, file: !179, line: 122, column: 7)
!3465 = !DILocation(line: 122, column: 7, scope: !178)
!3466 = !DILocation(line: 123, column: 6, scope: !3464)
!3467 = !DILocation(line: 123, column: 16, scope: !3464)
!3468 = !DILocation(line: 123, column: 5, scope: !3464)
!3469 = !DILocation(line: 129, column: 5, scope: !178)
!3470 = !DILocation(line: 130, column: 7, scope: !3471)
!3471 = distinct !DILexicalBlock(scope: !178, file: !179, line: 130, column: 7)
!3472 = !DILocation(line: 130, column: 17, scope: !3471)
!3473 = !DILocation(line: 130, column: 7, scope: !178)
!3474 = !DILocation(line: 132, column: 12, scope: !3475)
!3475 = distinct !DILexicalBlock(scope: !3476, file: !179, line: 132, column: 11)
!3476 = distinct !DILexicalBlock(scope: !3471, file: !179, line: 131, column: 5)
!3477 = !DILocation(line: 132, column: 11, scope: !3475)
!3478 = !DILocation(line: 132, column: 11, scope: !3476)
!3479 = !DILocation(line: 133, column: 22, scope: !3475)
!3480 = !DILocation(line: 133, column: 13, scope: !3475)
!3481 = !DILocation(line: 133, column: 11, scope: !3475)
!3482 = !DILocation(line: 133, column: 9, scope: !3475)
!3483 = !DILocation(line: 134, column: 5, scope: !3476)
!3484 = !DILocalVariable(name: "ulen", scope: !3485, file: !179, line: 137, type: !134)
!3485 = distinct !DILexicalBlock(scope: !3471, file: !179, line: 136, column: 5)
!3486 = !DILocation(line: 137, column: 14, scope: !3485)
!3487 = !DILocation(line: 137, column: 21, scope: !3485)
!3488 = !DILocation(line: 137, column: 33, scope: !3485)
!3489 = !DILocation(line: 137, column: 31, scope: !3485)
!3490 = !DILocation(line: 138, column: 11, scope: !3491)
!3491 = distinct !DILexicalBlock(scope: !3485, file: !179, line: 138, column: 11)
!3492 = !DILocation(line: 138, column: 16, scope: !3491)
!3493 = !DILocation(line: 138, column: 11, scope: !3485)
!3494 = !DILocation(line: 140, column: 24, scope: !3495)
!3495 = distinct !DILexicalBlock(scope: !3491, file: !179, line: 139, column: 9)
!3496 = !DILocation(line: 140, column: 30, scope: !3495)
!3497 = !DILocation(line: 140, column: 35, scope: !3495)
!3498 = !DILocation(line: 140, column: 15, scope: !3495)
!3499 = !DILocation(line: 140, column: 13, scope: !3495)
!3500 = !DILocation(line: 141, column: 11, scope: !3495)
!3501 = !DILocation(line: 141, column: 13, scope: !3495)
!3502 = !DILocation(line: 141, column: 19, scope: !3495)
!3503 = !DILocation(line: 142, column: 9, scope: !3495)
!3504 = !DILocation(line: 145, column: 8, scope: !178)
!3505 = !DILocation(line: 145, column: 18, scope: !178)
!3506 = !DILocation(line: 145, column: 26, scope: !178)
!3507 = !DILocation(line: 145, column: 31, scope: !178)
!3508 = !DILocation(line: 145, column: 41, scope: !178)
!3509 = !DILocation(line: 145, column: 29, scope: !178)
!3510 = !DILocation(line: 145, column: 46, scope: !178)
!3511 = !DILocation(line: 147, column: 10, scope: !178)
!3512 = !DILocation(line: 147, column: 20, scope: !178)
!3513 = !DILocation(line: 145, column: 5, scope: !178)
!3514 = !DILocation(line: 158, column: 7, scope: !3515)
!3515 = distinct !DILexicalBlock(scope: !178, file: !179, line: 158, column: 7)
!3516 = !DILocation(line: 158, column: 9, scope: !3515)
!3517 = !DILocation(line: 158, column: 7, scope: !178)
!3518 = !DILocation(line: 161, column: 15, scope: !3519)
!3519 = distinct !DILexicalBlock(scope: !3515, file: !179, line: 159, column: 5)
!3520 = !DILocation(line: 161, column: 14, scope: !3519)
!3521 = !DILocation(line: 161, column: 17, scope: !3519)
!3522 = !DILocation(line: 161, column: 43, scope: !3519)
!3523 = !DILocation(line: 161, column: 33, scope: !3519)
!3524 = !DILocation(line: 161, column: 11, scope: !3519)
!3525 = !DILocation(line: 162, column: 11, scope: !3526)
!3526 = distinct !DILexicalBlock(scope: !3519, file: !179, line: 162, column: 11)
!3527 = !DILocation(line: 162, column: 15, scope: !3526)
!3528 = !DILocation(line: 162, column: 11, scope: !3519)
!3529 = !DILocalVariable(name: "use_login_group", scope: !3530, file: !179, line: 164, type: !27)
!3530 = distinct !DILexicalBlock(scope: !3526, file: !179, line: 163, column: 9)
!3531 = !DILocation(line: 164, column: 16, scope: !3530)
!3532 = !DILocation(line: 164, column: 35, scope: !3530)
!3533 = !DILocation(line: 164, column: 45, scope: !3530)
!3534 = !DILocation(line: 164, column: 53, scope: !3530)
!3535 = !DILocation(line: 164, column: 56, scope: !3530)
!3536 = !DILocation(line: 164, column: 58, scope: !3530)
!3537 = !DILocation(line: 0, scope: !3530)
!3538 = !DILocation(line: 165, column: 15, scope: !3539)
!3539 = distinct !DILexicalBlock(scope: !3530, file: !179, line: 165, column: 15)
!3540 = !DILocation(line: 165, column: 15, scope: !3530)
!3541 = !DILocation(line: 169, column: 27, scope: !3542)
!3542 = distinct !DILexicalBlock(scope: !3539, file: !179, line: 166, column: 13)
!3543 = !DILocation(line: 169, column: 25, scope: !3542)
!3544 = !DILocation(line: 170, column: 13, scope: !3542)
!3545 = !DILocalVariable(name: "tmp", scope: !3546, file: !179, line: 173, type: !84)
!3546 = distinct !DILexicalBlock(scope: !3539, file: !179, line: 172, column: 13)
!3547 = !DILocation(line: 173, column: 33, scope: !3546)
!3548 = !DILocation(line: 174, column: 29, scope: !3549)
!3549 = distinct !DILexicalBlock(scope: !3546, file: !179, line: 174, column: 19)
!3550 = !DILocation(line: 174, column: 19, scope: !3549)
!3551 = !DILocation(line: 174, column: 52, scope: !3549)
!3552 = !DILocation(line: 175, column: 19, scope: !3549)
!3553 = !DILocation(line: 175, column: 22, scope: !3549)
!3554 = !DILocation(line: 175, column: 26, scope: !3549)
!3555 = !DILocation(line: 175, column: 36, scope: !3549)
!3556 = !DILocation(line: 175, column: 47, scope: !3549)
!3557 = !DILocation(line: 175, column: 39, scope: !3549)
!3558 = !DILocation(line: 175, column: 51, scope: !3549)
!3559 = !DILocation(line: 174, column: 19, scope: !3546)
!3560 = !DILocation(line: 176, column: 24, scope: !3549)
!3561 = !DILocation(line: 176, column: 22, scope: !3549)
!3562 = !DILocation(line: 176, column: 17, scope: !3549)
!3563 = !DILocation(line: 178, column: 29, scope: !3549)
!3564 = !DILocation(line: 178, column: 27, scope: !3549)
!3565 = !DILocation(line: 180, column: 9, scope: !3530)
!3566 = !DILocation(line: 183, column: 18, scope: !3567)
!3567 = distinct !DILexicalBlock(scope: !3526, file: !179, line: 182, column: 9)
!3568 = !DILocation(line: 183, column: 23, scope: !3567)
!3569 = !DILocation(line: 183, column: 16, scope: !3567)
!3570 = !DILocation(line: 184, column: 15, scope: !3571)
!3571 = distinct !DILexicalBlock(scope: !3567, file: !179, line: 184, column: 15)
!3572 = !DILocation(line: 184, column: 17, scope: !3571)
!3573 = !DILocation(line: 184, column: 25, scope: !3571)
!3574 = !DILocation(line: 184, column: 28, scope: !3571)
!3575 = !DILocation(line: 184, column: 38, scope: !3571)
!3576 = !DILocation(line: 184, column: 15, scope: !3567)
!3577 = !DILocalVariable(name: "buf", scope: !3578, file: !179, line: 188, type: !53)
!3578 = distinct !DILexicalBlock(scope: !3571, file: !179, line: 185, column: 13)
!3579 = !DILocation(line: 188, column: 20, scope: !3578)
!3580 = !DILocation(line: 189, column: 22, scope: !3578)
!3581 = !DILocation(line: 189, column: 27, scope: !3578)
!3582 = !DILocation(line: 189, column: 20, scope: !3578)
!3583 = !DILocation(line: 190, column: 31, scope: !3578)
!3584 = !DILocation(line: 190, column: 21, scope: !3578)
!3585 = !DILocation(line: 190, column: 19, scope: !3578)
!3586 = !DILocation(line: 191, column: 32, scope: !3578)
!3587 = !DILocation(line: 191, column: 38, scope: !3578)
!3588 = !DILocation(line: 191, column: 43, scope: !3578)
!3589 = !DILocation(line: 191, column: 64, scope: !3578)
!3590 = !DILocation(line: 191, column: 70, scope: !3578)
!3591 = !DILocation(line: 191, column: 53, scope: !3578)
!3592 = !DILocation(line: 191, column: 23, scope: !3578)
!3593 = !DILocation(line: 191, column: 21, scope: !3578)
!3594 = !DILocation(line: 192, column: 15, scope: !3578)
!3595 = !DILocation(line: 193, column: 13, scope: !3578)
!3596 = !DILocation(line: 195, column: 7, scope: !3519)
!3597 = !DILocation(line: 196, column: 5, scope: !3519)
!3598 = !DILocation(line: 198, column: 7, scope: !3599)
!3599 = distinct !DILexicalBlock(scope: !178, file: !179, line: 198, column: 7)
!3600 = !DILocation(line: 198, column: 9, scope: !3599)
!3601 = !DILocation(line: 198, column: 17, scope: !3599)
!3602 = !DILocation(line: 198, column: 20, scope: !3599)
!3603 = !DILocation(line: 198, column: 30, scope: !3599)
!3604 = !DILocation(line: 198, column: 7, scope: !178)
!3605 = !DILocation(line: 202, column: 15, scope: !3606)
!3606 = distinct !DILexicalBlock(scope: !3599, file: !179, line: 199, column: 5)
!3607 = !DILocation(line: 202, column: 14, scope: !3606)
!3608 = !DILocation(line: 202, column: 17, scope: !3606)
!3609 = !DILocation(line: 202, column: 43, scope: !3606)
!3610 = !DILocation(line: 202, column: 33, scope: !3606)
!3611 = !DILocation(line: 202, column: 11, scope: !3606)
!3612 = !DILocation(line: 203, column: 11, scope: !3613)
!3613 = distinct !DILexicalBlock(scope: !3606, file: !179, line: 203, column: 11)
!3614 = !DILocation(line: 203, column: 15, scope: !3613)
!3615 = !DILocation(line: 203, column: 11, scope: !3606)
!3616 = !DILocalVariable(name: "tmp", scope: !3617, file: !179, line: 205, type: !84)
!3617 = distinct !DILexicalBlock(scope: !3613, file: !179, line: 204, column: 9)
!3618 = !DILocation(line: 205, column: 29, scope: !3617)
!3619 = !DILocation(line: 206, column: 25, scope: !3620)
!3620 = distinct !DILexicalBlock(scope: !3617, file: !179, line: 206, column: 15)
!3621 = !DILocation(line: 206, column: 15, scope: !3620)
!3622 = !DILocation(line: 206, column: 48, scope: !3620)
!3623 = !DILocation(line: 207, column: 15, scope: !3620)
!3624 = !DILocation(line: 207, column: 18, scope: !3620)
!3625 = !DILocation(line: 207, column: 22, scope: !3620)
!3626 = !DILocation(line: 207, column: 32, scope: !3620)
!3627 = !DILocation(line: 207, column: 43, scope: !3620)
!3628 = !DILocation(line: 207, column: 35, scope: !3620)
!3629 = !DILocation(line: 207, column: 47, scope: !3620)
!3630 = !DILocation(line: 206, column: 15, scope: !3617)
!3631 = !DILocation(line: 208, column: 20, scope: !3620)
!3632 = !DILocation(line: 208, column: 18, scope: !3620)
!3633 = !DILocation(line: 208, column: 13, scope: !3620)
!3634 = !DILocation(line: 210, column: 25, scope: !3620)
!3635 = !DILocation(line: 210, column: 23, scope: !3620)
!3636 = !DILocation(line: 211, column: 9, scope: !3617)
!3637 = !DILocation(line: 213, column: 16, scope: !3613)
!3638 = !DILocation(line: 213, column: 21, scope: !3613)
!3639 = !DILocation(line: 213, column: 14, scope: !3613)
!3640 = !DILocation(line: 214, column: 7, scope: !3606)
!3641 = !DILocation(line: 215, column: 24, scope: !3606)
!3642 = !DILocation(line: 215, column: 15, scope: !3606)
!3643 = !DILocation(line: 215, column: 13, scope: !3606)
!3644 = !DILocation(line: 216, column: 5, scope: !3606)
!3645 = !DILocation(line: 218, column: 7, scope: !3646)
!3646 = distinct !DILexicalBlock(scope: !178, file: !179, line: 218, column: 7)
!3647 = !DILocation(line: 218, column: 17, scope: !3646)
!3648 = !DILocation(line: 218, column: 7, scope: !178)
!3649 = !DILocation(line: 220, column: 14, scope: !3650)
!3650 = distinct !DILexicalBlock(scope: !3646, file: !179, line: 219, column: 5)
!3651 = !DILocation(line: 220, column: 8, scope: !3650)
!3652 = !DILocation(line: 220, column: 12, scope: !3650)
!3653 = !DILocation(line: 221, column: 11, scope: !3654)
!3654 = distinct !DILexicalBlock(scope: !3650, file: !179, line: 221, column: 11)
!3655 = !DILocation(line: 221, column: 11, scope: !3650)
!3656 = !DILocation(line: 222, column: 16, scope: !3654)
!3657 = !DILocation(line: 222, column: 10, scope: !3654)
!3658 = !DILocation(line: 222, column: 14, scope: !3654)
!3659 = !DILocation(line: 222, column: 9, scope: !3654)
!3660 = !DILocation(line: 223, column: 11, scope: !3661)
!3661 = distinct !DILexicalBlock(scope: !3650, file: !179, line: 223, column: 11)
!3662 = !DILocation(line: 223, column: 11, scope: !3650)
!3663 = !DILocation(line: 225, column: 23, scope: !3664)
!3664 = distinct !DILexicalBlock(scope: !3661, file: !179, line: 224, column: 9)
!3665 = !DILocation(line: 225, column: 12, scope: !3664)
!3666 = !DILocation(line: 225, column: 21, scope: !3664)
!3667 = !DILocation(line: 226, column: 13, scope: !3664)
!3668 = !DILocation(line: 227, column: 9, scope: !3664)
!3669 = !DILocation(line: 228, column: 11, scope: !3670)
!3670 = distinct !DILexicalBlock(scope: !3650, file: !179, line: 228, column: 11)
!3671 = !DILocation(line: 228, column: 11, scope: !3650)
!3672 = !DILocation(line: 230, column: 24, scope: !3673)
!3673 = distinct !DILexicalBlock(scope: !3670, file: !179, line: 229, column: 9)
!3674 = !DILocation(line: 230, column: 12, scope: !3673)
!3675 = !DILocation(line: 230, column: 22, scope: !3673)
!3676 = !DILocation(line: 231, column: 17, scope: !3673)
!3677 = !DILocation(line: 232, column: 9, scope: !3673)
!3678 = !DILocation(line: 233, column: 5, scope: !3650)
!3679 = !DILocation(line: 235, column: 9, scope: !178)
!3680 = !DILocation(line: 235, column: 3, scope: !178)
!3681 = !DILocation(line: 236, column: 9, scope: !178)
!3682 = !DILocation(line: 236, column: 3, scope: !178)
!3683 = !DILocation(line: 237, column: 10, scope: !178)
!3684 = !DILocation(line: 237, column: 22, scope: !178)
!3685 = !DILocation(line: 237, column: 3, scope: !178)
!3686 = !DILocalVariable(name: "spec", arg: 1, scope: !3687, file: !179, line: 102, type: !69)
!3687 = distinct !DISubprogram(name: "parse_with_separator", scope: !179, file: !179, line: 102, type: !180, scopeLine: 105, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3688, retainedNodes: !4)
!3688 = distinct !DICompileUnit(language: DW_LANG_C99, file: !186, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !187, globals: !3689, nameTableKind: None)
!3689 = !{!3690, !3692, !3694}
!3690 = !DIGlobalVariableExpression(var: !3691, expr: !DIExpression())
!3691 = distinct !DIGlobalVariable(name: "E_invalid_user", scope: !3687, file: !179, line: 106, type: !69, isLocal: true, isDefinition: true)
!3692 = !DIGlobalVariableExpression(var: !3693, expr: !DIExpression())
!3693 = distinct !DIGlobalVariable(name: "E_invalid_group", scope: !3687, file: !179, line: 107, type: !69, isLocal: true, isDefinition: true)
!3694 = !DIGlobalVariableExpression(var: !3695, expr: !DIExpression())
!3695 = distinct !DIGlobalVariable(name: "E_bad_spec", scope: !3687, file: !179, line: 108, type: !69, isLocal: true, isDefinition: true)
!3696 = !DILocalVariable(name: "separator", arg: 2, scope: !3687, file: !179, line: 102, type: !69)
!3697 = !DILocalVariable(name: "uid", arg: 3, scope: !3687, file: !179, line: 103, type: !182)
!3698 = !DILocalVariable(name: "gid", arg: 4, scope: !3687, file: !179, line: 103, type: !183)
!3699 = !DILocalVariable(name: "username", arg: 5, scope: !3687, file: !179, line: 104, type: !184)
!3700 = !DILocalVariable(name: "groupname", arg: 6, scope: !3687, file: !179, line: 104, type: !184)
!3701 = !DILocalVariable(name: "error_msg", scope: !3687, file: !179, line: 110, type: !69)
!3702 = !DILocalVariable(name: "pwd", scope: !3687, file: !179, line: 111, type: !3703)
!3703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3704, size: 64)
!3704 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "passwd", file: !601, line: 49, size: 384, elements: !3705)
!3705 = !{!3706, !3707, !3708, !3709, !3710, !3711, !3712}
!3706 = !DIDerivedType(tag: DW_TAG_member, name: "pw_name", scope: !3704, file: !601, line: 51, baseType: !6, size: 64)
!3707 = !DIDerivedType(tag: DW_TAG_member, name: "pw_passwd", scope: !3704, file: !601, line: 52, baseType: !6, size: 64, offset: 64)
!3708 = !DIDerivedType(tag: DW_TAG_member, name: "pw_uid", scope: !3704, file: !601, line: 54, baseType: !14, size: 32, offset: 128)
!3709 = !DIDerivedType(tag: DW_TAG_member, name: "pw_gid", scope: !3704, file: !601, line: 55, baseType: !22, size: 32, offset: 160)
!3710 = !DIDerivedType(tag: DW_TAG_member, name: "pw_gecos", scope: !3704, file: !601, line: 56, baseType: !6, size: 64, offset: 192)
!3711 = !DIDerivedType(tag: DW_TAG_member, name: "pw_dir", scope: !3704, file: !601, line: 57, baseType: !6, size: 64, offset: 256)
!3712 = !DIDerivedType(tag: DW_TAG_member, name: "pw_shell", scope: !3704, file: !601, line: 58, baseType: !6, size: 64, offset: 320)
!3713 = !DILocalVariable(name: "grp", scope: !3687, file: !179, line: 112, type: !3714)
!3714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3715, size: 64)
!3715 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group", file: !1066, line: 42, size: 256, elements: !3716)
!3716 = !{!3717, !3718, !3719, !3720}
!3717 = !DIDerivedType(tag: DW_TAG_member, name: "gr_name", scope: !3715, file: !1066, line: 44, baseType: !6, size: 64)
!3718 = !DIDerivedType(tag: DW_TAG_member, name: "gr_passwd", scope: !3715, file: !1066, line: 45, baseType: !6, size: 64, offset: 64)
!3719 = !DIDerivedType(tag: DW_TAG_member, name: "gr_gid", scope: !3715, file: !1066, line: 46, baseType: !22, size: 32, offset: 128)
!3720 = !DIDerivedType(tag: DW_TAG_member, name: "gr_mem", scope: !3715, file: !1066, line: 47, baseType: !184, size: 64, offset: 192)
!3721 = !DILocalVariable(name: "u", scope: !3687, file: !179, line: 113, type: !6)
!3722 = !DILocalVariable(name: "g", scope: !3687, file: !179, line: 114, type: !69)
!3723 = !DILocalVariable(name: "gname", scope: !3687, file: !179, line: 115, type: !6)
!3724 = !DILocalVariable(name: "unum", scope: !3687, file: !179, line: 116, type: !12)
!3725 = !DILocalVariable(name: "gnum", scope: !3687, file: !179, line: 117, type: !21)
!3726 = distinct !DISubprogram(name: "version_etc_arn", scope: !3727, file: !3727, line: 61, type: !3728, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !210, retainedNodes: !4)
!3727 = !DIFile(filename: "lib/version-etc.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!3728 = !DISubroutineType(types: !3729)
!3729 = !{null, !3730, !69, !69, !69, !3783, !134}
!3730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3731, size: 64)
!3731 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !3732, line: 7, baseType: !3733)
!3732 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "")
!3733 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !3734, line: 49, size: 1728, elements: !3735)
!3734 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "")
!3735 = !{!3736, !3737, !3738, !3739, !3740, !3741, !3742, !3743, !3744, !3745, !3746, !3747, !3748, !3751, !3753, !3754, !3755, !3757, !3758, !3760, !3764, !3767, !3769, !3772, !3775, !3776, !3777, !3778, !3779}
!3736 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !3733, file: !3734, line: 51, baseType: !72, size: 32)
!3737 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !3733, file: !3734, line: 54, baseType: !6, size: 64, offset: 64)
!3738 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !3733, file: !3734, line: 55, baseType: !6, size: 64, offset: 128)
!3739 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !3733, file: !3734, line: 56, baseType: !6, size: 64, offset: 192)
!3740 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !3733, file: !3734, line: 57, baseType: !6, size: 64, offset: 256)
!3741 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !3733, file: !3734, line: 58, baseType: !6, size: 64, offset: 320)
!3742 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !3733, file: !3734, line: 59, baseType: !6, size: 64, offset: 384)
!3743 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !3733, file: !3734, line: 60, baseType: !6, size: 64, offset: 448)
!3744 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !3733, file: !3734, line: 61, baseType: !6, size: 64, offset: 512)
!3745 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !3733, file: !3734, line: 64, baseType: !6, size: 64, offset: 576)
!3746 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !3733, file: !3734, line: 65, baseType: !6, size: 64, offset: 640)
!3747 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !3733, file: !3734, line: 66, baseType: !6, size: 64, offset: 704)
!3748 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !3733, file: !3734, line: 68, baseType: !3749, size: 64, offset: 768)
!3749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3750, size: 64)
!3750 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !3734, line: 36, flags: DIFlagFwdDecl)
!3751 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !3733, file: !3734, line: 70, baseType: !3752, size: 64, offset: 832)
!3752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3733, size: 64)
!3753 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !3733, file: !3734, line: 72, baseType: !72, size: 32, offset: 896)
!3754 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !3733, file: !3734, line: 73, baseType: !72, size: 32, offset: 928)
!3755 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !3733, file: !3734, line: 74, baseType: !3756, size: 64, offset: 960)
!3756 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !15, line: 152, baseType: !873)
!3757 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !3733, file: !3734, line: 77, baseType: !133, size: 16, offset: 1024)
!3758 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !3733, file: !3734, line: 78, baseType: !3759, size: 8, offset: 1040)
!3759 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!3760 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !3733, file: !3734, line: 79, baseType: !3761, size: 8, offset: 1048)
!3761 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 8, elements: !3762)
!3762 = !{!3763}
!3763 = !DISubrange(count: 1)
!3764 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !3733, file: !3734, line: 81, baseType: !3765, size: 64, offset: 1088)
!3765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3766, size: 64)
!3766 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !3734, line: 43, baseType: null)
!3767 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !3733, file: !3734, line: 89, baseType: !3768, size: 64, offset: 1152)
!3768 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !15, line: 153, baseType: !873)
!3769 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !3733, file: !3734, line: 91, baseType: !3770, size: 64, offset: 1216)
!3770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3771, size: 64)
!3771 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !3734, line: 37, flags: DIFlagFwdDecl)
!3772 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !3733, file: !3734, line: 92, baseType: !3773, size: 64, offset: 1280)
!3773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3774, size: 64)
!3774 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !3734, line: 38, flags: DIFlagFwdDecl)
!3775 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !3733, file: !3734, line: 93, baseType: !3752, size: 64, offset: 1344)
!3776 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !3733, file: !3734, line: 94, baseType: !8, size: 64, offset: 1408)
!3777 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !3733, file: !3734, line: 95, baseType: !134, size: 64, offset: 1472)
!3778 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !3733, file: !3734, line: 96, baseType: !72, size: 32, offset: 1536)
!3779 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !3733, file: !3734, line: 98, baseType: !3780, size: 160, offset: 1568)
!3780 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 160, elements: !3781)
!3781 = !{!3782}
!3782 = !DISubrange(count: 20)
!3783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !141, size: 64)
!3784 = !DILocalVariable(name: "stream", arg: 1, scope: !3726, file: !3727, line: 61, type: !3730)
!3785 = !DILocation(line: 61, column: 24, scope: !3726)
!3786 = !DILocalVariable(name: "command_name", arg: 2, scope: !3726, file: !3727, line: 62, type: !69)
!3787 = !DILocation(line: 62, column: 30, scope: !3726)
!3788 = !DILocalVariable(name: "package", arg: 3, scope: !3726, file: !3727, line: 62, type: !69)
!3789 = !DILocation(line: 62, column: 56, scope: !3726)
!3790 = !DILocalVariable(name: "version", arg: 4, scope: !3726, file: !3727, line: 63, type: !69)
!3791 = !DILocation(line: 63, column: 30, scope: !3726)
!3792 = !DILocalVariable(name: "authors", arg: 5, scope: !3726, file: !3727, line: 64, type: !3783)
!3793 = !DILocation(line: 64, column: 39, scope: !3726)
!3794 = !DILocalVariable(name: "n_authors", arg: 6, scope: !3726, file: !3727, line: 64, type: !134)
!3795 = !DILocation(line: 64, column: 55, scope: !3726)
!3796 = !DILocation(line: 66, column: 7, scope: !3797)
!3797 = distinct !DILexicalBlock(scope: !3726, file: !3727, line: 66, column: 7)
!3798 = !DILocation(line: 66, column: 7, scope: !3726)
!3799 = !DILocation(line: 67, column: 14, scope: !3797)
!3800 = !DILocation(line: 67, column: 38, scope: !3797)
!3801 = !DILocation(line: 67, column: 52, scope: !3797)
!3802 = !DILocation(line: 67, column: 61, scope: !3797)
!3803 = !DILocation(line: 67, column: 5, scope: !3797)
!3804 = !DILocation(line: 69, column: 14, scope: !3797)
!3805 = !DILocation(line: 69, column: 33, scope: !3797)
!3806 = !DILocation(line: 69, column: 42, scope: !3797)
!3807 = !DILocation(line: 69, column: 5, scope: !3797)
!3808 = !DILocation(line: 83, column: 12, scope: !3726)
!3809 = !DILocation(line: 83, column: 43, scope: !3726)
!3810 = !DILocation(line: 83, column: 3, scope: !3726)
!3811 = !DILocation(line: 85, column: 3, scope: !3726)
!3812 = !DILocation(line: 88, column: 12, scope: !3726)
!3813 = !DILocation(line: 88, column: 20, scope: !3726)
!3814 = !DILocation(line: 88, column: 3, scope: !3726)
!3815 = !DILocation(line: 95, column: 3, scope: !3726)
!3816 = !DILocation(line: 97, column: 11, scope: !3726)
!3817 = !DILocation(line: 97, column: 3, scope: !3726)
!3818 = !DILocation(line: 102, column: 7, scope: !3819)
!3819 = distinct !DILexicalBlock(scope: !3726, file: !3727, line: 98, column: 5)
!3820 = !DILocation(line: 105, column: 16, scope: !3819)
!3821 = !DILocation(line: 105, column: 24, scope: !3819)
!3822 = !DILocation(line: 105, column: 47, scope: !3819)
!3823 = !DILocation(line: 105, column: 7, scope: !3819)
!3824 = !DILocation(line: 106, column: 7, scope: !3819)
!3825 = !DILocation(line: 109, column: 16, scope: !3819)
!3826 = !DILocation(line: 109, column: 24, scope: !3819)
!3827 = !DILocation(line: 109, column: 54, scope: !3819)
!3828 = !DILocation(line: 109, column: 66, scope: !3819)
!3829 = !DILocation(line: 109, column: 7, scope: !3819)
!3830 = !DILocation(line: 110, column: 7, scope: !3819)
!3831 = !DILocation(line: 113, column: 16, scope: !3819)
!3832 = !DILocation(line: 113, column: 24, scope: !3819)
!3833 = !DILocation(line: 114, column: 16, scope: !3819)
!3834 = !DILocation(line: 114, column: 28, scope: !3819)
!3835 = !DILocation(line: 114, column: 40, scope: !3819)
!3836 = !DILocation(line: 113, column: 7, scope: !3819)
!3837 = !DILocation(line: 115, column: 7, scope: !3819)
!3838 = !DILocation(line: 120, column: 16, scope: !3819)
!3839 = !DILocation(line: 120, column: 24, scope: !3819)
!3840 = !DILocation(line: 121, column: 16, scope: !3819)
!3841 = !DILocation(line: 121, column: 28, scope: !3819)
!3842 = !DILocation(line: 121, column: 40, scope: !3819)
!3843 = !DILocation(line: 121, column: 52, scope: !3819)
!3844 = !DILocation(line: 120, column: 7, scope: !3819)
!3845 = !DILocation(line: 122, column: 7, scope: !3819)
!3846 = !DILocation(line: 127, column: 16, scope: !3819)
!3847 = !DILocation(line: 127, column: 24, scope: !3819)
!3848 = !DILocation(line: 128, column: 16, scope: !3819)
!3849 = !DILocation(line: 128, column: 28, scope: !3819)
!3850 = !DILocation(line: 128, column: 40, scope: !3819)
!3851 = !DILocation(line: 128, column: 52, scope: !3819)
!3852 = !DILocation(line: 128, column: 64, scope: !3819)
!3853 = !DILocation(line: 127, column: 7, scope: !3819)
!3854 = !DILocation(line: 129, column: 7, scope: !3819)
!3855 = !DILocation(line: 134, column: 16, scope: !3819)
!3856 = !DILocation(line: 134, column: 24, scope: !3819)
!3857 = !DILocation(line: 135, column: 16, scope: !3819)
!3858 = !DILocation(line: 135, column: 28, scope: !3819)
!3859 = !DILocation(line: 135, column: 40, scope: !3819)
!3860 = !DILocation(line: 135, column: 52, scope: !3819)
!3861 = !DILocation(line: 135, column: 64, scope: !3819)
!3862 = !DILocation(line: 136, column: 16, scope: !3819)
!3863 = !DILocation(line: 134, column: 7, scope: !3819)
!3864 = !DILocation(line: 137, column: 7, scope: !3819)
!3865 = !DILocation(line: 142, column: 16, scope: !3819)
!3866 = !DILocation(line: 142, column: 24, scope: !3819)
!3867 = !DILocation(line: 143, column: 16, scope: !3819)
!3868 = !DILocation(line: 143, column: 28, scope: !3819)
!3869 = !DILocation(line: 143, column: 40, scope: !3819)
!3870 = !DILocation(line: 143, column: 52, scope: !3819)
!3871 = !DILocation(line: 143, column: 64, scope: !3819)
!3872 = !DILocation(line: 144, column: 16, scope: !3819)
!3873 = !DILocation(line: 144, column: 28, scope: !3819)
!3874 = !DILocation(line: 142, column: 7, scope: !3819)
!3875 = !DILocation(line: 145, column: 7, scope: !3819)
!3876 = !DILocation(line: 150, column: 16, scope: !3819)
!3877 = !DILocation(line: 150, column: 24, scope: !3819)
!3878 = !DILocation(line: 152, column: 17, scope: !3819)
!3879 = !DILocation(line: 152, column: 29, scope: !3819)
!3880 = !DILocation(line: 152, column: 41, scope: !3819)
!3881 = !DILocation(line: 152, column: 53, scope: !3819)
!3882 = !DILocation(line: 152, column: 65, scope: !3819)
!3883 = !DILocation(line: 153, column: 17, scope: !3819)
!3884 = !DILocation(line: 153, column: 29, scope: !3819)
!3885 = !DILocation(line: 153, column: 41, scope: !3819)
!3886 = !DILocation(line: 150, column: 7, scope: !3819)
!3887 = !DILocation(line: 154, column: 7, scope: !3819)
!3888 = !DILocation(line: 159, column: 16, scope: !3819)
!3889 = !DILocation(line: 159, column: 24, scope: !3819)
!3890 = !DILocation(line: 161, column: 16, scope: !3819)
!3891 = !DILocation(line: 161, column: 28, scope: !3819)
!3892 = !DILocation(line: 161, column: 40, scope: !3819)
!3893 = !DILocation(line: 161, column: 52, scope: !3819)
!3894 = !DILocation(line: 161, column: 64, scope: !3819)
!3895 = !DILocation(line: 162, column: 16, scope: !3819)
!3896 = !DILocation(line: 162, column: 28, scope: !3819)
!3897 = !DILocation(line: 162, column: 40, scope: !3819)
!3898 = !DILocation(line: 162, column: 52, scope: !3819)
!3899 = !DILocation(line: 159, column: 7, scope: !3819)
!3900 = !DILocation(line: 163, column: 7, scope: !3819)
!3901 = !DILocation(line: 170, column: 16, scope: !3819)
!3902 = !DILocation(line: 170, column: 24, scope: !3819)
!3903 = !DILocation(line: 172, column: 17, scope: !3819)
!3904 = !DILocation(line: 172, column: 29, scope: !3819)
!3905 = !DILocation(line: 172, column: 41, scope: !3819)
!3906 = !DILocation(line: 172, column: 53, scope: !3819)
!3907 = !DILocation(line: 172, column: 65, scope: !3819)
!3908 = !DILocation(line: 173, column: 17, scope: !3819)
!3909 = !DILocation(line: 173, column: 29, scope: !3819)
!3910 = !DILocation(line: 173, column: 41, scope: !3819)
!3911 = !DILocation(line: 173, column: 53, scope: !3819)
!3912 = !DILocation(line: 170, column: 7, scope: !3819)
!3913 = !DILocation(line: 174, column: 7, scope: !3819)
!3914 = !DILocation(line: 176, column: 1, scope: !3726)
!3915 = !DILocalVariable(name: "stream", arg: 1, scope: !3916, file: !3727, line: 61, type: !3919)
!3916 = distinct !DISubprogram(name: "version_etc_arn", scope: !3727, file: !3727, line: 61, type: !3917, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3953, retainedNodes: !4)
!3917 = !DISubroutineType(types: !3918)
!3918 = !{null, !3919, !69, !69, !69, !3783, !134}
!3919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3920, size: 64)
!3920 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !3732, line: 7, baseType: !3921)
!3921 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !3734, line: 49, size: 1728, elements: !3922)
!3922 = !{!3923, !3924, !3925, !3926, !3927, !3928, !3929, !3930, !3931, !3932, !3933, !3934, !3935, !3936, !3938, !3939, !3940, !3941, !3942, !3943, !3944, !3945, !3946, !3947, !3948, !3949, !3950, !3951, !3952}
!3923 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !3921, file: !3734, line: 51, baseType: !72, size: 32)
!3924 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !3921, file: !3734, line: 54, baseType: !6, size: 64, offset: 64)
!3925 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !3921, file: !3734, line: 55, baseType: !6, size: 64, offset: 128)
!3926 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !3921, file: !3734, line: 56, baseType: !6, size: 64, offset: 192)
!3927 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !3921, file: !3734, line: 57, baseType: !6, size: 64, offset: 256)
!3928 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !3921, file: !3734, line: 58, baseType: !6, size: 64, offset: 320)
!3929 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !3921, file: !3734, line: 59, baseType: !6, size: 64, offset: 384)
!3930 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !3921, file: !3734, line: 60, baseType: !6, size: 64, offset: 448)
!3931 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !3921, file: !3734, line: 61, baseType: !6, size: 64, offset: 512)
!3932 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !3921, file: !3734, line: 64, baseType: !6, size: 64, offset: 576)
!3933 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !3921, file: !3734, line: 65, baseType: !6, size: 64, offset: 640)
!3934 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !3921, file: !3734, line: 66, baseType: !6, size: 64, offset: 704)
!3935 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !3921, file: !3734, line: 68, baseType: !3749, size: 64, offset: 768)
!3936 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !3921, file: !3734, line: 70, baseType: !3937, size: 64, offset: 832)
!3937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3921, size: 64)
!3938 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !3921, file: !3734, line: 72, baseType: !72, size: 32, offset: 896)
!3939 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !3921, file: !3734, line: 73, baseType: !72, size: 32, offset: 928)
!3940 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !3921, file: !3734, line: 74, baseType: !3756, size: 64, offset: 960)
!3941 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !3921, file: !3734, line: 77, baseType: !133, size: 16, offset: 1024)
!3942 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !3921, file: !3734, line: 78, baseType: !3759, size: 8, offset: 1040)
!3943 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !3921, file: !3734, line: 79, baseType: !3761, size: 8, offset: 1048)
!3944 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !3921, file: !3734, line: 81, baseType: !3765, size: 64, offset: 1088)
!3945 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !3921, file: !3734, line: 89, baseType: !3768, size: 64, offset: 1152)
!3946 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !3921, file: !3734, line: 91, baseType: !3770, size: 64, offset: 1216)
!3947 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !3921, file: !3734, line: 92, baseType: !3773, size: 64, offset: 1280)
!3948 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !3921, file: !3734, line: 93, baseType: !3937, size: 64, offset: 1344)
!3949 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !3921, file: !3734, line: 94, baseType: !8, size: 64, offset: 1408)
!3950 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !3921, file: !3734, line: 95, baseType: !134, size: 64, offset: 1472)
!3951 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !3921, file: !3734, line: 96, baseType: !72, size: 32, offset: 1536)
!3952 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !3921, file: !3734, line: 98, baseType: !3780, size: 160, offset: 1568)
!3953 = distinct !DICompileUnit(language: DW_LANG_C99, file: !211, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !212, nameTableKind: None)
!3954 = !DILocalVariable(name: "command_name", arg: 2, scope: !3916, file: !3727, line: 62, type: !69)
!3955 = !DILocalVariable(name: "package", arg: 3, scope: !3916, file: !3727, line: 62, type: !69)
!3956 = !DILocalVariable(name: "version", arg: 4, scope: !3916, file: !3727, line: 63, type: !69)
!3957 = !DILocalVariable(name: "authors", arg: 5, scope: !3916, file: !3727, line: 64, type: !3783)
!3958 = !DILocalVariable(name: "n_authors", arg: 6, scope: !3916, file: !3727, line: 64, type: !134)
!3959 = distinct !DISubprogram(name: "version_etc_va", scope: !3727, file: !3727, line: 199, type: !3960, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !210, retainedNodes: !4)
!3960 = !DISubroutineType(types: !3961)
!3961 = !{null, !3730, !69, !69, !69, !3962}
!3962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3963, size: 64)
!3963 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !211, line: 192, size: 192, elements: !3964)
!3964 = !{!3965, !3966, !3967, !3968}
!3965 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !3963, file: !211, line: 192, baseType: !16, size: 32)
!3966 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !3963, file: !211, line: 192, baseType: !16, size: 32, offset: 32)
!3967 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !3963, file: !211, line: 192, baseType: !8, size: 64, offset: 64)
!3968 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !3963, file: !211, line: 192, baseType: !8, size: 64, offset: 128)
!3969 = !DILocalVariable(name: "stream", arg: 1, scope: !3959, file: !3727, line: 199, type: !3730)
!3970 = !DILocation(line: 199, column: 23, scope: !3959)
!3971 = !DILocalVariable(name: "command_name", arg: 2, scope: !3959, file: !3727, line: 200, type: !69)
!3972 = !DILocation(line: 200, column: 29, scope: !3959)
!3973 = !DILocalVariable(name: "package", arg: 3, scope: !3959, file: !3727, line: 200, type: !69)
!3974 = !DILocation(line: 200, column: 55, scope: !3959)
!3975 = !DILocalVariable(name: "version", arg: 4, scope: !3959, file: !3727, line: 201, type: !69)
!3976 = !DILocation(line: 201, column: 29, scope: !3959)
!3977 = !DILocalVariable(name: "authors", arg: 5, scope: !3959, file: !3727, line: 201, type: !3962)
!3978 = !DILocation(line: 201, column: 46, scope: !3959)
!3979 = !DILocalVariable(name: "n_authors", scope: !3959, file: !3727, line: 203, type: !134)
!3980 = !DILocation(line: 203, column: 10, scope: !3959)
!3981 = !DILocalVariable(name: "authtab", scope: !3959, file: !3727, line: 204, type: !3982)
!3982 = !DICompositeType(tag: DW_TAG_array_type, baseType: !69, size: 640, elements: !76)
!3983 = !DILocation(line: 204, column: 15, scope: !3959)
!3984 = !DILocation(line: 206, column: 18, scope: !3985)
!3985 = distinct !DILexicalBlock(scope: !3959, file: !3727, line: 206, column: 3)
!3986 = !DILocation(line: 206, column: 8, scope: !3985)
!3987 = !DILocation(line: 207, column: 8, scope: !3988)
!3988 = distinct !DILexicalBlock(scope: !3985, file: !3727, line: 206, column: 3)
!3989 = !DILocation(line: 207, column: 18, scope: !3988)
!3990 = !DILocation(line: 208, column: 10, scope: !3988)
!3991 = !DILocation(line: 208, column: 35, scope: !3988)
!3992 = !DILocation(line: 208, column: 22, scope: !3988)
!3993 = !DILocation(line: 208, column: 14, scope: !3988)
!3994 = !DILocation(line: 208, column: 33, scope: !3988)
!3995 = !DILocation(line: 208, column: 67, scope: !3988)
!3996 = !DILocation(line: 0, scope: !3988)
!3997 = !DILocation(line: 206, column: 3, scope: !3985)
!3998 = !DILocation(line: 209, column: 17, scope: !3988)
!3999 = !DILocation(line: 206, column: 3, scope: !3988)
!4000 = distinct !{!4000, !3997, !4001}
!4001 = !DILocation(line: 210, column: 5, scope: !3985)
!4002 = !DILocation(line: 211, column: 20, scope: !3959)
!4003 = !DILocation(line: 211, column: 28, scope: !3959)
!4004 = !DILocation(line: 211, column: 42, scope: !3959)
!4005 = !DILocation(line: 211, column: 51, scope: !3959)
!4006 = !DILocation(line: 212, column: 20, scope: !3959)
!4007 = !DILocation(line: 212, column: 29, scope: !3959)
!4008 = !DILocation(line: 211, column: 3, scope: !3959)
!4009 = !DILocation(line: 213, column: 1, scope: !3959)
!4010 = !DILocalVariable(name: "stream", arg: 1, scope: !4011, file: !3727, line: 199, type: !4014)
!4011 = distinct !DISubprogram(name: "version_etc_va", scope: !3727, file: !3727, line: 199, type: !4012, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !4055, retainedNodes: !4)
!4012 = !DISubroutineType(types: !4013)
!4013 = !{null, !4014, !69, !69, !69, !4048}
!4014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4015, size: 64)
!4015 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !3732, line: 7, baseType: !4016)
!4016 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !3734, line: 49, size: 1728, elements: !4017)
!4017 = !{!4018, !4019, !4020, !4021, !4022, !4023, !4024, !4025, !4026, !4027, !4028, !4029, !4030, !4031, !4033, !4034, !4035, !4036, !4037, !4038, !4039, !4040, !4041, !4042, !4043, !4044, !4045, !4046, !4047}
!4018 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !4016, file: !3734, line: 51, baseType: !72, size: 32)
!4019 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !4016, file: !3734, line: 54, baseType: !6, size: 64, offset: 64)
!4020 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !4016, file: !3734, line: 55, baseType: !6, size: 64, offset: 128)
!4021 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !4016, file: !3734, line: 56, baseType: !6, size: 64, offset: 192)
!4022 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !4016, file: !3734, line: 57, baseType: !6, size: 64, offset: 256)
!4023 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !4016, file: !3734, line: 58, baseType: !6, size: 64, offset: 320)
!4024 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !4016, file: !3734, line: 59, baseType: !6, size: 64, offset: 384)
!4025 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !4016, file: !3734, line: 60, baseType: !6, size: 64, offset: 448)
!4026 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !4016, file: !3734, line: 61, baseType: !6, size: 64, offset: 512)
!4027 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !4016, file: !3734, line: 64, baseType: !6, size: 64, offset: 576)
!4028 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !4016, file: !3734, line: 65, baseType: !6, size: 64, offset: 640)
!4029 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !4016, file: !3734, line: 66, baseType: !6, size: 64, offset: 704)
!4030 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !4016, file: !3734, line: 68, baseType: !3749, size: 64, offset: 768)
!4031 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !4016, file: !3734, line: 70, baseType: !4032, size: 64, offset: 832)
!4032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4016, size: 64)
!4033 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !4016, file: !3734, line: 72, baseType: !72, size: 32, offset: 896)
!4034 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !4016, file: !3734, line: 73, baseType: !72, size: 32, offset: 928)
!4035 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !4016, file: !3734, line: 74, baseType: !3756, size: 64, offset: 960)
!4036 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !4016, file: !3734, line: 77, baseType: !133, size: 16, offset: 1024)
!4037 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !4016, file: !3734, line: 78, baseType: !3759, size: 8, offset: 1040)
!4038 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !4016, file: !3734, line: 79, baseType: !3761, size: 8, offset: 1048)
!4039 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !4016, file: !3734, line: 81, baseType: !3765, size: 64, offset: 1088)
!4040 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !4016, file: !3734, line: 89, baseType: !3768, size: 64, offset: 1152)
!4041 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !4016, file: !3734, line: 91, baseType: !3770, size: 64, offset: 1216)
!4042 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !4016, file: !3734, line: 92, baseType: !3773, size: 64, offset: 1280)
!4043 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !4016, file: !3734, line: 93, baseType: !4032, size: 64, offset: 1344)
!4044 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !4016, file: !3734, line: 94, baseType: !8, size: 64, offset: 1408)
!4045 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !4016, file: !3734, line: 95, baseType: !134, size: 64, offset: 1472)
!4046 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !4016, file: !3734, line: 96, baseType: !72, size: 32, offset: 1536)
!4047 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !4016, file: !3734, line: 98, baseType: !3780, size: 160, offset: 1568)
!4048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4049, size: 64)
!4049 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !211, line: 192, size: 192, elements: !4050)
!4050 = !{!4051, !4052, !4053, !4054}
!4051 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !4049, file: !211, line: 192, baseType: !16, size: 32)
!4052 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !4049, file: !211, line: 192, baseType: !16, size: 32, offset: 32)
!4053 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !4049, file: !211, line: 192, baseType: !8, size: 64, offset: 64)
!4054 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !4049, file: !211, line: 192, baseType: !8, size: 64, offset: 128)
!4055 = distinct !DICompileUnit(language: DW_LANG_C99, file: !211, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !212, nameTableKind: None)
!4056 = !DILocalVariable(name: "command_name", arg: 2, scope: !4011, file: !3727, line: 200, type: !69)
!4057 = !DILocalVariable(name: "package", arg: 3, scope: !4011, file: !3727, line: 200, type: !69)
!4058 = !DILocalVariable(name: "version", arg: 4, scope: !4011, file: !3727, line: 201, type: !69)
!4059 = !DILocalVariable(name: "authors", arg: 5, scope: !4011, file: !3727, line: 201, type: !4048)
!4060 = !DILocalVariable(name: "n_authors", scope: !4011, file: !3727, line: 203, type: !134)
!4061 = !DILocalVariable(name: "authtab", scope: !4011, file: !3727, line: 204, type: !3982)
!4062 = distinct !DISubprogram(name: "version_etc", scope: !3727, file: !3727, line: 230, type: !4063, scopeLine: 233, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !210, retainedNodes: !4)
!4063 = !DISubroutineType(types: !4064)
!4064 = !{null, !3730, !69, !69, !69, null}
!4065 = !DILocalVariable(name: "stream", arg: 1, scope: !4062, file: !3727, line: 230, type: !3730)
!4066 = !DILocation(line: 230, column: 20, scope: !4062)
!4067 = !DILocalVariable(name: "command_name", arg: 2, scope: !4062, file: !3727, line: 231, type: !69)
!4068 = !DILocation(line: 231, column: 26, scope: !4062)
!4069 = !DILocalVariable(name: "package", arg: 3, scope: !4062, file: !3727, line: 231, type: !69)
!4070 = !DILocation(line: 231, column: 52, scope: !4062)
!4071 = !DILocalVariable(name: "version", arg: 4, scope: !4062, file: !3727, line: 232, type: !69)
!4072 = !DILocation(line: 232, column: 26, scope: !4062)
!4073 = !DILocalVariable(name: "authors", scope: !4062, file: !3727, line: 234, type: !4074)
!4074 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !871, line: 52, baseType: !4075)
!4075 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4076, line: 32, baseType: !4077)
!4076 = !DIFile(filename: "/usr/lib/llvm-9/lib/clang/9.0.1/include/stdarg.h", directory: "")
!4077 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !211, line: 234, baseType: !4078)
!4078 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3963, size: 192, elements: !3762)
!4079 = !DILocation(line: 234, column: 11, scope: !4062)
!4080 = !DILocation(line: 236, column: 3, scope: !4062)
!4081 = !DILocation(line: 237, column: 19, scope: !4062)
!4082 = !DILocation(line: 237, column: 27, scope: !4062)
!4083 = !DILocation(line: 237, column: 41, scope: !4062)
!4084 = !DILocation(line: 237, column: 50, scope: !4062)
!4085 = !DILocation(line: 237, column: 59, scope: !4062)
!4086 = !DILocation(line: 237, column: 3, scope: !4062)
!4087 = !DILocation(line: 238, column: 3, scope: !4062)
!4088 = !DILocation(line: 239, column: 1, scope: !4062)
!4089 = !DILocalVariable(name: "stream", arg: 1, scope: !4090, file: !3727, line: 230, type: !4093)
!4090 = distinct !DISubprogram(name: "version_etc", scope: !3727, file: !3727, line: 230, type: !4091, scopeLine: 233, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !4127, retainedNodes: !4)
!4091 = !DISubroutineType(types: !4092)
!4092 = !{null, !4093, !69, !69, !69, null}
!4093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4094, size: 64)
!4094 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !3732, line: 7, baseType: !4095)
!4095 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !3734, line: 49, size: 1728, elements: !4096)
!4096 = !{!4097, !4098, !4099, !4100, !4101, !4102, !4103, !4104, !4105, !4106, !4107, !4108, !4109, !4110, !4112, !4113, !4114, !4115, !4116, !4117, !4118, !4119, !4120, !4121, !4122, !4123, !4124, !4125, !4126}
!4097 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !4095, file: !3734, line: 51, baseType: !72, size: 32)
!4098 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !4095, file: !3734, line: 54, baseType: !6, size: 64, offset: 64)
!4099 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !4095, file: !3734, line: 55, baseType: !6, size: 64, offset: 128)
!4100 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !4095, file: !3734, line: 56, baseType: !6, size: 64, offset: 192)
!4101 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !4095, file: !3734, line: 57, baseType: !6, size: 64, offset: 256)
!4102 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !4095, file: !3734, line: 58, baseType: !6, size: 64, offset: 320)
!4103 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !4095, file: !3734, line: 59, baseType: !6, size: 64, offset: 384)
!4104 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !4095, file: !3734, line: 60, baseType: !6, size: 64, offset: 448)
!4105 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !4095, file: !3734, line: 61, baseType: !6, size: 64, offset: 512)
!4106 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !4095, file: !3734, line: 64, baseType: !6, size: 64, offset: 576)
!4107 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !4095, file: !3734, line: 65, baseType: !6, size: 64, offset: 640)
!4108 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !4095, file: !3734, line: 66, baseType: !6, size: 64, offset: 704)
!4109 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !4095, file: !3734, line: 68, baseType: !3749, size: 64, offset: 768)
!4110 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !4095, file: !3734, line: 70, baseType: !4111, size: 64, offset: 832)
!4111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4095, size: 64)
!4112 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !4095, file: !3734, line: 72, baseType: !72, size: 32, offset: 896)
!4113 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !4095, file: !3734, line: 73, baseType: !72, size: 32, offset: 928)
!4114 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !4095, file: !3734, line: 74, baseType: !3756, size: 64, offset: 960)
!4115 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !4095, file: !3734, line: 77, baseType: !133, size: 16, offset: 1024)
!4116 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !4095, file: !3734, line: 78, baseType: !3759, size: 8, offset: 1040)
!4117 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !4095, file: !3734, line: 79, baseType: !3761, size: 8, offset: 1048)
!4118 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !4095, file: !3734, line: 81, baseType: !3765, size: 64, offset: 1088)
!4119 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !4095, file: !3734, line: 89, baseType: !3768, size: 64, offset: 1152)
!4120 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !4095, file: !3734, line: 91, baseType: !3770, size: 64, offset: 1216)
!4121 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !4095, file: !3734, line: 92, baseType: !3773, size: 64, offset: 1280)
!4122 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !4095, file: !3734, line: 93, baseType: !4111, size: 64, offset: 1344)
!4123 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !4095, file: !3734, line: 94, baseType: !8, size: 64, offset: 1408)
!4124 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !4095, file: !3734, line: 95, baseType: !134, size: 64, offset: 1472)
!4125 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !4095, file: !3734, line: 96, baseType: !72, size: 32, offset: 1536)
!4126 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !4095, file: !3734, line: 98, baseType: !3780, size: 160, offset: 1568)
!4127 = distinct !DICompileUnit(language: DW_LANG_C99, file: !211, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !212, nameTableKind: None)
!4128 = !DILocalVariable(name: "command_name", arg: 2, scope: !4090, file: !3727, line: 231, type: !69)
!4129 = !DILocalVariable(name: "package", arg: 3, scope: !4090, file: !3727, line: 231, type: !69)
!4130 = !DILocalVariable(name: "version", arg: 4, scope: !4090, file: !3727, line: 232, type: !69)
!4131 = !DILocalVariable(name: "authors", scope: !4090, file: !3727, line: 234, type: !4132)
!4132 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !871, line: 52, baseType: !4133)
!4133 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4076, line: 32, baseType: !4134)
!4134 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !211, line: 234, baseType: !4135)
!4135 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4136, size: 192, elements: !3762)
!4136 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !211, line: 192, size: 192, elements: !4137)
!4137 = !{!4138, !4139, !4140, !4141}
!4138 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !4136, file: !211, line: 192, baseType: !16, size: 32)
!4139 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !4136, file: !211, line: 192, baseType: !16, size: 32, offset: 32)
!4140 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !4136, file: !211, line: 192, baseType: !8, size: 64, offset: 64)
!4141 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !4136, file: !211, line: 192, baseType: !8, size: 64, offset: 128)
!4142 = distinct !DISubprogram(name: "xmalloc", scope: !4143, file: !4143, line: 39, type: !4144, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !213, retainedNodes: !4)
!4143 = !DIFile(filename: "lib/xmalloc.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!4144 = !DISubroutineType(types: !4145)
!4145 = !{!8, !134}
!4146 = !DILocalVariable(name: "n", arg: 1, scope: !4142, file: !4143, line: 39, type: !134)
!4147 = !DILocation(line: 39, column: 17, scope: !4142)
!4148 = !DILocalVariable(name: "p", scope: !4142, file: !4143, line: 41, type: !8)
!4149 = !DILocation(line: 41, column: 9, scope: !4142)
!4150 = !DILocation(line: 41, column: 21, scope: !4142)
!4151 = !DILocation(line: 41, column: 13, scope: !4142)
!4152 = !DILocation(line: 42, column: 8, scope: !4153)
!4153 = distinct !DILexicalBlock(scope: !4142, file: !4143, line: 42, column: 7)
!4154 = !DILocation(line: 42, column: 10, scope: !4153)
!4155 = !DILocation(line: 42, column: 13, scope: !4153)
!4156 = !DILocation(line: 42, column: 15, scope: !4153)
!4157 = !DILocation(line: 42, column: 7, scope: !4142)
!4158 = !DILocation(line: 43, column: 5, scope: !4153)
!4159 = !DILocation(line: 44, column: 10, scope: !4142)
!4160 = !DILocation(line: 44, column: 3, scope: !4142)
!4161 = !DILocalVariable(name: "n", arg: 1, scope: !4162, file: !4143, line: 39, type: !134)
!4162 = distinct !DISubprogram(name: "xmalloc", scope: !4143, file: !4143, line: 39, type: !4144, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !4163, retainedNodes: !4)
!4163 = distinct !DICompileUnit(language: DW_LANG_C99, file: !214, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !215, nameTableKind: None)
!4164 = !DILocalVariable(name: "p", scope: !4162, file: !4143, line: 41, type: !8)
!4165 = distinct !DISubprogram(name: "xrealloc", scope: !4143, file: !4143, line: 51, type: !4166, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !213, retainedNodes: !4)
!4166 = !DISubroutineType(types: !4167)
!4167 = !{!8, !8, !134}
!4168 = !DILocalVariable(name: "p", arg: 1, scope: !4165, file: !4143, line: 51, type: !8)
!4169 = !DILocation(line: 51, column: 17, scope: !4165)
!4170 = !DILocalVariable(name: "n", arg: 2, scope: !4165, file: !4143, line: 51, type: !134)
!4171 = !DILocation(line: 51, column: 27, scope: !4165)
!4172 = !DILocation(line: 53, column: 8, scope: !4173)
!4173 = distinct !DILexicalBlock(scope: !4165, file: !4143, line: 53, column: 7)
!4174 = !DILocation(line: 53, column: 10, scope: !4173)
!4175 = !DILocation(line: 53, column: 13, scope: !4173)
!4176 = !DILocation(line: 53, column: 7, scope: !4165)
!4177 = !DILocation(line: 57, column: 13, scope: !4178)
!4178 = distinct !DILexicalBlock(scope: !4173, file: !4143, line: 54, column: 5)
!4179 = !DILocation(line: 57, column: 7, scope: !4178)
!4180 = !DILocation(line: 58, column: 7, scope: !4178)
!4181 = !DILocation(line: 61, column: 16, scope: !4165)
!4182 = !DILocation(line: 61, column: 19, scope: !4165)
!4183 = !DILocation(line: 61, column: 7, scope: !4165)
!4184 = !DILocation(line: 61, column: 5, scope: !4165)
!4185 = !DILocation(line: 62, column: 8, scope: !4186)
!4186 = distinct !DILexicalBlock(scope: !4165, file: !4143, line: 62, column: 7)
!4187 = !DILocation(line: 62, column: 10, scope: !4186)
!4188 = !DILocation(line: 62, column: 13, scope: !4186)
!4189 = !DILocation(line: 62, column: 7, scope: !4165)
!4190 = !DILocation(line: 63, column: 5, scope: !4186)
!4191 = !DILocation(line: 64, column: 10, scope: !4165)
!4192 = !DILocation(line: 64, column: 3, scope: !4165)
!4193 = !DILocation(line: 65, column: 1, scope: !4165)
!4194 = distinct !DISubprogram(name: "xcharalloc", scope: !4195, file: !4195, line: 216, type: !4196, scopeLine: 217, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !213, retainedNodes: !4)
!4195 = !DIFile(filename: "./lib/xalloc.h", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!4196 = !DISubroutineType(types: !4197)
!4197 = !{!6, !134}
!4198 = !DILocalVariable(name: "n", arg: 1, scope: !4194, file: !4195, line: 216, type: !134)
!4199 = !DILocation(line: 216, column: 20, scope: !4194)
!4200 = !DILocation(line: 218, column: 10, scope: !4194)
!4201 = !DILocation(line: 218, column: 3, scope: !4194)
!4202 = distinct !DISubprogram(name: "xmemdup", scope: !4143, file: !4143, line: 111, type: !4203, scopeLine: 112, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !213, retainedNodes: !4)
!4203 = !DISubroutineType(types: !4204)
!4204 = !{!8, !4205, !134}
!4205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4206, size: 64)
!4206 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!4207 = !DILocalVariable(name: "p", arg: 1, scope: !4202, file: !4143, line: 111, type: !4205)
!4208 = !DILocation(line: 111, column: 22, scope: !4202)
!4209 = !DILocalVariable(name: "s", arg: 2, scope: !4202, file: !4143, line: 111, type: !134)
!4210 = !DILocation(line: 111, column: 32, scope: !4202)
!4211 = !DILocation(line: 113, column: 27, scope: !4202)
!4212 = !DILocation(line: 113, column: 18, scope: !4202)
!4213 = !DILocation(line: 113, column: 31, scope: !4202)
!4214 = !DILocation(line: 113, column: 34, scope: !4202)
!4215 = !DILocation(line: 113, column: 10, scope: !4202)
!4216 = !DILocation(line: 113, column: 3, scope: !4202)
!4217 = !DILocalVariable(name: "p", arg: 1, scope: !4218, file: !4143, line: 111, type: !4205)
!4218 = distinct !DISubprogram(name: "xmemdup", scope: !4143, file: !4143, line: 111, type: !4203, scopeLine: 112, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !4219, retainedNodes: !4)
!4219 = distinct !DICompileUnit(language: DW_LANG_C99, file: !214, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !215, nameTableKind: None)
!4220 = !DILocalVariable(name: "s", arg: 2, scope: !4218, file: !4143, line: 111, type: !134)
!4221 = distinct !DISubprogram(name: "xstrdup", scope: !4143, file: !4143, line: 119, type: !3169, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !213, retainedNodes: !4)
!4222 = !DILocalVariable(name: "string", arg: 1, scope: !4221, file: !4143, line: 119, type: !69)
!4223 = !DILocation(line: 119, column: 22, scope: !4221)
!4224 = !DILocation(line: 121, column: 19, scope: !4221)
!4225 = !DILocation(line: 121, column: 35, scope: !4221)
!4226 = !DILocation(line: 121, column: 27, scope: !4221)
!4227 = !DILocation(line: 121, column: 43, scope: !4221)
!4228 = !DILocation(line: 121, column: 10, scope: !4221)
!4229 = !DILocation(line: 121, column: 3, scope: !4221)
!4230 = !DILocalVariable(name: "string", arg: 1, scope: !4231, file: !4143, line: 119, type: !69)
!4231 = distinct !DISubprogram(name: "xstrdup", scope: !4143, file: !4143, line: 119, type: !3169, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !4232, retainedNodes: !4)
!4232 = distinct !DICompileUnit(language: DW_LANG_C99, file: !214, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !215, nameTableKind: None)
!4233 = distinct !DISubprogram(name: "xalloc_die", scope: !4234, file: !4234, line: 32, type: !1627, scopeLine: 33, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !216, retainedNodes: !4)
!4234 = !DIFile(filename: "lib/xalloc-die.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!4235 = !DILocation(line: 34, column: 10, scope: !4233)
!4236 = !DILocation(line: 34, column: 33, scope: !4233)
!4237 = !DILocation(line: 34, column: 3, scope: !4233)
!4238 = !DILocation(line: 40, column: 3, scope: !4233)
!4239 = distinct !DISubprogram(name: "xgetgroups", scope: !4240, file: !4240, line: 31, type: !4241, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !218, retainedNodes: !4)
!4240 = !DIFile(filename: "lib/xgetgroups.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!4241 = !DISubroutineType(types: !4242)
!4242 = !{!72, !69, !21, !4243}
!4243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !183, size: 64)
!4244 = !DILocalVariable(name: "username", arg: 1, scope: !4239, file: !4240, line: 31, type: !69)
!4245 = !DILocation(line: 31, column: 25, scope: !4239)
!4246 = !DILocalVariable(name: "gid", arg: 2, scope: !4239, file: !4240, line: 31, type: !21)
!4247 = !DILocation(line: 31, column: 41, scope: !4239)
!4248 = !DILocalVariable(name: "groups", arg: 3, scope: !4239, file: !4240, line: 31, type: !4243)
!4249 = !DILocation(line: 31, column: 54, scope: !4239)
!4250 = !DILocalVariable(name: "result", scope: !4239, file: !4240, line: 33, type: !72)
!4251 = !DILocation(line: 33, column: 7, scope: !4239)
!4252 = !DILocation(line: 33, column: 28, scope: !4239)
!4253 = !DILocation(line: 33, column: 38, scope: !4239)
!4254 = !DILocation(line: 33, column: 43, scope: !4239)
!4255 = !DILocation(line: 33, column: 16, scope: !4239)
!4256 = !DILocation(line: 34, column: 7, scope: !4257)
!4257 = distinct !DILexicalBlock(scope: !4239, file: !4240, line: 34, column: 7)
!4258 = !DILocation(line: 34, column: 14, scope: !4257)
!4259 = !DILocation(line: 34, column: 20, scope: !4257)
!4260 = !DILocation(line: 34, column: 23, scope: !4257)
!4261 = !DILocation(line: 34, column: 29, scope: !4257)
!4262 = !DILocation(line: 34, column: 7, scope: !4239)
!4263 = !DILocation(line: 35, column: 5, scope: !4257)
!4264 = !DILocation(line: 36, column: 10, scope: !4239)
!4265 = !DILocation(line: 36, column: 3, scope: !4239)
!4266 = !DILocalVariable(name: "username", arg: 1, scope: !4267, file: !4240, line: 31, type: !69)
!4267 = distinct !DISubprogram(name: "xgetgroups", scope: !4240, file: !4240, line: 31, type: !4241, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !4268, retainedNodes: !4)
!4268 = distinct !DICompileUnit(language: DW_LANG_C99, file: !219, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, nameTableKind: None)
!4269 = !DILocalVariable(name: "gid", arg: 2, scope: !4267, file: !4240, line: 31, type: !21)
!4270 = !DILocalVariable(name: "groups", arg: 3, scope: !4267, file: !4240, line: 31, type: !4243)
!4271 = !DILocalVariable(name: "result", scope: !4267, file: !4240, line: 33, type: !72)
!4272 = distinct !DISubprogram(name: "xstrtoul", scope: !4273, file: !4273, line: 76, type: !4274, scopeLine: 78, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !220, retainedNodes: !4)
!4273 = !DIFile(filename: "./lib/xstrtol.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!4274 = !DISubroutineType(types: !4275)
!4275 = !{!4276, !69, !184, !72, !4277, !69}
!4276 = !DIDerivedType(tag: DW_TAG_typedef, name: "strtol_error", file: !224, line: 38, baseType: !223)
!4277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !84, size: 64)
!4278 = !DILocalVariable(name: "s", arg: 1, scope: !4272, file: !4273, line: 76, type: !69)
!4279 = !DILocation(line: 76, column: 24, scope: !4272)
!4280 = !DILocalVariable(name: "ptr", arg: 2, scope: !4272, file: !4273, line: 76, type: !184)
!4281 = !DILocation(line: 76, column: 34, scope: !4272)
!4282 = !DILocalVariable(name: "strtol_base", arg: 3, scope: !4272, file: !4273, line: 76, type: !72)
!4283 = !DILocation(line: 76, column: 43, scope: !4272)
!4284 = !DILocalVariable(name: "val", arg: 4, scope: !4272, file: !4273, line: 77, type: !4277)
!4285 = !DILocation(line: 77, column: 24, scope: !4272)
!4286 = !DILocalVariable(name: "valid_suffixes", arg: 5, scope: !4272, file: !4273, line: 77, type: !69)
!4287 = !DILocation(line: 77, column: 41, scope: !4272)
!4288 = !DILocalVariable(name: "t_ptr", scope: !4272, file: !4273, line: 79, type: !6)
!4289 = !DILocation(line: 79, column: 9, scope: !4272)
!4290 = !DILocalVariable(name: "p", scope: !4272, file: !4273, line: 80, type: !184)
!4291 = !DILocation(line: 80, column: 10, scope: !4272)
!4292 = !DILocalVariable(name: "tmp", scope: !4272, file: !4273, line: 81, type: !84)
!4293 = !DILocation(line: 81, column: 14, scope: !4272)
!4294 = !DILocalVariable(name: "err", scope: !4272, file: !4273, line: 82, type: !4276)
!4295 = !DILocation(line: 82, column: 16, scope: !4272)
!4296 = !DILocation(line: 84, column: 3, scope: !4297)
!4297 = distinct !DILexicalBlock(scope: !4298, file: !4273, line: 84, column: 3)
!4298 = distinct !DILexicalBlock(scope: !4272, file: !4273, line: 84, column: 3)
!4299 = !DILocation(line: 84, column: 3, scope: !4298)
!4300 = !DILocation(line: 86, column: 8, scope: !4272)
!4301 = !DILocation(line: 86, column: 14, scope: !4272)
!4302 = !DILocation(line: 86, column: 5, scope: !4272)
!4303 = !DILocation(line: 88, column: 3, scope: !4272)
!4304 = !DILocation(line: 88, column: 9, scope: !4272)
!4305 = !DILocalVariable(name: "q", scope: !4306, file: !4273, line: 92, type: !69)
!4306 = distinct !DILexicalBlock(scope: !4307, file: !4273, line: 91, column: 5)
!4307 = distinct !DILexicalBlock(scope: !4272, file: !4273, line: 90, column: 7)
!4308 = !DILocation(line: 92, column: 19, scope: !4306)
!4309 = !DILocation(line: 92, column: 23, scope: !4306)
!4310 = !DILocalVariable(name: "ch", scope: !4306, file: !4273, line: 93, type: !240)
!4311 = !DILocation(line: 93, column: 21, scope: !4306)
!4312 = !DILocation(line: 93, column: 27, scope: !4306)
!4313 = !DILocation(line: 93, column: 26, scope: !4306)
!4314 = !DILocation(line: 94, column: 7, scope: !4306)
!4315 = !DILocation(line: 94, column: 14, scope: !4306)
!4316 = !DILocation(line: 95, column: 15, scope: !4306)
!4317 = !DILocation(line: 95, column: 14, scope: !4306)
!4318 = !DILocation(line: 95, column: 12, scope: !4306)
!4319 = distinct !{!4319, !4314, !4320}
!4320 = !DILocation(line: 95, column: 17, scope: !4306)
!4321 = !DILocation(line: 96, column: 11, scope: !4322)
!4322 = distinct !DILexicalBlock(scope: !4306, file: !4273, line: 96, column: 11)
!4323 = !DILocation(line: 96, column: 14, scope: !4322)
!4324 = !DILocation(line: 96, column: 11, scope: !4306)
!4325 = !DILocation(line: 97, column: 9, scope: !4322)
!4326 = !DILocation(line: 100, column: 19, scope: !4272)
!4327 = !DILocation(line: 100, column: 22, scope: !4272)
!4328 = !DILocation(line: 100, column: 25, scope: !4272)
!4329 = !DILocation(line: 100, column: 9, scope: !4272)
!4330 = !DILocation(line: 100, column: 7, scope: !4272)
!4331 = !DILocation(line: 102, column: 8, scope: !4332)
!4332 = distinct !DILexicalBlock(scope: !4272, file: !4273, line: 102, column: 7)
!4333 = !DILocation(line: 102, column: 7, scope: !4332)
!4334 = !DILocation(line: 102, column: 13, scope: !4332)
!4335 = !DILocation(line: 102, column: 10, scope: !4332)
!4336 = !DILocation(line: 102, column: 7, scope: !4272)
!4337 = !DILocation(line: 106, column: 11, scope: !4338)
!4338 = distinct !DILexicalBlock(scope: !4339, file: !4273, line: 106, column: 11)
!4339 = distinct !DILexicalBlock(scope: !4332, file: !4273, line: 103, column: 5)
!4340 = !DILocation(line: 106, column: 26, scope: !4338)
!4341 = !DILocation(line: 106, column: 31, scope: !4338)
!4342 = !DILocation(line: 106, column: 30, scope: !4338)
!4343 = !DILocation(line: 106, column: 29, scope: !4338)
!4344 = !DILocation(line: 106, column: 33, scope: !4338)
!4345 = !DILocation(line: 106, column: 44, scope: !4338)
!4346 = !DILocation(line: 106, column: 62, scope: !4338)
!4347 = !DILocation(line: 106, column: 61, scope: !4338)
!4348 = !DILocation(line: 106, column: 60, scope: !4338)
!4349 = !DILocation(line: 106, column: 36, scope: !4338)
!4350 = !DILocation(line: 106, column: 11, scope: !4339)
!4351 = !DILocation(line: 107, column: 13, scope: !4338)
!4352 = !DILocation(line: 107, column: 9, scope: !4338)
!4353 = !DILocation(line: 109, column: 9, scope: !4338)
!4354 = !DILocation(line: 110, column: 5, scope: !4339)
!4355 = !DILocation(line: 111, column: 12, scope: !4356)
!4356 = distinct !DILexicalBlock(scope: !4332, file: !4273, line: 111, column: 12)
!4357 = !DILocation(line: 111, column: 18, scope: !4356)
!4358 = !DILocation(line: 111, column: 12, scope: !4332)
!4359 = !DILocation(line: 113, column: 11, scope: !4360)
!4360 = distinct !DILexicalBlock(scope: !4361, file: !4273, line: 113, column: 11)
!4361 = distinct !DILexicalBlock(scope: !4356, file: !4273, line: 112, column: 5)
!4362 = !DILocation(line: 113, column: 17, scope: !4360)
!4363 = !DILocation(line: 113, column: 11, scope: !4361)
!4364 = !DILocation(line: 114, column: 9, scope: !4360)
!4365 = !DILocation(line: 115, column: 11, scope: !4361)
!4366 = !DILocation(line: 116, column: 5, scope: !4361)
!4367 = !DILocation(line: 121, column: 8, scope: !4368)
!4368 = distinct !DILexicalBlock(scope: !4272, file: !4273, line: 121, column: 7)
!4369 = !DILocation(line: 121, column: 7, scope: !4272)
!4370 = !DILocation(line: 123, column: 14, scope: !4371)
!4371 = distinct !DILexicalBlock(scope: !4368, file: !4273, line: 122, column: 5)
!4372 = !DILocation(line: 123, column: 8, scope: !4371)
!4373 = !DILocation(line: 123, column: 12, scope: !4371)
!4374 = !DILocation(line: 124, column: 14, scope: !4371)
!4375 = !DILocation(line: 124, column: 7, scope: !4371)
!4376 = !DILocation(line: 127, column: 9, scope: !4377)
!4377 = distinct !DILexicalBlock(scope: !4272, file: !4273, line: 127, column: 7)
!4378 = !DILocation(line: 127, column: 8, scope: !4377)
!4379 = !DILocation(line: 127, column: 7, scope: !4377)
!4380 = !DILocation(line: 127, column: 11, scope: !4377)
!4381 = !DILocation(line: 127, column: 7, scope: !4272)
!4382 = !DILocalVariable(name: "base", scope: !4383, file: !4273, line: 129, type: !72)
!4383 = distinct !DILexicalBlock(scope: !4377, file: !4273, line: 128, column: 5)
!4384 = !DILocation(line: 129, column: 11, scope: !4383)
!4385 = !DILocalVariable(name: "suffixes", scope: !4383, file: !4273, line: 130, type: !72)
!4386 = !DILocation(line: 130, column: 11, scope: !4383)
!4387 = !DILocalVariable(name: "overflow", scope: !4383, file: !4273, line: 131, type: !4276)
!4388 = !DILocation(line: 131, column: 20, scope: !4383)
!4389 = !DILocation(line: 133, column: 20, scope: !4390)
!4390 = distinct !DILexicalBlock(scope: !4383, file: !4273, line: 133, column: 11)
!4391 = !DILocation(line: 133, column: 38, scope: !4390)
!4392 = !DILocation(line: 133, column: 37, scope: !4390)
!4393 = !DILocation(line: 133, column: 36, scope: !4390)
!4394 = !DILocation(line: 133, column: 12, scope: !4390)
!4395 = !DILocation(line: 133, column: 11, scope: !4383)
!4396 = !DILocation(line: 135, column: 18, scope: !4397)
!4397 = distinct !DILexicalBlock(scope: !4390, file: !4273, line: 134, column: 9)
!4398 = !DILocation(line: 135, column: 12, scope: !4397)
!4399 = !DILocation(line: 135, column: 16, scope: !4397)
!4400 = !DILocation(line: 136, column: 18, scope: !4397)
!4401 = !DILocation(line: 136, column: 22, scope: !4397)
!4402 = !DILocation(line: 136, column: 11, scope: !4397)
!4403 = !DILocation(line: 139, column: 17, scope: !4383)
!4404 = !DILocation(line: 139, column: 16, scope: !4383)
!4405 = !DILocation(line: 139, column: 15, scope: !4383)
!4406 = !DILocation(line: 139, column: 7, scope: !4383)
!4407 = !DILocation(line: 151, column: 23, scope: !4408)
!4408 = distinct !DILexicalBlock(scope: !4409, file: !4273, line: 151, column: 15)
!4409 = distinct !DILexicalBlock(scope: !4383, file: !4273, line: 140, column: 9)
!4410 = !DILocation(line: 151, column: 15, scope: !4408)
!4411 = !DILocation(line: 151, column: 15, scope: !4409)
!4412 = !DILocation(line: 152, column: 21, scope: !4408)
!4413 = !DILocation(line: 152, column: 13, scope: !4408)
!4414 = !DILocation(line: 155, column: 21, scope: !4415)
!4415 = distinct !DILexicalBlock(scope: !4416, file: !4273, line: 155, column: 21)
!4416 = distinct !DILexicalBlock(scope: !4408, file: !4273, line: 153, column: 15)
!4417 = !DILocation(line: 155, column: 29, scope: !4415)
!4418 = !DILocation(line: 155, column: 21, scope: !4416)
!4419 = !DILocation(line: 156, column: 28, scope: !4415)
!4420 = !DILocation(line: 156, column: 19, scope: !4415)
!4421 = !DILocation(line: 157, column: 17, scope: !4416)
!4422 = !DILocation(line: 161, column: 22, scope: !4416)
!4423 = !DILocation(line: 162, column: 25, scope: !4416)
!4424 = !DILocation(line: 163, column: 17, scope: !4416)
!4425 = !DILocation(line: 164, column: 15, scope: !4416)
!4426 = !DILocation(line: 165, column: 9, scope: !4409)
!4427 = !DILocation(line: 167, column: 17, scope: !4383)
!4428 = !DILocation(line: 167, column: 16, scope: !4383)
!4429 = !DILocation(line: 167, column: 15, scope: !4383)
!4430 = !DILocation(line: 167, column: 7, scope: !4383)
!4431 = !DILocation(line: 170, column: 22, scope: !4432)
!4432 = distinct !DILexicalBlock(scope: !4383, file: !4273, line: 168, column: 9)
!4433 = !DILocation(line: 170, column: 20, scope: !4432)
!4434 = !DILocation(line: 171, column: 11, scope: !4432)
!4435 = !DILocation(line: 177, column: 22, scope: !4432)
!4436 = !DILocation(line: 177, column: 20, scope: !4432)
!4437 = !DILocation(line: 178, column: 11, scope: !4432)
!4438 = !DILocation(line: 181, column: 20, scope: !4432)
!4439 = !DILocation(line: 182, column: 11, scope: !4432)
!4440 = !DILocation(line: 185, column: 48, scope: !4432)
!4441 = !DILocation(line: 185, column: 22, scope: !4432)
!4442 = !DILocation(line: 185, column: 20, scope: !4432)
!4443 = !DILocation(line: 186, column: 11, scope: !4432)
!4444 = !DILocation(line: 190, column: 48, scope: !4432)
!4445 = !DILocation(line: 190, column: 22, scope: !4432)
!4446 = !DILocation(line: 190, column: 20, scope: !4432)
!4447 = !DILocation(line: 191, column: 11, scope: !4432)
!4448 = !DILocation(line: 195, column: 48, scope: !4432)
!4449 = !DILocation(line: 195, column: 22, scope: !4432)
!4450 = !DILocation(line: 195, column: 20, scope: !4432)
!4451 = !DILocation(line: 196, column: 11, scope: !4432)
!4452 = !DILocation(line: 200, column: 48, scope: !4432)
!4453 = !DILocation(line: 200, column: 22, scope: !4432)
!4454 = !DILocation(line: 200, column: 20, scope: !4432)
!4455 = !DILocation(line: 201, column: 11, scope: !4432)
!4456 = !DILocation(line: 204, column: 48, scope: !4432)
!4457 = !DILocation(line: 204, column: 22, scope: !4432)
!4458 = !DILocation(line: 204, column: 20, scope: !4432)
!4459 = !DILocation(line: 205, column: 11, scope: !4432)
!4460 = !DILocation(line: 209, column: 48, scope: !4432)
!4461 = !DILocation(line: 209, column: 22, scope: !4432)
!4462 = !DILocation(line: 209, column: 20, scope: !4432)
!4463 = !DILocation(line: 210, column: 11, scope: !4432)
!4464 = !DILocation(line: 213, column: 22, scope: !4432)
!4465 = !DILocation(line: 213, column: 20, scope: !4432)
!4466 = !DILocation(line: 214, column: 11, scope: !4432)
!4467 = !DILocation(line: 217, column: 48, scope: !4432)
!4468 = !DILocation(line: 217, column: 22, scope: !4432)
!4469 = !DILocation(line: 217, column: 20, scope: !4432)
!4470 = !DILocation(line: 218, column: 11, scope: !4432)
!4471 = !DILocation(line: 221, column: 48, scope: !4432)
!4472 = !DILocation(line: 221, column: 22, scope: !4432)
!4473 = !DILocation(line: 221, column: 20, scope: !4432)
!4474 = !DILocation(line: 222, column: 11, scope: !4432)
!4475 = !DILocation(line: 225, column: 18, scope: !4432)
!4476 = !DILocation(line: 225, column: 12, scope: !4432)
!4477 = !DILocation(line: 225, column: 16, scope: !4432)
!4478 = !DILocation(line: 226, column: 18, scope: !4432)
!4479 = !DILocation(line: 226, column: 22, scope: !4432)
!4480 = !DILocation(line: 226, column: 11, scope: !4432)
!4481 = !DILocation(line: 229, column: 14, scope: !4383)
!4482 = !DILocation(line: 229, column: 11, scope: !4383)
!4483 = !DILocation(line: 230, column: 13, scope: !4383)
!4484 = !DILocation(line: 230, column: 8, scope: !4383)
!4485 = !DILocation(line: 230, column: 10, scope: !4383)
!4486 = !DILocation(line: 231, column: 13, scope: !4487)
!4487 = distinct !DILexicalBlock(scope: !4383, file: !4273, line: 231, column: 11)
!4488 = !DILocation(line: 231, column: 12, scope: !4487)
!4489 = !DILocation(line: 231, column: 11, scope: !4487)
!4490 = !DILocation(line: 231, column: 11, scope: !4383)
!4491 = !DILocation(line: 232, column: 13, scope: !4487)
!4492 = !DILocation(line: 232, column: 9, scope: !4487)
!4493 = !DILocation(line: 233, column: 5, scope: !4383)
!4494 = !DILocation(line: 235, column: 10, scope: !4272)
!4495 = !DILocation(line: 235, column: 4, scope: !4272)
!4496 = !DILocation(line: 235, column: 8, scope: !4272)
!4497 = !DILocation(line: 236, column: 10, scope: !4272)
!4498 = !DILocation(line: 236, column: 3, scope: !4272)
!4499 = !DILocation(line: 237, column: 1, scope: !4272)
!4500 = !DILocalVariable(name: "s", arg: 1, scope: !4501, file: !4273, line: 76, type: !69)
!4501 = distinct !DISubprogram(name: "xstrtoul", scope: !4273, file: !4273, line: 76, type: !4274, scopeLine: 78, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !4502, retainedNodes: !4)
!4502 = distinct !DICompileUnit(language: DW_LANG_C99, file: !221, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !222, retainedTypes: !231, nameTableKind: None)
!4503 = !DILocalVariable(name: "ptr", arg: 2, scope: !4501, file: !4273, line: 76, type: !184)
!4504 = !DILocalVariable(name: "strtol_base", arg: 3, scope: !4501, file: !4273, line: 76, type: !72)
!4505 = !DILocalVariable(name: "val", arg: 4, scope: !4501, file: !4273, line: 77, type: !4277)
!4506 = !DILocalVariable(name: "valid_suffixes", arg: 5, scope: !4501, file: !4273, line: 77, type: !69)
!4507 = !DILocalVariable(name: "t_ptr", scope: !4501, file: !4273, line: 79, type: !6)
!4508 = !DILocalVariable(name: "p", scope: !4501, file: !4273, line: 80, type: !184)
!4509 = !DILocalVariable(name: "tmp", scope: !4501, file: !4273, line: 81, type: !84)
!4510 = !DILocalVariable(name: "err", scope: !4501, file: !4273, line: 82, type: !4276)
!4511 = !DILocalVariable(name: "suffixes", scope: !4512, file: !4273, line: 130, type: !72)
!4512 = distinct !DILexicalBlock(scope: !4513, file: !4273, line: 128, column: 5)
!4513 = distinct !DILexicalBlock(scope: !4514, file: !4273, line: 127, column: 7)
!4514 = distinct !DISubprogram(name: "xstrtoul", scope: !4273, file: !4273, line: 76, type: !4274, scopeLine: 78, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !4515, retainedNodes: !4)
!4515 = distinct !DICompileUnit(language: DW_LANG_C99, file: !221, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !222, retainedTypes: !231, nameTableKind: None)
!4516 = !DILocalVariable(name: "overflow", scope: !4512, file: !4273, line: 131, type: !4276)
!4517 = distinct !DISubprogram(name: "bkm_scale", scope: !4273, file: !4273, line: 48, type: !4518, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !220, retainedNodes: !4)
!4518 = !DISubroutineType(types: !4519)
!4519 = !{!4276, !4277, !72}
!4520 = !DILocalVariable(name: "x", arg: 1, scope: !4517, file: !4273, line: 48, type: !4277)
!4521 = !DILocation(line: 48, column: 24, scope: !4517)
!4522 = !DILocalVariable(name: "scale_factor", arg: 2, scope: !4517, file: !4273, line: 48, type: !72)
!4523 = !DILocation(line: 48, column: 31, scope: !4517)
!4524 = !DILocation(line: 55, column: 26, scope: !4525)
!4525 = distinct !DILexicalBlock(scope: !4517, file: !4273, line: 55, column: 7)
!4526 = !DILocation(line: 55, column: 24, scope: !4525)
!4527 = !DILocation(line: 55, column: 42, scope: !4525)
!4528 = !DILocation(line: 55, column: 41, scope: !4525)
!4529 = !DILocation(line: 55, column: 39, scope: !4525)
!4530 = !DILocation(line: 55, column: 7, scope: !4517)
!4531 = !DILocation(line: 57, column: 8, scope: !4532)
!4532 = distinct !DILexicalBlock(scope: !4525, file: !4273, line: 56, column: 5)
!4533 = !DILocation(line: 57, column: 10, scope: !4532)
!4534 = !DILocation(line: 58, column: 7, scope: !4532)
!4535 = !DILocation(line: 60, column: 9, scope: !4517)
!4536 = !DILocation(line: 60, column: 4, scope: !4517)
!4537 = !DILocation(line: 60, column: 6, scope: !4517)
!4538 = !DILocation(line: 61, column: 3, scope: !4517)
!4539 = !DILocation(line: 62, column: 1, scope: !4517)
!4540 = distinct !DISubprogram(name: "bkm_scale_by_power", scope: !4273, file: !4273, line: 65, type: !4541, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !220, retainedNodes: !4)
!4541 = !DISubroutineType(types: !4542)
!4542 = !{!4276, !4277, !72, !72}
!4543 = !DILocalVariable(name: "x", arg: 1, scope: !4540, file: !4273, line: 65, type: !4277)
!4544 = !DILocation(line: 65, column: 33, scope: !4540)
!4545 = !DILocalVariable(name: "base", arg: 2, scope: !4540, file: !4273, line: 65, type: !72)
!4546 = !DILocation(line: 65, column: 40, scope: !4540)
!4547 = !DILocalVariable(name: "power", arg: 3, scope: !4540, file: !4273, line: 65, type: !72)
!4548 = !DILocation(line: 65, column: 50, scope: !4540)
!4549 = !DILocalVariable(name: "err", scope: !4540, file: !4273, line: 67, type: !4276)
!4550 = !DILocation(line: 67, column: 16, scope: !4540)
!4551 = !DILocation(line: 68, column: 3, scope: !4540)
!4552 = !DILocation(line: 68, column: 15, scope: !4540)
!4553 = !DILocation(line: 69, column: 23, scope: !4540)
!4554 = !DILocation(line: 69, column: 26, scope: !4540)
!4555 = !DILocation(line: 69, column: 12, scope: !4540)
!4556 = !DILocation(line: 69, column: 9, scope: !4540)
!4557 = distinct !{!4557, !4551, !4558}
!4558 = !DILocation(line: 69, column: 30, scope: !4540)
!4559 = !DILocation(line: 70, column: 10, scope: !4540)
!4560 = !DILocation(line: 70, column: 3, scope: !4540)
!4561 = distinct !DISubprogram(name: "rpl_mbrtowc", scope: !4562, file: !4562, line: 86, type: !4563, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !232, retainedNodes: !4)
!4562 = !DIFile(filename: "lib/mbrtowc.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!4563 = !DISubroutineType(types: !4564)
!4564 = !{!134, !4565, !69, !134, !4566}
!4565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2653, size: 64)
!4566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4567, size: 64)
!4567 = !DIDerivedType(tag: DW_TAG_typedef, name: "mbstate_t", file: !2624, line: 6, baseType: !4568)
!4568 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mbstate_t", file: !2626, line: 21, baseType: !4569)
!4569 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2626, line: 13, size: 64, elements: !4570)
!4570 = !{!4571, !4572}
!4571 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !4569, file: !2626, line: 15, baseType: !72, size: 32)
!4572 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !4569, file: !2626, line: 20, baseType: !4573, size: 32, offset: 32)
!4573 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4569, file: !2626, line: 16, size: 32, elements: !4574)
!4574 = !{!4575, !4576}
!4575 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !4573, file: !2626, line: 18, baseType: !16, size: 32)
!4576 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !4573, file: !2626, line: 19, baseType: !2635, size: 32)
!4577 = !DILocalVariable(name: "pwc", arg: 1, scope: !4561, file: !4562, line: 86, type: !4565)
!4578 = !DILocation(line: 86, column: 23, scope: !4561)
!4579 = !DILocalVariable(name: "s", arg: 2, scope: !4561, file: !4562, line: 86, type: !69)
!4580 = !DILocation(line: 86, column: 40, scope: !4561)
!4581 = !DILocalVariable(name: "n", arg: 3, scope: !4561, file: !4562, line: 86, type: !134)
!4582 = !DILocation(line: 86, column: 50, scope: !4561)
!4583 = !DILocalVariable(name: "ps", arg: 4, scope: !4561, file: !4562, line: 86, type: !4566)
!4584 = !DILocation(line: 86, column: 64, scope: !4561)
!4585 = !DILocalVariable(name: "ret", scope: !4561, file: !4562, line: 88, type: !134)
!4586 = !DILocation(line: 88, column: 10, scope: !4561)
!4587 = !DILocalVariable(name: "wc", scope: !4561, file: !4562, line: 89, type: !2653)
!4588 = !DILocation(line: 89, column: 11, scope: !4561)
!4589 = !DILocation(line: 105, column: 9, scope: !4590)
!4590 = distinct !DILexicalBlock(scope: !4561, file: !4562, line: 105, column: 7)
!4591 = !DILocation(line: 105, column: 7, scope: !4561)
!4592 = !DILocation(line: 106, column: 9, scope: !4590)
!4593 = !DILocation(line: 106, column: 5, scope: !4590)
!4594 = !DILocation(line: 145, column: 18, scope: !4561)
!4595 = !DILocation(line: 145, column: 23, scope: !4561)
!4596 = !DILocation(line: 145, column: 26, scope: !4561)
!4597 = !DILocation(line: 145, column: 29, scope: !4561)
!4598 = !DILocation(line: 145, column: 9, scope: !4561)
!4599 = !DILocation(line: 145, column: 7, scope: !4561)
!4600 = !DILocation(line: 154, column: 22, scope: !4601)
!4601 = distinct !DILexicalBlock(scope: !4561, file: !4562, line: 154, column: 7)
!4602 = !DILocation(line: 154, column: 19, scope: !4601)
!4603 = !DILocation(line: 154, column: 26, scope: !4601)
!4604 = !DILocation(line: 154, column: 29, scope: !4601)
!4605 = !DILocation(line: 154, column: 31, scope: !4601)
!4606 = !DILocation(line: 154, column: 36, scope: !4601)
!4607 = !DILocation(line: 154, column: 41, scope: !4601)
!4608 = !DILocation(line: 154, column: 7, scope: !4561)
!4609 = !DILocalVariable(name: "uc", scope: !4610, file: !4562, line: 156, type: !240)
!4610 = distinct !DILexicalBlock(scope: !4601, file: !4562, line: 155, column: 5)
!4611 = !DILocation(line: 156, column: 21, scope: !4610)
!4612 = !DILocation(line: 156, column: 27, scope: !4610)
!4613 = !DILocation(line: 156, column: 26, scope: !4610)
!4614 = !DILocation(line: 157, column: 14, scope: !4610)
!4615 = !DILocation(line: 157, column: 8, scope: !4610)
!4616 = !DILocation(line: 157, column: 12, scope: !4610)
!4617 = !DILocation(line: 158, column: 7, scope: !4610)
!4618 = !DILocation(line: 162, column: 10, scope: !4561)
!4619 = !DILocation(line: 162, column: 3, scope: !4561)
!4620 = !DILocation(line: 163, column: 1, scope: !4561)
!4621 = distinct !DISubprogram(name: "c_strcasecmp", scope: !4622, file: !4622, line: 27, type: !4623, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !235, retainedNodes: !4)
!4622 = !DIFile(filename: "lib/c-strcasecmp.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!4623 = !DISubroutineType(types: !4624)
!4624 = !{!72, !69, !69}
!4625 = !DILocalVariable(name: "s1", arg: 1, scope: !4621, file: !4622, line: 27, type: !69)
!4626 = !DILocation(line: 27, column: 27, scope: !4621)
!4627 = !DILocalVariable(name: "s2", arg: 2, scope: !4621, file: !4622, line: 27, type: !69)
!4628 = !DILocation(line: 27, column: 43, scope: !4621)
!4629 = !DILocalVariable(name: "p1", scope: !4621, file: !4622, line: 29, type: !238)
!4630 = !DILocation(line: 29, column: 33, scope: !4621)
!4631 = !DILocation(line: 29, column: 62, scope: !4621)
!4632 = !DILocalVariable(name: "p2", scope: !4621, file: !4622, line: 30, type: !238)
!4633 = !DILocation(line: 30, column: 33, scope: !4621)
!4634 = !DILocation(line: 30, column: 62, scope: !4621)
!4635 = !DILocalVariable(name: "c1", scope: !4621, file: !4622, line: 31, type: !240)
!4636 = !DILocation(line: 31, column: 17, scope: !4621)
!4637 = !DILocalVariable(name: "c2", scope: !4621, file: !4622, line: 31, type: !240)
!4638 = !DILocation(line: 31, column: 21, scope: !4621)
!4639 = !DILocation(line: 33, column: 7, scope: !4640)
!4640 = distinct !DILexicalBlock(scope: !4621, file: !4622, line: 33, column: 7)
!4641 = !DILocation(line: 33, column: 13, scope: !4640)
!4642 = !DILocation(line: 33, column: 10, scope: !4640)
!4643 = !DILocation(line: 33, column: 7, scope: !4621)
!4644 = !DILocation(line: 34, column: 5, scope: !4640)
!4645 = !DILocation(line: 36, column: 3, scope: !4621)
!4646 = !DILocation(line: 38, column: 24, scope: !4647)
!4647 = distinct !DILexicalBlock(scope: !4621, file: !4622, line: 37, column: 5)
!4648 = !DILocation(line: 38, column: 23, scope: !4647)
!4649 = !DILocation(line: 38, column: 12, scope: !4647)
!4650 = !DILocation(line: 38, column: 10, scope: !4647)
!4651 = !DILocation(line: 39, column: 24, scope: !4647)
!4652 = !DILocation(line: 39, column: 23, scope: !4647)
!4653 = !DILocation(line: 39, column: 12, scope: !4647)
!4654 = !DILocation(line: 39, column: 10, scope: !4647)
!4655 = !DILocation(line: 41, column: 11, scope: !4656)
!4656 = distinct !DILexicalBlock(scope: !4647, file: !4622, line: 41, column: 11)
!4657 = !DILocation(line: 41, column: 14, scope: !4656)
!4658 = !DILocation(line: 41, column: 11, scope: !4647)
!4659 = !DILocation(line: 42, column: 9, scope: !4656)
!4660 = !DILocation(line: 44, column: 7, scope: !4647)
!4661 = !DILocation(line: 45, column: 7, scope: !4647)
!4662 = !DILocation(line: 46, column: 5, scope: !4647)
!4663 = !DILocation(line: 47, column: 10, scope: !4621)
!4664 = !DILocation(line: 47, column: 16, scope: !4621)
!4665 = !DILocation(line: 47, column: 13, scope: !4621)
!4666 = distinct !{!4666, !4645, !4667}
!4667 = !DILocation(line: 47, column: 18, scope: !4621)
!4668 = !DILocation(line: 50, column: 12, scope: !4669)
!4669 = distinct !DILexicalBlock(scope: !4621, file: !4622, line: 49, column: 7)
!4670 = !DILocation(line: 50, column: 17, scope: !4669)
!4671 = !DILocation(line: 50, column: 15, scope: !4669)
!4672 = !DILocation(line: 50, column: 5, scope: !4669)
!4673 = !DILocation(line: 56, column: 1, scope: !4621)
!4674 = !DILocalVariable(name: "s1", arg: 1, scope: !4675, file: !4622, line: 27, type: !69)
!4675 = distinct !DISubprogram(name: "c_strcasecmp", scope: !4622, file: !4622, line: 27, type: !4623, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !4676, retainedNodes: !4)
!4676 = distinct !DICompileUnit(language: DW_LANG_C99, file: !236, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !237, nameTableKind: None)
!4677 = !DILocalVariable(name: "s2", arg: 2, scope: !4675, file: !4622, line: 27, type: !69)
!4678 = !DILocalVariable(name: "p1", scope: !4675, file: !4622, line: 29, type: !238)
!4679 = !DILocalVariable(name: "p2", scope: !4675, file: !4622, line: 30, type: !238)
!4680 = !DILocalVariable(name: "c1", scope: !4675, file: !4622, line: 31, type: !240)
!4681 = !DILocalVariable(name: "c2", scope: !4675, file: !4622, line: 31, type: !240)
!4682 = distinct !DISubprogram(name: "close_stream", scope: !4683, file: !4683, line: 56, type: !4684, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !241, retainedNodes: !4)
!4683 = !DIFile(filename: "lib/close-stream.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!4684 = !DISubroutineType(types: !4685)
!4685 = !{!72, !4686}
!4686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4687, size: 64)
!4687 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !3732, line: 7, baseType: !4688)
!4688 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !3734, line: 49, size: 1728, elements: !4689)
!4689 = !{!4690, !4691, !4692, !4693, !4694, !4695, !4696, !4697, !4698, !4699, !4700, !4701, !4702, !4703, !4705, !4706, !4707, !4708, !4709, !4710, !4711, !4712, !4713, !4714, !4715, !4716, !4717, !4718, !4719}
!4690 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !4688, file: !3734, line: 51, baseType: !72, size: 32)
!4691 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !4688, file: !3734, line: 54, baseType: !6, size: 64, offset: 64)
!4692 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !4688, file: !3734, line: 55, baseType: !6, size: 64, offset: 128)
!4693 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !4688, file: !3734, line: 56, baseType: !6, size: 64, offset: 192)
!4694 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !4688, file: !3734, line: 57, baseType: !6, size: 64, offset: 256)
!4695 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !4688, file: !3734, line: 58, baseType: !6, size: 64, offset: 320)
!4696 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !4688, file: !3734, line: 59, baseType: !6, size: 64, offset: 384)
!4697 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !4688, file: !3734, line: 60, baseType: !6, size: 64, offset: 448)
!4698 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !4688, file: !3734, line: 61, baseType: !6, size: 64, offset: 512)
!4699 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !4688, file: !3734, line: 64, baseType: !6, size: 64, offset: 576)
!4700 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !4688, file: !3734, line: 65, baseType: !6, size: 64, offset: 640)
!4701 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !4688, file: !3734, line: 66, baseType: !6, size: 64, offset: 704)
!4702 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !4688, file: !3734, line: 68, baseType: !3749, size: 64, offset: 768)
!4703 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !4688, file: !3734, line: 70, baseType: !4704, size: 64, offset: 832)
!4704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4688, size: 64)
!4705 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !4688, file: !3734, line: 72, baseType: !72, size: 32, offset: 896)
!4706 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !4688, file: !3734, line: 73, baseType: !72, size: 32, offset: 928)
!4707 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !4688, file: !3734, line: 74, baseType: !3756, size: 64, offset: 960)
!4708 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !4688, file: !3734, line: 77, baseType: !133, size: 16, offset: 1024)
!4709 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !4688, file: !3734, line: 78, baseType: !3759, size: 8, offset: 1040)
!4710 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !4688, file: !3734, line: 79, baseType: !3761, size: 8, offset: 1048)
!4711 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !4688, file: !3734, line: 81, baseType: !3765, size: 64, offset: 1088)
!4712 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !4688, file: !3734, line: 89, baseType: !3768, size: 64, offset: 1152)
!4713 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !4688, file: !3734, line: 91, baseType: !3770, size: 64, offset: 1216)
!4714 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !4688, file: !3734, line: 92, baseType: !3773, size: 64, offset: 1280)
!4715 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !4688, file: !3734, line: 93, baseType: !4704, size: 64, offset: 1344)
!4716 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !4688, file: !3734, line: 94, baseType: !8, size: 64, offset: 1408)
!4717 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !4688, file: !3734, line: 95, baseType: !134, size: 64, offset: 1472)
!4718 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !4688, file: !3734, line: 96, baseType: !72, size: 32, offset: 1536)
!4719 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !4688, file: !3734, line: 98, baseType: !3780, size: 160, offset: 1568)
!4720 = !DILocalVariable(name: "stream", arg: 1, scope: !4682, file: !4683, line: 56, type: !4686)
!4721 = !DILocation(line: 56, column: 21, scope: !4682)
!4722 = !DILocalVariable(name: "some_pending", scope: !4682, file: !4683, line: 58, type: !4723)
!4723 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !27)
!4724 = !DILocation(line: 58, column: 14, scope: !4682)
!4725 = !DILocation(line: 58, column: 42, scope: !4682)
!4726 = !DILocation(line: 58, column: 30, scope: !4682)
!4727 = !DILocation(line: 58, column: 50, scope: !4682)
!4728 = !DILocalVariable(name: "prev_fail", scope: !4682, file: !4683, line: 59, type: !4723)
!4729 = !DILocation(line: 59, column: 14, scope: !4682)
!4730 = !DILocation(line: 59, column: 27, scope: !4682)
!4731 = !DILocation(line: 59, column: 43, scope: !4682)
!4732 = !DILocalVariable(name: "fclose_fail", scope: !4682, file: !4683, line: 60, type: !4723)
!4733 = !DILocation(line: 60, column: 14, scope: !4682)
!4734 = !DILocation(line: 60, column: 37, scope: !4682)
!4735 = !DILocation(line: 60, column: 29, scope: !4682)
!4736 = !DILocation(line: 60, column: 45, scope: !4682)
!4737 = !DILocation(line: 70, column: 7, scope: !4738)
!4738 = distinct !DILexicalBlock(scope: !4682, file: !4683, line: 70, column: 7)
!4739 = !DILocation(line: 70, column: 17, scope: !4738)
!4740 = !DILocation(line: 70, column: 21, scope: !4738)
!4741 = !DILocation(line: 70, column: 33, scope: !4738)
!4742 = !DILocation(line: 70, column: 37, scope: !4738)
!4743 = !DILocation(line: 70, column: 50, scope: !4738)
!4744 = !DILocation(line: 70, column: 53, scope: !4738)
!4745 = !DILocation(line: 70, column: 59, scope: !4738)
!4746 = !DILocation(line: 70, column: 7, scope: !4682)
!4747 = !DILocation(line: 72, column: 13, scope: !4748)
!4748 = distinct !DILexicalBlock(scope: !4749, file: !4683, line: 72, column: 11)
!4749 = distinct !DILexicalBlock(scope: !4738, file: !4683, line: 71, column: 5)
!4750 = !DILocation(line: 72, column: 11, scope: !4749)
!4751 = !DILocation(line: 73, column: 9, scope: !4748)
!4752 = !DILocation(line: 73, column: 15, scope: !4748)
!4753 = !DILocation(line: 74, column: 7, scope: !4749)
!4754 = !DILocation(line: 77, column: 3, scope: !4682)
!4755 = !DILocation(line: 78, column: 1, scope: !4682)
!4756 = !DILocalVariable(name: "stream", arg: 1, scope: !4757, file: !4683, line: 56, type: !4760)
!4757 = distinct !DISubprogram(name: "close_stream", scope: !4683, file: !4683, line: 56, type: !4758, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !4794, retainedNodes: !4)
!4758 = !DISubroutineType(types: !4759)
!4759 = !{!72, !4760}
!4760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4761, size: 64)
!4761 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !3732, line: 7, baseType: !4762)
!4762 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !3734, line: 49, size: 1728, elements: !4763)
!4763 = !{!4764, !4765, !4766, !4767, !4768, !4769, !4770, !4771, !4772, !4773, !4774, !4775, !4776, !4777, !4779, !4780, !4781, !4782, !4783, !4784, !4785, !4786, !4787, !4788, !4789, !4790, !4791, !4792, !4793}
!4764 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !4762, file: !3734, line: 51, baseType: !72, size: 32)
!4765 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !4762, file: !3734, line: 54, baseType: !6, size: 64, offset: 64)
!4766 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !4762, file: !3734, line: 55, baseType: !6, size: 64, offset: 128)
!4767 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !4762, file: !3734, line: 56, baseType: !6, size: 64, offset: 192)
!4768 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !4762, file: !3734, line: 57, baseType: !6, size: 64, offset: 256)
!4769 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !4762, file: !3734, line: 58, baseType: !6, size: 64, offset: 320)
!4770 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !4762, file: !3734, line: 59, baseType: !6, size: 64, offset: 384)
!4771 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !4762, file: !3734, line: 60, baseType: !6, size: 64, offset: 448)
!4772 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !4762, file: !3734, line: 61, baseType: !6, size: 64, offset: 512)
!4773 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !4762, file: !3734, line: 64, baseType: !6, size: 64, offset: 576)
!4774 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !4762, file: !3734, line: 65, baseType: !6, size: 64, offset: 640)
!4775 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !4762, file: !3734, line: 66, baseType: !6, size: 64, offset: 704)
!4776 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !4762, file: !3734, line: 68, baseType: !3749, size: 64, offset: 768)
!4777 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !4762, file: !3734, line: 70, baseType: !4778, size: 64, offset: 832)
!4778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4762, size: 64)
!4779 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !4762, file: !3734, line: 72, baseType: !72, size: 32, offset: 896)
!4780 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !4762, file: !3734, line: 73, baseType: !72, size: 32, offset: 928)
!4781 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !4762, file: !3734, line: 74, baseType: !3756, size: 64, offset: 960)
!4782 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !4762, file: !3734, line: 77, baseType: !133, size: 16, offset: 1024)
!4783 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !4762, file: !3734, line: 78, baseType: !3759, size: 8, offset: 1040)
!4784 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !4762, file: !3734, line: 79, baseType: !3761, size: 8, offset: 1048)
!4785 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !4762, file: !3734, line: 81, baseType: !3765, size: 64, offset: 1088)
!4786 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !4762, file: !3734, line: 89, baseType: !3768, size: 64, offset: 1152)
!4787 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !4762, file: !3734, line: 91, baseType: !3770, size: 64, offset: 1216)
!4788 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !4762, file: !3734, line: 92, baseType: !3773, size: 64, offset: 1280)
!4789 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !4762, file: !3734, line: 93, baseType: !4778, size: 64, offset: 1344)
!4790 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !4762, file: !3734, line: 94, baseType: !8, size: 64, offset: 1408)
!4791 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !4762, file: !3734, line: 95, baseType: !134, size: 64, offset: 1472)
!4792 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !4762, file: !3734, line: 96, baseType: !72, size: 32, offset: 1536)
!4793 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !4762, file: !3734, line: 98, baseType: !3780, size: 160, offset: 1568)
!4794 = distinct !DICompileUnit(language: DW_LANG_C99, file: !242, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, nameTableKind: None)
!4795 = !DILocalVariable(name: "some_pending", scope: !4757, file: !4683, line: 58, type: !4723)
!4796 = !DILocalVariable(name: "prev_fail", scope: !4757, file: !4683, line: 59, type: !4723)
!4797 = !DILocalVariable(name: "fclose_fail", scope: !4757, file: !4683, line: 60, type: !4723)
!4798 = distinct !DISubprogram(name: "hard_locale", scope: !4799, file: !4799, line: 27, type: !4800, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !243, retainedNodes: !4)
!4799 = !DIFile(filename: "lib/hard-locale.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!4800 = !DISubroutineType(types: !4801)
!4801 = !{!27, !72}
!4802 = !DILocalVariable(name: "category", arg: 1, scope: !4798, file: !4799, line: 27, type: !72)
!4803 = !DILocation(line: 27, column: 18, scope: !4798)
!4804 = !DILocalVariable(name: "locale", scope: !4798, file: !4799, line: 29, type: !4805)
!4805 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 2056, elements: !4806)
!4806 = !{!4807}
!4807 = !DISubrange(count: 257)
!4808 = !DILocation(line: 29, column: 8, scope: !4798)
!4809 = !DILocation(line: 31, column: 25, scope: !4810)
!4810 = distinct !DILexicalBlock(scope: !4798, file: !4799, line: 31, column: 7)
!4811 = !DILocation(line: 31, column: 35, scope: !4810)
!4812 = !DILocation(line: 31, column: 7, scope: !4810)
!4813 = !DILocation(line: 31, column: 7, scope: !4798)
!4814 = !DILocation(line: 32, column: 5, scope: !4810)
!4815 = !DILocation(line: 34, column: 20, scope: !4798)
!4816 = !DILocation(line: 34, column: 12, scope: !4798)
!4817 = !DILocation(line: 34, column: 33, scope: !4798)
!4818 = !DILocation(line: 34, column: 38, scope: !4798)
!4819 = !DILocation(line: 34, column: 49, scope: !4798)
!4820 = !DILocation(line: 34, column: 41, scope: !4798)
!4821 = !DILocation(line: 34, column: 66, scope: !4798)
!4822 = !DILocation(line: 34, column: 10, scope: !4798)
!4823 = !DILocation(line: 34, column: 3, scope: !4798)
!4824 = !DILocation(line: 35, column: 1, scope: !4798)
!4825 = distinct !DISubprogram(name: "locale_charset", scope: !4826, file: !4826, line: 831, type: !4827, scopeLine: 832, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !245, retainedNodes: !4)
!4826 = !DIFile(filename: "lib/localcharset.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!4827 = !DISubroutineType(types: !4828)
!4828 = !{!69}
!4829 = !DILocalVariable(name: "codeset", scope: !4825, file: !4826, line: 833, type: !69)
!4830 = !DILocation(line: 833, column: 15, scope: !4825)
!4831 = !DILocation(line: 847, column: 13, scope: !4825)
!4832 = !DILocation(line: 847, column: 11, scope: !4825)
!4833 = !DILocation(line: 911, column: 7, scope: !4834)
!4834 = distinct !DILexicalBlock(scope: !4825, file: !4826, line: 911, column: 7)
!4835 = !DILocation(line: 911, column: 15, scope: !4834)
!4836 = !DILocation(line: 911, column: 7, scope: !4825)
!4837 = !DILocation(line: 913, column: 13, scope: !4834)
!4838 = !DILocation(line: 913, column: 5, scope: !4834)
!4839 = !DILocation(line: 1070, column: 13, scope: !4840)
!4840 = distinct !DILexicalBlock(scope: !4841, file: !4826, line: 1070, column: 13)
!4841 = distinct !DILexicalBlock(scope: !4842, file: !4826, line: 1060, column: 7)
!4842 = distinct !DILexicalBlock(scope: !4825, file: !4826, line: 1019, column: 3)
!4843 = !DILocation(line: 1070, column: 24, scope: !4840)
!4844 = !DILocation(line: 1070, column: 13, scope: !4841)
!4845 = !DILocation(line: 1071, column: 19, scope: !4840)
!4846 = !DILocation(line: 1071, column: 11, scope: !4840)
!4847 = !DILocation(line: 1158, column: 10, scope: !4825)
!4848 = !DILocation(line: 1158, column: 3, scope: !4825)
!4849 = !DILocalVariable(name: "codeset", scope: !4850, file: !4826, line: 833, type: !69)
!4850 = distinct !DISubprogram(name: "locale_charset", scope: !4826, file: !4826, line: 831, type: !4827, scopeLine: 832, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !4851, retainedNodes: !4)
!4851 = distinct !DICompileUnit(language: DW_LANG_C99, file: !246, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !212, nameTableKind: None)
!4852 = distinct !DISubprogram(name: "mgetgroups", scope: !4853, file: !4853, line: 66, type: !4241, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !247, retainedNodes: !4)
!4853 = !DIFile(filename: "lib/mgetgroups.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!4854 = !DILocalVariable(name: "username", arg: 1, scope: !4852, file: !4853, line: 66, type: !69)
!4855 = !DILocation(line: 66, column: 25, scope: !4852)
!4856 = !DILocalVariable(name: "gid", arg: 2, scope: !4852, file: !4853, line: 66, type: !21)
!4857 = !DILocation(line: 66, column: 41, scope: !4852)
!4858 = !DILocalVariable(name: "groups", arg: 3, scope: !4852, file: !4853, line: 66, type: !4243)
!4859 = !DILocation(line: 66, column: 54, scope: !4852)
!4860 = !DILocalVariable(name: "max_n_groups", scope: !4852, file: !4853, line: 68, type: !72)
!4861 = !DILocation(line: 68, column: 7, scope: !4852)
!4862 = !DILocalVariable(name: "ng", scope: !4852, file: !4853, line: 69, type: !72)
!4863 = !DILocation(line: 69, column: 7, scope: !4852)
!4864 = !DILocalVariable(name: "g", scope: !4852, file: !4853, line: 70, type: !183)
!4865 = !DILocation(line: 70, column: 10, scope: !4852)
!4866 = !DILocation(line: 81, column: 7, scope: !4867)
!4867 = distinct !DILexicalBlock(scope: !4852, file: !4853, line: 81, column: 7)
!4868 = !DILocation(line: 81, column: 7, scope: !4852)
!4869 = !DILocation(line: 84, column: 20, scope: !4870)
!4870 = distinct !DILexicalBlock(scope: !4867, file: !4853, line: 82, column: 5)
!4871 = !DILocation(line: 86, column: 35, scope: !4870)
!4872 = !DILocation(line: 86, column: 11, scope: !4870)
!4873 = !DILocation(line: 86, column: 9, scope: !4870)
!4874 = !DILocation(line: 87, column: 11, scope: !4875)
!4875 = distinct !DILexicalBlock(scope: !4870, file: !4853, line: 87, column: 11)
!4876 = !DILocation(line: 87, column: 13, scope: !4875)
!4877 = !DILocation(line: 87, column: 11, scope: !4870)
!4878 = !DILocation(line: 88, column: 9, scope: !4875)
!4879 = !DILocation(line: 90, column: 7, scope: !4870)
!4880 = !DILocalVariable(name: "h", scope: !4881, file: !4853, line: 92, type: !183)
!4881 = distinct !DILexicalBlock(scope: !4870, file: !4853, line: 91, column: 9)
!4882 = !DILocation(line: 92, column: 18, scope: !4881)
!4883 = !DILocalVariable(name: "last_n_groups", scope: !4881, file: !4853, line: 93, type: !72)
!4884 = !DILocation(line: 93, column: 15, scope: !4881)
!4885 = !DILocation(line: 93, column: 31, scope: !4881)
!4886 = !DILocation(line: 96, column: 30, scope: !4881)
!4887 = !DILocation(line: 96, column: 40, scope: !4881)
!4888 = !DILocation(line: 96, column: 45, scope: !4881)
!4889 = !DILocation(line: 96, column: 16, scope: !4881)
!4890 = !DILocation(line: 96, column: 14, scope: !4881)
!4891 = !DILocation(line: 100, column: 15, scope: !4892)
!4892 = distinct !DILexicalBlock(scope: !4881, file: !4853, line: 100, column: 15)
!4893 = !DILocation(line: 100, column: 18, scope: !4892)
!4894 = !DILocation(line: 100, column: 22, scope: !4892)
!4895 = !DILocation(line: 100, column: 25, scope: !4892)
!4896 = !DILocation(line: 100, column: 42, scope: !4892)
!4897 = !DILocation(line: 100, column: 39, scope: !4892)
!4898 = !DILocation(line: 100, column: 15, scope: !4881)
!4899 = !DILocation(line: 101, column: 26, scope: !4892)
!4900 = !DILocation(line: 101, column: 13, scope: !4892)
!4901 = !DILocation(line: 103, column: 38, scope: !4902)
!4902 = distinct !DILexicalBlock(scope: !4881, file: !4853, line: 103, column: 15)
!4903 = !DILocation(line: 103, column: 41, scope: !4902)
!4904 = !DILocation(line: 103, column: 20, scope: !4902)
!4905 = !DILocation(line: 103, column: 18, scope: !4902)
!4906 = !DILocation(line: 103, column: 56, scope: !4902)
!4907 = !DILocation(line: 103, column: 15, scope: !4881)
!4908 = !DILocalVariable(name: "saved_errno", scope: !4909, file: !4853, line: 105, type: !72)
!4909 = distinct !DILexicalBlock(scope: !4902, file: !4853, line: 104, column: 13)
!4910 = !DILocation(line: 105, column: 19, scope: !4909)
!4911 = !DILocation(line: 105, column: 33, scope: !4909)
!4912 = !DILocation(line: 106, column: 21, scope: !4909)
!4913 = !DILocation(line: 106, column: 15, scope: !4909)
!4914 = !DILocation(line: 107, column: 23, scope: !4909)
!4915 = !DILocation(line: 107, column: 15, scope: !4909)
!4916 = !DILocation(line: 107, column: 21, scope: !4909)
!4917 = !DILocation(line: 108, column: 15, scope: !4909)
!4918 = !DILocation(line: 110, column: 15, scope: !4881)
!4919 = !DILocation(line: 110, column: 13, scope: !4881)
!4920 = !DILocation(line: 112, column: 20, scope: !4921)
!4921 = distinct !DILexicalBlock(scope: !4881, file: !4853, line: 112, column: 15)
!4922 = !DILocation(line: 112, column: 17, scope: !4921)
!4923 = !DILocation(line: 112, column: 15, scope: !4881)
!4924 = !DILocation(line: 114, column: 25, scope: !4925)
!4925 = distinct !DILexicalBlock(scope: !4921, file: !4853, line: 113, column: 13)
!4926 = !DILocation(line: 114, column: 16, scope: !4925)
!4927 = !DILocation(line: 114, column: 23, scope: !4925)
!4928 = !DILocation(line: 117, column: 22, scope: !4925)
!4929 = !DILocation(line: 117, column: 15, scope: !4925)
!4930 = distinct !{!4930, !4879, !4931}
!4931 = !DILocation(line: 119, column: 9, scope: !4870)
!4932 = !DILocation(line: 124, column: 19, scope: !4852)
!4933 = !DILocation(line: 125, column: 42, scope: !4852)
!4934 = !DILocation(line: 125, column: 52, scope: !4852)
!4935 = !DILocation(line: 125, column: 21, scope: !4852)
!4936 = !DILocation(line: 126, column: 21, scope: !4852)
!4937 = !DILocation(line: 124, column: 16, scope: !4852)
!4938 = !DILocation(line: 131, column: 7, scope: !4939)
!4939 = distinct !DILexicalBlock(scope: !4852, file: !4853, line: 131, column: 7)
!4940 = !DILocation(line: 131, column: 20, scope: !4939)
!4941 = !DILocation(line: 131, column: 7, scope: !4852)
!4942 = !DILocation(line: 133, column: 11, scope: !4943)
!4943 = distinct !DILexicalBlock(scope: !4944, file: !4853, line: 133, column: 11)
!4944 = distinct !DILexicalBlock(scope: !4939, file: !4853, line: 132, column: 5)
!4945 = !DILocation(line: 133, column: 17, scope: !4943)
!4946 = !DILocation(line: 133, column: 27, scope: !4943)
!4947 = !DILocation(line: 133, column: 35, scope: !4943)
!4948 = !DILocation(line: 133, column: 33, scope: !4943)
!4949 = !DILocation(line: 133, column: 11, scope: !4944)
!4950 = !DILocation(line: 135, column: 21, scope: !4951)
!4951 = distinct !DILexicalBlock(scope: !4943, file: !4853, line: 134, column: 9)
!4952 = !DILocation(line: 135, column: 12, scope: !4951)
!4953 = !DILocation(line: 135, column: 19, scope: !4951)
!4954 = !DILocation(line: 136, column: 16, scope: !4951)
!4955 = !DILocation(line: 136, column: 12, scope: !4951)
!4956 = !DILocation(line: 136, column: 14, scope: !4951)
!4957 = !DILocation(line: 137, column: 18, scope: !4951)
!4958 = !DILocation(line: 137, column: 22, scope: !4951)
!4959 = !DILocation(line: 137, column: 11, scope: !4951)
!4960 = !DILocation(line: 139, column: 7, scope: !4944)
!4961 = !DILocation(line: 142, column: 7, scope: !4962)
!4962 = distinct !DILexicalBlock(scope: !4852, file: !4853, line: 142, column: 7)
!4963 = !DILocation(line: 142, column: 20, scope: !4962)
!4964 = !DILocation(line: 142, column: 25, scope: !4962)
!4965 = !DILocation(line: 142, column: 30, scope: !4962)
!4966 = !DILocation(line: 142, column: 39, scope: !4962)
!4967 = !DILocation(line: 142, column: 42, scope: !4962)
!4968 = !DILocation(line: 142, column: 46, scope: !4962)
!4969 = !DILocation(line: 142, column: 7, scope: !4852)
!4970 = !DILocation(line: 143, column: 17, scope: !4962)
!4971 = !DILocation(line: 143, column: 5, scope: !4962)
!4972 = !DILocation(line: 144, column: 31, scope: !4852)
!4973 = !DILocation(line: 144, column: 7, scope: !4852)
!4974 = !DILocation(line: 144, column: 5, scope: !4852)
!4975 = !DILocation(line: 145, column: 7, scope: !4976)
!4976 = distinct !DILexicalBlock(scope: !4852, file: !4853, line: 145, column: 7)
!4977 = !DILocation(line: 145, column: 9, scope: !4976)
!4978 = !DILocation(line: 145, column: 7, scope: !4852)
!4979 = !DILocation(line: 146, column: 5, scope: !4976)
!4980 = !DILocation(line: 148, column: 9, scope: !4852)
!4981 = !DILocation(line: 149, column: 23, scope: !4852)
!4982 = !DILocation(line: 149, column: 37, scope: !4852)
!4983 = !DILocation(line: 149, column: 40, scope: !4852)
!4984 = !DILocation(line: 149, column: 50, scope: !4852)
!4985 = !DILocation(line: 149, column: 11, scope: !4852)
!4986 = !DILocation(line: 150, column: 22, scope: !4852)
!4987 = !DILocation(line: 150, column: 38, scope: !4852)
!4988 = !DILocation(line: 150, column: 42, scope: !4852)
!4989 = !DILocation(line: 150, column: 35, scope: !4852)
!4990 = !DILocation(line: 151, column: 33, scope: !4852)
!4991 = !DILocation(line: 151, column: 38, scope: !4852)
!4992 = !DILocation(line: 151, column: 42, scope: !4852)
!4993 = !DILocation(line: 151, column: 35, scope: !4852)
!4994 = !DILocation(line: 150, column: 11, scope: !4852)
!4995 = !DILocation(line: 148, column: 6, scope: !4852)
!4996 = !DILocation(line: 153, column: 7, scope: !4997)
!4997 = distinct !DILexicalBlock(scope: !4852, file: !4853, line: 153, column: 7)
!4998 = !DILocation(line: 153, column: 10, scope: !4997)
!4999 = !DILocation(line: 153, column: 7, scope: !4852)
!5000 = !DILocalVariable(name: "saved_errno", scope: !5001, file: !4853, line: 156, type: !72)
!5001 = distinct !DILexicalBlock(scope: !4997, file: !4853, line: 154, column: 5)
!5002 = !DILocation(line: 156, column: 11, scope: !5001)
!5003 = !DILocation(line: 156, column: 25, scope: !5001)
!5004 = !DILocation(line: 157, column: 13, scope: !5001)
!5005 = !DILocation(line: 157, column: 7, scope: !5001)
!5006 = !DILocation(line: 158, column: 15, scope: !5001)
!5007 = !DILocation(line: 158, column: 7, scope: !5001)
!5008 = !DILocation(line: 158, column: 13, scope: !5001)
!5009 = !DILocation(line: 159, column: 7, scope: !5001)
!5010 = !DILocation(line: 162, column: 8, scope: !5011)
!5011 = distinct !DILexicalBlock(scope: !4852, file: !4853, line: 162, column: 7)
!5012 = !DILocation(line: 162, column: 17, scope: !5011)
!5013 = !DILocation(line: 162, column: 20, scope: !5011)
!5014 = !DILocation(line: 162, column: 24, scope: !5011)
!5015 = !DILocation(line: 162, column: 7, scope: !4852)
!5016 = !DILocation(line: 164, column: 12, scope: !5017)
!5017 = distinct !DILexicalBlock(scope: !5011, file: !4853, line: 163, column: 5)
!5018 = !DILocation(line: 164, column: 8, scope: !5017)
!5019 = !DILocation(line: 164, column: 10, scope: !5017)
!5020 = !DILocation(line: 165, column: 9, scope: !5017)
!5021 = !DILocation(line: 166, column: 5, scope: !5017)
!5022 = !DILocation(line: 167, column: 13, scope: !4852)
!5023 = !DILocation(line: 167, column: 4, scope: !4852)
!5024 = !DILocation(line: 167, column: 11, scope: !4852)
!5025 = !DILocation(line: 185, column: 11, scope: !5026)
!5026 = distinct !DILexicalBlock(scope: !4852, file: !4853, line: 185, column: 7)
!5027 = !DILocation(line: 185, column: 9, scope: !5026)
!5028 = !DILocation(line: 185, column: 7, scope: !4852)
!5029 = !DILocalVariable(name: "first", scope: !5030, file: !4853, line: 187, type: !21)
!5030 = distinct !DILexicalBlock(scope: !5026, file: !4853, line: 186, column: 5)
!5031 = !DILocation(line: 187, column: 13, scope: !5030)
!5032 = !DILocation(line: 187, column: 22, scope: !5030)
!5033 = !DILocation(line: 187, column: 21, scope: !5030)
!5034 = !DILocalVariable(name: "next", scope: !5030, file: !4853, line: 188, type: !183)
!5035 = !DILocation(line: 188, column: 14, scope: !5030)
!5036 = !DILocalVariable(name: "groups_end", scope: !5030, file: !4853, line: 189, type: !183)
!5037 = !DILocation(line: 189, column: 14, scope: !5030)
!5038 = !DILocation(line: 189, column: 27, scope: !5030)
!5039 = !DILocation(line: 189, column: 31, scope: !5030)
!5040 = !DILocation(line: 189, column: 29, scope: !5030)
!5041 = !DILocation(line: 191, column: 19, scope: !5042)
!5042 = distinct !DILexicalBlock(scope: !5030, file: !4853, line: 191, column: 7)
!5043 = !DILocation(line: 191, column: 21, scope: !5042)
!5044 = !DILocation(line: 191, column: 17, scope: !5042)
!5045 = !DILocation(line: 191, column: 12, scope: !5042)
!5046 = !DILocation(line: 191, column: 26, scope: !5047)
!5047 = distinct !DILexicalBlock(scope: !5042, file: !4853, line: 191, column: 7)
!5048 = !DILocation(line: 191, column: 33, scope: !5047)
!5049 = !DILocation(line: 191, column: 31, scope: !5047)
!5050 = !DILocation(line: 191, column: 7, scope: !5042)
!5051 = !DILocation(line: 193, column: 16, scope: !5052)
!5052 = distinct !DILexicalBlock(scope: !5053, file: !4853, line: 193, column: 15)
!5053 = distinct !DILexicalBlock(scope: !5047, file: !4853, line: 192, column: 9)
!5054 = !DILocation(line: 193, column: 15, scope: !5052)
!5055 = !DILocation(line: 193, column: 24, scope: !5052)
!5056 = !DILocation(line: 193, column: 21, scope: !5052)
!5057 = !DILocation(line: 193, column: 30, scope: !5052)
!5058 = !DILocation(line: 193, column: 34, scope: !5052)
!5059 = !DILocation(line: 193, column: 33, scope: !5052)
!5060 = !DILocation(line: 193, column: 43, scope: !5052)
!5061 = !DILocation(line: 193, column: 42, scope: !5052)
!5062 = !DILocation(line: 193, column: 39, scope: !5052)
!5063 = !DILocation(line: 193, column: 15, scope: !5053)
!5064 = !DILocation(line: 194, column: 15, scope: !5052)
!5065 = !DILocation(line: 194, column: 13, scope: !5052)
!5066 = !DILocation(line: 196, column: 21, scope: !5052)
!5067 = !DILocation(line: 196, column: 20, scope: !5052)
!5068 = !DILocation(line: 196, column: 14, scope: !5052)
!5069 = !DILocation(line: 196, column: 18, scope: !5052)
!5070 = !DILocation(line: 197, column: 9, scope: !5053)
!5071 = !DILocation(line: 191, column: 49, scope: !5047)
!5072 = !DILocation(line: 191, column: 7, scope: !5047)
!5073 = distinct !{!5073, !5050, !5074}
!5074 = !DILocation(line: 197, column: 9, scope: !5042)
!5075 = !DILocation(line: 198, column: 5, scope: !5030)
!5076 = !DILocation(line: 200, column: 10, scope: !4852)
!5077 = !DILocation(line: 200, column: 3, scope: !4852)
!5078 = !DILocation(line: 201, column: 1, scope: !4852)
!5079 = !DILocalVariable(name: "username", arg: 1, scope: !5080, file: !4853, line: 66, type: !69)
!5080 = distinct !DISubprogram(name: "mgetgroups", scope: !4853, file: !4853, line: 66, type: !4241, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !5081, retainedNodes: !4)
!5081 = distinct !DICompileUnit(language: DW_LANG_C99, file: !248, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !249, nameTableKind: None)
!5082 = !DILocalVariable(name: "gid", arg: 2, scope: !5080, file: !4853, line: 66, type: !21)
!5083 = !DILocalVariable(name: "groups", arg: 3, scope: !5080, file: !4853, line: 66, type: !4243)
!5084 = !DILocalVariable(name: "max_n_groups", scope: !5080, file: !4853, line: 68, type: !72)
!5085 = !DILocalVariable(name: "ng", scope: !5080, file: !4853, line: 69, type: !72)
!5086 = !DILocalVariable(name: "g", scope: !5080, file: !4853, line: 70, type: !183)
!5087 = !DILocalVariable(name: "next", scope: !5088, file: !4853, line: 188, type: !183)
!5088 = distinct !DILexicalBlock(scope: !5089, file: !4853, line: 186, column: 5)
!5089 = distinct !DILexicalBlock(scope: !5090, file: !4853, line: 185, column: 7)
!5090 = distinct !DISubprogram(name: "mgetgroups", scope: !4853, file: !4853, line: 66, type: !4241, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !5091, retainedNodes: !4)
!5091 = distinct !DICompileUnit(language: DW_LANG_C99, file: !248, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !249, nameTableKind: None)
!5092 = !DILocalVariable(name: "groups_end", scope: !5088, file: !4853, line: 189, type: !183)
!5093 = distinct !DISubprogram(name: "realloc_groupbuf", scope: !4853, file: !4853, line: 43, type: !5094, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !247, retainedNodes: !4)
!5094 = !DISubroutineType(types: !5095)
!5095 = !{!183, !183, !134}
!5096 = !DILocalVariable(name: "g", arg: 1, scope: !5093, file: !4853, line: 43, type: !183)
!5097 = !DILocation(line: 43, column: 26, scope: !5093)
!5098 = !DILocalVariable(name: "num", arg: 2, scope: !5093, file: !4853, line: 43, type: !134)
!5099 = !DILocation(line: 43, column: 36, scope: !5093)
!5100 = !DILocation(line: 45, column: 7, scope: !5101)
!5101 = distinct !DILexicalBlock(scope: !5093, file: !4853, line: 45, column: 7)
!5102 = !DILocation(line: 45, column: 7, scope: !5093)
!5103 = !DILocation(line: 47, column: 7, scope: !5104)
!5104 = distinct !DILexicalBlock(scope: !5101, file: !4853, line: 46, column: 5)
!5105 = !DILocation(line: 47, column: 13, scope: !5104)
!5106 = !DILocation(line: 48, column: 7, scope: !5104)
!5107 = !DILocation(line: 51, column: 19, scope: !5093)
!5108 = !DILocation(line: 51, column: 22, scope: !5093)
!5109 = !DILocation(line: 51, column: 26, scope: !5093)
!5110 = !DILocation(line: 51, column: 10, scope: !5093)
!5111 = !DILocation(line: 51, column: 3, scope: !5093)
!5112 = !DILocation(line: 52, column: 1, scope: !5093)
!5113 = distinct !DISubprogram(name: "setlocale_null_r", scope: !5114, file: !5114, line: 269, type: !5115, scopeLine: 270, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !250, retainedNodes: !4)
!5114 = !DIFile(filename: "lib/setlocale_null.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!5115 = !DISubroutineType(types: !5116)
!5116 = !{!72, !72, !6, !134}
!5117 = !DILocalVariable(name: "category", arg: 1, scope: !5113, file: !5114, line: 269, type: !72)
!5118 = !DILocation(line: 269, column: 23, scope: !5113)
!5119 = !DILocalVariable(name: "buf", arg: 2, scope: !5113, file: !5114, line: 269, type: !6)
!5120 = !DILocation(line: 269, column: 39, scope: !5113)
!5121 = !DILocalVariable(name: "bufsize", arg: 3, scope: !5113, file: !5114, line: 269, type: !134)
!5122 = !DILocation(line: 269, column: 51, scope: !5113)
!5123 = !DILocation(line: 274, column: 35, scope: !5113)
!5124 = !DILocation(line: 274, column: 45, scope: !5113)
!5125 = !DILocation(line: 274, column: 50, scope: !5113)
!5126 = !DILocation(line: 274, column: 10, scope: !5113)
!5127 = !DILocation(line: 274, column: 3, scope: !5113)
!5128 = !DILocalVariable(name: "category", arg: 1, scope: !5129, file: !5114, line: 269, type: !72)
!5129 = distinct !DISubprogram(name: "setlocale_null_r", scope: !5114, file: !5114, line: 269, type: !5115, scopeLine: 270, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !5130, retainedNodes: !4)
!5130 = distinct !DICompileUnit(language: DW_LANG_C99, file: !251, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !212, nameTableKind: None)
!5131 = !DILocalVariable(name: "buf", arg: 2, scope: !5129, file: !5114, line: 269, type: !6)
!5132 = !DILocalVariable(name: "bufsize", arg: 3, scope: !5129, file: !5114, line: 269, type: !134)
!5133 = distinct !DISubprogram(name: "setlocale_null_unlocked", scope: !5114, file: !5114, line: 91, type: !5115, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !250, retainedNodes: !4)
!5134 = !DILocalVariable(name: "category", arg: 1, scope: !5133, file: !5114, line: 91, type: !72)
!5135 = !DILocation(line: 91, column: 30, scope: !5133)
!5136 = !DILocalVariable(name: "buf", arg: 2, scope: !5133, file: !5114, line: 91, type: !6)
!5137 = !DILocation(line: 91, column: 46, scope: !5133)
!5138 = !DILocalVariable(name: "bufsize", arg: 3, scope: !5133, file: !5114, line: 91, type: !134)
!5139 = !DILocation(line: 91, column: 58, scope: !5133)
!5140 = !DILocalVariable(name: "result", scope: !5133, file: !5114, line: 140, type: !69)
!5141 = !DILocation(line: 140, column: 15, scope: !5133)
!5142 = !DILocation(line: 140, column: 51, scope: !5133)
!5143 = !DILocation(line: 140, column: 24, scope: !5133)
!5144 = !DILocation(line: 142, column: 7, scope: !5145)
!5145 = distinct !DILexicalBlock(scope: !5133, file: !5114, line: 142, column: 7)
!5146 = !DILocation(line: 142, column: 14, scope: !5145)
!5147 = !DILocation(line: 142, column: 7, scope: !5133)
!5148 = !DILocation(line: 145, column: 11, scope: !5149)
!5149 = distinct !DILexicalBlock(scope: !5150, file: !5114, line: 145, column: 11)
!5150 = distinct !DILexicalBlock(scope: !5145, file: !5114, line: 143, column: 5)
!5151 = !DILocation(line: 145, column: 19, scope: !5149)
!5152 = !DILocation(line: 145, column: 11, scope: !5150)
!5153 = !DILocation(line: 149, column: 9, scope: !5149)
!5154 = !DILocation(line: 149, column: 16, scope: !5149)
!5155 = !DILocation(line: 150, column: 7, scope: !5150)
!5156 = !DILocalVariable(name: "length", scope: !5157, file: !5114, line: 154, type: !134)
!5157 = distinct !DILexicalBlock(scope: !5145, file: !5114, line: 153, column: 5)
!5158 = !DILocation(line: 154, column: 14, scope: !5157)
!5159 = !DILocation(line: 154, column: 31, scope: !5157)
!5160 = !DILocation(line: 154, column: 23, scope: !5157)
!5161 = !DILocation(line: 155, column: 11, scope: !5162)
!5162 = distinct !DILexicalBlock(scope: !5157, file: !5114, line: 155, column: 11)
!5163 = !DILocation(line: 155, column: 20, scope: !5162)
!5164 = !DILocation(line: 155, column: 18, scope: !5162)
!5165 = !DILocation(line: 155, column: 11, scope: !5157)
!5166 = !DILocation(line: 157, column: 19, scope: !5167)
!5167 = distinct !DILexicalBlock(scope: !5162, file: !5114, line: 156, column: 9)
!5168 = !DILocation(line: 157, column: 24, scope: !5167)
!5169 = !DILocation(line: 157, column: 32, scope: !5167)
!5170 = !DILocation(line: 157, column: 39, scope: !5167)
!5171 = !DILocation(line: 157, column: 11, scope: !5167)
!5172 = !DILocation(line: 158, column: 11, scope: !5167)
!5173 = !DILocation(line: 162, column: 15, scope: !5174)
!5174 = distinct !DILexicalBlock(scope: !5175, file: !5114, line: 162, column: 15)
!5175 = distinct !DILexicalBlock(scope: !5162, file: !5114, line: 161, column: 9)
!5176 = !DILocation(line: 162, column: 23, scope: !5174)
!5177 = !DILocation(line: 162, column: 15, scope: !5175)
!5178 = !DILocation(line: 167, column: 23, scope: !5179)
!5179 = distinct !DILexicalBlock(scope: !5174, file: !5114, line: 163, column: 13)
!5180 = !DILocation(line: 167, column: 28, scope: !5179)
!5181 = !DILocation(line: 167, column: 36, scope: !5179)
!5182 = !DILocation(line: 167, column: 44, scope: !5179)
!5183 = !DILocation(line: 167, column: 15, scope: !5179)
!5184 = !DILocation(line: 168, column: 15, scope: !5179)
!5185 = !DILocation(line: 168, column: 19, scope: !5179)
!5186 = !DILocation(line: 168, column: 27, scope: !5179)
!5187 = !DILocation(line: 168, column: 32, scope: !5179)
!5188 = !DILocation(line: 169, column: 13, scope: !5179)
!5189 = !DILocation(line: 170, column: 11, scope: !5175)
!5190 = !DILocation(line: 174, column: 1, scope: !5133)
!5191 = !DILocalVariable(name: "category", arg: 1, scope: !5192, file: !5114, line: 91, type: !72)
!5192 = distinct !DISubprogram(name: "setlocale_null_unlocked", scope: !5114, file: !5114, line: 91, type: !5115, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5193, retainedNodes: !4)
!5193 = distinct !DICompileUnit(language: DW_LANG_C99, file: !251, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !212, nameTableKind: None)
!5194 = !DILocalVariable(name: "buf", arg: 2, scope: !5192, file: !5114, line: 91, type: !6)
!5195 = !DILocalVariable(name: "bufsize", arg: 3, scope: !5192, file: !5114, line: 91, type: !134)
!5196 = !DILocalVariable(name: "result", scope: !5192, file: !5114, line: 140, type: !69)
!5197 = distinct !DISubprogram(name: "setlocale_null_androidfix", scope: !5114, file: !5114, line: 60, type: !5198, scopeLine: 61, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !250, retainedNodes: !4)
!5198 = !DISubroutineType(types: !5199)
!5199 = !{!69, !72}
!5200 = !DILocalVariable(name: "category", arg: 1, scope: !5197, file: !5114, line: 60, type: !72)
!5201 = !DILocation(line: 60, column: 32, scope: !5197)
!5202 = !DILocalVariable(name: "result", scope: !5197, file: !5114, line: 62, type: !69)
!5203 = !DILocation(line: 62, column: 15, scope: !5197)
!5204 = !DILocation(line: 62, column: 35, scope: !5197)
!5205 = !DILocation(line: 62, column: 24, scope: !5197)
!5206 = !DILocation(line: 87, column: 10, scope: !5197)
!5207 = !DILocation(line: 87, column: 3, scope: !5197)
!5208 = !DILocalVariable(name: "category", arg: 1, scope: !5209, file: !5114, line: 60, type: !72)
!5209 = distinct !DISubprogram(name: "setlocale_null_androidfix", scope: !5114, file: !5114, line: 60, type: !5198, scopeLine: 61, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5210, retainedNodes: !4)
!5210 = distinct !DICompileUnit(language: DW_LANG_C99, file: !251, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !212, nameTableKind: None)
!5211 = !DILocalVariable(name: "result", scope: !5209, file: !5114, line: 62, type: !69)
!5212 = distinct !DISubprogram(name: "rpl_fclose", scope: !5213, file: !5213, line: 58, type: !5214, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !252, retainedNodes: !4)
!5213 = !DIFile(filename: "lib/fclose.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!5214 = !DISubroutineType(types: !5215)
!5215 = !{!72, !5216}
!5216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5217, size: 64)
!5217 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !3732, line: 7, baseType: !5218)
!5218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !3734, line: 49, size: 1728, elements: !5219)
!5219 = !{!5220, !5221, !5222, !5223, !5224, !5225, !5226, !5227, !5228, !5229, !5230, !5231, !5232, !5233, !5235, !5236, !5237, !5238, !5239, !5240, !5241, !5242, !5243, !5244, !5245, !5246, !5247, !5248, !5249}
!5220 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !5218, file: !3734, line: 51, baseType: !72, size: 32)
!5221 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !5218, file: !3734, line: 54, baseType: !6, size: 64, offset: 64)
!5222 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !5218, file: !3734, line: 55, baseType: !6, size: 64, offset: 128)
!5223 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !5218, file: !3734, line: 56, baseType: !6, size: 64, offset: 192)
!5224 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !5218, file: !3734, line: 57, baseType: !6, size: 64, offset: 256)
!5225 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !5218, file: !3734, line: 58, baseType: !6, size: 64, offset: 320)
!5226 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !5218, file: !3734, line: 59, baseType: !6, size: 64, offset: 384)
!5227 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !5218, file: !3734, line: 60, baseType: !6, size: 64, offset: 448)
!5228 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !5218, file: !3734, line: 61, baseType: !6, size: 64, offset: 512)
!5229 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !5218, file: !3734, line: 64, baseType: !6, size: 64, offset: 576)
!5230 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !5218, file: !3734, line: 65, baseType: !6, size: 64, offset: 640)
!5231 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !5218, file: !3734, line: 66, baseType: !6, size: 64, offset: 704)
!5232 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !5218, file: !3734, line: 68, baseType: !3749, size: 64, offset: 768)
!5233 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !5218, file: !3734, line: 70, baseType: !5234, size: 64, offset: 832)
!5234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5218, size: 64)
!5235 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !5218, file: !3734, line: 72, baseType: !72, size: 32, offset: 896)
!5236 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !5218, file: !3734, line: 73, baseType: !72, size: 32, offset: 928)
!5237 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !5218, file: !3734, line: 74, baseType: !3756, size: 64, offset: 960)
!5238 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !5218, file: !3734, line: 77, baseType: !133, size: 16, offset: 1024)
!5239 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !5218, file: !3734, line: 78, baseType: !3759, size: 8, offset: 1040)
!5240 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !5218, file: !3734, line: 79, baseType: !3761, size: 8, offset: 1048)
!5241 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !5218, file: !3734, line: 81, baseType: !3765, size: 64, offset: 1088)
!5242 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !5218, file: !3734, line: 89, baseType: !3768, size: 64, offset: 1152)
!5243 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !5218, file: !3734, line: 91, baseType: !3770, size: 64, offset: 1216)
!5244 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !5218, file: !3734, line: 92, baseType: !3773, size: 64, offset: 1280)
!5245 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !5218, file: !3734, line: 93, baseType: !5234, size: 64, offset: 1344)
!5246 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !5218, file: !3734, line: 94, baseType: !8, size: 64, offset: 1408)
!5247 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !5218, file: !3734, line: 95, baseType: !134, size: 64, offset: 1472)
!5248 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !5218, file: !3734, line: 96, baseType: !72, size: 32, offset: 1536)
!5249 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !5218, file: !3734, line: 98, baseType: !3780, size: 160, offset: 1568)
!5250 = !DILocalVariable(name: "fp", arg: 1, scope: !5212, file: !5213, line: 58, type: !5216)
!5251 = !DILocation(line: 58, column: 19, scope: !5212)
!5252 = !DILocalVariable(name: "saved_errno", scope: !5212, file: !5213, line: 60, type: !72)
!5253 = !DILocation(line: 60, column: 7, scope: !5212)
!5254 = !DILocalVariable(name: "fd", scope: !5212, file: !5213, line: 61, type: !72)
!5255 = !DILocation(line: 61, column: 7, scope: !5212)
!5256 = !DILocalVariable(name: "result", scope: !5212, file: !5213, line: 62, type: !72)
!5257 = !DILocation(line: 62, column: 7, scope: !5212)
!5258 = !DILocation(line: 65, column: 16, scope: !5212)
!5259 = !DILocation(line: 65, column: 8, scope: !5212)
!5260 = !DILocation(line: 65, column: 6, scope: !5212)
!5261 = !DILocation(line: 66, column: 7, scope: !5262)
!5262 = distinct !DILexicalBlock(scope: !5212, file: !5213, line: 66, column: 7)
!5263 = !DILocation(line: 66, column: 10, scope: !5262)
!5264 = !DILocation(line: 66, column: 7, scope: !5212)
!5265 = !DILocation(line: 67, column: 28, scope: !5262)
!5266 = !DILocation(line: 67, column: 12, scope: !5262)
!5267 = !DILocation(line: 67, column: 5, scope: !5262)
!5268 = !DILocation(line: 72, column: 9, scope: !5269)
!5269 = distinct !DILexicalBlock(scope: !5212, file: !5213, line: 72, column: 7)
!5270 = !DILocation(line: 72, column: 23, scope: !5269)
!5271 = !DILocation(line: 72, column: 41, scope: !5269)
!5272 = !DILocation(line: 72, column: 33, scope: !5269)
!5273 = !DILocation(line: 72, column: 26, scope: !5269)
!5274 = !DILocation(line: 72, column: 59, scope: !5269)
!5275 = !DILocation(line: 73, column: 7, scope: !5269)
!5276 = !DILocation(line: 73, column: 18, scope: !5269)
!5277 = !DILocation(line: 73, column: 10, scope: !5269)
!5278 = !DILocation(line: 72, column: 7, scope: !5212)
!5279 = !DILocation(line: 74, column: 19, scope: !5269)
!5280 = !DILocation(line: 74, column: 17, scope: !5269)
!5281 = !DILocation(line: 74, column: 5, scope: !5269)
!5282 = !DILocation(line: 100, column: 28, scope: !5212)
!5283 = !DILocation(line: 100, column: 12, scope: !5212)
!5284 = !DILocation(line: 100, column: 10, scope: !5212)
!5285 = !DILocation(line: 105, column: 7, scope: !5286)
!5286 = distinct !DILexicalBlock(scope: !5212, file: !5213, line: 105, column: 7)
!5287 = !DILocation(line: 105, column: 19, scope: !5286)
!5288 = !DILocation(line: 105, column: 7, scope: !5212)
!5289 = !DILocation(line: 107, column: 15, scope: !5290)
!5290 = distinct !DILexicalBlock(scope: !5286, file: !5213, line: 106, column: 5)
!5291 = !DILocation(line: 107, column: 7, scope: !5290)
!5292 = !DILocation(line: 107, column: 13, scope: !5290)
!5293 = !DILocation(line: 108, column: 14, scope: !5290)
!5294 = !DILocation(line: 109, column: 5, scope: !5290)
!5295 = !DILocation(line: 111, column: 10, scope: !5212)
!5296 = !DILocation(line: 111, column: 3, scope: !5212)
!5297 = !DILocation(line: 112, column: 1, scope: !5212)
!5298 = !DILocalVariable(name: "fp", arg: 1, scope: !5299, file: !5213, line: 58, type: !5302)
!5299 = distinct !DISubprogram(name: "rpl_fclose", scope: !5213, file: !5213, line: 58, type: !5300, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !5336, retainedNodes: !4)
!5300 = !DISubroutineType(types: !5301)
!5301 = !{!72, !5302}
!5302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5303, size: 64)
!5303 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !3732, line: 7, baseType: !5304)
!5304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !3734, line: 49, size: 1728, elements: !5305)
!5305 = !{!5306, !5307, !5308, !5309, !5310, !5311, !5312, !5313, !5314, !5315, !5316, !5317, !5318, !5319, !5321, !5322, !5323, !5324, !5325, !5326, !5327, !5328, !5329, !5330, !5331, !5332, !5333, !5334, !5335}
!5306 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !5304, file: !3734, line: 51, baseType: !72, size: 32)
!5307 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !5304, file: !3734, line: 54, baseType: !6, size: 64, offset: 64)
!5308 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !5304, file: !3734, line: 55, baseType: !6, size: 64, offset: 128)
!5309 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !5304, file: !3734, line: 56, baseType: !6, size: 64, offset: 192)
!5310 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !5304, file: !3734, line: 57, baseType: !6, size: 64, offset: 256)
!5311 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !5304, file: !3734, line: 58, baseType: !6, size: 64, offset: 320)
!5312 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !5304, file: !3734, line: 59, baseType: !6, size: 64, offset: 384)
!5313 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !5304, file: !3734, line: 60, baseType: !6, size: 64, offset: 448)
!5314 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !5304, file: !3734, line: 61, baseType: !6, size: 64, offset: 512)
!5315 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !5304, file: !3734, line: 64, baseType: !6, size: 64, offset: 576)
!5316 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !5304, file: !3734, line: 65, baseType: !6, size: 64, offset: 640)
!5317 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !5304, file: !3734, line: 66, baseType: !6, size: 64, offset: 704)
!5318 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !5304, file: !3734, line: 68, baseType: !3749, size: 64, offset: 768)
!5319 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !5304, file: !3734, line: 70, baseType: !5320, size: 64, offset: 832)
!5320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5304, size: 64)
!5321 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !5304, file: !3734, line: 72, baseType: !72, size: 32, offset: 896)
!5322 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !5304, file: !3734, line: 73, baseType: !72, size: 32, offset: 928)
!5323 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !5304, file: !3734, line: 74, baseType: !3756, size: 64, offset: 960)
!5324 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !5304, file: !3734, line: 77, baseType: !133, size: 16, offset: 1024)
!5325 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !5304, file: !3734, line: 78, baseType: !3759, size: 8, offset: 1040)
!5326 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !5304, file: !3734, line: 79, baseType: !3761, size: 8, offset: 1048)
!5327 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !5304, file: !3734, line: 81, baseType: !3765, size: 64, offset: 1088)
!5328 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !5304, file: !3734, line: 89, baseType: !3768, size: 64, offset: 1152)
!5329 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !5304, file: !3734, line: 91, baseType: !3770, size: 64, offset: 1216)
!5330 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !5304, file: !3734, line: 92, baseType: !3773, size: 64, offset: 1280)
!5331 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !5304, file: !3734, line: 93, baseType: !5320, size: 64, offset: 1344)
!5332 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !5304, file: !3734, line: 94, baseType: !8, size: 64, offset: 1408)
!5333 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !5304, file: !3734, line: 95, baseType: !134, size: 64, offset: 1472)
!5334 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !5304, file: !3734, line: 96, baseType: !72, size: 32, offset: 1536)
!5335 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !5304, file: !3734, line: 98, baseType: !3780, size: 160, offset: 1568)
!5336 = distinct !DICompileUnit(language: DW_LANG_C99, file: !253, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, nameTableKind: None)
!5337 = !DILocalVariable(name: "saved_errno", scope: !5299, file: !5213, line: 60, type: !72)
!5338 = !DILocalVariable(name: "fd", scope: !5299, file: !5213, line: 61, type: !72)
!5339 = !DILocalVariable(name: "result", scope: !5299, file: !5213, line: 62, type: !72)
!5340 = distinct !DISubprogram(name: "rpl_fflush", scope: !5341, file: !5341, line: 129, type: !5342, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !254, retainedNodes: !4)
!5341 = !DIFile(filename: "lib/fflush.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!5342 = !DISubroutineType(types: !5343)
!5343 = !{!72, !5344}
!5344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5345, size: 64)
!5345 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !3732, line: 7, baseType: !5346)
!5346 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !3734, line: 49, size: 1728, elements: !5347)
!5347 = !{!5348, !5349, !5350, !5351, !5352, !5353, !5354, !5355, !5356, !5357, !5358, !5359, !5360, !5361, !5363, !5364, !5365, !5366, !5367, !5368, !5369, !5370, !5371, !5372, !5373, !5374, !5375, !5376, !5377}
!5348 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !5346, file: !3734, line: 51, baseType: !72, size: 32)
!5349 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !5346, file: !3734, line: 54, baseType: !6, size: 64, offset: 64)
!5350 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !5346, file: !3734, line: 55, baseType: !6, size: 64, offset: 128)
!5351 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !5346, file: !3734, line: 56, baseType: !6, size: 64, offset: 192)
!5352 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !5346, file: !3734, line: 57, baseType: !6, size: 64, offset: 256)
!5353 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !5346, file: !3734, line: 58, baseType: !6, size: 64, offset: 320)
!5354 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !5346, file: !3734, line: 59, baseType: !6, size: 64, offset: 384)
!5355 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !5346, file: !3734, line: 60, baseType: !6, size: 64, offset: 448)
!5356 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !5346, file: !3734, line: 61, baseType: !6, size: 64, offset: 512)
!5357 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !5346, file: !3734, line: 64, baseType: !6, size: 64, offset: 576)
!5358 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !5346, file: !3734, line: 65, baseType: !6, size: 64, offset: 640)
!5359 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !5346, file: !3734, line: 66, baseType: !6, size: 64, offset: 704)
!5360 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !5346, file: !3734, line: 68, baseType: !3749, size: 64, offset: 768)
!5361 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !5346, file: !3734, line: 70, baseType: !5362, size: 64, offset: 832)
!5362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5346, size: 64)
!5363 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !5346, file: !3734, line: 72, baseType: !72, size: 32, offset: 896)
!5364 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !5346, file: !3734, line: 73, baseType: !72, size: 32, offset: 928)
!5365 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !5346, file: !3734, line: 74, baseType: !3756, size: 64, offset: 960)
!5366 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !5346, file: !3734, line: 77, baseType: !133, size: 16, offset: 1024)
!5367 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !5346, file: !3734, line: 78, baseType: !3759, size: 8, offset: 1040)
!5368 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !5346, file: !3734, line: 79, baseType: !3761, size: 8, offset: 1048)
!5369 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !5346, file: !3734, line: 81, baseType: !3765, size: 64, offset: 1088)
!5370 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !5346, file: !3734, line: 89, baseType: !3768, size: 64, offset: 1152)
!5371 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !5346, file: !3734, line: 91, baseType: !3770, size: 64, offset: 1216)
!5372 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !5346, file: !3734, line: 92, baseType: !3773, size: 64, offset: 1280)
!5373 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !5346, file: !3734, line: 93, baseType: !5362, size: 64, offset: 1344)
!5374 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !5346, file: !3734, line: 94, baseType: !8, size: 64, offset: 1408)
!5375 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !5346, file: !3734, line: 95, baseType: !134, size: 64, offset: 1472)
!5376 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !5346, file: !3734, line: 96, baseType: !72, size: 32, offset: 1536)
!5377 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !5346, file: !3734, line: 98, baseType: !3780, size: 160, offset: 1568)
!5378 = !DILocalVariable(name: "stream", arg: 1, scope: !5340, file: !5341, line: 129, type: !5344)
!5379 = !DILocation(line: 129, column: 19, scope: !5340)
!5380 = !DILocation(line: 150, column: 7, scope: !5381)
!5381 = distinct !DILexicalBlock(scope: !5340, file: !5341, line: 150, column: 7)
!5382 = !DILocation(line: 150, column: 14, scope: !5381)
!5383 = !DILocation(line: 150, column: 22, scope: !5381)
!5384 = !DILocation(line: 150, column: 27, scope: !5381)
!5385 = !DILocation(line: 150, column: 7, scope: !5340)
!5386 = !DILocation(line: 151, column: 20, scope: !5381)
!5387 = !DILocation(line: 151, column: 12, scope: !5381)
!5388 = !DILocation(line: 151, column: 5, scope: !5381)
!5389 = !DILocation(line: 156, column: 44, scope: !5340)
!5390 = !DILocation(line: 156, column: 3, scope: !5340)
!5391 = !DILocation(line: 158, column: 18, scope: !5340)
!5392 = !DILocation(line: 158, column: 10, scope: !5340)
!5393 = !DILocation(line: 158, column: 3, scope: !5340)
!5394 = !DILocation(line: 235, column: 1, scope: !5340)
!5395 = !DILocalVariable(name: "stream", arg: 1, scope: !5396, file: !5341, line: 129, type: !5399)
!5396 = distinct !DISubprogram(name: "rpl_fflush", scope: !5341, file: !5341, line: 129, type: !5397, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !5433, retainedNodes: !4)
!5397 = !DISubroutineType(types: !5398)
!5398 = !{!72, !5399}
!5399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5400, size: 64)
!5400 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !3732, line: 7, baseType: !5401)
!5401 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !3734, line: 49, size: 1728, elements: !5402)
!5402 = !{!5403, !5404, !5405, !5406, !5407, !5408, !5409, !5410, !5411, !5412, !5413, !5414, !5415, !5416, !5418, !5419, !5420, !5421, !5422, !5423, !5424, !5425, !5426, !5427, !5428, !5429, !5430, !5431, !5432}
!5403 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !5401, file: !3734, line: 51, baseType: !72, size: 32)
!5404 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !5401, file: !3734, line: 54, baseType: !6, size: 64, offset: 64)
!5405 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !5401, file: !3734, line: 55, baseType: !6, size: 64, offset: 128)
!5406 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !5401, file: !3734, line: 56, baseType: !6, size: 64, offset: 192)
!5407 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !5401, file: !3734, line: 57, baseType: !6, size: 64, offset: 256)
!5408 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !5401, file: !3734, line: 58, baseType: !6, size: 64, offset: 320)
!5409 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !5401, file: !3734, line: 59, baseType: !6, size: 64, offset: 384)
!5410 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !5401, file: !3734, line: 60, baseType: !6, size: 64, offset: 448)
!5411 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !5401, file: !3734, line: 61, baseType: !6, size: 64, offset: 512)
!5412 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !5401, file: !3734, line: 64, baseType: !6, size: 64, offset: 576)
!5413 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !5401, file: !3734, line: 65, baseType: !6, size: 64, offset: 640)
!5414 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !5401, file: !3734, line: 66, baseType: !6, size: 64, offset: 704)
!5415 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !5401, file: !3734, line: 68, baseType: !3749, size: 64, offset: 768)
!5416 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !5401, file: !3734, line: 70, baseType: !5417, size: 64, offset: 832)
!5417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5401, size: 64)
!5418 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !5401, file: !3734, line: 72, baseType: !72, size: 32, offset: 896)
!5419 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !5401, file: !3734, line: 73, baseType: !72, size: 32, offset: 928)
!5420 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !5401, file: !3734, line: 74, baseType: !3756, size: 64, offset: 960)
!5421 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !5401, file: !3734, line: 77, baseType: !133, size: 16, offset: 1024)
!5422 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !5401, file: !3734, line: 78, baseType: !3759, size: 8, offset: 1040)
!5423 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !5401, file: !3734, line: 79, baseType: !3761, size: 8, offset: 1048)
!5424 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !5401, file: !3734, line: 81, baseType: !3765, size: 64, offset: 1088)
!5425 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !5401, file: !3734, line: 89, baseType: !3768, size: 64, offset: 1152)
!5426 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !5401, file: !3734, line: 91, baseType: !3770, size: 64, offset: 1216)
!5427 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !5401, file: !3734, line: 92, baseType: !3773, size: 64, offset: 1280)
!5428 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !5401, file: !3734, line: 93, baseType: !5417, size: 64, offset: 1344)
!5429 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !5401, file: !3734, line: 94, baseType: !8, size: 64, offset: 1408)
!5430 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !5401, file: !3734, line: 95, baseType: !134, size: 64, offset: 1472)
!5431 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !5401, file: !3734, line: 96, baseType: !72, size: 32, offset: 1536)
!5432 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !5401, file: !3734, line: 98, baseType: !3780, size: 160, offset: 1568)
!5433 = distinct !DICompileUnit(language: DW_LANG_C99, file: !255, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !212, nameTableKind: None)
!5434 = distinct !DISubprogram(name: "clear_ungetc_buffer_preserving_position", scope: !5341, file: !5341, line: 41, type: !5435, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !254, retainedNodes: !4)
!5435 = !DISubroutineType(types: !5436)
!5436 = !{null, !5344}
!5437 = !DILocalVariable(name: "fp", arg: 1, scope: !5434, file: !5341, line: 41, type: !5344)
!5438 = !DILocation(line: 41, column: 48, scope: !5434)
!5439 = !DILocation(line: 43, column: 7, scope: !5440)
!5440 = distinct !DILexicalBlock(scope: !5434, file: !5341, line: 43, column: 7)
!5441 = !DILocation(line: 43, column: 11, scope: !5440)
!5442 = !DILocation(line: 43, column: 18, scope: !5440)
!5443 = !DILocation(line: 43, column: 7, scope: !5434)
!5444 = !DILocation(line: 45, column: 13, scope: !5440)
!5445 = !DILocation(line: 45, column: 5, scope: !5440)
!5446 = !DILocation(line: 46, column: 1, scope: !5434)
!5447 = !DILocalVariable(name: "fp", arg: 1, scope: !5448, file: !5341, line: 41, type: !5451)
!5448 = distinct !DISubprogram(name: "clear_ungetc_buffer_preserving_position", scope: !5341, file: !5341, line: 41, type: !5449, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5485, retainedNodes: !4)
!5449 = !DISubroutineType(types: !5450)
!5450 = !{null, !5451}
!5451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5452, size: 64)
!5452 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !3732, line: 7, baseType: !5453)
!5453 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !3734, line: 49, size: 1728, elements: !5454)
!5454 = !{!5455, !5456, !5457, !5458, !5459, !5460, !5461, !5462, !5463, !5464, !5465, !5466, !5467, !5468, !5470, !5471, !5472, !5473, !5474, !5475, !5476, !5477, !5478, !5479, !5480, !5481, !5482, !5483, !5484}
!5455 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !5453, file: !3734, line: 51, baseType: !72, size: 32)
!5456 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !5453, file: !3734, line: 54, baseType: !6, size: 64, offset: 64)
!5457 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !5453, file: !3734, line: 55, baseType: !6, size: 64, offset: 128)
!5458 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !5453, file: !3734, line: 56, baseType: !6, size: 64, offset: 192)
!5459 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !5453, file: !3734, line: 57, baseType: !6, size: 64, offset: 256)
!5460 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !5453, file: !3734, line: 58, baseType: !6, size: 64, offset: 320)
!5461 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !5453, file: !3734, line: 59, baseType: !6, size: 64, offset: 384)
!5462 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !5453, file: !3734, line: 60, baseType: !6, size: 64, offset: 448)
!5463 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !5453, file: !3734, line: 61, baseType: !6, size: 64, offset: 512)
!5464 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !5453, file: !3734, line: 64, baseType: !6, size: 64, offset: 576)
!5465 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !5453, file: !3734, line: 65, baseType: !6, size: 64, offset: 640)
!5466 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !5453, file: !3734, line: 66, baseType: !6, size: 64, offset: 704)
!5467 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !5453, file: !3734, line: 68, baseType: !3749, size: 64, offset: 768)
!5468 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !5453, file: !3734, line: 70, baseType: !5469, size: 64, offset: 832)
!5469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5453, size: 64)
!5470 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !5453, file: !3734, line: 72, baseType: !72, size: 32, offset: 896)
!5471 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !5453, file: !3734, line: 73, baseType: !72, size: 32, offset: 928)
!5472 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !5453, file: !3734, line: 74, baseType: !3756, size: 64, offset: 960)
!5473 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !5453, file: !3734, line: 77, baseType: !133, size: 16, offset: 1024)
!5474 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !5453, file: !3734, line: 78, baseType: !3759, size: 8, offset: 1040)
!5475 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !5453, file: !3734, line: 79, baseType: !3761, size: 8, offset: 1048)
!5476 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !5453, file: !3734, line: 81, baseType: !3765, size: 64, offset: 1088)
!5477 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !5453, file: !3734, line: 89, baseType: !3768, size: 64, offset: 1152)
!5478 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !5453, file: !3734, line: 91, baseType: !3770, size: 64, offset: 1216)
!5479 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !5453, file: !3734, line: 92, baseType: !3773, size: 64, offset: 1280)
!5480 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !5453, file: !3734, line: 93, baseType: !5469, size: 64, offset: 1344)
!5481 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !5453, file: !3734, line: 94, baseType: !8, size: 64, offset: 1408)
!5482 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !5453, file: !3734, line: 95, baseType: !134, size: 64, offset: 1472)
!5483 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !5453, file: !3734, line: 96, baseType: !72, size: 32, offset: 1536)
!5484 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !5453, file: !3734, line: 98, baseType: !3780, size: 160, offset: 1568)
!5485 = distinct !DICompileUnit(language: DW_LANG_C99, file: !255, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !212, nameTableKind: None)
!5486 = distinct !DISubprogram(name: "rpl_fseeko", scope: !5487, file: !5487, line: 28, type: !5488, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !256, retainedNodes: !4)
!5487 = !DIFile(filename: "lib/fseeko.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!5488 = !DISubroutineType(types: !5489)
!5489 = !{!72, !5490, !5524, !72}
!5490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5491, size: 64)
!5491 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !3732, line: 7, baseType: !5492)
!5492 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !3734, line: 49, size: 1728, elements: !5493)
!5493 = !{!5494, !5495, !5496, !5497, !5498, !5499, !5500, !5501, !5502, !5503, !5504, !5505, !5506, !5507, !5509, !5510, !5511, !5512, !5513, !5514, !5515, !5516, !5517, !5518, !5519, !5520, !5521, !5522, !5523}
!5494 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !5492, file: !3734, line: 51, baseType: !72, size: 32)
!5495 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !5492, file: !3734, line: 54, baseType: !6, size: 64, offset: 64)
!5496 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !5492, file: !3734, line: 55, baseType: !6, size: 64, offset: 128)
!5497 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !5492, file: !3734, line: 56, baseType: !6, size: 64, offset: 192)
!5498 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !5492, file: !3734, line: 57, baseType: !6, size: 64, offset: 256)
!5499 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !5492, file: !3734, line: 58, baseType: !6, size: 64, offset: 320)
!5500 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !5492, file: !3734, line: 59, baseType: !6, size: 64, offset: 384)
!5501 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !5492, file: !3734, line: 60, baseType: !6, size: 64, offset: 448)
!5502 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !5492, file: !3734, line: 61, baseType: !6, size: 64, offset: 512)
!5503 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !5492, file: !3734, line: 64, baseType: !6, size: 64, offset: 576)
!5504 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !5492, file: !3734, line: 65, baseType: !6, size: 64, offset: 640)
!5505 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !5492, file: !3734, line: 66, baseType: !6, size: 64, offset: 704)
!5506 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !5492, file: !3734, line: 68, baseType: !3749, size: 64, offset: 768)
!5507 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !5492, file: !3734, line: 70, baseType: !5508, size: 64, offset: 832)
!5508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5492, size: 64)
!5509 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !5492, file: !3734, line: 72, baseType: !72, size: 32, offset: 896)
!5510 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !5492, file: !3734, line: 73, baseType: !72, size: 32, offset: 928)
!5511 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !5492, file: !3734, line: 74, baseType: !3756, size: 64, offset: 960)
!5512 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !5492, file: !3734, line: 77, baseType: !133, size: 16, offset: 1024)
!5513 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !5492, file: !3734, line: 78, baseType: !3759, size: 8, offset: 1040)
!5514 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !5492, file: !3734, line: 79, baseType: !3761, size: 8, offset: 1048)
!5515 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !5492, file: !3734, line: 81, baseType: !3765, size: 64, offset: 1088)
!5516 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !5492, file: !3734, line: 89, baseType: !3768, size: 64, offset: 1152)
!5517 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !5492, file: !3734, line: 91, baseType: !3770, size: 64, offset: 1216)
!5518 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !5492, file: !3734, line: 92, baseType: !3773, size: 64, offset: 1280)
!5519 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !5492, file: !3734, line: 93, baseType: !5508, size: 64, offset: 1344)
!5520 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !5492, file: !3734, line: 94, baseType: !8, size: 64, offset: 1408)
!5521 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !5492, file: !3734, line: 95, baseType: !134, size: 64, offset: 1472)
!5522 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !5492, file: !3734, line: 96, baseType: !72, size: 32, offset: 1536)
!5523 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !5492, file: !3734, line: 98, baseType: !3780, size: 160, offset: 1568)
!5524 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_t", file: !871, line: 63, baseType: !3756)
!5525 = !DILocalVariable(name: "fp", arg: 1, scope: !5486, file: !5487, line: 28, type: !5490)
!5526 = !DILocation(line: 28, column: 15, scope: !5486)
!5527 = !DILocalVariable(name: "offset", arg: 2, scope: !5486, file: !5487, line: 28, type: !5524)
!5528 = !DILocation(line: 28, column: 25, scope: !5486)
!5529 = !DILocalVariable(name: "whence", arg: 3, scope: !5486, file: !5487, line: 28, type: !72)
!5530 = !DILocation(line: 28, column: 37, scope: !5486)
!5531 = !DILocation(line: 52, column: 7, scope: !5532)
!5532 = distinct !DILexicalBlock(scope: !5486, file: !5487, line: 52, column: 7)
!5533 = !DILocation(line: 52, column: 11, scope: !5532)
!5534 = !DILocation(line: 52, column: 27, scope: !5532)
!5535 = !DILocation(line: 52, column: 31, scope: !5532)
!5536 = !DILocation(line: 52, column: 24, scope: !5532)
!5537 = !DILocation(line: 53, column: 7, scope: !5532)
!5538 = !DILocation(line: 53, column: 10, scope: !5532)
!5539 = !DILocation(line: 53, column: 14, scope: !5532)
!5540 = !DILocation(line: 53, column: 31, scope: !5532)
!5541 = !DILocation(line: 53, column: 35, scope: !5532)
!5542 = !DILocation(line: 53, column: 28, scope: !5532)
!5543 = !DILocation(line: 54, column: 7, scope: !5532)
!5544 = !DILocation(line: 54, column: 10, scope: !5532)
!5545 = !DILocation(line: 54, column: 14, scope: !5532)
!5546 = !DILocation(line: 54, column: 28, scope: !5532)
!5547 = !DILocation(line: 52, column: 7, scope: !5486)
!5548 = !DILocalVariable(name: "pos", scope: !5549, file: !5487, line: 117, type: !5524)
!5549 = distinct !DILexicalBlock(scope: !5532, file: !5487, line: 113, column: 5)
!5550 = !DILocation(line: 117, column: 13, scope: !5549)
!5551 = !DILocation(line: 117, column: 34, scope: !5549)
!5552 = !DILocation(line: 117, column: 26, scope: !5549)
!5553 = !DILocation(line: 117, column: 39, scope: !5549)
!5554 = !DILocation(line: 117, column: 47, scope: !5549)
!5555 = !DILocation(line: 117, column: 19, scope: !5549)
!5556 = !DILocation(line: 118, column: 11, scope: !5557)
!5557 = distinct !DILexicalBlock(scope: !5549, file: !5487, line: 118, column: 11)
!5558 = !DILocation(line: 118, column: 15, scope: !5557)
!5559 = !DILocation(line: 118, column: 11, scope: !5549)
!5560 = !DILocation(line: 124, column: 11, scope: !5561)
!5561 = distinct !DILexicalBlock(scope: !5557, file: !5487, line: 119, column: 9)
!5562 = !DILocation(line: 129, column: 7, scope: !5549)
!5563 = !DILocation(line: 129, column: 11, scope: !5549)
!5564 = !DILocation(line: 129, column: 18, scope: !5549)
!5565 = !DILocation(line: 130, column: 21, scope: !5549)
!5566 = !DILocation(line: 130, column: 7, scope: !5549)
!5567 = !DILocation(line: 130, column: 11, scope: !5549)
!5568 = !DILocation(line: 130, column: 19, scope: !5549)
!5569 = !DILocation(line: 161, column: 7, scope: !5549)
!5570 = !DILocation(line: 163, column: 18, scope: !5486)
!5571 = !DILocation(line: 163, column: 22, scope: !5486)
!5572 = !DILocation(line: 163, column: 30, scope: !5486)
!5573 = !DILocation(line: 163, column: 10, scope: !5486)
!5574 = !DILocation(line: 163, column: 3, scope: !5486)
!5575 = !DILocation(line: 164, column: 1, scope: !5486)
!5576 = !DILocalVariable(name: "fp", arg: 1, scope: !5577, file: !5487, line: 28, type: !5580)
!5577 = distinct !DISubprogram(name: "rpl_fseeko", scope: !5487, file: !5487, line: 28, type: !5578, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !5614, retainedNodes: !4)
!5578 = !DISubroutineType(types: !5579)
!5579 = !{!72, !5580, !5524, !72}
!5580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5581, size: 64)
!5581 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !3732, line: 7, baseType: !5582)
!5582 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !3734, line: 49, size: 1728, elements: !5583)
!5583 = !{!5584, !5585, !5586, !5587, !5588, !5589, !5590, !5591, !5592, !5593, !5594, !5595, !5596, !5597, !5599, !5600, !5601, !5602, !5603, !5604, !5605, !5606, !5607, !5608, !5609, !5610, !5611, !5612, !5613}
!5584 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !5582, file: !3734, line: 51, baseType: !72, size: 32)
!5585 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !5582, file: !3734, line: 54, baseType: !6, size: 64, offset: 64)
!5586 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !5582, file: !3734, line: 55, baseType: !6, size: 64, offset: 128)
!5587 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !5582, file: !3734, line: 56, baseType: !6, size: 64, offset: 192)
!5588 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !5582, file: !3734, line: 57, baseType: !6, size: 64, offset: 256)
!5589 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !5582, file: !3734, line: 58, baseType: !6, size: 64, offset: 320)
!5590 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !5582, file: !3734, line: 59, baseType: !6, size: 64, offset: 384)
!5591 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !5582, file: !3734, line: 60, baseType: !6, size: 64, offset: 448)
!5592 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !5582, file: !3734, line: 61, baseType: !6, size: 64, offset: 512)
!5593 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !5582, file: !3734, line: 64, baseType: !6, size: 64, offset: 576)
!5594 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !5582, file: !3734, line: 65, baseType: !6, size: 64, offset: 640)
!5595 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !5582, file: !3734, line: 66, baseType: !6, size: 64, offset: 704)
!5596 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !5582, file: !3734, line: 68, baseType: !3749, size: 64, offset: 768)
!5597 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !5582, file: !3734, line: 70, baseType: !5598, size: 64, offset: 832)
!5598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5582, size: 64)
!5599 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !5582, file: !3734, line: 72, baseType: !72, size: 32, offset: 896)
!5600 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !5582, file: !3734, line: 73, baseType: !72, size: 32, offset: 928)
!5601 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !5582, file: !3734, line: 74, baseType: !3756, size: 64, offset: 960)
!5602 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !5582, file: !3734, line: 77, baseType: !133, size: 16, offset: 1024)
!5603 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !5582, file: !3734, line: 78, baseType: !3759, size: 8, offset: 1040)
!5604 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !5582, file: !3734, line: 79, baseType: !3761, size: 8, offset: 1048)
!5605 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !5582, file: !3734, line: 81, baseType: !3765, size: 64, offset: 1088)
!5606 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !5582, file: !3734, line: 89, baseType: !3768, size: 64, offset: 1152)
!5607 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !5582, file: !3734, line: 91, baseType: !3770, size: 64, offset: 1216)
!5608 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !5582, file: !3734, line: 92, baseType: !3773, size: 64, offset: 1280)
!5609 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !5582, file: !3734, line: 93, baseType: !5598, size: 64, offset: 1344)
!5610 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !5582, file: !3734, line: 94, baseType: !8, size: 64, offset: 1408)
!5611 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !5582, file: !3734, line: 95, baseType: !134, size: 64, offset: 1472)
!5612 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !5582, file: !3734, line: 96, baseType: !72, size: 32, offset: 1536)
!5613 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !5582, file: !3734, line: 98, baseType: !3780, size: 160, offset: 1568)
!5614 = distinct !DICompileUnit(language: DW_LANG_C99, file: !257, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !212, nameTableKind: None)
!5615 = !DILocalVariable(name: "offset", arg: 2, scope: !5577, file: !5487, line: 28, type: !5524)
!5616 = !DILocalVariable(name: "whence", arg: 3, scope: !5577, file: !5487, line: 28, type: !72)
!5617 = distinct !DISubprogram(name: "c_tolower", scope: !5618, file: !5618, line: 337, type: !5619, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !258, retainedNodes: !4)
!5618 = !DIFile(filename: "./lib/c-ctype.h", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!5619 = !DISubroutineType(types: !5620)
!5620 = !{!72, !72}
!5621 = !DILocalVariable(name: "c", arg: 1, scope: !5617, file: !5618, line: 337, type: !72)
!5622 = !DILocation(line: 337, column: 16, scope: !5617)
!5623 = !DILocation(line: 339, column: 11, scope: !5617)
!5624 = !DILocation(line: 339, column: 3, scope: !5617)
!5625 = !DILocation(line: 342, column: 14, scope: !5626)
!5626 = distinct !DILexicalBlock(scope: !5617, file: !5618, line: 340, column: 5)
!5627 = !DILocation(line: 342, column: 16, scope: !5626)
!5628 = !DILocation(line: 342, column: 22, scope: !5626)
!5629 = !DILocation(line: 342, column: 7, scope: !5626)
!5630 = !DILocation(line: 344, column: 14, scope: !5626)
!5631 = !DILocation(line: 344, column: 7, scope: !5626)
!5632 = !DILocation(line: 346, column: 1, scope: !5617)
!5633 = distinct !DISubprogram(name: "getugroups", scope: !5634, file: !5634, line: 61, type: !5635, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !260, retainedNodes: !4)
!5634 = !DIFile(filename: "lib/getugroups.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!5635 = !DISubroutineType(types: !5636)
!5636 = !{!72, !72, !183, !69, !21}
!5637 = !DILocalVariable(name: "maxcount", arg: 1, scope: !5633, file: !5634, line: 61, type: !72)
!5638 = !DILocation(line: 61, column: 17, scope: !5633)
!5639 = !DILocalVariable(name: "grouplist", arg: 2, scope: !5633, file: !5634, line: 61, type: !183)
!5640 = !DILocation(line: 61, column: 34, scope: !5633)
!5641 = !DILocalVariable(name: "username", arg: 3, scope: !5633, file: !5634, line: 61, type: !69)
!5642 = !DILocation(line: 61, column: 57, scope: !5633)
!5643 = !DILocalVariable(name: "gid", arg: 4, scope: !5633, file: !5634, line: 62, type: !21)
!5644 = !DILocation(line: 62, column: 19, scope: !5633)
!5645 = !DILocalVariable(name: "count", scope: !5633, file: !5634, line: 64, type: !72)
!5646 = !DILocation(line: 64, column: 7, scope: !5633)
!5647 = !DILocation(line: 66, column: 7, scope: !5648)
!5648 = distinct !DILexicalBlock(scope: !5633, file: !5634, line: 66, column: 7)
!5649 = !DILocation(line: 66, column: 11, scope: !5648)
!5650 = !DILocation(line: 66, column: 7, scope: !5633)
!5651 = !DILocation(line: 68, column: 11, scope: !5652)
!5652 = distinct !DILexicalBlock(scope: !5653, file: !5634, line: 68, column: 11)
!5653 = distinct !DILexicalBlock(scope: !5648, file: !5634, line: 67, column: 5)
!5654 = !DILocation(line: 68, column: 20, scope: !5652)
!5655 = !DILocation(line: 68, column: 11, scope: !5653)
!5656 = !DILocation(line: 69, column: 28, scope: !5652)
!5657 = !DILocation(line: 69, column: 9, scope: !5652)
!5658 = !DILocation(line: 69, column: 19, scope: !5652)
!5659 = !DILocation(line: 69, column: 26, scope: !5652)
!5660 = !DILocation(line: 70, column: 7, scope: !5653)
!5661 = !DILocation(line: 71, column: 5, scope: !5653)
!5662 = !DILocation(line: 73, column: 3, scope: !5633)
!5663 = !DILocation(line: 74, column: 3, scope: !5633)
!5664 = !DILocalVariable(name: "cp", scope: !5665, file: !5634, line: 76, type: !184)
!5665 = distinct !DILexicalBlock(scope: !5633, file: !5634, line: 75, column: 5)
!5666 = !DILocation(line: 76, column: 14, scope: !5665)
!5667 = !DILocalVariable(name: "grp", scope: !5665, file: !5634, line: 77, type: !5668)
!5668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5669, size: 64)
!5669 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group", file: !1066, line: 42, size: 256, elements: !5670)
!5670 = !{!5671, !5672, !5673, !5674}
!5671 = !DIDerivedType(tag: DW_TAG_member, name: "gr_name", scope: !5669, file: !1066, line: 44, baseType: !6, size: 64)
!5672 = !DIDerivedType(tag: DW_TAG_member, name: "gr_passwd", scope: !5669, file: !1066, line: 45, baseType: !6, size: 64, offset: 64)
!5673 = !DIDerivedType(tag: DW_TAG_member, name: "gr_gid", scope: !5669, file: !1066, line: 46, baseType: !22, size: 32, offset: 128)
!5674 = !DIDerivedType(tag: DW_TAG_member, name: "gr_mem", scope: !5669, file: !1066, line: 47, baseType: !184, size: 64, offset: 192)
!5675 = !DILocation(line: 77, column: 21, scope: !5665)
!5676 = !DILocation(line: 79, column: 7, scope: !5665)
!5677 = !DILocation(line: 79, column: 13, scope: !5665)
!5678 = !DILocation(line: 80, column: 13, scope: !5665)
!5679 = !DILocation(line: 80, column: 11, scope: !5665)
!5680 = !DILocation(line: 81, column: 11, scope: !5681)
!5681 = distinct !DILexicalBlock(scope: !5665, file: !5634, line: 81, column: 11)
!5682 = !DILocation(line: 81, column: 15, scope: !5681)
!5683 = !DILocation(line: 81, column: 11, scope: !5665)
!5684 = !DILocation(line: 82, column: 9, scope: !5681)
!5685 = !DILocation(line: 84, column: 17, scope: !5686)
!5686 = distinct !DILexicalBlock(scope: !5665, file: !5634, line: 84, column: 7)
!5687 = !DILocation(line: 84, column: 22, scope: !5686)
!5688 = !DILocation(line: 84, column: 15, scope: !5686)
!5689 = !DILocation(line: 84, column: 12, scope: !5686)
!5690 = !DILocation(line: 84, column: 31, scope: !5691)
!5691 = distinct !DILexicalBlock(scope: !5686, file: !5634, line: 84, column: 7)
!5692 = !DILocation(line: 84, column: 30, scope: !5691)
!5693 = !DILocation(line: 84, column: 7, scope: !5686)
!5694 = !DILocalVariable(name: "n", scope: !5695, file: !5634, line: 86, type: !72)
!5695 = distinct !DILexicalBlock(scope: !5691, file: !5634, line: 85, column: 9)
!5696 = !DILocation(line: 86, column: 15, scope: !5695)
!5697 = !DILocation(line: 88, column: 18, scope: !5698)
!5698 = distinct !DILexicalBlock(scope: !5695, file: !5634, line: 88, column: 16)
!5699 = !DILocation(line: 88, column: 16, scope: !5695)
!5700 = !DILocation(line: 89, column: 13, scope: !5698)
!5701 = !DILocation(line: 92, column: 18, scope: !5702)
!5702 = distinct !DILexicalBlock(scope: !5695, file: !5634, line: 92, column: 11)
!5703 = !DILocation(line: 92, column: 16, scope: !5702)
!5704 = !DILocation(line: 92, column: 23, scope: !5705)
!5705 = distinct !DILexicalBlock(scope: !5702, file: !5634, line: 92, column: 11)
!5706 = !DILocation(line: 92, column: 27, scope: !5705)
!5707 = !DILocation(line: 92, column: 25, scope: !5705)
!5708 = !DILocation(line: 92, column: 11, scope: !5702)
!5709 = !DILocation(line: 93, column: 17, scope: !5710)
!5710 = distinct !DILexicalBlock(scope: !5705, file: !5634, line: 93, column: 17)
!5711 = !DILocation(line: 93, column: 27, scope: !5710)
!5712 = !DILocation(line: 93, column: 30, scope: !5710)
!5713 = !DILocation(line: 93, column: 40, scope: !5710)
!5714 = !DILocation(line: 93, column: 46, scope: !5710)
!5715 = !DILocation(line: 93, column: 51, scope: !5710)
!5716 = !DILocation(line: 93, column: 43, scope: !5710)
!5717 = !DILocation(line: 93, column: 17, scope: !5705)
!5718 = !DILocation(line: 94, column: 15, scope: !5710)
!5719 = !DILocation(line: 92, column: 34, scope: !5705)
!5720 = !DILocation(line: 92, column: 11, scope: !5705)
!5721 = distinct !{!5721, !5708, !5722}
!5722 = !DILocation(line: 94, column: 15, scope: !5702)
!5723 = !DILocation(line: 97, column: 15, scope: !5724)
!5724 = distinct !DILexicalBlock(scope: !5695, file: !5634, line: 97, column: 15)
!5725 = !DILocation(line: 97, column: 20, scope: !5724)
!5726 = !DILocation(line: 97, column: 17, scope: !5724)
!5727 = !DILocation(line: 97, column: 15, scope: !5695)
!5728 = !DILocation(line: 99, column: 19, scope: !5729)
!5729 = distinct !DILexicalBlock(scope: !5730, file: !5634, line: 99, column: 19)
!5730 = distinct !DILexicalBlock(scope: !5724, file: !5634, line: 98, column: 13)
!5731 = !DILocation(line: 99, column: 28, scope: !5729)
!5732 = !DILocation(line: 99, column: 19, scope: !5730)
!5733 = !DILocation(line: 101, column: 23, scope: !5734)
!5734 = distinct !DILexicalBlock(scope: !5735, file: !5634, line: 101, column: 23)
!5735 = distinct !DILexicalBlock(scope: !5729, file: !5634, line: 100, column: 17)
!5736 = !DILocation(line: 101, column: 32, scope: !5734)
!5737 = !DILocation(line: 101, column: 29, scope: !5734)
!5738 = !DILocation(line: 101, column: 23, scope: !5735)
!5739 = !DILocation(line: 102, column: 21, scope: !5734)
!5740 = !DILocation(line: 103, column: 38, scope: !5735)
!5741 = !DILocation(line: 103, column: 43, scope: !5735)
!5742 = !DILocation(line: 103, column: 19, scope: !5735)
!5743 = !DILocation(line: 103, column: 29, scope: !5735)
!5744 = !DILocation(line: 103, column: 36, scope: !5735)
!5745 = !DILocation(line: 104, column: 17, scope: !5735)
!5746 = !DILocation(line: 105, column: 19, scope: !5747)
!5747 = distinct !DILexicalBlock(scope: !5730, file: !5634, line: 105, column: 19)
!5748 = !DILocation(line: 105, column: 25, scope: !5747)
!5749 = !DILocation(line: 105, column: 19, scope: !5730)
!5750 = !DILocation(line: 107, column: 19, scope: !5751)
!5751 = distinct !DILexicalBlock(scope: !5747, file: !5634, line: 106, column: 17)
!5752 = !DILocation(line: 107, column: 25, scope: !5751)
!5753 = !DILocation(line: 108, column: 19, scope: !5751)
!5754 = !DILocation(line: 110, column: 20, scope: !5730)
!5755 = !DILocation(line: 111, column: 13, scope: !5730)
!5756 = !DILocation(line: 112, column: 9, scope: !5695)
!5757 = !DILocation(line: 84, column: 35, scope: !5691)
!5758 = !DILocation(line: 84, column: 7, scope: !5691)
!5759 = distinct !{!5759, !5693, !5760}
!5760 = !DILocation(line: 112, column: 9, scope: !5686)
!5761 = distinct !{!5761, !5663, !5762}
!5762 = !DILocation(line: 113, column: 5, scope: !5633)
!5763 = !DILocation(line: 115, column: 7, scope: !5764)
!5764 = distinct !DILexicalBlock(scope: !5633, file: !5634, line: 115, column: 7)
!5765 = !DILocation(line: 115, column: 13, scope: !5764)
!5766 = !DILocation(line: 115, column: 7, scope: !5633)
!5767 = !DILocation(line: 116, column: 11, scope: !5764)
!5768 = !DILocation(line: 116, column: 5, scope: !5764)
!5769 = !DILocation(line: 115, column: 16, scope: !5764)
!5770 = !DILabel(scope: !5633, name: "done", file: !5634, line: 118)
!5771 = !DILocation(line: 118, column: 2, scope: !5633)
!5772 = !DILocalVariable(name: "saved_errno", scope: !5773, file: !5634, line: 120, type: !72)
!5773 = distinct !DILexicalBlock(scope: !5633, file: !5634, line: 119, column: 3)
!5774 = !DILocation(line: 120, column: 9, scope: !5773)
!5775 = !DILocation(line: 120, column: 23, scope: !5773)
!5776 = !DILocation(line: 121, column: 5, scope: !5773)
!5777 = !DILocation(line: 122, column: 13, scope: !5773)
!5778 = !DILocation(line: 122, column: 5, scope: !5773)
!5779 = !DILocation(line: 122, column: 11, scope: !5773)
!5780 = !DILocation(line: 125, column: 10, scope: !5633)
!5781 = !DILocation(line: 125, column: 3, scope: !5633)
