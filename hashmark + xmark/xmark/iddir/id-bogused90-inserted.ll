; ModuleID = '<stdin>'
source_filename = "ld-temp.o"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.infomap = type { i8*, i8* }
%struct.option = type { i8*, i32, i32*, i32 }
%struct.quoting_options = type { i32, i32, [8 x i32], i8*, i8* }
%struct.slotvec = type { i64, i8* }
%struct.passwd = type { i8*, i8*, i32, i32, i8*, i8*, i8* }
%struct.group = type { i8*, i8*, i32, i8** }
%struct.__mbstate_t = type { i32, %union.anon }
%union.anon = type { i32 }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }

@stderr = external dso_local global %struct._IO_FILE*, align 8
@.str = private unnamed_addr constant [39 x i8] c"Try '%s --help' for more information.\0A\00", align 1
@.str.1 = private unnamed_addr constant [33 x i8] c"Usage: %s [OPTION]... [USER]...\0A\00", align 1
@.str.2 = private unnamed_addr constant [105 x i8] c"Print user and group information for each specified USER,\0Aor (when USER omitted) for the current user.\0A\0A\00", align 1
@stdout = external dso_local global %struct._IO_FILE*, align 8
@.str.3 = private unnamed_addr constant [521 x i8] c"  -a             ignore, for compatibility with other versions\0A  -Z, --context  print only the security context of the process\0A  -g, --group    print only the effective group ID\0A  -G, --groups   print all group IDs\0A  -n, --name     print a name instead of a number, for -ugG\0A  -r, --real     print the real ID instead of the effective ID, with -ugG\0A  -u, --user     print only the effective user ID\0A  -z, --zero     delimit entries with NUL characters, not whitespace;\0A                   not permitted in default format\0A\00", align 1
@.str.4 = private unnamed_addr constant [45 x i8] c"      --help     display this help and exit\0A\00", align 1
@.str.5 = private unnamed_addr constant [54 x i8] c"      --version  output version information and exit\0A\00", align 1
@.str.6 = private unnamed_addr constant [71 x i8] c"\0AWithout any OPTION, print some useful set of identified information.\0A\00", align 1
@.str.7 = private unnamed_addr constant [3 x i8] c"id\00", align 1
@__const.emit_ancillary_info.infomap = private unnamed_addr constant [7 x %struct.infomap] [%struct.infomap { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.27, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.28, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.29, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.30, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.31, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.31, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.33, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.31, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.34, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.31, i32 0, i32 0) }, %struct.infomap zeroinitializer], align 16
@.str.35 = private unnamed_addr constant [23 x i8] c"\0A%s online help: <%s>\0A\00", align 1
@.str.13 = private unnamed_addr constant [14 x i8] c"GNU coreutils\00", align 1
@.str.36 = private unnamed_addr constant [40 x i8] c"https://www.gnu.org/software/coreutils/\00", align 1
@.str.37 = private unnamed_addr constant [4 x i8] c"en_\00", align 1
@.str.38 = private unnamed_addr constant [71 x i8] c"Report any translation bugs to <https://translationproject.org/team/>\0A\00", align 1
@.str.39 = private unnamed_addr constant [27 x i8] c"Full documentation <%s%s>\0A\00", align 1
@.str.40 = private unnamed_addr constant [51 x i8] c"or available locally via: info '(coreutils) %s%s'\0A\00", align 1
@.str.41 = private unnamed_addr constant [12 x i8] c" invocation\00", align 1
@.str.8 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.27 = private unnamed_addr constant [2 x i8] c"[\00", align 1
@.str.28 = private unnamed_addr constant [16 x i8] c"test invocation\00", align 1
@.str.9 = private unnamed_addr constant [10 x i8] c"coreutils\00", align 1
@.str.29 = private unnamed_addr constant [22 x i8] c"Multi-call invocation\00", align 1
@.str.30 = private unnamed_addr constant [10 x i8] c"sha224sum\00", align 1
@.str.31 = private unnamed_addr constant [15 x i8] c"sha2 utilities\00", align 1
@.str.32 = private unnamed_addr constant [10 x i8] c"sha256sum\00", align 1
@.str.33 = private unnamed_addr constant [10 x i8] c"sha384sum\00", align 1
@.str.34 = private unnamed_addr constant [10 x i8] c"sha512sum\00", align 1
@.str.10 = private unnamed_addr constant [24 x i8] c"/usr/local/share/locale\00", align 1
@.str.11 = private unnamed_addr constant [9 x i8] c"agnruzGZ\00", align 1
@longopts = internal constant [10 x %struct.option] [%struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.42, i32 0, i32 0), i32 0, i32* null, i32 90 }, %struct.option { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.43, i32 0, i32 0), i32 0, i32* null, i32 103 }, %struct.option { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.44, i32 0, i32 0), i32 0, i32* null, i32 71 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.45, i32 0, i32 0), i32 0, i32* null, i32 110 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.46, i32 0, i32 0), i32 0, i32* null, i32 114 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.47, i32 0, i32 0), i32 0, i32* null, i32 117 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.48, i32 0, i32 0), i32 0, i32* null, i32 122 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.49, i32 0, i32 0), i32 0, i32* null, i32 -130 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.50, i32 0, i32 0), i32 0, i32* null, i32 -131 }, %struct.option zeroinitializer], align 16, !dbg !0
@.str.12 = private unnamed_addr constant [55 x i8] c"--context (-Z) works only on an SELinux-enabled kernel\00", align 1
@just_context = internal global i8 0, align 1, !dbg !25
@just_group = internal global i8 0, align 1, !dbg !28
@use_name = internal global i8 0, align 1, !dbg !30
@use_real = internal global i8 0, align 1, !dbg !32
@just_user = internal global i8 0, align 1, !dbg !34
@opt_zero = internal global i8 0, align 1, !dbg !36
@just_group_list = internal global i8 0, align 1, !dbg !38
@.str.14 = private unnamed_addr constant [15 x i8] c"Arnold Robbins\00", align 1
@.str.15 = private unnamed_addr constant [16 x i8] c"David MacKenzie\00", align 1
@optind = external dso_local global i32, align 4
@.str.16 = private unnamed_addr constant [50 x i8] c"cannot print security context when user specified\00", align 1
@.str.17 = private unnamed_addr constant [44 x i8] c"cannot print \22only\22 of more than one choice\00", align 1
@.str.18 = private unnamed_addr constant [54 x i8] c"cannot print only names or real IDs in default format\00", align 1
@.str.19 = private unnamed_addr constant [46 x i8] c"option --zero not permitted in default format\00", align 1
@.str.20 = private unnamed_addr constant [16 x i8] c"POSIXLY_CORRECT\00", align 1
@context = internal global i8* null, align 8, !dbg !40
@.str.21 = private unnamed_addr constant [26 x i8] c"can't get process context\00", align 1
@multiple_users = internal global i8 0, align 1, !dbg !42
@euid = internal global i32 0, align 4, !dbg !17
@.str.22 = private unnamed_addr constant [17 x i8] c"%s: no such user\00", align 1
@ok = internal global i8 1, align 1, !dbg !44
@ruid = internal global i32 0, align 4, !dbg !10
@egid = internal global i32 0, align 4, !dbg !23
@rgid = internal global i32 0, align 4, !dbg !19
@.str.23 = private unnamed_addr constant [25 x i8] c"cannot get effective UID\00", align 1
@.str.24 = private unnamed_addr constant [20 x i8] c"cannot get real UID\00", align 1
@.str.25 = private unnamed_addr constant [25 x i8] c"cannot get effective GID\00", align 1
@.str.26 = private unnamed_addr constant [20 x i8] c"cannot get real GID\00", align 1
@.str.52 = private unnamed_addr constant [7 x i8] c"uid=%s\00", align 1
@.str.53 = private unnamed_addr constant [5 x i8] c"(%s)\00", align 1
@.str.54 = private unnamed_addr constant [8 x i8] c" gid=%s\00", align 1
@.str.55 = private unnamed_addr constant [9 x i8] c" euid=%s\00", align 1
@.str.56 = private unnamed_addr constant [9 x i8] c" egid=%s\00", align 1
@.str.57 = private unnamed_addr constant [33 x i8] c"failed to get groups for user %s\00", align 1
@.str.58 = private unnamed_addr constant [45 x i8] c"failed to get groups for the current process\00", align 1
@.str.59 = private unnamed_addr constant [9 x i8] c" groups=\00", align 1
@.str.60 = private unnamed_addr constant [12 x i8] c" context=%s\00", align 1
@gidtostr_ptr.buf = internal global [21 x i8] zeroinitializer, align 16, !dbg !56
@uidtostr_ptr.buf = internal global [21 x i8] zeroinitializer, align 16, !dbg !46
@.str.51 = private unnamed_addr constant [32 x i8] c"cannot find name for user ID %s\00", align 1
@.str.42 = private unnamed_addr constant [8 x i8] c"context\00", align 1
@.str.43 = private unnamed_addr constant [6 x i8] c"group\00", align 1
@.str.44 = private unnamed_addr constant [7 x i8] c"groups\00", align 1
@.str.45 = private unnamed_addr constant [5 x i8] c"name\00", align 1
@.str.46 = private unnamed_addr constant [5 x i8] c"real\00", align 1
@.str.47 = private unnamed_addr constant [5 x i8] c"user\00", align 1
@.str.48 = private unnamed_addr constant [5 x i8] c"zero\00", align 1
@.str.49 = private unnamed_addr constant [5 x i8] c"help\00", align 1
@.str.50 = private unnamed_addr constant [8 x i8] c"version\00", align 1
@.str.61 = private unnamed_addr constant [33 x i8] c"failed to get groups for user %s\00", align 1
@.str.1.62 = private unnamed_addr constant [45 x i8] c"failed to get groups for the current process\00", align 1
@.str.2.63 = private unnamed_addr constant [34 x i8] c"cannot find name for group ID %lu\00", align 1
@gidtostr_ptr.buf.65 = internal global [21 x i8] zeroinitializer, align 16, !dbg !78
@Version = internal global i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.68, i32 0, i32 0), align 8, !dbg !86
@.str.68 = private unnamed_addr constant [5 x i8] c"8.32\00", align 1
@ignore_EPIPE = internal global i8 0, align 1, !dbg !91
@.str.71 = private unnamed_addr constant [12 x i8] c"write error\00", align 1
@file_name = internal global i8* null, align 8, !dbg !96
@.str.1.72 = private unnamed_addr constant [7 x i8] c"%s: %s\00", align 1
@.str.2.73 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@exit_failure = internal global i32 1, align 4, !dbg !99
@.str.80 = private unnamed_addr constant [56 x i8] c"A NULL argv[0] was passed through an exec system call.\0A\00", align 1
@.str.1.81 = private unnamed_addr constant [8 x i8] c"/.libs/\00", align 1
@.str.2.82 = private unnamed_addr constant [4 x i8] c"lt-\00", align 1
@program_invocation_short_name = external dso_local global i8*, align 8
@program_name = internal global i8* null, align 8, !dbg !106
@program_invocation_name = external dso_local global i8*, align 8
@default_quoting_options = internal global %struct.quoting_options zeroinitializer, align 8, !dbg !113
@slotvec = internal global %struct.slotvec* @slotvec0, align 8, !dbg !165
@nslots = internal global i32 1, align 4, !dbg !172
@slotvec0 = internal global %struct.slotvec { i64 256, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i32 0, i32 0) }, align 8, !dbg !174
@slot0 = internal global [256 x i8] zeroinitializer, align 16, !dbg !160
@.str.10.85 = private unnamed_addr constant [2 x i8] c"\22\00", align 1
@.str.11.86 = private unnamed_addr constant [2 x i8] c"`\00", align 1
@.str.12.87 = private unnamed_addr constant [2 x i8] c"'\00", align 1
@.str.13.88 = private unnamed_addr constant [6 x i8] c"UTF-8\00", align 1
@.str.14.89 = private unnamed_addr constant [4 x i8] c"\E2\80\98\00", align 1
@.str.15.90 = private unnamed_addr constant [4 x i8] c"\E2\80\99\00", align 1
@.str.16.91 = private unnamed_addr constant [8 x i8] c"GB18030\00", align 1
@.str.17.92 = private unnamed_addr constant [4 x i8] c"\A1\07e\00", align 1
@.str.18.93 = private unnamed_addr constant [3 x i8] c"\A1\AF\00", align 1
@quote_quoting_options = internal global %struct.quoting_options { i32 8, i32 0, [8 x i32] zeroinitializer, i8* null, i8* null }, align 8, !dbg !148
@parse_with_separator.E_bad_spec = internal global i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2.105, i32 0, i32 0), align 8, !dbg !176
@.str.3.102 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@parse_with_separator.E_invalid_user = internal global i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.104, i32 0, i32 0), align 8, !dbg !189
@parse_with_separator.E_invalid_group = internal global i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.103, i32 0, i32 0), align 8, !dbg !191
@.str.1.103 = private unnamed_addr constant [14 x i8] c"invalid group\00", align 1
@.str.104 = private unnamed_addr constant [13 x i8] c"invalid user\00", align 1
@.str.2.105 = private unnamed_addr constant [13 x i8] c"invalid spec\00", align 1
@.str.106 = private unnamed_addr constant [12 x i8] c"%s (%s) %s\0A\00", align 1
@.str.1.107 = private unnamed_addr constant [7 x i8] c"%s %s\0A\00", align 1
@.str.2.108 = private unnamed_addr constant [4 x i8] c"(C)\00", align 1
@.str.3.109 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.4.110 = private unnamed_addr constant [171 x i8] c"License GPLv3+: GNU GPL version 3 or later <%s>.\0AThis is free software: you are free to change and redistribute it.\0AThere is NO WARRANTY, to the extent permitted by law.\0A\00", align 1
@.str.5.111 = private unnamed_addr constant [34 x i8] c"https://gnu.org/licenses/gpl.html\00", align 1
@.str.6.112 = private unnamed_addr constant [16 x i8] c"Written by %s.\0A\00", align 1
@.str.7.113 = private unnamed_addr constant [23 x i8] c"Written by %s and %s.\0A\00", align 1
@.str.8.114 = private unnamed_addr constant [28 x i8] c"Written by %s, %s, and %s.\0A\00", align 1
@.str.9.115 = private unnamed_addr constant [32 x i8] c"Written by %s, %s, %s,\0Aand %s.\0A\00", align 1
@.str.10.116 = private unnamed_addr constant [36 x i8] c"Written by %s, %s, %s,\0A%s, and %s.\0A\00", align 1
@.str.11.117 = private unnamed_addr constant [40 x i8] c"Written by %s, %s, %s,\0A%s, %s, and %s.\0A\00", align 1
@.str.12.118 = private unnamed_addr constant [44 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, and %s.\0A\00", align 1
@.str.13.119 = private unnamed_addr constant [48 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0Aand %s.\0A\00", align 1
@.str.14.120 = private unnamed_addr constant [52 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0A%s, and %s.\0A\00", align 1
@.str.15.121 = private unnamed_addr constant [60 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0A%s, %s, and others.\0A\00", align 1
@version_etc_copyright = internal constant [47 x i8] c"Copyright %s %d Free Software Foundation, Inc.\00", align 16, !dbg !193
@.str.1.136 = private unnamed_addr constant [17 x i8] c"memory exhausted\00", align 1
@.str.137 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.142 = private unnamed_addr constant [38 x i8] c"0 <= strtol_base && strtol_base <= 36\00", align 1
@.str.1.143 = private unnamed_addr constant [16 x i8] c"./lib/xstrtol.c\00", align 1
@__PRETTY_FUNCTION__.xstrtoul = private unnamed_addr constant [81 x i8] c"strtol_error xstrtoul(const char *, char **, int, unsigned long *, const char *)\00", align 1
@.str.152 = private unnamed_addr constant [2 x i8] c"C\00", align 1
@.str.1.153 = private unnamed_addr constant [6 x i8] c"POSIX\00", align 1
@.str.156 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.1.157 = private unnamed_addr constant [6 x i8] c"ASCII\00", align 1
@inVal0 = global i32 0
@inVal1 = global i8** null
@.compVal0 = private global [2 x i8] c"+\00"
@.compVal1 = private global [4 x i8] c"\01  \00"
@.compVal2 = private global [1 x i8] zeroinitializer
@x = common global i32 0
@y = common global i32 0
@x.1 = common global i32 0
@y.2 = common global i32 0
@x.3 = common global i32 0
@y.4 = common global i32 0
@x.5 = common global i32 0
@y.6 = common global i32 0
@x.7 = common global i32 0
@y.8 = common global i32 0
@x.9 = common global i32 0
@y.10 = common global i32 0
@x.11 = common global i32 0
@y.12 = common global i32 0
@x.13 = common global i32 0
@y.14 = common global i32 0
@x.15 = common global i32 0
@y.16 = common global i32 0
@x.17 = common global i32 0
@y.18 = common global i32 0
@x.19 = common global i32 0
@y.20 = common global i32 0
@x.21 = common global i32 0
@y.22 = common global i32 0
@x.23 = common global i32 0
@y.24 = common global i32 0
@x.25 = common global i32 0
@y.26 = common global i32 0
@x.27 = common global i32 0
@y.28 = common global i32 0
@x.29 = common global i32 0
@y.30 = common global i32 0
@x.31 = common global i32 0
@y.32 = common global i32 0
@x.33 = common global i32 0
@y.34 = common global i32 0
@x.35 = common global i32 0
@y.36 = common global i32 0
@x.37 = common global i32 0
@y.38 = common global i32 0
@x.39 = common global i32 0
@y.40 = common global i32 0
@x.41 = common global i32 0
@y.42 = common global i32 0
@x.43 = common global i32 0
@y.44 = common global i32 0
@x.45 = common global i32 0
@y.46 = common global i32 0
@x.47 = common global i32 0
@y.48 = common global i32 0
@x.49 = common global i32 0
@y.50 = common global i32 0
@x.51 = common global i32 0
@y.52 = common global i32 0
@x.53 = common global i32 0
@y.54 = common global i32 0
@x.55 = common global i32 0
@y.56 = common global i32 0
@x.57 = common global i32 0
@y.58 = common global i32 0
@x.59 = common global i32 0
@y.60 = common global i32 0
@x.61 = common global i32 0
@y.62 = common global i32 0
@x.63 = common global i32 0
@y.64 = common global i32 0
@x.65 = common global i32 0
@y.66 = common global i32 0
@x.67 = common global i32 0
@y.68 = common global i32 0
@x.69 = common global i32 0
@y.70 = common global i32 0
@x.71 = common global i32 0
@y.72 = common global i32 0
@x.73 = common global i32 0
@y.74 = common global i32 0
@x.75 = common global i32 0
@y.76 = common global i32 0
@x.77 = common global i32 0
@y.78 = common global i32 0
@x.79 = common global i32 0
@y.80 = common global i32 0
@x.81 = common global i32 0
@y.82 = common global i32 0
@x.83 = common global i32 0
@y.84 = common global i32 0
@x.85 = common global i32 0
@y.86 = common global i32 0
@x.87 = common global i32 0
@y.88 = common global i32 0
@x.89 = common global i32 0
@y.90 = common global i32 0
@x.91 = common global i32 0
@y.92 = common global i32 0
@x.93 = common global i32 0
@y.94 = common global i32 0
@x.95 = common global i32 0
@y.96 = common global i32 0
@x.97 = common global i32 0
@y.98 = common global i32 0
@x.99 = common global i32 0
@y.100 = common global i32 0
@x.101 = common global i32 0
@y.102 = common global i32 0
@x.103 = common global i32 0
@y.104 = common global i32 0
@x.105 = common global i32 0
@y.106 = common global i32 0
@x.107 = common global i32 0
@y.108 = common global i32 0
@x.109 = common global i32 0
@y.110 = common global i32 0
@x.111 = common global i32 0
@y.112 = common global i32 0
@x.113 = common global i32 0
@y.114 = common global i32 0
@x.115 = common global i32 0
@y.116 = common global i32 0

; Function Attrs: noinline noreturn nounwind optnone uwtable
define internal void @usage(i32) #0 !dbg !269 {
  %2 = load i32, i32* @x
  %3 = load i32, i32* @y
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i32, align 4
  store i32 %0, i32* %10, align 4
  call void @llvm.dbg.declare(metadata i32* %10, metadata !272, metadata !DIExpression()), !dbg !273
  %11 = load i32, i32* %10, align 4, !dbg !274
  %12 = icmp ne i32 %11, 0, !dbg !276
  %13 = load i32, i32* @x
  %14 = load i32, i32* @y
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %12, label %21, label %76, !dbg !277

21:                                               ; preds = %originalBBpart2
  %22 = load i32, i32* @x
  %23 = load i32, i32* @y
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %21, %originalBB1alteredBB
  %30 = load i32, i32* @x
  %31 = load i32, i32* @y
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %38, !dbg !278

38:                                               ; preds = %originalBBpart24
  %39 = load i32, i32* @x
  %40 = load i32, i32* @y
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %38, %originalBB6alteredBB
  %47 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !279
  %48 = call i8* @gettext(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str, i64 0, i64 0)) #10, !dbg !279
  %49 = load i8*, i8** @program_name, align 8, !dbg !279
  %50 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %47, i8* %48, i8* %49), !dbg !279
  %51 = load i32, i32* @x
  %52 = load i32, i32* @y
  %53 = sub i32 %51, 1
  %54 = mul i32 %51, %53
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %52, 10
  %58 = or i1 %56, %57
  br i1 %58, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %59, !dbg !279

59:                                               ; preds = %originalBBpart28
  %60 = load i32, i32* @x
  %61 = load i32, i32* @y
  %62 = sub i32 %60, 1
  %63 = mul i32 %60, %62
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %61, 10
  %67 = or i1 %65, %66
  br i1 %67, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %59, %originalBB10alteredBB
  %68 = load i32, i32* @x
  %69 = load i32, i32* @y
  %70 = sub i32 %68, 1
  %71 = mul i32 %68, %70
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %69, 10
  %75 = or i1 %73, %74
  br i1 %75, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %111, !dbg !279

76:                                               ; preds = %originalBBpart2
  %77 = load i32, i32* @x
  %78 = load i32, i32* @y
  %79 = sub i32 %77, 1
  %80 = mul i32 %77, %79
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %78, 10
  %84 = or i1 %82, %83
  br i1 %84, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %76, %originalBB14alteredBB
  %85 = call i8* @gettext(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1, i64 0, i64 0)) #10, !dbg !281
  %86 = load i8*, i8** @program_name, align 8, !dbg !283
  %87 = call i32 (i8*, ...) @printf(i8* %85, i8* %86), !dbg !284
  %88 = call i8* @gettext(i8* getelementptr inbounds ([105 x i8], [105 x i8]* @.str.2, i64 0, i64 0)) #10, !dbg !285
  %89 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !285
  %90 = call i32 @fputs_unlocked(i8* %88, %struct._IO_FILE* %89), !dbg !285
  %91 = call i8* @gettext(i8* getelementptr inbounds ([521 x i8], [521 x i8]* @.str.3, i64 0, i64 0)) #10, !dbg !286
  %92 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !286
  %93 = call i32 @fputs_unlocked(i8* %91, %struct._IO_FILE* %92), !dbg !286
  %94 = call i8* @gettext(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.4, i64 0, i64 0)) #10, !dbg !287
  %95 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !287
  %96 = call i32 @fputs_unlocked(i8* %94, %struct._IO_FILE* %95), !dbg !287
  %97 = call i8* @gettext(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.5, i64 0, i64 0)) #10, !dbg !288
  %98 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !288
  %99 = call i32 @fputs_unlocked(i8* %97, %struct._IO_FILE* %98), !dbg !288
  %100 = call i8* @gettext(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.6, i64 0, i64 0)) #10, !dbg !289
  %101 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !289
  %102 = call i32 @fputs_unlocked(i8* %100, %struct._IO_FILE* %101), !dbg !289
  call void @emit_ancillary_info(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0)), !dbg !290
  %103 = load i32, i32* @x
  %104 = load i32, i32* @y
  %105 = sub i32 %103, 1
  %106 = mul i32 %103, %105
  %107 = urem i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %104, 10
  %110 = or i1 %108, %109
  br i1 %110, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %111

111:                                              ; preds = %originalBBpart216, %originalBBpart212
  %112 = load i32, i32* %10, align 4, !dbg !291
  call void @exit(i32 %112) #12, !dbg !292
  unreachable, !dbg !292

originalBBalteredBB:                              ; preds = %originalBB, %1
  %113 = alloca i32, align 4
  store i32 %0, i32* %113, align 4
  call void @llvm.dbg.declare(metadata i32* %113, metadata !293, metadata !DIExpression()), !dbg !273
  %114 = load i32, i32* %113, align 4, !dbg !274
  %115 = icmp ne i32 %114, 0, !dbg !276
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %21
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %38
  %116 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !279
  %117 = call i8* @gettext(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str, i64 0, i64 0)) #10, !dbg !279
  %118 = load i8*, i8** @program_name, align 8, !dbg !279
  %119 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %116, i8* %117, i8* %118), !dbg !279
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %59
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %76
  %120 = call i8* @gettext(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1, i64 0, i64 0)) #10, !dbg !281
  %121 = load i8*, i8** @program_name, align 8, !dbg !283
  %122 = call i32 (i8*, ...) @printf(i8* %120, i8* %121), !dbg !284
  %123 = call i8* @gettext(i8* getelementptr inbounds ([105 x i8], [105 x i8]* @.str.2, i64 0, i64 0)) #10, !dbg !285
  %124 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !285
  %125 = call i32 @fputs_unlocked(i8* %123, %struct._IO_FILE* %124), !dbg !285
  %126 = call i8* @gettext(i8* getelementptr inbounds ([521 x i8], [521 x i8]* @.str.3, i64 0, i64 0)) #10, !dbg !286
  %127 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !286
  %128 = call i32 @fputs_unlocked(i8* %126, %struct._IO_FILE* %127), !dbg !286
  %129 = call i8* @gettext(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.4, i64 0, i64 0)) #10, !dbg !287
  %130 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !287
  %131 = call i32 @fputs_unlocked(i8* %129, %struct._IO_FILE* %130), !dbg !287
  %132 = call i8* @gettext(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.5, i64 0, i64 0)) #10, !dbg !288
  %133 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !288
  %134 = call i32 @fputs_unlocked(i8* %132, %struct._IO_FILE* %133), !dbg !288
  %135 = call i8* @gettext(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.6, i64 0, i64 0)) #10, !dbg !289
  %136 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !289
  %137 = call i32 @fputs_unlocked(i8* %135, %struct._IO_FILE* %136), !dbg !289
  call void @emit_ancillary_info(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0)), !dbg !290
  br label %originalBB14
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind
declare dso_local i8* @gettext(i8*) #2

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) #3

declare dso_local i32 @printf(i8*, ...) #3

declare dso_local i32 @fputs_unlocked(i8*, %struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @emit_ancillary_info(i8*) #4 !dbg !341 {
  %2 = load i32, i32* @x.1
  %3 = load i32, i32* @y.2
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i8*, align 8
  %11 = alloca [7 x %struct.infomap], align 16
  %12 = alloca i8*, align 8
  %13 = alloca %struct.infomap*, align 8
  %14 = alloca i8*, align 8
  store i8* %0, i8** %10, align 8
  call void @llvm.dbg.declare(metadata i8** %10, metadata !345, metadata !DIExpression()), !dbg !346
  call void @llvm.dbg.declare(metadata [7 x %struct.infomap]* %11, metadata !347, metadata !DIExpression()), !dbg !356
  %15 = bitcast [7 x %struct.infomap]* %11 to i8*, !dbg !356
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %15, i8* align 16 bitcast ([7 x %struct.infomap]* @__const.emit_ancillary_info.infomap to i8*), i64 112, i1 false), !dbg !356
  call void @llvm.dbg.declare(metadata i8** %12, metadata !357, metadata !DIExpression()), !dbg !358
  %16 = load i8*, i8** %10, align 8, !dbg !359
  store i8* %16, i8** %12, align 8, !dbg !358
  call void @llvm.dbg.declare(metadata %struct.infomap** %13, metadata !360, metadata !DIExpression()), !dbg !362
  %17 = getelementptr inbounds [7 x %struct.infomap], [7 x %struct.infomap]* %11, i64 0, i64 0, !dbg !363
  store %struct.infomap* %17, %struct.infomap** %13, align 8, !dbg !362
  %18 = load i32, i32* @x.1
  %19 = load i32, i32* @y.2
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %26, !dbg !364

26:                                               ; preds = %originalBBpart216, %originalBBpart2
  %27 = load i32, i32* @x.1
  %28 = load i32, i32* @y.2
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %26, %originalBB1alteredBB
  %35 = load %struct.infomap*, %struct.infomap** %13, align 8, !dbg !365
  %36 = getelementptr inbounds %struct.infomap, %struct.infomap* %35, i32 0, i32 0, !dbg !366
  %37 = load i8*, i8** %36, align 8, !dbg !366
  %38 = icmp ne i8* %37, null, !dbg !365
  %39 = load i32, i32* @x.1
  %40 = load i32, i32* @y.2
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %38, label %47, label %71, !dbg !367

47:                                               ; preds = %originalBBpart24
  %48 = load i32, i32* @x.1
  %49 = load i32, i32* @y.2
  %50 = sub i32 %48, 1
  %51 = mul i32 %48, %50
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %53, %54
  br i1 %55, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %47, %originalBB6alteredBB
  %56 = load i8*, i8** %10, align 8, !dbg !368
  %57 = load %struct.infomap*, %struct.infomap** %13, align 8, !dbg !368
  %58 = getelementptr inbounds %struct.infomap, %struct.infomap* %57, i32 0, i32 0, !dbg !368
  %59 = load i8*, i8** %58, align 8, !dbg !368
  %60 = call i32 @strcmp(i8* %56, i8* %59) #13, !dbg !368
  %61 = icmp eq i32 %60, 0, !dbg !368
  %62 = xor i1 %61, true, !dbg !369
  %63 = load i32, i32* @x.1
  %64 = load i32, i32* @y.2
  %65 = sub i32 %63, 1
  %66 = mul i32 %63, %65
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %64, 10
  %70 = or i1 %68, %69
  br i1 %70, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %71

71:                                               ; preds = %originalBBpart28, %originalBBpart24
  %72 = phi i1 [ false, %originalBBpart24 ], [ %62, %originalBBpart28 ], !dbg !370
  %73 = load i32, i32* @x.1
  %74 = load i32, i32* @y.2
  %75 = sub i32 %73, 1
  %76 = mul i32 %73, %75
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %74, 10
  %80 = or i1 %78, %79
  br i1 %80, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %71, %originalBB10alteredBB
  %81 = load i32, i32* @x.1
  %82 = load i32, i32* @y.2
  %83 = sub i32 %81, 1
  %84 = mul i32 %81, %83
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %82, 10
  %88 = or i1 %86, %87
  br i1 %88, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %72, label %89, label %108, !dbg !364

89:                                               ; preds = %originalBBpart212
  %90 = load i32, i32* @x.1
  %91 = load i32, i32* @y.2
  %92 = sub i32 %90, 1
  %93 = mul i32 %90, %92
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %91, 10
  %97 = or i1 %95, %96
  br i1 %97, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %89, %originalBB14alteredBB
  %98 = load %struct.infomap*, %struct.infomap** %13, align 8, !dbg !371
  %99 = getelementptr inbounds %struct.infomap, %struct.infomap* %98, i32 1, !dbg !371
  store %struct.infomap* %99, %struct.infomap** %13, align 8, !dbg !371
  %100 = load i32, i32* @x.1
  %101 = load i32, i32* @y.2
  %102 = sub i32 %100, 1
  %103 = mul i32 %100, %102
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %101, 10
  %107 = or i1 %105, %106
  br i1 %107, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %26, !dbg !364, !llvm.loop !372

108:                                              ; preds = %originalBBpart212
  %109 = load i32, i32* @x.1
  %110 = load i32, i32* @y.2
  %111 = sub i32 %109, 1
  %112 = mul i32 %109, %111
  %113 = urem i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = icmp slt i32 %110, 10
  %116 = or i1 %114, %115
  br i1 %116, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %108, %originalBB18alteredBB
  %117 = load %struct.infomap*, %struct.infomap** %13, align 8, !dbg !373
  %118 = getelementptr inbounds %struct.infomap, %struct.infomap* %117, i32 0, i32 1, !dbg !375
  %119 = load i8*, i8** %118, align 8, !dbg !375
  %120 = icmp ne i8* %119, null, !dbg !373
  %121 = load i32, i32* @x.1
  %122 = load i32, i32* @y.2
  %123 = sub i32 %121, 1
  %124 = mul i32 %121, %123
  %125 = urem i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %122, 10
  %128 = or i1 %126, %127
  br i1 %128, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br i1 %120, label %129, label %149, !dbg !376

129:                                              ; preds = %originalBBpart220
  %130 = load i32, i32* @x.1
  %131 = load i32, i32* @y.2
  %132 = sub i32 %130, 1
  %133 = mul i32 %130, %132
  %134 = urem i32 %133, 2
  %135 = icmp eq i32 %134, 0
  %136 = icmp slt i32 %131, 10
  %137 = or i1 %135, %136
  br i1 %137, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %129, %originalBB22alteredBB
  %138 = load %struct.infomap*, %struct.infomap** %13, align 8, !dbg !377
  %139 = getelementptr inbounds %struct.infomap, %struct.infomap* %138, i32 0, i32 1, !dbg !378
  %140 = load i8*, i8** %139, align 8, !dbg !378
  store i8* %140, i8** %12, align 8, !dbg !379
  %141 = load i32, i32* @x.1
  %142 = load i32, i32* @y.2
  %143 = sub i32 %141, 1
  %144 = mul i32 %141, %143
  %145 = urem i32 %144, 2
  %146 = icmp eq i32 %145, 0
  %147 = icmp slt i32 %142, 10
  %148 = or i1 %146, %147
  br i1 %148, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br label %149, !dbg !380

149:                                              ; preds = %originalBBpart224, %originalBBpart220
  %150 = load i32, i32* @x.1
  %151 = load i32, i32* @y.2
  %152 = sub i32 %150, 1
  %153 = mul i32 %150, %152
  %154 = urem i32 %153, 2
  %155 = icmp eq i32 %154, 0
  %156 = icmp slt i32 %151, 10
  %157 = or i1 %155, %156
  br i1 %157, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %149, %originalBB26alteredBB
  %158 = call i8* @gettext(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.35, i64 0, i64 0)) #10, !dbg !381
  %159 = call i32 (i8*, ...) @printf(i8* %158, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.36, i64 0, i64 0)), !dbg !382
  call void @llvm.dbg.declare(metadata i8** %14, metadata !383, metadata !DIExpression()), !dbg !384
  %160 = call i8* @setlocale(i32 5, i8* null) #10, !dbg !385
  store i8* %160, i8** %14, align 8, !dbg !384
  %161 = load i8*, i8** %14, align 8, !dbg !386
  %162 = icmp ne i8* %161, null, !dbg !386
  %163 = load i32, i32* @x.1
  %164 = load i32, i32* @y.2
  %165 = sub i32 %163, 1
  %166 = mul i32 %163, %165
  %167 = urem i32 %166, 2
  %168 = icmp eq i32 %167, 0
  %169 = icmp slt i32 %164, 10
  %170 = or i1 %168, %169
  br i1 %170, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br i1 %162, label %171, label %211, !dbg !388

171:                                              ; preds = %originalBBpart228
  %172 = load i32, i32* @x.1
  %173 = load i32, i32* @y.2
  %174 = sub i32 %172, 1
  %175 = mul i32 %172, %174
  %176 = urem i32 %175, 2
  %177 = icmp eq i32 %176, 0
  %178 = icmp slt i32 %173, 10
  %179 = or i1 %177, %178
  br i1 %179, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %171, %originalBB30alteredBB
  %180 = load i8*, i8** %14, align 8, !dbg !389
  %181 = call i32 @strncmp(i8* %180, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.37, i64 0, i64 0), i64 3) #13, !dbg !389
  %182 = icmp ne i32 %181, 0, !dbg !389
  %183 = load i32, i32* @x.1
  %184 = load i32, i32* @y.2
  %185 = sub i32 %183, 1
  %186 = mul i32 %183, %185
  %187 = urem i32 %186, 2
  %188 = icmp eq i32 %187, 0
  %189 = icmp slt i32 %184, 10
  %190 = or i1 %188, %189
  br i1 %190, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br i1 %182, label %191, label %211, !dbg !390

191:                                              ; preds = %originalBBpart232
  %192 = load i32, i32* @x.1
  %193 = load i32, i32* @y.2
  %194 = sub i32 %192, 1
  %195 = mul i32 %192, %194
  %196 = urem i32 %195, 2
  %197 = icmp eq i32 %196, 0
  %198 = icmp slt i32 %193, 10
  %199 = or i1 %197, %198
  br i1 %199, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %191, %originalBB34alteredBB
  %200 = call i8* @gettext(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.38, i64 0, i64 0)) #10, !dbg !391
  %201 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !391
  %202 = call i32 @fputs_unlocked(i8* %200, %struct._IO_FILE* %201), !dbg !391
  %203 = load i32, i32* @x.1
  %204 = load i32, i32* @y.2
  %205 = sub i32 %203, 1
  %206 = mul i32 %203, %205
  %207 = urem i32 %206, 2
  %208 = icmp eq i32 %207, 0
  %209 = icmp slt i32 %204, 10
  %210 = or i1 %208, %209
  br i1 %210, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  br label %211, !dbg !393

211:                                              ; preds = %originalBBpart236, %originalBBpart232, %originalBBpart228
  %212 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.39, i64 0, i64 0)) #10, !dbg !394
  %213 = load i8*, i8** %10, align 8, !dbg !395
  %214 = call i32 (i8*, ...) @printf(i8* %212, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.36, i64 0, i64 0), i8* %213), !dbg !396
  %215 = call i8* @gettext(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.40, i64 0, i64 0)) #10, !dbg !397
  %216 = load i8*, i8** %12, align 8, !dbg !398
  %217 = load i8*, i8** %12, align 8, !dbg !399
  %218 = load i8*, i8** %10, align 8, !dbg !400
  %219 = icmp eq i8* %217, %218, !dbg !401
  %220 = zext i1 %219 to i64, !dbg !399
  %221 = select i1 %219, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.41, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.8, i64 0, i64 0), !dbg !399
  %222 = call i32 (i8*, ...) @printf(i8* %215, i8* %216, i8* %221), !dbg !402
  ret void, !dbg !403

originalBBalteredBB:                              ; preds = %originalBB, %1
  %223 = alloca i8*, align 8
  %224 = alloca [7 x %struct.infomap], align 16
  %225 = alloca i8*, align 8
  %226 = alloca %struct.infomap*, align 8
  %227 = alloca i8*, align 8
  store i8* %0, i8** %223, align 8
  call void @llvm.dbg.declare(metadata i8** %223, metadata !404, metadata !DIExpression()), !dbg !346
  call void @llvm.dbg.declare(metadata [7 x %struct.infomap]* %224, metadata !452, metadata !DIExpression()), !dbg !356
  %228 = bitcast [7 x %struct.infomap]* %224 to i8*, !dbg !356
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %228, i8* align 16 bitcast ([7 x %struct.infomap]* @__const.emit_ancillary_info.infomap to i8*), i64 112, i1 false), !dbg !356
  call void @llvm.dbg.declare(metadata i8** %225, metadata !459, metadata !DIExpression()), !dbg !358
  %229 = load i8*, i8** %223, align 8, !dbg !359
  store i8* %229, i8** %225, align 8, !dbg !358
  call void @llvm.dbg.declare(metadata %struct.infomap** %226, metadata !460, metadata !DIExpression()), !dbg !362
  %230 = getelementptr inbounds [7 x %struct.infomap], [7 x %struct.infomap]* %224, i64 0, i64 0, !dbg !363
  store %struct.infomap* %230, %struct.infomap** %226, align 8, !dbg !362
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %26
  %231 = load %struct.infomap*, %struct.infomap** %13, align 8, !dbg !365
  %232 = getelementptr inbounds %struct.infomap, %struct.infomap* %231, i32 0, i32 0, !dbg !366
  %233 = load i8*, i8** %232, align 8, !dbg !366
  %234 = icmp ne i8* %233, null, !dbg !365
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %47
  %235 = load i8*, i8** %10, align 8, !dbg !368
  %236 = load %struct.infomap*, %struct.infomap** %13, align 8, !dbg !368
  %237 = getelementptr inbounds %struct.infomap, %struct.infomap* %236, i32 0, i32 0, !dbg !368
  %238 = load i8*, i8** %237, align 8, !dbg !368
  %239 = call i32 @strcmp(i8* %235, i8* %238) #13, !dbg !368
  %240 = icmp eq i32 %239, 0, !dbg !368
  %241 = xor i1 %240, true, !dbg !369
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %71
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %89
  %242 = load %struct.infomap*, %struct.infomap** %13, align 8, !dbg !371
  %243 = getelementptr inbounds %struct.infomap, %struct.infomap* %242, i32 1, !dbg !371
  store %struct.infomap* %243, %struct.infomap** %13, align 8, !dbg !371
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %108
  %244 = load %struct.infomap*, %struct.infomap** %13, align 8, !dbg !373
  %245 = getelementptr inbounds %struct.infomap, %struct.infomap* %244, i32 0, i32 1, !dbg !375
  %246 = load i8*, i8** %245, align 8, !dbg !375
  %247 = icmp ne i8* %246, null, !dbg !373
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %129
  %248 = load %struct.infomap*, %struct.infomap** %13, align 8, !dbg !377
  %249 = getelementptr inbounds %struct.infomap, %struct.infomap* %248, i32 0, i32 1, !dbg !378
  %250 = load i8*, i8** %249, align 8, !dbg !378
  store i8* %250, i8** %12, align 8, !dbg !379
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %149
  %251 = call i8* @gettext(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.35, i64 0, i64 0)) #10, !dbg !381
  %252 = call i32 (i8*, ...) @printf(i8* %251, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.36, i64 0, i64 0)), !dbg !382
  call void @llvm.dbg.declare(metadata !4, metadata !462, metadata !DIExpression()), !dbg !384
  %253 = call i8* @setlocale(i32 5, i8* null) #10, !dbg !385
  store i8* %253, i8** %14, align 8, !dbg !384
  %254 = load i8*, i8** %14, align 8, !dbg !386
  %255 = icmp ne i8* %254, null, !dbg !386
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %171
  %256 = load i8*, i8** %14, align 8, !dbg !389
  %257 = call i32 @strncmp(i8* %256, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.37, i64 0, i64 0), i64 3) #13, !dbg !389
  %258 = icmp ne i32 %257, 0, !dbg !389
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %191
  %259 = call i8* @gettext(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.38, i64 0, i64 0)) #10, !dbg !391
  %260 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !391
  %261 = call i32 @fputs_unlocked(i8* %259, %struct._IO_FILE* %260), !dbg !391
  br label %originalBB34
}

; Function Attrs: noreturn nounwind
declare dso_local void @exit(i32) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #6

; Function Attrs: nounwind readonly
declare dso_local i32 @strcmp(i8*, i8*) #7

; Function Attrs: nounwind
declare dso_local i8* @setlocale(i32, i8*) #2

; Function Attrs: nounwind readonly
declare dso_local i32 @strncmp(i8*, i8*, i64) #7

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32, i8**) #4 !dbg !510 {
  %3 = load i32, i32* @x.3
  %4 = load i32, i32* @y.4
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  store i8** %1, i8*** @inVal1
  store i32 %0, i32* @inVal0
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i8**, align 8
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i8, align 1
  %17 = alloca i8*, align 8
  %18 = alloca i64, align 8
  %19 = alloca i8, align 1
  %20 = alloca %struct.passwd*, align 8
  %21 = alloca i8*, align 8
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  store i32 0, i32* %11, align 4
  store i32 %0, i32* %12, align 4
  call void @llvm.dbg.declare(metadata i32* %12, metadata !513, metadata !DIExpression()), !dbg !514
  store i8** %1, i8*** %13, align 8
  call void @llvm.dbg.declare(metadata i8*** %13, metadata !515, metadata !DIExpression()), !dbg !516
  call void @llvm.dbg.declare(metadata i32* %14, metadata !517, metadata !DIExpression()), !dbg !518
  call void @llvm.dbg.declare(metadata i32* %15, metadata !519, metadata !DIExpression()), !dbg !520
  store i32 0, i32* %15, align 4, !dbg !520
  call void @llvm.dbg.declare(metadata i8* %16, metadata !521, metadata !DIExpression()), !dbg !522
  %24 = call zeroext i1 @is_smack_enabled(), !dbg !523
  %25 = zext i1 %24 to i8, !dbg !522
  store i8 %25, i8* %16, align 1, !dbg !522
  call void @llvm.dbg.declare(metadata i8** %17, metadata !524, metadata !DIExpression()), !dbg !525
  store i8* null, i8** %17, align 8, !dbg !525
  %26 = load i8**, i8*** %13, align 8, !dbg !526
  %27 = getelementptr inbounds i8*, i8** %26, i64 0, !dbg !526
  %28 = load i8*, i8** %27, align 8, !dbg !526
  call void @set_program_name(i8* %28), !dbg !527
  %29 = call i8* @setlocale(i32 6, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.8, i64 0, i64 0)) #10, !dbg !528
  %30 = call i8* @bindtextdomain(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.10, i64 0, i64 0)) #10, !dbg !529
  %31 = call i8* @textdomain(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9, i64 0, i64 0)) #10, !dbg !530
  %32 = call i32 @atexit(void ()* @close_stdout) #10, !dbg !531
  %33 = load i32, i32* @x.3
  %34 = load i32, i32* @y.4
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %41, !dbg !532

41:                                               ; preds = %originalBBpart264, %originalBBpart2
  %42 = load i32, i32* @x.3
  %43 = load i32, i32* @y.4
  %44 = sub i32 %42, 1
  %45 = mul i32 %42, %44
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %47, %48
  br i1 %49, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %41, %originalBB1alteredBB
  %50 = load i32, i32* %12, align 4, !dbg !533
  %51 = load i8**, i8*** %13, align 8, !dbg !534
  %52 = call i32 @getopt_long(i32 %50, i8** %51, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.11, i64 0, i64 0), %struct.option* getelementptr inbounds ([10 x %struct.option], [10 x %struct.option]* @longopts, i64 0, i64 0), i32* null) #10, !dbg !535
  store i32 %52, i32* %14, align 4, !dbg !536
  %53 = icmp ne i32 %52, -1, !dbg !537
  %54 = load i32, i32* @x.3
  %55 = load i32, i32* @y.4
  %56 = sub i32 %54, 1
  %57 = mul i32 %54, %56
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %55, 10
  %61 = or i1 %59, %60
  br i1 %61, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %53, label %62, label %323, !dbg !532

62:                                               ; preds = %originalBBpart24
  %63 = load i32, i32* @x.3
  %64 = load i32, i32* @y.4
  %65 = sub i32 %63, 1
  %66 = mul i32 %63, %65
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %64, 10
  %70 = or i1 %68, %69
  br i1 %70, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %62, %originalBB6alteredBB
  %71 = load i32, i32* %14, align 4, !dbg !538
  %72 = load i32, i32* @x.3
  %73 = load i32, i32* @y.4
  %74 = sub i32 %72, 1
  %75 = mul i32 %72, %74
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %73, 10
  %79 = or i1 %77, %78
  br i1 %79, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  switch i32 %71, label %289 [
    i32 97, label %80
    i32 90, label %97
    i32 103, label %151
    i32 110, label %168
    i32 114, label %185
    i32 117, label %202
    i32 122, label %219
    i32 71, label %236
    i32 -130, label %253
    i32 -131, label %270
  ], !dbg !540

80:                                               ; preds = %originalBBpart28
  %81 = load i32, i32* @x.3
  %82 = load i32, i32* @y.4
  %83 = sub i32 %81, 1
  %84 = mul i32 %81, %83
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %82, 10
  %88 = or i1 %86, %87
  br i1 %88, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %80, %originalBB10alteredBB
  %89 = load i32, i32* @x.3
  %90 = load i32, i32* @y.4
  %91 = sub i32 %89, 1
  %92 = mul i32 %89, %91
  %93 = urem i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %90, 10
  %96 = or i1 %94, %95
  br i1 %96, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %306, !dbg !541

97:                                               ; preds = %originalBBpart28
  %98 = load i32, i32* @x.3
  %99 = load i32, i32* @y.4
  %100 = sub i32 %98, 1
  %101 = mul i32 %98, %100
  %102 = urem i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = icmp slt i32 %99, 10
  %105 = or i1 %103, %104
  br i1 %105, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %97, %originalBB14alteredBB
  %106 = load i32, i32* %15, align 4, !dbg !543
  %107 = icmp ne i32 %106, 0, !dbg !543
  %108 = load i32, i32* @x.3
  %109 = load i32, i32* @y.4
  %110 = sub i32 %108, 1
  %111 = mul i32 %108, %110
  %112 = urem i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %109, 10
  %115 = or i1 %113, %114
  br i1 %115, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %107, label %134, label %116, !dbg !545

116:                                              ; preds = %originalBBpart216
  %117 = load i32, i32* @x.3
  %118 = load i32, i32* @y.4
  %119 = sub i32 %117, 1
  %120 = mul i32 %117, %119
  %121 = urem i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = icmp slt i32 %118, 10
  %124 = or i1 %122, %123
  br i1 %124, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %116, %originalBB18alteredBB
  %125 = call i8* @gettext(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.12, i64 0, i64 0)) #10, !dbg !546
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %125), !dbg !546
  %126 = load i32, i32* @x.3
  %127 = load i32, i32* @y.4
  %128 = sub i32 %126, 1
  %129 = mul i32 %126, %128
  %130 = urem i32 %129, 2
  %131 = icmp eq i32 %130, 0
  %132 = icmp slt i32 %127, 10
  %133 = or i1 %131, %132
  br i1 %133, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  unreachable, !dbg !546

134:                                              ; preds = %originalBBpart216
  %135 = load i32, i32* @x.3
  %136 = load i32, i32* @y.4
  %137 = sub i32 %135, 1
  %138 = mul i32 %135, %137
  %139 = urem i32 %138, 2
  %140 = icmp eq i32 %139, 0
  %141 = icmp slt i32 %136, 10
  %142 = or i1 %140, %141
  br i1 %142, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %134, %originalBB22alteredBB
  store i8 1, i8* @just_context, align 1, !dbg !547
  %143 = load i32, i32* @x.3
  %144 = load i32, i32* @y.4
  %145 = sub i32 %143, 1
  %146 = mul i32 %143, %145
  %147 = urem i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = icmp slt i32 %144, 10
  %150 = or i1 %148, %149
  br i1 %150, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br label %306, !dbg !548

151:                                              ; preds = %originalBBpart28
  %152 = load i32, i32* @x.3
  %153 = load i32, i32* @y.4
  %154 = sub i32 %152, 1
  %155 = mul i32 %152, %154
  %156 = urem i32 %155, 2
  %157 = icmp eq i32 %156, 0
  %158 = icmp slt i32 %153, 10
  %159 = or i1 %157, %158
  br i1 %159, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %151, %originalBB26alteredBB
  store i8 1, i8* @just_group, align 1, !dbg !549
  %160 = load i32, i32* @x.3
  %161 = load i32, i32* @y.4
  %162 = sub i32 %160, 1
  %163 = mul i32 %160, %162
  %164 = urem i32 %163, 2
  %165 = icmp eq i32 %164, 0
  %166 = icmp slt i32 %161, 10
  %167 = or i1 %165, %166
  br i1 %167, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br label %306, !dbg !550

168:                                              ; preds = %originalBBpart28
  %169 = load i32, i32* @x.3
  %170 = load i32, i32* @y.4
  %171 = sub i32 %169, 1
  %172 = mul i32 %169, %171
  %173 = urem i32 %172, 2
  %174 = icmp eq i32 %173, 0
  %175 = icmp slt i32 %170, 10
  %176 = or i1 %174, %175
  br i1 %176, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %168, %originalBB30alteredBB
  store i8 1, i8* @use_name, align 1, !dbg !551
  %177 = load i32, i32* @x.3
  %178 = load i32, i32* @y.4
  %179 = sub i32 %177, 1
  %180 = mul i32 %177, %179
  %181 = urem i32 %180, 2
  %182 = icmp eq i32 %181, 0
  %183 = icmp slt i32 %178, 10
  %184 = or i1 %182, %183
  br i1 %184, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br label %306, !dbg !552

185:                                              ; preds = %originalBBpart28
  %186 = load i32, i32* @x.3
  %187 = load i32, i32* @y.4
  %188 = sub i32 %186, 1
  %189 = mul i32 %186, %188
  %190 = urem i32 %189, 2
  %191 = icmp eq i32 %190, 0
  %192 = icmp slt i32 %187, 10
  %193 = or i1 %191, %192
  br i1 %193, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %185, %originalBB34alteredBB
  store i8 1, i8* @use_real, align 1, !dbg !553
  %194 = load i32, i32* @x.3
  %195 = load i32, i32* @y.4
  %196 = sub i32 %194, 1
  %197 = mul i32 %194, %196
  %198 = urem i32 %197, 2
  %199 = icmp eq i32 %198, 0
  %200 = icmp slt i32 %195, 10
  %201 = or i1 %199, %200
  br i1 %201, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  br label %306, !dbg !554

202:                                              ; preds = %originalBBpart28
  %203 = load i32, i32* @x.3
  %204 = load i32, i32* @y.4
  %205 = sub i32 %203, 1
  %206 = mul i32 %203, %205
  %207 = urem i32 %206, 2
  %208 = icmp eq i32 %207, 0
  %209 = icmp slt i32 %204, 10
  %210 = or i1 %208, %209
  br i1 %210, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %202, %originalBB38alteredBB
  store i8 1, i8* @just_user, align 1, !dbg !555
  %211 = load i32, i32* @x.3
  %212 = load i32, i32* @y.4
  %213 = sub i32 %211, 1
  %214 = mul i32 %211, %213
  %215 = urem i32 %214, 2
  %216 = icmp eq i32 %215, 0
  %217 = icmp slt i32 %212, 10
  %218 = or i1 %216, %217
  br i1 %218, label %originalBBpart240, label %originalBB38alteredBB

originalBBpart240:                                ; preds = %originalBB38
  br label %306, !dbg !556

219:                                              ; preds = %originalBBpart28
  %220 = load i32, i32* @x.3
  %221 = load i32, i32* @y.4
  %222 = sub i32 %220, 1
  %223 = mul i32 %220, %222
  %224 = urem i32 %223, 2
  %225 = icmp eq i32 %224, 0
  %226 = icmp slt i32 %221, 10
  %227 = or i1 %225, %226
  br i1 %227, label %originalBB42, label %originalBB42alteredBB

originalBB42:                                     ; preds = %219, %originalBB42alteredBB
  store i8 1, i8* @opt_zero, align 1, !dbg !557
  %228 = load i32, i32* @x.3
  %229 = load i32, i32* @y.4
  %230 = sub i32 %228, 1
  %231 = mul i32 %228, %230
  %232 = urem i32 %231, 2
  %233 = icmp eq i32 %232, 0
  %234 = icmp slt i32 %229, 10
  %235 = or i1 %233, %234
  br i1 %235, label %originalBBpart244, label %originalBB42alteredBB

originalBBpart244:                                ; preds = %originalBB42
  br label %306, !dbg !558

236:                                              ; preds = %originalBBpart28
  %237 = load i32, i32* @x.3
  %238 = load i32, i32* @y.4
  %239 = sub i32 %237, 1
  %240 = mul i32 %237, %239
  %241 = urem i32 %240, 2
  %242 = icmp eq i32 %241, 0
  %243 = icmp slt i32 %238, 10
  %244 = or i1 %242, %243
  br i1 %244, label %originalBB46, label %originalBB46alteredBB

originalBB46:                                     ; preds = %236, %originalBB46alteredBB
  store i8 1, i8* @just_group_list, align 1, !dbg !559
  %245 = load i32, i32* @x.3
  %246 = load i32, i32* @y.4
  %247 = sub i32 %245, 1
  %248 = mul i32 %245, %247
  %249 = urem i32 %248, 2
  %250 = icmp eq i32 %249, 0
  %251 = icmp slt i32 %246, 10
  %252 = or i1 %250, %251
  br i1 %252, label %originalBBpart248, label %originalBB46alteredBB

originalBBpart248:                                ; preds = %originalBB46
  br label %306, !dbg !560

253:                                              ; preds = %originalBBpart28
  %254 = load i32, i32* @x.3
  %255 = load i32, i32* @y.4
  %256 = sub i32 %254, 1
  %257 = mul i32 %254, %256
  %258 = urem i32 %257, 2
  %259 = icmp eq i32 %258, 0
  %260 = icmp slt i32 %255, 10
  %261 = or i1 %259, %260
  br i1 %261, label %originalBB50, label %originalBB50alteredBB

originalBB50:                                     ; preds = %253, %originalBB50alteredBB
  call void @usage(i32 0) #14, !dbg !561
  %262 = load i32, i32* @x.3
  %263 = load i32, i32* @y.4
  %264 = sub i32 %262, 1
  %265 = mul i32 %262, %264
  %266 = urem i32 %265, 2
  %267 = icmp eq i32 %266, 0
  %268 = icmp slt i32 %263, 10
  %269 = or i1 %267, %268
  br i1 %269, label %originalBBpart252, label %originalBB50alteredBB

originalBBpart252:                                ; preds = %originalBB50
  unreachable, !dbg !561

270:                                              ; preds = %originalBBpart28
  %271 = load i32, i32* @x.3
  %272 = load i32, i32* @y.4
  %273 = sub i32 %271, 1
  %274 = mul i32 %271, %273
  %275 = urem i32 %274, 2
  %276 = icmp eq i32 %275, 0
  %277 = icmp slt i32 %272, 10
  %278 = or i1 %276, %277
  br i1 %278, label %originalBB54, label %originalBB54alteredBB

originalBB54:                                     ; preds = %270, %originalBB54alteredBB
  %279 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !562
  %280 = load i8*, i8** @Version, align 8, !dbg !562
  call void (%struct._IO_FILE*, i8*, i8*, i8*, ...) @version_etc(%struct._IO_FILE* %279, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.13, i64 0, i64 0), i8* %280, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.15, i64 0, i64 0), i8* null), !dbg !562
  call void @exit(i32 0) #12, !dbg !562
  %281 = load i32, i32* @x.3
  %282 = load i32, i32* @y.4
  %283 = sub i32 %281, 1
  %284 = mul i32 %281, %283
  %285 = urem i32 %284, 2
  %286 = icmp eq i32 %285, 0
  %287 = icmp slt i32 %282, 10
  %288 = or i1 %286, %287
  br i1 %288, label %originalBBpart256, label %originalBB54alteredBB

originalBBpart256:                                ; preds = %originalBB54
  unreachable, !dbg !562

289:                                              ; preds = %originalBBpart28
  %290 = load i32, i32* @x.3
  %291 = load i32, i32* @y.4
  %292 = sub i32 %290, 1
  %293 = mul i32 %290, %292
  %294 = urem i32 %293, 2
  %295 = icmp eq i32 %294, 0
  %296 = icmp slt i32 %291, 10
  %297 = or i1 %295, %296
  br i1 %297, label %originalBB58, label %originalBB58alteredBB

originalBB58:                                     ; preds = %289, %originalBB58alteredBB
  call void @usage(i32 1) #14, !dbg !563
  %298 = load i32, i32* @x.3
  %299 = load i32, i32* @y.4
  %300 = sub i32 %298, 1
  %301 = mul i32 %298, %300
  %302 = urem i32 %301, 2
  %303 = icmp eq i32 %302, 0
  %304 = icmp slt i32 %299, 10
  %305 = or i1 %303, %304
  br i1 %305, label %originalBBpart260, label %originalBB58alteredBB

originalBBpart260:                                ; preds = %originalBB58
  unreachable, !dbg !563

306:                                              ; preds = %originalBBpart248, %originalBBpart244, %originalBBpart240, %originalBBpart236, %originalBBpart232, %originalBBpart228, %originalBBpart224, %originalBBpart212
  %307 = load i32, i32* @x.3
  %308 = load i32, i32* @y.4
  %309 = sub i32 %307, 1
  %310 = mul i32 %307, %309
  %311 = urem i32 %310, 2
  %312 = icmp eq i32 %311, 0
  %313 = icmp slt i32 %308, 10
  %314 = or i1 %312, %313
  br i1 %314, label %originalBB62, label %originalBB62alteredBB

originalBB62:                                     ; preds = %306, %originalBB62alteredBB
  %315 = load i32, i32* @x.3
  %316 = load i32, i32* @y.4
  %317 = sub i32 %315, 1
  %318 = mul i32 %315, %317
  %319 = urem i32 %318, 2
  %320 = icmp eq i32 %319, 0
  %321 = icmp slt i32 %316, 10
  %322 = or i1 %320, %321
  br i1 %322, label %originalBBpart264, label %originalBB62alteredBB

originalBBpart264:                                ; preds = %originalBB62
  br label %41, !dbg !532, !llvm.loop !564

323:                                              ; preds = %originalBBpart24
  call void @llvm.dbg.declare(metadata i64* %18, metadata !566, metadata !DIExpression()), !dbg !567
  %324 = load i32, i32* @x.3
  %325 = load i32, i32* @y.4
  %326 = sub i32 %324, 1
  %327 = mul i32 %324, %326
  %328 = urem i32 %327, 2
  %329 = icmp eq i32 %328, 0
  %330 = icmp slt i32 %325, 10
  %331 = or i1 %329, %330
  br i1 %331, label %originalBB66, label %originalBB66alteredBB

originalBB66:                                     ; preds = %323, %originalBB66alteredBB
  %332 = load i32, i32* %12, align 4, !dbg !568
  %333 = load i32, i32* @optind, align 4, !dbg !569
  %334 = sub nsw i32 %332, %333, !dbg !570
  %335 = sext i32 %334 to i64, !dbg !568
  store i64 %335, i64* %18, align 8, !dbg !567
  %336 = load i64, i64* %18, align 8, !dbg !571
  %337 = icmp ne i64 %336, 0, !dbg !571
  %338 = load i32, i32* @x.3
  %339 = load i32, i32* @y.4
  %340 = sub i32 %338, 1
  %341 = mul i32 %338, %340
  %342 = urem i32 %341, 2
  %343 = icmp eq i32 %342, 0
  %344 = icmp slt i32 %339, 10
  %345 = or i1 %343, %344
  br i1 %345, label %originalBBpart283, label %originalBB66alteredBB

originalBBpart283:                                ; preds = %originalBB66
  br i1 %337, label %346, label %383, !dbg !573

346:                                              ; preds = %originalBBpart283
  %347 = load i32, i32* @x.3
  %348 = load i32, i32* @y.4
  %349 = sub i32 %347, 1
  %350 = mul i32 %347, %349
  %351 = urem i32 %350, 2
  %352 = icmp eq i32 %351, 0
  %353 = icmp slt i32 %348, 10
  %354 = or i1 %352, %353
  br i1 %354, label %originalBB85, label %originalBB85alteredBB

originalBB85:                                     ; preds = %346, %originalBB85alteredBB
  %355 = load i8, i8* @just_context, align 1, !dbg !574
  %356 = trunc i8 %355 to i1, !dbg !574
  %357 = load i32, i32* @x.3
  %358 = load i32, i32* @y.4
  %359 = sub i32 %357, 1
  %360 = mul i32 %357, %359
  %361 = urem i32 %360, 2
  %362 = icmp eq i32 %361, 0
  %363 = icmp slt i32 %358, 10
  %364 = or i1 %362, %363
  br i1 %364, label %originalBBpart287, label %originalBB85alteredBB

originalBBpart287:                                ; preds = %originalBB85
  br i1 %356, label %365, label %383, !dbg !575

365:                                              ; preds = %originalBBpart287
  %366 = load i32, i32* @x.3
  %367 = load i32, i32* @y.4
  %368 = sub i32 %366, 1
  %369 = mul i32 %366, %368
  %370 = urem i32 %369, 2
  %371 = icmp eq i32 %370, 0
  %372 = icmp slt i32 %367, 10
  %373 = or i1 %371, %372
  br i1 %373, label %originalBB89, label %originalBB89alteredBB

originalBB89:                                     ; preds = %365, %originalBB89alteredBB
  %374 = call i8* @gettext(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.16, i64 0, i64 0)) #10, !dbg !576
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %374), !dbg !576
  %375 = load i32, i32* @x.3
  %376 = load i32, i32* @y.4
  %377 = sub i32 %375, 1
  %378 = mul i32 %375, %377
  %379 = urem i32 %378, 2
  %380 = icmp eq i32 %379, 0
  %381 = icmp slt i32 %376, 10
  %382 = or i1 %380, %381
  br i1 %382, label %originalBBpart291, label %originalBB89alteredBB

originalBBpart291:                                ; preds = %originalBB89
  unreachable, !dbg !576

383:                                              ; preds = %originalBBpart287, %originalBBpart283
  %384 = load i32, i32* @x.3
  %385 = load i32, i32* @y.4
  %386 = sub i32 %384, 1
  %387 = mul i32 %384, %386
  %388 = urem i32 %387, 2
  %389 = icmp eq i32 %388, 0
  %390 = icmp slt i32 %385, 10
  %391 = or i1 %389, %390
  br i1 %391, label %originalBB93, label %originalBB93alteredBB

originalBB93:                                     ; preds = %383, %originalBB93alteredBB
  %392 = load i8, i8* @just_user, align 1, !dbg !577
  %393 = trunc i8 %392 to i1, !dbg !577
  %394 = zext i1 %393 to i32, !dbg !577
  %395 = load i8, i8* @just_group, align 1, !dbg !579
  %396 = trunc i8 %395 to i1, !dbg !579
  %397 = zext i1 %396 to i32, !dbg !579
  %398 = add nsw i32 %394, %397, !dbg !580
  %399 = load i8, i8* @just_group_list, align 1, !dbg !581
  %400 = trunc i8 %399 to i1, !dbg !581
  %401 = zext i1 %400 to i32, !dbg !581
  %402 = add nsw i32 %398, %401, !dbg !582
  %403 = load i8, i8* @just_context, align 1, !dbg !583
  %404 = trunc i8 %403 to i1, !dbg !583
  %405 = zext i1 %404 to i32, !dbg !583
  %406 = add nsw i32 %402, %405, !dbg !584
  %407 = icmp sgt i32 %406, 1, !dbg !585
  %408 = load i32, i32* @x.3
  %409 = load i32, i32* @y.4
  %410 = sub i32 %408, 1
  %411 = mul i32 %408, %410
  %412 = urem i32 %411, 2
  %413 = icmp eq i32 %412, 0
  %414 = icmp slt i32 %409, 10
  %415 = or i1 %413, %414
  br i1 %415, label %originalBBpart2104, label %originalBB93alteredBB

originalBBpart2104:                               ; preds = %originalBB93
  br i1 %407, label %416, label %434, !dbg !586

416:                                              ; preds = %originalBBpart2104
  %417 = load i32, i32* @x.3
  %418 = load i32, i32* @y.4
  %419 = sub i32 %417, 1
  %420 = mul i32 %417, %419
  %421 = urem i32 %420, 2
  %422 = icmp eq i32 %421, 0
  %423 = icmp slt i32 %418, 10
  %424 = or i1 %422, %423
  br i1 %424, label %originalBB106, label %originalBB106alteredBB

originalBB106:                                    ; preds = %416, %originalBB106alteredBB
  %425 = call i8* @gettext(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.17, i64 0, i64 0)) #10, !dbg !587
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %425), !dbg !587
  %426 = load i32, i32* @x.3
  %427 = load i32, i32* @y.4
  %428 = sub i32 %426, 1
  %429 = mul i32 %426, %428
  %430 = urem i32 %429, 2
  %431 = icmp eq i32 %430, 0
  %432 = icmp slt i32 %427, 10
  %433 = or i1 %431, %432
  br i1 %433, label %originalBBpart2108, label %originalBB106alteredBB

originalBBpart2108:                               ; preds = %originalBB106
  unreachable, !dbg !587

434:                                              ; preds = %originalBBpart2104
  call void @llvm.dbg.declare(metadata i8* %19, metadata !588, metadata !DIExpression()), !dbg !589
  %435 = load i32, i32* @x.3
  %436 = load i32, i32* @y.4
  %437 = sub i32 %435, 1
  %438 = mul i32 %435, %437
  %439 = urem i32 %438, 2
  %440 = icmp eq i32 %439, 0
  %441 = icmp slt i32 %436, 10
  %442 = or i1 %440, %441
  br i1 %442, label %originalBB110, label %originalBB110alteredBB

originalBB110:                                    ; preds = %434, %originalBB110alteredBB
  %443 = load i8, i8* @just_user, align 1, !dbg !590
  %444 = trunc i8 %443 to i1, !dbg !590
  %445 = load i32, i32* @x.3
  %446 = load i32, i32* @y.4
  %447 = sub i32 %445, 1
  %448 = mul i32 %445, %447
  %449 = urem i32 %448, 2
  %450 = icmp eq i32 %449, 0
  %451 = icmp slt i32 %446, 10
  %452 = or i1 %450, %451
  br i1 %452, label %originalBBpart2112, label %originalBB110alteredBB

originalBBpart2112:                               ; preds = %originalBB110
  br i1 %444, label %510, label %453, !dbg !591

453:                                              ; preds = %originalBBpart2112
  %454 = load i32, i32* @x.3
  %455 = load i32, i32* @y.4
  %456 = sub i32 %454, 1
  %457 = mul i32 %454, %456
  %458 = urem i32 %457, 2
  %459 = icmp eq i32 %458, 0
  %460 = icmp slt i32 %455, 10
  %461 = or i1 %459, %460
  br i1 %461, label %originalBB114, label %originalBB114alteredBB

originalBB114:                                    ; preds = %453, %originalBB114alteredBB
  %462 = load i8, i8* @just_group, align 1, !dbg !592
  %463 = trunc i8 %462 to i1, !dbg !592
  %464 = load i32, i32* @x.3
  %465 = load i32, i32* @y.4
  %466 = sub i32 %464, 1
  %467 = mul i32 %464, %466
  %468 = urem i32 %467, 2
  %469 = icmp eq i32 %468, 0
  %470 = icmp slt i32 %465, 10
  %471 = or i1 %469, %470
  br i1 %471, label %originalBBpart2116, label %originalBB114alteredBB

originalBBpart2116:                               ; preds = %originalBB114
  br i1 %463, label %510, label %472, !dbg !593

472:                                              ; preds = %originalBBpart2116
  %473 = load i32, i32* @x.3
  %474 = load i32, i32* @y.4
  %475 = sub i32 %473, 1
  %476 = mul i32 %473, %475
  %477 = urem i32 %476, 2
  %478 = icmp eq i32 %477, 0
  %479 = icmp slt i32 %474, 10
  %480 = or i1 %478, %479
  br i1 %480, label %originalBB118, label %originalBB118alteredBB

originalBB118:                                    ; preds = %472, %originalBB118alteredBB
  %481 = load i8, i8* @just_group_list, align 1, !dbg !594
  %482 = trunc i8 %481 to i1, !dbg !594
  %483 = load i32, i32* @x.3
  %484 = load i32, i32* @y.4
  %485 = sub i32 %483, 1
  %486 = mul i32 %483, %485
  %487 = urem i32 %486, 2
  %488 = icmp eq i32 %487, 0
  %489 = icmp slt i32 %484, 10
  %490 = or i1 %488, %489
  br i1 %490, label %originalBBpart2120, label %originalBB118alteredBB

originalBBpart2120:                               ; preds = %originalBB118
  br i1 %482, label %510, label %491, !dbg !595

491:                                              ; preds = %originalBBpart2120
  %492 = load i32, i32* @x.3
  %493 = load i32, i32* @y.4
  %494 = sub i32 %492, 1
  %495 = mul i32 %492, %494
  %496 = urem i32 %495, 2
  %497 = icmp eq i32 %496, 0
  %498 = icmp slt i32 %493, 10
  %499 = or i1 %497, %498
  br i1 %499, label %originalBB122, label %originalBB122alteredBB

originalBB122:                                    ; preds = %491, %originalBB122alteredBB
  %500 = load i8, i8* @just_context, align 1, !dbg !596
  %501 = trunc i8 %500 to i1, !dbg !596
  %502 = load i32, i32* @x.3
  %503 = load i32, i32* @y.4
  %504 = sub i32 %502, 1
  %505 = mul i32 %502, %504
  %506 = urem i32 %505, 2
  %507 = icmp eq i32 %506, 0
  %508 = icmp slt i32 %503, 10
  %509 = or i1 %507, %508
  br i1 %509, label %originalBBpart2124, label %originalBB122alteredBB

originalBBpart2124:                               ; preds = %originalBB122
  br label %510, !dbg !595

510:                                              ; preds = %originalBBpart2124, %originalBBpart2120, %originalBBpart2116, %originalBBpart2112
  %511 = phi i1 [ true, %originalBBpart2120 ], [ true, %originalBBpart2116 ], [ true, %originalBBpart2112 ], [ %501, %originalBBpart2124 ]
  %512 = load i32, i32* @x.3
  %513 = load i32, i32* @y.4
  %514 = sub i32 %512, 1
  %515 = mul i32 %512, %514
  %516 = urem i32 %515, 2
  %517 = icmp eq i32 %516, 0
  %518 = icmp slt i32 %513, 10
  %519 = or i1 %517, %518
  br i1 %519, label %originalBB126, label %originalBB126alteredBB

originalBB126:                                    ; preds = %510, %originalBB126alteredBB
  %520 = xor i1 %511, true, !dbg !597
  %521 = zext i1 %520 to i8, !dbg !589
  store i8 %521, i8* %19, align 1, !dbg !589
  %522 = load i8, i8* %19, align 1, !dbg !598
  %523 = trunc i8 %522 to i1, !dbg !598
  %524 = load i32, i32* @x.3
  %525 = load i32, i32* @y.4
  %526 = sub i32 %524, 1
  %527 = mul i32 %524, %526
  %528 = urem i32 %527, 2
  %529 = icmp eq i32 %528, 0
  %530 = icmp slt i32 %525, 10
  %531 = or i1 %529, %530
  br i1 %531, label %originalBBpart2130, label %originalBB126alteredBB

originalBBpart2130:                               ; preds = %originalBB126
  br i1 %523, label %532, label %588, !dbg !600

532:                                              ; preds = %originalBBpart2130
  %533 = load i32, i32* @x.3
  %534 = load i32, i32* @y.4
  %535 = sub i32 %533, 1
  %536 = mul i32 %533, %535
  %537 = urem i32 %536, 2
  %538 = icmp eq i32 %537, 0
  %539 = icmp slt i32 %534, 10
  %540 = or i1 %538, %539
  br i1 %540, label %originalBB132, label %originalBB132alteredBB

originalBB132:                                    ; preds = %532, %originalBB132alteredBB
  %541 = load i8, i8* @use_real, align 1, !dbg !601
  %542 = trunc i8 %541 to i1, !dbg !601
  %543 = load i32, i32* @x.3
  %544 = load i32, i32* @y.4
  %545 = sub i32 %543, 1
  %546 = mul i32 %543, %545
  %547 = urem i32 %546, 2
  %548 = icmp eq i32 %547, 0
  %549 = icmp slt i32 %544, 10
  %550 = or i1 %548, %549
  br i1 %550, label %originalBBpart2134, label %originalBB132alteredBB

originalBBpart2134:                               ; preds = %originalBB132
  br i1 %542, label %570, label %551, !dbg !602

551:                                              ; preds = %originalBBpart2134
  %552 = load i32, i32* @x.3
  %553 = load i32, i32* @y.4
  %554 = sub i32 %552, 1
  %555 = mul i32 %552, %554
  %556 = urem i32 %555, 2
  %557 = icmp eq i32 %556, 0
  %558 = icmp slt i32 %553, 10
  %559 = or i1 %557, %558
  br i1 %559, label %originalBB136, label %originalBB136alteredBB

originalBB136:                                    ; preds = %551, %originalBB136alteredBB
  %560 = load i8, i8* @use_name, align 1, !dbg !603
  %561 = trunc i8 %560 to i1, !dbg !603
  %562 = load i32, i32* @x.3
  %563 = load i32, i32* @y.4
  %564 = sub i32 %562, 1
  %565 = mul i32 %562, %564
  %566 = urem i32 %565, 2
  %567 = icmp eq i32 %566, 0
  %568 = icmp slt i32 %563, 10
  %569 = or i1 %567, %568
  br i1 %569, label %originalBBpart2138, label %originalBB136alteredBB

originalBBpart2138:                               ; preds = %originalBB136
  br i1 %561, label %570, label %588, !dbg !604

570:                                              ; preds = %originalBBpart2138, %originalBBpart2134
  %571 = load i32, i32* @x.3
  %572 = load i32, i32* @y.4
  %573 = sub i32 %571, 1
  %574 = mul i32 %571, %573
  %575 = urem i32 %574, 2
  %576 = icmp eq i32 %575, 0
  %577 = icmp slt i32 %572, 10
  %578 = or i1 %576, %577
  br i1 %578, label %originalBB140, label %originalBB140alteredBB

originalBB140:                                    ; preds = %570, %originalBB140alteredBB
  %579 = call i8* @gettext(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.18, i64 0, i64 0)) #10, !dbg !605
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %579), !dbg !605
  %580 = load i32, i32* @x.3
  %581 = load i32, i32* @y.4
  %582 = sub i32 %580, 1
  %583 = mul i32 %580, %582
  %584 = urem i32 %583, 2
  %585 = icmp eq i32 %584, 0
  %586 = icmp slt i32 %581, 10
  %587 = or i1 %585, %586
  br i1 %587, label %originalBBpart2142, label %originalBB140alteredBB

originalBBpart2142:                               ; preds = %originalBB140
  unreachable, !dbg !605

588:                                              ; preds = %originalBBpart2138, %originalBBpart2130
  %589 = load i32, i32* @x.3
  %590 = load i32, i32* @y.4
  %591 = sub i32 %589, 1
  %592 = mul i32 %589, %591
  %593 = urem i32 %592, 2
  %594 = icmp eq i32 %593, 0
  %595 = icmp slt i32 %590, 10
  %596 = or i1 %594, %595
  br i1 %596, label %originalBB144, label %originalBB144alteredBB

originalBB144:                                    ; preds = %588, %originalBB144alteredBB
  %597 = load i8, i8* %19, align 1, !dbg !606
  %598 = trunc i8 %597 to i1, !dbg !606
  %599 = load i32, i32* @x.3
  %600 = load i32, i32* @y.4
  %601 = sub i32 %599, 1
  %602 = mul i32 %599, %601
  %603 = urem i32 %602, 2
  %604 = icmp eq i32 %603, 0
  %605 = icmp slt i32 %600, 10
  %606 = or i1 %604, %605
  br i1 %606, label %originalBBpart2146, label %originalBB144alteredBB

originalBBpart2146:                               ; preds = %originalBB144
  br i1 %598, label %607, label %628, !dbg !608

607:                                              ; preds = %originalBBpart2146
  %608 = load i32, i32* @x.3
  %609 = load i32, i32* @y.4
  %610 = sub i32 %608, 1
  %611 = mul i32 %608, %610
  %612 = urem i32 %611, 2
  %613 = icmp eq i32 %612, 0
  %614 = icmp slt i32 %609, 10
  %615 = or i1 %613, %614
  br i1 %615, label %originalBB148, label %originalBB148alteredBB

originalBB148:                                    ; preds = %607, %originalBB148alteredBB
  %616 = load i8, i8* @opt_zero, align 1, !dbg !609
  %617 = trunc i8 %616 to i1, !dbg !609
  %618 = load i32, i32* @x.3
  %619 = load i32, i32* @y.4
  %620 = sub i32 %618, 1
  %621 = mul i32 %618, %620
  %622 = urem i32 %621, 2
  %623 = icmp eq i32 %622, 0
  %624 = icmp slt i32 %619, 10
  %625 = or i1 %623, %624
  br i1 %625, label %originalBBpart2150, label %originalBB148alteredBB

originalBBpart2150:                               ; preds = %originalBB148
  br i1 %617, label %626, label %628, !dbg !610

626:                                              ; preds = %originalBBpart2150
  %627 = call i8* @gettext(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.19, i64 0, i64 0)) #10, !dbg !611
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %627), !dbg !611
  unreachable, !dbg !611

628:                                              ; preds = %originalBBpart2150, %originalBBpart2146
  %629 = load i32, i32* @x.3
  %630 = load i32, i32* @y.4
  %631 = sub i32 %629, 1
  %632 = mul i32 %629, %631
  %633 = urem i32 %632, 2
  %634 = icmp eq i32 %633, 0
  %635 = icmp slt i32 %630, 10
  %636 = or i1 %634, %635
  br i1 %636, label %originalBB152, label %originalBB152alteredBB

originalBB152:                                    ; preds = %628, %originalBB152alteredBB
  %637 = load i64, i64* %18, align 8, !dbg !612
  %638 = load i32, i32* @x.3
  %639 = load i32, i32* @y.4
  %640 = sub i32 %638, 1
  %641 = mul i32 %638, %640
  %642 = urem i32 %641, 2
  %643 = icmp eq i32 %642, 0
  %644 = icmp slt i32 %639, 10
  %645 = or i1 %643, %644
  br i1 %645, label %originalBBpart2154, label %originalBB152alteredBB

originalBBpart2154:                               ; preds = %originalBB152
  br label %646, !dbg !614

646:                                              ; preds = %originalBBpart2154
  %647 = load i32, i32* @x.3
  %648 = load i32, i32* @y.4
  %649 = sub i32 %647, 1
  %650 = mul i32 %647, %649
  %651 = urem i32 %650, 2
  %652 = icmp eq i32 %651, 0
  %653 = icmp slt i32 %648, 10
  %654 = or i1 %652, %653
  br i1 %654, label %originalBB156, label %originalBB156alteredBB

originalBB156:                                    ; preds = %646, %originalBB156alteredBB
  %collatzVar = alloca i32
  %655 = load i32, i32* @x.3
  %656 = load i32, i32* @y.4
  %657 = sub i32 %655, 1
  %658 = mul i32 %655, %657
  %659 = urem i32 %658, 2
  %660 = icmp eq i32 %659, 0
  %661 = icmp slt i32 %656, 10
  %662 = or i1 %660, %661
  br i1 %662, label %originalBBpart2158, label %originalBB156alteredBB

originalBBpart2158:                               ; preds = %originalBB156
  br label %663

663:                                              ; preds = %originalBBpart2158
  %664 = load i32, i32* @x.3
  %665 = load i32, i32* @y.4
  %666 = sub i32 %664, 1
  %667 = mul i32 %664, %666
  %668 = urem i32 %667, 2
  %669 = icmp eq i32 %668, 0
  %670 = icmp slt i32 %665, 10
  %671 = or i1 %669, %670
  br i1 %671, label %originalBB160, label %originalBB160alteredBB

originalBB160:                                    ; preds = %663, %originalBB160alteredBB
  %672 = load i32, i32* @inVal0
  %673 = icmp sgt i32 %672, 1
  %674 = load i32, i32* @x.3
  %675 = load i32, i32* @y.4
  %676 = sub i32 %674, 1
  %677 = mul i32 %674, %676
  %678 = urem i32 %677, 2
  %679 = icmp eq i32 %678, 0
  %680 = icmp slt i32 %675, 10
  %681 = or i1 %679, %680
  br i1 %681, label %originalBBpart2162, label %originalBB160alteredBB

originalBBpart2162:                               ; preds = %originalBB160
  br i1 %673, label %699, label %682

682:                                              ; preds = %originalBBpart2162
  %683 = load i32, i32* @x.3
  %684 = load i32, i32* @y.4
  %685 = sub i32 %683, 1
  %686 = mul i32 %683, %685
  %687 = urem i32 %686, 2
  %688 = icmp eq i32 %687, 0
  %689 = icmp slt i32 %684, 10
  %690 = or i1 %688, %689
  br i1 %690, label %originalBB164, label %originalBB164alteredBB

originalBB164:                                    ; preds = %682, %originalBB164alteredBB
  store i32 88, i32* %collatzVar
  %691 = load i32, i32* @x.3
  %692 = load i32, i32* @y.4
  %693 = sub i32 %691, 1
  %694 = mul i32 %691, %693
  %695 = urem i32 %694, 2
  %696 = icmp eq i32 %695, 0
  %697 = icmp slt i32 %692, 10
  %698 = or i1 %696, %697
  br i1 %698, label %originalBBpart2166, label %originalBB164alteredBB

originalBBpart2166:                               ; preds = %originalBB164
  br label %699

699:                                              ; preds = %originalBBpart2166, %originalBBpart2162
  %700 = load i32, i32* @x.3
  %701 = load i32, i32* @y.4
  %702 = sub i32 %700, 1
  %703 = mul i32 %700, %702
  %704 = urem i32 %703, 2
  %705 = icmp eq i32 %704, 0
  %706 = icmp slt i32 %701, 10
  %707 = or i1 %705, %706
  br i1 %707, label %originalBB168, label %originalBB168alteredBB

originalBB168:                                    ; preds = %699, %originalBB168alteredBB
  %708 = load i8**, i8*** @inVal1
  %709 = getelementptr inbounds i8*, i8** %708, i64 1
  %710 = load i8*, i8** %709
  %711 = trunc i64 0 to i32
  %controle = call i32 @controle(i8* %710, i32 %711)
  store i32 %controle, i32* %collatzVar
  %712 = load i32, i32* @x.3
  %713 = load i32, i32* @y.4
  %714 = sub i32 %712, 1
  %715 = mul i32 %712, %714
  %716 = urem i32 %715, 2
  %717 = icmp eq i32 %716, 0
  %718 = icmp slt i32 %713, 10
  %719 = or i1 %717, %718
  br i1 %719, label %originalBBpart2170, label %originalBB168alteredBB

originalBBpart2170:                               ; preds = %originalBB168
  br label %720

720:                                              ; preds = %originalBBpart2235, %originalBBpart2223, %originalBBpart2170
  %721 = load i32, i32* @x.3
  %722 = load i32, i32* @y.4
  %723 = sub i32 %721, 1
  %724 = mul i32 %721, %723
  %725 = urem i32 %724, 2
  %726 = icmp eq i32 %725, 0
  %727 = icmp slt i32 %722, 10
  %728 = or i1 %726, %727
  br i1 %728, label %originalBB172, label %originalBB172alteredBB

originalBB172:                                    ; preds = %720, %originalBB172alteredBB
  %729 = load i32, i32* %collatzVar
  %730 = icmp sgt i32 %729, 1
  %731 = load i32, i32* @x.3
  %732 = load i32, i32* @y.4
  %733 = sub i32 %731, 1
  %734 = mul i32 %731, %733
  %735 = urem i32 %734, 2
  %736 = icmp eq i32 %735, 0
  %737 = icmp slt i32 %732, 10
  %738 = or i1 %736, %737
  br i1 %738, label %originalBBpart2174, label %originalBB172alteredBB

originalBBpart2174:                               ; preds = %originalBB172
  br i1 %730, label %739, label %1032

739:                                              ; preds = %originalBBpart2174
  %740 = load i32, i32* %collatzVar
  %741 = srem i32 %740, 2
  %742 = icmp eq i32 %741, 0
  br i1 %742, label %743, label %762

743:                                              ; preds = %739
  %744 = load i32, i32* @x.3
  %745 = load i32, i32* @y.4
  %746 = sub i32 %744, 1
  %747 = mul i32 %744, %746
  %748 = urem i32 %747, 2
  %749 = icmp eq i32 %748, 0
  %750 = icmp slt i32 %745, 10
  %751 = or i1 %749, %750
  br i1 %751, label %originalBB176, label %originalBB176alteredBB

originalBB176:                                    ; preds = %743, %originalBB176alteredBB
  %752 = load i32, i32* %collatzVar
  %753 = sdiv i32 %752, 2
  store i32 %753, i32* %collatzVar
  %754 = load i32, i32* @x.3
  %755 = load i32, i32* @y.4
  %756 = sub i32 %754, 1
  %757 = mul i32 %754, %756
  %758 = urem i32 %757, 2
  %759 = icmp eq i32 %758, 0
  %760 = icmp slt i32 %755, 10
  %761 = or i1 %759, %760
  br i1 %761, label %originalBBpart2191, label %originalBB176alteredBB

originalBBpart2191:                               ; preds = %originalBB176
  br label %782

762:                                              ; preds = %739
  %763 = load i32, i32* @x.3
  %764 = load i32, i32* @y.4
  %765 = sub i32 %763, 1
  %766 = mul i32 %763, %765
  %767 = urem i32 %766, 2
  %768 = icmp eq i32 %767, 0
  %769 = icmp slt i32 %764, 10
  %770 = or i1 %768, %769
  br i1 %770, label %originalBB193, label %originalBB193alteredBB

originalBB193:                                    ; preds = %762, %originalBB193alteredBB
  %771 = load i32, i32* %collatzVar
  %772 = mul i32 %771, 3
  %773 = add i32 %772, 1
  store i32 %773, i32* %collatzVar
  %774 = load i32, i32* @x.3
  %775 = load i32, i32* @y.4
  %776 = sub i32 %774, 1
  %777 = mul i32 %774, %776
  %778 = urem i32 %777, 2
  %779 = icmp eq i32 %778, 0
  %780 = icmp slt i32 %775, 10
  %781 = or i1 %779, %780
  br i1 %781, label %originalBBpart2211, label %originalBB193alteredBB

originalBBpart2211:                               ; preds = %originalBB193
  br label %782

782:                                              ; preds = %originalBBpart2211, %originalBBpart2191
  %783 = load i32, i32* @x.3
  %784 = load i32, i32* @y.4
  %785 = sub i32 %783, 1
  %786 = mul i32 %783, %785
  %787 = urem i32 %786, 2
  %788 = icmp eq i32 %787, 0
  %789 = icmp slt i32 %784, 10
  %790 = or i1 %788, %789
  br i1 %790, label %originalBB213, label %originalBB213alteredBB

originalBB213:                                    ; preds = %782, %originalBB213alteredBB
  %791 = load i32, i32* %collatzVar
  %792 = sext i32 %791 to i64
  %793 = sext i32 -2 to i64
  %794 = sub i64 %637, %792
  %795 = icmp sgt i64 %794, %793
  %796 = load i32, i32* @x.3
  %797 = load i32, i32* @y.4
  %798 = sub i32 %796, 1
  %799 = mul i32 %796, %798
  %800 = urem i32 %799, 2
  %801 = icmp eq i32 %800, 0
  %802 = icmp slt i32 %797, 10
  %803 = or i1 %801, %802
  br i1 %803, label %originalBBpart2223, label %originalBB213alteredBB

originalBBpart2223:                               ; preds = %originalBB213
  br i1 %795, label %804, label %720

804:                                              ; preds = %originalBBpart2223
  %805 = load i32, i32* @x.3
  %806 = load i32, i32* @y.4
  %807 = sub i32 %805, 1
  %808 = mul i32 %805, %807
  %809 = urem i32 %808, 2
  %810 = icmp eq i32 %809, 0
  %811 = icmp slt i32 %806, 10
  %812 = or i1 %810, %811
  br i1 %812, label %originalBB225, label %originalBB225alteredBB

originalBB225:                                    ; preds = %804, %originalBB225alteredBB
  %813 = load i32, i32* %collatzVar
  %814 = sext i32 %813 to i64
  %815 = sext i32 2 to i64
  %816 = add i64 %637, %814
  %817 = icmp slt i64 %816, %815
  %818 = load i32, i32* @x.3
  %819 = load i32, i32* @y.4
  %820 = sub i32 %818, 1
  %821 = mul i32 %818, %820
  %822 = urem i32 %821, 2
  %823 = icmp eq i32 %822, 0
  %824 = icmp slt i32 %819, 10
  %825 = or i1 %823, %824
  br i1 %825, label %originalBBpart2235, label %originalBB225alteredBB

originalBBpart2235:                               ; preds = %originalBB225
  br i1 %817, label %826, label %720

826:                                              ; preds = %originalBBpart2235
  %827 = load i32, i32* @x.3
  %828 = load i32, i32* @y.4
  %829 = sub i32 %827, 1
  %830 = mul i32 %827, %829
  %831 = urem i32 %830, 2
  %832 = icmp eq i32 %831, 0
  %833 = icmp slt i32 %828, 10
  %834 = or i1 %832, %833
  br i1 %834, label %originalBB237, label %originalBB237alteredBB

originalBB237:                                    ; preds = %826, %originalBB237alteredBB
  %835 = load i8, i8* @just_context, align 1, !dbg !615
  %836 = trunc i8 %835 to i1, !dbg !615
  %837 = load i32, i32* @x.3
  %838 = load i32, i32* @y.4
  %839 = sub i32 %837, 1
  %840 = mul i32 %837, %839
  %841 = urem i32 %840, 2
  %842 = icmp eq i32 %841, 0
  %843 = icmp slt i32 %838, 10
  %844 = or i1 %842, %843
  br i1 %844, label %originalBBpart2239, label %originalBB237alteredBB

originalBBpart2239:                               ; preds = %originalBB237
  br i1 %836, label %883, label %845, !dbg !616

845:                                              ; preds = %originalBBpart2239
  %846 = load i32, i32* @x.3
  %847 = load i32, i32* @y.4
  %848 = sub i32 %846, 1
  %849 = mul i32 %846, %848
  %850 = urem i32 %849, 2
  %851 = icmp eq i32 %850, 0
  %852 = icmp slt i32 %847, 10
  %853 = or i1 %851, %852
  br i1 %853, label %originalBB241, label %originalBB241alteredBB

originalBB241:                                    ; preds = %845, %originalBB241alteredBB
  %854 = load i8, i8* %19, align 1, !dbg !617
  %855 = trunc i8 %854 to i1, !dbg !617
  %856 = load i32, i32* @x.3
  %857 = load i32, i32* @y.4
  %858 = sub i32 %856, 1
  %859 = mul i32 %856, %858
  %860 = urem i32 %859, 2
  %861 = icmp eq i32 %860, 0
  %862 = icmp slt i32 %857, 10
  %863 = or i1 %861, %862
  br i1 %863, label %originalBBpart2243, label %originalBB241alteredBB

originalBBpart2243:                               ; preds = %originalBB241
  br i1 %855, label %864, label %1032, !dbg !618

864:                                              ; preds = %originalBBpart2243
  %865 = load i32, i32* @x.3
  %866 = load i32, i32* @y.4
  %867 = sub i32 %865, 1
  %868 = mul i32 %865, %867
  %869 = urem i32 %868, 2
  %870 = icmp eq i32 %869, 0
  %871 = icmp slt i32 %866, 10
  %872 = or i1 %870, %871
  br i1 %872, label %originalBB245, label %originalBB245alteredBB

originalBB245:                                    ; preds = %864, %originalBB245alteredBB
  %873 = call i8* @getenv(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.20, i64 0, i64 0)) #10, !dbg !619
  %874 = icmp ne i8* %873, null, !dbg !619
  %875 = load i32, i32* @x.3
  %876 = load i32, i32* @y.4
  %877 = sub i32 %875, 1
  %878 = mul i32 %875, %877
  %879 = urem i32 %878, 2
  %880 = icmp eq i32 %879, 0
  %881 = icmp slt i32 %876, 10
  %882 = or i1 %880, %881
  br i1 %882, label %originalBBpart2247, label %originalBB245alteredBB

originalBBpart2247:                               ; preds = %originalBB245
  br i1 %874, label %1032, label %883, !dbg !620

883:                                              ; preds = %originalBBpart2247, %originalBBpart2239
  %884 = load i32, i32* @x.3
  %885 = load i32, i32* @y.4
  %886 = sub i32 %884, 1
  %887 = mul i32 %884, %886
  %888 = urem i32 %887, 2
  %889 = icmp eq i32 %888, 0
  %890 = icmp slt i32 %885, 10
  %891 = or i1 %889, %890
  br i1 %891, label %originalBB249, label %originalBB249alteredBB

originalBB249:                                    ; preds = %883, %originalBB249alteredBB
  %892 = load i32, i32* %15, align 4, !dbg !621
  %893 = icmp ne i32 %892, 0, !dbg !621
  %894 = load i32, i32* @x.3
  %895 = load i32, i32* @y.4
  %896 = sub i32 %894, 1
  %897 = mul i32 %894, %896
  %898 = urem i32 %897, 2
  %899 = icmp eq i32 %898, 0
  %900 = icmp slt i32 %895, 10
  %901 = or i1 %899, %900
  br i1 %901, label %originalBBpart2251, label %originalBB249alteredBB

originalBBpart2251:                               ; preds = %originalBB249
  br i1 %893, label %902, label %940, !dbg !624

902:                                              ; preds = %originalBBpart2251
  %903 = load i32, i32* @x.3
  %904 = load i32, i32* @y.4
  %905 = sub i32 %903, 1
  %906 = mul i32 %903, %905
  %907 = urem i32 %906, 2
  %908 = icmp eq i32 %907, 0
  %909 = icmp slt i32 %904, 10
  %910 = or i1 %908, %909
  br i1 %910, label %originalBB253, label %originalBB253alteredBB

originalBB253:                                    ; preds = %902, %originalBB253alteredBB
  %911 = call i32 @getcon(i8** @context), !dbg !625
  %912 = icmp ne i32 %911, 0, !dbg !625
  %913 = load i32, i32* @x.3
  %914 = load i32, i32* @y.4
  %915 = sub i32 %913, 1
  %916 = mul i32 %913, %915
  %917 = urem i32 %916, 2
  %918 = icmp eq i32 %917, 0
  %919 = icmp slt i32 %914, 10
  %920 = or i1 %918, %919
  br i1 %920, label %originalBBpart2255, label %originalBB253alteredBB

originalBBpart2255:                               ; preds = %originalBB253
  br i1 %912, label %921, label %940, !dbg !626

921:                                              ; preds = %originalBBpart2255
  %922 = load i32, i32* @x.3
  %923 = load i32, i32* @y.4
  %924 = sub i32 %922, 1
  %925 = mul i32 %922, %924
  %926 = urem i32 %925, 2
  %927 = icmp eq i32 %926, 0
  %928 = icmp slt i32 %923, 10
  %929 = or i1 %927, %928
  br i1 %929, label %originalBB257, label %originalBB257alteredBB

originalBB257:                                    ; preds = %921, %originalBB257alteredBB
  %930 = load i8, i8* @just_context, align 1, !dbg !627
  %931 = trunc i8 %930 to i1, !dbg !627
  %932 = load i32, i32* @x.3
  %933 = load i32, i32* @y.4
  %934 = sub i32 %932, 1
  %935 = mul i32 %932, %934
  %936 = urem i32 %935, 2
  %937 = icmp eq i32 %936, 0
  %938 = icmp slt i32 %933, 10
  %939 = or i1 %937, %938
  br i1 %939, label %originalBBpart2259, label %originalBB257alteredBB

originalBBpart2259:                               ; preds = %originalBB257
  br i1 %931, label %997, label %940, !dbg !628

940:                                              ; preds = %originalBBpart2259, %originalBBpart2255, %originalBBpart2251
  %941 = load i32, i32* @x.3
  %942 = load i32, i32* @y.4
  %943 = sub i32 %941, 1
  %944 = mul i32 %941, %943
  %945 = urem i32 %944, 2
  %946 = icmp eq i32 %945, 0
  %947 = icmp slt i32 %942, 10
  %948 = or i1 %946, %947
  br i1 %948, label %originalBB261, label %originalBB261alteredBB

originalBB261:                                    ; preds = %940, %originalBB261alteredBB
  %949 = load i8, i8* %16, align 1, !dbg !629
  %950 = trunc i8 %949 to i1, !dbg !629
  %951 = load i32, i32* @x.3
  %952 = load i32, i32* @y.4
  %953 = sub i32 %951, 1
  %954 = mul i32 %951, %953
  %955 = urem i32 %954, 2
  %956 = icmp eq i32 %955, 0
  %957 = icmp slt i32 %952, 10
  %958 = or i1 %956, %957
  br i1 %958, label %originalBBpart2263, label %originalBB261alteredBB

originalBBpart2263:                               ; preds = %originalBB261
  br i1 %950, label %959, label %1015, !dbg !630

959:                                              ; preds = %originalBBpart2263
  %960 = load i32, i32* @x.3
  %961 = load i32, i32* @y.4
  %962 = sub i32 %960, 1
  %963 = mul i32 %960, %962
  %964 = urem i32 %963, 2
  %965 = icmp eq i32 %964, 0
  %966 = icmp slt i32 %961, 10
  %967 = or i1 %965, %966
  br i1 %967, label %originalBB265, label %originalBB265alteredBB

originalBB265:                                    ; preds = %959, %originalBB265alteredBB
  %968 = call i64 @smack_new_label_from_self(i8** @context), !dbg !631
  %969 = icmp slt i64 %968, 0, !dbg !632
  %970 = load i32, i32* @x.3
  %971 = load i32, i32* @y.4
  %972 = sub i32 %970, 1
  %973 = mul i32 %970, %972
  %974 = urem i32 %973, 2
  %975 = icmp eq i32 %974, 0
  %976 = icmp slt i32 %971, 10
  %977 = or i1 %975, %976
  br i1 %977, label %originalBBpart2267, label %originalBB265alteredBB

originalBBpart2267:                               ; preds = %originalBB265
  br i1 %969, label %978, label %1015, !dbg !633

978:                                              ; preds = %originalBBpart2267
  %979 = load i32, i32* @x.3
  %980 = load i32, i32* @y.4
  %981 = sub i32 %979, 1
  %982 = mul i32 %979, %981
  %983 = urem i32 %982, 2
  %984 = icmp eq i32 %983, 0
  %985 = icmp slt i32 %980, 10
  %986 = or i1 %984, %985
  br i1 %986, label %originalBB269, label %originalBB269alteredBB

originalBB269:                                    ; preds = %978, %originalBB269alteredBB
  %987 = load i8, i8* @just_context, align 1, !dbg !634
  %988 = trunc i8 %987 to i1, !dbg !634
  %989 = load i32, i32* @x.3
  %990 = load i32, i32* @y.4
  %991 = sub i32 %989, 1
  %992 = mul i32 %989, %991
  %993 = urem i32 %992, 2
  %994 = icmp eq i32 %993, 0
  %995 = icmp slt i32 %990, 10
  %996 = or i1 %994, %995
  br i1 %996, label %originalBBpart2271, label %originalBB269alteredBB

originalBBpart2271:                               ; preds = %originalBB269
  br i1 %988, label %997, label %1015, !dbg !635

997:                                              ; preds = %originalBBpart2271, %originalBBpart2259
  %998 = load i32, i32* @x.3
  %999 = load i32, i32* @y.4
  %1000 = sub i32 %998, 1
  %1001 = mul i32 %998, %1000
  %1002 = urem i32 %1001, 2
  %1003 = icmp eq i32 %1002, 0
  %1004 = icmp slt i32 %999, 10
  %1005 = or i1 %1003, %1004
  br i1 %1005, label %originalBB273, label %originalBB273alteredBB

originalBB273:                                    ; preds = %997, %originalBB273alteredBB
  %1006 = call i8* @gettext(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.21, i64 0, i64 0)) #10, !dbg !636
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %1006), !dbg !636
  %1007 = load i32, i32* @x.3
  %1008 = load i32, i32* @y.4
  %1009 = sub i32 %1007, 1
  %1010 = mul i32 %1007, %1009
  %1011 = urem i32 %1010, 2
  %1012 = icmp eq i32 %1011, 0
  %1013 = icmp slt i32 %1008, 10
  %1014 = or i1 %1012, %1013
  br i1 %1014, label %originalBBpart2275, label %originalBB273alteredBB

originalBBpart2275:                               ; preds = %originalBB273
  unreachable, !dbg !636

1015:                                             ; preds = %originalBBpart2271, %originalBBpart2267, %originalBBpart2263
  %1016 = load i32, i32* @x.3
  %1017 = load i32, i32* @y.4
  %1018 = sub i32 %1016, 1
  %1019 = mul i32 %1016, %1018
  %1020 = urem i32 %1019, 2
  %1021 = icmp eq i32 %1020, 0
  %1022 = icmp slt i32 %1017, 10
  %1023 = or i1 %1021, %1022
  br i1 %1023, label %originalBB277, label %originalBB277alteredBB

originalBB277:                                    ; preds = %1015, %originalBB277alteredBB
  %1024 = load i32, i32* @x.3
  %1025 = load i32, i32* @y.4
  %1026 = sub i32 %1024, 1
  %1027 = mul i32 %1024, %1026
  %1028 = urem i32 %1027, 2
  %1029 = icmp eq i32 %1028, 0
  %1030 = icmp slt i32 %1025, 10
  %1031 = or i1 %1029, %1030
  br i1 %1031, label %originalBBpart2279, label %originalBB277alteredBB

originalBBpart2279:                               ; preds = %originalBB277
  br label %1032, !dbg !637

1032:                                             ; preds = %originalBBpart2279, %originalBBpart2247, %originalBBpart2243, %originalBBpart2174
  %1033 = load i64, i64* %18, align 8, !dbg !638
  %1034 = icmp uge i64 %1033, 1, !dbg !640
  br i1 %1034, label %1035, label %1280, !dbg !641

1035:                                             ; preds = %1032
  %1036 = load i32, i32* @x.3
  %1037 = load i32, i32* @y.4
  %1038 = sub i32 %1036, 1
  %1039 = mul i32 %1036, %1038
  %1040 = urem i32 %1039, 2
  %1041 = icmp eq i32 %1040, 0
  %1042 = icmp slt i32 %1037, 10
  %1043 = or i1 %1041, %1042
  br i1 %1043, label %originalBB281, label %originalBB281alteredBB

originalBB281:                                    ; preds = %1035, %originalBB281alteredBB
  %1044 = load i64, i64* %18, align 8, !dbg !642
  %1045 = icmp ugt i64 %1044, 1, !dbg !644
  %1046 = zext i1 %1045 to i64, !dbg !642
  %1047 = select i1 %1045, i32 1, i32 0, !dbg !642
  %1048 = icmp ne i32 %1047, 0, !dbg !642
  %1049 = zext i1 %1048 to i8, !dbg !645
  store i8 %1049, i8* @multiple_users, align 1, !dbg !645
  %1050 = load i32, i32* @optind, align 4, !dbg !646
  %1051 = sext i32 %1050 to i64, !dbg !646
  %1052 = load i64, i64* %18, align 8, !dbg !647
  %1053 = add i64 %1052, %1051, !dbg !647
  store i64 %1053, i64* %18, align 8, !dbg !647
  %1054 = load i32, i32* @x.3
  %1055 = load i32, i32* @y.4
  %1056 = sub i32 %1054, 1
  %1057 = mul i32 %1054, %1056
  %1058 = urem i32 %1057, 2
  %1059 = icmp eq i32 %1058, 0
  %1060 = icmp slt i32 %1055, 10
  %1061 = or i1 %1059, %1060
  br i1 %1061, label %originalBBpart2292, label %originalBB281alteredBB

originalBBpart2292:                               ; preds = %originalBB281
  br label %1062, !dbg !648

1062:                                             ; preds = %originalBBpart2332, %originalBBpart2292
  %1063 = load i32, i32* @x.3
  %1064 = load i32, i32* @y.4
  %1065 = sub i32 %1063, 1
  %1066 = mul i32 %1063, %1065
  %1067 = urem i32 %1066, 2
  %1068 = icmp eq i32 %1067, 0
  %1069 = icmp slt i32 %1064, 10
  %1070 = or i1 %1068, %1069
  br i1 %1070, label %originalBB294, label %originalBB294alteredBB

originalBB294:                                    ; preds = %1062, %originalBB294alteredBB
  %1071 = load i32, i32* @optind, align 4, !dbg !649
  %1072 = sext i32 %1071 to i64, !dbg !649
  %1073 = load i64, i64* %18, align 8, !dbg !652
  %1074 = icmp ult i64 %1072, %1073, !dbg !653
  %1075 = load i32, i32* @x.3
  %1076 = load i32, i32* @y.4
  %1077 = sub i32 %1075, 1
  %1078 = mul i32 %1075, %1077
  %1079 = urem i32 %1078, 2
  %1080 = icmp eq i32 %1079, 0
  %1081 = icmp slt i32 %1076, 10
  %1082 = or i1 %1080, %1081
  br i1 %1082, label %originalBBpart2296, label %originalBB294alteredBB

originalBBpart2296:                               ; preds = %originalBB294
  br i1 %1074, label %1083, label %1263, !dbg !654

1083:                                             ; preds = %originalBBpart2296
  call void @llvm.dbg.declare(metadata %struct.passwd** %20, metadata !655, metadata !DIExpression()), !dbg !668
  %1084 = load i32, i32* @x.3
  %1085 = load i32, i32* @y.4
  %1086 = sub i32 %1084, 1
  %1087 = mul i32 %1084, %1086
  %1088 = urem i32 %1087, 2
  %1089 = icmp eq i32 %1088, 0
  %1090 = icmp slt i32 %1085, 10
  %1091 = or i1 %1089, %1090
  br i1 %1091, label %originalBB298, label %originalBB298alteredBB

originalBB298:                                    ; preds = %1083, %originalBB298alteredBB
  store %struct.passwd* null, %struct.passwd** %20, align 8, !dbg !668
  call void @llvm.dbg.declare(metadata i8** %21, metadata !669, metadata !DIExpression()), !dbg !670
  %1092 = load i8**, i8*** %13, align 8, !dbg !671
  %1093 = load i32, i32* @optind, align 4, !dbg !672
  %1094 = sext i32 %1093 to i64, !dbg !671
  %1095 = getelementptr inbounds i8*, i8** %1092, i64 %1094, !dbg !671
  %1096 = load i8*, i8** %1095, align 8, !dbg !671
  store i8* %1096, i8** %21, align 8, !dbg !670
  %1097 = load i8*, i8** %21, align 8, !dbg !673
  %1098 = load i8, i8* %1097, align 1, !dbg !675
  %1099 = icmp ne i8 %1098, 0, !dbg !675
  %1100 = load i32, i32* @x.3
  %1101 = load i32, i32* @y.4
  %1102 = sub i32 %1100, 1
  %1103 = mul i32 %1100, %1102
  %1104 = urem i32 %1103, 2
  %1105 = icmp eq i32 %1104, 0
  %1106 = icmp slt i32 %1101, 10
  %1107 = or i1 %1105, %1106
  br i1 %1107, label %originalBBpart2300, label %originalBB298alteredBB

originalBBpart2300:                               ; preds = %originalBB298
  br i1 %1099, label %1108, label %1164, !dbg !676

1108:                                             ; preds = %originalBBpart2300
  %1109 = load i32, i32* @x.3
  %1110 = load i32, i32* @y.4
  %1111 = sub i32 %1109, 1
  %1112 = mul i32 %1109, %1111
  %1113 = urem i32 %1112, 2
  %1114 = icmp eq i32 %1113, 0
  %1115 = icmp slt i32 %1110, 10
  %1116 = or i1 %1114, %1115
  br i1 %1116, label %originalBB302, label %originalBB302alteredBB

originalBB302:                                    ; preds = %1108, %originalBB302alteredBB
  %1117 = load i8*, i8** %21, align 8, !dbg !677
  %1118 = call i8* @parse_user_spec(i8* %1117, i32* @euid, i32* null, i8** null, i8** null), !dbg !680
  %1119 = icmp eq i8* %1118, null, !dbg !681
  %1120 = load i32, i32* @x.3
  %1121 = load i32, i32* @y.4
  %1122 = sub i32 %1120, 1
  %1123 = mul i32 %1120, %1122
  %1124 = urem i32 %1123, 2
  %1125 = icmp eq i32 %1124, 0
  %1126 = icmp slt i32 %1121, 10
  %1127 = or i1 %1125, %1126
  br i1 %1127, label %originalBBpart2304, label %originalBB302alteredBB

originalBBpart2304:                               ; preds = %originalBB302
  br i1 %1119, label %1128, label %1147, !dbg !682

1128:                                             ; preds = %originalBBpart2304
  %1129 = load i32, i32* @x.3
  %1130 = load i32, i32* @y.4
  %1131 = sub i32 %1129, 1
  %1132 = mul i32 %1129, %1131
  %1133 = urem i32 %1132, 2
  %1134 = icmp eq i32 %1133, 0
  %1135 = icmp slt i32 %1130, 10
  %1136 = or i1 %1134, %1135
  br i1 %1136, label %originalBB306, label %originalBB306alteredBB

originalBB306:                                    ; preds = %1128, %originalBB306alteredBB
  %1137 = load i32, i32* @euid, align 4, !dbg !683
  %1138 = call %struct.passwd* @getpwuid(i32 %1137), !dbg !685
  store %struct.passwd* %1138, %struct.passwd** %20, align 8, !dbg !686
  %1139 = load i32, i32* @x.3
  %1140 = load i32, i32* @y.4
  %1141 = sub i32 %1139, 1
  %1142 = mul i32 %1139, %1141
  %1143 = urem i32 %1142, 2
  %1144 = icmp eq i32 %1143, 0
  %1145 = icmp slt i32 %1140, 10
  %1146 = or i1 %1144, %1145
  br i1 %1146, label %originalBBpart2308, label %originalBB306alteredBB

originalBBpart2308:                               ; preds = %originalBB306
  br label %1147, !dbg !687

1147:                                             ; preds = %originalBBpart2308, %originalBBpart2304
  %1148 = load i32, i32* @x.3
  %1149 = load i32, i32* @y.4
  %1150 = sub i32 %1148, 1
  %1151 = mul i32 %1148, %1150
  %1152 = urem i32 %1151, 2
  %1153 = icmp eq i32 %1152, 0
  %1154 = icmp slt i32 %1149, 10
  %1155 = or i1 %1153, %1154
  br i1 %1155, label %originalBB310, label %originalBB310alteredBB

originalBB310:                                    ; preds = %1147, %originalBB310alteredBB
  %1156 = load i32, i32* @x.3
  %1157 = load i32, i32* @y.4
  %1158 = sub i32 %1156, 1
  %1159 = mul i32 %1156, %1158
  %1160 = urem i32 %1159, 2
  %1161 = icmp eq i32 %1160, 0
  %1162 = icmp slt i32 %1157, 10
  %1163 = or i1 %1161, %1162
  br i1 %1163, label %originalBBpart2312, label %originalBB310alteredBB

originalBBpart2312:                               ; preds = %originalBB310
  br label %1164, !dbg !688

1164:                                             ; preds = %originalBBpart2312, %originalBBpart2300
  %1165 = load i32, i32* @x.3
  %1166 = load i32, i32* @y.4
  %1167 = sub i32 %1165, 1
  %1168 = mul i32 %1165, %1167
  %1169 = urem i32 %1168, 2
  %1170 = icmp eq i32 %1169, 0
  %1171 = icmp slt i32 %1166, 10
  %1172 = or i1 %1170, %1171
  br i1 %1172, label %originalBB314, label %originalBB314alteredBB

originalBB314:                                    ; preds = %1164, %originalBB314alteredBB
  %1173 = load %struct.passwd*, %struct.passwd** %20, align 8, !dbg !689
  %1174 = icmp eq %struct.passwd* %1173, null, !dbg !691
  %1175 = load i32, i32* @x.3
  %1176 = load i32, i32* @y.4
  %1177 = sub i32 %1175, 1
  %1178 = mul i32 %1175, %1177
  %1179 = urem i32 %1178, 2
  %1180 = icmp eq i32 %1179, 0
  %1181 = icmp slt i32 %1176, 10
  %1182 = or i1 %1180, %1181
  br i1 %1182, label %originalBBpart2316, label %originalBB314alteredBB

originalBBpart2316:                               ; preds = %originalBB314
  br i1 %1174, label %1183, label %1215, !dbg !692

1183:                                             ; preds = %originalBBpart2316
  %1184 = load i32, i32* @x.3
  %1185 = load i32, i32* @y.4
  %1186 = sub i32 %1184, 1
  %1187 = mul i32 %1184, %1186
  %1188 = urem i32 %1187, 2
  %1189 = icmp eq i32 %1188, 0
  %1190 = icmp slt i32 %1185, 10
  %1191 = or i1 %1189, %1190
  br i1 %1191, label %originalBB318, label %originalBB318alteredBB

originalBB318:                                    ; preds = %1183, %originalBB318alteredBB
  %1192 = call i32* @__errno_location() #15, !dbg !693
  %1193 = load i32, i32* %1192, align 4, !dbg !693
  %1194 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.22, i64 0, i64 0)) #10, !dbg !695
  %1195 = load i8**, i8*** %13, align 8, !dbg !696
  %1196 = load i32, i32* @optind, align 4, !dbg !697
  %1197 = sext i32 %1196 to i64, !dbg !696
  %1198 = getelementptr inbounds i8*, i8** %1195, i64 %1197, !dbg !696
  %1199 = load i8*, i8** %1198, align 8, !dbg !696
  %1200 = call i8* @quote(i8* %1199), !dbg !698
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %1193, i8* %1194, i8* %1200), !dbg !699
  %1201 = load i8, i8* @ok, align 1, !dbg !700
  %1202 = trunc i8 %1201 to i1, !dbg !700
  %1203 = zext i1 %1202 to i32, !dbg !700
  %1204 = and i32 %1203, 0, !dbg !700
  %1205 = icmp ne i32 %1204, 0, !dbg !700
  %1206 = zext i1 %1205 to i8, !dbg !700
  store i8 %1206, i8* @ok, align 1, !dbg !700
  %1207 = load i32, i32* @x.3
  %1208 = load i32, i32* @y.4
  %1209 = sub i32 %1207, 1
  %1210 = mul i32 %1207, %1209
  %1211 = urem i32 %1210, 2
  %1212 = icmp eq i32 %1211, 0
  %1213 = icmp slt i32 %1208, 10
  %1214 = or i1 %1212, %1213
  br i1 %1214, label %originalBBpart2323, label %originalBB318alteredBB

originalBBpart2323:                               ; preds = %originalBB318
  br label %1244, !dbg !701

1215:                                             ; preds = %originalBBpart2316
  %1216 = load i32, i32* @x.3
  %1217 = load i32, i32* @y.4
  %1218 = sub i32 %1216, 1
  %1219 = mul i32 %1216, %1218
  %1220 = urem i32 %1219, 2
  %1221 = icmp eq i32 %1220, 0
  %1222 = icmp slt i32 %1217, 10
  %1223 = or i1 %1221, %1222
  br i1 %1223, label %originalBB325, label %originalBB325alteredBB

originalBB325:                                    ; preds = %1215, %originalBB325alteredBB
  %1224 = load %struct.passwd*, %struct.passwd** %20, align 8, !dbg !702
  %1225 = getelementptr inbounds %struct.passwd, %struct.passwd* %1224, i32 0, i32 0, !dbg !703
  %1226 = load i8*, i8** %1225, align 8, !dbg !703
  %1227 = call noalias i8* @xstrdup(i8* %1226), !dbg !704
  store i8* %1227, i8** %17, align 8, !dbg !705
  %1228 = load %struct.passwd*, %struct.passwd** %20, align 8, !dbg !706
  %1229 = getelementptr inbounds %struct.passwd, %struct.passwd* %1228, i32 0, i32 2, !dbg !707
  %1230 = load i32, i32* %1229, align 8, !dbg !707
  store i32 %1230, i32* @euid, align 4, !dbg !708
  store i32 %1230, i32* @ruid, align 4, !dbg !709
  %1231 = load %struct.passwd*, %struct.passwd** %20, align 8, !dbg !710
  %1232 = getelementptr inbounds %struct.passwd, %struct.passwd* %1231, i32 0, i32 3, !dbg !711
  %1233 = load i32, i32* %1232, align 4, !dbg !711
  store i32 %1233, i32* @egid, align 4, !dbg !712
  store i32 %1233, i32* @rgid, align 4, !dbg !713
  %1234 = load i8*, i8** %17, align 8, !dbg !714
  call void @print_stuff(i8* %1234), !dbg !715
  %1235 = load i8*, i8** %17, align 8, !dbg !716
  call void @free(i8* %1235) #10, !dbg !717
  %1236 = load i32, i32* @x.3
  %1237 = load i32, i32* @y.4
  %1238 = sub i32 %1236, 1
  %1239 = mul i32 %1236, %1238
  %1240 = urem i32 %1239, 2
  %1241 = icmp eq i32 %1240, 0
  %1242 = icmp slt i32 %1237, 10
  %1243 = or i1 %1241, %1242
  br i1 %1243, label %originalBBpart2327, label %originalBB325alteredBB

originalBBpart2327:                               ; preds = %originalBB325
  br label %1244, !dbg !718

1244:                                             ; preds = %originalBBpart2327, %originalBBpart2323
  %1245 = load i32, i32* @x.3
  %1246 = load i32, i32* @y.4
  %1247 = sub i32 %1245, 1
  %1248 = mul i32 %1245, %1247
  %1249 = urem i32 %1248, 2
  %1250 = icmp eq i32 %1249, 0
  %1251 = icmp slt i32 %1246, 10
  %1252 = or i1 %1250, %1251
  br i1 %1252, label %originalBB329, label %originalBB329alteredBB

originalBB329:                                    ; preds = %1244, %originalBB329alteredBB
  %1253 = load i32, i32* @optind, align 4, !dbg !719
  %1254 = add nsw i32 %1253, 1, !dbg !719
  store i32 %1254, i32* @optind, align 4, !dbg !719
  %1255 = load i32, i32* @x.3
  %1256 = load i32, i32* @y.4
  %1257 = sub i32 %1255, 1
  %1258 = mul i32 %1255, %1257
  %1259 = urem i32 %1258, 2
  %1260 = icmp eq i32 %1259, 0
  %1261 = icmp slt i32 %1256, 10
  %1262 = or i1 %1260, %1261
  br i1 %1262, label %originalBBpart2332, label %originalBB329alteredBB

originalBBpart2332:                               ; preds = %originalBB329
  br label %1062, !dbg !720, !llvm.loop !721

1263:                                             ; preds = %originalBBpart2296
  %1264 = load i32, i32* @x.3
  %1265 = load i32, i32* @y.4
  %1266 = sub i32 %1264, 1
  %1267 = mul i32 %1264, %1266
  %1268 = urem i32 %1267, 2
  %1269 = icmp eq i32 %1268, 0
  %1270 = icmp slt i32 %1265, 10
  %1271 = or i1 %1269, %1270
  br i1 %1271, label %originalBB334, label %originalBB334alteredBB

originalBB334:                                    ; preds = %1263, %originalBB334alteredBB
  %1272 = load i32, i32* @x.3
  %1273 = load i32, i32* @y.4
  %1274 = sub i32 %1272, 1
  %1275 = mul i32 %1272, %1274
  %1276 = urem i32 %1275, 2
  %1277 = icmp eq i32 %1276, 0
  %1278 = icmp slt i32 %1273, 10
  %1279 = or i1 %1277, %1278
  br i1 %1279, label %originalBBpart2336, label %originalBB334alteredBB

originalBBpart2336:                               ; preds = %originalBB334
  br label %1783, !dbg !723

1280:                                             ; preds = %1032
  call void @llvm.dbg.declare(metadata i32* %22, metadata !724, metadata !DIExpression()), !dbg !726
  %1281 = load i32, i32* @x.3
  %1282 = load i32, i32* @y.4
  %1283 = sub i32 %1281, 1
  %1284 = mul i32 %1281, %1283
  %1285 = urem i32 %1284, 2
  %1286 = icmp eq i32 %1285, 0
  %1287 = icmp slt i32 %1282, 10
  %1288 = or i1 %1286, %1287
  br i1 %1288, label %originalBB338, label %originalBB338alteredBB

originalBB338:                                    ; preds = %1280, %originalBB338alteredBB
  store i32 -1, i32* %22, align 4, !dbg !726
  call void @llvm.dbg.declare(metadata i32* %23, metadata !727, metadata !DIExpression()), !dbg !728
  store i32 -1, i32* %23, align 4, !dbg !728
  %1289 = load i8, i8* @just_user, align 1, !dbg !729
  %1290 = trunc i8 %1289 to i1, !dbg !729
  %1291 = load i32, i32* @x.3
  %1292 = load i32, i32* @y.4
  %1293 = sub i32 %1291, 1
  %1294 = mul i32 %1291, %1293
  %1295 = urem i32 %1294, 2
  %1296 = icmp eq i32 %1295, 0
  %1297 = icmp slt i32 %1292, 10
  %1298 = or i1 %1296, %1297
  br i1 %1298, label %originalBBpart2340, label %originalBB338alteredBB

originalBBpart2340:                               ; preds = %originalBB338
  br i1 %1290, label %1299, label %1318, !dbg !731

1299:                                             ; preds = %originalBBpart2340
  %1300 = load i32, i32* @x.3
  %1301 = load i32, i32* @y.4
  %1302 = sub i32 %1300, 1
  %1303 = mul i32 %1300, %1302
  %1304 = urem i32 %1303, 2
  %1305 = icmp eq i32 %1304, 0
  %1306 = icmp slt i32 %1301, 10
  %1307 = or i1 %1305, %1306
  br i1 %1307, label %originalBB342, label %originalBB342alteredBB

originalBB342:                                    ; preds = %1299, %originalBB342alteredBB
  %1308 = load i8, i8* @use_real, align 1, !dbg !732
  %1309 = trunc i8 %1308 to i1, !dbg !732
  %1310 = load i32, i32* @x.3
  %1311 = load i32, i32* @y.4
  %1312 = sub i32 %1310, 1
  %1313 = mul i32 %1310, %1312
  %1314 = urem i32 %1313, 2
  %1315 = icmp eq i32 %1314, 0
  %1316 = icmp slt i32 %1311, 10
  %1317 = or i1 %1315, %1316
  br i1 %1317, label %originalBBpart2344, label %originalBB342alteredBB

originalBBpart2344:                               ; preds = %originalBB342
  br i1 %1309, label %1438, label %1359, !dbg !729

1318:                                             ; preds = %originalBBpart2340
  %1319 = load i32, i32* @x.3
  %1320 = load i32, i32* @y.4
  %1321 = sub i32 %1319, 1
  %1322 = mul i32 %1319, %1321
  %1323 = urem i32 %1322, 2
  %1324 = icmp eq i32 %1323, 0
  %1325 = icmp slt i32 %1320, 10
  %1326 = or i1 %1324, %1325
  br i1 %1326, label %originalBB346, label %originalBB346alteredBB

originalBB346:                                    ; preds = %1318, %originalBB346alteredBB
  %1327 = load i8, i8* @just_group, align 1, !dbg !733
  %1328 = trunc i8 %1327 to i1, !dbg !733
  %1329 = load i32, i32* @x.3
  %1330 = load i32, i32* @y.4
  %1331 = sub i32 %1329, 1
  %1332 = mul i32 %1329, %1331
  %1333 = urem i32 %1332, 2
  %1334 = icmp eq i32 %1333, 0
  %1335 = icmp slt i32 %1330, 10
  %1336 = or i1 %1334, %1335
  br i1 %1336, label %originalBBpart2348, label %originalBB346alteredBB

originalBBpart2348:                               ; preds = %originalBB346
  br i1 %1328, label %1438, label %1337, !dbg !734

1337:                                             ; preds = %originalBBpart2348
  %1338 = load i8, i8* @just_group_list, align 1, !dbg !735
  %1339 = trunc i8 %1338 to i1, !dbg !735
  br i1 %1339, label %1438, label %1340, !dbg !736

1340:                                             ; preds = %1337
  %1341 = load i32, i32* @x.3
  %1342 = load i32, i32* @y.4
  %1343 = sub i32 %1341, 1
  %1344 = mul i32 %1341, %1343
  %1345 = urem i32 %1344, 2
  %1346 = icmp eq i32 %1345, 0
  %1347 = icmp slt i32 %1342, 10
  %1348 = or i1 %1346, %1347
  br i1 %1348, label %originalBB350, label %originalBB350alteredBB

originalBB350:                                    ; preds = %1340, %originalBB350alteredBB
  %1349 = load i8, i8* @just_context, align 1, !dbg !737
  %1350 = trunc i8 %1349 to i1, !dbg !737
  %1351 = load i32, i32* @x.3
  %1352 = load i32, i32* @y.4
  %1353 = sub i32 %1351, 1
  %1354 = mul i32 %1351, %1353
  %1355 = urem i32 %1354, 2
  %1356 = icmp eq i32 %1355, 0
  %1357 = icmp slt i32 %1352, 10
  %1358 = or i1 %1356, %1357
  br i1 %1358, label %originalBBpart2352, label %originalBB350alteredBB

originalBBpart2352:                               ; preds = %originalBB350
  br i1 %1350, label %1438, label %1359, !dbg !731

1359:                                             ; preds = %originalBBpart2352, %originalBBpart2344
  %1360 = load i32, i32* @x.3
  %1361 = load i32, i32* @y.4
  %1362 = sub i32 %1360, 1
  %1363 = mul i32 %1360, %1362
  %1364 = urem i32 %1363, 2
  %1365 = icmp eq i32 %1364, 0
  %1366 = icmp slt i32 %1361, 10
  %1367 = or i1 %1365, %1366
  br i1 %1367, label %originalBB354, label %originalBB354alteredBB

originalBB354:                                    ; preds = %1359, %originalBB354alteredBB
  %1368 = call i32* @__errno_location() #15, !dbg !738
  store i32 0, i32* %1368, align 4, !dbg !740
  %1369 = call i32 @geteuid() #10, !dbg !741
  store i32 %1369, i32* @euid, align 4, !dbg !742
  %1370 = load i32, i32* @euid, align 4, !dbg !743
  %1371 = load i32, i32* %22, align 4, !dbg !745
  %1372 = icmp eq i32 %1370, %1371, !dbg !746
  %1373 = load i32, i32* @x.3
  %1374 = load i32, i32* @y.4
  %1375 = sub i32 %1373, 1
  %1376 = mul i32 %1373, %1375
  %1377 = urem i32 %1376, 2
  %1378 = icmp eq i32 %1377, 0
  %1379 = icmp slt i32 %1374, 10
  %1380 = or i1 %1378, %1379
  br i1 %1380, label %originalBBpart2356, label %originalBB354alteredBB

originalBBpart2356:                               ; preds = %originalBB354
  br i1 %1372, label %1381, label %1421, !dbg !747

1381:                                             ; preds = %originalBBpart2356
  %1382 = load i32, i32* @x.3
  %1383 = load i32, i32* @y.4
  %1384 = sub i32 %1382, 1
  %1385 = mul i32 %1382, %1384
  %1386 = urem i32 %1385, 2
  %1387 = icmp eq i32 %1386, 0
  %1388 = icmp slt i32 %1383, 10
  %1389 = or i1 %1387, %1388
  br i1 %1389, label %originalBB358, label %originalBB358alteredBB

originalBB358:                                    ; preds = %1381, %originalBB358alteredBB
  %1390 = call i32* @__errno_location() #15, !dbg !748
  %1391 = load i32, i32* %1390, align 4, !dbg !748
  %1392 = icmp ne i32 %1391, 0, !dbg !748
  %1393 = load i32, i32* @x.3
  %1394 = load i32, i32* @y.4
  %1395 = sub i32 %1393, 1
  %1396 = mul i32 %1393, %1395
  %1397 = urem i32 %1396, 2
  %1398 = icmp eq i32 %1397, 0
  %1399 = icmp slt i32 %1394, 10
  %1400 = or i1 %1398, %1399
  br i1 %1400, label %originalBBpart2360, label %originalBB358alteredBB

originalBBpart2360:                               ; preds = %originalBB358
  br i1 %1392, label %1401, label %1421, !dbg !749

1401:                                             ; preds = %originalBBpart2360
  %1402 = load i32, i32* @x.3
  %1403 = load i32, i32* @y.4
  %1404 = sub i32 %1402, 1
  %1405 = mul i32 %1402, %1404
  %1406 = urem i32 %1405, 2
  %1407 = icmp eq i32 %1406, 0
  %1408 = icmp slt i32 %1403, 10
  %1409 = or i1 %1407, %1408
  br i1 %1409, label %originalBB362, label %originalBB362alteredBB

originalBB362:                                    ; preds = %1401, %originalBB362alteredBB
  %1410 = call i32* @__errno_location() #15, !dbg !750
  %1411 = load i32, i32* %1410, align 4, !dbg !750
  %1412 = call i8* @gettext(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.23, i64 0, i64 0)) #10, !dbg !750
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %1411, i8* %1412), !dbg !750
  %1413 = load i32, i32* @x.3
  %1414 = load i32, i32* @y.4
  %1415 = sub i32 %1413, 1
  %1416 = mul i32 %1413, %1415
  %1417 = urem i32 %1416, 2
  %1418 = icmp eq i32 %1417, 0
  %1419 = icmp slt i32 %1414, 10
  %1420 = or i1 %1418, %1419
  br i1 %1420, label %originalBBpart2364, label %originalBB362alteredBB

originalBBpart2364:                               ; preds = %originalBB362
  unreachable, !dbg !750

1421:                                             ; preds = %originalBBpart2360, %originalBBpart2356
  %1422 = load i32, i32* @x.3
  %1423 = load i32, i32* @y.4
  %1424 = sub i32 %1422, 1
  %1425 = mul i32 %1422, %1424
  %1426 = urem i32 %1425, 2
  %1427 = icmp eq i32 %1426, 0
  %1428 = icmp slt i32 %1423, 10
  %1429 = or i1 %1427, %1428
  br i1 %1429, label %originalBB366, label %originalBB366alteredBB

originalBB366:                                    ; preds = %1421, %originalBB366alteredBB
  %1430 = load i32, i32* @x.3
  %1431 = load i32, i32* @y.4
  %1432 = sub i32 %1430, 1
  %1433 = mul i32 %1430, %1432
  %1434 = urem i32 %1433, 2
  %1435 = icmp eq i32 %1434, 0
  %1436 = icmp slt i32 %1431, 10
  %1437 = or i1 %1435, %1436
  br i1 %1437, label %originalBBpart2368, label %originalBB366alteredBB

originalBBpart2368:                               ; preds = %originalBB366
  br label %1438, !dbg !751

1438:                                             ; preds = %originalBBpart2368, %originalBBpart2352, %1337, %originalBBpart2348, %originalBBpart2344
  %1439 = load i8, i8* @just_user, align 1, !dbg !752
  %1440 = trunc i8 %1439 to i1, !dbg !752
  br i1 %1440, label %1441, label %1444, !dbg !754

1441:                                             ; preds = %1438
  %1442 = load i8, i8* @use_real, align 1, !dbg !755
  %1443 = trunc i8 %1442 to i1, !dbg !755
  br i1 %1443, label %1485, label %1564, !dbg !752

1444:                                             ; preds = %1438
  %1445 = load i32, i32* @x.3
  %1446 = load i32, i32* @y.4
  %1447 = sub i32 %1445, 1
  %1448 = mul i32 %1445, %1447
  %1449 = urem i32 %1448, 2
  %1450 = icmp eq i32 %1449, 0
  %1451 = icmp slt i32 %1446, 10
  %1452 = or i1 %1450, %1451
  br i1 %1452, label %originalBB370, label %originalBB370alteredBB

originalBB370:                                    ; preds = %1444, %originalBB370alteredBB
  %1453 = load i8, i8* @just_group, align 1, !dbg !756
  %1454 = trunc i8 %1453 to i1, !dbg !756
  %1455 = load i32, i32* @x.3
  %1456 = load i32, i32* @y.4
  %1457 = sub i32 %1455, 1
  %1458 = mul i32 %1455, %1457
  %1459 = urem i32 %1458, 2
  %1460 = icmp eq i32 %1459, 0
  %1461 = icmp slt i32 %1456, 10
  %1462 = or i1 %1460, %1461
  br i1 %1462, label %originalBBpart2372, label %originalBB370alteredBB

originalBBpart2372:                               ; preds = %originalBB370
  br i1 %1454, label %1564, label %1463, !dbg !757

1463:                                             ; preds = %originalBBpart2372
  %1464 = load i32, i32* @x.3
  %1465 = load i32, i32* @y.4
  %1466 = sub i32 %1464, 1
  %1467 = mul i32 %1464, %1466
  %1468 = urem i32 %1467, 2
  %1469 = icmp eq i32 %1468, 0
  %1470 = icmp slt i32 %1465, 10
  %1471 = or i1 %1469, %1470
  br i1 %1471, label %originalBB374, label %originalBB374alteredBB

originalBB374:                                    ; preds = %1463, %originalBB374alteredBB
  %1472 = load i8, i8* @just_group_list, align 1, !dbg !758
  %1473 = trunc i8 %1472 to i1, !dbg !758
  %1474 = load i32, i32* @x.3
  %1475 = load i32, i32* @y.4
  %1476 = sub i32 %1474, 1
  %1477 = mul i32 %1474, %1476
  %1478 = urem i32 %1477, 2
  %1479 = icmp eq i32 %1478, 0
  %1480 = icmp slt i32 %1475, 10
  %1481 = or i1 %1479, %1480
  br i1 %1481, label %originalBBpart2376, label %originalBB374alteredBB

originalBBpart2376:                               ; preds = %originalBB374
  br i1 %1473, label %1485, label %1482, !dbg !759

1482:                                             ; preds = %originalBBpart2376
  %1483 = load i8, i8* @just_context, align 1, !dbg !760
  %1484 = trunc i8 %1483 to i1, !dbg !760
  br i1 %1484, label %1564, label %1485, !dbg !754

1485:                                             ; preds = %1482, %originalBBpart2376, %1441
  %1486 = load i32, i32* @x.3
  %1487 = load i32, i32* @y.4
  %1488 = sub i32 %1486, 1
  %1489 = mul i32 %1486, %1488
  %1490 = urem i32 %1489, 2
  %1491 = icmp eq i32 %1490, 0
  %1492 = icmp slt i32 %1487, 10
  %1493 = or i1 %1491, %1492
  br i1 %1493, label %originalBB378, label %originalBB378alteredBB

originalBB378:                                    ; preds = %1485, %originalBB378alteredBB
  %1494 = call i32* @__errno_location() #15, !dbg !761
  store i32 0, i32* %1494, align 4, !dbg !763
  %1495 = call i32 @getuid() #10, !dbg !764
  store i32 %1495, i32* @ruid, align 4, !dbg !765
  %1496 = load i32, i32* @ruid, align 4, !dbg !766
  %1497 = load i32, i32* %22, align 4, !dbg !768
  %1498 = icmp eq i32 %1496, %1497, !dbg !769
  %1499 = load i32, i32* @x.3
  %1500 = load i32, i32* @y.4
  %1501 = sub i32 %1499, 1
  %1502 = mul i32 %1499, %1501
  %1503 = urem i32 %1502, 2
  %1504 = icmp eq i32 %1503, 0
  %1505 = icmp slt i32 %1500, 10
  %1506 = or i1 %1504, %1505
  br i1 %1506, label %originalBBpart2380, label %originalBB378alteredBB

originalBBpart2380:                               ; preds = %originalBB378
  br i1 %1498, label %1507, label %1547, !dbg !770

1507:                                             ; preds = %originalBBpart2380
  %1508 = load i32, i32* @x.3
  %1509 = load i32, i32* @y.4
  %1510 = sub i32 %1508, 1
  %1511 = mul i32 %1508, %1510
  %1512 = urem i32 %1511, 2
  %1513 = icmp eq i32 %1512, 0
  %1514 = icmp slt i32 %1509, 10
  %1515 = or i1 %1513, %1514
  br i1 %1515, label %originalBB382, label %originalBB382alteredBB

originalBB382:                                    ; preds = %1507, %originalBB382alteredBB
  %1516 = call i32* @__errno_location() #15, !dbg !771
  %1517 = load i32, i32* %1516, align 4, !dbg !771
  %1518 = icmp ne i32 %1517, 0, !dbg !771
  %1519 = load i32, i32* @x.3
  %1520 = load i32, i32* @y.4
  %1521 = sub i32 %1519, 1
  %1522 = mul i32 %1519, %1521
  %1523 = urem i32 %1522, 2
  %1524 = icmp eq i32 %1523, 0
  %1525 = icmp slt i32 %1520, 10
  %1526 = or i1 %1524, %1525
  br i1 %1526, label %originalBBpart2384, label %originalBB382alteredBB

originalBBpart2384:                               ; preds = %originalBB382
  br i1 %1518, label %1527, label %1547, !dbg !772

1527:                                             ; preds = %originalBBpart2384
  %1528 = load i32, i32* @x.3
  %1529 = load i32, i32* @y.4
  %1530 = sub i32 %1528, 1
  %1531 = mul i32 %1528, %1530
  %1532 = urem i32 %1531, 2
  %1533 = icmp eq i32 %1532, 0
  %1534 = icmp slt i32 %1529, 10
  %1535 = or i1 %1533, %1534
  br i1 %1535, label %originalBB386, label %originalBB386alteredBB

originalBB386:                                    ; preds = %1527, %originalBB386alteredBB
  %1536 = call i32* @__errno_location() #15, !dbg !773
  %1537 = load i32, i32* %1536, align 4, !dbg !773
  %1538 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.24, i64 0, i64 0)) #10, !dbg !773
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %1537, i8* %1538), !dbg !773
  %1539 = load i32, i32* @x.3
  %1540 = load i32, i32* @y.4
  %1541 = sub i32 %1539, 1
  %1542 = mul i32 %1539, %1541
  %1543 = urem i32 %1542, 2
  %1544 = icmp eq i32 %1543, 0
  %1545 = icmp slt i32 %1540, 10
  %1546 = or i1 %1544, %1545
  br i1 %1546, label %originalBBpart2388, label %originalBB386alteredBB

originalBBpart2388:                               ; preds = %originalBB386
  unreachable, !dbg !773

1547:                                             ; preds = %originalBBpart2384, %originalBBpart2380
  %1548 = load i32, i32* @x.3
  %1549 = load i32, i32* @y.4
  %1550 = sub i32 %1548, 1
  %1551 = mul i32 %1548, %1550
  %1552 = urem i32 %1551, 2
  %1553 = icmp eq i32 %1552, 0
  %1554 = icmp slt i32 %1549, 10
  %1555 = or i1 %1553, %1554
  br i1 %1555, label %originalBB390, label %originalBB390alteredBB

originalBB390:                                    ; preds = %1547, %originalBB390alteredBB
  %1556 = load i32, i32* @x.3
  %1557 = load i32, i32* @y.4
  %1558 = sub i32 %1556, 1
  %1559 = mul i32 %1556, %1558
  %1560 = urem i32 %1559, 2
  %1561 = icmp eq i32 %1560, 0
  %1562 = icmp slt i32 %1557, 10
  %1563 = or i1 %1561, %1562
  br i1 %1563, label %originalBBpart2392, label %originalBB390alteredBB

originalBBpart2392:                               ; preds = %originalBB390
  br label %1564, !dbg !774

1564:                                             ; preds = %originalBBpart2392, %1482, %originalBBpart2372, %1441
  %1565 = load i32, i32* @x.3
  %1566 = load i32, i32* @y.4
  %1567 = sub i32 %1565, 1
  %1568 = mul i32 %1565, %1567
  %1569 = urem i32 %1568, 2
  %1570 = icmp eq i32 %1569, 0
  %1571 = icmp slt i32 %1566, 10
  %1572 = or i1 %1570, %1571
  br i1 %1572, label %originalBB394, label %originalBB394alteredBB

originalBB394:                                    ; preds = %1564, %originalBB394alteredBB
  %1573 = load i8, i8* @just_user, align 1, !dbg !775
  %1574 = trunc i8 %1573 to i1, !dbg !775
  %1575 = load i32, i32* @x.3
  %1576 = load i32, i32* @y.4
  %1577 = sub i32 %1575, 1
  %1578 = mul i32 %1575, %1577
  %1579 = urem i32 %1578, 2
  %1580 = icmp eq i32 %1579, 0
  %1581 = icmp slt i32 %1576, 10
  %1582 = or i1 %1580, %1581
  br i1 %1582, label %originalBBpart2396, label %originalBB394alteredBB

originalBBpart2396:                               ; preds = %originalBB394
  br i1 %1574, label %1765, label %1583, !dbg !777

1583:                                             ; preds = %originalBBpart2396
  %1584 = load i32, i32* @x.3
  %1585 = load i32, i32* @y.4
  %1586 = sub i32 %1584, 1
  %1587 = mul i32 %1584, %1586
  %1588 = urem i32 %1587, 2
  %1589 = icmp eq i32 %1588, 0
  %1590 = icmp slt i32 %1585, 10
  %1591 = or i1 %1589, %1590
  br i1 %1591, label %originalBB398, label %originalBB398alteredBB

originalBB398:                                    ; preds = %1583, %originalBB398alteredBB
  %1592 = load i8, i8* @just_group, align 1, !dbg !778
  %1593 = trunc i8 %1592 to i1, !dbg !778
  %1594 = load i32, i32* @x.3
  %1595 = load i32, i32* @y.4
  %1596 = sub i32 %1594, 1
  %1597 = mul i32 %1594, %1596
  %1598 = urem i32 %1597, 2
  %1599 = icmp eq i32 %1598, 0
  %1600 = icmp slt i32 %1595, 10
  %1601 = or i1 %1599, %1600
  br i1 %1601, label %originalBBpart2400, label %originalBB398alteredBB

originalBBpart2400:                               ; preds = %originalBB398
  br i1 %1593, label %1640, label %1602, !dbg !779

1602:                                             ; preds = %originalBBpart2400
  %1603 = load i32, i32* @x.3
  %1604 = load i32, i32* @y.4
  %1605 = sub i32 %1603, 1
  %1606 = mul i32 %1603, %1605
  %1607 = urem i32 %1606, 2
  %1608 = icmp eq i32 %1607, 0
  %1609 = icmp slt i32 %1604, 10
  %1610 = or i1 %1608, %1609
  br i1 %1610, label %originalBB402, label %originalBB402alteredBB

originalBB402:                                    ; preds = %1602, %originalBB402alteredBB
  %1611 = load i8, i8* @just_group_list, align 1, !dbg !780
  %1612 = trunc i8 %1611 to i1, !dbg !780
  %1613 = load i32, i32* @x.3
  %1614 = load i32, i32* @y.4
  %1615 = sub i32 %1613, 1
  %1616 = mul i32 %1613, %1615
  %1617 = urem i32 %1616, 2
  %1618 = icmp eq i32 %1617, 0
  %1619 = icmp slt i32 %1614, 10
  %1620 = or i1 %1618, %1619
  br i1 %1620, label %originalBBpart2404, label %originalBB402alteredBB

originalBBpart2404:                               ; preds = %originalBB402
  br i1 %1612, label %1640, label %1621, !dbg !781

1621:                                             ; preds = %originalBBpart2404
  %1622 = load i32, i32* @x.3
  %1623 = load i32, i32* @y.4
  %1624 = sub i32 %1622, 1
  %1625 = mul i32 %1622, %1624
  %1626 = urem i32 %1625, 2
  %1627 = icmp eq i32 %1626, 0
  %1628 = icmp slt i32 %1623, 10
  %1629 = or i1 %1627, %1628
  br i1 %1629, label %originalBB406, label %originalBB406alteredBB

originalBB406:                                    ; preds = %1621, %originalBB406alteredBB
  %1630 = load i8, i8* @just_context, align 1, !dbg !782
  %1631 = trunc i8 %1630 to i1, !dbg !782
  %1632 = load i32, i32* @x.3
  %1633 = load i32, i32* @y.4
  %1634 = sub i32 %1632, 1
  %1635 = mul i32 %1632, %1634
  %1636 = urem i32 %1635, 2
  %1637 = icmp eq i32 %1636, 0
  %1638 = icmp slt i32 %1633, 10
  %1639 = or i1 %1637, %1638
  br i1 %1639, label %originalBBpart2408, label %originalBB406alteredBB

originalBBpart2408:                               ; preds = %originalBB406
  br i1 %1631, label %1765, label %1640, !dbg !783

1640:                                             ; preds = %originalBBpart2408, %originalBBpart2404, %originalBBpart2400
  %1641 = load i32, i32* @x.3
  %1642 = load i32, i32* @y.4
  %1643 = sub i32 %1641, 1
  %1644 = mul i32 %1641, %1643
  %1645 = urem i32 %1644, 2
  %1646 = icmp eq i32 %1645, 0
  %1647 = icmp slt i32 %1642, 10
  %1648 = or i1 %1646, %1647
  br i1 %1648, label %originalBB410, label %originalBB410alteredBB

originalBB410:                                    ; preds = %1640, %originalBB410alteredBB
  %1649 = call i32* @__errno_location() #15, !dbg !784
  store i32 0, i32* %1649, align 4, !dbg !786
  %1650 = call i32 @getegid() #10, !dbg !787
  store i32 %1650, i32* @egid, align 4, !dbg !788
  %1651 = load i32, i32* @egid, align 4, !dbg !789
  %1652 = load i32, i32* %23, align 4, !dbg !791
  %1653 = icmp eq i32 %1651, %1652, !dbg !792
  %1654 = load i32, i32* @x.3
  %1655 = load i32, i32* @y.4
  %1656 = sub i32 %1654, 1
  %1657 = mul i32 %1654, %1656
  %1658 = urem i32 %1657, 2
  %1659 = icmp eq i32 %1658, 0
  %1660 = icmp slt i32 %1655, 10
  %1661 = or i1 %1659, %1660
  br i1 %1661, label %originalBBpart2412, label %originalBB410alteredBB

originalBBpart2412:                               ; preds = %originalBB410
  br i1 %1653, label %1662, label %1702, !dbg !793

1662:                                             ; preds = %originalBBpart2412
  %1663 = load i32, i32* @x.3
  %1664 = load i32, i32* @y.4
  %1665 = sub i32 %1663, 1
  %1666 = mul i32 %1663, %1665
  %1667 = urem i32 %1666, 2
  %1668 = icmp eq i32 %1667, 0
  %1669 = icmp slt i32 %1664, 10
  %1670 = or i1 %1668, %1669
  br i1 %1670, label %originalBB414, label %originalBB414alteredBB

originalBB414:                                    ; preds = %1662, %originalBB414alteredBB
  %1671 = call i32* @__errno_location() #15, !dbg !794
  %1672 = load i32, i32* %1671, align 4, !dbg !794
  %1673 = icmp ne i32 %1672, 0, !dbg !794
  %1674 = load i32, i32* @x.3
  %1675 = load i32, i32* @y.4
  %1676 = sub i32 %1674, 1
  %1677 = mul i32 %1674, %1676
  %1678 = urem i32 %1677, 2
  %1679 = icmp eq i32 %1678, 0
  %1680 = icmp slt i32 %1675, 10
  %1681 = or i1 %1679, %1680
  br i1 %1681, label %originalBBpart2416, label %originalBB414alteredBB

originalBBpart2416:                               ; preds = %originalBB414
  br i1 %1673, label %1682, label %1702, !dbg !795

1682:                                             ; preds = %originalBBpart2416
  %1683 = load i32, i32* @x.3
  %1684 = load i32, i32* @y.4
  %1685 = sub i32 %1683, 1
  %1686 = mul i32 %1683, %1685
  %1687 = urem i32 %1686, 2
  %1688 = icmp eq i32 %1687, 0
  %1689 = icmp slt i32 %1684, 10
  %1690 = or i1 %1688, %1689
  br i1 %1690, label %originalBB418, label %originalBB418alteredBB

originalBB418:                                    ; preds = %1682, %originalBB418alteredBB
  %1691 = call i32* @__errno_location() #15, !dbg !796
  %1692 = load i32, i32* %1691, align 4, !dbg !796
  %1693 = call i8* @gettext(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.25, i64 0, i64 0)) #10, !dbg !796
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %1692, i8* %1693), !dbg !796
  %1694 = load i32, i32* @x.3
  %1695 = load i32, i32* @y.4
  %1696 = sub i32 %1694, 1
  %1697 = mul i32 %1694, %1696
  %1698 = urem i32 %1697, 2
  %1699 = icmp eq i32 %1698, 0
  %1700 = icmp slt i32 %1695, 10
  %1701 = or i1 %1699, %1700
  br i1 %1701, label %originalBBpart2420, label %originalBB418alteredBB

originalBBpart2420:                               ; preds = %originalBB418
  unreachable, !dbg !796

1702:                                             ; preds = %originalBBpart2416, %originalBBpart2412
  %1703 = load i32, i32* @x.3
  %1704 = load i32, i32* @y.4
  %1705 = sub i32 %1703, 1
  %1706 = mul i32 %1703, %1705
  %1707 = urem i32 %1706, 2
  %1708 = icmp eq i32 %1707, 0
  %1709 = icmp slt i32 %1704, 10
  %1710 = or i1 %1708, %1709
  br i1 %1710, label %originalBB422, label %originalBB422alteredBB

originalBB422:                                    ; preds = %1702, %originalBB422alteredBB
  %1711 = call i32* @__errno_location() #15, !dbg !797
  store i32 0, i32* %1711, align 4, !dbg !798
  %1712 = call i32 @getgid() #10, !dbg !799
  store i32 %1712, i32* @rgid, align 4, !dbg !800
  %1713 = load i32, i32* @rgid, align 4, !dbg !801
  %1714 = load i32, i32* %23, align 4, !dbg !803
  %1715 = icmp eq i32 %1713, %1714, !dbg !804
  %1716 = load i32, i32* @x.3
  %1717 = load i32, i32* @y.4
  %1718 = sub i32 %1716, 1
  %1719 = mul i32 %1716, %1718
  %1720 = urem i32 %1719, 2
  %1721 = icmp eq i32 %1720, 0
  %1722 = icmp slt i32 %1717, 10
  %1723 = or i1 %1721, %1722
  br i1 %1723, label %originalBBpart2424, label %originalBB422alteredBB

originalBBpart2424:                               ; preds = %originalBB422
  br i1 %1715, label %1724, label %1748, !dbg !805

1724:                                             ; preds = %originalBBpart2424
  %1725 = call i32* @__errno_location() #15, !dbg !806
  %1726 = load i32, i32* %1725, align 4, !dbg !806
  %1727 = icmp ne i32 %1726, 0, !dbg !806
  br i1 %1727, label %1728, label %1748, !dbg !807

1728:                                             ; preds = %1724
  %1729 = load i32, i32* @x.3
  %1730 = load i32, i32* @y.4
  %1731 = sub i32 %1729, 1
  %1732 = mul i32 %1729, %1731
  %1733 = urem i32 %1732, 2
  %1734 = icmp eq i32 %1733, 0
  %1735 = icmp slt i32 %1730, 10
  %1736 = or i1 %1734, %1735
  br i1 %1736, label %originalBB426, label %originalBB426alteredBB

originalBB426:                                    ; preds = %1728, %originalBB426alteredBB
  %1737 = call i32* @__errno_location() #15, !dbg !808
  %1738 = load i32, i32* %1737, align 4, !dbg !808
  %1739 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.26, i64 0, i64 0)) #10, !dbg !808
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %1738, i8* %1739), !dbg !808
  %1740 = load i32, i32* @x.3
  %1741 = load i32, i32* @y.4
  %1742 = sub i32 %1740, 1
  %1743 = mul i32 %1740, %1742
  %1744 = urem i32 %1743, 2
  %1745 = icmp eq i32 %1744, 0
  %1746 = icmp slt i32 %1741, 10
  %1747 = or i1 %1745, %1746
  br i1 %1747, label %originalBBpart2428, label %originalBB426alteredBB

originalBBpart2428:                               ; preds = %originalBB426
  unreachable, !dbg !808

1748:                                             ; preds = %1724, %originalBBpart2424
  %1749 = load i32, i32* @x.3
  %1750 = load i32, i32* @y.4
  %1751 = sub i32 %1749, 1
  %1752 = mul i32 %1749, %1751
  %1753 = urem i32 %1752, 2
  %1754 = icmp eq i32 %1753, 0
  %1755 = icmp slt i32 %1750, 10
  %1756 = or i1 %1754, %1755
  br i1 %1756, label %originalBB430, label %originalBB430alteredBB

originalBB430:                                    ; preds = %1748, %originalBB430alteredBB
  %1757 = load i32, i32* @x.3
  %1758 = load i32, i32* @y.4
  %1759 = sub i32 %1757, 1
  %1760 = mul i32 %1757, %1759
  %1761 = urem i32 %1760, 2
  %1762 = icmp eq i32 %1761, 0
  %1763 = icmp slt i32 %1758, 10
  %1764 = or i1 %1762, %1763
  br i1 %1764, label %originalBBpart2432, label %originalBB430alteredBB

originalBBpart2432:                               ; preds = %originalBB430
  br label %1765, !dbg !809

1765:                                             ; preds = %originalBBpart2432, %originalBBpart2408, %originalBBpart2396
  %1766 = load i32, i32* @x.3
  %1767 = load i32, i32* @y.4
  %1768 = sub i32 %1766, 1
  %1769 = mul i32 %1766, %1768
  %1770 = urem i32 %1769, 2
  %1771 = icmp eq i32 %1770, 0
  %1772 = icmp slt i32 %1767, 10
  %1773 = or i1 %1771, %1772
  br i1 %1773, label %originalBB434, label %originalBB434alteredBB

originalBB434:                                    ; preds = %1765, %originalBB434alteredBB
  %1774 = load i8*, i8** %17, align 8, !dbg !810
  call void @print_stuff(i8* %1774), !dbg !811
  %1775 = load i32, i32* @x.3
  %1776 = load i32, i32* @y.4
  %1777 = sub i32 %1775, 1
  %1778 = mul i32 %1775, %1777
  %1779 = urem i32 %1778, 2
  %1780 = icmp eq i32 %1779, 0
  %1781 = icmp slt i32 %1776, 10
  %1782 = or i1 %1780, %1781
  br i1 %1782, label %originalBBpart2436, label %originalBB434alteredBB

originalBBpart2436:                               ; preds = %originalBB434
  br label %1783

1783:                                             ; preds = %originalBBpart2436, %originalBBpart2336
  %1784 = load i32, i32* @x.3
  %1785 = load i32, i32* @y.4
  %1786 = sub i32 %1784, 1
  %1787 = mul i32 %1784, %1786
  %1788 = urem i32 %1787, 2
  %1789 = icmp eq i32 %1788, 0
  %1790 = icmp slt i32 %1785, 10
  %1791 = or i1 %1789, %1790
  br i1 %1791, label %originalBB438, label %originalBB438alteredBB

originalBB438:                                    ; preds = %1783, %originalBB438alteredBB
  %1792 = load i8, i8* @ok, align 1, !dbg !812
  %1793 = trunc i8 %1792 to i1, !dbg !812
  %1794 = zext i1 %1793 to i64, !dbg !812
  %1795 = select i1 %1793, i32 0, i32 1, !dbg !812
  %1796 = load i32, i32* @x.3
  %1797 = load i32, i32* @y.4
  %1798 = sub i32 %1796, 1
  %1799 = mul i32 %1796, %1798
  %1800 = urem i32 %1799, 2
  %1801 = icmp eq i32 %1800, 0
  %1802 = icmp slt i32 %1797, 10
  %1803 = or i1 %1801, %1802
  br i1 %1803, label %originalBBpart2440, label %originalBB438alteredBB

originalBBpart2440:                               ; preds = %originalBB438
  ret i32 %1795, !dbg !813

originalBBalteredBB:                              ; preds = %originalBB, %2
  store i8** %1, i8*** @inVal1
  store i32 %0, i32* @inVal0
  %1804 = alloca i32, align 4
  %1805 = alloca i32, align 4
  %1806 = alloca i8**, align 8
  %1807 = alloca i32, align 4
  %1808 = alloca i32, align 4
  %1809 = alloca i8, align 1
  %1810 = alloca i8*, align 8
  %1811 = alloca i64, align 8
  %1812 = alloca i8, align 1
  %1813 = alloca %struct.passwd*, align 8
  %1814 = alloca i8*, align 8
  %1815 = alloca i32, align 4
  %1816 = alloca i32, align 4
  store i32 0, i32* %1804, align 4
  store i32 %0, i32* %1805, align 4
  call void @llvm.dbg.declare(metadata i32* %1805, metadata !814, metadata !DIExpression()), !dbg !514
  store i8** %1, i8*** %1806, align 8
  call void @llvm.dbg.declare(metadata i8*** %1806, metadata !862, metadata !DIExpression()), !dbg !516
  call void @llvm.dbg.declare(metadata i32* %1807, metadata !863, metadata !DIExpression()), !dbg !518
  call void @llvm.dbg.declare(metadata i32* %1808, metadata !864, metadata !DIExpression()), !dbg !520
  store i32 0, i32* %1808, align 4, !dbg !520
  call void @llvm.dbg.declare(metadata i8* %1809, metadata !865, metadata !DIExpression()), !dbg !522
  %1817 = call zeroext i1 @is_smack_enabled(), !dbg !523
  %1818 = zext i1 %1817 to i8, !dbg !522
  store i8 %1818, i8* %1809, align 1, !dbg !522
  call void @llvm.dbg.declare(metadata i8** %1810, metadata !866, metadata !DIExpression()), !dbg !525
  store i8* null, i8** %1810, align 8, !dbg !525
  %1819 = load i8**, i8*** %1806, align 8, !dbg !526
  %1820 = getelementptr inbounds i8*, i8** %1819, i64 0, !dbg !526
  %1821 = load i8*, i8** %1820, align 8, !dbg !526
  call void @set_program_name(i8* %1821), !dbg !527
  %1822 = call i8* @setlocale(i32 6, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.8, i64 0, i64 0)) #10, !dbg !528
  %1823 = call i8* @bindtextdomain(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.10, i64 0, i64 0)) #10, !dbg !529
  %1824 = call i8* @textdomain(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9, i64 0, i64 0)) #10, !dbg !530
  %1825 = call i32 @atexit(void ()* @close_stdout) #10, !dbg !531
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %41
  %1826 = load i32, i32* %12, align 4, !dbg !533
  %1827 = load i8**, i8*** %13, align 8, !dbg !534
  %1828 = call i32 @getopt_long(i32 %1826, i8** %1827, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.11, i64 0, i64 0), %struct.option* getelementptr inbounds ([10 x %struct.option], [10 x %struct.option]* @longopts, i64 0, i64 0), i32* null) #10, !dbg !535
  store i32 %1828, i32* %14, align 4, !dbg !536
  %1829 = icmp ne i32 %1828, -1, !dbg !537
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %62
  %1830 = load i32, i32* %14, align 4, !dbg !538
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %80
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %97
  %1831 = load i32, i32* %15, align 4, !dbg !543
  %1832 = icmp ne i32 %1831, 0, !dbg !543
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %116
  %1833 = call i8* @gettext(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.12, i64 0, i64 0)) #10, !dbg !546
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %1833), !dbg !546
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %134
  store i8 1, i8* @just_context, align 1, !dbg !547
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %151
  store i8 1, i8* @just_group, align 1, !dbg !549
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %168
  store i8 1, i8* @use_name, align 1, !dbg !551
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %185
  store i8 1, i8* @use_real, align 1, !dbg !553
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %202
  store i8 1, i8* @just_user, align 1, !dbg !555
  br label %originalBB38

originalBB42alteredBB:                            ; preds = %originalBB42, %219
  store i8 1, i8* @opt_zero, align 1, !dbg !557
  br label %originalBB42

originalBB46alteredBB:                            ; preds = %originalBB46, %236
  store i8 1, i8* @just_group_list, align 1, !dbg !559
  br label %originalBB46

originalBB50alteredBB:                            ; preds = %originalBB50, %253
  call void @usage(i32 0) #14, !dbg !561
  br label %originalBB50

originalBB54alteredBB:                            ; preds = %originalBB54, %270
  %1834 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !562
  %1835 = load i8*, i8** @Version, align 8, !dbg !562
  call void (%struct._IO_FILE*, i8*, i8*, i8*, ...) @version_etc(%struct._IO_FILE* %1834, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.13, i64 0, i64 0), i8* %1835, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.15, i64 0, i64 0), i8* null), !dbg !562
  call void @exit(i32 0) #12, !dbg !562
  br label %originalBB54

originalBB58alteredBB:                            ; preds = %originalBB58, %289
  call void @usage(i32 1) #14, !dbg !563
  br label %originalBB58

originalBB62alteredBB:                            ; preds = %originalBB62, %306
  br label %originalBB62

originalBB66alteredBB:                            ; preds = %originalBB66, %323
  %1836 = load i32, i32* %12, align 4, !dbg !568
  %1837 = load i32, i32* @optind, align 4, !dbg !569
  %_ = sub i32 0, %1836
  %gen = add i32 %_, %1837
  %_67 = sub i32 %1836, %1837
  %gen68 = mul i32 %_67, %1837
  %_69 = shl i32 %1836, %1837
  %_70 = sub i32 0, %1836
  %gen71 = add i32 %_70, %1837
  %_72 = sub i32 %1836, %1837
  %gen73 = mul i32 %_72, %1837
  %_74 = sub i32 %1836, %1837
  %gen75 = mul i32 %_74, %1837
  %_76 = sub i32 %1836, %1837
  %gen77 = mul i32 %_76, %1837
  %_78 = sub i32 0, %1836
  %gen79 = add i32 %_78, %1837
  %_80 = sub i32 0, %1836
  %gen81 = add i32 %_80, %1837
  %1838 = sub nsw i32 %1836, %1837, !dbg !570
  %1839 = sext i32 %1838 to i64, !dbg !568
  store i64 %1839, i64* %18, align 8, !dbg !567
  %1840 = load i64, i64* %18, align 8, !dbg !571
  %1841 = icmp ne i64 %1840, 0, !dbg !571
  br label %originalBB66

originalBB85alteredBB:                            ; preds = %originalBB85, %346
  %1842 = load i8, i8* @just_context, align 1, !dbg !574
  %1843 = trunc i8 %1842 to i1, !dbg !574
  br label %originalBB85

originalBB89alteredBB:                            ; preds = %originalBB89, %365
  %1844 = call i8* @gettext(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.16, i64 0, i64 0)) #10, !dbg !576
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %1844), !dbg !576
  br label %originalBB89

originalBB93alteredBB:                            ; preds = %originalBB93, %383
  %1845 = load i8, i8* @just_user, align 1, !dbg !577
  %1846 = trunc i8 %1845 to i1, !dbg !577
  %1847 = zext i1 %1846 to i32, !dbg !577
  %1848 = load i8, i8* @just_group, align 1, !dbg !579
  %1849 = trunc i8 %1848 to i1, !dbg !579
  %1850 = zext i1 %1849 to i32, !dbg !579
  %1851 = add nsw i32 %1847, %1850, !dbg !580
  %1852 = load i8, i8* @just_group_list, align 1, !dbg !581
  %1853 = trunc i8 %1852 to i1, !dbg !581
  %1854 = zext i1 %1853 to i32, !dbg !581
  %_94 = sub i32 %1851, %1854
  %gen95 = mul i32 %_94, %1854
  %_96 = sub i32 %1851, %1854
  %gen97 = mul i32 %_96, %1854
  %_98 = sub i32 0, %1851
  %gen99 = add i32 %_98, %1854
  %_100 = sub i32 0, %1851
  %gen101 = add i32 %_100, %1854
  %1855 = add nsw i32 %1851, %1854, !dbg !582
  %1856 = load i8, i8* @just_context, align 1, !dbg !583
  %1857 = trunc i8 %1856 to i1, !dbg !583
  %1858 = zext i1 %1857 to i32, !dbg !583
  %_102 = shl i32 %1855, %1858
  %1859 = add nsw i32 %1855, %1858, !dbg !584
  %1860 = icmp sgt i32 %1859, 1, !dbg !585
  br label %originalBB93

originalBB106alteredBB:                           ; preds = %originalBB106, %416
  %1861 = call i8* @gettext(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.17, i64 0, i64 0)) #10, !dbg !587
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %1861), !dbg !587
  br label %originalBB106

originalBB110alteredBB:                           ; preds = %originalBB110, %434
  %1862 = load i8, i8* @just_user, align 1, !dbg !590
  %1863 = trunc i8 %1862 to i1, !dbg !590
  br label %originalBB110

originalBB114alteredBB:                           ; preds = %originalBB114, %453
  %1864 = load i8, i8* @just_group, align 1, !dbg !592
  %1865 = trunc i8 %1864 to i1, !dbg !592
  br label %originalBB114

originalBB118alteredBB:                           ; preds = %originalBB118, %472
  %1866 = load i8, i8* @just_group_list, align 1, !dbg !594
  %1867 = trunc i8 %1866 to i1, !dbg !594
  br label %originalBB118

originalBB122alteredBB:                           ; preds = %originalBB122, %491
  %1868 = load i8, i8* @just_context, align 1, !dbg !596
  %1869 = trunc i8 %1868 to i1, !dbg !596
  br label %originalBB122

originalBB126alteredBB:                           ; preds = %originalBB126, %510
  %_127 = sub i1 false, %511
  %gen128 = add i1 %_127, true
  %1870 = xor i1 %511, true, !dbg !597
  %1871 = zext i1 %1870 to i8, !dbg !589
  store i8 %1871, i8* %19, align 1, !dbg !589
  %1872 = load i8, i8* %19, align 1, !dbg !598
  %1873 = trunc i8 %1872 to i1, !dbg !598
  br label %originalBB126

originalBB132alteredBB:                           ; preds = %originalBB132, %532
  %1874 = load i8, i8* @use_real, align 1, !dbg !601
  %1875 = trunc i8 %1874 to i1, !dbg !601
  br label %originalBB132

originalBB136alteredBB:                           ; preds = %originalBB136, %551
  %1876 = load i8, i8* @use_name, align 1, !dbg !603
  %1877 = trunc i8 %1876 to i1, !dbg !603
  br label %originalBB136

originalBB140alteredBB:                           ; preds = %originalBB140, %570
  %1878 = call i8* @gettext(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.18, i64 0, i64 0)) #10, !dbg !605
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %1878), !dbg !605
  br label %originalBB140

originalBB144alteredBB:                           ; preds = %originalBB144, %588
  %1879 = load i8, i8* %19, align 1, !dbg !606
  %1880 = trunc i8 %1879 to i1, !dbg !606
  br label %originalBB144

originalBB148alteredBB:                           ; preds = %originalBB148, %607
  %1881 = load i8, i8* @opt_zero, align 1, !dbg !609
  %1882 = trunc i8 %1881 to i1, !dbg !609
  br label %originalBB148

originalBB152alteredBB:                           ; preds = %originalBB152, %628
  %1883 = load i64, i64* %18, align 8, !dbg !612
  br label %originalBB152

originalBB156alteredBB:                           ; preds = %originalBB156, %646
  %collatzVaralteredBB = alloca i32
  br label %originalBB156

originalBB160alteredBB:                           ; preds = %originalBB160, %663
  %1884 = load i32, i32* @inVal0
  %1885 = icmp sgt i32 %1884, 1
  br label %originalBB160

originalBB164alteredBB:                           ; preds = %originalBB164, %682
  store i32 88, i32* %collatzVar
  br label %originalBB164

originalBB168alteredBB:                           ; preds = %originalBB168, %699
  %1886 = load i8**, i8*** @inVal1
  %1887 = getelementptr inbounds i8*, i8** %1886, i64 1
  %1888 = load i8*, i8** %1887
  %1889 = trunc i64 0 to i32
  %controlealteredBB = call i32 @controle(i8* %1888, i32 %1889)
  store i32 %controlealteredBB, i32* %collatzVar
  br label %originalBB168

originalBB172alteredBB:                           ; preds = %originalBB172, %720
  %1890 = load i32, i32* %collatzVar
  %1891 = icmp sgt i32 %1890, 1
  br label %originalBB172

originalBB176alteredBB:                           ; preds = %originalBB176, %743
  %1892 = load i32, i32* %collatzVar
  %_177 = sub i32 %1892, 2
  %gen178 = mul i32 %_177, 2
  %_179 = sub i32 0, %1892
  %gen180 = add i32 %_179, 2
  %_181 = sub i32 %1892, 2
  %gen182 = mul i32 %_181, 2
  %_183 = shl i32 %1892, 2
  %_184 = sub i32 0, %1892
  %gen185 = add i32 %_184, 2
  %_186 = sub i32 0, %1892
  %gen187 = add i32 %_186, 2
  %_188 = sub i32 0, %1892
  %gen189 = add i32 %_188, 2
  %1893 = sdiv i32 %1892, 2
  store i32 %1893, i32* %collatzVar
  br label %originalBB176

originalBB193alteredBB:                           ; preds = %originalBB193, %762
  %1894 = load i32, i32* %collatzVar
  %_194 = shl i32 %1894, 3
  %_195 = sub i32 %1894, 3
  %gen196 = mul i32 %_195, 3
  %_197 = shl i32 %1894, 3
  %1895 = mul i32 %1894, 3
  %_198 = sub i32 0, %1895
  %gen199 = add i32 %_198, 1
  %_200 = sub i32 0, %1895
  %gen201 = add i32 %_200, 1
  %_202 = shl i32 %1895, 1
  %_203 = sub i32 0, %1895
  %gen204 = add i32 %_203, 1
  %_205 = shl i32 %1895, 1
  %_206 = sub i32 0, %1895
  %gen207 = add i32 %_206, 1
  %_208 = sub i32 %1895, 1
  %gen209 = mul i32 %_208, 1
  %1896 = add i32 %1895, 1
  store i32 %1896, i32* %collatzVar
  br label %originalBB193

originalBB213alteredBB:                           ; preds = %originalBB213, %782
  %1897 = load i32, i32* %collatzVar
  %1898 = sext i32 %1897 to i64
  %1899 = sext i32 -2 to i64
  %_214 = sub i64 %637, %1898
  %gen215 = mul i64 %_214, %1898
  %_216 = shl i64 %637, %1898
  %_217 = sub i64 0, %637
  %gen218 = add i64 %_217, %1898
  %_219 = sub i64 0, %637
  %gen220 = add i64 %_219, %1898
  %1900 = sub i64 %637, %1898
  %1901 = icmp sgt i64 %1900, %1899
  br label %originalBB213

originalBB225alteredBB:                           ; preds = %originalBB225, %804
  %1902 = load i32, i32* %collatzVar
  %1903 = sext i32 %1902 to i64
  %1904 = sext i32 2 to i64
  %_226 = sub i64 %637, %1903
  %gen227 = mul i64 %_226, %1903
  %_228 = shl i64 %637, %1903
  %_229 = shl i64 %637, %1903
  %_230 = shl i64 %637, %1903
  %_231 = sub i64 %637, %1903
  %gen232 = mul i64 %_231, %1903
  %1905 = add i64 %637, %1903
  %1906 = icmp slt i64 %1905, %1904
  br label %originalBB225

originalBB237alteredBB:                           ; preds = %originalBB237, %826
  %1907 = load i8, i8* @just_context, align 1, !dbg !615
  %1908 = trunc i8 %1907 to i1, !dbg !615
  br label %originalBB237

originalBB241alteredBB:                           ; preds = %originalBB241, %845
  %1909 = load i8, i8* %19, align 1, !dbg !617
  %1910 = trunc i8 %1909 to i1, !dbg !617
  br label %originalBB241

originalBB245alteredBB:                           ; preds = %originalBB245, %864
  %1911 = call i8* @getenv(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.20, i64 0, i64 0)) #10, !dbg !619
  %1912 = icmp ne i8* %1911, null, !dbg !619
  br label %originalBB245

originalBB249alteredBB:                           ; preds = %originalBB249, %883
  %1913 = load i32, i32* %15, align 4, !dbg !621
  %1914 = icmp ne i32 %1913, 0, !dbg !621
  br label %originalBB249

originalBB253alteredBB:                           ; preds = %originalBB253, %902
  %1915 = call i32 @getcon(i8** @context), !dbg !625
  %1916 = icmp ne i32 %1915, 0, !dbg !625
  br label %originalBB253

originalBB257alteredBB:                           ; preds = %originalBB257, %921
  %1917 = load i8, i8* @just_context, align 1, !dbg !627
  %1918 = trunc i8 %1917 to i1, !dbg !627
  br label %originalBB257

originalBB261alteredBB:                           ; preds = %originalBB261, %940
  %1919 = load i8, i8* %16, align 1, !dbg !629
  %1920 = trunc i8 %1919 to i1, !dbg !629
  br label %originalBB261

originalBB265alteredBB:                           ; preds = %originalBB265, %959
  %1921 = call i64 @smack_new_label_from_self(i8** @context), !dbg !631
  %1922 = icmp slt i64 %1921, 0, !dbg !632
  br label %originalBB265

originalBB269alteredBB:                           ; preds = %originalBB269, %978
  %1923 = load i8, i8* @just_context, align 1, !dbg !634
  %1924 = trunc i8 %1923 to i1, !dbg !634
  br label %originalBB269

originalBB273alteredBB:                           ; preds = %originalBB273, %997
  %1925 = call i8* @gettext(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.21, i64 0, i64 0)) #10, !dbg !636
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %1925), !dbg !636
  br label %originalBB273

originalBB277alteredBB:                           ; preds = %originalBB277, %1015
  br label %originalBB277

originalBB281alteredBB:                           ; preds = %originalBB281, %1035
  %1926 = load i64, i64* %18, align 8, !dbg !642
  %1927 = icmp ugt i64 %1926, 1, !dbg !644
  %1928 = zext i1 %1927 to i64, !dbg !642
  %1929 = select i1 %1927, i32 1, i32 0, !dbg !642
  %1930 = icmp ne i32 %1929, 0, !dbg !642
  %1931 = zext i1 %1930 to i8, !dbg !645
  store i8 %1931, i8* @multiple_users, align 1, !dbg !645
  %1932 = load i32, i32* @optind, align 4, !dbg !646
  %1933 = sext i32 %1932 to i64, !dbg !646
  %1934 = load i64, i64* %18, align 8, !dbg !647
  %_282 = sub i64 0, %1934
  %gen283 = add i64 %_282, %1933
  %_284 = sub i64 %1934, %1933
  %gen285 = mul i64 %_284, %1933
  %_286 = shl i64 %1934, %1933
  %_287 = sub i64 %1934, %1933
  %gen288 = mul i64 %_287, %1933
  %_289 = sub i64 %1934, %1933
  %gen290 = mul i64 %_289, %1933
  %1935 = add i64 %1934, %1933, !dbg !647
  store i64 %1935, i64* %18, align 8, !dbg !647
  br label %originalBB281

originalBB294alteredBB:                           ; preds = %originalBB294, %1062
  %1936 = load i32, i32* @optind, align 4, !dbg !649
  %1937 = sext i32 %1936 to i64, !dbg !649
  %1938 = load i64, i64* %18, align 8, !dbg !652
  %1939 = icmp ult i64 %1937, %1938, !dbg !653
  br label %originalBB294

originalBB298alteredBB:                           ; preds = %originalBB298, %1083
  store %struct.passwd* null, %struct.passwd** %20, align 8, !dbg !668
  call void @llvm.dbg.declare(metadata !4, metadata !867, metadata !DIExpression()), !dbg !670
  %1940 = load i8**, i8*** %13, align 8, !dbg !671
  %1941 = load i32, i32* @optind, align 4, !dbg !672
  %1942 = sext i32 %1941 to i64, !dbg !671
  %1943 = getelementptr inbounds i8*, i8** %1940, i64 %1942, !dbg !671
  %1944 = load i8*, i8** %1943, align 8, !dbg !671
  store i8* %1944, i8** %21, align 8, !dbg !670
  %1945 = load i8*, i8** %21, align 8, !dbg !673
  %1946 = load i8, i8* %1945, align 1, !dbg !675
  %1947 = icmp ne i8 %1946, 0, !dbg !675
  br label %originalBB298

originalBB302alteredBB:                           ; preds = %originalBB302, %1108
  %1948 = load i8*, i8** %21, align 8, !dbg !677
  %1949 = call i8* @parse_user_spec(i8* %1948, i32* @euid, i32* null, i8** null, i8** null), !dbg !680
  %1950 = icmp eq i8* %1949, null, !dbg !681
  br label %originalBB302

originalBB306alteredBB:                           ; preds = %originalBB306, %1128
  %1951 = load i32, i32* @euid, align 4, !dbg !683
  %1952 = call %struct.passwd* @getpwuid(i32 %1951), !dbg !685
  store %struct.passwd* %1952, %struct.passwd** %20, align 8, !dbg !686
  br label %originalBB306

originalBB310alteredBB:                           ; preds = %originalBB310, %1147
  br label %originalBB310

originalBB314alteredBB:                           ; preds = %originalBB314, %1164
  %1953 = load %struct.passwd*, %struct.passwd** %20, align 8, !dbg !689
  %1954 = icmp eq %struct.passwd* %1953, null, !dbg !691
  br label %originalBB314

originalBB318alteredBB:                           ; preds = %originalBB318, %1183
  %1955 = call i32* @__errno_location() #15, !dbg !693
  %1956 = load i32, i32* %1955, align 4, !dbg !693
  %1957 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.22, i64 0, i64 0)) #10, !dbg !695
  %1958 = load i8**, i8*** %13, align 8, !dbg !696
  %1959 = load i32, i32* @optind, align 4, !dbg !697
  %1960 = sext i32 %1959 to i64, !dbg !696
  %1961 = getelementptr inbounds i8*, i8** %1958, i64 %1960, !dbg !696
  %1962 = load i8*, i8** %1961, align 8, !dbg !696
  %1963 = call i8* @quote(i8* %1962), !dbg !698
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %1956, i8* %1957, i8* %1963), !dbg !699
  %1964 = load i8, i8* @ok, align 1, !dbg !700
  %1965 = trunc i8 %1964 to i1, !dbg !700
  %1966 = zext i1 %1965 to i32, !dbg !700
  %_319 = shl i32 %1966, 0
  %_320 = sub i32 0, %1966
  %gen321 = add i32 %_320, 0
  %1967 = and i32 %1966, 0, !dbg !700
  %1968 = icmp ne i32 %1967, 0, !dbg !700
  %1969 = zext i1 %1968 to i8, !dbg !700
  store i8 %1969, i8* @ok, align 1, !dbg !700
  br label %originalBB318

originalBB325alteredBB:                           ; preds = %originalBB325, %1215
  %1970 = load %struct.passwd*, %struct.passwd** %20, align 8, !dbg !702
  %1971 = getelementptr inbounds %struct.passwd, %struct.passwd* %1970, i32 0, i32 0, !dbg !703
  %1972 = load i8*, i8** %1971, align 8, !dbg !703
  %1973 = call noalias i8* @xstrdup(i8* %1972), !dbg !704
  store i8* %1973, i8** %17, align 8, !dbg !705
  %1974 = load %struct.passwd*, %struct.passwd** %20, align 8, !dbg !706
  %1975 = getelementptr inbounds %struct.passwd, %struct.passwd* %1974, i32 0, i32 2, !dbg !707
  %1976 = load i32, i32* %1975, align 8, !dbg !707
  store i32 %1976, i32* @euid, align 4, !dbg !708
  store i32 %1976, i32* @ruid, align 4, !dbg !709
  %1977 = load %struct.passwd*, %struct.passwd** %20, align 8, !dbg !710
  %1978 = getelementptr inbounds %struct.passwd, %struct.passwd* %1977, i32 0, i32 3, !dbg !711
  %1979 = load i32, i32* %1978, align 4, !dbg !711
  store i32 %1979, i32* @egid, align 4, !dbg !712
  store i32 %1979, i32* @rgid, align 4, !dbg !713
  %1980 = load i8*, i8** %17, align 8, !dbg !714
  call void @print_stuff(i8* %1980), !dbg !715
  %1981 = load i8*, i8** %17, align 8, !dbg !716
  call void @free(i8* %1981) #10, !dbg !717
  br label %originalBB325

originalBB329alteredBB:                           ; preds = %originalBB329, %1244
  %1982 = load i32, i32* @optind, align 4, !dbg !719
  %_330 = shl i32 %1982, 1
  %1983 = add nsw i32 %1982, 1, !dbg !719
  store i32 %1983, i32* @optind, align 4, !dbg !719
  br label %originalBB329

originalBB334alteredBB:                           ; preds = %originalBB334, %1263
  br label %originalBB334

originalBB338alteredBB:                           ; preds = %originalBB338, %1280
  store i32 -1, i32* %22, align 4, !dbg !726
  call void @llvm.dbg.declare(metadata !4, metadata !920, metadata !DIExpression()), !dbg !728
  store i32 -1, i32* %23, align 4, !dbg !728
  %1984 = load i8, i8* @just_user, align 1, !dbg !729
  %1985 = trunc i8 %1984 to i1, !dbg !729
  br label %originalBB338

originalBB342alteredBB:                           ; preds = %originalBB342, %1299
  %1986 = load i8, i8* @use_real, align 1, !dbg !732
  %1987 = trunc i8 %1986 to i1, !dbg !732
  br label %originalBB342

originalBB346alteredBB:                           ; preds = %originalBB346, %1318
  %1988 = load i8, i8* @just_group, align 1, !dbg !733
  %1989 = trunc i8 %1988 to i1, !dbg !733
  br label %originalBB346

originalBB350alteredBB:                           ; preds = %originalBB350, %1340
  %1990 = load i8, i8* @just_context, align 1, !dbg !737
  %1991 = trunc i8 %1990 to i1, !dbg !737
  br label %originalBB350

originalBB354alteredBB:                           ; preds = %originalBB354, %1359
  %1992 = call i32* @__errno_location() #15, !dbg !738
  store i32 0, i32* %1992, align 4, !dbg !740
  %1993 = call i32 @geteuid() #10, !dbg !741
  store i32 %1993, i32* @euid, align 4, !dbg !742
  %1994 = load i32, i32* @euid, align 4, !dbg !743
  %1995 = load i32, i32* %22, align 4, !dbg !745
  %1996 = icmp eq i32 %1994, %1995, !dbg !746
  br label %originalBB354

originalBB358alteredBB:                           ; preds = %originalBB358, %1381
  %1997 = call i32* @__errno_location() #15, !dbg !748
  %1998 = load i32, i32* %1997, align 4, !dbg !748
  %1999 = icmp ne i32 %1998, 0, !dbg !748
  br label %originalBB358

originalBB362alteredBB:                           ; preds = %originalBB362, %1401
  %2000 = call i32* @__errno_location() #15, !dbg !750
  %2001 = load i32, i32* %2000, align 4, !dbg !750
  %2002 = call i8* @gettext(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.23, i64 0, i64 0)) #10, !dbg !750
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %2001, i8* %2002), !dbg !750
  br label %originalBB362

originalBB366alteredBB:                           ; preds = %originalBB366, %1421
  br label %originalBB366

originalBB370alteredBB:                           ; preds = %originalBB370, %1444
  %2003 = load i8, i8* @just_group, align 1, !dbg !756
  %2004 = trunc i8 %2003 to i1, !dbg !756
  br label %originalBB370

originalBB374alteredBB:                           ; preds = %originalBB374, %1463
  %2005 = load i8, i8* @just_group_list, align 1, !dbg !758
  %2006 = trunc i8 %2005 to i1, !dbg !758
  br label %originalBB374

originalBB378alteredBB:                           ; preds = %originalBB378, %1485
  %2007 = call i32* @__errno_location() #15, !dbg !761
  store i32 0, i32* %2007, align 4, !dbg !763
  %2008 = call i32 @getuid() #10, !dbg !764
  store i32 %2008, i32* @ruid, align 4, !dbg !765
  %2009 = load i32, i32* @ruid, align 4, !dbg !766
  %2010 = load i32, i32* %22, align 4, !dbg !768
  %2011 = icmp eq i32 %2009, %2010, !dbg !769
  br label %originalBB378

originalBB382alteredBB:                           ; preds = %originalBB382, %1507
  %2012 = call i32* @__errno_location() #15, !dbg !771
  %2013 = load i32, i32* %2012, align 4, !dbg !771
  %2014 = icmp ne i32 %2013, 0, !dbg !771
  br label %originalBB382

originalBB386alteredBB:                           ; preds = %originalBB386, %1527
  %2015 = call i32* @__errno_location() #15, !dbg !773
  %2016 = load i32, i32* %2015, align 4, !dbg !773
  %2017 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.24, i64 0, i64 0)) #10, !dbg !773
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %2016, i8* %2017), !dbg !773
  br label %originalBB386

originalBB390alteredBB:                           ; preds = %originalBB390, %1547
  br label %originalBB390

originalBB394alteredBB:                           ; preds = %originalBB394, %1564
  %2018 = load i8, i8* @just_user, align 1, !dbg !775
  %2019 = trunc i8 %2018 to i1, !dbg !775
  br label %originalBB394

originalBB398alteredBB:                           ; preds = %originalBB398, %1583
  %2020 = load i8, i8* @just_group, align 1, !dbg !778
  %2021 = trunc i8 %2020 to i1, !dbg !778
  br label %originalBB398

originalBB402alteredBB:                           ; preds = %originalBB402, %1602
  %2022 = load i8, i8* @just_group_list, align 1, !dbg !780
  %2023 = trunc i8 %2022 to i1, !dbg !780
  br label %originalBB402

originalBB406alteredBB:                           ; preds = %originalBB406, %1621
  %2024 = load i8, i8* @just_context, align 1, !dbg !782
  %2025 = trunc i8 %2024 to i1, !dbg !782
  br label %originalBB406

originalBB410alteredBB:                           ; preds = %originalBB410, %1640
  %2026 = call i32* @__errno_location() #15, !dbg !784
  store i32 0, i32* %2026, align 4, !dbg !786
  %2027 = call i32 @getegid() #10, !dbg !787
  store i32 %2027, i32* @egid, align 4, !dbg !788
  %2028 = load i32, i32* @egid, align 4, !dbg !789
  %2029 = load i32, i32* %23, align 4, !dbg !791
  %2030 = icmp eq i32 %2028, %2029, !dbg !792
  br label %originalBB410

originalBB414alteredBB:                           ; preds = %originalBB414, %1662
  %2031 = call i32* @__errno_location() #15, !dbg !794
  %2032 = load i32, i32* %2031, align 4, !dbg !794
  %2033 = icmp ne i32 %2032, 0, !dbg !794
  br label %originalBB414

originalBB418alteredBB:                           ; preds = %originalBB418, %1682
  %2034 = call i32* @__errno_location() #15, !dbg !796
  %2035 = load i32, i32* %2034, align 4, !dbg !796
  %2036 = call i8* @gettext(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.25, i64 0, i64 0)) #10, !dbg !796
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %2035, i8* %2036), !dbg !796
  br label %originalBB418

originalBB422alteredBB:                           ; preds = %originalBB422, %1702
  %2037 = call i32* @__errno_location() #15, !dbg !797
  store i32 0, i32* %2037, align 4, !dbg !798
  %2038 = call i32 @getgid() #10, !dbg !799
  store i32 %2038, i32* @rgid, align 4, !dbg !800
  %2039 = load i32, i32* @rgid, align 4, !dbg !801
  %2040 = load i32, i32* %23, align 4, !dbg !803
  %2041 = icmp eq i32 %2039, %2040, !dbg !804
  br label %originalBB422

originalBB426alteredBB:                           ; preds = %originalBB426, %1728
  %2042 = call i32* @__errno_location() #15, !dbg !808
  %2043 = load i32, i32* %2042, align 4, !dbg !808
  %2044 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.26, i64 0, i64 0)) #10, !dbg !808
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %2043, i8* %2044), !dbg !808
  br label %originalBB426

originalBB430alteredBB:                           ; preds = %originalBB430, %1748
  br label %originalBB430

originalBB434alteredBB:                           ; preds = %originalBB434, %1765
  %2045 = load i8*, i8** %17, align 8, !dbg !810
  call void @print_stuff(i8* %2045), !dbg !811
  br label %originalBB434

originalBB438alteredBB:                           ; preds = %originalBB438, %1783
  %2046 = load i8, i8* @ok, align 1, !dbg !812
  %2047 = trunc i8 %2046 to i1, !dbg !812
  %2048 = zext i1 %2047 to i64, !dbg !812
  %2049 = select i1 %2047, i32 0, i32 1, !dbg !812
  br label %originalBB438
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @is_smack_enabled() #4 !dbg !970 {
  %1 = load i32, i32* @x.5
  %2 = load i32, i32* @y.6
  %3 = sub i32 %1, 1
  %4 = mul i32 %1, %3
  %5 = urem i32 %4, 2
  %6 = icmp eq i32 %5, 0
  %7 = icmp slt i32 %2, 10
  %8 = or i1 %6, %7
  br i1 %8, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %0, %originalBBalteredBB
  %9 = load i32, i32* @x.5
  %10 = load i32, i32* @y.6
  %11 = sub i32 %9, 1
  %12 = mul i32 %9, %11
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = icmp slt i32 %10, 10
  %16 = or i1 %14, %15
  br i1 %16, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i1 false, !dbg !974

originalBBalteredBB:                              ; preds = %originalBB, %0
  br label %originalBB
}

; Function Attrs: nounwind
declare dso_local i8* @bindtextdomain(i8*, i8*) #2

; Function Attrs: nounwind
declare dso_local i8* @textdomain(i8*) #2

; Function Attrs: nounwind
declare dso_local i32 @atexit(void ()*) #2

; Function Attrs: nounwind
declare dso_local i32 @getopt_long(i32, i8**, i8*, %struct.option*, i32*) #2

declare dso_local void @error(i32, i32, i8*, ...) #3

; Function Attrs: nounwind
declare dso_local i8* @getenv(i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @smack_new_label_from_self(i8**) #4 !dbg !975 {
  %2 = load i32, i32* @x.7
  %3 = load i32, i32* @y.8
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i8**, align 8
  store i8** %0, i8*** %10, align 8
  call void @llvm.dbg.declare(metadata i8*** %10, metadata !982, metadata !DIExpression()), !dbg !983
  %11 = load i32, i32* @x.7
  %12 = load i32, i32* @y.8
  %13 = sub i32 %11, 1
  %14 = mul i32 %11, %13
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = icmp slt i32 %12, 10
  %18 = or i1 %16, %17
  br i1 %18, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i64 -1, !dbg !984

originalBBalteredBB:                              ; preds = %originalBB, %1
  %19 = alloca i8**, align 8
  store i8** %0, i8*** %19, align 8
  call void @llvm.dbg.declare(metadata i8*** %19, metadata !985, metadata !DIExpression()), !dbg !983
  br label %originalBB
}

declare dso_local %struct.passwd* @getpwuid(i32) #3

; Function Attrs: nounwind readnone
declare dso_local i32* @__errno_location() #8

; Function Attrs: noinline nounwind optnone uwtable
define internal void @print_stuff(i8*) #4 !dbg !1033 {
  %2 = load i32, i32* @x.9
  %3 = load i32, i32* @y.10
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i8*, align 8
  store i8* %0, i8** %10, align 8
  call void @llvm.dbg.declare(metadata i8** %10, metadata !1034, metadata !DIExpression()), !dbg !1035
  %11 = load i8, i8* @just_user, align 1, !dbg !1036
  %12 = trunc i8 %11 to i1, !dbg !1036
  %13 = load i32, i32* @x.9
  %14 = load i32, i32* @y.10
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %12, label %21, label %78, !dbg !1038

21:                                               ; preds = %originalBBpart2
  %22 = load i32, i32* @x.9
  %23 = load i32, i32* @y.10
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %21, %originalBB1alteredBB
  %30 = load i8, i8* @use_real, align 1, !dbg !1039
  %31 = trunc i8 %30 to i1, !dbg !1039
  %32 = load i32, i32* @x.9
  %33 = load i32, i32* @y.10
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %31, label %40, label %42, !dbg !1039

40:                                               ; preds = %originalBBpart24
  %41 = load i32, i32* @ruid, align 4, !dbg !1040
  br label %60, !dbg !1039

42:                                               ; preds = %originalBBpart24
  %43 = load i32, i32* @x.9
  %44 = load i32, i32* @y.10
  %45 = sub i32 %43, 1
  %46 = mul i32 %43, %45
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %48, %49
  br i1 %50, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %42, %originalBB6alteredBB
  %51 = load i32, i32* @euid, align 4, !dbg !1041
  %52 = load i32, i32* @x.9
  %53 = load i32, i32* @y.10
  %54 = sub i32 %52, 1
  %55 = mul i32 %52, %54
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %53, 10
  %59 = or i1 %57, %58
  br i1 %59, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %60, !dbg !1039

60:                                               ; preds = %originalBBpart28, %40
  %61 = phi i32 [ %41, %40 ], [ %51, %originalBBpart28 ], !dbg !1039
  %62 = load i32, i32* @x.9
  %63 = load i32, i32* @y.10
  %64 = sub i32 %62, 1
  %65 = mul i32 %62, %64
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %63, 10
  %69 = or i1 %67, %68
  br i1 %69, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %60, %originalBB10alteredBB
  call void @print_user(i32 %61), !dbg !1042
  %70 = load i32, i32* @x.9
  %71 = load i32, i32* @y.10
  %72 = sub i32 %70, 1
  %73 = mul i32 %70, %72
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %71, 10
  %77 = or i1 %75, %76
  br i1 %77, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %295, !dbg !1042

78:                                               ; preds = %originalBBpart2
  %79 = load i32, i32* @x.9
  %80 = load i32, i32* @y.10
  %81 = sub i32 %79, 1
  %82 = mul i32 %79, %81
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %80, 10
  %86 = or i1 %84, %85
  br i1 %86, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %78, %originalBB14alteredBB
  %87 = load i8, i8* @just_group, align 1, !dbg !1043
  %88 = trunc i8 %87 to i1, !dbg !1043
  %89 = load i32, i32* @x.9
  %90 = load i32, i32* @y.10
  %91 = sub i32 %89, 1
  %92 = mul i32 %89, %91
  %93 = urem i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %90, 10
  %96 = or i1 %94, %95
  br i1 %96, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %88, label %97, label %164, !dbg !1045

97:                                               ; preds = %originalBBpart216
  %98 = load i32, i32* @x.9
  %99 = load i32, i32* @y.10
  %100 = sub i32 %98, 1
  %101 = mul i32 %98, %100
  %102 = urem i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = icmp slt i32 %99, 10
  %105 = or i1 %103, %104
  br i1 %105, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %97, %originalBB18alteredBB
  %106 = load i8, i8* @use_real, align 1, !dbg !1046
  %107 = trunc i8 %106 to i1, !dbg !1046
  %108 = load i32, i32* @x.9
  %109 = load i32, i32* @y.10
  %110 = sub i32 %108, 1
  %111 = mul i32 %108, %110
  %112 = urem i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %109, 10
  %115 = or i1 %113, %114
  br i1 %115, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br i1 %107, label %116, label %118, !dbg !1046

116:                                              ; preds = %originalBBpart220
  %117 = load i32, i32* @rgid, align 4, !dbg !1047
  br label %136, !dbg !1046

118:                                              ; preds = %originalBBpart220
  %119 = load i32, i32* @x.9
  %120 = load i32, i32* @y.10
  %121 = sub i32 %119, 1
  %122 = mul i32 %119, %121
  %123 = urem i32 %122, 2
  %124 = icmp eq i32 %123, 0
  %125 = icmp slt i32 %120, 10
  %126 = or i1 %124, %125
  br i1 %126, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %118, %originalBB22alteredBB
  %127 = load i32, i32* @egid, align 4, !dbg !1048
  %128 = load i32, i32* @x.9
  %129 = load i32, i32* @y.10
  %130 = sub i32 %128, 1
  %131 = mul i32 %128, %130
  %132 = urem i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = icmp slt i32 %129, 10
  %135 = or i1 %133, %134
  br i1 %135, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br label %136, !dbg !1046

136:                                              ; preds = %originalBBpart224, %116
  %137 = phi i32 [ %117, %116 ], [ %127, %originalBBpart224 ], !dbg !1046
  %138 = load i32, i32* @x.9
  %139 = load i32, i32* @y.10
  %140 = sub i32 %138, 1
  %141 = mul i32 %138, %140
  %142 = urem i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = icmp slt i32 %139, 10
  %145 = or i1 %143, %144
  br i1 %145, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %136, %originalBB26alteredBB
  %146 = load i8, i8* @use_name, align 1, !dbg !1049
  %147 = trunc i8 %146 to i1, !dbg !1049
  %148 = call zeroext i1 @print_group(i32 %137, i1 zeroext %147), !dbg !1050
  %149 = zext i1 %148 to i32, !dbg !1050
  %150 = load i8, i8* @ok, align 1, !dbg !1051
  %151 = trunc i8 %150 to i1, !dbg !1051
  %152 = zext i1 %151 to i32, !dbg !1051
  %153 = and i32 %152, %149, !dbg !1051
  %154 = icmp ne i32 %153, 0, !dbg !1051
  %155 = zext i1 %154 to i8, !dbg !1051
  store i8 %155, i8* @ok, align 1, !dbg !1051
  %156 = load i32, i32* @x.9
  %157 = load i32, i32* @y.10
  %158 = sub i32 %156, 1
  %159 = mul i32 %156, %158
  %160 = urem i32 %159, 2
  %161 = icmp eq i32 %160, 0
  %162 = icmp slt i32 %157, 10
  %163 = or i1 %161, %162
  br i1 %163, label %originalBBpart231, label %originalBB26alteredBB

originalBBpart231:                                ; preds = %originalBB26
  br label %278, !dbg !1052

164:                                              ; preds = %originalBBpart216
  %165 = load i8, i8* @just_group_list, align 1, !dbg !1053
  %166 = trunc i8 %165 to i1, !dbg !1053
  br i1 %166, label %167, label %203, !dbg !1055

167:                                              ; preds = %164
  %168 = load i32, i32* @x.9
  %169 = load i32, i32* @y.10
  %170 = sub i32 %168, 1
  %171 = mul i32 %168, %170
  %172 = urem i32 %171, 2
  %173 = icmp eq i32 %172, 0
  %174 = icmp slt i32 %169, 10
  %175 = or i1 %173, %174
  br i1 %175, label %originalBB33, label %originalBB33alteredBB

originalBB33:                                     ; preds = %167, %originalBB33alteredBB
  %176 = load i8*, i8** %10, align 8, !dbg !1056
  %177 = load i32, i32* @ruid, align 4, !dbg !1057
  %178 = load i32, i32* @rgid, align 4, !dbg !1058
  %179 = load i32, i32* @egid, align 4, !dbg !1059
  %180 = load i8, i8* @use_name, align 1, !dbg !1060
  %181 = trunc i8 %180 to i1, !dbg !1060
  %182 = load i8, i8* @opt_zero, align 1, !dbg !1061
  %183 = trunc i8 %182 to i1, !dbg !1061
  %184 = zext i1 %183 to i64, !dbg !1061
  %185 = select i1 %183, i32 0, i32 32, !dbg !1061
  %186 = trunc i32 %185 to i8, !dbg !1061
  %187 = call zeroext i1 @print_group_list(i8* %176, i32 %177, i32 %178, i32 %179, i1 zeroext %181, i8 signext %186), !dbg !1062
  %188 = zext i1 %187 to i32, !dbg !1062
  %189 = load i8, i8* @ok, align 1, !dbg !1063
  %190 = trunc i8 %189 to i1, !dbg !1063
  %191 = zext i1 %190 to i32, !dbg !1063
  %192 = and i32 %191, %188, !dbg !1063
  %193 = icmp ne i32 %192, 0, !dbg !1063
  %194 = zext i1 %193 to i8, !dbg !1063
  store i8 %194, i8* @ok, align 1, !dbg !1063
  %195 = load i32, i32* @x.9
  %196 = load i32, i32* @y.10
  %197 = sub i32 %195, 1
  %198 = mul i32 %195, %197
  %199 = urem i32 %198, 2
  %200 = icmp eq i32 %199, 0
  %201 = icmp slt i32 %196, 10
  %202 = or i1 %200, %201
  br i1 %202, label %originalBBpart242, label %originalBB33alteredBB

originalBBpart242:                                ; preds = %originalBB33
  br label %261, !dbg !1064

203:                                              ; preds = %164
  %204 = load i32, i32* @x.9
  %205 = load i32, i32* @y.10
  %206 = sub i32 %204, 1
  %207 = mul i32 %204, %206
  %208 = urem i32 %207, 2
  %209 = icmp eq i32 %208, 0
  %210 = icmp slt i32 %205, 10
  %211 = or i1 %209, %210
  br i1 %211, label %originalBB44, label %originalBB44alteredBB

originalBB44:                                     ; preds = %203, %originalBB44alteredBB
  %212 = load i8, i8* @just_context, align 1, !dbg !1065
  %213 = trunc i8 %212 to i1, !dbg !1065
  %214 = load i32, i32* @x.9
  %215 = load i32, i32* @y.10
  %216 = sub i32 %214, 1
  %217 = mul i32 %214, %216
  %218 = urem i32 %217, 2
  %219 = icmp eq i32 %218, 0
  %220 = icmp slt i32 %215, 10
  %221 = or i1 %219, %220
  br i1 %221, label %originalBBpart246, label %originalBB44alteredBB

originalBBpart246:                                ; preds = %originalBB44
  br i1 %213, label %222, label %242, !dbg !1067

222:                                              ; preds = %originalBBpart246
  %223 = load i32, i32* @x.9
  %224 = load i32, i32* @y.10
  %225 = sub i32 %223, 1
  %226 = mul i32 %223, %225
  %227 = urem i32 %226, 2
  %228 = icmp eq i32 %227, 0
  %229 = icmp slt i32 %224, 10
  %230 = or i1 %228, %229
  br i1 %230, label %originalBB48, label %originalBB48alteredBB

originalBB48:                                     ; preds = %222, %originalBB48alteredBB
  %231 = load i8*, i8** @context, align 8, !dbg !1068
  %232 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1068
  %233 = call i32 @fputs_unlocked(i8* %231, %struct._IO_FILE* %232), !dbg !1068
  %234 = load i32, i32* @x.9
  %235 = load i32, i32* @y.10
  %236 = sub i32 %234, 1
  %237 = mul i32 %234, %236
  %238 = urem i32 %237, 2
  %239 = icmp eq i32 %238, 0
  %240 = icmp slt i32 %235, 10
  %241 = or i1 %239, %240
  br i1 %241, label %originalBBpart250, label %originalBB48alteredBB

originalBBpart250:                                ; preds = %originalBB48
  br label %244, !dbg !1068

242:                                              ; preds = %originalBBpart246
  %243 = load i8*, i8** %10, align 8, !dbg !1069
  call void @print_full_info(i8* %243), !dbg !1070
  br label %244

244:                                              ; preds = %242, %originalBBpart250
  %245 = load i32, i32* @x.9
  %246 = load i32, i32* @y.10
  %247 = sub i32 %245, 1
  %248 = mul i32 %245, %247
  %249 = urem i32 %248, 2
  %250 = icmp eq i32 %249, 0
  %251 = icmp slt i32 %246, 10
  %252 = or i1 %250, %251
  br i1 %252, label %originalBB52, label %originalBB52alteredBB

originalBB52:                                     ; preds = %244, %originalBB52alteredBB
  %253 = load i32, i32* @x.9
  %254 = load i32, i32* @y.10
  %255 = sub i32 %253, 1
  %256 = mul i32 %253, %255
  %257 = urem i32 %256, 2
  %258 = icmp eq i32 %257, 0
  %259 = icmp slt i32 %254, 10
  %260 = or i1 %258, %259
  br i1 %260, label %originalBBpart254, label %originalBB52alteredBB

originalBBpart254:                                ; preds = %originalBB52
  br label %261

261:                                              ; preds = %originalBBpart254, %originalBBpart242
  %262 = load i32, i32* @x.9
  %263 = load i32, i32* @y.10
  %264 = sub i32 %262, 1
  %265 = mul i32 %262, %264
  %266 = urem i32 %265, 2
  %267 = icmp eq i32 %266, 0
  %268 = icmp slt i32 %263, 10
  %269 = or i1 %267, %268
  br i1 %269, label %originalBB56, label %originalBB56alteredBB

originalBB56:                                     ; preds = %261, %originalBB56alteredBB
  %270 = load i32, i32* @x.9
  %271 = load i32, i32* @y.10
  %272 = sub i32 %270, 1
  %273 = mul i32 %270, %272
  %274 = urem i32 %273, 2
  %275 = icmp eq i32 %274, 0
  %276 = icmp slt i32 %271, 10
  %277 = or i1 %275, %276
  br i1 %277, label %originalBBpart258, label %originalBB56alteredBB

originalBBpart258:                                ; preds = %originalBB56
  br label %278

278:                                              ; preds = %originalBBpart258, %originalBBpart231
  %279 = load i32, i32* @x.9
  %280 = load i32, i32* @y.10
  %281 = sub i32 %279, 1
  %282 = mul i32 %279, %281
  %283 = urem i32 %282, 2
  %284 = icmp eq i32 %283, 0
  %285 = icmp slt i32 %280, 10
  %286 = or i1 %284, %285
  br i1 %286, label %originalBB60, label %originalBB60alteredBB

originalBB60:                                     ; preds = %278, %originalBB60alteredBB
  %287 = load i32, i32* @x.9
  %288 = load i32, i32* @y.10
  %289 = sub i32 %287, 1
  %290 = mul i32 %287, %289
  %291 = urem i32 %290, 2
  %292 = icmp eq i32 %291, 0
  %293 = icmp slt i32 %288, 10
  %294 = or i1 %292, %293
  br i1 %294, label %originalBBpart262, label %originalBB60alteredBB

originalBBpart262:                                ; preds = %originalBB60
  br label %295

295:                                              ; preds = %originalBBpart262, %originalBBpart212
  %296 = load i32, i32* @x.9
  %297 = load i32, i32* @y.10
  %298 = sub i32 %296, 1
  %299 = mul i32 %296, %298
  %300 = urem i32 %299, 2
  %301 = icmp eq i32 %300, 0
  %302 = icmp slt i32 %297, 10
  %303 = or i1 %301, %302
  br i1 %303, label %originalBB64, label %originalBB64alteredBB

originalBB64:                                     ; preds = %295, %originalBB64alteredBB
  %304 = load i8, i8* @opt_zero, align 1, !dbg !1071
  %305 = trunc i8 %304 to i1, !dbg !1071
  %306 = load i32, i32* @x.9
  %307 = load i32, i32* @y.10
  %308 = sub i32 %306, 1
  %309 = mul i32 %306, %308
  %310 = urem i32 %309, 2
  %311 = icmp eq i32 %310, 0
  %312 = icmp slt i32 %307, 10
  %313 = or i1 %311, %312
  br i1 %313, label %originalBBpart266, label %originalBB64alteredBB

originalBBpart266:                                ; preds = %originalBB64
  br i1 %305, label %314, label %371, !dbg !1073

314:                                              ; preds = %originalBBpart266
  %315 = load i32, i32* @x.9
  %316 = load i32, i32* @y.10
  %317 = sub i32 %315, 1
  %318 = mul i32 %315, %317
  %319 = urem i32 %318, 2
  %320 = icmp eq i32 %319, 0
  %321 = icmp slt i32 %316, 10
  %322 = or i1 %320, %321
  br i1 %322, label %originalBB68, label %originalBB68alteredBB

originalBB68:                                     ; preds = %314, %originalBB68alteredBB
  %323 = load i8, i8* @just_group_list, align 1, !dbg !1074
  %324 = trunc i8 %323 to i1, !dbg !1074
  %325 = load i32, i32* @x.9
  %326 = load i32, i32* @y.10
  %327 = sub i32 %325, 1
  %328 = mul i32 %325, %327
  %329 = urem i32 %328, 2
  %330 = icmp eq i32 %329, 0
  %331 = icmp slt i32 %326, 10
  %332 = or i1 %330, %331
  br i1 %332, label %originalBBpart270, label %originalBB68alteredBB

originalBBpart270:                                ; preds = %originalBB68
  br i1 %324, label %333, label %371, !dbg !1075

333:                                              ; preds = %originalBBpart270
  %334 = load i32, i32* @x.9
  %335 = load i32, i32* @y.10
  %336 = sub i32 %334, 1
  %337 = mul i32 %334, %336
  %338 = urem i32 %337, 2
  %339 = icmp eq i32 %338, 0
  %340 = icmp slt i32 %335, 10
  %341 = or i1 %339, %340
  br i1 %341, label %originalBB72, label %originalBB72alteredBB

originalBB72:                                     ; preds = %333, %originalBB72alteredBB
  %342 = load i8, i8* @multiple_users, align 1, !dbg !1076
  %343 = trunc i8 %342 to i1, !dbg !1076
  %344 = load i32, i32* @x.9
  %345 = load i32, i32* @y.10
  %346 = sub i32 %344, 1
  %347 = mul i32 %344, %346
  %348 = urem i32 %347, 2
  %349 = icmp eq i32 %348, 0
  %350 = icmp slt i32 %345, 10
  %351 = or i1 %349, %350
  br i1 %351, label %originalBBpart274, label %originalBB72alteredBB

originalBBpart274:                                ; preds = %originalBB72
  br i1 %343, label %352, label %371, !dbg !1077

352:                                              ; preds = %originalBBpart274
  %353 = load i32, i32* @x.9
  %354 = load i32, i32* @y.10
  %355 = sub i32 %353, 1
  %356 = mul i32 %353, %355
  %357 = urem i32 %356, 2
  %358 = icmp eq i32 %357, 0
  %359 = icmp slt i32 %354, 10
  %360 = or i1 %358, %359
  br i1 %360, label %originalBB76, label %originalBB76alteredBB

originalBB76:                                     ; preds = %352, %originalBB76alteredBB
  %361 = call i32 @putchar_unlocked(i32 0), !dbg !1078
  %362 = call i32 @putchar_unlocked(i32 0), !dbg !1080
  %363 = load i32, i32* @x.9
  %364 = load i32, i32* @y.10
  %365 = sub i32 %363, 1
  %366 = mul i32 %363, %365
  %367 = urem i32 %366, 2
  %368 = icmp eq i32 %367, 0
  %369 = icmp slt i32 %364, 10
  %370 = or i1 %368, %369
  br i1 %370, label %originalBBpart278, label %originalBB76alteredBB

originalBBpart278:                                ; preds = %originalBB76
  br label %393, !dbg !1081

371:                                              ; preds = %originalBBpart274, %originalBBpart270, %originalBBpart266
  %372 = load i32, i32* @x.9
  %373 = load i32, i32* @y.10
  %374 = sub i32 %372, 1
  %375 = mul i32 %372, %374
  %376 = urem i32 %375, 2
  %377 = icmp eq i32 %376, 0
  %378 = icmp slt i32 %373, 10
  %379 = or i1 %377, %378
  br i1 %379, label %originalBB80, label %originalBB80alteredBB

originalBB80:                                     ; preds = %371, %originalBB80alteredBB
  %380 = load i8, i8* @opt_zero, align 1, !dbg !1082
  %381 = trunc i8 %380 to i1, !dbg !1082
  %382 = zext i1 %381 to i64, !dbg !1082
  %383 = select i1 %381, i32 0, i32 10, !dbg !1082
  %384 = call i32 @putchar_unlocked(i32 %383), !dbg !1082
  %385 = load i32, i32* @x.9
  %386 = load i32, i32* @y.10
  %387 = sub i32 %385, 1
  %388 = mul i32 %385, %387
  %389 = urem i32 %388, 2
  %390 = icmp eq i32 %389, 0
  %391 = icmp slt i32 %386, 10
  %392 = or i1 %390, %391
  br i1 %392, label %originalBBpart282, label %originalBB80alteredBB

originalBBpart282:                                ; preds = %originalBB80
  br label %393

393:                                              ; preds = %originalBBpart282, %originalBBpart278
  %394 = load i32, i32* @x.9
  %395 = load i32, i32* @y.10
  %396 = sub i32 %394, 1
  %397 = mul i32 %394, %396
  %398 = urem i32 %397, 2
  %399 = icmp eq i32 %398, 0
  %400 = icmp slt i32 %395, 10
  %401 = or i1 %399, %400
  br i1 %401, label %originalBB84, label %originalBB84alteredBB

originalBB84:                                     ; preds = %393, %originalBB84alteredBB
  %402 = load i32, i32* @x.9
  %403 = load i32, i32* @y.10
  %404 = sub i32 %402, 1
  %405 = mul i32 %402, %404
  %406 = urem i32 %405, 2
  %407 = icmp eq i32 %406, 0
  %408 = icmp slt i32 %403, 10
  %409 = or i1 %407, %408
  br i1 %409, label %originalBBpart286, label %originalBB84alteredBB

originalBBpart286:                                ; preds = %originalBB84
  ret void, !dbg !1084

originalBBalteredBB:                              ; preds = %originalBB, %1
  %410 = alloca i8*, align 8
  store i8* %0, i8** %410, align 8
  call void @llvm.dbg.declare(metadata i8** %410, metadata !1085, metadata !DIExpression()), !dbg !1035
  %411 = load i8, i8* @just_user, align 1, !dbg !1036
  %412 = trunc i8 %411 to i1, !dbg !1036
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %21
  %413 = load i8, i8* @use_real, align 1, !dbg !1039
  %414 = trunc i8 %413 to i1, !dbg !1039
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %42
  %415 = load i32, i32* @euid, align 4, !dbg !1041
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %60
  call void @print_user(i32 %61), !dbg !1042
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %78
  %416 = load i8, i8* @just_group, align 1, !dbg !1043
  %417 = trunc i8 %416 to i1, !dbg !1043
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %97
  %418 = load i8, i8* @use_real, align 1, !dbg !1046
  %419 = trunc i8 %418 to i1, !dbg !1046
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %118
  %420 = load i32, i32* @egid, align 4, !dbg !1048
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %136
  %421 = load i8, i8* @use_name, align 1, !dbg !1049
  %422 = trunc i8 %421 to i1, !dbg !1049
  %423 = call zeroext i1 @print_group(i32 %137, i1 zeroext %422), !dbg !1050
  %424 = zext i1 %423 to i32, !dbg !1050
  %425 = load i8, i8* @ok, align 1, !dbg !1051
  %426 = trunc i8 %425 to i1, !dbg !1051
  %427 = zext i1 %426 to i32, !dbg !1051
  %_ = shl i32 %427, %424
  %_27 = shl i32 %427, %424
  %_28 = shl i32 %427, %424
  %_29 = shl i32 %427, %424
  %428 = and i32 %427, %424, !dbg !1051
  %429 = icmp ne i32 %428, 0, !dbg !1051
  %430 = zext i1 %429 to i8, !dbg !1051
  store i8 %430, i8* @ok, align 1, !dbg !1051
  br label %originalBB26

originalBB33alteredBB:                            ; preds = %originalBB33, %167
  %431 = load i8*, i8** %10, align 8, !dbg !1056
  %432 = load i32, i32* @ruid, align 4, !dbg !1057
  %433 = load i32, i32* @rgid, align 4, !dbg !1058
  %434 = load i32, i32* @egid, align 4, !dbg !1059
  %435 = load i8, i8* @use_name, align 1, !dbg !1060
  %436 = trunc i8 %435 to i1, !dbg !1060
  %437 = load i8, i8* @opt_zero, align 1, !dbg !1061
  %438 = trunc i8 %437 to i1, !dbg !1061
  %439 = zext i1 %438 to i64, !dbg !1061
  %440 = select i1 %438, i32 0, i32 32, !dbg !1061
  %441 = trunc i32 %440 to i8, !dbg !1061
  %442 = call zeroext i1 @print_group_list(i8* %431, i32 %432, i32 %433, i32 %434, i1 zeroext %436, i8 signext %441), !dbg !1062
  %443 = zext i1 %442 to i32, !dbg !1062
  %444 = load i8, i8* @ok, align 1, !dbg !1063
  %445 = trunc i8 %444 to i1, !dbg !1063
  %446 = zext i1 %445 to i32, !dbg !1063
  %_34 = sub i32 0, %446
  %gen = add i32 %_34, %443
  %_35 = shl i32 %446, %443
  %_36 = sub i32 %446, %443
  %gen37 = mul i32 %_36, %443
  %_38 = sub i32 %446, %443
  %gen39 = mul i32 %_38, %443
  %_40 = shl i32 %446, %443
  %447 = and i32 %446, %443, !dbg !1063
  %448 = icmp ne i32 %447, 0, !dbg !1063
  %449 = zext i1 %448 to i8, !dbg !1063
  store i8 %449, i8* @ok, align 1, !dbg !1063
  br label %originalBB33

originalBB44alteredBB:                            ; preds = %originalBB44, %203
  %450 = load i8, i8* @just_context, align 1, !dbg !1065
  %451 = trunc i8 %450 to i1, !dbg !1065
  br label %originalBB44

originalBB48alteredBB:                            ; preds = %originalBB48, %222
  %452 = load i8*, i8** @context, align 8, !dbg !1068
  %453 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1068
  %454 = call i32 @fputs_unlocked(i8* %452, %struct._IO_FILE* %453), !dbg !1068
  br label %originalBB48

originalBB52alteredBB:                            ; preds = %originalBB52, %244
  br label %originalBB52

originalBB56alteredBB:                            ; preds = %originalBB56, %261
  br label %originalBB56

originalBB60alteredBB:                            ; preds = %originalBB60, %278
  br label %originalBB60

originalBB64alteredBB:                            ; preds = %originalBB64, %295
  %455 = load i8, i8* @opt_zero, align 1, !dbg !1071
  %456 = trunc i8 %455 to i1, !dbg !1071
  br label %originalBB64

originalBB68alteredBB:                            ; preds = %originalBB68, %314
  %457 = load i8, i8* @just_group_list, align 1, !dbg !1074
  %458 = trunc i8 %457 to i1, !dbg !1074
  br label %originalBB68

originalBB72alteredBB:                            ; preds = %originalBB72, %333
  %459 = load i8, i8* @multiple_users, align 1, !dbg !1076
  %460 = trunc i8 %459 to i1, !dbg !1076
  br label %originalBB72

originalBB76alteredBB:                            ; preds = %originalBB76, %352
  %461 = call i32 @putchar_unlocked(i32 0), !dbg !1078
  %462 = call i32 @putchar_unlocked(i32 0), !dbg !1080
  br label %originalBB76

originalBB80alteredBB:                            ; preds = %originalBB80, %371
  %463 = load i8, i8* @opt_zero, align 1, !dbg !1082
  %464 = trunc i8 %463 to i1, !dbg !1082
  %465 = zext i1 %464 to i64, !dbg !1082
  %466 = select i1 %464, i32 0, i32 10, !dbg !1082
  %467 = call i32 @putchar_unlocked(i32 %466), !dbg !1082
  br label %originalBB80

originalBB84alteredBB:                            ; preds = %originalBB84, %393
  br label %originalBB84
}

; Function Attrs: nounwind
declare dso_local void @free(i8*) #2

; Function Attrs: nounwind
declare dso_local i32 @geteuid() #2

; Function Attrs: nounwind
declare dso_local i32 @getuid() #2

; Function Attrs: nounwind
declare dso_local i32 @getegid() #2

; Function Attrs: nounwind
declare dso_local i32 @getgid() #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @print_user(i32) #4 !dbg !1133 {
  %2 = load i32, i32* @x.11
  %3 = load i32, i32* @y.12
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i32, align 4
  %11 = alloca %struct.passwd*, align 8
  %12 = alloca i8*, align 8
  store i32 %0, i32* %10, align 4
  call void @llvm.dbg.declare(metadata i32* %10, metadata !1136, metadata !DIExpression()), !dbg !1137
  call void @llvm.dbg.declare(metadata %struct.passwd** %11, metadata !1138, metadata !DIExpression()), !dbg !1139
  store %struct.passwd* null, %struct.passwd** %11, align 8, !dbg !1139
  %13 = load i8, i8* @use_name, align 1, !dbg !1140
  %14 = trunc i8 %13 to i1, !dbg !1140
  %15 = load i32, i32* @x.11
  %16 = load i32, i32* @y.12
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %14, label %23, label %86, !dbg !1142

23:                                               ; preds = %originalBBpart2
  %24 = load i32, i32* @x.11
  %25 = load i32, i32* @y.12
  %26 = sub i32 %24, 1
  %27 = mul i32 %24, %26
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %29, %30
  br i1 %31, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %23, %originalBB1alteredBB
  %32 = load i32, i32* %10, align 4, !dbg !1143
  %33 = call %struct.passwd* @getpwuid(i32 %32), !dbg !1145
  store %struct.passwd* %33, %struct.passwd** %11, align 8, !dbg !1146
  %34 = load %struct.passwd*, %struct.passwd** %11, align 8, !dbg !1147
  %35 = icmp eq %struct.passwd* %34, null, !dbg !1149
  %36 = load i32, i32* @x.11
  %37 = load i32, i32* @y.12
  %38 = sub i32 %36, 1
  %39 = mul i32 %36, %38
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %37, 10
  %43 = or i1 %41, %42
  br i1 %43, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %35, label %44, label %69, !dbg !1150

44:                                               ; preds = %originalBBpart24
  %45 = load i32, i32* @x.11
  %46 = load i32, i32* @y.12
  %47 = sub i32 %45, 1
  %48 = mul i32 %45, %47
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %50, %51
  br i1 %52, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %44, %originalBB6alteredBB
  %53 = call i8* @gettext(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.51, i64 0, i64 0)) #10, !dbg !1151
  %54 = call i8* @uidtostr_ptr(i32* %10), !dbg !1153
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %53, i8* %54), !dbg !1154
  %55 = load i8, i8* @ok, align 1, !dbg !1155
  %56 = trunc i8 %55 to i1, !dbg !1155
  %57 = zext i1 %56 to i32, !dbg !1155
  %58 = and i32 %57, 0, !dbg !1155
  %59 = icmp ne i32 %58, 0, !dbg !1155
  %60 = zext i1 %59 to i8, !dbg !1155
  store i8 %60, i8* @ok, align 1, !dbg !1155
  %61 = load i32, i32* @x.11
  %62 = load i32, i32* @y.12
  %63 = sub i32 %61, 1
  %64 = mul i32 %61, %63
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %62, 10
  %68 = or i1 %66, %67
  br i1 %68, label %originalBBpart217, label %originalBB6alteredBB

originalBBpart217:                                ; preds = %originalBB6
  br label %69, !dbg !1156

69:                                               ; preds = %originalBBpart217, %originalBBpart24
  %70 = load i32, i32* @x.11
  %71 = load i32, i32* @y.12
  %72 = sub i32 %70, 1
  %73 = mul i32 %70, %72
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %71, 10
  %77 = or i1 %75, %76
  br i1 %77, label %originalBB19, label %originalBB19alteredBB

originalBB19:                                     ; preds = %69, %originalBB19alteredBB
  %78 = load i32, i32* @x.11
  %79 = load i32, i32* @y.12
  %80 = sub i32 %78, 1
  %81 = mul i32 %78, %80
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %79, 10
  %85 = or i1 %83, %84
  br i1 %85, label %originalBBpart221, label %originalBB19alteredBB

originalBBpart221:                                ; preds = %originalBB19
  br label %86, !dbg !1157

86:                                               ; preds = %originalBBpart221, %originalBBpart2
  call void @llvm.dbg.declare(metadata i8** %12, metadata !1158, metadata !DIExpression()), !dbg !1159
  %87 = load i32, i32* @x.11
  %88 = load i32, i32* @y.12
  %89 = sub i32 %87, 1
  %90 = mul i32 %87, %89
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %88, 10
  %94 = or i1 %92, %93
  br i1 %94, label %originalBB23, label %originalBB23alteredBB

originalBB23:                                     ; preds = %86, %originalBB23alteredBB
  %95 = load %struct.passwd*, %struct.passwd** %11, align 8, !dbg !1160
  %96 = icmp ne %struct.passwd* %95, null, !dbg !1160
  %97 = load i32, i32* @x.11
  %98 = load i32, i32* @y.12
  %99 = sub i32 %97, 1
  %100 = mul i32 %97, %99
  %101 = urem i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %98, 10
  %104 = or i1 %102, %103
  br i1 %104, label %originalBBpart225, label %originalBB23alteredBB

originalBBpart225:                                ; preds = %originalBB23
  br i1 %96, label %105, label %125, !dbg !1160

105:                                              ; preds = %originalBBpart225
  %106 = load i32, i32* @x.11
  %107 = load i32, i32* @y.12
  %108 = sub i32 %106, 1
  %109 = mul i32 %106, %108
  %110 = urem i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %107, 10
  %113 = or i1 %111, %112
  br i1 %113, label %originalBB27, label %originalBB27alteredBB

originalBB27:                                     ; preds = %105, %originalBB27alteredBB
  %114 = load %struct.passwd*, %struct.passwd** %11, align 8, !dbg !1161
  %115 = getelementptr inbounds %struct.passwd, %struct.passwd* %114, i32 0, i32 0, !dbg !1162
  %116 = load i8*, i8** %115, align 8, !dbg !1162
  %117 = load i32, i32* @x.11
  %118 = load i32, i32* @y.12
  %119 = sub i32 %117, 1
  %120 = mul i32 %117, %119
  %121 = urem i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = icmp slt i32 %118, 10
  %124 = or i1 %122, %123
  br i1 %124, label %originalBBpart229, label %originalBB27alteredBB

originalBBpart229:                                ; preds = %originalBB27
  br label %143, !dbg !1160

125:                                              ; preds = %originalBBpart225
  %126 = load i32, i32* @x.11
  %127 = load i32, i32* @y.12
  %128 = sub i32 %126, 1
  %129 = mul i32 %126, %128
  %130 = urem i32 %129, 2
  %131 = icmp eq i32 %130, 0
  %132 = icmp slt i32 %127, 10
  %133 = or i1 %131, %132
  br i1 %133, label %originalBB31, label %originalBB31alteredBB

originalBB31:                                     ; preds = %125, %originalBB31alteredBB
  %134 = call i8* @uidtostr_ptr(i32* %10), !dbg !1163
  %135 = load i32, i32* @x.11
  %136 = load i32, i32* @y.12
  %137 = sub i32 %135, 1
  %138 = mul i32 %135, %137
  %139 = urem i32 %138, 2
  %140 = icmp eq i32 %139, 0
  %141 = icmp slt i32 %136, 10
  %142 = or i1 %140, %141
  br i1 %142, label %originalBBpart233, label %originalBB31alteredBB

originalBBpart233:                                ; preds = %originalBB31
  br label %143, !dbg !1160

143:                                              ; preds = %originalBBpart233, %originalBBpart229
  %144 = phi i8* [ %116, %originalBBpart229 ], [ %134, %originalBBpart233 ], !dbg !1160
  %145 = load i32, i32* @x.11
  %146 = load i32, i32* @y.12
  %147 = sub i32 %145, 1
  %148 = mul i32 %145, %147
  %149 = urem i32 %148, 2
  %150 = icmp eq i32 %149, 0
  %151 = icmp slt i32 %146, 10
  %152 = or i1 %150, %151
  br i1 %152, label %originalBB35, label %originalBB35alteredBB

originalBB35:                                     ; preds = %143, %originalBB35alteredBB
  store i8* %144, i8** %12, align 8, !dbg !1159
  %153 = load i8*, i8** %12, align 8, !dbg !1164
  %154 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1164
  %155 = call i32 @fputs_unlocked(i8* %153, %struct._IO_FILE* %154), !dbg !1164
  %156 = load i32, i32* @x.11
  %157 = load i32, i32* @y.12
  %158 = sub i32 %156, 1
  %159 = mul i32 %156, %158
  %160 = urem i32 %159, 2
  %161 = icmp eq i32 %160, 0
  %162 = icmp slt i32 %157, 10
  %163 = or i1 %161, %162
  br i1 %163, label %originalBBpart237, label %originalBB35alteredBB

originalBBpart237:                                ; preds = %originalBB35
  ret void, !dbg !1165

originalBBalteredBB:                              ; preds = %originalBB, %1
  %164 = alloca i32, align 4
  %165 = alloca %struct.passwd*, align 8
  %166 = alloca i8*, align 8
  store i32 %0, i32* %164, align 4
  call void @llvm.dbg.declare(metadata i32* %164, metadata !1166, metadata !DIExpression()), !dbg !1137
  call void @llvm.dbg.declare(metadata %struct.passwd** %165, metadata !1214, metadata !DIExpression()), !dbg !1139
  store %struct.passwd* null, %struct.passwd** %165, align 8, !dbg !1139
  %167 = load i8, i8* @use_name, align 1, !dbg !1140
  %168 = trunc i8 %167 to i1, !dbg !1140
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %23
  %169 = load i32, i32* %10, align 4, !dbg !1143
  %170 = call %struct.passwd* @getpwuid(i32 %169), !dbg !1145
  store %struct.passwd* %170, %struct.passwd** %11, align 8, !dbg !1146
  %171 = load %struct.passwd*, %struct.passwd** %11, align 8, !dbg !1147
  %172 = icmp eq %struct.passwd* %171, null, !dbg !1149
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %44
  %173 = call i8* @gettext(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.51, i64 0, i64 0)) #10, !dbg !1151
  %174 = call i8* @uidtostr_ptr(i32* %10), !dbg !1153
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %173, i8* %174), !dbg !1154
  %175 = load i8, i8* @ok, align 1, !dbg !1155
  %176 = trunc i8 %175 to i1, !dbg !1155
  %177 = zext i1 %176 to i32, !dbg !1155
  %_ = shl i32 %177, 0
  %_7 = shl i32 %177, 0
  %_8 = sub i32 0, %177
  %gen = add i32 %_8, 0
  %_9 = sub i32 0, %177
  %gen10 = add i32 %_9, 0
  %_11 = shl i32 %177, 0
  %_12 = sub i32 %177, 0
  %gen13 = mul i32 %_12, 0
  %_14 = sub i32 0, %177
  %gen15 = add i32 %_14, 0
  %178 = and i32 %177, 0, !dbg !1155
  %179 = icmp ne i32 %178, 0, !dbg !1155
  %180 = zext i1 %179 to i8, !dbg !1155
  store i8 %180, i8* @ok, align 1, !dbg !1155
  br label %originalBB6

originalBB19alteredBB:                            ; preds = %originalBB19, %69
  br label %originalBB19

originalBB23alteredBB:                            ; preds = %originalBB23, %86
  %181 = load %struct.passwd*, %struct.passwd** %11, align 8, !dbg !1160
  %182 = icmp ne %struct.passwd* %181, null, !dbg !1160
  br label %originalBB23

originalBB27alteredBB:                            ; preds = %originalBB27, %105
  %183 = load %struct.passwd*, %struct.passwd** %11, align 8, !dbg !1161
  %184 = getelementptr inbounds %struct.passwd, %struct.passwd* %183, i32 0, i32 0, !dbg !1162
  %185 = load i8*, i8** %184, align 8, !dbg !1162
  br label %originalBB27

originalBB31alteredBB:                            ; preds = %originalBB31, %125
  %186 = call i8* @uidtostr_ptr(i32* %10), !dbg !1163
  br label %originalBB31

originalBB35alteredBB:                            ; preds = %originalBB35, %143
  store i8* %144, i8** %12, align 8, !dbg !1159
  %187 = load i8*, i8** %12, align 8, !dbg !1164
  %188 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1164
  %189 = call i32 @fputs_unlocked(i8* %187, %struct._IO_FILE* %188), !dbg !1164
  br label %originalBB35
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @print_full_info(i8*) #4 !dbg !1225 {
  %2 = alloca i8*, align 8
  %3 = alloca %struct.passwd*, align 8
  %4 = alloca %struct.group*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !1226, metadata !DIExpression()), !dbg !1227
  call void @llvm.dbg.declare(metadata %struct.passwd** %3, metadata !1228, metadata !DIExpression()), !dbg !1229
  call void @llvm.dbg.declare(metadata %struct.group** %4, metadata !1230, metadata !DIExpression()), !dbg !1239
  %9 = call i8* @gettext(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.52, i64 0, i64 0)) #10, !dbg !1240
  %10 = call i8* @uidtostr_ptr(i32* @ruid), !dbg !1241
  %11 = call i32 (i8*, ...) @printf(i8* %9, i8* %10), !dbg !1242
  %12 = load i32, i32* @ruid, align 4, !dbg !1243
  %13 = call %struct.passwd* @getpwuid(i32 %12), !dbg !1244
  store %struct.passwd* %13, %struct.passwd** %3, align 8, !dbg !1245
  %14 = load %struct.passwd*, %struct.passwd** %3, align 8, !dbg !1246
  %15 = icmp ne %struct.passwd* %14, null, !dbg !1246
  br i1 %15, label %16, label %37, !dbg !1248

16:                                               ; preds = %1
  %17 = load i32, i32* @x.13
  %18 = load i32, i32* @y.14
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %16, %originalBBalteredBB
  %25 = load %struct.passwd*, %struct.passwd** %3, align 8, !dbg !1249
  %26 = getelementptr inbounds %struct.passwd, %struct.passwd* %25, i32 0, i32 0, !dbg !1250
  %27 = load i8*, i8** %26, align 8, !dbg !1250
  %28 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.53, i64 0, i64 0), i8* %27), !dbg !1251
  %29 = load i32, i32* @x.13
  %30 = load i32, i32* @y.14
  %31 = sub i32 %29, 1
  %32 = mul i32 %29, %31
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %34, %35
  br i1 %36, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %37, !dbg !1251

37:                                               ; preds = %originalBBpart2, %1
  %38 = load i32, i32* @x.13
  %39 = load i32, i32* @y.14
  %40 = sub i32 %38, 1
  %41 = mul i32 %38, %40
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %43, %44
  br i1 %45, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %37, %originalBB1alteredBB
  %46 = call i8* @gettext(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.54, i64 0, i64 0)) #10, !dbg !1252
  %47 = call i8* @gidtostr_ptr(i32* @rgid), !dbg !1253
  %48 = call i32 (i8*, ...) @printf(i8* %46, i8* %47), !dbg !1254
  %49 = load i32, i32* @rgid, align 4, !dbg !1255
  %50 = call %struct.group* @getgrgid(i32 %49), !dbg !1256
  store %struct.group* %50, %struct.group** %4, align 8, !dbg !1257
  %51 = load %struct.group*, %struct.group** %4, align 8, !dbg !1258
  %52 = icmp ne %struct.group* %51, null, !dbg !1258
  %53 = load i32, i32* @x.13
  %54 = load i32, i32* @y.14
  %55 = sub i32 %53, 1
  %56 = mul i32 %53, %55
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %54, 10
  %60 = or i1 %58, %59
  br i1 %60, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %52, label %61, label %82, !dbg !1260

61:                                               ; preds = %originalBBpart24
  %62 = load i32, i32* @x.13
  %63 = load i32, i32* @y.14
  %64 = sub i32 %62, 1
  %65 = mul i32 %62, %64
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %63, 10
  %69 = or i1 %67, %68
  br i1 %69, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %61, %originalBB6alteredBB
  %70 = load %struct.group*, %struct.group** %4, align 8, !dbg !1261
  %71 = getelementptr inbounds %struct.group, %struct.group* %70, i32 0, i32 0, !dbg !1262
  %72 = load i8*, i8** %71, align 8, !dbg !1262
  %73 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.53, i64 0, i64 0), i8* %72), !dbg !1263
  %74 = load i32, i32* @x.13
  %75 = load i32, i32* @y.14
  %76 = sub i32 %74, 1
  %77 = mul i32 %74, %76
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %75, 10
  %81 = or i1 %79, %80
  br i1 %81, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %82, !dbg !1263

82:                                               ; preds = %originalBBpart28, %originalBBpart24
  %83 = load i32, i32* @x.13
  %84 = load i32, i32* @y.14
  %85 = sub i32 %83, 1
  %86 = mul i32 %83, %85
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %84, 10
  %90 = or i1 %88, %89
  br i1 %90, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %82, %originalBB10alteredBB
  %91 = load i32, i32* @euid, align 4, !dbg !1264
  %92 = load i32, i32* @ruid, align 4, !dbg !1266
  %93 = icmp ne i32 %91, %92, !dbg !1267
  %94 = load i32, i32* @x.13
  %95 = load i32, i32* @y.14
  %96 = sub i32 %94, 1
  %97 = mul i32 %94, %96
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %95, 10
  %101 = or i1 %99, %100
  br i1 %101, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %93, label %102, label %164, !dbg !1268

102:                                              ; preds = %originalBBpart212
  %103 = load i32, i32* @x.13
  %104 = load i32, i32* @y.14
  %105 = sub i32 %103, 1
  %106 = mul i32 %103, %105
  %107 = urem i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %104, 10
  %110 = or i1 %108, %109
  br i1 %110, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %102, %originalBB14alteredBB
  %111 = call i8* @gettext(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.55, i64 0, i64 0)) #10, !dbg !1269
  %112 = call i8* @uidtostr_ptr(i32* @euid), !dbg !1271
  %113 = call i32 (i8*, ...) @printf(i8* %111, i8* %112), !dbg !1272
  %114 = load i32, i32* @euid, align 4, !dbg !1273
  %115 = call %struct.passwd* @getpwuid(i32 %114), !dbg !1274
  store %struct.passwd* %115, %struct.passwd** %3, align 8, !dbg !1275
  %116 = load %struct.passwd*, %struct.passwd** %3, align 8, !dbg !1276
  %117 = icmp ne %struct.passwd* %116, null, !dbg !1276
  %118 = load i32, i32* @x.13
  %119 = load i32, i32* @y.14
  %120 = sub i32 %118, 1
  %121 = mul i32 %118, %120
  %122 = urem i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = icmp slt i32 %119, 10
  %125 = or i1 %123, %124
  br i1 %125, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %117, label %126, label %147, !dbg !1278

126:                                              ; preds = %originalBBpart216
  %127 = load i32, i32* @x.13
  %128 = load i32, i32* @y.14
  %129 = sub i32 %127, 1
  %130 = mul i32 %127, %129
  %131 = urem i32 %130, 2
  %132 = icmp eq i32 %131, 0
  %133 = icmp slt i32 %128, 10
  %134 = or i1 %132, %133
  br i1 %134, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %126, %originalBB18alteredBB
  %135 = load %struct.passwd*, %struct.passwd** %3, align 8, !dbg !1279
  %136 = getelementptr inbounds %struct.passwd, %struct.passwd* %135, i32 0, i32 0, !dbg !1280
  %137 = load i8*, i8** %136, align 8, !dbg !1280
  %138 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.53, i64 0, i64 0), i8* %137), !dbg !1281
  %139 = load i32, i32* @x.13
  %140 = load i32, i32* @y.14
  %141 = sub i32 %139, 1
  %142 = mul i32 %139, %141
  %143 = urem i32 %142, 2
  %144 = icmp eq i32 %143, 0
  %145 = icmp slt i32 %140, 10
  %146 = or i1 %144, %145
  br i1 %146, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %147, !dbg !1281

147:                                              ; preds = %originalBBpart220, %originalBBpart216
  %148 = load i32, i32* @x.13
  %149 = load i32, i32* @y.14
  %150 = sub i32 %148, 1
  %151 = mul i32 %148, %150
  %152 = urem i32 %151, 2
  %153 = icmp eq i32 %152, 0
  %154 = icmp slt i32 %149, 10
  %155 = or i1 %153, %154
  br i1 %155, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %147, %originalBB22alteredBB
  %156 = load i32, i32* @x.13
  %157 = load i32, i32* @y.14
  %158 = sub i32 %156, 1
  %159 = mul i32 %156, %158
  %160 = urem i32 %159, 2
  %161 = icmp eq i32 %160, 0
  %162 = icmp slt i32 %157, 10
  %163 = or i1 %161, %162
  br i1 %163, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br label %164, !dbg !1282

164:                                              ; preds = %originalBBpart224, %originalBBpart212
  %165 = load i32, i32* @x.13
  %166 = load i32, i32* @y.14
  %167 = sub i32 %165, 1
  %168 = mul i32 %165, %167
  %169 = urem i32 %168, 2
  %170 = icmp eq i32 %169, 0
  %171 = icmp slt i32 %166, 10
  %172 = or i1 %170, %171
  br i1 %172, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %164, %originalBB26alteredBB
  %173 = load i32, i32* @egid, align 4, !dbg !1283
  %174 = load i32, i32* @rgid, align 4, !dbg !1285
  %175 = icmp ne i32 %173, %174, !dbg !1286
  %176 = load i32, i32* @x.13
  %177 = load i32, i32* @y.14
  %178 = sub i32 %176, 1
  %179 = mul i32 %176, %178
  %180 = urem i32 %179, 2
  %181 = icmp eq i32 %180, 0
  %182 = icmp slt i32 %177, 10
  %183 = or i1 %181, %182
  br i1 %183, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br i1 %175, label %184, label %230, !dbg !1287

184:                                              ; preds = %originalBBpart228
  %185 = call i8* @gettext(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.56, i64 0, i64 0)) #10, !dbg !1288
  %186 = call i8* @gidtostr_ptr(i32* @egid), !dbg !1290
  %187 = call i32 (i8*, ...) @printf(i8* %185, i8* %186), !dbg !1291
  %188 = load i32, i32* @egid, align 4, !dbg !1292
  %189 = call %struct.group* @getgrgid(i32 %188), !dbg !1293
  store %struct.group* %189, %struct.group** %4, align 8, !dbg !1294
  %190 = load %struct.group*, %struct.group** %4, align 8, !dbg !1295
  %191 = icmp ne %struct.group* %190, null, !dbg !1295
  br i1 %191, label %192, label %213, !dbg !1297

192:                                              ; preds = %184
  %193 = load i32, i32* @x.13
  %194 = load i32, i32* @y.14
  %195 = sub i32 %193, 1
  %196 = mul i32 %193, %195
  %197 = urem i32 %196, 2
  %198 = icmp eq i32 %197, 0
  %199 = icmp slt i32 %194, 10
  %200 = or i1 %198, %199
  br i1 %200, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %192, %originalBB30alteredBB
  %201 = load %struct.group*, %struct.group** %4, align 8, !dbg !1298
  %202 = getelementptr inbounds %struct.group, %struct.group* %201, i32 0, i32 0, !dbg !1299
  %203 = load i8*, i8** %202, align 8, !dbg !1299
  %204 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.53, i64 0, i64 0), i8* %203), !dbg !1300
  %205 = load i32, i32* @x.13
  %206 = load i32, i32* @y.14
  %207 = sub i32 %205, 1
  %208 = mul i32 %205, %207
  %209 = urem i32 %208, 2
  %210 = icmp eq i32 %209, 0
  %211 = icmp slt i32 %206, 10
  %212 = or i1 %210, %211
  br i1 %212, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br label %213, !dbg !1300

213:                                              ; preds = %originalBBpart232, %184
  %214 = load i32, i32* @x.13
  %215 = load i32, i32* @y.14
  %216 = sub i32 %214, 1
  %217 = mul i32 %214, %216
  %218 = urem i32 %217, 2
  %219 = icmp eq i32 %218, 0
  %220 = icmp slt i32 %215, 10
  %221 = or i1 %219, %220
  br i1 %221, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %213, %originalBB34alteredBB
  %222 = load i32, i32* @x.13
  %223 = load i32, i32* @y.14
  %224 = sub i32 %222, 1
  %225 = mul i32 %222, %224
  %226 = urem i32 %225, 2
  %227 = icmp eq i32 %226, 0
  %228 = icmp slt i32 %223, 10
  %229 = or i1 %227, %228
  br i1 %229, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  br label %230, !dbg !1301

230:                                              ; preds = %originalBBpart236, %originalBBpart228
  call void @llvm.dbg.declare(metadata i32** %5, metadata !1302, metadata !DIExpression()), !dbg !1304
  call void @llvm.dbg.declare(metadata i32* %6, metadata !1305, metadata !DIExpression()), !dbg !1306
  %231 = load i32, i32* @x.13
  %232 = load i32, i32* @y.14
  %233 = sub i32 %231, 1
  %234 = mul i32 %231, %233
  %235 = urem i32 %234, 2
  %236 = icmp eq i32 %235, 0
  %237 = icmp slt i32 %232, 10
  %238 = or i1 %236, %237
  br i1 %238, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %230, %originalBB38alteredBB
  %239 = load i8*, i8** %2, align 8, !dbg !1307
  %240 = icmp ne i8* %239, null, !dbg !1307
  %241 = load i32, i32* @x.13
  %242 = load i32, i32* @y.14
  %243 = sub i32 %241, 1
  %244 = mul i32 %241, %243
  %245 = urem i32 %244, 2
  %246 = icmp eq i32 %245, 0
  %247 = icmp slt i32 %242, 10
  %248 = or i1 %246, %247
  br i1 %248, label %originalBBpart240, label %originalBB38alteredBB

originalBBpart240:                                ; preds = %originalBB38
  br i1 %240, label %249, label %307, !dbg !1309

249:                                              ; preds = %originalBBpart240
  %250 = load i32, i32* @x.13
  %251 = load i32, i32* @y.14
  %252 = sub i32 %250, 1
  %253 = mul i32 %250, %252
  %254 = urem i32 %253, 2
  %255 = icmp eq i32 %254, 0
  %256 = icmp slt i32 %251, 10
  %257 = or i1 %255, %256
  br i1 %257, label %originalBB42, label %originalBB42alteredBB

originalBB42:                                     ; preds = %249, %originalBB42alteredBB
  %258 = load %struct.passwd*, %struct.passwd** %3, align 8, !dbg !1310
  %259 = icmp ne %struct.passwd* %258, null, !dbg !1310
  %260 = load i32, i32* @x.13
  %261 = load i32, i32* @y.14
  %262 = sub i32 %260, 1
  %263 = mul i32 %260, %262
  %264 = urem i32 %263, 2
  %265 = icmp eq i32 %264, 0
  %266 = icmp slt i32 %261, 10
  %267 = or i1 %265, %266
  br i1 %267, label %originalBBpart244, label %originalBB42alteredBB

originalBBpart244:                                ; preds = %originalBB42
  br i1 %259, label %268, label %288, !dbg !1310

268:                                              ; preds = %originalBBpart244
  %269 = load i32, i32* @x.13
  %270 = load i32, i32* @y.14
  %271 = sub i32 %269, 1
  %272 = mul i32 %269, %271
  %273 = urem i32 %272, 2
  %274 = icmp eq i32 %273, 0
  %275 = icmp slt i32 %270, 10
  %276 = or i1 %274, %275
  br i1 %276, label %originalBB46, label %originalBB46alteredBB

originalBB46:                                     ; preds = %268, %originalBB46alteredBB
  %277 = load %struct.passwd*, %struct.passwd** %3, align 8, !dbg !1311
  %278 = getelementptr inbounds %struct.passwd, %struct.passwd* %277, i32 0, i32 3, !dbg !1312
  %279 = load i32, i32* %278, align 4, !dbg !1312
  %280 = load i32, i32* @x.13
  %281 = load i32, i32* @y.14
  %282 = sub i32 %280, 1
  %283 = mul i32 %280, %282
  %284 = urem i32 %283, 2
  %285 = icmp eq i32 %284, 0
  %286 = icmp slt i32 %281, 10
  %287 = or i1 %285, %286
  br i1 %287, label %originalBBpart248, label %originalBB46alteredBB

originalBBpart248:                                ; preds = %originalBB46
  br label %305, !dbg !1310

288:                                              ; preds = %originalBBpart244
  %289 = load i32, i32* @x.13
  %290 = load i32, i32* @y.14
  %291 = sub i32 %289, 1
  %292 = mul i32 %289, %291
  %293 = urem i32 %292, 2
  %294 = icmp eq i32 %293, 0
  %295 = icmp slt i32 %290, 10
  %296 = or i1 %294, %295
  br i1 %296, label %originalBB50, label %originalBB50alteredBB

originalBB50:                                     ; preds = %288, %originalBB50alteredBB
  %297 = load i32, i32* @x.13
  %298 = load i32, i32* @y.14
  %299 = sub i32 %297, 1
  %300 = mul i32 %297, %299
  %301 = urem i32 %300, 2
  %302 = icmp eq i32 %301, 0
  %303 = icmp slt i32 %298, 10
  %304 = or i1 %302, %303
  br i1 %304, label %originalBBpart252, label %originalBB50alteredBB

originalBBpart252:                                ; preds = %originalBB50
  br label %305, !dbg !1310

305:                                              ; preds = %originalBBpart252, %originalBBpart248
  %306 = phi i32 [ %279, %originalBBpart248 ], [ -1, %originalBBpart252 ], !dbg !1310
  store i32 %306, i32* %6, align 4, !dbg !1313
  br label %325, !dbg !1314

307:                                              ; preds = %originalBBpart240
  %308 = load i32, i32* @x.13
  %309 = load i32, i32* @y.14
  %310 = sub i32 %308, 1
  %311 = mul i32 %308, %310
  %312 = urem i32 %311, 2
  %313 = icmp eq i32 %312, 0
  %314 = icmp slt i32 %309, 10
  %315 = or i1 %313, %314
  br i1 %315, label %originalBB54, label %originalBB54alteredBB

originalBB54:                                     ; preds = %307, %originalBB54alteredBB
  %316 = load i32, i32* @egid, align 4, !dbg !1315
  store i32 %316, i32* %6, align 4, !dbg !1316
  %317 = load i32, i32* @x.13
  %318 = load i32, i32* @y.14
  %319 = sub i32 %317, 1
  %320 = mul i32 %317, %319
  %321 = urem i32 %320, 2
  %322 = icmp eq i32 %321, 0
  %323 = icmp slt i32 %318, 10
  %324 = or i1 %322, %323
  br i1 %324, label %originalBBpart256, label %originalBB54alteredBB

originalBBpart256:                                ; preds = %originalBB54
  br label %325

325:                                              ; preds = %originalBBpart256, %305
  call void @llvm.dbg.declare(metadata i32* %7, metadata !1317, metadata !DIExpression()), !dbg !1318
  %326 = load i32, i32* @x.13
  %327 = load i32, i32* @y.14
  %328 = sub i32 %326, 1
  %329 = mul i32 %326, %328
  %330 = urem i32 %329, 2
  %331 = icmp eq i32 %330, 0
  %332 = icmp slt i32 %327, 10
  %333 = or i1 %331, %332
  br i1 %333, label %originalBB58, label %originalBB58alteredBB

originalBB58:                                     ; preds = %325, %originalBB58alteredBB
  %334 = load i8*, i8** %2, align 8, !dbg !1319
  %335 = load i32, i32* %6, align 4, !dbg !1320
  %336 = call i32 @xgetgroups(i8* %334, i32 %335, i32** %5), !dbg !1321
  store i32 %336, i32* %7, align 4, !dbg !1318
  %337 = load i32, i32* %7, align 4, !dbg !1322
  %338 = icmp slt i32 %337, 0, !dbg !1324
  %339 = load i32, i32* @x.13
  %340 = load i32, i32* @y.14
  %341 = sub i32 %339, 1
  %342 = mul i32 %339, %341
  %343 = urem i32 %342, 2
  %344 = icmp eq i32 %343, 0
  %345 = icmp slt i32 %340, 10
  %346 = or i1 %344, %345
  br i1 %346, label %originalBBpart260, label %originalBB58alteredBB

originalBBpart260:                                ; preds = %originalBB58
  br i1 %338, label %347, label %431, !dbg !1325

347:                                              ; preds = %originalBBpart260
  %348 = load i32, i32* @x.13
  %349 = load i32, i32* @y.14
  %350 = sub i32 %348, 1
  %351 = mul i32 %348, %350
  %352 = urem i32 %351, 2
  %353 = icmp eq i32 %352, 0
  %354 = icmp slt i32 %349, 10
  %355 = or i1 %353, %354
  br i1 %355, label %originalBB62, label %originalBB62alteredBB

originalBB62:                                     ; preds = %347, %originalBB62alteredBB
  %356 = load i8*, i8** %2, align 8, !dbg !1326
  %357 = icmp ne i8* %356, null, !dbg !1326
  %358 = load i32, i32* @x.13
  %359 = load i32, i32* @y.14
  %360 = sub i32 %358, 1
  %361 = mul i32 %358, %360
  %362 = urem i32 %361, 2
  %363 = icmp eq i32 %362, 0
  %364 = icmp slt i32 %359, 10
  %365 = or i1 %363, %364
  br i1 %365, label %originalBBpart264, label %originalBB62alteredBB

originalBBpart264:                                ; preds = %originalBB62
  br i1 %357, label %366, label %388, !dbg !1329

366:                                              ; preds = %originalBBpart264
  %367 = load i32, i32* @x.13
  %368 = load i32, i32* @y.14
  %369 = sub i32 %367, 1
  %370 = mul i32 %367, %369
  %371 = urem i32 %370, 2
  %372 = icmp eq i32 %371, 0
  %373 = icmp slt i32 %368, 10
  %374 = or i1 %372, %373
  br i1 %374, label %originalBB66, label %originalBB66alteredBB

originalBB66:                                     ; preds = %366, %originalBB66alteredBB
  %375 = call i32* @__errno_location() #15, !dbg !1330
  %376 = load i32, i32* %375, align 4, !dbg !1330
  %377 = call i8* @gettext(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.57, i64 0, i64 0)) #10, !dbg !1331
  %378 = load i8*, i8** %2, align 8, !dbg !1332
  %379 = call i8* @quote(i8* %378), !dbg !1333
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %376, i8* %377, i8* %379), !dbg !1334
  %380 = load i32, i32* @x.13
  %381 = load i32, i32* @y.14
  %382 = sub i32 %380, 1
  %383 = mul i32 %380, %382
  %384 = urem i32 %383, 2
  %385 = icmp eq i32 %384, 0
  %386 = icmp slt i32 %381, 10
  %387 = or i1 %385, %386
  br i1 %387, label %originalBBpart268, label %originalBB66alteredBB

originalBBpart268:                                ; preds = %originalBB66
  br label %408, !dbg !1334

388:                                              ; preds = %originalBBpart264
  %389 = load i32, i32* @x.13
  %390 = load i32, i32* @y.14
  %391 = sub i32 %389, 1
  %392 = mul i32 %389, %391
  %393 = urem i32 %392, 2
  %394 = icmp eq i32 %393, 0
  %395 = icmp slt i32 %390, 10
  %396 = or i1 %394, %395
  br i1 %396, label %originalBB70, label %originalBB70alteredBB

originalBB70:                                     ; preds = %388, %originalBB70alteredBB
  %397 = call i32* @__errno_location() #15, !dbg !1335
  %398 = load i32, i32* %397, align 4, !dbg !1335
  %399 = call i8* @gettext(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.58, i64 0, i64 0)) #10, !dbg !1336
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %398, i8* %399), !dbg !1337
  %400 = load i32, i32* @x.13
  %401 = load i32, i32* @y.14
  %402 = sub i32 %400, 1
  %403 = mul i32 %400, %402
  %404 = urem i32 %403, 2
  %405 = icmp eq i32 %404, 0
  %406 = icmp slt i32 %401, 10
  %407 = or i1 %405, %406
  br i1 %407, label %originalBBpart272, label %originalBB70alteredBB

originalBBpart272:                                ; preds = %originalBB70
  br label %408

408:                                              ; preds = %originalBBpart272, %originalBBpart268
  %409 = load i32, i32* @x.13
  %410 = load i32, i32* @y.14
  %411 = sub i32 %409, 1
  %412 = mul i32 %409, %411
  %413 = urem i32 %412, 2
  %414 = icmp eq i32 %413, 0
  %415 = icmp slt i32 %410, 10
  %416 = or i1 %414, %415
  br i1 %416, label %originalBB74, label %originalBB74alteredBB

originalBB74:                                     ; preds = %408, %originalBB74alteredBB
  %417 = load i8, i8* @ok, align 1, !dbg !1338
  %418 = trunc i8 %417 to i1, !dbg !1338
  %419 = zext i1 %418 to i32, !dbg !1338
  %420 = and i32 %419, 0, !dbg !1338
  %421 = icmp ne i32 %420, 0, !dbg !1338
  %422 = zext i1 %421 to i8, !dbg !1338
  store i8 %422, i8* @ok, align 1, !dbg !1338
  %423 = load i32, i32* @x.13
  %424 = load i32, i32* @y.14
  %425 = sub i32 %423, 1
  %426 = mul i32 %423, %425
  %427 = urem i32 %426, 2
  %428 = icmp eq i32 %427, 0
  %429 = icmp slt i32 %424, 10
  %430 = or i1 %428, %429
  br i1 %430, label %originalBBpart277, label %originalBB74alteredBB

originalBBpart277:                                ; preds = %originalBB74
  br label %658, !dbg !1339

431:                                              ; preds = %originalBBpart260
  %432 = load i32, i32* %7, align 4, !dbg !1340
  %433 = icmp sgt i32 %432, 0, !dbg !1342
  br i1 %433, label %434, label %454, !dbg !1343

434:                                              ; preds = %431
  %435 = load i32, i32* @x.13
  %436 = load i32, i32* @y.14
  %437 = sub i32 %435, 1
  %438 = mul i32 %435, %437
  %439 = urem i32 %438, 2
  %440 = icmp eq i32 %439, 0
  %441 = icmp slt i32 %436, 10
  %442 = or i1 %440, %441
  br i1 %442, label %originalBB79, label %originalBB79alteredBB

originalBB79:                                     ; preds = %434, %originalBB79alteredBB
  %443 = call i8* @gettext(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.59, i64 0, i64 0)) #10, !dbg !1344
  %444 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1344
  %445 = call i32 @fputs_unlocked(i8* %443, %struct._IO_FILE* %444), !dbg !1344
  %446 = load i32, i32* @x.13
  %447 = load i32, i32* @y.14
  %448 = sub i32 %446, 1
  %449 = mul i32 %446, %448
  %450 = urem i32 %449, 2
  %451 = icmp eq i32 %450, 0
  %452 = icmp slt i32 %447, 10
  %453 = or i1 %451, %452
  br i1 %453, label %originalBBpart281, label %originalBB79alteredBB

originalBBpart281:                                ; preds = %originalBB79
  br label %454, !dbg !1344

454:                                              ; preds = %originalBBpart281, %431
  call void @llvm.dbg.declare(metadata i32* %8, metadata !1345, metadata !DIExpression()), !dbg !1347
  %455 = load i32, i32* @x.13
  %456 = load i32, i32* @y.14
  %457 = sub i32 %455, 1
  %458 = mul i32 %455, %457
  %459 = urem i32 %458, 2
  %460 = icmp eq i32 %459, 0
  %461 = icmp slt i32 %456, 10
  %462 = or i1 %460, %461
  br i1 %462, label %originalBB83, label %originalBB83alteredBB

originalBB83:                                     ; preds = %454, %originalBB83alteredBB
  store i32 0, i32* %8, align 4, !dbg !1347
  %463 = load i32, i32* @x.13
  %464 = load i32, i32* @y.14
  %465 = sub i32 %463, 1
  %466 = mul i32 %463, %465
  %467 = urem i32 %466, 2
  %468 = icmp eq i32 %467, 0
  %469 = icmp slt i32 %464, 10
  %470 = or i1 %468, %469
  br i1 %470, label %originalBBpart285, label %originalBB83alteredBB

originalBBpart285:                                ; preds = %originalBB83
  br label %471, !dbg !1348

471:                                              ; preds = %originalBBpart2123, %originalBBpart285
  %472 = load i32, i32* @x.13
  %473 = load i32, i32* @y.14
  %474 = sub i32 %472, 1
  %475 = mul i32 %472, %474
  %476 = urem i32 %475, 2
  %477 = icmp eq i32 %476, 0
  %478 = icmp slt i32 %473, 10
  %479 = or i1 %477, %478
  br i1 %479, label %originalBB87, label %originalBB87alteredBB

originalBB87:                                     ; preds = %471, %originalBB87alteredBB
  %480 = load i32, i32* %8, align 4, !dbg !1349
  %481 = load i32, i32* %7, align 4, !dbg !1351
  %482 = icmp slt i32 %480, %481, !dbg !1352
  %483 = load i32, i32* @x.13
  %484 = load i32, i32* @y.14
  %485 = sub i32 %483, 1
  %486 = mul i32 %483, %485
  %487 = urem i32 %486, 2
  %488 = icmp eq i32 %487, 0
  %489 = icmp slt i32 %484, 10
  %490 = or i1 %488, %489
  br i1 %490, label %originalBBpart289, label %originalBB87alteredBB

originalBBpart289:                                ; preds = %originalBB87
  br i1 %482, label %491, label %617, !dbg !1353

491:                                              ; preds = %originalBBpart289
  %492 = load i32, i32* @x.13
  %493 = load i32, i32* @y.14
  %494 = sub i32 %492, 1
  %495 = mul i32 %492, %494
  %496 = urem i32 %495, 2
  %497 = icmp eq i32 %496, 0
  %498 = icmp slt i32 %493, 10
  %499 = or i1 %497, %498
  br i1 %499, label %originalBB91, label %originalBB91alteredBB

originalBB91:                                     ; preds = %491, %originalBB91alteredBB
  %500 = load i32, i32* %8, align 4, !dbg !1354
  %501 = icmp sgt i32 %500, 0, !dbg !1357
  %502 = load i32, i32* @x.13
  %503 = load i32, i32* @y.14
  %504 = sub i32 %502, 1
  %505 = mul i32 %502, %504
  %506 = urem i32 %505, 2
  %507 = icmp eq i32 %506, 0
  %508 = icmp slt i32 %503, 10
  %509 = or i1 %507, %508
  br i1 %509, label %originalBBpart293, label %originalBB91alteredBB

originalBBpart293:                                ; preds = %originalBB91
  br i1 %501, label %510, label %528, !dbg !1358

510:                                              ; preds = %originalBBpart293
  %511 = load i32, i32* @x.13
  %512 = load i32, i32* @y.14
  %513 = sub i32 %511, 1
  %514 = mul i32 %511, %513
  %515 = urem i32 %514, 2
  %516 = icmp eq i32 %515, 0
  %517 = icmp slt i32 %512, 10
  %518 = or i1 %516, %517
  br i1 %518, label %originalBB95, label %originalBB95alteredBB

originalBB95:                                     ; preds = %510, %originalBB95alteredBB
  %519 = call i32 @putchar_unlocked(i32 44), !dbg !1359
  %520 = load i32, i32* @x.13
  %521 = load i32, i32* @y.14
  %522 = sub i32 %520, 1
  %523 = mul i32 %520, %522
  %524 = urem i32 %523, 2
  %525 = icmp eq i32 %524, 0
  %526 = icmp slt i32 %521, 10
  %527 = or i1 %525, %526
  br i1 %527, label %originalBBpart297, label %originalBB95alteredBB

originalBBpart297:                                ; preds = %originalBB95
  br label %528, !dbg !1359

528:                                              ; preds = %originalBBpart297, %originalBBpart293
  %529 = load i32, i32* @x.13
  %530 = load i32, i32* @y.14
  %531 = sub i32 %529, 1
  %532 = mul i32 %529, %531
  %533 = urem i32 %532, 2
  %534 = icmp eq i32 %533, 0
  %535 = icmp slt i32 %530, 10
  %536 = or i1 %534, %535
  br i1 %536, label %originalBB99, label %originalBB99alteredBB

originalBB99:                                     ; preds = %528, %originalBB99alteredBB
  %537 = load i32*, i32** %5, align 8, !dbg !1360
  %538 = load i32, i32* %8, align 4, !dbg !1360
  %539 = sext i32 %538 to i64, !dbg !1360
  %540 = getelementptr inbounds i32, i32* %537, i64 %539, !dbg !1360
  %541 = call i8* @gidtostr_ptr(i32* %540), !dbg !1360
  %542 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1360
  %543 = call i32 @fputs_unlocked(i8* %541, %struct._IO_FILE* %542), !dbg !1360
  %544 = load i32*, i32** %5, align 8, !dbg !1361
  %545 = load i32, i32* %8, align 4, !dbg !1362
  %546 = sext i32 %545 to i64, !dbg !1361
  %547 = getelementptr inbounds i32, i32* %544, i64 %546, !dbg !1361
  %548 = load i32, i32* %547, align 4, !dbg !1361
  %549 = call %struct.group* @getgrgid(i32 %548), !dbg !1363
  store %struct.group* %549, %struct.group** %4, align 8, !dbg !1364
  %550 = load %struct.group*, %struct.group** %4, align 8, !dbg !1365
  %551 = icmp ne %struct.group* %550, null, !dbg !1365
  %552 = load i32, i32* @x.13
  %553 = load i32, i32* @y.14
  %554 = sub i32 %552, 1
  %555 = mul i32 %552, %554
  %556 = urem i32 %555, 2
  %557 = icmp eq i32 %556, 0
  %558 = icmp slt i32 %553, 10
  %559 = or i1 %557, %558
  br i1 %559, label %originalBBpart2101, label %originalBB99alteredBB

originalBBpart2101:                               ; preds = %originalBB99
  br i1 %551, label %560, label %581, !dbg !1367

560:                                              ; preds = %originalBBpart2101
  %561 = load i32, i32* @x.13
  %562 = load i32, i32* @y.14
  %563 = sub i32 %561, 1
  %564 = mul i32 %561, %563
  %565 = urem i32 %564, 2
  %566 = icmp eq i32 %565, 0
  %567 = icmp slt i32 %562, 10
  %568 = or i1 %566, %567
  br i1 %568, label %originalBB103, label %originalBB103alteredBB

originalBB103:                                    ; preds = %560, %originalBB103alteredBB
  %569 = load %struct.group*, %struct.group** %4, align 8, !dbg !1368
  %570 = getelementptr inbounds %struct.group, %struct.group* %569, i32 0, i32 0, !dbg !1369
  %571 = load i8*, i8** %570, align 8, !dbg !1369
  %572 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.53, i64 0, i64 0), i8* %571), !dbg !1370
  %573 = load i32, i32* @x.13
  %574 = load i32, i32* @y.14
  %575 = sub i32 %573, 1
  %576 = mul i32 %573, %575
  %577 = urem i32 %576, 2
  %578 = icmp eq i32 %577, 0
  %579 = icmp slt i32 %574, 10
  %580 = or i1 %578, %579
  br i1 %580, label %originalBBpart2105, label %originalBB103alteredBB

originalBBpart2105:                               ; preds = %originalBB103
  br label %581, !dbg !1370

581:                                              ; preds = %originalBBpart2105, %originalBBpart2101
  %582 = load i32, i32* @x.13
  %583 = load i32, i32* @y.14
  %584 = sub i32 %582, 1
  %585 = mul i32 %582, %584
  %586 = urem i32 %585, 2
  %587 = icmp eq i32 %586, 0
  %588 = icmp slt i32 %583, 10
  %589 = or i1 %587, %588
  br i1 %589, label %originalBB107, label %originalBB107alteredBB

originalBB107:                                    ; preds = %581, %originalBB107alteredBB
  %590 = load i32, i32* @x.13
  %591 = load i32, i32* @y.14
  %592 = sub i32 %590, 1
  %593 = mul i32 %590, %592
  %594 = urem i32 %593, 2
  %595 = icmp eq i32 %594, 0
  %596 = icmp slt i32 %591, 10
  %597 = or i1 %595, %596
  br i1 %597, label %originalBBpart2109, label %originalBB107alteredBB

originalBBpart2109:                               ; preds = %originalBB107
  br label %598, !dbg !1371

598:                                              ; preds = %originalBBpart2109
  %599 = load i32, i32* @x.13
  %600 = load i32, i32* @y.14
  %601 = sub i32 %599, 1
  %602 = mul i32 %599, %601
  %603 = urem i32 %602, 2
  %604 = icmp eq i32 %603, 0
  %605 = icmp slt i32 %600, 10
  %606 = or i1 %604, %605
  br i1 %606, label %originalBB111, label %originalBB111alteredBB

originalBB111:                                    ; preds = %598, %originalBB111alteredBB
  %607 = load i32, i32* %8, align 4, !dbg !1372
  %608 = add nsw i32 %607, 1, !dbg !1372
  store i32 %608, i32* %8, align 4, !dbg !1372
  %609 = load i32, i32* @x.13
  %610 = load i32, i32* @y.14
  %611 = sub i32 %609, 1
  %612 = mul i32 %609, %611
  %613 = urem i32 %612, 2
  %614 = icmp eq i32 %613, 0
  %615 = icmp slt i32 %610, 10
  %616 = or i1 %614, %615
  br i1 %616, label %originalBBpart2123, label %originalBB111alteredBB

originalBBpart2123:                               ; preds = %originalBB111
  br label %471, !dbg !1373, !llvm.loop !1374

617:                                              ; preds = %originalBBpart289
  %618 = load i32, i32* @x.13
  %619 = load i32, i32* @y.14
  %620 = sub i32 %618, 1
  %621 = mul i32 %618, %620
  %622 = urem i32 %621, 2
  %623 = icmp eq i32 %622, 0
  %624 = icmp slt i32 %619, 10
  %625 = or i1 %623, %624
  br i1 %625, label %originalBB125, label %originalBB125alteredBB

originalBB125:                                    ; preds = %617, %originalBB125alteredBB
  %626 = load i32*, i32** %5, align 8, !dbg !1376
  %627 = bitcast i32* %626 to i8*, !dbg !1376
  call void @free(i8* %627) #10, !dbg !1377
  %628 = load i8*, i8** @context, align 8, !dbg !1378
  %629 = icmp ne i8* %628, null, !dbg !1378
  %630 = load i32, i32* @x.13
  %631 = load i32, i32* @y.14
  %632 = sub i32 %630, 1
  %633 = mul i32 %630, %632
  %634 = urem i32 %633, 2
  %635 = icmp eq i32 %634, 0
  %636 = icmp slt i32 %631, 10
  %637 = or i1 %635, %636
  br i1 %637, label %originalBBpart2127, label %originalBB125alteredBB

originalBBpart2127:                               ; preds = %originalBB125
  br i1 %629, label %638, label %658, !dbg !1380

638:                                              ; preds = %originalBBpart2127
  %639 = load i32, i32* @x.13
  %640 = load i32, i32* @y.14
  %641 = sub i32 %639, 1
  %642 = mul i32 %639, %641
  %643 = urem i32 %642, 2
  %644 = icmp eq i32 %643, 0
  %645 = icmp slt i32 %640, 10
  %646 = or i1 %644, %645
  br i1 %646, label %originalBB129, label %originalBB129alteredBB

originalBB129:                                    ; preds = %638, %originalBB129alteredBB
  %647 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.60, i64 0, i64 0)) #10, !dbg !1381
  %648 = load i8*, i8** @context, align 8, !dbg !1382
  %649 = call i32 (i8*, ...) @printf(i8* %647, i8* %648), !dbg !1383
  %650 = load i32, i32* @x.13
  %651 = load i32, i32* @y.14
  %652 = sub i32 %650, 1
  %653 = mul i32 %650, %652
  %654 = urem i32 %653, 2
  %655 = icmp eq i32 %654, 0
  %656 = icmp slt i32 %651, 10
  %657 = or i1 %655, %656
  br i1 %657, label %originalBBpart2131, label %originalBB129alteredBB

originalBBpart2131:                               ; preds = %originalBB129
  br label %658, !dbg !1383

658:                                              ; preds = %originalBBpart2131, %originalBBpart2127, %originalBBpart277
  %659 = load i32, i32* @x.13
  %660 = load i32, i32* @y.14
  %661 = sub i32 %659, 1
  %662 = mul i32 %659, %661
  %663 = urem i32 %662, 2
  %664 = icmp eq i32 %663, 0
  %665 = icmp slt i32 %660, 10
  %666 = or i1 %664, %665
  br i1 %666, label %originalBB133, label %originalBB133alteredBB

originalBB133:                                    ; preds = %658, %originalBB133alteredBB
  %667 = load i32, i32* @x.13
  %668 = load i32, i32* @y.14
  %669 = sub i32 %667, 1
  %670 = mul i32 %667, %669
  %671 = urem i32 %670, 2
  %672 = icmp eq i32 %671, 0
  %673 = icmp slt i32 %668, 10
  %674 = or i1 %672, %673
  br i1 %674, label %originalBBpart2135, label %originalBB133alteredBB

originalBBpart2135:                               ; preds = %originalBB133
  ret void, !dbg !1384

originalBBalteredBB:                              ; preds = %originalBB, %16
  %675 = load %struct.passwd*, %struct.passwd** %3, align 8, !dbg !1249
  %676 = getelementptr inbounds %struct.passwd, %struct.passwd* %675, i32 0, i32 0, !dbg !1250
  %677 = load i8*, i8** %676, align 8, !dbg !1250
  %678 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.53, i64 0, i64 0), i8* %677), !dbg !1251
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %37
  %679 = call i8* @gettext(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.54, i64 0, i64 0)) #10, !dbg !1252
  %680 = call i8* @gidtostr_ptr(i32* @rgid), !dbg !1253
  %681 = call i32 (i8*, ...) @printf(i8* %679, i8* %680), !dbg !1254
  %682 = load i32, i32* @rgid, align 4, !dbg !1255
  %683 = call %struct.group* @getgrgid(i32 %682), !dbg !1256
  store %struct.group* %683, %struct.group** %4, align 8, !dbg !1257
  %684 = load %struct.group*, %struct.group** %4, align 8, !dbg !1258
  %685 = icmp ne %struct.group* %684, null, !dbg !1258
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %61
  %686 = load %struct.group*, %struct.group** %4, align 8, !dbg !1261
  %687 = getelementptr inbounds %struct.group, %struct.group* %686, i32 0, i32 0, !dbg !1262
  %688 = load i8*, i8** %687, align 8, !dbg !1262
  %689 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.53, i64 0, i64 0), i8* %688), !dbg !1263
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %82
  %690 = load i32, i32* @euid, align 4, !dbg !1264
  %691 = load i32, i32* @ruid, align 4, !dbg !1266
  %692 = icmp ne i32 %690, %691, !dbg !1267
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %102
  %693 = call i8* @gettext(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.55, i64 0, i64 0)) #10, !dbg !1269
  %694 = call i8* @uidtostr_ptr(i32* @euid), !dbg !1271
  %695 = call i32 (i8*, ...) @printf(i8* %693, i8* %694), !dbg !1272
  %696 = load i32, i32* @euid, align 4, !dbg !1273
  %697 = call %struct.passwd* @getpwuid(i32 %696), !dbg !1274
  store %struct.passwd* %697, %struct.passwd** %3, align 8, !dbg !1275
  %698 = load %struct.passwd*, %struct.passwd** %3, align 8, !dbg !1276
  %699 = icmp ne %struct.passwd* %698, null, !dbg !1276
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %126
  %700 = load %struct.passwd*, %struct.passwd** %3, align 8, !dbg !1279
  %701 = getelementptr inbounds %struct.passwd, %struct.passwd* %700, i32 0, i32 0, !dbg !1280
  %702 = load i8*, i8** %701, align 8, !dbg !1280
  %703 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.53, i64 0, i64 0), i8* %702), !dbg !1281
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %147
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %164
  %704 = load i32, i32* @egid, align 4, !dbg !1283
  %705 = load i32, i32* @rgid, align 4, !dbg !1285
  %706 = icmp ne i32 %704, %705, !dbg !1286
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %192
  %707 = load %struct.group*, %struct.group** %4, align 8, !dbg !1298
  %708 = getelementptr inbounds %struct.group, %struct.group* %707, i32 0, i32 0, !dbg !1299
  %709 = load i8*, i8** %708, align 8, !dbg !1299
  %710 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.53, i64 0, i64 0), i8* %709), !dbg !1300
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %213
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %230
  %711 = load i8*, i8** %2, align 8, !dbg !1307
  %712 = icmp ne i8* %711, null, !dbg !1307
  br label %originalBB38

originalBB42alteredBB:                            ; preds = %originalBB42, %249
  %713 = load %struct.passwd*, %struct.passwd** %3, align 8, !dbg !1310
  %714 = icmp ne %struct.passwd* %713, null, !dbg !1310
  br label %originalBB42

originalBB46alteredBB:                            ; preds = %originalBB46, %268
  %715 = load %struct.passwd*, %struct.passwd** %3, align 8, !dbg !1311
  %716 = getelementptr inbounds %struct.passwd, %struct.passwd* %715, i32 0, i32 3, !dbg !1312
  %717 = load i32, i32* %716, align 4, !dbg !1312
  br label %originalBB46

originalBB50alteredBB:                            ; preds = %originalBB50, %288
  br label %originalBB50

originalBB54alteredBB:                            ; preds = %originalBB54, %307
  %718 = load i32, i32* @egid, align 4, !dbg !1315
  store i32 %718, i32* %6, align 4, !dbg !1316
  br label %originalBB54

originalBB58alteredBB:                            ; preds = %originalBB58, %325
  %719 = load i8*, i8** %2, align 8, !dbg !1319
  %720 = load i32, i32* %6, align 4, !dbg !1320
  %721 = call i32 @xgetgroups(i8* %719, i32 %720, i32** %5), !dbg !1321
  store i32 %721, i32* %7, align 4, !dbg !1318
  %722 = load i32, i32* %7, align 4, !dbg !1322
  %723 = icmp slt i32 %722, 0, !dbg !1324
  br label %originalBB58

originalBB62alteredBB:                            ; preds = %originalBB62, %347
  %724 = load i8*, i8** %2, align 8, !dbg !1326
  %725 = icmp ne i8* %724, null, !dbg !1326
  br label %originalBB62

originalBB66alteredBB:                            ; preds = %originalBB66, %366
  %726 = call i32* @__errno_location() #15, !dbg !1330
  %727 = load i32, i32* %726, align 4, !dbg !1330
  %728 = call i8* @gettext(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.57, i64 0, i64 0)) #10, !dbg !1331
  %729 = load i8*, i8** %2, align 8, !dbg !1332
  %730 = call i8* @quote(i8* %729), !dbg !1333
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %727, i8* %728, i8* %730), !dbg !1334
  br label %originalBB66

originalBB70alteredBB:                            ; preds = %originalBB70, %388
  %731 = call i32* @__errno_location() #15, !dbg !1335
  %732 = load i32, i32* %731, align 4, !dbg !1335
  %733 = call i8* @gettext(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.58, i64 0, i64 0)) #10, !dbg !1336
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %732, i8* %733), !dbg !1337
  br label %originalBB70

originalBB74alteredBB:                            ; preds = %originalBB74, %408
  %734 = load i8, i8* @ok, align 1, !dbg !1338
  %735 = trunc i8 %734 to i1, !dbg !1338
  %736 = zext i1 %735 to i32, !dbg !1338
  %_ = sub i32 %736, 0
  %gen = mul i32 %_, 0
  %_75 = shl i32 %736, 0
  %737 = and i32 %736, 0, !dbg !1338
  %738 = icmp ne i32 %737, 0, !dbg !1338
  %739 = zext i1 %738 to i8, !dbg !1338
  store i8 %739, i8* @ok, align 1, !dbg !1338
  br label %originalBB74

originalBB79alteredBB:                            ; preds = %originalBB79, %434
  %740 = call i8* @gettext(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.59, i64 0, i64 0)) #10, !dbg !1344
  %741 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1344
  %742 = call i32 @fputs_unlocked(i8* %740, %struct._IO_FILE* %741), !dbg !1344
  br label %originalBB79

originalBB83alteredBB:                            ; preds = %originalBB83, %454
  store i32 0, i32* %8, align 4, !dbg !1347
  br label %originalBB83

originalBB87alteredBB:                            ; preds = %originalBB87, %471
  %743 = load i32, i32* %8, align 4, !dbg !1349
  %744 = load i32, i32* %7, align 4, !dbg !1351
  %745 = icmp slt i32 %743, %744, !dbg !1352
  br label %originalBB87

originalBB91alteredBB:                            ; preds = %originalBB91, %491
  %746 = load i32, i32* %8, align 4, !dbg !1354
  %747 = icmp sgt i32 %746, 0, !dbg !1357
  br label %originalBB91

originalBB95alteredBB:                            ; preds = %originalBB95, %510
  %748 = call i32 @putchar_unlocked(i32 44), !dbg !1359
  br label %originalBB95

originalBB99alteredBB:                            ; preds = %originalBB99, %528
  %749 = load i32*, i32** %5, align 8, !dbg !1360
  %750 = load i32, i32* %8, align 4, !dbg !1360
  %751 = sext i32 %750 to i64, !dbg !1360
  %752 = getelementptr inbounds i32, i32* %749, i64 %751, !dbg !1360
  %753 = call i8* @gidtostr_ptr(i32* %752), !dbg !1360
  %754 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1360
  %755 = call i32 @fputs_unlocked(i8* %753, %struct._IO_FILE* %754), !dbg !1360
  %756 = load i32*, i32** %5, align 8, !dbg !1361
  %757 = load i32, i32* %8, align 4, !dbg !1362
  %758 = sext i32 %757 to i64, !dbg !1361
  %759 = getelementptr inbounds i32, i32* %756, i64 %758, !dbg !1361
  %760 = load i32, i32* %759, align 4, !dbg !1361
  %761 = call %struct.group* @getgrgid(i32 %760), !dbg !1363
  store %struct.group* %761, %struct.group** %4, align 8, !dbg !1364
  %762 = load %struct.group*, %struct.group** %4, align 8, !dbg !1365
  %763 = icmp ne %struct.group* %762, null, !dbg !1365
  br label %originalBB99

originalBB103alteredBB:                           ; preds = %originalBB103, %560
  %764 = load %struct.group*, %struct.group** %4, align 8, !dbg !1368
  %765 = getelementptr inbounds %struct.group, %struct.group* %764, i32 0, i32 0, !dbg !1369
  %766 = load i8*, i8** %765, align 8, !dbg !1369
  %767 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.53, i64 0, i64 0), i8* %766), !dbg !1370
  br label %originalBB103

originalBB107alteredBB:                           ; preds = %originalBB107, %581
  br label %originalBB107

originalBB111alteredBB:                           ; preds = %originalBB111, %598
  %768 = load i32, i32* %8, align 4, !dbg !1372
  %_112 = shl i32 %768, 1
  %_113 = sub i32 0, %768
  %gen114 = add i32 %_113, 1
  %_115 = sub i32 0, %768
  %gen116 = add i32 %_115, 1
  %_117 = shl i32 %768, 1
  %_118 = sub i32 %768, 1
  %gen119 = mul i32 %_118, 1
  %_120 = sub i32 %768, 1
  %gen121 = mul i32 %_120, 1
  %769 = add nsw i32 %768, 1, !dbg !1372
  store i32 %769, i32* %8, align 4, !dbg !1372
  br label %originalBB111

originalBB125alteredBB:                           ; preds = %originalBB125, %617
  %770 = load i32*, i32** %5, align 8, !dbg !1376
  %771 = bitcast i32* %770 to i8*, !dbg !1376
  call void @free(i8* %771) #10, !dbg !1377
  %772 = load i8*, i8** @context, align 8, !dbg !1378
  %773 = icmp ne i8* %772, null, !dbg !1378
  br label %originalBB125

originalBB129alteredBB:                           ; preds = %originalBB129, %638
  %774 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.60, i64 0, i64 0)) #10, !dbg !1381
  %775 = load i8*, i8** @context, align 8, !dbg !1382
  %776 = call i32 (i8*, ...) @printf(i8* %774, i8* %775), !dbg !1383
  br label %originalBB129

originalBB133alteredBB:                           ; preds = %originalBB133, %658
  br label %originalBB133
}

declare dso_local i32 @putchar_unlocked(i32) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @uidtostr_ptr(i32*) #4 !dbg !48 {
  %2 = load i32, i32* @x.15
  %3 = load i32, i32* @y.16
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i32*, align 8
  store i32* %0, i32** %10, align 8
  call void @llvm.dbg.declare(metadata i32** %10, metadata !1385, metadata !DIExpression()), !dbg !1386
  %11 = load i32*, i32** %10, align 8, !dbg !1387
  %12 = load i32, i32* %11, align 4, !dbg !1388
  %13 = zext i32 %12 to i64, !dbg !1388
  %14 = call i8* @umaxtostr(i64 %13, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @uidtostr_ptr.buf, i64 0, i64 0)), !dbg !1389
  %15 = load i32, i32* @x.15
  %16 = load i32, i32* @y.16
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i8* %14, !dbg !1390

originalBBalteredBB:                              ; preds = %originalBB, %1
  %23 = alloca i32*, align 8
  store i32* %0, i32** %23, align 8
  call void @llvm.dbg.declare(metadata i32** %23, metadata !1391, metadata !DIExpression()), !dbg !1386
  %24 = load i32*, i32** %23, align 8, !dbg !1387
  %25 = load i32, i32* %24, align 4, !dbg !1388
  %26 = zext i32 %25 to i64, !dbg !1388
  %27 = call i8* @umaxtostr(i64 %26, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @uidtostr_ptr.buf, i64 0, i64 0)), !dbg !1389
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @gidtostr_ptr(i32*) #4 !dbg !58 {
  %2 = alloca i32*, align 8
  store i32* %0, i32** %2, align 8
  call void @llvm.dbg.declare(metadata i32** %2, metadata !1438, metadata !DIExpression()), !dbg !1439
  %3 = load i32*, i32** %2, align 8, !dbg !1440
  %4 = load i32, i32* %3, align 4, !dbg !1441
  %5 = zext i32 %4 to i64, !dbg !1441
  %6 = call i8* @umaxtostr(i64 %5, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @gidtostr_ptr.buf, i64 0, i64 0)), !dbg !1442
  ret i8* %6, !dbg !1443
}

declare dso_local %struct.group* @getgrgid(i32) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @print_group_list(i8*, i32, i32, i32, i1 zeroext, i8 signext) #4 !dbg !1444 {
  %7 = load i32, i32* @x.19
  %8 = load i32, i32* @y.20
  %9 = sub i32 %7, 1
  %10 = mul i32 %7, %9
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %8, 10
  %14 = or i1 %12, %13
  br i1 %14, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %6, %originalBBalteredBB
  %15 = alloca i1, align 1
  %16 = alloca i8*, align 8
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i8, align 1
  %21 = alloca i8, align 1
  %22 = alloca i8, align 1
  %23 = alloca %struct.passwd*, align 8
  %24 = alloca i32*, align 8
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  store i8* %0, i8** %16, align 8
  call void @llvm.dbg.declare(metadata i8** %16, metadata !1447, metadata !DIExpression()), !dbg !1448
  store i32 %1, i32* %17, align 4
  call void @llvm.dbg.declare(metadata i32* %17, metadata !1449, metadata !DIExpression()), !dbg !1450
  store i32 %2, i32* %18, align 4
  call void @llvm.dbg.declare(metadata i32* %18, metadata !1451, metadata !DIExpression()), !dbg !1452
  store i32 %3, i32* %19, align 4
  call void @llvm.dbg.declare(metadata i32* %19, metadata !1453, metadata !DIExpression()), !dbg !1454
  %27 = zext i1 %4 to i8
  store i8 %27, i8* %20, align 1
  call void @llvm.dbg.declare(metadata i8* %20, metadata !1455, metadata !DIExpression()), !dbg !1456
  store i8 %5, i8* %21, align 1
  call void @llvm.dbg.declare(metadata i8* %21, metadata !1457, metadata !DIExpression()), !dbg !1458
  call void @llvm.dbg.declare(metadata i8* %22, metadata !1459, metadata !DIExpression()), !dbg !1460
  store i8 1, i8* %22, align 1, !dbg !1460
  call void @llvm.dbg.declare(metadata %struct.passwd** %23, metadata !1461, metadata !DIExpression()), !dbg !1472
  store %struct.passwd* null, %struct.passwd** %23, align 8, !dbg !1472
  %28 = load i8*, i8** %16, align 8, !dbg !1473
  %29 = icmp ne i8* %28, null, !dbg !1473
  %30 = load i32, i32* @x.19
  %31 = load i32, i32* @y.20
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %29, label %38, label %93, !dbg !1475

38:                                               ; preds = %originalBBpart2
  %39 = load i32, i32* @x.19
  %40 = load i32, i32* @y.20
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %38, %originalBB1alteredBB
  %47 = load i32, i32* %17, align 4, !dbg !1476
  %48 = call %struct.passwd* @getpwuid(i32 %47), !dbg !1478
  store %struct.passwd* %48, %struct.passwd** %23, align 8, !dbg !1479
  %49 = load %struct.passwd*, %struct.passwd** %23, align 8, !dbg !1480
  %50 = icmp eq %struct.passwd* %49, null, !dbg !1482
  %51 = load i32, i32* @x.19
  %52 = load i32, i32* @y.20
  %53 = sub i32 %51, 1
  %54 = mul i32 %51, %53
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %52, 10
  %58 = or i1 %56, %57
  br i1 %58, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %50, label %59, label %76, !dbg !1483

59:                                               ; preds = %originalBBpart24
  %60 = load i32, i32* @x.19
  %61 = load i32, i32* @y.20
  %62 = sub i32 %60, 1
  %63 = mul i32 %60, %62
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %61, 10
  %67 = or i1 %65, %66
  br i1 %67, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %59, %originalBB6alteredBB
  store i8 0, i8* %22, align 1, !dbg !1484
  %68 = load i32, i32* @x.19
  %69 = load i32, i32* @y.20
  %70 = sub i32 %68, 1
  %71 = mul i32 %68, %70
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %69, 10
  %75 = or i1 %73, %74
  br i1 %75, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %76, !dbg !1485

76:                                               ; preds = %originalBBpart28, %originalBBpart24
  %77 = load i32, i32* @x.19
  %78 = load i32, i32* @y.20
  %79 = sub i32 %77, 1
  %80 = mul i32 %77, %79
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %78, 10
  %84 = or i1 %82, %83
  br i1 %84, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %76, %originalBB10alteredBB
  %85 = load i32, i32* @x.19
  %86 = load i32, i32* @y.20
  %87 = sub i32 %85, 1
  %88 = mul i32 %85, %87
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %86, 10
  %92 = or i1 %90, %91
  br i1 %92, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %93, !dbg !1486

93:                                               ; preds = %originalBBpart212, %originalBBpart2
  %94 = load i32, i32* @x.19
  %95 = load i32, i32* @y.20
  %96 = sub i32 %94, 1
  %97 = mul i32 %94, %96
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %95, 10
  %101 = or i1 %99, %100
  br i1 %101, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %93, %originalBB14alteredBB
  %102 = load i32, i32* %18, align 4, !dbg !1487
  %103 = load i8, i8* %20, align 1, !dbg !1489
  %104 = trunc i8 %103 to i1, !dbg !1489
  %105 = call zeroext i1 @print_group(i32 %102, i1 zeroext %104), !dbg !1490
  %106 = load i32, i32* @x.19
  %107 = load i32, i32* @y.20
  %108 = sub i32 %106, 1
  %109 = mul i32 %106, %108
  %110 = urem i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %107, 10
  %113 = or i1 %111, %112
  br i1 %113, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %105, label %131, label %114, !dbg !1491

114:                                              ; preds = %originalBBpart216
  %115 = load i32, i32* @x.19
  %116 = load i32, i32* @y.20
  %117 = sub i32 %115, 1
  %118 = mul i32 %115, %117
  %119 = urem i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = icmp slt i32 %116, 10
  %122 = or i1 %120, %121
  br i1 %122, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %114, %originalBB18alteredBB
  store i8 0, i8* %22, align 1, !dbg !1492
  %123 = load i32, i32* @x.19
  %124 = load i32, i32* @y.20
  %125 = sub i32 %123, 1
  %126 = mul i32 %123, %125
  %127 = urem i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %124, 10
  %130 = or i1 %128, %129
  br i1 %130, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %131, !dbg !1493

131:                                              ; preds = %originalBBpart220, %originalBBpart216
  %132 = load i32, i32* @x.19
  %133 = load i32, i32* @y.20
  %134 = sub i32 %132, 1
  %135 = mul i32 %132, %134
  %136 = urem i32 %135, 2
  %137 = icmp eq i32 %136, 0
  %138 = icmp slt i32 %133, 10
  %139 = or i1 %137, %138
  br i1 %139, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %131, %originalBB22alteredBB
  %140 = load i32, i32* %19, align 4, !dbg !1494
  %141 = load i32, i32* %18, align 4, !dbg !1496
  %142 = icmp ne i32 %140, %141, !dbg !1497
  %143 = load i32, i32* @x.19
  %144 = load i32, i32* @y.20
  %145 = sub i32 %143, 1
  %146 = mul i32 %143, %145
  %147 = urem i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = icmp slt i32 %144, 10
  %150 = or i1 %148, %149
  br i1 %150, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br i1 %142, label %151, label %209, !dbg !1498

151:                                              ; preds = %originalBBpart224
  %152 = load i32, i32* @x.19
  %153 = load i32, i32* @y.20
  %154 = sub i32 %152, 1
  %155 = mul i32 %152, %154
  %156 = urem i32 %155, 2
  %157 = icmp eq i32 %156, 0
  %158 = icmp slt i32 %153, 10
  %159 = or i1 %157, %158
  br i1 %159, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %151, %originalBB26alteredBB
  %160 = load i8, i8* %21, align 1, !dbg !1499
  %161 = sext i8 %160 to i32, !dbg !1499
  %162 = call i32 @putchar_unlocked(i32 %161), !dbg !1499
  %163 = load i32, i32* %19, align 4, !dbg !1501
  %164 = load i8, i8* %20, align 1, !dbg !1503
  %165 = trunc i8 %164 to i1, !dbg !1503
  %166 = call zeroext i1 @print_group(i32 %163, i1 zeroext %165), !dbg !1504
  %167 = load i32, i32* @x.19
  %168 = load i32, i32* @y.20
  %169 = sub i32 %167, 1
  %170 = mul i32 %167, %169
  %171 = urem i32 %170, 2
  %172 = icmp eq i32 %171, 0
  %173 = icmp slt i32 %168, 10
  %174 = or i1 %172, %173
  br i1 %174, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br i1 %166, label %192, label %175, !dbg !1505

175:                                              ; preds = %originalBBpart228
  %176 = load i32, i32* @x.19
  %177 = load i32, i32* @y.20
  %178 = sub i32 %176, 1
  %179 = mul i32 %176, %178
  %180 = urem i32 %179, 2
  %181 = icmp eq i32 %180, 0
  %182 = icmp slt i32 %177, 10
  %183 = or i1 %181, %182
  br i1 %183, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %175, %originalBB30alteredBB
  store i8 0, i8* %22, align 1, !dbg !1506
  %184 = load i32, i32* @x.19
  %185 = load i32, i32* @y.20
  %186 = sub i32 %184, 1
  %187 = mul i32 %184, %186
  %188 = urem i32 %187, 2
  %189 = icmp eq i32 %188, 0
  %190 = icmp slt i32 %185, 10
  %191 = or i1 %189, %190
  br i1 %191, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br label %192, !dbg !1507

192:                                              ; preds = %originalBBpart232, %originalBBpart228
  %193 = load i32, i32* @x.19
  %194 = load i32, i32* @y.20
  %195 = sub i32 %193, 1
  %196 = mul i32 %193, %195
  %197 = urem i32 %196, 2
  %198 = icmp eq i32 %197, 0
  %199 = icmp slt i32 %194, 10
  %200 = or i1 %198, %199
  br i1 %200, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %192, %originalBB34alteredBB
  %201 = load i32, i32* @x.19
  %202 = load i32, i32* @y.20
  %203 = sub i32 %201, 1
  %204 = mul i32 %201, %203
  %205 = urem i32 %204, 2
  %206 = icmp eq i32 %205, 0
  %207 = icmp slt i32 %202, 10
  %208 = or i1 %206, %207
  br i1 %208, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  br label %209, !dbg !1508

209:                                              ; preds = %originalBBpart236, %originalBBpart224
  call void @llvm.dbg.declare(metadata i32** %24, metadata !1509, metadata !DIExpression()), !dbg !1511
  call void @llvm.dbg.declare(metadata i32* %25, metadata !1512, metadata !DIExpression()), !dbg !1513
  %210 = load i32, i32* @x.19
  %211 = load i32, i32* @y.20
  %212 = sub i32 %210, 1
  %213 = mul i32 %210, %212
  %214 = urem i32 %213, 2
  %215 = icmp eq i32 %214, 0
  %216 = icmp slt i32 %211, 10
  %217 = or i1 %215, %216
  br i1 %217, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %209, %originalBB38alteredBB
  %218 = load i8*, i8** %16, align 8, !dbg !1514
  %219 = load %struct.passwd*, %struct.passwd** %23, align 8, !dbg !1515
  %220 = icmp ne %struct.passwd* %219, null, !dbg !1515
  %221 = load i32, i32* @x.19
  %222 = load i32, i32* @y.20
  %223 = sub i32 %221, 1
  %224 = mul i32 %221, %223
  %225 = urem i32 %224, 2
  %226 = icmp eq i32 %225, 0
  %227 = icmp slt i32 %222, 10
  %228 = or i1 %226, %227
  br i1 %228, label %originalBBpart240, label %originalBB38alteredBB

originalBBpart240:                                ; preds = %originalBB38
  br i1 %220, label %229, label %249, !dbg !1515

229:                                              ; preds = %originalBBpart240
  %230 = load i32, i32* @x.19
  %231 = load i32, i32* @y.20
  %232 = sub i32 %230, 1
  %233 = mul i32 %230, %232
  %234 = urem i32 %233, 2
  %235 = icmp eq i32 %234, 0
  %236 = icmp slt i32 %231, 10
  %237 = or i1 %235, %236
  br i1 %237, label %originalBB42, label %originalBB42alteredBB

originalBB42:                                     ; preds = %229, %originalBB42alteredBB
  %238 = load %struct.passwd*, %struct.passwd** %23, align 8, !dbg !1516
  %239 = getelementptr inbounds %struct.passwd, %struct.passwd* %238, i32 0, i32 3, !dbg !1517
  %240 = load i32, i32* %239, align 4, !dbg !1517
  %241 = load i32, i32* @x.19
  %242 = load i32, i32* @y.20
  %243 = sub i32 %241, 1
  %244 = mul i32 %241, %243
  %245 = urem i32 %244, 2
  %246 = icmp eq i32 %245, 0
  %247 = icmp slt i32 %242, 10
  %248 = or i1 %246, %247
  br i1 %248, label %originalBBpart244, label %originalBB42alteredBB

originalBBpart244:                                ; preds = %originalBB42
  br label %267, !dbg !1515

249:                                              ; preds = %originalBBpart240
  %250 = load i32, i32* @x.19
  %251 = load i32, i32* @y.20
  %252 = sub i32 %250, 1
  %253 = mul i32 %250, %252
  %254 = urem i32 %253, 2
  %255 = icmp eq i32 %254, 0
  %256 = icmp slt i32 %251, 10
  %257 = or i1 %255, %256
  br i1 %257, label %originalBB46, label %originalBB46alteredBB

originalBB46:                                     ; preds = %249, %originalBB46alteredBB
  %258 = load i32, i32* %19, align 4, !dbg !1518
  %259 = load i32, i32* @x.19
  %260 = load i32, i32* @y.20
  %261 = sub i32 %259, 1
  %262 = mul i32 %259, %261
  %263 = urem i32 %262, 2
  %264 = icmp eq i32 %263, 0
  %265 = icmp slt i32 %260, 10
  %266 = or i1 %264, %265
  br i1 %266, label %originalBBpart248, label %originalBB46alteredBB

originalBBpart248:                                ; preds = %originalBB46
  br label %267, !dbg !1515

267:                                              ; preds = %originalBBpart248, %originalBBpart244
  %268 = phi i32 [ %240, %originalBBpart244 ], [ %258, %originalBBpart248 ], !dbg !1515
  %269 = load i32, i32* @x.19
  %270 = load i32, i32* @y.20
  %271 = sub i32 %269, 1
  %272 = mul i32 %269, %271
  %273 = urem i32 %272, 2
  %274 = icmp eq i32 %273, 0
  %275 = icmp slt i32 %270, 10
  %276 = or i1 %274, %275
  br i1 %276, label %originalBB50, label %originalBB50alteredBB

originalBB50:                                     ; preds = %267, %originalBB50alteredBB
  %277 = call i32 @xgetgroups(i8* %218, i32 %268, i32** %24), !dbg !1519
  store i32 %277, i32* %25, align 4, !dbg !1513
  %278 = load i32, i32* %25, align 4, !dbg !1520
  %279 = icmp slt i32 %278, 0, !dbg !1522
  %280 = load i32, i32* @x.19
  %281 = load i32, i32* @y.20
  %282 = sub i32 %280, 1
  %283 = mul i32 %280, %282
  %284 = urem i32 %283, 2
  %285 = icmp eq i32 %284, 0
  %286 = icmp slt i32 %281, 10
  %287 = or i1 %285, %286
  br i1 %287, label %originalBBpart252, label %originalBB50alteredBB

originalBBpart252:                                ; preds = %originalBB50
  br i1 %279, label %288, label %366, !dbg !1523

288:                                              ; preds = %originalBBpart252
  %289 = load i32, i32* @x.19
  %290 = load i32, i32* @y.20
  %291 = sub i32 %289, 1
  %292 = mul i32 %289, %291
  %293 = urem i32 %292, 2
  %294 = icmp eq i32 %293, 0
  %295 = icmp slt i32 %290, 10
  %296 = or i1 %294, %295
  br i1 %296, label %originalBB54, label %originalBB54alteredBB

originalBB54:                                     ; preds = %288, %originalBB54alteredBB
  %297 = load i8*, i8** %16, align 8, !dbg !1524
  %298 = icmp ne i8* %297, null, !dbg !1524
  %299 = load i32, i32* @x.19
  %300 = load i32, i32* @y.20
  %301 = sub i32 %299, 1
  %302 = mul i32 %299, %301
  %303 = urem i32 %302, 2
  %304 = icmp eq i32 %303, 0
  %305 = icmp slt i32 %300, 10
  %306 = or i1 %304, %305
  br i1 %306, label %originalBBpart256, label %originalBB54alteredBB

originalBBpart256:                                ; preds = %originalBB54
  br i1 %298, label %307, label %329, !dbg !1527

307:                                              ; preds = %originalBBpart256
  %308 = load i32, i32* @x.19
  %309 = load i32, i32* @y.20
  %310 = sub i32 %308, 1
  %311 = mul i32 %308, %310
  %312 = urem i32 %311, 2
  %313 = icmp eq i32 %312, 0
  %314 = icmp slt i32 %309, 10
  %315 = or i1 %313, %314
  br i1 %315, label %originalBB58, label %originalBB58alteredBB

originalBB58:                                     ; preds = %307, %originalBB58alteredBB
  %316 = call i32* @__errno_location() #15, !dbg !1528
  %317 = load i32, i32* %316, align 4, !dbg !1528
  %318 = call i8* @gettext(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.61, i64 0, i64 0)) #10, !dbg !1530
  %319 = load i8*, i8** %16, align 8, !dbg !1531
  %320 = call i8* @quote(i8* %319), !dbg !1532
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %317, i8* %318, i8* %320), !dbg !1533
  %321 = load i32, i32* @x.19
  %322 = load i32, i32* @y.20
  %323 = sub i32 %321, 1
  %324 = mul i32 %321, %323
  %325 = urem i32 %324, 2
  %326 = icmp eq i32 %325, 0
  %327 = icmp slt i32 %322, 10
  %328 = or i1 %326, %327
  br i1 %328, label %originalBBpart260, label %originalBB58alteredBB

originalBBpart260:                                ; preds = %originalBB58
  br label %349, !dbg !1534

329:                                              ; preds = %originalBBpart256
  %330 = load i32, i32* @x.19
  %331 = load i32, i32* @y.20
  %332 = sub i32 %330, 1
  %333 = mul i32 %330, %332
  %334 = urem i32 %333, 2
  %335 = icmp eq i32 %334, 0
  %336 = icmp slt i32 %331, 10
  %337 = or i1 %335, %336
  br i1 %337, label %originalBB62, label %originalBB62alteredBB

originalBB62:                                     ; preds = %329, %originalBB62alteredBB
  %338 = call i32* @__errno_location() #15, !dbg !1535
  %339 = load i32, i32* %338, align 4, !dbg !1535
  %340 = call i8* @gettext(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1.62, i64 0, i64 0)) #10, !dbg !1537
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %339, i8* %340), !dbg !1538
  %341 = load i32, i32* @x.19
  %342 = load i32, i32* @y.20
  %343 = sub i32 %341, 1
  %344 = mul i32 %341, %343
  %345 = urem i32 %344, 2
  %346 = icmp eq i32 %345, 0
  %347 = icmp slt i32 %342, 10
  %348 = or i1 %346, %347
  br i1 %348, label %originalBBpart264, label %originalBB62alteredBB

originalBBpart264:                                ; preds = %originalBB62
  br label %349

349:                                              ; preds = %originalBBpart264, %originalBBpart260
  %350 = load i32, i32* @x.19
  %351 = load i32, i32* @y.20
  %352 = sub i32 %350, 1
  %353 = mul i32 %350, %352
  %354 = urem i32 %353, 2
  %355 = icmp eq i32 %354, 0
  %356 = icmp slt i32 %351, 10
  %357 = or i1 %355, %356
  br i1 %357, label %originalBB66, label %originalBB66alteredBB

originalBB66:                                     ; preds = %349, %originalBB66alteredBB
  store i1 false, i1* %15, align 1, !dbg !1539
  %358 = load i32, i32* @x.19
  %359 = load i32, i32* @y.20
  %360 = sub i32 %358, 1
  %361 = mul i32 %358, %360
  %362 = urem i32 %361, 2
  %363 = icmp eq i32 %362, 0
  %364 = icmp slt i32 %359, 10
  %365 = or i1 %363, %364
  br i1 %365, label %originalBBpart268, label %originalBB66alteredBB

originalBBpart268:                                ; preds = %originalBB66
  br label %570, !dbg !1539

366:                                              ; preds = %originalBBpart252
  call void @llvm.dbg.declare(metadata i32* %26, metadata !1540, metadata !DIExpression()), !dbg !1542
  %367 = load i32, i32* @x.19
  %368 = load i32, i32* @y.20
  %369 = sub i32 %367, 1
  %370 = mul i32 %367, %369
  %371 = urem i32 %370, 2
  %372 = icmp eq i32 %371, 0
  %373 = icmp slt i32 %368, 10
  %374 = or i1 %372, %373
  br i1 %374, label %originalBB70, label %originalBB70alteredBB

originalBB70:                                     ; preds = %366, %originalBB70alteredBB
  store i32 0, i32* %26, align 4, !dbg !1542
  %375 = load i32, i32* @x.19
  %376 = load i32, i32* @y.20
  %377 = sub i32 %375, 1
  %378 = mul i32 %375, %377
  %379 = urem i32 %378, 2
  %380 = icmp eq i32 %379, 0
  %381 = icmp slt i32 %376, 10
  %382 = or i1 %380, %381
  br i1 %382, label %originalBBpart272, label %originalBB70alteredBB

originalBBpart272:                                ; preds = %originalBB70
  br label %383, !dbg !1543

383:                                              ; preds = %originalBBpart2104, %originalBBpart272
  %384 = load i32, i32* @x.19
  %385 = load i32, i32* @y.20
  %386 = sub i32 %384, 1
  %387 = mul i32 %384, %386
  %388 = urem i32 %387, 2
  %389 = icmp eq i32 %388, 0
  %390 = icmp slt i32 %385, 10
  %391 = or i1 %389, %390
  br i1 %391, label %originalBB74, label %originalBB74alteredBB

originalBB74:                                     ; preds = %383, %originalBB74alteredBB
  %392 = load i32, i32* %26, align 4, !dbg !1544
  %393 = load i32, i32* %25, align 4, !dbg !1546
  %394 = icmp slt i32 %392, %393, !dbg !1547
  %395 = load i32, i32* @x.19
  %396 = load i32, i32* @y.20
  %397 = sub i32 %395, 1
  %398 = mul i32 %395, %397
  %399 = urem i32 %398, 2
  %400 = icmp eq i32 %399, 0
  %401 = icmp slt i32 %396, 10
  %402 = or i1 %400, %401
  br i1 %402, label %originalBBpart276, label %originalBB74alteredBB

originalBBpart276:                                ; preds = %originalBB74
  br i1 %394, label %403, label %549, !dbg !1548

403:                                              ; preds = %originalBBpart276
  %404 = load i32, i32* @x.19
  %405 = load i32, i32* @y.20
  %406 = sub i32 %404, 1
  %407 = mul i32 %404, %406
  %408 = urem i32 %407, 2
  %409 = icmp eq i32 %408, 0
  %410 = icmp slt i32 %405, 10
  %411 = or i1 %409, %410
  br i1 %411, label %originalBB78, label %originalBB78alteredBB

originalBB78:                                     ; preds = %403, %originalBB78alteredBB
  %412 = load i32*, i32** %24, align 8, !dbg !1549
  %413 = load i32, i32* %26, align 4, !dbg !1551
  %414 = sext i32 %413 to i64, !dbg !1549
  %415 = getelementptr inbounds i32, i32* %412, i64 %414, !dbg !1549
  %416 = load i32, i32* %415, align 4, !dbg !1549
  %417 = load i32, i32* %18, align 4, !dbg !1552
  %418 = icmp ne i32 %416, %417, !dbg !1553
  %419 = load i32, i32* @x.19
  %420 = load i32, i32* @y.20
  %421 = sub i32 %419, 1
  %422 = mul i32 %419, %421
  %423 = urem i32 %422, 2
  %424 = icmp eq i32 %423, 0
  %425 = icmp slt i32 %420, 10
  %426 = or i1 %424, %425
  br i1 %426, label %originalBBpart280, label %originalBB78alteredBB

originalBBpart280:                                ; preds = %originalBB78
  br i1 %418, label %427, label %513, !dbg !1554

427:                                              ; preds = %originalBBpart280
  %428 = load i32, i32* @x.19
  %429 = load i32, i32* @y.20
  %430 = sub i32 %428, 1
  %431 = mul i32 %428, %430
  %432 = urem i32 %431, 2
  %433 = icmp eq i32 %432, 0
  %434 = icmp slt i32 %429, 10
  %435 = or i1 %433, %434
  br i1 %435, label %originalBB82, label %originalBB82alteredBB

originalBB82:                                     ; preds = %427, %originalBB82alteredBB
  %436 = load i32*, i32** %24, align 8, !dbg !1555
  %437 = load i32, i32* %26, align 4, !dbg !1556
  %438 = sext i32 %437 to i64, !dbg !1555
  %439 = getelementptr inbounds i32, i32* %436, i64 %438, !dbg !1555
  %440 = load i32, i32* %439, align 4, !dbg !1555
  %441 = load i32, i32* %19, align 4, !dbg !1557
  %442 = icmp ne i32 %440, %441, !dbg !1558
  %443 = load i32, i32* @x.19
  %444 = load i32, i32* @y.20
  %445 = sub i32 %443, 1
  %446 = mul i32 %443, %445
  %447 = urem i32 %446, 2
  %448 = icmp eq i32 %447, 0
  %449 = icmp slt i32 %444, 10
  %450 = or i1 %448, %449
  br i1 %450, label %originalBBpart284, label %originalBB82alteredBB

originalBBpart284:                                ; preds = %originalBB82
  br i1 %442, label %451, label %513, !dbg !1559

451:                                              ; preds = %originalBBpart284
  %452 = load i32, i32* @x.19
  %453 = load i32, i32* @y.20
  %454 = sub i32 %452, 1
  %455 = mul i32 %452, %454
  %456 = urem i32 %455, 2
  %457 = icmp eq i32 %456, 0
  %458 = icmp slt i32 %453, 10
  %459 = or i1 %457, %458
  br i1 %459, label %originalBB86, label %originalBB86alteredBB

originalBB86:                                     ; preds = %451, %originalBB86alteredBB
  %460 = load i8, i8* %21, align 1, !dbg !1560
  %461 = sext i8 %460 to i32, !dbg !1560
  %462 = call i32 @putchar_unlocked(i32 %461), !dbg !1560
  %463 = load i32*, i32** %24, align 8, !dbg !1562
  %464 = load i32, i32* %26, align 4, !dbg !1564
  %465 = sext i32 %464 to i64, !dbg !1562
  %466 = getelementptr inbounds i32, i32* %463, i64 %465, !dbg !1562
  %467 = load i32, i32* %466, align 4, !dbg !1562
  %468 = load i8, i8* %20, align 1, !dbg !1565
  %469 = trunc i8 %468 to i1, !dbg !1565
  %470 = call zeroext i1 @print_group(i32 %467, i1 zeroext %469), !dbg !1566
  %471 = load i32, i32* @x.19
  %472 = load i32, i32* @y.20
  %473 = sub i32 %471, 1
  %474 = mul i32 %471, %473
  %475 = urem i32 %474, 2
  %476 = icmp eq i32 %475, 0
  %477 = icmp slt i32 %472, 10
  %478 = or i1 %476, %477
  br i1 %478, label %originalBBpart288, label %originalBB86alteredBB

originalBBpart288:                                ; preds = %originalBB86
  br i1 %470, label %496, label %479, !dbg !1567

479:                                              ; preds = %originalBBpart288
  %480 = load i32, i32* @x.19
  %481 = load i32, i32* @y.20
  %482 = sub i32 %480, 1
  %483 = mul i32 %480, %482
  %484 = urem i32 %483, 2
  %485 = icmp eq i32 %484, 0
  %486 = icmp slt i32 %481, 10
  %487 = or i1 %485, %486
  br i1 %487, label %originalBB90, label %originalBB90alteredBB

originalBB90:                                     ; preds = %479, %originalBB90alteredBB
  store i8 0, i8* %22, align 1, !dbg !1568
  %488 = load i32, i32* @x.19
  %489 = load i32, i32* @y.20
  %490 = sub i32 %488, 1
  %491 = mul i32 %488, %490
  %492 = urem i32 %491, 2
  %493 = icmp eq i32 %492, 0
  %494 = icmp slt i32 %489, 10
  %495 = or i1 %493, %494
  br i1 %495, label %originalBBpart292, label %originalBB90alteredBB

originalBBpart292:                                ; preds = %originalBB90
  br label %496, !dbg !1569

496:                                              ; preds = %originalBBpart292, %originalBBpart288
  %497 = load i32, i32* @x.19
  %498 = load i32, i32* @y.20
  %499 = sub i32 %497, 1
  %500 = mul i32 %497, %499
  %501 = urem i32 %500, 2
  %502 = icmp eq i32 %501, 0
  %503 = icmp slt i32 %498, 10
  %504 = or i1 %502, %503
  br i1 %504, label %originalBB94, label %originalBB94alteredBB

originalBB94:                                     ; preds = %496, %originalBB94alteredBB
  %505 = load i32, i32* @x.19
  %506 = load i32, i32* @y.20
  %507 = sub i32 %505, 1
  %508 = mul i32 %505, %507
  %509 = urem i32 %508, 2
  %510 = icmp eq i32 %509, 0
  %511 = icmp slt i32 %506, 10
  %512 = or i1 %510, %511
  br i1 %512, label %originalBBpart296, label %originalBB94alteredBB

originalBBpart296:                                ; preds = %originalBB94
  br label %513, !dbg !1570

513:                                              ; preds = %originalBBpart296, %originalBBpart284, %originalBBpart280
  %514 = load i32, i32* @x.19
  %515 = load i32, i32* @y.20
  %516 = sub i32 %514, 1
  %517 = mul i32 %514, %516
  %518 = urem i32 %517, 2
  %519 = icmp eq i32 %518, 0
  %520 = icmp slt i32 %515, 10
  %521 = or i1 %519, %520
  br i1 %521, label %originalBB98, label %originalBB98alteredBB

originalBB98:                                     ; preds = %513, %originalBB98alteredBB
  %522 = load i32, i32* @x.19
  %523 = load i32, i32* @y.20
  %524 = sub i32 %522, 1
  %525 = mul i32 %522, %524
  %526 = urem i32 %525, 2
  %527 = icmp eq i32 %526, 0
  %528 = icmp slt i32 %523, 10
  %529 = or i1 %527, %528
  br i1 %529, label %originalBBpart2100, label %originalBB98alteredBB

originalBBpart2100:                               ; preds = %originalBB98
  br label %530, !dbg !1557

530:                                              ; preds = %originalBBpart2100
  %531 = load i32, i32* @x.19
  %532 = load i32, i32* @y.20
  %533 = sub i32 %531, 1
  %534 = mul i32 %531, %533
  %535 = urem i32 %534, 2
  %536 = icmp eq i32 %535, 0
  %537 = icmp slt i32 %532, 10
  %538 = or i1 %536, %537
  br i1 %538, label %originalBB102, label %originalBB102alteredBB

originalBB102:                                    ; preds = %530, %originalBB102alteredBB
  %539 = load i32, i32* %26, align 4, !dbg !1571
  %540 = add nsw i32 %539, 1, !dbg !1571
  store i32 %540, i32* %26, align 4, !dbg !1571
  %541 = load i32, i32* @x.19
  %542 = load i32, i32* @y.20
  %543 = sub i32 %541, 1
  %544 = mul i32 %541, %543
  %545 = urem i32 %544, 2
  %546 = icmp eq i32 %545, 0
  %547 = icmp slt i32 %542, 10
  %548 = or i1 %546, %547
  br i1 %548, label %originalBBpart2104, label %originalBB102alteredBB

originalBBpart2104:                               ; preds = %originalBB102
  br label %383, !dbg !1572, !llvm.loop !1573

549:                                              ; preds = %originalBBpart276
  %550 = load i32, i32* @x.19
  %551 = load i32, i32* @y.20
  %552 = sub i32 %550, 1
  %553 = mul i32 %550, %552
  %554 = urem i32 %553, 2
  %555 = icmp eq i32 %554, 0
  %556 = icmp slt i32 %551, 10
  %557 = or i1 %555, %556
  br i1 %557, label %originalBB106, label %originalBB106alteredBB

originalBB106:                                    ; preds = %549, %originalBB106alteredBB
  %558 = load i32*, i32** %24, align 8, !dbg !1575
  %559 = bitcast i32* %558 to i8*, !dbg !1575
  call void @free(i8* %559) #10, !dbg !1576
  %560 = load i8, i8* %22, align 1, !dbg !1577
  %561 = trunc i8 %560 to i1, !dbg !1577
  store i1 %561, i1* %15, align 1, !dbg !1578
  %562 = load i32, i32* @x.19
  %563 = load i32, i32* @y.20
  %564 = sub i32 %562, 1
  %565 = mul i32 %562, %564
  %566 = urem i32 %565, 2
  %567 = icmp eq i32 %566, 0
  %568 = icmp slt i32 %563, 10
  %569 = or i1 %567, %568
  br i1 %569, label %originalBBpart2108, label %originalBB106alteredBB

originalBBpart2108:                               ; preds = %originalBB106
  br label %570, !dbg !1578

570:                                              ; preds = %originalBBpart2108, %originalBBpart268
  %571 = load i1, i1* %15, align 1, !dbg !1579
  ret i1 %571, !dbg !1579

originalBBalteredBB:                              ; preds = %originalBB, %6
  %572 = alloca i1, align 1
  %573 = alloca i8*, align 8
  %574 = alloca i32, align 4
  %575 = alloca i32, align 4
  %576 = alloca i32, align 4
  %577 = alloca i8, align 1
  %578 = alloca i8, align 1
  %579 = alloca i8, align 1
  %580 = alloca %struct.passwd*, align 8
  %581 = alloca i32*, align 8
  %582 = alloca i32, align 4
  %583 = alloca i32, align 4
  store i8* %0, i8** %573, align 8
  call void @llvm.dbg.declare(metadata i8** %573, metadata !1580, metadata !DIExpression()), !dbg !1448
  store i32 %1, i32* %574, align 4
  call void @llvm.dbg.declare(metadata i32* %574, metadata !1587, metadata !DIExpression()), !dbg !1450
  store i32 %2, i32* %575, align 4
  call void @llvm.dbg.declare(metadata i32* %575, metadata !1588, metadata !DIExpression()), !dbg !1452
  store i32 %3, i32* %576, align 4
  call void @llvm.dbg.declare(metadata i32* %576, metadata !1589, metadata !DIExpression()), !dbg !1454
  %584 = zext i1 %4 to i8
  store i8 %584, i8* %577, align 1
  call void @llvm.dbg.declare(metadata i8* %577, metadata !1590, metadata !DIExpression()), !dbg !1456
  store i8 %5, i8* %578, align 1
  call void @llvm.dbg.declare(metadata i8* %578, metadata !1591, metadata !DIExpression()), !dbg !1458
  call void @llvm.dbg.declare(metadata i8* %579, metadata !1592, metadata !DIExpression()), !dbg !1460
  store i8 1, i8* %579, align 1, !dbg !1460
  call void @llvm.dbg.declare(metadata %struct.passwd** %580, metadata !1593, metadata !DIExpression()), !dbg !1472
  store %struct.passwd* null, %struct.passwd** %580, align 8, !dbg !1472
  %585 = load i8*, i8** %573, align 8, !dbg !1473
  %586 = icmp ne i8* %585, null, !dbg !1473
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %38
  %587 = load i32, i32* %17, align 4, !dbg !1476
  %588 = call %struct.passwd* @getpwuid(i32 %587), !dbg !1478
  store %struct.passwd* %588, %struct.passwd** %23, align 8, !dbg !1479
  %589 = load %struct.passwd*, %struct.passwd** %23, align 8, !dbg !1480
  %590 = icmp eq %struct.passwd* %589, null, !dbg !1482
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %59
  store i8 0, i8* %22, align 1, !dbg !1484
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %76
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %93
  %591 = load i32, i32* %18, align 4, !dbg !1487
  %592 = load i8, i8* %20, align 1, !dbg !1489
  %593 = trunc i8 %592 to i1, !dbg !1489
  %594 = call zeroext i1 @print_group(i32 %591, i1 zeroext %593), !dbg !1490
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %114
  store i8 0, i8* %22, align 1, !dbg !1492
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %131
  %595 = load i32, i32* %19, align 4, !dbg !1494
  %596 = load i32, i32* %18, align 4, !dbg !1496
  %597 = icmp ne i32 %595, %596, !dbg !1497
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %151
  %598 = load i8, i8* %21, align 1, !dbg !1499
  %599 = sext i8 %598 to i32, !dbg !1499
  %600 = call i32 @putchar_unlocked(i32 %599), !dbg !1499
  %601 = load i32, i32* %19, align 4, !dbg !1501
  %602 = load i8, i8* %20, align 1, !dbg !1503
  %603 = trunc i8 %602 to i1, !dbg !1503
  %604 = call zeroext i1 @print_group(i32 %601, i1 zeroext %603), !dbg !1504
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %175
  store i8 0, i8* %22, align 1, !dbg !1506
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %192
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %209
  %605 = load i8*, i8** %16, align 8, !dbg !1514
  %606 = load %struct.passwd*, %struct.passwd** %23, align 8, !dbg !1515
  %607 = icmp ne %struct.passwd* %606, null, !dbg !1515
  br label %originalBB38

originalBB42alteredBB:                            ; preds = %originalBB42, %229
  %608 = load %struct.passwd*, %struct.passwd** %23, align 8, !dbg !1516
  %609 = getelementptr inbounds %struct.passwd, %struct.passwd* %608, i32 0, i32 3, !dbg !1517
  %610 = load i32, i32* %609, align 4, !dbg !1517
  br label %originalBB42

originalBB46alteredBB:                            ; preds = %originalBB46, %249
  %611 = load i32, i32* %19, align 4, !dbg !1518
  br label %originalBB46

originalBB50alteredBB:                            ; preds = %originalBB50, %267
  %612 = call i32 @xgetgroups(i8* %218, i32 %268, i32** %24), !dbg !1519
  store i32 %612, i32* %25, align 4, !dbg !1513
  %613 = load i32, i32* %25, align 4, !dbg !1520
  %614 = icmp slt i32 %613, 0, !dbg !1522
  br label %originalBB50

originalBB54alteredBB:                            ; preds = %originalBB54, %288
  %615 = load i8*, i8** %16, align 8, !dbg !1524
  %616 = icmp ne i8* %615, null, !dbg !1524
  br label %originalBB54

originalBB58alteredBB:                            ; preds = %originalBB58, %307
  %617 = call i32* @__errno_location() #15, !dbg !1528
  %618 = load i32, i32* %617, align 4, !dbg !1528
  %619 = call i8* @gettext(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.61, i64 0, i64 0)) #10, !dbg !1530
  %620 = load i8*, i8** %16, align 8, !dbg !1531
  %621 = call i8* @quote(i8* %620), !dbg !1532
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %618, i8* %619, i8* %621), !dbg !1533
  br label %originalBB58

originalBB62alteredBB:                            ; preds = %originalBB62, %329
  %622 = call i32* @__errno_location() #15, !dbg !1535
  %623 = load i32, i32* %622, align 4, !dbg !1535
  %624 = call i8* @gettext(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1.62, i64 0, i64 0)) #10, !dbg !1537
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %623, i8* %624), !dbg !1538
  br label %originalBB62

originalBB66alteredBB:                            ; preds = %originalBB66, %349
  store i1 false, i1* %15, align 1, !dbg !1539
  br label %originalBB66

originalBB70alteredBB:                            ; preds = %originalBB70, %366
  store i32 0, i32* %26, align 4, !dbg !1542
  br label %originalBB70

originalBB74alteredBB:                            ; preds = %originalBB74, %383
  %625 = load i32, i32* %26, align 4, !dbg !1544
  %626 = load i32, i32* %25, align 4, !dbg !1546
  %627 = icmp slt i32 %625, %626, !dbg !1547
  br label %originalBB74

originalBB78alteredBB:                            ; preds = %originalBB78, %403
  %628 = load i32*, i32** %24, align 8, !dbg !1549
  %629 = load i32, i32* %26, align 4, !dbg !1551
  %630 = sext i32 %629 to i64, !dbg !1549
  %631 = getelementptr inbounds i32, i32* %628, i64 %630, !dbg !1549
  %632 = load i32, i32* %631, align 4, !dbg !1549
  %633 = load i32, i32* %18, align 4, !dbg !1552
  %634 = icmp ne i32 %632, %633, !dbg !1553
  br label %originalBB78

originalBB82alteredBB:                            ; preds = %originalBB82, %427
  %635 = load i32*, i32** %24, align 8, !dbg !1555
  %636 = load i32, i32* %26, align 4, !dbg !1556
  %637 = sext i32 %636 to i64, !dbg !1555
  %638 = getelementptr inbounds i32, i32* %635, i64 %637, !dbg !1555
  %639 = load i32, i32* %638, align 4, !dbg !1555
  %640 = load i32, i32* %19, align 4, !dbg !1557
  %641 = icmp ne i32 %639, %640, !dbg !1558
  br label %originalBB82

originalBB86alteredBB:                            ; preds = %originalBB86, %451
  %642 = load i8, i8* %21, align 1, !dbg !1560
  %643 = sext i8 %642 to i32, !dbg !1560
  %644 = call i32 @putchar_unlocked(i32 %643), !dbg !1560
  %645 = load i32*, i32** %24, align 8, !dbg !1562
  %646 = load i32, i32* %26, align 4, !dbg !1564
  %647 = sext i32 %646 to i64, !dbg !1562
  %648 = getelementptr inbounds i32, i32* %645, i64 %647, !dbg !1562
  %649 = load i32, i32* %648, align 4, !dbg !1562
  %650 = load i8, i8* %20, align 1, !dbg !1565
  %651 = trunc i8 %650 to i1, !dbg !1565
  %652 = call zeroext i1 @print_group(i32 %649, i1 zeroext %651), !dbg !1566
  br label %originalBB86

originalBB90alteredBB:                            ; preds = %originalBB90, %479
  store i8 0, i8* %22, align 1, !dbg !1568
  br label %originalBB90

originalBB94alteredBB:                            ; preds = %originalBB94, %496
  br label %originalBB94

originalBB98alteredBB:                            ; preds = %originalBB98, %513
  br label %originalBB98

originalBB102alteredBB:                           ; preds = %originalBB102, %530
  %653 = load i32, i32* %26, align 4, !dbg !1571
  %_ = shl i32 %653, 1
  %654 = add nsw i32 %653, 1, !dbg !1571
  store i32 %654, i32* %26, align 4, !dbg !1571
  br label %originalBB102

originalBB106alteredBB:                           ; preds = %originalBB106, %549
  %655 = load i32*, i32** %24, align 8, !dbg !1575
  %656 = bitcast i32* %655 to i8*, !dbg !1575
  call void @free(i8* %656) #10, !dbg !1576
  %657 = load i8, i8* %22, align 1, !dbg !1577
  %658 = trunc i8 %657 to i1, !dbg !1577
  store i1 %658, i1* %15, align 1, !dbg !1578
  br label %originalBB106
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @print_group(i32, i1 zeroext) #4 !dbg !1604 {
  %3 = load i32, i32* @x.21
  %4 = load i32, i32* @y.22
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca i32, align 4
  %12 = alloca i8, align 1
  %13 = alloca %struct.group*, align 8
  %14 = alloca i8, align 1
  %15 = alloca i8*, align 8
  store i32 %0, i32* %11, align 4
  call void @llvm.dbg.declare(metadata i32* %11, metadata !1607, metadata !DIExpression()), !dbg !1608
  %16 = zext i1 %1 to i8
  store i8 %16, i8* %12, align 1
  call void @llvm.dbg.declare(metadata i8* %12, metadata !1609, metadata !DIExpression()), !dbg !1610
  call void @llvm.dbg.declare(metadata %struct.group** %13, metadata !1611, metadata !DIExpression()), !dbg !1619
  store %struct.group* null, %struct.group** %13, align 8, !dbg !1619
  call void @llvm.dbg.declare(metadata i8* %14, metadata !1620, metadata !DIExpression()), !dbg !1621
  store i8 1, i8* %14, align 1, !dbg !1621
  %17 = load i8, i8* %12, align 1, !dbg !1622
  %18 = trunc i8 %17 to i1, !dbg !1622
  %19 = load i32, i32* @x.21
  %20 = load i32, i32* @y.22
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %18, label %27, label %85, !dbg !1624

27:                                               ; preds = %originalBBpart2
  %28 = load i32, i32* @x.21
  %29 = load i32, i32* @y.22
  %30 = sub i32 %28, 1
  %31 = mul i32 %28, %30
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %33, %34
  br i1 %35, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %27, %originalBB1alteredBB
  %36 = load i32, i32* %11, align 4, !dbg !1625
  %37 = call %struct.group* @getgrgid(i32 %36), !dbg !1627
  store %struct.group* %37, %struct.group** %13, align 8, !dbg !1628
  %38 = load %struct.group*, %struct.group** %13, align 8, !dbg !1629
  %39 = icmp eq %struct.group* %38, null, !dbg !1631
  %40 = load i32, i32* @x.21
  %41 = load i32, i32* @y.22
  %42 = sub i32 %40, 1
  %43 = mul i32 %40, %42
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %45, %46
  br i1 %47, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %39, label %48, label %68, !dbg !1632

48:                                               ; preds = %originalBBpart24
  %49 = load i32, i32* @x.21
  %50 = load i32, i32* @y.22
  %51 = sub i32 %49, 1
  %52 = mul i32 %49, %51
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %50, 10
  %56 = or i1 %54, %55
  br i1 %56, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %48, %originalBB6alteredBB
  %57 = call i8* @gettext(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.2.63, i64 0, i64 0)) #10, !dbg !1633
  %58 = load i32, i32* %11, align 4, !dbg !1635
  %59 = zext i32 %58 to i64, !dbg !1636
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %57, i64 %59), !dbg !1637
  store i8 0, i8* %14, align 1, !dbg !1638
  %60 = load i32, i32* @x.21
  %61 = load i32, i32* @y.22
  %62 = sub i32 %60, 1
  %63 = mul i32 %60, %62
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %61, 10
  %67 = or i1 %65, %66
  br i1 %67, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %68, !dbg !1639

68:                                               ; preds = %originalBBpart28, %originalBBpart24
  %69 = load i32, i32* @x.21
  %70 = load i32, i32* @y.22
  %71 = sub i32 %69, 1
  %72 = mul i32 %69, %71
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %74, %75
  br i1 %76, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %68, %originalBB10alteredBB
  %77 = load i32, i32* @x.21
  %78 = load i32, i32* @y.22
  %79 = sub i32 %77, 1
  %80 = mul i32 %77, %79
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %78, 10
  %84 = or i1 %82, %83
  br i1 %84, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %85, !dbg !1640

85:                                               ; preds = %originalBBpart212, %originalBBpart2
  call void @llvm.dbg.declare(metadata i8** %15, metadata !1641, metadata !DIExpression()), !dbg !1642
  %86 = load %struct.group*, %struct.group** %13, align 8, !dbg !1643
  %87 = icmp ne %struct.group* %86, null, !dbg !1643
  br i1 %87, label %88, label %108, !dbg !1643

88:                                               ; preds = %85
  %89 = load i32, i32* @x.21
  %90 = load i32, i32* @y.22
  %91 = sub i32 %89, 1
  %92 = mul i32 %89, %91
  %93 = urem i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %90, 10
  %96 = or i1 %94, %95
  br i1 %96, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %88, %originalBB14alteredBB
  %97 = load %struct.group*, %struct.group** %13, align 8, !dbg !1644
  %98 = getelementptr inbounds %struct.group, %struct.group* %97, i32 0, i32 0, !dbg !1645
  %99 = load i8*, i8** %98, align 8, !dbg !1645
  %100 = load i32, i32* @x.21
  %101 = load i32, i32* @y.22
  %102 = sub i32 %100, 1
  %103 = mul i32 %100, %102
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %101, 10
  %107 = or i1 %105, %106
  br i1 %107, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %126, !dbg !1643

108:                                              ; preds = %85
  %109 = load i32, i32* @x.21
  %110 = load i32, i32* @y.22
  %111 = sub i32 %109, 1
  %112 = mul i32 %109, %111
  %113 = urem i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = icmp slt i32 %110, 10
  %116 = or i1 %114, %115
  br i1 %116, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %108, %originalBB18alteredBB
  %117 = call i8* @gidtostr_ptr.64(i32* %11), !dbg !1646
  %118 = load i32, i32* @x.21
  %119 = load i32, i32* @y.22
  %120 = sub i32 %118, 1
  %121 = mul i32 %118, %120
  %122 = urem i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = icmp slt i32 %119, 10
  %125 = or i1 %123, %124
  br i1 %125, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %126, !dbg !1643

126:                                              ; preds = %originalBBpart220, %originalBBpart216
  %127 = phi i8* [ %99, %originalBBpart216 ], [ %117, %originalBBpart220 ], !dbg !1643
  %128 = load i32, i32* @x.21
  %129 = load i32, i32* @y.22
  %130 = sub i32 %128, 1
  %131 = mul i32 %128, %130
  %132 = urem i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = icmp slt i32 %129, 10
  %135 = or i1 %133, %134
  br i1 %135, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %126, %originalBB22alteredBB
  store i8* %127, i8** %15, align 8, !dbg !1642
  %136 = load i8*, i8** %15, align 8, !dbg !1647
  %137 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1647
  %138 = call i32 @fputs_unlocked(i8* %136, %struct._IO_FILE* %137), !dbg !1647
  %139 = load i8, i8* %14, align 1, !dbg !1648
  %140 = trunc i8 %139 to i1, !dbg !1648
  %141 = load i32, i32* @x.21
  %142 = load i32, i32* @y.22
  %143 = sub i32 %141, 1
  %144 = mul i32 %141, %143
  %145 = urem i32 %144, 2
  %146 = icmp eq i32 %145, 0
  %147 = icmp slt i32 %142, 10
  %148 = or i1 %146, %147
  br i1 %148, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  ret i1 %140, !dbg !1649

originalBBalteredBB:                              ; preds = %originalBB, %2
  %149 = alloca i32, align 4
  %150 = alloca i8, align 1
  %151 = alloca %struct.group*, align 8
  %152 = alloca i8, align 1
  %153 = alloca i8*, align 8
  store i32 %0, i32* %149, align 4
  call void @llvm.dbg.declare(metadata i32* %149, metadata !1650, metadata !DIExpression()), !dbg !1608
  %154 = zext i1 %1 to i8
  store i8 %154, i8* %150, align 1
  call void @llvm.dbg.declare(metadata i8* %150, metadata !1657, metadata !DIExpression()), !dbg !1610
  call void @llvm.dbg.declare(metadata %struct.group** %151, metadata !1658, metadata !DIExpression()), !dbg !1619
  store %struct.group* null, %struct.group** %151, align 8, !dbg !1619
  call void @llvm.dbg.declare(metadata i8* %152, metadata !1666, metadata !DIExpression()), !dbg !1621
  store i8 1, i8* %152, align 1, !dbg !1621
  %155 = load i8, i8* %150, align 1, !dbg !1622
  %156 = trunc i8 %155 to i1, !dbg !1622
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %27
  %157 = load i32, i32* %11, align 4, !dbg !1625
  %158 = call %struct.group* @getgrgid(i32 %157), !dbg !1627
  store %struct.group* %158, %struct.group** %13, align 8, !dbg !1628
  %159 = load %struct.group*, %struct.group** %13, align 8, !dbg !1629
  %160 = icmp eq %struct.group* %159, null, !dbg !1631
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %48
  %161 = call i8* @gettext(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.2.63, i64 0, i64 0)) #10, !dbg !1633
  %162 = load i32, i32* %11, align 4, !dbg !1635
  %163 = zext i32 %162 to i64, !dbg !1636
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %161, i64 %163), !dbg !1637
  store i8 0, i8* %14, align 1, !dbg !1638
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %68
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %88
  %164 = load %struct.group*, %struct.group** %13, align 8, !dbg !1644
  %165 = getelementptr inbounds %struct.group, %struct.group* %164, i32 0, i32 0, !dbg !1645
  %166 = load i8*, i8** %165, align 8, !dbg !1645
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %108
  %167 = call i8* @gidtostr_ptr.64(i32* %11), !dbg !1646
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %126
  store i8* %127, i8** %15, align 8, !dbg !1642
  %168 = load i8*, i8** %15, align 8, !dbg !1647
  %169 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1647
  %170 = call i32 @fputs_unlocked(i8* %168, %struct._IO_FILE* %169), !dbg !1647
  %171 = load i8, i8* %14, align 1, !dbg !1648
  %172 = trunc i8 %171 to i1, !dbg !1648
  br label %originalBB22
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @gidtostr_ptr.64(i32*) #4 !dbg !80 {
  %2 = load i32, i32* @x.23
  %3 = load i32, i32* @y.24
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i32*, align 8
  store i32* %0, i32** %10, align 8
  call void @llvm.dbg.declare(metadata i32** %10, metadata !1667, metadata !DIExpression()), !dbg !1668
  %11 = load i32*, i32** %10, align 8, !dbg !1669
  %12 = load i32, i32* %11, align 4, !dbg !1670
  %13 = zext i32 %12 to i64, !dbg !1670
  %14 = call i8* @umaxtostr(i64 %13, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @gidtostr_ptr.buf.65, i64 0, i64 0)), !dbg !1671
  %15 = load i32, i32* @x.23
  %16 = load i32, i32* @y.24
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i8* %14, !dbg !1672

originalBBalteredBB:                              ; preds = %originalBB, %1
  %23 = alloca i32*, align 8
  store i32* %0, i32** %23, align 8
  call void @llvm.dbg.declare(metadata i32** %23, metadata !1673, metadata !DIExpression()), !dbg !1668
  %24 = load i32*, i32** %23, align 8, !dbg !1669
  %25 = load i32, i32* %24, align 4, !dbg !1670
  %26 = zext i32 %25 to i64, !dbg !1670
  %27 = call i8* @umaxtostr(i64 %26, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @gidtostr_ptr.buf.65, i64 0, i64 0)), !dbg !1671
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @close_stdout() #4 !dbg !1679 {
  %1 = load i32, i32* @x.25
  %2 = load i32, i32* @y.26
  %3 = sub i32 %1, 1
  %4 = mul i32 %1, %3
  %5 = urem i32 %4, 2
  %6 = icmp eq i32 %5, 0
  %7 = icmp slt i32 %2, 10
  %8 = or i1 %6, %7
  br i1 %8, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %0, %originalBBalteredBB
  %9 = alloca i8*, align 8
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1682
  %11 = call i32 @close_stream(%struct._IO_FILE* %10), !dbg !1684
  %12 = icmp ne i32 %11, 0, !dbg !1685
  %13 = load i32, i32* @x.25
  %14 = load i32, i32* @y.26
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %12, label %21, label %124, !dbg !1686

21:                                               ; preds = %originalBBpart2
  %22 = load i32, i32* @x.25
  %23 = load i32, i32* @y.26
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %21, %originalBB1alteredBB
  %30 = load i8, i8* @ignore_EPIPE, align 1, !dbg !1687
  %31 = trunc i8 %30 to i1, !dbg !1687
  %32 = load i32, i32* @x.25
  %33 = load i32, i32* @y.26
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %31, label %40, label %60, !dbg !1688

40:                                               ; preds = %originalBBpart24
  %41 = load i32, i32* @x.25
  %42 = load i32, i32* @y.26
  %43 = sub i32 %41, 1
  %44 = mul i32 %41, %43
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %46, %47
  br i1 %48, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %40, %originalBB6alteredBB
  %49 = call i32* @__errno_location() #15, !dbg !1689
  %50 = load i32, i32* %49, align 4, !dbg !1689
  %51 = icmp eq i32 %50, 32, !dbg !1690
  %52 = load i32, i32* @x.25
  %53 = load i32, i32* @y.26
  %54 = sub i32 %52, 1
  %55 = mul i32 %52, %54
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %53, 10
  %59 = or i1 %57, %58
  br i1 %59, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %51, label %124, label %60, !dbg !1691

60:                                               ; preds = %originalBBpart28, %originalBBpart24
  call void @llvm.dbg.declare(metadata i8** %9, metadata !1692, metadata !DIExpression()), !dbg !1694
  %61 = load i32, i32* @x.25
  %62 = load i32, i32* @y.26
  %63 = sub i32 %61, 1
  %64 = mul i32 %61, %63
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %62, 10
  %68 = or i1 %66, %67
  br i1 %68, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %60, %originalBB10alteredBB
  %69 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.71, i64 0, i64 0)) #10, !dbg !1695
  store i8* %69, i8** %9, align 8, !dbg !1694
  %70 = load i8*, i8** @file_name, align 8, !dbg !1696
  %71 = icmp ne i8* %70, null, !dbg !1696
  %72 = load i32, i32* @x.25
  %73 = load i32, i32* @y.26
  %74 = sub i32 %72, 1
  %75 = mul i32 %72, %74
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %73, 10
  %79 = or i1 %77, %78
  br i1 %79, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %71, label %80, label %102, !dbg !1698

80:                                               ; preds = %originalBBpart212
  %81 = load i32, i32* @x.25
  %82 = load i32, i32* @y.26
  %83 = sub i32 %81, 1
  %84 = mul i32 %81, %83
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %82, 10
  %88 = or i1 %86, %87
  br i1 %88, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %80, %originalBB14alteredBB
  %89 = call i32* @__errno_location() #15, !dbg !1699
  %90 = load i32, i32* %89, align 4, !dbg !1699
  %91 = load i8*, i8** @file_name, align 8, !dbg !1700
  %92 = call i8* @quotearg_colon(i8* %91), !dbg !1701
  %93 = load i8*, i8** %9, align 8, !dbg !1702
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %90, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.72, i64 0, i64 0), i8* %92, i8* %93), !dbg !1703
  %94 = load i32, i32* @x.25
  %95 = load i32, i32* @y.26
  %96 = sub i32 %94, 1
  %97 = mul i32 %94, %96
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %95, 10
  %101 = or i1 %99, %100
  br i1 %101, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %106, !dbg !1703

102:                                              ; preds = %originalBBpart212
  %103 = call i32* @__errno_location() #15, !dbg !1704
  %104 = load i32, i32* %103, align 4, !dbg !1704
  %105 = load i8*, i8** %9, align 8, !dbg !1705
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %104, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2.73, i64 0, i64 0), i8* %105), !dbg !1706
  br label %106

106:                                              ; preds = %102, %originalBBpart216
  %107 = load i32, i32* @x.25
  %108 = load i32, i32* @y.26
  %109 = sub i32 %107, 1
  %110 = mul i32 %107, %109
  %111 = urem i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = icmp slt i32 %108, 10
  %114 = or i1 %112, %113
  br i1 %114, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %106, %originalBB18alteredBB
  %115 = load volatile i32, i32* @exit_failure, align 4, !dbg !1707
  call void @_exit(i32 %115) #14, !dbg !1708
  %116 = load i32, i32* @x.25
  %117 = load i32, i32* @y.26
  %118 = sub i32 %116, 1
  %119 = mul i32 %116, %118
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %117, 10
  %123 = or i1 %121, %122
  br i1 %123, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  unreachable, !dbg !1708

124:                                              ; preds = %originalBBpart28, %originalBBpart2
  %125 = load i32, i32* @x.25
  %126 = load i32, i32* @y.26
  %127 = sub i32 %125, 1
  %128 = mul i32 %125, %127
  %129 = urem i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = icmp slt i32 %126, 10
  %132 = or i1 %130, %131
  br i1 %132, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %124, %originalBB22alteredBB
  %133 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1709
  %134 = call i32 @close_stream(%struct._IO_FILE* %133), !dbg !1711
  %135 = icmp ne i32 %134, 0, !dbg !1712
  %136 = load i32, i32* @x.25
  %137 = load i32, i32* @y.26
  %138 = sub i32 %136, 1
  %139 = mul i32 %136, %138
  %140 = urem i32 %139, 2
  %141 = icmp eq i32 %140, 0
  %142 = icmp slt i32 %137, 10
  %143 = or i1 %141, %142
  br i1 %143, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br i1 %135, label %144, label %162, !dbg !1713

144:                                              ; preds = %originalBBpart224
  %145 = load i32, i32* @x.25
  %146 = load i32, i32* @y.26
  %147 = sub i32 %145, 1
  %148 = mul i32 %145, %147
  %149 = urem i32 %148, 2
  %150 = icmp eq i32 %149, 0
  %151 = icmp slt i32 %146, 10
  %152 = or i1 %150, %151
  br i1 %152, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %144, %originalBB26alteredBB
  %153 = load volatile i32, i32* @exit_failure, align 4, !dbg !1714
  call void @_exit(i32 %153) #14, !dbg !1715
  %154 = load i32, i32* @x.25
  %155 = load i32, i32* @y.26
  %156 = sub i32 %154, 1
  %157 = mul i32 %154, %156
  %158 = urem i32 %157, 2
  %159 = icmp eq i32 %158, 0
  %160 = icmp slt i32 %155, 10
  %161 = or i1 %159, %160
  br i1 %161, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  unreachable, !dbg !1715

162:                                              ; preds = %originalBBpart224
  %163 = load i32, i32* @x.25
  %164 = load i32, i32* @y.26
  %165 = sub i32 %163, 1
  %166 = mul i32 %163, %165
  %167 = urem i32 %166, 2
  %168 = icmp eq i32 %167, 0
  %169 = icmp slt i32 %164, 10
  %170 = or i1 %168, %169
  br i1 %170, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %162, %originalBB30alteredBB
  %171 = load i32, i32* @x.25
  %172 = load i32, i32* @y.26
  %173 = sub i32 %171, 1
  %174 = mul i32 %171, %173
  %175 = urem i32 %174, 2
  %176 = icmp eq i32 %175, 0
  %177 = icmp slt i32 %172, 10
  %178 = or i1 %176, %177
  br i1 %178, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  ret void, !dbg !1716

originalBBalteredBB:                              ; preds = %originalBB, %0
  %179 = alloca i8*, align 8
  %180 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1682
  %181 = call i32 @close_stream(%struct._IO_FILE* %180), !dbg !1684
  %182 = icmp ne i32 %181, 0, !dbg !1685
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %21
  %183 = load i8, i8* @ignore_EPIPE, align 1, !dbg !1687
  %184 = trunc i8 %183 to i1, !dbg !1687
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %40
  %185 = call i32* @__errno_location() #15, !dbg !1689
  %186 = load i32, i32* %185, align 4, !dbg !1689
  %187 = icmp eq i32 %186, 32, !dbg !1690
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %60
  %188 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.71, i64 0, i64 0)) #10, !dbg !1695
  store i8* %188, i8** %9, align 8, !dbg !1694
  %189 = load i8*, i8** @file_name, align 8, !dbg !1696
  %190 = icmp ne i8* %189, null, !dbg !1696
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %80
  %191 = call i32* @__errno_location() #15, !dbg !1699
  %192 = load i32, i32* %191, align 4, !dbg !1699
  %193 = load i8*, i8** @file_name, align 8, !dbg !1700
  %194 = call i8* @quotearg_colon(i8* %193), !dbg !1701
  %195 = load i8*, i8** %9, align 8, !dbg !1702
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %192, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.72, i64 0, i64 0), i8* %194, i8* %195), !dbg !1703
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %106
  %196 = load volatile i32, i32* @exit_failure, align 4, !dbg !1707
  call void @_exit(i32 %196) #14, !dbg !1708
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %124
  %197 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1709
  %198 = call i32 @close_stream(%struct._IO_FILE* %197), !dbg !1711
  %199 = icmp ne i32 %198, 0, !dbg !1712
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %144
  %200 = load volatile i32, i32* @exit_failure, align 4, !dbg !1714
  call void @_exit(i32 %200) #14, !dbg !1715
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %162
  br label %originalBB30
}

; Function Attrs: noreturn
declare dso_local void @_exit(i32) #9

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @umaxtostr(i64, i8*) #4 !dbg !1717 {
  %3 = load i32, i32* @x.27
  %4 = load i32, i32* @y.28
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca i64, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i8*, align 8
  store i64 %0, i64* %11, align 8
  call void @llvm.dbg.declare(metadata i64* %11, metadata !1721, metadata !DIExpression()), !dbg !1722
  store i8* %1, i8** %12, align 8
  call void @llvm.dbg.declare(metadata i8** %12, metadata !1723, metadata !DIExpression()), !dbg !1724
  call void @llvm.dbg.declare(metadata i8** %13, metadata !1725, metadata !DIExpression()), !dbg !1726
  %14 = load i8*, i8** %12, align 8, !dbg !1727
  %15 = getelementptr inbounds i8, i8* %14, i64 20, !dbg !1728
  store i8* %15, i8** %13, align 8, !dbg !1726
  %16 = load i8*, i8** %13, align 8, !dbg !1729
  store i8 0, i8* %16, align 1, !dbg !1730
  %17 = load i64, i64* %11, align 8, !dbg !1731
  %18 = icmp ult i64 %17, 0, !dbg !1733
  %19 = load i32, i32* @x.27
  %20 = load i32, i32* @y.28
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %18, label %27, label %106, !dbg !1734

27:                                               ; preds = %originalBBpart2
  %28 = load i32, i32* @x.27
  %29 = load i32, i32* @y.28
  %30 = sub i32 %28, 1
  %31 = mul i32 %28, %30
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %33, %34
  br i1 %35, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %27, %originalBB1alteredBB
  %36 = load i32, i32* @x.27
  %37 = load i32, i32* @y.28
  %38 = sub i32 %36, 1
  %39 = mul i32 %36, %38
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %37, 10
  %43 = or i1 %41, %42
  br i1 %43, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %44, !dbg !1735

44:                                               ; preds = %originalBBpart232, %originalBBpart24
  %45 = load i32, i32* @x.27
  %46 = load i32, i32* @y.28
  %47 = sub i32 %45, 1
  %48 = mul i32 %45, %47
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %50, %51
  br i1 %52, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %44, %originalBB6alteredBB
  %53 = load i64, i64* %11, align 8, !dbg !1737
  %54 = urem i64 %53, 10, !dbg !1738
  %55 = sub i64 48, %54, !dbg !1739
  %56 = trunc i64 %55 to i8, !dbg !1740
  %57 = load i8*, i8** %13, align 8, !dbg !1741
  %58 = getelementptr inbounds i8, i8* %57, i32 -1, !dbg !1741
  store i8* %58, i8** %13, align 8, !dbg !1741
  store i8 %56, i8* %58, align 1, !dbg !1742
  %59 = load i32, i32* @x.27
  %60 = load i32, i32* @y.28
  %61 = sub i32 %59, 1
  %62 = mul i32 %59, %61
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %60, 10
  %66 = or i1 %64, %65
  br i1 %66, label %originalBBpart218, label %originalBB6alteredBB

originalBBpart218:                                ; preds = %originalBB6
  br label %67, !dbg !1743

67:                                               ; preds = %originalBBpart218
  %68 = load i32, i32* @x.27
  %69 = load i32, i32* @y.28
  %70 = sub i32 %68, 1
  %71 = mul i32 %68, %70
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %69, 10
  %75 = or i1 %73, %74
  br i1 %75, label %originalBB20, label %originalBB20alteredBB

originalBB20:                                     ; preds = %67, %originalBB20alteredBB
  %76 = load i64, i64* %11, align 8, !dbg !1744
  %77 = udiv i64 %76, 10, !dbg !1744
  store i64 %77, i64* %11, align 8, !dbg !1744
  %78 = icmp ne i64 %77, 0, !dbg !1745
  %79 = load i32, i32* @x.27
  %80 = load i32, i32* @y.28
  %81 = sub i32 %79, 1
  %82 = mul i32 %79, %81
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %80, 10
  %86 = or i1 %84, %85
  br i1 %86, label %originalBBpart232, label %originalBB20alteredBB

originalBBpart232:                                ; preds = %originalBB20
  br i1 %78, label %44, label %87, !dbg !1743, !llvm.loop !1746

87:                                               ; preds = %originalBBpart232
  %88 = load i32, i32* @x.27
  %89 = load i32, i32* @y.28
  %90 = sub i32 %88, 1
  %91 = mul i32 %88, %90
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %89, 10
  %95 = or i1 %93, %94
  br i1 %95, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %87, %originalBB34alteredBB
  %96 = load i8*, i8** %13, align 8, !dbg !1748
  %97 = getelementptr inbounds i8, i8* %96, i32 -1, !dbg !1748
  store i8* %97, i8** %13, align 8, !dbg !1748
  store i8 45, i8* %97, align 1, !dbg !1749
  %98 = load i32, i32* @x.27
  %99 = load i32, i32* @y.28
  %100 = sub i32 %98, 1
  %101 = mul i32 %98, %100
  %102 = urem i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = icmp slt i32 %99, 10
  %105 = or i1 %103, %104
  br i1 %105, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  br label %167, !dbg !1750

106:                                              ; preds = %originalBBpart2
  %107 = load i32, i32* @x.27
  %108 = load i32, i32* @y.28
  %109 = sub i32 %107, 1
  %110 = mul i32 %107, %109
  %111 = urem i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = icmp slt i32 %108, 10
  %114 = or i1 %112, %113
  br i1 %114, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %106, %originalBB38alteredBB
  %115 = load i32, i32* @x.27
  %116 = load i32, i32* @y.28
  %117 = sub i32 %115, 1
  %118 = mul i32 %115, %117
  %119 = urem i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = icmp slt i32 %116, 10
  %122 = or i1 %120, %121
  br i1 %122, label %originalBBpart240, label %originalBB38alteredBB

originalBBpart240:                                ; preds = %originalBB38
  br label %123, !dbg !1751

123:                                              ; preds = %146, %originalBBpart240
  %124 = load i32, i32* @x.27
  %125 = load i32, i32* @y.28
  %126 = sub i32 %124, 1
  %127 = mul i32 %124, %126
  %128 = urem i32 %127, 2
  %129 = icmp eq i32 %128, 0
  %130 = icmp slt i32 %125, 10
  %131 = or i1 %129, %130
  br i1 %131, label %originalBB42, label %originalBB42alteredBB

originalBB42:                                     ; preds = %123, %originalBB42alteredBB
  %132 = load i64, i64* %11, align 8, !dbg !1753
  %133 = urem i64 %132, 10, !dbg !1754
  %134 = add i64 48, %133, !dbg !1755
  %135 = trunc i64 %134 to i8, !dbg !1756
  %136 = load i8*, i8** %13, align 8, !dbg !1757
  %137 = getelementptr inbounds i8, i8* %136, i32 -1, !dbg !1757
  store i8* %137, i8** %13, align 8, !dbg !1757
  store i8 %135, i8* %137, align 1, !dbg !1758
  %138 = load i32, i32* @x.27
  %139 = load i32, i32* @y.28
  %140 = sub i32 %138, 1
  %141 = mul i32 %138, %140
  %142 = urem i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = icmp slt i32 %139, 10
  %145 = or i1 %143, %144
  br i1 %145, label %originalBBpart256, label %originalBB42alteredBB

originalBBpart256:                                ; preds = %originalBB42
  br label %146, !dbg !1759

146:                                              ; preds = %originalBBpart256
  %147 = load i64, i64* %11, align 8, !dbg !1760
  %148 = udiv i64 %147, 10, !dbg !1760
  store i64 %148, i64* %11, align 8, !dbg !1760
  %149 = icmp ne i64 %148, 0, !dbg !1761
  br i1 %149, label %123, label %150, !dbg !1759, !llvm.loop !1762

150:                                              ; preds = %146
  %151 = load i32, i32* @x.27
  %152 = load i32, i32* @y.28
  %153 = sub i32 %151, 1
  %154 = mul i32 %151, %153
  %155 = urem i32 %154, 2
  %156 = icmp eq i32 %155, 0
  %157 = icmp slt i32 %152, 10
  %158 = or i1 %156, %157
  br i1 %158, label %originalBB58, label %originalBB58alteredBB

originalBB58:                                     ; preds = %150, %originalBB58alteredBB
  %159 = load i32, i32* @x.27
  %160 = load i32, i32* @y.28
  %161 = sub i32 %159, 1
  %162 = mul i32 %159, %161
  %163 = urem i32 %162, 2
  %164 = icmp eq i32 %163, 0
  %165 = icmp slt i32 %160, 10
  %166 = or i1 %164, %165
  br i1 %166, label %originalBBpart260, label %originalBB58alteredBB

originalBBpart260:                                ; preds = %originalBB58
  br label %167

167:                                              ; preds = %originalBBpart260, %originalBBpart236
  %168 = load i32, i32* @x.27
  %169 = load i32, i32* @y.28
  %170 = sub i32 %168, 1
  %171 = mul i32 %168, %170
  %172 = urem i32 %171, 2
  %173 = icmp eq i32 %172, 0
  %174 = icmp slt i32 %169, 10
  %175 = or i1 %173, %174
  br i1 %175, label %originalBB62, label %originalBB62alteredBB

originalBB62:                                     ; preds = %167, %originalBB62alteredBB
  %176 = load i8*, i8** %13, align 8, !dbg !1764
  %177 = load i32, i32* @x.27
  %178 = load i32, i32* @y.28
  %179 = sub i32 %177, 1
  %180 = mul i32 %177, %179
  %181 = urem i32 %180, 2
  %182 = icmp eq i32 %181, 0
  %183 = icmp slt i32 %178, 10
  %184 = or i1 %182, %183
  br i1 %184, label %originalBBpart264, label %originalBB62alteredBB

originalBBpart264:                                ; preds = %originalBB62
  ret i8* %176, !dbg !1765

originalBBalteredBB:                              ; preds = %originalBB, %2
  %185 = alloca i64, align 8
  %186 = alloca i8*, align 8
  %187 = alloca i8*, align 8
  store i64 %0, i64* %185, align 8
  call void @llvm.dbg.declare(metadata i64* %185, metadata !1766, metadata !DIExpression()), !dbg !1722
  store i8* %1, i8** %186, align 8
  call void @llvm.dbg.declare(metadata i8** %186, metadata !1769, metadata !DIExpression()), !dbg !1724
  call void @llvm.dbg.declare(metadata i8** %187, metadata !1770, metadata !DIExpression()), !dbg !1726
  %188 = load i8*, i8** %186, align 8, !dbg !1727
  %189 = getelementptr inbounds i8, i8* %188, i64 20, !dbg !1728
  store i8* %189, i8** %187, align 8, !dbg !1726
  %190 = load i8*, i8** %187, align 8, !dbg !1729
  store i8 0, i8* %190, align 1, !dbg !1730
  %191 = load i64, i64* %185, align 8, !dbg !1731
  %192 = icmp ult i64 %191, 0, !dbg !1733
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %27
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %44
  %193 = load i64, i64* %11, align 8, !dbg !1737
  %_ = sub i64 0, %193
  %gen = add i64 %_, 10
  %194 = urem i64 %193, 10, !dbg !1738
  %_7 = shl i64 48, %194
  %_8 = sub i64 0, 48
  %gen9 = add i64 %_8, %194
  %_10 = sub i64 0, 48
  %gen11 = add i64 %_10, %194
  %_12 = shl i64 48, %194
  %_13 = sub i64 48, %194
  %gen14 = mul i64 %_13, %194
  %_15 = sub i64 0, 48
  %gen16 = add i64 %_15, %194
  %195 = sub i64 48, %194, !dbg !1739
  %196 = trunc i64 %195 to i8, !dbg !1740
  %197 = load i8*, i8** %13, align 8, !dbg !1741
  %198 = getelementptr inbounds i8, i8* %197, i32 -1, !dbg !1741
  store i8* %198, i8** %13, align 8, !dbg !1741
  store i8 %196, i8* %198, align 1, !dbg !1742
  br label %originalBB6

originalBB20alteredBB:                            ; preds = %originalBB20, %67
  %199 = load i64, i64* %11, align 8, !dbg !1744
  %_21 = shl i64 %199, 10
  %_22 = sub i64 %199, 10
  %gen23 = mul i64 %_22, 10
  %_24 = sub i64 0, %199
  %gen25 = add i64 %_24, 10
  %_26 = sub i64 %199, 10
  %gen27 = mul i64 %_26, 10
  %_28 = shl i64 %199, 10
  %_29 = shl i64 %199, 10
  %_30 = shl i64 %199, 10
  %200 = udiv i64 %199, 10, !dbg !1744
  store i64 %200, i64* %11, align 8, !dbg !1744
  %201 = icmp ne i64 %200, 0, !dbg !1745
  br label %originalBB20

originalBB34alteredBB:                            ; preds = %originalBB34, %87
  %202 = load i8*, i8** %13, align 8, !dbg !1748
  %203 = getelementptr inbounds i8, i8* %202, i32 -1, !dbg !1748
  store i8* %203, i8** %13, align 8, !dbg !1748
  store i8 45, i8* %203, align 1, !dbg !1749
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %106
  br label %originalBB38

originalBB42alteredBB:                            ; preds = %originalBB42, %123
  %204 = load i64, i64* %11, align 8, !dbg !1753
  %_43 = shl i64 %204, 10
  %_44 = shl i64 %204, 10
  %_45 = sub i64 %204, 10
  %gen46 = mul i64 %_45, 10
  %_47 = shl i64 %204, 10
  %_48 = sub i64 0, %204
  %gen49 = add i64 %_48, 10
  %_50 = sub i64 0, %204
  %gen51 = add i64 %_50, 10
  %_52 = shl i64 %204, 10
  %205 = urem i64 %204, 10, !dbg !1754
  %_53 = shl i64 48, %205
  %_54 = shl i64 48, %205
  %206 = add i64 48, %205, !dbg !1755
  %207 = trunc i64 %206 to i8, !dbg !1756
  %208 = load i8*, i8** %13, align 8, !dbg !1757
  %209 = getelementptr inbounds i8, i8* %208, i32 -1, !dbg !1757
  store i8* %209, i8** %13, align 8, !dbg !1757
  store i8 %207, i8* %209, align 1, !dbg !1758
  br label %originalBB42

originalBB58alteredBB:                            ; preds = %originalBB58, %150
  br label %originalBB58

originalBB62alteredBB:                            ; preds = %originalBB62, %167
  %210 = load i8*, i8** %13, align 8, !dbg !1764
  br label %originalBB62
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @set_program_name(i8*) #4 !dbg !1771 {
  %2 = load i32, i32* @x.29
  %3 = load i32, i32* @y.30
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  store i8* %0, i8** %10, align 8
  call void @llvm.dbg.declare(metadata i8** %10, metadata !1772, metadata !DIExpression()), !dbg !1773
  call void @llvm.dbg.declare(metadata i8** %11, metadata !1774, metadata !DIExpression()), !dbg !1775
  call void @llvm.dbg.declare(metadata i8** %12, metadata !1776, metadata !DIExpression()), !dbg !1777
  %13 = load i8*, i8** %10, align 8, !dbg !1778
  %14 = icmp eq i8* %13, null, !dbg !1780
  %15 = load i32, i32* @x.29
  %16 = load i32, i32* @y.30
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %14, label %23, label %42, !dbg !1781

23:                                               ; preds = %originalBBpart2
  %24 = load i32, i32* @x.29
  %25 = load i32, i32* @y.30
  %26 = sub i32 %24, 1
  %27 = mul i32 %24, %26
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %29, %30
  br i1 %31, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %23, %originalBB1alteredBB
  %32 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1782
  %33 = call i32 @fputs(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.80, i64 0, i64 0), %struct._IO_FILE* %32), !dbg !1784
  call void @abort() #12, !dbg !1785
  %34 = load i32, i32* @x.29
  %35 = load i32, i32* @y.30
  %36 = sub i32 %34, 1
  %37 = mul i32 %34, %36
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %39, %40
  br i1 %41, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  unreachable, !dbg !1785

42:                                               ; preds = %originalBBpart2
  %43 = load i32, i32* @x.29
  %44 = load i32, i32* @y.30
  %45 = sub i32 %43, 1
  %46 = mul i32 %43, %45
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %48, %49
  br i1 %50, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %42, %originalBB6alteredBB
  %51 = load i8*, i8** %10, align 8, !dbg !1786
  %52 = call i8* @strrchr(i8* %51, i32 47) #13, !dbg !1787
  store i8* %52, i8** %11, align 8, !dbg !1788
  %53 = load i8*, i8** %11, align 8, !dbg !1789
  %54 = icmp ne i8* %53, null, !dbg !1790
  %55 = load i32, i32* @x.29
  %56 = load i32, i32* @y.30
  %57 = sub i32 %55, 1
  %58 = mul i32 %55, %57
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %56, 10
  %62 = or i1 %60, %61
  br i1 %62, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %54, label %63, label %66, !dbg !1789

63:                                               ; preds = %originalBBpart28
  %64 = load i8*, i8** %11, align 8, !dbg !1791
  %65 = getelementptr inbounds i8, i8* %64, i64 1, !dbg !1792
  br label %84, !dbg !1789

66:                                               ; preds = %originalBBpart28
  %67 = load i32, i32* @x.29
  %68 = load i32, i32* @y.30
  %69 = sub i32 %67, 1
  %70 = mul i32 %67, %69
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %68, 10
  %74 = or i1 %72, %73
  br i1 %74, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %66, %originalBB10alteredBB
  %75 = load i8*, i8** %10, align 8, !dbg !1793
  %76 = load i32, i32* @x.29
  %77 = load i32, i32* @y.30
  %78 = sub i32 %76, 1
  %79 = mul i32 %76, %78
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %77, 10
  %83 = or i1 %81, %82
  br i1 %83, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %84, !dbg !1789

84:                                               ; preds = %originalBBpart212, %63
  %85 = phi i8* [ %65, %63 ], [ %75, %originalBBpart212 ], !dbg !1789
  %86 = load i32, i32* @x.29
  %87 = load i32, i32* @y.30
  %88 = sub i32 %86, 1
  %89 = mul i32 %86, %88
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %87, 10
  %93 = or i1 %91, %92
  br i1 %93, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %84, %originalBB14alteredBB
  store i8* %85, i8** %12, align 8, !dbg !1794
  %94 = load i8*, i8** %12, align 8, !dbg !1795
  %95 = load i8*, i8** %10, align 8, !dbg !1797
  %96 = ptrtoint i8* %94 to i64, !dbg !1798
  %97 = ptrtoint i8* %95 to i64, !dbg !1798
  %98 = sub i64 %96, %97, !dbg !1798
  %99 = icmp sge i64 %98, 7, !dbg !1799
  %100 = load i32, i32* @x.29
  %101 = load i32, i32* @y.30
  %102 = sub i32 %100, 1
  %103 = mul i32 %100, %102
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %101, 10
  %107 = or i1 %105, %106
  br i1 %107, label %originalBBpart217, label %originalBB14alteredBB

originalBBpart217:                                ; preds = %originalBB14
  br i1 %99, label %108, label %187, !dbg !1800

108:                                              ; preds = %originalBBpart217
  %109 = load i32, i32* @x.29
  %110 = load i32, i32* @y.30
  %111 = sub i32 %109, 1
  %112 = mul i32 %109, %111
  %113 = urem i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = icmp slt i32 %110, 10
  %116 = or i1 %114, %115
  br i1 %116, label %originalBB19, label %originalBB19alteredBB

originalBB19:                                     ; preds = %108, %originalBB19alteredBB
  %117 = load i8*, i8** %12, align 8, !dbg !1801
  %118 = getelementptr inbounds i8, i8* %117, i64 -7, !dbg !1802
  %119 = call i32 @strncmp(i8* %118, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.81, i64 0, i64 0), i64 7) #13, !dbg !1803
  %120 = icmp eq i32 %119, 0, !dbg !1804
  %121 = load i32, i32* @x.29
  %122 = load i32, i32* @y.30
  %123 = sub i32 %121, 1
  %124 = mul i32 %121, %123
  %125 = urem i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %122, 10
  %128 = or i1 %126, %127
  br i1 %128, label %originalBBpart221, label %originalBB19alteredBB

originalBBpart221:                                ; preds = %originalBB19
  br i1 %120, label %129, label %187, !dbg !1805

129:                                              ; preds = %originalBBpart221
  %130 = load i32, i32* @x.29
  %131 = load i32, i32* @y.30
  %132 = sub i32 %130, 1
  %133 = mul i32 %130, %132
  %134 = urem i32 %133, 2
  %135 = icmp eq i32 %134, 0
  %136 = icmp slt i32 %131, 10
  %137 = or i1 %135, %136
  br i1 %137, label %originalBB23, label %originalBB23alteredBB

originalBB23:                                     ; preds = %129, %originalBB23alteredBB
  %138 = load i8*, i8** %12, align 8, !dbg !1806
  store i8* %138, i8** %10, align 8, !dbg !1808
  %139 = load i8*, i8** %12, align 8, !dbg !1809
  %140 = call i32 @strncmp(i8* %139, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.82, i64 0, i64 0), i64 3) #13, !dbg !1811
  %141 = icmp eq i32 %140, 0, !dbg !1812
  %142 = load i32, i32* @x.29
  %143 = load i32, i32* @y.30
  %144 = sub i32 %142, 1
  %145 = mul i32 %142, %144
  %146 = urem i32 %145, 2
  %147 = icmp eq i32 %146, 0
  %148 = icmp slt i32 %143, 10
  %149 = or i1 %147, %148
  br i1 %149, label %originalBBpart225, label %originalBB23alteredBB

originalBBpart225:                                ; preds = %originalBB23
  br i1 %141, label %150, label %170, !dbg !1813

150:                                              ; preds = %originalBBpart225
  %151 = load i32, i32* @x.29
  %152 = load i32, i32* @y.30
  %153 = sub i32 %151, 1
  %154 = mul i32 %151, %153
  %155 = urem i32 %154, 2
  %156 = icmp eq i32 %155, 0
  %157 = icmp slt i32 %152, 10
  %158 = or i1 %156, %157
  br i1 %158, label %originalBB27, label %originalBB27alteredBB

originalBB27:                                     ; preds = %150, %originalBB27alteredBB
  %159 = load i8*, i8** %12, align 8, !dbg !1814
  %160 = getelementptr inbounds i8, i8* %159, i64 3, !dbg !1816
  store i8* %160, i8** %10, align 8, !dbg !1817
  %161 = load i8*, i8** %10, align 8, !dbg !1818
  store i8* %161, i8** @program_invocation_short_name, align 8, !dbg !1819
  %162 = load i32, i32* @x.29
  %163 = load i32, i32* @y.30
  %164 = sub i32 %162, 1
  %165 = mul i32 %162, %164
  %166 = urem i32 %165, 2
  %167 = icmp eq i32 %166, 0
  %168 = icmp slt i32 %163, 10
  %169 = or i1 %167, %168
  br i1 %169, label %originalBBpart229, label %originalBB27alteredBB

originalBBpart229:                                ; preds = %originalBB27
  br label %170, !dbg !1820

170:                                              ; preds = %originalBBpart229, %originalBBpart225
  %171 = load i32, i32* @x.29
  %172 = load i32, i32* @y.30
  %173 = sub i32 %171, 1
  %174 = mul i32 %171, %173
  %175 = urem i32 %174, 2
  %176 = icmp eq i32 %175, 0
  %177 = icmp slt i32 %172, 10
  %178 = or i1 %176, %177
  br i1 %178, label %originalBB31, label %originalBB31alteredBB

originalBB31:                                     ; preds = %170, %originalBB31alteredBB
  %179 = load i32, i32* @x.29
  %180 = load i32, i32* @y.30
  %181 = sub i32 %179, 1
  %182 = mul i32 %179, %181
  %183 = urem i32 %182, 2
  %184 = icmp eq i32 %183, 0
  %185 = icmp slt i32 %180, 10
  %186 = or i1 %184, %185
  br i1 %186, label %originalBBpart233, label %originalBB31alteredBB

originalBBpart233:                                ; preds = %originalBB31
  br label %187, !dbg !1821

187:                                              ; preds = %originalBBpart233, %originalBBpart221, %originalBBpart217
  %188 = load i32, i32* @x.29
  %189 = load i32, i32* @y.30
  %190 = sub i32 %188, 1
  %191 = mul i32 %188, %190
  %192 = urem i32 %191, 2
  %193 = icmp eq i32 %192, 0
  %194 = icmp slt i32 %189, 10
  %195 = or i1 %193, %194
  br i1 %195, label %originalBB35, label %originalBB35alteredBB

originalBB35:                                     ; preds = %187, %originalBB35alteredBB
  %196 = load i8*, i8** %10, align 8, !dbg !1822
  store i8* %196, i8** @program_name, align 8, !dbg !1823
  %197 = load i8*, i8** %10, align 8, !dbg !1824
  store i8* %197, i8** @program_invocation_name, align 8, !dbg !1825
  %198 = load i32, i32* @x.29
  %199 = load i32, i32* @y.30
  %200 = sub i32 %198, 1
  %201 = mul i32 %198, %200
  %202 = urem i32 %201, 2
  %203 = icmp eq i32 %202, 0
  %204 = icmp slt i32 %199, 10
  %205 = or i1 %203, %204
  br i1 %205, label %originalBBpart237, label %originalBB35alteredBB

originalBBpart237:                                ; preds = %originalBB35
  ret void, !dbg !1826

originalBBalteredBB:                              ; preds = %originalBB, %1
  %206 = alloca i8*, align 8
  %207 = alloca i8*, align 8
  %208 = alloca i8*, align 8
  store i8* %0, i8** %206, align 8
  call void @llvm.dbg.declare(metadata i8** %206, metadata !1827, metadata !DIExpression()), !dbg !1773
  call void @llvm.dbg.declare(metadata i8** %207, metadata !1833, metadata !DIExpression()), !dbg !1775
  call void @llvm.dbg.declare(metadata i8** %208, metadata !1834, metadata !DIExpression()), !dbg !1777
  %209 = load i8*, i8** %206, align 8, !dbg !1778
  %210 = icmp eq i8* %209, null, !dbg !1780
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %23
  %211 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1782
  %212 = call i32 @fputs(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.80, i64 0, i64 0), %struct._IO_FILE* %211), !dbg !1784
  call void @abort() #12, !dbg !1785
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %42
  %213 = load i8*, i8** %10, align 8, !dbg !1786
  %214 = call i8* @strrchr(i8* %213, i32 47) #13, !dbg !1787
  store i8* %214, i8** %11, align 8, !dbg !1788
  %215 = load i8*, i8** %11, align 8, !dbg !1789
  %216 = icmp ne i8* %215, null, !dbg !1790
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %66
  %217 = load i8*, i8** %10, align 8, !dbg !1793
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %84
  store i8* %85, i8** %12, align 8, !dbg !1794
  %218 = load i8*, i8** %12, align 8, !dbg !1795
  %219 = load i8*, i8** %10, align 8, !dbg !1797
  %220 = ptrtoint i8* %218 to i64, !dbg !1798
  %221 = ptrtoint i8* %219 to i64, !dbg !1798
  %_ = sub i64 %220, %221
  %gen = mul i64 %_, %221
  %_15 = shl i64 %220, %221
  %222 = sub i64 %220, %221, !dbg !1798
  %223 = icmp sge i64 %222, 7, !dbg !1799
  br label %originalBB14

originalBB19alteredBB:                            ; preds = %originalBB19, %108
  %224 = load i8*, i8** %12, align 8, !dbg !1801
  %225 = getelementptr inbounds i8, i8* %224, i64 -7, !dbg !1802
  %226 = call i32 @strncmp(i8* %225, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.81, i64 0, i64 0), i64 7) #13, !dbg !1803
  %227 = icmp eq i32 %226, 0, !dbg !1804
  br label %originalBB19

originalBB23alteredBB:                            ; preds = %originalBB23, %129
  %228 = load i8*, i8** %12, align 8, !dbg !1806
  store i8* %228, i8** %10, align 8, !dbg !1808
  %229 = load i8*, i8** %12, align 8, !dbg !1809
  %230 = call i32 @strncmp(i8* %229, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.82, i64 0, i64 0), i64 3) #13, !dbg !1811
  %231 = icmp eq i32 %230, 0, !dbg !1812
  br label %originalBB23

originalBB27alteredBB:                            ; preds = %originalBB27, %150
  %232 = load i8*, i8** %12, align 8, !dbg !1814
  %233 = getelementptr inbounds i8, i8* %232, i64 3, !dbg !1816
  store i8* %233, i8** %10, align 8, !dbg !1817
  %234 = load i8*, i8** %10, align 8, !dbg !1818
  store i8* %234, i8** @program_invocation_short_name, align 8, !dbg !1819
  br label %originalBB27

originalBB31alteredBB:                            ; preds = %originalBB31, %170
  br label %originalBB31

originalBB35alteredBB:                            ; preds = %originalBB35, %187
  %235 = load i8*, i8** %10, align 8, !dbg !1822
  store i8* %235, i8** @program_name, align 8, !dbg !1823
  %236 = load i8*, i8** %10, align 8, !dbg !1824
  store i8* %236, i8** @program_invocation_name, align 8, !dbg !1825
  br label %originalBB35
}

declare dso_local i32 @fputs(i8*, %struct._IO_FILE*) #3

; Function Attrs: noreturn nounwind
declare dso_local void @abort() #5

; Function Attrs: nounwind readonly
declare dso_local i8* @strrchr(i8*, i32) #7

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @set_char_quoting(%struct.quoting_options*, i8 signext, i32) #4 !dbg !1835 {
  %4 = load i32, i32* @x.31
  %5 = load i32, i32* @y.32
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca %struct.quoting_options*, align 8
  %13 = alloca i8, align 1
  %14 = alloca i32, align 4
  %15 = alloca i8, align 1
  %16 = alloca i32*, align 8
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  store %struct.quoting_options* %0, %struct.quoting_options** %12, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %12, metadata !1839, metadata !DIExpression()), !dbg !1840
  store i8 %1, i8* %13, align 1
  call void @llvm.dbg.declare(metadata i8* %13, metadata !1841, metadata !DIExpression()), !dbg !1842
  store i32 %2, i32* %14, align 4
  call void @llvm.dbg.declare(metadata i32* %14, metadata !1843, metadata !DIExpression()), !dbg !1844
  call void @llvm.dbg.declare(metadata i8* %15, metadata !1845, metadata !DIExpression()), !dbg !1846
  %19 = load i8, i8* %13, align 1, !dbg !1847
  store i8 %19, i8* %15, align 1, !dbg !1846
  call void @llvm.dbg.declare(metadata i32** %16, metadata !1848, metadata !DIExpression()), !dbg !1850
  %20 = load %struct.quoting_options*, %struct.quoting_options** %12, align 8, !dbg !1851
  %21 = icmp ne %struct.quoting_options* %20, null, !dbg !1851
  %22 = load i32, i32* @x.31
  %23 = load i32, i32* @y.32
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %21, label %30, label %48, !dbg !1851

30:                                               ; preds = %originalBBpart2
  %31 = load i32, i32* @x.31
  %32 = load i32, i32* @y.32
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %30, %originalBB1alteredBB
  %39 = load %struct.quoting_options*, %struct.quoting_options** %12, align 8, !dbg !1852
  %40 = load i32, i32* @x.31
  %41 = load i32, i32* @y.32
  %42 = sub i32 %40, 1
  %43 = mul i32 %40, %42
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %45, %46
  br i1 %47, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %65, !dbg !1851

48:                                               ; preds = %originalBBpart2
  %49 = load i32, i32* @x.31
  %50 = load i32, i32* @y.32
  %51 = sub i32 %49, 1
  %52 = mul i32 %49, %51
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %50, 10
  %56 = or i1 %54, %55
  br i1 %56, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %48, %originalBB6alteredBB
  %57 = load i32, i32* @x.31
  %58 = load i32, i32* @y.32
  %59 = sub i32 %57, 1
  %60 = mul i32 %57, %59
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %58, 10
  %64 = or i1 %62, %63
  br i1 %64, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %65, !dbg !1851

65:                                               ; preds = %originalBBpart28, %originalBBpart24
  %66 = phi %struct.quoting_options* [ %39, %originalBBpart24 ], [ @default_quoting_options, %originalBBpart28 ], !dbg !1851
  %67 = load i32, i32* @x.31
  %68 = load i32, i32* @y.32
  %69 = sub i32 %67, 1
  %70 = mul i32 %67, %69
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %68, 10
  %74 = or i1 %72, %73
  br i1 %74, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %65, %originalBB10alteredBB
  %75 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %66, i32 0, i32 2, !dbg !1853
  %76 = getelementptr inbounds [8 x i32], [8 x i32]* %75, i64 0, i64 0, !dbg !1854
  %77 = load i8, i8* %15, align 1, !dbg !1855
  %78 = zext i8 %77 to i64, !dbg !1855
  %79 = udiv i64 %78, 32, !dbg !1856
  %80 = getelementptr inbounds i32, i32* %76, i64 %79, !dbg !1857
  store i32* %80, i32** %16, align 8, !dbg !1850
  call void @llvm.dbg.declare(metadata i32* %17, metadata !1858, metadata !DIExpression()), !dbg !1859
  %81 = load i8, i8* %15, align 1, !dbg !1860
  %82 = zext i8 %81 to i64, !dbg !1860
  %83 = urem i64 %82, 32, !dbg !1861
  %84 = trunc i64 %83 to i32, !dbg !1860
  store i32 %84, i32* %17, align 4, !dbg !1859
  call void @llvm.dbg.declare(metadata i32* %18, metadata !1862, metadata !DIExpression()), !dbg !1863
  %85 = load i32*, i32** %16, align 8, !dbg !1864
  %86 = load i32, i32* %85, align 4, !dbg !1865
  %87 = load i32, i32* %17, align 4, !dbg !1866
  %88 = lshr i32 %86, %87, !dbg !1867
  %89 = and i32 %88, 1, !dbg !1868
  store i32 %89, i32* %18, align 4, !dbg !1863
  %90 = load i32, i32* %14, align 4, !dbg !1869
  %91 = and i32 %90, 1, !dbg !1870
  %92 = load i32, i32* %18, align 4, !dbg !1871
  %93 = xor i32 %91, %92, !dbg !1872
  %94 = load i32, i32* %17, align 4, !dbg !1873
  %95 = shl i32 %93, %94, !dbg !1874
  %96 = load i32*, i32** %16, align 8, !dbg !1875
  %97 = load i32, i32* %96, align 4, !dbg !1876
  %98 = xor i32 %97, %95, !dbg !1876
  store i32 %98, i32* %96, align 4, !dbg !1876
  %99 = load i32, i32* %18, align 4, !dbg !1877
  %100 = load i32, i32* @x.31
  %101 = load i32, i32* @y.32
  %102 = sub i32 %100, 1
  %103 = mul i32 %100, %102
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %101, 10
  %107 = or i1 %105, %106
  br i1 %107, label %originalBBpart276, label %originalBB10alteredBB

originalBBpart276:                                ; preds = %originalBB10
  ret i32 %99, !dbg !1878

originalBBalteredBB:                              ; preds = %originalBB, %3
  %108 = alloca %struct.quoting_options*, align 8
  %109 = alloca i8, align 1
  %110 = alloca i32, align 4
  %111 = alloca i8, align 1
  %112 = alloca i32*, align 8
  %113 = alloca i32, align 4
  %114 = alloca i32, align 4
  store %struct.quoting_options* %0, %struct.quoting_options** %108, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %108, metadata !1879, metadata !DIExpression()), !dbg !1840
  store i8 %1, i8* %109, align 1
  call void @llvm.dbg.declare(metadata i8* %109, metadata !1914, metadata !DIExpression()), !dbg !1842
  store i32 %2, i32* %110, align 4
  call void @llvm.dbg.declare(metadata i32* %110, metadata !1915, metadata !DIExpression()), !dbg !1844
  call void @llvm.dbg.declare(metadata i8* %111, metadata !1916, metadata !DIExpression()), !dbg !1846
  %115 = load i8, i8* %109, align 1, !dbg !1847
  store i8 %115, i8* %111, align 1, !dbg !1846
  call void @llvm.dbg.declare(metadata i32** %112, metadata !1917, metadata !DIExpression()), !dbg !1850
  %116 = load %struct.quoting_options*, %struct.quoting_options** %108, align 8, !dbg !1851
  %117 = icmp ne %struct.quoting_options* %116, null, !dbg !1851
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %30
  %118 = load %struct.quoting_options*, %struct.quoting_options** %12, align 8, !dbg !1852
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %48
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %65
  %119 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %66, i32 0, i32 2, !dbg !1853
  %120 = getelementptr inbounds [8 x i32], [8 x i32]* %119, i64 0, i64 0, !dbg !1854
  %121 = load i8, i8* %15, align 1, !dbg !1855
  %122 = zext i8 %121 to i64, !dbg !1855
  %_ = shl i64 %122, 32
  %_11 = sub i64 0, %122
  %gen = add i64 %_11, 32
  %_12 = shl i64 %122, 32
  %_13 = sub i64 %122, 32
  %gen14 = mul i64 %_13, 32
  %123 = udiv i64 %122, 32, !dbg !1856
  %124 = getelementptr inbounds i32, i32* %120, i64 %123, !dbg !1857
  store i32* %124, i32** %16, align 8, !dbg !1850
  call void @llvm.dbg.declare(metadata !4, metadata !1918, metadata !DIExpression()), !dbg !1859
  %125 = load i8, i8* %15, align 1, !dbg !1860
  %126 = zext i8 %125 to i64, !dbg !1860
  %_15 = sub i64 %126, 32
  %gen16 = mul i64 %_15, 32
  %_17 = sub i64 0, %126
  %gen18 = add i64 %_17, 32
  %_19 = sub i64 0, %126
  %gen20 = add i64 %_19, 32
  %_21 = shl i64 %126, 32
  %_22 = sub i64 0, %126
  %gen23 = add i64 %_22, 32
  %_24 = sub i64 %126, 32
  %gen25 = mul i64 %_24, 32
  %_26 = shl i64 %126, 32
  %127 = urem i64 %126, 32, !dbg !1861
  %128 = trunc i64 %127 to i32, !dbg !1860
  store i32 %128, i32* %17, align 4, !dbg !1859
  call void @llvm.dbg.declare(metadata !4, metadata !1953, metadata !DIExpression()), !dbg !1863
  %129 = load i32*, i32** %16, align 8, !dbg !1864
  %130 = load i32, i32* %129, align 4, !dbg !1865
  %131 = load i32, i32* %17, align 4, !dbg !1866
  %_27 = sub i32 %130, %131
  %gen28 = mul i32 %_27, %131
  %_29 = sub i32 %130, %131
  %gen30 = mul i32 %_29, %131
  %132 = lshr i32 %130, %131, !dbg !1867
  %_31 = sub i32 %132, 1
  %gen32 = mul i32 %_31, 1
  %_33 = sub i32 %132, 1
  %gen34 = mul i32 %_33, 1
  %_35 = sub i32 %132, 1
  %gen36 = mul i32 %_35, 1
  %133 = and i32 %132, 1, !dbg !1868
  store i32 %133, i32* %18, align 4, !dbg !1863
  %134 = load i32, i32* %14, align 4, !dbg !1869
  %_37 = sub i32 %134, 1
  %gen38 = mul i32 %_37, 1
  %_39 = shl i32 %134, 1
  %_40 = sub i32 %134, 1
  %gen41 = mul i32 %_40, 1
  %_42 = sub i32 0, %134
  %gen43 = add i32 %_42, 1
  %135 = and i32 %134, 1, !dbg !1870
  %136 = load i32, i32* %18, align 4, !dbg !1871
  %_44 = sub i32 0, %135
  %gen45 = add i32 %_44, %136
  %_46 = shl i32 %135, %136
  %_47 = shl i32 %135, %136
  %_48 = sub i32 %135, %136
  %gen49 = mul i32 %_48, %136
  %_50 = shl i32 %135, %136
  %_51 = sub i32 %135, %136
  %gen52 = mul i32 %_51, %136
  %_53 = shl i32 %135, %136
  %_54 = sub i32 0, %135
  %gen55 = add i32 %_54, %136
  %137 = xor i32 %135, %136, !dbg !1872
  %138 = load i32, i32* %17, align 4, !dbg !1873
  %_56 = shl i32 %137, %138
  %_57 = sub i32 0, %137
  %gen58 = add i32 %_57, %138
  %_59 = shl i32 %137, %138
  %_60 = sub i32 0, %137
  %gen61 = add i32 %_60, %138
  %_62 = sub i32 0, %137
  %gen63 = add i32 %_62, %138
  %_64 = sub i32 0, %137
  %gen65 = add i32 %_64, %138
  %_66 = sub i32 0, %137
  %gen67 = add i32 %_66, %138
  %_68 = shl i32 %137, %138
  %139 = shl i32 %137, %138, !dbg !1874
  %140 = load i32*, i32** %16, align 8, !dbg !1875
  %141 = load i32, i32* %140, align 4, !dbg !1876
  %_69 = sub i32 0, %141
  %gen70 = add i32 %_69, %139
  %_71 = shl i32 %141, %139
  %_72 = shl i32 %141, %139
  %_73 = shl i32 %141, %139
  %_74 = shl i32 %141, %139
  %142 = xor i32 %141, %139, !dbg !1876
  store i32 %142, i32* %140, align 4, !dbg !1876
  %143 = load i32, i32* %18, align 4, !dbg !1877
  br label %originalBB10
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quotearg_char_mem(i8*, i64, i8 signext) #4 !dbg !1954 {
  %4 = load i32, i32* @x.33
  %5 = load i32, i32* @y.34
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca i8*, align 8
  %13 = alloca i64, align 8
  %14 = alloca i8, align 1
  %15 = alloca %struct.quoting_options, align 8
  store i8* %0, i8** %12, align 8
  call void @llvm.dbg.declare(metadata i8** %12, metadata !1957, metadata !DIExpression()), !dbg !1958
  store i64 %1, i64* %13, align 8
  call void @llvm.dbg.declare(metadata i64* %13, metadata !1959, metadata !DIExpression()), !dbg !1960
  store i8 %2, i8* %14, align 1
  call void @llvm.dbg.declare(metadata i8* %14, metadata !1961, metadata !DIExpression()), !dbg !1962
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %15, metadata !1963, metadata !DIExpression()), !dbg !1964
  %16 = bitcast %struct.quoting_options* %15 to i8*, !dbg !1965
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 bitcast (%struct.quoting_options* @default_quoting_options to i8*), i64 56, i1 false), !dbg !1965
  %17 = load i8, i8* %14, align 1, !dbg !1966
  %18 = call i32 @set_char_quoting(%struct.quoting_options* %15, i8 signext %17, i32 1), !dbg !1967
  %19 = load i8*, i8** %12, align 8, !dbg !1968
  %20 = load i64, i64* %13, align 8, !dbg !1969
  %21 = call i8* @quotearg_n_options(i32 0, i8* %19, i64 %20, %struct.quoting_options* %15), !dbg !1970
  %22 = load i32, i32* @x.33
  %23 = load i32, i32* @y.34
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i8* %21, !dbg !1971

originalBBalteredBB:                              ; preds = %originalBB, %3
  %30 = alloca i8*, align 8
  %31 = alloca i64, align 8
  %32 = alloca i8, align 1
  %33 = alloca %struct.quoting_options, align 8
  store i8* %0, i8** %30, align 8
  call void @llvm.dbg.declare(metadata i8** %30, metadata !1972, metadata !DIExpression()), !dbg !1958
  store i64 %1, i64* %31, align 8
  call void @llvm.dbg.declare(metadata i64* %31, metadata !2004, metadata !DIExpression()), !dbg !1960
  store i8 %2, i8* %32, align 1
  call void @llvm.dbg.declare(metadata i8* %32, metadata !2005, metadata !DIExpression()), !dbg !1962
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %33, metadata !2006, metadata !DIExpression()), !dbg !1964
  %34 = bitcast %struct.quoting_options* %33 to i8*, !dbg !1965
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %34, i8* align 8 bitcast (%struct.quoting_options* @default_quoting_options to i8*), i64 56, i1 false), !dbg !1965
  %35 = load i8, i8* %32, align 1, !dbg !1966
  %36 = call i32 @set_char_quoting(%struct.quoting_options* %33, i8 signext %35, i32 1), !dbg !1967
  %37 = load i8*, i8** %30, align 8, !dbg !1968
  %38 = load i64, i64* %31, align 8, !dbg !1969
  %39 = call i8* @quotearg_n_options(i32 0, i8* %37, i64 %38, %struct.quoting_options* %33), !dbg !1970
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quotearg_n_options(i32, i8*, i64, %struct.quoting_options*) #4 !dbg !2007 {
  %5 = load i32, i32* @x.35
  %6 = load i32, i32* @y.36
  %7 = sub i32 %5, 1
  %8 = mul i32 %5, %7
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %6, 10
  %12 = or i1 %10, %11
  br i1 %12, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %4, %originalBBalteredBB
  %13 = alloca i32, align 4
  %14 = alloca i8*, align 8
  %15 = alloca i64, align 8
  %16 = alloca %struct.quoting_options*, align 8
  %17 = alloca i32, align 4
  %18 = alloca %struct.slotvec*, align 8
  %19 = alloca i8, align 1
  %20 = alloca i32, align 4
  %21 = alloca i64, align 8
  %22 = alloca i8*, align 8
  %23 = alloca i32, align 4
  %24 = alloca i64, align 8
  store i32 %0, i32* %13, align 4
  call void @llvm.dbg.declare(metadata i32* %13, metadata !2012, metadata !DIExpression()), !dbg !2013
  store i8* %1, i8** %14, align 8
  call void @llvm.dbg.declare(metadata i8** %14, metadata !2014, metadata !DIExpression()), !dbg !2015
  store i64 %2, i64* %15, align 8
  call void @llvm.dbg.declare(metadata i64* %15, metadata !2016, metadata !DIExpression()), !dbg !2017
  store %struct.quoting_options* %3, %struct.quoting_options** %16, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %16, metadata !2018, metadata !DIExpression()), !dbg !2019
  call void @llvm.dbg.declare(metadata i32* %17, metadata !2020, metadata !DIExpression()), !dbg !2021
  %25 = call i32* @__errno_location() #15, !dbg !2022
  %26 = load i32, i32* %25, align 4, !dbg !2022
  store i32 %26, i32* %17, align 4, !dbg !2021
  call void @llvm.dbg.declare(metadata %struct.slotvec** %18, metadata !2023, metadata !DIExpression()), !dbg !2024
  %27 = load %struct.slotvec*, %struct.slotvec** @slotvec, align 8, !dbg !2025
  store %struct.slotvec* %27, %struct.slotvec** %18, align 8, !dbg !2024
  %28 = load i32, i32* %13, align 4, !dbg !2026
  %29 = icmp slt i32 %28, 0, !dbg !2028
  %30 = load i32, i32* @x.35
  %31 = load i32, i32* @y.36
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %29, label %38, label %55, !dbg !2029

38:                                               ; preds = %originalBBpart2
  %39 = load i32, i32* @x.35
  %40 = load i32, i32* @y.36
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %38, %originalBB1alteredBB
  call void @abort() #12, !dbg !2030
  %47 = load i32, i32* @x.35
  %48 = load i32, i32* @y.36
  %49 = sub i32 %47, 1
  %50 = mul i32 %47, %49
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %48, 10
  %54 = or i1 %52, %53
  br i1 %54, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  unreachable, !dbg !2030

55:                                               ; preds = %originalBBpart2
  %56 = load i32, i32* @x.35
  %57 = load i32, i32* @y.36
  %58 = sub i32 %56, 1
  %59 = mul i32 %56, %58
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %61, %62
  br i1 %63, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %55, %originalBB6alteredBB
  %64 = load i32, i32* @nslots, align 4, !dbg !2031
  %65 = load i32, i32* %13, align 4, !dbg !2033
  %66 = icmp sle i32 %64, %65, !dbg !2034
  %67 = load i32, i32* @x.35
  %68 = load i32, i32* @y.36
  %69 = sub i32 %67, 1
  %70 = mul i32 %67, %69
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %68, 10
  %74 = or i1 %72, %73
  br i1 %74, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %66, label %75, label %245, !dbg !2035

75:                                               ; preds = %originalBBpart28
  call void @llvm.dbg.declare(metadata i8* %19, metadata !2036, metadata !DIExpression()), !dbg !2038
  %76 = load i32, i32* @x.35
  %77 = load i32, i32* @y.36
  %78 = sub i32 %76, 1
  %79 = mul i32 %76, %78
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %77, 10
  %83 = or i1 %81, %82
  br i1 %83, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %75, %originalBB10alteredBB
  %84 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !2039
  %85 = icmp eq %struct.slotvec* %84, @slotvec0, !dbg !2040
  %86 = zext i1 %85 to i8, !dbg !2038
  store i8 %86, i8* %19, align 1, !dbg !2038
  call void @llvm.dbg.declare(metadata i32* %20, metadata !2041, metadata !DIExpression()), !dbg !2042
  store i32 2147483646, i32* %20, align 4, !dbg !2042
  %87 = load i32, i32* %20, align 4, !dbg !2043
  %88 = load i32, i32* %13, align 4, !dbg !2045
  %89 = icmp slt i32 %87, %88, !dbg !2046
  %90 = load i32, i32* @x.35
  %91 = load i32, i32* @y.36
  %92 = sub i32 %90, 1
  %93 = mul i32 %90, %92
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %91, 10
  %97 = or i1 %95, %96
  br i1 %97, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %89, label %98, label %115, !dbg !2047

98:                                               ; preds = %originalBBpart212
  %99 = load i32, i32* @x.35
  %100 = load i32, i32* @y.36
  %101 = sub i32 %99, 1
  %102 = mul i32 %99, %101
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %100, 10
  %106 = or i1 %104, %105
  br i1 %106, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %98, %originalBB14alteredBB
  call void @xalloc_die() #14, !dbg !2048
  %107 = load i32, i32* @x.35
  %108 = load i32, i32* @y.36
  %109 = sub i32 %107, 1
  %110 = mul i32 %107, %109
  %111 = urem i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = icmp slt i32 %108, 10
  %114 = or i1 %112, %113
  br i1 %114, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  unreachable, !dbg !2048

115:                                              ; preds = %originalBBpart212
  %116 = load i32, i32* @x.35
  %117 = load i32, i32* @y.36
  %118 = sub i32 %116, 1
  %119 = mul i32 %116, %118
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %117, 10
  %123 = or i1 %121, %122
  br i1 %123, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %115, %originalBB18alteredBB
  %124 = load i8, i8* %19, align 1, !dbg !2049
  %125 = trunc i8 %124 to i1, !dbg !2049
  %126 = load i32, i32* @x.35
  %127 = load i32, i32* @y.36
  %128 = sub i32 %126, 1
  %129 = mul i32 %126, %128
  %130 = urem i32 %129, 2
  %131 = icmp eq i32 %130, 0
  %132 = icmp slt i32 %127, 10
  %133 = or i1 %131, %132
  br i1 %133, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br i1 %125, label %134, label %151, !dbg !2049

134:                                              ; preds = %originalBBpart220
  %135 = load i32, i32* @x.35
  %136 = load i32, i32* @y.36
  %137 = sub i32 %135, 1
  %138 = mul i32 %135, %137
  %139 = urem i32 %138, 2
  %140 = icmp eq i32 %139, 0
  %141 = icmp slt i32 %136, 10
  %142 = or i1 %140, %141
  br i1 %142, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %134, %originalBB22alteredBB
  %143 = load i32, i32* @x.35
  %144 = load i32, i32* @y.36
  %145 = sub i32 %143, 1
  %146 = mul i32 %143, %145
  %147 = urem i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = icmp slt i32 %144, 10
  %150 = or i1 %148, %149
  br i1 %150, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br label %169, !dbg !2049

151:                                              ; preds = %originalBBpart220
  %152 = load i32, i32* @x.35
  %153 = load i32, i32* @y.36
  %154 = sub i32 %152, 1
  %155 = mul i32 %152, %154
  %156 = urem i32 %155, 2
  %157 = icmp eq i32 %156, 0
  %158 = icmp slt i32 %153, 10
  %159 = or i1 %157, %158
  br i1 %159, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %151, %originalBB26alteredBB
  %160 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !2050
  %161 = load i32, i32* @x.35
  %162 = load i32, i32* @y.36
  %163 = sub i32 %161, 1
  %164 = mul i32 %161, %163
  %165 = urem i32 %164, 2
  %166 = icmp eq i32 %165, 0
  %167 = icmp slt i32 %162, 10
  %168 = or i1 %166, %167
  br i1 %168, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br label %169, !dbg !2049

169:                                              ; preds = %originalBBpart228, %originalBBpart224
  %170 = phi %struct.slotvec* [ null, %originalBBpart224 ], [ %160, %originalBBpart228 ], !dbg !2049
  %171 = load i32, i32* @x.35
  %172 = load i32, i32* @y.36
  %173 = sub i32 %171, 1
  %174 = mul i32 %171, %173
  %175 = urem i32 %174, 2
  %176 = icmp eq i32 %175, 0
  %177 = icmp slt i32 %172, 10
  %178 = or i1 %176, %177
  br i1 %178, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %169, %originalBB30alteredBB
  %179 = bitcast %struct.slotvec* %170 to i8*, !dbg !2049
  %180 = load i32, i32* %13, align 4, !dbg !2051
  %181 = add nsw i32 %180, 1, !dbg !2052
  %182 = sext i32 %181 to i64, !dbg !2053
  %183 = mul i64 %182, 16, !dbg !2054
  %184 = call i8* @xrealloc(i8* %179, i64 %183), !dbg !2055
  %185 = bitcast i8* %184 to %struct.slotvec*, !dbg !2055
  store %struct.slotvec* %185, %struct.slotvec** %18, align 8, !dbg !2056
  store %struct.slotvec* %185, %struct.slotvec** @slotvec, align 8, !dbg !2057
  %186 = load i8, i8* %19, align 1, !dbg !2058
  %187 = trunc i8 %186 to i1, !dbg !2058
  %188 = load i32, i32* @x.35
  %189 = load i32, i32* @y.36
  %190 = sub i32 %188, 1
  %191 = mul i32 %188, %190
  %192 = urem i32 %191, 2
  %193 = icmp eq i32 %192, 0
  %194 = icmp slt i32 %189, 10
  %195 = or i1 %193, %194
  br i1 %195, label %originalBBpart244, label %originalBB30alteredBB

originalBBpart244:                                ; preds = %originalBB30
  br i1 %187, label %196, label %215, !dbg !2060

196:                                              ; preds = %originalBBpart244
  %197 = load i32, i32* @x.35
  %198 = load i32, i32* @y.36
  %199 = sub i32 %197, 1
  %200 = mul i32 %197, %199
  %201 = urem i32 %200, 2
  %202 = icmp eq i32 %201, 0
  %203 = icmp slt i32 %198, 10
  %204 = or i1 %202, %203
  br i1 %204, label %originalBB46, label %originalBB46alteredBB

originalBB46:                                     ; preds = %196, %originalBB46alteredBB
  %205 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !2061
  %206 = bitcast %struct.slotvec* %205 to i8*, !dbg !2062
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %206, i8* align 8 bitcast (%struct.slotvec* @slotvec0 to i8*), i64 16, i1 false), !dbg !2062
  %207 = load i32, i32* @x.35
  %208 = load i32, i32* @y.36
  %209 = sub i32 %207, 1
  %210 = mul i32 %207, %209
  %211 = urem i32 %210, 2
  %212 = icmp eq i32 %211, 0
  %213 = icmp slt i32 %208, 10
  %214 = or i1 %212, %213
  br i1 %214, label %originalBBpart248, label %originalBB46alteredBB

originalBBpart248:                                ; preds = %originalBB46
  br label %215, !dbg !2063

215:                                              ; preds = %originalBBpart248, %originalBBpart244
  %216 = load i32, i32* @x.35
  %217 = load i32, i32* @y.36
  %218 = sub i32 %216, 1
  %219 = mul i32 %216, %218
  %220 = urem i32 %219, 2
  %221 = icmp eq i32 %220, 0
  %222 = icmp slt i32 %217, 10
  %223 = or i1 %221, %222
  br i1 %223, label %originalBB50, label %originalBB50alteredBB

originalBB50:                                     ; preds = %215, %originalBB50alteredBB
  %224 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !2064
  %225 = load i32, i32* @nslots, align 4, !dbg !2065
  %226 = sext i32 %225 to i64, !dbg !2066
  %227 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %224, i64 %226, !dbg !2066
  %228 = bitcast %struct.slotvec* %227 to i8*, !dbg !2067
  %229 = load i32, i32* %13, align 4, !dbg !2068
  %230 = add nsw i32 %229, 1, !dbg !2069
  %231 = load i32, i32* @nslots, align 4, !dbg !2070
  %232 = sub nsw i32 %230, %231, !dbg !2071
  %233 = sext i32 %232 to i64, !dbg !2072
  %234 = mul i64 %233, 16, !dbg !2073
  call void @llvm.memset.p0i8.i64(i8* align 8 %228, i8 0, i64 %234, i1 false), !dbg !2067
  %235 = load i32, i32* %13, align 4, !dbg !2074
  %236 = add nsw i32 %235, 1, !dbg !2075
  store i32 %236, i32* @nslots, align 4, !dbg !2076
  %237 = load i32, i32* @x.35
  %238 = load i32, i32* @y.36
  %239 = sub i32 %237, 1
  %240 = mul i32 %237, %239
  %241 = urem i32 %240, 2
  %242 = icmp eq i32 %241, 0
  %243 = icmp slt i32 %238, 10
  %244 = or i1 %242, %243
  br i1 %244, label %originalBBpart263, label %originalBB50alteredBB

originalBBpart263:                                ; preds = %originalBB50
  br label %245, !dbg !2077

245:                                              ; preds = %originalBBpart263, %originalBBpart28
  call void @llvm.dbg.declare(metadata i64* %21, metadata !2078, metadata !DIExpression()), !dbg !2080
  %246 = load i32, i32* @x.35
  %247 = load i32, i32* @y.36
  %248 = sub i32 %246, 1
  %249 = mul i32 %246, %248
  %250 = urem i32 %249, 2
  %251 = icmp eq i32 %250, 0
  %252 = icmp slt i32 %247, 10
  %253 = or i1 %251, %252
  br i1 %253, label %originalBB65, label %originalBB65alteredBB

originalBB65:                                     ; preds = %245, %originalBB65alteredBB
  %254 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !2081
  %255 = load i32, i32* %13, align 4, !dbg !2082
  %256 = sext i32 %255 to i64, !dbg !2081
  %257 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %254, i64 %256, !dbg !2081
  %258 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %257, i32 0, i32 0, !dbg !2083
  %259 = load i64, i64* %258, align 8, !dbg !2083
  store i64 %259, i64* %21, align 8, !dbg !2080
  call void @llvm.dbg.declare(metadata i8** %22, metadata !2084, metadata !DIExpression()), !dbg !2085
  %260 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !2086
  %261 = load i32, i32* %13, align 4, !dbg !2087
  %262 = sext i32 %261 to i64, !dbg !2086
  %263 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %260, i64 %262, !dbg !2086
  %264 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %263, i32 0, i32 1, !dbg !2088
  %265 = load i8*, i8** %264, align 8, !dbg !2088
  store i8* %265, i8** %22, align 8, !dbg !2085
  call void @llvm.dbg.declare(metadata i32* %23, metadata !2089, metadata !DIExpression()), !dbg !2090
  %266 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !2091
  %267 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %266, i32 0, i32 1, !dbg !2092
  %268 = load i32, i32* %267, align 4, !dbg !2092
  %269 = or i32 %268, 1, !dbg !2093
  store i32 %269, i32* %23, align 4, !dbg !2090
  call void @llvm.dbg.declare(metadata i64* %24, metadata !2094, metadata !DIExpression()), !dbg !2095
  %270 = load i8*, i8** %22, align 8, !dbg !2096
  %271 = load i64, i64* %21, align 8, !dbg !2097
  %272 = load i8*, i8** %14, align 8, !dbg !2098
  %273 = load i64, i64* %15, align 8, !dbg !2099
  %274 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !2100
  %275 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %274, i32 0, i32 0, !dbg !2101
  %276 = load i32, i32* %275, align 8, !dbg !2101
  %277 = load i32, i32* %23, align 4, !dbg !2102
  %278 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !2103
  %279 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %278, i32 0, i32 2, !dbg !2104
  %280 = getelementptr inbounds [8 x i32], [8 x i32]* %279, i64 0, i64 0, !dbg !2103
  %281 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !2105
  %282 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %281, i32 0, i32 3, !dbg !2106
  %283 = load i8*, i8** %282, align 8, !dbg !2106
  %284 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !2107
  %285 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %284, i32 0, i32 4, !dbg !2108
  %286 = load i8*, i8** %285, align 8, !dbg !2108
  %287 = call i64 @quotearg_buffer_restyled(i8* %270, i64 %271, i8* %272, i64 %273, i32 %276, i32 %277, i32* %280, i8* %283, i8* %286), !dbg !2109
  store i64 %287, i64* %24, align 8, !dbg !2095
  %288 = load i64, i64* %21, align 8, !dbg !2110
  %289 = load i64, i64* %24, align 8, !dbg !2112
  %290 = icmp ule i64 %288, %289, !dbg !2113
  %291 = load i32, i32* @x.35
  %292 = load i32, i32* @y.36
  %293 = sub i32 %291, 1
  %294 = mul i32 %291, %293
  %295 = urem i32 %294, 2
  %296 = icmp eq i32 %295, 0
  %297 = icmp slt i32 %292, 10
  %298 = or i1 %296, %297
  br i1 %298, label %originalBBpart282, label %originalBB65alteredBB

originalBBpart282:                                ; preds = %originalBB65
  br i1 %290, label %299, label %385, !dbg !2114

299:                                              ; preds = %originalBBpart282
  %300 = load i32, i32* @x.35
  %301 = load i32, i32* @y.36
  %302 = sub i32 %300, 1
  %303 = mul i32 %300, %302
  %304 = urem i32 %303, 2
  %305 = icmp eq i32 %304, 0
  %306 = icmp slt i32 %301, 10
  %307 = or i1 %305, %306
  br i1 %307, label %originalBB84, label %originalBB84alteredBB

originalBB84:                                     ; preds = %299, %originalBB84alteredBB
  %308 = load i64, i64* %24, align 8, !dbg !2115
  %309 = add i64 %308, 1, !dbg !2117
  store i64 %309, i64* %21, align 8, !dbg !2118
  %310 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !2119
  %311 = load i32, i32* %13, align 4, !dbg !2120
  %312 = sext i32 %311 to i64, !dbg !2119
  %313 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %310, i64 %312, !dbg !2119
  %314 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %313, i32 0, i32 0, !dbg !2121
  store i64 %309, i64* %314, align 8, !dbg !2122
  %315 = load i8*, i8** %22, align 8, !dbg !2123
  %316 = icmp ne i8* %315, getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i64 0, i64 0), !dbg !2125
  %317 = load i32, i32* @x.35
  %318 = load i32, i32* @y.36
  %319 = sub i32 %317, 1
  %320 = mul i32 %317, %319
  %321 = urem i32 %320, 2
  %322 = icmp eq i32 %321, 0
  %323 = icmp slt i32 %318, 10
  %324 = or i1 %322, %323
  br i1 %324, label %originalBBpart288, label %originalBB84alteredBB

originalBBpart288:                                ; preds = %originalBB84
  br i1 %316, label %325, label %343, !dbg !2126

325:                                              ; preds = %originalBBpart288
  %326 = load i32, i32* @x.35
  %327 = load i32, i32* @y.36
  %328 = sub i32 %326, 1
  %329 = mul i32 %326, %328
  %330 = urem i32 %329, 2
  %331 = icmp eq i32 %330, 0
  %332 = icmp slt i32 %327, 10
  %333 = or i1 %331, %332
  br i1 %333, label %originalBB90, label %originalBB90alteredBB

originalBB90:                                     ; preds = %325, %originalBB90alteredBB
  %334 = load i8*, i8** %22, align 8, !dbg !2127
  call void @free(i8* %334) #10, !dbg !2128
  %335 = load i32, i32* @x.35
  %336 = load i32, i32* @y.36
  %337 = sub i32 %335, 1
  %338 = mul i32 %335, %337
  %339 = urem i32 %338, 2
  %340 = icmp eq i32 %339, 0
  %341 = icmp slt i32 %336, 10
  %342 = or i1 %340, %341
  br i1 %342, label %originalBBpart292, label %originalBB90alteredBB

originalBBpart292:                                ; preds = %originalBB90
  br label %343, !dbg !2128

343:                                              ; preds = %originalBBpart292, %originalBBpart288
  %344 = load i32, i32* @x.35
  %345 = load i32, i32* @y.36
  %346 = sub i32 %344, 1
  %347 = mul i32 %344, %346
  %348 = urem i32 %347, 2
  %349 = icmp eq i32 %348, 0
  %350 = icmp slt i32 %345, 10
  %351 = or i1 %349, %350
  br i1 %351, label %originalBB94, label %originalBB94alteredBB

originalBB94:                                     ; preds = %343, %originalBB94alteredBB
  %352 = load i64, i64* %21, align 8, !dbg !2129
  %353 = call noalias i8* @xcharalloc(i64 %352), !dbg !2130
  store i8* %353, i8** %22, align 8, !dbg !2131
  %354 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !2132
  %355 = load i32, i32* %13, align 4, !dbg !2133
  %356 = sext i32 %355 to i64, !dbg !2132
  %357 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %354, i64 %356, !dbg !2132
  %358 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %357, i32 0, i32 1, !dbg !2134
  store i8* %353, i8** %358, align 8, !dbg !2135
  %359 = load i8*, i8** %22, align 8, !dbg !2136
  %360 = load i64, i64* %21, align 8, !dbg !2137
  %361 = load i8*, i8** %14, align 8, !dbg !2138
  %362 = load i64, i64* %15, align 8, !dbg !2139
  %363 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !2140
  %364 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %363, i32 0, i32 0, !dbg !2141
  %365 = load i32, i32* %364, align 8, !dbg !2141
  %366 = load i32, i32* %23, align 4, !dbg !2142
  %367 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !2143
  %368 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %367, i32 0, i32 2, !dbg !2144
  %369 = getelementptr inbounds [8 x i32], [8 x i32]* %368, i64 0, i64 0, !dbg !2143
  %370 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !2145
  %371 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %370, i32 0, i32 3, !dbg !2146
  %372 = load i8*, i8** %371, align 8, !dbg !2146
  %373 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !2147
  %374 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %373, i32 0, i32 4, !dbg !2148
  %375 = load i8*, i8** %374, align 8, !dbg !2148
  %376 = call i64 @quotearg_buffer_restyled(i8* %359, i64 %360, i8* %361, i64 %362, i32 %365, i32 %366, i32* %369, i8* %372, i8* %375), !dbg !2149
  %377 = load i32, i32* @x.35
  %378 = load i32, i32* @y.36
  %379 = sub i32 %377, 1
  %380 = mul i32 %377, %379
  %381 = urem i32 %380, 2
  %382 = icmp eq i32 %381, 0
  %383 = icmp slt i32 %378, 10
  %384 = or i1 %382, %383
  br i1 %384, label %originalBBpart296, label %originalBB94alteredBB

originalBBpart296:                                ; preds = %originalBB94
  br label %385, !dbg !2150

385:                                              ; preds = %originalBBpart296, %originalBBpart282
  %386 = load i32, i32* @x.35
  %387 = load i32, i32* @y.36
  %388 = sub i32 %386, 1
  %389 = mul i32 %386, %388
  %390 = urem i32 %389, 2
  %391 = icmp eq i32 %390, 0
  %392 = icmp slt i32 %387, 10
  %393 = or i1 %391, %392
  br i1 %393, label %originalBB98, label %originalBB98alteredBB

originalBB98:                                     ; preds = %385, %originalBB98alteredBB
  %394 = load i32, i32* %17, align 4, !dbg !2151
  %395 = call i32* @__errno_location() #15, !dbg !2152
  store i32 %394, i32* %395, align 4, !dbg !2153
  %396 = load i8*, i8** %22, align 8, !dbg !2154
  %397 = load i32, i32* @x.35
  %398 = load i32, i32* @y.36
  %399 = sub i32 %397, 1
  %400 = mul i32 %397, %399
  %401 = urem i32 %400, 2
  %402 = icmp eq i32 %401, 0
  %403 = icmp slt i32 %398, 10
  %404 = or i1 %402, %403
  br i1 %404, label %originalBBpart2100, label %originalBB98alteredBB

originalBBpart2100:                               ; preds = %originalBB98
  ret i8* %396, !dbg !2155

originalBBalteredBB:                              ; preds = %originalBB, %4
  %405 = alloca i32, align 4
  %406 = alloca i8*, align 8
  %407 = alloca i64, align 8
  %408 = alloca %struct.quoting_options*, align 8
  %409 = alloca i32, align 4
  %410 = alloca %struct.slotvec*, align 8
  %411 = alloca i8, align 1
  %412 = alloca i32, align 4
  %413 = alloca i64, align 8
  %414 = alloca i8*, align 8
  %415 = alloca i32, align 4
  %416 = alloca i64, align 8
  store i32 %0, i32* %405, align 4
  call void @llvm.dbg.declare(metadata i32* %405, metadata !2156, metadata !DIExpression()), !dbg !2013
  store i8* %1, i8** %406, align 8
  call void @llvm.dbg.declare(metadata i8** %406, metadata !2192, metadata !DIExpression()), !dbg !2015
  store i64 %2, i64* %407, align 8
  call void @llvm.dbg.declare(metadata i64* %407, metadata !2193, metadata !DIExpression()), !dbg !2017
  store %struct.quoting_options* %3, %struct.quoting_options** %408, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %408, metadata !2194, metadata !DIExpression()), !dbg !2019
  call void @llvm.dbg.declare(metadata i32* %409, metadata !2195, metadata !DIExpression()), !dbg !2021
  %417 = call i32* @__errno_location() #15, !dbg !2022
  %418 = load i32, i32* %417, align 4, !dbg !2022
  store i32 %418, i32* %409, align 4, !dbg !2021
  call void @llvm.dbg.declare(metadata %struct.slotvec** %410, metadata !2196, metadata !DIExpression()), !dbg !2024
  %419 = load %struct.slotvec*, %struct.slotvec** @slotvec, align 8, !dbg !2025
  store %struct.slotvec* %419, %struct.slotvec** %410, align 8, !dbg !2024
  %420 = load i32, i32* %405, align 4, !dbg !2026
  %421 = icmp slt i32 %420, 0, !dbg !2028
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %38
  call void @abort() #12, !dbg !2030
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %55
  %422 = load i32, i32* @nslots, align 4, !dbg !2031
  %423 = load i32, i32* %13, align 4, !dbg !2033
  %424 = icmp sle i32 %422, %423, !dbg !2034
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %75
  %425 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !2039
  %426 = icmp eq %struct.slotvec* %425, @slotvec0, !dbg !2040
  %427 = zext i1 %426 to i8, !dbg !2038
  store i8 %427, i8* %19, align 1, !dbg !2038
  call void @llvm.dbg.declare(metadata !4, metadata !2197, metadata !DIExpression()), !dbg !2042
  store i32 2147483646, i32* %20, align 4, !dbg !2042
  %428 = load i32, i32* %20, align 4, !dbg !2043
  %429 = load i32, i32* %13, align 4, !dbg !2045
  %430 = icmp slt i32 %428, %429, !dbg !2046
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %98
  call void @xalloc_die() #14, !dbg !2048
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %115
  %431 = load i8, i8* %19, align 1, !dbg !2049
  %432 = trunc i8 %431 to i1, !dbg !2049
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %134
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %151
  %433 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !2050
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %169
  %434 = bitcast %struct.slotvec* %170 to i8*, !dbg !2049
  %435 = load i32, i32* %13, align 4, !dbg !2051
  %_ = sub i32 0, %435
  %gen = add i32 %_, 1
  %_31 = sub i32 0, %435
  %gen32 = add i32 %_31, 1
  %436 = add nsw i32 %435, 1, !dbg !2052
  %437 = sext i32 %436 to i64, !dbg !2053
  %_33 = sub i64 %437, 16
  %gen34 = mul i64 %_33, 16
  %_35 = shl i64 %437, 16
  %_36 = sub i64 0, %437
  %gen37 = add i64 %_36, 16
  %_38 = shl i64 %437, 16
  %_39 = sub i64 %437, 16
  %gen40 = mul i64 %_39, 16
  %_41 = sub i64 %437, 16
  %gen42 = mul i64 %_41, 16
  %438 = mul i64 %437, 16, !dbg !2054
  %439 = call i8* @xrealloc(i8* %434, i64 %438), !dbg !2055
  %440 = bitcast i8* %439 to %struct.slotvec*, !dbg !2055
  store %struct.slotvec* %440, %struct.slotvec** %18, align 8, !dbg !2056
  store %struct.slotvec* %440, %struct.slotvec** @slotvec, align 8, !dbg !2057
  %441 = load i8, i8* %19, align 1, !dbg !2058
  %442 = trunc i8 %441 to i1, !dbg !2058
  br label %originalBB30

originalBB46alteredBB:                            ; preds = %originalBB46, %196
  %443 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !2061
  %444 = bitcast %struct.slotvec* %443 to i8*, !dbg !2062
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %444, i8* align 8 bitcast (%struct.slotvec* @slotvec0 to i8*), i64 16, i1 false), !dbg !2062
  br label %originalBB46

originalBB50alteredBB:                            ; preds = %originalBB50, %215
  %445 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !2064
  %446 = load i32, i32* @nslots, align 4, !dbg !2065
  %447 = sext i32 %446 to i64, !dbg !2066
  %448 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %445, i64 %447, !dbg !2066
  %449 = bitcast %struct.slotvec* %448 to i8*, !dbg !2067
  %450 = load i32, i32* %13, align 4, !dbg !2068
  %_51 = shl i32 %450, 1
  %451 = add nsw i32 %450, 1, !dbg !2069
  %452 = load i32, i32* @nslots, align 4, !dbg !2070
  %_52 = sub i32 %451, %452
  %gen53 = mul i32 %_52, %452
  %_54 = shl i32 %451, %452
  %_55 = shl i32 %451, %452
  %453 = sub nsw i32 %451, %452, !dbg !2071
  %454 = sext i32 %453 to i64, !dbg !2072
  %455 = mul i64 %454, 16, !dbg !2073
  call void @llvm.memset.p0i8.i64(i8* align 8 %449, i8 0, i64 %455, i1 false), !dbg !2067
  %456 = load i32, i32* %13, align 4, !dbg !2074
  %_56 = shl i32 %456, 1
  %_57 = sub i32 %456, 1
  %gen58 = mul i32 %_57, 1
  %_59 = shl i32 %456, 1
  %_60 = sub i32 0, %456
  %gen61 = add i32 %_60, 1
  %457 = add nsw i32 %456, 1, !dbg !2075
  store i32 %457, i32* @nslots, align 4, !dbg !2076
  br label %originalBB50

originalBB65alteredBB:                            ; preds = %originalBB65, %245
  %458 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !2081
  %459 = load i32, i32* %13, align 4, !dbg !2082
  %460 = sext i32 %459 to i64, !dbg !2081
  %461 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %458, i64 %460, !dbg !2081
  %462 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %461, i32 0, i32 0, !dbg !2083
  %463 = load i64, i64* %462, align 8, !dbg !2083
  store i64 %463, i64* %21, align 8, !dbg !2080
  call void @llvm.dbg.declare(metadata !4, metadata !2235, metadata !DIExpression()), !dbg !2085
  %464 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !2086
  %465 = load i32, i32* %13, align 4, !dbg !2087
  %466 = sext i32 %465 to i64, !dbg !2086
  %467 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %464, i64 %466, !dbg !2086
  %468 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %467, i32 0, i32 1, !dbg !2088
  %469 = load i8*, i8** %468, align 8, !dbg !2088
  store i8* %469, i8** %22, align 8, !dbg !2085
  call void @llvm.dbg.declare(metadata !4, metadata !2272, metadata !DIExpression()), !dbg !2090
  %470 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !2091
  %471 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %470, i32 0, i32 1, !dbg !2092
  %472 = load i32, i32* %471, align 4, !dbg !2092
  %_66 = sub i32 0, %472
  %gen67 = add i32 %_66, 1
  %_68 = sub i32 %472, 1
  %gen69 = mul i32 %_68, 1
  %_70 = shl i32 %472, 1
  %_71 = sub i32 %472, 1
  %gen72 = mul i32 %_71, 1
  %_73 = shl i32 %472, 1
  %_74 = sub i32 0, %472
  %gen75 = add i32 %_74, 1
  %_76 = sub i32 %472, 1
  %gen77 = mul i32 %_76, 1
  %_78 = shl i32 %472, 1
  %_79 = sub i32 0, %472
  %gen80 = add i32 %_79, 1
  %473 = or i32 %472, 1, !dbg !2093
  store i32 %473, i32* %23, align 4, !dbg !2090
  call void @llvm.dbg.declare(metadata !4, metadata !2273, metadata !DIExpression()), !dbg !2095
  %474 = load i8*, i8** %22, align 8, !dbg !2096
  %475 = load i64, i64* %21, align 8, !dbg !2097
  %476 = load i8*, i8** %14, align 8, !dbg !2098
  %477 = load i64, i64* %15, align 8, !dbg !2099
  %478 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !2100
  %479 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %478, i32 0, i32 0, !dbg !2101
  %480 = load i32, i32* %479, align 8, !dbg !2101
  %481 = load i32, i32* %23, align 4, !dbg !2102
  %482 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !2103
  %483 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %482, i32 0, i32 2, !dbg !2104
  %484 = getelementptr inbounds [8 x i32], [8 x i32]* %483, i64 0, i64 0, !dbg !2103
  %485 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !2105
  %486 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %485, i32 0, i32 3, !dbg !2106
  %487 = load i8*, i8** %486, align 8, !dbg !2106
  %488 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !2107
  %489 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %488, i32 0, i32 4, !dbg !2108
  %490 = load i8*, i8** %489, align 8, !dbg !2108
  %491 = call i64 @quotearg_buffer_restyled(i8* %474, i64 %475, i8* %476, i64 %477, i32 %480, i32 %481, i32* %484, i8* %487, i8* %490), !dbg !2109
  store i64 %491, i64* %24, align 8, !dbg !2095
  %492 = load i64, i64* %21, align 8, !dbg !2110
  %493 = load i64, i64* %24, align 8, !dbg !2112
  %494 = icmp ule i64 %492, %493, !dbg !2113
  br label %originalBB65

originalBB84alteredBB:                            ; preds = %originalBB84, %299
  %495 = load i64, i64* %24, align 8, !dbg !2115
  %_85 = sub i64 0, %495
  %gen86 = add i64 %_85, 1
  %496 = add i64 %495, 1, !dbg !2117
  store i64 %496, i64* %21, align 8, !dbg !2118
  %497 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !2119
  %498 = load i32, i32* %13, align 4, !dbg !2120
  %499 = sext i32 %498 to i64, !dbg !2119
  %500 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %497, i64 %499, !dbg !2119
  %501 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %500, i32 0, i32 0, !dbg !2121
  store i64 %496, i64* %501, align 8, !dbg !2122
  %502 = load i8*, i8** %22, align 8, !dbg !2123
  %503 = icmp ne i8* %502, getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i64 0, i64 0), !dbg !2125
  br label %originalBB84

originalBB90alteredBB:                            ; preds = %originalBB90, %325
  %504 = load i8*, i8** %22, align 8, !dbg !2127
  call void @free(i8* %504) #10, !dbg !2128
  br label %originalBB90

originalBB94alteredBB:                            ; preds = %originalBB94, %343
  %505 = load i64, i64* %21, align 8, !dbg !2129
  %506 = call noalias i8* @xcharalloc(i64 %505), !dbg !2130
  store i8* %506, i8** %22, align 8, !dbg !2131
  %507 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !2132
  %508 = load i32, i32* %13, align 4, !dbg !2133
  %509 = sext i32 %508 to i64, !dbg !2132
  %510 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %507, i64 %509, !dbg !2132
  %511 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %510, i32 0, i32 1, !dbg !2134
  store i8* %506, i8** %511, align 8, !dbg !2135
  %512 = load i8*, i8** %22, align 8, !dbg !2136
  %513 = load i64, i64* %21, align 8, !dbg !2137
  %514 = load i8*, i8** %14, align 8, !dbg !2138
  %515 = load i64, i64* %15, align 8, !dbg !2139
  %516 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !2140
  %517 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %516, i32 0, i32 0, !dbg !2141
  %518 = load i32, i32* %517, align 8, !dbg !2141
  %519 = load i32, i32* %23, align 4, !dbg !2142
  %520 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !2143
  %521 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %520, i32 0, i32 2, !dbg !2144
  %522 = getelementptr inbounds [8 x i32], [8 x i32]* %521, i64 0, i64 0, !dbg !2143
  %523 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !2145
  %524 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %523, i32 0, i32 3, !dbg !2146
  %525 = load i8*, i8** %524, align 8, !dbg !2146
  %526 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !2147
  %527 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %526, i32 0, i32 4, !dbg !2148
  %528 = load i8*, i8** %527, align 8, !dbg !2148
  %529 = call i64 @quotearg_buffer_restyled(i8* %512, i64 %513, i8* %514, i64 %515, i32 %518, i32 %519, i32* %522, i8* %525, i8* %528), !dbg !2149
  br label %originalBB94

originalBB98alteredBB:                            ; preds = %originalBB98, %385
  %530 = load i32, i32* %17, align 4, !dbg !2151
  %531 = call i32* @__errno_location() #15, !dbg !2152
  store i32 %530, i32* %531, align 4, !dbg !2153
  %532 = load i8*, i8** %22, align 8, !dbg !2154
  br label %originalBB98
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @quotearg_buffer_restyled(i8*, i64, i8*, i64, i32, i32, i32*, i8*, i8*) #4 !dbg !2274 {
  %10 = load i32, i32* @x.37
  %11 = load i32, i32* @y.38
  %12 = sub i32 %10, 1
  %13 = mul i32 %10, %12
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  %16 = icmp slt i32 %11, 10
  %17 = or i1 %15, %16
  br i1 %17, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %9, %originalBBalteredBB
  %18 = alloca i64, align 8
  %19 = alloca i8*, align 8
  %20 = alloca i64, align 8
  %21 = alloca i8*, align 8
  %22 = alloca i64, align 8
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32*, align 8
  %26 = alloca i8*, align 8
  %27 = alloca i8*, align 8
  %28 = alloca i64, align 8
  %29 = alloca i64, align 8
  %30 = alloca i64, align 8
  %31 = alloca i8*, align 8
  %32 = alloca i64, align 8
  %33 = alloca i8, align 1
  %34 = alloca i8, align 1
  %35 = alloca i8, align 1
  %36 = alloca i8, align 1
  %37 = alloca i8, align 1
  %38 = alloca i8, align 1
  %39 = alloca i8, align 1
  %40 = alloca i8, align 1
  %41 = alloca i8, align 1
  %42 = alloca i8, align 1
  %43 = alloca i8, align 1
  %44 = alloca i64, align 8
  %45 = alloca i8, align 1
  %46 = alloca %struct.__mbstate_t, align 4
  %47 = alloca i32, align 4
  %48 = alloca i64, align 8
  %49 = alloca i64, align 8
  %50 = alloca i64, align 8
  store i8* %0, i8** %19, align 8
  call void @llvm.dbg.declare(metadata i8** %19, metadata !2279, metadata !DIExpression()), !dbg !2280
  store i64 %1, i64* %20, align 8
  call void @llvm.dbg.declare(metadata i64* %20, metadata !2281, metadata !DIExpression()), !dbg !2282
  store i8* %2, i8** %21, align 8
  call void @llvm.dbg.declare(metadata i8** %21, metadata !2283, metadata !DIExpression()), !dbg !2284
  store i64 %3, i64* %22, align 8
  call void @llvm.dbg.declare(metadata i64* %22, metadata !2285, metadata !DIExpression()), !dbg !2286
  store i32 %4, i32* %23, align 4
  call void @llvm.dbg.declare(metadata i32* %23, metadata !2287, metadata !DIExpression()), !dbg !2288
  store i32 %5, i32* %24, align 4
  call void @llvm.dbg.declare(metadata i32* %24, metadata !2289, metadata !DIExpression()), !dbg !2290
  store i32* %6, i32** %25, align 8
  call void @llvm.dbg.declare(metadata i32** %25, metadata !2291, metadata !DIExpression()), !dbg !2292
  store i8* %7, i8** %26, align 8
  call void @llvm.dbg.declare(metadata i8** %26, metadata !2293, metadata !DIExpression()), !dbg !2294
  store i8* %8, i8** %27, align 8
  call void @llvm.dbg.declare(metadata i8** %27, metadata !2295, metadata !DIExpression()), !dbg !2296
  call void @llvm.dbg.declare(metadata i64* %28, metadata !2297, metadata !DIExpression()), !dbg !2298
  call void @llvm.dbg.declare(metadata i64* %29, metadata !2299, metadata !DIExpression()), !dbg !2300
  store i64 0, i64* %29, align 8, !dbg !2300
  call void @llvm.dbg.declare(metadata i64* %30, metadata !2301, metadata !DIExpression()), !dbg !2302
  store i64 0, i64* %30, align 8, !dbg !2302
  call void @llvm.dbg.declare(metadata i8** %31, metadata !2303, metadata !DIExpression()), !dbg !2304
  store i8* null, i8** %31, align 8, !dbg !2304
  call void @llvm.dbg.declare(metadata i64* %32, metadata !2305, metadata !DIExpression()), !dbg !2306
  store i64 0, i64* %32, align 8, !dbg !2306
  call void @llvm.dbg.declare(metadata i8* %33, metadata !2307, metadata !DIExpression()), !dbg !2308
  store i8 0, i8* %33, align 1, !dbg !2308
  call void @llvm.dbg.declare(metadata i8* %34, metadata !2309, metadata !DIExpression()), !dbg !2310
  %51 = call i64 @__ctype_get_mb_cur_max() #10, !dbg !2311
  %52 = icmp eq i64 %51, 1, !dbg !2312
  %53 = zext i1 %52 to i8, !dbg !2310
  store i8 %53, i8* %34, align 1, !dbg !2310
  call void @llvm.dbg.declare(metadata i8* %35, metadata !2313, metadata !DIExpression()), !dbg !2314
  %54 = load i32, i32* %24, align 4, !dbg !2315
  %55 = and i32 %54, 2, !dbg !2316
  %56 = icmp ne i32 %55, 0, !dbg !2317
  %57 = zext i1 %56 to i8, !dbg !2314
  store i8 %57, i8* %35, align 1, !dbg !2314
  call void @llvm.dbg.declare(metadata i8* %36, metadata !2318, metadata !DIExpression()), !dbg !2319
  store i8 0, i8* %36, align 1, !dbg !2319
  call void @llvm.dbg.declare(metadata i8* %37, metadata !2320, metadata !DIExpression()), !dbg !2321
  store i8 0, i8* %37, align 1, !dbg !2321
  call void @llvm.dbg.declare(metadata i8* %38, metadata !2322, metadata !DIExpression()), !dbg !2323
  store i8 1, i8* %38, align 1, !dbg !2323
  %58 = load i32, i32* @x.37
  %59 = load i32, i32* @y.38
  %60 = sub i32 %58, 1
  %61 = mul i32 %58, %60
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %59, 10
  %65 = or i1 %63, %64
  br i1 %65, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %66, !dbg !2324

66:                                               ; preds = %originalBBpart21809, %originalBBpart2
  call void @llvm.dbg.label(metadata !2325), !dbg !2326
  %67 = load i32, i32* @x.37
  %68 = load i32, i32* @y.38
  %69 = sub i32 %67, 1
  %70 = mul i32 %67, %69
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %68, 10
  %74 = or i1 %72, %73
  br i1 %74, label %originalBB5, label %originalBB5alteredBB

originalBB5:                                      ; preds = %66, %originalBB5alteredBB
  %75 = load i32, i32* %23, align 4, !dbg !2327
  %76 = load i32, i32* @x.37
  %77 = load i32, i32* @y.38
  %78 = sub i32 %76, 1
  %79 = mul i32 %76, %78
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %77, 10
  %83 = or i1 %81, %82
  br i1 %83, label %originalBBpart27, label %originalBB5alteredBB

originalBBpart27:                                 ; preds = %originalBB5
  switch i32 %75, label %648 [
    i32 6, label %84
    i32 5, label %101
    i32 7, label %214
    i32 8, label %215
    i32 9, label %215
    i32 10, label %215
    i32 3, label %431
    i32 1, label %448
    i32 4, label %465
    i32 2, label %518
    i32 0, label %631
  ], !dbg !2328

84:                                               ; preds = %originalBBpart27
  %85 = load i32, i32* @x.37
  %86 = load i32, i32* @y.38
  %87 = sub i32 %85, 1
  %88 = mul i32 %85, %87
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %86, 10
  %92 = or i1 %90, %91
  br i1 %92, label %originalBB9, label %originalBB9alteredBB

originalBB9:                                      ; preds = %84, %originalBB9alteredBB
  store i32 5, i32* %23, align 4, !dbg !2329
  store i8 1, i8* %35, align 1, !dbg !2331
  %93 = load i32, i32* @x.37
  %94 = load i32, i32* @y.38
  %95 = sub i32 %93, 1
  %96 = mul i32 %93, %95
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %94, 10
  %100 = or i1 %98, %99
  br i1 %100, label %originalBBpart211, label %originalBB9alteredBB

originalBBpart211:                                ; preds = %originalBB9
  br label %101, !dbg !2332

101:                                              ; preds = %originalBBpart211, %originalBBpart27
  %102 = load i32, i32* @x.37
  %103 = load i32, i32* @y.38
  %104 = sub i32 %102, 1
  %105 = mul i32 %102, %104
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %103, 10
  %109 = or i1 %107, %108
  br i1 %109, label %originalBB13, label %originalBB13alteredBB

originalBB13:                                     ; preds = %101, %originalBB13alteredBB
  %110 = load i8, i8* %35, align 1, !dbg !2333
  %111 = trunc i8 %110 to i1, !dbg !2333
  %112 = load i32, i32* @x.37
  %113 = load i32, i32* @y.38
  %114 = sub i32 %112, 1
  %115 = mul i32 %112, %114
  %116 = urem i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = icmp slt i32 %113, 10
  %119 = or i1 %117, %118
  br i1 %119, label %originalBBpart215, label %originalBB13alteredBB

originalBBpart215:                                ; preds = %originalBB13
  br i1 %111, label %213, label %120, !dbg !2335

120:                                              ; preds = %originalBBpart215
  %121 = load i32, i32* @x.37
  %122 = load i32, i32* @y.38
  %123 = sub i32 %121, 1
  %124 = mul i32 %121, %123
  %125 = urem i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %122, 10
  %128 = or i1 %126, %127
  br i1 %128, label %originalBB17, label %originalBB17alteredBB

originalBB17:                                     ; preds = %120, %originalBB17alteredBB
  %129 = load i32, i32* @x.37
  %130 = load i32, i32* @y.38
  %131 = sub i32 %129, 1
  %132 = mul i32 %129, %131
  %133 = urem i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = icmp slt i32 %130, 10
  %136 = or i1 %134, %135
  br i1 %136, label %originalBBpart219, label %originalBB17alteredBB

originalBBpart219:                                ; preds = %originalBB17
  br label %137, !dbg !2336

137:                                              ; preds = %originalBBpart219
  %138 = load i32, i32* @x.37
  %139 = load i32, i32* @y.38
  %140 = sub i32 %138, 1
  %141 = mul i32 %138, %140
  %142 = urem i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = icmp slt i32 %139, 10
  %145 = or i1 %143, %144
  br i1 %145, label %originalBB21, label %originalBB21alteredBB

originalBB21:                                     ; preds = %137, %originalBB21alteredBB
  %146 = load i64, i64* %29, align 8, !dbg !2337
  %147 = load i64, i64* %20, align 8, !dbg !2337
  %148 = icmp ult i64 %146, %147, !dbg !2337
  %149 = load i32, i32* @x.37
  %150 = load i32, i32* @y.38
  %151 = sub i32 %149, 1
  %152 = mul i32 %149, %151
  %153 = urem i32 %152, 2
  %154 = icmp eq i32 %153, 0
  %155 = icmp slt i32 %150, 10
  %156 = or i1 %154, %155
  br i1 %156, label %originalBBpart223, label %originalBB21alteredBB

originalBBpart223:                                ; preds = %originalBB21
  br i1 %148, label %157, label %177, !dbg !2340

157:                                              ; preds = %originalBBpart223
  %158 = load i32, i32* @x.37
  %159 = load i32, i32* @y.38
  %160 = sub i32 %158, 1
  %161 = mul i32 %158, %160
  %162 = urem i32 %161, 2
  %163 = icmp eq i32 %162, 0
  %164 = icmp slt i32 %159, 10
  %165 = or i1 %163, %164
  br i1 %165, label %originalBB25, label %originalBB25alteredBB

originalBB25:                                     ; preds = %157, %originalBB25alteredBB
  %166 = load i8*, i8** %19, align 8, !dbg !2337
  %167 = load i64, i64* %29, align 8, !dbg !2337
  %168 = getelementptr inbounds i8, i8* %166, i64 %167, !dbg !2337
  store i8 34, i8* %168, align 1, !dbg !2337
  %169 = load i32, i32* @x.37
  %170 = load i32, i32* @y.38
  %171 = sub i32 %169, 1
  %172 = mul i32 %169, %171
  %173 = urem i32 %172, 2
  %174 = icmp eq i32 %173, 0
  %175 = icmp slt i32 %170, 10
  %176 = or i1 %174, %175
  br i1 %176, label %originalBBpart227, label %originalBB25alteredBB

originalBBpart227:                                ; preds = %originalBB25
  br label %177, !dbg !2337

177:                                              ; preds = %originalBBpart227, %originalBBpart223
  %178 = load i32, i32* @x.37
  %179 = load i32, i32* @y.38
  %180 = sub i32 %178, 1
  %181 = mul i32 %178, %180
  %182 = urem i32 %181, 2
  %183 = icmp eq i32 %182, 0
  %184 = icmp slt i32 %179, 10
  %185 = or i1 %183, %184
  br i1 %185, label %originalBB29, label %originalBB29alteredBB

originalBB29:                                     ; preds = %177, %originalBB29alteredBB
  %186 = load i64, i64* %29, align 8, !dbg !2340
  %187 = add i64 %186, 1, !dbg !2340
  store i64 %187, i64* %29, align 8, !dbg !2340
  %188 = load i32, i32* @x.37
  %189 = load i32, i32* @y.38
  %190 = sub i32 %188, 1
  %191 = mul i32 %188, %190
  %192 = urem i32 %191, 2
  %193 = icmp eq i32 %192, 0
  %194 = icmp slt i32 %189, 10
  %195 = or i1 %193, %194
  br i1 %195, label %originalBBpart241, label %originalBB29alteredBB

originalBBpart241:                                ; preds = %originalBB29
  br label %196, !dbg !2340

196:                                              ; preds = %originalBBpart241
  %197 = load i32, i32* @x.37
  %198 = load i32, i32* @y.38
  %199 = sub i32 %197, 1
  %200 = mul i32 %197, %199
  %201 = urem i32 %200, 2
  %202 = icmp eq i32 %201, 0
  %203 = icmp slt i32 %198, 10
  %204 = or i1 %202, %203
  br i1 %204, label %originalBB43, label %originalBB43alteredBB

originalBB43:                                     ; preds = %196, %originalBB43alteredBB
  %205 = load i32, i32* @x.37
  %206 = load i32, i32* @y.38
  %207 = sub i32 %205, 1
  %208 = mul i32 %205, %207
  %209 = urem i32 %208, 2
  %210 = icmp eq i32 %209, 0
  %211 = icmp slt i32 %206, 10
  %212 = or i1 %210, %211
  br i1 %212, label %originalBBpart245, label %originalBB43alteredBB

originalBBpart245:                                ; preds = %originalBB43
  br label %213, !dbg !2340

213:                                              ; preds = %originalBBpart245, %originalBBpart215
  store i8 1, i8* %33, align 1, !dbg !2341
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.85, i64 0, i64 0), i8** %31, align 8, !dbg !2342
  store i64 1, i64* %32, align 8, !dbg !2343
  br label %665, !dbg !2344

214:                                              ; preds = %originalBBpart27
  store i8 1, i8* %33, align 1, !dbg !2345
  store i8 0, i8* %35, align 1, !dbg !2346
  br label %665, !dbg !2347

215:                                              ; preds = %originalBBpart27, %originalBBpart27, %originalBBpart27
  %216 = load i32, i32* @x.37
  %217 = load i32, i32* @y.38
  %218 = sub i32 %216, 1
  %219 = mul i32 %216, %218
  %220 = urem i32 %219, 2
  %221 = icmp eq i32 %220, 0
  %222 = icmp slt i32 %217, 10
  %223 = or i1 %221, %222
  br i1 %223, label %originalBB47, label %originalBB47alteredBB

originalBB47:                                     ; preds = %215, %originalBB47alteredBB
  %224 = load i32, i32* %23, align 4, !dbg !2348
  %225 = icmp ne i32 %224, 10, !dbg !2351
  %226 = load i32, i32* @x.37
  %227 = load i32, i32* @y.38
  %228 = sub i32 %226, 1
  %229 = mul i32 %226, %228
  %230 = urem i32 %229, 2
  %231 = icmp eq i32 %230, 0
  %232 = icmp slt i32 %227, 10
  %233 = or i1 %231, %232
  br i1 %233, label %originalBBpart249, label %originalBB47alteredBB

originalBBpart249:                                ; preds = %originalBB47
  br i1 %225, label %234, label %255, !dbg !2352

234:                                              ; preds = %originalBBpart249
  %235 = load i32, i32* @x.37
  %236 = load i32, i32* @y.38
  %237 = sub i32 %235, 1
  %238 = mul i32 %235, %237
  %239 = urem i32 %238, 2
  %240 = icmp eq i32 %239, 0
  %241 = icmp slt i32 %236, 10
  %242 = or i1 %240, %241
  br i1 %242, label %originalBB51, label %originalBB51alteredBB

originalBB51:                                     ; preds = %234, %originalBB51alteredBB
  %243 = load i32, i32* %23, align 4, !dbg !2353
  %244 = call i8* @gettext_quote(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11.86, i64 0, i64 0), i32 %243), !dbg !2355
  store i8* %244, i8** %26, align 8, !dbg !2356
  %245 = load i32, i32* %23, align 4, !dbg !2357
  %246 = call i8* @gettext_quote(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.87, i64 0, i64 0), i32 %245), !dbg !2358
  store i8* %246, i8** %27, align 8, !dbg !2359
  %247 = load i32, i32* @x.37
  %248 = load i32, i32* @y.38
  %249 = sub i32 %247, 1
  %250 = mul i32 %247, %249
  %251 = urem i32 %250, 2
  %252 = icmp eq i32 %251, 0
  %253 = icmp slt i32 %248, 10
  %254 = or i1 %252, %253
  br i1 %254, label %originalBBpart253, label %originalBB51alteredBB

originalBBpart253:                                ; preds = %originalBB51
  br label %255, !dbg !2360

255:                                              ; preds = %originalBBpart253, %originalBBpart249
  %256 = load i8, i8* %35, align 1, !dbg !2361
  %257 = trunc i8 %256 to i1, !dbg !2361
  br i1 %257, label %411, label %258, !dbg !2363

258:                                              ; preds = %255
  %259 = load i32, i32* @x.37
  %260 = load i32, i32* @y.38
  %261 = sub i32 %259, 1
  %262 = mul i32 %259, %261
  %263 = urem i32 %262, 2
  %264 = icmp eq i32 %263, 0
  %265 = icmp slt i32 %260, 10
  %266 = or i1 %264, %265
  br i1 %266, label %originalBB55, label %originalBB55alteredBB

originalBB55:                                     ; preds = %258, %originalBB55alteredBB
  %267 = load i8*, i8** %26, align 8, !dbg !2364
  store i8* %267, i8** %31, align 8, !dbg !2366
  %268 = load i32, i32* @x.37
  %269 = load i32, i32* @y.38
  %270 = sub i32 %268, 1
  %271 = mul i32 %268, %270
  %272 = urem i32 %271, 2
  %273 = icmp eq i32 %272, 0
  %274 = icmp slt i32 %269, 10
  %275 = or i1 %273, %274
  br i1 %275, label %originalBBpart257, label %originalBB55alteredBB

originalBBpart257:                                ; preds = %originalBB55
  br label %276, !dbg !2367

276:                                              ; preds = %originalBBpart287, %originalBBpart257
  %277 = load i32, i32* @x.37
  %278 = load i32, i32* @y.38
  %279 = sub i32 %277, 1
  %280 = mul i32 %277, %279
  %281 = urem i32 %280, 2
  %282 = icmp eq i32 %281, 0
  %283 = icmp slt i32 %278, 10
  %284 = or i1 %282, %283
  br i1 %284, label %originalBB59, label %originalBB59alteredBB

originalBB59:                                     ; preds = %276, %originalBB59alteredBB
  %285 = load i8*, i8** %31, align 8, !dbg !2368
  %286 = load i8, i8* %285, align 1, !dbg !2370
  %287 = icmp ne i8 %286, 0, !dbg !2371
  %288 = load i32, i32* @x.37
  %289 = load i32, i32* @y.38
  %290 = sub i32 %288, 1
  %291 = mul i32 %288, %290
  %292 = urem i32 %291, 2
  %293 = icmp eq i32 %292, 0
  %294 = icmp slt i32 %289, 10
  %295 = or i1 %293, %294
  br i1 %295, label %originalBBpart261, label %originalBB59alteredBB

originalBBpart261:                                ; preds = %originalBB59
  br i1 %287, label %296, label %394, !dbg !2371

296:                                              ; preds = %originalBBpart261
  %297 = load i32, i32* @x.37
  %298 = load i32, i32* @y.38
  %299 = sub i32 %297, 1
  %300 = mul i32 %297, %299
  %301 = urem i32 %300, 2
  %302 = icmp eq i32 %301, 0
  %303 = icmp slt i32 %298, 10
  %304 = or i1 %302, %303
  br i1 %304, label %originalBB63, label %originalBB63alteredBB

originalBB63:                                     ; preds = %296, %originalBB63alteredBB
  %305 = load i32, i32* @x.37
  %306 = load i32, i32* @y.38
  %307 = sub i32 %305, 1
  %308 = mul i32 %305, %307
  %309 = urem i32 %308, 2
  %310 = icmp eq i32 %309, 0
  %311 = icmp slt i32 %306, 10
  %312 = or i1 %310, %311
  br i1 %312, label %originalBBpart265, label %originalBB63alteredBB

originalBBpart265:                                ; preds = %originalBB63
  br label %313, !dbg !2372

313:                                              ; preds = %originalBBpart265
  %314 = load i32, i32* @x.37
  %315 = load i32, i32* @y.38
  %316 = sub i32 %314, 1
  %317 = mul i32 %314, %316
  %318 = urem i32 %317, 2
  %319 = icmp eq i32 %318, 0
  %320 = icmp slt i32 %315, 10
  %321 = or i1 %319, %320
  br i1 %321, label %originalBB67, label %originalBB67alteredBB

originalBB67:                                     ; preds = %313, %originalBB67alteredBB
  %322 = load i64, i64* %29, align 8, !dbg !2373
  %323 = load i64, i64* %20, align 8, !dbg !2373
  %324 = icmp ult i64 %322, %323, !dbg !2373
  %325 = load i32, i32* @x.37
  %326 = load i32, i32* @y.38
  %327 = sub i32 %325, 1
  %328 = mul i32 %325, %327
  %329 = urem i32 %328, 2
  %330 = icmp eq i32 %329, 0
  %331 = icmp slt i32 %326, 10
  %332 = or i1 %330, %331
  br i1 %332, label %originalBBpart269, label %originalBB67alteredBB

originalBBpart269:                                ; preds = %originalBB67
  br i1 %324, label %333, label %355, !dbg !2376

333:                                              ; preds = %originalBBpart269
  %334 = load i32, i32* @x.37
  %335 = load i32, i32* @y.38
  %336 = sub i32 %334, 1
  %337 = mul i32 %334, %336
  %338 = urem i32 %337, 2
  %339 = icmp eq i32 %338, 0
  %340 = icmp slt i32 %335, 10
  %341 = or i1 %339, %340
  br i1 %341, label %originalBB71, label %originalBB71alteredBB

originalBB71:                                     ; preds = %333, %originalBB71alteredBB
  %342 = load i8*, i8** %31, align 8, !dbg !2373
  %343 = load i8, i8* %342, align 1, !dbg !2373
  %344 = load i8*, i8** %19, align 8, !dbg !2373
  %345 = load i64, i64* %29, align 8, !dbg !2373
  %346 = getelementptr inbounds i8, i8* %344, i64 %345, !dbg !2373
  store i8 %343, i8* %346, align 1, !dbg !2373
  %347 = load i32, i32* @x.37
  %348 = load i32, i32* @y.38
  %349 = sub i32 %347, 1
  %350 = mul i32 %347, %349
  %351 = urem i32 %350, 2
  %352 = icmp eq i32 %351, 0
  %353 = icmp slt i32 %348, 10
  %354 = or i1 %352, %353
  br i1 %354, label %originalBBpart273, label %originalBB71alteredBB

originalBBpart273:                                ; preds = %originalBB71
  br label %355, !dbg !2373

355:                                              ; preds = %originalBBpart273, %originalBBpart269
  %356 = load i32, i32* @x.37
  %357 = load i32, i32* @y.38
  %358 = sub i32 %356, 1
  %359 = mul i32 %356, %358
  %360 = urem i32 %359, 2
  %361 = icmp eq i32 %360, 0
  %362 = icmp slt i32 %357, 10
  %363 = or i1 %361, %362
  br i1 %363, label %originalBB75, label %originalBB75alteredBB

originalBB75:                                     ; preds = %355, %originalBB75alteredBB
  %364 = load i64, i64* %29, align 8, !dbg !2376
  %365 = add i64 %364, 1, !dbg !2376
  store i64 %365, i64* %29, align 8, !dbg !2376
  %366 = load i32, i32* @x.37
  %367 = load i32, i32* @y.38
  %368 = sub i32 %366, 1
  %369 = mul i32 %366, %368
  %370 = urem i32 %369, 2
  %371 = icmp eq i32 %370, 0
  %372 = icmp slt i32 %367, 10
  %373 = or i1 %371, %372
  br i1 %373, label %originalBBpart283, label %originalBB75alteredBB

originalBBpart283:                                ; preds = %originalBB75
  br label %374, !dbg !2376

374:                                              ; preds = %originalBBpart283
  br label %375, !dbg !2376

375:                                              ; preds = %374
  %376 = load i32, i32* @x.37
  %377 = load i32, i32* @y.38
  %378 = sub i32 %376, 1
  %379 = mul i32 %376, %378
  %380 = urem i32 %379, 2
  %381 = icmp eq i32 %380, 0
  %382 = icmp slt i32 %377, 10
  %383 = or i1 %381, %382
  br i1 %383, label %originalBB85, label %originalBB85alteredBB

originalBB85:                                     ; preds = %375, %originalBB85alteredBB
  %384 = load i8*, i8** %31, align 8, !dbg !2377
  %385 = getelementptr inbounds i8, i8* %384, i32 1, !dbg !2377
  store i8* %385, i8** %31, align 8, !dbg !2377
  %386 = load i32, i32* @x.37
  %387 = load i32, i32* @y.38
  %388 = sub i32 %386, 1
  %389 = mul i32 %386, %388
  %390 = urem i32 %389, 2
  %391 = icmp eq i32 %390, 0
  %392 = icmp slt i32 %387, 10
  %393 = or i1 %391, %392
  br i1 %393, label %originalBBpart287, label %originalBB85alteredBB

originalBBpart287:                                ; preds = %originalBB85
  br label %276, !dbg !2378, !llvm.loop !2379

394:                                              ; preds = %originalBBpart261
  %395 = load i32, i32* @x.37
  %396 = load i32, i32* @y.38
  %397 = sub i32 %395, 1
  %398 = mul i32 %395, %397
  %399 = urem i32 %398, 2
  %400 = icmp eq i32 %399, 0
  %401 = icmp slt i32 %396, 10
  %402 = or i1 %400, %401
  br i1 %402, label %originalBB89, label %originalBB89alteredBB

originalBB89:                                     ; preds = %394, %originalBB89alteredBB
  %403 = load i32, i32* @x.37
  %404 = load i32, i32* @y.38
  %405 = sub i32 %403, 1
  %406 = mul i32 %403, %405
  %407 = urem i32 %406, 2
  %408 = icmp eq i32 %407, 0
  %409 = icmp slt i32 %404, 10
  %410 = or i1 %408, %409
  br i1 %410, label %originalBBpart291, label %originalBB89alteredBB

originalBBpart291:                                ; preds = %originalBB89
  br label %411, !dbg !2380

411:                                              ; preds = %originalBBpart291, %255
  %412 = load i32, i32* @x.37
  %413 = load i32, i32* @y.38
  %414 = sub i32 %412, 1
  %415 = mul i32 %412, %414
  %416 = urem i32 %415, 2
  %417 = icmp eq i32 %416, 0
  %418 = icmp slt i32 %413, 10
  %419 = or i1 %417, %418
  br i1 %419, label %originalBB93, label %originalBB93alteredBB

originalBB93:                                     ; preds = %411, %originalBB93alteredBB
  store i8 1, i8* %33, align 1, !dbg !2381
  %420 = load i8*, i8** %27, align 8, !dbg !2382
  store i8* %420, i8** %31, align 8, !dbg !2383
  %421 = load i8*, i8** %31, align 8, !dbg !2384
  %422 = call i64 @strlen(i8* %421) #13, !dbg !2385
  store i64 %422, i64* %32, align 8, !dbg !2386
  %423 = load i32, i32* @x.37
  %424 = load i32, i32* @y.38
  %425 = sub i32 %423, 1
  %426 = mul i32 %423, %425
  %427 = urem i32 %426, 2
  %428 = icmp eq i32 %427, 0
  %429 = icmp slt i32 %424, 10
  %430 = or i1 %428, %429
  br i1 %430, label %originalBBpart295, label %originalBB93alteredBB

originalBBpart295:                                ; preds = %originalBB93
  br label %665, !dbg !2387

431:                                              ; preds = %originalBBpart27
  %432 = load i32, i32* @x.37
  %433 = load i32, i32* @y.38
  %434 = sub i32 %432, 1
  %435 = mul i32 %432, %434
  %436 = urem i32 %435, 2
  %437 = icmp eq i32 %436, 0
  %438 = icmp slt i32 %433, 10
  %439 = or i1 %437, %438
  br i1 %439, label %originalBB97, label %originalBB97alteredBB

originalBB97:                                     ; preds = %431, %originalBB97alteredBB
  store i8 1, i8* %33, align 1, !dbg !2388
  %440 = load i32, i32* @x.37
  %441 = load i32, i32* @y.38
  %442 = sub i32 %440, 1
  %443 = mul i32 %440, %442
  %444 = urem i32 %443, 2
  %445 = icmp eq i32 %444, 0
  %446 = icmp slt i32 %441, 10
  %447 = or i1 %445, %446
  br i1 %447, label %originalBBpart299, label %originalBB97alteredBB

originalBBpart299:                                ; preds = %originalBB97
  br label %448, !dbg !2389

448:                                              ; preds = %originalBBpart299, %originalBBpart27
  %449 = load i32, i32* @x.37
  %450 = load i32, i32* @y.38
  %451 = sub i32 %449, 1
  %452 = mul i32 %449, %451
  %453 = urem i32 %452, 2
  %454 = icmp eq i32 %453, 0
  %455 = icmp slt i32 %450, 10
  %456 = or i1 %454, %455
  br i1 %456, label %originalBB101, label %originalBB101alteredBB

originalBB101:                                    ; preds = %448, %originalBB101alteredBB
  store i8 1, i8* %35, align 1, !dbg !2390
  %457 = load i32, i32* @x.37
  %458 = load i32, i32* @y.38
  %459 = sub i32 %457, 1
  %460 = mul i32 %457, %459
  %461 = urem i32 %460, 2
  %462 = icmp eq i32 %461, 0
  %463 = icmp slt i32 %458, 10
  %464 = or i1 %462, %463
  br i1 %464, label %originalBBpart2103, label %originalBB101alteredBB

originalBBpart2103:                               ; preds = %originalBB101
  br label %465, !dbg !2391

465:                                              ; preds = %originalBBpart2103, %originalBBpart27
  %466 = load i32, i32* @x.37
  %467 = load i32, i32* @y.38
  %468 = sub i32 %466, 1
  %469 = mul i32 %466, %468
  %470 = urem i32 %469, 2
  %471 = icmp eq i32 %470, 0
  %472 = icmp slt i32 %467, 10
  %473 = or i1 %471, %472
  br i1 %473, label %originalBB105, label %originalBB105alteredBB

originalBB105:                                    ; preds = %465, %originalBB105alteredBB
  %474 = load i8, i8* %35, align 1, !dbg !2392
  %475 = trunc i8 %474 to i1, !dbg !2392
  %476 = load i32, i32* @x.37
  %477 = load i32, i32* @y.38
  %478 = sub i32 %476, 1
  %479 = mul i32 %476, %478
  %480 = urem i32 %479, 2
  %481 = icmp eq i32 %480, 0
  %482 = icmp slt i32 %477, 10
  %483 = or i1 %481, %482
  br i1 %483, label %originalBBpart2107, label %originalBB105alteredBB

originalBBpart2107:                               ; preds = %originalBB105
  br i1 %475, label %501, label %484, !dbg !2394

484:                                              ; preds = %originalBBpart2107
  %485 = load i32, i32* @x.37
  %486 = load i32, i32* @y.38
  %487 = sub i32 %485, 1
  %488 = mul i32 %485, %487
  %489 = urem i32 %488, 2
  %490 = icmp eq i32 %489, 0
  %491 = icmp slt i32 %486, 10
  %492 = or i1 %490, %491
  br i1 %492, label %originalBB109, label %originalBB109alteredBB

originalBB109:                                    ; preds = %484, %originalBB109alteredBB
  store i8 1, i8* %33, align 1, !dbg !2395
  %493 = load i32, i32* @x.37
  %494 = load i32, i32* @y.38
  %495 = sub i32 %493, 1
  %496 = mul i32 %493, %495
  %497 = urem i32 %496, 2
  %498 = icmp eq i32 %497, 0
  %499 = icmp slt i32 %494, 10
  %500 = or i1 %498, %499
  br i1 %500, label %originalBBpart2111, label %originalBB109alteredBB

originalBBpart2111:                               ; preds = %originalBB109
  br label %501, !dbg !2396

501:                                              ; preds = %originalBBpart2111, %originalBBpart2107
  %502 = load i32, i32* @x.37
  %503 = load i32, i32* @y.38
  %504 = sub i32 %502, 1
  %505 = mul i32 %502, %504
  %506 = urem i32 %505, 2
  %507 = icmp eq i32 %506, 0
  %508 = icmp slt i32 %503, 10
  %509 = or i1 %507, %508
  br i1 %509, label %originalBB113, label %originalBB113alteredBB

originalBB113:                                    ; preds = %501, %originalBB113alteredBB
  %510 = load i32, i32* @x.37
  %511 = load i32, i32* @y.38
  %512 = sub i32 %510, 1
  %513 = mul i32 %510, %512
  %514 = urem i32 %513, 2
  %515 = icmp eq i32 %514, 0
  %516 = icmp slt i32 %511, 10
  %517 = or i1 %515, %516
  br i1 %517, label %originalBBpart2115, label %originalBB113alteredBB

originalBBpart2115:                               ; preds = %originalBB113
  br label %518, !dbg !2397

518:                                              ; preds = %originalBBpart2115, %originalBBpart27
  store i32 2, i32* %23, align 4, !dbg !2398
  %519 = load i8, i8* %35, align 1, !dbg !2399
  %520 = trunc i8 %519 to i1, !dbg !2399
  br i1 %520, label %614, label %521, !dbg !2401

521:                                              ; preds = %518
  %522 = load i32, i32* @x.37
  %523 = load i32, i32* @y.38
  %524 = sub i32 %522, 1
  %525 = mul i32 %522, %524
  %526 = urem i32 %525, 2
  %527 = icmp eq i32 %526, 0
  %528 = icmp slt i32 %523, 10
  %529 = or i1 %527, %528
  br i1 %529, label %originalBB117, label %originalBB117alteredBB

originalBB117:                                    ; preds = %521, %originalBB117alteredBB
  %530 = load i32, i32* @x.37
  %531 = load i32, i32* @y.38
  %532 = sub i32 %530, 1
  %533 = mul i32 %530, %532
  %534 = urem i32 %533, 2
  %535 = icmp eq i32 %534, 0
  %536 = icmp slt i32 %531, 10
  %537 = or i1 %535, %536
  br i1 %537, label %originalBBpart2119, label %originalBB117alteredBB

originalBBpart2119:                               ; preds = %originalBB117
  br label %538, !dbg !2402

538:                                              ; preds = %originalBBpart2119
  %539 = load i32, i32* @x.37
  %540 = load i32, i32* @y.38
  %541 = sub i32 %539, 1
  %542 = mul i32 %539, %541
  %543 = urem i32 %542, 2
  %544 = icmp eq i32 %543, 0
  %545 = icmp slt i32 %540, 10
  %546 = or i1 %544, %545
  br i1 %546, label %originalBB121, label %originalBB121alteredBB

originalBB121:                                    ; preds = %538, %originalBB121alteredBB
  %547 = load i64, i64* %29, align 8, !dbg !2403
  %548 = load i64, i64* %20, align 8, !dbg !2403
  %549 = icmp ult i64 %547, %548, !dbg !2403
  %550 = load i32, i32* @x.37
  %551 = load i32, i32* @y.38
  %552 = sub i32 %550, 1
  %553 = mul i32 %550, %552
  %554 = urem i32 %553, 2
  %555 = icmp eq i32 %554, 0
  %556 = icmp slt i32 %551, 10
  %557 = or i1 %555, %556
  br i1 %557, label %originalBBpart2123, label %originalBB121alteredBB

originalBBpart2123:                               ; preds = %originalBB121
  br i1 %549, label %558, label %578, !dbg !2406

558:                                              ; preds = %originalBBpart2123
  %559 = load i32, i32* @x.37
  %560 = load i32, i32* @y.38
  %561 = sub i32 %559, 1
  %562 = mul i32 %559, %561
  %563 = urem i32 %562, 2
  %564 = icmp eq i32 %563, 0
  %565 = icmp slt i32 %560, 10
  %566 = or i1 %564, %565
  br i1 %566, label %originalBB125, label %originalBB125alteredBB

originalBB125:                                    ; preds = %558, %originalBB125alteredBB
  %567 = load i8*, i8** %19, align 8, !dbg !2403
  %568 = load i64, i64* %29, align 8, !dbg !2403
  %569 = getelementptr inbounds i8, i8* %567, i64 %568, !dbg !2403
  store i8 39, i8* %569, align 1, !dbg !2403
  %570 = load i32, i32* @x.37
  %571 = load i32, i32* @y.38
  %572 = sub i32 %570, 1
  %573 = mul i32 %570, %572
  %574 = urem i32 %573, 2
  %575 = icmp eq i32 %574, 0
  %576 = icmp slt i32 %571, 10
  %577 = or i1 %575, %576
  br i1 %577, label %originalBBpart2127, label %originalBB125alteredBB

originalBBpart2127:                               ; preds = %originalBB125
  br label %578, !dbg !2403

578:                                              ; preds = %originalBBpart2127, %originalBBpart2123
  %579 = load i32, i32* @x.37
  %580 = load i32, i32* @y.38
  %581 = sub i32 %579, 1
  %582 = mul i32 %579, %581
  %583 = urem i32 %582, 2
  %584 = icmp eq i32 %583, 0
  %585 = icmp slt i32 %580, 10
  %586 = or i1 %584, %585
  br i1 %586, label %originalBB129, label %originalBB129alteredBB

originalBB129:                                    ; preds = %578, %originalBB129alteredBB
  %587 = load i64, i64* %29, align 8, !dbg !2406
  %588 = add i64 %587, 1, !dbg !2406
  store i64 %588, i64* %29, align 8, !dbg !2406
  %589 = load i32, i32* @x.37
  %590 = load i32, i32* @y.38
  %591 = sub i32 %589, 1
  %592 = mul i32 %589, %591
  %593 = urem i32 %592, 2
  %594 = icmp eq i32 %593, 0
  %595 = icmp slt i32 %590, 10
  %596 = or i1 %594, %595
  br i1 %596, label %originalBBpart2135, label %originalBB129alteredBB

originalBBpart2135:                               ; preds = %originalBB129
  br label %597, !dbg !2406

597:                                              ; preds = %originalBBpart2135
  %598 = load i32, i32* @x.37
  %599 = load i32, i32* @y.38
  %600 = sub i32 %598, 1
  %601 = mul i32 %598, %600
  %602 = urem i32 %601, 2
  %603 = icmp eq i32 %602, 0
  %604 = icmp slt i32 %599, 10
  %605 = or i1 %603, %604
  br i1 %605, label %originalBB137, label %originalBB137alteredBB

originalBB137:                                    ; preds = %597, %originalBB137alteredBB
  %606 = load i32, i32* @x.37
  %607 = load i32, i32* @y.38
  %608 = sub i32 %606, 1
  %609 = mul i32 %606, %608
  %610 = urem i32 %609, 2
  %611 = icmp eq i32 %610, 0
  %612 = icmp slt i32 %607, 10
  %613 = or i1 %611, %612
  br i1 %613, label %originalBBpart2139, label %originalBB137alteredBB

originalBBpart2139:                               ; preds = %originalBB137
  br label %614, !dbg !2406

614:                                              ; preds = %originalBBpart2139, %518
  %615 = load i32, i32* @x.37
  %616 = load i32, i32* @y.38
  %617 = sub i32 %615, 1
  %618 = mul i32 %615, %617
  %619 = urem i32 %618, 2
  %620 = icmp eq i32 %619, 0
  %621 = icmp slt i32 %616, 10
  %622 = or i1 %620, %621
  br i1 %622, label %originalBB141, label %originalBB141alteredBB

originalBB141:                                    ; preds = %614, %originalBB141alteredBB
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.87, i64 0, i64 0), i8** %31, align 8, !dbg !2407
  store i64 1, i64* %32, align 8, !dbg !2408
  %623 = load i32, i32* @x.37
  %624 = load i32, i32* @y.38
  %625 = sub i32 %623, 1
  %626 = mul i32 %623, %625
  %627 = urem i32 %626, 2
  %628 = icmp eq i32 %627, 0
  %629 = icmp slt i32 %624, 10
  %630 = or i1 %628, %629
  br i1 %630, label %originalBBpart2143, label %originalBB141alteredBB

originalBBpart2143:                               ; preds = %originalBB141
  br label %665, !dbg !2409

631:                                              ; preds = %originalBBpart27
  %632 = load i32, i32* @x.37
  %633 = load i32, i32* @y.38
  %634 = sub i32 %632, 1
  %635 = mul i32 %632, %634
  %636 = urem i32 %635, 2
  %637 = icmp eq i32 %636, 0
  %638 = icmp slt i32 %633, 10
  %639 = or i1 %637, %638
  br i1 %639, label %originalBB145, label %originalBB145alteredBB

originalBB145:                                    ; preds = %631, %originalBB145alteredBB
  store i8 0, i8* %35, align 1, !dbg !2410
  %640 = load i32, i32* @x.37
  %641 = load i32, i32* @y.38
  %642 = sub i32 %640, 1
  %643 = mul i32 %640, %642
  %644 = urem i32 %643, 2
  %645 = icmp eq i32 %644, 0
  %646 = icmp slt i32 %641, 10
  %647 = or i1 %645, %646
  br i1 %647, label %originalBBpart2147, label %originalBB145alteredBB

originalBBpart2147:                               ; preds = %originalBB145
  br label %665, !dbg !2411

648:                                              ; preds = %originalBBpart27
  %649 = load i32, i32* @x.37
  %650 = load i32, i32* @y.38
  %651 = sub i32 %649, 1
  %652 = mul i32 %649, %651
  %653 = urem i32 %652, 2
  %654 = icmp eq i32 %653, 0
  %655 = icmp slt i32 %650, 10
  %656 = or i1 %654, %655
  br i1 %656, label %originalBB149, label %originalBB149alteredBB

originalBB149:                                    ; preds = %648, %originalBB149alteredBB
  call void @abort() #12, !dbg !2412
  %657 = load i32, i32* @x.37
  %658 = load i32, i32* @y.38
  %659 = sub i32 %657, 1
  %660 = mul i32 %657, %659
  %661 = urem i32 %660, 2
  %662 = icmp eq i32 %661, 0
  %663 = icmp slt i32 %658, 10
  %664 = or i1 %662, %663
  br i1 %664, label %originalBBpart2151, label %originalBB149alteredBB

originalBBpart2151:                               ; preds = %originalBB149
  unreachable, !dbg !2412

665:                                              ; preds = %originalBBpart2147, %originalBBpart2143, %originalBBpart295, %214, %213
  %666 = load i32, i32* @x.37
  %667 = load i32, i32* @y.38
  %668 = sub i32 %666, 1
  %669 = mul i32 %666, %668
  %670 = urem i32 %669, 2
  %671 = icmp eq i32 %670, 0
  %672 = icmp slt i32 %667, 10
  %673 = or i1 %671, %672
  br i1 %673, label %originalBB153, label %originalBB153alteredBB

originalBB153:                                    ; preds = %665, %originalBB153alteredBB
  store i64 0, i64* %28, align 8, !dbg !2413
  %674 = load i32, i32* @x.37
  %675 = load i32, i32* @y.38
  %676 = sub i32 %674, 1
  %677 = mul i32 %674, %676
  %678 = urem i32 %677, 2
  %679 = icmp eq i32 %678, 0
  %680 = icmp slt i32 %675, 10
  %681 = or i1 %679, %680
  br i1 %681, label %originalBBpart2155, label %originalBB153alteredBB

originalBBpart2155:                               ; preds = %originalBB153
  br label %682, !dbg !2415

682:                                              ; preds = %originalBBpart21765, %originalBBpart2155
  %683 = load i32, i32* @x.37
  %684 = load i32, i32* @y.38
  %685 = sub i32 %683, 1
  %686 = mul i32 %683, %685
  %687 = urem i32 %686, 2
  %688 = icmp eq i32 %687, 0
  %689 = icmp slt i32 %684, 10
  %690 = or i1 %688, %689
  br i1 %690, label %originalBB157, label %originalBB157alteredBB

originalBB157:                                    ; preds = %682, %originalBB157alteredBB
  %691 = load i64, i64* %22, align 8, !dbg !2416
  %692 = icmp eq i64 %691, -1, !dbg !2418
  %693 = load i32, i32* @x.37
  %694 = load i32, i32* @y.38
  %695 = sub i32 %693, 1
  %696 = mul i32 %693, %695
  %697 = urem i32 %696, 2
  %698 = icmp eq i32 %697, 0
  %699 = icmp slt i32 %694, 10
  %700 = or i1 %698, %699
  br i1 %700, label %originalBBpart2159, label %originalBB157alteredBB

originalBBpart2159:                               ; preds = %originalBB157
  br i1 %692, label %701, label %725, !dbg !2416

701:                                              ; preds = %originalBBpart2159
  %702 = load i32, i32* @x.37
  %703 = load i32, i32* @y.38
  %704 = sub i32 %702, 1
  %705 = mul i32 %702, %704
  %706 = urem i32 %705, 2
  %707 = icmp eq i32 %706, 0
  %708 = icmp slt i32 %703, 10
  %709 = or i1 %707, %708
  br i1 %709, label %originalBB161, label %originalBB161alteredBB

originalBB161:                                    ; preds = %701, %originalBB161alteredBB
  %710 = load i8*, i8** %21, align 8, !dbg !2419
  %711 = load i64, i64* %28, align 8, !dbg !2420
  %712 = getelementptr inbounds i8, i8* %710, i64 %711, !dbg !2419
  %713 = load i8, i8* %712, align 1, !dbg !2419
  %714 = sext i8 %713 to i32, !dbg !2419
  %715 = icmp eq i32 %714, 0, !dbg !2421
  %716 = zext i1 %715 to i32, !dbg !2421
  %717 = load i32, i32* @x.37
  %718 = load i32, i32* @y.38
  %719 = sub i32 %717, 1
  %720 = mul i32 %717, %719
  %721 = urem i32 %720, 2
  %722 = icmp eq i32 %721, 0
  %723 = icmp slt i32 %718, 10
  %724 = or i1 %722, %723
  br i1 %724, label %originalBBpart2163, label %originalBB161alteredBB

originalBBpart2163:                               ; preds = %originalBB161
  br label %746, !dbg !2416

725:                                              ; preds = %originalBBpart2159
  %726 = load i32, i32* @x.37
  %727 = load i32, i32* @y.38
  %728 = sub i32 %726, 1
  %729 = mul i32 %726, %728
  %730 = urem i32 %729, 2
  %731 = icmp eq i32 %730, 0
  %732 = icmp slt i32 %727, 10
  %733 = or i1 %731, %732
  br i1 %733, label %originalBB165, label %originalBB165alteredBB

originalBB165:                                    ; preds = %725, %originalBB165alteredBB
  %734 = load i64, i64* %28, align 8, !dbg !2422
  %735 = load i64, i64* %22, align 8, !dbg !2423
  %736 = icmp eq i64 %734, %735, !dbg !2424
  %737 = zext i1 %736 to i32, !dbg !2424
  %738 = load i32, i32* @x.37
  %739 = load i32, i32* @y.38
  %740 = sub i32 %738, 1
  %741 = mul i32 %738, %740
  %742 = urem i32 %741, 2
  %743 = icmp eq i32 %742, 0
  %744 = icmp slt i32 %739, 10
  %745 = or i1 %743, %744
  br i1 %745, label %originalBBpart2167, label %originalBB165alteredBB

originalBBpart2167:                               ; preds = %originalBB165
  br label %746, !dbg !2416

746:                                              ; preds = %originalBBpart2167, %originalBBpart2163
  %747 = phi i32 [ %716, %originalBBpart2163 ], [ %737, %originalBBpart2167 ], !dbg !2416
  %748 = load i32, i32* @x.37
  %749 = load i32, i32* @y.38
  %750 = sub i32 %748, 1
  %751 = mul i32 %748, %750
  %752 = urem i32 %751, 2
  %753 = icmp eq i32 %752, 0
  %754 = icmp slt i32 %749, 10
  %755 = or i1 %753, %754
  br i1 %755, label %originalBB169, label %originalBB169alteredBB

originalBB169:                                    ; preds = %746, %originalBB169alteredBB
  %756 = icmp ne i32 %747, 0, !dbg !2425
  %757 = xor i1 %756, true, !dbg !2425
  %758 = load i32, i32* @x.37
  %759 = load i32, i32* @y.38
  %760 = sub i32 %758, 1
  %761 = mul i32 %758, %760
  %762 = urem i32 %761, 2
  %763 = icmp eq i32 %762, 0
  %764 = icmp slt i32 %759, 10
  %765 = or i1 %763, %764
  br i1 %765, label %originalBBpart2174, label %originalBB169alteredBB

originalBBpart2174:                               ; preds = %originalBB169
  br i1 %757, label %766, label %6108, !dbg !2426

766:                                              ; preds = %originalBBpart2174
  call void @llvm.dbg.declare(metadata i8* %39, metadata !2427, metadata !DIExpression()), !dbg !2429
  call void @llvm.dbg.declare(metadata i8* %40, metadata !2430, metadata !DIExpression()), !dbg !2431
  call void @llvm.dbg.declare(metadata i8* %41, metadata !2432, metadata !DIExpression()), !dbg !2433
  %767 = load i32, i32* @x.37
  %768 = load i32, i32* @y.38
  %769 = sub i32 %767, 1
  %770 = mul i32 %767, %769
  %771 = urem i32 %770, 2
  %772 = icmp eq i32 %771, 0
  %773 = icmp slt i32 %768, 10
  %774 = or i1 %772, %773
  br i1 %774, label %originalBB176, label %originalBB176alteredBB

originalBB176:                                    ; preds = %766, %originalBB176alteredBB
  store i8 0, i8* %41, align 1, !dbg !2433
  call void @llvm.dbg.declare(metadata i8* %42, metadata !2434, metadata !DIExpression()), !dbg !2435
  store i8 0, i8* %42, align 1, !dbg !2435
  call void @llvm.dbg.declare(metadata i8* %43, metadata !2436, metadata !DIExpression()), !dbg !2437
  store i8 0, i8* %43, align 1, !dbg !2437
  %775 = load i8, i8* %33, align 1, !dbg !2438
  %776 = trunc i8 %775 to i1, !dbg !2438
  %777 = load i32, i32* @x.37
  %778 = load i32, i32* @y.38
  %779 = sub i32 %777, 1
  %780 = mul i32 %777, %779
  %781 = urem i32 %780, 2
  %782 = icmp eq i32 %781, 0
  %783 = icmp slt i32 %778, 10
  %784 = or i1 %782, %783
  br i1 %784, label %originalBBpart2178, label %originalBB176alteredBB

originalBBpart2178:                               ; preds = %originalBB176
  br i1 %776, label %785, label %981, !dbg !2440

785:                                              ; preds = %originalBBpart2178
  %786 = load i32, i32* @x.37
  %787 = load i32, i32* @y.38
  %788 = sub i32 %786, 1
  %789 = mul i32 %786, %788
  %790 = urem i32 %789, 2
  %791 = icmp eq i32 %790, 0
  %792 = icmp slt i32 %787, 10
  %793 = or i1 %791, %792
  br i1 %793, label %originalBB180, label %originalBB180alteredBB

originalBB180:                                    ; preds = %785, %originalBB180alteredBB
  %794 = load i32, i32* %23, align 4, !dbg !2441
  %795 = icmp ne i32 %794, 2, !dbg !2442
  %796 = load i32, i32* @x.37
  %797 = load i32, i32* @y.38
  %798 = sub i32 %796, 1
  %799 = mul i32 %796, %798
  %800 = urem i32 %799, 2
  %801 = icmp eq i32 %800, 0
  %802 = icmp slt i32 %797, 10
  %803 = or i1 %801, %802
  br i1 %803, label %originalBBpart2182, label %originalBB180alteredBB

originalBBpart2182:                               ; preds = %originalBB180
  br i1 %795, label %804, label %981, !dbg !2443

804:                                              ; preds = %originalBBpart2182
  %805 = load i32, i32* @x.37
  %806 = load i32, i32* @y.38
  %807 = sub i32 %805, 1
  %808 = mul i32 %805, %807
  %809 = urem i32 %808, 2
  %810 = icmp eq i32 %809, 0
  %811 = icmp slt i32 %806, 10
  %812 = or i1 %810, %811
  br i1 %812, label %originalBB184, label %originalBB184alteredBB

originalBB184:                                    ; preds = %804, %originalBB184alteredBB
  %813 = load i64, i64* %32, align 8, !dbg !2444
  %814 = icmp ne i64 %813, 0, !dbg !2444
  %815 = load i32, i32* @x.37
  %816 = load i32, i32* @y.38
  %817 = sub i32 %815, 1
  %818 = mul i32 %815, %817
  %819 = urem i32 %818, 2
  %820 = icmp eq i32 %819, 0
  %821 = icmp slt i32 %816, 10
  %822 = or i1 %820, %821
  br i1 %822, label %originalBBpart2186, label %originalBB184alteredBB

originalBBpart2186:                               ; preds = %originalBB184
  br i1 %814, label %823, label %981, !dbg !2445

823:                                              ; preds = %originalBBpart2186
  %824 = load i32, i32* @x.37
  %825 = load i32, i32* @y.38
  %826 = sub i32 %824, 1
  %827 = mul i32 %824, %826
  %828 = urem i32 %827, 2
  %829 = icmp eq i32 %828, 0
  %830 = icmp slt i32 %825, 10
  %831 = or i1 %829, %830
  br i1 %831, label %originalBB188, label %originalBB188alteredBB

originalBB188:                                    ; preds = %823, %originalBB188alteredBB
  %832 = load i64, i64* %28, align 8, !dbg !2446
  %833 = load i64, i64* %32, align 8, !dbg !2447
  %834 = add i64 %832, %833, !dbg !2448
  %835 = load i64, i64* %22, align 8, !dbg !2449
  %836 = icmp eq i64 %835, -1, !dbg !2450
  %837 = load i32, i32* @x.37
  %838 = load i32, i32* @y.38
  %839 = sub i32 %837, 1
  %840 = mul i32 %837, %839
  %841 = urem i32 %840, 2
  %842 = icmp eq i32 %841, 0
  %843 = icmp slt i32 %838, 10
  %844 = or i1 %842, %843
  br i1 %844, label %originalBBpart2190, label %originalBB188alteredBB

originalBBpart2190:                               ; preds = %originalBB188
  br i1 %836, label %845, label %883, !dbg !2451

845:                                              ; preds = %originalBBpart2190
  %846 = load i32, i32* @x.37
  %847 = load i32, i32* @y.38
  %848 = sub i32 %846, 1
  %849 = mul i32 %846, %848
  %850 = urem i32 %849, 2
  %851 = icmp eq i32 %850, 0
  %852 = icmp slt i32 %847, 10
  %853 = or i1 %851, %852
  br i1 %853, label %originalBB192, label %originalBB192alteredBB

originalBB192:                                    ; preds = %845, %originalBB192alteredBB
  %854 = load i64, i64* %32, align 8, !dbg !2452
  %855 = icmp ult i64 1, %854, !dbg !2453
  %856 = load i32, i32* @x.37
  %857 = load i32, i32* @y.38
  %858 = sub i32 %856, 1
  %859 = mul i32 %856, %858
  %860 = urem i32 %859, 2
  %861 = icmp eq i32 %860, 0
  %862 = icmp slt i32 %857, 10
  %863 = or i1 %861, %862
  br i1 %863, label %originalBBpart2194, label %originalBB192alteredBB

originalBBpart2194:                               ; preds = %originalBB192
  br i1 %855, label %864, label %883, !dbg !2449

864:                                              ; preds = %originalBBpart2194
  %865 = load i32, i32* @x.37
  %866 = load i32, i32* @y.38
  %867 = sub i32 %865, 1
  %868 = mul i32 %865, %867
  %869 = urem i32 %868, 2
  %870 = icmp eq i32 %869, 0
  %871 = icmp slt i32 %866, 10
  %872 = or i1 %870, %871
  br i1 %872, label %originalBB196, label %originalBB196alteredBB

originalBB196:                                    ; preds = %864, %originalBB196alteredBB
  %873 = load i8*, i8** %21, align 8, !dbg !2454
  %874 = call i64 @strlen(i8* %873) #13, !dbg !2455
  store i64 %874, i64* %22, align 8, !dbg !2456
  %875 = load i32, i32* @x.37
  %876 = load i32, i32* @y.38
  %877 = sub i32 %875, 1
  %878 = mul i32 %875, %877
  %879 = urem i32 %878, 2
  %880 = icmp eq i32 %879, 0
  %881 = icmp slt i32 %876, 10
  %882 = or i1 %880, %881
  br i1 %882, label %originalBBpart2198, label %originalBB196alteredBB

originalBBpart2198:                               ; preds = %originalBB196
  br label %901, !dbg !2449

883:                                              ; preds = %originalBBpart2194, %originalBBpart2190
  %884 = load i32, i32* @x.37
  %885 = load i32, i32* @y.38
  %886 = sub i32 %884, 1
  %887 = mul i32 %884, %886
  %888 = urem i32 %887, 2
  %889 = icmp eq i32 %888, 0
  %890 = icmp slt i32 %885, 10
  %891 = or i1 %889, %890
  br i1 %891, label %originalBB200, label %originalBB200alteredBB

originalBB200:                                    ; preds = %883, %originalBB200alteredBB
  %892 = load i64, i64* %22, align 8, !dbg !2457
  %893 = load i32, i32* @x.37
  %894 = load i32, i32* @y.38
  %895 = sub i32 %893, 1
  %896 = mul i32 %893, %895
  %897 = urem i32 %896, 2
  %898 = icmp eq i32 %897, 0
  %899 = icmp slt i32 %894, 10
  %900 = or i1 %898, %899
  br i1 %900, label %originalBBpart2202, label %originalBB200alteredBB

originalBBpart2202:                               ; preds = %originalBB200
  br label %901, !dbg !2449

901:                                              ; preds = %originalBBpart2202, %originalBBpart2198
  %902 = phi i64 [ %874, %originalBBpart2198 ], [ %892, %originalBBpart2202 ], !dbg !2449
  %903 = load i32, i32* @x.37
  %904 = load i32, i32* @y.38
  %905 = sub i32 %903, 1
  %906 = mul i32 %903, %905
  %907 = urem i32 %906, 2
  %908 = icmp eq i32 %907, 0
  %909 = icmp slt i32 %904, 10
  %910 = or i1 %908, %909
  br i1 %910, label %originalBB204, label %originalBB204alteredBB

originalBB204:                                    ; preds = %901, %originalBB204alteredBB
  %911 = icmp ule i64 %834, %902, !dbg !2458
  %912 = load i32, i32* @x.37
  %913 = load i32, i32* @y.38
  %914 = sub i32 %912, 1
  %915 = mul i32 %912, %914
  %916 = urem i32 %915, 2
  %917 = icmp eq i32 %916, 0
  %918 = icmp slt i32 %913, 10
  %919 = or i1 %917, %918
  br i1 %919, label %originalBBpart2206, label %originalBB204alteredBB

originalBBpart2206:                               ; preds = %originalBB204
  br i1 %911, label %920, label %981, !dbg !2459

920:                                              ; preds = %originalBBpart2206
  %921 = load i8*, i8** %21, align 8, !dbg !2460
  %922 = load i64, i64* %28, align 8, !dbg !2461
  %923 = getelementptr inbounds i8, i8* %921, i64 %922, !dbg !2462
  %924 = load i8*, i8** %31, align 8, !dbg !2463
  %925 = load i64, i64* %32, align 8, !dbg !2464
  %926 = call i32 @memcmp(i8* %923, i8* %924, i64 %925) #13, !dbg !2465
  %927 = icmp eq i32 %926, 0, !dbg !2466
  br i1 %927, label %928, label %981, !dbg !2467

928:                                              ; preds = %920
  %929 = load i32, i32* @x.37
  %930 = load i32, i32* @y.38
  %931 = sub i32 %929, 1
  %932 = mul i32 %929, %931
  %933 = urem i32 %932, 2
  %934 = icmp eq i32 %933, 0
  %935 = icmp slt i32 %930, 10
  %936 = or i1 %934, %935
  br i1 %936, label %originalBB208, label %originalBB208alteredBB

originalBB208:                                    ; preds = %928, %originalBB208alteredBB
  %937 = load i8, i8* %35, align 1, !dbg !2468
  %938 = trunc i8 %937 to i1, !dbg !2468
  %939 = load i32, i32* @x.37
  %940 = load i32, i32* @y.38
  %941 = sub i32 %939, 1
  %942 = mul i32 %939, %941
  %943 = urem i32 %942, 2
  %944 = icmp eq i32 %943, 0
  %945 = icmp slt i32 %940, 10
  %946 = or i1 %944, %945
  br i1 %946, label %originalBBpart2210, label %originalBB208alteredBB

originalBBpart2210:                               ; preds = %originalBB208
  br i1 %938, label %947, label %964, !dbg !2471

947:                                              ; preds = %originalBBpart2210
  %948 = load i32, i32* @x.37
  %949 = load i32, i32* @y.38
  %950 = sub i32 %948, 1
  %951 = mul i32 %948, %950
  %952 = urem i32 %951, 2
  %953 = icmp eq i32 %952, 0
  %954 = icmp slt i32 %949, 10
  %955 = or i1 %953, %954
  br i1 %955, label %originalBB212, label %originalBB212alteredBB

originalBB212:                                    ; preds = %947, %originalBB212alteredBB
  %956 = load i32, i32* @x.37
  %957 = load i32, i32* @y.38
  %958 = sub i32 %956, 1
  %959 = mul i32 %956, %958
  %960 = urem i32 %959, 2
  %961 = icmp eq i32 %960, 0
  %962 = icmp slt i32 %957, 10
  %963 = or i1 %961, %962
  br i1 %963, label %originalBBpart2214, label %originalBB212alteredBB

originalBBpart2214:                               ; preds = %originalBB212
  br label %6606, !dbg !2472

964:                                              ; preds = %originalBBpart2210
  %965 = load i32, i32* @x.37
  %966 = load i32, i32* @y.38
  %967 = sub i32 %965, 1
  %968 = mul i32 %965, %967
  %969 = urem i32 %968, 2
  %970 = icmp eq i32 %969, 0
  %971 = icmp slt i32 %966, 10
  %972 = or i1 %970, %971
  br i1 %972, label %originalBB216, label %originalBB216alteredBB

originalBB216:                                    ; preds = %964, %originalBB216alteredBB
  store i8 1, i8* %41, align 1, !dbg !2473
  %973 = load i32, i32* @x.37
  %974 = load i32, i32* @y.38
  %975 = sub i32 %973, 1
  %976 = mul i32 %973, %975
  %977 = urem i32 %976, 2
  %978 = icmp eq i32 %977, 0
  %979 = icmp slt i32 %974, 10
  %980 = or i1 %978, %979
  br i1 %980, label %originalBBpart2218, label %originalBB216alteredBB

originalBBpart2218:                               ; preds = %originalBB216
  br label %981, !dbg !2474

981:                                              ; preds = %originalBBpart2218, %920, %originalBBpart2206, %originalBBpart2186, %originalBBpart2182, %originalBBpart2178
  %982 = load i32, i32* @x.37
  %983 = load i32, i32* @y.38
  %984 = sub i32 %982, 1
  %985 = mul i32 %982, %984
  %986 = urem i32 %985, 2
  %987 = icmp eq i32 %986, 0
  %988 = icmp slt i32 %983, 10
  %989 = or i1 %987, %988
  br i1 %989, label %originalBB220, label %originalBB220alteredBB

originalBB220:                                    ; preds = %981, %originalBB220alteredBB
  %990 = load i8*, i8** %21, align 8, !dbg !2475
  %991 = load i64, i64* %28, align 8, !dbg !2476
  %992 = getelementptr inbounds i8, i8* %990, i64 %991, !dbg !2475
  %993 = load i8, i8* %992, align 1, !dbg !2475
  store i8 %993, i8* %39, align 1, !dbg !2477
  %994 = load i8, i8* %39, align 1, !dbg !2478
  %995 = zext i8 %994 to i32, !dbg !2478
  %996 = load i32, i32* @x.37
  %997 = load i32, i32* @y.38
  %998 = sub i32 %996, 1
  %999 = mul i32 %996, %998
  %1000 = urem i32 %999, 2
  %1001 = icmp eq i32 %1000, 0
  %1002 = icmp slt i32 %997, 10
  %1003 = or i1 %1001, %1002
  br i1 %1003, label %originalBBpart2222, label %originalBB220alteredBB

originalBBpart2222:                               ; preds = %originalBB220
  switch i32 %995, label %3344 [
    i32 0, label %1004
    i32 63, label %1749
    i32 7, label %2341
    i32 8, label %2358
    i32 12, label %2375
    i32 10, label %2392
    i32 13, label %2409
    i32 9, label %2426
    i32 11, label %2443
    i32 92, label %2460
    i32 123, label %2750
    i32 125, label %2750
    i32 35, label %2844
    i32 126, label %2844
    i32 32, label %2881
    i32 33, label %2898
    i32 34, label %2898
    i32 36, label %2898
    i32 38, label %2898
    i32 40, label %2898
    i32 41, label %2898
    i32 42, label %2898
    i32 59, label %2898
    i32 60, label %2898
    i32 61, label %2898
    i32 62, label %2898
    i32 91, label %2898
    i32 94, label %2898
    i32 96, label %2898
    i32 124, label %2898
    i32 39, label %2970
    i32 37, label %3327
    i32 43, label %3327
    i32 44, label %3327
    i32 45, label %3327
    i32 46, label %3327
    i32 47, label %3327
    i32 48, label %3327
    i32 49, label %3327
    i32 50, label %3327
    i32 51, label %3327
    i32 52, label %3327
    i32 53, label %3327
    i32 54, label %3327
    i32 55, label %3327
    i32 56, label %3327
    i32 57, label %3327
    i32 58, label %3327
    i32 65, label %3327
    i32 66, label %3327
    i32 67, label %3327
    i32 68, label %3327
    i32 69, label %3327
    i32 70, label %3327
    i32 71, label %3327
    i32 72, label %3327
    i32 73, label %3327
    i32 74, label %3327
    i32 75, label %3327
    i32 76, label %3327
    i32 77, label %3327
    i32 78, label %3327
    i32 79, label %3327
    i32 80, label %3327
    i32 81, label %3327
    i32 82, label %3327
    i32 83, label %3327
    i32 84, label %3327
    i32 85, label %3327
    i32 86, label %3327
    i32 87, label %3327
    i32 88, label %3327
    i32 89, label %3327
    i32 90, label %3327
    i32 93, label %3327
    i32 95, label %3327
    i32 97, label %3327
    i32 98, label %3327
    i32 99, label %3327
    i32 100, label %3327
    i32 101, label %3327
    i32 102, label %3327
    i32 103, label %3327
    i32 104, label %3327
    i32 105, label %3327
    i32 106, label %3327
    i32 107, label %3327
    i32 108, label %3327
    i32 109, label %3327
    i32 110, label %3327
    i32 111, label %3327
    i32 112, label %3327
    i32 113, label %3327
    i32 114, label %3327
    i32 115, label %3327
    i32 116, label %3327
    i32 117, label %3327
    i32 118, label %3327
    i32 119, label %3327
    i32 120, label %3327
    i32 121, label %3327
    i32 122, label %3327
  ], !dbg !2479

1004:                                             ; preds = %originalBBpart2222
  %1005 = load i32, i32* @x.37
  %1006 = load i32, i32* @y.38
  %1007 = sub i32 %1005, 1
  %1008 = mul i32 %1005, %1007
  %1009 = urem i32 %1008, 2
  %1010 = icmp eq i32 %1009, 0
  %1011 = icmp slt i32 %1006, 10
  %1012 = or i1 %1010, %1011
  br i1 %1012, label %originalBB224, label %originalBB224alteredBB

originalBB224:                                    ; preds = %1004, %originalBB224alteredBB
  %1013 = load i8, i8* %33, align 1, !dbg !2480
  %1014 = trunc i8 %1013 to i1, !dbg !2480
  %1015 = load i32, i32* @x.37
  %1016 = load i32, i32* @y.38
  %1017 = sub i32 %1015, 1
  %1018 = mul i32 %1015, %1017
  %1019 = urem i32 %1018, 2
  %1020 = icmp eq i32 %1019, 0
  %1021 = icmp slt i32 %1016, 10
  %1022 = or i1 %1020, %1021
  br i1 %1022, label %originalBBpart2226, label %originalBB224alteredBB

originalBBpart2226:                               ; preds = %originalBB224
  br i1 %1014, label %1023, label %1678, !dbg !2483

1023:                                             ; preds = %originalBBpart2226
  %1024 = load i32, i32* @x.37
  %1025 = load i32, i32* @y.38
  %1026 = sub i32 %1024, 1
  %1027 = mul i32 %1024, %1026
  %1028 = urem i32 %1027, 2
  %1029 = icmp eq i32 %1028, 0
  %1030 = icmp slt i32 %1025, 10
  %1031 = or i1 %1029, %1030
  br i1 %1031, label %originalBB228, label %originalBB228alteredBB

originalBB228:                                    ; preds = %1023, %originalBB228alteredBB
  %1032 = load i32, i32* @x.37
  %1033 = load i32, i32* @y.38
  %1034 = sub i32 %1032, 1
  %1035 = mul i32 %1032, %1034
  %1036 = urem i32 %1035, 2
  %1037 = icmp eq i32 %1036, 0
  %1038 = icmp slt i32 %1033, 10
  %1039 = or i1 %1037, %1038
  br i1 %1039, label %originalBBpart2230, label %originalBB228alteredBB

originalBBpart2230:                               ; preds = %originalBB228
  br label %1040, !dbg !2484

1040:                                             ; preds = %originalBBpart2230
  %1041 = load i32, i32* @x.37
  %1042 = load i32, i32* @y.38
  %1043 = sub i32 %1041, 1
  %1044 = mul i32 %1041, %1043
  %1045 = urem i32 %1044, 2
  %1046 = icmp eq i32 %1045, 0
  %1047 = icmp slt i32 %1042, 10
  %1048 = or i1 %1046, %1047
  br i1 %1048, label %originalBB232, label %originalBB232alteredBB

originalBB232:                                    ; preds = %1040, %originalBB232alteredBB
  %1049 = load i8, i8* %35, align 1, !dbg !2486
  %1050 = trunc i8 %1049 to i1, !dbg !2486
  %1051 = load i32, i32* @x.37
  %1052 = load i32, i32* @y.38
  %1053 = sub i32 %1051, 1
  %1054 = mul i32 %1051, %1053
  %1055 = urem i32 %1054, 2
  %1056 = icmp eq i32 %1055, 0
  %1057 = icmp slt i32 %1052, 10
  %1058 = or i1 %1056, %1057
  br i1 %1058, label %originalBBpart2234, label %originalBB232alteredBB

originalBBpart2234:                               ; preds = %originalBB232
  br i1 %1050, label %1059, label %1076, !dbg !2489

1059:                                             ; preds = %originalBBpart2234
  %1060 = load i32, i32* @x.37
  %1061 = load i32, i32* @y.38
  %1062 = sub i32 %1060, 1
  %1063 = mul i32 %1060, %1062
  %1064 = urem i32 %1063, 2
  %1065 = icmp eq i32 %1064, 0
  %1066 = icmp slt i32 %1061, 10
  %1067 = or i1 %1065, %1066
  br i1 %1067, label %originalBB236, label %originalBB236alteredBB

originalBB236:                                    ; preds = %1059, %originalBB236alteredBB
  %1068 = load i32, i32* @x.37
  %1069 = load i32, i32* @y.38
  %1070 = sub i32 %1068, 1
  %1071 = mul i32 %1068, %1070
  %1072 = urem i32 %1071, 2
  %1073 = icmp eq i32 %1072, 0
  %1074 = icmp slt i32 %1069, 10
  %1075 = or i1 %1073, %1074
  br i1 %1075, label %originalBBpart2238, label %originalBB236alteredBB

originalBBpart2238:                               ; preds = %originalBB236
  br label %6606, !dbg !2486

1076:                                             ; preds = %originalBBpart2234
  %1077 = load i32, i32* @x.37
  %1078 = load i32, i32* @y.38
  %1079 = sub i32 %1077, 1
  %1080 = mul i32 %1077, %1079
  %1081 = urem i32 %1080, 2
  %1082 = icmp eq i32 %1081, 0
  %1083 = icmp slt i32 %1078, 10
  %1084 = or i1 %1082, %1083
  br i1 %1084, label %originalBB240, label %originalBB240alteredBB

originalBB240:                                    ; preds = %1076, %originalBB240alteredBB
  store i8 1, i8* %42, align 1, !dbg !2489
  %1085 = load i32, i32* %23, align 4, !dbg !2490
  %1086 = icmp eq i32 %1085, 2, !dbg !2490
  %1087 = load i32, i32* @x.37
  %1088 = load i32, i32* @y.38
  %1089 = sub i32 %1087, 1
  %1090 = mul i32 %1087, %1089
  %1091 = urem i32 %1090, 2
  %1092 = icmp eq i32 %1091, 0
  %1093 = icmp slt i32 %1088, 10
  %1094 = or i1 %1092, %1093
  br i1 %1094, label %originalBBpart2242, label %originalBB240alteredBB

originalBBpart2242:                               ; preds = %originalBB240
  br i1 %1086, label %1095, label %1343, !dbg !2490

1095:                                             ; preds = %originalBBpart2242
  %1096 = load i8, i8* %36, align 1, !dbg !2490
  %1097 = trunc i8 %1096 to i1, !dbg !2490
  br i1 %1097, label %1343, label %1098, !dbg !2489

1098:                                             ; preds = %1095
  %1099 = load i32, i32* @x.37
  %1100 = load i32, i32* @y.38
  %1101 = sub i32 %1099, 1
  %1102 = mul i32 %1099, %1101
  %1103 = urem i32 %1102, 2
  %1104 = icmp eq i32 %1103, 0
  %1105 = icmp slt i32 %1100, 10
  %1106 = or i1 %1104, %1105
  br i1 %1106, label %originalBB244, label %originalBB244alteredBB

originalBB244:                                    ; preds = %1098, %originalBB244alteredBB
  %1107 = load i32, i32* @x.37
  %1108 = load i32, i32* @y.38
  %1109 = sub i32 %1107, 1
  %1110 = mul i32 %1107, %1109
  %1111 = urem i32 %1110, 2
  %1112 = icmp eq i32 %1111, 0
  %1113 = icmp slt i32 %1108, 10
  %1114 = or i1 %1112, %1113
  br i1 %1114, label %originalBBpart2246, label %originalBB244alteredBB

originalBBpart2246:                               ; preds = %originalBB244
  br label %1115, !dbg !2492

1115:                                             ; preds = %originalBBpart2246
  %1116 = load i32, i32* @x.37
  %1117 = load i32, i32* @y.38
  %1118 = sub i32 %1116, 1
  %1119 = mul i32 %1116, %1118
  %1120 = urem i32 %1119, 2
  %1121 = icmp eq i32 %1120, 0
  %1122 = icmp slt i32 %1117, 10
  %1123 = or i1 %1121, %1122
  br i1 %1123, label %originalBB248, label %originalBB248alteredBB

originalBB248:                                    ; preds = %1115, %originalBB248alteredBB
  %1124 = load i64, i64* %29, align 8, !dbg !2494
  %1125 = load i64, i64* %20, align 8, !dbg !2494
  %1126 = icmp ult i64 %1124, %1125, !dbg !2494
  %1127 = load i32, i32* @x.37
  %1128 = load i32, i32* @y.38
  %1129 = sub i32 %1127, 1
  %1130 = mul i32 %1127, %1129
  %1131 = urem i32 %1130, 2
  %1132 = icmp eq i32 %1131, 0
  %1133 = icmp slt i32 %1128, 10
  %1134 = or i1 %1132, %1133
  br i1 %1134, label %originalBBpart2250, label %originalBB248alteredBB

originalBBpart2250:                               ; preds = %originalBB248
  br i1 %1126, label %1135, label %1155, !dbg !2497

1135:                                             ; preds = %originalBBpart2250
  %1136 = load i32, i32* @x.37
  %1137 = load i32, i32* @y.38
  %1138 = sub i32 %1136, 1
  %1139 = mul i32 %1136, %1138
  %1140 = urem i32 %1139, 2
  %1141 = icmp eq i32 %1140, 0
  %1142 = icmp slt i32 %1137, 10
  %1143 = or i1 %1141, %1142
  br i1 %1143, label %originalBB252, label %originalBB252alteredBB

originalBB252:                                    ; preds = %1135, %originalBB252alteredBB
  %1144 = load i8*, i8** %19, align 8, !dbg !2494
  %1145 = load i64, i64* %29, align 8, !dbg !2494
  %1146 = getelementptr inbounds i8, i8* %1144, i64 %1145, !dbg !2494
  store i8 39, i8* %1146, align 1, !dbg !2494
  %1147 = load i32, i32* @x.37
  %1148 = load i32, i32* @y.38
  %1149 = sub i32 %1147, 1
  %1150 = mul i32 %1147, %1149
  %1151 = urem i32 %1150, 2
  %1152 = icmp eq i32 %1151, 0
  %1153 = icmp slt i32 %1148, 10
  %1154 = or i1 %1152, %1153
  br i1 %1154, label %originalBBpart2254, label %originalBB252alteredBB

originalBBpart2254:                               ; preds = %originalBB252
  br label %1155, !dbg !2494

1155:                                             ; preds = %originalBBpart2254, %originalBBpart2250
  %1156 = load i32, i32* @x.37
  %1157 = load i32, i32* @y.38
  %1158 = sub i32 %1156, 1
  %1159 = mul i32 %1156, %1158
  %1160 = urem i32 %1159, 2
  %1161 = icmp eq i32 %1160, 0
  %1162 = icmp slt i32 %1157, 10
  %1163 = or i1 %1161, %1162
  br i1 %1163, label %originalBB256, label %originalBB256alteredBB

originalBB256:                                    ; preds = %1155, %originalBB256alteredBB
  %1164 = load i64, i64* %29, align 8, !dbg !2497
  %1165 = add i64 %1164, 1, !dbg !2497
  store i64 %1165, i64* %29, align 8, !dbg !2497
  %1166 = load i32, i32* @x.37
  %1167 = load i32, i32* @y.38
  %1168 = sub i32 %1166, 1
  %1169 = mul i32 %1166, %1168
  %1170 = urem i32 %1169, 2
  %1171 = icmp eq i32 %1170, 0
  %1172 = icmp slt i32 %1167, 10
  %1173 = or i1 %1171, %1172
  br i1 %1173, label %originalBBpart2270, label %originalBB256alteredBB

originalBBpart2270:                               ; preds = %originalBB256
  br label %1174, !dbg !2497

1174:                                             ; preds = %originalBBpart2270
  %1175 = load i32, i32* @x.37
  %1176 = load i32, i32* @y.38
  %1177 = sub i32 %1175, 1
  %1178 = mul i32 %1175, %1177
  %1179 = urem i32 %1178, 2
  %1180 = icmp eq i32 %1179, 0
  %1181 = icmp slt i32 %1176, 10
  %1182 = or i1 %1180, %1181
  br i1 %1182, label %originalBB272, label %originalBB272alteredBB

originalBB272:                                    ; preds = %1174, %originalBB272alteredBB
  %1183 = load i32, i32* @x.37
  %1184 = load i32, i32* @y.38
  %1185 = sub i32 %1183, 1
  %1186 = mul i32 %1183, %1185
  %1187 = urem i32 %1186, 2
  %1188 = icmp eq i32 %1187, 0
  %1189 = icmp slt i32 %1184, 10
  %1190 = or i1 %1188, %1189
  br i1 %1190, label %originalBBpart2274, label %originalBB272alteredBB

originalBBpart2274:                               ; preds = %originalBB272
  br label %1191, !dbg !2492

1191:                                             ; preds = %originalBBpart2274
  %1192 = load i32, i32* @x.37
  %1193 = load i32, i32* @y.38
  %1194 = sub i32 %1192, 1
  %1195 = mul i32 %1192, %1194
  %1196 = urem i32 %1195, 2
  %1197 = icmp eq i32 %1196, 0
  %1198 = icmp slt i32 %1193, 10
  %1199 = or i1 %1197, %1198
  br i1 %1199, label %originalBB276, label %originalBB276alteredBB

originalBB276:                                    ; preds = %1191, %originalBB276alteredBB
  %1200 = load i64, i64* %29, align 8, !dbg !2498
  %1201 = load i64, i64* %20, align 8, !dbg !2498
  %1202 = icmp ult i64 %1200, %1201, !dbg !2498
  %1203 = load i32, i32* @x.37
  %1204 = load i32, i32* @y.38
  %1205 = sub i32 %1203, 1
  %1206 = mul i32 %1203, %1205
  %1207 = urem i32 %1206, 2
  %1208 = icmp eq i32 %1207, 0
  %1209 = icmp slt i32 %1204, 10
  %1210 = or i1 %1208, %1209
  br i1 %1210, label %originalBBpart2278, label %originalBB276alteredBB

originalBBpart2278:                               ; preds = %originalBB276
  br i1 %1202, label %1211, label %1231, !dbg !2501

1211:                                             ; preds = %originalBBpart2278
  %1212 = load i32, i32* @x.37
  %1213 = load i32, i32* @y.38
  %1214 = sub i32 %1212, 1
  %1215 = mul i32 %1212, %1214
  %1216 = urem i32 %1215, 2
  %1217 = icmp eq i32 %1216, 0
  %1218 = icmp slt i32 %1213, 10
  %1219 = or i1 %1217, %1218
  br i1 %1219, label %originalBB280, label %originalBB280alteredBB

originalBB280:                                    ; preds = %1211, %originalBB280alteredBB
  %1220 = load i8*, i8** %19, align 8, !dbg !2498
  %1221 = load i64, i64* %29, align 8, !dbg !2498
  %1222 = getelementptr inbounds i8, i8* %1220, i64 %1221, !dbg !2498
  store i8 36, i8* %1222, align 1, !dbg !2498
  %1223 = load i32, i32* @x.37
  %1224 = load i32, i32* @y.38
  %1225 = sub i32 %1223, 1
  %1226 = mul i32 %1223, %1225
  %1227 = urem i32 %1226, 2
  %1228 = icmp eq i32 %1227, 0
  %1229 = icmp slt i32 %1224, 10
  %1230 = or i1 %1228, %1229
  br i1 %1230, label %originalBBpart2282, label %originalBB280alteredBB

originalBBpart2282:                               ; preds = %originalBB280
  br label %1231, !dbg !2498

1231:                                             ; preds = %originalBBpart2282, %originalBBpart2278
  %1232 = load i32, i32* @x.37
  %1233 = load i32, i32* @y.38
  %1234 = sub i32 %1232, 1
  %1235 = mul i32 %1232, %1234
  %1236 = urem i32 %1235, 2
  %1237 = icmp eq i32 %1236, 0
  %1238 = icmp slt i32 %1233, 10
  %1239 = or i1 %1237, %1238
  br i1 %1239, label %originalBB284, label %originalBB284alteredBB

originalBB284:                                    ; preds = %1231, %originalBB284alteredBB
  %1240 = load i64, i64* %29, align 8, !dbg !2501
  %1241 = add i64 %1240, 1, !dbg !2501
  store i64 %1241, i64* %29, align 8, !dbg !2501
  %1242 = load i32, i32* @x.37
  %1243 = load i32, i32* @y.38
  %1244 = sub i32 %1242, 1
  %1245 = mul i32 %1242, %1244
  %1246 = urem i32 %1245, 2
  %1247 = icmp eq i32 %1246, 0
  %1248 = icmp slt i32 %1243, 10
  %1249 = or i1 %1247, %1248
  br i1 %1249, label %originalBBpart2290, label %originalBB284alteredBB

originalBBpart2290:                               ; preds = %originalBB284
  br label %1250, !dbg !2501

1250:                                             ; preds = %originalBBpart2290
  %1251 = load i32, i32* @x.37
  %1252 = load i32, i32* @y.38
  %1253 = sub i32 %1251, 1
  %1254 = mul i32 %1251, %1253
  %1255 = urem i32 %1254, 2
  %1256 = icmp eq i32 %1255, 0
  %1257 = icmp slt i32 %1252, 10
  %1258 = or i1 %1256, %1257
  br i1 %1258, label %originalBB292, label %originalBB292alteredBB

originalBB292:                                    ; preds = %1250, %originalBB292alteredBB
  %1259 = load i32, i32* @x.37
  %1260 = load i32, i32* @y.38
  %1261 = sub i32 %1259, 1
  %1262 = mul i32 %1259, %1261
  %1263 = urem i32 %1262, 2
  %1264 = icmp eq i32 %1263, 0
  %1265 = icmp slt i32 %1260, 10
  %1266 = or i1 %1264, %1265
  br i1 %1266, label %originalBBpart2294, label %originalBB292alteredBB

originalBBpart2294:                               ; preds = %originalBB292
  br label %1267, !dbg !2492

1267:                                             ; preds = %originalBBpart2294
  %1268 = load i32, i32* @x.37
  %1269 = load i32, i32* @y.38
  %1270 = sub i32 %1268, 1
  %1271 = mul i32 %1268, %1270
  %1272 = urem i32 %1271, 2
  %1273 = icmp eq i32 %1272, 0
  %1274 = icmp slt i32 %1269, 10
  %1275 = or i1 %1273, %1274
  br i1 %1275, label %originalBB296, label %originalBB296alteredBB

originalBB296:                                    ; preds = %1267, %originalBB296alteredBB
  %1276 = load i64, i64* %29, align 8, !dbg !2502
  %1277 = load i64, i64* %20, align 8, !dbg !2502
  %1278 = icmp ult i64 %1276, %1277, !dbg !2502
  %1279 = load i32, i32* @x.37
  %1280 = load i32, i32* @y.38
  %1281 = sub i32 %1279, 1
  %1282 = mul i32 %1279, %1281
  %1283 = urem i32 %1282, 2
  %1284 = icmp eq i32 %1283, 0
  %1285 = icmp slt i32 %1280, 10
  %1286 = or i1 %1284, %1285
  br i1 %1286, label %originalBBpart2298, label %originalBB296alteredBB

originalBBpart2298:                               ; preds = %originalBB296
  br i1 %1278, label %1287, label %1307, !dbg !2505

1287:                                             ; preds = %originalBBpart2298
  %1288 = load i32, i32* @x.37
  %1289 = load i32, i32* @y.38
  %1290 = sub i32 %1288, 1
  %1291 = mul i32 %1288, %1290
  %1292 = urem i32 %1291, 2
  %1293 = icmp eq i32 %1292, 0
  %1294 = icmp slt i32 %1289, 10
  %1295 = or i1 %1293, %1294
  br i1 %1295, label %originalBB300, label %originalBB300alteredBB

originalBB300:                                    ; preds = %1287, %originalBB300alteredBB
  %1296 = load i8*, i8** %19, align 8, !dbg !2502
  %1297 = load i64, i64* %29, align 8, !dbg !2502
  %1298 = getelementptr inbounds i8, i8* %1296, i64 %1297, !dbg !2502
  store i8 39, i8* %1298, align 1, !dbg !2502
  %1299 = load i32, i32* @x.37
  %1300 = load i32, i32* @y.38
  %1301 = sub i32 %1299, 1
  %1302 = mul i32 %1299, %1301
  %1303 = urem i32 %1302, 2
  %1304 = icmp eq i32 %1303, 0
  %1305 = icmp slt i32 %1300, 10
  %1306 = or i1 %1304, %1305
  br i1 %1306, label %originalBBpart2302, label %originalBB300alteredBB

originalBBpart2302:                               ; preds = %originalBB300
  br label %1307, !dbg !2502

1307:                                             ; preds = %originalBBpart2302, %originalBBpart2298
  %1308 = load i32, i32* @x.37
  %1309 = load i32, i32* @y.38
  %1310 = sub i32 %1308, 1
  %1311 = mul i32 %1308, %1310
  %1312 = urem i32 %1311, 2
  %1313 = icmp eq i32 %1312, 0
  %1314 = icmp slt i32 %1309, 10
  %1315 = or i1 %1313, %1314
  br i1 %1315, label %originalBB304, label %originalBB304alteredBB

originalBB304:                                    ; preds = %1307, %originalBB304alteredBB
  %1316 = load i64, i64* %29, align 8, !dbg !2505
  %1317 = add i64 %1316, 1, !dbg !2505
  store i64 %1317, i64* %29, align 8, !dbg !2505
  %1318 = load i32, i32* @x.37
  %1319 = load i32, i32* @y.38
  %1320 = sub i32 %1318, 1
  %1321 = mul i32 %1318, %1320
  %1322 = urem i32 %1321, 2
  %1323 = icmp eq i32 %1322, 0
  %1324 = icmp slt i32 %1319, 10
  %1325 = or i1 %1323, %1324
  br i1 %1325, label %originalBBpart2311, label %originalBB304alteredBB

originalBBpart2311:                               ; preds = %originalBB304
  br label %1326, !dbg !2505

1326:                                             ; preds = %originalBBpart2311
  %1327 = load i32, i32* @x.37
  %1328 = load i32, i32* @y.38
  %1329 = sub i32 %1327, 1
  %1330 = mul i32 %1327, %1329
  %1331 = urem i32 %1330, 2
  %1332 = icmp eq i32 %1331, 0
  %1333 = icmp slt i32 %1328, 10
  %1334 = or i1 %1332, %1333
  br i1 %1334, label %originalBB313, label %originalBB313alteredBB

originalBB313:                                    ; preds = %1326, %originalBB313alteredBB
  store i8 1, i8* %36, align 1, !dbg !2492
  %1335 = load i32, i32* @x.37
  %1336 = load i32, i32* @y.38
  %1337 = sub i32 %1335, 1
  %1338 = mul i32 %1335, %1337
  %1339 = urem i32 %1338, 2
  %1340 = icmp eq i32 %1339, 0
  %1341 = icmp slt i32 %1336, 10
  %1342 = or i1 %1340, %1341
  br i1 %1342, label %originalBBpart2315, label %originalBB313alteredBB

originalBBpart2315:                               ; preds = %originalBB313
  br label %1343, !dbg !2492

1343:                                             ; preds = %originalBBpart2315, %1095, %originalBBpart2242
  %1344 = load i32, i32* @x.37
  %1345 = load i32, i32* @y.38
  %1346 = sub i32 %1344, 1
  %1347 = mul i32 %1344, %1346
  %1348 = urem i32 %1347, 2
  %1349 = icmp eq i32 %1348, 0
  %1350 = icmp slt i32 %1345, 10
  %1351 = or i1 %1349, %1350
  br i1 %1351, label %originalBB317, label %originalBB317alteredBB

originalBB317:                                    ; preds = %1343, %originalBB317alteredBB
  %1352 = load i32, i32* @x.37
  %1353 = load i32, i32* @y.38
  %1354 = sub i32 %1352, 1
  %1355 = mul i32 %1352, %1354
  %1356 = urem i32 %1355, 2
  %1357 = icmp eq i32 %1356, 0
  %1358 = icmp slt i32 %1353, 10
  %1359 = or i1 %1357, %1358
  br i1 %1359, label %originalBBpart2319, label %originalBB317alteredBB

originalBBpart2319:                               ; preds = %originalBB317
  br label %1360, !dbg !2489

1360:                                             ; preds = %originalBBpart2319
  %1361 = load i32, i32* @x.37
  %1362 = load i32, i32* @y.38
  %1363 = sub i32 %1361, 1
  %1364 = mul i32 %1361, %1363
  %1365 = urem i32 %1364, 2
  %1366 = icmp eq i32 %1365, 0
  %1367 = icmp slt i32 %1362, 10
  %1368 = or i1 %1366, %1367
  br i1 %1368, label %originalBB321, label %originalBB321alteredBB

originalBB321:                                    ; preds = %1360, %originalBB321alteredBB
  %1369 = load i64, i64* %29, align 8, !dbg !2506
  %1370 = load i64, i64* %20, align 8, !dbg !2506
  %1371 = icmp ult i64 %1369, %1370, !dbg !2506
  %1372 = load i32, i32* @x.37
  %1373 = load i32, i32* @y.38
  %1374 = sub i32 %1372, 1
  %1375 = mul i32 %1372, %1374
  %1376 = urem i32 %1375, 2
  %1377 = icmp eq i32 %1376, 0
  %1378 = icmp slt i32 %1373, 10
  %1379 = or i1 %1377, %1378
  br i1 %1379, label %originalBBpart2323, label %originalBB321alteredBB

originalBBpart2323:                               ; preds = %originalBB321
  br i1 %1371, label %1380, label %1400, !dbg !2509

1380:                                             ; preds = %originalBBpart2323
  %1381 = load i32, i32* @x.37
  %1382 = load i32, i32* @y.38
  %1383 = sub i32 %1381, 1
  %1384 = mul i32 %1381, %1383
  %1385 = urem i32 %1384, 2
  %1386 = icmp eq i32 %1385, 0
  %1387 = icmp slt i32 %1382, 10
  %1388 = or i1 %1386, %1387
  br i1 %1388, label %originalBB325, label %originalBB325alteredBB

originalBB325:                                    ; preds = %1380, %originalBB325alteredBB
  %1389 = load i8*, i8** %19, align 8, !dbg !2506
  %1390 = load i64, i64* %29, align 8, !dbg !2506
  %1391 = getelementptr inbounds i8, i8* %1389, i64 %1390, !dbg !2506
  store i8 92, i8* %1391, align 1, !dbg !2506
  %1392 = load i32, i32* @x.37
  %1393 = load i32, i32* @y.38
  %1394 = sub i32 %1392, 1
  %1395 = mul i32 %1392, %1394
  %1396 = urem i32 %1395, 2
  %1397 = icmp eq i32 %1396, 0
  %1398 = icmp slt i32 %1393, 10
  %1399 = or i1 %1397, %1398
  br i1 %1399, label %originalBBpart2327, label %originalBB325alteredBB

originalBBpart2327:                               ; preds = %originalBB325
  br label %1400, !dbg !2506

1400:                                             ; preds = %originalBBpart2327, %originalBBpart2323
  %1401 = load i32, i32* @x.37
  %1402 = load i32, i32* @y.38
  %1403 = sub i32 %1401, 1
  %1404 = mul i32 %1401, %1403
  %1405 = urem i32 %1404, 2
  %1406 = icmp eq i32 %1405, 0
  %1407 = icmp slt i32 %1402, 10
  %1408 = or i1 %1406, %1407
  br i1 %1408, label %originalBB329, label %originalBB329alteredBB

originalBB329:                                    ; preds = %1400, %originalBB329alteredBB
  %1409 = load i64, i64* %29, align 8, !dbg !2509
  %1410 = add i64 %1409, 1, !dbg !2509
  store i64 %1410, i64* %29, align 8, !dbg !2509
  %1411 = load i32, i32* @x.37
  %1412 = load i32, i32* @y.38
  %1413 = sub i32 %1411, 1
  %1414 = mul i32 %1411, %1413
  %1415 = urem i32 %1414, 2
  %1416 = icmp eq i32 %1415, 0
  %1417 = icmp slt i32 %1412, 10
  %1418 = or i1 %1416, %1417
  br i1 %1418, label %originalBBpart2337, label %originalBB329alteredBB

originalBBpart2337:                               ; preds = %originalBB329
  br label %1419, !dbg !2509

1419:                                             ; preds = %originalBBpart2337
  %1420 = load i32, i32* @x.37
  %1421 = load i32, i32* @y.38
  %1422 = sub i32 %1420, 1
  %1423 = mul i32 %1420, %1422
  %1424 = urem i32 %1423, 2
  %1425 = icmp eq i32 %1424, 0
  %1426 = icmp slt i32 %1421, 10
  %1427 = or i1 %1425, %1426
  br i1 %1427, label %originalBB339, label %originalBB339alteredBB

originalBB339:                                    ; preds = %1419, %originalBB339alteredBB
  %1428 = load i32, i32* @x.37
  %1429 = load i32, i32* @y.38
  %1430 = sub i32 %1428, 1
  %1431 = mul i32 %1428, %1430
  %1432 = urem i32 %1431, 2
  %1433 = icmp eq i32 %1432, 0
  %1434 = icmp slt i32 %1429, 10
  %1435 = or i1 %1433, %1434
  br i1 %1435, label %originalBBpart2341, label %originalBB339alteredBB

originalBBpart2341:                               ; preds = %originalBB339
  br label %1436, !dbg !2489

1436:                                             ; preds = %originalBBpart2341
  %1437 = load i32, i32* %23, align 4, !dbg !2510
  %1438 = icmp ne i32 %1437, 2, !dbg !2512
  br i1 %1438, label %1439, label %1661, !dbg !2513

1439:                                             ; preds = %1436
  %1440 = load i32, i32* @x.37
  %1441 = load i32, i32* @y.38
  %1442 = sub i32 %1440, 1
  %1443 = mul i32 %1440, %1442
  %1444 = urem i32 %1443, 2
  %1445 = icmp eq i32 %1444, 0
  %1446 = icmp slt i32 %1441, 10
  %1447 = or i1 %1445, %1446
  br i1 %1447, label %originalBB343, label %originalBB343alteredBB

originalBB343:                                    ; preds = %1439, %originalBB343alteredBB
  %1448 = load i64, i64* %28, align 8, !dbg !2514
  %1449 = add i64 %1448, 1, !dbg !2515
  %1450 = load i64, i64* %22, align 8, !dbg !2516
  %1451 = icmp ult i64 %1449, %1450, !dbg !2517
  %1452 = load i32, i32* @x.37
  %1453 = load i32, i32* @y.38
  %1454 = sub i32 %1452, 1
  %1455 = mul i32 %1452, %1454
  %1456 = urem i32 %1455, 2
  %1457 = icmp eq i32 %1456, 0
  %1458 = icmp slt i32 %1453, 10
  %1459 = or i1 %1457, %1458
  br i1 %1459, label %originalBBpart2356, label %originalBB343alteredBB

originalBBpart2356:                               ; preds = %originalBB343
  br i1 %1451, label %1460, label %1661, !dbg !2518

1460:                                             ; preds = %originalBBpart2356
  %1461 = load i32, i32* @x.37
  %1462 = load i32, i32* @y.38
  %1463 = sub i32 %1461, 1
  %1464 = mul i32 %1461, %1463
  %1465 = urem i32 %1464, 2
  %1466 = icmp eq i32 %1465, 0
  %1467 = icmp slt i32 %1462, 10
  %1468 = or i1 %1466, %1467
  br i1 %1468, label %originalBB358, label %originalBB358alteredBB

originalBB358:                                    ; preds = %1460, %originalBB358alteredBB
  %1469 = load i8*, i8** %21, align 8, !dbg !2519
  %1470 = load i64, i64* %28, align 8, !dbg !2520
  %1471 = add i64 %1470, 1, !dbg !2521
  %1472 = getelementptr inbounds i8, i8* %1469, i64 %1471, !dbg !2519
  %1473 = load i8, i8* %1472, align 1, !dbg !2519
  %1474 = sext i8 %1473 to i32, !dbg !2519
  %1475 = icmp sle i32 48, %1474, !dbg !2522
  %1476 = load i32, i32* @x.37
  %1477 = load i32, i32* @y.38
  %1478 = sub i32 %1476, 1
  %1479 = mul i32 %1476, %1478
  %1480 = urem i32 %1479, 2
  %1481 = icmp eq i32 %1480, 0
  %1482 = icmp slt i32 %1477, 10
  %1483 = or i1 %1481, %1482
  br i1 %1483, label %originalBBpart2371, label %originalBB358alteredBB

originalBBpart2371:                               ; preds = %originalBB358
  br i1 %1475, label %1484, label %1661, !dbg !2523

1484:                                             ; preds = %originalBBpart2371
  %1485 = load i32, i32* @x.37
  %1486 = load i32, i32* @y.38
  %1487 = sub i32 %1485, 1
  %1488 = mul i32 %1485, %1487
  %1489 = urem i32 %1488, 2
  %1490 = icmp eq i32 %1489, 0
  %1491 = icmp slt i32 %1486, 10
  %1492 = or i1 %1490, %1491
  br i1 %1492, label %originalBB373, label %originalBB373alteredBB

originalBB373:                                    ; preds = %1484, %originalBB373alteredBB
  %1493 = load i8*, i8** %21, align 8, !dbg !2524
  %1494 = load i64, i64* %28, align 8, !dbg !2525
  %1495 = add i64 %1494, 1, !dbg !2526
  %1496 = getelementptr inbounds i8, i8* %1493, i64 %1495, !dbg !2524
  %1497 = load i8, i8* %1496, align 1, !dbg !2524
  %1498 = sext i8 %1497 to i32, !dbg !2524
  %1499 = icmp sle i32 %1498, 57, !dbg !2527
  %1500 = load i32, i32* @x.37
  %1501 = load i32, i32* @y.38
  %1502 = sub i32 %1500, 1
  %1503 = mul i32 %1500, %1502
  %1504 = urem i32 %1503, 2
  %1505 = icmp eq i32 %1504, 0
  %1506 = icmp slt i32 %1501, 10
  %1507 = or i1 %1505, %1506
  br i1 %1507, label %originalBBpart2383, label %originalBB373alteredBB

originalBBpart2383:                               ; preds = %originalBB373
  br i1 %1499, label %1508, label %1661, !dbg !2528

1508:                                             ; preds = %originalBBpart2383
  %1509 = load i32, i32* @x.37
  %1510 = load i32, i32* @y.38
  %1511 = sub i32 %1509, 1
  %1512 = mul i32 %1509, %1511
  %1513 = urem i32 %1512, 2
  %1514 = icmp eq i32 %1513, 0
  %1515 = icmp slt i32 %1510, 10
  %1516 = or i1 %1514, %1515
  br i1 %1516, label %originalBB385, label %originalBB385alteredBB

originalBB385:                                    ; preds = %1508, %originalBB385alteredBB
  %1517 = load i32, i32* @x.37
  %1518 = load i32, i32* @y.38
  %1519 = sub i32 %1517, 1
  %1520 = mul i32 %1517, %1519
  %1521 = urem i32 %1520, 2
  %1522 = icmp eq i32 %1521, 0
  %1523 = icmp slt i32 %1518, 10
  %1524 = or i1 %1522, %1523
  br i1 %1524, label %originalBBpart2387, label %originalBB385alteredBB

originalBBpart2387:                               ; preds = %originalBB385
  br label %1525, !dbg !2529

1525:                                             ; preds = %originalBBpart2387
  %1526 = load i32, i32* @x.37
  %1527 = load i32, i32* @y.38
  %1528 = sub i32 %1526, 1
  %1529 = mul i32 %1526, %1528
  %1530 = urem i32 %1529, 2
  %1531 = icmp eq i32 %1530, 0
  %1532 = icmp slt i32 %1527, 10
  %1533 = or i1 %1531, %1532
  br i1 %1533, label %originalBB389, label %originalBB389alteredBB

originalBB389:                                    ; preds = %1525, %originalBB389alteredBB
  %1534 = load i64, i64* %29, align 8, !dbg !2531
  %1535 = load i64, i64* %20, align 8, !dbg !2531
  %1536 = icmp ult i64 %1534, %1535, !dbg !2531
  %1537 = load i32, i32* @x.37
  %1538 = load i32, i32* @y.38
  %1539 = sub i32 %1537, 1
  %1540 = mul i32 %1537, %1539
  %1541 = urem i32 %1540, 2
  %1542 = icmp eq i32 %1541, 0
  %1543 = icmp slt i32 %1538, 10
  %1544 = or i1 %1542, %1543
  br i1 %1544, label %originalBBpart2391, label %originalBB389alteredBB

originalBBpart2391:                               ; preds = %originalBB389
  br i1 %1536, label %1545, label %1565, !dbg !2534

1545:                                             ; preds = %originalBBpart2391
  %1546 = load i32, i32* @x.37
  %1547 = load i32, i32* @y.38
  %1548 = sub i32 %1546, 1
  %1549 = mul i32 %1546, %1548
  %1550 = urem i32 %1549, 2
  %1551 = icmp eq i32 %1550, 0
  %1552 = icmp slt i32 %1547, 10
  %1553 = or i1 %1551, %1552
  br i1 %1553, label %originalBB393, label %originalBB393alteredBB

originalBB393:                                    ; preds = %1545, %originalBB393alteredBB
  %1554 = load i8*, i8** %19, align 8, !dbg !2531
  %1555 = load i64, i64* %29, align 8, !dbg !2531
  %1556 = getelementptr inbounds i8, i8* %1554, i64 %1555, !dbg !2531
  store i8 48, i8* %1556, align 1, !dbg !2531
  %1557 = load i32, i32* @x.37
  %1558 = load i32, i32* @y.38
  %1559 = sub i32 %1557, 1
  %1560 = mul i32 %1557, %1559
  %1561 = urem i32 %1560, 2
  %1562 = icmp eq i32 %1561, 0
  %1563 = icmp slt i32 %1558, 10
  %1564 = or i1 %1562, %1563
  br i1 %1564, label %originalBBpart2395, label %originalBB393alteredBB

originalBBpart2395:                               ; preds = %originalBB393
  br label %1565, !dbg !2531

1565:                                             ; preds = %originalBBpart2395, %originalBBpart2391
  %1566 = load i32, i32* @x.37
  %1567 = load i32, i32* @y.38
  %1568 = sub i32 %1566, 1
  %1569 = mul i32 %1566, %1568
  %1570 = urem i32 %1569, 2
  %1571 = icmp eq i32 %1570, 0
  %1572 = icmp slt i32 %1567, 10
  %1573 = or i1 %1571, %1572
  br i1 %1573, label %originalBB397, label %originalBB397alteredBB

originalBB397:                                    ; preds = %1565, %originalBB397alteredBB
  %1574 = load i64, i64* %29, align 8, !dbg !2534
  %1575 = add i64 %1574, 1, !dbg !2534
  store i64 %1575, i64* %29, align 8, !dbg !2534
  %1576 = load i32, i32* @x.37
  %1577 = load i32, i32* @y.38
  %1578 = sub i32 %1576, 1
  %1579 = mul i32 %1576, %1578
  %1580 = urem i32 %1579, 2
  %1581 = icmp eq i32 %1580, 0
  %1582 = icmp slt i32 %1577, 10
  %1583 = or i1 %1581, %1582
  br i1 %1583, label %originalBBpart2401, label %originalBB397alteredBB

originalBBpart2401:                               ; preds = %originalBB397
  br label %1584, !dbg !2534

1584:                                             ; preds = %originalBBpart2401
  %1585 = load i32, i32* @x.37
  %1586 = load i32, i32* @y.38
  %1587 = sub i32 %1585, 1
  %1588 = mul i32 %1585, %1587
  %1589 = urem i32 %1588, 2
  %1590 = icmp eq i32 %1589, 0
  %1591 = icmp slt i32 %1586, 10
  %1592 = or i1 %1590, %1591
  br i1 %1592, label %originalBB403, label %originalBB403alteredBB

originalBB403:                                    ; preds = %1584, %originalBB403alteredBB
  %1593 = load i32, i32* @x.37
  %1594 = load i32, i32* @y.38
  %1595 = sub i32 %1593, 1
  %1596 = mul i32 %1593, %1595
  %1597 = urem i32 %1596, 2
  %1598 = icmp eq i32 %1597, 0
  %1599 = icmp slt i32 %1594, 10
  %1600 = or i1 %1598, %1599
  br i1 %1600, label %originalBBpart2405, label %originalBB403alteredBB

originalBBpart2405:                               ; preds = %originalBB403
  br label %1601, !dbg !2535

1601:                                             ; preds = %originalBBpart2405
  %1602 = load i64, i64* %29, align 8, !dbg !2536
  %1603 = load i64, i64* %20, align 8, !dbg !2536
  %1604 = icmp ult i64 %1602, %1603, !dbg !2536
  br i1 %1604, label %1605, label %1625, !dbg !2539

1605:                                             ; preds = %1601
  %1606 = load i32, i32* @x.37
  %1607 = load i32, i32* @y.38
  %1608 = sub i32 %1606, 1
  %1609 = mul i32 %1606, %1608
  %1610 = urem i32 %1609, 2
  %1611 = icmp eq i32 %1610, 0
  %1612 = icmp slt i32 %1607, 10
  %1613 = or i1 %1611, %1612
  br i1 %1613, label %originalBB407, label %originalBB407alteredBB

originalBB407:                                    ; preds = %1605, %originalBB407alteredBB
  %1614 = load i8*, i8** %19, align 8, !dbg !2536
  %1615 = load i64, i64* %29, align 8, !dbg !2536
  %1616 = getelementptr inbounds i8, i8* %1614, i64 %1615, !dbg !2536
  store i8 48, i8* %1616, align 1, !dbg !2536
  %1617 = load i32, i32* @x.37
  %1618 = load i32, i32* @y.38
  %1619 = sub i32 %1617, 1
  %1620 = mul i32 %1617, %1619
  %1621 = urem i32 %1620, 2
  %1622 = icmp eq i32 %1621, 0
  %1623 = icmp slt i32 %1618, 10
  %1624 = or i1 %1622, %1623
  br i1 %1624, label %originalBBpart2409, label %originalBB407alteredBB

originalBBpart2409:                               ; preds = %originalBB407
  br label %1625, !dbg !2536

1625:                                             ; preds = %originalBBpart2409, %1601
  %1626 = load i32, i32* @x.37
  %1627 = load i32, i32* @y.38
  %1628 = sub i32 %1626, 1
  %1629 = mul i32 %1626, %1628
  %1630 = urem i32 %1629, 2
  %1631 = icmp eq i32 %1630, 0
  %1632 = icmp slt i32 %1627, 10
  %1633 = or i1 %1631, %1632
  br i1 %1633, label %originalBB411, label %originalBB411alteredBB

originalBB411:                                    ; preds = %1625, %originalBB411alteredBB
  %1634 = load i64, i64* %29, align 8, !dbg !2539
  %1635 = add i64 %1634, 1, !dbg !2539
  store i64 %1635, i64* %29, align 8, !dbg !2539
  %1636 = load i32, i32* @x.37
  %1637 = load i32, i32* @y.38
  %1638 = sub i32 %1636, 1
  %1639 = mul i32 %1636, %1638
  %1640 = urem i32 %1639, 2
  %1641 = icmp eq i32 %1640, 0
  %1642 = icmp slt i32 %1637, 10
  %1643 = or i1 %1641, %1642
  br i1 %1643, label %originalBBpart2422, label %originalBB411alteredBB

originalBBpart2422:                               ; preds = %originalBB411
  br label %1644, !dbg !2539

1644:                                             ; preds = %originalBBpart2422
  %1645 = load i32, i32* @x.37
  %1646 = load i32, i32* @y.38
  %1647 = sub i32 %1645, 1
  %1648 = mul i32 %1645, %1647
  %1649 = urem i32 %1648, 2
  %1650 = icmp eq i32 %1649, 0
  %1651 = icmp slt i32 %1646, 10
  %1652 = or i1 %1650, %1651
  br i1 %1652, label %originalBB424, label %originalBB424alteredBB

originalBB424:                                    ; preds = %1644, %originalBB424alteredBB
  %1653 = load i32, i32* @x.37
  %1654 = load i32, i32* @y.38
  %1655 = sub i32 %1653, 1
  %1656 = mul i32 %1653, %1655
  %1657 = urem i32 %1656, 2
  %1658 = icmp eq i32 %1657, 0
  %1659 = icmp slt i32 %1654, 10
  %1660 = or i1 %1658, %1659
  br i1 %1660, label %originalBBpart2426, label %originalBB424alteredBB

originalBBpart2426:                               ; preds = %originalBB424
  br label %1661, !dbg !2540

1661:                                             ; preds = %originalBBpart2426, %originalBBpart2383, %originalBBpart2371, %originalBBpart2356, %1436
  %1662 = load i32, i32* @x.37
  %1663 = load i32, i32* @y.38
  %1664 = sub i32 %1662, 1
  %1665 = mul i32 %1662, %1664
  %1666 = urem i32 %1665, 2
  %1667 = icmp eq i32 %1666, 0
  %1668 = icmp slt i32 %1663, 10
  %1669 = or i1 %1667, %1668
  br i1 %1669, label %originalBB428, label %originalBB428alteredBB

originalBB428:                                    ; preds = %1661, %originalBB428alteredBB
  store i8 48, i8* %39, align 1, !dbg !2541
  %1670 = load i32, i32* @x.37
  %1671 = load i32, i32* @y.38
  %1672 = sub i32 %1670, 1
  %1673 = mul i32 %1670, %1672
  %1674 = urem i32 %1673, 2
  %1675 = icmp eq i32 %1674, 0
  %1676 = icmp slt i32 %1671, 10
  %1677 = or i1 %1675, %1676
  br i1 %1677, label %originalBBpart2430, label %originalBB428alteredBB

originalBBpart2430:                               ; preds = %originalBB428
  br label %1732, !dbg !2542

1678:                                             ; preds = %originalBBpart2226
  %1679 = load i32, i32* @x.37
  %1680 = load i32, i32* @y.38
  %1681 = sub i32 %1679, 1
  %1682 = mul i32 %1679, %1681
  %1683 = urem i32 %1682, 2
  %1684 = icmp eq i32 %1683, 0
  %1685 = icmp slt i32 %1680, 10
  %1686 = or i1 %1684, %1685
  br i1 %1686, label %originalBB432, label %originalBB432alteredBB

originalBB432:                                    ; preds = %1678, %originalBB432alteredBB
  %1687 = load i32, i32* %24, align 4, !dbg !2543
  %1688 = and i32 %1687, 1, !dbg !2545
  %1689 = icmp ne i32 %1688, 0, !dbg !2545
  %1690 = load i32, i32* @x.37
  %1691 = load i32, i32* @y.38
  %1692 = sub i32 %1690, 1
  %1693 = mul i32 %1690, %1692
  %1694 = urem i32 %1693, 2
  %1695 = icmp eq i32 %1694, 0
  %1696 = icmp slt i32 %1691, 10
  %1697 = or i1 %1695, %1696
  br i1 %1697, label %originalBBpart2441, label %originalBB432alteredBB

originalBBpart2441:                               ; preds = %originalBB432
  br i1 %1689, label %1698, label %1715, !dbg !2546

1698:                                             ; preds = %originalBBpart2441
  %1699 = load i32, i32* @x.37
  %1700 = load i32, i32* @y.38
  %1701 = sub i32 %1699, 1
  %1702 = mul i32 %1699, %1701
  %1703 = urem i32 %1702, 2
  %1704 = icmp eq i32 %1703, 0
  %1705 = icmp slt i32 %1700, 10
  %1706 = or i1 %1704, %1705
  br i1 %1706, label %originalBB443, label %originalBB443alteredBB

originalBB443:                                    ; preds = %1698, %originalBB443alteredBB
  %1707 = load i32, i32* @x.37
  %1708 = load i32, i32* @y.38
  %1709 = sub i32 %1707, 1
  %1710 = mul i32 %1707, %1709
  %1711 = urem i32 %1710, 2
  %1712 = icmp eq i32 %1711, 0
  %1713 = icmp slt i32 %1708, 10
  %1714 = or i1 %1712, %1713
  br i1 %1714, label %originalBBpart2445, label %originalBB443alteredBB

originalBBpart2445:                               ; preds = %originalBB443
  br label %6089, !dbg !2547

1715:                                             ; preds = %originalBBpart2441
  %1716 = load i32, i32* @x.37
  %1717 = load i32, i32* @y.38
  %1718 = sub i32 %1716, 1
  %1719 = mul i32 %1716, %1718
  %1720 = urem i32 %1719, 2
  %1721 = icmp eq i32 %1720, 0
  %1722 = icmp slt i32 %1717, 10
  %1723 = or i1 %1721, %1722
  br i1 %1723, label %originalBB447, label %originalBB447alteredBB

originalBB447:                                    ; preds = %1715, %originalBB447alteredBB
  %1724 = load i32, i32* @x.37
  %1725 = load i32, i32* @y.38
  %1726 = sub i32 %1724, 1
  %1727 = mul i32 %1724, %1726
  %1728 = urem i32 %1727, 2
  %1729 = icmp eq i32 %1728, 0
  %1730 = icmp slt i32 %1725, 10
  %1731 = or i1 %1729, %1730
  br i1 %1731, label %originalBBpart2449, label %originalBB447alteredBB

originalBBpart2449:                               ; preds = %originalBB447
  br label %1732

1732:                                             ; preds = %originalBBpart2449, %originalBBpart2430
  %1733 = load i32, i32* @x.37
  %1734 = load i32, i32* @y.38
  %1735 = sub i32 %1733, 1
  %1736 = mul i32 %1733, %1735
  %1737 = urem i32 %1736, 2
  %1738 = icmp eq i32 %1737, 0
  %1739 = icmp slt i32 %1734, 10
  %1740 = or i1 %1738, %1739
  br i1 %1740, label %originalBB451, label %originalBB451alteredBB

originalBB451:                                    ; preds = %1732, %originalBB451alteredBB
  %1741 = load i32, i32* @x.37
  %1742 = load i32, i32* @y.38
  %1743 = sub i32 %1741, 1
  %1744 = mul i32 %1741, %1743
  %1745 = urem i32 %1744, 2
  %1746 = icmp eq i32 %1745, 0
  %1747 = icmp slt i32 %1742, 10
  %1748 = or i1 %1746, %1747
  br i1 %1748, label %originalBBpart2453, label %originalBB451alteredBB

originalBBpart2453:                               ; preds = %originalBB451
  br label %5161, !dbg !2548

1749:                                             ; preds = %originalBBpart2222
  %1750 = load i32, i32* @x.37
  %1751 = load i32, i32* @y.38
  %1752 = sub i32 %1750, 1
  %1753 = mul i32 %1750, %1752
  %1754 = urem i32 %1753, 2
  %1755 = icmp eq i32 %1754, 0
  %1756 = icmp slt i32 %1751, 10
  %1757 = or i1 %1755, %1756
  br i1 %1757, label %originalBB455, label %originalBB455alteredBB

originalBB455:                                    ; preds = %1749, %originalBB455alteredBB
  %1758 = load i32, i32* %23, align 4, !dbg !2549
  %1759 = load i32, i32* @x.37
  %1760 = load i32, i32* @y.38
  %1761 = sub i32 %1759, 1
  %1762 = mul i32 %1759, %1761
  %1763 = urem i32 %1762, 2
  %1764 = icmp eq i32 %1763, 0
  %1765 = icmp slt i32 %1760, 10
  %1766 = or i1 %1764, %1765
  br i1 %1766, label %originalBBpart2457, label %originalBB455alteredBB

originalBBpart2457:                               ; preds = %originalBB455
  switch i32 %1758, label %2307 [
    i32 2, label %1767
    i32 5, label %1804
  ], !dbg !2550

1767:                                             ; preds = %originalBBpart2457
  %1768 = load i32, i32* @x.37
  %1769 = load i32, i32* @y.38
  %1770 = sub i32 %1768, 1
  %1771 = mul i32 %1768, %1770
  %1772 = urem i32 %1771, 2
  %1773 = icmp eq i32 %1772, 0
  %1774 = icmp slt i32 %1769, 10
  %1775 = or i1 %1773, %1774
  br i1 %1775, label %originalBB459, label %originalBB459alteredBB

originalBB459:                                    ; preds = %1767, %originalBB459alteredBB
  %1776 = load i8, i8* %35, align 1, !dbg !2551
  %1777 = trunc i8 %1776 to i1, !dbg !2551
  %1778 = load i32, i32* @x.37
  %1779 = load i32, i32* @y.38
  %1780 = sub i32 %1778, 1
  %1781 = mul i32 %1778, %1780
  %1782 = urem i32 %1781, 2
  %1783 = icmp eq i32 %1782, 0
  %1784 = icmp slt i32 %1779, 10
  %1785 = or i1 %1783, %1784
  br i1 %1785, label %originalBBpart2461, label %originalBB459alteredBB

originalBBpart2461:                               ; preds = %originalBB459
  br i1 %1777, label %1786, label %1787, !dbg !2554

1786:                                             ; preds = %originalBBpart2461
  br label %6606, !dbg !2555

1787:                                             ; preds = %originalBBpart2461
  %1788 = load i32, i32* @x.37
  %1789 = load i32, i32* @y.38
  %1790 = sub i32 %1788, 1
  %1791 = mul i32 %1788, %1790
  %1792 = urem i32 %1791, 2
  %1793 = icmp eq i32 %1792, 0
  %1794 = icmp slt i32 %1789, 10
  %1795 = or i1 %1793, %1794
  br i1 %1795, label %originalBB463, label %originalBB463alteredBB

originalBB463:                                    ; preds = %1787, %originalBB463alteredBB
  %1796 = load i32, i32* @x.37
  %1797 = load i32, i32* @y.38
  %1798 = sub i32 %1796, 1
  %1799 = mul i32 %1796, %1798
  %1800 = urem i32 %1799, 2
  %1801 = icmp eq i32 %1800, 0
  %1802 = icmp slt i32 %1797, 10
  %1803 = or i1 %1801, %1802
  br i1 %1803, label %originalBBpart2465, label %originalBB463alteredBB

originalBBpart2465:                               ; preds = %originalBB463
  br label %2324, !dbg !2556

1804:                                             ; preds = %originalBBpart2457
  %1805 = load i32, i32* @x.37
  %1806 = load i32, i32* @y.38
  %1807 = sub i32 %1805, 1
  %1808 = mul i32 %1805, %1807
  %1809 = urem i32 %1808, 2
  %1810 = icmp eq i32 %1809, 0
  %1811 = icmp slt i32 %1806, 10
  %1812 = or i1 %1810, %1811
  br i1 %1812, label %originalBB467, label %originalBB467alteredBB

originalBB467:                                    ; preds = %1804, %originalBB467alteredBB
  %1813 = load i32, i32* %24, align 4, !dbg !2557
  %1814 = and i32 %1813, 4, !dbg !2559
  %1815 = icmp ne i32 %1814, 0, !dbg !2559
  %1816 = load i32, i32* @x.37
  %1817 = load i32, i32* @y.38
  %1818 = sub i32 %1816, 1
  %1819 = mul i32 %1816, %1818
  %1820 = urem i32 %1819, 2
  %1821 = icmp eq i32 %1820, 0
  %1822 = icmp slt i32 %1817, 10
  %1823 = or i1 %1821, %1822
  br i1 %1823, label %originalBBpart2471, label %originalBB467alteredBB

originalBBpart2471:                               ; preds = %originalBB467
  br i1 %1815, label %1824, label %2290, !dbg !2560

1824:                                             ; preds = %originalBBpart2471
  %1825 = load i32, i32* @x.37
  %1826 = load i32, i32* @y.38
  %1827 = sub i32 %1825, 1
  %1828 = mul i32 %1825, %1827
  %1829 = urem i32 %1828, 2
  %1830 = icmp eq i32 %1829, 0
  %1831 = icmp slt i32 %1826, 10
  %1832 = or i1 %1830, %1831
  br i1 %1832, label %originalBB473, label %originalBB473alteredBB

originalBB473:                                    ; preds = %1824, %originalBB473alteredBB
  %1833 = load i64, i64* %28, align 8, !dbg !2561
  %1834 = add i64 %1833, 2, !dbg !2562
  %1835 = load i64, i64* %22, align 8, !dbg !2563
  %1836 = icmp ult i64 %1834, %1835, !dbg !2564
  %1837 = load i32, i32* @x.37
  %1838 = load i32, i32* @y.38
  %1839 = sub i32 %1837, 1
  %1840 = mul i32 %1837, %1839
  %1841 = urem i32 %1840, 2
  %1842 = icmp eq i32 %1841, 0
  %1843 = icmp slt i32 %1838, 10
  %1844 = or i1 %1842, %1843
  br i1 %1844, label %originalBBpart2475, label %originalBB473alteredBB

originalBBpart2475:                               ; preds = %originalBB473
  br i1 %1836, label %1845, label %2290, !dbg !2565

1845:                                             ; preds = %originalBBpart2475
  %1846 = load i32, i32* @x.37
  %1847 = load i32, i32* @y.38
  %1848 = sub i32 %1846, 1
  %1849 = mul i32 %1846, %1848
  %1850 = urem i32 %1849, 2
  %1851 = icmp eq i32 %1850, 0
  %1852 = icmp slt i32 %1847, 10
  %1853 = or i1 %1851, %1852
  br i1 %1853, label %originalBB477, label %originalBB477alteredBB

originalBB477:                                    ; preds = %1845, %originalBB477alteredBB
  %1854 = load i8*, i8** %21, align 8, !dbg !2566
  %1855 = load i64, i64* %28, align 8, !dbg !2567
  %1856 = add i64 %1855, 1, !dbg !2568
  %1857 = getelementptr inbounds i8, i8* %1854, i64 %1856, !dbg !2566
  %1858 = load i8, i8* %1857, align 1, !dbg !2566
  %1859 = sext i8 %1858 to i32, !dbg !2566
  %1860 = icmp eq i32 %1859, 63, !dbg !2569
  %1861 = load i32, i32* @x.37
  %1862 = load i32, i32* @y.38
  %1863 = sub i32 %1861, 1
  %1864 = mul i32 %1861, %1863
  %1865 = urem i32 %1864, 2
  %1866 = icmp eq i32 %1865, 0
  %1867 = icmp slt i32 %1862, 10
  %1868 = or i1 %1866, %1867
  br i1 %1868, label %originalBBpart2483, label %originalBB477alteredBB

originalBBpart2483:                               ; preds = %originalBB477
  br i1 %1860, label %1869, label %2290, !dbg !2570

1869:                                             ; preds = %originalBBpart2483
  %1870 = load i32, i32* @x.37
  %1871 = load i32, i32* @y.38
  %1872 = sub i32 %1870, 1
  %1873 = mul i32 %1870, %1872
  %1874 = urem i32 %1873, 2
  %1875 = icmp eq i32 %1874, 0
  %1876 = icmp slt i32 %1871, 10
  %1877 = or i1 %1875, %1876
  br i1 %1877, label %originalBB485, label %originalBB485alteredBB

originalBB485:                                    ; preds = %1869, %originalBB485alteredBB
  %1878 = load i8*, i8** %21, align 8, !dbg !2571
  %1879 = load i64, i64* %28, align 8, !dbg !2572
  %1880 = add i64 %1879, 2, !dbg !2573
  %1881 = getelementptr inbounds i8, i8* %1878, i64 %1880, !dbg !2571
  %1882 = load i8, i8* %1881, align 1, !dbg !2571
  %1883 = sext i8 %1882 to i32, !dbg !2571
  %1884 = load i32, i32* @x.37
  %1885 = load i32, i32* @y.38
  %1886 = sub i32 %1884, 1
  %1887 = mul i32 %1884, %1886
  %1888 = urem i32 %1887, 2
  %1889 = icmp eq i32 %1888, 0
  %1890 = icmp slt i32 %1885, 10
  %1891 = or i1 %1889, %1890
  br i1 %1891, label %originalBBpart2497, label %originalBB485alteredBB

originalBBpart2497:                               ; preds = %originalBB485
  switch i32 %1883, label %2256 [
    i32 33, label %1892
    i32 39, label %1892
    i32 40, label %1892
    i32 41, label %1892
    i32 45, label %1892
    i32 47, label %1892
    i32 60, label %1892
    i32 61, label %1892
    i32 62, label %1892
  ], !dbg !2574

1892:                                             ; preds = %originalBBpart2497, %originalBBpart2497, %originalBBpart2497, %originalBBpart2497, %originalBBpart2497, %originalBBpart2497, %originalBBpart2497, %originalBBpart2497, %originalBBpart2497
  %1893 = load i32, i32* @x.37
  %1894 = load i32, i32* @y.38
  %1895 = sub i32 %1893, 1
  %1896 = mul i32 %1893, %1895
  %1897 = urem i32 %1896, 2
  %1898 = icmp eq i32 %1897, 0
  %1899 = icmp slt i32 %1894, 10
  %1900 = or i1 %1898, %1899
  br i1 %1900, label %originalBB499, label %originalBB499alteredBB

originalBB499:                                    ; preds = %1892, %originalBB499alteredBB
  %1901 = load i8, i8* %35, align 1, !dbg !2575
  %1902 = trunc i8 %1901 to i1, !dbg !2575
  %1903 = load i32, i32* @x.37
  %1904 = load i32, i32* @y.38
  %1905 = sub i32 %1903, 1
  %1906 = mul i32 %1903, %1905
  %1907 = urem i32 %1906, 2
  %1908 = icmp eq i32 %1907, 0
  %1909 = icmp slt i32 %1904, 10
  %1910 = or i1 %1908, %1909
  br i1 %1910, label %originalBBpart2501, label %originalBB499alteredBB

originalBBpart2501:                               ; preds = %originalBB499
  br i1 %1902, label %1911, label %1928, !dbg !2578

1911:                                             ; preds = %originalBBpart2501
  %1912 = load i32, i32* @x.37
  %1913 = load i32, i32* @y.38
  %1914 = sub i32 %1912, 1
  %1915 = mul i32 %1912, %1914
  %1916 = urem i32 %1915, 2
  %1917 = icmp eq i32 %1916, 0
  %1918 = icmp slt i32 %1913, 10
  %1919 = or i1 %1917, %1918
  br i1 %1919, label %originalBB503, label %originalBB503alteredBB

originalBB503:                                    ; preds = %1911, %originalBB503alteredBB
  %1920 = load i32, i32* @x.37
  %1921 = load i32, i32* @y.38
  %1922 = sub i32 %1920, 1
  %1923 = mul i32 %1920, %1922
  %1924 = urem i32 %1923, 2
  %1925 = icmp eq i32 %1924, 0
  %1926 = icmp slt i32 %1921, 10
  %1927 = or i1 %1925, %1926
  br i1 %1927, label %originalBBpart2505, label %originalBB503alteredBB

originalBBpart2505:                               ; preds = %originalBB503
  br label %6606, !dbg !2579

1928:                                             ; preds = %originalBBpart2501
  %1929 = load i32, i32* @x.37
  %1930 = load i32, i32* @y.38
  %1931 = sub i32 %1929, 1
  %1932 = mul i32 %1929, %1931
  %1933 = urem i32 %1932, 2
  %1934 = icmp eq i32 %1933, 0
  %1935 = icmp slt i32 %1930, 10
  %1936 = or i1 %1934, %1935
  br i1 %1936, label %originalBB507, label %originalBB507alteredBB

originalBB507:                                    ; preds = %1928, %originalBB507alteredBB
  %1937 = load i8*, i8** %21, align 8, !dbg !2580
  %1938 = load i64, i64* %28, align 8, !dbg !2581
  %1939 = add i64 %1938, 2, !dbg !2582
  %1940 = getelementptr inbounds i8, i8* %1937, i64 %1939, !dbg !2580
  %1941 = load i8, i8* %1940, align 1, !dbg !2580
  store i8 %1941, i8* %39, align 1, !dbg !2583
  %1942 = load i64, i64* %28, align 8, !dbg !2584
  %1943 = add i64 %1942, 2, !dbg !2584
  store i64 %1943, i64* %28, align 8, !dbg !2584
  %1944 = load i32, i32* @x.37
  %1945 = load i32, i32* @y.38
  %1946 = sub i32 %1944, 1
  %1947 = mul i32 %1944, %1946
  %1948 = urem i32 %1947, 2
  %1949 = icmp eq i32 %1948, 0
  %1950 = icmp slt i32 %1945, 10
  %1951 = or i1 %1949, %1950
  br i1 %1951, label %originalBBpart2518, label %originalBB507alteredBB

originalBBpart2518:                               ; preds = %originalBB507
  br label %1952, !dbg !2585

1952:                                             ; preds = %originalBBpart2518
  %1953 = load i32, i32* @x.37
  %1954 = load i32, i32* @y.38
  %1955 = sub i32 %1953, 1
  %1956 = mul i32 %1953, %1955
  %1957 = urem i32 %1956, 2
  %1958 = icmp eq i32 %1957, 0
  %1959 = icmp slt i32 %1954, 10
  %1960 = or i1 %1958, %1959
  br i1 %1960, label %originalBB520, label %originalBB520alteredBB

originalBB520:                                    ; preds = %1952, %originalBB520alteredBB
  %1961 = load i64, i64* %29, align 8, !dbg !2586
  %1962 = load i64, i64* %20, align 8, !dbg !2586
  %1963 = icmp ult i64 %1961, %1962, !dbg !2586
  %1964 = load i32, i32* @x.37
  %1965 = load i32, i32* @y.38
  %1966 = sub i32 %1964, 1
  %1967 = mul i32 %1964, %1966
  %1968 = urem i32 %1967, 2
  %1969 = icmp eq i32 %1968, 0
  %1970 = icmp slt i32 %1965, 10
  %1971 = or i1 %1969, %1970
  br i1 %1971, label %originalBBpart2522, label %originalBB520alteredBB

originalBBpart2522:                               ; preds = %originalBB520
  br i1 %1963, label %1972, label %1992, !dbg !2589

1972:                                             ; preds = %originalBBpart2522
  %1973 = load i32, i32* @x.37
  %1974 = load i32, i32* @y.38
  %1975 = sub i32 %1973, 1
  %1976 = mul i32 %1973, %1975
  %1977 = urem i32 %1976, 2
  %1978 = icmp eq i32 %1977, 0
  %1979 = icmp slt i32 %1974, 10
  %1980 = or i1 %1978, %1979
  br i1 %1980, label %originalBB524, label %originalBB524alteredBB

originalBB524:                                    ; preds = %1972, %originalBB524alteredBB
  %1981 = load i8*, i8** %19, align 8, !dbg !2586
  %1982 = load i64, i64* %29, align 8, !dbg !2586
  %1983 = getelementptr inbounds i8, i8* %1981, i64 %1982, !dbg !2586
  store i8 63, i8* %1983, align 1, !dbg !2586
  %1984 = load i32, i32* @x.37
  %1985 = load i32, i32* @y.38
  %1986 = sub i32 %1984, 1
  %1987 = mul i32 %1984, %1986
  %1988 = urem i32 %1987, 2
  %1989 = icmp eq i32 %1988, 0
  %1990 = icmp slt i32 %1985, 10
  %1991 = or i1 %1989, %1990
  br i1 %1991, label %originalBBpart2526, label %originalBB524alteredBB

originalBBpart2526:                               ; preds = %originalBB524
  br label %1992, !dbg !2586

1992:                                             ; preds = %originalBBpart2526, %originalBBpart2522
  %1993 = load i32, i32* @x.37
  %1994 = load i32, i32* @y.38
  %1995 = sub i32 %1993, 1
  %1996 = mul i32 %1993, %1995
  %1997 = urem i32 %1996, 2
  %1998 = icmp eq i32 %1997, 0
  %1999 = icmp slt i32 %1994, 10
  %2000 = or i1 %1998, %1999
  br i1 %2000, label %originalBB528, label %originalBB528alteredBB

originalBB528:                                    ; preds = %1992, %originalBB528alteredBB
  %2001 = load i64, i64* %29, align 8, !dbg !2589
  %2002 = add i64 %2001, 1, !dbg !2589
  store i64 %2002, i64* %29, align 8, !dbg !2589
  %2003 = load i32, i32* @x.37
  %2004 = load i32, i32* @y.38
  %2005 = sub i32 %2003, 1
  %2006 = mul i32 %2003, %2005
  %2007 = urem i32 %2006, 2
  %2008 = icmp eq i32 %2007, 0
  %2009 = icmp slt i32 %2004, 10
  %2010 = or i1 %2008, %2009
  br i1 %2010, label %originalBBpart2542, label %originalBB528alteredBB

originalBBpart2542:                               ; preds = %originalBB528
  br label %2011, !dbg !2589

2011:                                             ; preds = %originalBBpart2542
  %2012 = load i32, i32* @x.37
  %2013 = load i32, i32* @y.38
  %2014 = sub i32 %2012, 1
  %2015 = mul i32 %2012, %2014
  %2016 = urem i32 %2015, 2
  %2017 = icmp eq i32 %2016, 0
  %2018 = icmp slt i32 %2013, 10
  %2019 = or i1 %2017, %2018
  br i1 %2019, label %originalBB544, label %originalBB544alteredBB

originalBB544:                                    ; preds = %2011, %originalBB544alteredBB
  %2020 = load i32, i32* @x.37
  %2021 = load i32, i32* @y.38
  %2022 = sub i32 %2020, 1
  %2023 = mul i32 %2020, %2022
  %2024 = urem i32 %2023, 2
  %2025 = icmp eq i32 %2024, 0
  %2026 = icmp slt i32 %2021, 10
  %2027 = or i1 %2025, %2026
  br i1 %2027, label %originalBBpart2546, label %originalBB544alteredBB

originalBBpart2546:                               ; preds = %originalBB544
  br label %2028, !dbg !2590

2028:                                             ; preds = %originalBBpart2546
  %2029 = load i32, i32* @x.37
  %2030 = load i32, i32* @y.38
  %2031 = sub i32 %2029, 1
  %2032 = mul i32 %2029, %2031
  %2033 = urem i32 %2032, 2
  %2034 = icmp eq i32 %2033, 0
  %2035 = icmp slt i32 %2030, 10
  %2036 = or i1 %2034, %2035
  br i1 %2036, label %originalBB548, label %originalBB548alteredBB

originalBB548:                                    ; preds = %2028, %originalBB548alteredBB
  %2037 = load i64, i64* %29, align 8, !dbg !2591
  %2038 = load i64, i64* %20, align 8, !dbg !2591
  %2039 = icmp ult i64 %2037, %2038, !dbg !2591
  %2040 = load i32, i32* @x.37
  %2041 = load i32, i32* @y.38
  %2042 = sub i32 %2040, 1
  %2043 = mul i32 %2040, %2042
  %2044 = urem i32 %2043, 2
  %2045 = icmp eq i32 %2044, 0
  %2046 = icmp slt i32 %2041, 10
  %2047 = or i1 %2045, %2046
  br i1 %2047, label %originalBBpart2550, label %originalBB548alteredBB

originalBBpart2550:                               ; preds = %originalBB548
  br i1 %2039, label %2048, label %2068, !dbg !2594

2048:                                             ; preds = %originalBBpart2550
  %2049 = load i32, i32* @x.37
  %2050 = load i32, i32* @y.38
  %2051 = sub i32 %2049, 1
  %2052 = mul i32 %2049, %2051
  %2053 = urem i32 %2052, 2
  %2054 = icmp eq i32 %2053, 0
  %2055 = icmp slt i32 %2050, 10
  %2056 = or i1 %2054, %2055
  br i1 %2056, label %originalBB552, label %originalBB552alteredBB

originalBB552:                                    ; preds = %2048, %originalBB552alteredBB
  %2057 = load i8*, i8** %19, align 8, !dbg !2591
  %2058 = load i64, i64* %29, align 8, !dbg !2591
  %2059 = getelementptr inbounds i8, i8* %2057, i64 %2058, !dbg !2591
  store i8 34, i8* %2059, align 1, !dbg !2591
  %2060 = load i32, i32* @x.37
  %2061 = load i32, i32* @y.38
  %2062 = sub i32 %2060, 1
  %2063 = mul i32 %2060, %2062
  %2064 = urem i32 %2063, 2
  %2065 = icmp eq i32 %2064, 0
  %2066 = icmp slt i32 %2061, 10
  %2067 = or i1 %2065, %2066
  br i1 %2067, label %originalBBpart2554, label %originalBB552alteredBB

originalBBpart2554:                               ; preds = %originalBB552
  br label %2068, !dbg !2591

2068:                                             ; preds = %originalBBpart2554, %originalBBpart2550
  %2069 = load i32, i32* @x.37
  %2070 = load i32, i32* @y.38
  %2071 = sub i32 %2069, 1
  %2072 = mul i32 %2069, %2071
  %2073 = urem i32 %2072, 2
  %2074 = icmp eq i32 %2073, 0
  %2075 = icmp slt i32 %2070, 10
  %2076 = or i1 %2074, %2075
  br i1 %2076, label %originalBB556, label %originalBB556alteredBB

originalBB556:                                    ; preds = %2068, %originalBB556alteredBB
  %2077 = load i64, i64* %29, align 8, !dbg !2594
  %2078 = add i64 %2077, 1, !dbg !2594
  store i64 %2078, i64* %29, align 8, !dbg !2594
  %2079 = load i32, i32* @x.37
  %2080 = load i32, i32* @y.38
  %2081 = sub i32 %2079, 1
  %2082 = mul i32 %2079, %2081
  %2083 = urem i32 %2082, 2
  %2084 = icmp eq i32 %2083, 0
  %2085 = icmp slt i32 %2080, 10
  %2086 = or i1 %2084, %2085
  br i1 %2086, label %originalBBpart2571, label %originalBB556alteredBB

originalBBpart2571:                               ; preds = %originalBB556
  br label %2087, !dbg !2594

2087:                                             ; preds = %originalBBpart2571
  %2088 = load i32, i32* @x.37
  %2089 = load i32, i32* @y.38
  %2090 = sub i32 %2088, 1
  %2091 = mul i32 %2088, %2090
  %2092 = urem i32 %2091, 2
  %2093 = icmp eq i32 %2092, 0
  %2094 = icmp slt i32 %2089, 10
  %2095 = or i1 %2093, %2094
  br i1 %2095, label %originalBB573, label %originalBB573alteredBB

originalBB573:                                    ; preds = %2087, %originalBB573alteredBB
  %2096 = load i32, i32* @x.37
  %2097 = load i32, i32* @y.38
  %2098 = sub i32 %2096, 1
  %2099 = mul i32 %2096, %2098
  %2100 = urem i32 %2099, 2
  %2101 = icmp eq i32 %2100, 0
  %2102 = icmp slt i32 %2097, 10
  %2103 = or i1 %2101, %2102
  br i1 %2103, label %originalBBpart2575, label %originalBB573alteredBB

originalBBpart2575:                               ; preds = %originalBB573
  br label %2104, !dbg !2595

2104:                                             ; preds = %originalBBpart2575
  %2105 = load i32, i32* @x.37
  %2106 = load i32, i32* @y.38
  %2107 = sub i32 %2105, 1
  %2108 = mul i32 %2105, %2107
  %2109 = urem i32 %2108, 2
  %2110 = icmp eq i32 %2109, 0
  %2111 = icmp slt i32 %2106, 10
  %2112 = or i1 %2110, %2111
  br i1 %2112, label %originalBB577, label %originalBB577alteredBB

originalBB577:                                    ; preds = %2104, %originalBB577alteredBB
  %2113 = load i64, i64* %29, align 8, !dbg !2596
  %2114 = load i64, i64* %20, align 8, !dbg !2596
  %2115 = icmp ult i64 %2113, %2114, !dbg !2596
  %2116 = load i32, i32* @x.37
  %2117 = load i32, i32* @y.38
  %2118 = sub i32 %2116, 1
  %2119 = mul i32 %2116, %2118
  %2120 = urem i32 %2119, 2
  %2121 = icmp eq i32 %2120, 0
  %2122 = icmp slt i32 %2117, 10
  %2123 = or i1 %2121, %2122
  br i1 %2123, label %originalBBpart2579, label %originalBB577alteredBB

originalBBpart2579:                               ; preds = %originalBB577
  br i1 %2115, label %2124, label %2144, !dbg !2599

2124:                                             ; preds = %originalBBpart2579
  %2125 = load i32, i32* @x.37
  %2126 = load i32, i32* @y.38
  %2127 = sub i32 %2125, 1
  %2128 = mul i32 %2125, %2127
  %2129 = urem i32 %2128, 2
  %2130 = icmp eq i32 %2129, 0
  %2131 = icmp slt i32 %2126, 10
  %2132 = or i1 %2130, %2131
  br i1 %2132, label %originalBB581, label %originalBB581alteredBB

originalBB581:                                    ; preds = %2124, %originalBB581alteredBB
  %2133 = load i8*, i8** %19, align 8, !dbg !2596
  %2134 = load i64, i64* %29, align 8, !dbg !2596
  %2135 = getelementptr inbounds i8, i8* %2133, i64 %2134, !dbg !2596
  store i8 34, i8* %2135, align 1, !dbg !2596
  %2136 = load i32, i32* @x.37
  %2137 = load i32, i32* @y.38
  %2138 = sub i32 %2136, 1
  %2139 = mul i32 %2136, %2138
  %2140 = urem i32 %2139, 2
  %2141 = icmp eq i32 %2140, 0
  %2142 = icmp slt i32 %2137, 10
  %2143 = or i1 %2141, %2142
  br i1 %2143, label %originalBBpart2583, label %originalBB581alteredBB

originalBBpart2583:                               ; preds = %originalBB581
  br label %2144, !dbg !2596

2144:                                             ; preds = %originalBBpart2583, %originalBBpart2579
  %2145 = load i32, i32* @x.37
  %2146 = load i32, i32* @y.38
  %2147 = sub i32 %2145, 1
  %2148 = mul i32 %2145, %2147
  %2149 = urem i32 %2148, 2
  %2150 = icmp eq i32 %2149, 0
  %2151 = icmp slt i32 %2146, 10
  %2152 = or i1 %2150, %2151
  br i1 %2152, label %originalBB585, label %originalBB585alteredBB

originalBB585:                                    ; preds = %2144, %originalBB585alteredBB
  %2153 = load i64, i64* %29, align 8, !dbg !2599
  %2154 = add i64 %2153, 1, !dbg !2599
  store i64 %2154, i64* %29, align 8, !dbg !2599
  %2155 = load i32, i32* @x.37
  %2156 = load i32, i32* @y.38
  %2157 = sub i32 %2155, 1
  %2158 = mul i32 %2155, %2157
  %2159 = urem i32 %2158, 2
  %2160 = icmp eq i32 %2159, 0
  %2161 = icmp slt i32 %2156, 10
  %2162 = or i1 %2160, %2161
  br i1 %2162, label %originalBBpart2593, label %originalBB585alteredBB

originalBBpart2593:                               ; preds = %originalBB585
  br label %2163, !dbg !2599

2163:                                             ; preds = %originalBBpart2593
  %2164 = load i32, i32* @x.37
  %2165 = load i32, i32* @y.38
  %2166 = sub i32 %2164, 1
  %2167 = mul i32 %2164, %2166
  %2168 = urem i32 %2167, 2
  %2169 = icmp eq i32 %2168, 0
  %2170 = icmp slt i32 %2165, 10
  %2171 = or i1 %2169, %2170
  br i1 %2171, label %originalBB595, label %originalBB595alteredBB

originalBB595:                                    ; preds = %2163, %originalBB595alteredBB
  %2172 = load i32, i32* @x.37
  %2173 = load i32, i32* @y.38
  %2174 = sub i32 %2172, 1
  %2175 = mul i32 %2172, %2174
  %2176 = urem i32 %2175, 2
  %2177 = icmp eq i32 %2176, 0
  %2178 = icmp slt i32 %2173, 10
  %2179 = or i1 %2177, %2178
  br i1 %2179, label %originalBBpart2597, label %originalBB595alteredBB

originalBBpart2597:                               ; preds = %originalBB595
  br label %2180, !dbg !2600

2180:                                             ; preds = %originalBBpart2597
  %2181 = load i32, i32* @x.37
  %2182 = load i32, i32* @y.38
  %2183 = sub i32 %2181, 1
  %2184 = mul i32 %2181, %2183
  %2185 = urem i32 %2184, 2
  %2186 = icmp eq i32 %2185, 0
  %2187 = icmp slt i32 %2182, 10
  %2188 = or i1 %2186, %2187
  br i1 %2188, label %originalBB599, label %originalBB599alteredBB

originalBB599:                                    ; preds = %2180, %originalBB599alteredBB
  %2189 = load i64, i64* %29, align 8, !dbg !2601
  %2190 = load i64, i64* %20, align 8, !dbg !2601
  %2191 = icmp ult i64 %2189, %2190, !dbg !2601
  %2192 = load i32, i32* @x.37
  %2193 = load i32, i32* @y.38
  %2194 = sub i32 %2192, 1
  %2195 = mul i32 %2192, %2194
  %2196 = urem i32 %2195, 2
  %2197 = icmp eq i32 %2196, 0
  %2198 = icmp slt i32 %2193, 10
  %2199 = or i1 %2197, %2198
  br i1 %2199, label %originalBBpart2601, label %originalBB599alteredBB

originalBBpart2601:                               ; preds = %originalBB599
  br i1 %2191, label %2200, label %2220, !dbg !2604

2200:                                             ; preds = %originalBBpart2601
  %2201 = load i32, i32* @x.37
  %2202 = load i32, i32* @y.38
  %2203 = sub i32 %2201, 1
  %2204 = mul i32 %2201, %2203
  %2205 = urem i32 %2204, 2
  %2206 = icmp eq i32 %2205, 0
  %2207 = icmp slt i32 %2202, 10
  %2208 = or i1 %2206, %2207
  br i1 %2208, label %originalBB603, label %originalBB603alteredBB

originalBB603:                                    ; preds = %2200, %originalBB603alteredBB
  %2209 = load i8*, i8** %19, align 8, !dbg !2601
  %2210 = load i64, i64* %29, align 8, !dbg !2601
  %2211 = getelementptr inbounds i8, i8* %2209, i64 %2210, !dbg !2601
  store i8 63, i8* %2211, align 1, !dbg !2601
  %2212 = load i32, i32* @x.37
  %2213 = load i32, i32* @y.38
  %2214 = sub i32 %2212, 1
  %2215 = mul i32 %2212, %2214
  %2216 = urem i32 %2215, 2
  %2217 = icmp eq i32 %2216, 0
  %2218 = icmp slt i32 %2213, 10
  %2219 = or i1 %2217, %2218
  br i1 %2219, label %originalBBpart2605, label %originalBB603alteredBB

originalBBpart2605:                               ; preds = %originalBB603
  br label %2220, !dbg !2601

2220:                                             ; preds = %originalBBpart2605, %originalBBpart2601
  %2221 = load i32, i32* @x.37
  %2222 = load i32, i32* @y.38
  %2223 = sub i32 %2221, 1
  %2224 = mul i32 %2221, %2223
  %2225 = urem i32 %2224, 2
  %2226 = icmp eq i32 %2225, 0
  %2227 = icmp slt i32 %2222, 10
  %2228 = or i1 %2226, %2227
  br i1 %2228, label %originalBB607, label %originalBB607alteredBB

originalBB607:                                    ; preds = %2220, %originalBB607alteredBB
  %2229 = load i64, i64* %29, align 8, !dbg !2604
  %2230 = add i64 %2229, 1, !dbg !2604
  store i64 %2230, i64* %29, align 8, !dbg !2604
  %2231 = load i32, i32* @x.37
  %2232 = load i32, i32* @y.38
  %2233 = sub i32 %2231, 1
  %2234 = mul i32 %2231, %2233
  %2235 = urem i32 %2234, 2
  %2236 = icmp eq i32 %2235, 0
  %2237 = icmp slt i32 %2232, 10
  %2238 = or i1 %2236, %2237
  br i1 %2238, label %originalBBpart2616, label %originalBB607alteredBB

originalBBpart2616:                               ; preds = %originalBB607
  br label %2239, !dbg !2604

2239:                                             ; preds = %originalBBpart2616
  %2240 = load i32, i32* @x.37
  %2241 = load i32, i32* @y.38
  %2242 = sub i32 %2240, 1
  %2243 = mul i32 %2240, %2242
  %2244 = urem i32 %2243, 2
  %2245 = icmp eq i32 %2244, 0
  %2246 = icmp slt i32 %2241, 10
  %2247 = or i1 %2245, %2246
  br i1 %2247, label %originalBB618, label %originalBB618alteredBB

originalBB618:                                    ; preds = %2239, %originalBB618alteredBB
  %2248 = load i32, i32* @x.37
  %2249 = load i32, i32* @y.38
  %2250 = sub i32 %2248, 1
  %2251 = mul i32 %2248, %2250
  %2252 = urem i32 %2251, 2
  %2253 = icmp eq i32 %2252, 0
  %2254 = icmp slt i32 %2249, 10
  %2255 = or i1 %2253, %2254
  br i1 %2255, label %originalBBpart2620, label %originalBB618alteredBB

originalBBpart2620:                               ; preds = %originalBB618
  br label %2273, !dbg !2605

2256:                                             ; preds = %originalBBpart2497
  %2257 = load i32, i32* @x.37
  %2258 = load i32, i32* @y.38
  %2259 = sub i32 %2257, 1
  %2260 = mul i32 %2257, %2259
  %2261 = urem i32 %2260, 2
  %2262 = icmp eq i32 %2261, 0
  %2263 = icmp slt i32 %2258, 10
  %2264 = or i1 %2262, %2263
  br i1 %2264, label %originalBB622, label %originalBB622alteredBB

originalBB622:                                    ; preds = %2256, %originalBB622alteredBB
  %2265 = load i32, i32* @x.37
  %2266 = load i32, i32* @y.38
  %2267 = sub i32 %2265, 1
  %2268 = mul i32 %2265, %2267
  %2269 = urem i32 %2268, 2
  %2270 = icmp eq i32 %2269, 0
  %2271 = icmp slt i32 %2266, 10
  %2272 = or i1 %2270, %2271
  br i1 %2272, label %originalBBpart2624, label %originalBB622alteredBB

originalBBpart2624:                               ; preds = %originalBB622
  br label %2273, !dbg !2606

2273:                                             ; preds = %originalBBpart2624, %originalBBpart2620
  %2274 = load i32, i32* @x.37
  %2275 = load i32, i32* @y.38
  %2276 = sub i32 %2274, 1
  %2277 = mul i32 %2274, %2276
  %2278 = urem i32 %2277, 2
  %2279 = icmp eq i32 %2278, 0
  %2280 = icmp slt i32 %2275, 10
  %2281 = or i1 %2279, %2280
  br i1 %2281, label %originalBB626, label %originalBB626alteredBB

originalBB626:                                    ; preds = %2273, %originalBB626alteredBB
  %2282 = load i32, i32* @x.37
  %2283 = load i32, i32* @y.38
  %2284 = sub i32 %2282, 1
  %2285 = mul i32 %2282, %2284
  %2286 = urem i32 %2285, 2
  %2287 = icmp eq i32 %2286, 0
  %2288 = icmp slt i32 %2283, 10
  %2289 = or i1 %2287, %2288
  br i1 %2289, label %originalBBpart2628, label %originalBB626alteredBB

originalBBpart2628:                               ; preds = %originalBB626
  br label %2290, !dbg !2607

2290:                                             ; preds = %originalBBpart2628, %originalBBpart2483, %originalBBpart2475, %originalBBpart2471
  %2291 = load i32, i32* @x.37
  %2292 = load i32, i32* @y.38
  %2293 = sub i32 %2291, 1
  %2294 = mul i32 %2291, %2293
  %2295 = urem i32 %2294, 2
  %2296 = icmp eq i32 %2295, 0
  %2297 = icmp slt i32 %2292, 10
  %2298 = or i1 %2296, %2297
  br i1 %2298, label %originalBB630, label %originalBB630alteredBB

originalBB630:                                    ; preds = %2290, %originalBB630alteredBB
  %2299 = load i32, i32* @x.37
  %2300 = load i32, i32* @y.38
  %2301 = sub i32 %2299, 1
  %2302 = mul i32 %2299, %2301
  %2303 = urem i32 %2302, 2
  %2304 = icmp eq i32 %2303, 0
  %2305 = icmp slt i32 %2300, 10
  %2306 = or i1 %2304, %2305
  br i1 %2306, label %originalBBpart2632, label %originalBB630alteredBB

originalBBpart2632:                               ; preds = %originalBB630
  br label %2324, !dbg !2608

2307:                                             ; preds = %originalBBpart2457
  %2308 = load i32, i32* @x.37
  %2309 = load i32, i32* @y.38
  %2310 = sub i32 %2308, 1
  %2311 = mul i32 %2308, %2310
  %2312 = urem i32 %2311, 2
  %2313 = icmp eq i32 %2312, 0
  %2314 = icmp slt i32 %2309, 10
  %2315 = or i1 %2313, %2314
  br i1 %2315, label %originalBB634, label %originalBB634alteredBB

originalBB634:                                    ; preds = %2307, %originalBB634alteredBB
  %2316 = load i32, i32* @x.37
  %2317 = load i32, i32* @y.38
  %2318 = sub i32 %2316, 1
  %2319 = mul i32 %2316, %2318
  %2320 = urem i32 %2319, 2
  %2321 = icmp eq i32 %2320, 0
  %2322 = icmp slt i32 %2317, 10
  %2323 = or i1 %2321, %2322
  br i1 %2323, label %originalBBpart2636, label %originalBB634alteredBB

originalBBpart2636:                               ; preds = %originalBB634
  br label %2324, !dbg !2609

2324:                                             ; preds = %originalBBpart2636, %originalBBpart2632, %originalBBpart2465
  %2325 = load i32, i32* @x.37
  %2326 = load i32, i32* @y.38
  %2327 = sub i32 %2325, 1
  %2328 = mul i32 %2325, %2327
  %2329 = urem i32 %2328, 2
  %2330 = icmp eq i32 %2329, 0
  %2331 = icmp slt i32 %2326, 10
  %2332 = or i1 %2330, %2331
  br i1 %2332, label %originalBB638, label %originalBB638alteredBB

originalBB638:                                    ; preds = %2324, %originalBB638alteredBB
  %2333 = load i32, i32* @x.37
  %2334 = load i32, i32* @y.38
  %2335 = sub i32 %2333, 1
  %2336 = mul i32 %2333, %2335
  %2337 = urem i32 %2336, 2
  %2338 = icmp eq i32 %2337, 0
  %2339 = icmp slt i32 %2334, 10
  %2340 = or i1 %2338, %2339
  br i1 %2340, label %originalBBpart2640, label %originalBB638alteredBB

originalBBpart2640:                               ; preds = %originalBB638
  br label %5161, !dbg !2610

2341:                                             ; preds = %originalBBpart2222
  %2342 = load i32, i32* @x.37
  %2343 = load i32, i32* @y.38
  %2344 = sub i32 %2342, 1
  %2345 = mul i32 %2342, %2344
  %2346 = urem i32 %2345, 2
  %2347 = icmp eq i32 %2346, 0
  %2348 = icmp slt i32 %2343, 10
  %2349 = or i1 %2347, %2348
  br i1 %2349, label %originalBB642, label %originalBB642alteredBB

originalBB642:                                    ; preds = %2341, %originalBB642alteredBB
  store i8 97, i8* %40, align 1, !dbg !2611
  %2350 = load i32, i32* @x.37
  %2351 = load i32, i32* @y.38
  %2352 = sub i32 %2350, 1
  %2353 = mul i32 %2350, %2352
  %2354 = urem i32 %2353, 2
  %2355 = icmp eq i32 %2354, 0
  %2356 = icmp slt i32 %2351, 10
  %2357 = or i1 %2355, %2356
  br i1 %2357, label %originalBBpart2644, label %originalBB642alteredBB

originalBBpart2644:                               ; preds = %originalBB642
  br label %2696, !dbg !2612

2358:                                             ; preds = %originalBBpart2222
  %2359 = load i32, i32* @x.37
  %2360 = load i32, i32* @y.38
  %2361 = sub i32 %2359, 1
  %2362 = mul i32 %2359, %2361
  %2363 = urem i32 %2362, 2
  %2364 = icmp eq i32 %2363, 0
  %2365 = icmp slt i32 %2360, 10
  %2366 = or i1 %2364, %2365
  br i1 %2366, label %originalBB646, label %originalBB646alteredBB

originalBB646:                                    ; preds = %2358, %originalBB646alteredBB
  store i8 98, i8* %40, align 1, !dbg !2613
  %2367 = load i32, i32* @x.37
  %2368 = load i32, i32* @y.38
  %2369 = sub i32 %2367, 1
  %2370 = mul i32 %2367, %2369
  %2371 = urem i32 %2370, 2
  %2372 = icmp eq i32 %2371, 0
  %2373 = icmp slt i32 %2368, 10
  %2374 = or i1 %2372, %2373
  br i1 %2374, label %originalBBpart2648, label %originalBB646alteredBB

originalBBpart2648:                               ; preds = %originalBB646
  br label %2696, !dbg !2614

2375:                                             ; preds = %originalBBpart2222
  %2376 = load i32, i32* @x.37
  %2377 = load i32, i32* @y.38
  %2378 = sub i32 %2376, 1
  %2379 = mul i32 %2376, %2378
  %2380 = urem i32 %2379, 2
  %2381 = icmp eq i32 %2380, 0
  %2382 = icmp slt i32 %2377, 10
  %2383 = or i1 %2381, %2382
  br i1 %2383, label %originalBB650, label %originalBB650alteredBB

originalBB650:                                    ; preds = %2375, %originalBB650alteredBB
  store i8 102, i8* %40, align 1, !dbg !2615
  %2384 = load i32, i32* @x.37
  %2385 = load i32, i32* @y.38
  %2386 = sub i32 %2384, 1
  %2387 = mul i32 %2384, %2386
  %2388 = urem i32 %2387, 2
  %2389 = icmp eq i32 %2388, 0
  %2390 = icmp slt i32 %2385, 10
  %2391 = or i1 %2389, %2390
  br i1 %2391, label %originalBBpart2652, label %originalBB650alteredBB

originalBBpart2652:                               ; preds = %originalBB650
  br label %2696, !dbg !2616

2392:                                             ; preds = %originalBBpart2222
  %2393 = load i32, i32* @x.37
  %2394 = load i32, i32* @y.38
  %2395 = sub i32 %2393, 1
  %2396 = mul i32 %2393, %2395
  %2397 = urem i32 %2396, 2
  %2398 = icmp eq i32 %2397, 0
  %2399 = icmp slt i32 %2394, 10
  %2400 = or i1 %2398, %2399
  br i1 %2400, label %originalBB654, label %originalBB654alteredBB

originalBB654:                                    ; preds = %2392, %originalBB654alteredBB
  store i8 110, i8* %40, align 1, !dbg !2617
  %2401 = load i32, i32* @x.37
  %2402 = load i32, i32* @y.38
  %2403 = sub i32 %2401, 1
  %2404 = mul i32 %2401, %2403
  %2405 = urem i32 %2404, 2
  %2406 = icmp eq i32 %2405, 0
  %2407 = icmp slt i32 %2402, 10
  %2408 = or i1 %2406, %2407
  br i1 %2408, label %originalBBpart2656, label %originalBB654alteredBB

originalBBpart2656:                               ; preds = %originalBB654
  br label %2624, !dbg !2618

2409:                                             ; preds = %originalBBpart2222
  %2410 = load i32, i32* @x.37
  %2411 = load i32, i32* @y.38
  %2412 = sub i32 %2410, 1
  %2413 = mul i32 %2410, %2412
  %2414 = urem i32 %2413, 2
  %2415 = icmp eq i32 %2414, 0
  %2416 = icmp slt i32 %2411, 10
  %2417 = or i1 %2415, %2416
  br i1 %2417, label %originalBB658, label %originalBB658alteredBB

originalBB658:                                    ; preds = %2409, %originalBB658alteredBB
  store i8 114, i8* %40, align 1, !dbg !2619
  %2418 = load i32, i32* @x.37
  %2419 = load i32, i32* @y.38
  %2420 = sub i32 %2418, 1
  %2421 = mul i32 %2418, %2420
  %2422 = urem i32 %2421, 2
  %2423 = icmp eq i32 %2422, 0
  %2424 = icmp slt i32 %2419, 10
  %2425 = or i1 %2423, %2424
  br i1 %2425, label %originalBBpart2660, label %originalBB658alteredBB

originalBBpart2660:                               ; preds = %originalBB658
  br label %2624, !dbg !2620

2426:                                             ; preds = %originalBBpart2222
  %2427 = load i32, i32* @x.37
  %2428 = load i32, i32* @y.38
  %2429 = sub i32 %2427, 1
  %2430 = mul i32 %2427, %2429
  %2431 = urem i32 %2430, 2
  %2432 = icmp eq i32 %2431, 0
  %2433 = icmp slt i32 %2428, 10
  %2434 = or i1 %2432, %2433
  br i1 %2434, label %originalBB662, label %originalBB662alteredBB

originalBB662:                                    ; preds = %2426, %originalBB662alteredBB
  store i8 116, i8* %40, align 1, !dbg !2621
  %2435 = load i32, i32* @x.37
  %2436 = load i32, i32* @y.38
  %2437 = sub i32 %2435, 1
  %2438 = mul i32 %2435, %2437
  %2439 = urem i32 %2438, 2
  %2440 = icmp eq i32 %2439, 0
  %2441 = icmp slt i32 %2436, 10
  %2442 = or i1 %2440, %2441
  br i1 %2442, label %originalBBpart2664, label %originalBB662alteredBB

originalBBpart2664:                               ; preds = %originalBB662
  br label %2624, !dbg !2622

2443:                                             ; preds = %originalBBpart2222
  %2444 = load i32, i32* @x.37
  %2445 = load i32, i32* @y.38
  %2446 = sub i32 %2444, 1
  %2447 = mul i32 %2444, %2446
  %2448 = urem i32 %2447, 2
  %2449 = icmp eq i32 %2448, 0
  %2450 = icmp slt i32 %2445, 10
  %2451 = or i1 %2449, %2450
  br i1 %2451, label %originalBB666, label %originalBB666alteredBB

originalBB666:                                    ; preds = %2443, %originalBB666alteredBB
  store i8 118, i8* %40, align 1, !dbg !2623
  %2452 = load i32, i32* @x.37
  %2453 = load i32, i32* @y.38
  %2454 = sub i32 %2452, 1
  %2455 = mul i32 %2452, %2454
  %2456 = urem i32 %2455, 2
  %2457 = icmp eq i32 %2456, 0
  %2458 = icmp slt i32 %2453, 10
  %2459 = or i1 %2457, %2458
  br i1 %2459, label %originalBBpart2668, label %originalBB666alteredBB

originalBBpart2668:                               ; preds = %originalBB666
  br label %2696, !dbg !2624

2460:                                             ; preds = %originalBBpart2222
  %2461 = load i32, i32* @x.37
  %2462 = load i32, i32* @y.38
  %2463 = sub i32 %2461, 1
  %2464 = mul i32 %2461, %2463
  %2465 = urem i32 %2464, 2
  %2466 = icmp eq i32 %2465, 0
  %2467 = icmp slt i32 %2462, 10
  %2468 = or i1 %2466, %2467
  br i1 %2468, label %originalBB670, label %originalBB670alteredBB

originalBB670:                                    ; preds = %2460, %originalBB670alteredBB
  %2469 = load i8, i8* %39, align 1, !dbg !2625
  store i8 %2469, i8* %40, align 1, !dbg !2626
  %2470 = load i32, i32* %23, align 4, !dbg !2627
  %2471 = icmp eq i32 %2470, 2, !dbg !2629
  %2472 = load i32, i32* @x.37
  %2473 = load i32, i32* @y.38
  %2474 = sub i32 %2472, 1
  %2475 = mul i32 %2472, %2474
  %2476 = urem i32 %2475, 2
  %2477 = icmp eq i32 %2476, 0
  %2478 = icmp slt i32 %2473, 10
  %2479 = or i1 %2477, %2478
  br i1 %2479, label %originalBBpart2672, label %originalBB670alteredBB

originalBBpart2672:                               ; preds = %originalBB670
  br i1 %2471, label %2480, label %2533, !dbg !2630

2480:                                             ; preds = %originalBBpart2672
  %2481 = load i32, i32* @x.37
  %2482 = load i32, i32* @y.38
  %2483 = sub i32 %2481, 1
  %2484 = mul i32 %2481, %2483
  %2485 = urem i32 %2484, 2
  %2486 = icmp eq i32 %2485, 0
  %2487 = icmp slt i32 %2482, 10
  %2488 = or i1 %2486, %2487
  br i1 %2488, label %originalBB674, label %originalBB674alteredBB

originalBB674:                                    ; preds = %2480, %originalBB674alteredBB
  %2489 = load i8, i8* %35, align 1, !dbg !2631
  %2490 = trunc i8 %2489 to i1, !dbg !2631
  %2491 = load i32, i32* @x.37
  %2492 = load i32, i32* @y.38
  %2493 = sub i32 %2491, 1
  %2494 = mul i32 %2491, %2493
  %2495 = urem i32 %2494, 2
  %2496 = icmp eq i32 %2495, 0
  %2497 = icmp slt i32 %2492, 10
  %2498 = or i1 %2496, %2497
  br i1 %2498, label %originalBBpart2676, label %originalBB674alteredBB

originalBBpart2676:                               ; preds = %originalBB674
  br i1 %2490, label %2499, label %2516, !dbg !2634

2499:                                             ; preds = %originalBBpart2676
  %2500 = load i32, i32* @x.37
  %2501 = load i32, i32* @y.38
  %2502 = sub i32 %2500, 1
  %2503 = mul i32 %2500, %2502
  %2504 = urem i32 %2503, 2
  %2505 = icmp eq i32 %2504, 0
  %2506 = icmp slt i32 %2501, 10
  %2507 = or i1 %2505, %2506
  br i1 %2507, label %originalBB678, label %originalBB678alteredBB

originalBB678:                                    ; preds = %2499, %originalBB678alteredBB
  %2508 = load i32, i32* @x.37
  %2509 = load i32, i32* @y.38
  %2510 = sub i32 %2508, 1
  %2511 = mul i32 %2508, %2510
  %2512 = urem i32 %2511, 2
  %2513 = icmp eq i32 %2512, 0
  %2514 = icmp slt i32 %2509, 10
  %2515 = or i1 %2513, %2514
  br i1 %2515, label %originalBBpart2680, label %originalBB678alteredBB

originalBBpart2680:                               ; preds = %originalBB678
  br label %6606, !dbg !2635

2516:                                             ; preds = %originalBBpart2676
  %2517 = load i32, i32* @x.37
  %2518 = load i32, i32* @y.38
  %2519 = sub i32 %2517, 1
  %2520 = mul i32 %2517, %2519
  %2521 = urem i32 %2520, 2
  %2522 = icmp eq i32 %2521, 0
  %2523 = icmp slt i32 %2518, 10
  %2524 = or i1 %2522, %2523
  br i1 %2524, label %originalBB682, label %originalBB682alteredBB

originalBB682:                                    ; preds = %2516, %originalBB682alteredBB
  %2525 = load i32, i32* @x.37
  %2526 = load i32, i32* @y.38
  %2527 = sub i32 %2525, 1
  %2528 = mul i32 %2525, %2527
  %2529 = urem i32 %2528, 2
  %2530 = icmp eq i32 %2529, 0
  %2531 = icmp slt i32 %2526, 10
  %2532 = or i1 %2530, %2531
  br i1 %2532, label %originalBBpart2684, label %originalBB682alteredBB

originalBBpart2684:                               ; preds = %originalBB682
  br label %5734, !dbg !2636

2533:                                             ; preds = %originalBBpart2672
  %2534 = load i32, i32* @x.37
  %2535 = load i32, i32* @y.38
  %2536 = sub i32 %2534, 1
  %2537 = mul i32 %2534, %2536
  %2538 = urem i32 %2537, 2
  %2539 = icmp eq i32 %2538, 0
  %2540 = icmp slt i32 %2535, 10
  %2541 = or i1 %2539, %2540
  br i1 %2541, label %originalBB686, label %originalBB686alteredBB

originalBB686:                                    ; preds = %2533, %originalBB686alteredBB
  %2542 = load i8, i8* %33, align 1, !dbg !2637
  %2543 = trunc i8 %2542 to i1, !dbg !2637
  %2544 = load i32, i32* @x.37
  %2545 = load i32, i32* @y.38
  %2546 = sub i32 %2544, 1
  %2547 = mul i32 %2544, %2546
  %2548 = urem i32 %2547, 2
  %2549 = icmp eq i32 %2548, 0
  %2550 = icmp slt i32 %2545, 10
  %2551 = or i1 %2549, %2550
  br i1 %2551, label %originalBBpart2688, label %originalBB686alteredBB

originalBBpart2688:                               ; preds = %originalBB686
  br i1 %2543, label %2552, label %2607, !dbg !2639

2552:                                             ; preds = %originalBBpart2688
  %2553 = load i32, i32* @x.37
  %2554 = load i32, i32* @y.38
  %2555 = sub i32 %2553, 1
  %2556 = mul i32 %2553, %2555
  %2557 = urem i32 %2556, 2
  %2558 = icmp eq i32 %2557, 0
  %2559 = icmp slt i32 %2554, 10
  %2560 = or i1 %2558, %2559
  br i1 %2560, label %originalBB690, label %originalBB690alteredBB

originalBB690:                                    ; preds = %2552, %originalBB690alteredBB
  %2561 = load i8, i8* %35, align 1, !dbg !2640
  %2562 = trunc i8 %2561 to i1, !dbg !2640
  %2563 = load i32, i32* @x.37
  %2564 = load i32, i32* @y.38
  %2565 = sub i32 %2563, 1
  %2566 = mul i32 %2563, %2565
  %2567 = urem i32 %2566, 2
  %2568 = icmp eq i32 %2567, 0
  %2569 = icmp slt i32 %2564, 10
  %2570 = or i1 %2568, %2569
  br i1 %2570, label %originalBBpart2692, label %originalBB690alteredBB

originalBBpart2692:                               ; preds = %originalBB690
  br i1 %2562, label %2571, label %2607, !dbg !2641

2571:                                             ; preds = %originalBBpart2692
  %2572 = load i32, i32* @x.37
  %2573 = load i32, i32* @y.38
  %2574 = sub i32 %2572, 1
  %2575 = mul i32 %2572, %2574
  %2576 = urem i32 %2575, 2
  %2577 = icmp eq i32 %2576, 0
  %2578 = icmp slt i32 %2573, 10
  %2579 = or i1 %2577, %2578
  br i1 %2579, label %originalBB694, label %originalBB694alteredBB

originalBB694:                                    ; preds = %2571, %originalBB694alteredBB
  %2580 = load i64, i64* %32, align 8, !dbg !2642
  %2581 = icmp ne i64 %2580, 0, !dbg !2642
  %2582 = load i32, i32* @x.37
  %2583 = load i32, i32* @y.38
  %2584 = sub i32 %2582, 1
  %2585 = mul i32 %2582, %2584
  %2586 = urem i32 %2585, 2
  %2587 = icmp eq i32 %2586, 0
  %2588 = icmp slt i32 %2583, 10
  %2589 = or i1 %2587, %2588
  br i1 %2589, label %originalBBpart2696, label %originalBB694alteredBB

originalBBpart2696:                               ; preds = %originalBB694
  br i1 %2581, label %2590, label %2607, !dbg !2643

2590:                                             ; preds = %originalBBpart2696
  %2591 = load i32, i32* @x.37
  %2592 = load i32, i32* @y.38
  %2593 = sub i32 %2591, 1
  %2594 = mul i32 %2591, %2593
  %2595 = urem i32 %2594, 2
  %2596 = icmp eq i32 %2595, 0
  %2597 = icmp slt i32 %2592, 10
  %2598 = or i1 %2596, %2597
  br i1 %2598, label %originalBB698, label %originalBB698alteredBB

originalBB698:                                    ; preds = %2590, %originalBB698alteredBB
  %2599 = load i32, i32* @x.37
  %2600 = load i32, i32* @y.38
  %2601 = sub i32 %2599, 1
  %2602 = mul i32 %2599, %2601
  %2603 = urem i32 %2602, 2
  %2604 = icmp eq i32 %2603, 0
  %2605 = icmp slt i32 %2600, 10
  %2606 = or i1 %2604, %2605
  br i1 %2606, label %originalBBpart2700, label %originalBB698alteredBB

originalBBpart2700:                               ; preds = %originalBB698
  br label %5734, !dbg !2644

2607:                                             ; preds = %originalBBpart2696, %originalBBpart2692, %originalBBpart2688
  %2608 = load i32, i32* @x.37
  %2609 = load i32, i32* @y.38
  %2610 = sub i32 %2608, 1
  %2611 = mul i32 %2608, %2610
  %2612 = urem i32 %2611, 2
  %2613 = icmp eq i32 %2612, 0
  %2614 = icmp slt i32 %2609, 10
  %2615 = or i1 %2613, %2614
  br i1 %2615, label %originalBB702, label %originalBB702alteredBB

originalBB702:                                    ; preds = %2607, %originalBB702alteredBB
  %2616 = load i32, i32* @x.37
  %2617 = load i32, i32* @y.38
  %2618 = sub i32 %2616, 1
  %2619 = mul i32 %2616, %2618
  %2620 = urem i32 %2619, 2
  %2621 = icmp eq i32 %2620, 0
  %2622 = icmp slt i32 %2617, 10
  %2623 = or i1 %2621, %2622
  br i1 %2623, label %originalBBpart2704, label %originalBB702alteredBB

originalBBpart2704:                               ; preds = %originalBB702
  br label %2624, !dbg !2642

2624:                                             ; preds = %originalBBpart2704, %originalBBpart2664, %originalBBpart2660, %originalBBpart2656
  call void @llvm.dbg.label(metadata !2645), !dbg !2646
  %2625 = load i32, i32* @x.37
  %2626 = load i32, i32* @y.38
  %2627 = sub i32 %2625, 1
  %2628 = mul i32 %2625, %2627
  %2629 = urem i32 %2628, 2
  %2630 = icmp eq i32 %2629, 0
  %2631 = icmp slt i32 %2626, 10
  %2632 = or i1 %2630, %2631
  br i1 %2632, label %originalBB706, label %originalBB706alteredBB

originalBB706:                                    ; preds = %2624, %originalBB706alteredBB
  %2633 = load i32, i32* %23, align 4, !dbg !2647
  %2634 = icmp eq i32 %2633, 2, !dbg !2649
  %2635 = load i32, i32* @x.37
  %2636 = load i32, i32* @y.38
  %2637 = sub i32 %2635, 1
  %2638 = mul i32 %2635, %2637
  %2639 = urem i32 %2638, 2
  %2640 = icmp eq i32 %2639, 0
  %2641 = icmp slt i32 %2636, 10
  %2642 = or i1 %2640, %2641
  br i1 %2642, label %originalBBpart2708, label %originalBB706alteredBB

originalBBpart2708:                               ; preds = %originalBB706
  br i1 %2634, label %2643, label %2679, !dbg !2650

2643:                                             ; preds = %originalBBpart2708
  %2644 = load i32, i32* @x.37
  %2645 = load i32, i32* @y.38
  %2646 = sub i32 %2644, 1
  %2647 = mul i32 %2644, %2646
  %2648 = urem i32 %2647, 2
  %2649 = icmp eq i32 %2648, 0
  %2650 = icmp slt i32 %2645, 10
  %2651 = or i1 %2649, %2650
  br i1 %2651, label %originalBB710, label %originalBB710alteredBB

originalBB710:                                    ; preds = %2643, %originalBB710alteredBB
  %2652 = load i8, i8* %35, align 1, !dbg !2651
  %2653 = trunc i8 %2652 to i1, !dbg !2651
  %2654 = load i32, i32* @x.37
  %2655 = load i32, i32* @y.38
  %2656 = sub i32 %2654, 1
  %2657 = mul i32 %2654, %2656
  %2658 = urem i32 %2657, 2
  %2659 = icmp eq i32 %2658, 0
  %2660 = icmp slt i32 %2655, 10
  %2661 = or i1 %2659, %2660
  br i1 %2661, label %originalBBpart2712, label %originalBB710alteredBB

originalBBpart2712:                               ; preds = %originalBB710
  br i1 %2653, label %2662, label %2679, !dbg !2652

2662:                                             ; preds = %originalBBpart2712
  %2663 = load i32, i32* @x.37
  %2664 = load i32, i32* @y.38
  %2665 = sub i32 %2663, 1
  %2666 = mul i32 %2663, %2665
  %2667 = urem i32 %2666, 2
  %2668 = icmp eq i32 %2667, 0
  %2669 = icmp slt i32 %2664, 10
  %2670 = or i1 %2668, %2669
  br i1 %2670, label %originalBB714, label %originalBB714alteredBB

originalBB714:                                    ; preds = %2662, %originalBB714alteredBB
  %2671 = load i32, i32* @x.37
  %2672 = load i32, i32* @y.38
  %2673 = sub i32 %2671, 1
  %2674 = mul i32 %2671, %2673
  %2675 = urem i32 %2674, 2
  %2676 = icmp eq i32 %2675, 0
  %2677 = icmp slt i32 %2672, 10
  %2678 = or i1 %2676, %2677
  br i1 %2678, label %originalBBpart2716, label %originalBB714alteredBB

originalBBpart2716:                               ; preds = %originalBB714
  br label %6606, !dbg !2653

2679:                                             ; preds = %originalBBpart2712, %originalBBpart2708
  %2680 = load i32, i32* @x.37
  %2681 = load i32, i32* @y.38
  %2682 = sub i32 %2680, 1
  %2683 = mul i32 %2680, %2682
  %2684 = urem i32 %2683, 2
  %2685 = icmp eq i32 %2684, 0
  %2686 = icmp slt i32 %2681, 10
  %2687 = or i1 %2685, %2686
  br i1 %2687, label %originalBB718, label %originalBB718alteredBB

originalBB718:                                    ; preds = %2679, %originalBB718alteredBB
  %2688 = load i32, i32* @x.37
  %2689 = load i32, i32* @y.38
  %2690 = sub i32 %2688, 1
  %2691 = mul i32 %2688, %2690
  %2692 = urem i32 %2691, 2
  %2693 = icmp eq i32 %2692, 0
  %2694 = icmp slt i32 %2689, 10
  %2695 = or i1 %2693, %2694
  br i1 %2695, label %originalBBpart2720, label %originalBB718alteredBB

originalBBpart2720:                               ; preds = %originalBB718
  br label %2696, !dbg !2651

2696:                                             ; preds = %originalBBpart2720, %originalBBpart2668, %originalBBpart2652, %originalBBpart2648, %originalBBpart2644
  call void @llvm.dbg.label(metadata !2654), !dbg !2655
  %2697 = load i32, i32* @x.37
  %2698 = load i32, i32* @y.38
  %2699 = sub i32 %2697, 1
  %2700 = mul i32 %2697, %2699
  %2701 = urem i32 %2700, 2
  %2702 = icmp eq i32 %2701, 0
  %2703 = icmp slt i32 %2698, 10
  %2704 = or i1 %2702, %2703
  br i1 %2704, label %originalBB722, label %originalBB722alteredBB

originalBB722:                                    ; preds = %2696, %originalBB722alteredBB
  %2705 = load i8, i8* %33, align 1, !dbg !2656
  %2706 = trunc i8 %2705 to i1, !dbg !2656
  %2707 = load i32, i32* @x.37
  %2708 = load i32, i32* @y.38
  %2709 = sub i32 %2707, 1
  %2710 = mul i32 %2707, %2709
  %2711 = urem i32 %2710, 2
  %2712 = icmp eq i32 %2711, 0
  %2713 = icmp slt i32 %2708, 10
  %2714 = or i1 %2712, %2713
  br i1 %2714, label %originalBBpart2724, label %originalBB722alteredBB

originalBBpart2724:                               ; preds = %originalBB722
  br i1 %2706, label %2715, label %2733, !dbg !2658

2715:                                             ; preds = %originalBBpart2724
  %2716 = load i32, i32* @x.37
  %2717 = load i32, i32* @y.38
  %2718 = sub i32 %2716, 1
  %2719 = mul i32 %2716, %2718
  %2720 = urem i32 %2719, 2
  %2721 = icmp eq i32 %2720, 0
  %2722 = icmp slt i32 %2717, 10
  %2723 = or i1 %2721, %2722
  br i1 %2723, label %originalBB726, label %originalBB726alteredBB

originalBB726:                                    ; preds = %2715, %originalBB726alteredBB
  %2724 = load i8, i8* %40, align 1, !dbg !2659
  store i8 %2724, i8* %39, align 1, !dbg !2661
  %2725 = load i32, i32* @x.37
  %2726 = load i32, i32* @y.38
  %2727 = sub i32 %2725, 1
  %2728 = mul i32 %2725, %2727
  %2729 = urem i32 %2728, 2
  %2730 = icmp eq i32 %2729, 0
  %2731 = icmp slt i32 %2726, 10
  %2732 = or i1 %2730, %2731
  br i1 %2732, label %originalBBpart2728, label %originalBB726alteredBB

originalBBpart2728:                               ; preds = %originalBB726
  br label %5320, !dbg !2662

2733:                                             ; preds = %originalBBpart2724
  %2734 = load i32, i32* @x.37
  %2735 = load i32, i32* @y.38
  %2736 = sub i32 %2734, 1
  %2737 = mul i32 %2734, %2736
  %2738 = urem i32 %2737, 2
  %2739 = icmp eq i32 %2738, 0
  %2740 = icmp slt i32 %2735, 10
  %2741 = or i1 %2739, %2740
  br i1 %2741, label %originalBB730, label %originalBB730alteredBB

originalBB730:                                    ; preds = %2733, %originalBB730alteredBB
  %2742 = load i32, i32* @x.37
  %2743 = load i32, i32* @y.38
  %2744 = sub i32 %2742, 1
  %2745 = mul i32 %2742, %2744
  %2746 = urem i32 %2745, 2
  %2747 = icmp eq i32 %2746, 0
  %2748 = icmp slt i32 %2743, 10
  %2749 = or i1 %2747, %2748
  br i1 %2749, label %originalBBpart2732, label %originalBB730alteredBB

originalBBpart2732:                               ; preds = %originalBB730
  br label %5161, !dbg !2663

2750:                                             ; preds = %originalBBpart2222, %originalBBpart2222
  %2751 = load i32, i32* @x.37
  %2752 = load i32, i32* @y.38
  %2753 = sub i32 %2751, 1
  %2754 = mul i32 %2751, %2753
  %2755 = urem i32 %2754, 2
  %2756 = icmp eq i32 %2755, 0
  %2757 = icmp slt i32 %2752, 10
  %2758 = or i1 %2756, %2757
  br i1 %2758, label %originalBB734, label %originalBB734alteredBB

originalBB734:                                    ; preds = %2750, %originalBB734alteredBB
  %2759 = load i64, i64* %22, align 8, !dbg !2664
  %2760 = icmp eq i64 %2759, -1, !dbg !2666
  %2761 = load i32, i32* @x.37
  %2762 = load i32, i32* @y.38
  %2763 = sub i32 %2761, 1
  %2764 = mul i32 %2761, %2763
  %2765 = urem i32 %2764, 2
  %2766 = icmp eq i32 %2765, 0
  %2767 = icmp slt i32 %2762, 10
  %2768 = or i1 %2766, %2767
  br i1 %2768, label %originalBBpart2736, label %originalBB734alteredBB

originalBBpart2736:                               ; preds = %originalBB734
  br i1 %2760, label %2769, label %2791, !dbg !2667

2769:                                             ; preds = %originalBBpart2736
  %2770 = load i32, i32* @x.37
  %2771 = load i32, i32* @y.38
  %2772 = sub i32 %2770, 1
  %2773 = mul i32 %2770, %2772
  %2774 = urem i32 %2773, 2
  %2775 = icmp eq i32 %2774, 0
  %2776 = icmp slt i32 %2771, 10
  %2777 = or i1 %2775, %2776
  br i1 %2777, label %originalBB738, label %originalBB738alteredBB

originalBB738:                                    ; preds = %2769, %originalBB738alteredBB
  %2778 = load i8*, i8** %21, align 8, !dbg !2668
  %2779 = getelementptr inbounds i8, i8* %2778, i64 1, !dbg !2668
  %2780 = load i8, i8* %2779, align 1, !dbg !2668
  %2781 = sext i8 %2780 to i32, !dbg !2668
  %2782 = icmp eq i32 %2781, 0, !dbg !2669
  %2783 = load i32, i32* @x.37
  %2784 = load i32, i32* @y.38
  %2785 = sub i32 %2783, 1
  %2786 = mul i32 %2783, %2785
  %2787 = urem i32 %2786, 2
  %2788 = icmp eq i32 %2787, 0
  %2789 = icmp slt i32 %2784, 10
  %2790 = or i1 %2788, %2789
  br i1 %2790, label %originalBBpart2740, label %originalBB738alteredBB

originalBBpart2740:                               ; preds = %originalBB738
  br i1 %2782, label %2827, label %2810, !dbg !2664

2791:                                             ; preds = %originalBBpart2736
  %2792 = load i32, i32* @x.37
  %2793 = load i32, i32* @y.38
  %2794 = sub i32 %2792, 1
  %2795 = mul i32 %2792, %2794
  %2796 = urem i32 %2795, 2
  %2797 = icmp eq i32 %2796, 0
  %2798 = icmp slt i32 %2793, 10
  %2799 = or i1 %2797, %2798
  br i1 %2799, label %originalBB742, label %originalBB742alteredBB

originalBB742:                                    ; preds = %2791, %originalBB742alteredBB
  %2800 = load i64, i64* %22, align 8, !dbg !2670
  %2801 = icmp eq i64 %2800, 1, !dbg !2671
  %2802 = load i32, i32* @x.37
  %2803 = load i32, i32* @y.38
  %2804 = sub i32 %2802, 1
  %2805 = mul i32 %2802, %2804
  %2806 = urem i32 %2805, 2
  %2807 = icmp eq i32 %2806, 0
  %2808 = icmp slt i32 %2803, 10
  %2809 = or i1 %2807, %2808
  br i1 %2809, label %originalBBpart2744, label %originalBB742alteredBB

originalBBpart2744:                               ; preds = %originalBB742
  br i1 %2801, label %2827, label %2810, !dbg !2667

2810:                                             ; preds = %originalBBpart2744, %originalBBpart2740
  %2811 = load i32, i32* @x.37
  %2812 = load i32, i32* @y.38
  %2813 = sub i32 %2811, 1
  %2814 = mul i32 %2811, %2813
  %2815 = urem i32 %2814, 2
  %2816 = icmp eq i32 %2815, 0
  %2817 = icmp slt i32 %2812, 10
  %2818 = or i1 %2816, %2817
  br i1 %2818, label %originalBB746, label %originalBB746alteredBB

originalBB746:                                    ; preds = %2810, %originalBB746alteredBB
  %2819 = load i32, i32* @x.37
  %2820 = load i32, i32* @y.38
  %2821 = sub i32 %2819, 1
  %2822 = mul i32 %2819, %2821
  %2823 = urem i32 %2822, 2
  %2824 = icmp eq i32 %2823, 0
  %2825 = icmp slt i32 %2820, 10
  %2826 = or i1 %2824, %2825
  br i1 %2826, label %originalBBpart2748, label %originalBB746alteredBB

originalBBpart2748:                               ; preds = %originalBB746
  br label %5161, !dbg !2672

2827:                                             ; preds = %originalBBpart2744, %originalBBpart2740
  %2828 = load i32, i32* @x.37
  %2829 = load i32, i32* @y.38
  %2830 = sub i32 %2828, 1
  %2831 = mul i32 %2828, %2830
  %2832 = urem i32 %2831, 2
  %2833 = icmp eq i32 %2832, 0
  %2834 = icmp slt i32 %2829, 10
  %2835 = or i1 %2833, %2834
  br i1 %2835, label %originalBB750, label %originalBB750alteredBB

originalBB750:                                    ; preds = %2827, %originalBB750alteredBB
  %2836 = load i32, i32* @x.37
  %2837 = load i32, i32* @y.38
  %2838 = sub i32 %2836, 1
  %2839 = mul i32 %2836, %2838
  %2840 = urem i32 %2839, 2
  %2841 = icmp eq i32 %2840, 0
  %2842 = icmp slt i32 %2837, 10
  %2843 = or i1 %2841, %2842
  br i1 %2843, label %originalBBpart2752, label %originalBB750alteredBB

originalBBpart2752:                               ; preds = %originalBB750
  br label %2844, !dbg !2673

2844:                                             ; preds = %originalBBpart2752, %originalBBpart2222, %originalBBpart2222
  %2845 = load i64, i64* %28, align 8, !dbg !2674
  %2846 = icmp ne i64 %2845, 0, !dbg !2676
  br i1 %2846, label %2847, label %2864, !dbg !2677

2847:                                             ; preds = %2844
  %2848 = load i32, i32* @x.37
  %2849 = load i32, i32* @y.38
  %2850 = sub i32 %2848, 1
  %2851 = mul i32 %2848, %2850
  %2852 = urem i32 %2851, 2
  %2853 = icmp eq i32 %2852, 0
  %2854 = icmp slt i32 %2849, 10
  %2855 = or i1 %2853, %2854
  br i1 %2855, label %originalBB754, label %originalBB754alteredBB

originalBB754:                                    ; preds = %2847, %originalBB754alteredBB
  %2856 = load i32, i32* @x.37
  %2857 = load i32, i32* @y.38
  %2858 = sub i32 %2856, 1
  %2859 = mul i32 %2856, %2858
  %2860 = urem i32 %2859, 2
  %2861 = icmp eq i32 %2860, 0
  %2862 = icmp slt i32 %2857, 10
  %2863 = or i1 %2861, %2862
  br i1 %2863, label %originalBBpart2756, label %originalBB754alteredBB

originalBBpart2756:                               ; preds = %originalBB754
  br label %5161, !dbg !2678

2864:                                             ; preds = %2844
  %2865 = load i32, i32* @x.37
  %2866 = load i32, i32* @y.38
  %2867 = sub i32 %2865, 1
  %2868 = mul i32 %2865, %2867
  %2869 = urem i32 %2868, 2
  %2870 = icmp eq i32 %2869, 0
  %2871 = icmp slt i32 %2866, 10
  %2872 = or i1 %2870, %2871
  br i1 %2872, label %originalBB758, label %originalBB758alteredBB

originalBB758:                                    ; preds = %2864, %originalBB758alteredBB
  %2873 = load i32, i32* @x.37
  %2874 = load i32, i32* @y.38
  %2875 = sub i32 %2873, 1
  %2876 = mul i32 %2873, %2875
  %2877 = urem i32 %2876, 2
  %2878 = icmp eq i32 %2877, 0
  %2879 = icmp slt i32 %2874, 10
  %2880 = or i1 %2878, %2879
  br i1 %2880, label %originalBBpart2760, label %originalBB758alteredBB

originalBBpart2760:                               ; preds = %originalBB758
  br label %2881, !dbg !2679

2881:                                             ; preds = %originalBBpart2760, %originalBBpart2222
  %2882 = load i32, i32* @x.37
  %2883 = load i32, i32* @y.38
  %2884 = sub i32 %2882, 1
  %2885 = mul i32 %2882, %2884
  %2886 = urem i32 %2885, 2
  %2887 = icmp eq i32 %2886, 0
  %2888 = icmp slt i32 %2883, 10
  %2889 = or i1 %2887, %2888
  br i1 %2889, label %originalBB762, label %originalBB762alteredBB

originalBB762:                                    ; preds = %2881, %originalBB762alteredBB
  store i8 1, i8* %43, align 1, !dbg !2680
  %2890 = load i32, i32* @x.37
  %2891 = load i32, i32* @y.38
  %2892 = sub i32 %2890, 1
  %2893 = mul i32 %2890, %2892
  %2894 = urem i32 %2893, 2
  %2895 = icmp eq i32 %2894, 0
  %2896 = icmp slt i32 %2891, 10
  %2897 = or i1 %2895, %2896
  br i1 %2897, label %originalBBpart2764, label %originalBB762alteredBB

originalBBpart2764:                               ; preds = %originalBB762
  br label %2898, !dbg !2681

2898:                                             ; preds = %originalBBpart2764, %originalBBpart2222, %originalBBpart2222, %originalBBpart2222, %originalBBpart2222, %originalBBpart2222, %originalBBpart2222, %originalBBpart2222, %originalBBpart2222, %originalBBpart2222, %originalBBpart2222, %originalBBpart2222, %originalBBpart2222, %originalBBpart2222, %originalBBpart2222, %originalBBpart2222
  %2899 = load i32, i32* @x.37
  %2900 = load i32, i32* @y.38
  %2901 = sub i32 %2899, 1
  %2902 = mul i32 %2899, %2901
  %2903 = urem i32 %2902, 2
  %2904 = icmp eq i32 %2903, 0
  %2905 = icmp slt i32 %2900, 10
  %2906 = or i1 %2904, %2905
  br i1 %2906, label %originalBB766, label %originalBB766alteredBB

originalBB766:                                    ; preds = %2898, %originalBB766alteredBB
  %2907 = load i32, i32* %23, align 4, !dbg !2682
  %2908 = icmp eq i32 %2907, 2, !dbg !2684
  %2909 = load i32, i32* @x.37
  %2910 = load i32, i32* @y.38
  %2911 = sub i32 %2909, 1
  %2912 = mul i32 %2909, %2911
  %2913 = urem i32 %2912, 2
  %2914 = icmp eq i32 %2913, 0
  %2915 = icmp slt i32 %2910, 10
  %2916 = or i1 %2914, %2915
  br i1 %2916, label %originalBBpart2768, label %originalBB766alteredBB

originalBBpart2768:                               ; preds = %originalBB766
  br i1 %2908, label %2917, label %2953, !dbg !2685

2917:                                             ; preds = %originalBBpart2768
  %2918 = load i32, i32* @x.37
  %2919 = load i32, i32* @y.38
  %2920 = sub i32 %2918, 1
  %2921 = mul i32 %2918, %2920
  %2922 = urem i32 %2921, 2
  %2923 = icmp eq i32 %2922, 0
  %2924 = icmp slt i32 %2919, 10
  %2925 = or i1 %2923, %2924
  br i1 %2925, label %originalBB770, label %originalBB770alteredBB

originalBB770:                                    ; preds = %2917, %originalBB770alteredBB
  %2926 = load i8, i8* %35, align 1, !dbg !2686
  %2927 = trunc i8 %2926 to i1, !dbg !2686
  %2928 = load i32, i32* @x.37
  %2929 = load i32, i32* @y.38
  %2930 = sub i32 %2928, 1
  %2931 = mul i32 %2928, %2930
  %2932 = urem i32 %2931, 2
  %2933 = icmp eq i32 %2932, 0
  %2934 = icmp slt i32 %2929, 10
  %2935 = or i1 %2933, %2934
  br i1 %2935, label %originalBBpart2772, label %originalBB770alteredBB

originalBBpart2772:                               ; preds = %originalBB770
  br i1 %2927, label %2936, label %2953, !dbg !2687

2936:                                             ; preds = %originalBBpart2772
  %2937 = load i32, i32* @x.37
  %2938 = load i32, i32* @y.38
  %2939 = sub i32 %2937, 1
  %2940 = mul i32 %2937, %2939
  %2941 = urem i32 %2940, 2
  %2942 = icmp eq i32 %2941, 0
  %2943 = icmp slt i32 %2938, 10
  %2944 = or i1 %2942, %2943
  br i1 %2944, label %originalBB774, label %originalBB774alteredBB

originalBB774:                                    ; preds = %2936, %originalBB774alteredBB
  %2945 = load i32, i32* @x.37
  %2946 = load i32, i32* @y.38
  %2947 = sub i32 %2945, 1
  %2948 = mul i32 %2945, %2947
  %2949 = urem i32 %2948, 2
  %2950 = icmp eq i32 %2949, 0
  %2951 = icmp slt i32 %2946, 10
  %2952 = or i1 %2950, %2951
  br i1 %2952, label %originalBBpart2776, label %originalBB774alteredBB

originalBBpart2776:                               ; preds = %originalBB774
  br label %6606, !dbg !2688

2953:                                             ; preds = %originalBBpart2772, %originalBBpart2768
  %2954 = load i32, i32* @x.37
  %2955 = load i32, i32* @y.38
  %2956 = sub i32 %2954, 1
  %2957 = mul i32 %2954, %2956
  %2958 = urem i32 %2957, 2
  %2959 = icmp eq i32 %2958, 0
  %2960 = icmp slt i32 %2955, 10
  %2961 = or i1 %2959, %2960
  br i1 %2961, label %originalBB778, label %originalBB778alteredBB

originalBB778:                                    ; preds = %2953, %originalBB778alteredBB
  %2962 = load i32, i32* @x.37
  %2963 = load i32, i32* @y.38
  %2964 = sub i32 %2962, 1
  %2965 = mul i32 %2962, %2964
  %2966 = urem i32 %2965, 2
  %2967 = icmp eq i32 %2966, 0
  %2968 = icmp slt i32 %2963, 10
  %2969 = or i1 %2967, %2968
  br i1 %2969, label %originalBBpart2780, label %originalBB778alteredBB

originalBBpart2780:                               ; preds = %originalBB778
  br label %5161, !dbg !2689

2970:                                             ; preds = %originalBBpart2222
  %2971 = load i32, i32* @x.37
  %2972 = load i32, i32* @y.38
  %2973 = sub i32 %2971, 1
  %2974 = mul i32 %2971, %2973
  %2975 = urem i32 %2974, 2
  %2976 = icmp eq i32 %2975, 0
  %2977 = icmp slt i32 %2972, 10
  %2978 = or i1 %2976, %2977
  br i1 %2978, label %originalBB782, label %originalBB782alteredBB

originalBB782:                                    ; preds = %2970, %originalBB782alteredBB
  store i8 1, i8* %37, align 1, !dbg !2690
  store i8 1, i8* %43, align 1, !dbg !2691
  %2979 = load i32, i32* %23, align 4, !dbg !2692
  %2980 = icmp eq i32 %2979, 2, !dbg !2694
  %2981 = load i32, i32* @x.37
  %2982 = load i32, i32* @y.38
  %2983 = sub i32 %2981, 1
  %2984 = mul i32 %2981, %2983
  %2985 = urem i32 %2984, 2
  %2986 = icmp eq i32 %2985, 0
  %2987 = icmp slt i32 %2982, 10
  %2988 = or i1 %2986, %2987
  br i1 %2988, label %originalBBpart2784, label %originalBB782alteredBB

originalBBpart2784:                               ; preds = %originalBB782
  br i1 %2980, label %2989, label %3310, !dbg !2695

2989:                                             ; preds = %originalBBpart2784
  %2990 = load i32, i32* @x.37
  %2991 = load i32, i32* @y.38
  %2992 = sub i32 %2990, 1
  %2993 = mul i32 %2990, %2992
  %2994 = urem i32 %2993, 2
  %2995 = icmp eq i32 %2994, 0
  %2996 = icmp slt i32 %2991, 10
  %2997 = or i1 %2995, %2996
  br i1 %2997, label %originalBB786, label %originalBB786alteredBB

originalBB786:                                    ; preds = %2989, %originalBB786alteredBB
  %2998 = load i8, i8* %35, align 1, !dbg !2696
  %2999 = trunc i8 %2998 to i1, !dbg !2696
  %3000 = load i32, i32* @x.37
  %3001 = load i32, i32* @y.38
  %3002 = sub i32 %3000, 1
  %3003 = mul i32 %3000, %3002
  %3004 = urem i32 %3003, 2
  %3005 = icmp eq i32 %3004, 0
  %3006 = icmp slt i32 %3001, 10
  %3007 = or i1 %3005, %3006
  br i1 %3007, label %originalBBpart2788, label %originalBB786alteredBB

originalBBpart2788:                               ; preds = %originalBB786
  br i1 %2999, label %3008, label %3025, !dbg !2699

3008:                                             ; preds = %originalBBpart2788
  %3009 = load i32, i32* @x.37
  %3010 = load i32, i32* @y.38
  %3011 = sub i32 %3009, 1
  %3012 = mul i32 %3009, %3011
  %3013 = urem i32 %3012, 2
  %3014 = icmp eq i32 %3013, 0
  %3015 = icmp slt i32 %3010, 10
  %3016 = or i1 %3014, %3015
  br i1 %3016, label %originalBB790, label %originalBB790alteredBB

originalBB790:                                    ; preds = %3008, %originalBB790alteredBB
  %3017 = load i32, i32* @x.37
  %3018 = load i32, i32* @y.38
  %3019 = sub i32 %3017, 1
  %3020 = mul i32 %3017, %3019
  %3021 = urem i32 %3020, 2
  %3022 = icmp eq i32 %3021, 0
  %3023 = icmp slt i32 %3018, 10
  %3024 = or i1 %3022, %3023
  br i1 %3024, label %originalBBpart2792, label %originalBB790alteredBB

originalBBpart2792:                               ; preds = %originalBB790
  br label %6606, !dbg !2700

3025:                                             ; preds = %originalBBpart2788
  %3026 = load i32, i32* @x.37
  %3027 = load i32, i32* @y.38
  %3028 = sub i32 %3026, 1
  %3029 = mul i32 %3026, %3028
  %3030 = urem i32 %3029, 2
  %3031 = icmp eq i32 %3030, 0
  %3032 = icmp slt i32 %3027, 10
  %3033 = or i1 %3031, %3032
  br i1 %3033, label %originalBB794, label %originalBB794alteredBB

originalBB794:                                    ; preds = %3025, %originalBB794alteredBB
  %3034 = load i64, i64* %20, align 8, !dbg !2701
  %3035 = icmp ne i64 %3034, 0, !dbg !2701
  %3036 = load i32, i32* @x.37
  %3037 = load i32, i32* @y.38
  %3038 = sub i32 %3036, 1
  %3039 = mul i32 %3036, %3038
  %3040 = urem i32 %3039, 2
  %3041 = icmp eq i32 %3040, 0
  %3042 = icmp slt i32 %3037, 10
  %3043 = or i1 %3041, %3042
  br i1 %3043, label %originalBBpart2796, label %originalBB794alteredBB

originalBBpart2796:                               ; preds = %originalBB794
  br i1 %3035, label %3044, label %3081, !dbg !2703

3044:                                             ; preds = %originalBBpart2796
  %3045 = load i32, i32* @x.37
  %3046 = load i32, i32* @y.38
  %3047 = sub i32 %3045, 1
  %3048 = mul i32 %3045, %3047
  %3049 = urem i32 %3048, 2
  %3050 = icmp eq i32 %3049, 0
  %3051 = icmp slt i32 %3046, 10
  %3052 = or i1 %3050, %3051
  br i1 %3052, label %originalBB798, label %originalBB798alteredBB

originalBB798:                                    ; preds = %3044, %originalBB798alteredBB
  %3053 = load i64, i64* %30, align 8, !dbg !2704
  %3054 = icmp ne i64 %3053, 0, !dbg !2704
  %3055 = load i32, i32* @x.37
  %3056 = load i32, i32* @y.38
  %3057 = sub i32 %3055, 1
  %3058 = mul i32 %3055, %3057
  %3059 = urem i32 %3058, 2
  %3060 = icmp eq i32 %3059, 0
  %3061 = icmp slt i32 %3056, 10
  %3062 = or i1 %3060, %3061
  br i1 %3062, label %originalBBpart2800, label %originalBB798alteredBB

originalBBpart2800:                               ; preds = %originalBB798
  br i1 %3054, label %3081, label %3063, !dbg !2705

3063:                                             ; preds = %originalBBpart2800
  %3064 = load i32, i32* @x.37
  %3065 = load i32, i32* @y.38
  %3066 = sub i32 %3064, 1
  %3067 = mul i32 %3064, %3066
  %3068 = urem i32 %3067, 2
  %3069 = icmp eq i32 %3068, 0
  %3070 = icmp slt i32 %3065, 10
  %3071 = or i1 %3069, %3070
  br i1 %3071, label %originalBB802, label %originalBB802alteredBB

originalBB802:                                    ; preds = %3063, %originalBB802alteredBB
  %3072 = load i64, i64* %20, align 8, !dbg !2706
  store i64 %3072, i64* %30, align 8, !dbg !2708
  store i64 0, i64* %20, align 8, !dbg !2709
  %3073 = load i32, i32* @x.37
  %3074 = load i32, i32* @y.38
  %3075 = sub i32 %3073, 1
  %3076 = mul i32 %3073, %3075
  %3077 = urem i32 %3076, 2
  %3078 = icmp eq i32 %3077, 0
  %3079 = icmp slt i32 %3074, 10
  %3080 = or i1 %3078, %3079
  br i1 %3080, label %originalBBpart2804, label %originalBB802alteredBB

originalBBpart2804:                               ; preds = %originalBB802
  br label %3081, !dbg !2710

3081:                                             ; preds = %originalBBpart2804, %originalBBpart2800, %originalBBpart2796
  %3082 = load i32, i32* @x.37
  %3083 = load i32, i32* @y.38
  %3084 = sub i32 %3082, 1
  %3085 = mul i32 %3082, %3084
  %3086 = urem i32 %3085, 2
  %3087 = icmp eq i32 %3086, 0
  %3088 = icmp slt i32 %3083, 10
  %3089 = or i1 %3087, %3088
  br i1 %3089, label %originalBB806, label %originalBB806alteredBB

originalBB806:                                    ; preds = %3081, %originalBB806alteredBB
  %3090 = load i32, i32* @x.37
  %3091 = load i32, i32* @y.38
  %3092 = sub i32 %3090, 1
  %3093 = mul i32 %3090, %3092
  %3094 = urem i32 %3093, 2
  %3095 = icmp eq i32 %3094, 0
  %3096 = icmp slt i32 %3091, 10
  %3097 = or i1 %3095, %3096
  br i1 %3097, label %originalBBpart2808, label %originalBB806alteredBB

originalBBpart2808:                               ; preds = %originalBB806
  br label %3098, !dbg !2711

3098:                                             ; preds = %originalBBpart2808
  %3099 = load i32, i32* @x.37
  %3100 = load i32, i32* @y.38
  %3101 = sub i32 %3099, 1
  %3102 = mul i32 %3099, %3101
  %3103 = urem i32 %3102, 2
  %3104 = icmp eq i32 %3103, 0
  %3105 = icmp slt i32 %3100, 10
  %3106 = or i1 %3104, %3105
  br i1 %3106, label %originalBB810, label %originalBB810alteredBB

originalBB810:                                    ; preds = %3098, %originalBB810alteredBB
  %3107 = load i64, i64* %29, align 8, !dbg !2712
  %3108 = load i64, i64* %20, align 8, !dbg !2712
  %3109 = icmp ult i64 %3107, %3108, !dbg !2712
  %3110 = load i32, i32* @x.37
  %3111 = load i32, i32* @y.38
  %3112 = sub i32 %3110, 1
  %3113 = mul i32 %3110, %3112
  %3114 = urem i32 %3113, 2
  %3115 = icmp eq i32 %3114, 0
  %3116 = icmp slt i32 %3111, 10
  %3117 = or i1 %3115, %3116
  br i1 %3117, label %originalBBpart2812, label %originalBB810alteredBB

originalBBpart2812:                               ; preds = %originalBB810
  br i1 %3109, label %3118, label %3138, !dbg !2715

3118:                                             ; preds = %originalBBpart2812
  %3119 = load i32, i32* @x.37
  %3120 = load i32, i32* @y.38
  %3121 = sub i32 %3119, 1
  %3122 = mul i32 %3119, %3121
  %3123 = urem i32 %3122, 2
  %3124 = icmp eq i32 %3123, 0
  %3125 = icmp slt i32 %3120, 10
  %3126 = or i1 %3124, %3125
  br i1 %3126, label %originalBB814, label %originalBB814alteredBB

originalBB814:                                    ; preds = %3118, %originalBB814alteredBB
  %3127 = load i8*, i8** %19, align 8, !dbg !2712
  %3128 = load i64, i64* %29, align 8, !dbg !2712
  %3129 = getelementptr inbounds i8, i8* %3127, i64 %3128, !dbg !2712
  store i8 39, i8* %3129, align 1, !dbg !2712
  %3130 = load i32, i32* @x.37
  %3131 = load i32, i32* @y.38
  %3132 = sub i32 %3130, 1
  %3133 = mul i32 %3130, %3132
  %3134 = urem i32 %3133, 2
  %3135 = icmp eq i32 %3134, 0
  %3136 = icmp slt i32 %3131, 10
  %3137 = or i1 %3135, %3136
  br i1 %3137, label %originalBBpart2816, label %originalBB814alteredBB

originalBBpart2816:                               ; preds = %originalBB814
  br label %3138, !dbg !2712

3138:                                             ; preds = %originalBBpart2816, %originalBBpart2812
  %3139 = load i32, i32* @x.37
  %3140 = load i32, i32* @y.38
  %3141 = sub i32 %3139, 1
  %3142 = mul i32 %3139, %3141
  %3143 = urem i32 %3142, 2
  %3144 = icmp eq i32 %3143, 0
  %3145 = icmp slt i32 %3140, 10
  %3146 = or i1 %3144, %3145
  br i1 %3146, label %originalBB818, label %originalBB818alteredBB

originalBB818:                                    ; preds = %3138, %originalBB818alteredBB
  %3147 = load i64, i64* %29, align 8, !dbg !2715
  %3148 = add i64 %3147, 1, !dbg !2715
  store i64 %3148, i64* %29, align 8, !dbg !2715
  %3149 = load i32, i32* @x.37
  %3150 = load i32, i32* @y.38
  %3151 = sub i32 %3149, 1
  %3152 = mul i32 %3149, %3151
  %3153 = urem i32 %3152, 2
  %3154 = icmp eq i32 %3153, 0
  %3155 = icmp slt i32 %3150, 10
  %3156 = or i1 %3154, %3155
  br i1 %3156, label %originalBBpart2823, label %originalBB818alteredBB

originalBBpart2823:                               ; preds = %originalBB818
  br label %3157, !dbg !2715

3157:                                             ; preds = %originalBBpart2823
  %3158 = load i32, i32* @x.37
  %3159 = load i32, i32* @y.38
  %3160 = sub i32 %3158, 1
  %3161 = mul i32 %3158, %3160
  %3162 = urem i32 %3161, 2
  %3163 = icmp eq i32 %3162, 0
  %3164 = icmp slt i32 %3159, 10
  %3165 = or i1 %3163, %3164
  br i1 %3165, label %originalBB825, label %originalBB825alteredBB

originalBB825:                                    ; preds = %3157, %originalBB825alteredBB
  %3166 = load i32, i32* @x.37
  %3167 = load i32, i32* @y.38
  %3168 = sub i32 %3166, 1
  %3169 = mul i32 %3166, %3168
  %3170 = urem i32 %3169, 2
  %3171 = icmp eq i32 %3170, 0
  %3172 = icmp slt i32 %3167, 10
  %3173 = or i1 %3171, %3172
  br i1 %3173, label %originalBBpart2827, label %originalBB825alteredBB

originalBBpart2827:                               ; preds = %originalBB825
  br label %3174, !dbg !2716

3174:                                             ; preds = %originalBBpart2827
  %3175 = load i32, i32* @x.37
  %3176 = load i32, i32* @y.38
  %3177 = sub i32 %3175, 1
  %3178 = mul i32 %3175, %3177
  %3179 = urem i32 %3178, 2
  %3180 = icmp eq i32 %3179, 0
  %3181 = icmp slt i32 %3176, 10
  %3182 = or i1 %3180, %3181
  br i1 %3182, label %originalBB829, label %originalBB829alteredBB

originalBB829:                                    ; preds = %3174, %originalBB829alteredBB
  %3183 = load i64, i64* %29, align 8, !dbg !2717
  %3184 = load i64, i64* %20, align 8, !dbg !2717
  %3185 = icmp ult i64 %3183, %3184, !dbg !2717
  %3186 = load i32, i32* @x.37
  %3187 = load i32, i32* @y.38
  %3188 = sub i32 %3186, 1
  %3189 = mul i32 %3186, %3188
  %3190 = urem i32 %3189, 2
  %3191 = icmp eq i32 %3190, 0
  %3192 = icmp slt i32 %3187, 10
  %3193 = or i1 %3191, %3192
  br i1 %3193, label %originalBBpart2831, label %originalBB829alteredBB

originalBBpart2831:                               ; preds = %originalBB829
  br i1 %3185, label %3194, label %3214, !dbg !2720

3194:                                             ; preds = %originalBBpart2831
  %3195 = load i32, i32* @x.37
  %3196 = load i32, i32* @y.38
  %3197 = sub i32 %3195, 1
  %3198 = mul i32 %3195, %3197
  %3199 = urem i32 %3198, 2
  %3200 = icmp eq i32 %3199, 0
  %3201 = icmp slt i32 %3196, 10
  %3202 = or i1 %3200, %3201
  br i1 %3202, label %originalBB833, label %originalBB833alteredBB

originalBB833:                                    ; preds = %3194, %originalBB833alteredBB
  %3203 = load i8*, i8** %19, align 8, !dbg !2717
  %3204 = load i64, i64* %29, align 8, !dbg !2717
  %3205 = getelementptr inbounds i8, i8* %3203, i64 %3204, !dbg !2717
  store i8 92, i8* %3205, align 1, !dbg !2717
  %3206 = load i32, i32* @x.37
  %3207 = load i32, i32* @y.38
  %3208 = sub i32 %3206, 1
  %3209 = mul i32 %3206, %3208
  %3210 = urem i32 %3209, 2
  %3211 = icmp eq i32 %3210, 0
  %3212 = icmp slt i32 %3207, 10
  %3213 = or i1 %3211, %3212
  br i1 %3213, label %originalBBpart2835, label %originalBB833alteredBB

originalBBpart2835:                               ; preds = %originalBB833
  br label %3214, !dbg !2717

3214:                                             ; preds = %originalBBpart2835, %originalBBpart2831
  %3215 = load i32, i32* @x.37
  %3216 = load i32, i32* @y.38
  %3217 = sub i32 %3215, 1
  %3218 = mul i32 %3215, %3217
  %3219 = urem i32 %3218, 2
  %3220 = icmp eq i32 %3219, 0
  %3221 = icmp slt i32 %3216, 10
  %3222 = or i1 %3220, %3221
  br i1 %3222, label %originalBB837, label %originalBB837alteredBB

originalBB837:                                    ; preds = %3214, %originalBB837alteredBB
  %3223 = load i64, i64* %29, align 8, !dbg !2720
  %3224 = add i64 %3223, 1, !dbg !2720
  store i64 %3224, i64* %29, align 8, !dbg !2720
  %3225 = load i32, i32* @x.37
  %3226 = load i32, i32* @y.38
  %3227 = sub i32 %3225, 1
  %3228 = mul i32 %3225, %3227
  %3229 = urem i32 %3228, 2
  %3230 = icmp eq i32 %3229, 0
  %3231 = icmp slt i32 %3226, 10
  %3232 = or i1 %3230, %3231
  br i1 %3232, label %originalBBpart2852, label %originalBB837alteredBB

originalBBpart2852:                               ; preds = %originalBB837
  br label %3233, !dbg !2720

3233:                                             ; preds = %originalBBpart2852
  %3234 = load i32, i32* @x.37
  %3235 = load i32, i32* @y.38
  %3236 = sub i32 %3234, 1
  %3237 = mul i32 %3234, %3236
  %3238 = urem i32 %3237, 2
  %3239 = icmp eq i32 %3238, 0
  %3240 = icmp slt i32 %3235, 10
  %3241 = or i1 %3239, %3240
  br i1 %3241, label %originalBB854, label %originalBB854alteredBB

originalBB854:                                    ; preds = %3233, %originalBB854alteredBB
  %3242 = load i32, i32* @x.37
  %3243 = load i32, i32* @y.38
  %3244 = sub i32 %3242, 1
  %3245 = mul i32 %3242, %3244
  %3246 = urem i32 %3245, 2
  %3247 = icmp eq i32 %3246, 0
  %3248 = icmp slt i32 %3243, 10
  %3249 = or i1 %3247, %3248
  br i1 %3249, label %originalBBpart2856, label %originalBB854alteredBB

originalBBpart2856:                               ; preds = %originalBB854
  br label %3250, !dbg !2721

3250:                                             ; preds = %originalBBpart2856
  %3251 = load i32, i32* @x.37
  %3252 = load i32, i32* @y.38
  %3253 = sub i32 %3251, 1
  %3254 = mul i32 %3251, %3253
  %3255 = urem i32 %3254, 2
  %3256 = icmp eq i32 %3255, 0
  %3257 = icmp slt i32 %3252, 10
  %3258 = or i1 %3256, %3257
  br i1 %3258, label %originalBB858, label %originalBB858alteredBB

originalBB858:                                    ; preds = %3250, %originalBB858alteredBB
  %3259 = load i64, i64* %29, align 8, !dbg !2722
  %3260 = load i64, i64* %20, align 8, !dbg !2722
  %3261 = icmp ult i64 %3259, %3260, !dbg !2722
  %3262 = load i32, i32* @x.37
  %3263 = load i32, i32* @y.38
  %3264 = sub i32 %3262, 1
  %3265 = mul i32 %3262, %3264
  %3266 = urem i32 %3265, 2
  %3267 = icmp eq i32 %3266, 0
  %3268 = icmp slt i32 %3263, 10
  %3269 = or i1 %3267, %3268
  br i1 %3269, label %originalBBpart2860, label %originalBB858alteredBB

originalBBpart2860:                               ; preds = %originalBB858
  br i1 %3261, label %3270, label %3290, !dbg !2725

3270:                                             ; preds = %originalBBpart2860
  %3271 = load i32, i32* @x.37
  %3272 = load i32, i32* @y.38
  %3273 = sub i32 %3271, 1
  %3274 = mul i32 %3271, %3273
  %3275 = urem i32 %3274, 2
  %3276 = icmp eq i32 %3275, 0
  %3277 = icmp slt i32 %3272, 10
  %3278 = or i1 %3276, %3277
  br i1 %3278, label %originalBB862, label %originalBB862alteredBB

originalBB862:                                    ; preds = %3270, %originalBB862alteredBB
  %3279 = load i8*, i8** %19, align 8, !dbg !2722
  %3280 = load i64, i64* %29, align 8, !dbg !2722
  %3281 = getelementptr inbounds i8, i8* %3279, i64 %3280, !dbg !2722
  store i8 39, i8* %3281, align 1, !dbg !2722
  %3282 = load i32, i32* @x.37
  %3283 = load i32, i32* @y.38
  %3284 = sub i32 %3282, 1
  %3285 = mul i32 %3282, %3284
  %3286 = urem i32 %3285, 2
  %3287 = icmp eq i32 %3286, 0
  %3288 = icmp slt i32 %3283, 10
  %3289 = or i1 %3287, %3288
  br i1 %3289, label %originalBBpart2864, label %originalBB862alteredBB

originalBBpart2864:                               ; preds = %originalBB862
  br label %3290, !dbg !2722

3290:                                             ; preds = %originalBBpart2864, %originalBBpart2860
  %3291 = load i32, i32* @x.37
  %3292 = load i32, i32* @y.38
  %3293 = sub i32 %3291, 1
  %3294 = mul i32 %3291, %3293
  %3295 = urem i32 %3294, 2
  %3296 = icmp eq i32 %3295, 0
  %3297 = icmp slt i32 %3292, 10
  %3298 = or i1 %3296, %3297
  br i1 %3298, label %originalBB866, label %originalBB866alteredBB

originalBB866:                                    ; preds = %3290, %originalBB866alteredBB
  %3299 = load i64, i64* %29, align 8, !dbg !2725
  %3300 = add i64 %3299, 1, !dbg !2725
  store i64 %3300, i64* %29, align 8, !dbg !2725
  %3301 = load i32, i32* @x.37
  %3302 = load i32, i32* @y.38
  %3303 = sub i32 %3301, 1
  %3304 = mul i32 %3301, %3303
  %3305 = urem i32 %3304, 2
  %3306 = icmp eq i32 %3305, 0
  %3307 = icmp slt i32 %3302, 10
  %3308 = or i1 %3306, %3307
  br i1 %3308, label %originalBBpart2871, label %originalBB866alteredBB

originalBBpart2871:                               ; preds = %originalBB866
  br label %3309, !dbg !2725

3309:                                             ; preds = %originalBBpart2871
  store i8 0, i8* %36, align 1, !dbg !2726
  br label %3310, !dbg !2727

3310:                                             ; preds = %3309, %originalBBpart2784
  %3311 = load i32, i32* @x.37
  %3312 = load i32, i32* @y.38
  %3313 = sub i32 %3311, 1
  %3314 = mul i32 %3311, %3313
  %3315 = urem i32 %3314, 2
  %3316 = icmp eq i32 %3315, 0
  %3317 = icmp slt i32 %3312, 10
  %3318 = or i1 %3316, %3317
  br i1 %3318, label %originalBB873, label %originalBB873alteredBB

originalBB873:                                    ; preds = %3310, %originalBB873alteredBB
  %3319 = load i32, i32* @x.37
  %3320 = load i32, i32* @y.38
  %3321 = sub i32 %3319, 1
  %3322 = mul i32 %3319, %3321
  %3323 = urem i32 %3322, 2
  %3324 = icmp eq i32 %3323, 0
  %3325 = icmp slt i32 %3320, 10
  %3326 = or i1 %3324, %3325
  br i1 %3326, label %originalBBpart2875, label %originalBB873alteredBB

originalBBpart2875:                               ; preds = %originalBB873
  br label %5161, !dbg !2728

3327:                                             ; preds = %originalBBpart2222, %originalBBpart2222, %originalBBpart2222, %originalBBpart2222, %originalBBpart2222, %originalBBpart2222, %originalBBpart2222, %originalBBpart2222, %originalBBpart2222, %originalBBpart2222, %originalBBpart2222, %originalBBpart2222, %originalBBpart2222, %originalBBpart2222, %originalBBpart2222, %originalBBpart2222, %originalBBpart2222, %originalBBpart2222, %originalBBpart2222, %originalBBpart2222, %originalBBpart2222, %originalBBpart2222, %originalBBpart2222, %originalBBpart2222, %originalBBpart2222, %originalBBpart2222, %originalBBpart2222, %originalBBpart2222, %originalBBpart2222, %originalBBpart2222, %originalBBpart2222, %originalBBpart2222, %originalBBpart2222, %originalBBpart2222, %originalBBpart2222, %originalBBpart2222, %originalBBpart2222, %originalBBpart2222, %originalBBpart2222, %originalBBpart2222, %originalBBpart2222, %originalBBpart2222, %originalBBpart2222, %originalBBpart2222, %originalBBpart2222, %originalBBpart2222, %originalBBpart2222, %originalBBpart2222, %originalBBpart2222, %originalBBpart2222, %originalBBpart2222, %originalBBpart2222, %originalBBpart2222, %originalBBpart2222, %originalBBpart2222, %originalBBpart2222, %originalBBpart2222, %originalBBpart2222, %originalBBpart2222, %originalBBpart2222, %originalBBpart2222, %originalBBpart2222, %originalBBpart2222, %originalBBpart2222, %originalBBpart2222, %originalBBpart2222, %originalBBpart2222, %originalBBpart2222, %originalBBpart2222, %originalBBpart2222, %originalBBpart2222
  %3328 = load i32, i32* @x.37
  %3329 = load i32, i32* @y.38
  %3330 = sub i32 %3328, 1
  %3331 = mul i32 %3328, %3330
  %3332 = urem i32 %3331, 2
  %3333 = icmp eq i32 %3332, 0
  %3334 = icmp slt i32 %3329, 10
  %3335 = or i1 %3333, %3334
  br i1 %3335, label %originalBB877, label %originalBB877alteredBB

originalBB877:                                    ; preds = %3327, %originalBB877alteredBB
  store i8 1, i8* %43, align 1, !dbg !2729
  %3336 = load i32, i32* @x.37
  %3337 = load i32, i32* @y.38
  %3338 = sub i32 %3336, 1
  %3339 = mul i32 %3336, %3338
  %3340 = urem i32 %3339, 2
  %3341 = icmp eq i32 %3340, 0
  %3342 = icmp slt i32 %3337, 10
  %3343 = or i1 %3341, %3342
  br i1 %3343, label %originalBBpart2879, label %originalBB877alteredBB

originalBBpart2879:                               ; preds = %originalBB877
  br label %5161, !dbg !2730

3344:                                             ; preds = %originalBBpart2222
  call void @llvm.dbg.declare(metadata i64* %44, metadata !2731, metadata !DIExpression()), !dbg !2733
  call void @llvm.dbg.declare(metadata i8* %45, metadata !2734, metadata !DIExpression()), !dbg !2735
  %3345 = load i32, i32* @x.37
  %3346 = load i32, i32* @y.38
  %3347 = sub i32 %3345, 1
  %3348 = mul i32 %3345, %3347
  %3349 = urem i32 %3348, 2
  %3350 = icmp eq i32 %3349, 0
  %3351 = icmp slt i32 %3346, 10
  %3352 = or i1 %3350, %3351
  br i1 %3352, label %originalBB881, label %originalBB881alteredBB

originalBB881:                                    ; preds = %3344, %originalBB881alteredBB
  %3353 = load i8, i8* %34, align 1, !dbg !2736
  %3354 = trunc i8 %3353 to i1, !dbg !2736
  %3355 = load i32, i32* @x.37
  %3356 = load i32, i32* @y.38
  %3357 = sub i32 %3355, 1
  %3358 = mul i32 %3355, %3357
  %3359 = urem i32 %3358, 2
  %3360 = icmp eq i32 %3359, 0
  %3361 = icmp slt i32 %3356, 10
  %3362 = or i1 %3360, %3361
  br i1 %3362, label %originalBBpart2883, label %originalBB881alteredBB

originalBBpart2883:                               ; preds = %originalBB881
  br i1 %3354, label %3363, label %3391, !dbg !2738

3363:                                             ; preds = %originalBBpart2883
  %3364 = load i32, i32* @x.37
  %3365 = load i32, i32* @y.38
  %3366 = sub i32 %3364, 1
  %3367 = mul i32 %3364, %3366
  %3368 = urem i32 %3367, 2
  %3369 = icmp eq i32 %3368, 0
  %3370 = icmp slt i32 %3365, 10
  %3371 = or i1 %3369, %3370
  br i1 %3371, label %originalBB885, label %originalBB885alteredBB

originalBB885:                                    ; preds = %3363, %originalBB885alteredBB
  store i64 1, i64* %44, align 8, !dbg !2739
  %3372 = call i16** @__ctype_b_loc() #15, !dbg !2741
  %3373 = load i16*, i16** %3372, align 8, !dbg !2741
  %3374 = load i8, i8* %39, align 1, !dbg !2741
  %3375 = zext i8 %3374 to i32, !dbg !2741
  %3376 = sext i32 %3375 to i64, !dbg !2741
  %3377 = getelementptr inbounds i16, i16* %3373, i64 %3376, !dbg !2741
  %3378 = load i16, i16* %3377, align 2, !dbg !2741
  %3379 = zext i16 %3378 to i32, !dbg !2741
  %3380 = and i32 %3379, 16384, !dbg !2741
  %3381 = icmp ne i32 %3380, 0, !dbg !2742
  %3382 = zext i1 %3381 to i8, !dbg !2743
  store i8 %3382, i8* %45, align 1, !dbg !2743
  %3383 = load i32, i32* @x.37
  %3384 = load i32, i32* @y.38
  %3385 = sub i32 %3383, 1
  %3386 = mul i32 %3383, %3385
  %3387 = urem i32 %3386, 2
  %3388 = icmp eq i32 %3387, 0
  %3389 = icmp slt i32 %3384, 10
  %3390 = or i1 %3388, %3389
  br i1 %3390, label %originalBBpart2896, label %originalBB885alteredBB

originalBBpart2896:                               ; preds = %originalBB885
  br label %3984, !dbg !2744

3391:                                             ; preds = %originalBBpart2883
  call void @llvm.dbg.declare(metadata %struct.__mbstate_t* %46, metadata !2745, metadata !DIExpression()), !dbg !2762
  %3392 = load i32, i32* @x.37
  %3393 = load i32, i32* @y.38
  %3394 = sub i32 %3392, 1
  %3395 = mul i32 %3392, %3394
  %3396 = urem i32 %3395, 2
  %3397 = icmp eq i32 %3396, 0
  %3398 = icmp slt i32 %3393, 10
  %3399 = or i1 %3397, %3398
  br i1 %3399, label %originalBB898, label %originalBB898alteredBB

originalBB898:                                    ; preds = %3391, %originalBB898alteredBB
  %3400 = bitcast %struct.__mbstate_t* %46 to i8*, !dbg !2763
  call void @llvm.memset.p0i8.i64(i8* align 4 %3400, i8 0, i64 8, i1 false), !dbg !2763
  store i64 0, i64* %44, align 8, !dbg !2764
  store i8 1, i8* %45, align 1, !dbg !2765
  %3401 = load i64, i64* %22, align 8, !dbg !2766
  %3402 = icmp eq i64 %3401, -1, !dbg !2768
  %3403 = load i32, i32* @x.37
  %3404 = load i32, i32* @y.38
  %3405 = sub i32 %3403, 1
  %3406 = mul i32 %3403, %3405
  %3407 = urem i32 %3406, 2
  %3408 = icmp eq i32 %3407, 0
  %3409 = icmp slt i32 %3404, 10
  %3410 = or i1 %3408, %3409
  br i1 %3410, label %originalBBpart2900, label %originalBB898alteredBB

originalBBpart2900:                               ; preds = %originalBB898
  br i1 %3402, label %3411, label %3430, !dbg !2769

3411:                                             ; preds = %originalBBpart2900
  %3412 = load i32, i32* @x.37
  %3413 = load i32, i32* @y.38
  %3414 = sub i32 %3412, 1
  %3415 = mul i32 %3412, %3414
  %3416 = urem i32 %3415, 2
  %3417 = icmp eq i32 %3416, 0
  %3418 = icmp slt i32 %3413, 10
  %3419 = or i1 %3417, %3418
  br i1 %3419, label %originalBB902, label %originalBB902alteredBB

originalBB902:                                    ; preds = %3411, %originalBB902alteredBB
  %3420 = load i8*, i8** %21, align 8, !dbg !2770
  %3421 = call i64 @strlen(i8* %3420) #13, !dbg !2771
  store i64 %3421, i64* %22, align 8, !dbg !2772
  %3422 = load i32, i32* @x.37
  %3423 = load i32, i32* @y.38
  %3424 = sub i32 %3422, 1
  %3425 = mul i32 %3422, %3424
  %3426 = urem i32 %3425, 2
  %3427 = icmp eq i32 %3426, 0
  %3428 = icmp slt i32 %3423, 10
  %3429 = or i1 %3427, %3428
  br i1 %3429, label %originalBBpart2904, label %originalBB902alteredBB

originalBBpart2904:                               ; preds = %originalBB902
  br label %3430, !dbg !2773

3430:                                             ; preds = %originalBBpart2904, %originalBBpart2900
  %3431 = load i32, i32* @x.37
  %3432 = load i32, i32* @y.38
  %3433 = sub i32 %3431, 1
  %3434 = mul i32 %3431, %3433
  %3435 = urem i32 %3434, 2
  %3436 = icmp eq i32 %3435, 0
  %3437 = icmp slt i32 %3432, 10
  %3438 = or i1 %3436, %3437
  br i1 %3438, label %originalBB906, label %originalBB906alteredBB

originalBB906:                                    ; preds = %3430, %originalBB906alteredBB
  %3439 = load i32, i32* @x.37
  %3440 = load i32, i32* @y.38
  %3441 = sub i32 %3439, 1
  %3442 = mul i32 %3439, %3441
  %3443 = urem i32 %3442, 2
  %3444 = icmp eq i32 %3443, 0
  %3445 = icmp slt i32 %3440, 10
  %3446 = or i1 %3444, %3445
  br i1 %3446, label %originalBBpart2908, label %originalBB906alteredBB

originalBBpart2908:                               ; preds = %originalBB906
  br label %3447, !dbg !2774

3447:                                             ; preds = %originalBBpart21103, %originalBBpart2908
  call void @llvm.dbg.declare(metadata i32* %47, metadata !2775, metadata !DIExpression()), !dbg !2778
  call void @llvm.dbg.declare(metadata i64* %48, metadata !2779, metadata !DIExpression()), !dbg !2780
  %3448 = load i32, i32* @x.37
  %3449 = load i32, i32* @y.38
  %3450 = sub i32 %3448, 1
  %3451 = mul i32 %3448, %3450
  %3452 = urem i32 %3451, 2
  %3453 = icmp eq i32 %3452, 0
  %3454 = icmp slt i32 %3449, 10
  %3455 = or i1 %3453, %3454
  br i1 %3455, label %originalBB910, label %originalBB910alteredBB

originalBB910:                                    ; preds = %3447, %originalBB910alteredBB
  %3456 = load i8*, i8** %21, align 8, !dbg !2781
  %3457 = load i64, i64* %28, align 8, !dbg !2782
  %3458 = load i64, i64* %44, align 8, !dbg !2783
  %3459 = add i64 %3457, %3458, !dbg !2784
  %3460 = getelementptr inbounds i8, i8* %3456, i64 %3459, !dbg !2781
  %3461 = load i64, i64* %22, align 8, !dbg !2785
  %3462 = load i64, i64* %28, align 8, !dbg !2786
  %3463 = load i64, i64* %44, align 8, !dbg !2787
  %3464 = add i64 %3462, %3463, !dbg !2788
  %3465 = sub i64 %3461, %3464, !dbg !2789
  %3466 = call i64 @rpl_mbrtowc(i32* %47, i8* %3460, i64 %3465, %struct.__mbstate_t* %46), !dbg !2790
  store i64 %3466, i64* %48, align 8, !dbg !2780
  %3467 = load i64, i64* %48, align 8, !dbg !2791
  %3468 = icmp eq i64 %3467, 0, !dbg !2793
  %3469 = load i32, i32* @x.37
  %3470 = load i32, i32* @y.38
  %3471 = sub i32 %3469, 1
  %3472 = mul i32 %3469, %3471
  %3473 = urem i32 %3472, 2
  %3474 = icmp eq i32 %3473, 0
  %3475 = icmp slt i32 %3470, 10
  %3476 = or i1 %3474, %3475
  br i1 %3476, label %originalBBpart2943, label %originalBB910alteredBB

originalBBpart2943:                               ; preds = %originalBB910
  br i1 %3468, label %3477, label %3494, !dbg !2794

3477:                                             ; preds = %originalBBpart2943
  %3478 = load i32, i32* @x.37
  %3479 = load i32, i32* @y.38
  %3480 = sub i32 %3478, 1
  %3481 = mul i32 %3478, %3480
  %3482 = urem i32 %3481, 2
  %3483 = icmp eq i32 %3482, 0
  %3484 = icmp slt i32 %3479, 10
  %3485 = or i1 %3483, %3484
  br i1 %3485, label %originalBB945, label %originalBB945alteredBB

originalBB945:                                    ; preds = %3477, %originalBB945alteredBB
  %3486 = load i32, i32* @x.37
  %3487 = load i32, i32* @y.38
  %3488 = sub i32 %3486, 1
  %3489 = mul i32 %3486, %3488
  %3490 = urem i32 %3489, 2
  %3491 = icmp eq i32 %3490, 0
  %3492 = icmp slt i32 %3487, 10
  %3493 = or i1 %3491, %3492
  br i1 %3493, label %originalBBpart2947, label %originalBB945alteredBB

originalBBpart2947:                               ; preds = %originalBB945
  br label %3967, !dbg !2795

3494:                                             ; preds = %originalBBpart2943
  %3495 = load i32, i32* @x.37
  %3496 = load i32, i32* @y.38
  %3497 = sub i32 %3495, 1
  %3498 = mul i32 %3495, %3497
  %3499 = urem i32 %3498, 2
  %3500 = icmp eq i32 %3499, 0
  %3501 = icmp slt i32 %3496, 10
  %3502 = or i1 %3500, %3501
  br i1 %3502, label %originalBB949, label %originalBB949alteredBB

originalBB949:                                    ; preds = %3494, %originalBB949alteredBB
  %3503 = load i64, i64* %48, align 8, !dbg !2796
  %3504 = icmp eq i64 %3503, -1, !dbg !2798
  %3505 = load i32, i32* @x.37
  %3506 = load i32, i32* @y.38
  %3507 = sub i32 %3505, 1
  %3508 = mul i32 %3505, %3507
  %3509 = urem i32 %3508, 2
  %3510 = icmp eq i32 %3509, 0
  %3511 = icmp slt i32 %3506, 10
  %3512 = or i1 %3510, %3511
  br i1 %3512, label %originalBBpart2951, label %originalBB949alteredBB

originalBBpart2951:                               ; preds = %originalBB949
  br i1 %3504, label %3513, label %3530, !dbg !2799

3513:                                             ; preds = %originalBBpart2951
  %3514 = load i32, i32* @x.37
  %3515 = load i32, i32* @y.38
  %3516 = sub i32 %3514, 1
  %3517 = mul i32 %3514, %3516
  %3518 = urem i32 %3517, 2
  %3519 = icmp eq i32 %3518, 0
  %3520 = icmp slt i32 %3515, 10
  %3521 = or i1 %3519, %3520
  br i1 %3521, label %originalBB953, label %originalBB953alteredBB

originalBB953:                                    ; preds = %3513, %originalBB953alteredBB
  store i8 0, i8* %45, align 1, !dbg !2800
  %3522 = load i32, i32* @x.37
  %3523 = load i32, i32* @y.38
  %3524 = sub i32 %3522, 1
  %3525 = mul i32 %3522, %3524
  %3526 = urem i32 %3525, 2
  %3527 = icmp eq i32 %3526, 0
  %3528 = icmp slt i32 %3523, 10
  %3529 = or i1 %3527, %3528
  br i1 %3529, label %originalBBpart2955, label %originalBB953alteredBB

originalBBpart2955:                               ; preds = %originalBB953
  br label %3967, !dbg !2802

3530:                                             ; preds = %originalBBpart2951
  %3531 = load i32, i32* @x.37
  %3532 = load i32, i32* @y.38
  %3533 = sub i32 %3531, 1
  %3534 = mul i32 %3531, %3533
  %3535 = urem i32 %3534, 2
  %3536 = icmp eq i32 %3535, 0
  %3537 = icmp slt i32 %3532, 10
  %3538 = or i1 %3536, %3537
  br i1 %3538, label %originalBB957, label %originalBB957alteredBB

originalBB957:                                    ; preds = %3530, %originalBB957alteredBB
  %3539 = load i64, i64* %48, align 8, !dbg !2803
  %3540 = icmp eq i64 %3539, -2, !dbg !2805
  %3541 = load i32, i32* @x.37
  %3542 = load i32, i32* @y.38
  %3543 = sub i32 %3541, 1
  %3544 = mul i32 %3541, %3543
  %3545 = urem i32 %3544, 2
  %3546 = icmp eq i32 %3545, 0
  %3547 = icmp slt i32 %3542, 10
  %3548 = or i1 %3546, %3547
  br i1 %3548, label %originalBBpart2959, label %originalBB957alteredBB

originalBBpart2959:                               ; preds = %originalBB957
  br i1 %3540, label %3549, label %3651, !dbg !2806

3549:                                             ; preds = %originalBBpart2959
  store i8 0, i8* %45, align 1, !dbg !2807
  br label %3550, !dbg !2809

3550:                                             ; preds = %originalBBpart2996, %3549
  %3551 = load i32, i32* @x.37
  %3552 = load i32, i32* @y.38
  %3553 = sub i32 %3551, 1
  %3554 = mul i32 %3551, %3553
  %3555 = urem i32 %3554, 2
  %3556 = icmp eq i32 %3555, 0
  %3557 = icmp slt i32 %3552, 10
  %3558 = or i1 %3556, %3557
  br i1 %3558, label %originalBB961, label %originalBB961alteredBB

originalBB961:                                    ; preds = %3550, %originalBB961alteredBB
  %3559 = load i64, i64* %28, align 8, !dbg !2810
  %3560 = load i64, i64* %44, align 8, !dbg !2811
  %3561 = add i64 %3559, %3560, !dbg !2812
  %3562 = load i64, i64* %22, align 8, !dbg !2813
  %3563 = icmp ult i64 %3561, %3562, !dbg !2814
  %3564 = load i32, i32* @x.37
  %3565 = load i32, i32* @y.38
  %3566 = sub i32 %3564, 1
  %3567 = mul i32 %3564, %3566
  %3568 = urem i32 %3567, 2
  %3569 = icmp eq i32 %3568, 0
  %3570 = icmp slt i32 %3565, 10
  %3571 = or i1 %3569, %3570
  br i1 %3571, label %originalBBpart2971, label %originalBB961alteredBB

originalBBpart2971:                               ; preds = %originalBB961
  br i1 %3563, label %3572, label %3597, !dbg !2815

3572:                                             ; preds = %originalBBpart2971
  %3573 = load i32, i32* @x.37
  %3574 = load i32, i32* @y.38
  %3575 = sub i32 %3573, 1
  %3576 = mul i32 %3573, %3575
  %3577 = urem i32 %3576, 2
  %3578 = icmp eq i32 %3577, 0
  %3579 = icmp slt i32 %3574, 10
  %3580 = or i1 %3578, %3579
  br i1 %3580, label %originalBB973, label %originalBB973alteredBB

originalBB973:                                    ; preds = %3572, %originalBB973alteredBB
  %3581 = load i8*, i8** %21, align 8, !dbg !2816
  %3582 = load i64, i64* %28, align 8, !dbg !2817
  %3583 = load i64, i64* %44, align 8, !dbg !2818
  %3584 = add i64 %3582, %3583, !dbg !2819
  %3585 = getelementptr inbounds i8, i8* %3581, i64 %3584, !dbg !2816
  %3586 = load i8, i8* %3585, align 1, !dbg !2816
  %3587 = sext i8 %3586 to i32, !dbg !2816
  %3588 = icmp ne i32 %3587, 0, !dbg !2815
  %3589 = load i32, i32* @x.37
  %3590 = load i32, i32* @y.38
  %3591 = sub i32 %3589, 1
  %3592 = mul i32 %3589, %3591
  %3593 = urem i32 %3592, 2
  %3594 = icmp eq i32 %3593, 0
  %3595 = icmp slt i32 %3590, 10
  %3596 = or i1 %3594, %3595
  br i1 %3596, label %originalBBpart2978, label %originalBB973alteredBB

originalBBpart2978:                               ; preds = %originalBB973
  br label %3597

3597:                                             ; preds = %originalBBpart2978, %originalBBpart2971
  %3598 = phi i1 [ false, %originalBBpart2971 ], [ %3588, %originalBBpart2978 ], !dbg !2820
  %3599 = load i32, i32* @x.37
  %3600 = load i32, i32* @y.38
  %3601 = sub i32 %3599, 1
  %3602 = mul i32 %3599, %3601
  %3603 = urem i32 %3602, 2
  %3604 = icmp eq i32 %3603, 0
  %3605 = icmp slt i32 %3600, 10
  %3606 = or i1 %3604, %3605
  br i1 %3606, label %originalBB980, label %originalBB980alteredBB

originalBB980:                                    ; preds = %3597, %originalBB980alteredBB
  %3607 = load i32, i32* @x.37
  %3608 = load i32, i32* @y.38
  %3609 = sub i32 %3607, 1
  %3610 = mul i32 %3607, %3609
  %3611 = urem i32 %3610, 2
  %3612 = icmp eq i32 %3611, 0
  %3613 = icmp slt i32 %3608, 10
  %3614 = or i1 %3612, %3613
  br i1 %3614, label %originalBBpart2982, label %originalBB980alteredBB

originalBBpart2982:                               ; preds = %originalBB980
  br i1 %3598, label %3615, label %3634, !dbg !2809

3615:                                             ; preds = %originalBBpart2982
  %3616 = load i32, i32* @x.37
  %3617 = load i32, i32* @y.38
  %3618 = sub i32 %3616, 1
  %3619 = mul i32 %3616, %3618
  %3620 = urem i32 %3619, 2
  %3621 = icmp eq i32 %3620, 0
  %3622 = icmp slt i32 %3617, 10
  %3623 = or i1 %3621, %3622
  br i1 %3623, label %originalBB984, label %originalBB984alteredBB

originalBB984:                                    ; preds = %3615, %originalBB984alteredBB
  %3624 = load i64, i64* %44, align 8, !dbg !2821
  %3625 = add i64 %3624, 1, !dbg !2821
  store i64 %3625, i64* %44, align 8, !dbg !2821
  %3626 = load i32, i32* @x.37
  %3627 = load i32, i32* @y.38
  %3628 = sub i32 %3626, 1
  %3629 = mul i32 %3626, %3628
  %3630 = urem i32 %3629, 2
  %3631 = icmp eq i32 %3630, 0
  %3632 = icmp slt i32 %3627, 10
  %3633 = or i1 %3631, %3632
  br i1 %3633, label %originalBBpart2996, label %originalBB984alteredBB

originalBBpart2996:                               ; preds = %originalBB984
  br label %3550, !dbg !2809, !llvm.loop !2822

3634:                                             ; preds = %originalBBpart2982
  %3635 = load i32, i32* @x.37
  %3636 = load i32, i32* @y.38
  %3637 = sub i32 %3635, 1
  %3638 = mul i32 %3635, %3637
  %3639 = urem i32 %3638, 2
  %3640 = icmp eq i32 %3639, 0
  %3641 = icmp slt i32 %3636, 10
  %3642 = or i1 %3640, %3641
  br i1 %3642, label %originalBB998, label %originalBB998alteredBB

originalBB998:                                    ; preds = %3634, %originalBB998alteredBB
  %3643 = load i32, i32* @x.37
  %3644 = load i32, i32* @y.38
  %3645 = sub i32 %3643, 1
  %3646 = mul i32 %3643, %3645
  %3647 = urem i32 %3646, 2
  %3648 = icmp eq i32 %3647, 0
  %3649 = icmp slt i32 %3644, 10
  %3650 = or i1 %3648, %3649
  br i1 %3650, label %originalBBpart21000, label %originalBB998alteredBB

originalBBpart21000:                              ; preds = %originalBB998
  br label %3967, !dbg !2823

3651:                                             ; preds = %originalBBpart2959
  %3652 = load i32, i32* @x.37
  %3653 = load i32, i32* @y.38
  %3654 = sub i32 %3652, 1
  %3655 = mul i32 %3652, %3654
  %3656 = urem i32 %3655, 2
  %3657 = icmp eq i32 %3656, 0
  %3658 = icmp slt i32 %3653, 10
  %3659 = or i1 %3657, %3658
  br i1 %3659, label %originalBB1002, label %originalBB1002alteredBB

originalBB1002:                                   ; preds = %3651, %originalBB1002alteredBB
  %3660 = load i8, i8* %35, align 1, !dbg !2824
  %3661 = trunc i8 %3660 to i1, !dbg !2824
  %3662 = load i32, i32* @x.37
  %3663 = load i32, i32* @y.38
  %3664 = sub i32 %3662, 1
  %3665 = mul i32 %3662, %3664
  %3666 = urem i32 %3665, 2
  %3667 = icmp eq i32 %3666, 0
  %3668 = icmp slt i32 %3663, 10
  %3669 = or i1 %3667, %3668
  br i1 %3669, label %originalBBpart21004, label %originalBB1002alteredBB

originalBBpart21004:                              ; preds = %originalBB1002
  br i1 %3661, label %3670, label %3839, !dbg !2827

3670:                                             ; preds = %originalBBpart21004
  %3671 = load i32, i32* @x.37
  %3672 = load i32, i32* @y.38
  %3673 = sub i32 %3671, 1
  %3674 = mul i32 %3671, %3673
  %3675 = urem i32 %3674, 2
  %3676 = icmp eq i32 %3675, 0
  %3677 = icmp slt i32 %3672, 10
  %3678 = or i1 %3676, %3677
  br i1 %3678, label %originalBB1006, label %originalBB1006alteredBB

originalBB1006:                                   ; preds = %3670, %originalBB1006alteredBB
  %3679 = load i32, i32* %23, align 4, !dbg !2828
  %3680 = icmp eq i32 %3679, 2, !dbg !2829
  %3681 = load i32, i32* @x.37
  %3682 = load i32, i32* @y.38
  %3683 = sub i32 %3681, 1
  %3684 = mul i32 %3681, %3683
  %3685 = urem i32 %3684, 2
  %3686 = icmp eq i32 %3685, 0
  %3687 = icmp slt i32 %3682, 10
  %3688 = or i1 %3686, %3687
  br i1 %3688, label %originalBBpart21008, label %originalBB1006alteredBB

originalBBpart21008:                              ; preds = %originalBB1006
  br i1 %3680, label %3689, label %3839, !dbg !2830

3689:                                             ; preds = %originalBBpart21008
  call void @llvm.dbg.declare(metadata i64* %49, metadata !2831, metadata !DIExpression()), !dbg !2833
  %3690 = load i32, i32* @x.37
  %3691 = load i32, i32* @y.38
  %3692 = sub i32 %3690, 1
  %3693 = mul i32 %3690, %3692
  %3694 = urem i32 %3693, 2
  %3695 = icmp eq i32 %3694, 0
  %3696 = icmp slt i32 %3691, 10
  %3697 = or i1 %3695, %3696
  br i1 %3697, label %originalBB1010, label %originalBB1010alteredBB

originalBB1010:                                   ; preds = %3689, %originalBB1010alteredBB
  store i64 1, i64* %49, align 8, !dbg !2834
  %3698 = load i32, i32* @x.37
  %3699 = load i32, i32* @y.38
  %3700 = sub i32 %3698, 1
  %3701 = mul i32 %3698, %3700
  %3702 = urem i32 %3701, 2
  %3703 = icmp eq i32 %3702, 0
  %3704 = icmp slt i32 %3699, 10
  %3705 = or i1 %3703, %3704
  br i1 %3705, label %originalBBpart21012, label %originalBB1010alteredBB

originalBBpart21012:                              ; preds = %originalBB1010
  br label %3706, !dbg !2836

3706:                                             ; preds = %originalBBpart21063, %originalBBpart21012
  %3707 = load i32, i32* @x.37
  %3708 = load i32, i32* @y.38
  %3709 = sub i32 %3707, 1
  %3710 = mul i32 %3707, %3709
  %3711 = urem i32 %3710, 2
  %3712 = icmp eq i32 %3711, 0
  %3713 = icmp slt i32 %3708, 10
  %3714 = or i1 %3712, %3713
  br i1 %3714, label %originalBB1014, label %originalBB1014alteredBB

originalBB1014:                                   ; preds = %3706, %originalBB1014alteredBB
  %3715 = load i64, i64* %49, align 8, !dbg !2837
  %3716 = load i64, i64* %48, align 8, !dbg !2839
  %3717 = icmp ult i64 %3715, %3716, !dbg !2840
  %3718 = load i32, i32* @x.37
  %3719 = load i32, i32* @y.38
  %3720 = sub i32 %3718, 1
  %3721 = mul i32 %3718, %3720
  %3722 = urem i32 %3721, 2
  %3723 = icmp eq i32 %3722, 0
  %3724 = icmp slt i32 %3719, 10
  %3725 = or i1 %3723, %3724
  br i1 %3725, label %originalBBpart21016, label %originalBB1014alteredBB

originalBBpart21016:                              ; preds = %originalBB1014
  br i1 %3717, label %3726, label %3822, !dbg !2841

3726:                                             ; preds = %originalBBpart21016
  %3727 = load i32, i32* @x.37
  %3728 = load i32, i32* @y.38
  %3729 = sub i32 %3727, 1
  %3730 = mul i32 %3727, %3729
  %3731 = urem i32 %3730, 2
  %3732 = icmp eq i32 %3731, 0
  %3733 = icmp slt i32 %3728, 10
  %3734 = or i1 %3732, %3733
  br i1 %3734, label %originalBB1018, label %originalBB1018alteredBB

originalBB1018:                                   ; preds = %3726, %originalBB1018alteredBB
  %3735 = load i8*, i8** %21, align 8, !dbg !2842
  %3736 = load i64, i64* %28, align 8, !dbg !2843
  %3737 = load i64, i64* %44, align 8, !dbg !2844
  %3738 = add i64 %3736, %3737, !dbg !2845
  %3739 = load i64, i64* %49, align 8, !dbg !2846
  %3740 = add i64 %3738, %3739, !dbg !2847
  %3741 = getelementptr inbounds i8, i8* %3735, i64 %3740, !dbg !2842
  %3742 = load i8, i8* %3741, align 1, !dbg !2842
  %3743 = sext i8 %3742 to i32, !dbg !2842
  %3744 = load i32, i32* @x.37
  %3745 = load i32, i32* @y.38
  %3746 = sub i32 %3744, 1
  %3747 = mul i32 %3744, %3746
  %3748 = urem i32 %3747, 2
  %3749 = icmp eq i32 %3748, 0
  %3750 = icmp slt i32 %3745, 10
  %3751 = or i1 %3749, %3750
  br i1 %3751, label %originalBBpart21040, label %originalBB1018alteredBB

originalBBpart21040:                              ; preds = %originalBB1018
  switch i32 %3743, label %3769 [
    i32 91, label %3752
    i32 92, label %3752
    i32 94, label %3752
    i32 96, label %3752
    i32 124, label %3752
  ], !dbg !2848

3752:                                             ; preds = %originalBBpart21040, %originalBBpart21040, %originalBBpart21040, %originalBBpart21040, %originalBBpart21040
  %3753 = load i32, i32* @x.37
  %3754 = load i32, i32* @y.38
  %3755 = sub i32 %3753, 1
  %3756 = mul i32 %3753, %3755
  %3757 = urem i32 %3756, 2
  %3758 = icmp eq i32 %3757, 0
  %3759 = icmp slt i32 %3754, 10
  %3760 = or i1 %3758, %3759
  br i1 %3760, label %originalBB1042, label %originalBB1042alteredBB

originalBB1042:                                   ; preds = %3752, %originalBB1042alteredBB
  %3761 = load i32, i32* @x.37
  %3762 = load i32, i32* @y.38
  %3763 = sub i32 %3761, 1
  %3764 = mul i32 %3761, %3763
  %3765 = urem i32 %3764, 2
  %3766 = icmp eq i32 %3765, 0
  %3767 = icmp slt i32 %3762, 10
  %3768 = or i1 %3766, %3767
  br i1 %3768, label %originalBBpart21044, label %originalBB1042alteredBB

originalBBpart21044:                              ; preds = %originalBB1042
  br label %6606, !dbg !2849

3769:                                             ; preds = %originalBBpart21040
  %3770 = load i32, i32* @x.37
  %3771 = load i32, i32* @y.38
  %3772 = sub i32 %3770, 1
  %3773 = mul i32 %3770, %3772
  %3774 = urem i32 %3773, 2
  %3775 = icmp eq i32 %3774, 0
  %3776 = icmp slt i32 %3771, 10
  %3777 = or i1 %3775, %3776
  br i1 %3777, label %originalBB1046, label %originalBB1046alteredBB

originalBB1046:                                   ; preds = %3769, %originalBB1046alteredBB
  %3778 = load i32, i32* @x.37
  %3779 = load i32, i32* @y.38
  %3780 = sub i32 %3778, 1
  %3781 = mul i32 %3778, %3780
  %3782 = urem i32 %3781, 2
  %3783 = icmp eq i32 %3782, 0
  %3784 = icmp slt i32 %3779, 10
  %3785 = or i1 %3783, %3784
  br i1 %3785, label %originalBBpart21048, label %originalBB1046alteredBB

originalBBpart21048:                              ; preds = %originalBB1046
  br label %3786, !dbg !2851

3786:                                             ; preds = %originalBBpart21048
  %3787 = load i32, i32* @x.37
  %3788 = load i32, i32* @y.38
  %3789 = sub i32 %3787, 1
  %3790 = mul i32 %3787, %3789
  %3791 = urem i32 %3790, 2
  %3792 = icmp eq i32 %3791, 0
  %3793 = icmp slt i32 %3788, 10
  %3794 = or i1 %3792, %3793
  br i1 %3794, label %originalBB1050, label %originalBB1050alteredBB

originalBB1050:                                   ; preds = %3786, %originalBB1050alteredBB
  %3795 = load i32, i32* @x.37
  %3796 = load i32, i32* @y.38
  %3797 = sub i32 %3795, 1
  %3798 = mul i32 %3795, %3797
  %3799 = urem i32 %3798, 2
  %3800 = icmp eq i32 %3799, 0
  %3801 = icmp slt i32 %3796, 10
  %3802 = or i1 %3800, %3801
  br i1 %3802, label %originalBBpart21052, label %originalBB1050alteredBB

originalBBpart21052:                              ; preds = %originalBB1050
  br label %3803, !dbg !2852

3803:                                             ; preds = %originalBBpart21052
  %3804 = load i32, i32* @x.37
  %3805 = load i32, i32* @y.38
  %3806 = sub i32 %3804, 1
  %3807 = mul i32 %3804, %3806
  %3808 = urem i32 %3807, 2
  %3809 = icmp eq i32 %3808, 0
  %3810 = icmp slt i32 %3805, 10
  %3811 = or i1 %3809, %3810
  br i1 %3811, label %originalBB1054, label %originalBB1054alteredBB

originalBB1054:                                   ; preds = %3803, %originalBB1054alteredBB
  %3812 = load i64, i64* %49, align 8, !dbg !2853
  %3813 = add i64 %3812, 1, !dbg !2853
  store i64 %3813, i64* %49, align 8, !dbg !2853
  %3814 = load i32, i32* @x.37
  %3815 = load i32, i32* @y.38
  %3816 = sub i32 %3814, 1
  %3817 = mul i32 %3814, %3816
  %3818 = urem i32 %3817, 2
  %3819 = icmp eq i32 %3818, 0
  %3820 = icmp slt i32 %3815, 10
  %3821 = or i1 %3819, %3820
  br i1 %3821, label %originalBBpart21063, label %originalBB1054alteredBB

originalBBpart21063:                              ; preds = %originalBB1054
  br label %3706, !dbg !2854, !llvm.loop !2855

3822:                                             ; preds = %originalBBpart21016
  %3823 = load i32, i32* @x.37
  %3824 = load i32, i32* @y.38
  %3825 = sub i32 %3823, 1
  %3826 = mul i32 %3823, %3825
  %3827 = urem i32 %3826, 2
  %3828 = icmp eq i32 %3827, 0
  %3829 = icmp slt i32 %3824, 10
  %3830 = or i1 %3828, %3829
  br i1 %3830, label %originalBB1065, label %originalBB1065alteredBB

originalBB1065:                                   ; preds = %3822, %originalBB1065alteredBB
  %3831 = load i32, i32* @x.37
  %3832 = load i32, i32* @y.38
  %3833 = sub i32 %3831, 1
  %3834 = mul i32 %3831, %3833
  %3835 = urem i32 %3834, 2
  %3836 = icmp eq i32 %3835, 0
  %3837 = icmp slt i32 %3832, 10
  %3838 = or i1 %3836, %3837
  br i1 %3838, label %originalBBpart21067, label %originalBB1065alteredBB

originalBBpart21067:                              ; preds = %originalBB1065
  br label %3839, !dbg !2857

3839:                                             ; preds = %originalBBpart21067, %originalBBpart21008, %originalBBpart21004
  %3840 = load i32, i32* @x.37
  %3841 = load i32, i32* @y.38
  %3842 = sub i32 %3840, 1
  %3843 = mul i32 %3840, %3842
  %3844 = urem i32 %3843, 2
  %3845 = icmp eq i32 %3844, 0
  %3846 = icmp slt i32 %3841, 10
  %3847 = or i1 %3845, %3846
  br i1 %3847, label %originalBB1069, label %originalBB1069alteredBB

originalBB1069:                                   ; preds = %3839, %originalBB1069alteredBB
  %3848 = load i32, i32* %47, align 4, !dbg !2858
  %3849 = call i32 @iswprint(i32 %3848) #10, !dbg !2860
  %3850 = icmp ne i32 %3849, 0, !dbg !2860
  %3851 = load i32, i32* @x.37
  %3852 = load i32, i32* @y.38
  %3853 = sub i32 %3851, 1
  %3854 = mul i32 %3851, %3853
  %3855 = urem i32 %3854, 2
  %3856 = icmp eq i32 %3855, 0
  %3857 = icmp slt i32 %3852, 10
  %3858 = or i1 %3856, %3857
  br i1 %3858, label %originalBBpart21071, label %originalBB1069alteredBB

originalBBpart21071:                              ; preds = %originalBB1069
  br i1 %3850, label %3876, label %3859, !dbg !2861

3859:                                             ; preds = %originalBBpart21071
  %3860 = load i32, i32* @x.37
  %3861 = load i32, i32* @y.38
  %3862 = sub i32 %3860, 1
  %3863 = mul i32 %3860, %3862
  %3864 = urem i32 %3863, 2
  %3865 = icmp eq i32 %3864, 0
  %3866 = icmp slt i32 %3861, 10
  %3867 = or i1 %3865, %3866
  br i1 %3867, label %originalBB1073, label %originalBB1073alteredBB

originalBB1073:                                   ; preds = %3859, %originalBB1073alteredBB
  store i8 0, i8* %45, align 1, !dbg !2862
  %3868 = load i32, i32* @x.37
  %3869 = load i32, i32* @y.38
  %3870 = sub i32 %3868, 1
  %3871 = mul i32 %3868, %3870
  %3872 = urem i32 %3871, 2
  %3873 = icmp eq i32 %3872, 0
  %3874 = icmp slt i32 %3869, 10
  %3875 = or i1 %3873, %3874
  br i1 %3875, label %originalBBpart21075, label %originalBB1073alteredBB

originalBBpart21075:                              ; preds = %originalBB1073
  br label %3876, !dbg !2863

3876:                                             ; preds = %originalBBpart21075, %originalBBpart21071
  %3877 = load i32, i32* @x.37
  %3878 = load i32, i32* @y.38
  %3879 = sub i32 %3877, 1
  %3880 = mul i32 %3877, %3879
  %3881 = urem i32 %3880, 2
  %3882 = icmp eq i32 %3881, 0
  %3883 = icmp slt i32 %3878, 10
  %3884 = or i1 %3882, %3883
  br i1 %3884, label %originalBB1077, label %originalBB1077alteredBB

originalBB1077:                                   ; preds = %3876, %originalBB1077alteredBB
  %3885 = load i64, i64* %48, align 8, !dbg !2864
  %3886 = load i64, i64* %44, align 8, !dbg !2865
  %3887 = add i64 %3886, %3885, !dbg !2865
  store i64 %3887, i64* %44, align 8, !dbg !2865
  %3888 = load i32, i32* @x.37
  %3889 = load i32, i32* @y.38
  %3890 = sub i32 %3888, 1
  %3891 = mul i32 %3888, %3890
  %3892 = urem i32 %3891, 2
  %3893 = icmp eq i32 %3892, 0
  %3894 = icmp slt i32 %3889, 10
  %3895 = or i1 %3893, %3894
  br i1 %3895, label %originalBBpart21085, label %originalBB1077alteredBB

originalBBpart21085:                              ; preds = %originalBB1077
  br label %3896

3896:                                             ; preds = %originalBBpart21085
  %3897 = load i32, i32* @x.37
  %3898 = load i32, i32* @y.38
  %3899 = sub i32 %3897, 1
  %3900 = mul i32 %3897, %3899
  %3901 = urem i32 %3900, 2
  %3902 = icmp eq i32 %3901, 0
  %3903 = icmp slt i32 %3898, 10
  %3904 = or i1 %3902, %3903
  br i1 %3904, label %originalBB1087, label %originalBB1087alteredBB

originalBB1087:                                   ; preds = %3896, %originalBB1087alteredBB
  %3905 = load i32, i32* @x.37
  %3906 = load i32, i32* @y.38
  %3907 = sub i32 %3905, 1
  %3908 = mul i32 %3905, %3907
  %3909 = urem i32 %3908, 2
  %3910 = icmp eq i32 %3909, 0
  %3911 = icmp slt i32 %3906, 10
  %3912 = or i1 %3910, %3911
  br i1 %3912, label %originalBBpart21089, label %originalBB1087alteredBB

originalBBpart21089:                              ; preds = %originalBB1087
  br label %3913

3913:                                             ; preds = %originalBBpart21089
  %3914 = load i32, i32* @x.37
  %3915 = load i32, i32* @y.38
  %3916 = sub i32 %3914, 1
  %3917 = mul i32 %3914, %3916
  %3918 = urem i32 %3917, 2
  %3919 = icmp eq i32 %3918, 0
  %3920 = icmp slt i32 %3915, 10
  %3921 = or i1 %3919, %3920
  br i1 %3921, label %originalBB1091, label %originalBB1091alteredBB

originalBB1091:                                   ; preds = %3913, %originalBB1091alteredBB
  %3922 = load i32, i32* @x.37
  %3923 = load i32, i32* @y.38
  %3924 = sub i32 %3922, 1
  %3925 = mul i32 %3922, %3924
  %3926 = urem i32 %3925, 2
  %3927 = icmp eq i32 %3926, 0
  %3928 = icmp slt i32 %3923, 10
  %3929 = or i1 %3927, %3928
  br i1 %3929, label %originalBBpart21093, label %originalBB1091alteredBB

originalBBpart21093:                              ; preds = %originalBB1091
  br label %3930

3930:                                             ; preds = %originalBBpart21093
  %3931 = load i32, i32* @x.37
  %3932 = load i32, i32* @y.38
  %3933 = sub i32 %3931, 1
  %3934 = mul i32 %3931, %3933
  %3935 = urem i32 %3934, 2
  %3936 = icmp eq i32 %3935, 0
  %3937 = icmp slt i32 %3932, 10
  %3938 = or i1 %3936, %3937
  br i1 %3938, label %originalBB1095, label %originalBB1095alteredBB

originalBB1095:                                   ; preds = %3930, %originalBB1095alteredBB
  %3939 = load i32, i32* @x.37
  %3940 = load i32, i32* @y.38
  %3941 = sub i32 %3939, 1
  %3942 = mul i32 %3939, %3941
  %3943 = urem i32 %3942, 2
  %3944 = icmp eq i32 %3943, 0
  %3945 = icmp slt i32 %3940, 10
  %3946 = or i1 %3944, %3945
  br i1 %3946, label %originalBBpart21097, label %originalBB1095alteredBB

originalBBpart21097:                              ; preds = %originalBB1095
  br label %3947, !dbg !2866

3947:                                             ; preds = %originalBBpart21097
  %3948 = load i32, i32* @x.37
  %3949 = load i32, i32* @y.38
  %3950 = sub i32 %3948, 1
  %3951 = mul i32 %3948, %3950
  %3952 = urem i32 %3951, 2
  %3953 = icmp eq i32 %3952, 0
  %3954 = icmp slt i32 %3949, 10
  %3955 = or i1 %3953, %3954
  br i1 %3955, label %originalBB1099, label %originalBB1099alteredBB

originalBB1099:                                   ; preds = %3947, %originalBB1099alteredBB
  %3956 = call i32 @mbsinit(%struct.__mbstate_t* %46) #13, !dbg !2867
  %3957 = icmp ne i32 %3956, 0, !dbg !2868
  %3958 = xor i1 %3957, true, !dbg !2868
  %3959 = load i32, i32* @x.37
  %3960 = load i32, i32* @y.38
  %3961 = sub i32 %3959, 1
  %3962 = mul i32 %3959, %3961
  %3963 = urem i32 %3962, 2
  %3964 = icmp eq i32 %3963, 0
  %3965 = icmp slt i32 %3960, 10
  %3966 = or i1 %3964, %3965
  br i1 %3966, label %originalBBpart21103, label %originalBB1099alteredBB

originalBBpart21103:                              ; preds = %originalBB1099
  br i1 %3958, label %3447, label %3967, !dbg !2866, !llvm.loop !2869

3967:                                             ; preds = %originalBBpart21103, %originalBBpart21000, %originalBBpart2955, %originalBBpart2947
  %3968 = load i32, i32* @x.37
  %3969 = load i32, i32* @y.38
  %3970 = sub i32 %3968, 1
  %3971 = mul i32 %3968, %3970
  %3972 = urem i32 %3971, 2
  %3973 = icmp eq i32 %3972, 0
  %3974 = icmp slt i32 %3969, 10
  %3975 = or i1 %3973, %3974
  br i1 %3975, label %originalBB1105, label %originalBB1105alteredBB

originalBB1105:                                   ; preds = %3967, %originalBB1105alteredBB
  %3976 = load i32, i32* @x.37
  %3977 = load i32, i32* @y.38
  %3978 = sub i32 %3976, 1
  %3979 = mul i32 %3976, %3978
  %3980 = urem i32 %3979, 2
  %3981 = icmp eq i32 %3980, 0
  %3982 = icmp slt i32 %3977, 10
  %3983 = or i1 %3981, %3982
  br i1 %3983, label %originalBBpart21107, label %originalBB1105alteredBB

originalBBpart21107:                              ; preds = %originalBB1105
  br label %3984

3984:                                             ; preds = %originalBBpart21107, %originalBBpart2896
  %3985 = load i32, i32* @x.37
  %3986 = load i32, i32* @y.38
  %3987 = sub i32 %3985, 1
  %3988 = mul i32 %3985, %3987
  %3989 = urem i32 %3988, 2
  %3990 = icmp eq i32 %3989, 0
  %3991 = icmp slt i32 %3986, 10
  %3992 = or i1 %3990, %3991
  br i1 %3992, label %originalBB1109, label %originalBB1109alteredBB

originalBB1109:                                   ; preds = %3984, %originalBB1109alteredBB
  %3993 = load i8, i8* %45, align 1, !dbg !2871
  %3994 = trunc i8 %3993 to i1, !dbg !2871
  %3995 = zext i1 %3994 to i8, !dbg !2872
  store i8 %3995, i8* %43, align 1, !dbg !2872
  %3996 = load i64, i64* %44, align 8, !dbg !2873
  %3997 = icmp ult i64 1, %3996, !dbg !2875
  %3998 = load i32, i32* @x.37
  %3999 = load i32, i32* @y.38
  %4000 = sub i32 %3998, 1
  %4001 = mul i32 %3998, %4000
  %4002 = urem i32 %4001, 2
  %4003 = icmp eq i32 %4002, 0
  %4004 = icmp slt i32 %3999, 10
  %4005 = or i1 %4003, %4004
  br i1 %4005, label %originalBBpart21111, label %originalBB1109alteredBB

originalBBpart21111:                              ; preds = %originalBB1109
  br i1 %3997, label %4044, label %4006, !dbg !2876

4006:                                             ; preds = %originalBBpart21111
  %4007 = load i32, i32* @x.37
  %4008 = load i32, i32* @y.38
  %4009 = sub i32 %4007, 1
  %4010 = mul i32 %4007, %4009
  %4011 = urem i32 %4010, 2
  %4012 = icmp eq i32 %4011, 0
  %4013 = icmp slt i32 %4008, 10
  %4014 = or i1 %4012, %4013
  br i1 %4014, label %originalBB1113, label %originalBB1113alteredBB

originalBB1113:                                   ; preds = %4006, %originalBB1113alteredBB
  %4015 = load i8, i8* %33, align 1, !dbg !2877
  %4016 = trunc i8 %4015 to i1, !dbg !2877
  %4017 = load i32, i32* @x.37
  %4018 = load i32, i32* @y.38
  %4019 = sub i32 %4017, 1
  %4020 = mul i32 %4017, %4019
  %4021 = urem i32 %4020, 2
  %4022 = icmp eq i32 %4021, 0
  %4023 = icmp slt i32 %4018, 10
  %4024 = or i1 %4022, %4023
  br i1 %4024, label %originalBBpart21115, label %originalBB1113alteredBB

originalBBpart21115:                              ; preds = %originalBB1113
  br i1 %4016, label %4025, label %5144, !dbg !2878

4025:                                             ; preds = %originalBBpart21115
  %4026 = load i32, i32* @x.37
  %4027 = load i32, i32* @y.38
  %4028 = sub i32 %4026, 1
  %4029 = mul i32 %4026, %4028
  %4030 = urem i32 %4029, 2
  %4031 = icmp eq i32 %4030, 0
  %4032 = icmp slt i32 %4027, 10
  %4033 = or i1 %4031, %4032
  br i1 %4033, label %originalBB1117, label %originalBB1117alteredBB

originalBB1117:                                   ; preds = %4025, %originalBB1117alteredBB
  %4034 = load i8, i8* %45, align 1, !dbg !2879
  %4035 = trunc i8 %4034 to i1, !dbg !2879
  %4036 = load i32, i32* @x.37
  %4037 = load i32, i32* @y.38
  %4038 = sub i32 %4036, 1
  %4039 = mul i32 %4036, %4038
  %4040 = urem i32 %4039, 2
  %4041 = icmp eq i32 %4040, 0
  %4042 = icmp slt i32 %4037, 10
  %4043 = or i1 %4041, %4042
  br i1 %4043, label %originalBBpart21119, label %originalBB1117alteredBB

originalBBpart21119:                              ; preds = %originalBB1117
  br i1 %4035, label %5144, label %4044, !dbg !2880

4044:                                             ; preds = %originalBBpart21119, %originalBBpart21111
  call void @llvm.dbg.declare(metadata i64* %50, metadata !2881, metadata !DIExpression()), !dbg !2883
  %4045 = load i32, i32* @x.37
  %4046 = load i32, i32* @y.38
  %4047 = sub i32 %4045, 1
  %4048 = mul i32 %4045, %4047
  %4049 = urem i32 %4048, 2
  %4050 = icmp eq i32 %4049, 0
  %4051 = icmp slt i32 %4046, 10
  %4052 = or i1 %4050, %4051
  br i1 %4052, label %originalBB1121, label %originalBB1121alteredBB

originalBB1121:                                   ; preds = %4044, %originalBB1121alteredBB
  %4053 = load i64, i64* %28, align 8, !dbg !2884
  %4054 = load i64, i64* %44, align 8, !dbg !2885
  %4055 = add i64 %4053, %4054, !dbg !2886
  store i64 %4055, i64* %50, align 8, !dbg !2883
  %4056 = load i32, i32* @x.37
  %4057 = load i32, i32* @y.38
  %4058 = sub i32 %4056, 1
  %4059 = mul i32 %4056, %4058
  %4060 = urem i32 %4059, 2
  %4061 = icmp eq i32 %4060, 0
  %4062 = icmp slt i32 %4057, 10
  %4063 = or i1 %4061, %4062
  br i1 %4063, label %originalBBpart21131, label %originalBB1121alteredBB

originalBBpart21131:                              ; preds = %originalBB1121
  br label %4064, !dbg !2887

4064:                                             ; preds = %originalBBpart21477, %originalBBpart21131
  %4065 = load i8, i8* %33, align 1, !dbg !2888
  %4066 = trunc i8 %4065 to i1, !dbg !2888
  br i1 %4066, label %4067, label %4652, !dbg !2893

4067:                                             ; preds = %4064
  %4068 = load i32, i32* @x.37
  %4069 = load i32, i32* @y.38
  %4070 = sub i32 %4068, 1
  %4071 = mul i32 %4068, %4070
  %4072 = urem i32 %4071, 2
  %4073 = icmp eq i32 %4072, 0
  %4074 = icmp slt i32 %4069, 10
  %4075 = or i1 %4073, %4074
  br i1 %4075, label %originalBB1133, label %originalBB1133alteredBB

originalBB1133:                                   ; preds = %4067, %originalBB1133alteredBB
  %4076 = load i8, i8* %45, align 1, !dbg !2894
  %4077 = trunc i8 %4076 to i1, !dbg !2894
  %4078 = load i32, i32* @x.37
  %4079 = load i32, i32* @y.38
  %4080 = sub i32 %4078, 1
  %4081 = mul i32 %4078, %4080
  %4082 = urem i32 %4081, 2
  %4083 = icmp eq i32 %4082, 0
  %4084 = icmp slt i32 %4079, 10
  %4085 = or i1 %4083, %4084
  br i1 %4085, label %originalBBpart21135, label %originalBB1133alteredBB

originalBBpart21135:                              ; preds = %originalBB1133
  br i1 %4077, label %4652, label %4086, !dbg !2895

4086:                                             ; preds = %originalBBpart21135
  %4087 = load i32, i32* @x.37
  %4088 = load i32, i32* @y.38
  %4089 = sub i32 %4087, 1
  %4090 = mul i32 %4087, %4089
  %4091 = urem i32 %4090, 2
  %4092 = icmp eq i32 %4091, 0
  %4093 = icmp slt i32 %4088, 10
  %4094 = or i1 %4092, %4093
  br i1 %4094, label %originalBB1137, label %originalBB1137alteredBB

originalBB1137:                                   ; preds = %4086, %originalBB1137alteredBB
  %4095 = load i32, i32* @x.37
  %4096 = load i32, i32* @y.38
  %4097 = sub i32 %4095, 1
  %4098 = mul i32 %4095, %4097
  %4099 = urem i32 %4098, 2
  %4100 = icmp eq i32 %4099, 0
  %4101 = icmp slt i32 %4096, 10
  %4102 = or i1 %4100, %4101
  br i1 %4102, label %originalBBpart21139, label %originalBB1137alteredBB

originalBBpart21139:                              ; preds = %originalBB1137
  br label %4103, !dbg !2896

4103:                                             ; preds = %originalBBpart21139
  %4104 = load i32, i32* @x.37
  %4105 = load i32, i32* @y.38
  %4106 = sub i32 %4104, 1
  %4107 = mul i32 %4104, %4106
  %4108 = urem i32 %4107, 2
  %4109 = icmp eq i32 %4108, 0
  %4110 = icmp slt i32 %4105, 10
  %4111 = or i1 %4109, %4110
  br i1 %4111, label %originalBB1141, label %originalBB1141alteredBB

originalBB1141:                                   ; preds = %4103, %originalBB1141alteredBB
  %4112 = load i8, i8* %35, align 1, !dbg !2898
  %4113 = trunc i8 %4112 to i1, !dbg !2898
  %4114 = load i32, i32* @x.37
  %4115 = load i32, i32* @y.38
  %4116 = sub i32 %4114, 1
  %4117 = mul i32 %4114, %4116
  %4118 = urem i32 %4117, 2
  %4119 = icmp eq i32 %4118, 0
  %4120 = icmp slt i32 %4115, 10
  %4121 = or i1 %4119, %4120
  br i1 %4121, label %originalBBpart21143, label %originalBB1141alteredBB

originalBBpart21143:                              ; preds = %originalBB1141
  br i1 %4113, label %4122, label %4139, !dbg !2901

4122:                                             ; preds = %originalBBpart21143
  %4123 = load i32, i32* @x.37
  %4124 = load i32, i32* @y.38
  %4125 = sub i32 %4123, 1
  %4126 = mul i32 %4123, %4125
  %4127 = urem i32 %4126, 2
  %4128 = icmp eq i32 %4127, 0
  %4129 = icmp slt i32 %4124, 10
  %4130 = or i1 %4128, %4129
  br i1 %4130, label %originalBB1145, label %originalBB1145alteredBB

originalBB1145:                                   ; preds = %4122, %originalBB1145alteredBB
  %4131 = load i32, i32* @x.37
  %4132 = load i32, i32* @y.38
  %4133 = sub i32 %4131, 1
  %4134 = mul i32 %4131, %4133
  %4135 = urem i32 %4134, 2
  %4136 = icmp eq i32 %4135, 0
  %4137 = icmp slt i32 %4132, 10
  %4138 = or i1 %4136, %4137
  br i1 %4138, label %originalBBpart21147, label %originalBB1145alteredBB

originalBBpart21147:                              ; preds = %originalBB1145
  br label %6606, !dbg !2898

4139:                                             ; preds = %originalBBpart21143
  %4140 = load i32, i32* @x.37
  %4141 = load i32, i32* @y.38
  %4142 = sub i32 %4140, 1
  %4143 = mul i32 %4140, %4142
  %4144 = urem i32 %4143, 2
  %4145 = icmp eq i32 %4144, 0
  %4146 = icmp slt i32 %4141, 10
  %4147 = or i1 %4145, %4146
  br i1 %4147, label %originalBB1149, label %originalBB1149alteredBB

originalBB1149:                                   ; preds = %4139, %originalBB1149alteredBB
  store i8 1, i8* %42, align 1, !dbg !2901
  %4148 = load i32, i32* %23, align 4, !dbg !2902
  %4149 = icmp eq i32 %4148, 2, !dbg !2902
  %4150 = load i32, i32* @x.37
  %4151 = load i32, i32* @y.38
  %4152 = sub i32 %4150, 1
  %4153 = mul i32 %4150, %4152
  %4154 = urem i32 %4153, 2
  %4155 = icmp eq i32 %4154, 0
  %4156 = icmp slt i32 %4151, 10
  %4157 = or i1 %4155, %4156
  br i1 %4157, label %originalBBpart21151, label %originalBB1149alteredBB

originalBBpart21151:                              ; preds = %originalBB1149
  br i1 %4149, label %4158, label %4390, !dbg !2902

4158:                                             ; preds = %originalBBpart21151
  %4159 = load i32, i32* @x.37
  %4160 = load i32, i32* @y.38
  %4161 = sub i32 %4159, 1
  %4162 = mul i32 %4159, %4161
  %4163 = urem i32 %4162, 2
  %4164 = icmp eq i32 %4163, 0
  %4165 = icmp slt i32 %4160, 10
  %4166 = or i1 %4164, %4165
  br i1 %4166, label %originalBB1153, label %originalBB1153alteredBB

originalBB1153:                                   ; preds = %4158, %originalBB1153alteredBB
  %4167 = load i8, i8* %36, align 1, !dbg !2902
  %4168 = trunc i8 %4167 to i1, !dbg !2902
  %4169 = load i32, i32* @x.37
  %4170 = load i32, i32* @y.38
  %4171 = sub i32 %4169, 1
  %4172 = mul i32 %4169, %4171
  %4173 = urem i32 %4172, 2
  %4174 = icmp eq i32 %4173, 0
  %4175 = icmp slt i32 %4170, 10
  %4176 = or i1 %4174, %4175
  br i1 %4176, label %originalBBpart21155, label %originalBB1153alteredBB

originalBBpart21155:                              ; preds = %originalBB1153
  br i1 %4168, label %4390, label %4177, !dbg !2901

4177:                                             ; preds = %originalBBpart21155
  %4178 = load i32, i32* @x.37
  %4179 = load i32, i32* @y.38
  %4180 = sub i32 %4178, 1
  %4181 = mul i32 %4178, %4180
  %4182 = urem i32 %4181, 2
  %4183 = icmp eq i32 %4182, 0
  %4184 = icmp slt i32 %4179, 10
  %4185 = or i1 %4183, %4184
  br i1 %4185, label %originalBB1157, label %originalBB1157alteredBB

originalBB1157:                                   ; preds = %4177, %originalBB1157alteredBB
  %4186 = load i32, i32* @x.37
  %4187 = load i32, i32* @y.38
  %4188 = sub i32 %4186, 1
  %4189 = mul i32 %4186, %4188
  %4190 = urem i32 %4189, 2
  %4191 = icmp eq i32 %4190, 0
  %4192 = icmp slt i32 %4187, 10
  %4193 = or i1 %4191, %4192
  br i1 %4193, label %originalBBpart21159, label %originalBB1157alteredBB

originalBBpart21159:                              ; preds = %originalBB1157
  br label %4194, !dbg !2904

4194:                                             ; preds = %originalBBpart21159
  %4195 = load i64, i64* %29, align 8, !dbg !2906
  %4196 = load i64, i64* %20, align 8, !dbg !2906
  %4197 = icmp ult i64 %4195, %4196, !dbg !2906
  br i1 %4197, label %4198, label %4218, !dbg !2909

4198:                                             ; preds = %4194
  %4199 = load i32, i32* @x.37
  %4200 = load i32, i32* @y.38
  %4201 = sub i32 %4199, 1
  %4202 = mul i32 %4199, %4201
  %4203 = urem i32 %4202, 2
  %4204 = icmp eq i32 %4203, 0
  %4205 = icmp slt i32 %4200, 10
  %4206 = or i1 %4204, %4205
  br i1 %4206, label %originalBB1161, label %originalBB1161alteredBB

originalBB1161:                                   ; preds = %4198, %originalBB1161alteredBB
  %4207 = load i8*, i8** %19, align 8, !dbg !2906
  %4208 = load i64, i64* %29, align 8, !dbg !2906
  %4209 = getelementptr inbounds i8, i8* %4207, i64 %4208, !dbg !2906
  store i8 39, i8* %4209, align 1, !dbg !2906
  %4210 = load i32, i32* @x.37
  %4211 = load i32, i32* @y.38
  %4212 = sub i32 %4210, 1
  %4213 = mul i32 %4210, %4212
  %4214 = urem i32 %4213, 2
  %4215 = icmp eq i32 %4214, 0
  %4216 = icmp slt i32 %4211, 10
  %4217 = or i1 %4215, %4216
  br i1 %4217, label %originalBBpart21163, label %originalBB1161alteredBB

originalBBpart21163:                              ; preds = %originalBB1161
  br label %4218, !dbg !2906

4218:                                             ; preds = %originalBBpart21163, %4194
  %4219 = load i32, i32* @x.37
  %4220 = load i32, i32* @y.38
  %4221 = sub i32 %4219, 1
  %4222 = mul i32 %4219, %4221
  %4223 = urem i32 %4222, 2
  %4224 = icmp eq i32 %4223, 0
  %4225 = icmp slt i32 %4220, 10
  %4226 = or i1 %4224, %4225
  br i1 %4226, label %originalBB1165, label %originalBB1165alteredBB

originalBB1165:                                   ; preds = %4218, %originalBB1165alteredBB
  %4227 = load i64, i64* %29, align 8, !dbg !2909
  %4228 = add i64 %4227, 1, !dbg !2909
  store i64 %4228, i64* %29, align 8, !dbg !2909
  %4229 = load i32, i32* @x.37
  %4230 = load i32, i32* @y.38
  %4231 = sub i32 %4229, 1
  %4232 = mul i32 %4229, %4231
  %4233 = urem i32 %4232, 2
  %4234 = icmp eq i32 %4233, 0
  %4235 = icmp slt i32 %4230, 10
  %4236 = or i1 %4234, %4235
  br i1 %4236, label %originalBBpart21178, label %originalBB1165alteredBB

originalBBpart21178:                              ; preds = %originalBB1165
  br label %4237, !dbg !2909

4237:                                             ; preds = %originalBBpart21178
  %4238 = load i32, i32* @x.37
  %4239 = load i32, i32* @y.38
  %4240 = sub i32 %4238, 1
  %4241 = mul i32 %4238, %4240
  %4242 = urem i32 %4241, 2
  %4243 = icmp eq i32 %4242, 0
  %4244 = icmp slt i32 %4239, 10
  %4245 = or i1 %4243, %4244
  br i1 %4245, label %originalBB1180, label %originalBB1180alteredBB

originalBB1180:                                   ; preds = %4237, %originalBB1180alteredBB
  %4246 = load i32, i32* @x.37
  %4247 = load i32, i32* @y.38
  %4248 = sub i32 %4246, 1
  %4249 = mul i32 %4246, %4248
  %4250 = urem i32 %4249, 2
  %4251 = icmp eq i32 %4250, 0
  %4252 = icmp slt i32 %4247, 10
  %4253 = or i1 %4251, %4252
  br i1 %4253, label %originalBBpart21182, label %originalBB1180alteredBB

originalBBpart21182:                              ; preds = %originalBB1180
  br label %4254, !dbg !2904

4254:                                             ; preds = %originalBBpart21182
  %4255 = load i64, i64* %29, align 8, !dbg !2910
  %4256 = load i64, i64* %20, align 8, !dbg !2910
  %4257 = icmp ult i64 %4255, %4256, !dbg !2910
  br i1 %4257, label %4258, label %4278, !dbg !2913

4258:                                             ; preds = %4254
  %4259 = load i32, i32* @x.37
  %4260 = load i32, i32* @y.38
  %4261 = sub i32 %4259, 1
  %4262 = mul i32 %4259, %4261
  %4263 = urem i32 %4262, 2
  %4264 = icmp eq i32 %4263, 0
  %4265 = icmp slt i32 %4260, 10
  %4266 = or i1 %4264, %4265
  br i1 %4266, label %originalBB1184, label %originalBB1184alteredBB

originalBB1184:                                   ; preds = %4258, %originalBB1184alteredBB
  %4267 = load i8*, i8** %19, align 8, !dbg !2910
  %4268 = load i64, i64* %29, align 8, !dbg !2910
  %4269 = getelementptr inbounds i8, i8* %4267, i64 %4268, !dbg !2910
  store i8 36, i8* %4269, align 1, !dbg !2910
  %4270 = load i32, i32* @x.37
  %4271 = load i32, i32* @y.38
  %4272 = sub i32 %4270, 1
  %4273 = mul i32 %4270, %4272
  %4274 = urem i32 %4273, 2
  %4275 = icmp eq i32 %4274, 0
  %4276 = icmp slt i32 %4271, 10
  %4277 = or i1 %4275, %4276
  br i1 %4277, label %originalBBpart21186, label %originalBB1184alteredBB

originalBBpart21186:                              ; preds = %originalBB1184
  br label %4278, !dbg !2910

4278:                                             ; preds = %originalBBpart21186, %4254
  %4279 = load i32, i32* @x.37
  %4280 = load i32, i32* @y.38
  %4281 = sub i32 %4279, 1
  %4282 = mul i32 %4279, %4281
  %4283 = urem i32 %4282, 2
  %4284 = icmp eq i32 %4283, 0
  %4285 = icmp slt i32 %4280, 10
  %4286 = or i1 %4284, %4285
  br i1 %4286, label %originalBB1188, label %originalBB1188alteredBB

originalBB1188:                                   ; preds = %4278, %originalBB1188alteredBB
  %4287 = load i64, i64* %29, align 8, !dbg !2913
  %4288 = add i64 %4287, 1, !dbg !2913
  store i64 %4288, i64* %29, align 8, !dbg !2913
  %4289 = load i32, i32* @x.37
  %4290 = load i32, i32* @y.38
  %4291 = sub i32 %4289, 1
  %4292 = mul i32 %4289, %4291
  %4293 = urem i32 %4292, 2
  %4294 = icmp eq i32 %4293, 0
  %4295 = icmp slt i32 %4290, 10
  %4296 = or i1 %4294, %4295
  br i1 %4296, label %originalBBpart21203, label %originalBB1188alteredBB

originalBBpart21203:                              ; preds = %originalBB1188
  br label %4297, !dbg !2913

4297:                                             ; preds = %originalBBpart21203
  %4298 = load i32, i32* @x.37
  %4299 = load i32, i32* @y.38
  %4300 = sub i32 %4298, 1
  %4301 = mul i32 %4298, %4300
  %4302 = urem i32 %4301, 2
  %4303 = icmp eq i32 %4302, 0
  %4304 = icmp slt i32 %4299, 10
  %4305 = or i1 %4303, %4304
  br i1 %4305, label %originalBB1205, label %originalBB1205alteredBB

originalBB1205:                                   ; preds = %4297, %originalBB1205alteredBB
  %4306 = load i32, i32* @x.37
  %4307 = load i32, i32* @y.38
  %4308 = sub i32 %4306, 1
  %4309 = mul i32 %4306, %4308
  %4310 = urem i32 %4309, 2
  %4311 = icmp eq i32 %4310, 0
  %4312 = icmp slt i32 %4307, 10
  %4313 = or i1 %4311, %4312
  br i1 %4313, label %originalBBpart21207, label %originalBB1205alteredBB

originalBBpart21207:                              ; preds = %originalBB1205
  br label %4314, !dbg !2904

4314:                                             ; preds = %originalBBpart21207
  %4315 = load i32, i32* @x.37
  %4316 = load i32, i32* @y.38
  %4317 = sub i32 %4315, 1
  %4318 = mul i32 %4315, %4317
  %4319 = urem i32 %4318, 2
  %4320 = icmp eq i32 %4319, 0
  %4321 = icmp slt i32 %4316, 10
  %4322 = or i1 %4320, %4321
  br i1 %4322, label %originalBB1209, label %originalBB1209alteredBB

originalBB1209:                                   ; preds = %4314, %originalBB1209alteredBB
  %4323 = load i64, i64* %29, align 8, !dbg !2914
  %4324 = load i64, i64* %20, align 8, !dbg !2914
  %4325 = icmp ult i64 %4323, %4324, !dbg !2914
  %4326 = load i32, i32* @x.37
  %4327 = load i32, i32* @y.38
  %4328 = sub i32 %4326, 1
  %4329 = mul i32 %4326, %4328
  %4330 = urem i32 %4329, 2
  %4331 = icmp eq i32 %4330, 0
  %4332 = icmp slt i32 %4327, 10
  %4333 = or i1 %4331, %4332
  br i1 %4333, label %originalBBpart21211, label %originalBB1209alteredBB

originalBBpart21211:                              ; preds = %originalBB1209
  br i1 %4325, label %4334, label %4354, !dbg !2917

4334:                                             ; preds = %originalBBpart21211
  %4335 = load i32, i32* @x.37
  %4336 = load i32, i32* @y.38
  %4337 = sub i32 %4335, 1
  %4338 = mul i32 %4335, %4337
  %4339 = urem i32 %4338, 2
  %4340 = icmp eq i32 %4339, 0
  %4341 = icmp slt i32 %4336, 10
  %4342 = or i1 %4340, %4341
  br i1 %4342, label %originalBB1213, label %originalBB1213alteredBB

originalBB1213:                                   ; preds = %4334, %originalBB1213alteredBB
  %4343 = load i8*, i8** %19, align 8, !dbg !2914
  %4344 = load i64, i64* %29, align 8, !dbg !2914
  %4345 = getelementptr inbounds i8, i8* %4343, i64 %4344, !dbg !2914
  store i8 39, i8* %4345, align 1, !dbg !2914
  %4346 = load i32, i32* @x.37
  %4347 = load i32, i32* @y.38
  %4348 = sub i32 %4346, 1
  %4349 = mul i32 %4346, %4348
  %4350 = urem i32 %4349, 2
  %4351 = icmp eq i32 %4350, 0
  %4352 = icmp slt i32 %4347, 10
  %4353 = or i1 %4351, %4352
  br i1 %4353, label %originalBBpart21215, label %originalBB1213alteredBB

originalBBpart21215:                              ; preds = %originalBB1213
  br label %4354, !dbg !2914

4354:                                             ; preds = %originalBBpart21215, %originalBBpart21211
  %4355 = load i32, i32* @x.37
  %4356 = load i32, i32* @y.38
  %4357 = sub i32 %4355, 1
  %4358 = mul i32 %4355, %4357
  %4359 = urem i32 %4358, 2
  %4360 = icmp eq i32 %4359, 0
  %4361 = icmp slt i32 %4356, 10
  %4362 = or i1 %4360, %4361
  br i1 %4362, label %originalBB1217, label %originalBB1217alteredBB

originalBB1217:                                   ; preds = %4354, %originalBB1217alteredBB
  %4363 = load i64, i64* %29, align 8, !dbg !2917
  %4364 = add i64 %4363, 1, !dbg !2917
  store i64 %4364, i64* %29, align 8, !dbg !2917
  %4365 = load i32, i32* @x.37
  %4366 = load i32, i32* @y.38
  %4367 = sub i32 %4365, 1
  %4368 = mul i32 %4365, %4367
  %4369 = urem i32 %4368, 2
  %4370 = icmp eq i32 %4369, 0
  %4371 = icmp slt i32 %4366, 10
  %4372 = or i1 %4370, %4371
  br i1 %4372, label %originalBBpart21225, label %originalBB1217alteredBB

originalBBpart21225:                              ; preds = %originalBB1217
  br label %4373, !dbg !2917

4373:                                             ; preds = %originalBBpart21225
  %4374 = load i32, i32* @x.37
  %4375 = load i32, i32* @y.38
  %4376 = sub i32 %4374, 1
  %4377 = mul i32 %4374, %4376
  %4378 = urem i32 %4377, 2
  %4379 = icmp eq i32 %4378, 0
  %4380 = icmp slt i32 %4375, 10
  %4381 = or i1 %4379, %4380
  br i1 %4381, label %originalBB1227, label %originalBB1227alteredBB

originalBB1227:                                   ; preds = %4373, %originalBB1227alteredBB
  store i8 1, i8* %36, align 1, !dbg !2904
  %4382 = load i32, i32* @x.37
  %4383 = load i32, i32* @y.38
  %4384 = sub i32 %4382, 1
  %4385 = mul i32 %4382, %4384
  %4386 = urem i32 %4385, 2
  %4387 = icmp eq i32 %4386, 0
  %4388 = icmp slt i32 %4383, 10
  %4389 = or i1 %4387, %4388
  br i1 %4389, label %originalBBpart21229, label %originalBB1227alteredBB

originalBBpart21229:                              ; preds = %originalBB1227
  br label %4390, !dbg !2904

4390:                                             ; preds = %originalBBpart21229, %originalBBpart21155, %originalBBpart21151
  br label %4391, !dbg !2901

4391:                                             ; preds = %4390
  %4392 = load i32, i32* @x.37
  %4393 = load i32, i32* @y.38
  %4394 = sub i32 %4392, 1
  %4395 = mul i32 %4392, %4394
  %4396 = urem i32 %4395, 2
  %4397 = icmp eq i32 %4396, 0
  %4398 = icmp slt i32 %4393, 10
  %4399 = or i1 %4397, %4398
  br i1 %4399, label %originalBB1231, label %originalBB1231alteredBB

originalBB1231:                                   ; preds = %4391, %originalBB1231alteredBB
  %4400 = load i64, i64* %29, align 8, !dbg !2918
  %4401 = load i64, i64* %20, align 8, !dbg !2918
  %4402 = icmp ult i64 %4400, %4401, !dbg !2918
  %4403 = load i32, i32* @x.37
  %4404 = load i32, i32* @y.38
  %4405 = sub i32 %4403, 1
  %4406 = mul i32 %4403, %4405
  %4407 = urem i32 %4406, 2
  %4408 = icmp eq i32 %4407, 0
  %4409 = icmp slt i32 %4404, 10
  %4410 = or i1 %4408, %4409
  br i1 %4410, label %originalBBpart21233, label %originalBB1231alteredBB

originalBBpart21233:                              ; preds = %originalBB1231
  br i1 %4402, label %4411, label %4431, !dbg !2921

4411:                                             ; preds = %originalBBpart21233
  %4412 = load i32, i32* @x.37
  %4413 = load i32, i32* @y.38
  %4414 = sub i32 %4412, 1
  %4415 = mul i32 %4412, %4414
  %4416 = urem i32 %4415, 2
  %4417 = icmp eq i32 %4416, 0
  %4418 = icmp slt i32 %4413, 10
  %4419 = or i1 %4417, %4418
  br i1 %4419, label %originalBB1235, label %originalBB1235alteredBB

originalBB1235:                                   ; preds = %4411, %originalBB1235alteredBB
  %4420 = load i8*, i8** %19, align 8, !dbg !2918
  %4421 = load i64, i64* %29, align 8, !dbg !2918
  %4422 = getelementptr inbounds i8, i8* %4420, i64 %4421, !dbg !2918
  store i8 92, i8* %4422, align 1, !dbg !2918
  %4423 = load i32, i32* @x.37
  %4424 = load i32, i32* @y.38
  %4425 = sub i32 %4423, 1
  %4426 = mul i32 %4423, %4425
  %4427 = urem i32 %4426, 2
  %4428 = icmp eq i32 %4427, 0
  %4429 = icmp slt i32 %4424, 10
  %4430 = or i1 %4428, %4429
  br i1 %4430, label %originalBBpart21237, label %originalBB1235alteredBB

originalBBpart21237:                              ; preds = %originalBB1235
  br label %4431, !dbg !2918

4431:                                             ; preds = %originalBBpart21237, %originalBBpart21233
  %4432 = load i32, i32* @x.37
  %4433 = load i32, i32* @y.38
  %4434 = sub i32 %4432, 1
  %4435 = mul i32 %4432, %4434
  %4436 = urem i32 %4435, 2
  %4437 = icmp eq i32 %4436, 0
  %4438 = icmp slt i32 %4433, 10
  %4439 = or i1 %4437, %4438
  br i1 %4439, label %originalBB1239, label %originalBB1239alteredBB

originalBB1239:                                   ; preds = %4431, %originalBB1239alteredBB
  %4440 = load i64, i64* %29, align 8, !dbg !2921
  %4441 = add i64 %4440, 1, !dbg !2921
  store i64 %4441, i64* %29, align 8, !dbg !2921
  %4442 = load i32, i32* @x.37
  %4443 = load i32, i32* @y.38
  %4444 = sub i32 %4442, 1
  %4445 = mul i32 %4442, %4444
  %4446 = urem i32 %4445, 2
  %4447 = icmp eq i32 %4446, 0
  %4448 = icmp slt i32 %4443, 10
  %4449 = or i1 %4447, %4448
  br i1 %4449, label %originalBBpart21247, label %originalBB1239alteredBB

originalBBpart21247:                              ; preds = %originalBB1239
  br label %4450, !dbg !2921

4450:                                             ; preds = %originalBBpart21247
  %4451 = load i32, i32* @x.37
  %4452 = load i32, i32* @y.38
  %4453 = sub i32 %4451, 1
  %4454 = mul i32 %4451, %4453
  %4455 = urem i32 %4454, 2
  %4456 = icmp eq i32 %4455, 0
  %4457 = icmp slt i32 %4452, 10
  %4458 = or i1 %4456, %4457
  br i1 %4458, label %originalBB1249, label %originalBB1249alteredBB

originalBB1249:                                   ; preds = %4450, %originalBB1249alteredBB
  %4459 = load i32, i32* @x.37
  %4460 = load i32, i32* @y.38
  %4461 = sub i32 %4459, 1
  %4462 = mul i32 %4459, %4461
  %4463 = urem i32 %4462, 2
  %4464 = icmp eq i32 %4463, 0
  %4465 = icmp slt i32 %4460, 10
  %4466 = or i1 %4464, %4465
  br i1 %4466, label %originalBBpart21251, label %originalBB1249alteredBB

originalBBpart21251:                              ; preds = %originalBB1249
  br label %4467, !dbg !2901

4467:                                             ; preds = %originalBBpart21251
  %4468 = load i32, i32* @x.37
  %4469 = load i32, i32* @y.38
  %4470 = sub i32 %4468, 1
  %4471 = mul i32 %4468, %4470
  %4472 = urem i32 %4471, 2
  %4473 = icmp eq i32 %4472, 0
  %4474 = icmp slt i32 %4469, 10
  %4475 = or i1 %4473, %4474
  br i1 %4475, label %originalBB1253, label %originalBB1253alteredBB

originalBB1253:                                   ; preds = %4467, %originalBB1253alteredBB
  %4476 = load i32, i32* @x.37
  %4477 = load i32, i32* @y.38
  %4478 = sub i32 %4476, 1
  %4479 = mul i32 %4476, %4478
  %4480 = urem i32 %4479, 2
  %4481 = icmp eq i32 %4480, 0
  %4482 = icmp slt i32 %4477, 10
  %4483 = or i1 %4481, %4482
  br i1 %4483, label %originalBBpart21255, label %originalBB1253alteredBB

originalBBpart21255:                              ; preds = %originalBB1253
  br label %4484, !dbg !2922

4484:                                             ; preds = %originalBBpart21255
  %4485 = load i32, i32* @x.37
  %4486 = load i32, i32* @y.38
  %4487 = sub i32 %4485, 1
  %4488 = mul i32 %4485, %4487
  %4489 = urem i32 %4488, 2
  %4490 = icmp eq i32 %4489, 0
  %4491 = icmp slt i32 %4486, 10
  %4492 = or i1 %4490, %4491
  br i1 %4492, label %originalBB1257, label %originalBB1257alteredBB

originalBB1257:                                   ; preds = %4484, %originalBB1257alteredBB
  %4493 = load i64, i64* %29, align 8, !dbg !2923
  %4494 = load i64, i64* %20, align 8, !dbg !2923
  %4495 = icmp ult i64 %4493, %4494, !dbg !2923
  %4496 = load i32, i32* @x.37
  %4497 = load i32, i32* @y.38
  %4498 = sub i32 %4496, 1
  %4499 = mul i32 %4496, %4498
  %4500 = urem i32 %4499, 2
  %4501 = icmp eq i32 %4500, 0
  %4502 = icmp slt i32 %4497, 10
  %4503 = or i1 %4501, %4502
  br i1 %4503, label %originalBBpart21259, label %originalBB1257alteredBB

originalBBpart21259:                              ; preds = %originalBB1257
  br i1 %4495, label %4504, label %4529, !dbg !2926

4504:                                             ; preds = %originalBBpart21259
  %4505 = load i32, i32* @x.37
  %4506 = load i32, i32* @y.38
  %4507 = sub i32 %4505, 1
  %4508 = mul i32 %4505, %4507
  %4509 = urem i32 %4508, 2
  %4510 = icmp eq i32 %4509, 0
  %4511 = icmp slt i32 %4506, 10
  %4512 = or i1 %4510, %4511
  br i1 %4512, label %originalBB1261, label %originalBB1261alteredBB

originalBB1261:                                   ; preds = %4504, %originalBB1261alteredBB
  %4513 = load i8, i8* %39, align 1, !dbg !2923
  %4514 = zext i8 %4513 to i32, !dbg !2923
  %4515 = ashr i32 %4514, 6, !dbg !2923
  %4516 = add nsw i32 48, %4515, !dbg !2923
  %4517 = trunc i32 %4516 to i8, !dbg !2923
  %4518 = load i8*, i8** %19, align 8, !dbg !2923
  %4519 = load i64, i64* %29, align 8, !dbg !2923
  %4520 = getelementptr inbounds i8, i8* %4518, i64 %4519, !dbg !2923
  store i8 %4517, i8* %4520, align 1, !dbg !2923
  %4521 = load i32, i32* @x.37
  %4522 = load i32, i32* @y.38
  %4523 = sub i32 %4521, 1
  %4524 = mul i32 %4521, %4523
  %4525 = urem i32 %4524, 2
  %4526 = icmp eq i32 %4525, 0
  %4527 = icmp slt i32 %4522, 10
  %4528 = or i1 %4526, %4527
  br i1 %4528, label %originalBBpart21274, label %originalBB1261alteredBB

originalBBpart21274:                              ; preds = %originalBB1261
  br label %4529, !dbg !2923

4529:                                             ; preds = %originalBBpart21274, %originalBBpart21259
  %4530 = load i32, i32* @x.37
  %4531 = load i32, i32* @y.38
  %4532 = sub i32 %4530, 1
  %4533 = mul i32 %4530, %4532
  %4534 = urem i32 %4533, 2
  %4535 = icmp eq i32 %4534, 0
  %4536 = icmp slt i32 %4531, 10
  %4537 = or i1 %4535, %4536
  br i1 %4537, label %originalBB1276, label %originalBB1276alteredBB

originalBB1276:                                   ; preds = %4529, %originalBB1276alteredBB
  %4538 = load i64, i64* %29, align 8, !dbg !2926
  %4539 = add i64 %4538, 1, !dbg !2926
  store i64 %4539, i64* %29, align 8, !dbg !2926
  %4540 = load i32, i32* @x.37
  %4541 = load i32, i32* @y.38
  %4542 = sub i32 %4540, 1
  %4543 = mul i32 %4540, %4542
  %4544 = urem i32 %4543, 2
  %4545 = icmp eq i32 %4544, 0
  %4546 = icmp slt i32 %4541, 10
  %4547 = or i1 %4545, %4546
  br i1 %4547, label %originalBBpart21289, label %originalBB1276alteredBB

originalBBpart21289:                              ; preds = %originalBB1276
  br label %4548, !dbg !2926

4548:                                             ; preds = %originalBBpart21289
  %4549 = load i32, i32* @x.37
  %4550 = load i32, i32* @y.38
  %4551 = sub i32 %4549, 1
  %4552 = mul i32 %4549, %4551
  %4553 = urem i32 %4552, 2
  %4554 = icmp eq i32 %4553, 0
  %4555 = icmp slt i32 %4550, 10
  %4556 = or i1 %4554, %4555
  br i1 %4556, label %originalBB1291, label %originalBB1291alteredBB

originalBB1291:                                   ; preds = %4548, %originalBB1291alteredBB
  %4557 = load i32, i32* @x.37
  %4558 = load i32, i32* @y.38
  %4559 = sub i32 %4557, 1
  %4560 = mul i32 %4557, %4559
  %4561 = urem i32 %4560, 2
  %4562 = icmp eq i32 %4561, 0
  %4563 = icmp slt i32 %4558, 10
  %4564 = or i1 %4562, %4563
  br i1 %4564, label %originalBBpart21293, label %originalBB1291alteredBB

originalBBpart21293:                              ; preds = %originalBB1291
  br label %4565, !dbg !2927

4565:                                             ; preds = %originalBBpart21293
  %4566 = load i32, i32* @x.37
  %4567 = load i32, i32* @y.38
  %4568 = sub i32 %4566, 1
  %4569 = mul i32 %4566, %4568
  %4570 = urem i32 %4569, 2
  %4571 = icmp eq i32 %4570, 0
  %4572 = icmp slt i32 %4567, 10
  %4573 = or i1 %4571, %4572
  br i1 %4573, label %originalBB1295, label %originalBB1295alteredBB

originalBB1295:                                   ; preds = %4565, %originalBB1295alteredBB
  %4574 = load i64, i64* %29, align 8, !dbg !2928
  %4575 = load i64, i64* %20, align 8, !dbg !2928
  %4576 = icmp ult i64 %4574, %4575, !dbg !2928
  %4577 = load i32, i32* @x.37
  %4578 = load i32, i32* @y.38
  %4579 = sub i32 %4577, 1
  %4580 = mul i32 %4577, %4579
  %4581 = urem i32 %4580, 2
  %4582 = icmp eq i32 %4581, 0
  %4583 = icmp slt i32 %4578, 10
  %4584 = or i1 %4582, %4583
  br i1 %4584, label %originalBBpart21297, label %originalBB1295alteredBB

originalBBpart21297:                              ; preds = %originalBB1295
  br i1 %4576, label %4585, label %4611, !dbg !2931

4585:                                             ; preds = %originalBBpart21297
  %4586 = load i32, i32* @x.37
  %4587 = load i32, i32* @y.38
  %4588 = sub i32 %4586, 1
  %4589 = mul i32 %4586, %4588
  %4590 = urem i32 %4589, 2
  %4591 = icmp eq i32 %4590, 0
  %4592 = icmp slt i32 %4587, 10
  %4593 = or i1 %4591, %4592
  br i1 %4593, label %originalBB1299, label %originalBB1299alteredBB

originalBB1299:                                   ; preds = %4585, %originalBB1299alteredBB
  %4594 = load i8, i8* %39, align 1, !dbg !2928
  %4595 = zext i8 %4594 to i32, !dbg !2928
  %4596 = ashr i32 %4595, 3, !dbg !2928
  %4597 = and i32 %4596, 7, !dbg !2928
  %4598 = add nsw i32 48, %4597, !dbg !2928
  %4599 = trunc i32 %4598 to i8, !dbg !2928
  %4600 = load i8*, i8** %19, align 8, !dbg !2928
  %4601 = load i64, i64* %29, align 8, !dbg !2928
  %4602 = getelementptr inbounds i8, i8* %4600, i64 %4601, !dbg !2928
  store i8 %4599, i8* %4602, align 1, !dbg !2928
  %4603 = load i32, i32* @x.37
  %4604 = load i32, i32* @y.38
  %4605 = sub i32 %4603, 1
  %4606 = mul i32 %4603, %4605
  %4607 = urem i32 %4606, 2
  %4608 = icmp eq i32 %4607, 0
  %4609 = icmp slt i32 %4604, 10
  %4610 = or i1 %4608, %4609
  br i1 %4610, label %originalBBpart21315, label %originalBB1299alteredBB

originalBBpart21315:                              ; preds = %originalBB1299
  br label %4611, !dbg !2928

4611:                                             ; preds = %originalBBpart21315, %originalBBpart21297
  %4612 = load i32, i32* @x.37
  %4613 = load i32, i32* @y.38
  %4614 = sub i32 %4612, 1
  %4615 = mul i32 %4612, %4614
  %4616 = urem i32 %4615, 2
  %4617 = icmp eq i32 %4616, 0
  %4618 = icmp slt i32 %4613, 10
  %4619 = or i1 %4617, %4618
  br i1 %4619, label %originalBB1317, label %originalBB1317alteredBB

originalBB1317:                                   ; preds = %4611, %originalBB1317alteredBB
  %4620 = load i64, i64* %29, align 8, !dbg !2931
  %4621 = add i64 %4620, 1, !dbg !2931
  store i64 %4621, i64* %29, align 8, !dbg !2931
  %4622 = load i32, i32* @x.37
  %4623 = load i32, i32* @y.38
  %4624 = sub i32 %4622, 1
  %4625 = mul i32 %4622, %4624
  %4626 = urem i32 %4625, 2
  %4627 = icmp eq i32 %4626, 0
  %4628 = icmp slt i32 %4623, 10
  %4629 = or i1 %4627, %4628
  br i1 %4629, label %originalBBpart21328, label %originalBB1317alteredBB

originalBBpart21328:                              ; preds = %originalBB1317
  br label %4630, !dbg !2931

4630:                                             ; preds = %originalBBpart21328
  %4631 = load i32, i32* @x.37
  %4632 = load i32, i32* @y.38
  %4633 = sub i32 %4631, 1
  %4634 = mul i32 %4631, %4633
  %4635 = urem i32 %4634, 2
  %4636 = icmp eq i32 %4635, 0
  %4637 = icmp slt i32 %4632, 10
  %4638 = or i1 %4636, %4637
  br i1 %4638, label %originalBB1330, label %originalBB1330alteredBB

originalBB1330:                                   ; preds = %4630, %originalBB1330alteredBB
  %4639 = load i8, i8* %39, align 1, !dbg !2932
  %4640 = zext i8 %4639 to i32, !dbg !2932
  %4641 = and i32 %4640, 7, !dbg !2933
  %4642 = add nsw i32 48, %4641, !dbg !2934
  %4643 = trunc i32 %4642 to i8, !dbg !2935
  store i8 %4643, i8* %39, align 1, !dbg !2936
  %4644 = load i32, i32* @x.37
  %4645 = load i32, i32* @y.38
  %4646 = sub i32 %4644, 1
  %4647 = mul i32 %4644, %4646
  %4648 = urem i32 %4647, 2
  %4649 = icmp eq i32 %4648, 0
  %4650 = icmp slt i32 %4645, 10
  %4651 = or i1 %4649, %4650
  br i1 %4651, label %originalBBpart21346, label %originalBB1330alteredBB

originalBBpart21346:                              ; preds = %originalBB1330
  br label %4765, !dbg !2937

4652:                                             ; preds = %originalBBpart21135, %4064
  %4653 = load i32, i32* @x.37
  %4654 = load i32, i32* @y.38
  %4655 = sub i32 %4653, 1
  %4656 = mul i32 %4653, %4655
  %4657 = urem i32 %4656, 2
  %4658 = icmp eq i32 %4657, 0
  %4659 = icmp slt i32 %4654, 10
  %4660 = or i1 %4658, %4659
  br i1 %4660, label %originalBB1348, label %originalBB1348alteredBB

originalBB1348:                                   ; preds = %4652, %originalBB1348alteredBB
  %4661 = load i8, i8* %41, align 1, !dbg !2938
  %4662 = trunc i8 %4661 to i1, !dbg !2938
  %4663 = load i32, i32* @x.37
  %4664 = load i32, i32* @y.38
  %4665 = sub i32 %4663, 1
  %4666 = mul i32 %4663, %4665
  %4667 = urem i32 %4666, 2
  %4668 = icmp eq i32 %4667, 0
  %4669 = icmp slt i32 %4664, 10
  %4670 = or i1 %4668, %4669
  br i1 %4670, label %originalBBpart21350, label %originalBB1348alteredBB

originalBBpart21350:                              ; preds = %originalBB1348
  br i1 %4662, label %4671, label %4748, !dbg !2940

4671:                                             ; preds = %originalBBpart21350
  br label %4672, !dbg !2941

4672:                                             ; preds = %4671
  %4673 = load i32, i32* @x.37
  %4674 = load i32, i32* @y.38
  %4675 = sub i32 %4673, 1
  %4676 = mul i32 %4673, %4675
  %4677 = urem i32 %4676, 2
  %4678 = icmp eq i32 %4677, 0
  %4679 = icmp slt i32 %4674, 10
  %4680 = or i1 %4678, %4679
  br i1 %4680, label %originalBB1352, label %originalBB1352alteredBB

originalBB1352:                                   ; preds = %4672, %originalBB1352alteredBB
  %4681 = load i64, i64* %29, align 8, !dbg !2943
  %4682 = load i64, i64* %20, align 8, !dbg !2943
  %4683 = icmp ult i64 %4681, %4682, !dbg !2943
  %4684 = load i32, i32* @x.37
  %4685 = load i32, i32* @y.38
  %4686 = sub i32 %4684, 1
  %4687 = mul i32 %4684, %4686
  %4688 = urem i32 %4687, 2
  %4689 = icmp eq i32 %4688, 0
  %4690 = icmp slt i32 %4685, 10
  %4691 = or i1 %4689, %4690
  br i1 %4691, label %originalBBpart21354, label %originalBB1352alteredBB

originalBBpart21354:                              ; preds = %originalBB1352
  br i1 %4683, label %4692, label %4712, !dbg !2946

4692:                                             ; preds = %originalBBpart21354
  %4693 = load i32, i32* @x.37
  %4694 = load i32, i32* @y.38
  %4695 = sub i32 %4693, 1
  %4696 = mul i32 %4693, %4695
  %4697 = urem i32 %4696, 2
  %4698 = icmp eq i32 %4697, 0
  %4699 = icmp slt i32 %4694, 10
  %4700 = or i1 %4698, %4699
  br i1 %4700, label %originalBB1356, label %originalBB1356alteredBB

originalBB1356:                                   ; preds = %4692, %originalBB1356alteredBB
  %4701 = load i8*, i8** %19, align 8, !dbg !2943
  %4702 = load i64, i64* %29, align 8, !dbg !2943
  %4703 = getelementptr inbounds i8, i8* %4701, i64 %4702, !dbg !2943
  store i8 92, i8* %4703, align 1, !dbg !2943
  %4704 = load i32, i32* @x.37
  %4705 = load i32, i32* @y.38
  %4706 = sub i32 %4704, 1
  %4707 = mul i32 %4704, %4706
  %4708 = urem i32 %4707, 2
  %4709 = icmp eq i32 %4708, 0
  %4710 = icmp slt i32 %4705, 10
  %4711 = or i1 %4709, %4710
  br i1 %4711, label %originalBBpart21358, label %originalBB1356alteredBB

originalBBpart21358:                              ; preds = %originalBB1356
  br label %4712, !dbg !2943

4712:                                             ; preds = %originalBBpart21358, %originalBBpart21354
  %4713 = load i32, i32* @x.37
  %4714 = load i32, i32* @y.38
  %4715 = sub i32 %4713, 1
  %4716 = mul i32 %4713, %4715
  %4717 = urem i32 %4716, 2
  %4718 = icmp eq i32 %4717, 0
  %4719 = icmp slt i32 %4714, 10
  %4720 = or i1 %4718, %4719
  br i1 %4720, label %originalBB1360, label %originalBB1360alteredBB

originalBB1360:                                   ; preds = %4712, %originalBB1360alteredBB
  %4721 = load i64, i64* %29, align 8, !dbg !2946
  %4722 = add i64 %4721, 1, !dbg !2946
  store i64 %4722, i64* %29, align 8, !dbg !2946
  %4723 = load i32, i32* @x.37
  %4724 = load i32, i32* @y.38
  %4725 = sub i32 %4723, 1
  %4726 = mul i32 %4723, %4725
  %4727 = urem i32 %4726, 2
  %4728 = icmp eq i32 %4727, 0
  %4729 = icmp slt i32 %4724, 10
  %4730 = or i1 %4728, %4729
  br i1 %4730, label %originalBBpart21364, label %originalBB1360alteredBB

originalBBpart21364:                              ; preds = %originalBB1360
  br label %4731, !dbg !2946

4731:                                             ; preds = %originalBBpart21364
  %4732 = load i32, i32* @x.37
  %4733 = load i32, i32* @y.38
  %4734 = sub i32 %4732, 1
  %4735 = mul i32 %4732, %4734
  %4736 = urem i32 %4735, 2
  %4737 = icmp eq i32 %4736, 0
  %4738 = icmp slt i32 %4733, 10
  %4739 = or i1 %4737, %4738
  br i1 %4739, label %originalBB1366, label %originalBB1366alteredBB

originalBB1366:                                   ; preds = %4731, %originalBB1366alteredBB
  store i8 0, i8* %41, align 1, !dbg !2947
  %4740 = load i32, i32* @x.37
  %4741 = load i32, i32* @y.38
  %4742 = sub i32 %4740, 1
  %4743 = mul i32 %4740, %4742
  %4744 = urem i32 %4743, 2
  %4745 = icmp eq i32 %4744, 0
  %4746 = icmp slt i32 %4741, 10
  %4747 = or i1 %4745, %4746
  br i1 %4747, label %originalBBpart21368, label %originalBB1366alteredBB

originalBBpart21368:                              ; preds = %originalBB1366
  br label %4748, !dbg !2948

4748:                                             ; preds = %originalBBpart21368, %originalBBpart21350
  %4749 = load i32, i32* @x.37
  %4750 = load i32, i32* @y.38
  %4751 = sub i32 %4749, 1
  %4752 = mul i32 %4749, %4751
  %4753 = urem i32 %4752, 2
  %4754 = icmp eq i32 %4753, 0
  %4755 = icmp slt i32 %4750, 10
  %4756 = or i1 %4754, %4755
  br i1 %4756, label %originalBB1370, label %originalBB1370alteredBB

originalBB1370:                                   ; preds = %4748, %originalBB1370alteredBB
  %4757 = load i32, i32* @x.37
  %4758 = load i32, i32* @y.38
  %4759 = sub i32 %4757, 1
  %4760 = mul i32 %4757, %4759
  %4761 = urem i32 %4760, 2
  %4762 = icmp eq i32 %4761, 0
  %4763 = icmp slt i32 %4758, 10
  %4764 = or i1 %4762, %4763
  br i1 %4764, label %originalBBpart21372, label %originalBB1370alteredBB

originalBBpart21372:                              ; preds = %originalBB1370
  br label %4765

4765:                                             ; preds = %originalBBpart21372, %originalBBpart21346
  %4766 = load i32, i32* @x.37
  %4767 = load i32, i32* @y.38
  %4768 = sub i32 %4766, 1
  %4769 = mul i32 %4766, %4768
  %4770 = urem i32 %4769, 2
  %4771 = icmp eq i32 %4770, 0
  %4772 = icmp slt i32 %4767, 10
  %4773 = or i1 %4771, %4772
  br i1 %4773, label %originalBB1374, label %originalBB1374alteredBB

originalBB1374:                                   ; preds = %4765, %originalBB1374alteredBB
  %4774 = load i64, i64* %50, align 8, !dbg !2949
  %4775 = load i64, i64* %28, align 8, !dbg !2951
  %4776 = add i64 %4775, 1, !dbg !2952
  %4777 = icmp ule i64 %4774, %4776, !dbg !2953
  %4778 = load i32, i32* @x.37
  %4779 = load i32, i32* @y.38
  %4780 = sub i32 %4778, 1
  %4781 = mul i32 %4778, %4780
  %4782 = urem i32 %4781, 2
  %4783 = icmp eq i32 %4782, 0
  %4784 = icmp slt i32 %4779, 10
  %4785 = or i1 %4783, %4784
  br i1 %4785, label %originalBBpart21390, label %originalBB1374alteredBB

originalBBpart21390:                              ; preds = %originalBB1374
  br i1 %4777, label %4786, label %4803, !dbg !2954

4786:                                             ; preds = %originalBBpart21390
  %4787 = load i32, i32* @x.37
  %4788 = load i32, i32* @y.38
  %4789 = sub i32 %4787, 1
  %4790 = mul i32 %4787, %4789
  %4791 = urem i32 %4790, 2
  %4792 = icmp eq i32 %4791, 0
  %4793 = icmp slt i32 %4788, 10
  %4794 = or i1 %4792, %4793
  br i1 %4794, label %originalBB1392, label %originalBB1392alteredBB

originalBB1392:                                   ; preds = %4786, %originalBB1392alteredBB
  %4795 = load i32, i32* @x.37
  %4796 = load i32, i32* @y.38
  %4797 = sub i32 %4795, 1
  %4798 = mul i32 %4795, %4797
  %4799 = urem i32 %4798, 2
  %4800 = icmp eq i32 %4799, 0
  %4801 = icmp slt i32 %4796, 10
  %4802 = or i1 %4800, %4801
  br i1 %4802, label %originalBBpart21394, label %originalBB1392alteredBB

originalBBpart21394:                              ; preds = %originalBB1392
  br label %5127, !dbg !2955

4803:                                             ; preds = %originalBBpart21390
  %4804 = load i32, i32* @x.37
  %4805 = load i32, i32* @y.38
  %4806 = sub i32 %4804, 1
  %4807 = mul i32 %4804, %4806
  %4808 = urem i32 %4807, 2
  %4809 = icmp eq i32 %4808, 0
  %4810 = icmp slt i32 %4805, 10
  %4811 = or i1 %4809, %4810
  br i1 %4811, label %originalBB1396, label %originalBB1396alteredBB

originalBB1396:                                   ; preds = %4803, %originalBB1396alteredBB
  %4812 = load i32, i32* @x.37
  %4813 = load i32, i32* @y.38
  %4814 = sub i32 %4812, 1
  %4815 = mul i32 %4812, %4814
  %4816 = urem i32 %4815, 2
  %4817 = icmp eq i32 %4816, 0
  %4818 = icmp slt i32 %4813, 10
  %4819 = or i1 %4817, %4818
  br i1 %4819, label %originalBBpart21398, label %originalBB1396alteredBB

originalBBpart21398:                              ; preds = %originalBB1396
  br label %4820, !dbg !2956

4820:                                             ; preds = %originalBBpart21398
  %4821 = load i32, i32* @x.37
  %4822 = load i32, i32* @y.38
  %4823 = sub i32 %4821, 1
  %4824 = mul i32 %4821, %4823
  %4825 = urem i32 %4824, 2
  %4826 = icmp eq i32 %4825, 0
  %4827 = icmp slt i32 %4822, 10
  %4828 = or i1 %4826, %4827
  br i1 %4828, label %originalBB1400, label %originalBB1400alteredBB

originalBB1400:                                   ; preds = %4820, %originalBB1400alteredBB
  %4829 = load i8, i8* %36, align 1, !dbg !2957
  %4830 = trunc i8 %4829 to i1, !dbg !2957
  %4831 = load i32, i32* @x.37
  %4832 = load i32, i32* @y.38
  %4833 = sub i32 %4831, 1
  %4834 = mul i32 %4831, %4833
  %4835 = urem i32 %4834, 2
  %4836 = icmp eq i32 %4835, 0
  %4837 = icmp slt i32 %4832, 10
  %4838 = or i1 %4836, %4837
  br i1 %4838, label %originalBBpart21402, label %originalBB1400alteredBB

originalBBpart21402:                              ; preds = %originalBB1400
  br i1 %4830, label %4839, label %5027, !dbg !2957

4839:                                             ; preds = %originalBBpart21402
  %4840 = load i32, i32* @x.37
  %4841 = load i32, i32* @y.38
  %4842 = sub i32 %4840, 1
  %4843 = mul i32 %4840, %4842
  %4844 = urem i32 %4843, 2
  %4845 = icmp eq i32 %4844, 0
  %4846 = icmp slt i32 %4841, 10
  %4847 = or i1 %4845, %4846
  br i1 %4847, label %originalBB1404, label %originalBB1404alteredBB

originalBB1404:                                   ; preds = %4839, %originalBB1404alteredBB
  %4848 = load i8, i8* %42, align 1, !dbg !2957
  %4849 = trunc i8 %4848 to i1, !dbg !2957
  %4850 = load i32, i32* @x.37
  %4851 = load i32, i32* @y.38
  %4852 = sub i32 %4850, 1
  %4853 = mul i32 %4850, %4852
  %4854 = urem i32 %4853, 2
  %4855 = icmp eq i32 %4854, 0
  %4856 = icmp slt i32 %4851, 10
  %4857 = or i1 %4855, %4856
  br i1 %4857, label %originalBBpart21406, label %originalBB1404alteredBB

originalBBpart21406:                              ; preds = %originalBB1404
  br i1 %4849, label %5027, label %4858, !dbg !2960

4858:                                             ; preds = %originalBBpart21406
  %4859 = load i32, i32* @x.37
  %4860 = load i32, i32* @y.38
  %4861 = sub i32 %4859, 1
  %4862 = mul i32 %4859, %4861
  %4863 = urem i32 %4862, 2
  %4864 = icmp eq i32 %4863, 0
  %4865 = icmp slt i32 %4860, 10
  %4866 = or i1 %4864, %4865
  br i1 %4866, label %originalBB1408, label %originalBB1408alteredBB

originalBB1408:                                   ; preds = %4858, %originalBB1408alteredBB
  %4867 = load i32, i32* @x.37
  %4868 = load i32, i32* @y.38
  %4869 = sub i32 %4867, 1
  %4870 = mul i32 %4867, %4869
  %4871 = urem i32 %4870, 2
  %4872 = icmp eq i32 %4871, 0
  %4873 = icmp slt i32 %4868, 10
  %4874 = or i1 %4872, %4873
  br i1 %4874, label %originalBBpart21410, label %originalBB1408alteredBB

originalBBpart21410:                              ; preds = %originalBB1408
  br label %4875, !dbg !2961

4875:                                             ; preds = %originalBBpart21410
  %4876 = load i32, i32* @x.37
  %4877 = load i32, i32* @y.38
  %4878 = sub i32 %4876, 1
  %4879 = mul i32 %4876, %4878
  %4880 = urem i32 %4879, 2
  %4881 = icmp eq i32 %4880, 0
  %4882 = icmp slt i32 %4877, 10
  %4883 = or i1 %4881, %4882
  br i1 %4883, label %originalBB1412, label %originalBB1412alteredBB

originalBB1412:                                   ; preds = %4875, %originalBB1412alteredBB
  %4884 = load i64, i64* %29, align 8, !dbg !2963
  %4885 = load i64, i64* %20, align 8, !dbg !2963
  %4886 = icmp ult i64 %4884, %4885, !dbg !2963
  %4887 = load i32, i32* @x.37
  %4888 = load i32, i32* @y.38
  %4889 = sub i32 %4887, 1
  %4890 = mul i32 %4887, %4889
  %4891 = urem i32 %4890, 2
  %4892 = icmp eq i32 %4891, 0
  %4893 = icmp slt i32 %4888, 10
  %4894 = or i1 %4892, %4893
  br i1 %4894, label %originalBBpart21414, label %originalBB1412alteredBB

originalBBpart21414:                              ; preds = %originalBB1412
  br i1 %4886, label %4895, label %4915, !dbg !2966

4895:                                             ; preds = %originalBBpart21414
  %4896 = load i32, i32* @x.37
  %4897 = load i32, i32* @y.38
  %4898 = sub i32 %4896, 1
  %4899 = mul i32 %4896, %4898
  %4900 = urem i32 %4899, 2
  %4901 = icmp eq i32 %4900, 0
  %4902 = icmp slt i32 %4897, 10
  %4903 = or i1 %4901, %4902
  br i1 %4903, label %originalBB1416, label %originalBB1416alteredBB

originalBB1416:                                   ; preds = %4895, %originalBB1416alteredBB
  %4904 = load i8*, i8** %19, align 8, !dbg !2963
  %4905 = load i64, i64* %29, align 8, !dbg !2963
  %4906 = getelementptr inbounds i8, i8* %4904, i64 %4905, !dbg !2963
  store i8 39, i8* %4906, align 1, !dbg !2963
  %4907 = load i32, i32* @x.37
  %4908 = load i32, i32* @y.38
  %4909 = sub i32 %4907, 1
  %4910 = mul i32 %4907, %4909
  %4911 = urem i32 %4910, 2
  %4912 = icmp eq i32 %4911, 0
  %4913 = icmp slt i32 %4908, 10
  %4914 = or i1 %4912, %4913
  br i1 %4914, label %originalBBpart21418, label %originalBB1416alteredBB

originalBBpart21418:                              ; preds = %originalBB1416
  br label %4915, !dbg !2963

4915:                                             ; preds = %originalBBpart21418, %originalBBpart21414
  %4916 = load i32, i32* @x.37
  %4917 = load i32, i32* @y.38
  %4918 = sub i32 %4916, 1
  %4919 = mul i32 %4916, %4918
  %4920 = urem i32 %4919, 2
  %4921 = icmp eq i32 %4920, 0
  %4922 = icmp slt i32 %4917, 10
  %4923 = or i1 %4921, %4922
  br i1 %4923, label %originalBB1420, label %originalBB1420alteredBB

originalBB1420:                                   ; preds = %4915, %originalBB1420alteredBB
  %4924 = load i64, i64* %29, align 8, !dbg !2966
  %4925 = add i64 %4924, 1, !dbg !2966
  store i64 %4925, i64* %29, align 8, !dbg !2966
  %4926 = load i32, i32* @x.37
  %4927 = load i32, i32* @y.38
  %4928 = sub i32 %4926, 1
  %4929 = mul i32 %4926, %4928
  %4930 = urem i32 %4929, 2
  %4931 = icmp eq i32 %4930, 0
  %4932 = icmp slt i32 %4927, 10
  %4933 = or i1 %4931, %4932
  br i1 %4933, label %originalBBpart21428, label %originalBB1420alteredBB

originalBBpart21428:                              ; preds = %originalBB1420
  br label %4934, !dbg !2966

4934:                                             ; preds = %originalBBpart21428
  %4935 = load i32, i32* @x.37
  %4936 = load i32, i32* @y.38
  %4937 = sub i32 %4935, 1
  %4938 = mul i32 %4935, %4937
  %4939 = urem i32 %4938, 2
  %4940 = icmp eq i32 %4939, 0
  %4941 = icmp slt i32 %4936, 10
  %4942 = or i1 %4940, %4941
  br i1 %4942, label %originalBB1430, label %originalBB1430alteredBB

originalBB1430:                                   ; preds = %4934, %originalBB1430alteredBB
  %4943 = load i32, i32* @x.37
  %4944 = load i32, i32* @y.38
  %4945 = sub i32 %4943, 1
  %4946 = mul i32 %4943, %4945
  %4947 = urem i32 %4946, 2
  %4948 = icmp eq i32 %4947, 0
  %4949 = icmp slt i32 %4944, 10
  %4950 = or i1 %4948, %4949
  br i1 %4950, label %originalBBpart21432, label %originalBB1430alteredBB

originalBBpart21432:                              ; preds = %originalBB1430
  br label %4951, !dbg !2961

4951:                                             ; preds = %originalBBpart21432
  %4952 = load i32, i32* @x.37
  %4953 = load i32, i32* @y.38
  %4954 = sub i32 %4952, 1
  %4955 = mul i32 %4952, %4954
  %4956 = urem i32 %4955, 2
  %4957 = icmp eq i32 %4956, 0
  %4958 = icmp slt i32 %4953, 10
  %4959 = or i1 %4957, %4958
  br i1 %4959, label %originalBB1434, label %originalBB1434alteredBB

originalBB1434:                                   ; preds = %4951, %originalBB1434alteredBB
  %4960 = load i64, i64* %29, align 8, !dbg !2967
  %4961 = load i64, i64* %20, align 8, !dbg !2967
  %4962 = icmp ult i64 %4960, %4961, !dbg !2967
  %4963 = load i32, i32* @x.37
  %4964 = load i32, i32* @y.38
  %4965 = sub i32 %4963, 1
  %4966 = mul i32 %4963, %4965
  %4967 = urem i32 %4966, 2
  %4968 = icmp eq i32 %4967, 0
  %4969 = icmp slt i32 %4964, 10
  %4970 = or i1 %4968, %4969
  br i1 %4970, label %originalBBpart21436, label %originalBB1434alteredBB

originalBBpart21436:                              ; preds = %originalBB1434
  br i1 %4962, label %4971, label %4991, !dbg !2970

4971:                                             ; preds = %originalBBpart21436
  %4972 = load i32, i32* @x.37
  %4973 = load i32, i32* @y.38
  %4974 = sub i32 %4972, 1
  %4975 = mul i32 %4972, %4974
  %4976 = urem i32 %4975, 2
  %4977 = icmp eq i32 %4976, 0
  %4978 = icmp slt i32 %4973, 10
  %4979 = or i1 %4977, %4978
  br i1 %4979, label %originalBB1438, label %originalBB1438alteredBB

originalBB1438:                                   ; preds = %4971, %originalBB1438alteredBB
  %4980 = load i8*, i8** %19, align 8, !dbg !2967
  %4981 = load i64, i64* %29, align 8, !dbg !2967
  %4982 = getelementptr inbounds i8, i8* %4980, i64 %4981, !dbg !2967
  store i8 39, i8* %4982, align 1, !dbg !2967
  %4983 = load i32, i32* @x.37
  %4984 = load i32, i32* @y.38
  %4985 = sub i32 %4983, 1
  %4986 = mul i32 %4983, %4985
  %4987 = urem i32 %4986, 2
  %4988 = icmp eq i32 %4987, 0
  %4989 = icmp slt i32 %4984, 10
  %4990 = or i1 %4988, %4989
  br i1 %4990, label %originalBBpart21440, label %originalBB1438alteredBB

originalBBpart21440:                              ; preds = %originalBB1438
  br label %4991, !dbg !2967

4991:                                             ; preds = %originalBBpart21440, %originalBBpart21436
  %4992 = load i32, i32* @x.37
  %4993 = load i32, i32* @y.38
  %4994 = sub i32 %4992, 1
  %4995 = mul i32 %4992, %4994
  %4996 = urem i32 %4995, 2
  %4997 = icmp eq i32 %4996, 0
  %4998 = icmp slt i32 %4993, 10
  %4999 = or i1 %4997, %4998
  br i1 %4999, label %originalBB1442, label %originalBB1442alteredBB

originalBB1442:                                   ; preds = %4991, %originalBB1442alteredBB
  %5000 = load i64, i64* %29, align 8, !dbg !2970
  %5001 = add i64 %5000, 1, !dbg !2970
  store i64 %5001, i64* %29, align 8, !dbg !2970
  %5002 = load i32, i32* @x.37
  %5003 = load i32, i32* @y.38
  %5004 = sub i32 %5002, 1
  %5005 = mul i32 %5002, %5004
  %5006 = urem i32 %5005, 2
  %5007 = icmp eq i32 %5006, 0
  %5008 = icmp slt i32 %5003, 10
  %5009 = or i1 %5007, %5008
  br i1 %5009, label %originalBBpart21445, label %originalBB1442alteredBB

originalBBpart21445:                              ; preds = %originalBB1442
  br label %5010, !dbg !2970

5010:                                             ; preds = %originalBBpart21445
  %5011 = load i32, i32* @x.37
  %5012 = load i32, i32* @y.38
  %5013 = sub i32 %5011, 1
  %5014 = mul i32 %5011, %5013
  %5015 = urem i32 %5014, 2
  %5016 = icmp eq i32 %5015, 0
  %5017 = icmp slt i32 %5012, 10
  %5018 = or i1 %5016, %5017
  br i1 %5018, label %originalBB1447, label %originalBB1447alteredBB

originalBB1447:                                   ; preds = %5010, %originalBB1447alteredBB
  store i8 0, i8* %36, align 1, !dbg !2961
  %5019 = load i32, i32* @x.37
  %5020 = load i32, i32* @y.38
  %5021 = sub i32 %5019, 1
  %5022 = mul i32 %5019, %5021
  %5023 = urem i32 %5022, 2
  %5024 = icmp eq i32 %5023, 0
  %5025 = icmp slt i32 %5020, 10
  %5026 = or i1 %5024, %5025
  br i1 %5026, label %originalBBpart21449, label %originalBB1447alteredBB

originalBBpart21449:                              ; preds = %originalBB1447
  br label %5027, !dbg !2961

5027:                                             ; preds = %originalBBpart21449, %originalBBpart21406, %originalBBpart21402
  br label %5028, !dbg !2960

5028:                                             ; preds = %5027
  %5029 = load i32, i32* @x.37
  %5030 = load i32, i32* @y.38
  %5031 = sub i32 %5029, 1
  %5032 = mul i32 %5029, %5031
  %5033 = urem i32 %5032, 2
  %5034 = icmp eq i32 %5033, 0
  %5035 = icmp slt i32 %5030, 10
  %5036 = or i1 %5034, %5035
  br i1 %5036, label %originalBB1451, label %originalBB1451alteredBB

originalBB1451:                                   ; preds = %5028, %originalBB1451alteredBB
  %5037 = load i32, i32* @x.37
  %5038 = load i32, i32* @y.38
  %5039 = sub i32 %5037, 1
  %5040 = mul i32 %5037, %5039
  %5041 = urem i32 %5040, 2
  %5042 = icmp eq i32 %5041, 0
  %5043 = icmp slt i32 %5038, 10
  %5044 = or i1 %5042, %5043
  br i1 %5044, label %originalBBpart21453, label %originalBB1451alteredBB

originalBBpart21453:                              ; preds = %originalBB1451
  br label %5045, !dbg !2971

5045:                                             ; preds = %originalBBpart21453
  %5046 = load i32, i32* @x.37
  %5047 = load i32, i32* @y.38
  %5048 = sub i32 %5046, 1
  %5049 = mul i32 %5046, %5048
  %5050 = urem i32 %5049, 2
  %5051 = icmp eq i32 %5050, 0
  %5052 = icmp slt i32 %5047, 10
  %5053 = or i1 %5051, %5052
  br i1 %5053, label %originalBB1455, label %originalBB1455alteredBB

originalBB1455:                                   ; preds = %5045, %originalBB1455alteredBB
  %5054 = load i64, i64* %29, align 8, !dbg !2972
  %5055 = load i64, i64* %20, align 8, !dbg !2972
  %5056 = icmp ult i64 %5054, %5055, !dbg !2972
  %5057 = load i32, i32* @x.37
  %5058 = load i32, i32* @y.38
  %5059 = sub i32 %5057, 1
  %5060 = mul i32 %5057, %5059
  %5061 = urem i32 %5060, 2
  %5062 = icmp eq i32 %5061, 0
  %5063 = icmp slt i32 %5058, 10
  %5064 = or i1 %5062, %5063
  br i1 %5064, label %originalBBpart21457, label %originalBB1455alteredBB

originalBBpart21457:                              ; preds = %originalBB1455
  br i1 %5056, label %5065, label %5086, !dbg !2975

5065:                                             ; preds = %originalBBpart21457
  %5066 = load i32, i32* @x.37
  %5067 = load i32, i32* @y.38
  %5068 = sub i32 %5066, 1
  %5069 = mul i32 %5066, %5068
  %5070 = urem i32 %5069, 2
  %5071 = icmp eq i32 %5070, 0
  %5072 = icmp slt i32 %5067, 10
  %5073 = or i1 %5071, %5072
  br i1 %5073, label %originalBB1459, label %originalBB1459alteredBB

originalBB1459:                                   ; preds = %5065, %originalBB1459alteredBB
  %5074 = load i8, i8* %39, align 1, !dbg !2972
  %5075 = load i8*, i8** %19, align 8, !dbg !2972
  %5076 = load i64, i64* %29, align 8, !dbg !2972
  %5077 = getelementptr inbounds i8, i8* %5075, i64 %5076, !dbg !2972
  store i8 %5074, i8* %5077, align 1, !dbg !2972
  %5078 = load i32, i32* @x.37
  %5079 = load i32, i32* @y.38
  %5080 = sub i32 %5078, 1
  %5081 = mul i32 %5078, %5080
  %5082 = urem i32 %5081, 2
  %5083 = icmp eq i32 %5082, 0
  %5084 = icmp slt i32 %5079, 10
  %5085 = or i1 %5083, %5084
  br i1 %5085, label %originalBBpart21461, label %originalBB1459alteredBB

originalBBpart21461:                              ; preds = %originalBB1459
  br label %5086, !dbg !2972

5086:                                             ; preds = %originalBBpart21461, %originalBBpart21457
  %5087 = load i32, i32* @x.37
  %5088 = load i32, i32* @y.38
  %5089 = sub i32 %5087, 1
  %5090 = mul i32 %5087, %5089
  %5091 = urem i32 %5090, 2
  %5092 = icmp eq i32 %5091, 0
  %5093 = icmp slt i32 %5088, 10
  %5094 = or i1 %5092, %5093
  br i1 %5094, label %originalBB1463, label %originalBB1463alteredBB

originalBB1463:                                   ; preds = %5086, %originalBB1463alteredBB
  %5095 = load i64, i64* %29, align 8, !dbg !2975
  %5096 = add i64 %5095, 1, !dbg !2975
  store i64 %5096, i64* %29, align 8, !dbg !2975
  %5097 = load i32, i32* @x.37
  %5098 = load i32, i32* @y.38
  %5099 = sub i32 %5097, 1
  %5100 = mul i32 %5097, %5099
  %5101 = urem i32 %5100, 2
  %5102 = icmp eq i32 %5101, 0
  %5103 = icmp slt i32 %5098, 10
  %5104 = or i1 %5102, %5103
  br i1 %5104, label %originalBBpart21466, label %originalBB1463alteredBB

originalBBpart21466:                              ; preds = %originalBB1463
  br label %5105, !dbg !2975

5105:                                             ; preds = %originalBBpart21466
  %5106 = load i32, i32* @x.37
  %5107 = load i32, i32* @y.38
  %5108 = sub i32 %5106, 1
  %5109 = mul i32 %5106, %5108
  %5110 = urem i32 %5109, 2
  %5111 = icmp eq i32 %5110, 0
  %5112 = icmp slt i32 %5107, 10
  %5113 = or i1 %5111, %5112
  br i1 %5113, label %originalBB1468, label %originalBB1468alteredBB

originalBB1468:                                   ; preds = %5105, %originalBB1468alteredBB
  %5114 = load i8*, i8** %21, align 8, !dbg !2976
  %5115 = load i64, i64* %28, align 8, !dbg !2977
  %5116 = add i64 %5115, 1, !dbg !2977
  store i64 %5116, i64* %28, align 8, !dbg !2977
  %5117 = getelementptr inbounds i8, i8* %5114, i64 %5116, !dbg !2976
  %5118 = load i8, i8* %5117, align 1, !dbg !2976
  store i8 %5118, i8* %39, align 1, !dbg !2978
  %5119 = load i32, i32* @x.37
  %5120 = load i32, i32* @y.38
  %5121 = sub i32 %5119, 1
  %5122 = mul i32 %5119, %5121
  %5123 = urem i32 %5122, 2
  %5124 = icmp eq i32 %5123, 0
  %5125 = icmp slt i32 %5120, 10
  %5126 = or i1 %5124, %5125
  br i1 %5126, label %originalBBpart21477, label %originalBB1468alteredBB

originalBBpart21477:                              ; preds = %originalBB1468
  br label %4064, !dbg !2979, !llvm.loop !2980

5127:                                             ; preds = %originalBBpart21394
  %5128 = load i32, i32* @x.37
  %5129 = load i32, i32* @y.38
  %5130 = sub i32 %5128, 1
  %5131 = mul i32 %5128, %5130
  %5132 = urem i32 %5131, 2
  %5133 = icmp eq i32 %5132, 0
  %5134 = icmp slt i32 %5129, 10
  %5135 = or i1 %5133, %5134
  br i1 %5135, label %originalBB1479, label %originalBB1479alteredBB

originalBB1479:                                   ; preds = %5127, %originalBB1479alteredBB
  %5136 = load i32, i32* @x.37
  %5137 = load i32, i32* @y.38
  %5138 = sub i32 %5136, 1
  %5139 = mul i32 %5136, %5138
  %5140 = urem i32 %5139, 2
  %5141 = icmp eq i32 %5140, 0
  %5142 = icmp slt i32 %5137, 10
  %5143 = or i1 %5141, %5142
  br i1 %5143, label %originalBBpart21481, label %originalBB1479alteredBB

originalBBpart21481:                              ; preds = %originalBB1479
  br label %5734, !dbg !2983

5144:                                             ; preds = %originalBBpart21119, %originalBBpart21115
  %5145 = load i32, i32* @x.37
  %5146 = load i32, i32* @y.38
  %5147 = sub i32 %5145, 1
  %5148 = mul i32 %5145, %5147
  %5149 = urem i32 %5148, 2
  %5150 = icmp eq i32 %5149, 0
  %5151 = icmp slt i32 %5146, 10
  %5152 = or i1 %5150, %5151
  br i1 %5152, label %originalBB1483, label %originalBB1483alteredBB

originalBB1483:                                   ; preds = %5144, %originalBB1483alteredBB
  %5153 = load i32, i32* @x.37
  %5154 = load i32, i32* @y.38
  %5155 = sub i32 %5153, 1
  %5156 = mul i32 %5153, %5155
  %5157 = urem i32 %5156, 2
  %5158 = icmp eq i32 %5157, 0
  %5159 = icmp slt i32 %5154, 10
  %5160 = or i1 %5158, %5159
  br i1 %5160, label %originalBBpart21485, label %originalBB1483alteredBB

originalBBpart21485:                              ; preds = %originalBB1483
  br label %5161, !dbg !2984

5161:                                             ; preds = %originalBBpart21485, %originalBBpart2879, %originalBBpart2875, %originalBBpart2780, %originalBBpart2756, %originalBBpart2748, %originalBBpart2732, %originalBBpart2640, %originalBBpart2453
  %5162 = load i32, i32* @x.37
  %5163 = load i32, i32* @y.38
  %5164 = sub i32 %5162, 1
  %5165 = mul i32 %5162, %5164
  %5166 = urem i32 %5165, 2
  %5167 = icmp eq i32 %5166, 0
  %5168 = icmp slt i32 %5163, 10
  %5169 = or i1 %5167, %5168
  br i1 %5169, label %originalBB1487, label %originalBB1487alteredBB

originalBB1487:                                   ; preds = %5161, %originalBB1487alteredBB
  %5170 = load i8, i8* %33, align 1, !dbg !2985
  %5171 = trunc i8 %5170 to i1, !dbg !2985
  %5172 = load i32, i32* @x.37
  %5173 = load i32, i32* @y.38
  %5174 = sub i32 %5172, 1
  %5175 = mul i32 %5172, %5174
  %5176 = urem i32 %5175, 2
  %5177 = icmp eq i32 %5176, 0
  %5178 = icmp slt i32 %5173, 10
  %5179 = or i1 %5177, %5178
  br i1 %5179, label %originalBBpart21489, label %originalBB1487alteredBB

originalBBpart21489:                              ; preds = %originalBB1487
  br i1 %5171, label %5180, label %5199, !dbg !2987

5180:                                             ; preds = %originalBBpart21489
  %5181 = load i32, i32* @x.37
  %5182 = load i32, i32* @y.38
  %5183 = sub i32 %5181, 1
  %5184 = mul i32 %5181, %5183
  %5185 = urem i32 %5184, 2
  %5186 = icmp eq i32 %5185, 0
  %5187 = icmp slt i32 %5182, 10
  %5188 = or i1 %5186, %5187
  br i1 %5188, label %originalBB1491, label %originalBB1491alteredBB

originalBB1491:                                   ; preds = %5180, %originalBB1491alteredBB
  %5189 = load i32, i32* %23, align 4, !dbg !2988
  %5190 = icmp ne i32 %5189, 2, !dbg !2989
  %5191 = load i32, i32* @x.37
  %5192 = load i32, i32* @y.38
  %5193 = sub i32 %5191, 1
  %5194 = mul i32 %5191, %5193
  %5195 = urem i32 %5194, 2
  %5196 = icmp eq i32 %5195, 0
  %5197 = icmp slt i32 %5192, 10
  %5198 = or i1 %5196, %5197
  br i1 %5198, label %originalBBpart21493, label %originalBB1491alteredBB

originalBBpart21493:                              ; preds = %originalBB1491
  br i1 %5190, label %5218, label %5199, !dbg !2990

5199:                                             ; preds = %originalBBpart21493, %originalBBpart21489
  %5200 = load i32, i32* @x.37
  %5201 = load i32, i32* @y.38
  %5202 = sub i32 %5200, 1
  %5203 = mul i32 %5200, %5202
  %5204 = urem i32 %5203, 2
  %5205 = icmp eq i32 %5204, 0
  %5206 = icmp slt i32 %5201, 10
  %5207 = or i1 %5205, %5206
  br i1 %5207, label %originalBB1495, label %originalBB1495alteredBB

originalBB1495:                                   ; preds = %5199, %originalBB1495alteredBB
  %5208 = load i8, i8* %35, align 1, !dbg !2991
  %5209 = trunc i8 %5208 to i1, !dbg !2991
  %5210 = load i32, i32* @x.37
  %5211 = load i32, i32* @y.38
  %5212 = sub i32 %5210, 1
  %5213 = mul i32 %5210, %5212
  %5214 = urem i32 %5213, 2
  %5215 = icmp eq i32 %5214, 0
  %5216 = icmp slt i32 %5211, 10
  %5217 = or i1 %5215, %5216
  br i1 %5217, label %originalBBpart21497, label %originalBB1495alteredBB

originalBBpart21497:                              ; preds = %originalBB1495
  br i1 %5209, label %5218, label %5267, !dbg !2992

5218:                                             ; preds = %originalBBpart21497, %originalBBpart21493
  %5219 = load i32, i32* @x.37
  %5220 = load i32, i32* @y.38
  %5221 = sub i32 %5219, 1
  %5222 = mul i32 %5219, %5221
  %5223 = urem i32 %5222, 2
  %5224 = icmp eq i32 %5223, 0
  %5225 = icmp slt i32 %5220, 10
  %5226 = or i1 %5224, %5225
  br i1 %5226, label %originalBB1499, label %originalBB1499alteredBB

originalBB1499:                                   ; preds = %5218, %originalBB1499alteredBB
  %5227 = load i32*, i32** %25, align 8, !dbg !2993
  %5228 = icmp ne i32* %5227, null, !dbg !2993
  %5229 = load i32, i32* @x.37
  %5230 = load i32, i32* @y.38
  %5231 = sub i32 %5229, 1
  %5232 = mul i32 %5229, %5231
  %5233 = urem i32 %5232, 2
  %5234 = icmp eq i32 %5233, 0
  %5235 = icmp slt i32 %5230, 10
  %5236 = or i1 %5234, %5235
  br i1 %5236, label %originalBBpart21501, label %originalBB1499alteredBB

originalBBpart21501:                              ; preds = %originalBB1499
  br i1 %5228, label %5237, label %5267, !dbg !2994

5237:                                             ; preds = %originalBBpart21501
  %5238 = load i32, i32* @x.37
  %5239 = load i32, i32* @y.38
  %5240 = sub i32 %5238, 1
  %5241 = mul i32 %5238, %5240
  %5242 = urem i32 %5241, 2
  %5243 = icmp eq i32 %5242, 0
  %5244 = icmp slt i32 %5239, 10
  %5245 = or i1 %5243, %5244
  br i1 %5245, label %originalBB1503, label %originalBB1503alteredBB

originalBB1503:                                   ; preds = %5237, %originalBB1503alteredBB
  %5246 = load i32*, i32** %25, align 8, !dbg !2995
  %5247 = load i8, i8* %39, align 1, !dbg !2996
  %5248 = zext i8 %5247 to i64, !dbg !2996
  %5249 = udiv i64 %5248, 32, !dbg !2997
  %5250 = getelementptr inbounds i32, i32* %5246, i64 %5249, !dbg !2995
  %5251 = load i32, i32* %5250, align 4, !dbg !2995
  %5252 = load i8, i8* %39, align 1, !dbg !2998
  %5253 = zext i8 %5252 to i64, !dbg !2998
  %5254 = urem i64 %5253, 32, !dbg !2999
  %5255 = trunc i64 %5254 to i32, !dbg !3000
  %5256 = lshr i32 %5251, %5255, !dbg !3000
  %5257 = and i32 %5256, 1, !dbg !3001
  %5258 = icmp ne i32 %5257, 0, !dbg !3001
  %5259 = load i32, i32* @x.37
  %5260 = load i32, i32* @y.38
  %5261 = sub i32 %5259, 1
  %5262 = mul i32 %5259, %5261
  %5263 = urem i32 %5262, 2
  %5264 = icmp eq i32 %5263, 0
  %5265 = icmp slt i32 %5260, 10
  %5266 = or i1 %5264, %5265
  br i1 %5266, label %originalBBpart21526, label %originalBB1503alteredBB

originalBBpart21526:                              ; preds = %originalBB1503
  br i1 %5258, label %5303, label %5267, !dbg !3002

5267:                                             ; preds = %originalBBpart21526, %originalBBpart21501, %originalBBpart21497
  %5268 = load i32, i32* @x.37
  %5269 = load i32, i32* @y.38
  %5270 = sub i32 %5268, 1
  %5271 = mul i32 %5268, %5270
  %5272 = urem i32 %5271, 2
  %5273 = icmp eq i32 %5272, 0
  %5274 = icmp slt i32 %5269, 10
  %5275 = or i1 %5273, %5274
  br i1 %5275, label %originalBB1528, label %originalBB1528alteredBB

originalBB1528:                                   ; preds = %5267, %originalBB1528alteredBB
  %5276 = load i8, i8* %41, align 1, !dbg !3003
  %5277 = trunc i8 %5276 to i1, !dbg !3003
  %5278 = load i32, i32* @x.37
  %5279 = load i32, i32* @y.38
  %5280 = sub i32 %5278, 1
  %5281 = mul i32 %5278, %5280
  %5282 = urem i32 %5281, 2
  %5283 = icmp eq i32 %5282, 0
  %5284 = icmp slt i32 %5279, 10
  %5285 = or i1 %5283, %5284
  br i1 %5285, label %originalBBpart21530, label %originalBB1528alteredBB

originalBBpart21530:                              ; preds = %originalBB1528
  br i1 %5277, label %5303, label %5286, !dbg !3004

5286:                                             ; preds = %originalBBpart21530
  %5287 = load i32, i32* @x.37
  %5288 = load i32, i32* @y.38
  %5289 = sub i32 %5287, 1
  %5290 = mul i32 %5287, %5289
  %5291 = urem i32 %5290, 2
  %5292 = icmp eq i32 %5291, 0
  %5293 = icmp slt i32 %5288, 10
  %5294 = or i1 %5292, %5293
  br i1 %5294, label %originalBB1532, label %originalBB1532alteredBB

originalBB1532:                                   ; preds = %5286, %originalBB1532alteredBB
  %5295 = load i32, i32* @x.37
  %5296 = load i32, i32* @y.38
  %5297 = sub i32 %5295, 1
  %5298 = mul i32 %5295, %5297
  %5299 = urem i32 %5298, 2
  %5300 = icmp eq i32 %5299, 0
  %5301 = icmp slt i32 %5296, 10
  %5302 = or i1 %5300, %5301
  br i1 %5302, label %originalBBpart21534, label %originalBB1532alteredBB

originalBBpart21534:                              ; preds = %originalBB1532
  br label %5734, !dbg !3005

5303:                                             ; preds = %originalBBpart21530, %originalBBpart21526
  %5304 = load i32, i32* @x.37
  %5305 = load i32, i32* @y.38
  %5306 = sub i32 %5304, 1
  %5307 = mul i32 %5304, %5306
  %5308 = urem i32 %5307, 2
  %5309 = icmp eq i32 %5308, 0
  %5310 = icmp slt i32 %5305, 10
  %5311 = or i1 %5309, %5310
  br i1 %5311, label %originalBB1536, label %originalBB1536alteredBB

originalBB1536:                                   ; preds = %5303, %originalBB1536alteredBB
  %5312 = load i32, i32* @x.37
  %5313 = load i32, i32* @y.38
  %5314 = sub i32 %5312, 1
  %5315 = mul i32 %5312, %5314
  %5316 = urem i32 %5315, 2
  %5317 = icmp eq i32 %5316, 0
  %5318 = icmp slt i32 %5313, 10
  %5319 = or i1 %5317, %5318
  br i1 %5319, label %originalBBpart21538, label %originalBB1536alteredBB

originalBBpart21538:                              ; preds = %originalBB1536
  br label %5320, !dbg !3003

5320:                                             ; preds = %originalBBpart21538, %originalBBpart2728
  call void @llvm.dbg.label(metadata !3006), !dbg !3007
  %5321 = load i32, i32* @x.37
  %5322 = load i32, i32* @y.38
  %5323 = sub i32 %5321, 1
  %5324 = mul i32 %5321, %5323
  %5325 = urem i32 %5324, 2
  %5326 = icmp eq i32 %5325, 0
  %5327 = icmp slt i32 %5322, 10
  %5328 = or i1 %5326, %5327
  br i1 %5328, label %originalBB1540, label %originalBB1540alteredBB

originalBB1540:                                   ; preds = %5320, %originalBB1540alteredBB
  %5329 = load i32, i32* @x.37
  %5330 = load i32, i32* @y.38
  %5331 = sub i32 %5329, 1
  %5332 = mul i32 %5329, %5331
  %5333 = urem i32 %5332, 2
  %5334 = icmp eq i32 %5333, 0
  %5335 = icmp slt i32 %5330, 10
  %5336 = or i1 %5334, %5335
  br i1 %5336, label %originalBBpart21542, label %originalBB1540alteredBB

originalBBpart21542:                              ; preds = %originalBB1540
  br label %5337, !dbg !3008

5337:                                             ; preds = %originalBBpart21542
  %5338 = load i32, i32* @x.37
  %5339 = load i32, i32* @y.38
  %5340 = sub i32 %5338, 1
  %5341 = mul i32 %5338, %5340
  %5342 = urem i32 %5341, 2
  %5343 = icmp eq i32 %5342, 0
  %5344 = icmp slt i32 %5339, 10
  %5345 = or i1 %5343, %5344
  br i1 %5345, label %originalBB1544, label %originalBB1544alteredBB

originalBB1544:                                   ; preds = %5337, %originalBB1544alteredBB
  %5346 = load i8, i8* %35, align 1, !dbg !3009
  %5347 = trunc i8 %5346 to i1, !dbg !3009
  %5348 = load i32, i32* @x.37
  %5349 = load i32, i32* @y.38
  %5350 = sub i32 %5348, 1
  %5351 = mul i32 %5348, %5350
  %5352 = urem i32 %5351, 2
  %5353 = icmp eq i32 %5352, 0
  %5354 = icmp slt i32 %5349, 10
  %5355 = or i1 %5353, %5354
  br i1 %5355, label %originalBBpart21546, label %originalBB1544alteredBB

originalBBpart21546:                              ; preds = %originalBB1544
  br i1 %5347, label %5356, label %5373, !dbg !3012

5356:                                             ; preds = %originalBBpart21546
  %5357 = load i32, i32* @x.37
  %5358 = load i32, i32* @y.38
  %5359 = sub i32 %5357, 1
  %5360 = mul i32 %5357, %5359
  %5361 = urem i32 %5360, 2
  %5362 = icmp eq i32 %5361, 0
  %5363 = icmp slt i32 %5358, 10
  %5364 = or i1 %5362, %5363
  br i1 %5364, label %originalBB1548, label %originalBB1548alteredBB

originalBB1548:                                   ; preds = %5356, %originalBB1548alteredBB
  %5365 = load i32, i32* @x.37
  %5366 = load i32, i32* @y.38
  %5367 = sub i32 %5365, 1
  %5368 = mul i32 %5365, %5367
  %5369 = urem i32 %5368, 2
  %5370 = icmp eq i32 %5369, 0
  %5371 = icmp slt i32 %5366, 10
  %5372 = or i1 %5370, %5371
  br i1 %5372, label %originalBBpart21550, label %originalBB1548alteredBB

originalBBpart21550:                              ; preds = %originalBB1548
  br label %6606, !dbg !3009

5373:                                             ; preds = %originalBBpart21546
  %5374 = load i32, i32* @x.37
  %5375 = load i32, i32* @y.38
  %5376 = sub i32 %5374, 1
  %5377 = mul i32 %5374, %5376
  %5378 = urem i32 %5377, 2
  %5379 = icmp eq i32 %5378, 0
  %5380 = icmp slt i32 %5375, 10
  %5381 = or i1 %5379, %5380
  br i1 %5381, label %originalBB1552, label %originalBB1552alteredBB

originalBB1552:                                   ; preds = %5373, %originalBB1552alteredBB
  store i8 1, i8* %42, align 1, !dbg !3012
  %5382 = load i32, i32* %23, align 4, !dbg !3013
  %5383 = icmp eq i32 %5382, 2, !dbg !3013
  %5384 = load i32, i32* @x.37
  %5385 = load i32, i32* @y.38
  %5386 = sub i32 %5384, 1
  %5387 = mul i32 %5384, %5386
  %5388 = urem i32 %5387, 2
  %5389 = icmp eq i32 %5388, 0
  %5390 = icmp slt i32 %5385, 10
  %5391 = or i1 %5389, %5390
  br i1 %5391, label %originalBBpart21554, label %originalBB1552alteredBB

originalBBpart21554:                              ; preds = %originalBB1552
  br i1 %5383, label %5392, label %5640, !dbg !3013

5392:                                             ; preds = %originalBBpart21554
  %5393 = load i32, i32* @x.37
  %5394 = load i32, i32* @y.38
  %5395 = sub i32 %5393, 1
  %5396 = mul i32 %5393, %5395
  %5397 = urem i32 %5396, 2
  %5398 = icmp eq i32 %5397, 0
  %5399 = icmp slt i32 %5394, 10
  %5400 = or i1 %5398, %5399
  br i1 %5400, label %originalBB1556, label %originalBB1556alteredBB

originalBB1556:                                   ; preds = %5392, %originalBB1556alteredBB
  %5401 = load i8, i8* %36, align 1, !dbg !3013
  %5402 = trunc i8 %5401 to i1, !dbg !3013
  %5403 = load i32, i32* @x.37
  %5404 = load i32, i32* @y.38
  %5405 = sub i32 %5403, 1
  %5406 = mul i32 %5403, %5405
  %5407 = urem i32 %5406, 2
  %5408 = icmp eq i32 %5407, 0
  %5409 = icmp slt i32 %5404, 10
  %5410 = or i1 %5408, %5409
  br i1 %5410, label %originalBBpart21558, label %originalBB1556alteredBB

originalBBpart21558:                              ; preds = %originalBB1556
  br i1 %5402, label %5640, label %5411, !dbg !3012

5411:                                             ; preds = %originalBBpart21558
  %5412 = load i32, i32* @x.37
  %5413 = load i32, i32* @y.38
  %5414 = sub i32 %5412, 1
  %5415 = mul i32 %5412, %5414
  %5416 = urem i32 %5415, 2
  %5417 = icmp eq i32 %5416, 0
  %5418 = icmp slt i32 %5413, 10
  %5419 = or i1 %5417, %5418
  br i1 %5419, label %originalBB1560, label %originalBB1560alteredBB

originalBB1560:                                   ; preds = %5411, %originalBB1560alteredBB
  %5420 = load i32, i32* @x.37
  %5421 = load i32, i32* @y.38
  %5422 = sub i32 %5420, 1
  %5423 = mul i32 %5420, %5422
  %5424 = urem i32 %5423, 2
  %5425 = icmp eq i32 %5424, 0
  %5426 = icmp slt i32 %5421, 10
  %5427 = or i1 %5425, %5426
  br i1 %5427, label %originalBBpart21562, label %originalBB1560alteredBB

originalBBpart21562:                              ; preds = %originalBB1560
  br label %5428, !dbg !3015

5428:                                             ; preds = %originalBBpart21562
  %5429 = load i32, i32* @x.37
  %5430 = load i32, i32* @y.38
  %5431 = sub i32 %5429, 1
  %5432 = mul i32 %5429, %5431
  %5433 = urem i32 %5432, 2
  %5434 = icmp eq i32 %5433, 0
  %5435 = icmp slt i32 %5430, 10
  %5436 = or i1 %5434, %5435
  br i1 %5436, label %originalBB1564, label %originalBB1564alteredBB

originalBB1564:                                   ; preds = %5428, %originalBB1564alteredBB
  %5437 = load i64, i64* %29, align 8, !dbg !3017
  %5438 = load i64, i64* %20, align 8, !dbg !3017
  %5439 = icmp ult i64 %5437, %5438, !dbg !3017
  %5440 = load i32, i32* @x.37
  %5441 = load i32, i32* @y.38
  %5442 = sub i32 %5440, 1
  %5443 = mul i32 %5440, %5442
  %5444 = urem i32 %5443, 2
  %5445 = icmp eq i32 %5444, 0
  %5446 = icmp slt i32 %5441, 10
  %5447 = or i1 %5445, %5446
  br i1 %5447, label %originalBBpart21566, label %originalBB1564alteredBB

originalBBpart21566:                              ; preds = %originalBB1564
  br i1 %5439, label %5448, label %5468, !dbg !3020

5448:                                             ; preds = %originalBBpart21566
  %5449 = load i32, i32* @x.37
  %5450 = load i32, i32* @y.38
  %5451 = sub i32 %5449, 1
  %5452 = mul i32 %5449, %5451
  %5453 = urem i32 %5452, 2
  %5454 = icmp eq i32 %5453, 0
  %5455 = icmp slt i32 %5450, 10
  %5456 = or i1 %5454, %5455
  br i1 %5456, label %originalBB1568, label %originalBB1568alteredBB

originalBB1568:                                   ; preds = %5448, %originalBB1568alteredBB
  %5457 = load i8*, i8** %19, align 8, !dbg !3017
  %5458 = load i64, i64* %29, align 8, !dbg !3017
  %5459 = getelementptr inbounds i8, i8* %5457, i64 %5458, !dbg !3017
  store i8 39, i8* %5459, align 1, !dbg !3017
  %5460 = load i32, i32* @x.37
  %5461 = load i32, i32* @y.38
  %5462 = sub i32 %5460, 1
  %5463 = mul i32 %5460, %5462
  %5464 = urem i32 %5463, 2
  %5465 = icmp eq i32 %5464, 0
  %5466 = icmp slt i32 %5461, 10
  %5467 = or i1 %5465, %5466
  br i1 %5467, label %originalBBpart21570, label %originalBB1568alteredBB

originalBBpart21570:                              ; preds = %originalBB1568
  br label %5468, !dbg !3017

5468:                                             ; preds = %originalBBpart21570, %originalBBpart21566
  %5469 = load i32, i32* @x.37
  %5470 = load i32, i32* @y.38
  %5471 = sub i32 %5469, 1
  %5472 = mul i32 %5469, %5471
  %5473 = urem i32 %5472, 2
  %5474 = icmp eq i32 %5473, 0
  %5475 = icmp slt i32 %5470, 10
  %5476 = or i1 %5474, %5475
  br i1 %5476, label %originalBB1572, label %originalBB1572alteredBB

originalBB1572:                                   ; preds = %5468, %originalBB1572alteredBB
  %5477 = load i64, i64* %29, align 8, !dbg !3020
  %5478 = add i64 %5477, 1, !dbg !3020
  store i64 %5478, i64* %29, align 8, !dbg !3020
  %5479 = load i32, i32* @x.37
  %5480 = load i32, i32* @y.38
  %5481 = sub i32 %5479, 1
  %5482 = mul i32 %5479, %5481
  %5483 = urem i32 %5482, 2
  %5484 = icmp eq i32 %5483, 0
  %5485 = icmp slt i32 %5480, 10
  %5486 = or i1 %5484, %5485
  br i1 %5486, label %originalBBpart21587, label %originalBB1572alteredBB

originalBBpart21587:                              ; preds = %originalBB1572
  br label %5487, !dbg !3020

5487:                                             ; preds = %originalBBpart21587
  br label %5488, !dbg !3015

5488:                                             ; preds = %5487
  %5489 = load i32, i32* @x.37
  %5490 = load i32, i32* @y.38
  %5491 = sub i32 %5489, 1
  %5492 = mul i32 %5489, %5491
  %5493 = urem i32 %5492, 2
  %5494 = icmp eq i32 %5493, 0
  %5495 = icmp slt i32 %5490, 10
  %5496 = or i1 %5494, %5495
  br i1 %5496, label %originalBB1589, label %originalBB1589alteredBB

originalBB1589:                                   ; preds = %5488, %originalBB1589alteredBB
  %5497 = load i64, i64* %29, align 8, !dbg !3021
  %5498 = load i64, i64* %20, align 8, !dbg !3021
  %5499 = icmp ult i64 %5497, %5498, !dbg !3021
  %5500 = load i32, i32* @x.37
  %5501 = load i32, i32* @y.38
  %5502 = sub i32 %5500, 1
  %5503 = mul i32 %5500, %5502
  %5504 = urem i32 %5503, 2
  %5505 = icmp eq i32 %5504, 0
  %5506 = icmp slt i32 %5501, 10
  %5507 = or i1 %5505, %5506
  br i1 %5507, label %originalBBpart21591, label %originalBB1589alteredBB

originalBBpart21591:                              ; preds = %originalBB1589
  br i1 %5499, label %5508, label %5528, !dbg !3024

5508:                                             ; preds = %originalBBpart21591
  %5509 = load i32, i32* @x.37
  %5510 = load i32, i32* @y.38
  %5511 = sub i32 %5509, 1
  %5512 = mul i32 %5509, %5511
  %5513 = urem i32 %5512, 2
  %5514 = icmp eq i32 %5513, 0
  %5515 = icmp slt i32 %5510, 10
  %5516 = or i1 %5514, %5515
  br i1 %5516, label %originalBB1593, label %originalBB1593alteredBB

originalBB1593:                                   ; preds = %5508, %originalBB1593alteredBB
  %5517 = load i8*, i8** %19, align 8, !dbg !3021
  %5518 = load i64, i64* %29, align 8, !dbg !3021
  %5519 = getelementptr inbounds i8, i8* %5517, i64 %5518, !dbg !3021
  store i8 36, i8* %5519, align 1, !dbg !3021
  %5520 = load i32, i32* @x.37
  %5521 = load i32, i32* @y.38
  %5522 = sub i32 %5520, 1
  %5523 = mul i32 %5520, %5522
  %5524 = urem i32 %5523, 2
  %5525 = icmp eq i32 %5524, 0
  %5526 = icmp slt i32 %5521, 10
  %5527 = or i1 %5525, %5526
  br i1 %5527, label %originalBBpart21595, label %originalBB1593alteredBB

originalBBpart21595:                              ; preds = %originalBB1593
  br label %5528, !dbg !3021

5528:                                             ; preds = %originalBBpart21595, %originalBBpart21591
  %5529 = load i32, i32* @x.37
  %5530 = load i32, i32* @y.38
  %5531 = sub i32 %5529, 1
  %5532 = mul i32 %5529, %5531
  %5533 = urem i32 %5532, 2
  %5534 = icmp eq i32 %5533, 0
  %5535 = icmp slt i32 %5530, 10
  %5536 = or i1 %5534, %5535
  br i1 %5536, label %originalBB1597, label %originalBB1597alteredBB

originalBB1597:                                   ; preds = %5528, %originalBB1597alteredBB
  %5537 = load i64, i64* %29, align 8, !dbg !3024
  %5538 = add i64 %5537, 1, !dbg !3024
  store i64 %5538, i64* %29, align 8, !dbg !3024
  %5539 = load i32, i32* @x.37
  %5540 = load i32, i32* @y.38
  %5541 = sub i32 %5539, 1
  %5542 = mul i32 %5539, %5541
  %5543 = urem i32 %5542, 2
  %5544 = icmp eq i32 %5543, 0
  %5545 = icmp slt i32 %5540, 10
  %5546 = or i1 %5544, %5545
  br i1 %5546, label %originalBBpart21600, label %originalBB1597alteredBB

originalBBpart21600:                              ; preds = %originalBB1597
  br label %5547, !dbg !3024

5547:                                             ; preds = %originalBBpart21600
  %5548 = load i32, i32* @x.37
  %5549 = load i32, i32* @y.38
  %5550 = sub i32 %5548, 1
  %5551 = mul i32 %5548, %5550
  %5552 = urem i32 %5551, 2
  %5553 = icmp eq i32 %5552, 0
  %5554 = icmp slt i32 %5549, 10
  %5555 = or i1 %5553, %5554
  br i1 %5555, label %originalBB1602, label %originalBB1602alteredBB

originalBB1602:                                   ; preds = %5547, %originalBB1602alteredBB
  %5556 = load i32, i32* @x.37
  %5557 = load i32, i32* @y.38
  %5558 = sub i32 %5556, 1
  %5559 = mul i32 %5556, %5558
  %5560 = urem i32 %5559, 2
  %5561 = icmp eq i32 %5560, 0
  %5562 = icmp slt i32 %5557, 10
  %5563 = or i1 %5561, %5562
  br i1 %5563, label %originalBBpart21604, label %originalBB1602alteredBB

originalBBpart21604:                              ; preds = %originalBB1602
  br label %5564, !dbg !3015

5564:                                             ; preds = %originalBBpart21604
  %5565 = load i32, i32* @x.37
  %5566 = load i32, i32* @y.38
  %5567 = sub i32 %5565, 1
  %5568 = mul i32 %5565, %5567
  %5569 = urem i32 %5568, 2
  %5570 = icmp eq i32 %5569, 0
  %5571 = icmp slt i32 %5566, 10
  %5572 = or i1 %5570, %5571
  br i1 %5572, label %originalBB1606, label %originalBB1606alteredBB

originalBB1606:                                   ; preds = %5564, %originalBB1606alteredBB
  %5573 = load i64, i64* %29, align 8, !dbg !3025
  %5574 = load i64, i64* %20, align 8, !dbg !3025
  %5575 = icmp ult i64 %5573, %5574, !dbg !3025
  %5576 = load i32, i32* @x.37
  %5577 = load i32, i32* @y.38
  %5578 = sub i32 %5576, 1
  %5579 = mul i32 %5576, %5578
  %5580 = urem i32 %5579, 2
  %5581 = icmp eq i32 %5580, 0
  %5582 = icmp slt i32 %5577, 10
  %5583 = or i1 %5581, %5582
  br i1 %5583, label %originalBBpart21608, label %originalBB1606alteredBB

originalBBpart21608:                              ; preds = %originalBB1606
  br i1 %5575, label %5584, label %5604, !dbg !3028

5584:                                             ; preds = %originalBBpart21608
  %5585 = load i32, i32* @x.37
  %5586 = load i32, i32* @y.38
  %5587 = sub i32 %5585, 1
  %5588 = mul i32 %5585, %5587
  %5589 = urem i32 %5588, 2
  %5590 = icmp eq i32 %5589, 0
  %5591 = icmp slt i32 %5586, 10
  %5592 = or i1 %5590, %5591
  br i1 %5592, label %originalBB1610, label %originalBB1610alteredBB

originalBB1610:                                   ; preds = %5584, %originalBB1610alteredBB
  %5593 = load i8*, i8** %19, align 8, !dbg !3025
  %5594 = load i64, i64* %29, align 8, !dbg !3025
  %5595 = getelementptr inbounds i8, i8* %5593, i64 %5594, !dbg !3025
  store i8 39, i8* %5595, align 1, !dbg !3025
  %5596 = load i32, i32* @x.37
  %5597 = load i32, i32* @y.38
  %5598 = sub i32 %5596, 1
  %5599 = mul i32 %5596, %5598
  %5600 = urem i32 %5599, 2
  %5601 = icmp eq i32 %5600, 0
  %5602 = icmp slt i32 %5597, 10
  %5603 = or i1 %5601, %5602
  br i1 %5603, label %originalBBpart21612, label %originalBB1610alteredBB

originalBBpart21612:                              ; preds = %originalBB1610
  br label %5604, !dbg !3025

5604:                                             ; preds = %originalBBpart21612, %originalBBpart21608
  %5605 = load i32, i32* @x.37
  %5606 = load i32, i32* @y.38
  %5607 = sub i32 %5605, 1
  %5608 = mul i32 %5605, %5607
  %5609 = urem i32 %5608, 2
  %5610 = icmp eq i32 %5609, 0
  %5611 = icmp slt i32 %5606, 10
  %5612 = or i1 %5610, %5611
  br i1 %5612, label %originalBB1614, label %originalBB1614alteredBB

originalBB1614:                                   ; preds = %5604, %originalBB1614alteredBB
  %5613 = load i64, i64* %29, align 8, !dbg !3028
  %5614 = add i64 %5613, 1, !dbg !3028
  store i64 %5614, i64* %29, align 8, !dbg !3028
  %5615 = load i32, i32* @x.37
  %5616 = load i32, i32* @y.38
  %5617 = sub i32 %5615, 1
  %5618 = mul i32 %5615, %5617
  %5619 = urem i32 %5618, 2
  %5620 = icmp eq i32 %5619, 0
  %5621 = icmp slt i32 %5616, 10
  %5622 = or i1 %5620, %5621
  br i1 %5622, label %originalBBpart21627, label %originalBB1614alteredBB

originalBBpart21627:                              ; preds = %originalBB1614
  br label %5623, !dbg !3028

5623:                                             ; preds = %originalBBpart21627
  %5624 = load i32, i32* @x.37
  %5625 = load i32, i32* @y.38
  %5626 = sub i32 %5624, 1
  %5627 = mul i32 %5624, %5626
  %5628 = urem i32 %5627, 2
  %5629 = icmp eq i32 %5628, 0
  %5630 = icmp slt i32 %5625, 10
  %5631 = or i1 %5629, %5630
  br i1 %5631, label %originalBB1629, label %originalBB1629alteredBB

originalBB1629:                                   ; preds = %5623, %originalBB1629alteredBB
  store i8 1, i8* %36, align 1, !dbg !3015
  %5632 = load i32, i32* @x.37
  %5633 = load i32, i32* @y.38
  %5634 = sub i32 %5632, 1
  %5635 = mul i32 %5632, %5634
  %5636 = urem i32 %5635, 2
  %5637 = icmp eq i32 %5636, 0
  %5638 = icmp slt i32 %5633, 10
  %5639 = or i1 %5637, %5638
  br i1 %5639, label %originalBBpart21631, label %originalBB1629alteredBB

originalBBpart21631:                              ; preds = %originalBB1629
  br label %5640, !dbg !3015

5640:                                             ; preds = %originalBBpart21631, %originalBBpart21558, %originalBBpart21554
  %5641 = load i32, i32* @x.37
  %5642 = load i32, i32* @y.38
  %5643 = sub i32 %5641, 1
  %5644 = mul i32 %5641, %5643
  %5645 = urem i32 %5644, 2
  %5646 = icmp eq i32 %5645, 0
  %5647 = icmp slt i32 %5642, 10
  %5648 = or i1 %5646, %5647
  br i1 %5648, label %originalBB1633, label %originalBB1633alteredBB

originalBB1633:                                   ; preds = %5640, %originalBB1633alteredBB
  %5649 = load i32, i32* @x.37
  %5650 = load i32, i32* @y.38
  %5651 = sub i32 %5649, 1
  %5652 = mul i32 %5649, %5651
  %5653 = urem i32 %5652, 2
  %5654 = icmp eq i32 %5653, 0
  %5655 = icmp slt i32 %5650, 10
  %5656 = or i1 %5654, %5655
  br i1 %5656, label %originalBBpart21635, label %originalBB1633alteredBB

originalBBpart21635:                              ; preds = %originalBB1633
  br label %5657, !dbg !3012

5657:                                             ; preds = %originalBBpart21635
  %5658 = load i32, i32* @x.37
  %5659 = load i32, i32* @y.38
  %5660 = sub i32 %5658, 1
  %5661 = mul i32 %5658, %5660
  %5662 = urem i32 %5661, 2
  %5663 = icmp eq i32 %5662, 0
  %5664 = icmp slt i32 %5659, 10
  %5665 = or i1 %5663, %5664
  br i1 %5665, label %originalBB1637, label %originalBB1637alteredBB

originalBB1637:                                   ; preds = %5657, %originalBB1637alteredBB
  %5666 = load i64, i64* %29, align 8, !dbg !3029
  %5667 = load i64, i64* %20, align 8, !dbg !3029
  %5668 = icmp ult i64 %5666, %5667, !dbg !3029
  %5669 = load i32, i32* @x.37
  %5670 = load i32, i32* @y.38
  %5671 = sub i32 %5669, 1
  %5672 = mul i32 %5669, %5671
  %5673 = urem i32 %5672, 2
  %5674 = icmp eq i32 %5673, 0
  %5675 = icmp slt i32 %5670, 10
  %5676 = or i1 %5674, %5675
  br i1 %5676, label %originalBBpart21639, label %originalBB1637alteredBB

originalBBpart21639:                              ; preds = %originalBB1637
  br i1 %5668, label %5677, label %5697, !dbg !3032

5677:                                             ; preds = %originalBBpart21639
  %5678 = load i32, i32* @x.37
  %5679 = load i32, i32* @y.38
  %5680 = sub i32 %5678, 1
  %5681 = mul i32 %5678, %5680
  %5682 = urem i32 %5681, 2
  %5683 = icmp eq i32 %5682, 0
  %5684 = icmp slt i32 %5679, 10
  %5685 = or i1 %5683, %5684
  br i1 %5685, label %originalBB1641, label %originalBB1641alteredBB

originalBB1641:                                   ; preds = %5677, %originalBB1641alteredBB
  %5686 = load i8*, i8** %19, align 8, !dbg !3029
  %5687 = load i64, i64* %29, align 8, !dbg !3029
  %5688 = getelementptr inbounds i8, i8* %5686, i64 %5687, !dbg !3029
  store i8 92, i8* %5688, align 1, !dbg !3029
  %5689 = load i32, i32* @x.37
  %5690 = load i32, i32* @y.38
  %5691 = sub i32 %5689, 1
  %5692 = mul i32 %5689, %5691
  %5693 = urem i32 %5692, 2
  %5694 = icmp eq i32 %5693, 0
  %5695 = icmp slt i32 %5690, 10
  %5696 = or i1 %5694, %5695
  br i1 %5696, label %originalBBpart21643, label %originalBB1641alteredBB

originalBBpart21643:                              ; preds = %originalBB1641
  br label %5697, !dbg !3029

5697:                                             ; preds = %originalBBpart21643, %originalBBpart21639
  %5698 = load i32, i32* @x.37
  %5699 = load i32, i32* @y.38
  %5700 = sub i32 %5698, 1
  %5701 = mul i32 %5698, %5700
  %5702 = urem i32 %5701, 2
  %5703 = icmp eq i32 %5702, 0
  %5704 = icmp slt i32 %5699, 10
  %5705 = or i1 %5703, %5704
  br i1 %5705, label %originalBB1645, label %originalBB1645alteredBB

originalBB1645:                                   ; preds = %5697, %originalBB1645alteredBB
  %5706 = load i64, i64* %29, align 8, !dbg !3032
  %5707 = add i64 %5706, 1, !dbg !3032
  store i64 %5707, i64* %29, align 8, !dbg !3032
  %5708 = load i32, i32* @x.37
  %5709 = load i32, i32* @y.38
  %5710 = sub i32 %5708, 1
  %5711 = mul i32 %5708, %5710
  %5712 = urem i32 %5711, 2
  %5713 = icmp eq i32 %5712, 0
  %5714 = icmp slt i32 %5709, 10
  %5715 = or i1 %5713, %5714
  br i1 %5715, label %originalBBpart21662, label %originalBB1645alteredBB

originalBBpart21662:                              ; preds = %originalBB1645
  br label %5716, !dbg !3032

5716:                                             ; preds = %originalBBpart21662
  br label %5717, !dbg !3012

5717:                                             ; preds = %5716
  %5718 = load i32, i32* @x.37
  %5719 = load i32, i32* @y.38
  %5720 = sub i32 %5718, 1
  %5721 = mul i32 %5718, %5720
  %5722 = urem i32 %5721, 2
  %5723 = icmp eq i32 %5722, 0
  %5724 = icmp slt i32 %5719, 10
  %5725 = or i1 %5723, %5724
  br i1 %5725, label %originalBB1664, label %originalBB1664alteredBB

originalBB1664:                                   ; preds = %5717, %originalBB1664alteredBB
  %5726 = load i32, i32* @x.37
  %5727 = load i32, i32* @y.38
  %5728 = sub i32 %5726, 1
  %5729 = mul i32 %5726, %5728
  %5730 = urem i32 %5729, 2
  %5731 = icmp eq i32 %5730, 0
  %5732 = icmp slt i32 %5727, 10
  %5733 = or i1 %5731, %5732
  br i1 %5733, label %originalBBpart21666, label %originalBB1664alteredBB

originalBBpart21666:                              ; preds = %originalBB1664
  br label %5734, !dbg !3012

5734:                                             ; preds = %originalBBpart21666, %originalBBpart21534, %originalBBpart21481, %originalBBpart2700, %originalBBpart2684
  call void @llvm.dbg.label(metadata !3033), !dbg !3034
  %5735 = load i32, i32* @x.37
  %5736 = load i32, i32* @y.38
  %5737 = sub i32 %5735, 1
  %5738 = mul i32 %5735, %5737
  %5739 = urem i32 %5738, 2
  %5740 = icmp eq i32 %5739, 0
  %5741 = icmp slt i32 %5736, 10
  %5742 = or i1 %5740, %5741
  br i1 %5742, label %originalBB1668, label %originalBB1668alteredBB

originalBB1668:                                   ; preds = %5734, %originalBB1668alteredBB
  %5743 = load i32, i32* @x.37
  %5744 = load i32, i32* @y.38
  %5745 = sub i32 %5743, 1
  %5746 = mul i32 %5743, %5745
  %5747 = urem i32 %5746, 2
  %5748 = icmp eq i32 %5747, 0
  %5749 = icmp slt i32 %5744, 10
  %5750 = or i1 %5748, %5749
  br i1 %5750, label %originalBBpart21670, label %originalBB1668alteredBB

originalBBpart21670:                              ; preds = %originalBB1668
  br label %5751, !dbg !3035

5751:                                             ; preds = %originalBBpart21670
  %5752 = load i32, i32* @x.37
  %5753 = load i32, i32* @y.38
  %5754 = sub i32 %5752, 1
  %5755 = mul i32 %5752, %5754
  %5756 = urem i32 %5755, 2
  %5757 = icmp eq i32 %5756, 0
  %5758 = icmp slt i32 %5753, 10
  %5759 = or i1 %5757, %5758
  br i1 %5759, label %originalBB1672, label %originalBB1672alteredBB

originalBB1672:                                   ; preds = %5751, %originalBB1672alteredBB
  %5760 = load i8, i8* %36, align 1, !dbg !3036
  %5761 = trunc i8 %5760 to i1, !dbg !3036
  %5762 = load i32, i32* @x.37
  %5763 = load i32, i32* @y.38
  %5764 = sub i32 %5762, 1
  %5765 = mul i32 %5762, %5764
  %5766 = urem i32 %5765, 2
  %5767 = icmp eq i32 %5766, 0
  %5768 = icmp slt i32 %5763, 10
  %5769 = or i1 %5767, %5768
  br i1 %5769, label %originalBBpart21674, label %originalBB1672alteredBB

originalBBpart21674:                              ; preds = %originalBB1672
  br i1 %5761, label %5770, label %5942, !dbg !3036

5770:                                             ; preds = %originalBBpart21674
  %5771 = load i32, i32* @x.37
  %5772 = load i32, i32* @y.38
  %5773 = sub i32 %5771, 1
  %5774 = mul i32 %5771, %5773
  %5775 = urem i32 %5774, 2
  %5776 = icmp eq i32 %5775, 0
  %5777 = icmp slt i32 %5772, 10
  %5778 = or i1 %5776, %5777
  br i1 %5778, label %originalBB1676, label %originalBB1676alteredBB

originalBB1676:                                   ; preds = %5770, %originalBB1676alteredBB
  %5779 = load i8, i8* %42, align 1, !dbg !3036
  %5780 = trunc i8 %5779 to i1, !dbg !3036
  %5781 = load i32, i32* @x.37
  %5782 = load i32, i32* @y.38
  %5783 = sub i32 %5781, 1
  %5784 = mul i32 %5781, %5783
  %5785 = urem i32 %5784, 2
  %5786 = icmp eq i32 %5785, 0
  %5787 = icmp slt i32 %5782, 10
  %5788 = or i1 %5786, %5787
  br i1 %5788, label %originalBBpart21678, label %originalBB1676alteredBB

originalBBpart21678:                              ; preds = %originalBB1676
  br i1 %5780, label %5942, label %5789, !dbg !3039

5789:                                             ; preds = %originalBBpart21678
  %5790 = load i32, i32* @x.37
  %5791 = load i32, i32* @y.38
  %5792 = sub i32 %5790, 1
  %5793 = mul i32 %5790, %5792
  %5794 = urem i32 %5793, 2
  %5795 = icmp eq i32 %5794, 0
  %5796 = icmp slt i32 %5791, 10
  %5797 = or i1 %5795, %5796
  br i1 %5797, label %originalBB1680, label %originalBB1680alteredBB

originalBB1680:                                   ; preds = %5789, %originalBB1680alteredBB
  %5798 = load i32, i32* @x.37
  %5799 = load i32, i32* @y.38
  %5800 = sub i32 %5798, 1
  %5801 = mul i32 %5798, %5800
  %5802 = urem i32 %5801, 2
  %5803 = icmp eq i32 %5802, 0
  %5804 = icmp slt i32 %5799, 10
  %5805 = or i1 %5803, %5804
  br i1 %5805, label %originalBBpart21682, label %originalBB1680alteredBB

originalBBpart21682:                              ; preds = %originalBB1680
  br label %5806, !dbg !3040

5806:                                             ; preds = %originalBBpart21682
  %5807 = load i64, i64* %29, align 8, !dbg !3042
  %5808 = load i64, i64* %20, align 8, !dbg !3042
  %5809 = icmp ult i64 %5807, %5808, !dbg !3042
  br i1 %5809, label %5810, label %5830, !dbg !3045

5810:                                             ; preds = %5806
  %5811 = load i32, i32* @x.37
  %5812 = load i32, i32* @y.38
  %5813 = sub i32 %5811, 1
  %5814 = mul i32 %5811, %5813
  %5815 = urem i32 %5814, 2
  %5816 = icmp eq i32 %5815, 0
  %5817 = icmp slt i32 %5812, 10
  %5818 = or i1 %5816, %5817
  br i1 %5818, label %originalBB1684, label %originalBB1684alteredBB

originalBB1684:                                   ; preds = %5810, %originalBB1684alteredBB
  %5819 = load i8*, i8** %19, align 8, !dbg !3042
  %5820 = load i64, i64* %29, align 8, !dbg !3042
  %5821 = getelementptr inbounds i8, i8* %5819, i64 %5820, !dbg !3042
  store i8 39, i8* %5821, align 1, !dbg !3042
  %5822 = load i32, i32* @x.37
  %5823 = load i32, i32* @y.38
  %5824 = sub i32 %5822, 1
  %5825 = mul i32 %5822, %5824
  %5826 = urem i32 %5825, 2
  %5827 = icmp eq i32 %5826, 0
  %5828 = icmp slt i32 %5823, 10
  %5829 = or i1 %5827, %5828
  br i1 %5829, label %originalBBpart21686, label %originalBB1684alteredBB

originalBBpart21686:                              ; preds = %originalBB1684
  br label %5830, !dbg !3042

5830:                                             ; preds = %originalBBpart21686, %5806
  %5831 = load i32, i32* @x.37
  %5832 = load i32, i32* @y.38
  %5833 = sub i32 %5831, 1
  %5834 = mul i32 %5831, %5833
  %5835 = urem i32 %5834, 2
  %5836 = icmp eq i32 %5835, 0
  %5837 = icmp slt i32 %5832, 10
  %5838 = or i1 %5836, %5837
  br i1 %5838, label %originalBB1688, label %originalBB1688alteredBB

originalBB1688:                                   ; preds = %5830, %originalBB1688alteredBB
  %5839 = load i64, i64* %29, align 8, !dbg !3045
  %5840 = add i64 %5839, 1, !dbg !3045
  store i64 %5840, i64* %29, align 8, !dbg !3045
  %5841 = load i32, i32* @x.37
  %5842 = load i32, i32* @y.38
  %5843 = sub i32 %5841, 1
  %5844 = mul i32 %5841, %5843
  %5845 = urem i32 %5844, 2
  %5846 = icmp eq i32 %5845, 0
  %5847 = icmp slt i32 %5842, 10
  %5848 = or i1 %5846, %5847
  br i1 %5848, label %originalBBpart21692, label %originalBB1688alteredBB

originalBBpart21692:                              ; preds = %originalBB1688
  br label %5849, !dbg !3045

5849:                                             ; preds = %originalBBpart21692
  %5850 = load i32, i32* @x.37
  %5851 = load i32, i32* @y.38
  %5852 = sub i32 %5850, 1
  %5853 = mul i32 %5850, %5852
  %5854 = urem i32 %5853, 2
  %5855 = icmp eq i32 %5854, 0
  %5856 = icmp slt i32 %5851, 10
  %5857 = or i1 %5855, %5856
  br i1 %5857, label %originalBB1694, label %originalBB1694alteredBB

originalBB1694:                                   ; preds = %5849, %originalBB1694alteredBB
  %5858 = load i32, i32* @x.37
  %5859 = load i32, i32* @y.38
  %5860 = sub i32 %5858, 1
  %5861 = mul i32 %5858, %5860
  %5862 = urem i32 %5861, 2
  %5863 = icmp eq i32 %5862, 0
  %5864 = icmp slt i32 %5859, 10
  %5865 = or i1 %5863, %5864
  br i1 %5865, label %originalBBpart21696, label %originalBB1694alteredBB

originalBBpart21696:                              ; preds = %originalBB1694
  br label %5866, !dbg !3040

5866:                                             ; preds = %originalBBpart21696
  %5867 = load i32, i32* @x.37
  %5868 = load i32, i32* @y.38
  %5869 = sub i32 %5867, 1
  %5870 = mul i32 %5867, %5869
  %5871 = urem i32 %5870, 2
  %5872 = icmp eq i32 %5871, 0
  %5873 = icmp slt i32 %5868, 10
  %5874 = or i1 %5872, %5873
  br i1 %5874, label %originalBB1698, label %originalBB1698alteredBB

originalBB1698:                                   ; preds = %5866, %originalBB1698alteredBB
  %5875 = load i64, i64* %29, align 8, !dbg !3046
  %5876 = load i64, i64* %20, align 8, !dbg !3046
  %5877 = icmp ult i64 %5875, %5876, !dbg !3046
  %5878 = load i32, i32* @x.37
  %5879 = load i32, i32* @y.38
  %5880 = sub i32 %5878, 1
  %5881 = mul i32 %5878, %5880
  %5882 = urem i32 %5881, 2
  %5883 = icmp eq i32 %5882, 0
  %5884 = icmp slt i32 %5879, 10
  %5885 = or i1 %5883, %5884
  br i1 %5885, label %originalBBpart21700, label %originalBB1698alteredBB

originalBBpart21700:                              ; preds = %originalBB1698
  br i1 %5877, label %5886, label %5906, !dbg !3049

5886:                                             ; preds = %originalBBpart21700
  %5887 = load i32, i32* @x.37
  %5888 = load i32, i32* @y.38
  %5889 = sub i32 %5887, 1
  %5890 = mul i32 %5887, %5889
  %5891 = urem i32 %5890, 2
  %5892 = icmp eq i32 %5891, 0
  %5893 = icmp slt i32 %5888, 10
  %5894 = or i1 %5892, %5893
  br i1 %5894, label %originalBB1702, label %originalBB1702alteredBB

originalBB1702:                                   ; preds = %5886, %originalBB1702alteredBB
  %5895 = load i8*, i8** %19, align 8, !dbg !3046
  %5896 = load i64, i64* %29, align 8, !dbg !3046
  %5897 = getelementptr inbounds i8, i8* %5895, i64 %5896, !dbg !3046
  store i8 39, i8* %5897, align 1, !dbg !3046
  %5898 = load i32, i32* @x.37
  %5899 = load i32, i32* @y.38
  %5900 = sub i32 %5898, 1
  %5901 = mul i32 %5898, %5900
  %5902 = urem i32 %5901, 2
  %5903 = icmp eq i32 %5902, 0
  %5904 = icmp slt i32 %5899, 10
  %5905 = or i1 %5903, %5904
  br i1 %5905, label %originalBBpart21704, label %originalBB1702alteredBB

originalBBpart21704:                              ; preds = %originalBB1702
  br label %5906, !dbg !3046

5906:                                             ; preds = %originalBBpart21704, %originalBBpart21700
  %5907 = load i32, i32* @x.37
  %5908 = load i32, i32* @y.38
  %5909 = sub i32 %5907, 1
  %5910 = mul i32 %5907, %5909
  %5911 = urem i32 %5910, 2
  %5912 = icmp eq i32 %5911, 0
  %5913 = icmp slt i32 %5908, 10
  %5914 = or i1 %5912, %5913
  br i1 %5914, label %originalBB1706, label %originalBB1706alteredBB

originalBB1706:                                   ; preds = %5906, %originalBB1706alteredBB
  %5915 = load i64, i64* %29, align 8, !dbg !3049
  %5916 = add i64 %5915, 1, !dbg !3049
  store i64 %5916, i64* %29, align 8, !dbg !3049
  %5917 = load i32, i32* @x.37
  %5918 = load i32, i32* @y.38
  %5919 = sub i32 %5917, 1
  %5920 = mul i32 %5917, %5919
  %5921 = urem i32 %5920, 2
  %5922 = icmp eq i32 %5921, 0
  %5923 = icmp slt i32 %5918, 10
  %5924 = or i1 %5922, %5923
  br i1 %5924, label %originalBBpart21710, label %originalBB1706alteredBB

originalBBpart21710:                              ; preds = %originalBB1706
  br label %5925, !dbg !3049

5925:                                             ; preds = %originalBBpart21710
  %5926 = load i32, i32* @x.37
  %5927 = load i32, i32* @y.38
  %5928 = sub i32 %5926, 1
  %5929 = mul i32 %5926, %5928
  %5930 = urem i32 %5929, 2
  %5931 = icmp eq i32 %5930, 0
  %5932 = icmp slt i32 %5927, 10
  %5933 = or i1 %5931, %5932
  br i1 %5933, label %originalBB1712, label %originalBB1712alteredBB

originalBB1712:                                   ; preds = %5925, %originalBB1712alteredBB
  store i8 0, i8* %36, align 1, !dbg !3040
  %5934 = load i32, i32* @x.37
  %5935 = load i32, i32* @y.38
  %5936 = sub i32 %5934, 1
  %5937 = mul i32 %5934, %5936
  %5938 = urem i32 %5937, 2
  %5939 = icmp eq i32 %5938, 0
  %5940 = icmp slt i32 %5935, 10
  %5941 = or i1 %5939, %5940
  br i1 %5941, label %originalBBpart21714, label %originalBB1712alteredBB

originalBBpart21714:                              ; preds = %originalBB1712
  br label %5942, !dbg !3040

5942:                                             ; preds = %originalBBpart21714, %originalBBpart21678, %originalBBpart21674
  %5943 = load i32, i32* @x.37
  %5944 = load i32, i32* @y.38
  %5945 = sub i32 %5943, 1
  %5946 = mul i32 %5943, %5945
  %5947 = urem i32 %5946, 2
  %5948 = icmp eq i32 %5947, 0
  %5949 = icmp slt i32 %5944, 10
  %5950 = or i1 %5948, %5949
  br i1 %5950, label %originalBB1716, label %originalBB1716alteredBB

originalBB1716:                                   ; preds = %5942, %originalBB1716alteredBB
  %5951 = load i32, i32* @x.37
  %5952 = load i32, i32* @y.38
  %5953 = sub i32 %5951, 1
  %5954 = mul i32 %5951, %5953
  %5955 = urem i32 %5954, 2
  %5956 = icmp eq i32 %5955, 0
  %5957 = icmp slt i32 %5952, 10
  %5958 = or i1 %5956, %5957
  br i1 %5958, label %originalBBpart21718, label %originalBB1716alteredBB

originalBBpart21718:                              ; preds = %originalBB1716
  br label %5959, !dbg !3039

5959:                                             ; preds = %originalBBpart21718
  %5960 = load i32, i32* @x.37
  %5961 = load i32, i32* @y.38
  %5962 = sub i32 %5960, 1
  %5963 = mul i32 %5960, %5962
  %5964 = urem i32 %5963, 2
  %5965 = icmp eq i32 %5964, 0
  %5966 = icmp slt i32 %5961, 10
  %5967 = or i1 %5965, %5966
  br i1 %5967, label %originalBB1720, label %originalBB1720alteredBB

originalBB1720:                                   ; preds = %5959, %originalBB1720alteredBB
  %5968 = load i32, i32* @x.37
  %5969 = load i32, i32* @y.38
  %5970 = sub i32 %5968, 1
  %5971 = mul i32 %5968, %5970
  %5972 = urem i32 %5971, 2
  %5973 = icmp eq i32 %5972, 0
  %5974 = icmp slt i32 %5969, 10
  %5975 = or i1 %5973, %5974
  br i1 %5975, label %originalBBpart21722, label %originalBB1720alteredBB

originalBBpart21722:                              ; preds = %originalBB1720
  br label %5976, !dbg !3050

5976:                                             ; preds = %originalBBpart21722
  %5977 = load i32, i32* @x.37
  %5978 = load i32, i32* @y.38
  %5979 = sub i32 %5977, 1
  %5980 = mul i32 %5977, %5979
  %5981 = urem i32 %5980, 2
  %5982 = icmp eq i32 %5981, 0
  %5983 = icmp slt i32 %5978, 10
  %5984 = or i1 %5982, %5983
  br i1 %5984, label %originalBB1724, label %originalBB1724alteredBB

originalBB1724:                                   ; preds = %5976, %originalBB1724alteredBB
  %5985 = load i64, i64* %29, align 8, !dbg !3051
  %5986 = load i64, i64* %20, align 8, !dbg !3051
  %5987 = icmp ult i64 %5985, %5986, !dbg !3051
  %5988 = load i32, i32* @x.37
  %5989 = load i32, i32* @y.38
  %5990 = sub i32 %5988, 1
  %5991 = mul i32 %5988, %5990
  %5992 = urem i32 %5991, 2
  %5993 = icmp eq i32 %5992, 0
  %5994 = icmp slt i32 %5989, 10
  %5995 = or i1 %5993, %5994
  br i1 %5995, label %originalBBpart21726, label %originalBB1724alteredBB

originalBBpart21726:                              ; preds = %originalBB1724
  br i1 %5987, label %5996, label %6017, !dbg !3054

5996:                                             ; preds = %originalBBpart21726
  %5997 = load i32, i32* @x.37
  %5998 = load i32, i32* @y.38
  %5999 = sub i32 %5997, 1
  %6000 = mul i32 %5997, %5999
  %6001 = urem i32 %6000, 2
  %6002 = icmp eq i32 %6001, 0
  %6003 = icmp slt i32 %5998, 10
  %6004 = or i1 %6002, %6003
  br i1 %6004, label %originalBB1728, label %originalBB1728alteredBB

originalBB1728:                                   ; preds = %5996, %originalBB1728alteredBB
  %6005 = load i8, i8* %39, align 1, !dbg !3051
  %6006 = load i8*, i8** %19, align 8, !dbg !3051
  %6007 = load i64, i64* %29, align 8, !dbg !3051
  %6008 = getelementptr inbounds i8, i8* %6006, i64 %6007, !dbg !3051
  store i8 %6005, i8* %6008, align 1, !dbg !3051
  %6009 = load i32, i32* @x.37
  %6010 = load i32, i32* @y.38
  %6011 = sub i32 %6009, 1
  %6012 = mul i32 %6009, %6011
  %6013 = urem i32 %6012, 2
  %6014 = icmp eq i32 %6013, 0
  %6015 = icmp slt i32 %6010, 10
  %6016 = or i1 %6014, %6015
  br i1 %6016, label %originalBBpart21730, label %originalBB1728alteredBB

originalBBpart21730:                              ; preds = %originalBB1728
  br label %6017, !dbg !3051

6017:                                             ; preds = %originalBBpart21730, %originalBBpart21726
  %6018 = load i32, i32* @x.37
  %6019 = load i32, i32* @y.38
  %6020 = sub i32 %6018, 1
  %6021 = mul i32 %6018, %6020
  %6022 = urem i32 %6021, 2
  %6023 = icmp eq i32 %6022, 0
  %6024 = icmp slt i32 %6019, 10
  %6025 = or i1 %6023, %6024
  br i1 %6025, label %originalBB1732, label %originalBB1732alteredBB

originalBB1732:                                   ; preds = %6017, %originalBB1732alteredBB
  %6026 = load i64, i64* %29, align 8, !dbg !3054
  %6027 = add i64 %6026, 1, !dbg !3054
  store i64 %6027, i64* %29, align 8, !dbg !3054
  %6028 = load i32, i32* @x.37
  %6029 = load i32, i32* @y.38
  %6030 = sub i32 %6028, 1
  %6031 = mul i32 %6028, %6030
  %6032 = urem i32 %6031, 2
  %6033 = icmp eq i32 %6032, 0
  %6034 = icmp slt i32 %6029, 10
  %6035 = or i1 %6033, %6034
  br i1 %6035, label %originalBBpart21739, label %originalBB1732alteredBB

originalBBpart21739:                              ; preds = %originalBB1732
  br label %6036, !dbg !3054

6036:                                             ; preds = %originalBBpart21739
  %6037 = load i32, i32* @x.37
  %6038 = load i32, i32* @y.38
  %6039 = sub i32 %6037, 1
  %6040 = mul i32 %6037, %6039
  %6041 = urem i32 %6040, 2
  %6042 = icmp eq i32 %6041, 0
  %6043 = icmp slt i32 %6038, 10
  %6044 = or i1 %6042, %6043
  br i1 %6044, label %originalBB1741, label %originalBB1741alteredBB

originalBB1741:                                   ; preds = %6036, %originalBB1741alteredBB
  %6045 = load i8, i8* %43, align 1, !dbg !3055
  %6046 = trunc i8 %6045 to i1, !dbg !3055
  %6047 = load i32, i32* @x.37
  %6048 = load i32, i32* @y.38
  %6049 = sub i32 %6047, 1
  %6050 = mul i32 %6047, %6049
  %6051 = urem i32 %6050, 2
  %6052 = icmp eq i32 %6051, 0
  %6053 = icmp slt i32 %6048, 10
  %6054 = or i1 %6052, %6053
  br i1 %6054, label %originalBBpart21743, label %originalBB1741alteredBB

originalBBpart21743:                              ; preds = %originalBB1741
  br i1 %6046, label %6072, label %6055, !dbg !3057

6055:                                             ; preds = %originalBBpart21743
  %6056 = load i32, i32* @x.37
  %6057 = load i32, i32* @y.38
  %6058 = sub i32 %6056, 1
  %6059 = mul i32 %6056, %6058
  %6060 = urem i32 %6059, 2
  %6061 = icmp eq i32 %6060, 0
  %6062 = icmp slt i32 %6057, 10
  %6063 = or i1 %6061, %6062
  br i1 %6063, label %originalBB1745, label %originalBB1745alteredBB

originalBB1745:                                   ; preds = %6055, %originalBB1745alteredBB
  store i8 0, i8* %38, align 1, !dbg !3058
  %6064 = load i32, i32* @x.37
  %6065 = load i32, i32* @y.38
  %6066 = sub i32 %6064, 1
  %6067 = mul i32 %6064, %6066
  %6068 = urem i32 %6067, 2
  %6069 = icmp eq i32 %6068, 0
  %6070 = icmp slt i32 %6065, 10
  %6071 = or i1 %6069, %6070
  br i1 %6071, label %originalBBpart21747, label %originalBB1745alteredBB

originalBBpart21747:                              ; preds = %originalBB1745
  br label %6072, !dbg !3059

6072:                                             ; preds = %originalBBpart21747, %originalBBpart21743
  %6073 = load i32, i32* @x.37
  %6074 = load i32, i32* @y.38
  %6075 = sub i32 %6073, 1
  %6076 = mul i32 %6073, %6075
  %6077 = urem i32 %6076, 2
  %6078 = icmp eq i32 %6077, 0
  %6079 = icmp slt i32 %6074, 10
  %6080 = or i1 %6078, %6079
  br i1 %6080, label %originalBB1749, label %originalBB1749alteredBB

originalBB1749:                                   ; preds = %6072, %originalBB1749alteredBB
  %6081 = load i32, i32* @x.37
  %6082 = load i32, i32* @y.38
  %6083 = sub i32 %6081, 1
  %6084 = mul i32 %6081, %6083
  %6085 = urem i32 %6084, 2
  %6086 = icmp eq i32 %6085, 0
  %6087 = icmp slt i32 %6082, 10
  %6088 = or i1 %6086, %6087
  br i1 %6088, label %originalBBpart21751, label %originalBB1749alteredBB

originalBBpart21751:                              ; preds = %originalBB1749
  br label %6089, !dbg !3060

6089:                                             ; preds = %originalBBpart21751, %originalBBpart2445
  %6090 = load i32, i32* @x.37
  %6091 = load i32, i32* @y.38
  %6092 = sub i32 %6090, 1
  %6093 = mul i32 %6090, %6092
  %6094 = urem i32 %6093, 2
  %6095 = icmp eq i32 %6094, 0
  %6096 = icmp slt i32 %6091, 10
  %6097 = or i1 %6095, %6096
  br i1 %6097, label %originalBB1753, label %originalBB1753alteredBB

originalBB1753:                                   ; preds = %6089, %originalBB1753alteredBB
  %6098 = load i64, i64* %28, align 8, !dbg !3061
  %6099 = add i64 %6098, 1, !dbg !3061
  store i64 %6099, i64* %28, align 8, !dbg !3061
  %6100 = load i32, i32* @x.37
  %6101 = load i32, i32* @y.38
  %6102 = sub i32 %6100, 1
  %6103 = mul i32 %6100, %6102
  %6104 = urem i32 %6103, 2
  %6105 = icmp eq i32 %6104, 0
  %6106 = icmp slt i32 %6101, 10
  %6107 = or i1 %6105, %6106
  br i1 %6107, label %originalBBpart21765, label %originalBB1753alteredBB

originalBBpart21765:                              ; preds = %originalBB1753
  br label %682, !dbg !3062, !llvm.loop !3063

6108:                                             ; preds = %originalBBpart2174
  %6109 = load i32, i32* @x.37
  %6110 = load i32, i32* @y.38
  %6111 = sub i32 %6109, 1
  %6112 = mul i32 %6109, %6111
  %6113 = urem i32 %6112, 2
  %6114 = icmp eq i32 %6113, 0
  %6115 = icmp slt i32 %6110, 10
  %6116 = or i1 %6114, %6115
  br i1 %6116, label %originalBB1767, label %originalBB1767alteredBB

originalBB1767:                                   ; preds = %6108, %originalBB1767alteredBB
  %6117 = load i64, i64* %29, align 8, !dbg !3065
  %6118 = icmp eq i64 %6117, 0, !dbg !3067
  %6119 = load i32, i32* @x.37
  %6120 = load i32, i32* @y.38
  %6121 = sub i32 %6119, 1
  %6122 = mul i32 %6119, %6121
  %6123 = urem i32 %6122, 2
  %6124 = icmp eq i32 %6123, 0
  %6125 = icmp slt i32 %6120, 10
  %6126 = or i1 %6124, %6125
  br i1 %6126, label %originalBBpart21769, label %originalBB1767alteredBB

originalBBpart21769:                              ; preds = %originalBB1767
  br i1 %6118, label %6127, label %6166, !dbg !3068

6127:                                             ; preds = %originalBBpart21769
  %6128 = load i32, i32* @x.37
  %6129 = load i32, i32* @y.38
  %6130 = sub i32 %6128, 1
  %6131 = mul i32 %6128, %6130
  %6132 = urem i32 %6131, 2
  %6133 = icmp eq i32 %6132, 0
  %6134 = icmp slt i32 %6129, 10
  %6135 = or i1 %6133, %6134
  br i1 %6135, label %originalBB1771, label %originalBB1771alteredBB

originalBB1771:                                   ; preds = %6127, %originalBB1771alteredBB
  %6136 = load i32, i32* %23, align 4, !dbg !3069
  %6137 = icmp eq i32 %6136, 2, !dbg !3070
  %6138 = load i32, i32* @x.37
  %6139 = load i32, i32* @y.38
  %6140 = sub i32 %6138, 1
  %6141 = mul i32 %6138, %6140
  %6142 = urem i32 %6141, 2
  %6143 = icmp eq i32 %6142, 0
  %6144 = icmp slt i32 %6139, 10
  %6145 = or i1 %6143, %6144
  br i1 %6145, label %originalBBpart21773, label %originalBB1771alteredBB

originalBBpart21773:                              ; preds = %originalBB1771
  br i1 %6137, label %6146, label %6166, !dbg !3071

6146:                                             ; preds = %originalBBpart21773
  %6147 = load i8, i8* %35, align 1, !dbg !3072
  %6148 = trunc i8 %6147 to i1, !dbg !3072
  br i1 %6148, label %6149, label %6166, !dbg !3073

6149:                                             ; preds = %6146
  %6150 = load i32, i32* @x.37
  %6151 = load i32, i32* @y.38
  %6152 = sub i32 %6150, 1
  %6153 = mul i32 %6150, %6152
  %6154 = urem i32 %6153, 2
  %6155 = icmp eq i32 %6154, 0
  %6156 = icmp slt i32 %6151, 10
  %6157 = or i1 %6155, %6156
  br i1 %6157, label %originalBB1775, label %originalBB1775alteredBB

originalBB1775:                                   ; preds = %6149, %originalBB1775alteredBB
  %6158 = load i32, i32* @x.37
  %6159 = load i32, i32* @y.38
  %6160 = sub i32 %6158, 1
  %6161 = mul i32 %6158, %6160
  %6162 = urem i32 %6161, 2
  %6163 = icmp eq i32 %6162, 0
  %6164 = icmp slt i32 %6159, 10
  %6165 = or i1 %6163, %6164
  br i1 %6165, label %originalBBpart21777, label %originalBB1775alteredBB

originalBBpart21777:                              ; preds = %originalBB1775
  br label %6606, !dbg !3074

6166:                                             ; preds = %6146, %originalBBpart21773, %originalBBpart21769
  %6167 = load i32, i32* @x.37
  %6168 = load i32, i32* @y.38
  %6169 = sub i32 %6167, 1
  %6170 = mul i32 %6167, %6169
  %6171 = urem i32 %6170, 2
  %6172 = icmp eq i32 %6171, 0
  %6173 = icmp slt i32 %6168, 10
  %6174 = or i1 %6172, %6173
  br i1 %6174, label %originalBB1779, label %originalBB1779alteredBB

originalBB1779:                                   ; preds = %6166, %originalBB1779alteredBB
  %6175 = load i32, i32* %23, align 4, !dbg !3075
  %6176 = icmp eq i32 %6175, 2, !dbg !3077
  %6177 = load i32, i32* @x.37
  %6178 = load i32, i32* @y.38
  %6179 = sub i32 %6177, 1
  %6180 = mul i32 %6177, %6179
  %6181 = urem i32 %6180, 2
  %6182 = icmp eq i32 %6181, 0
  %6183 = icmp slt i32 %6178, 10
  %6184 = or i1 %6182, %6183
  br i1 %6184, label %originalBBpart21781, label %originalBB1779alteredBB

originalBBpart21781:                              ; preds = %originalBB1779
  br i1 %6176, label %6185, label %6358, !dbg !3078

6185:                                             ; preds = %originalBBpart21781
  %6186 = load i32, i32* @x.37
  %6187 = load i32, i32* @y.38
  %6188 = sub i32 %6186, 1
  %6189 = mul i32 %6186, %6188
  %6190 = urem i32 %6189, 2
  %6191 = icmp eq i32 %6190, 0
  %6192 = icmp slt i32 %6187, 10
  %6193 = or i1 %6191, %6192
  br i1 %6193, label %originalBB1783, label %originalBB1783alteredBB

originalBB1783:                                   ; preds = %6185, %originalBB1783alteredBB
  %6194 = load i8, i8* %35, align 1, !dbg !3079
  %6195 = trunc i8 %6194 to i1, !dbg !3079
  %6196 = load i32, i32* @x.37
  %6197 = load i32, i32* @y.38
  %6198 = sub i32 %6196, 1
  %6199 = mul i32 %6196, %6198
  %6200 = urem i32 %6199, 2
  %6201 = icmp eq i32 %6200, 0
  %6202 = icmp slt i32 %6197, 10
  %6203 = or i1 %6201, %6202
  br i1 %6203, label %originalBBpart21785, label %originalBB1783alteredBB

originalBBpart21785:                              ; preds = %originalBB1783
  br i1 %6195, label %6358, label %6204, !dbg !3080

6204:                                             ; preds = %originalBBpart21785
  %6205 = load i32, i32* @x.37
  %6206 = load i32, i32* @y.38
  %6207 = sub i32 %6205, 1
  %6208 = mul i32 %6205, %6207
  %6209 = urem i32 %6208, 2
  %6210 = icmp eq i32 %6209, 0
  %6211 = icmp slt i32 %6206, 10
  %6212 = or i1 %6210, %6211
  br i1 %6212, label %originalBB1787, label %originalBB1787alteredBB

originalBB1787:                                   ; preds = %6204, %originalBB1787alteredBB
  %6213 = load i8, i8* %37, align 1, !dbg !3081
  %6214 = trunc i8 %6213 to i1, !dbg !3081
  %6215 = load i32, i32* @x.37
  %6216 = load i32, i32* @y.38
  %6217 = sub i32 %6215, 1
  %6218 = mul i32 %6215, %6217
  %6219 = urem i32 %6218, 2
  %6220 = icmp eq i32 %6219, 0
  %6221 = icmp slt i32 %6216, 10
  %6222 = or i1 %6220, %6221
  br i1 %6222, label %originalBBpart21789, label %originalBB1787alteredBB

originalBBpart21789:                              ; preds = %originalBB1787
  br i1 %6214, label %6223, label %6358, !dbg !3082

6223:                                             ; preds = %originalBBpart21789
  %6224 = load i32, i32* @x.37
  %6225 = load i32, i32* @y.38
  %6226 = sub i32 %6224, 1
  %6227 = mul i32 %6224, %6226
  %6228 = urem i32 %6227, 2
  %6229 = icmp eq i32 %6228, 0
  %6230 = icmp slt i32 %6225, 10
  %6231 = or i1 %6229, %6230
  br i1 %6231, label %originalBB1791, label %originalBB1791alteredBB

originalBB1791:                                   ; preds = %6223, %originalBB1791alteredBB
  %6232 = load i8, i8* %38, align 1, !dbg !3083
  %6233 = trunc i8 %6232 to i1, !dbg !3083
  %6234 = load i32, i32* @x.37
  %6235 = load i32, i32* @y.38
  %6236 = sub i32 %6234, 1
  %6237 = mul i32 %6234, %6236
  %6238 = urem i32 %6237, 2
  %6239 = icmp eq i32 %6238, 0
  %6240 = icmp slt i32 %6235, 10
  %6241 = or i1 %6239, %6240
  br i1 %6241, label %originalBBpart21793, label %originalBB1791alteredBB

originalBBpart21793:                              ; preds = %originalBB1791
  br i1 %6233, label %6242, label %6268, !dbg !3086

6242:                                             ; preds = %originalBBpart21793
  %6243 = load i32, i32* @x.37
  %6244 = load i32, i32* @y.38
  %6245 = sub i32 %6243, 1
  %6246 = mul i32 %6243, %6245
  %6247 = urem i32 %6246, 2
  %6248 = icmp eq i32 %6247, 0
  %6249 = icmp slt i32 %6244, 10
  %6250 = or i1 %6248, %6249
  br i1 %6250, label %originalBB1795, label %originalBB1795alteredBB

originalBB1795:                                   ; preds = %6242, %originalBB1795alteredBB
  %6251 = load i8*, i8** %19, align 8, !dbg !3087
  %6252 = load i64, i64* %30, align 8, !dbg !3088
  %6253 = load i8*, i8** %21, align 8, !dbg !3089
  %6254 = load i64, i64* %22, align 8, !dbg !3090
  %6255 = load i32, i32* %24, align 4, !dbg !3091
  %6256 = load i32*, i32** %25, align 8, !dbg !3092
  %6257 = load i8*, i8** %26, align 8, !dbg !3093
  %6258 = load i8*, i8** %27, align 8, !dbg !3094
  %6259 = call i64 @quotearg_buffer_restyled(i8* %6251, i64 %6252, i8* %6253, i64 %6254, i32 5, i32 %6255, i32* %6256, i8* %6257, i8* %6258), !dbg !3095
  store i64 %6259, i64* %18, align 8, !dbg !3096
  %6260 = load i32, i32* @x.37
  %6261 = load i32, i32* @y.38
  %6262 = sub i32 %6260, 1
  %6263 = mul i32 %6260, %6262
  %6264 = urem i32 %6263, 2
  %6265 = icmp eq i32 %6264, 0
  %6266 = icmp slt i32 %6261, 10
  %6267 = or i1 %6265, %6266
  br i1 %6267, label %originalBBpart21797, label %originalBB1795alteredBB

originalBBpart21797:                              ; preds = %originalBB1795
  br label %6688, !dbg !3096

6268:                                             ; preds = %originalBBpart21793
  %6269 = load i32, i32* @x.37
  %6270 = load i32, i32* @y.38
  %6271 = sub i32 %6269, 1
  %6272 = mul i32 %6269, %6271
  %6273 = urem i32 %6272, 2
  %6274 = icmp eq i32 %6273, 0
  %6275 = icmp slt i32 %6270, 10
  %6276 = or i1 %6274, %6275
  br i1 %6276, label %originalBB1799, label %originalBB1799alteredBB

originalBB1799:                                   ; preds = %6268, %originalBB1799alteredBB
  %6277 = load i64, i64* %20, align 8, !dbg !3097
  %6278 = icmp ne i64 %6277, 0, !dbg !3097
  %6279 = load i32, i32* @x.37
  %6280 = load i32, i32* @y.38
  %6281 = sub i32 %6279, 1
  %6282 = mul i32 %6279, %6281
  %6283 = urem i32 %6282, 2
  %6284 = icmp eq i32 %6283, 0
  %6285 = icmp slt i32 %6280, 10
  %6286 = or i1 %6284, %6285
  br i1 %6286, label %originalBBpart21801, label %originalBB1799alteredBB

originalBBpart21801:                              ; preds = %originalBB1799
  br i1 %6278, label %6324, label %6287, !dbg !3099

6287:                                             ; preds = %originalBBpart21801
  %6288 = load i32, i32* @x.37
  %6289 = load i32, i32* @y.38
  %6290 = sub i32 %6288, 1
  %6291 = mul i32 %6288, %6290
  %6292 = urem i32 %6291, 2
  %6293 = icmp eq i32 %6292, 0
  %6294 = icmp slt i32 %6289, 10
  %6295 = or i1 %6293, %6294
  br i1 %6295, label %originalBB1803, label %originalBB1803alteredBB

originalBB1803:                                   ; preds = %6287, %originalBB1803alteredBB
  %6296 = load i64, i64* %30, align 8, !dbg !3100
  %6297 = icmp ne i64 %6296, 0, !dbg !3100
  %6298 = load i32, i32* @x.37
  %6299 = load i32, i32* @y.38
  %6300 = sub i32 %6298, 1
  %6301 = mul i32 %6298, %6300
  %6302 = urem i32 %6301, 2
  %6303 = icmp eq i32 %6302, 0
  %6304 = icmp slt i32 %6299, 10
  %6305 = or i1 %6303, %6304
  br i1 %6305, label %originalBBpart21805, label %originalBB1803alteredBB

originalBBpart21805:                              ; preds = %originalBB1803
  br i1 %6297, label %6306, label %6324, !dbg !3101

6306:                                             ; preds = %originalBBpart21805
  %6307 = load i32, i32* @x.37
  %6308 = load i32, i32* @y.38
  %6309 = sub i32 %6307, 1
  %6310 = mul i32 %6307, %6309
  %6311 = urem i32 %6310, 2
  %6312 = icmp eq i32 %6311, 0
  %6313 = icmp slt i32 %6308, 10
  %6314 = or i1 %6312, %6313
  br i1 %6314, label %originalBB1807, label %originalBB1807alteredBB

originalBB1807:                                   ; preds = %6306, %originalBB1807alteredBB
  %6315 = load i64, i64* %30, align 8, !dbg !3102
  store i64 %6315, i64* %20, align 8, !dbg !3104
  store i64 0, i64* %29, align 8, !dbg !3105
  %6316 = load i32, i32* @x.37
  %6317 = load i32, i32* @y.38
  %6318 = sub i32 %6316, 1
  %6319 = mul i32 %6316, %6318
  %6320 = urem i32 %6319, 2
  %6321 = icmp eq i32 %6320, 0
  %6322 = icmp slt i32 %6317, 10
  %6323 = or i1 %6321, %6322
  br i1 %6323, label %originalBBpart21809, label %originalBB1807alteredBB

originalBBpart21809:                              ; preds = %originalBB1807
  br label %66, !dbg !3106

6324:                                             ; preds = %originalBBpart21805, %originalBBpart21801
  %6325 = load i32, i32* @x.37
  %6326 = load i32, i32* @y.38
  %6327 = sub i32 %6325, 1
  %6328 = mul i32 %6325, %6327
  %6329 = urem i32 %6328, 2
  %6330 = icmp eq i32 %6329, 0
  %6331 = icmp slt i32 %6326, 10
  %6332 = or i1 %6330, %6331
  br i1 %6332, label %originalBB1811, label %originalBB1811alteredBB

originalBB1811:                                   ; preds = %6324, %originalBB1811alteredBB
  %6333 = load i32, i32* @x.37
  %6334 = load i32, i32* @y.38
  %6335 = sub i32 %6333, 1
  %6336 = mul i32 %6333, %6335
  %6337 = urem i32 %6336, 2
  %6338 = icmp eq i32 %6337, 0
  %6339 = icmp slt i32 %6334, 10
  %6340 = or i1 %6338, %6339
  br i1 %6340, label %originalBBpart21813, label %originalBB1811alteredBB

originalBBpart21813:                              ; preds = %originalBB1811
  br label %6341

6341:                                             ; preds = %originalBBpart21813
  %6342 = load i32, i32* @x.37
  %6343 = load i32, i32* @y.38
  %6344 = sub i32 %6342, 1
  %6345 = mul i32 %6342, %6344
  %6346 = urem i32 %6345, 2
  %6347 = icmp eq i32 %6346, 0
  %6348 = icmp slt i32 %6343, 10
  %6349 = or i1 %6347, %6348
  br i1 %6349, label %originalBB1815, label %originalBB1815alteredBB

originalBB1815:                                   ; preds = %6341, %originalBB1815alteredBB
  %6350 = load i32, i32* @x.37
  %6351 = load i32, i32* @y.38
  %6352 = sub i32 %6350, 1
  %6353 = mul i32 %6350, %6352
  %6354 = urem i32 %6353, 2
  %6355 = icmp eq i32 %6354, 0
  %6356 = icmp slt i32 %6351, 10
  %6357 = or i1 %6355, %6356
  br i1 %6357, label %originalBBpart21817, label %originalBB1815alteredBB

originalBBpart21817:                              ; preds = %originalBB1815
  br label %6358, !dbg !3107

6358:                                             ; preds = %originalBBpart21817, %originalBBpart21789, %originalBBpart21785, %originalBBpart21781
  %6359 = load i32, i32* @x.37
  %6360 = load i32, i32* @y.38
  %6361 = sub i32 %6359, 1
  %6362 = mul i32 %6359, %6361
  %6363 = urem i32 %6362, 2
  %6364 = icmp eq i32 %6363, 0
  %6365 = icmp slt i32 %6360, 10
  %6366 = or i1 %6364, %6365
  br i1 %6366, label %originalBB1819, label %originalBB1819alteredBB

originalBB1819:                                   ; preds = %6358, %originalBB1819alteredBB
  %6367 = load i8*, i8** %31, align 8, !dbg !3108
  %6368 = icmp ne i8* %6367, null, !dbg !3108
  %6369 = load i32, i32* @x.37
  %6370 = load i32, i32* @y.38
  %6371 = sub i32 %6369, 1
  %6372 = mul i32 %6369, %6371
  %6373 = urem i32 %6372, 2
  %6374 = icmp eq i32 %6373, 0
  %6375 = icmp slt i32 %6370, 10
  %6376 = or i1 %6374, %6375
  br i1 %6376, label %originalBBpart21821, label %originalBB1819alteredBB

originalBBpart21821:                              ; preds = %originalBB1819
  br i1 %6368, label %6377, label %6564, !dbg !3110

6377:                                             ; preds = %originalBBpart21821
  %6378 = load i32, i32* @x.37
  %6379 = load i32, i32* @y.38
  %6380 = sub i32 %6378, 1
  %6381 = mul i32 %6378, %6380
  %6382 = urem i32 %6381, 2
  %6383 = icmp eq i32 %6382, 0
  %6384 = icmp slt i32 %6379, 10
  %6385 = or i1 %6383, %6384
  br i1 %6385, label %originalBB1823, label %originalBB1823alteredBB

originalBB1823:                                   ; preds = %6377, %originalBB1823alteredBB
  %6386 = load i8, i8* %35, align 1, !dbg !3111
  %6387 = trunc i8 %6386 to i1, !dbg !3111
  %6388 = load i32, i32* @x.37
  %6389 = load i32, i32* @y.38
  %6390 = sub i32 %6388, 1
  %6391 = mul i32 %6388, %6390
  %6392 = urem i32 %6391, 2
  %6393 = icmp eq i32 %6392, 0
  %6394 = icmp slt i32 %6389, 10
  %6395 = or i1 %6393, %6394
  br i1 %6395, label %originalBBpart21825, label %originalBB1823alteredBB

originalBBpart21825:                              ; preds = %originalBB1823
  br i1 %6387, label %6564, label %6396, !dbg !3112

6396:                                             ; preds = %originalBBpart21825
  %6397 = load i32, i32* @x.37
  %6398 = load i32, i32* @y.38
  %6399 = sub i32 %6397, 1
  %6400 = mul i32 %6397, %6399
  %6401 = urem i32 %6400, 2
  %6402 = icmp eq i32 %6401, 0
  %6403 = icmp slt i32 %6398, 10
  %6404 = or i1 %6402, %6403
  br i1 %6404, label %originalBB1827, label %originalBB1827alteredBB

originalBB1827:                                   ; preds = %6396, %originalBB1827alteredBB
  %6405 = load i32, i32* @x.37
  %6406 = load i32, i32* @y.38
  %6407 = sub i32 %6405, 1
  %6408 = mul i32 %6405, %6407
  %6409 = urem i32 %6408, 2
  %6410 = icmp eq i32 %6409, 0
  %6411 = icmp slt i32 %6406, 10
  %6412 = or i1 %6410, %6411
  br i1 %6412, label %originalBBpart21829, label %originalBB1827alteredBB

originalBBpart21829:                              ; preds = %originalBB1827
  br label %6413, !dbg !3113

6413:                                             ; preds = %originalBBpart21865, %originalBBpart21829
  %6414 = load i32, i32* @x.37
  %6415 = load i32, i32* @y.38
  %6416 = sub i32 %6414, 1
  %6417 = mul i32 %6414, %6416
  %6418 = urem i32 %6417, 2
  %6419 = icmp eq i32 %6418, 0
  %6420 = icmp slt i32 %6415, 10
  %6421 = or i1 %6419, %6420
  br i1 %6421, label %originalBB1831, label %originalBB1831alteredBB

originalBB1831:                                   ; preds = %6413, %originalBB1831alteredBB
  %6422 = load i8*, i8** %31, align 8, !dbg !3114
  %6423 = load i8, i8* %6422, align 1, !dbg !3117
  %6424 = icmp ne i8 %6423, 0, !dbg !3118
  %6425 = load i32, i32* @x.37
  %6426 = load i32, i32* @y.38
  %6427 = sub i32 %6425, 1
  %6428 = mul i32 %6425, %6427
  %6429 = urem i32 %6428, 2
  %6430 = icmp eq i32 %6429, 0
  %6431 = icmp slt i32 %6426, 10
  %6432 = or i1 %6430, %6431
  br i1 %6432, label %originalBBpart21833, label %originalBB1831alteredBB

originalBBpart21833:                              ; preds = %originalBB1831
  br i1 %6424, label %6433, label %6547, !dbg !3118

6433:                                             ; preds = %originalBBpart21833
  %6434 = load i32, i32* @x.37
  %6435 = load i32, i32* @y.38
  %6436 = sub i32 %6434, 1
  %6437 = mul i32 %6434, %6436
  %6438 = urem i32 %6437, 2
  %6439 = icmp eq i32 %6438, 0
  %6440 = icmp slt i32 %6435, 10
  %6441 = or i1 %6439, %6440
  br i1 %6441, label %originalBB1835, label %originalBB1835alteredBB

originalBB1835:                                   ; preds = %6433, %originalBB1835alteredBB
  %6442 = load i32, i32* @x.37
  %6443 = load i32, i32* @y.38
  %6444 = sub i32 %6442, 1
  %6445 = mul i32 %6442, %6444
  %6446 = urem i32 %6445, 2
  %6447 = icmp eq i32 %6446, 0
  %6448 = icmp slt i32 %6443, 10
  %6449 = or i1 %6447, %6448
  br i1 %6449, label %originalBBpart21837, label %originalBB1835alteredBB

originalBBpart21837:                              ; preds = %originalBB1835
  br label %6450, !dbg !3119

6450:                                             ; preds = %originalBBpart21837
  %6451 = load i32, i32* @x.37
  %6452 = load i32, i32* @y.38
  %6453 = sub i32 %6451, 1
  %6454 = mul i32 %6451, %6453
  %6455 = urem i32 %6454, 2
  %6456 = icmp eq i32 %6455, 0
  %6457 = icmp slt i32 %6452, 10
  %6458 = or i1 %6456, %6457
  br i1 %6458, label %originalBB1839, label %originalBB1839alteredBB

originalBB1839:                                   ; preds = %6450, %originalBB1839alteredBB
  %6459 = load i64, i64* %29, align 8, !dbg !3120
  %6460 = load i64, i64* %20, align 8, !dbg !3120
  %6461 = icmp ult i64 %6459, %6460, !dbg !3120
  %6462 = load i32, i32* @x.37
  %6463 = load i32, i32* @y.38
  %6464 = sub i32 %6462, 1
  %6465 = mul i32 %6462, %6464
  %6466 = urem i32 %6465, 2
  %6467 = icmp eq i32 %6466, 0
  %6468 = icmp slt i32 %6463, 10
  %6469 = or i1 %6467, %6468
  br i1 %6469, label %originalBBpart21841, label %originalBB1839alteredBB

originalBBpart21841:                              ; preds = %originalBB1839
  br i1 %6461, label %6470, label %6492, !dbg !3123

6470:                                             ; preds = %originalBBpart21841
  %6471 = load i32, i32* @x.37
  %6472 = load i32, i32* @y.38
  %6473 = sub i32 %6471, 1
  %6474 = mul i32 %6471, %6473
  %6475 = urem i32 %6474, 2
  %6476 = icmp eq i32 %6475, 0
  %6477 = icmp slt i32 %6472, 10
  %6478 = or i1 %6476, %6477
  br i1 %6478, label %originalBB1843, label %originalBB1843alteredBB

originalBB1843:                                   ; preds = %6470, %originalBB1843alteredBB
  %6479 = load i8*, i8** %31, align 8, !dbg !3120
  %6480 = load i8, i8* %6479, align 1, !dbg !3120
  %6481 = load i8*, i8** %19, align 8, !dbg !3120
  %6482 = load i64, i64* %29, align 8, !dbg !3120
  %6483 = getelementptr inbounds i8, i8* %6481, i64 %6482, !dbg !3120
  store i8 %6480, i8* %6483, align 1, !dbg !3120
  %6484 = load i32, i32* @x.37
  %6485 = load i32, i32* @y.38
  %6486 = sub i32 %6484, 1
  %6487 = mul i32 %6484, %6486
  %6488 = urem i32 %6487, 2
  %6489 = icmp eq i32 %6488, 0
  %6490 = icmp slt i32 %6485, 10
  %6491 = or i1 %6489, %6490
  br i1 %6491, label %originalBBpart21845, label %originalBB1843alteredBB

originalBBpart21845:                              ; preds = %originalBB1843
  br label %6492, !dbg !3120

6492:                                             ; preds = %originalBBpart21845, %originalBBpart21841
  %6493 = load i32, i32* @x.37
  %6494 = load i32, i32* @y.38
  %6495 = sub i32 %6493, 1
  %6496 = mul i32 %6493, %6495
  %6497 = urem i32 %6496, 2
  %6498 = icmp eq i32 %6497, 0
  %6499 = icmp slt i32 %6494, 10
  %6500 = or i1 %6498, %6499
  br i1 %6500, label %originalBB1847, label %originalBB1847alteredBB

originalBB1847:                                   ; preds = %6492, %originalBB1847alteredBB
  %6501 = load i64, i64* %29, align 8, !dbg !3123
  %6502 = add i64 %6501, 1, !dbg !3123
  store i64 %6502, i64* %29, align 8, !dbg !3123
  %6503 = load i32, i32* @x.37
  %6504 = load i32, i32* @y.38
  %6505 = sub i32 %6503, 1
  %6506 = mul i32 %6503, %6505
  %6507 = urem i32 %6506, 2
  %6508 = icmp eq i32 %6507, 0
  %6509 = icmp slt i32 %6504, 10
  %6510 = or i1 %6508, %6509
  br i1 %6510, label %originalBBpart21857, label %originalBB1847alteredBB

originalBBpart21857:                              ; preds = %originalBB1847
  br label %6511, !dbg !3123

6511:                                             ; preds = %originalBBpart21857
  %6512 = load i32, i32* @x.37
  %6513 = load i32, i32* @y.38
  %6514 = sub i32 %6512, 1
  %6515 = mul i32 %6512, %6514
  %6516 = urem i32 %6515, 2
  %6517 = icmp eq i32 %6516, 0
  %6518 = icmp slt i32 %6513, 10
  %6519 = or i1 %6517, %6518
  br i1 %6519, label %originalBB1859, label %originalBB1859alteredBB

originalBB1859:                                   ; preds = %6511, %originalBB1859alteredBB
  %6520 = load i32, i32* @x.37
  %6521 = load i32, i32* @y.38
  %6522 = sub i32 %6520, 1
  %6523 = mul i32 %6520, %6522
  %6524 = urem i32 %6523, 2
  %6525 = icmp eq i32 %6524, 0
  %6526 = icmp slt i32 %6521, 10
  %6527 = or i1 %6525, %6526
  br i1 %6527, label %originalBBpart21861, label %originalBB1859alteredBB

originalBBpart21861:                              ; preds = %originalBB1859
  br label %6528, !dbg !3123

6528:                                             ; preds = %originalBBpart21861
  %6529 = load i32, i32* @x.37
  %6530 = load i32, i32* @y.38
  %6531 = sub i32 %6529, 1
  %6532 = mul i32 %6529, %6531
  %6533 = urem i32 %6532, 2
  %6534 = icmp eq i32 %6533, 0
  %6535 = icmp slt i32 %6530, 10
  %6536 = or i1 %6534, %6535
  br i1 %6536, label %originalBB1863, label %originalBB1863alteredBB

originalBB1863:                                   ; preds = %6528, %originalBB1863alteredBB
  %6537 = load i8*, i8** %31, align 8, !dbg !3124
  %6538 = getelementptr inbounds i8, i8* %6537, i32 1, !dbg !3124
  store i8* %6538, i8** %31, align 8, !dbg !3124
  %6539 = load i32, i32* @x.37
  %6540 = load i32, i32* @y.38
  %6541 = sub i32 %6539, 1
  %6542 = mul i32 %6539, %6541
  %6543 = urem i32 %6542, 2
  %6544 = icmp eq i32 %6543, 0
  %6545 = icmp slt i32 %6540, 10
  %6546 = or i1 %6544, %6545
  br i1 %6546, label %originalBBpart21865, label %originalBB1863alteredBB

originalBBpart21865:                              ; preds = %originalBB1863
  br label %6413, !dbg !3125, !llvm.loop !3126

6547:                                             ; preds = %originalBBpart21833
  %6548 = load i32, i32* @x.37
  %6549 = load i32, i32* @y.38
  %6550 = sub i32 %6548, 1
  %6551 = mul i32 %6548, %6550
  %6552 = urem i32 %6551, 2
  %6553 = icmp eq i32 %6552, 0
  %6554 = icmp slt i32 %6549, 10
  %6555 = or i1 %6553, %6554
  br i1 %6555, label %originalBB1867, label %originalBB1867alteredBB

originalBB1867:                                   ; preds = %6547, %originalBB1867alteredBB
  %6556 = load i32, i32* @x.37
  %6557 = load i32, i32* @y.38
  %6558 = sub i32 %6556, 1
  %6559 = mul i32 %6556, %6558
  %6560 = urem i32 %6559, 2
  %6561 = icmp eq i32 %6560, 0
  %6562 = icmp slt i32 %6557, 10
  %6563 = or i1 %6561, %6562
  br i1 %6563, label %originalBBpart21869, label %originalBB1867alteredBB

originalBBpart21869:                              ; preds = %originalBB1867
  br label %6564, !dbg !3127

6564:                                             ; preds = %originalBBpart21869, %originalBBpart21825, %originalBBpart21821
  %6565 = load i32, i32* @x.37
  %6566 = load i32, i32* @y.38
  %6567 = sub i32 %6565, 1
  %6568 = mul i32 %6565, %6567
  %6569 = urem i32 %6568, 2
  %6570 = icmp eq i32 %6569, 0
  %6571 = icmp slt i32 %6566, 10
  %6572 = or i1 %6570, %6571
  br i1 %6572, label %originalBB1871, label %originalBB1871alteredBB

originalBB1871:                                   ; preds = %6564, %originalBB1871alteredBB
  %6573 = load i64, i64* %29, align 8, !dbg !3128
  %6574 = load i64, i64* %20, align 8, !dbg !3130
  %6575 = icmp ult i64 %6573, %6574, !dbg !3131
  %6576 = load i32, i32* @x.37
  %6577 = load i32, i32* @y.38
  %6578 = sub i32 %6576, 1
  %6579 = mul i32 %6576, %6578
  %6580 = urem i32 %6579, 2
  %6581 = icmp eq i32 %6580, 0
  %6582 = icmp slt i32 %6577, 10
  %6583 = or i1 %6581, %6582
  br i1 %6583, label %originalBBpart21873, label %originalBB1871alteredBB

originalBBpart21873:                              ; preds = %originalBB1871
  br i1 %6575, label %6584, label %6604, !dbg !3132

6584:                                             ; preds = %originalBBpart21873
  %6585 = load i32, i32* @x.37
  %6586 = load i32, i32* @y.38
  %6587 = sub i32 %6585, 1
  %6588 = mul i32 %6585, %6587
  %6589 = urem i32 %6588, 2
  %6590 = icmp eq i32 %6589, 0
  %6591 = icmp slt i32 %6586, 10
  %6592 = or i1 %6590, %6591
  br i1 %6592, label %originalBB1875, label %originalBB1875alteredBB

originalBB1875:                                   ; preds = %6584, %originalBB1875alteredBB
  %6593 = load i8*, i8** %19, align 8, !dbg !3133
  %6594 = load i64, i64* %29, align 8, !dbg !3134
  %6595 = getelementptr inbounds i8, i8* %6593, i64 %6594, !dbg !3133
  store i8 0, i8* %6595, align 1, !dbg !3135
  %6596 = load i32, i32* @x.37
  %6597 = load i32, i32* @y.38
  %6598 = sub i32 %6596, 1
  %6599 = mul i32 %6596, %6598
  %6600 = urem i32 %6599, 2
  %6601 = icmp eq i32 %6600, 0
  %6602 = icmp slt i32 %6597, 10
  %6603 = or i1 %6601, %6602
  br i1 %6603, label %originalBBpart21877, label %originalBB1875alteredBB

originalBBpart21877:                              ; preds = %originalBB1875
  br label %6604, !dbg !3133

6604:                                             ; preds = %originalBBpart21877, %originalBBpart21873
  %6605 = load i64, i64* %29, align 8, !dbg !3136
  store i64 %6605, i64* %18, align 8, !dbg !3137
  br label %6688, !dbg !3137

6606:                                             ; preds = %originalBBpart21777, %originalBBpart21550, %originalBBpart21147, %originalBBpart21044, %originalBBpart2792, %originalBBpart2776, %originalBBpart2716, %originalBBpart2680, %originalBBpart2505, %1786, %originalBBpart2238, %originalBBpart2214
  call void @llvm.dbg.label(metadata !3138), !dbg !3139
  %6607 = load i32, i32* @x.37
  %6608 = load i32, i32* @y.38
  %6609 = sub i32 %6607, 1
  %6610 = mul i32 %6607, %6609
  %6611 = urem i32 %6610, 2
  %6612 = icmp eq i32 %6611, 0
  %6613 = icmp slt i32 %6608, 10
  %6614 = or i1 %6612, %6613
  br i1 %6614, label %originalBB1879, label %originalBB1879alteredBB

originalBB1879:                                   ; preds = %6606, %originalBB1879alteredBB
  %6615 = load i32, i32* %23, align 4, !dbg !3140
  %6616 = icmp eq i32 %6615, 2, !dbg !3142
  %6617 = load i32, i32* @x.37
  %6618 = load i32, i32* @y.38
  %6619 = sub i32 %6617, 1
  %6620 = mul i32 %6617, %6619
  %6621 = urem i32 %6620, 2
  %6622 = icmp eq i32 %6621, 0
  %6623 = icmp slt i32 %6618, 10
  %6624 = or i1 %6622, %6623
  br i1 %6624, label %originalBBpart21881, label %originalBB1879alteredBB

originalBBpart21881:                              ; preds = %originalBB1879
  br i1 %6616, label %6625, label %6661, !dbg !3143

6625:                                             ; preds = %originalBBpart21881
  %6626 = load i32, i32* @x.37
  %6627 = load i32, i32* @y.38
  %6628 = sub i32 %6626, 1
  %6629 = mul i32 %6626, %6628
  %6630 = urem i32 %6629, 2
  %6631 = icmp eq i32 %6630, 0
  %6632 = icmp slt i32 %6627, 10
  %6633 = or i1 %6631, %6632
  br i1 %6633, label %originalBB1883, label %originalBB1883alteredBB

originalBB1883:                                   ; preds = %6625, %originalBB1883alteredBB
  %6634 = load i8, i8* %33, align 1, !dbg !3144
  %6635 = trunc i8 %6634 to i1, !dbg !3144
  %6636 = load i32, i32* @x.37
  %6637 = load i32, i32* @y.38
  %6638 = sub i32 %6636, 1
  %6639 = mul i32 %6636, %6638
  %6640 = urem i32 %6639, 2
  %6641 = icmp eq i32 %6640, 0
  %6642 = icmp slt i32 %6637, 10
  %6643 = or i1 %6641, %6642
  br i1 %6643, label %originalBBpart21885, label %originalBB1883alteredBB

originalBBpart21885:                              ; preds = %originalBB1883
  br i1 %6635, label %6644, label %6661, !dbg !3145

6644:                                             ; preds = %originalBBpart21885
  %6645 = load i32, i32* @x.37
  %6646 = load i32, i32* @y.38
  %6647 = sub i32 %6645, 1
  %6648 = mul i32 %6645, %6647
  %6649 = urem i32 %6648, 2
  %6650 = icmp eq i32 %6649, 0
  %6651 = icmp slt i32 %6646, 10
  %6652 = or i1 %6650, %6651
  br i1 %6652, label %originalBB1887, label %originalBB1887alteredBB

originalBB1887:                                   ; preds = %6644, %originalBB1887alteredBB
  store i32 4, i32* %23, align 4, !dbg !3146
  %6653 = load i32, i32* @x.37
  %6654 = load i32, i32* @y.38
  %6655 = sub i32 %6653, 1
  %6656 = mul i32 %6653, %6655
  %6657 = urem i32 %6656, 2
  %6658 = icmp eq i32 %6657, 0
  %6659 = icmp slt i32 %6654, 10
  %6660 = or i1 %6658, %6659
  br i1 %6660, label %originalBBpart21889, label %originalBB1887alteredBB

originalBBpart21889:                              ; preds = %originalBB1887
  br label %6661, !dbg !3147

6661:                                             ; preds = %originalBBpart21889, %originalBBpart21885, %originalBBpart21881
  %6662 = load i32, i32* @x.37
  %6663 = load i32, i32* @y.38
  %6664 = sub i32 %6662, 1
  %6665 = mul i32 %6662, %6664
  %6666 = urem i32 %6665, 2
  %6667 = icmp eq i32 %6666, 0
  %6668 = icmp slt i32 %6663, 10
  %6669 = or i1 %6667, %6668
  br i1 %6669, label %originalBB1891, label %originalBB1891alteredBB

originalBB1891:                                   ; preds = %6661, %originalBB1891alteredBB
  %6670 = load i8*, i8** %19, align 8, !dbg !3148
  %6671 = load i64, i64* %20, align 8, !dbg !3149
  %6672 = load i8*, i8** %21, align 8, !dbg !3150
  %6673 = load i64, i64* %22, align 8, !dbg !3151
  %6674 = load i32, i32* %23, align 4, !dbg !3152
  %6675 = load i32, i32* %24, align 4, !dbg !3153
  %6676 = and i32 %6675, -3, !dbg !3154
  %6677 = load i8*, i8** %26, align 8, !dbg !3155
  %6678 = load i8*, i8** %27, align 8, !dbg !3156
  %6679 = call i64 @quotearg_buffer_restyled(i8* %6670, i64 %6671, i8* %6672, i64 %6673, i32 %6674, i32 %6676, i32* null, i8* %6677, i8* %6678), !dbg !3157
  store i64 %6679, i64* %18, align 8, !dbg !3158
  %6680 = load i32, i32* @x.37
  %6681 = load i32, i32* @y.38
  %6682 = sub i32 %6680, 1
  %6683 = mul i32 %6680, %6682
  %6684 = urem i32 %6683, 2
  %6685 = icmp eq i32 %6684, 0
  %6686 = icmp slt i32 %6681, 10
  %6687 = or i1 %6685, %6686
  br i1 %6687, label %originalBBpart21896, label %originalBB1891alteredBB

originalBBpart21896:                              ; preds = %originalBB1891
  br label %6688, !dbg !3158

6688:                                             ; preds = %originalBBpart21896, %6604, %originalBBpart21797
  %6689 = load i32, i32* @x.37
  %6690 = load i32, i32* @y.38
  %6691 = sub i32 %6689, 1
  %6692 = mul i32 %6689, %6691
  %6693 = urem i32 %6692, 2
  %6694 = icmp eq i32 %6693, 0
  %6695 = icmp slt i32 %6690, 10
  %6696 = or i1 %6694, %6695
  br i1 %6696, label %originalBB1898, label %originalBB1898alteredBB

originalBB1898:                                   ; preds = %6688, %originalBB1898alteredBB
  %6697 = load i64, i64* %18, align 8, !dbg !3159
  %6698 = load i32, i32* @x.37
  %6699 = load i32, i32* @y.38
  %6700 = sub i32 %6698, 1
  %6701 = mul i32 %6698, %6700
  %6702 = urem i32 %6701, 2
  %6703 = icmp eq i32 %6702, 0
  %6704 = icmp slt i32 %6699, 10
  %6705 = or i1 %6703, %6704
  br i1 %6705, label %originalBBpart21900, label %originalBB1898alteredBB

originalBBpart21900:                              ; preds = %originalBB1898
  ret i64 %6697, !dbg !3159

originalBBalteredBB:                              ; preds = %originalBB, %9
  %6706 = alloca i64, align 8
  %6707 = alloca i8*, align 8
  %6708 = alloca i64, align 8
  %6709 = alloca i8*, align 8
  %6710 = alloca i64, align 8
  %6711 = alloca i32, align 4
  %6712 = alloca i32, align 4
  %6713 = alloca i32*, align 8
  %6714 = alloca i8*, align 8
  %6715 = alloca i8*, align 8
  %6716 = alloca i64, align 8
  %6717 = alloca i64, align 8
  %6718 = alloca i64, align 8
  %6719 = alloca i8*, align 8
  %6720 = alloca i64, align 8
  %6721 = alloca i8, align 1
  %6722 = alloca i8, align 1
  %6723 = alloca i8, align 1
  %6724 = alloca i8, align 1
  %6725 = alloca i8, align 1
  %6726 = alloca i8, align 1
  %6727 = alloca i8, align 1
  %6728 = alloca i8, align 1
  %6729 = alloca i8, align 1
  %6730 = alloca i8, align 1
  %6731 = alloca i8, align 1
  %6732 = alloca i64, align 8
  %6733 = alloca i8, align 1
  %6734 = alloca %struct.__mbstate_t, align 4
  %6735 = alloca i32, align 4
  %6736 = alloca i64, align 8
  %6737 = alloca i64, align 8
  %6738 = alloca i64, align 8
  store i8* %0, i8** %6707, align 8
  call void @llvm.dbg.declare(metadata i8** %6707, metadata !3160, metadata !DIExpression()), !dbg !2280
  store i64 %1, i64* %6708, align 8
  call void @llvm.dbg.declare(metadata i64* %6708, metadata !3192, metadata !DIExpression()), !dbg !2282
  store i8* %2, i8** %6709, align 8
  call void @llvm.dbg.declare(metadata i8** %6709, metadata !3193, metadata !DIExpression()), !dbg !2284
  store i64 %3, i64* %6710, align 8
  call void @llvm.dbg.declare(metadata i64* %6710, metadata !3194, metadata !DIExpression()), !dbg !2286
  store i32 %4, i32* %6711, align 4
  call void @llvm.dbg.declare(metadata i32* %6711, metadata !3195, metadata !DIExpression()), !dbg !2288
  store i32 %5, i32* %6712, align 4
  call void @llvm.dbg.declare(metadata i32* %6712, metadata !3196, metadata !DIExpression()), !dbg !2290
  store i32* %6, i32** %6713, align 8
  call void @llvm.dbg.declare(metadata i32** %6713, metadata !3197, metadata !DIExpression()), !dbg !2292
  store i8* %7, i8** %6714, align 8
  call void @llvm.dbg.declare(metadata i8** %6714, metadata !3198, metadata !DIExpression()), !dbg !2294
  store i8* %8, i8** %6715, align 8
  call void @llvm.dbg.declare(metadata i8** %6715, metadata !3199, metadata !DIExpression()), !dbg !2296
  call void @llvm.dbg.declare(metadata i64* %6716, metadata !3200, metadata !DIExpression()), !dbg !2298
  call void @llvm.dbg.declare(metadata i64* %6717, metadata !3201, metadata !DIExpression()), !dbg !2300
  store i64 0, i64* %6717, align 8, !dbg !2300
  call void @llvm.dbg.declare(metadata i64* %6718, metadata !3202, metadata !DIExpression()), !dbg !2302
  store i64 0, i64* %6718, align 8, !dbg !2302
  call void @llvm.dbg.declare(metadata i8** %6719, metadata !3203, metadata !DIExpression()), !dbg !2304
  store i8* null, i8** %6719, align 8, !dbg !2304
  call void @llvm.dbg.declare(metadata i64* %6720, metadata !3204, metadata !DIExpression()), !dbg !2306
  store i64 0, i64* %6720, align 8, !dbg !2306
  call void @llvm.dbg.declare(metadata i8* %6721, metadata !3205, metadata !DIExpression()), !dbg !2308
  store i8 0, i8* %6721, align 1, !dbg !2308
  call void @llvm.dbg.declare(metadata i8* %6722, metadata !3206, metadata !DIExpression()), !dbg !2310
  %6739 = call i64 @__ctype_get_mb_cur_max() #10, !dbg !2311
  %6740 = icmp eq i64 %6739, 1, !dbg !2312
  %6741 = zext i1 %6740 to i8, !dbg !2310
  store i8 %6741, i8* %6722, align 1, !dbg !2310
  call void @llvm.dbg.declare(metadata i8* %6723, metadata !3207, metadata !DIExpression()), !dbg !2314
  %6742 = load i32, i32* %6712, align 4, !dbg !2315
  %_ = shl i32 %6742, 2
  %_1 = shl i32 %6742, 2
  %_2 = sub i32 0, %6742
  %gen = add i32 %_2, 2
  %_3 = sub i32 %6742, 2
  %gen4 = mul i32 %_3, 2
  %6743 = and i32 %6742, 2, !dbg !2316
  %6744 = icmp ne i32 %6743, 0, !dbg !2317
  %6745 = zext i1 %6744 to i8, !dbg !2314
  store i8 %6745, i8* %6723, align 1, !dbg !2314
  call void @llvm.dbg.declare(metadata i8* %6724, metadata !3208, metadata !DIExpression()), !dbg !2319
  store i8 0, i8* %6724, align 1, !dbg !2319
  call void @llvm.dbg.declare(metadata i8* %6725, metadata !3209, metadata !DIExpression()), !dbg !2321
  store i8 0, i8* %6725, align 1, !dbg !2321
  call void @llvm.dbg.declare(metadata i8* %6726, metadata !3210, metadata !DIExpression()), !dbg !2323
  store i8 1, i8* %6726, align 1, !dbg !2323
  br label %originalBB

originalBB5alteredBB:                             ; preds = %originalBB5, %66
  %6746 = load i32, i32* %23, align 4, !dbg !2327
  br label %originalBB5

originalBB9alteredBB:                             ; preds = %originalBB9, %84
  store i32 5, i32* %23, align 4, !dbg !2329
  store i8 1, i8* %35, align 1, !dbg !2331
  br label %originalBB9

originalBB13alteredBB:                            ; preds = %originalBB13, %101
  %6747 = load i8, i8* %35, align 1, !dbg !2333
  %6748 = trunc i8 %6747 to i1, !dbg !2333
  br label %originalBB13

originalBB17alteredBB:                            ; preds = %originalBB17, %120
  br label %originalBB17

originalBB21alteredBB:                            ; preds = %originalBB21, %137
  %6749 = load i64, i64* %29, align 8, !dbg !2337
  %6750 = load i64, i64* %20, align 8, !dbg !2337
  %6751 = icmp ult i64 %6749, %6750, !dbg !2337
  br label %originalBB21

originalBB25alteredBB:                            ; preds = %originalBB25, %157
  %6752 = load i8*, i8** %19, align 8, !dbg !2337
  %6753 = load i64, i64* %29, align 8, !dbg !2337
  %6754 = getelementptr inbounds i8, i8* %6752, i64 %6753, !dbg !2337
  store i8 34, i8* %6754, align 1, !dbg !2337
  br label %originalBB25

originalBB29alteredBB:                            ; preds = %originalBB29, %177
  %6755 = load i64, i64* %29, align 8, !dbg !2340
  %_30 = shl i64 %6755, 1
  %_31 = shl i64 %6755, 1
  %_32 = sub i64 %6755, 1
  %gen33 = mul i64 %_32, 1
  %_34 = sub i64 %6755, 1
  %gen35 = mul i64 %_34, 1
  %_36 = sub i64 0, %6755
  %gen37 = add i64 %_36, 1
  %_38 = sub i64 0, %6755
  %gen39 = add i64 %_38, 1
  %6756 = add i64 %6755, 1, !dbg !2340
  store i64 %6756, i64* %29, align 8, !dbg !2340
  br label %originalBB29

originalBB43alteredBB:                            ; preds = %originalBB43, %196
  br label %originalBB43

originalBB47alteredBB:                            ; preds = %originalBB47, %215
  %6757 = load i32, i32* %23, align 4, !dbg !2348
  %6758 = icmp ne i32 %6757, 10, !dbg !2351
  br label %originalBB47

originalBB51alteredBB:                            ; preds = %originalBB51, %234
  %6759 = load i32, i32* %23, align 4, !dbg !2353
  %6760 = call i8* @gettext_quote(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11.86, i64 0, i64 0), i32 %6759), !dbg !2355
  store i8* %6760, i8** %26, align 8, !dbg !2356
  %6761 = load i32, i32* %23, align 4, !dbg !2357
  %6762 = call i8* @gettext_quote(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.87, i64 0, i64 0), i32 %6761), !dbg !2358
  store i8* %6762, i8** %27, align 8, !dbg !2359
  br label %originalBB51

originalBB55alteredBB:                            ; preds = %originalBB55, %258
  %6763 = load i8*, i8** %26, align 8, !dbg !2364
  store i8* %6763, i8** %31, align 8, !dbg !2366
  br label %originalBB55

originalBB59alteredBB:                            ; preds = %originalBB59, %276
  %6764 = load i8*, i8** %31, align 8, !dbg !2368
  %6765 = load i8, i8* %6764, align 1, !dbg !2370
  %6766 = icmp ne i8 %6765, 0, !dbg !2371
  br label %originalBB59

originalBB63alteredBB:                            ; preds = %originalBB63, %296
  br label %originalBB63

originalBB67alteredBB:                            ; preds = %originalBB67, %313
  %6767 = load i64, i64* %29, align 8, !dbg !2373
  %6768 = load i64, i64* %20, align 8, !dbg !2373
  %6769 = icmp ult i64 %6767, %6768, !dbg !2373
  br label %originalBB67

originalBB71alteredBB:                            ; preds = %originalBB71, %333
  %6770 = load i8*, i8** %31, align 8, !dbg !2373
  %6771 = load i8, i8* %6770, align 1, !dbg !2373
  %6772 = load i8*, i8** %19, align 8, !dbg !2373
  %6773 = load i64, i64* %29, align 8, !dbg !2373
  %6774 = getelementptr inbounds i8, i8* %6772, i64 %6773, !dbg !2373
  store i8 %6771, i8* %6774, align 1, !dbg !2373
  br label %originalBB71

originalBB75alteredBB:                            ; preds = %originalBB75, %355
  %6775 = load i64, i64* %29, align 8, !dbg !2376
  %_76 = sub i64 %6775, 1
  %gen77 = mul i64 %_76, 1
  %_78 = sub i64 %6775, 1
  %gen79 = mul i64 %_78, 1
  %_80 = sub i64 0, %6775
  %gen81 = add i64 %_80, 1
  %6776 = add i64 %6775, 1, !dbg !2376
  store i64 %6776, i64* %29, align 8, !dbg !2376
  br label %originalBB75

originalBB85alteredBB:                            ; preds = %originalBB85, %375
  %6777 = load i8*, i8** %31, align 8, !dbg !2377
  %6778 = getelementptr inbounds i8, i8* %6777, i32 1, !dbg !2377
  store i8* %6778, i8** %31, align 8, !dbg !2377
  br label %originalBB85

originalBB89alteredBB:                            ; preds = %originalBB89, %394
  br label %originalBB89

originalBB93alteredBB:                            ; preds = %originalBB93, %411
  store i8 1, i8* %33, align 1, !dbg !2381
  %6779 = load i8*, i8** %27, align 8, !dbg !2382
  store i8* %6779, i8** %31, align 8, !dbg !2383
  %6780 = load i8*, i8** %31, align 8, !dbg !2384
  %6781 = call i64 @strlen(i8* %6780) #13, !dbg !2385
  store i64 %6781, i64* %32, align 8, !dbg !2386
  br label %originalBB93

originalBB97alteredBB:                            ; preds = %originalBB97, %431
  store i8 1, i8* %33, align 1, !dbg !2388
  br label %originalBB97

originalBB101alteredBB:                           ; preds = %originalBB101, %448
  store i8 1, i8* %35, align 1, !dbg !2390
  br label %originalBB101

originalBB105alteredBB:                           ; preds = %originalBB105, %465
  %6782 = load i8, i8* %35, align 1, !dbg !2392
  %6783 = trunc i8 %6782 to i1, !dbg !2392
  br label %originalBB105

originalBB109alteredBB:                           ; preds = %originalBB109, %484
  store i8 1, i8* %33, align 1, !dbg !2395
  br label %originalBB109

originalBB113alteredBB:                           ; preds = %originalBB113, %501
  br label %originalBB113

originalBB117alteredBB:                           ; preds = %originalBB117, %521
  br label %originalBB117

originalBB121alteredBB:                           ; preds = %originalBB121, %538
  %6784 = load i64, i64* %29, align 8, !dbg !2403
  %6785 = load i64, i64* %20, align 8, !dbg !2403
  %6786 = icmp ult i64 %6784, %6785, !dbg !2403
  br label %originalBB121

originalBB125alteredBB:                           ; preds = %originalBB125, %558
  %6787 = load i8*, i8** %19, align 8, !dbg !2403
  %6788 = load i64, i64* %29, align 8, !dbg !2403
  %6789 = getelementptr inbounds i8, i8* %6787, i64 %6788, !dbg !2403
  store i8 39, i8* %6789, align 1, !dbg !2403
  br label %originalBB125

originalBB129alteredBB:                           ; preds = %originalBB129, %578
  %6790 = load i64, i64* %29, align 8, !dbg !2406
  %_130 = sub i64 0, %6790
  %gen131 = add i64 %_130, 1
  %_132 = sub i64 %6790, 1
  %gen133 = mul i64 %_132, 1
  %6791 = add i64 %6790, 1, !dbg !2406
  store i64 %6791, i64* %29, align 8, !dbg !2406
  br label %originalBB129

originalBB137alteredBB:                           ; preds = %originalBB137, %597
  br label %originalBB137

originalBB141alteredBB:                           ; preds = %originalBB141, %614
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.87, i64 0, i64 0), i8** %31, align 8, !dbg !2407
  store i64 1, i64* %32, align 8, !dbg !2408
  br label %originalBB141

originalBB145alteredBB:                           ; preds = %originalBB145, %631
  store i8 0, i8* %35, align 1, !dbg !2410
  br label %originalBB145

originalBB149alteredBB:                           ; preds = %originalBB149, %648
  call void @abort() #12, !dbg !2412
  br label %originalBB149

originalBB153alteredBB:                           ; preds = %originalBB153, %665
  store i64 0, i64* %28, align 8, !dbg !2413
  br label %originalBB153

originalBB157alteredBB:                           ; preds = %originalBB157, %682
  %6792 = load i64, i64* %22, align 8, !dbg !2416
  %6793 = icmp eq i64 %6792, -1, !dbg !2418
  br label %originalBB157

originalBB161alteredBB:                           ; preds = %originalBB161, %701
  %6794 = load i8*, i8** %21, align 8, !dbg !2419
  %6795 = load i64, i64* %28, align 8, !dbg !2420
  %6796 = getelementptr inbounds i8, i8* %6794, i64 %6795, !dbg !2419
  %6797 = load i8, i8* %6796, align 1, !dbg !2419
  %6798 = sext i8 %6797 to i32, !dbg !2419
  %6799 = icmp eq i32 %6798, 0, !dbg !2421
  %6800 = zext i1 %6799 to i32, !dbg !2421
  br label %originalBB161

originalBB165alteredBB:                           ; preds = %originalBB165, %725
  %6801 = load i64, i64* %28, align 8, !dbg !2422
  %6802 = load i64, i64* %22, align 8, !dbg !2423
  %6803 = icmp eq i64 %6801, %6802, !dbg !2424
  %6804 = zext i1 %6803 to i32, !dbg !2424
  br label %originalBB165

originalBB169alteredBB:                           ; preds = %originalBB169, %746
  %6805 = icmp ne i32 %747, 0, !dbg !2425
  %_170 = shl i1 %6805, true
  %_171 = sub i1 false, %6805
  %gen172 = add i1 %_171, true
  %6806 = xor i1 %6805, true, !dbg !2425
  br label %originalBB169

originalBB176alteredBB:                           ; preds = %originalBB176, %766
  store i8 0, i8* %41, align 1, !dbg !2433
  call void @llvm.dbg.declare(metadata !4, metadata !3211, metadata !DIExpression()), !dbg !2435
  store i8 0, i8* %42, align 1, !dbg !2435
  call void @llvm.dbg.declare(metadata !4, metadata !3246, metadata !DIExpression()), !dbg !2437
  store i8 0, i8* %43, align 1, !dbg !2437
  %6807 = load i8, i8* %33, align 1, !dbg !2438
  %6808 = trunc i8 %6807 to i1, !dbg !2438
  br label %originalBB176

originalBB180alteredBB:                           ; preds = %originalBB180, %785
  %6809 = load i32, i32* %23, align 4, !dbg !2441
  %6810 = icmp ne i32 %6809, 2, !dbg !2442
  br label %originalBB180

originalBB184alteredBB:                           ; preds = %originalBB184, %804
  %6811 = load i64, i64* %32, align 8, !dbg !2444
  %6812 = icmp ne i64 %6811, 0, !dbg !2444
  br label %originalBB184

originalBB188alteredBB:                           ; preds = %originalBB188, %823
  %6813 = load i64, i64* %28, align 8, !dbg !2446
  %6814 = load i64, i64* %32, align 8, !dbg !2447
  %6815 = add i64 %6813, %6814, !dbg !2448
  %6816 = load i64, i64* %22, align 8, !dbg !2449
  %6817 = icmp eq i64 %6816, -1, !dbg !2450
  br label %originalBB188

originalBB192alteredBB:                           ; preds = %originalBB192, %845
  %6818 = load i64, i64* %32, align 8, !dbg !2452
  %6819 = icmp ult i64 1, %6818, !dbg !2453
  br label %originalBB192

originalBB196alteredBB:                           ; preds = %originalBB196, %864
  %6820 = load i8*, i8** %21, align 8, !dbg !2454
  %6821 = call i64 @strlen(i8* %6820) #13, !dbg !2455
  store i64 %6821, i64* %22, align 8, !dbg !2456
  br label %originalBB196

originalBB200alteredBB:                           ; preds = %originalBB200, %883
  %6822 = load i64, i64* %22, align 8, !dbg !2457
  br label %originalBB200

originalBB204alteredBB:                           ; preds = %originalBB204, %901
  %6823 = icmp ule i64 %834, %902, !dbg !2458
  br label %originalBB204

originalBB208alteredBB:                           ; preds = %originalBB208, %928
  %6824 = load i8, i8* %35, align 1, !dbg !2468
  %6825 = trunc i8 %6824 to i1, !dbg !2468
  br label %originalBB208

originalBB212alteredBB:                           ; preds = %originalBB212, %947
  br label %originalBB212

originalBB216alteredBB:                           ; preds = %originalBB216, %964
  store i8 1, i8* %41, align 1, !dbg !2473
  br label %originalBB216

originalBB220alteredBB:                           ; preds = %originalBB220, %981
  %6826 = load i8*, i8** %21, align 8, !dbg !2475
  %6827 = load i64, i64* %28, align 8, !dbg !2476
  %6828 = getelementptr inbounds i8, i8* %6826, i64 %6827, !dbg !2475
  %6829 = load i8, i8* %6828, align 1, !dbg !2475
  store i8 %6829, i8* %39, align 1, !dbg !2477
  %6830 = load i8, i8* %39, align 1, !dbg !2478
  %6831 = zext i8 %6830 to i32, !dbg !2478
  br label %originalBB220

originalBB224alteredBB:                           ; preds = %originalBB224, %1004
  %6832 = load i8, i8* %33, align 1, !dbg !2480
  %6833 = trunc i8 %6832 to i1, !dbg !2480
  br label %originalBB224

originalBB228alteredBB:                           ; preds = %originalBB228, %1023
  br label %originalBB228

originalBB232alteredBB:                           ; preds = %originalBB232, %1040
  %6834 = load i8, i8* %35, align 1, !dbg !2486
  %6835 = trunc i8 %6834 to i1, !dbg !2486
  br label %originalBB232

originalBB236alteredBB:                           ; preds = %originalBB236, %1059
  br label %originalBB236

originalBB240alteredBB:                           ; preds = %originalBB240, %1076
  store i8 1, i8* %42, align 1, !dbg !2489
  %6836 = load i32, i32* %23, align 4, !dbg !2490
  %6837 = icmp eq i32 %6836, 2, !dbg !2490
  br label %originalBB240

originalBB244alteredBB:                           ; preds = %originalBB244, %1098
  br label %originalBB244

originalBB248alteredBB:                           ; preds = %originalBB248, %1115
  %6838 = load i64, i64* %29, align 8, !dbg !2494
  %6839 = load i64, i64* %20, align 8, !dbg !2494
  %6840 = icmp ult i64 %6838, %6839, !dbg !2494
  br label %originalBB248

originalBB252alteredBB:                           ; preds = %originalBB252, %1135
  %6841 = load i8*, i8** %19, align 8, !dbg !2494
  %6842 = load i64, i64* %29, align 8, !dbg !2494
  %6843 = getelementptr inbounds i8, i8* %6841, i64 %6842, !dbg !2494
  store i8 39, i8* %6843, align 1, !dbg !2494
  br label %originalBB252

originalBB256alteredBB:                           ; preds = %originalBB256, %1155
  %6844 = load i64, i64* %29, align 8, !dbg !2497
  %_257 = sub i64 0, %6844
  %gen258 = add i64 %_257, 1
  %_259 = sub i64 0, %6844
  %gen260 = add i64 %_259, 1
  %_261 = sub i64 0, %6844
  %gen262 = add i64 %_261, 1
  %_263 = sub i64 0, %6844
  %gen264 = add i64 %_263, 1
  %_265 = sub i64 0, %6844
  %gen266 = add i64 %_265, 1
  %_267 = sub i64 %6844, 1
  %gen268 = mul i64 %_267, 1
  %6845 = add i64 %6844, 1, !dbg !2497
  store i64 %6845, i64* %29, align 8, !dbg !2497
  br label %originalBB256

originalBB272alteredBB:                           ; preds = %originalBB272, %1174
  br label %originalBB272

originalBB276alteredBB:                           ; preds = %originalBB276, %1191
  %6846 = load i64, i64* %29, align 8, !dbg !2498
  %6847 = load i64, i64* %20, align 8, !dbg !2498
  %6848 = icmp ult i64 %6846, %6847, !dbg !2498
  br label %originalBB276

originalBB280alteredBB:                           ; preds = %originalBB280, %1211
  %6849 = load i8*, i8** %19, align 8, !dbg !2498
  %6850 = load i64, i64* %29, align 8, !dbg !2498
  %6851 = getelementptr inbounds i8, i8* %6849, i64 %6850, !dbg !2498
  store i8 36, i8* %6851, align 1, !dbg !2498
  br label %originalBB280

originalBB284alteredBB:                           ; preds = %originalBB284, %1231
  %6852 = load i64, i64* %29, align 8, !dbg !2501
  %_285 = sub i64 0, %6852
  %gen286 = add i64 %_285, 1
  %_287 = sub i64 %6852, 1
  %gen288 = mul i64 %_287, 1
  %6853 = add i64 %6852, 1, !dbg !2501
  store i64 %6853, i64* %29, align 8, !dbg !2501
  br label %originalBB284

originalBB292alteredBB:                           ; preds = %originalBB292, %1250
  br label %originalBB292

originalBB296alteredBB:                           ; preds = %originalBB296, %1267
  %6854 = load i64, i64* %29, align 8, !dbg !2502
  %6855 = load i64, i64* %20, align 8, !dbg !2502
  %6856 = icmp ult i64 %6854, %6855, !dbg !2502
  br label %originalBB296

originalBB300alteredBB:                           ; preds = %originalBB300, %1287
  %6857 = load i8*, i8** %19, align 8, !dbg !2502
  %6858 = load i64, i64* %29, align 8, !dbg !2502
  %6859 = getelementptr inbounds i8, i8* %6857, i64 %6858, !dbg !2502
  store i8 39, i8* %6859, align 1, !dbg !2502
  br label %originalBB300

originalBB304alteredBB:                           ; preds = %originalBB304, %1307
  %6860 = load i64, i64* %29, align 8, !dbg !2505
  %_305 = sub i64 %6860, 1
  %gen306 = mul i64 %_305, 1
  %_307 = sub i64 0, %6860
  %gen308 = add i64 %_307, 1
  %_309 = shl i64 %6860, 1
  %6861 = add i64 %6860, 1, !dbg !2505
  store i64 %6861, i64* %29, align 8, !dbg !2505
  br label %originalBB304

originalBB313alteredBB:                           ; preds = %originalBB313, %1326
  store i8 1, i8* %36, align 1, !dbg !2492
  br label %originalBB313

originalBB317alteredBB:                           ; preds = %originalBB317, %1343
  br label %originalBB317

originalBB321alteredBB:                           ; preds = %originalBB321, %1360
  %6862 = load i64, i64* %29, align 8, !dbg !2506
  %6863 = load i64, i64* %20, align 8, !dbg !2506
  %6864 = icmp ult i64 %6862, %6863, !dbg !2506
  br label %originalBB321

originalBB325alteredBB:                           ; preds = %originalBB325, %1380
  %6865 = load i8*, i8** %19, align 8, !dbg !2506
  %6866 = load i64, i64* %29, align 8, !dbg !2506
  %6867 = getelementptr inbounds i8, i8* %6865, i64 %6866, !dbg !2506
  store i8 92, i8* %6867, align 1, !dbg !2506
  br label %originalBB325

originalBB329alteredBB:                           ; preds = %originalBB329, %1400
  %6868 = load i64, i64* %29, align 8, !dbg !2509
  %_330 = sub i64 %6868, 1
  %gen331 = mul i64 %_330, 1
  %_332 = sub i64 %6868, 1
  %gen333 = mul i64 %_332, 1
  %_334 = sub i64 %6868, 1
  %gen335 = mul i64 %_334, 1
  %6869 = add i64 %6868, 1, !dbg !2509
  store i64 %6869, i64* %29, align 8, !dbg !2509
  br label %originalBB329

originalBB339alteredBB:                           ; preds = %originalBB339, %1419
  br label %originalBB339

originalBB343alteredBB:                           ; preds = %originalBB343, %1439
  %6870 = load i64, i64* %28, align 8, !dbg !2514
  %_344 = sub i64 %6870, 1
  %gen345 = mul i64 %_344, 1
  %_346 = sub i64 %6870, 1
  %gen347 = mul i64 %_346, 1
  %_348 = sub i64 0, %6870
  %gen349 = add i64 %_348, 1
  %_350 = sub i64 %6870, 1
  %gen351 = mul i64 %_350, 1
  %_352 = sub i64 0, %6870
  %gen353 = add i64 %_352, 1
  %_354 = shl i64 %6870, 1
  %6871 = add i64 %6870, 1, !dbg !2515
  %6872 = load i64, i64* %22, align 8, !dbg !2516
  %6873 = icmp ult i64 %6871, %6872, !dbg !2517
  br label %originalBB343

originalBB358alteredBB:                           ; preds = %originalBB358, %1460
  %6874 = load i8*, i8** %21, align 8, !dbg !2519
  %6875 = load i64, i64* %28, align 8, !dbg !2520
  %_359 = sub i64 %6875, 1
  %gen360 = mul i64 %_359, 1
  %_361 = sub i64 %6875, 1
  %gen362 = mul i64 %_361, 1
  %_363 = sub i64 %6875, 1
  %gen364 = mul i64 %_363, 1
  %_365 = sub i64 %6875, 1
  %gen366 = mul i64 %_365, 1
  %_367 = sub i64 0, %6875
  %gen368 = add i64 %_367, 1
  %_369 = shl i64 %6875, 1
  %6876 = add i64 %6875, 1, !dbg !2521
  %6877 = getelementptr inbounds i8, i8* %6874, i64 %6876, !dbg !2519
  %6878 = load i8, i8* %6877, align 1, !dbg !2519
  %6879 = sext i8 %6878 to i32, !dbg !2519
  %6880 = icmp sle i32 48, %6879, !dbg !2522
  br label %originalBB358

originalBB373alteredBB:                           ; preds = %originalBB373, %1484
  %6881 = load i8*, i8** %21, align 8, !dbg !2524
  %6882 = load i64, i64* %28, align 8, !dbg !2525
  %_374 = sub i64 0, %6882
  %gen375 = add i64 %_374, 1
  %_376 = sub i64 0, %6882
  %gen377 = add i64 %_376, 1
  %_378 = sub i64 0, %6882
  %gen379 = add i64 %_378, 1
  %_380 = sub i64 %6882, 1
  %gen381 = mul i64 %_380, 1
  %6883 = add i64 %6882, 1, !dbg !2526
  %6884 = getelementptr inbounds i8, i8* %6881, i64 %6883, !dbg !2524
  %6885 = load i8, i8* %6884, align 1, !dbg !2524
  %6886 = sext i8 %6885 to i32, !dbg !2524
  %6887 = icmp sle i32 %6886, 57, !dbg !2527
  br label %originalBB373

originalBB385alteredBB:                           ; preds = %originalBB385, %1508
  br label %originalBB385

originalBB389alteredBB:                           ; preds = %originalBB389, %1525
  %6888 = load i64, i64* %29, align 8, !dbg !2531
  %6889 = load i64, i64* %20, align 8, !dbg !2531
  %6890 = icmp ult i64 %6888, %6889, !dbg !2531
  br label %originalBB389

originalBB393alteredBB:                           ; preds = %originalBB393, %1545
  %6891 = load i8*, i8** %19, align 8, !dbg !2531
  %6892 = load i64, i64* %29, align 8, !dbg !2531
  %6893 = getelementptr inbounds i8, i8* %6891, i64 %6892, !dbg !2531
  store i8 48, i8* %6893, align 1, !dbg !2531
  br label %originalBB393

originalBB397alteredBB:                           ; preds = %originalBB397, %1565
  %6894 = load i64, i64* %29, align 8, !dbg !2534
  %_398 = sub i64 0, %6894
  %gen399 = add i64 %_398, 1
  %6895 = add i64 %6894, 1, !dbg !2534
  store i64 %6895, i64* %29, align 8, !dbg !2534
  br label %originalBB397

originalBB403alteredBB:                           ; preds = %originalBB403, %1584
  br label %originalBB403

originalBB407alteredBB:                           ; preds = %originalBB407, %1605
  %6896 = load i8*, i8** %19, align 8, !dbg !2536
  %6897 = load i64, i64* %29, align 8, !dbg !2536
  %6898 = getelementptr inbounds i8, i8* %6896, i64 %6897, !dbg !2536
  store i8 48, i8* %6898, align 1, !dbg !2536
  br label %originalBB407

originalBB411alteredBB:                           ; preds = %originalBB411, %1625
  %6899 = load i64, i64* %29, align 8, !dbg !2539
  %_412 = shl i64 %6899, 1
  %_413 = sub i64 %6899, 1
  %gen414 = mul i64 %_413, 1
  %_415 = sub i64 %6899, 1
  %gen416 = mul i64 %_415, 1
  %_417 = sub i64 0, %6899
  %gen418 = add i64 %_417, 1
  %_419 = sub i64 %6899, 1
  %gen420 = mul i64 %_419, 1
  %6900 = add i64 %6899, 1, !dbg !2539
  store i64 %6900, i64* %29, align 8, !dbg !2539
  br label %originalBB411

originalBB424alteredBB:                           ; preds = %originalBB424, %1644
  br label %originalBB424

originalBB428alteredBB:                           ; preds = %originalBB428, %1661
  store i8 48, i8* %39, align 1, !dbg !2541
  br label %originalBB428

originalBB432alteredBB:                           ; preds = %originalBB432, %1678
  %6901 = load i32, i32* %24, align 4, !dbg !2543
  %_433 = sub i32 0, %6901
  %gen434 = add i32 %_433, 1
  %_435 = sub i32 %6901, 1
  %gen436 = mul i32 %_435, 1
  %_437 = shl i32 %6901, 1
  %_438 = sub i32 %6901, 1
  %gen439 = mul i32 %_438, 1
  %6902 = and i32 %6901, 1, !dbg !2545
  %6903 = icmp ne i32 %6902, 0, !dbg !2545
  br label %originalBB432

originalBB443alteredBB:                           ; preds = %originalBB443, %1698
  br label %originalBB443

originalBB447alteredBB:                           ; preds = %originalBB447, %1715
  br label %originalBB447

originalBB451alteredBB:                           ; preds = %originalBB451, %1732
  br label %originalBB451

originalBB455alteredBB:                           ; preds = %originalBB455, %1749
  %6904 = load i32, i32* %23, align 4, !dbg !2549
  br label %originalBB455

originalBB459alteredBB:                           ; preds = %originalBB459, %1767
  %6905 = load i8, i8* %35, align 1, !dbg !2551
  %6906 = trunc i8 %6905 to i1, !dbg !2551
  br label %originalBB459

originalBB463alteredBB:                           ; preds = %originalBB463, %1787
  br label %originalBB463

originalBB467alteredBB:                           ; preds = %originalBB467, %1804
  %6907 = load i32, i32* %24, align 4, !dbg !2557
  %_468 = shl i32 %6907, 4
  %_469 = shl i32 %6907, 4
  %6908 = and i32 %6907, 4, !dbg !2559
  %6909 = icmp ne i32 %6908, 0, !dbg !2559
  br label %originalBB467

originalBB473alteredBB:                           ; preds = %originalBB473, %1824
  %6910 = load i64, i64* %28, align 8, !dbg !2561
  %6911 = add i64 %6910, 2, !dbg !2562
  %6912 = load i64, i64* %22, align 8, !dbg !2563
  %6913 = icmp ult i64 %6911, %6912, !dbg !2564
  br label %originalBB473

originalBB477alteredBB:                           ; preds = %originalBB477, %1845
  %6914 = load i8*, i8** %21, align 8, !dbg !2566
  %6915 = load i64, i64* %28, align 8, !dbg !2567
  %_478 = sub i64 0, %6915
  %gen479 = add i64 %_478, 1
  %_480 = sub i64 0, %6915
  %gen481 = add i64 %_480, 1
  %6916 = add i64 %6915, 1, !dbg !2568
  %6917 = getelementptr inbounds i8, i8* %6914, i64 %6916, !dbg !2566
  %6918 = load i8, i8* %6917, align 1, !dbg !2566
  %6919 = sext i8 %6918 to i32, !dbg !2566
  %6920 = icmp eq i32 %6919, 63, !dbg !2569
  br label %originalBB477

originalBB485alteredBB:                           ; preds = %originalBB485, %1869
  %6921 = load i8*, i8** %21, align 8, !dbg !2571
  %6922 = load i64, i64* %28, align 8, !dbg !2572
  %_486 = shl i64 %6922, 2
  %_487 = sub i64 0, %6922
  %gen488 = add i64 %_487, 2
  %_489 = sub i64 %6922, 2
  %gen490 = mul i64 %_489, 2
  %_491 = sub i64 0, %6922
  %gen492 = add i64 %_491, 2
  %_493 = shl i64 %6922, 2
  %_494 = sub i64 0, %6922
  %gen495 = add i64 %_494, 2
  %6923 = add i64 %6922, 2, !dbg !2573
  %6924 = getelementptr inbounds i8, i8* %6921, i64 %6923, !dbg !2571
  %6925 = load i8, i8* %6924, align 1, !dbg !2571
  %6926 = sext i8 %6925 to i32, !dbg !2571
  br label %originalBB485

originalBB499alteredBB:                           ; preds = %originalBB499, %1892
  %6927 = load i8, i8* %35, align 1, !dbg !2575
  %6928 = trunc i8 %6927 to i1, !dbg !2575
  br label %originalBB499

originalBB503alteredBB:                           ; preds = %originalBB503, %1911
  br label %originalBB503

originalBB507alteredBB:                           ; preds = %originalBB507, %1928
  %6929 = load i8*, i8** %21, align 8, !dbg !2580
  %6930 = load i64, i64* %28, align 8, !dbg !2581
  %_508 = shl i64 %6930, 2
  %6931 = add i64 %6930, 2, !dbg !2582
  %6932 = getelementptr inbounds i8, i8* %6929, i64 %6931, !dbg !2580
  %6933 = load i8, i8* %6932, align 1, !dbg !2580
  store i8 %6933, i8* %39, align 1, !dbg !2583
  %6934 = load i64, i64* %28, align 8, !dbg !2584
  %_509 = sub i64 0, %6934
  %gen510 = add i64 %_509, 2
  %_511 = sub i64 %6934, 2
  %gen512 = mul i64 %_511, 2
  %_513 = sub i64 %6934, 2
  %gen514 = mul i64 %_513, 2
  %_515 = sub i64 0, %6934
  %gen516 = add i64 %_515, 2
  %6935 = add i64 %6934, 2, !dbg !2584
  store i64 %6935, i64* %28, align 8, !dbg !2584
  br label %originalBB507

originalBB520alteredBB:                           ; preds = %originalBB520, %1952
  %6936 = load i64, i64* %29, align 8, !dbg !2586
  %6937 = load i64, i64* %20, align 8, !dbg !2586
  %6938 = icmp ult i64 %6936, %6937, !dbg !2586
  br label %originalBB520

originalBB524alteredBB:                           ; preds = %originalBB524, %1972
  %6939 = load i8*, i8** %19, align 8, !dbg !2586
  %6940 = load i64, i64* %29, align 8, !dbg !2586
  %6941 = getelementptr inbounds i8, i8* %6939, i64 %6940, !dbg !2586
  store i8 63, i8* %6941, align 1, !dbg !2586
  br label %originalBB524

originalBB528alteredBB:                           ; preds = %originalBB528, %1992
  %6942 = load i64, i64* %29, align 8, !dbg !2589
  %_529 = shl i64 %6942, 1
  %_530 = sub i64 %6942, 1
  %gen531 = mul i64 %_530, 1
  %_532 = sub i64 %6942, 1
  %gen533 = mul i64 %_532, 1
  %_534 = sub i64 %6942, 1
  %gen535 = mul i64 %_534, 1
  %_536 = sub i64 0, %6942
  %gen537 = add i64 %_536, 1
  %_538 = sub i64 %6942, 1
  %gen539 = mul i64 %_538, 1
  %_540 = shl i64 %6942, 1
  %6943 = add i64 %6942, 1, !dbg !2589
  store i64 %6943, i64* %29, align 8, !dbg !2589
  br label %originalBB528

originalBB544alteredBB:                           ; preds = %originalBB544, %2011
  br label %originalBB544

originalBB548alteredBB:                           ; preds = %originalBB548, %2028
  %6944 = load i64, i64* %29, align 8, !dbg !2591
  %6945 = load i64, i64* %20, align 8, !dbg !2591
  %6946 = icmp ult i64 %6944, %6945, !dbg !2591
  br label %originalBB548

originalBB552alteredBB:                           ; preds = %originalBB552, %2048
  %6947 = load i8*, i8** %19, align 8, !dbg !2591
  %6948 = load i64, i64* %29, align 8, !dbg !2591
  %6949 = getelementptr inbounds i8, i8* %6947, i64 %6948, !dbg !2591
  store i8 34, i8* %6949, align 1, !dbg !2591
  br label %originalBB552

originalBB556alteredBB:                           ; preds = %originalBB556, %2068
  %6950 = load i64, i64* %29, align 8, !dbg !2594
  %_557 = shl i64 %6950, 1
  %_558 = shl i64 %6950, 1
  %_559 = sub i64 %6950, 1
  %gen560 = mul i64 %_559, 1
  %_561 = shl i64 %6950, 1
  %_562 = shl i64 %6950, 1
  %_563 = sub i64 %6950, 1
  %gen564 = mul i64 %_563, 1
  %_565 = shl i64 %6950, 1
  %_566 = sub i64 %6950, 1
  %gen567 = mul i64 %_566, 1
  %_568 = sub i64 0, %6950
  %gen569 = add i64 %_568, 1
  %6951 = add i64 %6950, 1, !dbg !2594
  store i64 %6951, i64* %29, align 8, !dbg !2594
  br label %originalBB556

originalBB573alteredBB:                           ; preds = %originalBB573, %2087
  br label %originalBB573

originalBB577alteredBB:                           ; preds = %originalBB577, %2104
  %6952 = load i64, i64* %29, align 8, !dbg !2596
  %6953 = load i64, i64* %20, align 8, !dbg !2596
  %6954 = icmp ult i64 %6952, %6953, !dbg !2596
  br label %originalBB577

originalBB581alteredBB:                           ; preds = %originalBB581, %2124
  %6955 = load i8*, i8** %19, align 8, !dbg !2596
  %6956 = load i64, i64* %29, align 8, !dbg !2596
  %6957 = getelementptr inbounds i8, i8* %6955, i64 %6956, !dbg !2596
  store i8 34, i8* %6957, align 1, !dbg !2596
  br label %originalBB581

originalBB585alteredBB:                           ; preds = %originalBB585, %2144
  %6958 = load i64, i64* %29, align 8, !dbg !2599
  %_586 = sub i64 0, %6958
  %gen587 = add i64 %_586, 1
  %_588 = sub i64 0, %6958
  %gen589 = add i64 %_588, 1
  %_590 = sub i64 0, %6958
  %gen591 = add i64 %_590, 1
  %6959 = add i64 %6958, 1, !dbg !2599
  store i64 %6959, i64* %29, align 8, !dbg !2599
  br label %originalBB585

originalBB595alteredBB:                           ; preds = %originalBB595, %2163
  br label %originalBB595

originalBB599alteredBB:                           ; preds = %originalBB599, %2180
  %6960 = load i64, i64* %29, align 8, !dbg !2601
  %6961 = load i64, i64* %20, align 8, !dbg !2601
  %6962 = icmp ult i64 %6960, %6961, !dbg !2601
  br label %originalBB599

originalBB603alteredBB:                           ; preds = %originalBB603, %2200
  %6963 = load i8*, i8** %19, align 8, !dbg !2601
  %6964 = load i64, i64* %29, align 8, !dbg !2601
  %6965 = getelementptr inbounds i8, i8* %6963, i64 %6964, !dbg !2601
  store i8 63, i8* %6965, align 1, !dbg !2601
  br label %originalBB603

originalBB607alteredBB:                           ; preds = %originalBB607, %2220
  %6966 = load i64, i64* %29, align 8, !dbg !2604
  %_608 = shl i64 %6966, 1
  %_609 = sub i64 0, %6966
  %gen610 = add i64 %_609, 1
  %_611 = shl i64 %6966, 1
  %_612 = sub i64 %6966, 1
  %gen613 = mul i64 %_612, 1
  %_614 = shl i64 %6966, 1
  %6967 = add i64 %6966, 1, !dbg !2604
  store i64 %6967, i64* %29, align 8, !dbg !2604
  br label %originalBB607

originalBB618alteredBB:                           ; preds = %originalBB618, %2239
  br label %originalBB618

originalBB622alteredBB:                           ; preds = %originalBB622, %2256
  br label %originalBB622

originalBB626alteredBB:                           ; preds = %originalBB626, %2273
  br label %originalBB626

originalBB630alteredBB:                           ; preds = %originalBB630, %2290
  br label %originalBB630

originalBB634alteredBB:                           ; preds = %originalBB634, %2307
  br label %originalBB634

originalBB638alteredBB:                           ; preds = %originalBB638, %2324
  br label %originalBB638

originalBB642alteredBB:                           ; preds = %originalBB642, %2341
  store i8 97, i8* %40, align 1, !dbg !2611
  br label %originalBB642

originalBB646alteredBB:                           ; preds = %originalBB646, %2358
  store i8 98, i8* %40, align 1, !dbg !2613
  br label %originalBB646

originalBB650alteredBB:                           ; preds = %originalBB650, %2375
  store i8 102, i8* %40, align 1, !dbg !2615
  br label %originalBB650

originalBB654alteredBB:                           ; preds = %originalBB654, %2392
  store i8 110, i8* %40, align 1, !dbg !2617
  br label %originalBB654

originalBB658alteredBB:                           ; preds = %originalBB658, %2409
  store i8 114, i8* %40, align 1, !dbg !2619
  br label %originalBB658

originalBB662alteredBB:                           ; preds = %originalBB662, %2426
  store i8 116, i8* %40, align 1, !dbg !2621
  br label %originalBB662

originalBB666alteredBB:                           ; preds = %originalBB666, %2443
  store i8 118, i8* %40, align 1, !dbg !2623
  br label %originalBB666

originalBB670alteredBB:                           ; preds = %originalBB670, %2460
  %6968 = load i8, i8* %39, align 1, !dbg !2625
  store i8 %6968, i8* %40, align 1, !dbg !2626
  %6969 = load i32, i32* %23, align 4, !dbg !2627
  %6970 = icmp eq i32 %6969, 2, !dbg !2629
  br label %originalBB670

originalBB674alteredBB:                           ; preds = %originalBB674, %2480
  %6971 = load i8, i8* %35, align 1, !dbg !2631
  %6972 = trunc i8 %6971 to i1, !dbg !2631
  br label %originalBB674

originalBB678alteredBB:                           ; preds = %originalBB678, %2499
  br label %originalBB678

originalBB682alteredBB:                           ; preds = %originalBB682, %2516
  br label %originalBB682

originalBB686alteredBB:                           ; preds = %originalBB686, %2533
  %6973 = load i8, i8* %33, align 1, !dbg !2637
  %6974 = trunc i8 %6973 to i1, !dbg !2637
  br label %originalBB686

originalBB690alteredBB:                           ; preds = %originalBB690, %2552
  %6975 = load i8, i8* %35, align 1, !dbg !2640
  %6976 = trunc i8 %6975 to i1, !dbg !2640
  br label %originalBB690

originalBB694alteredBB:                           ; preds = %originalBB694, %2571
  %6977 = load i64, i64* %32, align 8, !dbg !2642
  %6978 = icmp ne i64 %6977, 0, !dbg !2642
  br label %originalBB694

originalBB698alteredBB:                           ; preds = %originalBB698, %2590
  br label %originalBB698

originalBB702alteredBB:                           ; preds = %originalBB702, %2607
  br label %originalBB702

originalBB706alteredBB:                           ; preds = %originalBB706, %2624
  %6979 = load i32, i32* %23, align 4, !dbg !2647
  %6980 = icmp eq i32 %6979, 2, !dbg !2649
  br label %originalBB706

originalBB710alteredBB:                           ; preds = %originalBB710, %2643
  %6981 = load i8, i8* %35, align 1, !dbg !2651
  %6982 = trunc i8 %6981 to i1, !dbg !2651
  br label %originalBB710

originalBB714alteredBB:                           ; preds = %originalBB714, %2662
  br label %originalBB714

originalBB718alteredBB:                           ; preds = %originalBB718, %2679
  br label %originalBB718

originalBB722alteredBB:                           ; preds = %originalBB722, %2696
  %6983 = load i8, i8* %33, align 1, !dbg !2656
  %6984 = trunc i8 %6983 to i1, !dbg !2656
  br label %originalBB722

originalBB726alteredBB:                           ; preds = %originalBB726, %2715
  %6985 = load i8, i8* %40, align 1, !dbg !2659
  store i8 %6985, i8* %39, align 1, !dbg !2661
  br label %originalBB726

originalBB730alteredBB:                           ; preds = %originalBB730, %2733
  br label %originalBB730

originalBB734alteredBB:                           ; preds = %originalBB734, %2750
  %6986 = load i64, i64* %22, align 8, !dbg !2664
  %6987 = icmp eq i64 %6986, -1, !dbg !2666
  br label %originalBB734

originalBB738alteredBB:                           ; preds = %originalBB738, %2769
  %6988 = load i8*, i8** %21, align 8, !dbg !2668
  %6989 = getelementptr inbounds i8, i8* %6988, i64 1, !dbg !2668
  %6990 = load i8, i8* %6989, align 1, !dbg !2668
  %6991 = sext i8 %6990 to i32, !dbg !2668
  %6992 = icmp eq i32 %6991, 0, !dbg !2669
  br label %originalBB738

originalBB742alteredBB:                           ; preds = %originalBB742, %2791
  %6993 = load i64, i64* %22, align 8, !dbg !2670
  %6994 = icmp eq i64 %6993, 1, !dbg !2671
  br label %originalBB742

originalBB746alteredBB:                           ; preds = %originalBB746, %2810
  br label %originalBB746

originalBB750alteredBB:                           ; preds = %originalBB750, %2827
  br label %originalBB750

originalBB754alteredBB:                           ; preds = %originalBB754, %2847
  br label %originalBB754

originalBB758alteredBB:                           ; preds = %originalBB758, %2864
  br label %originalBB758

originalBB762alteredBB:                           ; preds = %originalBB762, %2881
  store i8 1, i8* %43, align 1, !dbg !2680
  br label %originalBB762

originalBB766alteredBB:                           ; preds = %originalBB766, %2898
  %6995 = load i32, i32* %23, align 4, !dbg !2682
  %6996 = icmp eq i32 %6995, 2, !dbg !2684
  br label %originalBB766

originalBB770alteredBB:                           ; preds = %originalBB770, %2917
  %6997 = load i8, i8* %35, align 1, !dbg !2686
  %6998 = trunc i8 %6997 to i1, !dbg !2686
  br label %originalBB770

originalBB774alteredBB:                           ; preds = %originalBB774, %2936
  br label %originalBB774

originalBB778alteredBB:                           ; preds = %originalBB778, %2953
  br label %originalBB778

originalBB782alteredBB:                           ; preds = %originalBB782, %2970
  store i8 1, i8* %37, align 1, !dbg !2690
  store i8 1, i8* %43, align 1, !dbg !2691
  %6999 = load i32, i32* %23, align 4, !dbg !2692
  %7000 = icmp eq i32 %6999, 2, !dbg !2694
  br label %originalBB782

originalBB786alteredBB:                           ; preds = %originalBB786, %2989
  %7001 = load i8, i8* %35, align 1, !dbg !2696
  %7002 = trunc i8 %7001 to i1, !dbg !2696
  br label %originalBB786

originalBB790alteredBB:                           ; preds = %originalBB790, %3008
  br label %originalBB790

originalBB794alteredBB:                           ; preds = %originalBB794, %3025
  %7003 = load i64, i64* %20, align 8, !dbg !2701
  %7004 = icmp ne i64 %7003, 0, !dbg !2701
  br label %originalBB794

originalBB798alteredBB:                           ; preds = %originalBB798, %3044
  %7005 = load i64, i64* %30, align 8, !dbg !2704
  %7006 = icmp ne i64 %7005, 0, !dbg !2704
  br label %originalBB798

originalBB802alteredBB:                           ; preds = %originalBB802, %3063
  %7007 = load i64, i64* %20, align 8, !dbg !2706
  store i64 %7007, i64* %30, align 8, !dbg !2708
  store i64 0, i64* %20, align 8, !dbg !2709
  br label %originalBB802

originalBB806alteredBB:                           ; preds = %originalBB806, %3081
  br label %originalBB806

originalBB810alteredBB:                           ; preds = %originalBB810, %3098
  %7008 = load i64, i64* %29, align 8, !dbg !2712
  %7009 = load i64, i64* %20, align 8, !dbg !2712
  %7010 = icmp ult i64 %7008, %7009, !dbg !2712
  br label %originalBB810

originalBB814alteredBB:                           ; preds = %originalBB814, %3118
  %7011 = load i8*, i8** %19, align 8, !dbg !2712
  %7012 = load i64, i64* %29, align 8, !dbg !2712
  %7013 = getelementptr inbounds i8, i8* %7011, i64 %7012, !dbg !2712
  store i8 39, i8* %7013, align 1, !dbg !2712
  br label %originalBB814

originalBB818alteredBB:                           ; preds = %originalBB818, %3138
  %7014 = load i64, i64* %29, align 8, !dbg !2715
  %_819 = shl i64 %7014, 1
  %_820 = sub i64 0, %7014
  %gen821 = add i64 %_820, 1
  %7015 = add i64 %7014, 1, !dbg !2715
  store i64 %7015, i64* %29, align 8, !dbg !2715
  br label %originalBB818

originalBB825alteredBB:                           ; preds = %originalBB825, %3157
  br label %originalBB825

originalBB829alteredBB:                           ; preds = %originalBB829, %3174
  %7016 = load i64, i64* %29, align 8, !dbg !2717
  %7017 = load i64, i64* %20, align 8, !dbg !2717
  %7018 = icmp ult i64 %7016, %7017, !dbg !2717
  br label %originalBB829

originalBB833alteredBB:                           ; preds = %originalBB833, %3194
  %7019 = load i8*, i8** %19, align 8, !dbg !2717
  %7020 = load i64, i64* %29, align 8, !dbg !2717
  %7021 = getelementptr inbounds i8, i8* %7019, i64 %7020, !dbg !2717
  store i8 92, i8* %7021, align 1, !dbg !2717
  br label %originalBB833

originalBB837alteredBB:                           ; preds = %originalBB837, %3214
  %7022 = load i64, i64* %29, align 8, !dbg !2720
  %_838 = shl i64 %7022, 1
  %_839 = sub i64 %7022, 1
  %gen840 = mul i64 %_839, 1
  %_841 = sub i64 0, %7022
  %gen842 = add i64 %_841, 1
  %_843 = sub i64 0, %7022
  %gen844 = add i64 %_843, 1
  %_845 = sub i64 %7022, 1
  %gen846 = mul i64 %_845, 1
  %_847 = sub i64 0, %7022
  %gen848 = add i64 %_847, 1
  %_849 = sub i64 0, %7022
  %gen850 = add i64 %_849, 1
  %7023 = add i64 %7022, 1, !dbg !2720
  store i64 %7023, i64* %29, align 8, !dbg !2720
  br label %originalBB837

originalBB854alteredBB:                           ; preds = %originalBB854, %3233
  br label %originalBB854

originalBB858alteredBB:                           ; preds = %originalBB858, %3250
  %7024 = load i64, i64* %29, align 8, !dbg !2722
  %7025 = load i64, i64* %20, align 8, !dbg !2722
  %7026 = icmp ult i64 %7024, %7025, !dbg !2722
  br label %originalBB858

originalBB862alteredBB:                           ; preds = %originalBB862, %3270
  %7027 = load i8*, i8** %19, align 8, !dbg !2722
  %7028 = load i64, i64* %29, align 8, !dbg !2722
  %7029 = getelementptr inbounds i8, i8* %7027, i64 %7028, !dbg !2722
  store i8 39, i8* %7029, align 1, !dbg !2722
  br label %originalBB862

originalBB866alteredBB:                           ; preds = %originalBB866, %3290
  %7030 = load i64, i64* %29, align 8, !dbg !2725
  %_867 = shl i64 %7030, 1
  %_868 = sub i64 %7030, 1
  %gen869 = mul i64 %_868, 1
  %7031 = add i64 %7030, 1, !dbg !2725
  store i64 %7031, i64* %29, align 8, !dbg !2725
  br label %originalBB866

originalBB873alteredBB:                           ; preds = %originalBB873, %3310
  br label %originalBB873

originalBB877alteredBB:                           ; preds = %originalBB877, %3327
  store i8 1, i8* %43, align 1, !dbg !2729
  br label %originalBB877

originalBB881alteredBB:                           ; preds = %originalBB881, %3344
  %7032 = load i8, i8* %34, align 1, !dbg !2736
  %7033 = trunc i8 %7032 to i1, !dbg !2736
  br label %originalBB881

originalBB885alteredBB:                           ; preds = %originalBB885, %3363
  store i64 1, i64* %44, align 8, !dbg !2739
  %7034 = call i16** @__ctype_b_loc() #15, !dbg !2741
  %7035 = load i16*, i16** %7034, align 8, !dbg !2741
  %7036 = load i8, i8* %39, align 1, !dbg !2741
  %7037 = zext i8 %7036 to i32, !dbg !2741
  %7038 = sext i32 %7037 to i64, !dbg !2741
  %7039 = getelementptr inbounds i16, i16* %7035, i64 %7038, !dbg !2741
  %7040 = load i16, i16* %7039, align 2, !dbg !2741
  %7041 = zext i16 %7040 to i32, !dbg !2741
  %_886 = sub i32 %7041, 16384
  %gen887 = mul i32 %_886, 16384
  %_888 = shl i32 %7041, 16384
  %_889 = shl i32 %7041, 16384
  %_890 = sub i32 %7041, 16384
  %gen891 = mul i32 %_890, 16384
  %_892 = sub i32 %7041, 16384
  %gen893 = mul i32 %_892, 16384
  %_894 = shl i32 %7041, 16384
  %7042 = and i32 %7041, 16384, !dbg !2741
  %7043 = icmp ne i32 %7042, 0, !dbg !2742
  %7044 = zext i1 %7043 to i8, !dbg !2743
  store i8 %7044, i8* %45, align 1, !dbg !2743
  br label %originalBB885

originalBB898alteredBB:                           ; preds = %originalBB898, %3391
  %7045 = bitcast %struct.__mbstate_t* %46 to i8*, !dbg !2763
  call void @llvm.memset.p0i8.i64(i8* align 4 %7045, i8 0, i64 8, i1 false), !dbg !2763
  store i64 0, i64* %44, align 8, !dbg !2764
  store i8 1, i8* %45, align 1, !dbg !2765
  %7046 = load i64, i64* %22, align 8, !dbg !2766
  %7047 = icmp eq i64 %7046, -1, !dbg !2768
  br label %originalBB898

originalBB902alteredBB:                           ; preds = %originalBB902, %3411
  %7048 = load i8*, i8** %21, align 8, !dbg !2770
  %7049 = call i64 @strlen(i8* %7048) #13, !dbg !2771
  store i64 %7049, i64* %22, align 8, !dbg !2772
  br label %originalBB902

originalBB906alteredBB:                           ; preds = %originalBB906, %3430
  br label %originalBB906

originalBB910alteredBB:                           ; preds = %originalBB910, %3447
  %7050 = load i8*, i8** %21, align 8, !dbg !2781
  %7051 = load i64, i64* %28, align 8, !dbg !2782
  %7052 = load i64, i64* %44, align 8, !dbg !2783
  %_911 = sub i64 %7051, %7052
  %gen912 = mul i64 %_911, %7052
  %_913 = sub i64 0, %7051
  %gen914 = add i64 %_913, %7052
  %_915 = sub i64 %7051, %7052
  %gen916 = mul i64 %_915, %7052
  %_917 = sub i64 %7051, %7052
  %gen918 = mul i64 %_917, %7052
  %_919 = sub i64 %7051, %7052
  %gen920 = mul i64 %_919, %7052
  %_921 = sub i64 0, %7051
  %gen922 = add i64 %_921, %7052
  %_923 = shl i64 %7051, %7052
  %7053 = add i64 %7051, %7052, !dbg !2784
  %7054 = getelementptr inbounds i8, i8* %7050, i64 %7053, !dbg !2781
  %7055 = load i64, i64* %22, align 8, !dbg !2785
  %7056 = load i64, i64* %28, align 8, !dbg !2786
  %7057 = load i64, i64* %44, align 8, !dbg !2787
  %_924 = sub i64 0, %7056
  %gen925 = add i64 %_924, %7057
  %_926 = sub i64 %7056, %7057
  %gen927 = mul i64 %_926, %7057
  %_928 = sub i64 %7056, %7057
  %gen929 = mul i64 %_928, %7057
  %_930 = sub i64 %7056, %7057
  %gen931 = mul i64 %_930, %7057
  %_932 = sub i64 0, %7056
  %gen933 = add i64 %_932, %7057
  %_934 = sub i64 %7056, %7057
  %gen935 = mul i64 %_934, %7057
  %_936 = shl i64 %7056, %7057
  %_937 = sub i64 %7056, %7057
  %gen938 = mul i64 %_937, %7057
  %7058 = add i64 %7056, %7057, !dbg !2788
  %_939 = shl i64 %7055, %7058
  %_940 = sub i64 %7055, %7058
  %gen941 = mul i64 %_940, %7058
  %7059 = sub i64 %7055, %7058, !dbg !2789
  %7060 = call i64 @rpl_mbrtowc(i32* %47, i8* %7054, i64 %7059, %struct.__mbstate_t* %46), !dbg !2790
  store i64 %7060, i64* %48, align 8, !dbg !2780
  %7061 = load i64, i64* %48, align 8, !dbg !2791
  %7062 = icmp eq i64 %7061, 0, !dbg !2793
  br label %originalBB910

originalBB945alteredBB:                           ; preds = %originalBB945, %3477
  br label %originalBB945

originalBB949alteredBB:                           ; preds = %originalBB949, %3494
  %7063 = load i64, i64* %48, align 8, !dbg !2796
  %7064 = icmp eq i64 %7063, -1, !dbg !2798
  br label %originalBB949

originalBB953alteredBB:                           ; preds = %originalBB953, %3513
  store i8 0, i8* %45, align 1, !dbg !2800
  br label %originalBB953

originalBB957alteredBB:                           ; preds = %originalBB957, %3530
  %7065 = load i64, i64* %48, align 8, !dbg !2803
  %7066 = icmp eq i64 %7065, -2, !dbg !2805
  br label %originalBB957

originalBB961alteredBB:                           ; preds = %originalBB961, %3550
  %7067 = load i64, i64* %28, align 8, !dbg !2810
  %7068 = load i64, i64* %44, align 8, !dbg !2811
  %_962 = sub i64 %7067, %7068
  %gen963 = mul i64 %_962, %7068
  %_964 = sub i64 %7067, %7068
  %gen965 = mul i64 %_964, %7068
  %_966 = sub i64 %7067, %7068
  %gen967 = mul i64 %_966, %7068
  %_968 = sub i64 0, %7067
  %gen969 = add i64 %_968, %7068
  %7069 = add i64 %7067, %7068, !dbg !2812
  %7070 = load i64, i64* %22, align 8, !dbg !2813
  %7071 = icmp ult i64 %7069, %7070, !dbg !2814
  br label %originalBB961

originalBB973alteredBB:                           ; preds = %originalBB973, %3572
  %7072 = load i8*, i8** %21, align 8, !dbg !2816
  %7073 = load i64, i64* %28, align 8, !dbg !2817
  %7074 = load i64, i64* %44, align 8, !dbg !2818
  %_974 = shl i64 %7073, %7074
  %_975 = sub i64 0, %7073
  %gen976 = add i64 %_975, %7074
  %7075 = add i64 %7073, %7074, !dbg !2819
  %7076 = getelementptr inbounds i8, i8* %7072, i64 %7075, !dbg !2816
  %7077 = load i8, i8* %7076, align 1, !dbg !2816
  %7078 = sext i8 %7077 to i32, !dbg !2816
  %7079 = icmp ne i32 %7078, 0, !dbg !2815
  br label %originalBB973

originalBB980alteredBB:                           ; preds = %originalBB980, %3597
  br label %originalBB980

originalBB984alteredBB:                           ; preds = %originalBB984, %3615
  %7080 = load i64, i64* %44, align 8, !dbg !2821
  %_985 = sub i64 %7080, 1
  %gen986 = mul i64 %_985, 1
  %_987 = sub i64 0, %7080
  %gen988 = add i64 %_987, 1
  %_989 = shl i64 %7080, 1
  %_990 = sub i64 0, %7080
  %gen991 = add i64 %_990, 1
  %_992 = sub i64 %7080, 1
  %gen993 = mul i64 %_992, 1
  %_994 = shl i64 %7080, 1
  %7081 = add i64 %7080, 1, !dbg !2821
  store i64 %7081, i64* %44, align 8, !dbg !2821
  br label %originalBB984

originalBB998alteredBB:                           ; preds = %originalBB998, %3634
  br label %originalBB998

originalBB1002alteredBB:                          ; preds = %originalBB1002, %3651
  %7082 = load i8, i8* %35, align 1, !dbg !2824
  %7083 = trunc i8 %7082 to i1, !dbg !2824
  br label %originalBB1002

originalBB1006alteredBB:                          ; preds = %originalBB1006, %3670
  %7084 = load i32, i32* %23, align 4, !dbg !2828
  %7085 = icmp eq i32 %7084, 2, !dbg !2829
  br label %originalBB1006

originalBB1010alteredBB:                          ; preds = %originalBB1010, %3689
  store i64 1, i64* %49, align 8, !dbg !2834
  br label %originalBB1010

originalBB1014alteredBB:                          ; preds = %originalBB1014, %3706
  %7086 = load i64, i64* %49, align 8, !dbg !2837
  %7087 = load i64, i64* %48, align 8, !dbg !2839
  %7088 = icmp ult i64 %7086, %7087, !dbg !2840
  br label %originalBB1014

originalBB1018alteredBB:                          ; preds = %originalBB1018, %3726
  %7089 = load i8*, i8** %21, align 8, !dbg !2842
  %7090 = load i64, i64* %28, align 8, !dbg !2843
  %7091 = load i64, i64* %44, align 8, !dbg !2844
  %_1019 = sub i64 0, %7090
  %gen1020 = add i64 %_1019, %7091
  %_1021 = sub i64 %7090, %7091
  %gen1022 = mul i64 %_1021, %7091
  %_1023 = shl i64 %7090, %7091
  %_1024 = sub i64 0, %7090
  %gen1025 = add i64 %_1024, %7091
  %_1026 = sub i64 0, %7090
  %gen1027 = add i64 %_1026, %7091
  %_1028 = shl i64 %7090, %7091
  %7092 = add i64 %7090, %7091, !dbg !2845
  %7093 = load i64, i64* %49, align 8, !dbg !2846
  %_1029 = shl i64 %7092, %7093
  %_1030 = shl i64 %7092, %7093
  %_1031 = shl i64 %7092, %7093
  %_1032 = sub i64 %7092, %7093
  %gen1033 = mul i64 %_1032, %7093
  %_1034 = sub i64 0, %7092
  %gen1035 = add i64 %_1034, %7093
  %_1036 = sub i64 %7092, %7093
  %gen1037 = mul i64 %_1036, %7093
  %_1038 = shl i64 %7092, %7093
  %7094 = add i64 %7092, %7093, !dbg !2847
  %7095 = getelementptr inbounds i8, i8* %7089, i64 %7094, !dbg !2842
  %7096 = load i8, i8* %7095, align 1, !dbg !2842
  %7097 = sext i8 %7096 to i32, !dbg !2842
  br label %originalBB1018

originalBB1042alteredBB:                          ; preds = %originalBB1042, %3752
  br label %originalBB1042

originalBB1046alteredBB:                          ; preds = %originalBB1046, %3769
  br label %originalBB1046

originalBB1050alteredBB:                          ; preds = %originalBB1050, %3786
  br label %originalBB1050

originalBB1054alteredBB:                          ; preds = %originalBB1054, %3803
  %7098 = load i64, i64* %49, align 8, !dbg !2853
  %_1055 = sub i64 %7098, 1
  %gen1056 = mul i64 %_1055, 1
  %_1057 = sub i64 %7098, 1
  %gen1058 = mul i64 %_1057, 1
  %_1059 = shl i64 %7098, 1
  %_1060 = sub i64 %7098, 1
  %gen1061 = mul i64 %_1060, 1
  %7099 = add i64 %7098, 1, !dbg !2853
  store i64 %7099, i64* %49, align 8, !dbg !2853
  br label %originalBB1054

originalBB1065alteredBB:                          ; preds = %originalBB1065, %3822
  br label %originalBB1065

originalBB1069alteredBB:                          ; preds = %originalBB1069, %3839
  %7100 = load i32, i32* %47, align 4, !dbg !2858
  %7101 = call i32 @iswprint(i32 %7100) #10, !dbg !2860
  %7102 = icmp ne i32 %7101, 0, !dbg !2860
  br label %originalBB1069

originalBB1073alteredBB:                          ; preds = %originalBB1073, %3859
  store i8 0, i8* %45, align 1, !dbg !2862
  br label %originalBB1073

originalBB1077alteredBB:                          ; preds = %originalBB1077, %3876
  %7103 = load i64, i64* %48, align 8, !dbg !2864
  %7104 = load i64, i64* %44, align 8, !dbg !2865
  %_1078 = sub i64 0, %7104
  %gen1079 = add i64 %_1078, %7103
  %_1080 = sub i64 %7104, %7103
  %gen1081 = mul i64 %_1080, %7103
  %_1082 = sub i64 0, %7104
  %gen1083 = add i64 %_1082, %7103
  %7105 = add i64 %7104, %7103, !dbg !2865
  store i64 %7105, i64* %44, align 8, !dbg !2865
  br label %originalBB1077

originalBB1087alteredBB:                          ; preds = %originalBB1087, %3896
  br label %originalBB1087

originalBB1091alteredBB:                          ; preds = %originalBB1091, %3913
  br label %originalBB1091

originalBB1095alteredBB:                          ; preds = %originalBB1095, %3930
  br label %originalBB1095

originalBB1099alteredBB:                          ; preds = %originalBB1099, %3947
  %7106 = call i32 @mbsinit(%struct.__mbstate_t* %46) #13, !dbg !2867
  %7107 = icmp ne i32 %7106, 0, !dbg !2868
  %_1100 = sub i1 %7107, true
  %gen1101 = mul i1 %_1100, true
  %7108 = xor i1 %7107, true, !dbg !2868
  br label %originalBB1099

originalBB1105alteredBB:                          ; preds = %originalBB1105, %3967
  br label %originalBB1105

originalBB1109alteredBB:                          ; preds = %originalBB1109, %3984
  %7109 = load i8, i8* %45, align 1, !dbg !2871
  %7110 = trunc i8 %7109 to i1, !dbg !2871
  %7111 = zext i1 %7110 to i8, !dbg !2872
  store i8 %7111, i8* %43, align 1, !dbg !2872
  %7112 = load i64, i64* %44, align 8, !dbg !2873
  %7113 = icmp ult i64 1, %7112, !dbg !2875
  br label %originalBB1109

originalBB1113alteredBB:                          ; preds = %originalBB1113, %4006
  %7114 = load i8, i8* %33, align 1, !dbg !2877
  %7115 = trunc i8 %7114 to i1, !dbg !2877
  br label %originalBB1113

originalBB1117alteredBB:                          ; preds = %originalBB1117, %4025
  %7116 = load i8, i8* %45, align 1, !dbg !2879
  %7117 = trunc i8 %7116 to i1, !dbg !2879
  br label %originalBB1117

originalBB1121alteredBB:                          ; preds = %originalBB1121, %4044
  %7118 = load i64, i64* %28, align 8, !dbg !2884
  %7119 = load i64, i64* %44, align 8, !dbg !2885
  %_1122 = sub i64 %7118, %7119
  %gen1123 = mul i64 %_1122, %7119
  %_1124 = sub i64 %7118, %7119
  %gen1125 = mul i64 %_1124, %7119
  %_1126 = sub i64 %7118, %7119
  %gen1127 = mul i64 %_1126, %7119
  %_1128 = sub i64 %7118, %7119
  %gen1129 = mul i64 %_1128, %7119
  %7120 = add i64 %7118, %7119, !dbg !2886
  store i64 %7120, i64* %50, align 8, !dbg !2883
  br label %originalBB1121

originalBB1133alteredBB:                          ; preds = %originalBB1133, %4067
  %7121 = load i8, i8* %45, align 1, !dbg !2894
  %7122 = trunc i8 %7121 to i1, !dbg !2894
  br label %originalBB1133

originalBB1137alteredBB:                          ; preds = %originalBB1137, %4086
  br label %originalBB1137

originalBB1141alteredBB:                          ; preds = %originalBB1141, %4103
  %7123 = load i8, i8* %35, align 1, !dbg !2898
  %7124 = trunc i8 %7123 to i1, !dbg !2898
  br label %originalBB1141

originalBB1145alteredBB:                          ; preds = %originalBB1145, %4122
  br label %originalBB1145

originalBB1149alteredBB:                          ; preds = %originalBB1149, %4139
  store i8 1, i8* %42, align 1, !dbg !2901
  %7125 = load i32, i32* %23, align 4, !dbg !2902
  %7126 = icmp eq i32 %7125, 2, !dbg !2902
  br label %originalBB1149

originalBB1153alteredBB:                          ; preds = %originalBB1153, %4158
  %7127 = load i8, i8* %36, align 1, !dbg !2902
  %7128 = trunc i8 %7127 to i1, !dbg !2902
  br label %originalBB1153

originalBB1157alteredBB:                          ; preds = %originalBB1157, %4177
  br label %originalBB1157

originalBB1161alteredBB:                          ; preds = %originalBB1161, %4198
  %7129 = load i8*, i8** %19, align 8, !dbg !2906
  %7130 = load i64, i64* %29, align 8, !dbg !2906
  %7131 = getelementptr inbounds i8, i8* %7129, i64 %7130, !dbg !2906
  store i8 39, i8* %7131, align 1, !dbg !2906
  br label %originalBB1161

originalBB1165alteredBB:                          ; preds = %originalBB1165, %4218
  %7132 = load i64, i64* %29, align 8, !dbg !2909
  %_1166 = sub i64 0, %7132
  %gen1167 = add i64 %_1166, 1
  %_1168 = sub i64 0, %7132
  %gen1169 = add i64 %_1168, 1
  %_1170 = shl i64 %7132, 1
  %_1171 = sub i64 0, %7132
  %gen1172 = add i64 %_1171, 1
  %_1173 = shl i64 %7132, 1
  %_1174 = sub i64 0, %7132
  %gen1175 = add i64 %_1174, 1
  %_1176 = shl i64 %7132, 1
  %7133 = add i64 %7132, 1, !dbg !2909
  store i64 %7133, i64* %29, align 8, !dbg !2909
  br label %originalBB1165

originalBB1180alteredBB:                          ; preds = %originalBB1180, %4237
  br label %originalBB1180

originalBB1184alteredBB:                          ; preds = %originalBB1184, %4258
  %7134 = load i8*, i8** %19, align 8, !dbg !2910
  %7135 = load i64, i64* %29, align 8, !dbg !2910
  %7136 = getelementptr inbounds i8, i8* %7134, i64 %7135, !dbg !2910
  store i8 36, i8* %7136, align 1, !dbg !2910
  br label %originalBB1184

originalBB1188alteredBB:                          ; preds = %originalBB1188, %4278
  %7137 = load i64, i64* %29, align 8, !dbg !2913
  %_1189 = sub i64 %7137, 1
  %gen1190 = mul i64 %_1189, 1
  %_1191 = sub i64 0, %7137
  %gen1192 = add i64 %_1191, 1
  %_1193 = sub i64 %7137, 1
  %gen1194 = mul i64 %_1193, 1
  %_1195 = shl i64 %7137, 1
  %_1196 = sub i64 %7137, 1
  %gen1197 = mul i64 %_1196, 1
  %_1198 = sub i64 %7137, 1
  %gen1199 = mul i64 %_1198, 1
  %_1200 = sub i64 %7137, 1
  %gen1201 = mul i64 %_1200, 1
  %7138 = add i64 %7137, 1, !dbg !2913
  store i64 %7138, i64* %29, align 8, !dbg !2913
  br label %originalBB1188

originalBB1205alteredBB:                          ; preds = %originalBB1205, %4297
  br label %originalBB1205

originalBB1209alteredBB:                          ; preds = %originalBB1209, %4314
  %7139 = load i64, i64* %29, align 8, !dbg !2914
  %7140 = load i64, i64* %20, align 8, !dbg !2914
  %7141 = icmp ult i64 %7139, %7140, !dbg !2914
  br label %originalBB1209

originalBB1213alteredBB:                          ; preds = %originalBB1213, %4334
  %7142 = load i8*, i8** %19, align 8, !dbg !2914
  %7143 = load i64, i64* %29, align 8, !dbg !2914
  %7144 = getelementptr inbounds i8, i8* %7142, i64 %7143, !dbg !2914
  store i8 39, i8* %7144, align 1, !dbg !2914
  br label %originalBB1213

originalBB1217alteredBB:                          ; preds = %originalBB1217, %4354
  %7145 = load i64, i64* %29, align 8, !dbg !2917
  %_1218 = sub i64 0, %7145
  %gen1219 = add i64 %_1218, 1
  %_1220 = shl i64 %7145, 1
  %_1221 = sub i64 0, %7145
  %gen1222 = add i64 %_1221, 1
  %_1223 = shl i64 %7145, 1
  %7146 = add i64 %7145, 1, !dbg !2917
  store i64 %7146, i64* %29, align 8, !dbg !2917
  br label %originalBB1217

originalBB1227alteredBB:                          ; preds = %originalBB1227, %4373
  store i8 1, i8* %36, align 1, !dbg !2904
  br label %originalBB1227

originalBB1231alteredBB:                          ; preds = %originalBB1231, %4391
  %7147 = load i64, i64* %29, align 8, !dbg !2918
  %7148 = load i64, i64* %20, align 8, !dbg !2918
  %7149 = icmp ult i64 %7147, %7148, !dbg !2918
  br label %originalBB1231

originalBB1235alteredBB:                          ; preds = %originalBB1235, %4411
  %7150 = load i8*, i8** %19, align 8, !dbg !2918
  %7151 = load i64, i64* %29, align 8, !dbg !2918
  %7152 = getelementptr inbounds i8, i8* %7150, i64 %7151, !dbg !2918
  store i8 92, i8* %7152, align 1, !dbg !2918
  br label %originalBB1235

originalBB1239alteredBB:                          ; preds = %originalBB1239, %4431
  %7153 = load i64, i64* %29, align 8, !dbg !2921
  %_1240 = sub i64 %7153, 1
  %gen1241 = mul i64 %_1240, 1
  %_1242 = sub i64 %7153, 1
  %gen1243 = mul i64 %_1242, 1
  %_1244 = sub i64 0, %7153
  %gen1245 = add i64 %_1244, 1
  %7154 = add i64 %7153, 1, !dbg !2921
  store i64 %7154, i64* %29, align 8, !dbg !2921
  br label %originalBB1239

originalBB1249alteredBB:                          ; preds = %originalBB1249, %4450
  br label %originalBB1249

originalBB1253alteredBB:                          ; preds = %originalBB1253, %4467
  br label %originalBB1253

originalBB1257alteredBB:                          ; preds = %originalBB1257, %4484
  %7155 = load i64, i64* %29, align 8, !dbg !2923
  %7156 = load i64, i64* %20, align 8, !dbg !2923
  %7157 = icmp ult i64 %7155, %7156, !dbg !2923
  br label %originalBB1257

originalBB1261alteredBB:                          ; preds = %originalBB1261, %4504
  %7158 = load i8, i8* %39, align 1, !dbg !2923
  %7159 = zext i8 %7158 to i32, !dbg !2923
  %_1262 = sub i32 0, %7159
  %gen1263 = add i32 %_1262, 6
  %_1264 = shl i32 %7159, 6
  %_1265 = sub i32 %7159, 6
  %gen1266 = mul i32 %_1265, 6
  %_1267 = sub i32 0, %7159
  %gen1268 = add i32 %_1267, 6
  %7160 = ashr i32 %7159, 6, !dbg !2923
  %_1269 = shl i32 48, %7160
  %_1270 = sub i32 48, %7160
  %gen1271 = mul i32 %_1270, %7160
  %_1272 = shl i32 48, %7160
  %7161 = add nsw i32 48, %7160, !dbg !2923
  %7162 = trunc i32 %7161 to i8, !dbg !2923
  %7163 = load i8*, i8** %19, align 8, !dbg !2923
  %7164 = load i64, i64* %29, align 8, !dbg !2923
  %7165 = getelementptr inbounds i8, i8* %7163, i64 %7164, !dbg !2923
  store i8 %7162, i8* %7165, align 1, !dbg !2923
  br label %originalBB1261

originalBB1276alteredBB:                          ; preds = %originalBB1276, %4529
  %7166 = load i64, i64* %29, align 8, !dbg !2926
  %_1277 = sub i64 0, %7166
  %gen1278 = add i64 %_1277, 1
  %_1279 = shl i64 %7166, 1
  %_1280 = shl i64 %7166, 1
  %_1281 = shl i64 %7166, 1
  %_1282 = shl i64 %7166, 1
  %_1283 = sub i64 0, %7166
  %gen1284 = add i64 %_1283, 1
  %_1285 = sub i64 %7166, 1
  %gen1286 = mul i64 %_1285, 1
  %_1287 = shl i64 %7166, 1
  %7167 = add i64 %7166, 1, !dbg !2926
  store i64 %7167, i64* %29, align 8, !dbg !2926
  br label %originalBB1276

originalBB1291alteredBB:                          ; preds = %originalBB1291, %4548
  br label %originalBB1291

originalBB1295alteredBB:                          ; preds = %originalBB1295, %4565
  %7168 = load i64, i64* %29, align 8, !dbg !2928
  %7169 = load i64, i64* %20, align 8, !dbg !2928
  %7170 = icmp ult i64 %7168, %7169, !dbg !2928
  br label %originalBB1295

originalBB1299alteredBB:                          ; preds = %originalBB1299, %4585
  %7171 = load i8, i8* %39, align 1, !dbg !2928
  %7172 = zext i8 %7171 to i32, !dbg !2928
  %_1300 = sub i32 %7172, 3
  %gen1301 = mul i32 %_1300, 3
  %_1302 = shl i32 %7172, 3
  %_1303 = shl i32 %7172, 3
  %7173 = ashr i32 %7172, 3, !dbg !2928
  %_1304 = sub i32 %7173, 7
  %gen1305 = mul i32 %_1304, 7
  %_1306 = sub i32 %7173, 7
  %gen1307 = mul i32 %_1306, 7
  %_1308 = shl i32 %7173, 7
  %_1309 = shl i32 %7173, 7
  %_1310 = sub i32 %7173, 7
  %gen1311 = mul i32 %_1310, 7
  %7174 = and i32 %7173, 7, !dbg !2928
  %_1312 = sub i32 0, 48
  %gen1313 = add i32 %_1312, %7174
  %7175 = add nsw i32 48, %7174, !dbg !2928
  %7176 = trunc i32 %7175 to i8, !dbg !2928
  %7177 = load i8*, i8** %19, align 8, !dbg !2928
  %7178 = load i64, i64* %29, align 8, !dbg !2928
  %7179 = getelementptr inbounds i8, i8* %7177, i64 %7178, !dbg !2928
  store i8 %7176, i8* %7179, align 1, !dbg !2928
  br label %originalBB1299

originalBB1317alteredBB:                          ; preds = %originalBB1317, %4611
  %7180 = load i64, i64* %29, align 8, !dbg !2931
  %_1318 = sub i64 %7180, 1
  %gen1319 = mul i64 %_1318, 1
  %_1320 = shl i64 %7180, 1
  %_1321 = shl i64 %7180, 1
  %_1322 = shl i64 %7180, 1
  %_1323 = sub i64 %7180, 1
  %gen1324 = mul i64 %_1323, 1
  %_1325 = sub i64 %7180, 1
  %gen1326 = mul i64 %_1325, 1
  %7181 = add i64 %7180, 1, !dbg !2931
  store i64 %7181, i64* %29, align 8, !dbg !2931
  br label %originalBB1317

originalBB1330alteredBB:                          ; preds = %originalBB1330, %4630
  %7182 = load i8, i8* %39, align 1, !dbg !2932
  %7183 = zext i8 %7182 to i32, !dbg !2932
  %_1331 = shl i32 %7183, 7
  %_1332 = sub i32 0, %7183
  %gen1333 = add i32 %_1332, 7
  %_1334 = sub i32 0, %7183
  %gen1335 = add i32 %_1334, 7
  %_1336 = sub i32 0, %7183
  %gen1337 = add i32 %_1336, 7
  %_1338 = sub i32 %7183, 7
  %gen1339 = mul i32 %_1338, 7
  %_1340 = sub i32 %7183, 7
  %gen1341 = mul i32 %_1340, 7
  %_1342 = shl i32 %7183, 7
  %7184 = and i32 %7183, 7, !dbg !2933
  %_1343 = shl i32 48, %7184
  %_1344 = shl i32 48, %7184
  %7185 = add nsw i32 48, %7184, !dbg !2934
  %7186 = trunc i32 %7185 to i8, !dbg !2935
  store i8 %7186, i8* %39, align 1, !dbg !2936
  br label %originalBB1330

originalBB1348alteredBB:                          ; preds = %originalBB1348, %4652
  %7187 = load i8, i8* %41, align 1, !dbg !2938
  %7188 = trunc i8 %7187 to i1, !dbg !2938
  br label %originalBB1348

originalBB1352alteredBB:                          ; preds = %originalBB1352, %4672
  %7189 = load i64, i64* %29, align 8, !dbg !2943
  %7190 = load i64, i64* %20, align 8, !dbg !2943
  %7191 = icmp ult i64 %7189, %7190, !dbg !2943
  br label %originalBB1352

originalBB1356alteredBB:                          ; preds = %originalBB1356, %4692
  %7192 = load i8*, i8** %19, align 8, !dbg !2943
  %7193 = load i64, i64* %29, align 8, !dbg !2943
  %7194 = getelementptr inbounds i8, i8* %7192, i64 %7193, !dbg !2943
  store i8 92, i8* %7194, align 1, !dbg !2943
  br label %originalBB1356

originalBB1360alteredBB:                          ; preds = %originalBB1360, %4712
  %7195 = load i64, i64* %29, align 8, !dbg !2946
  %_1361 = sub i64 0, %7195
  %gen1362 = add i64 %_1361, 1
  %7196 = add i64 %7195, 1, !dbg !2946
  store i64 %7196, i64* %29, align 8, !dbg !2946
  br label %originalBB1360

originalBB1366alteredBB:                          ; preds = %originalBB1366, %4731
  store i8 0, i8* %41, align 1, !dbg !2947
  br label %originalBB1366

originalBB1370alteredBB:                          ; preds = %originalBB1370, %4748
  br label %originalBB1370

originalBB1374alteredBB:                          ; preds = %originalBB1374, %4765
  %7197 = load i64, i64* %50, align 8, !dbg !2949
  %7198 = load i64, i64* %28, align 8, !dbg !2951
  %_1375 = shl i64 %7198, 1
  %_1376 = sub i64 %7198, 1
  %gen1377 = mul i64 %_1376, 1
  %_1378 = shl i64 %7198, 1
  %_1379 = sub i64 %7198, 1
  %gen1380 = mul i64 %_1379, 1
  %_1381 = sub i64 %7198, 1
  %gen1382 = mul i64 %_1381, 1
  %_1383 = sub i64 0, %7198
  %gen1384 = add i64 %_1383, 1
  %_1385 = shl i64 %7198, 1
  %_1386 = sub i64 0, %7198
  %gen1387 = add i64 %_1386, 1
  %_1388 = shl i64 %7198, 1
  %7199 = add i64 %7198, 1, !dbg !2952
  %7200 = icmp ule i64 %7197, %7199, !dbg !2953
  br label %originalBB1374

originalBB1392alteredBB:                          ; preds = %originalBB1392, %4786
  br label %originalBB1392

originalBB1396alteredBB:                          ; preds = %originalBB1396, %4803
  br label %originalBB1396

originalBB1400alteredBB:                          ; preds = %originalBB1400, %4820
  %7201 = load i8, i8* %36, align 1, !dbg !2957
  %7202 = trunc i8 %7201 to i1, !dbg !2957
  br label %originalBB1400

originalBB1404alteredBB:                          ; preds = %originalBB1404, %4839
  %7203 = load i8, i8* %42, align 1, !dbg !2957
  %7204 = trunc i8 %7203 to i1, !dbg !2957
  br label %originalBB1404

originalBB1408alteredBB:                          ; preds = %originalBB1408, %4858
  br label %originalBB1408

originalBB1412alteredBB:                          ; preds = %originalBB1412, %4875
  %7205 = load i64, i64* %29, align 8, !dbg !2963
  %7206 = load i64, i64* %20, align 8, !dbg !2963
  %7207 = icmp ult i64 %7205, %7206, !dbg !2963
  br label %originalBB1412

originalBB1416alteredBB:                          ; preds = %originalBB1416, %4895
  %7208 = load i8*, i8** %19, align 8, !dbg !2963
  %7209 = load i64, i64* %29, align 8, !dbg !2963
  %7210 = getelementptr inbounds i8, i8* %7208, i64 %7209, !dbg !2963
  store i8 39, i8* %7210, align 1, !dbg !2963
  br label %originalBB1416

originalBB1420alteredBB:                          ; preds = %originalBB1420, %4915
  %7211 = load i64, i64* %29, align 8, !dbg !2966
  %_1421 = shl i64 %7211, 1
  %_1422 = shl i64 %7211, 1
  %_1423 = shl i64 %7211, 1
  %_1424 = sub i64 0, %7211
  %gen1425 = add i64 %_1424, 1
  %_1426 = shl i64 %7211, 1
  %7212 = add i64 %7211, 1, !dbg !2966
  store i64 %7212, i64* %29, align 8, !dbg !2966
  br label %originalBB1420

originalBB1430alteredBB:                          ; preds = %originalBB1430, %4934
  br label %originalBB1430

originalBB1434alteredBB:                          ; preds = %originalBB1434, %4951
  %7213 = load i64, i64* %29, align 8, !dbg !2967
  %7214 = load i64, i64* %20, align 8, !dbg !2967
  %7215 = icmp ult i64 %7213, %7214, !dbg !2967
  br label %originalBB1434

originalBB1438alteredBB:                          ; preds = %originalBB1438, %4971
  %7216 = load i8*, i8** %19, align 8, !dbg !2967
  %7217 = load i64, i64* %29, align 8, !dbg !2967
  %7218 = getelementptr inbounds i8, i8* %7216, i64 %7217, !dbg !2967
  store i8 39, i8* %7218, align 1, !dbg !2967
  br label %originalBB1438

originalBB1442alteredBB:                          ; preds = %originalBB1442, %4991
  %7219 = load i64, i64* %29, align 8, !dbg !2970
  %_1443 = shl i64 %7219, 1
  %7220 = add i64 %7219, 1, !dbg !2970
  store i64 %7220, i64* %29, align 8, !dbg !2970
  br label %originalBB1442

originalBB1447alteredBB:                          ; preds = %originalBB1447, %5010
  store i8 0, i8* %36, align 1, !dbg !2961
  br label %originalBB1447

originalBB1451alteredBB:                          ; preds = %originalBB1451, %5028
  br label %originalBB1451

originalBB1455alteredBB:                          ; preds = %originalBB1455, %5045
  %7221 = load i64, i64* %29, align 8, !dbg !2972
  %7222 = load i64, i64* %20, align 8, !dbg !2972
  %7223 = icmp ult i64 %7221, %7222, !dbg !2972
  br label %originalBB1455

originalBB1459alteredBB:                          ; preds = %originalBB1459, %5065
  %7224 = load i8, i8* %39, align 1, !dbg !2972
  %7225 = load i8*, i8** %19, align 8, !dbg !2972
  %7226 = load i64, i64* %29, align 8, !dbg !2972
  %7227 = getelementptr inbounds i8, i8* %7225, i64 %7226, !dbg !2972
  store i8 %7224, i8* %7227, align 1, !dbg !2972
  br label %originalBB1459

originalBB1463alteredBB:                          ; preds = %originalBB1463, %5086
  %7228 = load i64, i64* %29, align 8, !dbg !2975
  %_1464 = shl i64 %7228, 1
  %7229 = add i64 %7228, 1, !dbg !2975
  store i64 %7229, i64* %29, align 8, !dbg !2975
  br label %originalBB1463

originalBB1468alteredBB:                          ; preds = %originalBB1468, %5105
  %7230 = load i8*, i8** %21, align 8, !dbg !2976
  %7231 = load i64, i64* %28, align 8, !dbg !2977
  %_1469 = shl i64 %7231, 1
  %_1470 = sub i64 %7231, 1
  %gen1471 = mul i64 %_1470, 1
  %_1472 = sub i64 0, %7231
  %gen1473 = add i64 %_1472, 1
  %_1474 = sub i64 %7231, 1
  %gen1475 = mul i64 %_1474, 1
  %7232 = add i64 %7231, 1, !dbg !2977
  store i64 %7232, i64* %28, align 8, !dbg !2977
  %7233 = getelementptr inbounds i8, i8* %7230, i64 %7232, !dbg !2976
  %7234 = load i8, i8* %7233, align 1, !dbg !2976
  store i8 %7234, i8* %39, align 1, !dbg !2978
  br label %originalBB1468

originalBB1479alteredBB:                          ; preds = %originalBB1479, %5127
  br label %originalBB1479

originalBB1483alteredBB:                          ; preds = %originalBB1483, %5144
  br label %originalBB1483

originalBB1487alteredBB:                          ; preds = %originalBB1487, %5161
  %7235 = load i8, i8* %33, align 1, !dbg !2985
  %7236 = trunc i8 %7235 to i1, !dbg !2985
  br label %originalBB1487

originalBB1491alteredBB:                          ; preds = %originalBB1491, %5180
  %7237 = load i32, i32* %23, align 4, !dbg !2988
  %7238 = icmp ne i32 %7237, 2, !dbg !2989
  br label %originalBB1491

originalBB1495alteredBB:                          ; preds = %originalBB1495, %5199
  %7239 = load i8, i8* %35, align 1, !dbg !2991
  %7240 = trunc i8 %7239 to i1, !dbg !2991
  br label %originalBB1495

originalBB1499alteredBB:                          ; preds = %originalBB1499, %5218
  %7241 = load i32*, i32** %25, align 8, !dbg !2993
  %7242 = icmp ne i32* %7241, null, !dbg !2993
  br label %originalBB1499

originalBB1503alteredBB:                          ; preds = %originalBB1503, %5237
  %7243 = load i32*, i32** %25, align 8, !dbg !2995
  %7244 = load i8, i8* %39, align 1, !dbg !2996
  %7245 = zext i8 %7244 to i64, !dbg !2996
  %_1504 = sub i64 %7245, 32
  %gen1505 = mul i64 %_1504, 32
  %_1506 = sub i64 %7245, 32
  %gen1507 = mul i64 %_1506, 32
  %_1508 = shl i64 %7245, 32
  %_1509 = shl i64 %7245, 32
  %_1510 = sub i64 0, %7245
  %gen1511 = add i64 %_1510, 32
  %_1512 = sub i64 %7245, 32
  %gen1513 = mul i64 %_1512, 32
  %_1514 = sub i64 %7245, 32
  %gen1515 = mul i64 %_1514, 32
  %_1516 = sub i64 0, %7245
  %gen1517 = add i64 %_1516, 32
  %7246 = udiv i64 %7245, 32, !dbg !2997
  %7247 = getelementptr inbounds i32, i32* %7243, i64 %7246, !dbg !2995
  %7248 = load i32, i32* %7247, align 4, !dbg !2995
  %7249 = load i8, i8* %39, align 1, !dbg !2998
  %7250 = zext i8 %7249 to i64, !dbg !2998
  %_1518 = sub i64 0, %7250
  %gen1519 = add i64 %_1518, 32
  %_1520 = sub i64 0, %7250
  %gen1521 = add i64 %_1520, 32
  %7251 = urem i64 %7250, 32, !dbg !2999
  %7252 = trunc i64 %7251 to i32, !dbg !3000
  %_1522 = shl i32 %7248, %7252
  %7253 = lshr i32 %7248, %7252, !dbg !3000
  %_1523 = shl i32 %7253, 1
  %_1524 = shl i32 %7253, 1
  %7254 = and i32 %7253, 1, !dbg !3001
  %7255 = icmp ne i32 %7254, 0, !dbg !3001
  br label %originalBB1503

originalBB1528alteredBB:                          ; preds = %originalBB1528, %5267
  %7256 = load i8, i8* %41, align 1, !dbg !3003
  %7257 = trunc i8 %7256 to i1, !dbg !3003
  br label %originalBB1528

originalBB1532alteredBB:                          ; preds = %originalBB1532, %5286
  br label %originalBB1532

originalBB1536alteredBB:                          ; preds = %originalBB1536, %5303
  br label %originalBB1536

originalBB1540alteredBB:                          ; preds = %originalBB1540, %5320
  br label %originalBB1540

originalBB1544alteredBB:                          ; preds = %originalBB1544, %5337
  %7258 = load i8, i8* %35, align 1, !dbg !3009
  %7259 = trunc i8 %7258 to i1, !dbg !3009
  br label %originalBB1544

originalBB1548alteredBB:                          ; preds = %originalBB1548, %5356
  br label %originalBB1548

originalBB1552alteredBB:                          ; preds = %originalBB1552, %5373
  store i8 1, i8* %42, align 1, !dbg !3012
  %7260 = load i32, i32* %23, align 4, !dbg !3013
  %7261 = icmp eq i32 %7260, 2, !dbg !3013
  br label %originalBB1552

originalBB1556alteredBB:                          ; preds = %originalBB1556, %5392
  %7262 = load i8, i8* %36, align 1, !dbg !3013
  %7263 = trunc i8 %7262 to i1, !dbg !3013
  br label %originalBB1556

originalBB1560alteredBB:                          ; preds = %originalBB1560, %5411
  br label %originalBB1560

originalBB1564alteredBB:                          ; preds = %originalBB1564, %5428
  %7264 = load i64, i64* %29, align 8, !dbg !3017
  %7265 = load i64, i64* %20, align 8, !dbg !3017
  %7266 = icmp ult i64 %7264, %7265, !dbg !3017
  br label %originalBB1564

originalBB1568alteredBB:                          ; preds = %originalBB1568, %5448
  %7267 = load i8*, i8** %19, align 8, !dbg !3017
  %7268 = load i64, i64* %29, align 8, !dbg !3017
  %7269 = getelementptr inbounds i8, i8* %7267, i64 %7268, !dbg !3017
  store i8 39, i8* %7269, align 1, !dbg !3017
  br label %originalBB1568

originalBB1572alteredBB:                          ; preds = %originalBB1572, %5468
  %7270 = load i64, i64* %29, align 8, !dbg !3020
  %_1573 = shl i64 %7270, 1
  %_1574 = sub i64 %7270, 1
  %gen1575 = mul i64 %_1574, 1
  %_1576 = sub i64 %7270, 1
  %gen1577 = mul i64 %_1576, 1
  %_1578 = sub i64 %7270, 1
  %gen1579 = mul i64 %_1578, 1
  %_1580 = sub i64 0, %7270
  %gen1581 = add i64 %_1580, 1
  %_1582 = sub i64 0, %7270
  %gen1583 = add i64 %_1582, 1
  %_1584 = sub i64 %7270, 1
  %gen1585 = mul i64 %_1584, 1
  %7271 = add i64 %7270, 1, !dbg !3020
  store i64 %7271, i64* %29, align 8, !dbg !3020
  br label %originalBB1572

originalBB1589alteredBB:                          ; preds = %originalBB1589, %5488
  %7272 = load i64, i64* %29, align 8, !dbg !3021
  %7273 = load i64, i64* %20, align 8, !dbg !3021
  %7274 = icmp ult i64 %7272, %7273, !dbg !3021
  br label %originalBB1589

originalBB1593alteredBB:                          ; preds = %originalBB1593, %5508
  %7275 = load i8*, i8** %19, align 8, !dbg !3021
  %7276 = load i64, i64* %29, align 8, !dbg !3021
  %7277 = getelementptr inbounds i8, i8* %7275, i64 %7276, !dbg !3021
  store i8 36, i8* %7277, align 1, !dbg !3021
  br label %originalBB1593

originalBB1597alteredBB:                          ; preds = %originalBB1597, %5528
  %7278 = load i64, i64* %29, align 8, !dbg !3024
  %_1598 = shl i64 %7278, 1
  %7279 = add i64 %7278, 1, !dbg !3024
  store i64 %7279, i64* %29, align 8, !dbg !3024
  br label %originalBB1597

originalBB1602alteredBB:                          ; preds = %originalBB1602, %5547
  br label %originalBB1602

originalBB1606alteredBB:                          ; preds = %originalBB1606, %5564
  %7280 = load i64, i64* %29, align 8, !dbg !3025
  %7281 = load i64, i64* %20, align 8, !dbg !3025
  %7282 = icmp ult i64 %7280, %7281, !dbg !3025
  br label %originalBB1606

originalBB1610alteredBB:                          ; preds = %originalBB1610, %5584
  %7283 = load i8*, i8** %19, align 8, !dbg !3025
  %7284 = load i64, i64* %29, align 8, !dbg !3025
  %7285 = getelementptr inbounds i8, i8* %7283, i64 %7284, !dbg !3025
  store i8 39, i8* %7285, align 1, !dbg !3025
  br label %originalBB1610

originalBB1614alteredBB:                          ; preds = %originalBB1614, %5604
  %7286 = load i64, i64* %29, align 8, !dbg !3028
  %_1615 = sub i64 0, %7286
  %gen1616 = add i64 %_1615, 1
  %_1617 = sub i64 %7286, 1
  %gen1618 = mul i64 %_1617, 1
  %_1619 = shl i64 %7286, 1
  %_1620 = shl i64 %7286, 1
  %_1621 = shl i64 %7286, 1
  %_1622 = sub i64 %7286, 1
  %gen1623 = mul i64 %_1622, 1
  %_1624 = sub i64 %7286, 1
  %gen1625 = mul i64 %_1624, 1
  %7287 = add i64 %7286, 1, !dbg !3028
  store i64 %7287, i64* %29, align 8, !dbg !3028
  br label %originalBB1614

originalBB1629alteredBB:                          ; preds = %originalBB1629, %5623
  store i8 1, i8* %36, align 1, !dbg !3015
  br label %originalBB1629

originalBB1633alteredBB:                          ; preds = %originalBB1633, %5640
  br label %originalBB1633

originalBB1637alteredBB:                          ; preds = %originalBB1637, %5657
  %7288 = load i64, i64* %29, align 8, !dbg !3029
  %7289 = load i64, i64* %20, align 8, !dbg !3029
  %7290 = icmp ult i64 %7288, %7289, !dbg !3029
  br label %originalBB1637

originalBB1641alteredBB:                          ; preds = %originalBB1641, %5677
  %7291 = load i8*, i8** %19, align 8, !dbg !3029
  %7292 = load i64, i64* %29, align 8, !dbg !3029
  %7293 = getelementptr inbounds i8, i8* %7291, i64 %7292, !dbg !3029
  store i8 92, i8* %7293, align 1, !dbg !3029
  br label %originalBB1641

originalBB1645alteredBB:                          ; preds = %originalBB1645, %5697
  %7294 = load i64, i64* %29, align 8, !dbg !3032
  %_1646 = shl i64 %7294, 1
  %_1647 = sub i64 %7294, 1
  %gen1648 = mul i64 %_1647, 1
  %_1649 = sub i64 %7294, 1
  %gen1650 = mul i64 %_1649, 1
  %_1651 = sub i64 %7294, 1
  %gen1652 = mul i64 %_1651, 1
  %_1653 = sub i64 0, %7294
  %gen1654 = add i64 %_1653, 1
  %_1655 = sub i64 %7294, 1
  %gen1656 = mul i64 %_1655, 1
  %_1657 = sub i64 %7294, 1
  %gen1658 = mul i64 %_1657, 1
  %_1659 = sub i64 %7294, 1
  %gen1660 = mul i64 %_1659, 1
  %7295 = add i64 %7294, 1, !dbg !3032
  store i64 %7295, i64* %29, align 8, !dbg !3032
  br label %originalBB1645

originalBB1664alteredBB:                          ; preds = %originalBB1664, %5717
  br label %originalBB1664

originalBB1668alteredBB:                          ; preds = %originalBB1668, %5734
  br label %originalBB1668

originalBB1672alteredBB:                          ; preds = %originalBB1672, %5751
  %7296 = load i8, i8* %36, align 1, !dbg !3036
  %7297 = trunc i8 %7296 to i1, !dbg !3036
  br label %originalBB1672

originalBB1676alteredBB:                          ; preds = %originalBB1676, %5770
  %7298 = load i8, i8* %42, align 1, !dbg !3036
  %7299 = trunc i8 %7298 to i1, !dbg !3036
  br label %originalBB1676

originalBB1680alteredBB:                          ; preds = %originalBB1680, %5789
  br label %originalBB1680

originalBB1684alteredBB:                          ; preds = %originalBB1684, %5810
  %7300 = load i8*, i8** %19, align 8, !dbg !3042
  %7301 = load i64, i64* %29, align 8, !dbg !3042
  %7302 = getelementptr inbounds i8, i8* %7300, i64 %7301, !dbg !3042
  store i8 39, i8* %7302, align 1, !dbg !3042
  br label %originalBB1684

originalBB1688alteredBB:                          ; preds = %originalBB1688, %5830
  %7303 = load i64, i64* %29, align 8, !dbg !3045
  %_1689 = sub i64 %7303, 1
  %gen1690 = mul i64 %_1689, 1
  %7304 = add i64 %7303, 1, !dbg !3045
  store i64 %7304, i64* %29, align 8, !dbg !3045
  br label %originalBB1688

originalBB1694alteredBB:                          ; preds = %originalBB1694, %5849
  br label %originalBB1694

originalBB1698alteredBB:                          ; preds = %originalBB1698, %5866
  %7305 = load i64, i64* %29, align 8, !dbg !3046
  %7306 = load i64, i64* %20, align 8, !dbg !3046
  %7307 = icmp ult i64 %7305, %7306, !dbg !3046
  br label %originalBB1698

originalBB1702alteredBB:                          ; preds = %originalBB1702, %5886
  %7308 = load i8*, i8** %19, align 8, !dbg !3046
  %7309 = load i64, i64* %29, align 8, !dbg !3046
  %7310 = getelementptr inbounds i8, i8* %7308, i64 %7309, !dbg !3046
  store i8 39, i8* %7310, align 1, !dbg !3046
  br label %originalBB1702

originalBB1706alteredBB:                          ; preds = %originalBB1706, %5906
  %7311 = load i64, i64* %29, align 8, !dbg !3049
  %_1707 = sub i64 0, %7311
  %gen1708 = add i64 %_1707, 1
  %7312 = add i64 %7311, 1, !dbg !3049
  store i64 %7312, i64* %29, align 8, !dbg !3049
  br label %originalBB1706

originalBB1712alteredBB:                          ; preds = %originalBB1712, %5925
  store i8 0, i8* %36, align 1, !dbg !3040
  br label %originalBB1712

originalBB1716alteredBB:                          ; preds = %originalBB1716, %5942
  br label %originalBB1716

originalBB1720alteredBB:                          ; preds = %originalBB1720, %5959
  br label %originalBB1720

originalBB1724alteredBB:                          ; preds = %originalBB1724, %5976
  %7313 = load i64, i64* %29, align 8, !dbg !3051
  %7314 = load i64, i64* %20, align 8, !dbg !3051
  %7315 = icmp ult i64 %7313, %7314, !dbg !3051
  br label %originalBB1724

originalBB1728alteredBB:                          ; preds = %originalBB1728, %5996
  %7316 = load i8, i8* %39, align 1, !dbg !3051
  %7317 = load i8*, i8** %19, align 8, !dbg !3051
  %7318 = load i64, i64* %29, align 8, !dbg !3051
  %7319 = getelementptr inbounds i8, i8* %7317, i64 %7318, !dbg !3051
  store i8 %7316, i8* %7319, align 1, !dbg !3051
  br label %originalBB1728

originalBB1732alteredBB:                          ; preds = %originalBB1732, %6017
  %7320 = load i64, i64* %29, align 8, !dbg !3054
  %_1733 = sub i64 %7320, 1
  %gen1734 = mul i64 %_1733, 1
  %_1735 = shl i64 %7320, 1
  %_1736 = sub i64 0, %7320
  %gen1737 = add i64 %_1736, 1
  %7321 = add i64 %7320, 1, !dbg !3054
  store i64 %7321, i64* %29, align 8, !dbg !3054
  br label %originalBB1732

originalBB1741alteredBB:                          ; preds = %originalBB1741, %6036
  %7322 = load i8, i8* %43, align 1, !dbg !3055
  %7323 = trunc i8 %7322 to i1, !dbg !3055
  br label %originalBB1741

originalBB1745alteredBB:                          ; preds = %originalBB1745, %6055
  store i8 0, i8* %38, align 1, !dbg !3058
  br label %originalBB1745

originalBB1749alteredBB:                          ; preds = %originalBB1749, %6072
  br label %originalBB1749

originalBB1753alteredBB:                          ; preds = %originalBB1753, %6089
  %7324 = load i64, i64* %28, align 8, !dbg !3061
  %_1754 = sub i64 %7324, 1
  %gen1755 = mul i64 %_1754, 1
  %_1756 = shl i64 %7324, 1
  %_1757 = shl i64 %7324, 1
  %_1758 = sub i64 0, %7324
  %gen1759 = add i64 %_1758, 1
  %_1760 = sub i64 0, %7324
  %gen1761 = add i64 %_1760, 1
  %_1762 = sub i64 0, %7324
  %gen1763 = add i64 %_1762, 1
  %7325 = add i64 %7324, 1, !dbg !3061
  store i64 %7325, i64* %28, align 8, !dbg !3061
  br label %originalBB1753

originalBB1767alteredBB:                          ; preds = %originalBB1767, %6108
  %7326 = load i64, i64* %29, align 8, !dbg !3065
  %7327 = icmp eq i64 %7326, 0, !dbg !3067
  br label %originalBB1767

originalBB1771alteredBB:                          ; preds = %originalBB1771, %6127
  %7328 = load i32, i32* %23, align 4, !dbg !3069
  %7329 = icmp eq i32 %7328, 2, !dbg !3070
  br label %originalBB1771

originalBB1775alteredBB:                          ; preds = %originalBB1775, %6149
  br label %originalBB1775

originalBB1779alteredBB:                          ; preds = %originalBB1779, %6166
  %7330 = load i32, i32* %23, align 4, !dbg !3075
  %7331 = icmp eq i32 %7330, 2, !dbg !3077
  br label %originalBB1779

originalBB1783alteredBB:                          ; preds = %originalBB1783, %6185
  %7332 = load i8, i8* %35, align 1, !dbg !3079
  %7333 = trunc i8 %7332 to i1, !dbg !3079
  br label %originalBB1783

originalBB1787alteredBB:                          ; preds = %originalBB1787, %6204
  %7334 = load i8, i8* %37, align 1, !dbg !3081
  %7335 = trunc i8 %7334 to i1, !dbg !3081
  br label %originalBB1787

originalBB1791alteredBB:                          ; preds = %originalBB1791, %6223
  %7336 = load i8, i8* %38, align 1, !dbg !3083
  %7337 = trunc i8 %7336 to i1, !dbg !3083
  br label %originalBB1791

originalBB1795alteredBB:                          ; preds = %originalBB1795, %6242
  %7338 = load i8*, i8** %19, align 8, !dbg !3087
  %7339 = load i64, i64* %30, align 8, !dbg !3088
  %7340 = load i8*, i8** %21, align 8, !dbg !3089
  %7341 = load i64, i64* %22, align 8, !dbg !3090
  %7342 = load i32, i32* %24, align 4, !dbg !3091
  %7343 = load i32*, i32** %25, align 8, !dbg !3092
  %7344 = load i8*, i8** %26, align 8, !dbg !3093
  %7345 = load i8*, i8** %27, align 8, !dbg !3094
  %7346 = call i64 @quotearg_buffer_restyled(i8* %7338, i64 %7339, i8* %7340, i64 %7341, i32 5, i32 %7342, i32* %7343, i8* %7344, i8* %7345), !dbg !3095
  store i64 %7346, i64* %18, align 8, !dbg !3096
  br label %originalBB1795

originalBB1799alteredBB:                          ; preds = %originalBB1799, %6268
  %7347 = load i64, i64* %20, align 8, !dbg !3097
  %7348 = icmp ne i64 %7347, 0, !dbg !3097
  br label %originalBB1799

originalBB1803alteredBB:                          ; preds = %originalBB1803, %6287
  %7349 = load i64, i64* %30, align 8, !dbg !3100
  %7350 = icmp ne i64 %7349, 0, !dbg !3100
  br label %originalBB1803

originalBB1807alteredBB:                          ; preds = %originalBB1807, %6306
  %7351 = load i64, i64* %30, align 8, !dbg !3102
  store i64 %7351, i64* %20, align 8, !dbg !3104
  store i64 0, i64* %29, align 8, !dbg !3105
  br label %originalBB1807

originalBB1811alteredBB:                          ; preds = %originalBB1811, %6324
  br label %originalBB1811

originalBB1815alteredBB:                          ; preds = %originalBB1815, %6341
  br label %originalBB1815

originalBB1819alteredBB:                          ; preds = %originalBB1819, %6358
  %7352 = load i8*, i8** %31, align 8, !dbg !3108
  %7353 = icmp ne i8* %7352, null, !dbg !3108
  br label %originalBB1819

originalBB1823alteredBB:                          ; preds = %originalBB1823, %6377
  %7354 = load i8, i8* %35, align 1, !dbg !3111
  %7355 = trunc i8 %7354 to i1, !dbg !3111
  br label %originalBB1823

originalBB1827alteredBB:                          ; preds = %originalBB1827, %6396
  br label %originalBB1827

originalBB1831alteredBB:                          ; preds = %originalBB1831, %6413
  %7356 = load i8*, i8** %31, align 8, !dbg !3114
  %7357 = load i8, i8* %7356, align 1, !dbg !3117
  %7358 = icmp ne i8 %7357, 0, !dbg !3118
  br label %originalBB1831

originalBB1835alteredBB:                          ; preds = %originalBB1835, %6433
  br label %originalBB1835

originalBB1839alteredBB:                          ; preds = %originalBB1839, %6450
  %7359 = load i64, i64* %29, align 8, !dbg !3120
  %7360 = load i64, i64* %20, align 8, !dbg !3120
  %7361 = icmp ult i64 %7359, %7360, !dbg !3120
  br label %originalBB1839

originalBB1843alteredBB:                          ; preds = %originalBB1843, %6470
  %7362 = load i8*, i8** %31, align 8, !dbg !3120
  %7363 = load i8, i8* %7362, align 1, !dbg !3120
  %7364 = load i8*, i8** %19, align 8, !dbg !3120
  %7365 = load i64, i64* %29, align 8, !dbg !3120
  %7366 = getelementptr inbounds i8, i8* %7364, i64 %7365, !dbg !3120
  store i8 %7363, i8* %7366, align 1, !dbg !3120
  br label %originalBB1843

originalBB1847alteredBB:                          ; preds = %originalBB1847, %6492
  %7367 = load i64, i64* %29, align 8, !dbg !3123
  %_1848 = sub i64 %7367, 1
  %gen1849 = mul i64 %_1848, 1
  %_1850 = sub i64 0, %7367
  %gen1851 = add i64 %_1850, 1
  %_1852 = shl i64 %7367, 1
  %_1853 = sub i64 0, %7367
  %gen1854 = add i64 %_1853, 1
  %_1855 = shl i64 %7367, 1
  %7368 = add i64 %7367, 1, !dbg !3123
  store i64 %7368, i64* %29, align 8, !dbg !3123
  br label %originalBB1847

originalBB1859alteredBB:                          ; preds = %originalBB1859, %6511
  br label %originalBB1859

originalBB1863alteredBB:                          ; preds = %originalBB1863, %6528
  %7369 = load i8*, i8** %31, align 8, !dbg !3124
  %7370 = getelementptr inbounds i8, i8* %7369, i32 1, !dbg !3124
  store i8* %7370, i8** %31, align 8, !dbg !3124
  br label %originalBB1863

originalBB1867alteredBB:                          ; preds = %originalBB1867, %6547
  br label %originalBB1867

originalBB1871alteredBB:                          ; preds = %originalBB1871, %6564
  %7371 = load i64, i64* %29, align 8, !dbg !3128
  %7372 = load i64, i64* %20, align 8, !dbg !3130
  %7373 = icmp ult i64 %7371, %7372, !dbg !3131
  br label %originalBB1871

originalBB1875alteredBB:                          ; preds = %originalBB1875, %6584
  %7374 = load i8*, i8** %19, align 8, !dbg !3133
  %7375 = load i64, i64* %29, align 8, !dbg !3134
  %7376 = getelementptr inbounds i8, i8* %7374, i64 %7375, !dbg !3133
  store i8 0, i8* %7376, align 1, !dbg !3135
  br label %originalBB1875

originalBB1879alteredBB:                          ; preds = %originalBB1879, %6606
  %7377 = load i32, i32* %23, align 4, !dbg !3140
  %7378 = icmp eq i32 %7377, 2, !dbg !3142
  br label %originalBB1879

originalBB1883alteredBB:                          ; preds = %originalBB1883, %6625
  %7379 = load i8, i8* %33, align 1, !dbg !3144
  %7380 = trunc i8 %7379 to i1, !dbg !3144
  br label %originalBB1883

originalBB1887alteredBB:                          ; preds = %originalBB1887, %6644
  store i32 4, i32* %23, align 4, !dbg !3146
  br label %originalBB1887

originalBB1891alteredBB:                          ; preds = %originalBB1891, %6661
  %7381 = load i8*, i8** %19, align 8, !dbg !3148
  %7382 = load i64, i64* %20, align 8, !dbg !3149
  %7383 = load i8*, i8** %21, align 8, !dbg !3150
  %7384 = load i64, i64* %22, align 8, !dbg !3151
  %7385 = load i32, i32* %23, align 4, !dbg !3152
  %7386 = load i32, i32* %24, align 4, !dbg !3153
  %_1892 = shl i32 %7386, -3
  %_1893 = sub i32 0, %7386
  %gen1894 = add i32 %_1893, -3
  %7387 = and i32 %7386, -3, !dbg !3154
  %7388 = load i8*, i8** %26, align 8, !dbg !3155
  %7389 = load i8*, i8** %27, align 8, !dbg !3156
  %7390 = call i64 @quotearg_buffer_restyled(i8* %7381, i64 %7382, i8* %7383, i64 %7384, i32 %7385, i32 %7387, i32* null, i8* %7388, i8* %7389), !dbg !3157
  store i64 %7390, i64* %18, align 8, !dbg !3158
  br label %originalBB1891

originalBB1898alteredBB:                          ; preds = %originalBB1898, %6688
  %7391 = load i64, i64* %18, align 8, !dbg !3159
  br label %originalBB1898
}

; Function Attrs: nounwind
declare dso_local i64 @__ctype_get_mb_cur_max() #2

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @gettext_quote(i8*, i32) #4 !dbg !3247 {
  %3 = load i32, i32* @x.39
  %4 = load i32, i32* @y.40
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i8*, align 8
  %15 = alloca i8*, align 8
  store i8* %0, i8** %12, align 8
  call void @llvm.dbg.declare(metadata i8** %12, metadata !3250, metadata !DIExpression()), !dbg !3251
  store i32 %1, i32* %13, align 4
  call void @llvm.dbg.declare(metadata i32* %13, metadata !3252, metadata !DIExpression()), !dbg !3253
  call void @llvm.dbg.declare(metadata i8** %14, metadata !3254, metadata !DIExpression()), !dbg !3255
  %16 = load i8*, i8** %12, align 8, !dbg !3256
  %17 = call i8* @gettext(i8* %16) #10, !dbg !3256
  store i8* %17, i8** %14, align 8, !dbg !3255
  call void @llvm.dbg.declare(metadata i8** %15, metadata !3257, metadata !DIExpression()), !dbg !3258
  %18 = load i8*, i8** %14, align 8, !dbg !3259
  %19 = load i8*, i8** %12, align 8, !dbg !3261
  %20 = icmp ne i8* %18, %19, !dbg !3262
  %21 = load i32, i32* @x.39
  %22 = load i32, i32* @y.40
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %20, label %29, label %47, !dbg !3263

29:                                               ; preds = %originalBBpart2
  %30 = load i32, i32* @x.39
  %31 = load i32, i32* @y.40
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %29, %originalBB1alteredBB
  %38 = load i8*, i8** %14, align 8, !dbg !3264
  store i8* %38, i8** %11, align 8, !dbg !3265
  %39 = load i32, i32* @x.39
  %40 = load i32, i32* @y.40
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %538, !dbg !3265

47:                                               ; preds = %originalBBpart2
  %48 = load i32, i32* @x.39
  %49 = load i32, i32* @y.40
  %50 = sub i32 %48, 1
  %51 = mul i32 %48, %50
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %53, %54
  br i1 %55, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %47, %originalBB6alteredBB
  %56 = call i8* @locale_charset(), !dbg !3266
  store i8* %56, i8** %15, align 8, !dbg !3267
  %57 = load i8*, i8** %15, align 8, !dbg !3268
  %58 = call i32 @c_strcasecmp(i8* %57, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.88, i64 0, i64 0)) #13, !dbg !3268
  %59 = load i32, i32* @x.39
  %60 = load i32, i32* @y.40
  %61 = sub i32 %59, 1
  %62 = mul i32 %59, %61
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %60, 10
  %66 = or i1 %64, %65
  br i1 %66, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %67, !dbg !3268

67:                                               ; preds = %originalBBpart28
  %68 = load i32, i32* @x.39
  %69 = load i32, i32* @y.40
  %70 = sub i32 %68, 1
  %71 = mul i32 %68, %70
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %69, 10
  %75 = or i1 %73, %74
  br i1 %75, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %67, %originalBB10alteredBB
  %collatzVar1 = alloca i32
  %76 = load i32, i32* @x.39
  %77 = load i32, i32* @y.40
  %78 = sub i32 %76, 1
  %79 = mul i32 %76, %78
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %77, 10
  %83 = or i1 %81, %82
  br i1 %83, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %84

84:                                               ; preds = %originalBBpart212
  %85 = load i32, i32* @x.39
  %86 = load i32, i32* @y.40
  %87 = sub i32 %85, 1
  %88 = mul i32 %85, %87
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %86, 10
  %92 = or i1 %90, %91
  br i1 %92, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %84, %originalBB14alteredBB
  %93 = load i32, i32* @inVal0
  %94 = icmp sgt i32 %93, 1
  %95 = load i32, i32* @x.39
  %96 = load i32, i32* @y.40
  %97 = sub i32 %95, 1
  %98 = mul i32 %95, %97
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %96, 10
  %102 = or i1 %100, %101
  br i1 %102, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %94, label %120, label %103

103:                                              ; preds = %originalBBpart216
  %104 = load i32, i32* @x.39
  %105 = load i32, i32* @y.40
  %106 = sub i32 %104, 1
  %107 = mul i32 %104, %106
  %108 = urem i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = icmp slt i32 %105, 10
  %111 = or i1 %109, %110
  br i1 %111, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %103, %originalBB18alteredBB
  store i32 48, i32* %collatzVar1
  %112 = load i32, i32* @x.39
  %113 = load i32, i32* @y.40
  %114 = sub i32 %112, 1
  %115 = mul i32 %112, %114
  %116 = urem i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = icmp slt i32 %113, 10
  %119 = or i1 %117, %118
  br i1 %119, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %120

120:                                              ; preds = %originalBBpart220, %originalBBpart216
  %121 = load i32, i32* @x.39
  %122 = load i32, i32* @y.40
  %123 = sub i32 %121, 1
  %124 = mul i32 %121, %123
  %125 = urem i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %122, 10
  %128 = or i1 %126, %127
  br i1 %128, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %120, %originalBB22alteredBB
  %129 = load i8**, i8*** @inVal1
  %130 = getelementptr inbounds i8*, i8** %129, i64 1
  %131 = load i8*, i8** %130
  %controle2 = call i32 @controle(i8* %131, i32 0)
  store i32 %controle2, i32* %collatzVar1
  %132 = load i32, i32* @x.39
  %133 = load i32, i32* @y.40
  %134 = sub i32 %132, 1
  %135 = mul i32 %132, %134
  %136 = urem i32 %135, 2
  %137 = icmp eq i32 %136, 0
  %138 = icmp slt i32 %133, 10
  %139 = or i1 %137, %138
  br i1 %139, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br label %140

140:                                              ; preds = %originalBBpart281, %originalBBpart269, %originalBBpart224
  %141 = load i32, i32* @x.39
  %142 = load i32, i32* @y.40
  %143 = sub i32 %141, 1
  %144 = mul i32 %141, %143
  %145 = urem i32 %144, 2
  %146 = icmp eq i32 %145, 0
  %147 = icmp slt i32 %142, 10
  %148 = or i1 %146, %147
  br i1 %148, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %140, %originalBB26alteredBB
  %149 = load i32, i32* %collatzVar1
  %150 = icmp sgt i32 %149, 1
  %151 = load i32, i32* @x.39
  %152 = load i32, i32* @y.40
  %153 = sub i32 %151, 1
  %154 = mul i32 %151, %153
  %155 = urem i32 %154, 2
  %156 = icmp eq i32 %155, 0
  %157 = icmp slt i32 %152, 10
  %158 = or i1 %156, %157
  br i1 %158, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br i1 %150, label %159, label %282

159:                                              ; preds = %originalBBpart228
  %160 = load i32, i32* @x.39
  %161 = load i32, i32* @y.40
  %162 = sub i32 %160, 1
  %163 = mul i32 %160, %162
  %164 = urem i32 %163, 2
  %165 = icmp eq i32 %164, 0
  %166 = icmp slt i32 %161, 10
  %167 = or i1 %165, %166
  br i1 %167, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %159, %originalBB30alteredBB
  %168 = load i32, i32* %collatzVar1
  %169 = srem i32 %168, 2
  %170 = icmp eq i32 %169, 0
  %171 = load i32, i32* @x.39
  %172 = load i32, i32* @y.40
  %173 = sub i32 %171, 1
  %174 = mul i32 %171, %173
  %175 = urem i32 %174, 2
  %176 = icmp eq i32 %175, 0
  %177 = icmp slt i32 %172, 10
  %178 = or i1 %176, %177
  br i1 %178, label %originalBBpart234, label %originalBB30alteredBB

originalBBpart234:                                ; preds = %originalBB30
  br i1 %170, label %179, label %198

179:                                              ; preds = %originalBBpart234
  %180 = load i32, i32* @x.39
  %181 = load i32, i32* @y.40
  %182 = sub i32 %180, 1
  %183 = mul i32 %180, %182
  %184 = urem i32 %183, 2
  %185 = icmp eq i32 %184, 0
  %186 = icmp slt i32 %181, 10
  %187 = or i1 %185, %186
  br i1 %187, label %originalBB36, label %originalBB36alteredBB

originalBB36:                                     ; preds = %179, %originalBB36alteredBB
  %188 = load i32, i32* %collatzVar1
  %189 = sdiv i32 %188, 2
  store i32 %189, i32* %collatzVar1
  %190 = load i32, i32* @x.39
  %191 = load i32, i32* @y.40
  %192 = sub i32 %190, 1
  %193 = mul i32 %190, %192
  %194 = urem i32 %193, 2
  %195 = icmp eq i32 %194, 0
  %196 = icmp slt i32 %191, 10
  %197 = or i1 %195, %196
  br i1 %197, label %originalBBpart249, label %originalBB36alteredBB

originalBBpart249:                                ; preds = %originalBB36
  br label %218

198:                                              ; preds = %originalBBpart234
  %199 = load i32, i32* @x.39
  %200 = load i32, i32* @y.40
  %201 = sub i32 %199, 1
  %202 = mul i32 %199, %201
  %203 = urem i32 %202, 2
  %204 = icmp eq i32 %203, 0
  %205 = icmp slt i32 %200, 10
  %206 = or i1 %204, %205
  br i1 %206, label %originalBB51, label %originalBB51alteredBB

originalBB51:                                     ; preds = %198, %originalBB51alteredBB
  %207 = load i32, i32* %collatzVar1
  %208 = mul i32 %207, 3
  %209 = add i32 %208, 1
  store i32 %209, i32* %collatzVar1
  %210 = load i32, i32* @x.39
  %211 = load i32, i32* @y.40
  %212 = sub i32 %210, 1
  %213 = mul i32 %210, %212
  %214 = urem i32 %213, 2
  %215 = icmp eq i32 %214, 0
  %216 = icmp slt i32 %211, 10
  %217 = or i1 %215, %216
  br i1 %217, label %originalBBpart261, label %originalBB51alteredBB

originalBBpart261:                                ; preds = %originalBB51
  br label %218

218:                                              ; preds = %originalBBpart261, %originalBBpart249
  %219 = load i32, i32* @x.39
  %220 = load i32, i32* @y.40
  %221 = sub i32 %219, 1
  %222 = mul i32 %219, %221
  %223 = urem i32 %222, 2
  %224 = icmp eq i32 %223, 0
  %225 = icmp slt i32 %220, 10
  %226 = or i1 %224, %225
  br i1 %226, label %originalBB63, label %originalBB63alteredBB

originalBB63:                                     ; preds = %218, %originalBB63alteredBB
  %227 = load i32, i32* %collatzVar1
  %228 = sub i32 %58, %227
  %229 = icmp sgt i32 %228, -2
  %230 = load i32, i32* @x.39
  %231 = load i32, i32* @y.40
  %232 = sub i32 %230, 1
  %233 = mul i32 %230, %232
  %234 = urem i32 %233, 2
  %235 = icmp eq i32 %234, 0
  %236 = icmp slt i32 %231, 10
  %237 = or i1 %235, %236
  br i1 %237, label %originalBBpart269, label %originalBB63alteredBB

originalBBpart269:                                ; preds = %originalBB63
  br i1 %229, label %238, label %140

238:                                              ; preds = %originalBBpart269
  %239 = load i32, i32* @x.39
  %240 = load i32, i32* @y.40
  %241 = sub i32 %239, 1
  %242 = mul i32 %239, %241
  %243 = urem i32 %242, 2
  %244 = icmp eq i32 %243, 0
  %245 = icmp slt i32 %240, 10
  %246 = or i1 %244, %245
  br i1 %246, label %originalBB71, label %originalBB71alteredBB

originalBB71:                                     ; preds = %238, %originalBB71alteredBB
  %247 = load i32, i32* %collatzVar1
  %248 = add i32 %58, %247
  %249 = icmp slt i32 %248, 2
  %250 = load i32, i32* @x.39
  %251 = load i32, i32* @y.40
  %252 = sub i32 %250, 1
  %253 = mul i32 %250, %252
  %254 = urem i32 %253, 2
  %255 = icmp eq i32 %254, 0
  %256 = icmp slt i32 %251, 10
  %257 = or i1 %255, %256
  br i1 %257, label %originalBBpart281, label %originalBB71alteredBB

originalBBpart281:                                ; preds = %originalBB71
  br i1 %249, label %258, label %140

258:                                              ; preds = %originalBBpart281
  %259 = load i32, i32* @x.39
  %260 = load i32, i32* @y.40
  %261 = sub i32 %259, 1
  %262 = mul i32 %259, %261
  %263 = urem i32 %262, 2
  %264 = icmp eq i32 %263, 0
  %265 = icmp slt i32 %260, 10
  %266 = or i1 %264, %265
  br i1 %266, label %originalBB83, label %originalBB83alteredBB

originalBB83:                                     ; preds = %258, %originalBB83alteredBB
  %267 = load i8*, i8** %12, align 8, !dbg !3270
  %268 = getelementptr inbounds i8, i8* %267, i64 0, !dbg !3270
  %269 = load i8, i8* %268, align 1, !dbg !3270
  %270 = sext i8 %269 to i32, !dbg !3270
  %271 = icmp eq i32 %270, 96, !dbg !3271
  %272 = zext i1 %271 to i64, !dbg !3270
  %273 = select i1 %271, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14.89, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.15.90, i64 0, i64 0), !dbg !3270
  store i8* %273, i8** %11, align 8, !dbg !3272
  %274 = load i32, i32* @x.39
  %275 = load i32, i32* @y.40
  %276 = sub i32 %274, 1
  %277 = mul i32 %274, %276
  %278 = urem i32 %277, 2
  %279 = icmp eq i32 %278, 0
  %280 = icmp slt i32 %275, 10
  %281 = or i1 %279, %280
  br i1 %281, label %originalBBpart285, label %originalBB83alteredBB

originalBBpart285:                                ; preds = %originalBB83
  br label %538, !dbg !3272

282:                                              ; preds = %originalBBpart228
  %283 = load i32, i32* @x.39
  %284 = load i32, i32* @y.40
  %285 = sub i32 %283, 1
  %286 = mul i32 %283, %285
  %287 = urem i32 %286, 2
  %288 = icmp eq i32 %287, 0
  %289 = icmp slt i32 %284, 10
  %290 = or i1 %288, %289
  br i1 %290, label %originalBB87, label %originalBB87alteredBB

originalBB87:                                     ; preds = %282, %originalBB87alteredBB
  %291 = load i8*, i8** %15, align 8, !dbg !3273
  %292 = call i32 @c_strcasecmp(i8* %291, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.16.91, i64 0, i64 0)) #13, !dbg !3273
  %293 = load i32, i32* @x.39
  %294 = load i32, i32* @y.40
  %295 = sub i32 %293, 1
  %296 = mul i32 %293, %295
  %297 = urem i32 %296, 2
  %298 = icmp eq i32 %297, 0
  %299 = icmp slt i32 %294, 10
  %300 = or i1 %298, %299
  br i1 %300, label %originalBBpart289, label %originalBB87alteredBB

originalBBpart289:                                ; preds = %originalBB87
  br label %301, !dbg !3273

301:                                              ; preds = %originalBBpart289
  %302 = load i32, i32* @x.39
  %303 = load i32, i32* @y.40
  %304 = sub i32 %302, 1
  %305 = mul i32 %302, %304
  %306 = urem i32 %305, 2
  %307 = icmp eq i32 %306, 0
  %308 = icmp slt i32 %303, 10
  %309 = or i1 %307, %308
  br i1 %309, label %originalBB91, label %originalBB91alteredBB

originalBB91:                                     ; preds = %301, %originalBB91alteredBB
  %collatzVar = alloca i32
  %310 = load i32, i32* @x.39
  %311 = load i32, i32* @y.40
  %312 = sub i32 %310, 1
  %313 = mul i32 %310, %312
  %314 = urem i32 %313, 2
  %315 = icmp eq i32 %314, 0
  %316 = icmp slt i32 %311, 10
  %317 = or i1 %315, %316
  br i1 %317, label %originalBBpart293, label %originalBB91alteredBB

originalBBpart293:                                ; preds = %originalBB91
  br label %318

318:                                              ; preds = %originalBBpart293
  %319 = load i32, i32* @x.39
  %320 = load i32, i32* @y.40
  %321 = sub i32 %319, 1
  %322 = mul i32 %319, %321
  %323 = urem i32 %322, 2
  %324 = icmp eq i32 %323, 0
  %325 = icmp slt i32 %320, 10
  %326 = or i1 %324, %325
  br i1 %326, label %originalBB95, label %originalBB95alteredBB

originalBB95:                                     ; preds = %318, %originalBB95alteredBB
  %327 = load i32, i32* @inVal0
  %328 = icmp sgt i32 %327, 1
  %329 = load i32, i32* @x.39
  %330 = load i32, i32* @y.40
  %331 = sub i32 %329, 1
  %332 = mul i32 %329, %331
  %333 = urem i32 %332, 2
  %334 = icmp eq i32 %333, 0
  %335 = icmp slt i32 %330, 10
  %336 = or i1 %334, %335
  br i1 %336, label %originalBBpart297, label %originalBB95alteredBB

originalBBpart297:                                ; preds = %originalBB95
  br i1 %328, label %354, label %337

337:                                              ; preds = %originalBBpart297
  %338 = load i32, i32* @x.39
  %339 = load i32, i32* @y.40
  %340 = sub i32 %338, 1
  %341 = mul i32 %338, %340
  %342 = urem i32 %341, 2
  %343 = icmp eq i32 %342, 0
  %344 = icmp slt i32 %339, 10
  %345 = or i1 %343, %344
  br i1 %345, label %originalBB99, label %originalBB99alteredBB

originalBB99:                                     ; preds = %337, %originalBB99alteredBB
  store i32 46, i32* %collatzVar
  %346 = load i32, i32* @x.39
  %347 = load i32, i32* @y.40
  %348 = sub i32 %346, 1
  %349 = mul i32 %346, %348
  %350 = urem i32 %349, 2
  %351 = icmp eq i32 %350, 0
  %352 = icmp slt i32 %347, 10
  %353 = or i1 %351, %352
  br i1 %353, label %originalBBpart2101, label %originalBB99alteredBB

originalBBpart2101:                               ; preds = %originalBB99
  br label %354

354:                                              ; preds = %originalBBpart2101, %originalBBpart297
  %355 = load i32, i32* @x.39
  %356 = load i32, i32* @y.40
  %357 = sub i32 %355, 1
  %358 = mul i32 %355, %357
  %359 = urem i32 %358, 2
  %360 = icmp eq i32 %359, 0
  %361 = icmp slt i32 %356, 10
  %362 = or i1 %360, %361
  br i1 %362, label %originalBB103, label %originalBB103alteredBB

originalBB103:                                    ; preds = %354, %originalBB103alteredBB
  %363 = load i8**, i8*** @inVal1
  %364 = getelementptr inbounds i8*, i8** %363, i64 1
  %365 = load i8*, i8** %364
  %366 = add i32 0, -1
  %controle = call i32 @controle(i8* %365, i32 %366)
  store i32 %controle, i32* %collatzVar
  %367 = load i32, i32* @x.39
  %368 = load i32, i32* @y.40
  %369 = sub i32 %367, 1
  %370 = mul i32 %367, %369
  %371 = urem i32 %370, 2
  %372 = icmp eq i32 %371, 0
  %373 = icmp slt i32 %368, 10
  %374 = or i1 %372, %373
  br i1 %374, label %originalBBpart2115, label %originalBB103alteredBB

originalBBpart2115:                               ; preds = %originalBB103
  br label %375

375:                                              ; preds = %originalBBpart2184, %originalBBpart2172, %originalBBpart2115
  %376 = load i32, i32* @x.39
  %377 = load i32, i32* @y.40
  %378 = sub i32 %376, 1
  %379 = mul i32 %376, %378
  %380 = urem i32 %379, 2
  %381 = icmp eq i32 %380, 0
  %382 = icmp slt i32 %377, 10
  %383 = or i1 %381, %382
  br i1 %383, label %originalBB117, label %originalBB117alteredBB

originalBB117:                                    ; preds = %375, %originalBB117alteredBB
  %384 = load i32, i32* %collatzVar
  %385 = icmp sgt i32 %384, 1
  %386 = load i32, i32* @x.39
  %387 = load i32, i32* @y.40
  %388 = sub i32 %386, 1
  %389 = mul i32 %386, %388
  %390 = urem i32 %389, 2
  %391 = icmp eq i32 %390, 0
  %392 = icmp slt i32 %387, 10
  %393 = or i1 %391, %392
  br i1 %393, label %originalBBpart2119, label %originalBB117alteredBB

originalBBpart2119:                               ; preds = %originalBB117
  br i1 %385, label %394, label %517

394:                                              ; preds = %originalBBpart2119
  %395 = load i32, i32* @x.39
  %396 = load i32, i32* @y.40
  %397 = sub i32 %395, 1
  %398 = mul i32 %395, %397
  %399 = urem i32 %398, 2
  %400 = icmp eq i32 %399, 0
  %401 = icmp slt i32 %396, 10
  %402 = or i1 %400, %401
  br i1 %402, label %originalBB121, label %originalBB121alteredBB

originalBB121:                                    ; preds = %394, %originalBB121alteredBB
  %403 = load i32, i32* %collatzVar
  %404 = srem i32 %403, 2
  %405 = icmp eq i32 %404, 0
  %406 = load i32, i32* @x.39
  %407 = load i32, i32* @y.40
  %408 = sub i32 %406, 1
  %409 = mul i32 %406, %408
  %410 = urem i32 %409, 2
  %411 = icmp eq i32 %410, 0
  %412 = icmp slt i32 %407, 10
  %413 = or i1 %411, %412
  br i1 %413, label %originalBBpart2134, label %originalBB121alteredBB

originalBBpart2134:                               ; preds = %originalBB121
  br i1 %405, label %414, label %433

414:                                              ; preds = %originalBBpart2134
  %415 = load i32, i32* @x.39
  %416 = load i32, i32* @y.40
  %417 = sub i32 %415, 1
  %418 = mul i32 %415, %417
  %419 = urem i32 %418, 2
  %420 = icmp eq i32 %419, 0
  %421 = icmp slt i32 %416, 10
  %422 = or i1 %420, %421
  br i1 %422, label %originalBB136, label %originalBB136alteredBB

originalBB136:                                    ; preds = %414, %originalBB136alteredBB
  %423 = load i32, i32* %collatzVar
  %424 = sdiv i32 %423, 2
  store i32 %424, i32* %collatzVar
  %425 = load i32, i32* @x.39
  %426 = load i32, i32* @y.40
  %427 = sub i32 %425, 1
  %428 = mul i32 %425, %427
  %429 = urem i32 %428, 2
  %430 = icmp eq i32 %429, 0
  %431 = icmp slt i32 %426, 10
  %432 = or i1 %430, %431
  br i1 %432, label %originalBBpart2143, label %originalBB136alteredBB

originalBBpart2143:                               ; preds = %originalBB136
  br label %453

433:                                              ; preds = %originalBBpart2134
  %434 = load i32, i32* @x.39
  %435 = load i32, i32* @y.40
  %436 = sub i32 %434, 1
  %437 = mul i32 %434, %436
  %438 = urem i32 %437, 2
  %439 = icmp eq i32 %438, 0
  %440 = icmp slt i32 %435, 10
  %441 = or i1 %439, %440
  br i1 %441, label %originalBB145, label %originalBB145alteredBB

originalBB145:                                    ; preds = %433, %originalBB145alteredBB
  %442 = load i32, i32* %collatzVar
  %443 = mul i32 %442, 3
  %444 = add i32 %443, 1
  store i32 %444, i32* %collatzVar
  %445 = load i32, i32* @x.39
  %446 = load i32, i32* @y.40
  %447 = sub i32 %445, 1
  %448 = mul i32 %445, %447
  %449 = urem i32 %448, 2
  %450 = icmp eq i32 %449, 0
  %451 = icmp slt i32 %446, 10
  %452 = or i1 %450, %451
  br i1 %452, label %originalBBpart2162, label %originalBB145alteredBB

originalBBpart2162:                               ; preds = %originalBB145
  br label %453

453:                                              ; preds = %originalBBpart2162, %originalBBpart2143
  %454 = load i32, i32* @x.39
  %455 = load i32, i32* @y.40
  %456 = sub i32 %454, 1
  %457 = mul i32 %454, %456
  %458 = urem i32 %457, 2
  %459 = icmp eq i32 %458, 0
  %460 = icmp slt i32 %455, 10
  %461 = or i1 %459, %460
  br i1 %461, label %originalBB164, label %originalBB164alteredBB

originalBB164:                                    ; preds = %453, %originalBB164alteredBB
  %462 = load i32, i32* %collatzVar
  %463 = sub i32 %292, %462
  %464 = icmp sgt i32 %463, -2
  %465 = load i32, i32* @x.39
  %466 = load i32, i32* @y.40
  %467 = sub i32 %465, 1
  %468 = mul i32 %465, %467
  %469 = urem i32 %468, 2
  %470 = icmp eq i32 %469, 0
  %471 = icmp slt i32 %466, 10
  %472 = or i1 %470, %471
  br i1 %472, label %originalBBpart2172, label %originalBB164alteredBB

originalBBpart2172:                               ; preds = %originalBB164
  br i1 %464, label %473, label %375

473:                                              ; preds = %originalBBpart2172
  %474 = load i32, i32* @x.39
  %475 = load i32, i32* @y.40
  %476 = sub i32 %474, 1
  %477 = mul i32 %474, %476
  %478 = urem i32 %477, 2
  %479 = icmp eq i32 %478, 0
  %480 = icmp slt i32 %475, 10
  %481 = or i1 %479, %480
  br i1 %481, label %originalBB174, label %originalBB174alteredBB

originalBB174:                                    ; preds = %473, %originalBB174alteredBB
  %482 = load i32, i32* %collatzVar
  %483 = add i32 %292, %482
  %484 = icmp slt i32 %483, 2
  %485 = load i32, i32* @x.39
  %486 = load i32, i32* @y.40
  %487 = sub i32 %485, 1
  %488 = mul i32 %485, %487
  %489 = urem i32 %488, 2
  %490 = icmp eq i32 %489, 0
  %491 = icmp slt i32 %486, 10
  %492 = or i1 %490, %491
  br i1 %492, label %originalBBpart2184, label %originalBB174alteredBB

originalBBpart2184:                               ; preds = %originalBB174
  br i1 %484, label %493, label %375

493:                                              ; preds = %originalBBpart2184
  %494 = load i32, i32* @x.39
  %495 = load i32, i32* @y.40
  %496 = sub i32 %494, 1
  %497 = mul i32 %494, %496
  %498 = urem i32 %497, 2
  %499 = icmp eq i32 %498, 0
  %500 = icmp slt i32 %495, 10
  %501 = or i1 %499, %500
  br i1 %501, label %originalBB186, label %originalBB186alteredBB

originalBB186:                                    ; preds = %493, %originalBB186alteredBB
  %502 = load i8*, i8** %12, align 8, !dbg !3275
  %503 = getelementptr inbounds i8, i8* %502, i64 0, !dbg !3275
  %504 = load i8, i8* %503, align 1, !dbg !3275
  %505 = sext i8 %504 to i32, !dbg !3275
  %506 = icmp eq i32 %505, 96, !dbg !3276
  %507 = zext i1 %506 to i64, !dbg !3275
  %508 = select i1 %506, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.17.92, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18.93, i64 0, i64 0), !dbg !3275
  store i8* %508, i8** %11, align 8, !dbg !3277
  %509 = load i32, i32* @x.39
  %510 = load i32, i32* @y.40
  %511 = sub i32 %509, 1
  %512 = mul i32 %509, %511
  %513 = urem i32 %512, 2
  %514 = icmp eq i32 %513, 0
  %515 = icmp slt i32 %510, 10
  %516 = or i1 %514, %515
  br i1 %516, label %originalBBpart2188, label %originalBB186alteredBB

originalBBpart2188:                               ; preds = %originalBB186
  br label %538, !dbg !3277

517:                                              ; preds = %originalBBpart2119
  %518 = load i32, i32* @x.39
  %519 = load i32, i32* @y.40
  %520 = sub i32 %518, 1
  %521 = mul i32 %518, %520
  %522 = urem i32 %521, 2
  %523 = icmp eq i32 %522, 0
  %524 = icmp slt i32 %519, 10
  %525 = or i1 %523, %524
  br i1 %525, label %originalBB190, label %originalBB190alteredBB

originalBB190:                                    ; preds = %517, %originalBB190alteredBB
  %526 = load i32, i32* %13, align 4, !dbg !3278
  %527 = icmp eq i32 %526, 9, !dbg !3279
  %528 = zext i1 %527 to i64, !dbg !3278
  %529 = select i1 %527, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.85, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.87, i64 0, i64 0), !dbg !3278
  store i8* %529, i8** %11, align 8, !dbg !3280
  %530 = load i32, i32* @x.39
  %531 = load i32, i32* @y.40
  %532 = sub i32 %530, 1
  %533 = mul i32 %530, %532
  %534 = urem i32 %533, 2
  %535 = icmp eq i32 %534, 0
  %536 = icmp slt i32 %531, 10
  %537 = or i1 %535, %536
  br i1 %537, label %originalBBpart2192, label %originalBB190alteredBB

originalBBpart2192:                               ; preds = %originalBB190
  br label %538, !dbg !3280

538:                                              ; preds = %originalBBpart2192, %originalBBpart2188, %originalBBpart285, %originalBBpart24
  %539 = load i32, i32* @x.39
  %540 = load i32, i32* @y.40
  %541 = sub i32 %539, 1
  %542 = mul i32 %539, %541
  %543 = urem i32 %542, 2
  %544 = icmp eq i32 %543, 0
  %545 = icmp slt i32 %540, 10
  %546 = or i1 %544, %545
  br i1 %546, label %originalBB194, label %originalBB194alteredBB

originalBB194:                                    ; preds = %538, %originalBB194alteredBB
  %547 = load i8*, i8** %11, align 8, !dbg !3281
  %548 = load i32, i32* @x.39
  %549 = load i32, i32* @y.40
  %550 = sub i32 %548, 1
  %551 = mul i32 %548, %550
  %552 = urem i32 %551, 2
  %553 = icmp eq i32 %552, 0
  %554 = icmp slt i32 %549, 10
  %555 = or i1 %553, %554
  br i1 %555, label %originalBBpart2196, label %originalBB194alteredBB

originalBBpart2196:                               ; preds = %originalBB194
  ret i8* %547, !dbg !3281

originalBBalteredBB:                              ; preds = %originalBB, %2
  %556 = alloca i8*, align 8
  %557 = alloca i8*, align 8
  %558 = alloca i32, align 4
  %559 = alloca i8*, align 8
  %560 = alloca i8*, align 8
  store i8* %0, i8** %557, align 8
  call void @llvm.dbg.declare(metadata i8** %557, metadata !3282, metadata !DIExpression()), !dbg !3251
  store i32 %1, i32* %558, align 4
  call void @llvm.dbg.declare(metadata i32* %558, metadata !3314, metadata !DIExpression()), !dbg !3253
  call void @llvm.dbg.declare(metadata i8** %559, metadata !3315, metadata !DIExpression()), !dbg !3255
  %561 = load i8*, i8** %557, align 8, !dbg !3256
  %562 = call i8* @gettext(i8* %561) #10, !dbg !3256
  store i8* %562, i8** %559, align 8, !dbg !3255
  call void @llvm.dbg.declare(metadata i8** %560, metadata !3316, metadata !DIExpression()), !dbg !3258
  %563 = load i8*, i8** %559, align 8, !dbg !3259
  %564 = load i8*, i8** %557, align 8, !dbg !3261
  %565 = icmp ne i8* %563, %564, !dbg !3262
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %29
  %566 = load i8*, i8** %14, align 8, !dbg !3264
  store i8* %566, i8** %11, align 8, !dbg !3265
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %47
  %567 = call i8* @locale_charset(), !dbg !3266
  store i8* %567, i8** %15, align 8, !dbg !3267
  %568 = load i8*, i8** %15, align 8, !dbg !3268
  %569 = call i32 @c_strcasecmp(i8* %568, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.88, i64 0, i64 0)) #13, !dbg !3268
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %67
  %collatzVar1alteredBB = alloca i32
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %84
  %570 = load i32, i32* @inVal0
  %571 = icmp sgt i32 %570, 1
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %103
  store i32 48, i32* %collatzVar1
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %120
  %572 = load i8**, i8*** @inVal1
  %573 = getelementptr inbounds i8*, i8** %572, i64 1
  %574 = load i8*, i8** %573
  %controle2alteredBB = call i32 @controle(i8* %574, i32 0)
  store i32 %controle2alteredBB, i32* %collatzVar1
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %140
  %575 = load i32, i32* %collatzVar1
  %576 = icmp sgt i32 %575, 1
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %159
  %577 = load i32, i32* %collatzVar1
  %_ = sub i32 0, %577
  %gen = add i32 %_, 2
  %_31 = sub i32 %577, 2
  %gen32 = mul i32 %_31, 2
  %578 = srem i32 %577, 2
  %579 = icmp eq i32 %578, 0
  br label %originalBB30

originalBB36alteredBB:                            ; preds = %originalBB36, %179
  %580 = load i32, i32* %collatzVar1
  %_37 = sub i32 %580, 2
  %gen38 = mul i32 %_37, 2
  %_39 = sub i32 %580, 2
  %gen40 = mul i32 %_39, 2
  %_41 = sub i32 0, %580
  %gen42 = add i32 %_41, 2
  %_43 = sub i32 %580, 2
  %gen44 = mul i32 %_43, 2
  %_45 = shl i32 %580, 2
  %_46 = sub i32 %580, 2
  %gen47 = mul i32 %_46, 2
  %581 = sdiv i32 %580, 2
  store i32 %581, i32* %collatzVar1
  br label %originalBB36

originalBB51alteredBB:                            ; preds = %originalBB51, %198
  %582 = load i32, i32* %collatzVar1
  %_52 = sub i32 %582, 3
  %gen53 = mul i32 %_52, 3
  %_54 = sub i32 %582, 3
  %gen55 = mul i32 %_54, 3
  %583 = mul i32 %582, 3
  %_56 = sub i32 %583, 1
  %gen57 = mul i32 %_56, 1
  %_58 = sub i32 %583, 1
  %gen59 = mul i32 %_58, 1
  %584 = add i32 %583, 1
  store i32 %584, i32* %collatzVar1
  br label %originalBB51

originalBB63alteredBB:                            ; preds = %originalBB63, %218
  %585 = load i32, i32* %collatzVar1
  %_64 = sub i32 0, %58
  %gen65 = add i32 %_64, %585
  %_66 = sub i32 %58, %585
  %gen67 = mul i32 %_66, %585
  %586 = sub i32 %58, %585
  %587 = icmp sgt i32 %586, -2
  br label %originalBB63

originalBB71alteredBB:                            ; preds = %originalBB71, %238
  %588 = load i32, i32* %collatzVar1
  %_72 = sub i32 0, %58
  %gen73 = add i32 %_72, %588
  %_74 = shl i32 %58, %588
  %_75 = shl i32 %58, %588
  %_76 = sub i32 0, %58
  %gen77 = add i32 %_76, %588
  %_78 = sub i32 0, %58
  %gen79 = add i32 %_78, %588
  %589 = add i32 %58, %588
  %590 = icmp slt i32 %589, 2
  br label %originalBB71

originalBB83alteredBB:                            ; preds = %originalBB83, %258
  %591 = load i8*, i8** %12, align 8, !dbg !3270
  %592 = getelementptr inbounds i8, i8* %591, i64 0, !dbg !3270
  %593 = load i8, i8* %592, align 1, !dbg !3270
  %594 = sext i8 %593 to i32, !dbg !3270
  %595 = icmp eq i32 %594, 96, !dbg !3271
  %596 = zext i1 %595 to i64, !dbg !3270
  %597 = select i1 %595, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14.89, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.15.90, i64 0, i64 0), !dbg !3270
  store i8* %597, i8** %11, align 8, !dbg !3272
  br label %originalBB83

originalBB87alteredBB:                            ; preds = %originalBB87, %282
  %598 = load i8*, i8** %15, align 8, !dbg !3273
  %599 = call i32 @c_strcasecmp(i8* %598, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.16.91, i64 0, i64 0)) #13, !dbg !3273
  br label %originalBB87

originalBB91alteredBB:                            ; preds = %originalBB91, %301
  %collatzVaralteredBB = alloca i32
  br label %originalBB91

originalBB95alteredBB:                            ; preds = %originalBB95, %318
  %600 = load i32, i32* @inVal0
  %601 = icmp sgt i32 %600, 1
  br label %originalBB95

originalBB99alteredBB:                            ; preds = %originalBB99, %337
  store i32 46, i32* %collatzVar
  br label %originalBB99

originalBB103alteredBB:                           ; preds = %originalBB103, %354
  %602 = load i8**, i8*** @inVal1
  %603 = getelementptr inbounds i8*, i8** %602, i64 1
  %604 = load i8*, i8** %603
  %_104 = sub i32 0, -1
  %gen105 = mul i32 %_104, -1
  %_106 = sub i32 0, -1
  %gen107 = mul i32 %_106, -1
  %_108 = shl i32 0, -1
  %_109 = shl i32 0, -1
  %_110 = shl i32 0, -1
  %_111 = shl i32 0, -1
  %_112 = sub i32 0, 0
  %gen113 = add i32 %_112, -1
  %605 = add i32 0, -1
  %controlealteredBB = call i32 @controle(i8* %604, i32 %605)
  store i32 %controlealteredBB, i32* %collatzVar
  br label %originalBB103

originalBB117alteredBB:                           ; preds = %originalBB117, %375
  %606 = load i32, i32* %collatzVar
  %607 = icmp sgt i32 %606, 1
  br label %originalBB117

originalBB121alteredBB:                           ; preds = %originalBB121, %394
  %608 = load i32, i32* %collatzVar
  %_122 = sub i32 0, %608
  %gen123 = add i32 %_122, 2
  %_124 = sub i32 0, %608
  %gen125 = add i32 %_124, 2
  %_126 = sub i32 0, %608
  %gen127 = add i32 %_126, 2
  %_128 = shl i32 %608, 2
  %_129 = sub i32 %608, 2
  %gen130 = mul i32 %_129, 2
  %_131 = sub i32 0, %608
  %gen132 = add i32 %_131, 2
  %609 = srem i32 %608, 2
  %610 = icmp eq i32 %609, 0
  br label %originalBB121

originalBB136alteredBB:                           ; preds = %originalBB136, %414
  %611 = load i32, i32* %collatzVar
  %_137 = sub i32 0, %611
  %gen138 = add i32 %_137, 2
  %_139 = sub i32 0, %611
  %gen140 = add i32 %_139, 2
  %_141 = shl i32 %611, 2
  %612 = sdiv i32 %611, 2
  store i32 %612, i32* %collatzVar
  br label %originalBB136

originalBB145alteredBB:                           ; preds = %originalBB145, %433
  %613 = load i32, i32* %collatzVar
  %614 = mul i32 %613, 3
  %_146 = sub i32 %614, 1
  %gen147 = mul i32 %_146, 1
  %_148 = shl i32 %614, 1
  %_149 = shl i32 %614, 1
  %_150 = sub i32 0, %614
  %gen151 = add i32 %_150, 1
  %_152 = sub i32 0, %614
  %gen153 = add i32 %_152, 1
  %_154 = shl i32 %614, 1
  %_155 = sub i32 %614, 1
  %gen156 = mul i32 %_155, 1
  %_157 = sub i32 0, %614
  %gen158 = add i32 %_157, 1
  %_159 = sub i32 0, %614
  %gen160 = add i32 %_159, 1
  %615 = add i32 %614, 1
  store i32 %615, i32* %collatzVar
  br label %originalBB145

originalBB164alteredBB:                           ; preds = %originalBB164, %453
  %616 = load i32, i32* %collatzVar
  %_165 = sub i32 %292, %616
  %gen166 = mul i32 %_165, %616
  %_167 = shl i32 %292, %616
  %_168 = sub i32 0, %292
  %gen169 = add i32 %_168, %616
  %_170 = shl i32 %292, %616
  %617 = sub i32 %292, %616
  %618 = icmp sgt i32 %617, -2
  br label %originalBB164

originalBB174alteredBB:                           ; preds = %originalBB174, %473
  %619 = load i32, i32* %collatzVar
  %_175 = sub i32 0, %292
  %gen176 = add i32 %_175, %619
  %_177 = sub i32 0, %292
  %gen178 = add i32 %_177, %619
  %_179 = sub i32 0, %292
  %gen180 = add i32 %_179, %619
  %_181 = sub i32 %292, %619
  %gen182 = mul i32 %_181, %619
  %620 = add i32 %292, %619
  %621 = icmp slt i32 %620, 2
  br label %originalBB174

originalBB186alteredBB:                           ; preds = %originalBB186, %493
  %622 = load i8*, i8** %12, align 8, !dbg !3275
  %623 = getelementptr inbounds i8, i8* %622, i64 0, !dbg !3275
  %624 = load i8, i8* %623, align 1, !dbg !3275
  %625 = sext i8 %624 to i32, !dbg !3275
  %626 = icmp eq i32 %625, 96, !dbg !3276
  %627 = zext i1 %626 to i64, !dbg !3275
  %628 = select i1 %626, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.17.92, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18.93, i64 0, i64 0), !dbg !3275
  store i8* %628, i8** %11, align 8, !dbg !3277
  br label %originalBB186

originalBB190alteredBB:                           ; preds = %originalBB190, %517
  %629 = load i32, i32* %13, align 4, !dbg !3278
  %630 = icmp eq i32 %629, 9, !dbg !3279
  %631 = zext i1 %630 to i64, !dbg !3278
  %632 = select i1 %630, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.85, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.87, i64 0, i64 0), !dbg !3278
  store i8* %632, i8** %11, align 8, !dbg !3280
  br label %originalBB190

originalBB194alteredBB:                           ; preds = %originalBB194, %538
  %633 = load i8*, i8** %11, align 8, !dbg !3281
  br label %originalBB194
}

; Function Attrs: nounwind readonly
declare dso_local i64 @strlen(i8*) #7

; Function Attrs: nounwind readonly
declare dso_local i32 @memcmp(i8*, i8*, i64) #7

; Function Attrs: nounwind readnone
declare dso_local i16** @__ctype_b_loc() #8

; Function Attrs: nounwind
declare dso_local i32 @iswprint(i32) #2

; Function Attrs: nounwind readonly
declare dso_local i32 @mbsinit(%struct.__mbstate_t*) #7

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quotearg_char(i8*, i8 signext) #4 !dbg !3317 {
  %3 = load i32, i32* @x.41
  %4 = load i32, i32* @y.42
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca i8*, align 8
  %12 = alloca i8, align 1
  store i8* %0, i8** %11, align 8
  call void @llvm.dbg.declare(metadata i8** %11, metadata !3320, metadata !DIExpression()), !dbg !3321
  store i8 %1, i8* %12, align 1
  call void @llvm.dbg.declare(metadata i8* %12, metadata !3322, metadata !DIExpression()), !dbg !3323
  %13 = load i8*, i8** %11, align 8, !dbg !3324
  %14 = load i8, i8* %12, align 1, !dbg !3325
  %15 = call i8* @quotearg_char_mem(i8* %13, i64 -1, i8 signext %14), !dbg !3326
  %16 = load i32, i32* @x.41
  %17 = load i32, i32* @y.42
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i8* %15, !dbg !3327

originalBBalteredBB:                              ; preds = %originalBB, %2
  %24 = alloca i8*, align 8
  %25 = alloca i8, align 1
  store i8* %0, i8** %24, align 8
  call void @llvm.dbg.declare(metadata i8** %24, metadata !3328, metadata !DIExpression()), !dbg !3321
  store i8 %1, i8* %25, align 1
  call void @llvm.dbg.declare(metadata i8* %25, metadata !3360, metadata !DIExpression()), !dbg !3323
  %26 = load i8*, i8** %24, align 8, !dbg !3324
  %27 = load i8, i8* %25, align 1, !dbg !3325
  %28 = call i8* @quotearg_char_mem(i8* %26, i64 -1, i8 signext %27), !dbg !3326
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quotearg_colon(i8*) #4 !dbg !3361 {
  %2 = load i32, i32* @x.43
  %3 = load i32, i32* @y.44
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i8*, align 8
  store i8* %0, i8** %10, align 8
  call void @llvm.dbg.declare(metadata i8** %10, metadata !3364, metadata !DIExpression()), !dbg !3365
  %11 = load i8*, i8** %10, align 8, !dbg !3366
  %12 = call i8* @quotearg_char(i8* %11, i8 signext 58), !dbg !3367
  %13 = load i32, i32* @x.43
  %14 = load i32, i32* @y.44
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i8* %12, !dbg !3368

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca i8*, align 8
  store i8* %0, i8** %21, align 8
  call void @llvm.dbg.declare(metadata i8** %21, metadata !3369, metadata !DIExpression()), !dbg !3365
  %22 = load i8*, i8** %21, align 8, !dbg !3366
  %23 = call i8* @quotearg_char(i8* %22, i8 signext 58), !dbg !3367
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quote_n_mem(i32, i8*, i64) #4 !dbg !3401 {
  %4 = load i32, i32* @x.45
  %5 = load i32, i32* @y.46
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca i32, align 4
  %13 = alloca i8*, align 8
  %14 = alloca i64, align 8
  store i32 %0, i32* %12, align 4
  call void @llvm.dbg.declare(metadata i32* %12, metadata !3404, metadata !DIExpression()), !dbg !3405
  store i8* %1, i8** %13, align 8
  call void @llvm.dbg.declare(metadata i8** %13, metadata !3406, metadata !DIExpression()), !dbg !3407
  store i64 %2, i64* %14, align 8
  call void @llvm.dbg.declare(metadata i64* %14, metadata !3408, metadata !DIExpression()), !dbg !3409
  %15 = load i32, i32* %12, align 4, !dbg !3410
  %16 = load i8*, i8** %13, align 8, !dbg !3411
  %17 = load i64, i64* %14, align 8, !dbg !3412
  %18 = call i8* @quotearg_n_options(i32 %15, i8* %16, i64 %17, %struct.quoting_options* @quote_quoting_options), !dbg !3413
  %19 = load i32, i32* @x.45
  %20 = load i32, i32* @y.46
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i8* %18, !dbg !3414

originalBBalteredBB:                              ; preds = %originalBB, %3
  %27 = alloca i32, align 4
  %28 = alloca i8*, align 8
  %29 = alloca i64, align 8
  store i32 %0, i32* %27, align 4
  call void @llvm.dbg.declare(metadata i32* %27, metadata !3415, metadata !DIExpression()), !dbg !3405
  store i8* %1, i8** %28, align 8
  call void @llvm.dbg.declare(metadata i8** %28, metadata !3447, metadata !DIExpression()), !dbg !3407
  store i64 %2, i64* %29, align 8
  call void @llvm.dbg.declare(metadata i64* %29, metadata !3448, metadata !DIExpression()), !dbg !3409
  %30 = load i32, i32* %27, align 4, !dbg !3410
  %31 = load i8*, i8** %28, align 8, !dbg !3411
  %32 = load i64, i64* %29, align 8, !dbg !3412
  %33 = call i8* @quotearg_n_options(i32 %30, i8* %31, i64 %32, %struct.quoting_options* @quote_quoting_options), !dbg !3413
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quote_n(i32, i8*) #4 !dbg !3449 {
  %3 = load i32, i32* @x.47
  %4 = load i32, i32* @y.48
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca i32, align 4
  %12 = alloca i8*, align 8
  store i32 %0, i32* %11, align 4
  call void @llvm.dbg.declare(metadata i32* %11, metadata !3452, metadata !DIExpression()), !dbg !3453
  store i8* %1, i8** %12, align 8
  call void @llvm.dbg.declare(metadata i8** %12, metadata !3454, metadata !DIExpression()), !dbg !3455
  %13 = load i32, i32* %11, align 4, !dbg !3456
  %14 = load i8*, i8** %12, align 8, !dbg !3457
  %15 = call i8* @quote_n_mem(i32 %13, i8* %14, i64 -1), !dbg !3458
  %16 = load i32, i32* @x.47
  %17 = load i32, i32* @y.48
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i8* %15, !dbg !3459

originalBBalteredBB:                              ; preds = %originalBB, %2
  %24 = alloca i32, align 4
  %25 = alloca i8*, align 8
  store i32 %0, i32* %24, align 4
  call void @llvm.dbg.declare(metadata i32* %24, metadata !3460, metadata !DIExpression()), !dbg !3453
  store i8* %1, i8** %25, align 8
  call void @llvm.dbg.declare(metadata i8** %25, metadata !3492, metadata !DIExpression()), !dbg !3455
  %26 = load i32, i32* %24, align 4, !dbg !3456
  %27 = load i8*, i8** %25, align 8, !dbg !3457
  %28 = call i8* @quote_n_mem(i32 %26, i8* %27, i64 -1), !dbg !3458
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quote(i8*) #4 !dbg !3493 {
  %2 = load i32, i32* @x.49
  %3 = load i32, i32* @y.50
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i8*, align 8
  store i8* %0, i8** %10, align 8
  call void @llvm.dbg.declare(metadata i8** %10, metadata !3496, metadata !DIExpression()), !dbg !3497
  %11 = load i8*, i8** %10, align 8, !dbg !3498
  %12 = call i8* @quote_n(i32 0, i8* %11), !dbg !3499
  %13 = load i32, i32* @x.49
  %14 = load i32, i32* @y.50
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i8* %12, !dbg !3500

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca i8*, align 8
  store i8* %0, i8** %21, align 8
  call void @llvm.dbg.declare(metadata i8** %21, metadata !3501, metadata !DIExpression()), !dbg !3497
  %22 = load i8*, i8** %21, align 8, !dbg !3498
  %23 = call i8* @quote_n(i32 0, i8* %22), !dbg !3499
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @getcon(i8**) #4 !dbg !3533 {
  %2 = load i32, i32* @x.51
  %3 = load i32, i32* @y.52
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i8**, align 8
  store i8** %0, i8*** %10, align 8
  call void @llvm.dbg.declare(metadata i8*** %10, metadata !3539, metadata !DIExpression()), !dbg !3540
  %11 = call i32* @__errno_location() #15, !dbg !3541
  store i32 95, i32* %11, align 4, !dbg !3542
  %12 = load i32, i32* @x.51
  %13 = load i32, i32* @y.52
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32 -1, !dbg !3543

originalBBalteredBB:                              ; preds = %originalBB, %1
  %20 = alloca i8**, align 8
  store i8** %0, i8*** %20, align 8
  call void @llvm.dbg.declare(metadata i8*** %20, metadata !3544, metadata !DIExpression()), !dbg !3540
  %21 = call i32* @__errno_location() #15, !dbg !3541
  store i32 95, i32* %21, align 4, !dbg !3542
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @parse_user_spec(i8*, i32*, i32*, i8**, i8**) #4 !dbg !3547 {
  %6 = load i32, i32* @x.53
  %7 = load i32, i32* @y.54
  %8 = sub i32 %6, 1
  %9 = mul i32 %6, %8
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %7, 10
  %13 = or i1 %11, %12
  br i1 %13, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %5, %originalBBalteredBB
  %14 = alloca i8*, align 8
  %15 = alloca i32*, align 8
  %16 = alloca i32*, align 8
  %17 = alloca i8**, align 8
  %18 = alloca i8**, align 8
  %19 = alloca i8*, align 8
  %20 = alloca i8*, align 8
  %21 = alloca i8*, align 8
  store i8* %0, i8** %14, align 8
  call void @llvm.dbg.declare(metadata i8** %14, metadata !3550, metadata !DIExpression()), !dbg !3551
  store i32* %1, i32** %15, align 8
  call void @llvm.dbg.declare(metadata i32** %15, metadata !3552, metadata !DIExpression()), !dbg !3553
  store i32* %2, i32** %16, align 8
  call void @llvm.dbg.declare(metadata i32** %16, metadata !3554, metadata !DIExpression()), !dbg !3555
  store i8** %3, i8*** %17, align 8
  call void @llvm.dbg.declare(metadata i8*** %17, metadata !3556, metadata !DIExpression()), !dbg !3557
  store i8** %4, i8*** %18, align 8
  call void @llvm.dbg.declare(metadata i8*** %18, metadata !3558, metadata !DIExpression()), !dbg !3559
  call void @llvm.dbg.declare(metadata i8** %19, metadata !3560, metadata !DIExpression()), !dbg !3561
  %22 = load i32*, i32** %16, align 8, !dbg !3562
  %23 = icmp ne i32* %22, null, !dbg !3562
  %24 = load i32, i32* @x.53
  %25 = load i32, i32* @y.54
  %26 = sub i32 %24, 1
  %27 = mul i32 %24, %26
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %29, %30
  br i1 %31, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %23, label %32, label %51, !dbg !3562

32:                                               ; preds = %originalBBpart2
  %33 = load i32, i32* @x.53
  %34 = load i32, i32* @y.54
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %32, %originalBB1alteredBB
  %41 = load i8*, i8** %14, align 8, !dbg !3563
  %42 = call i8* @strchr(i8* %41, i32 58) #13, !dbg !3564
  %43 = load i32, i32* @x.53
  %44 = load i32, i32* @y.54
  %45 = sub i32 %43, 1
  %46 = mul i32 %43, %45
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %48, %49
  br i1 %50, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %68, !dbg !3562

51:                                               ; preds = %originalBBpart2
  %52 = load i32, i32* @x.53
  %53 = load i32, i32* @y.54
  %54 = sub i32 %52, 1
  %55 = mul i32 %52, %54
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %53, 10
  %59 = or i1 %57, %58
  br i1 %59, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %51, %originalBB6alteredBB
  %60 = load i32, i32* @x.53
  %61 = load i32, i32* @y.54
  %62 = sub i32 %60, 1
  %63 = mul i32 %60, %62
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %61, 10
  %67 = or i1 %65, %66
  br i1 %67, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %68, !dbg !3562

68:                                               ; preds = %originalBBpart28, %originalBBpart24
  %69 = phi i8* [ %42, %originalBBpart24 ], [ null, %originalBBpart28 ], !dbg !3562
  %70 = load i32, i32* @x.53
  %71 = load i32, i32* @y.54
  %72 = sub i32 %70, 1
  %73 = mul i32 %70, %72
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %71, 10
  %77 = or i1 %75, %76
  br i1 %77, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %68, %originalBB10alteredBB
  store i8* %69, i8** %19, align 8, !dbg !3561
  call void @llvm.dbg.declare(metadata i8** %20, metadata !3565, metadata !DIExpression()), !dbg !3566
  %78 = load i8*, i8** %14, align 8, !dbg !3567
  %79 = load i8*, i8** %19, align 8, !dbg !3568
  %80 = load i32*, i32** %15, align 8, !dbg !3569
  %81 = load i32*, i32** %16, align 8, !dbg !3570
  %82 = load i8**, i8*** %17, align 8, !dbg !3571
  %83 = load i8**, i8*** %18, align 8, !dbg !3572
  %84 = call i8* @parse_with_separator(i8* %78, i8* %79, i32* %80, i32* %81, i8** %82, i8** %83), !dbg !3573
  store i8* %84, i8** %20, align 8, !dbg !3566
  %85 = load i32*, i32** %16, align 8, !dbg !3574
  %86 = icmp ne i32* %85, null, !dbg !3574
  %87 = load i32, i32* @x.53
  %88 = load i32, i32* @y.54
  %89 = sub i32 %87, 1
  %90 = mul i32 %87, %89
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %88, 10
  %94 = or i1 %92, %93
  br i1 %94, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %86, label %95, label %197, !dbg !3576

95:                                               ; preds = %originalBBpart212
  %96 = load i32, i32* @x.53
  %97 = load i32, i32* @y.54
  %98 = sub i32 %96, 1
  %99 = mul i32 %96, %98
  %100 = urem i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = icmp slt i32 %97, 10
  %103 = or i1 %101, %102
  br i1 %103, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %95, %originalBB14alteredBB
  %104 = load i8*, i8** %19, align 8, !dbg !3577
  %105 = icmp ne i8* %104, null, !dbg !3577
  %106 = load i32, i32* @x.53
  %107 = load i32, i32* @y.54
  %108 = sub i32 %106, 1
  %109 = mul i32 %106, %108
  %110 = urem i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %107, 10
  %113 = or i1 %111, %112
  br i1 %113, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %105, label %197, label %114, !dbg !3578

114:                                              ; preds = %originalBBpart216
  %115 = load i32, i32* @x.53
  %116 = load i32, i32* @y.54
  %117 = sub i32 %115, 1
  %118 = mul i32 %115, %117
  %119 = urem i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = icmp slt i32 %116, 10
  %122 = or i1 %120, %121
  br i1 %122, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %114, %originalBB18alteredBB
  %123 = load i8*, i8** %20, align 8, !dbg !3579
  %124 = icmp ne i8* %123, null, !dbg !3579
  %125 = load i32, i32* @x.53
  %126 = load i32, i32* @y.54
  %127 = sub i32 %125, 1
  %128 = mul i32 %125, %127
  %129 = urem i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = icmp slt i32 %126, 10
  %132 = or i1 %130, %131
  br i1 %132, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br i1 %124, label %133, label %197, !dbg !3580

133:                                              ; preds = %originalBBpart220
  call void @llvm.dbg.declare(metadata i8** %21, metadata !3581, metadata !DIExpression()), !dbg !3583
  %134 = load i8*, i8** %14, align 8, !dbg !3584
  %135 = call i8* @strchr(i8* %134, i32 46) #13, !dbg !3585
  store i8* %135, i8** %21, align 8, !dbg !3583
  %136 = load i8*, i8** %21, align 8, !dbg !3586
  %137 = icmp ne i8* %136, null, !dbg !3586
  br i1 %137, label %138, label %180, !dbg !3588

138:                                              ; preds = %133
  %139 = load i32, i32* @x.53
  %140 = load i32, i32* @y.54
  %141 = sub i32 %139, 1
  %142 = mul i32 %139, %141
  %143 = urem i32 %142, 2
  %144 = icmp eq i32 %143, 0
  %145 = icmp slt i32 %140, 10
  %146 = or i1 %144, %145
  br i1 %146, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %138, %originalBB22alteredBB
  %147 = load i8*, i8** %14, align 8, !dbg !3589
  %148 = load i8*, i8** %21, align 8, !dbg !3590
  %149 = load i32*, i32** %15, align 8, !dbg !3591
  %150 = load i32*, i32** %16, align 8, !dbg !3592
  %151 = load i8**, i8*** %17, align 8, !dbg !3593
  %152 = load i8**, i8*** %18, align 8, !dbg !3594
  %153 = call i8* @parse_with_separator(i8* %147, i8* %148, i32* %149, i32* %150, i8** %151, i8** %152), !dbg !3595
  %154 = icmp ne i8* %153, null, !dbg !3595
  %155 = load i32, i32* @x.53
  %156 = load i32, i32* @y.54
  %157 = sub i32 %155, 1
  %158 = mul i32 %155, %157
  %159 = urem i32 %158, 2
  %160 = icmp eq i32 %159, 0
  %161 = icmp slt i32 %156, 10
  %162 = or i1 %160, %161
  br i1 %162, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br i1 %154, label %180, label %163, !dbg !3596

163:                                              ; preds = %originalBBpart224
  %164 = load i32, i32* @x.53
  %165 = load i32, i32* @y.54
  %166 = sub i32 %164, 1
  %167 = mul i32 %164, %166
  %168 = urem i32 %167, 2
  %169 = icmp eq i32 %168, 0
  %170 = icmp slt i32 %165, 10
  %171 = or i1 %169, %170
  br i1 %171, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %163, %originalBB26alteredBB
  store i8* null, i8** %20, align 8, !dbg !3597
  %172 = load i32, i32* @x.53
  %173 = load i32, i32* @y.54
  %174 = sub i32 %172, 1
  %175 = mul i32 %172, %174
  %176 = urem i32 %175, 2
  %177 = icmp eq i32 %176, 0
  %178 = icmp slt i32 %173, 10
  %179 = or i1 %177, %178
  br i1 %179, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br label %180, !dbg !3598

180:                                              ; preds = %originalBBpart228, %originalBBpart224, %133
  %181 = load i32, i32* @x.53
  %182 = load i32, i32* @y.54
  %183 = sub i32 %181, 1
  %184 = mul i32 %181, %183
  %185 = urem i32 %184, 2
  %186 = icmp eq i32 %185, 0
  %187 = icmp slt i32 %182, 10
  %188 = or i1 %186, %187
  br i1 %188, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %180, %originalBB30alteredBB
  %189 = load i32, i32* @x.53
  %190 = load i32, i32* @y.54
  %191 = sub i32 %189, 1
  %192 = mul i32 %189, %191
  %193 = urem i32 %192, 2
  %194 = icmp eq i32 %193, 0
  %195 = icmp slt i32 %190, 10
  %196 = or i1 %194, %195
  br i1 %196, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br label %197, !dbg !3599

197:                                              ; preds = %originalBBpart232, %originalBBpart220, %originalBBpart216, %originalBBpart212
  %198 = load i32, i32* @x.53
  %199 = load i32, i32* @y.54
  %200 = sub i32 %198, 1
  %201 = mul i32 %198, %200
  %202 = urem i32 %201, 2
  %203 = icmp eq i32 %202, 0
  %204 = icmp slt i32 %199, 10
  %205 = or i1 %203, %204
  br i1 %205, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %197, %originalBB34alteredBB
  %206 = load i8*, i8** %20, align 8, !dbg !3600
  %207 = load i32, i32* @x.53
  %208 = load i32, i32* @y.54
  %209 = sub i32 %207, 1
  %210 = mul i32 %207, %209
  %211 = urem i32 %210, 2
  %212 = icmp eq i32 %211, 0
  %213 = icmp slt i32 %208, 10
  %214 = or i1 %212, %213
  br i1 %214, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  ret i8* %206, !dbg !3601

originalBBalteredBB:                              ; preds = %originalBB, %5
  %215 = alloca i8*, align 8
  %216 = alloca i32*, align 8
  %217 = alloca i32*, align 8
  %218 = alloca i8**, align 8
  %219 = alloca i8**, align 8
  %220 = alloca i8*, align 8
  %221 = alloca i8*, align 8
  %222 = alloca i8*, align 8
  store i8* %0, i8** %215, align 8
  call void @llvm.dbg.declare(metadata i8** %215, metadata !3602, metadata !DIExpression()), !dbg !3551
  store i32* %1, i32** %216, align 8
  call void @llvm.dbg.declare(metadata i32** %216, metadata !3613, metadata !DIExpression()), !dbg !3553
  store i32* %2, i32** %217, align 8
  call void @llvm.dbg.declare(metadata i32** %217, metadata !3614, metadata !DIExpression()), !dbg !3555
  store i8** %3, i8*** %218, align 8
  call void @llvm.dbg.declare(metadata i8*** %218, metadata !3615, metadata !DIExpression()), !dbg !3557
  store i8** %4, i8*** %219, align 8
  call void @llvm.dbg.declare(metadata i8*** %219, metadata !3616, metadata !DIExpression()), !dbg !3559
  call void @llvm.dbg.declare(metadata i8** %220, metadata !3617, metadata !DIExpression()), !dbg !3561
  %223 = load i32*, i32** %217, align 8, !dbg !3562
  %224 = icmp ne i32* %223, null, !dbg !3562
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %32
  %225 = load i8*, i8** %14, align 8, !dbg !3563
  %226 = call i8* @strchr(i8* %225, i32 58) #13, !dbg !3564
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %51
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %68
  store i8* %69, i8** %19, align 8, !dbg !3561
  call void @llvm.dbg.declare(metadata !4, metadata !3618, metadata !DIExpression()), !dbg !3566
  %227 = load i8*, i8** %14, align 8, !dbg !3567
  %228 = load i8*, i8** %19, align 8, !dbg !3568
  %229 = load i32*, i32** %15, align 8, !dbg !3569
  %230 = load i32*, i32** %16, align 8, !dbg !3570
  %231 = load i8**, i8*** %17, align 8, !dbg !3571
  %232 = load i8**, i8*** %18, align 8, !dbg !3572
  %233 = call i8* @parse_with_separator(i8* %227, i8* %228, i32* %229, i32* %230, i8** %231, i8** %232), !dbg !3573
  store i8* %233, i8** %20, align 8, !dbg !3566
  %234 = load i32*, i32** %16, align 8, !dbg !3574
  %235 = icmp ne i32* %234, null, !dbg !3574
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %95
  %236 = load i8*, i8** %19, align 8, !dbg !3577
  %237 = icmp ne i8* %236, null, !dbg !3577
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %114
  %238 = load i8*, i8** %20, align 8, !dbg !3579
  %239 = icmp ne i8* %238, null, !dbg !3579
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %138
  %240 = load i8*, i8** %14, align 8, !dbg !3589
  %241 = load i8*, i8** %21, align 8, !dbg !3590
  %242 = load i32*, i32** %15, align 8, !dbg !3591
  %243 = load i32*, i32** %16, align 8, !dbg !3592
  %244 = load i8**, i8*** %17, align 8, !dbg !3593
  %245 = load i8**, i8*** %18, align 8, !dbg !3594
  %246 = call i8* @parse_with_separator(i8* %240, i8* %241, i32* %242, i32* %243, i8** %244, i8** %245), !dbg !3595
  %247 = icmp ne i8* %246, null, !dbg !3595
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %163
  store i8* null, i8** %20, align 8, !dbg !3597
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %180
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %197
  %248 = load i8*, i8** %20, align 8, !dbg !3600
  br label %originalBB34
}

; Function Attrs: nounwind readonly
declare dso_local i8* @strchr(i8*, i32) #7

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @parse_with_separator(i8*, i8*, i32*, i32*, i8**, i8**) #4 !dbg !178 {
  %7 = load i32, i32* @x.55
  %8 = load i32, i32* @y.56
  %9 = sub i32 %7, 1
  %10 = mul i32 %7, %9
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %8, 10
  %14 = or i1 %12, %13
  br i1 %14, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %6, %originalBBalteredBB
  %15 = alloca i8*, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i32*, align 8
  %18 = alloca i32*, align 8
  %19 = alloca i8**, align 8
  %20 = alloca i8**, align 8
  %21 = alloca i8*, align 8
  %22 = alloca %struct.passwd*, align 8
  %23 = alloca %struct.group*, align 8
  %24 = alloca i8*, align 8
  %25 = alloca i8*, align 8
  %26 = alloca i8*, align 8
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i64, align 8
  %30 = alloca i8, align 1
  %31 = alloca i64, align 8
  %32 = alloca [21 x i8], align 16
  %33 = alloca i64, align 8
  store i8* %0, i8** %15, align 8
  call void @llvm.dbg.declare(metadata i8** %15, metadata !3629, metadata !DIExpression()), !dbg !3630
  store i8* %1, i8** %16, align 8
  call void @llvm.dbg.declare(metadata i8** %16, metadata !3631, metadata !DIExpression()), !dbg !3632
  store i32* %2, i32** %17, align 8
  call void @llvm.dbg.declare(metadata i32** %17, metadata !3633, metadata !DIExpression()), !dbg !3634
  store i32* %3, i32** %18, align 8
  call void @llvm.dbg.declare(metadata i32** %18, metadata !3635, metadata !DIExpression()), !dbg !3636
  store i8** %4, i8*** %19, align 8
  call void @llvm.dbg.declare(metadata i8*** %19, metadata !3637, metadata !DIExpression()), !dbg !3638
  store i8** %5, i8*** %20, align 8
  call void @llvm.dbg.declare(metadata i8*** %20, metadata !3639, metadata !DIExpression()), !dbg !3640
  call void @llvm.dbg.declare(metadata i8** %21, metadata !3641, metadata !DIExpression()), !dbg !3642
  call void @llvm.dbg.declare(metadata %struct.passwd** %22, metadata !3643, metadata !DIExpression()), !dbg !3654
  call void @llvm.dbg.declare(metadata %struct.group** %23, metadata !3655, metadata !DIExpression()), !dbg !3663
  call void @llvm.dbg.declare(metadata i8** %24, metadata !3664, metadata !DIExpression()), !dbg !3665
  call void @llvm.dbg.declare(metadata i8** %25, metadata !3666, metadata !DIExpression()), !dbg !3667
  call void @llvm.dbg.declare(metadata i8** %26, metadata !3668, metadata !DIExpression()), !dbg !3669
  store i8* null, i8** %26, align 8, !dbg !3669
  call void @llvm.dbg.declare(metadata i32* %27, metadata !3670, metadata !DIExpression()), !dbg !3671
  %34 = load i32*, i32** %17, align 8, !dbg !3672
  %35 = load i32, i32* %34, align 4, !dbg !3673
  store i32 %35, i32* %27, align 4, !dbg !3671
  call void @llvm.dbg.declare(metadata i32* %28, metadata !3674, metadata !DIExpression()), !dbg !3675
  %36 = load i32*, i32** %18, align 8, !dbg !3676
  %37 = icmp ne i32* %36, null, !dbg !3676
  %38 = load i32, i32* @x.55
  %39 = load i32, i32* @y.56
  %40 = sub i32 %38, 1
  %41 = mul i32 %38, %40
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %43, %44
  br i1 %45, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %37, label %46, label %65, !dbg !3676

46:                                               ; preds = %originalBBpart2
  %47 = load i32, i32* @x.55
  %48 = load i32, i32* @y.56
  %49 = sub i32 %47, 1
  %50 = mul i32 %47, %49
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %48, 10
  %54 = or i1 %52, %53
  br i1 %54, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %46, %originalBB1alteredBB
  %55 = load i32*, i32** %18, align 8, !dbg !3677
  %56 = load i32, i32* %55, align 4, !dbg !3678
  %57 = load i32, i32* @x.55
  %58 = load i32, i32* @y.56
  %59 = sub i32 %57, 1
  %60 = mul i32 %57, %59
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %58, 10
  %64 = or i1 %62, %63
  br i1 %64, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %82, !dbg !3676

65:                                               ; preds = %originalBBpart2
  %66 = load i32, i32* @x.55
  %67 = load i32, i32* @y.56
  %68 = sub i32 %66, 1
  %69 = mul i32 %66, %68
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %67, 10
  %73 = or i1 %71, %72
  br i1 %73, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %65, %originalBB6alteredBB
  %74 = load i32, i32* @x.55
  %75 = load i32, i32* @y.56
  %76 = sub i32 %74, 1
  %77 = mul i32 %74, %76
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %75, 10
  %81 = or i1 %79, %80
  br i1 %81, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %82, !dbg !3676

82:                                               ; preds = %originalBBpart28, %originalBBpart24
  %83 = phi i32 [ %56, %originalBBpart24 ], [ -1, %originalBBpart28 ], !dbg !3676
  %84 = load i32, i32* @x.55
  %85 = load i32, i32* @y.56
  %86 = sub i32 %84, 1
  %87 = mul i32 %84, %86
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %85, 10
  %91 = or i1 %89, %90
  br i1 %91, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %82, %originalBB10alteredBB
  store i32 %83, i32* %28, align 4, !dbg !3675
  store i8* null, i8** %21, align 8, !dbg !3679
  %92 = load i8**, i8*** %19, align 8, !dbg !3680
  %93 = icmp ne i8** %92, null, !dbg !3680
  %94 = load i32, i32* @x.55
  %95 = load i32, i32* @y.56
  %96 = sub i32 %94, 1
  %97 = mul i32 %94, %96
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %95, 10
  %101 = or i1 %99, %100
  br i1 %101, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %93, label %102, label %120, !dbg !3682

102:                                              ; preds = %originalBBpart212
  %103 = load i32, i32* @x.55
  %104 = load i32, i32* @y.56
  %105 = sub i32 %103, 1
  %106 = mul i32 %103, %105
  %107 = urem i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %104, 10
  %110 = or i1 %108, %109
  br i1 %110, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %102, %originalBB14alteredBB
  %111 = load i8**, i8*** %19, align 8, !dbg !3683
  store i8* null, i8** %111, align 8, !dbg !3684
  %112 = load i32, i32* @x.55
  %113 = load i32, i32* @y.56
  %114 = sub i32 %112, 1
  %115 = mul i32 %112, %114
  %116 = urem i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = icmp slt i32 %113, 10
  %119 = or i1 %117, %118
  br i1 %119, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %120, !dbg !3685

120:                                              ; preds = %originalBBpart216, %originalBBpart212
  %121 = load i32, i32* @x.55
  %122 = load i32, i32* @y.56
  %123 = sub i32 %121, 1
  %124 = mul i32 %121, %123
  %125 = urem i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %122, 10
  %128 = or i1 %126, %127
  br i1 %128, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %120, %originalBB18alteredBB
  %129 = load i8**, i8*** %20, align 8, !dbg !3686
  %130 = icmp ne i8** %129, null, !dbg !3686
  %131 = load i32, i32* @x.55
  %132 = load i32, i32* @y.56
  %133 = sub i32 %131, 1
  %134 = mul i32 %131, %133
  %135 = urem i32 %134, 2
  %136 = icmp eq i32 %135, 0
  %137 = icmp slt i32 %132, 10
  %138 = or i1 %136, %137
  br i1 %138, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br i1 %130, label %139, label %141, !dbg !3688

139:                                              ; preds = %originalBBpart220
  %140 = load i8**, i8*** %20, align 8, !dbg !3689
  store i8* null, i8** %140, align 8, !dbg !3690
  br label %141, !dbg !3691

141:                                              ; preds = %139, %originalBBpart220
  store i8* null, i8** %24, align 8, !dbg !3692
  %142 = load i8*, i8** %16, align 8, !dbg !3693
  %143 = icmp eq i8* %142, null, !dbg !3695
  br i1 %143, label %144, label %200, !dbg !3696

144:                                              ; preds = %141
  %145 = load i32, i32* @x.55
  %146 = load i32, i32* @y.56
  %147 = sub i32 %145, 1
  %148 = mul i32 %145, %147
  %149 = urem i32 %148, 2
  %150 = icmp eq i32 %149, 0
  %151 = icmp slt i32 %146, 10
  %152 = or i1 %150, %151
  br i1 %152, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %144, %originalBB22alteredBB
  %153 = load i8*, i8** %15, align 8, !dbg !3697
  %154 = load i8, i8* %153, align 1, !dbg !3700
  %155 = icmp ne i8 %154, 0, !dbg !3700
  %156 = load i32, i32* @x.55
  %157 = load i32, i32* @y.56
  %158 = sub i32 %156, 1
  %159 = mul i32 %156, %158
  %160 = urem i32 %159, 2
  %161 = icmp eq i32 %160, 0
  %162 = icmp slt i32 %157, 10
  %163 = or i1 %161, %162
  br i1 %163, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br i1 %155, label %164, label %183, !dbg !3701

164:                                              ; preds = %originalBBpart224
  %165 = load i32, i32* @x.55
  %166 = load i32, i32* @y.56
  %167 = sub i32 %165, 1
  %168 = mul i32 %165, %167
  %169 = urem i32 %168, 2
  %170 = icmp eq i32 %169, 0
  %171 = icmp slt i32 %166, 10
  %172 = or i1 %170, %171
  br i1 %172, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %164, %originalBB26alteredBB
  %173 = load i8*, i8** %15, align 8, !dbg !3702
  %174 = call noalias i8* @xstrdup(i8* %173), !dbg !3703
  store i8* %174, i8** %24, align 8, !dbg !3704
  %175 = load i32, i32* @x.55
  %176 = load i32, i32* @y.56
  %177 = sub i32 %175, 1
  %178 = mul i32 %175, %177
  %179 = urem i32 %178, 2
  %180 = icmp eq i32 %179, 0
  %181 = icmp slt i32 %176, 10
  %182 = or i1 %180, %181
  br i1 %182, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br label %183, !dbg !3705

183:                                              ; preds = %originalBBpart228, %originalBBpart224
  %184 = load i32, i32* @x.55
  %185 = load i32, i32* @y.56
  %186 = sub i32 %184, 1
  %187 = mul i32 %184, %186
  %188 = urem i32 %187, 2
  %189 = icmp eq i32 %188, 0
  %190 = icmp slt i32 %185, 10
  %191 = or i1 %189, %190
  br i1 %191, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %183, %originalBB30alteredBB
  %192 = load i32, i32* @x.55
  %193 = load i32, i32* @y.56
  %194 = sub i32 %192, 1
  %195 = mul i32 %192, %194
  %196 = urem i32 %195, 2
  %197 = icmp eq i32 %196, 0
  %198 = icmp slt i32 %193, 10
  %199 = or i1 %197, %198
  br i1 %199, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br label %265, !dbg !3706

200:                                              ; preds = %141
  call void @llvm.dbg.declare(metadata i64* %29, metadata !3707, metadata !DIExpression()), !dbg !3709
  %201 = load i32, i32* @x.55
  %202 = load i32, i32* @y.56
  %203 = sub i32 %201, 1
  %204 = mul i32 %201, %203
  %205 = urem i32 %204, 2
  %206 = icmp eq i32 %205, 0
  %207 = icmp slt i32 %202, 10
  %208 = or i1 %206, %207
  br i1 %208, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %200, %originalBB34alteredBB
  %209 = load i8*, i8** %16, align 8, !dbg !3710
  %210 = load i8*, i8** %15, align 8, !dbg !3711
  %211 = ptrtoint i8* %209 to i64, !dbg !3712
  %212 = ptrtoint i8* %210 to i64, !dbg !3712
  %213 = sub i64 %211, %212, !dbg !3712
  store i64 %213, i64* %29, align 8, !dbg !3709
  %214 = load i64, i64* %29, align 8, !dbg !3713
  %215 = icmp ne i64 %214, 0, !dbg !3715
  %216 = load i32, i32* @x.55
  %217 = load i32, i32* @y.56
  %218 = sub i32 %216, 1
  %219 = mul i32 %216, %218
  %220 = urem i32 %219, 2
  %221 = icmp eq i32 %220, 0
  %222 = icmp slt i32 %217, 10
  %223 = or i1 %221, %222
  br i1 %223, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  br i1 %215, label %224, label %248, !dbg !3716

224:                                              ; preds = %originalBBpart236
  %225 = load i32, i32* @x.55
  %226 = load i32, i32* @y.56
  %227 = sub i32 %225, 1
  %228 = mul i32 %225, %227
  %229 = urem i32 %228, 2
  %230 = icmp eq i32 %229, 0
  %231 = icmp slt i32 %226, 10
  %232 = or i1 %230, %231
  br i1 %232, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %224, %originalBB38alteredBB
  %233 = load i8*, i8** %15, align 8, !dbg !3717
  %234 = load i64, i64* %29, align 8, !dbg !3719
  %235 = add i64 %234, 1, !dbg !3720
  %236 = call i8* @xmemdup(i8* %233, i64 %235), !dbg !3721
  store i8* %236, i8** %24, align 8, !dbg !3722
  %237 = load i8*, i8** %24, align 8, !dbg !3723
  %238 = load i64, i64* %29, align 8, !dbg !3724
  %239 = getelementptr inbounds i8, i8* %237, i64 %238, !dbg !3723
  store i8 0, i8* %239, align 1, !dbg !3725
  %240 = load i32, i32* @x.55
  %241 = load i32, i32* @y.56
  %242 = sub i32 %240, 1
  %243 = mul i32 %240, %242
  %244 = urem i32 %243, 2
  %245 = icmp eq i32 %244, 0
  %246 = icmp slt i32 %241, 10
  %247 = or i1 %245, %246
  br i1 %247, label %originalBBpart249, label %originalBB38alteredBB

originalBBpart249:                                ; preds = %originalBB38
  br label %248, !dbg !3726

248:                                              ; preds = %originalBBpart249, %originalBBpart236
  %249 = load i32, i32* @x.55
  %250 = load i32, i32* @y.56
  %251 = sub i32 %249, 1
  %252 = mul i32 %249, %251
  %253 = urem i32 %252, 2
  %254 = icmp eq i32 %253, 0
  %255 = icmp slt i32 %250, 10
  %256 = or i1 %254, %255
  br i1 %256, label %originalBB51, label %originalBB51alteredBB

originalBB51:                                     ; preds = %248, %originalBB51alteredBB
  %257 = load i32, i32* @x.55
  %258 = load i32, i32* @y.56
  %259 = sub i32 %257, 1
  %260 = mul i32 %257, %259
  %261 = urem i32 %260, 2
  %262 = icmp eq i32 %261, 0
  %263 = icmp slt i32 %258, 10
  %264 = or i1 %262, %263
  br i1 %264, label %originalBBpart253, label %originalBB51alteredBB

originalBBpart253:                                ; preds = %originalBB51
  br label %265

265:                                              ; preds = %originalBBpart253, %originalBBpart232
  %266 = load i32, i32* @x.55
  %267 = load i32, i32* @y.56
  %268 = sub i32 %266, 1
  %269 = mul i32 %266, %268
  %270 = urem i32 %269, 2
  %271 = icmp eq i32 %270, 0
  %272 = icmp slt i32 %267, 10
  %273 = or i1 %271, %272
  br i1 %273, label %originalBB55, label %originalBB55alteredBB

originalBB55:                                     ; preds = %265, %originalBB55alteredBB
  %274 = load i8*, i8** %16, align 8, !dbg !3727
  %275 = icmp eq i8* %274, null, !dbg !3728
  %276 = load i32, i32* @x.55
  %277 = load i32, i32* @y.56
  %278 = sub i32 %276, 1
  %279 = mul i32 %276, %278
  %280 = urem i32 %279, 2
  %281 = icmp eq i32 %280, 0
  %282 = icmp slt i32 %277, 10
  %283 = or i1 %281, %282
  br i1 %283, label %originalBBpart257, label %originalBB55alteredBB

originalBBpart257:                                ; preds = %originalBB55
  br i1 %275, label %306, label %284, !dbg !3729

284:                                              ; preds = %originalBBpart257
  %285 = load i32, i32* @x.55
  %286 = load i32, i32* @y.56
  %287 = sub i32 %285, 1
  %288 = mul i32 %285, %287
  %289 = urem i32 %288, 2
  %290 = icmp eq i32 %289, 0
  %291 = icmp slt i32 %286, 10
  %292 = or i1 %290, %291
  br i1 %292, label %originalBB59, label %originalBB59alteredBB

originalBB59:                                     ; preds = %284, %originalBB59alteredBB
  %293 = load i8*, i8** %16, align 8, !dbg !3730
  %294 = getelementptr inbounds i8, i8* %293, i64 1, !dbg !3731
  %295 = load i8, i8* %294, align 1, !dbg !3732
  %296 = sext i8 %295 to i32, !dbg !3732
  %297 = icmp eq i32 %296, 0, !dbg !3733
  %298 = load i32, i32* @x.55
  %299 = load i32, i32* @y.56
  %300 = sub i32 %298, 1
  %301 = mul i32 %298, %300
  %302 = urem i32 %301, 2
  %303 = icmp eq i32 %302, 0
  %304 = icmp slt i32 %299, 10
  %305 = or i1 %303, %304
  br i1 %305, label %originalBBpart261, label %originalBB59alteredBB

originalBBpart261:                                ; preds = %originalBB59
  br i1 %297, label %306, label %307, !dbg !3727

306:                                              ; preds = %originalBBpart261, %originalBBpart257
  br label %326, !dbg !3727

307:                                              ; preds = %originalBBpart261
  %308 = load i32, i32* @x.55
  %309 = load i32, i32* @y.56
  %310 = sub i32 %308, 1
  %311 = mul i32 %308, %310
  %312 = urem i32 %311, 2
  %313 = icmp eq i32 %312, 0
  %314 = icmp slt i32 %309, 10
  %315 = or i1 %313, %314
  br i1 %315, label %originalBB63, label %originalBB63alteredBB

originalBB63:                                     ; preds = %307, %originalBB63alteredBB
  %316 = load i8*, i8** %16, align 8, !dbg !3734
  %317 = getelementptr inbounds i8, i8* %316, i64 1, !dbg !3735
  %318 = load i32, i32* @x.55
  %319 = load i32, i32* @y.56
  %320 = sub i32 %318, 1
  %321 = mul i32 %318, %320
  %322 = urem i32 %321, 2
  %323 = icmp eq i32 %322, 0
  %324 = icmp slt i32 %319, 10
  %325 = or i1 %323, %324
  br i1 %325, label %originalBBpart265, label %originalBB63alteredBB

originalBBpart265:                                ; preds = %originalBB63
  br label %326, !dbg !3727

326:                                              ; preds = %originalBBpart265, %306
  %327 = phi i8* [ null, %306 ], [ %317, %originalBBpart265 ], !dbg !3727
  store i8* %327, i8** %25, align 8, !dbg !3736
  %328 = load i8*, i8** %24, align 8, !dbg !3737
  %329 = icmp ne i8* %328, null, !dbg !3739
  br i1 %329, label %330, label %899, !dbg !3740

330:                                              ; preds = %326
  %331 = load i32, i32* @x.55
  %332 = load i32, i32* @y.56
  %333 = sub i32 %331, 1
  %334 = mul i32 %331, %333
  %335 = urem i32 %334, 2
  %336 = icmp eq i32 %335, 0
  %337 = icmp slt i32 %332, 10
  %338 = or i1 %336, %337
  br i1 %338, label %originalBB67, label %originalBB67alteredBB

originalBB67:                                     ; preds = %330, %originalBB67alteredBB
  %339 = load i8*, i8** %24, align 8, !dbg !3741
  %340 = load i8, i8* %339, align 1, !dbg !3743
  %341 = sext i8 %340 to i32, !dbg !3743
  %342 = load i32, i32* @x.55
  %343 = load i32, i32* @y.56
  %344 = sub i32 %342, 1
  %345 = mul i32 %342, %344
  %346 = urem i32 %345, 2
  %347 = icmp eq i32 %346, 0
  %348 = icmp slt i32 %343, 10
  %349 = or i1 %347, %348
  br i1 %349, label %originalBBpart269, label %originalBB67alteredBB

originalBBpart269:                                ; preds = %originalBB67
  br label %350, !dbg !3744

350:                                              ; preds = %originalBBpart269
  %351 = load i32, i32* @x.55
  %352 = load i32, i32* @y.56
  %353 = sub i32 %351, 1
  %354 = mul i32 %351, %353
  %355 = urem i32 %354, 2
  %356 = icmp eq i32 %355, 0
  %357 = icmp slt i32 %352, 10
  %358 = or i1 %356, %357
  br i1 %358, label %originalBB71, label %originalBB71alteredBB

originalBB71:                                     ; preds = %350, %originalBB71alteredBB
  %collatzVar = alloca i32
  %359 = load i32, i32* @x.55
  %360 = load i32, i32* @y.56
  %361 = sub i32 %359, 1
  %362 = mul i32 %359, %361
  %363 = urem i32 %362, 2
  %364 = icmp eq i32 %363, 0
  %365 = icmp slt i32 %360, 10
  %366 = or i1 %364, %365
  br i1 %366, label %originalBBpart273, label %originalBB71alteredBB

originalBBpart273:                                ; preds = %originalBB71
  br label %367

367:                                              ; preds = %originalBBpart273
  %368 = load i32, i32* @x.55
  %369 = load i32, i32* @y.56
  %370 = sub i32 %368, 1
  %371 = mul i32 %368, %370
  %372 = urem i32 %371, 2
  %373 = icmp eq i32 %372, 0
  %374 = icmp slt i32 %369, 10
  %375 = or i1 %373, %374
  br i1 %375, label %originalBB75, label %originalBB75alteredBB

originalBB75:                                     ; preds = %367, %originalBB75alteredBB
  %376 = load i32, i32* @inVal0
  %377 = icmp sgt i32 %376, 1
  %378 = load i32, i32* @x.55
  %379 = load i32, i32* @y.56
  %380 = sub i32 %378, 1
  %381 = mul i32 %378, %380
  %382 = urem i32 %381, 2
  %383 = icmp eq i32 %382, 0
  %384 = icmp slt i32 %379, 10
  %385 = or i1 %383, %384
  br i1 %385, label %originalBBpart277, label %originalBB75alteredBB

originalBBpart277:                                ; preds = %originalBB75
  br i1 %377, label %403, label %386

386:                                              ; preds = %originalBBpart277
  %387 = load i32, i32* @x.55
  %388 = load i32, i32* @y.56
  %389 = sub i32 %387, 1
  %390 = mul i32 %387, %389
  %391 = urem i32 %390, 2
  %392 = icmp eq i32 %391, 0
  %393 = icmp slt i32 %388, 10
  %394 = or i1 %392, %393
  br i1 %394, label %originalBB79, label %originalBB79alteredBB

originalBB79:                                     ; preds = %386, %originalBB79alteredBB
  store i32 82, i32* %collatzVar
  %395 = load i32, i32* @x.55
  %396 = load i32, i32* @y.56
  %397 = sub i32 %395, 1
  %398 = mul i32 %395, %397
  %399 = urem i32 %398, 2
  %400 = icmp eq i32 %399, 0
  %401 = icmp slt i32 %396, 10
  %402 = or i1 %400, %401
  br i1 %402, label %originalBBpart281, label %originalBB79alteredBB

originalBBpart281:                                ; preds = %originalBB79
  br label %403

403:                                              ; preds = %originalBBpart281, %originalBBpart277
  %404 = load i32, i32* @x.55
  %405 = load i32, i32* @y.56
  %406 = sub i32 %404, 1
  %407 = mul i32 %404, %406
  %408 = urem i32 %407, 2
  %409 = icmp eq i32 %408, 0
  %410 = icmp slt i32 %405, 10
  %411 = or i1 %409, %410
  br i1 %411, label %originalBB83, label %originalBB83alteredBB

originalBB83:                                     ; preds = %403, %originalBB83alteredBB
  %412 = load i8**, i8*** @inVal1
  %413 = getelementptr inbounds i8*, i8** %412, i64 1
  %414 = load i8*, i8** %413
  %controle = call i32 @controle(i8* %414, i32 43)
  store i32 %controle, i32* %collatzVar
  %415 = load i32, i32* @x.55
  %416 = load i32, i32* @y.56
  %417 = sub i32 %415, 1
  %418 = mul i32 %415, %417
  %419 = urem i32 %418, 2
  %420 = icmp eq i32 %419, 0
  %421 = icmp slt i32 %416, 10
  %422 = or i1 %420, %421
  br i1 %422, label %originalBBpart285, label %originalBB83alteredBB

originalBBpart285:                                ; preds = %originalBB83
  br label %423

423:                                              ; preds = %originalBBpart2143, %originalBBpart2132, %originalBBpart285
  %424 = load i32, i32* @x.55
  %425 = load i32, i32* @y.56
  %426 = sub i32 %424, 1
  %427 = mul i32 %424, %426
  %428 = urem i32 %427, 2
  %429 = icmp eq i32 %428, 0
  %430 = icmp slt i32 %425, 10
  %431 = or i1 %429, %430
  br i1 %431, label %originalBB87, label %originalBB87alteredBB

originalBB87:                                     ; preds = %423, %originalBB87alteredBB
  %432 = load i32, i32* %collatzVar
  %433 = icmp sgt i32 %432, 1
  %434 = load i32, i32* @x.55
  %435 = load i32, i32* @y.56
  %436 = sub i32 %434, 1
  %437 = mul i32 %434, %436
  %438 = urem i32 %437, 2
  %439 = icmp eq i32 %438, 0
  %440 = icmp slt i32 %435, 10
  %441 = or i1 %439, %440
  br i1 %441, label %originalBBpart289, label %originalBB87alteredBB

originalBBpart289:                                ; preds = %originalBB87
  br i1 %433, label %442, label %558

442:                                              ; preds = %originalBBpart289
  %443 = load i32, i32* @x.55
  %444 = load i32, i32* @y.56
  %445 = sub i32 %443, 1
  %446 = mul i32 %443, %445
  %447 = urem i32 %446, 2
  %448 = icmp eq i32 %447, 0
  %449 = icmp slt i32 %444, 10
  %450 = or i1 %448, %449
  br i1 %450, label %originalBB91, label %originalBB91alteredBB

originalBB91:                                     ; preds = %442, %originalBB91alteredBB
  %451 = load i32, i32* %collatzVar
  %452 = srem i32 %451, 2
  %453 = icmp eq i32 %452, 0
  %454 = load i32, i32* @x.55
  %455 = load i32, i32* @y.56
  %456 = sub i32 %454, 1
  %457 = mul i32 %454, %456
  %458 = urem i32 %457, 2
  %459 = icmp eq i32 %458, 0
  %460 = icmp slt i32 %455, 10
  %461 = or i1 %459, %460
  br i1 %461, label %originalBBpart298, label %originalBB91alteredBB

originalBBpart298:                                ; preds = %originalBB91
  br i1 %453, label %462, label %481

462:                                              ; preds = %originalBBpart298
  %463 = load i32, i32* @x.55
  %464 = load i32, i32* @y.56
  %465 = sub i32 %463, 1
  %466 = mul i32 %463, %465
  %467 = urem i32 %466, 2
  %468 = icmp eq i32 %467, 0
  %469 = icmp slt i32 %464, 10
  %470 = or i1 %468, %469
  br i1 %470, label %originalBB100, label %originalBB100alteredBB

originalBB100:                                    ; preds = %462, %originalBB100alteredBB
  %471 = load i32, i32* %collatzVar
  %472 = sdiv i32 %471, 2
  store i32 %472, i32* %collatzVar
  %473 = load i32, i32* @x.55
  %474 = load i32, i32* @y.56
  %475 = sub i32 %473, 1
  %476 = mul i32 %473, %475
  %477 = urem i32 %476, 2
  %478 = icmp eq i32 %477, 0
  %479 = icmp slt i32 %474, 10
  %480 = or i1 %478, %479
  br i1 %480, label %originalBBpart2110, label %originalBB100alteredBB

originalBBpart2110:                               ; preds = %originalBB100
  br label %501

481:                                              ; preds = %originalBBpart298
  %482 = load i32, i32* @x.55
  %483 = load i32, i32* @y.56
  %484 = sub i32 %482, 1
  %485 = mul i32 %482, %484
  %486 = urem i32 %485, 2
  %487 = icmp eq i32 %486, 0
  %488 = icmp slt i32 %483, 10
  %489 = or i1 %487, %488
  br i1 %489, label %originalBB112, label %originalBB112alteredBB

originalBB112:                                    ; preds = %481, %originalBB112alteredBB
  %490 = load i32, i32* %collatzVar
  %491 = mul i32 %490, 3
  %492 = add i32 %491, 1
  store i32 %492, i32* %collatzVar
  %493 = load i32, i32* @x.55
  %494 = load i32, i32* @y.56
  %495 = sub i32 %493, 1
  %496 = mul i32 %493, %495
  %497 = urem i32 %496, 2
  %498 = icmp eq i32 %497, 0
  %499 = icmp slt i32 %494, 10
  %500 = or i1 %498, %499
  br i1 %500, label %originalBBpart2124, label %originalBB112alteredBB

originalBBpart2124:                               ; preds = %originalBB112
  br label %501

501:                                              ; preds = %originalBBpart2124, %originalBBpart2110
  %502 = load i32, i32* @x.55
  %503 = load i32, i32* @y.56
  %504 = sub i32 %502, 1
  %505 = mul i32 %502, %504
  %506 = urem i32 %505, 2
  %507 = icmp eq i32 %506, 0
  %508 = icmp slt i32 %503, 10
  %509 = or i1 %507, %508
  br i1 %509, label %originalBB126, label %originalBB126alteredBB

originalBB126:                                    ; preds = %501, %originalBB126alteredBB
  %510 = load i32, i32* %collatzVar
  %511 = sub i32 %341, %510
  %512 = icmp sgt i32 %511, 41
  %513 = load i32, i32* @x.55
  %514 = load i32, i32* @y.56
  %515 = sub i32 %513, 1
  %516 = mul i32 %513, %515
  %517 = urem i32 %516, 2
  %518 = icmp eq i32 %517, 0
  %519 = icmp slt i32 %514, 10
  %520 = or i1 %518, %519
  br i1 %520, label %originalBBpart2132, label %originalBB126alteredBB

originalBBpart2132:                               ; preds = %originalBB126
  br i1 %512, label %521, label %423

521:                                              ; preds = %originalBBpart2132
  %522 = load i32, i32* @x.55
  %523 = load i32, i32* @y.56
  %524 = sub i32 %522, 1
  %525 = mul i32 %522, %524
  %526 = urem i32 %525, 2
  %527 = icmp eq i32 %526, 0
  %528 = icmp slt i32 %523, 10
  %529 = or i1 %527, %528
  br i1 %529, label %originalBB134, label %originalBB134alteredBB

originalBB134:                                    ; preds = %521, %originalBB134alteredBB
  %530 = load i32, i32* %collatzVar
  %531 = add i32 %341, %530
  %532 = icmp slt i32 %531, 45
  %533 = load i32, i32* @x.55
  %534 = load i32, i32* @y.56
  %535 = sub i32 %533, 1
  %536 = mul i32 %533, %535
  %537 = urem i32 %536, 2
  %538 = icmp eq i32 %537, 0
  %539 = icmp slt i32 %534, 10
  %540 = or i1 %538, %539
  br i1 %540, label %originalBBpart2143, label %originalBB134alteredBB

originalBBpart2143:                               ; preds = %originalBB134
  br i1 %532, label %541, label %423

541:                                              ; preds = %originalBBpart2143
  %542 = load i32, i32* @x.55
  %543 = load i32, i32* @y.56
  %544 = sub i32 %542, 1
  %545 = mul i32 %542, %544
  %546 = urem i32 %545, 2
  %547 = icmp eq i32 %546, 0
  %548 = icmp slt i32 %543, 10
  %549 = or i1 %547, %548
  br i1 %549, label %originalBB145, label %originalBB145alteredBB

originalBB145:                                    ; preds = %541, %originalBB145alteredBB
  %550 = load i32, i32* @x.55
  %551 = load i32, i32* @y.56
  %552 = sub i32 %550, 1
  %553 = mul i32 %550, %552
  %554 = urem i32 %553, 2
  %555 = icmp eq i32 %554, 0
  %556 = icmp slt i32 %551, 10
  %557 = or i1 %555, %556
  br i1 %557, label %originalBBpart2147, label %originalBB145alteredBB

originalBBpart2147:                               ; preds = %originalBB145
  br label %577, !dbg !3743

558:                                              ; preds = %originalBBpart289
  %559 = load i32, i32* @x.55
  %560 = load i32, i32* @y.56
  %561 = sub i32 %559, 1
  %562 = mul i32 %559, %561
  %563 = urem i32 %562, 2
  %564 = icmp eq i32 %563, 0
  %565 = icmp slt i32 %560, 10
  %566 = or i1 %564, %565
  br i1 %566, label %originalBB149, label %originalBB149alteredBB

originalBB149:                                    ; preds = %558, %originalBB149alteredBB
  %567 = load i8*, i8** %24, align 8, !dbg !3745
  %568 = call %struct.passwd* @getpwnam(i8* %567), !dbg !3746
  %569 = load i32, i32* @x.55
  %570 = load i32, i32* @y.56
  %571 = sub i32 %569, 1
  %572 = mul i32 %569, %571
  %573 = urem i32 %572, 2
  %574 = icmp eq i32 %573, 0
  %575 = icmp slt i32 %570, 10
  %576 = or i1 %574, %575
  br i1 %576, label %originalBBpart2151, label %originalBB149alteredBB

originalBBpart2151:                               ; preds = %originalBB149
  br label %577, !dbg !3743

577:                                              ; preds = %originalBBpart2151, %originalBBpart2147
  %578 = phi %struct.passwd* [ null, %originalBBpart2147 ], [ %568, %originalBBpart2151 ], !dbg !3743
  %579 = load i32, i32* @x.55
  %580 = load i32, i32* @y.56
  %581 = sub i32 %579, 1
  %582 = mul i32 %579, %581
  %583 = urem i32 %582, 2
  %584 = icmp eq i32 %583, 0
  %585 = icmp slt i32 %580, 10
  %586 = or i1 %584, %585
  br i1 %586, label %originalBB153, label %originalBB153alteredBB

originalBB153:                                    ; preds = %577, %originalBB153alteredBB
  store %struct.passwd* %578, %struct.passwd** %22, align 8, !dbg !3747
  %587 = load %struct.passwd*, %struct.passwd** %22, align 8, !dbg !3748
  %588 = icmp eq %struct.passwd* %587, null, !dbg !3750
  %589 = load i32, i32* @x.55
  %590 = load i32, i32* @y.56
  %591 = sub i32 %589, 1
  %592 = mul i32 %589, %591
  %593 = urem i32 %592, 2
  %594 = icmp eq i32 %593, 0
  %595 = icmp slt i32 %590, 10
  %596 = or i1 %594, %595
  br i1 %596, label %originalBBpart2155, label %originalBB153alteredBB

originalBBpart2155:                               ; preds = %originalBB153
  br i1 %588, label %597, label %740, !dbg !3751

597:                                              ; preds = %originalBBpart2155
  call void @llvm.dbg.declare(metadata i8* %30, metadata !3752, metadata !DIExpression()), !dbg !3754
  %598 = load i32, i32* @x.55
  %599 = load i32, i32* @y.56
  %600 = sub i32 %598, 1
  %601 = mul i32 %598, %600
  %602 = urem i32 %601, 2
  %603 = icmp eq i32 %602, 0
  %604 = icmp slt i32 %599, 10
  %605 = or i1 %603, %604
  br i1 %605, label %originalBB157, label %originalBB157alteredBB

originalBB157:                                    ; preds = %597, %originalBB157alteredBB
  %606 = load i8*, i8** %16, align 8, !dbg !3755
  %607 = icmp ne i8* %606, null, !dbg !3756
  %608 = load i32, i32* @x.55
  %609 = load i32, i32* @y.56
  %610 = sub i32 %608, 1
  %611 = mul i32 %608, %610
  %612 = urem i32 %611, 2
  %613 = icmp eq i32 %612, 0
  %614 = icmp slt i32 %609, 10
  %615 = or i1 %613, %614
  br i1 %615, label %originalBBpart2159, label %originalBB157alteredBB

originalBBpart2159:                               ; preds = %originalBB157
  br i1 %607, label %616, label %635, !dbg !3757

616:                                              ; preds = %originalBBpart2159
  %617 = load i32, i32* @x.55
  %618 = load i32, i32* @y.56
  %619 = sub i32 %617, 1
  %620 = mul i32 %617, %619
  %621 = urem i32 %620, 2
  %622 = icmp eq i32 %621, 0
  %623 = icmp slt i32 %618, 10
  %624 = or i1 %622, %623
  br i1 %624, label %originalBB161, label %originalBB161alteredBB

originalBB161:                                    ; preds = %616, %originalBB161alteredBB
  %625 = load i8*, i8** %25, align 8, !dbg !3758
  %626 = icmp eq i8* %625, null, !dbg !3759
  %627 = load i32, i32* @x.55
  %628 = load i32, i32* @y.56
  %629 = sub i32 %627, 1
  %630 = mul i32 %627, %629
  %631 = urem i32 %630, 2
  %632 = icmp eq i32 %631, 0
  %633 = icmp slt i32 %628, 10
  %634 = or i1 %632, %633
  br i1 %634, label %originalBBpart2163, label %originalBB161alteredBB

originalBBpart2163:                               ; preds = %originalBB161
  br label %635

635:                                              ; preds = %originalBBpart2163, %originalBBpart2159
  %636 = phi i1 [ false, %originalBBpart2159 ], [ %626, %originalBBpart2163 ], !dbg !3760
  %637 = load i32, i32* @x.55
  %638 = load i32, i32* @y.56
  %639 = sub i32 %637, 1
  %640 = mul i32 %637, %639
  %641 = urem i32 %640, 2
  %642 = icmp eq i32 %641, 0
  %643 = icmp slt i32 %638, 10
  %644 = or i1 %642, %643
  br i1 %644, label %originalBB165, label %originalBB165alteredBB

originalBB165:                                    ; preds = %635, %originalBB165alteredBB
  %645 = zext i1 %636 to i8, !dbg !3754
  store i8 %645, i8* %30, align 1, !dbg !3754
  %646 = load i8, i8* %30, align 1, !dbg !3761
  %647 = trunc i8 %646 to i1, !dbg !3761
  %648 = load i32, i32* @x.55
  %649 = load i32, i32* @y.56
  %650 = sub i32 %648, 1
  %651 = mul i32 %648, %650
  %652 = urem i32 %651, 2
  %653 = icmp eq i32 %652, 0
  %654 = icmp slt i32 %649, 10
  %655 = or i1 %653, %654
  br i1 %655, label %originalBBpart2167, label %originalBB165alteredBB

originalBBpart2167:                               ; preds = %originalBB165
  br i1 %647, label %656, label %674, !dbg !3763

656:                                              ; preds = %originalBBpart2167
  %657 = load i32, i32* @x.55
  %658 = load i32, i32* @y.56
  %659 = sub i32 %657, 1
  %660 = mul i32 %657, %659
  %661 = urem i32 %660, 2
  %662 = icmp eq i32 %661, 0
  %663 = icmp slt i32 %658, 10
  %664 = or i1 %662, %663
  br i1 %664, label %originalBB169, label %originalBB169alteredBB

originalBB169:                                    ; preds = %656, %originalBB169alteredBB
  %665 = load i8*, i8** @parse_with_separator.E_bad_spec, align 8, !dbg !3764
  store i8* %665, i8** %21, align 8, !dbg !3766
  %666 = load i32, i32* @x.55
  %667 = load i32, i32* @y.56
  %668 = sub i32 %666, 1
  %669 = mul i32 %666, %668
  %670 = urem i32 %669, 2
  %671 = icmp eq i32 %670, 0
  %672 = icmp slt i32 %667, 10
  %673 = or i1 %671, %672
  br i1 %673, label %originalBBpart2171, label %originalBB169alteredBB

originalBBpart2171:                               ; preds = %originalBB169
  br label %723, !dbg !3767

674:                                              ; preds = %originalBBpart2167
  call void @llvm.dbg.declare(metadata i64* %31, metadata !3768, metadata !DIExpression()), !dbg !3770
  %675 = load i32, i32* @x.55
  %676 = load i32, i32* @y.56
  %677 = sub i32 %675, 1
  %678 = mul i32 %675, %677
  %679 = urem i32 %678, 2
  %680 = icmp eq i32 %679, 0
  %681 = icmp slt i32 %676, 10
  %682 = or i1 %680, %681
  br i1 %682, label %originalBB173, label %originalBB173alteredBB

originalBB173:                                    ; preds = %674, %originalBB173alteredBB
  %683 = load i8*, i8** %24, align 8, !dbg !3771
  %684 = call i32 @xstrtoul(i8* %683, i8** null, i32 10, i64* %31, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3.102, i64 0, i64 0)), !dbg !3773
  %685 = icmp eq i32 %684, 0, !dbg !3774
  %686 = load i32, i32* @x.55
  %687 = load i32, i32* @y.56
  %688 = sub i32 %686, 1
  %689 = mul i32 %686, %688
  %690 = urem i32 %689, 2
  %691 = icmp eq i32 %690, 0
  %692 = icmp slt i32 %687, 10
  %693 = or i1 %691, %692
  br i1 %693, label %originalBBpart2175, label %originalBB173alteredBB

originalBBpart2175:                               ; preds = %originalBB173
  br i1 %685, label %694, label %720, !dbg !3775

694:                                              ; preds = %originalBBpart2175
  %695 = load i64, i64* %31, align 8, !dbg !3776
  %696 = icmp ule i64 %695, 4294967295, !dbg !3777
  br i1 %696, label %697, label %720, !dbg !3778

697:                                              ; preds = %694
  %698 = load i64, i64* %31, align 8, !dbg !3779
  %699 = trunc i64 %698 to i32, !dbg !3780
  %700 = icmp ne i32 %699, -1, !dbg !3781
  br i1 %700, label %701, label %720, !dbg !3782

701:                                              ; preds = %697
  %702 = load i32, i32* @x.55
  %703 = load i32, i32* @y.56
  %704 = sub i32 %702, 1
  %705 = mul i32 %702, %704
  %706 = urem i32 %705, 2
  %707 = icmp eq i32 %706, 0
  %708 = icmp slt i32 %703, 10
  %709 = or i1 %707, %708
  br i1 %709, label %originalBB177, label %originalBB177alteredBB

originalBB177:                                    ; preds = %701, %originalBB177alteredBB
  %710 = load i64, i64* %31, align 8, !dbg !3783
  %711 = trunc i64 %710 to i32, !dbg !3783
  store i32 %711, i32* %27, align 4, !dbg !3784
  %712 = load i32, i32* @x.55
  %713 = load i32, i32* @y.56
  %714 = sub i32 %712, 1
  %715 = mul i32 %712, %714
  %716 = urem i32 %715, 2
  %717 = icmp eq i32 %716, 0
  %718 = icmp slt i32 %713, 10
  %719 = or i1 %717, %718
  br i1 %719, label %originalBBpart2179, label %originalBB177alteredBB

originalBBpart2179:                               ; preds = %originalBB177
  br label %722, !dbg !3785

720:                                              ; preds = %697, %694, %originalBBpart2175
  %721 = load i8*, i8** @parse_with_separator.E_invalid_user, align 8, !dbg !3786
  store i8* %721, i8** %21, align 8, !dbg !3787
  br label %722

722:                                              ; preds = %720, %originalBBpart2179
  br label %723

723:                                              ; preds = %722, %originalBBpart2171
  %724 = load i32, i32* @x.55
  %725 = load i32, i32* @y.56
  %726 = sub i32 %724, 1
  %727 = mul i32 %724, %726
  %728 = urem i32 %727, 2
  %729 = icmp eq i32 %728, 0
  %730 = icmp slt i32 %725, 10
  %731 = or i1 %729, %730
  br i1 %731, label %originalBB181, label %originalBB181alteredBB

originalBB181:                                    ; preds = %723, %originalBB181alteredBB
  %732 = load i32, i32* @x.55
  %733 = load i32, i32* @y.56
  %734 = sub i32 %732, 1
  %735 = mul i32 %732, %734
  %736 = urem i32 %735, 2
  %737 = icmp eq i32 %736, 0
  %738 = icmp slt i32 %733, 10
  %739 = or i1 %737, %738
  br i1 %739, label %originalBBpart2183, label %originalBB181alteredBB

originalBBpart2183:                               ; preds = %originalBB181
  br label %882, !dbg !3788

740:                                              ; preds = %originalBBpart2155
  %741 = load i32, i32* @x.55
  %742 = load i32, i32* @y.56
  %743 = sub i32 %741, 1
  %744 = mul i32 %741, %743
  %745 = urem i32 %744, 2
  %746 = icmp eq i32 %745, 0
  %747 = icmp slt i32 %742, 10
  %748 = or i1 %746, %747
  br i1 %748, label %originalBB185, label %originalBB185alteredBB

originalBB185:                                    ; preds = %740, %originalBB185alteredBB
  %749 = load %struct.passwd*, %struct.passwd** %22, align 8, !dbg !3789
  %750 = getelementptr inbounds %struct.passwd, %struct.passwd* %749, i32 0, i32 2, !dbg !3791
  %751 = load i32, i32* %750, align 8, !dbg !3791
  store i32 %751, i32* %27, align 4, !dbg !3792
  %752 = load i8*, i8** %25, align 8, !dbg !3793
  %753 = icmp eq i8* %752, null, !dbg !3795
  %754 = load i32, i32* @x.55
  %755 = load i32, i32* @y.56
  %756 = sub i32 %754, 1
  %757 = mul i32 %754, %756
  %758 = urem i32 %757, 2
  %759 = icmp eq i32 %758, 0
  %760 = icmp slt i32 %755, 10
  %761 = or i1 %759, %760
  br i1 %761, label %originalBBpart2187, label %originalBB185alteredBB

originalBBpart2187:                               ; preds = %originalBB185
  br i1 %753, label %762, label %865, !dbg !3796

762:                                              ; preds = %originalBBpart2187
  %763 = load i32, i32* @x.55
  %764 = load i32, i32* @y.56
  %765 = sub i32 %763, 1
  %766 = mul i32 %763, %765
  %767 = urem i32 %766, 2
  %768 = icmp eq i32 %767, 0
  %769 = icmp slt i32 %764, 10
  %770 = or i1 %768, %769
  br i1 %770, label %originalBB189, label %originalBB189alteredBB

originalBB189:                                    ; preds = %762, %originalBB189alteredBB
  %771 = load i8*, i8** %16, align 8, !dbg !3797
  %772 = icmp ne i8* %771, null, !dbg !3798
  %773 = load i32, i32* @x.55
  %774 = load i32, i32* @y.56
  %775 = sub i32 %773, 1
  %776 = mul i32 %773, %775
  %777 = urem i32 %776, 2
  %778 = icmp eq i32 %777, 0
  %779 = icmp slt i32 %774, 10
  %780 = or i1 %778, %779
  br i1 %780, label %originalBBpart2191, label %originalBB189alteredBB

originalBBpart2191:                               ; preds = %originalBB189
  br i1 %772, label %781, label %865, !dbg !3799

781:                                              ; preds = %originalBBpart2191
  call void @llvm.dbg.declare(metadata [21 x i8]* %32, metadata !3800, metadata !DIExpression()), !dbg !3802
  %782 = load i32, i32* @x.55
  %783 = load i32, i32* @y.56
  %784 = sub i32 %782, 1
  %785 = mul i32 %782, %784
  %786 = urem i32 %785, 2
  %787 = icmp eq i32 %786, 0
  %788 = icmp slt i32 %783, 10
  %789 = or i1 %787, %788
  br i1 %789, label %originalBB193, label %originalBB193alteredBB

originalBB193:                                    ; preds = %781, %originalBB193alteredBB
  %790 = load %struct.passwd*, %struct.passwd** %22, align 8, !dbg !3803
  %791 = getelementptr inbounds %struct.passwd, %struct.passwd* %790, i32 0, i32 3, !dbg !3804
  %792 = load i32, i32* %791, align 4, !dbg !3804
  store i32 %792, i32* %28, align 4, !dbg !3805
  %793 = load i32, i32* %28, align 4, !dbg !3806
  %794 = call %struct.group* @getgrgid(i32 %793), !dbg !3807
  store %struct.group* %794, %struct.group** %23, align 8, !dbg !3808
  %795 = load %struct.group*, %struct.group** %23, align 8, !dbg !3809
  %796 = icmp ne %struct.group* %795, null, !dbg !3809
  %797 = load i32, i32* @x.55
  %798 = load i32, i32* @y.56
  %799 = sub i32 %797, 1
  %800 = mul i32 %797, %799
  %801 = urem i32 %800, 2
  %802 = icmp eq i32 %801, 0
  %803 = icmp slt i32 %798, 10
  %804 = or i1 %802, %803
  br i1 %804, label %originalBBpart2195, label %originalBB193alteredBB

originalBBpart2195:                               ; preds = %originalBB193
  br i1 %796, label %805, label %825, !dbg !3809

805:                                              ; preds = %originalBBpart2195
  %806 = load i32, i32* @x.55
  %807 = load i32, i32* @y.56
  %808 = sub i32 %806, 1
  %809 = mul i32 %806, %808
  %810 = urem i32 %809, 2
  %811 = icmp eq i32 %810, 0
  %812 = icmp slt i32 %807, 10
  %813 = or i1 %811, %812
  br i1 %813, label %originalBB197, label %originalBB197alteredBB

originalBB197:                                    ; preds = %805, %originalBB197alteredBB
  %814 = load %struct.group*, %struct.group** %23, align 8, !dbg !3810
  %815 = getelementptr inbounds %struct.group, %struct.group* %814, i32 0, i32 0, !dbg !3811
  %816 = load i8*, i8** %815, align 8, !dbg !3811
  %817 = load i32, i32* @x.55
  %818 = load i32, i32* @y.56
  %819 = sub i32 %817, 1
  %820 = mul i32 %817, %819
  %821 = urem i32 %820, 2
  %822 = icmp eq i32 %821, 0
  %823 = icmp slt i32 %818, 10
  %824 = or i1 %822, %823
  br i1 %824, label %originalBBpart2199, label %originalBB197alteredBB

originalBBpart2199:                               ; preds = %originalBB197
  br label %846, !dbg !3809

825:                                              ; preds = %originalBBpart2195
  %826 = load i32, i32* @x.55
  %827 = load i32, i32* @y.56
  %828 = sub i32 %826, 1
  %829 = mul i32 %826, %828
  %830 = urem i32 %829, 2
  %831 = icmp eq i32 %830, 0
  %832 = icmp slt i32 %827, 10
  %833 = or i1 %831, %832
  br i1 %833, label %originalBB201, label %originalBB201alteredBB

originalBB201:                                    ; preds = %825, %originalBB201alteredBB
  %834 = load i32, i32* %28, align 4, !dbg !3812
  %835 = zext i32 %834 to i64, !dbg !3812
  %836 = getelementptr inbounds [21 x i8], [21 x i8]* %32, i64 0, i64 0, !dbg !3813
  %837 = call i8* @umaxtostr(i64 %835, i8* %836), !dbg !3814
  %838 = load i32, i32* @x.55
  %839 = load i32, i32* @y.56
  %840 = sub i32 %838, 1
  %841 = mul i32 %838, %840
  %842 = urem i32 %841, 2
  %843 = icmp eq i32 %842, 0
  %844 = icmp slt i32 %839, 10
  %845 = or i1 %843, %844
  br i1 %845, label %originalBBpart2203, label %originalBB201alteredBB

originalBBpart2203:                               ; preds = %originalBB201
  br label %846, !dbg !3809

846:                                              ; preds = %originalBBpart2203, %originalBBpart2199
  %847 = phi i8* [ %816, %originalBBpart2199 ], [ %837, %originalBBpart2203 ], !dbg !3809
  %848 = load i32, i32* @x.55
  %849 = load i32, i32* @y.56
  %850 = sub i32 %848, 1
  %851 = mul i32 %848, %850
  %852 = urem i32 %851, 2
  %853 = icmp eq i32 %852, 0
  %854 = icmp slt i32 %849, 10
  %855 = or i1 %853, %854
  br i1 %855, label %originalBB205, label %originalBB205alteredBB

originalBB205:                                    ; preds = %846, %originalBB205alteredBB
  %856 = call noalias i8* @xstrdup(i8* %847), !dbg !3815
  store i8* %856, i8** %26, align 8, !dbg !3816
  call void @endgrent(), !dbg !3817
  %857 = load i32, i32* @x.55
  %858 = load i32, i32* @y.56
  %859 = sub i32 %857, 1
  %860 = mul i32 %857, %859
  %861 = urem i32 %860, 2
  %862 = icmp eq i32 %861, 0
  %863 = icmp slt i32 %858, 10
  %864 = or i1 %862, %863
  br i1 %864, label %originalBBpart2207, label %originalBB205alteredBB

originalBBpart2207:                               ; preds = %originalBB205
  br label %865, !dbg !3818

865:                                              ; preds = %originalBBpart2207, %originalBBpart2191, %originalBBpart2187
  %866 = load i32, i32* @x.55
  %867 = load i32, i32* @y.56
  %868 = sub i32 %866, 1
  %869 = mul i32 %866, %868
  %870 = urem i32 %869, 2
  %871 = icmp eq i32 %870, 0
  %872 = icmp slt i32 %867, 10
  %873 = or i1 %871, %872
  br i1 %873, label %originalBB209, label %originalBB209alteredBB

originalBB209:                                    ; preds = %865, %originalBB209alteredBB
  %874 = load i32, i32* @x.55
  %875 = load i32, i32* @y.56
  %876 = sub i32 %874, 1
  %877 = mul i32 %874, %876
  %878 = urem i32 %877, 2
  %879 = icmp eq i32 %878, 0
  %880 = icmp slt i32 %875, 10
  %881 = or i1 %879, %880
  br i1 %881, label %originalBBpart2211, label %originalBB209alteredBB

originalBBpart2211:                               ; preds = %originalBB209
  br label %882

882:                                              ; preds = %originalBBpart2211, %originalBBpart2183
  %883 = load i32, i32* @x.55
  %884 = load i32, i32* @y.56
  %885 = sub i32 %883, 1
  %886 = mul i32 %883, %885
  %887 = urem i32 %886, 2
  %888 = icmp eq i32 %887, 0
  %889 = icmp slt i32 %884, 10
  %890 = or i1 %888, %889
  br i1 %890, label %originalBB213, label %originalBB213alteredBB

originalBB213:                                    ; preds = %882, %originalBB213alteredBB
  call void @endpwent(), !dbg !3819
  %891 = load i32, i32* @x.55
  %892 = load i32, i32* @y.56
  %893 = sub i32 %891, 1
  %894 = mul i32 %891, %893
  %895 = urem i32 %894, 2
  %896 = icmp eq i32 %895, 0
  %897 = icmp slt i32 %892, 10
  %898 = or i1 %896, %897
  br i1 %898, label %originalBBpart2215, label %originalBB213alteredBB

originalBBpart2215:                               ; preds = %originalBB213
  br label %899, !dbg !3820

899:                                              ; preds = %originalBBpart2215, %326
  %900 = load i32, i32* @x.55
  %901 = load i32, i32* @y.56
  %902 = sub i32 %900, 1
  %903 = mul i32 %900, %902
  %904 = urem i32 %903, 2
  %905 = icmp eq i32 %904, 0
  %906 = icmp slt i32 %901, 10
  %907 = or i1 %905, %906
  br i1 %907, label %originalBB217, label %originalBB217alteredBB

originalBB217:                                    ; preds = %899, %originalBB217alteredBB
  %908 = load i8*, i8** %25, align 8, !dbg !3821
  %909 = icmp ne i8* %908, null, !dbg !3823
  %910 = load i32, i32* @x.55
  %911 = load i32, i32* @y.56
  %912 = sub i32 %910, 1
  %913 = mul i32 %910, %912
  %914 = urem i32 %913, 2
  %915 = icmp eq i32 %914, 0
  %916 = icmp slt i32 %911, 10
  %917 = or i1 %915, %916
  br i1 %917, label %originalBBpart2219, label %originalBB217alteredBB

originalBBpart2219:                               ; preds = %originalBB217
  br i1 %909, label %918, label %1166, !dbg !3824

918:                                              ; preds = %originalBBpart2219
  %919 = load i32, i32* @x.55
  %920 = load i32, i32* @y.56
  %921 = sub i32 %919, 1
  %922 = mul i32 %919, %921
  %923 = urem i32 %922, 2
  %924 = icmp eq i32 %923, 0
  %925 = icmp slt i32 %920, 10
  %926 = or i1 %924, %925
  br i1 %926, label %originalBB221, label %originalBB221alteredBB

originalBB221:                                    ; preds = %918, %originalBB221alteredBB
  %927 = load i8*, i8** %21, align 8, !dbg !3825
  %928 = icmp eq i8* %927, null, !dbg !3826
  %929 = load i32, i32* @x.55
  %930 = load i32, i32* @y.56
  %931 = sub i32 %929, 1
  %932 = mul i32 %929, %931
  %933 = urem i32 %932, 2
  %934 = icmp eq i32 %933, 0
  %935 = icmp slt i32 %930, 10
  %936 = or i1 %934, %935
  br i1 %936, label %originalBBpart2223, label %originalBB221alteredBB

originalBBpart2223:                               ; preds = %originalBB221
  br i1 %928, label %937, label %1166, !dbg !3827

937:                                              ; preds = %originalBBpart2223
  %938 = load i32, i32* @x.55
  %939 = load i32, i32* @y.56
  %940 = sub i32 %938, 1
  %941 = mul i32 %938, %940
  %942 = urem i32 %941, 2
  %943 = icmp eq i32 %942, 0
  %944 = icmp slt i32 %939, 10
  %945 = or i1 %943, %944
  br i1 %945, label %originalBB225, label %originalBB225alteredBB

originalBB225:                                    ; preds = %937, %originalBB225alteredBB
  %946 = load i8*, i8** %25, align 8, !dbg !3828
  %947 = load i8, i8* %946, align 1, !dbg !3830
  %948 = sext i8 %947 to i32, !dbg !3830
  %949 = icmp eq i32 %948, 43, !dbg !3831
  %950 = load i32, i32* @x.55
  %951 = load i32, i32* @y.56
  %952 = sub i32 %950, 1
  %953 = mul i32 %950, %952
  %954 = urem i32 %953, 2
  %955 = icmp eq i32 %954, 0
  %956 = icmp slt i32 %951, 10
  %957 = or i1 %955, %956
  br i1 %957, label %originalBBpart2227, label %originalBB225alteredBB

originalBBpart2227:                               ; preds = %originalBB225
  br i1 %949, label %958, label %975, !dbg !3830

958:                                              ; preds = %originalBBpart2227
  %959 = load i32, i32* @x.55
  %960 = load i32, i32* @y.56
  %961 = sub i32 %959, 1
  %962 = mul i32 %959, %961
  %963 = urem i32 %962, 2
  %964 = icmp eq i32 %963, 0
  %965 = icmp slt i32 %960, 10
  %966 = or i1 %964, %965
  br i1 %966, label %originalBB229, label %originalBB229alteredBB

originalBB229:                                    ; preds = %958, %originalBB229alteredBB
  %967 = load i32, i32* @x.55
  %968 = load i32, i32* @y.56
  %969 = sub i32 %967, 1
  %970 = mul i32 %967, %969
  %971 = urem i32 %970, 2
  %972 = icmp eq i32 %971, 0
  %973 = icmp slt i32 %968, 10
  %974 = or i1 %972, %973
  br i1 %974, label %originalBBpart2231, label %originalBB229alteredBB

originalBBpart2231:                               ; preds = %originalBB229
  br label %994, !dbg !3830

975:                                              ; preds = %originalBBpart2227
  %976 = load i32, i32* @x.55
  %977 = load i32, i32* @y.56
  %978 = sub i32 %976, 1
  %979 = mul i32 %976, %978
  %980 = urem i32 %979, 2
  %981 = icmp eq i32 %980, 0
  %982 = icmp slt i32 %977, 10
  %983 = or i1 %981, %982
  br i1 %983, label %originalBB233, label %originalBB233alteredBB

originalBB233:                                    ; preds = %975, %originalBB233alteredBB
  %984 = load i8*, i8** %25, align 8, !dbg !3832
  %985 = call %struct.group* @getgrnam(i8* %984), !dbg !3833
  %986 = load i32, i32* @x.55
  %987 = load i32, i32* @y.56
  %988 = sub i32 %986, 1
  %989 = mul i32 %986, %988
  %990 = urem i32 %989, 2
  %991 = icmp eq i32 %990, 0
  %992 = icmp slt i32 %987, 10
  %993 = or i1 %991, %992
  br i1 %993, label %originalBBpart2235, label %originalBB233alteredBB

originalBBpart2235:                               ; preds = %originalBB233
  br label %994, !dbg !3830

994:                                              ; preds = %originalBBpart2235, %originalBBpart2231
  %995 = phi %struct.group* [ null, %originalBBpart2231 ], [ %985, %originalBBpart2235 ], !dbg !3830
  %996 = load i32, i32* @x.55
  %997 = load i32, i32* @y.56
  %998 = sub i32 %996, 1
  %999 = mul i32 %996, %998
  %1000 = urem i32 %999, 2
  %1001 = icmp eq i32 %1000, 0
  %1002 = icmp slt i32 %997, 10
  %1003 = or i1 %1001, %1002
  br i1 %1003, label %originalBB237, label %originalBB237alteredBB

originalBB237:                                    ; preds = %994, %originalBB237alteredBB
  store %struct.group* %995, %struct.group** %23, align 8, !dbg !3834
  %1004 = load %struct.group*, %struct.group** %23, align 8, !dbg !3835
  %1005 = icmp eq %struct.group* %1004, null, !dbg !3837
  %1006 = load i32, i32* @x.55
  %1007 = load i32, i32* @y.56
  %1008 = sub i32 %1006, 1
  %1009 = mul i32 %1006, %1008
  %1010 = urem i32 %1009, 2
  %1011 = icmp eq i32 %1010, 0
  %1012 = icmp slt i32 %1007, 10
  %1013 = or i1 %1011, %1012
  br i1 %1013, label %originalBBpart2239, label %originalBB237alteredBB

originalBBpart2239:                               ; preds = %originalBB237
  br i1 %1005, label %1014, label %1127, !dbg !3838

1014:                                             ; preds = %originalBBpart2239
  call void @llvm.dbg.declare(metadata i64* %33, metadata !3839, metadata !DIExpression()), !dbg !3841
  %1015 = load i32, i32* @x.55
  %1016 = load i32, i32* @y.56
  %1017 = sub i32 %1015, 1
  %1018 = mul i32 %1015, %1017
  %1019 = urem i32 %1018, 2
  %1020 = icmp eq i32 %1019, 0
  %1021 = icmp slt i32 %1016, 10
  %1022 = or i1 %1020, %1021
  br i1 %1022, label %originalBB241, label %originalBB241alteredBB

originalBB241:                                    ; preds = %1014, %originalBB241alteredBB
  %1023 = load i8*, i8** %25, align 8, !dbg !3842
  %1024 = call i32 @xstrtoul(i8* %1023, i8** null, i32 10, i64* %33, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3.102, i64 0, i64 0)), !dbg !3844
  %1025 = icmp eq i32 %1024, 0, !dbg !3845
  %1026 = load i32, i32* @x.55
  %1027 = load i32, i32* @y.56
  %1028 = sub i32 %1026, 1
  %1029 = mul i32 %1026, %1028
  %1030 = urem i32 %1029, 2
  %1031 = icmp eq i32 %1030, 0
  %1032 = icmp slt i32 %1027, 10
  %1033 = or i1 %1031, %1032
  br i1 %1033, label %originalBBpart2243, label %originalBB241alteredBB

originalBBpart2243:                               ; preds = %originalBB241
  br i1 %1025, label %1034, label %1092, !dbg !3846

1034:                                             ; preds = %originalBBpart2243
  %1035 = load i32, i32* @x.55
  %1036 = load i32, i32* @y.56
  %1037 = sub i32 %1035, 1
  %1038 = mul i32 %1035, %1037
  %1039 = urem i32 %1038, 2
  %1040 = icmp eq i32 %1039, 0
  %1041 = icmp slt i32 %1036, 10
  %1042 = or i1 %1040, %1041
  br i1 %1042, label %originalBB245, label %originalBB245alteredBB

originalBB245:                                    ; preds = %1034, %originalBB245alteredBB
  %1043 = load i64, i64* %33, align 8, !dbg !3847
  %1044 = icmp ule i64 %1043, 4294967295, !dbg !3848
  %1045 = load i32, i32* @x.55
  %1046 = load i32, i32* @y.56
  %1047 = sub i32 %1045, 1
  %1048 = mul i32 %1045, %1047
  %1049 = urem i32 %1048, 2
  %1050 = icmp eq i32 %1049, 0
  %1051 = icmp slt i32 %1046, 10
  %1052 = or i1 %1050, %1051
  br i1 %1052, label %originalBBpart2247, label %originalBB245alteredBB

originalBBpart2247:                               ; preds = %originalBB245
  br i1 %1044, label %1053, label %1092, !dbg !3849

1053:                                             ; preds = %originalBBpart2247
  %1054 = load i32, i32* @x.55
  %1055 = load i32, i32* @y.56
  %1056 = sub i32 %1054, 1
  %1057 = mul i32 %1054, %1056
  %1058 = urem i32 %1057, 2
  %1059 = icmp eq i32 %1058, 0
  %1060 = icmp slt i32 %1055, 10
  %1061 = or i1 %1059, %1060
  br i1 %1061, label %originalBB249, label %originalBB249alteredBB

originalBB249:                                    ; preds = %1053, %originalBB249alteredBB
  %1062 = load i64, i64* %33, align 8, !dbg !3850
  %1063 = trunc i64 %1062 to i32, !dbg !3851
  %1064 = icmp ne i32 %1063, -1, !dbg !3852
  %1065 = load i32, i32* @x.55
  %1066 = load i32, i32* @y.56
  %1067 = sub i32 %1065, 1
  %1068 = mul i32 %1065, %1067
  %1069 = urem i32 %1068, 2
  %1070 = icmp eq i32 %1069, 0
  %1071 = icmp slt i32 %1066, 10
  %1072 = or i1 %1070, %1071
  br i1 %1072, label %originalBBpart2252, label %originalBB249alteredBB

originalBBpart2252:                               ; preds = %originalBB249
  br i1 %1064, label %1073, label %1092, !dbg !3853

1073:                                             ; preds = %originalBBpart2252
  %1074 = load i32, i32* @x.55
  %1075 = load i32, i32* @y.56
  %1076 = sub i32 %1074, 1
  %1077 = mul i32 %1074, %1076
  %1078 = urem i32 %1077, 2
  %1079 = icmp eq i32 %1078, 0
  %1080 = icmp slt i32 %1075, 10
  %1081 = or i1 %1079, %1080
  br i1 %1081, label %originalBB254, label %originalBB254alteredBB

originalBB254:                                    ; preds = %1073, %originalBB254alteredBB
  %1082 = load i64, i64* %33, align 8, !dbg !3854
  %1083 = trunc i64 %1082 to i32, !dbg !3854
  store i32 %1083, i32* %28, align 4, !dbg !3855
  %1084 = load i32, i32* @x.55
  %1085 = load i32, i32* @y.56
  %1086 = sub i32 %1084, 1
  %1087 = mul i32 %1084, %1086
  %1088 = urem i32 %1087, 2
  %1089 = icmp eq i32 %1088, 0
  %1090 = icmp slt i32 %1085, 10
  %1091 = or i1 %1089, %1090
  br i1 %1091, label %originalBBpart2256, label %originalBB254alteredBB

originalBBpart2256:                               ; preds = %originalBB254
  br label %1110, !dbg !3856

1092:                                             ; preds = %originalBBpart2252, %originalBBpart2247, %originalBBpart2243
  %1093 = load i32, i32* @x.55
  %1094 = load i32, i32* @y.56
  %1095 = sub i32 %1093, 1
  %1096 = mul i32 %1093, %1095
  %1097 = urem i32 %1096, 2
  %1098 = icmp eq i32 %1097, 0
  %1099 = icmp slt i32 %1094, 10
  %1100 = or i1 %1098, %1099
  br i1 %1100, label %originalBB258, label %originalBB258alteredBB

originalBB258:                                    ; preds = %1092, %originalBB258alteredBB
  %1101 = load i8*, i8** @parse_with_separator.E_invalid_group, align 8, !dbg !3857
  store i8* %1101, i8** %21, align 8, !dbg !3858
  %1102 = load i32, i32* @x.55
  %1103 = load i32, i32* @y.56
  %1104 = sub i32 %1102, 1
  %1105 = mul i32 %1102, %1104
  %1106 = urem i32 %1105, 2
  %1107 = icmp eq i32 %1106, 0
  %1108 = icmp slt i32 %1103, 10
  %1109 = or i1 %1107, %1108
  br i1 %1109, label %originalBBpart2260, label %originalBB258alteredBB

originalBBpart2260:                               ; preds = %originalBB258
  br label %1110

1110:                                             ; preds = %originalBBpart2260, %originalBBpart2256
  %1111 = load i32, i32* @x.55
  %1112 = load i32, i32* @y.56
  %1113 = sub i32 %1111, 1
  %1114 = mul i32 %1111, %1113
  %1115 = urem i32 %1114, 2
  %1116 = icmp eq i32 %1115, 0
  %1117 = icmp slt i32 %1112, 10
  %1118 = or i1 %1116, %1117
  br i1 %1118, label %originalBB262, label %originalBB262alteredBB

originalBB262:                                    ; preds = %1110, %originalBB262alteredBB
  %1119 = load i32, i32* @x.55
  %1120 = load i32, i32* @y.56
  %1121 = sub i32 %1119, 1
  %1122 = mul i32 %1119, %1121
  %1123 = urem i32 %1122, 2
  %1124 = icmp eq i32 %1123, 0
  %1125 = icmp slt i32 %1120, 10
  %1126 = or i1 %1124, %1125
  br i1 %1126, label %originalBBpart2264, label %originalBB262alteredBB

originalBBpart2264:                               ; preds = %originalBB262
  br label %1147, !dbg !3859

1127:                                             ; preds = %originalBBpart2239
  %1128 = load i32, i32* @x.55
  %1129 = load i32, i32* @y.56
  %1130 = sub i32 %1128, 1
  %1131 = mul i32 %1128, %1130
  %1132 = urem i32 %1131, 2
  %1133 = icmp eq i32 %1132, 0
  %1134 = icmp slt i32 %1129, 10
  %1135 = or i1 %1133, %1134
  br i1 %1135, label %originalBB266, label %originalBB266alteredBB

originalBB266:                                    ; preds = %1127, %originalBB266alteredBB
  %1136 = load %struct.group*, %struct.group** %23, align 8, !dbg !3860
  %1137 = getelementptr inbounds %struct.group, %struct.group* %1136, i32 0, i32 2, !dbg !3861
  %1138 = load i32, i32* %1137, align 8, !dbg !3861
  store i32 %1138, i32* %28, align 4, !dbg !3862
  %1139 = load i32, i32* @x.55
  %1140 = load i32, i32* @y.56
  %1141 = sub i32 %1139, 1
  %1142 = mul i32 %1139, %1141
  %1143 = urem i32 %1142, 2
  %1144 = icmp eq i32 %1143, 0
  %1145 = icmp slt i32 %1140, 10
  %1146 = or i1 %1144, %1145
  br i1 %1146, label %originalBBpart2268, label %originalBB266alteredBB

originalBBpart2268:                               ; preds = %originalBB266
  br label %1147

1147:                                             ; preds = %originalBBpart2268, %originalBBpart2264
  %1148 = load i32, i32* @x.55
  %1149 = load i32, i32* @y.56
  %1150 = sub i32 %1148, 1
  %1151 = mul i32 %1148, %1150
  %1152 = urem i32 %1151, 2
  %1153 = icmp eq i32 %1152, 0
  %1154 = icmp slt i32 %1149, 10
  %1155 = or i1 %1153, %1154
  br i1 %1155, label %originalBB270, label %originalBB270alteredBB

originalBB270:                                    ; preds = %1147, %originalBB270alteredBB
  call void @endgrent(), !dbg !3863
  %1156 = load i8*, i8** %25, align 8, !dbg !3864
  %1157 = call noalias i8* @xstrdup(i8* %1156), !dbg !3865
  store i8* %1157, i8** %26, align 8, !dbg !3866
  %1158 = load i32, i32* @x.55
  %1159 = load i32, i32* @y.56
  %1160 = sub i32 %1158, 1
  %1161 = mul i32 %1158, %1160
  %1162 = urem i32 %1161, 2
  %1163 = icmp eq i32 %1162, 0
  %1164 = icmp slt i32 %1159, 10
  %1165 = or i1 %1163, %1164
  br i1 %1165, label %originalBBpart2272, label %originalBB270alteredBB

originalBBpart2272:                               ; preds = %originalBB270
  br label %1166, !dbg !3867

1166:                                             ; preds = %originalBBpart2272, %originalBBpart2223, %originalBBpart2219
  %1167 = load i32, i32* @x.55
  %1168 = load i32, i32* @y.56
  %1169 = sub i32 %1167, 1
  %1170 = mul i32 %1167, %1169
  %1171 = urem i32 %1170, 2
  %1172 = icmp eq i32 %1171, 0
  %1173 = icmp slt i32 %1168, 10
  %1174 = or i1 %1172, %1173
  br i1 %1174, label %originalBB274, label %originalBB274alteredBB

originalBB274:                                    ; preds = %1166, %originalBB274alteredBB
  %1175 = load i8*, i8** %21, align 8, !dbg !3868
  %1176 = icmp eq i8* %1175, null, !dbg !3870
  %1177 = load i32, i32* @x.55
  %1178 = load i32, i32* @y.56
  %1179 = sub i32 %1177, 1
  %1180 = mul i32 %1177, %1179
  %1181 = urem i32 %1180, 2
  %1182 = icmp eq i32 %1181, 0
  %1183 = icmp slt i32 %1178, 10
  %1184 = or i1 %1182, %1183
  br i1 %1184, label %originalBBpart2276, label %originalBB274alteredBB

originalBBpart2276:                               ; preds = %originalBB274
  br i1 %1176, label %1185, label %1318, !dbg !3871

1185:                                             ; preds = %originalBBpart2276
  %1186 = load i32, i32* @x.55
  %1187 = load i32, i32* @y.56
  %1188 = sub i32 %1186, 1
  %1189 = mul i32 %1186, %1188
  %1190 = urem i32 %1189, 2
  %1191 = icmp eq i32 %1190, 0
  %1192 = icmp slt i32 %1187, 10
  %1193 = or i1 %1191, %1192
  br i1 %1193, label %originalBB278, label %originalBB278alteredBB

originalBB278:                                    ; preds = %1185, %originalBB278alteredBB
  %1194 = load i32, i32* %27, align 4, !dbg !3872
  %1195 = load i32*, i32** %17, align 8, !dbg !3874
  store i32 %1194, i32* %1195, align 4, !dbg !3875
  %1196 = load i32*, i32** %18, align 8, !dbg !3876
  %1197 = icmp ne i32* %1196, null, !dbg !3876
  %1198 = load i32, i32* @x.55
  %1199 = load i32, i32* @y.56
  %1200 = sub i32 %1198, 1
  %1201 = mul i32 %1198, %1200
  %1202 = urem i32 %1201, 2
  %1203 = icmp eq i32 %1202, 0
  %1204 = icmp slt i32 %1199, 10
  %1205 = or i1 %1203, %1204
  br i1 %1205, label %originalBBpart2280, label %originalBB278alteredBB

originalBBpart2280:                               ; preds = %originalBB278
  br i1 %1197, label %1206, label %1225, !dbg !3878

1206:                                             ; preds = %originalBBpart2280
  %1207 = load i32, i32* @x.55
  %1208 = load i32, i32* @y.56
  %1209 = sub i32 %1207, 1
  %1210 = mul i32 %1207, %1209
  %1211 = urem i32 %1210, 2
  %1212 = icmp eq i32 %1211, 0
  %1213 = icmp slt i32 %1208, 10
  %1214 = or i1 %1212, %1213
  br i1 %1214, label %originalBB282, label %originalBB282alteredBB

originalBB282:                                    ; preds = %1206, %originalBB282alteredBB
  %1215 = load i32, i32* %28, align 4, !dbg !3879
  %1216 = load i32*, i32** %18, align 8, !dbg !3880
  store i32 %1215, i32* %1216, align 4, !dbg !3881
  %1217 = load i32, i32* @x.55
  %1218 = load i32, i32* @y.56
  %1219 = sub i32 %1217, 1
  %1220 = mul i32 %1217, %1219
  %1221 = urem i32 %1220, 2
  %1222 = icmp eq i32 %1221, 0
  %1223 = icmp slt i32 %1218, 10
  %1224 = or i1 %1222, %1223
  br i1 %1224, label %originalBBpart2284, label %originalBB282alteredBB

originalBBpart2284:                               ; preds = %originalBB282
  br label %1225, !dbg !3882

1225:                                             ; preds = %originalBBpart2284, %originalBBpart2280
  %1226 = load i32, i32* @x.55
  %1227 = load i32, i32* @y.56
  %1228 = sub i32 %1226, 1
  %1229 = mul i32 %1226, %1228
  %1230 = urem i32 %1229, 2
  %1231 = icmp eq i32 %1230, 0
  %1232 = icmp slt i32 %1227, 10
  %1233 = or i1 %1231, %1232
  br i1 %1233, label %originalBB286, label %originalBB286alteredBB

originalBB286:                                    ; preds = %1225, %originalBB286alteredBB
  %1234 = load i8**, i8*** %19, align 8, !dbg !3883
  %1235 = icmp ne i8** %1234, null, !dbg !3883
  %1236 = load i32, i32* @x.55
  %1237 = load i32, i32* @y.56
  %1238 = sub i32 %1236, 1
  %1239 = mul i32 %1236, %1238
  %1240 = urem i32 %1239, 2
  %1241 = icmp eq i32 %1240, 0
  %1242 = icmp slt i32 %1237, 10
  %1243 = or i1 %1241, %1242
  br i1 %1243, label %originalBBpart2288, label %originalBB286alteredBB

originalBBpart2288:                               ; preds = %originalBB286
  br i1 %1235, label %1244, label %1263, !dbg !3885

1244:                                             ; preds = %originalBBpart2288
  %1245 = load i32, i32* @x.55
  %1246 = load i32, i32* @y.56
  %1247 = sub i32 %1245, 1
  %1248 = mul i32 %1245, %1247
  %1249 = urem i32 %1248, 2
  %1250 = icmp eq i32 %1249, 0
  %1251 = icmp slt i32 %1246, 10
  %1252 = or i1 %1250, %1251
  br i1 %1252, label %originalBB290, label %originalBB290alteredBB

originalBB290:                                    ; preds = %1244, %originalBB290alteredBB
  %1253 = load i8*, i8** %24, align 8, !dbg !3886
  %1254 = load i8**, i8*** %19, align 8, !dbg !3888
  store i8* %1253, i8** %1254, align 8, !dbg !3889
  store i8* null, i8** %24, align 8, !dbg !3890
  %1255 = load i32, i32* @x.55
  %1256 = load i32, i32* @y.56
  %1257 = sub i32 %1255, 1
  %1258 = mul i32 %1255, %1257
  %1259 = urem i32 %1258, 2
  %1260 = icmp eq i32 %1259, 0
  %1261 = icmp slt i32 %1256, 10
  %1262 = or i1 %1260, %1261
  br i1 %1262, label %originalBBpart2292, label %originalBB290alteredBB

originalBBpart2292:                               ; preds = %originalBB290
  br label %1263, !dbg !3891

1263:                                             ; preds = %originalBBpart2292, %originalBBpart2288
  %1264 = load i32, i32* @x.55
  %1265 = load i32, i32* @y.56
  %1266 = sub i32 %1264, 1
  %1267 = mul i32 %1264, %1266
  %1268 = urem i32 %1267, 2
  %1269 = icmp eq i32 %1268, 0
  %1270 = icmp slt i32 %1265, 10
  %1271 = or i1 %1269, %1270
  br i1 %1271, label %originalBB294, label %originalBB294alteredBB

originalBB294:                                    ; preds = %1263, %originalBB294alteredBB
  %1272 = load i8**, i8*** %20, align 8, !dbg !3892
  %1273 = icmp ne i8** %1272, null, !dbg !3892
  %1274 = load i32, i32* @x.55
  %1275 = load i32, i32* @y.56
  %1276 = sub i32 %1274, 1
  %1277 = mul i32 %1274, %1276
  %1278 = urem i32 %1277, 2
  %1279 = icmp eq i32 %1278, 0
  %1280 = icmp slt i32 %1275, 10
  %1281 = or i1 %1279, %1280
  br i1 %1281, label %originalBBpart2296, label %originalBB294alteredBB

originalBBpart2296:                               ; preds = %originalBB294
  br i1 %1273, label %1282, label %1301, !dbg !3894

1282:                                             ; preds = %originalBBpart2296
  %1283 = load i32, i32* @x.55
  %1284 = load i32, i32* @y.56
  %1285 = sub i32 %1283, 1
  %1286 = mul i32 %1283, %1285
  %1287 = urem i32 %1286, 2
  %1288 = icmp eq i32 %1287, 0
  %1289 = icmp slt i32 %1284, 10
  %1290 = or i1 %1288, %1289
  br i1 %1290, label %originalBB298, label %originalBB298alteredBB

originalBB298:                                    ; preds = %1282, %originalBB298alteredBB
  %1291 = load i8*, i8** %26, align 8, !dbg !3895
  %1292 = load i8**, i8*** %20, align 8, !dbg !3897
  store i8* %1291, i8** %1292, align 8, !dbg !3898
  store i8* null, i8** %26, align 8, !dbg !3899
  %1293 = load i32, i32* @x.55
  %1294 = load i32, i32* @y.56
  %1295 = sub i32 %1293, 1
  %1296 = mul i32 %1293, %1295
  %1297 = urem i32 %1296, 2
  %1298 = icmp eq i32 %1297, 0
  %1299 = icmp slt i32 %1294, 10
  %1300 = or i1 %1298, %1299
  br i1 %1300, label %originalBBpart2301, label %originalBB298alteredBB

originalBBpart2301:                               ; preds = %originalBB298
  br label %1301, !dbg !3900

1301:                                             ; preds = %originalBBpart2301, %originalBBpart2296
  %1302 = load i32, i32* @x.55
  %1303 = load i32, i32* @y.56
  %1304 = sub i32 %1302, 1
  %1305 = mul i32 %1302, %1304
  %1306 = urem i32 %1305, 2
  %1307 = icmp eq i32 %1306, 0
  %1308 = icmp slt i32 %1303, 10
  %1309 = or i1 %1307, %1308
  br i1 %1309, label %originalBB303, label %originalBB303alteredBB

originalBB303:                                    ; preds = %1301, %originalBB303alteredBB
  %1310 = load i32, i32* @x.55
  %1311 = load i32, i32* @y.56
  %1312 = sub i32 %1310, 1
  %1313 = mul i32 %1310, %1312
  %1314 = urem i32 %1313, 2
  %1315 = icmp eq i32 %1314, 0
  %1316 = icmp slt i32 %1311, 10
  %1317 = or i1 %1315, %1316
  br i1 %1317, label %originalBBpart2305, label %originalBB303alteredBB

originalBBpart2305:                               ; preds = %originalBB303
  br label %1318, !dbg !3901

1318:                                             ; preds = %originalBBpart2305, %originalBBpart2276
  %1319 = load i32, i32* @x.55
  %1320 = load i32, i32* @y.56
  %1321 = sub i32 %1319, 1
  %1322 = mul i32 %1319, %1321
  %1323 = urem i32 %1322, 2
  %1324 = icmp eq i32 %1323, 0
  %1325 = icmp slt i32 %1320, 10
  %1326 = or i1 %1324, %1325
  br i1 %1326, label %originalBB307, label %originalBB307alteredBB

originalBB307:                                    ; preds = %1318, %originalBB307alteredBB
  %1327 = load i8*, i8** %24, align 8, !dbg !3902
  call void @free(i8* %1327) #10, !dbg !3903
  %1328 = load i8*, i8** %26, align 8, !dbg !3904
  call void @free(i8* %1328) #10, !dbg !3905
  %1329 = load i8*, i8** %21, align 8, !dbg !3906
  %1330 = icmp ne i8* %1329, null, !dbg !3906
  %1331 = load i32, i32* @x.55
  %1332 = load i32, i32* @y.56
  %1333 = sub i32 %1331, 1
  %1334 = mul i32 %1331, %1333
  %1335 = urem i32 %1334, 2
  %1336 = icmp eq i32 %1335, 0
  %1337 = icmp slt i32 %1332, 10
  %1338 = or i1 %1336, %1337
  br i1 %1338, label %originalBBpart2309, label %originalBB307alteredBB

originalBBpart2309:                               ; preds = %originalBB307
  br i1 %1330, label %1339, label %1358, !dbg !3906

1339:                                             ; preds = %originalBBpart2309
  %1340 = load i32, i32* @x.55
  %1341 = load i32, i32* @y.56
  %1342 = sub i32 %1340, 1
  %1343 = mul i32 %1340, %1342
  %1344 = urem i32 %1343, 2
  %1345 = icmp eq i32 %1344, 0
  %1346 = icmp slt i32 %1341, 10
  %1347 = or i1 %1345, %1346
  br i1 %1347, label %originalBB311, label %originalBB311alteredBB

originalBB311:                                    ; preds = %1339, %originalBB311alteredBB
  %1348 = load i8*, i8** %21, align 8, !dbg !3907
  %1349 = call i8* @gettext(i8* %1348) #10, !dbg !3907
  %1350 = load i32, i32* @x.55
  %1351 = load i32, i32* @y.56
  %1352 = sub i32 %1350, 1
  %1353 = mul i32 %1350, %1352
  %1354 = urem i32 %1353, 2
  %1355 = icmp eq i32 %1354, 0
  %1356 = icmp slt i32 %1351, 10
  %1357 = or i1 %1355, %1356
  br i1 %1357, label %originalBBpart2313, label %originalBB311alteredBB

originalBBpart2313:                               ; preds = %originalBB311
  br label %1375, !dbg !3906

1358:                                             ; preds = %originalBBpart2309
  %1359 = load i32, i32* @x.55
  %1360 = load i32, i32* @y.56
  %1361 = sub i32 %1359, 1
  %1362 = mul i32 %1359, %1361
  %1363 = urem i32 %1362, 2
  %1364 = icmp eq i32 %1363, 0
  %1365 = icmp slt i32 %1360, 10
  %1366 = or i1 %1364, %1365
  br i1 %1366, label %originalBB315, label %originalBB315alteredBB

originalBB315:                                    ; preds = %1358, %originalBB315alteredBB
  %1367 = load i32, i32* @x.55
  %1368 = load i32, i32* @y.56
  %1369 = sub i32 %1367, 1
  %1370 = mul i32 %1367, %1369
  %1371 = urem i32 %1370, 2
  %1372 = icmp eq i32 %1371, 0
  %1373 = icmp slt i32 %1368, 10
  %1374 = or i1 %1372, %1373
  br i1 %1374, label %originalBBpart2317, label %originalBB315alteredBB

originalBBpart2317:                               ; preds = %originalBB315
  br label %1375, !dbg !3906

1375:                                             ; preds = %originalBBpart2317, %originalBBpart2313
  %1376 = phi i8* [ %1349, %originalBBpart2313 ], [ null, %originalBBpart2317 ], !dbg !3906
  %1377 = load i32, i32* @x.55
  %1378 = load i32, i32* @y.56
  %1379 = sub i32 %1377, 1
  %1380 = mul i32 %1377, %1379
  %1381 = urem i32 %1380, 2
  %1382 = icmp eq i32 %1381, 0
  %1383 = icmp slt i32 %1378, 10
  %1384 = or i1 %1382, %1383
  br i1 %1384, label %originalBB319, label %originalBB319alteredBB

originalBB319:                                    ; preds = %1375, %originalBB319alteredBB
  %1385 = load i32, i32* @x.55
  %1386 = load i32, i32* @y.56
  %1387 = sub i32 %1385, 1
  %1388 = mul i32 %1385, %1387
  %1389 = urem i32 %1388, 2
  %1390 = icmp eq i32 %1389, 0
  %1391 = icmp slt i32 %1386, 10
  %1392 = or i1 %1390, %1391
  br i1 %1392, label %originalBBpart2321, label %originalBB319alteredBB

originalBBpart2321:                               ; preds = %originalBB319
  ret i8* %1376, !dbg !3908

originalBBalteredBB:                              ; preds = %originalBB, %6
  %1393 = alloca i8*, align 8
  %1394 = alloca i8*, align 8
  %1395 = alloca i32*, align 8
  %1396 = alloca i32*, align 8
  %1397 = alloca i8**, align 8
  %1398 = alloca i8**, align 8
  %1399 = alloca i8*, align 8
  %1400 = alloca %struct.passwd*, align 8
  %1401 = alloca %struct.group*, align 8
  %1402 = alloca i8*, align 8
  %1403 = alloca i8*, align 8
  %1404 = alloca i8*, align 8
  %1405 = alloca i32, align 4
  %1406 = alloca i32, align 4
  %1407 = alloca i64, align 8
  %1408 = alloca i8, align 1
  %1409 = alloca i64, align 8
  %1410 = alloca [21 x i8], align 16
  %1411 = alloca i64, align 8
  store i8* %0, i8** %1393, align 8
  call void @llvm.dbg.declare(metadata i8** %1393, metadata !3909, metadata !DIExpression()), !dbg !3630
  store i8* %1, i8** %1394, align 8
  call void @llvm.dbg.declare(metadata i8** %1394, metadata !3919, metadata !DIExpression()), !dbg !3632
  store i32* %2, i32** %1395, align 8
  call void @llvm.dbg.declare(metadata i32** %1395, metadata !3920, metadata !DIExpression()), !dbg !3634
  store i32* %3, i32** %1396, align 8
  call void @llvm.dbg.declare(metadata i32** %1396, metadata !3921, metadata !DIExpression()), !dbg !3636
  store i8** %4, i8*** %1397, align 8
  call void @llvm.dbg.declare(metadata i8*** %1397, metadata !3922, metadata !DIExpression()), !dbg !3638
  store i8** %5, i8*** %1398, align 8
  call void @llvm.dbg.declare(metadata i8*** %1398, metadata !3923, metadata !DIExpression()), !dbg !3640
  call void @llvm.dbg.declare(metadata i8** %1399, metadata !3924, metadata !DIExpression()), !dbg !3642
  call void @llvm.dbg.declare(metadata %struct.passwd** %1400, metadata !3925, metadata !DIExpression()), !dbg !3654
  call void @llvm.dbg.declare(metadata %struct.group** %1401, metadata !3936, metadata !DIExpression()), !dbg !3663
  call void @llvm.dbg.declare(metadata i8** %1402, metadata !3944, metadata !DIExpression()), !dbg !3665
  call void @llvm.dbg.declare(metadata i8** %1403, metadata !3945, metadata !DIExpression()), !dbg !3667
  call void @llvm.dbg.declare(metadata i8** %1404, metadata !3946, metadata !DIExpression()), !dbg !3669
  store i8* null, i8** %1404, align 8, !dbg !3669
  call void @llvm.dbg.declare(metadata i32* %1405, metadata !3947, metadata !DIExpression()), !dbg !3671
  %1412 = load i32*, i32** %1395, align 8, !dbg !3672
  %1413 = load i32, i32* %1412, align 4, !dbg !3673
  store i32 %1413, i32* %1405, align 4, !dbg !3671
  call void @llvm.dbg.declare(metadata i32* %1406, metadata !3948, metadata !DIExpression()), !dbg !3675
  %1414 = load i32*, i32** %1396, align 8, !dbg !3676
  %1415 = icmp ne i32* %1414, null, !dbg !3676
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %46
  %1416 = load i32*, i32** %18, align 8, !dbg !3677
  %1417 = load i32, i32* %1416, align 4, !dbg !3678
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %65
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %82
  store i32 %83, i32* %28, align 4, !dbg !3675
  store i8* null, i8** %21, align 8, !dbg !3679
  %1418 = load i8**, i8*** %19, align 8, !dbg !3680
  %1419 = icmp ne i8** %1418, null, !dbg !3680
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %102
  %1420 = load i8**, i8*** %19, align 8, !dbg !3683
  store i8* null, i8** %1420, align 8, !dbg !3684
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %120
  %1421 = load i8**, i8*** %20, align 8, !dbg !3686
  %1422 = icmp ne i8** %1421, null, !dbg !3686
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %144
  %1423 = load i8*, i8** %15, align 8, !dbg !3697
  %1424 = load i8, i8* %1423, align 1, !dbg !3700
  %1425 = icmp ne i8 %1424, 0, !dbg !3700
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %164
  %1426 = load i8*, i8** %15, align 8, !dbg !3702
  %1427 = call noalias i8* @xstrdup(i8* %1426), !dbg !3703
  store i8* %1427, i8** %24, align 8, !dbg !3704
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %183
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %200
  %1428 = load i8*, i8** %16, align 8, !dbg !3710
  %1429 = load i8*, i8** %15, align 8, !dbg !3711
  %1430 = ptrtoint i8* %1428 to i64, !dbg !3712
  %1431 = ptrtoint i8* %1429 to i64, !dbg !3712
  %_ = sub i64 %1430, %1431
  %gen = mul i64 %_, %1431
  %1432 = sub i64 %1430, %1431, !dbg !3712
  store i64 %1432, i64* %29, align 8, !dbg !3709
  %1433 = load i64, i64* %29, align 8, !dbg !3713
  %1434 = icmp ne i64 %1433, 0, !dbg !3715
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %224
  %1435 = load i8*, i8** %15, align 8, !dbg !3717
  %1436 = load i64, i64* %29, align 8, !dbg !3719
  %_39 = sub i64 0, %1436
  %gen40 = add i64 %_39, 1
  %_41 = sub i64 0, %1436
  %gen42 = add i64 %_41, 1
  %_43 = sub i64 %1436, 1
  %gen44 = mul i64 %_43, 1
  %_45 = shl i64 %1436, 1
  %_46 = sub i64 %1436, 1
  %gen47 = mul i64 %_46, 1
  %1437 = add i64 %1436, 1, !dbg !3720
  %1438 = call i8* @xmemdup(i8* %1435, i64 %1437), !dbg !3721
  store i8* %1438, i8** %24, align 8, !dbg !3722
  %1439 = load i8*, i8** %24, align 8, !dbg !3723
  %1440 = load i64, i64* %29, align 8, !dbg !3724
  %1441 = getelementptr inbounds i8, i8* %1439, i64 %1440, !dbg !3723
  store i8 0, i8* %1441, align 1, !dbg !3725
  br label %originalBB38

originalBB51alteredBB:                            ; preds = %originalBB51, %248
  br label %originalBB51

originalBB55alteredBB:                            ; preds = %originalBB55, %265
  %1442 = load i8*, i8** %16, align 8, !dbg !3727
  %1443 = icmp eq i8* %1442, null, !dbg !3728
  br label %originalBB55

originalBB59alteredBB:                            ; preds = %originalBB59, %284
  %1444 = load i8*, i8** %16, align 8, !dbg !3730
  %1445 = getelementptr inbounds i8, i8* %1444, i64 1, !dbg !3731
  %1446 = load i8, i8* %1445, align 1, !dbg !3732
  %1447 = sext i8 %1446 to i32, !dbg !3732
  %1448 = icmp eq i32 %1447, 0, !dbg !3733
  br label %originalBB59

originalBB63alteredBB:                            ; preds = %originalBB63, %307
  %1449 = load i8*, i8** %16, align 8, !dbg !3734
  %1450 = getelementptr inbounds i8, i8* %1449, i64 1, !dbg !3735
  br label %originalBB63

originalBB67alteredBB:                            ; preds = %originalBB67, %330
  %1451 = load i8*, i8** %24, align 8, !dbg !3741
  %1452 = load i8, i8* %1451, align 1, !dbg !3743
  %1453 = sext i8 %1452 to i32, !dbg !3743
  br label %originalBB67

originalBB71alteredBB:                            ; preds = %originalBB71, %350
  %collatzVaralteredBB = alloca i32
  br label %originalBB71

originalBB75alteredBB:                            ; preds = %originalBB75, %367
  %1454 = load i32, i32* @inVal0
  %1455 = icmp sgt i32 %1454, 1
  br label %originalBB75

originalBB79alteredBB:                            ; preds = %originalBB79, %386
  store i32 82, i32* %collatzVar
  br label %originalBB79

originalBB83alteredBB:                            ; preds = %originalBB83, %403
  %1456 = load i8**, i8*** @inVal1
  %1457 = getelementptr inbounds i8*, i8** %1456, i64 1
  %1458 = load i8*, i8** %1457
  %controlealteredBB = call i32 @controle(i8* %1458, i32 43)
  store i32 %controlealteredBB, i32* %collatzVar
  br label %originalBB83

originalBB87alteredBB:                            ; preds = %originalBB87, %423
  %1459 = load i32, i32* %collatzVar
  %1460 = icmp sgt i32 %1459, 1
  br label %originalBB87

originalBB91alteredBB:                            ; preds = %originalBB91, %442
  %1461 = load i32, i32* %collatzVar
  %_92 = shl i32 %1461, 2
  %_93 = sub i32 %1461, 2
  %gen94 = mul i32 %_93, 2
  %_95 = sub i32 0, %1461
  %gen96 = add i32 %_95, 2
  %1462 = srem i32 %1461, 2
  %1463 = icmp eq i32 %1462, 0
  br label %originalBB91

originalBB100alteredBB:                           ; preds = %originalBB100, %462
  %1464 = load i32, i32* %collatzVar
  %_101 = sub i32 0, %1464
  %gen102 = add i32 %_101, 2
  %_103 = sub i32 %1464, 2
  %gen104 = mul i32 %_103, 2
  %_105 = sub i32 %1464, 2
  %gen106 = mul i32 %_105, 2
  %_107 = sub i32 0, %1464
  %gen108 = add i32 %_107, 2
  %1465 = sdiv i32 %1464, 2
  store i32 %1465, i32* %collatzVar
  br label %originalBB100

originalBB112alteredBB:                           ; preds = %originalBB112, %481
  %1466 = load i32, i32* %collatzVar
  %_113 = shl i32 %1466, 3
  %_114 = sub i32 0, %1466
  %gen115 = add i32 %_114, 3
  %1467 = mul i32 %1466, 3
  %_116 = sub i32 0, %1467
  %gen117 = add i32 %_116, 1
  %_118 = sub i32 0, %1467
  %gen119 = add i32 %_118, 1
  %_120 = shl i32 %1467, 1
  %_121 = sub i32 %1467, 1
  %gen122 = mul i32 %_121, 1
  %1468 = add i32 %1467, 1
  store i32 %1468, i32* %collatzVar
  br label %originalBB112

originalBB126alteredBB:                           ; preds = %originalBB126, %501
  %1469 = load i32, i32* %collatzVar
  %_127 = sub i32 0, %341
  %gen128 = add i32 %_127, %1469
  %_129 = sub i32 0, %341
  %gen130 = add i32 %_129, %1469
  %1470 = sub i32 %341, %1469
  %1471 = icmp sgt i32 %1470, 41
  br label %originalBB126

originalBB134alteredBB:                           ; preds = %originalBB134, %521
  %1472 = load i32, i32* %collatzVar
  %_135 = sub i32 0, %341
  %gen136 = add i32 %_135, %1472
  %_137 = sub i32 0, %341
  %gen138 = add i32 %_137, %1472
  %_139 = sub i32 0, %341
  %gen140 = add i32 %_139, %1472
  %_141 = shl i32 %341, %1472
  %1473 = add i32 %341, %1472
  %1474 = icmp slt i32 %1473, 45
  br label %originalBB134

originalBB145alteredBB:                           ; preds = %originalBB145, %541
  br label %originalBB145

originalBB149alteredBB:                           ; preds = %originalBB149, %558
  %1475 = load i8*, i8** %24, align 8, !dbg !3745
  %1476 = call %struct.passwd* @getpwnam(i8* %1475), !dbg !3746
  br label %originalBB149

originalBB153alteredBB:                           ; preds = %originalBB153, %577
  store %struct.passwd* %578, %struct.passwd** %22, align 8, !dbg !3747
  %1477 = load %struct.passwd*, %struct.passwd** %22, align 8, !dbg !3748
  %1478 = icmp eq %struct.passwd* %1477, null, !dbg !3750
  br label %originalBB153

originalBB157alteredBB:                           ; preds = %originalBB157, %597
  %1479 = load i8*, i8** %16, align 8, !dbg !3755
  %1480 = icmp ne i8* %1479, null, !dbg !3756
  br label %originalBB157

originalBB161alteredBB:                           ; preds = %originalBB161, %616
  %1481 = load i8*, i8** %25, align 8, !dbg !3758
  %1482 = icmp eq i8* %1481, null, !dbg !3759
  br label %originalBB161

originalBB165alteredBB:                           ; preds = %originalBB165, %635
  %1483 = zext i1 %636 to i8, !dbg !3754
  store i8 %1483, i8* %30, align 1, !dbg !3754
  %1484 = load i8, i8* %30, align 1, !dbg !3761
  %1485 = trunc i8 %1484 to i1, !dbg !3761
  br label %originalBB165

originalBB169alteredBB:                           ; preds = %originalBB169, %656
  %1486 = load i8*, i8** @parse_with_separator.E_bad_spec, align 8, !dbg !3764
  store i8* %1486, i8** %21, align 8, !dbg !3766
  br label %originalBB169

originalBB173alteredBB:                           ; preds = %originalBB173, %674
  %1487 = load i8*, i8** %24, align 8, !dbg !3771
  %1488 = call i32 @xstrtoul(i8* %1487, i8** null, i32 10, i64* %31, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3.102, i64 0, i64 0)), !dbg !3773
  %1489 = icmp eq i32 %1488, 0, !dbg !3774
  br label %originalBB173

originalBB177alteredBB:                           ; preds = %originalBB177, %701
  %1490 = load i64, i64* %31, align 8, !dbg !3783
  %1491 = trunc i64 %1490 to i32, !dbg !3783
  store i32 %1491, i32* %27, align 4, !dbg !3784
  br label %originalBB177

originalBB181alteredBB:                           ; preds = %originalBB181, %723
  br label %originalBB181

originalBB185alteredBB:                           ; preds = %originalBB185, %740
  %1492 = load %struct.passwd*, %struct.passwd** %22, align 8, !dbg !3789
  %1493 = getelementptr inbounds %struct.passwd, %struct.passwd* %1492, i32 0, i32 2, !dbg !3791
  %1494 = load i32, i32* %1493, align 8, !dbg !3791
  store i32 %1494, i32* %27, align 4, !dbg !3792
  %1495 = load i8*, i8** %25, align 8, !dbg !3793
  %1496 = icmp eq i8* %1495, null, !dbg !3795
  br label %originalBB185

originalBB189alteredBB:                           ; preds = %originalBB189, %762
  %1497 = load i8*, i8** %16, align 8, !dbg !3797
  %1498 = icmp ne i8* %1497, null, !dbg !3798
  br label %originalBB189

originalBB193alteredBB:                           ; preds = %originalBB193, %781
  %1499 = load %struct.passwd*, %struct.passwd** %22, align 8, !dbg !3803
  %1500 = getelementptr inbounds %struct.passwd, %struct.passwd* %1499, i32 0, i32 3, !dbg !3804
  %1501 = load i32, i32* %1500, align 4, !dbg !3804
  store i32 %1501, i32* %28, align 4, !dbg !3805
  %1502 = load i32, i32* %28, align 4, !dbg !3806
  %1503 = call %struct.group* @getgrgid(i32 %1502), !dbg !3807
  store %struct.group* %1503, %struct.group** %23, align 8, !dbg !3808
  %1504 = load %struct.group*, %struct.group** %23, align 8, !dbg !3809
  %1505 = icmp ne %struct.group* %1504, null, !dbg !3809
  br label %originalBB193

originalBB197alteredBB:                           ; preds = %originalBB197, %805
  %1506 = load %struct.group*, %struct.group** %23, align 8, !dbg !3810
  %1507 = getelementptr inbounds %struct.group, %struct.group* %1506, i32 0, i32 0, !dbg !3811
  %1508 = load i8*, i8** %1507, align 8, !dbg !3811
  br label %originalBB197

originalBB201alteredBB:                           ; preds = %originalBB201, %825
  %1509 = load i32, i32* %28, align 4, !dbg !3812
  %1510 = zext i32 %1509 to i64, !dbg !3812
  %1511 = getelementptr inbounds [21 x i8], [21 x i8]* %32, i64 0, i64 0, !dbg !3813
  %1512 = call i8* @umaxtostr(i64 %1510, i8* %1511), !dbg !3814
  br label %originalBB201

originalBB205alteredBB:                           ; preds = %originalBB205, %846
  %1513 = call noalias i8* @xstrdup(i8* %847), !dbg !3815
  store i8* %1513, i8** %26, align 8, !dbg !3816
  call void @endgrent(), !dbg !3817
  br label %originalBB205

originalBB209alteredBB:                           ; preds = %originalBB209, %865
  br label %originalBB209

originalBB213alteredBB:                           ; preds = %originalBB213, %882
  call void @endpwent(), !dbg !3819
  br label %originalBB213

originalBB217alteredBB:                           ; preds = %originalBB217, %899
  %1514 = load i8*, i8** %25, align 8, !dbg !3821
  %1515 = icmp ne i8* %1514, null, !dbg !3823
  br label %originalBB217

originalBB221alteredBB:                           ; preds = %originalBB221, %918
  %1516 = load i8*, i8** %21, align 8, !dbg !3825
  %1517 = icmp eq i8* %1516, null, !dbg !3826
  br label %originalBB221

originalBB225alteredBB:                           ; preds = %originalBB225, %937
  %1518 = load i8*, i8** %25, align 8, !dbg !3828
  %1519 = load i8, i8* %1518, align 1, !dbg !3830
  %1520 = sext i8 %1519 to i32, !dbg !3830
  %1521 = icmp eq i32 %1520, 43, !dbg !3831
  br label %originalBB225

originalBB229alteredBB:                           ; preds = %originalBB229, %958
  br label %originalBB229

originalBB233alteredBB:                           ; preds = %originalBB233, %975
  %1522 = load i8*, i8** %25, align 8, !dbg !3832
  %1523 = call %struct.group* @getgrnam(i8* %1522), !dbg !3833
  br label %originalBB233

originalBB237alteredBB:                           ; preds = %originalBB237, %994
  store %struct.group* %995, %struct.group** %23, align 8, !dbg !3834
  %1524 = load %struct.group*, %struct.group** %23, align 8, !dbg !3835
  %1525 = icmp eq %struct.group* %1524, null, !dbg !3837
  br label %originalBB237

originalBB241alteredBB:                           ; preds = %originalBB241, %1014
  %1526 = load i8*, i8** %25, align 8, !dbg !3842
  %1527 = call i32 @xstrtoul(i8* %1526, i8** null, i32 10, i64* %33, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3.102, i64 0, i64 0)), !dbg !3844
  %1528 = icmp eq i32 %1527, 0, !dbg !3845
  br label %originalBB241

originalBB245alteredBB:                           ; preds = %originalBB245, %1034
  %1529 = load i64, i64* %33, align 8, !dbg !3847
  %1530 = icmp ule i64 %1529, 4294967295, !dbg !3848
  br label %originalBB245

originalBB249alteredBB:                           ; preds = %originalBB249, %1053
  %1531 = load i64, i64* %33, align 8, !dbg !3850
  %1532 = trunc i64 %1531 to i32, !dbg !3851
  %1533 = icmp ne i32 %1532, -1, !dbg !3852
  br label %originalBB249

originalBB254alteredBB:                           ; preds = %originalBB254, %1073
  %1534 = load i64, i64* %33, align 8, !dbg !3854
  %1535 = trunc i64 %1534 to i32, !dbg !3854
  store i32 %1535, i32* %28, align 4, !dbg !3855
  br label %originalBB254

originalBB258alteredBB:                           ; preds = %originalBB258, %1092
  %1536 = load i8*, i8** @parse_with_separator.E_invalid_group, align 8, !dbg !3857
  store i8* %1536, i8** %21, align 8, !dbg !3858
  br label %originalBB258

originalBB262alteredBB:                           ; preds = %originalBB262, %1110
  br label %originalBB262

originalBB266alteredBB:                           ; preds = %originalBB266, %1127
  %1537 = load %struct.group*, %struct.group** %23, align 8, !dbg !3860
  %1538 = getelementptr inbounds %struct.group, %struct.group* %1537, i32 0, i32 2, !dbg !3861
  %1539 = load i32, i32* %1538, align 8, !dbg !3861
  store i32 %1539, i32* %28, align 4, !dbg !3862
  br label %originalBB266

originalBB270alteredBB:                           ; preds = %originalBB270, %1147
  call void @endgrent(), !dbg !3863
  %1540 = load i8*, i8** %25, align 8, !dbg !3864
  %1541 = call noalias i8* @xstrdup(i8* %1540), !dbg !3865
  store i8* %1541, i8** %26, align 8, !dbg !3866
  br label %originalBB270

originalBB274alteredBB:                           ; preds = %originalBB274, %1166
  %1542 = load i8*, i8** %21, align 8, !dbg !3868
  %1543 = icmp eq i8* %1542, null, !dbg !3870
  br label %originalBB274

originalBB278alteredBB:                           ; preds = %originalBB278, %1185
  %1544 = load i32, i32* %27, align 4, !dbg !3872
  %1545 = load i32*, i32** %17, align 8, !dbg !3874
  store i32 %1544, i32* %1545, align 4, !dbg !3875
  %1546 = load i32*, i32** %18, align 8, !dbg !3876
  %1547 = icmp ne i32* %1546, null, !dbg !3876
  br label %originalBB278

originalBB282alteredBB:                           ; preds = %originalBB282, %1206
  %1548 = load i32, i32* %28, align 4, !dbg !3879
  %1549 = load i32*, i32** %18, align 8, !dbg !3880
  store i32 %1548, i32* %1549, align 4, !dbg !3881
  br label %originalBB282

originalBB286alteredBB:                           ; preds = %originalBB286, %1225
  %1550 = load i8**, i8*** %19, align 8, !dbg !3883
  %1551 = icmp ne i8** %1550, null, !dbg !3883
  br label %originalBB286

originalBB290alteredBB:                           ; preds = %originalBB290, %1244
  %1552 = load i8*, i8** %24, align 8, !dbg !3886
  %1553 = load i8**, i8*** %19, align 8, !dbg !3888
  store i8* %1552, i8** %1553, align 8, !dbg !3889
  store i8* null, i8** %24, align 8, !dbg !3890
  br label %originalBB290

originalBB294alteredBB:                           ; preds = %originalBB294, %1263
  %1554 = load i8**, i8*** %20, align 8, !dbg !3892
  %1555 = icmp ne i8** %1554, null, !dbg !3892
  br label %originalBB294

originalBB298alteredBB:                           ; preds = %originalBB298, %1282
  %1556 = load i8*, i8** %26, align 8, !dbg !3895
  %1557 = load i8**, i8*** %20, align 8, !dbg !3897
  store i8* %1556, i8** %1557, align 8, !dbg !3898
  store i8* null, i8** %26, align 8, !dbg !3899
  br label %originalBB298

originalBB303alteredBB:                           ; preds = %originalBB303, %1301
  br label %originalBB303

originalBB307alteredBB:                           ; preds = %originalBB307, %1318
  %1558 = load i8*, i8** %24, align 8, !dbg !3902
  call void @free(i8* %1558) #10, !dbg !3903
  %1559 = load i8*, i8** %26, align 8, !dbg !3904
  call void @free(i8* %1559) #10, !dbg !3905
  %1560 = load i8*, i8** %21, align 8, !dbg !3906
  %1561 = icmp ne i8* %1560, null, !dbg !3906
  br label %originalBB307

originalBB311alteredBB:                           ; preds = %originalBB311, %1339
  %1562 = load i8*, i8** %21, align 8, !dbg !3907
  %1563 = call i8* @gettext(i8* %1562) #10, !dbg !3907
  br label %originalBB311

originalBB315alteredBB:                           ; preds = %originalBB315, %1358
  br label %originalBB315

originalBB319alteredBB:                           ; preds = %originalBB319, %1375
  br label %originalBB319
}

declare dso_local %struct.passwd* @getpwnam(i8*) #3

declare dso_local void @endgrent() #3

declare dso_local void @endpwent() #3

declare dso_local %struct.group* @getgrnam(i8*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @version_etc_arn(%struct._IO_FILE*, i8*, i8*, i8*, i8**, i64) #4 !dbg !3949 {
  %7 = load i32, i32* @x.57
  %8 = load i32, i32* @y.58
  %9 = sub i32 %7, 1
  %10 = mul i32 %7, %9
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %8, 10
  %14 = or i1 %12, %13
  br i1 %14, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %6, %originalBBalteredBB
  %15 = alloca %struct._IO_FILE*, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i8*, align 8
  %18 = alloca i8*, align 8
  %19 = alloca i8**, align 8
  %20 = alloca i64, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %15, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %15, metadata !4007, metadata !DIExpression()), !dbg !4008
  store i8* %1, i8** %16, align 8
  call void @llvm.dbg.declare(metadata i8** %16, metadata !4009, metadata !DIExpression()), !dbg !4010
  store i8* %2, i8** %17, align 8
  call void @llvm.dbg.declare(metadata i8** %17, metadata !4011, metadata !DIExpression()), !dbg !4012
  store i8* %3, i8** %18, align 8
  call void @llvm.dbg.declare(metadata i8** %18, metadata !4013, metadata !DIExpression()), !dbg !4014
  store i8** %4, i8*** %19, align 8
  call void @llvm.dbg.declare(metadata i8*** %19, metadata !4015, metadata !DIExpression()), !dbg !4016
  store i64 %5, i64* %20, align 8
  call void @llvm.dbg.declare(metadata i64* %20, metadata !4017, metadata !DIExpression()), !dbg !4018
  %21 = load i8*, i8** %16, align 8, !dbg !4019
  %22 = icmp ne i8* %21, null, !dbg !4019
  %23 = load i32, i32* @x.57
  %24 = load i32, i32* @y.58
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %22, label %31, label %53, !dbg !4021

31:                                               ; preds = %originalBBpart2
  %32 = load i32, i32* @x.57
  %33 = load i32, i32* @y.58
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %31, %originalBB1alteredBB
  %40 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !4022
  %41 = load i8*, i8** %16, align 8, !dbg !4023
  %42 = load i8*, i8** %17, align 8, !dbg !4024
  %43 = load i8*, i8** %18, align 8, !dbg !4025
  %44 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %40, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.106, i64 0, i64 0), i8* %41, i8* %42, i8* %43), !dbg !4026
  %45 = load i32, i32* @x.57
  %46 = load i32, i32* @y.58
  %47 = sub i32 %45, 1
  %48 = mul i32 %45, %47
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %50, %51
  br i1 %52, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %74, !dbg !4026

53:                                               ; preds = %originalBBpart2
  %54 = load i32, i32* @x.57
  %55 = load i32, i32* @y.58
  %56 = sub i32 %54, 1
  %57 = mul i32 %54, %56
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %55, 10
  %61 = or i1 %59, %60
  br i1 %61, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %53, %originalBB6alteredBB
  %62 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !4027
  %63 = load i8*, i8** %17, align 8, !dbg !4028
  %64 = load i8*, i8** %18, align 8, !dbg !4029
  %65 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %62, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.107, i64 0, i64 0), i8* %63, i8* %64), !dbg !4030
  %66 = load i32, i32* @x.57
  %67 = load i32, i32* @y.58
  %68 = sub i32 %66, 1
  %69 = mul i32 %66, %68
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %67, 10
  %73 = or i1 %71, %72
  br i1 %73, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %74

74:                                               ; preds = %originalBBpart28, %originalBBpart24
  %75 = load i32, i32* @x.57
  %76 = load i32, i32* @y.58
  %77 = sub i32 %75, 1
  %78 = mul i32 %75, %77
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %76, 10
  %82 = or i1 %80, %81
  br i1 %82, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %74, %originalBB10alteredBB
  %83 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !4031
  %84 = call i8* @gettext(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.108, i64 0, i64 0)) #10, !dbg !4032
  %85 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %83, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @version_etc_copyright, i64 0, i64 0), i8* %84, i32 2020), !dbg !4033
  %86 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !4034
  %87 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.109, i64 0, i64 0), %struct._IO_FILE* %86), !dbg !4034
  %88 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !4035
  %89 = call i8* @gettext(i8* getelementptr inbounds ([171 x i8], [171 x i8]* @.str.4.110, i64 0, i64 0)) #10, !dbg !4036
  %90 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %88, i8* %89, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.5.111, i64 0, i64 0)), !dbg !4037
  %91 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !4038
  %92 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.109, i64 0, i64 0), %struct._IO_FILE* %91), !dbg !4038
  %93 = load i64, i64* %20, align 8, !dbg !4039
  %94 = load i32, i32* @x.57
  %95 = load i32, i32* @y.58
  %96 = sub i32 %94, 1
  %97 = mul i32 %94, %96
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %95, 10
  %101 = or i1 %99, %100
  br i1 %101, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  switch i64 %93, label %402 [
    i64 0, label %102
    i64 1, label %119
    i64 2, label %126
    i64 3, label %152
    i64 4, label %181
    i64 5, label %213
    i64 6, label %248
    i64 7, label %270
    i64 8, label %311
    i64 9, label %355
  ], !dbg !4040

102:                                              ; preds = %originalBBpart212
  %103 = load i32, i32* @x.57
  %104 = load i32, i32* @y.58
  %105 = sub i32 %103, 1
  %106 = mul i32 %103, %105
  %107 = urem i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %104, 10
  %110 = or i1 %108, %109
  br i1 %110, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %102, %originalBB14alteredBB
  %111 = load i32, i32* @x.57
  %112 = load i32, i32* @y.58
  %113 = sub i32 %111, 1
  %114 = mul i32 %111, %113
  %115 = urem i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %112, 10
  %118 = or i1 %116, %117
  br i1 %118, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %449, !dbg !4041

119:                                              ; preds = %originalBBpart212
  %120 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !4043
  %121 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6.112, i64 0, i64 0)) #10, !dbg !4044
  %122 = load i8**, i8*** %19, align 8, !dbg !4045
  %123 = getelementptr inbounds i8*, i8** %122, i64 0, !dbg !4045
  %124 = load i8*, i8** %123, align 8, !dbg !4045
  %125 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %120, i8* %121, i8* %124), !dbg !4046
  br label %449, !dbg !4047

126:                                              ; preds = %originalBBpart212
  %127 = load i32, i32* @x.57
  %128 = load i32, i32* @y.58
  %129 = sub i32 %127, 1
  %130 = mul i32 %127, %129
  %131 = urem i32 %130, 2
  %132 = icmp eq i32 %131, 0
  %133 = icmp slt i32 %128, 10
  %134 = or i1 %132, %133
  br i1 %134, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %126, %originalBB18alteredBB
  %135 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !4048
  %136 = call i8* @gettext(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.113, i64 0, i64 0)) #10, !dbg !4049
  %137 = load i8**, i8*** %19, align 8, !dbg !4050
  %138 = getelementptr inbounds i8*, i8** %137, i64 0, !dbg !4050
  %139 = load i8*, i8** %138, align 8, !dbg !4050
  %140 = load i8**, i8*** %19, align 8, !dbg !4051
  %141 = getelementptr inbounds i8*, i8** %140, i64 1, !dbg !4051
  %142 = load i8*, i8** %141, align 8, !dbg !4051
  %143 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %135, i8* %136, i8* %139, i8* %142), !dbg !4052
  %144 = load i32, i32* @x.57
  %145 = load i32, i32* @y.58
  %146 = sub i32 %144, 1
  %147 = mul i32 %144, %146
  %148 = urem i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = icmp slt i32 %145, 10
  %151 = or i1 %149, %150
  br i1 %151, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %449, !dbg !4053

152:                                              ; preds = %originalBBpart212
  %153 = load i32, i32* @x.57
  %154 = load i32, i32* @y.58
  %155 = sub i32 %153, 1
  %156 = mul i32 %153, %155
  %157 = urem i32 %156, 2
  %158 = icmp eq i32 %157, 0
  %159 = icmp slt i32 %154, 10
  %160 = or i1 %158, %159
  br i1 %160, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %152, %originalBB22alteredBB
  %161 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !4054
  %162 = call i8* @gettext(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.8.114, i64 0, i64 0)) #10, !dbg !4055
  %163 = load i8**, i8*** %19, align 8, !dbg !4056
  %164 = getelementptr inbounds i8*, i8** %163, i64 0, !dbg !4056
  %165 = load i8*, i8** %164, align 8, !dbg !4056
  %166 = load i8**, i8*** %19, align 8, !dbg !4057
  %167 = getelementptr inbounds i8*, i8** %166, i64 1, !dbg !4057
  %168 = load i8*, i8** %167, align 8, !dbg !4057
  %169 = load i8**, i8*** %19, align 8, !dbg !4058
  %170 = getelementptr inbounds i8*, i8** %169, i64 2, !dbg !4058
  %171 = load i8*, i8** %170, align 8, !dbg !4058
  %172 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %161, i8* %162, i8* %165, i8* %168, i8* %171), !dbg !4059
  %173 = load i32, i32* @x.57
  %174 = load i32, i32* @y.58
  %175 = sub i32 %173, 1
  %176 = mul i32 %173, %175
  %177 = urem i32 %176, 2
  %178 = icmp eq i32 %177, 0
  %179 = icmp slt i32 %174, 10
  %180 = or i1 %178, %179
  br i1 %180, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br label %449, !dbg !4060

181:                                              ; preds = %originalBBpart212
  %182 = load i32, i32* @x.57
  %183 = load i32, i32* @y.58
  %184 = sub i32 %182, 1
  %185 = mul i32 %182, %184
  %186 = urem i32 %185, 2
  %187 = icmp eq i32 %186, 0
  %188 = icmp slt i32 %183, 10
  %189 = or i1 %187, %188
  br i1 %189, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %181, %originalBB26alteredBB
  %190 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !4061
  %191 = call i8* @gettext(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.9.115, i64 0, i64 0)) #10, !dbg !4062
  %192 = load i8**, i8*** %19, align 8, !dbg !4063
  %193 = getelementptr inbounds i8*, i8** %192, i64 0, !dbg !4063
  %194 = load i8*, i8** %193, align 8, !dbg !4063
  %195 = load i8**, i8*** %19, align 8, !dbg !4064
  %196 = getelementptr inbounds i8*, i8** %195, i64 1, !dbg !4064
  %197 = load i8*, i8** %196, align 8, !dbg !4064
  %198 = load i8**, i8*** %19, align 8, !dbg !4065
  %199 = getelementptr inbounds i8*, i8** %198, i64 2, !dbg !4065
  %200 = load i8*, i8** %199, align 8, !dbg !4065
  %201 = load i8**, i8*** %19, align 8, !dbg !4066
  %202 = getelementptr inbounds i8*, i8** %201, i64 3, !dbg !4066
  %203 = load i8*, i8** %202, align 8, !dbg !4066
  %204 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %190, i8* %191, i8* %194, i8* %197, i8* %200, i8* %203), !dbg !4067
  %205 = load i32, i32* @x.57
  %206 = load i32, i32* @y.58
  %207 = sub i32 %205, 1
  %208 = mul i32 %205, %207
  %209 = urem i32 %208, 2
  %210 = icmp eq i32 %209, 0
  %211 = icmp slt i32 %206, 10
  %212 = or i1 %210, %211
  br i1 %212, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br label %449, !dbg !4068

213:                                              ; preds = %originalBBpart212
  %214 = load i32, i32* @x.57
  %215 = load i32, i32* @y.58
  %216 = sub i32 %214, 1
  %217 = mul i32 %214, %216
  %218 = urem i32 %217, 2
  %219 = icmp eq i32 %218, 0
  %220 = icmp slt i32 %215, 10
  %221 = or i1 %219, %220
  br i1 %221, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %213, %originalBB30alteredBB
  %222 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !4069
  %223 = call i8* @gettext(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.10.116, i64 0, i64 0)) #10, !dbg !4070
  %224 = load i8**, i8*** %19, align 8, !dbg !4071
  %225 = getelementptr inbounds i8*, i8** %224, i64 0, !dbg !4071
  %226 = load i8*, i8** %225, align 8, !dbg !4071
  %227 = load i8**, i8*** %19, align 8, !dbg !4072
  %228 = getelementptr inbounds i8*, i8** %227, i64 1, !dbg !4072
  %229 = load i8*, i8** %228, align 8, !dbg !4072
  %230 = load i8**, i8*** %19, align 8, !dbg !4073
  %231 = getelementptr inbounds i8*, i8** %230, i64 2, !dbg !4073
  %232 = load i8*, i8** %231, align 8, !dbg !4073
  %233 = load i8**, i8*** %19, align 8, !dbg !4074
  %234 = getelementptr inbounds i8*, i8** %233, i64 3, !dbg !4074
  %235 = load i8*, i8** %234, align 8, !dbg !4074
  %236 = load i8**, i8*** %19, align 8, !dbg !4075
  %237 = getelementptr inbounds i8*, i8** %236, i64 4, !dbg !4075
  %238 = load i8*, i8** %237, align 8, !dbg !4075
  %239 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %222, i8* %223, i8* %226, i8* %229, i8* %232, i8* %235, i8* %238), !dbg !4076
  %240 = load i32, i32* @x.57
  %241 = load i32, i32* @y.58
  %242 = sub i32 %240, 1
  %243 = mul i32 %240, %242
  %244 = urem i32 %243, 2
  %245 = icmp eq i32 %244, 0
  %246 = icmp slt i32 %241, 10
  %247 = or i1 %245, %246
  br i1 %247, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br label %449, !dbg !4077

248:                                              ; preds = %originalBBpart212
  %249 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !4078
  %250 = call i8* @gettext(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.11.117, i64 0, i64 0)) #10, !dbg !4079
  %251 = load i8**, i8*** %19, align 8, !dbg !4080
  %252 = getelementptr inbounds i8*, i8** %251, i64 0, !dbg !4080
  %253 = load i8*, i8** %252, align 8, !dbg !4080
  %254 = load i8**, i8*** %19, align 8, !dbg !4081
  %255 = getelementptr inbounds i8*, i8** %254, i64 1, !dbg !4081
  %256 = load i8*, i8** %255, align 8, !dbg !4081
  %257 = load i8**, i8*** %19, align 8, !dbg !4082
  %258 = getelementptr inbounds i8*, i8** %257, i64 2, !dbg !4082
  %259 = load i8*, i8** %258, align 8, !dbg !4082
  %260 = load i8**, i8*** %19, align 8, !dbg !4083
  %261 = getelementptr inbounds i8*, i8** %260, i64 3, !dbg !4083
  %262 = load i8*, i8** %261, align 8, !dbg !4083
  %263 = load i8**, i8*** %19, align 8, !dbg !4084
  %264 = getelementptr inbounds i8*, i8** %263, i64 4, !dbg !4084
  %265 = load i8*, i8** %264, align 8, !dbg !4084
  %266 = load i8**, i8*** %19, align 8, !dbg !4085
  %267 = getelementptr inbounds i8*, i8** %266, i64 5, !dbg !4085
  %268 = load i8*, i8** %267, align 8, !dbg !4085
  %269 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %249, i8* %250, i8* %253, i8* %256, i8* %259, i8* %262, i8* %265, i8* %268), !dbg !4086
  br label %449, !dbg !4087

270:                                              ; preds = %originalBBpart212
  %271 = load i32, i32* @x.57
  %272 = load i32, i32* @y.58
  %273 = sub i32 %271, 1
  %274 = mul i32 %271, %273
  %275 = urem i32 %274, 2
  %276 = icmp eq i32 %275, 0
  %277 = icmp slt i32 %272, 10
  %278 = or i1 %276, %277
  br i1 %278, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %270, %originalBB34alteredBB
  %279 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !4088
  %280 = call i8* @gettext(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.12.118, i64 0, i64 0)) #10, !dbg !4089
  %281 = load i8**, i8*** %19, align 8, !dbg !4090
  %282 = getelementptr inbounds i8*, i8** %281, i64 0, !dbg !4090
  %283 = load i8*, i8** %282, align 8, !dbg !4090
  %284 = load i8**, i8*** %19, align 8, !dbg !4091
  %285 = getelementptr inbounds i8*, i8** %284, i64 1, !dbg !4091
  %286 = load i8*, i8** %285, align 8, !dbg !4091
  %287 = load i8**, i8*** %19, align 8, !dbg !4092
  %288 = getelementptr inbounds i8*, i8** %287, i64 2, !dbg !4092
  %289 = load i8*, i8** %288, align 8, !dbg !4092
  %290 = load i8**, i8*** %19, align 8, !dbg !4093
  %291 = getelementptr inbounds i8*, i8** %290, i64 3, !dbg !4093
  %292 = load i8*, i8** %291, align 8, !dbg !4093
  %293 = load i8**, i8*** %19, align 8, !dbg !4094
  %294 = getelementptr inbounds i8*, i8** %293, i64 4, !dbg !4094
  %295 = load i8*, i8** %294, align 8, !dbg !4094
  %296 = load i8**, i8*** %19, align 8, !dbg !4095
  %297 = getelementptr inbounds i8*, i8** %296, i64 5, !dbg !4095
  %298 = load i8*, i8** %297, align 8, !dbg !4095
  %299 = load i8**, i8*** %19, align 8, !dbg !4096
  %300 = getelementptr inbounds i8*, i8** %299, i64 6, !dbg !4096
  %301 = load i8*, i8** %300, align 8, !dbg !4096
  %302 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %279, i8* %280, i8* %283, i8* %286, i8* %289, i8* %292, i8* %295, i8* %298, i8* %301), !dbg !4097
  %303 = load i32, i32* @x.57
  %304 = load i32, i32* @y.58
  %305 = sub i32 %303, 1
  %306 = mul i32 %303, %305
  %307 = urem i32 %306, 2
  %308 = icmp eq i32 %307, 0
  %309 = icmp slt i32 %304, 10
  %310 = or i1 %308, %309
  br i1 %310, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  br label %449, !dbg !4098

311:                                              ; preds = %originalBBpart212
  %312 = load i32, i32* @x.57
  %313 = load i32, i32* @y.58
  %314 = sub i32 %312, 1
  %315 = mul i32 %312, %314
  %316 = urem i32 %315, 2
  %317 = icmp eq i32 %316, 0
  %318 = icmp slt i32 %313, 10
  %319 = or i1 %317, %318
  br i1 %319, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %311, %originalBB38alteredBB
  %320 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !4099
  %321 = call i8* @gettext(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.13.119, i64 0, i64 0)) #10, !dbg !4100
  %322 = load i8**, i8*** %19, align 8, !dbg !4101
  %323 = getelementptr inbounds i8*, i8** %322, i64 0, !dbg !4101
  %324 = load i8*, i8** %323, align 8, !dbg !4101
  %325 = load i8**, i8*** %19, align 8, !dbg !4102
  %326 = getelementptr inbounds i8*, i8** %325, i64 1, !dbg !4102
  %327 = load i8*, i8** %326, align 8, !dbg !4102
  %328 = load i8**, i8*** %19, align 8, !dbg !4103
  %329 = getelementptr inbounds i8*, i8** %328, i64 2, !dbg !4103
  %330 = load i8*, i8** %329, align 8, !dbg !4103
  %331 = load i8**, i8*** %19, align 8, !dbg !4104
  %332 = getelementptr inbounds i8*, i8** %331, i64 3, !dbg !4104
  %333 = load i8*, i8** %332, align 8, !dbg !4104
  %334 = load i8**, i8*** %19, align 8, !dbg !4105
  %335 = getelementptr inbounds i8*, i8** %334, i64 4, !dbg !4105
  %336 = load i8*, i8** %335, align 8, !dbg !4105
  %337 = load i8**, i8*** %19, align 8, !dbg !4106
  %338 = getelementptr inbounds i8*, i8** %337, i64 5, !dbg !4106
  %339 = load i8*, i8** %338, align 8, !dbg !4106
  %340 = load i8**, i8*** %19, align 8, !dbg !4107
  %341 = getelementptr inbounds i8*, i8** %340, i64 6, !dbg !4107
  %342 = load i8*, i8** %341, align 8, !dbg !4107
  %343 = load i8**, i8*** %19, align 8, !dbg !4108
  %344 = getelementptr inbounds i8*, i8** %343, i64 7, !dbg !4108
  %345 = load i8*, i8** %344, align 8, !dbg !4108
  %346 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %320, i8* %321, i8* %324, i8* %327, i8* %330, i8* %333, i8* %336, i8* %339, i8* %342, i8* %345), !dbg !4109
  %347 = load i32, i32* @x.57
  %348 = load i32, i32* @y.58
  %349 = sub i32 %347, 1
  %350 = mul i32 %347, %349
  %351 = urem i32 %350, 2
  %352 = icmp eq i32 %351, 0
  %353 = icmp slt i32 %348, 10
  %354 = or i1 %352, %353
  br i1 %354, label %originalBBpart240, label %originalBB38alteredBB

originalBBpart240:                                ; preds = %originalBB38
  br label %449, !dbg !4110

355:                                              ; preds = %originalBBpart212
  %356 = load i32, i32* @x.57
  %357 = load i32, i32* @y.58
  %358 = sub i32 %356, 1
  %359 = mul i32 %356, %358
  %360 = urem i32 %359, 2
  %361 = icmp eq i32 %360, 0
  %362 = icmp slt i32 %357, 10
  %363 = or i1 %361, %362
  br i1 %363, label %originalBB42, label %originalBB42alteredBB

originalBB42:                                     ; preds = %355, %originalBB42alteredBB
  %364 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !4111
  %365 = call i8* @gettext(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.14.120, i64 0, i64 0)) #10, !dbg !4112
  %366 = load i8**, i8*** %19, align 8, !dbg !4113
  %367 = getelementptr inbounds i8*, i8** %366, i64 0, !dbg !4113
  %368 = load i8*, i8** %367, align 8, !dbg !4113
  %369 = load i8**, i8*** %19, align 8, !dbg !4114
  %370 = getelementptr inbounds i8*, i8** %369, i64 1, !dbg !4114
  %371 = load i8*, i8** %370, align 8, !dbg !4114
  %372 = load i8**, i8*** %19, align 8, !dbg !4115
  %373 = getelementptr inbounds i8*, i8** %372, i64 2, !dbg !4115
  %374 = load i8*, i8** %373, align 8, !dbg !4115
  %375 = load i8**, i8*** %19, align 8, !dbg !4116
  %376 = getelementptr inbounds i8*, i8** %375, i64 3, !dbg !4116
  %377 = load i8*, i8** %376, align 8, !dbg !4116
  %378 = load i8**, i8*** %19, align 8, !dbg !4117
  %379 = getelementptr inbounds i8*, i8** %378, i64 4, !dbg !4117
  %380 = load i8*, i8** %379, align 8, !dbg !4117
  %381 = load i8**, i8*** %19, align 8, !dbg !4118
  %382 = getelementptr inbounds i8*, i8** %381, i64 5, !dbg !4118
  %383 = load i8*, i8** %382, align 8, !dbg !4118
  %384 = load i8**, i8*** %19, align 8, !dbg !4119
  %385 = getelementptr inbounds i8*, i8** %384, i64 6, !dbg !4119
  %386 = load i8*, i8** %385, align 8, !dbg !4119
  %387 = load i8**, i8*** %19, align 8, !dbg !4120
  %388 = getelementptr inbounds i8*, i8** %387, i64 7, !dbg !4120
  %389 = load i8*, i8** %388, align 8, !dbg !4120
  %390 = load i8**, i8*** %19, align 8, !dbg !4121
  %391 = getelementptr inbounds i8*, i8** %390, i64 8, !dbg !4121
  %392 = load i8*, i8** %391, align 8, !dbg !4121
  %393 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %364, i8* %365, i8* %368, i8* %371, i8* %374, i8* %377, i8* %380, i8* %383, i8* %386, i8* %389, i8* %392), !dbg !4122
  %394 = load i32, i32* @x.57
  %395 = load i32, i32* @y.58
  %396 = sub i32 %394, 1
  %397 = mul i32 %394, %396
  %398 = urem i32 %397, 2
  %399 = icmp eq i32 %398, 0
  %400 = icmp slt i32 %395, 10
  %401 = or i1 %399, %400
  br i1 %401, label %originalBBpart244, label %originalBB42alteredBB

originalBBpart244:                                ; preds = %originalBB42
  br label %449, !dbg !4123

402:                                              ; preds = %originalBBpart212
  %403 = load i32, i32* @x.57
  %404 = load i32, i32* @y.58
  %405 = sub i32 %403, 1
  %406 = mul i32 %403, %405
  %407 = urem i32 %406, 2
  %408 = icmp eq i32 %407, 0
  %409 = icmp slt i32 %404, 10
  %410 = or i1 %408, %409
  br i1 %410, label %originalBB46, label %originalBB46alteredBB

originalBB46:                                     ; preds = %402, %originalBB46alteredBB
  %411 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !4124
  %412 = call i8* @gettext(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.15.121, i64 0, i64 0)) #10, !dbg !4125
  %413 = load i8**, i8*** %19, align 8, !dbg !4126
  %414 = getelementptr inbounds i8*, i8** %413, i64 0, !dbg !4126
  %415 = load i8*, i8** %414, align 8, !dbg !4126
  %416 = load i8**, i8*** %19, align 8, !dbg !4127
  %417 = getelementptr inbounds i8*, i8** %416, i64 1, !dbg !4127
  %418 = load i8*, i8** %417, align 8, !dbg !4127
  %419 = load i8**, i8*** %19, align 8, !dbg !4128
  %420 = getelementptr inbounds i8*, i8** %419, i64 2, !dbg !4128
  %421 = load i8*, i8** %420, align 8, !dbg !4128
  %422 = load i8**, i8*** %19, align 8, !dbg !4129
  %423 = getelementptr inbounds i8*, i8** %422, i64 3, !dbg !4129
  %424 = load i8*, i8** %423, align 8, !dbg !4129
  %425 = load i8**, i8*** %19, align 8, !dbg !4130
  %426 = getelementptr inbounds i8*, i8** %425, i64 4, !dbg !4130
  %427 = load i8*, i8** %426, align 8, !dbg !4130
  %428 = load i8**, i8*** %19, align 8, !dbg !4131
  %429 = getelementptr inbounds i8*, i8** %428, i64 5, !dbg !4131
  %430 = load i8*, i8** %429, align 8, !dbg !4131
  %431 = load i8**, i8*** %19, align 8, !dbg !4132
  %432 = getelementptr inbounds i8*, i8** %431, i64 6, !dbg !4132
  %433 = load i8*, i8** %432, align 8, !dbg !4132
  %434 = load i8**, i8*** %19, align 8, !dbg !4133
  %435 = getelementptr inbounds i8*, i8** %434, i64 7, !dbg !4133
  %436 = load i8*, i8** %435, align 8, !dbg !4133
  %437 = load i8**, i8*** %19, align 8, !dbg !4134
  %438 = getelementptr inbounds i8*, i8** %437, i64 8, !dbg !4134
  %439 = load i8*, i8** %438, align 8, !dbg !4134
  %440 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %411, i8* %412, i8* %415, i8* %418, i8* %421, i8* %424, i8* %427, i8* %430, i8* %433, i8* %436, i8* %439), !dbg !4135
  %441 = load i32, i32* @x.57
  %442 = load i32, i32* @y.58
  %443 = sub i32 %441, 1
  %444 = mul i32 %441, %443
  %445 = urem i32 %444, 2
  %446 = icmp eq i32 %445, 0
  %447 = icmp slt i32 %442, 10
  %448 = or i1 %446, %447
  br i1 %448, label %originalBBpart248, label %originalBB46alteredBB

originalBBpart248:                                ; preds = %originalBB46
  br label %449, !dbg !4136

449:                                              ; preds = %originalBBpart248, %originalBBpart244, %originalBBpart240, %originalBBpart236, %248, %originalBBpart232, %originalBBpart228, %originalBBpart224, %originalBBpart220, %119, %originalBBpart216
  %450 = load i32, i32* @x.57
  %451 = load i32, i32* @y.58
  %452 = sub i32 %450, 1
  %453 = mul i32 %450, %452
  %454 = urem i32 %453, 2
  %455 = icmp eq i32 %454, 0
  %456 = icmp slt i32 %451, 10
  %457 = or i1 %455, %456
  br i1 %457, label %originalBB50, label %originalBB50alteredBB

originalBB50:                                     ; preds = %449, %originalBB50alteredBB
  %458 = load i32, i32* @x.57
  %459 = load i32, i32* @y.58
  %460 = sub i32 %458, 1
  %461 = mul i32 %458, %460
  %462 = urem i32 %461, 2
  %463 = icmp eq i32 %462, 0
  %464 = icmp slt i32 %459, 10
  %465 = or i1 %463, %464
  br i1 %465, label %originalBBpart252, label %originalBB50alteredBB

originalBBpart252:                                ; preds = %originalBB50
  ret void, !dbg !4137

originalBBalteredBB:                              ; preds = %originalBB, %6
  %466 = alloca %struct._IO_FILE*, align 8
  %467 = alloca i8*, align 8
  %468 = alloca i8*, align 8
  %469 = alloca i8*, align 8
  %470 = alloca i8**, align 8
  %471 = alloca i64, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %466, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %466, metadata !4138, metadata !DIExpression()), !dbg !4008
  store i8* %1, i8** %467, align 8
  call void @llvm.dbg.declare(metadata i8** %467, metadata !4177, metadata !DIExpression()), !dbg !4010
  store i8* %2, i8** %468, align 8
  call void @llvm.dbg.declare(metadata i8** %468, metadata !4178, metadata !DIExpression()), !dbg !4012
  store i8* %3, i8** %469, align 8
  call void @llvm.dbg.declare(metadata i8** %469, metadata !4179, metadata !DIExpression()), !dbg !4014
  store i8** %4, i8*** %470, align 8
  call void @llvm.dbg.declare(metadata i8*** %470, metadata !4180, metadata !DIExpression()), !dbg !4016
  store i64 %5, i64* %471, align 8
  call void @llvm.dbg.declare(metadata i64* %471, metadata !4181, metadata !DIExpression()), !dbg !4018
  %472 = load i8*, i8** %467, align 8, !dbg !4019
  %473 = icmp ne i8* %472, null, !dbg !4019
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %31
  %474 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !4022
  %475 = load i8*, i8** %16, align 8, !dbg !4023
  %476 = load i8*, i8** %17, align 8, !dbg !4024
  %477 = load i8*, i8** %18, align 8, !dbg !4025
  %478 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %474, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.106, i64 0, i64 0), i8* %475, i8* %476, i8* %477), !dbg !4026
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %53
  %479 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !4027
  %480 = load i8*, i8** %17, align 8, !dbg !4028
  %481 = load i8*, i8** %18, align 8, !dbg !4029
  %482 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %479, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.107, i64 0, i64 0), i8* %480, i8* %481), !dbg !4030
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %74
  %483 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !4031
  %484 = call i8* @gettext(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.108, i64 0, i64 0)) #10, !dbg !4032
  %485 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %483, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @version_etc_copyright, i64 0, i64 0), i8* %484, i32 2020), !dbg !4033
  %486 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !4034
  %487 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.109, i64 0, i64 0), %struct._IO_FILE* %486), !dbg !4034
  %488 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !4035
  %489 = call i8* @gettext(i8* getelementptr inbounds ([171 x i8], [171 x i8]* @.str.4.110, i64 0, i64 0)) #10, !dbg !4036
  %490 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %488, i8* %489, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.5.111, i64 0, i64 0)), !dbg !4037
  %491 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !4038
  %492 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.109, i64 0, i64 0), %struct._IO_FILE* %491), !dbg !4038
  %493 = load i64, i64* %20, align 8, !dbg !4039
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %102
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %126
  %494 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !4048
  %495 = call i8* @gettext(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.113, i64 0, i64 0)) #10, !dbg !4049
  %496 = load i8**, i8*** %19, align 8, !dbg !4050
  %497 = getelementptr inbounds i8*, i8** %496, i64 0, !dbg !4050
  %498 = load i8*, i8** %497, align 8, !dbg !4050
  %499 = load i8**, i8*** %19, align 8, !dbg !4051
  %500 = getelementptr inbounds i8*, i8** %499, i64 1, !dbg !4051
  %501 = load i8*, i8** %500, align 8, !dbg !4051
  %502 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %494, i8* %495, i8* %498, i8* %501), !dbg !4052
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %152
  %503 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !4054
  %504 = call i8* @gettext(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.8.114, i64 0, i64 0)) #10, !dbg !4055
  %505 = load i8**, i8*** %19, align 8, !dbg !4056
  %506 = getelementptr inbounds i8*, i8** %505, i64 0, !dbg !4056
  %507 = load i8*, i8** %506, align 8, !dbg !4056
  %508 = load i8**, i8*** %19, align 8, !dbg !4057
  %509 = getelementptr inbounds i8*, i8** %508, i64 1, !dbg !4057
  %510 = load i8*, i8** %509, align 8, !dbg !4057
  %511 = load i8**, i8*** %19, align 8, !dbg !4058
  %512 = getelementptr inbounds i8*, i8** %511, i64 2, !dbg !4058
  %513 = load i8*, i8** %512, align 8, !dbg !4058
  %514 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %503, i8* %504, i8* %507, i8* %510, i8* %513), !dbg !4059
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %181
  %515 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !4061
  %516 = call i8* @gettext(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.9.115, i64 0, i64 0)) #10, !dbg !4062
  %517 = load i8**, i8*** %19, align 8, !dbg !4063
  %518 = getelementptr inbounds i8*, i8** %517, i64 0, !dbg !4063
  %519 = load i8*, i8** %518, align 8, !dbg !4063
  %520 = load i8**, i8*** %19, align 8, !dbg !4064
  %521 = getelementptr inbounds i8*, i8** %520, i64 1, !dbg !4064
  %522 = load i8*, i8** %521, align 8, !dbg !4064
  %523 = load i8**, i8*** %19, align 8, !dbg !4065
  %524 = getelementptr inbounds i8*, i8** %523, i64 2, !dbg !4065
  %525 = load i8*, i8** %524, align 8, !dbg !4065
  %526 = load i8**, i8*** %19, align 8, !dbg !4066
  %527 = getelementptr inbounds i8*, i8** %526, i64 3, !dbg !4066
  %528 = load i8*, i8** %527, align 8, !dbg !4066
  %529 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %515, i8* %516, i8* %519, i8* %522, i8* %525, i8* %528), !dbg !4067
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %213
  %530 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !4069
  %531 = call i8* @gettext(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.10.116, i64 0, i64 0)) #10, !dbg !4070
  %532 = load i8**, i8*** %19, align 8, !dbg !4071
  %533 = getelementptr inbounds i8*, i8** %532, i64 0, !dbg !4071
  %534 = load i8*, i8** %533, align 8, !dbg !4071
  %535 = load i8**, i8*** %19, align 8, !dbg !4072
  %536 = getelementptr inbounds i8*, i8** %535, i64 1, !dbg !4072
  %537 = load i8*, i8** %536, align 8, !dbg !4072
  %538 = load i8**, i8*** %19, align 8, !dbg !4073
  %539 = getelementptr inbounds i8*, i8** %538, i64 2, !dbg !4073
  %540 = load i8*, i8** %539, align 8, !dbg !4073
  %541 = load i8**, i8*** %19, align 8, !dbg !4074
  %542 = getelementptr inbounds i8*, i8** %541, i64 3, !dbg !4074
  %543 = load i8*, i8** %542, align 8, !dbg !4074
  %544 = load i8**, i8*** %19, align 8, !dbg !4075
  %545 = getelementptr inbounds i8*, i8** %544, i64 4, !dbg !4075
  %546 = load i8*, i8** %545, align 8, !dbg !4075
  %547 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %530, i8* %531, i8* %534, i8* %537, i8* %540, i8* %543, i8* %546), !dbg !4076
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %270
  %548 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !4088
  %549 = call i8* @gettext(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.12.118, i64 0, i64 0)) #10, !dbg !4089
  %550 = load i8**, i8*** %19, align 8, !dbg !4090
  %551 = getelementptr inbounds i8*, i8** %550, i64 0, !dbg !4090
  %552 = load i8*, i8** %551, align 8, !dbg !4090
  %553 = load i8**, i8*** %19, align 8, !dbg !4091
  %554 = getelementptr inbounds i8*, i8** %553, i64 1, !dbg !4091
  %555 = load i8*, i8** %554, align 8, !dbg !4091
  %556 = load i8**, i8*** %19, align 8, !dbg !4092
  %557 = getelementptr inbounds i8*, i8** %556, i64 2, !dbg !4092
  %558 = load i8*, i8** %557, align 8, !dbg !4092
  %559 = load i8**, i8*** %19, align 8, !dbg !4093
  %560 = getelementptr inbounds i8*, i8** %559, i64 3, !dbg !4093
  %561 = load i8*, i8** %560, align 8, !dbg !4093
  %562 = load i8**, i8*** %19, align 8, !dbg !4094
  %563 = getelementptr inbounds i8*, i8** %562, i64 4, !dbg !4094
  %564 = load i8*, i8** %563, align 8, !dbg !4094
  %565 = load i8**, i8*** %19, align 8, !dbg !4095
  %566 = getelementptr inbounds i8*, i8** %565, i64 5, !dbg !4095
  %567 = load i8*, i8** %566, align 8, !dbg !4095
  %568 = load i8**, i8*** %19, align 8, !dbg !4096
  %569 = getelementptr inbounds i8*, i8** %568, i64 6, !dbg !4096
  %570 = load i8*, i8** %569, align 8, !dbg !4096
  %571 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %548, i8* %549, i8* %552, i8* %555, i8* %558, i8* %561, i8* %564, i8* %567, i8* %570), !dbg !4097
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %311
  %572 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !4099
  %573 = call i8* @gettext(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.13.119, i64 0, i64 0)) #10, !dbg !4100
  %574 = load i8**, i8*** %19, align 8, !dbg !4101
  %575 = getelementptr inbounds i8*, i8** %574, i64 0, !dbg !4101
  %576 = load i8*, i8** %575, align 8, !dbg !4101
  %577 = load i8**, i8*** %19, align 8, !dbg !4102
  %578 = getelementptr inbounds i8*, i8** %577, i64 1, !dbg !4102
  %579 = load i8*, i8** %578, align 8, !dbg !4102
  %580 = load i8**, i8*** %19, align 8, !dbg !4103
  %581 = getelementptr inbounds i8*, i8** %580, i64 2, !dbg !4103
  %582 = load i8*, i8** %581, align 8, !dbg !4103
  %583 = load i8**, i8*** %19, align 8, !dbg !4104
  %584 = getelementptr inbounds i8*, i8** %583, i64 3, !dbg !4104
  %585 = load i8*, i8** %584, align 8, !dbg !4104
  %586 = load i8**, i8*** %19, align 8, !dbg !4105
  %587 = getelementptr inbounds i8*, i8** %586, i64 4, !dbg !4105
  %588 = load i8*, i8** %587, align 8, !dbg !4105
  %589 = load i8**, i8*** %19, align 8, !dbg !4106
  %590 = getelementptr inbounds i8*, i8** %589, i64 5, !dbg !4106
  %591 = load i8*, i8** %590, align 8, !dbg !4106
  %592 = load i8**, i8*** %19, align 8, !dbg !4107
  %593 = getelementptr inbounds i8*, i8** %592, i64 6, !dbg !4107
  %594 = load i8*, i8** %593, align 8, !dbg !4107
  %595 = load i8**, i8*** %19, align 8, !dbg !4108
  %596 = getelementptr inbounds i8*, i8** %595, i64 7, !dbg !4108
  %597 = load i8*, i8** %596, align 8, !dbg !4108
  %598 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %572, i8* %573, i8* %576, i8* %579, i8* %582, i8* %585, i8* %588, i8* %591, i8* %594, i8* %597), !dbg !4109
  br label %originalBB38

originalBB42alteredBB:                            ; preds = %originalBB42, %355
  %599 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !4111
  %600 = call i8* @gettext(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.14.120, i64 0, i64 0)) #10, !dbg !4112
  %601 = load i8**, i8*** %19, align 8, !dbg !4113
  %602 = getelementptr inbounds i8*, i8** %601, i64 0, !dbg !4113
  %603 = load i8*, i8** %602, align 8, !dbg !4113
  %604 = load i8**, i8*** %19, align 8, !dbg !4114
  %605 = getelementptr inbounds i8*, i8** %604, i64 1, !dbg !4114
  %606 = load i8*, i8** %605, align 8, !dbg !4114
  %607 = load i8**, i8*** %19, align 8, !dbg !4115
  %608 = getelementptr inbounds i8*, i8** %607, i64 2, !dbg !4115
  %609 = load i8*, i8** %608, align 8, !dbg !4115
  %610 = load i8**, i8*** %19, align 8, !dbg !4116
  %611 = getelementptr inbounds i8*, i8** %610, i64 3, !dbg !4116
  %612 = load i8*, i8** %611, align 8, !dbg !4116
  %613 = load i8**, i8*** %19, align 8, !dbg !4117
  %614 = getelementptr inbounds i8*, i8** %613, i64 4, !dbg !4117
  %615 = load i8*, i8** %614, align 8, !dbg !4117
  %616 = load i8**, i8*** %19, align 8, !dbg !4118
  %617 = getelementptr inbounds i8*, i8** %616, i64 5, !dbg !4118
  %618 = load i8*, i8** %617, align 8, !dbg !4118
  %619 = load i8**, i8*** %19, align 8, !dbg !4119
  %620 = getelementptr inbounds i8*, i8** %619, i64 6, !dbg !4119
  %621 = load i8*, i8** %620, align 8, !dbg !4119
  %622 = load i8**, i8*** %19, align 8, !dbg !4120
  %623 = getelementptr inbounds i8*, i8** %622, i64 7, !dbg !4120
  %624 = load i8*, i8** %623, align 8, !dbg !4120
  %625 = load i8**, i8*** %19, align 8, !dbg !4121
  %626 = getelementptr inbounds i8*, i8** %625, i64 8, !dbg !4121
  %627 = load i8*, i8** %626, align 8, !dbg !4121
  %628 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %599, i8* %600, i8* %603, i8* %606, i8* %609, i8* %612, i8* %615, i8* %618, i8* %621, i8* %624, i8* %627), !dbg !4122
  br label %originalBB42

originalBB46alteredBB:                            ; preds = %originalBB46, %402
  %629 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !dbg !4124
  %630 = call i8* @gettext(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.15.121, i64 0, i64 0)) #10, !dbg !4125
  %631 = load i8**, i8*** %19, align 8, !dbg !4126
  %632 = getelementptr inbounds i8*, i8** %631, i64 0, !dbg !4126
  %633 = load i8*, i8** %632, align 8, !dbg !4126
  %634 = load i8**, i8*** %19, align 8, !dbg !4127
  %635 = getelementptr inbounds i8*, i8** %634, i64 1, !dbg !4127
  %636 = load i8*, i8** %635, align 8, !dbg !4127
  %637 = load i8**, i8*** %19, align 8, !dbg !4128
  %638 = getelementptr inbounds i8*, i8** %637, i64 2, !dbg !4128
  %639 = load i8*, i8** %638, align 8, !dbg !4128
  %640 = load i8**, i8*** %19, align 8, !dbg !4129
  %641 = getelementptr inbounds i8*, i8** %640, i64 3, !dbg !4129
  %642 = load i8*, i8** %641, align 8, !dbg !4129
  %643 = load i8**, i8*** %19, align 8, !dbg !4130
  %644 = getelementptr inbounds i8*, i8** %643, i64 4, !dbg !4130
  %645 = load i8*, i8** %644, align 8, !dbg !4130
  %646 = load i8**, i8*** %19, align 8, !dbg !4131
  %647 = getelementptr inbounds i8*, i8** %646, i64 5, !dbg !4131
  %648 = load i8*, i8** %647, align 8, !dbg !4131
  %649 = load i8**, i8*** %19, align 8, !dbg !4132
  %650 = getelementptr inbounds i8*, i8** %649, i64 6, !dbg !4132
  %651 = load i8*, i8** %650, align 8, !dbg !4132
  %652 = load i8**, i8*** %19, align 8, !dbg !4133
  %653 = getelementptr inbounds i8*, i8** %652, i64 7, !dbg !4133
  %654 = load i8*, i8** %653, align 8, !dbg !4133
  %655 = load i8**, i8*** %19, align 8, !dbg !4134
  %656 = getelementptr inbounds i8*, i8** %655, i64 8, !dbg !4134
  %657 = load i8*, i8** %656, align 8, !dbg !4134
  %658 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %629, i8* %630, i8* %633, i8* %636, i8* %639, i8* %642, i8* %645, i8* %648, i8* %651, i8* %654, i8* %657), !dbg !4135
  br label %originalBB46

originalBB50alteredBB:                            ; preds = %originalBB50, %449
  br label %originalBB50
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @version_etc_va(%struct._IO_FILE*, i8*, i8*, i8*, %struct.__va_list_tag*) #4 !dbg !4182 {
  %6 = load i32, i32* @x.59
  %7 = load i32, i32* @y.60
  %8 = sub i32 %6, 1
  %9 = mul i32 %6, %8
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %7, 10
  %13 = or i1 %11, %12
  br i1 %13, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %5, %originalBBalteredBB
  %14 = alloca %struct._IO_FILE*, align 8
  %15 = alloca i8*, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i8*, align 8
  %18 = alloca %struct.__va_list_tag*, align 8
  %19 = alloca i64, align 8
  %20 = alloca [10 x i8*], align 16
  store %struct._IO_FILE* %0, %struct._IO_FILE** %14, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %14, metadata !4192, metadata !DIExpression()), !dbg !4193
  store i8* %1, i8** %15, align 8
  call void @llvm.dbg.declare(metadata i8** %15, metadata !4194, metadata !DIExpression()), !dbg !4195
  store i8* %2, i8** %16, align 8
  call void @llvm.dbg.declare(metadata i8** %16, metadata !4196, metadata !DIExpression()), !dbg !4197
  store i8* %3, i8** %17, align 8
  call void @llvm.dbg.declare(metadata i8** %17, metadata !4198, metadata !DIExpression()), !dbg !4199
  store %struct.__va_list_tag* %4, %struct.__va_list_tag** %18, align 8
  call void @llvm.dbg.declare(metadata %struct.__va_list_tag** %18, metadata !4200, metadata !DIExpression()), !dbg !4201
  call void @llvm.dbg.declare(metadata i64* %19, metadata !4202, metadata !DIExpression()), !dbg !4203
  call void @llvm.dbg.declare(metadata [10 x i8*]* %20, metadata !4204, metadata !DIExpression()), !dbg !4206
  store i64 0, i64* %19, align 8, !dbg !4207
  %21 = load i32, i32* @x.59
  %22 = load i32, i32* @y.60
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %29, !dbg !4209

29:                                               ; preds = %originalBBpart244, %originalBBpart2
  %30 = load i32, i32* @x.59
  %31 = load i32, i32* @y.60
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %29, %originalBB1alteredBB
  %38 = load i64, i64* %19, align 8, !dbg !4210
  %39 = icmp ult i64 %38, 10, !dbg !4212
  %40 = load i32, i32* @x.59
  %41 = load i32, i32* @y.60
  %42 = sub i32 %40, 1
  %43 = mul i32 %40, %42
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %45, %46
  br i1 %47, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %39, label %48, label %134, !dbg !4213

48:                                               ; preds = %originalBBpart24
  %49 = load i32, i32* @x.59
  %50 = load i32, i32* @y.60
  %51 = sub i32 %49, 1
  %52 = mul i32 %49, %51
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %50, 10
  %56 = or i1 %54, %55
  br i1 %56, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %48, %originalBB6alteredBB
  %57 = load %struct.__va_list_tag*, %struct.__va_list_tag** %18, align 8, !dbg !4214
  %58 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %57, i32 0, i32 0, !dbg !4214
  %59 = load i32, i32* %58, align 8, !dbg !4214
  %60 = icmp ule i32 %59, 40, !dbg !4214
  %61 = load i32, i32* @x.59
  %62 = load i32, i32* @y.60
  %63 = sub i32 %61, 1
  %64 = mul i32 %61, %63
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %62, 10
  %68 = or i1 %66, %67
  br i1 %68, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %60, label %69, label %91, !dbg !4214

69:                                               ; preds = %originalBBpart28
  %70 = load i32, i32* @x.59
  %71 = load i32, i32* @y.60
  %72 = sub i32 %70, 1
  %73 = mul i32 %70, %72
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %71, 10
  %77 = or i1 %75, %76
  br i1 %77, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %69, %originalBB10alteredBB
  %78 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %57, i32 0, i32 3, !dbg !4214
  %79 = load i8*, i8** %78, align 8, !dbg !4214
  %80 = getelementptr i8, i8* %79, i32 %59, !dbg !4214
  %81 = bitcast i8* %80 to i8**, !dbg !4214
  %82 = add i32 %59, 8, !dbg !4214
  store i32 %82, i32* %58, align 8, !dbg !4214
  %83 = load i32, i32* @x.59
  %84 = load i32, i32* @y.60
  %85 = sub i32 %83, 1
  %86 = mul i32 %83, %85
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %84, 10
  %90 = or i1 %88, %89
  br i1 %90, label %originalBBpart217, label %originalBB10alteredBB

originalBBpart217:                                ; preds = %originalBB10
  br label %112, !dbg !4214

91:                                               ; preds = %originalBBpart28
  %92 = load i32, i32* @x.59
  %93 = load i32, i32* @y.60
  %94 = sub i32 %92, 1
  %95 = mul i32 %92, %94
  %96 = urem i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %93, 10
  %99 = or i1 %97, %98
  br i1 %99, label %originalBB19, label %originalBB19alteredBB

originalBB19:                                     ; preds = %91, %originalBB19alteredBB
  %100 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %57, i32 0, i32 2, !dbg !4214
  %101 = load i8*, i8** %100, align 8, !dbg !4214
  %102 = bitcast i8* %101 to i8**, !dbg !4214
  %103 = getelementptr i8, i8* %101, i32 8, !dbg !4214
  store i8* %103, i8** %100, align 8, !dbg !4214
  %104 = load i32, i32* @x.59
  %105 = load i32, i32* @y.60
  %106 = sub i32 %104, 1
  %107 = mul i32 %104, %106
  %108 = urem i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = icmp slt i32 %105, 10
  %111 = or i1 %109, %110
  br i1 %111, label %originalBBpart221, label %originalBB19alteredBB

originalBBpart221:                                ; preds = %originalBB19
  br label %112, !dbg !4214

112:                                              ; preds = %originalBBpart221, %originalBBpart217
  %113 = phi i8** [ %81, %originalBBpart217 ], [ %102, %originalBBpart221 ], !dbg !4214
  %114 = load i32, i32* @x.59
  %115 = load i32, i32* @y.60
  %116 = sub i32 %114, 1
  %117 = mul i32 %114, %116
  %118 = urem i32 %117, 2
  %119 = icmp eq i32 %118, 0
  %120 = icmp slt i32 %115, 10
  %121 = or i1 %119, %120
  br i1 %121, label %originalBB23, label %originalBB23alteredBB

originalBB23:                                     ; preds = %112, %originalBB23alteredBB
  %122 = load i8*, i8** %113, align 8, !dbg !4214
  %123 = load i64, i64* %19, align 8, !dbg !4215
  %124 = getelementptr inbounds [10 x i8*], [10 x i8*]* %20, i64 0, i64 %123, !dbg !4216
  store i8* %122, i8** %124, align 8, !dbg !4217
  %125 = icmp ne i8* %122, null, !dbg !4218
  %126 = load i32, i32* @x.59
  %127 = load i32, i32* @y.60
  %128 = sub i32 %126, 1
  %129 = mul i32 %126, %128
  %130 = urem i32 %129, 2
  %131 = icmp eq i32 %130, 0
  %132 = icmp slt i32 %127, 10
  %133 = or i1 %131, %132
  br i1 %133, label %originalBBpart225, label %originalBB23alteredBB

originalBBpart225:                                ; preds = %originalBB23
  br label %134

134:                                              ; preds = %originalBBpart225, %originalBBpart24
  %135 = phi i1 [ false, %originalBBpart24 ], [ %125, %originalBBpart225 ], !dbg !4219
  %136 = load i32, i32* @x.59
  %137 = load i32, i32* @y.60
  %138 = sub i32 %136, 1
  %139 = mul i32 %136, %138
  %140 = urem i32 %139, 2
  %141 = icmp eq i32 %140, 0
  %142 = icmp slt i32 %137, 10
  %143 = or i1 %141, %142
  br i1 %143, label %originalBB27, label %originalBB27alteredBB

originalBB27:                                     ; preds = %134, %originalBB27alteredBB
  %144 = load i32, i32* @x.59
  %145 = load i32, i32* @y.60
  %146 = sub i32 %144, 1
  %147 = mul i32 %144, %146
  %148 = urem i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = icmp slt i32 %145, 10
  %151 = or i1 %149, %150
  br i1 %151, label %originalBBpart229, label %originalBB27alteredBB

originalBBpart229:                                ; preds = %originalBB27
  br i1 %135, label %152, label %188, !dbg !4220

152:                                              ; preds = %originalBBpart229
  %153 = load i32, i32* @x.59
  %154 = load i32, i32* @y.60
  %155 = sub i32 %153, 1
  %156 = mul i32 %153, %155
  %157 = urem i32 %156, 2
  %158 = icmp eq i32 %157, 0
  %159 = icmp slt i32 %154, 10
  %160 = or i1 %158, %159
  br i1 %160, label %originalBB31, label %originalBB31alteredBB

originalBB31:                                     ; preds = %152, %originalBB31alteredBB
  %161 = load i32, i32* @x.59
  %162 = load i32, i32* @y.60
  %163 = sub i32 %161, 1
  %164 = mul i32 %161, %163
  %165 = urem i32 %164, 2
  %166 = icmp eq i32 %165, 0
  %167 = icmp slt i32 %162, 10
  %168 = or i1 %166, %167
  br i1 %168, label %originalBBpart233, label %originalBB31alteredBB

originalBBpart233:                                ; preds = %originalBB31
  br label %169, !dbg !4220

169:                                              ; preds = %originalBBpart233
  %170 = load i32, i32* @x.59
  %171 = load i32, i32* @y.60
  %172 = sub i32 %170, 1
  %173 = mul i32 %170, %172
  %174 = urem i32 %173, 2
  %175 = icmp eq i32 %174, 0
  %176 = icmp slt i32 %171, 10
  %177 = or i1 %175, %176
  br i1 %177, label %originalBB35, label %originalBB35alteredBB

originalBB35:                                     ; preds = %169, %originalBB35alteredBB
  %178 = load i64, i64* %19, align 8, !dbg !4221
  %179 = add i64 %178, 1, !dbg !4221
  store i64 %179, i64* %19, align 8, !dbg !4221
  %180 = load i32, i32* @x.59
  %181 = load i32, i32* @y.60
  %182 = sub i32 %180, 1
  %183 = mul i32 %180, %182
  %184 = urem i32 %183, 2
  %185 = icmp eq i32 %184, 0
  %186 = icmp slt i32 %181, 10
  %187 = or i1 %185, %186
  br i1 %187, label %originalBBpart244, label %originalBB35alteredBB

originalBBpart244:                                ; preds = %originalBB35
  br label %29, !dbg !4222, !llvm.loop !4223

188:                                              ; preds = %originalBBpart229
  %189 = load i32, i32* @x.59
  %190 = load i32, i32* @y.60
  %191 = sub i32 %189, 1
  %192 = mul i32 %189, %191
  %193 = urem i32 %192, 2
  %194 = icmp eq i32 %193, 0
  %195 = icmp slt i32 %190, 10
  %196 = or i1 %194, %195
  br i1 %196, label %originalBB46, label %originalBB46alteredBB

originalBB46:                                     ; preds = %188, %originalBB46alteredBB
  %197 = load %struct._IO_FILE*, %struct._IO_FILE** %14, align 8, !dbg !4225
  %198 = load i8*, i8** %15, align 8, !dbg !4226
  %199 = load i8*, i8** %16, align 8, !dbg !4227
  %200 = load i8*, i8** %17, align 8, !dbg !4228
  %201 = getelementptr inbounds [10 x i8*], [10 x i8*]* %20, i64 0, i64 0, !dbg !4229
  %202 = load i64, i64* %19, align 8, !dbg !4230
  call void @version_etc_arn(%struct._IO_FILE* %197, i8* %198, i8* %199, i8* %200, i8** %201, i64 %202), !dbg !4231
  %203 = load i32, i32* @x.59
  %204 = load i32, i32* @y.60
  %205 = sub i32 %203, 1
  %206 = mul i32 %203, %205
  %207 = urem i32 %206, 2
  %208 = icmp eq i32 %207, 0
  %209 = icmp slt i32 %204, 10
  %210 = or i1 %208, %209
  br i1 %210, label %originalBBpart248, label %originalBB46alteredBB

originalBBpart248:                                ; preds = %originalBB46
  ret void, !dbg !4232

originalBBalteredBB:                              ; preds = %originalBB, %5
  %211 = alloca %struct._IO_FILE*, align 8
  %212 = alloca i8*, align 8
  %213 = alloca i8*, align 8
  %214 = alloca i8*, align 8
  %215 = alloca %struct.__va_list_tag*, align 8
  %216 = alloca i64, align 8
  %217 = alloca [10 x i8*], align 16
  store %struct._IO_FILE* %0, %struct._IO_FILE** %211, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %211, metadata !4233, metadata !DIExpression()), !dbg !4193
  store i8* %1, i8** %212, align 8
  call void @llvm.dbg.declare(metadata i8** %212, metadata !4279, metadata !DIExpression()), !dbg !4195
  store i8* %2, i8** %213, align 8
  call void @llvm.dbg.declare(metadata i8** %213, metadata !4280, metadata !DIExpression()), !dbg !4197
  store i8* %3, i8** %214, align 8
  call void @llvm.dbg.declare(metadata i8** %214, metadata !4281, metadata !DIExpression()), !dbg !4199
  store %struct.__va_list_tag* %4, %struct.__va_list_tag** %215, align 8
  call void @llvm.dbg.declare(metadata %struct.__va_list_tag** %215, metadata !4282, metadata !DIExpression()), !dbg !4201
  call void @llvm.dbg.declare(metadata i64* %216, metadata !4283, metadata !DIExpression()), !dbg !4203
  call void @llvm.dbg.declare(metadata [10 x i8*]* %217, metadata !4284, metadata !DIExpression()), !dbg !4206
  store i64 0, i64* %216, align 8, !dbg !4207
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %29
  %218 = load i64, i64* %19, align 8, !dbg !4210
  %219 = icmp ult i64 %218, 10, !dbg !4212
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %48
  %220 = load %struct.__va_list_tag*, %struct.__va_list_tag** %18, align 8, !dbg !4214
  %221 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %220, i32 0, i32 0, !dbg !4214
  %222 = load i32, i32* %221, align 8, !dbg !4214
  %223 = icmp ule i32 %222, 40, !dbg !4214
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %69
  %224 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %57, i32 0, i32 3, !dbg !4214
  %225 = load i8*, i8** %224, align 8, !dbg !4214
  %226 = getelementptr i8, i8* %225, i32 %59, !dbg !4214
  %227 = bitcast i8* %226 to i8**, !dbg !4214
  %_ = shl i32 %59, 8
  %_11 = sub i32 %59, 8
  %gen = mul i32 %_11, 8
  %_12 = shl i32 %59, 8
  %_13 = sub i32 %59, 8
  %gen14 = mul i32 %_13, 8
  %_15 = shl i32 %59, 8
  %228 = add i32 %59, 8, !dbg !4214
  store i32 %228, i32* %58, align 8, !dbg !4214
  br label %originalBB10

originalBB19alteredBB:                            ; preds = %originalBB19, %91
  %229 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %57, i32 0, i32 2, !dbg !4214
  %230 = load i8*, i8** %229, align 8, !dbg !4214
  %231 = bitcast i8* %230 to i8**, !dbg !4214
  %232 = getelementptr i8, i8* %230, i32 8, !dbg !4214
  store i8* %232, i8** %229, align 8, !dbg !4214
  br label %originalBB19

originalBB23alteredBB:                            ; preds = %originalBB23, %112
  %233 = load i8*, i8** %113, align 8, !dbg !4214
  %234 = load i64, i64* %19, align 8, !dbg !4215
  %235 = getelementptr inbounds [10 x i8*], [10 x i8*]* %20, i64 0, i64 %234, !dbg !4216
  store i8* %233, i8** %235, align 8, !dbg !4217
  %236 = icmp ne i8* %233, null, !dbg !4218
  br label %originalBB23

originalBB27alteredBB:                            ; preds = %originalBB27, %134
  br label %originalBB27

originalBB31alteredBB:                            ; preds = %originalBB31, %152
  br label %originalBB31

originalBB35alteredBB:                            ; preds = %originalBB35, %169
  %237 = load i64, i64* %19, align 8, !dbg !4221
  %_36 = sub i64 0, %237
  %gen37 = add i64 %_36, 1
  %_38 = sub i64 %237, 1
  %gen39 = mul i64 %_38, 1
  %_40 = shl i64 %237, 1
  %_41 = sub i64 %237, 1
  %gen42 = mul i64 %_41, 1
  %238 = add i64 %237, 1, !dbg !4221
  store i64 %238, i64* %19, align 8, !dbg !4221
  br label %originalBB35

originalBB46alteredBB:                            ; preds = %originalBB46, %188
  %239 = load %struct._IO_FILE*, %struct._IO_FILE** %14, align 8, !dbg !4225
  %240 = load i8*, i8** %15, align 8, !dbg !4226
  %241 = load i8*, i8** %16, align 8, !dbg !4227
  %242 = load i8*, i8** %17, align 8, !dbg !4228
  %243 = getelementptr inbounds [10 x i8*], [10 x i8*]* %20, i64 0, i64 0, !dbg !4229
  %244 = load i64, i64* %19, align 8, !dbg !4230
  call void @version_etc_arn(%struct._IO_FILE* %239, i8* %240, i8* %241, i8* %242, i8** %243, i64 %244), !dbg !4231
  br label %originalBB46
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @version_etc(%struct._IO_FILE*, i8*, i8*, i8*, ...) #4 !dbg !4285 {
  %5 = alloca %struct._IO_FILE*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca [1 x %struct.__va_list_tag], align 16
  store %struct._IO_FILE* %0, %struct._IO_FILE** %5, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %5, metadata !4288, metadata !DIExpression()), !dbg !4289
  store i8* %1, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !4290, metadata !DIExpression()), !dbg !4291
  store i8* %2, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !4292, metadata !DIExpression()), !dbg !4293
  store i8* %3, i8** %8, align 8
  call void @llvm.dbg.declare(metadata i8** %8, metadata !4294, metadata !DIExpression()), !dbg !4295
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %9, metadata !4296, metadata !DIExpression()), !dbg !4302
  %10 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %9, i64 0, i64 0, !dbg !4303
  %11 = bitcast %struct.__va_list_tag* %10 to i8*, !dbg !4303
  call void @llvm.va_start(i8* %11), !dbg !4303
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8, !dbg !4304
  %13 = load i8*, i8** %6, align 8, !dbg !4305
  %14 = load i8*, i8** %7, align 8, !dbg !4306
  %15 = load i8*, i8** %8, align 8, !dbg !4307
  %16 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %9, i64 0, i64 0, !dbg !4308
  call void @version_etc_va(%struct._IO_FILE* %12, i8* %13, i8* %14, i8* %15, %struct.__va_list_tag* %16), !dbg !4309
  %17 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %9, i64 0, i64 0, !dbg !4310
  %18 = bitcast %struct.__va_list_tag* %17 to i8*, !dbg !4310
  call void @llvm.va_end(i8* %18), !dbg !4310
  ret void, !dbg !4311
}

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #10

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #10

; Function Attrs: noinline nounwind optnone uwtable
define internal noalias i8* @xmalloc(i64) #4 !dbg !4312 {
  %2 = load i32, i32* @x.63
  %3 = load i32, i32* @y.64
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i64, align 8
  %11 = alloca i8*, align 8
  store i64 %0, i64* %10, align 8
  call void @llvm.dbg.declare(metadata i64* %10, metadata !4316, metadata !DIExpression()), !dbg !4317
  call void @llvm.dbg.declare(metadata i8** %11, metadata !4318, metadata !DIExpression()), !dbg !4319
  %12 = load i64, i64* %10, align 8, !dbg !4320
  %13 = call noalias i8* @malloc(i64 %12) #10, !dbg !4321
  store i8* %13, i8** %11, align 8, !dbg !4319
  %14 = load i8*, i8** %11, align 8, !dbg !4322
  %15 = icmp ne i8* %14, null, !dbg !4322
  %16 = load i32, i32* @x.63
  %17 = load i32, i32* @y.64
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %15, label %60, label %24, !dbg !4324

24:                                               ; preds = %originalBBpart2
  %25 = load i32, i32* @x.63
  %26 = load i32, i32* @y.64
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %24, %originalBB1alteredBB
  %33 = load i64, i64* %10, align 8, !dbg !4325
  %34 = icmp ne i64 %33, 0, !dbg !4326
  %35 = load i32, i32* @x.63
  %36 = load i32, i32* @y.64
  %37 = sub i32 %35, 1
  %38 = mul i32 %35, %37
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %40, %41
  br i1 %42, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %34, label %43, label %60, !dbg !4327

43:                                               ; preds = %originalBBpart24
  %44 = load i32, i32* @x.63
  %45 = load i32, i32* @y.64
  %46 = sub i32 %44, 1
  %47 = mul i32 %44, %46
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %45, 10
  %51 = or i1 %49, %50
  br i1 %51, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %43, %originalBB6alteredBB
  call void @xalloc_die() #14, !dbg !4328
  %52 = load i32, i32* @x.63
  %53 = load i32, i32* @y.64
  %54 = sub i32 %52, 1
  %55 = mul i32 %52, %54
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %53, 10
  %59 = or i1 %57, %58
  br i1 %59, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  unreachable, !dbg !4328

60:                                               ; preds = %originalBBpart24, %originalBBpart2
  %61 = load i32, i32* @x.63
  %62 = load i32, i32* @y.64
  %63 = sub i32 %61, 1
  %64 = mul i32 %61, %63
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %62, 10
  %68 = or i1 %66, %67
  br i1 %68, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %60, %originalBB10alteredBB
  %69 = load i8*, i8** %11, align 8, !dbg !4329
  %70 = load i32, i32* @x.63
  %71 = load i32, i32* @y.64
  %72 = sub i32 %70, 1
  %73 = mul i32 %70, %72
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %71, 10
  %77 = or i1 %75, %76
  br i1 %77, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  ret i8* %69, !dbg !4330

originalBBalteredBB:                              ; preds = %originalBB, %1
  %78 = alloca i64, align 8
  %79 = alloca i8*, align 8
  store i64 %0, i64* %78, align 8
  call void @llvm.dbg.declare(metadata i64* %78, metadata !4331, metadata !DIExpression()), !dbg !4317
  call void @llvm.dbg.declare(metadata i8** %79, metadata !4334, metadata !DIExpression()), !dbg !4319
  %80 = load i64, i64* %78, align 8, !dbg !4320
  %81 = call noalias i8* @malloc(i64 %80) #10, !dbg !4321
  store i8* %81, i8** %79, align 8, !dbg !4319
  %82 = load i8*, i8** %79, align 8, !dbg !4322
  %83 = icmp ne i8* %82, null, !dbg !4322
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %24
  %84 = load i64, i64* %10, align 8, !dbg !4325
  %85 = icmp ne i64 %84, 0, !dbg !4326
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %43
  call void @xalloc_die() #14, !dbg !4328
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %60
  %86 = load i8*, i8** %11, align 8, !dbg !4329
  br label %originalBB10
}

; Function Attrs: nounwind
declare dso_local noalias i8* @malloc(i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @xrealloc(i8*, i64) #4 !dbg !4335 {
  %3 = load i32, i32* @x.65
  %4 = load i32, i32* @y.66
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i64, align 8
  store i8* %0, i8** %12, align 8
  call void @llvm.dbg.declare(metadata i8** %12, metadata !4338, metadata !DIExpression()), !dbg !4339
  store i64 %1, i64* %13, align 8
  call void @llvm.dbg.declare(metadata i64* %13, metadata !4340, metadata !DIExpression()), !dbg !4341
  %14 = load i64, i64* %13, align 8, !dbg !4342
  %15 = icmp ne i64 %14, 0, !dbg !4342
  %16 = load i32, i32* @x.65
  %17 = load i32, i32* @y.66
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %15, label %61, label %24, !dbg !4344

24:                                               ; preds = %originalBBpart2
  %25 = load i32, i32* @x.65
  %26 = load i32, i32* @y.66
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %24, %originalBB1alteredBB
  %33 = load i8*, i8** %12, align 8, !dbg !4345
  %34 = icmp ne i8* %33, null, !dbg !4345
  %35 = load i32, i32* @x.65
  %36 = load i32, i32* @y.66
  %37 = sub i32 %35, 1
  %38 = mul i32 %35, %37
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %40, %41
  br i1 %42, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %34, label %43, label %61, !dbg !4346

43:                                               ; preds = %originalBBpart24
  %44 = load i32, i32* @x.65
  %45 = load i32, i32* @y.66
  %46 = sub i32 %44, 1
  %47 = mul i32 %44, %46
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %45, 10
  %51 = or i1 %49, %50
  br i1 %51, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %43, %originalBB6alteredBB
  %52 = load i8*, i8** %12, align 8, !dbg !4347
  call void @free(i8* %52) #10, !dbg !4349
  store i8* null, i8** %11, align 8, !dbg !4350
  %53 = load i32, i32* @x.65
  %54 = load i32, i32* @y.66
  %55 = sub i32 %53, 1
  %56 = mul i32 %53, %55
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %54, 10
  %60 = or i1 %58, %59
  br i1 %60, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %137, !dbg !4350

61:                                               ; preds = %originalBBpart24, %originalBBpart2
  %62 = load i32, i32* @x.65
  %63 = load i32, i32* @y.66
  %64 = sub i32 %62, 1
  %65 = mul i32 %62, %64
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %63, 10
  %69 = or i1 %67, %68
  br i1 %69, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %61, %originalBB10alteredBB
  %70 = load i8*, i8** %12, align 8, !dbg !4351
  %71 = load i64, i64* %13, align 8, !dbg !4352
  %72 = call i8* @realloc(i8* %70, i64 %71) #10, !dbg !4353
  store i8* %72, i8** %12, align 8, !dbg !4354
  %73 = load i8*, i8** %12, align 8, !dbg !4355
  %74 = icmp ne i8* %73, null, !dbg !4355
  %75 = load i32, i32* @x.65
  %76 = load i32, i32* @y.66
  %77 = sub i32 %75, 1
  %78 = mul i32 %75, %77
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %76, 10
  %82 = or i1 %80, %81
  br i1 %82, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %74, label %119, label %83, !dbg !4357

83:                                               ; preds = %originalBBpart212
  %84 = load i32, i32* @x.65
  %85 = load i32, i32* @y.66
  %86 = sub i32 %84, 1
  %87 = mul i32 %84, %86
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %85, 10
  %91 = or i1 %89, %90
  br i1 %91, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %83, %originalBB14alteredBB
  %92 = load i64, i64* %13, align 8, !dbg !4358
  %93 = icmp ne i64 %92, 0, !dbg !4358
  %94 = load i32, i32* @x.65
  %95 = load i32, i32* @y.66
  %96 = sub i32 %94, 1
  %97 = mul i32 %94, %96
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %95, 10
  %101 = or i1 %99, %100
  br i1 %101, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %93, label %102, label %119, !dbg !4359

102:                                              ; preds = %originalBBpart216
  %103 = load i32, i32* @x.65
  %104 = load i32, i32* @y.66
  %105 = sub i32 %103, 1
  %106 = mul i32 %103, %105
  %107 = urem i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %104, 10
  %110 = or i1 %108, %109
  br i1 %110, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %102, %originalBB18alteredBB
  call void @xalloc_die() #14, !dbg !4360
  %111 = load i32, i32* @x.65
  %112 = load i32, i32* @y.66
  %113 = sub i32 %111, 1
  %114 = mul i32 %111, %113
  %115 = urem i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %112, 10
  %118 = or i1 %116, %117
  br i1 %118, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  unreachable, !dbg !4360

119:                                              ; preds = %originalBBpart216, %originalBBpart212
  %120 = load i32, i32* @x.65
  %121 = load i32, i32* @y.66
  %122 = sub i32 %120, 1
  %123 = mul i32 %120, %122
  %124 = urem i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = icmp slt i32 %121, 10
  %127 = or i1 %125, %126
  br i1 %127, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %119, %originalBB22alteredBB
  %128 = load i8*, i8** %12, align 8, !dbg !4361
  store i8* %128, i8** %11, align 8, !dbg !4362
  %129 = load i32, i32* @x.65
  %130 = load i32, i32* @y.66
  %131 = sub i32 %129, 1
  %132 = mul i32 %129, %131
  %133 = urem i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = icmp slt i32 %130, 10
  %136 = or i1 %134, %135
  br i1 %136, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br label %137, !dbg !4362

137:                                              ; preds = %originalBBpart224, %originalBBpart28
  %138 = load i32, i32* @x.65
  %139 = load i32, i32* @y.66
  %140 = sub i32 %138, 1
  %141 = mul i32 %138, %140
  %142 = urem i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = icmp slt i32 %139, 10
  %145 = or i1 %143, %144
  br i1 %145, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %137, %originalBB26alteredBB
  %146 = load i8*, i8** %11, align 8, !dbg !4363
  %147 = load i32, i32* @x.65
  %148 = load i32, i32* @y.66
  %149 = sub i32 %147, 1
  %150 = mul i32 %147, %149
  %151 = urem i32 %150, 2
  %152 = icmp eq i32 %151, 0
  %153 = icmp slt i32 %148, 10
  %154 = or i1 %152, %153
  br i1 %154, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  ret i8* %146, !dbg !4363

originalBBalteredBB:                              ; preds = %originalBB, %2
  %155 = alloca i8*, align 8
  %156 = alloca i8*, align 8
  %157 = alloca i64, align 8
  store i8* %0, i8** %156, align 8
  call void @llvm.dbg.declare(metadata i8** %156, metadata !4364, metadata !DIExpression()), !dbg !4339
  store i64 %1, i64* %157, align 8
  call void @llvm.dbg.declare(metadata i64* %157, metadata !4367, metadata !DIExpression()), !dbg !4341
  %158 = load i64, i64* %157, align 8, !dbg !4342
  %159 = icmp ne i64 %158, 0, !dbg !4342
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %24
  %160 = load i8*, i8** %12, align 8, !dbg !4345
  %161 = icmp ne i8* %160, null, !dbg !4345
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %43
  %162 = load i8*, i8** %12, align 8, !dbg !4347
  call void @free(i8* %162) #10, !dbg !4349
  store i8* null, i8** %11, align 8, !dbg !4350
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %61
  %163 = load i8*, i8** %12, align 8, !dbg !4351
  %164 = load i64, i64* %13, align 8, !dbg !4352
  %165 = call i8* @realloc(i8* %163, i64 %164) #10, !dbg !4353
  store i8* %165, i8** %12, align 8, !dbg !4354
  %166 = load i8*, i8** %12, align 8, !dbg !4355
  %167 = icmp ne i8* %166, null, !dbg !4355
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %83
  %168 = load i64, i64* %13, align 8, !dbg !4358
  %169 = icmp ne i64 %168, 0, !dbg !4358
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %102
  call void @xalloc_die() #14, !dbg !4360
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %119
  %170 = load i8*, i8** %12, align 8, !dbg !4361
  store i8* %170, i8** %11, align 8, !dbg !4362
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %137
  %171 = load i8*, i8** %11, align 8, !dbg !4363
  br label %originalBB26
}

; Function Attrs: nounwind
declare dso_local i8* @realloc(i8*, i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal noalias i8* @xcharalloc(i64) #4 !dbg !4368 {
  %2 = load i32, i32* @x.67
  %3 = load i32, i32* @y.68
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i64, align 8
  store i64 %0, i64* %10, align 8
  call void @llvm.dbg.declare(metadata i64* %10, metadata !4372, metadata !DIExpression()), !dbg !4373
  %11 = load i64, i64* %10, align 8, !dbg !4374
  %12 = call noalias i8* @xmalloc(i64 %11), !dbg !4374
  %13 = load i32, i32* @x.67
  %14 = load i32, i32* @y.68
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i8* %12, !dbg !4375

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca i64, align 8
  store i64 %0, i64* %21, align 8
  call void @llvm.dbg.declare(metadata i64* %21, metadata !4376, metadata !DIExpression()), !dbg !4373
  %22 = load i64, i64* %21, align 8, !dbg !4374
  %23 = call noalias i8* @xmalloc(i64 %22), !dbg !4374
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @xmemdup(i8*, i64) #4 !dbg !4379 {
  %3 = load i32, i32* @x.69
  %4 = load i32, i32* @y.70
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca i8*, align 8
  %12 = alloca i64, align 8
  store i8* %0, i8** %11, align 8
  call void @llvm.dbg.declare(metadata i8** %11, metadata !4384, metadata !DIExpression()), !dbg !4385
  store i64 %1, i64* %12, align 8
  call void @llvm.dbg.declare(metadata i64* %12, metadata !4386, metadata !DIExpression()), !dbg !4387
  %13 = load i64, i64* %12, align 8, !dbg !4388
  %14 = call noalias i8* @xmalloc(i64 %13), !dbg !4389
  %15 = load i8*, i8** %11, align 8, !dbg !4390
  %16 = load i64, i64* %12, align 8, !dbg !4391
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %14, i8* align 1 %15, i64 %16, i1 false), !dbg !4392
  %17 = load i32, i32* @x.69
  %18 = load i32, i32* @y.70
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i8* %14, !dbg !4393

originalBBalteredBB:                              ; preds = %originalBB, %2
  %25 = alloca i8*, align 8
  %26 = alloca i64, align 8
  store i8* %0, i8** %25, align 8
  call void @llvm.dbg.declare(metadata i8** %25, metadata !4394, metadata !DIExpression()), !dbg !4385
  store i64 %1, i64* %26, align 8
  call void @llvm.dbg.declare(metadata i64* %26, metadata !4397, metadata !DIExpression()), !dbg !4387
  %27 = load i64, i64* %26, align 8, !dbg !4388
  %28 = call noalias i8* @xmalloc(i64 %27), !dbg !4389
  %29 = load i8*, i8** %25, align 8, !dbg !4390
  %30 = load i64, i64* %26, align 8, !dbg !4391
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %28, i8* align 1 %29, i64 %30, i1 false), !dbg !4392
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal noalias i8* @xstrdup(i8*) #4 !dbg !4398 {
  %2 = load i32, i32* @x.71
  %3 = load i32, i32* @y.72
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i8*, align 8
  store i8* %0, i8** %10, align 8
  call void @llvm.dbg.declare(metadata i8** %10, metadata !4399, metadata !DIExpression()), !dbg !4400
  %11 = load i8*, i8** %10, align 8, !dbg !4401
  %12 = load i8*, i8** %10, align 8, !dbg !4402
  %13 = call i64 @strlen(i8* %12) #13, !dbg !4403
  %14 = add i64 %13, 1, !dbg !4404
  %15 = call i8* @xmemdup(i8* %11, i64 %14), !dbg !4405
  %16 = load i32, i32* @x.71
  %17 = load i32, i32* @y.72
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i8* %15, !dbg !4406

originalBBalteredBB:                              ; preds = %originalBB, %1
  %24 = alloca i8*, align 8
  store i8* %0, i8** %24, align 8
  call void @llvm.dbg.declare(metadata i8** %24, metadata !4407, metadata !DIExpression()), !dbg !4400
  %25 = load i8*, i8** %24, align 8, !dbg !4401
  %26 = load i8*, i8** %24, align 8, !dbg !4402
  %27 = call i64 @strlen(i8* %26) #13, !dbg !4403
  %_ = sub i64 %27, 1
  %gen = mul i64 %_, 1
  %_1 = sub i64 %27, 1
  %gen2 = mul i64 %_1, 1
  %_3 = shl i64 %27, 1
  %_4 = sub i64 %27, 1
  %gen5 = mul i64 %_4, 1
  %_6 = shl i64 %27, 1
  %28 = add i64 %27, 1, !dbg !4404
  %29 = call i8* @xmemdup(i8* %25, i64 %28), !dbg !4405
  br label %originalBB
}

; Function Attrs: noinline noreturn nounwind optnone uwtable
define internal void @xalloc_die() #0 !dbg !4410 {
  %1 = load i32, i32* @x.73
  %2 = load i32, i32* @y.74
  %3 = sub i32 %1, 1
  %4 = mul i32 %1, %3
  %5 = urem i32 %4, 2
  %6 = icmp eq i32 %5, 0
  %7 = icmp slt i32 %2, 10
  %8 = or i1 %6, %7
  br i1 %8, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %0, %originalBBalteredBB
  %9 = load volatile i32, i32* @exit_failure, align 4, !dbg !4412
  %10 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1.136, i64 0, i64 0)) #10, !dbg !4413
  call void (i32, i32, i8*, ...) @error(i32 %9, i32 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.137, i64 0, i64 0), i8* %10), !dbg !4414
  call void @abort() #12, !dbg !4415
  %11 = load i32, i32* @x.73
  %12 = load i32, i32* @y.74
  %13 = sub i32 %11, 1
  %14 = mul i32 %11, %13
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = icmp slt i32 %12, 10
  %18 = or i1 %16, %17
  br i1 %18, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  unreachable, !dbg !4415

originalBBalteredBB:                              ; preds = %originalBB, %0
  %19 = load volatile i32, i32* @exit_failure, align 4, !dbg !4412
  %20 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1.136, i64 0, i64 0)) #10, !dbg !4413
  call void (i32, i32, i8*, ...) @error(i32 %19, i32 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.137, i64 0, i64 0), i8* %20), !dbg !4414
  call void @abort() #12, !dbg !4415
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @xgetgroups(i8*, i32, i32**) #4 !dbg !4416 {
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32**, align 8
  %7 = alloca i32, align 4
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !4421, metadata !DIExpression()), !dbg !4422
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !4423, metadata !DIExpression()), !dbg !4424
  store i32** %2, i32*** %6, align 8
  call void @llvm.dbg.declare(metadata i32*** %6, metadata !4425, metadata !DIExpression()), !dbg !4426
  call void @llvm.dbg.declare(metadata i32* %7, metadata !4427, metadata !DIExpression()), !dbg !4428
  %8 = load i8*, i8** %4, align 8, !dbg !4429
  %9 = load i32, i32* %5, align 4, !dbg !4430
  %10 = load i32**, i32*** %6, align 8, !dbg !4431
  %11 = call i32 @mgetgroups(i8* %8, i32 %9, i32** %10), !dbg !4432
  store i32 %11, i32* %7, align 4, !dbg !4428
  %12 = load i32, i32* %7, align 4, !dbg !4433
  %13 = icmp eq i32 %12, -1, !dbg !4435
  br i1 %13, label %14, label %51, !dbg !4436

14:                                               ; preds = %3
  %15 = load i32, i32* @x.75
  %16 = load i32, i32* @y.76
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %14, %originalBBalteredBB
  %23 = call i32* @__errno_location() #15, !dbg !4437
  %24 = load i32, i32* %23, align 4, !dbg !4437
  %25 = icmp eq i32 %24, 12, !dbg !4438
  %26 = load i32, i32* @x.75
  %27 = load i32, i32* @y.76
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %25, label %34, label %51, !dbg !4439

34:                                               ; preds = %originalBBpart2
  %35 = load i32, i32* @x.75
  %36 = load i32, i32* @y.76
  %37 = sub i32 %35, 1
  %38 = mul i32 %35, %37
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %40, %41
  br i1 %42, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %34, %originalBB1alteredBB
  call void @xalloc_die() #14, !dbg !4440
  %43 = load i32, i32* @x.75
  %44 = load i32, i32* @y.76
  %45 = sub i32 %43, 1
  %46 = mul i32 %43, %45
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %48, %49
  br i1 %50, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  unreachable, !dbg !4440

51:                                               ; preds = %originalBBpart2, %3
  %52 = load i32, i32* @x.75
  %53 = load i32, i32* @y.76
  %54 = sub i32 %52, 1
  %55 = mul i32 %52, %54
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %53, 10
  %59 = or i1 %57, %58
  br i1 %59, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %51, %originalBB6alteredBB
  %60 = load i32, i32* %7, align 4, !dbg !4441
  %61 = load i32, i32* @x.75
  %62 = load i32, i32* @y.76
  %63 = sub i32 %61, 1
  %64 = mul i32 %61, %63
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %62, 10
  %68 = or i1 %66, %67
  br i1 %68, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  ret i32 %60, !dbg !4442

originalBBalteredBB:                              ; preds = %originalBB, %14
  %69 = call i32* @__errno_location() #15, !dbg !4437
  %70 = load i32, i32* %69, align 4, !dbg !4437
  %71 = icmp eq i32 %70, 12, !dbg !4438
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %34
  call void @xalloc_die() #14, !dbg !4440
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %51
  %72 = load i32, i32* %7, align 4, !dbg !4441
  br label %originalBB6
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @xstrtoul(i8*, i8**, i32, i64*, i8*) #4 !dbg !4443 {
  %6 = load i32, i32* @x.77
  %7 = load i32, i32* @y.78
  %8 = sub i32 %6, 1
  %9 = mul i32 %6, %8
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %7, 10
  %13 = or i1 %11, %12
  br i1 %13, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %5, %originalBBalteredBB
  %14 = alloca i32, align 4
  %15 = alloca i8*, align 8
  %16 = alloca i8**, align 8
  %17 = alloca i32, align 4
  %18 = alloca i64*, align 8
  %19 = alloca i8*, align 8
  %20 = alloca i8*, align 8
  %21 = alloca i8**, align 8
  %22 = alloca i64, align 8
  %23 = alloca i32, align 4
  %24 = alloca i8*, align 8
  %25 = alloca i8, align 1
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  store i8* %0, i8** %15, align 8
  call void @llvm.dbg.declare(metadata i8** %15, metadata !4449, metadata !DIExpression()), !dbg !4450
  store i8** %1, i8*** %16, align 8
  call void @llvm.dbg.declare(metadata i8*** %16, metadata !4451, metadata !DIExpression()), !dbg !4452
  store i32 %2, i32* %17, align 4
  call void @llvm.dbg.declare(metadata i32* %17, metadata !4453, metadata !DIExpression()), !dbg !4454
  store i64* %3, i64** %18, align 8
  call void @llvm.dbg.declare(metadata i64** %18, metadata !4455, metadata !DIExpression()), !dbg !4456
  store i8* %4, i8** %19, align 8
  call void @llvm.dbg.declare(metadata i8** %19, metadata !4457, metadata !DIExpression()), !dbg !4458
  call void @llvm.dbg.declare(metadata i8** %20, metadata !4459, metadata !DIExpression()), !dbg !4460
  call void @llvm.dbg.declare(metadata i8*** %21, metadata !4461, metadata !DIExpression()), !dbg !4462
  call void @llvm.dbg.declare(metadata i64* %22, metadata !4463, metadata !DIExpression()), !dbg !4464
  call void @llvm.dbg.declare(metadata i32* %23, metadata !4465, metadata !DIExpression()), !dbg !4466
  store i32 0, i32* %23, align 4, !dbg !4466
  %29 = load i32, i32* %17, align 4, !dbg !4467
  %30 = icmp sle i32 0, %29, !dbg !4467
  %31 = load i32, i32* @x.77
  %32 = load i32, i32* @y.78
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %30, label %39, label %75, !dbg !4467

39:                                               ; preds = %originalBBpart2
  %40 = load i32, i32* @x.77
  %41 = load i32, i32* @y.78
  %42 = sub i32 %40, 1
  %43 = mul i32 %40, %42
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %45, %46
  br i1 %47, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %39, %originalBB1alteredBB
  %48 = load i32, i32* %17, align 4, !dbg !4467
  %49 = icmp sle i32 %48, 36, !dbg !4467
  %50 = load i32, i32* @x.77
  %51 = load i32, i32* @y.78
  %52 = sub i32 %50, 1
  %53 = mul i32 %50, %52
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %51, 10
  %57 = or i1 %55, %56
  br i1 %57, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %49, label %58, label %75, !dbg !4470

58:                                               ; preds = %originalBBpart24
  %59 = load i32, i32* @x.77
  %60 = load i32, i32* @y.78
  %61 = sub i32 %59, 1
  %62 = mul i32 %59, %61
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %60, 10
  %66 = or i1 %64, %65
  br i1 %66, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %58, %originalBB6alteredBB
  %67 = load i32, i32* @x.77
  %68 = load i32, i32* @y.78
  %69 = sub i32 %67, 1
  %70 = mul i32 %67, %69
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %68, 10
  %74 = or i1 %72, %73
  br i1 %74, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %92, !dbg !4470

75:                                               ; preds = %originalBBpart24, %originalBBpart2
  %76 = load i32, i32* @x.77
  %77 = load i32, i32* @y.78
  %78 = sub i32 %76, 1
  %79 = mul i32 %76, %78
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %77, 10
  %83 = or i1 %81, %82
  br i1 %83, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %75, %originalBB10alteredBB
  call void @__assert_fail(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.142, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.143, i64 0, i64 0), i32 84, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @__PRETTY_FUNCTION__.xstrtoul, i64 0, i64 0)) #12, !dbg !4467
  %84 = load i32, i32* @x.77
  %85 = load i32, i32* @y.78
  %86 = sub i32 %84, 1
  %87 = mul i32 %84, %86
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %85, 10
  %91 = or i1 %89, %90
  br i1 %91, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  unreachable, !dbg !4467

92:                                               ; preds = %originalBBpart28
  %93 = load i32, i32* @x.77
  %94 = load i32, i32* @y.78
  %95 = sub i32 %93, 1
  %96 = mul i32 %93, %95
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %94, 10
  %100 = or i1 %98, %99
  br i1 %100, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %92, %originalBB14alteredBB
  %101 = load i8**, i8*** %16, align 8, !dbg !4471
  %102 = icmp ne i8** %101, null, !dbg !4471
  %103 = load i32, i32* @x.77
  %104 = load i32, i32* @y.78
  %105 = sub i32 %103, 1
  %106 = mul i32 %103, %105
  %107 = urem i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %104, 10
  %110 = or i1 %108, %109
  br i1 %110, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %102, label %111, label %129, !dbg !4471

111:                                              ; preds = %originalBBpart216
  %112 = load i32, i32* @x.77
  %113 = load i32, i32* @y.78
  %114 = sub i32 %112, 1
  %115 = mul i32 %112, %114
  %116 = urem i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = icmp slt i32 %113, 10
  %119 = or i1 %117, %118
  br i1 %119, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %111, %originalBB18alteredBB
  %120 = load i8**, i8*** %16, align 8, !dbg !4472
  %121 = load i32, i32* @x.77
  %122 = load i32, i32* @y.78
  %123 = sub i32 %121, 1
  %124 = mul i32 %121, %123
  %125 = urem i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %122, 10
  %128 = or i1 %126, %127
  br i1 %128, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %146, !dbg !4471

129:                                              ; preds = %originalBBpart216
  %130 = load i32, i32* @x.77
  %131 = load i32, i32* @y.78
  %132 = sub i32 %130, 1
  %133 = mul i32 %130, %132
  %134 = urem i32 %133, 2
  %135 = icmp eq i32 %134, 0
  %136 = icmp slt i32 %131, 10
  %137 = or i1 %135, %136
  br i1 %137, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %129, %originalBB22alteredBB
  %138 = load i32, i32* @x.77
  %139 = load i32, i32* @y.78
  %140 = sub i32 %138, 1
  %141 = mul i32 %138, %140
  %142 = urem i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = icmp slt i32 %139, 10
  %145 = or i1 %143, %144
  br i1 %145, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br label %146, !dbg !4471

146:                                              ; preds = %originalBBpart224, %originalBBpart220
  %147 = phi i8** [ %120, %originalBBpart220 ], [ %20, %originalBBpart224 ], !dbg !4471
  store i8** %147, i8*** %21, align 8, !dbg !4473
  %148 = call i32* @__errno_location() #15, !dbg !4474
  store i32 0, i32* %148, align 4, !dbg !4475
  call void @llvm.dbg.declare(metadata i8** %24, metadata !4476, metadata !DIExpression()), !dbg !4479
  %149 = load i8*, i8** %15, align 8, !dbg !4480
  store i8* %149, i8** %24, align 8, !dbg !4479
  call void @llvm.dbg.declare(metadata i8* %25, metadata !4481, metadata !DIExpression()), !dbg !4482
  %150 = load i8*, i8** %24, align 8, !dbg !4483
  %151 = load i8, i8* %150, align 1, !dbg !4484
  store i8 %151, i8* %25, align 1, !dbg !4482
  br label %152, !dbg !4485

152:                                              ; preds = %originalBBpart239, %146
  %153 = load i32, i32* @x.77
  %154 = load i32, i32* @y.78
  %155 = sub i32 %153, 1
  %156 = mul i32 %153, %155
  %157 = urem i32 %156, 2
  %158 = icmp eq i32 %157, 0
  %159 = icmp slt i32 %154, 10
  %160 = or i1 %158, %159
  br i1 %160, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %152, %originalBB26alteredBB
  %161 = call i16** @__ctype_b_loc() #15, !dbg !4486
  %162 = load i16*, i16** %161, align 8, !dbg !4486
  %163 = load i8, i8* %25, align 1, !dbg !4486
  %164 = zext i8 %163 to i32, !dbg !4486
  %165 = sext i32 %164 to i64, !dbg !4486
  %166 = getelementptr inbounds i16, i16* %162, i64 %165, !dbg !4486
  %167 = load i16, i16* %166, align 2, !dbg !4486
  %168 = zext i16 %167 to i32, !dbg !4486
  %169 = and i32 %168, 8192, !dbg !4486
  %170 = icmp ne i32 %169, 0, !dbg !4485
  %171 = load i32, i32* @x.77
  %172 = load i32, i32* @y.78
  %173 = sub i32 %171, 1
  %174 = mul i32 %171, %173
  %175 = urem i32 %174, 2
  %176 = icmp eq i32 %175, 0
  %177 = icmp slt i32 %172, 10
  %178 = or i1 %176, %177
  br i1 %178, label %originalBBpart235, label %originalBB26alteredBB

originalBBpart235:                                ; preds = %originalBB26
  br i1 %170, label %179, label %199, !dbg !4485

179:                                              ; preds = %originalBBpart235
  %180 = load i32, i32* @x.77
  %181 = load i32, i32* @y.78
  %182 = sub i32 %180, 1
  %183 = mul i32 %180, %182
  %184 = urem i32 %183, 2
  %185 = icmp eq i32 %184, 0
  %186 = icmp slt i32 %181, 10
  %187 = or i1 %185, %186
  br i1 %187, label %originalBB37, label %originalBB37alteredBB

originalBB37:                                     ; preds = %179, %originalBB37alteredBB
  %188 = load i8*, i8** %24, align 8, !dbg !4487
  %189 = getelementptr inbounds i8, i8* %188, i32 1, !dbg !4487
  store i8* %189, i8** %24, align 8, !dbg !4487
  %190 = load i8, i8* %189, align 1, !dbg !4488
  store i8 %190, i8* %25, align 1, !dbg !4489
  %191 = load i32, i32* @x.77
  %192 = load i32, i32* @y.78
  %193 = sub i32 %191, 1
  %194 = mul i32 %191, %193
  %195 = urem i32 %194, 2
  %196 = icmp eq i32 %195, 0
  %197 = icmp slt i32 %192, 10
  %198 = or i1 %196, %197
  br i1 %198, label %originalBBpart239, label %originalBB37alteredBB

originalBBpart239:                                ; preds = %originalBB37
  br label %152, !dbg !4485, !llvm.loop !4490

199:                                              ; preds = %originalBBpart235
  %200 = load i32, i32* @x.77
  %201 = load i32, i32* @y.78
  %202 = sub i32 %200, 1
  %203 = mul i32 %200, %202
  %204 = urem i32 %203, 2
  %205 = icmp eq i32 %204, 0
  %206 = icmp slt i32 %201, 10
  %207 = or i1 %205, %206
  br i1 %207, label %originalBB41, label %originalBB41alteredBB

originalBB41:                                     ; preds = %199, %originalBB41alteredBB
  %208 = load i8, i8* %25, align 1, !dbg !4492
  %209 = zext i8 %208 to i32, !dbg !4492
  %210 = icmp eq i32 %209, 45, !dbg !4494
  %211 = load i32, i32* @x.77
  %212 = load i32, i32* @y.78
  %213 = sub i32 %211, 1
  %214 = mul i32 %211, %213
  %215 = urem i32 %214, 2
  %216 = icmp eq i32 %215, 0
  %217 = icmp slt i32 %212, 10
  %218 = or i1 %216, %217
  br i1 %218, label %originalBBpart243, label %originalBB41alteredBB

originalBBpart243:                                ; preds = %originalBB41
  br i1 %210, label %219, label %236, !dbg !4495

219:                                              ; preds = %originalBBpart243
  %220 = load i32, i32* @x.77
  %221 = load i32, i32* @y.78
  %222 = sub i32 %220, 1
  %223 = mul i32 %220, %222
  %224 = urem i32 %223, 2
  %225 = icmp eq i32 %224, 0
  %226 = icmp slt i32 %221, 10
  %227 = or i1 %225, %226
  br i1 %227, label %originalBB45, label %originalBB45alteredBB

originalBB45:                                     ; preds = %219, %originalBB45alteredBB
  store i32 4, i32* %14, align 4, !dbg !4496
  %228 = load i32, i32* @x.77
  %229 = load i32, i32* @y.78
  %230 = sub i32 %228, 1
  %231 = mul i32 %228, %230
  %232 = urem i32 %231, 2
  %233 = icmp eq i32 %232, 0
  %234 = icmp slt i32 %229, 10
  %235 = or i1 %233, %234
  br i1 %235, label %originalBBpart247, label %originalBB45alteredBB

originalBBpart247:                                ; preds = %originalBB45
  br label %1053, !dbg !4496

236:                                              ; preds = %originalBBpart243
  %237 = load i32, i32* @x.77
  %238 = load i32, i32* @y.78
  %239 = sub i32 %237, 1
  %240 = mul i32 %237, %239
  %241 = urem i32 %240, 2
  %242 = icmp eq i32 %241, 0
  %243 = icmp slt i32 %238, 10
  %244 = or i1 %242, %243
  br i1 %244, label %originalBB49, label %originalBB49alteredBB

originalBB49:                                     ; preds = %236, %originalBB49alteredBB
  %245 = load i8*, i8** %15, align 8, !dbg !4497
  %246 = load i8**, i8*** %21, align 8, !dbg !4498
  %247 = load i32, i32* %17, align 4, !dbg !4499
  %248 = call i64 @strtoul(i8* %245, i8** %246, i32 %247) #10, !dbg !4500
  store i64 %248, i64* %22, align 8, !dbg !4501
  %249 = load i8**, i8*** %21, align 8, !dbg !4502
  %250 = load i8*, i8** %249, align 8, !dbg !4504
  %251 = load i8*, i8** %15, align 8, !dbg !4505
  %252 = icmp eq i8* %250, %251, !dbg !4506
  %253 = load i32, i32* @x.77
  %254 = load i32, i32* @y.78
  %255 = sub i32 %253, 1
  %256 = mul i32 %253, %255
  %257 = urem i32 %256, 2
  %258 = icmp eq i32 %257, 0
  %259 = icmp slt i32 %254, 10
  %260 = or i1 %258, %259
  br i1 %260, label %originalBBpart251, label %originalBB49alteredBB

originalBBpart251:                                ; preds = %originalBB49
  br i1 %252, label %261, label %377, !dbg !4507

261:                                              ; preds = %originalBBpart251
  %262 = load i32, i32* @x.77
  %263 = load i32, i32* @y.78
  %264 = sub i32 %262, 1
  %265 = mul i32 %262, %264
  %266 = urem i32 %265, 2
  %267 = icmp eq i32 %266, 0
  %268 = icmp slt i32 %263, 10
  %269 = or i1 %267, %268
  br i1 %269, label %originalBB53, label %originalBB53alteredBB

originalBB53:                                     ; preds = %261, %originalBB53alteredBB
  %270 = load i8*, i8** %19, align 8, !dbg !4508
  %271 = icmp ne i8* %270, null, !dbg !4508
  %272 = load i32, i32* @x.77
  %273 = load i32, i32* @y.78
  %274 = sub i32 %272, 1
  %275 = mul i32 %272, %274
  %276 = urem i32 %275, 2
  %277 = icmp eq i32 %276, 0
  %278 = icmp slt i32 %273, 10
  %279 = or i1 %277, %278
  br i1 %279, label %originalBBpart255, label %originalBB53alteredBB

originalBBpart255:                                ; preds = %originalBB53
  br i1 %271, label %280, label %343, !dbg !4511

280:                                              ; preds = %originalBBpart255
  %281 = load i32, i32* @x.77
  %282 = load i32, i32* @y.78
  %283 = sub i32 %281, 1
  %284 = mul i32 %281, %283
  %285 = urem i32 %284, 2
  %286 = icmp eq i32 %285, 0
  %287 = icmp slt i32 %282, 10
  %288 = or i1 %286, %287
  br i1 %288, label %originalBB57, label %originalBB57alteredBB

originalBB57:                                     ; preds = %280, %originalBB57alteredBB
  %289 = load i8**, i8*** %21, align 8, !dbg !4512
  %290 = load i8*, i8** %289, align 8, !dbg !4513
  %291 = load i8, i8* %290, align 1, !dbg !4514
  %292 = sext i8 %291 to i32, !dbg !4514
  %293 = icmp ne i32 %292, 0, !dbg !4514
  %294 = load i32, i32* @x.77
  %295 = load i32, i32* @y.78
  %296 = sub i32 %294, 1
  %297 = mul i32 %294, %296
  %298 = urem i32 %297, 2
  %299 = icmp eq i32 %298, 0
  %300 = icmp slt i32 %295, 10
  %301 = or i1 %299, %300
  br i1 %301, label %originalBBpart259, label %originalBB57alteredBB

originalBBpart259:                                ; preds = %originalBB57
  br i1 %293, label %302, label %343, !dbg !4515

302:                                              ; preds = %originalBBpart259
  %303 = load i32, i32* @x.77
  %304 = load i32, i32* @y.78
  %305 = sub i32 %303, 1
  %306 = mul i32 %303, %305
  %307 = urem i32 %306, 2
  %308 = icmp eq i32 %307, 0
  %309 = icmp slt i32 %304, 10
  %310 = or i1 %308, %309
  br i1 %310, label %originalBB61, label %originalBB61alteredBB

originalBB61:                                     ; preds = %302, %originalBB61alteredBB
  %311 = load i8*, i8** %19, align 8, !dbg !4516
  %312 = load i8**, i8*** %21, align 8, !dbg !4517
  %313 = load i8*, i8** %312, align 8, !dbg !4518
  %314 = load i8, i8* %313, align 1, !dbg !4519
  %315 = sext i8 %314 to i32, !dbg !4519
  %316 = call i8* @strchr(i8* %311, i32 %315) #13, !dbg !4520
  %317 = icmp ne i8* %316, null, !dbg !4520
  %318 = load i32, i32* @x.77
  %319 = load i32, i32* @y.78
  %320 = sub i32 %318, 1
  %321 = mul i32 %318, %320
  %322 = urem i32 %321, 2
  %323 = icmp eq i32 %322, 0
  %324 = icmp slt i32 %319, 10
  %325 = or i1 %323, %324
  br i1 %325, label %originalBBpart263, label %originalBB61alteredBB

originalBBpart263:                                ; preds = %originalBB61
  br i1 %317, label %326, label %343, !dbg !4521

326:                                              ; preds = %originalBBpart263
  %327 = load i32, i32* @x.77
  %328 = load i32, i32* @y.78
  %329 = sub i32 %327, 1
  %330 = mul i32 %327, %329
  %331 = urem i32 %330, 2
  %332 = icmp eq i32 %331, 0
  %333 = icmp slt i32 %328, 10
  %334 = or i1 %332, %333
  br i1 %334, label %originalBB65, label %originalBB65alteredBB

originalBB65:                                     ; preds = %326, %originalBB65alteredBB
  store i64 1, i64* %22, align 8, !dbg !4522
  %335 = load i32, i32* @x.77
  %336 = load i32, i32* @y.78
  %337 = sub i32 %335, 1
  %338 = mul i32 %335, %337
  %339 = urem i32 %338, 2
  %340 = icmp eq i32 %339, 0
  %341 = icmp slt i32 %336, 10
  %342 = or i1 %340, %341
  br i1 %342, label %originalBBpart267, label %originalBB65alteredBB

originalBBpart267:                                ; preds = %originalBB65
  br label %360, !dbg !4523

343:                                              ; preds = %originalBBpart263, %originalBBpart259, %originalBBpart255
  %344 = load i32, i32* @x.77
  %345 = load i32, i32* @y.78
  %346 = sub i32 %344, 1
  %347 = mul i32 %344, %346
  %348 = urem i32 %347, 2
  %349 = icmp eq i32 %348, 0
  %350 = icmp slt i32 %345, 10
  %351 = or i1 %349, %350
  br i1 %351, label %originalBB69, label %originalBB69alteredBB

originalBB69:                                     ; preds = %343, %originalBB69alteredBB
  store i32 4, i32* %14, align 4, !dbg !4524
  %352 = load i32, i32* @x.77
  %353 = load i32, i32* @y.78
  %354 = sub i32 %352, 1
  %355 = mul i32 %352, %354
  %356 = urem i32 %355, 2
  %357 = icmp eq i32 %356, 0
  %358 = icmp slt i32 %353, 10
  %359 = or i1 %357, %358
  br i1 %359, label %originalBBpart271, label %originalBB69alteredBB

originalBBpart271:                                ; preds = %originalBB69
  br label %1053, !dbg !4524

360:                                              ; preds = %originalBBpart267
  %361 = load i32, i32* @x.77
  %362 = load i32, i32* @y.78
  %363 = sub i32 %361, 1
  %364 = mul i32 %361, %363
  %365 = urem i32 %364, 2
  %366 = icmp eq i32 %365, 0
  %367 = icmp slt i32 %362, 10
  %368 = or i1 %366, %367
  br i1 %368, label %originalBB73, label %originalBB73alteredBB

originalBB73:                                     ; preds = %360, %originalBB73alteredBB
  %369 = load i32, i32* @x.77
  %370 = load i32, i32* @y.78
  %371 = sub i32 %369, 1
  %372 = mul i32 %369, %371
  %373 = urem i32 %372, 2
  %374 = icmp eq i32 %373, 0
  %375 = icmp slt i32 %370, 10
  %376 = or i1 %374, %375
  br i1 %376, label %originalBBpart275, label %originalBB73alteredBB

originalBBpart275:                                ; preds = %originalBB73
  br label %468, !dbg !4525

377:                                              ; preds = %originalBBpart251
  %378 = load i32, i32* @x.77
  %379 = load i32, i32* @y.78
  %380 = sub i32 %378, 1
  %381 = mul i32 %378, %380
  %382 = urem i32 %381, 2
  %383 = icmp eq i32 %382, 0
  %384 = icmp slt i32 %379, 10
  %385 = or i1 %383, %384
  br i1 %385, label %originalBB77, label %originalBB77alteredBB

originalBB77:                                     ; preds = %377, %originalBB77alteredBB
  %386 = call i32* @__errno_location() #15, !dbg !4526
  %387 = load i32, i32* %386, align 4, !dbg !4526
  %388 = icmp ne i32 %387, 0, !dbg !4528
  %389 = load i32, i32* @x.77
  %390 = load i32, i32* @y.78
  %391 = sub i32 %389, 1
  %392 = mul i32 %389, %391
  %393 = urem i32 %392, 2
  %394 = icmp eq i32 %393, 0
  %395 = icmp slt i32 %390, 10
  %396 = or i1 %394, %395
  br i1 %396, label %originalBBpart279, label %originalBB77alteredBB

originalBBpart279:                                ; preds = %originalBB77
  br i1 %388, label %397, label %451, !dbg !4529

397:                                              ; preds = %originalBBpart279
  %398 = load i32, i32* @x.77
  %399 = load i32, i32* @y.78
  %400 = sub i32 %398, 1
  %401 = mul i32 %398, %400
  %402 = urem i32 %401, 2
  %403 = icmp eq i32 %402, 0
  %404 = icmp slt i32 %399, 10
  %405 = or i1 %403, %404
  br i1 %405, label %originalBB81, label %originalBB81alteredBB

originalBB81:                                     ; preds = %397, %originalBB81alteredBB
  %406 = call i32* @__errno_location() #15, !dbg !4530
  %407 = load i32, i32* %406, align 4, !dbg !4530
  %408 = icmp ne i32 %407, 34, !dbg !4533
  %409 = load i32, i32* @x.77
  %410 = load i32, i32* @y.78
  %411 = sub i32 %409, 1
  %412 = mul i32 %409, %411
  %413 = urem i32 %412, 2
  %414 = icmp eq i32 %413, 0
  %415 = icmp slt i32 %410, 10
  %416 = or i1 %414, %415
  br i1 %416, label %originalBBpart283, label %originalBB81alteredBB

originalBBpart283:                                ; preds = %originalBB81
  br i1 %408, label %417, label %434, !dbg !4534

417:                                              ; preds = %originalBBpart283
  %418 = load i32, i32* @x.77
  %419 = load i32, i32* @y.78
  %420 = sub i32 %418, 1
  %421 = mul i32 %418, %420
  %422 = urem i32 %421, 2
  %423 = icmp eq i32 %422, 0
  %424 = icmp slt i32 %419, 10
  %425 = or i1 %423, %424
  br i1 %425, label %originalBB85, label %originalBB85alteredBB

originalBB85:                                     ; preds = %417, %originalBB85alteredBB
  store i32 4, i32* %14, align 4, !dbg !4535
  %426 = load i32, i32* @x.77
  %427 = load i32, i32* @y.78
  %428 = sub i32 %426, 1
  %429 = mul i32 %426, %428
  %430 = urem i32 %429, 2
  %431 = icmp eq i32 %430, 0
  %432 = icmp slt i32 %427, 10
  %433 = or i1 %431, %432
  br i1 %433, label %originalBBpart287, label %originalBB85alteredBB

originalBBpart287:                                ; preds = %originalBB85
  br label %1053, !dbg !4535

434:                                              ; preds = %originalBBpart283
  %435 = load i32, i32* @x.77
  %436 = load i32, i32* @y.78
  %437 = sub i32 %435, 1
  %438 = mul i32 %435, %437
  %439 = urem i32 %438, 2
  %440 = icmp eq i32 %439, 0
  %441 = icmp slt i32 %436, 10
  %442 = or i1 %440, %441
  br i1 %442, label %originalBB89, label %originalBB89alteredBB

originalBB89:                                     ; preds = %434, %originalBB89alteredBB
  store i32 1, i32* %23, align 4, !dbg !4536
  %443 = load i32, i32* @x.77
  %444 = load i32, i32* @y.78
  %445 = sub i32 %443, 1
  %446 = mul i32 %443, %445
  %447 = urem i32 %446, 2
  %448 = icmp eq i32 %447, 0
  %449 = icmp slt i32 %444, 10
  %450 = or i1 %448, %449
  br i1 %450, label %originalBBpart291, label %originalBB89alteredBB

originalBBpart291:                                ; preds = %originalBB89
  br label %451, !dbg !4537

451:                                              ; preds = %originalBBpart291, %originalBBpart279
  %452 = load i32, i32* @x.77
  %453 = load i32, i32* @y.78
  %454 = sub i32 %452, 1
  %455 = mul i32 %452, %454
  %456 = urem i32 %455, 2
  %457 = icmp eq i32 %456, 0
  %458 = icmp slt i32 %453, 10
  %459 = or i1 %457, %458
  br i1 %459, label %originalBB93, label %originalBB93alteredBB

originalBB93:                                     ; preds = %451, %originalBB93alteredBB
  %460 = load i32, i32* @x.77
  %461 = load i32, i32* @y.78
  %462 = sub i32 %460, 1
  %463 = mul i32 %460, %462
  %464 = urem i32 %463, 2
  %465 = icmp eq i32 %464, 0
  %466 = icmp slt i32 %461, 10
  %467 = or i1 %465, %466
  br i1 %467, label %originalBBpart295, label %originalBB93alteredBB

originalBBpart295:                                ; preds = %originalBB93
  br label %468

468:                                              ; preds = %originalBBpart295, %originalBBpart275
  %469 = load i32, i32* @x.77
  %470 = load i32, i32* @y.78
  %471 = sub i32 %469, 1
  %472 = mul i32 %469, %471
  %473 = urem i32 %472, 2
  %474 = icmp eq i32 %473, 0
  %475 = icmp slt i32 %470, 10
  %476 = or i1 %474, %475
  br i1 %476, label %originalBB97, label %originalBB97alteredBB

originalBB97:                                     ; preds = %468, %originalBB97alteredBB
  %477 = load i8*, i8** %19, align 8, !dbg !4538
  %478 = icmp ne i8* %477, null, !dbg !4538
  %479 = load i32, i32* @x.77
  %480 = load i32, i32* @y.78
  %481 = sub i32 %479, 1
  %482 = mul i32 %479, %481
  %483 = urem i32 %482, 2
  %484 = icmp eq i32 %483, 0
  %485 = icmp slt i32 %480, 10
  %486 = or i1 %484, %485
  br i1 %486, label %originalBBpart299, label %originalBB97alteredBB

originalBBpart299:                                ; preds = %originalBB97
  br i1 %478, label %507, label %487, !dbg !4540

487:                                              ; preds = %originalBBpart299
  %488 = load i32, i32* @x.77
  %489 = load i32, i32* @y.78
  %490 = sub i32 %488, 1
  %491 = mul i32 %488, %490
  %492 = urem i32 %491, 2
  %493 = icmp eq i32 %492, 0
  %494 = icmp slt i32 %489, 10
  %495 = or i1 %493, %494
  br i1 %495, label %originalBB101, label %originalBB101alteredBB

originalBB101:                                    ; preds = %487, %originalBB101alteredBB
  %496 = load i64, i64* %22, align 8, !dbg !4541
  %497 = load i64*, i64** %18, align 8, !dbg !4543
  store i64 %496, i64* %497, align 8, !dbg !4544
  %498 = load i32, i32* %23, align 4, !dbg !4545
  store i32 %498, i32* %14, align 4, !dbg !4546
  %499 = load i32, i32* @x.77
  %500 = load i32, i32* @y.78
  %501 = sub i32 %499, 1
  %502 = mul i32 %499, %501
  %503 = urem i32 %502, 2
  %504 = icmp eq i32 %503, 0
  %505 = icmp slt i32 %500, 10
  %506 = or i1 %504, %505
  br i1 %506, label %originalBBpart2103, label %originalBB101alteredBB

originalBBpart2103:                               ; preds = %originalBB101
  br label %1053, !dbg !4546

507:                                              ; preds = %originalBBpart299
  %508 = load i8**, i8*** %21, align 8, !dbg !4547
  %509 = load i8*, i8** %508, align 8, !dbg !4549
  %510 = load i8, i8* %509, align 1, !dbg !4550
  %511 = sext i8 %510 to i32, !dbg !4550
  %512 = icmp ne i32 %511, 0, !dbg !4551
  br i1 %512, label %513, label %1049, !dbg !4552

513:                                              ; preds = %507
  call void @llvm.dbg.declare(metadata i32* %26, metadata !4553, metadata !DIExpression()), !dbg !4555
  %514 = load i32, i32* @x.77
  %515 = load i32, i32* @y.78
  %516 = sub i32 %514, 1
  %517 = mul i32 %514, %516
  %518 = urem i32 %517, 2
  %519 = icmp eq i32 %518, 0
  %520 = icmp slt i32 %515, 10
  %521 = or i1 %519, %520
  br i1 %521, label %originalBB105, label %originalBB105alteredBB

originalBB105:                                    ; preds = %513, %originalBB105alteredBB
  store i32 1024, i32* %26, align 4, !dbg !4555
  call void @llvm.dbg.declare(metadata i32* %27, metadata !4556, metadata !DIExpression()), !dbg !4557
  store i32 1, i32* %27, align 4, !dbg !4557
  call void @llvm.dbg.declare(metadata i32* %28, metadata !4558, metadata !DIExpression()), !dbg !4559
  %522 = load i8*, i8** %19, align 8, !dbg !4560
  %523 = load i8**, i8*** %21, align 8, !dbg !4562
  %524 = load i8*, i8** %523, align 8, !dbg !4563
  %525 = load i8, i8* %524, align 1, !dbg !4564
  %526 = sext i8 %525 to i32, !dbg !4564
  %527 = call i8* @strchr(i8* %522, i32 %526) #13, !dbg !4565
  %528 = icmp ne i8* %527, null, !dbg !4565
  %529 = load i32, i32* @x.77
  %530 = load i32, i32* @y.78
  %531 = sub i32 %529, 1
  %532 = mul i32 %529, %531
  %533 = urem i32 %532, 2
  %534 = icmp eq i32 %533, 0
  %535 = icmp slt i32 %530, 10
  %536 = or i1 %534, %535
  br i1 %536, label %originalBBpart2107, label %originalBB105alteredBB

originalBBpart2107:                               ; preds = %originalBB105
  br i1 %528, label %558, label %537, !dbg !4566

537:                                              ; preds = %originalBBpart2107
  %538 = load i32, i32* @x.77
  %539 = load i32, i32* @y.78
  %540 = sub i32 %538, 1
  %541 = mul i32 %538, %540
  %542 = urem i32 %541, 2
  %543 = icmp eq i32 %542, 0
  %544 = icmp slt i32 %539, 10
  %545 = or i1 %543, %544
  br i1 %545, label %originalBB109, label %originalBB109alteredBB

originalBB109:                                    ; preds = %537, %originalBB109alteredBB
  %546 = load i64, i64* %22, align 8, !dbg !4567
  %547 = load i64*, i64** %18, align 8, !dbg !4569
  store i64 %546, i64* %547, align 8, !dbg !4570
  %548 = load i32, i32* %23, align 4, !dbg !4571
  %549 = or i32 %548, 2, !dbg !4572
  store i32 %549, i32* %14, align 4, !dbg !4573
  %550 = load i32, i32* @x.77
  %551 = load i32, i32* @y.78
  %552 = sub i32 %550, 1
  %553 = mul i32 %550, %552
  %554 = urem i32 %553, 2
  %555 = icmp eq i32 %554, 0
  %556 = icmp slt i32 %551, 10
  %557 = or i1 %555, %556
  br i1 %557, label %originalBBpart2121, label %originalBB109alteredBB

originalBBpart2121:                               ; preds = %originalBB109
  br label %1053, !dbg !4573

558:                                              ; preds = %originalBBpart2107
  %559 = load i32, i32* @x.77
  %560 = load i32, i32* @y.78
  %561 = sub i32 %559, 1
  %562 = mul i32 %559, %561
  %563 = urem i32 %562, 2
  %564 = icmp eq i32 %563, 0
  %565 = icmp slt i32 %560, 10
  %566 = or i1 %564, %565
  br i1 %566, label %originalBB123, label %originalBB123alteredBB

originalBB123:                                    ; preds = %558, %originalBB123alteredBB
  %567 = load i8**, i8*** %21, align 8, !dbg !4574
  %568 = load i8*, i8** %567, align 8, !dbg !4575
  %569 = load i8, i8* %568, align 1, !dbg !4576
  %570 = sext i8 %569 to i32, !dbg !4576
  %571 = load i32, i32* @x.77
  %572 = load i32, i32* @y.78
  %573 = sub i32 %571, 1
  %574 = mul i32 %571, %573
  %575 = urem i32 %574, 2
  %576 = icmp eq i32 %575, 0
  %577 = icmp slt i32 %572, 10
  %578 = or i1 %576, %577
  br i1 %578, label %originalBBpart2125, label %originalBB123alteredBB

originalBBpart2125:                               ; preds = %originalBB123
  switch i32 %570, label %735 [
    i32 69, label %579
    i32 71, label %579
    i32 103, label %579
    i32 107, label %579
    i32 75, label %579
    i32 77, label %579
    i32 109, label %579
    i32 80, label %579
    i32 84, label %579
    i32 116, label %579
    i32 89, label %579
    i32 90, label %579
  ], !dbg !4577

579:                                              ; preds = %originalBBpart2125, %originalBBpart2125, %originalBBpart2125, %originalBBpart2125, %originalBBpart2125, %originalBBpart2125, %originalBBpart2125, %originalBBpart2125, %originalBBpart2125, %originalBBpart2125, %originalBBpart2125, %originalBBpart2125
  %580 = load i32, i32* @x.77
  %581 = load i32, i32* @y.78
  %582 = sub i32 %580, 1
  %583 = mul i32 %580, %582
  %584 = urem i32 %583, 2
  %585 = icmp eq i32 %584, 0
  %586 = icmp slt i32 %581, 10
  %587 = or i1 %585, %586
  br i1 %587, label %originalBB127, label %originalBB127alteredBB

originalBB127:                                    ; preds = %579, %originalBB127alteredBB
  %588 = load i8*, i8** %19, align 8, !dbg !4578
  %589 = call i8* @strchr(i8* %588, i32 48) #13, !dbg !4581
  %590 = icmp ne i8* %589, null, !dbg !4581
  %591 = load i32, i32* @x.77
  %592 = load i32, i32* @y.78
  %593 = sub i32 %591, 1
  %594 = mul i32 %591, %593
  %595 = urem i32 %594, 2
  %596 = icmp eq i32 %595, 0
  %597 = icmp slt i32 %592, 10
  %598 = or i1 %596, %597
  br i1 %598, label %originalBBpart2129, label %originalBB127alteredBB

originalBBpart2129:                               ; preds = %originalBB127
  br i1 %590, label %599, label %718, !dbg !4582

599:                                              ; preds = %originalBBpart2129
  %600 = load i32, i32* @x.77
  %601 = load i32, i32* @y.78
  %602 = sub i32 %600, 1
  %603 = mul i32 %600, %602
  %604 = urem i32 %603, 2
  %605 = icmp eq i32 %604, 0
  %606 = icmp slt i32 %601, 10
  %607 = or i1 %605, %606
  br i1 %607, label %originalBB131, label %originalBB131alteredBB

originalBB131:                                    ; preds = %599, %originalBB131alteredBB
  %608 = load i8**, i8*** %21, align 8, !dbg !4583
  %609 = getelementptr inbounds i8*, i8** %608, i64 0, !dbg !4583
  %610 = load i8*, i8** %609, align 8, !dbg !4583
  %611 = getelementptr inbounds i8, i8* %610, i64 1, !dbg !4583
  %612 = load i8, i8* %611, align 1, !dbg !4583
  %613 = sext i8 %612 to i32, !dbg !4583
  %614 = load i32, i32* @x.77
  %615 = load i32, i32* @y.78
  %616 = sub i32 %614, 1
  %617 = mul i32 %614, %616
  %618 = urem i32 %617, 2
  %619 = icmp eq i32 %618, 0
  %620 = icmp slt i32 %615, 10
  %621 = or i1 %619, %620
  br i1 %621, label %originalBBpart2133, label %originalBB131alteredBB

originalBBpart2133:                               ; preds = %originalBB131
  switch i32 %613, label %701 [
    i32 105, label %622
    i32 66, label %682
    i32 68, label %682
  ], !dbg !4584

622:                                              ; preds = %originalBBpart2133
  %623 = load i32, i32* @x.77
  %624 = load i32, i32* @y.78
  %625 = sub i32 %623, 1
  %626 = mul i32 %623, %625
  %627 = urem i32 %626, 2
  %628 = icmp eq i32 %627, 0
  %629 = icmp slt i32 %624, 10
  %630 = or i1 %628, %629
  br i1 %630, label %originalBB135, label %originalBB135alteredBB

originalBB135:                                    ; preds = %622, %originalBB135alteredBB
  %631 = load i8**, i8*** %21, align 8, !dbg !4585
  %632 = getelementptr inbounds i8*, i8** %631, i64 0, !dbg !4585
  %633 = load i8*, i8** %632, align 8, !dbg !4585
  %634 = getelementptr inbounds i8, i8* %633, i64 2, !dbg !4585
  %635 = load i8, i8* %634, align 1, !dbg !4585
  %636 = sext i8 %635 to i32, !dbg !4585
  %637 = icmp eq i32 %636, 66, !dbg !4588
  %638 = load i32, i32* @x.77
  %639 = load i32, i32* @y.78
  %640 = sub i32 %638, 1
  %641 = mul i32 %638, %640
  %642 = urem i32 %641, 2
  %643 = icmp eq i32 %642, 0
  %644 = icmp slt i32 %639, 10
  %645 = or i1 %643, %644
  br i1 %645, label %originalBBpart2137, label %originalBB135alteredBB

originalBBpart2137:                               ; preds = %originalBB135
  br i1 %637, label %646, label %665, !dbg !4589

646:                                              ; preds = %originalBBpart2137
  %647 = load i32, i32* @x.77
  %648 = load i32, i32* @y.78
  %649 = sub i32 %647, 1
  %650 = mul i32 %647, %649
  %651 = urem i32 %650, 2
  %652 = icmp eq i32 %651, 0
  %653 = icmp slt i32 %648, 10
  %654 = or i1 %652, %653
  br i1 %654, label %originalBB139, label %originalBB139alteredBB

originalBB139:                                    ; preds = %646, %originalBB139alteredBB
  %655 = load i32, i32* %27, align 4, !dbg !4590
  %656 = add nsw i32 %655, 2, !dbg !4590
  store i32 %656, i32* %27, align 4, !dbg !4590
  %657 = load i32, i32* @x.77
  %658 = load i32, i32* @y.78
  %659 = sub i32 %657, 1
  %660 = mul i32 %657, %659
  %661 = urem i32 %660, 2
  %662 = icmp eq i32 %661, 0
  %663 = icmp slt i32 %658, 10
  %664 = or i1 %662, %663
  br i1 %664, label %originalBBpart2153, label %originalBB139alteredBB

originalBBpart2153:                               ; preds = %originalBB139
  br label %665, !dbg !4591

665:                                              ; preds = %originalBBpart2153, %originalBBpart2137
  %666 = load i32, i32* @x.77
  %667 = load i32, i32* @y.78
  %668 = sub i32 %666, 1
  %669 = mul i32 %666, %668
  %670 = urem i32 %669, 2
  %671 = icmp eq i32 %670, 0
  %672 = icmp slt i32 %667, 10
  %673 = or i1 %671, %672
  br i1 %673, label %originalBB155, label %originalBB155alteredBB

originalBB155:                                    ; preds = %665, %originalBB155alteredBB
  %674 = load i32, i32* @x.77
  %675 = load i32, i32* @y.78
  %676 = sub i32 %674, 1
  %677 = mul i32 %674, %676
  %678 = urem i32 %677, 2
  %679 = icmp eq i32 %678, 0
  %680 = icmp slt i32 %675, 10
  %681 = or i1 %679, %680
  br i1 %681, label %originalBBpart2157, label %originalBB155alteredBB

originalBBpart2157:                               ; preds = %originalBB155
  br label %701, !dbg !4592

682:                                              ; preds = %originalBBpart2133, %originalBBpart2133
  %683 = load i32, i32* @x.77
  %684 = load i32, i32* @y.78
  %685 = sub i32 %683, 1
  %686 = mul i32 %683, %685
  %687 = urem i32 %686, 2
  %688 = icmp eq i32 %687, 0
  %689 = icmp slt i32 %684, 10
  %690 = or i1 %688, %689
  br i1 %690, label %originalBB159, label %originalBB159alteredBB

originalBB159:                                    ; preds = %682, %originalBB159alteredBB
  store i32 1000, i32* %26, align 4, !dbg !4593
  %691 = load i32, i32* %27, align 4, !dbg !4594
  %692 = add nsw i32 %691, 1, !dbg !4594
  store i32 %692, i32* %27, align 4, !dbg !4594
  %693 = load i32, i32* @x.77
  %694 = load i32, i32* @y.78
  %695 = sub i32 %693, 1
  %696 = mul i32 %693, %695
  %697 = urem i32 %696, 2
  %698 = icmp eq i32 %697, 0
  %699 = icmp slt i32 %694, 10
  %700 = or i1 %698, %699
  br i1 %700, label %originalBBpart2162, label %originalBB159alteredBB

originalBBpart2162:                               ; preds = %originalBB159
  br label %701, !dbg !4595

701:                                              ; preds = %originalBBpart2162, %originalBBpart2157, %originalBBpart2133
  %702 = load i32, i32* @x.77
  %703 = load i32, i32* @y.78
  %704 = sub i32 %702, 1
  %705 = mul i32 %702, %704
  %706 = urem i32 %705, 2
  %707 = icmp eq i32 %706, 0
  %708 = icmp slt i32 %703, 10
  %709 = or i1 %707, %708
  br i1 %709, label %originalBB164, label %originalBB164alteredBB

originalBB164:                                    ; preds = %701, %originalBB164alteredBB
  %710 = load i32, i32* @x.77
  %711 = load i32, i32* @y.78
  %712 = sub i32 %710, 1
  %713 = mul i32 %710, %712
  %714 = urem i32 %713, 2
  %715 = icmp eq i32 %714, 0
  %716 = icmp slt i32 %711, 10
  %717 = or i1 %715, %716
  br i1 %717, label %originalBBpart2166, label %originalBB164alteredBB

originalBBpart2166:                               ; preds = %originalBB164
  br label %718, !dbg !4596

718:                                              ; preds = %originalBBpart2166, %originalBBpart2129
  %719 = load i32, i32* @x.77
  %720 = load i32, i32* @y.78
  %721 = sub i32 %719, 1
  %722 = mul i32 %719, %721
  %723 = urem i32 %722, 2
  %724 = icmp eq i32 %723, 0
  %725 = icmp slt i32 %720, 10
  %726 = or i1 %724, %725
  br i1 %726, label %originalBB168, label %originalBB168alteredBB

originalBB168:                                    ; preds = %718, %originalBB168alteredBB
  %727 = load i32, i32* @x.77
  %728 = load i32, i32* @y.78
  %729 = sub i32 %727, 1
  %730 = mul i32 %727, %729
  %731 = urem i32 %730, 2
  %732 = icmp eq i32 %731, 0
  %733 = icmp slt i32 %728, 10
  %734 = or i1 %732, %733
  br i1 %734, label %originalBBpart2170, label %originalBB168alteredBB

originalBBpart2170:                               ; preds = %originalBB168
  br label %735, !dbg !4597

735:                                              ; preds = %originalBBpart2170, %originalBBpart2125
  %736 = load i32, i32* @x.77
  %737 = load i32, i32* @y.78
  %738 = sub i32 %736, 1
  %739 = mul i32 %736, %738
  %740 = urem i32 %739, 2
  %741 = icmp eq i32 %740, 0
  %742 = icmp slt i32 %737, 10
  %743 = or i1 %741, %742
  br i1 %743, label %originalBB172, label %originalBB172alteredBB

originalBB172:                                    ; preds = %735, %originalBB172alteredBB
  %744 = load i8**, i8*** %21, align 8, !dbg !4598
  %745 = load i8*, i8** %744, align 8, !dbg !4599
  %746 = load i8, i8* %745, align 1, !dbg !4600
  %747 = sext i8 %746 to i32, !dbg !4600
  %748 = load i32, i32* @x.77
  %749 = load i32, i32* @y.78
  %750 = sub i32 %748, 1
  %751 = mul i32 %748, %750
  %752 = urem i32 %751, 2
  %753 = icmp eq i32 %752, 0
  %754 = icmp slt i32 %749, 10
  %755 = or i1 %753, %754
  br i1 %755, label %originalBBpart2174, label %originalBB172alteredBB

originalBBpart2174:                               ; preds = %originalBB172
  switch i32 %747, label %963 [
    i32 98, label %756
    i32 66, label %774
    i32 99, label %792
    i32 69, label %809
    i32 71, label %812
    i32 103, label %812
    i32 107, label %831
    i32 75, label %831
    i32 77, label %850
    i32 109, label %850
    i32 80, label %869
    i32 84, label %888
    i32 116, label %888
    i32 119, label %907
    i32 89, label %925
    i32 90, label %944
  ], !dbg !4601

756:                                              ; preds = %originalBBpart2174
  %757 = load i32, i32* @x.77
  %758 = load i32, i32* @y.78
  %759 = sub i32 %757, 1
  %760 = mul i32 %757, %759
  %761 = urem i32 %760, 2
  %762 = icmp eq i32 %761, 0
  %763 = icmp slt i32 %758, 10
  %764 = or i1 %762, %763
  br i1 %764, label %originalBB176, label %originalBB176alteredBB

originalBB176:                                    ; preds = %756, %originalBB176alteredBB
  %765 = call i32 @bkm_scale(i64* %22, i32 512), !dbg !4602
  store i32 %765, i32* %28, align 4, !dbg !4604
  %766 = load i32, i32* @x.77
  %767 = load i32, i32* @y.78
  %768 = sub i32 %766, 1
  %769 = mul i32 %766, %768
  %770 = urem i32 %769, 2
  %771 = icmp eq i32 %770, 0
  %772 = icmp slt i32 %767, 10
  %773 = or i1 %771, %772
  br i1 %773, label %originalBBpart2178, label %originalBB176alteredBB

originalBBpart2178:                               ; preds = %originalBB176
  br label %984, !dbg !4605

774:                                              ; preds = %originalBBpart2174
  %775 = load i32, i32* @x.77
  %776 = load i32, i32* @y.78
  %777 = sub i32 %775, 1
  %778 = mul i32 %775, %777
  %779 = urem i32 %778, 2
  %780 = icmp eq i32 %779, 0
  %781 = icmp slt i32 %776, 10
  %782 = or i1 %780, %781
  br i1 %782, label %originalBB180, label %originalBB180alteredBB

originalBB180:                                    ; preds = %774, %originalBB180alteredBB
  %783 = call i32 @bkm_scale(i64* %22, i32 1024), !dbg !4606
  store i32 %783, i32* %28, align 4, !dbg !4607
  %784 = load i32, i32* @x.77
  %785 = load i32, i32* @y.78
  %786 = sub i32 %784, 1
  %787 = mul i32 %784, %786
  %788 = urem i32 %787, 2
  %789 = icmp eq i32 %788, 0
  %790 = icmp slt i32 %785, 10
  %791 = or i1 %789, %790
  br i1 %791, label %originalBBpart2182, label %originalBB180alteredBB

originalBBpart2182:                               ; preds = %originalBB180
  br label %984, !dbg !4608

792:                                              ; preds = %originalBBpart2174
  %793 = load i32, i32* @x.77
  %794 = load i32, i32* @y.78
  %795 = sub i32 %793, 1
  %796 = mul i32 %793, %795
  %797 = urem i32 %796, 2
  %798 = icmp eq i32 %797, 0
  %799 = icmp slt i32 %794, 10
  %800 = or i1 %798, %799
  br i1 %800, label %originalBB184, label %originalBB184alteredBB

originalBB184:                                    ; preds = %792, %originalBB184alteredBB
  store i32 0, i32* %28, align 4, !dbg !4609
  %801 = load i32, i32* @x.77
  %802 = load i32, i32* @y.78
  %803 = sub i32 %801, 1
  %804 = mul i32 %801, %803
  %805 = urem i32 %804, 2
  %806 = icmp eq i32 %805, 0
  %807 = icmp slt i32 %802, 10
  %808 = or i1 %806, %807
  br i1 %808, label %originalBBpart2186, label %originalBB184alteredBB

originalBBpart2186:                               ; preds = %originalBB184
  br label %984, !dbg !4610

809:                                              ; preds = %originalBBpart2174
  %810 = load i32, i32* %26, align 4, !dbg !4611
  %811 = call i32 @bkm_scale_by_power(i64* %22, i32 %810, i32 6), !dbg !4612
  store i32 %811, i32* %28, align 4, !dbg !4613
  br label %984, !dbg !4614

812:                                              ; preds = %originalBBpart2174, %originalBBpart2174
  %813 = load i32, i32* @x.77
  %814 = load i32, i32* @y.78
  %815 = sub i32 %813, 1
  %816 = mul i32 %813, %815
  %817 = urem i32 %816, 2
  %818 = icmp eq i32 %817, 0
  %819 = icmp slt i32 %814, 10
  %820 = or i1 %818, %819
  br i1 %820, label %originalBB188, label %originalBB188alteredBB

originalBB188:                                    ; preds = %812, %originalBB188alteredBB
  %821 = load i32, i32* %26, align 4, !dbg !4615
  %822 = call i32 @bkm_scale_by_power(i64* %22, i32 %821, i32 3), !dbg !4616
  store i32 %822, i32* %28, align 4, !dbg !4617
  %823 = load i32, i32* @x.77
  %824 = load i32, i32* @y.78
  %825 = sub i32 %823, 1
  %826 = mul i32 %823, %825
  %827 = urem i32 %826, 2
  %828 = icmp eq i32 %827, 0
  %829 = icmp slt i32 %824, 10
  %830 = or i1 %828, %829
  br i1 %830, label %originalBBpart2190, label %originalBB188alteredBB

originalBBpart2190:                               ; preds = %originalBB188
  br label %984, !dbg !4618

831:                                              ; preds = %originalBBpart2174, %originalBBpart2174
  %832 = load i32, i32* @x.77
  %833 = load i32, i32* @y.78
  %834 = sub i32 %832, 1
  %835 = mul i32 %832, %834
  %836 = urem i32 %835, 2
  %837 = icmp eq i32 %836, 0
  %838 = icmp slt i32 %833, 10
  %839 = or i1 %837, %838
  br i1 %839, label %originalBB192, label %originalBB192alteredBB

originalBB192:                                    ; preds = %831, %originalBB192alteredBB
  %840 = load i32, i32* %26, align 4, !dbg !4619
  %841 = call i32 @bkm_scale_by_power(i64* %22, i32 %840, i32 1), !dbg !4620
  store i32 %841, i32* %28, align 4, !dbg !4621
  %842 = load i32, i32* @x.77
  %843 = load i32, i32* @y.78
  %844 = sub i32 %842, 1
  %845 = mul i32 %842, %844
  %846 = urem i32 %845, 2
  %847 = icmp eq i32 %846, 0
  %848 = icmp slt i32 %843, 10
  %849 = or i1 %847, %848
  br i1 %849, label %originalBBpart2194, label %originalBB192alteredBB

originalBBpart2194:                               ; preds = %originalBB192
  br label %984, !dbg !4622

850:                                              ; preds = %originalBBpart2174, %originalBBpart2174
  %851 = load i32, i32* @x.77
  %852 = load i32, i32* @y.78
  %853 = sub i32 %851, 1
  %854 = mul i32 %851, %853
  %855 = urem i32 %854, 2
  %856 = icmp eq i32 %855, 0
  %857 = icmp slt i32 %852, 10
  %858 = or i1 %856, %857
  br i1 %858, label %originalBB196, label %originalBB196alteredBB

originalBB196:                                    ; preds = %850, %originalBB196alteredBB
  %859 = load i32, i32* %26, align 4, !dbg !4623
  %860 = call i32 @bkm_scale_by_power(i64* %22, i32 %859, i32 2), !dbg !4624
  store i32 %860, i32* %28, align 4, !dbg !4625
  %861 = load i32, i32* @x.77
  %862 = load i32, i32* @y.78
  %863 = sub i32 %861, 1
  %864 = mul i32 %861, %863
  %865 = urem i32 %864, 2
  %866 = icmp eq i32 %865, 0
  %867 = icmp slt i32 %862, 10
  %868 = or i1 %866, %867
  br i1 %868, label %originalBBpart2198, label %originalBB196alteredBB

originalBBpart2198:                               ; preds = %originalBB196
  br label %984, !dbg !4626

869:                                              ; preds = %originalBBpart2174
  %870 = load i32, i32* @x.77
  %871 = load i32, i32* @y.78
  %872 = sub i32 %870, 1
  %873 = mul i32 %870, %872
  %874 = urem i32 %873, 2
  %875 = icmp eq i32 %874, 0
  %876 = icmp slt i32 %871, 10
  %877 = or i1 %875, %876
  br i1 %877, label %originalBB200, label %originalBB200alteredBB

originalBB200:                                    ; preds = %869, %originalBB200alteredBB
  %878 = load i32, i32* %26, align 4, !dbg !4627
  %879 = call i32 @bkm_scale_by_power(i64* %22, i32 %878, i32 5), !dbg !4628
  store i32 %879, i32* %28, align 4, !dbg !4629
  %880 = load i32, i32* @x.77
  %881 = load i32, i32* @y.78
  %882 = sub i32 %880, 1
  %883 = mul i32 %880, %882
  %884 = urem i32 %883, 2
  %885 = icmp eq i32 %884, 0
  %886 = icmp slt i32 %881, 10
  %887 = or i1 %885, %886
  br i1 %887, label %originalBBpart2202, label %originalBB200alteredBB

originalBBpart2202:                               ; preds = %originalBB200
  br label %984, !dbg !4630

888:                                              ; preds = %originalBBpart2174, %originalBBpart2174
  %889 = load i32, i32* @x.77
  %890 = load i32, i32* @y.78
  %891 = sub i32 %889, 1
  %892 = mul i32 %889, %891
  %893 = urem i32 %892, 2
  %894 = icmp eq i32 %893, 0
  %895 = icmp slt i32 %890, 10
  %896 = or i1 %894, %895
  br i1 %896, label %originalBB204, label %originalBB204alteredBB

originalBB204:                                    ; preds = %888, %originalBB204alteredBB
  %897 = load i32, i32* %26, align 4, !dbg !4631
  %898 = call i32 @bkm_scale_by_power(i64* %22, i32 %897, i32 4), !dbg !4632
  store i32 %898, i32* %28, align 4, !dbg !4633
  %899 = load i32, i32* @x.77
  %900 = load i32, i32* @y.78
  %901 = sub i32 %899, 1
  %902 = mul i32 %899, %901
  %903 = urem i32 %902, 2
  %904 = icmp eq i32 %903, 0
  %905 = icmp slt i32 %900, 10
  %906 = or i1 %904, %905
  br i1 %906, label %originalBBpart2206, label %originalBB204alteredBB

originalBBpart2206:                               ; preds = %originalBB204
  br label %984, !dbg !4634

907:                                              ; preds = %originalBBpart2174
  %908 = load i32, i32* @x.77
  %909 = load i32, i32* @y.78
  %910 = sub i32 %908, 1
  %911 = mul i32 %908, %910
  %912 = urem i32 %911, 2
  %913 = icmp eq i32 %912, 0
  %914 = icmp slt i32 %909, 10
  %915 = or i1 %913, %914
  br i1 %915, label %originalBB208, label %originalBB208alteredBB

originalBB208:                                    ; preds = %907, %originalBB208alteredBB
  %916 = call i32 @bkm_scale(i64* %22, i32 2), !dbg !4635
  store i32 %916, i32* %28, align 4, !dbg !4636
  %917 = load i32, i32* @x.77
  %918 = load i32, i32* @y.78
  %919 = sub i32 %917, 1
  %920 = mul i32 %917, %919
  %921 = urem i32 %920, 2
  %922 = icmp eq i32 %921, 0
  %923 = icmp slt i32 %918, 10
  %924 = or i1 %922, %923
  br i1 %924, label %originalBBpart2210, label %originalBB208alteredBB

originalBBpart2210:                               ; preds = %originalBB208
  br label %984, !dbg !4637

925:                                              ; preds = %originalBBpart2174
  %926 = load i32, i32* @x.77
  %927 = load i32, i32* @y.78
  %928 = sub i32 %926, 1
  %929 = mul i32 %926, %928
  %930 = urem i32 %929, 2
  %931 = icmp eq i32 %930, 0
  %932 = icmp slt i32 %927, 10
  %933 = or i1 %931, %932
  br i1 %933, label %originalBB212, label %originalBB212alteredBB

originalBB212:                                    ; preds = %925, %originalBB212alteredBB
  %934 = load i32, i32* %26, align 4, !dbg !4638
  %935 = call i32 @bkm_scale_by_power(i64* %22, i32 %934, i32 8), !dbg !4639
  store i32 %935, i32* %28, align 4, !dbg !4640
  %936 = load i32, i32* @x.77
  %937 = load i32, i32* @y.78
  %938 = sub i32 %936, 1
  %939 = mul i32 %936, %938
  %940 = urem i32 %939, 2
  %941 = icmp eq i32 %940, 0
  %942 = icmp slt i32 %937, 10
  %943 = or i1 %941, %942
  br i1 %943, label %originalBBpart2215, label %originalBB212alteredBB

originalBBpart2215:                               ; preds = %originalBB212
  br label %984, !dbg !4641

944:                                              ; preds = %originalBBpart2174
  %945 = load i32, i32* @x.77
  %946 = load i32, i32* @y.78
  %947 = sub i32 %945, 1
  %948 = mul i32 %945, %947
  %949 = urem i32 %948, 2
  %950 = icmp eq i32 %949, 0
  %951 = icmp slt i32 %946, 10
  %952 = or i1 %950, %951
  br i1 %952, label %originalBB217, label %originalBB217alteredBB

originalBB217:                                    ; preds = %944, %originalBB217alteredBB
  %953 = load i32, i32* %26, align 4, !dbg !4642
  %954 = call i32 @bkm_scale_by_power(i64* %22, i32 %953, i32 7), !dbg !4643
  store i32 %954, i32* %28, align 4, !dbg !4644
  %955 = load i32, i32* @x.77
  %956 = load i32, i32* @y.78
  %957 = sub i32 %955, 1
  %958 = mul i32 %955, %957
  %959 = urem i32 %958, 2
  %960 = icmp eq i32 %959, 0
  %961 = icmp slt i32 %956, 10
  %962 = or i1 %960, %961
  br i1 %962, label %originalBBpart2219, label %originalBB217alteredBB

originalBBpart2219:                               ; preds = %originalBB217
  br label %984, !dbg !4645

963:                                              ; preds = %originalBBpart2174
  %964 = load i32, i32* @x.77
  %965 = load i32, i32* @y.78
  %966 = sub i32 %964, 1
  %967 = mul i32 %964, %966
  %968 = urem i32 %967, 2
  %969 = icmp eq i32 %968, 0
  %970 = icmp slt i32 %965, 10
  %971 = or i1 %969, %970
  br i1 %971, label %originalBB221, label %originalBB221alteredBB

originalBB221:                                    ; preds = %963, %originalBB221alteredBB
  %972 = load i64, i64* %22, align 8, !dbg !4646
  %973 = load i64*, i64** %18, align 8, !dbg !4647
  store i64 %972, i64* %973, align 8, !dbg !4648
  %974 = load i32, i32* %23, align 4, !dbg !4649
  %975 = or i32 %974, 2, !dbg !4650
  store i32 %975, i32* %14, align 4, !dbg !4651
  %976 = load i32, i32* @x.77
  %977 = load i32, i32* @y.78
  %978 = sub i32 %976, 1
  %979 = mul i32 %976, %978
  %980 = urem i32 %979, 2
  %981 = icmp eq i32 %980, 0
  %982 = icmp slt i32 %977, 10
  %983 = or i1 %981, %982
  br i1 %983, label %originalBBpart2229, label %originalBB221alteredBB

originalBBpart2229:                               ; preds = %originalBB221
  br label %1053, !dbg !4651

984:                                              ; preds = %originalBBpart2219, %originalBBpart2215, %originalBBpart2210, %originalBBpart2206, %originalBBpart2202, %originalBBpart2198, %originalBBpart2194, %originalBBpart2190, %809, %originalBBpart2186, %originalBBpart2182, %originalBBpart2178
  %985 = load i32, i32* @x.77
  %986 = load i32, i32* @y.78
  %987 = sub i32 %985, 1
  %988 = mul i32 %985, %987
  %989 = urem i32 %988, 2
  %990 = icmp eq i32 %989, 0
  %991 = icmp slt i32 %986, 10
  %992 = or i1 %990, %991
  br i1 %992, label %originalBB231, label %originalBB231alteredBB

originalBB231:                                    ; preds = %984, %originalBB231alteredBB
  %993 = load i32, i32* %28, align 4, !dbg !4652
  %994 = load i32, i32* %23, align 4, !dbg !4653
  %995 = or i32 %994, %993, !dbg !4653
  store i32 %995, i32* %23, align 4, !dbg !4653
  %996 = load i32, i32* %27, align 4, !dbg !4654
  %997 = load i8**, i8*** %21, align 8, !dbg !4655
  %998 = load i8*, i8** %997, align 8, !dbg !4656
  %999 = sext i32 %996 to i64, !dbg !4656
  %1000 = getelementptr inbounds i8, i8* %998, i64 %999, !dbg !4656
  store i8* %1000, i8** %997, align 8, !dbg !4656
  %1001 = load i8**, i8*** %21, align 8, !dbg !4657
  %1002 = load i8*, i8** %1001, align 8, !dbg !4659
  %1003 = load i8, i8* %1002, align 1, !dbg !4660
  %1004 = icmp ne i8 %1003, 0, !dbg !4660
  %1005 = load i32, i32* @x.77
  %1006 = load i32, i32* @y.78
  %1007 = sub i32 %1005, 1
  %1008 = mul i32 %1005, %1007
  %1009 = urem i32 %1008, 2
  %1010 = icmp eq i32 %1009, 0
  %1011 = icmp slt i32 %1006, 10
  %1012 = or i1 %1010, %1011
  br i1 %1012, label %originalBBpart2242, label %originalBB231alteredBB

originalBBpart2242:                               ; preds = %originalBB231
  br i1 %1004, label %1013, label %1032, !dbg !4661

1013:                                             ; preds = %originalBBpart2242
  %1014 = load i32, i32* @x.77
  %1015 = load i32, i32* @y.78
  %1016 = sub i32 %1014, 1
  %1017 = mul i32 %1014, %1016
  %1018 = urem i32 %1017, 2
  %1019 = icmp eq i32 %1018, 0
  %1020 = icmp slt i32 %1015, 10
  %1021 = or i1 %1019, %1020
  br i1 %1021, label %originalBB244, label %originalBB244alteredBB

originalBB244:                                    ; preds = %1013, %originalBB244alteredBB
  %1022 = load i32, i32* %23, align 4, !dbg !4662
  %1023 = or i32 %1022, 2, !dbg !4662
  store i32 %1023, i32* %23, align 4, !dbg !4662
  %1024 = load i32, i32* @x.77
  %1025 = load i32, i32* @y.78
  %1026 = sub i32 %1024, 1
  %1027 = mul i32 %1024, %1026
  %1028 = urem i32 %1027, 2
  %1029 = icmp eq i32 %1028, 0
  %1030 = icmp slt i32 %1025, 10
  %1031 = or i1 %1029, %1030
  br i1 %1031, label %originalBBpart2256, label %originalBB244alteredBB

originalBBpart2256:                               ; preds = %originalBB244
  br label %1032, !dbg !4663

1032:                                             ; preds = %originalBBpart2256, %originalBBpart2242
  %1033 = load i32, i32* @x.77
  %1034 = load i32, i32* @y.78
  %1035 = sub i32 %1033, 1
  %1036 = mul i32 %1033, %1035
  %1037 = urem i32 %1036, 2
  %1038 = icmp eq i32 %1037, 0
  %1039 = icmp slt i32 %1034, 10
  %1040 = or i1 %1038, %1039
  br i1 %1040, label %originalBB258, label %originalBB258alteredBB

originalBB258:                                    ; preds = %1032, %originalBB258alteredBB
  %1041 = load i32, i32* @x.77
  %1042 = load i32, i32* @y.78
  %1043 = sub i32 %1041, 1
  %1044 = mul i32 %1041, %1043
  %1045 = urem i32 %1044, 2
  %1046 = icmp eq i32 %1045, 0
  %1047 = icmp slt i32 %1042, 10
  %1048 = or i1 %1046, %1047
  br i1 %1048, label %originalBBpart2260, label %originalBB258alteredBB

originalBBpart2260:                               ; preds = %originalBB258
  br label %1049, !dbg !4664

1049:                                             ; preds = %originalBBpart2260, %507
  %1050 = load i64, i64* %22, align 8, !dbg !4665
  %1051 = load i64*, i64** %18, align 8, !dbg !4666
  store i64 %1050, i64* %1051, align 8, !dbg !4667
  %1052 = load i32, i32* %23, align 4, !dbg !4668
  store i32 %1052, i32* %14, align 4, !dbg !4669
  br label %1053, !dbg !4669

1053:                                             ; preds = %1049, %originalBBpart2229, %originalBBpart2121, %originalBBpart2103, %originalBBpart287, %originalBBpart271, %originalBBpart247
  %1054 = load i32, i32* @x.77
  %1055 = load i32, i32* @y.78
  %1056 = sub i32 %1054, 1
  %1057 = mul i32 %1054, %1056
  %1058 = urem i32 %1057, 2
  %1059 = icmp eq i32 %1058, 0
  %1060 = icmp slt i32 %1055, 10
  %1061 = or i1 %1059, %1060
  br i1 %1061, label %originalBB262, label %originalBB262alteredBB

originalBB262:                                    ; preds = %1053, %originalBB262alteredBB
  %1062 = load i32, i32* %14, align 4, !dbg !4670
  %1063 = load i32, i32* @x.77
  %1064 = load i32, i32* @y.78
  %1065 = sub i32 %1063, 1
  %1066 = mul i32 %1063, %1065
  %1067 = urem i32 %1066, 2
  %1068 = icmp eq i32 %1067, 0
  %1069 = icmp slt i32 %1064, 10
  %1070 = or i1 %1068, %1069
  br i1 %1070, label %originalBBpart2264, label %originalBB262alteredBB

originalBBpart2264:                               ; preds = %originalBB262
  ret i32 %1062, !dbg !4670

originalBBalteredBB:                              ; preds = %originalBB, %5
  %1071 = alloca i32, align 4
  %1072 = alloca i8*, align 8
  %1073 = alloca i8**, align 8
  %1074 = alloca i32, align 4
  %1075 = alloca i64*, align 8
  %1076 = alloca i8*, align 8
  %1077 = alloca i8*, align 8
  %1078 = alloca i8**, align 8
  %1079 = alloca i64, align 8
  %1080 = alloca i32, align 4
  %1081 = alloca i8*, align 8
  %1082 = alloca i8, align 1
  %1083 = alloca i32, align 4
  %1084 = alloca i32, align 4
  %1085 = alloca i32, align 4
  store i8* %0, i8** %1072, align 8
  call void @llvm.dbg.declare(metadata i8** %1072, metadata !4671, metadata !DIExpression()), !dbg !4450
  store i8** %1, i8*** %1073, align 8
  call void @llvm.dbg.declare(metadata i8*** %1073, metadata !4674, metadata !DIExpression()), !dbg !4452
  store i32 %2, i32* %1074, align 4
  call void @llvm.dbg.declare(metadata i32* %1074, metadata !4675, metadata !DIExpression()), !dbg !4454
  store i64* %3, i64** %1075, align 8
  call void @llvm.dbg.declare(metadata i64** %1075, metadata !4676, metadata !DIExpression()), !dbg !4456
  store i8* %4, i8** %1076, align 8
  call void @llvm.dbg.declare(metadata i8** %1076, metadata !4677, metadata !DIExpression()), !dbg !4458
  call void @llvm.dbg.declare(metadata i8** %1077, metadata !4678, metadata !DIExpression()), !dbg !4460
  call void @llvm.dbg.declare(metadata i8*** %1078, metadata !4679, metadata !DIExpression()), !dbg !4462
  call void @llvm.dbg.declare(metadata i64* %1079, metadata !4680, metadata !DIExpression()), !dbg !4464
  call void @llvm.dbg.declare(metadata i32* %1080, metadata !4681, metadata !DIExpression()), !dbg !4466
  store i32 0, i32* %1080, align 4, !dbg !4466
  %1086 = load i32, i32* %1074, align 4, !dbg !4467
  %1087 = icmp sle i32 0, %1086, !dbg !4467
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %39
  %1088 = load i32, i32* %17, align 4, !dbg !4467
  %1089 = icmp sle i32 %1088, 36, !dbg !4467
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %58
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %75
  call void @__assert_fail(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.142, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.143, i64 0, i64 0), i32 84, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @__PRETTY_FUNCTION__.xstrtoul, i64 0, i64 0)) #12, !dbg !4467
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %92
  %1090 = load i8**, i8*** %16, align 8, !dbg !4471
  %1091 = icmp ne i8** %1090, null, !dbg !4471
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %111
  %1092 = load i8**, i8*** %16, align 8, !dbg !4472
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %129
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %152
  %1093 = call i16** @__ctype_b_loc() #15, !dbg !4486
  %1094 = load i16*, i16** %1093, align 8, !dbg !4486
  %1095 = load i8, i8* %25, align 1, !dbg !4486
  %1096 = zext i8 %1095 to i32, !dbg !4486
  %1097 = sext i32 %1096 to i64, !dbg !4486
  %1098 = getelementptr inbounds i16, i16* %1094, i64 %1097, !dbg !4486
  %1099 = load i16, i16* %1098, align 2, !dbg !4486
  %1100 = zext i16 %1099 to i32, !dbg !4486
  %_ = shl i32 %1100, 8192
  %_27 = sub i32 %1100, 8192
  %gen = mul i32 %_27, 8192
  %_28 = sub i32 0, %1100
  %gen29 = add i32 %_28, 8192
  %_30 = shl i32 %1100, 8192
  %_31 = shl i32 %1100, 8192
  %_32 = sub i32 0, %1100
  %gen33 = add i32 %_32, 8192
  %1101 = and i32 %1100, 8192, !dbg !4486
  %1102 = icmp ne i32 %1101, 0, !dbg !4485
  br label %originalBB26

originalBB37alteredBB:                            ; preds = %originalBB37, %179
  %1103 = load i8*, i8** %24, align 8, !dbg !4487
  %1104 = getelementptr inbounds i8, i8* %1103, i32 1, !dbg !4487
  store i8* %1104, i8** %24, align 8, !dbg !4487
  %1105 = load i8, i8* %1104, align 1, !dbg !4488
  store i8 %1105, i8* %25, align 1, !dbg !4489
  br label %originalBB37

originalBB41alteredBB:                            ; preds = %originalBB41, %199
  %1106 = load i8, i8* %25, align 1, !dbg !4492
  %1107 = zext i8 %1106 to i32, !dbg !4492
  %1108 = icmp eq i32 %1107, 45, !dbg !4494
  br label %originalBB41

originalBB45alteredBB:                            ; preds = %originalBB45, %219
  store i32 4, i32* %14, align 4, !dbg !4496
  br label %originalBB45

originalBB49alteredBB:                            ; preds = %originalBB49, %236
  %1109 = load i8*, i8** %15, align 8, !dbg !4497
  %1110 = load i8**, i8*** %21, align 8, !dbg !4498
  %1111 = load i32, i32* %17, align 4, !dbg !4499
  %1112 = call i64 @strtoul(i8* %1109, i8** %1110, i32 %1111) #10, !dbg !4500
  store i64 %1112, i64* %22, align 8, !dbg !4501
  %1113 = load i8**, i8*** %21, align 8, !dbg !4502
  %1114 = load i8*, i8** %1113, align 8, !dbg !4504
  %1115 = load i8*, i8** %15, align 8, !dbg !4505
  %1116 = icmp eq i8* %1114, %1115, !dbg !4506
  br label %originalBB49

originalBB53alteredBB:                            ; preds = %originalBB53, %261
  %1117 = load i8*, i8** %19, align 8, !dbg !4508
  %1118 = icmp ne i8* %1117, null, !dbg !4508
  br label %originalBB53

originalBB57alteredBB:                            ; preds = %originalBB57, %280
  %1119 = load i8**, i8*** %21, align 8, !dbg !4512
  %1120 = load i8*, i8** %1119, align 8, !dbg !4513
  %1121 = load i8, i8* %1120, align 1, !dbg !4514
  %1122 = sext i8 %1121 to i32, !dbg !4514
  %1123 = icmp ne i32 %1122, 0, !dbg !4514
  br label %originalBB57

originalBB61alteredBB:                            ; preds = %originalBB61, %302
  %1124 = load i8*, i8** %19, align 8, !dbg !4516
  %1125 = load i8**, i8*** %21, align 8, !dbg !4517
  %1126 = load i8*, i8** %1125, align 8, !dbg !4518
  %1127 = load i8, i8* %1126, align 1, !dbg !4519
  %1128 = sext i8 %1127 to i32, !dbg !4519
  %1129 = call i8* @strchr(i8* %1124, i32 %1128) #13, !dbg !4520
  %1130 = icmp ne i8* %1129, null, !dbg !4520
  br label %originalBB61

originalBB65alteredBB:                            ; preds = %originalBB65, %326
  store i64 1, i64* %22, align 8, !dbg !4522
  br label %originalBB65

originalBB69alteredBB:                            ; preds = %originalBB69, %343
  store i32 4, i32* %14, align 4, !dbg !4524
  br label %originalBB69

originalBB73alteredBB:                            ; preds = %originalBB73, %360
  br label %originalBB73

originalBB77alteredBB:                            ; preds = %originalBB77, %377
  %1131 = call i32* @__errno_location() #15, !dbg !4526
  %1132 = load i32, i32* %1131, align 4, !dbg !4526
  %1133 = icmp ne i32 %1132, 0, !dbg !4528
  br label %originalBB77

originalBB81alteredBB:                            ; preds = %originalBB81, %397
  %1134 = call i32* @__errno_location() #15, !dbg !4530
  %1135 = load i32, i32* %1134, align 4, !dbg !4530
  %1136 = icmp ne i32 %1135, 34, !dbg !4533
  br label %originalBB81

originalBB85alteredBB:                            ; preds = %originalBB85, %417
  store i32 4, i32* %14, align 4, !dbg !4535
  br label %originalBB85

originalBB89alteredBB:                            ; preds = %originalBB89, %434
  store i32 1, i32* %23, align 4, !dbg !4536
  br label %originalBB89

originalBB93alteredBB:                            ; preds = %originalBB93, %451
  br label %originalBB93

originalBB97alteredBB:                            ; preds = %originalBB97, %468
  %1137 = load i8*, i8** %19, align 8, !dbg !4538
  %1138 = icmp ne i8* %1137, null, !dbg !4538
  br label %originalBB97

originalBB101alteredBB:                           ; preds = %originalBB101, %487
  %1139 = load i64, i64* %22, align 8, !dbg !4541
  %1140 = load i64*, i64** %18, align 8, !dbg !4543
  store i64 %1139, i64* %1140, align 8, !dbg !4544
  %1141 = load i32, i32* %23, align 4, !dbg !4545
  store i32 %1141, i32* %14, align 4, !dbg !4546
  br label %originalBB101

originalBB105alteredBB:                           ; preds = %originalBB105, %513
  store i32 1024, i32* %26, align 4, !dbg !4555
  call void @llvm.dbg.declare(metadata !4, metadata !4682, metadata !DIExpression()), !dbg !4557
  store i32 1, i32* %27, align 4, !dbg !4557
  call void @llvm.dbg.declare(metadata !4, metadata !4687, metadata !DIExpression()), !dbg !4559
  %1142 = load i8*, i8** %19, align 8, !dbg !4560
  %1143 = load i8**, i8*** %21, align 8, !dbg !4562
  %1144 = load i8*, i8** %1143, align 8, !dbg !4563
  %1145 = load i8, i8* %1144, align 1, !dbg !4564
  %1146 = sext i8 %1145 to i32, !dbg !4564
  %1147 = call i8* @strchr(i8* %1142, i32 %1146) #13, !dbg !4565
  %1148 = icmp ne i8* %1147, null, !dbg !4565
  br label %originalBB105

originalBB109alteredBB:                           ; preds = %originalBB109, %537
  %1149 = load i64, i64* %22, align 8, !dbg !4567
  %1150 = load i64*, i64** %18, align 8, !dbg !4569
  store i64 %1149, i64* %1150, align 8, !dbg !4570
  %1151 = load i32, i32* %23, align 4, !dbg !4571
  %_110 = sub i32 0, %1151
  %gen111 = add i32 %_110, 2
  %_112 = sub i32 0, %1151
  %gen113 = add i32 %_112, 2
  %_114 = sub i32 %1151, 2
  %gen115 = mul i32 %_114, 2
  %_116 = sub i32 %1151, 2
  %gen117 = mul i32 %_116, 2
  %_118 = sub i32 %1151, 2
  %gen119 = mul i32 %_118, 2
  %1152 = or i32 %1151, 2, !dbg !4572
  store i32 %1152, i32* %14, align 4, !dbg !4573
  br label %originalBB109

originalBB123alteredBB:                           ; preds = %originalBB123, %558
  %1153 = load i8**, i8*** %21, align 8, !dbg !4574
  %1154 = load i8*, i8** %1153, align 8, !dbg !4575
  %1155 = load i8, i8* %1154, align 1, !dbg !4576
  %1156 = sext i8 %1155 to i32, !dbg !4576
  br label %originalBB123

originalBB127alteredBB:                           ; preds = %originalBB127, %579
  %1157 = load i8*, i8** %19, align 8, !dbg !4578
  %1158 = call i8* @strchr(i8* %1157, i32 48) #13, !dbg !4581
  %1159 = icmp ne i8* %1158, null, !dbg !4581
  br label %originalBB127

originalBB131alteredBB:                           ; preds = %originalBB131, %599
  %1160 = load i8**, i8*** %21, align 8, !dbg !4583
  %1161 = getelementptr inbounds i8*, i8** %1160, i64 0, !dbg !4583
  %1162 = load i8*, i8** %1161, align 8, !dbg !4583
  %1163 = getelementptr inbounds i8, i8* %1162, i64 1, !dbg !4583
  %1164 = load i8, i8* %1163, align 1, !dbg !4583
  %1165 = sext i8 %1164 to i32, !dbg !4583
  br label %originalBB131

originalBB135alteredBB:                           ; preds = %originalBB135, %622
  %1166 = load i8**, i8*** %21, align 8, !dbg !4585
  %1167 = getelementptr inbounds i8*, i8** %1166, i64 0, !dbg !4585
  %1168 = load i8*, i8** %1167, align 8, !dbg !4585
  %1169 = getelementptr inbounds i8, i8* %1168, i64 2, !dbg !4585
  %1170 = load i8, i8* %1169, align 1, !dbg !4585
  %1171 = sext i8 %1170 to i32, !dbg !4585
  %1172 = icmp eq i32 %1171, 66, !dbg !4588
  br label %originalBB135

originalBB139alteredBB:                           ; preds = %originalBB139, %646
  %1173 = load i32, i32* %27, align 4, !dbg !4590
  %_140 = sub i32 0, %1173
  %gen141 = add i32 %_140, 2
  %_142 = sub i32 %1173, 2
  %gen143 = mul i32 %_142, 2
  %_144 = sub i32 0, %1173
  %gen145 = add i32 %_144, 2
  %_146 = sub i32 0, %1173
  %gen147 = add i32 %_146, 2
  %_148 = sub i32 0, %1173
  %gen149 = add i32 %_148, 2
  %_150 = sub i32 %1173, 2
  %gen151 = mul i32 %_150, 2
  %1174 = add nsw i32 %1173, 2, !dbg !4590
  store i32 %1174, i32* %27, align 4, !dbg !4590
  br label %originalBB139

originalBB155alteredBB:                           ; preds = %originalBB155, %665
  br label %originalBB155

originalBB159alteredBB:                           ; preds = %originalBB159, %682
  store i32 1000, i32* %26, align 4, !dbg !4593
  %1175 = load i32, i32* %27, align 4, !dbg !4594
  %_160 = shl i32 %1175, 1
  %1176 = add nsw i32 %1175, 1, !dbg !4594
  store i32 %1176, i32* %27, align 4, !dbg !4594
  br label %originalBB159

originalBB164alteredBB:                           ; preds = %originalBB164, %701
  br label %originalBB164

originalBB168alteredBB:                           ; preds = %originalBB168, %718
  br label %originalBB168

originalBB172alteredBB:                           ; preds = %originalBB172, %735
  %1177 = load i8**, i8*** %21, align 8, !dbg !4598
  %1178 = load i8*, i8** %1177, align 8, !dbg !4599
  %1179 = load i8, i8* %1178, align 1, !dbg !4600
  %1180 = sext i8 %1179 to i32, !dbg !4600
  br label %originalBB172

originalBB176alteredBB:                           ; preds = %originalBB176, %756
  %1181 = call i32 @bkm_scale(i64* %22, i32 512), !dbg !4602
  store i32 %1181, i32* %28, align 4, !dbg !4604
  br label %originalBB176

originalBB180alteredBB:                           ; preds = %originalBB180, %774
  %1182 = call i32 @bkm_scale(i64* %22, i32 1024), !dbg !4606
  store i32 %1182, i32* %28, align 4, !dbg !4607
  br label %originalBB180

originalBB184alteredBB:                           ; preds = %originalBB184, %792
  store i32 0, i32* %28, align 4, !dbg !4609
  br label %originalBB184

originalBB188alteredBB:                           ; preds = %originalBB188, %812
  %1183 = load i32, i32* %26, align 4, !dbg !4615
  %1184 = call i32 @bkm_scale_by_power(i64* %22, i32 %1183, i32 3), !dbg !4616
  store i32 %1184, i32* %28, align 4, !dbg !4617
  br label %originalBB188

originalBB192alteredBB:                           ; preds = %originalBB192, %831
  %1185 = load i32, i32* %26, align 4, !dbg !4619
  %1186 = call i32 @bkm_scale_by_power(i64* %22, i32 %1185, i32 1), !dbg !4620
  store i32 %1186, i32* %28, align 4, !dbg !4621
  br label %originalBB192

originalBB196alteredBB:                           ; preds = %originalBB196, %850
  %1187 = load i32, i32* %26, align 4, !dbg !4623
  %1188 = call i32 @bkm_scale_by_power(i64* %22, i32 %1187, i32 2), !dbg !4624
  store i32 %1188, i32* %28, align 4, !dbg !4625
  br label %originalBB196

originalBB200alteredBB:                           ; preds = %originalBB200, %869
  %1189 = load i32, i32* %26, align 4, !dbg !4627
  %1190 = call i32 @bkm_scale_by_power(i64* %22, i32 %1189, i32 5), !dbg !4628
  store i32 %1190, i32* %28, align 4, !dbg !4629
  br label %originalBB200

originalBB204alteredBB:                           ; preds = %originalBB204, %888
  %1191 = load i32, i32* %26, align 4, !dbg !4631
  %1192 = call i32 @bkm_scale_by_power(i64* %22, i32 %1191, i32 4), !dbg !4632
  store i32 %1192, i32* %28, align 4, !dbg !4633
  br label %originalBB204

originalBB208alteredBB:                           ; preds = %originalBB208, %907
  %1193 = call i32 @bkm_scale(i64* %22, i32 2), !dbg !4635
  store i32 %1193, i32* %28, align 4, !dbg !4636
  br label %originalBB208

originalBB212alteredBB:                           ; preds = %originalBB212, %925
  %1194 = load i32, i32* %26, align 4, !dbg !4638
  %1195 = call i32 @bkm_scale_by_power(i64* %22, i32 %1194, i32 8), !dbg !4639
  store i32 %1195, i32* %28, align 4, !dbg !4640
  br label %originalBB212

originalBB217alteredBB:                           ; preds = %originalBB217, %944
  %1196 = load i32, i32* %26, align 4, !dbg !4642
  %1197 = call i32 @bkm_scale_by_power(i64* %22, i32 %1196, i32 7), !dbg !4643
  store i32 %1197, i32* %28, align 4, !dbg !4644
  br label %originalBB217

originalBB221alteredBB:                           ; preds = %originalBB221, %963
  %1198 = load i64, i64* %22, align 8, !dbg !4646
  %1199 = load i64*, i64** %18, align 8, !dbg !4647
  store i64 %1198, i64* %1199, align 8, !dbg !4648
  %1200 = load i32, i32* %23, align 4, !dbg !4649
  %_222 = sub i32 %1200, 2
  %gen223 = mul i32 %_222, 2
  %_224 = sub i32 %1200, 2
  %gen225 = mul i32 %_224, 2
  %_226 = sub i32 0, %1200
  %gen227 = add i32 %_226, 2
  %1201 = or i32 %1200, 2, !dbg !4650
  store i32 %1201, i32* %14, align 4, !dbg !4651
  br label %originalBB221

originalBB231alteredBB:                           ; preds = %originalBB231, %984
  %1202 = load i32, i32* %28, align 4, !dbg !4652
  %1203 = load i32, i32* %23, align 4, !dbg !4653
  %_232 = sub i32 %1203, %1202
  %gen233 = mul i32 %_232, %1202
  %_234 = sub i32 0, %1203
  %gen235 = add i32 %_234, %1202
  %_236 = sub i32 %1203, %1202
  %gen237 = mul i32 %_236, %1202
  %_238 = sub i32 %1203, %1202
  %gen239 = mul i32 %_238, %1202
  %1204 = or i32 %1203, %1202, !dbg !4653
  store i32 %1204, i32* %23, align 4, !dbg !4653
  %1205 = load i32, i32* %27, align 4, !dbg !4654
  %1206 = load i8**, i8*** %21, align 8, !dbg !4655
  %1207 = load i8*, i8** %1206, align 8, !dbg !4656
  %1208 = sext i32 %1205 to i64, !dbg !4656
  %1209 = getelementptr inbounds i8, i8* %1207, i64 %1208, !dbg !4656
  store i8* %1209, i8** %1206, align 8, !dbg !4656
  %1210 = load i8**, i8*** %21, align 8, !dbg !4657
  %1211 = load i8*, i8** %1210, align 8, !dbg !4659
  %1212 = load i8, i8* %1211, align 1, !dbg !4660
  %1213 = icmp ne i8 %1212, 0, !dbg !4660
  br label %originalBB231

originalBB244alteredBB:                           ; preds = %originalBB244, %1013
  %1214 = load i32, i32* %23, align 4, !dbg !4662
  %_245 = sub i32 0, %1214
  %gen246 = add i32 %_245, 2
  %_247 = sub i32 0, %1214
  %gen248 = add i32 %_247, 2
  %_249 = shl i32 %1214, 2
  %_250 = shl i32 %1214, 2
  %_251 = sub i32 0, %1214
  %gen252 = add i32 %_251, 2
  %_253 = shl i32 %1214, 2
  %_254 = shl i32 %1214, 2
  %1215 = or i32 %1214, 2, !dbg !4662
  store i32 %1215, i32* %23, align 4, !dbg !4662
  br label %originalBB244

originalBB258alteredBB:                           ; preds = %originalBB258, %1032
  br label %originalBB258

originalBB262alteredBB:                           ; preds = %originalBB262, %1053
  %1216 = load i32, i32* %14, align 4, !dbg !4670
  br label %originalBB262
}

; Function Attrs: noreturn nounwind
declare dso_local void @__assert_fail(i8*, i8*, i32, i8*) #5

; Function Attrs: nounwind
declare dso_local i64 @strtoul(i8*, i8**, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @bkm_scale(i64*, i32) #4 !dbg !4688 {
  %3 = load i32, i32* @x.79
  %4 = load i32, i32* @y.80
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca i32, align 4
  %12 = alloca i64*, align 8
  %13 = alloca i32, align 4
  store i64* %0, i64** %12, align 8
  call void @llvm.dbg.declare(metadata i64** %12, metadata !4691, metadata !DIExpression()), !dbg !4692
  store i32 %1, i32* %13, align 4
  call void @llvm.dbg.declare(metadata i32* %13, metadata !4693, metadata !DIExpression()), !dbg !4694
  %14 = load i32, i32* %13, align 4, !dbg !4695
  %15 = sext i32 %14 to i64, !dbg !4695
  %16 = udiv i64 -1, %15, !dbg !4697
  %17 = load i64*, i64** %12, align 8, !dbg !4698
  %18 = load i64, i64* %17, align 8, !dbg !4699
  %19 = icmp ult i64 %16, %18, !dbg !4700
  %20 = load i32, i32* @x.79
  %21 = load i32, i32* @y.80
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %19, label %28, label %46, !dbg !4701

28:                                               ; preds = %originalBBpart2
  %29 = load i32, i32* @x.79
  %30 = load i32, i32* @y.80
  %31 = sub i32 %29, 1
  %32 = mul i32 %29, %31
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %34, %35
  br i1 %36, label %originalBB3, label %originalBB3alteredBB

originalBB3:                                      ; preds = %28, %originalBB3alteredBB
  %37 = load i64*, i64** %12, align 8, !dbg !4702
  store i64 -1, i64* %37, align 8, !dbg !4704
  store i32 1, i32* %11, align 4, !dbg !4705
  %38 = load i32, i32* @x.79
  %39 = load i32, i32* @y.80
  %40 = sub i32 %38, 1
  %41 = mul i32 %38, %40
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %43, %44
  br i1 %45, label %originalBBpart25, label %originalBB3alteredBB

originalBBpart25:                                 ; preds = %originalBB3
  br label %68, !dbg !4705

46:                                               ; preds = %originalBBpart2
  %47 = load i32, i32* @x.79
  %48 = load i32, i32* @y.80
  %49 = sub i32 %47, 1
  %50 = mul i32 %47, %49
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %48, 10
  %54 = or i1 %52, %53
  br i1 %54, label %originalBB7, label %originalBB7alteredBB

originalBB7:                                      ; preds = %46, %originalBB7alteredBB
  %55 = load i32, i32* %13, align 4, !dbg !4706
  %56 = sext i32 %55 to i64, !dbg !4706
  %57 = load i64*, i64** %12, align 8, !dbg !4707
  %58 = load i64, i64* %57, align 8, !dbg !4708
  %59 = mul i64 %58, %56, !dbg !4708
  store i64 %59, i64* %57, align 8, !dbg !4708
  store i32 0, i32* %11, align 4, !dbg !4709
  %60 = load i32, i32* @x.79
  %61 = load i32, i32* @y.80
  %62 = sub i32 %60, 1
  %63 = mul i32 %60, %62
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %61, 10
  %67 = or i1 %65, %66
  br i1 %67, label %originalBBpart211, label %originalBB7alteredBB

originalBBpart211:                                ; preds = %originalBB7
  br label %68, !dbg !4709

68:                                               ; preds = %originalBBpart211, %originalBBpart25
  %69 = load i32, i32* @x.79
  %70 = load i32, i32* @y.80
  %71 = sub i32 %69, 1
  %72 = mul i32 %69, %71
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %74, %75
  br i1 %76, label %originalBB13, label %originalBB13alteredBB

originalBB13:                                     ; preds = %68, %originalBB13alteredBB
  %77 = load i32, i32* %11, align 4, !dbg !4710
  %78 = load i32, i32* @x.79
  %79 = load i32, i32* @y.80
  %80 = sub i32 %78, 1
  %81 = mul i32 %78, %80
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %79, 10
  %85 = or i1 %83, %84
  br i1 %85, label %originalBBpart215, label %originalBB13alteredBB

originalBBpart215:                                ; preds = %originalBB13
  ret i32 %77, !dbg !4710

originalBBalteredBB:                              ; preds = %originalBB, %2
  %86 = alloca i32, align 4
  %87 = alloca i64*, align 8
  %88 = alloca i32, align 4
  store i64* %0, i64** %87, align 8
  call void @llvm.dbg.declare(metadata i64** %87, metadata !4711, metadata !DIExpression()), !dbg !4692
  store i32 %1, i32* %88, align 4
  call void @llvm.dbg.declare(metadata i32* %88, metadata !4714, metadata !DIExpression()), !dbg !4694
  %89 = load i32, i32* %88, align 4, !dbg !4695
  %90 = sext i32 %89 to i64, !dbg !4695
  %_ = sub i64 0, -1
  %gen = add i64 %_, %90
  %_1 = sub i64 -1, %90
  %gen2 = mul i64 %_1, %90
  %91 = udiv i64 -1, %90, !dbg !4697
  %92 = load i64*, i64** %87, align 8, !dbg !4698
  %93 = load i64, i64* %92, align 8, !dbg !4699
  %94 = icmp ult i64 %91, %93, !dbg !4700
  br label %originalBB

originalBB3alteredBB:                             ; preds = %originalBB3, %28
  %95 = load i64*, i64** %12, align 8, !dbg !4702
  store i64 -1, i64* %95, align 8, !dbg !4704
  store i32 1, i32* %11, align 4, !dbg !4705
  br label %originalBB3

originalBB7alteredBB:                             ; preds = %originalBB7, %46
  %96 = load i32, i32* %13, align 4, !dbg !4706
  %97 = sext i32 %96 to i64, !dbg !4706
  %98 = load i64*, i64** %12, align 8, !dbg !4707
  %99 = load i64, i64* %98, align 8, !dbg !4708
  %_8 = shl i64 %99, %97
  %_9 = shl i64 %99, %97
  %100 = mul i64 %99, %97, !dbg !4708
  store i64 %100, i64* %98, align 8, !dbg !4708
  store i32 0, i32* %11, align 4, !dbg !4709
  br label %originalBB7

originalBB13alteredBB:                            ; preds = %originalBB13, %68
  %101 = load i32, i32* %11, align 4, !dbg !4710
  br label %originalBB13
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @bkm_scale_by_power(i64*, i32, i32) #4 !dbg !4715 {
  %4 = load i32, i32* @x.81
  %5 = load i32, i32* @y.82
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca i64*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  store i64* %0, i64** %12, align 8
  call void @llvm.dbg.declare(metadata i64** %12, metadata !4718, metadata !DIExpression()), !dbg !4719
  store i32 %1, i32* %13, align 4
  call void @llvm.dbg.declare(metadata i32* %13, metadata !4720, metadata !DIExpression()), !dbg !4721
  store i32 %2, i32* %14, align 4
  call void @llvm.dbg.declare(metadata i32* %14, metadata !4722, metadata !DIExpression()), !dbg !4723
  call void @llvm.dbg.declare(metadata i32* %15, metadata !4724, metadata !DIExpression()), !dbg !4725
  store i32 0, i32* %15, align 4, !dbg !4725
  %16 = load i32, i32* @x.81
  %17 = load i32, i32* @y.82
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %24, !dbg !4726

24:                                               ; preds = %44, %originalBBpart2
  %25 = load i32, i32* @x.81
  %26 = load i32, i32* @y.82
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %24, %originalBB1alteredBB
  %33 = load i32, i32* %14, align 4, !dbg !4727
  %34 = add nsw i32 %33, -1, !dbg !4727
  store i32 %34, i32* %14, align 4, !dbg !4727
  %35 = icmp ne i32 %33, 0, !dbg !4726
  %36 = load i32, i32* @x.81
  %37 = load i32, i32* @y.82
  %38 = sub i32 %36, 1
  %39 = mul i32 %36, %38
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %37, 10
  %43 = or i1 %41, %42
  br i1 %43, label %originalBBpart29, label %originalBB1alteredBB

originalBBpart29:                                 ; preds = %originalBB1
  br i1 %35, label %44, label %50, !dbg !4726

44:                                               ; preds = %originalBBpart29
  %45 = load i64*, i64** %12, align 8, !dbg !4728
  %46 = load i32, i32* %13, align 4, !dbg !4729
  %47 = call i32 @bkm_scale(i64* %45, i32 %46), !dbg !4730
  %48 = load i32, i32* %15, align 4, !dbg !4731
  %49 = or i32 %48, %47, !dbg !4731
  store i32 %49, i32* %15, align 4, !dbg !4731
  br label %24, !dbg !4726, !llvm.loop !4732

50:                                               ; preds = %originalBBpart29
  %51 = load i32, i32* @x.81
  %52 = load i32, i32* @y.82
  %53 = sub i32 %51, 1
  %54 = mul i32 %51, %53
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %52, 10
  %58 = or i1 %56, %57
  br i1 %58, label %originalBB11, label %originalBB11alteredBB

originalBB11:                                     ; preds = %50, %originalBB11alteredBB
  %59 = load i32, i32* %15, align 4, !dbg !4734
  %60 = load i32, i32* @x.81
  %61 = load i32, i32* @y.82
  %62 = sub i32 %60, 1
  %63 = mul i32 %60, %62
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %61, 10
  %67 = or i1 %65, %66
  br i1 %67, label %originalBBpart213, label %originalBB11alteredBB

originalBBpart213:                                ; preds = %originalBB11
  ret i32 %59, !dbg !4735

originalBBalteredBB:                              ; preds = %originalBB, %3
  %68 = alloca i64*, align 8
  %69 = alloca i32, align 4
  %70 = alloca i32, align 4
  %71 = alloca i32, align 4
  store i64* %0, i64** %68, align 8
  call void @llvm.dbg.declare(metadata i64** %68, metadata !4736, metadata !DIExpression()), !dbg !4719
  store i32 %1, i32* %69, align 4
  call void @llvm.dbg.declare(metadata i32* %69, metadata !4739, metadata !DIExpression()), !dbg !4721
  store i32 %2, i32* %70, align 4
  call void @llvm.dbg.declare(metadata i32* %70, metadata !4740, metadata !DIExpression()), !dbg !4723
  call void @llvm.dbg.declare(metadata i32* %71, metadata !4741, metadata !DIExpression()), !dbg !4725
  store i32 0, i32* %71, align 4, !dbg !4725
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %24
  %72 = load i32, i32* %14, align 4, !dbg !4727
  %_ = shl i32 %72, -1
  %_2 = sub i32 %72, -1
  %gen = mul i32 %_2, -1
  %_3 = sub i32 0, %72
  %gen4 = add i32 %_3, -1
  %_5 = shl i32 %72, -1
  %_6 = sub i32 0, %72
  %gen7 = add i32 %_6, -1
  %73 = add nsw i32 %72, -1, !dbg !4727
  store i32 %73, i32* %14, align 4, !dbg !4727
  %74 = icmp ne i32 %72, 0, !dbg !4726
  br label %originalBB1

originalBB11alteredBB:                            ; preds = %originalBB11, %50
  %75 = load i32, i32* %15, align 4, !dbg !4734
  br label %originalBB11
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @rpl_mbrtowc(i32*, i8*, i64, %struct.__mbstate_t*) #4 !dbg !4742 {
  %5 = load i32, i32* @x.83
  %6 = load i32, i32* @y.84
  %7 = sub i32 %5, 1
  %8 = mul i32 %5, %7
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %6, 10
  %12 = or i1 %10, %11
  br i1 %12, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %4, %originalBBalteredBB
  %13 = alloca i64, align 8
  %14 = alloca i32*, align 8
  %15 = alloca i8*, align 8
  %16 = alloca i64, align 8
  %17 = alloca %struct.__mbstate_t*, align 8
  %18 = alloca i64, align 8
  %19 = alloca i32, align 4
  %20 = alloca i8, align 1
  store i32* %0, i32** %14, align 8
  call void @llvm.dbg.declare(metadata i32** %14, metadata !4758, metadata !DIExpression()), !dbg !4759
  store i8* %1, i8** %15, align 8
  call void @llvm.dbg.declare(metadata i8** %15, metadata !4760, metadata !DIExpression()), !dbg !4761
  store i64 %2, i64* %16, align 8
  call void @llvm.dbg.declare(metadata i64* %16, metadata !4762, metadata !DIExpression()), !dbg !4763
  store %struct.__mbstate_t* %3, %struct.__mbstate_t** %17, align 8
  call void @llvm.dbg.declare(metadata %struct.__mbstate_t** %17, metadata !4764, metadata !DIExpression()), !dbg !4765
  call void @llvm.dbg.declare(metadata i64* %18, metadata !4766, metadata !DIExpression()), !dbg !4767
  call void @llvm.dbg.declare(metadata i32* %19, metadata !4768, metadata !DIExpression()), !dbg !4769
  %21 = load i32*, i32** %14, align 8, !dbg !4770
  %22 = icmp ne i32* %21, null, !dbg !4770
  %23 = load i32, i32* @x.83
  %24 = load i32, i32* @y.84
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %22, label %48, label %31, !dbg !4772

31:                                               ; preds = %originalBBpart2
  %32 = load i32, i32* @x.83
  %33 = load i32, i32* @y.84
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %31, %originalBB1alteredBB
  store i32* %19, i32** %14, align 8, !dbg !4773
  %40 = load i32, i32* @x.83
  %41 = load i32, i32* @y.84
  %42 = sub i32 %40, 1
  %43 = mul i32 %40, %42
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %45, %46
  br i1 %47, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %48, !dbg !4774

48:                                               ; preds = %originalBBpart24, %originalBBpart2
  %49 = load i32, i32* @x.83
  %50 = load i32, i32* @y.84
  %51 = sub i32 %49, 1
  %52 = mul i32 %49, %51
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %50, 10
  %56 = or i1 %54, %55
  br i1 %56, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %48, %originalBB6alteredBB
  %57 = load i32*, i32** %14, align 8, !dbg !4775
  %58 = load i8*, i8** %15, align 8, !dbg !4776
  %59 = load i64, i64* %16, align 8, !dbg !4777
  %60 = load %struct.__mbstate_t*, %struct.__mbstate_t** %17, align 8, !dbg !4778
  %61 = call i64 @mbrtowc(i32* %57, i8* %58, i64 %59, %struct.__mbstate_t* %60) #10, !dbg !4779
  store i64 %61, i64* %18, align 8, !dbg !4780
  %62 = load i64, i64* %18, align 8, !dbg !4781
  %63 = icmp ule i64 -2, %62, !dbg !4783
  %64 = load i32, i32* @x.83
  %65 = load i32, i32* @y.84
  %66 = sub i32 %64, 1
  %67 = mul i32 %64, %66
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %65, 10
  %71 = or i1 %69, %70
  br i1 %71, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %63, label %72, label %115, !dbg !4784

72:                                               ; preds = %originalBBpart28
  %73 = load i32, i32* @x.83
  %74 = load i32, i32* @y.84
  %75 = sub i32 %73, 1
  %76 = mul i32 %73, %75
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %74, 10
  %80 = or i1 %78, %79
  br i1 %80, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %72, %originalBB10alteredBB
  %81 = load i64, i64* %16, align 8, !dbg !4785
  %82 = icmp ne i64 %81, 0, !dbg !4786
  %83 = load i32, i32* @x.83
  %84 = load i32, i32* @y.84
  %85 = sub i32 %83, 1
  %86 = mul i32 %83, %85
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %84, 10
  %90 = or i1 %88, %89
  br i1 %90, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %82, label %91, label %115, !dbg !4787

91:                                               ; preds = %originalBBpart212
  %92 = load i32, i32* @x.83
  %93 = load i32, i32* @y.84
  %94 = sub i32 %92, 1
  %95 = mul i32 %92, %94
  %96 = urem i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %93, 10
  %99 = or i1 %97, %98
  br i1 %99, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %91, %originalBB14alteredBB
  %100 = call zeroext i1 @hard_locale(i32 0), !dbg !4788
  %101 = load i32, i32* @x.83
  %102 = load i32, i32* @y.84
  %103 = sub i32 %101, 1
  %104 = mul i32 %101, %103
  %105 = urem i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %102, 10
  %108 = or i1 %106, %107
  br i1 %108, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %100, label %115, label %109, !dbg !4789

109:                                              ; preds = %originalBBpart216
  call void @llvm.dbg.declare(metadata i8* %20, metadata !4790, metadata !DIExpression()), !dbg !4792
  %110 = load i8*, i8** %15, align 8, !dbg !4793
  %111 = load i8, i8* %110, align 1, !dbg !4794
  store i8 %111, i8* %20, align 1, !dbg !4792
  %112 = load i8, i8* %20, align 1, !dbg !4795
  %113 = zext i8 %112 to i32, !dbg !4795
  %114 = load i32*, i32** %14, align 8, !dbg !4796
  store i32 %113, i32* %114, align 4, !dbg !4797
  store i64 1, i64* %13, align 8, !dbg !4798
  br label %133, !dbg !4798

115:                                              ; preds = %originalBBpart216, %originalBBpart212, %originalBBpart28
  %116 = load i32, i32* @x.83
  %117 = load i32, i32* @y.84
  %118 = sub i32 %116, 1
  %119 = mul i32 %116, %118
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %117, 10
  %123 = or i1 %121, %122
  br i1 %123, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %115, %originalBB18alteredBB
  %124 = load i64, i64* %18, align 8, !dbg !4799
  store i64 %124, i64* %13, align 8, !dbg !4800
  %125 = load i32, i32* @x.83
  %126 = load i32, i32* @y.84
  %127 = sub i32 %125, 1
  %128 = mul i32 %125, %127
  %129 = urem i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = icmp slt i32 %126, 10
  %132 = or i1 %130, %131
  br i1 %132, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %133, !dbg !4800

133:                                              ; preds = %originalBBpart220, %109
  %134 = load i32, i32* @x.83
  %135 = load i32, i32* @y.84
  %136 = sub i32 %134, 1
  %137 = mul i32 %134, %136
  %138 = urem i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = icmp slt i32 %135, 10
  %141 = or i1 %139, %140
  br i1 %141, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %133, %originalBB22alteredBB
  %142 = load i64, i64* %13, align 8, !dbg !4801
  %143 = load i32, i32* @x.83
  %144 = load i32, i32* @y.84
  %145 = sub i32 %143, 1
  %146 = mul i32 %143, %145
  %147 = urem i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = icmp slt i32 %144, 10
  %150 = or i1 %148, %149
  br i1 %150, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  ret i64 %142, !dbg !4801

originalBBalteredBB:                              ; preds = %originalBB, %4
  %151 = alloca i64, align 8
  %152 = alloca i32*, align 8
  %153 = alloca i8*, align 8
  %154 = alloca i64, align 8
  %155 = alloca %struct.__mbstate_t*, align 8
  %156 = alloca i64, align 8
  %157 = alloca i32, align 4
  %158 = alloca i8, align 1
  store i32* %0, i32** %152, align 8
  call void @llvm.dbg.declare(metadata i32** %152, metadata !4802, metadata !DIExpression()), !dbg !4759
  store i8* %1, i8** %153, align 8
  call void @llvm.dbg.declare(metadata i8** %153, metadata !4818, metadata !DIExpression()), !dbg !4761
  store i64 %2, i64* %154, align 8
  call void @llvm.dbg.declare(metadata i64* %154, metadata !4819, metadata !DIExpression()), !dbg !4763
  store %struct.__mbstate_t* %3, %struct.__mbstate_t** %155, align 8
  call void @llvm.dbg.declare(metadata %struct.__mbstate_t** %155, metadata !4820, metadata !DIExpression()), !dbg !4765
  call void @llvm.dbg.declare(metadata i64* %156, metadata !4821, metadata !DIExpression()), !dbg !4767
  call void @llvm.dbg.declare(metadata i32* %157, metadata !4822, metadata !DIExpression()), !dbg !4769
  %159 = load i32*, i32** %152, align 8, !dbg !4770
  %160 = icmp ne i32* %159, null, !dbg !4770
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %31
  store i32* %19, i32** %14, align 8, !dbg !4773
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %48
  %161 = load i32*, i32** %14, align 8, !dbg !4775
  %162 = load i8*, i8** %15, align 8, !dbg !4776
  %163 = load i64, i64* %16, align 8, !dbg !4777
  %164 = load %struct.__mbstate_t*, %struct.__mbstate_t** %17, align 8, !dbg !4778
  %165 = call i64 @mbrtowc(i32* %161, i8* %162, i64 %163, %struct.__mbstate_t* %164) #10, !dbg !4779
  store i64 %165, i64* %18, align 8, !dbg !4780
  %166 = load i64, i64* %18, align 8, !dbg !4781
  %167 = icmp ule i64 -2, %166, !dbg !4783
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %72
  %168 = load i64, i64* %16, align 8, !dbg !4785
  %169 = icmp ne i64 %168, 0, !dbg !4786
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %91
  %170 = call zeroext i1 @hard_locale(i32 0), !dbg !4788
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %115
  %171 = load i64, i64* %18, align 8, !dbg !4799
  store i64 %171, i64* %13, align 8, !dbg !4800
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %133
  %172 = load i64, i64* %13, align 8, !dbg !4801
  br label %originalBB22
}

; Function Attrs: nounwind
declare dso_local i64 @mbrtowc(i32*, i8*, i64, %struct.__mbstate_t*) #2

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @c_strcasecmp(i8*, i8*) #11 !dbg !4823 {
  %3 = load i32, i32* @x.85
  %4 = load i32, i32* @y.86
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca i32, align 4
  %12 = alloca i8*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i8*, align 8
  %16 = alloca i8, align 1
  %17 = alloca i8, align 1
  store i8* %0, i8** %12, align 8
  call void @llvm.dbg.declare(metadata i8** %12, metadata !4827, metadata !DIExpression()), !dbg !4828
  store i8* %1, i8** %13, align 8
  call void @llvm.dbg.declare(metadata i8** %13, metadata !4829, metadata !DIExpression()), !dbg !4830
  call void @llvm.dbg.declare(metadata i8** %14, metadata !4831, metadata !DIExpression()), !dbg !4832
  %18 = load i8*, i8** %12, align 8, !dbg !4833
  store i8* %18, i8** %14, align 8, !dbg !4832
  call void @llvm.dbg.declare(metadata i8** %15, metadata !4834, metadata !DIExpression()), !dbg !4835
  %19 = load i8*, i8** %13, align 8, !dbg !4836
  store i8* %19, i8** %15, align 8, !dbg !4835
  call void @llvm.dbg.declare(metadata i8* %16, metadata !4837, metadata !DIExpression()), !dbg !4838
  call void @llvm.dbg.declare(metadata i8* %17, metadata !4839, metadata !DIExpression()), !dbg !4840
  %20 = load i8*, i8** %14, align 8, !dbg !4841
  %21 = load i8*, i8** %15, align 8, !dbg !4843
  %22 = icmp eq i8* %20, %21, !dbg !4844
  %23 = load i32, i32* @x.85
  %24 = load i32, i32* @y.86
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %22, label %31, label %48, !dbg !4845

31:                                               ; preds = %originalBBpart2
  %32 = load i32, i32* @x.85
  %33 = load i32, i32* @y.86
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %31, %originalBB1alteredBB
  store i32 0, i32* %11, align 4, !dbg !4846
  %40 = load i32, i32* @x.85
  %41 = load i32, i32* @y.86
  %42 = sub i32 %40, 1
  %43 = mul i32 %40, %42
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %45, %46
  br i1 %47, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %161, !dbg !4846

48:                                               ; preds = %originalBBpart2
  br label %49, !dbg !4847

49:                                               ; preds = %originalBBpart220, %48
  %50 = load i32, i32* @x.85
  %51 = load i32, i32* @y.86
  %52 = sub i32 %50, 1
  %53 = mul i32 %50, %52
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %51, 10
  %57 = or i1 %55, %56
  br i1 %57, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %49, %originalBB6alteredBB
  %58 = load i8*, i8** %14, align 8, !dbg !4848
  %59 = load i8, i8* %58, align 1, !dbg !4850
  %60 = zext i8 %59 to i32, !dbg !4850
  %61 = call i32 @c_tolower(i32 %60), !dbg !4851
  %62 = trunc i32 %61 to i8, !dbg !4851
  store i8 %62, i8* %16, align 1, !dbg !4852
  %63 = load i8*, i8** %15, align 8, !dbg !4853
  %64 = load i8, i8* %63, align 1, !dbg !4854
  %65 = zext i8 %64 to i32, !dbg !4854
  %66 = call i32 @c_tolower(i32 %65), !dbg !4855
  %67 = trunc i32 %66 to i8, !dbg !4855
  store i8 %67, i8* %17, align 1, !dbg !4856
  %68 = load i8, i8* %16, align 1, !dbg !4857
  %69 = zext i8 %68 to i32, !dbg !4857
  %70 = icmp eq i32 %69, 0, !dbg !4859
  %71 = load i32, i32* @x.85
  %72 = load i32, i32* @y.86
  %73 = sub i32 %71, 1
  %74 = mul i32 %71, %73
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %72, 10
  %78 = or i1 %76, %77
  br i1 %78, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %70, label %79, label %96, !dbg !4860

79:                                               ; preds = %originalBBpart28
  %80 = load i32, i32* @x.85
  %81 = load i32, i32* @y.86
  %82 = sub i32 %80, 1
  %83 = mul i32 %80, %82
  %84 = urem i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %81, 10
  %87 = or i1 %85, %86
  br i1 %87, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %79, %originalBB10alteredBB
  %88 = load i32, i32* @x.85
  %89 = load i32, i32* @y.86
  %90 = sub i32 %88, 1
  %91 = mul i32 %88, %90
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %89, 10
  %95 = or i1 %93, %94
  br i1 %95, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %139, !dbg !4861

96:                                               ; preds = %originalBBpart28
  %97 = load i32, i32* @x.85
  %98 = load i32, i32* @y.86
  %99 = sub i32 %97, 1
  %100 = mul i32 %97, %99
  %101 = urem i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %98, 10
  %104 = or i1 %102, %103
  br i1 %104, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %96, %originalBB14alteredBB
  %105 = load i8*, i8** %14, align 8, !dbg !4862
  %106 = getelementptr inbounds i8, i8* %105, i32 1, !dbg !4862
  store i8* %106, i8** %14, align 8, !dbg !4862
  %107 = load i8*, i8** %15, align 8, !dbg !4863
  %108 = getelementptr inbounds i8, i8* %107, i32 1, !dbg !4863
  store i8* %108, i8** %15, align 8, !dbg !4863
  %109 = load i32, i32* @x.85
  %110 = load i32, i32* @y.86
  %111 = sub i32 %109, 1
  %112 = mul i32 %109, %111
  %113 = urem i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = icmp slt i32 %110, 10
  %116 = or i1 %114, %115
  br i1 %116, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %117, !dbg !4864

117:                                              ; preds = %originalBBpart216
  %118 = load i32, i32* @x.85
  %119 = load i32, i32* @y.86
  %120 = sub i32 %118, 1
  %121 = mul i32 %118, %120
  %122 = urem i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = icmp slt i32 %119, 10
  %125 = or i1 %123, %124
  br i1 %125, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %117, %originalBB18alteredBB
  %126 = load i8, i8* %16, align 1, !dbg !4865
  %127 = zext i8 %126 to i32, !dbg !4865
  %128 = load i8, i8* %17, align 1, !dbg !4866
  %129 = zext i8 %128 to i32, !dbg !4866
  %130 = icmp eq i32 %127, %129, !dbg !4867
  %131 = load i32, i32* @x.85
  %132 = load i32, i32* @y.86
  %133 = sub i32 %131, 1
  %134 = mul i32 %131, %133
  %135 = urem i32 %134, 2
  %136 = icmp eq i32 %135, 0
  %137 = icmp slt i32 %132, 10
  %138 = or i1 %136, %137
  br i1 %138, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br i1 %130, label %49, label %139, !dbg !4864, !llvm.loop !4868

139:                                              ; preds = %originalBBpart220, %originalBBpart212
  %140 = load i32, i32* @x.85
  %141 = load i32, i32* @y.86
  %142 = sub i32 %140, 1
  %143 = mul i32 %140, %142
  %144 = urem i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = icmp slt i32 %141, 10
  %147 = or i1 %145, %146
  br i1 %147, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %139, %originalBB22alteredBB
  %148 = load i8, i8* %16, align 1, !dbg !4870
  %149 = zext i8 %148 to i32, !dbg !4870
  %150 = load i8, i8* %17, align 1, !dbg !4872
  %151 = zext i8 %150 to i32, !dbg !4872
  %152 = sub nsw i32 %149, %151, !dbg !4873
  store i32 %152, i32* %11, align 4, !dbg !4874
  %153 = load i32, i32* @x.85
  %154 = load i32, i32* @y.86
  %155 = sub i32 %153, 1
  %156 = mul i32 %153, %155
  %157 = urem i32 %156, 2
  %158 = icmp eq i32 %157, 0
  %159 = icmp slt i32 %154, 10
  %160 = or i1 %158, %159
  br i1 %160, label %originalBBpart228, label %originalBB22alteredBB

originalBBpart228:                                ; preds = %originalBB22
  br label %161, !dbg !4874

161:                                              ; preds = %originalBBpart228, %originalBBpart24
  %162 = load i32, i32* %11, align 4, !dbg !4875
  ret i32 %162, !dbg !4875

originalBBalteredBB:                              ; preds = %originalBB, %2
  %163 = alloca i32, align 4
  %164 = alloca i8*, align 8
  %165 = alloca i8*, align 8
  %166 = alloca i8*, align 8
  %167 = alloca i8*, align 8
  %168 = alloca i8, align 1
  %169 = alloca i8, align 1
  store i8* %0, i8** %164, align 8
  call void @llvm.dbg.declare(metadata i8** %164, metadata !4876, metadata !DIExpression()), !dbg !4828
  store i8* %1, i8** %165, align 8
  call void @llvm.dbg.declare(metadata i8** %165, metadata !4879, metadata !DIExpression()), !dbg !4830
  call void @llvm.dbg.declare(metadata i8** %166, metadata !4880, metadata !DIExpression()), !dbg !4832
  %170 = load i8*, i8** %164, align 8, !dbg !4833
  store i8* %170, i8** %166, align 8, !dbg !4832
  call void @llvm.dbg.declare(metadata i8** %167, metadata !4881, metadata !DIExpression()), !dbg !4835
  %171 = load i8*, i8** %165, align 8, !dbg !4836
  store i8* %171, i8** %167, align 8, !dbg !4835
  call void @llvm.dbg.declare(metadata i8* %168, metadata !4882, metadata !DIExpression()), !dbg !4838
  call void @llvm.dbg.declare(metadata i8* %169, metadata !4883, metadata !DIExpression()), !dbg !4840
  %172 = load i8*, i8** %166, align 8, !dbg !4841
  %173 = load i8*, i8** %167, align 8, !dbg !4843
  %174 = icmp eq i8* %172, %173, !dbg !4844
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %31
  store i32 0, i32* %11, align 4, !dbg !4846
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %49
  %175 = load i8*, i8** %14, align 8, !dbg !4848
  %176 = load i8, i8* %175, align 1, !dbg !4850
  %177 = zext i8 %176 to i32, !dbg !4850
  %178 = call i32 @c_tolower(i32 %177), !dbg !4851
  %179 = trunc i32 %178 to i8, !dbg !4851
  store i8 %179, i8* %16, align 1, !dbg !4852
  %180 = load i8*, i8** %15, align 8, !dbg !4853
  %181 = load i8, i8* %180, align 1, !dbg !4854
  %182 = zext i8 %181 to i32, !dbg !4854
  %183 = call i32 @c_tolower(i32 %182), !dbg !4855
  %184 = trunc i32 %183 to i8, !dbg !4855
  store i8 %184, i8* %17, align 1, !dbg !4856
  %185 = load i8, i8* %16, align 1, !dbg !4857
  %186 = zext i8 %185 to i32, !dbg !4857
  %187 = icmp eq i32 %186, 0, !dbg !4859
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %79
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %96
  %188 = load i8*, i8** %14, align 8, !dbg !4862
  %189 = getelementptr inbounds i8, i8* %188, i32 1, !dbg !4862
  store i8* %189, i8** %14, align 8, !dbg !4862
  %190 = load i8*, i8** %15, align 8, !dbg !4863
  %191 = getelementptr inbounds i8, i8* %190, i32 1, !dbg !4863
  store i8* %191, i8** %15, align 8, !dbg !4863
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %117
  %192 = load i8, i8* %16, align 1, !dbg !4865
  %193 = zext i8 %192 to i32, !dbg !4865
  %194 = load i8, i8* %17, align 1, !dbg !4866
  %195 = zext i8 %194 to i32, !dbg !4866
  %196 = icmp eq i32 %193, %195, !dbg !4867
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %139
  %197 = load i8, i8* %16, align 1, !dbg !4870
  %198 = zext i8 %197 to i32, !dbg !4870
  %199 = load i8, i8* %17, align 1, !dbg !4872
  %200 = zext i8 %199 to i32, !dbg !4872
  %_ = sub i32 0, %198
  %gen = add i32 %_, %200
  %_23 = sub i32 %198, %200
  %gen24 = mul i32 %_23, %200
  %_25 = sub i32 0, %198
  %gen26 = add i32 %_25, %200
  %201 = sub nsw i32 %198, %200, !dbg !4873
  store i32 %201, i32* %11, align 4, !dbg !4874
  br label %originalBB22
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @close_stream(%struct._IO_FILE*) #4 !dbg !4884 {
  %2 = load i32, i32* @x.87
  %3 = load i32, i32* @y.88
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i32, align 4
  %11 = alloca %struct._IO_FILE*, align 8
  %12 = alloca i8, align 1
  %13 = alloca i8, align 1
  %14 = alloca i8, align 1
  store %struct._IO_FILE* %0, %struct._IO_FILE** %11, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %11, metadata !4922, metadata !DIExpression()), !dbg !4923
  call void @llvm.dbg.declare(metadata i8* %12, metadata !4924, metadata !DIExpression()), !dbg !4926
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !4927
  %16 = call i64 @__fpending(%struct._IO_FILE* %15) #10, !dbg !4928
  %17 = icmp ne i64 %16, 0, !dbg !4929
  %18 = zext i1 %17 to i8, !dbg !4926
  store i8 %18, i8* %12, align 1, !dbg !4926
  call void @llvm.dbg.declare(metadata i8* %13, metadata !4930, metadata !DIExpression()), !dbg !4931
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !4932
  %20 = call i32 @ferror_unlocked(%struct._IO_FILE* %19) #10, !dbg !4932
  %21 = icmp ne i32 %20, 0, !dbg !4933
  %22 = zext i1 %21 to i8, !dbg !4931
  store i8 %22, i8* %13, align 1, !dbg !4931
  call void @llvm.dbg.declare(metadata i8* %14, metadata !4934, metadata !DIExpression()), !dbg !4935
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !4936
  %24 = call i32 @rpl_fclose(%struct._IO_FILE* %23), !dbg !4937
  %25 = icmp ne i32 %24, 0, !dbg !4938
  %26 = zext i1 %25 to i8, !dbg !4935
  store i8 %26, i8* %14, align 1, !dbg !4935
  %27 = load i8, i8* %13, align 1, !dbg !4939
  %28 = trunc i8 %27 to i1, !dbg !4939
  %29 = load i32, i32* @x.87
  %30 = load i32, i32* @y.88
  %31 = sub i32 %29, 1
  %32 = mul i32 %29, %31
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %34, %35
  br i1 %36, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %28, label %95, label %37, !dbg !4941

37:                                               ; preds = %originalBBpart2
  %38 = load i32, i32* @x.87
  %39 = load i32, i32* @y.88
  %40 = sub i32 %38, 1
  %41 = mul i32 %38, %40
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %43, %44
  br i1 %45, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %37, %originalBB1alteredBB
  %46 = load i8, i8* %14, align 1, !dbg !4942
  %47 = trunc i8 %46 to i1, !dbg !4942
  %48 = load i32, i32* @x.87
  %49 = load i32, i32* @y.88
  %50 = sub i32 %48, 1
  %51 = mul i32 %48, %50
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %53, %54
  br i1 %55, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %47, label %56, label %133, !dbg !4943

56:                                               ; preds = %originalBBpart24
  %57 = load i32, i32* @x.87
  %58 = load i32, i32* @y.88
  %59 = sub i32 %57, 1
  %60 = mul i32 %57, %59
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %58, 10
  %64 = or i1 %62, %63
  br i1 %64, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %56, %originalBB6alteredBB
  %65 = load i8, i8* %12, align 1, !dbg !4944
  %66 = trunc i8 %65 to i1, !dbg !4944
  %67 = load i32, i32* @x.87
  %68 = load i32, i32* @y.88
  %69 = sub i32 %67, 1
  %70 = mul i32 %67, %69
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %68, 10
  %74 = or i1 %72, %73
  br i1 %74, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %66, label %95, label %75, !dbg !4945

75:                                               ; preds = %originalBBpart28
  %76 = load i32, i32* @x.87
  %77 = load i32, i32* @y.88
  %78 = sub i32 %76, 1
  %79 = mul i32 %76, %78
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %77, 10
  %83 = or i1 %81, %82
  br i1 %83, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %75, %originalBB10alteredBB
  %84 = call i32* @__errno_location() #15, !dbg !4946
  %85 = load i32, i32* %84, align 4, !dbg !4946
  %86 = icmp ne i32 %85, 9, !dbg !4947
  %87 = load i32, i32* @x.87
  %88 = load i32, i32* @y.88
  %89 = sub i32 %87, 1
  %90 = mul i32 %87, %89
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %88, 10
  %94 = or i1 %92, %93
  br i1 %94, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %86, label %95, label %133, !dbg !4948

95:                                               ; preds = %originalBBpart212, %originalBBpart28, %originalBBpart2
  %96 = load i32, i32* @x.87
  %97 = load i32, i32* @y.88
  %98 = sub i32 %96, 1
  %99 = mul i32 %96, %98
  %100 = urem i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = icmp slt i32 %97, 10
  %103 = or i1 %101, %102
  br i1 %103, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %95, %originalBB14alteredBB
  %104 = load i8, i8* %14, align 1, !dbg !4949
  %105 = trunc i8 %104 to i1, !dbg !4949
  %106 = load i32, i32* @x.87
  %107 = load i32, i32* @y.88
  %108 = sub i32 %106, 1
  %109 = mul i32 %106, %108
  %110 = urem i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %107, 10
  %113 = or i1 %111, %112
  br i1 %113, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %105, label %116, label %114, !dbg !4952

114:                                              ; preds = %originalBBpart216
  %115 = call i32* @__errno_location() #15, !dbg !4953
  store i32 0, i32* %115, align 4, !dbg !4954
  br label %116, !dbg !4953

116:                                              ; preds = %114, %originalBBpart216
  %117 = load i32, i32* @x.87
  %118 = load i32, i32* @y.88
  %119 = sub i32 %117, 1
  %120 = mul i32 %117, %119
  %121 = urem i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = icmp slt i32 %118, 10
  %124 = or i1 %122, %123
  br i1 %124, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %116, %originalBB18alteredBB
  store i32 -1, i32* %10, align 4, !dbg !4955
  %125 = load i32, i32* @x.87
  %126 = load i32, i32* @y.88
  %127 = sub i32 %125, 1
  %128 = mul i32 %125, %127
  %129 = urem i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = icmp slt i32 %126, 10
  %132 = or i1 %130, %131
  br i1 %132, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %150, !dbg !4955

133:                                              ; preds = %originalBBpart212, %originalBBpart24
  %134 = load i32, i32* @x.87
  %135 = load i32, i32* @y.88
  %136 = sub i32 %134, 1
  %137 = mul i32 %134, %136
  %138 = urem i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = icmp slt i32 %135, 10
  %141 = or i1 %139, %140
  br i1 %141, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %133, %originalBB22alteredBB
  store i32 0, i32* %10, align 4, !dbg !4956
  %142 = load i32, i32* @x.87
  %143 = load i32, i32* @y.88
  %144 = sub i32 %142, 1
  %145 = mul i32 %142, %144
  %146 = urem i32 %145, 2
  %147 = icmp eq i32 %146, 0
  %148 = icmp slt i32 %143, 10
  %149 = or i1 %147, %148
  br i1 %149, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br label %150, !dbg !4956

150:                                              ; preds = %originalBBpart224, %originalBBpart220
  %151 = load i32, i32* @x.87
  %152 = load i32, i32* @y.88
  %153 = sub i32 %151, 1
  %154 = mul i32 %151, %153
  %155 = urem i32 %154, 2
  %156 = icmp eq i32 %155, 0
  %157 = icmp slt i32 %152, 10
  %158 = or i1 %156, %157
  br i1 %158, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %150, %originalBB26alteredBB
  %159 = load i32, i32* %10, align 4, !dbg !4957
  %160 = load i32, i32* @x.87
  %161 = load i32, i32* @y.88
  %162 = sub i32 %160, 1
  %163 = mul i32 %160, %162
  %164 = urem i32 %163, 2
  %165 = icmp eq i32 %164, 0
  %166 = icmp slt i32 %161, 10
  %167 = or i1 %165, %166
  br i1 %167, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  ret i32 %159, !dbg !4957

originalBBalteredBB:                              ; preds = %originalBB, %1
  %168 = alloca i32, align 4
  %169 = alloca %struct._IO_FILE*, align 8
  %170 = alloca i8, align 1
  %171 = alloca i8, align 1
  %172 = alloca i8, align 1
  store %struct._IO_FILE* %0, %struct._IO_FILE** %169, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %169, metadata !4958, metadata !DIExpression()), !dbg !4923
  call void @llvm.dbg.declare(metadata i8* %170, metadata !4997, metadata !DIExpression()), !dbg !4926
  %173 = load %struct._IO_FILE*, %struct._IO_FILE** %169, align 8, !dbg !4927
  %174 = call i64 @__fpending(%struct._IO_FILE* %173) #10, !dbg !4928
  %175 = icmp ne i64 %174, 0, !dbg !4929
  %176 = zext i1 %175 to i8, !dbg !4926
  store i8 %176, i8* %170, align 1, !dbg !4926
  call void @llvm.dbg.declare(metadata i8* %171, metadata !4998, metadata !DIExpression()), !dbg !4931
  %177 = load %struct._IO_FILE*, %struct._IO_FILE** %169, align 8, !dbg !4932
  %178 = call i32 @ferror_unlocked(%struct._IO_FILE* %177) #10, !dbg !4932
  %179 = icmp ne i32 %178, 0, !dbg !4933
  %180 = zext i1 %179 to i8, !dbg !4931
  store i8 %180, i8* %171, align 1, !dbg !4931
  call void @llvm.dbg.declare(metadata i8* %172, metadata !4999, metadata !DIExpression()), !dbg !4935
  %181 = load %struct._IO_FILE*, %struct._IO_FILE** %169, align 8, !dbg !4936
  %182 = call i32 @rpl_fclose(%struct._IO_FILE* %181), !dbg !4937
  %183 = icmp ne i32 %182, 0, !dbg !4938
  %184 = zext i1 %183 to i8, !dbg !4935
  store i8 %184, i8* %172, align 1, !dbg !4935
  %185 = load i8, i8* %171, align 1, !dbg !4939
  %186 = trunc i8 %185 to i1, !dbg !4939
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %37
  %187 = load i8, i8* %14, align 1, !dbg !4942
  %188 = trunc i8 %187 to i1, !dbg !4942
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %56
  %189 = load i8, i8* %12, align 1, !dbg !4944
  %190 = trunc i8 %189 to i1, !dbg !4944
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %75
  %191 = call i32* @__errno_location() #15, !dbg !4946
  %192 = load i32, i32* %191, align 4, !dbg !4946
  %193 = icmp ne i32 %192, 9, !dbg !4947
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %95
  %194 = load i8, i8* %14, align 1, !dbg !4949
  %195 = trunc i8 %194 to i1, !dbg !4949
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %116
  store i32 -1, i32* %10, align 4, !dbg !4955
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %133
  store i32 0, i32* %10, align 4, !dbg !4956
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %150
  %196 = load i32, i32* %10, align 4, !dbg !4957
  br label %originalBB26
}

; Function Attrs: nounwind
declare dso_local i64 @__fpending(%struct._IO_FILE*) #2

; Function Attrs: nounwind
declare dso_local i32 @ferror_unlocked(%struct._IO_FILE*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @hard_locale(i32) #4 !dbg !5000 {
  %2 = load i32, i32* @x.89
  %3 = load i32, i32* @y.90
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i1, align 1
  %11 = alloca i32, align 4
  %12 = alloca [257 x i8], align 16
  store i32 %0, i32* %11, align 4
  call void @llvm.dbg.declare(metadata i32* %11, metadata !5004, metadata !DIExpression()), !dbg !5005
  call void @llvm.dbg.declare(metadata [257 x i8]* %12, metadata !5006, metadata !DIExpression()), !dbg !5010
  %13 = load i32, i32* %11, align 4, !dbg !5011
  %14 = getelementptr inbounds [257 x i8], [257 x i8]* %12, i64 0, i64 0, !dbg !5013
  %15 = call i32 @setlocale_null_r(i32 %13, i8* %14, i64 257), !dbg !5014
  %16 = icmp ne i32 %15, 0, !dbg !5014
  %17 = load i32, i32* @x.89
  %18 = load i32, i32* @y.90
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %16, label %25, label %42, !dbg !5015

25:                                               ; preds = %originalBBpart2
  %26 = load i32, i32* @x.89
  %27 = load i32, i32* @y.90
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %25, %originalBB1alteredBB
  store i1 false, i1* %10, align 1, !dbg !5016
  %34 = load i32, i32* @x.89
  %35 = load i32, i32* @y.90
  %36 = sub i32 %34, 1
  %37 = mul i32 %34, %36
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %39, %40
  br i1 %41, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %101, !dbg !5016

42:                                               ; preds = %originalBBpart2
  %43 = load i32, i32* @x.89
  %44 = load i32, i32* @y.90
  %45 = sub i32 %43, 1
  %46 = mul i32 %43, %45
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %48, %49
  br i1 %50, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %42, %originalBB6alteredBB
  %51 = getelementptr inbounds [257 x i8], [257 x i8]* %12, i64 0, i64 0, !dbg !5017
  %52 = call i32 @strcmp(i8* %51, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.152, i64 0, i64 0)) #13, !dbg !5018
  %53 = icmp eq i32 %52, 0, !dbg !5019
  %54 = load i32, i32* @x.89
  %55 = load i32, i32* @y.90
  %56 = sub i32 %54, 1
  %57 = mul i32 %54, %56
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %55, 10
  %61 = or i1 %59, %60
  br i1 %61, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %53, label %82, label %62, !dbg !5020

62:                                               ; preds = %originalBBpart28
  %63 = load i32, i32* @x.89
  %64 = load i32, i32* @y.90
  %65 = sub i32 %63, 1
  %66 = mul i32 %63, %65
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %64, 10
  %70 = or i1 %68, %69
  br i1 %70, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %62, %originalBB10alteredBB
  %71 = getelementptr inbounds [257 x i8], [257 x i8]* %12, i64 0, i64 0, !dbg !5021
  %72 = call i32 @strcmp(i8* %71, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.153, i64 0, i64 0)) #13, !dbg !5022
  %73 = icmp eq i32 %72, 0, !dbg !5023
  %74 = load i32, i32* @x.89
  %75 = load i32, i32* @y.90
  %76 = sub i32 %74, 1
  %77 = mul i32 %74, %76
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %75, 10
  %81 = or i1 %79, %80
  br i1 %81, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %82, !dbg !5020

82:                                               ; preds = %originalBBpart212, %originalBBpart28
  %83 = phi i1 [ true, %originalBBpart28 ], [ %73, %originalBBpart212 ]
  %84 = load i32, i32* @x.89
  %85 = load i32, i32* @y.90
  %86 = sub i32 %84, 1
  %87 = mul i32 %84, %86
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %85, 10
  %91 = or i1 %89, %90
  br i1 %91, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %82, %originalBB14alteredBB
  %92 = xor i1 %83, true, !dbg !5024
  store i1 %92, i1* %10, align 1, !dbg !5025
  %93 = load i32, i32* @x.89
  %94 = load i32, i32* @y.90
  %95 = sub i32 %93, 1
  %96 = mul i32 %93, %95
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %94, 10
  %100 = or i1 %98, %99
  br i1 %100, label %originalBBpart217, label %originalBB14alteredBB

originalBBpart217:                                ; preds = %originalBB14
  br label %101, !dbg !5025

101:                                              ; preds = %originalBBpart217, %originalBBpart24
  %102 = load i32, i32* @x.89
  %103 = load i32, i32* @y.90
  %104 = sub i32 %102, 1
  %105 = mul i32 %102, %104
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %103, 10
  %109 = or i1 %107, %108
  br i1 %109, label %originalBB19, label %originalBB19alteredBB

originalBB19:                                     ; preds = %101, %originalBB19alteredBB
  %110 = load i1, i1* %10, align 1, !dbg !5026
  %111 = load i32, i32* @x.89
  %112 = load i32, i32* @y.90
  %113 = sub i32 %111, 1
  %114 = mul i32 %111, %113
  %115 = urem i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %112, 10
  %118 = or i1 %116, %117
  br i1 %118, label %originalBBpart221, label %originalBB19alteredBB

originalBBpart221:                                ; preds = %originalBB19
  ret i1 %110, !dbg !5026

originalBBalteredBB:                              ; preds = %originalBB, %1
  %119 = alloca i1, align 1
  %120 = alloca i32, align 4
  %121 = alloca [257 x i8], align 16
  store i32 %0, i32* %120, align 4
  call void @llvm.dbg.declare(metadata i32* %120, metadata !5027, metadata !DIExpression()), !dbg !5005
  call void @llvm.dbg.declare(metadata [257 x i8]* %121, metadata !5030, metadata !DIExpression()), !dbg !5010
  %122 = load i32, i32* %120, align 4, !dbg !5011
  %123 = getelementptr inbounds [257 x i8], [257 x i8]* %121, i64 0, i64 0, !dbg !5013
  %124 = call i32 @setlocale_null_r(i32 %122, i8* %123, i64 257), !dbg !5014
  %125 = icmp ne i32 %124, 0, !dbg !5014
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %25
  store i1 false, i1* %10, align 1, !dbg !5016
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %42
  %126 = getelementptr inbounds [257 x i8], [257 x i8]* %12, i64 0, i64 0, !dbg !5017
  %127 = call i32 @strcmp(i8* %126, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.152, i64 0, i64 0)) #13, !dbg !5018
  %128 = icmp eq i32 %127, 0, !dbg !5019
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %62
  %129 = getelementptr inbounds [257 x i8], [257 x i8]* %12, i64 0, i64 0, !dbg !5021
  %130 = call i32 @strcmp(i8* %129, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.153, i64 0, i64 0)) #13, !dbg !5022
  %131 = icmp eq i32 %130, 0, !dbg !5023
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %82
  %_ = shl i1 %83, true
  %_15 = shl i1 %83, true
  %132 = xor i1 %83, true, !dbg !5024
  store i1 %132, i1* %10, align 1, !dbg !5025
  br label %originalBB14

originalBB19alteredBB:                            ; preds = %originalBB19, %101
  %133 = load i1, i1* %10, align 1, !dbg !5026
  br label %originalBB19
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @locale_charset() #4 !dbg !5031 {
  %1 = load i32, i32* @x.91
  %2 = load i32, i32* @y.92
  %3 = sub i32 %1, 1
  %4 = mul i32 %1, %3
  %5 = urem i32 %4, 2
  %6 = icmp eq i32 %5, 0
  %7 = icmp slt i32 %2, 10
  %8 = or i1 %6, %7
  br i1 %8, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %0, %originalBBalteredBB
  %9 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %9, metadata !5035, metadata !DIExpression()), !dbg !5036
  %10 = call i8* @nl_langinfo(i32 14) #10, !dbg !5037
  store i8* %10, i8** %9, align 8, !dbg !5038
  %11 = load i8*, i8** %9, align 8, !dbg !5039
  %12 = icmp eq i8* %11, null, !dbg !5041
  %13 = load i32, i32* @x.91
  %14 = load i32, i32* @y.92
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %12, label %21, label %38, !dbg !5042

21:                                               ; preds = %originalBBpart2
  %22 = load i32, i32* @x.91
  %23 = load i32, i32* @y.92
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %21, %originalBB1alteredBB
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.156, i64 0, i64 0), i8** %9, align 8, !dbg !5043
  %30 = load i32, i32* @x.91
  %31 = load i32, i32* @y.92
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %38, !dbg !5044

38:                                               ; preds = %originalBBpart24, %originalBBpart2
  %39 = load i32, i32* @x.91
  %40 = load i32, i32* @y.92
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %38, %originalBB6alteredBB
  %47 = load i8*, i8** %9, align 8, !dbg !5045
  %48 = getelementptr inbounds i8, i8* %47, i64 0, !dbg !5045
  %49 = load i8, i8* %48, align 1, !dbg !5045
  %50 = sext i8 %49 to i32, !dbg !5045
  %51 = icmp eq i32 %50, 0, !dbg !5049
  %52 = load i32, i32* @x.91
  %53 = load i32, i32* @y.92
  %54 = sub i32 %52, 1
  %55 = mul i32 %52, %54
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %53, 10
  %59 = or i1 %57, %58
  br i1 %59, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %51, label %60, label %77, !dbg !5050

60:                                               ; preds = %originalBBpart28
  %61 = load i32, i32* @x.91
  %62 = load i32, i32* @y.92
  %63 = sub i32 %61, 1
  %64 = mul i32 %61, %63
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %62, 10
  %68 = or i1 %66, %67
  br i1 %68, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %60, %originalBB10alteredBB
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.157, i64 0, i64 0), i8** %9, align 8, !dbg !5051
  %69 = load i32, i32* @x.91
  %70 = load i32, i32* @y.92
  %71 = sub i32 %69, 1
  %72 = mul i32 %69, %71
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %74, %75
  br i1 %76, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %77, !dbg !5052

77:                                               ; preds = %originalBBpart212, %originalBBpart28
  %78 = load i32, i32* @x.91
  %79 = load i32, i32* @y.92
  %80 = sub i32 %78, 1
  %81 = mul i32 %78, %80
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %79, 10
  %85 = or i1 %83, %84
  br i1 %85, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %77, %originalBB14alteredBB
  %86 = load i8*, i8** %9, align 8, !dbg !5053
  %87 = load i32, i32* @x.91
  %88 = load i32, i32* @y.92
  %89 = sub i32 %87, 1
  %90 = mul i32 %87, %89
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %88, 10
  %94 = or i1 %92, %93
  br i1 %94, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  ret i8* %86, !dbg !5054

originalBBalteredBB:                              ; preds = %originalBB, %0
  %95 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %95, metadata !5055, metadata !DIExpression()), !dbg !5036
  %96 = call i8* @nl_langinfo(i32 14) #10, !dbg !5037
  store i8* %96, i8** %95, align 8, !dbg !5038
  %97 = load i8*, i8** %95, align 8, !dbg !5039
  %98 = icmp eq i8* %97, null, !dbg !5041
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %21
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.156, i64 0, i64 0), i8** %9, align 8, !dbg !5043
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %38
  %99 = load i8*, i8** %9, align 8, !dbg !5045
  %100 = getelementptr inbounds i8, i8* %99, i64 0, !dbg !5045
  %101 = load i8, i8* %100, align 1, !dbg !5045
  %102 = sext i8 %101 to i32, !dbg !5045
  %103 = icmp eq i32 %102, 0, !dbg !5049
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %60
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.157, i64 0, i64 0), i8** %9, align 8, !dbg !5051
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %77
  %104 = load i8*, i8** %9, align 8, !dbg !5053
  br label %originalBB14
}

; Function Attrs: nounwind
declare dso_local i8* @nl_langinfo(i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @mgetgroups(i8*, i32, i32**) #4 !dbg !5058 {
  %4 = load i32, i32* @x.93
  %5 = load i32, i32* @y.94
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca i32, align 4
  %13 = alloca i8*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i32**, align 8
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32*, align 8
  %19 = alloca i32*, align 8
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32*, align 8
  %25 = alloca i32*, align 8
  store i8* %0, i8** %13, align 8
  call void @llvm.dbg.declare(metadata i8** %13, metadata !5060, metadata !DIExpression()), !dbg !5061
  store i32 %1, i32* %14, align 4
  call void @llvm.dbg.declare(metadata i32* %14, metadata !5062, metadata !DIExpression()), !dbg !5063
  store i32** %2, i32*** %15, align 8
  call void @llvm.dbg.declare(metadata i32*** %15, metadata !5064, metadata !DIExpression()), !dbg !5065
  call void @llvm.dbg.declare(metadata i32* %16, metadata !5066, metadata !DIExpression()), !dbg !5067
  call void @llvm.dbg.declare(metadata i32* %17, metadata !5068, metadata !DIExpression()), !dbg !5069
  call void @llvm.dbg.declare(metadata i32** %18, metadata !5070, metadata !DIExpression()), !dbg !5071
  %26 = load i8*, i8** %13, align 8, !dbg !5072
  %27 = icmp ne i8* %26, null, !dbg !5072
  %28 = load i32, i32* @x.93
  %29 = load i32, i32* @y.94
  %30 = sub i32 %28, 1
  %31 = mul i32 %28, %30
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %33, %34
  br i1 %35, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %27, label %36, label %257, !dbg !5074

36:                                               ; preds = %originalBBpart2
  %37 = load i32, i32* @x.93
  %38 = load i32, i32* @y.94
  %39 = sub i32 %37, 1
  %40 = mul i32 %37, %39
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %42, %43
  br i1 %44, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %36, %originalBB1alteredBB
  store i32 10, i32* %16, align 4, !dbg !5075
  %45 = load i32, i32* %16, align 4, !dbg !5077
  %46 = sext i32 %45 to i64, !dbg !5077
  %47 = call i32* @realloc_groupbuf(i32* null, i64 %46), !dbg !5078
  store i32* %47, i32** %18, align 8, !dbg !5079
  %48 = load i32*, i32** %18, align 8, !dbg !5080
  %49 = icmp eq i32* %48, null, !dbg !5082
  %50 = load i32, i32* @x.93
  %51 = load i32, i32* @y.94
  %52 = sub i32 %50, 1
  %53 = mul i32 %50, %52
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %51, 10
  %57 = or i1 %55, %56
  br i1 %57, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %49, label %58, label %75, !dbg !5083

58:                                               ; preds = %originalBBpart24
  %59 = load i32, i32* @x.93
  %60 = load i32, i32* @y.94
  %61 = sub i32 %59, 1
  %62 = mul i32 %59, %61
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %60, 10
  %66 = or i1 %64, %65
  br i1 %66, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %58, %originalBB6alteredBB
  store i32 -1, i32* %12, align 4, !dbg !5084
  %67 = load i32, i32* @x.93
  %68 = load i32, i32* @y.94
  %69 = sub i32 %67, 1
  %70 = mul i32 %67, %69
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %68, 10
  %74 = or i1 %72, %73
  br i1 %74, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %889, !dbg !5084

75:                                               ; preds = %originalBBpart24
  %76 = load i32, i32* @x.93
  %77 = load i32, i32* @y.94
  %78 = sub i32 %76, 1
  %79 = mul i32 %76, %78
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %77, 10
  %83 = or i1 %81, %82
  br i1 %83, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %75, %originalBB10alteredBB
  %84 = load i32, i32* @x.93
  %85 = load i32, i32* @y.94
  %86 = sub i32 %84, 1
  %87 = mul i32 %84, %86
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %85, 10
  %91 = or i1 %89, %90
  br i1 %91, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %92, !dbg !5085

92:                                               ; preds = %originalBBpart255, %originalBBpart212
  call void @llvm.dbg.declare(metadata i32** %19, metadata !5086, metadata !DIExpression()), !dbg !5088
  call void @llvm.dbg.declare(metadata i32* %20, metadata !5089, metadata !DIExpression()), !dbg !5090
  %93 = load i32, i32* @x.93
  %94 = load i32, i32* @y.94
  %95 = sub i32 %93, 1
  %96 = mul i32 %93, %95
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %94, 10
  %100 = or i1 %98, %99
  br i1 %100, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %92, %originalBB14alteredBB
  %101 = load i32, i32* %16, align 4, !dbg !5091
  store i32 %101, i32* %20, align 4, !dbg !5090
  %102 = load i8*, i8** %13, align 8, !dbg !5092
  %103 = load i32, i32* %14, align 4, !dbg !5093
  %104 = load i32*, i32** %18, align 8, !dbg !5094
  %105 = call i32 @getgrouplist(i8* %102, i32 %103, i32* %104, i32* %16), !dbg !5095
  store i32 %105, i32* %17, align 4, !dbg !5096
  %106 = load i32, i32* %17, align 4, !dbg !5097
  %107 = icmp slt i32 %106, 0, !dbg !5099
  %108 = load i32, i32* @x.93
  %109 = load i32, i32* @y.94
  %110 = sub i32 %108, 1
  %111 = mul i32 %108, %110
  %112 = urem i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %109, 10
  %115 = or i1 %113, %114
  br i1 %115, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %107, label %116, label %155, !dbg !5100

116:                                              ; preds = %originalBBpart216
  %117 = load i32, i32* @x.93
  %118 = load i32, i32* @y.94
  %119 = sub i32 %117, 1
  %120 = mul i32 %117, %119
  %121 = urem i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = icmp slt i32 %118, 10
  %124 = or i1 %122, %123
  br i1 %124, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %116, %originalBB18alteredBB
  %125 = load i32, i32* %20, align 4, !dbg !5101
  %126 = load i32, i32* %16, align 4, !dbg !5102
  %127 = icmp eq i32 %125, %126, !dbg !5103
  %128 = load i32, i32* @x.93
  %129 = load i32, i32* @y.94
  %130 = sub i32 %128, 1
  %131 = mul i32 %128, %130
  %132 = urem i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = icmp slt i32 %129, 10
  %135 = or i1 %133, %134
  br i1 %135, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br i1 %127, label %136, label %155, !dbg !5104

136:                                              ; preds = %originalBBpart220
  %137 = load i32, i32* @x.93
  %138 = load i32, i32* @y.94
  %139 = sub i32 %137, 1
  %140 = mul i32 %137, %139
  %141 = urem i32 %140, 2
  %142 = icmp eq i32 %141, 0
  %143 = icmp slt i32 %138, 10
  %144 = or i1 %142, %143
  br i1 %144, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %136, %originalBB22alteredBB
  %145 = load i32, i32* %16, align 4, !dbg !5105
  %146 = mul nsw i32 %145, 2, !dbg !5105
  store i32 %146, i32* %16, align 4, !dbg !5105
  %147 = load i32, i32* @x.93
  %148 = load i32, i32* @y.94
  %149 = sub i32 %147, 1
  %150 = mul i32 %147, %149
  %151 = urem i32 %150, 2
  %152 = icmp eq i32 %151, 0
  %153 = icmp slt i32 %148, 10
  %154 = or i1 %152, %153
  br i1 %154, label %originalBBpart235, label %originalBB22alteredBB

originalBBpart235:                                ; preds = %originalBB22
  br label %155, !dbg !5106

155:                                              ; preds = %originalBBpart235, %originalBBpart220, %originalBBpart216
  %156 = load i32, i32* @x.93
  %157 = load i32, i32* @y.94
  %158 = sub i32 %156, 1
  %159 = mul i32 %156, %158
  %160 = urem i32 %159, 2
  %161 = icmp eq i32 %160, 0
  %162 = icmp slt i32 %157, 10
  %163 = or i1 %161, %162
  br i1 %163, label %originalBB37, label %originalBB37alteredBB

originalBB37:                                     ; preds = %155, %originalBB37alteredBB
  %164 = load i32*, i32** %18, align 8, !dbg !5107
  %165 = load i32, i32* %16, align 4, !dbg !5109
  %166 = sext i32 %165 to i64, !dbg !5109
  %167 = call i32* @realloc_groupbuf(i32* %164, i64 %166), !dbg !5110
  store i32* %167, i32** %19, align 8, !dbg !5111
  %168 = icmp eq i32* %167, null, !dbg !5112
  %169 = load i32, i32* @x.93
  %170 = load i32, i32* @y.94
  %171 = sub i32 %169, 1
  %172 = mul i32 %169, %171
  %173 = urem i32 %172, 2
  %174 = icmp eq i32 %173, 0
  %175 = icmp slt i32 %170, 10
  %176 = or i1 %174, %175
  br i1 %176, label %originalBBpart239, label %originalBB37alteredBB

originalBBpart239:                                ; preds = %originalBB37
  br i1 %168, label %177, label %200, !dbg !5113

177:                                              ; preds = %originalBBpart239
  call void @llvm.dbg.declare(metadata i32* %21, metadata !5114, metadata !DIExpression()), !dbg !5116
  %178 = load i32, i32* @x.93
  %179 = load i32, i32* @y.94
  %180 = sub i32 %178, 1
  %181 = mul i32 %178, %180
  %182 = urem i32 %181, 2
  %183 = icmp eq i32 %182, 0
  %184 = icmp slt i32 %179, 10
  %185 = or i1 %183, %184
  br i1 %185, label %originalBB41, label %originalBB41alteredBB

originalBB41:                                     ; preds = %177, %originalBB41alteredBB
  %186 = call i32* @__errno_location() #15, !dbg !5117
  %187 = load i32, i32* %186, align 4, !dbg !5117
  store i32 %187, i32* %21, align 4, !dbg !5116
  %188 = load i32*, i32** %18, align 8, !dbg !5118
  %189 = bitcast i32* %188 to i8*, !dbg !5118
  call void @free(i8* %189) #10, !dbg !5119
  %190 = load i32, i32* %21, align 4, !dbg !5120
  %191 = call i32* @__errno_location() #15, !dbg !5121
  store i32 %190, i32* %191, align 4, !dbg !5122
  store i32 -1, i32* %12, align 4, !dbg !5123
  %192 = load i32, i32* @x.93
  %193 = load i32, i32* @y.94
  %194 = sub i32 %192, 1
  %195 = mul i32 %192, %194
  %196 = urem i32 %195, 2
  %197 = icmp eq i32 %196, 0
  %198 = icmp slt i32 %193, 10
  %199 = or i1 %197, %198
  br i1 %199, label %originalBBpart243, label %originalBB41alteredBB

originalBBpart243:                                ; preds = %originalBB41
  br label %889, !dbg !5123

200:                                              ; preds = %originalBBpart239
  %201 = load i32, i32* @x.93
  %202 = load i32, i32* @y.94
  %203 = sub i32 %201, 1
  %204 = mul i32 %201, %203
  %205 = urem i32 %204, 2
  %206 = icmp eq i32 %205, 0
  %207 = icmp slt i32 %202, 10
  %208 = or i1 %206, %207
  br i1 %208, label %originalBB45, label %originalBB45alteredBB

originalBB45:                                     ; preds = %200, %originalBB45alteredBB
  %209 = load i32*, i32** %19, align 8, !dbg !5124
  store i32* %209, i32** %18, align 8, !dbg !5125
  %210 = load i32, i32* %17, align 4, !dbg !5126
  %211 = icmp sle i32 0, %210, !dbg !5128
  %212 = load i32, i32* @x.93
  %213 = load i32, i32* @y.94
  %214 = sub i32 %212, 1
  %215 = mul i32 %212, %214
  %216 = urem i32 %215, 2
  %217 = icmp eq i32 %216, 0
  %218 = icmp slt i32 %213, 10
  %219 = or i1 %217, %218
  br i1 %219, label %originalBBpart247, label %originalBB45alteredBB

originalBBpart247:                                ; preds = %originalBB45
  br i1 %211, label %220, label %240, !dbg !5129

220:                                              ; preds = %originalBBpart247
  %221 = load i32, i32* @x.93
  %222 = load i32, i32* @y.94
  %223 = sub i32 %221, 1
  %224 = mul i32 %221, %223
  %225 = urem i32 %224, 2
  %226 = icmp eq i32 %225, 0
  %227 = icmp slt i32 %222, 10
  %228 = or i1 %226, %227
  br i1 %228, label %originalBB49, label %originalBB49alteredBB

originalBB49:                                     ; preds = %220, %originalBB49alteredBB
  %229 = load i32*, i32** %18, align 8, !dbg !5130
  %230 = load i32**, i32*** %15, align 8, !dbg !5132
  store i32* %229, i32** %230, align 8, !dbg !5133
  %231 = load i32, i32* %16, align 4, !dbg !5134
  store i32 %231, i32* %12, align 4, !dbg !5135
  %232 = load i32, i32* @x.93
  %233 = load i32, i32* @y.94
  %234 = sub i32 %232, 1
  %235 = mul i32 %232, %234
  %236 = urem i32 %235, 2
  %237 = icmp eq i32 %236, 0
  %238 = icmp slt i32 %233, 10
  %239 = or i1 %237, %238
  br i1 %239, label %originalBBpart251, label %originalBB49alteredBB

originalBBpart251:                                ; preds = %originalBB49
  br label %889, !dbg !5135

240:                                              ; preds = %originalBBpart247
  %241 = load i32, i32* @x.93
  %242 = load i32, i32* @y.94
  %243 = sub i32 %241, 1
  %244 = mul i32 %241, %243
  %245 = urem i32 %244, 2
  %246 = icmp eq i32 %245, 0
  %247 = icmp slt i32 %242, 10
  %248 = or i1 %246, %247
  br i1 %248, label %originalBB53, label %originalBB53alteredBB

originalBB53:                                     ; preds = %240, %originalBB53alteredBB
  %249 = load i32, i32* @x.93
  %250 = load i32, i32* @y.94
  %251 = sub i32 %249, 1
  %252 = mul i32 %249, %251
  %253 = urem i32 %252, 2
  %254 = icmp eq i32 %253, 0
  %255 = icmp slt i32 %250, 10
  %256 = or i1 %254, %255
  br i1 %256, label %originalBBpart255, label %originalBB53alteredBB

originalBBpart255:                                ; preds = %originalBB53
  br label %92, !dbg !5085, !llvm.loop !5136

257:                                              ; preds = %originalBBpart2
  %258 = load i32, i32* @x.93
  %259 = load i32, i32* @y.94
  %260 = sub i32 %258, 1
  %261 = mul i32 %258, %260
  %262 = urem i32 %261, 2
  %263 = icmp eq i32 %262, 0
  %264 = icmp slt i32 %259, 10
  %265 = or i1 %263, %264
  br i1 %265, label %originalBB57, label %originalBB57alteredBB

originalBB57:                                     ; preds = %257, %originalBB57alteredBB
  %266 = load i8*, i8** %13, align 8, !dbg !5138
  %267 = icmp ne i8* %266, null, !dbg !5138
  %268 = load i32, i32* @x.93
  %269 = load i32, i32* @y.94
  %270 = sub i32 %268, 1
  %271 = mul i32 %268, %270
  %272 = urem i32 %271, 2
  %273 = icmp eq i32 %272, 0
  %274 = icmp slt i32 %269, 10
  %275 = or i1 %273, %274
  br i1 %275, label %originalBBpart259, label %originalBB57alteredBB

originalBBpart259:                                ; preds = %originalBB57
  br i1 %267, label %276, label %296, !dbg !5138

276:                                              ; preds = %originalBBpart259
  %277 = load i32, i32* @x.93
  %278 = load i32, i32* @y.94
  %279 = sub i32 %277, 1
  %280 = mul i32 %277, %279
  %281 = urem i32 %280, 2
  %282 = icmp eq i32 %281, 0
  %283 = icmp slt i32 %278, 10
  %284 = or i1 %282, %283
  br i1 %284, label %originalBB61, label %originalBB61alteredBB

originalBB61:                                     ; preds = %276, %originalBB61alteredBB
  %285 = load i8*, i8** %13, align 8, !dbg !5139
  %286 = load i32, i32* %14, align 4, !dbg !5140
  %287 = call i32 @getugroups(i32 0, i32* null, i8* %285, i32 %286), !dbg !5141
  %288 = load i32, i32* @x.93
  %289 = load i32, i32* @y.94
  %290 = sub i32 %288, 1
  %291 = mul i32 %288, %290
  %292 = urem i32 %291, 2
  %293 = icmp eq i32 %292, 0
  %294 = icmp slt i32 %289, 10
  %295 = or i1 %293, %294
  br i1 %295, label %originalBBpart263, label %originalBB61alteredBB

originalBBpart263:                                ; preds = %originalBB61
  br label %314, !dbg !5138

296:                                              ; preds = %originalBBpart259
  %297 = load i32, i32* @x.93
  %298 = load i32, i32* @y.94
  %299 = sub i32 %297, 1
  %300 = mul i32 %297, %299
  %301 = urem i32 %300, 2
  %302 = icmp eq i32 %301, 0
  %303 = icmp slt i32 %298, 10
  %304 = or i1 %302, %303
  br i1 %304, label %originalBB65, label %originalBB65alteredBB

originalBB65:                                     ; preds = %296, %originalBB65alteredBB
  %305 = call i32 @getgroups(i32 0, i32* null) #10, !dbg !5142
  %306 = load i32, i32* @x.93
  %307 = load i32, i32* @y.94
  %308 = sub i32 %306, 1
  %309 = mul i32 %306, %308
  %310 = urem i32 %309, 2
  %311 = icmp eq i32 %310, 0
  %312 = icmp slt i32 %307, 10
  %313 = or i1 %311, %312
  br i1 %313, label %originalBBpart267, label %originalBB65alteredBB

originalBBpart267:                                ; preds = %originalBB65
  br label %314, !dbg !5138

314:                                              ; preds = %originalBBpart267, %originalBBpart263
  %315 = phi i32 [ %287, %originalBBpart263 ], [ %305, %originalBBpart267 ], !dbg !5138
  %316 = load i32, i32* @x.93
  %317 = load i32, i32* @y.94
  %318 = sub i32 %316, 1
  %319 = mul i32 %316, %318
  %320 = urem i32 %319, 2
  %321 = icmp eq i32 %320, 0
  %322 = icmp slt i32 %317, 10
  %323 = or i1 %321, %322
  br i1 %323, label %originalBB69, label %originalBB69alteredBB

originalBB69:                                     ; preds = %314, %originalBB69alteredBB
  store i32 %315, i32* %16, align 4, !dbg !5143
  %324 = load i32, i32* %16, align 4, !dbg !5144
  %325 = icmp slt i32 %324, 0, !dbg !5146
  %326 = load i32, i32* @x.93
  %327 = load i32, i32* @y.94
  %328 = sub i32 %326, 1
  %329 = mul i32 %326, %328
  %330 = urem i32 %329, 2
  %331 = icmp eq i32 %330, 0
  %332 = icmp slt i32 %327, 10
  %333 = or i1 %331, %332
  br i1 %333, label %originalBBpart271, label %originalBB69alteredBB

originalBBpart271:                                ; preds = %originalBB69
  br i1 %325, label %334, label %414, !dbg !5147

334:                                              ; preds = %originalBBpart271
  %335 = load i32, i32* @x.93
  %336 = load i32, i32* @y.94
  %337 = sub i32 %335, 1
  %338 = mul i32 %335, %337
  %339 = urem i32 %338, 2
  %340 = icmp eq i32 %339, 0
  %341 = icmp slt i32 %336, 10
  %342 = or i1 %340, %341
  br i1 %342, label %originalBB73, label %originalBB73alteredBB

originalBB73:                                     ; preds = %334, %originalBB73alteredBB
  %343 = call i32* @__errno_location() #15, !dbg !5148
  %344 = load i32, i32* %343, align 4, !dbg !5148
  %345 = icmp eq i32 %344, 38, !dbg !5151
  %346 = load i32, i32* @x.93
  %347 = load i32, i32* @y.94
  %348 = sub i32 %346, 1
  %349 = mul i32 %346, %348
  %350 = urem i32 %349, 2
  %351 = icmp eq i32 %350, 0
  %352 = icmp slt i32 %347, 10
  %353 = or i1 %351, %352
  br i1 %353, label %originalBBpart275, label %originalBB73alteredBB

originalBBpart275:                                ; preds = %originalBB73
  br i1 %345, label %354, label %397, !dbg !5152

354:                                              ; preds = %originalBBpart275
  %355 = load i32, i32* @x.93
  %356 = load i32, i32* @y.94
  %357 = sub i32 %355, 1
  %358 = mul i32 %355, %357
  %359 = urem i32 %358, 2
  %360 = icmp eq i32 %359, 0
  %361 = icmp slt i32 %356, 10
  %362 = or i1 %360, %361
  br i1 %362, label %originalBB77, label %originalBB77alteredBB

originalBB77:                                     ; preds = %354, %originalBB77alteredBB
  %363 = call i32* @realloc_groupbuf(i32* null, i64 1), !dbg !5153
  store i32* %363, i32** %18, align 8, !dbg !5154
  %364 = icmp ne i32* %363, null, !dbg !5154
  %365 = load i32, i32* @x.93
  %366 = load i32, i32* @y.94
  %367 = sub i32 %365, 1
  %368 = mul i32 %365, %367
  %369 = urem i32 %368, 2
  %370 = icmp eq i32 %369, 0
  %371 = icmp slt i32 %366, 10
  %372 = or i1 %370, %371
  br i1 %372, label %originalBBpart279, label %originalBB77alteredBB

originalBBpart279:                                ; preds = %originalBB77
  br i1 %364, label %373, label %397, !dbg !5155

373:                                              ; preds = %originalBBpart279
  %374 = load i32, i32* @x.93
  %375 = load i32, i32* @y.94
  %376 = sub i32 %374, 1
  %377 = mul i32 %374, %376
  %378 = urem i32 %377, 2
  %379 = icmp eq i32 %378, 0
  %380 = icmp slt i32 %375, 10
  %381 = or i1 %379, %380
  br i1 %381, label %originalBB81, label %originalBB81alteredBB

originalBB81:                                     ; preds = %373, %originalBB81alteredBB
  %382 = load i32*, i32** %18, align 8, !dbg !5156
  %383 = load i32**, i32*** %15, align 8, !dbg !5158
  store i32* %382, i32** %383, align 8, !dbg !5159
  %384 = load i32, i32* %14, align 4, !dbg !5160
  %385 = load i32*, i32** %18, align 8, !dbg !5161
  store i32 %384, i32* %385, align 4, !dbg !5162
  %386 = load i32, i32* %14, align 4, !dbg !5163
  %387 = icmp ne i32 %386, -1, !dbg !5164
  %388 = zext i1 %387 to i32, !dbg !5164
  store i32 %388, i32* %12, align 4, !dbg !5165
  %389 = load i32, i32* @x.93
  %390 = load i32, i32* @y.94
  %391 = sub i32 %389, 1
  %392 = mul i32 %389, %391
  %393 = urem i32 %392, 2
  %394 = icmp eq i32 %393, 0
  %395 = icmp slt i32 %390, 10
  %396 = or i1 %394, %395
  br i1 %396, label %originalBBpart283, label %originalBB81alteredBB

originalBBpart283:                                ; preds = %originalBB81
  br label %889, !dbg !5165

397:                                              ; preds = %originalBBpart279, %originalBBpart275
  %398 = load i32, i32* @x.93
  %399 = load i32, i32* @y.94
  %400 = sub i32 %398, 1
  %401 = mul i32 %398, %400
  %402 = urem i32 %401, 2
  %403 = icmp eq i32 %402, 0
  %404 = icmp slt i32 %399, 10
  %405 = or i1 %403, %404
  br i1 %405, label %originalBB85, label %originalBB85alteredBB

originalBB85:                                     ; preds = %397, %originalBB85alteredBB
  store i32 -1, i32* %12, align 4, !dbg !5166
  %406 = load i32, i32* @x.93
  %407 = load i32, i32* @y.94
  %408 = sub i32 %406, 1
  %409 = mul i32 %406, %408
  %410 = urem i32 %409, 2
  %411 = icmp eq i32 %410, 0
  %412 = icmp slt i32 %407, 10
  %413 = or i1 %411, %412
  br i1 %413, label %originalBBpart287, label %originalBB85alteredBB

originalBBpart287:                                ; preds = %originalBB85
  br label %889, !dbg !5166

414:                                              ; preds = %originalBBpart271
  %415 = load i32, i32* @x.93
  %416 = load i32, i32* @y.94
  %417 = sub i32 %415, 1
  %418 = mul i32 %415, %417
  %419 = urem i32 %418, 2
  %420 = icmp eq i32 %419, 0
  %421 = icmp slt i32 %416, 10
  %422 = or i1 %420, %421
  br i1 %422, label %originalBB89, label %originalBB89alteredBB

originalBB89:                                     ; preds = %414, %originalBB89alteredBB
  %423 = load i32, i32* %16, align 4, !dbg !5167
  %424 = icmp eq i32 %423, 0, !dbg !5169
  %425 = load i32, i32* @x.93
  %426 = load i32, i32* @y.94
  %427 = sub i32 %425, 1
  %428 = mul i32 %425, %427
  %429 = urem i32 %428, 2
  %430 = icmp eq i32 %429, 0
  %431 = icmp slt i32 %426, 10
  %432 = or i1 %430, %431
  br i1 %432, label %originalBBpart291, label %originalBB89alteredBB

originalBBpart291:                                ; preds = %originalBB89
  br i1 %424, label %471, label %433, !dbg !5170

433:                                              ; preds = %originalBBpart291
  %434 = load i32, i32* @x.93
  %435 = load i32, i32* @y.94
  %436 = sub i32 %434, 1
  %437 = mul i32 %434, %436
  %438 = urem i32 %437, 2
  %439 = icmp eq i32 %438, 0
  %440 = icmp slt i32 %435, 10
  %441 = or i1 %439, %440
  br i1 %441, label %originalBB93, label %originalBB93alteredBB

originalBB93:                                     ; preds = %433, %originalBB93alteredBB
  %442 = load i8*, i8** %13, align 8, !dbg !5171
  %443 = icmp ne i8* %442, null, !dbg !5171
  %444 = load i32, i32* @x.93
  %445 = load i32, i32* @y.94
  %446 = sub i32 %444, 1
  %447 = mul i32 %444, %446
  %448 = urem i32 %447, 2
  %449 = icmp eq i32 %448, 0
  %450 = icmp slt i32 %445, 10
  %451 = or i1 %449, %450
  br i1 %451, label %originalBBpart295, label %originalBB93alteredBB

originalBBpart295:                                ; preds = %originalBB93
  br i1 %443, label %490, label %452, !dbg !5172

452:                                              ; preds = %originalBBpart295
  %453 = load i32, i32* @x.93
  %454 = load i32, i32* @y.94
  %455 = sub i32 %453, 1
  %456 = mul i32 %453, %455
  %457 = urem i32 %456, 2
  %458 = icmp eq i32 %457, 0
  %459 = icmp slt i32 %454, 10
  %460 = or i1 %458, %459
  br i1 %460, label %originalBB97, label %originalBB97alteredBB

originalBB97:                                     ; preds = %452, %originalBB97alteredBB
  %461 = load i32, i32* %14, align 4, !dbg !5173
  %462 = icmp ne i32 %461, -1, !dbg !5174
  %463 = load i32, i32* @x.93
  %464 = load i32, i32* @y.94
  %465 = sub i32 %463, 1
  %466 = mul i32 %463, %465
  %467 = urem i32 %466, 2
  %468 = icmp eq i32 %467, 0
  %469 = icmp slt i32 %464, 10
  %470 = or i1 %468, %469
  br i1 %470, label %originalBBpart299, label %originalBB97alteredBB

originalBBpart299:                                ; preds = %originalBB97
  br i1 %462, label %471, label %490, !dbg !5175

471:                                              ; preds = %originalBBpart299, %originalBBpart291
  %472 = load i32, i32* @x.93
  %473 = load i32, i32* @y.94
  %474 = sub i32 %472, 1
  %475 = mul i32 %472, %474
  %476 = urem i32 %475, 2
  %477 = icmp eq i32 %476, 0
  %478 = icmp slt i32 %473, 10
  %479 = or i1 %477, %478
  br i1 %479, label %originalBB101, label %originalBB101alteredBB

originalBB101:                                    ; preds = %471, %originalBB101alteredBB
  %480 = load i32, i32* %16, align 4, !dbg !5176
  %481 = add nsw i32 %480, 1, !dbg !5176
  store i32 %481, i32* %16, align 4, !dbg !5176
  %482 = load i32, i32* @x.93
  %483 = load i32, i32* @y.94
  %484 = sub i32 %482, 1
  %485 = mul i32 %482, %484
  %486 = urem i32 %485, 2
  %487 = icmp eq i32 %486, 0
  %488 = icmp slt i32 %483, 10
  %489 = or i1 %487, %488
  br i1 %489, label %originalBBpart2113, label %originalBB101alteredBB

originalBBpart2113:                               ; preds = %originalBB101
  br label %490, !dbg !5177

490:                                              ; preds = %originalBBpart2113, %originalBBpart299, %originalBBpart295
  %491 = load i32, i32* @x.93
  %492 = load i32, i32* @y.94
  %493 = sub i32 %491, 1
  %494 = mul i32 %491, %493
  %495 = urem i32 %494, 2
  %496 = icmp eq i32 %495, 0
  %497 = icmp slt i32 %492, 10
  %498 = or i1 %496, %497
  br i1 %498, label %originalBB115, label %originalBB115alteredBB

originalBB115:                                    ; preds = %490, %originalBB115alteredBB
  %499 = load i32, i32* %16, align 4, !dbg !5178
  %500 = sext i32 %499 to i64, !dbg !5178
  %501 = call i32* @realloc_groupbuf(i32* null, i64 %500), !dbg !5179
  store i32* %501, i32** %18, align 8, !dbg !5180
  %502 = load i32*, i32** %18, align 8, !dbg !5181
  %503 = icmp eq i32* %502, null, !dbg !5183
  %504 = load i32, i32* @x.93
  %505 = load i32, i32* @y.94
  %506 = sub i32 %504, 1
  %507 = mul i32 %504, %506
  %508 = urem i32 %507, 2
  %509 = icmp eq i32 %508, 0
  %510 = icmp slt i32 %505, 10
  %511 = or i1 %509, %510
  br i1 %511, label %originalBBpart2117, label %originalBB115alteredBB

originalBBpart2117:                               ; preds = %originalBB115
  br i1 %503, label %512, label %529, !dbg !5184

512:                                              ; preds = %originalBBpart2117
  %513 = load i32, i32* @x.93
  %514 = load i32, i32* @y.94
  %515 = sub i32 %513, 1
  %516 = mul i32 %513, %515
  %517 = urem i32 %516, 2
  %518 = icmp eq i32 %517, 0
  %519 = icmp slt i32 %514, 10
  %520 = or i1 %518, %519
  br i1 %520, label %originalBB119, label %originalBB119alteredBB

originalBB119:                                    ; preds = %512, %originalBB119alteredBB
  store i32 -1, i32* %12, align 4, !dbg !5185
  %521 = load i32, i32* @x.93
  %522 = load i32, i32* @y.94
  %523 = sub i32 %521, 1
  %524 = mul i32 %521, %523
  %525 = urem i32 %524, 2
  %526 = icmp eq i32 %525, 0
  %527 = icmp slt i32 %522, 10
  %528 = or i1 %526, %527
  br i1 %528, label %originalBBpart2121, label %originalBB119alteredBB

originalBBpart2121:                               ; preds = %originalBB119
  br label %889, !dbg !5185

529:                                              ; preds = %originalBBpart2117
  %530 = load i32, i32* @x.93
  %531 = load i32, i32* @y.94
  %532 = sub i32 %530, 1
  %533 = mul i32 %530, %532
  %534 = urem i32 %533, 2
  %535 = icmp eq i32 %534, 0
  %536 = icmp slt i32 %531, 10
  %537 = or i1 %535, %536
  br i1 %537, label %originalBB123, label %originalBB123alteredBB

originalBB123:                                    ; preds = %529, %originalBB123alteredBB
  %538 = load i8*, i8** %13, align 8, !dbg !5186
  %539 = icmp ne i8* %538, null, !dbg !5186
  %540 = load i32, i32* @x.93
  %541 = load i32, i32* @y.94
  %542 = sub i32 %540, 1
  %543 = mul i32 %540, %542
  %544 = urem i32 %543, 2
  %545 = icmp eq i32 %544, 0
  %546 = icmp slt i32 %541, 10
  %547 = or i1 %545, %546
  br i1 %547, label %originalBBpart2125, label %originalBB123alteredBB

originalBBpart2125:                               ; preds = %originalBB123
  br i1 %539, label %548, label %570, !dbg !5186

548:                                              ; preds = %originalBBpart2125
  %549 = load i32, i32* @x.93
  %550 = load i32, i32* @y.94
  %551 = sub i32 %549, 1
  %552 = mul i32 %549, %551
  %553 = urem i32 %552, 2
  %554 = icmp eq i32 %553, 0
  %555 = icmp slt i32 %550, 10
  %556 = or i1 %554, %555
  br i1 %556, label %originalBB127, label %originalBB127alteredBB

originalBB127:                                    ; preds = %548, %originalBB127alteredBB
  %557 = load i32, i32* %16, align 4, !dbg !5187
  %558 = load i32*, i32** %18, align 8, !dbg !5188
  %559 = load i8*, i8** %13, align 8, !dbg !5189
  %560 = load i32, i32* %14, align 4, !dbg !5190
  %561 = call i32 @getugroups(i32 %557, i32* %558, i8* %559, i32 %560), !dbg !5191
  %562 = load i32, i32* @x.93
  %563 = load i32, i32* @y.94
  %564 = sub i32 %562, 1
  %565 = mul i32 %562, %564
  %566 = urem i32 %565, 2
  %567 = icmp eq i32 %566, 0
  %568 = icmp slt i32 %563, 10
  %569 = or i1 %567, %568
  br i1 %569, label %originalBBpart2129, label %originalBB127alteredBB

originalBBpart2129:                               ; preds = %originalBB127
  br label %583, !dbg !5186

570:                                              ; preds = %originalBBpart2125
  %571 = load i32, i32* %16, align 4, !dbg !5192
  %572 = load i32, i32* %14, align 4, !dbg !5193
  %573 = icmp ne i32 %572, -1, !dbg !5194
  %574 = zext i1 %573 to i32, !dbg !5194
  %575 = sub nsw i32 %571, %574, !dbg !5195
  %576 = load i32*, i32** %18, align 8, !dbg !5196
  %577 = load i32, i32* %14, align 4, !dbg !5197
  %578 = icmp ne i32 %577, -1, !dbg !5198
  %579 = zext i1 %578 to i32, !dbg !5198
  %580 = sext i32 %579 to i64, !dbg !5199
  %581 = getelementptr inbounds i32, i32* %576, i64 %580, !dbg !5199
  %582 = call i32 @getgroups(i32 %575, i32* %581) #10, !dbg !5200
  br label %583, !dbg !5186

583:                                              ; preds = %570, %originalBBpart2129
  %584 = phi i32 [ %561, %originalBBpart2129 ], [ %582, %570 ], !dbg !5186
  %585 = load i32, i32* @x.93
  %586 = load i32, i32* @y.94
  %587 = sub i32 %585, 1
  %588 = mul i32 %585, %587
  %589 = urem i32 %588, 2
  %590 = icmp eq i32 %589, 0
  %591 = icmp slt i32 %586, 10
  %592 = or i1 %590, %591
  br i1 %592, label %originalBB131, label %originalBB131alteredBB

originalBB131:                                    ; preds = %583, %originalBB131alteredBB
  store i32 %584, i32* %17, align 4, !dbg !5201
  %593 = load i32, i32* %17, align 4, !dbg !5202
  %594 = icmp slt i32 %593, 0, !dbg !5204
  %595 = load i32, i32* @x.93
  %596 = load i32, i32* @y.94
  %597 = sub i32 %595, 1
  %598 = mul i32 %595, %597
  %599 = urem i32 %598, 2
  %600 = icmp eq i32 %599, 0
  %601 = icmp slt i32 %596, 10
  %602 = or i1 %600, %601
  br i1 %602, label %originalBBpart2133, label %originalBB131alteredBB

originalBBpart2133:                               ; preds = %originalBB131
  br i1 %594, label %603, label %626, !dbg !5205

603:                                              ; preds = %originalBBpart2133
  call void @llvm.dbg.declare(metadata i32* %22, metadata !5206, metadata !DIExpression()), !dbg !5208
  %604 = load i32, i32* @x.93
  %605 = load i32, i32* @y.94
  %606 = sub i32 %604, 1
  %607 = mul i32 %604, %606
  %608 = urem i32 %607, 2
  %609 = icmp eq i32 %608, 0
  %610 = icmp slt i32 %605, 10
  %611 = or i1 %609, %610
  br i1 %611, label %originalBB135, label %originalBB135alteredBB

originalBB135:                                    ; preds = %603, %originalBB135alteredBB
  %612 = call i32* @__errno_location() #15, !dbg !5209
  %613 = load i32, i32* %612, align 4, !dbg !5209
  store i32 %613, i32* %22, align 4, !dbg !5208
  %614 = load i32*, i32** %18, align 8, !dbg !5210
  %615 = bitcast i32* %614 to i8*, !dbg !5210
  call void @free(i8* %615) #10, !dbg !5211
  %616 = load i32, i32* %22, align 4, !dbg !5212
  %617 = call i32* @__errno_location() #15, !dbg !5213
  store i32 %616, i32* %617, align 4, !dbg !5214
  store i32 -1, i32* %12, align 4, !dbg !5215
  %618 = load i32, i32* @x.93
  %619 = load i32, i32* @y.94
  %620 = sub i32 %618, 1
  %621 = mul i32 %618, %620
  %622 = urem i32 %621, 2
  %623 = icmp eq i32 %622, 0
  %624 = icmp slt i32 %619, 10
  %625 = or i1 %623, %624
  br i1 %625, label %originalBBpart2137, label %originalBB135alteredBB

originalBBpart2137:                               ; preds = %originalBB135
  br label %889, !dbg !5215

626:                                              ; preds = %originalBBpart2133
  %627 = load i32, i32* @x.93
  %628 = load i32, i32* @y.94
  %629 = sub i32 %627, 1
  %630 = mul i32 %627, %629
  %631 = urem i32 %630, 2
  %632 = icmp eq i32 %631, 0
  %633 = icmp slt i32 %628, 10
  %634 = or i1 %632, %633
  br i1 %634, label %originalBB139, label %originalBB139alteredBB

originalBB139:                                    ; preds = %626, %originalBB139alteredBB
  %635 = load i8*, i8** %13, align 8, !dbg !5216
  %636 = icmp ne i8* %635, null, !dbg !5216
  %637 = load i32, i32* @x.93
  %638 = load i32, i32* @y.94
  %639 = sub i32 %637, 1
  %640 = mul i32 %637, %639
  %641 = urem i32 %640, 2
  %642 = icmp eq i32 %641, 0
  %643 = icmp slt i32 %638, 10
  %644 = or i1 %642, %643
  br i1 %644, label %originalBBpart2141, label %originalBB139alteredBB

originalBBpart2141:                               ; preds = %originalBB139
  br i1 %636, label %685, label %645, !dbg !5218

645:                                              ; preds = %originalBBpart2141
  %646 = load i32, i32* @x.93
  %647 = load i32, i32* @y.94
  %648 = sub i32 %646, 1
  %649 = mul i32 %646, %648
  %650 = urem i32 %649, 2
  %651 = icmp eq i32 %650, 0
  %652 = icmp slt i32 %647, 10
  %653 = or i1 %651, %652
  br i1 %653, label %originalBB143, label %originalBB143alteredBB

originalBB143:                                    ; preds = %645, %originalBB143alteredBB
  %654 = load i32, i32* %14, align 4, !dbg !5219
  %655 = icmp ne i32 %654, -1, !dbg !5220
  %656 = load i32, i32* @x.93
  %657 = load i32, i32* @y.94
  %658 = sub i32 %656, 1
  %659 = mul i32 %656, %658
  %660 = urem i32 %659, 2
  %661 = icmp eq i32 %660, 0
  %662 = icmp slt i32 %657, 10
  %663 = or i1 %661, %662
  br i1 %663, label %originalBBpart2145, label %originalBB143alteredBB

originalBBpart2145:                               ; preds = %originalBB143
  br i1 %655, label %664, label %685, !dbg !5221

664:                                              ; preds = %originalBBpart2145
  %665 = load i32, i32* @x.93
  %666 = load i32, i32* @y.94
  %667 = sub i32 %665, 1
  %668 = mul i32 %665, %667
  %669 = urem i32 %668, 2
  %670 = icmp eq i32 %669, 0
  %671 = icmp slt i32 %666, 10
  %672 = or i1 %670, %671
  br i1 %672, label %originalBB147, label %originalBB147alteredBB

originalBB147:                                    ; preds = %664, %originalBB147alteredBB
  %673 = load i32, i32* %14, align 4, !dbg !5222
  %674 = load i32*, i32** %18, align 8, !dbg !5224
  store i32 %673, i32* %674, align 4, !dbg !5225
  %675 = load i32, i32* %17, align 4, !dbg !5226
  %676 = add nsw i32 %675, 1, !dbg !5226
  store i32 %676, i32* %17, align 4, !dbg !5226
  %677 = load i32, i32* @x.93
  %678 = load i32, i32* @y.94
  %679 = sub i32 %677, 1
  %680 = mul i32 %677, %679
  %681 = urem i32 %680, 2
  %682 = icmp eq i32 %681, 0
  %683 = icmp slt i32 %678, 10
  %684 = or i1 %682, %683
  br i1 %684, label %originalBBpart2157, label %originalBB147alteredBB

originalBBpart2157:                               ; preds = %originalBB147
  br label %685, !dbg !5227

685:                                              ; preds = %originalBBpart2157, %originalBBpart2145, %originalBBpart2141
  %686 = load i32, i32* @x.93
  %687 = load i32, i32* @y.94
  %688 = sub i32 %686, 1
  %689 = mul i32 %686, %688
  %690 = urem i32 %689, 2
  %691 = icmp eq i32 %690, 0
  %692 = icmp slt i32 %687, 10
  %693 = or i1 %691, %692
  br i1 %693, label %originalBB159, label %originalBB159alteredBB

originalBB159:                                    ; preds = %685, %originalBB159alteredBB
  %694 = load i32*, i32** %18, align 8, !dbg !5228
  %695 = load i32**, i32*** %15, align 8, !dbg !5229
  store i32* %694, i32** %695, align 8, !dbg !5230
  %696 = load i32, i32* %17, align 4, !dbg !5231
  %697 = icmp slt i32 1, %696, !dbg !5233
  %698 = load i32, i32* @x.93
  %699 = load i32, i32* @y.94
  %700 = sub i32 %698, 1
  %701 = mul i32 %698, %700
  %702 = urem i32 %701, 2
  %703 = icmp eq i32 %702, 0
  %704 = icmp slt i32 %699, 10
  %705 = or i1 %703, %704
  br i1 %705, label %originalBBpart2161, label %originalBB159alteredBB

originalBBpart2161:                               ; preds = %originalBB159
  br i1 %697, label %706, label %871, !dbg !5234

706:                                              ; preds = %originalBBpart2161
  call void @llvm.dbg.declare(metadata i32* %23, metadata !5235, metadata !DIExpression()), !dbg !5237
  %707 = load i32, i32* @x.93
  %708 = load i32, i32* @y.94
  %709 = sub i32 %707, 1
  %710 = mul i32 %707, %709
  %711 = urem i32 %710, 2
  %712 = icmp eq i32 %711, 0
  %713 = icmp slt i32 %708, 10
  %714 = or i1 %712, %713
  br i1 %714, label %originalBB163, label %originalBB163alteredBB

originalBB163:                                    ; preds = %706, %originalBB163alteredBB
  %715 = load i32*, i32** %18, align 8, !dbg !5238
  %716 = load i32, i32* %715, align 4, !dbg !5239
  store i32 %716, i32* %23, align 4, !dbg !5237
  call void @llvm.dbg.declare(metadata i32** %24, metadata !5240, metadata !DIExpression()), !dbg !5241
  call void @llvm.dbg.declare(metadata i32** %25, metadata !5242, metadata !DIExpression()), !dbg !5243
  %717 = load i32*, i32** %18, align 8, !dbg !5244
  %718 = load i32, i32* %17, align 4, !dbg !5245
  %719 = sext i32 %718 to i64, !dbg !5246
  %720 = getelementptr inbounds i32, i32* %717, i64 %719, !dbg !5246
  store i32* %720, i32** %25, align 8, !dbg !5243
  %721 = load i32*, i32** %18, align 8, !dbg !5247
  %722 = getelementptr inbounds i32, i32* %721, i64 1, !dbg !5249
  store i32* %722, i32** %24, align 8, !dbg !5250
  %723 = load i32, i32* @x.93
  %724 = load i32, i32* @y.94
  %725 = sub i32 %723, 1
  %726 = mul i32 %723, %725
  %727 = urem i32 %726, 2
  %728 = icmp eq i32 %727, 0
  %729 = icmp slt i32 %724, 10
  %730 = or i1 %728, %729
  br i1 %730, label %originalBBpart2165, label %originalBB163alteredBB

originalBBpart2165:                               ; preds = %originalBB163
  br label %731, !dbg !5251

731:                                              ; preds = %851, %originalBBpart2165
  %732 = load i32, i32* @x.93
  %733 = load i32, i32* @y.94
  %734 = sub i32 %732, 1
  %735 = mul i32 %732, %734
  %736 = urem i32 %735, 2
  %737 = icmp eq i32 %736, 0
  %738 = icmp slt i32 %733, 10
  %739 = or i1 %737, %738
  br i1 %739, label %originalBB167, label %originalBB167alteredBB

originalBB167:                                    ; preds = %731, %originalBB167alteredBB
  %740 = load i32*, i32** %24, align 8, !dbg !5252
  %741 = load i32*, i32** %25, align 8, !dbg !5254
  %742 = icmp ult i32* %740, %741, !dbg !5255
  %743 = load i32, i32* @x.93
  %744 = load i32, i32* @y.94
  %745 = sub i32 %743, 1
  %746 = mul i32 %743, %745
  %747 = urem i32 %746, 2
  %748 = icmp eq i32 %747, 0
  %749 = icmp slt i32 %744, 10
  %750 = or i1 %748, %749
  br i1 %750, label %originalBBpart2169, label %originalBB167alteredBB

originalBBpart2169:                               ; preds = %originalBB167
  br i1 %742, label %751, label %854, !dbg !5256

751:                                              ; preds = %originalBBpart2169
  %752 = load i32, i32* @x.93
  %753 = load i32, i32* @y.94
  %754 = sub i32 %752, 1
  %755 = mul i32 %752, %754
  %756 = urem i32 %755, 2
  %757 = icmp eq i32 %756, 0
  %758 = icmp slt i32 %753, 10
  %759 = or i1 %757, %758
  br i1 %759, label %originalBB171, label %originalBB171alteredBB

originalBB171:                                    ; preds = %751, %originalBB171alteredBB
  %760 = load i32*, i32** %24, align 8, !dbg !5257
  %761 = load i32, i32* %760, align 4, !dbg !5260
  %762 = load i32, i32* %23, align 4, !dbg !5261
  %763 = icmp eq i32 %761, %762, !dbg !5262
  %764 = load i32, i32* @x.93
  %765 = load i32, i32* @y.94
  %766 = sub i32 %764, 1
  %767 = mul i32 %764, %766
  %768 = urem i32 %767, 2
  %769 = icmp eq i32 %768, 0
  %770 = icmp slt i32 %765, 10
  %771 = or i1 %769, %770
  br i1 %771, label %originalBBpart2173, label %originalBB171alteredBB

originalBBpart2173:                               ; preds = %originalBB171
  br i1 %763, label %794, label %772, !dbg !5263

772:                                              ; preds = %originalBBpart2173
  %773 = load i32, i32* @x.93
  %774 = load i32, i32* @y.94
  %775 = sub i32 %773, 1
  %776 = mul i32 %773, %775
  %777 = urem i32 %776, 2
  %778 = icmp eq i32 %777, 0
  %779 = icmp slt i32 %774, 10
  %780 = or i1 %778, %779
  br i1 %780, label %originalBB175, label %originalBB175alteredBB

originalBB175:                                    ; preds = %772, %originalBB175alteredBB
  %781 = load i32*, i32** %24, align 8, !dbg !5264
  %782 = load i32, i32* %781, align 4, !dbg !5265
  %783 = load i32*, i32** %18, align 8, !dbg !5266
  %784 = load i32, i32* %783, align 4, !dbg !5267
  %785 = icmp eq i32 %782, %784, !dbg !5268
  %786 = load i32, i32* @x.93
  %787 = load i32, i32* @y.94
  %788 = sub i32 %786, 1
  %789 = mul i32 %786, %788
  %790 = urem i32 %789, 2
  %791 = icmp eq i32 %790, 0
  %792 = icmp slt i32 %787, 10
  %793 = or i1 %791, %792
  br i1 %793, label %originalBBpart2177, label %originalBB175alteredBB

originalBBpart2177:                               ; preds = %originalBB175
  br i1 %785, label %794, label %813, !dbg !5269

794:                                              ; preds = %originalBBpart2177, %originalBBpart2173
  %795 = load i32, i32* @x.93
  %796 = load i32, i32* @y.94
  %797 = sub i32 %795, 1
  %798 = mul i32 %795, %797
  %799 = urem i32 %798, 2
  %800 = icmp eq i32 %799, 0
  %801 = icmp slt i32 %796, 10
  %802 = or i1 %800, %801
  br i1 %802, label %originalBB179, label %originalBB179alteredBB

originalBB179:                                    ; preds = %794, %originalBB179alteredBB
  %803 = load i32, i32* %17, align 4, !dbg !5270
  %804 = add nsw i32 %803, -1, !dbg !5270
  store i32 %804, i32* %17, align 4, !dbg !5270
  %805 = load i32, i32* @x.93
  %806 = load i32, i32* @y.94
  %807 = sub i32 %805, 1
  %808 = mul i32 %805, %807
  %809 = urem i32 %808, 2
  %810 = icmp eq i32 %809, 0
  %811 = icmp slt i32 %806, 10
  %812 = or i1 %810, %811
  br i1 %812, label %originalBBpart2185, label %originalBB179alteredBB

originalBBpart2185:                               ; preds = %originalBB179
  br label %834, !dbg !5271

813:                                              ; preds = %originalBBpart2177
  %814 = load i32, i32* @x.93
  %815 = load i32, i32* @y.94
  %816 = sub i32 %814, 1
  %817 = mul i32 %814, %816
  %818 = urem i32 %817, 2
  %819 = icmp eq i32 %818, 0
  %820 = icmp slt i32 %815, 10
  %821 = or i1 %819, %820
  br i1 %821, label %originalBB187, label %originalBB187alteredBB

originalBB187:                                    ; preds = %813, %originalBB187alteredBB
  %822 = load i32*, i32** %24, align 8, !dbg !5272
  %823 = load i32, i32* %822, align 4, !dbg !5273
  %824 = load i32*, i32** %18, align 8, !dbg !5274
  %825 = getelementptr inbounds i32, i32* %824, i32 1, !dbg !5274
  store i32* %825, i32** %18, align 8, !dbg !5274
  store i32 %823, i32* %825, align 4, !dbg !5275
  %826 = load i32, i32* @x.93
  %827 = load i32, i32* @y.94
  %828 = sub i32 %826, 1
  %829 = mul i32 %826, %828
  %830 = urem i32 %829, 2
  %831 = icmp eq i32 %830, 0
  %832 = icmp slt i32 %827, 10
  %833 = or i1 %831, %832
  br i1 %833, label %originalBBpart2189, label %originalBB187alteredBB

originalBBpart2189:                               ; preds = %originalBB187
  br label %834

834:                                              ; preds = %originalBBpart2189, %originalBBpart2185
  %835 = load i32, i32* @x.93
  %836 = load i32, i32* @y.94
  %837 = sub i32 %835, 1
  %838 = mul i32 %835, %837
  %839 = urem i32 %838, 2
  %840 = icmp eq i32 %839, 0
  %841 = icmp slt i32 %836, 10
  %842 = or i1 %840, %841
  br i1 %842, label %originalBB191, label %originalBB191alteredBB

originalBB191:                                    ; preds = %834, %originalBB191alteredBB
  %843 = load i32, i32* @x.93
  %844 = load i32, i32* @y.94
  %845 = sub i32 %843, 1
  %846 = mul i32 %843, %845
  %847 = urem i32 %846, 2
  %848 = icmp eq i32 %847, 0
  %849 = icmp slt i32 %844, 10
  %850 = or i1 %848, %849
  br i1 %850, label %originalBBpart2193, label %originalBB191alteredBB

originalBBpart2193:                               ; preds = %originalBB191
  br label %851, !dbg !5276

851:                                              ; preds = %originalBBpart2193
  %852 = load i32*, i32** %24, align 8, !dbg !5277
  %853 = getelementptr inbounds i32, i32* %852, i32 1, !dbg !5277
  store i32* %853, i32** %24, align 8, !dbg !5277
  br label %731, !dbg !5278, !llvm.loop !5279

854:                                              ; preds = %originalBBpart2169
  %855 = load i32, i32* @x.93
  %856 = load i32, i32* @y.94
  %857 = sub i32 %855, 1
  %858 = mul i32 %855, %857
  %859 = urem i32 %858, 2
  %860 = icmp eq i32 %859, 0
  %861 = icmp slt i32 %856, 10
  %862 = or i1 %860, %861
  br i1 %862, label %originalBB195, label %originalBB195alteredBB

originalBB195:                                    ; preds = %854, %originalBB195alteredBB
  %863 = load i32, i32* @x.93
  %864 = load i32, i32* @y.94
  %865 = sub i32 %863, 1
  %866 = mul i32 %863, %865
  %867 = urem i32 %866, 2
  %868 = icmp eq i32 %867, 0
  %869 = icmp slt i32 %864, 10
  %870 = or i1 %868, %869
  br i1 %870, label %originalBBpart2197, label %originalBB195alteredBB

originalBBpart2197:                               ; preds = %originalBB195
  br label %871, !dbg !5281

871:                                              ; preds = %originalBBpart2197, %originalBBpart2161
  %872 = load i32, i32* @x.93
  %873 = load i32, i32* @y.94
  %874 = sub i32 %872, 1
  %875 = mul i32 %872, %874
  %876 = urem i32 %875, 2
  %877 = icmp eq i32 %876, 0
  %878 = icmp slt i32 %873, 10
  %879 = or i1 %877, %878
  br i1 %879, label %originalBB199, label %originalBB199alteredBB

originalBB199:                                    ; preds = %871, %originalBB199alteredBB
  %880 = load i32, i32* %17, align 4, !dbg !5282
  store i32 %880, i32* %12, align 4, !dbg !5283
  %881 = load i32, i32* @x.93
  %882 = load i32, i32* @y.94
  %883 = sub i32 %881, 1
  %884 = mul i32 %881, %883
  %885 = urem i32 %884, 2
  %886 = icmp eq i32 %885, 0
  %887 = icmp slt i32 %882, 10
  %888 = or i1 %886, %887
  br i1 %888, label %originalBBpart2201, label %originalBB199alteredBB

originalBBpart2201:                               ; preds = %originalBB199
  br label %889, !dbg !5283

889:                                              ; preds = %originalBBpart2201, %originalBBpart2137, %originalBBpart2121, %originalBBpart287, %originalBBpart283, %originalBBpart251, %originalBBpart243, %originalBBpart28
  %890 = load i32, i32* @x.93
  %891 = load i32, i32* @y.94
  %892 = sub i32 %890, 1
  %893 = mul i32 %890, %892
  %894 = urem i32 %893, 2
  %895 = icmp eq i32 %894, 0
  %896 = icmp slt i32 %891, 10
  %897 = or i1 %895, %896
  br i1 %897, label %originalBB203, label %originalBB203alteredBB

originalBB203:                                    ; preds = %889, %originalBB203alteredBB
  %898 = load i32, i32* %12, align 4, !dbg !5284
  %899 = load i32, i32* @x.93
  %900 = load i32, i32* @y.94
  %901 = sub i32 %899, 1
  %902 = mul i32 %899, %901
  %903 = urem i32 %902, 2
  %904 = icmp eq i32 %903, 0
  %905 = icmp slt i32 %900, 10
  %906 = or i1 %904, %905
  br i1 %906, label %originalBBpart2205, label %originalBB203alteredBB

originalBBpart2205:                               ; preds = %originalBB203
  ret i32 %898, !dbg !5284

originalBBalteredBB:                              ; preds = %originalBB, %3
  %907 = alloca i32, align 4
  %908 = alloca i8*, align 8
  %909 = alloca i32, align 4
  %910 = alloca i32**, align 8
  %911 = alloca i32, align 4
  %912 = alloca i32, align 4
  %913 = alloca i32*, align 8
  %914 = alloca i32*, align 8
  %915 = alloca i32, align 4
  %916 = alloca i32, align 4
  %917 = alloca i32, align 4
  %918 = alloca i32, align 4
  %919 = alloca i32*, align 8
  %920 = alloca i32*, align 8
  store i8* %0, i8** %908, align 8
  call void @llvm.dbg.declare(metadata i8** %908, metadata !5285, metadata !DIExpression()), !dbg !5061
  store i32 %1, i32* %909, align 4
  call void @llvm.dbg.declare(metadata i32* %909, metadata !5288, metadata !DIExpression()), !dbg !5063
  store i32** %2, i32*** %910, align 8
  call void @llvm.dbg.declare(metadata i32*** %910, metadata !5289, metadata !DIExpression()), !dbg !5065
  call void @llvm.dbg.declare(metadata i32* %911, metadata !5290, metadata !DIExpression()), !dbg !5067
  call void @llvm.dbg.declare(metadata i32* %912, metadata !5291, metadata !DIExpression()), !dbg !5069
  call void @llvm.dbg.declare(metadata i32** %913, metadata !5292, metadata !DIExpression()), !dbg !5071
  %921 = load i8*, i8** %908, align 8, !dbg !5072
  %922 = icmp ne i8* %921, null, !dbg !5072
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %36
  store i32 10, i32* %16, align 4, !dbg !5075
  %923 = load i32, i32* %16, align 4, !dbg !5077
  %924 = sext i32 %923 to i64, !dbg !5077
  %925 = call i32* @realloc_groupbuf(i32* null, i64 %924), !dbg !5078
  store i32* %925, i32** %18, align 8, !dbg !5079
  %926 = load i32*, i32** %18, align 8, !dbg !5080
  %927 = icmp eq i32* %926, null, !dbg !5082
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %58
  store i32 -1, i32* %12, align 4, !dbg !5084
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %75
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %92
  %928 = load i32, i32* %16, align 4, !dbg !5091
  store i32 %928, i32* %20, align 4, !dbg !5090
  %929 = load i8*, i8** %13, align 8, !dbg !5092
  %930 = load i32, i32* %14, align 4, !dbg !5093
  %931 = load i32*, i32** %18, align 8, !dbg !5094
  %932 = call i32 @getgrouplist(i8* %929, i32 %930, i32* %931, i32* %16), !dbg !5095
  store i32 %932, i32* %17, align 4, !dbg !5096
  %933 = load i32, i32* %17, align 4, !dbg !5097
  %934 = icmp slt i32 %933, 0, !dbg !5099
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %116
  %935 = load i32, i32* %20, align 4, !dbg !5101
  %936 = load i32, i32* %16, align 4, !dbg !5102
  %937 = icmp eq i32 %935, %936, !dbg !5103
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %136
  %938 = load i32, i32* %16, align 4, !dbg !5105
  %_ = sub i32 %938, 2
  %gen = mul i32 %_, 2
  %_23 = sub i32 0, %938
  %gen24 = add i32 %_23, 2
  %_25 = sub i32 0, %938
  %gen26 = add i32 %_25, 2
  %_27 = sub i32 0, %938
  %gen28 = add i32 %_27, 2
  %_29 = shl i32 %938, 2
  %_30 = sub i32 %938, 2
  %gen31 = mul i32 %_30, 2
  %_32 = sub i32 %938, 2
  %gen33 = mul i32 %_32, 2
  %939 = mul nsw i32 %938, 2, !dbg !5105
  store i32 %939, i32* %16, align 4, !dbg !5105
  br label %originalBB22

originalBB37alteredBB:                            ; preds = %originalBB37, %155
  %940 = load i32*, i32** %18, align 8, !dbg !5107
  %941 = load i32, i32* %16, align 4, !dbg !5109
  %942 = sext i32 %941 to i64, !dbg !5109
  %943 = call i32* @realloc_groupbuf(i32* %940, i64 %942), !dbg !5110
  store i32* %943, i32** %19, align 8, !dbg !5111
  %944 = icmp eq i32* %943, null, !dbg !5112
  br label %originalBB37

originalBB41alteredBB:                            ; preds = %originalBB41, %177
  %945 = call i32* @__errno_location() #15, !dbg !5117
  %946 = load i32, i32* %945, align 4, !dbg !5117
  store i32 %946, i32* %21, align 4, !dbg !5116
  %947 = load i32*, i32** %18, align 8, !dbg !5118
  %948 = bitcast i32* %947 to i8*, !dbg !5118
  call void @free(i8* %948) #10, !dbg !5119
  %949 = load i32, i32* %21, align 4, !dbg !5120
  %950 = call i32* @__errno_location() #15, !dbg !5121
  store i32 %949, i32* %950, align 4, !dbg !5122
  store i32 -1, i32* %12, align 4, !dbg !5123
  br label %originalBB41

originalBB45alteredBB:                            ; preds = %originalBB45, %200
  %951 = load i32*, i32** %19, align 8, !dbg !5124
  store i32* %951, i32** %18, align 8, !dbg !5125
  %952 = load i32, i32* %17, align 4, !dbg !5126
  %953 = icmp sle i32 0, %952, !dbg !5128
  br label %originalBB45

originalBB49alteredBB:                            ; preds = %originalBB49, %220
  %954 = load i32*, i32** %18, align 8, !dbg !5130
  %955 = load i32**, i32*** %15, align 8, !dbg !5132
  store i32* %954, i32** %955, align 8, !dbg !5133
  %956 = load i32, i32* %16, align 4, !dbg !5134
  store i32 %956, i32* %12, align 4, !dbg !5135
  br label %originalBB49

originalBB53alteredBB:                            ; preds = %originalBB53, %240
  br label %originalBB53

originalBB57alteredBB:                            ; preds = %originalBB57, %257
  %957 = load i8*, i8** %13, align 8, !dbg !5138
  %958 = icmp ne i8* %957, null, !dbg !5138
  br label %originalBB57

originalBB61alteredBB:                            ; preds = %originalBB61, %276
  %959 = load i8*, i8** %13, align 8, !dbg !5139
  %960 = load i32, i32* %14, align 4, !dbg !5140
  %961 = call i32 @getugroups(i32 0, i32* null, i8* %959, i32 %960), !dbg !5141
  br label %originalBB61

originalBB65alteredBB:                            ; preds = %originalBB65, %296
  %962 = call i32 @getgroups(i32 0, i32* null) #10, !dbg !5142
  br label %originalBB65

originalBB69alteredBB:                            ; preds = %originalBB69, %314
  store i32 %315, i32* %16, align 4, !dbg !5143
  %963 = load i32, i32* %16, align 4, !dbg !5144
  %964 = icmp slt i32 %963, 0, !dbg !5146
  br label %originalBB69

originalBB73alteredBB:                            ; preds = %originalBB73, %334
  %965 = call i32* @__errno_location() #15, !dbg !5148
  %966 = load i32, i32* %965, align 4, !dbg !5148
  %967 = icmp eq i32 %966, 38, !dbg !5151
  br label %originalBB73

originalBB77alteredBB:                            ; preds = %originalBB77, %354
  %968 = call i32* @realloc_groupbuf(i32* null, i64 1), !dbg !5153
  store i32* %968, i32** %18, align 8, !dbg !5154
  %969 = icmp ne i32* %968, null, !dbg !5154
  br label %originalBB77

originalBB81alteredBB:                            ; preds = %originalBB81, %373
  %970 = load i32*, i32** %18, align 8, !dbg !5156
  %971 = load i32**, i32*** %15, align 8, !dbg !5158
  store i32* %970, i32** %971, align 8, !dbg !5159
  %972 = load i32, i32* %14, align 4, !dbg !5160
  %973 = load i32*, i32** %18, align 8, !dbg !5161
  store i32 %972, i32* %973, align 4, !dbg !5162
  %974 = load i32, i32* %14, align 4, !dbg !5163
  %975 = icmp ne i32 %974, -1, !dbg !5164
  %976 = zext i1 %975 to i32, !dbg !5164
  store i32 %976, i32* %12, align 4, !dbg !5165
  br label %originalBB81

originalBB85alteredBB:                            ; preds = %originalBB85, %397
  store i32 -1, i32* %12, align 4, !dbg !5166
  br label %originalBB85

originalBB89alteredBB:                            ; preds = %originalBB89, %414
  %977 = load i32, i32* %16, align 4, !dbg !5167
  %978 = icmp eq i32 %977, 0, !dbg !5169
  br label %originalBB89

originalBB93alteredBB:                            ; preds = %originalBB93, %433
  %979 = load i8*, i8** %13, align 8, !dbg !5171
  %980 = icmp ne i8* %979, null, !dbg !5171
  br label %originalBB93

originalBB97alteredBB:                            ; preds = %originalBB97, %452
  %981 = load i32, i32* %14, align 4, !dbg !5173
  %982 = icmp ne i32 %981, -1, !dbg !5174
  br label %originalBB97

originalBB101alteredBB:                           ; preds = %originalBB101, %471
  %983 = load i32, i32* %16, align 4, !dbg !5176
  %_102 = sub i32 %983, 1
  %gen103 = mul i32 %_102, 1
  %_104 = sub i32 %983, 1
  %gen105 = mul i32 %_104, 1
  %_106 = sub i32 %983, 1
  %gen107 = mul i32 %_106, 1
  %_108 = sub i32 %983, 1
  %gen109 = mul i32 %_108, 1
  %_110 = sub i32 %983, 1
  %gen111 = mul i32 %_110, 1
  %984 = add nsw i32 %983, 1, !dbg !5176
  store i32 %984, i32* %16, align 4, !dbg !5176
  br label %originalBB101

originalBB115alteredBB:                           ; preds = %originalBB115, %490
  %985 = load i32, i32* %16, align 4, !dbg !5178
  %986 = sext i32 %985 to i64, !dbg !5178
  %987 = call i32* @realloc_groupbuf(i32* null, i64 %986), !dbg !5179
  store i32* %987, i32** %18, align 8, !dbg !5180
  %988 = load i32*, i32** %18, align 8, !dbg !5181
  %989 = icmp eq i32* %988, null, !dbg !5183
  br label %originalBB115

originalBB119alteredBB:                           ; preds = %originalBB119, %512
  store i32 -1, i32* %12, align 4, !dbg !5185
  br label %originalBB119

originalBB123alteredBB:                           ; preds = %originalBB123, %529
  %990 = load i8*, i8** %13, align 8, !dbg !5186
  %991 = icmp ne i8* %990, null, !dbg !5186
  br label %originalBB123

originalBB127alteredBB:                           ; preds = %originalBB127, %548
  %992 = load i32, i32* %16, align 4, !dbg !5187
  %993 = load i32*, i32** %18, align 8, !dbg !5188
  %994 = load i8*, i8** %13, align 8, !dbg !5189
  %995 = load i32, i32* %14, align 4, !dbg !5190
  %996 = call i32 @getugroups(i32 %992, i32* %993, i8* %994, i32 %995), !dbg !5191
  br label %originalBB127

originalBB131alteredBB:                           ; preds = %originalBB131, %583
  store i32 %584, i32* %17, align 4, !dbg !5201
  %997 = load i32, i32* %17, align 4, !dbg !5202
  %998 = icmp slt i32 %997, 0, !dbg !5204
  br label %originalBB131

originalBB135alteredBB:                           ; preds = %originalBB135, %603
  %999 = call i32* @__errno_location() #15, !dbg !5209
  %1000 = load i32, i32* %999, align 4, !dbg !5209
  store i32 %1000, i32* %22, align 4, !dbg !5208
  %1001 = load i32*, i32** %18, align 8, !dbg !5210
  %1002 = bitcast i32* %1001 to i8*, !dbg !5210
  call void @free(i8* %1002) #10, !dbg !5211
  %1003 = load i32, i32* %22, align 4, !dbg !5212
  %1004 = call i32* @__errno_location() #15, !dbg !5213
  store i32 %1003, i32* %1004, align 4, !dbg !5214
  store i32 -1, i32* %12, align 4, !dbg !5215
  br label %originalBB135

originalBB139alteredBB:                           ; preds = %originalBB139, %626
  %1005 = load i8*, i8** %13, align 8, !dbg !5216
  %1006 = icmp ne i8* %1005, null, !dbg !5216
  br label %originalBB139

originalBB143alteredBB:                           ; preds = %originalBB143, %645
  %1007 = load i32, i32* %14, align 4, !dbg !5219
  %1008 = icmp ne i32 %1007, -1, !dbg !5220
  br label %originalBB143

originalBB147alteredBB:                           ; preds = %originalBB147, %664
  %1009 = load i32, i32* %14, align 4, !dbg !5222
  %1010 = load i32*, i32** %18, align 8, !dbg !5224
  store i32 %1009, i32* %1010, align 4, !dbg !5225
  %1011 = load i32, i32* %17, align 4, !dbg !5226
  %_148 = shl i32 %1011, 1
  %_149 = shl i32 %1011, 1
  %_150 = sub i32 %1011, 1
  %gen151 = mul i32 %_150, 1
  %_152 = shl i32 %1011, 1
  %_153 = shl i32 %1011, 1
  %_154 = shl i32 %1011, 1
  %_155 = shl i32 %1011, 1
  %1012 = add nsw i32 %1011, 1, !dbg !5226
  store i32 %1012, i32* %17, align 4, !dbg !5226
  br label %originalBB147

originalBB159alteredBB:                           ; preds = %originalBB159, %685
  %1013 = load i32*, i32** %18, align 8, !dbg !5228
  %1014 = load i32**, i32*** %15, align 8, !dbg !5229
  store i32* %1013, i32** %1014, align 8, !dbg !5230
  %1015 = load i32, i32* %17, align 4, !dbg !5231
  %1016 = icmp slt i32 1, %1015, !dbg !5233
  br label %originalBB159

originalBB163alteredBB:                           ; preds = %originalBB163, %706
  %1017 = load i32*, i32** %18, align 8, !dbg !5238
  %1018 = load i32, i32* %1017, align 4, !dbg !5239
  store i32 %1018, i32* %23, align 4, !dbg !5237
  call void @llvm.dbg.declare(metadata !4, metadata !5293, metadata !DIExpression()), !dbg !5241
  call void @llvm.dbg.declare(metadata !4, metadata !5298, metadata !DIExpression()), !dbg !5243
  %1019 = load i32*, i32** %18, align 8, !dbg !5244
  %1020 = load i32, i32* %17, align 4, !dbg !5245
  %1021 = sext i32 %1020 to i64, !dbg !5246
  %1022 = getelementptr inbounds i32, i32* %1019, i64 %1021, !dbg !5246
  store i32* %1022, i32** %25, align 8, !dbg !5243
  %1023 = load i32*, i32** %18, align 8, !dbg !5247
  %1024 = getelementptr inbounds i32, i32* %1023, i64 1, !dbg !5249
  store i32* %1024, i32** %24, align 8, !dbg !5250
  br label %originalBB163

originalBB167alteredBB:                           ; preds = %originalBB167, %731
  %1025 = load i32*, i32** %24, align 8, !dbg !5252
  %1026 = load i32*, i32** %25, align 8, !dbg !5254
  %1027 = icmp ult i32* %1025, %1026, !dbg !5255
  br label %originalBB167

originalBB171alteredBB:                           ; preds = %originalBB171, %751
  %1028 = load i32*, i32** %24, align 8, !dbg !5257
  %1029 = load i32, i32* %1028, align 4, !dbg !5260
  %1030 = load i32, i32* %23, align 4, !dbg !5261
  %1031 = icmp eq i32 %1029, %1030, !dbg !5262
  br label %originalBB171

originalBB175alteredBB:                           ; preds = %originalBB175, %772
  %1032 = load i32*, i32** %24, align 8, !dbg !5264
  %1033 = load i32, i32* %1032, align 4, !dbg !5265
  %1034 = load i32*, i32** %18, align 8, !dbg !5266
  %1035 = load i32, i32* %1034, align 4, !dbg !5267
  %1036 = icmp eq i32 %1033, %1035, !dbg !5268
  br label %originalBB175

originalBB179alteredBB:                           ; preds = %originalBB179, %794
  %1037 = load i32, i32* %17, align 4, !dbg !5270
  %_180 = sub i32 0, %1037
  %gen181 = add i32 %_180, -1
  %_182 = sub i32 %1037, -1
  %gen183 = mul i32 %_182, -1
  %1038 = add nsw i32 %1037, -1, !dbg !5270
  store i32 %1038, i32* %17, align 4, !dbg !5270
  br label %originalBB179

originalBB187alteredBB:                           ; preds = %originalBB187, %813
  %1039 = load i32*, i32** %24, align 8, !dbg !5272
  %1040 = load i32, i32* %1039, align 4, !dbg !5273
  %1041 = load i32*, i32** %18, align 8, !dbg !5274
  %1042 = getelementptr inbounds i32, i32* %1041, i32 1, !dbg !5274
  store i32* %1042, i32** %18, align 8, !dbg !5274
  store i32 %1040, i32* %1042, align 4, !dbg !5275
  br label %originalBB187

originalBB191alteredBB:                           ; preds = %originalBB191, %834
  br label %originalBB191

originalBB195alteredBB:                           ; preds = %originalBB195, %854
  br label %originalBB195

originalBB199alteredBB:                           ; preds = %originalBB199, %871
  %1043 = load i32, i32* %17, align 4, !dbg !5282
  store i32 %1043, i32* %12, align 4, !dbg !5283
  br label %originalBB199

originalBB203alteredBB:                           ; preds = %originalBB203, %889
  %1044 = load i32, i32* %12, align 4, !dbg !5284
  br label %originalBB203
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32* @realloc_groupbuf(i32*, i64) #4 !dbg !5299 {
  %3 = load i32, i32* @x.95
  %4 = load i32, i32* @y.96
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca i32*, align 8
  %12 = alloca i32*, align 8
  %13 = alloca i64, align 8
  store i32* %0, i32** %12, align 8
  call void @llvm.dbg.declare(metadata i32** %12, metadata !5302, metadata !DIExpression()), !dbg !5303
  store i64 %1, i64* %13, align 8
  call void @llvm.dbg.declare(metadata i64* %13, metadata !5304, metadata !DIExpression()), !dbg !5305
  %14 = load i64, i64* %13, align 8, !dbg !5306
  %15 = icmp ult i64 2305843009213693951, %14, !dbg !5306
  %16 = load i32, i32* @x.95
  %17 = load i32, i32* @y.96
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %15, label %24, label %42, !dbg !5308

24:                                               ; preds = %originalBBpart2
  %25 = load i32, i32* @x.95
  %26 = load i32, i32* @y.96
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %24, %originalBB1alteredBB
  %33 = call i32* @__errno_location() #15, !dbg !5309
  store i32 12, i32* %33, align 4, !dbg !5311
  store i32* null, i32** %11, align 8, !dbg !5312
  %34 = load i32, i32* @x.95
  %35 = load i32, i32* @y.96
  %36 = sub i32 %34, 1
  %37 = mul i32 %34, %36
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %39, %40
  br i1 %41, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %65, !dbg !5312

42:                                               ; preds = %originalBBpart2
  %43 = load i32, i32* @x.95
  %44 = load i32, i32* @y.96
  %45 = sub i32 %43, 1
  %46 = mul i32 %43, %45
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %48, %49
  br i1 %50, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %42, %originalBB6alteredBB
  %51 = load i32*, i32** %12, align 8, !dbg !5313
  %52 = bitcast i32* %51 to i8*, !dbg !5313
  %53 = load i64, i64* %13, align 8, !dbg !5314
  %54 = mul i64 %53, 4, !dbg !5315
  %55 = call i8* @realloc(i8* %52, i64 %54) #10, !dbg !5316
  %56 = bitcast i8* %55 to i32*, !dbg !5316
  store i32* %56, i32** %11, align 8, !dbg !5317
  %57 = load i32, i32* @x.95
  %58 = load i32, i32* @y.96
  %59 = sub i32 %57, 1
  %60 = mul i32 %57, %59
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %58, 10
  %64 = or i1 %62, %63
  br i1 %64, label %originalBBpart219, label %originalBB6alteredBB

originalBBpart219:                                ; preds = %originalBB6
  br label %65, !dbg !5317

65:                                               ; preds = %originalBBpart219, %originalBBpart24
  %66 = load i32, i32* @x.95
  %67 = load i32, i32* @y.96
  %68 = sub i32 %66, 1
  %69 = mul i32 %66, %68
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %67, 10
  %73 = or i1 %71, %72
  br i1 %73, label %originalBB21, label %originalBB21alteredBB

originalBB21:                                     ; preds = %65, %originalBB21alteredBB
  %74 = load i32*, i32** %11, align 8, !dbg !5318
  %75 = load i32, i32* @x.95
  %76 = load i32, i32* @y.96
  %77 = sub i32 %75, 1
  %78 = mul i32 %75, %77
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %76, 10
  %82 = or i1 %80, %81
  br i1 %82, label %originalBBpart223, label %originalBB21alteredBB

originalBBpart223:                                ; preds = %originalBB21
  ret i32* %74, !dbg !5318

originalBBalteredBB:                              ; preds = %originalBB, %2
  %83 = alloca i32*, align 8
  %84 = alloca i32*, align 8
  %85 = alloca i64, align 8
  store i32* %0, i32** %84, align 8
  call void @llvm.dbg.declare(metadata i32** %84, metadata !5319, metadata !DIExpression()), !dbg !5303
  store i64 %1, i64* %85, align 8
  call void @llvm.dbg.declare(metadata i64* %85, metadata !5322, metadata !DIExpression()), !dbg !5305
  %86 = load i64, i64* %85, align 8, !dbg !5306
  %87 = icmp ult i64 2305843009213693951, %86, !dbg !5306
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %24
  %88 = call i32* @__errno_location() #15, !dbg !5309
  store i32 12, i32* %88, align 4, !dbg !5311
  store i32* null, i32** %11, align 8, !dbg !5312
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %42
  %89 = load i32*, i32** %12, align 8, !dbg !5313
  %90 = bitcast i32* %89 to i8*, !dbg !5313
  %91 = load i64, i64* %13, align 8, !dbg !5314
  %_ = shl i64 %91, 4
  %_7 = shl i64 %91, 4
  %_8 = sub i64 %91, 4
  %gen = mul i64 %_8, 4
  %_9 = shl i64 %91, 4
  %_10 = sub i64 0, %91
  %gen11 = add i64 %_10, 4
  %_12 = sub i64 %91, 4
  %gen13 = mul i64 %_12, 4
  %_14 = sub i64 0, %91
  %gen15 = add i64 %_14, 4
  %_16 = sub i64 %91, 4
  %gen17 = mul i64 %_16, 4
  %92 = mul i64 %91, 4, !dbg !5315
  %93 = call i8* @realloc(i8* %90, i64 %92) #10, !dbg !5316
  %94 = bitcast i8* %93 to i32*, !dbg !5316
  store i32* %94, i32** %11, align 8, !dbg !5317
  br label %originalBB6

originalBB21alteredBB:                            ; preds = %originalBB21, %65
  %95 = load i32*, i32** %11, align 8, !dbg !5318
  br label %originalBB21
}

declare dso_local i32 @getgrouplist(i8*, i32, i32*, i32*) #3

; Function Attrs: nounwind
declare dso_local i32 @getgroups(i32, i32*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @setlocale_null_r(i32, i8* nonnull, i64) #4 !dbg !5323 {
  %4 = load i32, i32* @x.97
  %5 = load i32, i32* @y.98
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca i32, align 4
  %13 = alloca i8*, align 8
  %14 = alloca i64, align 8
  store i32 %0, i32* %12, align 4
  call void @llvm.dbg.declare(metadata i32* %12, metadata !5327, metadata !DIExpression()), !dbg !5328
  store i8* %1, i8** %13, align 8
  call void @llvm.dbg.declare(metadata i8** %13, metadata !5329, metadata !DIExpression()), !dbg !5330
  store i64 %2, i64* %14, align 8
  call void @llvm.dbg.declare(metadata i64* %14, metadata !5331, metadata !DIExpression()), !dbg !5332
  %15 = load i32, i32* %12, align 4, !dbg !5333
  %16 = load i8*, i8** %13, align 8, !dbg !5334
  %17 = load i64, i64* %14, align 8, !dbg !5335
  %18 = call i32 @setlocale_null_unlocked(i32 %15, i8* %16, i64 %17), !dbg !5336
  %19 = load i32, i32* @x.97
  %20 = load i32, i32* @y.98
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32 %18, !dbg !5337

originalBBalteredBB:                              ; preds = %originalBB, %3
  %27 = alloca i32, align 4
  %28 = alloca i8*, align 8
  %29 = alloca i64, align 8
  store i32 %0, i32* %27, align 4
  call void @llvm.dbg.declare(metadata i32* %27, metadata !5338, metadata !DIExpression()), !dbg !5328
  store i8* %1, i8** %28, align 8
  call void @llvm.dbg.declare(metadata i8** %28, metadata !5341, metadata !DIExpression()), !dbg !5330
  store i64 %2, i64* %29, align 8
  call void @llvm.dbg.declare(metadata i64* %29, metadata !5342, metadata !DIExpression()), !dbg !5332
  %30 = load i32, i32* %27, align 4, !dbg !5333
  %31 = load i8*, i8** %28, align 8, !dbg !5334
  %32 = load i64, i64* %29, align 8, !dbg !5335
  %33 = call i32 @setlocale_null_unlocked(i32 %30, i8* %31, i64 %32), !dbg !5336
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @setlocale_null_unlocked(i32, i8*, i64) #4 !dbg !5343 {
  %4 = load i32, i32* @x.99
  %5 = load i32, i32* @y.100
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i8*, align 8
  %15 = alloca i64, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i64, align 8
  store i32 %0, i32* %13, align 4
  call void @llvm.dbg.declare(metadata i32* %13, metadata !5344, metadata !DIExpression()), !dbg !5345
  store i8* %1, i8** %14, align 8
  call void @llvm.dbg.declare(metadata i8** %14, metadata !5346, metadata !DIExpression()), !dbg !5347
  store i64 %2, i64* %15, align 8
  call void @llvm.dbg.declare(metadata i64* %15, metadata !5348, metadata !DIExpression()), !dbg !5349
  call void @llvm.dbg.declare(metadata i8** %16, metadata !5350, metadata !DIExpression()), !dbg !5351
  %18 = load i32, i32* %13, align 4, !dbg !5352
  %19 = call i8* @setlocale_null_androidfix(i32 %18), !dbg !5353
  store i8* %19, i8** %16, align 8, !dbg !5351
  %20 = load i8*, i8** %16, align 8, !dbg !5354
  %21 = icmp eq i8* %20, null, !dbg !5356
  %22 = load i32, i32* @x.99
  %23 = load i32, i32* @y.100
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %21, label %30, label %85, !dbg !5357

30:                                               ; preds = %originalBBpart2
  %31 = load i32, i32* @x.99
  %32 = load i32, i32* @y.100
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %30, %originalBB1alteredBB
  %39 = load i64, i64* %15, align 8, !dbg !5358
  %40 = icmp ugt i64 %39, 0, !dbg !5361
  %41 = load i32, i32* @x.99
  %42 = load i32, i32* @y.100
  %43 = sub i32 %41, 1
  %44 = mul i32 %41, %43
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %46, %47
  br i1 %48, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %40, label %49, label %68, !dbg !5362

49:                                               ; preds = %originalBBpart24
  %50 = load i32, i32* @x.99
  %51 = load i32, i32* @y.100
  %52 = sub i32 %50, 1
  %53 = mul i32 %50, %52
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %51, 10
  %57 = or i1 %55, %56
  br i1 %57, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %49, %originalBB6alteredBB
  %58 = load i8*, i8** %14, align 8, !dbg !5363
  %59 = getelementptr inbounds i8, i8* %58, i64 0, !dbg !5363
  store i8 0, i8* %59, align 1, !dbg !5364
  %60 = load i32, i32* @x.99
  %61 = load i32, i32* @y.100
  %62 = sub i32 %60, 1
  %63 = mul i32 %60, %62
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %61, 10
  %67 = or i1 %65, %66
  br i1 %67, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %68, !dbg !5363

68:                                               ; preds = %originalBBpart28, %originalBBpart24
  %69 = load i32, i32* @x.99
  %70 = load i32, i32* @y.100
  %71 = sub i32 %69, 1
  %72 = mul i32 %69, %71
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %74, %75
  br i1 %76, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %68, %originalBB10alteredBB
  store i32 22, i32* %12, align 4, !dbg !5365
  %77 = load i32, i32* @x.99
  %78 = load i32, i32* @y.100
  %79 = sub i32 %77, 1
  %80 = mul i32 %77, %79
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %78, 10
  %84 = or i1 %82, %83
  br i1 %84, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %189, !dbg !5365

85:                                               ; preds = %originalBBpart2
  call void @llvm.dbg.declare(metadata i64* %17, metadata !5366, metadata !DIExpression()), !dbg !5368
  %86 = load i32, i32* @x.99
  %87 = load i32, i32* @y.100
  %88 = sub i32 %86, 1
  %89 = mul i32 %86, %88
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %87, 10
  %93 = or i1 %91, %92
  br i1 %93, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %85, %originalBB14alteredBB
  %94 = load i8*, i8** %16, align 8, !dbg !5369
  %95 = call i64 @strlen(i8* %94) #13, !dbg !5370
  store i64 %95, i64* %17, align 8, !dbg !5368
  %96 = load i64, i64* %17, align 8, !dbg !5371
  %97 = load i64, i64* %15, align 8, !dbg !5373
  %98 = icmp ult i64 %96, %97, !dbg !5374
  %99 = load i32, i32* @x.99
  %100 = load i32, i32* @y.100
  %101 = sub i32 %99, 1
  %102 = mul i32 %99, %101
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %100, 10
  %106 = or i1 %104, %105
  br i1 %106, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %98, label %107, label %128, !dbg !5375

107:                                              ; preds = %originalBBpart216
  %108 = load i32, i32* @x.99
  %109 = load i32, i32* @y.100
  %110 = sub i32 %108, 1
  %111 = mul i32 %108, %110
  %112 = urem i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %109, 10
  %115 = or i1 %113, %114
  br i1 %115, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %107, %originalBB18alteredBB
  %116 = load i8*, i8** %14, align 8, !dbg !5376
  %117 = load i8*, i8** %16, align 8, !dbg !5378
  %118 = load i64, i64* %17, align 8, !dbg !5379
  %119 = add i64 %118, 1, !dbg !5380
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %116, i8* align 1 %117, i64 %119, i1 false), !dbg !5381
  store i32 0, i32* %12, align 4, !dbg !5382
  %120 = load i32, i32* @x.99
  %121 = load i32, i32* @y.100
  %122 = sub i32 %120, 1
  %123 = mul i32 %120, %122
  %124 = urem i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = icmp slt i32 %121, 10
  %127 = or i1 %125, %126
  br i1 %127, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %189, !dbg !5382

128:                                              ; preds = %originalBBpart216
  %129 = load i32, i32* @x.99
  %130 = load i32, i32* @y.100
  %131 = sub i32 %129, 1
  %132 = mul i32 %129, %131
  %133 = urem i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = icmp slt i32 %130, 10
  %136 = or i1 %134, %135
  br i1 %136, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %128, %originalBB22alteredBB
  %137 = load i64, i64* %15, align 8, !dbg !5383
  %138 = icmp ugt i64 %137, 0, !dbg !5386
  %139 = load i32, i32* @x.99
  %140 = load i32, i32* @y.100
  %141 = sub i32 %139, 1
  %142 = mul i32 %139, %141
  %143 = urem i32 %142, 2
  %144 = icmp eq i32 %143, 0
  %145 = icmp slt i32 %140, 10
  %146 = or i1 %144, %145
  br i1 %146, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br i1 %138, label %147, label %172, !dbg !5387

147:                                              ; preds = %originalBBpart224
  %148 = load i32, i32* @x.99
  %149 = load i32, i32* @y.100
  %150 = sub i32 %148, 1
  %151 = mul i32 %148, %150
  %152 = urem i32 %151, 2
  %153 = icmp eq i32 %152, 0
  %154 = icmp slt i32 %149, 10
  %155 = or i1 %153, %154
  br i1 %155, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %147, %originalBB26alteredBB
  %156 = load i8*, i8** %14, align 8, !dbg !5388
  %157 = load i8*, i8** %16, align 8, !dbg !5390
  %158 = load i64, i64* %15, align 8, !dbg !5391
  %159 = sub i64 %158, 1, !dbg !5392
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %156, i8* align 1 %157, i64 %159, i1 false), !dbg !5393
  %160 = load i8*, i8** %14, align 8, !dbg !5394
  %161 = load i64, i64* %15, align 8, !dbg !5395
  %162 = sub i64 %161, 1, !dbg !5396
  %163 = getelementptr inbounds i8, i8* %160, i64 %162, !dbg !5394
  store i8 0, i8* %163, align 1, !dbg !5397
  %164 = load i32, i32* @x.99
  %165 = load i32, i32* @y.100
  %166 = sub i32 %164, 1
  %167 = mul i32 %164, %166
  %168 = urem i32 %167, 2
  %169 = icmp eq i32 %168, 0
  %170 = icmp slt i32 %165, 10
  %171 = or i1 %169, %170
  br i1 %171, label %originalBBpart239, label %originalBB26alteredBB

originalBBpart239:                                ; preds = %originalBB26
  br label %172, !dbg !5398

172:                                              ; preds = %originalBBpart239, %originalBBpart224
  %173 = load i32, i32* @x.99
  %174 = load i32, i32* @y.100
  %175 = sub i32 %173, 1
  %176 = mul i32 %173, %175
  %177 = urem i32 %176, 2
  %178 = icmp eq i32 %177, 0
  %179 = icmp slt i32 %174, 10
  %180 = or i1 %178, %179
  br i1 %180, label %originalBB41, label %originalBB41alteredBB

originalBB41:                                     ; preds = %172, %originalBB41alteredBB
  store i32 34, i32* %12, align 4, !dbg !5399
  %181 = load i32, i32* @x.99
  %182 = load i32, i32* @y.100
  %183 = sub i32 %181, 1
  %184 = mul i32 %181, %183
  %185 = urem i32 %184, 2
  %186 = icmp eq i32 %185, 0
  %187 = icmp slt i32 %182, 10
  %188 = or i1 %186, %187
  br i1 %188, label %originalBBpart243, label %originalBB41alteredBB

originalBBpart243:                                ; preds = %originalBB41
  br label %189, !dbg !5399

189:                                              ; preds = %originalBBpart243, %originalBBpart220, %originalBBpart212
  %190 = load i32, i32* @x.99
  %191 = load i32, i32* @y.100
  %192 = sub i32 %190, 1
  %193 = mul i32 %190, %192
  %194 = urem i32 %193, 2
  %195 = icmp eq i32 %194, 0
  %196 = icmp slt i32 %191, 10
  %197 = or i1 %195, %196
  br i1 %197, label %originalBB45, label %originalBB45alteredBB

originalBB45:                                     ; preds = %189, %originalBB45alteredBB
  %198 = load i32, i32* %12, align 4, !dbg !5400
  %199 = load i32, i32* @x.99
  %200 = load i32, i32* @y.100
  %201 = sub i32 %199, 1
  %202 = mul i32 %199, %201
  %203 = urem i32 %202, 2
  %204 = icmp eq i32 %203, 0
  %205 = icmp slt i32 %200, 10
  %206 = or i1 %204, %205
  br i1 %206, label %originalBBpart247, label %originalBB45alteredBB

originalBBpart247:                                ; preds = %originalBB45
  ret i32 %198, !dbg !5400

originalBBalteredBB:                              ; preds = %originalBB, %3
  %207 = alloca i32, align 4
  %208 = alloca i32, align 4
  %209 = alloca i8*, align 8
  %210 = alloca i64, align 8
  %211 = alloca i8*, align 8
  %212 = alloca i64, align 8
  store i32 %0, i32* %208, align 4
  call void @llvm.dbg.declare(metadata i32* %208, metadata !5401, metadata !DIExpression()), !dbg !5345
  store i8* %1, i8** %209, align 8
  call void @llvm.dbg.declare(metadata i8** %209, metadata !5404, metadata !DIExpression()), !dbg !5347
  store i64 %2, i64* %210, align 8
  call void @llvm.dbg.declare(metadata i64* %210, metadata !5405, metadata !DIExpression()), !dbg !5349
  call void @llvm.dbg.declare(metadata i8** %211, metadata !5406, metadata !DIExpression()), !dbg !5351
  %213 = load i32, i32* %208, align 4, !dbg !5352
  %214 = call i8* @setlocale_null_androidfix(i32 %213), !dbg !5353
  store i8* %214, i8** %211, align 8, !dbg !5351
  %215 = load i8*, i8** %211, align 8, !dbg !5354
  %216 = icmp eq i8* %215, null, !dbg !5356
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %30
  %217 = load i64, i64* %15, align 8, !dbg !5358
  %218 = icmp ugt i64 %217, 0, !dbg !5361
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %49
  %219 = load i8*, i8** %14, align 8, !dbg !5363
  %220 = getelementptr inbounds i8, i8* %219, i64 0, !dbg !5363
  store i8 0, i8* %220, align 1, !dbg !5364
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %68
  store i32 22, i32* %12, align 4, !dbg !5365
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %85
  %221 = load i8*, i8** %16, align 8, !dbg !5369
  %222 = call i64 @strlen(i8* %221) #13, !dbg !5370
  store i64 %222, i64* %17, align 8, !dbg !5368
  %223 = load i64, i64* %17, align 8, !dbg !5371
  %224 = load i64, i64* %15, align 8, !dbg !5373
  %225 = icmp ult i64 %223, %224, !dbg !5374
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %107
  %226 = load i8*, i8** %14, align 8, !dbg !5376
  %227 = load i8*, i8** %16, align 8, !dbg !5378
  %228 = load i64, i64* %17, align 8, !dbg !5379
  %_ = sub i64 %228, 1
  %gen = mul i64 %_, 1
  %229 = add i64 %228, 1, !dbg !5380
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %226, i8* align 1 %227, i64 %229, i1 false), !dbg !5381
  store i32 0, i32* %12, align 4, !dbg !5382
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %128
  %230 = load i64, i64* %15, align 8, !dbg !5383
  %231 = icmp ugt i64 %230, 0, !dbg !5386
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %147
  %232 = load i8*, i8** %14, align 8, !dbg !5388
  %233 = load i8*, i8** %16, align 8, !dbg !5390
  %234 = load i64, i64* %15, align 8, !dbg !5391
  %_27 = shl i64 %234, 1
  %_28 = shl i64 %234, 1
  %_29 = sub i64 %234, 1
  %gen30 = mul i64 %_29, 1
  %235 = sub i64 %234, 1, !dbg !5392
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %232, i8* align 1 %233, i64 %235, i1 false), !dbg !5393
  %236 = load i8*, i8** %14, align 8, !dbg !5394
  %237 = load i64, i64* %15, align 8, !dbg !5395
  %_31 = sub i64 %237, 1
  %gen32 = mul i64 %_31, 1
  %_33 = sub i64 0, %237
  %gen34 = add i64 %_33, 1
  %_35 = shl i64 %237, 1
  %_36 = shl i64 %237, 1
  %_37 = shl i64 %237, 1
  %238 = sub i64 %237, 1, !dbg !5396
  %239 = getelementptr inbounds i8, i8* %236, i64 %238, !dbg !5394
  store i8 0, i8* %239, align 1, !dbg !5397
  br label %originalBB26

originalBB41alteredBB:                            ; preds = %originalBB41, %172
  store i32 34, i32* %12, align 4, !dbg !5399
  br label %originalBB41

originalBB45alteredBB:                            ; preds = %originalBB45, %189
  %240 = load i32, i32* %12, align 4, !dbg !5400
  br label %originalBB45
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @setlocale_null_androidfix(i32) #4 !dbg !5407 {
  %2 = load i32, i32* @x.101
  %3 = load i32, i32* @y.102
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i32, align 4
  %11 = alloca i8*, align 8
  store i32 %0, i32* %10, align 4
  call void @llvm.dbg.declare(metadata i32* %10, metadata !5410, metadata !DIExpression()), !dbg !5411
  call void @llvm.dbg.declare(metadata i8** %11, metadata !5412, metadata !DIExpression()), !dbg !5413
  %12 = load i32, i32* %10, align 4, !dbg !5414
  %13 = call i8* @setlocale(i32 %12, i8* null) #10, !dbg !5415
  store i8* %13, i8** %11, align 8, !dbg !5413
  %14 = load i8*, i8** %11, align 8, !dbg !5416
  %15 = load i32, i32* @x.101
  %16 = load i32, i32* @y.102
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i8* %14, !dbg !5417

originalBBalteredBB:                              ; preds = %originalBB, %1
  %23 = alloca i32, align 4
  %24 = alloca i8*, align 8
  store i32 %0, i32* %23, align 4
  call void @llvm.dbg.declare(metadata i32* %23, metadata !5418, metadata !DIExpression()), !dbg !5411
  call void @llvm.dbg.declare(metadata i8** %24, metadata !5421, metadata !DIExpression()), !dbg !5413
  %25 = load i32, i32* %23, align 4, !dbg !5414
  %26 = call i8* @setlocale(i32 %25, i8* null) #10, !dbg !5415
  store i8* %26, i8** %24, align 8, !dbg !5413
  %27 = load i8*, i8** %24, align 8, !dbg !5416
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rpl_fclose(%struct._IO_FILE* nonnull) #4 !dbg !5422 {
  %2 = load i32, i32* @x.103
  %3 = load i32, i32* @y.104
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i32, align 4
  %11 = alloca %struct._IO_FILE*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  store %struct._IO_FILE* %0, %struct._IO_FILE** %11, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %11, metadata !5460, metadata !DIExpression()), !dbg !5461
  call void @llvm.dbg.declare(metadata i32* %12, metadata !5462, metadata !DIExpression()), !dbg !5463
  store i32 0, i32* %12, align 4, !dbg !5463
  call void @llvm.dbg.declare(metadata i32* %13, metadata !5464, metadata !DIExpression()), !dbg !5465
  call void @llvm.dbg.declare(metadata i32* %14, metadata !5466, metadata !DIExpression()), !dbg !5467
  store i32 0, i32* %14, align 4, !dbg !5467
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !5468
  %16 = call i32 @fileno(%struct._IO_FILE* %15) #10, !dbg !5469
  store i32 %16, i32* %13, align 4, !dbg !5470
  %17 = load i32, i32* %13, align 4, !dbg !5471
  %18 = icmp slt i32 %17, 0, !dbg !5473
  %19 = load i32, i32* @x.103
  %20 = load i32, i32* @y.104
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %18, label %27, label %46, !dbg !5474

27:                                               ; preds = %originalBBpart2
  %28 = load i32, i32* @x.103
  %29 = load i32, i32* @y.104
  %30 = sub i32 %28, 1
  %31 = mul i32 %28, %30
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %33, %34
  br i1 %35, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %27, %originalBB1alteredBB
  %36 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !5475
  %37 = call i32 @fclose(%struct._IO_FILE* %36), !dbg !5476
  store i32 %37, i32* %10, align 4, !dbg !5477
  %38 = load i32, i32* @x.103
  %39 = load i32, i32* @y.104
  %40 = sub i32 %38, 1
  %41 = mul i32 %38, %40
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %43, %44
  br i1 %45, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %184, !dbg !5477

46:                                               ; preds = %originalBBpart2
  %47 = load i32, i32* @x.103
  %48 = load i32, i32* @y.104
  %49 = sub i32 %47, 1
  %50 = mul i32 %47, %49
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %48, 10
  %54 = or i1 %52, %53
  br i1 %54, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %46, %originalBB6alteredBB
  %55 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !5478
  %56 = call i32 @__freading(%struct._IO_FILE* %55) #10, !dbg !5478
  %57 = icmp ne i32 %56, 0, !dbg !5478
  %58 = load i32, i32* @x.103
  %59 = load i32, i32* @y.104
  %60 = sub i32 %58, 1
  %61 = mul i32 %58, %60
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %59, 10
  %65 = or i1 %63, %64
  br i1 %65, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %57, label %66, label %87, !dbg !5480

66:                                               ; preds = %originalBBpart28
  %67 = load i32, i32* @x.103
  %68 = load i32, i32* @y.104
  %69 = sub i32 %67, 1
  %70 = mul i32 %67, %69
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %68, 10
  %74 = or i1 %72, %73
  br i1 %74, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %66, %originalBB10alteredBB
  %75 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !5481
  %76 = call i32 @fileno(%struct._IO_FILE* %75) #10, !dbg !5482
  %77 = call i64 @lseek(i32 %76, i64 0, i32 1) #10, !dbg !5483
  %78 = icmp ne i64 %77, -1, !dbg !5484
  %79 = load i32, i32* @x.103
  %80 = load i32, i32* @y.104
  %81 = sub i32 %79, 1
  %82 = mul i32 %79, %81
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %80, 10
  %86 = or i1 %84, %85
  br i1 %86, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %78, label %87, label %126, !dbg !5485

87:                                               ; preds = %originalBBpart212, %originalBBpart28
  %88 = load i32, i32* @x.103
  %89 = load i32, i32* @y.104
  %90 = sub i32 %88, 1
  %91 = mul i32 %88, %90
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %89, 10
  %95 = or i1 %93, %94
  br i1 %95, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %87, %originalBB14alteredBB
  %96 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !5486
  %97 = call i32 @rpl_fflush(%struct._IO_FILE* %96), !dbg !5487
  %98 = icmp ne i32 %97, 0, !dbg !5487
  %99 = load i32, i32* @x.103
  %100 = load i32, i32* @y.104
  %101 = sub i32 %99, 1
  %102 = mul i32 %99, %101
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %100, 10
  %106 = or i1 %104, %105
  br i1 %106, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %98, label %107, label %126, !dbg !5488

107:                                              ; preds = %originalBBpart216
  %108 = load i32, i32* @x.103
  %109 = load i32, i32* @y.104
  %110 = sub i32 %108, 1
  %111 = mul i32 %108, %110
  %112 = urem i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %109, 10
  %115 = or i1 %113, %114
  br i1 %115, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %107, %originalBB18alteredBB
  %116 = call i32* @__errno_location() #15, !dbg !5489
  %117 = load i32, i32* %116, align 4, !dbg !5489
  store i32 %117, i32* %12, align 4, !dbg !5490
  %118 = load i32, i32* @x.103
  %119 = load i32, i32* @y.104
  %120 = sub i32 %118, 1
  %121 = mul i32 %118, %120
  %122 = urem i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = icmp slt i32 %119, 10
  %125 = or i1 %123, %124
  br i1 %125, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %126, !dbg !5491

126:                                              ; preds = %originalBBpart220, %originalBBpart216, %originalBBpart212
  %127 = load i32, i32* @x.103
  %128 = load i32, i32* @y.104
  %129 = sub i32 %127, 1
  %130 = mul i32 %127, %129
  %131 = urem i32 %130, 2
  %132 = icmp eq i32 %131, 0
  %133 = icmp slt i32 %128, 10
  %134 = or i1 %132, %133
  br i1 %134, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %126, %originalBB22alteredBB
  %135 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !5492
  %136 = call i32 @fclose(%struct._IO_FILE* %135), !dbg !5493
  store i32 %136, i32* %14, align 4, !dbg !5494
  %137 = load i32, i32* %12, align 4, !dbg !5495
  %138 = icmp ne i32 %137, 0, !dbg !5497
  %139 = load i32, i32* @x.103
  %140 = load i32, i32* @y.104
  %141 = sub i32 %139, 1
  %142 = mul i32 %139, %141
  %143 = urem i32 %142, 2
  %144 = icmp eq i32 %143, 0
  %145 = icmp slt i32 %140, 10
  %146 = or i1 %144, %145
  br i1 %146, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br i1 %138, label %147, label %166, !dbg !5498

147:                                              ; preds = %originalBBpart224
  %148 = load i32, i32* @x.103
  %149 = load i32, i32* @y.104
  %150 = sub i32 %148, 1
  %151 = mul i32 %148, %150
  %152 = urem i32 %151, 2
  %153 = icmp eq i32 %152, 0
  %154 = icmp slt i32 %149, 10
  %155 = or i1 %153, %154
  br i1 %155, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %147, %originalBB26alteredBB
  %156 = load i32, i32* %12, align 4, !dbg !5499
  %157 = call i32* @__errno_location() #15, !dbg !5501
  store i32 %156, i32* %157, align 4, !dbg !5502
  store i32 -1, i32* %14, align 4, !dbg !5503
  %158 = load i32, i32* @x.103
  %159 = load i32, i32* @y.104
  %160 = sub i32 %158, 1
  %161 = mul i32 %158, %160
  %162 = urem i32 %161, 2
  %163 = icmp eq i32 %162, 0
  %164 = icmp slt i32 %159, 10
  %165 = or i1 %163, %164
  br i1 %165, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br label %166, !dbg !5504

166:                                              ; preds = %originalBBpart228, %originalBBpart224
  %167 = load i32, i32* @x.103
  %168 = load i32, i32* @y.104
  %169 = sub i32 %167, 1
  %170 = mul i32 %167, %169
  %171 = urem i32 %170, 2
  %172 = icmp eq i32 %171, 0
  %173 = icmp slt i32 %168, 10
  %174 = or i1 %172, %173
  br i1 %174, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %166, %originalBB30alteredBB
  %175 = load i32, i32* %14, align 4, !dbg !5505
  store i32 %175, i32* %10, align 4, !dbg !5506
  %176 = load i32, i32* @x.103
  %177 = load i32, i32* @y.104
  %178 = sub i32 %176, 1
  %179 = mul i32 %176, %178
  %180 = urem i32 %179, 2
  %181 = icmp eq i32 %180, 0
  %182 = icmp slt i32 %177, 10
  %183 = or i1 %181, %182
  br i1 %183, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br label %184, !dbg !5506

184:                                              ; preds = %originalBBpart232, %originalBBpart24
  %185 = load i32, i32* @x.103
  %186 = load i32, i32* @y.104
  %187 = sub i32 %185, 1
  %188 = mul i32 %185, %187
  %189 = urem i32 %188, 2
  %190 = icmp eq i32 %189, 0
  %191 = icmp slt i32 %186, 10
  %192 = or i1 %190, %191
  br i1 %192, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %184, %originalBB34alteredBB
  %193 = load i32, i32* %10, align 4, !dbg !5507
  %194 = load i32, i32* @x.103
  %195 = load i32, i32* @y.104
  %196 = sub i32 %194, 1
  %197 = mul i32 %194, %196
  %198 = urem i32 %197, 2
  %199 = icmp eq i32 %198, 0
  %200 = icmp slt i32 %195, 10
  %201 = or i1 %199, %200
  br i1 %201, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  ret i32 %193, !dbg !5507

originalBBalteredBB:                              ; preds = %originalBB, %1
  %202 = alloca i32, align 4
  %203 = alloca %struct._IO_FILE*, align 8
  %204 = alloca i32, align 4
  %205 = alloca i32, align 4
  %206 = alloca i32, align 4
  store %struct._IO_FILE* %0, %struct._IO_FILE** %203, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %203, metadata !5508, metadata !DIExpression()), !dbg !5461
  call void @llvm.dbg.declare(metadata i32* %204, metadata !5547, metadata !DIExpression()), !dbg !5463
  store i32 0, i32* %204, align 4, !dbg !5463
  call void @llvm.dbg.declare(metadata i32* %205, metadata !5548, metadata !DIExpression()), !dbg !5465
  call void @llvm.dbg.declare(metadata i32* %206, metadata !5549, metadata !DIExpression()), !dbg !5467
  store i32 0, i32* %206, align 4, !dbg !5467
  %207 = load %struct._IO_FILE*, %struct._IO_FILE** %203, align 8, !dbg !5468
  %208 = call i32 @fileno(%struct._IO_FILE* %207) #10, !dbg !5469
  store i32 %208, i32* %205, align 4, !dbg !5470
  %209 = load i32, i32* %205, align 4, !dbg !5471
  %210 = icmp slt i32 %209, 0, !dbg !5473
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %27
  %211 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !5475
  %212 = call i32 @fclose(%struct._IO_FILE* %211), !dbg !5476
  store i32 %212, i32* %10, align 4, !dbg !5477
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %46
  %213 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !5478
  %214 = call i32 @__freading(%struct._IO_FILE* %213) #10, !dbg !5478
  %215 = icmp ne i32 %214, 0, !dbg !5478
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %66
  %216 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !5481
  %217 = call i32 @fileno(%struct._IO_FILE* %216) #10, !dbg !5482
  %218 = call i64 @lseek(i32 %217, i64 0, i32 1) #10, !dbg !5483
  %219 = icmp ne i64 %218, -1, !dbg !5484
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %87
  %220 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !5486
  %221 = call i32 @rpl_fflush(%struct._IO_FILE* %220), !dbg !5487
  %222 = icmp ne i32 %221, 0, !dbg !5487
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %107
  %223 = call i32* @__errno_location() #15, !dbg !5489
  %224 = load i32, i32* %223, align 4, !dbg !5489
  store i32 %224, i32* %12, align 4, !dbg !5490
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %126
  %225 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !5492
  %226 = call i32 @fclose(%struct._IO_FILE* %225), !dbg !5493
  store i32 %226, i32* %14, align 4, !dbg !5494
  %227 = load i32, i32* %12, align 4, !dbg !5495
  %228 = icmp ne i32 %227, 0, !dbg !5497
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %147
  %229 = load i32, i32* %12, align 4, !dbg !5499
  %230 = call i32* @__errno_location() #15, !dbg !5501
  store i32 %229, i32* %230, align 4, !dbg !5502
  store i32 -1, i32* %14, align 4, !dbg !5503
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %166
  %231 = load i32, i32* %14, align 4, !dbg !5505
  store i32 %231, i32* %10, align 4, !dbg !5506
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %184
  %232 = load i32, i32* %10, align 4, !dbg !5507
  br label %originalBB34
}

; Function Attrs: nounwind
declare dso_local i32 @fileno(%struct._IO_FILE*) #2

declare dso_local i32 @fclose(%struct._IO_FILE*) #3

; Function Attrs: nounwind
declare dso_local i32 @__freading(%struct._IO_FILE*) #2

; Function Attrs: nounwind
declare dso_local i64 @lseek(i32, i64, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rpl_fflush(%struct._IO_FILE*) #4 !dbg !5550 {
  %2 = load i32, i32* @x.105
  %3 = load i32, i32* @y.106
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i32, align 4
  %11 = alloca %struct._IO_FILE*, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %11, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %11, metadata !5588, metadata !DIExpression()), !dbg !5589
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !5590
  %13 = icmp eq %struct._IO_FILE* %12, null, !dbg !5592
  %14 = load i32, i32* @x.105
  %15 = load i32, i32* @y.106
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %13, label %42, label %22, !dbg !5593

22:                                               ; preds = %originalBBpart2
  %23 = load i32, i32* @x.105
  %24 = load i32, i32* @y.106
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %22, %originalBB1alteredBB
  %31 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !5594
  %32 = call i32 @__freading(%struct._IO_FILE* %31) #10, !dbg !5594
  %33 = icmp ne i32 %32, 0, !dbg !5594
  %34 = load i32, i32* @x.105
  %35 = load i32, i32* @y.106
  %36 = sub i32 %34, 1
  %37 = mul i32 %34, %36
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %39, %40
  br i1 %41, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %33, label %61, label %42, !dbg !5595

42:                                               ; preds = %originalBBpart24, %originalBBpart2
  %43 = load i32, i32* @x.105
  %44 = load i32, i32* @y.106
  %45 = sub i32 %43, 1
  %46 = mul i32 %43, %45
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %48, %49
  br i1 %50, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %42, %originalBB6alteredBB
  %51 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !5596
  %52 = call i32 @fflush(%struct._IO_FILE* %51), !dbg !5597
  store i32 %52, i32* %10, align 4, !dbg !5598
  %53 = load i32, i32* @x.105
  %54 = load i32, i32* @y.106
  %55 = sub i32 %53, 1
  %56 = mul i32 %53, %55
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %54, 10
  %60 = or i1 %58, %59
  br i1 %60, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %81, !dbg !5598

61:                                               ; preds = %originalBBpart24
  %62 = load i32, i32* @x.105
  %63 = load i32, i32* @y.106
  %64 = sub i32 %62, 1
  %65 = mul i32 %62, %64
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %63, 10
  %69 = or i1 %67, %68
  br i1 %69, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %61, %originalBB10alteredBB
  %70 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !5599
  call void @clear_ungetc_buffer_preserving_position(%struct._IO_FILE* %70), !dbg !5600
  %71 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !5601
  %72 = call i32 @fflush(%struct._IO_FILE* %71), !dbg !5602
  store i32 %72, i32* %10, align 4, !dbg !5603
  %73 = load i32, i32* @x.105
  %74 = load i32, i32* @y.106
  %75 = sub i32 %73, 1
  %76 = mul i32 %73, %75
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %74, 10
  %80 = or i1 %78, %79
  br i1 %80, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %81, !dbg !5603

81:                                               ; preds = %originalBBpart212, %originalBBpart28
  %82 = load i32, i32* @x.105
  %83 = load i32, i32* @y.106
  %84 = sub i32 %82, 1
  %85 = mul i32 %82, %84
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %83, 10
  %89 = or i1 %87, %88
  br i1 %89, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %81, %originalBB14alteredBB
  %90 = load i32, i32* %10, align 4, !dbg !5604
  %91 = load i32, i32* @x.105
  %92 = load i32, i32* @y.106
  %93 = sub i32 %91, 1
  %94 = mul i32 %91, %93
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %92, 10
  %98 = or i1 %96, %97
  br i1 %98, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  ret i32 %90, !dbg !5604

originalBBalteredBB:                              ; preds = %originalBB, %1
  %99 = alloca i32, align 4
  %100 = alloca %struct._IO_FILE*, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %100, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %100, metadata !5605, metadata !DIExpression()), !dbg !5589
  %101 = load %struct._IO_FILE*, %struct._IO_FILE** %100, align 8, !dbg !5590
  %102 = icmp eq %struct._IO_FILE* %101, null, !dbg !5592
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %22
  %103 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !5594
  %104 = call i32 @__freading(%struct._IO_FILE* %103) #10, !dbg !5594
  %105 = icmp ne i32 %104, 0, !dbg !5594
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %42
  %106 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !5596
  %107 = call i32 @fflush(%struct._IO_FILE* %106), !dbg !5597
  store i32 %107, i32* %10, align 4, !dbg !5598
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %61
  %108 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !5599
  call void @clear_ungetc_buffer_preserving_position(%struct._IO_FILE* %108), !dbg !5600
  %109 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !dbg !5601
  %110 = call i32 @fflush(%struct._IO_FILE* %109), !dbg !5602
  store i32 %110, i32* %10, align 4, !dbg !5603
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %81
  %111 = load i32, i32* %10, align 4, !dbg !5604
  br label %originalBB14
}

declare dso_local i32 @fflush(%struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @clear_ungetc_buffer_preserving_position(%struct._IO_FILE*) #4 !dbg !5644 {
  %2 = load i32, i32* @x.107
  %3 = load i32, i32* @y.108
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca %struct._IO_FILE*, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %10, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %10, metadata !5647, metadata !DIExpression()), !dbg !5648
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %10, align 8, !dbg !5649
  %12 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %11, i32 0, i32 0, !dbg !5651
  %13 = load i32, i32* %12, align 8, !dbg !5651
  %14 = and i32 %13, 256, !dbg !5652
  %15 = icmp ne i32 %14, 0, !dbg !5652
  %16 = load i32, i32* @x.107
  %17 = load i32, i32* @y.108
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %15, label %24, label %43, !dbg !5653

24:                                               ; preds = %originalBBpart2
  %25 = load i32, i32* @x.107
  %26 = load i32, i32* @y.108
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBB3, label %originalBB3alteredBB

originalBB3:                                      ; preds = %24, %originalBB3alteredBB
  %33 = load %struct._IO_FILE*, %struct._IO_FILE** %10, align 8, !dbg !5654
  %34 = call i32 @rpl_fseeko(%struct._IO_FILE* %33, i64 0, i32 1), !dbg !5655
  %35 = load i32, i32* @x.107
  %36 = load i32, i32* @y.108
  %37 = sub i32 %35, 1
  %38 = mul i32 %35, %37
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %40, %41
  br i1 %42, label %originalBBpart25, label %originalBB3alteredBB

originalBBpart25:                                 ; preds = %originalBB3
  br label %43, !dbg !5655

43:                                               ; preds = %originalBBpart25, %originalBBpart2
  %44 = load i32, i32* @x.107
  %45 = load i32, i32* @y.108
  %46 = sub i32 %44, 1
  %47 = mul i32 %44, %46
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %45, 10
  %51 = or i1 %49, %50
  br i1 %51, label %originalBB7, label %originalBB7alteredBB

originalBB7:                                      ; preds = %43, %originalBB7alteredBB
  %52 = load i32, i32* @x.107
  %53 = load i32, i32* @y.108
  %54 = sub i32 %52, 1
  %55 = mul i32 %52, %54
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %53, 10
  %59 = or i1 %57, %58
  br i1 %59, label %originalBBpart29, label %originalBB7alteredBB

originalBBpart29:                                 ; preds = %originalBB7
  ret void, !dbg !5656

originalBBalteredBB:                              ; preds = %originalBB, %1
  %60 = alloca %struct._IO_FILE*, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %60, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %60, metadata !5657, metadata !DIExpression()), !dbg !5648
  %61 = load %struct._IO_FILE*, %struct._IO_FILE** %60, align 8, !dbg !5649
  %62 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %61, i32 0, i32 0, !dbg !5651
  %63 = load i32, i32* %62, align 8, !dbg !5651
  %_ = shl i32 %63, 256
  %_1 = shl i32 %63, 256
  %_2 = sub i32 %63, 256
  %gen = mul i32 %_2, 256
  %64 = and i32 %63, 256, !dbg !5652
  %65 = icmp ne i32 %64, 0, !dbg !5652
  br label %originalBB

originalBB3alteredBB:                             ; preds = %originalBB3, %24
  %66 = load %struct._IO_FILE*, %struct._IO_FILE** %10, align 8, !dbg !5654
  %67 = call i32 @rpl_fseeko(%struct._IO_FILE* %66, i64 0, i32 1), !dbg !5655
  br label %originalBB3

originalBB7alteredBB:                             ; preds = %originalBB7, %43
  br label %originalBB7
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rpl_fseeko(%struct._IO_FILE* nonnull, i64, i32) #4 !dbg !5696 {
  %4 = load i32, i32* @x.109
  %5 = load i32, i32* @y.110
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca i32, align 4
  %13 = alloca %struct._IO_FILE*, align 8
  %14 = alloca i64, align 8
  %15 = alloca i32, align 4
  %16 = alloca i64, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %13, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %13, metadata !5735, metadata !DIExpression()), !dbg !5736
  store i64 %1, i64* %14, align 8
  call void @llvm.dbg.declare(metadata i64* %14, metadata !5737, metadata !DIExpression()), !dbg !5738
  store i32 %2, i32* %15, align 4
  call void @llvm.dbg.declare(metadata i32* %15, metadata !5739, metadata !DIExpression()), !dbg !5740
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !5741
  %18 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %17, i32 0, i32 2, !dbg !5743
  %19 = load i8*, i8** %18, align 8, !dbg !5743
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !5744
  %21 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %20, i32 0, i32 1, !dbg !5745
  %22 = load i8*, i8** %21, align 8, !dbg !5745
  %23 = icmp eq i8* %19, %22, !dbg !5746
  %24 = load i32, i32* @x.109
  %25 = load i32, i32* @y.110
  %26 = sub i32 %24, 1
  %27 = mul i32 %24, %26
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %29, %30
  br i1 %31, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %23, label %32, label %126, !dbg !5747

32:                                               ; preds = %originalBBpart2
  %33 = load i32, i32* @x.109
  %34 = load i32, i32* @y.110
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %32, %originalBB1alteredBB
  %41 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !5748
  %42 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %41, i32 0, i32 5, !dbg !5749
  %43 = load i8*, i8** %42, align 8, !dbg !5749
  %44 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !5750
  %45 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %44, i32 0, i32 4, !dbg !5751
  %46 = load i8*, i8** %45, align 8, !dbg !5751
  %47 = icmp eq i8* %43, %46, !dbg !5752
  %48 = load i32, i32* @x.109
  %49 = load i32, i32* @y.110
  %50 = sub i32 %48, 1
  %51 = mul i32 %48, %50
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %53, %54
  br i1 %55, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %47, label %56, label %126, !dbg !5753

56:                                               ; preds = %originalBBpart24
  %57 = load i32, i32* @x.109
  %58 = load i32, i32* @y.110
  %59 = sub i32 %57, 1
  %60 = mul i32 %57, %59
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %58, 10
  %64 = or i1 %62, %63
  br i1 %64, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %56, %originalBB6alteredBB
  %65 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !5754
  %66 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %65, i32 0, i32 9, !dbg !5755
  %67 = load i8*, i8** %66, align 8, !dbg !5755
  %68 = icmp eq i8* %67, null, !dbg !5756
  %69 = load i32, i32* @x.109
  %70 = load i32, i32* @y.110
  %71 = sub i32 %69, 1
  %72 = mul i32 %69, %71
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %74, %75
  br i1 %76, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %68, label %77, label %126, !dbg !5757

77:                                               ; preds = %originalBBpart28
  call void @llvm.dbg.declare(metadata i64* %16, metadata !5758, metadata !DIExpression()), !dbg !5760
  %78 = load i32, i32* @x.109
  %79 = load i32, i32* @y.110
  %80 = sub i32 %78, 1
  %81 = mul i32 %78, %80
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %79, 10
  %85 = or i1 %83, %84
  br i1 %85, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %77, %originalBB10alteredBB
  %86 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !5761
  %87 = call i32 @fileno(%struct._IO_FILE* %86) #10, !dbg !5762
  %88 = load i64, i64* %14, align 8, !dbg !5763
  %89 = load i32, i32* %15, align 4, !dbg !5764
  %90 = call i64 @lseek(i32 %87, i64 %88, i32 %89) #10, !dbg !5765
  store i64 %90, i64* %16, align 8, !dbg !5760
  %91 = load i64, i64* %16, align 8, !dbg !5766
  %92 = icmp eq i64 %91, -1, !dbg !5768
  %93 = load i32, i32* @x.109
  %94 = load i32, i32* @y.110
  %95 = sub i32 %93, 1
  %96 = mul i32 %93, %95
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %94, 10
  %100 = or i1 %98, %99
  br i1 %100, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %92, label %101, label %118, !dbg !5769

101:                                              ; preds = %originalBBpart212
  %102 = load i32, i32* @x.109
  %103 = load i32, i32* @y.110
  %104 = sub i32 %102, 1
  %105 = mul i32 %102, %104
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %103, 10
  %109 = or i1 %107, %108
  br i1 %109, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %101, %originalBB14alteredBB
  store i32 -1, i32* %12, align 4, !dbg !5770
  %110 = load i32, i32* @x.109
  %111 = load i32, i32* @y.110
  %112 = sub i32 %110, 1
  %113 = mul i32 %110, %112
  %114 = urem i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %111, 10
  %117 = or i1 %115, %116
  br i1 %117, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %147, !dbg !5770

118:                                              ; preds = %originalBBpart212
  %119 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !5772
  %120 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %119, i32 0, i32 0, !dbg !5773
  %121 = load i32, i32* %120, align 8, !dbg !5774
  %122 = and i32 %121, -17, !dbg !5774
  store i32 %122, i32* %120, align 8, !dbg !5774
  %123 = load i64, i64* %16, align 8, !dbg !5775
  %124 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !5776
  %125 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %124, i32 0, i32 21, !dbg !5777
  store i64 %123, i64* %125, align 8, !dbg !5778
  store i32 0, i32* %12, align 4, !dbg !5779
  br label %147, !dbg !5779

126:                                              ; preds = %originalBBpart28, %originalBBpart24, %originalBBpart2
  %127 = load i32, i32* @x.109
  %128 = load i32, i32* @y.110
  %129 = sub i32 %127, 1
  %130 = mul i32 %127, %129
  %131 = urem i32 %130, 2
  %132 = icmp eq i32 %131, 0
  %133 = icmp slt i32 %128, 10
  %134 = or i1 %132, %133
  br i1 %134, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %126, %originalBB18alteredBB
  %135 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !5780
  %136 = load i64, i64* %14, align 8, !dbg !5781
  %137 = load i32, i32* %15, align 4, !dbg !5782
  %138 = call i32 @fseeko(%struct._IO_FILE* %135, i64 %136, i32 %137), !dbg !5783
  store i32 %138, i32* %12, align 4, !dbg !5784
  %139 = load i32, i32* @x.109
  %140 = load i32, i32* @y.110
  %141 = sub i32 %139, 1
  %142 = mul i32 %139, %141
  %143 = urem i32 %142, 2
  %144 = icmp eq i32 %143, 0
  %145 = icmp slt i32 %140, 10
  %146 = or i1 %144, %145
  br i1 %146, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %147, !dbg !5784

147:                                              ; preds = %originalBBpart220, %118, %originalBBpart216
  %148 = load i32, i32* @x.109
  %149 = load i32, i32* @y.110
  %150 = sub i32 %148, 1
  %151 = mul i32 %148, %150
  %152 = urem i32 %151, 2
  %153 = icmp eq i32 %152, 0
  %154 = icmp slt i32 %149, 10
  %155 = or i1 %153, %154
  br i1 %155, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %147, %originalBB22alteredBB
  %156 = load i32, i32* %12, align 4, !dbg !5785
  %157 = load i32, i32* @x.109
  %158 = load i32, i32* @y.110
  %159 = sub i32 %157, 1
  %160 = mul i32 %157, %159
  %161 = urem i32 %160, 2
  %162 = icmp eq i32 %161, 0
  %163 = icmp slt i32 %158, 10
  %164 = or i1 %162, %163
  br i1 %164, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  ret i32 %156, !dbg !5785

originalBBalteredBB:                              ; preds = %originalBB, %3
  %165 = alloca i32, align 4
  %166 = alloca %struct._IO_FILE*, align 8
  %167 = alloca i64, align 8
  %168 = alloca i32, align 4
  %169 = alloca i64, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %166, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %166, metadata !5786, metadata !DIExpression()), !dbg !5736
  store i64 %1, i64* %167, align 8
  call void @llvm.dbg.declare(metadata i64* %167, metadata !5825, metadata !DIExpression()), !dbg !5738
  store i32 %2, i32* %168, align 4
  call void @llvm.dbg.declare(metadata i32* %168, metadata !5826, metadata !DIExpression()), !dbg !5740
  %170 = load %struct._IO_FILE*, %struct._IO_FILE** %166, align 8, !dbg !5741
  %171 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %170, i32 0, i32 2, !dbg !5743
  %172 = load i8*, i8** %171, align 8, !dbg !5743
  %173 = load %struct._IO_FILE*, %struct._IO_FILE** %166, align 8, !dbg !5744
  %174 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %173, i32 0, i32 1, !dbg !5745
  %175 = load i8*, i8** %174, align 8, !dbg !5745
  %176 = icmp eq i8* %172, %175, !dbg !5746
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %32
  %177 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !5748
  %178 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %177, i32 0, i32 5, !dbg !5749
  %179 = load i8*, i8** %178, align 8, !dbg !5749
  %180 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !5750
  %181 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %180, i32 0, i32 4, !dbg !5751
  %182 = load i8*, i8** %181, align 8, !dbg !5751
  %183 = icmp eq i8* %179, %182, !dbg !5752
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %56
  %184 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !5754
  %185 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %184, i32 0, i32 9, !dbg !5755
  %186 = load i8*, i8** %185, align 8, !dbg !5755
  %187 = icmp eq i8* %186, null, !dbg !5756
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %77
  %188 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !5761
  %189 = call i32 @fileno(%struct._IO_FILE* %188) #10, !dbg !5762
  %190 = load i64, i64* %14, align 8, !dbg !5763
  %191 = load i32, i32* %15, align 4, !dbg !5764
  %192 = call i64 @lseek(i32 %189, i64 %190, i32 %191) #10, !dbg !5765
  store i64 %192, i64* %16, align 8, !dbg !5760
  %193 = load i64, i64* %16, align 8, !dbg !5766
  %194 = icmp eq i64 %193, -1, !dbg !5768
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %101
  store i32 -1, i32* %12, align 4, !dbg !5770
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %126
  %195 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !5780
  %196 = load i64, i64* %14, align 8, !dbg !5781
  %197 = load i32, i32* %15, align 4, !dbg !5782
  %198 = call i32 @fseeko(%struct._IO_FILE* %195, i64 %196, i32 %197), !dbg !5783
  store i32 %198, i32* %12, align 4, !dbg !5784
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %147
  %199 = load i32, i32* %12, align 4, !dbg !5785
  br label %originalBB22
}

declare dso_local i32 @fseeko(%struct._IO_FILE*, i64, i32) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @c_tolower(i32) #4 !dbg !5827 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !5831, metadata !DIExpression()), !dbg !5832
  %4 = load i32, i32* %3, align 4, !dbg !5833
  switch i32 %4, label %25 [
    i32 65, label %5
    i32 66, label %5
    i32 67, label %5
    i32 68, label %5
    i32 69, label %5
    i32 70, label %5
    i32 71, label %5
    i32 72, label %5
    i32 73, label %5
    i32 74, label %5
    i32 75, label %5
    i32 76, label %5
    i32 77, label %5
    i32 78, label %5
    i32 79, label %5
    i32 80, label %5
    i32 81, label %5
    i32 82, label %5
    i32 83, label %5
    i32 84, label %5
    i32 85, label %5
    i32 86, label %5
    i32 87, label %5
    i32 88, label %5
    i32 89, label %5
    i32 90, label %5
  ], !dbg !5834

5:                                                ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1
  %6 = load i32, i32* @x.111
  %7 = load i32, i32* @y.112
  %8 = sub i32 %6, 1
  %9 = mul i32 %6, %8
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %7, 10
  %13 = or i1 %11, %12
  br i1 %13, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %5, %originalBBalteredBB
  %14 = load i32, i32* %3, align 4, !dbg !5835
  %15 = sub nsw i32 %14, 65, !dbg !5837
  %16 = add nsw i32 %15, 97, !dbg !5838
  store i32 %16, i32* %2, align 4, !dbg !5839
  %17 = load i32, i32* @x.111
  %18 = load i32, i32* @y.112
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %43, !dbg !5839

25:                                               ; preds = %1
  %26 = load i32, i32* @x.111
  %27 = load i32, i32* @y.112
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %25, %originalBB10alteredBB
  %34 = load i32, i32* %3, align 4, !dbg !5840
  store i32 %34, i32* %2, align 4, !dbg !5841
  %35 = load i32, i32* @x.111
  %36 = load i32, i32* @y.112
  %37 = sub i32 %35, 1
  %38 = mul i32 %35, %37
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %40, %41
  br i1 %42, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %43, !dbg !5841

43:                                               ; preds = %originalBBpart212, %originalBBpart2
  %44 = load i32, i32* %2, align 4, !dbg !5842
  ret i32 %44, !dbg !5842

originalBBalteredBB:                              ; preds = %originalBB, %5
  %45 = load i32, i32* %3, align 4, !dbg !5835
  %_ = shl i32 %45, 65
  %_1 = sub i32 0, %45
  %gen = add i32 %_1, 65
  %46 = sub nsw i32 %45, 65, !dbg !5837
  %_2 = shl i32 %46, 97
  %_3 = sub i32 0, %46
  %gen4 = add i32 %_3, 97
  %_5 = shl i32 %46, 97
  %_6 = sub i32 %46, 97
  %gen7 = mul i32 %_6, 97
  %_8 = sub i32 %46, 97
  %gen9 = mul i32 %_8, 97
  %47 = add nsw i32 %46, 97, !dbg !5838
  store i32 %47, i32* %2, align 4, !dbg !5839
  br label %originalBB

originalBB10alteredBB:                            ; preds = %originalBB10, %25
  %48 = load i32, i32* %3, align 4, !dbg !5840
  store i32 %48, i32* %2, align 4, !dbg !5841
  br label %originalBB10
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @getugroups(i32, i32*, i8*, i32) #4 !dbg !5843 {
  %5 = load i32, i32* @x.113
  %6 = load i32, i32* @y.114
  %7 = sub i32 %5, 1
  %8 = mul i32 %5, %7
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %6, 10
  %12 = or i1 %10, %11
  br i1 %12, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %4, %originalBBalteredBB
  %13 = alloca i32, align 4
  %14 = alloca i32*, align 8
  %15 = alloca i8*, align 8
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i8**, align 8
  %19 = alloca %struct.group*, align 8
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  store i32 %0, i32* %13, align 4
  call void @llvm.dbg.declare(metadata i32* %13, metadata !5847, metadata !DIExpression()), !dbg !5848
  store i32* %1, i32** %14, align 8
  call void @llvm.dbg.declare(metadata i32** %14, metadata !5849, metadata !DIExpression()), !dbg !5850
  store i8* %2, i8** %15, align 8
  call void @llvm.dbg.declare(metadata i8** %15, metadata !5851, metadata !DIExpression()), !dbg !5852
  store i32 %3, i32* %16, align 4
  call void @llvm.dbg.declare(metadata i32* %16, metadata !5853, metadata !DIExpression()), !dbg !5854
  call void @llvm.dbg.declare(metadata i32* %17, metadata !5855, metadata !DIExpression()), !dbg !5856
  store i32 0, i32* %17, align 4, !dbg !5856
  %22 = load i32, i32* %16, align 4, !dbg !5857
  %23 = icmp ne i32 %22, -1, !dbg !5859
  %24 = load i32, i32* @x.113
  %25 = load i32, i32* @y.114
  %26 = sub i32 %24, 1
  %27 = mul i32 %24, %26
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %29, %30
  br i1 %31, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %23, label %32, label %76, !dbg !5860

32:                                               ; preds = %originalBBpart2
  %33 = load i32, i32* @x.113
  %34 = load i32, i32* @y.114
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %32, %originalBB1alteredBB
  %41 = load i32, i32* %13, align 4, !dbg !5861
  %42 = icmp ne i32 %41, 0, !dbg !5864
  %43 = load i32, i32* @x.113
  %44 = load i32, i32* @y.114
  %45 = sub i32 %43, 1
  %46 = mul i32 %43, %45
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %48, %49
  br i1 %50, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %42, label %51, label %73, !dbg !5865

51:                                               ; preds = %originalBBpart24
  %52 = load i32, i32* @x.113
  %53 = load i32, i32* @y.114
  %54 = sub i32 %52, 1
  %55 = mul i32 %52, %54
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %53, 10
  %59 = or i1 %57, %58
  br i1 %59, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %51, %originalBB6alteredBB
  %60 = load i32, i32* %16, align 4, !dbg !5866
  %61 = load i32*, i32** %14, align 8, !dbg !5867
  %62 = load i32, i32* %17, align 4, !dbg !5868
  %63 = sext i32 %62 to i64, !dbg !5867
  %64 = getelementptr inbounds i32, i32* %61, i64 %63, !dbg !5867
  store i32 %60, i32* %64, align 4, !dbg !5869
  %65 = load i32, i32* @x.113
  %66 = load i32, i32* @y.114
  %67 = sub i32 %65, 1
  %68 = mul i32 %65, %67
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %66, 10
  %72 = or i1 %70, %71
  br i1 %72, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %73, !dbg !5867

73:                                               ; preds = %originalBBpart28, %originalBBpart24
  %74 = load i32, i32* %17, align 4, !dbg !5870
  %75 = add nsw i32 %74, 1, !dbg !5870
  store i32 %75, i32* %17, align 4, !dbg !5870
  br label %76, !dbg !5871

76:                                               ; preds = %73, %originalBBpart2
  %77 = load i32, i32* @x.113
  %78 = load i32, i32* @y.114
  %79 = sub i32 %77, 1
  %80 = mul i32 %77, %79
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %78, 10
  %84 = or i1 %82, %83
  br i1 %84, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %76, %originalBB10alteredBB
  call void @setgrent(), !dbg !5872
  %85 = load i32, i32* @x.113
  %86 = load i32, i32* @y.114
  %87 = sub i32 %85, 1
  %88 = mul i32 %85, %87
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %86, 10
  %92 = or i1 %90, %91
  br i1 %92, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %93, !dbg !5873

93:                                               ; preds = %originalBBpart2115, %originalBBpart212
  call void @llvm.dbg.declare(metadata i8*** %18, metadata !5874, metadata !DIExpression()), !dbg !5876
  call void @llvm.dbg.declare(metadata %struct.group** %19, metadata !5877, metadata !DIExpression()), !dbg !5885
  %94 = call i32* @__errno_location() #15, !dbg !5886
  store i32 0, i32* %94, align 4, !dbg !5887
  %95 = call %struct.group* @getgrent(), !dbg !5888
  store %struct.group* %95, %struct.group** %19, align 8, !dbg !5889
  %96 = load %struct.group*, %struct.group** %19, align 8, !dbg !5890
  %97 = icmp eq %struct.group* %96, null, !dbg !5892
  br i1 %97, label %98, label %115, !dbg !5893

98:                                               ; preds = %93
  %99 = load i32, i32* @x.113
  %100 = load i32, i32* @y.114
  %101 = sub i32 %99, 1
  %102 = mul i32 %99, %101
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %100, 10
  %106 = or i1 %104, %105
  br i1 %106, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %98, %originalBB14alteredBB
  %107 = load i32, i32* @x.113
  %108 = load i32, i32* @y.114
  %109 = sub i32 %107, 1
  %110 = mul i32 %107, %109
  %111 = urem i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = icmp slt i32 %108, 10
  %114 = or i1 %112, %113
  br i1 %114, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %538, !dbg !5894

115:                                              ; preds = %93
  %116 = load i32, i32* @x.113
  %117 = load i32, i32* @y.114
  %118 = sub i32 %116, 1
  %119 = mul i32 %116, %118
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %117, 10
  %123 = or i1 %121, %122
  br i1 %123, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %115, %originalBB18alteredBB
  %124 = load %struct.group*, %struct.group** %19, align 8, !dbg !5895
  %125 = getelementptr inbounds %struct.group, %struct.group* %124, i32 0, i32 3, !dbg !5897
  %126 = load i8**, i8*** %125, align 8, !dbg !5897
  store i8** %126, i8*** %18, align 8, !dbg !5898
  %127 = load i32, i32* @x.113
  %128 = load i32, i32* @y.114
  %129 = sub i32 %127, 1
  %130 = mul i32 %127, %129
  %131 = urem i32 %130, 2
  %132 = icmp eq i32 %131, 0
  %133 = icmp slt i32 %128, 10
  %134 = or i1 %132, %133
  br i1 %134, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %135, !dbg !5899

135:                                              ; preds = %originalBBpart2111, %originalBBpart220
  %136 = load i32, i32* @x.113
  %137 = load i32, i32* @y.114
  %138 = sub i32 %136, 1
  %139 = mul i32 %136, %138
  %140 = urem i32 %139, 2
  %141 = icmp eq i32 %140, 0
  %142 = icmp slt i32 %137, 10
  %143 = or i1 %141, %142
  br i1 %143, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %135, %originalBB22alteredBB
  %144 = load i8**, i8*** %18, align 8, !dbg !5900
  %145 = load i8*, i8** %144, align 8, !dbg !5902
  %146 = icmp ne i8* %145, null, !dbg !5903
  %147 = load i32, i32* @x.113
  %148 = load i32, i32* @y.114
  %149 = sub i32 %147, 1
  %150 = mul i32 %147, %149
  %151 = urem i32 %150, 2
  %152 = icmp eq i32 %151, 0
  %153 = icmp slt i32 %148, 10
  %154 = or i1 %152, %153
  br i1 %154, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br i1 %146, label %155, label %521, !dbg !5903

155:                                              ; preds = %originalBBpart224
  call void @llvm.dbg.declare(metadata i32* %20, metadata !5904, metadata !DIExpression()), !dbg !5906
  %156 = load i32, i32* @x.113
  %157 = load i32, i32* @y.114
  %158 = sub i32 %156, 1
  %159 = mul i32 %156, %158
  %160 = urem i32 %159, 2
  %161 = icmp eq i32 %160, 0
  %162 = icmp slt i32 %157, 10
  %163 = or i1 %161, %162
  br i1 %163, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %155, %originalBB26alteredBB
  %164 = load i8*, i8** %15, align 8, !dbg !5907
  %165 = load i8**, i8*** %18, align 8, !dbg !5907
  %166 = load i8*, i8** %165, align 8, !dbg !5907
  %167 = call i32 @strcmp(i8* %164, i8* %166) #13, !dbg !5907
  %168 = icmp eq i32 %167, 0, !dbg !5907
  %169 = load i32, i32* @x.113
  %170 = load i32, i32* @y.114
  %171 = sub i32 %169, 1
  %172 = mul i32 %169, %171
  %173 = urem i32 %172, 2
  %174 = icmp eq i32 %173, 0
  %175 = icmp slt i32 %170, 10
  %176 = or i1 %174, %175
  br i1 %176, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br i1 %168, label %194, label %177, !dbg !5909

177:                                              ; preds = %originalBBpart228
  %178 = load i32, i32* @x.113
  %179 = load i32, i32* @y.114
  %180 = sub i32 %178, 1
  %181 = mul i32 %178, %180
  %182 = urem i32 %181, 2
  %183 = icmp eq i32 %182, 0
  %184 = icmp slt i32 %179, 10
  %185 = or i1 %183, %184
  br i1 %185, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %177, %originalBB30alteredBB
  %186 = load i32, i32* @x.113
  %187 = load i32, i32* @y.114
  %188 = sub i32 %186, 1
  %189 = mul i32 %186, %188
  %190 = urem i32 %189, 2
  %191 = icmp eq i32 %190, 0
  %192 = icmp slt i32 %187, 10
  %193 = or i1 %191, %192
  br i1 %193, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br label %502, !dbg !5910

194:                                              ; preds = %originalBBpart228
  %195 = load i32, i32* @x.113
  %196 = load i32, i32* @y.114
  %197 = sub i32 %195, 1
  %198 = mul i32 %195, %197
  %199 = urem i32 %198, 2
  %200 = icmp eq i32 %199, 0
  %201 = icmp slt i32 %196, 10
  %202 = or i1 %200, %201
  br i1 %202, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %194, %originalBB34alteredBB
  store i32 0, i32* %20, align 4, !dbg !5911
  %203 = load i32, i32* @x.113
  %204 = load i32, i32* @y.114
  %205 = sub i32 %203, 1
  %206 = mul i32 %203, %205
  %207 = urem i32 %206, 2
  %208 = icmp eq i32 %207, 0
  %209 = icmp slt i32 %204, 10
  %210 = or i1 %208, %209
  br i1 %210, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  br label %211, !dbg !5913

211:                                              ; preds = %originalBBpart262, %originalBBpart236
  %212 = load i32, i32* @x.113
  %213 = load i32, i32* @y.114
  %214 = sub i32 %212, 1
  %215 = mul i32 %212, %214
  %216 = urem i32 %215, 2
  %217 = icmp eq i32 %216, 0
  %218 = icmp slt i32 %213, 10
  %219 = or i1 %217, %218
  br i1 %219, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %211, %originalBB38alteredBB
  %220 = load i32, i32* %20, align 4, !dbg !5914
  %221 = load i32, i32* %17, align 4, !dbg !5916
  %222 = icmp slt i32 %220, %221, !dbg !5917
  %223 = load i32, i32* @x.113
  %224 = load i32, i32* @y.114
  %225 = sub i32 %223, 1
  %226 = mul i32 %223, %225
  %227 = urem i32 %226, 2
  %228 = icmp eq i32 %227, 0
  %229 = icmp slt i32 %224, 10
  %230 = or i1 %228, %229
  br i1 %230, label %originalBBpart240, label %originalBB38alteredBB

originalBBpart240:                                ; preds = %originalBB38
  br i1 %222, label %231, label %329, !dbg !5918

231:                                              ; preds = %originalBBpart240
  %232 = load i32, i32* @x.113
  %233 = load i32, i32* @y.114
  %234 = sub i32 %232, 1
  %235 = mul i32 %232, %234
  %236 = urem i32 %235, 2
  %237 = icmp eq i32 %236, 0
  %238 = icmp slt i32 %233, 10
  %239 = or i1 %237, %238
  br i1 %239, label %originalBB42, label %originalBB42alteredBB

originalBB42:                                     ; preds = %231, %originalBB42alteredBB
  %240 = load i32*, i32** %14, align 8, !dbg !5919
  %241 = icmp ne i32* %240, null, !dbg !5919
  %242 = load i32, i32* @x.113
  %243 = load i32, i32* @y.114
  %244 = sub i32 %242, 1
  %245 = mul i32 %242, %244
  %246 = urem i32 %245, 2
  %247 = icmp eq i32 %246, 0
  %248 = icmp slt i32 %243, 10
  %249 = or i1 %247, %248
  br i1 %249, label %originalBBpart244, label %originalBB42alteredBB

originalBBpart244:                                ; preds = %originalBB42
  br i1 %241, label %250, label %293, !dbg !5921

250:                                              ; preds = %originalBBpart244
  %251 = load i32, i32* @x.113
  %252 = load i32, i32* @y.114
  %253 = sub i32 %251, 1
  %254 = mul i32 %251, %253
  %255 = urem i32 %254, 2
  %256 = icmp eq i32 %255, 0
  %257 = icmp slt i32 %252, 10
  %258 = or i1 %256, %257
  br i1 %258, label %originalBB46, label %originalBB46alteredBB

originalBB46:                                     ; preds = %250, %originalBB46alteredBB
  %259 = load i32*, i32** %14, align 8, !dbg !5922
  %260 = load i32, i32* %20, align 4, !dbg !5923
  %261 = sext i32 %260 to i64, !dbg !5922
  %262 = getelementptr inbounds i32, i32* %259, i64 %261, !dbg !5922
  %263 = load i32, i32* %262, align 4, !dbg !5922
  %264 = load %struct.group*, %struct.group** %19, align 8, !dbg !5924
  %265 = getelementptr inbounds %struct.group, %struct.group* %264, i32 0, i32 2, !dbg !5925
  %266 = load i32, i32* %265, align 8, !dbg !5925
  %267 = icmp eq i32 %263, %266, !dbg !5926
  %268 = load i32, i32* @x.113
  %269 = load i32, i32* @y.114
  %270 = sub i32 %268, 1
  %271 = mul i32 %268, %270
  %272 = urem i32 %271, 2
  %273 = icmp eq i32 %272, 0
  %274 = icmp slt i32 %269, 10
  %275 = or i1 %273, %274
  br i1 %275, label %originalBBpart248, label %originalBB46alteredBB

originalBBpart248:                                ; preds = %originalBB46
  br i1 %267, label %276, label %293, !dbg !5927

276:                                              ; preds = %originalBBpart248
  %277 = load i32, i32* @x.113
  %278 = load i32, i32* @y.114
  %279 = sub i32 %277, 1
  %280 = mul i32 %277, %279
  %281 = urem i32 %280, 2
  %282 = icmp eq i32 %281, 0
  %283 = icmp slt i32 %278, 10
  %284 = or i1 %282, %283
  br i1 %284, label %originalBB50, label %originalBB50alteredBB

originalBB50:                                     ; preds = %276, %originalBB50alteredBB
  %285 = load i32, i32* @x.113
  %286 = load i32, i32* @y.114
  %287 = sub i32 %285, 1
  %288 = mul i32 %285, %287
  %289 = urem i32 %288, 2
  %290 = icmp eq i32 %289, 0
  %291 = icmp slt i32 %286, 10
  %292 = or i1 %290, %291
  br i1 %292, label %originalBBpart252, label %originalBB50alteredBB

originalBBpart252:                                ; preds = %originalBB50
  br label %329, !dbg !5928

293:                                              ; preds = %originalBBpart248, %originalBBpart244
  %294 = load i32, i32* @x.113
  %295 = load i32, i32* @y.114
  %296 = sub i32 %294, 1
  %297 = mul i32 %294, %296
  %298 = urem i32 %297, 2
  %299 = icmp eq i32 %298, 0
  %300 = icmp slt i32 %295, 10
  %301 = or i1 %299, %300
  br i1 %301, label %originalBB54, label %originalBB54alteredBB

originalBB54:                                     ; preds = %293, %originalBB54alteredBB
  %302 = load i32, i32* @x.113
  %303 = load i32, i32* @y.114
  %304 = sub i32 %302, 1
  %305 = mul i32 %302, %304
  %306 = urem i32 %305, 2
  %307 = icmp eq i32 %306, 0
  %308 = icmp slt i32 %303, 10
  %309 = or i1 %307, %308
  br i1 %309, label %originalBBpart256, label %originalBB54alteredBB

originalBBpart256:                                ; preds = %originalBB54
  br label %310, !dbg !5925

310:                                              ; preds = %originalBBpart256
  %311 = load i32, i32* @x.113
  %312 = load i32, i32* @y.114
  %313 = sub i32 %311, 1
  %314 = mul i32 %311, %313
  %315 = urem i32 %314, 2
  %316 = icmp eq i32 %315, 0
  %317 = icmp slt i32 %312, 10
  %318 = or i1 %316, %317
  br i1 %318, label %originalBB58, label %originalBB58alteredBB

originalBB58:                                     ; preds = %310, %originalBB58alteredBB
  %319 = load i32, i32* %20, align 4, !dbg !5929
  %320 = add nsw i32 %319, 1, !dbg !5929
  store i32 %320, i32* %20, align 4, !dbg !5929
  %321 = load i32, i32* @x.113
  %322 = load i32, i32* @y.114
  %323 = sub i32 %321, 1
  %324 = mul i32 %321, %323
  %325 = urem i32 %324, 2
  %326 = icmp eq i32 %325, 0
  %327 = icmp slt i32 %322, 10
  %328 = or i1 %326, %327
  br i1 %328, label %originalBBpart262, label %originalBB58alteredBB

originalBBpart262:                                ; preds = %originalBB58
  br label %211, !dbg !5930, !llvm.loop !5931

329:                                              ; preds = %originalBBpart252, %originalBBpart240
  %330 = load i32, i32* @x.113
  %331 = load i32, i32* @y.114
  %332 = sub i32 %330, 1
  %333 = mul i32 %330, %332
  %334 = urem i32 %333, 2
  %335 = icmp eq i32 %334, 0
  %336 = icmp slt i32 %331, 10
  %337 = or i1 %335, %336
  br i1 %337, label %originalBB64, label %originalBB64alteredBB

originalBB64:                                     ; preds = %329, %originalBB64alteredBB
  %338 = load i32, i32* %20, align 4, !dbg !5933
  %339 = load i32, i32* %17, align 4, !dbg !5935
  %340 = icmp eq i32 %338, %339, !dbg !5936
  %341 = load i32, i32* @x.113
  %342 = load i32, i32* @y.114
  %343 = sub i32 %341, 1
  %344 = mul i32 %341, %343
  %345 = urem i32 %344, 2
  %346 = icmp eq i32 %345, 0
  %347 = icmp slt i32 %342, 10
  %348 = or i1 %346, %347
  br i1 %348, label %originalBBpart266, label %originalBB64alteredBB

originalBBpart266:                                ; preds = %originalBB64
  br i1 %340, label %349, label %485, !dbg !5937

349:                                              ; preds = %originalBBpart266
  %350 = load i32, i32* @x.113
  %351 = load i32, i32* @y.114
  %352 = sub i32 %350, 1
  %353 = mul i32 %350, %352
  %354 = urem i32 %353, 2
  %355 = icmp eq i32 %354, 0
  %356 = icmp slt i32 %351, 10
  %357 = or i1 %355, %356
  br i1 %357, label %originalBB68, label %originalBB68alteredBB

originalBB68:                                     ; preds = %349, %originalBB68alteredBB
  %358 = load i32, i32* %13, align 4, !dbg !5938
  %359 = icmp ne i32 %358, 0, !dbg !5941
  %360 = load i32, i32* @x.113
  %361 = load i32, i32* @y.114
  %362 = sub i32 %360, 1
  %363 = mul i32 %360, %362
  %364 = urem i32 %363, 2
  %365 = icmp eq i32 %364, 0
  %366 = icmp slt i32 %361, 10
  %367 = or i1 %365, %366
  br i1 %367, label %originalBBpart270, label %originalBB68alteredBB

originalBBpart270:                                ; preds = %originalBB68
  br i1 %359, label %368, label %429, !dbg !5942

368:                                              ; preds = %originalBBpart270
  %369 = load i32, i32* @x.113
  %370 = load i32, i32* @y.114
  %371 = sub i32 %369, 1
  %372 = mul i32 %369, %371
  %373 = urem i32 %372, 2
  %374 = icmp eq i32 %373, 0
  %375 = icmp slt i32 %370, 10
  %376 = or i1 %374, %375
  br i1 %376, label %originalBB72, label %originalBB72alteredBB

originalBB72:                                     ; preds = %368, %originalBB72alteredBB
  %377 = load i32, i32* %17, align 4, !dbg !5943
  %378 = load i32, i32* %13, align 4, !dbg !5946
  %379 = icmp sge i32 %377, %378, !dbg !5947
  %380 = load i32, i32* @x.113
  %381 = load i32, i32* @y.114
  %382 = sub i32 %380, 1
  %383 = mul i32 %380, %382
  %384 = urem i32 %383, 2
  %385 = icmp eq i32 %384, 0
  %386 = icmp slt i32 %381, 10
  %387 = or i1 %385, %386
  br i1 %387, label %originalBBpart274, label %originalBB72alteredBB

originalBBpart274:                                ; preds = %originalBB72
  br i1 %379, label %388, label %405, !dbg !5948

388:                                              ; preds = %originalBBpart274
  %389 = load i32, i32* @x.113
  %390 = load i32, i32* @y.114
  %391 = sub i32 %389, 1
  %392 = mul i32 %389, %391
  %393 = urem i32 %392, 2
  %394 = icmp eq i32 %393, 0
  %395 = icmp slt i32 %390, 10
  %396 = or i1 %394, %395
  br i1 %396, label %originalBB76, label %originalBB76alteredBB

originalBB76:                                     ; preds = %388, %originalBB76alteredBB
  %397 = load i32, i32* @x.113
  %398 = load i32, i32* @y.114
  %399 = sub i32 %397, 1
  %400 = mul i32 %397, %399
  %401 = urem i32 %400, 2
  %402 = icmp eq i32 %401, 0
  %403 = icmp slt i32 %398, 10
  %404 = or i1 %402, %403
  br i1 %404, label %originalBBpart278, label %originalBB76alteredBB

originalBBpart278:                                ; preds = %originalBB76
  br label %576, !dbg !5949

405:                                              ; preds = %originalBBpart274
  %406 = load i32, i32* @x.113
  %407 = load i32, i32* @y.114
  %408 = sub i32 %406, 1
  %409 = mul i32 %406, %408
  %410 = urem i32 %409, 2
  %411 = icmp eq i32 %410, 0
  %412 = icmp slt i32 %407, 10
  %413 = or i1 %411, %412
  br i1 %413, label %originalBB80, label %originalBB80alteredBB

originalBB80:                                     ; preds = %405, %originalBB80alteredBB
  %414 = load %struct.group*, %struct.group** %19, align 8, !dbg !5950
  %415 = getelementptr inbounds %struct.group, %struct.group* %414, i32 0, i32 2, !dbg !5951
  %416 = load i32, i32* %415, align 8, !dbg !5951
  %417 = load i32*, i32** %14, align 8, !dbg !5952
  %418 = load i32, i32* %17, align 4, !dbg !5953
  %419 = sext i32 %418 to i64, !dbg !5952
  %420 = getelementptr inbounds i32, i32* %417, i64 %419, !dbg !5952
  store i32 %416, i32* %420, align 4, !dbg !5954
  %421 = load i32, i32* @x.113
  %422 = load i32, i32* @y.114
  %423 = sub i32 %421, 1
  %424 = mul i32 %421, %423
  %425 = urem i32 %424, 2
  %426 = icmp eq i32 %425, 0
  %427 = icmp slt i32 %422, 10
  %428 = or i1 %426, %427
  br i1 %428, label %originalBBpart282, label %originalBB80alteredBB

originalBBpart282:                                ; preds = %originalBB80
  br label %429, !dbg !5955

429:                                              ; preds = %originalBBpart282, %originalBBpart270
  %430 = load i32, i32* @x.113
  %431 = load i32, i32* @y.114
  %432 = sub i32 %430, 1
  %433 = mul i32 %430, %432
  %434 = urem i32 %433, 2
  %435 = icmp eq i32 %434, 0
  %436 = icmp slt i32 %431, 10
  %437 = or i1 %435, %436
  br i1 %437, label %originalBB84, label %originalBB84alteredBB

originalBB84:                                     ; preds = %429, %originalBB84alteredBB
  %438 = load i32, i32* %17, align 4, !dbg !5956
  %439 = icmp eq i32 %438, 2147483647, !dbg !5958
  %440 = load i32, i32* @x.113
  %441 = load i32, i32* @y.114
  %442 = sub i32 %440, 1
  %443 = mul i32 %440, %442
  %444 = urem i32 %443, 2
  %445 = icmp eq i32 %444, 0
  %446 = icmp slt i32 %441, 10
  %447 = or i1 %445, %446
  br i1 %447, label %originalBBpart286, label %originalBB84alteredBB

originalBBpart286:                                ; preds = %originalBB84
  br i1 %439, label %448, label %466, !dbg !5959

448:                                              ; preds = %originalBBpart286
  %449 = load i32, i32* @x.113
  %450 = load i32, i32* @y.114
  %451 = sub i32 %449, 1
  %452 = mul i32 %449, %451
  %453 = urem i32 %452, 2
  %454 = icmp eq i32 %453, 0
  %455 = icmp slt i32 %450, 10
  %456 = or i1 %454, %455
  br i1 %456, label %originalBB88, label %originalBB88alteredBB

originalBB88:                                     ; preds = %448, %originalBB88alteredBB
  %457 = call i32* @__errno_location() #15, !dbg !5960
  store i32 75, i32* %457, align 4, !dbg !5962
  %458 = load i32, i32* @x.113
  %459 = load i32, i32* @y.114
  %460 = sub i32 %458, 1
  %461 = mul i32 %458, %460
  %462 = urem i32 %461, 2
  %463 = icmp eq i32 %462, 0
  %464 = icmp slt i32 %459, 10
  %465 = or i1 %463, %464
  br i1 %465, label %originalBBpart290, label %originalBB88alteredBB

originalBBpart290:                                ; preds = %originalBB88
  br label %576, !dbg !5963

466:                                              ; preds = %originalBBpart286
  %467 = load i32, i32* @x.113
  %468 = load i32, i32* @y.114
  %469 = sub i32 %467, 1
  %470 = mul i32 %467, %469
  %471 = urem i32 %470, 2
  %472 = icmp eq i32 %471, 0
  %473 = icmp slt i32 %468, 10
  %474 = or i1 %472, %473
  br i1 %474, label %originalBB92, label %originalBB92alteredBB

originalBB92:                                     ; preds = %466, %originalBB92alteredBB
  %475 = load i32, i32* %17, align 4, !dbg !5964
  %476 = add nsw i32 %475, 1, !dbg !5964
  store i32 %476, i32* %17, align 4, !dbg !5964
  %477 = load i32, i32* @x.113
  %478 = load i32, i32* @y.114
  %479 = sub i32 %477, 1
  %480 = mul i32 %477, %479
  %481 = urem i32 %480, 2
  %482 = icmp eq i32 %481, 0
  %483 = icmp slt i32 %478, 10
  %484 = or i1 %482, %483
  br i1 %484, label %originalBBpart2103, label %originalBB92alteredBB

originalBBpart2103:                               ; preds = %originalBB92
  br label %485, !dbg !5965

485:                                              ; preds = %originalBBpart2103, %originalBBpart266
  %486 = load i32, i32* @x.113
  %487 = load i32, i32* @y.114
  %488 = sub i32 %486, 1
  %489 = mul i32 %486, %488
  %490 = urem i32 %489, 2
  %491 = icmp eq i32 %490, 0
  %492 = icmp slt i32 %487, 10
  %493 = or i1 %491, %492
  br i1 %493, label %originalBB105, label %originalBB105alteredBB

originalBB105:                                    ; preds = %485, %originalBB105alteredBB
  %494 = load i32, i32* @x.113
  %495 = load i32, i32* @y.114
  %496 = sub i32 %494, 1
  %497 = mul i32 %494, %496
  %498 = urem i32 %497, 2
  %499 = icmp eq i32 %498, 0
  %500 = icmp slt i32 %495, 10
  %501 = or i1 %499, %500
  br i1 %501, label %originalBBpart2107, label %originalBB105alteredBB

originalBBpart2107:                               ; preds = %originalBB105
  br label %502, !dbg !5966

502:                                              ; preds = %originalBBpart2107, %originalBBpart232
  %503 = load i32, i32* @x.113
  %504 = load i32, i32* @y.114
  %505 = sub i32 %503, 1
  %506 = mul i32 %503, %505
  %507 = urem i32 %506, 2
  %508 = icmp eq i32 %507, 0
  %509 = icmp slt i32 %504, 10
  %510 = or i1 %508, %509
  br i1 %510, label %originalBB109, label %originalBB109alteredBB

originalBB109:                                    ; preds = %502, %originalBB109alteredBB
  %511 = load i8**, i8*** %18, align 8, !dbg !5967
  %512 = getelementptr inbounds i8*, i8** %511, i32 1, !dbg !5967
  store i8** %512, i8*** %18, align 8, !dbg !5967
  %513 = load i32, i32* @x.113
  %514 = load i32, i32* @y.114
  %515 = sub i32 %513, 1
  %516 = mul i32 %513, %515
  %517 = urem i32 %516, 2
  %518 = icmp eq i32 %517, 0
  %519 = icmp slt i32 %514, 10
  %520 = or i1 %518, %519
  br i1 %520, label %originalBBpart2111, label %originalBB109alteredBB

originalBBpart2111:                               ; preds = %originalBB109
  br label %135, !dbg !5968, !llvm.loop !5969

521:                                              ; preds = %originalBBpart224
  %522 = load i32, i32* @x.113
  %523 = load i32, i32* @y.114
  %524 = sub i32 %522, 1
  %525 = mul i32 %522, %524
  %526 = urem i32 %525, 2
  %527 = icmp eq i32 %526, 0
  %528 = icmp slt i32 %523, 10
  %529 = or i1 %527, %528
  br i1 %529, label %originalBB113, label %originalBB113alteredBB

originalBB113:                                    ; preds = %521, %originalBB113alteredBB
  %530 = load i32, i32* @x.113
  %531 = load i32, i32* @y.114
  %532 = sub i32 %530, 1
  %533 = mul i32 %530, %532
  %534 = urem i32 %533, 2
  %535 = icmp eq i32 %534, 0
  %536 = icmp slt i32 %531, 10
  %537 = or i1 %535, %536
  br i1 %537, label %originalBBpart2115, label %originalBB113alteredBB

originalBBpart2115:                               ; preds = %originalBB113
  br label %93, !dbg !5873, !llvm.loop !5971

538:                                              ; preds = %originalBBpart216
  %539 = call i32* @__errno_location() #15, !dbg !5973
  %540 = load i32, i32* %539, align 4, !dbg !5973
  %541 = icmp ne i32 %540, 0, !dbg !5975
  br i1 %541, label %542, label %559, !dbg !5976

542:                                              ; preds = %538
  %543 = load i32, i32* @x.113
  %544 = load i32, i32* @y.114
  %545 = sub i32 %543, 1
  %546 = mul i32 %543, %545
  %547 = urem i32 %546, 2
  %548 = icmp eq i32 %547, 0
  %549 = icmp slt i32 %544, 10
  %550 = or i1 %548, %549
  br i1 %550, label %originalBB117, label %originalBB117alteredBB

originalBB117:                                    ; preds = %542, %originalBB117alteredBB
  store i32 -1, i32* %17, align 4, !dbg !5977
  %551 = load i32, i32* @x.113
  %552 = load i32, i32* @y.114
  %553 = sub i32 %551, 1
  %554 = mul i32 %551, %553
  %555 = urem i32 %554, 2
  %556 = icmp eq i32 %555, 0
  %557 = icmp slt i32 %552, 10
  %558 = or i1 %556, %557
  br i1 %558, label %originalBBpart2119, label %originalBB117alteredBB

originalBBpart2119:                               ; preds = %originalBB117
  br label %559, !dbg !5978

559:                                              ; preds = %originalBBpart2119, %538
  %560 = load i32, i32* @x.113
  %561 = load i32, i32* @y.114
  %562 = sub i32 %560, 1
  %563 = mul i32 %560, %562
  %564 = urem i32 %563, 2
  %565 = icmp eq i32 %564, 0
  %566 = icmp slt i32 %561, 10
  %567 = or i1 %565, %566
  br i1 %567, label %originalBB121, label %originalBB121alteredBB

originalBB121:                                    ; preds = %559, %originalBB121alteredBB
  %568 = load i32, i32* @x.113
  %569 = load i32, i32* @y.114
  %570 = sub i32 %568, 1
  %571 = mul i32 %568, %570
  %572 = urem i32 %571, 2
  %573 = icmp eq i32 %572, 0
  %574 = icmp slt i32 %569, 10
  %575 = or i1 %573, %574
  br i1 %575, label %originalBBpart2123, label %originalBB121alteredBB

originalBBpart2123:                               ; preds = %originalBB121
  br label %576, !dbg !5979

576:                                              ; preds = %originalBBpart2123, %originalBBpart290, %originalBBpart278
  call void @llvm.dbg.label(metadata !5980), !dbg !5981
  call void @llvm.dbg.declare(metadata i32* %21, metadata !5982, metadata !DIExpression()), !dbg !5984
  %577 = call i32* @__errno_location() #15, !dbg !5985
  %578 = load i32, i32* %577, align 4, !dbg !5985
  store i32 %578, i32* %21, align 4, !dbg !5984
  call void @endgrent(), !dbg !5986
  %579 = load i32, i32* %21, align 4, !dbg !5987
  %580 = call i32* @__errno_location() #15, !dbg !5988
  store i32 %579, i32* %580, align 4, !dbg !5989
  %581 = load i32, i32* %17, align 4, !dbg !5990
  ret i32 %581, !dbg !5991

originalBBalteredBB:                              ; preds = %originalBB, %4
  %582 = alloca i32, align 4
  %583 = alloca i32*, align 8
  %584 = alloca i8*, align 8
  %585 = alloca i32, align 4
  %586 = alloca i32, align 4
  %587 = alloca i8**, align 8
  %588 = alloca %struct.group*, align 8
  %589 = alloca i32, align 4
  %590 = alloca i32, align 4
  store i32 %0, i32* %582, align 4
  call void @llvm.dbg.declare(metadata i32* %582, metadata !5992, metadata !DIExpression()), !dbg !5848
  store i32* %1, i32** %583, align 8
  call void @llvm.dbg.declare(metadata i32** %583, metadata !5995, metadata !DIExpression()), !dbg !5850
  store i8* %2, i8** %584, align 8
  call void @llvm.dbg.declare(metadata i8** %584, metadata !5996, metadata !DIExpression()), !dbg !5852
  store i32 %3, i32* %585, align 4
  call void @llvm.dbg.declare(metadata i32* %585, metadata !5997, metadata !DIExpression()), !dbg !5854
  call void @llvm.dbg.declare(metadata i32* %586, metadata !5998, metadata !DIExpression()), !dbg !5856
  store i32 0, i32* %586, align 4, !dbg !5856
  %591 = load i32, i32* %585, align 4, !dbg !5857
  %592 = icmp ne i32 %591, -1, !dbg !5859
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %32
  %593 = load i32, i32* %13, align 4, !dbg !5861
  %594 = icmp ne i32 %593, 0, !dbg !5864
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %51
  %595 = load i32, i32* %16, align 4, !dbg !5866
  %596 = load i32*, i32** %14, align 8, !dbg !5867
  %597 = load i32, i32* %17, align 4, !dbg !5868
  %598 = sext i32 %597 to i64, !dbg !5867
  %599 = getelementptr inbounds i32, i32* %596, i64 %598, !dbg !5867
  store i32 %595, i32* %599, align 4, !dbg !5869
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %76
  call void @setgrent(), !dbg !5872
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %98
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %115
  %600 = load %struct.group*, %struct.group** %19, align 8, !dbg !5895
  %601 = getelementptr inbounds %struct.group, %struct.group* %600, i32 0, i32 3, !dbg !5897
  %602 = load i8**, i8*** %601, align 8, !dbg !5897
  store i8** %602, i8*** %18, align 8, !dbg !5898
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %135
  %603 = load i8**, i8*** %18, align 8, !dbg !5900
  %604 = load i8*, i8** %603, align 8, !dbg !5902
  %605 = icmp ne i8* %604, null, !dbg !5903
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %155
  %606 = load i8*, i8** %15, align 8, !dbg !5907
  %607 = load i8**, i8*** %18, align 8, !dbg !5907
  %608 = load i8*, i8** %607, align 8, !dbg !5907
  %609 = call i32 @strcmp(i8* %606, i8* %608) #13, !dbg !5907
  %610 = icmp eq i32 %609, 0, !dbg !5907
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %177
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %194
  store i32 0, i32* %20, align 4, !dbg !5911
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %211
  %611 = load i32, i32* %20, align 4, !dbg !5914
  %612 = load i32, i32* %17, align 4, !dbg !5916
  %613 = icmp slt i32 %611, %612, !dbg !5917
  br label %originalBB38

originalBB42alteredBB:                            ; preds = %originalBB42, %231
  %614 = load i32*, i32** %14, align 8, !dbg !5919
  %615 = icmp ne i32* %614, null, !dbg !5919
  br label %originalBB42

originalBB46alteredBB:                            ; preds = %originalBB46, %250
  %616 = load i32*, i32** %14, align 8, !dbg !5922
  %617 = load i32, i32* %20, align 4, !dbg !5923
  %618 = sext i32 %617 to i64, !dbg !5922
  %619 = getelementptr inbounds i32, i32* %616, i64 %618, !dbg !5922
  %620 = load i32, i32* %619, align 4, !dbg !5922
  %621 = load %struct.group*, %struct.group** %19, align 8, !dbg !5924
  %622 = getelementptr inbounds %struct.group, %struct.group* %621, i32 0, i32 2, !dbg !5925
  %623 = load i32, i32* %622, align 8, !dbg !5925
  %624 = icmp eq i32 %620, %623, !dbg !5926
  br label %originalBB46

originalBB50alteredBB:                            ; preds = %originalBB50, %276
  br label %originalBB50

originalBB54alteredBB:                            ; preds = %originalBB54, %293
  br label %originalBB54

originalBB58alteredBB:                            ; preds = %originalBB58, %310
  %625 = load i32, i32* %20, align 4, !dbg !5929
  %_ = sub i32 %625, 1
  %gen = mul i32 %_, 1
  %_59 = sub i32 0, %625
  %gen60 = add i32 %_59, 1
  %626 = add nsw i32 %625, 1, !dbg !5929
  store i32 %626, i32* %20, align 4, !dbg !5929
  br label %originalBB58

originalBB64alteredBB:                            ; preds = %originalBB64, %329
  %627 = load i32, i32* %20, align 4, !dbg !5933
  %628 = load i32, i32* %17, align 4, !dbg !5935
  %629 = icmp eq i32 %627, %628, !dbg !5936
  br label %originalBB64

originalBB68alteredBB:                            ; preds = %originalBB68, %349
  %630 = load i32, i32* %13, align 4, !dbg !5938
  %631 = icmp ne i32 %630, 0, !dbg !5941
  br label %originalBB68

originalBB72alteredBB:                            ; preds = %originalBB72, %368
  %632 = load i32, i32* %17, align 4, !dbg !5943
  %633 = load i32, i32* %13, align 4, !dbg !5946
  %634 = icmp sge i32 %632, %633, !dbg !5947
  br label %originalBB72

originalBB76alteredBB:                            ; preds = %originalBB76, %388
  br label %originalBB76

originalBB80alteredBB:                            ; preds = %originalBB80, %405
  %635 = load %struct.group*, %struct.group** %19, align 8, !dbg !5950
  %636 = getelementptr inbounds %struct.group, %struct.group* %635, i32 0, i32 2, !dbg !5951
  %637 = load i32, i32* %636, align 8, !dbg !5951
  %638 = load i32*, i32** %14, align 8, !dbg !5952
  %639 = load i32, i32* %17, align 4, !dbg !5953
  %640 = sext i32 %639 to i64, !dbg !5952
  %641 = getelementptr inbounds i32, i32* %638, i64 %640, !dbg !5952
  store i32 %637, i32* %641, align 4, !dbg !5954
  br label %originalBB80

originalBB84alteredBB:                            ; preds = %originalBB84, %429
  %642 = load i32, i32* %17, align 4, !dbg !5956
  %643 = icmp eq i32 %642, 2147483647, !dbg !5958
  br label %originalBB84

originalBB88alteredBB:                            ; preds = %originalBB88, %448
  %644 = call i32* @__errno_location() #15, !dbg !5960
  store i32 75, i32* %644, align 4, !dbg !5962
  br label %originalBB88

originalBB92alteredBB:                            ; preds = %originalBB92, %466
  %645 = load i32, i32* %17, align 4, !dbg !5964
  %_93 = shl i32 %645, 1
  %_94 = sub i32 %645, 1
  %gen95 = mul i32 %_94, 1
  %_96 = sub i32 %645, 1
  %gen97 = mul i32 %_96, 1
  %_98 = sub i32 0, %645
  %gen99 = add i32 %_98, 1
  %_100 = shl i32 %645, 1
  %_101 = shl i32 %645, 1
  %646 = add nsw i32 %645, 1, !dbg !5964
  store i32 %646, i32* %17, align 4, !dbg !5964
  br label %originalBB92

originalBB105alteredBB:                           ; preds = %originalBB105, %485
  br label %originalBB105

originalBB109alteredBB:                           ; preds = %originalBB109, %502
  %647 = load i8**, i8*** %18, align 8, !dbg !5967
  %648 = getelementptr inbounds i8*, i8** %647, i32 1, !dbg !5967
  store i8** %648, i8*** %18, align 8, !dbg !5967
  br label %originalBB109

originalBB113alteredBB:                           ; preds = %originalBB113, %521
  br label %originalBB113

originalBB117alteredBB:                           ; preds = %originalBB117, %542
  store i32 -1, i32* %17, align 4, !dbg !5977
  br label %originalBB117

originalBB121alteredBB:                           ; preds = %originalBB121, %559
  br label %originalBB121
}

declare dso_local void @setgrent() #3

declare dso_local %struct.group* @getgrent() #3

define private i32 @controle(i8*, i32) {
  %3 = load i32, i32* @inVal0
  %4 = icmp sgt i32 %3, 0
  br i1 %4, label %25, label %5

5:                                                ; preds = %2
  %6 = load i32, i32* @x.115
  %7 = load i32, i32* @y.116
  %8 = sub i32 %6, 1
  %9 = mul i32 %6, %8
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %7, 10
  %13 = or i1 %11, %12
  br i1 %13, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %5, %originalBBalteredBB
  call void @srand(i32 %1)
  %14 = call i32 @rand()
  %15 = srem i32 %14, 50000
  %16 = add i32 %15, 2
  %17 = load i32, i32* @x.115
  %18 = load i32, i32* @y.116
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32 %16

25:                                               ; preds = %2
  %26 = load i32, i32* @x.115
  %27 = load i32, i32* @y.116
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %originalBB20, label %originalBB20alteredBB

originalBB20:                                     ; preds = %25, %originalBB20alteredBB
  %34 = getelementptr inbounds [1 x i8], [1 x i8]* @.compVal2, i32 0, i32 0
  %35 = call i32 @strcmp(i8* %34, i8* %0)
  %36 = icmp eq i32 %35, 0
  %37 = load i32, i32* @x.115
  %38 = load i32, i32* @y.116
  %39 = sub i32 %37, 1
  %40 = mul i32 %37, %39
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %42, %43
  br i1 %44, label %originalBBpart222, label %originalBB20alteredBB

originalBBpart222:                                ; preds = %originalBB20
  br i1 %36, label %45, label %64

45:                                               ; preds = %originalBBpart222
  %46 = icmp eq i32 %1, 0
  br i1 %46, label %47, label %64

47:                                               ; preds = %45
  %48 = load i32, i32* @x.115
  %49 = load i32, i32* @y.116
  %50 = sub i32 %48, 1
  %51 = mul i32 %48, %50
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %53, %54
  br i1 %55, label %originalBB24, label %originalBB24alteredBB

originalBB24:                                     ; preds = %47, %originalBB24alteredBB
  %56 = load i32, i32* @x.115
  %57 = load i32, i32* @y.116
  %58 = sub i32 %56, 1
  %59 = mul i32 %56, %58
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %61, %62
  br i1 %63, label %originalBBpart226, label %originalBB24alteredBB

originalBBpart226:                                ; preds = %originalBB24
  ret i32 5

64:                                               ; preds = %45, %originalBBpart222
  %65 = load i32, i32* @x.115
  %66 = load i32, i32* @y.116
  %67 = sub i32 %65, 1
  %68 = mul i32 %65, %67
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %66, 10
  %72 = or i1 %70, %71
  br i1 %72, label %originalBB28, label %originalBB28alteredBB

originalBB28:                                     ; preds = %64, %originalBB28alteredBB
  %73 = getelementptr inbounds [4 x i8], [4 x i8]* @.compVal1, i32 0, i32 0
  %74 = call i32 @strcmp(i8* %73, i8* %0)
  %75 = icmp eq i32 %74, 0
  %76 = load i32, i32* @x.115
  %77 = load i32, i32* @y.116
  %78 = sub i32 %76, 1
  %79 = mul i32 %76, %78
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %77, 10
  %83 = or i1 %81, %82
  br i1 %83, label %originalBBpart230, label %originalBB28alteredBB

originalBBpart230:                                ; preds = %originalBB28
  br i1 %75, label %84, label %119

84:                                               ; preds = %originalBBpart230
  %85 = load i32, i32* @x.115
  %86 = load i32, i32* @y.116
  %87 = sub i32 %85, 1
  %88 = mul i32 %85, %87
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %86, 10
  %92 = or i1 %90, %91
  br i1 %92, label %originalBB32, label %originalBB32alteredBB

originalBB32:                                     ; preds = %84, %originalBB32alteredBB
  %93 = icmp eq i32 %1, 43
  %94 = load i32, i32* @x.115
  %95 = load i32, i32* @y.116
  %96 = sub i32 %94, 1
  %97 = mul i32 %94, %96
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %95, 10
  %101 = or i1 %99, %100
  br i1 %101, label %originalBBpart234, label %originalBB32alteredBB

originalBBpart234:                                ; preds = %originalBB32
  br i1 %93, label %102, label %119

102:                                              ; preds = %originalBBpart234
  %103 = load i32, i32* @x.115
  %104 = load i32, i32* @y.116
  %105 = sub i32 %103, 1
  %106 = mul i32 %103, %105
  %107 = urem i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %104, 10
  %110 = or i1 %108, %109
  br i1 %110, label %originalBB36, label %originalBB36alteredBB

originalBB36:                                     ; preds = %102, %originalBB36alteredBB
  %111 = load i32, i32* @x.115
  %112 = load i32, i32* @y.116
  %113 = sub i32 %111, 1
  %114 = mul i32 %111, %113
  %115 = urem i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %112, 10
  %118 = or i1 %116, %117
  br i1 %118, label %originalBBpart238, label %originalBB36alteredBB

originalBBpart238:                                ; preds = %originalBB36
  ret i32 3

119:                                              ; preds = %originalBBpart234, %originalBBpart230
  %120 = getelementptr inbounds [2 x i8], [2 x i8]* @.compVal0, i32 0, i32 0
  %121 = call i32 @strcmp(i8* %120, i8* %0)
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %158

123:                                              ; preds = %119
  %124 = load i32, i32* @x.115
  %125 = load i32, i32* @y.116
  %126 = sub i32 %124, 1
  %127 = mul i32 %124, %126
  %128 = urem i32 %127, 2
  %129 = icmp eq i32 %128, 0
  %130 = icmp slt i32 %125, 10
  %131 = or i1 %129, %130
  br i1 %131, label %originalBB40, label %originalBB40alteredBB

originalBB40:                                     ; preds = %123, %originalBB40alteredBB
  %132 = icmp eq i32 %1, -1
  %133 = load i32, i32* @x.115
  %134 = load i32, i32* @y.116
  %135 = sub i32 %133, 1
  %136 = mul i32 %133, %135
  %137 = urem i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = icmp slt i32 %134, 10
  %140 = or i1 %138, %139
  br i1 %140, label %originalBBpart242, label %originalBB40alteredBB

originalBBpart242:                                ; preds = %originalBB40
  br i1 %132, label %141, label %158

141:                                              ; preds = %originalBBpart242
  %142 = load i32, i32* @x.115
  %143 = load i32, i32* @y.116
  %144 = sub i32 %142, 1
  %145 = mul i32 %142, %144
  %146 = urem i32 %145, 2
  %147 = icmp eq i32 %146, 0
  %148 = icmp slt i32 %143, 10
  %149 = or i1 %147, %148
  br i1 %149, label %originalBB44, label %originalBB44alteredBB

originalBB44:                                     ; preds = %141, %originalBB44alteredBB
  %150 = load i32, i32* @x.115
  %151 = load i32, i32* @y.116
  %152 = sub i32 %150, 1
  %153 = mul i32 %150, %152
  %154 = urem i32 %153, 2
  %155 = icmp eq i32 %154, 0
  %156 = icmp slt i32 %151, 10
  %157 = or i1 %155, %156
  br i1 %157, label %originalBBpart246, label %originalBB44alteredBB

originalBBpart246:                                ; preds = %originalBB44
  ret i32 3

158:                                              ; preds = %originalBBpart242, %119
  %159 = load i32, i32* @x.115
  %160 = load i32, i32* @y.116
  %161 = sub i32 %159, 1
  %162 = mul i32 %159, %161
  %163 = urem i32 %162, 2
  %164 = icmp eq i32 %163, 0
  %165 = icmp slt i32 %160, 10
  %166 = or i1 %164, %165
  br i1 %166, label %originalBB48, label %originalBB48alteredBB

originalBB48:                                     ; preds = %158, %originalBB48alteredBB
  %167 = getelementptr inbounds [2 x i8], [2 x i8]* @.compVal0, i32 0, i32 0
  %168 = call i32 @strcmp(i8* %167, i8* %0)
  %169 = icmp eq i32 %168, 0
  %170 = load i32, i32* @x.115
  %171 = load i32, i32* @y.116
  %172 = sub i32 %170, 1
  %173 = mul i32 %170, %172
  %174 = urem i32 %173, 2
  %175 = icmp eq i32 %174, 0
  %176 = icmp slt i32 %171, 10
  %177 = or i1 %175, %176
  br i1 %177, label %originalBBpart250, label %originalBB48alteredBB

originalBBpart250:                                ; preds = %originalBB48
  br i1 %169, label %178, label %213

178:                                              ; preds = %originalBBpart250
  %179 = load i32, i32* @x.115
  %180 = load i32, i32* @y.116
  %181 = sub i32 %179, 1
  %182 = mul i32 %179, %181
  %183 = urem i32 %182, 2
  %184 = icmp eq i32 %183, 0
  %185 = icmp slt i32 %180, 10
  %186 = or i1 %184, %185
  br i1 %186, label %originalBB52, label %originalBB52alteredBB

originalBB52:                                     ; preds = %178, %originalBB52alteredBB
  %187 = icmp eq i32 %1, 0
  %188 = load i32, i32* @x.115
  %189 = load i32, i32* @y.116
  %190 = sub i32 %188, 1
  %191 = mul i32 %188, %190
  %192 = urem i32 %191, 2
  %193 = icmp eq i32 %192, 0
  %194 = icmp slt i32 %189, 10
  %195 = or i1 %193, %194
  br i1 %195, label %originalBBpart254, label %originalBB52alteredBB

originalBBpart254:                                ; preds = %originalBB52
  br i1 %187, label %196, label %213

196:                                              ; preds = %originalBBpart254
  %197 = load i32, i32* @x.115
  %198 = load i32, i32* @y.116
  %199 = sub i32 %197, 1
  %200 = mul i32 %197, %199
  %201 = urem i32 %200, 2
  %202 = icmp eq i32 %201, 0
  %203 = icmp slt i32 %198, 10
  %204 = or i1 %202, %203
  br i1 %204, label %originalBB56, label %originalBB56alteredBB

originalBB56:                                     ; preds = %196, %originalBB56alteredBB
  %205 = load i32, i32* @x.115
  %206 = load i32, i32* @y.116
  %207 = sub i32 %205, 1
  %208 = mul i32 %205, %207
  %209 = urem i32 %208, 2
  %210 = icmp eq i32 %209, 0
  %211 = icmp slt i32 %206, 10
  %212 = or i1 %210, %211
  br i1 %212, label %originalBBpart258, label %originalBB56alteredBB

originalBBpart258:                                ; preds = %originalBB56
  ret i32 5

213:                                              ; preds = %originalBBpart254, %originalBBpart250
  %214 = load i32, i32* @x.115
  %215 = load i32, i32* @y.116
  %216 = sub i32 %214, 1
  %217 = mul i32 %214, %216
  %218 = urem i32 %217, 2
  %219 = icmp eq i32 %218, 0
  %220 = icmp slt i32 %215, 10
  %221 = or i1 %219, %220
  br i1 %221, label %originalBB60, label %originalBB60alteredBB

originalBB60:                                     ; preds = %213, %originalBB60alteredBB
  call void @srand(i32 %1)
  %222 = call i32 @rand()
  %223 = srem i32 %222, 50000
  %224 = add i32 %223, 2
  %225 = load i32, i32* @x.115
  %226 = load i32, i32* @y.116
  %227 = sub i32 %225, 1
  %228 = mul i32 %225, %227
  %229 = urem i32 %228, 2
  %230 = icmp eq i32 %229, 0
  %231 = icmp slt i32 %226, 10
  %232 = or i1 %230, %231
  br i1 %232, label %originalBBpart280, label %originalBB60alteredBB

originalBBpart280:                                ; preds = %originalBB60
  ret i32 %224

originalBBalteredBB:                              ; preds = %originalBB, %5
  call void @srand(i32 %1)
  %233 = call i32 @rand()
  %_ = shl i32 %233, 50000
  %_1 = sub i32 0, %233
  %gen = add i32 %_1, 50000
  %_2 = sub i32 0, %233
  %gen3 = add i32 %_2, 50000
  %_4 = shl i32 %233, 50000
  %_5 = sub i32 0, %233
  %gen6 = add i32 %_5, 50000
  %_7 = sub i32 0, %233
  %gen8 = add i32 %_7, 50000
  %_9 = sub i32 %233, 50000
  %gen10 = mul i32 %_9, 50000
  %_11 = sub i32 %233, 50000
  %gen12 = mul i32 %_11, 50000
  %_13 = shl i32 %233, 50000
  %234 = srem i32 %233, 50000
  %_14 = sub i32 %234, 2
  %gen15 = mul i32 %_14, 2
  %_16 = sub i32 0, %234
  %gen17 = add i32 %_16, 2
  %_18 = sub i32 %234, 2
  %gen19 = mul i32 %_18, 2
  %235 = add i32 %234, 2
  br label %originalBB

originalBB20alteredBB:                            ; preds = %originalBB20, %25
  %236 = getelementptr inbounds [1 x i8], [1 x i8]* @.compVal2, i32 0, i32 0
  %237 = call i32 @strcmp(i8* %236, i8* %0)
  %238 = icmp eq i32 %237, 0
  br label %originalBB20

originalBB24alteredBB:                            ; preds = %originalBB24, %47
  br label %originalBB24

originalBB28alteredBB:                            ; preds = %originalBB28, %64
  %239 = getelementptr inbounds [4 x i8], [4 x i8]* @.compVal1, i32 0, i32 0
  %240 = call i32 @strcmp(i8* %239, i8* %0)
  %241 = icmp eq i32 %240, 0
  br label %originalBB28

originalBB32alteredBB:                            ; preds = %originalBB32, %84
  %242 = icmp eq i32 %1, 43
  br label %originalBB32

originalBB36alteredBB:                            ; preds = %originalBB36, %102
  br label %originalBB36

originalBB40alteredBB:                            ; preds = %originalBB40, %123
  %243 = icmp eq i32 %1, -1
  br label %originalBB40

originalBB44alteredBB:                            ; preds = %originalBB44, %141
  br label %originalBB44

originalBB48alteredBB:                            ; preds = %originalBB48, %158
  %244 = getelementptr inbounds [2 x i8], [2 x i8]* @.compVal0, i32 0, i32 0
  %245 = call i32 @strcmp(i8* %244, i8* %0)
  %246 = icmp eq i32 %245, 0
  br label %originalBB48

originalBB52alteredBB:                            ; preds = %originalBB52, %178
  %247 = icmp eq i32 %1, 0
  br label %originalBB52

originalBB56alteredBB:                            ; preds = %originalBB56, %196
  br label %originalBB56

originalBB60alteredBB:                            ; preds = %originalBB60, %213
  call void @srand(i32 %1)
  %248 = call i32 @rand()
  %_61 = shl i32 %248, 50000
  %_62 = shl i32 %248, 50000
  %_63 = sub i32 %248, 50000
  %gen64 = mul i32 %_63, 50000
  %249 = srem i32 %248, 50000
  %_65 = sub i32 %249, 2
  %gen66 = mul i32 %_65, 2
  %_67 = shl i32 %249, 2
  %_68 = sub i32 0, %249
  %gen69 = add i32 %_68, 2
  %_70 = sub i32 %249, 2
  %gen71 = mul i32 %_70, 2
  %_72 = sub i32 0, %249
  %gen73 = add i32 %_72, 2
  %_74 = sub i32 0, %249
  %gen75 = add i32 %_74, 2
  %_76 = shl i32 %249, 2
  %_77 = sub i32 0, %249
  %gen78 = add i32 %_77, 2
  %250 = add i32 %249, 2
  br label %originalBB60
}

declare void @srand(i32)

declare i32 @rand()

attributes #0 = { noinline noreturn nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { noinline nounwind optnone readonly uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn nounwind }
attributes #13 = { nounwind readonly }
attributes #14 = { noreturn }
attributes #15 = { nounwind readnone }

!llvm.dbg.cu = !{!2, !82, !88, !93, !101, !202, !108, !115, !208, !185, !210, !195, !213, !216, !218, !220, !232, !235, !241, !243, !245, !247, !250, !252, !254, !256, !258, !260}
!llvm.ident = !{!263, !263, !263, !263, !263, !263, !263, !263, !263, !263, !263, !263, !263, !263, !263, !263, !263, !263, !263, !263, !263, !263, !263, !263, !263, !263, !263, !263}
!llvm.module.flags = !{!264, !265, !266, !267, !268}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "longopts", scope: !2, file: !3, line: 75, type: !63, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !9, nameTableKind: None)
!3 = !DIFile(filename: "src/id.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!4 = !{}
!5 = !{!6, !8}
!6 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!7 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!8 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!9 = !{!10, !17, !19, !23, !0, !25, !28, !30, !32, !34, !36, !38, !40, !42, !44, !46, !56}
!10 = !DIGlobalVariableExpression(var: !11, expr: !DIExpression())
!11 = distinct !DIGlobalVariable(name: "ruid", scope: !2, file: !3, line: 64, type: !12, isLocal: true, isDefinition: true)
!12 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !13, line: 79, baseType: !14)
!13 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/types.h", directory: "")
!14 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !15, line: 146, baseType: !16)
!15 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!16 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!17 = !DIGlobalVariableExpression(var: !18, expr: !DIExpression())
!18 = distinct !DIGlobalVariable(name: "euid", scope: !2, file: !3, line: 64, type: !12, isLocal: true, isDefinition: true)
!19 = !DIGlobalVariableExpression(var: !20, expr: !DIExpression())
!20 = distinct !DIGlobalVariable(name: "rgid", scope: !2, file: !3, line: 65, type: !21, isLocal: true, isDefinition: true)
!21 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !13, line: 64, baseType: !22)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !15, line: 147, baseType: !16)
!23 = !DIGlobalVariableExpression(var: !24, expr: !DIExpression())
!24 = distinct !DIGlobalVariable(name: "egid", scope: !2, file: !3, line: 65, type: !21, isLocal: true, isDefinition: true)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "just_context", scope: !2, file: !3, line: 45, type: !27, isLocal: true, isDefinition: true)
!27 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!28 = !DIGlobalVariableExpression(var: !29, expr: !DIExpression())
!29 = distinct !DIGlobalVariable(name: "just_group", scope: !2, file: !3, line: 51, type: !27, isLocal: true, isDefinition: true)
!30 = !DIGlobalVariableExpression(var: !31, expr: !DIExpression())
!31 = distinct !DIGlobalVariable(name: "use_name", scope: !2, file: !3, line: 61, type: !27, isLocal: true, isDefinition: true)
!32 = !DIGlobalVariableExpression(var: !33, expr: !DIExpression())
!33 = distinct !DIGlobalVariable(name: "use_real", scope: !2, file: !3, line: 53, type: !27, isLocal: true, isDefinition: true)
!34 = !DIGlobalVariableExpression(var: !35, expr: !DIExpression())
!35 = distinct !DIGlobalVariable(name: "just_user", scope: !2, file: !3, line: 55, type: !27, isLocal: true, isDefinition: true)
!36 = !DIGlobalVariableExpression(var: !37, expr: !DIExpression())
!37 = distinct !DIGlobalVariable(name: "opt_zero", scope: !2, file: !3, line: 47, type: !27, isLocal: true, isDefinition: true)
!38 = !DIGlobalVariableExpression(var: !39, expr: !DIExpression())
!39 = distinct !DIGlobalVariable(name: "just_group_list", scope: !2, file: !3, line: 49, type: !27, isLocal: true, isDefinition: true)
!40 = !DIGlobalVariableExpression(var: !41, expr: !DIExpression())
!41 = distinct !DIGlobalVariable(name: "context", scope: !2, file: !3, line: 69, type: !6, isLocal: true, isDefinition: true)
!42 = !DIGlobalVariableExpression(var: !43, expr: !DIExpression())
!43 = distinct !DIGlobalVariable(name: "multiple_users", scope: !2, file: !3, line: 59, type: !27, isLocal: true, isDefinition: true)
!44 = !DIGlobalVariableExpression(var: !45, expr: !DIExpression())
!45 = distinct !DIGlobalVariable(name: "ok", scope: !2, file: !3, line: 57, type: !27, isLocal: true, isDefinition: true)
!46 = !DIGlobalVariableExpression(var: !47, expr: !DIExpression())
!47 = distinct !DIGlobalVariable(name: "buf", scope: !48, file: !3, line: 327, type: !53, isLocal: true, isDefinition: true)
!48 = distinct !DISubprogram(name: "uidtostr_ptr", scope: !3, file: !3, line: 325, type: !49, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!49 = !DISubroutineType(types: !50)
!50 = !{!6, !51}
!51 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !52, size: 64)
!52 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12)
!53 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 168, elements: !54)
!54 = !{!55}
!55 = !DISubrange(count: 21)
!56 = !DIGlobalVariableExpression(var: !57, expr: !DIExpression())
!57 = distinct !DIGlobalVariable(name: "buf", scope: !58, file: !3, line: 316, type: !53, isLocal: true, isDefinition: true)
!58 = distinct !DISubprogram(name: "gidtostr_ptr", scope: !3, file: !3, line: 314, type: !59, scopeLine: 315, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!59 = !DISubroutineType(types: !60)
!60 = !{!6, !61}
!61 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !62, size: 64)
!62 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !21)
!63 = !DICompositeType(tag: DW_TAG_array_type, baseType: !64, size: 2560, elements: !76)
!64 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !65)
!65 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !66, line: 50, size: 256, elements: !67)
!66 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/getopt_ext.h", directory: "")
!67 = !{!68, !71, !73, !75}
!68 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !65, file: !66, line: 52, baseType: !69, size: 64)
!69 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !70, size: 64)
!70 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!71 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !65, file: !66, line: 55, baseType: !72, size: 32, offset: 64)
!72 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!73 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !65, file: !66, line: 56, baseType: !74, size: 64, offset: 128)
!74 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !72, size: 64)
!75 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !65, file: !66, line: 57, baseType: !72, size: 32, offset: 192)
!76 = !{!77}
!77 = !DISubrange(count: 10)
!78 = !DIGlobalVariableExpression(var: !79, expr: !DIExpression())
!79 = distinct !DIGlobalVariable(name: "buf", scope: !80, file: !81, line: 96, type: !53, isLocal: true, isDefinition: true)
!80 = distinct !DISubprogram(name: "gidtostr_ptr", scope: !81, file: !81, line: 94, type: !59, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, retainedNodes: !4)
!81 = !DIFile(filename: "src/group-list.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!82 = distinct !DICompileUnit(language: DW_LANG_C99, file: !81, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !83, globals: !85, nameTableKind: None)
!83 = !{!8, !84}
!84 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!85 = !{!78}
!86 = !DIGlobalVariableExpression(var: !87, expr: !DIExpression())
!87 = distinct !DIGlobalVariable(name: "Version", scope: !88, file: !89, line: 2, type: !69, isLocal: false, isDefinition: true)
!88 = distinct !DICompileUnit(language: DW_LANG_C99, file: !89, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, globals: !90, nameTableKind: None)
!89 = !DIFile(filename: "src/version.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!90 = !{!86}
!91 = !DIGlobalVariableExpression(var: !92, expr: !DIExpression())
!92 = distinct !DIGlobalVariable(name: "ignore_EPIPE", scope: !93, file: !98, line: 56, type: !27, isLocal: true, isDefinition: true)
!93 = distinct !DICompileUnit(language: DW_LANG_C99, file: !94, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, globals: !95, nameTableKind: None)
!94 = !DIFile(filename: "./lib/closeout.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!95 = !{!96, !91}
!96 = !DIGlobalVariableExpression(var: !97, expr: !DIExpression())
!97 = distinct !DIGlobalVariable(name: "file_name", scope: !93, file: !98, line: 46, type: !69, isLocal: true, isDefinition: true)
!98 = !DIFile(filename: "lib/closeout.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!99 = !DIGlobalVariableExpression(var: !100, expr: !DIExpression())
!100 = distinct !DIGlobalVariable(name: "exit_failure", scope: !101, file: !104, line: 24, type: !105, isLocal: false, isDefinition: true)
!101 = distinct !DICompileUnit(language: DW_LANG_C99, file: !102, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, globals: !103, nameTableKind: None)
!102 = !DIFile(filename: "./lib/exitfail.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!103 = !{!99}
!104 = !DIFile(filename: "lib/exitfail.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!105 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !72)
!106 = !DIGlobalVariableExpression(var: !107, expr: !DIExpression())
!107 = distinct !DIGlobalVariable(name: "program_name", scope: !108, file: !112, line: 33, type: !69, isLocal: false, isDefinition: true)
!108 = distinct !DICompileUnit(language: DW_LANG_C99, file: !109, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !110, globals: !111, nameTableKind: None)
!109 = !DIFile(filename: "./lib/progname.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!110 = !{!8, !6}
!111 = !{!106}
!112 = !DIFile(filename: "lib/progname.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!113 = !DIGlobalVariableExpression(var: !114, expr: !DIExpression())
!114 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !115, file: !139, line: 116, type: !150, isLocal: true, isDefinition: true)
!115 = distinct !DICompileUnit(language: DW_LANG_C99, file: !116, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !117, retainedTypes: !132, globals: !136, nameTableKind: None)
!116 = !DIFile(filename: "./lib/quotearg.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!117 = !{!118}
!118 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quoting_style", file: !119, line: 32, baseType: !16, size: 32, elements: !120)
!119 = !DIFile(filename: "./lib/quotearg.h", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!120 = !{!121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131}
!121 = !DIEnumerator(name: "literal_quoting_style", value: 0, isUnsigned: true)
!122 = !DIEnumerator(name: "shell_quoting_style", value: 1, isUnsigned: true)
!123 = !DIEnumerator(name: "shell_always_quoting_style", value: 2, isUnsigned: true)
!124 = !DIEnumerator(name: "shell_escape_quoting_style", value: 3, isUnsigned: true)
!125 = !DIEnumerator(name: "shell_escape_always_quoting_style", value: 4, isUnsigned: true)
!126 = !DIEnumerator(name: "c_quoting_style", value: 5, isUnsigned: true)
!127 = !DIEnumerator(name: "c_maybe_quoting_style", value: 6, isUnsigned: true)
!128 = !DIEnumerator(name: "escape_quoting_style", value: 7, isUnsigned: true)
!129 = !DIEnumerator(name: "locale_quoting_style", value: 8, isUnsigned: true)
!130 = !DIEnumerator(name: "clocale_quoting_style", value: 9, isUnsigned: true)
!131 = !DIEnumerator(name: "custom_quoting_style", value: 10, isUnsigned: true)
!132 = !{!72, !133, !134}
!133 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!134 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !135, line: 46, baseType: !84)
!135 = !DIFile(filename: "/usr/lib/llvm-9/lib/clang/9.0.1/include/stddef.h", directory: "")
!136 = !{!137, !144, !148, !113, !160, !165, !172, !174}
!137 = !DIGlobalVariableExpression(var: !138, expr: !DIExpression())
!138 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !115, file: !139, line: 85, type: !140, isLocal: false, isDefinition: true)
!139 = !DIFile(filename: "lib/quotearg.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!140 = !DICompositeType(tag: DW_TAG_array_type, baseType: !141, size: 704, elements: !142)
!141 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !69)
!142 = !{!143}
!143 = !DISubrange(count: 11)
!144 = !DIGlobalVariableExpression(var: !145, expr: !DIExpression())
!145 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !115, file: !139, line: 101, type: !146, isLocal: false, isDefinition: true)
!146 = !DICompositeType(tag: DW_TAG_array_type, baseType: !147, size: 320, elements: !76)
!147 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !118)
!148 = !DIGlobalVariableExpression(var: !149, expr: !DIExpression())
!149 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !115, file: !139, line: 1052, type: !150, isLocal: false, isDefinition: true)
!150 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !139, line: 65, size: 448, elements: !151)
!151 = !{!152, !153, !154, !158, !159}
!152 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !150, file: !139, line: 68, baseType: !118, size: 32)
!153 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !150, file: !139, line: 71, baseType: !72, size: 32, offset: 32)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !150, file: !139, line: 75, baseType: !155, size: 256, offset: 64)
!155 = !DICompositeType(tag: DW_TAG_array_type, baseType: !16, size: 256, elements: !156)
!156 = !{!157}
!157 = !DISubrange(count: 8)
!158 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !150, file: !139, line: 78, baseType: !69, size: 64, offset: 320)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !150, file: !139, line: 81, baseType: !69, size: 64, offset: 384)
!160 = !DIGlobalVariableExpression(var: !161, expr: !DIExpression())
!161 = distinct !DIGlobalVariable(name: "slot0", scope: !115, file: !139, line: 842, type: !162, isLocal: true, isDefinition: true)
!162 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 2048, elements: !163)
!163 = !{!164}
!164 = !DISubrange(count: 256)
!165 = !DIGlobalVariableExpression(var: !166, expr: !DIExpression())
!166 = distinct !DIGlobalVariable(name: "slotvec", scope: !115, file: !139, line: 845, type: !167, isLocal: true, isDefinition: true)
!167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !168, size: 64)
!168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !139, line: 834, size: 128, elements: !169)
!169 = !{!170, !171}
!170 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !168, file: !139, line: 836, baseType: !134, size: 64)
!171 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !168, file: !139, line: 837, baseType: !6, size: 64, offset: 64)
!172 = !DIGlobalVariableExpression(var: !173, expr: !DIExpression())
!173 = distinct !DIGlobalVariable(name: "nslots", scope: !115, file: !139, line: 843, type: !72, isLocal: true, isDefinition: true)
!174 = !DIGlobalVariableExpression(var: !175, expr: !DIExpression())
!175 = distinct !DIGlobalVariable(name: "slotvec0", scope: !115, file: !139, line: 844, type: !168, isLocal: true, isDefinition: true)
!176 = !DIGlobalVariableExpression(var: !177, expr: !DIExpression())
!177 = distinct !DIGlobalVariable(name: "E_bad_spec", scope: !178, file: !179, line: 108, type: !69, isLocal: true, isDefinition: true)
!178 = distinct !DISubprogram(name: "parse_with_separator", scope: !179, file: !179, line: 102, type: !180, scopeLine: 105, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !185, retainedNodes: !4)
!179 = !DIFile(filename: "lib/userspec.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!180 = !DISubroutineType(types: !181)
!181 = !{!69, !69, !69, !182, !183, !184, !184}
!182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12, size: 64)
!183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !21, size: 64)
!184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6, size: 64)
!185 = distinct !DICompileUnit(language: DW_LANG_C99, file: !186, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !187, globals: !188, nameTableKind: None)
!186 = !DIFile(filename: "./lib/userspec.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!187 = !{!8, !12, !21}
!188 = !{!189, !191, !176}
!189 = !DIGlobalVariableExpression(var: !190, expr: !DIExpression())
!190 = distinct !DIGlobalVariable(name: "E_invalid_user", scope: !178, file: !179, line: 106, type: !69, isLocal: true, isDefinition: true)
!191 = !DIGlobalVariableExpression(var: !192, expr: !DIExpression())
!192 = distinct !DIGlobalVariable(name: "E_invalid_group", scope: !178, file: !179, line: 107, type: !69, isLocal: true, isDefinition: true)
!193 = !DIGlobalVariableExpression(var: !194, expr: !DIExpression())
!194 = distinct !DIGlobalVariable(name: "version_etc_copyright", scope: !195, file: !198, line: 26, type: !199, isLocal: false, isDefinition: true)
!195 = distinct !DICompileUnit(language: DW_LANG_C99, file: !196, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, globals: !197, nameTableKind: None)
!196 = !DIFile(filename: "./lib/version-etc-fsf.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!197 = !{!193}
!198 = !DIFile(filename: "lib/version-etc-fsf.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!199 = !DICompositeType(tag: DW_TAG_array_type, baseType: !70, size: 376, elements: !200)
!200 = !{!201}
!201 = !DISubrange(count: 47)
!202 = distinct !DICompileUnit(language: DW_LANG_C99, file: !203, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !204, nameTableKind: None)
!203 = !DIFile(filename: "./lib/umaxtostr.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!204 = !{!205}
!205 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !206, line: 102, baseType: !207)
!206 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!207 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uintmax_t", file: !15, line: 73, baseType: !84)
!208 = distinct !DICompileUnit(language: DW_LANG_C99, file: !209, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, nameTableKind: None)
!209 = !DIFile(filename: "./lib/se-selinux.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!210 = distinct !DICompileUnit(language: DW_LANG_C99, file: !211, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !212, nameTableKind: None)
!211 = !DIFile(filename: "./lib/version-etc.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!212 = !{!8}
!213 = distinct !DICompileUnit(language: DW_LANG_C99, file: !214, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !215, nameTableKind: None)
!214 = !DIFile(filename: "./lib/xmalloc.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!215 = !{!134, !6, !8}
!216 = distinct !DICompileUnit(language: DW_LANG_C99, file: !217, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, nameTableKind: None)
!217 = !DIFile(filename: "./lib/xalloc-die.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!218 = distinct !DICompileUnit(language: DW_LANG_C99, file: !219, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, nameTableKind: None)
!219 = !DIFile(filename: "./lib/xgetgroups.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!220 = distinct !DICompileUnit(language: DW_LANG_C99, file: !221, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !222, retainedTypes: !231, nameTableKind: None)
!221 = !DIFile(filename: "./lib/xstrtoul.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!222 = !{!223}
!223 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "strtol_error", file: !224, line: 25, baseType: !16, size: 32, elements: !225)
!224 = !DIFile(filename: "./lib/xstrtol.h", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!225 = !{!226, !227, !228, !229, !230}
!226 = !DIEnumerator(name: "LONGINT_OK", value: 0, isUnsigned: true)
!227 = !DIEnumerator(name: "LONGINT_OVERFLOW", value: 1, isUnsigned: true)
!228 = !DIEnumerator(name: "LONGINT_INVALID_SUFFIX_CHAR", value: 2, isUnsigned: true)
!229 = !DIEnumerator(name: "LONGINT_INVALID_SUFFIX_CHAR_WITH_OVERFLOW", value: 3, isUnsigned: true)
!230 = !DIEnumerator(name: "LONGINT_INVALID", value: 4, isUnsigned: true)
!231 = !{!72, !133}
!232 = distinct !DICompileUnit(language: DW_LANG_C99, file: !233, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !234, nameTableKind: None)
!233 = !DIFile(filename: "./lib/mbrtowc.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!234 = !{!134}
!235 = distinct !DICompileUnit(language: DW_LANG_C99, file: !236, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !237, nameTableKind: None)
!236 = !DIFile(filename: "./lib/c-strcasecmp.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!237 = !{!238}
!238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !239, size: 64)
!239 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !240)
!240 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!241 = distinct !DICompileUnit(language: DW_LANG_C99, file: !242, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, nameTableKind: None)
!242 = !DIFile(filename: "./lib/close-stream.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!243 = distinct !DICompileUnit(language: DW_LANG_C99, file: !244, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, nameTableKind: None)
!244 = !DIFile(filename: "./lib/hard-locale.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!245 = distinct !DICompileUnit(language: DW_LANG_C99, file: !246, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !212, nameTableKind: None)
!246 = !DIFile(filename: "./lib/localcharset.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!247 = distinct !DICompileUnit(language: DW_LANG_C99, file: !248, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !249, nameTableKind: None)
!248 = !DIFile(filename: "./lib/mgetgroups.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!249 = !{!8, !21, !134}
!250 = distinct !DICompileUnit(language: DW_LANG_C99, file: !251, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !212, nameTableKind: None)
!251 = !DIFile(filename: "./lib/setlocale_null.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!252 = distinct !DICompileUnit(language: DW_LANG_C99, file: !253, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, nameTableKind: None)
!253 = !DIFile(filename: "./lib/fclose.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!254 = distinct !DICompileUnit(language: DW_LANG_C99, file: !255, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !212, nameTableKind: None)
!255 = !DIFile(filename: "./lib/fflush.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!256 = distinct !DICompileUnit(language: DW_LANG_C99, file: !257, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !212, nameTableKind: None)
!257 = !DIFile(filename: "./lib/fseeko.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!258 = distinct !DICompileUnit(language: DW_LANG_C99, file: !259, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, nameTableKind: None)
!259 = !DIFile(filename: "./lib/c-ctype.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!260 = distinct !DICompileUnit(language: DW_LANG_C99, file: !261, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !262, nameTableKind: None)
!261 = !DIFile(filename: "./lib/getugroups.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!262 = !{!21, !8}
!263 = !{!"clang version 9.0.1-12 "}
!264 = !{i32 2, !"Dwarf Version", i32 4}
!265 = !{i32 2, !"Debug Info Version", i32 3}
!266 = !{i32 1, !"wchar_size", i32 4}
!267 = !{i32 1, !"ThinLTO", i32 0}
!268 = !{i32 1, !"EnableSplitLTOUnit", i32 0}
!269 = distinct !DISubprogram(name: "usage", scope: !3, file: !3, line: 90, type: !270, scopeLine: 91, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4)
!270 = !DISubroutineType(types: !271)
!271 = !{null, !72}
!272 = !DILocalVariable(name: "status", arg: 1, scope: !269, file: !3, line: 90, type: !72)
!273 = !DILocation(line: 90, column: 12, scope: !269)
!274 = !DILocation(line: 92, column: 7, scope: !275)
!275 = distinct !DILexicalBlock(scope: !269, file: !3, line: 92, column: 7)
!276 = !DILocation(line: 92, column: 14, scope: !275)
!277 = !DILocation(line: 92, column: 7, scope: !269)
!278 = !DILocation(line: 93, column: 5, scope: !275)
!279 = !DILocation(line: 93, column: 5, scope: !280)
!280 = distinct !DILexicalBlock(scope: !275, file: !3, line: 93, column: 5)
!281 = !DILocation(line: 96, column: 15, scope: !282)
!282 = distinct !DILexicalBlock(scope: !275, file: !3, line: 95, column: 5)
!283 = !DILocation(line: 96, column: 55, scope: !282)
!284 = !DILocation(line: 96, column: 7, scope: !282)
!285 = !DILocation(line: 97, column: 7, scope: !282)
!286 = !DILocation(line: 102, column: 7, scope: !282)
!287 = !DILocation(line: 113, column: 7, scope: !282)
!288 = !DILocation(line: 114, column: 7, scope: !282)
!289 = !DILocation(line: 115, column: 7, scope: !282)
!290 = !DILocation(line: 119, column: 7, scope: !282)
!291 = !DILocation(line: 121, column: 9, scope: !269)
!292 = !DILocation(line: 121, column: 3, scope: !269)
!293 = !DILocalVariable(name: "status", arg: 1, scope: !294, file: !3, line: 90, type: !72)
!294 = distinct !DISubprogram(name: "usage", scope: !3, file: !3, line: 90, type: !270, scopeLine: 91, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !295, retainedNodes: !4)
!295 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !296, nameTableKind: None)
!296 = !{!297, !299, !301, !303, !305, !315, !317, !319, !321, !323, !325, !327, !329, !331, !333, !335, !338}
!297 = !DIGlobalVariableExpression(var: !298, expr: !DIExpression())
!298 = distinct !DIGlobalVariable(name: "ruid", scope: !295, file: !3, line: 64, type: !12, isLocal: true, isDefinition: true)
!299 = !DIGlobalVariableExpression(var: !300, expr: !DIExpression())
!300 = distinct !DIGlobalVariable(name: "euid", scope: !295, file: !3, line: 64, type: !12, isLocal: true, isDefinition: true)
!301 = !DIGlobalVariableExpression(var: !302, expr: !DIExpression())
!302 = distinct !DIGlobalVariable(name: "rgid", scope: !295, file: !3, line: 65, type: !21, isLocal: true, isDefinition: true)
!303 = !DIGlobalVariableExpression(var: !304, expr: !DIExpression())
!304 = distinct !DIGlobalVariable(name: "egid", scope: !295, file: !3, line: 65, type: !21, isLocal: true, isDefinition: true)
!305 = !DIGlobalVariableExpression(var: !306, expr: !DIExpression())
!306 = distinct !DIGlobalVariable(name: "longopts", scope: !295, file: !3, line: 75, type: !307, isLocal: true, isDefinition: true)
!307 = !DICompositeType(tag: DW_TAG_array_type, baseType: !308, size: 2560, elements: !76)
!308 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !309)
!309 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !66, line: 50, size: 256, elements: !310)
!310 = !{!311, !312, !313, !314}
!311 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !309, file: !66, line: 52, baseType: !69, size: 64)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !309, file: !66, line: 55, baseType: !72, size: 32, offset: 64)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !309, file: !66, line: 56, baseType: !74, size: 64, offset: 128)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !309, file: !66, line: 57, baseType: !72, size: 32, offset: 192)
!315 = !DIGlobalVariableExpression(var: !316, expr: !DIExpression())
!316 = distinct !DIGlobalVariable(name: "just_context", scope: !295, file: !3, line: 45, type: !27, isLocal: true, isDefinition: true)
!317 = !DIGlobalVariableExpression(var: !318, expr: !DIExpression())
!318 = distinct !DIGlobalVariable(name: "just_group", scope: !295, file: !3, line: 51, type: !27, isLocal: true, isDefinition: true)
!319 = !DIGlobalVariableExpression(var: !320, expr: !DIExpression())
!320 = distinct !DIGlobalVariable(name: "use_name", scope: !295, file: !3, line: 61, type: !27, isLocal: true, isDefinition: true)
!321 = !DIGlobalVariableExpression(var: !322, expr: !DIExpression())
!322 = distinct !DIGlobalVariable(name: "use_real", scope: !295, file: !3, line: 53, type: !27, isLocal: true, isDefinition: true)
!323 = !DIGlobalVariableExpression(var: !324, expr: !DIExpression())
!324 = distinct !DIGlobalVariable(name: "just_user", scope: !295, file: !3, line: 55, type: !27, isLocal: true, isDefinition: true)
!325 = !DIGlobalVariableExpression(var: !326, expr: !DIExpression())
!326 = distinct !DIGlobalVariable(name: "opt_zero", scope: !295, file: !3, line: 47, type: !27, isLocal: true, isDefinition: true)
!327 = !DIGlobalVariableExpression(var: !328, expr: !DIExpression())
!328 = distinct !DIGlobalVariable(name: "just_group_list", scope: !295, file: !3, line: 49, type: !27, isLocal: true, isDefinition: true)
!329 = !DIGlobalVariableExpression(var: !330, expr: !DIExpression())
!330 = distinct !DIGlobalVariable(name: "context", scope: !295, file: !3, line: 69, type: !6, isLocal: true, isDefinition: true)
!331 = !DIGlobalVariableExpression(var: !332, expr: !DIExpression())
!332 = distinct !DIGlobalVariable(name: "multiple_users", scope: !295, file: !3, line: 59, type: !27, isLocal: true, isDefinition: true)
!333 = !DIGlobalVariableExpression(var: !334, expr: !DIExpression())
!334 = distinct !DIGlobalVariable(name: "ok", scope: !295, file: !3, line: 57, type: !27, isLocal: true, isDefinition: true)
!335 = !DIGlobalVariableExpression(var: !336, expr: !DIExpression())
!336 = distinct !DIGlobalVariable(name: "buf", scope: !337, file: !3, line: 327, type: !53, isLocal: true, isDefinition: true)
!337 = distinct !DISubprogram(name: "uidtostr_ptr", scope: !3, file: !3, line: 325, type: !49, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !295, retainedNodes: !4)
!338 = !DIGlobalVariableExpression(var: !339, expr: !DIExpression())
!339 = distinct !DIGlobalVariable(name: "buf", scope: !340, file: !3, line: 316, type: !53, isLocal: true, isDefinition: true)
!340 = distinct !DISubprogram(name: "gidtostr_ptr", scope: !3, file: !3, line: 314, type: !59, scopeLine: 315, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !295, retainedNodes: !4)
!341 = distinct !DISubprogram(name: "emit_ancillary_info", scope: !342, file: !342, line: 634, type: !343, scopeLine: 635, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!342 = !DIFile(filename: "src/system.h", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!343 = !DISubroutineType(types: !344)
!344 = !{null, !69}
!345 = !DILocalVariable(name: "program", arg: 1, scope: !341, file: !342, line: 634, type: !69)
!346 = !DILocation(line: 634, column: 34, scope: !341)
!347 = !DILocalVariable(name: "infomap", scope: !341, file: !342, line: 636, type: !348)
!348 = !DICompositeType(tag: DW_TAG_array_type, baseType: !349, size: 896, elements: !354)
!349 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !350)
!350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "infomap", scope: !341, file: !342, line: 636, size: 128, elements: !351)
!351 = !{!352, !353}
!352 = !DIDerivedType(tag: DW_TAG_member, name: "program", scope: !350, file: !342, line: 636, baseType: !69, size: 64)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !350, file: !342, line: 636, baseType: !69, size: 64, offset: 64)
!354 = !{!355}
!355 = !DISubrange(count: 7)
!356 = !DILocation(line: 636, column: 67, scope: !341)
!357 = !DILocalVariable(name: "node", scope: !341, file: !342, line: 646, type: !69)
!358 = !DILocation(line: 646, column: 15, scope: !341)
!359 = !DILocation(line: 646, column: 22, scope: !341)
!360 = !DILocalVariable(name: "map_prog", scope: !341, file: !342, line: 647, type: !361)
!361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !349, size: 64)
!362 = !DILocation(line: 647, column: 25, scope: !341)
!363 = !DILocation(line: 647, column: 36, scope: !341)
!364 = !DILocation(line: 649, column: 3, scope: !341)
!365 = !DILocation(line: 649, column: 10, scope: !341)
!366 = !DILocation(line: 649, column: 20, scope: !341)
!367 = !DILocation(line: 649, column: 28, scope: !341)
!368 = !DILocation(line: 649, column: 33, scope: !341)
!369 = !DILocation(line: 649, column: 31, scope: !341)
!370 = !DILocation(line: 0, scope: !341)
!371 = !DILocation(line: 650, column: 13, scope: !341)
!372 = distinct !{!372, !364, !371}
!373 = !DILocation(line: 652, column: 7, scope: !374)
!374 = distinct !DILexicalBlock(scope: !341, file: !342, line: 652, column: 7)
!375 = !DILocation(line: 652, column: 17, scope: !374)
!376 = !DILocation(line: 652, column: 7, scope: !341)
!377 = !DILocation(line: 653, column: 12, scope: !374)
!378 = !DILocation(line: 653, column: 22, scope: !374)
!379 = !DILocation(line: 653, column: 10, scope: !374)
!380 = !DILocation(line: 653, column: 5, scope: !374)
!381 = !DILocation(line: 655, column: 11, scope: !341)
!382 = !DILocation(line: 655, column: 3, scope: !341)
!383 = !DILocalVariable(name: "lc_messages", scope: !341, file: !342, line: 659, type: !69)
!384 = !DILocation(line: 659, column: 15, scope: !341)
!385 = !DILocation(line: 659, column: 29, scope: !341)
!386 = !DILocation(line: 660, column: 7, scope: !387)
!387 = distinct !DILexicalBlock(scope: !341, file: !342, line: 660, column: 7)
!388 = !DILocation(line: 660, column: 19, scope: !387)
!389 = !DILocation(line: 660, column: 22, scope: !387)
!390 = !DILocation(line: 660, column: 7, scope: !341)
!391 = !DILocation(line: 666, column: 7, scope: !392)
!392 = distinct !DILexicalBlock(scope: !387, file: !342, line: 661, column: 5)
!393 = !DILocation(line: 668, column: 5, scope: !392)
!394 = !DILocation(line: 669, column: 11, scope: !341)
!395 = !DILocation(line: 670, column: 24, scope: !341)
!396 = !DILocation(line: 669, column: 3, scope: !341)
!397 = !DILocation(line: 671, column: 11, scope: !341)
!398 = !DILocation(line: 672, column: 11, scope: !341)
!399 = !DILocation(line: 672, column: 17, scope: !341)
!400 = !DILocation(line: 672, column: 25, scope: !341)
!401 = !DILocation(line: 672, column: 22, scope: !341)
!402 = !DILocation(line: 671, column: 3, scope: !341)
!403 = !DILocation(line: 673, column: 1, scope: !341)
!404 = !DILocalVariable(name: "program", arg: 1, scope: !405, file: !342, line: 634, type: !69)
!405 = distinct !DISubprogram(name: "emit_ancillary_info", scope: !342, file: !342, line: 634, type: !343, scopeLine: 635, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !406, retainedNodes: !4)
!406 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !407, nameTableKind: None)
!407 = !{!408, !410, !412, !414, !416, !426, !428, !430, !432, !434, !436, !438, !440, !442, !444, !446, !449}
!408 = !DIGlobalVariableExpression(var: !409, expr: !DIExpression())
!409 = distinct !DIGlobalVariable(name: "ruid", scope: !406, file: !3, line: 64, type: !12, isLocal: true, isDefinition: true)
!410 = !DIGlobalVariableExpression(var: !411, expr: !DIExpression())
!411 = distinct !DIGlobalVariable(name: "euid", scope: !406, file: !3, line: 64, type: !12, isLocal: true, isDefinition: true)
!412 = !DIGlobalVariableExpression(var: !413, expr: !DIExpression())
!413 = distinct !DIGlobalVariable(name: "rgid", scope: !406, file: !3, line: 65, type: !21, isLocal: true, isDefinition: true)
!414 = !DIGlobalVariableExpression(var: !415, expr: !DIExpression())
!415 = distinct !DIGlobalVariable(name: "egid", scope: !406, file: !3, line: 65, type: !21, isLocal: true, isDefinition: true)
!416 = !DIGlobalVariableExpression(var: !417, expr: !DIExpression())
!417 = distinct !DIGlobalVariable(name: "longopts", scope: !406, file: !3, line: 75, type: !418, isLocal: true, isDefinition: true)
!418 = !DICompositeType(tag: DW_TAG_array_type, baseType: !419, size: 2560, elements: !76)
!419 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !420)
!420 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !66, line: 50, size: 256, elements: !421)
!421 = !{!422, !423, !424, !425}
!422 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !420, file: !66, line: 52, baseType: !69, size: 64)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !420, file: !66, line: 55, baseType: !72, size: 32, offset: 64)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !420, file: !66, line: 56, baseType: !74, size: 64, offset: 128)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !420, file: !66, line: 57, baseType: !72, size: 32, offset: 192)
!426 = !DIGlobalVariableExpression(var: !427, expr: !DIExpression())
!427 = distinct !DIGlobalVariable(name: "just_context", scope: !406, file: !3, line: 45, type: !27, isLocal: true, isDefinition: true)
!428 = !DIGlobalVariableExpression(var: !429, expr: !DIExpression())
!429 = distinct !DIGlobalVariable(name: "just_group", scope: !406, file: !3, line: 51, type: !27, isLocal: true, isDefinition: true)
!430 = !DIGlobalVariableExpression(var: !431, expr: !DIExpression())
!431 = distinct !DIGlobalVariable(name: "use_name", scope: !406, file: !3, line: 61, type: !27, isLocal: true, isDefinition: true)
!432 = !DIGlobalVariableExpression(var: !433, expr: !DIExpression())
!433 = distinct !DIGlobalVariable(name: "use_real", scope: !406, file: !3, line: 53, type: !27, isLocal: true, isDefinition: true)
!434 = !DIGlobalVariableExpression(var: !435, expr: !DIExpression())
!435 = distinct !DIGlobalVariable(name: "just_user", scope: !406, file: !3, line: 55, type: !27, isLocal: true, isDefinition: true)
!436 = !DIGlobalVariableExpression(var: !437, expr: !DIExpression())
!437 = distinct !DIGlobalVariable(name: "opt_zero", scope: !406, file: !3, line: 47, type: !27, isLocal: true, isDefinition: true)
!438 = !DIGlobalVariableExpression(var: !439, expr: !DIExpression())
!439 = distinct !DIGlobalVariable(name: "just_group_list", scope: !406, file: !3, line: 49, type: !27, isLocal: true, isDefinition: true)
!440 = !DIGlobalVariableExpression(var: !441, expr: !DIExpression())
!441 = distinct !DIGlobalVariable(name: "context", scope: !406, file: !3, line: 69, type: !6, isLocal: true, isDefinition: true)
!442 = !DIGlobalVariableExpression(var: !443, expr: !DIExpression())
!443 = distinct !DIGlobalVariable(name: "multiple_users", scope: !406, file: !3, line: 59, type: !27, isLocal: true, isDefinition: true)
!444 = !DIGlobalVariableExpression(var: !445, expr: !DIExpression())
!445 = distinct !DIGlobalVariable(name: "ok", scope: !406, file: !3, line: 57, type: !27, isLocal: true, isDefinition: true)
!446 = !DIGlobalVariableExpression(var: !447, expr: !DIExpression())
!447 = distinct !DIGlobalVariable(name: "buf", scope: !448, file: !3, line: 327, type: !53, isLocal: true, isDefinition: true)
!448 = distinct !DISubprogram(name: "uidtostr_ptr", scope: !3, file: !3, line: 325, type: !49, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !406, retainedNodes: !4)
!449 = !DIGlobalVariableExpression(var: !450, expr: !DIExpression())
!450 = distinct !DIGlobalVariable(name: "buf", scope: !451, file: !3, line: 316, type: !53, isLocal: true, isDefinition: true)
!451 = distinct !DISubprogram(name: "gidtostr_ptr", scope: !3, file: !3, line: 314, type: !59, scopeLine: 315, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !406, retainedNodes: !4)
!452 = !DILocalVariable(name: "infomap", scope: !405, file: !342, line: 636, type: !453)
!453 = !DICompositeType(tag: DW_TAG_array_type, baseType: !454, size: 896, elements: !354)
!454 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !455)
!455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "infomap", scope: !405, file: !342, line: 636, size: 128, elements: !456)
!456 = !{!457, !458}
!457 = !DIDerivedType(tag: DW_TAG_member, name: "program", scope: !455, file: !342, line: 636, baseType: !69, size: 64)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !455, file: !342, line: 636, baseType: !69, size: 64, offset: 64)
!459 = !DILocalVariable(name: "node", scope: !405, file: !342, line: 646, type: !69)
!460 = !DILocalVariable(name: "map_prog", scope: !405, file: !342, line: 647, type: !461)
!461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !454, size: 64)
!462 = !DILocalVariable(name: "lc_messages", scope: !463, file: !342, line: 659, type: !69)
!463 = distinct !DISubprogram(name: "emit_ancillary_info", scope: !342, file: !342, line: 634, type: !343, scopeLine: 635, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !464, retainedNodes: !4)
!464 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !465, nameTableKind: None)
!465 = !{!466, !468, !470, !472, !474, !484, !486, !488, !490, !492, !494, !496, !498, !500, !502, !504, !507}
!466 = !DIGlobalVariableExpression(var: !467, expr: !DIExpression())
!467 = distinct !DIGlobalVariable(name: "ruid", scope: !464, file: !3, line: 64, type: !12, isLocal: true, isDefinition: true)
!468 = !DIGlobalVariableExpression(var: !469, expr: !DIExpression())
!469 = distinct !DIGlobalVariable(name: "euid", scope: !464, file: !3, line: 64, type: !12, isLocal: true, isDefinition: true)
!470 = !DIGlobalVariableExpression(var: !471, expr: !DIExpression())
!471 = distinct !DIGlobalVariable(name: "rgid", scope: !464, file: !3, line: 65, type: !21, isLocal: true, isDefinition: true)
!472 = !DIGlobalVariableExpression(var: !473, expr: !DIExpression())
!473 = distinct !DIGlobalVariable(name: "egid", scope: !464, file: !3, line: 65, type: !21, isLocal: true, isDefinition: true)
!474 = !DIGlobalVariableExpression(var: !475, expr: !DIExpression())
!475 = distinct !DIGlobalVariable(name: "longopts", scope: !464, file: !3, line: 75, type: !476, isLocal: true, isDefinition: true)
!476 = !DICompositeType(tag: DW_TAG_array_type, baseType: !477, size: 2560, elements: !76)
!477 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !478)
!478 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !66, line: 50, size: 256, elements: !479)
!479 = !{!480, !481, !482, !483}
!480 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !478, file: !66, line: 52, baseType: !69, size: 64)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !478, file: !66, line: 55, baseType: !72, size: 32, offset: 64)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !478, file: !66, line: 56, baseType: !74, size: 64, offset: 128)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !478, file: !66, line: 57, baseType: !72, size: 32, offset: 192)
!484 = !DIGlobalVariableExpression(var: !485, expr: !DIExpression())
!485 = distinct !DIGlobalVariable(name: "just_context", scope: !464, file: !3, line: 45, type: !27, isLocal: true, isDefinition: true)
!486 = !DIGlobalVariableExpression(var: !487, expr: !DIExpression())
!487 = distinct !DIGlobalVariable(name: "just_group", scope: !464, file: !3, line: 51, type: !27, isLocal: true, isDefinition: true)
!488 = !DIGlobalVariableExpression(var: !489, expr: !DIExpression())
!489 = distinct !DIGlobalVariable(name: "use_name", scope: !464, file: !3, line: 61, type: !27, isLocal: true, isDefinition: true)
!490 = !DIGlobalVariableExpression(var: !491, expr: !DIExpression())
!491 = distinct !DIGlobalVariable(name: "use_real", scope: !464, file: !3, line: 53, type: !27, isLocal: true, isDefinition: true)
!492 = !DIGlobalVariableExpression(var: !493, expr: !DIExpression())
!493 = distinct !DIGlobalVariable(name: "just_user", scope: !464, file: !3, line: 55, type: !27, isLocal: true, isDefinition: true)
!494 = !DIGlobalVariableExpression(var: !495, expr: !DIExpression())
!495 = distinct !DIGlobalVariable(name: "opt_zero", scope: !464, file: !3, line: 47, type: !27, isLocal: true, isDefinition: true)
!496 = !DIGlobalVariableExpression(var: !497, expr: !DIExpression())
!497 = distinct !DIGlobalVariable(name: "just_group_list", scope: !464, file: !3, line: 49, type: !27, isLocal: true, isDefinition: true)
!498 = !DIGlobalVariableExpression(var: !499, expr: !DIExpression())
!499 = distinct !DIGlobalVariable(name: "context", scope: !464, file: !3, line: 69, type: !6, isLocal: true, isDefinition: true)
!500 = !DIGlobalVariableExpression(var: !501, expr: !DIExpression())
!501 = distinct !DIGlobalVariable(name: "multiple_users", scope: !464, file: !3, line: 59, type: !27, isLocal: true, isDefinition: true)
!502 = !DIGlobalVariableExpression(var: !503, expr: !DIExpression())
!503 = distinct !DIGlobalVariable(name: "ok", scope: !464, file: !3, line: 57, type: !27, isLocal: true, isDefinition: true)
!504 = !DIGlobalVariableExpression(var: !505, expr: !DIExpression())
!505 = distinct !DIGlobalVariable(name: "buf", scope: !506, file: !3, line: 327, type: !53, isLocal: true, isDefinition: true)
!506 = distinct !DISubprogram(name: "uidtostr_ptr", scope: !3, file: !3, line: 325, type: !49, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !464, retainedNodes: !4)
!507 = !DIGlobalVariableExpression(var: !508, expr: !DIExpression())
!508 = distinct !DIGlobalVariable(name: "buf", scope: !509, file: !3, line: 316, type: !53, isLocal: true, isDefinition: true)
!509 = distinct !DISubprogram(name: "gidtostr_ptr", scope: !3, file: !3, line: 314, type: !59, scopeLine: 315, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !464, retainedNodes: !4)
!510 = distinct !DISubprogram(name: "main", scope: !3, file: !3, line: 125, type: !511, scopeLine: 126, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4)
!511 = !DISubroutineType(types: !512)
!512 = !{!72, !72, !184}
!513 = !DILocalVariable(name: "argc", arg: 1, scope: !510, file: !3, line: 125, type: !72)
!514 = !DILocation(line: 125, column: 11, scope: !510)
!515 = !DILocalVariable(name: "argv", arg: 2, scope: !510, file: !3, line: 125, type: !184)
!516 = !DILocation(line: 125, column: 24, scope: !510)
!517 = !DILocalVariable(name: "optc", scope: !510, file: !3, line: 127, type: !72)
!518 = !DILocation(line: 127, column: 7, scope: !510)
!519 = !DILocalVariable(name: "selinux_enabled", scope: !510, file: !3, line: 128, type: !72)
!520 = !DILocation(line: 128, column: 7, scope: !510)
!521 = !DILocalVariable(name: "smack_enabled", scope: !510, file: !3, line: 129, type: !27)
!522 = !DILocation(line: 129, column: 8, scope: !510)
!523 = !DILocation(line: 129, column: 24, scope: !510)
!524 = !DILocalVariable(name: "pw_name", scope: !510, file: !3, line: 130, type: !6)
!525 = !DILocation(line: 130, column: 9, scope: !510)
!526 = !DILocation(line: 133, column: 21, scope: !510)
!527 = !DILocation(line: 133, column: 3, scope: !510)
!528 = !DILocation(line: 134, column: 3, scope: !510)
!529 = !DILocation(line: 135, column: 3, scope: !510)
!530 = !DILocation(line: 136, column: 3, scope: !510)
!531 = !DILocation(line: 138, column: 3, scope: !510)
!532 = !DILocation(line: 140, column: 3, scope: !510)
!533 = !DILocation(line: 140, column: 31, scope: !510)
!534 = !DILocation(line: 140, column: 37, scope: !510)
!535 = !DILocation(line: 140, column: 18, scope: !510)
!536 = !DILocation(line: 140, column: 16, scope: !510)
!537 = !DILocation(line: 140, column: 72, scope: !510)
!538 = !DILocation(line: 142, column: 15, scope: !539)
!539 = distinct !DILexicalBlock(scope: !510, file: !3, line: 141, column: 5)
!540 = !DILocation(line: 142, column: 7, scope: !539)
!541 = !DILocation(line: 146, column: 11, scope: !542)
!542 = distinct !DILexicalBlock(scope: !539, file: !3, line: 143, column: 9)
!543 = !DILocation(line: 156, column: 16, scope: !544)
!544 = distinct !DILexicalBlock(scope: !542, file: !3, line: 156, column: 15)
!545 = !DILocation(line: 156, column: 15, scope: !542)
!546 = !DILocation(line: 157, column: 13, scope: !544)
!547 = !DILocation(line: 160, column: 24, scope: !542)
!548 = !DILocation(line: 161, column: 11, scope: !542)
!549 = !DILocation(line: 164, column: 22, scope: !542)
!550 = !DILocation(line: 165, column: 11, scope: !542)
!551 = !DILocation(line: 167, column: 20, scope: !542)
!552 = !DILocation(line: 168, column: 11, scope: !542)
!553 = !DILocation(line: 170, column: 20, scope: !542)
!554 = !DILocation(line: 171, column: 11, scope: !542)
!555 = !DILocation(line: 173, column: 21, scope: !542)
!556 = !DILocation(line: 174, column: 11, scope: !542)
!557 = !DILocation(line: 176, column: 20, scope: !542)
!558 = !DILocation(line: 177, column: 11, scope: !542)
!559 = !DILocation(line: 179, column: 27, scope: !542)
!560 = !DILocation(line: 180, column: 11, scope: !542)
!561 = !DILocation(line: 181, column: 9, scope: !542)
!562 = !DILocation(line: 182, column: 9, scope: !542)
!563 = !DILocation(line: 184, column: 11, scope: !542)
!564 = distinct !{!564, !532, !565}
!565 = !DILocation(line: 186, column: 5, scope: !510)
!566 = !DILocalVariable(name: "n_ids", scope: !510, file: !3, line: 188, type: !134)
!567 = !DILocation(line: 188, column: 10, scope: !510)
!568 = !DILocation(line: 188, column: 18, scope: !510)
!569 = !DILocation(line: 188, column: 25, scope: !510)
!570 = !DILocation(line: 188, column: 23, scope: !510)
!571 = !DILocation(line: 190, column: 7, scope: !572)
!572 = distinct !DILexicalBlock(scope: !510, file: !3, line: 190, column: 7)
!573 = !DILocation(line: 190, column: 13, scope: !572)
!574 = !DILocation(line: 190, column: 16, scope: !572)
!575 = !DILocation(line: 190, column: 7, scope: !510)
!576 = !DILocation(line: 191, column: 5, scope: !572)
!577 = !DILocation(line: 194, column: 7, scope: !578)
!578 = distinct !DILexicalBlock(scope: !510, file: !3, line: 194, column: 7)
!579 = !DILocation(line: 194, column: 19, scope: !578)
!580 = !DILocation(line: 194, column: 17, scope: !578)
!581 = !DILocation(line: 194, column: 32, scope: !578)
!582 = !DILocation(line: 194, column: 30, scope: !578)
!583 = !DILocation(line: 194, column: 50, scope: !578)
!584 = !DILocation(line: 194, column: 48, scope: !578)
!585 = !DILocation(line: 194, column: 63, scope: !578)
!586 = !DILocation(line: 194, column: 7, scope: !510)
!587 = !DILocation(line: 195, column: 5, scope: !578)
!588 = !DILocalVariable(name: "default_format", scope: !510, file: !3, line: 197, type: !27)
!589 = !DILocation(line: 197, column: 8, scope: !510)
!590 = !DILocation(line: 197, column: 28, scope: !510)
!591 = !DILocation(line: 198, column: 28, scope: !510)
!592 = !DILocation(line: 198, column: 31, scope: !510)
!593 = !DILocation(line: 199, column: 28, scope: !510)
!594 = !DILocation(line: 199, column: 31, scope: !510)
!595 = !DILocation(line: 200, column: 28, scope: !510)
!596 = !DILocation(line: 200, column: 31, scope: !510)
!597 = !DILocation(line: 197, column: 25, scope: !510)
!598 = !DILocation(line: 202, column: 7, scope: !599)
!599 = distinct !DILexicalBlock(scope: !510, file: !3, line: 202, column: 7)
!600 = !DILocation(line: 202, column: 22, scope: !599)
!601 = !DILocation(line: 202, column: 26, scope: !599)
!602 = !DILocation(line: 202, column: 35, scope: !599)
!603 = !DILocation(line: 202, column: 38, scope: !599)
!604 = !DILocation(line: 202, column: 7, scope: !510)
!605 = !DILocation(line: 203, column: 5, scope: !599)
!606 = !DILocation(line: 206, column: 7, scope: !607)
!607 = distinct !DILexicalBlock(scope: !510, file: !3, line: 206, column: 7)
!608 = !DILocation(line: 206, column: 22, scope: !607)
!609 = !DILocation(line: 206, column: 25, scope: !607)
!610 = !DILocation(line: 206, column: 7, scope: !510)
!611 = !DILocation(line: 207, column: 5, scope: !607)
!612 = !DILocation(line: 215, column: 7, scope: !613)
!613 = distinct !DILexicalBlock(scope: !510, file: !3, line: 215, column: 7)
!614 = !DILocation(line: 215, column: 13, scope: !613)
!615 = !DILocation(line: 216, column: 11, scope: !613)
!616 = !DILocation(line: 217, column: 11, scope: !613)
!617 = !DILocation(line: 217, column: 15, scope: !613)
!618 = !DILocation(line: 217, column: 30, scope: !613)
!619 = !DILocation(line: 217, column: 35, scope: !613)
!620 = !DILocation(line: 215, column: 7, scope: !510)
!621 = !DILocation(line: 220, column: 12, scope: !622)
!622 = distinct !DILexicalBlock(scope: !623, file: !3, line: 220, column: 11)
!623 = distinct !DILexicalBlock(scope: !613, file: !3, line: 218, column: 5)
!624 = !DILocation(line: 220, column: 28, scope: !622)
!625 = !DILocation(line: 220, column: 31, scope: !622)
!626 = !DILocation(line: 220, column: 49, scope: !622)
!627 = !DILocation(line: 220, column: 52, scope: !622)
!628 = !DILocation(line: 221, column: 11, scope: !622)
!629 = !DILocation(line: 221, column: 15, scope: !622)
!630 = !DILocation(line: 222, column: 15, scope: !622)
!631 = !DILocation(line: 222, column: 18, scope: !622)
!632 = !DILocation(line: 222, column: 55, scope: !622)
!633 = !DILocation(line: 223, column: 15, scope: !622)
!634 = !DILocation(line: 223, column: 18, scope: !622)
!635 = !DILocation(line: 220, column: 11, scope: !623)
!636 = !DILocation(line: 224, column: 9, scope: !622)
!637 = !DILocation(line: 225, column: 5, scope: !623)
!638 = !DILocation(line: 227, column: 7, scope: !639)
!639 = distinct !DILexicalBlock(scope: !510, file: !3, line: 227, column: 7)
!640 = !DILocation(line: 227, column: 13, scope: !639)
!641 = !DILocation(line: 227, column: 7, scope: !510)
!642 = !DILocation(line: 229, column: 24, scope: !643)
!643 = distinct !DILexicalBlock(scope: !639, file: !3, line: 228, column: 5)
!644 = !DILocation(line: 229, column: 30, scope: !643)
!645 = !DILocation(line: 229, column: 22, scope: !643)
!646 = !DILocation(line: 234, column: 16, scope: !643)
!647 = !DILocation(line: 234, column: 13, scope: !643)
!648 = !DILocation(line: 236, column: 7, scope: !643)
!649 = !DILocation(line: 236, column: 14, scope: !650)
!650 = distinct !DILexicalBlock(scope: !651, file: !3, line: 236, column: 7)
!651 = distinct !DILexicalBlock(scope: !643, file: !3, line: 236, column: 7)
!652 = !DILocation(line: 236, column: 23, scope: !650)
!653 = !DILocation(line: 236, column: 21, scope: !650)
!654 = !DILocation(line: 236, column: 7, scope: !651)
!655 = !DILocalVariable(name: "pwd", scope: !656, file: !3, line: 238, type: !657)
!656 = distinct !DILexicalBlock(scope: !650, file: !3, line: 237, column: 9)
!657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !658, size: 64)
!658 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "passwd", file: !659, line: 49, size: 384, elements: !660)
!659 = !DIFile(filename: "/usr/include/pwd.h", directory: "")
!660 = !{!661, !662, !663, !664, !665, !666, !667}
!661 = !DIDerivedType(tag: DW_TAG_member, name: "pw_name", scope: !658, file: !659, line: 51, baseType: !6, size: 64)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "pw_passwd", scope: !658, file: !659, line: 52, baseType: !6, size: 64, offset: 64)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "pw_uid", scope: !658, file: !659, line: 54, baseType: !14, size: 32, offset: 128)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "pw_gid", scope: !658, file: !659, line: 55, baseType: !22, size: 32, offset: 160)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "pw_gecos", scope: !658, file: !659, line: 56, baseType: !6, size: 64, offset: 192)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "pw_dir", scope: !658, file: !659, line: 57, baseType: !6, size: 64, offset: 256)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "pw_shell", scope: !658, file: !659, line: 58, baseType: !6, size: 64, offset: 320)
!668 = !DILocation(line: 238, column: 26, scope: !656)
!669 = !DILocalVariable(name: "spec", scope: !656, file: !3, line: 239, type: !69)
!670 = !DILocation(line: 239, column: 23, scope: !656)
!671 = !DILocation(line: 239, column: 30, scope: !656)
!672 = !DILocation(line: 239, column: 35, scope: !656)
!673 = !DILocation(line: 243, column: 16, scope: !674)
!674 = distinct !DILexicalBlock(scope: !656, file: !3, line: 243, column: 15)
!675 = !DILocation(line: 243, column: 15, scope: !674)
!676 = !DILocation(line: 243, column: 15, scope: !656)
!677 = !DILocation(line: 245, column: 36, scope: !678)
!678 = distinct !DILexicalBlock(scope: !679, file: !3, line: 245, column: 19)
!679 = distinct !DILexicalBlock(scope: !674, file: !3, line: 244, column: 13)
!680 = !DILocation(line: 245, column: 19, scope: !678)
!681 = !DILocation(line: 245, column: 67, scope: !678)
!682 = !DILocation(line: 245, column: 19, scope: !679)
!683 = !DILocation(line: 250, column: 35, scope: !684)
!684 = distinct !DILexicalBlock(scope: !678, file: !3, line: 246, column: 17)
!685 = !DILocation(line: 250, column: 25, scope: !684)
!686 = !DILocation(line: 250, column: 23, scope: !684)
!687 = !DILocation(line: 251, column: 17, scope: !684)
!688 = !DILocation(line: 252, column: 13, scope: !679)
!689 = !DILocation(line: 253, column: 15, scope: !690)
!690 = distinct !DILexicalBlock(scope: !656, file: !3, line: 253, column: 15)
!691 = !DILocation(line: 253, column: 19, scope: !690)
!692 = !DILocation(line: 253, column: 15, scope: !656)
!693 = !DILocation(line: 255, column: 25, scope: !694)
!694 = distinct !DILexicalBlock(scope: !690, file: !3, line: 254, column: 13)
!695 = !DILocation(line: 255, column: 32, scope: !694)
!696 = !DILocation(line: 255, column: 62, scope: !694)
!697 = !DILocation(line: 255, column: 67, scope: !694)
!698 = !DILocation(line: 255, column: 55, scope: !694)
!699 = !DILocation(line: 255, column: 15, scope: !694)
!700 = !DILocation(line: 256, column: 18, scope: !694)
!701 = !DILocation(line: 257, column: 15, scope: !694)
!702 = !DILocation(line: 259, column: 30, scope: !656)
!703 = !DILocation(line: 259, column: 35, scope: !656)
!704 = !DILocation(line: 259, column: 21, scope: !656)
!705 = !DILocation(line: 259, column: 19, scope: !656)
!706 = !DILocation(line: 260, column: 25, scope: !656)
!707 = !DILocation(line: 260, column: 30, scope: !656)
!708 = !DILocation(line: 260, column: 23, scope: !656)
!709 = !DILocation(line: 260, column: 16, scope: !656)
!710 = !DILocation(line: 261, column: 25, scope: !656)
!711 = !DILocation(line: 261, column: 30, scope: !656)
!712 = !DILocation(line: 261, column: 23, scope: !656)
!713 = !DILocation(line: 261, column: 16, scope: !656)
!714 = !DILocation(line: 262, column: 24, scope: !656)
!715 = !DILocation(line: 262, column: 11, scope: !656)
!716 = !DILocation(line: 263, column: 17, scope: !656)
!717 = !DILocation(line: 263, column: 11, scope: !656)
!718 = !DILocation(line: 264, column: 9, scope: !656)
!719 = !DILocation(line: 236, column: 36, scope: !650)
!720 = !DILocation(line: 236, column: 7, scope: !650)
!721 = distinct !{!721, !654, !722}
!722 = !DILocation(line: 264, column: 9, scope: !651)
!723 = !DILocation(line: 265, column: 5, scope: !643)
!724 = !DILocalVariable(name: "NO_UID", scope: !725, file: !3, line: 271, type: !12)
!725 = distinct !DILexicalBlock(scope: !639, file: !3, line: 267, column: 5)
!726 = !DILocation(line: 271, column: 13, scope: !725)
!727 = !DILocalVariable(name: "NO_GID", scope: !725, file: !3, line: 272, type: !21)
!728 = !DILocation(line: 272, column: 13, scope: !725)
!729 = !DILocation(line: 274, column: 11, scope: !730)
!730 = distinct !DILexicalBlock(scope: !725, file: !3, line: 274, column: 11)
!731 = !DILocation(line: 274, column: 11, scope: !725)
!732 = !DILocation(line: 274, column: 24, scope: !730)
!733 = !DILocation(line: 275, column: 14, scope: !730)
!734 = !DILocation(line: 275, column: 25, scope: !730)
!735 = !DILocation(line: 275, column: 29, scope: !730)
!736 = !DILocation(line: 275, column: 45, scope: !730)
!737 = !DILocation(line: 275, column: 49, scope: !730)
!738 = !DILocation(line: 277, column: 11, scope: !739)
!739 = distinct !DILexicalBlock(scope: !730, file: !3, line: 276, column: 9)
!740 = !DILocation(line: 277, column: 17, scope: !739)
!741 = !DILocation(line: 278, column: 18, scope: !739)
!742 = !DILocation(line: 278, column: 16, scope: !739)
!743 = !DILocation(line: 279, column: 15, scope: !744)
!744 = distinct !DILexicalBlock(scope: !739, file: !3, line: 279, column: 15)
!745 = !DILocation(line: 279, column: 23, scope: !744)
!746 = !DILocation(line: 279, column: 20, scope: !744)
!747 = !DILocation(line: 279, column: 30, scope: !744)
!748 = !DILocation(line: 279, column: 33, scope: !744)
!749 = !DILocation(line: 279, column: 15, scope: !739)
!750 = !DILocation(line: 280, column: 13, scope: !744)
!751 = !DILocation(line: 281, column: 9, scope: !739)
!752 = !DILocation(line: 283, column: 11, scope: !753)
!753 = distinct !DILexicalBlock(scope: !725, file: !3, line: 283, column: 11)
!754 = !DILocation(line: 283, column: 11, scope: !725)
!755 = !DILocation(line: 283, column: 23, scope: !753)
!756 = !DILocation(line: 284, column: 14, scope: !753)
!757 = !DILocation(line: 284, column: 25, scope: !753)
!758 = !DILocation(line: 284, column: 29, scope: !753)
!759 = !DILocation(line: 284, column: 45, scope: !753)
!760 = !DILocation(line: 284, column: 49, scope: !753)
!761 = !DILocation(line: 286, column: 11, scope: !762)
!762 = distinct !DILexicalBlock(scope: !753, file: !3, line: 285, column: 9)
!763 = !DILocation(line: 286, column: 17, scope: !762)
!764 = !DILocation(line: 287, column: 18, scope: !762)
!765 = !DILocation(line: 287, column: 16, scope: !762)
!766 = !DILocation(line: 288, column: 15, scope: !767)
!767 = distinct !DILexicalBlock(scope: !762, file: !3, line: 288, column: 15)
!768 = !DILocation(line: 288, column: 23, scope: !767)
!769 = !DILocation(line: 288, column: 20, scope: !767)
!770 = !DILocation(line: 288, column: 30, scope: !767)
!771 = !DILocation(line: 288, column: 33, scope: !767)
!772 = !DILocation(line: 288, column: 15, scope: !762)
!773 = !DILocation(line: 289, column: 13, scope: !767)
!774 = !DILocation(line: 290, column: 9, scope: !762)
!775 = !DILocation(line: 292, column: 12, scope: !776)
!776 = distinct !DILexicalBlock(scope: !725, file: !3, line: 292, column: 11)
!777 = !DILocation(line: 292, column: 22, scope: !776)
!778 = !DILocation(line: 292, column: 26, scope: !776)
!779 = !DILocation(line: 292, column: 37, scope: !776)
!780 = !DILocation(line: 292, column: 40, scope: !776)
!781 = !DILocation(line: 292, column: 56, scope: !776)
!782 = !DILocation(line: 292, column: 60, scope: !776)
!783 = !DILocation(line: 292, column: 11, scope: !725)
!784 = !DILocation(line: 294, column: 11, scope: !785)
!785 = distinct !DILexicalBlock(scope: !776, file: !3, line: 293, column: 9)
!786 = !DILocation(line: 294, column: 17, scope: !785)
!787 = !DILocation(line: 295, column: 18, scope: !785)
!788 = !DILocation(line: 295, column: 16, scope: !785)
!789 = !DILocation(line: 296, column: 15, scope: !790)
!790 = distinct !DILexicalBlock(scope: !785, file: !3, line: 296, column: 15)
!791 = !DILocation(line: 296, column: 23, scope: !790)
!792 = !DILocation(line: 296, column: 20, scope: !790)
!793 = !DILocation(line: 296, column: 30, scope: !790)
!794 = !DILocation(line: 296, column: 33, scope: !790)
!795 = !DILocation(line: 296, column: 15, scope: !785)
!796 = !DILocation(line: 297, column: 13, scope: !790)
!797 = !DILocation(line: 299, column: 11, scope: !785)
!798 = !DILocation(line: 299, column: 17, scope: !785)
!799 = !DILocation(line: 300, column: 18, scope: !785)
!800 = !DILocation(line: 300, column: 16, scope: !785)
!801 = !DILocation(line: 301, column: 15, scope: !802)
!802 = distinct !DILexicalBlock(scope: !785, file: !3, line: 301, column: 15)
!803 = !DILocation(line: 301, column: 23, scope: !802)
!804 = !DILocation(line: 301, column: 20, scope: !802)
!805 = !DILocation(line: 301, column: 30, scope: !802)
!806 = !DILocation(line: 301, column: 33, scope: !802)
!807 = !DILocation(line: 301, column: 15, scope: !785)
!808 = !DILocation(line: 302, column: 13, scope: !802)
!809 = !DILocation(line: 303, column: 9, scope: !785)
!810 = !DILocation(line: 304, column: 22, scope: !725)
!811 = !DILocation(line: 304, column: 9, scope: !725)
!812 = !DILocation(line: 307, column: 10, scope: !510)
!813 = !DILocation(line: 307, column: 3, scope: !510)
!814 = !DILocalVariable(name: "argc", arg: 1, scope: !815, file: !3, line: 125, type: !72)
!815 = distinct !DISubprogram(name: "main", scope: !3, file: !3, line: 125, type: !511, scopeLine: 126, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !816, retainedNodes: !4)
!816 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !817, nameTableKind: None)
!817 = !{!818, !820, !822, !824, !826, !836, !838, !840, !842, !844, !846, !848, !850, !852, !854, !856, !859}
!818 = !DIGlobalVariableExpression(var: !819, expr: !DIExpression())
!819 = distinct !DIGlobalVariable(name: "ruid", scope: !816, file: !3, line: 64, type: !12, isLocal: true, isDefinition: true)
!820 = !DIGlobalVariableExpression(var: !821, expr: !DIExpression())
!821 = distinct !DIGlobalVariable(name: "euid", scope: !816, file: !3, line: 64, type: !12, isLocal: true, isDefinition: true)
!822 = !DIGlobalVariableExpression(var: !823, expr: !DIExpression())
!823 = distinct !DIGlobalVariable(name: "rgid", scope: !816, file: !3, line: 65, type: !21, isLocal: true, isDefinition: true)
!824 = !DIGlobalVariableExpression(var: !825, expr: !DIExpression())
!825 = distinct !DIGlobalVariable(name: "egid", scope: !816, file: !3, line: 65, type: !21, isLocal: true, isDefinition: true)
!826 = !DIGlobalVariableExpression(var: !827, expr: !DIExpression())
!827 = distinct !DIGlobalVariable(name: "longopts", scope: !816, file: !3, line: 75, type: !828, isLocal: true, isDefinition: true)
!828 = !DICompositeType(tag: DW_TAG_array_type, baseType: !829, size: 2560, elements: !76)
!829 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !830)
!830 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !66, line: 50, size: 256, elements: !831)
!831 = !{!832, !833, !834, !835}
!832 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !830, file: !66, line: 52, baseType: !69, size: 64)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !830, file: !66, line: 55, baseType: !72, size: 32, offset: 64)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !830, file: !66, line: 56, baseType: !74, size: 64, offset: 128)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !830, file: !66, line: 57, baseType: !72, size: 32, offset: 192)
!836 = !DIGlobalVariableExpression(var: !837, expr: !DIExpression())
!837 = distinct !DIGlobalVariable(name: "just_context", scope: !816, file: !3, line: 45, type: !27, isLocal: true, isDefinition: true)
!838 = !DIGlobalVariableExpression(var: !839, expr: !DIExpression())
!839 = distinct !DIGlobalVariable(name: "just_group", scope: !816, file: !3, line: 51, type: !27, isLocal: true, isDefinition: true)
!840 = !DIGlobalVariableExpression(var: !841, expr: !DIExpression())
!841 = distinct !DIGlobalVariable(name: "use_name", scope: !816, file: !3, line: 61, type: !27, isLocal: true, isDefinition: true)
!842 = !DIGlobalVariableExpression(var: !843, expr: !DIExpression())
!843 = distinct !DIGlobalVariable(name: "use_real", scope: !816, file: !3, line: 53, type: !27, isLocal: true, isDefinition: true)
!844 = !DIGlobalVariableExpression(var: !845, expr: !DIExpression())
!845 = distinct !DIGlobalVariable(name: "just_user", scope: !816, file: !3, line: 55, type: !27, isLocal: true, isDefinition: true)
!846 = !DIGlobalVariableExpression(var: !847, expr: !DIExpression())
!847 = distinct !DIGlobalVariable(name: "opt_zero", scope: !816, file: !3, line: 47, type: !27, isLocal: true, isDefinition: true)
!848 = !DIGlobalVariableExpression(var: !849, expr: !DIExpression())
!849 = distinct !DIGlobalVariable(name: "just_group_list", scope: !816, file: !3, line: 49, type: !27, isLocal: true, isDefinition: true)
!850 = !DIGlobalVariableExpression(var: !851, expr: !DIExpression())
!851 = distinct !DIGlobalVariable(name: "context", scope: !816, file: !3, line: 69, type: !6, isLocal: true, isDefinition: true)
!852 = !DIGlobalVariableExpression(var: !853, expr: !DIExpression())
!853 = distinct !DIGlobalVariable(name: "multiple_users", scope: !816, file: !3, line: 59, type: !27, isLocal: true, isDefinition: true)
!854 = !DIGlobalVariableExpression(var: !855, expr: !DIExpression())
!855 = distinct !DIGlobalVariable(name: "ok", scope: !816, file: !3, line: 57, type: !27, isLocal: true, isDefinition: true)
!856 = !DIGlobalVariableExpression(var: !857, expr: !DIExpression())
!857 = distinct !DIGlobalVariable(name: "buf", scope: !858, file: !3, line: 327, type: !53, isLocal: true, isDefinition: true)
!858 = distinct !DISubprogram(name: "uidtostr_ptr", scope: !3, file: !3, line: 325, type: !49, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !816, retainedNodes: !4)
!859 = !DIGlobalVariableExpression(var: !860, expr: !DIExpression())
!860 = distinct !DIGlobalVariable(name: "buf", scope: !861, file: !3, line: 316, type: !53, isLocal: true, isDefinition: true)
!861 = distinct !DISubprogram(name: "gidtostr_ptr", scope: !3, file: !3, line: 314, type: !59, scopeLine: 315, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !816, retainedNodes: !4)
!862 = !DILocalVariable(name: "argv", arg: 2, scope: !815, file: !3, line: 125, type: !184)
!863 = !DILocalVariable(name: "optc", scope: !815, file: !3, line: 127, type: !72)
!864 = !DILocalVariable(name: "selinux_enabled", scope: !815, file: !3, line: 128, type: !72)
!865 = !DILocalVariable(name: "smack_enabled", scope: !815, file: !3, line: 129, type: !27)
!866 = !DILocalVariable(name: "pw_name", scope: !815, file: !3, line: 130, type: !6)
!867 = !DILocalVariable(name: "spec", scope: !868, file: !3, line: 239, type: !69)
!868 = distinct !DILexicalBlock(scope: !869, file: !3, line: 237, column: 9)
!869 = distinct !DILexicalBlock(scope: !870, file: !3, line: 236, column: 7)
!870 = distinct !DILexicalBlock(scope: !871, file: !3, line: 236, column: 7)
!871 = distinct !DILexicalBlock(scope: !872, file: !3, line: 228, column: 5)
!872 = distinct !DILexicalBlock(scope: !873, file: !3, line: 227, column: 7)
!873 = distinct !DISubprogram(name: "main", scope: !3, file: !3, line: 125, type: !511, scopeLine: 126, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !874, retainedNodes: !4)
!874 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !875, nameTableKind: None)
!875 = !{!876, !878, !880, !882, !884, !894, !896, !898, !900, !902, !904, !906, !908, !910, !912, !914, !917}
!876 = !DIGlobalVariableExpression(var: !877, expr: !DIExpression())
!877 = distinct !DIGlobalVariable(name: "ruid", scope: !874, file: !3, line: 64, type: !12, isLocal: true, isDefinition: true)
!878 = !DIGlobalVariableExpression(var: !879, expr: !DIExpression())
!879 = distinct !DIGlobalVariable(name: "euid", scope: !874, file: !3, line: 64, type: !12, isLocal: true, isDefinition: true)
!880 = !DIGlobalVariableExpression(var: !881, expr: !DIExpression())
!881 = distinct !DIGlobalVariable(name: "rgid", scope: !874, file: !3, line: 65, type: !21, isLocal: true, isDefinition: true)
!882 = !DIGlobalVariableExpression(var: !883, expr: !DIExpression())
!883 = distinct !DIGlobalVariable(name: "egid", scope: !874, file: !3, line: 65, type: !21, isLocal: true, isDefinition: true)
!884 = !DIGlobalVariableExpression(var: !885, expr: !DIExpression())
!885 = distinct !DIGlobalVariable(name: "longopts", scope: !874, file: !3, line: 75, type: !886, isLocal: true, isDefinition: true)
!886 = !DICompositeType(tag: DW_TAG_array_type, baseType: !887, size: 2560, elements: !76)
!887 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !888)
!888 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !66, line: 50, size: 256, elements: !889)
!889 = !{!890, !891, !892, !893}
!890 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !888, file: !66, line: 52, baseType: !69, size: 64)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !888, file: !66, line: 55, baseType: !72, size: 32, offset: 64)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !888, file: !66, line: 56, baseType: !74, size: 64, offset: 128)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !888, file: !66, line: 57, baseType: !72, size: 32, offset: 192)
!894 = !DIGlobalVariableExpression(var: !895, expr: !DIExpression())
!895 = distinct !DIGlobalVariable(name: "just_context", scope: !874, file: !3, line: 45, type: !27, isLocal: true, isDefinition: true)
!896 = !DIGlobalVariableExpression(var: !897, expr: !DIExpression())
!897 = distinct !DIGlobalVariable(name: "just_group", scope: !874, file: !3, line: 51, type: !27, isLocal: true, isDefinition: true)
!898 = !DIGlobalVariableExpression(var: !899, expr: !DIExpression())
!899 = distinct !DIGlobalVariable(name: "use_name", scope: !874, file: !3, line: 61, type: !27, isLocal: true, isDefinition: true)
!900 = !DIGlobalVariableExpression(var: !901, expr: !DIExpression())
!901 = distinct !DIGlobalVariable(name: "use_real", scope: !874, file: !3, line: 53, type: !27, isLocal: true, isDefinition: true)
!902 = !DIGlobalVariableExpression(var: !903, expr: !DIExpression())
!903 = distinct !DIGlobalVariable(name: "just_user", scope: !874, file: !3, line: 55, type: !27, isLocal: true, isDefinition: true)
!904 = !DIGlobalVariableExpression(var: !905, expr: !DIExpression())
!905 = distinct !DIGlobalVariable(name: "opt_zero", scope: !874, file: !3, line: 47, type: !27, isLocal: true, isDefinition: true)
!906 = !DIGlobalVariableExpression(var: !907, expr: !DIExpression())
!907 = distinct !DIGlobalVariable(name: "just_group_list", scope: !874, file: !3, line: 49, type: !27, isLocal: true, isDefinition: true)
!908 = !DIGlobalVariableExpression(var: !909, expr: !DIExpression())
!909 = distinct !DIGlobalVariable(name: "context", scope: !874, file: !3, line: 69, type: !6, isLocal: true, isDefinition: true)
!910 = !DIGlobalVariableExpression(var: !911, expr: !DIExpression())
!911 = distinct !DIGlobalVariable(name: "multiple_users", scope: !874, file: !3, line: 59, type: !27, isLocal: true, isDefinition: true)
!912 = !DIGlobalVariableExpression(var: !913, expr: !DIExpression())
!913 = distinct !DIGlobalVariable(name: "ok", scope: !874, file: !3, line: 57, type: !27, isLocal: true, isDefinition: true)
!914 = !DIGlobalVariableExpression(var: !915, expr: !DIExpression())
!915 = distinct !DIGlobalVariable(name: "buf", scope: !916, file: !3, line: 327, type: !53, isLocal: true, isDefinition: true)
!916 = distinct !DISubprogram(name: "uidtostr_ptr", scope: !3, file: !3, line: 325, type: !49, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !874, retainedNodes: !4)
!917 = !DIGlobalVariableExpression(var: !918, expr: !DIExpression())
!918 = distinct !DIGlobalVariable(name: "buf", scope: !919, file: !3, line: 316, type: !53, isLocal: true, isDefinition: true)
!919 = distinct !DISubprogram(name: "gidtostr_ptr", scope: !3, file: !3, line: 314, type: !59, scopeLine: 315, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !874, retainedNodes: !4)
!920 = !DILocalVariable(name: "NO_GID", scope: !921, file: !3, line: 272, type: !21)
!921 = distinct !DILexicalBlock(scope: !922, file: !3, line: 267, column: 5)
!922 = distinct !DILexicalBlock(scope: !923, file: !3, line: 227, column: 7)
!923 = distinct !DISubprogram(name: "main", scope: !3, file: !3, line: 125, type: !511, scopeLine: 126, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !924, retainedNodes: !4)
!924 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !925, nameTableKind: None)
!925 = !{!926, !928, !930, !932, !934, !944, !946, !948, !950, !952, !954, !956, !958, !960, !962, !964, !967}
!926 = !DIGlobalVariableExpression(var: !927, expr: !DIExpression())
!927 = distinct !DIGlobalVariable(name: "ruid", scope: !924, file: !3, line: 64, type: !12, isLocal: true, isDefinition: true)
!928 = !DIGlobalVariableExpression(var: !929, expr: !DIExpression())
!929 = distinct !DIGlobalVariable(name: "euid", scope: !924, file: !3, line: 64, type: !12, isLocal: true, isDefinition: true)
!930 = !DIGlobalVariableExpression(var: !931, expr: !DIExpression())
!931 = distinct !DIGlobalVariable(name: "rgid", scope: !924, file: !3, line: 65, type: !21, isLocal: true, isDefinition: true)
!932 = !DIGlobalVariableExpression(var: !933, expr: !DIExpression())
!933 = distinct !DIGlobalVariable(name: "egid", scope: !924, file: !3, line: 65, type: !21, isLocal: true, isDefinition: true)
!934 = !DIGlobalVariableExpression(var: !935, expr: !DIExpression())
!935 = distinct !DIGlobalVariable(name: "longopts", scope: !924, file: !3, line: 75, type: !936, isLocal: true, isDefinition: true)
!936 = !DICompositeType(tag: DW_TAG_array_type, baseType: !937, size: 2560, elements: !76)
!937 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !938)
!938 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !66, line: 50, size: 256, elements: !939)
!939 = !{!940, !941, !942, !943}
!940 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !938, file: !66, line: 52, baseType: !69, size: 64)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !938, file: !66, line: 55, baseType: !72, size: 32, offset: 64)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !938, file: !66, line: 56, baseType: !74, size: 64, offset: 128)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !938, file: !66, line: 57, baseType: !72, size: 32, offset: 192)
!944 = !DIGlobalVariableExpression(var: !945, expr: !DIExpression())
!945 = distinct !DIGlobalVariable(name: "just_context", scope: !924, file: !3, line: 45, type: !27, isLocal: true, isDefinition: true)
!946 = !DIGlobalVariableExpression(var: !947, expr: !DIExpression())
!947 = distinct !DIGlobalVariable(name: "just_group", scope: !924, file: !3, line: 51, type: !27, isLocal: true, isDefinition: true)
!948 = !DIGlobalVariableExpression(var: !949, expr: !DIExpression())
!949 = distinct !DIGlobalVariable(name: "use_name", scope: !924, file: !3, line: 61, type: !27, isLocal: true, isDefinition: true)
!950 = !DIGlobalVariableExpression(var: !951, expr: !DIExpression())
!951 = distinct !DIGlobalVariable(name: "use_real", scope: !924, file: !3, line: 53, type: !27, isLocal: true, isDefinition: true)
!952 = !DIGlobalVariableExpression(var: !953, expr: !DIExpression())
!953 = distinct !DIGlobalVariable(name: "just_user", scope: !924, file: !3, line: 55, type: !27, isLocal: true, isDefinition: true)
!954 = !DIGlobalVariableExpression(var: !955, expr: !DIExpression())
!955 = distinct !DIGlobalVariable(name: "opt_zero", scope: !924, file: !3, line: 47, type: !27, isLocal: true, isDefinition: true)
!956 = !DIGlobalVariableExpression(var: !957, expr: !DIExpression())
!957 = distinct !DIGlobalVariable(name: "just_group_list", scope: !924, file: !3, line: 49, type: !27, isLocal: true, isDefinition: true)
!958 = !DIGlobalVariableExpression(var: !959, expr: !DIExpression())
!959 = distinct !DIGlobalVariable(name: "context", scope: !924, file: !3, line: 69, type: !6, isLocal: true, isDefinition: true)
!960 = !DIGlobalVariableExpression(var: !961, expr: !DIExpression())
!961 = distinct !DIGlobalVariable(name: "multiple_users", scope: !924, file: !3, line: 59, type: !27, isLocal: true, isDefinition: true)
!962 = !DIGlobalVariableExpression(var: !963, expr: !DIExpression())
!963 = distinct !DIGlobalVariable(name: "ok", scope: !924, file: !3, line: 57, type: !27, isLocal: true, isDefinition: true)
!964 = !DIGlobalVariableExpression(var: !965, expr: !DIExpression())
!965 = distinct !DIGlobalVariable(name: "buf", scope: !966, file: !3, line: 327, type: !53, isLocal: true, isDefinition: true)
!966 = distinct !DISubprogram(name: "uidtostr_ptr", scope: !3, file: !3, line: 325, type: !49, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !924, retainedNodes: !4)
!967 = !DIGlobalVariableExpression(var: !968, expr: !DIExpression())
!968 = distinct !DIGlobalVariable(name: "buf", scope: !969, file: !3, line: 316, type: !53, isLocal: true, isDefinition: true)
!969 = distinct !DISubprogram(name: "gidtostr_ptr", scope: !3, file: !3, line: 314, type: !59, scopeLine: 315, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !924, retainedNodes: !4)
!970 = distinct !DISubprogram(name: "is_smack_enabled", scope: !971, file: !971, line: 39, type: !972, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!971 = !DIFile(filename: "./lib/smack.h", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!972 = !DISubroutineType(types: !973)
!973 = !{!27}
!974 = !DILocation(line: 44, column: 3, scope: !970)
!975 = distinct !DISubprogram(name: "smack_new_label_from_self", scope: !971, file: !971, line: 26, type: !976, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!976 = !DISubroutineType(types: !977)
!977 = !{!978, !184}
!978 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !979, line: 77, baseType: !980)
!979 = !DIFile(filename: "/usr/include/stdio.h", directory: "")
!980 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !15, line: 193, baseType: !981)
!981 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!982 = !DILocalVariable(name: "label", arg: 1, scope: !975, file: !971, line: 26, type: !184)
!983 = !DILocation(line: 26, column: 35, scope: !975)
!984 = !DILocation(line: 28, column: 3, scope: !975)
!985 = !DILocalVariable(name: "label", arg: 1, scope: !986, file: !971, line: 26, type: !184)
!986 = distinct !DISubprogram(name: "smack_new_label_from_self", scope: !971, file: !971, line: 26, type: !976, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !987, retainedNodes: !4)
!987 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !988, nameTableKind: None)
!988 = !{!989, !991, !993, !995, !997, !1007, !1009, !1011, !1013, !1015, !1017, !1019, !1021, !1023, !1025, !1027, !1030}
!989 = !DIGlobalVariableExpression(var: !990, expr: !DIExpression())
!990 = distinct !DIGlobalVariable(name: "ruid", scope: !987, file: !3, line: 64, type: !12, isLocal: true, isDefinition: true)
!991 = !DIGlobalVariableExpression(var: !992, expr: !DIExpression())
!992 = distinct !DIGlobalVariable(name: "euid", scope: !987, file: !3, line: 64, type: !12, isLocal: true, isDefinition: true)
!993 = !DIGlobalVariableExpression(var: !994, expr: !DIExpression())
!994 = distinct !DIGlobalVariable(name: "rgid", scope: !987, file: !3, line: 65, type: !21, isLocal: true, isDefinition: true)
!995 = !DIGlobalVariableExpression(var: !996, expr: !DIExpression())
!996 = distinct !DIGlobalVariable(name: "egid", scope: !987, file: !3, line: 65, type: !21, isLocal: true, isDefinition: true)
!997 = !DIGlobalVariableExpression(var: !998, expr: !DIExpression())
!998 = distinct !DIGlobalVariable(name: "longopts", scope: !987, file: !3, line: 75, type: !999, isLocal: true, isDefinition: true)
!999 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1000, size: 2560, elements: !76)
!1000 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1001)
!1001 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !66, line: 50, size: 256, elements: !1002)
!1002 = !{!1003, !1004, !1005, !1006}
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1001, file: !66, line: 52, baseType: !69, size: 64)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !1001, file: !66, line: 55, baseType: !72, size: 32, offset: 64)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1001, file: !66, line: 56, baseType: !74, size: 64, offset: 128)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1001, file: !66, line: 57, baseType: !72, size: 32, offset: 192)
!1007 = !DIGlobalVariableExpression(var: !1008, expr: !DIExpression())
!1008 = distinct !DIGlobalVariable(name: "just_context", scope: !987, file: !3, line: 45, type: !27, isLocal: true, isDefinition: true)
!1009 = !DIGlobalVariableExpression(var: !1010, expr: !DIExpression())
!1010 = distinct !DIGlobalVariable(name: "just_group", scope: !987, file: !3, line: 51, type: !27, isLocal: true, isDefinition: true)
!1011 = !DIGlobalVariableExpression(var: !1012, expr: !DIExpression())
!1012 = distinct !DIGlobalVariable(name: "use_name", scope: !987, file: !3, line: 61, type: !27, isLocal: true, isDefinition: true)
!1013 = !DIGlobalVariableExpression(var: !1014, expr: !DIExpression())
!1014 = distinct !DIGlobalVariable(name: "use_real", scope: !987, file: !3, line: 53, type: !27, isLocal: true, isDefinition: true)
!1015 = !DIGlobalVariableExpression(var: !1016, expr: !DIExpression())
!1016 = distinct !DIGlobalVariable(name: "just_user", scope: !987, file: !3, line: 55, type: !27, isLocal: true, isDefinition: true)
!1017 = !DIGlobalVariableExpression(var: !1018, expr: !DIExpression())
!1018 = distinct !DIGlobalVariable(name: "opt_zero", scope: !987, file: !3, line: 47, type: !27, isLocal: true, isDefinition: true)
!1019 = !DIGlobalVariableExpression(var: !1020, expr: !DIExpression())
!1020 = distinct !DIGlobalVariable(name: "just_group_list", scope: !987, file: !3, line: 49, type: !27, isLocal: true, isDefinition: true)
!1021 = !DIGlobalVariableExpression(var: !1022, expr: !DIExpression())
!1022 = distinct !DIGlobalVariable(name: "context", scope: !987, file: !3, line: 69, type: !6, isLocal: true, isDefinition: true)
!1023 = !DIGlobalVariableExpression(var: !1024, expr: !DIExpression())
!1024 = distinct !DIGlobalVariable(name: "multiple_users", scope: !987, file: !3, line: 59, type: !27, isLocal: true, isDefinition: true)
!1025 = !DIGlobalVariableExpression(var: !1026, expr: !DIExpression())
!1026 = distinct !DIGlobalVariable(name: "ok", scope: !987, file: !3, line: 57, type: !27, isLocal: true, isDefinition: true)
!1027 = !DIGlobalVariableExpression(var: !1028, expr: !DIExpression())
!1028 = distinct !DIGlobalVariable(name: "buf", scope: !1029, file: !3, line: 327, type: !53, isLocal: true, isDefinition: true)
!1029 = distinct !DISubprogram(name: "uidtostr_ptr", scope: !3, file: !3, line: 325, type: !49, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !987, retainedNodes: !4)
!1030 = !DIGlobalVariableExpression(var: !1031, expr: !DIExpression())
!1031 = distinct !DIGlobalVariable(name: "buf", scope: !1032, file: !3, line: 316, type: !53, isLocal: true, isDefinition: true)
!1032 = distinct !DISubprogram(name: "gidtostr_ptr", scope: !3, file: !3, line: 314, type: !59, scopeLine: 315, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !987, retainedNodes: !4)
!1033 = distinct !DISubprogram(name: "print_stuff", scope: !3, file: !3, line: 432, type: !343, scopeLine: 433, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!1034 = !DILocalVariable(name: "pw_name", arg: 1, scope: !1033, file: !3, line: 432, type: !69)
!1035 = !DILocation(line: 432, column: 26, scope: !1033)
!1036 = !DILocation(line: 434, column: 7, scope: !1037)
!1037 = distinct !DILexicalBlock(scope: !1033, file: !3, line: 434, column: 7)
!1038 = !DILocation(line: 434, column: 7, scope: !1033)
!1039 = !DILocation(line: 435, column: 19, scope: !1037)
!1040 = !DILocation(line: 435, column: 30, scope: !1037)
!1041 = !DILocation(line: 435, column: 37, scope: !1037)
!1042 = !DILocation(line: 435, column: 7, scope: !1037)
!1043 = !DILocation(line: 442, column: 12, scope: !1044)
!1044 = distinct !DILexicalBlock(scope: !1037, file: !3, line: 442, column: 12)
!1045 = !DILocation(line: 442, column: 12, scope: !1037)
!1046 = !DILocation(line: 443, column: 24, scope: !1044)
!1047 = !DILocation(line: 443, column: 35, scope: !1044)
!1048 = !DILocation(line: 443, column: 42, scope: !1044)
!1049 = !DILocation(line: 443, column: 48, scope: !1044)
!1050 = !DILocation(line: 443, column: 11, scope: !1044)
!1051 = !DILocation(line: 443, column: 8, scope: !1044)
!1052 = !DILocation(line: 443, column: 5, scope: !1044)
!1053 = !DILocation(line: 444, column: 12, scope: !1054)
!1054 = distinct !DILexicalBlock(scope: !1044, file: !3, line: 444, column: 12)
!1055 = !DILocation(line: 444, column: 12, scope: !1044)
!1056 = !DILocation(line: 445, column: 29, scope: !1054)
!1057 = !DILocation(line: 445, column: 38, scope: !1054)
!1058 = !DILocation(line: 445, column: 44, scope: !1054)
!1059 = !DILocation(line: 445, column: 50, scope: !1054)
!1060 = !DILocation(line: 446, column: 29, scope: !1054)
!1061 = !DILocation(line: 446, column: 39, scope: !1054)
!1062 = !DILocation(line: 445, column: 11, scope: !1054)
!1063 = !DILocation(line: 445, column: 8, scope: !1054)
!1064 = !DILocation(line: 445, column: 5, scope: !1054)
!1065 = !DILocation(line: 447, column: 12, scope: !1066)
!1066 = distinct !DILexicalBlock(scope: !1054, file: !3, line: 447, column: 12)
!1067 = !DILocation(line: 447, column: 12, scope: !1054)
!1068 = !DILocation(line: 448, column: 5, scope: !1066)
!1069 = !DILocation(line: 450, column: 22, scope: !1066)
!1070 = !DILocation(line: 450, column: 5, scope: !1066)
!1071 = !DILocation(line: 455, column: 7, scope: !1072)
!1072 = distinct !DILexicalBlock(scope: !1033, file: !3, line: 455, column: 7)
!1073 = !DILocation(line: 455, column: 16, scope: !1072)
!1074 = !DILocation(line: 455, column: 19, scope: !1072)
!1075 = !DILocation(line: 455, column: 35, scope: !1072)
!1076 = !DILocation(line: 455, column: 38, scope: !1072)
!1077 = !DILocation(line: 455, column: 7, scope: !1033)
!1078 = !DILocation(line: 457, column: 7, scope: !1079)
!1079 = distinct !DILexicalBlock(scope: !1072, file: !3, line: 456, column: 5)
!1080 = !DILocation(line: 458, column: 7, scope: !1079)
!1081 = !DILocation(line: 459, column: 5, scope: !1079)
!1082 = !DILocation(line: 462, column: 7, scope: !1083)
!1083 = distinct !DILexicalBlock(scope: !1072, file: !3, line: 461, column: 5)
!1084 = !DILocation(line: 464, column: 1, scope: !1033)
!1085 = !DILocalVariable(name: "pw_name", arg: 1, scope: !1086, file: !3, line: 432, type: !69)
!1086 = distinct !DISubprogram(name: "print_stuff", scope: !3, file: !3, line: 432, type: !343, scopeLine: 433, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1087, retainedNodes: !4)
!1087 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !1088, nameTableKind: None)
!1088 = !{!1089, !1091, !1093, !1095, !1097, !1107, !1109, !1111, !1113, !1115, !1117, !1119, !1121, !1123, !1125, !1127, !1130}
!1089 = !DIGlobalVariableExpression(var: !1090, expr: !DIExpression())
!1090 = distinct !DIGlobalVariable(name: "ruid", scope: !1087, file: !3, line: 64, type: !12, isLocal: true, isDefinition: true)
!1091 = !DIGlobalVariableExpression(var: !1092, expr: !DIExpression())
!1092 = distinct !DIGlobalVariable(name: "euid", scope: !1087, file: !3, line: 64, type: !12, isLocal: true, isDefinition: true)
!1093 = !DIGlobalVariableExpression(var: !1094, expr: !DIExpression())
!1094 = distinct !DIGlobalVariable(name: "rgid", scope: !1087, file: !3, line: 65, type: !21, isLocal: true, isDefinition: true)
!1095 = !DIGlobalVariableExpression(var: !1096, expr: !DIExpression())
!1096 = distinct !DIGlobalVariable(name: "egid", scope: !1087, file: !3, line: 65, type: !21, isLocal: true, isDefinition: true)
!1097 = !DIGlobalVariableExpression(var: !1098, expr: !DIExpression())
!1098 = distinct !DIGlobalVariable(name: "longopts", scope: !1087, file: !3, line: 75, type: !1099, isLocal: true, isDefinition: true)
!1099 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1100, size: 2560, elements: !76)
!1100 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1101)
!1101 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !66, line: 50, size: 256, elements: !1102)
!1102 = !{!1103, !1104, !1105, !1106}
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1101, file: !66, line: 52, baseType: !69, size: 64)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !1101, file: !66, line: 55, baseType: !72, size: 32, offset: 64)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1101, file: !66, line: 56, baseType: !74, size: 64, offset: 128)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1101, file: !66, line: 57, baseType: !72, size: 32, offset: 192)
!1107 = !DIGlobalVariableExpression(var: !1108, expr: !DIExpression())
!1108 = distinct !DIGlobalVariable(name: "just_context", scope: !1087, file: !3, line: 45, type: !27, isLocal: true, isDefinition: true)
!1109 = !DIGlobalVariableExpression(var: !1110, expr: !DIExpression())
!1110 = distinct !DIGlobalVariable(name: "just_group", scope: !1087, file: !3, line: 51, type: !27, isLocal: true, isDefinition: true)
!1111 = !DIGlobalVariableExpression(var: !1112, expr: !DIExpression())
!1112 = distinct !DIGlobalVariable(name: "use_name", scope: !1087, file: !3, line: 61, type: !27, isLocal: true, isDefinition: true)
!1113 = !DIGlobalVariableExpression(var: !1114, expr: !DIExpression())
!1114 = distinct !DIGlobalVariable(name: "use_real", scope: !1087, file: !3, line: 53, type: !27, isLocal: true, isDefinition: true)
!1115 = !DIGlobalVariableExpression(var: !1116, expr: !DIExpression())
!1116 = distinct !DIGlobalVariable(name: "just_user", scope: !1087, file: !3, line: 55, type: !27, isLocal: true, isDefinition: true)
!1117 = !DIGlobalVariableExpression(var: !1118, expr: !DIExpression())
!1118 = distinct !DIGlobalVariable(name: "opt_zero", scope: !1087, file: !3, line: 47, type: !27, isLocal: true, isDefinition: true)
!1119 = !DIGlobalVariableExpression(var: !1120, expr: !DIExpression())
!1120 = distinct !DIGlobalVariable(name: "just_group_list", scope: !1087, file: !3, line: 49, type: !27, isLocal: true, isDefinition: true)
!1121 = !DIGlobalVariableExpression(var: !1122, expr: !DIExpression())
!1122 = distinct !DIGlobalVariable(name: "context", scope: !1087, file: !3, line: 69, type: !6, isLocal: true, isDefinition: true)
!1123 = !DIGlobalVariableExpression(var: !1124, expr: !DIExpression())
!1124 = distinct !DIGlobalVariable(name: "multiple_users", scope: !1087, file: !3, line: 59, type: !27, isLocal: true, isDefinition: true)
!1125 = !DIGlobalVariableExpression(var: !1126, expr: !DIExpression())
!1126 = distinct !DIGlobalVariable(name: "ok", scope: !1087, file: !3, line: 57, type: !27, isLocal: true, isDefinition: true)
!1127 = !DIGlobalVariableExpression(var: !1128, expr: !DIExpression())
!1128 = distinct !DIGlobalVariable(name: "buf", scope: !1129, file: !3, line: 327, type: !53, isLocal: true, isDefinition: true)
!1129 = distinct !DISubprogram(name: "uidtostr_ptr", scope: !3, file: !3, line: 325, type: !49, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1087, retainedNodes: !4)
!1130 = !DIGlobalVariableExpression(var: !1131, expr: !DIExpression())
!1131 = distinct !DIGlobalVariable(name: "buf", scope: !1132, file: !3, line: 316, type: !53, isLocal: true, isDefinition: true)
!1132 = distinct !DISubprogram(name: "gidtostr_ptr", scope: !3, file: !3, line: 314, type: !59, scopeLine: 315, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1087, retainedNodes: !4)
!1133 = distinct !DISubprogram(name: "print_user", scope: !3, file: !3, line: 335, type: !1134, scopeLine: 336, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!1134 = !DISubroutineType(types: !1135)
!1135 = !{null, !12}
!1136 = !DILocalVariable(name: "uid", arg: 1, scope: !1133, file: !3, line: 335, type: !12)
!1137 = !DILocation(line: 335, column: 19, scope: !1133)
!1138 = !DILocalVariable(name: "pwd", scope: !1133, file: !3, line: 337, type: !657)
!1139 = !DILocation(line: 337, column: 18, scope: !1133)
!1140 = !DILocation(line: 339, column: 7, scope: !1141)
!1141 = distinct !DILexicalBlock(scope: !1133, file: !3, line: 339, column: 7)
!1142 = !DILocation(line: 339, column: 7, scope: !1133)
!1143 = !DILocation(line: 341, column: 23, scope: !1144)
!1144 = distinct !DILexicalBlock(scope: !1141, file: !3, line: 340, column: 5)
!1145 = !DILocation(line: 341, column: 13, scope: !1144)
!1146 = !DILocation(line: 341, column: 11, scope: !1144)
!1147 = !DILocation(line: 342, column: 11, scope: !1148)
!1148 = distinct !DILexicalBlock(scope: !1144, file: !3, line: 342, column: 11)
!1149 = !DILocation(line: 342, column: 15, scope: !1148)
!1150 = !DILocation(line: 342, column: 11, scope: !1144)
!1151 = !DILocation(line: 344, column: 24, scope: !1152)
!1152 = distinct !DILexicalBlock(scope: !1148, file: !3, line: 343, column: 9)
!1153 = !DILocation(line: 345, column: 18, scope: !1152)
!1154 = !DILocation(line: 344, column: 11, scope: !1152)
!1155 = !DILocation(line: 346, column: 14, scope: !1152)
!1156 = !DILocation(line: 347, column: 9, scope: !1152)
!1157 = !DILocation(line: 348, column: 5, scope: !1144)
!1158 = !DILocalVariable(name: "s", scope: !1133, file: !3, line: 350, type: !6)
!1159 = !DILocation(line: 350, column: 9, scope: !1133)
!1160 = !DILocation(line: 350, column: 13, scope: !1133)
!1161 = !DILocation(line: 350, column: 19, scope: !1133)
!1162 = !DILocation(line: 350, column: 24, scope: !1133)
!1163 = !DILocation(line: 350, column: 34, scope: !1133)
!1164 = !DILocation(line: 351, column: 3, scope: !1133)
!1165 = !DILocation(line: 352, column: 1, scope: !1133)
!1166 = !DILocalVariable(name: "uid", arg: 1, scope: !1167, file: !3, line: 335, type: !12)
!1167 = distinct !DISubprogram(name: "print_user", scope: !3, file: !3, line: 335, type: !1134, scopeLine: 336, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1168, retainedNodes: !4)
!1168 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !1169, nameTableKind: None)
!1169 = !{!1170, !1172, !1174, !1176, !1178, !1188, !1190, !1192, !1194, !1196, !1198, !1200, !1202, !1204, !1206, !1208, !1211}
!1170 = !DIGlobalVariableExpression(var: !1171, expr: !DIExpression())
!1171 = distinct !DIGlobalVariable(name: "ruid", scope: !1168, file: !3, line: 64, type: !12, isLocal: true, isDefinition: true)
!1172 = !DIGlobalVariableExpression(var: !1173, expr: !DIExpression())
!1173 = distinct !DIGlobalVariable(name: "euid", scope: !1168, file: !3, line: 64, type: !12, isLocal: true, isDefinition: true)
!1174 = !DIGlobalVariableExpression(var: !1175, expr: !DIExpression())
!1175 = distinct !DIGlobalVariable(name: "rgid", scope: !1168, file: !3, line: 65, type: !21, isLocal: true, isDefinition: true)
!1176 = !DIGlobalVariableExpression(var: !1177, expr: !DIExpression())
!1177 = distinct !DIGlobalVariable(name: "egid", scope: !1168, file: !3, line: 65, type: !21, isLocal: true, isDefinition: true)
!1178 = !DIGlobalVariableExpression(var: !1179, expr: !DIExpression())
!1179 = distinct !DIGlobalVariable(name: "longopts", scope: !1168, file: !3, line: 75, type: !1180, isLocal: true, isDefinition: true)
!1180 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1181, size: 2560, elements: !76)
!1181 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1182)
!1182 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !66, line: 50, size: 256, elements: !1183)
!1183 = !{!1184, !1185, !1186, !1187}
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1182, file: !66, line: 52, baseType: !69, size: 64)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !1182, file: !66, line: 55, baseType: !72, size: 32, offset: 64)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1182, file: !66, line: 56, baseType: !74, size: 64, offset: 128)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1182, file: !66, line: 57, baseType: !72, size: 32, offset: 192)
!1188 = !DIGlobalVariableExpression(var: !1189, expr: !DIExpression())
!1189 = distinct !DIGlobalVariable(name: "just_context", scope: !1168, file: !3, line: 45, type: !27, isLocal: true, isDefinition: true)
!1190 = !DIGlobalVariableExpression(var: !1191, expr: !DIExpression())
!1191 = distinct !DIGlobalVariable(name: "just_group", scope: !1168, file: !3, line: 51, type: !27, isLocal: true, isDefinition: true)
!1192 = !DIGlobalVariableExpression(var: !1193, expr: !DIExpression())
!1193 = distinct !DIGlobalVariable(name: "use_name", scope: !1168, file: !3, line: 61, type: !27, isLocal: true, isDefinition: true)
!1194 = !DIGlobalVariableExpression(var: !1195, expr: !DIExpression())
!1195 = distinct !DIGlobalVariable(name: "use_real", scope: !1168, file: !3, line: 53, type: !27, isLocal: true, isDefinition: true)
!1196 = !DIGlobalVariableExpression(var: !1197, expr: !DIExpression())
!1197 = distinct !DIGlobalVariable(name: "just_user", scope: !1168, file: !3, line: 55, type: !27, isLocal: true, isDefinition: true)
!1198 = !DIGlobalVariableExpression(var: !1199, expr: !DIExpression())
!1199 = distinct !DIGlobalVariable(name: "opt_zero", scope: !1168, file: !3, line: 47, type: !27, isLocal: true, isDefinition: true)
!1200 = !DIGlobalVariableExpression(var: !1201, expr: !DIExpression())
!1201 = distinct !DIGlobalVariable(name: "just_group_list", scope: !1168, file: !3, line: 49, type: !27, isLocal: true, isDefinition: true)
!1202 = !DIGlobalVariableExpression(var: !1203, expr: !DIExpression())
!1203 = distinct !DIGlobalVariable(name: "context", scope: !1168, file: !3, line: 69, type: !6, isLocal: true, isDefinition: true)
!1204 = !DIGlobalVariableExpression(var: !1205, expr: !DIExpression())
!1205 = distinct !DIGlobalVariable(name: "multiple_users", scope: !1168, file: !3, line: 59, type: !27, isLocal: true, isDefinition: true)
!1206 = !DIGlobalVariableExpression(var: !1207, expr: !DIExpression())
!1207 = distinct !DIGlobalVariable(name: "ok", scope: !1168, file: !3, line: 57, type: !27, isLocal: true, isDefinition: true)
!1208 = !DIGlobalVariableExpression(var: !1209, expr: !DIExpression())
!1209 = distinct !DIGlobalVariable(name: "buf", scope: !1210, file: !3, line: 327, type: !53, isLocal: true, isDefinition: true)
!1210 = distinct !DISubprogram(name: "uidtostr_ptr", scope: !3, file: !3, line: 325, type: !49, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1168, retainedNodes: !4)
!1211 = !DIGlobalVariableExpression(var: !1212, expr: !DIExpression())
!1212 = distinct !DIGlobalVariable(name: "buf", scope: !1213, file: !3, line: 316, type: !53, isLocal: true, isDefinition: true)
!1213 = distinct !DISubprogram(name: "gidtostr_ptr", scope: !3, file: !3, line: 314, type: !59, scopeLine: 315, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1168, retainedNodes: !4)
!1214 = !DILocalVariable(name: "pwd", scope: !1167, file: !3, line: 337, type: !1215)
!1215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1216, size: 64)
!1216 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "passwd", file: !659, line: 49, size: 384, elements: !1217)
!1217 = !{!1218, !1219, !1220, !1221, !1222, !1223, !1224}
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "pw_name", scope: !1216, file: !659, line: 51, baseType: !6, size: 64)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "pw_passwd", scope: !1216, file: !659, line: 52, baseType: !6, size: 64, offset: 64)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "pw_uid", scope: !1216, file: !659, line: 54, baseType: !14, size: 32, offset: 128)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "pw_gid", scope: !1216, file: !659, line: 55, baseType: !22, size: 32, offset: 160)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "pw_gecos", scope: !1216, file: !659, line: 56, baseType: !6, size: 64, offset: 192)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "pw_dir", scope: !1216, file: !659, line: 57, baseType: !6, size: 64, offset: 256)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "pw_shell", scope: !1216, file: !659, line: 58, baseType: !6, size: 64, offset: 320)
!1225 = distinct !DISubprogram(name: "print_full_info", scope: !3, file: !3, line: 357, type: !343, scopeLine: 358, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!1226 = !DILocalVariable(name: "username", arg: 1, scope: !1225, file: !3, line: 357, type: !69)
!1227 = !DILocation(line: 357, column: 30, scope: !1225)
!1228 = !DILocalVariable(name: "pwd", scope: !1225, file: !3, line: 359, type: !657)
!1229 = !DILocation(line: 359, column: 18, scope: !1225)
!1230 = !DILocalVariable(name: "grp", scope: !1225, file: !3, line: 360, type: !1231)
!1231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1232, size: 64)
!1232 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group", file: !1233, line: 42, size: 256, elements: !1234)
!1233 = !DIFile(filename: "/usr/include/grp.h", directory: "")
!1234 = !{!1235, !1236, !1237, !1238}
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "gr_name", scope: !1232, file: !1233, line: 44, baseType: !6, size: 64)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "gr_passwd", scope: !1232, file: !1233, line: 45, baseType: !6, size: 64, offset: 64)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "gr_gid", scope: !1232, file: !1233, line: 46, baseType: !22, size: 32, offset: 128)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "gr_mem", scope: !1232, file: !1233, line: 47, baseType: !184, size: 64, offset: 192)
!1239 = !DILocation(line: 360, column: 17, scope: !1225)
!1240 = !DILocation(line: 362, column: 11, scope: !1225)
!1241 = !DILocation(line: 362, column: 24, scope: !1225)
!1242 = !DILocation(line: 362, column: 3, scope: !1225)
!1243 = !DILocation(line: 363, column: 19, scope: !1225)
!1244 = !DILocation(line: 363, column: 9, scope: !1225)
!1245 = !DILocation(line: 363, column: 7, scope: !1225)
!1246 = !DILocation(line: 364, column: 7, scope: !1247)
!1247 = distinct !DILexicalBlock(scope: !1225, file: !3, line: 364, column: 7)
!1248 = !DILocation(line: 364, column: 7, scope: !1225)
!1249 = !DILocation(line: 365, column: 21, scope: !1247)
!1250 = !DILocation(line: 365, column: 26, scope: !1247)
!1251 = !DILocation(line: 365, column: 5, scope: !1247)
!1252 = !DILocation(line: 367, column: 11, scope: !1225)
!1253 = !DILocation(line: 367, column: 25, scope: !1225)
!1254 = !DILocation(line: 367, column: 3, scope: !1225)
!1255 = !DILocation(line: 368, column: 19, scope: !1225)
!1256 = !DILocation(line: 368, column: 9, scope: !1225)
!1257 = !DILocation(line: 368, column: 7, scope: !1225)
!1258 = !DILocation(line: 369, column: 7, scope: !1259)
!1259 = distinct !DILexicalBlock(scope: !1225, file: !3, line: 369, column: 7)
!1260 = !DILocation(line: 369, column: 7, scope: !1225)
!1261 = !DILocation(line: 370, column: 21, scope: !1259)
!1262 = !DILocation(line: 370, column: 26, scope: !1259)
!1263 = !DILocation(line: 370, column: 5, scope: !1259)
!1264 = !DILocation(line: 372, column: 7, scope: !1265)
!1265 = distinct !DILexicalBlock(scope: !1225, file: !3, line: 372, column: 7)
!1266 = !DILocation(line: 372, column: 15, scope: !1265)
!1267 = !DILocation(line: 372, column: 12, scope: !1265)
!1268 = !DILocation(line: 372, column: 7, scope: !1225)
!1269 = !DILocation(line: 374, column: 15, scope: !1270)
!1270 = distinct !DILexicalBlock(scope: !1265, file: !3, line: 373, column: 5)
!1271 = !DILocation(line: 374, column: 30, scope: !1270)
!1272 = !DILocation(line: 374, column: 7, scope: !1270)
!1273 = !DILocation(line: 375, column: 23, scope: !1270)
!1274 = !DILocation(line: 375, column: 13, scope: !1270)
!1275 = !DILocation(line: 375, column: 11, scope: !1270)
!1276 = !DILocation(line: 376, column: 11, scope: !1277)
!1277 = distinct !DILexicalBlock(scope: !1270, file: !3, line: 376, column: 11)
!1278 = !DILocation(line: 376, column: 11, scope: !1270)
!1279 = !DILocation(line: 377, column: 25, scope: !1277)
!1280 = !DILocation(line: 377, column: 30, scope: !1277)
!1281 = !DILocation(line: 377, column: 9, scope: !1277)
!1282 = !DILocation(line: 378, column: 5, scope: !1270)
!1283 = !DILocation(line: 380, column: 7, scope: !1284)
!1284 = distinct !DILexicalBlock(scope: !1225, file: !3, line: 380, column: 7)
!1285 = !DILocation(line: 380, column: 15, scope: !1284)
!1286 = !DILocation(line: 380, column: 12, scope: !1284)
!1287 = !DILocation(line: 380, column: 7, scope: !1225)
!1288 = !DILocation(line: 382, column: 15, scope: !1289)
!1289 = distinct !DILexicalBlock(scope: !1284, file: !3, line: 381, column: 5)
!1290 = !DILocation(line: 382, column: 30, scope: !1289)
!1291 = !DILocation(line: 382, column: 7, scope: !1289)
!1292 = !DILocation(line: 383, column: 23, scope: !1289)
!1293 = !DILocation(line: 383, column: 13, scope: !1289)
!1294 = !DILocation(line: 383, column: 11, scope: !1289)
!1295 = !DILocation(line: 384, column: 11, scope: !1296)
!1296 = distinct !DILexicalBlock(scope: !1289, file: !3, line: 384, column: 11)
!1297 = !DILocation(line: 384, column: 11, scope: !1289)
!1298 = !DILocation(line: 385, column: 25, scope: !1296)
!1299 = !DILocation(line: 385, column: 30, scope: !1296)
!1300 = !DILocation(line: 385, column: 9, scope: !1296)
!1301 = !DILocation(line: 386, column: 5, scope: !1289)
!1302 = !DILocalVariable(name: "groups", scope: !1303, file: !3, line: 389, type: !183)
!1303 = distinct !DILexicalBlock(scope: !1225, file: !3, line: 388, column: 3)
!1304 = !DILocation(line: 389, column: 12, scope: !1303)
!1305 = !DILocalVariable(name: "primary_group", scope: !1303, file: !3, line: 391, type: !21)
!1306 = !DILocation(line: 391, column: 11, scope: !1303)
!1307 = !DILocation(line: 392, column: 9, scope: !1308)
!1308 = distinct !DILexicalBlock(scope: !1303, file: !3, line: 392, column: 9)
!1309 = !DILocation(line: 392, column: 9, scope: !1303)
!1310 = !DILocation(line: 393, column: 23, scope: !1308)
!1311 = !DILocation(line: 393, column: 29, scope: !1308)
!1312 = !DILocation(line: 393, column: 34, scope: !1308)
!1313 = !DILocation(line: 393, column: 21, scope: !1308)
!1314 = !DILocation(line: 393, column: 7, scope: !1308)
!1315 = !DILocation(line: 395, column: 23, scope: !1308)
!1316 = !DILocation(line: 395, column: 21, scope: !1308)
!1317 = !DILocalVariable(name: "n_groups", scope: !1303, file: !3, line: 397, type: !72)
!1318 = !DILocation(line: 397, column: 9, scope: !1303)
!1319 = !DILocation(line: 397, column: 32, scope: !1303)
!1320 = !DILocation(line: 397, column: 42, scope: !1303)
!1321 = !DILocation(line: 397, column: 20, scope: !1303)
!1322 = !DILocation(line: 398, column: 9, scope: !1323)
!1323 = distinct !DILexicalBlock(scope: !1303, file: !3, line: 398, column: 9)
!1324 = !DILocation(line: 398, column: 18, scope: !1323)
!1325 = !DILocation(line: 398, column: 9, scope: !1303)
!1326 = !DILocation(line: 400, column: 13, scope: !1327)
!1327 = distinct !DILexicalBlock(scope: !1328, file: !3, line: 400, column: 13)
!1328 = distinct !DILexicalBlock(scope: !1323, file: !3, line: 399, column: 7)
!1329 = !DILocation(line: 400, column: 13, scope: !1328)
!1330 = !DILocation(line: 401, column: 21, scope: !1327)
!1331 = !DILocation(line: 401, column: 28, scope: !1327)
!1332 = !DILocation(line: 402, column: 25, scope: !1327)
!1333 = !DILocation(line: 402, column: 18, scope: !1327)
!1334 = !DILocation(line: 401, column: 11, scope: !1327)
!1335 = !DILocation(line: 404, column: 21, scope: !1327)
!1336 = !DILocation(line: 404, column: 28, scope: !1327)
!1337 = !DILocation(line: 404, column: 11, scope: !1327)
!1338 = !DILocation(line: 405, column: 12, scope: !1328)
!1339 = !DILocation(line: 406, column: 9, scope: !1328)
!1340 = !DILocation(line: 409, column: 9, scope: !1341)
!1341 = distinct !DILexicalBlock(scope: !1303, file: !3, line: 409, column: 9)
!1342 = !DILocation(line: 409, column: 18, scope: !1341)
!1343 = !DILocation(line: 409, column: 9, scope: !1303)
!1344 = !DILocation(line: 410, column: 7, scope: !1341)
!1345 = !DILocalVariable(name: "i", scope: !1346, file: !3, line: 411, type: !72)
!1346 = distinct !DILexicalBlock(scope: !1303, file: !3, line: 411, column: 5)
!1347 = !DILocation(line: 411, column: 14, scope: !1346)
!1348 = !DILocation(line: 411, column: 10, scope: !1346)
!1349 = !DILocation(line: 411, column: 21, scope: !1350)
!1350 = distinct !DILexicalBlock(scope: !1346, file: !3, line: 411, column: 5)
!1351 = !DILocation(line: 411, column: 25, scope: !1350)
!1352 = !DILocation(line: 411, column: 23, scope: !1350)
!1353 = !DILocation(line: 411, column: 5, scope: !1346)
!1354 = !DILocation(line: 413, column: 13, scope: !1355)
!1355 = distinct !DILexicalBlock(scope: !1356, file: !3, line: 413, column: 13)
!1356 = distinct !DILexicalBlock(scope: !1350, file: !3, line: 412, column: 7)
!1357 = !DILocation(line: 413, column: 15, scope: !1355)
!1358 = !DILocation(line: 413, column: 13, scope: !1356)
!1359 = !DILocation(line: 414, column: 11, scope: !1355)
!1360 = !DILocation(line: 415, column: 9, scope: !1356)
!1361 = !DILocation(line: 416, column: 25, scope: !1356)
!1362 = !DILocation(line: 416, column: 32, scope: !1356)
!1363 = !DILocation(line: 416, column: 15, scope: !1356)
!1364 = !DILocation(line: 416, column: 13, scope: !1356)
!1365 = !DILocation(line: 417, column: 13, scope: !1366)
!1366 = distinct !DILexicalBlock(scope: !1356, file: !3, line: 417, column: 13)
!1367 = !DILocation(line: 417, column: 13, scope: !1356)
!1368 = !DILocation(line: 418, column: 27, scope: !1366)
!1369 = !DILocation(line: 418, column: 32, scope: !1366)
!1370 = !DILocation(line: 418, column: 11, scope: !1366)
!1371 = !DILocation(line: 419, column: 7, scope: !1356)
!1372 = !DILocation(line: 411, column: 36, scope: !1350)
!1373 = !DILocation(line: 411, column: 5, scope: !1350)
!1374 = distinct !{!1374, !1353, !1375}
!1375 = !DILocation(line: 419, column: 7, scope: !1346)
!1376 = !DILocation(line: 420, column: 11, scope: !1303)
!1377 = !DILocation(line: 420, column: 5, scope: !1303)
!1378 = !DILocation(line: 425, column: 7, scope: !1379)
!1379 = distinct !DILexicalBlock(scope: !1225, file: !3, line: 425, column: 7)
!1380 = !DILocation(line: 425, column: 7, scope: !1225)
!1381 = !DILocation(line: 426, column: 13, scope: !1379)
!1382 = !DILocation(line: 426, column: 31, scope: !1379)
!1383 = !DILocation(line: 426, column: 5, scope: !1379)
!1384 = !DILocation(line: 427, column: 1, scope: !1225)
!1385 = !DILocalVariable(name: "uid", arg: 1, scope: !48, file: !3, line: 325, type: !51)
!1386 = !DILocation(line: 325, column: 28, scope: !48)
!1387 = !DILocation(line: 328, column: 22, scope: !48)
!1388 = !DILocation(line: 328, column: 21, scope: !48)
!1389 = !DILocation(line: 328, column: 10, scope: !48)
!1390 = !DILocation(line: 328, column: 3, scope: !48)
!1391 = !DILocalVariable(name: "uid", arg: 1, scope: !1392, file: !3, line: 325, type: !51)
!1392 = distinct !DISubprogram(name: "uidtostr_ptr", scope: !3, file: !3, line: 325, type: !49, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1393, retainedNodes: !4)
!1393 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !1394, nameTableKind: None)
!1394 = !{!1395, !1397, !1399, !1401, !1403, !1413, !1415, !1417, !1419, !1421, !1423, !1425, !1427, !1429, !1431, !1433, !1435}
!1395 = !DIGlobalVariableExpression(var: !1396, expr: !DIExpression())
!1396 = distinct !DIGlobalVariable(name: "ruid", scope: !1393, file: !3, line: 64, type: !12, isLocal: true, isDefinition: true)
!1397 = !DIGlobalVariableExpression(var: !1398, expr: !DIExpression())
!1398 = distinct !DIGlobalVariable(name: "euid", scope: !1393, file: !3, line: 64, type: !12, isLocal: true, isDefinition: true)
!1399 = !DIGlobalVariableExpression(var: !1400, expr: !DIExpression())
!1400 = distinct !DIGlobalVariable(name: "rgid", scope: !1393, file: !3, line: 65, type: !21, isLocal: true, isDefinition: true)
!1401 = !DIGlobalVariableExpression(var: !1402, expr: !DIExpression())
!1402 = distinct !DIGlobalVariable(name: "egid", scope: !1393, file: !3, line: 65, type: !21, isLocal: true, isDefinition: true)
!1403 = !DIGlobalVariableExpression(var: !1404, expr: !DIExpression())
!1404 = distinct !DIGlobalVariable(name: "longopts", scope: !1393, file: !3, line: 75, type: !1405, isLocal: true, isDefinition: true)
!1405 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1406, size: 2560, elements: !76)
!1406 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1407)
!1407 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !66, line: 50, size: 256, elements: !1408)
!1408 = !{!1409, !1410, !1411, !1412}
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1407, file: !66, line: 52, baseType: !69, size: 64)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !1407, file: !66, line: 55, baseType: !72, size: 32, offset: 64)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1407, file: !66, line: 56, baseType: !74, size: 64, offset: 128)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1407, file: !66, line: 57, baseType: !72, size: 32, offset: 192)
!1413 = !DIGlobalVariableExpression(var: !1414, expr: !DIExpression())
!1414 = distinct !DIGlobalVariable(name: "just_context", scope: !1393, file: !3, line: 45, type: !27, isLocal: true, isDefinition: true)
!1415 = !DIGlobalVariableExpression(var: !1416, expr: !DIExpression())
!1416 = distinct !DIGlobalVariable(name: "just_group", scope: !1393, file: !3, line: 51, type: !27, isLocal: true, isDefinition: true)
!1417 = !DIGlobalVariableExpression(var: !1418, expr: !DIExpression())
!1418 = distinct !DIGlobalVariable(name: "use_name", scope: !1393, file: !3, line: 61, type: !27, isLocal: true, isDefinition: true)
!1419 = !DIGlobalVariableExpression(var: !1420, expr: !DIExpression())
!1420 = distinct !DIGlobalVariable(name: "use_real", scope: !1393, file: !3, line: 53, type: !27, isLocal: true, isDefinition: true)
!1421 = !DIGlobalVariableExpression(var: !1422, expr: !DIExpression())
!1422 = distinct !DIGlobalVariable(name: "just_user", scope: !1393, file: !3, line: 55, type: !27, isLocal: true, isDefinition: true)
!1423 = !DIGlobalVariableExpression(var: !1424, expr: !DIExpression())
!1424 = distinct !DIGlobalVariable(name: "opt_zero", scope: !1393, file: !3, line: 47, type: !27, isLocal: true, isDefinition: true)
!1425 = !DIGlobalVariableExpression(var: !1426, expr: !DIExpression())
!1426 = distinct !DIGlobalVariable(name: "just_group_list", scope: !1393, file: !3, line: 49, type: !27, isLocal: true, isDefinition: true)
!1427 = !DIGlobalVariableExpression(var: !1428, expr: !DIExpression())
!1428 = distinct !DIGlobalVariable(name: "context", scope: !1393, file: !3, line: 69, type: !6, isLocal: true, isDefinition: true)
!1429 = !DIGlobalVariableExpression(var: !1430, expr: !DIExpression())
!1430 = distinct !DIGlobalVariable(name: "multiple_users", scope: !1393, file: !3, line: 59, type: !27, isLocal: true, isDefinition: true)
!1431 = !DIGlobalVariableExpression(var: !1432, expr: !DIExpression())
!1432 = distinct !DIGlobalVariable(name: "ok", scope: !1393, file: !3, line: 57, type: !27, isLocal: true, isDefinition: true)
!1433 = !DIGlobalVariableExpression(var: !1434, expr: !DIExpression())
!1434 = distinct !DIGlobalVariable(name: "buf", scope: !1392, file: !3, line: 327, type: !53, isLocal: true, isDefinition: true)
!1435 = !DIGlobalVariableExpression(var: !1436, expr: !DIExpression())
!1436 = distinct !DIGlobalVariable(name: "buf", scope: !1437, file: !3, line: 316, type: !53, isLocal: true, isDefinition: true)
!1437 = distinct !DISubprogram(name: "gidtostr_ptr", scope: !3, file: !3, line: 314, type: !59, scopeLine: 315, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1393, retainedNodes: !4)
!1438 = !DILocalVariable(name: "gid", arg: 1, scope: !58, file: !3, line: 314, type: !61)
!1439 = !DILocation(line: 314, column: 28, scope: !58)
!1440 = !DILocation(line: 317, column: 22, scope: !58)
!1441 = !DILocation(line: 317, column: 21, scope: !58)
!1442 = !DILocation(line: 317, column: 10, scope: !58)
!1443 = !DILocation(line: 317, column: 3, scope: !58)
!1444 = distinct !DISubprogram(name: "print_group_list", scope: !81, file: !81, line: 36, type: !1445, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !82, retainedNodes: !4)
!1445 = !DISubroutineType(types: !1446)
!1446 = !{!27, !69, !12, !21, !21, !27, !7}
!1447 = !DILocalVariable(name: "username", arg: 1, scope: !1444, file: !81, line: 36, type: !69)
!1448 = !DILocation(line: 36, column: 31, scope: !1444)
!1449 = !DILocalVariable(name: "ruid", arg: 2, scope: !1444, file: !81, line: 37, type: !12)
!1450 = !DILocation(line: 37, column: 25, scope: !1444)
!1451 = !DILocalVariable(name: "rgid", arg: 3, scope: !1444, file: !81, line: 37, type: !21)
!1452 = !DILocation(line: 37, column: 37, scope: !1444)
!1453 = !DILocalVariable(name: "egid", arg: 4, scope: !1444, file: !81, line: 37, type: !21)
!1454 = !DILocation(line: 37, column: 49, scope: !1444)
!1455 = !DILocalVariable(name: "use_names", arg: 5, scope: !1444, file: !81, line: 38, type: !27)
!1456 = !DILocation(line: 38, column: 24, scope: !1444)
!1457 = !DILocalVariable(name: "delim", arg: 6, scope: !1444, file: !81, line: 38, type: !7)
!1458 = !DILocation(line: 38, column: 40, scope: !1444)
!1459 = !DILocalVariable(name: "ok", scope: !1444, file: !81, line: 40, type: !27)
!1460 = !DILocation(line: 40, column: 8, scope: !1444)
!1461 = !DILocalVariable(name: "pwd", scope: !1444, file: !81, line: 41, type: !1462)
!1462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1463, size: 64)
!1463 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "passwd", file: !659, line: 49, size: 384, elements: !1464)
!1464 = !{!1465, !1466, !1467, !1468, !1469, !1470, !1471}
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "pw_name", scope: !1463, file: !659, line: 51, baseType: !6, size: 64)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "pw_passwd", scope: !1463, file: !659, line: 52, baseType: !6, size: 64, offset: 64)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "pw_uid", scope: !1463, file: !659, line: 54, baseType: !14, size: 32, offset: 128)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "pw_gid", scope: !1463, file: !659, line: 55, baseType: !22, size: 32, offset: 160)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "pw_gecos", scope: !1463, file: !659, line: 56, baseType: !6, size: 64, offset: 192)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "pw_dir", scope: !1463, file: !659, line: 57, baseType: !6, size: 64, offset: 256)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "pw_shell", scope: !1463, file: !659, line: 58, baseType: !6, size: 64, offset: 320)
!1472 = !DILocation(line: 41, column: 18, scope: !1444)
!1473 = !DILocation(line: 43, column: 7, scope: !1474)
!1474 = distinct !DILexicalBlock(scope: !1444, file: !81, line: 43, column: 7)
!1475 = !DILocation(line: 43, column: 7, scope: !1444)
!1476 = !DILocation(line: 45, column: 23, scope: !1477)
!1477 = distinct !DILexicalBlock(scope: !1474, file: !81, line: 44, column: 5)
!1478 = !DILocation(line: 45, column: 13, scope: !1477)
!1479 = !DILocation(line: 45, column: 11, scope: !1477)
!1480 = !DILocation(line: 46, column: 11, scope: !1481)
!1481 = distinct !DILexicalBlock(scope: !1477, file: !81, line: 46, column: 11)
!1482 = !DILocation(line: 46, column: 15, scope: !1481)
!1483 = !DILocation(line: 46, column: 11, scope: !1477)
!1484 = !DILocation(line: 47, column: 12, scope: !1481)
!1485 = !DILocation(line: 47, column: 9, scope: !1481)
!1486 = !DILocation(line: 48, column: 5, scope: !1477)
!1487 = !DILocation(line: 50, column: 21, scope: !1488)
!1488 = distinct !DILexicalBlock(scope: !1444, file: !81, line: 50, column: 7)
!1489 = !DILocation(line: 50, column: 27, scope: !1488)
!1490 = !DILocation(line: 50, column: 8, scope: !1488)
!1491 = !DILocation(line: 50, column: 7, scope: !1444)
!1492 = !DILocation(line: 51, column: 8, scope: !1488)
!1493 = !DILocation(line: 51, column: 5, scope: !1488)
!1494 = !DILocation(line: 53, column: 7, scope: !1495)
!1495 = distinct !DILexicalBlock(scope: !1444, file: !81, line: 53, column: 7)
!1496 = !DILocation(line: 53, column: 15, scope: !1495)
!1497 = !DILocation(line: 53, column: 12, scope: !1495)
!1498 = !DILocation(line: 53, column: 7, scope: !1444)
!1499 = !DILocation(line: 55, column: 7, scope: !1500)
!1500 = distinct !DILexicalBlock(scope: !1495, file: !81, line: 54, column: 5)
!1501 = !DILocation(line: 56, column: 25, scope: !1502)
!1502 = distinct !DILexicalBlock(scope: !1500, file: !81, line: 56, column: 11)
!1503 = !DILocation(line: 56, column: 31, scope: !1502)
!1504 = !DILocation(line: 56, column: 12, scope: !1502)
!1505 = !DILocation(line: 56, column: 11, scope: !1500)
!1506 = !DILocation(line: 57, column: 12, scope: !1502)
!1507 = !DILocation(line: 57, column: 9, scope: !1502)
!1508 = !DILocation(line: 58, column: 5, scope: !1500)
!1509 = !DILocalVariable(name: "groups", scope: !1510, file: !81, line: 61, type: !183)
!1510 = distinct !DILexicalBlock(scope: !1444, file: !81, line: 60, column: 3)
!1511 = !DILocation(line: 61, column: 12, scope: !1510)
!1512 = !DILocalVariable(name: "n_groups", scope: !1510, file: !81, line: 63, type: !72)
!1513 = !DILocation(line: 63, column: 9, scope: !1510)
!1514 = !DILocation(line: 63, column: 32, scope: !1510)
!1515 = !DILocation(line: 63, column: 43, scope: !1510)
!1516 = !DILocation(line: 63, column: 49, scope: !1510)
!1517 = !DILocation(line: 63, column: 54, scope: !1510)
!1518 = !DILocation(line: 63, column: 63, scope: !1510)
!1519 = !DILocation(line: 63, column: 20, scope: !1510)
!1520 = !DILocation(line: 64, column: 9, scope: !1521)
!1521 = distinct !DILexicalBlock(scope: !1510, file: !81, line: 64, column: 9)
!1522 = !DILocation(line: 64, column: 18, scope: !1521)
!1523 = !DILocation(line: 64, column: 9, scope: !1510)
!1524 = !DILocation(line: 66, column: 13, scope: !1525)
!1525 = distinct !DILexicalBlock(scope: !1526, file: !81, line: 66, column: 13)
!1526 = distinct !DILexicalBlock(scope: !1521, file: !81, line: 65, column: 7)
!1527 = !DILocation(line: 66, column: 13, scope: !1526)
!1528 = !DILocation(line: 68, column: 23, scope: !1529)
!1529 = distinct !DILexicalBlock(scope: !1525, file: !81, line: 67, column: 11)
!1530 = !DILocation(line: 68, column: 30, scope: !1529)
!1531 = !DILocation(line: 69, column: 27, scope: !1529)
!1532 = !DILocation(line: 69, column: 20, scope: !1529)
!1533 = !DILocation(line: 68, column: 13, scope: !1529)
!1534 = !DILocation(line: 70, column: 11, scope: !1529)
!1535 = !DILocation(line: 73, column: 23, scope: !1536)
!1536 = distinct !DILexicalBlock(scope: !1525, file: !81, line: 72, column: 11)
!1537 = !DILocation(line: 73, column: 30, scope: !1536)
!1538 = !DILocation(line: 73, column: 13, scope: !1536)
!1539 = !DILocation(line: 75, column: 9, scope: !1526)
!1540 = !DILocalVariable(name: "i", scope: !1541, file: !81, line: 78, type: !72)
!1541 = distinct !DILexicalBlock(scope: !1510, file: !81, line: 78, column: 5)
!1542 = !DILocation(line: 78, column: 14, scope: !1541)
!1543 = !DILocation(line: 78, column: 10, scope: !1541)
!1544 = !DILocation(line: 78, column: 21, scope: !1545)
!1545 = distinct !DILexicalBlock(scope: !1541, file: !81, line: 78, column: 5)
!1546 = !DILocation(line: 78, column: 25, scope: !1545)
!1547 = !DILocation(line: 78, column: 23, scope: !1545)
!1548 = !DILocation(line: 78, column: 5, scope: !1541)
!1549 = !DILocation(line: 79, column: 11, scope: !1550)
!1550 = distinct !DILexicalBlock(scope: !1545, file: !81, line: 79, column: 11)
!1551 = !DILocation(line: 79, column: 18, scope: !1550)
!1552 = !DILocation(line: 79, column: 24, scope: !1550)
!1553 = !DILocation(line: 79, column: 21, scope: !1550)
!1554 = !DILocation(line: 79, column: 29, scope: !1550)
!1555 = !DILocation(line: 79, column: 32, scope: !1550)
!1556 = !DILocation(line: 79, column: 39, scope: !1550)
!1557 = !DILocation(line: 79, column: 45, scope: !1550)
!1558 = !DILocation(line: 79, column: 42, scope: !1550)
!1559 = !DILocation(line: 79, column: 11, scope: !1545)
!1560 = !DILocation(line: 81, column: 11, scope: !1561)
!1561 = distinct !DILexicalBlock(scope: !1550, file: !81, line: 80, column: 9)
!1562 = !DILocation(line: 82, column: 29, scope: !1563)
!1563 = distinct !DILexicalBlock(scope: !1561, file: !81, line: 82, column: 15)
!1564 = !DILocation(line: 82, column: 36, scope: !1563)
!1565 = !DILocation(line: 82, column: 40, scope: !1563)
!1566 = !DILocation(line: 82, column: 16, scope: !1563)
!1567 = !DILocation(line: 82, column: 15, scope: !1561)
!1568 = !DILocation(line: 83, column: 16, scope: !1563)
!1569 = !DILocation(line: 83, column: 13, scope: !1563)
!1570 = !DILocation(line: 84, column: 9, scope: !1561)
!1571 = !DILocation(line: 78, column: 36, scope: !1545)
!1572 = !DILocation(line: 78, column: 5, scope: !1545)
!1573 = distinct !{!1573, !1548, !1574}
!1574 = !DILocation(line: 84, column: 9, scope: !1541)
!1575 = !DILocation(line: 85, column: 11, scope: !1510)
!1576 = !DILocation(line: 85, column: 5, scope: !1510)
!1577 = !DILocation(line: 87, column: 10, scope: !1444)
!1578 = !DILocation(line: 87, column: 3, scope: !1444)
!1579 = !DILocation(line: 88, column: 1, scope: !1444)
!1580 = !DILocalVariable(name: "username", arg: 1, scope: !1581, file: !81, line: 36, type: !69)
!1581 = distinct !DISubprogram(name: "print_group_list", scope: !81, file: !81, line: 36, type: !1445, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1582, retainedNodes: !4)
!1582 = distinct !DICompileUnit(language: DW_LANG_C99, file: !81, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !83, globals: !1583, nameTableKind: None)
!1583 = !{!1584}
!1584 = !DIGlobalVariableExpression(var: !1585, expr: !DIExpression())
!1585 = distinct !DIGlobalVariable(name: "buf", scope: !1586, file: !81, line: 96, type: !53, isLocal: true, isDefinition: true)
!1586 = distinct !DISubprogram(name: "gidtostr_ptr", scope: !81, file: !81, line: 94, type: !59, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1582, retainedNodes: !4)
!1587 = !DILocalVariable(name: "ruid", arg: 2, scope: !1581, file: !81, line: 37, type: !12)
!1588 = !DILocalVariable(name: "rgid", arg: 3, scope: !1581, file: !81, line: 37, type: !21)
!1589 = !DILocalVariable(name: "egid", arg: 4, scope: !1581, file: !81, line: 37, type: !21)
!1590 = !DILocalVariable(name: "use_names", arg: 5, scope: !1581, file: !81, line: 38, type: !27)
!1591 = !DILocalVariable(name: "delim", arg: 6, scope: !1581, file: !81, line: 38, type: !7)
!1592 = !DILocalVariable(name: "ok", scope: !1581, file: !81, line: 40, type: !27)
!1593 = !DILocalVariable(name: "pwd", scope: !1581, file: !81, line: 41, type: !1594)
!1594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1595, size: 64)
!1595 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "passwd", file: !659, line: 49, size: 384, elements: !1596)
!1596 = !{!1597, !1598, !1599, !1600, !1601, !1602, !1603}
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "pw_name", scope: !1595, file: !659, line: 51, baseType: !6, size: 64)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "pw_passwd", scope: !1595, file: !659, line: 52, baseType: !6, size: 64, offset: 64)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "pw_uid", scope: !1595, file: !659, line: 54, baseType: !14, size: 32, offset: 128)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "pw_gid", scope: !1595, file: !659, line: 55, baseType: !22, size: 32, offset: 160)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "pw_gecos", scope: !1595, file: !659, line: 56, baseType: !6, size: 64, offset: 192)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "pw_dir", scope: !1595, file: !659, line: 57, baseType: !6, size: 64, offset: 256)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "pw_shell", scope: !1595, file: !659, line: 58, baseType: !6, size: 64, offset: 320)
!1604 = distinct !DISubprogram(name: "print_group", scope: !81, file: !81, line: 103, type: !1605, scopeLine: 104, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !82, retainedNodes: !4)
!1605 = !DISubroutineType(types: !1606)
!1606 = !{!27, !21, !27}
!1607 = !DILocalVariable(name: "gid", arg: 1, scope: !1604, file: !81, line: 103, type: !21)
!1608 = !DILocation(line: 103, column: 20, scope: !1604)
!1609 = !DILocalVariable(name: "use_name", arg: 2, scope: !1604, file: !81, line: 103, type: !27)
!1610 = !DILocation(line: 103, column: 30, scope: !1604)
!1611 = !DILocalVariable(name: "grp", scope: !1604, file: !81, line: 105, type: !1612)
!1612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1613, size: 64)
!1613 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group", file: !1233, line: 42, size: 256, elements: !1614)
!1614 = !{!1615, !1616, !1617, !1618}
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "gr_name", scope: !1613, file: !1233, line: 44, baseType: !6, size: 64)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "gr_passwd", scope: !1613, file: !1233, line: 45, baseType: !6, size: 64, offset: 64)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "gr_gid", scope: !1613, file: !1233, line: 46, baseType: !22, size: 32, offset: 128)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "gr_mem", scope: !1613, file: !1233, line: 47, baseType: !184, size: 64, offset: 192)
!1619 = !DILocation(line: 105, column: 17, scope: !1604)
!1620 = !DILocalVariable(name: "ok", scope: !1604, file: !81, line: 106, type: !27)
!1621 = !DILocation(line: 106, column: 8, scope: !1604)
!1622 = !DILocation(line: 108, column: 7, scope: !1623)
!1623 = distinct !DILexicalBlock(scope: !1604, file: !81, line: 108, column: 7)
!1624 = !DILocation(line: 108, column: 7, scope: !1604)
!1625 = !DILocation(line: 110, column: 23, scope: !1626)
!1626 = distinct !DILexicalBlock(scope: !1623, file: !81, line: 109, column: 5)
!1627 = !DILocation(line: 110, column: 13, scope: !1626)
!1628 = !DILocation(line: 110, column: 11, scope: !1626)
!1629 = !DILocation(line: 111, column: 11, scope: !1630)
!1630 = distinct !DILexicalBlock(scope: !1626, file: !81, line: 111, column: 11)
!1631 = !DILocation(line: 111, column: 15, scope: !1630)
!1632 = !DILocation(line: 111, column: 11, scope: !1626)
!1633 = !DILocation(line: 113, column: 24, scope: !1634)
!1634 = distinct !DILexicalBlock(scope: !1630, file: !81, line: 112, column: 9)
!1635 = !DILocation(line: 114, column: 38, scope: !1634)
!1636 = !DILocation(line: 114, column: 18, scope: !1634)
!1637 = !DILocation(line: 113, column: 11, scope: !1634)
!1638 = !DILocation(line: 115, column: 14, scope: !1634)
!1639 = !DILocation(line: 116, column: 9, scope: !1634)
!1640 = !DILocation(line: 117, column: 5, scope: !1626)
!1641 = !DILocalVariable(name: "s", scope: !1604, file: !81, line: 119, type: !6)
!1642 = !DILocation(line: 119, column: 9, scope: !1604)
!1643 = !DILocation(line: 119, column: 13, scope: !1604)
!1644 = !DILocation(line: 119, column: 19, scope: !1604)
!1645 = !DILocation(line: 119, column: 24, scope: !1604)
!1646 = !DILocation(line: 119, column: 34, scope: !1604)
!1647 = !DILocation(line: 120, column: 3, scope: !1604)
!1648 = !DILocation(line: 121, column: 10, scope: !1604)
!1649 = !DILocation(line: 121, column: 3, scope: !1604)
!1650 = !DILocalVariable(name: "gid", arg: 1, scope: !1651, file: !81, line: 103, type: !21)
!1651 = distinct !DISubprogram(name: "print_group", scope: !81, file: !81, line: 103, type: !1605, scopeLine: 104, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1652, retainedNodes: !4)
!1652 = distinct !DICompileUnit(language: DW_LANG_C99, file: !81, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !83, globals: !1653, nameTableKind: None)
!1653 = !{!1654}
!1654 = !DIGlobalVariableExpression(var: !1655, expr: !DIExpression())
!1655 = distinct !DIGlobalVariable(name: "buf", scope: !1656, file: !81, line: 96, type: !53, isLocal: true, isDefinition: true)
!1656 = distinct !DISubprogram(name: "gidtostr_ptr", scope: !81, file: !81, line: 94, type: !59, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1652, retainedNodes: !4)
!1657 = !DILocalVariable(name: "use_name", arg: 2, scope: !1651, file: !81, line: 103, type: !27)
!1658 = !DILocalVariable(name: "grp", scope: !1651, file: !81, line: 105, type: !1659)
!1659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1660, size: 64)
!1660 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group", file: !1233, line: 42, size: 256, elements: !1661)
!1661 = !{!1662, !1663, !1664, !1665}
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "gr_name", scope: !1660, file: !1233, line: 44, baseType: !6, size: 64)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "gr_passwd", scope: !1660, file: !1233, line: 45, baseType: !6, size: 64, offset: 64)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "gr_gid", scope: !1660, file: !1233, line: 46, baseType: !22, size: 32, offset: 128)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "gr_mem", scope: !1660, file: !1233, line: 47, baseType: !184, size: 64, offset: 192)
!1666 = !DILocalVariable(name: "ok", scope: !1651, file: !81, line: 106, type: !27)
!1667 = !DILocalVariable(name: "gid", arg: 1, scope: !80, file: !81, line: 94, type: !61)
!1668 = !DILocation(line: 94, column: 28, scope: !80)
!1669 = !DILocation(line: 97, column: 22, scope: !80)
!1670 = !DILocation(line: 97, column: 21, scope: !80)
!1671 = !DILocation(line: 97, column: 10, scope: !80)
!1672 = !DILocation(line: 97, column: 3, scope: !80)
!1673 = !DILocalVariable(name: "gid", arg: 1, scope: !1674, file: !81, line: 94, type: !61)
!1674 = distinct !DISubprogram(name: "gidtostr_ptr", scope: !81, file: !81, line: 94, type: !59, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1675, retainedNodes: !4)
!1675 = distinct !DICompileUnit(language: DW_LANG_C99, file: !81, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !83, globals: !1676, nameTableKind: None)
!1676 = !{!1677}
!1677 = !DIGlobalVariableExpression(var: !1678, expr: !DIExpression())
!1678 = distinct !DIGlobalVariable(name: "buf", scope: !1674, file: !81, line: 96, type: !53, isLocal: true, isDefinition: true)
!1679 = distinct !DISubprogram(name: "close_stdout", scope: !98, file: !98, line: 117, type: !1680, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !93, retainedNodes: !4)
!1680 = !DISubroutineType(types: !1681)
!1681 = !{null}
!1682 = !DILocation(line: 119, column: 21, scope: !1683)
!1683 = distinct !DILexicalBlock(scope: !1679, file: !98, line: 119, column: 7)
!1684 = !DILocation(line: 119, column: 7, scope: !1683)
!1685 = !DILocation(line: 119, column: 29, scope: !1683)
!1686 = !DILocation(line: 120, column: 7, scope: !1683)
!1687 = !DILocation(line: 120, column: 12, scope: !1683)
!1688 = !DILocation(line: 120, column: 25, scope: !1683)
!1689 = !DILocation(line: 120, column: 28, scope: !1683)
!1690 = !DILocation(line: 120, column: 34, scope: !1683)
!1691 = !DILocation(line: 119, column: 7, scope: !1679)
!1692 = !DILocalVariable(name: "write_error", scope: !1693, file: !98, line: 122, type: !69)
!1693 = distinct !DILexicalBlock(scope: !1683, file: !98, line: 121, column: 5)
!1694 = !DILocation(line: 122, column: 19, scope: !1693)
!1695 = !DILocation(line: 122, column: 33, scope: !1693)
!1696 = !DILocation(line: 123, column: 11, scope: !1697)
!1697 = distinct !DILexicalBlock(scope: !1693, file: !98, line: 123, column: 11)
!1698 = !DILocation(line: 123, column: 11, scope: !1693)
!1699 = !DILocation(line: 124, column: 19, scope: !1697)
!1700 = !DILocation(line: 124, column: 52, scope: !1697)
!1701 = !DILocation(line: 124, column: 36, scope: !1697)
!1702 = !DILocation(line: 125, column: 16, scope: !1697)
!1703 = !DILocation(line: 124, column: 9, scope: !1697)
!1704 = !DILocation(line: 127, column: 19, scope: !1697)
!1705 = !DILocation(line: 127, column: 32, scope: !1697)
!1706 = !DILocation(line: 127, column: 9, scope: !1697)
!1707 = !DILocation(line: 129, column: 14, scope: !1693)
!1708 = !DILocation(line: 129, column: 7, scope: !1693)
!1709 = !DILocation(line: 134, column: 42, scope: !1710)
!1710 = distinct !DILexicalBlock(scope: !1679, file: !98, line: 134, column: 7)
!1711 = !DILocation(line: 134, column: 28, scope: !1710)
!1712 = !DILocation(line: 134, column: 50, scope: !1710)
!1713 = !DILocation(line: 134, column: 7, scope: !1679)
!1714 = !DILocation(line: 135, column: 12, scope: !1710)
!1715 = !DILocation(line: 135, column: 5, scope: !1710)
!1716 = !DILocation(line: 136, column: 1, scope: !1679)
!1717 = distinct !DISubprogram(name: "umaxtostr", scope: !1718, file: !1718, line: 36, type: !1719, scopeLine: 37, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !202, retainedNodes: !4)
!1718 = !DIFile(filename: "./lib/anytostr.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!1719 = !DISubroutineType(types: !1720)
!1720 = !{!6, !205, !6}
!1721 = !DILocalVariable(name: "i", arg: 1, scope: !1717, file: !1718, line: 36, type: !205)
!1722 = !DILocation(line: 36, column: 19, scope: !1717)
!1723 = !DILocalVariable(name: "buf", arg: 2, scope: !1717, file: !1718, line: 36, type: !6)
!1724 = !DILocation(line: 36, column: 28, scope: !1717)
!1725 = !DILocalVariable(name: "p", scope: !1717, file: !1718, line: 38, type: !6)
!1726 = !DILocation(line: 38, column: 9, scope: !1717)
!1727 = !DILocation(line: 38, column: 13, scope: !1717)
!1728 = !DILocation(line: 38, column: 17, scope: !1717)
!1729 = !DILocation(line: 39, column: 4, scope: !1717)
!1730 = !DILocation(line: 39, column: 6, scope: !1717)
!1731 = !DILocation(line: 41, column: 7, scope: !1732)
!1732 = distinct !DILexicalBlock(scope: !1717, file: !1718, line: 41, column: 7)
!1733 = !DILocation(line: 41, column: 9, scope: !1732)
!1734 = !DILocation(line: 41, column: 7, scope: !1717)
!1735 = !DILocation(line: 43, column: 7, scope: !1736)
!1736 = distinct !DILexicalBlock(scope: !1732, file: !1718, line: 42, column: 5)
!1737 = !DILocation(line: 44, column: 22, scope: !1736)
!1738 = !DILocation(line: 44, column: 24, scope: !1736)
!1739 = !DILocation(line: 44, column: 20, scope: !1736)
!1740 = !DILocation(line: 44, column: 16, scope: !1736)
!1741 = !DILocation(line: 44, column: 10, scope: !1736)
!1742 = !DILocation(line: 44, column: 14, scope: !1736)
!1743 = !DILocation(line: 44, column: 9, scope: !1736)
!1744 = !DILocation(line: 45, column: 17, scope: !1736)
!1745 = !DILocation(line: 45, column: 24, scope: !1736)
!1746 = distinct !{!1746, !1735, !1747}
!1747 = !DILocation(line: 45, column: 28, scope: !1736)
!1748 = !DILocation(line: 47, column: 8, scope: !1736)
!1749 = !DILocation(line: 47, column: 12, scope: !1736)
!1750 = !DILocation(line: 48, column: 5, scope: !1736)
!1751 = !DILocation(line: 51, column: 7, scope: !1752)
!1752 = distinct !DILexicalBlock(scope: !1732, file: !1718, line: 50, column: 5)
!1753 = !DILocation(line: 52, column: 22, scope: !1752)
!1754 = !DILocation(line: 52, column: 24, scope: !1752)
!1755 = !DILocation(line: 52, column: 20, scope: !1752)
!1756 = !DILocation(line: 52, column: 16, scope: !1752)
!1757 = !DILocation(line: 52, column: 10, scope: !1752)
!1758 = !DILocation(line: 52, column: 14, scope: !1752)
!1759 = !DILocation(line: 52, column: 9, scope: !1752)
!1760 = !DILocation(line: 53, column: 17, scope: !1752)
!1761 = !DILocation(line: 53, column: 24, scope: !1752)
!1762 = distinct !{!1762, !1751, !1763}
!1763 = !DILocation(line: 53, column: 28, scope: !1752)
!1764 = !DILocation(line: 56, column: 10, scope: !1717)
!1765 = !DILocation(line: 56, column: 3, scope: !1717)
!1766 = !DILocalVariable(name: "i", arg: 1, scope: !1767, file: !1718, line: 36, type: !205)
!1767 = distinct !DISubprogram(name: "umaxtostr", scope: !1718, file: !1718, line: 36, type: !1719, scopeLine: 37, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1768, retainedNodes: !4)
!1768 = distinct !DICompileUnit(language: DW_LANG_C99, file: !203, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !204, nameTableKind: None)
!1769 = !DILocalVariable(name: "buf", arg: 2, scope: !1767, file: !1718, line: 36, type: !6)
!1770 = !DILocalVariable(name: "p", scope: !1767, file: !1718, line: 38, type: !6)
!1771 = distinct !DISubprogram(name: "set_program_name", scope: !112, file: !112, line: 39, type: !343, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !108, retainedNodes: !4)
!1772 = !DILocalVariable(name: "argv0", arg: 1, scope: !1771, file: !112, line: 39, type: !69)
!1773 = !DILocation(line: 39, column: 31, scope: !1771)
!1774 = !DILocalVariable(name: "slash", scope: !1771, file: !112, line: 46, type: !69)
!1775 = !DILocation(line: 46, column: 15, scope: !1771)
!1776 = !DILocalVariable(name: "base", scope: !1771, file: !112, line: 47, type: !69)
!1777 = !DILocation(line: 47, column: 15, scope: !1771)
!1778 = !DILocation(line: 51, column: 7, scope: !1779)
!1779 = distinct !DILexicalBlock(scope: !1771, file: !112, line: 51, column: 7)
!1780 = !DILocation(line: 51, column: 13, scope: !1779)
!1781 = !DILocation(line: 51, column: 7, scope: !1771)
!1782 = !DILocation(line: 55, column: 14, scope: !1783)
!1783 = distinct !DILexicalBlock(scope: !1779, file: !112, line: 52, column: 5)
!1784 = !DILocation(line: 54, column: 7, scope: !1783)
!1785 = !DILocation(line: 56, column: 7, scope: !1783)
!1786 = !DILocation(line: 59, column: 20, scope: !1771)
!1787 = !DILocation(line: 59, column: 11, scope: !1771)
!1788 = !DILocation(line: 59, column: 9, scope: !1771)
!1789 = !DILocation(line: 60, column: 11, scope: !1771)
!1790 = !DILocation(line: 60, column: 17, scope: !1771)
!1791 = !DILocation(line: 60, column: 27, scope: !1771)
!1792 = !DILocation(line: 60, column: 33, scope: !1771)
!1793 = !DILocation(line: 60, column: 39, scope: !1771)
!1794 = !DILocation(line: 60, column: 8, scope: !1771)
!1795 = !DILocation(line: 61, column: 7, scope: !1796)
!1796 = distinct !DILexicalBlock(scope: !1771, file: !112, line: 61, column: 7)
!1797 = !DILocation(line: 61, column: 14, scope: !1796)
!1798 = !DILocation(line: 61, column: 12, scope: !1796)
!1799 = !DILocation(line: 61, column: 20, scope: !1796)
!1800 = !DILocation(line: 61, column: 25, scope: !1796)
!1801 = !DILocation(line: 61, column: 37, scope: !1796)
!1802 = !DILocation(line: 61, column: 42, scope: !1796)
!1803 = !DILocation(line: 61, column: 28, scope: !1796)
!1804 = !DILocation(line: 61, column: 61, scope: !1796)
!1805 = !DILocation(line: 61, column: 7, scope: !1771)
!1806 = !DILocation(line: 63, column: 15, scope: !1807)
!1807 = distinct !DILexicalBlock(scope: !1796, file: !112, line: 62, column: 5)
!1808 = !DILocation(line: 63, column: 13, scope: !1807)
!1809 = !DILocation(line: 64, column: 20, scope: !1810)
!1810 = distinct !DILexicalBlock(scope: !1807, file: !112, line: 64, column: 11)
!1811 = !DILocation(line: 64, column: 11, scope: !1810)
!1812 = !DILocation(line: 64, column: 36, scope: !1810)
!1813 = !DILocation(line: 64, column: 11, scope: !1807)
!1814 = !DILocation(line: 66, column: 19, scope: !1815)
!1815 = distinct !DILexicalBlock(scope: !1810, file: !112, line: 65, column: 9)
!1816 = !DILocation(line: 66, column: 24, scope: !1815)
!1817 = !DILocation(line: 66, column: 17, scope: !1815)
!1818 = !DILocation(line: 70, column: 52, scope: !1815)
!1819 = !DILocation(line: 70, column: 41, scope: !1815)
!1820 = !DILocation(line: 72, column: 9, scope: !1815)
!1821 = !DILocation(line: 73, column: 5, scope: !1807)
!1822 = !DILocation(line: 84, column: 18, scope: !1771)
!1823 = !DILocation(line: 84, column: 16, scope: !1771)
!1824 = !DILocation(line: 90, column: 38, scope: !1771)
!1825 = !DILocation(line: 90, column: 27, scope: !1771)
!1826 = !DILocation(line: 92, column: 1, scope: !1771)
!1827 = !DILocalVariable(name: "argv0", arg: 1, scope: !1828, file: !112, line: 39, type: !69)
!1828 = distinct !DISubprogram(name: "set_program_name", scope: !112, file: !112, line: 39, type: !343, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1829, retainedNodes: !4)
!1829 = distinct !DICompileUnit(language: DW_LANG_C99, file: !109, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !110, globals: !1830, nameTableKind: None)
!1830 = !{!1831}
!1831 = !DIGlobalVariableExpression(var: !1832, expr: !DIExpression())
!1832 = distinct !DIGlobalVariable(name: "program_name", scope: !1829, file: !112, line: 33, type: !69, isLocal: false, isDefinition: true)
!1833 = !DILocalVariable(name: "slash", scope: !1828, file: !112, line: 46, type: !69)
!1834 = !DILocalVariable(name: "base", scope: !1828, file: !112, line: 47, type: !69)
!1835 = distinct !DISubprogram(name: "set_char_quoting", scope: !139, file: !139, line: 152, type: !1836, scopeLine: 153, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !115, retainedNodes: !4)
!1836 = !DISubroutineType(types: !1837)
!1837 = !{!72, !1838, !7, !72}
!1838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !150, size: 64)
!1839 = !DILocalVariable(name: "o", arg: 1, scope: !1835, file: !139, line: 152, type: !1838)
!1840 = !DILocation(line: 152, column: 43, scope: !1835)
!1841 = !DILocalVariable(name: "c", arg: 2, scope: !1835, file: !139, line: 152, type: !7)
!1842 = !DILocation(line: 152, column: 51, scope: !1835)
!1843 = !DILocalVariable(name: "i", arg: 3, scope: !1835, file: !139, line: 152, type: !72)
!1844 = !DILocation(line: 152, column: 58, scope: !1835)
!1845 = !DILocalVariable(name: "uc", scope: !1835, file: !139, line: 154, type: !240)
!1846 = !DILocation(line: 154, column: 17, scope: !1835)
!1847 = !DILocation(line: 154, column: 22, scope: !1835)
!1848 = !DILocalVariable(name: "p", scope: !1835, file: !139, line: 155, type: !1849)
!1849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16, size: 64)
!1850 = !DILocation(line: 155, column: 17, scope: !1835)
!1851 = !DILocation(line: 156, column: 6, scope: !1835)
!1852 = !DILocation(line: 156, column: 10, scope: !1835)
!1853 = !DILocation(line: 156, column: 41, scope: !1835)
!1854 = !DILocation(line: 156, column: 5, scope: !1835)
!1855 = !DILocation(line: 156, column: 59, scope: !1835)
!1856 = !DILocation(line: 156, column: 62, scope: !1835)
!1857 = !DILocation(line: 156, column: 57, scope: !1835)
!1858 = !DILocalVariable(name: "shift", scope: !1835, file: !139, line: 157, type: !72)
!1859 = !DILocation(line: 157, column: 7, scope: !1835)
!1860 = !DILocation(line: 157, column: 15, scope: !1835)
!1861 = !DILocation(line: 157, column: 18, scope: !1835)
!1862 = !DILocalVariable(name: "r", scope: !1835, file: !139, line: 158, type: !72)
!1863 = !DILocation(line: 158, column: 7, scope: !1835)
!1864 = !DILocation(line: 158, column: 13, scope: !1835)
!1865 = !DILocation(line: 158, column: 12, scope: !1835)
!1866 = !DILocation(line: 158, column: 18, scope: !1835)
!1867 = !DILocation(line: 158, column: 15, scope: !1835)
!1868 = !DILocation(line: 158, column: 25, scope: !1835)
!1869 = !DILocation(line: 159, column: 11, scope: !1835)
!1870 = !DILocation(line: 159, column: 13, scope: !1835)
!1871 = !DILocation(line: 159, column: 20, scope: !1835)
!1872 = !DILocation(line: 159, column: 18, scope: !1835)
!1873 = !DILocation(line: 159, column: 26, scope: !1835)
!1874 = !DILocation(line: 159, column: 23, scope: !1835)
!1875 = !DILocation(line: 159, column: 4, scope: !1835)
!1876 = !DILocation(line: 159, column: 6, scope: !1835)
!1877 = !DILocation(line: 160, column: 10, scope: !1835)
!1878 = !DILocation(line: 160, column: 3, scope: !1835)
!1879 = !DILocalVariable(name: "o", arg: 1, scope: !1880, file: !139, line: 152, type: !1883)
!1880 = distinct !DISubprogram(name: "set_char_quoting", scope: !139, file: !139, line: 152, type: !1881, scopeLine: 153, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1891, retainedNodes: !4)
!1881 = !DISubroutineType(types: !1882)
!1882 = !{!72, !1883, !7, !72}
!1883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1884, size: 64)
!1884 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !139, line: 65, size: 448, elements: !1885)
!1885 = !{!1886, !1887, !1888, !1889, !1890}
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !1884, file: !139, line: 68, baseType: !118, size: 32)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1884, file: !139, line: 71, baseType: !72, size: 32, offset: 32)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !1884, file: !139, line: 75, baseType: !155, size: 256, offset: 64)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !1884, file: !139, line: 78, baseType: !69, size: 64, offset: 320)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !1884, file: !139, line: 81, baseType: !69, size: 64, offset: 384)
!1891 = distinct !DICompileUnit(language: DW_LANG_C99, file: !116, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !117, retainedTypes: !132, globals: !1892, nameTableKind: None)
!1892 = !{!1893, !1895, !1897, !1899, !1901, !1903, !1910, !1912}
!1893 = !DIGlobalVariableExpression(var: !1894, expr: !DIExpression())
!1894 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !1891, file: !139, line: 85, type: !140, isLocal: false, isDefinition: true)
!1895 = !DIGlobalVariableExpression(var: !1896, expr: !DIExpression())
!1896 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !1891, file: !139, line: 101, type: !146, isLocal: false, isDefinition: true)
!1897 = !DIGlobalVariableExpression(var: !1898, expr: !DIExpression())
!1898 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !1891, file: !139, line: 1052, type: !1884, isLocal: false, isDefinition: true)
!1899 = !DIGlobalVariableExpression(var: !1900, expr: !DIExpression())
!1900 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !1891, file: !139, line: 116, type: !1884, isLocal: true, isDefinition: true)
!1901 = !DIGlobalVariableExpression(var: !1902, expr: !DIExpression())
!1902 = distinct !DIGlobalVariable(name: "slot0", scope: !1891, file: !139, line: 842, type: !162, isLocal: true, isDefinition: true)
!1903 = !DIGlobalVariableExpression(var: !1904, expr: !DIExpression())
!1904 = distinct !DIGlobalVariable(name: "slotvec", scope: !1891, file: !139, line: 845, type: !1905, isLocal: true, isDefinition: true)
!1905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1906, size: 64)
!1906 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !139, line: 834, size: 128, elements: !1907)
!1907 = !{!1908, !1909}
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1906, file: !139, line: 836, baseType: !134, size: 64)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1906, file: !139, line: 837, baseType: !6, size: 64, offset: 64)
!1910 = !DIGlobalVariableExpression(var: !1911, expr: !DIExpression())
!1911 = distinct !DIGlobalVariable(name: "nslots", scope: !1891, file: !139, line: 843, type: !72, isLocal: true, isDefinition: true)
!1912 = !DIGlobalVariableExpression(var: !1913, expr: !DIExpression())
!1913 = distinct !DIGlobalVariable(name: "slotvec0", scope: !1891, file: !139, line: 844, type: !1906, isLocal: true, isDefinition: true)
!1914 = !DILocalVariable(name: "c", arg: 2, scope: !1880, file: !139, line: 152, type: !7)
!1915 = !DILocalVariable(name: "i", arg: 3, scope: !1880, file: !139, line: 152, type: !72)
!1916 = !DILocalVariable(name: "uc", scope: !1880, file: !139, line: 154, type: !240)
!1917 = !DILocalVariable(name: "p", scope: !1880, file: !139, line: 155, type: !1849)
!1918 = !DILocalVariable(name: "shift", scope: !1919, file: !139, line: 157, type: !72)
!1919 = distinct !DISubprogram(name: "set_char_quoting", scope: !139, file: !139, line: 152, type: !1920, scopeLine: 153, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1930, retainedNodes: !4)
!1920 = !DISubroutineType(types: !1921)
!1921 = !{!72, !1922, !7, !72}
!1922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1923, size: 64)
!1923 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !139, line: 65, size: 448, elements: !1924)
!1924 = !{!1925, !1926, !1927, !1928, !1929}
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !1923, file: !139, line: 68, baseType: !118, size: 32)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1923, file: !139, line: 71, baseType: !72, size: 32, offset: 32)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !1923, file: !139, line: 75, baseType: !155, size: 256, offset: 64)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !1923, file: !139, line: 78, baseType: !69, size: 64, offset: 320)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !1923, file: !139, line: 81, baseType: !69, size: 64, offset: 384)
!1930 = distinct !DICompileUnit(language: DW_LANG_C99, file: !116, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !117, retainedTypes: !132, globals: !1931, nameTableKind: None)
!1931 = !{!1932, !1934, !1936, !1938, !1940, !1942, !1949, !1951}
!1932 = !DIGlobalVariableExpression(var: !1933, expr: !DIExpression())
!1933 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !1930, file: !139, line: 85, type: !140, isLocal: false, isDefinition: true)
!1934 = !DIGlobalVariableExpression(var: !1935, expr: !DIExpression())
!1935 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !1930, file: !139, line: 101, type: !146, isLocal: false, isDefinition: true)
!1936 = !DIGlobalVariableExpression(var: !1937, expr: !DIExpression())
!1937 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !1930, file: !139, line: 1052, type: !1923, isLocal: false, isDefinition: true)
!1938 = !DIGlobalVariableExpression(var: !1939, expr: !DIExpression())
!1939 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !1930, file: !139, line: 116, type: !1923, isLocal: true, isDefinition: true)
!1940 = !DIGlobalVariableExpression(var: !1941, expr: !DIExpression())
!1941 = distinct !DIGlobalVariable(name: "slot0", scope: !1930, file: !139, line: 842, type: !162, isLocal: true, isDefinition: true)
!1942 = !DIGlobalVariableExpression(var: !1943, expr: !DIExpression())
!1943 = distinct !DIGlobalVariable(name: "slotvec", scope: !1930, file: !139, line: 845, type: !1944, isLocal: true, isDefinition: true)
!1944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1945, size: 64)
!1945 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !139, line: 834, size: 128, elements: !1946)
!1946 = !{!1947, !1948}
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1945, file: !139, line: 836, baseType: !134, size: 64)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1945, file: !139, line: 837, baseType: !6, size: 64, offset: 64)
!1949 = !DIGlobalVariableExpression(var: !1950, expr: !DIExpression())
!1950 = distinct !DIGlobalVariable(name: "nslots", scope: !1930, file: !139, line: 843, type: !72, isLocal: true, isDefinition: true)
!1951 = !DIGlobalVariableExpression(var: !1952, expr: !DIExpression())
!1952 = distinct !DIGlobalVariable(name: "slotvec0", scope: !1930, file: !139, line: 844, type: !1945, isLocal: true, isDefinition: true)
!1953 = !DILocalVariable(name: "r", scope: !1919, file: !139, line: 158, type: !72)
!1954 = distinct !DISubprogram(name: "quotearg_char_mem", scope: !139, file: !139, line: 982, type: !1955, scopeLine: 983, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !115, retainedNodes: !4)
!1955 = !DISubroutineType(types: !1956)
!1956 = !{!6, !69, !134, !7}
!1957 = !DILocalVariable(name: "arg", arg: 1, scope: !1954, file: !139, line: 982, type: !69)
!1958 = !DILocation(line: 982, column: 32, scope: !1954)
!1959 = !DILocalVariable(name: "argsize", arg: 2, scope: !1954, file: !139, line: 982, type: !134)
!1960 = !DILocation(line: 982, column: 44, scope: !1954)
!1961 = !DILocalVariable(name: "ch", arg: 3, scope: !1954, file: !139, line: 982, type: !7)
!1962 = !DILocation(line: 982, column: 58, scope: !1954)
!1963 = !DILocalVariable(name: "options", scope: !1954, file: !139, line: 984, type: !150)
!1964 = !DILocation(line: 984, column: 26, scope: !1954)
!1965 = !DILocation(line: 985, column: 13, scope: !1954)
!1966 = !DILocation(line: 986, column: 31, scope: !1954)
!1967 = !DILocation(line: 986, column: 3, scope: !1954)
!1968 = !DILocation(line: 987, column: 33, scope: !1954)
!1969 = !DILocation(line: 987, column: 38, scope: !1954)
!1970 = !DILocation(line: 987, column: 10, scope: !1954)
!1971 = !DILocation(line: 987, column: 3, scope: !1954)
!1972 = !DILocalVariable(name: "arg", arg: 1, scope: !1973, file: !139, line: 982, type: !69)
!1973 = distinct !DISubprogram(name: "quotearg_char_mem", scope: !139, file: !139, line: 982, type: !1955, scopeLine: 983, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1974, retainedNodes: !4)
!1974 = distinct !DICompileUnit(language: DW_LANG_C99, file: !116, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !117, retainedTypes: !132, globals: !1975, nameTableKind: None)
!1975 = !{!1976, !1978, !1980, !1989, !1991, !1993, !2000, !2002}
!1976 = !DIGlobalVariableExpression(var: !1977, expr: !DIExpression())
!1977 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !1974, file: !139, line: 85, type: !140, isLocal: false, isDefinition: true)
!1978 = !DIGlobalVariableExpression(var: !1979, expr: !DIExpression())
!1979 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !1974, file: !139, line: 101, type: !146, isLocal: false, isDefinition: true)
!1980 = !DIGlobalVariableExpression(var: !1981, expr: !DIExpression())
!1981 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !1974, file: !139, line: 1052, type: !1982, isLocal: false, isDefinition: true)
!1982 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !139, line: 65, size: 448, elements: !1983)
!1983 = !{!1984, !1985, !1986, !1987, !1988}
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !1982, file: !139, line: 68, baseType: !118, size: 32)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1982, file: !139, line: 71, baseType: !72, size: 32, offset: 32)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !1982, file: !139, line: 75, baseType: !155, size: 256, offset: 64)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !1982, file: !139, line: 78, baseType: !69, size: 64, offset: 320)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !1982, file: !139, line: 81, baseType: !69, size: 64, offset: 384)
!1989 = !DIGlobalVariableExpression(var: !1990, expr: !DIExpression())
!1990 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !1974, file: !139, line: 116, type: !1982, isLocal: true, isDefinition: true)
!1991 = !DIGlobalVariableExpression(var: !1992, expr: !DIExpression())
!1992 = distinct !DIGlobalVariable(name: "slot0", scope: !1974, file: !139, line: 842, type: !162, isLocal: true, isDefinition: true)
!1993 = !DIGlobalVariableExpression(var: !1994, expr: !DIExpression())
!1994 = distinct !DIGlobalVariable(name: "slotvec", scope: !1974, file: !139, line: 845, type: !1995, isLocal: true, isDefinition: true)
!1995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1996, size: 64)
!1996 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !139, line: 834, size: 128, elements: !1997)
!1997 = !{!1998, !1999}
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1996, file: !139, line: 836, baseType: !134, size: 64)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1996, file: !139, line: 837, baseType: !6, size: 64, offset: 64)
!2000 = !DIGlobalVariableExpression(var: !2001, expr: !DIExpression())
!2001 = distinct !DIGlobalVariable(name: "nslots", scope: !1974, file: !139, line: 843, type: !72, isLocal: true, isDefinition: true)
!2002 = !DIGlobalVariableExpression(var: !2003, expr: !DIExpression())
!2003 = distinct !DIGlobalVariable(name: "slotvec0", scope: !1974, file: !139, line: 844, type: !1996, isLocal: true, isDefinition: true)
!2004 = !DILocalVariable(name: "argsize", arg: 2, scope: !1973, file: !139, line: 982, type: !134)
!2005 = !DILocalVariable(name: "ch", arg: 3, scope: !1973, file: !139, line: 982, type: !7)
!2006 = !DILocalVariable(name: "options", scope: !1973, file: !139, line: 984, type: !1982)
!2007 = distinct !DISubprogram(name: "quotearg_n_options", scope: !139, file: !139, line: 877, type: !2008, scopeLine: 879, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !115, retainedNodes: !4)
!2008 = !DISubroutineType(types: !2009)
!2009 = !{!6, !72, !69, !134, !2010}
!2010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2011, size: 64)
!2011 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !150)
!2012 = !DILocalVariable(name: "n", arg: 1, scope: !2007, file: !139, line: 877, type: !72)
!2013 = !DILocation(line: 877, column: 25, scope: !2007)
!2014 = !DILocalVariable(name: "arg", arg: 2, scope: !2007, file: !139, line: 877, type: !69)
!2015 = !DILocation(line: 877, column: 40, scope: !2007)
!2016 = !DILocalVariable(name: "argsize", arg: 3, scope: !2007, file: !139, line: 877, type: !134)
!2017 = !DILocation(line: 877, column: 52, scope: !2007)
!2018 = !DILocalVariable(name: "options", arg: 4, scope: !2007, file: !139, line: 878, type: !2010)
!2019 = !DILocation(line: 878, column: 51, scope: !2007)
!2020 = !DILocalVariable(name: "e", scope: !2007, file: !139, line: 880, type: !72)
!2021 = !DILocation(line: 880, column: 7, scope: !2007)
!2022 = !DILocation(line: 880, column: 11, scope: !2007)
!2023 = !DILocalVariable(name: "sv", scope: !2007, file: !139, line: 882, type: !167)
!2024 = !DILocation(line: 882, column: 19, scope: !2007)
!2025 = !DILocation(line: 882, column: 24, scope: !2007)
!2026 = !DILocation(line: 884, column: 7, scope: !2027)
!2027 = distinct !DILexicalBlock(scope: !2007, file: !139, line: 884, column: 7)
!2028 = !DILocation(line: 884, column: 9, scope: !2027)
!2029 = !DILocation(line: 884, column: 7, scope: !2007)
!2030 = !DILocation(line: 885, column: 5, scope: !2027)
!2031 = !DILocation(line: 887, column: 7, scope: !2032)
!2032 = distinct !DILexicalBlock(scope: !2007, file: !139, line: 887, column: 7)
!2033 = !DILocation(line: 887, column: 17, scope: !2032)
!2034 = !DILocation(line: 887, column: 14, scope: !2032)
!2035 = !DILocation(line: 887, column: 7, scope: !2007)
!2036 = !DILocalVariable(name: "preallocated", scope: !2037, file: !139, line: 889, type: !27)
!2037 = distinct !DILexicalBlock(scope: !2032, file: !139, line: 888, column: 5)
!2038 = !DILocation(line: 889, column: 12, scope: !2037)
!2039 = !DILocation(line: 889, column: 28, scope: !2037)
!2040 = !DILocation(line: 889, column: 31, scope: !2037)
!2041 = !DILocalVariable(name: "nmax", scope: !2037, file: !139, line: 890, type: !72)
!2042 = !DILocation(line: 890, column: 11, scope: !2037)
!2043 = !DILocation(line: 892, column: 11, scope: !2044)
!2044 = distinct !DILexicalBlock(scope: !2037, file: !139, line: 892, column: 11)
!2045 = !DILocation(line: 892, column: 18, scope: !2044)
!2046 = !DILocation(line: 892, column: 16, scope: !2044)
!2047 = !DILocation(line: 892, column: 11, scope: !2037)
!2048 = !DILocation(line: 893, column: 9, scope: !2044)
!2049 = !DILocation(line: 895, column: 32, scope: !2037)
!2050 = !DILocation(line: 895, column: 54, scope: !2037)
!2051 = !DILocation(line: 895, column: 59, scope: !2037)
!2052 = !DILocation(line: 895, column: 61, scope: !2037)
!2053 = !DILocation(line: 895, column: 58, scope: !2037)
!2054 = !DILocation(line: 895, column: 66, scope: !2037)
!2055 = !DILocation(line: 895, column: 22, scope: !2037)
!2056 = !DILocation(line: 895, column: 20, scope: !2037)
!2057 = !DILocation(line: 895, column: 15, scope: !2037)
!2058 = !DILocation(line: 896, column: 11, scope: !2059)
!2059 = distinct !DILexicalBlock(scope: !2037, file: !139, line: 896, column: 11)
!2060 = !DILocation(line: 896, column: 11, scope: !2037)
!2061 = !DILocation(line: 897, column: 10, scope: !2059)
!2062 = !DILocation(line: 897, column: 15, scope: !2059)
!2063 = !DILocation(line: 897, column: 9, scope: !2059)
!2064 = !DILocation(line: 898, column: 15, scope: !2037)
!2065 = !DILocation(line: 898, column: 20, scope: !2037)
!2066 = !DILocation(line: 898, column: 18, scope: !2037)
!2067 = !DILocation(line: 898, column: 7, scope: !2037)
!2068 = !DILocation(line: 898, column: 32, scope: !2037)
!2069 = !DILocation(line: 898, column: 34, scope: !2037)
!2070 = !DILocation(line: 898, column: 40, scope: !2037)
!2071 = !DILocation(line: 898, column: 38, scope: !2037)
!2072 = !DILocation(line: 898, column: 31, scope: !2037)
!2073 = !DILocation(line: 898, column: 48, scope: !2037)
!2074 = !DILocation(line: 899, column: 16, scope: !2037)
!2075 = !DILocation(line: 899, column: 18, scope: !2037)
!2076 = !DILocation(line: 899, column: 14, scope: !2037)
!2077 = !DILocation(line: 900, column: 5, scope: !2037)
!2078 = !DILocalVariable(name: "size", scope: !2079, file: !139, line: 903, type: !134)
!2079 = distinct !DILexicalBlock(scope: !2007, file: !139, line: 902, column: 3)
!2080 = !DILocation(line: 903, column: 12, scope: !2079)
!2081 = !DILocation(line: 903, column: 19, scope: !2079)
!2082 = !DILocation(line: 903, column: 22, scope: !2079)
!2083 = !DILocation(line: 903, column: 25, scope: !2079)
!2084 = !DILocalVariable(name: "val", scope: !2079, file: !139, line: 904, type: !6)
!2085 = !DILocation(line: 904, column: 11, scope: !2079)
!2086 = !DILocation(line: 904, column: 17, scope: !2079)
!2087 = !DILocation(line: 904, column: 20, scope: !2079)
!2088 = !DILocation(line: 904, column: 23, scope: !2079)
!2089 = !DILocalVariable(name: "flags", scope: !2079, file: !139, line: 906, type: !72)
!2090 = !DILocation(line: 906, column: 9, scope: !2079)
!2091 = !DILocation(line: 906, column: 17, scope: !2079)
!2092 = !DILocation(line: 906, column: 26, scope: !2079)
!2093 = !DILocation(line: 906, column: 32, scope: !2079)
!2094 = !DILocalVariable(name: "qsize", scope: !2079, file: !139, line: 907, type: !134)
!2095 = !DILocation(line: 907, column: 12, scope: !2079)
!2096 = !DILocation(line: 907, column: 46, scope: !2079)
!2097 = !DILocation(line: 907, column: 51, scope: !2079)
!2098 = !DILocation(line: 907, column: 57, scope: !2079)
!2099 = !DILocation(line: 907, column: 62, scope: !2079)
!2100 = !DILocation(line: 908, column: 46, scope: !2079)
!2101 = !DILocation(line: 908, column: 55, scope: !2079)
!2102 = !DILocation(line: 908, column: 62, scope: !2079)
!2103 = !DILocation(line: 909, column: 46, scope: !2079)
!2104 = !DILocation(line: 909, column: 55, scope: !2079)
!2105 = !DILocation(line: 910, column: 46, scope: !2079)
!2106 = !DILocation(line: 910, column: 55, scope: !2079)
!2107 = !DILocation(line: 911, column: 46, scope: !2079)
!2108 = !DILocation(line: 911, column: 55, scope: !2079)
!2109 = !DILocation(line: 907, column: 20, scope: !2079)
!2110 = !DILocation(line: 913, column: 9, scope: !2111)
!2111 = distinct !DILexicalBlock(scope: !2079, file: !139, line: 913, column: 9)
!2112 = !DILocation(line: 913, column: 17, scope: !2111)
!2113 = !DILocation(line: 913, column: 14, scope: !2111)
!2114 = !DILocation(line: 913, column: 9, scope: !2079)
!2115 = !DILocation(line: 915, column: 29, scope: !2116)
!2116 = distinct !DILexicalBlock(scope: !2111, file: !139, line: 914, column: 7)
!2117 = !DILocation(line: 915, column: 35, scope: !2116)
!2118 = !DILocation(line: 915, column: 27, scope: !2116)
!2119 = !DILocation(line: 915, column: 9, scope: !2116)
!2120 = !DILocation(line: 915, column: 12, scope: !2116)
!2121 = !DILocation(line: 915, column: 15, scope: !2116)
!2122 = !DILocation(line: 915, column: 20, scope: !2116)
!2123 = !DILocation(line: 916, column: 13, scope: !2124)
!2124 = distinct !DILexicalBlock(scope: !2116, file: !139, line: 916, column: 13)
!2125 = !DILocation(line: 916, column: 17, scope: !2124)
!2126 = !DILocation(line: 916, column: 13, scope: !2116)
!2127 = !DILocation(line: 917, column: 17, scope: !2124)
!2128 = !DILocation(line: 917, column: 11, scope: !2124)
!2129 = !DILocation(line: 918, column: 39, scope: !2116)
!2130 = !DILocation(line: 918, column: 27, scope: !2116)
!2131 = !DILocation(line: 918, column: 25, scope: !2116)
!2132 = !DILocation(line: 918, column: 9, scope: !2116)
!2133 = !DILocation(line: 918, column: 12, scope: !2116)
!2134 = !DILocation(line: 918, column: 15, scope: !2116)
!2135 = !DILocation(line: 918, column: 19, scope: !2116)
!2136 = !DILocation(line: 919, column: 35, scope: !2116)
!2137 = !DILocation(line: 919, column: 40, scope: !2116)
!2138 = !DILocation(line: 919, column: 46, scope: !2116)
!2139 = !DILocation(line: 919, column: 51, scope: !2116)
!2140 = !DILocation(line: 919, column: 60, scope: !2116)
!2141 = !DILocation(line: 919, column: 69, scope: !2116)
!2142 = !DILocation(line: 920, column: 35, scope: !2116)
!2143 = !DILocation(line: 920, column: 42, scope: !2116)
!2144 = !DILocation(line: 920, column: 51, scope: !2116)
!2145 = !DILocation(line: 921, column: 35, scope: !2116)
!2146 = !DILocation(line: 921, column: 44, scope: !2116)
!2147 = !DILocation(line: 922, column: 35, scope: !2116)
!2148 = !DILocation(line: 922, column: 44, scope: !2116)
!2149 = !DILocation(line: 919, column: 9, scope: !2116)
!2150 = !DILocation(line: 923, column: 7, scope: !2116)
!2151 = !DILocation(line: 925, column: 13, scope: !2079)
!2152 = !DILocation(line: 925, column: 5, scope: !2079)
!2153 = !DILocation(line: 925, column: 11, scope: !2079)
!2154 = !DILocation(line: 926, column: 12, scope: !2079)
!2155 = !DILocation(line: 926, column: 5, scope: !2079)
!2156 = !DILocalVariable(name: "n", arg: 1, scope: !2157, file: !139, line: 877, type: !72)
!2157 = distinct !DISubprogram(name: "quotearg_n_options", scope: !139, file: !139, line: 877, type: !2158, scopeLine: 879, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2169, retainedNodes: !4)
!2158 = !DISubroutineType(types: !2159)
!2159 = !{!6, !72, !69, !134, !2160}
!2160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2161, size: 64)
!2161 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2162)
!2162 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !139, line: 65, size: 448, elements: !2163)
!2163 = !{!2164, !2165, !2166, !2167, !2168}
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !2162, file: !139, line: 68, baseType: !118, size: 32)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2162, file: !139, line: 71, baseType: !72, size: 32, offset: 32)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !2162, file: !139, line: 75, baseType: !155, size: 256, offset: 64)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !2162, file: !139, line: 78, baseType: !69, size: 64, offset: 320)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !2162, file: !139, line: 81, baseType: !69, size: 64, offset: 384)
!2169 = distinct !DICompileUnit(language: DW_LANG_C99, file: !116, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !117, retainedTypes: !132, globals: !2170, nameTableKind: None)
!2170 = !{!2171, !2173, !2175, !2177, !2179, !2181, !2188, !2190}
!2171 = !DIGlobalVariableExpression(var: !2172, expr: !DIExpression())
!2172 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !2169, file: !139, line: 85, type: !140, isLocal: false, isDefinition: true)
!2173 = !DIGlobalVariableExpression(var: !2174, expr: !DIExpression())
!2174 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !2169, file: !139, line: 101, type: !146, isLocal: false, isDefinition: true)
!2175 = !DIGlobalVariableExpression(var: !2176, expr: !DIExpression())
!2176 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !2169, file: !139, line: 1052, type: !2162, isLocal: false, isDefinition: true)
!2177 = !DIGlobalVariableExpression(var: !2178, expr: !DIExpression())
!2178 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !2169, file: !139, line: 116, type: !2162, isLocal: true, isDefinition: true)
!2179 = !DIGlobalVariableExpression(var: !2180, expr: !DIExpression())
!2180 = distinct !DIGlobalVariable(name: "slot0", scope: !2169, file: !139, line: 842, type: !162, isLocal: true, isDefinition: true)
!2181 = !DIGlobalVariableExpression(var: !2182, expr: !DIExpression())
!2182 = distinct !DIGlobalVariable(name: "slotvec", scope: !2169, file: !139, line: 845, type: !2183, isLocal: true, isDefinition: true)
!2183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2184, size: 64)
!2184 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !139, line: 834, size: 128, elements: !2185)
!2185 = !{!2186, !2187}
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2184, file: !139, line: 836, baseType: !134, size: 64)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2184, file: !139, line: 837, baseType: !6, size: 64, offset: 64)
!2188 = !DIGlobalVariableExpression(var: !2189, expr: !DIExpression())
!2189 = distinct !DIGlobalVariable(name: "nslots", scope: !2169, file: !139, line: 843, type: !72, isLocal: true, isDefinition: true)
!2190 = !DIGlobalVariableExpression(var: !2191, expr: !DIExpression())
!2191 = distinct !DIGlobalVariable(name: "slotvec0", scope: !2169, file: !139, line: 844, type: !2184, isLocal: true, isDefinition: true)
!2192 = !DILocalVariable(name: "arg", arg: 2, scope: !2157, file: !139, line: 877, type: !69)
!2193 = !DILocalVariable(name: "argsize", arg: 3, scope: !2157, file: !139, line: 877, type: !134)
!2194 = !DILocalVariable(name: "options", arg: 4, scope: !2157, file: !139, line: 878, type: !2160)
!2195 = !DILocalVariable(name: "e", scope: !2157, file: !139, line: 880, type: !72)
!2196 = !DILocalVariable(name: "sv", scope: !2157, file: !139, line: 882, type: !2183)
!2197 = !DILocalVariable(name: "nmax", scope: !2198, file: !139, line: 890, type: !72)
!2198 = distinct !DILexicalBlock(scope: !2199, file: !139, line: 888, column: 5)
!2199 = distinct !DILexicalBlock(scope: !2200, file: !139, line: 887, column: 7)
!2200 = distinct !DISubprogram(name: "quotearg_n_options", scope: !139, file: !139, line: 877, type: !2201, scopeLine: 879, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2212, retainedNodes: !4)
!2201 = !DISubroutineType(types: !2202)
!2202 = !{!6, !72, !69, !134, !2203}
!2203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2204, size: 64)
!2204 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2205)
!2205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !139, line: 65, size: 448, elements: !2206)
!2206 = !{!2207, !2208, !2209, !2210, !2211}
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !2205, file: !139, line: 68, baseType: !118, size: 32)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2205, file: !139, line: 71, baseType: !72, size: 32, offset: 32)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !2205, file: !139, line: 75, baseType: !155, size: 256, offset: 64)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !2205, file: !139, line: 78, baseType: !69, size: 64, offset: 320)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !2205, file: !139, line: 81, baseType: !69, size: 64, offset: 384)
!2212 = distinct !DICompileUnit(language: DW_LANG_C99, file: !116, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !117, retainedTypes: !132, globals: !2213, nameTableKind: None)
!2213 = !{!2214, !2216, !2218, !2220, !2222, !2224, !2231, !2233}
!2214 = !DIGlobalVariableExpression(var: !2215, expr: !DIExpression())
!2215 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !2212, file: !139, line: 85, type: !140, isLocal: false, isDefinition: true)
!2216 = !DIGlobalVariableExpression(var: !2217, expr: !DIExpression())
!2217 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !2212, file: !139, line: 101, type: !146, isLocal: false, isDefinition: true)
!2218 = !DIGlobalVariableExpression(var: !2219, expr: !DIExpression())
!2219 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !2212, file: !139, line: 1052, type: !2205, isLocal: false, isDefinition: true)
!2220 = !DIGlobalVariableExpression(var: !2221, expr: !DIExpression())
!2221 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !2212, file: !139, line: 116, type: !2205, isLocal: true, isDefinition: true)
!2222 = !DIGlobalVariableExpression(var: !2223, expr: !DIExpression())
!2223 = distinct !DIGlobalVariable(name: "slot0", scope: !2212, file: !139, line: 842, type: !162, isLocal: true, isDefinition: true)
!2224 = !DIGlobalVariableExpression(var: !2225, expr: !DIExpression())
!2225 = distinct !DIGlobalVariable(name: "slotvec", scope: !2212, file: !139, line: 845, type: !2226, isLocal: true, isDefinition: true)
!2226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2227, size: 64)
!2227 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !139, line: 834, size: 128, elements: !2228)
!2228 = !{!2229, !2230}
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2227, file: !139, line: 836, baseType: !134, size: 64)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2227, file: !139, line: 837, baseType: !6, size: 64, offset: 64)
!2231 = !DIGlobalVariableExpression(var: !2232, expr: !DIExpression())
!2232 = distinct !DIGlobalVariable(name: "nslots", scope: !2212, file: !139, line: 843, type: !72, isLocal: true, isDefinition: true)
!2233 = !DIGlobalVariableExpression(var: !2234, expr: !DIExpression())
!2234 = distinct !DIGlobalVariable(name: "slotvec0", scope: !2212, file: !139, line: 844, type: !2227, isLocal: true, isDefinition: true)
!2235 = !DILocalVariable(name: "val", scope: !2236, file: !139, line: 904, type: !6)
!2236 = distinct !DILexicalBlock(scope: !2237, file: !139, line: 902, column: 3)
!2237 = distinct !DISubprogram(name: "quotearg_n_options", scope: !139, file: !139, line: 877, type: !2238, scopeLine: 879, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2249, retainedNodes: !4)
!2238 = !DISubroutineType(types: !2239)
!2239 = !{!6, !72, !69, !134, !2240}
!2240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2241, size: 64)
!2241 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2242)
!2242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !139, line: 65, size: 448, elements: !2243)
!2243 = !{!2244, !2245, !2246, !2247, !2248}
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !2242, file: !139, line: 68, baseType: !118, size: 32)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2242, file: !139, line: 71, baseType: !72, size: 32, offset: 32)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !2242, file: !139, line: 75, baseType: !155, size: 256, offset: 64)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !2242, file: !139, line: 78, baseType: !69, size: 64, offset: 320)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !2242, file: !139, line: 81, baseType: !69, size: 64, offset: 384)
!2249 = distinct !DICompileUnit(language: DW_LANG_C99, file: !116, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !117, retainedTypes: !132, globals: !2250, nameTableKind: None)
!2250 = !{!2251, !2253, !2255, !2257, !2259, !2261, !2268, !2270}
!2251 = !DIGlobalVariableExpression(var: !2252, expr: !DIExpression())
!2252 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !2249, file: !139, line: 85, type: !140, isLocal: false, isDefinition: true)
!2253 = !DIGlobalVariableExpression(var: !2254, expr: !DIExpression())
!2254 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !2249, file: !139, line: 101, type: !146, isLocal: false, isDefinition: true)
!2255 = !DIGlobalVariableExpression(var: !2256, expr: !DIExpression())
!2256 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !2249, file: !139, line: 1052, type: !2242, isLocal: false, isDefinition: true)
!2257 = !DIGlobalVariableExpression(var: !2258, expr: !DIExpression())
!2258 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !2249, file: !139, line: 116, type: !2242, isLocal: true, isDefinition: true)
!2259 = !DIGlobalVariableExpression(var: !2260, expr: !DIExpression())
!2260 = distinct !DIGlobalVariable(name: "slot0", scope: !2249, file: !139, line: 842, type: !162, isLocal: true, isDefinition: true)
!2261 = !DIGlobalVariableExpression(var: !2262, expr: !DIExpression())
!2262 = distinct !DIGlobalVariable(name: "slotvec", scope: !2249, file: !139, line: 845, type: !2263, isLocal: true, isDefinition: true)
!2263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2264, size: 64)
!2264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !139, line: 834, size: 128, elements: !2265)
!2265 = !{!2266, !2267}
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2264, file: !139, line: 836, baseType: !134, size: 64)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2264, file: !139, line: 837, baseType: !6, size: 64, offset: 64)
!2268 = !DIGlobalVariableExpression(var: !2269, expr: !DIExpression())
!2269 = distinct !DIGlobalVariable(name: "nslots", scope: !2249, file: !139, line: 843, type: !72, isLocal: true, isDefinition: true)
!2270 = !DIGlobalVariableExpression(var: !2271, expr: !DIExpression())
!2271 = distinct !DIGlobalVariable(name: "slotvec0", scope: !2249, file: !139, line: 844, type: !2264, isLocal: true, isDefinition: true)
!2272 = !DILocalVariable(name: "flags", scope: !2236, file: !139, line: 906, type: !72)
!2273 = !DILocalVariable(name: "qsize", scope: !2236, file: !139, line: 907, type: !134)
!2274 = distinct !DISubprogram(name: "quotearg_buffer_restyled", scope: !139, file: !139, line: 256, type: !2275, scopeLine: 262, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !115, retainedNodes: !4)
!2275 = !DISubroutineType(types: !2276)
!2276 = !{!134, !6, !134, !69, !134, !118, !72, !2277, !69, !69}
!2277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2278, size: 64)
!2278 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !16)
!2279 = !DILocalVariable(name: "buffer", arg: 1, scope: !2274, file: !139, line: 256, type: !6)
!2280 = !DILocation(line: 256, column: 33, scope: !2274)
!2281 = !DILocalVariable(name: "buffersize", arg: 2, scope: !2274, file: !139, line: 256, type: !134)
!2282 = !DILocation(line: 256, column: 48, scope: !2274)
!2283 = !DILocalVariable(name: "arg", arg: 3, scope: !2274, file: !139, line: 257, type: !69)
!2284 = !DILocation(line: 257, column: 39, scope: !2274)
!2285 = !DILocalVariable(name: "argsize", arg: 4, scope: !2274, file: !139, line: 257, type: !134)
!2286 = !DILocation(line: 257, column: 51, scope: !2274)
!2287 = !DILocalVariable(name: "quoting_style", arg: 5, scope: !2274, file: !139, line: 258, type: !118)
!2288 = !DILocation(line: 258, column: 46, scope: !2274)
!2289 = !DILocalVariable(name: "flags", arg: 6, scope: !2274, file: !139, line: 258, type: !72)
!2290 = !DILocation(line: 258, column: 65, scope: !2274)
!2291 = !DILocalVariable(name: "quote_these_too", arg: 7, scope: !2274, file: !139, line: 259, type: !2277)
!2292 = !DILocation(line: 259, column: 47, scope: !2274)
!2293 = !DILocalVariable(name: "left_quote", arg: 8, scope: !2274, file: !139, line: 260, type: !69)
!2294 = !DILocation(line: 260, column: 39, scope: !2274)
!2295 = !DILocalVariable(name: "right_quote", arg: 9, scope: !2274, file: !139, line: 261, type: !69)
!2296 = !DILocation(line: 261, column: 39, scope: !2274)
!2297 = !DILocalVariable(name: "i", scope: !2274, file: !139, line: 263, type: !134)
!2298 = !DILocation(line: 263, column: 10, scope: !2274)
!2299 = !DILocalVariable(name: "len", scope: !2274, file: !139, line: 264, type: !134)
!2300 = !DILocation(line: 264, column: 10, scope: !2274)
!2301 = !DILocalVariable(name: "orig_buffersize", scope: !2274, file: !139, line: 265, type: !134)
!2302 = !DILocation(line: 265, column: 10, scope: !2274)
!2303 = !DILocalVariable(name: "quote_string", scope: !2274, file: !139, line: 266, type: !69)
!2304 = !DILocation(line: 266, column: 15, scope: !2274)
!2305 = !DILocalVariable(name: "quote_string_len", scope: !2274, file: !139, line: 267, type: !134)
!2306 = !DILocation(line: 267, column: 10, scope: !2274)
!2307 = !DILocalVariable(name: "backslash_escapes", scope: !2274, file: !139, line: 268, type: !27)
!2308 = !DILocation(line: 268, column: 8, scope: !2274)
!2309 = !DILocalVariable(name: "unibyte_locale", scope: !2274, file: !139, line: 269, type: !27)
!2310 = !DILocation(line: 269, column: 8, scope: !2274)
!2311 = !DILocation(line: 269, column: 25, scope: !2274)
!2312 = !DILocation(line: 269, column: 36, scope: !2274)
!2313 = !DILocalVariable(name: "elide_outer_quotes", scope: !2274, file: !139, line: 270, type: !27)
!2314 = !DILocation(line: 270, column: 8, scope: !2274)
!2315 = !DILocation(line: 270, column: 30, scope: !2274)
!2316 = !DILocation(line: 270, column: 36, scope: !2274)
!2317 = !DILocation(line: 270, column: 61, scope: !2274)
!2318 = !DILocalVariable(name: "pending_shell_escape_end", scope: !2274, file: !139, line: 271, type: !27)
!2319 = !DILocation(line: 271, column: 8, scope: !2274)
!2320 = !DILocalVariable(name: "encountered_single_quote", scope: !2274, file: !139, line: 272, type: !27)
!2321 = !DILocation(line: 272, column: 8, scope: !2274)
!2322 = !DILocalVariable(name: "all_c_and_shell_quote_compat", scope: !2274, file: !139, line: 273, type: !27)
!2323 = !DILocation(line: 273, column: 8, scope: !2274)
!2324 = !DILocation(line: 273, column: 3, scope: !2274)
!2325 = !DILabel(scope: !2274, name: "process_input", file: !139, line: 314)
!2326 = !DILocation(line: 314, column: 2, scope: !2274)
!2327 = !DILocation(line: 316, column: 11, scope: !2274)
!2328 = !DILocation(line: 316, column: 3, scope: !2274)
!2329 = !DILocation(line: 319, column: 21, scope: !2330)
!2330 = distinct !DILexicalBlock(scope: !2274, file: !139, line: 317, column: 5)
!2331 = !DILocation(line: 320, column: 26, scope: !2330)
!2332 = !DILocation(line: 321, column: 7, scope: !2330)
!2333 = !DILocation(line: 323, column: 12, scope: !2334)
!2334 = distinct !DILexicalBlock(scope: !2330, file: !139, line: 323, column: 11)
!2335 = !DILocation(line: 323, column: 11, scope: !2330)
!2336 = !DILocation(line: 324, column: 9, scope: !2334)
!2337 = !DILocation(line: 324, column: 9, scope: !2338)
!2338 = distinct !DILexicalBlock(scope: !2339, file: !139, line: 324, column: 9)
!2339 = distinct !DILexicalBlock(scope: !2334, file: !139, line: 324, column: 9)
!2340 = !DILocation(line: 324, column: 9, scope: !2339)
!2341 = !DILocation(line: 325, column: 25, scope: !2330)
!2342 = !DILocation(line: 326, column: 20, scope: !2330)
!2343 = !DILocation(line: 327, column: 24, scope: !2330)
!2344 = !DILocation(line: 328, column: 7, scope: !2330)
!2345 = !DILocation(line: 331, column: 25, scope: !2330)
!2346 = !DILocation(line: 332, column: 26, scope: !2330)
!2347 = !DILocation(line: 333, column: 7, scope: !2330)
!2348 = !DILocation(line: 339, column: 13, scope: !2349)
!2349 = distinct !DILexicalBlock(scope: !2350, file: !139, line: 339, column: 13)
!2350 = distinct !DILexicalBlock(scope: !2330, file: !139, line: 338, column: 7)
!2351 = !DILocation(line: 339, column: 27, scope: !2349)
!2352 = !DILocation(line: 339, column: 13, scope: !2350)
!2353 = !DILocation(line: 362, column: 50, scope: !2354)
!2354 = distinct !DILexicalBlock(scope: !2349, file: !139, line: 340, column: 11)
!2355 = !DILocation(line: 362, column: 26, scope: !2354)
!2356 = !DILocation(line: 362, column: 24, scope: !2354)
!2357 = !DILocation(line: 363, column: 51, scope: !2354)
!2358 = !DILocation(line: 363, column: 27, scope: !2354)
!2359 = !DILocation(line: 363, column: 25, scope: !2354)
!2360 = !DILocation(line: 364, column: 11, scope: !2354)
!2361 = !DILocation(line: 365, column: 14, scope: !2362)
!2362 = distinct !DILexicalBlock(scope: !2350, file: !139, line: 365, column: 13)
!2363 = !DILocation(line: 365, column: 13, scope: !2350)
!2364 = !DILocation(line: 366, column: 31, scope: !2365)
!2365 = distinct !DILexicalBlock(scope: !2362, file: !139, line: 366, column: 11)
!2366 = !DILocation(line: 366, column: 29, scope: !2365)
!2367 = !DILocation(line: 366, column: 16, scope: !2365)
!2368 = !DILocation(line: 366, column: 44, scope: !2369)
!2369 = distinct !DILexicalBlock(scope: !2365, file: !139, line: 366, column: 11)
!2370 = !DILocation(line: 366, column: 43, scope: !2369)
!2371 = !DILocation(line: 366, column: 11, scope: !2365)
!2372 = !DILocation(line: 367, column: 13, scope: !2369)
!2373 = !DILocation(line: 367, column: 13, scope: !2374)
!2374 = distinct !DILexicalBlock(scope: !2375, file: !139, line: 367, column: 13)
!2375 = distinct !DILexicalBlock(scope: !2369, file: !139, line: 367, column: 13)
!2376 = !DILocation(line: 367, column: 13, scope: !2375)
!2377 = !DILocation(line: 366, column: 70, scope: !2369)
!2378 = !DILocation(line: 366, column: 11, scope: !2369)
!2379 = distinct !{!2379, !2371, !2380}
!2380 = !DILocation(line: 367, column: 13, scope: !2365)
!2381 = !DILocation(line: 368, column: 27, scope: !2350)
!2382 = !DILocation(line: 369, column: 24, scope: !2350)
!2383 = !DILocation(line: 369, column: 22, scope: !2350)
!2384 = !DILocation(line: 370, column: 36, scope: !2350)
!2385 = !DILocation(line: 370, column: 28, scope: !2350)
!2386 = !DILocation(line: 370, column: 26, scope: !2350)
!2387 = !DILocation(line: 372, column: 7, scope: !2330)
!2388 = !DILocation(line: 375, column: 25, scope: !2330)
!2389 = !DILocation(line: 376, column: 7, scope: !2330)
!2390 = !DILocation(line: 378, column: 26, scope: !2330)
!2391 = !DILocation(line: 379, column: 7, scope: !2330)
!2392 = !DILocation(line: 381, column: 12, scope: !2393)
!2393 = distinct !DILexicalBlock(scope: !2330, file: !139, line: 381, column: 11)
!2394 = !DILocation(line: 381, column: 11, scope: !2330)
!2395 = !DILocation(line: 382, column: 27, scope: !2393)
!2396 = !DILocation(line: 382, column: 9, scope: !2393)
!2397 = !DILocation(line: 383, column: 7, scope: !2330)
!2398 = !DILocation(line: 385, column: 21, scope: !2330)
!2399 = !DILocation(line: 386, column: 12, scope: !2400)
!2400 = distinct !DILexicalBlock(scope: !2330, file: !139, line: 386, column: 11)
!2401 = !DILocation(line: 386, column: 11, scope: !2330)
!2402 = !DILocation(line: 387, column: 9, scope: !2400)
!2403 = !DILocation(line: 387, column: 9, scope: !2404)
!2404 = distinct !DILexicalBlock(scope: !2405, file: !139, line: 387, column: 9)
!2405 = distinct !DILexicalBlock(scope: !2400, file: !139, line: 387, column: 9)
!2406 = !DILocation(line: 387, column: 9, scope: !2405)
!2407 = !DILocation(line: 388, column: 20, scope: !2330)
!2408 = !DILocation(line: 389, column: 24, scope: !2330)
!2409 = !DILocation(line: 390, column: 7, scope: !2330)
!2410 = !DILocation(line: 393, column: 26, scope: !2330)
!2411 = !DILocation(line: 394, column: 7, scope: !2330)
!2412 = !DILocation(line: 397, column: 7, scope: !2330)
!2413 = !DILocation(line: 400, column: 10, scope: !2414)
!2414 = distinct !DILexicalBlock(scope: !2274, file: !139, line: 400, column: 3)
!2415 = !DILocation(line: 400, column: 8, scope: !2414)
!2416 = !DILocation(line: 400, column: 19, scope: !2417)
!2417 = distinct !DILexicalBlock(scope: !2414, file: !139, line: 400, column: 3)
!2418 = !DILocation(line: 400, column: 27, scope: !2417)
!2419 = !DILocation(line: 400, column: 41, scope: !2417)
!2420 = !DILocation(line: 400, column: 45, scope: !2417)
!2421 = !DILocation(line: 400, column: 48, scope: !2417)
!2422 = !DILocation(line: 400, column: 58, scope: !2417)
!2423 = !DILocation(line: 400, column: 63, scope: !2417)
!2424 = !DILocation(line: 400, column: 60, scope: !2417)
!2425 = !DILocation(line: 400, column: 16, scope: !2417)
!2426 = !DILocation(line: 400, column: 3, scope: !2414)
!2427 = !DILocalVariable(name: "c", scope: !2428, file: !139, line: 402, type: !240)
!2428 = distinct !DILexicalBlock(scope: !2417, file: !139, line: 401, column: 5)
!2429 = !DILocation(line: 402, column: 21, scope: !2428)
!2430 = !DILocalVariable(name: "esc", scope: !2428, file: !139, line: 403, type: !240)
!2431 = !DILocation(line: 403, column: 21, scope: !2428)
!2432 = !DILocalVariable(name: "is_right_quote", scope: !2428, file: !139, line: 404, type: !27)
!2433 = !DILocation(line: 404, column: 12, scope: !2428)
!2434 = !DILocalVariable(name: "escaping", scope: !2428, file: !139, line: 405, type: !27)
!2435 = !DILocation(line: 405, column: 12, scope: !2428)
!2436 = !DILocalVariable(name: "c_and_shell_quote_compat", scope: !2428, file: !139, line: 406, type: !27)
!2437 = !DILocation(line: 406, column: 12, scope: !2428)
!2438 = !DILocation(line: 408, column: 11, scope: !2439)
!2439 = distinct !DILexicalBlock(scope: !2428, file: !139, line: 408, column: 11)
!2440 = !DILocation(line: 409, column: 11, scope: !2439)
!2441 = !DILocation(line: 409, column: 14, scope: !2439)
!2442 = !DILocation(line: 409, column: 28, scope: !2439)
!2443 = !DILocation(line: 410, column: 11, scope: !2439)
!2444 = !DILocation(line: 410, column: 14, scope: !2439)
!2445 = !DILocation(line: 411, column: 11, scope: !2439)
!2446 = !DILocation(line: 411, column: 15, scope: !2439)
!2447 = !DILocation(line: 411, column: 19, scope: !2439)
!2448 = !DILocation(line: 411, column: 17, scope: !2439)
!2449 = !DILocation(line: 412, column: 19, scope: !2439)
!2450 = !DILocation(line: 412, column: 27, scope: !2439)
!2451 = !DILocation(line: 412, column: 39, scope: !2439)
!2452 = !DILocation(line: 412, column: 46, scope: !2439)
!2453 = !DILocation(line: 412, column: 44, scope: !2439)
!2454 = !DILocation(line: 416, column: 40, scope: !2439)
!2455 = !DILocation(line: 416, column: 32, scope: !2439)
!2456 = !DILocation(line: 416, column: 30, scope: !2439)
!2457 = !DILocation(line: 416, column: 48, scope: !2439)
!2458 = !DILocation(line: 412, column: 15, scope: !2439)
!2459 = !DILocation(line: 417, column: 11, scope: !2439)
!2460 = !DILocation(line: 417, column: 22, scope: !2439)
!2461 = !DILocation(line: 417, column: 28, scope: !2439)
!2462 = !DILocation(line: 417, column: 26, scope: !2439)
!2463 = !DILocation(line: 417, column: 31, scope: !2439)
!2464 = !DILocation(line: 417, column: 45, scope: !2439)
!2465 = !DILocation(line: 417, column: 14, scope: !2439)
!2466 = !DILocation(line: 417, column: 63, scope: !2439)
!2467 = !DILocation(line: 408, column: 11, scope: !2428)
!2468 = !DILocation(line: 419, column: 15, scope: !2469)
!2469 = distinct !DILexicalBlock(scope: !2470, file: !139, line: 419, column: 15)
!2470 = distinct !DILexicalBlock(scope: !2439, file: !139, line: 418, column: 9)
!2471 = !DILocation(line: 419, column: 15, scope: !2470)
!2472 = !DILocation(line: 420, column: 13, scope: !2469)
!2473 = !DILocation(line: 421, column: 26, scope: !2470)
!2474 = !DILocation(line: 422, column: 9, scope: !2470)
!2475 = !DILocation(line: 424, column: 11, scope: !2428)
!2476 = !DILocation(line: 424, column: 15, scope: !2428)
!2477 = !DILocation(line: 424, column: 9, scope: !2428)
!2478 = !DILocation(line: 425, column: 15, scope: !2428)
!2479 = !DILocation(line: 425, column: 7, scope: !2428)
!2480 = !DILocation(line: 428, column: 15, scope: !2481)
!2481 = distinct !DILexicalBlock(scope: !2482, file: !139, line: 428, column: 15)
!2482 = distinct !DILexicalBlock(scope: !2428, file: !139, line: 426, column: 9)
!2483 = !DILocation(line: 428, column: 15, scope: !2482)
!2484 = !DILocation(line: 430, column: 15, scope: !2485)
!2485 = distinct !DILexicalBlock(scope: !2481, file: !139, line: 429, column: 13)
!2486 = !DILocation(line: 430, column: 15, scope: !2487)
!2487 = distinct !DILexicalBlock(scope: !2488, file: !139, line: 430, column: 15)
!2488 = distinct !DILexicalBlock(scope: !2485, file: !139, line: 430, column: 15)
!2489 = !DILocation(line: 430, column: 15, scope: !2488)
!2490 = !DILocation(line: 430, column: 15, scope: !2491)
!2491 = distinct !DILexicalBlock(scope: !2488, file: !139, line: 430, column: 15)
!2492 = !DILocation(line: 430, column: 15, scope: !2493)
!2493 = distinct !DILexicalBlock(scope: !2491, file: !139, line: 430, column: 15)
!2494 = !DILocation(line: 430, column: 15, scope: !2495)
!2495 = distinct !DILexicalBlock(scope: !2496, file: !139, line: 430, column: 15)
!2496 = distinct !DILexicalBlock(scope: !2493, file: !139, line: 430, column: 15)
!2497 = !DILocation(line: 430, column: 15, scope: !2496)
!2498 = !DILocation(line: 430, column: 15, scope: !2499)
!2499 = distinct !DILexicalBlock(scope: !2500, file: !139, line: 430, column: 15)
!2500 = distinct !DILexicalBlock(scope: !2493, file: !139, line: 430, column: 15)
!2501 = !DILocation(line: 430, column: 15, scope: !2500)
!2502 = !DILocation(line: 430, column: 15, scope: !2503)
!2503 = distinct !DILexicalBlock(scope: !2504, file: !139, line: 430, column: 15)
!2504 = distinct !DILexicalBlock(scope: !2493, file: !139, line: 430, column: 15)
!2505 = !DILocation(line: 430, column: 15, scope: !2504)
!2506 = !DILocation(line: 430, column: 15, scope: !2507)
!2507 = distinct !DILexicalBlock(scope: !2508, file: !139, line: 430, column: 15)
!2508 = distinct !DILexicalBlock(scope: !2488, file: !139, line: 430, column: 15)
!2509 = !DILocation(line: 430, column: 15, scope: !2508)
!2510 = !DILocation(line: 437, column: 19, scope: !2511)
!2511 = distinct !DILexicalBlock(scope: !2485, file: !139, line: 437, column: 19)
!2512 = !DILocation(line: 437, column: 33, scope: !2511)
!2513 = !DILocation(line: 438, column: 19, scope: !2511)
!2514 = !DILocation(line: 438, column: 22, scope: !2511)
!2515 = !DILocation(line: 438, column: 24, scope: !2511)
!2516 = !DILocation(line: 438, column: 30, scope: !2511)
!2517 = !DILocation(line: 438, column: 28, scope: !2511)
!2518 = !DILocation(line: 438, column: 38, scope: !2511)
!2519 = !DILocation(line: 438, column: 48, scope: !2511)
!2520 = !DILocation(line: 438, column: 52, scope: !2511)
!2521 = !DILocation(line: 438, column: 54, scope: !2511)
!2522 = !DILocation(line: 438, column: 45, scope: !2511)
!2523 = !DILocation(line: 438, column: 59, scope: !2511)
!2524 = !DILocation(line: 438, column: 62, scope: !2511)
!2525 = !DILocation(line: 438, column: 66, scope: !2511)
!2526 = !DILocation(line: 438, column: 68, scope: !2511)
!2527 = !DILocation(line: 438, column: 73, scope: !2511)
!2528 = !DILocation(line: 437, column: 19, scope: !2485)
!2529 = !DILocation(line: 440, column: 19, scope: !2530)
!2530 = distinct !DILexicalBlock(scope: !2511, file: !139, line: 439, column: 17)
!2531 = !DILocation(line: 440, column: 19, scope: !2532)
!2532 = distinct !DILexicalBlock(scope: !2533, file: !139, line: 440, column: 19)
!2533 = distinct !DILexicalBlock(scope: !2530, file: !139, line: 440, column: 19)
!2534 = !DILocation(line: 440, column: 19, scope: !2533)
!2535 = !DILocation(line: 441, column: 19, scope: !2530)
!2536 = !DILocation(line: 441, column: 19, scope: !2537)
!2537 = distinct !DILexicalBlock(scope: !2538, file: !139, line: 441, column: 19)
!2538 = distinct !DILexicalBlock(scope: !2530, file: !139, line: 441, column: 19)
!2539 = !DILocation(line: 441, column: 19, scope: !2538)
!2540 = !DILocation(line: 442, column: 17, scope: !2530)
!2541 = !DILocation(line: 443, column: 17, scope: !2485)
!2542 = !DILocation(line: 448, column: 13, scope: !2485)
!2543 = !DILocation(line: 449, column: 20, scope: !2544)
!2544 = distinct !DILexicalBlock(scope: !2481, file: !139, line: 449, column: 20)
!2545 = !DILocation(line: 449, column: 26, scope: !2544)
!2546 = !DILocation(line: 449, column: 20, scope: !2481)
!2547 = !DILocation(line: 450, column: 13, scope: !2544)
!2548 = !DILocation(line: 451, column: 11, scope: !2482)
!2549 = !DILocation(line: 454, column: 19, scope: !2482)
!2550 = !DILocation(line: 454, column: 11, scope: !2482)
!2551 = !DILocation(line: 457, column: 19, scope: !2552)
!2552 = distinct !DILexicalBlock(scope: !2553, file: !139, line: 457, column: 19)
!2553 = distinct !DILexicalBlock(scope: !2482, file: !139, line: 455, column: 13)
!2554 = !DILocation(line: 457, column: 19, scope: !2553)
!2555 = !DILocation(line: 458, column: 17, scope: !2552)
!2556 = !DILocation(line: 459, column: 15, scope: !2553)
!2557 = !DILocation(line: 462, column: 20, scope: !2558)
!2558 = distinct !DILexicalBlock(scope: !2553, file: !139, line: 462, column: 19)
!2559 = !DILocation(line: 462, column: 26, scope: !2558)
!2560 = !DILocation(line: 463, column: 19, scope: !2558)
!2561 = !DILocation(line: 463, column: 22, scope: !2558)
!2562 = !DILocation(line: 463, column: 24, scope: !2558)
!2563 = !DILocation(line: 463, column: 30, scope: !2558)
!2564 = !DILocation(line: 463, column: 28, scope: !2558)
!2565 = !DILocation(line: 463, column: 38, scope: !2558)
!2566 = !DILocation(line: 463, column: 41, scope: !2558)
!2567 = !DILocation(line: 463, column: 45, scope: !2558)
!2568 = !DILocation(line: 463, column: 47, scope: !2558)
!2569 = !DILocation(line: 463, column: 52, scope: !2558)
!2570 = !DILocation(line: 462, column: 19, scope: !2553)
!2571 = !DILocation(line: 464, column: 25, scope: !2558)
!2572 = !DILocation(line: 464, column: 29, scope: !2558)
!2573 = !DILocation(line: 464, column: 31, scope: !2558)
!2574 = !DILocation(line: 464, column: 17, scope: !2558)
!2575 = !DILocation(line: 471, column: 25, scope: !2576)
!2576 = distinct !DILexicalBlock(scope: !2577, file: !139, line: 471, column: 25)
!2577 = distinct !DILexicalBlock(scope: !2558, file: !139, line: 465, column: 19)
!2578 = !DILocation(line: 471, column: 25, scope: !2577)
!2579 = !DILocation(line: 472, column: 23, scope: !2576)
!2580 = !DILocation(line: 473, column: 25, scope: !2577)
!2581 = !DILocation(line: 473, column: 29, scope: !2577)
!2582 = !DILocation(line: 473, column: 31, scope: !2577)
!2583 = !DILocation(line: 473, column: 23, scope: !2577)
!2584 = !DILocation(line: 474, column: 23, scope: !2577)
!2585 = !DILocation(line: 475, column: 21, scope: !2577)
!2586 = !DILocation(line: 475, column: 21, scope: !2587)
!2587 = distinct !DILexicalBlock(scope: !2588, file: !139, line: 475, column: 21)
!2588 = distinct !DILexicalBlock(scope: !2577, file: !139, line: 475, column: 21)
!2589 = !DILocation(line: 475, column: 21, scope: !2588)
!2590 = !DILocation(line: 476, column: 21, scope: !2577)
!2591 = !DILocation(line: 476, column: 21, scope: !2592)
!2592 = distinct !DILexicalBlock(scope: !2593, file: !139, line: 476, column: 21)
!2593 = distinct !DILexicalBlock(scope: !2577, file: !139, line: 476, column: 21)
!2594 = !DILocation(line: 476, column: 21, scope: !2593)
!2595 = !DILocation(line: 477, column: 21, scope: !2577)
!2596 = !DILocation(line: 477, column: 21, scope: !2597)
!2597 = distinct !DILexicalBlock(scope: !2598, file: !139, line: 477, column: 21)
!2598 = distinct !DILexicalBlock(scope: !2577, file: !139, line: 477, column: 21)
!2599 = !DILocation(line: 477, column: 21, scope: !2598)
!2600 = !DILocation(line: 478, column: 21, scope: !2577)
!2601 = !DILocation(line: 478, column: 21, scope: !2602)
!2602 = distinct !DILexicalBlock(scope: !2603, file: !139, line: 478, column: 21)
!2603 = distinct !DILexicalBlock(scope: !2577, file: !139, line: 478, column: 21)
!2604 = !DILocation(line: 478, column: 21, scope: !2603)
!2605 = !DILocation(line: 479, column: 21, scope: !2577)
!2606 = !DILocation(line: 482, column: 21, scope: !2577)
!2607 = !DILocation(line: 483, column: 19, scope: !2577)
!2608 = !DILocation(line: 484, column: 15, scope: !2553)
!2609 = !DILocation(line: 487, column: 15, scope: !2553)
!2610 = !DILocation(line: 489, column: 11, scope: !2482)
!2611 = !DILocation(line: 491, column: 24, scope: !2482)
!2612 = !DILocation(line: 491, column: 31, scope: !2482)
!2613 = !DILocation(line: 492, column: 24, scope: !2482)
!2614 = !DILocation(line: 492, column: 31, scope: !2482)
!2615 = !DILocation(line: 493, column: 24, scope: !2482)
!2616 = !DILocation(line: 493, column: 31, scope: !2482)
!2617 = !DILocation(line: 494, column: 24, scope: !2482)
!2618 = !DILocation(line: 494, column: 31, scope: !2482)
!2619 = !DILocation(line: 495, column: 24, scope: !2482)
!2620 = !DILocation(line: 495, column: 31, scope: !2482)
!2621 = !DILocation(line: 496, column: 24, scope: !2482)
!2622 = !DILocation(line: 496, column: 31, scope: !2482)
!2623 = !DILocation(line: 497, column: 24, scope: !2482)
!2624 = !DILocation(line: 497, column: 31, scope: !2482)
!2625 = !DILocation(line: 498, column: 26, scope: !2482)
!2626 = !DILocation(line: 498, column: 24, scope: !2482)
!2627 = !DILocation(line: 500, column: 15, scope: !2628)
!2628 = distinct !DILexicalBlock(scope: !2482, file: !139, line: 500, column: 15)
!2629 = !DILocation(line: 500, column: 29, scope: !2628)
!2630 = !DILocation(line: 500, column: 15, scope: !2482)
!2631 = !DILocation(line: 502, column: 19, scope: !2632)
!2632 = distinct !DILexicalBlock(scope: !2633, file: !139, line: 502, column: 19)
!2633 = distinct !DILexicalBlock(scope: !2628, file: !139, line: 501, column: 13)
!2634 = !DILocation(line: 502, column: 19, scope: !2633)
!2635 = !DILocation(line: 503, column: 17, scope: !2632)
!2636 = !DILocation(line: 504, column: 15, scope: !2633)
!2637 = !DILocation(line: 509, column: 15, scope: !2638)
!2638 = distinct !DILexicalBlock(scope: !2482, file: !139, line: 509, column: 15)
!2639 = !DILocation(line: 509, column: 33, scope: !2638)
!2640 = !DILocation(line: 509, column: 36, scope: !2638)
!2641 = !DILocation(line: 509, column: 55, scope: !2638)
!2642 = !DILocation(line: 509, column: 58, scope: !2638)
!2643 = !DILocation(line: 509, column: 15, scope: !2482)
!2644 = !DILocation(line: 510, column: 13, scope: !2638)
!2645 = !DILabel(scope: !2482, name: "c_and_shell_escape", file: !139, line: 512)
!2646 = !DILocation(line: 512, column: 9, scope: !2482)
!2647 = !DILocation(line: 513, column: 15, scope: !2648)
!2648 = distinct !DILexicalBlock(scope: !2482, file: !139, line: 513, column: 15)
!2649 = !DILocation(line: 513, column: 29, scope: !2648)
!2650 = !DILocation(line: 514, column: 15, scope: !2648)
!2651 = !DILocation(line: 514, column: 18, scope: !2648)
!2652 = !DILocation(line: 513, column: 15, scope: !2482)
!2653 = !DILocation(line: 515, column: 13, scope: !2648)
!2654 = !DILabel(scope: !2482, name: "c_escape", file: !139, line: 517)
!2655 = !DILocation(line: 517, column: 9, scope: !2482)
!2656 = !DILocation(line: 518, column: 15, scope: !2657)
!2657 = distinct !DILexicalBlock(scope: !2482, file: !139, line: 518, column: 15)
!2658 = !DILocation(line: 518, column: 15, scope: !2482)
!2659 = !DILocation(line: 520, column: 19, scope: !2660)
!2660 = distinct !DILexicalBlock(scope: !2657, file: !139, line: 519, column: 13)
!2661 = !DILocation(line: 520, column: 17, scope: !2660)
!2662 = !DILocation(line: 521, column: 15, scope: !2660)
!2663 = !DILocation(line: 523, column: 11, scope: !2482)
!2664 = !DILocation(line: 526, column: 18, scope: !2665)
!2665 = distinct !DILexicalBlock(scope: !2482, file: !139, line: 526, column: 15)
!2666 = !DILocation(line: 526, column: 26, scope: !2665)
!2667 = !DILocation(line: 526, column: 15, scope: !2482)
!2668 = !DILocation(line: 526, column: 40, scope: !2665)
!2669 = !DILocation(line: 526, column: 47, scope: !2665)
!2670 = !DILocation(line: 526, column: 57, scope: !2665)
!2671 = !DILocation(line: 526, column: 65, scope: !2665)
!2672 = !DILocation(line: 527, column: 13, scope: !2665)
!2673 = !DILocation(line: 528, column: 11, scope: !2482)
!2674 = !DILocation(line: 530, column: 15, scope: !2675)
!2675 = distinct !DILexicalBlock(scope: !2482, file: !139, line: 530, column: 15)
!2676 = !DILocation(line: 530, column: 17, scope: !2675)
!2677 = !DILocation(line: 530, column: 15, scope: !2482)
!2678 = !DILocation(line: 531, column: 13, scope: !2675)
!2679 = !DILocation(line: 532, column: 11, scope: !2482)
!2680 = !DILocation(line: 534, column: 36, scope: !2482)
!2681 = !DILocation(line: 535, column: 11, scope: !2482)
!2682 = !DILocation(line: 548, column: 15, scope: !2683)
!2683 = distinct !DILexicalBlock(scope: !2482, file: !139, line: 548, column: 15)
!2684 = !DILocation(line: 548, column: 29, scope: !2683)
!2685 = !DILocation(line: 549, column: 15, scope: !2683)
!2686 = !DILocation(line: 549, column: 18, scope: !2683)
!2687 = !DILocation(line: 548, column: 15, scope: !2482)
!2688 = !DILocation(line: 550, column: 13, scope: !2683)
!2689 = !DILocation(line: 551, column: 11, scope: !2482)
!2690 = !DILocation(line: 554, column: 36, scope: !2482)
!2691 = !DILocation(line: 555, column: 36, scope: !2482)
!2692 = !DILocation(line: 556, column: 15, scope: !2693)
!2693 = distinct !DILexicalBlock(scope: !2482, file: !139, line: 556, column: 15)
!2694 = !DILocation(line: 556, column: 29, scope: !2693)
!2695 = !DILocation(line: 556, column: 15, scope: !2482)
!2696 = !DILocation(line: 558, column: 19, scope: !2697)
!2697 = distinct !DILexicalBlock(scope: !2698, file: !139, line: 558, column: 19)
!2698 = distinct !DILexicalBlock(scope: !2693, file: !139, line: 557, column: 13)
!2699 = !DILocation(line: 558, column: 19, scope: !2698)
!2700 = !DILocation(line: 559, column: 17, scope: !2697)
!2701 = !DILocation(line: 561, column: 19, scope: !2702)
!2702 = distinct !DILexicalBlock(scope: !2698, file: !139, line: 561, column: 19)
!2703 = !DILocation(line: 561, column: 30, scope: !2702)
!2704 = !DILocation(line: 561, column: 35, scope: !2702)
!2705 = !DILocation(line: 561, column: 19, scope: !2698)
!2706 = !DILocation(line: 566, column: 37, scope: !2707)
!2707 = distinct !DILexicalBlock(scope: !2702, file: !139, line: 562, column: 17)
!2708 = !DILocation(line: 566, column: 35, scope: !2707)
!2709 = !DILocation(line: 567, column: 30, scope: !2707)
!2710 = !DILocation(line: 568, column: 17, scope: !2707)
!2711 = !DILocation(line: 570, column: 15, scope: !2698)
!2712 = !DILocation(line: 570, column: 15, scope: !2713)
!2713 = distinct !DILexicalBlock(scope: !2714, file: !139, line: 570, column: 15)
!2714 = distinct !DILexicalBlock(scope: !2698, file: !139, line: 570, column: 15)
!2715 = !DILocation(line: 570, column: 15, scope: !2714)
!2716 = !DILocation(line: 571, column: 15, scope: !2698)
!2717 = !DILocation(line: 571, column: 15, scope: !2718)
!2718 = distinct !DILexicalBlock(scope: !2719, file: !139, line: 571, column: 15)
!2719 = distinct !DILexicalBlock(scope: !2698, file: !139, line: 571, column: 15)
!2720 = !DILocation(line: 571, column: 15, scope: !2719)
!2721 = !DILocation(line: 572, column: 15, scope: !2698)
!2722 = !DILocation(line: 572, column: 15, scope: !2723)
!2723 = distinct !DILexicalBlock(scope: !2724, file: !139, line: 572, column: 15)
!2724 = distinct !DILexicalBlock(scope: !2698, file: !139, line: 572, column: 15)
!2725 = !DILocation(line: 572, column: 15, scope: !2724)
!2726 = !DILocation(line: 573, column: 40, scope: !2698)
!2727 = !DILocation(line: 574, column: 13, scope: !2698)
!2728 = !DILocation(line: 575, column: 11, scope: !2482)
!2729 = !DILocation(line: 599, column: 36, scope: !2482)
!2730 = !DILocation(line: 600, column: 11, scope: !2482)
!2731 = !DILocalVariable(name: "m", scope: !2732, file: !139, line: 610, type: !134)
!2732 = distinct !DILexicalBlock(scope: !2482, file: !139, line: 608, column: 11)
!2733 = !DILocation(line: 610, column: 20, scope: !2732)
!2734 = !DILocalVariable(name: "printable", scope: !2732, file: !139, line: 612, type: !27)
!2735 = !DILocation(line: 612, column: 18, scope: !2732)
!2736 = !DILocation(line: 614, column: 17, scope: !2737)
!2737 = distinct !DILexicalBlock(scope: !2732, file: !139, line: 614, column: 17)
!2738 = !DILocation(line: 614, column: 17, scope: !2732)
!2739 = !DILocation(line: 616, column: 19, scope: !2740)
!2740 = distinct !DILexicalBlock(scope: !2737, file: !139, line: 615, column: 15)
!2741 = !DILocation(line: 617, column: 29, scope: !2740)
!2742 = !DILocation(line: 617, column: 41, scope: !2740)
!2743 = !DILocation(line: 617, column: 27, scope: !2740)
!2744 = !DILocation(line: 618, column: 15, scope: !2740)
!2745 = !DILocalVariable(name: "mbstate", scope: !2746, file: !139, line: 621, type: !2747)
!2746 = distinct !DILexicalBlock(scope: !2737, file: !139, line: 620, column: 15)
!2747 = !DIDerivedType(tag: DW_TAG_typedef, name: "mbstate_t", file: !2748, line: 6, baseType: !2749)
!2748 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/mbstate_t.h", directory: "")
!2749 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mbstate_t", file: !2750, line: 21, baseType: !2751)
!2750 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h", directory: "")
!2751 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2750, line: 13, size: 64, elements: !2752)
!2752 = !{!2753, !2754}
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !2751, file: !2750, line: 15, baseType: !72, size: 32)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !2751, file: !2750, line: 20, baseType: !2755, size: 32, offset: 32)
!2755 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2751, file: !2750, line: 16, size: 32, elements: !2756)
!2756 = !{!2757, !2758}
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !2755, file: !2750, line: 18, baseType: !16, size: 32)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !2755, file: !2750, line: 19, baseType: !2759, size: 32)
!2759 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 32, elements: !2760)
!2760 = !{!2761}
!2761 = !DISubrange(count: 4)
!2762 = !DILocation(line: 621, column: 27, scope: !2746)
!2763 = !DILocation(line: 622, column: 17, scope: !2746)
!2764 = !DILocation(line: 624, column: 19, scope: !2746)
!2765 = !DILocation(line: 625, column: 27, scope: !2746)
!2766 = !DILocation(line: 626, column: 21, scope: !2767)
!2767 = distinct !DILexicalBlock(scope: !2746, file: !139, line: 626, column: 21)
!2768 = !DILocation(line: 626, column: 29, scope: !2767)
!2769 = !DILocation(line: 626, column: 21, scope: !2746)
!2770 = !DILocation(line: 627, column: 37, scope: !2767)
!2771 = !DILocation(line: 627, column: 29, scope: !2767)
!2772 = !DILocation(line: 627, column: 27, scope: !2767)
!2773 = !DILocation(line: 627, column: 19, scope: !2767)
!2774 = !DILocation(line: 629, column: 17, scope: !2746)
!2775 = !DILocalVariable(name: "w", scope: !2776, file: !139, line: 631, type: !2777)
!2776 = distinct !DILexicalBlock(scope: !2746, file: !139, line: 630, column: 19)
!2777 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !135, line: 74, baseType: !72)
!2778 = !DILocation(line: 631, column: 29, scope: !2776)
!2779 = !DILocalVariable(name: "bytes", scope: !2776, file: !139, line: 632, type: !134)
!2780 = !DILocation(line: 632, column: 28, scope: !2776)
!2781 = !DILocation(line: 632, column: 50, scope: !2776)
!2782 = !DILocation(line: 632, column: 54, scope: !2776)
!2783 = !DILocation(line: 632, column: 58, scope: !2776)
!2784 = !DILocation(line: 632, column: 56, scope: !2776)
!2785 = !DILocation(line: 633, column: 45, scope: !2776)
!2786 = !DILocation(line: 633, column: 56, scope: !2776)
!2787 = !DILocation(line: 633, column: 60, scope: !2776)
!2788 = !DILocation(line: 633, column: 58, scope: !2776)
!2789 = !DILocation(line: 633, column: 53, scope: !2776)
!2790 = !DILocation(line: 632, column: 36, scope: !2776)
!2791 = !DILocation(line: 634, column: 25, scope: !2792)
!2792 = distinct !DILexicalBlock(scope: !2776, file: !139, line: 634, column: 25)
!2793 = !DILocation(line: 634, column: 31, scope: !2792)
!2794 = !DILocation(line: 634, column: 25, scope: !2776)
!2795 = !DILocation(line: 635, column: 23, scope: !2792)
!2796 = !DILocation(line: 636, column: 30, scope: !2797)
!2797 = distinct !DILexicalBlock(scope: !2792, file: !139, line: 636, column: 30)
!2798 = !DILocation(line: 636, column: 36, scope: !2797)
!2799 = !DILocation(line: 636, column: 30, scope: !2792)
!2800 = !DILocation(line: 638, column: 35, scope: !2801)
!2801 = distinct !DILexicalBlock(scope: !2797, file: !139, line: 637, column: 23)
!2802 = !DILocation(line: 639, column: 25, scope: !2801)
!2803 = !DILocation(line: 641, column: 30, scope: !2804)
!2804 = distinct !DILexicalBlock(scope: !2797, file: !139, line: 641, column: 30)
!2805 = !DILocation(line: 641, column: 36, scope: !2804)
!2806 = !DILocation(line: 641, column: 30, scope: !2797)
!2807 = !DILocation(line: 643, column: 35, scope: !2808)
!2808 = distinct !DILexicalBlock(scope: !2804, file: !139, line: 642, column: 23)
!2809 = !DILocation(line: 644, column: 25, scope: !2808)
!2810 = !DILocation(line: 644, column: 32, scope: !2808)
!2811 = !DILocation(line: 644, column: 36, scope: !2808)
!2812 = !DILocation(line: 644, column: 34, scope: !2808)
!2813 = !DILocation(line: 644, column: 40, scope: !2808)
!2814 = !DILocation(line: 644, column: 38, scope: !2808)
!2815 = !DILocation(line: 644, column: 48, scope: !2808)
!2816 = !DILocation(line: 644, column: 51, scope: !2808)
!2817 = !DILocation(line: 644, column: 55, scope: !2808)
!2818 = !DILocation(line: 644, column: 59, scope: !2808)
!2819 = !DILocation(line: 644, column: 57, scope: !2808)
!2820 = !DILocation(line: 0, scope: !2808)
!2821 = !DILocation(line: 645, column: 28, scope: !2808)
!2822 = distinct !{!2822, !2809, !2821}
!2823 = !DILocation(line: 646, column: 25, scope: !2808)
!2824 = !DILocation(line: 654, column: 44, scope: !2825)
!2825 = distinct !DILexicalBlock(scope: !2826, file: !139, line: 654, column: 29)
!2826 = distinct !DILexicalBlock(scope: !2804, file: !139, line: 649, column: 23)
!2827 = !DILocation(line: 655, column: 29, scope: !2825)
!2828 = !DILocation(line: 655, column: 32, scope: !2825)
!2829 = !DILocation(line: 655, column: 46, scope: !2825)
!2830 = !DILocation(line: 654, column: 29, scope: !2826)
!2831 = !DILocalVariable(name: "j", scope: !2832, file: !139, line: 657, type: !134)
!2832 = distinct !DILexicalBlock(scope: !2825, file: !139, line: 656, column: 27)
!2833 = !DILocation(line: 657, column: 36, scope: !2832)
!2834 = !DILocation(line: 658, column: 36, scope: !2835)
!2835 = distinct !DILexicalBlock(scope: !2832, file: !139, line: 658, column: 29)
!2836 = !DILocation(line: 658, column: 34, scope: !2835)
!2837 = !DILocation(line: 658, column: 41, scope: !2838)
!2838 = distinct !DILexicalBlock(scope: !2835, file: !139, line: 658, column: 29)
!2839 = !DILocation(line: 658, column: 45, scope: !2838)
!2840 = !DILocation(line: 658, column: 43, scope: !2838)
!2841 = !DILocation(line: 658, column: 29, scope: !2835)
!2842 = !DILocation(line: 659, column: 39, scope: !2838)
!2843 = !DILocation(line: 659, column: 43, scope: !2838)
!2844 = !DILocation(line: 659, column: 47, scope: !2838)
!2845 = !DILocation(line: 659, column: 45, scope: !2838)
!2846 = !DILocation(line: 659, column: 51, scope: !2838)
!2847 = !DILocation(line: 659, column: 49, scope: !2838)
!2848 = !DILocation(line: 659, column: 31, scope: !2838)
!2849 = !DILocation(line: 663, column: 35, scope: !2850)
!2850 = distinct !DILexicalBlock(scope: !2838, file: !139, line: 660, column: 33)
!2851 = !DILocation(line: 666, column: 35, scope: !2850)
!2852 = !DILocation(line: 667, column: 33, scope: !2850)
!2853 = !DILocation(line: 658, column: 53, scope: !2838)
!2854 = !DILocation(line: 658, column: 29, scope: !2838)
!2855 = distinct !{!2855, !2841, !2856}
!2856 = !DILocation(line: 667, column: 33, scope: !2835)
!2857 = !DILocation(line: 668, column: 27, scope: !2832)
!2858 = !DILocation(line: 670, column: 41, scope: !2859)
!2859 = distinct !DILexicalBlock(scope: !2826, file: !139, line: 670, column: 29)
!2860 = !DILocation(line: 670, column: 31, scope: !2859)
!2861 = !DILocation(line: 670, column: 29, scope: !2826)
!2862 = !DILocation(line: 671, column: 37, scope: !2859)
!2863 = !DILocation(line: 671, column: 27, scope: !2859)
!2864 = !DILocation(line: 672, column: 30, scope: !2826)
!2865 = !DILocation(line: 672, column: 27, scope: !2826)
!2866 = !DILocation(line: 674, column: 19, scope: !2776)
!2867 = !DILocation(line: 675, column: 26, scope: !2746)
!2868 = !DILocation(line: 675, column: 24, scope: !2746)
!2869 = distinct !{!2869, !2774, !2870}
!2870 = !DILocation(line: 675, column: 44, scope: !2746)
!2871 = !DILocation(line: 678, column: 40, scope: !2732)
!2872 = !DILocation(line: 678, column: 38, scope: !2732)
!2873 = !DILocation(line: 680, column: 21, scope: !2874)
!2874 = distinct !DILexicalBlock(scope: !2732, file: !139, line: 680, column: 17)
!2875 = !DILocation(line: 680, column: 19, scope: !2874)
!2876 = !DILocation(line: 680, column: 23, scope: !2874)
!2877 = !DILocation(line: 680, column: 27, scope: !2874)
!2878 = !DILocation(line: 680, column: 45, scope: !2874)
!2879 = !DILocation(line: 680, column: 50, scope: !2874)
!2880 = !DILocation(line: 680, column: 17, scope: !2732)
!2881 = !DILocalVariable(name: "ilim", scope: !2882, file: !139, line: 684, type: !134)
!2882 = distinct !DILexicalBlock(scope: !2874, file: !139, line: 681, column: 15)
!2883 = !DILocation(line: 684, column: 24, scope: !2882)
!2884 = !DILocation(line: 684, column: 31, scope: !2882)
!2885 = !DILocation(line: 684, column: 35, scope: !2882)
!2886 = !DILocation(line: 684, column: 33, scope: !2882)
!2887 = !DILocation(line: 686, column: 17, scope: !2882)
!2888 = !DILocation(line: 688, column: 25, scope: !2889)
!2889 = distinct !DILexicalBlock(scope: !2890, file: !139, line: 688, column: 25)
!2890 = distinct !DILexicalBlock(scope: !2891, file: !139, line: 687, column: 19)
!2891 = distinct !DILexicalBlock(scope: !2892, file: !139, line: 686, column: 17)
!2892 = distinct !DILexicalBlock(scope: !2882, file: !139, line: 686, column: 17)
!2893 = !DILocation(line: 688, column: 43, scope: !2889)
!2894 = !DILocation(line: 688, column: 48, scope: !2889)
!2895 = !DILocation(line: 688, column: 25, scope: !2890)
!2896 = !DILocation(line: 690, column: 25, scope: !2897)
!2897 = distinct !DILexicalBlock(scope: !2889, file: !139, line: 689, column: 23)
!2898 = !DILocation(line: 690, column: 25, scope: !2899)
!2899 = distinct !DILexicalBlock(scope: !2900, file: !139, line: 690, column: 25)
!2900 = distinct !DILexicalBlock(scope: !2897, file: !139, line: 690, column: 25)
!2901 = !DILocation(line: 690, column: 25, scope: !2900)
!2902 = !DILocation(line: 690, column: 25, scope: !2903)
!2903 = distinct !DILexicalBlock(scope: !2900, file: !139, line: 690, column: 25)
!2904 = !DILocation(line: 690, column: 25, scope: !2905)
!2905 = distinct !DILexicalBlock(scope: !2903, file: !139, line: 690, column: 25)
!2906 = !DILocation(line: 690, column: 25, scope: !2907)
!2907 = distinct !DILexicalBlock(scope: !2908, file: !139, line: 690, column: 25)
!2908 = distinct !DILexicalBlock(scope: !2905, file: !139, line: 690, column: 25)
!2909 = !DILocation(line: 690, column: 25, scope: !2908)
!2910 = !DILocation(line: 690, column: 25, scope: !2911)
!2911 = distinct !DILexicalBlock(scope: !2912, file: !139, line: 690, column: 25)
!2912 = distinct !DILexicalBlock(scope: !2905, file: !139, line: 690, column: 25)
!2913 = !DILocation(line: 690, column: 25, scope: !2912)
!2914 = !DILocation(line: 690, column: 25, scope: !2915)
!2915 = distinct !DILexicalBlock(scope: !2916, file: !139, line: 690, column: 25)
!2916 = distinct !DILexicalBlock(scope: !2905, file: !139, line: 690, column: 25)
!2917 = !DILocation(line: 690, column: 25, scope: !2916)
!2918 = !DILocation(line: 690, column: 25, scope: !2919)
!2919 = distinct !DILexicalBlock(scope: !2920, file: !139, line: 690, column: 25)
!2920 = distinct !DILexicalBlock(scope: !2900, file: !139, line: 690, column: 25)
!2921 = !DILocation(line: 690, column: 25, scope: !2920)
!2922 = !DILocation(line: 691, column: 25, scope: !2897)
!2923 = !DILocation(line: 691, column: 25, scope: !2924)
!2924 = distinct !DILexicalBlock(scope: !2925, file: !139, line: 691, column: 25)
!2925 = distinct !DILexicalBlock(scope: !2897, file: !139, line: 691, column: 25)
!2926 = !DILocation(line: 691, column: 25, scope: !2925)
!2927 = !DILocation(line: 692, column: 25, scope: !2897)
!2928 = !DILocation(line: 692, column: 25, scope: !2929)
!2929 = distinct !DILexicalBlock(scope: !2930, file: !139, line: 692, column: 25)
!2930 = distinct !DILexicalBlock(scope: !2897, file: !139, line: 692, column: 25)
!2931 = !DILocation(line: 692, column: 25, scope: !2930)
!2932 = !DILocation(line: 693, column: 36, scope: !2897)
!2933 = !DILocation(line: 693, column: 38, scope: !2897)
!2934 = !DILocation(line: 693, column: 33, scope: !2897)
!2935 = !DILocation(line: 693, column: 29, scope: !2897)
!2936 = !DILocation(line: 693, column: 27, scope: !2897)
!2937 = !DILocation(line: 694, column: 23, scope: !2897)
!2938 = !DILocation(line: 695, column: 30, scope: !2939)
!2939 = distinct !DILexicalBlock(scope: !2889, file: !139, line: 695, column: 30)
!2940 = !DILocation(line: 695, column: 30, scope: !2889)
!2941 = !DILocation(line: 697, column: 25, scope: !2942)
!2942 = distinct !DILexicalBlock(scope: !2939, file: !139, line: 696, column: 23)
!2943 = !DILocation(line: 697, column: 25, scope: !2944)
!2944 = distinct !DILexicalBlock(scope: !2945, file: !139, line: 697, column: 25)
!2945 = distinct !DILexicalBlock(scope: !2942, file: !139, line: 697, column: 25)
!2946 = !DILocation(line: 697, column: 25, scope: !2945)
!2947 = !DILocation(line: 698, column: 40, scope: !2942)
!2948 = !DILocation(line: 699, column: 23, scope: !2942)
!2949 = !DILocation(line: 700, column: 25, scope: !2950)
!2950 = distinct !DILexicalBlock(scope: !2890, file: !139, line: 700, column: 25)
!2951 = !DILocation(line: 700, column: 33, scope: !2950)
!2952 = !DILocation(line: 700, column: 35, scope: !2950)
!2953 = !DILocation(line: 700, column: 30, scope: !2950)
!2954 = !DILocation(line: 700, column: 25, scope: !2890)
!2955 = !DILocation(line: 701, column: 23, scope: !2950)
!2956 = !DILocation(line: 702, column: 21, scope: !2890)
!2957 = !DILocation(line: 702, column: 21, scope: !2958)
!2958 = distinct !DILexicalBlock(scope: !2959, file: !139, line: 702, column: 21)
!2959 = distinct !DILexicalBlock(scope: !2890, file: !139, line: 702, column: 21)
!2960 = !DILocation(line: 702, column: 21, scope: !2959)
!2961 = !DILocation(line: 702, column: 21, scope: !2962)
!2962 = distinct !DILexicalBlock(scope: !2958, file: !139, line: 702, column: 21)
!2963 = !DILocation(line: 702, column: 21, scope: !2964)
!2964 = distinct !DILexicalBlock(scope: !2965, file: !139, line: 702, column: 21)
!2965 = distinct !DILexicalBlock(scope: !2962, file: !139, line: 702, column: 21)
!2966 = !DILocation(line: 702, column: 21, scope: !2965)
!2967 = !DILocation(line: 702, column: 21, scope: !2968)
!2968 = distinct !DILexicalBlock(scope: !2969, file: !139, line: 702, column: 21)
!2969 = distinct !DILexicalBlock(scope: !2962, file: !139, line: 702, column: 21)
!2970 = !DILocation(line: 702, column: 21, scope: !2969)
!2971 = !DILocation(line: 703, column: 21, scope: !2890)
!2972 = !DILocation(line: 703, column: 21, scope: !2973)
!2973 = distinct !DILexicalBlock(scope: !2974, file: !139, line: 703, column: 21)
!2974 = distinct !DILexicalBlock(scope: !2890, file: !139, line: 703, column: 21)
!2975 = !DILocation(line: 703, column: 21, scope: !2974)
!2976 = !DILocation(line: 704, column: 25, scope: !2890)
!2977 = !DILocation(line: 704, column: 29, scope: !2890)
!2978 = !DILocation(line: 704, column: 23, scope: !2890)
!2979 = !DILocation(line: 686, column: 17, scope: !2891)
!2980 = distinct !{!2980, !2981, !2982}
!2981 = !DILocation(line: 686, column: 17, scope: !2892)
!2982 = !DILocation(line: 705, column: 19, scope: !2892)
!2983 = !DILocation(line: 707, column: 17, scope: !2882)
!2984 = !DILocation(line: 710, column: 9, scope: !2482)
!2985 = !DILocation(line: 712, column: 16, scope: !2986)
!2986 = distinct !DILexicalBlock(scope: !2428, file: !139, line: 712, column: 11)
!2987 = !DILocation(line: 712, column: 34, scope: !2986)
!2988 = !DILocation(line: 712, column: 37, scope: !2986)
!2989 = !DILocation(line: 712, column: 51, scope: !2986)
!2990 = !DILocation(line: 713, column: 15, scope: !2986)
!2991 = !DILocation(line: 713, column: 18, scope: !2986)
!2992 = !DILocation(line: 714, column: 14, scope: !2986)
!2993 = !DILocation(line: 714, column: 17, scope: !2986)
!2994 = !DILocation(line: 715, column: 14, scope: !2986)
!2995 = !DILocation(line: 715, column: 17, scope: !2986)
!2996 = !DILocation(line: 715, column: 33, scope: !2986)
!2997 = !DILocation(line: 715, column: 35, scope: !2986)
!2998 = !DILocation(line: 715, column: 51, scope: !2986)
!2999 = !DILocation(line: 715, column: 53, scope: !2986)
!3000 = !DILocation(line: 715, column: 47, scope: !2986)
!3001 = !DILocation(line: 715, column: 65, scope: !2986)
!3002 = !DILocation(line: 716, column: 11, scope: !2986)
!3003 = !DILocation(line: 716, column: 15, scope: !2986)
!3004 = !DILocation(line: 712, column: 11, scope: !2428)
!3005 = !DILocation(line: 717, column: 9, scope: !2986)
!3006 = !DILabel(scope: !2428, name: "store_escape", file: !139, line: 719)
!3007 = !DILocation(line: 719, column: 5, scope: !2428)
!3008 = !DILocation(line: 720, column: 7, scope: !2428)
!3009 = !DILocation(line: 720, column: 7, scope: !3010)
!3010 = distinct !DILexicalBlock(scope: !3011, file: !139, line: 720, column: 7)
!3011 = distinct !DILexicalBlock(scope: !2428, file: !139, line: 720, column: 7)
!3012 = !DILocation(line: 720, column: 7, scope: !3011)
!3013 = !DILocation(line: 720, column: 7, scope: !3014)
!3014 = distinct !DILexicalBlock(scope: !3011, file: !139, line: 720, column: 7)
!3015 = !DILocation(line: 720, column: 7, scope: !3016)
!3016 = distinct !DILexicalBlock(scope: !3014, file: !139, line: 720, column: 7)
!3017 = !DILocation(line: 720, column: 7, scope: !3018)
!3018 = distinct !DILexicalBlock(scope: !3019, file: !139, line: 720, column: 7)
!3019 = distinct !DILexicalBlock(scope: !3016, file: !139, line: 720, column: 7)
!3020 = !DILocation(line: 720, column: 7, scope: !3019)
!3021 = !DILocation(line: 720, column: 7, scope: !3022)
!3022 = distinct !DILexicalBlock(scope: !3023, file: !139, line: 720, column: 7)
!3023 = distinct !DILexicalBlock(scope: !3016, file: !139, line: 720, column: 7)
!3024 = !DILocation(line: 720, column: 7, scope: !3023)
!3025 = !DILocation(line: 720, column: 7, scope: !3026)
!3026 = distinct !DILexicalBlock(scope: !3027, file: !139, line: 720, column: 7)
!3027 = distinct !DILexicalBlock(scope: !3016, file: !139, line: 720, column: 7)
!3028 = !DILocation(line: 720, column: 7, scope: !3027)
!3029 = !DILocation(line: 720, column: 7, scope: !3030)
!3030 = distinct !DILexicalBlock(scope: !3031, file: !139, line: 720, column: 7)
!3031 = distinct !DILexicalBlock(scope: !3011, file: !139, line: 720, column: 7)
!3032 = !DILocation(line: 720, column: 7, scope: !3031)
!3033 = !DILabel(scope: !2428, name: "store_c", file: !139, line: 722)
!3034 = !DILocation(line: 722, column: 5, scope: !2428)
!3035 = !DILocation(line: 723, column: 7, scope: !2428)
!3036 = !DILocation(line: 723, column: 7, scope: !3037)
!3037 = distinct !DILexicalBlock(scope: !3038, file: !139, line: 723, column: 7)
!3038 = distinct !DILexicalBlock(scope: !2428, file: !139, line: 723, column: 7)
!3039 = !DILocation(line: 723, column: 7, scope: !3038)
!3040 = !DILocation(line: 723, column: 7, scope: !3041)
!3041 = distinct !DILexicalBlock(scope: !3037, file: !139, line: 723, column: 7)
!3042 = !DILocation(line: 723, column: 7, scope: !3043)
!3043 = distinct !DILexicalBlock(scope: !3044, file: !139, line: 723, column: 7)
!3044 = distinct !DILexicalBlock(scope: !3041, file: !139, line: 723, column: 7)
!3045 = !DILocation(line: 723, column: 7, scope: !3044)
!3046 = !DILocation(line: 723, column: 7, scope: !3047)
!3047 = distinct !DILexicalBlock(scope: !3048, file: !139, line: 723, column: 7)
!3048 = distinct !DILexicalBlock(scope: !3041, file: !139, line: 723, column: 7)
!3049 = !DILocation(line: 723, column: 7, scope: !3048)
!3050 = !DILocation(line: 724, column: 7, scope: !2428)
!3051 = !DILocation(line: 724, column: 7, scope: !3052)
!3052 = distinct !DILexicalBlock(scope: !3053, file: !139, line: 724, column: 7)
!3053 = distinct !DILexicalBlock(scope: !2428, file: !139, line: 724, column: 7)
!3054 = !DILocation(line: 724, column: 7, scope: !3053)
!3055 = !DILocation(line: 726, column: 13, scope: !3056)
!3056 = distinct !DILexicalBlock(scope: !2428, file: !139, line: 726, column: 11)
!3057 = !DILocation(line: 726, column: 11, scope: !2428)
!3058 = !DILocation(line: 727, column: 38, scope: !3056)
!3059 = !DILocation(line: 727, column: 9, scope: !3056)
!3060 = !DILocation(line: 728, column: 5, scope: !2428)
!3061 = !DILocation(line: 400, column: 75, scope: !2417)
!3062 = !DILocation(line: 400, column: 3, scope: !2417)
!3063 = distinct !{!3063, !2426, !3064}
!3064 = !DILocation(line: 728, column: 5, scope: !2414)
!3065 = !DILocation(line: 730, column: 7, scope: !3066)
!3066 = distinct !DILexicalBlock(scope: !2274, file: !139, line: 730, column: 7)
!3067 = !DILocation(line: 730, column: 11, scope: !3066)
!3068 = !DILocation(line: 730, column: 16, scope: !3066)
!3069 = !DILocation(line: 730, column: 19, scope: !3066)
!3070 = !DILocation(line: 730, column: 33, scope: !3066)
!3071 = !DILocation(line: 731, column: 7, scope: !3066)
!3072 = !DILocation(line: 731, column: 10, scope: !3066)
!3073 = !DILocation(line: 730, column: 7, scope: !2274)
!3074 = !DILocation(line: 732, column: 5, scope: !3066)
!3075 = !DILocation(line: 738, column: 7, scope: !3076)
!3076 = distinct !DILexicalBlock(scope: !2274, file: !139, line: 738, column: 7)
!3077 = !DILocation(line: 738, column: 21, scope: !3076)
!3078 = !DILocation(line: 738, column: 51, scope: !3076)
!3079 = !DILocation(line: 738, column: 56, scope: !3076)
!3080 = !DILocation(line: 739, column: 7, scope: !3076)
!3081 = !DILocation(line: 739, column: 10, scope: !3076)
!3082 = !DILocation(line: 738, column: 7, scope: !2274)
!3083 = !DILocation(line: 741, column: 11, scope: !3084)
!3084 = distinct !DILexicalBlock(scope: !3085, file: !139, line: 741, column: 11)
!3085 = distinct !DILexicalBlock(scope: !3076, file: !139, line: 740, column: 5)
!3086 = !DILocation(line: 741, column: 11, scope: !3085)
!3087 = !DILocation(line: 742, column: 42, scope: !3084)
!3088 = !DILocation(line: 742, column: 50, scope: !3084)
!3089 = !DILocation(line: 742, column: 67, scope: !3084)
!3090 = !DILocation(line: 742, column: 72, scope: !3084)
!3091 = !DILocation(line: 744, column: 42, scope: !3084)
!3092 = !DILocation(line: 744, column: 49, scope: !3084)
!3093 = !DILocation(line: 745, column: 42, scope: !3084)
!3094 = !DILocation(line: 745, column: 54, scope: !3084)
!3095 = !DILocation(line: 742, column: 16, scope: !3084)
!3096 = !DILocation(line: 742, column: 9, scope: !3084)
!3097 = !DILocation(line: 746, column: 18, scope: !3098)
!3098 = distinct !DILexicalBlock(scope: !3084, file: !139, line: 746, column: 16)
!3099 = !DILocation(line: 746, column: 29, scope: !3098)
!3100 = !DILocation(line: 746, column: 32, scope: !3098)
!3101 = !DILocation(line: 746, column: 16, scope: !3084)
!3102 = !DILocation(line: 749, column: 24, scope: !3103)
!3103 = distinct !DILexicalBlock(scope: !3098, file: !139, line: 747, column: 9)
!3104 = !DILocation(line: 749, column: 22, scope: !3103)
!3105 = !DILocation(line: 750, column: 15, scope: !3103)
!3106 = !DILocation(line: 751, column: 11, scope: !3103)
!3107 = !DILocation(line: 753, column: 5, scope: !3085)
!3108 = !DILocation(line: 755, column: 7, scope: !3109)
!3109 = distinct !DILexicalBlock(scope: !2274, file: !139, line: 755, column: 7)
!3110 = !DILocation(line: 755, column: 20, scope: !3109)
!3111 = !DILocation(line: 755, column: 24, scope: !3109)
!3112 = !DILocation(line: 755, column: 7, scope: !2274)
!3113 = !DILocation(line: 756, column: 5, scope: !3109)
!3114 = !DILocation(line: 756, column: 13, scope: !3115)
!3115 = distinct !DILexicalBlock(scope: !3116, file: !139, line: 756, column: 5)
!3116 = distinct !DILexicalBlock(scope: !3109, file: !139, line: 756, column: 5)
!3117 = !DILocation(line: 756, column: 12, scope: !3115)
!3118 = !DILocation(line: 756, column: 5, scope: !3116)
!3119 = !DILocation(line: 757, column: 7, scope: !3115)
!3120 = !DILocation(line: 757, column: 7, scope: !3121)
!3121 = distinct !DILexicalBlock(scope: !3122, file: !139, line: 757, column: 7)
!3122 = distinct !DILexicalBlock(scope: !3115, file: !139, line: 757, column: 7)
!3123 = !DILocation(line: 757, column: 7, scope: !3122)
!3124 = !DILocation(line: 756, column: 39, scope: !3115)
!3125 = !DILocation(line: 756, column: 5, scope: !3115)
!3126 = distinct !{!3126, !3118, !3127}
!3127 = !DILocation(line: 757, column: 7, scope: !3116)
!3128 = !DILocation(line: 759, column: 7, scope: !3129)
!3129 = distinct !DILexicalBlock(scope: !2274, file: !139, line: 759, column: 7)
!3130 = !DILocation(line: 759, column: 13, scope: !3129)
!3131 = !DILocation(line: 759, column: 11, scope: !3129)
!3132 = !DILocation(line: 759, column: 7, scope: !2274)
!3133 = !DILocation(line: 760, column: 5, scope: !3129)
!3134 = !DILocation(line: 760, column: 12, scope: !3129)
!3135 = !DILocation(line: 760, column: 17, scope: !3129)
!3136 = !DILocation(line: 761, column: 10, scope: !2274)
!3137 = !DILocation(line: 761, column: 3, scope: !2274)
!3138 = !DILabel(scope: !2274, name: "force_outer_quoting_style", file: !139, line: 763)
!3139 = !DILocation(line: 763, column: 2, scope: !2274)
!3140 = !DILocation(line: 766, column: 7, scope: !3141)
!3141 = distinct !DILexicalBlock(scope: !2274, file: !139, line: 766, column: 7)
!3142 = !DILocation(line: 766, column: 21, scope: !3141)
!3143 = !DILocation(line: 766, column: 51, scope: !3141)
!3144 = !DILocation(line: 766, column: 54, scope: !3141)
!3145 = !DILocation(line: 766, column: 7, scope: !2274)
!3146 = !DILocation(line: 767, column: 19, scope: !3141)
!3147 = !DILocation(line: 767, column: 5, scope: !3141)
!3148 = !DILocation(line: 768, column: 36, scope: !2274)
!3149 = !DILocation(line: 768, column: 44, scope: !2274)
!3150 = !DILocation(line: 768, column: 56, scope: !2274)
!3151 = !DILocation(line: 768, column: 61, scope: !2274)
!3152 = !DILocation(line: 769, column: 36, scope: !2274)
!3153 = !DILocation(line: 770, column: 36, scope: !2274)
!3154 = !DILocation(line: 770, column: 42, scope: !2274)
!3155 = !DILocation(line: 771, column: 36, scope: !2274)
!3156 = !DILocation(line: 771, column: 48, scope: !2274)
!3157 = !DILocation(line: 768, column: 10, scope: !2274)
!3158 = !DILocation(line: 768, column: 3, scope: !2274)
!3159 = !DILocation(line: 772, column: 1, scope: !2274)
!3160 = !DILocalVariable(name: "buffer", arg: 1, scope: !3161, file: !139, line: 256, type: !6)
!3161 = distinct !DISubprogram(name: "quotearg_buffer_restyled", scope: !139, file: !139, line: 256, type: !2275, scopeLine: 262, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3162, retainedNodes: !4)
!3162 = distinct !DICompileUnit(language: DW_LANG_C99, file: !116, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !117, retainedTypes: !132, globals: !3163, nameTableKind: None)
!3163 = !{!3164, !3166, !3168, !3177, !3179, !3181, !3188, !3190}
!3164 = !DIGlobalVariableExpression(var: !3165, expr: !DIExpression())
!3165 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !3162, file: !139, line: 85, type: !140, isLocal: false, isDefinition: true)
!3166 = !DIGlobalVariableExpression(var: !3167, expr: !DIExpression())
!3167 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !3162, file: !139, line: 101, type: !146, isLocal: false, isDefinition: true)
!3168 = !DIGlobalVariableExpression(var: !3169, expr: !DIExpression())
!3169 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !3162, file: !139, line: 1052, type: !3170, isLocal: false, isDefinition: true)
!3170 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !139, line: 65, size: 448, elements: !3171)
!3171 = !{!3172, !3173, !3174, !3175, !3176}
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !3170, file: !139, line: 68, baseType: !118, size: 32)
!3173 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3170, file: !139, line: 71, baseType: !72, size: 32, offset: 32)
!3174 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !3170, file: !139, line: 75, baseType: !155, size: 256, offset: 64)
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !3170, file: !139, line: 78, baseType: !69, size: 64, offset: 320)
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !3170, file: !139, line: 81, baseType: !69, size: 64, offset: 384)
!3177 = !DIGlobalVariableExpression(var: !3178, expr: !DIExpression())
!3178 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !3162, file: !139, line: 116, type: !3170, isLocal: true, isDefinition: true)
!3179 = !DIGlobalVariableExpression(var: !3180, expr: !DIExpression())
!3180 = distinct !DIGlobalVariable(name: "slot0", scope: !3162, file: !139, line: 842, type: !162, isLocal: true, isDefinition: true)
!3181 = !DIGlobalVariableExpression(var: !3182, expr: !DIExpression())
!3182 = distinct !DIGlobalVariable(name: "slotvec", scope: !3162, file: !139, line: 845, type: !3183, isLocal: true, isDefinition: true)
!3183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3184, size: 64)
!3184 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !139, line: 834, size: 128, elements: !3185)
!3185 = !{!3186, !3187}
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3184, file: !139, line: 836, baseType: !134, size: 64)
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !3184, file: !139, line: 837, baseType: !6, size: 64, offset: 64)
!3188 = !DIGlobalVariableExpression(var: !3189, expr: !DIExpression())
!3189 = distinct !DIGlobalVariable(name: "nslots", scope: !3162, file: !139, line: 843, type: !72, isLocal: true, isDefinition: true)
!3190 = !DIGlobalVariableExpression(var: !3191, expr: !DIExpression())
!3191 = distinct !DIGlobalVariable(name: "slotvec0", scope: !3162, file: !139, line: 844, type: !3184, isLocal: true, isDefinition: true)
!3192 = !DILocalVariable(name: "buffersize", arg: 2, scope: !3161, file: !139, line: 256, type: !134)
!3193 = !DILocalVariable(name: "arg", arg: 3, scope: !3161, file: !139, line: 257, type: !69)
!3194 = !DILocalVariable(name: "argsize", arg: 4, scope: !3161, file: !139, line: 257, type: !134)
!3195 = !DILocalVariable(name: "quoting_style", arg: 5, scope: !3161, file: !139, line: 258, type: !118)
!3196 = !DILocalVariable(name: "flags", arg: 6, scope: !3161, file: !139, line: 258, type: !72)
!3197 = !DILocalVariable(name: "quote_these_too", arg: 7, scope: !3161, file: !139, line: 259, type: !2277)
!3198 = !DILocalVariable(name: "left_quote", arg: 8, scope: !3161, file: !139, line: 260, type: !69)
!3199 = !DILocalVariable(name: "right_quote", arg: 9, scope: !3161, file: !139, line: 261, type: !69)
!3200 = !DILocalVariable(name: "i", scope: !3161, file: !139, line: 263, type: !134)
!3201 = !DILocalVariable(name: "len", scope: !3161, file: !139, line: 264, type: !134)
!3202 = !DILocalVariable(name: "orig_buffersize", scope: !3161, file: !139, line: 265, type: !134)
!3203 = !DILocalVariable(name: "quote_string", scope: !3161, file: !139, line: 266, type: !69)
!3204 = !DILocalVariable(name: "quote_string_len", scope: !3161, file: !139, line: 267, type: !134)
!3205 = !DILocalVariable(name: "backslash_escapes", scope: !3161, file: !139, line: 268, type: !27)
!3206 = !DILocalVariable(name: "unibyte_locale", scope: !3161, file: !139, line: 269, type: !27)
!3207 = !DILocalVariable(name: "elide_outer_quotes", scope: !3161, file: !139, line: 270, type: !27)
!3208 = !DILocalVariable(name: "pending_shell_escape_end", scope: !3161, file: !139, line: 271, type: !27)
!3209 = !DILocalVariable(name: "encountered_single_quote", scope: !3161, file: !139, line: 272, type: !27)
!3210 = !DILocalVariable(name: "all_c_and_shell_quote_compat", scope: !3161, file: !139, line: 273, type: !27)
!3211 = !DILocalVariable(name: "escaping", scope: !3212, file: !139, line: 405, type: !27)
!3212 = distinct !DILexicalBlock(scope: !3213, file: !139, line: 401, column: 5)
!3213 = distinct !DILexicalBlock(scope: !3214, file: !139, line: 400, column: 3)
!3214 = distinct !DILexicalBlock(scope: !3215, file: !139, line: 400, column: 3)
!3215 = distinct !DISubprogram(name: "quotearg_buffer_restyled", scope: !139, file: !139, line: 256, type: !2275, scopeLine: 262, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3216, retainedNodes: !4)
!3216 = distinct !DICompileUnit(language: DW_LANG_C99, file: !116, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !117, retainedTypes: !132, globals: !3217, nameTableKind: None)
!3217 = !{!3218, !3220, !3222, !3231, !3233, !3235, !3242, !3244}
!3218 = !DIGlobalVariableExpression(var: !3219, expr: !DIExpression())
!3219 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !3216, file: !139, line: 85, type: !140, isLocal: false, isDefinition: true)
!3220 = !DIGlobalVariableExpression(var: !3221, expr: !DIExpression())
!3221 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !3216, file: !139, line: 101, type: !146, isLocal: false, isDefinition: true)
!3222 = !DIGlobalVariableExpression(var: !3223, expr: !DIExpression())
!3223 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !3216, file: !139, line: 1052, type: !3224, isLocal: false, isDefinition: true)
!3224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !139, line: 65, size: 448, elements: !3225)
!3225 = !{!3226, !3227, !3228, !3229, !3230}
!3226 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !3224, file: !139, line: 68, baseType: !118, size: 32)
!3227 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3224, file: !139, line: 71, baseType: !72, size: 32, offset: 32)
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !3224, file: !139, line: 75, baseType: !155, size: 256, offset: 64)
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !3224, file: !139, line: 78, baseType: !69, size: 64, offset: 320)
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !3224, file: !139, line: 81, baseType: !69, size: 64, offset: 384)
!3231 = !DIGlobalVariableExpression(var: !3232, expr: !DIExpression())
!3232 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !3216, file: !139, line: 116, type: !3224, isLocal: true, isDefinition: true)
!3233 = !DIGlobalVariableExpression(var: !3234, expr: !DIExpression())
!3234 = distinct !DIGlobalVariable(name: "slot0", scope: !3216, file: !139, line: 842, type: !162, isLocal: true, isDefinition: true)
!3235 = !DIGlobalVariableExpression(var: !3236, expr: !DIExpression())
!3236 = distinct !DIGlobalVariable(name: "slotvec", scope: !3216, file: !139, line: 845, type: !3237, isLocal: true, isDefinition: true)
!3237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3238, size: 64)
!3238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !139, line: 834, size: 128, elements: !3239)
!3239 = !{!3240, !3241}
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3238, file: !139, line: 836, baseType: !134, size: 64)
!3241 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !3238, file: !139, line: 837, baseType: !6, size: 64, offset: 64)
!3242 = !DIGlobalVariableExpression(var: !3243, expr: !DIExpression())
!3243 = distinct !DIGlobalVariable(name: "nslots", scope: !3216, file: !139, line: 843, type: !72, isLocal: true, isDefinition: true)
!3244 = !DIGlobalVariableExpression(var: !3245, expr: !DIExpression())
!3245 = distinct !DIGlobalVariable(name: "slotvec0", scope: !3216, file: !139, line: 844, type: !3238, isLocal: true, isDefinition: true)
!3246 = !DILocalVariable(name: "c_and_shell_quote_compat", scope: !3212, file: !139, line: 406, type: !27)
!3247 = distinct !DISubprogram(name: "gettext_quote", scope: !139, file: !139, line: 207, type: !3248, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !115, retainedNodes: !4)
!3248 = !DISubroutineType(types: !3249)
!3249 = !{!69, !69, !118}
!3250 = !DILocalVariable(name: "msgid", arg: 1, scope: !3247, file: !139, line: 207, type: !69)
!3251 = !DILocation(line: 207, column: 28, scope: !3247)
!3252 = !DILocalVariable(name: "s", arg: 2, scope: !3247, file: !139, line: 207, type: !118)
!3253 = !DILocation(line: 207, column: 54, scope: !3247)
!3254 = !DILocalVariable(name: "translation", scope: !3247, file: !139, line: 209, type: !69)
!3255 = !DILocation(line: 209, column: 15, scope: !3247)
!3256 = !DILocation(line: 209, column: 29, scope: !3247)
!3257 = !DILocalVariable(name: "locale_code", scope: !3247, file: !139, line: 210, type: !69)
!3258 = !DILocation(line: 210, column: 15, scope: !3247)
!3259 = !DILocation(line: 212, column: 7, scope: !3260)
!3260 = distinct !DILexicalBlock(scope: !3247, file: !139, line: 212, column: 7)
!3261 = !DILocation(line: 212, column: 22, scope: !3260)
!3262 = !DILocation(line: 212, column: 19, scope: !3260)
!3263 = !DILocation(line: 212, column: 7, scope: !3247)
!3264 = !DILocation(line: 213, column: 12, scope: !3260)
!3265 = !DILocation(line: 213, column: 5, scope: !3260)
!3266 = !DILocation(line: 233, column: 17, scope: !3247)
!3267 = !DILocation(line: 233, column: 15, scope: !3247)
!3268 = !DILocation(line: 234, column: 7, scope: !3269)
!3269 = distinct !DILexicalBlock(scope: !3247, file: !139, line: 234, column: 7)
!3270 = !DILocation(line: 235, column: 12, scope: !3269)
!3271 = !DILocation(line: 235, column: 21, scope: !3269)
!3272 = !DILocation(line: 235, column: 5, scope: !3269)
!3273 = !DILocation(line: 236, column: 7, scope: !3274)
!3274 = distinct !DILexicalBlock(scope: !3247, file: !139, line: 236, column: 7)
!3275 = !DILocation(line: 237, column: 12, scope: !3274)
!3276 = !DILocation(line: 237, column: 21, scope: !3274)
!3277 = !DILocation(line: 237, column: 5, scope: !3274)
!3278 = !DILocation(line: 239, column: 11, scope: !3247)
!3279 = !DILocation(line: 239, column: 13, scope: !3247)
!3280 = !DILocation(line: 239, column: 3, scope: !3247)
!3281 = !DILocation(line: 240, column: 1, scope: !3247)
!3282 = !DILocalVariable(name: "msgid", arg: 1, scope: !3283, file: !139, line: 207, type: !69)
!3283 = distinct !DISubprogram(name: "gettext_quote", scope: !139, file: !139, line: 207, type: !3248, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3284, retainedNodes: !4)
!3284 = distinct !DICompileUnit(language: DW_LANG_C99, file: !116, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !117, retainedTypes: !132, globals: !3285, nameTableKind: None)
!3285 = !{!3286, !3288, !3290, !3299, !3301, !3303, !3310, !3312}
!3286 = !DIGlobalVariableExpression(var: !3287, expr: !DIExpression())
!3287 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !3284, file: !139, line: 85, type: !140, isLocal: false, isDefinition: true)
!3288 = !DIGlobalVariableExpression(var: !3289, expr: !DIExpression())
!3289 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !3284, file: !139, line: 101, type: !146, isLocal: false, isDefinition: true)
!3290 = !DIGlobalVariableExpression(var: !3291, expr: !DIExpression())
!3291 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !3284, file: !139, line: 1052, type: !3292, isLocal: false, isDefinition: true)
!3292 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !139, line: 65, size: 448, elements: !3293)
!3293 = !{!3294, !3295, !3296, !3297, !3298}
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !3292, file: !139, line: 68, baseType: !118, size: 32)
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3292, file: !139, line: 71, baseType: !72, size: 32, offset: 32)
!3296 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !3292, file: !139, line: 75, baseType: !155, size: 256, offset: 64)
!3297 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !3292, file: !139, line: 78, baseType: !69, size: 64, offset: 320)
!3298 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !3292, file: !139, line: 81, baseType: !69, size: 64, offset: 384)
!3299 = !DIGlobalVariableExpression(var: !3300, expr: !DIExpression())
!3300 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !3284, file: !139, line: 116, type: !3292, isLocal: true, isDefinition: true)
!3301 = !DIGlobalVariableExpression(var: !3302, expr: !DIExpression())
!3302 = distinct !DIGlobalVariable(name: "slot0", scope: !3284, file: !139, line: 842, type: !162, isLocal: true, isDefinition: true)
!3303 = !DIGlobalVariableExpression(var: !3304, expr: !DIExpression())
!3304 = distinct !DIGlobalVariable(name: "slotvec", scope: !3284, file: !139, line: 845, type: !3305, isLocal: true, isDefinition: true)
!3305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3306, size: 64)
!3306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !139, line: 834, size: 128, elements: !3307)
!3307 = !{!3308, !3309}
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3306, file: !139, line: 836, baseType: !134, size: 64)
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !3306, file: !139, line: 837, baseType: !6, size: 64, offset: 64)
!3310 = !DIGlobalVariableExpression(var: !3311, expr: !DIExpression())
!3311 = distinct !DIGlobalVariable(name: "nslots", scope: !3284, file: !139, line: 843, type: !72, isLocal: true, isDefinition: true)
!3312 = !DIGlobalVariableExpression(var: !3313, expr: !DIExpression())
!3313 = distinct !DIGlobalVariable(name: "slotvec0", scope: !3284, file: !139, line: 844, type: !3306, isLocal: true, isDefinition: true)
!3314 = !DILocalVariable(name: "s", arg: 2, scope: !3283, file: !139, line: 207, type: !118)
!3315 = !DILocalVariable(name: "translation", scope: !3283, file: !139, line: 209, type: !69)
!3316 = !DILocalVariable(name: "locale_code", scope: !3283, file: !139, line: 210, type: !69)
!3317 = distinct !DISubprogram(name: "quotearg_char", scope: !139, file: !139, line: 991, type: !3318, scopeLine: 992, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !115, retainedNodes: !4)
!3318 = !DISubroutineType(types: !3319)
!3319 = !{!6, !69, !7}
!3320 = !DILocalVariable(name: "arg", arg: 1, scope: !3317, file: !139, line: 991, type: !69)
!3321 = !DILocation(line: 991, column: 28, scope: !3317)
!3322 = !DILocalVariable(name: "ch", arg: 2, scope: !3317, file: !139, line: 991, type: !7)
!3323 = !DILocation(line: 991, column: 38, scope: !3317)
!3324 = !DILocation(line: 993, column: 29, scope: !3317)
!3325 = !DILocation(line: 993, column: 44, scope: !3317)
!3326 = !DILocation(line: 993, column: 10, scope: !3317)
!3327 = !DILocation(line: 993, column: 3, scope: !3317)
!3328 = !DILocalVariable(name: "arg", arg: 1, scope: !3329, file: !139, line: 991, type: !69)
!3329 = distinct !DISubprogram(name: "quotearg_char", scope: !139, file: !139, line: 991, type: !3318, scopeLine: 992, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3330, retainedNodes: !4)
!3330 = distinct !DICompileUnit(language: DW_LANG_C99, file: !116, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !117, retainedTypes: !132, globals: !3331, nameTableKind: None)
!3331 = !{!3332, !3334, !3336, !3345, !3347, !3349, !3356, !3358}
!3332 = !DIGlobalVariableExpression(var: !3333, expr: !DIExpression())
!3333 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !3330, file: !139, line: 85, type: !140, isLocal: false, isDefinition: true)
!3334 = !DIGlobalVariableExpression(var: !3335, expr: !DIExpression())
!3335 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !3330, file: !139, line: 101, type: !146, isLocal: false, isDefinition: true)
!3336 = !DIGlobalVariableExpression(var: !3337, expr: !DIExpression())
!3337 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !3330, file: !139, line: 1052, type: !3338, isLocal: false, isDefinition: true)
!3338 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !139, line: 65, size: 448, elements: !3339)
!3339 = !{!3340, !3341, !3342, !3343, !3344}
!3340 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !3338, file: !139, line: 68, baseType: !118, size: 32)
!3341 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3338, file: !139, line: 71, baseType: !72, size: 32, offset: 32)
!3342 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !3338, file: !139, line: 75, baseType: !155, size: 256, offset: 64)
!3343 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !3338, file: !139, line: 78, baseType: !69, size: 64, offset: 320)
!3344 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !3338, file: !139, line: 81, baseType: !69, size: 64, offset: 384)
!3345 = !DIGlobalVariableExpression(var: !3346, expr: !DIExpression())
!3346 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !3330, file: !139, line: 116, type: !3338, isLocal: true, isDefinition: true)
!3347 = !DIGlobalVariableExpression(var: !3348, expr: !DIExpression())
!3348 = distinct !DIGlobalVariable(name: "slot0", scope: !3330, file: !139, line: 842, type: !162, isLocal: true, isDefinition: true)
!3349 = !DIGlobalVariableExpression(var: !3350, expr: !DIExpression())
!3350 = distinct !DIGlobalVariable(name: "slotvec", scope: !3330, file: !139, line: 845, type: !3351, isLocal: true, isDefinition: true)
!3351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3352, size: 64)
!3352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !139, line: 834, size: 128, elements: !3353)
!3353 = !{!3354, !3355}
!3354 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3352, file: !139, line: 836, baseType: !134, size: 64)
!3355 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !3352, file: !139, line: 837, baseType: !6, size: 64, offset: 64)
!3356 = !DIGlobalVariableExpression(var: !3357, expr: !DIExpression())
!3357 = distinct !DIGlobalVariable(name: "nslots", scope: !3330, file: !139, line: 843, type: !72, isLocal: true, isDefinition: true)
!3358 = !DIGlobalVariableExpression(var: !3359, expr: !DIExpression())
!3359 = distinct !DIGlobalVariable(name: "slotvec0", scope: !3330, file: !139, line: 844, type: !3352, isLocal: true, isDefinition: true)
!3360 = !DILocalVariable(name: "ch", arg: 2, scope: !3329, file: !139, line: 991, type: !7)
!3361 = distinct !DISubprogram(name: "quotearg_colon", scope: !139, file: !139, line: 997, type: !3362, scopeLine: 998, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !115, retainedNodes: !4)
!3362 = !DISubroutineType(types: !3363)
!3363 = !{!6, !69}
!3364 = !DILocalVariable(name: "arg", arg: 1, scope: !3361, file: !139, line: 997, type: !69)
!3365 = !DILocation(line: 997, column: 29, scope: !3361)
!3366 = !DILocation(line: 999, column: 25, scope: !3361)
!3367 = !DILocation(line: 999, column: 10, scope: !3361)
!3368 = !DILocation(line: 999, column: 3, scope: !3361)
!3369 = !DILocalVariable(name: "arg", arg: 1, scope: !3370, file: !139, line: 997, type: !69)
!3370 = distinct !DISubprogram(name: "quotearg_colon", scope: !139, file: !139, line: 997, type: !3362, scopeLine: 998, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3371, retainedNodes: !4)
!3371 = distinct !DICompileUnit(language: DW_LANG_C99, file: !116, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !117, retainedTypes: !132, globals: !3372, nameTableKind: None)
!3372 = !{!3373, !3375, !3377, !3386, !3388, !3390, !3397, !3399}
!3373 = !DIGlobalVariableExpression(var: !3374, expr: !DIExpression())
!3374 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !3371, file: !139, line: 85, type: !140, isLocal: false, isDefinition: true)
!3375 = !DIGlobalVariableExpression(var: !3376, expr: !DIExpression())
!3376 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !3371, file: !139, line: 101, type: !146, isLocal: false, isDefinition: true)
!3377 = !DIGlobalVariableExpression(var: !3378, expr: !DIExpression())
!3378 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !3371, file: !139, line: 1052, type: !3379, isLocal: false, isDefinition: true)
!3379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !139, line: 65, size: 448, elements: !3380)
!3380 = !{!3381, !3382, !3383, !3384, !3385}
!3381 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !3379, file: !139, line: 68, baseType: !118, size: 32)
!3382 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3379, file: !139, line: 71, baseType: !72, size: 32, offset: 32)
!3383 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !3379, file: !139, line: 75, baseType: !155, size: 256, offset: 64)
!3384 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !3379, file: !139, line: 78, baseType: !69, size: 64, offset: 320)
!3385 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !3379, file: !139, line: 81, baseType: !69, size: 64, offset: 384)
!3386 = !DIGlobalVariableExpression(var: !3387, expr: !DIExpression())
!3387 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !3371, file: !139, line: 116, type: !3379, isLocal: true, isDefinition: true)
!3388 = !DIGlobalVariableExpression(var: !3389, expr: !DIExpression())
!3389 = distinct !DIGlobalVariable(name: "slot0", scope: !3371, file: !139, line: 842, type: !162, isLocal: true, isDefinition: true)
!3390 = !DIGlobalVariableExpression(var: !3391, expr: !DIExpression())
!3391 = distinct !DIGlobalVariable(name: "slotvec", scope: !3371, file: !139, line: 845, type: !3392, isLocal: true, isDefinition: true)
!3392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3393, size: 64)
!3393 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !139, line: 834, size: 128, elements: !3394)
!3394 = !{!3395, !3396}
!3395 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3393, file: !139, line: 836, baseType: !134, size: 64)
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !3393, file: !139, line: 837, baseType: !6, size: 64, offset: 64)
!3397 = !DIGlobalVariableExpression(var: !3398, expr: !DIExpression())
!3398 = distinct !DIGlobalVariable(name: "nslots", scope: !3371, file: !139, line: 843, type: !72, isLocal: true, isDefinition: true)
!3399 = !DIGlobalVariableExpression(var: !3400, expr: !DIExpression())
!3400 = distinct !DIGlobalVariable(name: "slotvec0", scope: !3371, file: !139, line: 844, type: !3393, isLocal: true, isDefinition: true)
!3401 = distinct !DISubprogram(name: "quote_n_mem", scope: !139, file: !139, line: 1061, type: !3402, scopeLine: 1062, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !115, retainedNodes: !4)
!3402 = !DISubroutineType(types: !3403)
!3403 = !{!69, !72, !69, !134}
!3404 = !DILocalVariable(name: "n", arg: 1, scope: !3401, file: !139, line: 1061, type: !72)
!3405 = !DILocation(line: 1061, column: 18, scope: !3401)
!3406 = !DILocalVariable(name: "arg", arg: 2, scope: !3401, file: !139, line: 1061, type: !69)
!3407 = !DILocation(line: 1061, column: 33, scope: !3401)
!3408 = !DILocalVariable(name: "argsize", arg: 3, scope: !3401, file: !139, line: 1061, type: !134)
!3409 = !DILocation(line: 1061, column: 45, scope: !3401)
!3410 = !DILocation(line: 1063, column: 30, scope: !3401)
!3411 = !DILocation(line: 1063, column: 33, scope: !3401)
!3412 = !DILocation(line: 1063, column: 38, scope: !3401)
!3413 = !DILocation(line: 1063, column: 10, scope: !3401)
!3414 = !DILocation(line: 1063, column: 3, scope: !3401)
!3415 = !DILocalVariable(name: "n", arg: 1, scope: !3416, file: !139, line: 1061, type: !72)
!3416 = distinct !DISubprogram(name: "quote_n_mem", scope: !139, file: !139, line: 1061, type: !3402, scopeLine: 1062, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3417, retainedNodes: !4)
!3417 = distinct !DICompileUnit(language: DW_LANG_C99, file: !116, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !117, retainedTypes: !132, globals: !3418, nameTableKind: None)
!3418 = !{!3419, !3421, !3423, !3432, !3434, !3436, !3443, !3445}
!3419 = !DIGlobalVariableExpression(var: !3420, expr: !DIExpression())
!3420 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !3417, file: !139, line: 85, type: !140, isLocal: false, isDefinition: true)
!3421 = !DIGlobalVariableExpression(var: !3422, expr: !DIExpression())
!3422 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !3417, file: !139, line: 101, type: !146, isLocal: false, isDefinition: true)
!3423 = !DIGlobalVariableExpression(var: !3424, expr: !DIExpression())
!3424 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !3417, file: !139, line: 1052, type: !3425, isLocal: false, isDefinition: true)
!3425 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !139, line: 65, size: 448, elements: !3426)
!3426 = !{!3427, !3428, !3429, !3430, !3431}
!3427 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !3425, file: !139, line: 68, baseType: !118, size: 32)
!3428 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3425, file: !139, line: 71, baseType: !72, size: 32, offset: 32)
!3429 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !3425, file: !139, line: 75, baseType: !155, size: 256, offset: 64)
!3430 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !3425, file: !139, line: 78, baseType: !69, size: 64, offset: 320)
!3431 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !3425, file: !139, line: 81, baseType: !69, size: 64, offset: 384)
!3432 = !DIGlobalVariableExpression(var: !3433, expr: !DIExpression())
!3433 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !3417, file: !139, line: 116, type: !3425, isLocal: true, isDefinition: true)
!3434 = !DIGlobalVariableExpression(var: !3435, expr: !DIExpression())
!3435 = distinct !DIGlobalVariable(name: "slot0", scope: !3417, file: !139, line: 842, type: !162, isLocal: true, isDefinition: true)
!3436 = !DIGlobalVariableExpression(var: !3437, expr: !DIExpression())
!3437 = distinct !DIGlobalVariable(name: "slotvec", scope: !3417, file: !139, line: 845, type: !3438, isLocal: true, isDefinition: true)
!3438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3439, size: 64)
!3439 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !139, line: 834, size: 128, elements: !3440)
!3440 = !{!3441, !3442}
!3441 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3439, file: !139, line: 836, baseType: !134, size: 64)
!3442 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !3439, file: !139, line: 837, baseType: !6, size: 64, offset: 64)
!3443 = !DIGlobalVariableExpression(var: !3444, expr: !DIExpression())
!3444 = distinct !DIGlobalVariable(name: "nslots", scope: !3417, file: !139, line: 843, type: !72, isLocal: true, isDefinition: true)
!3445 = !DIGlobalVariableExpression(var: !3446, expr: !DIExpression())
!3446 = distinct !DIGlobalVariable(name: "slotvec0", scope: !3417, file: !139, line: 844, type: !3439, isLocal: true, isDefinition: true)
!3447 = !DILocalVariable(name: "arg", arg: 2, scope: !3416, file: !139, line: 1061, type: !69)
!3448 = !DILocalVariable(name: "argsize", arg: 3, scope: !3416, file: !139, line: 1061, type: !134)
!3449 = distinct !DISubprogram(name: "quote_n", scope: !139, file: !139, line: 1073, type: !3450, scopeLine: 1074, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !115, retainedNodes: !4)
!3450 = !DISubroutineType(types: !3451)
!3451 = !{!69, !72, !69}
!3452 = !DILocalVariable(name: "n", arg: 1, scope: !3449, file: !139, line: 1073, type: !72)
!3453 = !DILocation(line: 1073, column: 14, scope: !3449)
!3454 = !DILocalVariable(name: "arg", arg: 2, scope: !3449, file: !139, line: 1073, type: !69)
!3455 = !DILocation(line: 1073, column: 29, scope: !3449)
!3456 = !DILocation(line: 1075, column: 23, scope: !3449)
!3457 = !DILocation(line: 1075, column: 26, scope: !3449)
!3458 = !DILocation(line: 1075, column: 10, scope: !3449)
!3459 = !DILocation(line: 1075, column: 3, scope: !3449)
!3460 = !DILocalVariable(name: "n", arg: 1, scope: !3461, file: !139, line: 1073, type: !72)
!3461 = distinct !DISubprogram(name: "quote_n", scope: !139, file: !139, line: 1073, type: !3450, scopeLine: 1074, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3462, retainedNodes: !4)
!3462 = distinct !DICompileUnit(language: DW_LANG_C99, file: !116, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !117, retainedTypes: !132, globals: !3463, nameTableKind: None)
!3463 = !{!3464, !3466, !3468, !3477, !3479, !3481, !3488, !3490}
!3464 = !DIGlobalVariableExpression(var: !3465, expr: !DIExpression())
!3465 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !3462, file: !139, line: 85, type: !140, isLocal: false, isDefinition: true)
!3466 = !DIGlobalVariableExpression(var: !3467, expr: !DIExpression())
!3467 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !3462, file: !139, line: 101, type: !146, isLocal: false, isDefinition: true)
!3468 = !DIGlobalVariableExpression(var: !3469, expr: !DIExpression())
!3469 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !3462, file: !139, line: 1052, type: !3470, isLocal: false, isDefinition: true)
!3470 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !139, line: 65, size: 448, elements: !3471)
!3471 = !{!3472, !3473, !3474, !3475, !3476}
!3472 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !3470, file: !139, line: 68, baseType: !118, size: 32)
!3473 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3470, file: !139, line: 71, baseType: !72, size: 32, offset: 32)
!3474 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !3470, file: !139, line: 75, baseType: !155, size: 256, offset: 64)
!3475 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !3470, file: !139, line: 78, baseType: !69, size: 64, offset: 320)
!3476 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !3470, file: !139, line: 81, baseType: !69, size: 64, offset: 384)
!3477 = !DIGlobalVariableExpression(var: !3478, expr: !DIExpression())
!3478 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !3462, file: !139, line: 116, type: !3470, isLocal: true, isDefinition: true)
!3479 = !DIGlobalVariableExpression(var: !3480, expr: !DIExpression())
!3480 = distinct !DIGlobalVariable(name: "slot0", scope: !3462, file: !139, line: 842, type: !162, isLocal: true, isDefinition: true)
!3481 = !DIGlobalVariableExpression(var: !3482, expr: !DIExpression())
!3482 = distinct !DIGlobalVariable(name: "slotvec", scope: !3462, file: !139, line: 845, type: !3483, isLocal: true, isDefinition: true)
!3483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3484, size: 64)
!3484 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !139, line: 834, size: 128, elements: !3485)
!3485 = !{!3486, !3487}
!3486 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3484, file: !139, line: 836, baseType: !134, size: 64)
!3487 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !3484, file: !139, line: 837, baseType: !6, size: 64, offset: 64)
!3488 = !DIGlobalVariableExpression(var: !3489, expr: !DIExpression())
!3489 = distinct !DIGlobalVariable(name: "nslots", scope: !3462, file: !139, line: 843, type: !72, isLocal: true, isDefinition: true)
!3490 = !DIGlobalVariableExpression(var: !3491, expr: !DIExpression())
!3491 = distinct !DIGlobalVariable(name: "slotvec0", scope: !3462, file: !139, line: 844, type: !3484, isLocal: true, isDefinition: true)
!3492 = !DILocalVariable(name: "arg", arg: 2, scope: !3461, file: !139, line: 1073, type: !69)
!3493 = distinct !DISubprogram(name: "quote", scope: !139, file: !139, line: 1079, type: !3494, scopeLine: 1080, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !115, retainedNodes: !4)
!3494 = !DISubroutineType(types: !3495)
!3495 = !{!69, !69}
!3496 = !DILocalVariable(name: "arg", arg: 1, scope: !3493, file: !139, line: 1079, type: !69)
!3497 = !DILocation(line: 1079, column: 20, scope: !3493)
!3498 = !DILocation(line: 1081, column: 22, scope: !3493)
!3499 = !DILocation(line: 1081, column: 10, scope: !3493)
!3500 = !DILocation(line: 1081, column: 3, scope: !3493)
!3501 = !DILocalVariable(name: "arg", arg: 1, scope: !3502, file: !139, line: 1079, type: !69)
!3502 = distinct !DISubprogram(name: "quote", scope: !139, file: !139, line: 1079, type: !3494, scopeLine: 1080, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3503, retainedNodes: !4)
!3503 = distinct !DICompileUnit(language: DW_LANG_C99, file: !116, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !117, retainedTypes: !132, globals: !3504, nameTableKind: None)
!3504 = !{!3505, !3507, !3509, !3518, !3520, !3522, !3529, !3531}
!3505 = !DIGlobalVariableExpression(var: !3506, expr: !DIExpression())
!3506 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !3503, file: !139, line: 85, type: !140, isLocal: false, isDefinition: true)
!3507 = !DIGlobalVariableExpression(var: !3508, expr: !DIExpression())
!3508 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !3503, file: !139, line: 101, type: !146, isLocal: false, isDefinition: true)
!3509 = !DIGlobalVariableExpression(var: !3510, expr: !DIExpression())
!3510 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !3503, file: !139, line: 1052, type: !3511, isLocal: false, isDefinition: true)
!3511 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !139, line: 65, size: 448, elements: !3512)
!3512 = !{!3513, !3514, !3515, !3516, !3517}
!3513 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !3511, file: !139, line: 68, baseType: !118, size: 32)
!3514 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3511, file: !139, line: 71, baseType: !72, size: 32, offset: 32)
!3515 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !3511, file: !139, line: 75, baseType: !155, size: 256, offset: 64)
!3516 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !3511, file: !139, line: 78, baseType: !69, size: 64, offset: 320)
!3517 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !3511, file: !139, line: 81, baseType: !69, size: 64, offset: 384)
!3518 = !DIGlobalVariableExpression(var: !3519, expr: !DIExpression())
!3519 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !3503, file: !139, line: 116, type: !3511, isLocal: true, isDefinition: true)
!3520 = !DIGlobalVariableExpression(var: !3521, expr: !DIExpression())
!3521 = distinct !DIGlobalVariable(name: "slot0", scope: !3503, file: !139, line: 842, type: !162, isLocal: true, isDefinition: true)
!3522 = !DIGlobalVariableExpression(var: !3523, expr: !DIExpression())
!3523 = distinct !DIGlobalVariable(name: "slotvec", scope: !3503, file: !139, line: 845, type: !3524, isLocal: true, isDefinition: true)
!3524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3525, size: 64)
!3525 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !139, line: 834, size: 128, elements: !3526)
!3526 = !{!3527, !3528}
!3527 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3525, file: !139, line: 836, baseType: !134, size: 64)
!3528 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !3525, file: !139, line: 837, baseType: !6, size: 64, offset: 64)
!3529 = !DIGlobalVariableExpression(var: !3530, expr: !DIExpression())
!3530 = distinct !DIGlobalVariable(name: "nslots", scope: !3503, file: !139, line: 843, type: !72, isLocal: true, isDefinition: true)
!3531 = !DIGlobalVariableExpression(var: !3532, expr: !DIExpression())
!3532 = distinct !DIGlobalVariable(name: "slotvec0", scope: !3503, file: !139, line: 844, type: !3525, isLocal: true, isDefinition: true)
!3533 = distinct !DISubprogram(name: "getcon", scope: !3534, file: !3534, line: 87, type: !3535, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !208, retainedNodes: !4)
!3534 = !DIFile(filename: "./lib/selinux/selinux.h", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!3535 = !DISubroutineType(types: !3536)
!3536 = !{!72, !3537}
!3537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3538, size: 64)
!3538 = !DIDerivedType(tag: DW_TAG_typedef, name: "security_context_t", file: !3534, line: 83, baseType: !6)
!3539 = !DILocalVariable(name: "con", arg: 1, scope: !3533, file: !3534, line: 87, type: !3537)
!3540 = !DILocation(line: 87, column: 29, scope: !3533)
!3541 = !DILocation(line: 88, column: 5, scope: !3533)
!3542 = !DILocation(line: 88, column: 11, scope: !3533)
!3543 = !DILocation(line: 88, column: 22, scope: !3533)
!3544 = !DILocalVariable(name: "con", arg: 1, scope: !3545, file: !3534, line: 87, type: !3537)
!3545 = distinct !DISubprogram(name: "getcon", scope: !3534, file: !3534, line: 87, type: !3535, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3546, retainedNodes: !4)
!3546 = distinct !DICompileUnit(language: DW_LANG_C99, file: !209, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, nameTableKind: None)
!3547 = distinct !DISubprogram(name: "parse_user_spec", scope: !179, file: !179, line: 259, type: !3548, scopeLine: 261, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !185, retainedNodes: !4)
!3548 = !DISubroutineType(types: !3549)
!3549 = !{!69, !69, !182, !183, !184, !184}
!3550 = !DILocalVariable(name: "spec", arg: 1, scope: !3547, file: !179, line: 259, type: !69)
!3551 = !DILocation(line: 259, column: 30, scope: !3547)
!3552 = !DILocalVariable(name: "uid", arg: 2, scope: !3547, file: !179, line: 259, type: !182)
!3553 = !DILocation(line: 259, column: 43, scope: !3547)
!3554 = !DILocalVariable(name: "gid", arg: 3, scope: !3547, file: !179, line: 259, type: !183)
!3555 = !DILocation(line: 259, column: 55, scope: !3547)
!3556 = !DILocalVariable(name: "username", arg: 4, scope: !3547, file: !179, line: 260, type: !184)
!3557 = !DILocation(line: 260, column: 25, scope: !3547)
!3558 = !DILocalVariable(name: "groupname", arg: 5, scope: !3547, file: !179, line: 260, type: !184)
!3559 = !DILocation(line: 260, column: 42, scope: !3547)
!3560 = !DILocalVariable(name: "colon", scope: !3547, file: !179, line: 262, type: !69)
!3561 = !DILocation(line: 262, column: 15, scope: !3547)
!3562 = !DILocation(line: 262, column: 23, scope: !3547)
!3563 = !DILocation(line: 262, column: 37, scope: !3547)
!3564 = !DILocation(line: 262, column: 29, scope: !3547)
!3565 = !DILocalVariable(name: "error_msg", scope: !3547, file: !179, line: 263, type: !69)
!3566 = !DILocation(line: 263, column: 15, scope: !3547)
!3567 = !DILocation(line: 264, column: 27, scope: !3547)
!3568 = !DILocation(line: 264, column: 33, scope: !3547)
!3569 = !DILocation(line: 264, column: 40, scope: !3547)
!3570 = !DILocation(line: 264, column: 45, scope: !3547)
!3571 = !DILocation(line: 264, column: 50, scope: !3547)
!3572 = !DILocation(line: 264, column: 60, scope: !3547)
!3573 = !DILocation(line: 264, column: 5, scope: !3547)
!3574 = !DILocation(line: 266, column: 7, scope: !3575)
!3575 = distinct !DILexicalBlock(scope: !3547, file: !179, line: 266, column: 7)
!3576 = !DILocation(line: 266, column: 11, scope: !3575)
!3577 = !DILocation(line: 266, column: 15, scope: !3575)
!3578 = !DILocation(line: 266, column: 21, scope: !3575)
!3579 = !DILocation(line: 266, column: 24, scope: !3575)
!3580 = !DILocation(line: 266, column: 7, scope: !3547)
!3581 = !DILocalVariable(name: "dot", scope: !3582, file: !179, line: 274, type: !69)
!3582 = distinct !DILexicalBlock(scope: !3575, file: !179, line: 267, column: 5)
!3583 = !DILocation(line: 274, column: 19, scope: !3582)
!3584 = !DILocation(line: 274, column: 33, scope: !3582)
!3585 = !DILocation(line: 274, column: 25, scope: !3582)
!3586 = !DILocation(line: 275, column: 11, scope: !3587)
!3587 = distinct !DILexicalBlock(scope: !3582, file: !179, line: 275, column: 11)
!3588 = !DILocation(line: 276, column: 11, scope: !3587)
!3589 = !DILocation(line: 276, column: 38, scope: !3587)
!3590 = !DILocation(line: 276, column: 44, scope: !3587)
!3591 = !DILocation(line: 276, column: 49, scope: !3587)
!3592 = !DILocation(line: 276, column: 54, scope: !3587)
!3593 = !DILocation(line: 276, column: 59, scope: !3587)
!3594 = !DILocation(line: 276, column: 69, scope: !3587)
!3595 = !DILocation(line: 276, column: 16, scope: !3587)
!3596 = !DILocation(line: 275, column: 11, scope: !3582)
!3597 = !DILocation(line: 277, column: 19, scope: !3587)
!3598 = !DILocation(line: 277, column: 9, scope: !3587)
!3599 = !DILocation(line: 278, column: 5, scope: !3582)
!3600 = !DILocation(line: 280, column: 10, scope: !3547)
!3601 = !DILocation(line: 280, column: 3, scope: !3547)
!3602 = !DILocalVariable(name: "spec", arg: 1, scope: !3603, file: !179, line: 259, type: !69)
!3603 = distinct !DISubprogram(name: "parse_user_spec", scope: !179, file: !179, line: 259, type: !3548, scopeLine: 261, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3604, retainedNodes: !4)
!3604 = distinct !DICompileUnit(language: DW_LANG_C99, file: !186, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !187, globals: !3605, nameTableKind: None)
!3605 = !{!3606, !3609, !3611}
!3606 = !DIGlobalVariableExpression(var: !3607, expr: !DIExpression())
!3607 = distinct !DIGlobalVariable(name: "E_invalid_user", scope: !3608, file: !179, line: 106, type: !69, isLocal: true, isDefinition: true)
!3608 = distinct !DISubprogram(name: "parse_with_separator", scope: !179, file: !179, line: 102, type: !180, scopeLine: 105, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3604, retainedNodes: !4)
!3609 = !DIGlobalVariableExpression(var: !3610, expr: !DIExpression())
!3610 = distinct !DIGlobalVariable(name: "E_invalid_group", scope: !3608, file: !179, line: 107, type: !69, isLocal: true, isDefinition: true)
!3611 = !DIGlobalVariableExpression(var: !3612, expr: !DIExpression())
!3612 = distinct !DIGlobalVariable(name: "E_bad_spec", scope: !3608, file: !179, line: 108, type: !69, isLocal: true, isDefinition: true)
!3613 = !DILocalVariable(name: "uid", arg: 2, scope: !3603, file: !179, line: 259, type: !182)
!3614 = !DILocalVariable(name: "gid", arg: 3, scope: !3603, file: !179, line: 259, type: !183)
!3615 = !DILocalVariable(name: "username", arg: 4, scope: !3603, file: !179, line: 260, type: !184)
!3616 = !DILocalVariable(name: "groupname", arg: 5, scope: !3603, file: !179, line: 260, type: !184)
!3617 = !DILocalVariable(name: "colon", scope: !3603, file: !179, line: 262, type: !69)
!3618 = !DILocalVariable(name: "error_msg", scope: !3619, file: !179, line: 263, type: !69)
!3619 = distinct !DISubprogram(name: "parse_user_spec", scope: !179, file: !179, line: 259, type: !3548, scopeLine: 261, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3620, retainedNodes: !4)
!3620 = distinct !DICompileUnit(language: DW_LANG_C99, file: !186, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !187, globals: !3621, nameTableKind: None)
!3621 = !{!3622, !3625, !3627}
!3622 = !DIGlobalVariableExpression(var: !3623, expr: !DIExpression())
!3623 = distinct !DIGlobalVariable(name: "E_invalid_user", scope: !3624, file: !179, line: 106, type: !69, isLocal: true, isDefinition: true)
!3624 = distinct !DISubprogram(name: "parse_with_separator", scope: !179, file: !179, line: 102, type: !180, scopeLine: 105, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3620, retainedNodes: !4)
!3625 = !DIGlobalVariableExpression(var: !3626, expr: !DIExpression())
!3626 = distinct !DIGlobalVariable(name: "E_invalid_group", scope: !3624, file: !179, line: 107, type: !69, isLocal: true, isDefinition: true)
!3627 = !DIGlobalVariableExpression(var: !3628, expr: !DIExpression())
!3628 = distinct !DIGlobalVariable(name: "E_bad_spec", scope: !3624, file: !179, line: 108, type: !69, isLocal: true, isDefinition: true)
!3629 = !DILocalVariable(name: "spec", arg: 1, scope: !178, file: !179, line: 102, type: !69)
!3630 = !DILocation(line: 102, column: 35, scope: !178)
!3631 = !DILocalVariable(name: "separator", arg: 2, scope: !178, file: !179, line: 102, type: !69)
!3632 = !DILocation(line: 102, column: 53, scope: !178)
!3633 = !DILocalVariable(name: "uid", arg: 3, scope: !178, file: !179, line: 103, type: !182)
!3634 = !DILocation(line: 103, column: 30, scope: !178)
!3635 = !DILocalVariable(name: "gid", arg: 4, scope: !178, file: !179, line: 103, type: !183)
!3636 = !DILocation(line: 103, column: 42, scope: !178)
!3637 = !DILocalVariable(name: "username", arg: 5, scope: !178, file: !179, line: 104, type: !184)
!3638 = !DILocation(line: 104, column: 30, scope: !178)
!3639 = !DILocalVariable(name: "groupname", arg: 6, scope: !178, file: !179, line: 104, type: !184)
!3640 = !DILocation(line: 104, column: 47, scope: !178)
!3641 = !DILocalVariable(name: "error_msg", scope: !178, file: !179, line: 110, type: !69)
!3642 = !DILocation(line: 110, column: 15, scope: !178)
!3643 = !DILocalVariable(name: "pwd", scope: !178, file: !179, line: 111, type: !3644)
!3644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3645, size: 64)
!3645 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "passwd", file: !659, line: 49, size: 384, elements: !3646)
!3646 = !{!3647, !3648, !3649, !3650, !3651, !3652, !3653}
!3647 = !DIDerivedType(tag: DW_TAG_member, name: "pw_name", scope: !3645, file: !659, line: 51, baseType: !6, size: 64)
!3648 = !DIDerivedType(tag: DW_TAG_member, name: "pw_passwd", scope: !3645, file: !659, line: 52, baseType: !6, size: 64, offset: 64)
!3649 = !DIDerivedType(tag: DW_TAG_member, name: "pw_uid", scope: !3645, file: !659, line: 54, baseType: !14, size: 32, offset: 128)
!3650 = !DIDerivedType(tag: DW_TAG_member, name: "pw_gid", scope: !3645, file: !659, line: 55, baseType: !22, size: 32, offset: 160)
!3651 = !DIDerivedType(tag: DW_TAG_member, name: "pw_gecos", scope: !3645, file: !659, line: 56, baseType: !6, size: 64, offset: 192)
!3652 = !DIDerivedType(tag: DW_TAG_member, name: "pw_dir", scope: !3645, file: !659, line: 57, baseType: !6, size: 64, offset: 256)
!3653 = !DIDerivedType(tag: DW_TAG_member, name: "pw_shell", scope: !3645, file: !659, line: 58, baseType: !6, size: 64, offset: 320)
!3654 = !DILocation(line: 111, column: 18, scope: !178)
!3655 = !DILocalVariable(name: "grp", scope: !178, file: !179, line: 112, type: !3656)
!3656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3657, size: 64)
!3657 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group", file: !1233, line: 42, size: 256, elements: !3658)
!3658 = !{!3659, !3660, !3661, !3662}
!3659 = !DIDerivedType(tag: DW_TAG_member, name: "gr_name", scope: !3657, file: !1233, line: 44, baseType: !6, size: 64)
!3660 = !DIDerivedType(tag: DW_TAG_member, name: "gr_passwd", scope: !3657, file: !1233, line: 45, baseType: !6, size: 64, offset: 64)
!3661 = !DIDerivedType(tag: DW_TAG_member, name: "gr_gid", scope: !3657, file: !1233, line: 46, baseType: !22, size: 32, offset: 128)
!3662 = !DIDerivedType(tag: DW_TAG_member, name: "gr_mem", scope: !3657, file: !1233, line: 47, baseType: !184, size: 64, offset: 192)
!3663 = !DILocation(line: 112, column: 17, scope: !178)
!3664 = !DILocalVariable(name: "u", scope: !178, file: !179, line: 113, type: !6)
!3665 = !DILocation(line: 113, column: 9, scope: !178)
!3666 = !DILocalVariable(name: "g", scope: !178, file: !179, line: 114, type: !69)
!3667 = !DILocation(line: 114, column: 15, scope: !178)
!3668 = !DILocalVariable(name: "gname", scope: !178, file: !179, line: 115, type: !6)
!3669 = !DILocation(line: 115, column: 9, scope: !178)
!3670 = !DILocalVariable(name: "unum", scope: !178, file: !179, line: 116, type: !12)
!3671 = !DILocation(line: 116, column: 9, scope: !178)
!3672 = !DILocation(line: 116, column: 17, scope: !178)
!3673 = !DILocation(line: 116, column: 16, scope: !178)
!3674 = !DILocalVariable(name: "gnum", scope: !178, file: !179, line: 117, type: !21)
!3675 = !DILocation(line: 117, column: 9, scope: !178)
!3676 = !DILocation(line: 117, column: 16, scope: !178)
!3677 = !DILocation(line: 117, column: 23, scope: !178)
!3678 = !DILocation(line: 117, column: 22, scope: !178)
!3679 = !DILocation(line: 119, column: 13, scope: !178)
!3680 = !DILocation(line: 120, column: 7, scope: !3681)
!3681 = distinct !DILexicalBlock(scope: !178, file: !179, line: 120, column: 7)
!3682 = !DILocation(line: 120, column: 7, scope: !178)
!3683 = !DILocation(line: 121, column: 6, scope: !3681)
!3684 = !DILocation(line: 121, column: 15, scope: !3681)
!3685 = !DILocation(line: 121, column: 5, scope: !3681)
!3686 = !DILocation(line: 122, column: 7, scope: !3687)
!3687 = distinct !DILexicalBlock(scope: !178, file: !179, line: 122, column: 7)
!3688 = !DILocation(line: 122, column: 7, scope: !178)
!3689 = !DILocation(line: 123, column: 6, scope: !3687)
!3690 = !DILocation(line: 123, column: 16, scope: !3687)
!3691 = !DILocation(line: 123, column: 5, scope: !3687)
!3692 = !DILocation(line: 129, column: 5, scope: !178)
!3693 = !DILocation(line: 130, column: 7, scope: !3694)
!3694 = distinct !DILexicalBlock(scope: !178, file: !179, line: 130, column: 7)
!3695 = !DILocation(line: 130, column: 17, scope: !3694)
!3696 = !DILocation(line: 130, column: 7, scope: !178)
!3697 = !DILocation(line: 132, column: 12, scope: !3698)
!3698 = distinct !DILexicalBlock(scope: !3699, file: !179, line: 132, column: 11)
!3699 = distinct !DILexicalBlock(scope: !3694, file: !179, line: 131, column: 5)
!3700 = !DILocation(line: 132, column: 11, scope: !3698)
!3701 = !DILocation(line: 132, column: 11, scope: !3699)
!3702 = !DILocation(line: 133, column: 22, scope: !3698)
!3703 = !DILocation(line: 133, column: 13, scope: !3698)
!3704 = !DILocation(line: 133, column: 11, scope: !3698)
!3705 = !DILocation(line: 133, column: 9, scope: !3698)
!3706 = !DILocation(line: 134, column: 5, scope: !3699)
!3707 = !DILocalVariable(name: "ulen", scope: !3708, file: !179, line: 137, type: !134)
!3708 = distinct !DILexicalBlock(scope: !3694, file: !179, line: 136, column: 5)
!3709 = !DILocation(line: 137, column: 14, scope: !3708)
!3710 = !DILocation(line: 137, column: 21, scope: !3708)
!3711 = !DILocation(line: 137, column: 33, scope: !3708)
!3712 = !DILocation(line: 137, column: 31, scope: !3708)
!3713 = !DILocation(line: 138, column: 11, scope: !3714)
!3714 = distinct !DILexicalBlock(scope: !3708, file: !179, line: 138, column: 11)
!3715 = !DILocation(line: 138, column: 16, scope: !3714)
!3716 = !DILocation(line: 138, column: 11, scope: !3708)
!3717 = !DILocation(line: 140, column: 24, scope: !3718)
!3718 = distinct !DILexicalBlock(scope: !3714, file: !179, line: 139, column: 9)
!3719 = !DILocation(line: 140, column: 30, scope: !3718)
!3720 = !DILocation(line: 140, column: 35, scope: !3718)
!3721 = !DILocation(line: 140, column: 15, scope: !3718)
!3722 = !DILocation(line: 140, column: 13, scope: !3718)
!3723 = !DILocation(line: 141, column: 11, scope: !3718)
!3724 = !DILocation(line: 141, column: 13, scope: !3718)
!3725 = !DILocation(line: 141, column: 19, scope: !3718)
!3726 = !DILocation(line: 142, column: 9, scope: !3718)
!3727 = !DILocation(line: 145, column: 8, scope: !178)
!3728 = !DILocation(line: 145, column: 18, scope: !178)
!3729 = !DILocation(line: 145, column: 26, scope: !178)
!3730 = !DILocation(line: 145, column: 31, scope: !178)
!3731 = !DILocation(line: 145, column: 41, scope: !178)
!3732 = !DILocation(line: 145, column: 29, scope: !178)
!3733 = !DILocation(line: 145, column: 46, scope: !178)
!3734 = !DILocation(line: 147, column: 10, scope: !178)
!3735 = !DILocation(line: 147, column: 20, scope: !178)
!3736 = !DILocation(line: 145, column: 5, scope: !178)
!3737 = !DILocation(line: 158, column: 7, scope: !3738)
!3738 = distinct !DILexicalBlock(scope: !178, file: !179, line: 158, column: 7)
!3739 = !DILocation(line: 158, column: 9, scope: !3738)
!3740 = !DILocation(line: 158, column: 7, scope: !178)
!3741 = !DILocation(line: 161, column: 15, scope: !3742)
!3742 = distinct !DILexicalBlock(scope: !3738, file: !179, line: 159, column: 5)
!3743 = !DILocation(line: 161, column: 14, scope: !3742)
!3744 = !DILocation(line: 161, column: 17, scope: !3742)
!3745 = !DILocation(line: 161, column: 43, scope: !3742)
!3746 = !DILocation(line: 161, column: 33, scope: !3742)
!3747 = !DILocation(line: 161, column: 11, scope: !3742)
!3748 = !DILocation(line: 162, column: 11, scope: !3749)
!3749 = distinct !DILexicalBlock(scope: !3742, file: !179, line: 162, column: 11)
!3750 = !DILocation(line: 162, column: 15, scope: !3749)
!3751 = !DILocation(line: 162, column: 11, scope: !3742)
!3752 = !DILocalVariable(name: "use_login_group", scope: !3753, file: !179, line: 164, type: !27)
!3753 = distinct !DILexicalBlock(scope: !3749, file: !179, line: 163, column: 9)
!3754 = !DILocation(line: 164, column: 16, scope: !3753)
!3755 = !DILocation(line: 164, column: 35, scope: !3753)
!3756 = !DILocation(line: 164, column: 45, scope: !3753)
!3757 = !DILocation(line: 164, column: 53, scope: !3753)
!3758 = !DILocation(line: 164, column: 56, scope: !3753)
!3759 = !DILocation(line: 164, column: 58, scope: !3753)
!3760 = !DILocation(line: 0, scope: !3753)
!3761 = !DILocation(line: 165, column: 15, scope: !3762)
!3762 = distinct !DILexicalBlock(scope: !3753, file: !179, line: 165, column: 15)
!3763 = !DILocation(line: 165, column: 15, scope: !3753)
!3764 = !DILocation(line: 169, column: 27, scope: !3765)
!3765 = distinct !DILexicalBlock(scope: !3762, file: !179, line: 166, column: 13)
!3766 = !DILocation(line: 169, column: 25, scope: !3765)
!3767 = !DILocation(line: 170, column: 13, scope: !3765)
!3768 = !DILocalVariable(name: "tmp", scope: !3769, file: !179, line: 173, type: !84)
!3769 = distinct !DILexicalBlock(scope: !3762, file: !179, line: 172, column: 13)
!3770 = !DILocation(line: 173, column: 33, scope: !3769)
!3771 = !DILocation(line: 174, column: 29, scope: !3772)
!3772 = distinct !DILexicalBlock(scope: !3769, file: !179, line: 174, column: 19)
!3773 = !DILocation(line: 174, column: 19, scope: !3772)
!3774 = !DILocation(line: 174, column: 52, scope: !3772)
!3775 = !DILocation(line: 175, column: 19, scope: !3772)
!3776 = !DILocation(line: 175, column: 22, scope: !3772)
!3777 = !DILocation(line: 175, column: 26, scope: !3772)
!3778 = !DILocation(line: 175, column: 36, scope: !3772)
!3779 = !DILocation(line: 175, column: 47, scope: !3772)
!3780 = !DILocation(line: 175, column: 39, scope: !3772)
!3781 = !DILocation(line: 175, column: 51, scope: !3772)
!3782 = !DILocation(line: 174, column: 19, scope: !3769)
!3783 = !DILocation(line: 176, column: 24, scope: !3772)
!3784 = !DILocation(line: 176, column: 22, scope: !3772)
!3785 = !DILocation(line: 176, column: 17, scope: !3772)
!3786 = !DILocation(line: 178, column: 29, scope: !3772)
!3787 = !DILocation(line: 178, column: 27, scope: !3772)
!3788 = !DILocation(line: 180, column: 9, scope: !3753)
!3789 = !DILocation(line: 183, column: 18, scope: !3790)
!3790 = distinct !DILexicalBlock(scope: !3749, file: !179, line: 182, column: 9)
!3791 = !DILocation(line: 183, column: 23, scope: !3790)
!3792 = !DILocation(line: 183, column: 16, scope: !3790)
!3793 = !DILocation(line: 184, column: 15, scope: !3794)
!3794 = distinct !DILexicalBlock(scope: !3790, file: !179, line: 184, column: 15)
!3795 = !DILocation(line: 184, column: 17, scope: !3794)
!3796 = !DILocation(line: 184, column: 25, scope: !3794)
!3797 = !DILocation(line: 184, column: 28, scope: !3794)
!3798 = !DILocation(line: 184, column: 38, scope: !3794)
!3799 = !DILocation(line: 184, column: 15, scope: !3790)
!3800 = !DILocalVariable(name: "buf", scope: !3801, file: !179, line: 188, type: !53)
!3801 = distinct !DILexicalBlock(scope: !3794, file: !179, line: 185, column: 13)
!3802 = !DILocation(line: 188, column: 20, scope: !3801)
!3803 = !DILocation(line: 189, column: 22, scope: !3801)
!3804 = !DILocation(line: 189, column: 27, scope: !3801)
!3805 = !DILocation(line: 189, column: 20, scope: !3801)
!3806 = !DILocation(line: 190, column: 31, scope: !3801)
!3807 = !DILocation(line: 190, column: 21, scope: !3801)
!3808 = !DILocation(line: 190, column: 19, scope: !3801)
!3809 = !DILocation(line: 191, column: 32, scope: !3801)
!3810 = !DILocation(line: 191, column: 38, scope: !3801)
!3811 = !DILocation(line: 191, column: 43, scope: !3801)
!3812 = !DILocation(line: 191, column: 64, scope: !3801)
!3813 = !DILocation(line: 191, column: 70, scope: !3801)
!3814 = !DILocation(line: 191, column: 53, scope: !3801)
!3815 = !DILocation(line: 191, column: 23, scope: !3801)
!3816 = !DILocation(line: 191, column: 21, scope: !3801)
!3817 = !DILocation(line: 192, column: 15, scope: !3801)
!3818 = !DILocation(line: 193, column: 13, scope: !3801)
!3819 = !DILocation(line: 195, column: 7, scope: !3742)
!3820 = !DILocation(line: 196, column: 5, scope: !3742)
!3821 = !DILocation(line: 198, column: 7, scope: !3822)
!3822 = distinct !DILexicalBlock(scope: !178, file: !179, line: 198, column: 7)
!3823 = !DILocation(line: 198, column: 9, scope: !3822)
!3824 = !DILocation(line: 198, column: 17, scope: !3822)
!3825 = !DILocation(line: 198, column: 20, scope: !3822)
!3826 = !DILocation(line: 198, column: 30, scope: !3822)
!3827 = !DILocation(line: 198, column: 7, scope: !178)
!3828 = !DILocation(line: 202, column: 15, scope: !3829)
!3829 = distinct !DILexicalBlock(scope: !3822, file: !179, line: 199, column: 5)
!3830 = !DILocation(line: 202, column: 14, scope: !3829)
!3831 = !DILocation(line: 202, column: 17, scope: !3829)
!3832 = !DILocation(line: 202, column: 43, scope: !3829)
!3833 = !DILocation(line: 202, column: 33, scope: !3829)
!3834 = !DILocation(line: 202, column: 11, scope: !3829)
!3835 = !DILocation(line: 203, column: 11, scope: !3836)
!3836 = distinct !DILexicalBlock(scope: !3829, file: !179, line: 203, column: 11)
!3837 = !DILocation(line: 203, column: 15, scope: !3836)
!3838 = !DILocation(line: 203, column: 11, scope: !3829)
!3839 = !DILocalVariable(name: "tmp", scope: !3840, file: !179, line: 205, type: !84)
!3840 = distinct !DILexicalBlock(scope: !3836, file: !179, line: 204, column: 9)
!3841 = !DILocation(line: 205, column: 29, scope: !3840)
!3842 = !DILocation(line: 206, column: 25, scope: !3843)
!3843 = distinct !DILexicalBlock(scope: !3840, file: !179, line: 206, column: 15)
!3844 = !DILocation(line: 206, column: 15, scope: !3843)
!3845 = !DILocation(line: 206, column: 48, scope: !3843)
!3846 = !DILocation(line: 207, column: 15, scope: !3843)
!3847 = !DILocation(line: 207, column: 18, scope: !3843)
!3848 = !DILocation(line: 207, column: 22, scope: !3843)
!3849 = !DILocation(line: 207, column: 32, scope: !3843)
!3850 = !DILocation(line: 207, column: 43, scope: !3843)
!3851 = !DILocation(line: 207, column: 35, scope: !3843)
!3852 = !DILocation(line: 207, column: 47, scope: !3843)
!3853 = !DILocation(line: 206, column: 15, scope: !3840)
!3854 = !DILocation(line: 208, column: 20, scope: !3843)
!3855 = !DILocation(line: 208, column: 18, scope: !3843)
!3856 = !DILocation(line: 208, column: 13, scope: !3843)
!3857 = !DILocation(line: 210, column: 25, scope: !3843)
!3858 = !DILocation(line: 210, column: 23, scope: !3843)
!3859 = !DILocation(line: 211, column: 9, scope: !3840)
!3860 = !DILocation(line: 213, column: 16, scope: !3836)
!3861 = !DILocation(line: 213, column: 21, scope: !3836)
!3862 = !DILocation(line: 213, column: 14, scope: !3836)
!3863 = !DILocation(line: 214, column: 7, scope: !3829)
!3864 = !DILocation(line: 215, column: 24, scope: !3829)
!3865 = !DILocation(line: 215, column: 15, scope: !3829)
!3866 = !DILocation(line: 215, column: 13, scope: !3829)
!3867 = !DILocation(line: 216, column: 5, scope: !3829)
!3868 = !DILocation(line: 218, column: 7, scope: !3869)
!3869 = distinct !DILexicalBlock(scope: !178, file: !179, line: 218, column: 7)
!3870 = !DILocation(line: 218, column: 17, scope: !3869)
!3871 = !DILocation(line: 218, column: 7, scope: !178)
!3872 = !DILocation(line: 220, column: 14, scope: !3873)
!3873 = distinct !DILexicalBlock(scope: !3869, file: !179, line: 219, column: 5)
!3874 = !DILocation(line: 220, column: 8, scope: !3873)
!3875 = !DILocation(line: 220, column: 12, scope: !3873)
!3876 = !DILocation(line: 221, column: 11, scope: !3877)
!3877 = distinct !DILexicalBlock(scope: !3873, file: !179, line: 221, column: 11)
!3878 = !DILocation(line: 221, column: 11, scope: !3873)
!3879 = !DILocation(line: 222, column: 16, scope: !3877)
!3880 = !DILocation(line: 222, column: 10, scope: !3877)
!3881 = !DILocation(line: 222, column: 14, scope: !3877)
!3882 = !DILocation(line: 222, column: 9, scope: !3877)
!3883 = !DILocation(line: 223, column: 11, scope: !3884)
!3884 = distinct !DILexicalBlock(scope: !3873, file: !179, line: 223, column: 11)
!3885 = !DILocation(line: 223, column: 11, scope: !3873)
!3886 = !DILocation(line: 225, column: 23, scope: !3887)
!3887 = distinct !DILexicalBlock(scope: !3884, file: !179, line: 224, column: 9)
!3888 = !DILocation(line: 225, column: 12, scope: !3887)
!3889 = !DILocation(line: 225, column: 21, scope: !3887)
!3890 = !DILocation(line: 226, column: 13, scope: !3887)
!3891 = !DILocation(line: 227, column: 9, scope: !3887)
!3892 = !DILocation(line: 228, column: 11, scope: !3893)
!3893 = distinct !DILexicalBlock(scope: !3873, file: !179, line: 228, column: 11)
!3894 = !DILocation(line: 228, column: 11, scope: !3873)
!3895 = !DILocation(line: 230, column: 24, scope: !3896)
!3896 = distinct !DILexicalBlock(scope: !3893, file: !179, line: 229, column: 9)
!3897 = !DILocation(line: 230, column: 12, scope: !3896)
!3898 = !DILocation(line: 230, column: 22, scope: !3896)
!3899 = !DILocation(line: 231, column: 17, scope: !3896)
!3900 = !DILocation(line: 232, column: 9, scope: !3896)
!3901 = !DILocation(line: 233, column: 5, scope: !3873)
!3902 = !DILocation(line: 235, column: 9, scope: !178)
!3903 = !DILocation(line: 235, column: 3, scope: !178)
!3904 = !DILocation(line: 236, column: 9, scope: !178)
!3905 = !DILocation(line: 236, column: 3, scope: !178)
!3906 = !DILocation(line: 237, column: 10, scope: !178)
!3907 = !DILocation(line: 237, column: 22, scope: !178)
!3908 = !DILocation(line: 237, column: 3, scope: !178)
!3909 = !DILocalVariable(name: "spec", arg: 1, scope: !3910, file: !179, line: 102, type: !69)
!3910 = distinct !DISubprogram(name: "parse_with_separator", scope: !179, file: !179, line: 102, type: !180, scopeLine: 105, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3911, retainedNodes: !4)
!3911 = distinct !DICompileUnit(language: DW_LANG_C99, file: !186, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !187, globals: !3912, nameTableKind: None)
!3912 = !{!3913, !3915, !3917}
!3913 = !DIGlobalVariableExpression(var: !3914, expr: !DIExpression())
!3914 = distinct !DIGlobalVariable(name: "E_invalid_user", scope: !3910, file: !179, line: 106, type: !69, isLocal: true, isDefinition: true)
!3915 = !DIGlobalVariableExpression(var: !3916, expr: !DIExpression())
!3916 = distinct !DIGlobalVariable(name: "E_invalid_group", scope: !3910, file: !179, line: 107, type: !69, isLocal: true, isDefinition: true)
!3917 = !DIGlobalVariableExpression(var: !3918, expr: !DIExpression())
!3918 = distinct !DIGlobalVariable(name: "E_bad_spec", scope: !3910, file: !179, line: 108, type: !69, isLocal: true, isDefinition: true)
!3919 = !DILocalVariable(name: "separator", arg: 2, scope: !3910, file: !179, line: 102, type: !69)
!3920 = !DILocalVariable(name: "uid", arg: 3, scope: !3910, file: !179, line: 103, type: !182)
!3921 = !DILocalVariable(name: "gid", arg: 4, scope: !3910, file: !179, line: 103, type: !183)
!3922 = !DILocalVariable(name: "username", arg: 5, scope: !3910, file: !179, line: 104, type: !184)
!3923 = !DILocalVariable(name: "groupname", arg: 6, scope: !3910, file: !179, line: 104, type: !184)
!3924 = !DILocalVariable(name: "error_msg", scope: !3910, file: !179, line: 110, type: !69)
!3925 = !DILocalVariable(name: "pwd", scope: !3910, file: !179, line: 111, type: !3926)
!3926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3927, size: 64)
!3927 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "passwd", file: !659, line: 49, size: 384, elements: !3928)
!3928 = !{!3929, !3930, !3931, !3932, !3933, !3934, !3935}
!3929 = !DIDerivedType(tag: DW_TAG_member, name: "pw_name", scope: !3927, file: !659, line: 51, baseType: !6, size: 64)
!3930 = !DIDerivedType(tag: DW_TAG_member, name: "pw_passwd", scope: !3927, file: !659, line: 52, baseType: !6, size: 64, offset: 64)
!3931 = !DIDerivedType(tag: DW_TAG_member, name: "pw_uid", scope: !3927, file: !659, line: 54, baseType: !14, size: 32, offset: 128)
!3932 = !DIDerivedType(tag: DW_TAG_member, name: "pw_gid", scope: !3927, file: !659, line: 55, baseType: !22, size: 32, offset: 160)
!3933 = !DIDerivedType(tag: DW_TAG_member, name: "pw_gecos", scope: !3927, file: !659, line: 56, baseType: !6, size: 64, offset: 192)
!3934 = !DIDerivedType(tag: DW_TAG_member, name: "pw_dir", scope: !3927, file: !659, line: 57, baseType: !6, size: 64, offset: 256)
!3935 = !DIDerivedType(tag: DW_TAG_member, name: "pw_shell", scope: !3927, file: !659, line: 58, baseType: !6, size: 64, offset: 320)
!3936 = !DILocalVariable(name: "grp", scope: !3910, file: !179, line: 112, type: !3937)
!3937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3938, size: 64)
!3938 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group", file: !1233, line: 42, size: 256, elements: !3939)
!3939 = !{!3940, !3941, !3942, !3943}
!3940 = !DIDerivedType(tag: DW_TAG_member, name: "gr_name", scope: !3938, file: !1233, line: 44, baseType: !6, size: 64)
!3941 = !DIDerivedType(tag: DW_TAG_member, name: "gr_passwd", scope: !3938, file: !1233, line: 45, baseType: !6, size: 64, offset: 64)
!3942 = !DIDerivedType(tag: DW_TAG_member, name: "gr_gid", scope: !3938, file: !1233, line: 46, baseType: !22, size: 32, offset: 128)
!3943 = !DIDerivedType(tag: DW_TAG_member, name: "gr_mem", scope: !3938, file: !1233, line: 47, baseType: !184, size: 64, offset: 192)
!3944 = !DILocalVariable(name: "u", scope: !3910, file: !179, line: 113, type: !6)
!3945 = !DILocalVariable(name: "g", scope: !3910, file: !179, line: 114, type: !69)
!3946 = !DILocalVariable(name: "gname", scope: !3910, file: !179, line: 115, type: !6)
!3947 = !DILocalVariable(name: "unum", scope: !3910, file: !179, line: 116, type: !12)
!3948 = !DILocalVariable(name: "gnum", scope: !3910, file: !179, line: 117, type: !21)
!3949 = distinct !DISubprogram(name: "version_etc_arn", scope: !3950, file: !3950, line: 61, type: !3951, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !210, retainedNodes: !4)
!3950 = !DIFile(filename: "lib/version-etc.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!3951 = !DISubroutineType(types: !3952)
!3952 = !{null, !3953, !69, !69, !69, !4006, !134}
!3953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3954, size: 64)
!3954 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !3955, line: 7, baseType: !3956)
!3955 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "")
!3956 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !3957, line: 49, size: 1728, elements: !3958)
!3957 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "")
!3958 = !{!3959, !3960, !3961, !3962, !3963, !3964, !3965, !3966, !3967, !3968, !3969, !3970, !3971, !3974, !3976, !3977, !3978, !3980, !3981, !3983, !3987, !3990, !3992, !3995, !3998, !3999, !4000, !4001, !4002}
!3959 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !3956, file: !3957, line: 51, baseType: !72, size: 32)
!3960 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !3956, file: !3957, line: 54, baseType: !6, size: 64, offset: 64)
!3961 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !3956, file: !3957, line: 55, baseType: !6, size: 64, offset: 128)
!3962 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !3956, file: !3957, line: 56, baseType: !6, size: 64, offset: 192)
!3963 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !3956, file: !3957, line: 57, baseType: !6, size: 64, offset: 256)
!3964 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !3956, file: !3957, line: 58, baseType: !6, size: 64, offset: 320)
!3965 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !3956, file: !3957, line: 59, baseType: !6, size: 64, offset: 384)
!3966 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !3956, file: !3957, line: 60, baseType: !6, size: 64, offset: 448)
!3967 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !3956, file: !3957, line: 61, baseType: !6, size: 64, offset: 512)
!3968 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !3956, file: !3957, line: 64, baseType: !6, size: 64, offset: 576)
!3969 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !3956, file: !3957, line: 65, baseType: !6, size: 64, offset: 640)
!3970 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !3956, file: !3957, line: 66, baseType: !6, size: 64, offset: 704)
!3971 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !3956, file: !3957, line: 68, baseType: !3972, size: 64, offset: 768)
!3972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3973, size: 64)
!3973 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !3957, line: 36, flags: DIFlagFwdDecl)
!3974 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !3956, file: !3957, line: 70, baseType: !3975, size: 64, offset: 832)
!3975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3956, size: 64)
!3976 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !3956, file: !3957, line: 72, baseType: !72, size: 32, offset: 896)
!3977 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !3956, file: !3957, line: 73, baseType: !72, size: 32, offset: 928)
!3978 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !3956, file: !3957, line: 74, baseType: !3979, size: 64, offset: 960)
!3979 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !15, line: 152, baseType: !981)
!3980 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !3956, file: !3957, line: 77, baseType: !133, size: 16, offset: 1024)
!3981 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !3956, file: !3957, line: 78, baseType: !3982, size: 8, offset: 1040)
!3982 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!3983 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !3956, file: !3957, line: 79, baseType: !3984, size: 8, offset: 1048)
!3984 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 8, elements: !3985)
!3985 = !{!3986}
!3986 = !DISubrange(count: 1)
!3987 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !3956, file: !3957, line: 81, baseType: !3988, size: 64, offset: 1088)
!3988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3989, size: 64)
!3989 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !3957, line: 43, baseType: null)
!3990 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !3956, file: !3957, line: 89, baseType: !3991, size: 64, offset: 1152)
!3991 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !15, line: 153, baseType: !981)
!3992 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !3956, file: !3957, line: 91, baseType: !3993, size: 64, offset: 1216)
!3993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3994, size: 64)
!3994 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !3957, line: 37, flags: DIFlagFwdDecl)
!3995 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !3956, file: !3957, line: 92, baseType: !3996, size: 64, offset: 1280)
!3996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3997, size: 64)
!3997 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !3957, line: 38, flags: DIFlagFwdDecl)
!3998 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !3956, file: !3957, line: 93, baseType: !3975, size: 64, offset: 1344)
!3999 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !3956, file: !3957, line: 94, baseType: !8, size: 64, offset: 1408)
!4000 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !3956, file: !3957, line: 95, baseType: !134, size: 64, offset: 1472)
!4001 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !3956, file: !3957, line: 96, baseType: !72, size: 32, offset: 1536)
!4002 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !3956, file: !3957, line: 98, baseType: !4003, size: 160, offset: 1568)
!4003 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 160, elements: !4004)
!4004 = !{!4005}
!4005 = !DISubrange(count: 20)
!4006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !141, size: 64)
!4007 = !DILocalVariable(name: "stream", arg: 1, scope: !3949, file: !3950, line: 61, type: !3953)
!4008 = !DILocation(line: 61, column: 24, scope: !3949)
!4009 = !DILocalVariable(name: "command_name", arg: 2, scope: !3949, file: !3950, line: 62, type: !69)
!4010 = !DILocation(line: 62, column: 30, scope: !3949)
!4011 = !DILocalVariable(name: "package", arg: 3, scope: !3949, file: !3950, line: 62, type: !69)
!4012 = !DILocation(line: 62, column: 56, scope: !3949)
!4013 = !DILocalVariable(name: "version", arg: 4, scope: !3949, file: !3950, line: 63, type: !69)
!4014 = !DILocation(line: 63, column: 30, scope: !3949)
!4015 = !DILocalVariable(name: "authors", arg: 5, scope: !3949, file: !3950, line: 64, type: !4006)
!4016 = !DILocation(line: 64, column: 39, scope: !3949)
!4017 = !DILocalVariable(name: "n_authors", arg: 6, scope: !3949, file: !3950, line: 64, type: !134)
!4018 = !DILocation(line: 64, column: 55, scope: !3949)
!4019 = !DILocation(line: 66, column: 7, scope: !4020)
!4020 = distinct !DILexicalBlock(scope: !3949, file: !3950, line: 66, column: 7)
!4021 = !DILocation(line: 66, column: 7, scope: !3949)
!4022 = !DILocation(line: 67, column: 14, scope: !4020)
!4023 = !DILocation(line: 67, column: 38, scope: !4020)
!4024 = !DILocation(line: 67, column: 52, scope: !4020)
!4025 = !DILocation(line: 67, column: 61, scope: !4020)
!4026 = !DILocation(line: 67, column: 5, scope: !4020)
!4027 = !DILocation(line: 69, column: 14, scope: !4020)
!4028 = !DILocation(line: 69, column: 33, scope: !4020)
!4029 = !DILocation(line: 69, column: 42, scope: !4020)
!4030 = !DILocation(line: 69, column: 5, scope: !4020)
!4031 = !DILocation(line: 83, column: 12, scope: !3949)
!4032 = !DILocation(line: 83, column: 43, scope: !3949)
!4033 = !DILocation(line: 83, column: 3, scope: !3949)
!4034 = !DILocation(line: 85, column: 3, scope: !3949)
!4035 = !DILocation(line: 88, column: 12, scope: !3949)
!4036 = !DILocation(line: 88, column: 20, scope: !3949)
!4037 = !DILocation(line: 88, column: 3, scope: !3949)
!4038 = !DILocation(line: 95, column: 3, scope: !3949)
!4039 = !DILocation(line: 97, column: 11, scope: !3949)
!4040 = !DILocation(line: 97, column: 3, scope: !3949)
!4041 = !DILocation(line: 102, column: 7, scope: !4042)
!4042 = distinct !DILexicalBlock(scope: !3949, file: !3950, line: 98, column: 5)
!4043 = !DILocation(line: 105, column: 16, scope: !4042)
!4044 = !DILocation(line: 105, column: 24, scope: !4042)
!4045 = !DILocation(line: 105, column: 47, scope: !4042)
!4046 = !DILocation(line: 105, column: 7, scope: !4042)
!4047 = !DILocation(line: 106, column: 7, scope: !4042)
!4048 = !DILocation(line: 109, column: 16, scope: !4042)
!4049 = !DILocation(line: 109, column: 24, scope: !4042)
!4050 = !DILocation(line: 109, column: 54, scope: !4042)
!4051 = !DILocation(line: 109, column: 66, scope: !4042)
!4052 = !DILocation(line: 109, column: 7, scope: !4042)
!4053 = !DILocation(line: 110, column: 7, scope: !4042)
!4054 = !DILocation(line: 113, column: 16, scope: !4042)
!4055 = !DILocation(line: 113, column: 24, scope: !4042)
!4056 = !DILocation(line: 114, column: 16, scope: !4042)
!4057 = !DILocation(line: 114, column: 28, scope: !4042)
!4058 = !DILocation(line: 114, column: 40, scope: !4042)
!4059 = !DILocation(line: 113, column: 7, scope: !4042)
!4060 = !DILocation(line: 115, column: 7, scope: !4042)
!4061 = !DILocation(line: 120, column: 16, scope: !4042)
!4062 = !DILocation(line: 120, column: 24, scope: !4042)
!4063 = !DILocation(line: 121, column: 16, scope: !4042)
!4064 = !DILocation(line: 121, column: 28, scope: !4042)
!4065 = !DILocation(line: 121, column: 40, scope: !4042)
!4066 = !DILocation(line: 121, column: 52, scope: !4042)
!4067 = !DILocation(line: 120, column: 7, scope: !4042)
!4068 = !DILocation(line: 122, column: 7, scope: !4042)
!4069 = !DILocation(line: 127, column: 16, scope: !4042)
!4070 = !DILocation(line: 127, column: 24, scope: !4042)
!4071 = !DILocation(line: 128, column: 16, scope: !4042)
!4072 = !DILocation(line: 128, column: 28, scope: !4042)
!4073 = !DILocation(line: 128, column: 40, scope: !4042)
!4074 = !DILocation(line: 128, column: 52, scope: !4042)
!4075 = !DILocation(line: 128, column: 64, scope: !4042)
!4076 = !DILocation(line: 127, column: 7, scope: !4042)
!4077 = !DILocation(line: 129, column: 7, scope: !4042)
!4078 = !DILocation(line: 134, column: 16, scope: !4042)
!4079 = !DILocation(line: 134, column: 24, scope: !4042)
!4080 = !DILocation(line: 135, column: 16, scope: !4042)
!4081 = !DILocation(line: 135, column: 28, scope: !4042)
!4082 = !DILocation(line: 135, column: 40, scope: !4042)
!4083 = !DILocation(line: 135, column: 52, scope: !4042)
!4084 = !DILocation(line: 135, column: 64, scope: !4042)
!4085 = !DILocation(line: 136, column: 16, scope: !4042)
!4086 = !DILocation(line: 134, column: 7, scope: !4042)
!4087 = !DILocation(line: 137, column: 7, scope: !4042)
!4088 = !DILocation(line: 142, column: 16, scope: !4042)
!4089 = !DILocation(line: 142, column: 24, scope: !4042)
!4090 = !DILocation(line: 143, column: 16, scope: !4042)
!4091 = !DILocation(line: 143, column: 28, scope: !4042)
!4092 = !DILocation(line: 143, column: 40, scope: !4042)
!4093 = !DILocation(line: 143, column: 52, scope: !4042)
!4094 = !DILocation(line: 143, column: 64, scope: !4042)
!4095 = !DILocation(line: 144, column: 16, scope: !4042)
!4096 = !DILocation(line: 144, column: 28, scope: !4042)
!4097 = !DILocation(line: 142, column: 7, scope: !4042)
!4098 = !DILocation(line: 145, column: 7, scope: !4042)
!4099 = !DILocation(line: 150, column: 16, scope: !4042)
!4100 = !DILocation(line: 150, column: 24, scope: !4042)
!4101 = !DILocation(line: 152, column: 17, scope: !4042)
!4102 = !DILocation(line: 152, column: 29, scope: !4042)
!4103 = !DILocation(line: 152, column: 41, scope: !4042)
!4104 = !DILocation(line: 152, column: 53, scope: !4042)
!4105 = !DILocation(line: 152, column: 65, scope: !4042)
!4106 = !DILocation(line: 153, column: 17, scope: !4042)
!4107 = !DILocation(line: 153, column: 29, scope: !4042)
!4108 = !DILocation(line: 153, column: 41, scope: !4042)
!4109 = !DILocation(line: 150, column: 7, scope: !4042)
!4110 = !DILocation(line: 154, column: 7, scope: !4042)
!4111 = !DILocation(line: 159, column: 16, scope: !4042)
!4112 = !DILocation(line: 159, column: 24, scope: !4042)
!4113 = !DILocation(line: 161, column: 16, scope: !4042)
!4114 = !DILocation(line: 161, column: 28, scope: !4042)
!4115 = !DILocation(line: 161, column: 40, scope: !4042)
!4116 = !DILocation(line: 161, column: 52, scope: !4042)
!4117 = !DILocation(line: 161, column: 64, scope: !4042)
!4118 = !DILocation(line: 162, column: 16, scope: !4042)
!4119 = !DILocation(line: 162, column: 28, scope: !4042)
!4120 = !DILocation(line: 162, column: 40, scope: !4042)
!4121 = !DILocation(line: 162, column: 52, scope: !4042)
!4122 = !DILocation(line: 159, column: 7, scope: !4042)
!4123 = !DILocation(line: 163, column: 7, scope: !4042)
!4124 = !DILocation(line: 170, column: 16, scope: !4042)
!4125 = !DILocation(line: 170, column: 24, scope: !4042)
!4126 = !DILocation(line: 172, column: 17, scope: !4042)
!4127 = !DILocation(line: 172, column: 29, scope: !4042)
!4128 = !DILocation(line: 172, column: 41, scope: !4042)
!4129 = !DILocation(line: 172, column: 53, scope: !4042)
!4130 = !DILocation(line: 172, column: 65, scope: !4042)
!4131 = !DILocation(line: 173, column: 17, scope: !4042)
!4132 = !DILocation(line: 173, column: 29, scope: !4042)
!4133 = !DILocation(line: 173, column: 41, scope: !4042)
!4134 = !DILocation(line: 173, column: 53, scope: !4042)
!4135 = !DILocation(line: 170, column: 7, scope: !4042)
!4136 = !DILocation(line: 174, column: 7, scope: !4042)
!4137 = !DILocation(line: 176, column: 1, scope: !3949)
!4138 = !DILocalVariable(name: "stream", arg: 1, scope: !4139, file: !3950, line: 61, type: !4142)
!4139 = distinct !DISubprogram(name: "version_etc_arn", scope: !3950, file: !3950, line: 61, type: !4140, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !4176, retainedNodes: !4)
!4140 = !DISubroutineType(types: !4141)
!4141 = !{null, !4142, !69, !69, !69, !4006, !134}
!4142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4143, size: 64)
!4143 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !3955, line: 7, baseType: !4144)
!4144 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !3957, line: 49, size: 1728, elements: !4145)
!4145 = !{!4146, !4147, !4148, !4149, !4150, !4151, !4152, !4153, !4154, !4155, !4156, !4157, !4158, !4159, !4161, !4162, !4163, !4164, !4165, !4166, !4167, !4168, !4169, !4170, !4171, !4172, !4173, !4174, !4175}
!4146 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !4144, file: !3957, line: 51, baseType: !72, size: 32)
!4147 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !4144, file: !3957, line: 54, baseType: !6, size: 64, offset: 64)
!4148 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !4144, file: !3957, line: 55, baseType: !6, size: 64, offset: 128)
!4149 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !4144, file: !3957, line: 56, baseType: !6, size: 64, offset: 192)
!4150 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !4144, file: !3957, line: 57, baseType: !6, size: 64, offset: 256)
!4151 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !4144, file: !3957, line: 58, baseType: !6, size: 64, offset: 320)
!4152 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !4144, file: !3957, line: 59, baseType: !6, size: 64, offset: 384)
!4153 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !4144, file: !3957, line: 60, baseType: !6, size: 64, offset: 448)
!4154 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !4144, file: !3957, line: 61, baseType: !6, size: 64, offset: 512)
!4155 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !4144, file: !3957, line: 64, baseType: !6, size: 64, offset: 576)
!4156 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !4144, file: !3957, line: 65, baseType: !6, size: 64, offset: 640)
!4157 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !4144, file: !3957, line: 66, baseType: !6, size: 64, offset: 704)
!4158 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !4144, file: !3957, line: 68, baseType: !3972, size: 64, offset: 768)
!4159 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !4144, file: !3957, line: 70, baseType: !4160, size: 64, offset: 832)
!4160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4144, size: 64)
!4161 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !4144, file: !3957, line: 72, baseType: !72, size: 32, offset: 896)
!4162 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !4144, file: !3957, line: 73, baseType: !72, size: 32, offset: 928)
!4163 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !4144, file: !3957, line: 74, baseType: !3979, size: 64, offset: 960)
!4164 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !4144, file: !3957, line: 77, baseType: !133, size: 16, offset: 1024)
!4165 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !4144, file: !3957, line: 78, baseType: !3982, size: 8, offset: 1040)
!4166 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !4144, file: !3957, line: 79, baseType: !3984, size: 8, offset: 1048)
!4167 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !4144, file: !3957, line: 81, baseType: !3988, size: 64, offset: 1088)
!4168 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !4144, file: !3957, line: 89, baseType: !3991, size: 64, offset: 1152)
!4169 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !4144, file: !3957, line: 91, baseType: !3993, size: 64, offset: 1216)
!4170 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !4144, file: !3957, line: 92, baseType: !3996, size: 64, offset: 1280)
!4171 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !4144, file: !3957, line: 93, baseType: !4160, size: 64, offset: 1344)
!4172 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !4144, file: !3957, line: 94, baseType: !8, size: 64, offset: 1408)
!4173 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !4144, file: !3957, line: 95, baseType: !134, size: 64, offset: 1472)
!4174 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !4144, file: !3957, line: 96, baseType: !72, size: 32, offset: 1536)
!4175 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !4144, file: !3957, line: 98, baseType: !4003, size: 160, offset: 1568)
!4176 = distinct !DICompileUnit(language: DW_LANG_C99, file: !211, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !212, nameTableKind: None)
!4177 = !DILocalVariable(name: "command_name", arg: 2, scope: !4139, file: !3950, line: 62, type: !69)
!4178 = !DILocalVariable(name: "package", arg: 3, scope: !4139, file: !3950, line: 62, type: !69)
!4179 = !DILocalVariable(name: "version", arg: 4, scope: !4139, file: !3950, line: 63, type: !69)
!4180 = !DILocalVariable(name: "authors", arg: 5, scope: !4139, file: !3950, line: 64, type: !4006)
!4181 = !DILocalVariable(name: "n_authors", arg: 6, scope: !4139, file: !3950, line: 64, type: !134)
!4182 = distinct !DISubprogram(name: "version_etc_va", scope: !3950, file: !3950, line: 199, type: !4183, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !210, retainedNodes: !4)
!4183 = !DISubroutineType(types: !4184)
!4184 = !{null, !3953, !69, !69, !69, !4185}
!4185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4186, size: 64)
!4186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !211, line: 192, size: 192, elements: !4187)
!4187 = !{!4188, !4189, !4190, !4191}
!4188 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !4186, file: !211, line: 192, baseType: !16, size: 32)
!4189 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !4186, file: !211, line: 192, baseType: !16, size: 32, offset: 32)
!4190 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !4186, file: !211, line: 192, baseType: !8, size: 64, offset: 64)
!4191 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !4186, file: !211, line: 192, baseType: !8, size: 64, offset: 128)
!4192 = !DILocalVariable(name: "stream", arg: 1, scope: !4182, file: !3950, line: 199, type: !3953)
!4193 = !DILocation(line: 199, column: 23, scope: !4182)
!4194 = !DILocalVariable(name: "command_name", arg: 2, scope: !4182, file: !3950, line: 200, type: !69)
!4195 = !DILocation(line: 200, column: 29, scope: !4182)
!4196 = !DILocalVariable(name: "package", arg: 3, scope: !4182, file: !3950, line: 200, type: !69)
!4197 = !DILocation(line: 200, column: 55, scope: !4182)
!4198 = !DILocalVariable(name: "version", arg: 4, scope: !4182, file: !3950, line: 201, type: !69)
!4199 = !DILocation(line: 201, column: 29, scope: !4182)
!4200 = !DILocalVariable(name: "authors", arg: 5, scope: !4182, file: !3950, line: 201, type: !4185)
!4201 = !DILocation(line: 201, column: 46, scope: !4182)
!4202 = !DILocalVariable(name: "n_authors", scope: !4182, file: !3950, line: 203, type: !134)
!4203 = !DILocation(line: 203, column: 10, scope: !4182)
!4204 = !DILocalVariable(name: "authtab", scope: !4182, file: !3950, line: 204, type: !4205)
!4205 = !DICompositeType(tag: DW_TAG_array_type, baseType: !69, size: 640, elements: !76)
!4206 = !DILocation(line: 204, column: 15, scope: !4182)
!4207 = !DILocation(line: 206, column: 18, scope: !4208)
!4208 = distinct !DILexicalBlock(scope: !4182, file: !3950, line: 206, column: 3)
!4209 = !DILocation(line: 206, column: 8, scope: !4208)
!4210 = !DILocation(line: 207, column: 8, scope: !4211)
!4211 = distinct !DILexicalBlock(scope: !4208, file: !3950, line: 206, column: 3)
!4212 = !DILocation(line: 207, column: 18, scope: !4211)
!4213 = !DILocation(line: 208, column: 10, scope: !4211)
!4214 = !DILocation(line: 208, column: 35, scope: !4211)
!4215 = !DILocation(line: 208, column: 22, scope: !4211)
!4216 = !DILocation(line: 208, column: 14, scope: !4211)
!4217 = !DILocation(line: 208, column: 33, scope: !4211)
!4218 = !DILocation(line: 208, column: 67, scope: !4211)
!4219 = !DILocation(line: 0, scope: !4211)
!4220 = !DILocation(line: 206, column: 3, scope: !4208)
!4221 = !DILocation(line: 209, column: 17, scope: !4211)
!4222 = !DILocation(line: 206, column: 3, scope: !4211)
!4223 = distinct !{!4223, !4220, !4224}
!4224 = !DILocation(line: 210, column: 5, scope: !4208)
!4225 = !DILocation(line: 211, column: 20, scope: !4182)
!4226 = !DILocation(line: 211, column: 28, scope: !4182)
!4227 = !DILocation(line: 211, column: 42, scope: !4182)
!4228 = !DILocation(line: 211, column: 51, scope: !4182)
!4229 = !DILocation(line: 212, column: 20, scope: !4182)
!4230 = !DILocation(line: 212, column: 29, scope: !4182)
!4231 = !DILocation(line: 211, column: 3, scope: !4182)
!4232 = !DILocation(line: 213, column: 1, scope: !4182)
!4233 = !DILocalVariable(name: "stream", arg: 1, scope: !4234, file: !3950, line: 199, type: !4237)
!4234 = distinct !DISubprogram(name: "version_etc_va", scope: !3950, file: !3950, line: 199, type: !4235, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !4278, retainedNodes: !4)
!4235 = !DISubroutineType(types: !4236)
!4236 = !{null, !4237, !69, !69, !69, !4271}
!4237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4238, size: 64)
!4238 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !3955, line: 7, baseType: !4239)
!4239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !3957, line: 49, size: 1728, elements: !4240)
!4240 = !{!4241, !4242, !4243, !4244, !4245, !4246, !4247, !4248, !4249, !4250, !4251, !4252, !4253, !4254, !4256, !4257, !4258, !4259, !4260, !4261, !4262, !4263, !4264, !4265, !4266, !4267, !4268, !4269, !4270}
!4241 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !4239, file: !3957, line: 51, baseType: !72, size: 32)
!4242 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !4239, file: !3957, line: 54, baseType: !6, size: 64, offset: 64)
!4243 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !4239, file: !3957, line: 55, baseType: !6, size: 64, offset: 128)
!4244 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !4239, file: !3957, line: 56, baseType: !6, size: 64, offset: 192)
!4245 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !4239, file: !3957, line: 57, baseType: !6, size: 64, offset: 256)
!4246 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !4239, file: !3957, line: 58, baseType: !6, size: 64, offset: 320)
!4247 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !4239, file: !3957, line: 59, baseType: !6, size: 64, offset: 384)
!4248 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !4239, file: !3957, line: 60, baseType: !6, size: 64, offset: 448)
!4249 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !4239, file: !3957, line: 61, baseType: !6, size: 64, offset: 512)
!4250 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !4239, file: !3957, line: 64, baseType: !6, size: 64, offset: 576)
!4251 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !4239, file: !3957, line: 65, baseType: !6, size: 64, offset: 640)
!4252 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !4239, file: !3957, line: 66, baseType: !6, size: 64, offset: 704)
!4253 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !4239, file: !3957, line: 68, baseType: !3972, size: 64, offset: 768)
!4254 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !4239, file: !3957, line: 70, baseType: !4255, size: 64, offset: 832)
!4255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4239, size: 64)
!4256 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !4239, file: !3957, line: 72, baseType: !72, size: 32, offset: 896)
!4257 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !4239, file: !3957, line: 73, baseType: !72, size: 32, offset: 928)
!4258 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !4239, file: !3957, line: 74, baseType: !3979, size: 64, offset: 960)
!4259 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !4239, file: !3957, line: 77, baseType: !133, size: 16, offset: 1024)
!4260 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !4239, file: !3957, line: 78, baseType: !3982, size: 8, offset: 1040)
!4261 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !4239, file: !3957, line: 79, baseType: !3984, size: 8, offset: 1048)
!4262 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !4239, file: !3957, line: 81, baseType: !3988, size: 64, offset: 1088)
!4263 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !4239, file: !3957, line: 89, baseType: !3991, size: 64, offset: 1152)
!4264 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !4239, file: !3957, line: 91, baseType: !3993, size: 64, offset: 1216)
!4265 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !4239, file: !3957, line: 92, baseType: !3996, size: 64, offset: 1280)
!4266 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !4239, file: !3957, line: 93, baseType: !4255, size: 64, offset: 1344)
!4267 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !4239, file: !3957, line: 94, baseType: !8, size: 64, offset: 1408)
!4268 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !4239, file: !3957, line: 95, baseType: !134, size: 64, offset: 1472)
!4269 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !4239, file: !3957, line: 96, baseType: !72, size: 32, offset: 1536)
!4270 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !4239, file: !3957, line: 98, baseType: !4003, size: 160, offset: 1568)
!4271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4272, size: 64)
!4272 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !211, line: 192, size: 192, elements: !4273)
!4273 = !{!4274, !4275, !4276, !4277}
!4274 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !4272, file: !211, line: 192, baseType: !16, size: 32)
!4275 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !4272, file: !211, line: 192, baseType: !16, size: 32, offset: 32)
!4276 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !4272, file: !211, line: 192, baseType: !8, size: 64, offset: 64)
!4277 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !4272, file: !211, line: 192, baseType: !8, size: 64, offset: 128)
!4278 = distinct !DICompileUnit(language: DW_LANG_C99, file: !211, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !212, nameTableKind: None)
!4279 = !DILocalVariable(name: "command_name", arg: 2, scope: !4234, file: !3950, line: 200, type: !69)
!4280 = !DILocalVariable(name: "package", arg: 3, scope: !4234, file: !3950, line: 200, type: !69)
!4281 = !DILocalVariable(name: "version", arg: 4, scope: !4234, file: !3950, line: 201, type: !69)
!4282 = !DILocalVariable(name: "authors", arg: 5, scope: !4234, file: !3950, line: 201, type: !4271)
!4283 = !DILocalVariable(name: "n_authors", scope: !4234, file: !3950, line: 203, type: !134)
!4284 = !DILocalVariable(name: "authtab", scope: !4234, file: !3950, line: 204, type: !4205)
!4285 = distinct !DISubprogram(name: "version_etc", scope: !3950, file: !3950, line: 230, type: !4286, scopeLine: 233, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !210, retainedNodes: !4)
!4286 = !DISubroutineType(types: !4287)
!4287 = !{null, !3953, !69, !69, !69, null}
!4288 = !DILocalVariable(name: "stream", arg: 1, scope: !4285, file: !3950, line: 230, type: !3953)
!4289 = !DILocation(line: 230, column: 20, scope: !4285)
!4290 = !DILocalVariable(name: "command_name", arg: 2, scope: !4285, file: !3950, line: 231, type: !69)
!4291 = !DILocation(line: 231, column: 26, scope: !4285)
!4292 = !DILocalVariable(name: "package", arg: 3, scope: !4285, file: !3950, line: 231, type: !69)
!4293 = !DILocation(line: 231, column: 52, scope: !4285)
!4294 = !DILocalVariable(name: "version", arg: 4, scope: !4285, file: !3950, line: 232, type: !69)
!4295 = !DILocation(line: 232, column: 26, scope: !4285)
!4296 = !DILocalVariable(name: "authors", scope: !4285, file: !3950, line: 234, type: !4297)
!4297 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !979, line: 52, baseType: !4298)
!4298 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4299, line: 32, baseType: !4300)
!4299 = !DIFile(filename: "/usr/lib/llvm-9/lib/clang/9.0.1/include/stdarg.h", directory: "")
!4300 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !211, line: 234, baseType: !4301)
!4301 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4186, size: 192, elements: !3985)
!4302 = !DILocation(line: 234, column: 11, scope: !4285)
!4303 = !DILocation(line: 236, column: 3, scope: !4285)
!4304 = !DILocation(line: 237, column: 19, scope: !4285)
!4305 = !DILocation(line: 237, column: 27, scope: !4285)
!4306 = !DILocation(line: 237, column: 41, scope: !4285)
!4307 = !DILocation(line: 237, column: 50, scope: !4285)
!4308 = !DILocation(line: 237, column: 59, scope: !4285)
!4309 = !DILocation(line: 237, column: 3, scope: !4285)
!4310 = !DILocation(line: 238, column: 3, scope: !4285)
!4311 = !DILocation(line: 239, column: 1, scope: !4285)
!4312 = distinct !DISubprogram(name: "xmalloc", scope: !4313, file: !4313, line: 39, type: !4314, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !213, retainedNodes: !4)
!4313 = !DIFile(filename: "lib/xmalloc.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!4314 = !DISubroutineType(types: !4315)
!4315 = !{!8, !134}
!4316 = !DILocalVariable(name: "n", arg: 1, scope: !4312, file: !4313, line: 39, type: !134)
!4317 = !DILocation(line: 39, column: 17, scope: !4312)
!4318 = !DILocalVariable(name: "p", scope: !4312, file: !4313, line: 41, type: !8)
!4319 = !DILocation(line: 41, column: 9, scope: !4312)
!4320 = !DILocation(line: 41, column: 21, scope: !4312)
!4321 = !DILocation(line: 41, column: 13, scope: !4312)
!4322 = !DILocation(line: 42, column: 8, scope: !4323)
!4323 = distinct !DILexicalBlock(scope: !4312, file: !4313, line: 42, column: 7)
!4324 = !DILocation(line: 42, column: 10, scope: !4323)
!4325 = !DILocation(line: 42, column: 13, scope: !4323)
!4326 = !DILocation(line: 42, column: 15, scope: !4323)
!4327 = !DILocation(line: 42, column: 7, scope: !4312)
!4328 = !DILocation(line: 43, column: 5, scope: !4323)
!4329 = !DILocation(line: 44, column: 10, scope: !4312)
!4330 = !DILocation(line: 44, column: 3, scope: !4312)
!4331 = !DILocalVariable(name: "n", arg: 1, scope: !4332, file: !4313, line: 39, type: !134)
!4332 = distinct !DISubprogram(name: "xmalloc", scope: !4313, file: !4313, line: 39, type: !4314, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !4333, retainedNodes: !4)
!4333 = distinct !DICompileUnit(language: DW_LANG_C99, file: !214, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !215, nameTableKind: None)
!4334 = !DILocalVariable(name: "p", scope: !4332, file: !4313, line: 41, type: !8)
!4335 = distinct !DISubprogram(name: "xrealloc", scope: !4313, file: !4313, line: 51, type: !4336, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !213, retainedNodes: !4)
!4336 = !DISubroutineType(types: !4337)
!4337 = !{!8, !8, !134}
!4338 = !DILocalVariable(name: "p", arg: 1, scope: !4335, file: !4313, line: 51, type: !8)
!4339 = !DILocation(line: 51, column: 17, scope: !4335)
!4340 = !DILocalVariable(name: "n", arg: 2, scope: !4335, file: !4313, line: 51, type: !134)
!4341 = !DILocation(line: 51, column: 27, scope: !4335)
!4342 = !DILocation(line: 53, column: 8, scope: !4343)
!4343 = distinct !DILexicalBlock(scope: !4335, file: !4313, line: 53, column: 7)
!4344 = !DILocation(line: 53, column: 10, scope: !4343)
!4345 = !DILocation(line: 53, column: 13, scope: !4343)
!4346 = !DILocation(line: 53, column: 7, scope: !4335)
!4347 = !DILocation(line: 57, column: 13, scope: !4348)
!4348 = distinct !DILexicalBlock(scope: !4343, file: !4313, line: 54, column: 5)
!4349 = !DILocation(line: 57, column: 7, scope: !4348)
!4350 = !DILocation(line: 58, column: 7, scope: !4348)
!4351 = !DILocation(line: 61, column: 16, scope: !4335)
!4352 = !DILocation(line: 61, column: 19, scope: !4335)
!4353 = !DILocation(line: 61, column: 7, scope: !4335)
!4354 = !DILocation(line: 61, column: 5, scope: !4335)
!4355 = !DILocation(line: 62, column: 8, scope: !4356)
!4356 = distinct !DILexicalBlock(scope: !4335, file: !4313, line: 62, column: 7)
!4357 = !DILocation(line: 62, column: 10, scope: !4356)
!4358 = !DILocation(line: 62, column: 13, scope: !4356)
!4359 = !DILocation(line: 62, column: 7, scope: !4335)
!4360 = !DILocation(line: 63, column: 5, scope: !4356)
!4361 = !DILocation(line: 64, column: 10, scope: !4335)
!4362 = !DILocation(line: 64, column: 3, scope: !4335)
!4363 = !DILocation(line: 65, column: 1, scope: !4335)
!4364 = !DILocalVariable(name: "p", arg: 1, scope: !4365, file: !4313, line: 51, type: !8)
!4365 = distinct !DISubprogram(name: "xrealloc", scope: !4313, file: !4313, line: 51, type: !4336, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !4366, retainedNodes: !4)
!4366 = distinct !DICompileUnit(language: DW_LANG_C99, file: !214, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !215, nameTableKind: None)
!4367 = !DILocalVariable(name: "n", arg: 2, scope: !4365, file: !4313, line: 51, type: !134)
!4368 = distinct !DISubprogram(name: "xcharalloc", scope: !4369, file: !4369, line: 216, type: !4370, scopeLine: 217, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !213, retainedNodes: !4)
!4369 = !DIFile(filename: "./lib/xalloc.h", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!4370 = !DISubroutineType(types: !4371)
!4371 = !{!6, !134}
!4372 = !DILocalVariable(name: "n", arg: 1, scope: !4368, file: !4369, line: 216, type: !134)
!4373 = !DILocation(line: 216, column: 20, scope: !4368)
!4374 = !DILocation(line: 218, column: 10, scope: !4368)
!4375 = !DILocation(line: 218, column: 3, scope: !4368)
!4376 = !DILocalVariable(name: "n", arg: 1, scope: !4377, file: !4369, line: 216, type: !134)
!4377 = distinct !DISubprogram(name: "xcharalloc", scope: !4369, file: !4369, line: 216, type: !4370, scopeLine: 217, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !4378, retainedNodes: !4)
!4378 = distinct !DICompileUnit(language: DW_LANG_C99, file: !214, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !215, nameTableKind: None)
!4379 = distinct !DISubprogram(name: "xmemdup", scope: !4313, file: !4313, line: 111, type: !4380, scopeLine: 112, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !213, retainedNodes: !4)
!4380 = !DISubroutineType(types: !4381)
!4381 = !{!8, !4382, !134}
!4382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4383, size: 64)
!4383 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!4384 = !DILocalVariable(name: "p", arg: 1, scope: !4379, file: !4313, line: 111, type: !4382)
!4385 = !DILocation(line: 111, column: 22, scope: !4379)
!4386 = !DILocalVariable(name: "s", arg: 2, scope: !4379, file: !4313, line: 111, type: !134)
!4387 = !DILocation(line: 111, column: 32, scope: !4379)
!4388 = !DILocation(line: 113, column: 27, scope: !4379)
!4389 = !DILocation(line: 113, column: 18, scope: !4379)
!4390 = !DILocation(line: 113, column: 31, scope: !4379)
!4391 = !DILocation(line: 113, column: 34, scope: !4379)
!4392 = !DILocation(line: 113, column: 10, scope: !4379)
!4393 = !DILocation(line: 113, column: 3, scope: !4379)
!4394 = !DILocalVariable(name: "p", arg: 1, scope: !4395, file: !4313, line: 111, type: !4382)
!4395 = distinct !DISubprogram(name: "xmemdup", scope: !4313, file: !4313, line: 111, type: !4380, scopeLine: 112, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !4396, retainedNodes: !4)
!4396 = distinct !DICompileUnit(language: DW_LANG_C99, file: !214, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !215, nameTableKind: None)
!4397 = !DILocalVariable(name: "s", arg: 2, scope: !4395, file: !4313, line: 111, type: !134)
!4398 = distinct !DISubprogram(name: "xstrdup", scope: !4313, file: !4313, line: 119, type: !3362, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !213, retainedNodes: !4)
!4399 = !DILocalVariable(name: "string", arg: 1, scope: !4398, file: !4313, line: 119, type: !69)
!4400 = !DILocation(line: 119, column: 22, scope: !4398)
!4401 = !DILocation(line: 121, column: 19, scope: !4398)
!4402 = !DILocation(line: 121, column: 35, scope: !4398)
!4403 = !DILocation(line: 121, column: 27, scope: !4398)
!4404 = !DILocation(line: 121, column: 43, scope: !4398)
!4405 = !DILocation(line: 121, column: 10, scope: !4398)
!4406 = !DILocation(line: 121, column: 3, scope: !4398)
!4407 = !DILocalVariable(name: "string", arg: 1, scope: !4408, file: !4313, line: 119, type: !69)
!4408 = distinct !DISubprogram(name: "xstrdup", scope: !4313, file: !4313, line: 119, type: !3362, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !4409, retainedNodes: !4)
!4409 = distinct !DICompileUnit(language: DW_LANG_C99, file: !214, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !215, nameTableKind: None)
!4410 = distinct !DISubprogram(name: "xalloc_die", scope: !4411, file: !4411, line: 32, type: !1680, scopeLine: 33, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !216, retainedNodes: !4)
!4411 = !DIFile(filename: "lib/xalloc-die.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!4412 = !DILocation(line: 34, column: 10, scope: !4410)
!4413 = !DILocation(line: 34, column: 33, scope: !4410)
!4414 = !DILocation(line: 34, column: 3, scope: !4410)
!4415 = !DILocation(line: 40, column: 3, scope: !4410)
!4416 = distinct !DISubprogram(name: "xgetgroups", scope: !4417, file: !4417, line: 31, type: !4418, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !218, retainedNodes: !4)
!4417 = !DIFile(filename: "lib/xgetgroups.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!4418 = !DISubroutineType(types: !4419)
!4419 = !{!72, !69, !21, !4420}
!4420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !183, size: 64)
!4421 = !DILocalVariable(name: "username", arg: 1, scope: !4416, file: !4417, line: 31, type: !69)
!4422 = !DILocation(line: 31, column: 25, scope: !4416)
!4423 = !DILocalVariable(name: "gid", arg: 2, scope: !4416, file: !4417, line: 31, type: !21)
!4424 = !DILocation(line: 31, column: 41, scope: !4416)
!4425 = !DILocalVariable(name: "groups", arg: 3, scope: !4416, file: !4417, line: 31, type: !4420)
!4426 = !DILocation(line: 31, column: 54, scope: !4416)
!4427 = !DILocalVariable(name: "result", scope: !4416, file: !4417, line: 33, type: !72)
!4428 = !DILocation(line: 33, column: 7, scope: !4416)
!4429 = !DILocation(line: 33, column: 28, scope: !4416)
!4430 = !DILocation(line: 33, column: 38, scope: !4416)
!4431 = !DILocation(line: 33, column: 43, scope: !4416)
!4432 = !DILocation(line: 33, column: 16, scope: !4416)
!4433 = !DILocation(line: 34, column: 7, scope: !4434)
!4434 = distinct !DILexicalBlock(scope: !4416, file: !4417, line: 34, column: 7)
!4435 = !DILocation(line: 34, column: 14, scope: !4434)
!4436 = !DILocation(line: 34, column: 20, scope: !4434)
!4437 = !DILocation(line: 34, column: 23, scope: !4434)
!4438 = !DILocation(line: 34, column: 29, scope: !4434)
!4439 = !DILocation(line: 34, column: 7, scope: !4416)
!4440 = !DILocation(line: 35, column: 5, scope: !4434)
!4441 = !DILocation(line: 36, column: 10, scope: !4416)
!4442 = !DILocation(line: 36, column: 3, scope: !4416)
!4443 = distinct !DISubprogram(name: "xstrtoul", scope: !4444, file: !4444, line: 76, type: !4445, scopeLine: 78, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !220, retainedNodes: !4)
!4444 = !DIFile(filename: "./lib/xstrtol.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!4445 = !DISubroutineType(types: !4446)
!4446 = !{!4447, !69, !184, !72, !4448, !69}
!4447 = !DIDerivedType(tag: DW_TAG_typedef, name: "strtol_error", file: !224, line: 38, baseType: !223)
!4448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !84, size: 64)
!4449 = !DILocalVariable(name: "s", arg: 1, scope: !4443, file: !4444, line: 76, type: !69)
!4450 = !DILocation(line: 76, column: 24, scope: !4443)
!4451 = !DILocalVariable(name: "ptr", arg: 2, scope: !4443, file: !4444, line: 76, type: !184)
!4452 = !DILocation(line: 76, column: 34, scope: !4443)
!4453 = !DILocalVariable(name: "strtol_base", arg: 3, scope: !4443, file: !4444, line: 76, type: !72)
!4454 = !DILocation(line: 76, column: 43, scope: !4443)
!4455 = !DILocalVariable(name: "val", arg: 4, scope: !4443, file: !4444, line: 77, type: !4448)
!4456 = !DILocation(line: 77, column: 24, scope: !4443)
!4457 = !DILocalVariable(name: "valid_suffixes", arg: 5, scope: !4443, file: !4444, line: 77, type: !69)
!4458 = !DILocation(line: 77, column: 41, scope: !4443)
!4459 = !DILocalVariable(name: "t_ptr", scope: !4443, file: !4444, line: 79, type: !6)
!4460 = !DILocation(line: 79, column: 9, scope: !4443)
!4461 = !DILocalVariable(name: "p", scope: !4443, file: !4444, line: 80, type: !184)
!4462 = !DILocation(line: 80, column: 10, scope: !4443)
!4463 = !DILocalVariable(name: "tmp", scope: !4443, file: !4444, line: 81, type: !84)
!4464 = !DILocation(line: 81, column: 14, scope: !4443)
!4465 = !DILocalVariable(name: "err", scope: !4443, file: !4444, line: 82, type: !4447)
!4466 = !DILocation(line: 82, column: 16, scope: !4443)
!4467 = !DILocation(line: 84, column: 3, scope: !4468)
!4468 = distinct !DILexicalBlock(scope: !4469, file: !4444, line: 84, column: 3)
!4469 = distinct !DILexicalBlock(scope: !4443, file: !4444, line: 84, column: 3)
!4470 = !DILocation(line: 84, column: 3, scope: !4469)
!4471 = !DILocation(line: 86, column: 8, scope: !4443)
!4472 = !DILocation(line: 86, column: 14, scope: !4443)
!4473 = !DILocation(line: 86, column: 5, scope: !4443)
!4474 = !DILocation(line: 88, column: 3, scope: !4443)
!4475 = !DILocation(line: 88, column: 9, scope: !4443)
!4476 = !DILocalVariable(name: "q", scope: !4477, file: !4444, line: 92, type: !69)
!4477 = distinct !DILexicalBlock(scope: !4478, file: !4444, line: 91, column: 5)
!4478 = distinct !DILexicalBlock(scope: !4443, file: !4444, line: 90, column: 7)
!4479 = !DILocation(line: 92, column: 19, scope: !4477)
!4480 = !DILocation(line: 92, column: 23, scope: !4477)
!4481 = !DILocalVariable(name: "ch", scope: !4477, file: !4444, line: 93, type: !240)
!4482 = !DILocation(line: 93, column: 21, scope: !4477)
!4483 = !DILocation(line: 93, column: 27, scope: !4477)
!4484 = !DILocation(line: 93, column: 26, scope: !4477)
!4485 = !DILocation(line: 94, column: 7, scope: !4477)
!4486 = !DILocation(line: 94, column: 14, scope: !4477)
!4487 = !DILocation(line: 95, column: 15, scope: !4477)
!4488 = !DILocation(line: 95, column: 14, scope: !4477)
!4489 = !DILocation(line: 95, column: 12, scope: !4477)
!4490 = distinct !{!4490, !4485, !4491}
!4491 = !DILocation(line: 95, column: 17, scope: !4477)
!4492 = !DILocation(line: 96, column: 11, scope: !4493)
!4493 = distinct !DILexicalBlock(scope: !4477, file: !4444, line: 96, column: 11)
!4494 = !DILocation(line: 96, column: 14, scope: !4493)
!4495 = !DILocation(line: 96, column: 11, scope: !4477)
!4496 = !DILocation(line: 97, column: 9, scope: !4493)
!4497 = !DILocation(line: 100, column: 19, scope: !4443)
!4498 = !DILocation(line: 100, column: 22, scope: !4443)
!4499 = !DILocation(line: 100, column: 25, scope: !4443)
!4500 = !DILocation(line: 100, column: 9, scope: !4443)
!4501 = !DILocation(line: 100, column: 7, scope: !4443)
!4502 = !DILocation(line: 102, column: 8, scope: !4503)
!4503 = distinct !DILexicalBlock(scope: !4443, file: !4444, line: 102, column: 7)
!4504 = !DILocation(line: 102, column: 7, scope: !4503)
!4505 = !DILocation(line: 102, column: 13, scope: !4503)
!4506 = !DILocation(line: 102, column: 10, scope: !4503)
!4507 = !DILocation(line: 102, column: 7, scope: !4443)
!4508 = !DILocation(line: 106, column: 11, scope: !4509)
!4509 = distinct !DILexicalBlock(scope: !4510, file: !4444, line: 106, column: 11)
!4510 = distinct !DILexicalBlock(scope: !4503, file: !4444, line: 103, column: 5)
!4511 = !DILocation(line: 106, column: 26, scope: !4509)
!4512 = !DILocation(line: 106, column: 31, scope: !4509)
!4513 = !DILocation(line: 106, column: 30, scope: !4509)
!4514 = !DILocation(line: 106, column: 29, scope: !4509)
!4515 = !DILocation(line: 106, column: 33, scope: !4509)
!4516 = !DILocation(line: 106, column: 44, scope: !4509)
!4517 = !DILocation(line: 106, column: 62, scope: !4509)
!4518 = !DILocation(line: 106, column: 61, scope: !4509)
!4519 = !DILocation(line: 106, column: 60, scope: !4509)
!4520 = !DILocation(line: 106, column: 36, scope: !4509)
!4521 = !DILocation(line: 106, column: 11, scope: !4510)
!4522 = !DILocation(line: 107, column: 13, scope: !4509)
!4523 = !DILocation(line: 107, column: 9, scope: !4509)
!4524 = !DILocation(line: 109, column: 9, scope: !4509)
!4525 = !DILocation(line: 110, column: 5, scope: !4510)
!4526 = !DILocation(line: 111, column: 12, scope: !4527)
!4527 = distinct !DILexicalBlock(scope: !4503, file: !4444, line: 111, column: 12)
!4528 = !DILocation(line: 111, column: 18, scope: !4527)
!4529 = !DILocation(line: 111, column: 12, scope: !4503)
!4530 = !DILocation(line: 113, column: 11, scope: !4531)
!4531 = distinct !DILexicalBlock(scope: !4532, file: !4444, line: 113, column: 11)
!4532 = distinct !DILexicalBlock(scope: !4527, file: !4444, line: 112, column: 5)
!4533 = !DILocation(line: 113, column: 17, scope: !4531)
!4534 = !DILocation(line: 113, column: 11, scope: !4532)
!4535 = !DILocation(line: 114, column: 9, scope: !4531)
!4536 = !DILocation(line: 115, column: 11, scope: !4532)
!4537 = !DILocation(line: 116, column: 5, scope: !4532)
!4538 = !DILocation(line: 121, column: 8, scope: !4539)
!4539 = distinct !DILexicalBlock(scope: !4443, file: !4444, line: 121, column: 7)
!4540 = !DILocation(line: 121, column: 7, scope: !4443)
!4541 = !DILocation(line: 123, column: 14, scope: !4542)
!4542 = distinct !DILexicalBlock(scope: !4539, file: !4444, line: 122, column: 5)
!4543 = !DILocation(line: 123, column: 8, scope: !4542)
!4544 = !DILocation(line: 123, column: 12, scope: !4542)
!4545 = !DILocation(line: 124, column: 14, scope: !4542)
!4546 = !DILocation(line: 124, column: 7, scope: !4542)
!4547 = !DILocation(line: 127, column: 9, scope: !4548)
!4548 = distinct !DILexicalBlock(scope: !4443, file: !4444, line: 127, column: 7)
!4549 = !DILocation(line: 127, column: 8, scope: !4548)
!4550 = !DILocation(line: 127, column: 7, scope: !4548)
!4551 = !DILocation(line: 127, column: 11, scope: !4548)
!4552 = !DILocation(line: 127, column: 7, scope: !4443)
!4553 = !DILocalVariable(name: "base", scope: !4554, file: !4444, line: 129, type: !72)
!4554 = distinct !DILexicalBlock(scope: !4548, file: !4444, line: 128, column: 5)
!4555 = !DILocation(line: 129, column: 11, scope: !4554)
!4556 = !DILocalVariable(name: "suffixes", scope: !4554, file: !4444, line: 130, type: !72)
!4557 = !DILocation(line: 130, column: 11, scope: !4554)
!4558 = !DILocalVariable(name: "overflow", scope: !4554, file: !4444, line: 131, type: !4447)
!4559 = !DILocation(line: 131, column: 20, scope: !4554)
!4560 = !DILocation(line: 133, column: 20, scope: !4561)
!4561 = distinct !DILexicalBlock(scope: !4554, file: !4444, line: 133, column: 11)
!4562 = !DILocation(line: 133, column: 38, scope: !4561)
!4563 = !DILocation(line: 133, column: 37, scope: !4561)
!4564 = !DILocation(line: 133, column: 36, scope: !4561)
!4565 = !DILocation(line: 133, column: 12, scope: !4561)
!4566 = !DILocation(line: 133, column: 11, scope: !4554)
!4567 = !DILocation(line: 135, column: 18, scope: !4568)
!4568 = distinct !DILexicalBlock(scope: !4561, file: !4444, line: 134, column: 9)
!4569 = !DILocation(line: 135, column: 12, scope: !4568)
!4570 = !DILocation(line: 135, column: 16, scope: !4568)
!4571 = !DILocation(line: 136, column: 18, scope: !4568)
!4572 = !DILocation(line: 136, column: 22, scope: !4568)
!4573 = !DILocation(line: 136, column: 11, scope: !4568)
!4574 = !DILocation(line: 139, column: 17, scope: !4554)
!4575 = !DILocation(line: 139, column: 16, scope: !4554)
!4576 = !DILocation(line: 139, column: 15, scope: !4554)
!4577 = !DILocation(line: 139, column: 7, scope: !4554)
!4578 = !DILocation(line: 151, column: 23, scope: !4579)
!4579 = distinct !DILexicalBlock(scope: !4580, file: !4444, line: 151, column: 15)
!4580 = distinct !DILexicalBlock(scope: !4554, file: !4444, line: 140, column: 9)
!4581 = !DILocation(line: 151, column: 15, scope: !4579)
!4582 = !DILocation(line: 151, column: 15, scope: !4580)
!4583 = !DILocation(line: 152, column: 21, scope: !4579)
!4584 = !DILocation(line: 152, column: 13, scope: !4579)
!4585 = !DILocation(line: 155, column: 21, scope: !4586)
!4586 = distinct !DILexicalBlock(scope: !4587, file: !4444, line: 155, column: 21)
!4587 = distinct !DILexicalBlock(scope: !4579, file: !4444, line: 153, column: 15)
!4588 = !DILocation(line: 155, column: 29, scope: !4586)
!4589 = !DILocation(line: 155, column: 21, scope: !4587)
!4590 = !DILocation(line: 156, column: 28, scope: !4586)
!4591 = !DILocation(line: 156, column: 19, scope: !4586)
!4592 = !DILocation(line: 157, column: 17, scope: !4587)
!4593 = !DILocation(line: 161, column: 22, scope: !4587)
!4594 = !DILocation(line: 162, column: 25, scope: !4587)
!4595 = !DILocation(line: 163, column: 17, scope: !4587)
!4596 = !DILocation(line: 164, column: 15, scope: !4587)
!4597 = !DILocation(line: 165, column: 9, scope: !4580)
!4598 = !DILocation(line: 167, column: 17, scope: !4554)
!4599 = !DILocation(line: 167, column: 16, scope: !4554)
!4600 = !DILocation(line: 167, column: 15, scope: !4554)
!4601 = !DILocation(line: 167, column: 7, scope: !4554)
!4602 = !DILocation(line: 170, column: 22, scope: !4603)
!4603 = distinct !DILexicalBlock(scope: !4554, file: !4444, line: 168, column: 9)
!4604 = !DILocation(line: 170, column: 20, scope: !4603)
!4605 = !DILocation(line: 171, column: 11, scope: !4603)
!4606 = !DILocation(line: 177, column: 22, scope: !4603)
!4607 = !DILocation(line: 177, column: 20, scope: !4603)
!4608 = !DILocation(line: 178, column: 11, scope: !4603)
!4609 = !DILocation(line: 181, column: 20, scope: !4603)
!4610 = !DILocation(line: 182, column: 11, scope: !4603)
!4611 = !DILocation(line: 185, column: 48, scope: !4603)
!4612 = !DILocation(line: 185, column: 22, scope: !4603)
!4613 = !DILocation(line: 185, column: 20, scope: !4603)
!4614 = !DILocation(line: 186, column: 11, scope: !4603)
!4615 = !DILocation(line: 190, column: 48, scope: !4603)
!4616 = !DILocation(line: 190, column: 22, scope: !4603)
!4617 = !DILocation(line: 190, column: 20, scope: !4603)
!4618 = !DILocation(line: 191, column: 11, scope: !4603)
!4619 = !DILocation(line: 195, column: 48, scope: !4603)
!4620 = !DILocation(line: 195, column: 22, scope: !4603)
!4621 = !DILocation(line: 195, column: 20, scope: !4603)
!4622 = !DILocation(line: 196, column: 11, scope: !4603)
!4623 = !DILocation(line: 200, column: 48, scope: !4603)
!4624 = !DILocation(line: 200, column: 22, scope: !4603)
!4625 = !DILocation(line: 200, column: 20, scope: !4603)
!4626 = !DILocation(line: 201, column: 11, scope: !4603)
!4627 = !DILocation(line: 204, column: 48, scope: !4603)
!4628 = !DILocation(line: 204, column: 22, scope: !4603)
!4629 = !DILocation(line: 204, column: 20, scope: !4603)
!4630 = !DILocation(line: 205, column: 11, scope: !4603)
!4631 = !DILocation(line: 209, column: 48, scope: !4603)
!4632 = !DILocation(line: 209, column: 22, scope: !4603)
!4633 = !DILocation(line: 209, column: 20, scope: !4603)
!4634 = !DILocation(line: 210, column: 11, scope: !4603)
!4635 = !DILocation(line: 213, column: 22, scope: !4603)
!4636 = !DILocation(line: 213, column: 20, scope: !4603)
!4637 = !DILocation(line: 214, column: 11, scope: !4603)
!4638 = !DILocation(line: 217, column: 48, scope: !4603)
!4639 = !DILocation(line: 217, column: 22, scope: !4603)
!4640 = !DILocation(line: 217, column: 20, scope: !4603)
!4641 = !DILocation(line: 218, column: 11, scope: !4603)
!4642 = !DILocation(line: 221, column: 48, scope: !4603)
!4643 = !DILocation(line: 221, column: 22, scope: !4603)
!4644 = !DILocation(line: 221, column: 20, scope: !4603)
!4645 = !DILocation(line: 222, column: 11, scope: !4603)
!4646 = !DILocation(line: 225, column: 18, scope: !4603)
!4647 = !DILocation(line: 225, column: 12, scope: !4603)
!4648 = !DILocation(line: 225, column: 16, scope: !4603)
!4649 = !DILocation(line: 226, column: 18, scope: !4603)
!4650 = !DILocation(line: 226, column: 22, scope: !4603)
!4651 = !DILocation(line: 226, column: 11, scope: !4603)
!4652 = !DILocation(line: 229, column: 14, scope: !4554)
!4653 = !DILocation(line: 229, column: 11, scope: !4554)
!4654 = !DILocation(line: 230, column: 13, scope: !4554)
!4655 = !DILocation(line: 230, column: 8, scope: !4554)
!4656 = !DILocation(line: 230, column: 10, scope: !4554)
!4657 = !DILocation(line: 231, column: 13, scope: !4658)
!4658 = distinct !DILexicalBlock(scope: !4554, file: !4444, line: 231, column: 11)
!4659 = !DILocation(line: 231, column: 12, scope: !4658)
!4660 = !DILocation(line: 231, column: 11, scope: !4658)
!4661 = !DILocation(line: 231, column: 11, scope: !4554)
!4662 = !DILocation(line: 232, column: 13, scope: !4658)
!4663 = !DILocation(line: 232, column: 9, scope: !4658)
!4664 = !DILocation(line: 233, column: 5, scope: !4554)
!4665 = !DILocation(line: 235, column: 10, scope: !4443)
!4666 = !DILocation(line: 235, column: 4, scope: !4443)
!4667 = !DILocation(line: 235, column: 8, scope: !4443)
!4668 = !DILocation(line: 236, column: 10, scope: !4443)
!4669 = !DILocation(line: 236, column: 3, scope: !4443)
!4670 = !DILocation(line: 237, column: 1, scope: !4443)
!4671 = !DILocalVariable(name: "s", arg: 1, scope: !4672, file: !4444, line: 76, type: !69)
!4672 = distinct !DISubprogram(name: "xstrtoul", scope: !4444, file: !4444, line: 76, type: !4445, scopeLine: 78, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !4673, retainedNodes: !4)
!4673 = distinct !DICompileUnit(language: DW_LANG_C99, file: !221, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !222, retainedTypes: !231, nameTableKind: None)
!4674 = !DILocalVariable(name: "ptr", arg: 2, scope: !4672, file: !4444, line: 76, type: !184)
!4675 = !DILocalVariable(name: "strtol_base", arg: 3, scope: !4672, file: !4444, line: 76, type: !72)
!4676 = !DILocalVariable(name: "val", arg: 4, scope: !4672, file: !4444, line: 77, type: !4448)
!4677 = !DILocalVariable(name: "valid_suffixes", arg: 5, scope: !4672, file: !4444, line: 77, type: !69)
!4678 = !DILocalVariable(name: "t_ptr", scope: !4672, file: !4444, line: 79, type: !6)
!4679 = !DILocalVariable(name: "p", scope: !4672, file: !4444, line: 80, type: !184)
!4680 = !DILocalVariable(name: "tmp", scope: !4672, file: !4444, line: 81, type: !84)
!4681 = !DILocalVariable(name: "err", scope: !4672, file: !4444, line: 82, type: !4447)
!4682 = !DILocalVariable(name: "suffixes", scope: !4683, file: !4444, line: 130, type: !72)
!4683 = distinct !DILexicalBlock(scope: !4684, file: !4444, line: 128, column: 5)
!4684 = distinct !DILexicalBlock(scope: !4685, file: !4444, line: 127, column: 7)
!4685 = distinct !DISubprogram(name: "xstrtoul", scope: !4444, file: !4444, line: 76, type: !4445, scopeLine: 78, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !4686, retainedNodes: !4)
!4686 = distinct !DICompileUnit(language: DW_LANG_C99, file: !221, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !222, retainedTypes: !231, nameTableKind: None)
!4687 = !DILocalVariable(name: "overflow", scope: !4683, file: !4444, line: 131, type: !4447)
!4688 = distinct !DISubprogram(name: "bkm_scale", scope: !4444, file: !4444, line: 48, type: !4689, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !220, retainedNodes: !4)
!4689 = !DISubroutineType(types: !4690)
!4690 = !{!4447, !4448, !72}
!4691 = !DILocalVariable(name: "x", arg: 1, scope: !4688, file: !4444, line: 48, type: !4448)
!4692 = !DILocation(line: 48, column: 24, scope: !4688)
!4693 = !DILocalVariable(name: "scale_factor", arg: 2, scope: !4688, file: !4444, line: 48, type: !72)
!4694 = !DILocation(line: 48, column: 31, scope: !4688)
!4695 = !DILocation(line: 55, column: 26, scope: !4696)
!4696 = distinct !DILexicalBlock(scope: !4688, file: !4444, line: 55, column: 7)
!4697 = !DILocation(line: 55, column: 24, scope: !4696)
!4698 = !DILocation(line: 55, column: 42, scope: !4696)
!4699 = !DILocation(line: 55, column: 41, scope: !4696)
!4700 = !DILocation(line: 55, column: 39, scope: !4696)
!4701 = !DILocation(line: 55, column: 7, scope: !4688)
!4702 = !DILocation(line: 57, column: 8, scope: !4703)
!4703 = distinct !DILexicalBlock(scope: !4696, file: !4444, line: 56, column: 5)
!4704 = !DILocation(line: 57, column: 10, scope: !4703)
!4705 = !DILocation(line: 58, column: 7, scope: !4703)
!4706 = !DILocation(line: 60, column: 9, scope: !4688)
!4707 = !DILocation(line: 60, column: 4, scope: !4688)
!4708 = !DILocation(line: 60, column: 6, scope: !4688)
!4709 = !DILocation(line: 61, column: 3, scope: !4688)
!4710 = !DILocation(line: 62, column: 1, scope: !4688)
!4711 = !DILocalVariable(name: "x", arg: 1, scope: !4712, file: !4444, line: 48, type: !4448)
!4712 = distinct !DISubprogram(name: "bkm_scale", scope: !4444, file: !4444, line: 48, type: !4689, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4713, retainedNodes: !4)
!4713 = distinct !DICompileUnit(language: DW_LANG_C99, file: !221, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !222, retainedTypes: !231, nameTableKind: None)
!4714 = !DILocalVariable(name: "scale_factor", arg: 2, scope: !4712, file: !4444, line: 48, type: !72)
!4715 = distinct !DISubprogram(name: "bkm_scale_by_power", scope: !4444, file: !4444, line: 65, type: !4716, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !220, retainedNodes: !4)
!4716 = !DISubroutineType(types: !4717)
!4717 = !{!4447, !4448, !72, !72}
!4718 = !DILocalVariable(name: "x", arg: 1, scope: !4715, file: !4444, line: 65, type: !4448)
!4719 = !DILocation(line: 65, column: 33, scope: !4715)
!4720 = !DILocalVariable(name: "base", arg: 2, scope: !4715, file: !4444, line: 65, type: !72)
!4721 = !DILocation(line: 65, column: 40, scope: !4715)
!4722 = !DILocalVariable(name: "power", arg: 3, scope: !4715, file: !4444, line: 65, type: !72)
!4723 = !DILocation(line: 65, column: 50, scope: !4715)
!4724 = !DILocalVariable(name: "err", scope: !4715, file: !4444, line: 67, type: !4447)
!4725 = !DILocation(line: 67, column: 16, scope: !4715)
!4726 = !DILocation(line: 68, column: 3, scope: !4715)
!4727 = !DILocation(line: 68, column: 15, scope: !4715)
!4728 = !DILocation(line: 69, column: 23, scope: !4715)
!4729 = !DILocation(line: 69, column: 26, scope: !4715)
!4730 = !DILocation(line: 69, column: 12, scope: !4715)
!4731 = !DILocation(line: 69, column: 9, scope: !4715)
!4732 = distinct !{!4732, !4726, !4733}
!4733 = !DILocation(line: 69, column: 30, scope: !4715)
!4734 = !DILocation(line: 70, column: 10, scope: !4715)
!4735 = !DILocation(line: 70, column: 3, scope: !4715)
!4736 = !DILocalVariable(name: "x", arg: 1, scope: !4737, file: !4444, line: 65, type: !4448)
!4737 = distinct !DISubprogram(name: "bkm_scale_by_power", scope: !4444, file: !4444, line: 65, type: !4716, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4738, retainedNodes: !4)
!4738 = distinct !DICompileUnit(language: DW_LANG_C99, file: !221, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !222, retainedTypes: !231, nameTableKind: None)
!4739 = !DILocalVariable(name: "base", arg: 2, scope: !4737, file: !4444, line: 65, type: !72)
!4740 = !DILocalVariable(name: "power", arg: 3, scope: !4737, file: !4444, line: 65, type: !72)
!4741 = !DILocalVariable(name: "err", scope: !4737, file: !4444, line: 67, type: !4447)
!4742 = distinct !DISubprogram(name: "rpl_mbrtowc", scope: !4743, file: !4743, line: 86, type: !4744, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !232, retainedNodes: !4)
!4743 = !DIFile(filename: "lib/mbrtowc.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!4744 = !DISubroutineType(types: !4745)
!4745 = !{!134, !4746, !69, !134, !4747}
!4746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2777, size: 64)
!4747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4748, size: 64)
!4748 = !DIDerivedType(tag: DW_TAG_typedef, name: "mbstate_t", file: !2748, line: 6, baseType: !4749)
!4749 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mbstate_t", file: !2750, line: 21, baseType: !4750)
!4750 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2750, line: 13, size: 64, elements: !4751)
!4751 = !{!4752, !4753}
!4752 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !4750, file: !2750, line: 15, baseType: !72, size: 32)
!4753 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !4750, file: !2750, line: 20, baseType: !4754, size: 32, offset: 32)
!4754 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4750, file: !2750, line: 16, size: 32, elements: !4755)
!4755 = !{!4756, !4757}
!4756 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !4754, file: !2750, line: 18, baseType: !16, size: 32)
!4757 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !4754, file: !2750, line: 19, baseType: !2759, size: 32)
!4758 = !DILocalVariable(name: "pwc", arg: 1, scope: !4742, file: !4743, line: 86, type: !4746)
!4759 = !DILocation(line: 86, column: 23, scope: !4742)
!4760 = !DILocalVariable(name: "s", arg: 2, scope: !4742, file: !4743, line: 86, type: !69)
!4761 = !DILocation(line: 86, column: 40, scope: !4742)
!4762 = !DILocalVariable(name: "n", arg: 3, scope: !4742, file: !4743, line: 86, type: !134)
!4763 = !DILocation(line: 86, column: 50, scope: !4742)
!4764 = !DILocalVariable(name: "ps", arg: 4, scope: !4742, file: !4743, line: 86, type: !4747)
!4765 = !DILocation(line: 86, column: 64, scope: !4742)
!4766 = !DILocalVariable(name: "ret", scope: !4742, file: !4743, line: 88, type: !134)
!4767 = !DILocation(line: 88, column: 10, scope: !4742)
!4768 = !DILocalVariable(name: "wc", scope: !4742, file: !4743, line: 89, type: !2777)
!4769 = !DILocation(line: 89, column: 11, scope: !4742)
!4770 = !DILocation(line: 105, column: 9, scope: !4771)
!4771 = distinct !DILexicalBlock(scope: !4742, file: !4743, line: 105, column: 7)
!4772 = !DILocation(line: 105, column: 7, scope: !4742)
!4773 = !DILocation(line: 106, column: 9, scope: !4771)
!4774 = !DILocation(line: 106, column: 5, scope: !4771)
!4775 = !DILocation(line: 145, column: 18, scope: !4742)
!4776 = !DILocation(line: 145, column: 23, scope: !4742)
!4777 = !DILocation(line: 145, column: 26, scope: !4742)
!4778 = !DILocation(line: 145, column: 29, scope: !4742)
!4779 = !DILocation(line: 145, column: 9, scope: !4742)
!4780 = !DILocation(line: 145, column: 7, scope: !4742)
!4781 = !DILocation(line: 154, column: 22, scope: !4782)
!4782 = distinct !DILexicalBlock(scope: !4742, file: !4743, line: 154, column: 7)
!4783 = !DILocation(line: 154, column: 19, scope: !4782)
!4784 = !DILocation(line: 154, column: 26, scope: !4782)
!4785 = !DILocation(line: 154, column: 29, scope: !4782)
!4786 = !DILocation(line: 154, column: 31, scope: !4782)
!4787 = !DILocation(line: 154, column: 36, scope: !4782)
!4788 = !DILocation(line: 154, column: 41, scope: !4782)
!4789 = !DILocation(line: 154, column: 7, scope: !4742)
!4790 = !DILocalVariable(name: "uc", scope: !4791, file: !4743, line: 156, type: !240)
!4791 = distinct !DILexicalBlock(scope: !4782, file: !4743, line: 155, column: 5)
!4792 = !DILocation(line: 156, column: 21, scope: !4791)
!4793 = !DILocation(line: 156, column: 27, scope: !4791)
!4794 = !DILocation(line: 156, column: 26, scope: !4791)
!4795 = !DILocation(line: 157, column: 14, scope: !4791)
!4796 = !DILocation(line: 157, column: 8, scope: !4791)
!4797 = !DILocation(line: 157, column: 12, scope: !4791)
!4798 = !DILocation(line: 158, column: 7, scope: !4791)
!4799 = !DILocation(line: 162, column: 10, scope: !4742)
!4800 = !DILocation(line: 162, column: 3, scope: !4742)
!4801 = !DILocation(line: 163, column: 1, scope: !4742)
!4802 = !DILocalVariable(name: "pwc", arg: 1, scope: !4803, file: !4743, line: 86, type: !4746)
!4803 = distinct !DISubprogram(name: "rpl_mbrtowc", scope: !4743, file: !4743, line: 86, type: !4804, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !4817, retainedNodes: !4)
!4804 = !DISubroutineType(types: !4805)
!4805 = !{!134, !4746, !69, !134, !4806}
!4806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4807, size: 64)
!4807 = !DIDerivedType(tag: DW_TAG_typedef, name: "mbstate_t", file: !2748, line: 6, baseType: !4808)
!4808 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mbstate_t", file: !2750, line: 21, baseType: !4809)
!4809 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2750, line: 13, size: 64, elements: !4810)
!4810 = !{!4811, !4812}
!4811 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !4809, file: !2750, line: 15, baseType: !72, size: 32)
!4812 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !4809, file: !2750, line: 20, baseType: !4813, size: 32, offset: 32)
!4813 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4809, file: !2750, line: 16, size: 32, elements: !4814)
!4814 = !{!4815, !4816}
!4815 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !4813, file: !2750, line: 18, baseType: !16, size: 32)
!4816 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !4813, file: !2750, line: 19, baseType: !2759, size: 32)
!4817 = distinct !DICompileUnit(language: DW_LANG_C99, file: !233, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !234, nameTableKind: None)
!4818 = !DILocalVariable(name: "s", arg: 2, scope: !4803, file: !4743, line: 86, type: !69)
!4819 = !DILocalVariable(name: "n", arg: 3, scope: !4803, file: !4743, line: 86, type: !134)
!4820 = !DILocalVariable(name: "ps", arg: 4, scope: !4803, file: !4743, line: 86, type: !4806)
!4821 = !DILocalVariable(name: "ret", scope: !4803, file: !4743, line: 88, type: !134)
!4822 = !DILocalVariable(name: "wc", scope: !4803, file: !4743, line: 89, type: !2777)
!4823 = distinct !DISubprogram(name: "c_strcasecmp", scope: !4824, file: !4824, line: 27, type: !4825, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !235, retainedNodes: !4)
!4824 = !DIFile(filename: "lib/c-strcasecmp.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!4825 = !DISubroutineType(types: !4826)
!4826 = !{!72, !69, !69}
!4827 = !DILocalVariable(name: "s1", arg: 1, scope: !4823, file: !4824, line: 27, type: !69)
!4828 = !DILocation(line: 27, column: 27, scope: !4823)
!4829 = !DILocalVariable(name: "s2", arg: 2, scope: !4823, file: !4824, line: 27, type: !69)
!4830 = !DILocation(line: 27, column: 43, scope: !4823)
!4831 = !DILocalVariable(name: "p1", scope: !4823, file: !4824, line: 29, type: !238)
!4832 = !DILocation(line: 29, column: 33, scope: !4823)
!4833 = !DILocation(line: 29, column: 62, scope: !4823)
!4834 = !DILocalVariable(name: "p2", scope: !4823, file: !4824, line: 30, type: !238)
!4835 = !DILocation(line: 30, column: 33, scope: !4823)
!4836 = !DILocation(line: 30, column: 62, scope: !4823)
!4837 = !DILocalVariable(name: "c1", scope: !4823, file: !4824, line: 31, type: !240)
!4838 = !DILocation(line: 31, column: 17, scope: !4823)
!4839 = !DILocalVariable(name: "c2", scope: !4823, file: !4824, line: 31, type: !240)
!4840 = !DILocation(line: 31, column: 21, scope: !4823)
!4841 = !DILocation(line: 33, column: 7, scope: !4842)
!4842 = distinct !DILexicalBlock(scope: !4823, file: !4824, line: 33, column: 7)
!4843 = !DILocation(line: 33, column: 13, scope: !4842)
!4844 = !DILocation(line: 33, column: 10, scope: !4842)
!4845 = !DILocation(line: 33, column: 7, scope: !4823)
!4846 = !DILocation(line: 34, column: 5, scope: !4842)
!4847 = !DILocation(line: 36, column: 3, scope: !4823)
!4848 = !DILocation(line: 38, column: 24, scope: !4849)
!4849 = distinct !DILexicalBlock(scope: !4823, file: !4824, line: 37, column: 5)
!4850 = !DILocation(line: 38, column: 23, scope: !4849)
!4851 = !DILocation(line: 38, column: 12, scope: !4849)
!4852 = !DILocation(line: 38, column: 10, scope: !4849)
!4853 = !DILocation(line: 39, column: 24, scope: !4849)
!4854 = !DILocation(line: 39, column: 23, scope: !4849)
!4855 = !DILocation(line: 39, column: 12, scope: !4849)
!4856 = !DILocation(line: 39, column: 10, scope: !4849)
!4857 = !DILocation(line: 41, column: 11, scope: !4858)
!4858 = distinct !DILexicalBlock(scope: !4849, file: !4824, line: 41, column: 11)
!4859 = !DILocation(line: 41, column: 14, scope: !4858)
!4860 = !DILocation(line: 41, column: 11, scope: !4849)
!4861 = !DILocation(line: 42, column: 9, scope: !4858)
!4862 = !DILocation(line: 44, column: 7, scope: !4849)
!4863 = !DILocation(line: 45, column: 7, scope: !4849)
!4864 = !DILocation(line: 46, column: 5, scope: !4849)
!4865 = !DILocation(line: 47, column: 10, scope: !4823)
!4866 = !DILocation(line: 47, column: 16, scope: !4823)
!4867 = !DILocation(line: 47, column: 13, scope: !4823)
!4868 = distinct !{!4868, !4847, !4869}
!4869 = !DILocation(line: 47, column: 18, scope: !4823)
!4870 = !DILocation(line: 50, column: 12, scope: !4871)
!4871 = distinct !DILexicalBlock(scope: !4823, file: !4824, line: 49, column: 7)
!4872 = !DILocation(line: 50, column: 17, scope: !4871)
!4873 = !DILocation(line: 50, column: 15, scope: !4871)
!4874 = !DILocation(line: 50, column: 5, scope: !4871)
!4875 = !DILocation(line: 56, column: 1, scope: !4823)
!4876 = !DILocalVariable(name: "s1", arg: 1, scope: !4877, file: !4824, line: 27, type: !69)
!4877 = distinct !DISubprogram(name: "c_strcasecmp", scope: !4824, file: !4824, line: 27, type: !4825, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !4878, retainedNodes: !4)
!4878 = distinct !DICompileUnit(language: DW_LANG_C99, file: !236, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !237, nameTableKind: None)
!4879 = !DILocalVariable(name: "s2", arg: 2, scope: !4877, file: !4824, line: 27, type: !69)
!4880 = !DILocalVariable(name: "p1", scope: !4877, file: !4824, line: 29, type: !238)
!4881 = !DILocalVariable(name: "p2", scope: !4877, file: !4824, line: 30, type: !238)
!4882 = !DILocalVariable(name: "c1", scope: !4877, file: !4824, line: 31, type: !240)
!4883 = !DILocalVariable(name: "c2", scope: !4877, file: !4824, line: 31, type: !240)
!4884 = distinct !DISubprogram(name: "close_stream", scope: !4885, file: !4885, line: 56, type: !4886, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !241, retainedNodes: !4)
!4885 = !DIFile(filename: "lib/close-stream.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!4886 = !DISubroutineType(types: !4887)
!4887 = !{!72, !4888}
!4888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4889, size: 64)
!4889 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !3955, line: 7, baseType: !4890)
!4890 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !3957, line: 49, size: 1728, elements: !4891)
!4891 = !{!4892, !4893, !4894, !4895, !4896, !4897, !4898, !4899, !4900, !4901, !4902, !4903, !4904, !4905, !4907, !4908, !4909, !4910, !4911, !4912, !4913, !4914, !4915, !4916, !4917, !4918, !4919, !4920, !4921}
!4892 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !4890, file: !3957, line: 51, baseType: !72, size: 32)
!4893 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !4890, file: !3957, line: 54, baseType: !6, size: 64, offset: 64)
!4894 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !4890, file: !3957, line: 55, baseType: !6, size: 64, offset: 128)
!4895 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !4890, file: !3957, line: 56, baseType: !6, size: 64, offset: 192)
!4896 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !4890, file: !3957, line: 57, baseType: !6, size: 64, offset: 256)
!4897 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !4890, file: !3957, line: 58, baseType: !6, size: 64, offset: 320)
!4898 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !4890, file: !3957, line: 59, baseType: !6, size: 64, offset: 384)
!4899 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !4890, file: !3957, line: 60, baseType: !6, size: 64, offset: 448)
!4900 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !4890, file: !3957, line: 61, baseType: !6, size: 64, offset: 512)
!4901 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !4890, file: !3957, line: 64, baseType: !6, size: 64, offset: 576)
!4902 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !4890, file: !3957, line: 65, baseType: !6, size: 64, offset: 640)
!4903 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !4890, file: !3957, line: 66, baseType: !6, size: 64, offset: 704)
!4904 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !4890, file: !3957, line: 68, baseType: !3972, size: 64, offset: 768)
!4905 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !4890, file: !3957, line: 70, baseType: !4906, size: 64, offset: 832)
!4906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4890, size: 64)
!4907 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !4890, file: !3957, line: 72, baseType: !72, size: 32, offset: 896)
!4908 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !4890, file: !3957, line: 73, baseType: !72, size: 32, offset: 928)
!4909 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !4890, file: !3957, line: 74, baseType: !3979, size: 64, offset: 960)
!4910 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !4890, file: !3957, line: 77, baseType: !133, size: 16, offset: 1024)
!4911 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !4890, file: !3957, line: 78, baseType: !3982, size: 8, offset: 1040)
!4912 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !4890, file: !3957, line: 79, baseType: !3984, size: 8, offset: 1048)
!4913 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !4890, file: !3957, line: 81, baseType: !3988, size: 64, offset: 1088)
!4914 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !4890, file: !3957, line: 89, baseType: !3991, size: 64, offset: 1152)
!4915 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !4890, file: !3957, line: 91, baseType: !3993, size: 64, offset: 1216)
!4916 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !4890, file: !3957, line: 92, baseType: !3996, size: 64, offset: 1280)
!4917 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !4890, file: !3957, line: 93, baseType: !4906, size: 64, offset: 1344)
!4918 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !4890, file: !3957, line: 94, baseType: !8, size: 64, offset: 1408)
!4919 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !4890, file: !3957, line: 95, baseType: !134, size: 64, offset: 1472)
!4920 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !4890, file: !3957, line: 96, baseType: !72, size: 32, offset: 1536)
!4921 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !4890, file: !3957, line: 98, baseType: !4003, size: 160, offset: 1568)
!4922 = !DILocalVariable(name: "stream", arg: 1, scope: !4884, file: !4885, line: 56, type: !4888)
!4923 = !DILocation(line: 56, column: 21, scope: !4884)
!4924 = !DILocalVariable(name: "some_pending", scope: !4884, file: !4885, line: 58, type: !4925)
!4925 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !27)
!4926 = !DILocation(line: 58, column: 14, scope: !4884)
!4927 = !DILocation(line: 58, column: 42, scope: !4884)
!4928 = !DILocation(line: 58, column: 30, scope: !4884)
!4929 = !DILocation(line: 58, column: 50, scope: !4884)
!4930 = !DILocalVariable(name: "prev_fail", scope: !4884, file: !4885, line: 59, type: !4925)
!4931 = !DILocation(line: 59, column: 14, scope: !4884)
!4932 = !DILocation(line: 59, column: 27, scope: !4884)
!4933 = !DILocation(line: 59, column: 43, scope: !4884)
!4934 = !DILocalVariable(name: "fclose_fail", scope: !4884, file: !4885, line: 60, type: !4925)
!4935 = !DILocation(line: 60, column: 14, scope: !4884)
!4936 = !DILocation(line: 60, column: 37, scope: !4884)
!4937 = !DILocation(line: 60, column: 29, scope: !4884)
!4938 = !DILocation(line: 60, column: 45, scope: !4884)
!4939 = !DILocation(line: 70, column: 7, scope: !4940)
!4940 = distinct !DILexicalBlock(scope: !4884, file: !4885, line: 70, column: 7)
!4941 = !DILocation(line: 70, column: 17, scope: !4940)
!4942 = !DILocation(line: 70, column: 21, scope: !4940)
!4943 = !DILocation(line: 70, column: 33, scope: !4940)
!4944 = !DILocation(line: 70, column: 37, scope: !4940)
!4945 = !DILocation(line: 70, column: 50, scope: !4940)
!4946 = !DILocation(line: 70, column: 53, scope: !4940)
!4947 = !DILocation(line: 70, column: 59, scope: !4940)
!4948 = !DILocation(line: 70, column: 7, scope: !4884)
!4949 = !DILocation(line: 72, column: 13, scope: !4950)
!4950 = distinct !DILexicalBlock(scope: !4951, file: !4885, line: 72, column: 11)
!4951 = distinct !DILexicalBlock(scope: !4940, file: !4885, line: 71, column: 5)
!4952 = !DILocation(line: 72, column: 11, scope: !4951)
!4953 = !DILocation(line: 73, column: 9, scope: !4950)
!4954 = !DILocation(line: 73, column: 15, scope: !4950)
!4955 = !DILocation(line: 74, column: 7, scope: !4951)
!4956 = !DILocation(line: 77, column: 3, scope: !4884)
!4957 = !DILocation(line: 78, column: 1, scope: !4884)
!4958 = !DILocalVariable(name: "stream", arg: 1, scope: !4959, file: !4885, line: 56, type: !4962)
!4959 = distinct !DISubprogram(name: "close_stream", scope: !4885, file: !4885, line: 56, type: !4960, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !4996, retainedNodes: !4)
!4960 = !DISubroutineType(types: !4961)
!4961 = !{!72, !4962}
!4962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4963, size: 64)
!4963 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !3955, line: 7, baseType: !4964)
!4964 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !3957, line: 49, size: 1728, elements: !4965)
!4965 = !{!4966, !4967, !4968, !4969, !4970, !4971, !4972, !4973, !4974, !4975, !4976, !4977, !4978, !4979, !4981, !4982, !4983, !4984, !4985, !4986, !4987, !4988, !4989, !4990, !4991, !4992, !4993, !4994, !4995}
!4966 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !4964, file: !3957, line: 51, baseType: !72, size: 32)
!4967 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !4964, file: !3957, line: 54, baseType: !6, size: 64, offset: 64)
!4968 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !4964, file: !3957, line: 55, baseType: !6, size: 64, offset: 128)
!4969 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !4964, file: !3957, line: 56, baseType: !6, size: 64, offset: 192)
!4970 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !4964, file: !3957, line: 57, baseType: !6, size: 64, offset: 256)
!4971 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !4964, file: !3957, line: 58, baseType: !6, size: 64, offset: 320)
!4972 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !4964, file: !3957, line: 59, baseType: !6, size: 64, offset: 384)
!4973 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !4964, file: !3957, line: 60, baseType: !6, size: 64, offset: 448)
!4974 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !4964, file: !3957, line: 61, baseType: !6, size: 64, offset: 512)
!4975 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !4964, file: !3957, line: 64, baseType: !6, size: 64, offset: 576)
!4976 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !4964, file: !3957, line: 65, baseType: !6, size: 64, offset: 640)
!4977 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !4964, file: !3957, line: 66, baseType: !6, size: 64, offset: 704)
!4978 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !4964, file: !3957, line: 68, baseType: !3972, size: 64, offset: 768)
!4979 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !4964, file: !3957, line: 70, baseType: !4980, size: 64, offset: 832)
!4980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4964, size: 64)
!4981 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !4964, file: !3957, line: 72, baseType: !72, size: 32, offset: 896)
!4982 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !4964, file: !3957, line: 73, baseType: !72, size: 32, offset: 928)
!4983 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !4964, file: !3957, line: 74, baseType: !3979, size: 64, offset: 960)
!4984 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !4964, file: !3957, line: 77, baseType: !133, size: 16, offset: 1024)
!4985 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !4964, file: !3957, line: 78, baseType: !3982, size: 8, offset: 1040)
!4986 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !4964, file: !3957, line: 79, baseType: !3984, size: 8, offset: 1048)
!4987 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !4964, file: !3957, line: 81, baseType: !3988, size: 64, offset: 1088)
!4988 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !4964, file: !3957, line: 89, baseType: !3991, size: 64, offset: 1152)
!4989 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !4964, file: !3957, line: 91, baseType: !3993, size: 64, offset: 1216)
!4990 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !4964, file: !3957, line: 92, baseType: !3996, size: 64, offset: 1280)
!4991 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !4964, file: !3957, line: 93, baseType: !4980, size: 64, offset: 1344)
!4992 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !4964, file: !3957, line: 94, baseType: !8, size: 64, offset: 1408)
!4993 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !4964, file: !3957, line: 95, baseType: !134, size: 64, offset: 1472)
!4994 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !4964, file: !3957, line: 96, baseType: !72, size: 32, offset: 1536)
!4995 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !4964, file: !3957, line: 98, baseType: !4003, size: 160, offset: 1568)
!4996 = distinct !DICompileUnit(language: DW_LANG_C99, file: !242, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, nameTableKind: None)
!4997 = !DILocalVariable(name: "some_pending", scope: !4959, file: !4885, line: 58, type: !4925)
!4998 = !DILocalVariable(name: "prev_fail", scope: !4959, file: !4885, line: 59, type: !4925)
!4999 = !DILocalVariable(name: "fclose_fail", scope: !4959, file: !4885, line: 60, type: !4925)
!5000 = distinct !DISubprogram(name: "hard_locale", scope: !5001, file: !5001, line: 27, type: !5002, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !243, retainedNodes: !4)
!5001 = !DIFile(filename: "lib/hard-locale.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!5002 = !DISubroutineType(types: !5003)
!5003 = !{!27, !72}
!5004 = !DILocalVariable(name: "category", arg: 1, scope: !5000, file: !5001, line: 27, type: !72)
!5005 = !DILocation(line: 27, column: 18, scope: !5000)
!5006 = !DILocalVariable(name: "locale", scope: !5000, file: !5001, line: 29, type: !5007)
!5007 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 2056, elements: !5008)
!5008 = !{!5009}
!5009 = !DISubrange(count: 257)
!5010 = !DILocation(line: 29, column: 8, scope: !5000)
!5011 = !DILocation(line: 31, column: 25, scope: !5012)
!5012 = distinct !DILexicalBlock(scope: !5000, file: !5001, line: 31, column: 7)
!5013 = !DILocation(line: 31, column: 35, scope: !5012)
!5014 = !DILocation(line: 31, column: 7, scope: !5012)
!5015 = !DILocation(line: 31, column: 7, scope: !5000)
!5016 = !DILocation(line: 32, column: 5, scope: !5012)
!5017 = !DILocation(line: 34, column: 20, scope: !5000)
!5018 = !DILocation(line: 34, column: 12, scope: !5000)
!5019 = !DILocation(line: 34, column: 33, scope: !5000)
!5020 = !DILocation(line: 34, column: 38, scope: !5000)
!5021 = !DILocation(line: 34, column: 49, scope: !5000)
!5022 = !DILocation(line: 34, column: 41, scope: !5000)
!5023 = !DILocation(line: 34, column: 66, scope: !5000)
!5024 = !DILocation(line: 34, column: 10, scope: !5000)
!5025 = !DILocation(line: 34, column: 3, scope: !5000)
!5026 = !DILocation(line: 35, column: 1, scope: !5000)
!5027 = !DILocalVariable(name: "category", arg: 1, scope: !5028, file: !5001, line: 27, type: !72)
!5028 = distinct !DISubprogram(name: "hard_locale", scope: !5001, file: !5001, line: 27, type: !5002, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !5029, retainedNodes: !4)
!5029 = distinct !DICompileUnit(language: DW_LANG_C99, file: !244, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, nameTableKind: None)
!5030 = !DILocalVariable(name: "locale", scope: !5028, file: !5001, line: 29, type: !5007)
!5031 = distinct !DISubprogram(name: "locale_charset", scope: !5032, file: !5032, line: 831, type: !5033, scopeLine: 832, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !245, retainedNodes: !4)
!5032 = !DIFile(filename: "lib/localcharset.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!5033 = !DISubroutineType(types: !5034)
!5034 = !{!69}
!5035 = !DILocalVariable(name: "codeset", scope: !5031, file: !5032, line: 833, type: !69)
!5036 = !DILocation(line: 833, column: 15, scope: !5031)
!5037 = !DILocation(line: 847, column: 13, scope: !5031)
!5038 = !DILocation(line: 847, column: 11, scope: !5031)
!5039 = !DILocation(line: 911, column: 7, scope: !5040)
!5040 = distinct !DILexicalBlock(scope: !5031, file: !5032, line: 911, column: 7)
!5041 = !DILocation(line: 911, column: 15, scope: !5040)
!5042 = !DILocation(line: 911, column: 7, scope: !5031)
!5043 = !DILocation(line: 913, column: 13, scope: !5040)
!5044 = !DILocation(line: 913, column: 5, scope: !5040)
!5045 = !DILocation(line: 1070, column: 13, scope: !5046)
!5046 = distinct !DILexicalBlock(scope: !5047, file: !5032, line: 1070, column: 13)
!5047 = distinct !DILexicalBlock(scope: !5048, file: !5032, line: 1060, column: 7)
!5048 = distinct !DILexicalBlock(scope: !5031, file: !5032, line: 1019, column: 3)
!5049 = !DILocation(line: 1070, column: 24, scope: !5046)
!5050 = !DILocation(line: 1070, column: 13, scope: !5047)
!5051 = !DILocation(line: 1071, column: 19, scope: !5046)
!5052 = !DILocation(line: 1071, column: 11, scope: !5046)
!5053 = !DILocation(line: 1158, column: 10, scope: !5031)
!5054 = !DILocation(line: 1158, column: 3, scope: !5031)
!5055 = !DILocalVariable(name: "codeset", scope: !5056, file: !5032, line: 833, type: !69)
!5056 = distinct !DISubprogram(name: "locale_charset", scope: !5032, file: !5032, line: 831, type: !5033, scopeLine: 832, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !5057, retainedNodes: !4)
!5057 = distinct !DICompileUnit(language: DW_LANG_C99, file: !246, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !212, nameTableKind: None)
!5058 = distinct !DISubprogram(name: "mgetgroups", scope: !5059, file: !5059, line: 66, type: !4418, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !247, retainedNodes: !4)
!5059 = !DIFile(filename: "lib/mgetgroups.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!5060 = !DILocalVariable(name: "username", arg: 1, scope: !5058, file: !5059, line: 66, type: !69)
!5061 = !DILocation(line: 66, column: 25, scope: !5058)
!5062 = !DILocalVariable(name: "gid", arg: 2, scope: !5058, file: !5059, line: 66, type: !21)
!5063 = !DILocation(line: 66, column: 41, scope: !5058)
!5064 = !DILocalVariable(name: "groups", arg: 3, scope: !5058, file: !5059, line: 66, type: !4420)
!5065 = !DILocation(line: 66, column: 54, scope: !5058)
!5066 = !DILocalVariable(name: "max_n_groups", scope: !5058, file: !5059, line: 68, type: !72)
!5067 = !DILocation(line: 68, column: 7, scope: !5058)
!5068 = !DILocalVariable(name: "ng", scope: !5058, file: !5059, line: 69, type: !72)
!5069 = !DILocation(line: 69, column: 7, scope: !5058)
!5070 = !DILocalVariable(name: "g", scope: !5058, file: !5059, line: 70, type: !183)
!5071 = !DILocation(line: 70, column: 10, scope: !5058)
!5072 = !DILocation(line: 81, column: 7, scope: !5073)
!5073 = distinct !DILexicalBlock(scope: !5058, file: !5059, line: 81, column: 7)
!5074 = !DILocation(line: 81, column: 7, scope: !5058)
!5075 = !DILocation(line: 84, column: 20, scope: !5076)
!5076 = distinct !DILexicalBlock(scope: !5073, file: !5059, line: 82, column: 5)
!5077 = !DILocation(line: 86, column: 35, scope: !5076)
!5078 = !DILocation(line: 86, column: 11, scope: !5076)
!5079 = !DILocation(line: 86, column: 9, scope: !5076)
!5080 = !DILocation(line: 87, column: 11, scope: !5081)
!5081 = distinct !DILexicalBlock(scope: !5076, file: !5059, line: 87, column: 11)
!5082 = !DILocation(line: 87, column: 13, scope: !5081)
!5083 = !DILocation(line: 87, column: 11, scope: !5076)
!5084 = !DILocation(line: 88, column: 9, scope: !5081)
!5085 = !DILocation(line: 90, column: 7, scope: !5076)
!5086 = !DILocalVariable(name: "h", scope: !5087, file: !5059, line: 92, type: !183)
!5087 = distinct !DILexicalBlock(scope: !5076, file: !5059, line: 91, column: 9)
!5088 = !DILocation(line: 92, column: 18, scope: !5087)
!5089 = !DILocalVariable(name: "last_n_groups", scope: !5087, file: !5059, line: 93, type: !72)
!5090 = !DILocation(line: 93, column: 15, scope: !5087)
!5091 = !DILocation(line: 93, column: 31, scope: !5087)
!5092 = !DILocation(line: 96, column: 30, scope: !5087)
!5093 = !DILocation(line: 96, column: 40, scope: !5087)
!5094 = !DILocation(line: 96, column: 45, scope: !5087)
!5095 = !DILocation(line: 96, column: 16, scope: !5087)
!5096 = !DILocation(line: 96, column: 14, scope: !5087)
!5097 = !DILocation(line: 100, column: 15, scope: !5098)
!5098 = distinct !DILexicalBlock(scope: !5087, file: !5059, line: 100, column: 15)
!5099 = !DILocation(line: 100, column: 18, scope: !5098)
!5100 = !DILocation(line: 100, column: 22, scope: !5098)
!5101 = !DILocation(line: 100, column: 25, scope: !5098)
!5102 = !DILocation(line: 100, column: 42, scope: !5098)
!5103 = !DILocation(line: 100, column: 39, scope: !5098)
!5104 = !DILocation(line: 100, column: 15, scope: !5087)
!5105 = !DILocation(line: 101, column: 26, scope: !5098)
!5106 = !DILocation(line: 101, column: 13, scope: !5098)
!5107 = !DILocation(line: 103, column: 38, scope: !5108)
!5108 = distinct !DILexicalBlock(scope: !5087, file: !5059, line: 103, column: 15)
!5109 = !DILocation(line: 103, column: 41, scope: !5108)
!5110 = !DILocation(line: 103, column: 20, scope: !5108)
!5111 = !DILocation(line: 103, column: 18, scope: !5108)
!5112 = !DILocation(line: 103, column: 56, scope: !5108)
!5113 = !DILocation(line: 103, column: 15, scope: !5087)
!5114 = !DILocalVariable(name: "saved_errno", scope: !5115, file: !5059, line: 105, type: !72)
!5115 = distinct !DILexicalBlock(scope: !5108, file: !5059, line: 104, column: 13)
!5116 = !DILocation(line: 105, column: 19, scope: !5115)
!5117 = !DILocation(line: 105, column: 33, scope: !5115)
!5118 = !DILocation(line: 106, column: 21, scope: !5115)
!5119 = !DILocation(line: 106, column: 15, scope: !5115)
!5120 = !DILocation(line: 107, column: 23, scope: !5115)
!5121 = !DILocation(line: 107, column: 15, scope: !5115)
!5122 = !DILocation(line: 107, column: 21, scope: !5115)
!5123 = !DILocation(line: 108, column: 15, scope: !5115)
!5124 = !DILocation(line: 110, column: 15, scope: !5087)
!5125 = !DILocation(line: 110, column: 13, scope: !5087)
!5126 = !DILocation(line: 112, column: 20, scope: !5127)
!5127 = distinct !DILexicalBlock(scope: !5087, file: !5059, line: 112, column: 15)
!5128 = !DILocation(line: 112, column: 17, scope: !5127)
!5129 = !DILocation(line: 112, column: 15, scope: !5087)
!5130 = !DILocation(line: 114, column: 25, scope: !5131)
!5131 = distinct !DILexicalBlock(scope: !5127, file: !5059, line: 113, column: 13)
!5132 = !DILocation(line: 114, column: 16, scope: !5131)
!5133 = !DILocation(line: 114, column: 23, scope: !5131)
!5134 = !DILocation(line: 117, column: 22, scope: !5131)
!5135 = !DILocation(line: 117, column: 15, scope: !5131)
!5136 = distinct !{!5136, !5085, !5137}
!5137 = !DILocation(line: 119, column: 9, scope: !5076)
!5138 = !DILocation(line: 124, column: 19, scope: !5058)
!5139 = !DILocation(line: 125, column: 42, scope: !5058)
!5140 = !DILocation(line: 125, column: 52, scope: !5058)
!5141 = !DILocation(line: 125, column: 21, scope: !5058)
!5142 = !DILocation(line: 126, column: 21, scope: !5058)
!5143 = !DILocation(line: 124, column: 16, scope: !5058)
!5144 = !DILocation(line: 131, column: 7, scope: !5145)
!5145 = distinct !DILexicalBlock(scope: !5058, file: !5059, line: 131, column: 7)
!5146 = !DILocation(line: 131, column: 20, scope: !5145)
!5147 = !DILocation(line: 131, column: 7, scope: !5058)
!5148 = !DILocation(line: 133, column: 11, scope: !5149)
!5149 = distinct !DILexicalBlock(scope: !5150, file: !5059, line: 133, column: 11)
!5150 = distinct !DILexicalBlock(scope: !5145, file: !5059, line: 132, column: 5)
!5151 = !DILocation(line: 133, column: 17, scope: !5149)
!5152 = !DILocation(line: 133, column: 27, scope: !5149)
!5153 = !DILocation(line: 133, column: 35, scope: !5149)
!5154 = !DILocation(line: 133, column: 33, scope: !5149)
!5155 = !DILocation(line: 133, column: 11, scope: !5150)
!5156 = !DILocation(line: 135, column: 21, scope: !5157)
!5157 = distinct !DILexicalBlock(scope: !5149, file: !5059, line: 134, column: 9)
!5158 = !DILocation(line: 135, column: 12, scope: !5157)
!5159 = !DILocation(line: 135, column: 19, scope: !5157)
!5160 = !DILocation(line: 136, column: 16, scope: !5157)
!5161 = !DILocation(line: 136, column: 12, scope: !5157)
!5162 = !DILocation(line: 136, column: 14, scope: !5157)
!5163 = !DILocation(line: 137, column: 18, scope: !5157)
!5164 = !DILocation(line: 137, column: 22, scope: !5157)
!5165 = !DILocation(line: 137, column: 11, scope: !5157)
!5166 = !DILocation(line: 139, column: 7, scope: !5150)
!5167 = !DILocation(line: 142, column: 7, scope: !5168)
!5168 = distinct !DILexicalBlock(scope: !5058, file: !5059, line: 142, column: 7)
!5169 = !DILocation(line: 142, column: 20, scope: !5168)
!5170 = !DILocation(line: 142, column: 25, scope: !5168)
!5171 = !DILocation(line: 142, column: 30, scope: !5168)
!5172 = !DILocation(line: 142, column: 39, scope: !5168)
!5173 = !DILocation(line: 142, column: 42, scope: !5168)
!5174 = !DILocation(line: 142, column: 46, scope: !5168)
!5175 = !DILocation(line: 142, column: 7, scope: !5058)
!5176 = !DILocation(line: 143, column: 17, scope: !5168)
!5177 = !DILocation(line: 143, column: 5, scope: !5168)
!5178 = !DILocation(line: 144, column: 31, scope: !5058)
!5179 = !DILocation(line: 144, column: 7, scope: !5058)
!5180 = !DILocation(line: 144, column: 5, scope: !5058)
!5181 = !DILocation(line: 145, column: 7, scope: !5182)
!5182 = distinct !DILexicalBlock(scope: !5058, file: !5059, line: 145, column: 7)
!5183 = !DILocation(line: 145, column: 9, scope: !5182)
!5184 = !DILocation(line: 145, column: 7, scope: !5058)
!5185 = !DILocation(line: 146, column: 5, scope: !5182)
!5186 = !DILocation(line: 148, column: 9, scope: !5058)
!5187 = !DILocation(line: 149, column: 23, scope: !5058)
!5188 = !DILocation(line: 149, column: 37, scope: !5058)
!5189 = !DILocation(line: 149, column: 40, scope: !5058)
!5190 = !DILocation(line: 149, column: 50, scope: !5058)
!5191 = !DILocation(line: 149, column: 11, scope: !5058)
!5192 = !DILocation(line: 150, column: 22, scope: !5058)
!5193 = !DILocation(line: 150, column: 38, scope: !5058)
!5194 = !DILocation(line: 150, column: 42, scope: !5058)
!5195 = !DILocation(line: 150, column: 35, scope: !5058)
!5196 = !DILocation(line: 151, column: 33, scope: !5058)
!5197 = !DILocation(line: 151, column: 38, scope: !5058)
!5198 = !DILocation(line: 151, column: 42, scope: !5058)
!5199 = !DILocation(line: 151, column: 35, scope: !5058)
!5200 = !DILocation(line: 150, column: 11, scope: !5058)
!5201 = !DILocation(line: 148, column: 6, scope: !5058)
!5202 = !DILocation(line: 153, column: 7, scope: !5203)
!5203 = distinct !DILexicalBlock(scope: !5058, file: !5059, line: 153, column: 7)
!5204 = !DILocation(line: 153, column: 10, scope: !5203)
!5205 = !DILocation(line: 153, column: 7, scope: !5058)
!5206 = !DILocalVariable(name: "saved_errno", scope: !5207, file: !5059, line: 156, type: !72)
!5207 = distinct !DILexicalBlock(scope: !5203, file: !5059, line: 154, column: 5)
!5208 = !DILocation(line: 156, column: 11, scope: !5207)
!5209 = !DILocation(line: 156, column: 25, scope: !5207)
!5210 = !DILocation(line: 157, column: 13, scope: !5207)
!5211 = !DILocation(line: 157, column: 7, scope: !5207)
!5212 = !DILocation(line: 158, column: 15, scope: !5207)
!5213 = !DILocation(line: 158, column: 7, scope: !5207)
!5214 = !DILocation(line: 158, column: 13, scope: !5207)
!5215 = !DILocation(line: 159, column: 7, scope: !5207)
!5216 = !DILocation(line: 162, column: 8, scope: !5217)
!5217 = distinct !DILexicalBlock(scope: !5058, file: !5059, line: 162, column: 7)
!5218 = !DILocation(line: 162, column: 17, scope: !5217)
!5219 = !DILocation(line: 162, column: 20, scope: !5217)
!5220 = !DILocation(line: 162, column: 24, scope: !5217)
!5221 = !DILocation(line: 162, column: 7, scope: !5058)
!5222 = !DILocation(line: 164, column: 12, scope: !5223)
!5223 = distinct !DILexicalBlock(scope: !5217, file: !5059, line: 163, column: 5)
!5224 = !DILocation(line: 164, column: 8, scope: !5223)
!5225 = !DILocation(line: 164, column: 10, scope: !5223)
!5226 = !DILocation(line: 165, column: 9, scope: !5223)
!5227 = !DILocation(line: 166, column: 5, scope: !5223)
!5228 = !DILocation(line: 167, column: 13, scope: !5058)
!5229 = !DILocation(line: 167, column: 4, scope: !5058)
!5230 = !DILocation(line: 167, column: 11, scope: !5058)
!5231 = !DILocation(line: 185, column: 11, scope: !5232)
!5232 = distinct !DILexicalBlock(scope: !5058, file: !5059, line: 185, column: 7)
!5233 = !DILocation(line: 185, column: 9, scope: !5232)
!5234 = !DILocation(line: 185, column: 7, scope: !5058)
!5235 = !DILocalVariable(name: "first", scope: !5236, file: !5059, line: 187, type: !21)
!5236 = distinct !DILexicalBlock(scope: !5232, file: !5059, line: 186, column: 5)
!5237 = !DILocation(line: 187, column: 13, scope: !5236)
!5238 = !DILocation(line: 187, column: 22, scope: !5236)
!5239 = !DILocation(line: 187, column: 21, scope: !5236)
!5240 = !DILocalVariable(name: "next", scope: !5236, file: !5059, line: 188, type: !183)
!5241 = !DILocation(line: 188, column: 14, scope: !5236)
!5242 = !DILocalVariable(name: "groups_end", scope: !5236, file: !5059, line: 189, type: !183)
!5243 = !DILocation(line: 189, column: 14, scope: !5236)
!5244 = !DILocation(line: 189, column: 27, scope: !5236)
!5245 = !DILocation(line: 189, column: 31, scope: !5236)
!5246 = !DILocation(line: 189, column: 29, scope: !5236)
!5247 = !DILocation(line: 191, column: 19, scope: !5248)
!5248 = distinct !DILexicalBlock(scope: !5236, file: !5059, line: 191, column: 7)
!5249 = !DILocation(line: 191, column: 21, scope: !5248)
!5250 = !DILocation(line: 191, column: 17, scope: !5248)
!5251 = !DILocation(line: 191, column: 12, scope: !5248)
!5252 = !DILocation(line: 191, column: 26, scope: !5253)
!5253 = distinct !DILexicalBlock(scope: !5248, file: !5059, line: 191, column: 7)
!5254 = !DILocation(line: 191, column: 33, scope: !5253)
!5255 = !DILocation(line: 191, column: 31, scope: !5253)
!5256 = !DILocation(line: 191, column: 7, scope: !5248)
!5257 = !DILocation(line: 193, column: 16, scope: !5258)
!5258 = distinct !DILexicalBlock(scope: !5259, file: !5059, line: 193, column: 15)
!5259 = distinct !DILexicalBlock(scope: !5253, file: !5059, line: 192, column: 9)
!5260 = !DILocation(line: 193, column: 15, scope: !5258)
!5261 = !DILocation(line: 193, column: 24, scope: !5258)
!5262 = !DILocation(line: 193, column: 21, scope: !5258)
!5263 = !DILocation(line: 193, column: 30, scope: !5258)
!5264 = !DILocation(line: 193, column: 34, scope: !5258)
!5265 = !DILocation(line: 193, column: 33, scope: !5258)
!5266 = !DILocation(line: 193, column: 43, scope: !5258)
!5267 = !DILocation(line: 193, column: 42, scope: !5258)
!5268 = !DILocation(line: 193, column: 39, scope: !5258)
!5269 = !DILocation(line: 193, column: 15, scope: !5259)
!5270 = !DILocation(line: 194, column: 15, scope: !5258)
!5271 = !DILocation(line: 194, column: 13, scope: !5258)
!5272 = !DILocation(line: 196, column: 21, scope: !5258)
!5273 = !DILocation(line: 196, column: 20, scope: !5258)
!5274 = !DILocation(line: 196, column: 14, scope: !5258)
!5275 = !DILocation(line: 196, column: 18, scope: !5258)
!5276 = !DILocation(line: 197, column: 9, scope: !5259)
!5277 = !DILocation(line: 191, column: 49, scope: !5253)
!5278 = !DILocation(line: 191, column: 7, scope: !5253)
!5279 = distinct !{!5279, !5256, !5280}
!5280 = !DILocation(line: 197, column: 9, scope: !5248)
!5281 = !DILocation(line: 198, column: 5, scope: !5236)
!5282 = !DILocation(line: 200, column: 10, scope: !5058)
!5283 = !DILocation(line: 200, column: 3, scope: !5058)
!5284 = !DILocation(line: 201, column: 1, scope: !5058)
!5285 = !DILocalVariable(name: "username", arg: 1, scope: !5286, file: !5059, line: 66, type: !69)
!5286 = distinct !DISubprogram(name: "mgetgroups", scope: !5059, file: !5059, line: 66, type: !4418, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !5287, retainedNodes: !4)
!5287 = distinct !DICompileUnit(language: DW_LANG_C99, file: !248, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !249, nameTableKind: None)
!5288 = !DILocalVariable(name: "gid", arg: 2, scope: !5286, file: !5059, line: 66, type: !21)
!5289 = !DILocalVariable(name: "groups", arg: 3, scope: !5286, file: !5059, line: 66, type: !4420)
!5290 = !DILocalVariable(name: "max_n_groups", scope: !5286, file: !5059, line: 68, type: !72)
!5291 = !DILocalVariable(name: "ng", scope: !5286, file: !5059, line: 69, type: !72)
!5292 = !DILocalVariable(name: "g", scope: !5286, file: !5059, line: 70, type: !183)
!5293 = !DILocalVariable(name: "next", scope: !5294, file: !5059, line: 188, type: !183)
!5294 = distinct !DILexicalBlock(scope: !5295, file: !5059, line: 186, column: 5)
!5295 = distinct !DILexicalBlock(scope: !5296, file: !5059, line: 185, column: 7)
!5296 = distinct !DISubprogram(name: "mgetgroups", scope: !5059, file: !5059, line: 66, type: !4418, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !5297, retainedNodes: !4)
!5297 = distinct !DICompileUnit(language: DW_LANG_C99, file: !248, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !249, nameTableKind: None)
!5298 = !DILocalVariable(name: "groups_end", scope: !5294, file: !5059, line: 189, type: !183)
!5299 = distinct !DISubprogram(name: "realloc_groupbuf", scope: !5059, file: !5059, line: 43, type: !5300, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !247, retainedNodes: !4)
!5300 = !DISubroutineType(types: !5301)
!5301 = !{!183, !183, !134}
!5302 = !DILocalVariable(name: "g", arg: 1, scope: !5299, file: !5059, line: 43, type: !183)
!5303 = !DILocation(line: 43, column: 26, scope: !5299)
!5304 = !DILocalVariable(name: "num", arg: 2, scope: !5299, file: !5059, line: 43, type: !134)
!5305 = !DILocation(line: 43, column: 36, scope: !5299)
!5306 = !DILocation(line: 45, column: 7, scope: !5307)
!5307 = distinct !DILexicalBlock(scope: !5299, file: !5059, line: 45, column: 7)
!5308 = !DILocation(line: 45, column: 7, scope: !5299)
!5309 = !DILocation(line: 47, column: 7, scope: !5310)
!5310 = distinct !DILexicalBlock(scope: !5307, file: !5059, line: 46, column: 5)
!5311 = !DILocation(line: 47, column: 13, scope: !5310)
!5312 = !DILocation(line: 48, column: 7, scope: !5310)
!5313 = !DILocation(line: 51, column: 19, scope: !5299)
!5314 = !DILocation(line: 51, column: 22, scope: !5299)
!5315 = !DILocation(line: 51, column: 26, scope: !5299)
!5316 = !DILocation(line: 51, column: 10, scope: !5299)
!5317 = !DILocation(line: 51, column: 3, scope: !5299)
!5318 = !DILocation(line: 52, column: 1, scope: !5299)
!5319 = !DILocalVariable(name: "g", arg: 1, scope: !5320, file: !5059, line: 43, type: !183)
!5320 = distinct !DISubprogram(name: "realloc_groupbuf", scope: !5059, file: !5059, line: 43, type: !5300, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5321, retainedNodes: !4)
!5321 = distinct !DICompileUnit(language: DW_LANG_C99, file: !248, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !249, nameTableKind: None)
!5322 = !DILocalVariable(name: "num", arg: 2, scope: !5320, file: !5059, line: 43, type: !134)
!5323 = distinct !DISubprogram(name: "setlocale_null_r", scope: !5324, file: !5324, line: 269, type: !5325, scopeLine: 270, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !250, retainedNodes: !4)
!5324 = !DIFile(filename: "lib/setlocale_null.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!5325 = !DISubroutineType(types: !5326)
!5326 = !{!72, !72, !6, !134}
!5327 = !DILocalVariable(name: "category", arg: 1, scope: !5323, file: !5324, line: 269, type: !72)
!5328 = !DILocation(line: 269, column: 23, scope: !5323)
!5329 = !DILocalVariable(name: "buf", arg: 2, scope: !5323, file: !5324, line: 269, type: !6)
!5330 = !DILocation(line: 269, column: 39, scope: !5323)
!5331 = !DILocalVariable(name: "bufsize", arg: 3, scope: !5323, file: !5324, line: 269, type: !134)
!5332 = !DILocation(line: 269, column: 51, scope: !5323)
!5333 = !DILocation(line: 274, column: 35, scope: !5323)
!5334 = !DILocation(line: 274, column: 45, scope: !5323)
!5335 = !DILocation(line: 274, column: 50, scope: !5323)
!5336 = !DILocation(line: 274, column: 10, scope: !5323)
!5337 = !DILocation(line: 274, column: 3, scope: !5323)
!5338 = !DILocalVariable(name: "category", arg: 1, scope: !5339, file: !5324, line: 269, type: !72)
!5339 = distinct !DISubprogram(name: "setlocale_null_r", scope: !5324, file: !5324, line: 269, type: !5325, scopeLine: 270, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !5340, retainedNodes: !4)
!5340 = distinct !DICompileUnit(language: DW_LANG_C99, file: !251, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !212, nameTableKind: None)
!5341 = !DILocalVariable(name: "buf", arg: 2, scope: !5339, file: !5324, line: 269, type: !6)
!5342 = !DILocalVariable(name: "bufsize", arg: 3, scope: !5339, file: !5324, line: 269, type: !134)
!5343 = distinct !DISubprogram(name: "setlocale_null_unlocked", scope: !5324, file: !5324, line: 91, type: !5325, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !250, retainedNodes: !4)
!5344 = !DILocalVariable(name: "category", arg: 1, scope: !5343, file: !5324, line: 91, type: !72)
!5345 = !DILocation(line: 91, column: 30, scope: !5343)
!5346 = !DILocalVariable(name: "buf", arg: 2, scope: !5343, file: !5324, line: 91, type: !6)
!5347 = !DILocation(line: 91, column: 46, scope: !5343)
!5348 = !DILocalVariable(name: "bufsize", arg: 3, scope: !5343, file: !5324, line: 91, type: !134)
!5349 = !DILocation(line: 91, column: 58, scope: !5343)
!5350 = !DILocalVariable(name: "result", scope: !5343, file: !5324, line: 140, type: !69)
!5351 = !DILocation(line: 140, column: 15, scope: !5343)
!5352 = !DILocation(line: 140, column: 51, scope: !5343)
!5353 = !DILocation(line: 140, column: 24, scope: !5343)
!5354 = !DILocation(line: 142, column: 7, scope: !5355)
!5355 = distinct !DILexicalBlock(scope: !5343, file: !5324, line: 142, column: 7)
!5356 = !DILocation(line: 142, column: 14, scope: !5355)
!5357 = !DILocation(line: 142, column: 7, scope: !5343)
!5358 = !DILocation(line: 145, column: 11, scope: !5359)
!5359 = distinct !DILexicalBlock(scope: !5360, file: !5324, line: 145, column: 11)
!5360 = distinct !DILexicalBlock(scope: !5355, file: !5324, line: 143, column: 5)
!5361 = !DILocation(line: 145, column: 19, scope: !5359)
!5362 = !DILocation(line: 145, column: 11, scope: !5360)
!5363 = !DILocation(line: 149, column: 9, scope: !5359)
!5364 = !DILocation(line: 149, column: 16, scope: !5359)
!5365 = !DILocation(line: 150, column: 7, scope: !5360)
!5366 = !DILocalVariable(name: "length", scope: !5367, file: !5324, line: 154, type: !134)
!5367 = distinct !DILexicalBlock(scope: !5355, file: !5324, line: 153, column: 5)
!5368 = !DILocation(line: 154, column: 14, scope: !5367)
!5369 = !DILocation(line: 154, column: 31, scope: !5367)
!5370 = !DILocation(line: 154, column: 23, scope: !5367)
!5371 = !DILocation(line: 155, column: 11, scope: !5372)
!5372 = distinct !DILexicalBlock(scope: !5367, file: !5324, line: 155, column: 11)
!5373 = !DILocation(line: 155, column: 20, scope: !5372)
!5374 = !DILocation(line: 155, column: 18, scope: !5372)
!5375 = !DILocation(line: 155, column: 11, scope: !5367)
!5376 = !DILocation(line: 157, column: 19, scope: !5377)
!5377 = distinct !DILexicalBlock(scope: !5372, file: !5324, line: 156, column: 9)
!5378 = !DILocation(line: 157, column: 24, scope: !5377)
!5379 = !DILocation(line: 157, column: 32, scope: !5377)
!5380 = !DILocation(line: 157, column: 39, scope: !5377)
!5381 = !DILocation(line: 157, column: 11, scope: !5377)
!5382 = !DILocation(line: 158, column: 11, scope: !5377)
!5383 = !DILocation(line: 162, column: 15, scope: !5384)
!5384 = distinct !DILexicalBlock(scope: !5385, file: !5324, line: 162, column: 15)
!5385 = distinct !DILexicalBlock(scope: !5372, file: !5324, line: 161, column: 9)
!5386 = !DILocation(line: 162, column: 23, scope: !5384)
!5387 = !DILocation(line: 162, column: 15, scope: !5385)
!5388 = !DILocation(line: 167, column: 23, scope: !5389)
!5389 = distinct !DILexicalBlock(scope: !5384, file: !5324, line: 163, column: 13)
!5390 = !DILocation(line: 167, column: 28, scope: !5389)
!5391 = !DILocation(line: 167, column: 36, scope: !5389)
!5392 = !DILocation(line: 167, column: 44, scope: !5389)
!5393 = !DILocation(line: 167, column: 15, scope: !5389)
!5394 = !DILocation(line: 168, column: 15, scope: !5389)
!5395 = !DILocation(line: 168, column: 19, scope: !5389)
!5396 = !DILocation(line: 168, column: 27, scope: !5389)
!5397 = !DILocation(line: 168, column: 32, scope: !5389)
!5398 = !DILocation(line: 169, column: 13, scope: !5389)
!5399 = !DILocation(line: 170, column: 11, scope: !5385)
!5400 = !DILocation(line: 174, column: 1, scope: !5343)
!5401 = !DILocalVariable(name: "category", arg: 1, scope: !5402, file: !5324, line: 91, type: !72)
!5402 = distinct !DISubprogram(name: "setlocale_null_unlocked", scope: !5324, file: !5324, line: 91, type: !5325, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5403, retainedNodes: !4)
!5403 = distinct !DICompileUnit(language: DW_LANG_C99, file: !251, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !212, nameTableKind: None)
!5404 = !DILocalVariable(name: "buf", arg: 2, scope: !5402, file: !5324, line: 91, type: !6)
!5405 = !DILocalVariable(name: "bufsize", arg: 3, scope: !5402, file: !5324, line: 91, type: !134)
!5406 = !DILocalVariable(name: "result", scope: !5402, file: !5324, line: 140, type: !69)
!5407 = distinct !DISubprogram(name: "setlocale_null_androidfix", scope: !5324, file: !5324, line: 60, type: !5408, scopeLine: 61, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !250, retainedNodes: !4)
!5408 = !DISubroutineType(types: !5409)
!5409 = !{!69, !72}
!5410 = !DILocalVariable(name: "category", arg: 1, scope: !5407, file: !5324, line: 60, type: !72)
!5411 = !DILocation(line: 60, column: 32, scope: !5407)
!5412 = !DILocalVariable(name: "result", scope: !5407, file: !5324, line: 62, type: !69)
!5413 = !DILocation(line: 62, column: 15, scope: !5407)
!5414 = !DILocation(line: 62, column: 35, scope: !5407)
!5415 = !DILocation(line: 62, column: 24, scope: !5407)
!5416 = !DILocation(line: 87, column: 10, scope: !5407)
!5417 = !DILocation(line: 87, column: 3, scope: !5407)
!5418 = !DILocalVariable(name: "category", arg: 1, scope: !5419, file: !5324, line: 60, type: !72)
!5419 = distinct !DISubprogram(name: "setlocale_null_androidfix", scope: !5324, file: !5324, line: 60, type: !5408, scopeLine: 61, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5420, retainedNodes: !4)
!5420 = distinct !DICompileUnit(language: DW_LANG_C99, file: !251, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !212, nameTableKind: None)
!5421 = !DILocalVariable(name: "result", scope: !5419, file: !5324, line: 62, type: !69)
!5422 = distinct !DISubprogram(name: "rpl_fclose", scope: !5423, file: !5423, line: 58, type: !5424, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !252, retainedNodes: !4)
!5423 = !DIFile(filename: "lib/fclose.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!5424 = !DISubroutineType(types: !5425)
!5425 = !{!72, !5426}
!5426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5427, size: 64)
!5427 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !3955, line: 7, baseType: !5428)
!5428 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !3957, line: 49, size: 1728, elements: !5429)
!5429 = !{!5430, !5431, !5432, !5433, !5434, !5435, !5436, !5437, !5438, !5439, !5440, !5441, !5442, !5443, !5445, !5446, !5447, !5448, !5449, !5450, !5451, !5452, !5453, !5454, !5455, !5456, !5457, !5458, !5459}
!5430 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !5428, file: !3957, line: 51, baseType: !72, size: 32)
!5431 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !5428, file: !3957, line: 54, baseType: !6, size: 64, offset: 64)
!5432 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !5428, file: !3957, line: 55, baseType: !6, size: 64, offset: 128)
!5433 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !5428, file: !3957, line: 56, baseType: !6, size: 64, offset: 192)
!5434 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !5428, file: !3957, line: 57, baseType: !6, size: 64, offset: 256)
!5435 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !5428, file: !3957, line: 58, baseType: !6, size: 64, offset: 320)
!5436 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !5428, file: !3957, line: 59, baseType: !6, size: 64, offset: 384)
!5437 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !5428, file: !3957, line: 60, baseType: !6, size: 64, offset: 448)
!5438 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !5428, file: !3957, line: 61, baseType: !6, size: 64, offset: 512)
!5439 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !5428, file: !3957, line: 64, baseType: !6, size: 64, offset: 576)
!5440 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !5428, file: !3957, line: 65, baseType: !6, size: 64, offset: 640)
!5441 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !5428, file: !3957, line: 66, baseType: !6, size: 64, offset: 704)
!5442 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !5428, file: !3957, line: 68, baseType: !3972, size: 64, offset: 768)
!5443 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !5428, file: !3957, line: 70, baseType: !5444, size: 64, offset: 832)
!5444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5428, size: 64)
!5445 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !5428, file: !3957, line: 72, baseType: !72, size: 32, offset: 896)
!5446 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !5428, file: !3957, line: 73, baseType: !72, size: 32, offset: 928)
!5447 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !5428, file: !3957, line: 74, baseType: !3979, size: 64, offset: 960)
!5448 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !5428, file: !3957, line: 77, baseType: !133, size: 16, offset: 1024)
!5449 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !5428, file: !3957, line: 78, baseType: !3982, size: 8, offset: 1040)
!5450 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !5428, file: !3957, line: 79, baseType: !3984, size: 8, offset: 1048)
!5451 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !5428, file: !3957, line: 81, baseType: !3988, size: 64, offset: 1088)
!5452 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !5428, file: !3957, line: 89, baseType: !3991, size: 64, offset: 1152)
!5453 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !5428, file: !3957, line: 91, baseType: !3993, size: 64, offset: 1216)
!5454 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !5428, file: !3957, line: 92, baseType: !3996, size: 64, offset: 1280)
!5455 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !5428, file: !3957, line: 93, baseType: !5444, size: 64, offset: 1344)
!5456 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !5428, file: !3957, line: 94, baseType: !8, size: 64, offset: 1408)
!5457 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !5428, file: !3957, line: 95, baseType: !134, size: 64, offset: 1472)
!5458 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !5428, file: !3957, line: 96, baseType: !72, size: 32, offset: 1536)
!5459 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !5428, file: !3957, line: 98, baseType: !4003, size: 160, offset: 1568)
!5460 = !DILocalVariable(name: "fp", arg: 1, scope: !5422, file: !5423, line: 58, type: !5426)
!5461 = !DILocation(line: 58, column: 19, scope: !5422)
!5462 = !DILocalVariable(name: "saved_errno", scope: !5422, file: !5423, line: 60, type: !72)
!5463 = !DILocation(line: 60, column: 7, scope: !5422)
!5464 = !DILocalVariable(name: "fd", scope: !5422, file: !5423, line: 61, type: !72)
!5465 = !DILocation(line: 61, column: 7, scope: !5422)
!5466 = !DILocalVariable(name: "result", scope: !5422, file: !5423, line: 62, type: !72)
!5467 = !DILocation(line: 62, column: 7, scope: !5422)
!5468 = !DILocation(line: 65, column: 16, scope: !5422)
!5469 = !DILocation(line: 65, column: 8, scope: !5422)
!5470 = !DILocation(line: 65, column: 6, scope: !5422)
!5471 = !DILocation(line: 66, column: 7, scope: !5472)
!5472 = distinct !DILexicalBlock(scope: !5422, file: !5423, line: 66, column: 7)
!5473 = !DILocation(line: 66, column: 10, scope: !5472)
!5474 = !DILocation(line: 66, column: 7, scope: !5422)
!5475 = !DILocation(line: 67, column: 28, scope: !5472)
!5476 = !DILocation(line: 67, column: 12, scope: !5472)
!5477 = !DILocation(line: 67, column: 5, scope: !5472)
!5478 = !DILocation(line: 72, column: 9, scope: !5479)
!5479 = distinct !DILexicalBlock(scope: !5422, file: !5423, line: 72, column: 7)
!5480 = !DILocation(line: 72, column: 23, scope: !5479)
!5481 = !DILocation(line: 72, column: 41, scope: !5479)
!5482 = !DILocation(line: 72, column: 33, scope: !5479)
!5483 = !DILocation(line: 72, column: 26, scope: !5479)
!5484 = !DILocation(line: 72, column: 59, scope: !5479)
!5485 = !DILocation(line: 73, column: 7, scope: !5479)
!5486 = !DILocation(line: 73, column: 18, scope: !5479)
!5487 = !DILocation(line: 73, column: 10, scope: !5479)
!5488 = !DILocation(line: 72, column: 7, scope: !5422)
!5489 = !DILocation(line: 74, column: 19, scope: !5479)
!5490 = !DILocation(line: 74, column: 17, scope: !5479)
!5491 = !DILocation(line: 74, column: 5, scope: !5479)
!5492 = !DILocation(line: 100, column: 28, scope: !5422)
!5493 = !DILocation(line: 100, column: 12, scope: !5422)
!5494 = !DILocation(line: 100, column: 10, scope: !5422)
!5495 = !DILocation(line: 105, column: 7, scope: !5496)
!5496 = distinct !DILexicalBlock(scope: !5422, file: !5423, line: 105, column: 7)
!5497 = !DILocation(line: 105, column: 19, scope: !5496)
!5498 = !DILocation(line: 105, column: 7, scope: !5422)
!5499 = !DILocation(line: 107, column: 15, scope: !5500)
!5500 = distinct !DILexicalBlock(scope: !5496, file: !5423, line: 106, column: 5)
!5501 = !DILocation(line: 107, column: 7, scope: !5500)
!5502 = !DILocation(line: 107, column: 13, scope: !5500)
!5503 = !DILocation(line: 108, column: 14, scope: !5500)
!5504 = !DILocation(line: 109, column: 5, scope: !5500)
!5505 = !DILocation(line: 111, column: 10, scope: !5422)
!5506 = !DILocation(line: 111, column: 3, scope: !5422)
!5507 = !DILocation(line: 112, column: 1, scope: !5422)
!5508 = !DILocalVariable(name: "fp", arg: 1, scope: !5509, file: !5423, line: 58, type: !5512)
!5509 = distinct !DISubprogram(name: "rpl_fclose", scope: !5423, file: !5423, line: 58, type: !5510, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !5546, retainedNodes: !4)
!5510 = !DISubroutineType(types: !5511)
!5511 = !{!72, !5512}
!5512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5513, size: 64)
!5513 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !3955, line: 7, baseType: !5514)
!5514 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !3957, line: 49, size: 1728, elements: !5515)
!5515 = !{!5516, !5517, !5518, !5519, !5520, !5521, !5522, !5523, !5524, !5525, !5526, !5527, !5528, !5529, !5531, !5532, !5533, !5534, !5535, !5536, !5537, !5538, !5539, !5540, !5541, !5542, !5543, !5544, !5545}
!5516 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !5514, file: !3957, line: 51, baseType: !72, size: 32)
!5517 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !5514, file: !3957, line: 54, baseType: !6, size: 64, offset: 64)
!5518 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !5514, file: !3957, line: 55, baseType: !6, size: 64, offset: 128)
!5519 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !5514, file: !3957, line: 56, baseType: !6, size: 64, offset: 192)
!5520 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !5514, file: !3957, line: 57, baseType: !6, size: 64, offset: 256)
!5521 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !5514, file: !3957, line: 58, baseType: !6, size: 64, offset: 320)
!5522 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !5514, file: !3957, line: 59, baseType: !6, size: 64, offset: 384)
!5523 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !5514, file: !3957, line: 60, baseType: !6, size: 64, offset: 448)
!5524 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !5514, file: !3957, line: 61, baseType: !6, size: 64, offset: 512)
!5525 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !5514, file: !3957, line: 64, baseType: !6, size: 64, offset: 576)
!5526 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !5514, file: !3957, line: 65, baseType: !6, size: 64, offset: 640)
!5527 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !5514, file: !3957, line: 66, baseType: !6, size: 64, offset: 704)
!5528 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !5514, file: !3957, line: 68, baseType: !3972, size: 64, offset: 768)
!5529 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !5514, file: !3957, line: 70, baseType: !5530, size: 64, offset: 832)
!5530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5514, size: 64)
!5531 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !5514, file: !3957, line: 72, baseType: !72, size: 32, offset: 896)
!5532 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !5514, file: !3957, line: 73, baseType: !72, size: 32, offset: 928)
!5533 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !5514, file: !3957, line: 74, baseType: !3979, size: 64, offset: 960)
!5534 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !5514, file: !3957, line: 77, baseType: !133, size: 16, offset: 1024)
!5535 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !5514, file: !3957, line: 78, baseType: !3982, size: 8, offset: 1040)
!5536 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !5514, file: !3957, line: 79, baseType: !3984, size: 8, offset: 1048)
!5537 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !5514, file: !3957, line: 81, baseType: !3988, size: 64, offset: 1088)
!5538 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !5514, file: !3957, line: 89, baseType: !3991, size: 64, offset: 1152)
!5539 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !5514, file: !3957, line: 91, baseType: !3993, size: 64, offset: 1216)
!5540 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !5514, file: !3957, line: 92, baseType: !3996, size: 64, offset: 1280)
!5541 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !5514, file: !3957, line: 93, baseType: !5530, size: 64, offset: 1344)
!5542 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !5514, file: !3957, line: 94, baseType: !8, size: 64, offset: 1408)
!5543 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !5514, file: !3957, line: 95, baseType: !134, size: 64, offset: 1472)
!5544 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !5514, file: !3957, line: 96, baseType: !72, size: 32, offset: 1536)
!5545 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !5514, file: !3957, line: 98, baseType: !4003, size: 160, offset: 1568)
!5546 = distinct !DICompileUnit(language: DW_LANG_C99, file: !253, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, nameTableKind: None)
!5547 = !DILocalVariable(name: "saved_errno", scope: !5509, file: !5423, line: 60, type: !72)
!5548 = !DILocalVariable(name: "fd", scope: !5509, file: !5423, line: 61, type: !72)
!5549 = !DILocalVariable(name: "result", scope: !5509, file: !5423, line: 62, type: !72)
!5550 = distinct !DISubprogram(name: "rpl_fflush", scope: !5551, file: !5551, line: 129, type: !5552, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !254, retainedNodes: !4)
!5551 = !DIFile(filename: "lib/fflush.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!5552 = !DISubroutineType(types: !5553)
!5553 = !{!72, !5554}
!5554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5555, size: 64)
!5555 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !3955, line: 7, baseType: !5556)
!5556 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !3957, line: 49, size: 1728, elements: !5557)
!5557 = !{!5558, !5559, !5560, !5561, !5562, !5563, !5564, !5565, !5566, !5567, !5568, !5569, !5570, !5571, !5573, !5574, !5575, !5576, !5577, !5578, !5579, !5580, !5581, !5582, !5583, !5584, !5585, !5586, !5587}
!5558 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !5556, file: !3957, line: 51, baseType: !72, size: 32)
!5559 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !5556, file: !3957, line: 54, baseType: !6, size: 64, offset: 64)
!5560 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !5556, file: !3957, line: 55, baseType: !6, size: 64, offset: 128)
!5561 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !5556, file: !3957, line: 56, baseType: !6, size: 64, offset: 192)
!5562 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !5556, file: !3957, line: 57, baseType: !6, size: 64, offset: 256)
!5563 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !5556, file: !3957, line: 58, baseType: !6, size: 64, offset: 320)
!5564 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !5556, file: !3957, line: 59, baseType: !6, size: 64, offset: 384)
!5565 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !5556, file: !3957, line: 60, baseType: !6, size: 64, offset: 448)
!5566 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !5556, file: !3957, line: 61, baseType: !6, size: 64, offset: 512)
!5567 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !5556, file: !3957, line: 64, baseType: !6, size: 64, offset: 576)
!5568 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !5556, file: !3957, line: 65, baseType: !6, size: 64, offset: 640)
!5569 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !5556, file: !3957, line: 66, baseType: !6, size: 64, offset: 704)
!5570 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !5556, file: !3957, line: 68, baseType: !3972, size: 64, offset: 768)
!5571 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !5556, file: !3957, line: 70, baseType: !5572, size: 64, offset: 832)
!5572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5556, size: 64)
!5573 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !5556, file: !3957, line: 72, baseType: !72, size: 32, offset: 896)
!5574 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !5556, file: !3957, line: 73, baseType: !72, size: 32, offset: 928)
!5575 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !5556, file: !3957, line: 74, baseType: !3979, size: 64, offset: 960)
!5576 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !5556, file: !3957, line: 77, baseType: !133, size: 16, offset: 1024)
!5577 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !5556, file: !3957, line: 78, baseType: !3982, size: 8, offset: 1040)
!5578 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !5556, file: !3957, line: 79, baseType: !3984, size: 8, offset: 1048)
!5579 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !5556, file: !3957, line: 81, baseType: !3988, size: 64, offset: 1088)
!5580 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !5556, file: !3957, line: 89, baseType: !3991, size: 64, offset: 1152)
!5581 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !5556, file: !3957, line: 91, baseType: !3993, size: 64, offset: 1216)
!5582 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !5556, file: !3957, line: 92, baseType: !3996, size: 64, offset: 1280)
!5583 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !5556, file: !3957, line: 93, baseType: !5572, size: 64, offset: 1344)
!5584 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !5556, file: !3957, line: 94, baseType: !8, size: 64, offset: 1408)
!5585 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !5556, file: !3957, line: 95, baseType: !134, size: 64, offset: 1472)
!5586 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !5556, file: !3957, line: 96, baseType: !72, size: 32, offset: 1536)
!5587 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !5556, file: !3957, line: 98, baseType: !4003, size: 160, offset: 1568)
!5588 = !DILocalVariable(name: "stream", arg: 1, scope: !5550, file: !5551, line: 129, type: !5554)
!5589 = !DILocation(line: 129, column: 19, scope: !5550)
!5590 = !DILocation(line: 150, column: 7, scope: !5591)
!5591 = distinct !DILexicalBlock(scope: !5550, file: !5551, line: 150, column: 7)
!5592 = !DILocation(line: 150, column: 14, scope: !5591)
!5593 = !DILocation(line: 150, column: 22, scope: !5591)
!5594 = !DILocation(line: 150, column: 27, scope: !5591)
!5595 = !DILocation(line: 150, column: 7, scope: !5550)
!5596 = !DILocation(line: 151, column: 20, scope: !5591)
!5597 = !DILocation(line: 151, column: 12, scope: !5591)
!5598 = !DILocation(line: 151, column: 5, scope: !5591)
!5599 = !DILocation(line: 156, column: 44, scope: !5550)
!5600 = !DILocation(line: 156, column: 3, scope: !5550)
!5601 = !DILocation(line: 158, column: 18, scope: !5550)
!5602 = !DILocation(line: 158, column: 10, scope: !5550)
!5603 = !DILocation(line: 158, column: 3, scope: !5550)
!5604 = !DILocation(line: 235, column: 1, scope: !5550)
!5605 = !DILocalVariable(name: "stream", arg: 1, scope: !5606, file: !5551, line: 129, type: !5609)
!5606 = distinct !DISubprogram(name: "rpl_fflush", scope: !5551, file: !5551, line: 129, type: !5607, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !5643, retainedNodes: !4)
!5607 = !DISubroutineType(types: !5608)
!5608 = !{!72, !5609}
!5609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5610, size: 64)
!5610 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !3955, line: 7, baseType: !5611)
!5611 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !3957, line: 49, size: 1728, elements: !5612)
!5612 = !{!5613, !5614, !5615, !5616, !5617, !5618, !5619, !5620, !5621, !5622, !5623, !5624, !5625, !5626, !5628, !5629, !5630, !5631, !5632, !5633, !5634, !5635, !5636, !5637, !5638, !5639, !5640, !5641, !5642}
!5613 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !5611, file: !3957, line: 51, baseType: !72, size: 32)
!5614 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !5611, file: !3957, line: 54, baseType: !6, size: 64, offset: 64)
!5615 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !5611, file: !3957, line: 55, baseType: !6, size: 64, offset: 128)
!5616 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !5611, file: !3957, line: 56, baseType: !6, size: 64, offset: 192)
!5617 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !5611, file: !3957, line: 57, baseType: !6, size: 64, offset: 256)
!5618 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !5611, file: !3957, line: 58, baseType: !6, size: 64, offset: 320)
!5619 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !5611, file: !3957, line: 59, baseType: !6, size: 64, offset: 384)
!5620 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !5611, file: !3957, line: 60, baseType: !6, size: 64, offset: 448)
!5621 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !5611, file: !3957, line: 61, baseType: !6, size: 64, offset: 512)
!5622 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !5611, file: !3957, line: 64, baseType: !6, size: 64, offset: 576)
!5623 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !5611, file: !3957, line: 65, baseType: !6, size: 64, offset: 640)
!5624 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !5611, file: !3957, line: 66, baseType: !6, size: 64, offset: 704)
!5625 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !5611, file: !3957, line: 68, baseType: !3972, size: 64, offset: 768)
!5626 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !5611, file: !3957, line: 70, baseType: !5627, size: 64, offset: 832)
!5627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5611, size: 64)
!5628 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !5611, file: !3957, line: 72, baseType: !72, size: 32, offset: 896)
!5629 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !5611, file: !3957, line: 73, baseType: !72, size: 32, offset: 928)
!5630 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !5611, file: !3957, line: 74, baseType: !3979, size: 64, offset: 960)
!5631 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !5611, file: !3957, line: 77, baseType: !133, size: 16, offset: 1024)
!5632 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !5611, file: !3957, line: 78, baseType: !3982, size: 8, offset: 1040)
!5633 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !5611, file: !3957, line: 79, baseType: !3984, size: 8, offset: 1048)
!5634 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !5611, file: !3957, line: 81, baseType: !3988, size: 64, offset: 1088)
!5635 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !5611, file: !3957, line: 89, baseType: !3991, size: 64, offset: 1152)
!5636 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !5611, file: !3957, line: 91, baseType: !3993, size: 64, offset: 1216)
!5637 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !5611, file: !3957, line: 92, baseType: !3996, size: 64, offset: 1280)
!5638 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !5611, file: !3957, line: 93, baseType: !5627, size: 64, offset: 1344)
!5639 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !5611, file: !3957, line: 94, baseType: !8, size: 64, offset: 1408)
!5640 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !5611, file: !3957, line: 95, baseType: !134, size: 64, offset: 1472)
!5641 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !5611, file: !3957, line: 96, baseType: !72, size: 32, offset: 1536)
!5642 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !5611, file: !3957, line: 98, baseType: !4003, size: 160, offset: 1568)
!5643 = distinct !DICompileUnit(language: DW_LANG_C99, file: !255, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !212, nameTableKind: None)
!5644 = distinct !DISubprogram(name: "clear_ungetc_buffer_preserving_position", scope: !5551, file: !5551, line: 41, type: !5645, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !254, retainedNodes: !4)
!5645 = !DISubroutineType(types: !5646)
!5646 = !{null, !5554}
!5647 = !DILocalVariable(name: "fp", arg: 1, scope: !5644, file: !5551, line: 41, type: !5554)
!5648 = !DILocation(line: 41, column: 48, scope: !5644)
!5649 = !DILocation(line: 43, column: 7, scope: !5650)
!5650 = distinct !DILexicalBlock(scope: !5644, file: !5551, line: 43, column: 7)
!5651 = !DILocation(line: 43, column: 11, scope: !5650)
!5652 = !DILocation(line: 43, column: 18, scope: !5650)
!5653 = !DILocation(line: 43, column: 7, scope: !5644)
!5654 = !DILocation(line: 45, column: 13, scope: !5650)
!5655 = !DILocation(line: 45, column: 5, scope: !5650)
!5656 = !DILocation(line: 46, column: 1, scope: !5644)
!5657 = !DILocalVariable(name: "fp", arg: 1, scope: !5658, file: !5551, line: 41, type: !5661)
!5658 = distinct !DISubprogram(name: "clear_ungetc_buffer_preserving_position", scope: !5551, file: !5551, line: 41, type: !5659, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5695, retainedNodes: !4)
!5659 = !DISubroutineType(types: !5660)
!5660 = !{null, !5661}
!5661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5662, size: 64)
!5662 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !3955, line: 7, baseType: !5663)
!5663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !3957, line: 49, size: 1728, elements: !5664)
!5664 = !{!5665, !5666, !5667, !5668, !5669, !5670, !5671, !5672, !5673, !5674, !5675, !5676, !5677, !5678, !5680, !5681, !5682, !5683, !5684, !5685, !5686, !5687, !5688, !5689, !5690, !5691, !5692, !5693, !5694}
!5665 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !5663, file: !3957, line: 51, baseType: !72, size: 32)
!5666 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !5663, file: !3957, line: 54, baseType: !6, size: 64, offset: 64)
!5667 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !5663, file: !3957, line: 55, baseType: !6, size: 64, offset: 128)
!5668 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !5663, file: !3957, line: 56, baseType: !6, size: 64, offset: 192)
!5669 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !5663, file: !3957, line: 57, baseType: !6, size: 64, offset: 256)
!5670 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !5663, file: !3957, line: 58, baseType: !6, size: 64, offset: 320)
!5671 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !5663, file: !3957, line: 59, baseType: !6, size: 64, offset: 384)
!5672 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !5663, file: !3957, line: 60, baseType: !6, size: 64, offset: 448)
!5673 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !5663, file: !3957, line: 61, baseType: !6, size: 64, offset: 512)
!5674 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !5663, file: !3957, line: 64, baseType: !6, size: 64, offset: 576)
!5675 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !5663, file: !3957, line: 65, baseType: !6, size: 64, offset: 640)
!5676 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !5663, file: !3957, line: 66, baseType: !6, size: 64, offset: 704)
!5677 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !5663, file: !3957, line: 68, baseType: !3972, size: 64, offset: 768)
!5678 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !5663, file: !3957, line: 70, baseType: !5679, size: 64, offset: 832)
!5679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5663, size: 64)
!5680 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !5663, file: !3957, line: 72, baseType: !72, size: 32, offset: 896)
!5681 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !5663, file: !3957, line: 73, baseType: !72, size: 32, offset: 928)
!5682 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !5663, file: !3957, line: 74, baseType: !3979, size: 64, offset: 960)
!5683 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !5663, file: !3957, line: 77, baseType: !133, size: 16, offset: 1024)
!5684 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !5663, file: !3957, line: 78, baseType: !3982, size: 8, offset: 1040)
!5685 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !5663, file: !3957, line: 79, baseType: !3984, size: 8, offset: 1048)
!5686 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !5663, file: !3957, line: 81, baseType: !3988, size: 64, offset: 1088)
!5687 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !5663, file: !3957, line: 89, baseType: !3991, size: 64, offset: 1152)
!5688 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !5663, file: !3957, line: 91, baseType: !3993, size: 64, offset: 1216)
!5689 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !5663, file: !3957, line: 92, baseType: !3996, size: 64, offset: 1280)
!5690 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !5663, file: !3957, line: 93, baseType: !5679, size: 64, offset: 1344)
!5691 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !5663, file: !3957, line: 94, baseType: !8, size: 64, offset: 1408)
!5692 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !5663, file: !3957, line: 95, baseType: !134, size: 64, offset: 1472)
!5693 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !5663, file: !3957, line: 96, baseType: !72, size: 32, offset: 1536)
!5694 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !5663, file: !3957, line: 98, baseType: !4003, size: 160, offset: 1568)
!5695 = distinct !DICompileUnit(language: DW_LANG_C99, file: !255, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !212, nameTableKind: None)
!5696 = distinct !DISubprogram(name: "rpl_fseeko", scope: !5697, file: !5697, line: 28, type: !5698, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !256, retainedNodes: !4)
!5697 = !DIFile(filename: "lib/fseeko.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!5698 = !DISubroutineType(types: !5699)
!5699 = !{!72, !5700, !5734, !72}
!5700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5701, size: 64)
!5701 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !3955, line: 7, baseType: !5702)
!5702 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !3957, line: 49, size: 1728, elements: !5703)
!5703 = !{!5704, !5705, !5706, !5707, !5708, !5709, !5710, !5711, !5712, !5713, !5714, !5715, !5716, !5717, !5719, !5720, !5721, !5722, !5723, !5724, !5725, !5726, !5727, !5728, !5729, !5730, !5731, !5732, !5733}
!5704 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !5702, file: !3957, line: 51, baseType: !72, size: 32)
!5705 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !5702, file: !3957, line: 54, baseType: !6, size: 64, offset: 64)
!5706 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !5702, file: !3957, line: 55, baseType: !6, size: 64, offset: 128)
!5707 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !5702, file: !3957, line: 56, baseType: !6, size: 64, offset: 192)
!5708 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !5702, file: !3957, line: 57, baseType: !6, size: 64, offset: 256)
!5709 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !5702, file: !3957, line: 58, baseType: !6, size: 64, offset: 320)
!5710 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !5702, file: !3957, line: 59, baseType: !6, size: 64, offset: 384)
!5711 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !5702, file: !3957, line: 60, baseType: !6, size: 64, offset: 448)
!5712 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !5702, file: !3957, line: 61, baseType: !6, size: 64, offset: 512)
!5713 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !5702, file: !3957, line: 64, baseType: !6, size: 64, offset: 576)
!5714 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !5702, file: !3957, line: 65, baseType: !6, size: 64, offset: 640)
!5715 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !5702, file: !3957, line: 66, baseType: !6, size: 64, offset: 704)
!5716 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !5702, file: !3957, line: 68, baseType: !3972, size: 64, offset: 768)
!5717 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !5702, file: !3957, line: 70, baseType: !5718, size: 64, offset: 832)
!5718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5702, size: 64)
!5719 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !5702, file: !3957, line: 72, baseType: !72, size: 32, offset: 896)
!5720 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !5702, file: !3957, line: 73, baseType: !72, size: 32, offset: 928)
!5721 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !5702, file: !3957, line: 74, baseType: !3979, size: 64, offset: 960)
!5722 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !5702, file: !3957, line: 77, baseType: !133, size: 16, offset: 1024)
!5723 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !5702, file: !3957, line: 78, baseType: !3982, size: 8, offset: 1040)
!5724 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !5702, file: !3957, line: 79, baseType: !3984, size: 8, offset: 1048)
!5725 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !5702, file: !3957, line: 81, baseType: !3988, size: 64, offset: 1088)
!5726 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !5702, file: !3957, line: 89, baseType: !3991, size: 64, offset: 1152)
!5727 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !5702, file: !3957, line: 91, baseType: !3993, size: 64, offset: 1216)
!5728 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !5702, file: !3957, line: 92, baseType: !3996, size: 64, offset: 1280)
!5729 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !5702, file: !3957, line: 93, baseType: !5718, size: 64, offset: 1344)
!5730 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !5702, file: !3957, line: 94, baseType: !8, size: 64, offset: 1408)
!5731 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !5702, file: !3957, line: 95, baseType: !134, size: 64, offset: 1472)
!5732 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !5702, file: !3957, line: 96, baseType: !72, size: 32, offset: 1536)
!5733 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !5702, file: !3957, line: 98, baseType: !4003, size: 160, offset: 1568)
!5734 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_t", file: !979, line: 63, baseType: !3979)
!5735 = !DILocalVariable(name: "fp", arg: 1, scope: !5696, file: !5697, line: 28, type: !5700)
!5736 = !DILocation(line: 28, column: 15, scope: !5696)
!5737 = !DILocalVariable(name: "offset", arg: 2, scope: !5696, file: !5697, line: 28, type: !5734)
!5738 = !DILocation(line: 28, column: 25, scope: !5696)
!5739 = !DILocalVariable(name: "whence", arg: 3, scope: !5696, file: !5697, line: 28, type: !72)
!5740 = !DILocation(line: 28, column: 37, scope: !5696)
!5741 = !DILocation(line: 52, column: 7, scope: !5742)
!5742 = distinct !DILexicalBlock(scope: !5696, file: !5697, line: 52, column: 7)
!5743 = !DILocation(line: 52, column: 11, scope: !5742)
!5744 = !DILocation(line: 52, column: 27, scope: !5742)
!5745 = !DILocation(line: 52, column: 31, scope: !5742)
!5746 = !DILocation(line: 52, column: 24, scope: !5742)
!5747 = !DILocation(line: 53, column: 7, scope: !5742)
!5748 = !DILocation(line: 53, column: 10, scope: !5742)
!5749 = !DILocation(line: 53, column: 14, scope: !5742)
!5750 = !DILocation(line: 53, column: 31, scope: !5742)
!5751 = !DILocation(line: 53, column: 35, scope: !5742)
!5752 = !DILocation(line: 53, column: 28, scope: !5742)
!5753 = !DILocation(line: 54, column: 7, scope: !5742)
!5754 = !DILocation(line: 54, column: 10, scope: !5742)
!5755 = !DILocation(line: 54, column: 14, scope: !5742)
!5756 = !DILocation(line: 54, column: 28, scope: !5742)
!5757 = !DILocation(line: 52, column: 7, scope: !5696)
!5758 = !DILocalVariable(name: "pos", scope: !5759, file: !5697, line: 117, type: !5734)
!5759 = distinct !DILexicalBlock(scope: !5742, file: !5697, line: 113, column: 5)
!5760 = !DILocation(line: 117, column: 13, scope: !5759)
!5761 = !DILocation(line: 117, column: 34, scope: !5759)
!5762 = !DILocation(line: 117, column: 26, scope: !5759)
!5763 = !DILocation(line: 117, column: 39, scope: !5759)
!5764 = !DILocation(line: 117, column: 47, scope: !5759)
!5765 = !DILocation(line: 117, column: 19, scope: !5759)
!5766 = !DILocation(line: 118, column: 11, scope: !5767)
!5767 = distinct !DILexicalBlock(scope: !5759, file: !5697, line: 118, column: 11)
!5768 = !DILocation(line: 118, column: 15, scope: !5767)
!5769 = !DILocation(line: 118, column: 11, scope: !5759)
!5770 = !DILocation(line: 124, column: 11, scope: !5771)
!5771 = distinct !DILexicalBlock(scope: !5767, file: !5697, line: 119, column: 9)
!5772 = !DILocation(line: 129, column: 7, scope: !5759)
!5773 = !DILocation(line: 129, column: 11, scope: !5759)
!5774 = !DILocation(line: 129, column: 18, scope: !5759)
!5775 = !DILocation(line: 130, column: 21, scope: !5759)
!5776 = !DILocation(line: 130, column: 7, scope: !5759)
!5777 = !DILocation(line: 130, column: 11, scope: !5759)
!5778 = !DILocation(line: 130, column: 19, scope: !5759)
!5779 = !DILocation(line: 161, column: 7, scope: !5759)
!5780 = !DILocation(line: 163, column: 18, scope: !5696)
!5781 = !DILocation(line: 163, column: 22, scope: !5696)
!5782 = !DILocation(line: 163, column: 30, scope: !5696)
!5783 = !DILocation(line: 163, column: 10, scope: !5696)
!5784 = !DILocation(line: 163, column: 3, scope: !5696)
!5785 = !DILocation(line: 164, column: 1, scope: !5696)
!5786 = !DILocalVariable(name: "fp", arg: 1, scope: !5787, file: !5697, line: 28, type: !5790)
!5787 = distinct !DISubprogram(name: "rpl_fseeko", scope: !5697, file: !5697, line: 28, type: !5788, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !5824, retainedNodes: !4)
!5788 = !DISubroutineType(types: !5789)
!5789 = !{!72, !5790, !5734, !72}
!5790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5791, size: 64)
!5791 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !3955, line: 7, baseType: !5792)
!5792 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !3957, line: 49, size: 1728, elements: !5793)
!5793 = !{!5794, !5795, !5796, !5797, !5798, !5799, !5800, !5801, !5802, !5803, !5804, !5805, !5806, !5807, !5809, !5810, !5811, !5812, !5813, !5814, !5815, !5816, !5817, !5818, !5819, !5820, !5821, !5822, !5823}
!5794 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !5792, file: !3957, line: 51, baseType: !72, size: 32)
!5795 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !5792, file: !3957, line: 54, baseType: !6, size: 64, offset: 64)
!5796 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !5792, file: !3957, line: 55, baseType: !6, size: 64, offset: 128)
!5797 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !5792, file: !3957, line: 56, baseType: !6, size: 64, offset: 192)
!5798 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !5792, file: !3957, line: 57, baseType: !6, size: 64, offset: 256)
!5799 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !5792, file: !3957, line: 58, baseType: !6, size: 64, offset: 320)
!5800 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !5792, file: !3957, line: 59, baseType: !6, size: 64, offset: 384)
!5801 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !5792, file: !3957, line: 60, baseType: !6, size: 64, offset: 448)
!5802 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !5792, file: !3957, line: 61, baseType: !6, size: 64, offset: 512)
!5803 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !5792, file: !3957, line: 64, baseType: !6, size: 64, offset: 576)
!5804 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !5792, file: !3957, line: 65, baseType: !6, size: 64, offset: 640)
!5805 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !5792, file: !3957, line: 66, baseType: !6, size: 64, offset: 704)
!5806 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !5792, file: !3957, line: 68, baseType: !3972, size: 64, offset: 768)
!5807 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !5792, file: !3957, line: 70, baseType: !5808, size: 64, offset: 832)
!5808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5792, size: 64)
!5809 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !5792, file: !3957, line: 72, baseType: !72, size: 32, offset: 896)
!5810 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !5792, file: !3957, line: 73, baseType: !72, size: 32, offset: 928)
!5811 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !5792, file: !3957, line: 74, baseType: !3979, size: 64, offset: 960)
!5812 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !5792, file: !3957, line: 77, baseType: !133, size: 16, offset: 1024)
!5813 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !5792, file: !3957, line: 78, baseType: !3982, size: 8, offset: 1040)
!5814 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !5792, file: !3957, line: 79, baseType: !3984, size: 8, offset: 1048)
!5815 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !5792, file: !3957, line: 81, baseType: !3988, size: 64, offset: 1088)
!5816 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !5792, file: !3957, line: 89, baseType: !3991, size: 64, offset: 1152)
!5817 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !5792, file: !3957, line: 91, baseType: !3993, size: 64, offset: 1216)
!5818 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !5792, file: !3957, line: 92, baseType: !3996, size: 64, offset: 1280)
!5819 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !5792, file: !3957, line: 93, baseType: !5808, size: 64, offset: 1344)
!5820 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !5792, file: !3957, line: 94, baseType: !8, size: 64, offset: 1408)
!5821 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !5792, file: !3957, line: 95, baseType: !134, size: 64, offset: 1472)
!5822 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !5792, file: !3957, line: 96, baseType: !72, size: 32, offset: 1536)
!5823 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !5792, file: !3957, line: 98, baseType: !4003, size: 160, offset: 1568)
!5824 = distinct !DICompileUnit(language: DW_LANG_C99, file: !257, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !212, nameTableKind: None)
!5825 = !DILocalVariable(name: "offset", arg: 2, scope: !5787, file: !5697, line: 28, type: !5734)
!5826 = !DILocalVariable(name: "whence", arg: 3, scope: !5787, file: !5697, line: 28, type: !72)
!5827 = distinct !DISubprogram(name: "c_tolower", scope: !5828, file: !5828, line: 337, type: !5829, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !258, retainedNodes: !4)
!5828 = !DIFile(filename: "./lib/c-ctype.h", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!5829 = !DISubroutineType(types: !5830)
!5830 = !{!72, !72}
!5831 = !DILocalVariable(name: "c", arg: 1, scope: !5827, file: !5828, line: 337, type: !72)
!5832 = !DILocation(line: 337, column: 16, scope: !5827)
!5833 = !DILocation(line: 339, column: 11, scope: !5827)
!5834 = !DILocation(line: 339, column: 3, scope: !5827)
!5835 = !DILocation(line: 342, column: 14, scope: !5836)
!5836 = distinct !DILexicalBlock(scope: !5827, file: !5828, line: 340, column: 5)
!5837 = !DILocation(line: 342, column: 16, scope: !5836)
!5838 = !DILocation(line: 342, column: 22, scope: !5836)
!5839 = !DILocation(line: 342, column: 7, scope: !5836)
!5840 = !DILocation(line: 344, column: 14, scope: !5836)
!5841 = !DILocation(line: 344, column: 7, scope: !5836)
!5842 = !DILocation(line: 346, column: 1, scope: !5827)
!5843 = distinct !DISubprogram(name: "getugroups", scope: !5844, file: !5844, line: 61, type: !5845, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !260, retainedNodes: !4)
!5844 = !DIFile(filename: "lib/getugroups.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!5845 = !DISubroutineType(types: !5846)
!5846 = !{!72, !72, !183, !69, !21}
!5847 = !DILocalVariable(name: "maxcount", arg: 1, scope: !5843, file: !5844, line: 61, type: !72)
!5848 = !DILocation(line: 61, column: 17, scope: !5843)
!5849 = !DILocalVariable(name: "grouplist", arg: 2, scope: !5843, file: !5844, line: 61, type: !183)
!5850 = !DILocation(line: 61, column: 34, scope: !5843)
!5851 = !DILocalVariable(name: "username", arg: 3, scope: !5843, file: !5844, line: 61, type: !69)
!5852 = !DILocation(line: 61, column: 57, scope: !5843)
!5853 = !DILocalVariable(name: "gid", arg: 4, scope: !5843, file: !5844, line: 62, type: !21)
!5854 = !DILocation(line: 62, column: 19, scope: !5843)
!5855 = !DILocalVariable(name: "count", scope: !5843, file: !5844, line: 64, type: !72)
!5856 = !DILocation(line: 64, column: 7, scope: !5843)
!5857 = !DILocation(line: 66, column: 7, scope: !5858)
!5858 = distinct !DILexicalBlock(scope: !5843, file: !5844, line: 66, column: 7)
!5859 = !DILocation(line: 66, column: 11, scope: !5858)
!5860 = !DILocation(line: 66, column: 7, scope: !5843)
!5861 = !DILocation(line: 68, column: 11, scope: !5862)
!5862 = distinct !DILexicalBlock(scope: !5863, file: !5844, line: 68, column: 11)
!5863 = distinct !DILexicalBlock(scope: !5858, file: !5844, line: 67, column: 5)
!5864 = !DILocation(line: 68, column: 20, scope: !5862)
!5865 = !DILocation(line: 68, column: 11, scope: !5863)
!5866 = !DILocation(line: 69, column: 28, scope: !5862)
!5867 = !DILocation(line: 69, column: 9, scope: !5862)
!5868 = !DILocation(line: 69, column: 19, scope: !5862)
!5869 = !DILocation(line: 69, column: 26, scope: !5862)
!5870 = !DILocation(line: 70, column: 7, scope: !5863)
!5871 = !DILocation(line: 71, column: 5, scope: !5863)
!5872 = !DILocation(line: 73, column: 3, scope: !5843)
!5873 = !DILocation(line: 74, column: 3, scope: !5843)
!5874 = !DILocalVariable(name: "cp", scope: !5875, file: !5844, line: 76, type: !184)
!5875 = distinct !DILexicalBlock(scope: !5843, file: !5844, line: 75, column: 5)
!5876 = !DILocation(line: 76, column: 14, scope: !5875)
!5877 = !DILocalVariable(name: "grp", scope: !5875, file: !5844, line: 77, type: !5878)
!5878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5879, size: 64)
!5879 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group", file: !1233, line: 42, size: 256, elements: !5880)
!5880 = !{!5881, !5882, !5883, !5884}
!5881 = !DIDerivedType(tag: DW_TAG_member, name: "gr_name", scope: !5879, file: !1233, line: 44, baseType: !6, size: 64)
!5882 = !DIDerivedType(tag: DW_TAG_member, name: "gr_passwd", scope: !5879, file: !1233, line: 45, baseType: !6, size: 64, offset: 64)
!5883 = !DIDerivedType(tag: DW_TAG_member, name: "gr_gid", scope: !5879, file: !1233, line: 46, baseType: !22, size: 32, offset: 128)
!5884 = !DIDerivedType(tag: DW_TAG_member, name: "gr_mem", scope: !5879, file: !1233, line: 47, baseType: !184, size: 64, offset: 192)
!5885 = !DILocation(line: 77, column: 21, scope: !5875)
!5886 = !DILocation(line: 79, column: 7, scope: !5875)
!5887 = !DILocation(line: 79, column: 13, scope: !5875)
!5888 = !DILocation(line: 80, column: 13, scope: !5875)
!5889 = !DILocation(line: 80, column: 11, scope: !5875)
!5890 = !DILocation(line: 81, column: 11, scope: !5891)
!5891 = distinct !DILexicalBlock(scope: !5875, file: !5844, line: 81, column: 11)
!5892 = !DILocation(line: 81, column: 15, scope: !5891)
!5893 = !DILocation(line: 81, column: 11, scope: !5875)
!5894 = !DILocation(line: 82, column: 9, scope: !5891)
!5895 = !DILocation(line: 84, column: 17, scope: !5896)
!5896 = distinct !DILexicalBlock(scope: !5875, file: !5844, line: 84, column: 7)
!5897 = !DILocation(line: 84, column: 22, scope: !5896)
!5898 = !DILocation(line: 84, column: 15, scope: !5896)
!5899 = !DILocation(line: 84, column: 12, scope: !5896)
!5900 = !DILocation(line: 84, column: 31, scope: !5901)
!5901 = distinct !DILexicalBlock(scope: !5896, file: !5844, line: 84, column: 7)
!5902 = !DILocation(line: 84, column: 30, scope: !5901)
!5903 = !DILocation(line: 84, column: 7, scope: !5896)
!5904 = !DILocalVariable(name: "n", scope: !5905, file: !5844, line: 86, type: !72)
!5905 = distinct !DILexicalBlock(scope: !5901, file: !5844, line: 85, column: 9)
!5906 = !DILocation(line: 86, column: 15, scope: !5905)
!5907 = !DILocation(line: 88, column: 18, scope: !5908)
!5908 = distinct !DILexicalBlock(scope: !5905, file: !5844, line: 88, column: 16)
!5909 = !DILocation(line: 88, column: 16, scope: !5905)
!5910 = !DILocation(line: 89, column: 13, scope: !5908)
!5911 = !DILocation(line: 92, column: 18, scope: !5912)
!5912 = distinct !DILexicalBlock(scope: !5905, file: !5844, line: 92, column: 11)
!5913 = !DILocation(line: 92, column: 16, scope: !5912)
!5914 = !DILocation(line: 92, column: 23, scope: !5915)
!5915 = distinct !DILexicalBlock(scope: !5912, file: !5844, line: 92, column: 11)
!5916 = !DILocation(line: 92, column: 27, scope: !5915)
!5917 = !DILocation(line: 92, column: 25, scope: !5915)
!5918 = !DILocation(line: 92, column: 11, scope: !5912)
!5919 = !DILocation(line: 93, column: 17, scope: !5920)
!5920 = distinct !DILexicalBlock(scope: !5915, file: !5844, line: 93, column: 17)
!5921 = !DILocation(line: 93, column: 27, scope: !5920)
!5922 = !DILocation(line: 93, column: 30, scope: !5920)
!5923 = !DILocation(line: 93, column: 40, scope: !5920)
!5924 = !DILocation(line: 93, column: 46, scope: !5920)
!5925 = !DILocation(line: 93, column: 51, scope: !5920)
!5926 = !DILocation(line: 93, column: 43, scope: !5920)
!5927 = !DILocation(line: 93, column: 17, scope: !5915)
!5928 = !DILocation(line: 94, column: 15, scope: !5920)
!5929 = !DILocation(line: 92, column: 34, scope: !5915)
!5930 = !DILocation(line: 92, column: 11, scope: !5915)
!5931 = distinct !{!5931, !5918, !5932}
!5932 = !DILocation(line: 94, column: 15, scope: !5912)
!5933 = !DILocation(line: 97, column: 15, scope: !5934)
!5934 = distinct !DILexicalBlock(scope: !5905, file: !5844, line: 97, column: 15)
!5935 = !DILocation(line: 97, column: 20, scope: !5934)
!5936 = !DILocation(line: 97, column: 17, scope: !5934)
!5937 = !DILocation(line: 97, column: 15, scope: !5905)
!5938 = !DILocation(line: 99, column: 19, scope: !5939)
!5939 = distinct !DILexicalBlock(scope: !5940, file: !5844, line: 99, column: 19)
!5940 = distinct !DILexicalBlock(scope: !5934, file: !5844, line: 98, column: 13)
!5941 = !DILocation(line: 99, column: 28, scope: !5939)
!5942 = !DILocation(line: 99, column: 19, scope: !5940)
!5943 = !DILocation(line: 101, column: 23, scope: !5944)
!5944 = distinct !DILexicalBlock(scope: !5945, file: !5844, line: 101, column: 23)
!5945 = distinct !DILexicalBlock(scope: !5939, file: !5844, line: 100, column: 17)
!5946 = !DILocation(line: 101, column: 32, scope: !5944)
!5947 = !DILocation(line: 101, column: 29, scope: !5944)
!5948 = !DILocation(line: 101, column: 23, scope: !5945)
!5949 = !DILocation(line: 102, column: 21, scope: !5944)
!5950 = !DILocation(line: 103, column: 38, scope: !5945)
!5951 = !DILocation(line: 103, column: 43, scope: !5945)
!5952 = !DILocation(line: 103, column: 19, scope: !5945)
!5953 = !DILocation(line: 103, column: 29, scope: !5945)
!5954 = !DILocation(line: 103, column: 36, scope: !5945)
!5955 = !DILocation(line: 104, column: 17, scope: !5945)
!5956 = !DILocation(line: 105, column: 19, scope: !5957)
!5957 = distinct !DILexicalBlock(scope: !5940, file: !5844, line: 105, column: 19)
!5958 = !DILocation(line: 105, column: 25, scope: !5957)
!5959 = !DILocation(line: 105, column: 19, scope: !5940)
!5960 = !DILocation(line: 107, column: 19, scope: !5961)
!5961 = distinct !DILexicalBlock(scope: !5957, file: !5844, line: 106, column: 17)
!5962 = !DILocation(line: 107, column: 25, scope: !5961)
!5963 = !DILocation(line: 108, column: 19, scope: !5961)
!5964 = !DILocation(line: 110, column: 20, scope: !5940)
!5965 = !DILocation(line: 111, column: 13, scope: !5940)
!5966 = !DILocation(line: 112, column: 9, scope: !5905)
!5967 = !DILocation(line: 84, column: 35, scope: !5901)
!5968 = !DILocation(line: 84, column: 7, scope: !5901)
!5969 = distinct !{!5969, !5903, !5970}
!5970 = !DILocation(line: 112, column: 9, scope: !5896)
!5971 = distinct !{!5971, !5873, !5972}
!5972 = !DILocation(line: 113, column: 5, scope: !5843)
!5973 = !DILocation(line: 115, column: 7, scope: !5974)
!5974 = distinct !DILexicalBlock(scope: !5843, file: !5844, line: 115, column: 7)
!5975 = !DILocation(line: 115, column: 13, scope: !5974)
!5976 = !DILocation(line: 115, column: 7, scope: !5843)
!5977 = !DILocation(line: 116, column: 11, scope: !5974)
!5978 = !DILocation(line: 116, column: 5, scope: !5974)
!5979 = !DILocation(line: 115, column: 16, scope: !5974)
!5980 = !DILabel(scope: !5843, name: "done", file: !5844, line: 118)
!5981 = !DILocation(line: 118, column: 2, scope: !5843)
!5982 = !DILocalVariable(name: "saved_errno", scope: !5983, file: !5844, line: 120, type: !72)
!5983 = distinct !DILexicalBlock(scope: !5843, file: !5844, line: 119, column: 3)
!5984 = !DILocation(line: 120, column: 9, scope: !5983)
!5985 = !DILocation(line: 120, column: 23, scope: !5983)
!5986 = !DILocation(line: 121, column: 5, scope: !5983)
!5987 = !DILocation(line: 122, column: 13, scope: !5983)
!5988 = !DILocation(line: 122, column: 5, scope: !5983)
!5989 = !DILocation(line: 122, column: 11, scope: !5983)
!5990 = !DILocation(line: 125, column: 10, scope: !5843)
!5991 = !DILocation(line: 125, column: 3, scope: !5843)
!5992 = !DILocalVariable(name: "maxcount", arg: 1, scope: !5993, file: !5844, line: 61, type: !72)
!5993 = distinct !DISubprogram(name: "getugroups", scope: !5844, file: !5844, line: 61, type: !5845, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !5994, retainedNodes: !4)
!5994 = distinct !DICompileUnit(language: DW_LANG_C99, file: !261, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !262, nameTableKind: None)
!5995 = !DILocalVariable(name: "grouplist", arg: 2, scope: !5993, file: !5844, line: 61, type: !183)
!5996 = !DILocalVariable(name: "username", arg: 3, scope: !5993, file: !5844, line: 61, type: !69)
!5997 = !DILocalVariable(name: "gid", arg: 4, scope: !5993, file: !5844, line: 62, type: !21)
!5998 = !DILocalVariable(name: "count", scope: !5993, file: !5844, line: 64, type: !72)
