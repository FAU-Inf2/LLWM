; ModuleID = '<stdin>'
source_filename = "ld-temp.o"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.infomap = type { i8*, i8* }
%struct.option = type { i8*, i32, i32*, i32 }
%struct.quoting_options = type { i32, i32, [8 x i32], i8*, i8* }
%struct.slotvec = type { i64, i8* }
%struct.passwd = type { i8*, i8*, i32, i32, i8*, i8*, i8* }
%struct.group = type { i8*, i8*, i32, i8** }
%struct.__mbstate_t = type { i32, %union.anon }
%union.anon = type { i32 }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }

@stderr = external dso_local global %struct._IO_FILE*, align 8
@.str = private unnamed_addr constant [39 x i8] c"Try '%s --help' for more information.\0A\00", align 1
@.str.1 = private unnamed_addr constant [33 x i8] c"Usage: %s [OPTION]... [USER]...\0A\00", align 1
@.str.2 = private unnamed_addr constant [105 x i8] c"Print user and group information for each specified USER,\0Aor (when USER omitted) for the current user.\0A\0A\00", align 1
@stdout = external dso_local global %struct._IO_FILE*, align 8
@.str.3 = private unnamed_addr constant [521 x i8] c"  -a             ignore, for compatibility with other versions\0A  -Z, --context  print only the security context of the process\0A  -g, --group    print only the effective group ID\0A  -G, --groups   print all group IDs\0A  -n, --name     print a name instead of a number, for -ugG\0A  -r, --real     print the real ID instead of the effective ID, with -ugG\0A  -u, --user     print only the effective user ID\0A  -z, --zero     delimit entries with NUL characters, not whitespace;\0A                   not permitted in default format\0A\00", align 1
@.str.4 = private unnamed_addr constant [45 x i8] c"      --help     display this help and exit\0A\00", align 1
@.str.5 = private unnamed_addr constant [54 x i8] c"      --version  output version information and exit\0A\00", align 1
@.str.6 = private unnamed_addr constant [71 x i8] c"\0AWithout any OPTION, print some useful set of identified information.\0A\00", align 1
@.str.7 = private unnamed_addr constant [3 x i8] c"id\00", align 1
@__const.emit_ancillary_info.infomap = private unnamed_addr constant [7 x %struct.infomap] [%struct.infomap { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.27, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.28, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.29, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.30, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.31, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.31, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.33, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.31, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.34, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.31, i32 0, i32 0) }, %struct.infomap zeroinitializer], align 16
@.str.35 = private unnamed_addr constant [23 x i8] c"\0A%s online help: <%s>\0A\00", align 1
@.str.13 = private unnamed_addr constant [14 x i8] c"GNU coreutils\00", align 1
@.str.36 = private unnamed_addr constant [40 x i8] c"https://www.gnu.org/software/coreutils/\00", align 1
@.str.37 = private unnamed_addr constant [4 x i8] c"en_\00", align 1
@.str.38 = private unnamed_addr constant [71 x i8] c"Report any translation bugs to <https://translationproject.org/team/>\0A\00", align 1
@.str.39 = private unnamed_addr constant [27 x i8] c"Full documentation <%s%s>\0A\00", align 1
@.str.40 = private unnamed_addr constant [51 x i8] c"or available locally via: info '(coreutils) %s%s'\0A\00", align 1
@.str.41 = private unnamed_addr constant [12 x i8] c" invocation\00", align 1
@.str.8 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.27 = private unnamed_addr constant [2 x i8] c"[\00", align 1
@.str.28 = private unnamed_addr constant [16 x i8] c"test invocation\00", align 1
@.str.9 = private unnamed_addr constant [10 x i8] c"coreutils\00", align 1
@.str.29 = private unnamed_addr constant [22 x i8] c"Multi-call invocation\00", align 1
@.str.30 = private unnamed_addr constant [10 x i8] c"sha224sum\00", align 1
@.str.31 = private unnamed_addr constant [15 x i8] c"sha2 utilities\00", align 1
@.str.32 = private unnamed_addr constant [10 x i8] c"sha256sum\00", align 1
@.str.33 = private unnamed_addr constant [10 x i8] c"sha384sum\00", align 1
@.str.34 = private unnamed_addr constant [10 x i8] c"sha512sum\00", align 1
@.str.10 = private unnamed_addr constant [24 x i8] c"/usr/local/share/locale\00", align 1
@.str.11 = private unnamed_addr constant [9 x i8] c"agnruzGZ\00", align 1
@longopts = internal constant [10 x %struct.option] [%struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.42, i32 0, i32 0), i32 0, i32* null, i32 90 }, %struct.option { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.43, i32 0, i32 0), i32 0, i32* null, i32 103 }, %struct.option { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.44, i32 0, i32 0), i32 0, i32* null, i32 71 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.45, i32 0, i32 0), i32 0, i32* null, i32 110 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.46, i32 0, i32 0), i32 0, i32* null, i32 114 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.47, i32 0, i32 0), i32 0, i32* null, i32 117 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.48, i32 0, i32 0), i32 0, i32* null, i32 122 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.49, i32 0, i32 0), i32 0, i32* null, i32 -130 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.50, i32 0, i32 0), i32 0, i32* null, i32 -131 }, %struct.option zeroinitializer], align 16, !dbg !0
@.str.12 = private unnamed_addr constant [55 x i8] c"--context (-Z) works only on an SELinux-enabled kernel\00", align 1
@just_context = internal global i8 0, align 1, !dbg !25
@just_group = internal global i8 0, align 1, !dbg !28
@use_name = internal global i8 0, align 1, !dbg !30
@use_real = internal global i8 0, align 1, !dbg !32
@just_user = internal global i8 0, align 1, !dbg !34
@opt_zero = internal global i8 0, align 1, !dbg !36
@just_group_list = internal global i8 0, align 1, !dbg !38
@.str.14 = private unnamed_addr constant [15 x i8] c"Arnold Robbins\00", align 1
@.str.15 = private unnamed_addr constant [16 x i8] c"David MacKenzie\00", align 1
@optind = external dso_local global i32, align 4
@.str.16 = private unnamed_addr constant [50 x i8] c"cannot print security context when user specified\00", align 1
@.str.17 = private unnamed_addr constant [44 x i8] c"cannot print \22only\22 of more than one choice\00", align 1
@.str.18 = private unnamed_addr constant [54 x i8] c"cannot print only names or real IDs in default format\00", align 1
@.str.19 = private unnamed_addr constant [46 x i8] c"option --zero not permitted in default format\00", align 1
@.str.20 = private unnamed_addr constant [16 x i8] c"POSIXLY_CORRECT\00", align 1
@context = internal global i8* null, align 8, !dbg !40
@.str.21 = private unnamed_addr constant [26 x i8] c"can't get process context\00", align 1
@multiple_users = internal global i8 0, align 1, !dbg !42
@euid = internal global i32 0, align 4, !dbg !17
@.str.22 = private unnamed_addr constant [17 x i8] c"%s: no such user\00", align 1
@ok = internal global i8 1, align 1, !dbg !44
@ruid = internal global i32 0, align 4, !dbg !10
@egid = internal global i32 0, align 4, !dbg !23
@rgid = internal global i32 0, align 4, !dbg !19
@.str.23 = private unnamed_addr constant [25 x i8] c"cannot get effective UID\00", align 1
@.str.24 = private unnamed_addr constant [20 x i8] c"cannot get real UID\00", align 1
@.str.25 = private unnamed_addr constant [25 x i8] c"cannot get effective GID\00", align 1
@.str.26 = private unnamed_addr constant [20 x i8] c"cannot get real GID\00", align 1
@.str.52 = private unnamed_addr constant [7 x i8] c"uid=%s\00", align 1
@.str.53 = private unnamed_addr constant [5 x i8] c"(%s)\00", align 1
@.str.54 = private unnamed_addr constant [8 x i8] c" gid=%s\00", align 1
@.str.55 = private unnamed_addr constant [9 x i8] c" euid=%s\00", align 1
@.str.56 = private unnamed_addr constant [9 x i8] c" egid=%s\00", align 1
@.str.57 = private unnamed_addr constant [33 x i8] c"failed to get groups for user %s\00", align 1
@.str.58 = private unnamed_addr constant [45 x i8] c"failed to get groups for the current process\00", align 1
@.str.59 = private unnamed_addr constant [9 x i8] c" groups=\00", align 1
@.str.60 = private unnamed_addr constant [12 x i8] c" context=%s\00", align 1
@gidtostr_ptr.buf = internal global [21 x i8] zeroinitializer, align 16, !dbg !56
@uidtostr_ptr.buf = internal global [21 x i8] zeroinitializer, align 16, !dbg !46
@.str.51 = private unnamed_addr constant [32 x i8] c"cannot find name for user ID %s\00", align 1
@.str.42 = private unnamed_addr constant [8 x i8] c"context\00", align 1
@.str.43 = private unnamed_addr constant [6 x i8] c"group\00", align 1
@.str.44 = private unnamed_addr constant [7 x i8] c"groups\00", align 1
@.str.45 = private unnamed_addr constant [5 x i8] c"name\00", align 1
@.str.46 = private unnamed_addr constant [5 x i8] c"real\00", align 1
@.str.47 = private unnamed_addr constant [5 x i8] c"user\00", align 1
@.str.48 = private unnamed_addr constant [5 x i8] c"zero\00", align 1
@.str.49 = private unnamed_addr constant [5 x i8] c"help\00", align 1
@.str.50 = private unnamed_addr constant [8 x i8] c"version\00", align 1
@.str.61 = private unnamed_addr constant [33 x i8] c"failed to get groups for user %s\00", align 1
@.str.1.62 = private unnamed_addr constant [45 x i8] c"failed to get groups for the current process\00", align 1
@.str.2.63 = private unnamed_addr constant [34 x i8] c"cannot find name for group ID %lu\00", align 1
@gidtostr_ptr.buf.65 = internal global [21 x i8] zeroinitializer, align 16, !dbg !78
@Version = internal global i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.68, i32 0, i32 0), align 8, !dbg !86
@.str.68 = private unnamed_addr constant [5 x i8] c"8.32\00", align 1
@ignore_EPIPE = internal global i8 0, align 1, !dbg !91
@.str.71 = private unnamed_addr constant [12 x i8] c"write error\00", align 1
@file_name = internal global i8* null, align 8, !dbg !96
@.str.1.72 = private unnamed_addr constant [7 x i8] c"%s: %s\00", align 1
@.str.2.73 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@exit_failure = internal global i32 1, align 4, !dbg !99
@.str.80 = private unnamed_addr constant [56 x i8] c"A NULL argv[0] was passed through an exec system call.\0A\00", align 1
@.str.1.81 = private unnamed_addr constant [8 x i8] c"/.libs/\00", align 1
@.str.2.82 = private unnamed_addr constant [4 x i8] c"lt-\00", align 1
@program_invocation_short_name = external dso_local global i8*, align 8
@program_name = internal global i8* null, align 8, !dbg !106
@program_invocation_name = external dso_local global i8*, align 8
@default_quoting_options = internal global %struct.quoting_options zeroinitializer, align 8, !dbg !113
@slotvec = internal global %struct.slotvec* @slotvec0, align 8, !dbg !165
@nslots = internal global i32 1, align 4, !dbg !172
@slotvec0 = internal global %struct.slotvec { i64 256, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i32 0, i32 0) }, align 8, !dbg !174
@slot0 = internal global [256 x i8] zeroinitializer, align 16, !dbg !160
@.str.10.85 = private unnamed_addr constant [2 x i8] c"\22\00", align 1
@.str.11.86 = private unnamed_addr constant [2 x i8] c"`\00", align 1
@.str.12.87 = private unnamed_addr constant [2 x i8] c"'\00", align 1
@.str.13.88 = private unnamed_addr constant [6 x i8] c"UTF-8\00", align 1
@.str.14.89 = private unnamed_addr constant [4 x i8] c"\E2\80\98\00", align 1
@.str.15.90 = private unnamed_addr constant [4 x i8] c"\E2\80\99\00", align 1
@.str.16.91 = private unnamed_addr constant [8 x i8] c"GB18030\00", align 1
@.str.17.92 = private unnamed_addr constant [4 x i8] c"\A1\07e\00", align 1
@.str.18.93 = private unnamed_addr constant [3 x i8] c"\A1\AF\00", align 1
@quote_quoting_options = internal global %struct.quoting_options { i32 8, i32 0, [8 x i32] zeroinitializer, i8* null, i8* null }, align 8, !dbg !148
@parse_with_separator.E_bad_spec = internal global i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2.105, i32 0, i32 0), align 8, !dbg !176
@.str.3.102 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@parse_with_separator.E_invalid_user = internal global i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.104, i32 0, i32 0), align 8, !dbg !189
@parse_with_separator.E_invalid_group = internal global i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.103, i32 0, i32 0), align 8, !dbg !191
@.str.1.103 = private unnamed_addr constant [14 x i8] c"invalid group\00", align 1
@.str.104 = private unnamed_addr constant [13 x i8] c"invalid user\00", align 1
@.str.2.105 = private unnamed_addr constant [13 x i8] c"invalid spec\00", align 1
@.str.106 = private unnamed_addr constant [12 x i8] c"%s (%s) %s\0A\00", align 1
@.str.1.107 = private unnamed_addr constant [7 x i8] c"%s %s\0A\00", align 1
@.str.2.108 = private unnamed_addr constant [4 x i8] c"(C)\00", align 1
@.str.3.109 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.4.110 = private unnamed_addr constant [171 x i8] c"License GPLv3+: GNU GPL version 3 or later <%s>.\0AThis is free software: you are free to change and redistribute it.\0AThere is NO WARRANTY, to the extent permitted by law.\0A\00", align 1
@.str.5.111 = private unnamed_addr constant [34 x i8] c"https://gnu.org/licenses/gpl.html\00", align 1
@.str.6.112 = private unnamed_addr constant [16 x i8] c"Written by %s.\0A\00", align 1
@.str.7.113 = private unnamed_addr constant [23 x i8] c"Written by %s and %s.\0A\00", align 1
@.str.8.114 = private unnamed_addr constant [28 x i8] c"Written by %s, %s, and %s.\0A\00", align 1
@.str.9.115 = private unnamed_addr constant [32 x i8] c"Written by %s, %s, %s,\0Aand %s.\0A\00", align 1
@.str.10.116 = private unnamed_addr constant [36 x i8] c"Written by %s, %s, %s,\0A%s, and %s.\0A\00", align 1
@.str.11.117 = private unnamed_addr constant [40 x i8] c"Written by %s, %s, %s,\0A%s, %s, and %s.\0A\00", align 1
@.str.12.118 = private unnamed_addr constant [44 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, and %s.\0A\00", align 1
@.str.13.119 = private unnamed_addr constant [48 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0Aand %s.\0A\00", align 1
@.str.14.120 = private unnamed_addr constant [52 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0A%s, and %s.\0A\00", align 1
@.str.15.121 = private unnamed_addr constant [60 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0A%s, %s, and others.\0A\00", align 1
@version_etc_copyright = internal constant [47 x i8] c"Copyright %s %d Free Software Foundation, Inc.\00", align 16, !dbg !193
@.str.1.136 = private unnamed_addr constant [17 x i8] c"memory exhausted\00", align 1
@.str.137 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.142 = private unnamed_addr constant [38 x i8] c"0 <= strtol_base && strtol_base <= 36\00", align 1
@.str.1.143 = private unnamed_addr constant [16 x i8] c"./lib/xstrtol.c\00", align 1
@__PRETTY_FUNCTION__.xstrtoul = private unnamed_addr constant [81 x i8] c"strtol_error xstrtoul(const char *, char **, int, unsigned long *, const char *)\00", align 1
@.str.152 = private unnamed_addr constant [2 x i8] c"C\00", align 1
@.str.1.153 = private unnamed_addr constant [6 x i8] c"POSIX\00", align 1
@.str.156 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.1.157 = private unnamed_addr constant [6 x i8] c"ASCII\00", align 1
@inVal0 = global i32 0
@inVal1 = global i8** null
@.compVal0 = private global [2 x i8] c"+\00"
@.compVal1 = private global [4 x i8] c"\01  \00"
@.compVal2 = private global [1 x i8] zeroinitializer
@x = common global i32 0
@y = common global i32 0
@x.1 = common global i32 0
@y.2 = common global i32 0
@x.3 = common global i32 0
@y.4 = common global i32 0
@x.5 = common global i32 0
@y.6 = common global i32 0
@x.7 = common global i32 0
@y.8 = common global i32 0
@x.9 = common global i32 0
@y.10 = common global i32 0
@x.11 = common global i32 0
@y.12 = common global i32 0
@x.13 = common global i32 0
@y.14 = common global i32 0
@x.15 = common global i32 0
@y.16 = common global i32 0
@x.17 = common global i32 0
@y.18 = common global i32 0
@x.19 = common global i32 0
@y.20 = common global i32 0
@x.21 = common global i32 0
@y.22 = common global i32 0
@x.23 = common global i32 0
@y.24 = common global i32 0
@x.25 = common global i32 0
@y.26 = common global i32 0
@x.27 = common global i32 0
@y.28 = common global i32 0
@x.29 = common global i32 0
@y.30 = common global i32 0
@x.31 = common global i32 0
@y.32 = common global i32 0
@x.33 = common global i32 0
@y.34 = common global i32 0
@x.35 = common global i32 0
@y.36 = common global i32 0
@x.37 = common global i32 0
@y.38 = common global i32 0
@x.39 = common global i32 0
@y.40 = common global i32 0
@x.41 = common global i32 0
@y.42 = common global i32 0
@x.43 = common global i32 0
@y.44 = common global i32 0
@x.45 = common global i32 0
@y.46 = common global i32 0
@x.47 = common global i32 0
@y.48 = common global i32 0
@x.49 = common global i32 0
@y.50 = common global i32 0
@x.51 = common global i32 0
@y.52 = common global i32 0
@x.53 = common global i32 0
@y.54 = common global i32 0
@x.55 = common global i32 0
@y.56 = common global i32 0
@x.57 = common global i32 0
@y.58 = common global i32 0
@x.59 = common global i32 0
@y.60 = common global i32 0
@x.61 = common global i32 0
@y.62 = common global i32 0
@x.63 = common global i32 0
@y.64 = common global i32 0
@x.65 = common global i32 0
@y.66 = common global i32 0
@x.67 = common global i32 0
@y.68 = common global i32 0
@x.69 = common global i32 0
@y.70 = common global i32 0
@x.71 = common global i32 0
@y.72 = common global i32 0
@x.73 = common global i32 0
@y.74 = common global i32 0
@x.75 = common global i32 0
@y.76 = common global i32 0
@x.77 = common global i32 0
@y.78 = common global i32 0
@x.79 = common global i32 0
@y.80 = common global i32 0
@x.81 = common global i32 0
@y.82 = common global i32 0
@x.83 = common global i32 0
@y.84 = common global i32 0
@x.85 = common global i32 0
@y.86 = common global i32 0
@x.87 = common global i32 0
@y.88 = common global i32 0
@x.89 = common global i32 0
@y.90 = common global i32 0
@x.91 = common global i32 0
@y.92 = common global i32 0
@x.93 = common global i32 0
@y.94 = common global i32 0
@x.95 = common global i32 0
@y.96 = common global i32 0
@x.97 = common global i32 0
@y.98 = common global i32 0
@x.99 = common global i32 0
@y.100 = common global i32 0
@x.101 = common global i32 0
@y.102 = common global i32 0
@x.103 = common global i32 0
@y.104 = common global i32 0
@x.105 = common global i32 0
@y.106 = common global i32 0
@x.107 = common global i32 0
@y.108 = common global i32 0
@x.109 = common global i32 0
@y.110 = common global i32 0
@x.111 = common global i32 0
@y.112 = common global i32 0
@x.113 = common global i32 0
@y.114 = common global i32 0
@x.115 = common global i32 0
@y.116 = common global i32 0

; Function Attrs: noinline noreturn nounwind optnone uwtable
define internal void @usage(i32) #0 !dbg !269 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !272, metadata !DIExpression()), !dbg !273
  %3 = load i32, i32* %2, align 4, !dbg !274
  %4 = icmp ne i32 %3, 0, !dbg !276
  br i1 %4, label %5, label %12, !dbg !277

5:                                                ; preds = %1
  br label %6, !dbg !278

6:                                                ; preds = %5
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !279
  %8 = call i8* @gettext(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str, i64 0, i64 0)) #10, !dbg !279
  %9 = load i8*, i8** @program_name, align 8, !dbg !279
  %10 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %7, i8* %8, i8* %9), !dbg !279
  br label %11, !dbg !279

11:                                               ; preds = %6
  br label %47, !dbg !279

12:                                               ; preds = %1
  %13 = load i32, i32* @x
  %14 = load i32, i32* @y
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %12, %originalBBalteredBB
  %21 = call i8* @gettext(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1, i64 0, i64 0)) #10, !dbg !281
  %22 = load i8*, i8** @program_name, align 8, !dbg !283
  %23 = call i32 (i8*, ...) @printf(i8* %21, i8* %22), !dbg !284
  %24 = call i8* @gettext(i8* getelementptr inbounds ([105 x i8], [105 x i8]* @.str.2, i64 0, i64 0)) #10, !dbg !285
  %25 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !285
  %26 = call i32 @fputs_unlocked(i8* %24, %struct._IO_FILE* %25), !dbg !285
  %27 = call i8* @gettext(i8* getelementptr inbounds ([521 x i8], [521 x i8]* @.str.3, i64 0, i64 0)) #10, !dbg !286
  %28 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !286
  %29 = call i32 @fputs_unlocked(i8* %27, %struct._IO_FILE* %28), !dbg !286
  %30 = call i8* @gettext(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.4, i64 0, i64 0)) #10, !dbg !287
  %31 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !287
  %32 = call i32 @fputs_unlocked(i8* %30, %struct._IO_FILE* %31), !dbg !287
  %33 = call i8* @gettext(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.5, i64 0, i64 0)) #10, !dbg !288
  %34 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !288
  %35 = call i32 @fputs_unlocked(i8* %33, %struct._IO_FILE* %34), !dbg !288
  %36 = call i8* @gettext(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.6, i64 0, i64 0)) #10, !dbg !289
  %37 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !289
  %38 = call i32 @fputs_unlocked(i8* %36, %struct._IO_FILE* %37), !dbg !289
  call void @emit_ancillary_info(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0)), !dbg !290
  %39 = load i32, i32* @x
  %40 = load i32, i32* @y
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %47

47:                                               ; preds = %originalBBpart2, %11
  %48 = load i32, i32* %2, align 4, !dbg !291
  call void @exit(i32 %48) #12, !dbg !292
  unreachable, !dbg !292

originalBBalteredBB:                              ; preds = %originalBB, %12
  %49 = call i8* @gettext(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1, i64 0, i64 0)) #10, !dbg !281
  %50 = load i8*, i8** @program_name, align 8, !dbg !283
  %51 = call i32 (i8*, ...) @printf(i8* %49, i8* %50), !dbg !284
  %52 = call i8* @gettext(i8* getelementptr inbounds ([105 x i8], [105 x i8]* @.str.2, i64 0, i64 0)) #10, !dbg !285
  %53 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !285
  %54 = call i32 @fputs_unlocked(i8* %52, %struct._IO_FILE* %53), !dbg !285
  %55 = call i8* @gettext(i8* getelementptr inbounds ([521 x i8], [521 x i8]* @.str.3, i64 0, i64 0)) #10, !dbg !286
  %56 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !286
  %57 = call i32 @fputs_unlocked(i8* %55, %struct._IO_FILE* %56), !dbg !286
  %58 = call i8* @gettext(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.4, i64 0, i64 0)) #10, !dbg !287
  %59 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !287
  %60 = call i32 @fputs_unlocked(i8* %58, %struct._IO_FILE* %59), !dbg !287
  %61 = call i8* @gettext(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.5, i64 0, i64 0)) #10, !dbg !288
  %62 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !288
  %63 = call i32 @fputs_unlocked(i8* %61, %struct._IO_FILE* %62), !dbg !288
  %64 = call i8* @gettext(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.6, i64 0, i64 0)) #10, !dbg !289
  %65 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !289
  %66 = call i32 @fputs_unlocked(i8* %64, %struct._IO_FILE* %65), !dbg !289
  call void @emit_ancillary_info(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0)), !dbg !290
  br label %originalBB
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind
declare dso_local i8* @gettext(i8*) #2

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) #3

declare dso_local i32 @printf(i8*, ...) #3

declare dso_local i32 @fputs_unlocked(i8*, %struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @emit_ancillary_info(i8*) #4 !dbg !293 {
  %2 = alloca i8*, align 8
  %3 = alloca [7 x %struct.infomap], align 16
  %4 = alloca i8*, align 8
  %5 = alloca %struct.infomap*, align 8
  %6 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !297, metadata !DIExpression()), !dbg !298
  call void @llvm.dbg.declare(metadata [7 x %struct.infomap]* %3, metadata !299, metadata !DIExpression()), !dbg !308
  %7 = bitcast [7 x %struct.infomap]* %3 to i8*, !dbg !308
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %7, i8* align 16 bitcast ([7 x %struct.infomap]* @__const.emit_ancillary_info.infomap to i8*), i64 112, i1 false), !dbg !308
  call void @llvm.dbg.declare(metadata i8** %4, metadata !309, metadata !DIExpression()), !dbg !310
  %8 = load i8*, i8** %2, align 8, !dbg !311
  store i8* %8, i8** %4, align 8, !dbg !310
  call void @llvm.dbg.declare(metadata %struct.infomap** %5, metadata !312, metadata !DIExpression()), !dbg !314
  %9 = getelementptr inbounds [7 x %struct.infomap], [7 x %struct.infomap]* %3, i64 0, i64 0, !dbg !315
  store %struct.infomap* %9, %struct.infomap** %5, align 8, !dbg !314
  br label %10, !dbg !316

10:                                               ; preds = %41, %1
  %11 = load %struct.infomap*, %struct.infomap** %5, align 8, !dbg !317
  %12 = getelementptr inbounds %struct.infomap, %struct.infomap* %11, i32 0, i32 0, !dbg !318
  %13 = load i8*, i8** %12, align 8, !dbg !318
  %14 = icmp ne i8* %13, null, !dbg !317
  br i1 %14, label %15, label %23, !dbg !319

15:                                               ; preds = %10
  %16 = load i8*, i8** %2, align 8, !dbg !320
  %17 = load %struct.infomap*, %struct.infomap** %5, align 8, !dbg !320
  %18 = getelementptr inbounds %struct.infomap, %struct.infomap* %17, i32 0, i32 0, !dbg !320
  %19 = load i8*, i8** %18, align 8, !dbg !320
  %20 = call i32 @strcmp(i8* %16, i8* %19) #13, !dbg !320
  %21 = icmp eq i32 %20, 0, !dbg !320
  %22 = xor i1 %21, true, !dbg !321
  br label %23

23:                                               ; preds = %15, %10
  %24 = phi i1 [ false, %10 ], [ %22, %15 ], !dbg !322
  %25 = load i32, i32* @x.1
  %26 = load i32, i32* @y.2
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %23, %originalBBalteredBB
  %33 = load i32, i32* @x.1
  %34 = load i32, i32* @y.2
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %24, label %41, label %44, !dbg !316

41:                                               ; preds = %originalBBpart2
  %42 = load %struct.infomap*, %struct.infomap** %5, align 8, !dbg !323
  %43 = getelementptr inbounds %struct.infomap, %struct.infomap* %42, i32 1, !dbg !323
  store %struct.infomap* %43, %struct.infomap** %5, align 8, !dbg !323
  br label %10, !dbg !316, !llvm.loop !324

44:                                               ; preds = %originalBBpart2
  %45 = load i32, i32* @x.1
  %46 = load i32, i32* @y.2
  %47 = sub i32 %45, 1
  %48 = mul i32 %45, %47
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %50, %51
  br i1 %52, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %44, %originalBB1alteredBB
  %53 = load %struct.infomap*, %struct.infomap** %5, align 8, !dbg !325
  %54 = getelementptr inbounds %struct.infomap, %struct.infomap* %53, i32 0, i32 1, !dbg !327
  %55 = load i8*, i8** %54, align 8, !dbg !327
  %56 = icmp ne i8* %55, null, !dbg !325
  %57 = load i32, i32* @x.1
  %58 = load i32, i32* @y.2
  %59 = sub i32 %57, 1
  %60 = mul i32 %57, %59
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %58, 10
  %64 = or i1 %62, %63
  br i1 %64, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %56, label %65, label %85, !dbg !328

65:                                               ; preds = %originalBBpart24
  %66 = load i32, i32* @x.1
  %67 = load i32, i32* @y.2
  %68 = sub i32 %66, 1
  %69 = mul i32 %66, %68
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %67, 10
  %73 = or i1 %71, %72
  br i1 %73, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %65, %originalBB6alteredBB
  %74 = load %struct.infomap*, %struct.infomap** %5, align 8, !dbg !329
  %75 = getelementptr inbounds %struct.infomap, %struct.infomap* %74, i32 0, i32 1, !dbg !330
  %76 = load i8*, i8** %75, align 8, !dbg !330
  store i8* %76, i8** %4, align 8, !dbg !331
  %77 = load i32, i32* @x.1
  %78 = load i32, i32* @y.2
  %79 = sub i32 %77, 1
  %80 = mul i32 %77, %79
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %78, 10
  %84 = or i1 %82, %83
  br i1 %84, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %85, !dbg !332

85:                                               ; preds = %originalBBpart28, %originalBBpart24
  %86 = load i32, i32* @x.1
  %87 = load i32, i32* @y.2
  %88 = sub i32 %86, 1
  %89 = mul i32 %86, %88
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %87, 10
  %93 = or i1 %91, %92
  br i1 %93, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %85, %originalBB10alteredBB
  %94 = call i8* @gettext(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.35, i64 0, i64 0)) #10, !dbg !333
  %95 = call i32 (i8*, ...) @printf(i8* %94, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.36, i64 0, i64 0)), !dbg !334
  call void @llvm.dbg.declare(metadata i8** %6, metadata !335, metadata !DIExpression()), !dbg !336
  %96 = call i8* @setlocale(i32 5, i8* null) #10, !dbg !337
  store i8* %96, i8** %6, align 8, !dbg !336
  %97 = load i8*, i8** %6, align 8, !dbg !338
  %98 = icmp ne i8* %97, null, !dbg !338
  %99 = load i32, i32* @x.1
  %100 = load i32, i32* @y.2
  %101 = sub i32 %99, 1
  %102 = mul i32 %99, %101
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %100, 10
  %106 = or i1 %104, %105
  br i1 %106, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %98, label %107, label %115, !dbg !340

107:                                              ; preds = %originalBBpart212
  %108 = load i8*, i8** %6, align 8, !dbg !341
  %109 = call i32 @strncmp(i8* %108, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.37, i64 0, i64 0), i64 3) #13, !dbg !341
  %110 = icmp ne i32 %109, 0, !dbg !341
  br i1 %110, label %111, label %115, !dbg !342

111:                                              ; preds = %107
  %112 = call i8* @gettext(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.38, i64 0, i64 0)) #10, !dbg !343
  %113 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !343
  %114 = call i32 @fputs_unlocked(i8* %112, %struct._IO_FILE* %113), !dbg !343
  br label %115, !dbg !345

115:                                              ; preds = %111, %107, %originalBBpart212
  %116 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.39, i64 0, i64 0)) #10, !dbg !346
  %117 = load i8*, i8** %2, align 8, !dbg !347
  %118 = call i32 (i8*, ...) @printf(i8* %116, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.36, i64 0, i64 0), i8* %117), !dbg !348
  %119 = call i8* @gettext(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.40, i64 0, i64 0)) #10, !dbg !349
  %120 = load i8*, i8** %4, align 8, !dbg !350
  %121 = load i8*, i8** %4, align 8, !dbg !351
  %122 = load i8*, i8** %2, align 8, !dbg !352
  %123 = icmp eq i8* %121, %122, !dbg !353
  %124 = zext i1 %123 to i64, !dbg !351
  %125 = select i1 %123, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.41, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.8, i64 0, i64 0), !dbg !351
  %126 = call i32 (i8*, ...) @printf(i8* %119, i8* %120, i8* %125), !dbg !354
  ret void, !dbg !355

originalBBalteredBB:                              ; preds = %originalBB, %23
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %44
  %127 = load %struct.infomap*, %struct.infomap** %5, align 8, !dbg !325
  %128 = getelementptr inbounds %struct.infomap, %struct.infomap* %127, i32 0, i32 1, !dbg !327
  %129 = load i8*, i8** %128, align 8, !dbg !327
  %130 = icmp ne i8* %129, null, !dbg !325
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %65
  %131 = load %struct.infomap*, %struct.infomap** %5, align 8, !dbg !329
  %132 = getelementptr inbounds %struct.infomap, %struct.infomap* %131, i32 0, i32 1, !dbg !330
  %133 = load i8*, i8** %132, align 8, !dbg !330
  store i8* %133, i8** %4, align 8, !dbg !331
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %85
  %134 = call i8* @gettext(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.35, i64 0, i64 0)) #10, !dbg !333
  %135 = call i32 (i8*, ...) @printf(i8* %134, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.36, i64 0, i64 0)), !dbg !334
  call void @llvm.dbg.declare(metadata !4, metadata !356, metadata !DIExpression()), !dbg !336
  %136 = call i8* @setlocale(i32 5, i8* null) #10, !dbg !337
  store i8* %136, i8** %6, align 8, !dbg !336
  %137 = load i8*, i8** %6, align 8, !dbg !338
  %138 = icmp ne i8* %137, null, !dbg !338
  br label %originalBB10
}

; Function Attrs: noreturn nounwind
declare dso_local void @exit(i32) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #6

; Function Attrs: nounwind readonly
declare dso_local i32 @strcmp(i8*, i8*) #7

; Function Attrs: nounwind
declare dso_local i8* @setlocale(i32, i8*) #2

; Function Attrs: nounwind readonly
declare dso_local i32 @strncmp(i8*, i8*, i64) #7

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32, i8**) #4 !dbg !404 {
  %3 = load i32, i32* @x.3
  %4 = load i32, i32* @y.4
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  store i8** %1, i8*** @inVal1
  store i32 %0, i32* @inVal0
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i8**, align 8
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i8, align 1
  %17 = alloca i8*, align 8
  %18 = alloca i64, align 8
  %19 = alloca i8, align 1
  %20 = alloca %struct.passwd*, align 8
  %21 = alloca i8*, align 8
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  store i32 0, i32* %11, align 4
  store i32 %0, i32* %12, align 4
  call void @llvm.dbg.declare(metadata i32* %12, metadata !407, metadata !DIExpression()), !dbg !408
  store i8** %1, i8*** %13, align 8
  call void @llvm.dbg.declare(metadata i8*** %13, metadata !409, metadata !DIExpression()), !dbg !410
  call void @llvm.dbg.declare(metadata i32* %14, metadata !411, metadata !DIExpression()), !dbg !412
  call void @llvm.dbg.declare(metadata i32* %15, metadata !413, metadata !DIExpression()), !dbg !414
  store i32 0, i32* %15, align 4, !dbg !414
  call void @llvm.dbg.declare(metadata i8* %16, metadata !415, metadata !DIExpression()), !dbg !416
  %24 = call zeroext i1 @is_smack_enabled(), !dbg !417
  %25 = zext i1 %24 to i8, !dbg !416
  store i8 %25, i8* %16, align 1, !dbg !416
  call void @llvm.dbg.declare(metadata i8** %17, metadata !418, metadata !DIExpression()), !dbg !419
  store i8* null, i8** %17, align 8, !dbg !419
  %26 = load i8**, i8*** %13, align 8, !dbg !420
  %27 = getelementptr inbounds i8*, i8** %26, i64 0, !dbg !420
  %28 = load i8*, i8** %27, align 8, !dbg !420
  call void @set_program_name(i8* %28), !dbg !421
  %29 = call i8* @setlocale(i32 6, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.8, i64 0, i64 0)) #10, !dbg !422
  %30 = call i8* @bindtextdomain(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.10, i64 0, i64 0)) #10, !dbg !423
  %31 = call i8* @textdomain(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9, i64 0, i64 0)) #10, !dbg !424
  %32 = call i32 @atexit(void ()* @close_stdout) #10, !dbg !425
  %33 = load i32, i32* @x.3
  %34 = load i32, i32* @y.4
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %41, !dbg !426

41:                                               ; preds = %originalBBpart224, %originalBBpart2
  %42 = load i32, i32* %12, align 4, !dbg !427
  %43 = load i8**, i8*** %13, align 8, !dbg !428
  %44 = call i32 @getopt_long(i32 %42, i8** %43, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.11, i64 0, i64 0), %struct.option* getelementptr inbounds ([10 x %struct.option], [10 x %struct.option]* @longopts, i64 0, i64 0), i32* null) #10, !dbg !429
  store i32 %44, i32* %14, align 4, !dbg !430
  %45 = icmp ne i32 %44, -1, !dbg !431
  br i1 %45, label %46, label %163, !dbg !426

46:                                               ; preds = %41
  %47 = load i32, i32* @x.3
  %48 = load i32, i32* @y.4
  %49 = sub i32 %47, 1
  %50 = mul i32 %47, %49
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %48, 10
  %54 = or i1 %52, %53
  br i1 %54, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %46, %originalBB1alteredBB
  %55 = load i32, i32* %14, align 4, !dbg !432
  %56 = load i32, i32* @x.3
  %57 = load i32, i32* @y.4
  %58 = sub i32 %56, 1
  %59 = mul i32 %56, %58
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %61, %62
  br i1 %63, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  switch i32 %55, label %145 [
    i32 97, label %64
    i32 90, label %65
    i32 103, label %103
    i32 110, label %120
    i32 114, label %121
    i32 117, label %138
    i32 122, label %139
    i32 71, label %140
    i32 -130, label %141
    i32 -131, label %142
  ], !dbg !434

64:                                               ; preds = %originalBBpart24
  br label %146, !dbg !435

65:                                               ; preds = %originalBBpart24
  %66 = load i32, i32* %15, align 4, !dbg !437
  %67 = icmp ne i32 %66, 0, !dbg !437
  br i1 %67, label %86, label %68, !dbg !439

68:                                               ; preds = %65
  %69 = load i32, i32* @x.3
  %70 = load i32, i32* @y.4
  %71 = sub i32 %69, 1
  %72 = mul i32 %69, %71
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %74, %75
  br i1 %76, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %68, %originalBB6alteredBB
  %77 = call i8* @gettext(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.12, i64 0, i64 0)) #10, !dbg !440
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %77), !dbg !440
  %78 = load i32, i32* @x.3
  %79 = load i32, i32* @y.4
  %80 = sub i32 %78, 1
  %81 = mul i32 %78, %80
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %79, 10
  %85 = or i1 %83, %84
  br i1 %85, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  unreachable, !dbg !440

86:                                               ; preds = %65
  %87 = load i32, i32* @x.3
  %88 = load i32, i32* @y.4
  %89 = sub i32 %87, 1
  %90 = mul i32 %87, %89
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %88, 10
  %94 = or i1 %92, %93
  br i1 %94, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %86, %originalBB10alteredBB
  store i8 1, i8* @just_context, align 1, !dbg !441
  %95 = load i32, i32* @x.3
  %96 = load i32, i32* @y.4
  %97 = sub i32 %95, 1
  %98 = mul i32 %95, %97
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %96, 10
  %102 = or i1 %100, %101
  br i1 %102, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %146, !dbg !442

103:                                              ; preds = %originalBBpart24
  %104 = load i32, i32* @x.3
  %105 = load i32, i32* @y.4
  %106 = sub i32 %104, 1
  %107 = mul i32 %104, %106
  %108 = urem i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = icmp slt i32 %105, 10
  %111 = or i1 %109, %110
  br i1 %111, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %103, %originalBB14alteredBB
  store i8 1, i8* @just_group, align 1, !dbg !443
  %112 = load i32, i32* @x.3
  %113 = load i32, i32* @y.4
  %114 = sub i32 %112, 1
  %115 = mul i32 %112, %114
  %116 = urem i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = icmp slt i32 %113, 10
  %119 = or i1 %117, %118
  br i1 %119, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %146, !dbg !444

120:                                              ; preds = %originalBBpart24
  store i8 1, i8* @use_name, align 1, !dbg !445
  br label %146, !dbg !446

121:                                              ; preds = %originalBBpart24
  %122 = load i32, i32* @x.3
  %123 = load i32, i32* @y.4
  %124 = sub i32 %122, 1
  %125 = mul i32 %122, %124
  %126 = urem i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = icmp slt i32 %123, 10
  %129 = or i1 %127, %128
  br i1 %129, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %121, %originalBB18alteredBB
  store i8 1, i8* @use_real, align 1, !dbg !447
  %130 = load i32, i32* @x.3
  %131 = load i32, i32* @y.4
  %132 = sub i32 %130, 1
  %133 = mul i32 %130, %132
  %134 = urem i32 %133, 2
  %135 = icmp eq i32 %134, 0
  %136 = icmp slt i32 %131, 10
  %137 = or i1 %135, %136
  br i1 %137, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %146, !dbg !448

138:                                              ; preds = %originalBBpart24
  store i8 1, i8* @just_user, align 1, !dbg !449
  br label %146, !dbg !450

139:                                              ; preds = %originalBBpart24
  store i8 1, i8* @opt_zero, align 1, !dbg !451
  br label %146, !dbg !452

140:                                              ; preds = %originalBBpart24
  store i8 1, i8* @just_group_list, align 1, !dbg !453
  br label %146, !dbg !454

141:                                              ; preds = %originalBBpart24
  call void @usage(i32 0) #14, !dbg !455
  unreachable, !dbg !455

142:                                              ; preds = %originalBBpart24
  %143 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !456
  %144 = load i8*, i8** @Version, align 8, !dbg !456
  call void (%struct._IO_FILE*, i8*, i8*, i8*, ...) @version_etc(%struct._IO_FILE* %143, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.13, i64 0, i64 0), i8* %144, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.15, i64 0, i64 0), i8* null), !dbg !456
  call void @exit(i32 0) #12, !dbg !456
  unreachable, !dbg !456

145:                                              ; preds = %originalBBpart24
  call void @usage(i32 1) #14, !dbg !457
  unreachable, !dbg !457

146:                                              ; preds = %140, %139, %138, %originalBBpart220, %120, %originalBBpart216, %originalBBpart212, %64
  %147 = load i32, i32* @x.3
  %148 = load i32, i32* @y.4
  %149 = sub i32 %147, 1
  %150 = mul i32 %147, %149
  %151 = urem i32 %150, 2
  %152 = icmp eq i32 %151, 0
  %153 = icmp slt i32 %148, 10
  %154 = or i1 %152, %153
  br i1 %154, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %146, %originalBB22alteredBB
  %155 = load i32, i32* @x.3
  %156 = load i32, i32* @y.4
  %157 = sub i32 %155, 1
  %158 = mul i32 %155, %157
  %159 = urem i32 %158, 2
  %160 = icmp eq i32 %159, 0
  %161 = icmp slt i32 %156, 10
  %162 = or i1 %160, %161
  br i1 %162, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br label %41, !dbg !426, !llvm.loop !458

163:                                              ; preds = %41
  call void @llvm.dbg.declare(metadata i64* %18, metadata !460, metadata !DIExpression()), !dbg !461
  %164 = load i32, i32* @x.3
  %165 = load i32, i32* @y.4
  %166 = sub i32 %164, 1
  %167 = mul i32 %164, %166
  %168 = urem i32 %167, 2
  %169 = icmp eq i32 %168, 0
  %170 = icmp slt i32 %165, 10
  %171 = or i1 %169, %170
  br i1 %171, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %163, %originalBB26alteredBB
  %172 = load i32, i32* %12, align 4, !dbg !462
  %173 = load i32, i32* @optind, align 4, !dbg !463
  %174 = sub nsw i32 %172, %173, !dbg !464
  %175 = sext i32 %174 to i64, !dbg !462
  store i64 %175, i64* %18, align 8, !dbg !461
  %176 = load i64, i64* %18, align 8, !dbg !465
  %177 = icmp ne i64 %176, 0, !dbg !465
  %178 = load i32, i32* @x.3
  %179 = load i32, i32* @y.4
  %180 = sub i32 %178, 1
  %181 = mul i32 %178, %180
  %182 = urem i32 %181, 2
  %183 = icmp eq i32 %182, 0
  %184 = icmp slt i32 %179, 10
  %185 = or i1 %183, %184
  br i1 %185, label %originalBBpart232, label %originalBB26alteredBB

originalBBpart232:                                ; preds = %originalBB26
  br i1 %177, label %186, label %191, !dbg !467

186:                                              ; preds = %originalBBpart232
  %187 = load i8, i8* @just_context, align 1, !dbg !468
  %188 = trunc i8 %187 to i1, !dbg !468
  br i1 %188, label %189, label %191, !dbg !469

189:                                              ; preds = %186
  %190 = call i8* @gettext(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.16, i64 0, i64 0)) #10, !dbg !470
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %190), !dbg !470
  unreachable, !dbg !470

191:                                              ; preds = %186, %originalBBpart232
  %192 = load i8, i8* @just_user, align 1, !dbg !471
  %193 = trunc i8 %192 to i1, !dbg !471
  %194 = zext i1 %193 to i32, !dbg !471
  %195 = load i8, i8* @just_group, align 1, !dbg !473
  %196 = trunc i8 %195 to i1, !dbg !473
  %197 = zext i1 %196 to i32, !dbg !473
  %198 = add nsw i32 %194, %197, !dbg !474
  %199 = load i8, i8* @just_group_list, align 1, !dbg !475
  %200 = trunc i8 %199 to i1, !dbg !475
  %201 = zext i1 %200 to i32, !dbg !475
  %202 = add nsw i32 %198, %201, !dbg !476
  %203 = load i8, i8* @just_context, align 1, !dbg !477
  %204 = trunc i8 %203 to i1, !dbg !477
  %205 = zext i1 %204 to i32, !dbg !477
  %206 = add nsw i32 %202, %205, !dbg !478
  %207 = icmp sgt i32 %206, 1, !dbg !479
  br i1 %207, label %208, label %226, !dbg !480

208:                                              ; preds = %191
  %209 = load i32, i32* @x.3
  %210 = load i32, i32* @y.4
  %211 = sub i32 %209, 1
  %212 = mul i32 %209, %211
  %213 = urem i32 %212, 2
  %214 = icmp eq i32 %213, 0
  %215 = icmp slt i32 %210, 10
  %216 = or i1 %214, %215
  br i1 %216, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %208, %originalBB34alteredBB
  %217 = call i8* @gettext(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.17, i64 0, i64 0)) #10, !dbg !481
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %217), !dbg !481
  %218 = load i32, i32* @x.3
  %219 = load i32, i32* @y.4
  %220 = sub i32 %218, 1
  %221 = mul i32 %218, %220
  %222 = urem i32 %221, 2
  %223 = icmp eq i32 %222, 0
  %224 = icmp slt i32 %219, 10
  %225 = or i1 %223, %224
  br i1 %225, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  unreachable, !dbg !481

226:                                              ; preds = %191
  call void @llvm.dbg.declare(metadata i8* %19, metadata !482, metadata !DIExpression()), !dbg !483
  %227 = load i32, i32* @x.3
  %228 = load i32, i32* @y.4
  %229 = sub i32 %227, 1
  %230 = mul i32 %227, %229
  %231 = urem i32 %230, 2
  %232 = icmp eq i32 %231, 0
  %233 = icmp slt i32 %228, 10
  %234 = or i1 %232, %233
  br i1 %234, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %226, %originalBB38alteredBB
  %235 = load i8, i8* @just_user, align 1, !dbg !484
  %236 = trunc i8 %235 to i1, !dbg !484
  %237 = load i32, i32* @x.3
  %238 = load i32, i32* @y.4
  %239 = sub i32 %237, 1
  %240 = mul i32 %237, %239
  %241 = urem i32 %240, 2
  %242 = icmp eq i32 %241, 0
  %243 = icmp slt i32 %238, 10
  %244 = or i1 %242, %243
  br i1 %244, label %originalBBpart240, label %originalBB38alteredBB

originalBBpart240:                                ; preds = %originalBB38
  br i1 %236, label %270, label %245, !dbg !485

245:                                              ; preds = %originalBBpart240
  %246 = load i32, i32* @x.3
  %247 = load i32, i32* @y.4
  %248 = sub i32 %246, 1
  %249 = mul i32 %246, %248
  %250 = urem i32 %249, 2
  %251 = icmp eq i32 %250, 0
  %252 = icmp slt i32 %247, 10
  %253 = or i1 %251, %252
  br i1 %253, label %originalBB42, label %originalBB42alteredBB

originalBB42:                                     ; preds = %245, %originalBB42alteredBB
  %254 = load i8, i8* @just_group, align 1, !dbg !486
  %255 = trunc i8 %254 to i1, !dbg !486
  %256 = load i32, i32* @x.3
  %257 = load i32, i32* @y.4
  %258 = sub i32 %256, 1
  %259 = mul i32 %256, %258
  %260 = urem i32 %259, 2
  %261 = icmp eq i32 %260, 0
  %262 = icmp slt i32 %257, 10
  %263 = or i1 %261, %262
  br i1 %263, label %originalBBpart244, label %originalBB42alteredBB

originalBBpart244:                                ; preds = %originalBB42
  br i1 %255, label %270, label %264, !dbg !487

264:                                              ; preds = %originalBBpart244
  %265 = load i8, i8* @just_group_list, align 1, !dbg !488
  %266 = trunc i8 %265 to i1, !dbg !488
  br i1 %266, label %270, label %267, !dbg !489

267:                                              ; preds = %264
  %268 = load i8, i8* @just_context, align 1, !dbg !490
  %269 = trunc i8 %268 to i1, !dbg !490
  br label %270, !dbg !489

270:                                              ; preds = %267, %264, %originalBBpart244, %originalBBpart240
  %271 = phi i1 [ true, %264 ], [ true, %originalBBpart244 ], [ true, %originalBBpart240 ], [ %269, %267 ]
  %272 = xor i1 %271, true, !dbg !491
  %273 = zext i1 %272 to i8, !dbg !483
  store i8 %273, i8* %19, align 1, !dbg !483
  %274 = load i8, i8* %19, align 1, !dbg !492
  %275 = trunc i8 %274 to i1, !dbg !492
  br i1 %275, label %276, label %316, !dbg !494

276:                                              ; preds = %270
  %277 = load i32, i32* @x.3
  %278 = load i32, i32* @y.4
  %279 = sub i32 %277, 1
  %280 = mul i32 %277, %279
  %281 = urem i32 %280, 2
  %282 = icmp eq i32 %281, 0
  %283 = icmp slt i32 %278, 10
  %284 = or i1 %282, %283
  br i1 %284, label %originalBB46, label %originalBB46alteredBB

originalBB46:                                     ; preds = %276, %originalBB46alteredBB
  %285 = load i8, i8* @use_real, align 1, !dbg !495
  %286 = trunc i8 %285 to i1, !dbg !495
  %287 = load i32, i32* @x.3
  %288 = load i32, i32* @y.4
  %289 = sub i32 %287, 1
  %290 = mul i32 %287, %289
  %291 = urem i32 %290, 2
  %292 = icmp eq i32 %291, 0
  %293 = icmp slt i32 %288, 10
  %294 = or i1 %292, %293
  br i1 %294, label %originalBBpart248, label %originalBB46alteredBB

originalBBpart248:                                ; preds = %originalBB46
  br i1 %286, label %298, label %295, !dbg !496

295:                                              ; preds = %originalBBpart248
  %296 = load i8, i8* @use_name, align 1, !dbg !497
  %297 = trunc i8 %296 to i1, !dbg !497
  br i1 %297, label %298, label %316, !dbg !498

298:                                              ; preds = %295, %originalBBpart248
  %299 = load i32, i32* @x.3
  %300 = load i32, i32* @y.4
  %301 = sub i32 %299, 1
  %302 = mul i32 %299, %301
  %303 = urem i32 %302, 2
  %304 = icmp eq i32 %303, 0
  %305 = icmp slt i32 %300, 10
  %306 = or i1 %304, %305
  br i1 %306, label %originalBB50, label %originalBB50alteredBB

originalBB50:                                     ; preds = %298, %originalBB50alteredBB
  %307 = call i8* @gettext(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.18, i64 0, i64 0)) #10, !dbg !499
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %307), !dbg !499
  %308 = load i32, i32* @x.3
  %309 = load i32, i32* @y.4
  %310 = sub i32 %308, 1
  %311 = mul i32 %308, %310
  %312 = urem i32 %311, 2
  %313 = icmp eq i32 %312, 0
  %314 = icmp slt i32 %309, 10
  %315 = or i1 %313, %314
  br i1 %315, label %originalBBpart252, label %originalBB50alteredBB

originalBBpart252:                                ; preds = %originalBB50
  unreachable, !dbg !499

316:                                              ; preds = %295, %270
  %317 = load i32, i32* @x.3
  %318 = load i32, i32* @y.4
  %319 = sub i32 %317, 1
  %320 = mul i32 %317, %319
  %321 = urem i32 %320, 2
  %322 = icmp eq i32 %321, 0
  %323 = icmp slt i32 %318, 10
  %324 = or i1 %322, %323
  br i1 %324, label %originalBB54, label %originalBB54alteredBB

originalBB54:                                     ; preds = %316, %originalBB54alteredBB
  %325 = load i8, i8* %19, align 1, !dbg !500
  %326 = trunc i8 %325 to i1, !dbg !500
  %327 = load i32, i32* @x.3
  %328 = load i32, i32* @y.4
  %329 = sub i32 %327, 1
  %330 = mul i32 %327, %329
  %331 = urem i32 %330, 2
  %332 = icmp eq i32 %331, 0
  %333 = icmp slt i32 %328, 10
  %334 = or i1 %332, %333
  br i1 %334, label %originalBBpart256, label %originalBB54alteredBB

originalBBpart256:                                ; preds = %originalBB54
  br i1 %326, label %335, label %340, !dbg !502

335:                                              ; preds = %originalBBpart256
  %336 = load i8, i8* @opt_zero, align 1, !dbg !503
  %337 = trunc i8 %336 to i1, !dbg !503
  br i1 %337, label %338, label %340, !dbg !504

338:                                              ; preds = %335
  %339 = call i8* @gettext(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.19, i64 0, i64 0)) #10, !dbg !505
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %339), !dbg !505
  unreachable, !dbg !505

340:                                              ; preds = %335, %originalBBpart256
  %341 = load i32, i32* @x.3
  %342 = load i32, i32* @y.4
  %343 = sub i32 %341, 1
  %344 = mul i32 %341, %343
  %345 = urem i32 %344, 2
  %346 = icmp eq i32 %345, 0
  %347 = icmp slt i32 %342, 10
  %348 = or i1 %346, %347
  br i1 %348, label %originalBB58, label %originalBB58alteredBB

originalBB58:                                     ; preds = %340, %originalBB58alteredBB
  %349 = load i64, i64* %18, align 8, !dbg !506
  %350 = load i32, i32* @x.3
  %351 = load i32, i32* @y.4
  %352 = sub i32 %350, 1
  %353 = mul i32 %350, %352
  %354 = urem i32 %353, 2
  %355 = icmp eq i32 %354, 0
  %356 = icmp slt i32 %351, 10
  %357 = or i1 %355, %356
  br i1 %357, label %originalBBpart260, label %originalBB58alteredBB

originalBBpart260:                                ; preds = %originalBB58
  br label %358, !dbg !508

358:                                              ; preds = %originalBBpart260
  %collatzVar = alloca i32
  br label %359

359:                                              ; preds = %358
  %360 = load i32, i32* @inVal0
  %361 = icmp sgt i32 %360, 1
  br i1 %361, label %363, label %362

362:                                              ; preds = %359
  store i32 88, i32* %collatzVar
  br label %363

363:                                              ; preds = %362, %359
  %364 = load i8**, i8*** @inVal1
  %365 = getelementptr inbounds i8*, i8** %364, i64 1
  %366 = load i8*, i8** %365
  %367 = trunc i64 0 to i32
  %controle = call i32 @controle(i8* %366, i32 %367)
  store i32 %controle, i32* %collatzVar
  br label %368

368:                                              ; preds = %originalBBpart280, %originalBBpart275, %363
  %369 = load i32, i32* %collatzVar
  %370 = icmp sgt i32 %369, 1
  br i1 %370, label %371, label %536

371:                                              ; preds = %368
  %372 = load i32, i32* %collatzVar
  %373 = srem i32 %372, 2
  %374 = icmp eq i32 %373, 0
  br i1 %374, label %375, label %378

375:                                              ; preds = %371
  %376 = load i32, i32* %collatzVar
  %377 = sdiv i32 %376, 2
  store i32 %377, i32* %collatzVar
  br label %382

378:                                              ; preds = %371
  %379 = load i32, i32* %collatzVar
  %380 = mul i32 %379, 3
  %381 = add i32 %380, 1
  store i32 %381, i32* %collatzVar
  br label %382

382:                                              ; preds = %378, %375
  %383 = load i32, i32* @x.3
  %384 = load i32, i32* @y.4
  %385 = sub i32 %383, 1
  %386 = mul i32 %383, %385
  %387 = urem i32 %386, 2
  %388 = icmp eq i32 %387, 0
  %389 = icmp slt i32 %384, 10
  %390 = or i1 %388, %389
  br i1 %390, label %originalBB62, label %originalBB62alteredBB

originalBB62:                                     ; preds = %382, %originalBB62alteredBB
  %391 = load i32, i32* %collatzVar
  %392 = sext i32 %391 to i64
  %393 = sext i32 -2 to i64
  %394 = sub i64 %349, %392
  %395 = icmp sgt i64 %394, %393
  %396 = load i32, i32* @x.3
  %397 = load i32, i32* @y.4
  %398 = sub i32 %396, 1
  %399 = mul i32 %396, %398
  %400 = urem i32 %399, 2
  %401 = icmp eq i32 %400, 0
  %402 = icmp slt i32 %397, 10
  %403 = or i1 %401, %402
  br i1 %403, label %originalBBpart275, label %originalBB62alteredBB

originalBBpart275:                                ; preds = %originalBB62
  br i1 %395, label %404, label %368

404:                                              ; preds = %originalBBpart275
  %405 = load i32, i32* @x.3
  %406 = load i32, i32* @y.4
  %407 = sub i32 %405, 1
  %408 = mul i32 %405, %407
  %409 = urem i32 %408, 2
  %410 = icmp eq i32 %409, 0
  %411 = icmp slt i32 %406, 10
  %412 = or i1 %410, %411
  br i1 %412, label %originalBB77, label %originalBB77alteredBB

originalBB77:                                     ; preds = %404, %originalBB77alteredBB
  %413 = load i32, i32* %collatzVar
  %414 = sext i32 %413 to i64
  %415 = sext i32 2 to i64
  %416 = add i64 %349, %414
  %417 = icmp slt i64 %416, %415
  %418 = load i32, i32* @x.3
  %419 = load i32, i32* @y.4
  %420 = sub i32 %418, 1
  %421 = mul i32 %418, %420
  %422 = urem i32 %421, 2
  %423 = icmp eq i32 %422, 0
  %424 = icmp slt i32 %419, 10
  %425 = or i1 %423, %424
  br i1 %425, label %originalBBpart280, label %originalBB77alteredBB

originalBBpart280:                                ; preds = %originalBB77
  br i1 %417, label %426, label %368

426:                                              ; preds = %originalBBpart280
  %427 = load i32, i32* @x.3
  %428 = load i32, i32* @y.4
  %429 = sub i32 %427, 1
  %430 = mul i32 %427, %429
  %431 = urem i32 %430, 2
  %432 = icmp eq i32 %431, 0
  %433 = icmp slt i32 %428, 10
  %434 = or i1 %432, %433
  br i1 %434, label %originalBB82, label %originalBB82alteredBB

originalBB82:                                     ; preds = %426, %originalBB82alteredBB
  %435 = load i8, i8* @just_context, align 1, !dbg !509
  %436 = trunc i8 %435 to i1, !dbg !509
  %437 = load i32, i32* @x.3
  %438 = load i32, i32* @y.4
  %439 = sub i32 %437, 1
  %440 = mul i32 %437, %439
  %441 = urem i32 %440, 2
  %442 = icmp eq i32 %441, 0
  %443 = icmp slt i32 %438, 10
  %444 = or i1 %442, %443
  br i1 %444, label %originalBBpart284, label %originalBB82alteredBB

originalBBpart284:                                ; preds = %originalBB82
  br i1 %436, label %451, label %445, !dbg !510

445:                                              ; preds = %originalBBpart284
  %446 = load i8, i8* %19, align 1, !dbg !511
  %447 = trunc i8 %446 to i1, !dbg !511
  br i1 %447, label %448, label %536, !dbg !512

448:                                              ; preds = %445
  %449 = call i8* @getenv(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.20, i64 0, i64 0)) #10, !dbg !513
  %450 = icmp ne i8* %449, null, !dbg !513
  br i1 %450, label %536, label %451, !dbg !514

451:                                              ; preds = %448, %originalBBpart284
  %452 = load i32, i32* %15, align 4, !dbg !515
  %453 = icmp ne i32 %452, 0, !dbg !515
  br i1 %453, label %454, label %476, !dbg !518

454:                                              ; preds = %451
  %455 = call i32 @getcon(i8** @context), !dbg !519
  %456 = icmp ne i32 %455, 0, !dbg !519
  br i1 %456, label %457, label %476, !dbg !520

457:                                              ; preds = %454
  %458 = load i32, i32* @x.3
  %459 = load i32, i32* @y.4
  %460 = sub i32 %458, 1
  %461 = mul i32 %458, %460
  %462 = urem i32 %461, 2
  %463 = icmp eq i32 %462, 0
  %464 = icmp slt i32 %459, 10
  %465 = or i1 %463, %464
  br i1 %465, label %originalBB86, label %originalBB86alteredBB

originalBB86:                                     ; preds = %457, %originalBB86alteredBB
  %466 = load i8, i8* @just_context, align 1, !dbg !521
  %467 = trunc i8 %466 to i1, !dbg !521
  %468 = load i32, i32* @x.3
  %469 = load i32, i32* @y.4
  %470 = sub i32 %468, 1
  %471 = mul i32 %468, %470
  %472 = urem i32 %471, 2
  %473 = icmp eq i32 %472, 0
  %474 = icmp slt i32 %469, 10
  %475 = or i1 %473, %474
  br i1 %475, label %originalBBpart288, label %originalBB86alteredBB

originalBBpart288:                                ; preds = %originalBB86
  br i1 %467, label %501, label %476, !dbg !522

476:                                              ; preds = %originalBBpart288, %454, %451
  %477 = load i32, i32* @x.3
  %478 = load i32, i32* @y.4
  %479 = sub i32 %477, 1
  %480 = mul i32 %477, %479
  %481 = urem i32 %480, 2
  %482 = icmp eq i32 %481, 0
  %483 = icmp slt i32 %478, 10
  %484 = or i1 %482, %483
  br i1 %484, label %originalBB90, label %originalBB90alteredBB

originalBB90:                                     ; preds = %476, %originalBB90alteredBB
  %485 = load i8, i8* %16, align 1, !dbg !523
  %486 = trunc i8 %485 to i1, !dbg !523
  %487 = load i32, i32* @x.3
  %488 = load i32, i32* @y.4
  %489 = sub i32 %487, 1
  %490 = mul i32 %487, %489
  %491 = urem i32 %490, 2
  %492 = icmp eq i32 %491, 0
  %493 = icmp slt i32 %488, 10
  %494 = or i1 %492, %493
  br i1 %494, label %originalBBpart292, label %originalBB90alteredBB

originalBBpart292:                                ; preds = %originalBB90
  br i1 %486, label %495, label %519, !dbg !524

495:                                              ; preds = %originalBBpart292
  %496 = call i64 @smack_new_label_from_self(i8** @context), !dbg !525
  %497 = icmp slt i64 %496, 0, !dbg !526
  br i1 %497, label %498, label %519, !dbg !527

498:                                              ; preds = %495
  %499 = load i8, i8* @just_context, align 1, !dbg !528
  %500 = trunc i8 %499 to i1, !dbg !528
  br i1 %500, label %501, label %519, !dbg !529

501:                                              ; preds = %498, %originalBBpart288
  %502 = load i32, i32* @x.3
  %503 = load i32, i32* @y.4
  %504 = sub i32 %502, 1
  %505 = mul i32 %502, %504
  %506 = urem i32 %505, 2
  %507 = icmp eq i32 %506, 0
  %508 = icmp slt i32 %503, 10
  %509 = or i1 %507, %508
  br i1 %509, label %originalBB94, label %originalBB94alteredBB

originalBB94:                                     ; preds = %501, %originalBB94alteredBB
  %510 = call i8* @gettext(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.21, i64 0, i64 0)) #10, !dbg !530
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %510), !dbg !530
  %511 = load i32, i32* @x.3
  %512 = load i32, i32* @y.4
  %513 = sub i32 %511, 1
  %514 = mul i32 %511, %513
  %515 = urem i32 %514, 2
  %516 = icmp eq i32 %515, 0
  %517 = icmp slt i32 %512, 10
  %518 = or i1 %516, %517
  br i1 %518, label %originalBBpart296, label %originalBB94alteredBB

originalBBpart296:                                ; preds = %originalBB94
  unreachable, !dbg !530

519:                                              ; preds = %498, %495, %originalBBpart292
  %520 = load i32, i32* @x.3
  %521 = load i32, i32* @y.4
  %522 = sub i32 %520, 1
  %523 = mul i32 %520, %522
  %524 = urem i32 %523, 2
  %525 = icmp eq i32 %524, 0
  %526 = icmp slt i32 %521, 10
  %527 = or i1 %525, %526
  br i1 %527, label %originalBB98, label %originalBB98alteredBB

originalBB98:                                     ; preds = %519, %originalBB98alteredBB
  %528 = load i32, i32* @x.3
  %529 = load i32, i32* @y.4
  %530 = sub i32 %528, 1
  %531 = mul i32 %528, %530
  %532 = urem i32 %531, 2
  %533 = icmp eq i32 %532, 0
  %534 = icmp slt i32 %529, 10
  %535 = or i1 %533, %534
  br i1 %535, label %originalBBpart2100, label %originalBB98alteredBB

originalBBpart2100:                               ; preds = %originalBB98
  br label %536, !dbg !531

536:                                              ; preds = %originalBBpart2100, %448, %445, %368
  %537 = load i32, i32* @x.3
  %538 = load i32, i32* @y.4
  %539 = sub i32 %537, 1
  %540 = mul i32 %537, %539
  %541 = urem i32 %540, 2
  %542 = icmp eq i32 %541, 0
  %543 = icmp slt i32 %538, 10
  %544 = or i1 %542, %543
  br i1 %544, label %originalBB102, label %originalBB102alteredBB

originalBB102:                                    ; preds = %536, %originalBB102alteredBB
  %545 = load i64, i64* %18, align 8, !dbg !532
  %546 = icmp uge i64 %545, 1, !dbg !534
  %547 = load i32, i32* @x.3
  %548 = load i32, i32* @y.4
  %549 = sub i32 %547, 1
  %550 = mul i32 %547, %549
  %551 = urem i32 %550, 2
  %552 = icmp eq i32 %551, 0
  %553 = icmp slt i32 %548, 10
  %554 = or i1 %552, %553
  br i1 %554, label %originalBBpart2104, label %originalBB102alteredBB

originalBBpart2104:                               ; preds = %originalBB102
  br i1 %546, label %555, label %656, !dbg !535

555:                                              ; preds = %originalBBpart2104
  %556 = load i64, i64* %18, align 8, !dbg !536
  %557 = icmp ugt i64 %556, 1, !dbg !538
  %558 = zext i1 %557 to i64, !dbg !536
  %559 = select i1 %557, i32 1, i32 0, !dbg !536
  %560 = icmp ne i32 %559, 0, !dbg !536
  %561 = zext i1 %560 to i8, !dbg !539
  store i8 %561, i8* @multiple_users, align 1, !dbg !539
  %562 = load i32, i32* @optind, align 4, !dbg !540
  %563 = sext i32 %562 to i64, !dbg !540
  %564 = load i64, i64* %18, align 8, !dbg !541
  %565 = add i64 %564, %563, !dbg !541
  store i64 %565, i64* %18, align 8, !dbg !541
  br label %566, !dbg !542

566:                                              ; preds = %originalBBpart2125, %555
  %567 = load i32, i32* @optind, align 4, !dbg !543
  %568 = sext i32 %567 to i64, !dbg !543
  %569 = load i64, i64* %18, align 8, !dbg !546
  %570 = icmp ult i64 %568, %569, !dbg !547
  br i1 %570, label %571, label %655, !dbg !548

571:                                              ; preds = %566
  call void @llvm.dbg.declare(metadata %struct.passwd** %20, metadata !549, metadata !DIExpression()), !dbg !562
  %572 = load i32, i32* @x.3
  %573 = load i32, i32* @y.4
  %574 = sub i32 %572, 1
  %575 = mul i32 %572, %574
  %576 = urem i32 %575, 2
  %577 = icmp eq i32 %576, 0
  %578 = icmp slt i32 %573, 10
  %579 = or i1 %577, %578
  br i1 %579, label %originalBB106, label %originalBB106alteredBB

originalBB106:                                    ; preds = %571, %originalBB106alteredBB
  store %struct.passwd* null, %struct.passwd** %20, align 8, !dbg !562
  call void @llvm.dbg.declare(metadata i8** %21, metadata !563, metadata !DIExpression()), !dbg !564
  %580 = load i8**, i8*** %13, align 8, !dbg !565
  %581 = load i32, i32* @optind, align 4, !dbg !566
  %582 = sext i32 %581 to i64, !dbg !565
  %583 = getelementptr inbounds i8*, i8** %580, i64 %582, !dbg !565
  %584 = load i8*, i8** %583, align 8, !dbg !565
  store i8* %584, i8** %21, align 8, !dbg !564
  %585 = load i8*, i8** %21, align 8, !dbg !567
  %586 = load i8, i8* %585, align 1, !dbg !569
  %587 = icmp ne i8 %586, 0, !dbg !569
  %588 = load i32, i32* @x.3
  %589 = load i32, i32* @y.4
  %590 = sub i32 %588, 1
  %591 = mul i32 %588, %590
  %592 = urem i32 %591, 2
  %593 = icmp eq i32 %592, 0
  %594 = icmp slt i32 %589, 10
  %595 = or i1 %593, %594
  br i1 %595, label %originalBBpart2108, label %originalBB106alteredBB

originalBBpart2108:                               ; preds = %originalBB106
  br i1 %587, label %596, label %604, !dbg !570

596:                                              ; preds = %originalBBpart2108
  %597 = load i8*, i8** %21, align 8, !dbg !571
  %598 = call i8* @parse_user_spec(i8* %597, i32* @euid, i32* null, i8** null, i8** null), !dbg !574
  %599 = icmp eq i8* %598, null, !dbg !575
  br i1 %599, label %600, label %603, !dbg !576

600:                                              ; preds = %596
  %601 = load i32, i32* @euid, align 4, !dbg !577
  %602 = call %struct.passwd* @getpwuid(i32 %601), !dbg !579
  store %struct.passwd* %602, %struct.passwd** %20, align 8, !dbg !580
  br label %603, !dbg !581

603:                                              ; preds = %600, %596
  br label %604, !dbg !582

604:                                              ; preds = %603, %originalBBpart2108
  %605 = load %struct.passwd*, %struct.passwd** %20, align 8, !dbg !583
  %606 = icmp eq %struct.passwd* %605, null, !dbg !585
  br i1 %606, label %607, label %623, !dbg !586

607:                                              ; preds = %604
  %608 = call i32* @__errno_location() #15, !dbg !587
  %609 = load i32, i32* %608, align 4, !dbg !587
  %610 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.22, i64 0, i64 0)) #10, !dbg !589
  %611 = load i8**, i8*** %13, align 8, !dbg !590
  %612 = load i32, i32* @optind, align 4, !dbg !591
  %613 = sext i32 %612 to i64, !dbg !590
  %614 = getelementptr inbounds i8*, i8** %611, i64 %613, !dbg !590
  %615 = load i8*, i8** %614, align 8, !dbg !590
  %616 = call i8* @quote(i8* %615), !dbg !592
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %609, i8* %610, i8* %616), !dbg !593
  %617 = load i8, i8* @ok, align 1, !dbg !594
  %618 = trunc i8 %617 to i1, !dbg !594
  %619 = zext i1 %618 to i32, !dbg !594
  %620 = and i32 %619, 0, !dbg !594
  %621 = icmp ne i32 %620, 0, !dbg !594
  %622 = zext i1 %621 to i8, !dbg !594
  store i8 %622, i8* @ok, align 1, !dbg !594
  br label %636, !dbg !595

623:                                              ; preds = %604
  %624 = load %struct.passwd*, %struct.passwd** %20, align 8, !dbg !596
  %625 = getelementptr inbounds %struct.passwd, %struct.passwd* %624, i32 0, i32 0, !dbg !597
  %626 = load i8*, i8** %625, align 8, !dbg !597
  %627 = call noalias i8* @xstrdup(i8* %626), !dbg !598
  store i8* %627, i8** %17, align 8, !dbg !599
  %628 = load %struct.passwd*, %struct.passwd** %20, align 8, !dbg !600
  %629 = getelementptr inbounds %struct.passwd, %struct.passwd* %628, i32 0, i32 2, !dbg !601
  %630 = load i32, i32* %629, align 8, !dbg !601
  store i32 %630, i32* @euid, align 4, !dbg !602
  store i32 %630, i32* @ruid, align 4, !dbg !603
  %631 = load %struct.passwd*, %struct.passwd** %20, align 8, !dbg !604
  %632 = getelementptr inbounds %struct.passwd, %struct.passwd* %631, i32 0, i32 3, !dbg !605
  %633 = load i32, i32* %632, align 4, !dbg !605
  store i32 %633, i32* @egid, align 4, !dbg !606
  store i32 %633, i32* @rgid, align 4, !dbg !607
  %634 = load i8*, i8** %17, align 8, !dbg !608
  call void @print_stuff(i8* %634), !dbg !609
  %635 = load i8*, i8** %17, align 8, !dbg !610
  call void @free(i8* %635) #10, !dbg !611
  br label %636, !dbg !612

636:                                              ; preds = %623, %607
  %637 = load i32, i32* @x.3
  %638 = load i32, i32* @y.4
  %639 = sub i32 %637, 1
  %640 = mul i32 %637, %639
  %641 = urem i32 %640, 2
  %642 = icmp eq i32 %641, 0
  %643 = icmp slt i32 %638, 10
  %644 = or i1 %642, %643
  br i1 %644, label %originalBB110, label %originalBB110alteredBB

originalBB110:                                    ; preds = %636, %originalBB110alteredBB
  %645 = load i32, i32* @optind, align 4, !dbg !613
  %646 = add nsw i32 %645, 1, !dbg !613
  store i32 %646, i32* @optind, align 4, !dbg !613
  %647 = load i32, i32* @x.3
  %648 = load i32, i32* @y.4
  %649 = sub i32 %647, 1
  %650 = mul i32 %647, %649
  %651 = urem i32 %650, 2
  %652 = icmp eq i32 %651, 0
  %653 = icmp slt i32 %648, 10
  %654 = or i1 %652, %653
  br i1 %654, label %originalBBpart2125, label %originalBB110alteredBB

originalBBpart2125:                               ; preds = %originalBB110
  br label %566, !dbg !614, !llvm.loop !615

655:                                              ; preds = %566
  br label %935, !dbg !617

656:                                              ; preds = %originalBBpart2104
  call void @llvm.dbg.declare(metadata i32* %22, metadata !618, metadata !DIExpression()), !dbg !620
  store i32 -1, i32* %22, align 4, !dbg !620
  call void @llvm.dbg.declare(metadata i32* %23, metadata !621, metadata !DIExpression()), !dbg !622
  store i32 -1, i32* %23, align 4, !dbg !622
  %657 = load i8, i8* @just_user, align 1, !dbg !623
  %658 = trunc i8 %657 to i1, !dbg !623
  br i1 %658, label %659, label %662, !dbg !625

659:                                              ; preds = %656
  %660 = load i8, i8* @use_real, align 1, !dbg !626
  %661 = trunc i8 %660 to i1, !dbg !626
  br i1 %661, label %734, label %687, !dbg !623

662:                                              ; preds = %656
  %663 = load i8, i8* @just_group, align 1, !dbg !627
  %664 = trunc i8 %663 to i1, !dbg !627
  br i1 %664, label %734, label %665, !dbg !628

665:                                              ; preds = %662
  %666 = load i8, i8* @just_group_list, align 1, !dbg !629
  %667 = trunc i8 %666 to i1, !dbg !629
  br i1 %667, label %734, label %668, !dbg !630

668:                                              ; preds = %665
  %669 = load i32, i32* @x.3
  %670 = load i32, i32* @y.4
  %671 = sub i32 %669, 1
  %672 = mul i32 %669, %671
  %673 = urem i32 %672, 2
  %674 = icmp eq i32 %673, 0
  %675 = icmp slt i32 %670, 10
  %676 = or i1 %674, %675
  br i1 %676, label %originalBB127, label %originalBB127alteredBB

originalBB127:                                    ; preds = %668, %originalBB127alteredBB
  %677 = load i8, i8* @just_context, align 1, !dbg !631
  %678 = trunc i8 %677 to i1, !dbg !631
  %679 = load i32, i32* @x.3
  %680 = load i32, i32* @y.4
  %681 = sub i32 %679, 1
  %682 = mul i32 %679, %681
  %683 = urem i32 %682, 2
  %684 = icmp eq i32 %683, 0
  %685 = icmp slt i32 %680, 10
  %686 = or i1 %684, %685
  br i1 %686, label %originalBBpart2129, label %originalBB127alteredBB

originalBBpart2129:                               ; preds = %originalBB127
  br i1 %678, label %734, label %687, !dbg !625

687:                                              ; preds = %originalBBpart2129, %659
  %688 = load i32, i32* @x.3
  %689 = load i32, i32* @y.4
  %690 = sub i32 %688, 1
  %691 = mul i32 %688, %690
  %692 = urem i32 %691, 2
  %693 = icmp eq i32 %692, 0
  %694 = icmp slt i32 %689, 10
  %695 = or i1 %693, %694
  br i1 %695, label %originalBB131, label %originalBB131alteredBB

originalBB131:                                    ; preds = %687, %originalBB131alteredBB
  %696 = call i32* @__errno_location() #15, !dbg !632
  store i32 0, i32* %696, align 4, !dbg !634
  %697 = call i32 @geteuid() #10, !dbg !635
  store i32 %697, i32* @euid, align 4, !dbg !636
  %698 = load i32, i32* @euid, align 4, !dbg !637
  %699 = load i32, i32* %22, align 4, !dbg !639
  %700 = icmp eq i32 %698, %699, !dbg !640
  %701 = load i32, i32* @x.3
  %702 = load i32, i32* @y.4
  %703 = sub i32 %701, 1
  %704 = mul i32 %701, %703
  %705 = urem i32 %704, 2
  %706 = icmp eq i32 %705, 0
  %707 = icmp slt i32 %702, 10
  %708 = or i1 %706, %707
  br i1 %708, label %originalBBpart2133, label %originalBB131alteredBB

originalBBpart2133:                               ; preds = %originalBB131
  br i1 %700, label %709, label %733, !dbg !641

709:                                              ; preds = %originalBBpart2133
  %710 = load i32, i32* @x.3
  %711 = load i32, i32* @y.4
  %712 = sub i32 %710, 1
  %713 = mul i32 %710, %712
  %714 = urem i32 %713, 2
  %715 = icmp eq i32 %714, 0
  %716 = icmp slt i32 %711, 10
  %717 = or i1 %715, %716
  br i1 %717, label %originalBB135, label %originalBB135alteredBB

originalBB135:                                    ; preds = %709, %originalBB135alteredBB
  %718 = call i32* @__errno_location() #15, !dbg !642
  %719 = load i32, i32* %718, align 4, !dbg !642
  %720 = icmp ne i32 %719, 0, !dbg !642
  %721 = load i32, i32* @x.3
  %722 = load i32, i32* @y.4
  %723 = sub i32 %721, 1
  %724 = mul i32 %721, %723
  %725 = urem i32 %724, 2
  %726 = icmp eq i32 %725, 0
  %727 = icmp slt i32 %722, 10
  %728 = or i1 %726, %727
  br i1 %728, label %originalBBpart2137, label %originalBB135alteredBB

originalBBpart2137:                               ; preds = %originalBB135
  br i1 %720, label %729, label %733, !dbg !643

729:                                              ; preds = %originalBBpart2137
  %730 = call i32* @__errno_location() #15, !dbg !644
  %731 = load i32, i32* %730, align 4, !dbg !644
  %732 = call i8* @gettext(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.23, i64 0, i64 0)) #10, !dbg !644
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %731, i8* %732), !dbg !644
  unreachable, !dbg !644

733:                                              ; preds = %originalBBpart2137, %originalBBpart2133
  br label %734, !dbg !645

734:                                              ; preds = %733, %originalBBpart2129, %665, %662, %659
  %735 = load i8, i8* @just_user, align 1, !dbg !646
  %736 = trunc i8 %735 to i1, !dbg !646
  br i1 %736, label %737, label %756, !dbg !648

737:                                              ; preds = %734
  %738 = load i32, i32* @x.3
  %739 = load i32, i32* @y.4
  %740 = sub i32 %738, 1
  %741 = mul i32 %738, %740
  %742 = urem i32 %741, 2
  %743 = icmp eq i32 %742, 0
  %744 = icmp slt i32 %739, 10
  %745 = or i1 %743, %744
  br i1 %745, label %originalBB139, label %originalBB139alteredBB

originalBB139:                                    ; preds = %737, %originalBB139alteredBB
  %746 = load i8, i8* @use_real, align 1, !dbg !649
  %747 = trunc i8 %746 to i1, !dbg !649
  %748 = load i32, i32* @x.3
  %749 = load i32, i32* @y.4
  %750 = sub i32 %748, 1
  %751 = mul i32 %748, %750
  %752 = urem i32 %751, 2
  %753 = icmp eq i32 %752, 0
  %754 = icmp slt i32 %749, 10
  %755 = or i1 %753, %754
  br i1 %755, label %originalBBpart2141, label %originalBB139alteredBB

originalBBpart2141:                               ; preds = %originalBB139
  br i1 %747, label %781, label %844, !dbg !646

756:                                              ; preds = %734
  %757 = load i8, i8* @just_group, align 1, !dbg !650
  %758 = trunc i8 %757 to i1, !dbg !650
  br i1 %758, label %844, label %759, !dbg !651

759:                                              ; preds = %756
  %760 = load i32, i32* @x.3
  %761 = load i32, i32* @y.4
  %762 = sub i32 %760, 1
  %763 = mul i32 %760, %762
  %764 = urem i32 %763, 2
  %765 = icmp eq i32 %764, 0
  %766 = icmp slt i32 %761, 10
  %767 = or i1 %765, %766
  br i1 %767, label %originalBB143, label %originalBB143alteredBB

originalBB143:                                    ; preds = %759, %originalBB143alteredBB
  %768 = load i8, i8* @just_group_list, align 1, !dbg !652
  %769 = trunc i8 %768 to i1, !dbg !652
  %770 = load i32, i32* @x.3
  %771 = load i32, i32* @y.4
  %772 = sub i32 %770, 1
  %773 = mul i32 %770, %772
  %774 = urem i32 %773, 2
  %775 = icmp eq i32 %774, 0
  %776 = icmp slt i32 %771, 10
  %777 = or i1 %775, %776
  br i1 %777, label %originalBBpart2145, label %originalBB143alteredBB

originalBBpart2145:                               ; preds = %originalBB143
  br i1 %769, label %781, label %778, !dbg !653

778:                                              ; preds = %originalBBpart2145
  %779 = load i8, i8* @just_context, align 1, !dbg !654
  %780 = trunc i8 %779 to i1, !dbg !654
  br i1 %780, label %844, label %781, !dbg !648

781:                                              ; preds = %778, %originalBBpart2145, %originalBBpart2141
  %782 = load i32, i32* @x.3
  %783 = load i32, i32* @y.4
  %784 = sub i32 %782, 1
  %785 = mul i32 %782, %784
  %786 = urem i32 %785, 2
  %787 = icmp eq i32 %786, 0
  %788 = icmp slt i32 %783, 10
  %789 = or i1 %787, %788
  br i1 %789, label %originalBB147, label %originalBB147alteredBB

originalBB147:                                    ; preds = %781, %originalBB147alteredBB
  %790 = call i32* @__errno_location() #15, !dbg !655
  store i32 0, i32* %790, align 4, !dbg !657
  %791 = call i32 @getuid() #10, !dbg !658
  store i32 %791, i32* @ruid, align 4, !dbg !659
  %792 = load i32, i32* @ruid, align 4, !dbg !660
  %793 = load i32, i32* %22, align 4, !dbg !662
  %794 = icmp eq i32 %792, %793, !dbg !663
  %795 = load i32, i32* @x.3
  %796 = load i32, i32* @y.4
  %797 = sub i32 %795, 1
  %798 = mul i32 %795, %797
  %799 = urem i32 %798, 2
  %800 = icmp eq i32 %799, 0
  %801 = icmp slt i32 %796, 10
  %802 = or i1 %800, %801
  br i1 %802, label %originalBBpart2149, label %originalBB147alteredBB

originalBBpart2149:                               ; preds = %originalBB147
  br i1 %794, label %803, label %827, !dbg !664

803:                                              ; preds = %originalBBpart2149
  %804 = call i32* @__errno_location() #15, !dbg !665
  %805 = load i32, i32* %804, align 4, !dbg !665
  %806 = icmp ne i32 %805, 0, !dbg !665
  br i1 %806, label %807, label %827, !dbg !666

807:                                              ; preds = %803
  %808 = load i32, i32* @x.3
  %809 = load i32, i32* @y.4
  %810 = sub i32 %808, 1
  %811 = mul i32 %808, %810
  %812 = urem i32 %811, 2
  %813 = icmp eq i32 %812, 0
  %814 = icmp slt i32 %809, 10
  %815 = or i1 %813, %814
  br i1 %815, label %originalBB151, label %originalBB151alteredBB

originalBB151:                                    ; preds = %807, %originalBB151alteredBB
  %816 = call i32* @__errno_location() #15, !dbg !667
  %817 = load i32, i32* %816, align 4, !dbg !667
  %818 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.24, i64 0, i64 0)) #10, !dbg !667
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %817, i8* %818), !dbg !667
  %819 = load i32, i32* @x.3
  %820 = load i32, i32* @y.4
  %821 = sub i32 %819, 1
  %822 = mul i32 %819, %821
  %823 = urem i32 %822, 2
  %824 = icmp eq i32 %823, 0
  %825 = icmp slt i32 %820, 10
  %826 = or i1 %824, %825
  br i1 %826, label %originalBBpart2153, label %originalBB151alteredBB

originalBBpart2153:                               ; preds = %originalBB151
  unreachable, !dbg !667

827:                                              ; preds = %803, %originalBBpart2149
  %828 = load i32, i32* @x.3
  %829 = load i32, i32* @y.4
  %830 = sub i32 %828, 1
  %831 = mul i32 %828, %830
  %832 = urem i32 %831, 2
  %833 = icmp eq i32 %832, 0
  %834 = icmp slt i32 %829, 10
  %835 = or i1 %833, %834
  br i1 %835, label %originalBB155, label %originalBB155alteredBB

originalBB155:                                    ; preds = %827, %originalBB155alteredBB
  %836 = load i32, i32* @x.3
  %837 = load i32, i32* @y.4
  %838 = sub i32 %836, 1
  %839 = mul i32 %836, %838
  %840 = urem i32 %839, 2
  %841 = icmp eq i32 %840, 0
  %842 = icmp slt i32 %837, 10
  %843 = or i1 %841, %842
  br i1 %843, label %originalBBpart2157, label %originalBB155alteredBB

originalBBpart2157:                               ; preds = %originalBB155
  br label %844, !dbg !668

844:                                              ; preds = %originalBBpart2157, %778, %756, %originalBBpart2141
  %845 = load i8, i8* @just_user, align 1, !dbg !669
  %846 = trunc i8 %845 to i1, !dbg !669
  br i1 %846, label %933, label %847, !dbg !671

847:                                              ; preds = %844
  %848 = load i8, i8* @just_group, align 1, !dbg !672
  %849 = trunc i8 %848 to i1, !dbg !672
  br i1 %849, label %872, label %850, !dbg !673

850:                                              ; preds = %847
  %851 = load i32, i32* @x.3
  %852 = load i32, i32* @y.4
  %853 = sub i32 %851, 1
  %854 = mul i32 %851, %853
  %855 = urem i32 %854, 2
  %856 = icmp eq i32 %855, 0
  %857 = icmp slt i32 %852, 10
  %858 = or i1 %856, %857
  br i1 %858, label %originalBB159, label %originalBB159alteredBB

originalBB159:                                    ; preds = %850, %originalBB159alteredBB
  %859 = load i8, i8* @just_group_list, align 1, !dbg !674
  %860 = trunc i8 %859 to i1, !dbg !674
  %861 = load i32, i32* @x.3
  %862 = load i32, i32* @y.4
  %863 = sub i32 %861, 1
  %864 = mul i32 %861, %863
  %865 = urem i32 %864, 2
  %866 = icmp eq i32 %865, 0
  %867 = icmp slt i32 %862, 10
  %868 = or i1 %866, %867
  br i1 %868, label %originalBBpart2161, label %originalBB159alteredBB

originalBBpart2161:                               ; preds = %originalBB159
  br i1 %860, label %872, label %869, !dbg !675

869:                                              ; preds = %originalBBpart2161
  %870 = load i8, i8* @just_context, align 1, !dbg !676
  %871 = trunc i8 %870 to i1, !dbg !676
  br i1 %871, label %933, label %872, !dbg !677

872:                                              ; preds = %869, %originalBBpart2161, %847
  %873 = load i32, i32* @x.3
  %874 = load i32, i32* @y.4
  %875 = sub i32 %873, 1
  %876 = mul i32 %873, %875
  %877 = urem i32 %876, 2
  %878 = icmp eq i32 %877, 0
  %879 = icmp slt i32 %874, 10
  %880 = or i1 %878, %879
  br i1 %880, label %originalBB163, label %originalBB163alteredBB

originalBB163:                                    ; preds = %872, %originalBB163alteredBB
  %881 = call i32* @__errno_location() #15, !dbg !678
  store i32 0, i32* %881, align 4, !dbg !680
  %882 = call i32 @getegid() #10, !dbg !681
  store i32 %882, i32* @egid, align 4, !dbg !682
  %883 = load i32, i32* @egid, align 4, !dbg !683
  %884 = load i32, i32* %23, align 4, !dbg !685
  %885 = icmp eq i32 %883, %884, !dbg !686
  %886 = load i32, i32* @x.3
  %887 = load i32, i32* @y.4
  %888 = sub i32 %886, 1
  %889 = mul i32 %886, %888
  %890 = urem i32 %889, 2
  %891 = icmp eq i32 %890, 0
  %892 = icmp slt i32 %887, 10
  %893 = or i1 %891, %892
  br i1 %893, label %originalBBpart2165, label %originalBB163alteredBB

originalBBpart2165:                               ; preds = %originalBB163
  br i1 %885, label %894, label %902, !dbg !687

894:                                              ; preds = %originalBBpart2165
  %895 = call i32* @__errno_location() #15, !dbg !688
  %896 = load i32, i32* %895, align 4, !dbg !688
  %897 = icmp ne i32 %896, 0, !dbg !688
  br i1 %897, label %898, label %902, !dbg !689

898:                                              ; preds = %894
  %899 = call i32* @__errno_location() #15, !dbg !690
  %900 = load i32, i32* %899, align 4, !dbg !690
  %901 = call i8* @gettext(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.25, i64 0, i64 0)) #10, !dbg !690
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %900, i8* %901), !dbg !690
  unreachable, !dbg !690

902:                                              ; preds = %894, %originalBBpart2165
  %903 = call i32* @__errno_location() #15, !dbg !691
  store i32 0, i32* %903, align 4, !dbg !692
  %904 = call i32 @getgid() #10, !dbg !693
  store i32 %904, i32* @rgid, align 4, !dbg !694
  %905 = load i32, i32* @rgid, align 4, !dbg !695
  %906 = load i32, i32* %23, align 4, !dbg !697
  %907 = icmp eq i32 %905, %906, !dbg !698
  br i1 %907, label %908, label %932, !dbg !699

908:                                              ; preds = %902
  %909 = call i32* @__errno_location() #15, !dbg !700
  %910 = load i32, i32* %909, align 4, !dbg !700
  %911 = icmp ne i32 %910, 0, !dbg !700
  br i1 %911, label %912, label %932, !dbg !701

912:                                              ; preds = %908
  %913 = load i32, i32* @x.3
  %914 = load i32, i32* @y.4
  %915 = sub i32 %913, 1
  %916 = mul i32 %913, %915
  %917 = urem i32 %916, 2
  %918 = icmp eq i32 %917, 0
  %919 = icmp slt i32 %914, 10
  %920 = or i1 %918, %919
  br i1 %920, label %originalBB167, label %originalBB167alteredBB

originalBB167:                                    ; preds = %912, %originalBB167alteredBB
  %921 = call i32* @__errno_location() #15, !dbg !702
  %922 = load i32, i32* %921, align 4, !dbg !702
  %923 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.26, i64 0, i64 0)) #10, !dbg !702
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %922, i8* %923), !dbg !702
  %924 = load i32, i32* @x.3
  %925 = load i32, i32* @y.4
  %926 = sub i32 %924, 1
  %927 = mul i32 %924, %926
  %928 = urem i32 %927, 2
  %929 = icmp eq i32 %928, 0
  %930 = icmp slt i32 %925, 10
  %931 = or i1 %929, %930
  br i1 %931, label %originalBBpart2169, label %originalBB167alteredBB

originalBBpart2169:                               ; preds = %originalBB167
  unreachable, !dbg !702

932:                                              ; preds = %908, %902
  br label %933, !dbg !703

933:                                              ; preds = %932, %869, %844
  %934 = load i8*, i8** %17, align 8, !dbg !704
  call void @print_stuff(i8* %934), !dbg !705
  br label %935

935:                                              ; preds = %933, %655
  %936 = load i8, i8* @ok, align 1, !dbg !706
  %937 = trunc i8 %936 to i1, !dbg !706
  %938 = zext i1 %937 to i64, !dbg !706
  %939 = select i1 %937, i32 0, i32 1, !dbg !706
  ret i32 %939, !dbg !707

originalBBalteredBB:                              ; preds = %originalBB, %2
  store i8** %1, i8*** @inVal1
  store i32 %0, i32* @inVal0
  %940 = alloca i32, align 4
  %941 = alloca i32, align 4
  %942 = alloca i8**, align 8
  %943 = alloca i32, align 4
  %944 = alloca i32, align 4
  %945 = alloca i8, align 1
  %946 = alloca i8*, align 8
  %947 = alloca i64, align 8
  %948 = alloca i8, align 1
  %949 = alloca %struct.passwd*, align 8
  %950 = alloca i8*, align 8
  %951 = alloca i32, align 4
  %952 = alloca i32, align 4
  store i32 0, i32* %940, align 4
  store i32 %0, i32* %941, align 4
  call void @llvm.dbg.declare(metadata i32* %941, metadata !708, metadata !DIExpression()), !dbg !408
  store i8** %1, i8*** %942, align 8
  call void @llvm.dbg.declare(metadata i8*** %942, metadata !756, metadata !DIExpression()), !dbg !410
  call void @llvm.dbg.declare(metadata i32* %943, metadata !757, metadata !DIExpression()), !dbg !412
  call void @llvm.dbg.declare(metadata i32* %944, metadata !758, metadata !DIExpression()), !dbg !414
  store i32 0, i32* %944, align 4, !dbg !414
  call void @llvm.dbg.declare(metadata i8* %945, metadata !759, metadata !DIExpression()), !dbg !416
  %953 = call zeroext i1 @is_smack_enabled(), !dbg !417
  %954 = zext i1 %953 to i8, !dbg !416
  store i8 %954, i8* %945, align 1, !dbg !416
  call void @llvm.dbg.declare(metadata i8** %946, metadata !760, metadata !DIExpression()), !dbg !419
  store i8* null, i8** %946, align 8, !dbg !419
  %955 = load i8**, i8*** %942, align 8, !dbg !420
  %956 = getelementptr inbounds i8*, i8** %955, i64 0, !dbg !420
  %957 = load i8*, i8** %956, align 8, !dbg !420
  call void @set_program_name(i8* %957), !dbg !421
  %958 = call i8* @setlocale(i32 6, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.8, i64 0, i64 0)) #10, !dbg !422
  %959 = call i8* @bindtextdomain(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.10, i64 0, i64 0)) #10, !dbg !423
  %960 = call i8* @textdomain(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9, i64 0, i64 0)) #10, !dbg !424
  %961 = call i32 @atexit(void ()* @close_stdout) #10, !dbg !425
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %46
  %962 = load i32, i32* %14, align 4, !dbg !432
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %68
  %963 = call i8* @gettext(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.12, i64 0, i64 0)) #10, !dbg !440
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %963), !dbg !440
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %86
  store i8 1, i8* @just_context, align 1, !dbg !441
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %103
  store i8 1, i8* @just_group, align 1, !dbg !443
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %121
  store i8 1, i8* @use_real, align 1, !dbg !447
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %146
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %163
  %964 = load i32, i32* %12, align 4, !dbg !462
  %965 = load i32, i32* @optind, align 4, !dbg !463
  %_ = sub i32 0, %964
  %gen = add i32 %_, %965
  %_27 = sub i32 0, %964
  %gen28 = add i32 %_27, %965
  %_29 = shl i32 %964, %965
  %_30 = shl i32 %964, %965
  %966 = sub nsw i32 %964, %965, !dbg !464
  %967 = sext i32 %966 to i64, !dbg !462
  store i64 %967, i64* %18, align 8, !dbg !461
  %968 = load i64, i64* %18, align 8, !dbg !465
  %969 = icmp ne i64 %968, 0, !dbg !465
  br label %originalBB26

originalBB34alteredBB:                            ; preds = %originalBB34, %208
  %970 = call i8* @gettext(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.17, i64 0, i64 0)) #10, !dbg !481
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %970), !dbg !481
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %226
  %971 = load i8, i8* @just_user, align 1, !dbg !484
  %972 = trunc i8 %971 to i1, !dbg !484
  br label %originalBB38

originalBB42alteredBB:                            ; preds = %originalBB42, %245
  %973 = load i8, i8* @just_group, align 1, !dbg !486
  %974 = trunc i8 %973 to i1, !dbg !486
  br label %originalBB42

originalBB46alteredBB:                            ; preds = %originalBB46, %276
  %975 = load i8, i8* @use_real, align 1, !dbg !495
  %976 = trunc i8 %975 to i1, !dbg !495
  br label %originalBB46

originalBB50alteredBB:                            ; preds = %originalBB50, %298
  %977 = call i8* @gettext(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.18, i64 0, i64 0)) #10, !dbg !499
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %977), !dbg !499
  br label %originalBB50

originalBB54alteredBB:                            ; preds = %originalBB54, %316
  %978 = load i8, i8* %19, align 1, !dbg !500
  %979 = trunc i8 %978 to i1, !dbg !500
  br label %originalBB54

originalBB58alteredBB:                            ; preds = %originalBB58, %340
  %980 = load i64, i64* %18, align 8, !dbg !506
  br label %originalBB58

originalBB62alteredBB:                            ; preds = %originalBB62, %382
  %981 = load i32, i32* %collatzVar
  %982 = sext i32 %981 to i64
  %983 = sext i32 -2 to i64
  %_63 = shl i64 %349, %982
  %_64 = sub i64 0, %349
  %gen65 = add i64 %_64, %982
  %_66 = sub i64 0, %349
  %gen67 = add i64 %_66, %982
  %_68 = sub i64 %349, %982
  %gen69 = mul i64 %_68, %982
  %_70 = sub i64 %349, %982
  %gen71 = mul i64 %_70, %982
  %_72 = sub i64 %349, %982
  %gen73 = mul i64 %_72, %982
  %984 = sub i64 %349, %982
  %985 = icmp sgt i64 %984, %983
  br label %originalBB62

originalBB77alteredBB:                            ; preds = %originalBB77, %404
  %986 = load i32, i32* %collatzVar
  %987 = sext i32 %986 to i64
  %988 = sext i32 2 to i64
  %_78 = shl i64 %349, %987
  %989 = add i64 %349, %987
  %990 = icmp slt i64 %989, %988
  br label %originalBB77

originalBB82alteredBB:                            ; preds = %originalBB82, %426
  %991 = load i8, i8* @just_context, align 1, !dbg !509
  %992 = trunc i8 %991 to i1, !dbg !509
  br label %originalBB82

originalBB86alteredBB:                            ; preds = %originalBB86, %457
  %993 = load i8, i8* @just_context, align 1, !dbg !521
  %994 = trunc i8 %993 to i1, !dbg !521
  br label %originalBB86

originalBB90alteredBB:                            ; preds = %originalBB90, %476
  %995 = load i8, i8* %16, align 1, !dbg !523
  %996 = trunc i8 %995 to i1, !dbg !523
  br label %originalBB90

originalBB94alteredBB:                            ; preds = %originalBB94, %501
  %997 = call i8* @gettext(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.21, i64 0, i64 0)) #10, !dbg !530
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %997), !dbg !530
  br label %originalBB94

originalBB98alteredBB:                            ; preds = %originalBB98, %519
  br label %originalBB98

originalBB102alteredBB:                           ; preds = %originalBB102, %536
  %998 = load i64, i64* %18, align 8, !dbg !532
  %999 = icmp uge i64 %998, 1, !dbg !534
  br label %originalBB102

originalBB106alteredBB:                           ; preds = %originalBB106, %571
  store %struct.passwd* null, %struct.passwd** %20, align 8, !dbg !562
  call void @llvm.dbg.declare(metadata !4, metadata !761, metadata !DIExpression()), !dbg !564
  %1000 = load i8**, i8*** %13, align 8, !dbg !565
  %1001 = load i32, i32* @optind, align 4, !dbg !566
  %1002 = sext i32 %1001 to i64, !dbg !565
  %1003 = getelementptr inbounds i8*, i8** %1000, i64 %1002, !dbg !565
  %1004 = load i8*, i8** %1003, align 8, !dbg !565
  store i8* %1004, i8** %21, align 8, !dbg !564
  %1005 = load i8*, i8** %21, align 8, !dbg !567
  %1006 = load i8, i8* %1005, align 1, !dbg !569
  %1007 = icmp ne i8 %1006, 0, !dbg !569
  br label %originalBB106

originalBB110alteredBB:                           ; preds = %originalBB110, %636
  %1008 = load i32, i32* @optind, align 4, !dbg !613
  %_111 = shl i32 %1008, 1
  %_112 = sub i32 %1008, 1
  %gen113 = mul i32 %_112, 1
  %_114 = shl i32 %1008, 1
  %_115 = shl i32 %1008, 1
  %_116 = sub i32 0, %1008
  %gen117 = add i32 %_116, 1
  %_118 = shl i32 %1008, 1
  %_119 = shl i32 %1008, 1
  %_120 = sub i32 0, %1008
  %gen121 = add i32 %_120, 1
  %_122 = sub i32 %1008, 1
  %gen123 = mul i32 %_122, 1
  %1009 = add nsw i32 %1008, 1, !dbg !613
  store i32 %1009, i32* @optind, align 4, !dbg !613
  br label %originalBB110

originalBB127alteredBB:                           ; preds = %originalBB127, %668
  %1010 = load i8, i8* @just_context, align 1, !dbg !631
  %1011 = trunc i8 %1010 to i1, !dbg !631
  br label %originalBB127

originalBB131alteredBB:                           ; preds = %originalBB131, %687
  %1012 = call i32* @__errno_location() #15, !dbg !632
  store i32 0, i32* %1012, align 4, !dbg !634
  %1013 = call i32 @geteuid() #10, !dbg !635
  store i32 %1013, i32* @euid, align 4, !dbg !636
  %1014 = load i32, i32* @euid, align 4, !dbg !637
  %1015 = load i32, i32* %22, align 4, !dbg !639
  %1016 = icmp eq i32 %1014, %1015, !dbg !640
  br label %originalBB131

originalBB135alteredBB:                           ; preds = %originalBB135, %709
  %1017 = call i32* @__errno_location() #15, !dbg !642
  %1018 = load i32, i32* %1017, align 4, !dbg !642
  %1019 = icmp ne i32 %1018, 0, !dbg !642
  br label %originalBB135

originalBB139alteredBB:                           ; preds = %originalBB139, %737
  %1020 = load i8, i8* @use_real, align 1, !dbg !649
  %1021 = trunc i8 %1020 to i1, !dbg !649
  br label %originalBB139

originalBB143alteredBB:                           ; preds = %originalBB143, %759
  %1022 = load i8, i8* @just_group_list, align 1, !dbg !652
  %1023 = trunc i8 %1022 to i1, !dbg !652
  br label %originalBB143

originalBB147alteredBB:                           ; preds = %originalBB147, %781
  %1024 = call i32* @__errno_location() #15, !dbg !655
  store i32 0, i32* %1024, align 4, !dbg !657
  %1025 = call i32 @getuid() #10, !dbg !658
  store i32 %1025, i32* @ruid, align 4, !dbg !659
  %1026 = load i32, i32* @ruid, align 4, !dbg !660
  %1027 = load i32, i32* %22, align 4, !dbg !662
  %1028 = icmp eq i32 %1026, %1027, !dbg !663
  br label %originalBB147

originalBB151alteredBB:                           ; preds = %originalBB151, %807
  %1029 = call i32* @__errno_location() #15, !dbg !667
  %1030 = load i32, i32* %1029, align 4, !dbg !667
  %1031 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.24, i64 0, i64 0)) #10, !dbg !667
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %1030, i8* %1031), !dbg !667
  br label %originalBB151

originalBB155alteredBB:                           ; preds = %originalBB155, %827
  br label %originalBB155

originalBB159alteredBB:                           ; preds = %originalBB159, %850
  %1032 = load i8, i8* @just_group_list, align 1, !dbg !674
  %1033 = trunc i8 %1032 to i1, !dbg !674
  br label %originalBB159

originalBB163alteredBB:                           ; preds = %originalBB163, %872
  %1034 = call i32* @__errno_location() #15, !dbg !678
  store i32 0, i32* %1034, align 4, !dbg !680
  %1035 = call i32 @getegid() #10, !dbg !681
  store i32 %1035, i32* @egid, align 4, !dbg !682
  %1036 = load i32, i32* @egid, align 4, !dbg !683
  %1037 = load i32, i32* %23, align 4, !dbg !685
  %1038 = icmp eq i32 %1036, %1037, !dbg !686
  br label %originalBB163

originalBB167alteredBB:                           ; preds = %originalBB167, %912
  %1039 = call i32* @__errno_location() #15, !dbg !702
  %1040 = load i32, i32* %1039, align 4, !dbg !702
  %1041 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.26, i64 0, i64 0)) #10, !dbg !702
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %1040, i8* %1041), !dbg !702
  br label %originalBB167
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @is_smack_enabled() #4 !dbg !814 {
  ret i1 false, !dbg !818
}

; Function Attrs: nounwind
declare dso_local i8* @bindtextdomain(i8*, i8*) #2

; Function Attrs: nounwind
declare dso_local i8* @textdomain(i8*) #2

; Function Attrs: nounwind
declare dso_local i32 @atexit(void ()*) #2

; Function Attrs: nounwind
declare dso_local i32 @getopt_long(i32, i8**, i8*, %struct.option*, i32*) #2

declare dso_local void @error(i32, i32, i8*, ...) #3

; Function Attrs: nounwind
declare dso_local i8* @getenv(i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @smack_new_label_from_self(i8**) #4 !dbg !819 {
  %2 = load i32, i32* @x.7
  %3 = load i32, i32* @y.8
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i8**, align 8
  store i8** %0, i8*** %10, align 8
  call void @llvm.dbg.declare(metadata i8*** %10, metadata !826, metadata !DIExpression()), !dbg !827
  %11 = load i32, i32* @x.7
  %12 = load i32, i32* @y.8
  %13 = sub i32 %11, 1
  %14 = mul i32 %11, %13
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = icmp slt i32 %12, 10
  %18 = or i1 %16, %17
  br i1 %18, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i64 -1, !dbg !828

originalBBalteredBB:                              ; preds = %originalBB, %1
  %19 = alloca i8**, align 8
  store i8** %0, i8*** %19, align 8
  call void @llvm.dbg.declare(metadata i8*** %19, metadata !829, metadata !DIExpression()), !dbg !827
  br label %originalBB
}

declare dso_local %struct.passwd* @getpwuid(i32) #3

; Function Attrs: nounwind readnone
declare dso_local i32* @__errno_location() #8

; Function Attrs: noinline nounwind optnone uwtable
define internal void @print_stuff(i8*) #4 !dbg !877 {
  %2 = load i32, i32* @x.9
  %3 = load i32, i32* @y.10
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i8*, align 8
  store i8* %0, i8** %10, align 8
  call void @llvm.dbg.declare(metadata i8** %10, metadata !878, metadata !DIExpression()), !dbg !879
  %11 = load i8, i8* @just_user, align 1, !dbg !880
  %12 = trunc i8 %11 to i1, !dbg !880
  %13 = load i32, i32* @x.9
  %14 = load i32, i32* @y.10
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %12, label %21, label %30, !dbg !882

21:                                               ; preds = %originalBBpart2
  %22 = load i8, i8* @use_real, align 1, !dbg !883
  %23 = trunc i8 %22 to i1, !dbg !883
  br i1 %23, label %24, label %26, !dbg !883

24:                                               ; preds = %21
  %25 = load i32, i32* @ruid, align 4, !dbg !884
  br label %28, !dbg !883

26:                                               ; preds = %21
  %27 = load i32, i32* @euid, align 4, !dbg !885
  br label %28, !dbg !883

28:                                               ; preds = %26, %24
  %29 = phi i32 [ %25, %24 ], [ %27, %26 ], !dbg !883
  call void @print_user(i32 %29), !dbg !886
  br label %183, !dbg !886

30:                                               ; preds = %originalBBpart2
  %31 = load i8, i8* @just_group, align 1, !dbg !887
  %32 = trunc i8 %31 to i1, !dbg !887
  br i1 %32, label %33, label %84, !dbg !889

33:                                               ; preds = %30
  %34 = load i8, i8* @use_real, align 1, !dbg !890
  %35 = trunc i8 %34 to i1, !dbg !890
  br i1 %35, label %36, label %38, !dbg !890

36:                                               ; preds = %33
  %37 = load i32, i32* @rgid, align 4, !dbg !891
  br label %56, !dbg !890

38:                                               ; preds = %33
  %39 = load i32, i32* @x.9
  %40 = load i32, i32* @y.10
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %38, %originalBB1alteredBB
  %47 = load i32, i32* @egid, align 4, !dbg !892
  %48 = load i32, i32* @x.9
  %49 = load i32, i32* @y.10
  %50 = sub i32 %48, 1
  %51 = mul i32 %48, %50
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %53, %54
  br i1 %55, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %56, !dbg !890

56:                                               ; preds = %originalBBpart24, %36
  %57 = phi i32 [ %37, %36 ], [ %47, %originalBBpart24 ], !dbg !890
  %58 = load i32, i32* @x.9
  %59 = load i32, i32* @y.10
  %60 = sub i32 %58, 1
  %61 = mul i32 %58, %60
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %59, 10
  %65 = or i1 %63, %64
  br i1 %65, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %56, %originalBB6alteredBB
  %66 = load i8, i8* @use_name, align 1, !dbg !893
  %67 = trunc i8 %66 to i1, !dbg !893
  %68 = call zeroext i1 @print_group(i32 %57, i1 zeroext %67), !dbg !894
  %69 = zext i1 %68 to i32, !dbg !894
  %70 = load i8, i8* @ok, align 1, !dbg !895
  %71 = trunc i8 %70 to i1, !dbg !895
  %72 = zext i1 %71 to i32, !dbg !895
  %73 = and i32 %72, %69, !dbg !895
  %74 = icmp ne i32 %73, 0, !dbg !895
  %75 = zext i1 %74 to i8, !dbg !895
  store i8 %75, i8* @ok, align 1, !dbg !895
  %76 = load i32, i32* @x.9
  %77 = load i32, i32* @y.10
  %78 = sub i32 %76, 1
  %79 = mul i32 %76, %78
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %77, 10
  %83 = or i1 %81, %82
  br i1 %83, label %originalBBpart217, label %originalBB6alteredBB

originalBBpart217:                                ; preds = %originalBB6
  br label %166, !dbg !896

84:                                               ; preds = %30
  %85 = load i8, i8* @just_group_list, align 1, !dbg !897
  %86 = trunc i8 %85 to i1, !dbg !897
  br i1 %86, label %87, label %107, !dbg !899

87:                                               ; preds = %84
  %88 = load i8*, i8** %10, align 8, !dbg !900
  %89 = load i32, i32* @ruid, align 4, !dbg !901
  %90 = load i32, i32* @rgid, align 4, !dbg !902
  %91 = load i32, i32* @egid, align 4, !dbg !903
  %92 = load i8, i8* @use_name, align 1, !dbg !904
  %93 = trunc i8 %92 to i1, !dbg !904
  %94 = load i8, i8* @opt_zero, align 1, !dbg !905
  %95 = trunc i8 %94 to i1, !dbg !905
  %96 = zext i1 %95 to i64, !dbg !905
  %97 = select i1 %95, i32 0, i32 32, !dbg !905
  %98 = trunc i32 %97 to i8, !dbg !905
  %99 = call zeroext i1 @print_group_list(i8* %88, i32 %89, i32 %90, i32 %91, i1 zeroext %93, i8 signext %98), !dbg !906
  %100 = zext i1 %99 to i32, !dbg !906
  %101 = load i8, i8* @ok, align 1, !dbg !907
  %102 = trunc i8 %101 to i1, !dbg !907
  %103 = zext i1 %102 to i32, !dbg !907
  %104 = and i32 %103, %100, !dbg !907
  %105 = icmp ne i32 %104, 0, !dbg !907
  %106 = zext i1 %105 to i8, !dbg !907
  store i8 %106, i8* @ok, align 1, !dbg !907
  br label %165, !dbg !908

107:                                              ; preds = %84
  %108 = load i8, i8* @just_context, align 1, !dbg !909
  %109 = trunc i8 %108 to i1, !dbg !909
  br i1 %109, label %110, label %130, !dbg !911

110:                                              ; preds = %107
  %111 = load i32, i32* @x.9
  %112 = load i32, i32* @y.10
  %113 = sub i32 %111, 1
  %114 = mul i32 %111, %113
  %115 = urem i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %112, 10
  %118 = or i1 %116, %117
  br i1 %118, label %originalBB19, label %originalBB19alteredBB

originalBB19:                                     ; preds = %110, %originalBB19alteredBB
  %119 = load i8*, i8** @context, align 8, !dbg !912
  %120 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !912
  %121 = call i32 @fputs_unlocked(i8* %119, %struct._IO_FILE* %120), !dbg !912
  %122 = load i32, i32* @x.9
  %123 = load i32, i32* @y.10
  %124 = sub i32 %122, 1
  %125 = mul i32 %122, %124
  %126 = urem i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = icmp slt i32 %123, 10
  %129 = or i1 %127, %128
  br i1 %129, label %originalBBpart221, label %originalBB19alteredBB

originalBBpart221:                                ; preds = %originalBB19
  br label %148, !dbg !912

130:                                              ; preds = %107
  %131 = load i32, i32* @x.9
  %132 = load i32, i32* @y.10
  %133 = sub i32 %131, 1
  %134 = mul i32 %131, %133
  %135 = urem i32 %134, 2
  %136 = icmp eq i32 %135, 0
  %137 = icmp slt i32 %132, 10
  %138 = or i1 %136, %137
  br i1 %138, label %originalBB23, label %originalBB23alteredBB

originalBB23:                                     ; preds = %130, %originalBB23alteredBB
  %139 = load i8*, i8** %10, align 8, !dbg !913
  call void @print_full_info(i8* %139), !dbg !914
  %140 = load i32, i32* @x.9
  %141 = load i32, i32* @y.10
  %142 = sub i32 %140, 1
  %143 = mul i32 %140, %142
  %144 = urem i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = icmp slt i32 %141, 10
  %147 = or i1 %145, %146
  br i1 %147, label %originalBBpart225, label %originalBB23alteredBB

originalBBpart225:                                ; preds = %originalBB23
  br label %148

148:                                              ; preds = %originalBBpart225, %originalBBpart221
  %149 = load i32, i32* @x.9
  %150 = load i32, i32* @y.10
  %151 = sub i32 %149, 1
  %152 = mul i32 %149, %151
  %153 = urem i32 %152, 2
  %154 = icmp eq i32 %153, 0
  %155 = icmp slt i32 %150, 10
  %156 = or i1 %154, %155
  br i1 %156, label %originalBB27, label %originalBB27alteredBB

originalBB27:                                     ; preds = %148, %originalBB27alteredBB
  %157 = load i32, i32* @x.9
  %158 = load i32, i32* @y.10
  %159 = sub i32 %157, 1
  %160 = mul i32 %157, %159
  %161 = urem i32 %160, 2
  %162 = icmp eq i32 %161, 0
  %163 = icmp slt i32 %158, 10
  %164 = or i1 %162, %163
  br i1 %164, label %originalBBpart229, label %originalBB27alteredBB

originalBBpart229:                                ; preds = %originalBB27
  br label %165

165:                                              ; preds = %originalBBpart229, %87
  br label %166

166:                                              ; preds = %165, %originalBBpart217
  %167 = load i32, i32* @x.9
  %168 = load i32, i32* @y.10
  %169 = sub i32 %167, 1
  %170 = mul i32 %167, %169
  %171 = urem i32 %170, 2
  %172 = icmp eq i32 %171, 0
  %173 = icmp slt i32 %168, 10
  %174 = or i1 %172, %173
  br i1 %174, label %originalBB31, label %originalBB31alteredBB

originalBB31:                                     ; preds = %166, %originalBB31alteredBB
  %175 = load i32, i32* @x.9
  %176 = load i32, i32* @y.10
  %177 = sub i32 %175, 1
  %178 = mul i32 %175, %177
  %179 = urem i32 %178, 2
  %180 = icmp eq i32 %179, 0
  %181 = icmp slt i32 %176, 10
  %182 = or i1 %180, %181
  br i1 %182, label %originalBBpart233, label %originalBB31alteredBB

originalBBpart233:                                ; preds = %originalBB31
  br label %183

183:                                              ; preds = %originalBBpart233, %28
  %184 = load i8, i8* @opt_zero, align 1, !dbg !915
  %185 = trunc i8 %184 to i1, !dbg !915
  br i1 %185, label %186, label %211, !dbg !917

186:                                              ; preds = %183
  %187 = load i32, i32* @x.9
  %188 = load i32, i32* @y.10
  %189 = sub i32 %187, 1
  %190 = mul i32 %187, %189
  %191 = urem i32 %190, 2
  %192 = icmp eq i32 %191, 0
  %193 = icmp slt i32 %188, 10
  %194 = or i1 %192, %193
  br i1 %194, label %originalBB35, label %originalBB35alteredBB

originalBB35:                                     ; preds = %186, %originalBB35alteredBB
  %195 = load i8, i8* @just_group_list, align 1, !dbg !918
  %196 = trunc i8 %195 to i1, !dbg !918
  %197 = load i32, i32* @x.9
  %198 = load i32, i32* @y.10
  %199 = sub i32 %197, 1
  %200 = mul i32 %197, %199
  %201 = urem i32 %200, 2
  %202 = icmp eq i32 %201, 0
  %203 = icmp slt i32 %198, 10
  %204 = or i1 %202, %203
  br i1 %204, label %originalBBpart237, label %originalBB35alteredBB

originalBBpart237:                                ; preds = %originalBB35
  br i1 %196, label %205, label %211, !dbg !919

205:                                              ; preds = %originalBBpart237
  %206 = load i8, i8* @multiple_users, align 1, !dbg !920
  %207 = trunc i8 %206 to i1, !dbg !920
  br i1 %207, label %208, label %211, !dbg !921

208:                                              ; preds = %205
  %209 = call i32 @putchar_unlocked(i32 0), !dbg !922
  %210 = call i32 @putchar_unlocked(i32 0), !dbg !924
  br label %233, !dbg !925

211:                                              ; preds = %205, %originalBBpart237, %183
  %212 = load i32, i32* @x.9
  %213 = load i32, i32* @y.10
  %214 = sub i32 %212, 1
  %215 = mul i32 %212, %214
  %216 = urem i32 %215, 2
  %217 = icmp eq i32 %216, 0
  %218 = icmp slt i32 %213, 10
  %219 = or i1 %217, %218
  br i1 %219, label %originalBB39, label %originalBB39alteredBB

originalBB39:                                     ; preds = %211, %originalBB39alteredBB
  %220 = load i8, i8* @opt_zero, align 1, !dbg !926
  %221 = trunc i8 %220 to i1, !dbg !926
  %222 = zext i1 %221 to i64, !dbg !926
  %223 = select i1 %221, i32 0, i32 10, !dbg !926
  %224 = call i32 @putchar_unlocked(i32 %223), !dbg !926
  %225 = load i32, i32* @x.9
  %226 = load i32, i32* @y.10
  %227 = sub i32 %225, 1
  %228 = mul i32 %225, %227
  %229 = urem i32 %228, 2
  %230 = icmp eq i32 %229, 0
  %231 = icmp slt i32 %226, 10
  %232 = or i1 %230, %231
  br i1 %232, label %originalBBpart241, label %originalBB39alteredBB

originalBBpart241:                                ; preds = %originalBB39
  br label %233

233:                                              ; preds = %originalBBpart241, %208
  %234 = load i32, i32* @x.9
  %235 = load i32, i32* @y.10
  %236 = sub i32 %234, 1
  %237 = mul i32 %234, %236
  %238 = urem i32 %237, 2
  %239 = icmp eq i32 %238, 0
  %240 = icmp slt i32 %235, 10
  %241 = or i1 %239, %240
  br i1 %241, label %originalBB43, label %originalBB43alteredBB

originalBB43:                                     ; preds = %233, %originalBB43alteredBB
  %242 = load i32, i32* @x.9
  %243 = load i32, i32* @y.10
  %244 = sub i32 %242, 1
  %245 = mul i32 %242, %244
  %246 = urem i32 %245, 2
  %247 = icmp eq i32 %246, 0
  %248 = icmp slt i32 %243, 10
  %249 = or i1 %247, %248
  br i1 %249, label %originalBBpart245, label %originalBB43alteredBB

originalBBpart245:                                ; preds = %originalBB43
  ret void, !dbg !928

originalBBalteredBB:                              ; preds = %originalBB, %1
  %250 = alloca i8*, align 8
  store i8* %0, i8** %250, align 8
  call void @llvm.dbg.declare(metadata i8** %250, metadata !929, metadata !DIExpression()), !dbg !879
  %251 = load i8, i8* @just_user, align 1, !dbg !880
  %252 = trunc i8 %251 to i1, !dbg !880
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %38
  %253 = load i32, i32* @egid, align 4, !dbg !892
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %56
  %254 = load i8, i8* @use_name, align 1, !dbg !893
  %255 = trunc i8 %254 to i1, !dbg !893
  %256 = call zeroext i1 @print_group(i32 %57, i1 zeroext %255), !dbg !894
  %257 = zext i1 %256 to i32, !dbg !894
  %258 = load i8, i8* @ok, align 1, !dbg !895
  %259 = trunc i8 %258 to i1, !dbg !895
  %260 = zext i1 %259 to i32, !dbg !895
  %_ = sub i32 0, %260
  %gen = add i32 %_, %257
  %_7 = sub i32 0, %260
  %gen8 = add i32 %_7, %257
  %_9 = shl i32 %260, %257
  %_10 = sub i32 0, %260
  %gen11 = add i32 %_10, %257
  %_12 = sub i32 %260, %257
  %gen13 = mul i32 %_12, %257
  %_14 = sub i32 0, %260
  %gen15 = add i32 %_14, %257
  %261 = and i32 %260, %257, !dbg !895
  %262 = icmp ne i32 %261, 0, !dbg !895
  %263 = zext i1 %262 to i8, !dbg !895
  store i8 %263, i8* @ok, align 1, !dbg !895
  br label %originalBB6

originalBB19alteredBB:                            ; preds = %originalBB19, %110
  %264 = load i8*, i8** @context, align 8, !dbg !912
  %265 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !912
  %266 = call i32 @fputs_unlocked(i8* %264, %struct._IO_FILE* %265), !dbg !912
  br label %originalBB19

originalBB23alteredBB:                            ; preds = %originalBB23, %130
  %267 = load i8*, i8** %10, align 8, !dbg !913
  call void @print_full_info(i8* %267), !dbg !914
  br label %originalBB23

originalBB27alteredBB:                            ; preds = %originalBB27, %148
  br label %originalBB27

originalBB31alteredBB:                            ; preds = %originalBB31, %166
  br label %originalBB31

originalBB35alteredBB:                            ; preds = %originalBB35, %186
  %268 = load i8, i8* @just_group_list, align 1, !dbg !918
  %269 = trunc i8 %268 to i1, !dbg !918
  br label %originalBB35

originalBB39alteredBB:                            ; preds = %originalBB39, %211
  %270 = load i8, i8* @opt_zero, align 1, !dbg !926
  %271 = trunc i8 %270 to i1, !dbg !926
  %272 = zext i1 %271 to i64, !dbg !926
  %273 = select i1 %271, i32 0, i32 10, !dbg !926
  %274 = call i32 @putchar_unlocked(i32 %273), !dbg !926
  br label %originalBB39

originalBB43alteredBB:                            ; preds = %originalBB43, %233
  br label %originalBB43
}

; Function Attrs: nounwind
declare dso_local void @free(i8*) #2

; Function Attrs: nounwind
declare dso_local i32 @geteuid() #2

; Function Attrs: nounwind
declare dso_local i32 @getuid() #2

; Function Attrs: nounwind
declare dso_local i32 @getegid() #2

; Function Attrs: nounwind
declare dso_local i32 @getgid() #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @print_user(i32) #4 !dbg !977 {
  %2 = load i32, i32* @x.11
  %3 = load i32, i32* @y.12
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i32, align 4
  %11 = alloca %struct.passwd*, align 8
  %12 = alloca i8*, align 8
  store i32 %0, i32* %10, align 4
  call void @llvm.dbg.declare(metadata i32* %10, metadata !980, metadata !DIExpression()), !dbg !981
  call void @llvm.dbg.declare(metadata %struct.passwd** %11, metadata !982, metadata !DIExpression()), !dbg !983
  store %struct.passwd* null, %struct.passwd** %11, align 8, !dbg !983
  %13 = load i8, i8* @use_name, align 1, !dbg !984
  %14 = trunc i8 %13 to i1, !dbg !984
  %15 = load i32, i32* @x.11
  %16 = load i32, i32* @y.12
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %14, label %23, label %54, !dbg !986

23:                                               ; preds = %originalBBpart2
  %24 = load i32, i32* @x.11
  %25 = load i32, i32* @y.12
  %26 = sub i32 %24, 1
  %27 = mul i32 %24, %26
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %29, %30
  br i1 %31, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %23, %originalBB1alteredBB
  %32 = load i32, i32* %10, align 4, !dbg !987
  %33 = call %struct.passwd* @getpwuid(i32 %32), !dbg !989
  store %struct.passwd* %33, %struct.passwd** %11, align 8, !dbg !990
  %34 = load %struct.passwd*, %struct.passwd** %11, align 8, !dbg !991
  %35 = icmp eq %struct.passwd* %34, null, !dbg !993
  %36 = load i32, i32* @x.11
  %37 = load i32, i32* @y.12
  %38 = sub i32 %36, 1
  %39 = mul i32 %36, %38
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %37, 10
  %43 = or i1 %41, %42
  br i1 %43, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %35, label %44, label %53, !dbg !994

44:                                               ; preds = %originalBBpart24
  %45 = call i8* @gettext(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.51, i64 0, i64 0)) #10, !dbg !995
  %46 = call i8* @uidtostr_ptr(i32* %10), !dbg !997
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %45, i8* %46), !dbg !998
  %47 = load i8, i8* @ok, align 1, !dbg !999
  %48 = trunc i8 %47 to i1, !dbg !999
  %49 = zext i1 %48 to i32, !dbg !999
  %50 = and i32 %49, 0, !dbg !999
  %51 = icmp ne i32 %50, 0, !dbg !999
  %52 = zext i1 %51 to i8, !dbg !999
  store i8 %52, i8* @ok, align 1, !dbg !999
  br label %53, !dbg !1000

53:                                               ; preds = %44, %originalBBpart24
  br label %54, !dbg !1001

54:                                               ; preds = %53, %originalBBpart2
  call void @llvm.dbg.declare(metadata i8** %12, metadata !1002, metadata !DIExpression()), !dbg !1003
  %55 = load %struct.passwd*, %struct.passwd** %11, align 8, !dbg !1004
  %56 = icmp ne %struct.passwd* %55, null, !dbg !1004
  br i1 %56, label %57, label %77, !dbg !1004

57:                                               ; preds = %54
  %58 = load i32, i32* @x.11
  %59 = load i32, i32* @y.12
  %60 = sub i32 %58, 1
  %61 = mul i32 %58, %60
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %59, 10
  %65 = or i1 %63, %64
  br i1 %65, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %57, %originalBB6alteredBB
  %66 = load %struct.passwd*, %struct.passwd** %11, align 8, !dbg !1005
  %67 = getelementptr inbounds %struct.passwd, %struct.passwd* %66, i32 0, i32 0, !dbg !1006
  %68 = load i8*, i8** %67, align 8, !dbg !1006
  %69 = load i32, i32* @x.11
  %70 = load i32, i32* @y.12
  %71 = sub i32 %69, 1
  %72 = mul i32 %69, %71
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %74, %75
  br i1 %76, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %79, !dbg !1004

77:                                               ; preds = %54
  %78 = call i8* @uidtostr_ptr(i32* %10), !dbg !1007
  br label %79, !dbg !1004

79:                                               ; preds = %77, %originalBBpart28
  %80 = phi i8* [ %68, %originalBBpart28 ], [ %78, %77 ], !dbg !1004
  %81 = load i32, i32* @x.11
  %82 = load i32, i32* @y.12
  %83 = sub i32 %81, 1
  %84 = mul i32 %81, %83
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %82, 10
  %88 = or i1 %86, %87
  br i1 %88, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %79, %originalBB10alteredBB
  store i8* %80, i8** %12, align 8, !dbg !1003
  %89 = load i8*, i8** %12, align 8, !dbg !1008
  %90 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1008
  %91 = call i32 @fputs_unlocked(i8* %89, %struct._IO_FILE* %90), !dbg !1008
  %92 = load i32, i32* @x.11
  %93 = load i32, i32* @y.12
  %94 = sub i32 %92, 1
  %95 = mul i32 %92, %94
  %96 = urem i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %93, 10
  %99 = or i1 %97, %98
  br i1 %99, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  ret void, !dbg !1009

originalBBalteredBB:                              ; preds = %originalBB, %1
  %100 = alloca i32, align 4
  %101 = alloca %struct.passwd*, align 8
  %102 = alloca i8*, align 8
  store i32 %0, i32* %100, align 4
  call void @llvm.dbg.declare(metadata i32* %100, metadata !1010, metadata !DIExpression()), !dbg !981
  call void @llvm.dbg.declare(metadata %struct.passwd** %101, metadata !1058, metadata !DIExpression()), !dbg !983
  store %struct.passwd* null, %struct.passwd** %101, align 8, !dbg !983
  %103 = load i8, i8* @use_name, align 1, !dbg !984
  %104 = trunc i8 %103 to i1, !dbg !984
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %23
  %105 = load i32, i32* %10, align 4, !dbg !987
  %106 = call %struct.passwd* @getpwuid(i32 %105), !dbg !989
  store %struct.passwd* %106, %struct.passwd** %11, align 8, !dbg !990
  %107 = load %struct.passwd*, %struct.passwd** %11, align 8, !dbg !991
  %108 = icmp eq %struct.passwd* %107, null, !dbg !993
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %57
  %109 = load %struct.passwd*, %struct.passwd** %11, align 8, !dbg !1005
  %110 = getelementptr inbounds %struct.passwd, %struct.passwd* %109, i32 0, i32 0, !dbg !1006
  %111 = load i8*, i8** %110, align 8, !dbg !1006
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %79
  store i8* %80, i8** %12, align 8, !dbg !1003
  %112 = load i8*, i8** %12, align 8, !dbg !1008
  %113 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1008
  %114 = call i32 @fputs_unlocked(i8* %112, %struct._IO_FILE* %113), !dbg !1008
  br label %originalBB10
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @print_full_info(i8*) #4 !dbg !1069 {
  %2 = alloca i8*, align 8
  %3 = alloca %struct.passwd*, align 8
  %4 = alloca %struct.group*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !1070, metadata !DIExpression()), !dbg !1071
  call void @llvm.dbg.declare(metadata %struct.passwd** %3, metadata !1072, metadata !DIExpression()), !dbg !1073
  call void @llvm.dbg.declare(metadata %struct.group** %4, metadata !1074, metadata !DIExpression()), !dbg !1083
  %9 = call i8* @gettext(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.52, i64 0, i64 0)) #10, !dbg !1084
  %10 = call i8* @uidtostr_ptr(i32* @ruid), !dbg !1085
  %11 = call i32 (i8*, ...) @printf(i8* %9, i8* %10), !dbg !1086
  %12 = load i32, i32* @ruid, align 4, !dbg !1087
  %13 = call %struct.passwd* @getpwuid(i32 %12), !dbg !1088
  store %struct.passwd* %13, %struct.passwd** %3, align 8, !dbg !1089
  %14 = load %struct.passwd*, %struct.passwd** %3, align 8, !dbg !1090
  %15 = icmp ne %struct.passwd* %14, null, !dbg !1090
  br i1 %15, label %16, label %21, !dbg !1092

16:                                               ; preds = %1
  %17 = load %struct.passwd*, %struct.passwd** %3, align 8, !dbg !1093
  %18 = getelementptr inbounds %struct.passwd, %struct.passwd* %17, i32 0, i32 0, !dbg !1094
  %19 = load i8*, i8** %18, align 8, !dbg !1094
  %20 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.53, i64 0, i64 0), i8* %19), !dbg !1095
  br label %21, !dbg !1095

21:                                               ; preds = %16, %1
  %22 = call i8* @gettext(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.54, i64 0, i64 0)) #10, !dbg !1096
  %23 = call i8* @gidtostr_ptr(i32* @rgid), !dbg !1097
  %24 = call i32 (i8*, ...) @printf(i8* %22, i8* %23), !dbg !1098
  %25 = load i32, i32* @rgid, align 4, !dbg !1099
  %26 = call %struct.group* @getgrgid(i32 %25), !dbg !1100
  store %struct.group* %26, %struct.group** %4, align 8, !dbg !1101
  %27 = load %struct.group*, %struct.group** %4, align 8, !dbg !1102
  %28 = icmp ne %struct.group* %27, null, !dbg !1102
  br i1 %28, label %29, label %34, !dbg !1104

29:                                               ; preds = %21
  %30 = load %struct.group*, %struct.group** %4, align 8, !dbg !1105
  %31 = getelementptr inbounds %struct.group, %struct.group* %30, i32 0, i32 0, !dbg !1106
  %32 = load i8*, i8** %31, align 8, !dbg !1106
  %33 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.53, i64 0, i64 0), i8* %32), !dbg !1107
  br label %34, !dbg !1107

34:                                               ; preds = %29, %21
  %35 = load i32, i32* @euid, align 4, !dbg !1108
  %36 = load i32, i32* @ruid, align 4, !dbg !1110
  %37 = icmp ne i32 %35, %36, !dbg !1111
  br i1 %37, label %38, label %84, !dbg !1112

38:                                               ; preds = %34
  %39 = call i8* @gettext(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.55, i64 0, i64 0)) #10, !dbg !1113
  %40 = call i8* @uidtostr_ptr(i32* @euid), !dbg !1115
  %41 = call i32 (i8*, ...) @printf(i8* %39, i8* %40), !dbg !1116
  %42 = load i32, i32* @euid, align 4, !dbg !1117
  %43 = call %struct.passwd* @getpwuid(i32 %42), !dbg !1118
  store %struct.passwd* %43, %struct.passwd** %3, align 8, !dbg !1119
  %44 = load %struct.passwd*, %struct.passwd** %3, align 8, !dbg !1120
  %45 = icmp ne %struct.passwd* %44, null, !dbg !1120
  br i1 %45, label %46, label %67, !dbg !1122

46:                                               ; preds = %38
  %47 = load i32, i32* @x.13
  %48 = load i32, i32* @y.14
  %49 = sub i32 %47, 1
  %50 = mul i32 %47, %49
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %48, 10
  %54 = or i1 %52, %53
  br i1 %54, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %46, %originalBBalteredBB
  %55 = load %struct.passwd*, %struct.passwd** %3, align 8, !dbg !1123
  %56 = getelementptr inbounds %struct.passwd, %struct.passwd* %55, i32 0, i32 0, !dbg !1124
  %57 = load i8*, i8** %56, align 8, !dbg !1124
  %58 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.53, i64 0, i64 0), i8* %57), !dbg !1125
  %59 = load i32, i32* @x.13
  %60 = load i32, i32* @y.14
  %61 = sub i32 %59, 1
  %62 = mul i32 %59, %61
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %60, 10
  %66 = or i1 %64, %65
  br i1 %66, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %67, !dbg !1125

67:                                               ; preds = %originalBBpart2, %38
  %68 = load i32, i32* @x.13
  %69 = load i32, i32* @y.14
  %70 = sub i32 %68, 1
  %71 = mul i32 %68, %70
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %69, 10
  %75 = or i1 %73, %74
  br i1 %75, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %67, %originalBB1alteredBB
  %76 = load i32, i32* @x.13
  %77 = load i32, i32* @y.14
  %78 = sub i32 %76, 1
  %79 = mul i32 %76, %78
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %77, 10
  %83 = or i1 %81, %82
  br i1 %83, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %84, !dbg !1126

84:                                               ; preds = %originalBBpart24, %34
  %85 = load i32, i32* @x.13
  %86 = load i32, i32* @y.14
  %87 = sub i32 %85, 1
  %88 = mul i32 %85, %87
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %86, 10
  %92 = or i1 %90, %91
  br i1 %92, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %84, %originalBB6alteredBB
  %93 = load i32, i32* @egid, align 4, !dbg !1127
  %94 = load i32, i32* @rgid, align 4, !dbg !1129
  %95 = icmp ne i32 %93, %94, !dbg !1130
  %96 = load i32, i32* @x.13
  %97 = load i32, i32* @y.14
  %98 = sub i32 %96, 1
  %99 = mul i32 %96, %98
  %100 = urem i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = icmp slt i32 %97, 10
  %103 = or i1 %101, %102
  br i1 %103, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %95, label %104, label %134, !dbg !1131

104:                                              ; preds = %originalBBpart28
  %105 = call i8* @gettext(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.56, i64 0, i64 0)) #10, !dbg !1132
  %106 = call i8* @gidtostr_ptr(i32* @egid), !dbg !1134
  %107 = call i32 (i8*, ...) @printf(i8* %105, i8* %106), !dbg !1135
  %108 = load i32, i32* @egid, align 4, !dbg !1136
  %109 = call %struct.group* @getgrgid(i32 %108), !dbg !1137
  store %struct.group* %109, %struct.group** %4, align 8, !dbg !1138
  %110 = load %struct.group*, %struct.group** %4, align 8, !dbg !1139
  %111 = icmp ne %struct.group* %110, null, !dbg !1139
  br i1 %111, label %112, label %117, !dbg !1141

112:                                              ; preds = %104
  %113 = load %struct.group*, %struct.group** %4, align 8, !dbg !1142
  %114 = getelementptr inbounds %struct.group, %struct.group* %113, i32 0, i32 0, !dbg !1143
  %115 = load i8*, i8** %114, align 8, !dbg !1143
  %116 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.53, i64 0, i64 0), i8* %115), !dbg !1144
  br label %117, !dbg !1144

117:                                              ; preds = %112, %104
  %118 = load i32, i32* @x.13
  %119 = load i32, i32* @y.14
  %120 = sub i32 %118, 1
  %121 = mul i32 %118, %120
  %122 = urem i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = icmp slt i32 %119, 10
  %125 = or i1 %123, %124
  br i1 %125, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %117, %originalBB10alteredBB
  %126 = load i32, i32* @x.13
  %127 = load i32, i32* @y.14
  %128 = sub i32 %126, 1
  %129 = mul i32 %126, %128
  %130 = urem i32 %129, 2
  %131 = icmp eq i32 %130, 0
  %132 = icmp slt i32 %127, 10
  %133 = or i1 %131, %132
  br i1 %133, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %134, !dbg !1145

134:                                              ; preds = %originalBBpart212, %originalBBpart28
  call void @llvm.dbg.declare(metadata i32** %5, metadata !1146, metadata !DIExpression()), !dbg !1148
  call void @llvm.dbg.declare(metadata i32* %6, metadata !1149, metadata !DIExpression()), !dbg !1150
  %135 = load i8*, i8** %2, align 8, !dbg !1151
  %136 = icmp ne i8* %135, null, !dbg !1151
  br i1 %136, label %137, label %179, !dbg !1153

137:                                              ; preds = %134
  %138 = load i32, i32* @x.13
  %139 = load i32, i32* @y.14
  %140 = sub i32 %138, 1
  %141 = mul i32 %138, %140
  %142 = urem i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = icmp slt i32 %139, 10
  %145 = or i1 %143, %144
  br i1 %145, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %137, %originalBB14alteredBB
  %146 = load %struct.passwd*, %struct.passwd** %3, align 8, !dbg !1154
  %147 = icmp ne %struct.passwd* %146, null, !dbg !1154
  %148 = load i32, i32* @x.13
  %149 = load i32, i32* @y.14
  %150 = sub i32 %148, 1
  %151 = mul i32 %148, %150
  %152 = urem i32 %151, 2
  %153 = icmp eq i32 %152, 0
  %154 = icmp slt i32 %149, 10
  %155 = or i1 %153, %154
  br i1 %155, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %147, label %156, label %176, !dbg !1154

156:                                              ; preds = %originalBBpart216
  %157 = load i32, i32* @x.13
  %158 = load i32, i32* @y.14
  %159 = sub i32 %157, 1
  %160 = mul i32 %157, %159
  %161 = urem i32 %160, 2
  %162 = icmp eq i32 %161, 0
  %163 = icmp slt i32 %158, 10
  %164 = or i1 %162, %163
  br i1 %164, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %156, %originalBB18alteredBB
  %165 = load %struct.passwd*, %struct.passwd** %3, align 8, !dbg !1155
  %166 = getelementptr inbounds %struct.passwd, %struct.passwd* %165, i32 0, i32 3, !dbg !1156
  %167 = load i32, i32* %166, align 4, !dbg !1156
  %168 = load i32, i32* @x.13
  %169 = load i32, i32* @y.14
  %170 = sub i32 %168, 1
  %171 = mul i32 %168, %170
  %172 = urem i32 %171, 2
  %173 = icmp eq i32 %172, 0
  %174 = icmp slt i32 %169, 10
  %175 = or i1 %173, %174
  br i1 %175, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %177, !dbg !1154

176:                                              ; preds = %originalBBpart216
  br label %177, !dbg !1154

177:                                              ; preds = %176, %originalBBpart220
  %178 = phi i32 [ %167, %originalBBpart220 ], [ -1, %176 ], !dbg !1154
  store i32 %178, i32* %6, align 4, !dbg !1157
  br label %181, !dbg !1158

179:                                              ; preds = %134
  %180 = load i32, i32* @egid, align 4, !dbg !1159
  store i32 %180, i32* %6, align 4, !dbg !1160
  br label %181

181:                                              ; preds = %179, %177
  call void @llvm.dbg.declare(metadata i32* %7, metadata !1161, metadata !DIExpression()), !dbg !1162
  %182 = load i32, i32* @x.13
  %183 = load i32, i32* @y.14
  %184 = sub i32 %182, 1
  %185 = mul i32 %182, %184
  %186 = urem i32 %185, 2
  %187 = icmp eq i32 %186, 0
  %188 = icmp slt i32 %183, 10
  %189 = or i1 %187, %188
  br i1 %189, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %181, %originalBB22alteredBB
  %190 = load i8*, i8** %2, align 8, !dbg !1163
  %191 = load i32, i32* %6, align 4, !dbg !1164
  %192 = call i32 @xgetgroups(i8* %190, i32 %191, i32** %5), !dbg !1165
  store i32 %192, i32* %7, align 4, !dbg !1162
  %193 = load i32, i32* %7, align 4, !dbg !1166
  %194 = icmp slt i32 %193, 0, !dbg !1168
  %195 = load i32, i32* @x.13
  %196 = load i32, i32* @y.14
  %197 = sub i32 %195, 1
  %198 = mul i32 %195, %197
  %199 = urem i32 %198, 2
  %200 = icmp eq i32 %199, 0
  %201 = icmp slt i32 %196, 10
  %202 = or i1 %200, %201
  br i1 %202, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br i1 %194, label %203, label %223, !dbg !1169

203:                                              ; preds = %originalBBpart224
  %204 = load i8*, i8** %2, align 8, !dbg !1170
  %205 = icmp ne i8* %204, null, !dbg !1170
  br i1 %205, label %206, label %212, !dbg !1173

206:                                              ; preds = %203
  %207 = call i32* @__errno_location() #15, !dbg !1174
  %208 = load i32, i32* %207, align 4, !dbg !1174
  %209 = call i8* @gettext(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.57, i64 0, i64 0)) #10, !dbg !1175
  %210 = load i8*, i8** %2, align 8, !dbg !1176
  %211 = call i8* @quote(i8* %210), !dbg !1177
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %208, i8* %209, i8* %211), !dbg !1178
  br label %216, !dbg !1178

212:                                              ; preds = %203
  %213 = call i32* @__errno_location() #15, !dbg !1179
  %214 = load i32, i32* %213, align 4, !dbg !1179
  %215 = call i8* @gettext(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.58, i64 0, i64 0)) #10, !dbg !1180
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %214, i8* %215), !dbg !1181
  br label %216

216:                                              ; preds = %212, %206
  %217 = load i8, i8* @ok, align 1, !dbg !1182
  %218 = trunc i8 %217 to i1, !dbg !1182
  %219 = zext i1 %218 to i32, !dbg !1182
  %220 = and i32 %219, 0, !dbg !1182
  %221 = icmp ne i32 %220, 0, !dbg !1182
  %222 = zext i1 %221 to i8, !dbg !1182
  store i8 %222, i8* @ok, align 1, !dbg !1182
  br label %322, !dbg !1183

223:                                              ; preds = %originalBBpart224
  %224 = load i32, i32* %7, align 4, !dbg !1184
  %225 = icmp sgt i32 %224, 0, !dbg !1186
  br i1 %225, label %226, label %230, !dbg !1187

226:                                              ; preds = %223
  %227 = call i8* @gettext(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.59, i64 0, i64 0)) #10, !dbg !1188
  %228 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1188
  %229 = call i32 @fputs_unlocked(i8* %227, %struct._IO_FILE* %228), !dbg !1188
  br label %230, !dbg !1188

230:                                              ; preds = %226, %223
  call void @llvm.dbg.declare(metadata i32* %8, metadata !1189, metadata !DIExpression()), !dbg !1191
  store i32 0, i32* %8, align 4, !dbg !1191
  br label %231, !dbg !1192

231:                                              ; preds = %294, %230
  %232 = load i32, i32* %8, align 4, !dbg !1193
  %233 = load i32, i32* %7, align 4, !dbg !1195
  %234 = icmp slt i32 %232, %233, !dbg !1196
  br i1 %234, label %235, label %297, !dbg !1197

235:                                              ; preds = %231
  %236 = load i32, i32* %8, align 4, !dbg !1198
  %237 = icmp sgt i32 %236, 0, !dbg !1201
  br i1 %237, label %238, label %240, !dbg !1202

238:                                              ; preds = %235
  %239 = call i32 @putchar_unlocked(i32 44), !dbg !1203
  br label %240, !dbg !1203

240:                                              ; preds = %238, %235
  %241 = load i32, i32* @x.13
  %242 = load i32, i32* @y.14
  %243 = sub i32 %241, 1
  %244 = mul i32 %241, %243
  %245 = urem i32 %244, 2
  %246 = icmp eq i32 %245, 0
  %247 = icmp slt i32 %242, 10
  %248 = or i1 %246, %247
  br i1 %248, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %240, %originalBB26alteredBB
  %249 = load i32*, i32** %5, align 8, !dbg !1204
  %250 = load i32, i32* %8, align 4, !dbg !1204
  %251 = sext i32 %250 to i64, !dbg !1204
  %252 = getelementptr inbounds i32, i32* %249, i64 %251, !dbg !1204
  %253 = call i8* @gidtostr_ptr(i32* %252), !dbg !1204
  %254 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1204
  %255 = call i32 @fputs_unlocked(i8* %253, %struct._IO_FILE* %254), !dbg !1204
  %256 = load i32*, i32** %5, align 8, !dbg !1205
  %257 = load i32, i32* %8, align 4, !dbg !1206
  %258 = sext i32 %257 to i64, !dbg !1205
  %259 = getelementptr inbounds i32, i32* %256, i64 %258, !dbg !1205
  %260 = load i32, i32* %259, align 4, !dbg !1205
  %261 = call %struct.group* @getgrgid(i32 %260), !dbg !1207
  store %struct.group* %261, %struct.group** %4, align 8, !dbg !1208
  %262 = load %struct.group*, %struct.group** %4, align 8, !dbg !1209
  %263 = icmp ne %struct.group* %262, null, !dbg !1209
  %264 = load i32, i32* @x.13
  %265 = load i32, i32* @y.14
  %266 = sub i32 %264, 1
  %267 = mul i32 %264, %266
  %268 = urem i32 %267, 2
  %269 = icmp eq i32 %268, 0
  %270 = icmp slt i32 %265, 10
  %271 = or i1 %269, %270
  br i1 %271, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br i1 %263, label %272, label %293, !dbg !1211

272:                                              ; preds = %originalBBpart228
  %273 = load i32, i32* @x.13
  %274 = load i32, i32* @y.14
  %275 = sub i32 %273, 1
  %276 = mul i32 %273, %275
  %277 = urem i32 %276, 2
  %278 = icmp eq i32 %277, 0
  %279 = icmp slt i32 %274, 10
  %280 = or i1 %278, %279
  br i1 %280, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %272, %originalBB30alteredBB
  %281 = load %struct.group*, %struct.group** %4, align 8, !dbg !1212
  %282 = getelementptr inbounds %struct.group, %struct.group* %281, i32 0, i32 0, !dbg !1213
  %283 = load i8*, i8** %282, align 8, !dbg !1213
  %284 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.53, i64 0, i64 0), i8* %283), !dbg !1214
  %285 = load i32, i32* @x.13
  %286 = load i32, i32* @y.14
  %287 = sub i32 %285, 1
  %288 = mul i32 %285, %287
  %289 = urem i32 %288, 2
  %290 = icmp eq i32 %289, 0
  %291 = icmp slt i32 %286, 10
  %292 = or i1 %290, %291
  br i1 %292, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br label %293, !dbg !1214

293:                                              ; preds = %originalBBpart232, %originalBBpart228
  br label %294, !dbg !1215

294:                                              ; preds = %293
  %295 = load i32, i32* %8, align 4, !dbg !1216
  %296 = add nsw i32 %295, 1, !dbg !1216
  store i32 %296, i32* %8, align 4, !dbg !1216
  br label %231, !dbg !1217, !llvm.loop !1218

297:                                              ; preds = %231
  %298 = load i32*, i32** %5, align 8, !dbg !1220
  %299 = bitcast i32* %298 to i8*, !dbg !1220
  call void @free(i8* %299) #10, !dbg !1221
  %300 = load i8*, i8** @context, align 8, !dbg !1222
  %301 = icmp ne i8* %300, null, !dbg !1222
  br i1 %301, label %302, label %322, !dbg !1224

302:                                              ; preds = %297
  %303 = load i32, i32* @x.13
  %304 = load i32, i32* @y.14
  %305 = sub i32 %303, 1
  %306 = mul i32 %303, %305
  %307 = urem i32 %306, 2
  %308 = icmp eq i32 %307, 0
  %309 = icmp slt i32 %304, 10
  %310 = or i1 %308, %309
  br i1 %310, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %302, %originalBB34alteredBB
  %311 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.60, i64 0, i64 0)) #10, !dbg !1225
  %312 = load i8*, i8** @context, align 8, !dbg !1226
  %313 = call i32 (i8*, ...) @printf(i8* %311, i8* %312), !dbg !1227
  %314 = load i32, i32* @x.13
  %315 = load i32, i32* @y.14
  %316 = sub i32 %314, 1
  %317 = mul i32 %314, %316
  %318 = urem i32 %317, 2
  %319 = icmp eq i32 %318, 0
  %320 = icmp slt i32 %315, 10
  %321 = or i1 %319, %320
  br i1 %321, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  br label %322, !dbg !1227

322:                                              ; preds = %originalBBpart236, %297, %216
  ret void, !dbg !1228

originalBBalteredBB:                              ; preds = %originalBB, %46
  %323 = load %struct.passwd*, %struct.passwd** %3, align 8, !dbg !1123
  %324 = getelementptr inbounds %struct.passwd, %struct.passwd* %323, i32 0, i32 0, !dbg !1124
  %325 = load i8*, i8** %324, align 8, !dbg !1124
  %326 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.53, i64 0, i64 0), i8* %325), !dbg !1125
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %67
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %84
  %327 = load i32, i32* @egid, align 4, !dbg !1127
  %328 = load i32, i32* @rgid, align 4, !dbg !1129
  %329 = icmp ne i32 %327, %328, !dbg !1130
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %117
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %137
  %330 = load %struct.passwd*, %struct.passwd** %3, align 8, !dbg !1154
  %331 = icmp ne %struct.passwd* %330, null, !dbg !1154
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %156
  %332 = load %struct.passwd*, %struct.passwd** %3, align 8, !dbg !1155
  %333 = getelementptr inbounds %struct.passwd, %struct.passwd* %332, i32 0, i32 3, !dbg !1156
  %334 = load i32, i32* %333, align 4, !dbg !1156
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %181
  %335 = load i8*, i8** %2, align 8, !dbg !1163
  %336 = load i32, i32* %6, align 4, !dbg !1164
  %337 = call i32 @xgetgroups(i8* %335, i32 %336, i32** %5), !dbg !1165
  store i32 %337, i32* %7, align 4, !dbg !1162
  %338 = load i32, i32* %7, align 4, !dbg !1166
  %339 = icmp slt i32 %338, 0, !dbg !1168
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %240
  %340 = load i32*, i32** %5, align 8, !dbg !1204
  %341 = load i32, i32* %8, align 4, !dbg !1204
  %342 = sext i32 %341 to i64, !dbg !1204
  %343 = getelementptr inbounds i32, i32* %340, i64 %342, !dbg !1204
  %344 = call i8* @gidtostr_ptr(i32* %343), !dbg !1204
  %345 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1204
  %346 = call i32 @fputs_unlocked(i8* %344, %struct._IO_FILE* %345), !dbg !1204
  %347 = load i32*, i32** %5, align 8, !dbg !1205
  %348 = load i32, i32* %8, align 4, !dbg !1206
  %349 = sext i32 %348 to i64, !dbg !1205
  %350 = getelementptr inbounds i32, i32* %347, i64 %349, !dbg !1205
  %351 = load i32, i32* %350, align 4, !dbg !1205
  %352 = call %struct.group* @getgrgid(i32 %351), !dbg !1207
  store %struct.group* %352, %struct.group** %4, align 8, !dbg !1208
  %353 = load %struct.group*, %struct.group** %4, align 8, !dbg !1209
  %354 = icmp ne %struct.group* %353, null, !dbg !1209
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %272
  %355 = load %struct.group*, %struct.group** %4, align 8, !dbg !1212
  %356 = getelementptr inbounds %struct.group, %struct.group* %355, i32 0, i32 0, !dbg !1213
  %357 = load i8*, i8** %356, align 8, !dbg !1213
  %358 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.53, i64 0, i64 0), i8* %357), !dbg !1214
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %302
  %359 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.60, i64 0, i64 0)) #10, !dbg !1225
  %360 = load i8*, i8** @context, align 8, !dbg !1226
  %361 = call i32 (i8*, ...) @printf(i8* %359, i8* %360), !dbg !1227
  br label %originalBB34
}

declare dso_local i32 @putchar_unlocked(i32) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @uidtostr_ptr(i32*) #4 !dbg !48 {
  %2 = alloca i32*, align 8
  store i32* %0, i32** %2, align 8
  call void @llvm.dbg.declare(metadata i32** %2, metadata !1229, metadata !DIExpression()), !dbg !1230
  %3 = load i32*, i32** %2, align 8, !dbg !1231
  %4 = load i32, i32* %3, align 4, !dbg !1232
  %5 = zext i32 %4 to i64, !dbg !1232
  %6 = call i8* @umaxtostr(i64 %5, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @uidtostr_ptr.buf, i64 0, i64 0)), !dbg !1233
  ret i8* %6, !dbg !1234
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @gidtostr_ptr(i32*) #4 !dbg !58 {
  %2 = alloca i32*, align 8
  store i32* %0, i32** %2, align 8
  call void @llvm.dbg.declare(metadata i32** %2, metadata !1235, metadata !DIExpression()), !dbg !1236
  %3 = load i32*, i32** %2, align 8, !dbg !1237
  %4 = load i32, i32* %3, align 4, !dbg !1238
  %5 = zext i32 %4 to i64, !dbg !1238
  %6 = call i8* @umaxtostr(i64 %5, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @gidtostr_ptr.buf, i64 0, i64 0)), !dbg !1239
  ret i8* %6, !dbg !1240
}

declare dso_local %struct.group* @getgrgid(i32) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @print_group_list(i8*, i32, i32, i32, i1 zeroext, i8 signext) #4 !dbg !1241 {
  %7 = load i32, i32* @x.19
  %8 = load i32, i32* @y.20
  %9 = sub i32 %7, 1
  %10 = mul i32 %7, %9
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %8, 10
  %14 = or i1 %12, %13
  br i1 %14, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %6, %originalBBalteredBB
  %15 = alloca i1, align 1
  %16 = alloca i8*, align 8
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i8, align 1
  %21 = alloca i8, align 1
  %22 = alloca i8, align 1
  %23 = alloca %struct.passwd*, align 8
  %24 = alloca i32*, align 8
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  store i8* %0, i8** %16, align 8
  call void @llvm.dbg.declare(metadata i8** %16, metadata !1244, metadata !DIExpression()), !dbg !1245
  store i32 %1, i32* %17, align 4
  call void @llvm.dbg.declare(metadata i32* %17, metadata !1246, metadata !DIExpression()), !dbg !1247
  store i32 %2, i32* %18, align 4
  call void @llvm.dbg.declare(metadata i32* %18, metadata !1248, metadata !DIExpression()), !dbg !1249
  store i32 %3, i32* %19, align 4
  call void @llvm.dbg.declare(metadata i32* %19, metadata !1250, metadata !DIExpression()), !dbg !1251
  %27 = zext i1 %4 to i8
  store i8 %27, i8* %20, align 1
  call void @llvm.dbg.declare(metadata i8* %20, metadata !1252, metadata !DIExpression()), !dbg !1253
  store i8 %5, i8* %21, align 1
  call void @llvm.dbg.declare(metadata i8* %21, metadata !1254, metadata !DIExpression()), !dbg !1255
  call void @llvm.dbg.declare(metadata i8* %22, metadata !1256, metadata !DIExpression()), !dbg !1257
  store i8 1, i8* %22, align 1, !dbg !1257
  call void @llvm.dbg.declare(metadata %struct.passwd** %23, metadata !1258, metadata !DIExpression()), !dbg !1269
  store %struct.passwd* null, %struct.passwd** %23, align 8, !dbg !1269
  %28 = load i8*, i8** %16, align 8, !dbg !1270
  %29 = icmp ne i8* %28, null, !dbg !1270
  %30 = load i32, i32* @x.19
  %31 = load i32, i32* @y.20
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %29, label %38, label %45, !dbg !1272

38:                                               ; preds = %originalBBpart2
  %39 = load i32, i32* %17, align 4, !dbg !1273
  %40 = call %struct.passwd* @getpwuid(i32 %39), !dbg !1275
  store %struct.passwd* %40, %struct.passwd** %23, align 8, !dbg !1276
  %41 = load %struct.passwd*, %struct.passwd** %23, align 8, !dbg !1277
  %42 = icmp eq %struct.passwd* %41, null, !dbg !1279
  br i1 %42, label %43, label %44, !dbg !1280

43:                                               ; preds = %38
  store i8 0, i8* %22, align 1, !dbg !1281
  br label %44, !dbg !1282

44:                                               ; preds = %43, %38
  br label %45, !dbg !1283

45:                                               ; preds = %44, %originalBBpart2
  %46 = load i32, i32* %18, align 4, !dbg !1284
  %47 = load i8, i8* %20, align 1, !dbg !1286
  %48 = trunc i8 %47 to i1, !dbg !1286
  %49 = call zeroext i1 @print_group(i32 %46, i1 zeroext %48), !dbg !1287
  br i1 %49, label %51, label %50, !dbg !1288

50:                                               ; preds = %45
  store i8 0, i8* %22, align 1, !dbg !1289
  br label %51, !dbg !1290

51:                                               ; preds = %50, %45
  %52 = load i32, i32* %19, align 4, !dbg !1291
  %53 = load i32, i32* %18, align 4, !dbg !1293
  %54 = icmp ne i32 %52, %53, !dbg !1294
  br i1 %54, label %55, label %97, !dbg !1295

55:                                               ; preds = %51
  %56 = load i32, i32* @x.19
  %57 = load i32, i32* @y.20
  %58 = sub i32 %56, 1
  %59 = mul i32 %56, %58
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %61, %62
  br i1 %63, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %55, %originalBB1alteredBB
  %64 = load i8, i8* %21, align 1, !dbg !1296
  %65 = sext i8 %64 to i32, !dbg !1296
  %66 = call i32 @putchar_unlocked(i32 %65), !dbg !1296
  %67 = load i32, i32* %19, align 4, !dbg !1298
  %68 = load i8, i8* %20, align 1, !dbg !1300
  %69 = trunc i8 %68 to i1, !dbg !1300
  %70 = call zeroext i1 @print_group(i32 %67, i1 zeroext %69), !dbg !1301
  %71 = load i32, i32* @x.19
  %72 = load i32, i32* @y.20
  %73 = sub i32 %71, 1
  %74 = mul i32 %71, %73
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %72, 10
  %78 = or i1 %76, %77
  br i1 %78, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %70, label %80, label %79, !dbg !1302

79:                                               ; preds = %originalBBpart24
  store i8 0, i8* %22, align 1, !dbg !1303
  br label %80, !dbg !1304

80:                                               ; preds = %79, %originalBBpart24
  %81 = load i32, i32* @x.19
  %82 = load i32, i32* @y.20
  %83 = sub i32 %81, 1
  %84 = mul i32 %81, %83
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %82, 10
  %88 = or i1 %86, %87
  br i1 %88, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %80, %originalBB6alteredBB
  %89 = load i32, i32* @x.19
  %90 = load i32, i32* @y.20
  %91 = sub i32 %89, 1
  %92 = mul i32 %89, %91
  %93 = urem i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %90, 10
  %96 = or i1 %94, %95
  br i1 %96, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %97, !dbg !1305

97:                                               ; preds = %originalBBpart28, %51
  call void @llvm.dbg.declare(metadata i32** %24, metadata !1306, metadata !DIExpression()), !dbg !1308
  call void @llvm.dbg.declare(metadata i32* %25, metadata !1309, metadata !DIExpression()), !dbg !1310
  %98 = load i8*, i8** %16, align 8, !dbg !1311
  %99 = load %struct.passwd*, %struct.passwd** %23, align 8, !dbg !1312
  %100 = icmp ne %struct.passwd* %99, null, !dbg !1312
  br i1 %100, label %101, label %121, !dbg !1312

101:                                              ; preds = %97
  %102 = load i32, i32* @x.19
  %103 = load i32, i32* @y.20
  %104 = sub i32 %102, 1
  %105 = mul i32 %102, %104
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %103, 10
  %109 = or i1 %107, %108
  br i1 %109, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %101, %originalBB10alteredBB
  %110 = load %struct.passwd*, %struct.passwd** %23, align 8, !dbg !1313
  %111 = getelementptr inbounds %struct.passwd, %struct.passwd* %110, i32 0, i32 3, !dbg !1314
  %112 = load i32, i32* %111, align 4, !dbg !1314
  %113 = load i32, i32* @x.19
  %114 = load i32, i32* @y.20
  %115 = sub i32 %113, 1
  %116 = mul i32 %113, %115
  %117 = urem i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = icmp slt i32 %114, 10
  %120 = or i1 %118, %119
  br i1 %120, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %139, !dbg !1312

121:                                              ; preds = %97
  %122 = load i32, i32* @x.19
  %123 = load i32, i32* @y.20
  %124 = sub i32 %122, 1
  %125 = mul i32 %122, %124
  %126 = urem i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = icmp slt i32 %123, 10
  %129 = or i1 %127, %128
  br i1 %129, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %121, %originalBB14alteredBB
  %130 = load i32, i32* %19, align 4, !dbg !1315
  %131 = load i32, i32* @x.19
  %132 = load i32, i32* @y.20
  %133 = sub i32 %131, 1
  %134 = mul i32 %131, %133
  %135 = urem i32 %134, 2
  %136 = icmp eq i32 %135, 0
  %137 = icmp slt i32 %132, 10
  %138 = or i1 %136, %137
  br i1 %138, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %139, !dbg !1312

139:                                              ; preds = %originalBBpart216, %originalBBpart212
  %140 = phi i32 [ %112, %originalBBpart212 ], [ %130, %originalBBpart216 ], !dbg !1312
  %141 = call i32 @xgetgroups(i8* %98, i32 %140, i32** %24), !dbg !1316
  store i32 %141, i32* %25, align 4, !dbg !1310
  %142 = load i32, i32* %25, align 4, !dbg !1317
  %143 = icmp slt i32 %142, 0, !dbg !1319
  br i1 %143, label %144, label %190, !dbg !1320

144:                                              ; preds = %139
  %145 = load i8*, i8** %16, align 8, !dbg !1321
  %146 = icmp ne i8* %145, null, !dbg !1321
  br i1 %146, label %147, label %169, !dbg !1324

147:                                              ; preds = %144
  %148 = load i32, i32* @x.19
  %149 = load i32, i32* @y.20
  %150 = sub i32 %148, 1
  %151 = mul i32 %148, %150
  %152 = urem i32 %151, 2
  %153 = icmp eq i32 %152, 0
  %154 = icmp slt i32 %149, 10
  %155 = or i1 %153, %154
  br i1 %155, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %147, %originalBB18alteredBB
  %156 = call i32* @__errno_location() #15, !dbg !1325
  %157 = load i32, i32* %156, align 4, !dbg !1325
  %158 = call i8* @gettext(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.61, i64 0, i64 0)) #10, !dbg !1327
  %159 = load i8*, i8** %16, align 8, !dbg !1328
  %160 = call i8* @quote(i8* %159), !dbg !1329
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %157, i8* %158, i8* %160), !dbg !1330
  %161 = load i32, i32* @x.19
  %162 = load i32, i32* @y.20
  %163 = sub i32 %161, 1
  %164 = mul i32 %161, %163
  %165 = urem i32 %164, 2
  %166 = icmp eq i32 %165, 0
  %167 = icmp slt i32 %162, 10
  %168 = or i1 %166, %167
  br i1 %168, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br label %173, !dbg !1331

169:                                              ; preds = %144
  %170 = call i32* @__errno_location() #15, !dbg !1332
  %171 = load i32, i32* %170, align 4, !dbg !1332
  %172 = call i8* @gettext(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1.62, i64 0, i64 0)) #10, !dbg !1334
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %171, i8* %172), !dbg !1335
  br label %173

173:                                              ; preds = %169, %originalBBpart220
  %174 = load i32, i32* @x.19
  %175 = load i32, i32* @y.20
  %176 = sub i32 %174, 1
  %177 = mul i32 %174, %176
  %178 = urem i32 %177, 2
  %179 = icmp eq i32 %178, 0
  %180 = icmp slt i32 %175, 10
  %181 = or i1 %179, %180
  br i1 %181, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %173, %originalBB22alteredBB
  store i1 false, i1* %15, align 1, !dbg !1336
  %182 = load i32, i32* @x.19
  %183 = load i32, i32* @y.20
  %184 = sub i32 %182, 1
  %185 = mul i32 %182, %184
  %186 = urem i32 %185, 2
  %187 = icmp eq i32 %186, 0
  %188 = icmp slt i32 %183, 10
  %189 = or i1 %187, %188
  br i1 %189, label %originalBBpart224, label %originalBB22alteredBB

originalBBpart224:                                ; preds = %originalBB22
  br label %282, !dbg !1336

190:                                              ; preds = %139
  call void @llvm.dbg.declare(metadata i32* %26, metadata !1337, metadata !DIExpression()), !dbg !1339
  store i32 0, i32* %26, align 4, !dbg !1339
  br label %191, !dbg !1340

191:                                              ; preds = %274, %190
  %192 = load i32, i32* %26, align 4, !dbg !1341
  %193 = load i32, i32* %25, align 4, !dbg !1343
  %194 = icmp slt i32 %192, %193, !dbg !1344
  br i1 %194, label %195, label %277, !dbg !1345

195:                                              ; preds = %191
  %196 = load i32*, i32** %24, align 8, !dbg !1346
  %197 = load i32, i32* %26, align 4, !dbg !1348
  %198 = sext i32 %197 to i64, !dbg !1346
  %199 = getelementptr inbounds i32, i32* %196, i64 %198, !dbg !1346
  %200 = load i32, i32* %199, align 4, !dbg !1346
  %201 = load i32, i32* %18, align 4, !dbg !1349
  %202 = icmp ne i32 %200, %201, !dbg !1350
  br i1 %202, label %203, label %273, !dbg !1351

203:                                              ; preds = %195
  %204 = load i32*, i32** %24, align 8, !dbg !1352
  %205 = load i32, i32* %26, align 4, !dbg !1353
  %206 = sext i32 %205 to i64, !dbg !1352
  %207 = getelementptr inbounds i32, i32* %204, i64 %206, !dbg !1352
  %208 = load i32, i32* %207, align 4, !dbg !1352
  %209 = load i32, i32* %19, align 4, !dbg !1354
  %210 = icmp ne i32 %208, %209, !dbg !1355
  br i1 %210, label %211, label %273, !dbg !1356

211:                                              ; preds = %203
  %212 = load i32, i32* @x.19
  %213 = load i32, i32* @y.20
  %214 = sub i32 %212, 1
  %215 = mul i32 %212, %214
  %216 = urem i32 %215, 2
  %217 = icmp eq i32 %216, 0
  %218 = icmp slt i32 %213, 10
  %219 = or i1 %217, %218
  br i1 %219, label %originalBB26, label %originalBB26alteredBB

originalBB26:                                     ; preds = %211, %originalBB26alteredBB
  %220 = load i8, i8* %21, align 1, !dbg !1357
  %221 = sext i8 %220 to i32, !dbg !1357
  %222 = call i32 @putchar_unlocked(i32 %221), !dbg !1357
  %223 = load i32*, i32** %24, align 8, !dbg !1359
  %224 = load i32, i32* %26, align 4, !dbg !1361
  %225 = sext i32 %224 to i64, !dbg !1359
  %226 = getelementptr inbounds i32, i32* %223, i64 %225, !dbg !1359
  %227 = load i32, i32* %226, align 4, !dbg !1359
  %228 = load i8, i8* %20, align 1, !dbg !1362
  %229 = trunc i8 %228 to i1, !dbg !1362
  %230 = call zeroext i1 @print_group(i32 %227, i1 zeroext %229), !dbg !1363
  %231 = load i32, i32* @x.19
  %232 = load i32, i32* @y.20
  %233 = sub i32 %231, 1
  %234 = mul i32 %231, %233
  %235 = urem i32 %234, 2
  %236 = icmp eq i32 %235, 0
  %237 = icmp slt i32 %232, 10
  %238 = or i1 %236, %237
  br i1 %238, label %originalBBpart228, label %originalBB26alteredBB

originalBBpart228:                                ; preds = %originalBB26
  br i1 %230, label %256, label %239, !dbg !1364

239:                                              ; preds = %originalBBpart228
  %240 = load i32, i32* @x.19
  %241 = load i32, i32* @y.20
  %242 = sub i32 %240, 1
  %243 = mul i32 %240, %242
  %244 = urem i32 %243, 2
  %245 = icmp eq i32 %244, 0
  %246 = icmp slt i32 %241, 10
  %247 = or i1 %245, %246
  br i1 %247, label %originalBB30, label %originalBB30alteredBB

originalBB30:                                     ; preds = %239, %originalBB30alteredBB
  store i8 0, i8* %22, align 1, !dbg !1365
  %248 = load i32, i32* @x.19
  %249 = load i32, i32* @y.20
  %250 = sub i32 %248, 1
  %251 = mul i32 %248, %250
  %252 = urem i32 %251, 2
  %253 = icmp eq i32 %252, 0
  %254 = icmp slt i32 %249, 10
  %255 = or i1 %253, %254
  br i1 %255, label %originalBBpart232, label %originalBB30alteredBB

originalBBpart232:                                ; preds = %originalBB30
  br label %256, !dbg !1366

256:                                              ; preds = %originalBBpart232, %originalBBpart228
  %257 = load i32, i32* @x.19
  %258 = load i32, i32* @y.20
  %259 = sub i32 %257, 1
  %260 = mul i32 %257, %259
  %261 = urem i32 %260, 2
  %262 = icmp eq i32 %261, 0
  %263 = icmp slt i32 %258, 10
  %264 = or i1 %262, %263
  br i1 %264, label %originalBB34, label %originalBB34alteredBB

originalBB34:                                     ; preds = %256, %originalBB34alteredBB
  %265 = load i32, i32* @x.19
  %266 = load i32, i32* @y.20
  %267 = sub i32 %265, 1
  %268 = mul i32 %265, %267
  %269 = urem i32 %268, 2
  %270 = icmp eq i32 %269, 0
  %271 = icmp slt i32 %266, 10
  %272 = or i1 %270, %271
  br i1 %272, label %originalBBpart236, label %originalBB34alteredBB

originalBBpart236:                                ; preds = %originalBB34
  br label %273, !dbg !1367

273:                                              ; preds = %originalBBpart236, %203, %195
  br label %274, !dbg !1354

274:                                              ; preds = %273
  %275 = load i32, i32* %26, align 4, !dbg !1368
  %276 = add nsw i32 %275, 1, !dbg !1368
  store i32 %276, i32* %26, align 4, !dbg !1368
  br label %191, !dbg !1369, !llvm.loop !1370

277:                                              ; preds = %191
  %278 = load i32*, i32** %24, align 8, !dbg !1372
  %279 = bitcast i32* %278 to i8*, !dbg !1372
  call void @free(i8* %279) #10, !dbg !1373
  %280 = load i8, i8* %22, align 1, !dbg !1374
  %281 = trunc i8 %280 to i1, !dbg !1374
  store i1 %281, i1* %15, align 1, !dbg !1375
  br label %282, !dbg !1375

282:                                              ; preds = %277, %originalBBpart224
  %283 = load i32, i32* @x.19
  %284 = load i32, i32* @y.20
  %285 = sub i32 %283, 1
  %286 = mul i32 %283, %285
  %287 = urem i32 %286, 2
  %288 = icmp eq i32 %287, 0
  %289 = icmp slt i32 %284, 10
  %290 = or i1 %288, %289
  br i1 %290, label %originalBB38, label %originalBB38alteredBB

originalBB38:                                     ; preds = %282, %originalBB38alteredBB
  %291 = load i1, i1* %15, align 1, !dbg !1376
  %292 = load i32, i32* @x.19
  %293 = load i32, i32* @y.20
  %294 = sub i32 %292, 1
  %295 = mul i32 %292, %294
  %296 = urem i32 %295, 2
  %297 = icmp eq i32 %296, 0
  %298 = icmp slt i32 %293, 10
  %299 = or i1 %297, %298
  br i1 %299, label %originalBBpart240, label %originalBB38alteredBB

originalBBpart240:                                ; preds = %originalBB38
  ret i1 %291, !dbg !1376

originalBBalteredBB:                              ; preds = %originalBB, %6
  %300 = alloca i1, align 1
  %301 = alloca i8*, align 8
  %302 = alloca i32, align 4
  %303 = alloca i32, align 4
  %304 = alloca i32, align 4
  %305 = alloca i8, align 1
  %306 = alloca i8, align 1
  %307 = alloca i8, align 1
  %308 = alloca %struct.passwd*, align 8
  %309 = alloca i32*, align 8
  %310 = alloca i32, align 4
  %311 = alloca i32, align 4
  store i8* %0, i8** %301, align 8
  call void @llvm.dbg.declare(metadata i8** %301, metadata !1377, metadata !DIExpression()), !dbg !1245
  store i32 %1, i32* %302, align 4
  call void @llvm.dbg.declare(metadata i32* %302, metadata !1384, metadata !DIExpression()), !dbg !1247
  store i32 %2, i32* %303, align 4
  call void @llvm.dbg.declare(metadata i32* %303, metadata !1385, metadata !DIExpression()), !dbg !1249
  store i32 %3, i32* %304, align 4
  call void @llvm.dbg.declare(metadata i32* %304, metadata !1386, metadata !DIExpression()), !dbg !1251
  %312 = zext i1 %4 to i8
  store i8 %312, i8* %305, align 1
  call void @llvm.dbg.declare(metadata i8* %305, metadata !1387, metadata !DIExpression()), !dbg !1253
  store i8 %5, i8* %306, align 1
  call void @llvm.dbg.declare(metadata i8* %306, metadata !1388, metadata !DIExpression()), !dbg !1255
  call void @llvm.dbg.declare(metadata i8* %307, metadata !1389, metadata !DIExpression()), !dbg !1257
  store i8 1, i8* %307, align 1, !dbg !1257
  call void @llvm.dbg.declare(metadata %struct.passwd** %308, metadata !1390, metadata !DIExpression()), !dbg !1269
  store %struct.passwd* null, %struct.passwd** %308, align 8, !dbg !1269
  %313 = load i8*, i8** %301, align 8, !dbg !1270
  %314 = icmp ne i8* %313, null, !dbg !1270
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %55
  %315 = load i8, i8* %21, align 1, !dbg !1296
  %316 = sext i8 %315 to i32, !dbg !1296
  %317 = call i32 @putchar_unlocked(i32 %316), !dbg !1296
  %318 = load i32, i32* %19, align 4, !dbg !1298
  %319 = load i8, i8* %20, align 1, !dbg !1300
  %320 = trunc i8 %319 to i1, !dbg !1300
  %321 = call zeroext i1 @print_group(i32 %318, i1 zeroext %320), !dbg !1301
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %80
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %101
  %322 = load %struct.passwd*, %struct.passwd** %23, align 8, !dbg !1313
  %323 = getelementptr inbounds %struct.passwd, %struct.passwd* %322, i32 0, i32 3, !dbg !1314
  %324 = load i32, i32* %323, align 4, !dbg !1314
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %121
  %325 = load i32, i32* %19, align 4, !dbg !1315
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %147
  %326 = call i32* @__errno_location() #15, !dbg !1325
  %327 = load i32, i32* %326, align 4, !dbg !1325
  %328 = call i8* @gettext(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.61, i64 0, i64 0)) #10, !dbg !1327
  %329 = load i8*, i8** %16, align 8, !dbg !1328
  %330 = call i8* @quote(i8* %329), !dbg !1329
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %327, i8* %328, i8* %330), !dbg !1330
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %173
  store i1 false, i1* %15, align 1, !dbg !1336
  br label %originalBB22

originalBB26alteredBB:                            ; preds = %originalBB26, %211
  %331 = load i8, i8* %21, align 1, !dbg !1357
  %332 = sext i8 %331 to i32, !dbg !1357
  %333 = call i32 @putchar_unlocked(i32 %332), !dbg !1357
  %334 = load i32*, i32** %24, align 8, !dbg !1359
  %335 = load i32, i32* %26, align 4, !dbg !1361
  %336 = sext i32 %335 to i64, !dbg !1359
  %337 = getelementptr inbounds i32, i32* %334, i64 %336, !dbg !1359
  %338 = load i32, i32* %337, align 4, !dbg !1359
  %339 = load i8, i8* %20, align 1, !dbg !1362
  %340 = trunc i8 %339 to i1, !dbg !1362
  %341 = call zeroext i1 @print_group(i32 %338, i1 zeroext %340), !dbg !1363
  br label %originalBB26

originalBB30alteredBB:                            ; preds = %originalBB30, %239
  store i8 0, i8* %22, align 1, !dbg !1365
  br label %originalBB30

originalBB34alteredBB:                            ; preds = %originalBB34, %256
  br label %originalBB34

originalBB38alteredBB:                            ; preds = %originalBB38, %282
  %342 = load i1, i1* %15, align 1, !dbg !1376
  br label %originalBB38
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @print_group(i32, i1 zeroext) #4 !dbg !1401 {
  %3 = load i32, i32* @x.21
  %4 = load i32, i32* @y.22
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca i32, align 4
  %12 = alloca i8, align 1
  %13 = alloca %struct.group*, align 8
  %14 = alloca i8, align 1
  %15 = alloca i8*, align 8
  store i32 %0, i32* %11, align 4
  call void @llvm.dbg.declare(metadata i32* %11, metadata !1404, metadata !DIExpression()), !dbg !1405
  %16 = zext i1 %1 to i8
  store i8 %16, i8* %12, align 1
  call void @llvm.dbg.declare(metadata i8* %12, metadata !1406, metadata !DIExpression()), !dbg !1407
  call void @llvm.dbg.declare(metadata %struct.group** %13, metadata !1408, metadata !DIExpression()), !dbg !1416
  store %struct.group* null, %struct.group** %13, align 8, !dbg !1416
  call void @llvm.dbg.declare(metadata i8* %14, metadata !1417, metadata !DIExpression()), !dbg !1418
  store i8 1, i8* %14, align 1, !dbg !1418
  %17 = load i8, i8* %12, align 1, !dbg !1419
  %18 = trunc i8 %17 to i1, !dbg !1419
  %19 = load i32, i32* @x.21
  %20 = load i32, i32* @y.22
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %18, label %27, label %53, !dbg !1421

27:                                               ; preds = %originalBBpart2
  %28 = load i32, i32* %11, align 4, !dbg !1422
  %29 = call %struct.group* @getgrgid(i32 %28), !dbg !1424
  store %struct.group* %29, %struct.group** %13, align 8, !dbg !1425
  %30 = load %struct.group*, %struct.group** %13, align 8, !dbg !1426
  %31 = icmp eq %struct.group* %30, null, !dbg !1428
  br i1 %31, label %32, label %52, !dbg !1429

32:                                               ; preds = %27
  %33 = load i32, i32* @x.21
  %34 = load i32, i32* @y.22
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %32, %originalBB1alteredBB
  %41 = call i8* @gettext(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.2.63, i64 0, i64 0)) #10, !dbg !1430
  %42 = load i32, i32* %11, align 4, !dbg !1432
  %43 = zext i32 %42 to i64, !dbg !1433
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %41, i64 %43), !dbg !1434
  store i8 0, i8* %14, align 1, !dbg !1435
  %44 = load i32, i32* @x.21
  %45 = load i32, i32* @y.22
  %46 = sub i32 %44, 1
  %47 = mul i32 %44, %46
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %45, 10
  %51 = or i1 %49, %50
  br i1 %51, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %52, !dbg !1436

52:                                               ; preds = %originalBBpart24, %27
  br label %53, !dbg !1437

53:                                               ; preds = %52, %originalBBpart2
  call void @llvm.dbg.declare(metadata i8** %15, metadata !1438, metadata !DIExpression()), !dbg !1439
  %54 = load i32, i32* @x.21
  %55 = load i32, i32* @y.22
  %56 = sub i32 %54, 1
  %57 = mul i32 %54, %56
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %55, 10
  %61 = or i1 %59, %60
  br i1 %61, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %53, %originalBB6alteredBB
  %62 = load %struct.group*, %struct.group** %13, align 8, !dbg !1440
  %63 = icmp ne %struct.group* %62, null, !dbg !1440
  %64 = load i32, i32* @x.21
  %65 = load i32, i32* @y.22
  %66 = sub i32 %64, 1
  %67 = mul i32 %64, %66
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %65, 10
  %71 = or i1 %69, %70
  br i1 %71, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %63, label %72, label %92, !dbg !1440

72:                                               ; preds = %originalBBpart28
  %73 = load i32, i32* @x.21
  %74 = load i32, i32* @y.22
  %75 = sub i32 %73, 1
  %76 = mul i32 %73, %75
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %74, 10
  %80 = or i1 %78, %79
  br i1 %80, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %72, %originalBB10alteredBB
  %81 = load %struct.group*, %struct.group** %13, align 8, !dbg !1441
  %82 = getelementptr inbounds %struct.group, %struct.group* %81, i32 0, i32 0, !dbg !1442
  %83 = load i8*, i8** %82, align 8, !dbg !1442
  %84 = load i32, i32* @x.21
  %85 = load i32, i32* @y.22
  %86 = sub i32 %84, 1
  %87 = mul i32 %84, %86
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %85, 10
  %91 = or i1 %89, %90
  br i1 %91, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %110, !dbg !1440

92:                                               ; preds = %originalBBpart28
  %93 = load i32, i32* @x.21
  %94 = load i32, i32* @y.22
  %95 = sub i32 %93, 1
  %96 = mul i32 %93, %95
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %94, 10
  %100 = or i1 %98, %99
  br i1 %100, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %92, %originalBB14alteredBB
  %101 = call i8* @gidtostr_ptr.64(i32* %11), !dbg !1443
  %102 = load i32, i32* @x.21
  %103 = load i32, i32* @y.22
  %104 = sub i32 %102, 1
  %105 = mul i32 %102, %104
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %103, 10
  %109 = or i1 %107, %108
  br i1 %109, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br label %110, !dbg !1440

110:                                              ; preds = %originalBBpart216, %originalBBpart212
  %111 = phi i8* [ %83, %originalBBpart212 ], [ %101, %originalBBpart216 ], !dbg !1440
  store i8* %111, i8** %15, align 8, !dbg !1439
  %112 = load i8*, i8** %15, align 8, !dbg !1444
  %113 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1444
  %114 = call i32 @fputs_unlocked(i8* %112, %struct._IO_FILE* %113), !dbg !1444
  %115 = load i8, i8* %14, align 1, !dbg !1445
  %116 = trunc i8 %115 to i1, !dbg !1445
  ret i1 %116, !dbg !1446

originalBBalteredBB:                              ; preds = %originalBB, %2
  %117 = alloca i32, align 4
  %118 = alloca i8, align 1
  %119 = alloca %struct.group*, align 8
  %120 = alloca i8, align 1
  %121 = alloca i8*, align 8
  store i32 %0, i32* %117, align 4
  call void @llvm.dbg.declare(metadata i32* %117, metadata !1447, metadata !DIExpression()), !dbg !1405
  %122 = zext i1 %1 to i8
  store i8 %122, i8* %118, align 1
  call void @llvm.dbg.declare(metadata i8* %118, metadata !1454, metadata !DIExpression()), !dbg !1407
  call void @llvm.dbg.declare(metadata %struct.group** %119, metadata !1455, metadata !DIExpression()), !dbg !1416
  store %struct.group* null, %struct.group** %119, align 8, !dbg !1416
  call void @llvm.dbg.declare(metadata i8* %120, metadata !1463, metadata !DIExpression()), !dbg !1418
  store i8 1, i8* %120, align 1, !dbg !1418
  %123 = load i8, i8* %118, align 1, !dbg !1419
  %124 = trunc i8 %123 to i1, !dbg !1419
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %32
  %125 = call i8* @gettext(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.2.63, i64 0, i64 0)) #10, !dbg !1430
  %126 = load i32, i32* %11, align 4, !dbg !1432
  %127 = zext i32 %126 to i64, !dbg !1433
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %125, i64 %127), !dbg !1434
  store i8 0, i8* %14, align 1, !dbg !1435
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %53
  %128 = load %struct.group*, %struct.group** %13, align 8, !dbg !1440
  %129 = icmp ne %struct.group* %128, null, !dbg !1440
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %72
  %130 = load %struct.group*, %struct.group** %13, align 8, !dbg !1441
  %131 = getelementptr inbounds %struct.group, %struct.group* %130, i32 0, i32 0, !dbg !1442
  %132 = load i8*, i8** %131, align 8, !dbg !1442
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %92
  %133 = call i8* @gidtostr_ptr.64(i32* %11), !dbg !1443
  br label %originalBB14
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @gidtostr_ptr.64(i32*) #4 !dbg !80 {
  %2 = alloca i32*, align 8
  store i32* %0, i32** %2, align 8
  call void @llvm.dbg.declare(metadata i32** %2, metadata !1464, metadata !DIExpression()), !dbg !1465
  %3 = load i32*, i32** %2, align 8, !dbg !1466
  %4 = load i32, i32* %3, align 4, !dbg !1467
  %5 = zext i32 %4 to i64, !dbg !1467
  %6 = call i8* @umaxtostr(i64 %5, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @gidtostr_ptr.buf.65, i64 0, i64 0)), !dbg !1468
  ret i8* %6, !dbg !1469
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @close_stdout() #4 !dbg !1470 {
  %1 = alloca i8*, align 8
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1473
  %3 = call i32 @close_stream(%struct._IO_FILE* %2), !dbg !1475
  %4 = icmp ne i32 %3, 0, !dbg !1476
  br i1 %4, label %5, label %76, !dbg !1477

5:                                                ; preds = %0
  %6 = load i8, i8* @ignore_EPIPE, align 1, !dbg !1478
  %7 = trunc i8 %6 to i1, !dbg !1478
  br i1 %7, label %8, label %28, !dbg !1479

8:                                                ; preds = %5
  %9 = load i32, i32* @x.25
  %10 = load i32, i32* @y.26
  %11 = sub i32 %9, 1
  %12 = mul i32 %9, %11
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = icmp slt i32 %10, 10
  %16 = or i1 %14, %15
  br i1 %16, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %8, %originalBBalteredBB
  %17 = call i32* @__errno_location() #15, !dbg !1480
  %18 = load i32, i32* %17, align 4, !dbg !1480
  %19 = icmp eq i32 %18, 32, !dbg !1481
  %20 = load i32, i32* @x.25
  %21 = load i32, i32* @y.26
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %19, label %76, label %28, !dbg !1482

28:                                               ; preds = %originalBBpart2, %5
  call void @llvm.dbg.declare(metadata i8** %1, metadata !1483, metadata !DIExpression()), !dbg !1485
  %29 = load i32, i32* @x.25
  %30 = load i32, i32* @y.26
  %31 = sub i32 %29, 1
  %32 = mul i32 %29, %31
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %34, %35
  br i1 %36, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %28, %originalBB1alteredBB
  %37 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.71, i64 0, i64 0)) #10, !dbg !1486
  store i8* %37, i8** %1, align 8, !dbg !1485
  %38 = load i8*, i8** @file_name, align 8, !dbg !1487
  %39 = icmp ne i8* %38, null, !dbg !1487
  %40 = load i32, i32* @x.25
  %41 = load i32, i32* @y.26
  %42 = sub i32 %40, 1
  %43 = mul i32 %40, %42
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %45, %46
  br i1 %47, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %39, label %48, label %70, !dbg !1489

48:                                               ; preds = %originalBBpart24
  %49 = load i32, i32* @x.25
  %50 = load i32, i32* @y.26
  %51 = sub i32 %49, 1
  %52 = mul i32 %49, %51
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %50, 10
  %56 = or i1 %54, %55
  br i1 %56, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %48, %originalBB6alteredBB
  %57 = call i32* @__errno_location() #15, !dbg !1490
  %58 = load i32, i32* %57, align 4, !dbg !1490
  %59 = load i8*, i8** @file_name, align 8, !dbg !1491
  %60 = call i8* @quotearg_colon(i8* %59), !dbg !1492
  %61 = load i8*, i8** %1, align 8, !dbg !1493
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %58, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.72, i64 0, i64 0), i8* %60, i8* %61), !dbg !1494
  %62 = load i32, i32* @x.25
  %63 = load i32, i32* @y.26
  %64 = sub i32 %62, 1
  %65 = mul i32 %62, %64
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %63, 10
  %69 = or i1 %67, %68
  br i1 %69, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %74, !dbg !1494

70:                                               ; preds = %originalBBpart24
  %71 = call i32* @__errno_location() #15, !dbg !1495
  %72 = load i32, i32* %71, align 4, !dbg !1495
  %73 = load i8*, i8** %1, align 8, !dbg !1496
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %72, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2.73, i64 0, i64 0), i8* %73), !dbg !1497
  br label %74

74:                                               ; preds = %70, %originalBBpart28
  %75 = load volatile i32, i32* @exit_failure, align 4, !dbg !1498
  call void @_exit(i32 %75) #14, !dbg !1499
  unreachable, !dbg !1499

76:                                               ; preds = %originalBBpart2, %0
  %77 = load i32, i32* @x.25
  %78 = load i32, i32* @y.26
  %79 = sub i32 %77, 1
  %80 = mul i32 %77, %79
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %78, 10
  %84 = or i1 %82, %83
  br i1 %84, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %76, %originalBB10alteredBB
  %85 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1500
  %86 = call i32 @close_stream(%struct._IO_FILE* %85), !dbg !1502
  %87 = icmp ne i32 %86, 0, !dbg !1503
  %88 = load i32, i32* @x.25
  %89 = load i32, i32* @y.26
  %90 = sub i32 %88, 1
  %91 = mul i32 %88, %90
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %89, 10
  %95 = or i1 %93, %94
  br i1 %95, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %87, label %96, label %114, !dbg !1504

96:                                               ; preds = %originalBBpart212
  %97 = load i32, i32* @x.25
  %98 = load i32, i32* @y.26
  %99 = sub i32 %97, 1
  %100 = mul i32 %97, %99
  %101 = urem i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %98, 10
  %104 = or i1 %102, %103
  br i1 %104, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %96, %originalBB14alteredBB
  %105 = load volatile i32, i32* @exit_failure, align 4, !dbg !1505
  call void @_exit(i32 %105) #14, !dbg !1506
  %106 = load i32, i32* @x.25
  %107 = load i32, i32* @y.26
  %108 = sub i32 %106, 1
  %109 = mul i32 %106, %108
  %110 = urem i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %107, 10
  %113 = or i1 %111, %112
  br i1 %113, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  unreachable, !dbg !1506

114:                                              ; preds = %originalBBpart212
  ret void, !dbg !1507

originalBBalteredBB:                              ; preds = %originalBB, %8
  %115 = call i32* @__errno_location() #15, !dbg !1480
  %116 = load i32, i32* %115, align 4, !dbg !1480
  %117 = icmp eq i32 %116, 32, !dbg !1481
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %28
  %118 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.71, i64 0, i64 0)) #10, !dbg !1486
  store i8* %118, i8** %1, align 8, !dbg !1485
  %119 = load i8*, i8** @file_name, align 8, !dbg !1487
  %120 = icmp ne i8* %119, null, !dbg !1487
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %48
  %121 = call i32* @__errno_location() #15, !dbg !1490
  %122 = load i32, i32* %121, align 4, !dbg !1490
  %123 = load i8*, i8** @file_name, align 8, !dbg !1491
  %124 = call i8* @quotearg_colon(i8* %123), !dbg !1492
  %125 = load i8*, i8** %1, align 8, !dbg !1493
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %122, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.72, i64 0, i64 0), i8* %124, i8* %125), !dbg !1494
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %76
  %126 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1500
  %127 = call i32 @close_stream(%struct._IO_FILE* %126), !dbg !1502
  %128 = icmp ne i32 %127, 0, !dbg !1503
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %96
  %129 = load volatile i32, i32* @exit_failure, align 4, !dbg !1505
  call void @_exit(i32 %129) #14, !dbg !1506
  br label %originalBB14
}

; Function Attrs: noreturn
declare dso_local void @_exit(i32) #9

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @umaxtostr(i64, i8*) #4 !dbg !1508 {
  %3 = alloca i64, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  store i64 %0, i64* %3, align 8
  call void @llvm.dbg.declare(metadata i64* %3, metadata !1512, metadata !DIExpression()), !dbg !1513
  store i8* %1, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !1514, metadata !DIExpression()), !dbg !1515
  call void @llvm.dbg.declare(metadata i8** %5, metadata !1516, metadata !DIExpression()), !dbg !1517
  %6 = load i8*, i8** %4, align 8, !dbg !1518
  %7 = getelementptr inbounds i8, i8* %6, i64 20, !dbg !1519
  store i8* %7, i8** %5, align 8, !dbg !1517
  %8 = load i8*, i8** %5, align 8, !dbg !1520
  store i8 0, i8* %8, align 1, !dbg !1521
  %9 = load i64, i64* %3, align 8, !dbg !1522
  %10 = icmp ult i64 %9, 0, !dbg !1524
  br i1 %10, label %11, label %58, !dbg !1525

11:                                               ; preds = %2
  %12 = load i32, i32* @x.27
  %13 = load i32, i32* @y.28
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %11, %originalBBalteredBB
  %20 = load i32, i32* @x.27
  %21 = load i32, i32* @y.28
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %28, !dbg !1526

28:                                               ; preds = %originalBBpart24, %originalBBpart2
  %29 = load i64, i64* %3, align 8, !dbg !1528
  %30 = urem i64 %29, 10, !dbg !1529
  %31 = sub i64 48, %30, !dbg !1530
  %32 = trunc i64 %31 to i8, !dbg !1531
  %33 = load i8*, i8** %5, align 8, !dbg !1532
  %34 = getelementptr inbounds i8, i8* %33, i32 -1, !dbg !1532
  store i8* %34, i8** %5, align 8, !dbg !1532
  store i8 %32, i8* %34, align 1, !dbg !1533
  br label %35, !dbg !1534

35:                                               ; preds = %28
  %36 = load i32, i32* @x.27
  %37 = load i32, i32* @y.28
  %38 = sub i32 %36, 1
  %39 = mul i32 %36, %38
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %37, 10
  %43 = or i1 %41, %42
  br i1 %43, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %35, %originalBB1alteredBB
  %44 = load i64, i64* %3, align 8, !dbg !1535
  %45 = udiv i64 %44, 10, !dbg !1535
  store i64 %45, i64* %3, align 8, !dbg !1535
  %46 = icmp ne i64 %45, 0, !dbg !1536
  %47 = load i32, i32* @x.27
  %48 = load i32, i32* @y.28
  %49 = sub i32 %47, 1
  %50 = mul i32 %47, %49
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %48, 10
  %54 = or i1 %52, %53
  br i1 %54, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %46, label %28, label %55, !dbg !1534, !llvm.loop !1537

55:                                               ; preds = %originalBBpart24
  %56 = load i8*, i8** %5, align 8, !dbg !1539
  %57 = getelementptr inbounds i8, i8* %56, i32 -1, !dbg !1539
  store i8* %57, i8** %5, align 8, !dbg !1539
  store i8 45, i8* %57, align 1, !dbg !1540
  br label %103, !dbg !1541

58:                                               ; preds = %2
  br label %59, !dbg !1542

59:                                               ; preds = %82, %58
  %60 = load i32, i32* @x.27
  %61 = load i32, i32* @y.28
  %62 = sub i32 %60, 1
  %63 = mul i32 %60, %62
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %61, 10
  %67 = or i1 %65, %66
  br i1 %67, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %59, %originalBB6alteredBB
  %68 = load i64, i64* %3, align 8, !dbg !1544
  %69 = urem i64 %68, 10, !dbg !1545
  %70 = add i64 48, %69, !dbg !1546
  %71 = trunc i64 %70 to i8, !dbg !1547
  %72 = load i8*, i8** %5, align 8, !dbg !1548
  %73 = getelementptr inbounds i8, i8* %72, i32 -1, !dbg !1548
  store i8* %73, i8** %5, align 8, !dbg !1548
  store i8 %71, i8* %73, align 1, !dbg !1549
  %74 = load i32, i32* @x.27
  %75 = load i32, i32* @y.28
  %76 = sub i32 %74, 1
  %77 = mul i32 %74, %76
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %75, 10
  %81 = or i1 %79, %80
  br i1 %81, label %originalBBpart222, label %originalBB6alteredBB

originalBBpart222:                                ; preds = %originalBB6
  br label %82, !dbg !1550

82:                                               ; preds = %originalBBpart222
  %83 = load i64, i64* %3, align 8, !dbg !1551
  %84 = udiv i64 %83, 10, !dbg !1551
  store i64 %84, i64* %3, align 8, !dbg !1551
  %85 = icmp ne i64 %84, 0, !dbg !1552
  br i1 %85, label %59, label %86, !dbg !1550, !llvm.loop !1553

86:                                               ; preds = %82
  %87 = load i32, i32* @x.27
  %88 = load i32, i32* @y.28
  %89 = sub i32 %87, 1
  %90 = mul i32 %87, %89
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %88, 10
  %94 = or i1 %92, %93
  br i1 %94, label %originalBB24, label %originalBB24alteredBB

originalBB24:                                     ; preds = %86, %originalBB24alteredBB
  %95 = load i32, i32* @x.27
  %96 = load i32, i32* @y.28
  %97 = sub i32 %95, 1
  %98 = mul i32 %95, %97
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %96, 10
  %102 = or i1 %100, %101
  br i1 %102, label %originalBBpart227, label %originalBB24alteredBB

originalBBpart227:                                ; preds = %originalBB24
  br label %103

103:                                              ; preds = %originalBBpart227, %55
  %104 = load i8*, i8** %5, align 8, !dbg !1555
  ret i8* %104, !dbg !1556

originalBBalteredBB:                              ; preds = %originalBB, %11
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %35
  %105 = load i64, i64* %3, align 8, !dbg !1535
  %_ = sub i64 %105, 10
  %gen = mul i64 %_, 10
  %106 = udiv i64 %105, 10, !dbg !1535
  store i64 %106, i64* %3, align 8, !dbg !1535
  %107 = icmp ne i64 %106, 0, !dbg !1536
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %59
  %108 = load i64, i64* %3, align 8, !dbg !1544
  %_7 = sub i64 %108, 10
  %gen8 = mul i64 %_7, 10
  %_9 = shl i64 %108, 10
  %_10 = sub i64 %108, 10
  %gen11 = mul i64 %_10, 10
  %_12 = shl i64 %108, 10
  %109 = urem i64 %108, 10, !dbg !1545
  %_13 = sub i64 0, 48
  %gen14 = add i64 %_13, %109
  %_15 = sub i64 48, %109
  %gen16 = mul i64 %_15, %109
  %_17 = sub i64 48, %109
  %gen18 = mul i64 %_17, %109
  %_19 = sub i64 48, %109
  %gen20 = mul i64 %_19, %109
  %110 = add i64 48, %109, !dbg !1546
  %111 = trunc i64 %110 to i8, !dbg !1547
  %112 = load i8*, i8** %5, align 8, !dbg !1548
  %113 = getelementptr inbounds i8, i8* %112, i32 -1, !dbg !1548
  store i8* %113, i8** %5, align 8, !dbg !1548
  store i8 %111, i8* %113, align 1, !dbg !1549
  br label %originalBB6

originalBB24alteredBB:                            ; preds = %originalBB24, %86
  br label %originalBB24
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @set_program_name(i8*) #4 !dbg !1557 {
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !1558, metadata !DIExpression()), !dbg !1559
  call void @llvm.dbg.declare(metadata i8** %3, metadata !1560, metadata !DIExpression()), !dbg !1561
  call void @llvm.dbg.declare(metadata i8** %4, metadata !1562, metadata !DIExpression()), !dbg !1563
  %5 = load i8*, i8** %2, align 8, !dbg !1564
  %6 = icmp eq i8* %5, null, !dbg !1566
  br i1 %6, label %7, label %10, !dbg !1567

7:                                                ; preds = %1
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1568
  %9 = call i32 @fputs(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.80, i64 0, i64 0), %struct._IO_FILE* %8), !dbg !1570
  call void @abort() #12, !dbg !1571
  unreachable, !dbg !1571

10:                                               ; preds = %1
  %11 = load i8*, i8** %2, align 8, !dbg !1572
  %12 = call i8* @strrchr(i8* %11, i32 47) #13, !dbg !1573
  store i8* %12, i8** %3, align 8, !dbg !1574
  %13 = load i8*, i8** %3, align 8, !dbg !1575
  %14 = icmp ne i8* %13, null, !dbg !1576
  br i1 %14, label %15, label %18, !dbg !1575

15:                                               ; preds = %10
  %16 = load i8*, i8** %3, align 8, !dbg !1577
  %17 = getelementptr inbounds i8, i8* %16, i64 1, !dbg !1578
  br label %20, !dbg !1575

18:                                               ; preds = %10
  %19 = load i8*, i8** %2, align 8, !dbg !1579
  br label %20, !dbg !1575

20:                                               ; preds = %18, %15
  %21 = phi i8* [ %17, %15 ], [ %19, %18 ], !dbg !1575
  %22 = load i32, i32* @x.29
  %23 = load i32, i32* @y.30
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %20, %originalBBalteredBB
  store i8* %21, i8** %4, align 8, !dbg !1580
  %30 = load i8*, i8** %4, align 8, !dbg !1581
  %31 = load i8*, i8** %2, align 8, !dbg !1583
  %32 = ptrtoint i8* %30 to i64, !dbg !1584
  %33 = ptrtoint i8* %31 to i64, !dbg !1584
  %34 = sub i64 %32, %33, !dbg !1584
  %35 = icmp sge i64 %34, 7, !dbg !1585
  %36 = load i32, i32* @x.29
  %37 = load i32, i32* @y.30
  %38 = sub i32 %36, 1
  %39 = mul i32 %36, %38
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %37, 10
  %43 = or i1 %41, %42
  br i1 %43, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %35, label %44, label %91, !dbg !1586

44:                                               ; preds = %originalBBpart2
  %45 = load i32, i32* @x.29
  %46 = load i32, i32* @y.30
  %47 = sub i32 %45, 1
  %48 = mul i32 %45, %47
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %50, %51
  br i1 %52, label %originalBB7, label %originalBB7alteredBB

originalBB7:                                      ; preds = %44, %originalBB7alteredBB
  %53 = load i8*, i8** %4, align 8, !dbg !1587
  %54 = getelementptr inbounds i8, i8* %53, i64 -7, !dbg !1588
  %55 = call i32 @strncmp(i8* %54, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.81, i64 0, i64 0), i64 7) #13, !dbg !1589
  %56 = icmp eq i32 %55, 0, !dbg !1590
  %57 = load i32, i32* @x.29
  %58 = load i32, i32* @y.30
  %59 = sub i32 %57, 1
  %60 = mul i32 %57, %59
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %58, 10
  %64 = or i1 %62, %63
  br i1 %64, label %originalBBpart29, label %originalBB7alteredBB

originalBBpart29:                                 ; preds = %originalBB7
  br i1 %56, label %65, label %91, !dbg !1591

65:                                               ; preds = %originalBBpart29
  %66 = load i8*, i8** %4, align 8, !dbg !1592
  store i8* %66, i8** %2, align 8, !dbg !1594
  %67 = load i8*, i8** %4, align 8, !dbg !1595
  %68 = call i32 @strncmp(i8* %67, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.82, i64 0, i64 0), i64 3) #13, !dbg !1597
  %69 = icmp eq i32 %68, 0, !dbg !1598
  br i1 %69, label %70, label %90, !dbg !1599

70:                                               ; preds = %65
  %71 = load i32, i32* @x.29
  %72 = load i32, i32* @y.30
  %73 = sub i32 %71, 1
  %74 = mul i32 %71, %73
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %72, 10
  %78 = or i1 %76, %77
  br i1 %78, label %originalBB11, label %originalBB11alteredBB

originalBB11:                                     ; preds = %70, %originalBB11alteredBB
  %79 = load i8*, i8** %4, align 8, !dbg !1600
  %80 = getelementptr inbounds i8, i8* %79, i64 3, !dbg !1602
  store i8* %80, i8** %2, align 8, !dbg !1603
  %81 = load i8*, i8** %2, align 8, !dbg !1604
  store i8* %81, i8** @program_invocation_short_name, align 8, !dbg !1605
  %82 = load i32, i32* @x.29
  %83 = load i32, i32* @y.30
  %84 = sub i32 %82, 1
  %85 = mul i32 %82, %84
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %83, 10
  %89 = or i1 %87, %88
  br i1 %89, label %originalBBpart213, label %originalBB11alteredBB

originalBBpart213:                                ; preds = %originalBB11
  br label %90, !dbg !1606

90:                                               ; preds = %originalBBpart213, %65
  br label %91, !dbg !1607

91:                                               ; preds = %90, %originalBBpart29, %originalBBpart2
  %92 = load i8*, i8** %2, align 8, !dbg !1608
  store i8* %92, i8** @program_name, align 8, !dbg !1609
  %93 = load i8*, i8** %2, align 8, !dbg !1610
  store i8* %93, i8** @program_invocation_name, align 8, !dbg !1611
  ret void, !dbg !1612

originalBBalteredBB:                              ; preds = %originalBB, %20
  store i8* %21, i8** %4, align 8, !dbg !1580
  %94 = load i8*, i8** %4, align 8, !dbg !1581
  %95 = load i8*, i8** %2, align 8, !dbg !1583
  %96 = ptrtoint i8* %94 to i64, !dbg !1584
  %97 = ptrtoint i8* %95 to i64, !dbg !1584
  %_ = shl i64 %96, %97
  %_1 = shl i64 %96, %97
  %_2 = sub i64 %96, %97
  %gen = mul i64 %_2, %97
  %_3 = sub i64 %96, %97
  %gen4 = mul i64 %_3, %97
  %_5 = sub i64 0, %96
  %gen6 = add i64 %_5, %97
  %98 = sub i64 %96, %97, !dbg !1584
  %99 = icmp sge i64 %98, 7, !dbg !1585
  br label %originalBB

originalBB7alteredBB:                             ; preds = %originalBB7, %44
  %100 = load i8*, i8** %4, align 8, !dbg !1587
  %101 = getelementptr inbounds i8, i8* %100, i64 -7, !dbg !1588
  %102 = call i32 @strncmp(i8* %101, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.81, i64 0, i64 0), i64 7) #13, !dbg !1589
  %103 = icmp eq i32 %102, 0, !dbg !1590
  br label %originalBB7

originalBB11alteredBB:                            ; preds = %originalBB11, %70
  %104 = load i8*, i8** %4, align 8, !dbg !1600
  %105 = getelementptr inbounds i8, i8* %104, i64 3, !dbg !1602
  store i8* %105, i8** %2, align 8, !dbg !1603
  %106 = load i8*, i8** %2, align 8, !dbg !1604
  store i8* %106, i8** @program_invocation_short_name, align 8, !dbg !1605
  br label %originalBB11
}

declare dso_local i32 @fputs(i8*, %struct._IO_FILE*) #3

; Function Attrs: noreturn nounwind
declare dso_local void @abort() #5

; Function Attrs: nounwind readonly
declare dso_local i8* @strrchr(i8*, i32) #7

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @set_char_quoting(%struct.quoting_options*, i8 signext, i32) #4 !dbg !1613 {
  %4 = alloca %struct.quoting_options*, align 8
  %5 = alloca i8, align 1
  %6 = alloca i32, align 4
  %7 = alloca i8, align 1
  %8 = alloca i32*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  store %struct.quoting_options* %0, %struct.quoting_options** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %4, metadata !1617, metadata !DIExpression()), !dbg !1618
  store i8 %1, i8* %5, align 1
  call void @llvm.dbg.declare(metadata i8* %5, metadata !1619, metadata !DIExpression()), !dbg !1620
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !1621, metadata !DIExpression()), !dbg !1622
  call void @llvm.dbg.declare(metadata i8* %7, metadata !1623, metadata !DIExpression()), !dbg !1624
  %11 = load i8, i8* %5, align 1, !dbg !1625
  store i8 %11, i8* %7, align 1, !dbg !1624
  call void @llvm.dbg.declare(metadata i32** %8, metadata !1626, metadata !DIExpression()), !dbg !1628
  %12 = load %struct.quoting_options*, %struct.quoting_options** %4, align 8, !dbg !1629
  %13 = icmp ne %struct.quoting_options* %12, null, !dbg !1629
  br i1 %13, label %14, label %16, !dbg !1629

14:                                               ; preds = %3
  %15 = load %struct.quoting_options*, %struct.quoting_options** %4, align 8, !dbg !1630
  br label %17, !dbg !1629

16:                                               ; preds = %3
  br label %17, !dbg !1629

17:                                               ; preds = %16, %14
  %18 = phi %struct.quoting_options* [ %15, %14 ], [ @default_quoting_options, %16 ], !dbg !1629
  %19 = load i32, i32* @x.31
  %20 = load i32, i32* @y.32
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %17, %originalBBalteredBB
  %27 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %18, i32 0, i32 2, !dbg !1631
  %28 = getelementptr inbounds [8 x i32], [8 x i32]* %27, i64 0, i64 0, !dbg !1632
  %29 = load i8, i8* %7, align 1, !dbg !1633
  %30 = zext i8 %29 to i64, !dbg !1633
  %31 = udiv i64 %30, 32, !dbg !1634
  %32 = getelementptr inbounds i32, i32* %28, i64 %31, !dbg !1635
  store i32* %32, i32** %8, align 8, !dbg !1628
  call void @llvm.dbg.declare(metadata i32* %9, metadata !1636, metadata !DIExpression()), !dbg !1637
  %33 = load i8, i8* %7, align 1, !dbg !1638
  %34 = zext i8 %33 to i64, !dbg !1638
  %35 = urem i64 %34, 32, !dbg !1639
  %36 = trunc i64 %35 to i32, !dbg !1638
  store i32 %36, i32* %9, align 4, !dbg !1637
  call void @llvm.dbg.declare(metadata i32* %10, metadata !1640, metadata !DIExpression()), !dbg !1641
  %37 = load i32*, i32** %8, align 8, !dbg !1642
  %38 = load i32, i32* %37, align 4, !dbg !1643
  %39 = load i32, i32* %9, align 4, !dbg !1644
  %40 = lshr i32 %38, %39, !dbg !1645
  %41 = and i32 %40, 1, !dbg !1646
  store i32 %41, i32* %10, align 4, !dbg !1641
  %42 = load i32, i32* %6, align 4, !dbg !1647
  %43 = and i32 %42, 1, !dbg !1648
  %44 = load i32, i32* %10, align 4, !dbg !1649
  %45 = xor i32 %43, %44, !dbg !1650
  %46 = load i32, i32* %9, align 4, !dbg !1651
  %47 = shl i32 %45, %46, !dbg !1652
  %48 = load i32*, i32** %8, align 8, !dbg !1653
  %49 = load i32, i32* %48, align 4, !dbg !1654
  %50 = xor i32 %49, %47, !dbg !1654
  store i32 %50, i32* %48, align 4, !dbg !1654
  %51 = load i32, i32* %10, align 4, !dbg !1655
  %52 = load i32, i32* @x.31
  %53 = load i32, i32* @y.32
  %54 = sub i32 %52, 1
  %55 = mul i32 %52, %54
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %53, 10
  %59 = or i1 %57, %58
  br i1 %59, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32 %51, !dbg !1656

originalBBalteredBB:                              ; preds = %originalBB, %17
  %60 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %18, i32 0, i32 2, !dbg !1631
  %61 = getelementptr inbounds [8 x i32], [8 x i32]* %60, i64 0, i64 0, !dbg !1632
  %62 = load i8, i8* %7, align 1, !dbg !1633
  %63 = zext i8 %62 to i64, !dbg !1633
  %_ = shl i64 %63, 32
  %64 = udiv i64 %63, 32, !dbg !1634
  %65 = getelementptr inbounds i32, i32* %61, i64 %64, !dbg !1635
  store i32* %65, i32** %8, align 8, !dbg !1628
  call void @llvm.dbg.declare(metadata !4, metadata !1657, metadata !DIExpression()), !dbg !1637
  %66 = load i8, i8* %7, align 1, !dbg !1638
  %67 = zext i8 %66 to i64, !dbg !1638
  %_1 = sub i64 %67, 32
  %gen = mul i64 %_1, 32
  %_2 = sub i64 0, %67
  %gen3 = add i64 %_2, 32
  %_4 = sub i64 %67, 32
  %gen5 = mul i64 %_4, 32
  %_6 = shl i64 %67, 32
  %68 = urem i64 %67, 32, !dbg !1639
  %69 = trunc i64 %68 to i32, !dbg !1638
  store i32 %69, i32* %9, align 4, !dbg !1637
  call void @llvm.dbg.declare(metadata !4, metadata !1692, metadata !DIExpression()), !dbg !1641
  %70 = load i32*, i32** %8, align 8, !dbg !1642
  %71 = load i32, i32* %70, align 4, !dbg !1643
  %72 = load i32, i32* %9, align 4, !dbg !1644
  %_7 = shl i32 %71, %72
  %_8 = sub i32 %71, %72
  %gen9 = mul i32 %_8, %72
  %_10 = sub i32 %71, %72
  %gen11 = mul i32 %_10, %72
  %73 = lshr i32 %71, %72, !dbg !1645
  %_12 = sub i32 %73, 1
  %gen13 = mul i32 %_12, 1
  %_14 = sub i32 %73, 1
  %gen15 = mul i32 %_14, 1
  %_16 = shl i32 %73, 1
  %74 = and i32 %73, 1, !dbg !1646
  store i32 %74, i32* %10, align 4, !dbg !1641
  %75 = load i32, i32* %6, align 4, !dbg !1647
  %_17 = shl i32 %75, 1
  %76 = and i32 %75, 1, !dbg !1648
  %77 = load i32, i32* %10, align 4, !dbg !1649
  %_18 = sub i32 0, %76
  %gen19 = add i32 %_18, %77
  %78 = xor i32 %76, %77, !dbg !1650
  %79 = load i32, i32* %9, align 4, !dbg !1651
  %_20 = sub i32 0, %78
  %gen21 = add i32 %_20, %79
  %_22 = shl i32 %78, %79
  %_23 = sub i32 %78, %79
  %gen24 = mul i32 %_23, %79
  %_25 = shl i32 %78, %79
  %_26 = sub i32 %78, %79
  %gen27 = mul i32 %_26, %79
  %_28 = sub i32 %78, %79
  %gen29 = mul i32 %_28, %79
  %_30 = shl i32 %78, %79
  %_31 = sub i32 %78, %79
  %gen32 = mul i32 %_31, %79
  %80 = shl i32 %78, %79, !dbg !1652
  %81 = load i32*, i32** %8, align 8, !dbg !1653
  %82 = load i32, i32* %81, align 4, !dbg !1654
  %_33 = sub i32 %82, %80
  %gen34 = mul i32 %_33, %80
  %_35 = shl i32 %82, %80
  %_36 = sub i32 0, %82
  %gen37 = add i32 %_36, %80
  %_38 = sub i32 0, %82
  %gen39 = add i32 %_38, %80
  %_40 = sub i32 0, %82
  %gen41 = add i32 %_40, %80
  %_42 = sub i32 %82, %80
  %gen43 = mul i32 %_42, %80
  %_44 = sub i32 0, %82
  %gen45 = add i32 %_44, %80
  %83 = xor i32 %82, %80, !dbg !1654
  store i32 %83, i32* %81, align 4, !dbg !1654
  %84 = load i32, i32* %10, align 4, !dbg !1655
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quotearg_char_mem(i8*, i64, i8 signext) #4 !dbg !1693 {
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8, align 1
  %7 = alloca %struct.quoting_options, align 8
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !1696, metadata !DIExpression()), !dbg !1697
  store i64 %1, i64* %5, align 8
  call void @llvm.dbg.declare(metadata i64* %5, metadata !1698, metadata !DIExpression()), !dbg !1699
  store i8 %2, i8* %6, align 1
  call void @llvm.dbg.declare(metadata i8* %6, metadata !1700, metadata !DIExpression()), !dbg !1701
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %7, metadata !1702, metadata !DIExpression()), !dbg !1703
  %8 = bitcast %struct.quoting_options* %7 to i8*, !dbg !1704
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 bitcast (%struct.quoting_options* @default_quoting_options to i8*), i64 56, i1 false), !dbg !1704
  %9 = load i8, i8* %6, align 1, !dbg !1705
  %10 = call i32 @set_char_quoting(%struct.quoting_options* %7, i8 signext %9, i32 1), !dbg !1706
  %11 = load i8*, i8** %4, align 8, !dbg !1707
  %12 = load i64, i64* %5, align 8, !dbg !1708
  %13 = call i8* @quotearg_n_options(i32 0, i8* %11, i64 %12, %struct.quoting_options* %7), !dbg !1709
  ret i8* %13, !dbg !1710
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quotearg_n_options(i32, i8*, i64, %struct.quoting_options*) #4 !dbg !1711 {
  %5 = load i32, i32* @x.35
  %6 = load i32, i32* @y.36
  %7 = sub i32 %5, 1
  %8 = mul i32 %5, %7
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %6, 10
  %12 = or i1 %10, %11
  br i1 %12, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %4, %originalBBalteredBB
  %13 = alloca i32, align 4
  %14 = alloca i8*, align 8
  %15 = alloca i64, align 8
  %16 = alloca %struct.quoting_options*, align 8
  %17 = alloca i32, align 4
  %18 = alloca %struct.slotvec*, align 8
  %19 = alloca i8, align 1
  %20 = alloca i32, align 4
  %21 = alloca i64, align 8
  %22 = alloca i8*, align 8
  %23 = alloca i32, align 4
  %24 = alloca i64, align 8
  store i32 %0, i32* %13, align 4
  call void @llvm.dbg.declare(metadata i32* %13, metadata !1716, metadata !DIExpression()), !dbg !1717
  store i8* %1, i8** %14, align 8
  call void @llvm.dbg.declare(metadata i8** %14, metadata !1718, metadata !DIExpression()), !dbg !1719
  store i64 %2, i64* %15, align 8
  call void @llvm.dbg.declare(metadata i64* %15, metadata !1720, metadata !DIExpression()), !dbg !1721
  store %struct.quoting_options* %3, %struct.quoting_options** %16, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %16, metadata !1722, metadata !DIExpression()), !dbg !1723
  call void @llvm.dbg.declare(metadata i32* %17, metadata !1724, metadata !DIExpression()), !dbg !1725
  %25 = call i32* @__errno_location() #15, !dbg !1726
  %26 = load i32, i32* %25, align 4, !dbg !1726
  store i32 %26, i32* %17, align 4, !dbg !1725
  call void @llvm.dbg.declare(metadata %struct.slotvec** %18, metadata !1727, metadata !DIExpression()), !dbg !1728
  %27 = load %struct.slotvec*, %struct.slotvec** @slotvec, align 8, !dbg !1729
  store %struct.slotvec* %27, %struct.slotvec** %18, align 8, !dbg !1728
  %28 = load i32, i32* %13, align 4, !dbg !1730
  %29 = icmp slt i32 %28, 0, !dbg !1732
  %30 = load i32, i32* @x.35
  %31 = load i32, i32* @y.36
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %29, label %38, label %39, !dbg !1733

38:                                               ; preds = %originalBBpart2
  call void @abort() #12, !dbg !1734
  unreachable, !dbg !1734

39:                                               ; preds = %originalBBpart2
  %40 = load i32, i32* @nslots, align 4, !dbg !1735
  %41 = load i32, i32* %13, align 4, !dbg !1737
  %42 = icmp sle i32 %40, %41, !dbg !1738
  br i1 %42, label %43, label %117, !dbg !1739

43:                                               ; preds = %39
  call void @llvm.dbg.declare(metadata i8* %19, metadata !1740, metadata !DIExpression()), !dbg !1742
  %44 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !1743
  %45 = icmp eq %struct.slotvec* %44, @slotvec0, !dbg !1744
  %46 = zext i1 %45 to i8, !dbg !1742
  store i8 %46, i8* %19, align 1, !dbg !1742
  call void @llvm.dbg.declare(metadata i32* %20, metadata !1745, metadata !DIExpression()), !dbg !1746
  store i32 2147483646, i32* %20, align 4, !dbg !1746
  %47 = load i32, i32* %20, align 4, !dbg !1747
  %48 = load i32, i32* %13, align 4, !dbg !1749
  %49 = icmp slt i32 %47, %48, !dbg !1750
  br i1 %49, label %50, label %51, !dbg !1751

50:                                               ; preds = %43
  call void @xalloc_die() #14, !dbg !1752
  unreachable, !dbg !1752

51:                                               ; preds = %43
  %52 = load i8, i8* %19, align 1, !dbg !1753
  %53 = trunc i8 %52 to i1, !dbg !1753
  br i1 %53, label %54, label %71, !dbg !1753

54:                                               ; preds = %51
  %55 = load i32, i32* @x.35
  %56 = load i32, i32* @y.36
  %57 = sub i32 %55, 1
  %58 = mul i32 %55, %57
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %56, 10
  %62 = or i1 %60, %61
  br i1 %62, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %54, %originalBB1alteredBB
  %63 = load i32, i32* @x.35
  %64 = load i32, i32* @y.36
  %65 = sub i32 %63, 1
  %66 = mul i32 %63, %65
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %64, 10
  %70 = or i1 %68, %69
  br i1 %70, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %89, !dbg !1753

71:                                               ; preds = %51
  %72 = load i32, i32* @x.35
  %73 = load i32, i32* @y.36
  %74 = sub i32 %72, 1
  %75 = mul i32 %72, %74
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %73, 10
  %79 = or i1 %77, %78
  br i1 %79, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %71, %originalBB6alteredBB
  %80 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !1754
  %81 = load i32, i32* @x.35
  %82 = load i32, i32* @y.36
  %83 = sub i32 %81, 1
  %84 = mul i32 %81, %83
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %82, 10
  %88 = or i1 %86, %87
  br i1 %88, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %89, !dbg !1753

89:                                               ; preds = %originalBBpart28, %originalBBpart24
  %90 = phi %struct.slotvec* [ null, %originalBBpart24 ], [ %80, %originalBBpart28 ], !dbg !1753
  %91 = bitcast %struct.slotvec* %90 to i8*, !dbg !1753
  %92 = load i32, i32* %13, align 4, !dbg !1755
  %93 = add nsw i32 %92, 1, !dbg !1756
  %94 = sext i32 %93 to i64, !dbg !1757
  %95 = mul i64 %94, 16, !dbg !1758
  %96 = call i8* @xrealloc(i8* %91, i64 %95), !dbg !1759
  %97 = bitcast i8* %96 to %struct.slotvec*, !dbg !1759
  store %struct.slotvec* %97, %struct.slotvec** %18, align 8, !dbg !1760
  store %struct.slotvec* %97, %struct.slotvec** @slotvec, align 8, !dbg !1761
  %98 = load i8, i8* %19, align 1, !dbg !1762
  %99 = trunc i8 %98 to i1, !dbg !1762
  br i1 %99, label %100, label %103, !dbg !1764

100:                                              ; preds = %89
  %101 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !1765
  %102 = bitcast %struct.slotvec* %101 to i8*, !dbg !1766
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %102, i8* align 8 bitcast (%struct.slotvec* @slotvec0 to i8*), i64 16, i1 false), !dbg !1766
  br label %103, !dbg !1767

103:                                              ; preds = %100, %89
  %104 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !1768
  %105 = load i32, i32* @nslots, align 4, !dbg !1769
  %106 = sext i32 %105 to i64, !dbg !1770
  %107 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %104, i64 %106, !dbg !1770
  %108 = bitcast %struct.slotvec* %107 to i8*, !dbg !1771
  %109 = load i32, i32* %13, align 4, !dbg !1772
  %110 = add nsw i32 %109, 1, !dbg !1773
  %111 = load i32, i32* @nslots, align 4, !dbg !1774
  %112 = sub nsw i32 %110, %111, !dbg !1775
  %113 = sext i32 %112 to i64, !dbg !1776
  %114 = mul i64 %113, 16, !dbg !1777
  call void @llvm.memset.p0i8.i64(i8* align 8 %108, i8 0, i64 %114, i1 false), !dbg !1771
  %115 = load i32, i32* %13, align 4, !dbg !1778
  %116 = add nsw i32 %115, 1, !dbg !1779
  store i32 %116, i32* @nslots, align 4, !dbg !1780
  br label %117, !dbg !1781

117:                                              ; preds = %103, %39
  call void @llvm.dbg.declare(metadata i64* %21, metadata !1782, metadata !DIExpression()), !dbg !1784
  %118 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !1785
  %119 = load i32, i32* %13, align 4, !dbg !1786
  %120 = sext i32 %119 to i64, !dbg !1785
  %121 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %118, i64 %120, !dbg !1785
  %122 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %121, i32 0, i32 0, !dbg !1787
  %123 = load i64, i64* %122, align 8, !dbg !1787
  store i64 %123, i64* %21, align 8, !dbg !1784
  call void @llvm.dbg.declare(metadata i8** %22, metadata !1788, metadata !DIExpression()), !dbg !1789
  %124 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !1790
  %125 = load i32, i32* %13, align 4, !dbg !1791
  %126 = sext i32 %125 to i64, !dbg !1790
  %127 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %124, i64 %126, !dbg !1790
  %128 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %127, i32 0, i32 1, !dbg !1792
  %129 = load i8*, i8** %128, align 8, !dbg !1792
  store i8* %129, i8** %22, align 8, !dbg !1789
  call void @llvm.dbg.declare(metadata i32* %23, metadata !1793, metadata !DIExpression()), !dbg !1794
  %130 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !1795
  %131 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %130, i32 0, i32 1, !dbg !1796
  %132 = load i32, i32* %131, align 4, !dbg !1796
  %133 = or i32 %132, 1, !dbg !1797
  store i32 %133, i32* %23, align 4, !dbg !1794
  call void @llvm.dbg.declare(metadata i64* %24, metadata !1798, metadata !DIExpression()), !dbg !1799
  %134 = load i8*, i8** %22, align 8, !dbg !1800
  %135 = load i64, i64* %21, align 8, !dbg !1801
  %136 = load i8*, i8** %14, align 8, !dbg !1802
  %137 = load i64, i64* %15, align 8, !dbg !1803
  %138 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !1804
  %139 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %138, i32 0, i32 0, !dbg !1805
  %140 = load i32, i32* %139, align 8, !dbg !1805
  %141 = load i32, i32* %23, align 4, !dbg !1806
  %142 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !1807
  %143 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %142, i32 0, i32 2, !dbg !1808
  %144 = getelementptr inbounds [8 x i32], [8 x i32]* %143, i64 0, i64 0, !dbg !1807
  %145 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !1809
  %146 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %145, i32 0, i32 3, !dbg !1810
  %147 = load i8*, i8** %146, align 8, !dbg !1810
  %148 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !1811
  %149 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %148, i32 0, i32 4, !dbg !1812
  %150 = load i8*, i8** %149, align 8, !dbg !1812
  %151 = call i64 @quotearg_buffer_restyled(i8* %134, i64 %135, i8* %136, i64 %137, i32 %140, i32 %141, i32* %144, i8* %147, i8* %150), !dbg !1813
  store i64 %151, i64* %24, align 8, !dbg !1799
  %152 = load i64, i64* %21, align 8, !dbg !1814
  %153 = load i64, i64* %24, align 8, !dbg !1816
  %154 = icmp ule i64 %152, %153, !dbg !1817
  br i1 %154, label %155, label %209, !dbg !1818

155:                                              ; preds = %117
  %156 = load i64, i64* %24, align 8, !dbg !1819
  %157 = add i64 %156, 1, !dbg !1821
  store i64 %157, i64* %21, align 8, !dbg !1822
  %158 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !1823
  %159 = load i32, i32* %13, align 4, !dbg !1824
  %160 = sext i32 %159 to i64, !dbg !1823
  %161 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %158, i64 %160, !dbg !1823
  %162 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %161, i32 0, i32 0, !dbg !1825
  store i64 %157, i64* %162, align 8, !dbg !1826
  %163 = load i8*, i8** %22, align 8, !dbg !1827
  %164 = icmp ne i8* %163, getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i64 0, i64 0), !dbg !1829
  br i1 %164, label %165, label %183, !dbg !1830

165:                                              ; preds = %155
  %166 = load i32, i32* @x.35
  %167 = load i32, i32* @y.36
  %168 = sub i32 %166, 1
  %169 = mul i32 %166, %168
  %170 = urem i32 %169, 2
  %171 = icmp eq i32 %170, 0
  %172 = icmp slt i32 %167, 10
  %173 = or i1 %171, %172
  br i1 %173, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %165, %originalBB10alteredBB
  %174 = load i8*, i8** %22, align 8, !dbg !1831
  call void @free(i8* %174) #10, !dbg !1832
  %175 = load i32, i32* @x.35
  %176 = load i32, i32* @y.36
  %177 = sub i32 %175, 1
  %178 = mul i32 %175, %177
  %179 = urem i32 %178, 2
  %180 = icmp eq i32 %179, 0
  %181 = icmp slt i32 %176, 10
  %182 = or i1 %180, %181
  br i1 %182, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %183, !dbg !1832

183:                                              ; preds = %originalBBpart212, %155
  %184 = load i64, i64* %21, align 8, !dbg !1833
  %185 = call noalias i8* @xcharalloc(i64 %184), !dbg !1834
  store i8* %185, i8** %22, align 8, !dbg !1835
  %186 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !1836
  %187 = load i32, i32* %13, align 4, !dbg !1837
  %188 = sext i32 %187 to i64, !dbg !1836
  %189 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %186, i64 %188, !dbg !1836
  %190 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %189, i32 0, i32 1, !dbg !1838
  store i8* %185, i8** %190, align 8, !dbg !1839
  %191 = load i8*, i8** %22, align 8, !dbg !1840
  %192 = load i64, i64* %21, align 8, !dbg !1841
  %193 = load i8*, i8** %14, align 8, !dbg !1842
  %194 = load i64, i64* %15, align 8, !dbg !1843
  %195 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !1844
  %196 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %195, i32 0, i32 0, !dbg !1845
  %197 = load i32, i32* %196, align 8, !dbg !1845
  %198 = load i32, i32* %23, align 4, !dbg !1846
  %199 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !1847
  %200 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %199, i32 0, i32 2, !dbg !1848
  %201 = getelementptr inbounds [8 x i32], [8 x i32]* %200, i64 0, i64 0, !dbg !1847
  %202 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !1849
  %203 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %202, i32 0, i32 3, !dbg !1850
  %204 = load i8*, i8** %203, align 8, !dbg !1850
  %205 = load %struct.quoting_options*, %struct.quoting_options** %16, align 8, !dbg !1851
  %206 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %205, i32 0, i32 4, !dbg !1852
  %207 = load i8*, i8** %206, align 8, !dbg !1852
  %208 = call i64 @quotearg_buffer_restyled(i8* %191, i64 %192, i8* %193, i64 %194, i32 %197, i32 %198, i32* %201, i8* %204, i8* %207), !dbg !1853
  br label %209, !dbg !1854

209:                                              ; preds = %183, %117
  %210 = load i32, i32* @x.35
  %211 = load i32, i32* @y.36
  %212 = sub i32 %210, 1
  %213 = mul i32 %210, %212
  %214 = urem i32 %213, 2
  %215 = icmp eq i32 %214, 0
  %216 = icmp slt i32 %211, 10
  %217 = or i1 %215, %216
  br i1 %217, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %209, %originalBB14alteredBB
  %218 = load i32, i32* %17, align 4, !dbg !1855
  %219 = call i32* @__errno_location() #15, !dbg !1856
  store i32 %218, i32* %219, align 4, !dbg !1857
  %220 = load i8*, i8** %22, align 8, !dbg !1858
  %221 = load i32, i32* @x.35
  %222 = load i32, i32* @y.36
  %223 = sub i32 %221, 1
  %224 = mul i32 %221, %223
  %225 = urem i32 %224, 2
  %226 = icmp eq i32 %225, 0
  %227 = icmp slt i32 %222, 10
  %228 = or i1 %226, %227
  br i1 %228, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  ret i8* %220, !dbg !1859

originalBBalteredBB:                              ; preds = %originalBB, %4
  %229 = alloca i32, align 4
  %230 = alloca i8*, align 8
  %231 = alloca i64, align 8
  %232 = alloca %struct.quoting_options*, align 8
  %233 = alloca i32, align 4
  %234 = alloca %struct.slotvec*, align 8
  %235 = alloca i8, align 1
  %236 = alloca i32, align 4
  %237 = alloca i64, align 8
  %238 = alloca i8*, align 8
  %239 = alloca i32, align 4
  %240 = alloca i64, align 8
  store i32 %0, i32* %229, align 4
  call void @llvm.dbg.declare(metadata i32* %229, metadata !1860, metadata !DIExpression()), !dbg !1717
  store i8* %1, i8** %230, align 8
  call void @llvm.dbg.declare(metadata i8** %230, metadata !1896, metadata !DIExpression()), !dbg !1719
  store i64 %2, i64* %231, align 8
  call void @llvm.dbg.declare(metadata i64* %231, metadata !1897, metadata !DIExpression()), !dbg !1721
  store %struct.quoting_options* %3, %struct.quoting_options** %232, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %232, metadata !1898, metadata !DIExpression()), !dbg !1723
  call void @llvm.dbg.declare(metadata i32* %233, metadata !1899, metadata !DIExpression()), !dbg !1725
  %241 = call i32* @__errno_location() #15, !dbg !1726
  %242 = load i32, i32* %241, align 4, !dbg !1726
  store i32 %242, i32* %233, align 4, !dbg !1725
  call void @llvm.dbg.declare(metadata %struct.slotvec** %234, metadata !1900, metadata !DIExpression()), !dbg !1728
  %243 = load %struct.slotvec*, %struct.slotvec** @slotvec, align 8, !dbg !1729
  store %struct.slotvec* %243, %struct.slotvec** %234, align 8, !dbg !1728
  %244 = load i32, i32* %229, align 4, !dbg !1730
  %245 = icmp slt i32 %244, 0, !dbg !1732
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %54
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %71
  %246 = load %struct.slotvec*, %struct.slotvec** %18, align 8, !dbg !1754
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %165
  %247 = load i8*, i8** %22, align 8, !dbg !1831
  call void @free(i8* %247) #10, !dbg !1832
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %209
  %248 = load i32, i32* %17, align 4, !dbg !1855
  %249 = call i32* @__errno_location() #15, !dbg !1856
  store i32 %248, i32* %249, align 4, !dbg !1857
  %250 = load i8*, i8** %22, align 8, !dbg !1858
  br label %originalBB14
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @quotearg_buffer_restyled(i8*, i64, i8*, i64, i32, i32, i32*, i8*, i8*) #4 !dbg !1901 {
  %10 = load i32, i32* @x.37
  %11 = load i32, i32* @y.38
  %12 = sub i32 %10, 1
  %13 = mul i32 %10, %12
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  %16 = icmp slt i32 %11, 10
  %17 = or i1 %15, %16
  br i1 %17, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %9, %originalBBalteredBB
  %18 = alloca i64, align 8
  %19 = alloca i8*, align 8
  %20 = alloca i64, align 8
  %21 = alloca i8*, align 8
  %22 = alloca i64, align 8
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32*, align 8
  %26 = alloca i8*, align 8
  %27 = alloca i8*, align 8
  %28 = alloca i64, align 8
  %29 = alloca i64, align 8
  %30 = alloca i64, align 8
  %31 = alloca i8*, align 8
  %32 = alloca i64, align 8
  %33 = alloca i8, align 1
  %34 = alloca i8, align 1
  %35 = alloca i8, align 1
  %36 = alloca i8, align 1
  %37 = alloca i8, align 1
  %38 = alloca i8, align 1
  %39 = alloca i8, align 1
  %40 = alloca i8, align 1
  %41 = alloca i8, align 1
  %42 = alloca i8, align 1
  %43 = alloca i8, align 1
  %44 = alloca i64, align 8
  %45 = alloca i8, align 1
  %46 = alloca %struct.__mbstate_t, align 4
  %47 = alloca i32, align 4
  %48 = alloca i64, align 8
  %49 = alloca i64, align 8
  %50 = alloca i64, align 8
  store i8* %0, i8** %19, align 8
  call void @llvm.dbg.declare(metadata i8** %19, metadata !1906, metadata !DIExpression()), !dbg !1907
  store i64 %1, i64* %20, align 8
  call void @llvm.dbg.declare(metadata i64* %20, metadata !1908, metadata !DIExpression()), !dbg !1909
  store i8* %2, i8** %21, align 8
  call void @llvm.dbg.declare(metadata i8** %21, metadata !1910, metadata !DIExpression()), !dbg !1911
  store i64 %3, i64* %22, align 8
  call void @llvm.dbg.declare(metadata i64* %22, metadata !1912, metadata !DIExpression()), !dbg !1913
  store i32 %4, i32* %23, align 4
  call void @llvm.dbg.declare(metadata i32* %23, metadata !1914, metadata !DIExpression()), !dbg !1915
  store i32 %5, i32* %24, align 4
  call void @llvm.dbg.declare(metadata i32* %24, metadata !1916, metadata !DIExpression()), !dbg !1917
  store i32* %6, i32** %25, align 8
  call void @llvm.dbg.declare(metadata i32** %25, metadata !1918, metadata !DIExpression()), !dbg !1919
  store i8* %7, i8** %26, align 8
  call void @llvm.dbg.declare(metadata i8** %26, metadata !1920, metadata !DIExpression()), !dbg !1921
  store i8* %8, i8** %27, align 8
  call void @llvm.dbg.declare(metadata i8** %27, metadata !1922, metadata !DIExpression()), !dbg !1923
  call void @llvm.dbg.declare(metadata i64* %28, metadata !1924, metadata !DIExpression()), !dbg !1925
  call void @llvm.dbg.declare(metadata i64* %29, metadata !1926, metadata !DIExpression()), !dbg !1927
  store i64 0, i64* %29, align 8, !dbg !1927
  call void @llvm.dbg.declare(metadata i64* %30, metadata !1928, metadata !DIExpression()), !dbg !1929
  store i64 0, i64* %30, align 8, !dbg !1929
  call void @llvm.dbg.declare(metadata i8** %31, metadata !1930, metadata !DIExpression()), !dbg !1931
  store i8* null, i8** %31, align 8, !dbg !1931
  call void @llvm.dbg.declare(metadata i64* %32, metadata !1932, metadata !DIExpression()), !dbg !1933
  store i64 0, i64* %32, align 8, !dbg !1933
  call void @llvm.dbg.declare(metadata i8* %33, metadata !1934, metadata !DIExpression()), !dbg !1935
  store i8 0, i8* %33, align 1, !dbg !1935
  call void @llvm.dbg.declare(metadata i8* %34, metadata !1936, metadata !DIExpression()), !dbg !1937
  %51 = call i64 @__ctype_get_mb_cur_max() #10, !dbg !1938
  %52 = icmp eq i64 %51, 1, !dbg !1939
  %53 = zext i1 %52 to i8, !dbg !1937
  store i8 %53, i8* %34, align 1, !dbg !1937
  call void @llvm.dbg.declare(metadata i8* %35, metadata !1940, metadata !DIExpression()), !dbg !1941
  %54 = load i32, i32* %24, align 4, !dbg !1942
  %55 = and i32 %54, 2, !dbg !1943
  %56 = icmp ne i32 %55, 0, !dbg !1944
  %57 = zext i1 %56 to i8, !dbg !1941
  store i8 %57, i8* %35, align 1, !dbg !1941
  call void @llvm.dbg.declare(metadata i8* %36, metadata !1945, metadata !DIExpression()), !dbg !1946
  store i8 0, i8* %36, align 1, !dbg !1946
  call void @llvm.dbg.declare(metadata i8* %37, metadata !1947, metadata !DIExpression()), !dbg !1948
  store i8 0, i8* %37, align 1, !dbg !1948
  call void @llvm.dbg.declare(metadata i8* %38, metadata !1949, metadata !DIExpression()), !dbg !1950
  store i8 1, i8* %38, align 1, !dbg !1950
  %58 = load i32, i32* @x.37
  %59 = load i32, i32* @y.38
  %60 = sub i32 %58, 1
  %61 = mul i32 %58, %60
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %59, 10
  %65 = or i1 %63, %64
  br i1 %65, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %66, !dbg !1951

66:                                               ; preds = %originalBBpart2603, %originalBBpart2
  call void @llvm.dbg.label(metadata !1952), !dbg !1953
  %67 = load i32, i32* @x.37
  %68 = load i32, i32* @y.38
  %69 = sub i32 %67, 1
  %70 = mul i32 %67, %69
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %68, 10
  %74 = or i1 %72, %73
  br i1 %74, label %originalBB8, label %originalBB8alteredBB

originalBB8:                                      ; preds = %66, %originalBB8alteredBB
  %75 = load i32, i32* %23, align 4, !dbg !1954
  %76 = load i32, i32* @x.37
  %77 = load i32, i32* @y.38
  %78 = sub i32 %76, 1
  %79 = mul i32 %76, %78
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %77, 10
  %83 = or i1 %81, %82
  br i1 %83, label %originalBBpart210, label %originalBB8alteredBB

originalBBpart210:                                ; preds = %originalBB8
  switch i32 %75, label %312 [
    i32 6, label %84
    i32 5, label %101
    i32 7, label %118
    i32 8, label %119
    i32 9, label %119
    i32 10, label %119
    i32 3, label %207
    i32 1, label %208
    i32 4, label %209
    i32 2, label %246
    i32 0, label %311
  ], !dbg !1955

84:                                               ; preds = %originalBBpart210
  %85 = load i32, i32* @x.37
  %86 = load i32, i32* @y.38
  %87 = sub i32 %85, 1
  %88 = mul i32 %85, %87
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %86, 10
  %92 = or i1 %90, %91
  br i1 %92, label %originalBB12, label %originalBB12alteredBB

originalBB12:                                     ; preds = %84, %originalBB12alteredBB
  store i32 5, i32* %23, align 4, !dbg !1956
  store i8 1, i8* %35, align 1, !dbg !1958
  %93 = load i32, i32* @x.37
  %94 = load i32, i32* @y.38
  %95 = sub i32 %93, 1
  %96 = mul i32 %93, %95
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %94, 10
  %100 = or i1 %98, %99
  br i1 %100, label %originalBBpart214, label %originalBB12alteredBB

originalBBpart214:                                ; preds = %originalBB12
  br label %101, !dbg !1959

101:                                              ; preds = %originalBBpart214, %originalBBpart210
  %102 = load i8, i8* %35, align 1, !dbg !1960
  %103 = trunc i8 %102 to i1, !dbg !1960
  br i1 %103, label %117, label %104, !dbg !1962

104:                                              ; preds = %101
  br label %105, !dbg !1963

105:                                              ; preds = %104
  %106 = load i64, i64* %29, align 8, !dbg !1964
  %107 = load i64, i64* %20, align 8, !dbg !1964
  %108 = icmp ult i64 %106, %107, !dbg !1964
  br i1 %108, label %109, label %113, !dbg !1967

109:                                              ; preds = %105
  %110 = load i8*, i8** %19, align 8, !dbg !1964
  %111 = load i64, i64* %29, align 8, !dbg !1964
  %112 = getelementptr inbounds i8, i8* %110, i64 %111, !dbg !1964
  store i8 34, i8* %112, align 1, !dbg !1964
  br label %113, !dbg !1964

113:                                              ; preds = %109, %105
  %114 = load i64, i64* %29, align 8, !dbg !1967
  %115 = add i64 %114, 1, !dbg !1967
  store i64 %115, i64* %29, align 8, !dbg !1967
  br label %116, !dbg !1967

116:                                              ; preds = %113
  br label %117, !dbg !1967

117:                                              ; preds = %116, %101
  store i8 1, i8* %33, align 1, !dbg !1968
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.85, i64 0, i64 0), i8** %31, align 8, !dbg !1969
  store i64 1, i64* %32, align 8, !dbg !1970
  br label %329, !dbg !1971

118:                                              ; preds = %originalBBpart210
  store i8 1, i8* %33, align 1, !dbg !1972
  store i8 0, i8* %35, align 1, !dbg !1973
  br label %329, !dbg !1974

119:                                              ; preds = %originalBBpart210, %originalBBpart210, %originalBBpart210
  %120 = load i32, i32* %23, align 4, !dbg !1975
  %121 = icmp ne i32 %120, 10, !dbg !1978
  br i1 %121, label %122, label %127, !dbg !1979

122:                                              ; preds = %119
  %123 = load i32, i32* %23, align 4, !dbg !1980
  %124 = call i8* @gettext_quote(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11.86, i64 0, i64 0), i32 %123), !dbg !1982
  store i8* %124, i8** %26, align 8, !dbg !1983
  %125 = load i32, i32* %23, align 4, !dbg !1984
  %126 = call i8* @gettext_quote(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.87, i64 0, i64 0), i32 %125), !dbg !1985
  store i8* %126, i8** %27, align 8, !dbg !1986
  br label %127, !dbg !1987

127:                                              ; preds = %122, %119
  %128 = load i8, i8* %35, align 1, !dbg !1988
  %129 = trunc i8 %128 to i1, !dbg !1988
  br i1 %129, label %203, label %130, !dbg !1990

130:                                              ; preds = %127
  %131 = load i8*, i8** %26, align 8, !dbg !1991
  store i8* %131, i8** %31, align 8, !dbg !1993
  br label %132, !dbg !1994

132:                                              ; preds = %originalBBpart241, %130
  %133 = load i8*, i8** %31, align 8, !dbg !1995
  %134 = load i8, i8* %133, align 1, !dbg !1997
  %135 = icmp ne i8 %134, 0, !dbg !1998
  br i1 %135, label %136, label %202, !dbg !1998

136:                                              ; preds = %132
  br label %137, !dbg !1999

137:                                              ; preds = %136
  %138 = load i64, i64* %29, align 8, !dbg !2000
  %139 = load i64, i64* %20, align 8, !dbg !2000
  %140 = icmp ult i64 %138, %139, !dbg !2000
  br i1 %140, label %141, label %163, !dbg !2003

141:                                              ; preds = %137
  %142 = load i32, i32* @x.37
  %143 = load i32, i32* @y.38
  %144 = sub i32 %142, 1
  %145 = mul i32 %142, %144
  %146 = urem i32 %145, 2
  %147 = icmp eq i32 %146, 0
  %148 = icmp slt i32 %143, 10
  %149 = or i1 %147, %148
  br i1 %149, label %originalBB16, label %originalBB16alteredBB

originalBB16:                                     ; preds = %141, %originalBB16alteredBB
  %150 = load i8*, i8** %31, align 8, !dbg !2000
  %151 = load i8, i8* %150, align 1, !dbg !2000
  %152 = load i8*, i8** %19, align 8, !dbg !2000
  %153 = load i64, i64* %29, align 8, !dbg !2000
  %154 = getelementptr inbounds i8, i8* %152, i64 %153, !dbg !2000
  store i8 %151, i8* %154, align 1, !dbg !2000
  %155 = load i32, i32* @x.37
  %156 = load i32, i32* @y.38
  %157 = sub i32 %155, 1
  %158 = mul i32 %155, %157
  %159 = urem i32 %158, 2
  %160 = icmp eq i32 %159, 0
  %161 = icmp slt i32 %156, 10
  %162 = or i1 %160, %161
  br i1 %162, label %originalBBpart218, label %originalBB16alteredBB

originalBBpart218:                                ; preds = %originalBB16
  br label %163, !dbg !2000

163:                                              ; preds = %originalBBpart218, %137
  %164 = load i32, i32* @x.37
  %165 = load i32, i32* @y.38
  %166 = sub i32 %164, 1
  %167 = mul i32 %164, %166
  %168 = urem i32 %167, 2
  %169 = icmp eq i32 %168, 0
  %170 = icmp slt i32 %165, 10
  %171 = or i1 %169, %170
  br i1 %171, label %originalBB20, label %originalBB20alteredBB

originalBB20:                                     ; preds = %163, %originalBB20alteredBB
  %172 = load i64, i64* %29, align 8, !dbg !2003
  %173 = add i64 %172, 1, !dbg !2003
  store i64 %173, i64* %29, align 8, !dbg !2003
  %174 = load i32, i32* @x.37
  %175 = load i32, i32* @y.38
  %176 = sub i32 %174, 1
  %177 = mul i32 %174, %176
  %178 = urem i32 %177, 2
  %179 = icmp eq i32 %178, 0
  %180 = icmp slt i32 %175, 10
  %181 = or i1 %179, %180
  br i1 %181, label %originalBBpart237, label %originalBB20alteredBB

originalBBpart237:                                ; preds = %originalBB20
  br label %182, !dbg !2003

182:                                              ; preds = %originalBBpart237
  br label %183, !dbg !2003

183:                                              ; preds = %182
  %184 = load i32, i32* @x.37
  %185 = load i32, i32* @y.38
  %186 = sub i32 %184, 1
  %187 = mul i32 %184, %186
  %188 = urem i32 %187, 2
  %189 = icmp eq i32 %188, 0
  %190 = icmp slt i32 %185, 10
  %191 = or i1 %189, %190
  br i1 %191, label %originalBB39, label %originalBB39alteredBB

originalBB39:                                     ; preds = %183, %originalBB39alteredBB
  %192 = load i8*, i8** %31, align 8, !dbg !2004
  %193 = getelementptr inbounds i8, i8* %192, i32 1, !dbg !2004
  store i8* %193, i8** %31, align 8, !dbg !2004
  %194 = load i32, i32* @x.37
  %195 = load i32, i32* @y.38
  %196 = sub i32 %194, 1
  %197 = mul i32 %194, %196
  %198 = urem i32 %197, 2
  %199 = icmp eq i32 %198, 0
  %200 = icmp slt i32 %195, 10
  %201 = or i1 %199, %200
  br i1 %201, label %originalBBpart241, label %originalBB39alteredBB

originalBBpart241:                                ; preds = %originalBB39
  br label %132, !dbg !2005, !llvm.loop !2006

202:                                              ; preds = %132
  br label %203, !dbg !2007

203:                                              ; preds = %202, %127
  store i8 1, i8* %33, align 1, !dbg !2008
  %204 = load i8*, i8** %27, align 8, !dbg !2009
  store i8* %204, i8** %31, align 8, !dbg !2010
  %205 = load i8*, i8** %31, align 8, !dbg !2011
  %206 = call i64 @strlen(i8* %205) #13, !dbg !2012
  store i64 %206, i64* %32, align 8, !dbg !2013
  br label %329, !dbg !2014

207:                                              ; preds = %originalBBpart210
  store i8 1, i8* %33, align 1, !dbg !2015
  br label %208, !dbg !2016

208:                                              ; preds = %207, %originalBBpart210
  store i8 1, i8* %35, align 1, !dbg !2017
  br label %209, !dbg !2018

209:                                              ; preds = %208, %originalBBpart210
  %210 = load i32, i32* @x.37
  %211 = load i32, i32* @y.38
  %212 = sub i32 %210, 1
  %213 = mul i32 %210, %212
  %214 = urem i32 %213, 2
  %215 = icmp eq i32 %214, 0
  %216 = icmp slt i32 %211, 10
  %217 = or i1 %215, %216
  br i1 %217, label %originalBB43, label %originalBB43alteredBB

originalBB43:                                     ; preds = %209, %originalBB43alteredBB
  %218 = load i8, i8* %35, align 1, !dbg !2019
  %219 = trunc i8 %218 to i1, !dbg !2019
  %220 = load i32, i32* @x.37
  %221 = load i32, i32* @y.38
  %222 = sub i32 %220, 1
  %223 = mul i32 %220, %222
  %224 = urem i32 %223, 2
  %225 = icmp eq i32 %224, 0
  %226 = icmp slt i32 %221, 10
  %227 = or i1 %225, %226
  br i1 %227, label %originalBBpart245, label %originalBB43alteredBB

originalBBpart245:                                ; preds = %originalBB43
  br i1 %219, label %229, label %228, !dbg !2021

228:                                              ; preds = %originalBBpart245
  store i8 1, i8* %33, align 1, !dbg !2022
  br label %229, !dbg !2023

229:                                              ; preds = %228, %originalBBpart245
  %230 = load i32, i32* @x.37
  %231 = load i32, i32* @y.38
  %232 = sub i32 %230, 1
  %233 = mul i32 %230, %232
  %234 = urem i32 %233, 2
  %235 = icmp eq i32 %234, 0
  %236 = icmp slt i32 %231, 10
  %237 = or i1 %235, %236
  br i1 %237, label %originalBB47, label %originalBB47alteredBB

originalBB47:                                     ; preds = %229, %originalBB47alteredBB
  %238 = load i32, i32* @x.37
  %239 = load i32, i32* @y.38
  %240 = sub i32 %238, 1
  %241 = mul i32 %238, %240
  %242 = urem i32 %241, 2
  %243 = icmp eq i32 %242, 0
  %244 = icmp slt i32 %239, 10
  %245 = or i1 %243, %244
  br i1 %245, label %originalBBpart249, label %originalBB47alteredBB

originalBBpart249:                                ; preds = %originalBB47
  br label %246, !dbg !2024

246:                                              ; preds = %originalBBpart249, %originalBBpart210
  store i32 2, i32* %23, align 4, !dbg !2025
  %247 = load i8, i8* %35, align 1, !dbg !2026
  %248 = trunc i8 %247 to i1, !dbg !2026
  br i1 %248, label %310, label %249, !dbg !2028

249:                                              ; preds = %246
  %250 = load i32, i32* @x.37
  %251 = load i32, i32* @y.38
  %252 = sub i32 %250, 1
  %253 = mul i32 %250, %252
  %254 = urem i32 %253, 2
  %255 = icmp eq i32 %254, 0
  %256 = icmp slt i32 %251, 10
  %257 = or i1 %255, %256
  br i1 %257, label %originalBB51, label %originalBB51alteredBB

originalBB51:                                     ; preds = %249, %originalBB51alteredBB
  %258 = load i32, i32* @x.37
  %259 = load i32, i32* @y.38
  %260 = sub i32 %258, 1
  %261 = mul i32 %258, %260
  %262 = urem i32 %261, 2
  %263 = icmp eq i32 %262, 0
  %264 = icmp slt i32 %259, 10
  %265 = or i1 %263, %264
  br i1 %265, label %originalBBpart253, label %originalBB51alteredBB

originalBBpart253:                                ; preds = %originalBB51
  br label %266, !dbg !2029

266:                                              ; preds = %originalBBpart253
  %267 = load i64, i64* %29, align 8, !dbg !2030
  %268 = load i64, i64* %20, align 8, !dbg !2030
  %269 = icmp ult i64 %267, %268, !dbg !2030
  br i1 %269, label %270, label %290, !dbg !2033

270:                                              ; preds = %266
  %271 = load i32, i32* @x.37
  %272 = load i32, i32* @y.38
  %273 = sub i32 %271, 1
  %274 = mul i32 %271, %273
  %275 = urem i32 %274, 2
  %276 = icmp eq i32 %275, 0
  %277 = icmp slt i32 %272, 10
  %278 = or i1 %276, %277
  br i1 %278, label %originalBB55, label %originalBB55alteredBB

originalBB55:                                     ; preds = %270, %originalBB55alteredBB
  %279 = load i8*, i8** %19, align 8, !dbg !2030
  %280 = load i64, i64* %29, align 8, !dbg !2030
  %281 = getelementptr inbounds i8, i8* %279, i64 %280, !dbg !2030
  store i8 39, i8* %281, align 1, !dbg !2030
  %282 = load i32, i32* @x.37
  %283 = load i32, i32* @y.38
  %284 = sub i32 %282, 1
  %285 = mul i32 %282, %284
  %286 = urem i32 %285, 2
  %287 = icmp eq i32 %286, 0
  %288 = icmp slt i32 %283, 10
  %289 = or i1 %287, %288
  br i1 %289, label %originalBBpart257, label %originalBB55alteredBB

originalBBpart257:                                ; preds = %originalBB55
  br label %290, !dbg !2030

290:                                              ; preds = %originalBBpart257, %266
  %291 = load i64, i64* %29, align 8, !dbg !2033
  %292 = add i64 %291, 1, !dbg !2033
  store i64 %292, i64* %29, align 8, !dbg !2033
  br label %293, !dbg !2033

293:                                              ; preds = %290
  %294 = load i32, i32* @x.37
  %295 = load i32, i32* @y.38
  %296 = sub i32 %294, 1
  %297 = mul i32 %294, %296
  %298 = urem i32 %297, 2
  %299 = icmp eq i32 %298, 0
  %300 = icmp slt i32 %295, 10
  %301 = or i1 %299, %300
  br i1 %301, label %originalBB59, label %originalBB59alteredBB

originalBB59:                                     ; preds = %293, %originalBB59alteredBB
  %302 = load i32, i32* @x.37
  %303 = load i32, i32* @y.38
  %304 = sub i32 %302, 1
  %305 = mul i32 %302, %304
  %306 = urem i32 %305, 2
  %307 = icmp eq i32 %306, 0
  %308 = icmp slt i32 %303, 10
  %309 = or i1 %307, %308
  br i1 %309, label %originalBBpart261, label %originalBB59alteredBB

originalBBpart261:                                ; preds = %originalBB59
  br label %310, !dbg !2033

310:                                              ; preds = %originalBBpart261, %246
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.87, i64 0, i64 0), i8** %31, align 8, !dbg !2034
  store i64 1, i64* %32, align 8, !dbg !2035
  br label %329, !dbg !2036

311:                                              ; preds = %originalBBpart210
  store i8 0, i8* %35, align 1, !dbg !2037
  br label %329, !dbg !2038

312:                                              ; preds = %originalBBpart210
  %313 = load i32, i32* @x.37
  %314 = load i32, i32* @y.38
  %315 = sub i32 %313, 1
  %316 = mul i32 %313, %315
  %317 = urem i32 %316, 2
  %318 = icmp eq i32 %317, 0
  %319 = icmp slt i32 %314, 10
  %320 = or i1 %318, %319
  br i1 %320, label %originalBB63, label %originalBB63alteredBB

originalBB63:                                     ; preds = %312, %originalBB63alteredBB
  call void @abort() #12, !dbg !2039
  %321 = load i32, i32* @x.37
  %322 = load i32, i32* @y.38
  %323 = sub i32 %321, 1
  %324 = mul i32 %321, %323
  %325 = urem i32 %324, 2
  %326 = icmp eq i32 %325, 0
  %327 = icmp slt i32 %322, 10
  %328 = or i1 %326, %327
  br i1 %328, label %originalBBpart265, label %originalBB63alteredBB

originalBBpart265:                                ; preds = %originalBB63
  unreachable, !dbg !2039

329:                                              ; preds = %311, %310, %203, %118, %117
  store i64 0, i64* %28, align 8, !dbg !2040
  br label %330, !dbg !2042

330:                                              ; preds = %2713, %329
  %331 = load i32, i32* @x.37
  %332 = load i32, i32* @y.38
  %333 = sub i32 %331, 1
  %334 = mul i32 %331, %333
  %335 = urem i32 %334, 2
  %336 = icmp eq i32 %335, 0
  %337 = icmp slt i32 %332, 10
  %338 = or i1 %336, %337
  br i1 %338, label %originalBB67, label %originalBB67alteredBB

originalBB67:                                     ; preds = %330, %originalBB67alteredBB
  %339 = load i64, i64* %22, align 8, !dbg !2043
  %340 = icmp eq i64 %339, -1, !dbg !2045
  %341 = load i32, i32* @x.37
  %342 = load i32, i32* @y.38
  %343 = sub i32 %341, 1
  %344 = mul i32 %341, %343
  %345 = urem i32 %344, 2
  %346 = icmp eq i32 %345, 0
  %347 = icmp slt i32 %342, 10
  %348 = or i1 %346, %347
  br i1 %348, label %originalBBpart269, label %originalBB67alteredBB

originalBBpart269:                                ; preds = %originalBB67
  br i1 %340, label %349, label %373, !dbg !2043

349:                                              ; preds = %originalBBpart269
  %350 = load i32, i32* @x.37
  %351 = load i32, i32* @y.38
  %352 = sub i32 %350, 1
  %353 = mul i32 %350, %352
  %354 = urem i32 %353, 2
  %355 = icmp eq i32 %354, 0
  %356 = icmp slt i32 %351, 10
  %357 = or i1 %355, %356
  br i1 %357, label %originalBB71, label %originalBB71alteredBB

originalBB71:                                     ; preds = %349, %originalBB71alteredBB
  %358 = load i8*, i8** %21, align 8, !dbg !2046
  %359 = load i64, i64* %28, align 8, !dbg !2047
  %360 = getelementptr inbounds i8, i8* %358, i64 %359, !dbg !2046
  %361 = load i8, i8* %360, align 1, !dbg !2046
  %362 = sext i8 %361 to i32, !dbg !2046
  %363 = icmp eq i32 %362, 0, !dbg !2048
  %364 = zext i1 %363 to i32, !dbg !2048
  %365 = load i32, i32* @x.37
  %366 = load i32, i32* @y.38
  %367 = sub i32 %365, 1
  %368 = mul i32 %365, %367
  %369 = urem i32 %368, 2
  %370 = icmp eq i32 %369, 0
  %371 = icmp slt i32 %366, 10
  %372 = or i1 %370, %371
  br i1 %372, label %originalBBpart273, label %originalBB71alteredBB

originalBBpart273:                                ; preds = %originalBB71
  br label %394, !dbg !2043

373:                                              ; preds = %originalBBpart269
  %374 = load i32, i32* @x.37
  %375 = load i32, i32* @y.38
  %376 = sub i32 %374, 1
  %377 = mul i32 %374, %376
  %378 = urem i32 %377, 2
  %379 = icmp eq i32 %378, 0
  %380 = icmp slt i32 %375, 10
  %381 = or i1 %379, %380
  br i1 %381, label %originalBB75, label %originalBB75alteredBB

originalBB75:                                     ; preds = %373, %originalBB75alteredBB
  %382 = load i64, i64* %28, align 8, !dbg !2049
  %383 = load i64, i64* %22, align 8, !dbg !2050
  %384 = icmp eq i64 %382, %383, !dbg !2051
  %385 = zext i1 %384 to i32, !dbg !2051
  %386 = load i32, i32* @x.37
  %387 = load i32, i32* @y.38
  %388 = sub i32 %386, 1
  %389 = mul i32 %386, %388
  %390 = urem i32 %389, 2
  %391 = icmp eq i32 %390, 0
  %392 = icmp slt i32 %387, 10
  %393 = or i1 %391, %392
  br i1 %393, label %originalBBpart277, label %originalBB75alteredBB

originalBBpart277:                                ; preds = %originalBB75
  br label %394, !dbg !2043

394:                                              ; preds = %originalBBpart277, %originalBBpart273
  %395 = phi i32 [ %364, %originalBBpart273 ], [ %385, %originalBBpart277 ], !dbg !2043
  %396 = icmp ne i32 %395, 0, !dbg !2052
  %397 = xor i1 %396, true, !dbg !2052
  br i1 %397, label %398, label %2716, !dbg !2053

398:                                              ; preds = %394
  call void @llvm.dbg.declare(metadata i8* %39, metadata !2054, metadata !DIExpression()), !dbg !2056
  call void @llvm.dbg.declare(metadata i8* %40, metadata !2057, metadata !DIExpression()), !dbg !2058
  call void @llvm.dbg.declare(metadata i8* %41, metadata !2059, metadata !DIExpression()), !dbg !2060
  store i8 0, i8* %41, align 1, !dbg !2060
  call void @llvm.dbg.declare(metadata i8* %42, metadata !2061, metadata !DIExpression()), !dbg !2062
  store i8 0, i8* %42, align 1, !dbg !2062
  call void @llvm.dbg.declare(metadata i8* %43, metadata !2063, metadata !DIExpression()), !dbg !2064
  store i8 0, i8* %43, align 1, !dbg !2064
  %399 = load i8, i8* %33, align 1, !dbg !2065
  %400 = trunc i8 %399 to i1, !dbg !2065
  br i1 %400, label %401, label %469, !dbg !2067

401:                                              ; preds = %398
  %402 = load i32, i32* %23, align 4, !dbg !2068
  %403 = icmp ne i32 %402, 2, !dbg !2069
  br i1 %403, label %404, label %469, !dbg !2070

404:                                              ; preds = %401
  %405 = load i64, i64* %32, align 8, !dbg !2071
  %406 = icmp ne i64 %405, 0, !dbg !2071
  br i1 %406, label %407, label %469, !dbg !2072

407:                                              ; preds = %404
  %408 = load i64, i64* %28, align 8, !dbg !2073
  %409 = load i64, i64* %32, align 8, !dbg !2074
  %410 = add i64 %408, %409, !dbg !2075
  %411 = load i64, i64* %22, align 8, !dbg !2076
  %412 = icmp eq i64 %411, -1, !dbg !2077
  br i1 %412, label %413, label %419, !dbg !2078

413:                                              ; preds = %407
  %414 = load i64, i64* %32, align 8, !dbg !2079
  %415 = icmp ult i64 1, %414, !dbg !2080
  br i1 %415, label %416, label %419, !dbg !2076

416:                                              ; preds = %413
  %417 = load i8*, i8** %21, align 8, !dbg !2081
  %418 = call i64 @strlen(i8* %417) #13, !dbg !2082
  store i64 %418, i64* %22, align 8, !dbg !2083
  br label %437, !dbg !2076

419:                                              ; preds = %413, %407
  %420 = load i32, i32* @x.37
  %421 = load i32, i32* @y.38
  %422 = sub i32 %420, 1
  %423 = mul i32 %420, %422
  %424 = urem i32 %423, 2
  %425 = icmp eq i32 %424, 0
  %426 = icmp slt i32 %421, 10
  %427 = or i1 %425, %426
  br i1 %427, label %originalBB79, label %originalBB79alteredBB

originalBB79:                                     ; preds = %419, %originalBB79alteredBB
  %428 = load i64, i64* %22, align 8, !dbg !2084
  %429 = load i32, i32* @x.37
  %430 = load i32, i32* @y.38
  %431 = sub i32 %429, 1
  %432 = mul i32 %429, %431
  %433 = urem i32 %432, 2
  %434 = icmp eq i32 %433, 0
  %435 = icmp slt i32 %430, 10
  %436 = or i1 %434, %435
  br i1 %436, label %originalBBpart281, label %originalBB79alteredBB

originalBBpart281:                                ; preds = %originalBB79
  br label %437, !dbg !2076

437:                                              ; preds = %originalBBpart281, %416
  %438 = phi i64 [ %418, %416 ], [ %428, %originalBBpart281 ], !dbg !2076
  %439 = icmp ule i64 %410, %438, !dbg !2085
  br i1 %439, label %440, label %469, !dbg !2086

440:                                              ; preds = %437
  %441 = load i8*, i8** %21, align 8, !dbg !2087
  %442 = load i64, i64* %28, align 8, !dbg !2088
  %443 = getelementptr inbounds i8, i8* %441, i64 %442, !dbg !2089
  %444 = load i8*, i8** %31, align 8, !dbg !2090
  %445 = load i64, i64* %32, align 8, !dbg !2091
  %446 = call i32 @memcmp(i8* %443, i8* %444, i64 %445) #13, !dbg !2092
  %447 = icmp eq i32 %446, 0, !dbg !2093
  br i1 %447, label %448, label %469, !dbg !2094

448:                                              ; preds = %440
  %449 = load i8, i8* %35, align 1, !dbg !2095
  %450 = trunc i8 %449 to i1, !dbg !2095
  br i1 %450, label %451, label %452, !dbg !2098

451:                                              ; preds = %448
  br label %2894, !dbg !2099

452:                                              ; preds = %448
  %453 = load i32, i32* @x.37
  %454 = load i32, i32* @y.38
  %455 = sub i32 %453, 1
  %456 = mul i32 %453, %455
  %457 = urem i32 %456, 2
  %458 = icmp eq i32 %457, 0
  %459 = icmp slt i32 %454, 10
  %460 = or i1 %458, %459
  br i1 %460, label %originalBB83, label %originalBB83alteredBB

originalBB83:                                     ; preds = %452, %originalBB83alteredBB
  store i8 1, i8* %41, align 1, !dbg !2100
  %461 = load i32, i32* @x.37
  %462 = load i32, i32* @y.38
  %463 = sub i32 %461, 1
  %464 = mul i32 %461, %463
  %465 = urem i32 %464, 2
  %466 = icmp eq i32 %465, 0
  %467 = icmp slt i32 %462, 10
  %468 = or i1 %466, %467
  br i1 %468, label %originalBBpart285, label %originalBB83alteredBB

originalBBpart285:                                ; preds = %originalBB83
  br label %469, !dbg !2101

469:                                              ; preds = %originalBBpart285, %440, %437, %404, %401, %398
  %470 = load i32, i32* @x.37
  %471 = load i32, i32* @y.38
  %472 = sub i32 %470, 1
  %473 = mul i32 %470, %472
  %474 = urem i32 %473, 2
  %475 = icmp eq i32 %474, 0
  %476 = icmp slt i32 %471, 10
  %477 = or i1 %475, %476
  br i1 %477, label %originalBB87, label %originalBB87alteredBB

originalBB87:                                     ; preds = %469, %originalBB87alteredBB
  %478 = load i8*, i8** %21, align 8, !dbg !2102
  %479 = load i64, i64* %28, align 8, !dbg !2103
  %480 = getelementptr inbounds i8, i8* %478, i64 %479, !dbg !2102
  %481 = load i8, i8* %480, align 1, !dbg !2102
  store i8 %481, i8* %39, align 1, !dbg !2104
  %482 = load i8, i8* %39, align 1, !dbg !2105
  %483 = zext i8 %482 to i32, !dbg !2105
  %484 = load i32, i32* @x.37
  %485 = load i32, i32* @y.38
  %486 = sub i32 %484, 1
  %487 = mul i32 %484, %486
  %488 = urem i32 %487, 2
  %489 = icmp eq i32 %488, 0
  %490 = icmp slt i32 %485, 10
  %491 = or i1 %489, %490
  br i1 %491, label %originalBBpart289, label %originalBB87alteredBB

originalBBpart289:                                ; preds = %originalBB87
  switch i32 %483, label %1552 [
    i32 0, label %492
    i32 63, label %853
    i32 7, label %1109
    i32 8, label %1110
    i32 12, label %1111
    i32 10, label %1112
    i32 13, label %1113
    i32 9, label %1130
    i32 11, label %1131
    i32 92, label %1132
    i32 123, label %1278
    i32 125, label %1278
    i32 35, label %1292
    i32 126, label %1292
    i32 32, label %1313
    i32 33, label %1314
    i32 34, label %1314
    i32 36, label %1314
    i32 38, label %1314
    i32 40, label %1314
    i32 41, label %1314
    i32 42, label %1314
    i32 59, label %1314
    i32 60, label %1314
    i32 61, label %1314
    i32 62, label %1314
    i32 91, label %1314
    i32 94, label %1314
    i32 96, label %1314
    i32 124, label %1314
    i32 39, label %1370
    i32 37, label %1551
    i32 43, label %1551
    i32 44, label %1551
    i32 45, label %1551
    i32 46, label %1551
    i32 47, label %1551
    i32 48, label %1551
    i32 49, label %1551
    i32 50, label %1551
    i32 51, label %1551
    i32 52, label %1551
    i32 53, label %1551
    i32 54, label %1551
    i32 55, label %1551
    i32 56, label %1551
    i32 57, label %1551
    i32 58, label %1551
    i32 65, label %1551
    i32 66, label %1551
    i32 67, label %1551
    i32 68, label %1551
    i32 69, label %1551
    i32 70, label %1551
    i32 71, label %1551
    i32 72, label %1551
    i32 73, label %1551
    i32 74, label %1551
    i32 75, label %1551
    i32 76, label %1551
    i32 77, label %1551
    i32 78, label %1551
    i32 79, label %1551
    i32 80, label %1551
    i32 81, label %1551
    i32 82, label %1551
    i32 83, label %1551
    i32 84, label %1551
    i32 85, label %1551
    i32 86, label %1551
    i32 87, label %1551
    i32 88, label %1551
    i32 89, label %1551
    i32 90, label %1551
    i32 93, label %1551
    i32 95, label %1551
    i32 97, label %1551
    i32 98, label %1551
    i32 99, label %1551
    i32 100, label %1551
    i32 101, label %1551
    i32 102, label %1551
    i32 103, label %1551
    i32 104, label %1551
    i32 105, label %1551
    i32 106, label %1551
    i32 107, label %1551
    i32 108, label %1551
    i32 109, label %1551
    i32 110, label %1551
    i32 111, label %1551
    i32 112, label %1551
    i32 113, label %1551
    i32 114, label %1551
    i32 115, label %1551
    i32 116, label %1551
    i32 117, label %1551
    i32 118, label %1551
    i32 119, label %1551
    i32 120, label %1551
    i32 121, label %1551
    i32 122, label %1551
  ], !dbg !2106

492:                                              ; preds = %originalBBpart289
  %493 = load i8, i8* %33, align 1, !dbg !2107
  %494 = trunc i8 %493 to i1, !dbg !2107
  br i1 %494, label %495, label %814, !dbg !2110

495:                                              ; preds = %492
  br label %496, !dbg !2111

496:                                              ; preds = %495
  %497 = load i8, i8* %35, align 1, !dbg !2113
  %498 = trunc i8 %497 to i1, !dbg !2113
  br i1 %498, label %499, label %516, !dbg !2116

499:                                              ; preds = %496
  %500 = load i32, i32* @x.37
  %501 = load i32, i32* @y.38
  %502 = sub i32 %500, 1
  %503 = mul i32 %500, %502
  %504 = urem i32 %503, 2
  %505 = icmp eq i32 %504, 0
  %506 = icmp slt i32 %501, 10
  %507 = or i1 %505, %506
  br i1 %507, label %originalBB91, label %originalBB91alteredBB

originalBB91:                                     ; preds = %499, %originalBB91alteredBB
  %508 = load i32, i32* @x.37
  %509 = load i32, i32* @y.38
  %510 = sub i32 %508, 1
  %511 = mul i32 %508, %510
  %512 = urem i32 %511, 2
  %513 = icmp eq i32 %512, 0
  %514 = icmp slt i32 %509, 10
  %515 = or i1 %513, %514
  br i1 %515, label %originalBBpart293, label %originalBB91alteredBB

originalBBpart293:                                ; preds = %originalBB91
  br label %2894, !dbg !2113

516:                                              ; preds = %496
  store i8 1, i8* %42, align 1, !dbg !2116
  %517 = load i32, i32* %23, align 4, !dbg !2117
  %518 = icmp eq i32 %517, 2, !dbg !2117
  br i1 %518, label %519, label %639, !dbg !2117

519:                                              ; preds = %516
  %520 = load i8, i8* %36, align 1, !dbg !2117
  %521 = trunc i8 %520 to i1, !dbg !2117
  br i1 %521, label %639, label %522, !dbg !2116

522:                                              ; preds = %519
  %523 = load i32, i32* @x.37
  %524 = load i32, i32* @y.38
  %525 = sub i32 %523, 1
  %526 = mul i32 %523, %525
  %527 = urem i32 %526, 2
  %528 = icmp eq i32 %527, 0
  %529 = icmp slt i32 %524, 10
  %530 = or i1 %528, %529
  br i1 %530, label %originalBB95, label %originalBB95alteredBB

originalBB95:                                     ; preds = %522, %originalBB95alteredBB
  %531 = load i32, i32* @x.37
  %532 = load i32, i32* @y.38
  %533 = sub i32 %531, 1
  %534 = mul i32 %531, %533
  %535 = urem i32 %534, 2
  %536 = icmp eq i32 %535, 0
  %537 = icmp slt i32 %532, 10
  %538 = or i1 %536, %537
  br i1 %538, label %originalBBpart297, label %originalBB95alteredBB

originalBBpart297:                                ; preds = %originalBB95
  br label %539, !dbg !2119

539:                                              ; preds = %originalBBpart297
  %540 = load i32, i32* @x.37
  %541 = load i32, i32* @y.38
  %542 = sub i32 %540, 1
  %543 = mul i32 %540, %542
  %544 = urem i32 %543, 2
  %545 = icmp eq i32 %544, 0
  %546 = icmp slt i32 %541, 10
  %547 = or i1 %545, %546
  br i1 %547, label %originalBB99, label %originalBB99alteredBB

originalBB99:                                     ; preds = %539, %originalBB99alteredBB
  %548 = load i64, i64* %29, align 8, !dbg !2121
  %549 = load i64, i64* %20, align 8, !dbg !2121
  %550 = icmp ult i64 %548, %549, !dbg !2121
  %551 = load i32, i32* @x.37
  %552 = load i32, i32* @y.38
  %553 = sub i32 %551, 1
  %554 = mul i32 %551, %553
  %555 = urem i32 %554, 2
  %556 = icmp eq i32 %555, 0
  %557 = icmp slt i32 %552, 10
  %558 = or i1 %556, %557
  br i1 %558, label %originalBBpart2101, label %originalBB99alteredBB

originalBBpart2101:                               ; preds = %originalBB99
  br i1 %550, label %559, label %563, !dbg !2124

559:                                              ; preds = %originalBBpart2101
  %560 = load i8*, i8** %19, align 8, !dbg !2121
  %561 = load i64, i64* %29, align 8, !dbg !2121
  %562 = getelementptr inbounds i8, i8* %560, i64 %561, !dbg !2121
  store i8 39, i8* %562, align 1, !dbg !2121
  br label %563, !dbg !2121

563:                                              ; preds = %559, %originalBBpart2101
  %564 = load i64, i64* %29, align 8, !dbg !2124
  %565 = add i64 %564, 1, !dbg !2124
  store i64 %565, i64* %29, align 8, !dbg !2124
  br label %566, !dbg !2124

566:                                              ; preds = %563
  br label %567, !dbg !2119

567:                                              ; preds = %566
  %568 = load i32, i32* @x.37
  %569 = load i32, i32* @y.38
  %570 = sub i32 %568, 1
  %571 = mul i32 %568, %570
  %572 = urem i32 %571, 2
  %573 = icmp eq i32 %572, 0
  %574 = icmp slt i32 %569, 10
  %575 = or i1 %573, %574
  br i1 %575, label %originalBB103, label %originalBB103alteredBB

originalBB103:                                    ; preds = %567, %originalBB103alteredBB
  %576 = load i64, i64* %29, align 8, !dbg !2125
  %577 = load i64, i64* %20, align 8, !dbg !2125
  %578 = icmp ult i64 %576, %577, !dbg !2125
  %579 = load i32, i32* @x.37
  %580 = load i32, i32* @y.38
  %581 = sub i32 %579, 1
  %582 = mul i32 %579, %581
  %583 = urem i32 %582, 2
  %584 = icmp eq i32 %583, 0
  %585 = icmp slt i32 %580, 10
  %586 = or i1 %584, %585
  br i1 %586, label %originalBBpart2105, label %originalBB103alteredBB

originalBBpart2105:                               ; preds = %originalBB103
  br i1 %578, label %587, label %591, !dbg !2128

587:                                              ; preds = %originalBBpart2105
  %588 = load i8*, i8** %19, align 8, !dbg !2125
  %589 = load i64, i64* %29, align 8, !dbg !2125
  %590 = getelementptr inbounds i8, i8* %588, i64 %589, !dbg !2125
  store i8 36, i8* %590, align 1, !dbg !2125
  br label %591, !dbg !2125

591:                                              ; preds = %587, %originalBBpart2105
  %592 = load i64, i64* %29, align 8, !dbg !2128
  %593 = add i64 %592, 1, !dbg !2128
  store i64 %593, i64* %29, align 8, !dbg !2128
  br label %594, !dbg !2128

594:                                              ; preds = %591
  br label %595, !dbg !2119

595:                                              ; preds = %594
  %596 = load i64, i64* %29, align 8, !dbg !2129
  %597 = load i64, i64* %20, align 8, !dbg !2129
  %598 = icmp ult i64 %596, %597, !dbg !2129
  br i1 %598, label %599, label %619, !dbg !2132

599:                                              ; preds = %595
  %600 = load i32, i32* @x.37
  %601 = load i32, i32* @y.38
  %602 = sub i32 %600, 1
  %603 = mul i32 %600, %602
  %604 = urem i32 %603, 2
  %605 = icmp eq i32 %604, 0
  %606 = icmp slt i32 %601, 10
  %607 = or i1 %605, %606
  br i1 %607, label %originalBB107, label %originalBB107alteredBB

originalBB107:                                    ; preds = %599, %originalBB107alteredBB
  %608 = load i8*, i8** %19, align 8, !dbg !2129
  %609 = load i64, i64* %29, align 8, !dbg !2129
  %610 = getelementptr inbounds i8, i8* %608, i64 %609, !dbg !2129
  store i8 39, i8* %610, align 1, !dbg !2129
  %611 = load i32, i32* @x.37
  %612 = load i32, i32* @y.38
  %613 = sub i32 %611, 1
  %614 = mul i32 %611, %613
  %615 = urem i32 %614, 2
  %616 = icmp eq i32 %615, 0
  %617 = icmp slt i32 %612, 10
  %618 = or i1 %616, %617
  br i1 %618, label %originalBBpart2109, label %originalBB107alteredBB

originalBBpart2109:                               ; preds = %originalBB107
  br label %619, !dbg !2129

619:                                              ; preds = %originalBBpart2109, %595
  %620 = load i32, i32* @x.37
  %621 = load i32, i32* @y.38
  %622 = sub i32 %620, 1
  %623 = mul i32 %620, %622
  %624 = urem i32 %623, 2
  %625 = icmp eq i32 %624, 0
  %626 = icmp slt i32 %621, 10
  %627 = or i1 %625, %626
  br i1 %627, label %originalBB111, label %originalBB111alteredBB

originalBB111:                                    ; preds = %619, %originalBB111alteredBB
  %628 = load i64, i64* %29, align 8, !dbg !2132
  %629 = add i64 %628, 1, !dbg !2132
  store i64 %629, i64* %29, align 8, !dbg !2132
  %630 = load i32, i32* @x.37
  %631 = load i32, i32* @y.38
  %632 = sub i32 %630, 1
  %633 = mul i32 %630, %632
  %634 = urem i32 %633, 2
  %635 = icmp eq i32 %634, 0
  %636 = icmp slt i32 %631, 10
  %637 = or i1 %635, %636
  br i1 %637, label %originalBBpart2124, label %originalBB111alteredBB

originalBBpart2124:                               ; preds = %originalBB111
  br label %638, !dbg !2132

638:                                              ; preds = %originalBBpart2124
  store i8 1, i8* %36, align 1, !dbg !2119
  br label %639, !dbg !2119

639:                                              ; preds = %638, %519, %516
  br label %640, !dbg !2116

640:                                              ; preds = %639
  %641 = load i64, i64* %29, align 8, !dbg !2133
  %642 = load i64, i64* %20, align 8, !dbg !2133
  %643 = icmp ult i64 %641, %642, !dbg !2133
  br i1 %643, label %644, label %664, !dbg !2136

644:                                              ; preds = %640
  %645 = load i32, i32* @x.37
  %646 = load i32, i32* @y.38
  %647 = sub i32 %645, 1
  %648 = mul i32 %645, %647
  %649 = urem i32 %648, 2
  %650 = icmp eq i32 %649, 0
  %651 = icmp slt i32 %646, 10
  %652 = or i1 %650, %651
  br i1 %652, label %originalBB126, label %originalBB126alteredBB

originalBB126:                                    ; preds = %644, %originalBB126alteredBB
  %653 = load i8*, i8** %19, align 8, !dbg !2133
  %654 = load i64, i64* %29, align 8, !dbg !2133
  %655 = getelementptr inbounds i8, i8* %653, i64 %654, !dbg !2133
  store i8 92, i8* %655, align 1, !dbg !2133
  %656 = load i32, i32* @x.37
  %657 = load i32, i32* @y.38
  %658 = sub i32 %656, 1
  %659 = mul i32 %656, %658
  %660 = urem i32 %659, 2
  %661 = icmp eq i32 %660, 0
  %662 = icmp slt i32 %657, 10
  %663 = or i1 %661, %662
  br i1 %663, label %originalBBpart2128, label %originalBB126alteredBB

originalBBpart2128:                               ; preds = %originalBB126
  br label %664, !dbg !2133

664:                                              ; preds = %originalBBpart2128, %640
  %665 = load i64, i64* %29, align 8, !dbg !2136
  %666 = add i64 %665, 1, !dbg !2136
  store i64 %666, i64* %29, align 8, !dbg !2136
  br label %667, !dbg !2136

667:                                              ; preds = %664
  br label %668, !dbg !2116

668:                                              ; preds = %667
  %669 = load i32, i32* %23, align 4, !dbg !2137
  %670 = icmp ne i32 %669, 2, !dbg !2139
  br i1 %670, label %671, label %813, !dbg !2140

671:                                              ; preds = %668
  %672 = load i64, i64* %28, align 8, !dbg !2141
  %673 = add i64 %672, 1, !dbg !2142
  %674 = load i64, i64* %22, align 8, !dbg !2143
  %675 = icmp ult i64 %673, %674, !dbg !2144
  br i1 %675, label %676, label %813, !dbg !2145

676:                                              ; preds = %671
  %677 = load i8*, i8** %21, align 8, !dbg !2146
  %678 = load i64, i64* %28, align 8, !dbg !2147
  %679 = add i64 %678, 1, !dbg !2148
  %680 = getelementptr inbounds i8, i8* %677, i64 %679, !dbg !2146
  %681 = load i8, i8* %680, align 1, !dbg !2146
  %682 = sext i8 %681 to i32, !dbg !2146
  %683 = icmp sle i32 48, %682, !dbg !2149
  br i1 %683, label %684, label %813, !dbg !2150

684:                                              ; preds = %676
  %685 = load i8*, i8** %21, align 8, !dbg !2151
  %686 = load i64, i64* %28, align 8, !dbg !2152
  %687 = add i64 %686, 1, !dbg !2153
  %688 = getelementptr inbounds i8, i8* %685, i64 %687, !dbg !2151
  %689 = load i8, i8* %688, align 1, !dbg !2151
  %690 = sext i8 %689 to i32, !dbg !2151
  %691 = icmp sle i32 %690, 57, !dbg !2154
  br i1 %691, label %692, label %813, !dbg !2155

692:                                              ; preds = %684
  %693 = load i32, i32* @x.37
  %694 = load i32, i32* @y.38
  %695 = sub i32 %693, 1
  %696 = mul i32 %693, %695
  %697 = urem i32 %696, 2
  %698 = icmp eq i32 %697, 0
  %699 = icmp slt i32 %694, 10
  %700 = or i1 %698, %699
  br i1 %700, label %originalBB130, label %originalBB130alteredBB

originalBB130:                                    ; preds = %692, %originalBB130alteredBB
  %701 = load i32, i32* @x.37
  %702 = load i32, i32* @y.38
  %703 = sub i32 %701, 1
  %704 = mul i32 %701, %703
  %705 = urem i32 %704, 2
  %706 = icmp eq i32 %705, 0
  %707 = icmp slt i32 %702, 10
  %708 = or i1 %706, %707
  br i1 %708, label %originalBBpart2132, label %originalBB130alteredBB

originalBBpart2132:                               ; preds = %originalBB130
  br label %709, !dbg !2156

709:                                              ; preds = %originalBBpart2132
  %710 = load i64, i64* %29, align 8, !dbg !2158
  %711 = load i64, i64* %20, align 8, !dbg !2158
  %712 = icmp ult i64 %710, %711, !dbg !2158
  br i1 %712, label %713, label %733, !dbg !2161

713:                                              ; preds = %709
  %714 = load i32, i32* @x.37
  %715 = load i32, i32* @y.38
  %716 = sub i32 %714, 1
  %717 = mul i32 %714, %716
  %718 = urem i32 %717, 2
  %719 = icmp eq i32 %718, 0
  %720 = icmp slt i32 %715, 10
  %721 = or i1 %719, %720
  br i1 %721, label %originalBB134, label %originalBB134alteredBB

originalBB134:                                    ; preds = %713, %originalBB134alteredBB
  %722 = load i8*, i8** %19, align 8, !dbg !2158
  %723 = load i64, i64* %29, align 8, !dbg !2158
  %724 = getelementptr inbounds i8, i8* %722, i64 %723, !dbg !2158
  store i8 48, i8* %724, align 1, !dbg !2158
  %725 = load i32, i32* @x.37
  %726 = load i32, i32* @y.38
  %727 = sub i32 %725, 1
  %728 = mul i32 %725, %727
  %729 = urem i32 %728, 2
  %730 = icmp eq i32 %729, 0
  %731 = icmp slt i32 %726, 10
  %732 = or i1 %730, %731
  br i1 %732, label %originalBBpart2136, label %originalBB134alteredBB

originalBBpart2136:                               ; preds = %originalBB134
  br label %733, !dbg !2158

733:                                              ; preds = %originalBBpart2136, %709
  %734 = load i32, i32* @x.37
  %735 = load i32, i32* @y.38
  %736 = sub i32 %734, 1
  %737 = mul i32 %734, %736
  %738 = urem i32 %737, 2
  %739 = icmp eq i32 %738, 0
  %740 = icmp slt i32 %735, 10
  %741 = or i1 %739, %740
  br i1 %741, label %originalBB138, label %originalBB138alteredBB

originalBB138:                                    ; preds = %733, %originalBB138alteredBB
  %742 = load i64, i64* %29, align 8, !dbg !2161
  %743 = add i64 %742, 1, !dbg !2161
  store i64 %743, i64* %29, align 8, !dbg !2161
  %744 = load i32, i32* @x.37
  %745 = load i32, i32* @y.38
  %746 = sub i32 %744, 1
  %747 = mul i32 %744, %746
  %748 = urem i32 %747, 2
  %749 = icmp eq i32 %748, 0
  %750 = icmp slt i32 %745, 10
  %751 = or i1 %749, %750
  br i1 %751, label %originalBBpart2144, label %originalBB138alteredBB

originalBBpart2144:                               ; preds = %originalBB138
  br label %752, !dbg !2161

752:                                              ; preds = %originalBBpart2144
  br label %753, !dbg !2162

753:                                              ; preds = %752
  %754 = load i64, i64* %29, align 8, !dbg !2163
  %755 = load i64, i64* %20, align 8, !dbg !2163
  %756 = icmp ult i64 %754, %755, !dbg !2163
  br i1 %756, label %757, label %777, !dbg !2166

757:                                              ; preds = %753
  %758 = load i32, i32* @x.37
  %759 = load i32, i32* @y.38
  %760 = sub i32 %758, 1
  %761 = mul i32 %758, %760
  %762 = urem i32 %761, 2
  %763 = icmp eq i32 %762, 0
  %764 = icmp slt i32 %759, 10
  %765 = or i1 %763, %764
  br i1 %765, label %originalBB146, label %originalBB146alteredBB

originalBB146:                                    ; preds = %757, %originalBB146alteredBB
  %766 = load i8*, i8** %19, align 8, !dbg !2163
  %767 = load i64, i64* %29, align 8, !dbg !2163
  %768 = getelementptr inbounds i8, i8* %766, i64 %767, !dbg !2163
  store i8 48, i8* %768, align 1, !dbg !2163
  %769 = load i32, i32* @x.37
  %770 = load i32, i32* @y.38
  %771 = sub i32 %769, 1
  %772 = mul i32 %769, %771
  %773 = urem i32 %772, 2
  %774 = icmp eq i32 %773, 0
  %775 = icmp slt i32 %770, 10
  %776 = or i1 %774, %775
  br i1 %776, label %originalBBpart2148, label %originalBB146alteredBB

originalBBpart2148:                               ; preds = %originalBB146
  br label %777, !dbg !2163

777:                                              ; preds = %originalBBpart2148, %753
  %778 = load i32, i32* @x.37
  %779 = load i32, i32* @y.38
  %780 = sub i32 %778, 1
  %781 = mul i32 %778, %780
  %782 = urem i32 %781, 2
  %783 = icmp eq i32 %782, 0
  %784 = icmp slt i32 %779, 10
  %785 = or i1 %783, %784
  br i1 %785, label %originalBB150, label %originalBB150alteredBB

originalBB150:                                    ; preds = %777, %originalBB150alteredBB
  %786 = load i64, i64* %29, align 8, !dbg !2166
  %787 = add i64 %786, 1, !dbg !2166
  store i64 %787, i64* %29, align 8, !dbg !2166
  %788 = load i32, i32* @x.37
  %789 = load i32, i32* @y.38
  %790 = sub i32 %788, 1
  %791 = mul i32 %788, %790
  %792 = urem i32 %791, 2
  %793 = icmp eq i32 %792, 0
  %794 = icmp slt i32 %789, 10
  %795 = or i1 %793, %794
  br i1 %795, label %originalBBpart2158, label %originalBB150alteredBB

originalBBpart2158:                               ; preds = %originalBB150
  br label %796, !dbg !2166

796:                                              ; preds = %originalBBpart2158
  %797 = load i32, i32* @x.37
  %798 = load i32, i32* @y.38
  %799 = sub i32 %797, 1
  %800 = mul i32 %797, %799
  %801 = urem i32 %800, 2
  %802 = icmp eq i32 %801, 0
  %803 = icmp slt i32 %798, 10
  %804 = or i1 %802, %803
  br i1 %804, label %originalBB160, label %originalBB160alteredBB

originalBB160:                                    ; preds = %796, %originalBB160alteredBB
  %805 = load i32, i32* @x.37
  %806 = load i32, i32* @y.38
  %807 = sub i32 %805, 1
  %808 = mul i32 %805, %807
  %809 = urem i32 %808, 2
  %810 = icmp eq i32 %809, 0
  %811 = icmp slt i32 %806, 10
  %812 = or i1 %810, %811
  br i1 %812, label %originalBBpart2162, label %originalBB160alteredBB

originalBBpart2162:                               ; preds = %originalBB160
  br label %813, !dbg !2167

813:                                              ; preds = %originalBBpart2162, %684, %676, %671, %668
  store i8 48, i8* %39, align 1, !dbg !2168
  br label %836, !dbg !2169

814:                                              ; preds = %492
  %815 = load i32, i32* %24, align 4, !dbg !2170
  %816 = and i32 %815, 1, !dbg !2172
  %817 = icmp ne i32 %816, 0, !dbg !2172
  br i1 %817, label %818, label %819, !dbg !2173

818:                                              ; preds = %814
  br label %2713, !dbg !2174

819:                                              ; preds = %814
  %820 = load i32, i32* @x.37
  %821 = load i32, i32* @y.38
  %822 = sub i32 %820, 1
  %823 = mul i32 %820, %822
  %824 = urem i32 %823, 2
  %825 = icmp eq i32 %824, 0
  %826 = icmp slt i32 %821, 10
  %827 = or i1 %825, %826
  br i1 %827, label %originalBB164, label %originalBB164alteredBB

originalBB164:                                    ; preds = %819, %originalBB164alteredBB
  %828 = load i32, i32* @x.37
  %829 = load i32, i32* @y.38
  %830 = sub i32 %828, 1
  %831 = mul i32 %828, %830
  %832 = urem i32 %831, 2
  %833 = icmp eq i32 %832, 0
  %834 = icmp slt i32 %829, 10
  %835 = or i1 %833, %834
  br i1 %835, label %originalBBpart2166, label %originalBB164alteredBB

originalBBpart2166:                               ; preds = %originalBB164
  br label %836

836:                                              ; preds = %originalBBpart2166, %813
  %837 = load i32, i32* @x.37
  %838 = load i32, i32* @y.38
  %839 = sub i32 %837, 1
  %840 = mul i32 %837, %839
  %841 = urem i32 %840, 2
  %842 = icmp eq i32 %841, 0
  %843 = icmp slt i32 %838, 10
  %844 = or i1 %842, %843
  br i1 %844, label %originalBB168, label %originalBB168alteredBB

originalBB168:                                    ; preds = %836, %originalBB168alteredBB
  %845 = load i32, i32* @x.37
  %846 = load i32, i32* @y.38
  %847 = sub i32 %845, 1
  %848 = mul i32 %845, %847
  %849 = urem i32 %848, 2
  %850 = icmp eq i32 %849, 0
  %851 = icmp slt i32 %846, 10
  %852 = or i1 %850, %851
  br i1 %852, label %originalBBpart2170, label %originalBB168alteredBB

originalBBpart2170:                               ; preds = %originalBB168
  br label %2361, !dbg !2175

853:                                              ; preds = %originalBBpart289
  %854 = load i32, i32* @x.37
  %855 = load i32, i32* @y.38
  %856 = sub i32 %854, 1
  %857 = mul i32 %854, %856
  %858 = urem i32 %857, 2
  %859 = icmp eq i32 %858, 0
  %860 = icmp slt i32 %855, 10
  %861 = or i1 %859, %860
  br i1 %861, label %originalBB172, label %originalBB172alteredBB

originalBB172:                                    ; preds = %853, %originalBB172alteredBB
  %862 = load i32, i32* %23, align 4, !dbg !2176
  %863 = load i32, i32* @x.37
  %864 = load i32, i32* @y.38
  %865 = sub i32 %863, 1
  %866 = mul i32 %863, %865
  %867 = urem i32 %866, 2
  %868 = icmp eq i32 %867, 0
  %869 = icmp slt i32 %864, 10
  %870 = or i1 %868, %869
  br i1 %870, label %originalBBpart2174, label %originalBB172alteredBB

originalBBpart2174:                               ; preds = %originalBB172
  switch i32 %862, label %1107 [
    i32 2, label %871
    i32 5, label %892
  ], !dbg !2177

871:                                              ; preds = %originalBBpart2174
  %872 = load i8, i8* %35, align 1, !dbg !2178
  %873 = trunc i8 %872 to i1, !dbg !2178
  br i1 %873, label %874, label %875, !dbg !2181

874:                                              ; preds = %871
  br label %2894, !dbg !2182

875:                                              ; preds = %871
  %876 = load i32, i32* @x.37
  %877 = load i32, i32* @y.38
  %878 = sub i32 %876, 1
  %879 = mul i32 %876, %878
  %880 = urem i32 %879, 2
  %881 = icmp eq i32 %880, 0
  %882 = icmp slt i32 %877, 10
  %883 = or i1 %881, %882
  br i1 %883, label %originalBB176, label %originalBB176alteredBB

originalBB176:                                    ; preds = %875, %originalBB176alteredBB
  %884 = load i32, i32* @x.37
  %885 = load i32, i32* @y.38
  %886 = sub i32 %884, 1
  %887 = mul i32 %884, %886
  %888 = urem i32 %887, 2
  %889 = icmp eq i32 %888, 0
  %890 = icmp slt i32 %885, 10
  %891 = or i1 %889, %890
  br i1 %891, label %originalBBpart2178, label %originalBB176alteredBB

originalBBpart2178:                               ; preds = %originalBB176
  br label %1108, !dbg !2183

892:                                              ; preds = %originalBBpart2174
  %893 = load i32, i32* %24, align 4, !dbg !2184
  %894 = and i32 %893, 4, !dbg !2186
  %895 = icmp ne i32 %894, 0, !dbg !2186
  br i1 %895, label %896, label %1090, !dbg !2187

896:                                              ; preds = %892
  %897 = load i32, i32* @x.37
  %898 = load i32, i32* @y.38
  %899 = sub i32 %897, 1
  %900 = mul i32 %897, %899
  %901 = urem i32 %900, 2
  %902 = icmp eq i32 %901, 0
  %903 = icmp slt i32 %898, 10
  %904 = or i1 %902, %903
  br i1 %904, label %originalBB180, label %originalBB180alteredBB

originalBB180:                                    ; preds = %896, %originalBB180alteredBB
  %905 = load i64, i64* %28, align 8, !dbg !2188
  %906 = add i64 %905, 2, !dbg !2189
  %907 = load i64, i64* %22, align 8, !dbg !2190
  %908 = icmp ult i64 %906, %907, !dbg !2191
  %909 = load i32, i32* @x.37
  %910 = load i32, i32* @y.38
  %911 = sub i32 %909, 1
  %912 = mul i32 %909, %911
  %913 = urem i32 %912, 2
  %914 = icmp eq i32 %913, 0
  %915 = icmp slt i32 %910, 10
  %916 = or i1 %914, %915
  br i1 %916, label %originalBBpart2195, label %originalBB180alteredBB

originalBBpart2195:                               ; preds = %originalBB180
  br i1 %908, label %917, label %1090, !dbg !2192

917:                                              ; preds = %originalBBpart2195
  %918 = load i8*, i8** %21, align 8, !dbg !2193
  %919 = load i64, i64* %28, align 8, !dbg !2194
  %920 = add i64 %919, 1, !dbg !2195
  %921 = getelementptr inbounds i8, i8* %918, i64 %920, !dbg !2193
  %922 = load i8, i8* %921, align 1, !dbg !2193
  %923 = sext i8 %922 to i32, !dbg !2193
  %924 = icmp eq i32 %923, 63, !dbg !2196
  br i1 %924, label %925, label %1090, !dbg !2197

925:                                              ; preds = %917
  %926 = load i8*, i8** %21, align 8, !dbg !2198
  %927 = load i64, i64* %28, align 8, !dbg !2199
  %928 = add i64 %927, 2, !dbg !2200
  %929 = getelementptr inbounds i8, i8* %926, i64 %928, !dbg !2198
  %930 = load i8, i8* %929, align 1, !dbg !2198
  %931 = sext i8 %930 to i32, !dbg !2198
  switch i32 %931, label %1072 [
    i32 33, label %932
    i32 39, label %932
    i32 40, label %932
    i32 41, label %932
    i32 45, label %932
    i32 47, label %932
    i32 60, label %932
    i32 61, label %932
    i32 62, label %932
  ], !dbg !2201

932:                                              ; preds = %925, %925, %925, %925, %925, %925, %925, %925, %925
  %933 = load i8, i8* %35, align 1, !dbg !2202
  %934 = trunc i8 %933 to i1, !dbg !2202
  br i1 %934, label %935, label %936, !dbg !2205

935:                                              ; preds = %932
  br label %2894, !dbg !2206

936:                                              ; preds = %932
  %937 = load i8*, i8** %21, align 8, !dbg !2207
  %938 = load i64, i64* %28, align 8, !dbg !2208
  %939 = add i64 %938, 2, !dbg !2209
  %940 = getelementptr inbounds i8, i8* %937, i64 %939, !dbg !2207
  %941 = load i8, i8* %940, align 1, !dbg !2207
  store i8 %941, i8* %39, align 1, !dbg !2210
  %942 = load i64, i64* %28, align 8, !dbg !2211
  %943 = add i64 %942, 2, !dbg !2211
  store i64 %943, i64* %28, align 8, !dbg !2211
  br label %944, !dbg !2212

944:                                              ; preds = %936
  %945 = load i32, i32* @x.37
  %946 = load i32, i32* @y.38
  %947 = sub i32 %945, 1
  %948 = mul i32 %945, %947
  %949 = urem i32 %948, 2
  %950 = icmp eq i32 %949, 0
  %951 = icmp slt i32 %946, 10
  %952 = or i1 %950, %951
  br i1 %952, label %originalBB197, label %originalBB197alteredBB

originalBB197:                                    ; preds = %944, %originalBB197alteredBB
  %953 = load i64, i64* %29, align 8, !dbg !2213
  %954 = load i64, i64* %20, align 8, !dbg !2213
  %955 = icmp ult i64 %953, %954, !dbg !2213
  %956 = load i32, i32* @x.37
  %957 = load i32, i32* @y.38
  %958 = sub i32 %956, 1
  %959 = mul i32 %956, %958
  %960 = urem i32 %959, 2
  %961 = icmp eq i32 %960, 0
  %962 = icmp slt i32 %957, 10
  %963 = or i1 %961, %962
  br i1 %963, label %originalBBpart2199, label %originalBB197alteredBB

originalBBpart2199:                               ; preds = %originalBB197
  br i1 %955, label %964, label %984, !dbg !2216

964:                                              ; preds = %originalBBpart2199
  %965 = load i32, i32* @x.37
  %966 = load i32, i32* @y.38
  %967 = sub i32 %965, 1
  %968 = mul i32 %965, %967
  %969 = urem i32 %968, 2
  %970 = icmp eq i32 %969, 0
  %971 = icmp slt i32 %966, 10
  %972 = or i1 %970, %971
  br i1 %972, label %originalBB201, label %originalBB201alteredBB

originalBB201:                                    ; preds = %964, %originalBB201alteredBB
  %973 = load i8*, i8** %19, align 8, !dbg !2213
  %974 = load i64, i64* %29, align 8, !dbg !2213
  %975 = getelementptr inbounds i8, i8* %973, i64 %974, !dbg !2213
  store i8 63, i8* %975, align 1, !dbg !2213
  %976 = load i32, i32* @x.37
  %977 = load i32, i32* @y.38
  %978 = sub i32 %976, 1
  %979 = mul i32 %976, %978
  %980 = urem i32 %979, 2
  %981 = icmp eq i32 %980, 0
  %982 = icmp slt i32 %977, 10
  %983 = or i1 %981, %982
  br i1 %983, label %originalBBpart2203, label %originalBB201alteredBB

originalBBpart2203:                               ; preds = %originalBB201
  br label %984, !dbg !2213

984:                                              ; preds = %originalBBpart2203, %originalBBpart2199
  %985 = load i64, i64* %29, align 8, !dbg !2216
  %986 = add i64 %985, 1, !dbg !2216
  store i64 %986, i64* %29, align 8, !dbg !2216
  br label %987, !dbg !2216

987:                                              ; preds = %984
  br label %988, !dbg !2217

988:                                              ; preds = %987
  %989 = load i64, i64* %29, align 8, !dbg !2218
  %990 = load i64, i64* %20, align 8, !dbg !2218
  %991 = icmp ult i64 %989, %990, !dbg !2218
  br i1 %991, label %992, label %996, !dbg !2221

992:                                              ; preds = %988
  %993 = load i8*, i8** %19, align 8, !dbg !2218
  %994 = load i64, i64* %29, align 8, !dbg !2218
  %995 = getelementptr inbounds i8, i8* %993, i64 %994, !dbg !2218
  store i8 34, i8* %995, align 1, !dbg !2218
  br label %996, !dbg !2218

996:                                              ; preds = %992, %988
  %997 = load i64, i64* %29, align 8, !dbg !2221
  %998 = add i64 %997, 1, !dbg !2221
  store i64 %998, i64* %29, align 8, !dbg !2221
  br label %999, !dbg !2221

999:                                              ; preds = %996
  br label %1000, !dbg !2222

1000:                                             ; preds = %999
  %1001 = load i32, i32* @x.37
  %1002 = load i32, i32* @y.38
  %1003 = sub i32 %1001, 1
  %1004 = mul i32 %1001, %1003
  %1005 = urem i32 %1004, 2
  %1006 = icmp eq i32 %1005, 0
  %1007 = icmp slt i32 %1002, 10
  %1008 = or i1 %1006, %1007
  br i1 %1008, label %originalBB205, label %originalBB205alteredBB

originalBB205:                                    ; preds = %1000, %originalBB205alteredBB
  %1009 = load i64, i64* %29, align 8, !dbg !2223
  %1010 = load i64, i64* %20, align 8, !dbg !2223
  %1011 = icmp ult i64 %1009, %1010, !dbg !2223
  %1012 = load i32, i32* @x.37
  %1013 = load i32, i32* @y.38
  %1014 = sub i32 %1012, 1
  %1015 = mul i32 %1012, %1014
  %1016 = urem i32 %1015, 2
  %1017 = icmp eq i32 %1016, 0
  %1018 = icmp slt i32 %1013, 10
  %1019 = or i1 %1017, %1018
  br i1 %1019, label %originalBBpart2207, label %originalBB205alteredBB

originalBBpart2207:                               ; preds = %originalBB205
  br i1 %1011, label %1020, label %1024, !dbg !2226

1020:                                             ; preds = %originalBBpart2207
  %1021 = load i8*, i8** %19, align 8, !dbg !2223
  %1022 = load i64, i64* %29, align 8, !dbg !2223
  %1023 = getelementptr inbounds i8, i8* %1021, i64 %1022, !dbg !2223
  store i8 34, i8* %1023, align 1, !dbg !2223
  br label %1024, !dbg !2223

1024:                                             ; preds = %1020, %originalBBpart2207
  %1025 = load i64, i64* %29, align 8, !dbg !2226
  %1026 = add i64 %1025, 1, !dbg !2226
  store i64 %1026, i64* %29, align 8, !dbg !2226
  br label %1027, !dbg !2226

1027:                                             ; preds = %1024
  br label %1028, !dbg !2227

1028:                                             ; preds = %1027
  %1029 = load i32, i32* @x.37
  %1030 = load i32, i32* @y.38
  %1031 = sub i32 %1029, 1
  %1032 = mul i32 %1029, %1031
  %1033 = urem i32 %1032, 2
  %1034 = icmp eq i32 %1033, 0
  %1035 = icmp slt i32 %1030, 10
  %1036 = or i1 %1034, %1035
  br i1 %1036, label %originalBB209, label %originalBB209alteredBB

originalBB209:                                    ; preds = %1028, %originalBB209alteredBB
  %1037 = load i64, i64* %29, align 8, !dbg !2228
  %1038 = load i64, i64* %20, align 8, !dbg !2228
  %1039 = icmp ult i64 %1037, %1038, !dbg !2228
  %1040 = load i32, i32* @x.37
  %1041 = load i32, i32* @y.38
  %1042 = sub i32 %1040, 1
  %1043 = mul i32 %1040, %1042
  %1044 = urem i32 %1043, 2
  %1045 = icmp eq i32 %1044, 0
  %1046 = icmp slt i32 %1041, 10
  %1047 = or i1 %1045, %1046
  br i1 %1047, label %originalBBpart2211, label %originalBB209alteredBB

originalBBpart2211:                               ; preds = %originalBB209
  br i1 %1039, label %1048, label %1052, !dbg !2231

1048:                                             ; preds = %originalBBpart2211
  %1049 = load i8*, i8** %19, align 8, !dbg !2228
  %1050 = load i64, i64* %29, align 8, !dbg !2228
  %1051 = getelementptr inbounds i8, i8* %1049, i64 %1050, !dbg !2228
  store i8 63, i8* %1051, align 1, !dbg !2228
  br label %1052, !dbg !2228

1052:                                             ; preds = %1048, %originalBBpart2211
  %1053 = load i32, i32* @x.37
  %1054 = load i32, i32* @y.38
  %1055 = sub i32 %1053, 1
  %1056 = mul i32 %1053, %1055
  %1057 = urem i32 %1056, 2
  %1058 = icmp eq i32 %1057, 0
  %1059 = icmp slt i32 %1054, 10
  %1060 = or i1 %1058, %1059
  br i1 %1060, label %originalBB213, label %originalBB213alteredBB

originalBB213:                                    ; preds = %1052, %originalBB213alteredBB
  %1061 = load i64, i64* %29, align 8, !dbg !2231
  %1062 = add i64 %1061, 1, !dbg !2231
  store i64 %1062, i64* %29, align 8, !dbg !2231
  %1063 = load i32, i32* @x.37
  %1064 = load i32, i32* @y.38
  %1065 = sub i32 %1063, 1
  %1066 = mul i32 %1063, %1065
  %1067 = urem i32 %1066, 2
  %1068 = icmp eq i32 %1067, 0
  %1069 = icmp slt i32 %1064, 10
  %1070 = or i1 %1068, %1069
  br i1 %1070, label %originalBBpart2219, label %originalBB213alteredBB

originalBBpart2219:                               ; preds = %originalBB213
  br label %1071, !dbg !2231

1071:                                             ; preds = %originalBBpart2219
  br label %1089, !dbg !2232

1072:                                             ; preds = %925
  %1073 = load i32, i32* @x.37
  %1074 = load i32, i32* @y.38
  %1075 = sub i32 %1073, 1
  %1076 = mul i32 %1073, %1075
  %1077 = urem i32 %1076, 2
  %1078 = icmp eq i32 %1077, 0
  %1079 = icmp slt i32 %1074, 10
  %1080 = or i1 %1078, %1079
  br i1 %1080, label %originalBB221, label %originalBB221alteredBB

originalBB221:                                    ; preds = %1072, %originalBB221alteredBB
  %1081 = load i32, i32* @x.37
  %1082 = load i32, i32* @y.38
  %1083 = sub i32 %1081, 1
  %1084 = mul i32 %1081, %1083
  %1085 = urem i32 %1084, 2
  %1086 = icmp eq i32 %1085, 0
  %1087 = icmp slt i32 %1082, 10
  %1088 = or i1 %1086, %1087
  br i1 %1088, label %originalBBpart2223, label %originalBB221alteredBB

originalBBpart2223:                               ; preds = %originalBB221
  br label %1089, !dbg !2233

1089:                                             ; preds = %originalBBpart2223, %1071
  br label %1090, !dbg !2234

1090:                                             ; preds = %1089, %917, %originalBBpart2195, %892
  %1091 = load i32, i32* @x.37
  %1092 = load i32, i32* @y.38
  %1093 = sub i32 %1091, 1
  %1094 = mul i32 %1091, %1093
  %1095 = urem i32 %1094, 2
  %1096 = icmp eq i32 %1095, 0
  %1097 = icmp slt i32 %1092, 10
  %1098 = or i1 %1096, %1097
  br i1 %1098, label %originalBB225, label %originalBB225alteredBB

originalBB225:                                    ; preds = %1090, %originalBB225alteredBB
  %1099 = load i32, i32* @x.37
  %1100 = load i32, i32* @y.38
  %1101 = sub i32 %1099, 1
  %1102 = mul i32 %1099, %1101
  %1103 = urem i32 %1102, 2
  %1104 = icmp eq i32 %1103, 0
  %1105 = icmp slt i32 %1100, 10
  %1106 = or i1 %1104, %1105
  br i1 %1106, label %originalBBpart2227, label %originalBB225alteredBB

originalBBpart2227:                               ; preds = %originalBB225
  br label %1108, !dbg !2235

1107:                                             ; preds = %originalBBpart2174
  br label %1108, !dbg !2236

1108:                                             ; preds = %1107, %originalBBpart2227, %originalBBpart2178
  br label %2361, !dbg !2237

1109:                                             ; preds = %originalBBpart289
  store i8 97, i8* %40, align 1, !dbg !2238
  br label %1240, !dbg !2239

1110:                                             ; preds = %originalBBpart289
  store i8 98, i8* %40, align 1, !dbg !2240
  br label %1240, !dbg !2241

1111:                                             ; preds = %originalBBpart289
  store i8 102, i8* %40, align 1, !dbg !2242
  br label %1240, !dbg !2243

1112:                                             ; preds = %originalBBpart289
  store i8 110, i8* %40, align 1, !dbg !2244
  br label %1200, !dbg !2245

1113:                                             ; preds = %originalBBpart289
  %1114 = load i32, i32* @x.37
  %1115 = load i32, i32* @y.38
  %1116 = sub i32 %1114, 1
  %1117 = mul i32 %1114, %1116
  %1118 = urem i32 %1117, 2
  %1119 = icmp eq i32 %1118, 0
  %1120 = icmp slt i32 %1115, 10
  %1121 = or i1 %1119, %1120
  br i1 %1121, label %originalBB229, label %originalBB229alteredBB

originalBB229:                                    ; preds = %1113, %originalBB229alteredBB
  store i8 114, i8* %40, align 1, !dbg !2246
  %1122 = load i32, i32* @x.37
  %1123 = load i32, i32* @y.38
  %1124 = sub i32 %1122, 1
  %1125 = mul i32 %1122, %1124
  %1126 = urem i32 %1125, 2
  %1127 = icmp eq i32 %1126, 0
  %1128 = icmp slt i32 %1123, 10
  %1129 = or i1 %1127, %1128
  br i1 %1129, label %originalBBpart2231, label %originalBB229alteredBB

originalBBpart2231:                               ; preds = %originalBB229
  br label %1200, !dbg !2247

1130:                                             ; preds = %originalBBpart289
  store i8 116, i8* %40, align 1, !dbg !2248
  br label %1200, !dbg !2249

1131:                                             ; preds = %originalBBpart289
  store i8 118, i8* %40, align 1, !dbg !2250
  br label %1240, !dbg !2251

1132:                                             ; preds = %originalBBpart289
  %1133 = load i8, i8* %39, align 1, !dbg !2252
  store i8 %1133, i8* %40, align 1, !dbg !2253
  %1134 = load i32, i32* %23, align 4, !dbg !2254
  %1135 = icmp eq i32 %1134, 2, !dbg !2256
  br i1 %1135, label %1136, label %1173, !dbg !2257

1136:                                             ; preds = %1132
  %1137 = load i32, i32* @x.37
  %1138 = load i32, i32* @y.38
  %1139 = sub i32 %1137, 1
  %1140 = mul i32 %1137, %1139
  %1141 = urem i32 %1140, 2
  %1142 = icmp eq i32 %1141, 0
  %1143 = icmp slt i32 %1138, 10
  %1144 = or i1 %1142, %1143
  br i1 %1144, label %originalBB233, label %originalBB233alteredBB

originalBB233:                                    ; preds = %1136, %originalBB233alteredBB
  %1145 = load i8, i8* %35, align 1, !dbg !2258
  %1146 = trunc i8 %1145 to i1, !dbg !2258
  %1147 = load i32, i32* @x.37
  %1148 = load i32, i32* @y.38
  %1149 = sub i32 %1147, 1
  %1150 = mul i32 %1147, %1149
  %1151 = urem i32 %1150, 2
  %1152 = icmp eq i32 %1151, 0
  %1153 = icmp slt i32 %1148, 10
  %1154 = or i1 %1152, %1153
  br i1 %1154, label %originalBBpart2235, label %originalBB233alteredBB

originalBBpart2235:                               ; preds = %originalBB233
  br i1 %1146, label %1155, label %1156, !dbg !2261

1155:                                             ; preds = %originalBBpart2235
  br label %2894, !dbg !2262

1156:                                             ; preds = %originalBBpart2235
  %1157 = load i32, i32* @x.37
  %1158 = load i32, i32* @y.38
  %1159 = sub i32 %1157, 1
  %1160 = mul i32 %1157, %1159
  %1161 = urem i32 %1160, 2
  %1162 = icmp eq i32 %1161, 0
  %1163 = icmp slt i32 %1158, 10
  %1164 = or i1 %1162, %1163
  br i1 %1164, label %originalBB237, label %originalBB237alteredBB

originalBB237:                                    ; preds = %1156, %originalBB237alteredBB
  %1165 = load i32, i32* @x.37
  %1166 = load i32, i32* @y.38
  %1167 = sub i32 %1165, 1
  %1168 = mul i32 %1165, %1167
  %1169 = urem i32 %1168, 2
  %1170 = icmp eq i32 %1169, 0
  %1171 = icmp slt i32 %1166, 10
  %1172 = or i1 %1170, %1171
  br i1 %1172, label %originalBBpart2240, label %originalBB237alteredBB

originalBBpart2240:                               ; preds = %originalBB237
  br label %2614, !dbg !2263

1173:                                             ; preds = %1132
  %1174 = load i8, i8* %33, align 1, !dbg !2264
  %1175 = trunc i8 %1174 to i1, !dbg !2264
  br i1 %1175, label %1176, label %1183, !dbg !2266

1176:                                             ; preds = %1173
  %1177 = load i8, i8* %35, align 1, !dbg !2267
  %1178 = trunc i8 %1177 to i1, !dbg !2267
  br i1 %1178, label %1179, label %1183, !dbg !2268

1179:                                             ; preds = %1176
  %1180 = load i64, i64* %32, align 8, !dbg !2269
  %1181 = icmp ne i64 %1180, 0, !dbg !2269
  br i1 %1181, label %1182, label %1183, !dbg !2270

1182:                                             ; preds = %1179
  br label %2614, !dbg !2271

1183:                                             ; preds = %1179, %1176, %1173
  %1184 = load i32, i32* @x.37
  %1185 = load i32, i32* @y.38
  %1186 = sub i32 %1184, 1
  %1187 = mul i32 %1184, %1186
  %1188 = urem i32 %1187, 2
  %1189 = icmp eq i32 %1188, 0
  %1190 = icmp slt i32 %1185, 10
  %1191 = or i1 %1189, %1190
  br i1 %1191, label %originalBB242, label %originalBB242alteredBB

originalBB242:                                    ; preds = %1183, %originalBB242alteredBB
  %1192 = load i32, i32* @x.37
  %1193 = load i32, i32* @y.38
  %1194 = sub i32 %1192, 1
  %1195 = mul i32 %1192, %1194
  %1196 = urem i32 %1195, 2
  %1197 = icmp eq i32 %1196, 0
  %1198 = icmp slt i32 %1193, 10
  %1199 = or i1 %1197, %1198
  br i1 %1199, label %originalBBpart2244, label %originalBB242alteredBB

originalBBpart2244:                               ; preds = %originalBB242
  br label %1200, !dbg !2269

1200:                                             ; preds = %originalBBpart2244, %1130, %originalBBpart2231, %1112
  call void @llvm.dbg.label(metadata !2272), !dbg !2273
  %1201 = load i32, i32* %23, align 4, !dbg !2274
  %1202 = icmp eq i32 %1201, 2, !dbg !2276
  br i1 %1202, label %1203, label %1239, !dbg !2277

1203:                                             ; preds = %1200
  %1204 = load i32, i32* @x.37
  %1205 = load i32, i32* @y.38
  %1206 = sub i32 %1204, 1
  %1207 = mul i32 %1204, %1206
  %1208 = urem i32 %1207, 2
  %1209 = icmp eq i32 %1208, 0
  %1210 = icmp slt i32 %1205, 10
  %1211 = or i1 %1209, %1210
  br i1 %1211, label %originalBB246, label %originalBB246alteredBB

originalBB246:                                    ; preds = %1203, %originalBB246alteredBB
  %1212 = load i8, i8* %35, align 1, !dbg !2278
  %1213 = trunc i8 %1212 to i1, !dbg !2278
  %1214 = load i32, i32* @x.37
  %1215 = load i32, i32* @y.38
  %1216 = sub i32 %1214, 1
  %1217 = mul i32 %1214, %1216
  %1218 = urem i32 %1217, 2
  %1219 = icmp eq i32 %1218, 0
  %1220 = icmp slt i32 %1215, 10
  %1221 = or i1 %1219, %1220
  br i1 %1221, label %originalBBpart2248, label %originalBB246alteredBB

originalBBpart2248:                               ; preds = %originalBB246
  br i1 %1213, label %1222, label %1239, !dbg !2279

1222:                                             ; preds = %originalBBpart2248
  %1223 = load i32, i32* @x.37
  %1224 = load i32, i32* @y.38
  %1225 = sub i32 %1223, 1
  %1226 = mul i32 %1223, %1225
  %1227 = urem i32 %1226, 2
  %1228 = icmp eq i32 %1227, 0
  %1229 = icmp slt i32 %1224, 10
  %1230 = or i1 %1228, %1229
  br i1 %1230, label %originalBB250, label %originalBB250alteredBB

originalBB250:                                    ; preds = %1222, %originalBB250alteredBB
  %1231 = load i32, i32* @x.37
  %1232 = load i32, i32* @y.38
  %1233 = sub i32 %1231, 1
  %1234 = mul i32 %1231, %1233
  %1235 = urem i32 %1234, 2
  %1236 = icmp eq i32 %1235, 0
  %1237 = icmp slt i32 %1232, 10
  %1238 = or i1 %1236, %1237
  br i1 %1238, label %originalBBpart2252, label %originalBB250alteredBB

originalBBpart2252:                               ; preds = %originalBB250
  br label %2894, !dbg !2280

1239:                                             ; preds = %originalBBpart2248, %1200
  br label %1240, !dbg !2278

1240:                                             ; preds = %1239, %1131, %1111, %1110, %1109
  call void @llvm.dbg.label(metadata !2281), !dbg !2282
  %1241 = load i8, i8* %33, align 1, !dbg !2283
  %1242 = trunc i8 %1241 to i1, !dbg !2283
  br i1 %1242, label %1243, label %1261, !dbg !2285

1243:                                             ; preds = %1240
  %1244 = load i32, i32* @x.37
  %1245 = load i32, i32* @y.38
  %1246 = sub i32 %1244, 1
  %1247 = mul i32 %1244, %1246
  %1248 = urem i32 %1247, 2
  %1249 = icmp eq i32 %1248, 0
  %1250 = icmp slt i32 %1245, 10
  %1251 = or i1 %1249, %1250
  br i1 %1251, label %originalBB254, label %originalBB254alteredBB

originalBB254:                                    ; preds = %1243, %originalBB254alteredBB
  %1252 = load i8, i8* %40, align 1, !dbg !2286
  store i8 %1252, i8* %39, align 1, !dbg !2288
  %1253 = load i32, i32* @x.37
  %1254 = load i32, i32* @y.38
  %1255 = sub i32 %1253, 1
  %1256 = mul i32 %1253, %1255
  %1257 = urem i32 %1256, 2
  %1258 = icmp eq i32 %1257, 0
  %1259 = icmp slt i32 %1254, 10
  %1260 = or i1 %1258, %1259
  br i1 %1260, label %originalBBpart2256, label %originalBB254alteredBB

originalBBpart2256:                               ; preds = %originalBB254
  br label %2408, !dbg !2289

1261:                                             ; preds = %1240
  %1262 = load i32, i32* @x.37
  %1263 = load i32, i32* @y.38
  %1264 = sub i32 %1262, 1
  %1265 = mul i32 %1262, %1264
  %1266 = urem i32 %1265, 2
  %1267 = icmp eq i32 %1266, 0
  %1268 = icmp slt i32 %1263, 10
  %1269 = or i1 %1267, %1268
  br i1 %1269, label %originalBB258, label %originalBB258alteredBB

originalBB258:                                    ; preds = %1261, %originalBB258alteredBB
  %1270 = load i32, i32* @x.37
  %1271 = load i32, i32* @y.38
  %1272 = sub i32 %1270, 1
  %1273 = mul i32 %1270, %1272
  %1274 = urem i32 %1273, 2
  %1275 = icmp eq i32 %1274, 0
  %1276 = icmp slt i32 %1271, 10
  %1277 = or i1 %1275, %1276
  br i1 %1277, label %originalBBpart2260, label %originalBB258alteredBB

originalBBpart2260:                               ; preds = %originalBB258
  br label %2361, !dbg !2290

1278:                                             ; preds = %originalBBpart289, %originalBBpart289
  %1279 = load i64, i64* %22, align 8, !dbg !2291
  %1280 = icmp eq i64 %1279, -1, !dbg !2293
  br i1 %1280, label %1281, label %1287, !dbg !2294

1281:                                             ; preds = %1278
  %1282 = load i8*, i8** %21, align 8, !dbg !2295
  %1283 = getelementptr inbounds i8, i8* %1282, i64 1, !dbg !2295
  %1284 = load i8, i8* %1283, align 1, !dbg !2295
  %1285 = sext i8 %1284 to i32, !dbg !2295
  %1286 = icmp eq i32 %1285, 0, !dbg !2296
  br i1 %1286, label %1291, label %1290, !dbg !2291

1287:                                             ; preds = %1278
  %1288 = load i64, i64* %22, align 8, !dbg !2297
  %1289 = icmp eq i64 %1288, 1, !dbg !2298
  br i1 %1289, label %1291, label %1290, !dbg !2294

1290:                                             ; preds = %1287, %1281
  br label %2361, !dbg !2299

1291:                                             ; preds = %1287, %1281
  br label %1292, !dbg !2300

1292:                                             ; preds = %1291, %originalBBpart289, %originalBBpart289
  %1293 = load i64, i64* %28, align 8, !dbg !2301
  %1294 = icmp ne i64 %1293, 0, !dbg !2303
  br i1 %1294, label %1295, label %1312, !dbg !2304

1295:                                             ; preds = %1292
  %1296 = load i32, i32* @x.37
  %1297 = load i32, i32* @y.38
  %1298 = sub i32 %1296, 1
  %1299 = mul i32 %1296, %1298
  %1300 = urem i32 %1299, 2
  %1301 = icmp eq i32 %1300, 0
  %1302 = icmp slt i32 %1297, 10
  %1303 = or i1 %1301, %1302
  br i1 %1303, label %originalBB262, label %originalBB262alteredBB

originalBB262:                                    ; preds = %1295, %originalBB262alteredBB
  %1304 = load i32, i32* @x.37
  %1305 = load i32, i32* @y.38
  %1306 = sub i32 %1304, 1
  %1307 = mul i32 %1304, %1306
  %1308 = urem i32 %1307, 2
  %1309 = icmp eq i32 %1308, 0
  %1310 = icmp slt i32 %1305, 10
  %1311 = or i1 %1309, %1310
  br i1 %1311, label %originalBBpart2264, label %originalBB262alteredBB

originalBBpart2264:                               ; preds = %originalBB262
  br label %2361, !dbg !2305

1312:                                             ; preds = %1292
  br label %1313, !dbg !2306

1313:                                             ; preds = %1312, %originalBBpart289
  store i8 1, i8* %43, align 1, !dbg !2307
  br label %1314, !dbg !2308

1314:                                             ; preds = %1313, %originalBBpart289, %originalBBpart289, %originalBBpart289, %originalBBpart289, %originalBBpart289, %originalBBpart289, %originalBBpart289, %originalBBpart289, %originalBBpart289, %originalBBpart289, %originalBBpart289, %originalBBpart289, %originalBBpart289, %originalBBpart289, %originalBBpart289
  %1315 = load i32, i32* @x.37
  %1316 = load i32, i32* @y.38
  %1317 = sub i32 %1315, 1
  %1318 = mul i32 %1315, %1317
  %1319 = urem i32 %1318, 2
  %1320 = icmp eq i32 %1319, 0
  %1321 = icmp slt i32 %1316, 10
  %1322 = or i1 %1320, %1321
  br i1 %1322, label %originalBB266, label %originalBB266alteredBB

originalBB266:                                    ; preds = %1314, %originalBB266alteredBB
  %1323 = load i32, i32* %23, align 4, !dbg !2309
  %1324 = icmp eq i32 %1323, 2, !dbg !2311
  %1325 = load i32, i32* @x.37
  %1326 = load i32, i32* @y.38
  %1327 = sub i32 %1325, 1
  %1328 = mul i32 %1325, %1327
  %1329 = urem i32 %1328, 2
  %1330 = icmp eq i32 %1329, 0
  %1331 = icmp slt i32 %1326, 10
  %1332 = or i1 %1330, %1331
  br i1 %1332, label %originalBBpart2268, label %originalBB266alteredBB

originalBBpart2268:                               ; preds = %originalBB266
  br i1 %1324, label %1333, label %1369, !dbg !2312

1333:                                             ; preds = %originalBBpart2268
  %1334 = load i32, i32* @x.37
  %1335 = load i32, i32* @y.38
  %1336 = sub i32 %1334, 1
  %1337 = mul i32 %1334, %1336
  %1338 = urem i32 %1337, 2
  %1339 = icmp eq i32 %1338, 0
  %1340 = icmp slt i32 %1335, 10
  %1341 = or i1 %1339, %1340
  br i1 %1341, label %originalBB270, label %originalBB270alteredBB

originalBB270:                                    ; preds = %1333, %originalBB270alteredBB
  %1342 = load i8, i8* %35, align 1, !dbg !2313
  %1343 = trunc i8 %1342 to i1, !dbg !2313
  %1344 = load i32, i32* @x.37
  %1345 = load i32, i32* @y.38
  %1346 = sub i32 %1344, 1
  %1347 = mul i32 %1344, %1346
  %1348 = urem i32 %1347, 2
  %1349 = icmp eq i32 %1348, 0
  %1350 = icmp slt i32 %1345, 10
  %1351 = or i1 %1349, %1350
  br i1 %1351, label %originalBBpart2272, label %originalBB270alteredBB

originalBBpart2272:                               ; preds = %originalBB270
  br i1 %1343, label %1352, label %1369, !dbg !2314

1352:                                             ; preds = %originalBBpart2272
  %1353 = load i32, i32* @x.37
  %1354 = load i32, i32* @y.38
  %1355 = sub i32 %1353, 1
  %1356 = mul i32 %1353, %1355
  %1357 = urem i32 %1356, 2
  %1358 = icmp eq i32 %1357, 0
  %1359 = icmp slt i32 %1354, 10
  %1360 = or i1 %1358, %1359
  br i1 %1360, label %originalBB274, label %originalBB274alteredBB

originalBB274:                                    ; preds = %1352, %originalBB274alteredBB
  %1361 = load i32, i32* @x.37
  %1362 = load i32, i32* @y.38
  %1363 = sub i32 %1361, 1
  %1364 = mul i32 %1361, %1363
  %1365 = urem i32 %1364, 2
  %1366 = icmp eq i32 %1365, 0
  %1367 = icmp slt i32 %1362, 10
  %1368 = or i1 %1366, %1367
  br i1 %1368, label %originalBBpart2276, label %originalBB274alteredBB

originalBBpart2276:                               ; preds = %originalBB274
  br label %2894, !dbg !2315

1369:                                             ; preds = %originalBBpart2272, %originalBBpart2268
  br label %2361, !dbg !2316

1370:                                             ; preds = %originalBBpart289
  %1371 = load i32, i32* @x.37
  %1372 = load i32, i32* @y.38
  %1373 = sub i32 %1371, 1
  %1374 = mul i32 %1371, %1373
  %1375 = urem i32 %1374, 2
  %1376 = icmp eq i32 %1375, 0
  %1377 = icmp slt i32 %1372, 10
  %1378 = or i1 %1376, %1377
  br i1 %1378, label %originalBB278, label %originalBB278alteredBB

originalBB278:                                    ; preds = %1370, %originalBB278alteredBB
  store i8 1, i8* %37, align 1, !dbg !2317
  store i8 1, i8* %43, align 1, !dbg !2318
  %1379 = load i32, i32* %23, align 4, !dbg !2319
  %1380 = icmp eq i32 %1379, 2, !dbg !2321
  %1381 = load i32, i32* @x.37
  %1382 = load i32, i32* @y.38
  %1383 = sub i32 %1381, 1
  %1384 = mul i32 %1381, %1383
  %1385 = urem i32 %1384, 2
  %1386 = icmp eq i32 %1385, 0
  %1387 = icmp slt i32 %1382, 10
  %1388 = or i1 %1386, %1387
  br i1 %1388, label %originalBBpart2280, label %originalBB278alteredBB

originalBBpart2280:                               ; preds = %originalBB278
  br i1 %1380, label %1389, label %1550, !dbg !2322

1389:                                             ; preds = %originalBBpart2280
  %1390 = load i8, i8* %35, align 1, !dbg !2323
  %1391 = trunc i8 %1390 to i1, !dbg !2323
  br i1 %1391, label %1392, label %1393, !dbg !2326

1392:                                             ; preds = %1389
  br label %2894, !dbg !2327

1393:                                             ; preds = %1389
  %1394 = load i64, i64* %20, align 8, !dbg !2328
  %1395 = icmp ne i64 %1394, 0, !dbg !2328
  br i1 %1395, label %1396, label %1417, !dbg !2330

1396:                                             ; preds = %1393
  %1397 = load i64, i64* %30, align 8, !dbg !2331
  %1398 = icmp ne i64 %1397, 0, !dbg !2331
  br i1 %1398, label %1417, label %1399, !dbg !2332

1399:                                             ; preds = %1396
  %1400 = load i32, i32* @x.37
  %1401 = load i32, i32* @y.38
  %1402 = sub i32 %1400, 1
  %1403 = mul i32 %1400, %1402
  %1404 = urem i32 %1403, 2
  %1405 = icmp eq i32 %1404, 0
  %1406 = icmp slt i32 %1401, 10
  %1407 = or i1 %1405, %1406
  br i1 %1407, label %originalBB282, label %originalBB282alteredBB

originalBB282:                                    ; preds = %1399, %originalBB282alteredBB
  %1408 = load i64, i64* %20, align 8, !dbg !2333
  store i64 %1408, i64* %30, align 8, !dbg !2335
  store i64 0, i64* %20, align 8, !dbg !2336
  %1409 = load i32, i32* @x.37
  %1410 = load i32, i32* @y.38
  %1411 = sub i32 %1409, 1
  %1412 = mul i32 %1409, %1411
  %1413 = urem i32 %1412, 2
  %1414 = icmp eq i32 %1413, 0
  %1415 = icmp slt i32 %1410, 10
  %1416 = or i1 %1414, %1415
  br i1 %1416, label %originalBBpart2284, label %originalBB282alteredBB

originalBBpart2284:                               ; preds = %originalBB282
  br label %1417, !dbg !2337

1417:                                             ; preds = %originalBBpart2284, %1396, %1393
  br label %1418, !dbg !2338

1418:                                             ; preds = %1417
  %1419 = load i64, i64* %29, align 8, !dbg !2339
  %1420 = load i64, i64* %20, align 8, !dbg !2339
  %1421 = icmp ult i64 %1419, %1420, !dbg !2339
  br i1 %1421, label %1422, label %1426, !dbg !2342

1422:                                             ; preds = %1418
  %1423 = load i8*, i8** %19, align 8, !dbg !2339
  %1424 = load i64, i64* %29, align 8, !dbg !2339
  %1425 = getelementptr inbounds i8, i8* %1423, i64 %1424, !dbg !2339
  store i8 39, i8* %1425, align 1, !dbg !2339
  br label %1426, !dbg !2339

1426:                                             ; preds = %1422, %1418
  %1427 = load i32, i32* @x.37
  %1428 = load i32, i32* @y.38
  %1429 = sub i32 %1427, 1
  %1430 = mul i32 %1427, %1429
  %1431 = urem i32 %1430, 2
  %1432 = icmp eq i32 %1431, 0
  %1433 = icmp slt i32 %1428, 10
  %1434 = or i1 %1432, %1433
  br i1 %1434, label %originalBB286, label %originalBB286alteredBB

originalBB286:                                    ; preds = %1426, %originalBB286alteredBB
  %1435 = load i64, i64* %29, align 8, !dbg !2342
  %1436 = add i64 %1435, 1, !dbg !2342
  store i64 %1436, i64* %29, align 8, !dbg !2342
  %1437 = load i32, i32* @x.37
  %1438 = load i32, i32* @y.38
  %1439 = sub i32 %1437, 1
  %1440 = mul i32 %1437, %1439
  %1441 = urem i32 %1440, 2
  %1442 = icmp eq i32 %1441, 0
  %1443 = icmp slt i32 %1438, 10
  %1444 = or i1 %1442, %1443
  br i1 %1444, label %originalBBpart2292, label %originalBB286alteredBB

originalBBpart2292:                               ; preds = %originalBB286
  br label %1445, !dbg !2342

1445:                                             ; preds = %originalBBpart2292
  br label %1446, !dbg !2343

1446:                                             ; preds = %1445
  %1447 = load i64, i64* %29, align 8, !dbg !2344
  %1448 = load i64, i64* %20, align 8, !dbg !2344
  %1449 = icmp ult i64 %1447, %1448, !dbg !2344
  br i1 %1449, label %1450, label %1470, !dbg !2347

1450:                                             ; preds = %1446
  %1451 = load i32, i32* @x.37
  %1452 = load i32, i32* @y.38
  %1453 = sub i32 %1451, 1
  %1454 = mul i32 %1451, %1453
  %1455 = urem i32 %1454, 2
  %1456 = icmp eq i32 %1455, 0
  %1457 = icmp slt i32 %1452, 10
  %1458 = or i1 %1456, %1457
  br i1 %1458, label %originalBB294, label %originalBB294alteredBB

originalBB294:                                    ; preds = %1450, %originalBB294alteredBB
  %1459 = load i8*, i8** %19, align 8, !dbg !2344
  %1460 = load i64, i64* %29, align 8, !dbg !2344
  %1461 = getelementptr inbounds i8, i8* %1459, i64 %1460, !dbg !2344
  store i8 92, i8* %1461, align 1, !dbg !2344
  %1462 = load i32, i32* @x.37
  %1463 = load i32, i32* @y.38
  %1464 = sub i32 %1462, 1
  %1465 = mul i32 %1462, %1464
  %1466 = urem i32 %1465, 2
  %1467 = icmp eq i32 %1466, 0
  %1468 = icmp slt i32 %1463, 10
  %1469 = or i1 %1467, %1468
  br i1 %1469, label %originalBBpart2296, label %originalBB294alteredBB

originalBBpart2296:                               ; preds = %originalBB294
  br label %1470, !dbg !2344

1470:                                             ; preds = %originalBBpart2296, %1446
  %1471 = load i32, i32* @x.37
  %1472 = load i32, i32* @y.38
  %1473 = sub i32 %1471, 1
  %1474 = mul i32 %1471, %1473
  %1475 = urem i32 %1474, 2
  %1476 = icmp eq i32 %1475, 0
  %1477 = icmp slt i32 %1472, 10
  %1478 = or i1 %1476, %1477
  br i1 %1478, label %originalBB298, label %originalBB298alteredBB

originalBB298:                                    ; preds = %1470, %originalBB298alteredBB
  %1479 = load i64, i64* %29, align 8, !dbg !2347
  %1480 = add i64 %1479, 1, !dbg !2347
  store i64 %1480, i64* %29, align 8, !dbg !2347
  %1481 = load i32, i32* @x.37
  %1482 = load i32, i32* @y.38
  %1483 = sub i32 %1481, 1
  %1484 = mul i32 %1481, %1483
  %1485 = urem i32 %1484, 2
  %1486 = icmp eq i32 %1485, 0
  %1487 = icmp slt i32 %1482, 10
  %1488 = or i1 %1486, %1487
  br i1 %1488, label %originalBBpart2315, label %originalBB298alteredBB

originalBBpart2315:                               ; preds = %originalBB298
  br label %1489, !dbg !2347

1489:                                             ; preds = %originalBBpart2315
  br label %1490, !dbg !2348

1490:                                             ; preds = %1489
  %1491 = load i32, i32* @x.37
  %1492 = load i32, i32* @y.38
  %1493 = sub i32 %1491, 1
  %1494 = mul i32 %1491, %1493
  %1495 = urem i32 %1494, 2
  %1496 = icmp eq i32 %1495, 0
  %1497 = icmp slt i32 %1492, 10
  %1498 = or i1 %1496, %1497
  br i1 %1498, label %originalBB317, label %originalBB317alteredBB

originalBB317:                                    ; preds = %1490, %originalBB317alteredBB
  %1499 = load i64, i64* %29, align 8, !dbg !2349
  %1500 = load i64, i64* %20, align 8, !dbg !2349
  %1501 = icmp ult i64 %1499, %1500, !dbg !2349
  %1502 = load i32, i32* @x.37
  %1503 = load i32, i32* @y.38
  %1504 = sub i32 %1502, 1
  %1505 = mul i32 %1502, %1504
  %1506 = urem i32 %1505, 2
  %1507 = icmp eq i32 %1506, 0
  %1508 = icmp slt i32 %1503, 10
  %1509 = or i1 %1507, %1508
  br i1 %1509, label %originalBBpart2319, label %originalBB317alteredBB

originalBBpart2319:                               ; preds = %originalBB317
  br i1 %1501, label %1510, label %1514, !dbg !2352

1510:                                             ; preds = %originalBBpart2319
  %1511 = load i8*, i8** %19, align 8, !dbg !2349
  %1512 = load i64, i64* %29, align 8, !dbg !2349
  %1513 = getelementptr inbounds i8, i8* %1511, i64 %1512, !dbg !2349
  store i8 39, i8* %1513, align 1, !dbg !2349
  br label %1514, !dbg !2349

1514:                                             ; preds = %1510, %originalBBpart2319
  %1515 = load i32, i32* @x.37
  %1516 = load i32, i32* @y.38
  %1517 = sub i32 %1515, 1
  %1518 = mul i32 %1515, %1517
  %1519 = urem i32 %1518, 2
  %1520 = icmp eq i32 %1519, 0
  %1521 = icmp slt i32 %1516, 10
  %1522 = or i1 %1520, %1521
  br i1 %1522, label %originalBB321, label %originalBB321alteredBB

originalBB321:                                    ; preds = %1514, %originalBB321alteredBB
  %1523 = load i64, i64* %29, align 8, !dbg !2352
  %1524 = add i64 %1523, 1, !dbg !2352
  store i64 %1524, i64* %29, align 8, !dbg !2352
  %1525 = load i32, i32* @x.37
  %1526 = load i32, i32* @y.38
  %1527 = sub i32 %1525, 1
  %1528 = mul i32 %1525, %1527
  %1529 = urem i32 %1528, 2
  %1530 = icmp eq i32 %1529, 0
  %1531 = icmp slt i32 %1526, 10
  %1532 = or i1 %1530, %1531
  br i1 %1532, label %originalBBpart2329, label %originalBB321alteredBB

originalBBpart2329:                               ; preds = %originalBB321
  br label %1533, !dbg !2352

1533:                                             ; preds = %originalBBpart2329
  %1534 = load i32, i32* @x.37
  %1535 = load i32, i32* @y.38
  %1536 = sub i32 %1534, 1
  %1537 = mul i32 %1534, %1536
  %1538 = urem i32 %1537, 2
  %1539 = icmp eq i32 %1538, 0
  %1540 = icmp slt i32 %1535, 10
  %1541 = or i1 %1539, %1540
  br i1 %1541, label %originalBB331, label %originalBB331alteredBB

originalBB331:                                    ; preds = %1533, %originalBB331alteredBB
  store i8 0, i8* %36, align 1, !dbg !2353
  %1542 = load i32, i32* @x.37
  %1543 = load i32, i32* @y.38
  %1544 = sub i32 %1542, 1
  %1545 = mul i32 %1542, %1544
  %1546 = urem i32 %1545, 2
  %1547 = icmp eq i32 %1546, 0
  %1548 = icmp slt i32 %1543, 10
  %1549 = or i1 %1547, %1548
  br i1 %1549, label %originalBBpart2333, label %originalBB331alteredBB

originalBBpart2333:                               ; preds = %originalBB331
  br label %1550, !dbg !2354

1550:                                             ; preds = %originalBBpart2333, %originalBBpart2280
  br label %2361, !dbg !2355

1551:                                             ; preds = %originalBBpart289, %originalBBpart289, %originalBBpart289, %originalBBpart289, %originalBBpart289, %originalBBpart289, %originalBBpart289, %originalBBpart289, %originalBBpart289, %originalBBpart289, %originalBBpart289, %originalBBpart289, %originalBBpart289, %originalBBpart289, %originalBBpart289, %originalBBpart289, %originalBBpart289, %originalBBpart289, %originalBBpart289, %originalBBpart289, %originalBBpart289, %originalBBpart289, %originalBBpart289, %originalBBpart289, %originalBBpart289, %originalBBpart289, %originalBBpart289, %originalBBpart289, %originalBBpart289, %originalBBpart289, %originalBBpart289, %originalBBpart289, %originalBBpart289, %originalBBpart289, %originalBBpart289, %originalBBpart289, %originalBBpart289, %originalBBpart289, %originalBBpart289, %originalBBpart289, %originalBBpart289, %originalBBpart289, %originalBBpart289, %originalBBpart289, %originalBBpart289, %originalBBpart289, %originalBBpart289, %originalBBpart289, %originalBBpart289, %originalBBpart289, %originalBBpart289, %originalBBpart289, %originalBBpart289, %originalBBpart289, %originalBBpart289, %originalBBpart289, %originalBBpart289, %originalBBpart289, %originalBBpart289, %originalBBpart289, %originalBBpart289, %originalBBpart289, %originalBBpart289, %originalBBpart289, %originalBBpart289, %originalBBpart289, %originalBBpart289, %originalBBpart289, %originalBBpart289, %originalBBpart289, %originalBBpart289
  store i8 1, i8* %43, align 1, !dbg !2356
  br label %2361, !dbg !2357

1552:                                             ; preds = %originalBBpart289
  call void @llvm.dbg.declare(metadata i64* %44, metadata !2358, metadata !DIExpression()), !dbg !2360
  call void @llvm.dbg.declare(metadata i8* %45, metadata !2361, metadata !DIExpression()), !dbg !2362
  %1553 = load i8, i8* %34, align 1, !dbg !2363
  %1554 = trunc i8 %1553 to i1, !dbg !2363
  br i1 %1554, label %1555, label %1567, !dbg !2365

1555:                                             ; preds = %1552
  store i64 1, i64* %44, align 8, !dbg !2366
  %1556 = call i16** @__ctype_b_loc() #15, !dbg !2368
  %1557 = load i16*, i16** %1556, align 8, !dbg !2368
  %1558 = load i8, i8* %39, align 1, !dbg !2368
  %1559 = zext i8 %1558 to i32, !dbg !2368
  %1560 = sext i32 %1559 to i64, !dbg !2368
  %1561 = getelementptr inbounds i16, i16* %1557, i64 %1560, !dbg !2368
  %1562 = load i16, i16* %1561, align 2, !dbg !2368
  %1563 = zext i16 %1562 to i32, !dbg !2368
  %1564 = and i32 %1563, 16384, !dbg !2368
  %1565 = icmp ne i32 %1564, 0, !dbg !2369
  %1566 = zext i1 %1565 to i8, !dbg !2370
  store i8 %1566, i8* %45, align 1, !dbg !2370
  br label %1888, !dbg !2371

1567:                                             ; preds = %1552
  call void @llvm.dbg.declare(metadata %struct.__mbstate_t* %46, metadata !2372, metadata !DIExpression()), !dbg !2389
  %1568 = bitcast %struct.__mbstate_t* %46 to i8*, !dbg !2390
  call void @llvm.memset.p0i8.i64(i8* align 4 %1568, i8 0, i64 8, i1 false), !dbg !2390
  store i64 0, i64* %44, align 8, !dbg !2391
  store i8 1, i8* %45, align 1, !dbg !2392
  %1569 = load i64, i64* %22, align 8, !dbg !2393
  %1570 = icmp eq i64 %1569, -1, !dbg !2395
  br i1 %1570, label %1571, label %1590, !dbg !2396

1571:                                             ; preds = %1567
  %1572 = load i32, i32* @x.37
  %1573 = load i32, i32* @y.38
  %1574 = sub i32 %1572, 1
  %1575 = mul i32 %1572, %1574
  %1576 = urem i32 %1575, 2
  %1577 = icmp eq i32 %1576, 0
  %1578 = icmp slt i32 %1573, 10
  %1579 = or i1 %1577, %1578
  br i1 %1579, label %originalBB335, label %originalBB335alteredBB

originalBB335:                                    ; preds = %1571, %originalBB335alteredBB
  %1580 = load i8*, i8** %21, align 8, !dbg !2397
  %1581 = call i64 @strlen(i8* %1580) #13, !dbg !2398
  store i64 %1581, i64* %22, align 8, !dbg !2399
  %1582 = load i32, i32* @x.37
  %1583 = load i32, i32* @y.38
  %1584 = sub i32 %1582, 1
  %1585 = mul i32 %1582, %1584
  %1586 = urem i32 %1585, 2
  %1587 = icmp eq i32 %1586, 0
  %1588 = icmp slt i32 %1583, 10
  %1589 = or i1 %1587, %1588
  br i1 %1589, label %originalBBpart2337, label %originalBB335alteredBB

originalBBpart2337:                               ; preds = %originalBB335
  br label %1590, !dbg !2400

1590:                                             ; preds = %originalBBpart2337, %1567
  %1591 = load i32, i32* @x.37
  %1592 = load i32, i32* @y.38
  %1593 = sub i32 %1591, 1
  %1594 = mul i32 %1591, %1593
  %1595 = urem i32 %1594, 2
  %1596 = icmp eq i32 %1595, 0
  %1597 = icmp slt i32 %1592, 10
  %1598 = or i1 %1596, %1597
  br i1 %1598, label %originalBB339, label %originalBB339alteredBB

originalBB339:                                    ; preds = %1590, %originalBB339alteredBB
  %1599 = load i32, i32* @x.37
  %1600 = load i32, i32* @y.38
  %1601 = sub i32 %1599, 1
  %1602 = mul i32 %1599, %1601
  %1603 = urem i32 %1602, 2
  %1604 = icmp eq i32 %1603, 0
  %1605 = icmp slt i32 %1600, 10
  %1606 = or i1 %1604, %1605
  br i1 %1606, label %originalBBpart2341, label %originalBB339alteredBB

originalBBpart2341:                               ; preds = %originalBB339
  br label %1607, !dbg !2401

1607:                                             ; preds = %1867, %originalBBpart2341
  call void @llvm.dbg.declare(metadata i32* %47, metadata !2402, metadata !DIExpression()), !dbg !2405
  call void @llvm.dbg.declare(metadata i64* %48, metadata !2406, metadata !DIExpression()), !dbg !2407
  %1608 = load i8*, i8** %21, align 8, !dbg !2408
  %1609 = load i64, i64* %28, align 8, !dbg !2409
  %1610 = load i64, i64* %44, align 8, !dbg !2410
  %1611 = add i64 %1609, %1610, !dbg !2411
  %1612 = getelementptr inbounds i8, i8* %1608, i64 %1611, !dbg !2408
  %1613 = load i64, i64* %22, align 8, !dbg !2412
  %1614 = load i64, i64* %28, align 8, !dbg !2413
  %1615 = load i64, i64* %44, align 8, !dbg !2414
  %1616 = add i64 %1614, %1615, !dbg !2415
  %1617 = sub i64 %1613, %1616, !dbg !2416
  %1618 = call i64 @rpl_mbrtowc(i32* %47, i8* %1612, i64 %1617, %struct.__mbstate_t* %46), !dbg !2417
  store i64 %1618, i64* %48, align 8, !dbg !2407
  %1619 = load i64, i64* %48, align 8, !dbg !2418
  %1620 = icmp eq i64 %1619, 0, !dbg !2420
  br i1 %1620, label %1621, label %1638, !dbg !2421

1621:                                             ; preds = %1607
  %1622 = load i32, i32* @x.37
  %1623 = load i32, i32* @y.38
  %1624 = sub i32 %1622, 1
  %1625 = mul i32 %1622, %1624
  %1626 = urem i32 %1625, 2
  %1627 = icmp eq i32 %1626, 0
  %1628 = icmp slt i32 %1623, 10
  %1629 = or i1 %1627, %1628
  br i1 %1629, label %originalBB343, label %originalBB343alteredBB

originalBB343:                                    ; preds = %1621, %originalBB343alteredBB
  %1630 = load i32, i32* @x.37
  %1631 = load i32, i32* @y.38
  %1632 = sub i32 %1630, 1
  %1633 = mul i32 %1630, %1632
  %1634 = urem i32 %1633, 2
  %1635 = icmp eq i32 %1634, 0
  %1636 = icmp slt i32 %1631, 10
  %1637 = or i1 %1635, %1636
  br i1 %1637, label %originalBBpart2345, label %originalBB343alteredBB

originalBBpart2345:                               ; preds = %originalBB343
  br label %1871, !dbg !2422

1638:                                             ; preds = %1607
  %1639 = load i32, i32* @x.37
  %1640 = load i32, i32* @y.38
  %1641 = sub i32 %1639, 1
  %1642 = mul i32 %1639, %1641
  %1643 = urem i32 %1642, 2
  %1644 = icmp eq i32 %1643, 0
  %1645 = icmp slt i32 %1640, 10
  %1646 = or i1 %1644, %1645
  br i1 %1646, label %originalBB347, label %originalBB347alteredBB

originalBB347:                                    ; preds = %1638, %originalBB347alteredBB
  %1647 = load i64, i64* %48, align 8, !dbg !2423
  %1648 = icmp eq i64 %1647, -1, !dbg !2425
  %1649 = load i32, i32* @x.37
  %1650 = load i32, i32* @y.38
  %1651 = sub i32 %1649, 1
  %1652 = mul i32 %1649, %1651
  %1653 = urem i32 %1652, 2
  %1654 = icmp eq i32 %1653, 0
  %1655 = icmp slt i32 %1650, 10
  %1656 = or i1 %1654, %1655
  br i1 %1656, label %originalBBpart2349, label %originalBB347alteredBB

originalBBpart2349:                               ; preds = %originalBB347
  br i1 %1648, label %1657, label %1658, !dbg !2426

1657:                                             ; preds = %originalBBpart2349
  store i8 0, i8* %45, align 1, !dbg !2427
  br label %1871, !dbg !2429

1658:                                             ; preds = %originalBBpart2349
  %1659 = load i32, i32* @x.37
  %1660 = load i32, i32* @y.38
  %1661 = sub i32 %1659, 1
  %1662 = mul i32 %1659, %1661
  %1663 = urem i32 %1662, 2
  %1664 = icmp eq i32 %1663, 0
  %1665 = icmp slt i32 %1660, 10
  %1666 = or i1 %1664, %1665
  br i1 %1666, label %originalBB351, label %originalBB351alteredBB

originalBB351:                                    ; preds = %1658, %originalBB351alteredBB
  %1667 = load i64, i64* %48, align 8, !dbg !2430
  %1668 = icmp eq i64 %1667, -2, !dbg !2432
  %1669 = load i32, i32* @x.37
  %1670 = load i32, i32* @y.38
  %1671 = sub i32 %1669, 1
  %1672 = mul i32 %1669, %1671
  %1673 = urem i32 %1672, 2
  %1674 = icmp eq i32 %1673, 0
  %1675 = icmp slt i32 %1670, 10
  %1676 = or i1 %1674, %1675
  br i1 %1676, label %originalBBpart2353, label %originalBB351alteredBB

originalBBpart2353:                               ; preds = %originalBB351
  br i1 %1668, label %1677, label %1747, !dbg !2433

1677:                                             ; preds = %originalBBpart2353
  %1678 = load i32, i32* @x.37
  %1679 = load i32, i32* @y.38
  %1680 = sub i32 %1678, 1
  %1681 = mul i32 %1678, %1680
  %1682 = urem i32 %1681, 2
  %1683 = icmp eq i32 %1682, 0
  %1684 = icmp slt i32 %1679, 10
  %1685 = or i1 %1683, %1684
  br i1 %1685, label %originalBB355, label %originalBB355alteredBB

originalBB355:                                    ; preds = %1677, %originalBB355alteredBB
  store i8 0, i8* %45, align 1, !dbg !2434
  %1686 = load i32, i32* @x.37
  %1687 = load i32, i32* @y.38
  %1688 = sub i32 %1686, 1
  %1689 = mul i32 %1686, %1688
  %1690 = urem i32 %1689, 2
  %1691 = icmp eq i32 %1690, 0
  %1692 = icmp slt i32 %1687, 10
  %1693 = or i1 %1691, %1692
  br i1 %1693, label %originalBBpart2357, label %originalBB355alteredBB

originalBBpart2357:                               ; preds = %originalBB355
  br label %1694, !dbg !2436

1694:                                             ; preds = %originalBBpart2379, %originalBBpart2357
  %1695 = load i64, i64* %28, align 8, !dbg !2437
  %1696 = load i64, i64* %44, align 8, !dbg !2438
  %1697 = add i64 %1695, %1696, !dbg !2439
  %1698 = load i64, i64* %22, align 8, !dbg !2440
  %1699 = icmp ult i64 %1697, %1698, !dbg !2441
  br i1 %1699, label %1700, label %1709, !dbg !2442

1700:                                             ; preds = %1694
  %1701 = load i8*, i8** %21, align 8, !dbg !2443
  %1702 = load i64, i64* %28, align 8, !dbg !2444
  %1703 = load i64, i64* %44, align 8, !dbg !2445
  %1704 = add i64 %1702, %1703, !dbg !2446
  %1705 = getelementptr inbounds i8, i8* %1701, i64 %1704, !dbg !2443
  %1706 = load i8, i8* %1705, align 1, !dbg !2443
  %1707 = sext i8 %1706 to i32, !dbg !2443
  %1708 = icmp ne i32 %1707, 0, !dbg !2442
  br label %1709

1709:                                             ; preds = %1700, %1694
  %1710 = phi i1 [ false, %1694 ], [ %1708, %1700 ], !dbg !2447
  %1711 = load i32, i32* @x.37
  %1712 = load i32, i32* @y.38
  %1713 = sub i32 %1711, 1
  %1714 = mul i32 %1711, %1713
  %1715 = urem i32 %1714, 2
  %1716 = icmp eq i32 %1715, 0
  %1717 = icmp slt i32 %1712, 10
  %1718 = or i1 %1716, %1717
  br i1 %1718, label %originalBB359, label %originalBB359alteredBB

originalBB359:                                    ; preds = %1709, %originalBB359alteredBB
  %1719 = load i32, i32* @x.37
  %1720 = load i32, i32* @y.38
  %1721 = sub i32 %1719, 1
  %1722 = mul i32 %1719, %1721
  %1723 = urem i32 %1722, 2
  %1724 = icmp eq i32 %1723, 0
  %1725 = icmp slt i32 %1720, 10
  %1726 = or i1 %1724, %1725
  br i1 %1726, label %originalBBpart2361, label %originalBB359alteredBB

originalBBpart2361:                               ; preds = %originalBB359
  br i1 %1710, label %1727, label %1746, !dbg !2436

1727:                                             ; preds = %originalBBpart2361
  %1728 = load i32, i32* @x.37
  %1729 = load i32, i32* @y.38
  %1730 = sub i32 %1728, 1
  %1731 = mul i32 %1728, %1730
  %1732 = urem i32 %1731, 2
  %1733 = icmp eq i32 %1732, 0
  %1734 = icmp slt i32 %1729, 10
  %1735 = or i1 %1733, %1734
  br i1 %1735, label %originalBB363, label %originalBB363alteredBB

originalBB363:                                    ; preds = %1727, %originalBB363alteredBB
  %1736 = load i64, i64* %44, align 8, !dbg !2448
  %1737 = add i64 %1736, 1, !dbg !2448
  store i64 %1737, i64* %44, align 8, !dbg !2448
  %1738 = load i32, i32* @x.37
  %1739 = load i32, i32* @y.38
  %1740 = sub i32 %1738, 1
  %1741 = mul i32 %1738, %1740
  %1742 = urem i32 %1741, 2
  %1743 = icmp eq i32 %1742, 0
  %1744 = icmp slt i32 %1739, 10
  %1745 = or i1 %1743, %1744
  br i1 %1745, label %originalBBpart2379, label %originalBB363alteredBB

originalBBpart2379:                               ; preds = %originalBB363
  br label %1694, !dbg !2436, !llvm.loop !2449

1746:                                             ; preds = %originalBBpart2361
  br label %1871, !dbg !2450

1747:                                             ; preds = %originalBBpart2353
  %1748 = load i32, i32* @x.37
  %1749 = load i32, i32* @y.38
  %1750 = sub i32 %1748, 1
  %1751 = mul i32 %1748, %1750
  %1752 = urem i32 %1751, 2
  %1753 = icmp eq i32 %1752, 0
  %1754 = icmp slt i32 %1749, 10
  %1755 = or i1 %1753, %1754
  br i1 %1755, label %originalBB381, label %originalBB381alteredBB

originalBB381:                                    ; preds = %1747, %originalBB381alteredBB
  %1756 = load i8, i8* %35, align 1, !dbg !2451
  %1757 = trunc i8 %1756 to i1, !dbg !2451
  %1758 = load i32, i32* @x.37
  %1759 = load i32, i32* @y.38
  %1760 = sub i32 %1758, 1
  %1761 = mul i32 %1758, %1760
  %1762 = urem i32 %1761, 2
  %1763 = icmp eq i32 %1762, 0
  %1764 = icmp slt i32 %1759, 10
  %1765 = or i1 %1763, %1764
  br i1 %1765, label %originalBBpart2383, label %originalBB381alteredBB

originalBBpart2383:                               ; preds = %originalBB381
  br i1 %1757, label %1766, label %1823, !dbg !2454

1766:                                             ; preds = %originalBBpart2383
  %1767 = load i32, i32* %23, align 4, !dbg !2455
  %1768 = icmp eq i32 %1767, 2, !dbg !2456
  br i1 %1768, label %1769, label %1823, !dbg !2457

1769:                                             ; preds = %1766
  call void @llvm.dbg.declare(metadata i64* %49, metadata !2458, metadata !DIExpression()), !dbg !2460
  store i64 1, i64* %49, align 8, !dbg !2461
  br label %1770, !dbg !2463

1770:                                             ; preds = %originalBBpart2398, %1769
  %1771 = load i64, i64* %49, align 8, !dbg !2464
  %1772 = load i64, i64* %48, align 8, !dbg !2466
  %1773 = icmp ult i64 %1771, %1772, !dbg !2467
  br i1 %1773, label %1774, label %1806, !dbg !2468

1774:                                             ; preds = %1770
  %1775 = load i8*, i8** %21, align 8, !dbg !2469
  %1776 = load i64, i64* %28, align 8, !dbg !2470
  %1777 = load i64, i64* %44, align 8, !dbg !2471
  %1778 = add i64 %1776, %1777, !dbg !2472
  %1779 = load i64, i64* %49, align 8, !dbg !2473
  %1780 = add i64 %1778, %1779, !dbg !2474
  %1781 = getelementptr inbounds i8, i8* %1775, i64 %1780, !dbg !2469
  %1782 = load i8, i8* %1781, align 1, !dbg !2469
  %1783 = sext i8 %1782 to i32, !dbg !2469
  switch i32 %1783, label %1785 [
    i32 91, label %1784
    i32 92, label %1784
    i32 94, label %1784
    i32 96, label %1784
    i32 124, label %1784
  ], !dbg !2475

1784:                                             ; preds = %1774, %1774, %1774, %1774, %1774
  br label %2894, !dbg !2476

1785:                                             ; preds = %1774
  br label %1786, !dbg !2478

1786:                                             ; preds = %1785
  br label %1787, !dbg !2479

1787:                                             ; preds = %1786
  %1788 = load i32, i32* @x.37
  %1789 = load i32, i32* @y.38
  %1790 = sub i32 %1788, 1
  %1791 = mul i32 %1788, %1790
  %1792 = urem i32 %1791, 2
  %1793 = icmp eq i32 %1792, 0
  %1794 = icmp slt i32 %1789, 10
  %1795 = or i1 %1793, %1794
  br i1 %1795, label %originalBB385, label %originalBB385alteredBB

originalBB385:                                    ; preds = %1787, %originalBB385alteredBB
  %1796 = load i64, i64* %49, align 8, !dbg !2480
  %1797 = add i64 %1796, 1, !dbg !2480
  store i64 %1797, i64* %49, align 8, !dbg !2480
  %1798 = load i32, i32* @x.37
  %1799 = load i32, i32* @y.38
  %1800 = sub i32 %1798, 1
  %1801 = mul i32 %1798, %1800
  %1802 = urem i32 %1801, 2
  %1803 = icmp eq i32 %1802, 0
  %1804 = icmp slt i32 %1799, 10
  %1805 = or i1 %1803, %1804
  br i1 %1805, label %originalBBpart2398, label %originalBB385alteredBB

originalBBpart2398:                               ; preds = %originalBB385
  br label %1770, !dbg !2481, !llvm.loop !2482

1806:                                             ; preds = %1770
  %1807 = load i32, i32* @x.37
  %1808 = load i32, i32* @y.38
  %1809 = sub i32 %1807, 1
  %1810 = mul i32 %1807, %1809
  %1811 = urem i32 %1810, 2
  %1812 = icmp eq i32 %1811, 0
  %1813 = icmp slt i32 %1808, 10
  %1814 = or i1 %1812, %1813
  br i1 %1814, label %originalBB400, label %originalBB400alteredBB

originalBB400:                                    ; preds = %1806, %originalBB400alteredBB
  %1815 = load i32, i32* @x.37
  %1816 = load i32, i32* @y.38
  %1817 = sub i32 %1815, 1
  %1818 = mul i32 %1815, %1817
  %1819 = urem i32 %1818, 2
  %1820 = icmp eq i32 %1819, 0
  %1821 = icmp slt i32 %1816, 10
  %1822 = or i1 %1820, %1821
  br i1 %1822, label %originalBBpart2402, label %originalBB400alteredBB

originalBBpart2402:                               ; preds = %originalBB400
  br label %1823, !dbg !2484

1823:                                             ; preds = %originalBBpart2402, %1766, %originalBBpart2383
  %1824 = load i32, i32* %47, align 4, !dbg !2485
  %1825 = call i32 @iswprint(i32 %1824) #10, !dbg !2487
  %1826 = icmp ne i32 %1825, 0, !dbg !2487
  br i1 %1826, label %1844, label %1827, !dbg !2488

1827:                                             ; preds = %1823
  %1828 = load i32, i32* @x.37
  %1829 = load i32, i32* @y.38
  %1830 = sub i32 %1828, 1
  %1831 = mul i32 %1828, %1830
  %1832 = urem i32 %1831, 2
  %1833 = icmp eq i32 %1832, 0
  %1834 = icmp slt i32 %1829, 10
  %1835 = or i1 %1833, %1834
  br i1 %1835, label %originalBB404, label %originalBB404alteredBB

originalBB404:                                    ; preds = %1827, %originalBB404alteredBB
  store i8 0, i8* %45, align 1, !dbg !2489
  %1836 = load i32, i32* @x.37
  %1837 = load i32, i32* @y.38
  %1838 = sub i32 %1836, 1
  %1839 = mul i32 %1836, %1838
  %1840 = urem i32 %1839, 2
  %1841 = icmp eq i32 %1840, 0
  %1842 = icmp slt i32 %1837, 10
  %1843 = or i1 %1841, %1842
  br i1 %1843, label %originalBBpart2406, label %originalBB404alteredBB

originalBBpart2406:                               ; preds = %originalBB404
  br label %1844, !dbg !2490

1844:                                             ; preds = %originalBBpart2406, %1823
  %1845 = load i32, i32* @x.37
  %1846 = load i32, i32* @y.38
  %1847 = sub i32 %1845, 1
  %1848 = mul i32 %1845, %1847
  %1849 = urem i32 %1848, 2
  %1850 = icmp eq i32 %1849, 0
  %1851 = icmp slt i32 %1846, 10
  %1852 = or i1 %1850, %1851
  br i1 %1852, label %originalBB408, label %originalBB408alteredBB

originalBB408:                                    ; preds = %1844, %originalBB408alteredBB
  %1853 = load i64, i64* %48, align 8, !dbg !2491
  %1854 = load i64, i64* %44, align 8, !dbg !2492
  %1855 = add i64 %1854, %1853, !dbg !2492
  store i64 %1855, i64* %44, align 8, !dbg !2492
  %1856 = load i32, i32* @x.37
  %1857 = load i32, i32* @y.38
  %1858 = sub i32 %1856, 1
  %1859 = mul i32 %1856, %1858
  %1860 = urem i32 %1859, 2
  %1861 = icmp eq i32 %1860, 0
  %1862 = icmp slt i32 %1857, 10
  %1863 = or i1 %1861, %1862
  br i1 %1863, label %originalBBpart2416, label %originalBB408alteredBB

originalBBpart2416:                               ; preds = %originalBB408
  br label %1864

1864:                                             ; preds = %originalBBpart2416
  br label %1865

1865:                                             ; preds = %1864
  br label %1866

1866:                                             ; preds = %1865
  br label %1867, !dbg !2493

1867:                                             ; preds = %1866
  %1868 = call i32 @mbsinit(%struct.__mbstate_t* %46) #13, !dbg !2494
  %1869 = icmp ne i32 %1868, 0, !dbg !2495
  %1870 = xor i1 %1869, true, !dbg !2495
  br i1 %1870, label %1607, label %1871, !dbg !2493, !llvm.loop !2496

1871:                                             ; preds = %1867, %1746, %1657, %originalBBpart2345
  %1872 = load i32, i32* @x.37
  %1873 = load i32, i32* @y.38
  %1874 = sub i32 %1872, 1
  %1875 = mul i32 %1872, %1874
  %1876 = urem i32 %1875, 2
  %1877 = icmp eq i32 %1876, 0
  %1878 = icmp slt i32 %1873, 10
  %1879 = or i1 %1877, %1878
  br i1 %1879, label %originalBB418, label %originalBB418alteredBB

originalBB418:                                    ; preds = %1871, %originalBB418alteredBB
  %1880 = load i32, i32* @x.37
  %1881 = load i32, i32* @y.38
  %1882 = sub i32 %1880, 1
  %1883 = mul i32 %1880, %1882
  %1884 = urem i32 %1883, 2
  %1885 = icmp eq i32 %1884, 0
  %1886 = icmp slt i32 %1881, 10
  %1887 = or i1 %1885, %1886
  br i1 %1887, label %originalBBpart2420, label %originalBB418alteredBB

originalBBpart2420:                               ; preds = %originalBB418
  br label %1888

1888:                                             ; preds = %originalBBpart2420, %1555
  %1889 = load i8, i8* %45, align 1, !dbg !2498
  %1890 = trunc i8 %1889 to i1, !dbg !2498
  %1891 = zext i1 %1890 to i8, !dbg !2499
  store i8 %1891, i8* %43, align 1, !dbg !2499
  %1892 = load i64, i64* %44, align 8, !dbg !2500
  %1893 = icmp ult i64 1, %1892, !dbg !2502
  br i1 %1893, label %1900, label %1894, !dbg !2503

1894:                                             ; preds = %1888
  %1895 = load i8, i8* %33, align 1, !dbg !2504
  %1896 = trunc i8 %1895 to i1, !dbg !2504
  br i1 %1896, label %1897, label %2360, !dbg !2505

1897:                                             ; preds = %1894
  %1898 = load i8, i8* %45, align 1, !dbg !2506
  %1899 = trunc i8 %1898 to i1, !dbg !2506
  br i1 %1899, label %2360, label %1900, !dbg !2507

1900:                                             ; preds = %1897, %1888
  call void @llvm.dbg.declare(metadata i64* %50, metadata !2508, metadata !DIExpression()), !dbg !2510
  %1901 = load i32, i32* @x.37
  %1902 = load i32, i32* @y.38
  %1903 = sub i32 %1901, 1
  %1904 = mul i32 %1901, %1903
  %1905 = urem i32 %1904, 2
  %1906 = icmp eq i32 %1905, 0
  %1907 = icmp slt i32 %1902, 10
  %1908 = or i1 %1906, %1907
  br i1 %1908, label %originalBB422, label %originalBB422alteredBB

originalBB422:                                    ; preds = %1900, %originalBB422alteredBB
  %1909 = load i64, i64* %28, align 8, !dbg !2511
  %1910 = load i64, i64* %44, align 8, !dbg !2512
  %1911 = add i64 %1909, %1910, !dbg !2513
  store i64 %1911, i64* %50, align 8, !dbg !2510
  %1912 = load i32, i32* @x.37
  %1913 = load i32, i32* @y.38
  %1914 = sub i32 %1912, 1
  %1915 = mul i32 %1912, %1914
  %1916 = urem i32 %1915, 2
  %1917 = icmp eq i32 %1916, 0
  %1918 = icmp slt i32 %1913, 10
  %1919 = or i1 %1917, %1918
  br i1 %1919, label %originalBBpart2429, label %originalBB422alteredBB

originalBBpart2429:                               ; preds = %originalBB422
  br label %1920, !dbg !2514

1920:                                             ; preds = %2353, %originalBBpart2429
  %1921 = load i8, i8* %33, align 1, !dbg !2515
  %1922 = trunc i8 %1921 to i1, !dbg !2515
  br i1 %1922, label %1923, label %2188, !dbg !2520

1923:                                             ; preds = %1920
  %1924 = load i8, i8* %45, align 1, !dbg !2521
  %1925 = trunc i8 %1924 to i1, !dbg !2521
  br i1 %1925, label %2188, label %1926, !dbg !2522

1926:                                             ; preds = %1923
  %1927 = load i32, i32* @x.37
  %1928 = load i32, i32* @y.38
  %1929 = sub i32 %1927, 1
  %1930 = mul i32 %1927, %1929
  %1931 = urem i32 %1930, 2
  %1932 = icmp eq i32 %1931, 0
  %1933 = icmp slt i32 %1928, 10
  %1934 = or i1 %1932, %1933
  br i1 %1934, label %originalBB431, label %originalBB431alteredBB

originalBB431:                                    ; preds = %1926, %originalBB431alteredBB
  %1935 = load i32, i32* @x.37
  %1936 = load i32, i32* @y.38
  %1937 = sub i32 %1935, 1
  %1938 = mul i32 %1935, %1937
  %1939 = urem i32 %1938, 2
  %1940 = icmp eq i32 %1939, 0
  %1941 = icmp slt i32 %1936, 10
  %1942 = or i1 %1940, %1941
  br i1 %1942, label %originalBBpart2433, label %originalBB431alteredBB

originalBBpart2433:                               ; preds = %originalBB431
  br label %1943, !dbg !2523

1943:                                             ; preds = %originalBBpart2433
  %1944 = load i32, i32* @x.37
  %1945 = load i32, i32* @y.38
  %1946 = sub i32 %1944, 1
  %1947 = mul i32 %1944, %1946
  %1948 = urem i32 %1947, 2
  %1949 = icmp eq i32 %1948, 0
  %1950 = icmp slt i32 %1945, 10
  %1951 = or i1 %1949, %1950
  br i1 %1951, label %originalBB435, label %originalBB435alteredBB

originalBB435:                                    ; preds = %1943, %originalBB435alteredBB
  %1952 = load i8, i8* %35, align 1, !dbg !2525
  %1953 = trunc i8 %1952 to i1, !dbg !2525
  %1954 = load i32, i32* @x.37
  %1955 = load i32, i32* @y.38
  %1956 = sub i32 %1954, 1
  %1957 = mul i32 %1954, %1956
  %1958 = urem i32 %1957, 2
  %1959 = icmp eq i32 %1958, 0
  %1960 = icmp slt i32 %1955, 10
  %1961 = or i1 %1959, %1960
  br i1 %1961, label %originalBBpart2437, label %originalBB435alteredBB

originalBBpart2437:                               ; preds = %originalBB435
  br i1 %1953, label %1962, label %1963, !dbg !2528

1962:                                             ; preds = %originalBBpart2437
  br label %2894, !dbg !2525

1963:                                             ; preds = %originalBBpart2437
  %1964 = load i32, i32* @x.37
  %1965 = load i32, i32* @y.38
  %1966 = sub i32 %1964, 1
  %1967 = mul i32 %1964, %1966
  %1968 = urem i32 %1967, 2
  %1969 = icmp eq i32 %1968, 0
  %1970 = icmp slt i32 %1965, 10
  %1971 = or i1 %1969, %1970
  br i1 %1971, label %originalBB439, label %originalBB439alteredBB

originalBB439:                                    ; preds = %1963, %originalBB439alteredBB
  store i8 1, i8* %42, align 1, !dbg !2528
  %1972 = load i32, i32* %23, align 4, !dbg !2529
  %1973 = icmp eq i32 %1972, 2, !dbg !2529
  %1974 = load i32, i32* @x.37
  %1975 = load i32, i32* @y.38
  %1976 = sub i32 %1974, 1
  %1977 = mul i32 %1974, %1976
  %1978 = urem i32 %1977, 2
  %1979 = icmp eq i32 %1978, 0
  %1980 = icmp slt i32 %1975, 10
  %1981 = or i1 %1979, %1980
  br i1 %1981, label %originalBBpart2441, label %originalBB439alteredBB

originalBBpart2441:                               ; preds = %originalBB439
  br i1 %1973, label %1982, label %2086, !dbg !2529

1982:                                             ; preds = %originalBBpart2441
  %1983 = load i8, i8* %36, align 1, !dbg !2529
  %1984 = trunc i8 %1983 to i1, !dbg !2529
  br i1 %1984, label %2086, label %1985, !dbg !2528

1985:                                             ; preds = %1982
  %1986 = load i32, i32* @x.37
  %1987 = load i32, i32* @y.38
  %1988 = sub i32 %1986, 1
  %1989 = mul i32 %1986, %1988
  %1990 = urem i32 %1989, 2
  %1991 = icmp eq i32 %1990, 0
  %1992 = icmp slt i32 %1987, 10
  %1993 = or i1 %1991, %1992
  br i1 %1993, label %originalBB443, label %originalBB443alteredBB

originalBB443:                                    ; preds = %1985, %originalBB443alteredBB
  %1994 = load i32, i32* @x.37
  %1995 = load i32, i32* @y.38
  %1996 = sub i32 %1994, 1
  %1997 = mul i32 %1994, %1996
  %1998 = urem i32 %1997, 2
  %1999 = icmp eq i32 %1998, 0
  %2000 = icmp slt i32 %1995, 10
  %2001 = or i1 %1999, %2000
  br i1 %2001, label %originalBBpart2445, label %originalBB443alteredBB

originalBBpart2445:                               ; preds = %originalBB443
  br label %2002, !dbg !2531

2002:                                             ; preds = %originalBBpart2445
  %2003 = load i32, i32* @x.37
  %2004 = load i32, i32* @y.38
  %2005 = sub i32 %2003, 1
  %2006 = mul i32 %2003, %2005
  %2007 = urem i32 %2006, 2
  %2008 = icmp eq i32 %2007, 0
  %2009 = icmp slt i32 %2004, 10
  %2010 = or i1 %2008, %2009
  br i1 %2010, label %originalBB447, label %originalBB447alteredBB

originalBB447:                                    ; preds = %2002, %originalBB447alteredBB
  %2011 = load i64, i64* %29, align 8, !dbg !2533
  %2012 = load i64, i64* %20, align 8, !dbg !2533
  %2013 = icmp ult i64 %2011, %2012, !dbg !2533
  %2014 = load i32, i32* @x.37
  %2015 = load i32, i32* @y.38
  %2016 = sub i32 %2014, 1
  %2017 = mul i32 %2014, %2016
  %2018 = urem i32 %2017, 2
  %2019 = icmp eq i32 %2018, 0
  %2020 = icmp slt i32 %2015, 10
  %2021 = or i1 %2019, %2020
  br i1 %2021, label %originalBBpart2449, label %originalBB447alteredBB

originalBBpart2449:                               ; preds = %originalBB447
  br i1 %2013, label %2022, label %2026, !dbg !2536

2022:                                             ; preds = %originalBBpart2449
  %2023 = load i8*, i8** %19, align 8, !dbg !2533
  %2024 = load i64, i64* %29, align 8, !dbg !2533
  %2025 = getelementptr inbounds i8, i8* %2023, i64 %2024, !dbg !2533
  store i8 39, i8* %2025, align 1, !dbg !2533
  br label %2026, !dbg !2533

2026:                                             ; preds = %2022, %originalBBpart2449
  %2027 = load i64, i64* %29, align 8, !dbg !2536
  %2028 = add i64 %2027, 1, !dbg !2536
  store i64 %2028, i64* %29, align 8, !dbg !2536
  br label %2029, !dbg !2536

2029:                                             ; preds = %2026
  br label %2030, !dbg !2531

2030:                                             ; preds = %2029
  %2031 = load i32, i32* @x.37
  %2032 = load i32, i32* @y.38
  %2033 = sub i32 %2031, 1
  %2034 = mul i32 %2031, %2033
  %2035 = urem i32 %2034, 2
  %2036 = icmp eq i32 %2035, 0
  %2037 = icmp slt i32 %2032, 10
  %2038 = or i1 %2036, %2037
  br i1 %2038, label %originalBB451, label %originalBB451alteredBB

originalBB451:                                    ; preds = %2030, %originalBB451alteredBB
  %2039 = load i64, i64* %29, align 8, !dbg !2537
  %2040 = load i64, i64* %20, align 8, !dbg !2537
  %2041 = icmp ult i64 %2039, %2040, !dbg !2537
  %2042 = load i32, i32* @x.37
  %2043 = load i32, i32* @y.38
  %2044 = sub i32 %2042, 1
  %2045 = mul i32 %2042, %2044
  %2046 = urem i32 %2045, 2
  %2047 = icmp eq i32 %2046, 0
  %2048 = icmp slt i32 %2043, 10
  %2049 = or i1 %2047, %2048
  br i1 %2049, label %originalBBpart2453, label %originalBB451alteredBB

originalBBpart2453:                               ; preds = %originalBB451
  br i1 %2041, label %2050, label %2054, !dbg !2540

2050:                                             ; preds = %originalBBpart2453
  %2051 = load i8*, i8** %19, align 8, !dbg !2537
  %2052 = load i64, i64* %29, align 8, !dbg !2537
  %2053 = getelementptr inbounds i8, i8* %2051, i64 %2052, !dbg !2537
  store i8 36, i8* %2053, align 1, !dbg !2537
  br label %2054, !dbg !2537

2054:                                             ; preds = %2050, %originalBBpart2453
  %2055 = load i64, i64* %29, align 8, !dbg !2540
  %2056 = add i64 %2055, 1, !dbg !2540
  store i64 %2056, i64* %29, align 8, !dbg !2540
  br label %2057, !dbg !2540

2057:                                             ; preds = %2054
  %2058 = load i32, i32* @x.37
  %2059 = load i32, i32* @y.38
  %2060 = sub i32 %2058, 1
  %2061 = mul i32 %2058, %2060
  %2062 = urem i32 %2061, 2
  %2063 = icmp eq i32 %2062, 0
  %2064 = icmp slt i32 %2059, 10
  %2065 = or i1 %2063, %2064
  br i1 %2065, label %originalBB455, label %originalBB455alteredBB

originalBB455:                                    ; preds = %2057, %originalBB455alteredBB
  %2066 = load i32, i32* @x.37
  %2067 = load i32, i32* @y.38
  %2068 = sub i32 %2066, 1
  %2069 = mul i32 %2066, %2068
  %2070 = urem i32 %2069, 2
  %2071 = icmp eq i32 %2070, 0
  %2072 = icmp slt i32 %2067, 10
  %2073 = or i1 %2071, %2072
  br i1 %2073, label %originalBBpart2457, label %originalBB455alteredBB

originalBBpart2457:                               ; preds = %originalBB455
  br label %2074, !dbg !2531

2074:                                             ; preds = %originalBBpart2457
  %2075 = load i64, i64* %29, align 8, !dbg !2541
  %2076 = load i64, i64* %20, align 8, !dbg !2541
  %2077 = icmp ult i64 %2075, %2076, !dbg !2541
  br i1 %2077, label %2078, label %2082, !dbg !2544

2078:                                             ; preds = %2074
  %2079 = load i8*, i8** %19, align 8, !dbg !2541
  %2080 = load i64, i64* %29, align 8, !dbg !2541
  %2081 = getelementptr inbounds i8, i8* %2079, i64 %2080, !dbg !2541
  store i8 39, i8* %2081, align 1, !dbg !2541
  br label %2082, !dbg !2541

2082:                                             ; preds = %2078, %2074
  %2083 = load i64, i64* %29, align 8, !dbg !2544
  %2084 = add i64 %2083, 1, !dbg !2544
  store i64 %2084, i64* %29, align 8, !dbg !2544
  br label %2085, !dbg !2544

2085:                                             ; preds = %2082
  store i8 1, i8* %36, align 1, !dbg !2531
  br label %2086, !dbg !2531

2086:                                             ; preds = %2085, %1982, %originalBBpart2441
  br label %2087, !dbg !2528

2087:                                             ; preds = %2086
  %2088 = load i32, i32* @x.37
  %2089 = load i32, i32* @y.38
  %2090 = sub i32 %2088, 1
  %2091 = mul i32 %2088, %2090
  %2092 = urem i32 %2091, 2
  %2093 = icmp eq i32 %2092, 0
  %2094 = icmp slt i32 %2089, 10
  %2095 = or i1 %2093, %2094
  br i1 %2095, label %originalBB459, label %originalBB459alteredBB

originalBB459:                                    ; preds = %2087, %originalBB459alteredBB
  %2096 = load i64, i64* %29, align 8, !dbg !2545
  %2097 = load i64, i64* %20, align 8, !dbg !2545
  %2098 = icmp ult i64 %2096, %2097, !dbg !2545
  %2099 = load i32, i32* @x.37
  %2100 = load i32, i32* @y.38
  %2101 = sub i32 %2099, 1
  %2102 = mul i32 %2099, %2101
  %2103 = urem i32 %2102, 2
  %2104 = icmp eq i32 %2103, 0
  %2105 = icmp slt i32 %2100, 10
  %2106 = or i1 %2104, %2105
  br i1 %2106, label %originalBBpart2461, label %originalBB459alteredBB

originalBBpart2461:                               ; preds = %originalBB459
  br i1 %2098, label %2107, label %2111, !dbg !2548

2107:                                             ; preds = %originalBBpart2461
  %2108 = load i8*, i8** %19, align 8, !dbg !2545
  %2109 = load i64, i64* %29, align 8, !dbg !2545
  %2110 = getelementptr inbounds i8, i8* %2108, i64 %2109, !dbg !2545
  store i8 92, i8* %2110, align 1, !dbg !2545
  br label %2111, !dbg !2545

2111:                                             ; preds = %2107, %originalBBpart2461
  %2112 = load i64, i64* %29, align 8, !dbg !2548
  %2113 = add i64 %2112, 1, !dbg !2548
  store i64 %2113, i64* %29, align 8, !dbg !2548
  br label %2114, !dbg !2548

2114:                                             ; preds = %2111
  br label %2115, !dbg !2528

2115:                                             ; preds = %2114
  br label %2116, !dbg !2549

2116:                                             ; preds = %2115
  %2117 = load i64, i64* %29, align 8, !dbg !2550
  %2118 = load i64, i64* %20, align 8, !dbg !2550
  %2119 = icmp ult i64 %2117, %2118, !dbg !2550
  br i1 %2119, label %2120, label %2145, !dbg !2553

2120:                                             ; preds = %2116
  %2121 = load i32, i32* @x.37
  %2122 = load i32, i32* @y.38
  %2123 = sub i32 %2121, 1
  %2124 = mul i32 %2121, %2123
  %2125 = urem i32 %2124, 2
  %2126 = icmp eq i32 %2125, 0
  %2127 = icmp slt i32 %2122, 10
  %2128 = or i1 %2126, %2127
  br i1 %2128, label %originalBB463, label %originalBB463alteredBB

originalBB463:                                    ; preds = %2120, %originalBB463alteredBB
  %2129 = load i8, i8* %39, align 1, !dbg !2550
  %2130 = zext i8 %2129 to i32, !dbg !2550
  %2131 = ashr i32 %2130, 6, !dbg !2550
  %2132 = add nsw i32 48, %2131, !dbg !2550
  %2133 = trunc i32 %2132 to i8, !dbg !2550
  %2134 = load i8*, i8** %19, align 8, !dbg !2550
  %2135 = load i64, i64* %29, align 8, !dbg !2550
  %2136 = getelementptr inbounds i8, i8* %2134, i64 %2135, !dbg !2550
  store i8 %2133, i8* %2136, align 1, !dbg !2550
  %2137 = load i32, i32* @x.37
  %2138 = load i32, i32* @y.38
  %2139 = sub i32 %2137, 1
  %2140 = mul i32 %2137, %2139
  %2141 = urem i32 %2140, 2
  %2142 = icmp eq i32 %2141, 0
  %2143 = icmp slt i32 %2138, 10
  %2144 = or i1 %2142, %2143
  br i1 %2144, label %originalBBpart2480, label %originalBB463alteredBB

originalBBpart2480:                               ; preds = %originalBB463
  br label %2145, !dbg !2550

2145:                                             ; preds = %originalBBpart2480, %2116
  %2146 = load i64, i64* %29, align 8, !dbg !2553
  %2147 = add i64 %2146, 1, !dbg !2553
  store i64 %2147, i64* %29, align 8, !dbg !2553
  br label %2148, !dbg !2553

2148:                                             ; preds = %2145
  br label %2149, !dbg !2554

2149:                                             ; preds = %2148
  %2150 = load i64, i64* %29, align 8, !dbg !2555
  %2151 = load i64, i64* %20, align 8, !dbg !2555
  %2152 = icmp ult i64 %2150, %2151, !dbg !2555
  br i1 %2152, label %2153, label %2179, !dbg !2558

2153:                                             ; preds = %2149
  %2154 = load i32, i32* @x.37
  %2155 = load i32, i32* @y.38
  %2156 = sub i32 %2154, 1
  %2157 = mul i32 %2154, %2156
  %2158 = urem i32 %2157, 2
  %2159 = icmp eq i32 %2158, 0
  %2160 = icmp slt i32 %2155, 10
  %2161 = or i1 %2159, %2160
  br i1 %2161, label %originalBB482, label %originalBB482alteredBB

originalBB482:                                    ; preds = %2153, %originalBB482alteredBB
  %2162 = load i8, i8* %39, align 1, !dbg !2555
  %2163 = zext i8 %2162 to i32, !dbg !2555
  %2164 = ashr i32 %2163, 3, !dbg !2555
  %2165 = and i32 %2164, 7, !dbg !2555
  %2166 = add nsw i32 48, %2165, !dbg !2555
  %2167 = trunc i32 %2166 to i8, !dbg !2555
  %2168 = load i8*, i8** %19, align 8, !dbg !2555
  %2169 = load i64, i64* %29, align 8, !dbg !2555
  %2170 = getelementptr inbounds i8, i8* %2168, i64 %2169, !dbg !2555
  store i8 %2167, i8* %2170, align 1, !dbg !2555
  %2171 = load i32, i32* @x.37
  %2172 = load i32, i32* @y.38
  %2173 = sub i32 %2171, 1
  %2174 = mul i32 %2171, %2173
  %2175 = urem i32 %2174, 2
  %2176 = icmp eq i32 %2175, 0
  %2177 = icmp slt i32 %2172, 10
  %2178 = or i1 %2176, %2177
  br i1 %2178, label %originalBBpart2502, label %originalBB482alteredBB

originalBBpart2502:                               ; preds = %originalBB482
  br label %2179, !dbg !2555

2179:                                             ; preds = %originalBBpart2502, %2149
  %2180 = load i64, i64* %29, align 8, !dbg !2558
  %2181 = add i64 %2180, 1, !dbg !2558
  store i64 %2181, i64* %29, align 8, !dbg !2558
  br label %2182, !dbg !2558

2182:                                             ; preds = %2179
  %2183 = load i8, i8* %39, align 1, !dbg !2559
  %2184 = zext i8 %2183 to i32, !dbg !2559
  %2185 = and i32 %2184, 7, !dbg !2560
  %2186 = add nsw i32 48, %2185, !dbg !2561
  %2187 = trunc i32 %2186 to i8, !dbg !2562
  store i8 %2187, i8* %39, align 1, !dbg !2563
  br label %2237, !dbg !2564

2188:                                             ; preds = %1923, %1920
  %2189 = load i32, i32* @x.37
  %2190 = load i32, i32* @y.38
  %2191 = sub i32 %2189, 1
  %2192 = mul i32 %2189, %2191
  %2193 = urem i32 %2192, 2
  %2194 = icmp eq i32 %2193, 0
  %2195 = icmp slt i32 %2190, 10
  %2196 = or i1 %2194, %2195
  br i1 %2196, label %originalBB504, label %originalBB504alteredBB

originalBB504:                                    ; preds = %2188, %originalBB504alteredBB
  %2197 = load i8, i8* %41, align 1, !dbg !2565
  %2198 = trunc i8 %2197 to i1, !dbg !2565
  %2199 = load i32, i32* @x.37
  %2200 = load i32, i32* @y.38
  %2201 = sub i32 %2199, 1
  %2202 = mul i32 %2199, %2201
  %2203 = urem i32 %2202, 2
  %2204 = icmp eq i32 %2203, 0
  %2205 = icmp slt i32 %2200, 10
  %2206 = or i1 %2204, %2205
  br i1 %2206, label %originalBBpart2506, label %originalBB504alteredBB

originalBBpart2506:                               ; preds = %originalBB504
  br i1 %2198, label %2207, label %2236, !dbg !2567

2207:                                             ; preds = %originalBBpart2506
  br label %2208, !dbg !2568

2208:                                             ; preds = %2207
  %2209 = load i64, i64* %29, align 8, !dbg !2570
  %2210 = load i64, i64* %20, align 8, !dbg !2570
  %2211 = icmp ult i64 %2209, %2210, !dbg !2570
  br i1 %2211, label %2212, label %2216, !dbg !2573

2212:                                             ; preds = %2208
  %2213 = load i8*, i8** %19, align 8, !dbg !2570
  %2214 = load i64, i64* %29, align 8, !dbg !2570
  %2215 = getelementptr inbounds i8, i8* %2213, i64 %2214, !dbg !2570
  store i8 92, i8* %2215, align 1, !dbg !2570
  br label %2216, !dbg !2570

2216:                                             ; preds = %2212, %2208
  %2217 = load i32, i32* @x.37
  %2218 = load i32, i32* @y.38
  %2219 = sub i32 %2217, 1
  %2220 = mul i32 %2217, %2219
  %2221 = urem i32 %2220, 2
  %2222 = icmp eq i32 %2221, 0
  %2223 = icmp slt i32 %2218, 10
  %2224 = or i1 %2222, %2223
  br i1 %2224, label %originalBB508, label %originalBB508alteredBB

originalBB508:                                    ; preds = %2216, %originalBB508alteredBB
  %2225 = load i64, i64* %29, align 8, !dbg !2573
  %2226 = add i64 %2225, 1, !dbg !2573
  store i64 %2226, i64* %29, align 8, !dbg !2573
  %2227 = load i32, i32* @x.37
  %2228 = load i32, i32* @y.38
  %2229 = sub i32 %2227, 1
  %2230 = mul i32 %2227, %2229
  %2231 = urem i32 %2230, 2
  %2232 = icmp eq i32 %2231, 0
  %2233 = icmp slt i32 %2228, 10
  %2234 = or i1 %2232, %2233
  br i1 %2234, label %originalBBpart2511, label %originalBB508alteredBB

originalBBpart2511:                               ; preds = %originalBB508
  br label %2235, !dbg !2573

2235:                                             ; preds = %originalBBpart2511
  store i8 0, i8* %41, align 1, !dbg !2574
  br label %2236, !dbg !2575

2236:                                             ; preds = %2235, %originalBBpart2506
  br label %2237

2237:                                             ; preds = %2236, %2182
  %2238 = load i64, i64* %50, align 8, !dbg !2576
  %2239 = load i64, i64* %28, align 8, !dbg !2578
  %2240 = add i64 %2239, 1, !dbg !2579
  %2241 = icmp ule i64 %2238, %2240, !dbg !2580
  br i1 %2241, label %2242, label %2243, !dbg !2581

2242:                                             ; preds = %2237
  br label %2359, !dbg !2582

2243:                                             ; preds = %2237
  br label %2244, !dbg !2583

2244:                                             ; preds = %2243
  %2245 = load i8, i8* %36, align 1, !dbg !2584
  %2246 = trunc i8 %2245 to i1, !dbg !2584
  br i1 %2246, label %2247, label %2307, !dbg !2584

2247:                                             ; preds = %2244
  %2248 = load i8, i8* %42, align 1, !dbg !2584
  %2249 = trunc i8 %2248 to i1, !dbg !2584
  br i1 %2249, label %2307, label %2250, !dbg !2587

2250:                                             ; preds = %2247
  %2251 = load i32, i32* @x.37
  %2252 = load i32, i32* @y.38
  %2253 = sub i32 %2251, 1
  %2254 = mul i32 %2251, %2253
  %2255 = urem i32 %2254, 2
  %2256 = icmp eq i32 %2255, 0
  %2257 = icmp slt i32 %2252, 10
  %2258 = or i1 %2256, %2257
  br i1 %2258, label %originalBB513, label %originalBB513alteredBB

originalBB513:                                    ; preds = %2250, %originalBB513alteredBB
  %2259 = load i32, i32* @x.37
  %2260 = load i32, i32* @y.38
  %2261 = sub i32 %2259, 1
  %2262 = mul i32 %2259, %2261
  %2263 = urem i32 %2262, 2
  %2264 = icmp eq i32 %2263, 0
  %2265 = icmp slt i32 %2260, 10
  %2266 = or i1 %2264, %2265
  br i1 %2266, label %originalBBpart2515, label %originalBB513alteredBB

originalBBpart2515:                               ; preds = %originalBB513
  br label %2267, !dbg !2588

2267:                                             ; preds = %originalBBpart2515
  %2268 = load i64, i64* %29, align 8, !dbg !2590
  %2269 = load i64, i64* %20, align 8, !dbg !2590
  %2270 = icmp ult i64 %2268, %2269, !dbg !2590
  br i1 %2270, label %2271, label %2275, !dbg !2593

2271:                                             ; preds = %2267
  %2272 = load i8*, i8** %19, align 8, !dbg !2590
  %2273 = load i64, i64* %29, align 8, !dbg !2590
  %2274 = getelementptr inbounds i8, i8* %2272, i64 %2273, !dbg !2590
  store i8 39, i8* %2274, align 1, !dbg !2590
  br label %2275, !dbg !2590

2275:                                             ; preds = %2271, %2267
  %2276 = load i64, i64* %29, align 8, !dbg !2593
  %2277 = add i64 %2276, 1, !dbg !2593
  store i64 %2277, i64* %29, align 8, !dbg !2593
  br label %2278, !dbg !2593

2278:                                             ; preds = %2275
  br label %2279, !dbg !2588

2279:                                             ; preds = %2278
  %2280 = load i32, i32* @x.37
  %2281 = load i32, i32* @y.38
  %2282 = sub i32 %2280, 1
  %2283 = mul i32 %2280, %2282
  %2284 = urem i32 %2283, 2
  %2285 = icmp eq i32 %2284, 0
  %2286 = icmp slt i32 %2281, 10
  %2287 = or i1 %2285, %2286
  br i1 %2287, label %originalBB517, label %originalBB517alteredBB

originalBB517:                                    ; preds = %2279, %originalBB517alteredBB
  %2288 = load i64, i64* %29, align 8, !dbg !2594
  %2289 = load i64, i64* %20, align 8, !dbg !2594
  %2290 = icmp ult i64 %2288, %2289, !dbg !2594
  %2291 = load i32, i32* @x.37
  %2292 = load i32, i32* @y.38
  %2293 = sub i32 %2291, 1
  %2294 = mul i32 %2291, %2293
  %2295 = urem i32 %2294, 2
  %2296 = icmp eq i32 %2295, 0
  %2297 = icmp slt i32 %2292, 10
  %2298 = or i1 %2296, %2297
  br i1 %2298, label %originalBBpart2519, label %originalBB517alteredBB

originalBBpart2519:                               ; preds = %originalBB517
  br i1 %2290, label %2299, label %2303, !dbg !2597

2299:                                             ; preds = %originalBBpart2519
  %2300 = load i8*, i8** %19, align 8, !dbg !2594
  %2301 = load i64, i64* %29, align 8, !dbg !2594
  %2302 = getelementptr inbounds i8, i8* %2300, i64 %2301, !dbg !2594
  store i8 39, i8* %2302, align 1, !dbg !2594
  br label %2303, !dbg !2594

2303:                                             ; preds = %2299, %originalBBpart2519
  %2304 = load i64, i64* %29, align 8, !dbg !2597
  %2305 = add i64 %2304, 1, !dbg !2597
  store i64 %2305, i64* %29, align 8, !dbg !2597
  br label %2306, !dbg !2597

2306:                                             ; preds = %2303
  store i8 0, i8* %36, align 1, !dbg !2588
  br label %2307, !dbg !2588

2307:                                             ; preds = %2306, %2247, %2244
  %2308 = load i32, i32* @x.37
  %2309 = load i32, i32* @y.38
  %2310 = sub i32 %2308, 1
  %2311 = mul i32 %2308, %2310
  %2312 = urem i32 %2311, 2
  %2313 = icmp eq i32 %2312, 0
  %2314 = icmp slt i32 %2309, 10
  %2315 = or i1 %2313, %2314
  br i1 %2315, label %originalBB521, label %originalBB521alteredBB

originalBB521:                                    ; preds = %2307, %originalBB521alteredBB
  %2316 = load i32, i32* @x.37
  %2317 = load i32, i32* @y.38
  %2318 = sub i32 %2316, 1
  %2319 = mul i32 %2316, %2318
  %2320 = urem i32 %2319, 2
  %2321 = icmp eq i32 %2320, 0
  %2322 = icmp slt i32 %2317, 10
  %2323 = or i1 %2321, %2322
  br i1 %2323, label %originalBBpart2523, label %originalBB521alteredBB

originalBBpart2523:                               ; preds = %originalBB521
  br label %2324, !dbg !2587

2324:                                             ; preds = %originalBBpart2523
  br label %2325, !dbg !2598

2325:                                             ; preds = %2324
  %2326 = load i64, i64* %29, align 8, !dbg !2599
  %2327 = load i64, i64* %20, align 8, !dbg !2599
  %2328 = icmp ult i64 %2326, %2327, !dbg !2599
  br i1 %2328, label %2329, label %2350, !dbg !2602

2329:                                             ; preds = %2325
  %2330 = load i32, i32* @x.37
  %2331 = load i32, i32* @y.38
  %2332 = sub i32 %2330, 1
  %2333 = mul i32 %2330, %2332
  %2334 = urem i32 %2333, 2
  %2335 = icmp eq i32 %2334, 0
  %2336 = icmp slt i32 %2331, 10
  %2337 = or i1 %2335, %2336
  br i1 %2337, label %originalBB525, label %originalBB525alteredBB

originalBB525:                                    ; preds = %2329, %originalBB525alteredBB
  %2338 = load i8, i8* %39, align 1, !dbg !2599
  %2339 = load i8*, i8** %19, align 8, !dbg !2599
  %2340 = load i64, i64* %29, align 8, !dbg !2599
  %2341 = getelementptr inbounds i8, i8* %2339, i64 %2340, !dbg !2599
  store i8 %2338, i8* %2341, align 1, !dbg !2599
  %2342 = load i32, i32* @x.37
  %2343 = load i32, i32* @y.38
  %2344 = sub i32 %2342, 1
  %2345 = mul i32 %2342, %2344
  %2346 = urem i32 %2345, 2
  %2347 = icmp eq i32 %2346, 0
  %2348 = icmp slt i32 %2343, 10
  %2349 = or i1 %2347, %2348
  br i1 %2349, label %originalBBpart2527, label %originalBB525alteredBB

originalBBpart2527:                               ; preds = %originalBB525
  br label %2350, !dbg !2599

2350:                                             ; preds = %originalBBpart2527, %2325
  %2351 = load i64, i64* %29, align 8, !dbg !2602
  %2352 = add i64 %2351, 1, !dbg !2602
  store i64 %2352, i64* %29, align 8, !dbg !2602
  br label %2353, !dbg !2602

2353:                                             ; preds = %2350
  %2354 = load i8*, i8** %21, align 8, !dbg !2603
  %2355 = load i64, i64* %28, align 8, !dbg !2604
  %2356 = add i64 %2355, 1, !dbg !2604
  store i64 %2356, i64* %28, align 8, !dbg !2604
  %2357 = getelementptr inbounds i8, i8* %2354, i64 %2356, !dbg !2603
  %2358 = load i8, i8* %2357, align 1, !dbg !2603
  store i8 %2358, i8* %39, align 1, !dbg !2605
  br label %1920, !dbg !2606, !llvm.loop !2607

2359:                                             ; preds = %2242
  br label %2614, !dbg !2610

2360:                                             ; preds = %1897, %1894
  br label %2361, !dbg !2611

2361:                                             ; preds = %2360, %1551, %1550, %1369, %originalBBpart2264, %1290, %originalBBpart2260, %1108, %originalBBpart2170
  %2362 = load i8, i8* %33, align 1, !dbg !2612
  %2363 = trunc i8 %2362 to i1, !dbg !2612
  br i1 %2363, label %2364, label %2383, !dbg !2614

2364:                                             ; preds = %2361
  %2365 = load i32, i32* @x.37
  %2366 = load i32, i32* @y.38
  %2367 = sub i32 %2365, 1
  %2368 = mul i32 %2365, %2367
  %2369 = urem i32 %2368, 2
  %2370 = icmp eq i32 %2369, 0
  %2371 = icmp slt i32 %2366, 10
  %2372 = or i1 %2370, %2371
  br i1 %2372, label %originalBB529, label %originalBB529alteredBB

originalBB529:                                    ; preds = %2364, %originalBB529alteredBB
  %2373 = load i32, i32* %23, align 4, !dbg !2615
  %2374 = icmp ne i32 %2373, 2, !dbg !2616
  %2375 = load i32, i32* @x.37
  %2376 = load i32, i32* @y.38
  %2377 = sub i32 %2375, 1
  %2378 = mul i32 %2375, %2377
  %2379 = urem i32 %2378, 2
  %2380 = icmp eq i32 %2379, 0
  %2381 = icmp slt i32 %2376, 10
  %2382 = or i1 %2380, %2381
  br i1 %2382, label %originalBBpart2531, label %originalBB529alteredBB

originalBBpart2531:                               ; preds = %originalBB529
  br i1 %2374, label %2386, label %2383, !dbg !2617

2383:                                             ; preds = %originalBBpart2531, %2361
  %2384 = load i8, i8* %35, align 1, !dbg !2618
  %2385 = trunc i8 %2384 to i1, !dbg !2618
  br i1 %2385, label %2386, label %2403, !dbg !2619

2386:                                             ; preds = %2383, %originalBBpart2531
  %2387 = load i32*, i32** %25, align 8, !dbg !2620
  %2388 = icmp ne i32* %2387, null, !dbg !2620
  br i1 %2388, label %2389, label %2403, !dbg !2621

2389:                                             ; preds = %2386
  %2390 = load i32*, i32** %25, align 8, !dbg !2622
  %2391 = load i8, i8* %39, align 1, !dbg !2623
  %2392 = zext i8 %2391 to i64, !dbg !2623
  %2393 = udiv i64 %2392, 32, !dbg !2624
  %2394 = getelementptr inbounds i32, i32* %2390, i64 %2393, !dbg !2622
  %2395 = load i32, i32* %2394, align 4, !dbg !2622
  %2396 = load i8, i8* %39, align 1, !dbg !2625
  %2397 = zext i8 %2396 to i64, !dbg !2625
  %2398 = urem i64 %2397, 32, !dbg !2626
  %2399 = trunc i64 %2398 to i32, !dbg !2627
  %2400 = lshr i32 %2395, %2399, !dbg !2627
  %2401 = and i32 %2400, 1, !dbg !2628
  %2402 = icmp ne i32 %2401, 0, !dbg !2628
  br i1 %2402, label %2407, label %2403, !dbg !2629

2403:                                             ; preds = %2389, %2386, %2383
  %2404 = load i8, i8* %41, align 1, !dbg !2630
  %2405 = trunc i8 %2404 to i1, !dbg !2630
  br i1 %2405, label %2407, label %2406, !dbg !2631

2406:                                             ; preds = %2403
  br label %2614, !dbg !2632

2407:                                             ; preds = %2403, %2389
  br label %2408, !dbg !2630

2408:                                             ; preds = %2407, %originalBBpart2256
  call void @llvm.dbg.label(metadata !2633), !dbg !2634
  br label %2409, !dbg !2635

2409:                                             ; preds = %2408
  %2410 = load i32, i32* @x.37
  %2411 = load i32, i32* @y.38
  %2412 = sub i32 %2410, 1
  %2413 = mul i32 %2410, %2412
  %2414 = urem i32 %2413, 2
  %2415 = icmp eq i32 %2414, 0
  %2416 = icmp slt i32 %2411, 10
  %2417 = or i1 %2415, %2416
  br i1 %2417, label %originalBB533, label %originalBB533alteredBB

originalBB533:                                    ; preds = %2409, %originalBB533alteredBB
  %2418 = load i8, i8* %35, align 1, !dbg !2636
  %2419 = trunc i8 %2418 to i1, !dbg !2636
  %2420 = load i32, i32* @x.37
  %2421 = load i32, i32* @y.38
  %2422 = sub i32 %2420, 1
  %2423 = mul i32 %2420, %2422
  %2424 = urem i32 %2423, 2
  %2425 = icmp eq i32 %2424, 0
  %2426 = icmp slt i32 %2421, 10
  %2427 = or i1 %2425, %2426
  br i1 %2427, label %originalBBpart2535, label %originalBB533alteredBB

originalBBpart2535:                               ; preds = %originalBB533
  br i1 %2419, label %2428, label %2429, !dbg !2639

2428:                                             ; preds = %originalBBpart2535
  br label %2894, !dbg !2636

2429:                                             ; preds = %originalBBpart2535
  store i8 1, i8* %42, align 1, !dbg !2639
  %2430 = load i32, i32* %23, align 4, !dbg !2640
  %2431 = icmp eq i32 %2430, 2, !dbg !2640
  br i1 %2431, label %2432, label %2584, !dbg !2640

2432:                                             ; preds = %2429
  %2433 = load i32, i32* @x.37
  %2434 = load i32, i32* @y.38
  %2435 = sub i32 %2433, 1
  %2436 = mul i32 %2433, %2435
  %2437 = urem i32 %2436, 2
  %2438 = icmp eq i32 %2437, 0
  %2439 = icmp slt i32 %2434, 10
  %2440 = or i1 %2438, %2439
  br i1 %2440, label %originalBB537, label %originalBB537alteredBB

originalBB537:                                    ; preds = %2432, %originalBB537alteredBB
  %2441 = load i8, i8* %36, align 1, !dbg !2640
  %2442 = trunc i8 %2441 to i1, !dbg !2640
  %2443 = load i32, i32* @x.37
  %2444 = load i32, i32* @y.38
  %2445 = sub i32 %2443, 1
  %2446 = mul i32 %2443, %2445
  %2447 = urem i32 %2446, 2
  %2448 = icmp eq i32 %2447, 0
  %2449 = icmp slt i32 %2444, 10
  %2450 = or i1 %2448, %2449
  br i1 %2450, label %originalBBpart2539, label %originalBB537alteredBB

originalBBpart2539:                               ; preds = %originalBB537
  br i1 %2442, label %2584, label %2451, !dbg !2639

2451:                                             ; preds = %originalBBpart2539
  br label %2452, !dbg !2642

2452:                                             ; preds = %2451
  %2453 = load i64, i64* %29, align 8, !dbg !2644
  %2454 = load i64, i64* %20, align 8, !dbg !2644
  %2455 = icmp ult i64 %2453, %2454, !dbg !2644
  br i1 %2455, label %2456, label %2476, !dbg !2647

2456:                                             ; preds = %2452
  %2457 = load i32, i32* @x.37
  %2458 = load i32, i32* @y.38
  %2459 = sub i32 %2457, 1
  %2460 = mul i32 %2457, %2459
  %2461 = urem i32 %2460, 2
  %2462 = icmp eq i32 %2461, 0
  %2463 = icmp slt i32 %2458, 10
  %2464 = or i1 %2462, %2463
  br i1 %2464, label %originalBB541, label %originalBB541alteredBB

originalBB541:                                    ; preds = %2456, %originalBB541alteredBB
  %2465 = load i8*, i8** %19, align 8, !dbg !2644
  %2466 = load i64, i64* %29, align 8, !dbg !2644
  %2467 = getelementptr inbounds i8, i8* %2465, i64 %2466, !dbg !2644
  store i8 39, i8* %2467, align 1, !dbg !2644
  %2468 = load i32, i32* @x.37
  %2469 = load i32, i32* @y.38
  %2470 = sub i32 %2468, 1
  %2471 = mul i32 %2468, %2470
  %2472 = urem i32 %2471, 2
  %2473 = icmp eq i32 %2472, 0
  %2474 = icmp slt i32 %2469, 10
  %2475 = or i1 %2473, %2474
  br i1 %2475, label %originalBBpart2543, label %originalBB541alteredBB

originalBBpart2543:                               ; preds = %originalBB541
  br label %2476, !dbg !2644

2476:                                             ; preds = %originalBBpart2543, %2452
  %2477 = load i32, i32* @x.37
  %2478 = load i32, i32* @y.38
  %2479 = sub i32 %2477, 1
  %2480 = mul i32 %2477, %2479
  %2481 = urem i32 %2480, 2
  %2482 = icmp eq i32 %2481, 0
  %2483 = icmp slt i32 %2478, 10
  %2484 = or i1 %2482, %2483
  br i1 %2484, label %originalBB545, label %originalBB545alteredBB

originalBB545:                                    ; preds = %2476, %originalBB545alteredBB
  %2485 = load i64, i64* %29, align 8, !dbg !2647
  %2486 = add i64 %2485, 1, !dbg !2647
  store i64 %2486, i64* %29, align 8, !dbg !2647
  %2487 = load i32, i32* @x.37
  %2488 = load i32, i32* @y.38
  %2489 = sub i32 %2487, 1
  %2490 = mul i32 %2487, %2489
  %2491 = urem i32 %2490, 2
  %2492 = icmp eq i32 %2491, 0
  %2493 = icmp slt i32 %2488, 10
  %2494 = or i1 %2492, %2493
  br i1 %2494, label %originalBBpart2557, label %originalBB545alteredBB

originalBBpart2557:                               ; preds = %originalBB545
  br label %2495, !dbg !2647

2495:                                             ; preds = %originalBBpart2557
  %2496 = load i32, i32* @x.37
  %2497 = load i32, i32* @y.38
  %2498 = sub i32 %2496, 1
  %2499 = mul i32 %2496, %2498
  %2500 = urem i32 %2499, 2
  %2501 = icmp eq i32 %2500, 0
  %2502 = icmp slt i32 %2497, 10
  %2503 = or i1 %2501, %2502
  br i1 %2503, label %originalBB559, label %originalBB559alteredBB

originalBB559:                                    ; preds = %2495, %originalBB559alteredBB
  %2504 = load i32, i32* @x.37
  %2505 = load i32, i32* @y.38
  %2506 = sub i32 %2504, 1
  %2507 = mul i32 %2504, %2506
  %2508 = urem i32 %2507, 2
  %2509 = icmp eq i32 %2508, 0
  %2510 = icmp slt i32 %2505, 10
  %2511 = or i1 %2509, %2510
  br i1 %2511, label %originalBBpart2561, label %originalBB559alteredBB

originalBBpart2561:                               ; preds = %originalBB559
  br label %2512, !dbg !2642

2512:                                             ; preds = %originalBBpart2561
  %2513 = load i64, i64* %29, align 8, !dbg !2648
  %2514 = load i64, i64* %20, align 8, !dbg !2648
  %2515 = icmp ult i64 %2513, %2514, !dbg !2648
  br i1 %2515, label %2516, label %2536, !dbg !2651

2516:                                             ; preds = %2512
  %2517 = load i32, i32* @x.37
  %2518 = load i32, i32* @y.38
  %2519 = sub i32 %2517, 1
  %2520 = mul i32 %2517, %2519
  %2521 = urem i32 %2520, 2
  %2522 = icmp eq i32 %2521, 0
  %2523 = icmp slt i32 %2518, 10
  %2524 = or i1 %2522, %2523
  br i1 %2524, label %originalBB563, label %originalBB563alteredBB

originalBB563:                                    ; preds = %2516, %originalBB563alteredBB
  %2525 = load i8*, i8** %19, align 8, !dbg !2648
  %2526 = load i64, i64* %29, align 8, !dbg !2648
  %2527 = getelementptr inbounds i8, i8* %2525, i64 %2526, !dbg !2648
  store i8 36, i8* %2527, align 1, !dbg !2648
  %2528 = load i32, i32* @x.37
  %2529 = load i32, i32* @y.38
  %2530 = sub i32 %2528, 1
  %2531 = mul i32 %2528, %2530
  %2532 = urem i32 %2531, 2
  %2533 = icmp eq i32 %2532, 0
  %2534 = icmp slt i32 %2529, 10
  %2535 = or i1 %2533, %2534
  br i1 %2535, label %originalBBpart2565, label %originalBB563alteredBB

originalBBpart2565:                               ; preds = %originalBB563
  br label %2536, !dbg !2648

2536:                                             ; preds = %originalBBpart2565, %2512
  %2537 = load i32, i32* @x.37
  %2538 = load i32, i32* @y.38
  %2539 = sub i32 %2537, 1
  %2540 = mul i32 %2537, %2539
  %2541 = urem i32 %2540, 2
  %2542 = icmp eq i32 %2541, 0
  %2543 = icmp slt i32 %2538, 10
  %2544 = or i1 %2542, %2543
  br i1 %2544, label %originalBB567, label %originalBB567alteredBB

originalBB567:                                    ; preds = %2536, %originalBB567alteredBB
  %2545 = load i64, i64* %29, align 8, !dbg !2651
  %2546 = add i64 %2545, 1, !dbg !2651
  store i64 %2546, i64* %29, align 8, !dbg !2651
  %2547 = load i32, i32* @x.37
  %2548 = load i32, i32* @y.38
  %2549 = sub i32 %2547, 1
  %2550 = mul i32 %2547, %2549
  %2551 = urem i32 %2550, 2
  %2552 = icmp eq i32 %2551, 0
  %2553 = icmp slt i32 %2548, 10
  %2554 = or i1 %2552, %2553
  br i1 %2554, label %originalBBpart2573, label %originalBB567alteredBB

originalBBpart2573:                               ; preds = %originalBB567
  br label %2555, !dbg !2651

2555:                                             ; preds = %originalBBpart2573
  br label %2556, !dbg !2642

2556:                                             ; preds = %2555
  %2557 = load i64, i64* %29, align 8, !dbg !2652
  %2558 = load i64, i64* %20, align 8, !dbg !2652
  %2559 = icmp ult i64 %2557, %2558, !dbg !2652
  br i1 %2559, label %2560, label %2564, !dbg !2655

2560:                                             ; preds = %2556
  %2561 = load i8*, i8** %19, align 8, !dbg !2652
  %2562 = load i64, i64* %29, align 8, !dbg !2652
  %2563 = getelementptr inbounds i8, i8* %2561, i64 %2562, !dbg !2652
  store i8 39, i8* %2563, align 1, !dbg !2652
  br label %2564, !dbg !2652

2564:                                             ; preds = %2560, %2556
  %2565 = load i32, i32* @x.37
  %2566 = load i32, i32* @y.38
  %2567 = sub i32 %2565, 1
  %2568 = mul i32 %2565, %2567
  %2569 = urem i32 %2568, 2
  %2570 = icmp eq i32 %2569, 0
  %2571 = icmp slt i32 %2566, 10
  %2572 = or i1 %2570, %2571
  br i1 %2572, label %originalBB575, label %originalBB575alteredBB

originalBB575:                                    ; preds = %2564, %originalBB575alteredBB
  %2573 = load i64, i64* %29, align 8, !dbg !2655
  %2574 = add i64 %2573, 1, !dbg !2655
  store i64 %2574, i64* %29, align 8, !dbg !2655
  %2575 = load i32, i32* @x.37
  %2576 = load i32, i32* @y.38
  %2577 = sub i32 %2575, 1
  %2578 = mul i32 %2575, %2577
  %2579 = urem i32 %2578, 2
  %2580 = icmp eq i32 %2579, 0
  %2581 = icmp slt i32 %2576, 10
  %2582 = or i1 %2580, %2581
  br i1 %2582, label %originalBBpart2583, label %originalBB575alteredBB

originalBBpart2583:                               ; preds = %originalBB575
  br label %2583, !dbg !2655

2583:                                             ; preds = %originalBBpart2583
  store i8 1, i8* %36, align 1, !dbg !2642
  br label %2584, !dbg !2642

2584:                                             ; preds = %2583, %originalBBpart2539, %2429
  br label %2585, !dbg !2639

2585:                                             ; preds = %2584
  %2586 = load i64, i64* %29, align 8, !dbg !2656
  %2587 = load i64, i64* %20, align 8, !dbg !2656
  %2588 = icmp ult i64 %2586, %2587, !dbg !2656
  br i1 %2588, label %2589, label %2593, !dbg !2659

2589:                                             ; preds = %2585
  %2590 = load i8*, i8** %19, align 8, !dbg !2656
  %2591 = load i64, i64* %29, align 8, !dbg !2656
  %2592 = getelementptr inbounds i8, i8* %2590, i64 %2591, !dbg !2656
  store i8 92, i8* %2592, align 1, !dbg !2656
  br label %2593, !dbg !2656

2593:                                             ; preds = %2589, %2585
  %2594 = load i64, i64* %29, align 8, !dbg !2659
  %2595 = add i64 %2594, 1, !dbg !2659
  store i64 %2595, i64* %29, align 8, !dbg !2659
  br label %2596, !dbg !2659

2596:                                             ; preds = %2593
  %2597 = load i32, i32* @x.37
  %2598 = load i32, i32* @y.38
  %2599 = sub i32 %2597, 1
  %2600 = mul i32 %2597, %2599
  %2601 = urem i32 %2600, 2
  %2602 = icmp eq i32 %2601, 0
  %2603 = icmp slt i32 %2598, 10
  %2604 = or i1 %2602, %2603
  br i1 %2604, label %originalBB585, label %originalBB585alteredBB

originalBB585:                                    ; preds = %2596, %originalBB585alteredBB
  %2605 = load i32, i32* @x.37
  %2606 = load i32, i32* @y.38
  %2607 = sub i32 %2605, 1
  %2608 = mul i32 %2605, %2607
  %2609 = urem i32 %2608, 2
  %2610 = icmp eq i32 %2609, 0
  %2611 = icmp slt i32 %2606, 10
  %2612 = or i1 %2610, %2611
  br i1 %2612, label %originalBBpart2587, label %originalBB585alteredBB

originalBBpart2587:                               ; preds = %originalBB585
  br label %2613, !dbg !2639

2613:                                             ; preds = %originalBBpart2587
  br label %2614, !dbg !2639

2614:                                             ; preds = %2613, %2406, %2359, %1182, %originalBBpart2240
  call void @llvm.dbg.label(metadata !2660), !dbg !2661
  br label %2615, !dbg !2662

2615:                                             ; preds = %2614
  %2616 = load i8, i8* %36, align 1, !dbg !2663
  %2617 = trunc i8 %2616 to i1, !dbg !2663
  br i1 %2617, label %2618, label %2646, !dbg !2663

2618:                                             ; preds = %2615
  %2619 = load i8, i8* %42, align 1, !dbg !2663
  %2620 = trunc i8 %2619 to i1, !dbg !2663
  br i1 %2620, label %2646, label %2621, !dbg !2666

2621:                                             ; preds = %2618
  br label %2622, !dbg !2667

2622:                                             ; preds = %2621
  %2623 = load i64, i64* %29, align 8, !dbg !2669
  %2624 = load i64, i64* %20, align 8, !dbg !2669
  %2625 = icmp ult i64 %2623, %2624, !dbg !2669
  br i1 %2625, label %2626, label %2630, !dbg !2672

2626:                                             ; preds = %2622
  %2627 = load i8*, i8** %19, align 8, !dbg !2669
  %2628 = load i64, i64* %29, align 8, !dbg !2669
  %2629 = getelementptr inbounds i8, i8* %2627, i64 %2628, !dbg !2669
  store i8 39, i8* %2629, align 1, !dbg !2669
  br label %2630, !dbg !2669

2630:                                             ; preds = %2626, %2622
  %2631 = load i64, i64* %29, align 8, !dbg !2672
  %2632 = add i64 %2631, 1, !dbg !2672
  store i64 %2632, i64* %29, align 8, !dbg !2672
  br label %2633, !dbg !2672

2633:                                             ; preds = %2630
  br label %2634, !dbg !2667

2634:                                             ; preds = %2633
  %2635 = load i64, i64* %29, align 8, !dbg !2673
  %2636 = load i64, i64* %20, align 8, !dbg !2673
  %2637 = icmp ult i64 %2635, %2636, !dbg !2673
  br i1 %2637, label %2638, label %2642, !dbg !2676

2638:                                             ; preds = %2634
  %2639 = load i8*, i8** %19, align 8, !dbg !2673
  %2640 = load i64, i64* %29, align 8, !dbg !2673
  %2641 = getelementptr inbounds i8, i8* %2639, i64 %2640, !dbg !2673
  store i8 39, i8* %2641, align 1, !dbg !2673
  br label %2642, !dbg !2673

2642:                                             ; preds = %2638, %2634
  %2643 = load i64, i64* %29, align 8, !dbg !2676
  %2644 = add i64 %2643, 1, !dbg !2676
  store i64 %2644, i64* %29, align 8, !dbg !2676
  br label %2645, !dbg !2676

2645:                                             ; preds = %2642
  store i8 0, i8* %36, align 1, !dbg !2667
  br label %2646, !dbg !2667

2646:                                             ; preds = %2645, %2618, %2615
  br label %2647, !dbg !2666

2647:                                             ; preds = %2646
  br label %2648, !dbg !2677

2648:                                             ; preds = %2647
  %2649 = load i32, i32* @x.37
  %2650 = load i32, i32* @y.38
  %2651 = sub i32 %2649, 1
  %2652 = mul i32 %2649, %2651
  %2653 = urem i32 %2652, 2
  %2654 = icmp eq i32 %2653, 0
  %2655 = icmp slt i32 %2650, 10
  %2656 = or i1 %2654, %2655
  br i1 %2656, label %originalBB589, label %originalBB589alteredBB

originalBB589:                                    ; preds = %2648, %originalBB589alteredBB
  %2657 = load i64, i64* %29, align 8, !dbg !2678
  %2658 = load i64, i64* %20, align 8, !dbg !2678
  %2659 = icmp ult i64 %2657, %2658, !dbg !2678
  %2660 = load i32, i32* @x.37
  %2661 = load i32, i32* @y.38
  %2662 = sub i32 %2660, 1
  %2663 = mul i32 %2660, %2662
  %2664 = urem i32 %2663, 2
  %2665 = icmp eq i32 %2664, 0
  %2666 = icmp slt i32 %2661, 10
  %2667 = or i1 %2665, %2666
  br i1 %2667, label %originalBBpart2591, label %originalBB589alteredBB

originalBBpart2591:                               ; preds = %originalBB589
  br i1 %2659, label %2668, label %2689, !dbg !2681

2668:                                             ; preds = %originalBBpart2591
  %2669 = load i32, i32* @x.37
  %2670 = load i32, i32* @y.38
  %2671 = sub i32 %2669, 1
  %2672 = mul i32 %2669, %2671
  %2673 = urem i32 %2672, 2
  %2674 = icmp eq i32 %2673, 0
  %2675 = icmp slt i32 %2670, 10
  %2676 = or i1 %2674, %2675
  br i1 %2676, label %originalBB593, label %originalBB593alteredBB

originalBB593:                                    ; preds = %2668, %originalBB593alteredBB
  %2677 = load i8, i8* %39, align 1, !dbg !2678
  %2678 = load i8*, i8** %19, align 8, !dbg !2678
  %2679 = load i64, i64* %29, align 8, !dbg !2678
  %2680 = getelementptr inbounds i8, i8* %2678, i64 %2679, !dbg !2678
  store i8 %2677, i8* %2680, align 1, !dbg !2678
  %2681 = load i32, i32* @x.37
  %2682 = load i32, i32* @y.38
  %2683 = sub i32 %2681, 1
  %2684 = mul i32 %2681, %2683
  %2685 = urem i32 %2684, 2
  %2686 = icmp eq i32 %2685, 0
  %2687 = icmp slt i32 %2682, 10
  %2688 = or i1 %2686, %2687
  br i1 %2688, label %originalBBpart2595, label %originalBB593alteredBB

originalBBpart2595:                               ; preds = %originalBB593
  br label %2689, !dbg !2678

2689:                                             ; preds = %originalBBpart2595, %originalBBpart2591
  %2690 = load i64, i64* %29, align 8, !dbg !2681
  %2691 = add i64 %2690, 1, !dbg !2681
  store i64 %2691, i64* %29, align 8, !dbg !2681
  br label %2692, !dbg !2681

2692:                                             ; preds = %2689
  %2693 = load i8, i8* %43, align 1, !dbg !2682
  %2694 = trunc i8 %2693 to i1, !dbg !2682
  br i1 %2694, label %2696, label %2695, !dbg !2684

2695:                                             ; preds = %2692
  store i8 0, i8* %38, align 1, !dbg !2685
  br label %2696, !dbg !2686

2696:                                             ; preds = %2695, %2692
  %2697 = load i32, i32* @x.37
  %2698 = load i32, i32* @y.38
  %2699 = sub i32 %2697, 1
  %2700 = mul i32 %2697, %2699
  %2701 = urem i32 %2700, 2
  %2702 = icmp eq i32 %2701, 0
  %2703 = icmp slt i32 %2698, 10
  %2704 = or i1 %2702, %2703
  br i1 %2704, label %originalBB597, label %originalBB597alteredBB

originalBB597:                                    ; preds = %2696, %originalBB597alteredBB
  %2705 = load i32, i32* @x.37
  %2706 = load i32, i32* @y.38
  %2707 = sub i32 %2705, 1
  %2708 = mul i32 %2705, %2707
  %2709 = urem i32 %2708, 2
  %2710 = icmp eq i32 %2709, 0
  %2711 = icmp slt i32 %2706, 10
  %2712 = or i1 %2710, %2711
  br i1 %2712, label %originalBBpart2599, label %originalBB597alteredBB

originalBBpart2599:                               ; preds = %originalBB597
  br label %2713, !dbg !2687

2713:                                             ; preds = %originalBBpart2599, %818
  %2714 = load i64, i64* %28, align 8, !dbg !2688
  %2715 = add i64 %2714, 1, !dbg !2688
  store i64 %2715, i64* %28, align 8, !dbg !2688
  br label %330, !dbg !2689, !llvm.loop !2690

2716:                                             ; preds = %394
  %2717 = load i64, i64* %29, align 8, !dbg !2692
  %2718 = icmp eq i64 %2717, 0, !dbg !2694
  br i1 %2718, label %2719, label %2726, !dbg !2695

2719:                                             ; preds = %2716
  %2720 = load i32, i32* %23, align 4, !dbg !2696
  %2721 = icmp eq i32 %2720, 2, !dbg !2697
  br i1 %2721, label %2722, label %2726, !dbg !2698

2722:                                             ; preds = %2719
  %2723 = load i8, i8* %35, align 1, !dbg !2699
  %2724 = trunc i8 %2723 to i1, !dbg !2699
  br i1 %2724, label %2725, label %2726, !dbg !2700

2725:                                             ; preds = %2722
  br label %2894, !dbg !2701

2726:                                             ; preds = %2722, %2719, %2716
  %2727 = load i32, i32* %23, align 4, !dbg !2702
  %2728 = icmp eq i32 %2727, 2, !dbg !2704
  br i1 %2728, label %2729, label %2774, !dbg !2705

2729:                                             ; preds = %2726
  %2730 = load i8, i8* %35, align 1, !dbg !2706
  %2731 = trunc i8 %2730 to i1, !dbg !2706
  br i1 %2731, label %2774, label %2732, !dbg !2707

2732:                                             ; preds = %2729
  %2733 = load i8, i8* %37, align 1, !dbg !2708
  %2734 = trunc i8 %2733 to i1, !dbg !2708
  br i1 %2734, label %2735, label %2774, !dbg !2709

2735:                                             ; preds = %2732
  %2736 = load i8, i8* %38, align 1, !dbg !2710
  %2737 = trunc i8 %2736 to i1, !dbg !2710
  br i1 %2737, label %2738, label %2748, !dbg !2713

2738:                                             ; preds = %2735
  %2739 = load i8*, i8** %19, align 8, !dbg !2714
  %2740 = load i64, i64* %30, align 8, !dbg !2715
  %2741 = load i8*, i8** %21, align 8, !dbg !2716
  %2742 = load i64, i64* %22, align 8, !dbg !2717
  %2743 = load i32, i32* %24, align 4, !dbg !2718
  %2744 = load i32*, i32** %25, align 8, !dbg !2719
  %2745 = load i8*, i8** %26, align 8, !dbg !2720
  %2746 = load i8*, i8** %27, align 8, !dbg !2721
  %2747 = call i64 @quotearg_buffer_restyled(i8* %2739, i64 %2740, i8* %2741, i64 %2742, i32 5, i32 %2743, i32* %2744, i8* %2745, i8* %2746), !dbg !2722
  store i64 %2747, i64* %18, align 8, !dbg !2723
  br label %2928, !dbg !2723

2748:                                             ; preds = %2735
  %2749 = load i64, i64* %20, align 8, !dbg !2724
  %2750 = icmp ne i64 %2749, 0, !dbg !2724
  br i1 %2750, label %2772, label %2751, !dbg !2726

2751:                                             ; preds = %2748
  %2752 = load i64, i64* %30, align 8, !dbg !2727
  %2753 = icmp ne i64 %2752, 0, !dbg !2727
  br i1 %2753, label %2754, label %2772, !dbg !2728

2754:                                             ; preds = %2751
  %2755 = load i32, i32* @x.37
  %2756 = load i32, i32* @y.38
  %2757 = sub i32 %2755, 1
  %2758 = mul i32 %2755, %2757
  %2759 = urem i32 %2758, 2
  %2760 = icmp eq i32 %2759, 0
  %2761 = icmp slt i32 %2756, 10
  %2762 = or i1 %2760, %2761
  br i1 %2762, label %originalBB601, label %originalBB601alteredBB

originalBB601:                                    ; preds = %2754, %originalBB601alteredBB
  %2763 = load i64, i64* %30, align 8, !dbg !2729
  store i64 %2763, i64* %20, align 8, !dbg !2731
  store i64 0, i64* %29, align 8, !dbg !2732
  %2764 = load i32, i32* @x.37
  %2765 = load i32, i32* @y.38
  %2766 = sub i32 %2764, 1
  %2767 = mul i32 %2764, %2766
  %2768 = urem i32 %2767, 2
  %2769 = icmp eq i32 %2768, 0
  %2770 = icmp slt i32 %2765, 10
  %2771 = or i1 %2769, %2770
  br i1 %2771, label %originalBBpart2603, label %originalBB601alteredBB

originalBBpart2603:                               ; preds = %originalBB601
  br label %66, !dbg !2733

2772:                                             ; preds = %2751, %2748
  br label %2773

2773:                                             ; preds = %2772
  br label %2774, !dbg !2734

2774:                                             ; preds = %2773, %2732, %2729, %2726
  %2775 = load i8*, i8** %31, align 8, !dbg !2735
  %2776 = icmp ne i8* %2775, null, !dbg !2735
  br i1 %2776, label %2777, label %2868, !dbg !2737

2777:                                             ; preds = %2774
  %2778 = load i32, i32* @x.37
  %2779 = load i32, i32* @y.38
  %2780 = sub i32 %2778, 1
  %2781 = mul i32 %2778, %2780
  %2782 = urem i32 %2781, 2
  %2783 = icmp eq i32 %2782, 0
  %2784 = icmp slt i32 %2779, 10
  %2785 = or i1 %2783, %2784
  br i1 %2785, label %originalBB605, label %originalBB605alteredBB

originalBB605:                                    ; preds = %2777, %originalBB605alteredBB
  %2786 = load i8, i8* %35, align 1, !dbg !2738
  %2787 = trunc i8 %2786 to i1, !dbg !2738
  %2788 = load i32, i32* @x.37
  %2789 = load i32, i32* @y.38
  %2790 = sub i32 %2788, 1
  %2791 = mul i32 %2788, %2790
  %2792 = urem i32 %2791, 2
  %2793 = icmp eq i32 %2792, 0
  %2794 = icmp slt i32 %2789, 10
  %2795 = or i1 %2793, %2794
  br i1 %2795, label %originalBBpart2607, label %originalBB605alteredBB

originalBBpart2607:                               ; preds = %originalBB605
  br i1 %2787, label %2868, label %2796, !dbg !2739

2796:                                             ; preds = %originalBBpart2607
  br label %2797, !dbg !2740

2797:                                             ; preds = %2848, %2796
  %2798 = load i8*, i8** %31, align 8, !dbg !2741
  %2799 = load i8, i8* %2798, align 1, !dbg !2744
  %2800 = icmp ne i8 %2799, 0, !dbg !2745
  br i1 %2800, label %2801, label %2851, !dbg !2745

2801:                                             ; preds = %2797
  %2802 = load i32, i32* @x.37
  %2803 = load i32, i32* @y.38
  %2804 = sub i32 %2802, 1
  %2805 = mul i32 %2802, %2804
  %2806 = urem i32 %2805, 2
  %2807 = icmp eq i32 %2806, 0
  %2808 = icmp slt i32 %2803, 10
  %2809 = or i1 %2807, %2808
  br i1 %2809, label %originalBB609, label %originalBB609alteredBB

originalBB609:                                    ; preds = %2801, %originalBB609alteredBB
  %2810 = load i32, i32* @x.37
  %2811 = load i32, i32* @y.38
  %2812 = sub i32 %2810, 1
  %2813 = mul i32 %2810, %2812
  %2814 = urem i32 %2813, 2
  %2815 = icmp eq i32 %2814, 0
  %2816 = icmp slt i32 %2811, 10
  %2817 = or i1 %2815, %2816
  br i1 %2817, label %originalBBpart2611, label %originalBB609alteredBB

originalBBpart2611:                               ; preds = %originalBB609
  br label %2818, !dbg !2746

2818:                                             ; preds = %originalBBpart2611
  %2819 = load i32, i32* @x.37
  %2820 = load i32, i32* @y.38
  %2821 = sub i32 %2819, 1
  %2822 = mul i32 %2819, %2821
  %2823 = urem i32 %2822, 2
  %2824 = icmp eq i32 %2823, 0
  %2825 = icmp slt i32 %2820, 10
  %2826 = or i1 %2824, %2825
  br i1 %2826, label %originalBB613, label %originalBB613alteredBB

originalBB613:                                    ; preds = %2818, %originalBB613alteredBB
  %2827 = load i64, i64* %29, align 8, !dbg !2747
  %2828 = load i64, i64* %20, align 8, !dbg !2747
  %2829 = icmp ult i64 %2827, %2828, !dbg !2747
  %2830 = load i32, i32* @x.37
  %2831 = load i32, i32* @y.38
  %2832 = sub i32 %2830, 1
  %2833 = mul i32 %2830, %2832
  %2834 = urem i32 %2833, 2
  %2835 = icmp eq i32 %2834, 0
  %2836 = icmp slt i32 %2831, 10
  %2837 = or i1 %2835, %2836
  br i1 %2837, label %originalBBpart2615, label %originalBB613alteredBB

originalBBpart2615:                               ; preds = %originalBB613
  br i1 %2829, label %2838, label %2844, !dbg !2750

2838:                                             ; preds = %originalBBpart2615
  %2839 = load i8*, i8** %31, align 8, !dbg !2747
  %2840 = load i8, i8* %2839, align 1, !dbg !2747
  %2841 = load i8*, i8** %19, align 8, !dbg !2747
  %2842 = load i64, i64* %29, align 8, !dbg !2747
  %2843 = getelementptr inbounds i8, i8* %2841, i64 %2842, !dbg !2747
  store i8 %2840, i8* %2843, align 1, !dbg !2747
  br label %2844, !dbg !2747

2844:                                             ; preds = %2838, %originalBBpart2615
  %2845 = load i64, i64* %29, align 8, !dbg !2750
  %2846 = add i64 %2845, 1, !dbg !2750
  store i64 %2846, i64* %29, align 8, !dbg !2750
  br label %2847, !dbg !2750

2847:                                             ; preds = %2844
  br label %2848, !dbg !2750

2848:                                             ; preds = %2847
  %2849 = load i8*, i8** %31, align 8, !dbg !2751
  %2850 = getelementptr inbounds i8, i8* %2849, i32 1, !dbg !2751
  store i8* %2850, i8** %31, align 8, !dbg !2751
  br label %2797, !dbg !2752, !llvm.loop !2753

2851:                                             ; preds = %2797
  %2852 = load i32, i32* @x.37
  %2853 = load i32, i32* @y.38
  %2854 = sub i32 %2852, 1
  %2855 = mul i32 %2852, %2854
  %2856 = urem i32 %2855, 2
  %2857 = icmp eq i32 %2856, 0
  %2858 = icmp slt i32 %2853, 10
  %2859 = or i1 %2857, %2858
  br i1 %2859, label %originalBB617, label %originalBB617alteredBB

originalBB617:                                    ; preds = %2851, %originalBB617alteredBB
  %2860 = load i32, i32* @x.37
  %2861 = load i32, i32* @y.38
  %2862 = sub i32 %2860, 1
  %2863 = mul i32 %2860, %2862
  %2864 = urem i32 %2863, 2
  %2865 = icmp eq i32 %2864, 0
  %2866 = icmp slt i32 %2861, 10
  %2867 = or i1 %2865, %2866
  br i1 %2867, label %originalBBpart2619, label %originalBB617alteredBB

originalBBpart2619:                               ; preds = %originalBB617
  br label %2868, !dbg !2754

2868:                                             ; preds = %originalBBpart2619, %originalBBpart2607, %2774
  %2869 = load i64, i64* %29, align 8, !dbg !2755
  %2870 = load i64, i64* %20, align 8, !dbg !2757
  %2871 = icmp ult i64 %2869, %2870, !dbg !2758
  br i1 %2871, label %2872, label %2892, !dbg !2759

2872:                                             ; preds = %2868
  %2873 = load i32, i32* @x.37
  %2874 = load i32, i32* @y.38
  %2875 = sub i32 %2873, 1
  %2876 = mul i32 %2873, %2875
  %2877 = urem i32 %2876, 2
  %2878 = icmp eq i32 %2877, 0
  %2879 = icmp slt i32 %2874, 10
  %2880 = or i1 %2878, %2879
  br i1 %2880, label %originalBB621, label %originalBB621alteredBB

originalBB621:                                    ; preds = %2872, %originalBB621alteredBB
  %2881 = load i8*, i8** %19, align 8, !dbg !2760
  %2882 = load i64, i64* %29, align 8, !dbg !2761
  %2883 = getelementptr inbounds i8, i8* %2881, i64 %2882, !dbg !2760
  store i8 0, i8* %2883, align 1, !dbg !2762
  %2884 = load i32, i32* @x.37
  %2885 = load i32, i32* @y.38
  %2886 = sub i32 %2884, 1
  %2887 = mul i32 %2884, %2886
  %2888 = urem i32 %2887, 2
  %2889 = icmp eq i32 %2888, 0
  %2890 = icmp slt i32 %2885, 10
  %2891 = or i1 %2889, %2890
  br i1 %2891, label %originalBBpart2623, label %originalBB621alteredBB

originalBBpart2623:                               ; preds = %originalBB621
  br label %2892, !dbg !2760

2892:                                             ; preds = %originalBBpart2623, %2868
  %2893 = load i64, i64* %29, align 8, !dbg !2763
  store i64 %2893, i64* %18, align 8, !dbg !2764
  br label %2928, !dbg !2764

2894:                                             ; preds = %2725, %2428, %1962, %1784, %1392, %originalBBpart2276, %originalBBpart2252, %1155, %935, %874, %originalBBpart293, %451
  call void @llvm.dbg.label(metadata !2765), !dbg !2766
  %2895 = load i32, i32* %23, align 4, !dbg !2767
  %2896 = icmp eq i32 %2895, 2, !dbg !2769
  br i1 %2896, label %2897, label %2901, !dbg !2770

2897:                                             ; preds = %2894
  %2898 = load i8, i8* %33, align 1, !dbg !2771
  %2899 = trunc i8 %2898 to i1, !dbg !2771
  br i1 %2899, label %2900, label %2901, !dbg !2772

2900:                                             ; preds = %2897
  store i32 4, i32* %23, align 4, !dbg !2773
  br label %2901, !dbg !2774

2901:                                             ; preds = %2900, %2897, %2894
  %2902 = load i32, i32* @x.37
  %2903 = load i32, i32* @y.38
  %2904 = sub i32 %2902, 1
  %2905 = mul i32 %2902, %2904
  %2906 = urem i32 %2905, 2
  %2907 = icmp eq i32 %2906, 0
  %2908 = icmp slt i32 %2903, 10
  %2909 = or i1 %2907, %2908
  br i1 %2909, label %originalBB625, label %originalBB625alteredBB

originalBB625:                                    ; preds = %2901, %originalBB625alteredBB
  %2910 = load i8*, i8** %19, align 8, !dbg !2775
  %2911 = load i64, i64* %20, align 8, !dbg !2776
  %2912 = load i8*, i8** %21, align 8, !dbg !2777
  %2913 = load i64, i64* %22, align 8, !dbg !2778
  %2914 = load i32, i32* %23, align 4, !dbg !2779
  %2915 = load i32, i32* %24, align 4, !dbg !2780
  %2916 = and i32 %2915, -3, !dbg !2781
  %2917 = load i8*, i8** %26, align 8, !dbg !2782
  %2918 = load i8*, i8** %27, align 8, !dbg !2783
  %2919 = call i64 @quotearg_buffer_restyled(i8* %2910, i64 %2911, i8* %2912, i64 %2913, i32 %2914, i32 %2916, i32* null, i8* %2917, i8* %2918), !dbg !2784
  store i64 %2919, i64* %18, align 8, !dbg !2785
  %2920 = load i32, i32* @x.37
  %2921 = load i32, i32* @y.38
  %2922 = sub i32 %2920, 1
  %2923 = mul i32 %2920, %2922
  %2924 = urem i32 %2923, 2
  %2925 = icmp eq i32 %2924, 0
  %2926 = icmp slt i32 %2921, 10
  %2927 = or i1 %2925, %2926
  br i1 %2927, label %originalBBpart2631, label %originalBB625alteredBB

originalBBpart2631:                               ; preds = %originalBB625
  br label %2928, !dbg !2785

2928:                                             ; preds = %originalBBpart2631, %2892, %2738
  %2929 = load i32, i32* @x.37
  %2930 = load i32, i32* @y.38
  %2931 = sub i32 %2929, 1
  %2932 = mul i32 %2929, %2931
  %2933 = urem i32 %2932, 2
  %2934 = icmp eq i32 %2933, 0
  %2935 = icmp slt i32 %2930, 10
  %2936 = or i1 %2934, %2935
  br i1 %2936, label %originalBB633, label %originalBB633alteredBB

originalBB633:                                    ; preds = %2928, %originalBB633alteredBB
  %2937 = load i64, i64* %18, align 8, !dbg !2786
  %2938 = load i32, i32* @x.37
  %2939 = load i32, i32* @y.38
  %2940 = sub i32 %2938, 1
  %2941 = mul i32 %2938, %2940
  %2942 = urem i32 %2941, 2
  %2943 = icmp eq i32 %2942, 0
  %2944 = icmp slt i32 %2939, 10
  %2945 = or i1 %2943, %2944
  br i1 %2945, label %originalBBpart2635, label %originalBB633alteredBB

originalBBpart2635:                               ; preds = %originalBB633
  ret i64 %2937, !dbg !2786

originalBBalteredBB:                              ; preds = %originalBB, %9
  %2946 = alloca i64, align 8
  %2947 = alloca i8*, align 8
  %2948 = alloca i64, align 8
  %2949 = alloca i8*, align 8
  %2950 = alloca i64, align 8
  %2951 = alloca i32, align 4
  %2952 = alloca i32, align 4
  %2953 = alloca i32*, align 8
  %2954 = alloca i8*, align 8
  %2955 = alloca i8*, align 8
  %2956 = alloca i64, align 8
  %2957 = alloca i64, align 8
  %2958 = alloca i64, align 8
  %2959 = alloca i8*, align 8
  %2960 = alloca i64, align 8
  %2961 = alloca i8, align 1
  %2962 = alloca i8, align 1
  %2963 = alloca i8, align 1
  %2964 = alloca i8, align 1
  %2965 = alloca i8, align 1
  %2966 = alloca i8, align 1
  %2967 = alloca i8, align 1
  %2968 = alloca i8, align 1
  %2969 = alloca i8, align 1
  %2970 = alloca i8, align 1
  %2971 = alloca i8, align 1
  %2972 = alloca i64, align 8
  %2973 = alloca i8, align 1
  %2974 = alloca %struct.__mbstate_t, align 4
  %2975 = alloca i32, align 4
  %2976 = alloca i64, align 8
  %2977 = alloca i64, align 8
  %2978 = alloca i64, align 8
  store i8* %0, i8** %2947, align 8
  call void @llvm.dbg.declare(metadata i8** %2947, metadata !2787, metadata !DIExpression()), !dbg !1907
  store i64 %1, i64* %2948, align 8
  call void @llvm.dbg.declare(metadata i64* %2948, metadata !2819, metadata !DIExpression()), !dbg !1909
  store i8* %2, i8** %2949, align 8
  call void @llvm.dbg.declare(metadata i8** %2949, metadata !2820, metadata !DIExpression()), !dbg !1911
  store i64 %3, i64* %2950, align 8
  call void @llvm.dbg.declare(metadata i64* %2950, metadata !2821, metadata !DIExpression()), !dbg !1913
  store i32 %4, i32* %2951, align 4
  call void @llvm.dbg.declare(metadata i32* %2951, metadata !2822, metadata !DIExpression()), !dbg !1915
  store i32 %5, i32* %2952, align 4
  call void @llvm.dbg.declare(metadata i32* %2952, metadata !2823, metadata !DIExpression()), !dbg !1917
  store i32* %6, i32** %2953, align 8
  call void @llvm.dbg.declare(metadata i32** %2953, metadata !2824, metadata !DIExpression()), !dbg !1919
  store i8* %7, i8** %2954, align 8
  call void @llvm.dbg.declare(metadata i8** %2954, metadata !2825, metadata !DIExpression()), !dbg !1921
  store i8* %8, i8** %2955, align 8
  call void @llvm.dbg.declare(metadata i8** %2955, metadata !2826, metadata !DIExpression()), !dbg !1923
  call void @llvm.dbg.declare(metadata i64* %2956, metadata !2827, metadata !DIExpression()), !dbg !1925
  call void @llvm.dbg.declare(metadata i64* %2957, metadata !2828, metadata !DIExpression()), !dbg !1927
  store i64 0, i64* %2957, align 8, !dbg !1927
  call void @llvm.dbg.declare(metadata i64* %2958, metadata !2829, metadata !DIExpression()), !dbg !1929
  store i64 0, i64* %2958, align 8, !dbg !1929
  call void @llvm.dbg.declare(metadata i8** %2959, metadata !2830, metadata !DIExpression()), !dbg !1931
  store i8* null, i8** %2959, align 8, !dbg !1931
  call void @llvm.dbg.declare(metadata i64* %2960, metadata !2831, metadata !DIExpression()), !dbg !1933
  store i64 0, i64* %2960, align 8, !dbg !1933
  call void @llvm.dbg.declare(metadata i8* %2961, metadata !2832, metadata !DIExpression()), !dbg !1935
  store i8 0, i8* %2961, align 1, !dbg !1935
  call void @llvm.dbg.declare(metadata i8* %2962, metadata !2833, metadata !DIExpression()), !dbg !1937
  %2979 = call i64 @__ctype_get_mb_cur_max() #10, !dbg !1938
  %2980 = icmp eq i64 %2979, 1, !dbg !1939
  %2981 = zext i1 %2980 to i8, !dbg !1937
  store i8 %2981, i8* %2962, align 1, !dbg !1937
  call void @llvm.dbg.declare(metadata i8* %2963, metadata !2834, metadata !DIExpression()), !dbg !1941
  %2982 = load i32, i32* %2952, align 4, !dbg !1942
  %_ = shl i32 %2982, 2
  %_1 = shl i32 %2982, 2
  %_2 = shl i32 %2982, 2
  %_3 = sub i32 %2982, 2
  %gen = mul i32 %_3, 2
  %_4 = sub i32 %2982, 2
  %gen5 = mul i32 %_4, 2
  %_6 = sub i32 %2982, 2
  %gen7 = mul i32 %_6, 2
  %2983 = and i32 %2982, 2, !dbg !1943
  %2984 = icmp ne i32 %2983, 0, !dbg !1944
  %2985 = zext i1 %2984 to i8, !dbg !1941
  store i8 %2985, i8* %2963, align 1, !dbg !1941
  call void @llvm.dbg.declare(metadata i8* %2964, metadata !2835, metadata !DIExpression()), !dbg !1946
  store i8 0, i8* %2964, align 1, !dbg !1946
  call void @llvm.dbg.declare(metadata i8* %2965, metadata !2836, metadata !DIExpression()), !dbg !1948
  store i8 0, i8* %2965, align 1, !dbg !1948
  call void @llvm.dbg.declare(metadata i8* %2966, metadata !2837, metadata !DIExpression()), !dbg !1950
  store i8 1, i8* %2966, align 1, !dbg !1950
  br label %originalBB

originalBB8alteredBB:                             ; preds = %originalBB8, %66
  %2986 = load i32, i32* %23, align 4, !dbg !1954
  br label %originalBB8

originalBB12alteredBB:                            ; preds = %originalBB12, %84
  store i32 5, i32* %23, align 4, !dbg !1956
  store i8 1, i8* %35, align 1, !dbg !1958
  br label %originalBB12

originalBB16alteredBB:                            ; preds = %originalBB16, %141
  %2987 = load i8*, i8** %31, align 8, !dbg !2000
  %2988 = load i8, i8* %2987, align 1, !dbg !2000
  %2989 = load i8*, i8** %19, align 8, !dbg !2000
  %2990 = load i64, i64* %29, align 8, !dbg !2000
  %2991 = getelementptr inbounds i8, i8* %2989, i64 %2990, !dbg !2000
  store i8 %2988, i8* %2991, align 1, !dbg !2000
  br label %originalBB16

originalBB20alteredBB:                            ; preds = %originalBB20, %163
  %2992 = load i64, i64* %29, align 8, !dbg !2003
  %_21 = shl i64 %2992, 1
  %_22 = sub i64 0, %2992
  %gen23 = add i64 %_22, 1
  %_24 = shl i64 %2992, 1
  %_25 = sub i64 %2992, 1
  %gen26 = mul i64 %_25, 1
  %_27 = sub i64 0, %2992
  %gen28 = add i64 %_27, 1
  %_29 = sub i64 0, %2992
  %gen30 = add i64 %_29, 1
  %_31 = sub i64 0, %2992
  %gen32 = add i64 %_31, 1
  %_33 = sub i64 0, %2992
  %gen34 = add i64 %_33, 1
  %_35 = shl i64 %2992, 1
  %2993 = add i64 %2992, 1, !dbg !2003
  store i64 %2993, i64* %29, align 8, !dbg !2003
  br label %originalBB20

originalBB39alteredBB:                            ; preds = %originalBB39, %183
  %2994 = load i8*, i8** %31, align 8, !dbg !2004
  %2995 = getelementptr inbounds i8, i8* %2994, i32 1, !dbg !2004
  store i8* %2995, i8** %31, align 8, !dbg !2004
  br label %originalBB39

originalBB43alteredBB:                            ; preds = %originalBB43, %209
  %2996 = load i8, i8* %35, align 1, !dbg !2019
  %2997 = trunc i8 %2996 to i1, !dbg !2019
  br label %originalBB43

originalBB47alteredBB:                            ; preds = %originalBB47, %229
  br label %originalBB47

originalBB51alteredBB:                            ; preds = %originalBB51, %249
  br label %originalBB51

originalBB55alteredBB:                            ; preds = %originalBB55, %270
  %2998 = load i8*, i8** %19, align 8, !dbg !2030
  %2999 = load i64, i64* %29, align 8, !dbg !2030
  %3000 = getelementptr inbounds i8, i8* %2998, i64 %2999, !dbg !2030
  store i8 39, i8* %3000, align 1, !dbg !2030
  br label %originalBB55

originalBB59alteredBB:                            ; preds = %originalBB59, %293
  br label %originalBB59

originalBB63alteredBB:                            ; preds = %originalBB63, %312
  call void @abort() #12, !dbg !2039
  br label %originalBB63

originalBB67alteredBB:                            ; preds = %originalBB67, %330
  %3001 = load i64, i64* %22, align 8, !dbg !2043
  %3002 = icmp eq i64 %3001, -1, !dbg !2045
  br label %originalBB67

originalBB71alteredBB:                            ; preds = %originalBB71, %349
  %3003 = load i8*, i8** %21, align 8, !dbg !2046
  %3004 = load i64, i64* %28, align 8, !dbg !2047
  %3005 = getelementptr inbounds i8, i8* %3003, i64 %3004, !dbg !2046
  %3006 = load i8, i8* %3005, align 1, !dbg !2046
  %3007 = sext i8 %3006 to i32, !dbg !2046
  %3008 = icmp eq i32 %3007, 0, !dbg !2048
  %3009 = zext i1 %3008 to i32, !dbg !2048
  br label %originalBB71

originalBB75alteredBB:                            ; preds = %originalBB75, %373
  %3010 = load i64, i64* %28, align 8, !dbg !2049
  %3011 = load i64, i64* %22, align 8, !dbg !2050
  %3012 = icmp eq i64 %3010, %3011, !dbg !2051
  %3013 = zext i1 %3012 to i32, !dbg !2051
  br label %originalBB75

originalBB79alteredBB:                            ; preds = %originalBB79, %419
  %3014 = load i64, i64* %22, align 8, !dbg !2084
  br label %originalBB79

originalBB83alteredBB:                            ; preds = %originalBB83, %452
  store i8 1, i8* %41, align 1, !dbg !2100
  br label %originalBB83

originalBB87alteredBB:                            ; preds = %originalBB87, %469
  %3015 = load i8*, i8** %21, align 8, !dbg !2102
  %3016 = load i64, i64* %28, align 8, !dbg !2103
  %3017 = getelementptr inbounds i8, i8* %3015, i64 %3016, !dbg !2102
  %3018 = load i8, i8* %3017, align 1, !dbg !2102
  store i8 %3018, i8* %39, align 1, !dbg !2104
  %3019 = load i8, i8* %39, align 1, !dbg !2105
  %3020 = zext i8 %3019 to i32, !dbg !2105
  br label %originalBB87

originalBB91alteredBB:                            ; preds = %originalBB91, %499
  br label %originalBB91

originalBB95alteredBB:                            ; preds = %originalBB95, %522
  br label %originalBB95

originalBB99alteredBB:                            ; preds = %originalBB99, %539
  %3021 = load i64, i64* %29, align 8, !dbg !2121
  %3022 = load i64, i64* %20, align 8, !dbg !2121
  %3023 = icmp ult i64 %3021, %3022, !dbg !2121
  br label %originalBB99

originalBB103alteredBB:                           ; preds = %originalBB103, %567
  %3024 = load i64, i64* %29, align 8, !dbg !2125
  %3025 = load i64, i64* %20, align 8, !dbg !2125
  %3026 = icmp ult i64 %3024, %3025, !dbg !2125
  br label %originalBB103

originalBB107alteredBB:                           ; preds = %originalBB107, %599
  %3027 = load i8*, i8** %19, align 8, !dbg !2129
  %3028 = load i64, i64* %29, align 8, !dbg !2129
  %3029 = getelementptr inbounds i8, i8* %3027, i64 %3028, !dbg !2129
  store i8 39, i8* %3029, align 1, !dbg !2129
  br label %originalBB107

originalBB111alteredBB:                           ; preds = %originalBB111, %619
  %3030 = load i64, i64* %29, align 8, !dbg !2132
  %_112 = sub i64 0, %3030
  %gen113 = add i64 %_112, 1
  %_114 = sub i64 0, %3030
  %gen115 = add i64 %_114, 1
  %_116 = sub i64 %3030, 1
  %gen117 = mul i64 %_116, 1
  %_118 = sub i64 %3030, 1
  %gen119 = mul i64 %_118, 1
  %_120 = sub i64 %3030, 1
  %gen121 = mul i64 %_120, 1
  %_122 = shl i64 %3030, 1
  %3031 = add i64 %3030, 1, !dbg !2132
  store i64 %3031, i64* %29, align 8, !dbg !2132
  br label %originalBB111

originalBB126alteredBB:                           ; preds = %originalBB126, %644
  %3032 = load i8*, i8** %19, align 8, !dbg !2133
  %3033 = load i64, i64* %29, align 8, !dbg !2133
  %3034 = getelementptr inbounds i8, i8* %3032, i64 %3033, !dbg !2133
  store i8 92, i8* %3034, align 1, !dbg !2133
  br label %originalBB126

originalBB130alteredBB:                           ; preds = %originalBB130, %692
  br label %originalBB130

originalBB134alteredBB:                           ; preds = %originalBB134, %713
  %3035 = load i8*, i8** %19, align 8, !dbg !2158
  %3036 = load i64, i64* %29, align 8, !dbg !2158
  %3037 = getelementptr inbounds i8, i8* %3035, i64 %3036, !dbg !2158
  store i8 48, i8* %3037, align 1, !dbg !2158
  br label %originalBB134

originalBB138alteredBB:                           ; preds = %originalBB138, %733
  %3038 = load i64, i64* %29, align 8, !dbg !2161
  %_139 = shl i64 %3038, 1
  %_140 = sub i64 %3038, 1
  %gen141 = mul i64 %_140, 1
  %_142 = shl i64 %3038, 1
  %3039 = add i64 %3038, 1, !dbg !2161
  store i64 %3039, i64* %29, align 8, !dbg !2161
  br label %originalBB138

originalBB146alteredBB:                           ; preds = %originalBB146, %757
  %3040 = load i8*, i8** %19, align 8, !dbg !2163
  %3041 = load i64, i64* %29, align 8, !dbg !2163
  %3042 = getelementptr inbounds i8, i8* %3040, i64 %3041, !dbg !2163
  store i8 48, i8* %3042, align 1, !dbg !2163
  br label %originalBB146

originalBB150alteredBB:                           ; preds = %originalBB150, %777
  %3043 = load i64, i64* %29, align 8, !dbg !2166
  %_151 = sub i64 0, %3043
  %gen152 = add i64 %_151, 1
  %_153 = sub i64 0, %3043
  %gen154 = add i64 %_153, 1
  %_155 = shl i64 %3043, 1
  %_156 = shl i64 %3043, 1
  %3044 = add i64 %3043, 1, !dbg !2166
  store i64 %3044, i64* %29, align 8, !dbg !2166
  br label %originalBB150

originalBB160alteredBB:                           ; preds = %originalBB160, %796
  br label %originalBB160

originalBB164alteredBB:                           ; preds = %originalBB164, %819
  br label %originalBB164

originalBB168alteredBB:                           ; preds = %originalBB168, %836
  br label %originalBB168

originalBB172alteredBB:                           ; preds = %originalBB172, %853
  %3045 = load i32, i32* %23, align 4, !dbg !2176
  br label %originalBB172

originalBB176alteredBB:                           ; preds = %originalBB176, %875
  br label %originalBB176

originalBB180alteredBB:                           ; preds = %originalBB180, %896
  %3046 = load i64, i64* %28, align 8, !dbg !2188
  %_181 = sub i64 %3046, 2
  %gen182 = mul i64 %_181, 2
  %_183 = sub i64 %3046, 2
  %gen184 = mul i64 %_183, 2
  %_185 = sub i64 0, %3046
  %gen186 = add i64 %_185, 2
  %_187 = sub i64 %3046, 2
  %gen188 = mul i64 %_187, 2
  %_189 = sub i64 %3046, 2
  %gen190 = mul i64 %_189, 2
  %_191 = shl i64 %3046, 2
  %_192 = sub i64 0, %3046
  %gen193 = add i64 %_192, 2
  %3047 = add i64 %3046, 2, !dbg !2189
  %3048 = load i64, i64* %22, align 8, !dbg !2190
  %3049 = icmp ult i64 %3047, %3048, !dbg !2191
  br label %originalBB180

originalBB197alteredBB:                           ; preds = %originalBB197, %944
  %3050 = load i64, i64* %29, align 8, !dbg !2213
  %3051 = load i64, i64* %20, align 8, !dbg !2213
  %3052 = icmp ult i64 %3050, %3051, !dbg !2213
  br label %originalBB197

originalBB201alteredBB:                           ; preds = %originalBB201, %964
  %3053 = load i8*, i8** %19, align 8, !dbg !2213
  %3054 = load i64, i64* %29, align 8, !dbg !2213
  %3055 = getelementptr inbounds i8, i8* %3053, i64 %3054, !dbg !2213
  store i8 63, i8* %3055, align 1, !dbg !2213
  br label %originalBB201

originalBB205alteredBB:                           ; preds = %originalBB205, %1000
  %3056 = load i64, i64* %29, align 8, !dbg !2223
  %3057 = load i64, i64* %20, align 8, !dbg !2223
  %3058 = icmp ult i64 %3056, %3057, !dbg !2223
  br label %originalBB205

originalBB209alteredBB:                           ; preds = %originalBB209, %1028
  %3059 = load i64, i64* %29, align 8, !dbg !2228
  %3060 = load i64, i64* %20, align 8, !dbg !2228
  %3061 = icmp ult i64 %3059, %3060, !dbg !2228
  br label %originalBB209

originalBB213alteredBB:                           ; preds = %originalBB213, %1052
  %3062 = load i64, i64* %29, align 8, !dbg !2231
  %_214 = sub i64 0, %3062
  %gen215 = add i64 %_214, 1
  %_216 = sub i64 %3062, 1
  %gen217 = mul i64 %_216, 1
  %3063 = add i64 %3062, 1, !dbg !2231
  store i64 %3063, i64* %29, align 8, !dbg !2231
  br label %originalBB213

originalBB221alteredBB:                           ; preds = %originalBB221, %1072
  br label %originalBB221

originalBB225alteredBB:                           ; preds = %originalBB225, %1090
  br label %originalBB225

originalBB229alteredBB:                           ; preds = %originalBB229, %1113
  store i8 114, i8* %40, align 1, !dbg !2246
  br label %originalBB229

originalBB233alteredBB:                           ; preds = %originalBB233, %1136
  %3064 = load i8, i8* %35, align 1, !dbg !2258
  %3065 = trunc i8 %3064 to i1, !dbg !2258
  br label %originalBB233

originalBB237alteredBB:                           ; preds = %originalBB237, %1156
  br label %originalBB237

originalBB242alteredBB:                           ; preds = %originalBB242, %1183
  br label %originalBB242

originalBB246alteredBB:                           ; preds = %originalBB246, %1203
  %3066 = load i8, i8* %35, align 1, !dbg !2278
  %3067 = trunc i8 %3066 to i1, !dbg !2278
  br label %originalBB246

originalBB250alteredBB:                           ; preds = %originalBB250, %1222
  br label %originalBB250

originalBB254alteredBB:                           ; preds = %originalBB254, %1243
  %3068 = load i8, i8* %40, align 1, !dbg !2286
  store i8 %3068, i8* %39, align 1, !dbg !2288
  br label %originalBB254

originalBB258alteredBB:                           ; preds = %originalBB258, %1261
  br label %originalBB258

originalBB262alteredBB:                           ; preds = %originalBB262, %1295
  br label %originalBB262

originalBB266alteredBB:                           ; preds = %originalBB266, %1314
  %3069 = load i32, i32* %23, align 4, !dbg !2309
  %3070 = icmp eq i32 %3069, 2, !dbg !2311
  br label %originalBB266

originalBB270alteredBB:                           ; preds = %originalBB270, %1333
  %3071 = load i8, i8* %35, align 1, !dbg !2313
  %3072 = trunc i8 %3071 to i1, !dbg !2313
  br label %originalBB270

originalBB274alteredBB:                           ; preds = %originalBB274, %1352
  br label %originalBB274

originalBB278alteredBB:                           ; preds = %originalBB278, %1370
  store i8 1, i8* %37, align 1, !dbg !2317
  store i8 1, i8* %43, align 1, !dbg !2318
  %3073 = load i32, i32* %23, align 4, !dbg !2319
  %3074 = icmp eq i32 %3073, 2, !dbg !2321
  br label %originalBB278

originalBB282alteredBB:                           ; preds = %originalBB282, %1399
  %3075 = load i64, i64* %20, align 8, !dbg !2333
  store i64 %3075, i64* %30, align 8, !dbg !2335
  store i64 0, i64* %20, align 8, !dbg !2336
  br label %originalBB282

originalBB286alteredBB:                           ; preds = %originalBB286, %1426
  %3076 = load i64, i64* %29, align 8, !dbg !2342
  %_287 = sub i64 %3076, 1
  %gen288 = mul i64 %_287, 1
  %_289 = sub i64 0, %3076
  %gen290 = add i64 %_289, 1
  %3077 = add i64 %3076, 1, !dbg !2342
  store i64 %3077, i64* %29, align 8, !dbg !2342
  br label %originalBB286

originalBB294alteredBB:                           ; preds = %originalBB294, %1450
  %3078 = load i8*, i8** %19, align 8, !dbg !2344
  %3079 = load i64, i64* %29, align 8, !dbg !2344
  %3080 = getelementptr inbounds i8, i8* %3078, i64 %3079, !dbg !2344
  store i8 92, i8* %3080, align 1, !dbg !2344
  br label %originalBB294

originalBB298alteredBB:                           ; preds = %originalBB298, %1470
  %3081 = load i64, i64* %29, align 8, !dbg !2347
  %_299 = sub i64 0, %3081
  %gen300 = add i64 %_299, 1
  %_301 = sub i64 0, %3081
  %gen302 = add i64 %_301, 1
  %_303 = shl i64 %3081, 1
  %_304 = shl i64 %3081, 1
  %_305 = sub i64 0, %3081
  %gen306 = add i64 %_305, 1
  %_307 = shl i64 %3081, 1
  %_308 = sub i64 %3081, 1
  %gen309 = mul i64 %_308, 1
  %_310 = sub i64 %3081, 1
  %gen311 = mul i64 %_310, 1
  %_312 = sub i64 0, %3081
  %gen313 = add i64 %_312, 1
  %3082 = add i64 %3081, 1, !dbg !2347
  store i64 %3082, i64* %29, align 8, !dbg !2347
  br label %originalBB298

originalBB317alteredBB:                           ; preds = %originalBB317, %1490
  %3083 = load i64, i64* %29, align 8, !dbg !2349
  %3084 = load i64, i64* %20, align 8, !dbg !2349
  %3085 = icmp ult i64 %3083, %3084, !dbg !2349
  br label %originalBB317

originalBB321alteredBB:                           ; preds = %originalBB321, %1514
  %3086 = load i64, i64* %29, align 8, !dbg !2352
  %_322 = shl i64 %3086, 1
  %_323 = sub i64 %3086, 1
  %gen324 = mul i64 %_323, 1
  %_325 = shl i64 %3086, 1
  %_326 = shl i64 %3086, 1
  %_327 = shl i64 %3086, 1
  %3087 = add i64 %3086, 1, !dbg !2352
  store i64 %3087, i64* %29, align 8, !dbg !2352
  br label %originalBB321

originalBB331alteredBB:                           ; preds = %originalBB331, %1533
  store i8 0, i8* %36, align 1, !dbg !2353
  br label %originalBB331

originalBB335alteredBB:                           ; preds = %originalBB335, %1571
  %3088 = load i8*, i8** %21, align 8, !dbg !2397
  %3089 = call i64 @strlen(i8* %3088) #13, !dbg !2398
  store i64 %3089, i64* %22, align 8, !dbg !2399
  br label %originalBB335

originalBB339alteredBB:                           ; preds = %originalBB339, %1590
  br label %originalBB339

originalBB343alteredBB:                           ; preds = %originalBB343, %1621
  br label %originalBB343

originalBB347alteredBB:                           ; preds = %originalBB347, %1638
  %3090 = load i64, i64* %48, align 8, !dbg !2423
  %3091 = icmp eq i64 %3090, -1, !dbg !2425
  br label %originalBB347

originalBB351alteredBB:                           ; preds = %originalBB351, %1658
  %3092 = load i64, i64* %48, align 8, !dbg !2430
  %3093 = icmp eq i64 %3092, -2, !dbg !2432
  br label %originalBB351

originalBB355alteredBB:                           ; preds = %originalBB355, %1677
  store i8 0, i8* %45, align 1, !dbg !2434
  br label %originalBB355

originalBB359alteredBB:                           ; preds = %originalBB359, %1709
  br label %originalBB359

originalBB363alteredBB:                           ; preds = %originalBB363, %1727
  %3094 = load i64, i64* %44, align 8, !dbg !2448
  %_364 = sub i64 0, %3094
  %gen365 = add i64 %_364, 1
  %_366 = sub i64 %3094, 1
  %gen367 = mul i64 %_366, 1
  %_368 = sub i64 %3094, 1
  %gen369 = mul i64 %_368, 1
  %_370 = sub i64 %3094, 1
  %gen371 = mul i64 %_370, 1
  %_372 = sub i64 %3094, 1
  %gen373 = mul i64 %_372, 1
  %_374 = sub i64 %3094, 1
  %gen375 = mul i64 %_374, 1
  %_376 = sub i64 %3094, 1
  %gen377 = mul i64 %_376, 1
  %3095 = add i64 %3094, 1, !dbg !2448
  store i64 %3095, i64* %44, align 8, !dbg !2448
  br label %originalBB363

originalBB381alteredBB:                           ; preds = %originalBB381, %1747
  %3096 = load i8, i8* %35, align 1, !dbg !2451
  %3097 = trunc i8 %3096 to i1, !dbg !2451
  br label %originalBB381

originalBB385alteredBB:                           ; preds = %originalBB385, %1787
  %3098 = load i64, i64* %49, align 8, !dbg !2480
  %_386 = sub i64 %3098, 1
  %gen387 = mul i64 %_386, 1
  %_388 = shl i64 %3098, 1
  %_389 = sub i64 %3098, 1
  %gen390 = mul i64 %_389, 1
  %_391 = sub i64 %3098, 1
  %gen392 = mul i64 %_391, 1
  %_393 = shl i64 %3098, 1
  %_394 = sub i64 0, %3098
  %gen395 = add i64 %_394, 1
  %_396 = shl i64 %3098, 1
  %3099 = add i64 %3098, 1, !dbg !2480
  store i64 %3099, i64* %49, align 8, !dbg !2480
  br label %originalBB385

originalBB400alteredBB:                           ; preds = %originalBB400, %1806
  br label %originalBB400

originalBB404alteredBB:                           ; preds = %originalBB404, %1827
  store i8 0, i8* %45, align 1, !dbg !2489
  br label %originalBB404

originalBB408alteredBB:                           ; preds = %originalBB408, %1844
  %3100 = load i64, i64* %48, align 8, !dbg !2491
  %3101 = load i64, i64* %44, align 8, !dbg !2492
  %_409 = sub i64 %3101, %3100
  %gen410 = mul i64 %_409, %3100
  %_411 = sub i64 %3101, %3100
  %gen412 = mul i64 %_411, %3100
  %_413 = shl i64 %3101, %3100
  %_414 = shl i64 %3101, %3100
  %3102 = add i64 %3101, %3100, !dbg !2492
  store i64 %3102, i64* %44, align 8, !dbg !2492
  br label %originalBB408

originalBB418alteredBB:                           ; preds = %originalBB418, %1871
  br label %originalBB418

originalBB422alteredBB:                           ; preds = %originalBB422, %1900
  %3103 = load i64, i64* %28, align 8, !dbg !2511
  %3104 = load i64, i64* %44, align 8, !dbg !2512
  %_423 = shl i64 %3103, %3104
  %_424 = sub i64 0, %3103
  %gen425 = add i64 %_424, %3104
  %_426 = sub i64 %3103, %3104
  %gen427 = mul i64 %_426, %3104
  %3105 = add i64 %3103, %3104, !dbg !2513
  store i64 %3105, i64* %50, align 8, !dbg !2510
  br label %originalBB422

originalBB431alteredBB:                           ; preds = %originalBB431, %1926
  br label %originalBB431

originalBB435alteredBB:                           ; preds = %originalBB435, %1943
  %3106 = load i8, i8* %35, align 1, !dbg !2525
  %3107 = trunc i8 %3106 to i1, !dbg !2525
  br label %originalBB435

originalBB439alteredBB:                           ; preds = %originalBB439, %1963
  store i8 1, i8* %42, align 1, !dbg !2528
  %3108 = load i32, i32* %23, align 4, !dbg !2529
  %3109 = icmp eq i32 %3108, 2, !dbg !2529
  br label %originalBB439

originalBB443alteredBB:                           ; preds = %originalBB443, %1985
  br label %originalBB443

originalBB447alteredBB:                           ; preds = %originalBB447, %2002
  %3110 = load i64, i64* %29, align 8, !dbg !2533
  %3111 = load i64, i64* %20, align 8, !dbg !2533
  %3112 = icmp ult i64 %3110, %3111, !dbg !2533
  br label %originalBB447

originalBB451alteredBB:                           ; preds = %originalBB451, %2030
  %3113 = load i64, i64* %29, align 8, !dbg !2537
  %3114 = load i64, i64* %20, align 8, !dbg !2537
  %3115 = icmp ult i64 %3113, %3114, !dbg !2537
  br label %originalBB451

originalBB455alteredBB:                           ; preds = %originalBB455, %2057
  br label %originalBB455

originalBB459alteredBB:                           ; preds = %originalBB459, %2087
  %3116 = load i64, i64* %29, align 8, !dbg !2545
  %3117 = load i64, i64* %20, align 8, !dbg !2545
  %3118 = icmp ult i64 %3116, %3117, !dbg !2545
  br label %originalBB459

originalBB463alteredBB:                           ; preds = %originalBB463, %2120
  %3119 = load i8, i8* %39, align 1, !dbg !2550
  %3120 = zext i8 %3119 to i32, !dbg !2550
  %_464 = shl i32 %3120, 6
  %_465 = sub i32 %3120, 6
  %gen466 = mul i32 %_465, 6
  %_467 = sub i32 0, %3120
  %gen468 = add i32 %_467, 6
  %3121 = ashr i32 %3120, 6, !dbg !2550
  %_469 = sub i32 48, %3121
  %gen470 = mul i32 %_469, %3121
  %_471 = shl i32 48, %3121
  %_472 = shl i32 48, %3121
  %_473 = sub i32 0, 48
  %gen474 = add i32 %_473, %3121
  %_475 = sub i32 48, %3121
  %gen476 = mul i32 %_475, %3121
  %_477 = sub i32 48, %3121
  %gen478 = mul i32 %_477, %3121
  %3122 = add nsw i32 48, %3121, !dbg !2550
  %3123 = trunc i32 %3122 to i8, !dbg !2550
  %3124 = load i8*, i8** %19, align 8, !dbg !2550
  %3125 = load i64, i64* %29, align 8, !dbg !2550
  %3126 = getelementptr inbounds i8, i8* %3124, i64 %3125, !dbg !2550
  store i8 %3123, i8* %3126, align 1, !dbg !2550
  br label %originalBB463

originalBB482alteredBB:                           ; preds = %originalBB482, %2153
  %3127 = load i8, i8* %39, align 1, !dbg !2555
  %3128 = zext i8 %3127 to i32, !dbg !2555
  %_483 = shl i32 %3128, 3
  %_484 = sub i32 %3128, 3
  %gen485 = mul i32 %_484, 3
  %_486 = sub i32 %3128, 3
  %gen487 = mul i32 %_486, 3
  %_488 = sub i32 %3128, 3
  %gen489 = mul i32 %_488, 3
  %_490 = sub i32 %3128, 3
  %gen491 = mul i32 %_490, 3
  %_492 = sub i32 %3128, 3
  %gen493 = mul i32 %_492, 3
  %_494 = sub i32 0, %3128
  %gen495 = add i32 %_494, 3
  %3129 = ashr i32 %3128, 3, !dbg !2555
  %_496 = sub i32 0, %3129
  %gen497 = add i32 %_496, 7
  %3130 = and i32 %3129, 7, !dbg !2555
  %_498 = sub i32 48, %3130
  %gen499 = mul i32 %_498, %3130
  %_500 = shl i32 48, %3130
  %3131 = add nsw i32 48, %3130, !dbg !2555
  %3132 = trunc i32 %3131 to i8, !dbg !2555
  %3133 = load i8*, i8** %19, align 8, !dbg !2555
  %3134 = load i64, i64* %29, align 8, !dbg !2555
  %3135 = getelementptr inbounds i8, i8* %3133, i64 %3134, !dbg !2555
  store i8 %3132, i8* %3135, align 1, !dbg !2555
  br label %originalBB482

originalBB504alteredBB:                           ; preds = %originalBB504, %2188
  %3136 = load i8, i8* %41, align 1, !dbg !2565
  %3137 = trunc i8 %3136 to i1, !dbg !2565
  br label %originalBB504

originalBB508alteredBB:                           ; preds = %originalBB508, %2216
  %3138 = load i64, i64* %29, align 8, !dbg !2573
  %_509 = shl i64 %3138, 1
  %3139 = add i64 %3138, 1, !dbg !2573
  store i64 %3139, i64* %29, align 8, !dbg !2573
  br label %originalBB508

originalBB513alteredBB:                           ; preds = %originalBB513, %2250
  br label %originalBB513

originalBB517alteredBB:                           ; preds = %originalBB517, %2279
  %3140 = load i64, i64* %29, align 8, !dbg !2594
  %3141 = load i64, i64* %20, align 8, !dbg !2594
  %3142 = icmp ult i64 %3140, %3141, !dbg !2594
  br label %originalBB517

originalBB521alteredBB:                           ; preds = %originalBB521, %2307
  br label %originalBB521

originalBB525alteredBB:                           ; preds = %originalBB525, %2329
  %3143 = load i8, i8* %39, align 1, !dbg !2599
  %3144 = load i8*, i8** %19, align 8, !dbg !2599
  %3145 = load i64, i64* %29, align 8, !dbg !2599
  %3146 = getelementptr inbounds i8, i8* %3144, i64 %3145, !dbg !2599
  store i8 %3143, i8* %3146, align 1, !dbg !2599
  br label %originalBB525

originalBB529alteredBB:                           ; preds = %originalBB529, %2364
  %3147 = load i32, i32* %23, align 4, !dbg !2615
  %3148 = icmp ne i32 %3147, 2, !dbg !2616
  br label %originalBB529

originalBB533alteredBB:                           ; preds = %originalBB533, %2409
  %3149 = load i8, i8* %35, align 1, !dbg !2636
  %3150 = trunc i8 %3149 to i1, !dbg !2636
  br label %originalBB533

originalBB537alteredBB:                           ; preds = %originalBB537, %2432
  %3151 = load i8, i8* %36, align 1, !dbg !2640
  %3152 = trunc i8 %3151 to i1, !dbg !2640
  br label %originalBB537

originalBB541alteredBB:                           ; preds = %originalBB541, %2456
  %3153 = load i8*, i8** %19, align 8, !dbg !2644
  %3154 = load i64, i64* %29, align 8, !dbg !2644
  %3155 = getelementptr inbounds i8, i8* %3153, i64 %3154, !dbg !2644
  store i8 39, i8* %3155, align 1, !dbg !2644
  br label %originalBB541

originalBB545alteredBB:                           ; preds = %originalBB545, %2476
  %3156 = load i64, i64* %29, align 8, !dbg !2647
  %_546 = shl i64 %3156, 1
  %_547 = sub i64 0, %3156
  %gen548 = add i64 %_547, 1
  %_549 = sub i64 %3156, 1
  %gen550 = mul i64 %_549, 1
  %_551 = sub i64 0, %3156
  %gen552 = add i64 %_551, 1
  %_553 = shl i64 %3156, 1
  %_554 = sub i64 0, %3156
  %gen555 = add i64 %_554, 1
  %3157 = add i64 %3156, 1, !dbg !2647
  store i64 %3157, i64* %29, align 8, !dbg !2647
  br label %originalBB545

originalBB559alteredBB:                           ; preds = %originalBB559, %2495
  br label %originalBB559

originalBB563alteredBB:                           ; preds = %originalBB563, %2516
  %3158 = load i8*, i8** %19, align 8, !dbg !2648
  %3159 = load i64, i64* %29, align 8, !dbg !2648
  %3160 = getelementptr inbounds i8, i8* %3158, i64 %3159, !dbg !2648
  store i8 36, i8* %3160, align 1, !dbg !2648
  br label %originalBB563

originalBB567alteredBB:                           ; preds = %originalBB567, %2536
  %3161 = load i64, i64* %29, align 8, !dbg !2651
  %_568 = sub i64 %3161, 1
  %gen569 = mul i64 %_568, 1
  %_570 = sub i64 0, %3161
  %gen571 = add i64 %_570, 1
  %3162 = add i64 %3161, 1, !dbg !2651
  store i64 %3162, i64* %29, align 8, !dbg !2651
  br label %originalBB567

originalBB575alteredBB:                           ; preds = %originalBB575, %2564
  %3163 = load i64, i64* %29, align 8, !dbg !2655
  %_576 = sub i64 0, %3163
  %gen577 = add i64 %_576, 1
  %_578 = sub i64 0, %3163
  %gen579 = add i64 %_578, 1
  %_580 = sub i64 %3163, 1
  %gen581 = mul i64 %_580, 1
  %3164 = add i64 %3163, 1, !dbg !2655
  store i64 %3164, i64* %29, align 8, !dbg !2655
  br label %originalBB575

originalBB585alteredBB:                           ; preds = %originalBB585, %2596
  br label %originalBB585

originalBB589alteredBB:                           ; preds = %originalBB589, %2648
  %3165 = load i64, i64* %29, align 8, !dbg !2678
  %3166 = load i64, i64* %20, align 8, !dbg !2678
  %3167 = icmp ult i64 %3165, %3166, !dbg !2678
  br label %originalBB589

originalBB593alteredBB:                           ; preds = %originalBB593, %2668
  %3168 = load i8, i8* %39, align 1, !dbg !2678
  %3169 = load i8*, i8** %19, align 8, !dbg !2678
  %3170 = load i64, i64* %29, align 8, !dbg !2678
  %3171 = getelementptr inbounds i8, i8* %3169, i64 %3170, !dbg !2678
  store i8 %3168, i8* %3171, align 1, !dbg !2678
  br label %originalBB593

originalBB597alteredBB:                           ; preds = %originalBB597, %2696
  br label %originalBB597

originalBB601alteredBB:                           ; preds = %originalBB601, %2754
  %3172 = load i64, i64* %30, align 8, !dbg !2729
  store i64 %3172, i64* %20, align 8, !dbg !2731
  store i64 0, i64* %29, align 8, !dbg !2732
  br label %originalBB601

originalBB605alteredBB:                           ; preds = %originalBB605, %2777
  %3173 = load i8, i8* %35, align 1, !dbg !2738
  %3174 = trunc i8 %3173 to i1, !dbg !2738
  br label %originalBB605

originalBB609alteredBB:                           ; preds = %originalBB609, %2801
  br label %originalBB609

originalBB613alteredBB:                           ; preds = %originalBB613, %2818
  %3175 = load i64, i64* %29, align 8, !dbg !2747
  %3176 = load i64, i64* %20, align 8, !dbg !2747
  %3177 = icmp ult i64 %3175, %3176, !dbg !2747
  br label %originalBB613

originalBB617alteredBB:                           ; preds = %originalBB617, %2851
  br label %originalBB617

originalBB621alteredBB:                           ; preds = %originalBB621, %2872
  %3178 = load i8*, i8** %19, align 8, !dbg !2760
  %3179 = load i64, i64* %29, align 8, !dbg !2761
  %3180 = getelementptr inbounds i8, i8* %3178, i64 %3179, !dbg !2760
  store i8 0, i8* %3180, align 1, !dbg !2762
  br label %originalBB621

originalBB625alteredBB:                           ; preds = %originalBB625, %2901
  %3181 = load i8*, i8** %19, align 8, !dbg !2775
  %3182 = load i64, i64* %20, align 8, !dbg !2776
  %3183 = load i8*, i8** %21, align 8, !dbg !2777
  %3184 = load i64, i64* %22, align 8, !dbg !2778
  %3185 = load i32, i32* %23, align 4, !dbg !2779
  %3186 = load i32, i32* %24, align 4, !dbg !2780
  %_626 = sub i32 0, %3186
  %gen627 = add i32 %_626, -3
  %_628 = sub i32 0, %3186
  %gen629 = add i32 %_628, -3
  %3187 = and i32 %3186, -3, !dbg !2781
  %3188 = load i8*, i8** %26, align 8, !dbg !2782
  %3189 = load i8*, i8** %27, align 8, !dbg !2783
  %3190 = call i64 @quotearg_buffer_restyled(i8* %3181, i64 %3182, i8* %3183, i64 %3184, i32 %3185, i32 %3187, i32* null, i8* %3188, i8* %3189), !dbg !2784
  store i64 %3190, i64* %18, align 8, !dbg !2785
  br label %originalBB625

originalBB633alteredBB:                           ; preds = %originalBB633, %2928
  %3191 = load i64, i64* %18, align 8, !dbg !2786
  br label %originalBB633
}

; Function Attrs: nounwind
declare dso_local i64 @__ctype_get_mb_cur_max() #2

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @gettext_quote(i8*, i32) #4 !dbg !2838 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !2841, metadata !DIExpression()), !dbg !2842
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !2843, metadata !DIExpression()), !dbg !2844
  call void @llvm.dbg.declare(metadata i8** %6, metadata !2845, metadata !DIExpression()), !dbg !2846
  %8 = load i8*, i8** %4, align 8, !dbg !2847
  %9 = call i8* @gettext(i8* %8) #10, !dbg !2847
  store i8* %9, i8** %6, align 8, !dbg !2846
  call void @llvm.dbg.declare(metadata i8** %7, metadata !2848, metadata !DIExpression()), !dbg !2849
  %10 = load i8*, i8** %6, align 8, !dbg !2850
  %11 = load i8*, i8** %4, align 8, !dbg !2852
  %12 = icmp ne i8* %10, %11, !dbg !2853
  br i1 %12, label %13, label %15, !dbg !2854

13:                                               ; preds = %2
  %14 = load i8*, i8** %6, align 8, !dbg !2855
  store i8* %14, i8** %3, align 8, !dbg !2856
  br label %234, !dbg !2856

15:                                               ; preds = %2
  %16 = call i8* @locale_charset(), !dbg !2857
  store i8* %16, i8** %7, align 8, !dbg !2858
  %17 = load i8*, i8** %7, align 8, !dbg !2859
  %18 = call i32 @c_strcasecmp(i8* %17, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.88, i64 0, i64 0)) #13, !dbg !2859
  br label %19, !dbg !2859

19:                                               ; preds = %15
  %collatzVar1 = alloca i32
  br label %20

20:                                               ; preds = %19
  %21 = load i32, i32* @inVal0
  %22 = icmp sgt i32 %21, 1
  br i1 %22, label %24, label %23

23:                                               ; preds = %20
  store i32 48, i32* %collatzVar1
  br label %24

24:                                               ; preds = %23, %20
  %25 = load i8**, i8*** @inVal1
  %26 = getelementptr inbounds i8*, i8** %25, i64 1
  %27 = load i8*, i8** %26
  %controle2 = call i32 @controle(i8* %27, i32 0)
  store i32 %controle2, i32* %collatzVar1
  br label %28

28:                                               ; preds = %originalBBpart211, %58, %24
  %29 = load i32, i32* @x.39
  %30 = load i32, i32* @y.40
  %31 = sub i32 %29, 1
  %32 = mul i32 %29, %31
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %34, %35
  br i1 %36, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %28, %originalBBalteredBB
  %37 = load i32, i32* %collatzVar1
  %38 = icmp sgt i32 %37, 1
  %39 = load i32, i32* @x.39
  %40 = load i32, i32* @y.40
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %38, label %47, label %90

47:                                               ; preds = %originalBBpart2
  %48 = load i32, i32* %collatzVar1
  %49 = srem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %54

51:                                               ; preds = %47
  %52 = load i32, i32* %collatzVar1
  %53 = sdiv i32 %52, 2
  store i32 %53, i32* %collatzVar1
  br label %58

54:                                               ; preds = %47
  %55 = load i32, i32* %collatzVar1
  %56 = mul i32 %55, 3
  %57 = add i32 %56, 1
  store i32 %57, i32* %collatzVar1
  br label %58

58:                                               ; preds = %54, %51
  %59 = load i32, i32* %collatzVar1
  %60 = sub i32 %18, %59
  %61 = icmp sgt i32 %60, -2
  br i1 %61, label %62, label %28

62:                                               ; preds = %58
  %63 = load i32, i32* @x.39
  %64 = load i32, i32* @y.40
  %65 = sub i32 %63, 1
  %66 = mul i32 %63, %65
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %64, 10
  %70 = or i1 %68, %69
  br i1 %70, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %62, %originalBB1alteredBB
  %71 = load i32, i32* %collatzVar1
  %72 = add i32 %18, %71
  %73 = icmp slt i32 %72, 2
  %74 = load i32, i32* @x.39
  %75 = load i32, i32* @y.40
  %76 = sub i32 %74, 1
  %77 = mul i32 %74, %76
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %75, 10
  %81 = or i1 %79, %80
  br i1 %81, label %originalBBpart211, label %originalBB1alteredBB

originalBBpart211:                                ; preds = %originalBB1
  br i1 %73, label %82, label %28

82:                                               ; preds = %originalBBpart211
  %83 = load i8*, i8** %4, align 8, !dbg !2861
  %84 = getelementptr inbounds i8, i8* %83, i64 0, !dbg !2861
  %85 = load i8, i8* %84, align 1, !dbg !2861
  %86 = sext i8 %85 to i32, !dbg !2861
  %87 = icmp eq i32 %86, 96, !dbg !2862
  %88 = zext i1 %87 to i64, !dbg !2861
  %89 = select i1 %87, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14.89, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.15.90, i64 0, i64 0), !dbg !2861
  store i8* %89, i8** %3, align 8, !dbg !2863
  br label %234, !dbg !2863

90:                                               ; preds = %originalBBpart2
  %91 = load i32, i32* @x.39
  %92 = load i32, i32* @y.40
  %93 = sub i32 %91, 1
  %94 = mul i32 %91, %93
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %92, 10
  %98 = or i1 %96, %97
  br i1 %98, label %originalBB13, label %originalBB13alteredBB

originalBB13:                                     ; preds = %90, %originalBB13alteredBB
  %99 = load i8*, i8** %7, align 8, !dbg !2864
  %100 = call i32 @c_strcasecmp(i8* %99, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.16.91, i64 0, i64 0)) #13, !dbg !2864
  %101 = load i32, i32* @x.39
  %102 = load i32, i32* @y.40
  %103 = sub i32 %101, 1
  %104 = mul i32 %101, %103
  %105 = urem i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %102, 10
  %108 = or i1 %106, %107
  br i1 %108, label %originalBBpart215, label %originalBB13alteredBB

originalBBpart215:                                ; preds = %originalBB13
  br label %109, !dbg !2864

109:                                              ; preds = %originalBBpart215
  %110 = load i32, i32* @x.39
  %111 = load i32, i32* @y.40
  %112 = sub i32 %110, 1
  %113 = mul i32 %110, %112
  %114 = urem i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %111, 10
  %117 = or i1 %115, %116
  br i1 %117, label %originalBB17, label %originalBB17alteredBB

originalBB17:                                     ; preds = %109, %originalBB17alteredBB
  %collatzVar = alloca i32
  %118 = load i32, i32* @x.39
  %119 = load i32, i32* @y.40
  %120 = sub i32 %118, 1
  %121 = mul i32 %118, %120
  %122 = urem i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = icmp slt i32 %119, 10
  %125 = or i1 %123, %124
  br i1 %125, label %originalBBpart219, label %originalBB17alteredBB

originalBBpart219:                                ; preds = %originalBB17
  br label %126

126:                                              ; preds = %originalBBpart219
  %127 = load i32, i32* @x.39
  %128 = load i32, i32* @y.40
  %129 = sub i32 %127, 1
  %130 = mul i32 %127, %129
  %131 = urem i32 %130, 2
  %132 = icmp eq i32 %131, 0
  %133 = icmp slt i32 %128, 10
  %134 = or i1 %132, %133
  br i1 %134, label %originalBB21, label %originalBB21alteredBB

originalBB21:                                     ; preds = %126, %originalBB21alteredBB
  %135 = load i32, i32* @inVal0
  %136 = icmp sgt i32 %135, 1
  %137 = load i32, i32* @x.39
  %138 = load i32, i32* @y.40
  %139 = sub i32 %137, 1
  %140 = mul i32 %137, %139
  %141 = urem i32 %140, 2
  %142 = icmp eq i32 %141, 0
  %143 = icmp slt i32 %138, 10
  %144 = or i1 %142, %143
  br i1 %144, label %originalBBpart223, label %originalBB21alteredBB

originalBBpart223:                                ; preds = %originalBB21
  br i1 %136, label %162, label %145

145:                                              ; preds = %originalBBpart223
  %146 = load i32, i32* @x.39
  %147 = load i32, i32* @y.40
  %148 = sub i32 %146, 1
  %149 = mul i32 %146, %148
  %150 = urem i32 %149, 2
  %151 = icmp eq i32 %150, 0
  %152 = icmp slt i32 %147, 10
  %153 = or i1 %151, %152
  br i1 %153, label %originalBB25, label %originalBB25alteredBB

originalBB25:                                     ; preds = %145, %originalBB25alteredBB
  store i32 46, i32* %collatzVar
  %154 = load i32, i32* @x.39
  %155 = load i32, i32* @y.40
  %156 = sub i32 %154, 1
  %157 = mul i32 %154, %156
  %158 = urem i32 %157, 2
  %159 = icmp eq i32 %158, 0
  %160 = icmp slt i32 %155, 10
  %161 = or i1 %159, %160
  br i1 %161, label %originalBBpart227, label %originalBB25alteredBB

originalBBpart227:                                ; preds = %originalBB25
  br label %162

162:                                              ; preds = %originalBBpart227, %originalBBpart223
  %163 = load i32, i32* @x.39
  %164 = load i32, i32* @y.40
  %165 = sub i32 %163, 1
  %166 = mul i32 %163, %165
  %167 = urem i32 %166, 2
  %168 = icmp eq i32 %167, 0
  %169 = icmp slt i32 %164, 10
  %170 = or i1 %168, %169
  br i1 %170, label %originalBB29, label %originalBB29alteredBB

originalBB29:                                     ; preds = %162, %originalBB29alteredBB
  %171 = load i8**, i8*** @inVal1
  %172 = getelementptr inbounds i8*, i8** %171, i64 1
  %173 = load i8*, i8** %172
  %174 = add i32 0, -1
  %controle = call i32 @controle(i8* %173, i32 %174)
  store i32 %controle, i32* %collatzVar
  %175 = load i32, i32* @x.39
  %176 = load i32, i32* @y.40
  %177 = sub i32 %175, 1
  %178 = mul i32 %175, %177
  %179 = urem i32 %178, 2
  %180 = icmp eq i32 %179, 0
  %181 = icmp slt i32 %176, 10
  %182 = or i1 %180, %181
  br i1 %182, label %originalBBpart238, label %originalBB29alteredBB

originalBBpart238:                                ; preds = %originalBB29
  br label %183

183:                                              ; preds = %201, %197, %originalBBpart238
  %184 = load i32, i32* %collatzVar
  %185 = icmp sgt i32 %184, 1
  br i1 %185, label %186, label %213

186:                                              ; preds = %183
  %187 = load i32, i32* %collatzVar
  %188 = srem i32 %187, 2
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %190, label %193

190:                                              ; preds = %186
  %191 = load i32, i32* %collatzVar
  %192 = sdiv i32 %191, 2
  store i32 %192, i32* %collatzVar
  br label %197

193:                                              ; preds = %186
  %194 = load i32, i32* %collatzVar
  %195 = mul i32 %194, 3
  %196 = add i32 %195, 1
  store i32 %196, i32* %collatzVar
  br label %197

197:                                              ; preds = %193, %190
  %198 = load i32, i32* %collatzVar
  %199 = sub i32 %100, %198
  %200 = icmp sgt i32 %199, -2
  br i1 %200, label %201, label %183

201:                                              ; preds = %197
  %202 = load i32, i32* %collatzVar
  %203 = add i32 %100, %202
  %204 = icmp slt i32 %203, 2
  br i1 %204, label %205, label %183

205:                                              ; preds = %201
  %206 = load i8*, i8** %4, align 8, !dbg !2866
  %207 = getelementptr inbounds i8, i8* %206, i64 0, !dbg !2866
  %208 = load i8, i8* %207, align 1, !dbg !2866
  %209 = sext i8 %208 to i32, !dbg !2866
  %210 = icmp eq i32 %209, 96, !dbg !2867
  %211 = zext i1 %210 to i64, !dbg !2866
  %212 = select i1 %210, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.17.92, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18.93, i64 0, i64 0), !dbg !2866
  store i8* %212, i8** %3, align 8, !dbg !2868
  br label %234, !dbg !2868

213:                                              ; preds = %183
  %214 = load i32, i32* @x.39
  %215 = load i32, i32* @y.40
  %216 = sub i32 %214, 1
  %217 = mul i32 %214, %216
  %218 = urem i32 %217, 2
  %219 = icmp eq i32 %218, 0
  %220 = icmp slt i32 %215, 10
  %221 = or i1 %219, %220
  br i1 %221, label %originalBB40, label %originalBB40alteredBB

originalBB40:                                     ; preds = %213, %originalBB40alteredBB
  %222 = load i32, i32* %5, align 4, !dbg !2869
  %223 = icmp eq i32 %222, 9, !dbg !2870
  %224 = zext i1 %223 to i64, !dbg !2869
  %225 = select i1 %223, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.85, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.87, i64 0, i64 0), !dbg !2869
  store i8* %225, i8** %3, align 8, !dbg !2871
  %226 = load i32, i32* @x.39
  %227 = load i32, i32* @y.40
  %228 = sub i32 %226, 1
  %229 = mul i32 %226, %228
  %230 = urem i32 %229, 2
  %231 = icmp eq i32 %230, 0
  %232 = icmp slt i32 %227, 10
  %233 = or i1 %231, %232
  br i1 %233, label %originalBBpart242, label %originalBB40alteredBB

originalBBpart242:                                ; preds = %originalBB40
  br label %234, !dbg !2871

234:                                              ; preds = %originalBBpart242, %205, %82, %13
  %235 = load i8*, i8** %3, align 8, !dbg !2872
  ret i8* %235, !dbg !2872

originalBBalteredBB:                              ; preds = %originalBB, %28
  %236 = load i32, i32* %collatzVar1
  %237 = icmp sgt i32 %236, 1
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %62
  %238 = load i32, i32* %collatzVar1
  %_ = sub i32 %18, %238
  %gen = mul i32 %_, %238
  %_2 = shl i32 %18, %238
  %_3 = shl i32 %18, %238
  %_4 = shl i32 %18, %238
  %_5 = shl i32 %18, %238
  %_6 = shl i32 %18, %238
  %_7 = shl i32 %18, %238
  %_8 = sub i32 %18, %238
  %gen9 = mul i32 %_8, %238
  %239 = add i32 %18, %238
  %240 = icmp slt i32 %239, 2
  br label %originalBB1

originalBB13alteredBB:                            ; preds = %originalBB13, %90
  %241 = load i8*, i8** %7, align 8, !dbg !2864
  %242 = call i32 @c_strcasecmp(i8* %241, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.16.91, i64 0, i64 0)) #13, !dbg !2864
  br label %originalBB13

originalBB17alteredBB:                            ; preds = %originalBB17, %109
  %collatzVaralteredBB = alloca i32
  br label %originalBB17

originalBB21alteredBB:                            ; preds = %originalBB21, %126
  %243 = load i32, i32* @inVal0
  %244 = icmp sgt i32 %243, 1
  br label %originalBB21

originalBB25alteredBB:                            ; preds = %originalBB25, %145
  store i32 46, i32* %collatzVar
  br label %originalBB25

originalBB29alteredBB:                            ; preds = %originalBB29, %162
  %245 = load i8**, i8*** @inVal1
  %246 = getelementptr inbounds i8*, i8** %245, i64 1
  %247 = load i8*, i8** %246
  %_30 = shl i32 0, -1
  %_31 = sub i32 0, 0
  %gen32 = add i32 %_31, -1
  %_33 = sub i32 0, 0
  %gen34 = add i32 %_33, -1
  %_35 = sub i32 0, 0
  %gen36 = add i32 %_35, -1
  %248 = add i32 0, -1
  %controlealteredBB = call i32 @controle(i8* %247, i32 %248)
  store i32 %controlealteredBB, i32* %collatzVar
  br label %originalBB29

originalBB40alteredBB:                            ; preds = %originalBB40, %213
  %249 = load i32, i32* %5, align 4, !dbg !2869
  %250 = icmp eq i32 %249, 9, !dbg !2870
  %251 = zext i1 %250 to i64, !dbg !2869
  %252 = select i1 %250, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.85, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.87, i64 0, i64 0), !dbg !2869
  store i8* %252, i8** %3, align 8, !dbg !2871
  br label %originalBB40
}

; Function Attrs: nounwind readonly
declare dso_local i64 @strlen(i8*) #7

; Function Attrs: nounwind readonly
declare dso_local i32 @memcmp(i8*, i8*, i64) #7

; Function Attrs: nounwind readnone
declare dso_local i16** @__ctype_b_loc() #8

; Function Attrs: nounwind
declare dso_local i32 @iswprint(i32) #2

; Function Attrs: nounwind readonly
declare dso_local i32 @mbsinit(%struct.__mbstate_t*) #7

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quotearg_char(i8*, i8 signext) #4 !dbg !2873 {
  %3 = alloca i8*, align 8
  %4 = alloca i8, align 1
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !2876, metadata !DIExpression()), !dbg !2877
  store i8 %1, i8* %4, align 1
  call void @llvm.dbg.declare(metadata i8* %4, metadata !2878, metadata !DIExpression()), !dbg !2879
  %5 = load i8*, i8** %3, align 8, !dbg !2880
  %6 = load i8, i8* %4, align 1, !dbg !2881
  %7 = call i8* @quotearg_char_mem(i8* %5, i64 -1, i8 signext %6), !dbg !2882
  ret i8* %7, !dbg !2883
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quotearg_colon(i8*) #4 !dbg !2884 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !2887, metadata !DIExpression()), !dbg !2888
  %3 = load i8*, i8** %2, align 8, !dbg !2889
  %4 = call i8* @quotearg_char(i8* %3, i8 signext 58), !dbg !2890
  ret i8* %4, !dbg !2891
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quote_n_mem(i32, i8*, i64) #4 !dbg !2892 {
  %4 = load i32, i32* @x.45
  %5 = load i32, i32* @y.46
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca i32, align 4
  %13 = alloca i8*, align 8
  %14 = alloca i64, align 8
  store i32 %0, i32* %12, align 4
  call void @llvm.dbg.declare(metadata i32* %12, metadata !2895, metadata !DIExpression()), !dbg !2896
  store i8* %1, i8** %13, align 8
  call void @llvm.dbg.declare(metadata i8** %13, metadata !2897, metadata !DIExpression()), !dbg !2898
  store i64 %2, i64* %14, align 8
  call void @llvm.dbg.declare(metadata i64* %14, metadata !2899, metadata !DIExpression()), !dbg !2900
  %15 = load i32, i32* %12, align 4, !dbg !2901
  %16 = load i8*, i8** %13, align 8, !dbg !2902
  %17 = load i64, i64* %14, align 8, !dbg !2903
  %18 = call i8* @quotearg_n_options(i32 %15, i8* %16, i64 %17, %struct.quoting_options* @quote_quoting_options), !dbg !2904
  %19 = load i32, i32* @x.45
  %20 = load i32, i32* @y.46
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i8* %18, !dbg !2905

originalBBalteredBB:                              ; preds = %originalBB, %3
  %27 = alloca i32, align 4
  %28 = alloca i8*, align 8
  %29 = alloca i64, align 8
  store i32 %0, i32* %27, align 4
  call void @llvm.dbg.declare(metadata i32* %27, metadata !2906, metadata !DIExpression()), !dbg !2896
  store i8* %1, i8** %28, align 8
  call void @llvm.dbg.declare(metadata i8** %28, metadata !2938, metadata !DIExpression()), !dbg !2898
  store i64 %2, i64* %29, align 8
  call void @llvm.dbg.declare(metadata i64* %29, metadata !2939, metadata !DIExpression()), !dbg !2900
  %30 = load i32, i32* %27, align 4, !dbg !2901
  %31 = load i8*, i8** %28, align 8, !dbg !2902
  %32 = load i64, i64* %29, align 8, !dbg !2903
  %33 = call i8* @quotearg_n_options(i32 %30, i8* %31, i64 %32, %struct.quoting_options* @quote_quoting_options), !dbg !2904
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quote_n(i32, i8*) #4 !dbg !2940 {
  %3 = load i32, i32* @x.47
  %4 = load i32, i32* @y.48
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %2, %originalBBalteredBB
  %11 = alloca i32, align 4
  %12 = alloca i8*, align 8
  store i32 %0, i32* %11, align 4
  call void @llvm.dbg.declare(metadata i32* %11, metadata !2943, metadata !DIExpression()), !dbg !2944
  store i8* %1, i8** %12, align 8
  call void @llvm.dbg.declare(metadata i8** %12, metadata !2945, metadata !DIExpression()), !dbg !2946
  %13 = load i32, i32* %11, align 4, !dbg !2947
  %14 = load i8*, i8** %12, align 8, !dbg !2948
  %15 = call i8* @quote_n_mem(i32 %13, i8* %14, i64 -1), !dbg !2949
  %16 = load i32, i32* @x.47
  %17 = load i32, i32* @y.48
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i8* %15, !dbg !2950

originalBBalteredBB:                              ; preds = %originalBB, %2
  %24 = alloca i32, align 4
  %25 = alloca i8*, align 8
  store i32 %0, i32* %24, align 4
  call void @llvm.dbg.declare(metadata i32* %24, metadata !2951, metadata !DIExpression()), !dbg !2944
  store i8* %1, i8** %25, align 8
  call void @llvm.dbg.declare(metadata i8** %25, metadata !2983, metadata !DIExpression()), !dbg !2946
  %26 = load i32, i32* %24, align 4, !dbg !2947
  %27 = load i8*, i8** %25, align 8, !dbg !2948
  %28 = call i8* @quote_n_mem(i32 %26, i8* %27, i64 -1), !dbg !2949
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quote(i8*) #4 !dbg !2984 {
  %2 = load i32, i32* @x.49
  %3 = load i32, i32* @y.50
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %1, %originalBBalteredBB
  %10 = alloca i8*, align 8
  store i8* %0, i8** %10, align 8
  call void @llvm.dbg.declare(metadata i8** %10, metadata !2987, metadata !DIExpression()), !dbg !2988
  %11 = load i8*, i8** %10, align 8, !dbg !2989
  %12 = call i8* @quote_n(i32 0, i8* %11), !dbg !2990
  %13 = load i32, i32* @x.49
  %14 = load i32, i32* @y.50
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i8* %12, !dbg !2991

originalBBalteredBB:                              ; preds = %originalBB, %1
  %21 = alloca i8*, align 8
  store i8* %0, i8** %21, align 8
  call void @llvm.dbg.declare(metadata i8** %21, metadata !2992, metadata !DIExpression()), !dbg !2988
  %22 = load i8*, i8** %21, align 8, !dbg !2989
  %23 = call i8* @quote_n(i32 0, i8* %22), !dbg !2990
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @getcon(i8**) #4 !dbg !3024 {
  %2 = alloca i8**, align 8
  store i8** %0, i8*** %2, align 8
  call void @llvm.dbg.declare(metadata i8*** %2, metadata !3030, metadata !DIExpression()), !dbg !3031
  %3 = call i32* @__errno_location() #15, !dbg !3032
  store i32 95, i32* %3, align 4, !dbg !3033
  ret i32 -1, !dbg !3034
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @parse_user_spec(i8*, i32*, i32*, i8**, i8**) #4 !dbg !3035 {
  %6 = alloca i8*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i32*, align 8
  %9 = alloca i8**, align 8
  %10 = alloca i8**, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i8*, align 8
  store i8* %0, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !3038, metadata !DIExpression()), !dbg !3039
  store i32* %1, i32** %7, align 8
  call void @llvm.dbg.declare(metadata i32** %7, metadata !3040, metadata !DIExpression()), !dbg !3041
  store i32* %2, i32** %8, align 8
  call void @llvm.dbg.declare(metadata i32** %8, metadata !3042, metadata !DIExpression()), !dbg !3043
  store i8** %3, i8*** %9, align 8
  call void @llvm.dbg.declare(metadata i8*** %9, metadata !3044, metadata !DIExpression()), !dbg !3045
  store i8** %4, i8*** %10, align 8
  call void @llvm.dbg.declare(metadata i8*** %10, metadata !3046, metadata !DIExpression()), !dbg !3047
  call void @llvm.dbg.declare(metadata i8** %11, metadata !3048, metadata !DIExpression()), !dbg !3049
  %14 = load i32*, i32** %8, align 8, !dbg !3050
  %15 = icmp ne i32* %14, null, !dbg !3050
  br i1 %15, label %16, label %19, !dbg !3050

16:                                               ; preds = %5
  %17 = load i8*, i8** %6, align 8, !dbg !3051
  %18 = call i8* @strchr(i8* %17, i32 58) #13, !dbg !3052
  br label %20, !dbg !3050

19:                                               ; preds = %5
  br label %20, !dbg !3050

20:                                               ; preds = %19, %16
  %21 = phi i8* [ %18, %16 ], [ null, %19 ], !dbg !3050
  store i8* %21, i8** %11, align 8, !dbg !3049
  call void @llvm.dbg.declare(metadata i8** %12, metadata !3053, metadata !DIExpression()), !dbg !3054
  %22 = load i8*, i8** %6, align 8, !dbg !3055
  %23 = load i8*, i8** %11, align 8, !dbg !3056
  %24 = load i32*, i32** %7, align 8, !dbg !3057
  %25 = load i32*, i32** %8, align 8, !dbg !3058
  %26 = load i8**, i8*** %9, align 8, !dbg !3059
  %27 = load i8**, i8*** %10, align 8, !dbg !3060
  %28 = call i8* @parse_with_separator(i8* %22, i8* %23, i32* %24, i32* %25, i8** %26, i8** %27), !dbg !3061
  store i8* %28, i8** %12, align 8, !dbg !3054
  %29 = load i32*, i32** %8, align 8, !dbg !3062
  %30 = icmp ne i32* %29, null, !dbg !3062
  br i1 %30, label %31, label %53, !dbg !3064

31:                                               ; preds = %20
  %32 = load i8*, i8** %11, align 8, !dbg !3065
  %33 = icmp ne i8* %32, null, !dbg !3065
  br i1 %33, label %53, label %34, !dbg !3066

34:                                               ; preds = %31
  %35 = load i8*, i8** %12, align 8, !dbg !3067
  %36 = icmp ne i8* %35, null, !dbg !3067
  br i1 %36, label %37, label %53, !dbg !3068

37:                                               ; preds = %34
  call void @llvm.dbg.declare(metadata i8** %13, metadata !3069, metadata !DIExpression()), !dbg !3071
  %38 = load i8*, i8** %6, align 8, !dbg !3072
  %39 = call i8* @strchr(i8* %38, i32 46) #13, !dbg !3073
  store i8* %39, i8** %13, align 8, !dbg !3071
  %40 = load i8*, i8** %13, align 8, !dbg !3074
  %41 = icmp ne i8* %40, null, !dbg !3074
  br i1 %41, label %42, label %52, !dbg !3076

42:                                               ; preds = %37
  %43 = load i8*, i8** %6, align 8, !dbg !3077
  %44 = load i8*, i8** %13, align 8, !dbg !3078
  %45 = load i32*, i32** %7, align 8, !dbg !3079
  %46 = load i32*, i32** %8, align 8, !dbg !3080
  %47 = load i8**, i8*** %9, align 8, !dbg !3081
  %48 = load i8**, i8*** %10, align 8, !dbg !3082
  %49 = call i8* @parse_with_separator(i8* %43, i8* %44, i32* %45, i32* %46, i8** %47, i8** %48), !dbg !3083
  %50 = icmp ne i8* %49, null, !dbg !3083
  br i1 %50, label %52, label %51, !dbg !3084

51:                                               ; preds = %42
  store i8* null, i8** %12, align 8, !dbg !3085
  br label %52, !dbg !3086

52:                                               ; preds = %51, %42, %37
  br label %53, !dbg !3087

53:                                               ; preds = %52, %34, %31, %20
  %54 = load i32, i32* @x.53
  %55 = load i32, i32* @y.54
  %56 = sub i32 %54, 1
  %57 = mul i32 %54, %56
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %55, 10
  %61 = or i1 %59, %60
  br i1 %61, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %53, %originalBBalteredBB
  %62 = load i8*, i8** %12, align 8, !dbg !3088
  %63 = load i32, i32* @x.53
  %64 = load i32, i32* @y.54
  %65 = sub i32 %63, 1
  %66 = mul i32 %63, %65
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %64, 10
  %70 = or i1 %68, %69
  br i1 %70, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i8* %62, !dbg !3089

originalBBalteredBB:                              ; preds = %originalBB, %53
  %71 = load i8*, i8** %12, align 8, !dbg !3088
  br label %originalBB
}

; Function Attrs: nounwind readonly
declare dso_local i8* @strchr(i8*, i32) #7

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @parse_with_separator(i8*, i8*, i32*, i32*, i8**, i8**) #4 !dbg !178 {
  %7 = load i32, i32* @x.55
  %8 = load i32, i32* @y.56
  %9 = sub i32 %7, 1
  %10 = mul i32 %7, %9
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %8, 10
  %14 = or i1 %12, %13
  br i1 %14, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %6, %originalBBalteredBB
  %15 = alloca i8*, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i32*, align 8
  %18 = alloca i32*, align 8
  %19 = alloca i8**, align 8
  %20 = alloca i8**, align 8
  %21 = alloca i8*, align 8
  %22 = alloca %struct.passwd*, align 8
  %23 = alloca %struct.group*, align 8
  %24 = alloca i8*, align 8
  %25 = alloca i8*, align 8
  %26 = alloca i8*, align 8
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i64, align 8
  %30 = alloca i8, align 1
  %31 = alloca i64, align 8
  %32 = alloca [21 x i8], align 16
  %33 = alloca i64, align 8
  store i8* %0, i8** %15, align 8
  call void @llvm.dbg.declare(metadata i8** %15, metadata !3090, metadata !DIExpression()), !dbg !3091
  store i8* %1, i8** %16, align 8
  call void @llvm.dbg.declare(metadata i8** %16, metadata !3092, metadata !DIExpression()), !dbg !3093
  store i32* %2, i32** %17, align 8
  call void @llvm.dbg.declare(metadata i32** %17, metadata !3094, metadata !DIExpression()), !dbg !3095
  store i32* %3, i32** %18, align 8
  call void @llvm.dbg.declare(metadata i32** %18, metadata !3096, metadata !DIExpression()), !dbg !3097
  store i8** %4, i8*** %19, align 8
  call void @llvm.dbg.declare(metadata i8*** %19, metadata !3098, metadata !DIExpression()), !dbg !3099
  store i8** %5, i8*** %20, align 8
  call void @llvm.dbg.declare(metadata i8*** %20, metadata !3100, metadata !DIExpression()), !dbg !3101
  call void @llvm.dbg.declare(metadata i8** %21, metadata !3102, metadata !DIExpression()), !dbg !3103
  call void @llvm.dbg.declare(metadata %struct.passwd** %22, metadata !3104, metadata !DIExpression()), !dbg !3115
  call void @llvm.dbg.declare(metadata %struct.group** %23, metadata !3116, metadata !DIExpression()), !dbg !3124
  call void @llvm.dbg.declare(metadata i8** %24, metadata !3125, metadata !DIExpression()), !dbg !3126
  call void @llvm.dbg.declare(metadata i8** %25, metadata !3127, metadata !DIExpression()), !dbg !3128
  call void @llvm.dbg.declare(metadata i8** %26, metadata !3129, metadata !DIExpression()), !dbg !3130
  store i8* null, i8** %26, align 8, !dbg !3130
  call void @llvm.dbg.declare(metadata i32* %27, metadata !3131, metadata !DIExpression()), !dbg !3132
  %34 = load i32*, i32** %17, align 8, !dbg !3133
  %35 = load i32, i32* %34, align 4, !dbg !3134
  store i32 %35, i32* %27, align 4, !dbg !3132
  call void @llvm.dbg.declare(metadata i32* %28, metadata !3135, metadata !DIExpression()), !dbg !3136
  %36 = load i32*, i32** %18, align 8, !dbg !3137
  %37 = icmp ne i32* %36, null, !dbg !3137
  %38 = load i32, i32* @x.55
  %39 = load i32, i32* @y.56
  %40 = sub i32 %38, 1
  %41 = mul i32 %38, %40
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %43, %44
  br i1 %45, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %37, label %46, label %49, !dbg !3137

46:                                               ; preds = %originalBBpart2
  %47 = load i32*, i32** %18, align 8, !dbg !3138
  %48 = load i32, i32* %47, align 4, !dbg !3139
  br label %50, !dbg !3137

49:                                               ; preds = %originalBBpart2
  br label %50, !dbg !3137

50:                                               ; preds = %49, %46
  %51 = phi i32 [ %48, %46 ], [ -1, %49 ], !dbg !3137
  %52 = load i32, i32* @x.55
  %53 = load i32, i32* @y.56
  %54 = sub i32 %52, 1
  %55 = mul i32 %52, %54
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %53, 10
  %59 = or i1 %57, %58
  br i1 %59, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %50, %originalBB1alteredBB
  store i32 %51, i32* %28, align 4, !dbg !3136
  store i8* null, i8** %21, align 8, !dbg !3140
  %60 = load i8**, i8*** %19, align 8, !dbg !3141
  %61 = icmp ne i8** %60, null, !dbg !3141
  %62 = load i32, i32* @x.55
  %63 = load i32, i32* @y.56
  %64 = sub i32 %62, 1
  %65 = mul i32 %62, %64
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %63, 10
  %69 = or i1 %67, %68
  br i1 %69, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %61, label %70, label %72, !dbg !3143

70:                                               ; preds = %originalBBpart24
  %71 = load i8**, i8*** %19, align 8, !dbg !3144
  store i8* null, i8** %71, align 8, !dbg !3145
  br label %72, !dbg !3146

72:                                               ; preds = %70, %originalBBpart24
  %73 = load i8**, i8*** %20, align 8, !dbg !3147
  %74 = icmp ne i8** %73, null, !dbg !3147
  br i1 %74, label %75, label %93, !dbg !3149

75:                                               ; preds = %72
  %76 = load i32, i32* @x.55
  %77 = load i32, i32* @y.56
  %78 = sub i32 %76, 1
  %79 = mul i32 %76, %78
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %77, 10
  %83 = or i1 %81, %82
  br i1 %83, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %75, %originalBB6alteredBB
  %84 = load i8**, i8*** %20, align 8, !dbg !3150
  store i8* null, i8** %84, align 8, !dbg !3151
  %85 = load i32, i32* @x.55
  %86 = load i32, i32* @y.56
  %87 = sub i32 %85, 1
  %88 = mul i32 %85, %87
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %86, 10
  %92 = or i1 %90, %91
  br i1 %92, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %93, !dbg !3152

93:                                               ; preds = %originalBBpart28, %72
  store i8* null, i8** %24, align 8, !dbg !3153
  %94 = load i8*, i8** %16, align 8, !dbg !3154
  %95 = icmp eq i8* %94, null, !dbg !3156
  br i1 %95, label %96, label %120, !dbg !3157

96:                                               ; preds = %93
  %97 = load i8*, i8** %15, align 8, !dbg !3158
  %98 = load i8, i8* %97, align 1, !dbg !3161
  %99 = icmp ne i8 %98, 0, !dbg !3161
  br i1 %99, label %100, label %103, !dbg !3162

100:                                              ; preds = %96
  %101 = load i8*, i8** %15, align 8, !dbg !3163
  %102 = call noalias i8* @xstrdup(i8* %101), !dbg !3164
  store i8* %102, i8** %24, align 8, !dbg !3165
  br label %103, !dbg !3166

103:                                              ; preds = %100, %96
  %104 = load i32, i32* @x.55
  %105 = load i32, i32* @y.56
  %106 = sub i32 %104, 1
  %107 = mul i32 %104, %106
  %108 = urem i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = icmp slt i32 %105, 10
  %111 = or i1 %109, %110
  br i1 %111, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %103, %originalBB10alteredBB
  %112 = load i32, i32* @x.55
  %113 = load i32, i32* @y.56
  %114 = sub i32 %112, 1
  %115 = mul i32 %112, %114
  %116 = urem i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = icmp slt i32 %113, 10
  %119 = or i1 %117, %118
  br i1 %119, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %169, !dbg !3167

120:                                              ; preds = %93
  call void @llvm.dbg.declare(metadata i64* %29, metadata !3168, metadata !DIExpression()), !dbg !3170
  %121 = load i32, i32* @x.55
  %122 = load i32, i32* @y.56
  %123 = sub i32 %121, 1
  %124 = mul i32 %121, %123
  %125 = urem i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %122, 10
  %128 = or i1 %126, %127
  br i1 %128, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %120, %originalBB14alteredBB
  %129 = load i8*, i8** %16, align 8, !dbg !3171
  %130 = load i8*, i8** %15, align 8, !dbg !3172
  %131 = ptrtoint i8* %129 to i64, !dbg !3173
  %132 = ptrtoint i8* %130 to i64, !dbg !3173
  %133 = sub i64 %131, %132, !dbg !3173
  store i64 %133, i64* %29, align 8, !dbg !3170
  %134 = load i64, i64* %29, align 8, !dbg !3174
  %135 = icmp ne i64 %134, 0, !dbg !3176
  %136 = load i32, i32* @x.55
  %137 = load i32, i32* @y.56
  %138 = sub i32 %136, 1
  %139 = mul i32 %136, %138
  %140 = urem i32 %139, 2
  %141 = icmp eq i32 %140, 0
  %142 = icmp slt i32 %137, 10
  %143 = or i1 %141, %142
  br i1 %143, label %originalBBpart227, label %originalBB14alteredBB

originalBBpart227:                                ; preds = %originalBB14
  br i1 %135, label %144, label %152, !dbg !3177

144:                                              ; preds = %originalBBpart227
  %145 = load i8*, i8** %15, align 8, !dbg !3178
  %146 = load i64, i64* %29, align 8, !dbg !3180
  %147 = add i64 %146, 1, !dbg !3181
  %148 = call i8* @xmemdup(i8* %145, i64 %147), !dbg !3182
  store i8* %148, i8** %24, align 8, !dbg !3183
  %149 = load i8*, i8** %24, align 8, !dbg !3184
  %150 = load i64, i64* %29, align 8, !dbg !3185
  %151 = getelementptr inbounds i8, i8* %149, i64 %150, !dbg !3184
  store i8 0, i8* %151, align 1, !dbg !3186
  br label %152, !dbg !3187

152:                                              ; preds = %144, %originalBBpart227
  %153 = load i32, i32* @x.55
  %154 = load i32, i32* @y.56
  %155 = sub i32 %153, 1
  %156 = mul i32 %153, %155
  %157 = urem i32 %156, 2
  %158 = icmp eq i32 %157, 0
  %159 = icmp slt i32 %154, 10
  %160 = or i1 %158, %159
  br i1 %160, label %originalBB29, label %originalBB29alteredBB

originalBB29:                                     ; preds = %152, %originalBB29alteredBB
  %161 = load i32, i32* @x.55
  %162 = load i32, i32* @y.56
  %163 = sub i32 %161, 1
  %164 = mul i32 %161, %163
  %165 = urem i32 %164, 2
  %166 = icmp eq i32 %165, 0
  %167 = icmp slt i32 %162, 10
  %168 = or i1 %166, %167
  br i1 %168, label %originalBBpart231, label %originalBB29alteredBB

originalBBpart231:                                ; preds = %originalBB29
  br label %169

169:                                              ; preds = %originalBBpart231, %originalBBpart212
  %170 = load i8*, i8** %16, align 8, !dbg !3188
  %171 = icmp eq i8* %170, null, !dbg !3189
  br i1 %171, label %178, label %172, !dbg !3190

172:                                              ; preds = %169
  %173 = load i8*, i8** %16, align 8, !dbg !3191
  %174 = getelementptr inbounds i8, i8* %173, i64 1, !dbg !3192
  %175 = load i8, i8* %174, align 1, !dbg !3193
  %176 = sext i8 %175 to i32, !dbg !3193
  %177 = icmp eq i32 %176, 0, !dbg !3194
  br i1 %177, label %178, label %179, !dbg !3188

178:                                              ; preds = %172, %169
  br label %182, !dbg !3188

179:                                              ; preds = %172
  %180 = load i8*, i8** %16, align 8, !dbg !3195
  %181 = getelementptr inbounds i8, i8* %180, i64 1, !dbg !3196
  br label %182, !dbg !3188

182:                                              ; preds = %179, %178
  %183 = phi i8* [ null, %178 ], [ %181, %179 ], !dbg !3188
  store i8* %183, i8** %25, align 8, !dbg !3197
  %184 = load i8*, i8** %24, align 8, !dbg !3198
  %185 = icmp ne i8* %184, null, !dbg !3200
  br i1 %185, label %186, label %467, !dbg !3201

186:                                              ; preds = %182
  %187 = load i32, i32* @x.55
  %188 = load i32, i32* @y.56
  %189 = sub i32 %187, 1
  %190 = mul i32 %187, %189
  %191 = urem i32 %190, 2
  %192 = icmp eq i32 %191, 0
  %193 = icmp slt i32 %188, 10
  %194 = or i1 %192, %193
  br i1 %194, label %originalBB33, label %originalBB33alteredBB

originalBB33:                                     ; preds = %186, %originalBB33alteredBB
  %195 = load i8*, i8** %24, align 8, !dbg !3202
  %196 = load i8, i8* %195, align 1, !dbg !3204
  %197 = sext i8 %196 to i32, !dbg !3204
  %198 = load i32, i32* @x.55
  %199 = load i32, i32* @y.56
  %200 = sub i32 %198, 1
  %201 = mul i32 %198, %200
  %202 = urem i32 %201, 2
  %203 = icmp eq i32 %202, 0
  %204 = icmp slt i32 %199, 10
  %205 = or i1 %203, %204
  br i1 %205, label %originalBBpart235, label %originalBB33alteredBB

originalBBpart235:                                ; preds = %originalBB33
  br label %206, !dbg !3205

206:                                              ; preds = %originalBBpart235
  %collatzVar = alloca i32
  br label %207

207:                                              ; preds = %206
  %208 = load i32, i32* @inVal0
  %209 = icmp sgt i32 %208, 1
  br i1 %209, label %211, label %210

210:                                              ; preds = %207
  store i32 82, i32* %collatzVar
  br label %211

211:                                              ; preds = %210, %207
  %212 = load i8**, i8*** @inVal1
  %213 = getelementptr inbounds i8*, i8** %212, i64 1
  %214 = load i8*, i8** %213
  %controle = call i32 @controle(i8* %214, i32 43)
  store i32 %controle, i32* %collatzVar
  br label %215

215:                                              ; preds = %originalBBpart2104, %originalBBpart289, %211
  %216 = load i32, i32* %collatzVar
  %217 = icmp sgt i32 %216, 1
  br i1 %217, label %218, label %302

218:                                              ; preds = %215
  %219 = load i32, i32* %collatzVar
  %220 = srem i32 %219, 2
  %221 = icmp eq i32 %220, 0
  br i1 %221, label %222, label %241

222:                                              ; preds = %218
  %223 = load i32, i32* @x.55
  %224 = load i32, i32* @y.56
  %225 = sub i32 %223, 1
  %226 = mul i32 %223, %225
  %227 = urem i32 %226, 2
  %228 = icmp eq i32 %227, 0
  %229 = icmp slt i32 %224, 10
  %230 = or i1 %228, %229
  br i1 %230, label %originalBB37, label %originalBB37alteredBB

originalBB37:                                     ; preds = %222, %originalBB37alteredBB
  %231 = load i32, i32* %collatzVar
  %232 = sdiv i32 %231, 2
  store i32 %232, i32* %collatzVar
  %233 = load i32, i32* @x.55
  %234 = load i32, i32* @y.56
  %235 = sub i32 %233, 1
  %236 = mul i32 %233, %235
  %237 = urem i32 %236, 2
  %238 = icmp eq i32 %237, 0
  %239 = icmp slt i32 %234, 10
  %240 = or i1 %238, %239
  br i1 %240, label %originalBBpart248, label %originalBB37alteredBB

originalBBpart248:                                ; preds = %originalBB37
  br label %261

241:                                              ; preds = %218
  %242 = load i32, i32* @x.55
  %243 = load i32, i32* @y.56
  %244 = sub i32 %242, 1
  %245 = mul i32 %242, %244
  %246 = urem i32 %245, 2
  %247 = icmp eq i32 %246, 0
  %248 = icmp slt i32 %243, 10
  %249 = or i1 %247, %248
  br i1 %249, label %originalBB50, label %originalBB50alteredBB

originalBB50:                                     ; preds = %241, %originalBB50alteredBB
  %250 = load i32, i32* %collatzVar
  %251 = mul i32 %250, 3
  %252 = add i32 %251, 1
  store i32 %252, i32* %collatzVar
  %253 = load i32, i32* @x.55
  %254 = load i32, i32* @y.56
  %255 = sub i32 %253, 1
  %256 = mul i32 %253, %255
  %257 = urem i32 %256, 2
  %258 = icmp eq i32 %257, 0
  %259 = icmp slt i32 %254, 10
  %260 = or i1 %258, %259
  br i1 %260, label %originalBBpart270, label %originalBB50alteredBB

originalBBpart270:                                ; preds = %originalBB50
  br label %261

261:                                              ; preds = %originalBBpart270, %originalBBpart248
  %262 = load i32, i32* @x.55
  %263 = load i32, i32* @y.56
  %264 = sub i32 %262, 1
  %265 = mul i32 %262, %264
  %266 = urem i32 %265, 2
  %267 = icmp eq i32 %266, 0
  %268 = icmp slt i32 %263, 10
  %269 = or i1 %267, %268
  br i1 %269, label %originalBB72, label %originalBB72alteredBB

originalBB72:                                     ; preds = %261, %originalBB72alteredBB
  %270 = load i32, i32* %collatzVar
  %271 = sub i32 %197, %270
  %272 = icmp sgt i32 %271, 41
  %273 = load i32, i32* @x.55
  %274 = load i32, i32* @y.56
  %275 = sub i32 %273, 1
  %276 = mul i32 %273, %275
  %277 = urem i32 %276, 2
  %278 = icmp eq i32 %277, 0
  %279 = icmp slt i32 %274, 10
  %280 = or i1 %278, %279
  br i1 %280, label %originalBBpart289, label %originalBB72alteredBB

originalBBpart289:                                ; preds = %originalBB72
  br i1 %272, label %281, label %215

281:                                              ; preds = %originalBBpart289
  %282 = load i32, i32* @x.55
  %283 = load i32, i32* @y.56
  %284 = sub i32 %282, 1
  %285 = mul i32 %282, %284
  %286 = urem i32 %285, 2
  %287 = icmp eq i32 %286, 0
  %288 = icmp slt i32 %283, 10
  %289 = or i1 %287, %288
  br i1 %289, label %originalBB91, label %originalBB91alteredBB

originalBB91:                                     ; preds = %281, %originalBB91alteredBB
  %290 = load i32, i32* %collatzVar
  %291 = add i32 %197, %290
  %292 = icmp slt i32 %291, 45
  %293 = load i32, i32* @x.55
  %294 = load i32, i32* @y.56
  %295 = sub i32 %293, 1
  %296 = mul i32 %293, %295
  %297 = urem i32 %296, 2
  %298 = icmp eq i32 %297, 0
  %299 = icmp slt i32 %294, 10
  %300 = or i1 %298, %299
  br i1 %300, label %originalBBpart2104, label %originalBB91alteredBB

originalBBpart2104:                               ; preds = %originalBB91
  br i1 %292, label %301, label %215

301:                                              ; preds = %originalBBpart2104
  br label %305, !dbg !3204

302:                                              ; preds = %215
  %303 = load i8*, i8** %24, align 8, !dbg !3206
  %304 = call %struct.passwd* @getpwnam(i8* %303), !dbg !3207
  br label %305, !dbg !3204

305:                                              ; preds = %302, %301
  %306 = phi %struct.passwd* [ null, %301 ], [ %304, %302 ], !dbg !3204
  store %struct.passwd* %306, %struct.passwd** %22, align 8, !dbg !3208
  %307 = load %struct.passwd*, %struct.passwd** %22, align 8, !dbg !3209
  %308 = icmp eq %struct.passwd* %307, null, !dbg !3211
  br i1 %308, label %309, label %388, !dbg !3212

309:                                              ; preds = %305
  call void @llvm.dbg.declare(metadata i8* %30, metadata !3213, metadata !DIExpression()), !dbg !3215
  %310 = load i32, i32* @x.55
  %311 = load i32, i32* @y.56
  %312 = sub i32 %310, 1
  %313 = mul i32 %310, %312
  %314 = urem i32 %313, 2
  %315 = icmp eq i32 %314, 0
  %316 = icmp slt i32 %311, 10
  %317 = or i1 %315, %316
  br i1 %317, label %originalBB106, label %originalBB106alteredBB

originalBB106:                                    ; preds = %309, %originalBB106alteredBB
  %318 = load i8*, i8** %16, align 8, !dbg !3216
  %319 = icmp ne i8* %318, null, !dbg !3217
  %320 = load i32, i32* @x.55
  %321 = load i32, i32* @y.56
  %322 = sub i32 %320, 1
  %323 = mul i32 %320, %322
  %324 = urem i32 %323, 2
  %325 = icmp eq i32 %324, 0
  %326 = icmp slt i32 %321, 10
  %327 = or i1 %325, %326
  br i1 %327, label %originalBBpart2108, label %originalBB106alteredBB

originalBBpart2108:                               ; preds = %originalBB106
  br i1 %319, label %328, label %331, !dbg !3218

328:                                              ; preds = %originalBBpart2108
  %329 = load i8*, i8** %25, align 8, !dbg !3219
  %330 = icmp eq i8* %329, null, !dbg !3220
  br label %331

331:                                              ; preds = %328, %originalBBpart2108
  %332 = phi i1 [ false, %originalBBpart2108 ], [ %330, %328 ], !dbg !3221
  %333 = zext i1 %332 to i8, !dbg !3215
  store i8 %333, i8* %30, align 1, !dbg !3215
  %334 = load i8, i8* %30, align 1, !dbg !3222
  %335 = trunc i8 %334 to i1, !dbg !3222
  br i1 %335, label %336, label %338, !dbg !3224

336:                                              ; preds = %331
  %337 = load i8*, i8** @parse_with_separator.E_bad_spec, align 8, !dbg !3225
  store i8* %337, i8** %21, align 8, !dbg !3227
  br label %387, !dbg !3228

338:                                              ; preds = %331
  call void @llvm.dbg.declare(metadata i64* %31, metadata !3229, metadata !DIExpression()), !dbg !3231
  %339 = load i32, i32* @x.55
  %340 = load i32, i32* @y.56
  %341 = sub i32 %339, 1
  %342 = mul i32 %339, %341
  %343 = urem i32 %342, 2
  %344 = icmp eq i32 %343, 0
  %345 = icmp slt i32 %340, 10
  %346 = or i1 %344, %345
  br i1 %346, label %originalBB110, label %originalBB110alteredBB

originalBB110:                                    ; preds = %338, %originalBB110alteredBB
  %347 = load i8*, i8** %24, align 8, !dbg !3232
  %348 = call i32 @xstrtoul(i8* %347, i8** null, i32 10, i64* %31, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3.102, i64 0, i64 0)), !dbg !3234
  %349 = icmp eq i32 %348, 0, !dbg !3235
  %350 = load i32, i32* @x.55
  %351 = load i32, i32* @y.56
  %352 = sub i32 %350, 1
  %353 = mul i32 %350, %352
  %354 = urem i32 %353, 2
  %355 = icmp eq i32 %354, 0
  %356 = icmp slt i32 %351, 10
  %357 = or i1 %355, %356
  br i1 %357, label %originalBBpart2112, label %originalBB110alteredBB

originalBBpart2112:                               ; preds = %originalBB110
  br i1 %349, label %358, label %384, !dbg !3236

358:                                              ; preds = %originalBBpart2112
  %359 = load i32, i32* @x.55
  %360 = load i32, i32* @y.56
  %361 = sub i32 %359, 1
  %362 = mul i32 %359, %361
  %363 = urem i32 %362, 2
  %364 = icmp eq i32 %363, 0
  %365 = icmp slt i32 %360, 10
  %366 = or i1 %364, %365
  br i1 %366, label %originalBB114, label %originalBB114alteredBB

originalBB114:                                    ; preds = %358, %originalBB114alteredBB
  %367 = load i64, i64* %31, align 8, !dbg !3237
  %368 = icmp ule i64 %367, 4294967295, !dbg !3238
  %369 = load i32, i32* @x.55
  %370 = load i32, i32* @y.56
  %371 = sub i32 %369, 1
  %372 = mul i32 %369, %371
  %373 = urem i32 %372, 2
  %374 = icmp eq i32 %373, 0
  %375 = icmp slt i32 %370, 10
  %376 = or i1 %374, %375
  br i1 %376, label %originalBBpart2116, label %originalBB114alteredBB

originalBBpart2116:                               ; preds = %originalBB114
  br i1 %368, label %377, label %384, !dbg !3239

377:                                              ; preds = %originalBBpart2116
  %378 = load i64, i64* %31, align 8, !dbg !3240
  %379 = trunc i64 %378 to i32, !dbg !3241
  %380 = icmp ne i32 %379, -1, !dbg !3242
  br i1 %380, label %381, label %384, !dbg !3243

381:                                              ; preds = %377
  %382 = load i64, i64* %31, align 8, !dbg !3244
  %383 = trunc i64 %382 to i32, !dbg !3244
  store i32 %383, i32* %27, align 4, !dbg !3245
  br label %386, !dbg !3246

384:                                              ; preds = %377, %originalBBpart2116, %originalBBpart2112
  %385 = load i8*, i8** @parse_with_separator.E_invalid_user, align 8, !dbg !3247
  store i8* %385, i8** %21, align 8, !dbg !3248
  br label %386

386:                                              ; preds = %384, %381
  br label %387

387:                                              ; preds = %386, %336
  br label %466, !dbg !3249

388:                                              ; preds = %305
  %389 = load %struct.passwd*, %struct.passwd** %22, align 8, !dbg !3250
  %390 = getelementptr inbounds %struct.passwd, %struct.passwd* %389, i32 0, i32 2, !dbg !3252
  %391 = load i32, i32* %390, align 8, !dbg !3252
  store i32 %391, i32* %27, align 4, !dbg !3253
  %392 = load i8*, i8** %25, align 8, !dbg !3254
  %393 = icmp eq i8* %392, null, !dbg !3256
  br i1 %393, label %394, label %465, !dbg !3257

394:                                              ; preds = %388
  %395 = load i8*, i8** %16, align 8, !dbg !3258
  %396 = icmp ne i8* %395, null, !dbg !3259
  br i1 %396, label %397, label %465, !dbg !3260

397:                                              ; preds = %394
  call void @llvm.dbg.declare(metadata [21 x i8]* %32, metadata !3261, metadata !DIExpression()), !dbg !3263
  %398 = load i32, i32* @x.55
  %399 = load i32, i32* @y.56
  %400 = sub i32 %398, 1
  %401 = mul i32 %398, %400
  %402 = urem i32 %401, 2
  %403 = icmp eq i32 %402, 0
  %404 = icmp slt i32 %399, 10
  %405 = or i1 %403, %404
  br i1 %405, label %originalBB118, label %originalBB118alteredBB

originalBB118:                                    ; preds = %397, %originalBB118alteredBB
  %406 = load %struct.passwd*, %struct.passwd** %22, align 8, !dbg !3264
  %407 = getelementptr inbounds %struct.passwd, %struct.passwd* %406, i32 0, i32 3, !dbg !3265
  %408 = load i32, i32* %407, align 4, !dbg !3265
  store i32 %408, i32* %28, align 4, !dbg !3266
  %409 = load i32, i32* %28, align 4, !dbg !3267
  %410 = call %struct.group* @getgrgid(i32 %409), !dbg !3268
  store %struct.group* %410, %struct.group** %23, align 8, !dbg !3269
  %411 = load %struct.group*, %struct.group** %23, align 8, !dbg !3270
  %412 = icmp ne %struct.group* %411, null, !dbg !3270
  %413 = load i32, i32* @x.55
  %414 = load i32, i32* @y.56
  %415 = sub i32 %413, 1
  %416 = mul i32 %413, %415
  %417 = urem i32 %416, 2
  %418 = icmp eq i32 %417, 0
  %419 = icmp slt i32 %414, 10
  %420 = or i1 %418, %419
  br i1 %420, label %originalBBpart2120, label %originalBB118alteredBB

originalBBpart2120:                               ; preds = %originalBB118
  br i1 %412, label %421, label %425, !dbg !3270

421:                                              ; preds = %originalBBpart2120
  %422 = load %struct.group*, %struct.group** %23, align 8, !dbg !3271
  %423 = getelementptr inbounds %struct.group, %struct.group* %422, i32 0, i32 0, !dbg !3272
  %424 = load i8*, i8** %423, align 8, !dbg !3272
  br label %446, !dbg !3270

425:                                              ; preds = %originalBBpart2120
  %426 = load i32, i32* @x.55
  %427 = load i32, i32* @y.56
  %428 = sub i32 %426, 1
  %429 = mul i32 %426, %428
  %430 = urem i32 %429, 2
  %431 = icmp eq i32 %430, 0
  %432 = icmp slt i32 %427, 10
  %433 = or i1 %431, %432
  br i1 %433, label %originalBB122, label %originalBB122alteredBB

originalBB122:                                    ; preds = %425, %originalBB122alteredBB
  %434 = load i32, i32* %28, align 4, !dbg !3273
  %435 = zext i32 %434 to i64, !dbg !3273
  %436 = getelementptr inbounds [21 x i8], [21 x i8]* %32, i64 0, i64 0, !dbg !3274
  %437 = call i8* @umaxtostr(i64 %435, i8* %436), !dbg !3275
  %438 = load i32, i32* @x.55
  %439 = load i32, i32* @y.56
  %440 = sub i32 %438, 1
  %441 = mul i32 %438, %440
  %442 = urem i32 %441, 2
  %443 = icmp eq i32 %442, 0
  %444 = icmp slt i32 %439, 10
  %445 = or i1 %443, %444
  br i1 %445, label %originalBBpart2124, label %originalBB122alteredBB

originalBBpart2124:                               ; preds = %originalBB122
  br label %446, !dbg !3270

446:                                              ; preds = %originalBBpart2124, %421
  %447 = phi i8* [ %424, %421 ], [ %437, %originalBBpart2124 ], !dbg !3270
  %448 = load i32, i32* @x.55
  %449 = load i32, i32* @y.56
  %450 = sub i32 %448, 1
  %451 = mul i32 %448, %450
  %452 = urem i32 %451, 2
  %453 = icmp eq i32 %452, 0
  %454 = icmp slt i32 %449, 10
  %455 = or i1 %453, %454
  br i1 %455, label %originalBB126, label %originalBB126alteredBB

originalBB126:                                    ; preds = %446, %originalBB126alteredBB
  %456 = call noalias i8* @xstrdup(i8* %447), !dbg !3276
  store i8* %456, i8** %26, align 8, !dbg !3277
  call void @endgrent(), !dbg !3278
  %457 = load i32, i32* @x.55
  %458 = load i32, i32* @y.56
  %459 = sub i32 %457, 1
  %460 = mul i32 %457, %459
  %461 = urem i32 %460, 2
  %462 = icmp eq i32 %461, 0
  %463 = icmp slt i32 %458, 10
  %464 = or i1 %462, %463
  br i1 %464, label %originalBBpart2128, label %originalBB126alteredBB

originalBBpart2128:                               ; preds = %originalBB126
  br label %465, !dbg !3279

465:                                              ; preds = %originalBBpart2128, %394, %388
  br label %466

466:                                              ; preds = %465, %387
  call void @endpwent(), !dbg !3280
  br label %467, !dbg !3281

467:                                              ; preds = %466, %182
  %468 = load i8*, i8** %25, align 8, !dbg !3282
  %469 = icmp ne i8* %468, null, !dbg !3284
  br i1 %469, label %470, label %590, !dbg !3285

470:                                              ; preds = %467
  %471 = load i32, i32* @x.55
  %472 = load i32, i32* @y.56
  %473 = sub i32 %471, 1
  %474 = mul i32 %471, %473
  %475 = urem i32 %474, 2
  %476 = icmp eq i32 %475, 0
  %477 = icmp slt i32 %472, 10
  %478 = or i1 %476, %477
  br i1 %478, label %originalBB130, label %originalBB130alteredBB

originalBB130:                                    ; preds = %470, %originalBB130alteredBB
  %479 = load i8*, i8** %21, align 8, !dbg !3286
  %480 = icmp eq i8* %479, null, !dbg !3287
  %481 = load i32, i32* @x.55
  %482 = load i32, i32* @y.56
  %483 = sub i32 %481, 1
  %484 = mul i32 %481, %483
  %485 = urem i32 %484, 2
  %486 = icmp eq i32 %485, 0
  %487 = icmp slt i32 %482, 10
  %488 = or i1 %486, %487
  br i1 %488, label %originalBBpart2132, label %originalBB130alteredBB

originalBBpart2132:                               ; preds = %originalBB130
  br i1 %480, label %489, label %590, !dbg !3288

489:                                              ; preds = %originalBBpart2132
  %490 = load i8*, i8** %25, align 8, !dbg !3289
  %491 = load i8, i8* %490, align 1, !dbg !3291
  %492 = sext i8 %491 to i32, !dbg !3291
  %493 = icmp eq i32 %492, 43, !dbg !3292
  br i1 %493, label %494, label %495, !dbg !3291

494:                                              ; preds = %489
  br label %498, !dbg !3291

495:                                              ; preds = %489
  %496 = load i8*, i8** %25, align 8, !dbg !3293
  %497 = call %struct.group* @getgrnam(i8* %496), !dbg !3294
  br label %498, !dbg !3291

498:                                              ; preds = %495, %494
  %499 = phi %struct.group* [ null, %494 ], [ %497, %495 ], !dbg !3291
  %500 = load i32, i32* @x.55
  %501 = load i32, i32* @y.56
  %502 = sub i32 %500, 1
  %503 = mul i32 %500, %502
  %504 = urem i32 %503, 2
  %505 = icmp eq i32 %504, 0
  %506 = icmp slt i32 %501, 10
  %507 = or i1 %505, %506
  br i1 %507, label %originalBB134, label %originalBB134alteredBB

originalBB134:                                    ; preds = %498, %originalBB134alteredBB
  store %struct.group* %499, %struct.group** %23, align 8, !dbg !3295
  %508 = load %struct.group*, %struct.group** %23, align 8, !dbg !3296
  %509 = icmp eq %struct.group* %508, null, !dbg !3298
  %510 = load i32, i32* @x.55
  %511 = load i32, i32* @y.56
  %512 = sub i32 %510, 1
  %513 = mul i32 %510, %512
  %514 = urem i32 %513, 2
  %515 = icmp eq i32 %514, 0
  %516 = icmp slt i32 %511, 10
  %517 = or i1 %515, %516
  br i1 %517, label %originalBBpart2136, label %originalBB134alteredBB

originalBBpart2136:                               ; preds = %originalBB134
  br i1 %509, label %518, label %567, !dbg !3299

518:                                              ; preds = %originalBBpart2136
  call void @llvm.dbg.declare(metadata i64* %33, metadata !3300, metadata !DIExpression()), !dbg !3302
  %519 = load i32, i32* @x.55
  %520 = load i32, i32* @y.56
  %521 = sub i32 %519, 1
  %522 = mul i32 %519, %521
  %523 = urem i32 %522, 2
  %524 = icmp eq i32 %523, 0
  %525 = icmp slt i32 %520, 10
  %526 = or i1 %524, %525
  br i1 %526, label %originalBB138, label %originalBB138alteredBB

originalBB138:                                    ; preds = %518, %originalBB138alteredBB
  %527 = load i8*, i8** %25, align 8, !dbg !3303
  %528 = call i32 @xstrtoul(i8* %527, i8** null, i32 10, i64* %33, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3.102, i64 0, i64 0)), !dbg !3305
  %529 = icmp eq i32 %528, 0, !dbg !3306
  %530 = load i32, i32* @x.55
  %531 = load i32, i32* @y.56
  %532 = sub i32 %530, 1
  %533 = mul i32 %530, %532
  %534 = urem i32 %533, 2
  %535 = icmp eq i32 %534, 0
  %536 = icmp slt i32 %531, 10
  %537 = or i1 %535, %536
  br i1 %537, label %originalBBpart2140, label %originalBB138alteredBB

originalBBpart2140:                               ; preds = %originalBB138
  br i1 %529, label %538, label %548, !dbg !3307

538:                                              ; preds = %originalBBpart2140
  %539 = load i64, i64* %33, align 8, !dbg !3308
  %540 = icmp ule i64 %539, 4294967295, !dbg !3309
  br i1 %540, label %541, label %548, !dbg !3310

541:                                              ; preds = %538
  %542 = load i64, i64* %33, align 8, !dbg !3311
  %543 = trunc i64 %542 to i32, !dbg !3312
  %544 = icmp ne i32 %543, -1, !dbg !3313
  br i1 %544, label %545, label %548, !dbg !3314

545:                                              ; preds = %541
  %546 = load i64, i64* %33, align 8, !dbg !3315
  %547 = trunc i64 %546 to i32, !dbg !3315
  store i32 %547, i32* %28, align 4, !dbg !3316
  br label %566, !dbg !3317

548:                                              ; preds = %541, %538, %originalBBpart2140
  %549 = load i32, i32* @x.55
  %550 = load i32, i32* @y.56
  %551 = sub i32 %549, 1
  %552 = mul i32 %549, %551
  %553 = urem i32 %552, 2
  %554 = icmp eq i32 %553, 0
  %555 = icmp slt i32 %550, 10
  %556 = or i1 %554, %555
  br i1 %556, label %originalBB142, label %originalBB142alteredBB

originalBB142:                                    ; preds = %548, %originalBB142alteredBB
  %557 = load i8*, i8** @parse_with_separator.E_invalid_group, align 8, !dbg !3318
  store i8* %557, i8** %21, align 8, !dbg !3319
  %558 = load i32, i32* @x.55
  %559 = load i32, i32* @y.56
  %560 = sub i32 %558, 1
  %561 = mul i32 %558, %560
  %562 = urem i32 %561, 2
  %563 = icmp eq i32 %562, 0
  %564 = icmp slt i32 %559, 10
  %565 = or i1 %563, %564
  br i1 %565, label %originalBBpart2144, label %originalBB142alteredBB

originalBBpart2144:                               ; preds = %originalBB142
  br label %566

566:                                              ; preds = %originalBBpart2144, %545
  br label %571, !dbg !3320

567:                                              ; preds = %originalBBpart2136
  %568 = load %struct.group*, %struct.group** %23, align 8, !dbg !3321
  %569 = getelementptr inbounds %struct.group, %struct.group* %568, i32 0, i32 2, !dbg !3322
  %570 = load i32, i32* %569, align 8, !dbg !3322
  store i32 %570, i32* %28, align 4, !dbg !3323
  br label %571

571:                                              ; preds = %567, %566
  %572 = load i32, i32* @x.55
  %573 = load i32, i32* @y.56
  %574 = sub i32 %572, 1
  %575 = mul i32 %572, %574
  %576 = urem i32 %575, 2
  %577 = icmp eq i32 %576, 0
  %578 = icmp slt i32 %573, 10
  %579 = or i1 %577, %578
  br i1 %579, label %originalBB146, label %originalBB146alteredBB

originalBB146:                                    ; preds = %571, %originalBB146alteredBB
  call void @endgrent(), !dbg !3324
  %580 = load i8*, i8** %25, align 8, !dbg !3325
  %581 = call noalias i8* @xstrdup(i8* %580), !dbg !3326
  store i8* %581, i8** %26, align 8, !dbg !3327
  %582 = load i32, i32* @x.55
  %583 = load i32, i32* @y.56
  %584 = sub i32 %582, 1
  %585 = mul i32 %582, %584
  %586 = urem i32 %585, 2
  %587 = icmp eq i32 %586, 0
  %588 = icmp slt i32 %583, 10
  %589 = or i1 %587, %588
  br i1 %589, label %originalBBpart2148, label %originalBB146alteredBB

originalBBpart2148:                               ; preds = %originalBB146
  br label %590, !dbg !3328

590:                                              ; preds = %originalBBpart2148, %originalBBpart2132, %467
  %591 = load i32, i32* @x.55
  %592 = load i32, i32* @y.56
  %593 = sub i32 %591, 1
  %594 = mul i32 %591, %593
  %595 = urem i32 %594, 2
  %596 = icmp eq i32 %595, 0
  %597 = icmp slt i32 %592, 10
  %598 = or i1 %596, %597
  br i1 %598, label %originalBB150, label %originalBB150alteredBB

originalBB150:                                    ; preds = %590, %originalBB150alteredBB
  %599 = load i8*, i8** %21, align 8, !dbg !3329
  %600 = icmp eq i8* %599, null, !dbg !3331
  %601 = load i32, i32* @x.55
  %602 = load i32, i32* @y.56
  %603 = sub i32 %601, 1
  %604 = mul i32 %601, %603
  %605 = urem i32 %604, 2
  %606 = icmp eq i32 %605, 0
  %607 = icmp slt i32 %602, 10
  %608 = or i1 %606, %607
  br i1 %608, label %originalBBpart2152, label %originalBB150alteredBB

originalBBpart2152:                               ; preds = %originalBB150
  br i1 %600, label %609, label %678, !dbg !3332

609:                                              ; preds = %originalBBpart2152
  %610 = load i32, i32* %27, align 4, !dbg !3333
  %611 = load i32*, i32** %17, align 8, !dbg !3335
  store i32 %610, i32* %611, align 4, !dbg !3336
  %612 = load i32*, i32** %18, align 8, !dbg !3337
  %613 = icmp ne i32* %612, null, !dbg !3337
  br i1 %613, label %614, label %617, !dbg !3339

614:                                              ; preds = %609
  %615 = load i32, i32* %28, align 4, !dbg !3340
  %616 = load i32*, i32** %18, align 8, !dbg !3341
  store i32 %615, i32* %616, align 4, !dbg !3342
  br label %617, !dbg !3343

617:                                              ; preds = %614, %609
  %618 = load i32, i32* @x.55
  %619 = load i32, i32* @y.56
  %620 = sub i32 %618, 1
  %621 = mul i32 %618, %620
  %622 = urem i32 %621, 2
  %623 = icmp eq i32 %622, 0
  %624 = icmp slt i32 %619, 10
  %625 = or i1 %623, %624
  br i1 %625, label %originalBB154, label %originalBB154alteredBB

originalBB154:                                    ; preds = %617, %originalBB154alteredBB
  %626 = load i8**, i8*** %19, align 8, !dbg !3344
  %627 = icmp ne i8** %626, null, !dbg !3344
  %628 = load i32, i32* @x.55
  %629 = load i32, i32* @y.56
  %630 = sub i32 %628, 1
  %631 = mul i32 %628, %630
  %632 = urem i32 %631, 2
  %633 = icmp eq i32 %632, 0
  %634 = icmp slt i32 %629, 10
  %635 = or i1 %633, %634
  br i1 %635, label %originalBBpart2156, label %originalBB154alteredBB

originalBBpart2156:                               ; preds = %originalBB154
  br i1 %627, label %636, label %655, !dbg !3346

636:                                              ; preds = %originalBBpart2156
  %637 = load i32, i32* @x.55
  %638 = load i32, i32* @y.56
  %639 = sub i32 %637, 1
  %640 = mul i32 %637, %639
  %641 = urem i32 %640, 2
  %642 = icmp eq i32 %641, 0
  %643 = icmp slt i32 %638, 10
  %644 = or i1 %642, %643
  br i1 %644, label %originalBB158, label %originalBB158alteredBB

originalBB158:                                    ; preds = %636, %originalBB158alteredBB
  %645 = load i8*, i8** %24, align 8, !dbg !3347
  %646 = load i8**, i8*** %19, align 8, !dbg !3349
  store i8* %645, i8** %646, align 8, !dbg !3350
  store i8* null, i8** %24, align 8, !dbg !3351
  %647 = load i32, i32* @x.55
  %648 = load i32, i32* @y.56
  %649 = sub i32 %647, 1
  %650 = mul i32 %647, %649
  %651 = urem i32 %650, 2
  %652 = icmp eq i32 %651, 0
  %653 = icmp slt i32 %648, 10
  %654 = or i1 %652, %653
  br i1 %654, label %originalBBpart2160, label %originalBB158alteredBB

originalBBpart2160:                               ; preds = %originalBB158
  br label %655, !dbg !3352

655:                                              ; preds = %originalBBpart2160, %originalBBpart2156
  %656 = load i8**, i8*** %20, align 8, !dbg !3353
  %657 = icmp ne i8** %656, null, !dbg !3353
  br i1 %657, label %658, label %661, !dbg !3355

658:                                              ; preds = %655
  %659 = load i8*, i8** %26, align 8, !dbg !3356
  %660 = load i8**, i8*** %20, align 8, !dbg !3358
  store i8* %659, i8** %660, align 8, !dbg !3359
  store i8* null, i8** %26, align 8, !dbg !3360
  br label %661, !dbg !3361

661:                                              ; preds = %658, %655
  %662 = load i32, i32* @x.55
  %663 = load i32, i32* @y.56
  %664 = sub i32 %662, 1
  %665 = mul i32 %662, %664
  %666 = urem i32 %665, 2
  %667 = icmp eq i32 %666, 0
  %668 = icmp slt i32 %663, 10
  %669 = or i1 %667, %668
  br i1 %669, label %originalBB162, label %originalBB162alteredBB

originalBB162:                                    ; preds = %661, %originalBB162alteredBB
  %670 = load i32, i32* @x.55
  %671 = load i32, i32* @y.56
  %672 = sub i32 %670, 1
  %673 = mul i32 %670, %672
  %674 = urem i32 %673, 2
  %675 = icmp eq i32 %674, 0
  %676 = icmp slt i32 %671, 10
  %677 = or i1 %675, %676
  br i1 %677, label %originalBBpart2164, label %originalBB162alteredBB

originalBBpart2164:                               ; preds = %originalBB162
  br label %678, !dbg !3362

678:                                              ; preds = %originalBBpart2164, %originalBBpart2152
  %679 = load i8*, i8** %24, align 8, !dbg !3363
  call void @free(i8* %679) #10, !dbg !3364
  %680 = load i8*, i8** %26, align 8, !dbg !3365
  call void @free(i8* %680) #10, !dbg !3366
  %681 = load i8*, i8** %21, align 8, !dbg !3367
  %682 = icmp ne i8* %681, null, !dbg !3367
  br i1 %682, label %683, label %686, !dbg !3367

683:                                              ; preds = %678
  %684 = load i8*, i8** %21, align 8, !dbg !3368
  %685 = call i8* @gettext(i8* %684) #10, !dbg !3368
  br label %687, !dbg !3367

686:                                              ; preds = %678
  br label %687, !dbg !3367

687:                                              ; preds = %686, %683
  %688 = phi i8* [ %685, %683 ], [ null, %686 ], !dbg !3367
  ret i8* %688, !dbg !3369

originalBBalteredBB:                              ; preds = %originalBB, %6
  %689 = alloca i8*, align 8
  %690 = alloca i8*, align 8
  %691 = alloca i32*, align 8
  %692 = alloca i32*, align 8
  %693 = alloca i8**, align 8
  %694 = alloca i8**, align 8
  %695 = alloca i8*, align 8
  %696 = alloca %struct.passwd*, align 8
  %697 = alloca %struct.group*, align 8
  %698 = alloca i8*, align 8
  %699 = alloca i8*, align 8
  %700 = alloca i8*, align 8
  %701 = alloca i32, align 4
  %702 = alloca i32, align 4
  %703 = alloca i64, align 8
  %704 = alloca i8, align 1
  %705 = alloca i64, align 8
  %706 = alloca [21 x i8], align 16
  %707 = alloca i64, align 8
  store i8* %0, i8** %689, align 8
  call void @llvm.dbg.declare(metadata i8** %689, metadata !3370, metadata !DIExpression()), !dbg !3091
  store i8* %1, i8** %690, align 8
  call void @llvm.dbg.declare(metadata i8** %690, metadata !3380, metadata !DIExpression()), !dbg !3093
  store i32* %2, i32** %691, align 8
  call void @llvm.dbg.declare(metadata i32** %691, metadata !3381, metadata !DIExpression()), !dbg !3095
  store i32* %3, i32** %692, align 8
  call void @llvm.dbg.declare(metadata i32** %692, metadata !3382, metadata !DIExpression()), !dbg !3097
  store i8** %4, i8*** %693, align 8
  call void @llvm.dbg.declare(metadata i8*** %693, metadata !3383, metadata !DIExpression()), !dbg !3099
  store i8** %5, i8*** %694, align 8
  call void @llvm.dbg.declare(metadata i8*** %694, metadata !3384, metadata !DIExpression()), !dbg !3101
  call void @llvm.dbg.declare(metadata i8** %695, metadata !3385, metadata !DIExpression()), !dbg !3103
  call void @llvm.dbg.declare(metadata %struct.passwd** %696, metadata !3386, metadata !DIExpression()), !dbg !3115
  call void @llvm.dbg.declare(metadata %struct.group** %697, metadata !3397, metadata !DIExpression()), !dbg !3124
  call void @llvm.dbg.declare(metadata i8** %698, metadata !3405, metadata !DIExpression()), !dbg !3126
  call void @llvm.dbg.declare(metadata i8** %699, metadata !3406, metadata !DIExpression()), !dbg !3128
  call void @llvm.dbg.declare(metadata i8** %700, metadata !3407, metadata !DIExpression()), !dbg !3130
  store i8* null, i8** %700, align 8, !dbg !3130
  call void @llvm.dbg.declare(metadata i32* %701, metadata !3408, metadata !DIExpression()), !dbg !3132
  %708 = load i32*, i32** %691, align 8, !dbg !3133
  %709 = load i32, i32* %708, align 4, !dbg !3134
  store i32 %709, i32* %701, align 4, !dbg !3132
  call void @llvm.dbg.declare(metadata i32* %702, metadata !3409, metadata !DIExpression()), !dbg !3136
  %710 = load i32*, i32** %692, align 8, !dbg !3137
  %711 = icmp ne i32* %710, null, !dbg !3137
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %50
  store i32 %51, i32* %28, align 4, !dbg !3136
  store i8* null, i8** %21, align 8, !dbg !3140
  %712 = load i8**, i8*** %19, align 8, !dbg !3141
  %713 = icmp ne i8** %712, null, !dbg !3141
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %75
  %714 = load i8**, i8*** %20, align 8, !dbg !3150
  store i8* null, i8** %714, align 8, !dbg !3151
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %103
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %120
  %715 = load i8*, i8** %16, align 8, !dbg !3171
  %716 = load i8*, i8** %15, align 8, !dbg !3172
  %717 = ptrtoint i8* %715 to i64, !dbg !3173
  %718 = ptrtoint i8* %716 to i64, !dbg !3173
  %_ = shl i64 %717, %718
  %_15 = shl i64 %717, %718
  %_16 = shl i64 %717, %718
  %_17 = sub i64 %717, %718
  %gen = mul i64 %_17, %718
  %_18 = sub i64 %717, %718
  %gen19 = mul i64 %_18, %718
  %_20 = shl i64 %717, %718
  %_21 = sub i64 0, %717
  %gen22 = add i64 %_21, %718
  %_23 = sub i64 0, %717
  %gen24 = add i64 %_23, %718
  %719 = sub i64 %717, %718, !dbg !3173
  store i64 %719, i64* %29, align 8, !dbg !3170
  %720 = load i64, i64* %29, align 8, !dbg !3174
  %721 = icmp ne i64 %720, 0, !dbg !3176
  br label %originalBB14

originalBB29alteredBB:                            ; preds = %originalBB29, %152
  br label %originalBB29

originalBB33alteredBB:                            ; preds = %originalBB33, %186
  %722 = load i8*, i8** %24, align 8, !dbg !3202
  %723 = load i8, i8* %722, align 1, !dbg !3204
  %724 = sext i8 %723 to i32, !dbg !3204
  br label %originalBB33

originalBB37alteredBB:                            ; preds = %originalBB37, %222
  %725 = load i32, i32* %collatzVar
  %_38 = sub i32 0, %725
  %gen39 = add i32 %_38, 2
  %_40 = shl i32 %725, 2
  %_41 = sub i32 %725, 2
  %gen42 = mul i32 %_41, 2
  %_43 = sub i32 %725, 2
  %gen44 = mul i32 %_43, 2
  %_45 = sub i32 %725, 2
  %gen46 = mul i32 %_45, 2
  %726 = sdiv i32 %725, 2
  store i32 %726, i32* %collatzVar
  br label %originalBB37

originalBB50alteredBB:                            ; preds = %originalBB50, %241
  %727 = load i32, i32* %collatzVar
  %_51 = sub i32 %727, 3
  %gen52 = mul i32 %_51, 3
  %_53 = shl i32 %727, 3
  %_54 = shl i32 %727, 3
  %_55 = sub i32 0, %727
  %gen56 = add i32 %_55, 3
  %_57 = sub i32 %727, 3
  %gen58 = mul i32 %_57, 3
  %728 = mul i32 %727, 3
  %_59 = shl i32 %728, 1
  %_60 = shl i32 %728, 1
  %_61 = sub i32 0, %728
  %gen62 = add i32 %_61, 1
  %_63 = sub i32 0, %728
  %gen64 = add i32 %_63, 1
  %_65 = sub i32 0, %728
  %gen66 = add i32 %_65, 1
  %_67 = sub i32 %728, 1
  %gen68 = mul i32 %_67, 1
  %729 = add i32 %728, 1
  store i32 %729, i32* %collatzVar
  br label %originalBB50

originalBB72alteredBB:                            ; preds = %originalBB72, %261
  %730 = load i32, i32* %collatzVar
  %_73 = sub i32 %197, %730
  %gen74 = mul i32 %_73, %730
  %_75 = sub i32 %197, %730
  %gen76 = mul i32 %_75, %730
  %_77 = sub i32 0, %197
  %gen78 = add i32 %_77, %730
  %_79 = sub i32 %197, %730
  %gen80 = mul i32 %_79, %730
  %_81 = shl i32 %197, %730
  %_82 = sub i32 0, %197
  %gen83 = add i32 %_82, %730
  %_84 = sub i32 0, %197
  %gen85 = add i32 %_84, %730
  %_86 = shl i32 %197, %730
  %_87 = shl i32 %197, %730
  %731 = sub i32 %197, %730
  %732 = icmp sgt i32 %731, 41
  br label %originalBB72

originalBB91alteredBB:                            ; preds = %originalBB91, %281
  %733 = load i32, i32* %collatzVar
  %_92 = sub i32 0, %197
  %gen93 = add i32 %_92, %733
  %_94 = sub i32 %197, %733
  %gen95 = mul i32 %_94, %733
  %_96 = sub i32 0, %197
  %gen97 = add i32 %_96, %733
  %_98 = sub i32 0, %197
  %gen99 = add i32 %_98, %733
  %_100 = sub i32 0, %197
  %gen101 = add i32 %_100, %733
  %_102 = shl i32 %197, %733
  %734 = add i32 %197, %733
  %735 = icmp slt i32 %734, 45
  br label %originalBB91

originalBB106alteredBB:                           ; preds = %originalBB106, %309
  %736 = load i8*, i8** %16, align 8, !dbg !3216
  %737 = icmp ne i8* %736, null, !dbg !3217
  br label %originalBB106

originalBB110alteredBB:                           ; preds = %originalBB110, %338
  %738 = load i8*, i8** %24, align 8, !dbg !3232
  %739 = call i32 @xstrtoul(i8* %738, i8** null, i32 10, i64* %31, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3.102, i64 0, i64 0)), !dbg !3234
  %740 = icmp eq i32 %739, 0, !dbg !3235
  br label %originalBB110

originalBB114alteredBB:                           ; preds = %originalBB114, %358
  %741 = load i64, i64* %31, align 8, !dbg !3237
  %742 = icmp ule i64 %741, 4294967295, !dbg !3238
  br label %originalBB114

originalBB118alteredBB:                           ; preds = %originalBB118, %397
  %743 = load %struct.passwd*, %struct.passwd** %22, align 8, !dbg !3264
  %744 = getelementptr inbounds %struct.passwd, %struct.passwd* %743, i32 0, i32 3, !dbg !3265
  %745 = load i32, i32* %744, align 4, !dbg !3265
  store i32 %745, i32* %28, align 4, !dbg !3266
  %746 = load i32, i32* %28, align 4, !dbg !3267
  %747 = call %struct.group* @getgrgid(i32 %746), !dbg !3268
  store %struct.group* %747, %struct.group** %23, align 8, !dbg !3269
  %748 = load %struct.group*, %struct.group** %23, align 8, !dbg !3270
  %749 = icmp ne %struct.group* %748, null, !dbg !3270
  br label %originalBB118

originalBB122alteredBB:                           ; preds = %originalBB122, %425
  %750 = load i32, i32* %28, align 4, !dbg !3273
  %751 = zext i32 %750 to i64, !dbg !3273
  %752 = getelementptr inbounds [21 x i8], [21 x i8]* %32, i64 0, i64 0, !dbg !3274
  %753 = call i8* @umaxtostr(i64 %751, i8* %752), !dbg !3275
  br label %originalBB122

originalBB126alteredBB:                           ; preds = %originalBB126, %446
  %754 = call noalias i8* @xstrdup(i8* %447), !dbg !3276
  store i8* %754, i8** %26, align 8, !dbg !3277
  call void @endgrent(), !dbg !3278
  br label %originalBB126

originalBB130alteredBB:                           ; preds = %originalBB130, %470
  %755 = load i8*, i8** %21, align 8, !dbg !3286
  %756 = icmp eq i8* %755, null, !dbg !3287
  br label %originalBB130

originalBB134alteredBB:                           ; preds = %originalBB134, %498
  store %struct.group* %499, %struct.group** %23, align 8, !dbg !3295
  %757 = load %struct.group*, %struct.group** %23, align 8, !dbg !3296
  %758 = icmp eq %struct.group* %757, null, !dbg !3298
  br label %originalBB134

originalBB138alteredBB:                           ; preds = %originalBB138, %518
  %759 = load i8*, i8** %25, align 8, !dbg !3303
  %760 = call i32 @xstrtoul(i8* %759, i8** null, i32 10, i64* %33, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3.102, i64 0, i64 0)), !dbg !3305
  %761 = icmp eq i32 %760, 0, !dbg !3306
  br label %originalBB138

originalBB142alteredBB:                           ; preds = %originalBB142, %548
  %762 = load i8*, i8** @parse_with_separator.E_invalid_group, align 8, !dbg !3318
  store i8* %762, i8** %21, align 8, !dbg !3319
  br label %originalBB142

originalBB146alteredBB:                           ; preds = %originalBB146, %571
  call void @endgrent(), !dbg !3324
  %763 = load i8*, i8** %25, align 8, !dbg !3325
  %764 = call noalias i8* @xstrdup(i8* %763), !dbg !3326
  store i8* %764, i8** %26, align 8, !dbg !3327
  br label %originalBB146

originalBB150alteredBB:                           ; preds = %originalBB150, %590
  %765 = load i8*, i8** %21, align 8, !dbg !3329
  %766 = icmp eq i8* %765, null, !dbg !3331
  br label %originalBB150

originalBB154alteredBB:                           ; preds = %originalBB154, %617
  %767 = load i8**, i8*** %19, align 8, !dbg !3344
  %768 = icmp ne i8** %767, null, !dbg !3344
  br label %originalBB154

originalBB158alteredBB:                           ; preds = %originalBB158, %636
  %769 = load i8*, i8** %24, align 8, !dbg !3347
  %770 = load i8**, i8*** %19, align 8, !dbg !3349
  store i8* %769, i8** %770, align 8, !dbg !3350
  store i8* null, i8** %24, align 8, !dbg !3351
  br label %originalBB158

originalBB162alteredBB:                           ; preds = %originalBB162, %661
  br label %originalBB162
}

declare dso_local %struct.passwd* @getpwnam(i8*) #3

declare dso_local void @endgrent() #3

declare dso_local void @endpwent() #3

declare dso_local %struct.group* @getgrnam(i8*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @version_etc_arn(%struct._IO_FILE*, i8*, i8*, i8*, i8**, i64) #4 !dbg !3410 {
  %7 = alloca %struct._IO_FILE*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i8**, align 8
  %12 = alloca i64, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %7, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %7, metadata !3468, metadata !DIExpression()), !dbg !3469
  store i8* %1, i8** %8, align 8
  call void @llvm.dbg.declare(metadata i8** %8, metadata !3470, metadata !DIExpression()), !dbg !3471
  store i8* %2, i8** %9, align 8
  call void @llvm.dbg.declare(metadata i8** %9, metadata !3472, metadata !DIExpression()), !dbg !3473
  store i8* %3, i8** %10, align 8
  call void @llvm.dbg.declare(metadata i8** %10, metadata !3474, metadata !DIExpression()), !dbg !3475
  store i8** %4, i8*** %11, align 8
  call void @llvm.dbg.declare(metadata i8*** %11, metadata !3476, metadata !DIExpression()), !dbg !3477
  store i64 %5, i64* %12, align 8
  call void @llvm.dbg.declare(metadata i64* %12, metadata !3478, metadata !DIExpression()), !dbg !3479
  %13 = load i8*, i8** %8, align 8, !dbg !3480
  %14 = icmp ne i8* %13, null, !dbg !3480
  br i1 %14, label %15, label %21, !dbg !3482

15:                                               ; preds = %6
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !3483
  %17 = load i8*, i8** %8, align 8, !dbg !3484
  %18 = load i8*, i8** %9, align 8, !dbg !3485
  %19 = load i8*, i8** %10, align 8, !dbg !3486
  %20 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %16, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.106, i64 0, i64 0), i8* %17, i8* %18, i8* %19), !dbg !3487
  br label %26, !dbg !3487

21:                                               ; preds = %6
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !3488
  %23 = load i8*, i8** %9, align 8, !dbg !3489
  %24 = load i8*, i8** %10, align 8, !dbg !3490
  %25 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %22, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.107, i64 0, i64 0), i8* %23, i8* %24), !dbg !3491
  br label %26

26:                                               ; preds = %21, %15
  %27 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !3492
  %28 = call i8* @gettext(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.108, i64 0, i64 0)) #10, !dbg !3493
  %29 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %27, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @version_etc_copyright, i64 0, i64 0), i8* %28, i32 2020), !dbg !3494
  %30 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !3495
  %31 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.109, i64 0, i64 0), %struct._IO_FILE* %30), !dbg !3495
  %32 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !3496
  %33 = call i8* @gettext(i8* getelementptr inbounds ([171 x i8], [171 x i8]* @.str.4.110, i64 0, i64 0)) #10, !dbg !3497
  %34 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %32, i8* %33, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.5.111, i64 0, i64 0)), !dbg !3498
  %35 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !3499
  %36 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.109, i64 0, i64 0), %struct._IO_FILE* %35), !dbg !3499
  %37 = load i64, i64* %12, align 8, !dbg !3500
  switch i64 %37, label %258 [
    i64 0, label %38
    i64 1, label %39
    i64 2, label %46
    i64 3, label %56
    i64 4, label %69
    i64 5, label %101
    i64 6, label %136
    i64 7, label %158
    i64 8, label %199
    i64 9, label %227
  ], !dbg !3501

38:                                               ; preds = %26
  br label %305, !dbg !3502

39:                                               ; preds = %26
  %40 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !3504
  %41 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6.112, i64 0, i64 0)) #10, !dbg !3505
  %42 = load i8**, i8*** %11, align 8, !dbg !3506
  %43 = getelementptr inbounds i8*, i8** %42, i64 0, !dbg !3506
  %44 = load i8*, i8** %43, align 8, !dbg !3506
  %45 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %40, i8* %41, i8* %44), !dbg !3507
  br label %305, !dbg !3508

46:                                               ; preds = %26
  %47 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !3509
  %48 = call i8* @gettext(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.113, i64 0, i64 0)) #10, !dbg !3510
  %49 = load i8**, i8*** %11, align 8, !dbg !3511
  %50 = getelementptr inbounds i8*, i8** %49, i64 0, !dbg !3511
  %51 = load i8*, i8** %50, align 8, !dbg !3511
  %52 = load i8**, i8*** %11, align 8, !dbg !3512
  %53 = getelementptr inbounds i8*, i8** %52, i64 1, !dbg !3512
  %54 = load i8*, i8** %53, align 8, !dbg !3512
  %55 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %47, i8* %48, i8* %51, i8* %54), !dbg !3513
  br label %305, !dbg !3514

56:                                               ; preds = %26
  %57 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !3515
  %58 = call i8* @gettext(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.8.114, i64 0, i64 0)) #10, !dbg !3516
  %59 = load i8**, i8*** %11, align 8, !dbg !3517
  %60 = getelementptr inbounds i8*, i8** %59, i64 0, !dbg !3517
  %61 = load i8*, i8** %60, align 8, !dbg !3517
  %62 = load i8**, i8*** %11, align 8, !dbg !3518
  %63 = getelementptr inbounds i8*, i8** %62, i64 1, !dbg !3518
  %64 = load i8*, i8** %63, align 8, !dbg !3518
  %65 = load i8**, i8*** %11, align 8, !dbg !3519
  %66 = getelementptr inbounds i8*, i8** %65, i64 2, !dbg !3519
  %67 = load i8*, i8** %66, align 8, !dbg !3519
  %68 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %57, i8* %58, i8* %61, i8* %64, i8* %67), !dbg !3520
  br label %305, !dbg !3521

69:                                               ; preds = %26
  %70 = load i32, i32* @x.57
  %71 = load i32, i32* @y.58
  %72 = sub i32 %70, 1
  %73 = mul i32 %70, %72
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %71, 10
  %77 = or i1 %75, %76
  br i1 %77, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %69, %originalBBalteredBB
  %78 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !3522
  %79 = call i8* @gettext(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.9.115, i64 0, i64 0)) #10, !dbg !3523
  %80 = load i8**, i8*** %11, align 8, !dbg !3524
  %81 = getelementptr inbounds i8*, i8** %80, i64 0, !dbg !3524
  %82 = load i8*, i8** %81, align 8, !dbg !3524
  %83 = load i8**, i8*** %11, align 8, !dbg !3525
  %84 = getelementptr inbounds i8*, i8** %83, i64 1, !dbg !3525
  %85 = load i8*, i8** %84, align 8, !dbg !3525
  %86 = load i8**, i8*** %11, align 8, !dbg !3526
  %87 = getelementptr inbounds i8*, i8** %86, i64 2, !dbg !3526
  %88 = load i8*, i8** %87, align 8, !dbg !3526
  %89 = load i8**, i8*** %11, align 8, !dbg !3527
  %90 = getelementptr inbounds i8*, i8** %89, i64 3, !dbg !3527
  %91 = load i8*, i8** %90, align 8, !dbg !3527
  %92 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %78, i8* %79, i8* %82, i8* %85, i8* %88, i8* %91), !dbg !3528
  %93 = load i32, i32* @x.57
  %94 = load i32, i32* @y.58
  %95 = sub i32 %93, 1
  %96 = mul i32 %93, %95
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %94, 10
  %100 = or i1 %98, %99
  br i1 %100, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %305, !dbg !3529

101:                                              ; preds = %26
  %102 = load i32, i32* @x.57
  %103 = load i32, i32* @y.58
  %104 = sub i32 %102, 1
  %105 = mul i32 %102, %104
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %103, 10
  %109 = or i1 %107, %108
  br i1 %109, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %101, %originalBB1alteredBB
  %110 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !3530
  %111 = call i8* @gettext(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.10.116, i64 0, i64 0)) #10, !dbg !3531
  %112 = load i8**, i8*** %11, align 8, !dbg !3532
  %113 = getelementptr inbounds i8*, i8** %112, i64 0, !dbg !3532
  %114 = load i8*, i8** %113, align 8, !dbg !3532
  %115 = load i8**, i8*** %11, align 8, !dbg !3533
  %116 = getelementptr inbounds i8*, i8** %115, i64 1, !dbg !3533
  %117 = load i8*, i8** %116, align 8, !dbg !3533
  %118 = load i8**, i8*** %11, align 8, !dbg !3534
  %119 = getelementptr inbounds i8*, i8** %118, i64 2, !dbg !3534
  %120 = load i8*, i8** %119, align 8, !dbg !3534
  %121 = load i8**, i8*** %11, align 8, !dbg !3535
  %122 = getelementptr inbounds i8*, i8** %121, i64 3, !dbg !3535
  %123 = load i8*, i8** %122, align 8, !dbg !3535
  %124 = load i8**, i8*** %11, align 8, !dbg !3536
  %125 = getelementptr inbounds i8*, i8** %124, i64 4, !dbg !3536
  %126 = load i8*, i8** %125, align 8, !dbg !3536
  %127 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %110, i8* %111, i8* %114, i8* %117, i8* %120, i8* %123, i8* %126), !dbg !3537
  %128 = load i32, i32* @x.57
  %129 = load i32, i32* @y.58
  %130 = sub i32 %128, 1
  %131 = mul i32 %128, %130
  %132 = urem i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = icmp slt i32 %129, 10
  %135 = or i1 %133, %134
  br i1 %135, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %305, !dbg !3538

136:                                              ; preds = %26
  %137 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !3539
  %138 = call i8* @gettext(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.11.117, i64 0, i64 0)) #10, !dbg !3540
  %139 = load i8**, i8*** %11, align 8, !dbg !3541
  %140 = getelementptr inbounds i8*, i8** %139, i64 0, !dbg !3541
  %141 = load i8*, i8** %140, align 8, !dbg !3541
  %142 = load i8**, i8*** %11, align 8, !dbg !3542
  %143 = getelementptr inbounds i8*, i8** %142, i64 1, !dbg !3542
  %144 = load i8*, i8** %143, align 8, !dbg !3542
  %145 = load i8**, i8*** %11, align 8, !dbg !3543
  %146 = getelementptr inbounds i8*, i8** %145, i64 2, !dbg !3543
  %147 = load i8*, i8** %146, align 8, !dbg !3543
  %148 = load i8**, i8*** %11, align 8, !dbg !3544
  %149 = getelementptr inbounds i8*, i8** %148, i64 3, !dbg !3544
  %150 = load i8*, i8** %149, align 8, !dbg !3544
  %151 = load i8**, i8*** %11, align 8, !dbg !3545
  %152 = getelementptr inbounds i8*, i8** %151, i64 4, !dbg !3545
  %153 = load i8*, i8** %152, align 8, !dbg !3545
  %154 = load i8**, i8*** %11, align 8, !dbg !3546
  %155 = getelementptr inbounds i8*, i8** %154, i64 5, !dbg !3546
  %156 = load i8*, i8** %155, align 8, !dbg !3546
  %157 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %137, i8* %138, i8* %141, i8* %144, i8* %147, i8* %150, i8* %153, i8* %156), !dbg !3547
  br label %305, !dbg !3548

158:                                              ; preds = %26
  %159 = load i32, i32* @x.57
  %160 = load i32, i32* @y.58
  %161 = sub i32 %159, 1
  %162 = mul i32 %159, %161
  %163 = urem i32 %162, 2
  %164 = icmp eq i32 %163, 0
  %165 = icmp slt i32 %160, 10
  %166 = or i1 %164, %165
  br i1 %166, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %158, %originalBB6alteredBB
  %167 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !3549
  %168 = call i8* @gettext(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.12.118, i64 0, i64 0)) #10, !dbg !3550
  %169 = load i8**, i8*** %11, align 8, !dbg !3551
  %170 = getelementptr inbounds i8*, i8** %169, i64 0, !dbg !3551
  %171 = load i8*, i8** %170, align 8, !dbg !3551
  %172 = load i8**, i8*** %11, align 8, !dbg !3552
  %173 = getelementptr inbounds i8*, i8** %172, i64 1, !dbg !3552
  %174 = load i8*, i8** %173, align 8, !dbg !3552
  %175 = load i8**, i8*** %11, align 8, !dbg !3553
  %176 = getelementptr inbounds i8*, i8** %175, i64 2, !dbg !3553
  %177 = load i8*, i8** %176, align 8, !dbg !3553
  %178 = load i8**, i8*** %11, align 8, !dbg !3554
  %179 = getelementptr inbounds i8*, i8** %178, i64 3, !dbg !3554
  %180 = load i8*, i8** %179, align 8, !dbg !3554
  %181 = load i8**, i8*** %11, align 8, !dbg !3555
  %182 = getelementptr inbounds i8*, i8** %181, i64 4, !dbg !3555
  %183 = load i8*, i8** %182, align 8, !dbg !3555
  %184 = load i8**, i8*** %11, align 8, !dbg !3556
  %185 = getelementptr inbounds i8*, i8** %184, i64 5, !dbg !3556
  %186 = load i8*, i8** %185, align 8, !dbg !3556
  %187 = load i8**, i8*** %11, align 8, !dbg !3557
  %188 = getelementptr inbounds i8*, i8** %187, i64 6, !dbg !3557
  %189 = load i8*, i8** %188, align 8, !dbg !3557
  %190 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %167, i8* %168, i8* %171, i8* %174, i8* %177, i8* %180, i8* %183, i8* %186, i8* %189), !dbg !3558
  %191 = load i32, i32* @x.57
  %192 = load i32, i32* @y.58
  %193 = sub i32 %191, 1
  %194 = mul i32 %191, %193
  %195 = urem i32 %194, 2
  %196 = icmp eq i32 %195, 0
  %197 = icmp slt i32 %192, 10
  %198 = or i1 %196, %197
  br i1 %198, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %305, !dbg !3559

199:                                              ; preds = %26
  %200 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !3560
  %201 = call i8* @gettext(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.13.119, i64 0, i64 0)) #10, !dbg !3561
  %202 = load i8**, i8*** %11, align 8, !dbg !3562
  %203 = getelementptr inbounds i8*, i8** %202, i64 0, !dbg !3562
  %204 = load i8*, i8** %203, align 8, !dbg !3562
  %205 = load i8**, i8*** %11, align 8, !dbg !3563
  %206 = getelementptr inbounds i8*, i8** %205, i64 1, !dbg !3563
  %207 = load i8*, i8** %206, align 8, !dbg !3563
  %208 = load i8**, i8*** %11, align 8, !dbg !3564
  %209 = getelementptr inbounds i8*, i8** %208, i64 2, !dbg !3564
  %210 = load i8*, i8** %209, align 8, !dbg !3564
  %211 = load i8**, i8*** %11, align 8, !dbg !3565
  %212 = getelementptr inbounds i8*, i8** %211, i64 3, !dbg !3565
  %213 = load i8*, i8** %212, align 8, !dbg !3565
  %214 = load i8**, i8*** %11, align 8, !dbg !3566
  %215 = getelementptr inbounds i8*, i8** %214, i64 4, !dbg !3566
  %216 = load i8*, i8** %215, align 8, !dbg !3566
  %217 = load i8**, i8*** %11, align 8, !dbg !3567
  %218 = getelementptr inbounds i8*, i8** %217, i64 5, !dbg !3567
  %219 = load i8*, i8** %218, align 8, !dbg !3567
  %220 = load i8**, i8*** %11, align 8, !dbg !3568
  %221 = getelementptr inbounds i8*, i8** %220, i64 6, !dbg !3568
  %222 = load i8*, i8** %221, align 8, !dbg !3568
  %223 = load i8**, i8*** %11, align 8, !dbg !3569
  %224 = getelementptr inbounds i8*, i8** %223, i64 7, !dbg !3569
  %225 = load i8*, i8** %224, align 8, !dbg !3569
  %226 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %200, i8* %201, i8* %204, i8* %207, i8* %210, i8* %213, i8* %216, i8* %219, i8* %222, i8* %225), !dbg !3570
  br label %305, !dbg !3571

227:                                              ; preds = %26
  %228 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !3572
  %229 = call i8* @gettext(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.14.120, i64 0, i64 0)) #10, !dbg !3573
  %230 = load i8**, i8*** %11, align 8, !dbg !3574
  %231 = getelementptr inbounds i8*, i8** %230, i64 0, !dbg !3574
  %232 = load i8*, i8** %231, align 8, !dbg !3574
  %233 = load i8**, i8*** %11, align 8, !dbg !3575
  %234 = getelementptr inbounds i8*, i8** %233, i64 1, !dbg !3575
  %235 = load i8*, i8** %234, align 8, !dbg !3575
  %236 = load i8**, i8*** %11, align 8, !dbg !3576
  %237 = getelementptr inbounds i8*, i8** %236, i64 2, !dbg !3576
  %238 = load i8*, i8** %237, align 8, !dbg !3576
  %239 = load i8**, i8*** %11, align 8, !dbg !3577
  %240 = getelementptr inbounds i8*, i8** %239, i64 3, !dbg !3577
  %241 = load i8*, i8** %240, align 8, !dbg !3577
  %242 = load i8**, i8*** %11, align 8, !dbg !3578
  %243 = getelementptr inbounds i8*, i8** %242, i64 4, !dbg !3578
  %244 = load i8*, i8** %243, align 8, !dbg !3578
  %245 = load i8**, i8*** %11, align 8, !dbg !3579
  %246 = getelementptr inbounds i8*, i8** %245, i64 5, !dbg !3579
  %247 = load i8*, i8** %246, align 8, !dbg !3579
  %248 = load i8**, i8*** %11, align 8, !dbg !3580
  %249 = getelementptr inbounds i8*, i8** %248, i64 6, !dbg !3580
  %250 = load i8*, i8** %249, align 8, !dbg !3580
  %251 = load i8**, i8*** %11, align 8, !dbg !3581
  %252 = getelementptr inbounds i8*, i8** %251, i64 7, !dbg !3581
  %253 = load i8*, i8** %252, align 8, !dbg !3581
  %254 = load i8**, i8*** %11, align 8, !dbg !3582
  %255 = getelementptr inbounds i8*, i8** %254, i64 8, !dbg !3582
  %256 = load i8*, i8** %255, align 8, !dbg !3582
  %257 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %228, i8* %229, i8* %232, i8* %235, i8* %238, i8* %241, i8* %244, i8* %247, i8* %250, i8* %253, i8* %256), !dbg !3583
  br label %305, !dbg !3584

258:                                              ; preds = %26
  %259 = load i32, i32* @x.57
  %260 = load i32, i32* @y.58
  %261 = sub i32 %259, 1
  %262 = mul i32 %259, %261
  %263 = urem i32 %262, 2
  %264 = icmp eq i32 %263, 0
  %265 = icmp slt i32 %260, 10
  %266 = or i1 %264, %265
  br i1 %266, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %258, %originalBB10alteredBB
  %267 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !3585
  %268 = call i8* @gettext(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.15.121, i64 0, i64 0)) #10, !dbg !3586
  %269 = load i8**, i8*** %11, align 8, !dbg !3587
  %270 = getelementptr inbounds i8*, i8** %269, i64 0, !dbg !3587
  %271 = load i8*, i8** %270, align 8, !dbg !3587
  %272 = load i8**, i8*** %11, align 8, !dbg !3588
  %273 = getelementptr inbounds i8*, i8** %272, i64 1, !dbg !3588
  %274 = load i8*, i8** %273, align 8, !dbg !3588
  %275 = load i8**, i8*** %11, align 8, !dbg !3589
  %276 = getelementptr inbounds i8*, i8** %275, i64 2, !dbg !3589
  %277 = load i8*, i8** %276, align 8, !dbg !3589
  %278 = load i8**, i8*** %11, align 8, !dbg !3590
  %279 = getelementptr inbounds i8*, i8** %278, i64 3, !dbg !3590
  %280 = load i8*, i8** %279, align 8, !dbg !3590
  %281 = load i8**, i8*** %11, align 8, !dbg !3591
  %282 = getelementptr inbounds i8*, i8** %281, i64 4, !dbg !3591
  %283 = load i8*, i8** %282, align 8, !dbg !3591
  %284 = load i8**, i8*** %11, align 8, !dbg !3592
  %285 = getelementptr inbounds i8*, i8** %284, i64 5, !dbg !3592
  %286 = load i8*, i8** %285, align 8, !dbg !3592
  %287 = load i8**, i8*** %11, align 8, !dbg !3593
  %288 = getelementptr inbounds i8*, i8** %287, i64 6, !dbg !3593
  %289 = load i8*, i8** %288, align 8, !dbg !3593
  %290 = load i8**, i8*** %11, align 8, !dbg !3594
  %291 = getelementptr inbounds i8*, i8** %290, i64 7, !dbg !3594
  %292 = load i8*, i8** %291, align 8, !dbg !3594
  %293 = load i8**, i8*** %11, align 8, !dbg !3595
  %294 = getelementptr inbounds i8*, i8** %293, i64 8, !dbg !3595
  %295 = load i8*, i8** %294, align 8, !dbg !3595
  %296 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %267, i8* %268, i8* %271, i8* %274, i8* %277, i8* %280, i8* %283, i8* %286, i8* %289, i8* %292, i8* %295), !dbg !3596
  %297 = load i32, i32* @x.57
  %298 = load i32, i32* @y.58
  %299 = sub i32 %297, 1
  %300 = mul i32 %297, %299
  %301 = urem i32 %300, 2
  %302 = icmp eq i32 %301, 0
  %303 = icmp slt i32 %298, 10
  %304 = or i1 %302, %303
  br i1 %304, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %305, !dbg !3597

305:                                              ; preds = %originalBBpart212, %227, %199, %originalBBpart28, %136, %originalBBpart24, %originalBBpart2, %56, %46, %39, %38
  %306 = load i32, i32* @x.57
  %307 = load i32, i32* @y.58
  %308 = sub i32 %306, 1
  %309 = mul i32 %306, %308
  %310 = urem i32 %309, 2
  %311 = icmp eq i32 %310, 0
  %312 = icmp slt i32 %307, 10
  %313 = or i1 %311, %312
  br i1 %313, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %305, %originalBB14alteredBB
  %314 = load i32, i32* @x.57
  %315 = load i32, i32* @y.58
  %316 = sub i32 %314, 1
  %317 = mul i32 %314, %316
  %318 = urem i32 %317, 2
  %319 = icmp eq i32 %318, 0
  %320 = icmp slt i32 %315, 10
  %321 = or i1 %319, %320
  br i1 %321, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  ret void, !dbg !3598

originalBBalteredBB:                              ; preds = %originalBB, %69
  %322 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !3522
  %323 = call i8* @gettext(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.9.115, i64 0, i64 0)) #10, !dbg !3523
  %324 = load i8**, i8*** %11, align 8, !dbg !3524
  %325 = getelementptr inbounds i8*, i8** %324, i64 0, !dbg !3524
  %326 = load i8*, i8** %325, align 8, !dbg !3524
  %327 = load i8**, i8*** %11, align 8, !dbg !3525
  %328 = getelementptr inbounds i8*, i8** %327, i64 1, !dbg !3525
  %329 = load i8*, i8** %328, align 8, !dbg !3525
  %330 = load i8**, i8*** %11, align 8, !dbg !3526
  %331 = getelementptr inbounds i8*, i8** %330, i64 2, !dbg !3526
  %332 = load i8*, i8** %331, align 8, !dbg !3526
  %333 = load i8**, i8*** %11, align 8, !dbg !3527
  %334 = getelementptr inbounds i8*, i8** %333, i64 3, !dbg !3527
  %335 = load i8*, i8** %334, align 8, !dbg !3527
  %336 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %322, i8* %323, i8* %326, i8* %329, i8* %332, i8* %335), !dbg !3528
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %101
  %337 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !3530
  %338 = call i8* @gettext(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.10.116, i64 0, i64 0)) #10, !dbg !3531
  %339 = load i8**, i8*** %11, align 8, !dbg !3532
  %340 = getelementptr inbounds i8*, i8** %339, i64 0, !dbg !3532
  %341 = load i8*, i8** %340, align 8, !dbg !3532
  %342 = load i8**, i8*** %11, align 8, !dbg !3533
  %343 = getelementptr inbounds i8*, i8** %342, i64 1, !dbg !3533
  %344 = load i8*, i8** %343, align 8, !dbg !3533
  %345 = load i8**, i8*** %11, align 8, !dbg !3534
  %346 = getelementptr inbounds i8*, i8** %345, i64 2, !dbg !3534
  %347 = load i8*, i8** %346, align 8, !dbg !3534
  %348 = load i8**, i8*** %11, align 8, !dbg !3535
  %349 = getelementptr inbounds i8*, i8** %348, i64 3, !dbg !3535
  %350 = load i8*, i8** %349, align 8, !dbg !3535
  %351 = load i8**, i8*** %11, align 8, !dbg !3536
  %352 = getelementptr inbounds i8*, i8** %351, i64 4, !dbg !3536
  %353 = load i8*, i8** %352, align 8, !dbg !3536
  %354 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %337, i8* %338, i8* %341, i8* %344, i8* %347, i8* %350, i8* %353), !dbg !3537
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %158
  %355 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !3549
  %356 = call i8* @gettext(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.12.118, i64 0, i64 0)) #10, !dbg !3550
  %357 = load i8**, i8*** %11, align 8, !dbg !3551
  %358 = getelementptr inbounds i8*, i8** %357, i64 0, !dbg !3551
  %359 = load i8*, i8** %358, align 8, !dbg !3551
  %360 = load i8**, i8*** %11, align 8, !dbg !3552
  %361 = getelementptr inbounds i8*, i8** %360, i64 1, !dbg !3552
  %362 = load i8*, i8** %361, align 8, !dbg !3552
  %363 = load i8**, i8*** %11, align 8, !dbg !3553
  %364 = getelementptr inbounds i8*, i8** %363, i64 2, !dbg !3553
  %365 = load i8*, i8** %364, align 8, !dbg !3553
  %366 = load i8**, i8*** %11, align 8, !dbg !3554
  %367 = getelementptr inbounds i8*, i8** %366, i64 3, !dbg !3554
  %368 = load i8*, i8** %367, align 8, !dbg !3554
  %369 = load i8**, i8*** %11, align 8, !dbg !3555
  %370 = getelementptr inbounds i8*, i8** %369, i64 4, !dbg !3555
  %371 = load i8*, i8** %370, align 8, !dbg !3555
  %372 = load i8**, i8*** %11, align 8, !dbg !3556
  %373 = getelementptr inbounds i8*, i8** %372, i64 5, !dbg !3556
  %374 = load i8*, i8** %373, align 8, !dbg !3556
  %375 = load i8**, i8*** %11, align 8, !dbg !3557
  %376 = getelementptr inbounds i8*, i8** %375, i64 6, !dbg !3557
  %377 = load i8*, i8** %376, align 8, !dbg !3557
  %378 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %355, i8* %356, i8* %359, i8* %362, i8* %365, i8* %368, i8* %371, i8* %374, i8* %377), !dbg !3558
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %258
  %379 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !3585
  %380 = call i8* @gettext(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.15.121, i64 0, i64 0)) #10, !dbg !3586
  %381 = load i8**, i8*** %11, align 8, !dbg !3587
  %382 = getelementptr inbounds i8*, i8** %381, i64 0, !dbg !3587
  %383 = load i8*, i8** %382, align 8, !dbg !3587
  %384 = load i8**, i8*** %11, align 8, !dbg !3588
  %385 = getelementptr inbounds i8*, i8** %384, i64 1, !dbg !3588
  %386 = load i8*, i8** %385, align 8, !dbg !3588
  %387 = load i8**, i8*** %11, align 8, !dbg !3589
  %388 = getelementptr inbounds i8*, i8** %387, i64 2, !dbg !3589
  %389 = load i8*, i8** %388, align 8, !dbg !3589
  %390 = load i8**, i8*** %11, align 8, !dbg !3590
  %391 = getelementptr inbounds i8*, i8** %390, i64 3, !dbg !3590
  %392 = load i8*, i8** %391, align 8, !dbg !3590
  %393 = load i8**, i8*** %11, align 8, !dbg !3591
  %394 = getelementptr inbounds i8*, i8** %393, i64 4, !dbg !3591
  %395 = load i8*, i8** %394, align 8, !dbg !3591
  %396 = load i8**, i8*** %11, align 8, !dbg !3592
  %397 = getelementptr inbounds i8*, i8** %396, i64 5, !dbg !3592
  %398 = load i8*, i8** %397, align 8, !dbg !3592
  %399 = load i8**, i8*** %11, align 8, !dbg !3593
  %400 = getelementptr inbounds i8*, i8** %399, i64 6, !dbg !3593
  %401 = load i8*, i8** %400, align 8, !dbg !3593
  %402 = load i8**, i8*** %11, align 8, !dbg !3594
  %403 = getelementptr inbounds i8*, i8** %402, i64 7, !dbg !3594
  %404 = load i8*, i8** %403, align 8, !dbg !3594
  %405 = load i8**, i8*** %11, align 8, !dbg !3595
  %406 = getelementptr inbounds i8*, i8** %405, i64 8, !dbg !3595
  %407 = load i8*, i8** %406, align 8, !dbg !3595
  %408 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %379, i8* %380, i8* %383, i8* %386, i8* %389, i8* %392, i8* %395, i8* %398, i8* %401, i8* %404, i8* %407), !dbg !3596
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %305
  br label %originalBB14
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @version_etc_va(%struct._IO_FILE*, i8*, i8*, i8*, %struct.__va_list_tag*) #4 !dbg !3599 {
  %6 = alloca %struct._IO_FILE*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca %struct.__va_list_tag*, align 8
  %11 = alloca i64, align 8
  %12 = alloca [10 x i8*], align 16
  store %struct._IO_FILE* %0, %struct._IO_FILE** %6, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %6, metadata !3609, metadata !DIExpression()), !dbg !3610
  store i8* %1, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !3611, metadata !DIExpression()), !dbg !3612
  store i8* %2, i8** %8, align 8
  call void @llvm.dbg.declare(metadata i8** %8, metadata !3613, metadata !DIExpression()), !dbg !3614
  store i8* %3, i8** %9, align 8
  call void @llvm.dbg.declare(metadata i8** %9, metadata !3615, metadata !DIExpression()), !dbg !3616
  store %struct.__va_list_tag* %4, %struct.__va_list_tag** %10, align 8
  call void @llvm.dbg.declare(metadata %struct.__va_list_tag** %10, metadata !3617, metadata !DIExpression()), !dbg !3618
  call void @llvm.dbg.declare(metadata i64* %11, metadata !3619, metadata !DIExpression()), !dbg !3620
  call void @llvm.dbg.declare(metadata [10 x i8*]* %12, metadata !3621, metadata !DIExpression()), !dbg !3623
  store i64 0, i64* %11, align 8, !dbg !3624
  br label %13, !dbg !3626

13:                                               ; preds = %originalBBpart220, %5
  %14 = load i64, i64* %11, align 8, !dbg !3627
  %15 = icmp ult i64 %14, 10, !dbg !3629
  br i1 %15, label %16, label %70, !dbg !3630

16:                                               ; preds = %13
  %17 = load i32, i32* @x.59
  %18 = load i32, i32* @y.60
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %16, %originalBBalteredBB
  %25 = load %struct.__va_list_tag*, %struct.__va_list_tag** %10, align 8, !dbg !3631
  %26 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %25, i32 0, i32 0, !dbg !3631
  %27 = load i32, i32* %26, align 8, !dbg !3631
  %28 = icmp ule i32 %27, 40, !dbg !3631
  %29 = load i32, i32* @x.59
  %30 = load i32, i32* @y.60
  %31 = sub i32 %29, 1
  %32 = mul i32 %29, %31
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %34, %35
  br i1 %36, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %28, label %37, label %43, !dbg !3631

37:                                               ; preds = %originalBBpart2
  %38 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %25, i32 0, i32 3, !dbg !3631
  %39 = load i8*, i8** %38, align 8, !dbg !3631
  %40 = getelementptr i8, i8* %39, i32 %27, !dbg !3631
  %41 = bitcast i8* %40 to i8**, !dbg !3631
  %42 = add i32 %27, 8, !dbg !3631
  store i32 %42, i32* %26, align 8, !dbg !3631
  br label %48, !dbg !3631

43:                                               ; preds = %originalBBpart2
  %44 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %25, i32 0, i32 2, !dbg !3631
  %45 = load i8*, i8** %44, align 8, !dbg !3631
  %46 = bitcast i8* %45 to i8**, !dbg !3631
  %47 = getelementptr i8, i8* %45, i32 8, !dbg !3631
  store i8* %47, i8** %44, align 8, !dbg !3631
  br label %48, !dbg !3631

48:                                               ; preds = %43, %37
  %49 = phi i8** [ %41, %37 ], [ %46, %43 ], !dbg !3631
  %50 = load i32, i32* @x.59
  %51 = load i32, i32* @y.60
  %52 = sub i32 %50, 1
  %53 = mul i32 %50, %52
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %51, 10
  %57 = or i1 %55, %56
  br i1 %57, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %48, %originalBB1alteredBB
  %58 = load i8*, i8** %49, align 8, !dbg !3631
  %59 = load i64, i64* %11, align 8, !dbg !3632
  %60 = getelementptr inbounds [10 x i8*], [10 x i8*]* %12, i64 0, i64 %59, !dbg !3633
  store i8* %58, i8** %60, align 8, !dbg !3634
  %61 = icmp ne i8* %58, null, !dbg !3635
  %62 = load i32, i32* @x.59
  %63 = load i32, i32* @y.60
  %64 = sub i32 %62, 1
  %65 = mul i32 %62, %64
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %63, 10
  %69 = or i1 %67, %68
  br i1 %69, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %70

70:                                               ; preds = %originalBBpart24, %13
  %71 = phi i1 [ false, %13 ], [ %61, %originalBBpart24 ], !dbg !3636
  br i1 %71, label %72, label %108, !dbg !3637

72:                                               ; preds = %70
  %73 = load i32, i32* @x.59
  %74 = load i32, i32* @y.60
  %75 = sub i32 %73, 1
  %76 = mul i32 %73, %75
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %74, 10
  %80 = or i1 %78, %79
  br i1 %80, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %72, %originalBB6alteredBB
  %81 = load i32, i32* @x.59
  %82 = load i32, i32* @y.60
  %83 = sub i32 %81, 1
  %84 = mul i32 %81, %83
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %82, 10
  %88 = or i1 %86, %87
  br i1 %88, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %89, !dbg !3637

89:                                               ; preds = %originalBBpart28
  %90 = load i32, i32* @x.59
  %91 = load i32, i32* @y.60
  %92 = sub i32 %90, 1
  %93 = mul i32 %90, %92
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %91, 10
  %97 = or i1 %95, %96
  br i1 %97, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %89, %originalBB10alteredBB
  %98 = load i64, i64* %11, align 8, !dbg !3638
  %99 = add i64 %98, 1, !dbg !3638
  store i64 %99, i64* %11, align 8, !dbg !3638
  %100 = load i32, i32* @x.59
  %101 = load i32, i32* @y.60
  %102 = sub i32 %100, 1
  %103 = mul i32 %100, %102
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %101, 10
  %107 = or i1 %105, %106
  br i1 %107, label %originalBBpart220, label %originalBB10alteredBB

originalBBpart220:                                ; preds = %originalBB10
  br label %13, !dbg !3639, !llvm.loop !3640

108:                                              ; preds = %70
  %109 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8, !dbg !3642
  %110 = load i8*, i8** %7, align 8, !dbg !3643
  %111 = load i8*, i8** %8, align 8, !dbg !3644
  %112 = load i8*, i8** %9, align 8, !dbg !3645
  %113 = getelementptr inbounds [10 x i8*], [10 x i8*]* %12, i64 0, i64 0, !dbg !3646
  %114 = load i64, i64* %11, align 8, !dbg !3647
  call void @version_etc_arn(%struct._IO_FILE* %109, i8* %110, i8* %111, i8* %112, i8** %113, i64 %114), !dbg !3648
  ret void, !dbg !3649

originalBBalteredBB:                              ; preds = %originalBB, %16
  %115 = load %struct.__va_list_tag*, %struct.__va_list_tag** %10, align 8, !dbg !3631
  %116 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %115, i32 0, i32 0, !dbg !3631
  %117 = load i32, i32* %116, align 8, !dbg !3631
  %118 = icmp ule i32 %117, 40, !dbg !3631
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %48
  %119 = load i8*, i8** %49, align 8, !dbg !3631
  %120 = load i64, i64* %11, align 8, !dbg !3632
  %121 = getelementptr inbounds [10 x i8*], [10 x i8*]* %12, i64 0, i64 %120, !dbg !3633
  store i8* %119, i8** %121, align 8, !dbg !3634
  %122 = icmp ne i8* %119, null, !dbg !3635
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %72
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %89
  %123 = load i64, i64* %11, align 8, !dbg !3638
  %_ = sub i64 0, %123
  %gen = add i64 %_, 1
  %_11 = sub i64 %123, 1
  %gen12 = mul i64 %_11, 1
  %_13 = sub i64 0, %123
  %gen14 = add i64 %_13, 1
  %_15 = sub i64 0, %123
  %gen16 = add i64 %_15, 1
  %_17 = sub i64 %123, 1
  %gen18 = mul i64 %_17, 1
  %124 = add i64 %123, 1, !dbg !3638
  store i64 %124, i64* %11, align 8, !dbg !3638
  br label %originalBB10
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @version_etc(%struct._IO_FILE*, i8*, i8*, i8*, ...) #4 !dbg !3650 {
  %5 = load i32, i32* @x.61
  %6 = load i32, i32* @y.62
  %7 = sub i32 %5, 1
  %8 = mul i32 %5, %7
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %6, 10
  %12 = or i1 %10, %11
  br i1 %12, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %4, %originalBBalteredBB
  %13 = alloca %struct._IO_FILE*, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i8*, align 8
  %16 = alloca i8*, align 8
  %17 = alloca [1 x %struct.__va_list_tag], align 16
  store %struct._IO_FILE* %0, %struct._IO_FILE** %13, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %13, metadata !3653, metadata !DIExpression()), !dbg !3654
  store i8* %1, i8** %14, align 8
  call void @llvm.dbg.declare(metadata i8** %14, metadata !3655, metadata !DIExpression()), !dbg !3656
  store i8* %2, i8** %15, align 8
  call void @llvm.dbg.declare(metadata i8** %15, metadata !3657, metadata !DIExpression()), !dbg !3658
  store i8* %3, i8** %16, align 8
  call void @llvm.dbg.declare(metadata i8** %16, metadata !3659, metadata !DIExpression()), !dbg !3660
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %17, metadata !3661, metadata !DIExpression()), !dbg !3667
  %18 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %17, i64 0, i64 0, !dbg !3668
  %19 = bitcast %struct.__va_list_tag* %18 to i8*, !dbg !3668
  call void @llvm.va_start(i8* %19), !dbg !3668
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8, !dbg !3669
  %21 = load i8*, i8** %14, align 8, !dbg !3670
  %22 = load i8*, i8** %15, align 8, !dbg !3671
  %23 = load i8*, i8** %16, align 8, !dbg !3672
  %24 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %17, i64 0, i64 0, !dbg !3673
  call void @version_etc_va(%struct._IO_FILE* %20, i8* %21, i8* %22, i8* %23, %struct.__va_list_tag* %24), !dbg !3674
  %25 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %17, i64 0, i64 0, !dbg !3675
  %26 = bitcast %struct.__va_list_tag* %25 to i8*, !dbg !3675
  call void @llvm.va_end(i8* %26), !dbg !3675
  %27 = load i32, i32* @x.61
  %28 = load i32, i32* @y.62
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret void, !dbg !3676

originalBBalteredBB:                              ; preds = %originalBB, %4
  %35 = alloca %struct._IO_FILE*, align 8
  %36 = alloca i8*, align 8
  %37 = alloca i8*, align 8
  %38 = alloca i8*, align 8
  %39 = alloca [1 x %struct.__va_list_tag], align 16
  store %struct._IO_FILE* %0, %struct._IO_FILE** %35, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %35, metadata !3677, metadata !DIExpression()), !dbg !3654
  store i8* %1, i8** %36, align 8
  call void @llvm.dbg.declare(metadata i8** %36, metadata !3716, metadata !DIExpression()), !dbg !3656
  store i8* %2, i8** %37, align 8
  call void @llvm.dbg.declare(metadata i8** %37, metadata !3717, metadata !DIExpression()), !dbg !3658
  store i8* %3, i8** %38, align 8
  call void @llvm.dbg.declare(metadata i8** %38, metadata !3718, metadata !DIExpression()), !dbg !3660
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %39, metadata !3719, metadata !DIExpression()), !dbg !3667
  %40 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %39, i64 0, i64 0, !dbg !3668
  %41 = bitcast %struct.__va_list_tag* %40 to i8*, !dbg !3668
  call void @llvm.va_start(i8* %41), !dbg !3668
  %42 = load %struct._IO_FILE*, %struct._IO_FILE** %35, align 8, !dbg !3669
  %43 = load i8*, i8** %36, align 8, !dbg !3670
  %44 = load i8*, i8** %37, align 8, !dbg !3671
  %45 = load i8*, i8** %38, align 8, !dbg !3672
  %46 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %39, i64 0, i64 0, !dbg !3673
  call void @version_etc_va(%struct._IO_FILE* %42, i8* %43, i8* %44, i8* %45, %struct.__va_list_tag* %46), !dbg !3674
  %47 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %39, i64 0, i64 0, !dbg !3675
  %48 = bitcast %struct.__va_list_tag* %47 to i8*, !dbg !3675
  call void @llvm.va_end(i8* %48), !dbg !3675
  br label %originalBB
}

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #10

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #10

; Function Attrs: noinline nounwind optnone uwtable
define internal noalias i8* @xmalloc(i64) #4 !dbg !3730 {
  %2 = alloca i64, align 8
  %3 = alloca i8*, align 8
  store i64 %0, i64* %2, align 8
  call void @llvm.dbg.declare(metadata i64* %2, metadata !3734, metadata !DIExpression()), !dbg !3735
  call void @llvm.dbg.declare(metadata i8** %3, metadata !3736, metadata !DIExpression()), !dbg !3737
  %4 = load i64, i64* %2, align 8, !dbg !3738
  %5 = call noalias i8* @malloc(i64 %4) #10, !dbg !3739
  store i8* %5, i8** %3, align 8, !dbg !3737
  %6 = load i8*, i8** %3, align 8, !dbg !3740
  %7 = icmp ne i8* %6, null, !dbg !3740
  br i1 %7, label %28, label %8, !dbg !3742

8:                                                ; preds = %1
  %9 = load i32, i32* @x.63
  %10 = load i32, i32* @y.64
  %11 = sub i32 %9, 1
  %12 = mul i32 %9, %11
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = icmp slt i32 %10, 10
  %16 = or i1 %14, %15
  br i1 %16, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %8, %originalBBalteredBB
  %17 = load i64, i64* %2, align 8, !dbg !3743
  %18 = icmp ne i64 %17, 0, !dbg !3744
  %19 = load i32, i32* @x.63
  %20 = load i32, i32* @y.64
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %18, label %27, label %28, !dbg !3745

27:                                               ; preds = %originalBBpart2
  call void @xalloc_die() #14, !dbg !3746
  unreachable, !dbg !3746

28:                                               ; preds = %originalBBpart2, %1
  %29 = load i8*, i8** %3, align 8, !dbg !3747
  ret i8* %29, !dbg !3748

originalBBalteredBB:                              ; preds = %originalBB, %8
  %30 = load i64, i64* %2, align 8, !dbg !3743
  %31 = icmp ne i64 %30, 0, !dbg !3744
  br label %originalBB
}

; Function Attrs: nounwind
declare dso_local noalias i8* @malloc(i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @xrealloc(i8*, i64) #4 !dbg !3749 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !3752, metadata !DIExpression()), !dbg !3753
  store i64 %1, i64* %5, align 8
  call void @llvm.dbg.declare(metadata i64* %5, metadata !3754, metadata !DIExpression()), !dbg !3755
  %6 = load i64, i64* %5, align 8, !dbg !3756
  %7 = icmp ne i64 %6, 0, !dbg !3756
  br i1 %7, label %29, label %8, !dbg !3758

8:                                                ; preds = %2
  %9 = load i8*, i8** %4, align 8, !dbg !3759
  %10 = icmp ne i8* %9, null, !dbg !3759
  br i1 %10, label %11, label %29, !dbg !3760

11:                                               ; preds = %8
  %12 = load i32, i32* @x.65
  %13 = load i32, i32* @y.66
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %11, %originalBBalteredBB
  %20 = load i8*, i8** %4, align 8, !dbg !3761
  call void @free(i8* %20) #10, !dbg !3763
  store i8* null, i8** %3, align 8, !dbg !3764
  %21 = load i32, i32* @x.65
  %22 = load i32, i32* @y.66
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %73, !dbg !3764

29:                                               ; preds = %8, %2
  %30 = load i8*, i8** %4, align 8, !dbg !3765
  %31 = load i64, i64* %5, align 8, !dbg !3766
  %32 = call i8* @realloc(i8* %30, i64 %31) #10, !dbg !3767
  store i8* %32, i8** %4, align 8, !dbg !3768
  %33 = load i8*, i8** %4, align 8, !dbg !3769
  %34 = icmp ne i8* %33, null, !dbg !3769
  br i1 %34, label %55, label %35, !dbg !3771

35:                                               ; preds = %29
  %36 = load i64, i64* %5, align 8, !dbg !3772
  %37 = icmp ne i64 %36, 0, !dbg !3772
  br i1 %37, label %38, label %55, !dbg !3773

38:                                               ; preds = %35
  %39 = load i32, i32* @x.65
  %40 = load i32, i32* @y.66
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %38, %originalBB1alteredBB
  call void @xalloc_die() #14, !dbg !3774
  %47 = load i32, i32* @x.65
  %48 = load i32, i32* @y.66
  %49 = sub i32 %47, 1
  %50 = mul i32 %47, %49
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %48, 10
  %54 = or i1 %52, %53
  br i1 %54, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  unreachable, !dbg !3774

55:                                               ; preds = %35, %29
  %56 = load i32, i32* @x.65
  %57 = load i32, i32* @y.66
  %58 = sub i32 %56, 1
  %59 = mul i32 %56, %58
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %61, %62
  br i1 %63, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %55, %originalBB6alteredBB
  %64 = load i8*, i8** %4, align 8, !dbg !3775
  store i8* %64, i8** %3, align 8, !dbg !3776
  %65 = load i32, i32* @x.65
  %66 = load i32, i32* @y.66
  %67 = sub i32 %65, 1
  %68 = mul i32 %65, %67
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %66, 10
  %72 = or i1 %70, %71
  br i1 %72, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %73, !dbg !3776

73:                                               ; preds = %originalBBpart28, %originalBBpart2
  %74 = load i32, i32* @x.65
  %75 = load i32, i32* @y.66
  %76 = sub i32 %74, 1
  %77 = mul i32 %74, %76
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %75, 10
  %81 = or i1 %79, %80
  br i1 %81, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %73, %originalBB10alteredBB
  %82 = load i8*, i8** %3, align 8, !dbg !3777
  %83 = load i32, i32* @x.65
  %84 = load i32, i32* @y.66
  %85 = sub i32 %83, 1
  %86 = mul i32 %83, %85
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %84, 10
  %90 = or i1 %88, %89
  br i1 %90, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  ret i8* %82, !dbg !3777

originalBBalteredBB:                              ; preds = %originalBB, %11
  %91 = load i8*, i8** %4, align 8, !dbg !3761
  call void @free(i8* %91) #10, !dbg !3763
  store i8* null, i8** %3, align 8, !dbg !3764
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %38
  call void @xalloc_die() #14, !dbg !3774
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %55
  %92 = load i8*, i8** %4, align 8, !dbg !3775
  store i8* %92, i8** %3, align 8, !dbg !3776
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %73
  %93 = load i8*, i8** %3, align 8, !dbg !3777
  br label %originalBB10
}

; Function Attrs: nounwind
declare dso_local i8* @realloc(i8*, i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal noalias i8* @xcharalloc(i64) #4 !dbg !3778 {
  %2 = alloca i64, align 8
  store i64 %0, i64* %2, align 8
  call void @llvm.dbg.declare(metadata i64* %2, metadata !3782, metadata !DIExpression()), !dbg !3783
  %3 = load i64, i64* %2, align 8, !dbg !3784
  %4 = call noalias i8* @xmalloc(i64 %3), !dbg !3784
  ret i8* %4, !dbg !3785
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @xmemdup(i8*, i64) #4 !dbg !3786 {
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !3791, metadata !DIExpression()), !dbg !3792
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata i64* %4, metadata !3793, metadata !DIExpression()), !dbg !3794
  %5 = load i64, i64* %4, align 8, !dbg !3795
  %6 = call noalias i8* @xmalloc(i64 %5), !dbg !3796
  %7 = load i8*, i8** %3, align 8, !dbg !3797
  %8 = load i64, i64* %4, align 8, !dbg !3798
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %6, i8* align 1 %7, i64 %8, i1 false), !dbg !3799
  ret i8* %6, !dbg !3800
}

; Function Attrs: noinline nounwind optnone uwtable
define internal noalias i8* @xstrdup(i8*) #4 !dbg !3801 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !3802, metadata !DIExpression()), !dbg !3803
  %3 = load i8*, i8** %2, align 8, !dbg !3804
  %4 = load i8*, i8** %2, align 8, !dbg !3805
  %5 = call i64 @strlen(i8* %4) #13, !dbg !3806
  %6 = add i64 %5, 1, !dbg !3807
  %7 = call i8* @xmemdup(i8* %3, i64 %6), !dbg !3808
  ret i8* %7, !dbg !3809
}

; Function Attrs: noinline noreturn nounwind optnone uwtable
define internal void @xalloc_die() #0 !dbg !3810 {
  %1 = load volatile i32, i32* @exit_failure, align 4, !dbg !3812
  %2 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1.136, i64 0, i64 0)) #10, !dbg !3813
  call void (i32, i32, i8*, ...) @error(i32 %1, i32 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.137, i64 0, i64 0), i8* %2), !dbg !3814
  call void @abort() #12, !dbg !3815
  unreachable, !dbg !3815
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @xgetgroups(i8*, i32, i32**) #4 !dbg !3816 {
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32**, align 8
  %7 = alloca i32, align 4
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !3821, metadata !DIExpression()), !dbg !3822
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !3823, metadata !DIExpression()), !dbg !3824
  store i32** %2, i32*** %6, align 8
  call void @llvm.dbg.declare(metadata i32*** %6, metadata !3825, metadata !DIExpression()), !dbg !3826
  call void @llvm.dbg.declare(metadata i32* %7, metadata !3827, metadata !DIExpression()), !dbg !3828
  %8 = load i8*, i8** %4, align 8, !dbg !3829
  %9 = load i32, i32* %5, align 4, !dbg !3830
  %10 = load i32**, i32*** %6, align 8, !dbg !3831
  %11 = call i32 @mgetgroups(i8* %8, i32 %9, i32** %10), !dbg !3832
  store i32 %11, i32* %7, align 4, !dbg !3828
  %12 = load i32, i32* %7, align 4, !dbg !3833
  %13 = icmp eq i32 %12, -1, !dbg !3835
  br i1 %13, label %14, label %19, !dbg !3836

14:                                               ; preds = %3
  %15 = call i32* @__errno_location() #15, !dbg !3837
  %16 = load i32, i32* %15, align 4, !dbg !3837
  %17 = icmp eq i32 %16, 12, !dbg !3838
  br i1 %17, label %18, label %19, !dbg !3839

18:                                               ; preds = %14
  call void @xalloc_die() #14, !dbg !3840
  unreachable, !dbg !3840

19:                                               ; preds = %14, %3
  %20 = load i32, i32* %7, align 4, !dbg !3841
  ret i32 %20, !dbg !3842
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @xstrtoul(i8*, i8**, i32, i64*, i8*) #4 !dbg !3843 {
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca i8**, align 8
  %9 = alloca i32, align 4
  %10 = alloca i64*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i8**, align 8
  %14 = alloca i64, align 8
  %15 = alloca i32, align 4
  %16 = alloca i8*, align 8
  %17 = alloca i8, align 1
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  store i8* %0, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !3849, metadata !DIExpression()), !dbg !3850
  store i8** %1, i8*** %8, align 8
  call void @llvm.dbg.declare(metadata i8*** %8, metadata !3851, metadata !DIExpression()), !dbg !3852
  store i32 %2, i32* %9, align 4
  call void @llvm.dbg.declare(metadata i32* %9, metadata !3853, metadata !DIExpression()), !dbg !3854
  store i64* %3, i64** %10, align 8
  call void @llvm.dbg.declare(metadata i64** %10, metadata !3855, metadata !DIExpression()), !dbg !3856
  store i8* %4, i8** %11, align 8
  call void @llvm.dbg.declare(metadata i8** %11, metadata !3857, metadata !DIExpression()), !dbg !3858
  call void @llvm.dbg.declare(metadata i8** %12, metadata !3859, metadata !DIExpression()), !dbg !3860
  call void @llvm.dbg.declare(metadata i8*** %13, metadata !3861, metadata !DIExpression()), !dbg !3862
  call void @llvm.dbg.declare(metadata i64* %14, metadata !3863, metadata !DIExpression()), !dbg !3864
  call void @llvm.dbg.declare(metadata i32* %15, metadata !3865, metadata !DIExpression()), !dbg !3866
  store i32 0, i32* %15, align 4, !dbg !3866
  %21 = load i32, i32* %9, align 4, !dbg !3867
  %22 = icmp sle i32 0, %21, !dbg !3867
  br i1 %22, label %23, label %43, !dbg !3867

23:                                               ; preds = %5
  %24 = load i32, i32* %9, align 4, !dbg !3867
  %25 = icmp sle i32 %24, 36, !dbg !3867
  br i1 %25, label %26, label %43, !dbg !3870

26:                                               ; preds = %23
  %27 = load i32, i32* @x.77
  %28 = load i32, i32* @y.78
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %26, %originalBBalteredBB
  %35 = load i32, i32* @x.77
  %36 = load i32, i32* @y.78
  %37 = sub i32 %35, 1
  %38 = mul i32 %35, %37
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %40, %41
  br i1 %42, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %60, !dbg !3870

43:                                               ; preds = %23, %5
  %44 = load i32, i32* @x.77
  %45 = load i32, i32* @y.78
  %46 = sub i32 %44, 1
  %47 = mul i32 %44, %46
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %45, 10
  %51 = or i1 %49, %50
  br i1 %51, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %43, %originalBB1alteredBB
  call void @__assert_fail(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.142, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.143, i64 0, i64 0), i32 84, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @__PRETTY_FUNCTION__.xstrtoul, i64 0, i64 0)) #12, !dbg !3867
  %52 = load i32, i32* @x.77
  %53 = load i32, i32* @y.78
  %54 = sub i32 %52, 1
  %55 = mul i32 %52, %54
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %53, 10
  %59 = or i1 %57, %58
  br i1 %59, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  unreachable, !dbg !3867

60:                                               ; preds = %originalBBpart2
  %61 = load i32, i32* @x.77
  %62 = load i32, i32* @y.78
  %63 = sub i32 %61, 1
  %64 = mul i32 %61, %63
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %62, 10
  %68 = or i1 %66, %67
  br i1 %68, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %60, %originalBB6alteredBB
  %69 = load i8**, i8*** %8, align 8, !dbg !3871
  %70 = icmp ne i8** %69, null, !dbg !3871
  %71 = load i32, i32* @x.77
  %72 = load i32, i32* @y.78
  %73 = sub i32 %71, 1
  %74 = mul i32 %71, %73
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %72, 10
  %78 = or i1 %76, %77
  br i1 %78, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %70, label %79, label %97, !dbg !3871

79:                                               ; preds = %originalBBpart28
  %80 = load i32, i32* @x.77
  %81 = load i32, i32* @y.78
  %82 = sub i32 %80, 1
  %83 = mul i32 %80, %82
  %84 = urem i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %81, 10
  %87 = or i1 %85, %86
  br i1 %87, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %79, %originalBB10alteredBB
  %88 = load i8**, i8*** %8, align 8, !dbg !3872
  %89 = load i32, i32* @x.77
  %90 = load i32, i32* @y.78
  %91 = sub i32 %89, 1
  %92 = mul i32 %89, %91
  %93 = urem i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %90, 10
  %96 = or i1 %94, %95
  br i1 %96, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %98, !dbg !3871

97:                                               ; preds = %originalBBpart28
  br label %98, !dbg !3871

98:                                               ; preds = %97, %originalBBpart212
  %99 = phi i8** [ %88, %originalBBpart212 ], [ %12, %97 ], !dbg !3871
  store i8** %99, i8*** %13, align 8, !dbg !3873
  %100 = call i32* @__errno_location() #15, !dbg !3874
  store i32 0, i32* %100, align 4, !dbg !3875
  call void @llvm.dbg.declare(metadata i8** %16, metadata !3876, metadata !DIExpression()), !dbg !3879
  %101 = load i8*, i8** %7, align 8, !dbg !3880
  store i8* %101, i8** %16, align 8, !dbg !3879
  call void @llvm.dbg.declare(metadata i8* %17, metadata !3881, metadata !DIExpression()), !dbg !3882
  %102 = load i8*, i8** %16, align 8, !dbg !3883
  %103 = load i8, i8* %102, align 1, !dbg !3884
  store i8 %103, i8* %17, align 1, !dbg !3882
  br label %104, !dbg !3885

104:                                              ; preds = %131, %98
  %105 = load i32, i32* @x.77
  %106 = load i32, i32* @y.78
  %107 = sub i32 %105, 1
  %108 = mul i32 %105, %107
  %109 = urem i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %106, 10
  %112 = or i1 %110, %111
  br i1 %112, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %104, %originalBB14alteredBB
  %113 = call i16** @__ctype_b_loc() #15, !dbg !3886
  %114 = load i16*, i16** %113, align 8, !dbg !3886
  %115 = load i8, i8* %17, align 1, !dbg !3886
  %116 = zext i8 %115 to i32, !dbg !3886
  %117 = sext i32 %116 to i64, !dbg !3886
  %118 = getelementptr inbounds i16, i16* %114, i64 %117, !dbg !3886
  %119 = load i16, i16* %118, align 2, !dbg !3886
  %120 = zext i16 %119 to i32, !dbg !3886
  %121 = and i32 %120, 8192, !dbg !3886
  %122 = icmp ne i32 %121, 0, !dbg !3885
  %123 = load i32, i32* @x.77
  %124 = load i32, i32* @y.78
  %125 = sub i32 %123, 1
  %126 = mul i32 %123, %125
  %127 = urem i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %124, 10
  %130 = or i1 %128, %129
  br i1 %130, label %originalBBpart227, label %originalBB14alteredBB

originalBBpart227:                                ; preds = %originalBB14
  br i1 %122, label %131, label %135, !dbg !3885

131:                                              ; preds = %originalBBpart227
  %132 = load i8*, i8** %16, align 8, !dbg !3887
  %133 = getelementptr inbounds i8, i8* %132, i32 1, !dbg !3887
  store i8* %133, i8** %16, align 8, !dbg !3887
  %134 = load i8, i8* %133, align 1, !dbg !3888
  store i8 %134, i8* %17, align 1, !dbg !3889
  br label %104, !dbg !3885, !llvm.loop !3890

135:                                              ; preds = %originalBBpart227
  %136 = load i8, i8* %17, align 1, !dbg !3892
  %137 = zext i8 %136 to i32, !dbg !3892
  %138 = icmp eq i32 %137, 45, !dbg !3894
  br i1 %138, label %139, label %140, !dbg !3895

139:                                              ; preds = %135
  store i32 4, i32* %6, align 4, !dbg !3896
  br label %525, !dbg !3896

140:                                              ; preds = %135
  %141 = load i8*, i8** %7, align 8, !dbg !3897
  %142 = load i8**, i8*** %13, align 8, !dbg !3898
  %143 = load i32, i32* %9, align 4, !dbg !3899
  %144 = call i64 @strtoul(i8* %141, i8** %142, i32 %143) #10, !dbg !3900
  store i64 %144, i64* %14, align 8, !dbg !3901
  %145 = load i8**, i8*** %13, align 8, !dbg !3902
  %146 = load i8*, i8** %145, align 8, !dbg !3904
  %147 = load i8*, i8** %7, align 8, !dbg !3905
  %148 = icmp eq i8* %146, %147, !dbg !3906
  br i1 %148, label %149, label %185, !dbg !3907

149:                                              ; preds = %140
  %150 = load i8*, i8** %11, align 8, !dbg !3908
  %151 = icmp ne i8* %150, null, !dbg !3908
  br i1 %151, label %152, label %183, !dbg !3911

152:                                              ; preds = %149
  %153 = load i8**, i8*** %13, align 8, !dbg !3912
  %154 = load i8*, i8** %153, align 8, !dbg !3913
  %155 = load i8, i8* %154, align 1, !dbg !3914
  %156 = sext i8 %155 to i32, !dbg !3914
  %157 = icmp ne i32 %156, 0, !dbg !3914
  br i1 %157, label %158, label %183, !dbg !3915

158:                                              ; preds = %152
  %159 = load i32, i32* @x.77
  %160 = load i32, i32* @y.78
  %161 = sub i32 %159, 1
  %162 = mul i32 %159, %161
  %163 = urem i32 %162, 2
  %164 = icmp eq i32 %163, 0
  %165 = icmp slt i32 %160, 10
  %166 = or i1 %164, %165
  br i1 %166, label %originalBB29, label %originalBB29alteredBB

originalBB29:                                     ; preds = %158, %originalBB29alteredBB
  %167 = load i8*, i8** %11, align 8, !dbg !3916
  %168 = load i8**, i8*** %13, align 8, !dbg !3917
  %169 = load i8*, i8** %168, align 8, !dbg !3918
  %170 = load i8, i8* %169, align 1, !dbg !3919
  %171 = sext i8 %170 to i32, !dbg !3919
  %172 = call i8* @strchr(i8* %167, i32 %171) #13, !dbg !3920
  %173 = icmp ne i8* %172, null, !dbg !3920
  %174 = load i32, i32* @x.77
  %175 = load i32, i32* @y.78
  %176 = sub i32 %174, 1
  %177 = mul i32 %174, %176
  %178 = urem i32 %177, 2
  %179 = icmp eq i32 %178, 0
  %180 = icmp slt i32 %175, 10
  %181 = or i1 %179, %180
  br i1 %181, label %originalBBpart231, label %originalBB29alteredBB

originalBBpart231:                                ; preds = %originalBB29
  br i1 %173, label %182, label %183, !dbg !3921

182:                                              ; preds = %originalBBpart231
  store i64 1, i64* %14, align 8, !dbg !3922
  br label %184, !dbg !3923

183:                                              ; preds = %originalBBpart231, %152, %149
  store i32 4, i32* %6, align 4, !dbg !3924
  br label %525, !dbg !3924

184:                                              ; preds = %182
  br label %228, !dbg !3925

185:                                              ; preds = %140
  %186 = load i32, i32* @x.77
  %187 = load i32, i32* @y.78
  %188 = sub i32 %186, 1
  %189 = mul i32 %186, %188
  %190 = urem i32 %189, 2
  %191 = icmp eq i32 %190, 0
  %192 = icmp slt i32 %187, 10
  %193 = or i1 %191, %192
  br i1 %193, label %originalBB33, label %originalBB33alteredBB

originalBB33:                                     ; preds = %185, %originalBB33alteredBB
  %194 = call i32* @__errno_location() #15, !dbg !3926
  %195 = load i32, i32* %194, align 4, !dbg !3926
  %196 = icmp ne i32 %195, 0, !dbg !3928
  %197 = load i32, i32* @x.77
  %198 = load i32, i32* @y.78
  %199 = sub i32 %197, 1
  %200 = mul i32 %197, %199
  %201 = urem i32 %200, 2
  %202 = icmp eq i32 %201, 0
  %203 = icmp slt i32 %198, 10
  %204 = or i1 %202, %203
  br i1 %204, label %originalBBpart235, label %originalBB33alteredBB

originalBBpart235:                                ; preds = %originalBB33
  br i1 %196, label %205, label %227, !dbg !3929

205:                                              ; preds = %originalBBpart235
  %206 = call i32* @__errno_location() #15, !dbg !3930
  %207 = load i32, i32* %206, align 4, !dbg !3930
  %208 = icmp ne i32 %207, 34, !dbg !3933
  br i1 %208, label %209, label %210, !dbg !3934

209:                                              ; preds = %205
  store i32 4, i32* %6, align 4, !dbg !3935
  br label %525, !dbg !3935

210:                                              ; preds = %205
  %211 = load i32, i32* @x.77
  %212 = load i32, i32* @y.78
  %213 = sub i32 %211, 1
  %214 = mul i32 %211, %213
  %215 = urem i32 %214, 2
  %216 = icmp eq i32 %215, 0
  %217 = icmp slt i32 %212, 10
  %218 = or i1 %216, %217
  br i1 %218, label %originalBB37, label %originalBB37alteredBB

originalBB37:                                     ; preds = %210, %originalBB37alteredBB
  store i32 1, i32* %15, align 4, !dbg !3936
  %219 = load i32, i32* @x.77
  %220 = load i32, i32* @y.78
  %221 = sub i32 %219, 1
  %222 = mul i32 %219, %221
  %223 = urem i32 %222, 2
  %224 = icmp eq i32 %223, 0
  %225 = icmp slt i32 %220, 10
  %226 = or i1 %224, %225
  br i1 %226, label %originalBBpart239, label %originalBB37alteredBB

originalBBpart239:                                ; preds = %originalBB37
  br label %227, !dbg !3937

227:                                              ; preds = %originalBBpart239, %originalBBpart235
  br label %228

228:                                              ; preds = %227, %184
  %229 = load i8*, i8** %11, align 8, !dbg !3938
  %230 = icmp ne i8* %229, null, !dbg !3938
  br i1 %230, label %235, label %231, !dbg !3940

231:                                              ; preds = %228
  %232 = load i64, i64* %14, align 8, !dbg !3941
  %233 = load i64*, i64** %10, align 8, !dbg !3943
  store i64 %232, i64* %233, align 8, !dbg !3944
  %234 = load i32, i32* %15, align 4, !dbg !3945
  store i32 %234, i32* %6, align 4, !dbg !3946
  br label %525, !dbg !3946

235:                                              ; preds = %228
  %236 = load i32, i32* @x.77
  %237 = load i32, i32* @y.78
  %238 = sub i32 %236, 1
  %239 = mul i32 %236, %238
  %240 = urem i32 %239, 2
  %241 = icmp eq i32 %240, 0
  %242 = icmp slt i32 %237, 10
  %243 = or i1 %241, %242
  br i1 %243, label %originalBB41, label %originalBB41alteredBB

originalBB41:                                     ; preds = %235, %originalBB41alteredBB
  %244 = load i8**, i8*** %13, align 8, !dbg !3947
  %245 = load i8*, i8** %244, align 8, !dbg !3949
  %246 = load i8, i8* %245, align 1, !dbg !3950
  %247 = sext i8 %246 to i32, !dbg !3950
  %248 = icmp ne i32 %247, 0, !dbg !3951
  %249 = load i32, i32* @x.77
  %250 = load i32, i32* @y.78
  %251 = sub i32 %249, 1
  %252 = mul i32 %249, %251
  %253 = urem i32 %252, 2
  %254 = icmp eq i32 %253, 0
  %255 = icmp slt i32 %250, 10
  %256 = or i1 %254, %255
  br i1 %256, label %originalBBpart243, label %originalBB41alteredBB

originalBBpart243:                                ; preds = %originalBB41
  br i1 %248, label %257, label %505, !dbg !3952

257:                                              ; preds = %originalBBpart243
  call void @llvm.dbg.declare(metadata i32* %18, metadata !3953, metadata !DIExpression()), !dbg !3955
  store i32 1024, i32* %18, align 4, !dbg !3955
  call void @llvm.dbg.declare(metadata i32* %19, metadata !3956, metadata !DIExpression()), !dbg !3957
  store i32 1, i32* %19, align 4, !dbg !3957
  call void @llvm.dbg.declare(metadata i32* %20, metadata !3958, metadata !DIExpression()), !dbg !3959
  %258 = load i8*, i8** %11, align 8, !dbg !3960
  %259 = load i8**, i8*** %13, align 8, !dbg !3962
  %260 = load i8*, i8** %259, align 8, !dbg !3963
  %261 = load i8, i8* %260, align 1, !dbg !3964
  %262 = sext i8 %261 to i32, !dbg !3964
  %263 = call i8* @strchr(i8* %258, i32 %262) #13, !dbg !3965
  %264 = icmp ne i8* %263, null, !dbg !3965
  br i1 %264, label %270, label %265, !dbg !3966

265:                                              ; preds = %257
  %266 = load i64, i64* %14, align 8, !dbg !3967
  %267 = load i64*, i64** %10, align 8, !dbg !3969
  store i64 %266, i64* %267, align 8, !dbg !3970
  %268 = load i32, i32* %15, align 4, !dbg !3971
  %269 = or i32 %268, 2, !dbg !3972
  store i32 %269, i32* %6, align 4, !dbg !3973
  br label %525, !dbg !3973

270:                                              ; preds = %257
  %271 = load i32, i32* @x.77
  %272 = load i32, i32* @y.78
  %273 = sub i32 %271, 1
  %274 = mul i32 %271, %273
  %275 = urem i32 %274, 2
  %276 = icmp eq i32 %275, 0
  %277 = icmp slt i32 %272, 10
  %278 = or i1 %276, %277
  br i1 %278, label %originalBB45, label %originalBB45alteredBB

originalBB45:                                     ; preds = %270, %originalBB45alteredBB
  %279 = load i8**, i8*** %13, align 8, !dbg !3974
  %280 = load i8*, i8** %279, align 8, !dbg !3975
  %281 = load i8, i8* %280, align 1, !dbg !3976
  %282 = sext i8 %281 to i32, !dbg !3976
  %283 = load i32, i32* @x.77
  %284 = load i32, i32* @y.78
  %285 = sub i32 %283, 1
  %286 = mul i32 %283, %285
  %287 = urem i32 %286, 2
  %288 = icmp eq i32 %287, 0
  %289 = icmp slt i32 %284, 10
  %290 = or i1 %288, %289
  br i1 %290, label %originalBBpart247, label %originalBB45alteredBB

originalBBpart247:                                ; preds = %originalBB45
  switch i32 %282, label %351 [
    i32 69, label %291
    i32 71, label %291
    i32 103, label %291
    i32 107, label %291
    i32 75, label %291
    i32 77, label %291
    i32 109, label %291
    i32 80, label %291
    i32 84, label %291
    i32 116, label %291
    i32 89, label %291
    i32 90, label %291
  ], !dbg !3977

291:                                              ; preds = %originalBBpart247, %originalBBpart247, %originalBBpart247, %originalBBpart247, %originalBBpart247, %originalBBpart247, %originalBBpart247, %originalBBpart247, %originalBBpart247, %originalBBpart247, %originalBBpart247, %originalBBpart247
  %292 = load i8*, i8** %11, align 8, !dbg !3978
  %293 = call i8* @strchr(i8* %292, i32 48) #13, !dbg !3981
  %294 = icmp ne i8* %293, null, !dbg !3981
  br i1 %294, label %295, label %350, !dbg !3982

295:                                              ; preds = %291
  %296 = load i8**, i8*** %13, align 8, !dbg !3983
  %297 = getelementptr inbounds i8*, i8** %296, i64 0, !dbg !3983
  %298 = load i8*, i8** %297, align 8, !dbg !3983
  %299 = getelementptr inbounds i8, i8* %298, i64 1, !dbg !3983
  %300 = load i8, i8* %299, align 1, !dbg !3983
  %301 = sext i8 %300 to i32, !dbg !3983
  switch i32 %301, label %349 [
    i32 105, label %302
    i32 66, label %330
    i32 68, label %330
  ], !dbg !3984

302:                                              ; preds = %295
  %303 = load i32, i32* @x.77
  %304 = load i32, i32* @y.78
  %305 = sub i32 %303, 1
  %306 = mul i32 %303, %305
  %307 = urem i32 %306, 2
  %308 = icmp eq i32 %307, 0
  %309 = icmp slt i32 %304, 10
  %310 = or i1 %308, %309
  br i1 %310, label %originalBB49, label %originalBB49alteredBB

originalBB49:                                     ; preds = %302, %originalBB49alteredBB
  %311 = load i8**, i8*** %13, align 8, !dbg !3985
  %312 = getelementptr inbounds i8*, i8** %311, i64 0, !dbg !3985
  %313 = load i8*, i8** %312, align 8, !dbg !3985
  %314 = getelementptr inbounds i8, i8* %313, i64 2, !dbg !3985
  %315 = load i8, i8* %314, align 1, !dbg !3985
  %316 = sext i8 %315 to i32, !dbg !3985
  %317 = icmp eq i32 %316, 66, !dbg !3988
  %318 = load i32, i32* @x.77
  %319 = load i32, i32* @y.78
  %320 = sub i32 %318, 1
  %321 = mul i32 %318, %320
  %322 = urem i32 %321, 2
  %323 = icmp eq i32 %322, 0
  %324 = icmp slt i32 %319, 10
  %325 = or i1 %323, %324
  br i1 %325, label %originalBBpart251, label %originalBB49alteredBB

originalBBpart251:                                ; preds = %originalBB49
  br i1 %317, label %326, label %329, !dbg !3989

326:                                              ; preds = %originalBBpart251
  %327 = load i32, i32* %19, align 4, !dbg !3990
  %328 = add nsw i32 %327, 2, !dbg !3990
  store i32 %328, i32* %19, align 4, !dbg !3990
  br label %329, !dbg !3991

329:                                              ; preds = %326, %originalBBpart251
  br label %349, !dbg !3992

330:                                              ; preds = %295, %295
  %331 = load i32, i32* @x.77
  %332 = load i32, i32* @y.78
  %333 = sub i32 %331, 1
  %334 = mul i32 %331, %333
  %335 = urem i32 %334, 2
  %336 = icmp eq i32 %335, 0
  %337 = icmp slt i32 %332, 10
  %338 = or i1 %336, %337
  br i1 %338, label %originalBB53, label %originalBB53alteredBB

originalBB53:                                     ; preds = %330, %originalBB53alteredBB
  store i32 1000, i32* %18, align 4, !dbg !3993
  %339 = load i32, i32* %19, align 4, !dbg !3994
  %340 = add nsw i32 %339, 1, !dbg !3994
  store i32 %340, i32* %19, align 4, !dbg !3994
  %341 = load i32, i32* @x.77
  %342 = load i32, i32* @y.78
  %343 = sub i32 %341, 1
  %344 = mul i32 %341, %343
  %345 = urem i32 %344, 2
  %346 = icmp eq i32 %345, 0
  %347 = icmp slt i32 %342, 10
  %348 = or i1 %346, %347
  br i1 %348, label %originalBBpart259, label %originalBB53alteredBB

originalBBpart259:                                ; preds = %originalBB53
  br label %349, !dbg !3995

349:                                              ; preds = %originalBBpart259, %329, %295
  br label %350, !dbg !3996

350:                                              ; preds = %349, %291
  br label %351, !dbg !3997

351:                                              ; preds = %350, %originalBBpart247
  %352 = load i32, i32* @x.77
  %353 = load i32, i32* @y.78
  %354 = sub i32 %352, 1
  %355 = mul i32 %352, %354
  %356 = urem i32 %355, 2
  %357 = icmp eq i32 %356, 0
  %358 = icmp slt i32 %353, 10
  %359 = or i1 %357, %358
  br i1 %359, label %originalBB61, label %originalBB61alteredBB

originalBB61:                                     ; preds = %351, %originalBB61alteredBB
  %360 = load i8**, i8*** %13, align 8, !dbg !3998
  %361 = load i8*, i8** %360, align 8, !dbg !3999
  %362 = load i8, i8* %361, align 1, !dbg !4000
  %363 = sext i8 %362 to i32, !dbg !4000
  %364 = load i32, i32* @x.77
  %365 = load i32, i32* @y.78
  %366 = sub i32 %364, 1
  %367 = mul i32 %364, %366
  %368 = urem i32 %367, 2
  %369 = icmp eq i32 %368, 0
  %370 = icmp slt i32 %365, 10
  %371 = or i1 %369, %370
  br i1 %371, label %originalBBpart263, label %originalBB61alteredBB

originalBBpart263:                                ; preds = %originalBB61
  switch i32 %363, label %451 [
    i32 98, label %372
    i32 66, label %374
    i32 99, label %376
    i32 69, label %377
    i32 71, label %380
    i32 103, label %380
    i32 107, label %399
    i32 75, label %399
    i32 77, label %402
    i32 109, label %402
    i32 80, label %405
    i32 84, label %408
    i32 116, label %408
    i32 119, label %427
    i32 89, label %445
    i32 90, label %448
  ], !dbg !4001

372:                                              ; preds = %originalBBpart263
  %373 = call i32 @bkm_scale(i64* %14, i32 512), !dbg !4002
  store i32 %373, i32* %20, align 4, !dbg !4004
  br label %472, !dbg !4005

374:                                              ; preds = %originalBBpart263
  %375 = call i32 @bkm_scale(i64* %14, i32 1024), !dbg !4006
  store i32 %375, i32* %20, align 4, !dbg !4007
  br label %472, !dbg !4008

376:                                              ; preds = %originalBBpart263
  store i32 0, i32* %20, align 4, !dbg !4009
  br label %472, !dbg !4010

377:                                              ; preds = %originalBBpart263
  %378 = load i32, i32* %18, align 4, !dbg !4011
  %379 = call i32 @bkm_scale_by_power(i64* %14, i32 %378, i32 6), !dbg !4012
  store i32 %379, i32* %20, align 4, !dbg !4013
  br label %472, !dbg !4014

380:                                              ; preds = %originalBBpart263, %originalBBpart263
  %381 = load i32, i32* @x.77
  %382 = load i32, i32* @y.78
  %383 = sub i32 %381, 1
  %384 = mul i32 %381, %383
  %385 = urem i32 %384, 2
  %386 = icmp eq i32 %385, 0
  %387 = icmp slt i32 %382, 10
  %388 = or i1 %386, %387
  br i1 %388, label %originalBB65, label %originalBB65alteredBB

originalBB65:                                     ; preds = %380, %originalBB65alteredBB
  %389 = load i32, i32* %18, align 4, !dbg !4015
  %390 = call i32 @bkm_scale_by_power(i64* %14, i32 %389, i32 3), !dbg !4016
  store i32 %390, i32* %20, align 4, !dbg !4017
  %391 = load i32, i32* @x.77
  %392 = load i32, i32* @y.78
  %393 = sub i32 %391, 1
  %394 = mul i32 %391, %393
  %395 = urem i32 %394, 2
  %396 = icmp eq i32 %395, 0
  %397 = icmp slt i32 %392, 10
  %398 = or i1 %396, %397
  br i1 %398, label %originalBBpart267, label %originalBB65alteredBB

originalBBpart267:                                ; preds = %originalBB65
  br label %472, !dbg !4018

399:                                              ; preds = %originalBBpart263, %originalBBpart263
  %400 = load i32, i32* %18, align 4, !dbg !4019
  %401 = call i32 @bkm_scale_by_power(i64* %14, i32 %400, i32 1), !dbg !4020
  store i32 %401, i32* %20, align 4, !dbg !4021
  br label %472, !dbg !4022

402:                                              ; preds = %originalBBpart263, %originalBBpart263
  %403 = load i32, i32* %18, align 4, !dbg !4023
  %404 = call i32 @bkm_scale_by_power(i64* %14, i32 %403, i32 2), !dbg !4024
  store i32 %404, i32* %20, align 4, !dbg !4025
  br label %472, !dbg !4026

405:                                              ; preds = %originalBBpart263
  %406 = load i32, i32* %18, align 4, !dbg !4027
  %407 = call i32 @bkm_scale_by_power(i64* %14, i32 %406, i32 5), !dbg !4028
  store i32 %407, i32* %20, align 4, !dbg !4029
  br label %472, !dbg !4030

408:                                              ; preds = %originalBBpart263, %originalBBpart263
  %409 = load i32, i32* @x.77
  %410 = load i32, i32* @y.78
  %411 = sub i32 %409, 1
  %412 = mul i32 %409, %411
  %413 = urem i32 %412, 2
  %414 = icmp eq i32 %413, 0
  %415 = icmp slt i32 %410, 10
  %416 = or i1 %414, %415
  br i1 %416, label %originalBB69, label %originalBB69alteredBB

originalBB69:                                     ; preds = %408, %originalBB69alteredBB
  %417 = load i32, i32* %18, align 4, !dbg !4031
  %418 = call i32 @bkm_scale_by_power(i64* %14, i32 %417, i32 4), !dbg !4032
  store i32 %418, i32* %20, align 4, !dbg !4033
  %419 = load i32, i32* @x.77
  %420 = load i32, i32* @y.78
  %421 = sub i32 %419, 1
  %422 = mul i32 %419, %421
  %423 = urem i32 %422, 2
  %424 = icmp eq i32 %423, 0
  %425 = icmp slt i32 %420, 10
  %426 = or i1 %424, %425
  br i1 %426, label %originalBBpart271, label %originalBB69alteredBB

originalBBpart271:                                ; preds = %originalBB69
  br label %472, !dbg !4034

427:                                              ; preds = %originalBBpart263
  %428 = load i32, i32* @x.77
  %429 = load i32, i32* @y.78
  %430 = sub i32 %428, 1
  %431 = mul i32 %428, %430
  %432 = urem i32 %431, 2
  %433 = icmp eq i32 %432, 0
  %434 = icmp slt i32 %429, 10
  %435 = or i1 %433, %434
  br i1 %435, label %originalBB73, label %originalBB73alteredBB

originalBB73:                                     ; preds = %427, %originalBB73alteredBB
  %436 = call i32 @bkm_scale(i64* %14, i32 2), !dbg !4035
  store i32 %436, i32* %20, align 4, !dbg !4036
  %437 = load i32, i32* @x.77
  %438 = load i32, i32* @y.78
  %439 = sub i32 %437, 1
  %440 = mul i32 %437, %439
  %441 = urem i32 %440, 2
  %442 = icmp eq i32 %441, 0
  %443 = icmp slt i32 %438, 10
  %444 = or i1 %442, %443
  br i1 %444, label %originalBBpart275, label %originalBB73alteredBB

originalBBpart275:                                ; preds = %originalBB73
  br label %472, !dbg !4037

445:                                              ; preds = %originalBBpart263
  %446 = load i32, i32* %18, align 4, !dbg !4038
  %447 = call i32 @bkm_scale_by_power(i64* %14, i32 %446, i32 8), !dbg !4039
  store i32 %447, i32* %20, align 4, !dbg !4040
  br label %472, !dbg !4041

448:                                              ; preds = %originalBBpart263
  %449 = load i32, i32* %18, align 4, !dbg !4042
  %450 = call i32 @bkm_scale_by_power(i64* %14, i32 %449, i32 7), !dbg !4043
  store i32 %450, i32* %20, align 4, !dbg !4044
  br label %472, !dbg !4045

451:                                              ; preds = %originalBBpart263
  %452 = load i32, i32* @x.77
  %453 = load i32, i32* @y.78
  %454 = sub i32 %452, 1
  %455 = mul i32 %452, %454
  %456 = urem i32 %455, 2
  %457 = icmp eq i32 %456, 0
  %458 = icmp slt i32 %453, 10
  %459 = or i1 %457, %458
  br i1 %459, label %originalBB77, label %originalBB77alteredBB

originalBB77:                                     ; preds = %451, %originalBB77alteredBB
  %460 = load i64, i64* %14, align 8, !dbg !4046
  %461 = load i64*, i64** %10, align 8, !dbg !4047
  store i64 %460, i64* %461, align 8, !dbg !4048
  %462 = load i32, i32* %15, align 4, !dbg !4049
  %463 = or i32 %462, 2, !dbg !4050
  store i32 %463, i32* %6, align 4, !dbg !4051
  %464 = load i32, i32* @x.77
  %465 = load i32, i32* @y.78
  %466 = sub i32 %464, 1
  %467 = mul i32 %464, %466
  %468 = urem i32 %467, 2
  %469 = icmp eq i32 %468, 0
  %470 = icmp slt i32 %465, 10
  %471 = or i1 %469, %470
  br i1 %471, label %originalBBpart287, label %originalBB77alteredBB

originalBBpart287:                                ; preds = %originalBB77
  br label %525, !dbg !4051

472:                                              ; preds = %448, %445, %originalBBpart275, %originalBBpart271, %405, %402, %399, %originalBBpart267, %377, %376, %374, %372
  %473 = load i32, i32* %20, align 4, !dbg !4052
  %474 = load i32, i32* %15, align 4, !dbg !4053
  %475 = or i32 %474, %473, !dbg !4053
  store i32 %475, i32* %15, align 4, !dbg !4053
  %476 = load i32, i32* %19, align 4, !dbg !4054
  %477 = load i8**, i8*** %13, align 8, !dbg !4055
  %478 = load i8*, i8** %477, align 8, !dbg !4056
  %479 = sext i32 %476 to i64, !dbg !4056
  %480 = getelementptr inbounds i8, i8* %478, i64 %479, !dbg !4056
  store i8* %480, i8** %477, align 8, !dbg !4056
  %481 = load i8**, i8*** %13, align 8, !dbg !4057
  %482 = load i8*, i8** %481, align 8, !dbg !4059
  %483 = load i8, i8* %482, align 1, !dbg !4060
  %484 = icmp ne i8 %483, 0, !dbg !4060
  br i1 %484, label %485, label %504, !dbg !4061

485:                                              ; preds = %472
  %486 = load i32, i32* @x.77
  %487 = load i32, i32* @y.78
  %488 = sub i32 %486, 1
  %489 = mul i32 %486, %488
  %490 = urem i32 %489, 2
  %491 = icmp eq i32 %490, 0
  %492 = icmp slt i32 %487, 10
  %493 = or i1 %491, %492
  br i1 %493, label %originalBB89, label %originalBB89alteredBB

originalBB89:                                     ; preds = %485, %originalBB89alteredBB
  %494 = load i32, i32* %15, align 4, !dbg !4062
  %495 = or i32 %494, 2, !dbg !4062
  store i32 %495, i32* %15, align 4, !dbg !4062
  %496 = load i32, i32* @x.77
  %497 = load i32, i32* @y.78
  %498 = sub i32 %496, 1
  %499 = mul i32 %496, %498
  %500 = urem i32 %499, 2
  %501 = icmp eq i32 %500, 0
  %502 = icmp slt i32 %497, 10
  %503 = or i1 %501, %502
  br i1 %503, label %originalBBpart294, label %originalBB89alteredBB

originalBBpart294:                                ; preds = %originalBB89
  br label %504, !dbg !4063

504:                                              ; preds = %originalBBpart294, %472
  br label %505, !dbg !4064

505:                                              ; preds = %504, %originalBBpart243
  %506 = load i32, i32* @x.77
  %507 = load i32, i32* @y.78
  %508 = sub i32 %506, 1
  %509 = mul i32 %506, %508
  %510 = urem i32 %509, 2
  %511 = icmp eq i32 %510, 0
  %512 = icmp slt i32 %507, 10
  %513 = or i1 %511, %512
  br i1 %513, label %originalBB96, label %originalBB96alteredBB

originalBB96:                                     ; preds = %505, %originalBB96alteredBB
  %514 = load i64, i64* %14, align 8, !dbg !4065
  %515 = load i64*, i64** %10, align 8, !dbg !4066
  store i64 %514, i64* %515, align 8, !dbg !4067
  %516 = load i32, i32* %15, align 4, !dbg !4068
  store i32 %516, i32* %6, align 4, !dbg !4069
  %517 = load i32, i32* @x.77
  %518 = load i32, i32* @y.78
  %519 = sub i32 %517, 1
  %520 = mul i32 %517, %519
  %521 = urem i32 %520, 2
  %522 = icmp eq i32 %521, 0
  %523 = icmp slt i32 %518, 10
  %524 = or i1 %522, %523
  br i1 %524, label %originalBBpart298, label %originalBB96alteredBB

originalBBpart298:                                ; preds = %originalBB96
  br label %525, !dbg !4069

525:                                              ; preds = %originalBBpart298, %originalBBpart287, %265, %231, %209, %183, %139
  %526 = load i32, i32* %6, align 4, !dbg !4070
  ret i32 %526, !dbg !4070

originalBBalteredBB:                              ; preds = %originalBB, %26
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %43
  call void @__assert_fail(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.142, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.143, i64 0, i64 0), i32 84, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @__PRETTY_FUNCTION__.xstrtoul, i64 0, i64 0)) #12, !dbg !3867
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %60
  %527 = load i8**, i8*** %8, align 8, !dbg !3871
  %528 = icmp ne i8** %527, null, !dbg !3871
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %79
  %529 = load i8**, i8*** %8, align 8, !dbg !3872
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %104
  %530 = call i16** @__ctype_b_loc() #15, !dbg !3886
  %531 = load i16*, i16** %530, align 8, !dbg !3886
  %532 = load i8, i8* %17, align 1, !dbg !3886
  %533 = zext i8 %532 to i32, !dbg !3886
  %534 = sext i32 %533 to i64, !dbg !3886
  %535 = getelementptr inbounds i16, i16* %531, i64 %534, !dbg !3886
  %536 = load i16, i16* %535, align 2, !dbg !3886
  %537 = zext i16 %536 to i32, !dbg !3886
  %_ = sub i32 0, %537
  %gen = add i32 %_, 8192
  %_15 = sub i32 %537, 8192
  %gen16 = mul i32 %_15, 8192
  %_17 = shl i32 %537, 8192
  %_18 = sub i32 %537, 8192
  %gen19 = mul i32 %_18, 8192
  %_20 = sub i32 %537, 8192
  %gen21 = mul i32 %_20, 8192
  %_22 = shl i32 %537, 8192
  %_23 = sub i32 %537, 8192
  %gen24 = mul i32 %_23, 8192
  %538 = and i32 %537, 8192, !dbg !3886
  %539 = icmp ne i32 %538, 0, !dbg !3885
  br label %originalBB14

originalBB29alteredBB:                            ; preds = %originalBB29, %158
  %540 = load i8*, i8** %11, align 8, !dbg !3916
  %541 = load i8**, i8*** %13, align 8, !dbg !3917
  %542 = load i8*, i8** %541, align 8, !dbg !3918
  %543 = load i8, i8* %542, align 1, !dbg !3919
  %544 = sext i8 %543 to i32, !dbg !3919
  %545 = call i8* @strchr(i8* %540, i32 %544) #13, !dbg !3920
  %546 = icmp ne i8* %545, null, !dbg !3920
  br label %originalBB29

originalBB33alteredBB:                            ; preds = %originalBB33, %185
  %547 = call i32* @__errno_location() #15, !dbg !3926
  %548 = load i32, i32* %547, align 4, !dbg !3926
  %549 = icmp ne i32 %548, 0, !dbg !3928
  br label %originalBB33

originalBB37alteredBB:                            ; preds = %originalBB37, %210
  store i32 1, i32* %15, align 4, !dbg !3936
  br label %originalBB37

originalBB41alteredBB:                            ; preds = %originalBB41, %235
  %550 = load i8**, i8*** %13, align 8, !dbg !3947
  %551 = load i8*, i8** %550, align 8, !dbg !3949
  %552 = load i8, i8* %551, align 1, !dbg !3950
  %553 = sext i8 %552 to i32, !dbg !3950
  %554 = icmp ne i32 %553, 0, !dbg !3951
  br label %originalBB41

originalBB45alteredBB:                            ; preds = %originalBB45, %270
  %555 = load i8**, i8*** %13, align 8, !dbg !3974
  %556 = load i8*, i8** %555, align 8, !dbg !3975
  %557 = load i8, i8* %556, align 1, !dbg !3976
  %558 = sext i8 %557 to i32, !dbg !3976
  br label %originalBB45

originalBB49alteredBB:                            ; preds = %originalBB49, %302
  %559 = load i8**, i8*** %13, align 8, !dbg !3985
  %560 = getelementptr inbounds i8*, i8** %559, i64 0, !dbg !3985
  %561 = load i8*, i8** %560, align 8, !dbg !3985
  %562 = getelementptr inbounds i8, i8* %561, i64 2, !dbg !3985
  %563 = load i8, i8* %562, align 1, !dbg !3985
  %564 = sext i8 %563 to i32, !dbg !3985
  %565 = icmp eq i32 %564, 66, !dbg !3988
  br label %originalBB49

originalBB53alteredBB:                            ; preds = %originalBB53, %330
  store i32 1000, i32* %18, align 4, !dbg !3993
  %566 = load i32, i32* %19, align 4, !dbg !3994
  %_54 = sub i32 0, %566
  %gen55 = add i32 %_54, 1
  %_56 = sub i32 %566, 1
  %gen57 = mul i32 %_56, 1
  %567 = add nsw i32 %566, 1, !dbg !3994
  store i32 %567, i32* %19, align 4, !dbg !3994
  br label %originalBB53

originalBB61alteredBB:                            ; preds = %originalBB61, %351
  %568 = load i8**, i8*** %13, align 8, !dbg !3998
  %569 = load i8*, i8** %568, align 8, !dbg !3999
  %570 = load i8, i8* %569, align 1, !dbg !4000
  %571 = sext i8 %570 to i32, !dbg !4000
  br label %originalBB61

originalBB65alteredBB:                            ; preds = %originalBB65, %380
  %572 = load i32, i32* %18, align 4, !dbg !4015
  %573 = call i32 @bkm_scale_by_power(i64* %14, i32 %572, i32 3), !dbg !4016
  store i32 %573, i32* %20, align 4, !dbg !4017
  br label %originalBB65

originalBB69alteredBB:                            ; preds = %originalBB69, %408
  %574 = load i32, i32* %18, align 4, !dbg !4031
  %575 = call i32 @bkm_scale_by_power(i64* %14, i32 %574, i32 4), !dbg !4032
  store i32 %575, i32* %20, align 4, !dbg !4033
  br label %originalBB69

originalBB73alteredBB:                            ; preds = %originalBB73, %427
  %576 = call i32 @bkm_scale(i64* %14, i32 2), !dbg !4035
  store i32 %576, i32* %20, align 4, !dbg !4036
  br label %originalBB73

originalBB77alteredBB:                            ; preds = %originalBB77, %451
  %577 = load i64, i64* %14, align 8, !dbg !4046
  %578 = load i64*, i64** %10, align 8, !dbg !4047
  store i64 %577, i64* %578, align 8, !dbg !4048
  %579 = load i32, i32* %15, align 4, !dbg !4049
  %_78 = shl i32 %579, 2
  %_79 = sub i32 0, %579
  %gen80 = add i32 %_79, 2
  %_81 = shl i32 %579, 2
  %_82 = sub i32 0, %579
  %gen83 = add i32 %_82, 2
  %_84 = sub i32 0, %579
  %gen85 = add i32 %_84, 2
  %580 = or i32 %579, 2, !dbg !4050
  store i32 %580, i32* %6, align 4, !dbg !4051
  br label %originalBB77

originalBB89alteredBB:                            ; preds = %originalBB89, %485
  %581 = load i32, i32* %15, align 4, !dbg !4062
  %_90 = shl i32 %581, 2
  %_91 = sub i32 0, %581
  %gen92 = add i32 %_91, 2
  %582 = or i32 %581, 2, !dbg !4062
  store i32 %582, i32* %15, align 4, !dbg !4062
  br label %originalBB89

originalBB96alteredBB:                            ; preds = %originalBB96, %505
  %583 = load i64, i64* %14, align 8, !dbg !4065
  %584 = load i64*, i64** %10, align 8, !dbg !4066
  store i64 %583, i64* %584, align 8, !dbg !4067
  %585 = load i32, i32* %15, align 4, !dbg !4068
  store i32 %585, i32* %6, align 4, !dbg !4069
  br label %originalBB96
}

; Function Attrs: noreturn nounwind
declare dso_local void @__assert_fail(i8*, i8*, i32, i8*) #5

; Function Attrs: nounwind
declare dso_local i64 @strtoul(i8*, i8**, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @bkm_scale(i64*, i32) #4 !dbg !4071 {
  %3 = alloca i32, align 4
  %4 = alloca i64*, align 8
  %5 = alloca i32, align 4
  store i64* %0, i64** %4, align 8
  call void @llvm.dbg.declare(metadata i64** %4, metadata !4074, metadata !DIExpression()), !dbg !4075
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !4076, metadata !DIExpression()), !dbg !4077
  %6 = load i32, i32* %5, align 4, !dbg !4078
  %7 = sext i32 %6 to i64, !dbg !4078
  %8 = udiv i64 -1, %7, !dbg !4080
  %9 = load i64*, i64** %4, align 8, !dbg !4081
  %10 = load i64, i64* %9, align 8, !dbg !4082
  %11 = icmp ult i64 %8, %10, !dbg !4083
  br i1 %11, label %12, label %14, !dbg !4084

12:                                               ; preds = %2
  %13 = load i64*, i64** %4, align 8, !dbg !4085
  store i64 -1, i64* %13, align 8, !dbg !4087
  store i32 1, i32* %3, align 4, !dbg !4088
  br label %20, !dbg !4088

14:                                               ; preds = %2
  %15 = load i32, i32* %5, align 4, !dbg !4089
  %16 = sext i32 %15 to i64, !dbg !4089
  %17 = load i64*, i64** %4, align 8, !dbg !4090
  %18 = load i64, i64* %17, align 8, !dbg !4091
  %19 = mul i64 %18, %16, !dbg !4091
  store i64 %19, i64* %17, align 8, !dbg !4091
  store i32 0, i32* %3, align 4, !dbg !4092
  br label %20, !dbg !4092

20:                                               ; preds = %14, %12
  %21 = load i32, i32* %3, align 4, !dbg !4093
  ret i32 %21, !dbg !4093
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @bkm_scale_by_power(i64*, i32, i32) #4 !dbg !4094 {
  %4 = load i32, i32* @x.81
  %5 = load i32, i32* @y.82
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %3, %originalBBalteredBB
  %12 = alloca i64*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  store i64* %0, i64** %12, align 8
  call void @llvm.dbg.declare(metadata i64** %12, metadata !4097, metadata !DIExpression()), !dbg !4098
  store i32 %1, i32* %13, align 4
  call void @llvm.dbg.declare(metadata i32* %13, metadata !4099, metadata !DIExpression()), !dbg !4100
  store i32 %2, i32* %14, align 4
  call void @llvm.dbg.declare(metadata i32* %14, metadata !4101, metadata !DIExpression()), !dbg !4102
  call void @llvm.dbg.declare(metadata i32* %15, metadata !4103, metadata !DIExpression()), !dbg !4104
  store i32 0, i32* %15, align 4, !dbg !4104
  %16 = load i32, i32* @x.81
  %17 = load i32, i32* @y.82
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %24, !dbg !4105

24:                                               ; preds = %originalBBpart24, %originalBBpart2
  %25 = load i32, i32* %14, align 4, !dbg !4106
  %26 = add nsw i32 %25, -1, !dbg !4106
  store i32 %26, i32* %14, align 4, !dbg !4106
  %27 = icmp ne i32 %25, 0, !dbg !4105
  br i1 %27, label %28, label %50, !dbg !4105

28:                                               ; preds = %24
  %29 = load i32, i32* @x.81
  %30 = load i32, i32* @y.82
  %31 = sub i32 %29, 1
  %32 = mul i32 %29, %31
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %34, %35
  br i1 %36, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %28, %originalBB1alteredBB
  %37 = load i64*, i64** %12, align 8, !dbg !4107
  %38 = load i32, i32* %13, align 4, !dbg !4108
  %39 = call i32 @bkm_scale(i64* %37, i32 %38), !dbg !4109
  %40 = load i32, i32* %15, align 4, !dbg !4110
  %41 = or i32 %40, %39, !dbg !4110
  store i32 %41, i32* %15, align 4, !dbg !4110
  %42 = load i32, i32* @x.81
  %43 = load i32, i32* @y.82
  %44 = sub i32 %42, 1
  %45 = mul i32 %42, %44
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %47, %48
  br i1 %49, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %24, !dbg !4105, !llvm.loop !4111

50:                                               ; preds = %24
  %51 = load i32, i32* %15, align 4, !dbg !4113
  ret i32 %51, !dbg !4114

originalBBalteredBB:                              ; preds = %originalBB, %3
  %52 = alloca i64*, align 8
  %53 = alloca i32, align 4
  %54 = alloca i32, align 4
  %55 = alloca i32, align 4
  store i64* %0, i64** %52, align 8
  call void @llvm.dbg.declare(metadata i64** %52, metadata !4115, metadata !DIExpression()), !dbg !4098
  store i32 %1, i32* %53, align 4
  call void @llvm.dbg.declare(metadata i32* %53, metadata !4118, metadata !DIExpression()), !dbg !4100
  store i32 %2, i32* %54, align 4
  call void @llvm.dbg.declare(metadata i32* %54, metadata !4119, metadata !DIExpression()), !dbg !4102
  call void @llvm.dbg.declare(metadata i32* %55, metadata !4120, metadata !DIExpression()), !dbg !4104
  store i32 0, i32* %55, align 4, !dbg !4104
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %28
  %56 = load i64*, i64** %12, align 8, !dbg !4107
  %57 = load i32, i32* %13, align 4, !dbg !4108
  %58 = call i32 @bkm_scale(i64* %56, i32 %57), !dbg !4109
  %59 = load i32, i32* %15, align 4, !dbg !4110
  %_ = shl i32 %59, %58
  %_2 = sub i32 0, %59
  %gen = add i32 %_2, %58
  %60 = or i32 %59, %58, !dbg !4110
  store i32 %60, i32* %15, align 4, !dbg !4110
  br label %originalBB1
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @rpl_mbrtowc(i32*, i8*, i64, %struct.__mbstate_t*) #4 !dbg !4121 {
  %5 = alloca i64, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca %struct.__mbstate_t*, align 8
  %10 = alloca i64, align 8
  %11 = alloca i32, align 4
  %12 = alloca i8, align 1
  store i32* %0, i32** %6, align 8
  call void @llvm.dbg.declare(metadata i32** %6, metadata !4137, metadata !DIExpression()), !dbg !4138
  store i8* %1, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !4139, metadata !DIExpression()), !dbg !4140
  store i64 %2, i64* %8, align 8
  call void @llvm.dbg.declare(metadata i64* %8, metadata !4141, metadata !DIExpression()), !dbg !4142
  store %struct.__mbstate_t* %3, %struct.__mbstate_t** %9, align 8
  call void @llvm.dbg.declare(metadata %struct.__mbstate_t** %9, metadata !4143, metadata !DIExpression()), !dbg !4144
  call void @llvm.dbg.declare(metadata i64* %10, metadata !4145, metadata !DIExpression()), !dbg !4146
  call void @llvm.dbg.declare(metadata i32* %11, metadata !4147, metadata !DIExpression()), !dbg !4148
  %13 = load i32*, i32** %6, align 8, !dbg !4149
  %14 = icmp ne i32* %13, null, !dbg !4149
  br i1 %14, label %16, label %15, !dbg !4151

15:                                               ; preds = %4
  store i32* %11, i32** %6, align 8, !dbg !4152
  br label %16, !dbg !4153

16:                                               ; preds = %15, %4
  %17 = load i32, i32* @x.83
  %18 = load i32, i32* @y.84
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %16, %originalBBalteredBB
  %25 = load i32*, i32** %6, align 8, !dbg !4154
  %26 = load i8*, i8** %7, align 8, !dbg !4155
  %27 = load i64, i64* %8, align 8, !dbg !4156
  %28 = load %struct.__mbstate_t*, %struct.__mbstate_t** %9, align 8, !dbg !4157
  %29 = call i64 @mbrtowc(i32* %25, i8* %26, i64 %27, %struct.__mbstate_t* %28) #10, !dbg !4158
  store i64 %29, i64* %10, align 8, !dbg !4159
  %30 = load i64, i64* %10, align 8, !dbg !4160
  %31 = icmp ule i64 -2, %30, !dbg !4162
  %32 = load i32, i32* @x.83
  %33 = load i32, i32* @y.84
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %31, label %40, label %51, !dbg !4163

40:                                               ; preds = %originalBBpart2
  %41 = load i64, i64* %8, align 8, !dbg !4164
  %42 = icmp ne i64 %41, 0, !dbg !4165
  br i1 %42, label %43, label %51, !dbg !4166

43:                                               ; preds = %40
  %44 = call zeroext i1 @hard_locale(i32 0), !dbg !4167
  br i1 %44, label %51, label %45, !dbg !4168

45:                                               ; preds = %43
  call void @llvm.dbg.declare(metadata i8* %12, metadata !4169, metadata !DIExpression()), !dbg !4171
  %46 = load i8*, i8** %7, align 8, !dbg !4172
  %47 = load i8, i8* %46, align 1, !dbg !4173
  store i8 %47, i8* %12, align 1, !dbg !4171
  %48 = load i8, i8* %12, align 1, !dbg !4174
  %49 = zext i8 %48 to i32, !dbg !4174
  %50 = load i32*, i32** %6, align 8, !dbg !4175
  store i32 %49, i32* %50, align 4, !dbg !4176
  store i64 1, i64* %5, align 8, !dbg !4177
  br label %69, !dbg !4177

51:                                               ; preds = %43, %40, %originalBBpart2
  %52 = load i32, i32* @x.83
  %53 = load i32, i32* @y.84
  %54 = sub i32 %52, 1
  %55 = mul i32 %52, %54
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %53, 10
  %59 = or i1 %57, %58
  br i1 %59, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %51, %originalBB1alteredBB
  %60 = load i64, i64* %10, align 8, !dbg !4178
  store i64 %60, i64* %5, align 8, !dbg !4179
  %61 = load i32, i32* @x.83
  %62 = load i32, i32* @y.84
  %63 = sub i32 %61, 1
  %64 = mul i32 %61, %63
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %62, 10
  %68 = or i1 %66, %67
  br i1 %68, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %69, !dbg !4179

69:                                               ; preds = %originalBBpart24, %45
  %70 = load i64, i64* %5, align 8, !dbg !4180
  ret i64 %70, !dbg !4180

originalBBalteredBB:                              ; preds = %originalBB, %16
  %71 = load i32*, i32** %6, align 8, !dbg !4154
  %72 = load i8*, i8** %7, align 8, !dbg !4155
  %73 = load i64, i64* %8, align 8, !dbg !4156
  %74 = load %struct.__mbstate_t*, %struct.__mbstate_t** %9, align 8, !dbg !4157
  %75 = call i64 @mbrtowc(i32* %71, i8* %72, i64 %73, %struct.__mbstate_t* %74) #10, !dbg !4158
  store i64 %75, i64* %10, align 8, !dbg !4159
  %76 = load i64, i64* %10, align 8, !dbg !4160
  %77 = icmp ule i64 -2, %76, !dbg !4162
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %51
  %78 = load i64, i64* %10, align 8, !dbg !4178
  store i64 %78, i64* %5, align 8, !dbg !4179
  br label %originalBB1
}

; Function Attrs: nounwind
declare dso_local i64 @mbrtowc(i32*, i8*, i64, %struct.__mbstate_t*) #2

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @c_strcasecmp(i8*, i8*) #11 !dbg !4181 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8, align 1
  %9 = alloca i8, align 1
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !4185, metadata !DIExpression()), !dbg !4186
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !4187, metadata !DIExpression()), !dbg !4188
  call void @llvm.dbg.declare(metadata i8** %6, metadata !4189, metadata !DIExpression()), !dbg !4190
  %10 = load i8*, i8** %4, align 8, !dbg !4191
  store i8* %10, i8** %6, align 8, !dbg !4190
  call void @llvm.dbg.declare(metadata i8** %7, metadata !4192, metadata !DIExpression()), !dbg !4193
  %11 = load i8*, i8** %5, align 8, !dbg !4194
  store i8* %11, i8** %7, align 8, !dbg !4193
  call void @llvm.dbg.declare(metadata i8* %8, metadata !4195, metadata !DIExpression()), !dbg !4196
  call void @llvm.dbg.declare(metadata i8* %9, metadata !4197, metadata !DIExpression()), !dbg !4198
  %12 = load i8*, i8** %6, align 8, !dbg !4199
  %13 = load i8*, i8** %7, align 8, !dbg !4201
  %14 = icmp eq i8* %12, %13, !dbg !4202
  br i1 %14, label %15, label %16, !dbg !4203

15:                                               ; preds = %2
  store i32 0, i32* %3, align 4, !dbg !4204
  br label %97, !dbg !4204

16:                                               ; preds = %2
  %17 = load i32, i32* @x.85
  %18 = load i32, i32* @y.86
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %16, %originalBBalteredBB
  %25 = load i32, i32* @x.85
  %26 = load i32, i32* @y.86
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %33, !dbg !4205

33:                                               ; preds = %69, %originalBBpart2
  %34 = load i32, i32* @x.85
  %35 = load i32, i32* @y.86
  %36 = sub i32 %34, 1
  %37 = mul i32 %34, %36
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %39, %40
  br i1 %41, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %33, %originalBB1alteredBB
  %42 = load i8*, i8** %6, align 8, !dbg !4206
  %43 = load i8, i8* %42, align 1, !dbg !4208
  %44 = zext i8 %43 to i32, !dbg !4208
  %45 = call i32 @c_tolower(i32 %44), !dbg !4209
  %46 = trunc i32 %45 to i8, !dbg !4209
  store i8 %46, i8* %8, align 1, !dbg !4210
  %47 = load i8*, i8** %7, align 8, !dbg !4211
  %48 = load i8, i8* %47, align 1, !dbg !4212
  %49 = zext i8 %48 to i32, !dbg !4212
  %50 = call i32 @c_tolower(i32 %49), !dbg !4213
  %51 = trunc i32 %50 to i8, !dbg !4213
  store i8 %51, i8* %9, align 1, !dbg !4214
  %52 = load i8, i8* %8, align 1, !dbg !4215
  %53 = zext i8 %52 to i32, !dbg !4215
  %54 = icmp eq i32 %53, 0, !dbg !4217
  %55 = load i32, i32* @x.85
  %56 = load i32, i32* @y.86
  %57 = sub i32 %55, 1
  %58 = mul i32 %55, %57
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %56, 10
  %62 = or i1 %60, %61
  br i1 %62, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %54, label %63, label %64, !dbg !4218

63:                                               ; preds = %originalBBpart24
  br label %75, !dbg !4219

64:                                               ; preds = %originalBBpart24
  %65 = load i8*, i8** %6, align 8, !dbg !4220
  %66 = getelementptr inbounds i8, i8* %65, i32 1, !dbg !4220
  store i8* %66, i8** %6, align 8, !dbg !4220
  %67 = load i8*, i8** %7, align 8, !dbg !4221
  %68 = getelementptr inbounds i8, i8* %67, i32 1, !dbg !4221
  store i8* %68, i8** %7, align 8, !dbg !4221
  br label %69, !dbg !4222

69:                                               ; preds = %64
  %70 = load i8, i8* %8, align 1, !dbg !4223
  %71 = zext i8 %70 to i32, !dbg !4223
  %72 = load i8, i8* %9, align 1, !dbg !4224
  %73 = zext i8 %72 to i32, !dbg !4224
  %74 = icmp eq i32 %71, %73, !dbg !4225
  br i1 %74, label %33, label %75, !dbg !4222, !llvm.loop !4226

75:                                               ; preds = %69, %63
  %76 = load i32, i32* @x.85
  %77 = load i32, i32* @y.86
  %78 = sub i32 %76, 1
  %79 = mul i32 %76, %78
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %77, 10
  %83 = or i1 %81, %82
  br i1 %83, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %75, %originalBB6alteredBB
  %84 = load i8, i8* %8, align 1, !dbg !4228
  %85 = zext i8 %84 to i32, !dbg !4228
  %86 = load i8, i8* %9, align 1, !dbg !4230
  %87 = zext i8 %86 to i32, !dbg !4230
  %88 = sub nsw i32 %85, %87, !dbg !4231
  store i32 %88, i32* %3, align 4, !dbg !4232
  %89 = load i32, i32* @x.85
  %90 = load i32, i32* @y.86
  %91 = sub i32 %89, 1
  %92 = mul i32 %89, %91
  %93 = urem i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %90, 10
  %96 = or i1 %94, %95
  br i1 %96, label %originalBBpart213, label %originalBB6alteredBB

originalBBpart213:                                ; preds = %originalBB6
  br label %97, !dbg !4232

97:                                               ; preds = %originalBBpart213, %15
  %98 = load i32, i32* @x.85
  %99 = load i32, i32* @y.86
  %100 = sub i32 %98, 1
  %101 = mul i32 %98, %100
  %102 = urem i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = icmp slt i32 %99, 10
  %105 = or i1 %103, %104
  br i1 %105, label %originalBB15, label %originalBB15alteredBB

originalBB15:                                     ; preds = %97, %originalBB15alteredBB
  %106 = load i32, i32* %3, align 4, !dbg !4233
  %107 = load i32, i32* @x.85
  %108 = load i32, i32* @y.86
  %109 = sub i32 %107, 1
  %110 = mul i32 %107, %109
  %111 = urem i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = icmp slt i32 %108, 10
  %114 = or i1 %112, %113
  br i1 %114, label %originalBBpart217, label %originalBB15alteredBB

originalBBpart217:                                ; preds = %originalBB15
  ret i32 %106, !dbg !4233

originalBBalteredBB:                              ; preds = %originalBB, %16
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %33
  %115 = load i8*, i8** %6, align 8, !dbg !4206
  %116 = load i8, i8* %115, align 1, !dbg !4208
  %117 = zext i8 %116 to i32, !dbg !4208
  %118 = call i32 @c_tolower(i32 %117), !dbg !4209
  %119 = trunc i32 %118 to i8, !dbg !4209
  store i8 %119, i8* %8, align 1, !dbg !4210
  %120 = load i8*, i8** %7, align 8, !dbg !4211
  %121 = load i8, i8* %120, align 1, !dbg !4212
  %122 = zext i8 %121 to i32, !dbg !4212
  %123 = call i32 @c_tolower(i32 %122), !dbg !4213
  %124 = trunc i32 %123 to i8, !dbg !4213
  store i8 %124, i8* %9, align 1, !dbg !4214
  %125 = load i8, i8* %8, align 1, !dbg !4215
  %126 = zext i8 %125 to i32, !dbg !4215
  %127 = icmp eq i32 %126, 0, !dbg !4217
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %75
  %128 = load i8, i8* %8, align 1, !dbg !4228
  %129 = zext i8 %128 to i32, !dbg !4228
  %130 = load i8, i8* %9, align 1, !dbg !4230
  %131 = zext i8 %130 to i32, !dbg !4230
  %_ = shl i32 %129, %131
  %_7 = shl i32 %129, %131
  %_8 = shl i32 %129, %131
  %_9 = sub i32 %129, %131
  %gen = mul i32 %_9, %131
  %_10 = sub i32 0, %129
  %gen11 = add i32 %_10, %131
  %132 = sub nsw i32 %129, %131, !dbg !4231
  store i32 %132, i32* %3, align 4, !dbg !4232
  br label %originalBB6

originalBB15alteredBB:                            ; preds = %originalBB15, %97
  %133 = load i32, i32* %3, align 4, !dbg !4233
  br label %originalBB15
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @close_stream(%struct._IO_FILE*) #4 !dbg !4234 {
  %2 = alloca i32, align 4
  %3 = alloca %struct._IO_FILE*, align 8
  %4 = alloca i8, align 1
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  store %struct._IO_FILE* %0, %struct._IO_FILE** %3, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %3, metadata !4272, metadata !DIExpression()), !dbg !4273
  call void @llvm.dbg.declare(metadata i8* %4, metadata !4274, metadata !DIExpression()), !dbg !4276
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8, !dbg !4277
  %8 = call i64 @__fpending(%struct._IO_FILE* %7) #10, !dbg !4278
  %9 = icmp ne i64 %8, 0, !dbg !4279
  %10 = zext i1 %9 to i8, !dbg !4276
  store i8 %10, i8* %4, align 1, !dbg !4276
  call void @llvm.dbg.declare(metadata i8* %5, metadata !4280, metadata !DIExpression()), !dbg !4281
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8, !dbg !4282
  %12 = call i32 @ferror_unlocked(%struct._IO_FILE* %11) #10, !dbg !4282
  %13 = icmp ne i32 %12, 0, !dbg !4283
  %14 = zext i1 %13 to i8, !dbg !4281
  store i8 %14, i8* %5, align 1, !dbg !4281
  call void @llvm.dbg.declare(metadata i8* %6, metadata !4284, metadata !DIExpression()), !dbg !4285
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8, !dbg !4286
  %16 = call i32 @rpl_fclose(%struct._IO_FILE* %15), !dbg !4287
  %17 = icmp ne i32 %16, 0, !dbg !4288
  %18 = zext i1 %17 to i8, !dbg !4285
  store i8 %18, i8* %6, align 1, !dbg !4285
  %19 = load i8, i8* %5, align 1, !dbg !4289
  %20 = trunc i8 %19 to i1, !dbg !4289
  br i1 %20, label %47, label %21, !dbg !4291

21:                                               ; preds = %1
  %22 = load i8, i8* %6, align 1, !dbg !4292
  %23 = trunc i8 %22 to i1, !dbg !4292
  br i1 %23, label %24, label %69, !dbg !4293

24:                                               ; preds = %21
  %25 = load i32, i32* @x.87
  %26 = load i32, i32* @y.88
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %24, %originalBBalteredBB
  %33 = load i8, i8* %4, align 1, !dbg !4294
  %34 = trunc i8 %33 to i1, !dbg !4294
  %35 = load i32, i32* @x.87
  %36 = load i32, i32* @y.88
  %37 = sub i32 %35, 1
  %38 = mul i32 %35, %37
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %40, %41
  br i1 %42, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %34, label %47, label %43, !dbg !4295

43:                                               ; preds = %originalBBpart2
  %44 = call i32* @__errno_location() #15, !dbg !4296
  %45 = load i32, i32* %44, align 4, !dbg !4296
  %46 = icmp ne i32 %45, 9, !dbg !4297
  br i1 %46, label %47, label %69, !dbg !4298

47:                                               ; preds = %43, %originalBBpart2, %1
  %48 = load i32, i32* @x.87
  %49 = load i32, i32* @y.88
  %50 = sub i32 %48, 1
  %51 = mul i32 %48, %50
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %53, %54
  br i1 %55, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %47, %originalBB1alteredBB
  %56 = load i8, i8* %6, align 1, !dbg !4299
  %57 = trunc i8 %56 to i1, !dbg !4299
  %58 = load i32, i32* @x.87
  %59 = load i32, i32* @y.88
  %60 = sub i32 %58, 1
  %61 = mul i32 %58, %60
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %59, 10
  %65 = or i1 %63, %64
  br i1 %65, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %57, label %68, label %66, !dbg !4302

66:                                               ; preds = %originalBBpart24
  %67 = call i32* @__errno_location() #15, !dbg !4303
  store i32 0, i32* %67, align 4, !dbg !4304
  br label %68, !dbg !4303

68:                                               ; preds = %66, %originalBBpart24
  store i32 -1, i32* %2, align 4, !dbg !4305
  br label %70, !dbg !4305

69:                                               ; preds = %43, %21
  store i32 0, i32* %2, align 4, !dbg !4306
  br label %70, !dbg !4306

70:                                               ; preds = %69, %68
  %71 = load i32, i32* %2, align 4, !dbg !4307
  ret i32 %71, !dbg !4307

originalBBalteredBB:                              ; preds = %originalBB, %24
  %72 = load i8, i8* %4, align 1, !dbg !4294
  %73 = trunc i8 %72 to i1, !dbg !4294
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %47
  %74 = load i8, i8* %6, align 1, !dbg !4299
  %75 = trunc i8 %74 to i1, !dbg !4299
  br label %originalBB1
}

; Function Attrs: nounwind
declare dso_local i64 @__fpending(%struct._IO_FILE*) #2

; Function Attrs: nounwind
declare dso_local i32 @ferror_unlocked(%struct._IO_FILE*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @hard_locale(i32) #4 !dbg !4308 {
  %2 = alloca i1, align 1
  %3 = alloca i32, align 4
  %4 = alloca [257 x i8], align 16
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !4312, metadata !DIExpression()), !dbg !4313
  call void @llvm.dbg.declare(metadata [257 x i8]* %4, metadata !4314, metadata !DIExpression()), !dbg !4318
  %5 = load i32, i32* %3, align 4, !dbg !4319
  %6 = getelementptr inbounds [257 x i8], [257 x i8]* %4, i64 0, i64 0, !dbg !4321
  %7 = call i32 @setlocale_null_r(i32 %5, i8* %6, i64 257), !dbg !4322
  %8 = icmp ne i32 %7, 0, !dbg !4322
  br i1 %8, label %9, label %10, !dbg !4323

9:                                                ; preds = %1
  store i1 false, i1* %2, align 1, !dbg !4324
  br label %21, !dbg !4324

10:                                               ; preds = %1
  %11 = getelementptr inbounds [257 x i8], [257 x i8]* %4, i64 0, i64 0, !dbg !4325
  %12 = call i32 @strcmp(i8* %11, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.152, i64 0, i64 0)) #13, !dbg !4326
  %13 = icmp eq i32 %12, 0, !dbg !4327
  br i1 %13, label %18, label %14, !dbg !4328

14:                                               ; preds = %10
  %15 = getelementptr inbounds [257 x i8], [257 x i8]* %4, i64 0, i64 0, !dbg !4329
  %16 = call i32 @strcmp(i8* %15, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.153, i64 0, i64 0)) #13, !dbg !4330
  %17 = icmp eq i32 %16, 0, !dbg !4331
  br label %18, !dbg !4328

18:                                               ; preds = %14, %10
  %19 = phi i1 [ true, %10 ], [ %17, %14 ]
  %20 = xor i1 %19, true, !dbg !4332
  store i1 %20, i1* %2, align 1, !dbg !4333
  br label %21, !dbg !4333

21:                                               ; preds = %18, %9
  %22 = load i32, i32* @x.89
  %23 = load i32, i32* @y.90
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %21, %originalBBalteredBB
  %30 = load i1, i1* %2, align 1, !dbg !4334
  %31 = load i32, i32* @x.89
  %32 = load i32, i32* @y.90
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i1 %30, !dbg !4334

originalBBalteredBB:                              ; preds = %originalBB, %21
  %39 = load i1, i1* %2, align 1, !dbg !4334
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @locale_charset() #4 !dbg !4335 {
  %1 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %1, metadata !4339, metadata !DIExpression()), !dbg !4340
  %2 = call i8* @nl_langinfo(i32 14) #10, !dbg !4341
  store i8* %2, i8** %1, align 8, !dbg !4342
  %3 = load i8*, i8** %1, align 8, !dbg !4343
  %4 = icmp eq i8* %3, null, !dbg !4345
  br i1 %4, label %5, label %6, !dbg !4346

5:                                                ; preds = %0
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.156, i64 0, i64 0), i8** %1, align 8, !dbg !4347
  br label %6, !dbg !4348

6:                                                ; preds = %5, %0
  %7 = load i8*, i8** %1, align 8, !dbg !4349
  %8 = getelementptr inbounds i8, i8* %7, i64 0, !dbg !4349
  %9 = load i8, i8* %8, align 1, !dbg !4349
  %10 = sext i8 %9 to i32, !dbg !4349
  %11 = icmp eq i32 %10, 0, !dbg !4353
  br i1 %11, label %12, label %13, !dbg !4354

12:                                               ; preds = %6
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.157, i64 0, i64 0), i8** %1, align 8, !dbg !4355
  br label %13, !dbg !4356

13:                                               ; preds = %12, %6
  %14 = load i8*, i8** %1, align 8, !dbg !4357
  ret i8* %14, !dbg !4358
}

; Function Attrs: nounwind
declare dso_local i8* @nl_langinfo(i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @mgetgroups(i8*, i32, i32**) #4 !dbg !4359 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32**, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32*, align 8
  %11 = alloca i32*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32*, align 8
  %17 = alloca i32*, align 8
  store i8* %0, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !4361, metadata !DIExpression()), !dbg !4362
  store i32 %1, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !4363, metadata !DIExpression()), !dbg !4364
  store i32** %2, i32*** %7, align 8
  call void @llvm.dbg.declare(metadata i32*** %7, metadata !4365, metadata !DIExpression()), !dbg !4366
  call void @llvm.dbg.declare(metadata i32* %8, metadata !4367, metadata !DIExpression()), !dbg !4368
  call void @llvm.dbg.declare(metadata i32* %9, metadata !4369, metadata !DIExpression()), !dbg !4370
  call void @llvm.dbg.declare(metadata i32** %10, metadata !4371, metadata !DIExpression()), !dbg !4372
  %18 = load i8*, i8** %5, align 8, !dbg !4373
  %19 = icmp ne i8* %18, null, !dbg !4373
  br i1 %19, label %20, label %81, !dbg !4375

20:                                               ; preds = %3
  store i32 10, i32* %8, align 4, !dbg !4376
  %21 = load i32, i32* %8, align 4, !dbg !4378
  %22 = sext i32 %21 to i64, !dbg !4378
  %23 = call i32* @realloc_groupbuf(i32* null, i64 %22), !dbg !4379
  store i32* %23, i32** %10, align 8, !dbg !4380
  %24 = load i32*, i32** %10, align 8, !dbg !4381
  %25 = icmp eq i32* %24, null, !dbg !4383
  br i1 %25, label %26, label %27, !dbg !4384

26:                                               ; preds = %20
  store i32 -1, i32* %4, align 4, !dbg !4385
  br label %329, !dbg !4385

27:                                               ; preds = %20
  br label %28, !dbg !4386

28:                                               ; preds = %80, %27
  call void @llvm.dbg.declare(metadata i32** %11, metadata !4387, metadata !DIExpression()), !dbg !4389
  call void @llvm.dbg.declare(metadata i32* %12, metadata !4390, metadata !DIExpression()), !dbg !4391
  %29 = load i32, i32* %8, align 4, !dbg !4392
  store i32 %29, i32* %12, align 4, !dbg !4391
  %30 = load i8*, i8** %5, align 8, !dbg !4393
  %31 = load i32, i32* %6, align 4, !dbg !4394
  %32 = load i32*, i32** %10, align 8, !dbg !4395
  %33 = call i32 @getgrouplist(i8* %30, i32 %31, i32* %32, i32* %8), !dbg !4396
  store i32 %33, i32* %9, align 4, !dbg !4397
  %34 = load i32, i32* %9, align 4, !dbg !4398
  %35 = icmp slt i32 %34, 0, !dbg !4400
  br i1 %35, label %36, label %59, !dbg !4401

36:                                               ; preds = %28
  %37 = load i32, i32* @x.93
  %38 = load i32, i32* @y.94
  %39 = sub i32 %37, 1
  %40 = mul i32 %37, %39
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %42, %43
  br i1 %44, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %36, %originalBBalteredBB
  %45 = load i32, i32* %12, align 4, !dbg !4402
  %46 = load i32, i32* %8, align 4, !dbg !4403
  %47 = icmp eq i32 %45, %46, !dbg !4404
  %48 = load i32, i32* @x.93
  %49 = load i32, i32* @y.94
  %50 = sub i32 %48, 1
  %51 = mul i32 %48, %50
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %53, %54
  br i1 %55, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %47, label %56, label %59, !dbg !4405

56:                                               ; preds = %originalBBpart2
  %57 = load i32, i32* %8, align 4, !dbg !4406
  %58 = mul nsw i32 %57, 2, !dbg !4406
  store i32 %58, i32* %8, align 4, !dbg !4406
  br label %59, !dbg !4407

59:                                               ; preds = %56, %originalBBpart2, %28
  %60 = load i32*, i32** %10, align 8, !dbg !4408
  %61 = load i32, i32* %8, align 4, !dbg !4410
  %62 = sext i32 %61 to i64, !dbg !4410
  %63 = call i32* @realloc_groupbuf(i32* %60, i64 %62), !dbg !4411
  store i32* %63, i32** %11, align 8, !dbg !4412
  %64 = icmp eq i32* %63, null, !dbg !4413
  br i1 %64, label %65, label %72, !dbg !4414

65:                                               ; preds = %59
  call void @llvm.dbg.declare(metadata i32* %13, metadata !4415, metadata !DIExpression()), !dbg !4417
  %66 = call i32* @__errno_location() #15, !dbg !4418
  %67 = load i32, i32* %66, align 4, !dbg !4418
  store i32 %67, i32* %13, align 4, !dbg !4417
  %68 = load i32*, i32** %10, align 8, !dbg !4419
  %69 = bitcast i32* %68 to i8*, !dbg !4419
  call void @free(i8* %69) #10, !dbg !4420
  %70 = load i32, i32* %13, align 4, !dbg !4421
  %71 = call i32* @__errno_location() #15, !dbg !4422
  store i32 %70, i32* %71, align 4, !dbg !4423
  store i32 -1, i32* %4, align 4, !dbg !4424
  br label %329, !dbg !4424

72:                                               ; preds = %59
  %73 = load i32*, i32** %11, align 8, !dbg !4425
  store i32* %73, i32** %10, align 8, !dbg !4426
  %74 = load i32, i32* %9, align 4, !dbg !4427
  %75 = icmp sle i32 0, %74, !dbg !4429
  br i1 %75, label %76, label %80, !dbg !4430

76:                                               ; preds = %72
  %77 = load i32*, i32** %10, align 8, !dbg !4431
  %78 = load i32**, i32*** %7, align 8, !dbg !4433
  store i32* %77, i32** %78, align 8, !dbg !4434
  %79 = load i32, i32* %8, align 4, !dbg !4435
  store i32 %79, i32* %4, align 4, !dbg !4436
  br label %329, !dbg !4436

80:                                               ; preds = %72
  br label %28, !dbg !4386, !llvm.loop !4437

81:                                               ; preds = %3
  %82 = load i32, i32* @x.93
  %83 = load i32, i32* @y.94
  %84 = sub i32 %82, 1
  %85 = mul i32 %82, %84
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %83, 10
  %89 = or i1 %87, %88
  br i1 %89, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %81, %originalBB1alteredBB
  %90 = load i8*, i8** %5, align 8, !dbg !4439
  %91 = icmp ne i8* %90, null, !dbg !4439
  %92 = load i32, i32* @x.93
  %93 = load i32, i32* @y.94
  %94 = sub i32 %92, 1
  %95 = mul i32 %92, %94
  %96 = urem i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %93, 10
  %99 = or i1 %97, %98
  br i1 %99, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %91, label %100, label %104, !dbg !4439

100:                                              ; preds = %originalBBpart24
  %101 = load i8*, i8** %5, align 8, !dbg !4440
  %102 = load i32, i32* %6, align 4, !dbg !4441
  %103 = call i32 @getugroups(i32 0, i32* null, i8* %101, i32 %102), !dbg !4442
  br label %106, !dbg !4439

104:                                              ; preds = %originalBBpart24
  %105 = call i32 @getgroups(i32 0, i32* null) #10, !dbg !4443
  br label %106, !dbg !4439

106:                                              ; preds = %104, %100
  %107 = phi i32 [ %103, %100 ], [ %105, %104 ], !dbg !4439
  store i32 %107, i32* %8, align 4, !dbg !4444
  %108 = load i32, i32* %8, align 4, !dbg !4445
  %109 = icmp slt i32 %108, 0, !dbg !4447
  br i1 %109, label %110, label %158, !dbg !4448

110:                                              ; preds = %106
  %111 = load i32, i32* @x.93
  %112 = load i32, i32* @y.94
  %113 = sub i32 %111, 1
  %114 = mul i32 %111, %113
  %115 = urem i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %112, 10
  %118 = or i1 %116, %117
  br i1 %118, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %110, %originalBB6alteredBB
  %119 = call i32* @__errno_location() #15, !dbg !4449
  %120 = load i32, i32* %119, align 4, !dbg !4449
  %121 = icmp eq i32 %120, 38, !dbg !4452
  %122 = load i32, i32* @x.93
  %123 = load i32, i32* @y.94
  %124 = sub i32 %122, 1
  %125 = mul i32 %122, %124
  %126 = urem i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = icmp slt i32 %123, 10
  %129 = or i1 %127, %128
  br i1 %129, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %121, label %130, label %157, !dbg !4453

130:                                              ; preds = %originalBBpart28
  %131 = call i32* @realloc_groupbuf(i32* null, i64 1), !dbg !4454
  store i32* %131, i32** %10, align 8, !dbg !4455
  %132 = icmp ne i32* %131, null, !dbg !4455
  br i1 %132, label %133, label %157, !dbg !4456

133:                                              ; preds = %130
  %134 = load i32, i32* @x.93
  %135 = load i32, i32* @y.94
  %136 = sub i32 %134, 1
  %137 = mul i32 %134, %136
  %138 = urem i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = icmp slt i32 %135, 10
  %141 = or i1 %139, %140
  br i1 %141, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %133, %originalBB10alteredBB
  %142 = load i32*, i32** %10, align 8, !dbg !4457
  %143 = load i32**, i32*** %7, align 8, !dbg !4459
  store i32* %142, i32** %143, align 8, !dbg !4460
  %144 = load i32, i32* %6, align 4, !dbg !4461
  %145 = load i32*, i32** %10, align 8, !dbg !4462
  store i32 %144, i32* %145, align 4, !dbg !4463
  %146 = load i32, i32* %6, align 4, !dbg !4464
  %147 = icmp ne i32 %146, -1, !dbg !4465
  %148 = zext i1 %147 to i32, !dbg !4465
  store i32 %148, i32* %4, align 4, !dbg !4466
  %149 = load i32, i32* @x.93
  %150 = load i32, i32* @y.94
  %151 = sub i32 %149, 1
  %152 = mul i32 %149, %151
  %153 = urem i32 %152, 2
  %154 = icmp eq i32 %153, 0
  %155 = icmp slt i32 %150, 10
  %156 = or i1 %154, %155
  br i1 %156, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %329, !dbg !4466

157:                                              ; preds = %130, %originalBBpart28
  store i32 -1, i32* %4, align 4, !dbg !4467
  br label %329, !dbg !4467

158:                                              ; preds = %106
  %159 = load i32, i32* %8, align 4, !dbg !4468
  %160 = icmp eq i32 %159, 0, !dbg !4470
  br i1 %160, label %167, label %161, !dbg !4471

161:                                              ; preds = %158
  %162 = load i8*, i8** %5, align 8, !dbg !4472
  %163 = icmp ne i8* %162, null, !dbg !4472
  br i1 %163, label %170, label %164, !dbg !4473

164:                                              ; preds = %161
  %165 = load i32, i32* %6, align 4, !dbg !4474
  %166 = icmp ne i32 %165, -1, !dbg !4475
  br i1 %166, label %167, label %170, !dbg !4476

167:                                              ; preds = %164, %158
  %168 = load i32, i32* %8, align 4, !dbg !4477
  %169 = add nsw i32 %168, 1, !dbg !4477
  store i32 %169, i32* %8, align 4, !dbg !4477
  br label %170, !dbg !4478

170:                                              ; preds = %167, %164, %161
  %171 = load i32, i32* %8, align 4, !dbg !4479
  %172 = sext i32 %171 to i64, !dbg !4479
  %173 = call i32* @realloc_groupbuf(i32* null, i64 %172), !dbg !4480
  store i32* %173, i32** %10, align 8, !dbg !4481
  %174 = load i32*, i32** %10, align 8, !dbg !4482
  %175 = icmp eq i32* %174, null, !dbg !4484
  br i1 %175, label %176, label %177, !dbg !4485

176:                                              ; preds = %170
  store i32 -1, i32* %4, align 4, !dbg !4486
  br label %329, !dbg !4486

177:                                              ; preds = %170
  %178 = load i8*, i8** %5, align 8, !dbg !4487
  %179 = icmp ne i8* %178, null, !dbg !4487
  br i1 %179, label %180, label %186, !dbg !4487

180:                                              ; preds = %177
  %181 = load i32, i32* %8, align 4, !dbg !4488
  %182 = load i32*, i32** %10, align 8, !dbg !4489
  %183 = load i8*, i8** %5, align 8, !dbg !4490
  %184 = load i32, i32* %6, align 4, !dbg !4491
  %185 = call i32 @getugroups(i32 %181, i32* %182, i8* %183, i32 %184), !dbg !4492
  br label %199, !dbg !4487

186:                                              ; preds = %177
  %187 = load i32, i32* %8, align 4, !dbg !4493
  %188 = load i32, i32* %6, align 4, !dbg !4494
  %189 = icmp ne i32 %188, -1, !dbg !4495
  %190 = zext i1 %189 to i32, !dbg !4495
  %191 = sub nsw i32 %187, %190, !dbg !4496
  %192 = load i32*, i32** %10, align 8, !dbg !4497
  %193 = load i32, i32* %6, align 4, !dbg !4498
  %194 = icmp ne i32 %193, -1, !dbg !4499
  %195 = zext i1 %194 to i32, !dbg !4499
  %196 = sext i32 %195 to i64, !dbg !4500
  %197 = getelementptr inbounds i32, i32* %192, i64 %196, !dbg !4500
  %198 = call i32 @getgroups(i32 %191, i32* %197) #10, !dbg !4501
  br label %199, !dbg !4487

199:                                              ; preds = %186, %180
  %200 = phi i32 [ %185, %180 ], [ %198, %186 ], !dbg !4487
  store i32 %200, i32* %9, align 4, !dbg !4502
  %201 = load i32, i32* %9, align 4, !dbg !4503
  %202 = icmp slt i32 %201, 0, !dbg !4505
  br i1 %202, label %203, label %210, !dbg !4506

203:                                              ; preds = %199
  call void @llvm.dbg.declare(metadata i32* %14, metadata !4507, metadata !DIExpression()), !dbg !4509
  %204 = call i32* @__errno_location() #15, !dbg !4510
  %205 = load i32, i32* %204, align 4, !dbg !4510
  store i32 %205, i32* %14, align 4, !dbg !4509
  %206 = load i32*, i32** %10, align 8, !dbg !4511
  %207 = bitcast i32* %206 to i8*, !dbg !4511
  call void @free(i8* %207) #10, !dbg !4512
  %208 = load i32, i32* %14, align 4, !dbg !4513
  %209 = call i32* @__errno_location() #15, !dbg !4514
  store i32 %208, i32* %209, align 4, !dbg !4515
  store i32 -1, i32* %4, align 4, !dbg !4516
  br label %329, !dbg !4516

210:                                              ; preds = %199
  %211 = load i8*, i8** %5, align 8, !dbg !4517
  %212 = icmp ne i8* %211, null, !dbg !4517
  br i1 %212, label %221, label %213, !dbg !4519

213:                                              ; preds = %210
  %214 = load i32, i32* %6, align 4, !dbg !4520
  %215 = icmp ne i32 %214, -1, !dbg !4521
  br i1 %215, label %216, label %221, !dbg !4522

216:                                              ; preds = %213
  %217 = load i32, i32* %6, align 4, !dbg !4523
  %218 = load i32*, i32** %10, align 8, !dbg !4525
  store i32 %217, i32* %218, align 4, !dbg !4526
  %219 = load i32, i32* %9, align 4, !dbg !4527
  %220 = add nsw i32 %219, 1, !dbg !4527
  store i32 %220, i32* %9, align 4, !dbg !4527
  br label %221, !dbg !4528

221:                                              ; preds = %216, %213, %210
  %222 = load i32, i32* @x.93
  %223 = load i32, i32* @y.94
  %224 = sub i32 %222, 1
  %225 = mul i32 %222, %224
  %226 = urem i32 %225, 2
  %227 = icmp eq i32 %226, 0
  %228 = icmp slt i32 %223, 10
  %229 = or i1 %227, %228
  br i1 %229, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %221, %originalBB14alteredBB
  %230 = load i32*, i32** %10, align 8, !dbg !4529
  %231 = load i32**, i32*** %7, align 8, !dbg !4530
  store i32* %230, i32** %231, align 8, !dbg !4531
  %232 = load i32, i32* %9, align 4, !dbg !4532
  %233 = icmp slt i32 1, %232, !dbg !4534
  %234 = load i32, i32* @x.93
  %235 = load i32, i32* @y.94
  %236 = sub i32 %234, 1
  %237 = mul i32 %234, %236
  %238 = urem i32 %237, 2
  %239 = icmp eq i32 %238, 0
  %240 = icmp slt i32 %235, 10
  %241 = or i1 %239, %240
  br i1 %241, label %originalBBpart216, label %originalBB14alteredBB

originalBBpart216:                                ; preds = %originalBB14
  br i1 %233, label %242, label %311, !dbg !4535

242:                                              ; preds = %originalBBpart216
  call void @llvm.dbg.declare(metadata i32* %15, metadata !4536, metadata !DIExpression()), !dbg !4538
  %243 = load i32*, i32** %10, align 8, !dbg !4539
  %244 = load i32, i32* %243, align 4, !dbg !4540
  store i32 %244, i32* %15, align 4, !dbg !4538
  call void @llvm.dbg.declare(metadata i32** %16, metadata !4541, metadata !DIExpression()), !dbg !4542
  call void @llvm.dbg.declare(metadata i32** %17, metadata !4543, metadata !DIExpression()), !dbg !4544
  %245 = load i32*, i32** %10, align 8, !dbg !4545
  %246 = load i32, i32* %9, align 4, !dbg !4546
  %247 = sext i32 %246 to i64, !dbg !4547
  %248 = getelementptr inbounds i32, i32* %245, i64 %247, !dbg !4547
  store i32* %248, i32** %17, align 8, !dbg !4544
  %249 = load i32*, i32** %10, align 8, !dbg !4548
  %250 = getelementptr inbounds i32, i32* %249, i64 1, !dbg !4550
  store i32* %250, i32** %16, align 8, !dbg !4551
  br label %251, !dbg !4552

251:                                              ; preds = %307, %242
  %252 = load i32, i32* @x.93
  %253 = load i32, i32* @y.94
  %254 = sub i32 %252, 1
  %255 = mul i32 %252, %254
  %256 = urem i32 %255, 2
  %257 = icmp eq i32 %256, 0
  %258 = icmp slt i32 %253, 10
  %259 = or i1 %257, %258
  br i1 %259, label %originalBB18, label %originalBB18alteredBB

originalBB18:                                     ; preds = %251, %originalBB18alteredBB
  %260 = load i32*, i32** %16, align 8, !dbg !4553
  %261 = load i32*, i32** %17, align 8, !dbg !4555
  %262 = icmp ult i32* %260, %261, !dbg !4556
  %263 = load i32, i32* @x.93
  %264 = load i32, i32* @y.94
  %265 = sub i32 %263, 1
  %266 = mul i32 %263, %265
  %267 = urem i32 %266, 2
  %268 = icmp eq i32 %267, 0
  %269 = icmp slt i32 %264, 10
  %270 = or i1 %268, %269
  br i1 %270, label %originalBBpart220, label %originalBB18alteredBB

originalBBpart220:                                ; preds = %originalBB18
  br i1 %262, label %271, label %310, !dbg !4557

271:                                              ; preds = %originalBBpart220
  %272 = load i32*, i32** %16, align 8, !dbg !4558
  %273 = load i32, i32* %272, align 4, !dbg !4561
  %274 = load i32, i32* %15, align 4, !dbg !4562
  %275 = icmp eq i32 %273, %274, !dbg !4563
  br i1 %275, label %282, label %276, !dbg !4564

276:                                              ; preds = %271
  %277 = load i32*, i32** %16, align 8, !dbg !4565
  %278 = load i32, i32* %277, align 4, !dbg !4566
  %279 = load i32*, i32** %10, align 8, !dbg !4567
  %280 = load i32, i32* %279, align 4, !dbg !4568
  %281 = icmp eq i32 %278, %280, !dbg !4569
  br i1 %281, label %282, label %301, !dbg !4570

282:                                              ; preds = %276, %271
  %283 = load i32, i32* @x.93
  %284 = load i32, i32* @y.94
  %285 = sub i32 %283, 1
  %286 = mul i32 %283, %285
  %287 = urem i32 %286, 2
  %288 = icmp eq i32 %287, 0
  %289 = icmp slt i32 %284, 10
  %290 = or i1 %288, %289
  br i1 %290, label %originalBB22, label %originalBB22alteredBB

originalBB22:                                     ; preds = %282, %originalBB22alteredBB
  %291 = load i32, i32* %9, align 4, !dbg !4571
  %292 = add nsw i32 %291, -1, !dbg !4571
  store i32 %292, i32* %9, align 4, !dbg !4571
  %293 = load i32, i32* @x.93
  %294 = load i32, i32* @y.94
  %295 = sub i32 %293, 1
  %296 = mul i32 %293, %295
  %297 = urem i32 %296, 2
  %298 = icmp eq i32 %297, 0
  %299 = icmp slt i32 %294, 10
  %300 = or i1 %298, %299
  br i1 %300, label %originalBBpart227, label %originalBB22alteredBB

originalBBpart227:                                ; preds = %originalBB22
  br label %306, !dbg !4572

301:                                              ; preds = %276
  %302 = load i32*, i32** %16, align 8, !dbg !4573
  %303 = load i32, i32* %302, align 4, !dbg !4574
  %304 = load i32*, i32** %10, align 8, !dbg !4575
  %305 = getelementptr inbounds i32, i32* %304, i32 1, !dbg !4575
  store i32* %305, i32** %10, align 8, !dbg !4575
  store i32 %303, i32* %305, align 4, !dbg !4576
  br label %306

306:                                              ; preds = %301, %originalBBpart227
  br label %307, !dbg !4577

307:                                              ; preds = %306
  %308 = load i32*, i32** %16, align 8, !dbg !4578
  %309 = getelementptr inbounds i32, i32* %308, i32 1, !dbg !4578
  store i32* %309, i32** %16, align 8, !dbg !4578
  br label %251, !dbg !4579, !llvm.loop !4580

310:                                              ; preds = %originalBBpart220
  br label %311, !dbg !4582

311:                                              ; preds = %310, %originalBBpart216
  %312 = load i32, i32* @x.93
  %313 = load i32, i32* @y.94
  %314 = sub i32 %312, 1
  %315 = mul i32 %312, %314
  %316 = urem i32 %315, 2
  %317 = icmp eq i32 %316, 0
  %318 = icmp slt i32 %313, 10
  %319 = or i1 %317, %318
  br i1 %319, label %originalBB29, label %originalBB29alteredBB

originalBB29:                                     ; preds = %311, %originalBB29alteredBB
  %320 = load i32, i32* %9, align 4, !dbg !4583
  store i32 %320, i32* %4, align 4, !dbg !4584
  %321 = load i32, i32* @x.93
  %322 = load i32, i32* @y.94
  %323 = sub i32 %321, 1
  %324 = mul i32 %321, %323
  %325 = urem i32 %324, 2
  %326 = icmp eq i32 %325, 0
  %327 = icmp slt i32 %322, 10
  %328 = or i1 %326, %327
  br i1 %328, label %originalBBpart231, label %originalBB29alteredBB

originalBBpart231:                                ; preds = %originalBB29
  br label %329, !dbg !4584

329:                                              ; preds = %originalBBpart231, %203, %176, %157, %originalBBpart212, %76, %65, %26
  %330 = load i32, i32* %4, align 4, !dbg !4585
  ret i32 %330, !dbg !4585

originalBBalteredBB:                              ; preds = %originalBB, %36
  %331 = load i32, i32* %12, align 4, !dbg !4402
  %332 = load i32, i32* %8, align 4, !dbg !4403
  %333 = icmp eq i32 %331, %332, !dbg !4404
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %81
  %334 = load i8*, i8** %5, align 8, !dbg !4439
  %335 = icmp ne i8* %334, null, !dbg !4439
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %110
  %336 = call i32* @__errno_location() #15, !dbg !4449
  %337 = load i32, i32* %336, align 4, !dbg !4449
  %338 = icmp eq i32 %337, 38, !dbg !4452
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %133
  %339 = load i32*, i32** %10, align 8, !dbg !4457
  %340 = load i32**, i32*** %7, align 8, !dbg !4459
  store i32* %339, i32** %340, align 8, !dbg !4460
  %341 = load i32, i32* %6, align 4, !dbg !4461
  %342 = load i32*, i32** %10, align 8, !dbg !4462
  store i32 %341, i32* %342, align 4, !dbg !4463
  %343 = load i32, i32* %6, align 4, !dbg !4464
  %344 = icmp ne i32 %343, -1, !dbg !4465
  %345 = zext i1 %344 to i32, !dbg !4465
  store i32 %345, i32* %4, align 4, !dbg !4466
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %221
  %346 = load i32*, i32** %10, align 8, !dbg !4529
  %347 = load i32**, i32*** %7, align 8, !dbg !4530
  store i32* %346, i32** %347, align 8, !dbg !4531
  %348 = load i32, i32* %9, align 4, !dbg !4532
  %349 = icmp slt i32 1, %348, !dbg !4534
  br label %originalBB14

originalBB18alteredBB:                            ; preds = %originalBB18, %251
  %350 = load i32*, i32** %16, align 8, !dbg !4553
  %351 = load i32*, i32** %17, align 8, !dbg !4555
  %352 = icmp ult i32* %350, %351, !dbg !4556
  br label %originalBB18

originalBB22alteredBB:                            ; preds = %originalBB22, %282
  %353 = load i32, i32* %9, align 4, !dbg !4571
  %_ = shl i32 %353, -1
  %_23 = sub i32 0, %353
  %gen = add i32 %_23, -1
  %_24 = shl i32 %353, -1
  %354 = add nsw i32 %353, -1, !dbg !4571
  store i32 %354, i32* %9, align 4, !dbg !4571
  br label %originalBB22

originalBB29alteredBB:                            ; preds = %originalBB29, %311
  %355 = load i32, i32* %9, align 4, !dbg !4583
  store i32 %355, i32* %4, align 4, !dbg !4584
  br label %originalBB29
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32* @realloc_groupbuf(i32*, i64) #4 !dbg !4586 {
  %3 = alloca i32*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca i64, align 8
  store i32* %0, i32** %4, align 8
  call void @llvm.dbg.declare(metadata i32** %4, metadata !4589, metadata !DIExpression()), !dbg !4590
  store i64 %1, i64* %5, align 8
  call void @llvm.dbg.declare(metadata i64* %5, metadata !4591, metadata !DIExpression()), !dbg !4592
  %6 = load i64, i64* %5, align 8, !dbg !4593
  %7 = icmp ult i64 2305843009213693951, %6, !dbg !4593
  br i1 %7, label %8, label %10, !dbg !4595

8:                                                ; preds = %2
  %9 = call i32* @__errno_location() #15, !dbg !4596
  store i32 12, i32* %9, align 4, !dbg !4598
  store i32* null, i32** %3, align 8, !dbg !4599
  br label %33, !dbg !4599

10:                                               ; preds = %2
  %11 = load i32, i32* @x.95
  %12 = load i32, i32* @y.96
  %13 = sub i32 %11, 1
  %14 = mul i32 %11, %13
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = icmp slt i32 %12, 10
  %18 = or i1 %16, %17
  br i1 %18, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %10, %originalBBalteredBB
  %19 = load i32*, i32** %4, align 8, !dbg !4600
  %20 = bitcast i32* %19 to i8*, !dbg !4600
  %21 = load i64, i64* %5, align 8, !dbg !4601
  %22 = mul i64 %21, 4, !dbg !4602
  %23 = call i8* @realloc(i8* %20, i64 %22) #10, !dbg !4603
  %24 = bitcast i8* %23 to i32*, !dbg !4603
  store i32* %24, i32** %3, align 8, !dbg !4604
  %25 = load i32, i32* @x.95
  %26 = load i32, i32* @y.96
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %33, !dbg !4604

33:                                               ; preds = %originalBBpart2, %8
  %34 = load i32, i32* @x.95
  %35 = load i32, i32* @y.96
  %36 = sub i32 %34, 1
  %37 = mul i32 %34, %36
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %39, %40
  br i1 %41, label %originalBB2, label %originalBB2alteredBB

originalBB2:                                      ; preds = %33, %originalBB2alteredBB
  %42 = load i32*, i32** %3, align 8, !dbg !4605
  %43 = load i32, i32* @x.95
  %44 = load i32, i32* @y.96
  %45 = sub i32 %43, 1
  %46 = mul i32 %43, %45
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %48, %49
  br i1 %50, label %originalBBpart24, label %originalBB2alteredBB

originalBBpart24:                                 ; preds = %originalBB2
  ret i32* %42, !dbg !4605

originalBBalteredBB:                              ; preds = %originalBB, %10
  %51 = load i32*, i32** %4, align 8, !dbg !4600
  %52 = bitcast i32* %51 to i8*, !dbg !4600
  %53 = load i64, i64* %5, align 8, !dbg !4601
  %_ = sub i64 %53, 4
  %gen = mul i64 %_, 4
  %_1 = shl i64 %53, 4
  %54 = mul i64 %53, 4, !dbg !4602
  %55 = call i8* @realloc(i8* %52, i64 %54) #10, !dbg !4603
  %56 = bitcast i8* %55 to i32*, !dbg !4603
  store i32* %56, i32** %3, align 8, !dbg !4604
  br label %originalBB

originalBB2alteredBB:                             ; preds = %originalBB2, %33
  %57 = load i32*, i32** %3, align 8, !dbg !4605
  br label %originalBB2
}

declare dso_local i32 @getgrouplist(i8*, i32, i32*, i32*) #3

; Function Attrs: nounwind
declare dso_local i32 @getgroups(i32, i32*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @setlocale_null_r(i32, i8* nonnull, i64) #4 !dbg !4606 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !4610, metadata !DIExpression()), !dbg !4611
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !4612, metadata !DIExpression()), !dbg !4613
  store i64 %2, i64* %6, align 8
  call void @llvm.dbg.declare(metadata i64* %6, metadata !4614, metadata !DIExpression()), !dbg !4615
  %7 = load i32, i32* %4, align 4, !dbg !4616
  %8 = load i8*, i8** %5, align 8, !dbg !4617
  %9 = load i64, i64* %6, align 8, !dbg !4618
  %10 = call i32 @setlocale_null_unlocked(i32 %7, i8* %8, i64 %9), !dbg !4619
  ret i32 %10, !dbg !4620
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @setlocale_null_unlocked(i32, i8*, i64) #4 !dbg !4621 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i64, align 8
  store i32 %0, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !4622, metadata !DIExpression()), !dbg !4623
  store i8* %1, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !4624, metadata !DIExpression()), !dbg !4625
  store i64 %2, i64* %7, align 8
  call void @llvm.dbg.declare(metadata i64* %7, metadata !4626, metadata !DIExpression()), !dbg !4627
  call void @llvm.dbg.declare(metadata i8** %8, metadata !4628, metadata !DIExpression()), !dbg !4629
  %10 = load i32, i32* %5, align 4, !dbg !4630
  %11 = call i8* @setlocale_null_androidfix(i32 %10), !dbg !4631
  store i8* %11, i8** %8, align 8, !dbg !4629
  %12 = load i8*, i8** %8, align 8, !dbg !4632
  %13 = icmp eq i8* %12, null, !dbg !4634
  br i1 %13, label %14, label %37, !dbg !4635

14:                                               ; preds = %3
  %15 = load i64, i64* %7, align 8, !dbg !4636
  %16 = icmp ugt i64 %15, 0, !dbg !4639
  br i1 %16, label %17, label %36, !dbg !4640

17:                                               ; preds = %14
  %18 = load i32, i32* @x.99
  %19 = load i32, i32* @y.100
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %17, %originalBBalteredBB
  %26 = load i8*, i8** %6, align 8, !dbg !4641
  %27 = getelementptr inbounds i8, i8* %26, i64 0, !dbg !4641
  store i8 0, i8* %27, align 1, !dbg !4642
  %28 = load i32, i32* @x.99
  %29 = load i32, i32* @y.100
  %30 = sub i32 %28, 1
  %31 = mul i32 %28, %30
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %33, %34
  br i1 %35, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %36, !dbg !4641

36:                                               ; preds = %originalBBpart2, %14
  store i32 22, i32* %4, align 4, !dbg !4643
  br label %61, !dbg !4643

37:                                               ; preds = %3
  call void @llvm.dbg.declare(metadata i64* %9, metadata !4644, metadata !DIExpression()), !dbg !4646
  %38 = load i8*, i8** %8, align 8, !dbg !4647
  %39 = call i64 @strlen(i8* %38) #13, !dbg !4648
  store i64 %39, i64* %9, align 8, !dbg !4646
  %40 = load i64, i64* %9, align 8, !dbg !4649
  %41 = load i64, i64* %7, align 8, !dbg !4651
  %42 = icmp ult i64 %40, %41, !dbg !4652
  br i1 %42, label %43, label %48, !dbg !4653

43:                                               ; preds = %37
  %44 = load i8*, i8** %6, align 8, !dbg !4654
  %45 = load i8*, i8** %8, align 8, !dbg !4656
  %46 = load i64, i64* %9, align 8, !dbg !4657
  %47 = add i64 %46, 1, !dbg !4658
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %44, i8* align 1 %45, i64 %47, i1 false), !dbg !4659
  store i32 0, i32* %4, align 4, !dbg !4660
  br label %61, !dbg !4660

48:                                               ; preds = %37
  %49 = load i64, i64* %7, align 8, !dbg !4661
  %50 = icmp ugt i64 %49, 0, !dbg !4664
  br i1 %50, label %51, label %60, !dbg !4665

51:                                               ; preds = %48
  %52 = load i8*, i8** %6, align 8, !dbg !4666
  %53 = load i8*, i8** %8, align 8, !dbg !4668
  %54 = load i64, i64* %7, align 8, !dbg !4669
  %55 = sub i64 %54, 1, !dbg !4670
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %52, i8* align 1 %53, i64 %55, i1 false), !dbg !4671
  %56 = load i8*, i8** %6, align 8, !dbg !4672
  %57 = load i64, i64* %7, align 8, !dbg !4673
  %58 = sub i64 %57, 1, !dbg !4674
  %59 = getelementptr inbounds i8, i8* %56, i64 %58, !dbg !4672
  store i8 0, i8* %59, align 1, !dbg !4675
  br label %60, !dbg !4676

60:                                               ; preds = %51, %48
  store i32 34, i32* %4, align 4, !dbg !4677
  br label %61, !dbg !4677

61:                                               ; preds = %60, %43, %36
  %62 = load i32, i32* @x.99
  %63 = load i32, i32* @y.100
  %64 = sub i32 %62, 1
  %65 = mul i32 %62, %64
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %63, 10
  %69 = or i1 %67, %68
  br i1 %69, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %61, %originalBB1alteredBB
  %70 = load i32, i32* %4, align 4, !dbg !4678
  %71 = load i32, i32* @x.99
  %72 = load i32, i32* @y.100
  %73 = sub i32 %71, 1
  %74 = mul i32 %71, %73
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %72, 10
  %78 = or i1 %76, %77
  br i1 %78, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  ret i32 %70, !dbg !4678

originalBBalteredBB:                              ; preds = %originalBB, %17
  %79 = load i8*, i8** %6, align 8, !dbg !4641
  %80 = getelementptr inbounds i8, i8* %79, i64 0, !dbg !4641
  store i8 0, i8* %80, align 1, !dbg !4642
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %61
  %81 = load i32, i32* %4, align 4, !dbg !4678
  br label %originalBB1
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @setlocale_null_androidfix(i32) #4 !dbg !4679 {
  %2 = alloca i32, align 4
  %3 = alloca i8*, align 8
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !4682, metadata !DIExpression()), !dbg !4683
  call void @llvm.dbg.declare(metadata i8** %3, metadata !4684, metadata !DIExpression()), !dbg !4685
  %4 = load i32, i32* %2, align 4, !dbg !4686
  %5 = call i8* @setlocale(i32 %4, i8* null) #10, !dbg !4687
  store i8* %5, i8** %3, align 8, !dbg !4685
  %6 = load i8*, i8** %3, align 8, !dbg !4688
  ret i8* %6, !dbg !4689
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rpl_fclose(%struct._IO_FILE* nonnull) #4 !dbg !4690 {
  %2 = alloca i32, align 4
  %3 = alloca %struct._IO_FILE*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store %struct._IO_FILE* %0, %struct._IO_FILE** %3, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %3, metadata !4728, metadata !DIExpression()), !dbg !4729
  call void @llvm.dbg.declare(metadata i32* %4, metadata !4730, metadata !DIExpression()), !dbg !4731
  store i32 0, i32* %4, align 4, !dbg !4731
  call void @llvm.dbg.declare(metadata i32* %5, metadata !4732, metadata !DIExpression()), !dbg !4733
  call void @llvm.dbg.declare(metadata i32* %6, metadata !4734, metadata !DIExpression()), !dbg !4735
  store i32 0, i32* %6, align 4, !dbg !4735
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8, !dbg !4736
  %8 = call i32 @fileno(%struct._IO_FILE* %7) #10, !dbg !4737
  store i32 %8, i32* %5, align 4, !dbg !4738
  %9 = load i32, i32* %5, align 4, !dbg !4739
  %10 = icmp slt i32 %9, 0, !dbg !4741
  br i1 %10, label %11, label %30, !dbg !4742

11:                                               ; preds = %1
  %12 = load i32, i32* @x.103
  %13 = load i32, i32* @y.104
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %11, %originalBBalteredBB
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8, !dbg !4743
  %21 = call i32 @fclose(%struct._IO_FILE* %20), !dbg !4744
  store i32 %21, i32* %2, align 4, !dbg !4745
  %22 = load i32, i32* @x.103
  %23 = load i32, i32* @y.104
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %104, !dbg !4745

30:                                               ; preds = %1
  %31 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8, !dbg !4746
  %32 = call i32 @__freading(%struct._IO_FILE* %31) #10, !dbg !4746
  %33 = icmp ne i32 %32, 0, !dbg !4746
  br i1 %33, label %34, label %39, !dbg !4748

34:                                               ; preds = %30
  %35 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8, !dbg !4749
  %36 = call i32 @fileno(%struct._IO_FILE* %35) #10, !dbg !4750
  %37 = call i64 @lseek(i32 %36, i64 0, i32 1) #10, !dbg !4751
  %38 = icmp ne i64 %37, -1, !dbg !4752
  br i1 %38, label %39, label %62, !dbg !4753

39:                                               ; preds = %34, %30
  %40 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8, !dbg !4754
  %41 = call i32 @rpl_fflush(%struct._IO_FILE* %40), !dbg !4755
  %42 = icmp ne i32 %41, 0, !dbg !4755
  br i1 %42, label %43, label %62, !dbg !4756

43:                                               ; preds = %39
  %44 = load i32, i32* @x.103
  %45 = load i32, i32* @y.104
  %46 = sub i32 %44, 1
  %47 = mul i32 %44, %46
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %45, 10
  %51 = or i1 %49, %50
  br i1 %51, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %43, %originalBB1alteredBB
  %52 = call i32* @__errno_location() #15, !dbg !4757
  %53 = load i32, i32* %52, align 4, !dbg !4757
  store i32 %53, i32* %4, align 4, !dbg !4758
  %54 = load i32, i32* @x.103
  %55 = load i32, i32* @y.104
  %56 = sub i32 %54, 1
  %57 = mul i32 %54, %56
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %55, 10
  %61 = or i1 %59, %60
  br i1 %61, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %62, !dbg !4759

62:                                               ; preds = %originalBBpart24, %39, %34
  %63 = load i32, i32* @x.103
  %64 = load i32, i32* @y.104
  %65 = sub i32 %63, 1
  %66 = mul i32 %63, %65
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %64, 10
  %70 = or i1 %68, %69
  br i1 %70, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %62, %originalBB6alteredBB
  %71 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8, !dbg !4760
  %72 = call i32 @fclose(%struct._IO_FILE* %71), !dbg !4761
  store i32 %72, i32* %6, align 4, !dbg !4762
  %73 = load i32, i32* %4, align 4, !dbg !4763
  %74 = icmp ne i32 %73, 0, !dbg !4765
  %75 = load i32, i32* @x.103
  %76 = load i32, i32* @y.104
  %77 = sub i32 %75, 1
  %78 = mul i32 %75, %77
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %76, 10
  %82 = or i1 %80, %81
  br i1 %82, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %74, label %83, label %86, !dbg !4766

83:                                               ; preds = %originalBBpart28
  %84 = load i32, i32* %4, align 4, !dbg !4767
  %85 = call i32* @__errno_location() #15, !dbg !4769
  store i32 %84, i32* %85, align 4, !dbg !4770
  store i32 -1, i32* %6, align 4, !dbg !4771
  br label %86, !dbg !4772

86:                                               ; preds = %83, %originalBBpart28
  %87 = load i32, i32* @x.103
  %88 = load i32, i32* @y.104
  %89 = sub i32 %87, 1
  %90 = mul i32 %87, %89
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %88, 10
  %94 = or i1 %92, %93
  br i1 %94, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %86, %originalBB10alteredBB
  %95 = load i32, i32* %6, align 4, !dbg !4773
  store i32 %95, i32* %2, align 4, !dbg !4774
  %96 = load i32, i32* @x.103
  %97 = load i32, i32* @y.104
  %98 = sub i32 %96, 1
  %99 = mul i32 %96, %98
  %100 = urem i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = icmp slt i32 %97, 10
  %103 = or i1 %101, %102
  br i1 %103, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %104, !dbg !4774

104:                                              ; preds = %originalBBpart212, %originalBBpart2
  %105 = load i32, i32* %2, align 4, !dbg !4775
  ret i32 %105, !dbg !4775

originalBBalteredBB:                              ; preds = %originalBB, %11
  %106 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8, !dbg !4743
  %107 = call i32 @fclose(%struct._IO_FILE* %106), !dbg !4744
  store i32 %107, i32* %2, align 4, !dbg !4745
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %43
  %108 = call i32* @__errno_location() #15, !dbg !4757
  %109 = load i32, i32* %108, align 4, !dbg !4757
  store i32 %109, i32* %4, align 4, !dbg !4758
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %62
  %110 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8, !dbg !4760
  %111 = call i32 @fclose(%struct._IO_FILE* %110), !dbg !4761
  store i32 %111, i32* %6, align 4, !dbg !4762
  %112 = load i32, i32* %4, align 4, !dbg !4763
  %113 = icmp ne i32 %112, 0, !dbg !4765
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %86
  %114 = load i32, i32* %6, align 4, !dbg !4773
  store i32 %114, i32* %2, align 4, !dbg !4774
  br label %originalBB10
}

; Function Attrs: nounwind
declare dso_local i32 @fileno(%struct._IO_FILE*) #2

declare dso_local i32 @fclose(%struct._IO_FILE*) #3

; Function Attrs: nounwind
declare dso_local i32 @__freading(%struct._IO_FILE*) #2

; Function Attrs: nounwind
declare dso_local i64 @lseek(i32, i64, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rpl_fflush(%struct._IO_FILE*) #4 !dbg !4776 {
  %2 = alloca i32, align 4
  %3 = alloca %struct._IO_FILE*, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %3, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %3, metadata !4814, metadata !DIExpression()), !dbg !4815
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8, !dbg !4816
  %5 = icmp eq %struct._IO_FILE* %4, null, !dbg !4818
  br i1 %5, label %10, label %6, !dbg !4819

6:                                                ; preds = %1
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8, !dbg !4820
  %8 = call i32 @__freading(%struct._IO_FILE* %7) #10, !dbg !4820
  %9 = icmp ne i32 %8, 0, !dbg !4820
  br i1 %9, label %13, label %10, !dbg !4821

10:                                               ; preds = %6, %1
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8, !dbg !4822
  %12 = call i32 @fflush(%struct._IO_FILE* %11), !dbg !4823
  store i32 %12, i32* %2, align 4, !dbg !4824
  br label %17, !dbg !4824

13:                                               ; preds = %6
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8, !dbg !4825
  call void @clear_ungetc_buffer_preserving_position(%struct._IO_FILE* %14), !dbg !4826
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8, !dbg !4827
  %16 = call i32 @fflush(%struct._IO_FILE* %15), !dbg !4828
  store i32 %16, i32* %2, align 4, !dbg !4829
  br label %17, !dbg !4829

17:                                               ; preds = %13, %10
  %18 = load i32, i32* @x.105
  %19 = load i32, i32* @y.106
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %17, %originalBBalteredBB
  %26 = load i32, i32* %2, align 4, !dbg !4830
  %27 = load i32, i32* @x.105
  %28 = load i32, i32* @y.106
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32 %26, !dbg !4830

originalBBalteredBB:                              ; preds = %originalBB, %17
  %35 = load i32, i32* %2, align 4, !dbg !4830
  br label %originalBB
}

declare dso_local i32 @fflush(%struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @clear_ungetc_buffer_preserving_position(%struct._IO_FILE*) #4 !dbg !4831 {
  %2 = alloca %struct._IO_FILE*, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %2, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %2, metadata !4834, metadata !DIExpression()), !dbg !4835
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %2, align 8, !dbg !4836
  %4 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %3, i32 0, i32 0, !dbg !4838
  %5 = load i32, i32* %4, align 8, !dbg !4838
  %6 = and i32 %5, 256, !dbg !4839
  %7 = icmp ne i32 %6, 0, !dbg !4839
  br i1 %7, label %8, label %27, !dbg !4840

8:                                                ; preds = %1
  %9 = load i32, i32* @x.107
  %10 = load i32, i32* @y.108
  %11 = sub i32 %9, 1
  %12 = mul i32 %9, %11
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = icmp slt i32 %10, 10
  %16 = or i1 %14, %15
  br i1 %16, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %8, %originalBBalteredBB
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** %2, align 8, !dbg !4841
  %18 = call i32 @rpl_fseeko(%struct._IO_FILE* %17, i64 0, i32 1), !dbg !4842
  %19 = load i32, i32* @x.107
  %20 = load i32, i32* @y.108
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %27, !dbg !4842

27:                                               ; preds = %originalBBpart2, %1
  ret void, !dbg !4843

originalBBalteredBB:                              ; preds = %originalBB, %8
  %28 = load %struct._IO_FILE*, %struct._IO_FILE** %2, align 8, !dbg !4841
  %29 = call i32 @rpl_fseeko(%struct._IO_FILE* %28, i64 0, i32 1), !dbg !4842
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rpl_fseeko(%struct._IO_FILE* nonnull, i64, i32) #4 !dbg !4844 {
  %4 = alloca i32, align 4
  %5 = alloca %struct._IO_FILE*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i32, align 4
  %8 = alloca i64, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %5, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %5, metadata !4883, metadata !DIExpression()), !dbg !4884
  store i64 %1, i64* %6, align 8
  call void @llvm.dbg.declare(metadata i64* %6, metadata !4885, metadata !DIExpression()), !dbg !4886
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !4887, metadata !DIExpression()), !dbg !4888
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8, !dbg !4889
  %10 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %9, i32 0, i32 2, !dbg !4891
  %11 = load i8*, i8** %10, align 8, !dbg !4891
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8, !dbg !4892
  %13 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %12, i32 0, i32 1, !dbg !4893
  %14 = load i8*, i8** %13, align 8, !dbg !4893
  %15 = icmp eq i8* %11, %14, !dbg !4894
  br i1 %15, label %16, label %94, !dbg !4895

16:                                               ; preds = %3
  %17 = load i32, i32* @x.109
  %18 = load i32, i32* @y.110
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %16, %originalBBalteredBB
  %25 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8, !dbg !4896
  %26 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %25, i32 0, i32 5, !dbg !4897
  %27 = load i8*, i8** %26, align 8, !dbg !4897
  %28 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8, !dbg !4898
  %29 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %28, i32 0, i32 4, !dbg !4899
  %30 = load i8*, i8** %29, align 8, !dbg !4899
  %31 = icmp eq i8* %27, %30, !dbg !4900
  %32 = load i32, i32* @x.109
  %33 = load i32, i32* @y.110
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br i1 %31, label %40, label %94, !dbg !4901

40:                                               ; preds = %originalBBpart2
  %41 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8, !dbg !4902
  %42 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %41, i32 0, i32 9, !dbg !4903
  %43 = load i8*, i8** %42, align 8, !dbg !4903
  %44 = icmp eq i8* %43, null, !dbg !4904
  br i1 %44, label %45, label %94, !dbg !4905

45:                                               ; preds = %40
  call void @llvm.dbg.declare(metadata i64* %8, metadata !4906, metadata !DIExpression()), !dbg !4908
  %46 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8, !dbg !4909
  %47 = call i32 @fileno(%struct._IO_FILE* %46) #10, !dbg !4910
  %48 = load i64, i64* %6, align 8, !dbg !4911
  %49 = load i32, i32* %7, align 4, !dbg !4912
  %50 = call i64 @lseek(i32 %47, i64 %48, i32 %49) #10, !dbg !4913
  store i64 %50, i64* %8, align 8, !dbg !4908
  %51 = load i64, i64* %8, align 8, !dbg !4914
  %52 = icmp eq i64 %51, -1, !dbg !4916
  br i1 %52, label %53, label %70, !dbg !4917

53:                                               ; preds = %45
  %54 = load i32, i32* @x.109
  %55 = load i32, i32* @y.110
  %56 = sub i32 %54, 1
  %57 = mul i32 %54, %56
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %55, 10
  %61 = or i1 %59, %60
  br i1 %61, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %53, %originalBB1alteredBB
  store i32 -1, i32* %4, align 4, !dbg !4918
  %62 = load i32, i32* @x.109
  %63 = load i32, i32* @y.110
  %64 = sub i32 %62, 1
  %65 = mul i32 %62, %64
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %63, 10
  %69 = or i1 %67, %68
  br i1 %69, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br label %99, !dbg !4918

70:                                               ; preds = %45
  %71 = load i32, i32* @x.109
  %72 = load i32, i32* @y.110
  %73 = sub i32 %71, 1
  %74 = mul i32 %71, %73
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %72, 10
  %78 = or i1 %76, %77
  br i1 %78, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %70, %originalBB6alteredBB
  %79 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8, !dbg !4920
  %80 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %79, i32 0, i32 0, !dbg !4921
  %81 = load i32, i32* %80, align 8, !dbg !4922
  %82 = and i32 %81, -17, !dbg !4922
  store i32 %82, i32* %80, align 8, !dbg !4922
  %83 = load i64, i64* %8, align 8, !dbg !4923
  %84 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8, !dbg !4924
  %85 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %84, i32 0, i32 21, !dbg !4925
  store i64 %83, i64* %85, align 8, !dbg !4926
  store i32 0, i32* %4, align 4, !dbg !4927
  %86 = load i32, i32* @x.109
  %87 = load i32, i32* @y.110
  %88 = sub i32 %86, 1
  %89 = mul i32 %86, %88
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %87, 10
  %93 = or i1 %91, %92
  br i1 %93, label %originalBBpart214, label %originalBB6alteredBB

originalBBpart214:                                ; preds = %originalBB6
  br label %99, !dbg !4927

94:                                               ; preds = %40, %originalBBpart2, %3
  %95 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8, !dbg !4928
  %96 = load i64, i64* %6, align 8, !dbg !4929
  %97 = load i32, i32* %7, align 4, !dbg !4930
  %98 = call i32 @fseeko(%struct._IO_FILE* %95, i64 %96, i32 %97), !dbg !4931
  store i32 %98, i32* %4, align 4, !dbg !4932
  br label %99, !dbg !4932

99:                                               ; preds = %94, %originalBBpart214, %originalBBpart24
  %100 = load i32, i32* @x.109
  %101 = load i32, i32* @y.110
  %102 = sub i32 %100, 1
  %103 = mul i32 %100, %102
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %101, 10
  %107 = or i1 %105, %106
  br i1 %107, label %originalBB16, label %originalBB16alteredBB

originalBB16:                                     ; preds = %99, %originalBB16alteredBB
  %108 = load i32, i32* %4, align 4, !dbg !4933
  %109 = load i32, i32* @x.109
  %110 = load i32, i32* @y.110
  %111 = sub i32 %109, 1
  %112 = mul i32 %109, %111
  %113 = urem i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = icmp slt i32 %110, 10
  %116 = or i1 %114, %115
  br i1 %116, label %originalBBpart218, label %originalBB16alteredBB

originalBBpart218:                                ; preds = %originalBB16
  ret i32 %108, !dbg !4933

originalBBalteredBB:                              ; preds = %originalBB, %16
  %117 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8, !dbg !4896
  %118 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %117, i32 0, i32 5, !dbg !4897
  %119 = load i8*, i8** %118, align 8, !dbg !4897
  %120 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8, !dbg !4898
  %121 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %120, i32 0, i32 4, !dbg !4899
  %122 = load i8*, i8** %121, align 8, !dbg !4899
  %123 = icmp eq i8* %119, %122, !dbg !4900
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %53
  store i32 -1, i32* %4, align 4, !dbg !4918
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %70
  %124 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8, !dbg !4920
  %125 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %124, i32 0, i32 0, !dbg !4921
  %126 = load i32, i32* %125, align 8, !dbg !4922
  %_ = shl i32 %126, -17
  %_7 = sub i32 %126, -17
  %gen = mul i32 %_7, -17
  %_8 = sub i32 0, %126
  %gen9 = add i32 %_8, -17
  %_10 = sub i32 0, %126
  %gen11 = add i32 %_10, -17
  %_12 = shl i32 %126, -17
  %127 = and i32 %126, -17, !dbg !4922
  store i32 %127, i32* %125, align 8, !dbg !4922
  %128 = load i64, i64* %8, align 8, !dbg !4923
  %129 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8, !dbg !4924
  %130 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %129, i32 0, i32 21, !dbg !4925
  store i64 %128, i64* %130, align 8, !dbg !4926
  store i32 0, i32* %4, align 4, !dbg !4927
  br label %originalBB6

originalBB16alteredBB:                            ; preds = %originalBB16, %99
  %131 = load i32, i32* %4, align 4, !dbg !4933
  br label %originalBB16
}

declare dso_local i32 @fseeko(%struct._IO_FILE*, i64, i32) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @c_tolower(i32) #4 !dbg !4934 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !4938, metadata !DIExpression()), !dbg !4939
  %4 = load i32, i32* %3, align 4, !dbg !4940
  switch i32 %4, label %9 [
    i32 65, label %5
    i32 66, label %5
    i32 67, label %5
    i32 68, label %5
    i32 69, label %5
    i32 70, label %5
    i32 71, label %5
    i32 72, label %5
    i32 73, label %5
    i32 74, label %5
    i32 75, label %5
    i32 76, label %5
    i32 77, label %5
    i32 78, label %5
    i32 79, label %5
    i32 80, label %5
    i32 81, label %5
    i32 82, label %5
    i32 83, label %5
    i32 84, label %5
    i32 85, label %5
    i32 86, label %5
    i32 87, label %5
    i32 88, label %5
    i32 89, label %5
    i32 90, label %5
  ], !dbg !4941

5:                                                ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1
  %6 = load i32, i32* %3, align 4, !dbg !4942
  %7 = sub nsw i32 %6, 65, !dbg !4944
  %8 = add nsw i32 %7, 97, !dbg !4945
  store i32 %8, i32* %2, align 4, !dbg !4946
  br label %11, !dbg !4946

9:                                                ; preds = %1
  %10 = load i32, i32* %3, align 4, !dbg !4947
  store i32 %10, i32* %2, align 4, !dbg !4948
  br label %11, !dbg !4948

11:                                               ; preds = %9, %5
  %12 = load i32, i32* @x.111
  %13 = load i32, i32* @y.112
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %11, %originalBBalteredBB
  %20 = load i32, i32* %2, align 4, !dbg !4949
  %21 = load i32, i32* @x.111
  %22 = load i32, i32* @y.112
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32 %20, !dbg !4949

originalBBalteredBB:                              ; preds = %originalBB, %11
  %29 = load i32, i32* %2, align 4, !dbg !4949
  br label %originalBB
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @getugroups(i32, i32*, i8*, i32) #4 !dbg !4950 {
  %5 = alloca i32, align 4
  %6 = alloca i32*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i8**, align 8
  %11 = alloca %struct.group*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  store i32 %0, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !4954, metadata !DIExpression()), !dbg !4955
  store i32* %1, i32** %6, align 8
  call void @llvm.dbg.declare(metadata i32** %6, metadata !4956, metadata !DIExpression()), !dbg !4957
  store i8* %2, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !4958, metadata !DIExpression()), !dbg !4959
  store i32 %3, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !4960, metadata !DIExpression()), !dbg !4961
  call void @llvm.dbg.declare(metadata i32* %9, metadata !4962, metadata !DIExpression()), !dbg !4963
  store i32 0, i32* %9, align 4, !dbg !4963
  %14 = load i32, i32* %8, align 4, !dbg !4964
  %15 = icmp ne i32 %14, -1, !dbg !4966
  br i1 %15, label %16, label %28, !dbg !4967

16:                                               ; preds = %4
  %17 = load i32, i32* %5, align 4, !dbg !4968
  %18 = icmp ne i32 %17, 0, !dbg !4971
  br i1 %18, label %19, label %25, !dbg !4972

19:                                               ; preds = %16
  %20 = load i32, i32* %8, align 4, !dbg !4973
  %21 = load i32*, i32** %6, align 8, !dbg !4974
  %22 = load i32, i32* %9, align 4, !dbg !4975
  %23 = sext i32 %22 to i64, !dbg !4974
  %24 = getelementptr inbounds i32, i32* %21, i64 %23, !dbg !4974
  store i32 %20, i32* %24, align 4, !dbg !4976
  br label %25, !dbg !4974

25:                                               ; preds = %19, %16
  %26 = load i32, i32* %9, align 4, !dbg !4977
  %27 = add nsw i32 %26, 1, !dbg !4977
  store i32 %27, i32* %9, align 4, !dbg !4977
  br label %28, !dbg !4978

28:                                               ; preds = %25, %4
  call void @setgrent(), !dbg !4979
  br label %29, !dbg !4980

29:                                               ; preds = %249, %28
  call void @llvm.dbg.declare(metadata i8*** %10, metadata !4981, metadata !DIExpression()), !dbg !4983
  call void @llvm.dbg.declare(metadata %struct.group** %11, metadata !4984, metadata !DIExpression()), !dbg !4992
  %30 = call i32* @__errno_location() #15, !dbg !4993
  store i32 0, i32* %30, align 4, !dbg !4994
  %31 = call %struct.group* @getgrent(), !dbg !4995
  store %struct.group* %31, %struct.group** %11, align 8, !dbg !4996
  %32 = load %struct.group*, %struct.group** %11, align 8, !dbg !4997
  %33 = icmp eq %struct.group* %32, null, !dbg !4999
  br i1 %33, label %34, label %35, !dbg !5000

34:                                               ; preds = %29
  br label %250, !dbg !5001

35:                                               ; preds = %29
  %36 = load i32, i32* @x.113
  %37 = load i32, i32* @y.114
  %38 = sub i32 %36, 1
  %39 = mul i32 %36, %38
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %37, 10
  %43 = or i1 %41, %42
  br i1 %43, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %35, %originalBBalteredBB
  %44 = load %struct.group*, %struct.group** %11, align 8, !dbg !5002
  %45 = getelementptr inbounds %struct.group, %struct.group* %44, i32 0, i32 3, !dbg !5004
  %46 = load i8**, i8*** %45, align 8, !dbg !5004
  store i8** %46, i8*** %10, align 8, !dbg !5005
  %47 = load i32, i32* @x.113
  %48 = load i32, i32* @y.114
  %49 = sub i32 %47, 1
  %50 = mul i32 %47, %49
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %48, 10
  %54 = or i1 %52, %53
  br i1 %54, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  br label %55, !dbg !5006

55:                                               ; preds = %originalBBpart235, %originalBBpart2
  %56 = load i8**, i8*** %10, align 8, !dbg !5007
  %57 = load i8*, i8** %56, align 8, !dbg !5009
  %58 = icmp ne i8* %57, null, !dbg !5010
  br i1 %58, label %59, label %249, !dbg !5010

59:                                               ; preds = %55
  call void @llvm.dbg.declare(metadata i32* %12, metadata !5011, metadata !DIExpression()), !dbg !5013
  %60 = load i8*, i8** %7, align 8, !dbg !5014
  %61 = load i8**, i8*** %10, align 8, !dbg !5014
  %62 = load i8*, i8** %61, align 8, !dbg !5014
  %63 = call i32 @strcmp(i8* %60, i8* %62) #13, !dbg !5014
  %64 = icmp eq i32 %63, 0, !dbg !5014
  br i1 %64, label %66, label %65, !dbg !5016

65:                                               ; preds = %59
  br label %230, !dbg !5017

66:                                               ; preds = %59
  store i32 0, i32* %12, align 4, !dbg !5018
  br label %67, !dbg !5020

67:                                               ; preds = %originalBBpart219, %66
  %68 = load i32, i32* @x.113
  %69 = load i32, i32* @y.114
  %70 = sub i32 %68, 1
  %71 = mul i32 %68, %70
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %69, 10
  %75 = or i1 %73, %74
  br i1 %75, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %67, %originalBB1alteredBB
  %76 = load i32, i32* %12, align 4, !dbg !5021
  %77 = load i32, i32* %9, align 4, !dbg !5023
  %78 = icmp slt i32 %76, %77, !dbg !5024
  %79 = load i32, i32* @x.113
  %80 = load i32, i32* @y.114
  %81 = sub i32 %79, 1
  %82 = mul i32 %79, %81
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %80, 10
  %86 = or i1 %84, %85
  br i1 %86, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %78, label %87, label %153, !dbg !5025

87:                                               ; preds = %originalBBpart24
  %88 = load i32*, i32** %6, align 8, !dbg !5026
  %89 = icmp ne i32* %88, null, !dbg !5026
  br i1 %89, label %90, label %117, !dbg !5028

90:                                               ; preds = %87
  %91 = load i32*, i32** %6, align 8, !dbg !5029
  %92 = load i32, i32* %12, align 4, !dbg !5030
  %93 = sext i32 %92 to i64, !dbg !5029
  %94 = getelementptr inbounds i32, i32* %91, i64 %93, !dbg !5029
  %95 = load i32, i32* %94, align 4, !dbg !5029
  %96 = load %struct.group*, %struct.group** %11, align 8, !dbg !5031
  %97 = getelementptr inbounds %struct.group, %struct.group* %96, i32 0, i32 2, !dbg !5032
  %98 = load i32, i32* %97, align 8, !dbg !5032
  %99 = icmp eq i32 %95, %98, !dbg !5033
  br i1 %99, label %100, label %117, !dbg !5034

100:                                              ; preds = %90
  %101 = load i32, i32* @x.113
  %102 = load i32, i32* @y.114
  %103 = sub i32 %101, 1
  %104 = mul i32 %101, %103
  %105 = urem i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %102, 10
  %108 = or i1 %106, %107
  br i1 %108, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %100, %originalBB6alteredBB
  %109 = load i32, i32* @x.113
  %110 = load i32, i32* @y.114
  %111 = sub i32 %109, 1
  %112 = mul i32 %109, %111
  %113 = urem i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = icmp slt i32 %110, 10
  %116 = or i1 %114, %115
  br i1 %116, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br label %153, !dbg !5035

117:                                              ; preds = %90, %87
  %118 = load i32, i32* @x.113
  %119 = load i32, i32* @y.114
  %120 = sub i32 %118, 1
  %121 = mul i32 %118, %120
  %122 = urem i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = icmp slt i32 %119, 10
  %125 = or i1 %123, %124
  br i1 %125, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %117, %originalBB10alteredBB
  %126 = load i32, i32* @x.113
  %127 = load i32, i32* @y.114
  %128 = sub i32 %126, 1
  %129 = mul i32 %126, %128
  %130 = urem i32 %129, 2
  %131 = icmp eq i32 %130, 0
  %132 = icmp slt i32 %127, 10
  %133 = or i1 %131, %132
  br i1 %133, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br label %134, !dbg !5032

134:                                              ; preds = %originalBBpart212
  %135 = load i32, i32* @x.113
  %136 = load i32, i32* @y.114
  %137 = sub i32 %135, 1
  %138 = mul i32 %135, %137
  %139 = urem i32 %138, 2
  %140 = icmp eq i32 %139, 0
  %141 = icmp slt i32 %136, 10
  %142 = or i1 %140, %141
  br i1 %142, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %134, %originalBB14alteredBB
  %143 = load i32, i32* %12, align 4, !dbg !5036
  %144 = add nsw i32 %143, 1, !dbg !5036
  store i32 %144, i32* %12, align 4, !dbg !5036
  %145 = load i32, i32* @x.113
  %146 = load i32, i32* @y.114
  %147 = sub i32 %145, 1
  %148 = mul i32 %145, %147
  %149 = urem i32 %148, 2
  %150 = icmp eq i32 %149, 0
  %151 = icmp slt i32 %146, 10
  %152 = or i1 %150, %151
  br i1 %152, label %originalBBpart219, label %originalBB14alteredBB

originalBBpart219:                                ; preds = %originalBB14
  br label %67, !dbg !5037, !llvm.loop !5038

153:                                              ; preds = %originalBBpart28, %originalBBpart24
  %154 = load i32, i32* @x.113
  %155 = load i32, i32* @y.114
  %156 = sub i32 %154, 1
  %157 = mul i32 %154, %156
  %158 = urem i32 %157, 2
  %159 = icmp eq i32 %158, 0
  %160 = icmp slt i32 %155, 10
  %161 = or i1 %159, %160
  br i1 %161, label %originalBB21, label %originalBB21alteredBB

originalBB21:                                     ; preds = %153, %originalBB21alteredBB
  %162 = load i32, i32* %12, align 4, !dbg !5040
  %163 = load i32, i32* %9, align 4, !dbg !5042
  %164 = icmp eq i32 %162, %163, !dbg !5043
  %165 = load i32, i32* @x.113
  %166 = load i32, i32* @y.114
  %167 = sub i32 %165, 1
  %168 = mul i32 %165, %167
  %169 = urem i32 %168, 2
  %170 = icmp eq i32 %169, 0
  %171 = icmp slt i32 %166, 10
  %172 = or i1 %170, %171
  br i1 %172, label %originalBBpart223, label %originalBB21alteredBB

originalBBpart223:                                ; preds = %originalBB21
  br i1 %164, label %173, label %229, !dbg !5044

173:                                              ; preds = %originalBBpart223
  %174 = load i32, i32* @x.113
  %175 = load i32, i32* @y.114
  %176 = sub i32 %174, 1
  %177 = mul i32 %174, %176
  %178 = urem i32 %177, 2
  %179 = icmp eq i32 %178, 0
  %180 = icmp slt i32 %175, 10
  %181 = or i1 %179, %180
  br i1 %181, label %originalBB25, label %originalBB25alteredBB

originalBB25:                                     ; preds = %173, %originalBB25alteredBB
  %182 = load i32, i32* %5, align 4, !dbg !5045
  %183 = icmp ne i32 %182, 0, !dbg !5048
  %184 = load i32, i32* @x.113
  %185 = load i32, i32* @y.114
  %186 = sub i32 %184, 1
  %187 = mul i32 %184, %186
  %188 = urem i32 %187, 2
  %189 = icmp eq i32 %188, 0
  %190 = icmp slt i32 %185, 10
  %191 = or i1 %189, %190
  br i1 %191, label %originalBBpart227, label %originalBB25alteredBB

originalBBpart227:                                ; preds = %originalBB25
  br i1 %183, label %192, label %221, !dbg !5049

192:                                              ; preds = %originalBBpart227
  %193 = load i32, i32* %9, align 4, !dbg !5050
  %194 = load i32, i32* %5, align 4, !dbg !5053
  %195 = icmp sge i32 %193, %194, !dbg !5054
  br i1 %195, label %196, label %213, !dbg !5055

196:                                              ; preds = %192
  %197 = load i32, i32* @x.113
  %198 = load i32, i32* @y.114
  %199 = sub i32 %197, 1
  %200 = mul i32 %197, %199
  %201 = urem i32 %200, 2
  %202 = icmp eq i32 %201, 0
  %203 = icmp slt i32 %198, 10
  %204 = or i1 %202, %203
  br i1 %204, label %originalBB29, label %originalBB29alteredBB

originalBB29:                                     ; preds = %196, %originalBB29alteredBB
  %205 = load i32, i32* @x.113
  %206 = load i32, i32* @y.114
  %207 = sub i32 %205, 1
  %208 = mul i32 %205, %207
  %209 = urem i32 %208, 2
  %210 = icmp eq i32 %209, 0
  %211 = icmp slt i32 %206, 10
  %212 = or i1 %210, %211
  br i1 %212, label %originalBBpart231, label %originalBB29alteredBB

originalBBpart231:                                ; preds = %originalBB29
  br label %272, !dbg !5056

213:                                              ; preds = %192
  %214 = load %struct.group*, %struct.group** %11, align 8, !dbg !5057
  %215 = getelementptr inbounds %struct.group, %struct.group* %214, i32 0, i32 2, !dbg !5058
  %216 = load i32, i32* %215, align 8, !dbg !5058
  %217 = load i32*, i32** %6, align 8, !dbg !5059
  %218 = load i32, i32* %9, align 4, !dbg !5060
  %219 = sext i32 %218 to i64, !dbg !5059
  %220 = getelementptr inbounds i32, i32* %217, i64 %219, !dbg !5059
  store i32 %216, i32* %220, align 4, !dbg !5061
  br label %221, !dbg !5062

221:                                              ; preds = %213, %originalBBpart227
  %222 = load i32, i32* %9, align 4, !dbg !5063
  %223 = icmp eq i32 %222, 2147483647, !dbg !5065
  br i1 %223, label %224, label %226, !dbg !5066

224:                                              ; preds = %221
  %225 = call i32* @__errno_location() #15, !dbg !5067
  store i32 75, i32* %225, align 4, !dbg !5069
  br label %272, !dbg !5070

226:                                              ; preds = %221
  %227 = load i32, i32* %9, align 4, !dbg !5071
  %228 = add nsw i32 %227, 1, !dbg !5071
  store i32 %228, i32* %9, align 4, !dbg !5071
  br label %229, !dbg !5072

229:                                              ; preds = %226, %originalBBpart223
  br label %230, !dbg !5073

230:                                              ; preds = %229, %65
  %231 = load i32, i32* @x.113
  %232 = load i32, i32* @y.114
  %233 = sub i32 %231, 1
  %234 = mul i32 %231, %233
  %235 = urem i32 %234, 2
  %236 = icmp eq i32 %235, 0
  %237 = icmp slt i32 %232, 10
  %238 = or i1 %236, %237
  br i1 %238, label %originalBB33, label %originalBB33alteredBB

originalBB33:                                     ; preds = %230, %originalBB33alteredBB
  %239 = load i8**, i8*** %10, align 8, !dbg !5074
  %240 = getelementptr inbounds i8*, i8** %239, i32 1, !dbg !5074
  store i8** %240, i8*** %10, align 8, !dbg !5074
  %241 = load i32, i32* @x.113
  %242 = load i32, i32* @y.114
  %243 = sub i32 %241, 1
  %244 = mul i32 %241, %243
  %245 = urem i32 %244, 2
  %246 = icmp eq i32 %245, 0
  %247 = icmp slt i32 %242, 10
  %248 = or i1 %246, %247
  br i1 %248, label %originalBBpart235, label %originalBB33alteredBB

originalBBpart235:                                ; preds = %originalBB33
  br label %55, !dbg !5075, !llvm.loop !5076

249:                                              ; preds = %55
  br label %29, !dbg !4980, !llvm.loop !5078

250:                                              ; preds = %34
  %251 = call i32* @__errno_location() #15, !dbg !5080
  %252 = load i32, i32* %251, align 4, !dbg !5080
  %253 = icmp ne i32 %252, 0, !dbg !5082
  br i1 %253, label %254, label %271, !dbg !5083

254:                                              ; preds = %250
  %255 = load i32, i32* @x.113
  %256 = load i32, i32* @y.114
  %257 = sub i32 %255, 1
  %258 = mul i32 %255, %257
  %259 = urem i32 %258, 2
  %260 = icmp eq i32 %259, 0
  %261 = icmp slt i32 %256, 10
  %262 = or i1 %260, %261
  br i1 %262, label %originalBB37, label %originalBB37alteredBB

originalBB37:                                     ; preds = %254, %originalBB37alteredBB
  store i32 -1, i32* %9, align 4, !dbg !5084
  %263 = load i32, i32* @x.113
  %264 = load i32, i32* @y.114
  %265 = sub i32 %263, 1
  %266 = mul i32 %263, %265
  %267 = urem i32 %266, 2
  %268 = icmp eq i32 %267, 0
  %269 = icmp slt i32 %264, 10
  %270 = or i1 %268, %269
  br i1 %270, label %originalBBpart239, label %originalBB37alteredBB

originalBBpart239:                                ; preds = %originalBB37
  br label %271, !dbg !5085

271:                                              ; preds = %originalBBpart239, %250
  br label %272, !dbg !5086

272:                                              ; preds = %271, %224, %originalBBpart231
  call void @llvm.dbg.label(metadata !5087), !dbg !5088
  call void @llvm.dbg.declare(metadata i32* %13, metadata !5089, metadata !DIExpression()), !dbg !5091
  %273 = call i32* @__errno_location() #15, !dbg !5092
  %274 = load i32, i32* %273, align 4, !dbg !5092
  store i32 %274, i32* %13, align 4, !dbg !5091
  call void @endgrent(), !dbg !5093
  %275 = load i32, i32* %13, align 4, !dbg !5094
  %276 = call i32* @__errno_location() #15, !dbg !5095
  store i32 %275, i32* %276, align 4, !dbg !5096
  %277 = load i32, i32* %9, align 4, !dbg !5097
  ret i32 %277, !dbg !5098

originalBBalteredBB:                              ; preds = %originalBB, %35
  %278 = load %struct.group*, %struct.group** %11, align 8, !dbg !5002
  %279 = getelementptr inbounds %struct.group, %struct.group* %278, i32 0, i32 3, !dbg !5004
  %280 = load i8**, i8*** %279, align 8, !dbg !5004
  store i8** %280, i8*** %10, align 8, !dbg !5005
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %67
  %281 = load i32, i32* %12, align 4, !dbg !5021
  %282 = load i32, i32* %9, align 4, !dbg !5023
  %283 = icmp slt i32 %281, %282, !dbg !5024
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %100
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %117
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %134
  %284 = load i32, i32* %12, align 4, !dbg !5036
  %_ = sub i32 %284, 1
  %gen = mul i32 %_, 1
  %_15 = shl i32 %284, 1
  %_16 = sub i32 0, %284
  %gen17 = add i32 %_16, 1
  %285 = add nsw i32 %284, 1, !dbg !5036
  store i32 %285, i32* %12, align 4, !dbg !5036
  br label %originalBB14

originalBB21alteredBB:                            ; preds = %originalBB21, %153
  %286 = load i32, i32* %12, align 4, !dbg !5040
  %287 = load i32, i32* %9, align 4, !dbg !5042
  %288 = icmp eq i32 %286, %287, !dbg !5043
  br label %originalBB21

originalBB25alteredBB:                            ; preds = %originalBB25, %173
  %289 = load i32, i32* %5, align 4, !dbg !5045
  %290 = icmp ne i32 %289, 0, !dbg !5048
  br label %originalBB25

originalBB29alteredBB:                            ; preds = %originalBB29, %196
  br label %originalBB29

originalBB33alteredBB:                            ; preds = %originalBB33, %230
  %291 = load i8**, i8*** %10, align 8, !dbg !5074
  %292 = getelementptr inbounds i8*, i8** %291, i32 1, !dbg !5074
  store i8** %292, i8*** %10, align 8, !dbg !5074
  br label %originalBB33

originalBB37alteredBB:                            ; preds = %originalBB37, %254
  store i32 -1, i32* %9, align 4, !dbg !5084
  br label %originalBB37
}

declare dso_local void @setgrent() #3

declare dso_local %struct.group* @getgrent() #3

define private i32 @controle(i8*, i32) {
  %3 = load i32, i32* @inVal0
  %4 = icmp sgt i32 %3, 0
  br i1 %4, label %9, label %5

5:                                                ; preds = %2
  call void @srand(i32 %1)
  %6 = call i32 @rand()
  %7 = srem i32 %6, 50000
  %8 = add i32 %7, 2
  ret i32 %8

9:                                                ; preds = %2
  %10 = getelementptr inbounds [1 x i8], [1 x i8]* @.compVal2, i32 0, i32 0
  %11 = call i32 @strcmp(i8* %10, i8* %0)
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %32

13:                                               ; preds = %9
  %14 = icmp eq i32 %1, 0
  br i1 %14, label %15, label %32

15:                                               ; preds = %13
  %16 = load i32, i32* @x.115
  %17 = load i32, i32* @y.116
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %originalBB, label %originalBBalteredBB

originalBB:                                       ; preds = %15, %originalBBalteredBB
  %24 = load i32, i32* @x.115
  %25 = load i32, i32* @y.116
  %26 = sub i32 %24, 1
  %27 = mul i32 %24, %26
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %29, %30
  br i1 %31, label %originalBBpart2, label %originalBBalteredBB

originalBBpart2:                                  ; preds = %originalBB
  ret i32 5

32:                                               ; preds = %13, %9
  %33 = getelementptr inbounds [4 x i8], [4 x i8]* @.compVal1, i32 0, i32 0
  %34 = call i32 @strcmp(i8* %33, i8* %0)
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %39

36:                                               ; preds = %32
  %37 = icmp eq i32 %1, 43
  br i1 %37, label %38, label %39

38:                                               ; preds = %36
  ret i32 3

39:                                               ; preds = %36, %32
  %40 = load i32, i32* @x.115
  %41 = load i32, i32* @y.116
  %42 = sub i32 %40, 1
  %43 = mul i32 %40, %42
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %45, %46
  br i1 %47, label %originalBB1, label %originalBB1alteredBB

originalBB1:                                      ; preds = %39, %originalBB1alteredBB
  %48 = getelementptr inbounds [2 x i8], [2 x i8]* @.compVal0, i32 0, i32 0
  %49 = call i32 @strcmp(i8* %48, i8* %0)
  %50 = icmp eq i32 %49, 0
  %51 = load i32, i32* @x.115
  %52 = load i32, i32* @y.116
  %53 = sub i32 %51, 1
  %54 = mul i32 %51, %53
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %52, 10
  %58 = or i1 %56, %57
  br i1 %58, label %originalBBpart24, label %originalBB1alteredBB

originalBBpart24:                                 ; preds = %originalBB1
  br i1 %50, label %59, label %78

59:                                               ; preds = %originalBBpart24
  %60 = load i32, i32* @x.115
  %61 = load i32, i32* @y.116
  %62 = sub i32 %60, 1
  %63 = mul i32 %60, %62
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %61, 10
  %67 = or i1 %65, %66
  br i1 %67, label %originalBB6, label %originalBB6alteredBB

originalBB6:                                      ; preds = %59, %originalBB6alteredBB
  %68 = icmp eq i32 %1, -1
  %69 = load i32, i32* @x.115
  %70 = load i32, i32* @y.116
  %71 = sub i32 %69, 1
  %72 = mul i32 %69, %71
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %74, %75
  br i1 %76, label %originalBBpart28, label %originalBB6alteredBB

originalBBpart28:                                 ; preds = %originalBB6
  br i1 %68, label %77, label %78

77:                                               ; preds = %originalBBpart28
  ret i32 3

78:                                               ; preds = %originalBBpart28, %originalBBpart24
  %79 = load i32, i32* @x.115
  %80 = load i32, i32* @y.116
  %81 = sub i32 %79, 1
  %82 = mul i32 %79, %81
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %80, 10
  %86 = or i1 %84, %85
  br i1 %86, label %originalBB10, label %originalBB10alteredBB

originalBB10:                                     ; preds = %78, %originalBB10alteredBB
  %87 = getelementptr inbounds [2 x i8], [2 x i8]* @.compVal0, i32 0, i32 0
  %88 = call i32 @strcmp(i8* %87, i8* %0)
  %89 = icmp eq i32 %88, 0
  %90 = load i32, i32* @x.115
  %91 = load i32, i32* @y.116
  %92 = sub i32 %90, 1
  %93 = mul i32 %90, %92
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %91, 10
  %97 = or i1 %95, %96
  br i1 %97, label %originalBBpart212, label %originalBB10alteredBB

originalBBpart212:                                ; preds = %originalBB10
  br i1 %89, label %98, label %101

98:                                               ; preds = %originalBBpart212
  %99 = icmp eq i32 %1, 0
  br i1 %99, label %100, label %101

100:                                              ; preds = %98
  ret i32 5

101:                                              ; preds = %98, %originalBBpart212
  %102 = load i32, i32* @x.115
  %103 = load i32, i32* @y.116
  %104 = sub i32 %102, 1
  %105 = mul i32 %102, %104
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %103, 10
  %109 = or i1 %107, %108
  br i1 %109, label %originalBB14, label %originalBB14alteredBB

originalBB14:                                     ; preds = %101, %originalBB14alteredBB
  call void @srand(i32 %1)
  %110 = call i32 @rand()
  %111 = srem i32 %110, 50000
  %112 = add i32 %111, 2
  %113 = load i32, i32* @x.115
  %114 = load i32, i32* @y.116
  %115 = sub i32 %113, 1
  %116 = mul i32 %113, %115
  %117 = urem i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = icmp slt i32 %114, 10
  %120 = or i1 %118, %119
  br i1 %120, label %originalBBpart229, label %originalBB14alteredBB

originalBBpart229:                                ; preds = %originalBB14
  ret i32 %112

originalBBalteredBB:                              ; preds = %originalBB, %15
  br label %originalBB

originalBB1alteredBB:                             ; preds = %originalBB1, %39
  %121 = getelementptr inbounds [2 x i8], [2 x i8]* @.compVal0, i32 0, i32 0
  %122 = call i32 @strcmp(i8* %121, i8* %0)
  %123 = icmp eq i32 %122, 0
  br label %originalBB1

originalBB6alteredBB:                             ; preds = %originalBB6, %59
  %124 = icmp eq i32 %1, -1
  br label %originalBB6

originalBB10alteredBB:                            ; preds = %originalBB10, %78
  %125 = getelementptr inbounds [2 x i8], [2 x i8]* @.compVal0, i32 0, i32 0
  %126 = call i32 @strcmp(i8* %125, i8* %0)
  %127 = icmp eq i32 %126, 0
  br label %originalBB10

originalBB14alteredBB:                            ; preds = %originalBB14, %101
  call void @srand(i32 %1)
  %128 = call i32 @rand()
  %_ = sub i32 %128, 50000
  %gen = mul i32 %_, 50000
  %_15 = sub i32 %128, 50000
  %gen16 = mul i32 %_15, 50000
  %_17 = sub i32 %128, 50000
  %gen18 = mul i32 %_17, 50000
  %129 = srem i32 %128, 50000
  %_19 = sub i32 0, %129
  %gen20 = add i32 %_19, 2
  %_21 = sub i32 %129, 2
  %gen22 = mul i32 %_21, 2
  %_23 = sub i32 %129, 2
  %gen24 = mul i32 %_23, 2
  %_25 = sub i32 0, %129
  %gen26 = add i32 %_25, 2
  %_27 = shl i32 %129, 2
  %130 = add i32 %129, 2
  br label %originalBB14
}

declare void @srand(i32)

declare i32 @rand()

attributes #0 = { noinline noreturn nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { noinline nounwind optnone readonly uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn nounwind }
attributes #13 = { nounwind readonly }
attributes #14 = { noreturn }
attributes #15 = { nounwind readnone }

!llvm.dbg.cu = !{!2, !82, !88, !93, !101, !202, !108, !115, !208, !185, !210, !195, !213, !216, !218, !220, !232, !235, !241, !243, !245, !247, !250, !252, !254, !256, !258, !260}
!llvm.ident = !{!263, !263, !263, !263, !263, !263, !263, !263, !263, !263, !263, !263, !263, !263, !263, !263, !263, !263, !263, !263, !263, !263, !263, !263, !263, !263, !263, !263}
!llvm.module.flags = !{!264, !265, !266, !267, !268}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "longopts", scope: !2, file: !3, line: 75, type: !63, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !9, nameTableKind: None)
!3 = !DIFile(filename: "src/id.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!4 = !{}
!5 = !{!6, !8}
!6 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!7 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!8 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!9 = !{!10, !17, !19, !23, !0, !25, !28, !30, !32, !34, !36, !38, !40, !42, !44, !46, !56}
!10 = !DIGlobalVariableExpression(var: !11, expr: !DIExpression())
!11 = distinct !DIGlobalVariable(name: "ruid", scope: !2, file: !3, line: 64, type: !12, isLocal: true, isDefinition: true)
!12 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !13, line: 79, baseType: !14)
!13 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/types.h", directory: "")
!14 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !15, line: 146, baseType: !16)
!15 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!16 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!17 = !DIGlobalVariableExpression(var: !18, expr: !DIExpression())
!18 = distinct !DIGlobalVariable(name: "euid", scope: !2, file: !3, line: 64, type: !12, isLocal: true, isDefinition: true)
!19 = !DIGlobalVariableExpression(var: !20, expr: !DIExpression())
!20 = distinct !DIGlobalVariable(name: "rgid", scope: !2, file: !3, line: 65, type: !21, isLocal: true, isDefinition: true)
!21 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !13, line: 64, baseType: !22)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !15, line: 147, baseType: !16)
!23 = !DIGlobalVariableExpression(var: !24, expr: !DIExpression())
!24 = distinct !DIGlobalVariable(name: "egid", scope: !2, file: !3, line: 65, type: !21, isLocal: true, isDefinition: true)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "just_context", scope: !2, file: !3, line: 45, type: !27, isLocal: true, isDefinition: true)
!27 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!28 = !DIGlobalVariableExpression(var: !29, expr: !DIExpression())
!29 = distinct !DIGlobalVariable(name: "just_group", scope: !2, file: !3, line: 51, type: !27, isLocal: true, isDefinition: true)
!30 = !DIGlobalVariableExpression(var: !31, expr: !DIExpression())
!31 = distinct !DIGlobalVariable(name: "use_name", scope: !2, file: !3, line: 61, type: !27, isLocal: true, isDefinition: true)
!32 = !DIGlobalVariableExpression(var: !33, expr: !DIExpression())
!33 = distinct !DIGlobalVariable(name: "use_real", scope: !2, file: !3, line: 53, type: !27, isLocal: true, isDefinition: true)
!34 = !DIGlobalVariableExpression(var: !35, expr: !DIExpression())
!35 = distinct !DIGlobalVariable(name: "just_user", scope: !2, file: !3, line: 55, type: !27, isLocal: true, isDefinition: true)
!36 = !DIGlobalVariableExpression(var: !37, expr: !DIExpression())
!37 = distinct !DIGlobalVariable(name: "opt_zero", scope: !2, file: !3, line: 47, type: !27, isLocal: true, isDefinition: true)
!38 = !DIGlobalVariableExpression(var: !39, expr: !DIExpression())
!39 = distinct !DIGlobalVariable(name: "just_group_list", scope: !2, file: !3, line: 49, type: !27, isLocal: true, isDefinition: true)
!40 = !DIGlobalVariableExpression(var: !41, expr: !DIExpression())
!41 = distinct !DIGlobalVariable(name: "context", scope: !2, file: !3, line: 69, type: !6, isLocal: true, isDefinition: true)
!42 = !DIGlobalVariableExpression(var: !43, expr: !DIExpression())
!43 = distinct !DIGlobalVariable(name: "multiple_users", scope: !2, file: !3, line: 59, type: !27, isLocal: true, isDefinition: true)
!44 = !DIGlobalVariableExpression(var: !45, expr: !DIExpression())
!45 = distinct !DIGlobalVariable(name: "ok", scope: !2, file: !3, line: 57, type: !27, isLocal: true, isDefinition: true)
!46 = !DIGlobalVariableExpression(var: !47, expr: !DIExpression())
!47 = distinct !DIGlobalVariable(name: "buf", scope: !48, file: !3, line: 327, type: !53, isLocal: true, isDefinition: true)
!48 = distinct !DISubprogram(name: "uidtostr_ptr", scope: !3, file: !3, line: 325, type: !49, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!49 = !DISubroutineType(types: !50)
!50 = !{!6, !51}
!51 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !52, size: 64)
!52 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12)
!53 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 168, elements: !54)
!54 = !{!55}
!55 = !DISubrange(count: 21)
!56 = !DIGlobalVariableExpression(var: !57, expr: !DIExpression())
!57 = distinct !DIGlobalVariable(name: "buf", scope: !58, file: !3, line: 316, type: !53, isLocal: true, isDefinition: true)
!58 = distinct !DISubprogram(name: "gidtostr_ptr", scope: !3, file: !3, line: 314, type: !59, scopeLine: 315, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!59 = !DISubroutineType(types: !60)
!60 = !{!6, !61}
!61 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !62, size: 64)
!62 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !21)
!63 = !DICompositeType(tag: DW_TAG_array_type, baseType: !64, size: 2560, elements: !76)
!64 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !65)
!65 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !66, line: 50, size: 256, elements: !67)
!66 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/getopt_ext.h", directory: "")
!67 = !{!68, !71, !73, !75}
!68 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !65, file: !66, line: 52, baseType: !69, size: 64)
!69 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !70, size: 64)
!70 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!71 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !65, file: !66, line: 55, baseType: !72, size: 32, offset: 64)
!72 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!73 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !65, file: !66, line: 56, baseType: !74, size: 64, offset: 128)
!74 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !72, size: 64)
!75 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !65, file: !66, line: 57, baseType: !72, size: 32, offset: 192)
!76 = !{!77}
!77 = !DISubrange(count: 10)
!78 = !DIGlobalVariableExpression(var: !79, expr: !DIExpression())
!79 = distinct !DIGlobalVariable(name: "buf", scope: !80, file: !81, line: 96, type: !53, isLocal: true, isDefinition: true)
!80 = distinct !DISubprogram(name: "gidtostr_ptr", scope: !81, file: !81, line: 94, type: !59, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !82, retainedNodes: !4)
!81 = !DIFile(filename: "src/group-list.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!82 = distinct !DICompileUnit(language: DW_LANG_C99, file: !81, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !83, globals: !85, nameTableKind: None)
!83 = !{!8, !84}
!84 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!85 = !{!78}
!86 = !DIGlobalVariableExpression(var: !87, expr: !DIExpression())
!87 = distinct !DIGlobalVariable(name: "Version", scope: !88, file: !89, line: 2, type: !69, isLocal: false, isDefinition: true)
!88 = distinct !DICompileUnit(language: DW_LANG_C99, file: !89, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, globals: !90, nameTableKind: None)
!89 = !DIFile(filename: "src/version.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!90 = !{!86}
!91 = !DIGlobalVariableExpression(var: !92, expr: !DIExpression())
!92 = distinct !DIGlobalVariable(name: "ignore_EPIPE", scope: !93, file: !98, line: 56, type: !27, isLocal: true, isDefinition: true)
!93 = distinct !DICompileUnit(language: DW_LANG_C99, file: !94, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, globals: !95, nameTableKind: None)
!94 = !DIFile(filename: "./lib/closeout.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!95 = !{!96, !91}
!96 = !DIGlobalVariableExpression(var: !97, expr: !DIExpression())
!97 = distinct !DIGlobalVariable(name: "file_name", scope: !93, file: !98, line: 46, type: !69, isLocal: true, isDefinition: true)
!98 = !DIFile(filename: "lib/closeout.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!99 = !DIGlobalVariableExpression(var: !100, expr: !DIExpression())
!100 = distinct !DIGlobalVariable(name: "exit_failure", scope: !101, file: !104, line: 24, type: !105, isLocal: false, isDefinition: true)
!101 = distinct !DICompileUnit(language: DW_LANG_C99, file: !102, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, globals: !103, nameTableKind: None)
!102 = !DIFile(filename: "./lib/exitfail.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!103 = !{!99}
!104 = !DIFile(filename: "lib/exitfail.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!105 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !72)
!106 = !DIGlobalVariableExpression(var: !107, expr: !DIExpression())
!107 = distinct !DIGlobalVariable(name: "program_name", scope: !108, file: !112, line: 33, type: !69, isLocal: false, isDefinition: true)
!108 = distinct !DICompileUnit(language: DW_LANG_C99, file: !109, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !110, globals: !111, nameTableKind: None)
!109 = !DIFile(filename: "./lib/progname.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!110 = !{!8, !6}
!111 = !{!106}
!112 = !DIFile(filename: "lib/progname.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!113 = !DIGlobalVariableExpression(var: !114, expr: !DIExpression())
!114 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !115, file: !139, line: 116, type: !150, isLocal: true, isDefinition: true)
!115 = distinct !DICompileUnit(language: DW_LANG_C99, file: !116, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !117, retainedTypes: !132, globals: !136, nameTableKind: None)
!116 = !DIFile(filename: "./lib/quotearg.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!117 = !{!118}
!118 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quoting_style", file: !119, line: 32, baseType: !16, size: 32, elements: !120)
!119 = !DIFile(filename: "./lib/quotearg.h", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!120 = !{!121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131}
!121 = !DIEnumerator(name: "literal_quoting_style", value: 0, isUnsigned: true)
!122 = !DIEnumerator(name: "shell_quoting_style", value: 1, isUnsigned: true)
!123 = !DIEnumerator(name: "shell_always_quoting_style", value: 2, isUnsigned: true)
!124 = !DIEnumerator(name: "shell_escape_quoting_style", value: 3, isUnsigned: true)
!125 = !DIEnumerator(name: "shell_escape_always_quoting_style", value: 4, isUnsigned: true)
!126 = !DIEnumerator(name: "c_quoting_style", value: 5, isUnsigned: true)
!127 = !DIEnumerator(name: "c_maybe_quoting_style", value: 6, isUnsigned: true)
!128 = !DIEnumerator(name: "escape_quoting_style", value: 7, isUnsigned: true)
!129 = !DIEnumerator(name: "locale_quoting_style", value: 8, isUnsigned: true)
!130 = !DIEnumerator(name: "clocale_quoting_style", value: 9, isUnsigned: true)
!131 = !DIEnumerator(name: "custom_quoting_style", value: 10, isUnsigned: true)
!132 = !{!72, !133, !134}
!133 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!134 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !135, line: 46, baseType: !84)
!135 = !DIFile(filename: "/usr/lib/llvm-9/lib/clang/9.0.1/include/stddef.h", directory: "")
!136 = !{!137, !144, !148, !113, !160, !165, !172, !174}
!137 = !DIGlobalVariableExpression(var: !138, expr: !DIExpression())
!138 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !115, file: !139, line: 85, type: !140, isLocal: false, isDefinition: true)
!139 = !DIFile(filename: "lib/quotearg.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!140 = !DICompositeType(tag: DW_TAG_array_type, baseType: !141, size: 704, elements: !142)
!141 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !69)
!142 = !{!143}
!143 = !DISubrange(count: 11)
!144 = !DIGlobalVariableExpression(var: !145, expr: !DIExpression())
!145 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !115, file: !139, line: 101, type: !146, isLocal: false, isDefinition: true)
!146 = !DICompositeType(tag: DW_TAG_array_type, baseType: !147, size: 320, elements: !76)
!147 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !118)
!148 = !DIGlobalVariableExpression(var: !149, expr: !DIExpression())
!149 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !115, file: !139, line: 1052, type: !150, isLocal: false, isDefinition: true)
!150 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !139, line: 65, size: 448, elements: !151)
!151 = !{!152, !153, !154, !158, !159}
!152 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !150, file: !139, line: 68, baseType: !118, size: 32)
!153 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !150, file: !139, line: 71, baseType: !72, size: 32, offset: 32)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !150, file: !139, line: 75, baseType: !155, size: 256, offset: 64)
!155 = !DICompositeType(tag: DW_TAG_array_type, baseType: !16, size: 256, elements: !156)
!156 = !{!157}
!157 = !DISubrange(count: 8)
!158 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !150, file: !139, line: 78, baseType: !69, size: 64, offset: 320)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !150, file: !139, line: 81, baseType: !69, size: 64, offset: 384)
!160 = !DIGlobalVariableExpression(var: !161, expr: !DIExpression())
!161 = distinct !DIGlobalVariable(name: "slot0", scope: !115, file: !139, line: 842, type: !162, isLocal: true, isDefinition: true)
!162 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 2048, elements: !163)
!163 = !{!164}
!164 = !DISubrange(count: 256)
!165 = !DIGlobalVariableExpression(var: !166, expr: !DIExpression())
!166 = distinct !DIGlobalVariable(name: "slotvec", scope: !115, file: !139, line: 845, type: !167, isLocal: true, isDefinition: true)
!167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !168, size: 64)
!168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !139, line: 834, size: 128, elements: !169)
!169 = !{!170, !171}
!170 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !168, file: !139, line: 836, baseType: !134, size: 64)
!171 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !168, file: !139, line: 837, baseType: !6, size: 64, offset: 64)
!172 = !DIGlobalVariableExpression(var: !173, expr: !DIExpression())
!173 = distinct !DIGlobalVariable(name: "nslots", scope: !115, file: !139, line: 843, type: !72, isLocal: true, isDefinition: true)
!174 = !DIGlobalVariableExpression(var: !175, expr: !DIExpression())
!175 = distinct !DIGlobalVariable(name: "slotvec0", scope: !115, file: !139, line: 844, type: !168, isLocal: true, isDefinition: true)
!176 = !DIGlobalVariableExpression(var: !177, expr: !DIExpression())
!177 = distinct !DIGlobalVariable(name: "E_bad_spec", scope: !178, file: !179, line: 108, type: !69, isLocal: true, isDefinition: true)
!178 = distinct !DISubprogram(name: "parse_with_separator", scope: !179, file: !179, line: 102, type: !180, scopeLine: 105, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !185, retainedNodes: !4)
!179 = !DIFile(filename: "lib/userspec.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!180 = !DISubroutineType(types: !181)
!181 = !{!69, !69, !69, !182, !183, !184, !184}
!182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12, size: 64)
!183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !21, size: 64)
!184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6, size: 64)
!185 = distinct !DICompileUnit(language: DW_LANG_C99, file: !186, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !187, globals: !188, nameTableKind: None)
!186 = !DIFile(filename: "./lib/userspec.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!187 = !{!8, !12, !21}
!188 = !{!189, !191, !176}
!189 = !DIGlobalVariableExpression(var: !190, expr: !DIExpression())
!190 = distinct !DIGlobalVariable(name: "E_invalid_user", scope: !178, file: !179, line: 106, type: !69, isLocal: true, isDefinition: true)
!191 = !DIGlobalVariableExpression(var: !192, expr: !DIExpression())
!192 = distinct !DIGlobalVariable(name: "E_invalid_group", scope: !178, file: !179, line: 107, type: !69, isLocal: true, isDefinition: true)
!193 = !DIGlobalVariableExpression(var: !194, expr: !DIExpression())
!194 = distinct !DIGlobalVariable(name: "version_etc_copyright", scope: !195, file: !198, line: 26, type: !199, isLocal: false, isDefinition: true)
!195 = distinct !DICompileUnit(language: DW_LANG_C99, file: !196, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, globals: !197, nameTableKind: None)
!196 = !DIFile(filename: "./lib/version-etc-fsf.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!197 = !{!193}
!198 = !DIFile(filename: "lib/version-etc-fsf.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!199 = !DICompositeType(tag: DW_TAG_array_type, baseType: !70, size: 376, elements: !200)
!200 = !{!201}
!201 = !DISubrange(count: 47)
!202 = distinct !DICompileUnit(language: DW_LANG_C99, file: !203, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !204, nameTableKind: None)
!203 = !DIFile(filename: "./lib/umaxtostr.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!204 = !{!205}
!205 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !206, line: 102, baseType: !207)
!206 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!207 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uintmax_t", file: !15, line: 73, baseType: !84)
!208 = distinct !DICompileUnit(language: DW_LANG_C99, file: !209, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, nameTableKind: None)
!209 = !DIFile(filename: "./lib/se-selinux.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!210 = distinct !DICompileUnit(language: DW_LANG_C99, file: !211, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !212, nameTableKind: None)
!211 = !DIFile(filename: "./lib/version-etc.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!212 = !{!8}
!213 = distinct !DICompileUnit(language: DW_LANG_C99, file: !214, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !215, nameTableKind: None)
!214 = !DIFile(filename: "./lib/xmalloc.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!215 = !{!134, !6, !8}
!216 = distinct !DICompileUnit(language: DW_LANG_C99, file: !217, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, nameTableKind: None)
!217 = !DIFile(filename: "./lib/xalloc-die.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!218 = distinct !DICompileUnit(language: DW_LANG_C99, file: !219, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, nameTableKind: None)
!219 = !DIFile(filename: "./lib/xgetgroups.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!220 = distinct !DICompileUnit(language: DW_LANG_C99, file: !221, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !222, retainedTypes: !231, nameTableKind: None)
!221 = !DIFile(filename: "./lib/xstrtoul.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!222 = !{!223}
!223 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "strtol_error", file: !224, line: 25, baseType: !16, size: 32, elements: !225)
!224 = !DIFile(filename: "./lib/xstrtol.h", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!225 = !{!226, !227, !228, !229, !230}
!226 = !DIEnumerator(name: "LONGINT_OK", value: 0, isUnsigned: true)
!227 = !DIEnumerator(name: "LONGINT_OVERFLOW", value: 1, isUnsigned: true)
!228 = !DIEnumerator(name: "LONGINT_INVALID_SUFFIX_CHAR", value: 2, isUnsigned: true)
!229 = !DIEnumerator(name: "LONGINT_INVALID_SUFFIX_CHAR_WITH_OVERFLOW", value: 3, isUnsigned: true)
!230 = !DIEnumerator(name: "LONGINT_INVALID", value: 4, isUnsigned: true)
!231 = !{!72, !133}
!232 = distinct !DICompileUnit(language: DW_LANG_C99, file: !233, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !234, nameTableKind: None)
!233 = !DIFile(filename: "./lib/mbrtowc.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!234 = !{!134}
!235 = distinct !DICompileUnit(language: DW_LANG_C99, file: !236, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !237, nameTableKind: None)
!236 = !DIFile(filename: "./lib/c-strcasecmp.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!237 = !{!238}
!238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !239, size: 64)
!239 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !240)
!240 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!241 = distinct !DICompileUnit(language: DW_LANG_C99, file: !242, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, nameTableKind: None)
!242 = !DIFile(filename: "./lib/close-stream.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!243 = distinct !DICompileUnit(language: DW_LANG_C99, file: !244, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, nameTableKind: None)
!244 = !DIFile(filename: "./lib/hard-locale.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!245 = distinct !DICompileUnit(language: DW_LANG_C99, file: !246, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !212, nameTableKind: None)
!246 = !DIFile(filename: "./lib/localcharset.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!247 = distinct !DICompileUnit(language: DW_LANG_C99, file: !248, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !249, nameTableKind: None)
!248 = !DIFile(filename: "./lib/mgetgroups.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!249 = !{!8, !21, !134}
!250 = distinct !DICompileUnit(language: DW_LANG_C99, file: !251, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !212, nameTableKind: None)
!251 = !DIFile(filename: "./lib/setlocale_null.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!252 = distinct !DICompileUnit(language: DW_LANG_C99, file: !253, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, nameTableKind: None)
!253 = !DIFile(filename: "./lib/fclose.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!254 = distinct !DICompileUnit(language: DW_LANG_C99, file: !255, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !212, nameTableKind: None)
!255 = !DIFile(filename: "./lib/fflush.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!256 = distinct !DICompileUnit(language: DW_LANG_C99, file: !257, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !212, nameTableKind: None)
!257 = !DIFile(filename: "./lib/fseeko.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!258 = distinct !DICompileUnit(language: DW_LANG_C99, file: !259, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, nameTableKind: None)
!259 = !DIFile(filename: "./lib/c-ctype.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!260 = distinct !DICompileUnit(language: DW_LANG_C99, file: !261, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !262, nameTableKind: None)
!261 = !DIFile(filename: "./lib/getugroups.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!262 = !{!21, !8}
!263 = !{!"clang version 9.0.1-12 "}
!264 = !{i32 2, !"Dwarf Version", i32 4}
!265 = !{i32 2, !"Debug Info Version", i32 3}
!266 = !{i32 1, !"wchar_size", i32 4}
!267 = !{i32 1, !"ThinLTO", i32 0}
!268 = !{i32 1, !"EnableSplitLTOUnit", i32 0}
!269 = distinct !DISubprogram(name: "usage", scope: !3, file: !3, line: 90, type: !270, scopeLine: 91, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4)
!270 = !DISubroutineType(types: !271)
!271 = !{null, !72}
!272 = !DILocalVariable(name: "status", arg: 1, scope: !269, file: !3, line: 90, type: !72)
!273 = !DILocation(line: 90, column: 12, scope: !269)
!274 = !DILocation(line: 92, column: 7, scope: !275)
!275 = distinct !DILexicalBlock(scope: !269, file: !3, line: 92, column: 7)
!276 = !DILocation(line: 92, column: 14, scope: !275)
!277 = !DILocation(line: 92, column: 7, scope: !269)
!278 = !DILocation(line: 93, column: 5, scope: !275)
!279 = !DILocation(line: 93, column: 5, scope: !280)
!280 = distinct !DILexicalBlock(scope: !275, file: !3, line: 93, column: 5)
!281 = !DILocation(line: 96, column: 15, scope: !282)
!282 = distinct !DILexicalBlock(scope: !275, file: !3, line: 95, column: 5)
!283 = !DILocation(line: 96, column: 55, scope: !282)
!284 = !DILocation(line: 96, column: 7, scope: !282)
!285 = !DILocation(line: 97, column: 7, scope: !282)
!286 = !DILocation(line: 102, column: 7, scope: !282)
!287 = !DILocation(line: 113, column: 7, scope: !282)
!288 = !DILocation(line: 114, column: 7, scope: !282)
!289 = !DILocation(line: 115, column: 7, scope: !282)
!290 = !DILocation(line: 119, column: 7, scope: !282)
!291 = !DILocation(line: 121, column: 9, scope: !269)
!292 = !DILocation(line: 121, column: 3, scope: !269)
!293 = distinct !DISubprogram(name: "emit_ancillary_info", scope: !294, file: !294, line: 634, type: !295, scopeLine: 635, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!294 = !DIFile(filename: "src/system.h", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!295 = !DISubroutineType(types: !296)
!296 = !{null, !69}
!297 = !DILocalVariable(name: "program", arg: 1, scope: !293, file: !294, line: 634, type: !69)
!298 = !DILocation(line: 634, column: 34, scope: !293)
!299 = !DILocalVariable(name: "infomap", scope: !293, file: !294, line: 636, type: !300)
!300 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 896, elements: !306)
!301 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !302)
!302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "infomap", scope: !293, file: !294, line: 636, size: 128, elements: !303)
!303 = !{!304, !305}
!304 = !DIDerivedType(tag: DW_TAG_member, name: "program", scope: !302, file: !294, line: 636, baseType: !69, size: 64)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !302, file: !294, line: 636, baseType: !69, size: 64, offset: 64)
!306 = !{!307}
!307 = !DISubrange(count: 7)
!308 = !DILocation(line: 636, column: 67, scope: !293)
!309 = !DILocalVariable(name: "node", scope: !293, file: !294, line: 646, type: !69)
!310 = !DILocation(line: 646, column: 15, scope: !293)
!311 = !DILocation(line: 646, column: 22, scope: !293)
!312 = !DILocalVariable(name: "map_prog", scope: !293, file: !294, line: 647, type: !313)
!313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !301, size: 64)
!314 = !DILocation(line: 647, column: 25, scope: !293)
!315 = !DILocation(line: 647, column: 36, scope: !293)
!316 = !DILocation(line: 649, column: 3, scope: !293)
!317 = !DILocation(line: 649, column: 10, scope: !293)
!318 = !DILocation(line: 649, column: 20, scope: !293)
!319 = !DILocation(line: 649, column: 28, scope: !293)
!320 = !DILocation(line: 649, column: 33, scope: !293)
!321 = !DILocation(line: 649, column: 31, scope: !293)
!322 = !DILocation(line: 0, scope: !293)
!323 = !DILocation(line: 650, column: 13, scope: !293)
!324 = distinct !{!324, !316, !323}
!325 = !DILocation(line: 652, column: 7, scope: !326)
!326 = distinct !DILexicalBlock(scope: !293, file: !294, line: 652, column: 7)
!327 = !DILocation(line: 652, column: 17, scope: !326)
!328 = !DILocation(line: 652, column: 7, scope: !293)
!329 = !DILocation(line: 653, column: 12, scope: !326)
!330 = !DILocation(line: 653, column: 22, scope: !326)
!331 = !DILocation(line: 653, column: 10, scope: !326)
!332 = !DILocation(line: 653, column: 5, scope: !326)
!333 = !DILocation(line: 655, column: 11, scope: !293)
!334 = !DILocation(line: 655, column: 3, scope: !293)
!335 = !DILocalVariable(name: "lc_messages", scope: !293, file: !294, line: 659, type: !69)
!336 = !DILocation(line: 659, column: 15, scope: !293)
!337 = !DILocation(line: 659, column: 29, scope: !293)
!338 = !DILocation(line: 660, column: 7, scope: !339)
!339 = distinct !DILexicalBlock(scope: !293, file: !294, line: 660, column: 7)
!340 = !DILocation(line: 660, column: 19, scope: !339)
!341 = !DILocation(line: 660, column: 22, scope: !339)
!342 = !DILocation(line: 660, column: 7, scope: !293)
!343 = !DILocation(line: 666, column: 7, scope: !344)
!344 = distinct !DILexicalBlock(scope: !339, file: !294, line: 661, column: 5)
!345 = !DILocation(line: 668, column: 5, scope: !344)
!346 = !DILocation(line: 669, column: 11, scope: !293)
!347 = !DILocation(line: 670, column: 24, scope: !293)
!348 = !DILocation(line: 669, column: 3, scope: !293)
!349 = !DILocation(line: 671, column: 11, scope: !293)
!350 = !DILocation(line: 672, column: 11, scope: !293)
!351 = !DILocation(line: 672, column: 17, scope: !293)
!352 = !DILocation(line: 672, column: 25, scope: !293)
!353 = !DILocation(line: 672, column: 22, scope: !293)
!354 = !DILocation(line: 671, column: 3, scope: !293)
!355 = !DILocation(line: 673, column: 1, scope: !293)
!356 = !DILocalVariable(name: "lc_messages", scope: !357, file: !294, line: 659, type: !69)
!357 = distinct !DISubprogram(name: "emit_ancillary_info", scope: !294, file: !294, line: 634, type: !295, scopeLine: 635, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !358, retainedNodes: !4)
!358 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !359, nameTableKind: None)
!359 = !{!360, !362, !364, !366, !368, !378, !380, !382, !384, !386, !388, !390, !392, !394, !396, !398, !401}
!360 = !DIGlobalVariableExpression(var: !361, expr: !DIExpression())
!361 = distinct !DIGlobalVariable(name: "ruid", scope: !358, file: !3, line: 64, type: !12, isLocal: true, isDefinition: true)
!362 = !DIGlobalVariableExpression(var: !363, expr: !DIExpression())
!363 = distinct !DIGlobalVariable(name: "euid", scope: !358, file: !3, line: 64, type: !12, isLocal: true, isDefinition: true)
!364 = !DIGlobalVariableExpression(var: !365, expr: !DIExpression())
!365 = distinct !DIGlobalVariable(name: "rgid", scope: !358, file: !3, line: 65, type: !21, isLocal: true, isDefinition: true)
!366 = !DIGlobalVariableExpression(var: !367, expr: !DIExpression())
!367 = distinct !DIGlobalVariable(name: "egid", scope: !358, file: !3, line: 65, type: !21, isLocal: true, isDefinition: true)
!368 = !DIGlobalVariableExpression(var: !369, expr: !DIExpression())
!369 = distinct !DIGlobalVariable(name: "longopts", scope: !358, file: !3, line: 75, type: !370, isLocal: true, isDefinition: true)
!370 = !DICompositeType(tag: DW_TAG_array_type, baseType: !371, size: 2560, elements: !76)
!371 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !372)
!372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !66, line: 50, size: 256, elements: !373)
!373 = !{!374, !375, !376, !377}
!374 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !372, file: !66, line: 52, baseType: !69, size: 64)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !372, file: !66, line: 55, baseType: !72, size: 32, offset: 64)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !372, file: !66, line: 56, baseType: !74, size: 64, offset: 128)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !372, file: !66, line: 57, baseType: !72, size: 32, offset: 192)
!378 = !DIGlobalVariableExpression(var: !379, expr: !DIExpression())
!379 = distinct !DIGlobalVariable(name: "just_context", scope: !358, file: !3, line: 45, type: !27, isLocal: true, isDefinition: true)
!380 = !DIGlobalVariableExpression(var: !381, expr: !DIExpression())
!381 = distinct !DIGlobalVariable(name: "just_group", scope: !358, file: !3, line: 51, type: !27, isLocal: true, isDefinition: true)
!382 = !DIGlobalVariableExpression(var: !383, expr: !DIExpression())
!383 = distinct !DIGlobalVariable(name: "use_name", scope: !358, file: !3, line: 61, type: !27, isLocal: true, isDefinition: true)
!384 = !DIGlobalVariableExpression(var: !385, expr: !DIExpression())
!385 = distinct !DIGlobalVariable(name: "use_real", scope: !358, file: !3, line: 53, type: !27, isLocal: true, isDefinition: true)
!386 = !DIGlobalVariableExpression(var: !387, expr: !DIExpression())
!387 = distinct !DIGlobalVariable(name: "just_user", scope: !358, file: !3, line: 55, type: !27, isLocal: true, isDefinition: true)
!388 = !DIGlobalVariableExpression(var: !389, expr: !DIExpression())
!389 = distinct !DIGlobalVariable(name: "opt_zero", scope: !358, file: !3, line: 47, type: !27, isLocal: true, isDefinition: true)
!390 = !DIGlobalVariableExpression(var: !391, expr: !DIExpression())
!391 = distinct !DIGlobalVariable(name: "just_group_list", scope: !358, file: !3, line: 49, type: !27, isLocal: true, isDefinition: true)
!392 = !DIGlobalVariableExpression(var: !393, expr: !DIExpression())
!393 = distinct !DIGlobalVariable(name: "context", scope: !358, file: !3, line: 69, type: !6, isLocal: true, isDefinition: true)
!394 = !DIGlobalVariableExpression(var: !395, expr: !DIExpression())
!395 = distinct !DIGlobalVariable(name: "multiple_users", scope: !358, file: !3, line: 59, type: !27, isLocal: true, isDefinition: true)
!396 = !DIGlobalVariableExpression(var: !397, expr: !DIExpression())
!397 = distinct !DIGlobalVariable(name: "ok", scope: !358, file: !3, line: 57, type: !27, isLocal: true, isDefinition: true)
!398 = !DIGlobalVariableExpression(var: !399, expr: !DIExpression())
!399 = distinct !DIGlobalVariable(name: "buf", scope: !400, file: !3, line: 327, type: !53, isLocal: true, isDefinition: true)
!400 = distinct !DISubprogram(name: "uidtostr_ptr", scope: !3, file: !3, line: 325, type: !49, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !358, retainedNodes: !4)
!401 = !DIGlobalVariableExpression(var: !402, expr: !DIExpression())
!402 = distinct !DIGlobalVariable(name: "buf", scope: !403, file: !3, line: 316, type: !53, isLocal: true, isDefinition: true)
!403 = distinct !DISubprogram(name: "gidtostr_ptr", scope: !3, file: !3, line: 314, type: !59, scopeLine: 315, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !358, retainedNodes: !4)
!404 = distinct !DISubprogram(name: "main", scope: !3, file: !3, line: 125, type: !405, scopeLine: 126, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4)
!405 = !DISubroutineType(types: !406)
!406 = !{!72, !72, !184}
!407 = !DILocalVariable(name: "argc", arg: 1, scope: !404, file: !3, line: 125, type: !72)
!408 = !DILocation(line: 125, column: 11, scope: !404)
!409 = !DILocalVariable(name: "argv", arg: 2, scope: !404, file: !3, line: 125, type: !184)
!410 = !DILocation(line: 125, column: 24, scope: !404)
!411 = !DILocalVariable(name: "optc", scope: !404, file: !3, line: 127, type: !72)
!412 = !DILocation(line: 127, column: 7, scope: !404)
!413 = !DILocalVariable(name: "selinux_enabled", scope: !404, file: !3, line: 128, type: !72)
!414 = !DILocation(line: 128, column: 7, scope: !404)
!415 = !DILocalVariable(name: "smack_enabled", scope: !404, file: !3, line: 129, type: !27)
!416 = !DILocation(line: 129, column: 8, scope: !404)
!417 = !DILocation(line: 129, column: 24, scope: !404)
!418 = !DILocalVariable(name: "pw_name", scope: !404, file: !3, line: 130, type: !6)
!419 = !DILocation(line: 130, column: 9, scope: !404)
!420 = !DILocation(line: 133, column: 21, scope: !404)
!421 = !DILocation(line: 133, column: 3, scope: !404)
!422 = !DILocation(line: 134, column: 3, scope: !404)
!423 = !DILocation(line: 135, column: 3, scope: !404)
!424 = !DILocation(line: 136, column: 3, scope: !404)
!425 = !DILocation(line: 138, column: 3, scope: !404)
!426 = !DILocation(line: 140, column: 3, scope: !404)
!427 = !DILocation(line: 140, column: 31, scope: !404)
!428 = !DILocation(line: 140, column: 37, scope: !404)
!429 = !DILocation(line: 140, column: 18, scope: !404)
!430 = !DILocation(line: 140, column: 16, scope: !404)
!431 = !DILocation(line: 140, column: 72, scope: !404)
!432 = !DILocation(line: 142, column: 15, scope: !433)
!433 = distinct !DILexicalBlock(scope: !404, file: !3, line: 141, column: 5)
!434 = !DILocation(line: 142, column: 7, scope: !433)
!435 = !DILocation(line: 146, column: 11, scope: !436)
!436 = distinct !DILexicalBlock(scope: !433, file: !3, line: 143, column: 9)
!437 = !DILocation(line: 156, column: 16, scope: !438)
!438 = distinct !DILexicalBlock(scope: !436, file: !3, line: 156, column: 15)
!439 = !DILocation(line: 156, column: 15, scope: !436)
!440 = !DILocation(line: 157, column: 13, scope: !438)
!441 = !DILocation(line: 160, column: 24, scope: !436)
!442 = !DILocation(line: 161, column: 11, scope: !436)
!443 = !DILocation(line: 164, column: 22, scope: !436)
!444 = !DILocation(line: 165, column: 11, scope: !436)
!445 = !DILocation(line: 167, column: 20, scope: !436)
!446 = !DILocation(line: 168, column: 11, scope: !436)
!447 = !DILocation(line: 170, column: 20, scope: !436)
!448 = !DILocation(line: 171, column: 11, scope: !436)
!449 = !DILocation(line: 173, column: 21, scope: !436)
!450 = !DILocation(line: 174, column: 11, scope: !436)
!451 = !DILocation(line: 176, column: 20, scope: !436)
!452 = !DILocation(line: 177, column: 11, scope: !436)
!453 = !DILocation(line: 179, column: 27, scope: !436)
!454 = !DILocation(line: 180, column: 11, scope: !436)
!455 = !DILocation(line: 181, column: 9, scope: !436)
!456 = !DILocation(line: 182, column: 9, scope: !436)
!457 = !DILocation(line: 184, column: 11, scope: !436)
!458 = distinct !{!458, !426, !459}
!459 = !DILocation(line: 186, column: 5, scope: !404)
!460 = !DILocalVariable(name: "n_ids", scope: !404, file: !3, line: 188, type: !134)
!461 = !DILocation(line: 188, column: 10, scope: !404)
!462 = !DILocation(line: 188, column: 18, scope: !404)
!463 = !DILocation(line: 188, column: 25, scope: !404)
!464 = !DILocation(line: 188, column: 23, scope: !404)
!465 = !DILocation(line: 190, column: 7, scope: !466)
!466 = distinct !DILexicalBlock(scope: !404, file: !3, line: 190, column: 7)
!467 = !DILocation(line: 190, column: 13, scope: !466)
!468 = !DILocation(line: 190, column: 16, scope: !466)
!469 = !DILocation(line: 190, column: 7, scope: !404)
!470 = !DILocation(line: 191, column: 5, scope: !466)
!471 = !DILocation(line: 194, column: 7, scope: !472)
!472 = distinct !DILexicalBlock(scope: !404, file: !3, line: 194, column: 7)
!473 = !DILocation(line: 194, column: 19, scope: !472)
!474 = !DILocation(line: 194, column: 17, scope: !472)
!475 = !DILocation(line: 194, column: 32, scope: !472)
!476 = !DILocation(line: 194, column: 30, scope: !472)
!477 = !DILocation(line: 194, column: 50, scope: !472)
!478 = !DILocation(line: 194, column: 48, scope: !472)
!479 = !DILocation(line: 194, column: 63, scope: !472)
!480 = !DILocation(line: 194, column: 7, scope: !404)
!481 = !DILocation(line: 195, column: 5, scope: !472)
!482 = !DILocalVariable(name: "default_format", scope: !404, file: !3, line: 197, type: !27)
!483 = !DILocation(line: 197, column: 8, scope: !404)
!484 = !DILocation(line: 197, column: 28, scope: !404)
!485 = !DILocation(line: 198, column: 28, scope: !404)
!486 = !DILocation(line: 198, column: 31, scope: !404)
!487 = !DILocation(line: 199, column: 28, scope: !404)
!488 = !DILocation(line: 199, column: 31, scope: !404)
!489 = !DILocation(line: 200, column: 28, scope: !404)
!490 = !DILocation(line: 200, column: 31, scope: !404)
!491 = !DILocation(line: 197, column: 25, scope: !404)
!492 = !DILocation(line: 202, column: 7, scope: !493)
!493 = distinct !DILexicalBlock(scope: !404, file: !3, line: 202, column: 7)
!494 = !DILocation(line: 202, column: 22, scope: !493)
!495 = !DILocation(line: 202, column: 26, scope: !493)
!496 = !DILocation(line: 202, column: 35, scope: !493)
!497 = !DILocation(line: 202, column: 38, scope: !493)
!498 = !DILocation(line: 202, column: 7, scope: !404)
!499 = !DILocation(line: 203, column: 5, scope: !493)
!500 = !DILocation(line: 206, column: 7, scope: !501)
!501 = distinct !DILexicalBlock(scope: !404, file: !3, line: 206, column: 7)
!502 = !DILocation(line: 206, column: 22, scope: !501)
!503 = !DILocation(line: 206, column: 25, scope: !501)
!504 = !DILocation(line: 206, column: 7, scope: !404)
!505 = !DILocation(line: 207, column: 5, scope: !501)
!506 = !DILocation(line: 215, column: 7, scope: !507)
!507 = distinct !DILexicalBlock(scope: !404, file: !3, line: 215, column: 7)
!508 = !DILocation(line: 215, column: 13, scope: !507)
!509 = !DILocation(line: 216, column: 11, scope: !507)
!510 = !DILocation(line: 217, column: 11, scope: !507)
!511 = !DILocation(line: 217, column: 15, scope: !507)
!512 = !DILocation(line: 217, column: 30, scope: !507)
!513 = !DILocation(line: 217, column: 35, scope: !507)
!514 = !DILocation(line: 215, column: 7, scope: !404)
!515 = !DILocation(line: 220, column: 12, scope: !516)
!516 = distinct !DILexicalBlock(scope: !517, file: !3, line: 220, column: 11)
!517 = distinct !DILexicalBlock(scope: !507, file: !3, line: 218, column: 5)
!518 = !DILocation(line: 220, column: 28, scope: !516)
!519 = !DILocation(line: 220, column: 31, scope: !516)
!520 = !DILocation(line: 220, column: 49, scope: !516)
!521 = !DILocation(line: 220, column: 52, scope: !516)
!522 = !DILocation(line: 221, column: 11, scope: !516)
!523 = !DILocation(line: 221, column: 15, scope: !516)
!524 = !DILocation(line: 222, column: 15, scope: !516)
!525 = !DILocation(line: 222, column: 18, scope: !516)
!526 = !DILocation(line: 222, column: 55, scope: !516)
!527 = !DILocation(line: 223, column: 15, scope: !516)
!528 = !DILocation(line: 223, column: 18, scope: !516)
!529 = !DILocation(line: 220, column: 11, scope: !517)
!530 = !DILocation(line: 224, column: 9, scope: !516)
!531 = !DILocation(line: 225, column: 5, scope: !517)
!532 = !DILocation(line: 227, column: 7, scope: !533)
!533 = distinct !DILexicalBlock(scope: !404, file: !3, line: 227, column: 7)
!534 = !DILocation(line: 227, column: 13, scope: !533)
!535 = !DILocation(line: 227, column: 7, scope: !404)
!536 = !DILocation(line: 229, column: 24, scope: !537)
!537 = distinct !DILexicalBlock(scope: !533, file: !3, line: 228, column: 5)
!538 = !DILocation(line: 229, column: 30, scope: !537)
!539 = !DILocation(line: 229, column: 22, scope: !537)
!540 = !DILocation(line: 234, column: 16, scope: !537)
!541 = !DILocation(line: 234, column: 13, scope: !537)
!542 = !DILocation(line: 236, column: 7, scope: !537)
!543 = !DILocation(line: 236, column: 14, scope: !544)
!544 = distinct !DILexicalBlock(scope: !545, file: !3, line: 236, column: 7)
!545 = distinct !DILexicalBlock(scope: !537, file: !3, line: 236, column: 7)
!546 = !DILocation(line: 236, column: 23, scope: !544)
!547 = !DILocation(line: 236, column: 21, scope: !544)
!548 = !DILocation(line: 236, column: 7, scope: !545)
!549 = !DILocalVariable(name: "pwd", scope: !550, file: !3, line: 238, type: !551)
!550 = distinct !DILexicalBlock(scope: !544, file: !3, line: 237, column: 9)
!551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !552, size: 64)
!552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "passwd", file: !553, line: 49, size: 384, elements: !554)
!553 = !DIFile(filename: "/usr/include/pwd.h", directory: "")
!554 = !{!555, !556, !557, !558, !559, !560, !561}
!555 = !DIDerivedType(tag: DW_TAG_member, name: "pw_name", scope: !552, file: !553, line: 51, baseType: !6, size: 64)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "pw_passwd", scope: !552, file: !553, line: 52, baseType: !6, size: 64, offset: 64)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "pw_uid", scope: !552, file: !553, line: 54, baseType: !14, size: 32, offset: 128)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "pw_gid", scope: !552, file: !553, line: 55, baseType: !22, size: 32, offset: 160)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "pw_gecos", scope: !552, file: !553, line: 56, baseType: !6, size: 64, offset: 192)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "pw_dir", scope: !552, file: !553, line: 57, baseType: !6, size: 64, offset: 256)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "pw_shell", scope: !552, file: !553, line: 58, baseType: !6, size: 64, offset: 320)
!562 = !DILocation(line: 238, column: 26, scope: !550)
!563 = !DILocalVariable(name: "spec", scope: !550, file: !3, line: 239, type: !69)
!564 = !DILocation(line: 239, column: 23, scope: !550)
!565 = !DILocation(line: 239, column: 30, scope: !550)
!566 = !DILocation(line: 239, column: 35, scope: !550)
!567 = !DILocation(line: 243, column: 16, scope: !568)
!568 = distinct !DILexicalBlock(scope: !550, file: !3, line: 243, column: 15)
!569 = !DILocation(line: 243, column: 15, scope: !568)
!570 = !DILocation(line: 243, column: 15, scope: !550)
!571 = !DILocation(line: 245, column: 36, scope: !572)
!572 = distinct !DILexicalBlock(scope: !573, file: !3, line: 245, column: 19)
!573 = distinct !DILexicalBlock(scope: !568, file: !3, line: 244, column: 13)
!574 = !DILocation(line: 245, column: 19, scope: !572)
!575 = !DILocation(line: 245, column: 67, scope: !572)
!576 = !DILocation(line: 245, column: 19, scope: !573)
!577 = !DILocation(line: 250, column: 35, scope: !578)
!578 = distinct !DILexicalBlock(scope: !572, file: !3, line: 246, column: 17)
!579 = !DILocation(line: 250, column: 25, scope: !578)
!580 = !DILocation(line: 250, column: 23, scope: !578)
!581 = !DILocation(line: 251, column: 17, scope: !578)
!582 = !DILocation(line: 252, column: 13, scope: !573)
!583 = !DILocation(line: 253, column: 15, scope: !584)
!584 = distinct !DILexicalBlock(scope: !550, file: !3, line: 253, column: 15)
!585 = !DILocation(line: 253, column: 19, scope: !584)
!586 = !DILocation(line: 253, column: 15, scope: !550)
!587 = !DILocation(line: 255, column: 25, scope: !588)
!588 = distinct !DILexicalBlock(scope: !584, file: !3, line: 254, column: 13)
!589 = !DILocation(line: 255, column: 32, scope: !588)
!590 = !DILocation(line: 255, column: 62, scope: !588)
!591 = !DILocation(line: 255, column: 67, scope: !588)
!592 = !DILocation(line: 255, column: 55, scope: !588)
!593 = !DILocation(line: 255, column: 15, scope: !588)
!594 = !DILocation(line: 256, column: 18, scope: !588)
!595 = !DILocation(line: 257, column: 15, scope: !588)
!596 = !DILocation(line: 259, column: 30, scope: !550)
!597 = !DILocation(line: 259, column: 35, scope: !550)
!598 = !DILocation(line: 259, column: 21, scope: !550)
!599 = !DILocation(line: 259, column: 19, scope: !550)
!600 = !DILocation(line: 260, column: 25, scope: !550)
!601 = !DILocation(line: 260, column: 30, scope: !550)
!602 = !DILocation(line: 260, column: 23, scope: !550)
!603 = !DILocation(line: 260, column: 16, scope: !550)
!604 = !DILocation(line: 261, column: 25, scope: !550)
!605 = !DILocation(line: 261, column: 30, scope: !550)
!606 = !DILocation(line: 261, column: 23, scope: !550)
!607 = !DILocation(line: 261, column: 16, scope: !550)
!608 = !DILocation(line: 262, column: 24, scope: !550)
!609 = !DILocation(line: 262, column: 11, scope: !550)
!610 = !DILocation(line: 263, column: 17, scope: !550)
!611 = !DILocation(line: 263, column: 11, scope: !550)
!612 = !DILocation(line: 264, column: 9, scope: !550)
!613 = !DILocation(line: 236, column: 36, scope: !544)
!614 = !DILocation(line: 236, column: 7, scope: !544)
!615 = distinct !{!615, !548, !616}
!616 = !DILocation(line: 264, column: 9, scope: !545)
!617 = !DILocation(line: 265, column: 5, scope: !537)
!618 = !DILocalVariable(name: "NO_UID", scope: !619, file: !3, line: 271, type: !12)
!619 = distinct !DILexicalBlock(scope: !533, file: !3, line: 267, column: 5)
!620 = !DILocation(line: 271, column: 13, scope: !619)
!621 = !DILocalVariable(name: "NO_GID", scope: !619, file: !3, line: 272, type: !21)
!622 = !DILocation(line: 272, column: 13, scope: !619)
!623 = !DILocation(line: 274, column: 11, scope: !624)
!624 = distinct !DILexicalBlock(scope: !619, file: !3, line: 274, column: 11)
!625 = !DILocation(line: 274, column: 11, scope: !619)
!626 = !DILocation(line: 274, column: 24, scope: !624)
!627 = !DILocation(line: 275, column: 14, scope: !624)
!628 = !DILocation(line: 275, column: 25, scope: !624)
!629 = !DILocation(line: 275, column: 29, scope: !624)
!630 = !DILocation(line: 275, column: 45, scope: !624)
!631 = !DILocation(line: 275, column: 49, scope: !624)
!632 = !DILocation(line: 277, column: 11, scope: !633)
!633 = distinct !DILexicalBlock(scope: !624, file: !3, line: 276, column: 9)
!634 = !DILocation(line: 277, column: 17, scope: !633)
!635 = !DILocation(line: 278, column: 18, scope: !633)
!636 = !DILocation(line: 278, column: 16, scope: !633)
!637 = !DILocation(line: 279, column: 15, scope: !638)
!638 = distinct !DILexicalBlock(scope: !633, file: !3, line: 279, column: 15)
!639 = !DILocation(line: 279, column: 23, scope: !638)
!640 = !DILocation(line: 279, column: 20, scope: !638)
!641 = !DILocation(line: 279, column: 30, scope: !638)
!642 = !DILocation(line: 279, column: 33, scope: !638)
!643 = !DILocation(line: 279, column: 15, scope: !633)
!644 = !DILocation(line: 280, column: 13, scope: !638)
!645 = !DILocation(line: 281, column: 9, scope: !633)
!646 = !DILocation(line: 283, column: 11, scope: !647)
!647 = distinct !DILexicalBlock(scope: !619, file: !3, line: 283, column: 11)
!648 = !DILocation(line: 283, column: 11, scope: !619)
!649 = !DILocation(line: 283, column: 23, scope: !647)
!650 = !DILocation(line: 284, column: 14, scope: !647)
!651 = !DILocation(line: 284, column: 25, scope: !647)
!652 = !DILocation(line: 284, column: 29, scope: !647)
!653 = !DILocation(line: 284, column: 45, scope: !647)
!654 = !DILocation(line: 284, column: 49, scope: !647)
!655 = !DILocation(line: 286, column: 11, scope: !656)
!656 = distinct !DILexicalBlock(scope: !647, file: !3, line: 285, column: 9)
!657 = !DILocation(line: 286, column: 17, scope: !656)
!658 = !DILocation(line: 287, column: 18, scope: !656)
!659 = !DILocation(line: 287, column: 16, scope: !656)
!660 = !DILocation(line: 288, column: 15, scope: !661)
!661 = distinct !DILexicalBlock(scope: !656, file: !3, line: 288, column: 15)
!662 = !DILocation(line: 288, column: 23, scope: !661)
!663 = !DILocation(line: 288, column: 20, scope: !661)
!664 = !DILocation(line: 288, column: 30, scope: !661)
!665 = !DILocation(line: 288, column: 33, scope: !661)
!666 = !DILocation(line: 288, column: 15, scope: !656)
!667 = !DILocation(line: 289, column: 13, scope: !661)
!668 = !DILocation(line: 290, column: 9, scope: !656)
!669 = !DILocation(line: 292, column: 12, scope: !670)
!670 = distinct !DILexicalBlock(scope: !619, file: !3, line: 292, column: 11)
!671 = !DILocation(line: 292, column: 22, scope: !670)
!672 = !DILocation(line: 292, column: 26, scope: !670)
!673 = !DILocation(line: 292, column: 37, scope: !670)
!674 = !DILocation(line: 292, column: 40, scope: !670)
!675 = !DILocation(line: 292, column: 56, scope: !670)
!676 = !DILocation(line: 292, column: 60, scope: !670)
!677 = !DILocation(line: 292, column: 11, scope: !619)
!678 = !DILocation(line: 294, column: 11, scope: !679)
!679 = distinct !DILexicalBlock(scope: !670, file: !3, line: 293, column: 9)
!680 = !DILocation(line: 294, column: 17, scope: !679)
!681 = !DILocation(line: 295, column: 18, scope: !679)
!682 = !DILocation(line: 295, column: 16, scope: !679)
!683 = !DILocation(line: 296, column: 15, scope: !684)
!684 = distinct !DILexicalBlock(scope: !679, file: !3, line: 296, column: 15)
!685 = !DILocation(line: 296, column: 23, scope: !684)
!686 = !DILocation(line: 296, column: 20, scope: !684)
!687 = !DILocation(line: 296, column: 30, scope: !684)
!688 = !DILocation(line: 296, column: 33, scope: !684)
!689 = !DILocation(line: 296, column: 15, scope: !679)
!690 = !DILocation(line: 297, column: 13, scope: !684)
!691 = !DILocation(line: 299, column: 11, scope: !679)
!692 = !DILocation(line: 299, column: 17, scope: !679)
!693 = !DILocation(line: 300, column: 18, scope: !679)
!694 = !DILocation(line: 300, column: 16, scope: !679)
!695 = !DILocation(line: 301, column: 15, scope: !696)
!696 = distinct !DILexicalBlock(scope: !679, file: !3, line: 301, column: 15)
!697 = !DILocation(line: 301, column: 23, scope: !696)
!698 = !DILocation(line: 301, column: 20, scope: !696)
!699 = !DILocation(line: 301, column: 30, scope: !696)
!700 = !DILocation(line: 301, column: 33, scope: !696)
!701 = !DILocation(line: 301, column: 15, scope: !679)
!702 = !DILocation(line: 302, column: 13, scope: !696)
!703 = !DILocation(line: 303, column: 9, scope: !679)
!704 = !DILocation(line: 304, column: 22, scope: !619)
!705 = !DILocation(line: 304, column: 9, scope: !619)
!706 = !DILocation(line: 307, column: 10, scope: !404)
!707 = !DILocation(line: 307, column: 3, scope: !404)
!708 = !DILocalVariable(name: "argc", arg: 1, scope: !709, file: !3, line: 125, type: !72)
!709 = distinct !DISubprogram(name: "main", scope: !3, file: !3, line: 125, type: !405, scopeLine: 126, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !710, retainedNodes: !4)
!710 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !711, nameTableKind: None)
!711 = !{!712, !714, !716, !718, !720, !730, !732, !734, !736, !738, !740, !742, !744, !746, !748, !750, !753}
!712 = !DIGlobalVariableExpression(var: !713, expr: !DIExpression())
!713 = distinct !DIGlobalVariable(name: "ruid", scope: !710, file: !3, line: 64, type: !12, isLocal: true, isDefinition: true)
!714 = !DIGlobalVariableExpression(var: !715, expr: !DIExpression())
!715 = distinct !DIGlobalVariable(name: "euid", scope: !710, file: !3, line: 64, type: !12, isLocal: true, isDefinition: true)
!716 = !DIGlobalVariableExpression(var: !717, expr: !DIExpression())
!717 = distinct !DIGlobalVariable(name: "rgid", scope: !710, file: !3, line: 65, type: !21, isLocal: true, isDefinition: true)
!718 = !DIGlobalVariableExpression(var: !719, expr: !DIExpression())
!719 = distinct !DIGlobalVariable(name: "egid", scope: !710, file: !3, line: 65, type: !21, isLocal: true, isDefinition: true)
!720 = !DIGlobalVariableExpression(var: !721, expr: !DIExpression())
!721 = distinct !DIGlobalVariable(name: "longopts", scope: !710, file: !3, line: 75, type: !722, isLocal: true, isDefinition: true)
!722 = !DICompositeType(tag: DW_TAG_array_type, baseType: !723, size: 2560, elements: !76)
!723 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !724)
!724 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !66, line: 50, size: 256, elements: !725)
!725 = !{!726, !727, !728, !729}
!726 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !724, file: !66, line: 52, baseType: !69, size: 64)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !724, file: !66, line: 55, baseType: !72, size: 32, offset: 64)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !724, file: !66, line: 56, baseType: !74, size: 64, offset: 128)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !724, file: !66, line: 57, baseType: !72, size: 32, offset: 192)
!730 = !DIGlobalVariableExpression(var: !731, expr: !DIExpression())
!731 = distinct !DIGlobalVariable(name: "just_context", scope: !710, file: !3, line: 45, type: !27, isLocal: true, isDefinition: true)
!732 = !DIGlobalVariableExpression(var: !733, expr: !DIExpression())
!733 = distinct !DIGlobalVariable(name: "just_group", scope: !710, file: !3, line: 51, type: !27, isLocal: true, isDefinition: true)
!734 = !DIGlobalVariableExpression(var: !735, expr: !DIExpression())
!735 = distinct !DIGlobalVariable(name: "use_name", scope: !710, file: !3, line: 61, type: !27, isLocal: true, isDefinition: true)
!736 = !DIGlobalVariableExpression(var: !737, expr: !DIExpression())
!737 = distinct !DIGlobalVariable(name: "use_real", scope: !710, file: !3, line: 53, type: !27, isLocal: true, isDefinition: true)
!738 = !DIGlobalVariableExpression(var: !739, expr: !DIExpression())
!739 = distinct !DIGlobalVariable(name: "just_user", scope: !710, file: !3, line: 55, type: !27, isLocal: true, isDefinition: true)
!740 = !DIGlobalVariableExpression(var: !741, expr: !DIExpression())
!741 = distinct !DIGlobalVariable(name: "opt_zero", scope: !710, file: !3, line: 47, type: !27, isLocal: true, isDefinition: true)
!742 = !DIGlobalVariableExpression(var: !743, expr: !DIExpression())
!743 = distinct !DIGlobalVariable(name: "just_group_list", scope: !710, file: !3, line: 49, type: !27, isLocal: true, isDefinition: true)
!744 = !DIGlobalVariableExpression(var: !745, expr: !DIExpression())
!745 = distinct !DIGlobalVariable(name: "context", scope: !710, file: !3, line: 69, type: !6, isLocal: true, isDefinition: true)
!746 = !DIGlobalVariableExpression(var: !747, expr: !DIExpression())
!747 = distinct !DIGlobalVariable(name: "multiple_users", scope: !710, file: !3, line: 59, type: !27, isLocal: true, isDefinition: true)
!748 = !DIGlobalVariableExpression(var: !749, expr: !DIExpression())
!749 = distinct !DIGlobalVariable(name: "ok", scope: !710, file: !3, line: 57, type: !27, isLocal: true, isDefinition: true)
!750 = !DIGlobalVariableExpression(var: !751, expr: !DIExpression())
!751 = distinct !DIGlobalVariable(name: "buf", scope: !752, file: !3, line: 327, type: !53, isLocal: true, isDefinition: true)
!752 = distinct !DISubprogram(name: "uidtostr_ptr", scope: !3, file: !3, line: 325, type: !49, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !710, retainedNodes: !4)
!753 = !DIGlobalVariableExpression(var: !754, expr: !DIExpression())
!754 = distinct !DIGlobalVariable(name: "buf", scope: !755, file: !3, line: 316, type: !53, isLocal: true, isDefinition: true)
!755 = distinct !DISubprogram(name: "gidtostr_ptr", scope: !3, file: !3, line: 314, type: !59, scopeLine: 315, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !710, retainedNodes: !4)
!756 = !DILocalVariable(name: "argv", arg: 2, scope: !709, file: !3, line: 125, type: !184)
!757 = !DILocalVariable(name: "optc", scope: !709, file: !3, line: 127, type: !72)
!758 = !DILocalVariable(name: "selinux_enabled", scope: !709, file: !3, line: 128, type: !72)
!759 = !DILocalVariable(name: "smack_enabled", scope: !709, file: !3, line: 129, type: !27)
!760 = !DILocalVariable(name: "pw_name", scope: !709, file: !3, line: 130, type: !6)
!761 = !DILocalVariable(name: "spec", scope: !762, file: !3, line: 239, type: !69)
!762 = distinct !DILexicalBlock(scope: !763, file: !3, line: 237, column: 9)
!763 = distinct !DILexicalBlock(scope: !764, file: !3, line: 236, column: 7)
!764 = distinct !DILexicalBlock(scope: !765, file: !3, line: 236, column: 7)
!765 = distinct !DILexicalBlock(scope: !766, file: !3, line: 228, column: 5)
!766 = distinct !DILexicalBlock(scope: !767, file: !3, line: 227, column: 7)
!767 = distinct !DISubprogram(name: "main", scope: !3, file: !3, line: 125, type: !405, scopeLine: 126, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !768, retainedNodes: !4)
!768 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !769, nameTableKind: None)
!769 = !{!770, !772, !774, !776, !778, !788, !790, !792, !794, !796, !798, !800, !802, !804, !806, !808, !811}
!770 = !DIGlobalVariableExpression(var: !771, expr: !DIExpression())
!771 = distinct !DIGlobalVariable(name: "ruid", scope: !768, file: !3, line: 64, type: !12, isLocal: true, isDefinition: true)
!772 = !DIGlobalVariableExpression(var: !773, expr: !DIExpression())
!773 = distinct !DIGlobalVariable(name: "euid", scope: !768, file: !3, line: 64, type: !12, isLocal: true, isDefinition: true)
!774 = !DIGlobalVariableExpression(var: !775, expr: !DIExpression())
!775 = distinct !DIGlobalVariable(name: "rgid", scope: !768, file: !3, line: 65, type: !21, isLocal: true, isDefinition: true)
!776 = !DIGlobalVariableExpression(var: !777, expr: !DIExpression())
!777 = distinct !DIGlobalVariable(name: "egid", scope: !768, file: !3, line: 65, type: !21, isLocal: true, isDefinition: true)
!778 = !DIGlobalVariableExpression(var: !779, expr: !DIExpression())
!779 = distinct !DIGlobalVariable(name: "longopts", scope: !768, file: !3, line: 75, type: !780, isLocal: true, isDefinition: true)
!780 = !DICompositeType(tag: DW_TAG_array_type, baseType: !781, size: 2560, elements: !76)
!781 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !782)
!782 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !66, line: 50, size: 256, elements: !783)
!783 = !{!784, !785, !786, !787}
!784 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !782, file: !66, line: 52, baseType: !69, size: 64)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !782, file: !66, line: 55, baseType: !72, size: 32, offset: 64)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !782, file: !66, line: 56, baseType: !74, size: 64, offset: 128)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !782, file: !66, line: 57, baseType: !72, size: 32, offset: 192)
!788 = !DIGlobalVariableExpression(var: !789, expr: !DIExpression())
!789 = distinct !DIGlobalVariable(name: "just_context", scope: !768, file: !3, line: 45, type: !27, isLocal: true, isDefinition: true)
!790 = !DIGlobalVariableExpression(var: !791, expr: !DIExpression())
!791 = distinct !DIGlobalVariable(name: "just_group", scope: !768, file: !3, line: 51, type: !27, isLocal: true, isDefinition: true)
!792 = !DIGlobalVariableExpression(var: !793, expr: !DIExpression())
!793 = distinct !DIGlobalVariable(name: "use_name", scope: !768, file: !3, line: 61, type: !27, isLocal: true, isDefinition: true)
!794 = !DIGlobalVariableExpression(var: !795, expr: !DIExpression())
!795 = distinct !DIGlobalVariable(name: "use_real", scope: !768, file: !3, line: 53, type: !27, isLocal: true, isDefinition: true)
!796 = !DIGlobalVariableExpression(var: !797, expr: !DIExpression())
!797 = distinct !DIGlobalVariable(name: "just_user", scope: !768, file: !3, line: 55, type: !27, isLocal: true, isDefinition: true)
!798 = !DIGlobalVariableExpression(var: !799, expr: !DIExpression())
!799 = distinct !DIGlobalVariable(name: "opt_zero", scope: !768, file: !3, line: 47, type: !27, isLocal: true, isDefinition: true)
!800 = !DIGlobalVariableExpression(var: !801, expr: !DIExpression())
!801 = distinct !DIGlobalVariable(name: "just_group_list", scope: !768, file: !3, line: 49, type: !27, isLocal: true, isDefinition: true)
!802 = !DIGlobalVariableExpression(var: !803, expr: !DIExpression())
!803 = distinct !DIGlobalVariable(name: "context", scope: !768, file: !3, line: 69, type: !6, isLocal: true, isDefinition: true)
!804 = !DIGlobalVariableExpression(var: !805, expr: !DIExpression())
!805 = distinct !DIGlobalVariable(name: "multiple_users", scope: !768, file: !3, line: 59, type: !27, isLocal: true, isDefinition: true)
!806 = !DIGlobalVariableExpression(var: !807, expr: !DIExpression())
!807 = distinct !DIGlobalVariable(name: "ok", scope: !768, file: !3, line: 57, type: !27, isLocal: true, isDefinition: true)
!808 = !DIGlobalVariableExpression(var: !809, expr: !DIExpression())
!809 = distinct !DIGlobalVariable(name: "buf", scope: !810, file: !3, line: 327, type: !53, isLocal: true, isDefinition: true)
!810 = distinct !DISubprogram(name: "uidtostr_ptr", scope: !3, file: !3, line: 325, type: !49, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !768, retainedNodes: !4)
!811 = !DIGlobalVariableExpression(var: !812, expr: !DIExpression())
!812 = distinct !DIGlobalVariable(name: "buf", scope: !813, file: !3, line: 316, type: !53, isLocal: true, isDefinition: true)
!813 = distinct !DISubprogram(name: "gidtostr_ptr", scope: !3, file: !3, line: 314, type: !59, scopeLine: 315, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !768, retainedNodes: !4)
!814 = distinct !DISubprogram(name: "is_smack_enabled", scope: !815, file: !815, line: 39, type: !816, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!815 = !DIFile(filename: "./lib/smack.h", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!816 = !DISubroutineType(types: !817)
!817 = !{!27}
!818 = !DILocation(line: 44, column: 3, scope: !814)
!819 = distinct !DISubprogram(name: "smack_new_label_from_self", scope: !815, file: !815, line: 26, type: !820, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!820 = !DISubroutineType(types: !821)
!821 = !{!822, !184}
!822 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !823, line: 77, baseType: !824)
!823 = !DIFile(filename: "/usr/include/stdio.h", directory: "")
!824 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !15, line: 193, baseType: !825)
!825 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!826 = !DILocalVariable(name: "label", arg: 1, scope: !819, file: !815, line: 26, type: !184)
!827 = !DILocation(line: 26, column: 35, scope: !819)
!828 = !DILocation(line: 28, column: 3, scope: !819)
!829 = !DILocalVariable(name: "label", arg: 1, scope: !830, file: !815, line: 26, type: !184)
!830 = distinct !DISubprogram(name: "smack_new_label_from_self", scope: !815, file: !815, line: 26, type: !820, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !831, retainedNodes: !4)
!831 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !832, nameTableKind: None)
!832 = !{!833, !835, !837, !839, !841, !851, !853, !855, !857, !859, !861, !863, !865, !867, !869, !871, !874}
!833 = !DIGlobalVariableExpression(var: !834, expr: !DIExpression())
!834 = distinct !DIGlobalVariable(name: "ruid", scope: !831, file: !3, line: 64, type: !12, isLocal: true, isDefinition: true)
!835 = !DIGlobalVariableExpression(var: !836, expr: !DIExpression())
!836 = distinct !DIGlobalVariable(name: "euid", scope: !831, file: !3, line: 64, type: !12, isLocal: true, isDefinition: true)
!837 = !DIGlobalVariableExpression(var: !838, expr: !DIExpression())
!838 = distinct !DIGlobalVariable(name: "rgid", scope: !831, file: !3, line: 65, type: !21, isLocal: true, isDefinition: true)
!839 = !DIGlobalVariableExpression(var: !840, expr: !DIExpression())
!840 = distinct !DIGlobalVariable(name: "egid", scope: !831, file: !3, line: 65, type: !21, isLocal: true, isDefinition: true)
!841 = !DIGlobalVariableExpression(var: !842, expr: !DIExpression())
!842 = distinct !DIGlobalVariable(name: "longopts", scope: !831, file: !3, line: 75, type: !843, isLocal: true, isDefinition: true)
!843 = !DICompositeType(tag: DW_TAG_array_type, baseType: !844, size: 2560, elements: !76)
!844 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !845)
!845 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !66, line: 50, size: 256, elements: !846)
!846 = !{!847, !848, !849, !850}
!847 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !845, file: !66, line: 52, baseType: !69, size: 64)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !845, file: !66, line: 55, baseType: !72, size: 32, offset: 64)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !845, file: !66, line: 56, baseType: !74, size: 64, offset: 128)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !845, file: !66, line: 57, baseType: !72, size: 32, offset: 192)
!851 = !DIGlobalVariableExpression(var: !852, expr: !DIExpression())
!852 = distinct !DIGlobalVariable(name: "just_context", scope: !831, file: !3, line: 45, type: !27, isLocal: true, isDefinition: true)
!853 = !DIGlobalVariableExpression(var: !854, expr: !DIExpression())
!854 = distinct !DIGlobalVariable(name: "just_group", scope: !831, file: !3, line: 51, type: !27, isLocal: true, isDefinition: true)
!855 = !DIGlobalVariableExpression(var: !856, expr: !DIExpression())
!856 = distinct !DIGlobalVariable(name: "use_name", scope: !831, file: !3, line: 61, type: !27, isLocal: true, isDefinition: true)
!857 = !DIGlobalVariableExpression(var: !858, expr: !DIExpression())
!858 = distinct !DIGlobalVariable(name: "use_real", scope: !831, file: !3, line: 53, type: !27, isLocal: true, isDefinition: true)
!859 = !DIGlobalVariableExpression(var: !860, expr: !DIExpression())
!860 = distinct !DIGlobalVariable(name: "just_user", scope: !831, file: !3, line: 55, type: !27, isLocal: true, isDefinition: true)
!861 = !DIGlobalVariableExpression(var: !862, expr: !DIExpression())
!862 = distinct !DIGlobalVariable(name: "opt_zero", scope: !831, file: !3, line: 47, type: !27, isLocal: true, isDefinition: true)
!863 = !DIGlobalVariableExpression(var: !864, expr: !DIExpression())
!864 = distinct !DIGlobalVariable(name: "just_group_list", scope: !831, file: !3, line: 49, type: !27, isLocal: true, isDefinition: true)
!865 = !DIGlobalVariableExpression(var: !866, expr: !DIExpression())
!866 = distinct !DIGlobalVariable(name: "context", scope: !831, file: !3, line: 69, type: !6, isLocal: true, isDefinition: true)
!867 = !DIGlobalVariableExpression(var: !868, expr: !DIExpression())
!868 = distinct !DIGlobalVariable(name: "multiple_users", scope: !831, file: !3, line: 59, type: !27, isLocal: true, isDefinition: true)
!869 = !DIGlobalVariableExpression(var: !870, expr: !DIExpression())
!870 = distinct !DIGlobalVariable(name: "ok", scope: !831, file: !3, line: 57, type: !27, isLocal: true, isDefinition: true)
!871 = !DIGlobalVariableExpression(var: !872, expr: !DIExpression())
!872 = distinct !DIGlobalVariable(name: "buf", scope: !873, file: !3, line: 327, type: !53, isLocal: true, isDefinition: true)
!873 = distinct !DISubprogram(name: "uidtostr_ptr", scope: !3, file: !3, line: 325, type: !49, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !831, retainedNodes: !4)
!874 = !DIGlobalVariableExpression(var: !875, expr: !DIExpression())
!875 = distinct !DIGlobalVariable(name: "buf", scope: !876, file: !3, line: 316, type: !53, isLocal: true, isDefinition: true)
!876 = distinct !DISubprogram(name: "gidtostr_ptr", scope: !3, file: !3, line: 314, type: !59, scopeLine: 315, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !831, retainedNodes: !4)
!877 = distinct !DISubprogram(name: "print_stuff", scope: !3, file: !3, line: 432, type: !295, scopeLine: 433, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!878 = !DILocalVariable(name: "pw_name", arg: 1, scope: !877, file: !3, line: 432, type: !69)
!879 = !DILocation(line: 432, column: 26, scope: !877)
!880 = !DILocation(line: 434, column: 7, scope: !881)
!881 = distinct !DILexicalBlock(scope: !877, file: !3, line: 434, column: 7)
!882 = !DILocation(line: 434, column: 7, scope: !877)
!883 = !DILocation(line: 435, column: 19, scope: !881)
!884 = !DILocation(line: 435, column: 30, scope: !881)
!885 = !DILocation(line: 435, column: 37, scope: !881)
!886 = !DILocation(line: 435, column: 7, scope: !881)
!887 = !DILocation(line: 442, column: 12, scope: !888)
!888 = distinct !DILexicalBlock(scope: !881, file: !3, line: 442, column: 12)
!889 = !DILocation(line: 442, column: 12, scope: !881)
!890 = !DILocation(line: 443, column: 24, scope: !888)
!891 = !DILocation(line: 443, column: 35, scope: !888)
!892 = !DILocation(line: 443, column: 42, scope: !888)
!893 = !DILocation(line: 443, column: 48, scope: !888)
!894 = !DILocation(line: 443, column: 11, scope: !888)
!895 = !DILocation(line: 443, column: 8, scope: !888)
!896 = !DILocation(line: 443, column: 5, scope: !888)
!897 = !DILocation(line: 444, column: 12, scope: !898)
!898 = distinct !DILexicalBlock(scope: !888, file: !3, line: 444, column: 12)
!899 = !DILocation(line: 444, column: 12, scope: !888)
!900 = !DILocation(line: 445, column: 29, scope: !898)
!901 = !DILocation(line: 445, column: 38, scope: !898)
!902 = !DILocation(line: 445, column: 44, scope: !898)
!903 = !DILocation(line: 445, column: 50, scope: !898)
!904 = !DILocation(line: 446, column: 29, scope: !898)
!905 = !DILocation(line: 446, column: 39, scope: !898)
!906 = !DILocation(line: 445, column: 11, scope: !898)
!907 = !DILocation(line: 445, column: 8, scope: !898)
!908 = !DILocation(line: 445, column: 5, scope: !898)
!909 = !DILocation(line: 447, column: 12, scope: !910)
!910 = distinct !DILexicalBlock(scope: !898, file: !3, line: 447, column: 12)
!911 = !DILocation(line: 447, column: 12, scope: !898)
!912 = !DILocation(line: 448, column: 5, scope: !910)
!913 = !DILocation(line: 450, column: 22, scope: !910)
!914 = !DILocation(line: 450, column: 5, scope: !910)
!915 = !DILocation(line: 455, column: 7, scope: !916)
!916 = distinct !DILexicalBlock(scope: !877, file: !3, line: 455, column: 7)
!917 = !DILocation(line: 455, column: 16, scope: !916)
!918 = !DILocation(line: 455, column: 19, scope: !916)
!919 = !DILocation(line: 455, column: 35, scope: !916)
!920 = !DILocation(line: 455, column: 38, scope: !916)
!921 = !DILocation(line: 455, column: 7, scope: !877)
!922 = !DILocation(line: 457, column: 7, scope: !923)
!923 = distinct !DILexicalBlock(scope: !916, file: !3, line: 456, column: 5)
!924 = !DILocation(line: 458, column: 7, scope: !923)
!925 = !DILocation(line: 459, column: 5, scope: !923)
!926 = !DILocation(line: 462, column: 7, scope: !927)
!927 = distinct !DILexicalBlock(scope: !916, file: !3, line: 461, column: 5)
!928 = !DILocation(line: 464, column: 1, scope: !877)
!929 = !DILocalVariable(name: "pw_name", arg: 1, scope: !930, file: !3, line: 432, type: !69)
!930 = distinct !DISubprogram(name: "print_stuff", scope: !3, file: !3, line: 432, type: !295, scopeLine: 433, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !931, retainedNodes: !4)
!931 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !932, nameTableKind: None)
!932 = !{!933, !935, !937, !939, !941, !951, !953, !955, !957, !959, !961, !963, !965, !967, !969, !971, !974}
!933 = !DIGlobalVariableExpression(var: !934, expr: !DIExpression())
!934 = distinct !DIGlobalVariable(name: "ruid", scope: !931, file: !3, line: 64, type: !12, isLocal: true, isDefinition: true)
!935 = !DIGlobalVariableExpression(var: !936, expr: !DIExpression())
!936 = distinct !DIGlobalVariable(name: "euid", scope: !931, file: !3, line: 64, type: !12, isLocal: true, isDefinition: true)
!937 = !DIGlobalVariableExpression(var: !938, expr: !DIExpression())
!938 = distinct !DIGlobalVariable(name: "rgid", scope: !931, file: !3, line: 65, type: !21, isLocal: true, isDefinition: true)
!939 = !DIGlobalVariableExpression(var: !940, expr: !DIExpression())
!940 = distinct !DIGlobalVariable(name: "egid", scope: !931, file: !3, line: 65, type: !21, isLocal: true, isDefinition: true)
!941 = !DIGlobalVariableExpression(var: !942, expr: !DIExpression())
!942 = distinct !DIGlobalVariable(name: "longopts", scope: !931, file: !3, line: 75, type: !943, isLocal: true, isDefinition: true)
!943 = !DICompositeType(tag: DW_TAG_array_type, baseType: !944, size: 2560, elements: !76)
!944 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !945)
!945 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !66, line: 50, size: 256, elements: !946)
!946 = !{!947, !948, !949, !950}
!947 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !945, file: !66, line: 52, baseType: !69, size: 64)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !945, file: !66, line: 55, baseType: !72, size: 32, offset: 64)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !945, file: !66, line: 56, baseType: !74, size: 64, offset: 128)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !945, file: !66, line: 57, baseType: !72, size: 32, offset: 192)
!951 = !DIGlobalVariableExpression(var: !952, expr: !DIExpression())
!952 = distinct !DIGlobalVariable(name: "just_context", scope: !931, file: !3, line: 45, type: !27, isLocal: true, isDefinition: true)
!953 = !DIGlobalVariableExpression(var: !954, expr: !DIExpression())
!954 = distinct !DIGlobalVariable(name: "just_group", scope: !931, file: !3, line: 51, type: !27, isLocal: true, isDefinition: true)
!955 = !DIGlobalVariableExpression(var: !956, expr: !DIExpression())
!956 = distinct !DIGlobalVariable(name: "use_name", scope: !931, file: !3, line: 61, type: !27, isLocal: true, isDefinition: true)
!957 = !DIGlobalVariableExpression(var: !958, expr: !DIExpression())
!958 = distinct !DIGlobalVariable(name: "use_real", scope: !931, file: !3, line: 53, type: !27, isLocal: true, isDefinition: true)
!959 = !DIGlobalVariableExpression(var: !960, expr: !DIExpression())
!960 = distinct !DIGlobalVariable(name: "just_user", scope: !931, file: !3, line: 55, type: !27, isLocal: true, isDefinition: true)
!961 = !DIGlobalVariableExpression(var: !962, expr: !DIExpression())
!962 = distinct !DIGlobalVariable(name: "opt_zero", scope: !931, file: !3, line: 47, type: !27, isLocal: true, isDefinition: true)
!963 = !DIGlobalVariableExpression(var: !964, expr: !DIExpression())
!964 = distinct !DIGlobalVariable(name: "just_group_list", scope: !931, file: !3, line: 49, type: !27, isLocal: true, isDefinition: true)
!965 = !DIGlobalVariableExpression(var: !966, expr: !DIExpression())
!966 = distinct !DIGlobalVariable(name: "context", scope: !931, file: !3, line: 69, type: !6, isLocal: true, isDefinition: true)
!967 = !DIGlobalVariableExpression(var: !968, expr: !DIExpression())
!968 = distinct !DIGlobalVariable(name: "multiple_users", scope: !931, file: !3, line: 59, type: !27, isLocal: true, isDefinition: true)
!969 = !DIGlobalVariableExpression(var: !970, expr: !DIExpression())
!970 = distinct !DIGlobalVariable(name: "ok", scope: !931, file: !3, line: 57, type: !27, isLocal: true, isDefinition: true)
!971 = !DIGlobalVariableExpression(var: !972, expr: !DIExpression())
!972 = distinct !DIGlobalVariable(name: "buf", scope: !973, file: !3, line: 327, type: !53, isLocal: true, isDefinition: true)
!973 = distinct !DISubprogram(name: "uidtostr_ptr", scope: !3, file: !3, line: 325, type: !49, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !931, retainedNodes: !4)
!974 = !DIGlobalVariableExpression(var: !975, expr: !DIExpression())
!975 = distinct !DIGlobalVariable(name: "buf", scope: !976, file: !3, line: 316, type: !53, isLocal: true, isDefinition: true)
!976 = distinct !DISubprogram(name: "gidtostr_ptr", scope: !3, file: !3, line: 314, type: !59, scopeLine: 315, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !931, retainedNodes: !4)
!977 = distinct !DISubprogram(name: "print_user", scope: !3, file: !3, line: 335, type: !978, scopeLine: 336, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!978 = !DISubroutineType(types: !979)
!979 = !{null, !12}
!980 = !DILocalVariable(name: "uid", arg: 1, scope: !977, file: !3, line: 335, type: !12)
!981 = !DILocation(line: 335, column: 19, scope: !977)
!982 = !DILocalVariable(name: "pwd", scope: !977, file: !3, line: 337, type: !551)
!983 = !DILocation(line: 337, column: 18, scope: !977)
!984 = !DILocation(line: 339, column: 7, scope: !985)
!985 = distinct !DILexicalBlock(scope: !977, file: !3, line: 339, column: 7)
!986 = !DILocation(line: 339, column: 7, scope: !977)
!987 = !DILocation(line: 341, column: 23, scope: !988)
!988 = distinct !DILexicalBlock(scope: !985, file: !3, line: 340, column: 5)
!989 = !DILocation(line: 341, column: 13, scope: !988)
!990 = !DILocation(line: 341, column: 11, scope: !988)
!991 = !DILocation(line: 342, column: 11, scope: !992)
!992 = distinct !DILexicalBlock(scope: !988, file: !3, line: 342, column: 11)
!993 = !DILocation(line: 342, column: 15, scope: !992)
!994 = !DILocation(line: 342, column: 11, scope: !988)
!995 = !DILocation(line: 344, column: 24, scope: !996)
!996 = distinct !DILexicalBlock(scope: !992, file: !3, line: 343, column: 9)
!997 = !DILocation(line: 345, column: 18, scope: !996)
!998 = !DILocation(line: 344, column: 11, scope: !996)
!999 = !DILocation(line: 346, column: 14, scope: !996)
!1000 = !DILocation(line: 347, column: 9, scope: !996)
!1001 = !DILocation(line: 348, column: 5, scope: !988)
!1002 = !DILocalVariable(name: "s", scope: !977, file: !3, line: 350, type: !6)
!1003 = !DILocation(line: 350, column: 9, scope: !977)
!1004 = !DILocation(line: 350, column: 13, scope: !977)
!1005 = !DILocation(line: 350, column: 19, scope: !977)
!1006 = !DILocation(line: 350, column: 24, scope: !977)
!1007 = !DILocation(line: 350, column: 34, scope: !977)
!1008 = !DILocation(line: 351, column: 3, scope: !977)
!1009 = !DILocation(line: 352, column: 1, scope: !977)
!1010 = !DILocalVariable(name: "uid", arg: 1, scope: !1011, file: !3, line: 335, type: !12)
!1011 = distinct !DISubprogram(name: "print_user", scope: !3, file: !3, line: 335, type: !978, scopeLine: 336, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1012, retainedNodes: !4)
!1012 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !1013, nameTableKind: None)
!1013 = !{!1014, !1016, !1018, !1020, !1022, !1032, !1034, !1036, !1038, !1040, !1042, !1044, !1046, !1048, !1050, !1052, !1055}
!1014 = !DIGlobalVariableExpression(var: !1015, expr: !DIExpression())
!1015 = distinct !DIGlobalVariable(name: "ruid", scope: !1012, file: !3, line: 64, type: !12, isLocal: true, isDefinition: true)
!1016 = !DIGlobalVariableExpression(var: !1017, expr: !DIExpression())
!1017 = distinct !DIGlobalVariable(name: "euid", scope: !1012, file: !3, line: 64, type: !12, isLocal: true, isDefinition: true)
!1018 = !DIGlobalVariableExpression(var: !1019, expr: !DIExpression())
!1019 = distinct !DIGlobalVariable(name: "rgid", scope: !1012, file: !3, line: 65, type: !21, isLocal: true, isDefinition: true)
!1020 = !DIGlobalVariableExpression(var: !1021, expr: !DIExpression())
!1021 = distinct !DIGlobalVariable(name: "egid", scope: !1012, file: !3, line: 65, type: !21, isLocal: true, isDefinition: true)
!1022 = !DIGlobalVariableExpression(var: !1023, expr: !DIExpression())
!1023 = distinct !DIGlobalVariable(name: "longopts", scope: !1012, file: !3, line: 75, type: !1024, isLocal: true, isDefinition: true)
!1024 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1025, size: 2560, elements: !76)
!1025 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1026)
!1026 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !66, line: 50, size: 256, elements: !1027)
!1027 = !{!1028, !1029, !1030, !1031}
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1026, file: !66, line: 52, baseType: !69, size: 64)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !1026, file: !66, line: 55, baseType: !72, size: 32, offset: 64)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1026, file: !66, line: 56, baseType: !74, size: 64, offset: 128)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1026, file: !66, line: 57, baseType: !72, size: 32, offset: 192)
!1032 = !DIGlobalVariableExpression(var: !1033, expr: !DIExpression())
!1033 = distinct !DIGlobalVariable(name: "just_context", scope: !1012, file: !3, line: 45, type: !27, isLocal: true, isDefinition: true)
!1034 = !DIGlobalVariableExpression(var: !1035, expr: !DIExpression())
!1035 = distinct !DIGlobalVariable(name: "just_group", scope: !1012, file: !3, line: 51, type: !27, isLocal: true, isDefinition: true)
!1036 = !DIGlobalVariableExpression(var: !1037, expr: !DIExpression())
!1037 = distinct !DIGlobalVariable(name: "use_name", scope: !1012, file: !3, line: 61, type: !27, isLocal: true, isDefinition: true)
!1038 = !DIGlobalVariableExpression(var: !1039, expr: !DIExpression())
!1039 = distinct !DIGlobalVariable(name: "use_real", scope: !1012, file: !3, line: 53, type: !27, isLocal: true, isDefinition: true)
!1040 = !DIGlobalVariableExpression(var: !1041, expr: !DIExpression())
!1041 = distinct !DIGlobalVariable(name: "just_user", scope: !1012, file: !3, line: 55, type: !27, isLocal: true, isDefinition: true)
!1042 = !DIGlobalVariableExpression(var: !1043, expr: !DIExpression())
!1043 = distinct !DIGlobalVariable(name: "opt_zero", scope: !1012, file: !3, line: 47, type: !27, isLocal: true, isDefinition: true)
!1044 = !DIGlobalVariableExpression(var: !1045, expr: !DIExpression())
!1045 = distinct !DIGlobalVariable(name: "just_group_list", scope: !1012, file: !3, line: 49, type: !27, isLocal: true, isDefinition: true)
!1046 = !DIGlobalVariableExpression(var: !1047, expr: !DIExpression())
!1047 = distinct !DIGlobalVariable(name: "context", scope: !1012, file: !3, line: 69, type: !6, isLocal: true, isDefinition: true)
!1048 = !DIGlobalVariableExpression(var: !1049, expr: !DIExpression())
!1049 = distinct !DIGlobalVariable(name: "multiple_users", scope: !1012, file: !3, line: 59, type: !27, isLocal: true, isDefinition: true)
!1050 = !DIGlobalVariableExpression(var: !1051, expr: !DIExpression())
!1051 = distinct !DIGlobalVariable(name: "ok", scope: !1012, file: !3, line: 57, type: !27, isLocal: true, isDefinition: true)
!1052 = !DIGlobalVariableExpression(var: !1053, expr: !DIExpression())
!1053 = distinct !DIGlobalVariable(name: "buf", scope: !1054, file: !3, line: 327, type: !53, isLocal: true, isDefinition: true)
!1054 = distinct !DISubprogram(name: "uidtostr_ptr", scope: !3, file: !3, line: 325, type: !49, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1012, retainedNodes: !4)
!1055 = !DIGlobalVariableExpression(var: !1056, expr: !DIExpression())
!1056 = distinct !DIGlobalVariable(name: "buf", scope: !1057, file: !3, line: 316, type: !53, isLocal: true, isDefinition: true)
!1057 = distinct !DISubprogram(name: "gidtostr_ptr", scope: !3, file: !3, line: 314, type: !59, scopeLine: 315, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1012, retainedNodes: !4)
!1058 = !DILocalVariable(name: "pwd", scope: !1011, file: !3, line: 337, type: !1059)
!1059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1060, size: 64)
!1060 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "passwd", file: !553, line: 49, size: 384, elements: !1061)
!1061 = !{!1062, !1063, !1064, !1065, !1066, !1067, !1068}
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "pw_name", scope: !1060, file: !553, line: 51, baseType: !6, size: 64)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "pw_passwd", scope: !1060, file: !553, line: 52, baseType: !6, size: 64, offset: 64)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "pw_uid", scope: !1060, file: !553, line: 54, baseType: !14, size: 32, offset: 128)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "pw_gid", scope: !1060, file: !553, line: 55, baseType: !22, size: 32, offset: 160)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "pw_gecos", scope: !1060, file: !553, line: 56, baseType: !6, size: 64, offset: 192)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "pw_dir", scope: !1060, file: !553, line: 57, baseType: !6, size: 64, offset: 256)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "pw_shell", scope: !1060, file: !553, line: 58, baseType: !6, size: 64, offset: 320)
!1069 = distinct !DISubprogram(name: "print_full_info", scope: !3, file: !3, line: 357, type: !295, scopeLine: 358, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!1070 = !DILocalVariable(name: "username", arg: 1, scope: !1069, file: !3, line: 357, type: !69)
!1071 = !DILocation(line: 357, column: 30, scope: !1069)
!1072 = !DILocalVariable(name: "pwd", scope: !1069, file: !3, line: 359, type: !551)
!1073 = !DILocation(line: 359, column: 18, scope: !1069)
!1074 = !DILocalVariable(name: "grp", scope: !1069, file: !3, line: 360, type: !1075)
!1075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1076, size: 64)
!1076 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group", file: !1077, line: 42, size: 256, elements: !1078)
!1077 = !DIFile(filename: "/usr/include/grp.h", directory: "")
!1078 = !{!1079, !1080, !1081, !1082}
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "gr_name", scope: !1076, file: !1077, line: 44, baseType: !6, size: 64)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "gr_passwd", scope: !1076, file: !1077, line: 45, baseType: !6, size: 64, offset: 64)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "gr_gid", scope: !1076, file: !1077, line: 46, baseType: !22, size: 32, offset: 128)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "gr_mem", scope: !1076, file: !1077, line: 47, baseType: !184, size: 64, offset: 192)
!1083 = !DILocation(line: 360, column: 17, scope: !1069)
!1084 = !DILocation(line: 362, column: 11, scope: !1069)
!1085 = !DILocation(line: 362, column: 24, scope: !1069)
!1086 = !DILocation(line: 362, column: 3, scope: !1069)
!1087 = !DILocation(line: 363, column: 19, scope: !1069)
!1088 = !DILocation(line: 363, column: 9, scope: !1069)
!1089 = !DILocation(line: 363, column: 7, scope: !1069)
!1090 = !DILocation(line: 364, column: 7, scope: !1091)
!1091 = distinct !DILexicalBlock(scope: !1069, file: !3, line: 364, column: 7)
!1092 = !DILocation(line: 364, column: 7, scope: !1069)
!1093 = !DILocation(line: 365, column: 21, scope: !1091)
!1094 = !DILocation(line: 365, column: 26, scope: !1091)
!1095 = !DILocation(line: 365, column: 5, scope: !1091)
!1096 = !DILocation(line: 367, column: 11, scope: !1069)
!1097 = !DILocation(line: 367, column: 25, scope: !1069)
!1098 = !DILocation(line: 367, column: 3, scope: !1069)
!1099 = !DILocation(line: 368, column: 19, scope: !1069)
!1100 = !DILocation(line: 368, column: 9, scope: !1069)
!1101 = !DILocation(line: 368, column: 7, scope: !1069)
!1102 = !DILocation(line: 369, column: 7, scope: !1103)
!1103 = distinct !DILexicalBlock(scope: !1069, file: !3, line: 369, column: 7)
!1104 = !DILocation(line: 369, column: 7, scope: !1069)
!1105 = !DILocation(line: 370, column: 21, scope: !1103)
!1106 = !DILocation(line: 370, column: 26, scope: !1103)
!1107 = !DILocation(line: 370, column: 5, scope: !1103)
!1108 = !DILocation(line: 372, column: 7, scope: !1109)
!1109 = distinct !DILexicalBlock(scope: !1069, file: !3, line: 372, column: 7)
!1110 = !DILocation(line: 372, column: 15, scope: !1109)
!1111 = !DILocation(line: 372, column: 12, scope: !1109)
!1112 = !DILocation(line: 372, column: 7, scope: !1069)
!1113 = !DILocation(line: 374, column: 15, scope: !1114)
!1114 = distinct !DILexicalBlock(scope: !1109, file: !3, line: 373, column: 5)
!1115 = !DILocation(line: 374, column: 30, scope: !1114)
!1116 = !DILocation(line: 374, column: 7, scope: !1114)
!1117 = !DILocation(line: 375, column: 23, scope: !1114)
!1118 = !DILocation(line: 375, column: 13, scope: !1114)
!1119 = !DILocation(line: 375, column: 11, scope: !1114)
!1120 = !DILocation(line: 376, column: 11, scope: !1121)
!1121 = distinct !DILexicalBlock(scope: !1114, file: !3, line: 376, column: 11)
!1122 = !DILocation(line: 376, column: 11, scope: !1114)
!1123 = !DILocation(line: 377, column: 25, scope: !1121)
!1124 = !DILocation(line: 377, column: 30, scope: !1121)
!1125 = !DILocation(line: 377, column: 9, scope: !1121)
!1126 = !DILocation(line: 378, column: 5, scope: !1114)
!1127 = !DILocation(line: 380, column: 7, scope: !1128)
!1128 = distinct !DILexicalBlock(scope: !1069, file: !3, line: 380, column: 7)
!1129 = !DILocation(line: 380, column: 15, scope: !1128)
!1130 = !DILocation(line: 380, column: 12, scope: !1128)
!1131 = !DILocation(line: 380, column: 7, scope: !1069)
!1132 = !DILocation(line: 382, column: 15, scope: !1133)
!1133 = distinct !DILexicalBlock(scope: !1128, file: !3, line: 381, column: 5)
!1134 = !DILocation(line: 382, column: 30, scope: !1133)
!1135 = !DILocation(line: 382, column: 7, scope: !1133)
!1136 = !DILocation(line: 383, column: 23, scope: !1133)
!1137 = !DILocation(line: 383, column: 13, scope: !1133)
!1138 = !DILocation(line: 383, column: 11, scope: !1133)
!1139 = !DILocation(line: 384, column: 11, scope: !1140)
!1140 = distinct !DILexicalBlock(scope: !1133, file: !3, line: 384, column: 11)
!1141 = !DILocation(line: 384, column: 11, scope: !1133)
!1142 = !DILocation(line: 385, column: 25, scope: !1140)
!1143 = !DILocation(line: 385, column: 30, scope: !1140)
!1144 = !DILocation(line: 385, column: 9, scope: !1140)
!1145 = !DILocation(line: 386, column: 5, scope: !1133)
!1146 = !DILocalVariable(name: "groups", scope: !1147, file: !3, line: 389, type: !183)
!1147 = distinct !DILexicalBlock(scope: !1069, file: !3, line: 388, column: 3)
!1148 = !DILocation(line: 389, column: 12, scope: !1147)
!1149 = !DILocalVariable(name: "primary_group", scope: !1147, file: !3, line: 391, type: !21)
!1150 = !DILocation(line: 391, column: 11, scope: !1147)
!1151 = !DILocation(line: 392, column: 9, scope: !1152)
!1152 = distinct !DILexicalBlock(scope: !1147, file: !3, line: 392, column: 9)
!1153 = !DILocation(line: 392, column: 9, scope: !1147)
!1154 = !DILocation(line: 393, column: 23, scope: !1152)
!1155 = !DILocation(line: 393, column: 29, scope: !1152)
!1156 = !DILocation(line: 393, column: 34, scope: !1152)
!1157 = !DILocation(line: 393, column: 21, scope: !1152)
!1158 = !DILocation(line: 393, column: 7, scope: !1152)
!1159 = !DILocation(line: 395, column: 23, scope: !1152)
!1160 = !DILocation(line: 395, column: 21, scope: !1152)
!1161 = !DILocalVariable(name: "n_groups", scope: !1147, file: !3, line: 397, type: !72)
!1162 = !DILocation(line: 397, column: 9, scope: !1147)
!1163 = !DILocation(line: 397, column: 32, scope: !1147)
!1164 = !DILocation(line: 397, column: 42, scope: !1147)
!1165 = !DILocation(line: 397, column: 20, scope: !1147)
!1166 = !DILocation(line: 398, column: 9, scope: !1167)
!1167 = distinct !DILexicalBlock(scope: !1147, file: !3, line: 398, column: 9)
!1168 = !DILocation(line: 398, column: 18, scope: !1167)
!1169 = !DILocation(line: 398, column: 9, scope: !1147)
!1170 = !DILocation(line: 400, column: 13, scope: !1171)
!1171 = distinct !DILexicalBlock(scope: !1172, file: !3, line: 400, column: 13)
!1172 = distinct !DILexicalBlock(scope: !1167, file: !3, line: 399, column: 7)
!1173 = !DILocation(line: 400, column: 13, scope: !1172)
!1174 = !DILocation(line: 401, column: 21, scope: !1171)
!1175 = !DILocation(line: 401, column: 28, scope: !1171)
!1176 = !DILocation(line: 402, column: 25, scope: !1171)
!1177 = !DILocation(line: 402, column: 18, scope: !1171)
!1178 = !DILocation(line: 401, column: 11, scope: !1171)
!1179 = !DILocation(line: 404, column: 21, scope: !1171)
!1180 = !DILocation(line: 404, column: 28, scope: !1171)
!1181 = !DILocation(line: 404, column: 11, scope: !1171)
!1182 = !DILocation(line: 405, column: 12, scope: !1172)
!1183 = !DILocation(line: 406, column: 9, scope: !1172)
!1184 = !DILocation(line: 409, column: 9, scope: !1185)
!1185 = distinct !DILexicalBlock(scope: !1147, file: !3, line: 409, column: 9)
!1186 = !DILocation(line: 409, column: 18, scope: !1185)
!1187 = !DILocation(line: 409, column: 9, scope: !1147)
!1188 = !DILocation(line: 410, column: 7, scope: !1185)
!1189 = !DILocalVariable(name: "i", scope: !1190, file: !3, line: 411, type: !72)
!1190 = distinct !DILexicalBlock(scope: !1147, file: !3, line: 411, column: 5)
!1191 = !DILocation(line: 411, column: 14, scope: !1190)
!1192 = !DILocation(line: 411, column: 10, scope: !1190)
!1193 = !DILocation(line: 411, column: 21, scope: !1194)
!1194 = distinct !DILexicalBlock(scope: !1190, file: !3, line: 411, column: 5)
!1195 = !DILocation(line: 411, column: 25, scope: !1194)
!1196 = !DILocation(line: 411, column: 23, scope: !1194)
!1197 = !DILocation(line: 411, column: 5, scope: !1190)
!1198 = !DILocation(line: 413, column: 13, scope: !1199)
!1199 = distinct !DILexicalBlock(scope: !1200, file: !3, line: 413, column: 13)
!1200 = distinct !DILexicalBlock(scope: !1194, file: !3, line: 412, column: 7)
!1201 = !DILocation(line: 413, column: 15, scope: !1199)
!1202 = !DILocation(line: 413, column: 13, scope: !1200)
!1203 = !DILocation(line: 414, column: 11, scope: !1199)
!1204 = !DILocation(line: 415, column: 9, scope: !1200)
!1205 = !DILocation(line: 416, column: 25, scope: !1200)
!1206 = !DILocation(line: 416, column: 32, scope: !1200)
!1207 = !DILocation(line: 416, column: 15, scope: !1200)
!1208 = !DILocation(line: 416, column: 13, scope: !1200)
!1209 = !DILocation(line: 417, column: 13, scope: !1210)
!1210 = distinct !DILexicalBlock(scope: !1200, file: !3, line: 417, column: 13)
!1211 = !DILocation(line: 417, column: 13, scope: !1200)
!1212 = !DILocation(line: 418, column: 27, scope: !1210)
!1213 = !DILocation(line: 418, column: 32, scope: !1210)
!1214 = !DILocation(line: 418, column: 11, scope: !1210)
!1215 = !DILocation(line: 419, column: 7, scope: !1200)
!1216 = !DILocation(line: 411, column: 36, scope: !1194)
!1217 = !DILocation(line: 411, column: 5, scope: !1194)
!1218 = distinct !{!1218, !1197, !1219}
!1219 = !DILocation(line: 419, column: 7, scope: !1190)
!1220 = !DILocation(line: 420, column: 11, scope: !1147)
!1221 = !DILocation(line: 420, column: 5, scope: !1147)
!1222 = !DILocation(line: 425, column: 7, scope: !1223)
!1223 = distinct !DILexicalBlock(scope: !1069, file: !3, line: 425, column: 7)
!1224 = !DILocation(line: 425, column: 7, scope: !1069)
!1225 = !DILocation(line: 426, column: 13, scope: !1223)
!1226 = !DILocation(line: 426, column: 31, scope: !1223)
!1227 = !DILocation(line: 426, column: 5, scope: !1223)
!1228 = !DILocation(line: 427, column: 1, scope: !1069)
!1229 = !DILocalVariable(name: "uid", arg: 1, scope: !48, file: !3, line: 325, type: !51)
!1230 = !DILocation(line: 325, column: 28, scope: !48)
!1231 = !DILocation(line: 328, column: 22, scope: !48)
!1232 = !DILocation(line: 328, column: 21, scope: !48)
!1233 = !DILocation(line: 328, column: 10, scope: !48)
!1234 = !DILocation(line: 328, column: 3, scope: !48)
!1235 = !DILocalVariable(name: "gid", arg: 1, scope: !58, file: !3, line: 314, type: !61)
!1236 = !DILocation(line: 314, column: 28, scope: !58)
!1237 = !DILocation(line: 317, column: 22, scope: !58)
!1238 = !DILocation(line: 317, column: 21, scope: !58)
!1239 = !DILocation(line: 317, column: 10, scope: !58)
!1240 = !DILocation(line: 317, column: 3, scope: !58)
!1241 = distinct !DISubprogram(name: "print_group_list", scope: !81, file: !81, line: 36, type: !1242, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !82, retainedNodes: !4)
!1242 = !DISubroutineType(types: !1243)
!1243 = !{!27, !69, !12, !21, !21, !27, !7}
!1244 = !DILocalVariable(name: "username", arg: 1, scope: !1241, file: !81, line: 36, type: !69)
!1245 = !DILocation(line: 36, column: 31, scope: !1241)
!1246 = !DILocalVariable(name: "ruid", arg: 2, scope: !1241, file: !81, line: 37, type: !12)
!1247 = !DILocation(line: 37, column: 25, scope: !1241)
!1248 = !DILocalVariable(name: "rgid", arg: 3, scope: !1241, file: !81, line: 37, type: !21)
!1249 = !DILocation(line: 37, column: 37, scope: !1241)
!1250 = !DILocalVariable(name: "egid", arg: 4, scope: !1241, file: !81, line: 37, type: !21)
!1251 = !DILocation(line: 37, column: 49, scope: !1241)
!1252 = !DILocalVariable(name: "use_names", arg: 5, scope: !1241, file: !81, line: 38, type: !27)
!1253 = !DILocation(line: 38, column: 24, scope: !1241)
!1254 = !DILocalVariable(name: "delim", arg: 6, scope: !1241, file: !81, line: 38, type: !7)
!1255 = !DILocation(line: 38, column: 40, scope: !1241)
!1256 = !DILocalVariable(name: "ok", scope: !1241, file: !81, line: 40, type: !27)
!1257 = !DILocation(line: 40, column: 8, scope: !1241)
!1258 = !DILocalVariable(name: "pwd", scope: !1241, file: !81, line: 41, type: !1259)
!1259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1260, size: 64)
!1260 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "passwd", file: !553, line: 49, size: 384, elements: !1261)
!1261 = !{!1262, !1263, !1264, !1265, !1266, !1267, !1268}
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "pw_name", scope: !1260, file: !553, line: 51, baseType: !6, size: 64)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "pw_passwd", scope: !1260, file: !553, line: 52, baseType: !6, size: 64, offset: 64)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "pw_uid", scope: !1260, file: !553, line: 54, baseType: !14, size: 32, offset: 128)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "pw_gid", scope: !1260, file: !553, line: 55, baseType: !22, size: 32, offset: 160)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "pw_gecos", scope: !1260, file: !553, line: 56, baseType: !6, size: 64, offset: 192)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "pw_dir", scope: !1260, file: !553, line: 57, baseType: !6, size: 64, offset: 256)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "pw_shell", scope: !1260, file: !553, line: 58, baseType: !6, size: 64, offset: 320)
!1269 = !DILocation(line: 41, column: 18, scope: !1241)
!1270 = !DILocation(line: 43, column: 7, scope: !1271)
!1271 = distinct !DILexicalBlock(scope: !1241, file: !81, line: 43, column: 7)
!1272 = !DILocation(line: 43, column: 7, scope: !1241)
!1273 = !DILocation(line: 45, column: 23, scope: !1274)
!1274 = distinct !DILexicalBlock(scope: !1271, file: !81, line: 44, column: 5)
!1275 = !DILocation(line: 45, column: 13, scope: !1274)
!1276 = !DILocation(line: 45, column: 11, scope: !1274)
!1277 = !DILocation(line: 46, column: 11, scope: !1278)
!1278 = distinct !DILexicalBlock(scope: !1274, file: !81, line: 46, column: 11)
!1279 = !DILocation(line: 46, column: 15, scope: !1278)
!1280 = !DILocation(line: 46, column: 11, scope: !1274)
!1281 = !DILocation(line: 47, column: 12, scope: !1278)
!1282 = !DILocation(line: 47, column: 9, scope: !1278)
!1283 = !DILocation(line: 48, column: 5, scope: !1274)
!1284 = !DILocation(line: 50, column: 21, scope: !1285)
!1285 = distinct !DILexicalBlock(scope: !1241, file: !81, line: 50, column: 7)
!1286 = !DILocation(line: 50, column: 27, scope: !1285)
!1287 = !DILocation(line: 50, column: 8, scope: !1285)
!1288 = !DILocation(line: 50, column: 7, scope: !1241)
!1289 = !DILocation(line: 51, column: 8, scope: !1285)
!1290 = !DILocation(line: 51, column: 5, scope: !1285)
!1291 = !DILocation(line: 53, column: 7, scope: !1292)
!1292 = distinct !DILexicalBlock(scope: !1241, file: !81, line: 53, column: 7)
!1293 = !DILocation(line: 53, column: 15, scope: !1292)
!1294 = !DILocation(line: 53, column: 12, scope: !1292)
!1295 = !DILocation(line: 53, column: 7, scope: !1241)
!1296 = !DILocation(line: 55, column: 7, scope: !1297)
!1297 = distinct !DILexicalBlock(scope: !1292, file: !81, line: 54, column: 5)
!1298 = !DILocation(line: 56, column: 25, scope: !1299)
!1299 = distinct !DILexicalBlock(scope: !1297, file: !81, line: 56, column: 11)
!1300 = !DILocation(line: 56, column: 31, scope: !1299)
!1301 = !DILocation(line: 56, column: 12, scope: !1299)
!1302 = !DILocation(line: 56, column: 11, scope: !1297)
!1303 = !DILocation(line: 57, column: 12, scope: !1299)
!1304 = !DILocation(line: 57, column: 9, scope: !1299)
!1305 = !DILocation(line: 58, column: 5, scope: !1297)
!1306 = !DILocalVariable(name: "groups", scope: !1307, file: !81, line: 61, type: !183)
!1307 = distinct !DILexicalBlock(scope: !1241, file: !81, line: 60, column: 3)
!1308 = !DILocation(line: 61, column: 12, scope: !1307)
!1309 = !DILocalVariable(name: "n_groups", scope: !1307, file: !81, line: 63, type: !72)
!1310 = !DILocation(line: 63, column: 9, scope: !1307)
!1311 = !DILocation(line: 63, column: 32, scope: !1307)
!1312 = !DILocation(line: 63, column: 43, scope: !1307)
!1313 = !DILocation(line: 63, column: 49, scope: !1307)
!1314 = !DILocation(line: 63, column: 54, scope: !1307)
!1315 = !DILocation(line: 63, column: 63, scope: !1307)
!1316 = !DILocation(line: 63, column: 20, scope: !1307)
!1317 = !DILocation(line: 64, column: 9, scope: !1318)
!1318 = distinct !DILexicalBlock(scope: !1307, file: !81, line: 64, column: 9)
!1319 = !DILocation(line: 64, column: 18, scope: !1318)
!1320 = !DILocation(line: 64, column: 9, scope: !1307)
!1321 = !DILocation(line: 66, column: 13, scope: !1322)
!1322 = distinct !DILexicalBlock(scope: !1323, file: !81, line: 66, column: 13)
!1323 = distinct !DILexicalBlock(scope: !1318, file: !81, line: 65, column: 7)
!1324 = !DILocation(line: 66, column: 13, scope: !1323)
!1325 = !DILocation(line: 68, column: 23, scope: !1326)
!1326 = distinct !DILexicalBlock(scope: !1322, file: !81, line: 67, column: 11)
!1327 = !DILocation(line: 68, column: 30, scope: !1326)
!1328 = !DILocation(line: 69, column: 27, scope: !1326)
!1329 = !DILocation(line: 69, column: 20, scope: !1326)
!1330 = !DILocation(line: 68, column: 13, scope: !1326)
!1331 = !DILocation(line: 70, column: 11, scope: !1326)
!1332 = !DILocation(line: 73, column: 23, scope: !1333)
!1333 = distinct !DILexicalBlock(scope: !1322, file: !81, line: 72, column: 11)
!1334 = !DILocation(line: 73, column: 30, scope: !1333)
!1335 = !DILocation(line: 73, column: 13, scope: !1333)
!1336 = !DILocation(line: 75, column: 9, scope: !1323)
!1337 = !DILocalVariable(name: "i", scope: !1338, file: !81, line: 78, type: !72)
!1338 = distinct !DILexicalBlock(scope: !1307, file: !81, line: 78, column: 5)
!1339 = !DILocation(line: 78, column: 14, scope: !1338)
!1340 = !DILocation(line: 78, column: 10, scope: !1338)
!1341 = !DILocation(line: 78, column: 21, scope: !1342)
!1342 = distinct !DILexicalBlock(scope: !1338, file: !81, line: 78, column: 5)
!1343 = !DILocation(line: 78, column: 25, scope: !1342)
!1344 = !DILocation(line: 78, column: 23, scope: !1342)
!1345 = !DILocation(line: 78, column: 5, scope: !1338)
!1346 = !DILocation(line: 79, column: 11, scope: !1347)
!1347 = distinct !DILexicalBlock(scope: !1342, file: !81, line: 79, column: 11)
!1348 = !DILocation(line: 79, column: 18, scope: !1347)
!1349 = !DILocation(line: 79, column: 24, scope: !1347)
!1350 = !DILocation(line: 79, column: 21, scope: !1347)
!1351 = !DILocation(line: 79, column: 29, scope: !1347)
!1352 = !DILocation(line: 79, column: 32, scope: !1347)
!1353 = !DILocation(line: 79, column: 39, scope: !1347)
!1354 = !DILocation(line: 79, column: 45, scope: !1347)
!1355 = !DILocation(line: 79, column: 42, scope: !1347)
!1356 = !DILocation(line: 79, column: 11, scope: !1342)
!1357 = !DILocation(line: 81, column: 11, scope: !1358)
!1358 = distinct !DILexicalBlock(scope: !1347, file: !81, line: 80, column: 9)
!1359 = !DILocation(line: 82, column: 29, scope: !1360)
!1360 = distinct !DILexicalBlock(scope: !1358, file: !81, line: 82, column: 15)
!1361 = !DILocation(line: 82, column: 36, scope: !1360)
!1362 = !DILocation(line: 82, column: 40, scope: !1360)
!1363 = !DILocation(line: 82, column: 16, scope: !1360)
!1364 = !DILocation(line: 82, column: 15, scope: !1358)
!1365 = !DILocation(line: 83, column: 16, scope: !1360)
!1366 = !DILocation(line: 83, column: 13, scope: !1360)
!1367 = !DILocation(line: 84, column: 9, scope: !1358)
!1368 = !DILocation(line: 78, column: 36, scope: !1342)
!1369 = !DILocation(line: 78, column: 5, scope: !1342)
!1370 = distinct !{!1370, !1345, !1371}
!1371 = !DILocation(line: 84, column: 9, scope: !1338)
!1372 = !DILocation(line: 85, column: 11, scope: !1307)
!1373 = !DILocation(line: 85, column: 5, scope: !1307)
!1374 = !DILocation(line: 87, column: 10, scope: !1241)
!1375 = !DILocation(line: 87, column: 3, scope: !1241)
!1376 = !DILocation(line: 88, column: 1, scope: !1241)
!1377 = !DILocalVariable(name: "username", arg: 1, scope: !1378, file: !81, line: 36, type: !69)
!1378 = distinct !DISubprogram(name: "print_group_list", scope: !81, file: !81, line: 36, type: !1242, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1379, retainedNodes: !4)
!1379 = distinct !DICompileUnit(language: DW_LANG_C99, file: !81, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !83, globals: !1380, nameTableKind: None)
!1380 = !{!1381}
!1381 = !DIGlobalVariableExpression(var: !1382, expr: !DIExpression())
!1382 = distinct !DIGlobalVariable(name: "buf", scope: !1383, file: !81, line: 96, type: !53, isLocal: true, isDefinition: true)
!1383 = distinct !DISubprogram(name: "gidtostr_ptr", scope: !81, file: !81, line: 94, type: !59, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1379, retainedNodes: !4)
!1384 = !DILocalVariable(name: "ruid", arg: 2, scope: !1378, file: !81, line: 37, type: !12)
!1385 = !DILocalVariable(name: "rgid", arg: 3, scope: !1378, file: !81, line: 37, type: !21)
!1386 = !DILocalVariable(name: "egid", arg: 4, scope: !1378, file: !81, line: 37, type: !21)
!1387 = !DILocalVariable(name: "use_names", arg: 5, scope: !1378, file: !81, line: 38, type: !27)
!1388 = !DILocalVariable(name: "delim", arg: 6, scope: !1378, file: !81, line: 38, type: !7)
!1389 = !DILocalVariable(name: "ok", scope: !1378, file: !81, line: 40, type: !27)
!1390 = !DILocalVariable(name: "pwd", scope: !1378, file: !81, line: 41, type: !1391)
!1391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1392, size: 64)
!1392 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "passwd", file: !553, line: 49, size: 384, elements: !1393)
!1393 = !{!1394, !1395, !1396, !1397, !1398, !1399, !1400}
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "pw_name", scope: !1392, file: !553, line: 51, baseType: !6, size: 64)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "pw_passwd", scope: !1392, file: !553, line: 52, baseType: !6, size: 64, offset: 64)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "pw_uid", scope: !1392, file: !553, line: 54, baseType: !14, size: 32, offset: 128)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "pw_gid", scope: !1392, file: !553, line: 55, baseType: !22, size: 32, offset: 160)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "pw_gecos", scope: !1392, file: !553, line: 56, baseType: !6, size: 64, offset: 192)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "pw_dir", scope: !1392, file: !553, line: 57, baseType: !6, size: 64, offset: 256)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "pw_shell", scope: !1392, file: !553, line: 58, baseType: !6, size: 64, offset: 320)
!1401 = distinct !DISubprogram(name: "print_group", scope: !81, file: !81, line: 103, type: !1402, scopeLine: 104, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !82, retainedNodes: !4)
!1402 = !DISubroutineType(types: !1403)
!1403 = !{!27, !21, !27}
!1404 = !DILocalVariable(name: "gid", arg: 1, scope: !1401, file: !81, line: 103, type: !21)
!1405 = !DILocation(line: 103, column: 20, scope: !1401)
!1406 = !DILocalVariable(name: "use_name", arg: 2, scope: !1401, file: !81, line: 103, type: !27)
!1407 = !DILocation(line: 103, column: 30, scope: !1401)
!1408 = !DILocalVariable(name: "grp", scope: !1401, file: !81, line: 105, type: !1409)
!1409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1410, size: 64)
!1410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group", file: !1077, line: 42, size: 256, elements: !1411)
!1411 = !{!1412, !1413, !1414, !1415}
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "gr_name", scope: !1410, file: !1077, line: 44, baseType: !6, size: 64)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "gr_passwd", scope: !1410, file: !1077, line: 45, baseType: !6, size: 64, offset: 64)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "gr_gid", scope: !1410, file: !1077, line: 46, baseType: !22, size: 32, offset: 128)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "gr_mem", scope: !1410, file: !1077, line: 47, baseType: !184, size: 64, offset: 192)
!1416 = !DILocation(line: 105, column: 17, scope: !1401)
!1417 = !DILocalVariable(name: "ok", scope: !1401, file: !81, line: 106, type: !27)
!1418 = !DILocation(line: 106, column: 8, scope: !1401)
!1419 = !DILocation(line: 108, column: 7, scope: !1420)
!1420 = distinct !DILexicalBlock(scope: !1401, file: !81, line: 108, column: 7)
!1421 = !DILocation(line: 108, column: 7, scope: !1401)
!1422 = !DILocation(line: 110, column: 23, scope: !1423)
!1423 = distinct !DILexicalBlock(scope: !1420, file: !81, line: 109, column: 5)
!1424 = !DILocation(line: 110, column: 13, scope: !1423)
!1425 = !DILocation(line: 110, column: 11, scope: !1423)
!1426 = !DILocation(line: 111, column: 11, scope: !1427)
!1427 = distinct !DILexicalBlock(scope: !1423, file: !81, line: 111, column: 11)
!1428 = !DILocation(line: 111, column: 15, scope: !1427)
!1429 = !DILocation(line: 111, column: 11, scope: !1423)
!1430 = !DILocation(line: 113, column: 24, scope: !1431)
!1431 = distinct !DILexicalBlock(scope: !1427, file: !81, line: 112, column: 9)
!1432 = !DILocation(line: 114, column: 38, scope: !1431)
!1433 = !DILocation(line: 114, column: 18, scope: !1431)
!1434 = !DILocation(line: 113, column: 11, scope: !1431)
!1435 = !DILocation(line: 115, column: 14, scope: !1431)
!1436 = !DILocation(line: 116, column: 9, scope: !1431)
!1437 = !DILocation(line: 117, column: 5, scope: !1423)
!1438 = !DILocalVariable(name: "s", scope: !1401, file: !81, line: 119, type: !6)
!1439 = !DILocation(line: 119, column: 9, scope: !1401)
!1440 = !DILocation(line: 119, column: 13, scope: !1401)
!1441 = !DILocation(line: 119, column: 19, scope: !1401)
!1442 = !DILocation(line: 119, column: 24, scope: !1401)
!1443 = !DILocation(line: 119, column: 34, scope: !1401)
!1444 = !DILocation(line: 120, column: 3, scope: !1401)
!1445 = !DILocation(line: 121, column: 10, scope: !1401)
!1446 = !DILocation(line: 121, column: 3, scope: !1401)
!1447 = !DILocalVariable(name: "gid", arg: 1, scope: !1448, file: !81, line: 103, type: !21)
!1448 = distinct !DISubprogram(name: "print_group", scope: !81, file: !81, line: 103, type: !1402, scopeLine: 104, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1449, retainedNodes: !4)
!1449 = distinct !DICompileUnit(language: DW_LANG_C99, file: !81, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !83, globals: !1450, nameTableKind: None)
!1450 = !{!1451}
!1451 = !DIGlobalVariableExpression(var: !1452, expr: !DIExpression())
!1452 = distinct !DIGlobalVariable(name: "buf", scope: !1453, file: !81, line: 96, type: !53, isLocal: true, isDefinition: true)
!1453 = distinct !DISubprogram(name: "gidtostr_ptr", scope: !81, file: !81, line: 94, type: !59, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1449, retainedNodes: !4)
!1454 = !DILocalVariable(name: "use_name", arg: 2, scope: !1448, file: !81, line: 103, type: !27)
!1455 = !DILocalVariable(name: "grp", scope: !1448, file: !81, line: 105, type: !1456)
!1456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1457, size: 64)
!1457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group", file: !1077, line: 42, size: 256, elements: !1458)
!1458 = !{!1459, !1460, !1461, !1462}
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "gr_name", scope: !1457, file: !1077, line: 44, baseType: !6, size: 64)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "gr_passwd", scope: !1457, file: !1077, line: 45, baseType: !6, size: 64, offset: 64)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "gr_gid", scope: !1457, file: !1077, line: 46, baseType: !22, size: 32, offset: 128)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "gr_mem", scope: !1457, file: !1077, line: 47, baseType: !184, size: 64, offset: 192)
!1463 = !DILocalVariable(name: "ok", scope: !1448, file: !81, line: 106, type: !27)
!1464 = !DILocalVariable(name: "gid", arg: 1, scope: !80, file: !81, line: 94, type: !61)
!1465 = !DILocation(line: 94, column: 28, scope: !80)
!1466 = !DILocation(line: 97, column: 22, scope: !80)
!1467 = !DILocation(line: 97, column: 21, scope: !80)
!1468 = !DILocation(line: 97, column: 10, scope: !80)
!1469 = !DILocation(line: 97, column: 3, scope: !80)
!1470 = distinct !DISubprogram(name: "close_stdout", scope: !98, file: !98, line: 117, type: !1471, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !93, retainedNodes: !4)
!1471 = !DISubroutineType(types: !1472)
!1472 = !{null}
!1473 = !DILocation(line: 119, column: 21, scope: !1474)
!1474 = distinct !DILexicalBlock(scope: !1470, file: !98, line: 119, column: 7)
!1475 = !DILocation(line: 119, column: 7, scope: !1474)
!1476 = !DILocation(line: 119, column: 29, scope: !1474)
!1477 = !DILocation(line: 120, column: 7, scope: !1474)
!1478 = !DILocation(line: 120, column: 12, scope: !1474)
!1479 = !DILocation(line: 120, column: 25, scope: !1474)
!1480 = !DILocation(line: 120, column: 28, scope: !1474)
!1481 = !DILocation(line: 120, column: 34, scope: !1474)
!1482 = !DILocation(line: 119, column: 7, scope: !1470)
!1483 = !DILocalVariable(name: "write_error", scope: !1484, file: !98, line: 122, type: !69)
!1484 = distinct !DILexicalBlock(scope: !1474, file: !98, line: 121, column: 5)
!1485 = !DILocation(line: 122, column: 19, scope: !1484)
!1486 = !DILocation(line: 122, column: 33, scope: !1484)
!1487 = !DILocation(line: 123, column: 11, scope: !1488)
!1488 = distinct !DILexicalBlock(scope: !1484, file: !98, line: 123, column: 11)
!1489 = !DILocation(line: 123, column: 11, scope: !1484)
!1490 = !DILocation(line: 124, column: 19, scope: !1488)
!1491 = !DILocation(line: 124, column: 52, scope: !1488)
!1492 = !DILocation(line: 124, column: 36, scope: !1488)
!1493 = !DILocation(line: 125, column: 16, scope: !1488)
!1494 = !DILocation(line: 124, column: 9, scope: !1488)
!1495 = !DILocation(line: 127, column: 19, scope: !1488)
!1496 = !DILocation(line: 127, column: 32, scope: !1488)
!1497 = !DILocation(line: 127, column: 9, scope: !1488)
!1498 = !DILocation(line: 129, column: 14, scope: !1484)
!1499 = !DILocation(line: 129, column: 7, scope: !1484)
!1500 = !DILocation(line: 134, column: 42, scope: !1501)
!1501 = distinct !DILexicalBlock(scope: !1470, file: !98, line: 134, column: 7)
!1502 = !DILocation(line: 134, column: 28, scope: !1501)
!1503 = !DILocation(line: 134, column: 50, scope: !1501)
!1504 = !DILocation(line: 134, column: 7, scope: !1470)
!1505 = !DILocation(line: 135, column: 12, scope: !1501)
!1506 = !DILocation(line: 135, column: 5, scope: !1501)
!1507 = !DILocation(line: 136, column: 1, scope: !1470)
!1508 = distinct !DISubprogram(name: "umaxtostr", scope: !1509, file: !1509, line: 36, type: !1510, scopeLine: 37, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !202, retainedNodes: !4)
!1509 = !DIFile(filename: "./lib/anytostr.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!1510 = !DISubroutineType(types: !1511)
!1511 = !{!6, !205, !6}
!1512 = !DILocalVariable(name: "i", arg: 1, scope: !1508, file: !1509, line: 36, type: !205)
!1513 = !DILocation(line: 36, column: 19, scope: !1508)
!1514 = !DILocalVariable(name: "buf", arg: 2, scope: !1508, file: !1509, line: 36, type: !6)
!1515 = !DILocation(line: 36, column: 28, scope: !1508)
!1516 = !DILocalVariable(name: "p", scope: !1508, file: !1509, line: 38, type: !6)
!1517 = !DILocation(line: 38, column: 9, scope: !1508)
!1518 = !DILocation(line: 38, column: 13, scope: !1508)
!1519 = !DILocation(line: 38, column: 17, scope: !1508)
!1520 = !DILocation(line: 39, column: 4, scope: !1508)
!1521 = !DILocation(line: 39, column: 6, scope: !1508)
!1522 = !DILocation(line: 41, column: 7, scope: !1523)
!1523 = distinct !DILexicalBlock(scope: !1508, file: !1509, line: 41, column: 7)
!1524 = !DILocation(line: 41, column: 9, scope: !1523)
!1525 = !DILocation(line: 41, column: 7, scope: !1508)
!1526 = !DILocation(line: 43, column: 7, scope: !1527)
!1527 = distinct !DILexicalBlock(scope: !1523, file: !1509, line: 42, column: 5)
!1528 = !DILocation(line: 44, column: 22, scope: !1527)
!1529 = !DILocation(line: 44, column: 24, scope: !1527)
!1530 = !DILocation(line: 44, column: 20, scope: !1527)
!1531 = !DILocation(line: 44, column: 16, scope: !1527)
!1532 = !DILocation(line: 44, column: 10, scope: !1527)
!1533 = !DILocation(line: 44, column: 14, scope: !1527)
!1534 = !DILocation(line: 44, column: 9, scope: !1527)
!1535 = !DILocation(line: 45, column: 17, scope: !1527)
!1536 = !DILocation(line: 45, column: 24, scope: !1527)
!1537 = distinct !{!1537, !1526, !1538}
!1538 = !DILocation(line: 45, column: 28, scope: !1527)
!1539 = !DILocation(line: 47, column: 8, scope: !1527)
!1540 = !DILocation(line: 47, column: 12, scope: !1527)
!1541 = !DILocation(line: 48, column: 5, scope: !1527)
!1542 = !DILocation(line: 51, column: 7, scope: !1543)
!1543 = distinct !DILexicalBlock(scope: !1523, file: !1509, line: 50, column: 5)
!1544 = !DILocation(line: 52, column: 22, scope: !1543)
!1545 = !DILocation(line: 52, column: 24, scope: !1543)
!1546 = !DILocation(line: 52, column: 20, scope: !1543)
!1547 = !DILocation(line: 52, column: 16, scope: !1543)
!1548 = !DILocation(line: 52, column: 10, scope: !1543)
!1549 = !DILocation(line: 52, column: 14, scope: !1543)
!1550 = !DILocation(line: 52, column: 9, scope: !1543)
!1551 = !DILocation(line: 53, column: 17, scope: !1543)
!1552 = !DILocation(line: 53, column: 24, scope: !1543)
!1553 = distinct !{!1553, !1542, !1554}
!1554 = !DILocation(line: 53, column: 28, scope: !1543)
!1555 = !DILocation(line: 56, column: 10, scope: !1508)
!1556 = !DILocation(line: 56, column: 3, scope: !1508)
!1557 = distinct !DISubprogram(name: "set_program_name", scope: !112, file: !112, line: 39, type: !295, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !108, retainedNodes: !4)
!1558 = !DILocalVariable(name: "argv0", arg: 1, scope: !1557, file: !112, line: 39, type: !69)
!1559 = !DILocation(line: 39, column: 31, scope: !1557)
!1560 = !DILocalVariable(name: "slash", scope: !1557, file: !112, line: 46, type: !69)
!1561 = !DILocation(line: 46, column: 15, scope: !1557)
!1562 = !DILocalVariable(name: "base", scope: !1557, file: !112, line: 47, type: !69)
!1563 = !DILocation(line: 47, column: 15, scope: !1557)
!1564 = !DILocation(line: 51, column: 7, scope: !1565)
!1565 = distinct !DILexicalBlock(scope: !1557, file: !112, line: 51, column: 7)
!1566 = !DILocation(line: 51, column: 13, scope: !1565)
!1567 = !DILocation(line: 51, column: 7, scope: !1557)
!1568 = !DILocation(line: 55, column: 14, scope: !1569)
!1569 = distinct !DILexicalBlock(scope: !1565, file: !112, line: 52, column: 5)
!1570 = !DILocation(line: 54, column: 7, scope: !1569)
!1571 = !DILocation(line: 56, column: 7, scope: !1569)
!1572 = !DILocation(line: 59, column: 20, scope: !1557)
!1573 = !DILocation(line: 59, column: 11, scope: !1557)
!1574 = !DILocation(line: 59, column: 9, scope: !1557)
!1575 = !DILocation(line: 60, column: 11, scope: !1557)
!1576 = !DILocation(line: 60, column: 17, scope: !1557)
!1577 = !DILocation(line: 60, column: 27, scope: !1557)
!1578 = !DILocation(line: 60, column: 33, scope: !1557)
!1579 = !DILocation(line: 60, column: 39, scope: !1557)
!1580 = !DILocation(line: 60, column: 8, scope: !1557)
!1581 = !DILocation(line: 61, column: 7, scope: !1582)
!1582 = distinct !DILexicalBlock(scope: !1557, file: !112, line: 61, column: 7)
!1583 = !DILocation(line: 61, column: 14, scope: !1582)
!1584 = !DILocation(line: 61, column: 12, scope: !1582)
!1585 = !DILocation(line: 61, column: 20, scope: !1582)
!1586 = !DILocation(line: 61, column: 25, scope: !1582)
!1587 = !DILocation(line: 61, column: 37, scope: !1582)
!1588 = !DILocation(line: 61, column: 42, scope: !1582)
!1589 = !DILocation(line: 61, column: 28, scope: !1582)
!1590 = !DILocation(line: 61, column: 61, scope: !1582)
!1591 = !DILocation(line: 61, column: 7, scope: !1557)
!1592 = !DILocation(line: 63, column: 15, scope: !1593)
!1593 = distinct !DILexicalBlock(scope: !1582, file: !112, line: 62, column: 5)
!1594 = !DILocation(line: 63, column: 13, scope: !1593)
!1595 = !DILocation(line: 64, column: 20, scope: !1596)
!1596 = distinct !DILexicalBlock(scope: !1593, file: !112, line: 64, column: 11)
!1597 = !DILocation(line: 64, column: 11, scope: !1596)
!1598 = !DILocation(line: 64, column: 36, scope: !1596)
!1599 = !DILocation(line: 64, column: 11, scope: !1593)
!1600 = !DILocation(line: 66, column: 19, scope: !1601)
!1601 = distinct !DILexicalBlock(scope: !1596, file: !112, line: 65, column: 9)
!1602 = !DILocation(line: 66, column: 24, scope: !1601)
!1603 = !DILocation(line: 66, column: 17, scope: !1601)
!1604 = !DILocation(line: 70, column: 52, scope: !1601)
!1605 = !DILocation(line: 70, column: 41, scope: !1601)
!1606 = !DILocation(line: 72, column: 9, scope: !1601)
!1607 = !DILocation(line: 73, column: 5, scope: !1593)
!1608 = !DILocation(line: 84, column: 18, scope: !1557)
!1609 = !DILocation(line: 84, column: 16, scope: !1557)
!1610 = !DILocation(line: 90, column: 38, scope: !1557)
!1611 = !DILocation(line: 90, column: 27, scope: !1557)
!1612 = !DILocation(line: 92, column: 1, scope: !1557)
!1613 = distinct !DISubprogram(name: "set_char_quoting", scope: !139, file: !139, line: 152, type: !1614, scopeLine: 153, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !115, retainedNodes: !4)
!1614 = !DISubroutineType(types: !1615)
!1615 = !{!72, !1616, !7, !72}
!1616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !150, size: 64)
!1617 = !DILocalVariable(name: "o", arg: 1, scope: !1613, file: !139, line: 152, type: !1616)
!1618 = !DILocation(line: 152, column: 43, scope: !1613)
!1619 = !DILocalVariable(name: "c", arg: 2, scope: !1613, file: !139, line: 152, type: !7)
!1620 = !DILocation(line: 152, column: 51, scope: !1613)
!1621 = !DILocalVariable(name: "i", arg: 3, scope: !1613, file: !139, line: 152, type: !72)
!1622 = !DILocation(line: 152, column: 58, scope: !1613)
!1623 = !DILocalVariable(name: "uc", scope: !1613, file: !139, line: 154, type: !240)
!1624 = !DILocation(line: 154, column: 17, scope: !1613)
!1625 = !DILocation(line: 154, column: 22, scope: !1613)
!1626 = !DILocalVariable(name: "p", scope: !1613, file: !139, line: 155, type: !1627)
!1627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16, size: 64)
!1628 = !DILocation(line: 155, column: 17, scope: !1613)
!1629 = !DILocation(line: 156, column: 6, scope: !1613)
!1630 = !DILocation(line: 156, column: 10, scope: !1613)
!1631 = !DILocation(line: 156, column: 41, scope: !1613)
!1632 = !DILocation(line: 156, column: 5, scope: !1613)
!1633 = !DILocation(line: 156, column: 59, scope: !1613)
!1634 = !DILocation(line: 156, column: 62, scope: !1613)
!1635 = !DILocation(line: 156, column: 57, scope: !1613)
!1636 = !DILocalVariable(name: "shift", scope: !1613, file: !139, line: 157, type: !72)
!1637 = !DILocation(line: 157, column: 7, scope: !1613)
!1638 = !DILocation(line: 157, column: 15, scope: !1613)
!1639 = !DILocation(line: 157, column: 18, scope: !1613)
!1640 = !DILocalVariable(name: "r", scope: !1613, file: !139, line: 158, type: !72)
!1641 = !DILocation(line: 158, column: 7, scope: !1613)
!1642 = !DILocation(line: 158, column: 13, scope: !1613)
!1643 = !DILocation(line: 158, column: 12, scope: !1613)
!1644 = !DILocation(line: 158, column: 18, scope: !1613)
!1645 = !DILocation(line: 158, column: 15, scope: !1613)
!1646 = !DILocation(line: 158, column: 25, scope: !1613)
!1647 = !DILocation(line: 159, column: 11, scope: !1613)
!1648 = !DILocation(line: 159, column: 13, scope: !1613)
!1649 = !DILocation(line: 159, column: 20, scope: !1613)
!1650 = !DILocation(line: 159, column: 18, scope: !1613)
!1651 = !DILocation(line: 159, column: 26, scope: !1613)
!1652 = !DILocation(line: 159, column: 23, scope: !1613)
!1653 = !DILocation(line: 159, column: 4, scope: !1613)
!1654 = !DILocation(line: 159, column: 6, scope: !1613)
!1655 = !DILocation(line: 160, column: 10, scope: !1613)
!1656 = !DILocation(line: 160, column: 3, scope: !1613)
!1657 = !DILocalVariable(name: "shift", scope: !1658, file: !139, line: 157, type: !72)
!1658 = distinct !DISubprogram(name: "set_char_quoting", scope: !139, file: !139, line: 152, type: !1659, scopeLine: 153, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1669, retainedNodes: !4)
!1659 = !DISubroutineType(types: !1660)
!1660 = !{!72, !1661, !7, !72}
!1661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1662, size: 64)
!1662 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !139, line: 65, size: 448, elements: !1663)
!1663 = !{!1664, !1665, !1666, !1667, !1668}
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !1662, file: !139, line: 68, baseType: !118, size: 32)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1662, file: !139, line: 71, baseType: !72, size: 32, offset: 32)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !1662, file: !139, line: 75, baseType: !155, size: 256, offset: 64)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !1662, file: !139, line: 78, baseType: !69, size: 64, offset: 320)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !1662, file: !139, line: 81, baseType: !69, size: 64, offset: 384)
!1669 = distinct !DICompileUnit(language: DW_LANG_C99, file: !116, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !117, retainedTypes: !132, globals: !1670, nameTableKind: None)
!1670 = !{!1671, !1673, !1675, !1677, !1679, !1681, !1688, !1690}
!1671 = !DIGlobalVariableExpression(var: !1672, expr: !DIExpression())
!1672 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !1669, file: !139, line: 85, type: !140, isLocal: false, isDefinition: true)
!1673 = !DIGlobalVariableExpression(var: !1674, expr: !DIExpression())
!1674 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !1669, file: !139, line: 101, type: !146, isLocal: false, isDefinition: true)
!1675 = !DIGlobalVariableExpression(var: !1676, expr: !DIExpression())
!1676 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !1669, file: !139, line: 1052, type: !1662, isLocal: false, isDefinition: true)
!1677 = !DIGlobalVariableExpression(var: !1678, expr: !DIExpression())
!1678 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !1669, file: !139, line: 116, type: !1662, isLocal: true, isDefinition: true)
!1679 = !DIGlobalVariableExpression(var: !1680, expr: !DIExpression())
!1680 = distinct !DIGlobalVariable(name: "slot0", scope: !1669, file: !139, line: 842, type: !162, isLocal: true, isDefinition: true)
!1681 = !DIGlobalVariableExpression(var: !1682, expr: !DIExpression())
!1682 = distinct !DIGlobalVariable(name: "slotvec", scope: !1669, file: !139, line: 845, type: !1683, isLocal: true, isDefinition: true)
!1683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1684, size: 64)
!1684 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !139, line: 834, size: 128, elements: !1685)
!1685 = !{!1686, !1687}
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1684, file: !139, line: 836, baseType: !134, size: 64)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1684, file: !139, line: 837, baseType: !6, size: 64, offset: 64)
!1688 = !DIGlobalVariableExpression(var: !1689, expr: !DIExpression())
!1689 = distinct !DIGlobalVariable(name: "nslots", scope: !1669, file: !139, line: 843, type: !72, isLocal: true, isDefinition: true)
!1690 = !DIGlobalVariableExpression(var: !1691, expr: !DIExpression())
!1691 = distinct !DIGlobalVariable(name: "slotvec0", scope: !1669, file: !139, line: 844, type: !1684, isLocal: true, isDefinition: true)
!1692 = !DILocalVariable(name: "r", scope: !1658, file: !139, line: 158, type: !72)
!1693 = distinct !DISubprogram(name: "quotearg_char_mem", scope: !139, file: !139, line: 982, type: !1694, scopeLine: 983, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !115, retainedNodes: !4)
!1694 = !DISubroutineType(types: !1695)
!1695 = !{!6, !69, !134, !7}
!1696 = !DILocalVariable(name: "arg", arg: 1, scope: !1693, file: !139, line: 982, type: !69)
!1697 = !DILocation(line: 982, column: 32, scope: !1693)
!1698 = !DILocalVariable(name: "argsize", arg: 2, scope: !1693, file: !139, line: 982, type: !134)
!1699 = !DILocation(line: 982, column: 44, scope: !1693)
!1700 = !DILocalVariable(name: "ch", arg: 3, scope: !1693, file: !139, line: 982, type: !7)
!1701 = !DILocation(line: 982, column: 58, scope: !1693)
!1702 = !DILocalVariable(name: "options", scope: !1693, file: !139, line: 984, type: !150)
!1703 = !DILocation(line: 984, column: 26, scope: !1693)
!1704 = !DILocation(line: 985, column: 13, scope: !1693)
!1705 = !DILocation(line: 986, column: 31, scope: !1693)
!1706 = !DILocation(line: 986, column: 3, scope: !1693)
!1707 = !DILocation(line: 987, column: 33, scope: !1693)
!1708 = !DILocation(line: 987, column: 38, scope: !1693)
!1709 = !DILocation(line: 987, column: 10, scope: !1693)
!1710 = !DILocation(line: 987, column: 3, scope: !1693)
!1711 = distinct !DISubprogram(name: "quotearg_n_options", scope: !139, file: !139, line: 877, type: !1712, scopeLine: 879, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !115, retainedNodes: !4)
!1712 = !DISubroutineType(types: !1713)
!1713 = !{!6, !72, !69, !134, !1714}
!1714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1715, size: 64)
!1715 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !150)
!1716 = !DILocalVariable(name: "n", arg: 1, scope: !1711, file: !139, line: 877, type: !72)
!1717 = !DILocation(line: 877, column: 25, scope: !1711)
!1718 = !DILocalVariable(name: "arg", arg: 2, scope: !1711, file: !139, line: 877, type: !69)
!1719 = !DILocation(line: 877, column: 40, scope: !1711)
!1720 = !DILocalVariable(name: "argsize", arg: 3, scope: !1711, file: !139, line: 877, type: !134)
!1721 = !DILocation(line: 877, column: 52, scope: !1711)
!1722 = !DILocalVariable(name: "options", arg: 4, scope: !1711, file: !139, line: 878, type: !1714)
!1723 = !DILocation(line: 878, column: 51, scope: !1711)
!1724 = !DILocalVariable(name: "e", scope: !1711, file: !139, line: 880, type: !72)
!1725 = !DILocation(line: 880, column: 7, scope: !1711)
!1726 = !DILocation(line: 880, column: 11, scope: !1711)
!1727 = !DILocalVariable(name: "sv", scope: !1711, file: !139, line: 882, type: !167)
!1728 = !DILocation(line: 882, column: 19, scope: !1711)
!1729 = !DILocation(line: 882, column: 24, scope: !1711)
!1730 = !DILocation(line: 884, column: 7, scope: !1731)
!1731 = distinct !DILexicalBlock(scope: !1711, file: !139, line: 884, column: 7)
!1732 = !DILocation(line: 884, column: 9, scope: !1731)
!1733 = !DILocation(line: 884, column: 7, scope: !1711)
!1734 = !DILocation(line: 885, column: 5, scope: !1731)
!1735 = !DILocation(line: 887, column: 7, scope: !1736)
!1736 = distinct !DILexicalBlock(scope: !1711, file: !139, line: 887, column: 7)
!1737 = !DILocation(line: 887, column: 17, scope: !1736)
!1738 = !DILocation(line: 887, column: 14, scope: !1736)
!1739 = !DILocation(line: 887, column: 7, scope: !1711)
!1740 = !DILocalVariable(name: "preallocated", scope: !1741, file: !139, line: 889, type: !27)
!1741 = distinct !DILexicalBlock(scope: !1736, file: !139, line: 888, column: 5)
!1742 = !DILocation(line: 889, column: 12, scope: !1741)
!1743 = !DILocation(line: 889, column: 28, scope: !1741)
!1744 = !DILocation(line: 889, column: 31, scope: !1741)
!1745 = !DILocalVariable(name: "nmax", scope: !1741, file: !139, line: 890, type: !72)
!1746 = !DILocation(line: 890, column: 11, scope: !1741)
!1747 = !DILocation(line: 892, column: 11, scope: !1748)
!1748 = distinct !DILexicalBlock(scope: !1741, file: !139, line: 892, column: 11)
!1749 = !DILocation(line: 892, column: 18, scope: !1748)
!1750 = !DILocation(line: 892, column: 16, scope: !1748)
!1751 = !DILocation(line: 892, column: 11, scope: !1741)
!1752 = !DILocation(line: 893, column: 9, scope: !1748)
!1753 = !DILocation(line: 895, column: 32, scope: !1741)
!1754 = !DILocation(line: 895, column: 54, scope: !1741)
!1755 = !DILocation(line: 895, column: 59, scope: !1741)
!1756 = !DILocation(line: 895, column: 61, scope: !1741)
!1757 = !DILocation(line: 895, column: 58, scope: !1741)
!1758 = !DILocation(line: 895, column: 66, scope: !1741)
!1759 = !DILocation(line: 895, column: 22, scope: !1741)
!1760 = !DILocation(line: 895, column: 20, scope: !1741)
!1761 = !DILocation(line: 895, column: 15, scope: !1741)
!1762 = !DILocation(line: 896, column: 11, scope: !1763)
!1763 = distinct !DILexicalBlock(scope: !1741, file: !139, line: 896, column: 11)
!1764 = !DILocation(line: 896, column: 11, scope: !1741)
!1765 = !DILocation(line: 897, column: 10, scope: !1763)
!1766 = !DILocation(line: 897, column: 15, scope: !1763)
!1767 = !DILocation(line: 897, column: 9, scope: !1763)
!1768 = !DILocation(line: 898, column: 15, scope: !1741)
!1769 = !DILocation(line: 898, column: 20, scope: !1741)
!1770 = !DILocation(line: 898, column: 18, scope: !1741)
!1771 = !DILocation(line: 898, column: 7, scope: !1741)
!1772 = !DILocation(line: 898, column: 32, scope: !1741)
!1773 = !DILocation(line: 898, column: 34, scope: !1741)
!1774 = !DILocation(line: 898, column: 40, scope: !1741)
!1775 = !DILocation(line: 898, column: 38, scope: !1741)
!1776 = !DILocation(line: 898, column: 31, scope: !1741)
!1777 = !DILocation(line: 898, column: 48, scope: !1741)
!1778 = !DILocation(line: 899, column: 16, scope: !1741)
!1779 = !DILocation(line: 899, column: 18, scope: !1741)
!1780 = !DILocation(line: 899, column: 14, scope: !1741)
!1781 = !DILocation(line: 900, column: 5, scope: !1741)
!1782 = !DILocalVariable(name: "size", scope: !1783, file: !139, line: 903, type: !134)
!1783 = distinct !DILexicalBlock(scope: !1711, file: !139, line: 902, column: 3)
!1784 = !DILocation(line: 903, column: 12, scope: !1783)
!1785 = !DILocation(line: 903, column: 19, scope: !1783)
!1786 = !DILocation(line: 903, column: 22, scope: !1783)
!1787 = !DILocation(line: 903, column: 25, scope: !1783)
!1788 = !DILocalVariable(name: "val", scope: !1783, file: !139, line: 904, type: !6)
!1789 = !DILocation(line: 904, column: 11, scope: !1783)
!1790 = !DILocation(line: 904, column: 17, scope: !1783)
!1791 = !DILocation(line: 904, column: 20, scope: !1783)
!1792 = !DILocation(line: 904, column: 23, scope: !1783)
!1793 = !DILocalVariable(name: "flags", scope: !1783, file: !139, line: 906, type: !72)
!1794 = !DILocation(line: 906, column: 9, scope: !1783)
!1795 = !DILocation(line: 906, column: 17, scope: !1783)
!1796 = !DILocation(line: 906, column: 26, scope: !1783)
!1797 = !DILocation(line: 906, column: 32, scope: !1783)
!1798 = !DILocalVariable(name: "qsize", scope: !1783, file: !139, line: 907, type: !134)
!1799 = !DILocation(line: 907, column: 12, scope: !1783)
!1800 = !DILocation(line: 907, column: 46, scope: !1783)
!1801 = !DILocation(line: 907, column: 51, scope: !1783)
!1802 = !DILocation(line: 907, column: 57, scope: !1783)
!1803 = !DILocation(line: 907, column: 62, scope: !1783)
!1804 = !DILocation(line: 908, column: 46, scope: !1783)
!1805 = !DILocation(line: 908, column: 55, scope: !1783)
!1806 = !DILocation(line: 908, column: 62, scope: !1783)
!1807 = !DILocation(line: 909, column: 46, scope: !1783)
!1808 = !DILocation(line: 909, column: 55, scope: !1783)
!1809 = !DILocation(line: 910, column: 46, scope: !1783)
!1810 = !DILocation(line: 910, column: 55, scope: !1783)
!1811 = !DILocation(line: 911, column: 46, scope: !1783)
!1812 = !DILocation(line: 911, column: 55, scope: !1783)
!1813 = !DILocation(line: 907, column: 20, scope: !1783)
!1814 = !DILocation(line: 913, column: 9, scope: !1815)
!1815 = distinct !DILexicalBlock(scope: !1783, file: !139, line: 913, column: 9)
!1816 = !DILocation(line: 913, column: 17, scope: !1815)
!1817 = !DILocation(line: 913, column: 14, scope: !1815)
!1818 = !DILocation(line: 913, column: 9, scope: !1783)
!1819 = !DILocation(line: 915, column: 29, scope: !1820)
!1820 = distinct !DILexicalBlock(scope: !1815, file: !139, line: 914, column: 7)
!1821 = !DILocation(line: 915, column: 35, scope: !1820)
!1822 = !DILocation(line: 915, column: 27, scope: !1820)
!1823 = !DILocation(line: 915, column: 9, scope: !1820)
!1824 = !DILocation(line: 915, column: 12, scope: !1820)
!1825 = !DILocation(line: 915, column: 15, scope: !1820)
!1826 = !DILocation(line: 915, column: 20, scope: !1820)
!1827 = !DILocation(line: 916, column: 13, scope: !1828)
!1828 = distinct !DILexicalBlock(scope: !1820, file: !139, line: 916, column: 13)
!1829 = !DILocation(line: 916, column: 17, scope: !1828)
!1830 = !DILocation(line: 916, column: 13, scope: !1820)
!1831 = !DILocation(line: 917, column: 17, scope: !1828)
!1832 = !DILocation(line: 917, column: 11, scope: !1828)
!1833 = !DILocation(line: 918, column: 39, scope: !1820)
!1834 = !DILocation(line: 918, column: 27, scope: !1820)
!1835 = !DILocation(line: 918, column: 25, scope: !1820)
!1836 = !DILocation(line: 918, column: 9, scope: !1820)
!1837 = !DILocation(line: 918, column: 12, scope: !1820)
!1838 = !DILocation(line: 918, column: 15, scope: !1820)
!1839 = !DILocation(line: 918, column: 19, scope: !1820)
!1840 = !DILocation(line: 919, column: 35, scope: !1820)
!1841 = !DILocation(line: 919, column: 40, scope: !1820)
!1842 = !DILocation(line: 919, column: 46, scope: !1820)
!1843 = !DILocation(line: 919, column: 51, scope: !1820)
!1844 = !DILocation(line: 919, column: 60, scope: !1820)
!1845 = !DILocation(line: 919, column: 69, scope: !1820)
!1846 = !DILocation(line: 920, column: 35, scope: !1820)
!1847 = !DILocation(line: 920, column: 42, scope: !1820)
!1848 = !DILocation(line: 920, column: 51, scope: !1820)
!1849 = !DILocation(line: 921, column: 35, scope: !1820)
!1850 = !DILocation(line: 921, column: 44, scope: !1820)
!1851 = !DILocation(line: 922, column: 35, scope: !1820)
!1852 = !DILocation(line: 922, column: 44, scope: !1820)
!1853 = !DILocation(line: 919, column: 9, scope: !1820)
!1854 = !DILocation(line: 923, column: 7, scope: !1820)
!1855 = !DILocation(line: 925, column: 13, scope: !1783)
!1856 = !DILocation(line: 925, column: 5, scope: !1783)
!1857 = !DILocation(line: 925, column: 11, scope: !1783)
!1858 = !DILocation(line: 926, column: 12, scope: !1783)
!1859 = !DILocation(line: 926, column: 5, scope: !1783)
!1860 = !DILocalVariable(name: "n", arg: 1, scope: !1861, file: !139, line: 877, type: !72)
!1861 = distinct !DISubprogram(name: "quotearg_n_options", scope: !139, file: !139, line: 877, type: !1862, scopeLine: 879, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1873, retainedNodes: !4)
!1862 = !DISubroutineType(types: !1863)
!1863 = !{!6, !72, !69, !134, !1864}
!1864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1865, size: 64)
!1865 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1866)
!1866 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !139, line: 65, size: 448, elements: !1867)
!1867 = !{!1868, !1869, !1870, !1871, !1872}
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !1866, file: !139, line: 68, baseType: !118, size: 32)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1866, file: !139, line: 71, baseType: !72, size: 32, offset: 32)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !1866, file: !139, line: 75, baseType: !155, size: 256, offset: 64)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !1866, file: !139, line: 78, baseType: !69, size: 64, offset: 320)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !1866, file: !139, line: 81, baseType: !69, size: 64, offset: 384)
!1873 = distinct !DICompileUnit(language: DW_LANG_C99, file: !116, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !117, retainedTypes: !132, globals: !1874, nameTableKind: None)
!1874 = !{!1875, !1877, !1879, !1881, !1883, !1885, !1892, !1894}
!1875 = !DIGlobalVariableExpression(var: !1876, expr: !DIExpression())
!1876 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !1873, file: !139, line: 85, type: !140, isLocal: false, isDefinition: true)
!1877 = !DIGlobalVariableExpression(var: !1878, expr: !DIExpression())
!1878 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !1873, file: !139, line: 101, type: !146, isLocal: false, isDefinition: true)
!1879 = !DIGlobalVariableExpression(var: !1880, expr: !DIExpression())
!1880 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !1873, file: !139, line: 1052, type: !1866, isLocal: false, isDefinition: true)
!1881 = !DIGlobalVariableExpression(var: !1882, expr: !DIExpression())
!1882 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !1873, file: !139, line: 116, type: !1866, isLocal: true, isDefinition: true)
!1883 = !DIGlobalVariableExpression(var: !1884, expr: !DIExpression())
!1884 = distinct !DIGlobalVariable(name: "slot0", scope: !1873, file: !139, line: 842, type: !162, isLocal: true, isDefinition: true)
!1885 = !DIGlobalVariableExpression(var: !1886, expr: !DIExpression())
!1886 = distinct !DIGlobalVariable(name: "slotvec", scope: !1873, file: !139, line: 845, type: !1887, isLocal: true, isDefinition: true)
!1887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1888, size: 64)
!1888 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !139, line: 834, size: 128, elements: !1889)
!1889 = !{!1890, !1891}
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1888, file: !139, line: 836, baseType: !134, size: 64)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1888, file: !139, line: 837, baseType: !6, size: 64, offset: 64)
!1892 = !DIGlobalVariableExpression(var: !1893, expr: !DIExpression())
!1893 = distinct !DIGlobalVariable(name: "nslots", scope: !1873, file: !139, line: 843, type: !72, isLocal: true, isDefinition: true)
!1894 = !DIGlobalVariableExpression(var: !1895, expr: !DIExpression())
!1895 = distinct !DIGlobalVariable(name: "slotvec0", scope: !1873, file: !139, line: 844, type: !1888, isLocal: true, isDefinition: true)
!1896 = !DILocalVariable(name: "arg", arg: 2, scope: !1861, file: !139, line: 877, type: !69)
!1897 = !DILocalVariable(name: "argsize", arg: 3, scope: !1861, file: !139, line: 877, type: !134)
!1898 = !DILocalVariable(name: "options", arg: 4, scope: !1861, file: !139, line: 878, type: !1864)
!1899 = !DILocalVariable(name: "e", scope: !1861, file: !139, line: 880, type: !72)
!1900 = !DILocalVariable(name: "sv", scope: !1861, file: !139, line: 882, type: !1887)
!1901 = distinct !DISubprogram(name: "quotearg_buffer_restyled", scope: !139, file: !139, line: 256, type: !1902, scopeLine: 262, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !115, retainedNodes: !4)
!1902 = !DISubroutineType(types: !1903)
!1903 = !{!134, !6, !134, !69, !134, !118, !72, !1904, !69, !69}
!1904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1905, size: 64)
!1905 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !16)
!1906 = !DILocalVariable(name: "buffer", arg: 1, scope: !1901, file: !139, line: 256, type: !6)
!1907 = !DILocation(line: 256, column: 33, scope: !1901)
!1908 = !DILocalVariable(name: "buffersize", arg: 2, scope: !1901, file: !139, line: 256, type: !134)
!1909 = !DILocation(line: 256, column: 48, scope: !1901)
!1910 = !DILocalVariable(name: "arg", arg: 3, scope: !1901, file: !139, line: 257, type: !69)
!1911 = !DILocation(line: 257, column: 39, scope: !1901)
!1912 = !DILocalVariable(name: "argsize", arg: 4, scope: !1901, file: !139, line: 257, type: !134)
!1913 = !DILocation(line: 257, column: 51, scope: !1901)
!1914 = !DILocalVariable(name: "quoting_style", arg: 5, scope: !1901, file: !139, line: 258, type: !118)
!1915 = !DILocation(line: 258, column: 46, scope: !1901)
!1916 = !DILocalVariable(name: "flags", arg: 6, scope: !1901, file: !139, line: 258, type: !72)
!1917 = !DILocation(line: 258, column: 65, scope: !1901)
!1918 = !DILocalVariable(name: "quote_these_too", arg: 7, scope: !1901, file: !139, line: 259, type: !1904)
!1919 = !DILocation(line: 259, column: 47, scope: !1901)
!1920 = !DILocalVariable(name: "left_quote", arg: 8, scope: !1901, file: !139, line: 260, type: !69)
!1921 = !DILocation(line: 260, column: 39, scope: !1901)
!1922 = !DILocalVariable(name: "right_quote", arg: 9, scope: !1901, file: !139, line: 261, type: !69)
!1923 = !DILocation(line: 261, column: 39, scope: !1901)
!1924 = !DILocalVariable(name: "i", scope: !1901, file: !139, line: 263, type: !134)
!1925 = !DILocation(line: 263, column: 10, scope: !1901)
!1926 = !DILocalVariable(name: "len", scope: !1901, file: !139, line: 264, type: !134)
!1927 = !DILocation(line: 264, column: 10, scope: !1901)
!1928 = !DILocalVariable(name: "orig_buffersize", scope: !1901, file: !139, line: 265, type: !134)
!1929 = !DILocation(line: 265, column: 10, scope: !1901)
!1930 = !DILocalVariable(name: "quote_string", scope: !1901, file: !139, line: 266, type: !69)
!1931 = !DILocation(line: 266, column: 15, scope: !1901)
!1932 = !DILocalVariable(name: "quote_string_len", scope: !1901, file: !139, line: 267, type: !134)
!1933 = !DILocation(line: 267, column: 10, scope: !1901)
!1934 = !DILocalVariable(name: "backslash_escapes", scope: !1901, file: !139, line: 268, type: !27)
!1935 = !DILocation(line: 268, column: 8, scope: !1901)
!1936 = !DILocalVariable(name: "unibyte_locale", scope: !1901, file: !139, line: 269, type: !27)
!1937 = !DILocation(line: 269, column: 8, scope: !1901)
!1938 = !DILocation(line: 269, column: 25, scope: !1901)
!1939 = !DILocation(line: 269, column: 36, scope: !1901)
!1940 = !DILocalVariable(name: "elide_outer_quotes", scope: !1901, file: !139, line: 270, type: !27)
!1941 = !DILocation(line: 270, column: 8, scope: !1901)
!1942 = !DILocation(line: 270, column: 30, scope: !1901)
!1943 = !DILocation(line: 270, column: 36, scope: !1901)
!1944 = !DILocation(line: 270, column: 61, scope: !1901)
!1945 = !DILocalVariable(name: "pending_shell_escape_end", scope: !1901, file: !139, line: 271, type: !27)
!1946 = !DILocation(line: 271, column: 8, scope: !1901)
!1947 = !DILocalVariable(name: "encountered_single_quote", scope: !1901, file: !139, line: 272, type: !27)
!1948 = !DILocation(line: 272, column: 8, scope: !1901)
!1949 = !DILocalVariable(name: "all_c_and_shell_quote_compat", scope: !1901, file: !139, line: 273, type: !27)
!1950 = !DILocation(line: 273, column: 8, scope: !1901)
!1951 = !DILocation(line: 273, column: 3, scope: !1901)
!1952 = !DILabel(scope: !1901, name: "process_input", file: !139, line: 314)
!1953 = !DILocation(line: 314, column: 2, scope: !1901)
!1954 = !DILocation(line: 316, column: 11, scope: !1901)
!1955 = !DILocation(line: 316, column: 3, scope: !1901)
!1956 = !DILocation(line: 319, column: 21, scope: !1957)
!1957 = distinct !DILexicalBlock(scope: !1901, file: !139, line: 317, column: 5)
!1958 = !DILocation(line: 320, column: 26, scope: !1957)
!1959 = !DILocation(line: 321, column: 7, scope: !1957)
!1960 = !DILocation(line: 323, column: 12, scope: !1961)
!1961 = distinct !DILexicalBlock(scope: !1957, file: !139, line: 323, column: 11)
!1962 = !DILocation(line: 323, column: 11, scope: !1957)
!1963 = !DILocation(line: 324, column: 9, scope: !1961)
!1964 = !DILocation(line: 324, column: 9, scope: !1965)
!1965 = distinct !DILexicalBlock(scope: !1966, file: !139, line: 324, column: 9)
!1966 = distinct !DILexicalBlock(scope: !1961, file: !139, line: 324, column: 9)
!1967 = !DILocation(line: 324, column: 9, scope: !1966)
!1968 = !DILocation(line: 325, column: 25, scope: !1957)
!1969 = !DILocation(line: 326, column: 20, scope: !1957)
!1970 = !DILocation(line: 327, column: 24, scope: !1957)
!1971 = !DILocation(line: 328, column: 7, scope: !1957)
!1972 = !DILocation(line: 331, column: 25, scope: !1957)
!1973 = !DILocation(line: 332, column: 26, scope: !1957)
!1974 = !DILocation(line: 333, column: 7, scope: !1957)
!1975 = !DILocation(line: 339, column: 13, scope: !1976)
!1976 = distinct !DILexicalBlock(scope: !1977, file: !139, line: 339, column: 13)
!1977 = distinct !DILexicalBlock(scope: !1957, file: !139, line: 338, column: 7)
!1978 = !DILocation(line: 339, column: 27, scope: !1976)
!1979 = !DILocation(line: 339, column: 13, scope: !1977)
!1980 = !DILocation(line: 362, column: 50, scope: !1981)
!1981 = distinct !DILexicalBlock(scope: !1976, file: !139, line: 340, column: 11)
!1982 = !DILocation(line: 362, column: 26, scope: !1981)
!1983 = !DILocation(line: 362, column: 24, scope: !1981)
!1984 = !DILocation(line: 363, column: 51, scope: !1981)
!1985 = !DILocation(line: 363, column: 27, scope: !1981)
!1986 = !DILocation(line: 363, column: 25, scope: !1981)
!1987 = !DILocation(line: 364, column: 11, scope: !1981)
!1988 = !DILocation(line: 365, column: 14, scope: !1989)
!1989 = distinct !DILexicalBlock(scope: !1977, file: !139, line: 365, column: 13)
!1990 = !DILocation(line: 365, column: 13, scope: !1977)
!1991 = !DILocation(line: 366, column: 31, scope: !1992)
!1992 = distinct !DILexicalBlock(scope: !1989, file: !139, line: 366, column: 11)
!1993 = !DILocation(line: 366, column: 29, scope: !1992)
!1994 = !DILocation(line: 366, column: 16, scope: !1992)
!1995 = !DILocation(line: 366, column: 44, scope: !1996)
!1996 = distinct !DILexicalBlock(scope: !1992, file: !139, line: 366, column: 11)
!1997 = !DILocation(line: 366, column: 43, scope: !1996)
!1998 = !DILocation(line: 366, column: 11, scope: !1992)
!1999 = !DILocation(line: 367, column: 13, scope: !1996)
!2000 = !DILocation(line: 367, column: 13, scope: !2001)
!2001 = distinct !DILexicalBlock(scope: !2002, file: !139, line: 367, column: 13)
!2002 = distinct !DILexicalBlock(scope: !1996, file: !139, line: 367, column: 13)
!2003 = !DILocation(line: 367, column: 13, scope: !2002)
!2004 = !DILocation(line: 366, column: 70, scope: !1996)
!2005 = !DILocation(line: 366, column: 11, scope: !1996)
!2006 = distinct !{!2006, !1998, !2007}
!2007 = !DILocation(line: 367, column: 13, scope: !1992)
!2008 = !DILocation(line: 368, column: 27, scope: !1977)
!2009 = !DILocation(line: 369, column: 24, scope: !1977)
!2010 = !DILocation(line: 369, column: 22, scope: !1977)
!2011 = !DILocation(line: 370, column: 36, scope: !1977)
!2012 = !DILocation(line: 370, column: 28, scope: !1977)
!2013 = !DILocation(line: 370, column: 26, scope: !1977)
!2014 = !DILocation(line: 372, column: 7, scope: !1957)
!2015 = !DILocation(line: 375, column: 25, scope: !1957)
!2016 = !DILocation(line: 376, column: 7, scope: !1957)
!2017 = !DILocation(line: 378, column: 26, scope: !1957)
!2018 = !DILocation(line: 379, column: 7, scope: !1957)
!2019 = !DILocation(line: 381, column: 12, scope: !2020)
!2020 = distinct !DILexicalBlock(scope: !1957, file: !139, line: 381, column: 11)
!2021 = !DILocation(line: 381, column: 11, scope: !1957)
!2022 = !DILocation(line: 382, column: 27, scope: !2020)
!2023 = !DILocation(line: 382, column: 9, scope: !2020)
!2024 = !DILocation(line: 383, column: 7, scope: !1957)
!2025 = !DILocation(line: 385, column: 21, scope: !1957)
!2026 = !DILocation(line: 386, column: 12, scope: !2027)
!2027 = distinct !DILexicalBlock(scope: !1957, file: !139, line: 386, column: 11)
!2028 = !DILocation(line: 386, column: 11, scope: !1957)
!2029 = !DILocation(line: 387, column: 9, scope: !2027)
!2030 = !DILocation(line: 387, column: 9, scope: !2031)
!2031 = distinct !DILexicalBlock(scope: !2032, file: !139, line: 387, column: 9)
!2032 = distinct !DILexicalBlock(scope: !2027, file: !139, line: 387, column: 9)
!2033 = !DILocation(line: 387, column: 9, scope: !2032)
!2034 = !DILocation(line: 388, column: 20, scope: !1957)
!2035 = !DILocation(line: 389, column: 24, scope: !1957)
!2036 = !DILocation(line: 390, column: 7, scope: !1957)
!2037 = !DILocation(line: 393, column: 26, scope: !1957)
!2038 = !DILocation(line: 394, column: 7, scope: !1957)
!2039 = !DILocation(line: 397, column: 7, scope: !1957)
!2040 = !DILocation(line: 400, column: 10, scope: !2041)
!2041 = distinct !DILexicalBlock(scope: !1901, file: !139, line: 400, column: 3)
!2042 = !DILocation(line: 400, column: 8, scope: !2041)
!2043 = !DILocation(line: 400, column: 19, scope: !2044)
!2044 = distinct !DILexicalBlock(scope: !2041, file: !139, line: 400, column: 3)
!2045 = !DILocation(line: 400, column: 27, scope: !2044)
!2046 = !DILocation(line: 400, column: 41, scope: !2044)
!2047 = !DILocation(line: 400, column: 45, scope: !2044)
!2048 = !DILocation(line: 400, column: 48, scope: !2044)
!2049 = !DILocation(line: 400, column: 58, scope: !2044)
!2050 = !DILocation(line: 400, column: 63, scope: !2044)
!2051 = !DILocation(line: 400, column: 60, scope: !2044)
!2052 = !DILocation(line: 400, column: 16, scope: !2044)
!2053 = !DILocation(line: 400, column: 3, scope: !2041)
!2054 = !DILocalVariable(name: "c", scope: !2055, file: !139, line: 402, type: !240)
!2055 = distinct !DILexicalBlock(scope: !2044, file: !139, line: 401, column: 5)
!2056 = !DILocation(line: 402, column: 21, scope: !2055)
!2057 = !DILocalVariable(name: "esc", scope: !2055, file: !139, line: 403, type: !240)
!2058 = !DILocation(line: 403, column: 21, scope: !2055)
!2059 = !DILocalVariable(name: "is_right_quote", scope: !2055, file: !139, line: 404, type: !27)
!2060 = !DILocation(line: 404, column: 12, scope: !2055)
!2061 = !DILocalVariable(name: "escaping", scope: !2055, file: !139, line: 405, type: !27)
!2062 = !DILocation(line: 405, column: 12, scope: !2055)
!2063 = !DILocalVariable(name: "c_and_shell_quote_compat", scope: !2055, file: !139, line: 406, type: !27)
!2064 = !DILocation(line: 406, column: 12, scope: !2055)
!2065 = !DILocation(line: 408, column: 11, scope: !2066)
!2066 = distinct !DILexicalBlock(scope: !2055, file: !139, line: 408, column: 11)
!2067 = !DILocation(line: 409, column: 11, scope: !2066)
!2068 = !DILocation(line: 409, column: 14, scope: !2066)
!2069 = !DILocation(line: 409, column: 28, scope: !2066)
!2070 = !DILocation(line: 410, column: 11, scope: !2066)
!2071 = !DILocation(line: 410, column: 14, scope: !2066)
!2072 = !DILocation(line: 411, column: 11, scope: !2066)
!2073 = !DILocation(line: 411, column: 15, scope: !2066)
!2074 = !DILocation(line: 411, column: 19, scope: !2066)
!2075 = !DILocation(line: 411, column: 17, scope: !2066)
!2076 = !DILocation(line: 412, column: 19, scope: !2066)
!2077 = !DILocation(line: 412, column: 27, scope: !2066)
!2078 = !DILocation(line: 412, column: 39, scope: !2066)
!2079 = !DILocation(line: 412, column: 46, scope: !2066)
!2080 = !DILocation(line: 412, column: 44, scope: !2066)
!2081 = !DILocation(line: 416, column: 40, scope: !2066)
!2082 = !DILocation(line: 416, column: 32, scope: !2066)
!2083 = !DILocation(line: 416, column: 30, scope: !2066)
!2084 = !DILocation(line: 416, column: 48, scope: !2066)
!2085 = !DILocation(line: 412, column: 15, scope: !2066)
!2086 = !DILocation(line: 417, column: 11, scope: !2066)
!2087 = !DILocation(line: 417, column: 22, scope: !2066)
!2088 = !DILocation(line: 417, column: 28, scope: !2066)
!2089 = !DILocation(line: 417, column: 26, scope: !2066)
!2090 = !DILocation(line: 417, column: 31, scope: !2066)
!2091 = !DILocation(line: 417, column: 45, scope: !2066)
!2092 = !DILocation(line: 417, column: 14, scope: !2066)
!2093 = !DILocation(line: 417, column: 63, scope: !2066)
!2094 = !DILocation(line: 408, column: 11, scope: !2055)
!2095 = !DILocation(line: 419, column: 15, scope: !2096)
!2096 = distinct !DILexicalBlock(scope: !2097, file: !139, line: 419, column: 15)
!2097 = distinct !DILexicalBlock(scope: !2066, file: !139, line: 418, column: 9)
!2098 = !DILocation(line: 419, column: 15, scope: !2097)
!2099 = !DILocation(line: 420, column: 13, scope: !2096)
!2100 = !DILocation(line: 421, column: 26, scope: !2097)
!2101 = !DILocation(line: 422, column: 9, scope: !2097)
!2102 = !DILocation(line: 424, column: 11, scope: !2055)
!2103 = !DILocation(line: 424, column: 15, scope: !2055)
!2104 = !DILocation(line: 424, column: 9, scope: !2055)
!2105 = !DILocation(line: 425, column: 15, scope: !2055)
!2106 = !DILocation(line: 425, column: 7, scope: !2055)
!2107 = !DILocation(line: 428, column: 15, scope: !2108)
!2108 = distinct !DILexicalBlock(scope: !2109, file: !139, line: 428, column: 15)
!2109 = distinct !DILexicalBlock(scope: !2055, file: !139, line: 426, column: 9)
!2110 = !DILocation(line: 428, column: 15, scope: !2109)
!2111 = !DILocation(line: 430, column: 15, scope: !2112)
!2112 = distinct !DILexicalBlock(scope: !2108, file: !139, line: 429, column: 13)
!2113 = !DILocation(line: 430, column: 15, scope: !2114)
!2114 = distinct !DILexicalBlock(scope: !2115, file: !139, line: 430, column: 15)
!2115 = distinct !DILexicalBlock(scope: !2112, file: !139, line: 430, column: 15)
!2116 = !DILocation(line: 430, column: 15, scope: !2115)
!2117 = !DILocation(line: 430, column: 15, scope: !2118)
!2118 = distinct !DILexicalBlock(scope: !2115, file: !139, line: 430, column: 15)
!2119 = !DILocation(line: 430, column: 15, scope: !2120)
!2120 = distinct !DILexicalBlock(scope: !2118, file: !139, line: 430, column: 15)
!2121 = !DILocation(line: 430, column: 15, scope: !2122)
!2122 = distinct !DILexicalBlock(scope: !2123, file: !139, line: 430, column: 15)
!2123 = distinct !DILexicalBlock(scope: !2120, file: !139, line: 430, column: 15)
!2124 = !DILocation(line: 430, column: 15, scope: !2123)
!2125 = !DILocation(line: 430, column: 15, scope: !2126)
!2126 = distinct !DILexicalBlock(scope: !2127, file: !139, line: 430, column: 15)
!2127 = distinct !DILexicalBlock(scope: !2120, file: !139, line: 430, column: 15)
!2128 = !DILocation(line: 430, column: 15, scope: !2127)
!2129 = !DILocation(line: 430, column: 15, scope: !2130)
!2130 = distinct !DILexicalBlock(scope: !2131, file: !139, line: 430, column: 15)
!2131 = distinct !DILexicalBlock(scope: !2120, file: !139, line: 430, column: 15)
!2132 = !DILocation(line: 430, column: 15, scope: !2131)
!2133 = !DILocation(line: 430, column: 15, scope: !2134)
!2134 = distinct !DILexicalBlock(scope: !2135, file: !139, line: 430, column: 15)
!2135 = distinct !DILexicalBlock(scope: !2115, file: !139, line: 430, column: 15)
!2136 = !DILocation(line: 430, column: 15, scope: !2135)
!2137 = !DILocation(line: 437, column: 19, scope: !2138)
!2138 = distinct !DILexicalBlock(scope: !2112, file: !139, line: 437, column: 19)
!2139 = !DILocation(line: 437, column: 33, scope: !2138)
!2140 = !DILocation(line: 438, column: 19, scope: !2138)
!2141 = !DILocation(line: 438, column: 22, scope: !2138)
!2142 = !DILocation(line: 438, column: 24, scope: !2138)
!2143 = !DILocation(line: 438, column: 30, scope: !2138)
!2144 = !DILocation(line: 438, column: 28, scope: !2138)
!2145 = !DILocation(line: 438, column: 38, scope: !2138)
!2146 = !DILocation(line: 438, column: 48, scope: !2138)
!2147 = !DILocation(line: 438, column: 52, scope: !2138)
!2148 = !DILocation(line: 438, column: 54, scope: !2138)
!2149 = !DILocation(line: 438, column: 45, scope: !2138)
!2150 = !DILocation(line: 438, column: 59, scope: !2138)
!2151 = !DILocation(line: 438, column: 62, scope: !2138)
!2152 = !DILocation(line: 438, column: 66, scope: !2138)
!2153 = !DILocation(line: 438, column: 68, scope: !2138)
!2154 = !DILocation(line: 438, column: 73, scope: !2138)
!2155 = !DILocation(line: 437, column: 19, scope: !2112)
!2156 = !DILocation(line: 440, column: 19, scope: !2157)
!2157 = distinct !DILexicalBlock(scope: !2138, file: !139, line: 439, column: 17)
!2158 = !DILocation(line: 440, column: 19, scope: !2159)
!2159 = distinct !DILexicalBlock(scope: !2160, file: !139, line: 440, column: 19)
!2160 = distinct !DILexicalBlock(scope: !2157, file: !139, line: 440, column: 19)
!2161 = !DILocation(line: 440, column: 19, scope: !2160)
!2162 = !DILocation(line: 441, column: 19, scope: !2157)
!2163 = !DILocation(line: 441, column: 19, scope: !2164)
!2164 = distinct !DILexicalBlock(scope: !2165, file: !139, line: 441, column: 19)
!2165 = distinct !DILexicalBlock(scope: !2157, file: !139, line: 441, column: 19)
!2166 = !DILocation(line: 441, column: 19, scope: !2165)
!2167 = !DILocation(line: 442, column: 17, scope: !2157)
!2168 = !DILocation(line: 443, column: 17, scope: !2112)
!2169 = !DILocation(line: 448, column: 13, scope: !2112)
!2170 = !DILocation(line: 449, column: 20, scope: !2171)
!2171 = distinct !DILexicalBlock(scope: !2108, file: !139, line: 449, column: 20)
!2172 = !DILocation(line: 449, column: 26, scope: !2171)
!2173 = !DILocation(line: 449, column: 20, scope: !2108)
!2174 = !DILocation(line: 450, column: 13, scope: !2171)
!2175 = !DILocation(line: 451, column: 11, scope: !2109)
!2176 = !DILocation(line: 454, column: 19, scope: !2109)
!2177 = !DILocation(line: 454, column: 11, scope: !2109)
!2178 = !DILocation(line: 457, column: 19, scope: !2179)
!2179 = distinct !DILexicalBlock(scope: !2180, file: !139, line: 457, column: 19)
!2180 = distinct !DILexicalBlock(scope: !2109, file: !139, line: 455, column: 13)
!2181 = !DILocation(line: 457, column: 19, scope: !2180)
!2182 = !DILocation(line: 458, column: 17, scope: !2179)
!2183 = !DILocation(line: 459, column: 15, scope: !2180)
!2184 = !DILocation(line: 462, column: 20, scope: !2185)
!2185 = distinct !DILexicalBlock(scope: !2180, file: !139, line: 462, column: 19)
!2186 = !DILocation(line: 462, column: 26, scope: !2185)
!2187 = !DILocation(line: 463, column: 19, scope: !2185)
!2188 = !DILocation(line: 463, column: 22, scope: !2185)
!2189 = !DILocation(line: 463, column: 24, scope: !2185)
!2190 = !DILocation(line: 463, column: 30, scope: !2185)
!2191 = !DILocation(line: 463, column: 28, scope: !2185)
!2192 = !DILocation(line: 463, column: 38, scope: !2185)
!2193 = !DILocation(line: 463, column: 41, scope: !2185)
!2194 = !DILocation(line: 463, column: 45, scope: !2185)
!2195 = !DILocation(line: 463, column: 47, scope: !2185)
!2196 = !DILocation(line: 463, column: 52, scope: !2185)
!2197 = !DILocation(line: 462, column: 19, scope: !2180)
!2198 = !DILocation(line: 464, column: 25, scope: !2185)
!2199 = !DILocation(line: 464, column: 29, scope: !2185)
!2200 = !DILocation(line: 464, column: 31, scope: !2185)
!2201 = !DILocation(line: 464, column: 17, scope: !2185)
!2202 = !DILocation(line: 471, column: 25, scope: !2203)
!2203 = distinct !DILexicalBlock(scope: !2204, file: !139, line: 471, column: 25)
!2204 = distinct !DILexicalBlock(scope: !2185, file: !139, line: 465, column: 19)
!2205 = !DILocation(line: 471, column: 25, scope: !2204)
!2206 = !DILocation(line: 472, column: 23, scope: !2203)
!2207 = !DILocation(line: 473, column: 25, scope: !2204)
!2208 = !DILocation(line: 473, column: 29, scope: !2204)
!2209 = !DILocation(line: 473, column: 31, scope: !2204)
!2210 = !DILocation(line: 473, column: 23, scope: !2204)
!2211 = !DILocation(line: 474, column: 23, scope: !2204)
!2212 = !DILocation(line: 475, column: 21, scope: !2204)
!2213 = !DILocation(line: 475, column: 21, scope: !2214)
!2214 = distinct !DILexicalBlock(scope: !2215, file: !139, line: 475, column: 21)
!2215 = distinct !DILexicalBlock(scope: !2204, file: !139, line: 475, column: 21)
!2216 = !DILocation(line: 475, column: 21, scope: !2215)
!2217 = !DILocation(line: 476, column: 21, scope: !2204)
!2218 = !DILocation(line: 476, column: 21, scope: !2219)
!2219 = distinct !DILexicalBlock(scope: !2220, file: !139, line: 476, column: 21)
!2220 = distinct !DILexicalBlock(scope: !2204, file: !139, line: 476, column: 21)
!2221 = !DILocation(line: 476, column: 21, scope: !2220)
!2222 = !DILocation(line: 477, column: 21, scope: !2204)
!2223 = !DILocation(line: 477, column: 21, scope: !2224)
!2224 = distinct !DILexicalBlock(scope: !2225, file: !139, line: 477, column: 21)
!2225 = distinct !DILexicalBlock(scope: !2204, file: !139, line: 477, column: 21)
!2226 = !DILocation(line: 477, column: 21, scope: !2225)
!2227 = !DILocation(line: 478, column: 21, scope: !2204)
!2228 = !DILocation(line: 478, column: 21, scope: !2229)
!2229 = distinct !DILexicalBlock(scope: !2230, file: !139, line: 478, column: 21)
!2230 = distinct !DILexicalBlock(scope: !2204, file: !139, line: 478, column: 21)
!2231 = !DILocation(line: 478, column: 21, scope: !2230)
!2232 = !DILocation(line: 479, column: 21, scope: !2204)
!2233 = !DILocation(line: 482, column: 21, scope: !2204)
!2234 = !DILocation(line: 483, column: 19, scope: !2204)
!2235 = !DILocation(line: 484, column: 15, scope: !2180)
!2236 = !DILocation(line: 487, column: 15, scope: !2180)
!2237 = !DILocation(line: 489, column: 11, scope: !2109)
!2238 = !DILocation(line: 491, column: 24, scope: !2109)
!2239 = !DILocation(line: 491, column: 31, scope: !2109)
!2240 = !DILocation(line: 492, column: 24, scope: !2109)
!2241 = !DILocation(line: 492, column: 31, scope: !2109)
!2242 = !DILocation(line: 493, column: 24, scope: !2109)
!2243 = !DILocation(line: 493, column: 31, scope: !2109)
!2244 = !DILocation(line: 494, column: 24, scope: !2109)
!2245 = !DILocation(line: 494, column: 31, scope: !2109)
!2246 = !DILocation(line: 495, column: 24, scope: !2109)
!2247 = !DILocation(line: 495, column: 31, scope: !2109)
!2248 = !DILocation(line: 496, column: 24, scope: !2109)
!2249 = !DILocation(line: 496, column: 31, scope: !2109)
!2250 = !DILocation(line: 497, column: 24, scope: !2109)
!2251 = !DILocation(line: 497, column: 31, scope: !2109)
!2252 = !DILocation(line: 498, column: 26, scope: !2109)
!2253 = !DILocation(line: 498, column: 24, scope: !2109)
!2254 = !DILocation(line: 500, column: 15, scope: !2255)
!2255 = distinct !DILexicalBlock(scope: !2109, file: !139, line: 500, column: 15)
!2256 = !DILocation(line: 500, column: 29, scope: !2255)
!2257 = !DILocation(line: 500, column: 15, scope: !2109)
!2258 = !DILocation(line: 502, column: 19, scope: !2259)
!2259 = distinct !DILexicalBlock(scope: !2260, file: !139, line: 502, column: 19)
!2260 = distinct !DILexicalBlock(scope: !2255, file: !139, line: 501, column: 13)
!2261 = !DILocation(line: 502, column: 19, scope: !2260)
!2262 = !DILocation(line: 503, column: 17, scope: !2259)
!2263 = !DILocation(line: 504, column: 15, scope: !2260)
!2264 = !DILocation(line: 509, column: 15, scope: !2265)
!2265 = distinct !DILexicalBlock(scope: !2109, file: !139, line: 509, column: 15)
!2266 = !DILocation(line: 509, column: 33, scope: !2265)
!2267 = !DILocation(line: 509, column: 36, scope: !2265)
!2268 = !DILocation(line: 509, column: 55, scope: !2265)
!2269 = !DILocation(line: 509, column: 58, scope: !2265)
!2270 = !DILocation(line: 509, column: 15, scope: !2109)
!2271 = !DILocation(line: 510, column: 13, scope: !2265)
!2272 = !DILabel(scope: !2109, name: "c_and_shell_escape", file: !139, line: 512)
!2273 = !DILocation(line: 512, column: 9, scope: !2109)
!2274 = !DILocation(line: 513, column: 15, scope: !2275)
!2275 = distinct !DILexicalBlock(scope: !2109, file: !139, line: 513, column: 15)
!2276 = !DILocation(line: 513, column: 29, scope: !2275)
!2277 = !DILocation(line: 514, column: 15, scope: !2275)
!2278 = !DILocation(line: 514, column: 18, scope: !2275)
!2279 = !DILocation(line: 513, column: 15, scope: !2109)
!2280 = !DILocation(line: 515, column: 13, scope: !2275)
!2281 = !DILabel(scope: !2109, name: "c_escape", file: !139, line: 517)
!2282 = !DILocation(line: 517, column: 9, scope: !2109)
!2283 = !DILocation(line: 518, column: 15, scope: !2284)
!2284 = distinct !DILexicalBlock(scope: !2109, file: !139, line: 518, column: 15)
!2285 = !DILocation(line: 518, column: 15, scope: !2109)
!2286 = !DILocation(line: 520, column: 19, scope: !2287)
!2287 = distinct !DILexicalBlock(scope: !2284, file: !139, line: 519, column: 13)
!2288 = !DILocation(line: 520, column: 17, scope: !2287)
!2289 = !DILocation(line: 521, column: 15, scope: !2287)
!2290 = !DILocation(line: 523, column: 11, scope: !2109)
!2291 = !DILocation(line: 526, column: 18, scope: !2292)
!2292 = distinct !DILexicalBlock(scope: !2109, file: !139, line: 526, column: 15)
!2293 = !DILocation(line: 526, column: 26, scope: !2292)
!2294 = !DILocation(line: 526, column: 15, scope: !2109)
!2295 = !DILocation(line: 526, column: 40, scope: !2292)
!2296 = !DILocation(line: 526, column: 47, scope: !2292)
!2297 = !DILocation(line: 526, column: 57, scope: !2292)
!2298 = !DILocation(line: 526, column: 65, scope: !2292)
!2299 = !DILocation(line: 527, column: 13, scope: !2292)
!2300 = !DILocation(line: 528, column: 11, scope: !2109)
!2301 = !DILocation(line: 530, column: 15, scope: !2302)
!2302 = distinct !DILexicalBlock(scope: !2109, file: !139, line: 530, column: 15)
!2303 = !DILocation(line: 530, column: 17, scope: !2302)
!2304 = !DILocation(line: 530, column: 15, scope: !2109)
!2305 = !DILocation(line: 531, column: 13, scope: !2302)
!2306 = !DILocation(line: 532, column: 11, scope: !2109)
!2307 = !DILocation(line: 534, column: 36, scope: !2109)
!2308 = !DILocation(line: 535, column: 11, scope: !2109)
!2309 = !DILocation(line: 548, column: 15, scope: !2310)
!2310 = distinct !DILexicalBlock(scope: !2109, file: !139, line: 548, column: 15)
!2311 = !DILocation(line: 548, column: 29, scope: !2310)
!2312 = !DILocation(line: 549, column: 15, scope: !2310)
!2313 = !DILocation(line: 549, column: 18, scope: !2310)
!2314 = !DILocation(line: 548, column: 15, scope: !2109)
!2315 = !DILocation(line: 550, column: 13, scope: !2310)
!2316 = !DILocation(line: 551, column: 11, scope: !2109)
!2317 = !DILocation(line: 554, column: 36, scope: !2109)
!2318 = !DILocation(line: 555, column: 36, scope: !2109)
!2319 = !DILocation(line: 556, column: 15, scope: !2320)
!2320 = distinct !DILexicalBlock(scope: !2109, file: !139, line: 556, column: 15)
!2321 = !DILocation(line: 556, column: 29, scope: !2320)
!2322 = !DILocation(line: 556, column: 15, scope: !2109)
!2323 = !DILocation(line: 558, column: 19, scope: !2324)
!2324 = distinct !DILexicalBlock(scope: !2325, file: !139, line: 558, column: 19)
!2325 = distinct !DILexicalBlock(scope: !2320, file: !139, line: 557, column: 13)
!2326 = !DILocation(line: 558, column: 19, scope: !2325)
!2327 = !DILocation(line: 559, column: 17, scope: !2324)
!2328 = !DILocation(line: 561, column: 19, scope: !2329)
!2329 = distinct !DILexicalBlock(scope: !2325, file: !139, line: 561, column: 19)
!2330 = !DILocation(line: 561, column: 30, scope: !2329)
!2331 = !DILocation(line: 561, column: 35, scope: !2329)
!2332 = !DILocation(line: 561, column: 19, scope: !2325)
!2333 = !DILocation(line: 566, column: 37, scope: !2334)
!2334 = distinct !DILexicalBlock(scope: !2329, file: !139, line: 562, column: 17)
!2335 = !DILocation(line: 566, column: 35, scope: !2334)
!2336 = !DILocation(line: 567, column: 30, scope: !2334)
!2337 = !DILocation(line: 568, column: 17, scope: !2334)
!2338 = !DILocation(line: 570, column: 15, scope: !2325)
!2339 = !DILocation(line: 570, column: 15, scope: !2340)
!2340 = distinct !DILexicalBlock(scope: !2341, file: !139, line: 570, column: 15)
!2341 = distinct !DILexicalBlock(scope: !2325, file: !139, line: 570, column: 15)
!2342 = !DILocation(line: 570, column: 15, scope: !2341)
!2343 = !DILocation(line: 571, column: 15, scope: !2325)
!2344 = !DILocation(line: 571, column: 15, scope: !2345)
!2345 = distinct !DILexicalBlock(scope: !2346, file: !139, line: 571, column: 15)
!2346 = distinct !DILexicalBlock(scope: !2325, file: !139, line: 571, column: 15)
!2347 = !DILocation(line: 571, column: 15, scope: !2346)
!2348 = !DILocation(line: 572, column: 15, scope: !2325)
!2349 = !DILocation(line: 572, column: 15, scope: !2350)
!2350 = distinct !DILexicalBlock(scope: !2351, file: !139, line: 572, column: 15)
!2351 = distinct !DILexicalBlock(scope: !2325, file: !139, line: 572, column: 15)
!2352 = !DILocation(line: 572, column: 15, scope: !2351)
!2353 = !DILocation(line: 573, column: 40, scope: !2325)
!2354 = !DILocation(line: 574, column: 13, scope: !2325)
!2355 = !DILocation(line: 575, column: 11, scope: !2109)
!2356 = !DILocation(line: 599, column: 36, scope: !2109)
!2357 = !DILocation(line: 600, column: 11, scope: !2109)
!2358 = !DILocalVariable(name: "m", scope: !2359, file: !139, line: 610, type: !134)
!2359 = distinct !DILexicalBlock(scope: !2109, file: !139, line: 608, column: 11)
!2360 = !DILocation(line: 610, column: 20, scope: !2359)
!2361 = !DILocalVariable(name: "printable", scope: !2359, file: !139, line: 612, type: !27)
!2362 = !DILocation(line: 612, column: 18, scope: !2359)
!2363 = !DILocation(line: 614, column: 17, scope: !2364)
!2364 = distinct !DILexicalBlock(scope: !2359, file: !139, line: 614, column: 17)
!2365 = !DILocation(line: 614, column: 17, scope: !2359)
!2366 = !DILocation(line: 616, column: 19, scope: !2367)
!2367 = distinct !DILexicalBlock(scope: !2364, file: !139, line: 615, column: 15)
!2368 = !DILocation(line: 617, column: 29, scope: !2367)
!2369 = !DILocation(line: 617, column: 41, scope: !2367)
!2370 = !DILocation(line: 617, column: 27, scope: !2367)
!2371 = !DILocation(line: 618, column: 15, scope: !2367)
!2372 = !DILocalVariable(name: "mbstate", scope: !2373, file: !139, line: 621, type: !2374)
!2373 = distinct !DILexicalBlock(scope: !2364, file: !139, line: 620, column: 15)
!2374 = !DIDerivedType(tag: DW_TAG_typedef, name: "mbstate_t", file: !2375, line: 6, baseType: !2376)
!2375 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/mbstate_t.h", directory: "")
!2376 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mbstate_t", file: !2377, line: 21, baseType: !2378)
!2377 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h", directory: "")
!2378 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2377, line: 13, size: 64, elements: !2379)
!2379 = !{!2380, !2381}
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !2378, file: !2377, line: 15, baseType: !72, size: 32)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !2378, file: !2377, line: 20, baseType: !2382, size: 32, offset: 32)
!2382 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2378, file: !2377, line: 16, size: 32, elements: !2383)
!2383 = !{!2384, !2385}
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !2382, file: !2377, line: 18, baseType: !16, size: 32)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !2382, file: !2377, line: 19, baseType: !2386, size: 32)
!2386 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 32, elements: !2387)
!2387 = !{!2388}
!2388 = !DISubrange(count: 4)
!2389 = !DILocation(line: 621, column: 27, scope: !2373)
!2390 = !DILocation(line: 622, column: 17, scope: !2373)
!2391 = !DILocation(line: 624, column: 19, scope: !2373)
!2392 = !DILocation(line: 625, column: 27, scope: !2373)
!2393 = !DILocation(line: 626, column: 21, scope: !2394)
!2394 = distinct !DILexicalBlock(scope: !2373, file: !139, line: 626, column: 21)
!2395 = !DILocation(line: 626, column: 29, scope: !2394)
!2396 = !DILocation(line: 626, column: 21, scope: !2373)
!2397 = !DILocation(line: 627, column: 37, scope: !2394)
!2398 = !DILocation(line: 627, column: 29, scope: !2394)
!2399 = !DILocation(line: 627, column: 27, scope: !2394)
!2400 = !DILocation(line: 627, column: 19, scope: !2394)
!2401 = !DILocation(line: 629, column: 17, scope: !2373)
!2402 = !DILocalVariable(name: "w", scope: !2403, file: !139, line: 631, type: !2404)
!2403 = distinct !DILexicalBlock(scope: !2373, file: !139, line: 630, column: 19)
!2404 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !135, line: 74, baseType: !72)
!2405 = !DILocation(line: 631, column: 29, scope: !2403)
!2406 = !DILocalVariable(name: "bytes", scope: !2403, file: !139, line: 632, type: !134)
!2407 = !DILocation(line: 632, column: 28, scope: !2403)
!2408 = !DILocation(line: 632, column: 50, scope: !2403)
!2409 = !DILocation(line: 632, column: 54, scope: !2403)
!2410 = !DILocation(line: 632, column: 58, scope: !2403)
!2411 = !DILocation(line: 632, column: 56, scope: !2403)
!2412 = !DILocation(line: 633, column: 45, scope: !2403)
!2413 = !DILocation(line: 633, column: 56, scope: !2403)
!2414 = !DILocation(line: 633, column: 60, scope: !2403)
!2415 = !DILocation(line: 633, column: 58, scope: !2403)
!2416 = !DILocation(line: 633, column: 53, scope: !2403)
!2417 = !DILocation(line: 632, column: 36, scope: !2403)
!2418 = !DILocation(line: 634, column: 25, scope: !2419)
!2419 = distinct !DILexicalBlock(scope: !2403, file: !139, line: 634, column: 25)
!2420 = !DILocation(line: 634, column: 31, scope: !2419)
!2421 = !DILocation(line: 634, column: 25, scope: !2403)
!2422 = !DILocation(line: 635, column: 23, scope: !2419)
!2423 = !DILocation(line: 636, column: 30, scope: !2424)
!2424 = distinct !DILexicalBlock(scope: !2419, file: !139, line: 636, column: 30)
!2425 = !DILocation(line: 636, column: 36, scope: !2424)
!2426 = !DILocation(line: 636, column: 30, scope: !2419)
!2427 = !DILocation(line: 638, column: 35, scope: !2428)
!2428 = distinct !DILexicalBlock(scope: !2424, file: !139, line: 637, column: 23)
!2429 = !DILocation(line: 639, column: 25, scope: !2428)
!2430 = !DILocation(line: 641, column: 30, scope: !2431)
!2431 = distinct !DILexicalBlock(scope: !2424, file: !139, line: 641, column: 30)
!2432 = !DILocation(line: 641, column: 36, scope: !2431)
!2433 = !DILocation(line: 641, column: 30, scope: !2424)
!2434 = !DILocation(line: 643, column: 35, scope: !2435)
!2435 = distinct !DILexicalBlock(scope: !2431, file: !139, line: 642, column: 23)
!2436 = !DILocation(line: 644, column: 25, scope: !2435)
!2437 = !DILocation(line: 644, column: 32, scope: !2435)
!2438 = !DILocation(line: 644, column: 36, scope: !2435)
!2439 = !DILocation(line: 644, column: 34, scope: !2435)
!2440 = !DILocation(line: 644, column: 40, scope: !2435)
!2441 = !DILocation(line: 644, column: 38, scope: !2435)
!2442 = !DILocation(line: 644, column: 48, scope: !2435)
!2443 = !DILocation(line: 644, column: 51, scope: !2435)
!2444 = !DILocation(line: 644, column: 55, scope: !2435)
!2445 = !DILocation(line: 644, column: 59, scope: !2435)
!2446 = !DILocation(line: 644, column: 57, scope: !2435)
!2447 = !DILocation(line: 0, scope: !2435)
!2448 = !DILocation(line: 645, column: 28, scope: !2435)
!2449 = distinct !{!2449, !2436, !2448}
!2450 = !DILocation(line: 646, column: 25, scope: !2435)
!2451 = !DILocation(line: 654, column: 44, scope: !2452)
!2452 = distinct !DILexicalBlock(scope: !2453, file: !139, line: 654, column: 29)
!2453 = distinct !DILexicalBlock(scope: !2431, file: !139, line: 649, column: 23)
!2454 = !DILocation(line: 655, column: 29, scope: !2452)
!2455 = !DILocation(line: 655, column: 32, scope: !2452)
!2456 = !DILocation(line: 655, column: 46, scope: !2452)
!2457 = !DILocation(line: 654, column: 29, scope: !2453)
!2458 = !DILocalVariable(name: "j", scope: !2459, file: !139, line: 657, type: !134)
!2459 = distinct !DILexicalBlock(scope: !2452, file: !139, line: 656, column: 27)
!2460 = !DILocation(line: 657, column: 36, scope: !2459)
!2461 = !DILocation(line: 658, column: 36, scope: !2462)
!2462 = distinct !DILexicalBlock(scope: !2459, file: !139, line: 658, column: 29)
!2463 = !DILocation(line: 658, column: 34, scope: !2462)
!2464 = !DILocation(line: 658, column: 41, scope: !2465)
!2465 = distinct !DILexicalBlock(scope: !2462, file: !139, line: 658, column: 29)
!2466 = !DILocation(line: 658, column: 45, scope: !2465)
!2467 = !DILocation(line: 658, column: 43, scope: !2465)
!2468 = !DILocation(line: 658, column: 29, scope: !2462)
!2469 = !DILocation(line: 659, column: 39, scope: !2465)
!2470 = !DILocation(line: 659, column: 43, scope: !2465)
!2471 = !DILocation(line: 659, column: 47, scope: !2465)
!2472 = !DILocation(line: 659, column: 45, scope: !2465)
!2473 = !DILocation(line: 659, column: 51, scope: !2465)
!2474 = !DILocation(line: 659, column: 49, scope: !2465)
!2475 = !DILocation(line: 659, column: 31, scope: !2465)
!2476 = !DILocation(line: 663, column: 35, scope: !2477)
!2477 = distinct !DILexicalBlock(scope: !2465, file: !139, line: 660, column: 33)
!2478 = !DILocation(line: 666, column: 35, scope: !2477)
!2479 = !DILocation(line: 667, column: 33, scope: !2477)
!2480 = !DILocation(line: 658, column: 53, scope: !2465)
!2481 = !DILocation(line: 658, column: 29, scope: !2465)
!2482 = distinct !{!2482, !2468, !2483}
!2483 = !DILocation(line: 667, column: 33, scope: !2462)
!2484 = !DILocation(line: 668, column: 27, scope: !2459)
!2485 = !DILocation(line: 670, column: 41, scope: !2486)
!2486 = distinct !DILexicalBlock(scope: !2453, file: !139, line: 670, column: 29)
!2487 = !DILocation(line: 670, column: 31, scope: !2486)
!2488 = !DILocation(line: 670, column: 29, scope: !2453)
!2489 = !DILocation(line: 671, column: 37, scope: !2486)
!2490 = !DILocation(line: 671, column: 27, scope: !2486)
!2491 = !DILocation(line: 672, column: 30, scope: !2453)
!2492 = !DILocation(line: 672, column: 27, scope: !2453)
!2493 = !DILocation(line: 674, column: 19, scope: !2403)
!2494 = !DILocation(line: 675, column: 26, scope: !2373)
!2495 = !DILocation(line: 675, column: 24, scope: !2373)
!2496 = distinct !{!2496, !2401, !2497}
!2497 = !DILocation(line: 675, column: 44, scope: !2373)
!2498 = !DILocation(line: 678, column: 40, scope: !2359)
!2499 = !DILocation(line: 678, column: 38, scope: !2359)
!2500 = !DILocation(line: 680, column: 21, scope: !2501)
!2501 = distinct !DILexicalBlock(scope: !2359, file: !139, line: 680, column: 17)
!2502 = !DILocation(line: 680, column: 19, scope: !2501)
!2503 = !DILocation(line: 680, column: 23, scope: !2501)
!2504 = !DILocation(line: 680, column: 27, scope: !2501)
!2505 = !DILocation(line: 680, column: 45, scope: !2501)
!2506 = !DILocation(line: 680, column: 50, scope: !2501)
!2507 = !DILocation(line: 680, column: 17, scope: !2359)
!2508 = !DILocalVariable(name: "ilim", scope: !2509, file: !139, line: 684, type: !134)
!2509 = distinct !DILexicalBlock(scope: !2501, file: !139, line: 681, column: 15)
!2510 = !DILocation(line: 684, column: 24, scope: !2509)
!2511 = !DILocation(line: 684, column: 31, scope: !2509)
!2512 = !DILocation(line: 684, column: 35, scope: !2509)
!2513 = !DILocation(line: 684, column: 33, scope: !2509)
!2514 = !DILocation(line: 686, column: 17, scope: !2509)
!2515 = !DILocation(line: 688, column: 25, scope: !2516)
!2516 = distinct !DILexicalBlock(scope: !2517, file: !139, line: 688, column: 25)
!2517 = distinct !DILexicalBlock(scope: !2518, file: !139, line: 687, column: 19)
!2518 = distinct !DILexicalBlock(scope: !2519, file: !139, line: 686, column: 17)
!2519 = distinct !DILexicalBlock(scope: !2509, file: !139, line: 686, column: 17)
!2520 = !DILocation(line: 688, column: 43, scope: !2516)
!2521 = !DILocation(line: 688, column: 48, scope: !2516)
!2522 = !DILocation(line: 688, column: 25, scope: !2517)
!2523 = !DILocation(line: 690, column: 25, scope: !2524)
!2524 = distinct !DILexicalBlock(scope: !2516, file: !139, line: 689, column: 23)
!2525 = !DILocation(line: 690, column: 25, scope: !2526)
!2526 = distinct !DILexicalBlock(scope: !2527, file: !139, line: 690, column: 25)
!2527 = distinct !DILexicalBlock(scope: !2524, file: !139, line: 690, column: 25)
!2528 = !DILocation(line: 690, column: 25, scope: !2527)
!2529 = !DILocation(line: 690, column: 25, scope: !2530)
!2530 = distinct !DILexicalBlock(scope: !2527, file: !139, line: 690, column: 25)
!2531 = !DILocation(line: 690, column: 25, scope: !2532)
!2532 = distinct !DILexicalBlock(scope: !2530, file: !139, line: 690, column: 25)
!2533 = !DILocation(line: 690, column: 25, scope: !2534)
!2534 = distinct !DILexicalBlock(scope: !2535, file: !139, line: 690, column: 25)
!2535 = distinct !DILexicalBlock(scope: !2532, file: !139, line: 690, column: 25)
!2536 = !DILocation(line: 690, column: 25, scope: !2535)
!2537 = !DILocation(line: 690, column: 25, scope: !2538)
!2538 = distinct !DILexicalBlock(scope: !2539, file: !139, line: 690, column: 25)
!2539 = distinct !DILexicalBlock(scope: !2532, file: !139, line: 690, column: 25)
!2540 = !DILocation(line: 690, column: 25, scope: !2539)
!2541 = !DILocation(line: 690, column: 25, scope: !2542)
!2542 = distinct !DILexicalBlock(scope: !2543, file: !139, line: 690, column: 25)
!2543 = distinct !DILexicalBlock(scope: !2532, file: !139, line: 690, column: 25)
!2544 = !DILocation(line: 690, column: 25, scope: !2543)
!2545 = !DILocation(line: 690, column: 25, scope: !2546)
!2546 = distinct !DILexicalBlock(scope: !2547, file: !139, line: 690, column: 25)
!2547 = distinct !DILexicalBlock(scope: !2527, file: !139, line: 690, column: 25)
!2548 = !DILocation(line: 690, column: 25, scope: !2547)
!2549 = !DILocation(line: 691, column: 25, scope: !2524)
!2550 = !DILocation(line: 691, column: 25, scope: !2551)
!2551 = distinct !DILexicalBlock(scope: !2552, file: !139, line: 691, column: 25)
!2552 = distinct !DILexicalBlock(scope: !2524, file: !139, line: 691, column: 25)
!2553 = !DILocation(line: 691, column: 25, scope: !2552)
!2554 = !DILocation(line: 692, column: 25, scope: !2524)
!2555 = !DILocation(line: 692, column: 25, scope: !2556)
!2556 = distinct !DILexicalBlock(scope: !2557, file: !139, line: 692, column: 25)
!2557 = distinct !DILexicalBlock(scope: !2524, file: !139, line: 692, column: 25)
!2558 = !DILocation(line: 692, column: 25, scope: !2557)
!2559 = !DILocation(line: 693, column: 36, scope: !2524)
!2560 = !DILocation(line: 693, column: 38, scope: !2524)
!2561 = !DILocation(line: 693, column: 33, scope: !2524)
!2562 = !DILocation(line: 693, column: 29, scope: !2524)
!2563 = !DILocation(line: 693, column: 27, scope: !2524)
!2564 = !DILocation(line: 694, column: 23, scope: !2524)
!2565 = !DILocation(line: 695, column: 30, scope: !2566)
!2566 = distinct !DILexicalBlock(scope: !2516, file: !139, line: 695, column: 30)
!2567 = !DILocation(line: 695, column: 30, scope: !2516)
!2568 = !DILocation(line: 697, column: 25, scope: !2569)
!2569 = distinct !DILexicalBlock(scope: !2566, file: !139, line: 696, column: 23)
!2570 = !DILocation(line: 697, column: 25, scope: !2571)
!2571 = distinct !DILexicalBlock(scope: !2572, file: !139, line: 697, column: 25)
!2572 = distinct !DILexicalBlock(scope: !2569, file: !139, line: 697, column: 25)
!2573 = !DILocation(line: 697, column: 25, scope: !2572)
!2574 = !DILocation(line: 698, column: 40, scope: !2569)
!2575 = !DILocation(line: 699, column: 23, scope: !2569)
!2576 = !DILocation(line: 700, column: 25, scope: !2577)
!2577 = distinct !DILexicalBlock(scope: !2517, file: !139, line: 700, column: 25)
!2578 = !DILocation(line: 700, column: 33, scope: !2577)
!2579 = !DILocation(line: 700, column: 35, scope: !2577)
!2580 = !DILocation(line: 700, column: 30, scope: !2577)
!2581 = !DILocation(line: 700, column: 25, scope: !2517)
!2582 = !DILocation(line: 701, column: 23, scope: !2577)
!2583 = !DILocation(line: 702, column: 21, scope: !2517)
!2584 = !DILocation(line: 702, column: 21, scope: !2585)
!2585 = distinct !DILexicalBlock(scope: !2586, file: !139, line: 702, column: 21)
!2586 = distinct !DILexicalBlock(scope: !2517, file: !139, line: 702, column: 21)
!2587 = !DILocation(line: 702, column: 21, scope: !2586)
!2588 = !DILocation(line: 702, column: 21, scope: !2589)
!2589 = distinct !DILexicalBlock(scope: !2585, file: !139, line: 702, column: 21)
!2590 = !DILocation(line: 702, column: 21, scope: !2591)
!2591 = distinct !DILexicalBlock(scope: !2592, file: !139, line: 702, column: 21)
!2592 = distinct !DILexicalBlock(scope: !2589, file: !139, line: 702, column: 21)
!2593 = !DILocation(line: 702, column: 21, scope: !2592)
!2594 = !DILocation(line: 702, column: 21, scope: !2595)
!2595 = distinct !DILexicalBlock(scope: !2596, file: !139, line: 702, column: 21)
!2596 = distinct !DILexicalBlock(scope: !2589, file: !139, line: 702, column: 21)
!2597 = !DILocation(line: 702, column: 21, scope: !2596)
!2598 = !DILocation(line: 703, column: 21, scope: !2517)
!2599 = !DILocation(line: 703, column: 21, scope: !2600)
!2600 = distinct !DILexicalBlock(scope: !2601, file: !139, line: 703, column: 21)
!2601 = distinct !DILexicalBlock(scope: !2517, file: !139, line: 703, column: 21)
!2602 = !DILocation(line: 703, column: 21, scope: !2601)
!2603 = !DILocation(line: 704, column: 25, scope: !2517)
!2604 = !DILocation(line: 704, column: 29, scope: !2517)
!2605 = !DILocation(line: 704, column: 23, scope: !2517)
!2606 = !DILocation(line: 686, column: 17, scope: !2518)
!2607 = distinct !{!2607, !2608, !2609}
!2608 = !DILocation(line: 686, column: 17, scope: !2519)
!2609 = !DILocation(line: 705, column: 19, scope: !2519)
!2610 = !DILocation(line: 707, column: 17, scope: !2509)
!2611 = !DILocation(line: 710, column: 9, scope: !2109)
!2612 = !DILocation(line: 712, column: 16, scope: !2613)
!2613 = distinct !DILexicalBlock(scope: !2055, file: !139, line: 712, column: 11)
!2614 = !DILocation(line: 712, column: 34, scope: !2613)
!2615 = !DILocation(line: 712, column: 37, scope: !2613)
!2616 = !DILocation(line: 712, column: 51, scope: !2613)
!2617 = !DILocation(line: 713, column: 15, scope: !2613)
!2618 = !DILocation(line: 713, column: 18, scope: !2613)
!2619 = !DILocation(line: 714, column: 14, scope: !2613)
!2620 = !DILocation(line: 714, column: 17, scope: !2613)
!2621 = !DILocation(line: 715, column: 14, scope: !2613)
!2622 = !DILocation(line: 715, column: 17, scope: !2613)
!2623 = !DILocation(line: 715, column: 33, scope: !2613)
!2624 = !DILocation(line: 715, column: 35, scope: !2613)
!2625 = !DILocation(line: 715, column: 51, scope: !2613)
!2626 = !DILocation(line: 715, column: 53, scope: !2613)
!2627 = !DILocation(line: 715, column: 47, scope: !2613)
!2628 = !DILocation(line: 715, column: 65, scope: !2613)
!2629 = !DILocation(line: 716, column: 11, scope: !2613)
!2630 = !DILocation(line: 716, column: 15, scope: !2613)
!2631 = !DILocation(line: 712, column: 11, scope: !2055)
!2632 = !DILocation(line: 717, column: 9, scope: !2613)
!2633 = !DILabel(scope: !2055, name: "store_escape", file: !139, line: 719)
!2634 = !DILocation(line: 719, column: 5, scope: !2055)
!2635 = !DILocation(line: 720, column: 7, scope: !2055)
!2636 = !DILocation(line: 720, column: 7, scope: !2637)
!2637 = distinct !DILexicalBlock(scope: !2638, file: !139, line: 720, column: 7)
!2638 = distinct !DILexicalBlock(scope: !2055, file: !139, line: 720, column: 7)
!2639 = !DILocation(line: 720, column: 7, scope: !2638)
!2640 = !DILocation(line: 720, column: 7, scope: !2641)
!2641 = distinct !DILexicalBlock(scope: !2638, file: !139, line: 720, column: 7)
!2642 = !DILocation(line: 720, column: 7, scope: !2643)
!2643 = distinct !DILexicalBlock(scope: !2641, file: !139, line: 720, column: 7)
!2644 = !DILocation(line: 720, column: 7, scope: !2645)
!2645 = distinct !DILexicalBlock(scope: !2646, file: !139, line: 720, column: 7)
!2646 = distinct !DILexicalBlock(scope: !2643, file: !139, line: 720, column: 7)
!2647 = !DILocation(line: 720, column: 7, scope: !2646)
!2648 = !DILocation(line: 720, column: 7, scope: !2649)
!2649 = distinct !DILexicalBlock(scope: !2650, file: !139, line: 720, column: 7)
!2650 = distinct !DILexicalBlock(scope: !2643, file: !139, line: 720, column: 7)
!2651 = !DILocation(line: 720, column: 7, scope: !2650)
!2652 = !DILocation(line: 720, column: 7, scope: !2653)
!2653 = distinct !DILexicalBlock(scope: !2654, file: !139, line: 720, column: 7)
!2654 = distinct !DILexicalBlock(scope: !2643, file: !139, line: 720, column: 7)
!2655 = !DILocation(line: 720, column: 7, scope: !2654)
!2656 = !DILocation(line: 720, column: 7, scope: !2657)
!2657 = distinct !DILexicalBlock(scope: !2658, file: !139, line: 720, column: 7)
!2658 = distinct !DILexicalBlock(scope: !2638, file: !139, line: 720, column: 7)
!2659 = !DILocation(line: 720, column: 7, scope: !2658)
!2660 = !DILabel(scope: !2055, name: "store_c", file: !139, line: 722)
!2661 = !DILocation(line: 722, column: 5, scope: !2055)
!2662 = !DILocation(line: 723, column: 7, scope: !2055)
!2663 = !DILocation(line: 723, column: 7, scope: !2664)
!2664 = distinct !DILexicalBlock(scope: !2665, file: !139, line: 723, column: 7)
!2665 = distinct !DILexicalBlock(scope: !2055, file: !139, line: 723, column: 7)
!2666 = !DILocation(line: 723, column: 7, scope: !2665)
!2667 = !DILocation(line: 723, column: 7, scope: !2668)
!2668 = distinct !DILexicalBlock(scope: !2664, file: !139, line: 723, column: 7)
!2669 = !DILocation(line: 723, column: 7, scope: !2670)
!2670 = distinct !DILexicalBlock(scope: !2671, file: !139, line: 723, column: 7)
!2671 = distinct !DILexicalBlock(scope: !2668, file: !139, line: 723, column: 7)
!2672 = !DILocation(line: 723, column: 7, scope: !2671)
!2673 = !DILocation(line: 723, column: 7, scope: !2674)
!2674 = distinct !DILexicalBlock(scope: !2675, file: !139, line: 723, column: 7)
!2675 = distinct !DILexicalBlock(scope: !2668, file: !139, line: 723, column: 7)
!2676 = !DILocation(line: 723, column: 7, scope: !2675)
!2677 = !DILocation(line: 724, column: 7, scope: !2055)
!2678 = !DILocation(line: 724, column: 7, scope: !2679)
!2679 = distinct !DILexicalBlock(scope: !2680, file: !139, line: 724, column: 7)
!2680 = distinct !DILexicalBlock(scope: !2055, file: !139, line: 724, column: 7)
!2681 = !DILocation(line: 724, column: 7, scope: !2680)
!2682 = !DILocation(line: 726, column: 13, scope: !2683)
!2683 = distinct !DILexicalBlock(scope: !2055, file: !139, line: 726, column: 11)
!2684 = !DILocation(line: 726, column: 11, scope: !2055)
!2685 = !DILocation(line: 727, column: 38, scope: !2683)
!2686 = !DILocation(line: 727, column: 9, scope: !2683)
!2687 = !DILocation(line: 728, column: 5, scope: !2055)
!2688 = !DILocation(line: 400, column: 75, scope: !2044)
!2689 = !DILocation(line: 400, column: 3, scope: !2044)
!2690 = distinct !{!2690, !2053, !2691}
!2691 = !DILocation(line: 728, column: 5, scope: !2041)
!2692 = !DILocation(line: 730, column: 7, scope: !2693)
!2693 = distinct !DILexicalBlock(scope: !1901, file: !139, line: 730, column: 7)
!2694 = !DILocation(line: 730, column: 11, scope: !2693)
!2695 = !DILocation(line: 730, column: 16, scope: !2693)
!2696 = !DILocation(line: 730, column: 19, scope: !2693)
!2697 = !DILocation(line: 730, column: 33, scope: !2693)
!2698 = !DILocation(line: 731, column: 7, scope: !2693)
!2699 = !DILocation(line: 731, column: 10, scope: !2693)
!2700 = !DILocation(line: 730, column: 7, scope: !1901)
!2701 = !DILocation(line: 732, column: 5, scope: !2693)
!2702 = !DILocation(line: 738, column: 7, scope: !2703)
!2703 = distinct !DILexicalBlock(scope: !1901, file: !139, line: 738, column: 7)
!2704 = !DILocation(line: 738, column: 21, scope: !2703)
!2705 = !DILocation(line: 738, column: 51, scope: !2703)
!2706 = !DILocation(line: 738, column: 56, scope: !2703)
!2707 = !DILocation(line: 739, column: 7, scope: !2703)
!2708 = !DILocation(line: 739, column: 10, scope: !2703)
!2709 = !DILocation(line: 738, column: 7, scope: !1901)
!2710 = !DILocation(line: 741, column: 11, scope: !2711)
!2711 = distinct !DILexicalBlock(scope: !2712, file: !139, line: 741, column: 11)
!2712 = distinct !DILexicalBlock(scope: !2703, file: !139, line: 740, column: 5)
!2713 = !DILocation(line: 741, column: 11, scope: !2712)
!2714 = !DILocation(line: 742, column: 42, scope: !2711)
!2715 = !DILocation(line: 742, column: 50, scope: !2711)
!2716 = !DILocation(line: 742, column: 67, scope: !2711)
!2717 = !DILocation(line: 742, column: 72, scope: !2711)
!2718 = !DILocation(line: 744, column: 42, scope: !2711)
!2719 = !DILocation(line: 744, column: 49, scope: !2711)
!2720 = !DILocation(line: 745, column: 42, scope: !2711)
!2721 = !DILocation(line: 745, column: 54, scope: !2711)
!2722 = !DILocation(line: 742, column: 16, scope: !2711)
!2723 = !DILocation(line: 742, column: 9, scope: !2711)
!2724 = !DILocation(line: 746, column: 18, scope: !2725)
!2725 = distinct !DILexicalBlock(scope: !2711, file: !139, line: 746, column: 16)
!2726 = !DILocation(line: 746, column: 29, scope: !2725)
!2727 = !DILocation(line: 746, column: 32, scope: !2725)
!2728 = !DILocation(line: 746, column: 16, scope: !2711)
!2729 = !DILocation(line: 749, column: 24, scope: !2730)
!2730 = distinct !DILexicalBlock(scope: !2725, file: !139, line: 747, column: 9)
!2731 = !DILocation(line: 749, column: 22, scope: !2730)
!2732 = !DILocation(line: 750, column: 15, scope: !2730)
!2733 = !DILocation(line: 751, column: 11, scope: !2730)
!2734 = !DILocation(line: 753, column: 5, scope: !2712)
!2735 = !DILocation(line: 755, column: 7, scope: !2736)
!2736 = distinct !DILexicalBlock(scope: !1901, file: !139, line: 755, column: 7)
!2737 = !DILocation(line: 755, column: 20, scope: !2736)
!2738 = !DILocation(line: 755, column: 24, scope: !2736)
!2739 = !DILocation(line: 755, column: 7, scope: !1901)
!2740 = !DILocation(line: 756, column: 5, scope: !2736)
!2741 = !DILocation(line: 756, column: 13, scope: !2742)
!2742 = distinct !DILexicalBlock(scope: !2743, file: !139, line: 756, column: 5)
!2743 = distinct !DILexicalBlock(scope: !2736, file: !139, line: 756, column: 5)
!2744 = !DILocation(line: 756, column: 12, scope: !2742)
!2745 = !DILocation(line: 756, column: 5, scope: !2743)
!2746 = !DILocation(line: 757, column: 7, scope: !2742)
!2747 = !DILocation(line: 757, column: 7, scope: !2748)
!2748 = distinct !DILexicalBlock(scope: !2749, file: !139, line: 757, column: 7)
!2749 = distinct !DILexicalBlock(scope: !2742, file: !139, line: 757, column: 7)
!2750 = !DILocation(line: 757, column: 7, scope: !2749)
!2751 = !DILocation(line: 756, column: 39, scope: !2742)
!2752 = !DILocation(line: 756, column: 5, scope: !2742)
!2753 = distinct !{!2753, !2745, !2754}
!2754 = !DILocation(line: 757, column: 7, scope: !2743)
!2755 = !DILocation(line: 759, column: 7, scope: !2756)
!2756 = distinct !DILexicalBlock(scope: !1901, file: !139, line: 759, column: 7)
!2757 = !DILocation(line: 759, column: 13, scope: !2756)
!2758 = !DILocation(line: 759, column: 11, scope: !2756)
!2759 = !DILocation(line: 759, column: 7, scope: !1901)
!2760 = !DILocation(line: 760, column: 5, scope: !2756)
!2761 = !DILocation(line: 760, column: 12, scope: !2756)
!2762 = !DILocation(line: 760, column: 17, scope: !2756)
!2763 = !DILocation(line: 761, column: 10, scope: !1901)
!2764 = !DILocation(line: 761, column: 3, scope: !1901)
!2765 = !DILabel(scope: !1901, name: "force_outer_quoting_style", file: !139, line: 763)
!2766 = !DILocation(line: 763, column: 2, scope: !1901)
!2767 = !DILocation(line: 766, column: 7, scope: !2768)
!2768 = distinct !DILexicalBlock(scope: !1901, file: !139, line: 766, column: 7)
!2769 = !DILocation(line: 766, column: 21, scope: !2768)
!2770 = !DILocation(line: 766, column: 51, scope: !2768)
!2771 = !DILocation(line: 766, column: 54, scope: !2768)
!2772 = !DILocation(line: 766, column: 7, scope: !1901)
!2773 = !DILocation(line: 767, column: 19, scope: !2768)
!2774 = !DILocation(line: 767, column: 5, scope: !2768)
!2775 = !DILocation(line: 768, column: 36, scope: !1901)
!2776 = !DILocation(line: 768, column: 44, scope: !1901)
!2777 = !DILocation(line: 768, column: 56, scope: !1901)
!2778 = !DILocation(line: 768, column: 61, scope: !1901)
!2779 = !DILocation(line: 769, column: 36, scope: !1901)
!2780 = !DILocation(line: 770, column: 36, scope: !1901)
!2781 = !DILocation(line: 770, column: 42, scope: !1901)
!2782 = !DILocation(line: 771, column: 36, scope: !1901)
!2783 = !DILocation(line: 771, column: 48, scope: !1901)
!2784 = !DILocation(line: 768, column: 10, scope: !1901)
!2785 = !DILocation(line: 768, column: 3, scope: !1901)
!2786 = !DILocation(line: 772, column: 1, scope: !1901)
!2787 = !DILocalVariable(name: "buffer", arg: 1, scope: !2788, file: !139, line: 256, type: !6)
!2788 = distinct !DISubprogram(name: "quotearg_buffer_restyled", scope: !139, file: !139, line: 256, type: !1902, scopeLine: 262, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2789, retainedNodes: !4)
!2789 = distinct !DICompileUnit(language: DW_LANG_C99, file: !116, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !117, retainedTypes: !132, globals: !2790, nameTableKind: None)
!2790 = !{!2791, !2793, !2795, !2804, !2806, !2808, !2815, !2817}
!2791 = !DIGlobalVariableExpression(var: !2792, expr: !DIExpression())
!2792 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !2789, file: !139, line: 85, type: !140, isLocal: false, isDefinition: true)
!2793 = !DIGlobalVariableExpression(var: !2794, expr: !DIExpression())
!2794 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !2789, file: !139, line: 101, type: !146, isLocal: false, isDefinition: true)
!2795 = !DIGlobalVariableExpression(var: !2796, expr: !DIExpression())
!2796 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !2789, file: !139, line: 1052, type: !2797, isLocal: false, isDefinition: true)
!2797 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !139, line: 65, size: 448, elements: !2798)
!2798 = !{!2799, !2800, !2801, !2802, !2803}
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !2797, file: !139, line: 68, baseType: !118, size: 32)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2797, file: !139, line: 71, baseType: !72, size: 32, offset: 32)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !2797, file: !139, line: 75, baseType: !155, size: 256, offset: 64)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !2797, file: !139, line: 78, baseType: !69, size: 64, offset: 320)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !2797, file: !139, line: 81, baseType: !69, size: 64, offset: 384)
!2804 = !DIGlobalVariableExpression(var: !2805, expr: !DIExpression())
!2805 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !2789, file: !139, line: 116, type: !2797, isLocal: true, isDefinition: true)
!2806 = !DIGlobalVariableExpression(var: !2807, expr: !DIExpression())
!2807 = distinct !DIGlobalVariable(name: "slot0", scope: !2789, file: !139, line: 842, type: !162, isLocal: true, isDefinition: true)
!2808 = !DIGlobalVariableExpression(var: !2809, expr: !DIExpression())
!2809 = distinct !DIGlobalVariable(name: "slotvec", scope: !2789, file: !139, line: 845, type: !2810, isLocal: true, isDefinition: true)
!2810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2811, size: 64)
!2811 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !139, line: 834, size: 128, elements: !2812)
!2812 = !{!2813, !2814}
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2811, file: !139, line: 836, baseType: !134, size: 64)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2811, file: !139, line: 837, baseType: !6, size: 64, offset: 64)
!2815 = !DIGlobalVariableExpression(var: !2816, expr: !DIExpression())
!2816 = distinct !DIGlobalVariable(name: "nslots", scope: !2789, file: !139, line: 843, type: !72, isLocal: true, isDefinition: true)
!2817 = !DIGlobalVariableExpression(var: !2818, expr: !DIExpression())
!2818 = distinct !DIGlobalVariable(name: "slotvec0", scope: !2789, file: !139, line: 844, type: !2811, isLocal: true, isDefinition: true)
!2819 = !DILocalVariable(name: "buffersize", arg: 2, scope: !2788, file: !139, line: 256, type: !134)
!2820 = !DILocalVariable(name: "arg", arg: 3, scope: !2788, file: !139, line: 257, type: !69)
!2821 = !DILocalVariable(name: "argsize", arg: 4, scope: !2788, file: !139, line: 257, type: !134)
!2822 = !DILocalVariable(name: "quoting_style", arg: 5, scope: !2788, file: !139, line: 258, type: !118)
!2823 = !DILocalVariable(name: "flags", arg: 6, scope: !2788, file: !139, line: 258, type: !72)
!2824 = !DILocalVariable(name: "quote_these_too", arg: 7, scope: !2788, file: !139, line: 259, type: !1904)
!2825 = !DILocalVariable(name: "left_quote", arg: 8, scope: !2788, file: !139, line: 260, type: !69)
!2826 = !DILocalVariable(name: "right_quote", arg: 9, scope: !2788, file: !139, line: 261, type: !69)
!2827 = !DILocalVariable(name: "i", scope: !2788, file: !139, line: 263, type: !134)
!2828 = !DILocalVariable(name: "len", scope: !2788, file: !139, line: 264, type: !134)
!2829 = !DILocalVariable(name: "orig_buffersize", scope: !2788, file: !139, line: 265, type: !134)
!2830 = !DILocalVariable(name: "quote_string", scope: !2788, file: !139, line: 266, type: !69)
!2831 = !DILocalVariable(name: "quote_string_len", scope: !2788, file: !139, line: 267, type: !134)
!2832 = !DILocalVariable(name: "backslash_escapes", scope: !2788, file: !139, line: 268, type: !27)
!2833 = !DILocalVariable(name: "unibyte_locale", scope: !2788, file: !139, line: 269, type: !27)
!2834 = !DILocalVariable(name: "elide_outer_quotes", scope: !2788, file: !139, line: 270, type: !27)
!2835 = !DILocalVariable(name: "pending_shell_escape_end", scope: !2788, file: !139, line: 271, type: !27)
!2836 = !DILocalVariable(name: "encountered_single_quote", scope: !2788, file: !139, line: 272, type: !27)
!2837 = !DILocalVariable(name: "all_c_and_shell_quote_compat", scope: !2788, file: !139, line: 273, type: !27)
!2838 = distinct !DISubprogram(name: "gettext_quote", scope: !139, file: !139, line: 207, type: !2839, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !115, retainedNodes: !4)
!2839 = !DISubroutineType(types: !2840)
!2840 = !{!69, !69, !118}
!2841 = !DILocalVariable(name: "msgid", arg: 1, scope: !2838, file: !139, line: 207, type: !69)
!2842 = !DILocation(line: 207, column: 28, scope: !2838)
!2843 = !DILocalVariable(name: "s", arg: 2, scope: !2838, file: !139, line: 207, type: !118)
!2844 = !DILocation(line: 207, column: 54, scope: !2838)
!2845 = !DILocalVariable(name: "translation", scope: !2838, file: !139, line: 209, type: !69)
!2846 = !DILocation(line: 209, column: 15, scope: !2838)
!2847 = !DILocation(line: 209, column: 29, scope: !2838)
!2848 = !DILocalVariable(name: "locale_code", scope: !2838, file: !139, line: 210, type: !69)
!2849 = !DILocation(line: 210, column: 15, scope: !2838)
!2850 = !DILocation(line: 212, column: 7, scope: !2851)
!2851 = distinct !DILexicalBlock(scope: !2838, file: !139, line: 212, column: 7)
!2852 = !DILocation(line: 212, column: 22, scope: !2851)
!2853 = !DILocation(line: 212, column: 19, scope: !2851)
!2854 = !DILocation(line: 212, column: 7, scope: !2838)
!2855 = !DILocation(line: 213, column: 12, scope: !2851)
!2856 = !DILocation(line: 213, column: 5, scope: !2851)
!2857 = !DILocation(line: 233, column: 17, scope: !2838)
!2858 = !DILocation(line: 233, column: 15, scope: !2838)
!2859 = !DILocation(line: 234, column: 7, scope: !2860)
!2860 = distinct !DILexicalBlock(scope: !2838, file: !139, line: 234, column: 7)
!2861 = !DILocation(line: 235, column: 12, scope: !2860)
!2862 = !DILocation(line: 235, column: 21, scope: !2860)
!2863 = !DILocation(line: 235, column: 5, scope: !2860)
!2864 = !DILocation(line: 236, column: 7, scope: !2865)
!2865 = distinct !DILexicalBlock(scope: !2838, file: !139, line: 236, column: 7)
!2866 = !DILocation(line: 237, column: 12, scope: !2865)
!2867 = !DILocation(line: 237, column: 21, scope: !2865)
!2868 = !DILocation(line: 237, column: 5, scope: !2865)
!2869 = !DILocation(line: 239, column: 11, scope: !2838)
!2870 = !DILocation(line: 239, column: 13, scope: !2838)
!2871 = !DILocation(line: 239, column: 3, scope: !2838)
!2872 = !DILocation(line: 240, column: 1, scope: !2838)
!2873 = distinct !DISubprogram(name: "quotearg_char", scope: !139, file: !139, line: 991, type: !2874, scopeLine: 992, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !115, retainedNodes: !4)
!2874 = !DISubroutineType(types: !2875)
!2875 = !{!6, !69, !7}
!2876 = !DILocalVariable(name: "arg", arg: 1, scope: !2873, file: !139, line: 991, type: !69)
!2877 = !DILocation(line: 991, column: 28, scope: !2873)
!2878 = !DILocalVariable(name: "ch", arg: 2, scope: !2873, file: !139, line: 991, type: !7)
!2879 = !DILocation(line: 991, column: 38, scope: !2873)
!2880 = !DILocation(line: 993, column: 29, scope: !2873)
!2881 = !DILocation(line: 993, column: 44, scope: !2873)
!2882 = !DILocation(line: 993, column: 10, scope: !2873)
!2883 = !DILocation(line: 993, column: 3, scope: !2873)
!2884 = distinct !DISubprogram(name: "quotearg_colon", scope: !139, file: !139, line: 997, type: !2885, scopeLine: 998, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !115, retainedNodes: !4)
!2885 = !DISubroutineType(types: !2886)
!2886 = !{!6, !69}
!2887 = !DILocalVariable(name: "arg", arg: 1, scope: !2884, file: !139, line: 997, type: !69)
!2888 = !DILocation(line: 997, column: 29, scope: !2884)
!2889 = !DILocation(line: 999, column: 25, scope: !2884)
!2890 = !DILocation(line: 999, column: 10, scope: !2884)
!2891 = !DILocation(line: 999, column: 3, scope: !2884)
!2892 = distinct !DISubprogram(name: "quote_n_mem", scope: !139, file: !139, line: 1061, type: !2893, scopeLine: 1062, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !115, retainedNodes: !4)
!2893 = !DISubroutineType(types: !2894)
!2894 = !{!69, !72, !69, !134}
!2895 = !DILocalVariable(name: "n", arg: 1, scope: !2892, file: !139, line: 1061, type: !72)
!2896 = !DILocation(line: 1061, column: 18, scope: !2892)
!2897 = !DILocalVariable(name: "arg", arg: 2, scope: !2892, file: !139, line: 1061, type: !69)
!2898 = !DILocation(line: 1061, column: 33, scope: !2892)
!2899 = !DILocalVariable(name: "argsize", arg: 3, scope: !2892, file: !139, line: 1061, type: !134)
!2900 = !DILocation(line: 1061, column: 45, scope: !2892)
!2901 = !DILocation(line: 1063, column: 30, scope: !2892)
!2902 = !DILocation(line: 1063, column: 33, scope: !2892)
!2903 = !DILocation(line: 1063, column: 38, scope: !2892)
!2904 = !DILocation(line: 1063, column: 10, scope: !2892)
!2905 = !DILocation(line: 1063, column: 3, scope: !2892)
!2906 = !DILocalVariable(name: "n", arg: 1, scope: !2907, file: !139, line: 1061, type: !72)
!2907 = distinct !DISubprogram(name: "quote_n_mem", scope: !139, file: !139, line: 1061, type: !2893, scopeLine: 1062, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2908, retainedNodes: !4)
!2908 = distinct !DICompileUnit(language: DW_LANG_C99, file: !116, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !117, retainedTypes: !132, globals: !2909, nameTableKind: None)
!2909 = !{!2910, !2912, !2914, !2923, !2925, !2927, !2934, !2936}
!2910 = !DIGlobalVariableExpression(var: !2911, expr: !DIExpression())
!2911 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !2908, file: !139, line: 85, type: !140, isLocal: false, isDefinition: true)
!2912 = !DIGlobalVariableExpression(var: !2913, expr: !DIExpression())
!2913 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !2908, file: !139, line: 101, type: !146, isLocal: false, isDefinition: true)
!2914 = !DIGlobalVariableExpression(var: !2915, expr: !DIExpression())
!2915 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !2908, file: !139, line: 1052, type: !2916, isLocal: false, isDefinition: true)
!2916 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !139, line: 65, size: 448, elements: !2917)
!2917 = !{!2918, !2919, !2920, !2921, !2922}
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !2916, file: !139, line: 68, baseType: !118, size: 32)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2916, file: !139, line: 71, baseType: !72, size: 32, offset: 32)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !2916, file: !139, line: 75, baseType: !155, size: 256, offset: 64)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !2916, file: !139, line: 78, baseType: !69, size: 64, offset: 320)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !2916, file: !139, line: 81, baseType: !69, size: 64, offset: 384)
!2923 = !DIGlobalVariableExpression(var: !2924, expr: !DIExpression())
!2924 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !2908, file: !139, line: 116, type: !2916, isLocal: true, isDefinition: true)
!2925 = !DIGlobalVariableExpression(var: !2926, expr: !DIExpression())
!2926 = distinct !DIGlobalVariable(name: "slot0", scope: !2908, file: !139, line: 842, type: !162, isLocal: true, isDefinition: true)
!2927 = !DIGlobalVariableExpression(var: !2928, expr: !DIExpression())
!2928 = distinct !DIGlobalVariable(name: "slotvec", scope: !2908, file: !139, line: 845, type: !2929, isLocal: true, isDefinition: true)
!2929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2930, size: 64)
!2930 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !139, line: 834, size: 128, elements: !2931)
!2931 = !{!2932, !2933}
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2930, file: !139, line: 836, baseType: !134, size: 64)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2930, file: !139, line: 837, baseType: !6, size: 64, offset: 64)
!2934 = !DIGlobalVariableExpression(var: !2935, expr: !DIExpression())
!2935 = distinct !DIGlobalVariable(name: "nslots", scope: !2908, file: !139, line: 843, type: !72, isLocal: true, isDefinition: true)
!2936 = !DIGlobalVariableExpression(var: !2937, expr: !DIExpression())
!2937 = distinct !DIGlobalVariable(name: "slotvec0", scope: !2908, file: !139, line: 844, type: !2930, isLocal: true, isDefinition: true)
!2938 = !DILocalVariable(name: "arg", arg: 2, scope: !2907, file: !139, line: 1061, type: !69)
!2939 = !DILocalVariable(name: "argsize", arg: 3, scope: !2907, file: !139, line: 1061, type: !134)
!2940 = distinct !DISubprogram(name: "quote_n", scope: !139, file: !139, line: 1073, type: !2941, scopeLine: 1074, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !115, retainedNodes: !4)
!2941 = !DISubroutineType(types: !2942)
!2942 = !{!69, !72, !69}
!2943 = !DILocalVariable(name: "n", arg: 1, scope: !2940, file: !139, line: 1073, type: !72)
!2944 = !DILocation(line: 1073, column: 14, scope: !2940)
!2945 = !DILocalVariable(name: "arg", arg: 2, scope: !2940, file: !139, line: 1073, type: !69)
!2946 = !DILocation(line: 1073, column: 29, scope: !2940)
!2947 = !DILocation(line: 1075, column: 23, scope: !2940)
!2948 = !DILocation(line: 1075, column: 26, scope: !2940)
!2949 = !DILocation(line: 1075, column: 10, scope: !2940)
!2950 = !DILocation(line: 1075, column: 3, scope: !2940)
!2951 = !DILocalVariable(name: "n", arg: 1, scope: !2952, file: !139, line: 1073, type: !72)
!2952 = distinct !DISubprogram(name: "quote_n", scope: !139, file: !139, line: 1073, type: !2941, scopeLine: 1074, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2953, retainedNodes: !4)
!2953 = distinct !DICompileUnit(language: DW_LANG_C99, file: !116, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !117, retainedTypes: !132, globals: !2954, nameTableKind: None)
!2954 = !{!2955, !2957, !2959, !2968, !2970, !2972, !2979, !2981}
!2955 = !DIGlobalVariableExpression(var: !2956, expr: !DIExpression())
!2956 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !2953, file: !139, line: 85, type: !140, isLocal: false, isDefinition: true)
!2957 = !DIGlobalVariableExpression(var: !2958, expr: !DIExpression())
!2958 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !2953, file: !139, line: 101, type: !146, isLocal: false, isDefinition: true)
!2959 = !DIGlobalVariableExpression(var: !2960, expr: !DIExpression())
!2960 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !2953, file: !139, line: 1052, type: !2961, isLocal: false, isDefinition: true)
!2961 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !139, line: 65, size: 448, elements: !2962)
!2962 = !{!2963, !2964, !2965, !2966, !2967}
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !2961, file: !139, line: 68, baseType: !118, size: 32)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2961, file: !139, line: 71, baseType: !72, size: 32, offset: 32)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !2961, file: !139, line: 75, baseType: !155, size: 256, offset: 64)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !2961, file: !139, line: 78, baseType: !69, size: 64, offset: 320)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !2961, file: !139, line: 81, baseType: !69, size: 64, offset: 384)
!2968 = !DIGlobalVariableExpression(var: !2969, expr: !DIExpression())
!2969 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !2953, file: !139, line: 116, type: !2961, isLocal: true, isDefinition: true)
!2970 = !DIGlobalVariableExpression(var: !2971, expr: !DIExpression())
!2971 = distinct !DIGlobalVariable(name: "slot0", scope: !2953, file: !139, line: 842, type: !162, isLocal: true, isDefinition: true)
!2972 = !DIGlobalVariableExpression(var: !2973, expr: !DIExpression())
!2973 = distinct !DIGlobalVariable(name: "slotvec", scope: !2953, file: !139, line: 845, type: !2974, isLocal: true, isDefinition: true)
!2974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2975, size: 64)
!2975 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !139, line: 834, size: 128, elements: !2976)
!2976 = !{!2977, !2978}
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2975, file: !139, line: 836, baseType: !134, size: 64)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2975, file: !139, line: 837, baseType: !6, size: 64, offset: 64)
!2979 = !DIGlobalVariableExpression(var: !2980, expr: !DIExpression())
!2980 = distinct !DIGlobalVariable(name: "nslots", scope: !2953, file: !139, line: 843, type: !72, isLocal: true, isDefinition: true)
!2981 = !DIGlobalVariableExpression(var: !2982, expr: !DIExpression())
!2982 = distinct !DIGlobalVariable(name: "slotvec0", scope: !2953, file: !139, line: 844, type: !2975, isLocal: true, isDefinition: true)
!2983 = !DILocalVariable(name: "arg", arg: 2, scope: !2952, file: !139, line: 1073, type: !69)
!2984 = distinct !DISubprogram(name: "quote", scope: !139, file: !139, line: 1079, type: !2985, scopeLine: 1080, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !115, retainedNodes: !4)
!2985 = !DISubroutineType(types: !2986)
!2986 = !{!69, !69}
!2987 = !DILocalVariable(name: "arg", arg: 1, scope: !2984, file: !139, line: 1079, type: !69)
!2988 = !DILocation(line: 1079, column: 20, scope: !2984)
!2989 = !DILocation(line: 1081, column: 22, scope: !2984)
!2990 = !DILocation(line: 1081, column: 10, scope: !2984)
!2991 = !DILocation(line: 1081, column: 3, scope: !2984)
!2992 = !DILocalVariable(name: "arg", arg: 1, scope: !2993, file: !139, line: 1079, type: !69)
!2993 = distinct !DISubprogram(name: "quote", scope: !139, file: !139, line: 1079, type: !2985, scopeLine: 1080, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2994, retainedNodes: !4)
!2994 = distinct !DICompileUnit(language: DW_LANG_C99, file: !116, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !117, retainedTypes: !132, globals: !2995, nameTableKind: None)
!2995 = !{!2996, !2998, !3000, !3009, !3011, !3013, !3020, !3022}
!2996 = !DIGlobalVariableExpression(var: !2997, expr: !DIExpression())
!2997 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !2994, file: !139, line: 85, type: !140, isLocal: false, isDefinition: true)
!2998 = !DIGlobalVariableExpression(var: !2999, expr: !DIExpression())
!2999 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !2994, file: !139, line: 101, type: !146, isLocal: false, isDefinition: true)
!3000 = !DIGlobalVariableExpression(var: !3001, expr: !DIExpression())
!3001 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !2994, file: !139, line: 1052, type: !3002, isLocal: false, isDefinition: true)
!3002 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !139, line: 65, size: 448, elements: !3003)
!3003 = !{!3004, !3005, !3006, !3007, !3008}
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !3002, file: !139, line: 68, baseType: !118, size: 32)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3002, file: !139, line: 71, baseType: !72, size: 32, offset: 32)
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !3002, file: !139, line: 75, baseType: !155, size: 256, offset: 64)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !3002, file: !139, line: 78, baseType: !69, size: 64, offset: 320)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !3002, file: !139, line: 81, baseType: !69, size: 64, offset: 384)
!3009 = !DIGlobalVariableExpression(var: !3010, expr: !DIExpression())
!3010 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !2994, file: !139, line: 116, type: !3002, isLocal: true, isDefinition: true)
!3011 = !DIGlobalVariableExpression(var: !3012, expr: !DIExpression())
!3012 = distinct !DIGlobalVariable(name: "slot0", scope: !2994, file: !139, line: 842, type: !162, isLocal: true, isDefinition: true)
!3013 = !DIGlobalVariableExpression(var: !3014, expr: !DIExpression())
!3014 = distinct !DIGlobalVariable(name: "slotvec", scope: !2994, file: !139, line: 845, type: !3015, isLocal: true, isDefinition: true)
!3015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3016, size: 64)
!3016 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !139, line: 834, size: 128, elements: !3017)
!3017 = !{!3018, !3019}
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3016, file: !139, line: 836, baseType: !134, size: 64)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !3016, file: !139, line: 837, baseType: !6, size: 64, offset: 64)
!3020 = !DIGlobalVariableExpression(var: !3021, expr: !DIExpression())
!3021 = distinct !DIGlobalVariable(name: "nslots", scope: !2994, file: !139, line: 843, type: !72, isLocal: true, isDefinition: true)
!3022 = !DIGlobalVariableExpression(var: !3023, expr: !DIExpression())
!3023 = distinct !DIGlobalVariable(name: "slotvec0", scope: !2994, file: !139, line: 844, type: !3016, isLocal: true, isDefinition: true)
!3024 = distinct !DISubprogram(name: "getcon", scope: !3025, file: !3025, line: 87, type: !3026, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !208, retainedNodes: !4)
!3025 = !DIFile(filename: "./lib/selinux/selinux.h", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!3026 = !DISubroutineType(types: !3027)
!3027 = !{!72, !3028}
!3028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3029, size: 64)
!3029 = !DIDerivedType(tag: DW_TAG_typedef, name: "security_context_t", file: !3025, line: 83, baseType: !6)
!3030 = !DILocalVariable(name: "con", arg: 1, scope: !3024, file: !3025, line: 87, type: !3028)
!3031 = !DILocation(line: 87, column: 29, scope: !3024)
!3032 = !DILocation(line: 88, column: 5, scope: !3024)
!3033 = !DILocation(line: 88, column: 11, scope: !3024)
!3034 = !DILocation(line: 88, column: 22, scope: !3024)
!3035 = distinct !DISubprogram(name: "parse_user_spec", scope: !179, file: !179, line: 259, type: !3036, scopeLine: 261, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !185, retainedNodes: !4)
!3036 = !DISubroutineType(types: !3037)
!3037 = !{!69, !69, !182, !183, !184, !184}
!3038 = !DILocalVariable(name: "spec", arg: 1, scope: !3035, file: !179, line: 259, type: !69)
!3039 = !DILocation(line: 259, column: 30, scope: !3035)
!3040 = !DILocalVariable(name: "uid", arg: 2, scope: !3035, file: !179, line: 259, type: !182)
!3041 = !DILocation(line: 259, column: 43, scope: !3035)
!3042 = !DILocalVariable(name: "gid", arg: 3, scope: !3035, file: !179, line: 259, type: !183)
!3043 = !DILocation(line: 259, column: 55, scope: !3035)
!3044 = !DILocalVariable(name: "username", arg: 4, scope: !3035, file: !179, line: 260, type: !184)
!3045 = !DILocation(line: 260, column: 25, scope: !3035)
!3046 = !DILocalVariable(name: "groupname", arg: 5, scope: !3035, file: !179, line: 260, type: !184)
!3047 = !DILocation(line: 260, column: 42, scope: !3035)
!3048 = !DILocalVariable(name: "colon", scope: !3035, file: !179, line: 262, type: !69)
!3049 = !DILocation(line: 262, column: 15, scope: !3035)
!3050 = !DILocation(line: 262, column: 23, scope: !3035)
!3051 = !DILocation(line: 262, column: 37, scope: !3035)
!3052 = !DILocation(line: 262, column: 29, scope: !3035)
!3053 = !DILocalVariable(name: "error_msg", scope: !3035, file: !179, line: 263, type: !69)
!3054 = !DILocation(line: 263, column: 15, scope: !3035)
!3055 = !DILocation(line: 264, column: 27, scope: !3035)
!3056 = !DILocation(line: 264, column: 33, scope: !3035)
!3057 = !DILocation(line: 264, column: 40, scope: !3035)
!3058 = !DILocation(line: 264, column: 45, scope: !3035)
!3059 = !DILocation(line: 264, column: 50, scope: !3035)
!3060 = !DILocation(line: 264, column: 60, scope: !3035)
!3061 = !DILocation(line: 264, column: 5, scope: !3035)
!3062 = !DILocation(line: 266, column: 7, scope: !3063)
!3063 = distinct !DILexicalBlock(scope: !3035, file: !179, line: 266, column: 7)
!3064 = !DILocation(line: 266, column: 11, scope: !3063)
!3065 = !DILocation(line: 266, column: 15, scope: !3063)
!3066 = !DILocation(line: 266, column: 21, scope: !3063)
!3067 = !DILocation(line: 266, column: 24, scope: !3063)
!3068 = !DILocation(line: 266, column: 7, scope: !3035)
!3069 = !DILocalVariable(name: "dot", scope: !3070, file: !179, line: 274, type: !69)
!3070 = distinct !DILexicalBlock(scope: !3063, file: !179, line: 267, column: 5)
!3071 = !DILocation(line: 274, column: 19, scope: !3070)
!3072 = !DILocation(line: 274, column: 33, scope: !3070)
!3073 = !DILocation(line: 274, column: 25, scope: !3070)
!3074 = !DILocation(line: 275, column: 11, scope: !3075)
!3075 = distinct !DILexicalBlock(scope: !3070, file: !179, line: 275, column: 11)
!3076 = !DILocation(line: 276, column: 11, scope: !3075)
!3077 = !DILocation(line: 276, column: 38, scope: !3075)
!3078 = !DILocation(line: 276, column: 44, scope: !3075)
!3079 = !DILocation(line: 276, column: 49, scope: !3075)
!3080 = !DILocation(line: 276, column: 54, scope: !3075)
!3081 = !DILocation(line: 276, column: 59, scope: !3075)
!3082 = !DILocation(line: 276, column: 69, scope: !3075)
!3083 = !DILocation(line: 276, column: 16, scope: !3075)
!3084 = !DILocation(line: 275, column: 11, scope: !3070)
!3085 = !DILocation(line: 277, column: 19, scope: !3075)
!3086 = !DILocation(line: 277, column: 9, scope: !3075)
!3087 = !DILocation(line: 278, column: 5, scope: !3070)
!3088 = !DILocation(line: 280, column: 10, scope: !3035)
!3089 = !DILocation(line: 280, column: 3, scope: !3035)
!3090 = !DILocalVariable(name: "spec", arg: 1, scope: !178, file: !179, line: 102, type: !69)
!3091 = !DILocation(line: 102, column: 35, scope: !178)
!3092 = !DILocalVariable(name: "separator", arg: 2, scope: !178, file: !179, line: 102, type: !69)
!3093 = !DILocation(line: 102, column: 53, scope: !178)
!3094 = !DILocalVariable(name: "uid", arg: 3, scope: !178, file: !179, line: 103, type: !182)
!3095 = !DILocation(line: 103, column: 30, scope: !178)
!3096 = !DILocalVariable(name: "gid", arg: 4, scope: !178, file: !179, line: 103, type: !183)
!3097 = !DILocation(line: 103, column: 42, scope: !178)
!3098 = !DILocalVariable(name: "username", arg: 5, scope: !178, file: !179, line: 104, type: !184)
!3099 = !DILocation(line: 104, column: 30, scope: !178)
!3100 = !DILocalVariable(name: "groupname", arg: 6, scope: !178, file: !179, line: 104, type: !184)
!3101 = !DILocation(line: 104, column: 47, scope: !178)
!3102 = !DILocalVariable(name: "error_msg", scope: !178, file: !179, line: 110, type: !69)
!3103 = !DILocation(line: 110, column: 15, scope: !178)
!3104 = !DILocalVariable(name: "pwd", scope: !178, file: !179, line: 111, type: !3105)
!3105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3106, size: 64)
!3106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "passwd", file: !553, line: 49, size: 384, elements: !3107)
!3107 = !{!3108, !3109, !3110, !3111, !3112, !3113, !3114}
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "pw_name", scope: !3106, file: !553, line: 51, baseType: !6, size: 64)
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "pw_passwd", scope: !3106, file: !553, line: 52, baseType: !6, size: 64, offset: 64)
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "pw_uid", scope: !3106, file: !553, line: 54, baseType: !14, size: 32, offset: 128)
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "pw_gid", scope: !3106, file: !553, line: 55, baseType: !22, size: 32, offset: 160)
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "pw_gecos", scope: !3106, file: !553, line: 56, baseType: !6, size: 64, offset: 192)
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "pw_dir", scope: !3106, file: !553, line: 57, baseType: !6, size: 64, offset: 256)
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "pw_shell", scope: !3106, file: !553, line: 58, baseType: !6, size: 64, offset: 320)
!3115 = !DILocation(line: 111, column: 18, scope: !178)
!3116 = !DILocalVariable(name: "grp", scope: !178, file: !179, line: 112, type: !3117)
!3117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3118, size: 64)
!3118 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group", file: !1077, line: 42, size: 256, elements: !3119)
!3119 = !{!3120, !3121, !3122, !3123}
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "gr_name", scope: !3118, file: !1077, line: 44, baseType: !6, size: 64)
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "gr_passwd", scope: !3118, file: !1077, line: 45, baseType: !6, size: 64, offset: 64)
!3122 = !DIDerivedType(tag: DW_TAG_member, name: "gr_gid", scope: !3118, file: !1077, line: 46, baseType: !22, size: 32, offset: 128)
!3123 = !DIDerivedType(tag: DW_TAG_member, name: "gr_mem", scope: !3118, file: !1077, line: 47, baseType: !184, size: 64, offset: 192)
!3124 = !DILocation(line: 112, column: 17, scope: !178)
!3125 = !DILocalVariable(name: "u", scope: !178, file: !179, line: 113, type: !6)
!3126 = !DILocation(line: 113, column: 9, scope: !178)
!3127 = !DILocalVariable(name: "g", scope: !178, file: !179, line: 114, type: !69)
!3128 = !DILocation(line: 114, column: 15, scope: !178)
!3129 = !DILocalVariable(name: "gname", scope: !178, file: !179, line: 115, type: !6)
!3130 = !DILocation(line: 115, column: 9, scope: !178)
!3131 = !DILocalVariable(name: "unum", scope: !178, file: !179, line: 116, type: !12)
!3132 = !DILocation(line: 116, column: 9, scope: !178)
!3133 = !DILocation(line: 116, column: 17, scope: !178)
!3134 = !DILocation(line: 116, column: 16, scope: !178)
!3135 = !DILocalVariable(name: "gnum", scope: !178, file: !179, line: 117, type: !21)
!3136 = !DILocation(line: 117, column: 9, scope: !178)
!3137 = !DILocation(line: 117, column: 16, scope: !178)
!3138 = !DILocation(line: 117, column: 23, scope: !178)
!3139 = !DILocation(line: 117, column: 22, scope: !178)
!3140 = !DILocation(line: 119, column: 13, scope: !178)
!3141 = !DILocation(line: 120, column: 7, scope: !3142)
!3142 = distinct !DILexicalBlock(scope: !178, file: !179, line: 120, column: 7)
!3143 = !DILocation(line: 120, column: 7, scope: !178)
!3144 = !DILocation(line: 121, column: 6, scope: !3142)
!3145 = !DILocation(line: 121, column: 15, scope: !3142)
!3146 = !DILocation(line: 121, column: 5, scope: !3142)
!3147 = !DILocation(line: 122, column: 7, scope: !3148)
!3148 = distinct !DILexicalBlock(scope: !178, file: !179, line: 122, column: 7)
!3149 = !DILocation(line: 122, column: 7, scope: !178)
!3150 = !DILocation(line: 123, column: 6, scope: !3148)
!3151 = !DILocation(line: 123, column: 16, scope: !3148)
!3152 = !DILocation(line: 123, column: 5, scope: !3148)
!3153 = !DILocation(line: 129, column: 5, scope: !178)
!3154 = !DILocation(line: 130, column: 7, scope: !3155)
!3155 = distinct !DILexicalBlock(scope: !178, file: !179, line: 130, column: 7)
!3156 = !DILocation(line: 130, column: 17, scope: !3155)
!3157 = !DILocation(line: 130, column: 7, scope: !178)
!3158 = !DILocation(line: 132, column: 12, scope: !3159)
!3159 = distinct !DILexicalBlock(scope: !3160, file: !179, line: 132, column: 11)
!3160 = distinct !DILexicalBlock(scope: !3155, file: !179, line: 131, column: 5)
!3161 = !DILocation(line: 132, column: 11, scope: !3159)
!3162 = !DILocation(line: 132, column: 11, scope: !3160)
!3163 = !DILocation(line: 133, column: 22, scope: !3159)
!3164 = !DILocation(line: 133, column: 13, scope: !3159)
!3165 = !DILocation(line: 133, column: 11, scope: !3159)
!3166 = !DILocation(line: 133, column: 9, scope: !3159)
!3167 = !DILocation(line: 134, column: 5, scope: !3160)
!3168 = !DILocalVariable(name: "ulen", scope: !3169, file: !179, line: 137, type: !134)
!3169 = distinct !DILexicalBlock(scope: !3155, file: !179, line: 136, column: 5)
!3170 = !DILocation(line: 137, column: 14, scope: !3169)
!3171 = !DILocation(line: 137, column: 21, scope: !3169)
!3172 = !DILocation(line: 137, column: 33, scope: !3169)
!3173 = !DILocation(line: 137, column: 31, scope: !3169)
!3174 = !DILocation(line: 138, column: 11, scope: !3175)
!3175 = distinct !DILexicalBlock(scope: !3169, file: !179, line: 138, column: 11)
!3176 = !DILocation(line: 138, column: 16, scope: !3175)
!3177 = !DILocation(line: 138, column: 11, scope: !3169)
!3178 = !DILocation(line: 140, column: 24, scope: !3179)
!3179 = distinct !DILexicalBlock(scope: !3175, file: !179, line: 139, column: 9)
!3180 = !DILocation(line: 140, column: 30, scope: !3179)
!3181 = !DILocation(line: 140, column: 35, scope: !3179)
!3182 = !DILocation(line: 140, column: 15, scope: !3179)
!3183 = !DILocation(line: 140, column: 13, scope: !3179)
!3184 = !DILocation(line: 141, column: 11, scope: !3179)
!3185 = !DILocation(line: 141, column: 13, scope: !3179)
!3186 = !DILocation(line: 141, column: 19, scope: !3179)
!3187 = !DILocation(line: 142, column: 9, scope: !3179)
!3188 = !DILocation(line: 145, column: 8, scope: !178)
!3189 = !DILocation(line: 145, column: 18, scope: !178)
!3190 = !DILocation(line: 145, column: 26, scope: !178)
!3191 = !DILocation(line: 145, column: 31, scope: !178)
!3192 = !DILocation(line: 145, column: 41, scope: !178)
!3193 = !DILocation(line: 145, column: 29, scope: !178)
!3194 = !DILocation(line: 145, column: 46, scope: !178)
!3195 = !DILocation(line: 147, column: 10, scope: !178)
!3196 = !DILocation(line: 147, column: 20, scope: !178)
!3197 = !DILocation(line: 145, column: 5, scope: !178)
!3198 = !DILocation(line: 158, column: 7, scope: !3199)
!3199 = distinct !DILexicalBlock(scope: !178, file: !179, line: 158, column: 7)
!3200 = !DILocation(line: 158, column: 9, scope: !3199)
!3201 = !DILocation(line: 158, column: 7, scope: !178)
!3202 = !DILocation(line: 161, column: 15, scope: !3203)
!3203 = distinct !DILexicalBlock(scope: !3199, file: !179, line: 159, column: 5)
!3204 = !DILocation(line: 161, column: 14, scope: !3203)
!3205 = !DILocation(line: 161, column: 17, scope: !3203)
!3206 = !DILocation(line: 161, column: 43, scope: !3203)
!3207 = !DILocation(line: 161, column: 33, scope: !3203)
!3208 = !DILocation(line: 161, column: 11, scope: !3203)
!3209 = !DILocation(line: 162, column: 11, scope: !3210)
!3210 = distinct !DILexicalBlock(scope: !3203, file: !179, line: 162, column: 11)
!3211 = !DILocation(line: 162, column: 15, scope: !3210)
!3212 = !DILocation(line: 162, column: 11, scope: !3203)
!3213 = !DILocalVariable(name: "use_login_group", scope: !3214, file: !179, line: 164, type: !27)
!3214 = distinct !DILexicalBlock(scope: !3210, file: !179, line: 163, column: 9)
!3215 = !DILocation(line: 164, column: 16, scope: !3214)
!3216 = !DILocation(line: 164, column: 35, scope: !3214)
!3217 = !DILocation(line: 164, column: 45, scope: !3214)
!3218 = !DILocation(line: 164, column: 53, scope: !3214)
!3219 = !DILocation(line: 164, column: 56, scope: !3214)
!3220 = !DILocation(line: 164, column: 58, scope: !3214)
!3221 = !DILocation(line: 0, scope: !3214)
!3222 = !DILocation(line: 165, column: 15, scope: !3223)
!3223 = distinct !DILexicalBlock(scope: !3214, file: !179, line: 165, column: 15)
!3224 = !DILocation(line: 165, column: 15, scope: !3214)
!3225 = !DILocation(line: 169, column: 27, scope: !3226)
!3226 = distinct !DILexicalBlock(scope: !3223, file: !179, line: 166, column: 13)
!3227 = !DILocation(line: 169, column: 25, scope: !3226)
!3228 = !DILocation(line: 170, column: 13, scope: !3226)
!3229 = !DILocalVariable(name: "tmp", scope: !3230, file: !179, line: 173, type: !84)
!3230 = distinct !DILexicalBlock(scope: !3223, file: !179, line: 172, column: 13)
!3231 = !DILocation(line: 173, column: 33, scope: !3230)
!3232 = !DILocation(line: 174, column: 29, scope: !3233)
!3233 = distinct !DILexicalBlock(scope: !3230, file: !179, line: 174, column: 19)
!3234 = !DILocation(line: 174, column: 19, scope: !3233)
!3235 = !DILocation(line: 174, column: 52, scope: !3233)
!3236 = !DILocation(line: 175, column: 19, scope: !3233)
!3237 = !DILocation(line: 175, column: 22, scope: !3233)
!3238 = !DILocation(line: 175, column: 26, scope: !3233)
!3239 = !DILocation(line: 175, column: 36, scope: !3233)
!3240 = !DILocation(line: 175, column: 47, scope: !3233)
!3241 = !DILocation(line: 175, column: 39, scope: !3233)
!3242 = !DILocation(line: 175, column: 51, scope: !3233)
!3243 = !DILocation(line: 174, column: 19, scope: !3230)
!3244 = !DILocation(line: 176, column: 24, scope: !3233)
!3245 = !DILocation(line: 176, column: 22, scope: !3233)
!3246 = !DILocation(line: 176, column: 17, scope: !3233)
!3247 = !DILocation(line: 178, column: 29, scope: !3233)
!3248 = !DILocation(line: 178, column: 27, scope: !3233)
!3249 = !DILocation(line: 180, column: 9, scope: !3214)
!3250 = !DILocation(line: 183, column: 18, scope: !3251)
!3251 = distinct !DILexicalBlock(scope: !3210, file: !179, line: 182, column: 9)
!3252 = !DILocation(line: 183, column: 23, scope: !3251)
!3253 = !DILocation(line: 183, column: 16, scope: !3251)
!3254 = !DILocation(line: 184, column: 15, scope: !3255)
!3255 = distinct !DILexicalBlock(scope: !3251, file: !179, line: 184, column: 15)
!3256 = !DILocation(line: 184, column: 17, scope: !3255)
!3257 = !DILocation(line: 184, column: 25, scope: !3255)
!3258 = !DILocation(line: 184, column: 28, scope: !3255)
!3259 = !DILocation(line: 184, column: 38, scope: !3255)
!3260 = !DILocation(line: 184, column: 15, scope: !3251)
!3261 = !DILocalVariable(name: "buf", scope: !3262, file: !179, line: 188, type: !53)
!3262 = distinct !DILexicalBlock(scope: !3255, file: !179, line: 185, column: 13)
!3263 = !DILocation(line: 188, column: 20, scope: !3262)
!3264 = !DILocation(line: 189, column: 22, scope: !3262)
!3265 = !DILocation(line: 189, column: 27, scope: !3262)
!3266 = !DILocation(line: 189, column: 20, scope: !3262)
!3267 = !DILocation(line: 190, column: 31, scope: !3262)
!3268 = !DILocation(line: 190, column: 21, scope: !3262)
!3269 = !DILocation(line: 190, column: 19, scope: !3262)
!3270 = !DILocation(line: 191, column: 32, scope: !3262)
!3271 = !DILocation(line: 191, column: 38, scope: !3262)
!3272 = !DILocation(line: 191, column: 43, scope: !3262)
!3273 = !DILocation(line: 191, column: 64, scope: !3262)
!3274 = !DILocation(line: 191, column: 70, scope: !3262)
!3275 = !DILocation(line: 191, column: 53, scope: !3262)
!3276 = !DILocation(line: 191, column: 23, scope: !3262)
!3277 = !DILocation(line: 191, column: 21, scope: !3262)
!3278 = !DILocation(line: 192, column: 15, scope: !3262)
!3279 = !DILocation(line: 193, column: 13, scope: !3262)
!3280 = !DILocation(line: 195, column: 7, scope: !3203)
!3281 = !DILocation(line: 196, column: 5, scope: !3203)
!3282 = !DILocation(line: 198, column: 7, scope: !3283)
!3283 = distinct !DILexicalBlock(scope: !178, file: !179, line: 198, column: 7)
!3284 = !DILocation(line: 198, column: 9, scope: !3283)
!3285 = !DILocation(line: 198, column: 17, scope: !3283)
!3286 = !DILocation(line: 198, column: 20, scope: !3283)
!3287 = !DILocation(line: 198, column: 30, scope: !3283)
!3288 = !DILocation(line: 198, column: 7, scope: !178)
!3289 = !DILocation(line: 202, column: 15, scope: !3290)
!3290 = distinct !DILexicalBlock(scope: !3283, file: !179, line: 199, column: 5)
!3291 = !DILocation(line: 202, column: 14, scope: !3290)
!3292 = !DILocation(line: 202, column: 17, scope: !3290)
!3293 = !DILocation(line: 202, column: 43, scope: !3290)
!3294 = !DILocation(line: 202, column: 33, scope: !3290)
!3295 = !DILocation(line: 202, column: 11, scope: !3290)
!3296 = !DILocation(line: 203, column: 11, scope: !3297)
!3297 = distinct !DILexicalBlock(scope: !3290, file: !179, line: 203, column: 11)
!3298 = !DILocation(line: 203, column: 15, scope: !3297)
!3299 = !DILocation(line: 203, column: 11, scope: !3290)
!3300 = !DILocalVariable(name: "tmp", scope: !3301, file: !179, line: 205, type: !84)
!3301 = distinct !DILexicalBlock(scope: !3297, file: !179, line: 204, column: 9)
!3302 = !DILocation(line: 205, column: 29, scope: !3301)
!3303 = !DILocation(line: 206, column: 25, scope: !3304)
!3304 = distinct !DILexicalBlock(scope: !3301, file: !179, line: 206, column: 15)
!3305 = !DILocation(line: 206, column: 15, scope: !3304)
!3306 = !DILocation(line: 206, column: 48, scope: !3304)
!3307 = !DILocation(line: 207, column: 15, scope: !3304)
!3308 = !DILocation(line: 207, column: 18, scope: !3304)
!3309 = !DILocation(line: 207, column: 22, scope: !3304)
!3310 = !DILocation(line: 207, column: 32, scope: !3304)
!3311 = !DILocation(line: 207, column: 43, scope: !3304)
!3312 = !DILocation(line: 207, column: 35, scope: !3304)
!3313 = !DILocation(line: 207, column: 47, scope: !3304)
!3314 = !DILocation(line: 206, column: 15, scope: !3301)
!3315 = !DILocation(line: 208, column: 20, scope: !3304)
!3316 = !DILocation(line: 208, column: 18, scope: !3304)
!3317 = !DILocation(line: 208, column: 13, scope: !3304)
!3318 = !DILocation(line: 210, column: 25, scope: !3304)
!3319 = !DILocation(line: 210, column: 23, scope: !3304)
!3320 = !DILocation(line: 211, column: 9, scope: !3301)
!3321 = !DILocation(line: 213, column: 16, scope: !3297)
!3322 = !DILocation(line: 213, column: 21, scope: !3297)
!3323 = !DILocation(line: 213, column: 14, scope: !3297)
!3324 = !DILocation(line: 214, column: 7, scope: !3290)
!3325 = !DILocation(line: 215, column: 24, scope: !3290)
!3326 = !DILocation(line: 215, column: 15, scope: !3290)
!3327 = !DILocation(line: 215, column: 13, scope: !3290)
!3328 = !DILocation(line: 216, column: 5, scope: !3290)
!3329 = !DILocation(line: 218, column: 7, scope: !3330)
!3330 = distinct !DILexicalBlock(scope: !178, file: !179, line: 218, column: 7)
!3331 = !DILocation(line: 218, column: 17, scope: !3330)
!3332 = !DILocation(line: 218, column: 7, scope: !178)
!3333 = !DILocation(line: 220, column: 14, scope: !3334)
!3334 = distinct !DILexicalBlock(scope: !3330, file: !179, line: 219, column: 5)
!3335 = !DILocation(line: 220, column: 8, scope: !3334)
!3336 = !DILocation(line: 220, column: 12, scope: !3334)
!3337 = !DILocation(line: 221, column: 11, scope: !3338)
!3338 = distinct !DILexicalBlock(scope: !3334, file: !179, line: 221, column: 11)
!3339 = !DILocation(line: 221, column: 11, scope: !3334)
!3340 = !DILocation(line: 222, column: 16, scope: !3338)
!3341 = !DILocation(line: 222, column: 10, scope: !3338)
!3342 = !DILocation(line: 222, column: 14, scope: !3338)
!3343 = !DILocation(line: 222, column: 9, scope: !3338)
!3344 = !DILocation(line: 223, column: 11, scope: !3345)
!3345 = distinct !DILexicalBlock(scope: !3334, file: !179, line: 223, column: 11)
!3346 = !DILocation(line: 223, column: 11, scope: !3334)
!3347 = !DILocation(line: 225, column: 23, scope: !3348)
!3348 = distinct !DILexicalBlock(scope: !3345, file: !179, line: 224, column: 9)
!3349 = !DILocation(line: 225, column: 12, scope: !3348)
!3350 = !DILocation(line: 225, column: 21, scope: !3348)
!3351 = !DILocation(line: 226, column: 13, scope: !3348)
!3352 = !DILocation(line: 227, column: 9, scope: !3348)
!3353 = !DILocation(line: 228, column: 11, scope: !3354)
!3354 = distinct !DILexicalBlock(scope: !3334, file: !179, line: 228, column: 11)
!3355 = !DILocation(line: 228, column: 11, scope: !3334)
!3356 = !DILocation(line: 230, column: 24, scope: !3357)
!3357 = distinct !DILexicalBlock(scope: !3354, file: !179, line: 229, column: 9)
!3358 = !DILocation(line: 230, column: 12, scope: !3357)
!3359 = !DILocation(line: 230, column: 22, scope: !3357)
!3360 = !DILocation(line: 231, column: 17, scope: !3357)
!3361 = !DILocation(line: 232, column: 9, scope: !3357)
!3362 = !DILocation(line: 233, column: 5, scope: !3334)
!3363 = !DILocation(line: 235, column: 9, scope: !178)
!3364 = !DILocation(line: 235, column: 3, scope: !178)
!3365 = !DILocation(line: 236, column: 9, scope: !178)
!3366 = !DILocation(line: 236, column: 3, scope: !178)
!3367 = !DILocation(line: 237, column: 10, scope: !178)
!3368 = !DILocation(line: 237, column: 22, scope: !178)
!3369 = !DILocation(line: 237, column: 3, scope: !178)
!3370 = !DILocalVariable(name: "spec", arg: 1, scope: !3371, file: !179, line: 102, type: !69)
!3371 = distinct !DISubprogram(name: "parse_with_separator", scope: !179, file: !179, line: 102, type: !180, scopeLine: 105, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3372, retainedNodes: !4)
!3372 = distinct !DICompileUnit(language: DW_LANG_C99, file: !186, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !187, globals: !3373, nameTableKind: None)
!3373 = !{!3374, !3376, !3378}
!3374 = !DIGlobalVariableExpression(var: !3375, expr: !DIExpression())
!3375 = distinct !DIGlobalVariable(name: "E_invalid_user", scope: !3371, file: !179, line: 106, type: !69, isLocal: true, isDefinition: true)
!3376 = !DIGlobalVariableExpression(var: !3377, expr: !DIExpression())
!3377 = distinct !DIGlobalVariable(name: "E_invalid_group", scope: !3371, file: !179, line: 107, type: !69, isLocal: true, isDefinition: true)
!3378 = !DIGlobalVariableExpression(var: !3379, expr: !DIExpression())
!3379 = distinct !DIGlobalVariable(name: "E_bad_spec", scope: !3371, file: !179, line: 108, type: !69, isLocal: true, isDefinition: true)
!3380 = !DILocalVariable(name: "separator", arg: 2, scope: !3371, file: !179, line: 102, type: !69)
!3381 = !DILocalVariable(name: "uid", arg: 3, scope: !3371, file: !179, line: 103, type: !182)
!3382 = !DILocalVariable(name: "gid", arg: 4, scope: !3371, file: !179, line: 103, type: !183)
!3383 = !DILocalVariable(name: "username", arg: 5, scope: !3371, file: !179, line: 104, type: !184)
!3384 = !DILocalVariable(name: "groupname", arg: 6, scope: !3371, file: !179, line: 104, type: !184)
!3385 = !DILocalVariable(name: "error_msg", scope: !3371, file: !179, line: 110, type: !69)
!3386 = !DILocalVariable(name: "pwd", scope: !3371, file: !179, line: 111, type: !3387)
!3387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3388, size: 64)
!3388 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "passwd", file: !553, line: 49, size: 384, elements: !3389)
!3389 = !{!3390, !3391, !3392, !3393, !3394, !3395, !3396}
!3390 = !DIDerivedType(tag: DW_TAG_member, name: "pw_name", scope: !3388, file: !553, line: 51, baseType: !6, size: 64)
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "pw_passwd", scope: !3388, file: !553, line: 52, baseType: !6, size: 64, offset: 64)
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "pw_uid", scope: !3388, file: !553, line: 54, baseType: !14, size: 32, offset: 128)
!3393 = !DIDerivedType(tag: DW_TAG_member, name: "pw_gid", scope: !3388, file: !553, line: 55, baseType: !22, size: 32, offset: 160)
!3394 = !DIDerivedType(tag: DW_TAG_member, name: "pw_gecos", scope: !3388, file: !553, line: 56, baseType: !6, size: 64, offset: 192)
!3395 = !DIDerivedType(tag: DW_TAG_member, name: "pw_dir", scope: !3388, file: !553, line: 57, baseType: !6, size: 64, offset: 256)
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "pw_shell", scope: !3388, file: !553, line: 58, baseType: !6, size: 64, offset: 320)
!3397 = !DILocalVariable(name: "grp", scope: !3371, file: !179, line: 112, type: !3398)
!3398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3399, size: 64)
!3399 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group", file: !1077, line: 42, size: 256, elements: !3400)
!3400 = !{!3401, !3402, !3403, !3404}
!3401 = !DIDerivedType(tag: DW_TAG_member, name: "gr_name", scope: !3399, file: !1077, line: 44, baseType: !6, size: 64)
!3402 = !DIDerivedType(tag: DW_TAG_member, name: "gr_passwd", scope: !3399, file: !1077, line: 45, baseType: !6, size: 64, offset: 64)
!3403 = !DIDerivedType(tag: DW_TAG_member, name: "gr_gid", scope: !3399, file: !1077, line: 46, baseType: !22, size: 32, offset: 128)
!3404 = !DIDerivedType(tag: DW_TAG_member, name: "gr_mem", scope: !3399, file: !1077, line: 47, baseType: !184, size: 64, offset: 192)
!3405 = !DILocalVariable(name: "u", scope: !3371, file: !179, line: 113, type: !6)
!3406 = !DILocalVariable(name: "g", scope: !3371, file: !179, line: 114, type: !69)
!3407 = !DILocalVariable(name: "gname", scope: !3371, file: !179, line: 115, type: !6)
!3408 = !DILocalVariable(name: "unum", scope: !3371, file: !179, line: 116, type: !12)
!3409 = !DILocalVariable(name: "gnum", scope: !3371, file: !179, line: 117, type: !21)
!3410 = distinct !DISubprogram(name: "version_etc_arn", scope: !3411, file: !3411, line: 61, type: !3412, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !210, retainedNodes: !4)
!3411 = !DIFile(filename: "lib/version-etc.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!3412 = !DISubroutineType(types: !3413)
!3413 = !{null, !3414, !69, !69, !69, !3467, !134}
!3414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3415, size: 64)
!3415 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !3416, line: 7, baseType: !3417)
!3416 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "")
!3417 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !3418, line: 49, size: 1728, elements: !3419)
!3418 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "")
!3419 = !{!3420, !3421, !3422, !3423, !3424, !3425, !3426, !3427, !3428, !3429, !3430, !3431, !3432, !3435, !3437, !3438, !3439, !3441, !3442, !3444, !3448, !3451, !3453, !3456, !3459, !3460, !3461, !3462, !3463}
!3420 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !3417, file: !3418, line: 51, baseType: !72, size: 32)
!3421 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !3417, file: !3418, line: 54, baseType: !6, size: 64, offset: 64)
!3422 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !3417, file: !3418, line: 55, baseType: !6, size: 64, offset: 128)
!3423 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !3417, file: !3418, line: 56, baseType: !6, size: 64, offset: 192)
!3424 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !3417, file: !3418, line: 57, baseType: !6, size: 64, offset: 256)
!3425 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !3417, file: !3418, line: 58, baseType: !6, size: 64, offset: 320)
!3426 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !3417, file: !3418, line: 59, baseType: !6, size: 64, offset: 384)
!3427 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !3417, file: !3418, line: 60, baseType: !6, size: 64, offset: 448)
!3428 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !3417, file: !3418, line: 61, baseType: !6, size: 64, offset: 512)
!3429 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !3417, file: !3418, line: 64, baseType: !6, size: 64, offset: 576)
!3430 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !3417, file: !3418, line: 65, baseType: !6, size: 64, offset: 640)
!3431 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !3417, file: !3418, line: 66, baseType: !6, size: 64, offset: 704)
!3432 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !3417, file: !3418, line: 68, baseType: !3433, size: 64, offset: 768)
!3433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3434, size: 64)
!3434 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !3418, line: 36, flags: DIFlagFwdDecl)
!3435 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !3417, file: !3418, line: 70, baseType: !3436, size: 64, offset: 832)
!3436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3417, size: 64)
!3437 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !3417, file: !3418, line: 72, baseType: !72, size: 32, offset: 896)
!3438 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !3417, file: !3418, line: 73, baseType: !72, size: 32, offset: 928)
!3439 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !3417, file: !3418, line: 74, baseType: !3440, size: 64, offset: 960)
!3440 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !15, line: 152, baseType: !825)
!3441 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !3417, file: !3418, line: 77, baseType: !133, size: 16, offset: 1024)
!3442 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !3417, file: !3418, line: 78, baseType: !3443, size: 8, offset: 1040)
!3443 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!3444 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !3417, file: !3418, line: 79, baseType: !3445, size: 8, offset: 1048)
!3445 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 8, elements: !3446)
!3446 = !{!3447}
!3447 = !DISubrange(count: 1)
!3448 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !3417, file: !3418, line: 81, baseType: !3449, size: 64, offset: 1088)
!3449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3450, size: 64)
!3450 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !3418, line: 43, baseType: null)
!3451 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !3417, file: !3418, line: 89, baseType: !3452, size: 64, offset: 1152)
!3452 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !15, line: 153, baseType: !825)
!3453 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !3417, file: !3418, line: 91, baseType: !3454, size: 64, offset: 1216)
!3454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3455, size: 64)
!3455 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !3418, line: 37, flags: DIFlagFwdDecl)
!3456 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !3417, file: !3418, line: 92, baseType: !3457, size: 64, offset: 1280)
!3457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3458, size: 64)
!3458 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !3418, line: 38, flags: DIFlagFwdDecl)
!3459 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !3417, file: !3418, line: 93, baseType: !3436, size: 64, offset: 1344)
!3460 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !3417, file: !3418, line: 94, baseType: !8, size: 64, offset: 1408)
!3461 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !3417, file: !3418, line: 95, baseType: !134, size: 64, offset: 1472)
!3462 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !3417, file: !3418, line: 96, baseType: !72, size: 32, offset: 1536)
!3463 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !3417, file: !3418, line: 98, baseType: !3464, size: 160, offset: 1568)
!3464 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 160, elements: !3465)
!3465 = !{!3466}
!3466 = !DISubrange(count: 20)
!3467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !141, size: 64)
!3468 = !DILocalVariable(name: "stream", arg: 1, scope: !3410, file: !3411, line: 61, type: !3414)
!3469 = !DILocation(line: 61, column: 24, scope: !3410)
!3470 = !DILocalVariable(name: "command_name", arg: 2, scope: !3410, file: !3411, line: 62, type: !69)
!3471 = !DILocation(line: 62, column: 30, scope: !3410)
!3472 = !DILocalVariable(name: "package", arg: 3, scope: !3410, file: !3411, line: 62, type: !69)
!3473 = !DILocation(line: 62, column: 56, scope: !3410)
!3474 = !DILocalVariable(name: "version", arg: 4, scope: !3410, file: !3411, line: 63, type: !69)
!3475 = !DILocation(line: 63, column: 30, scope: !3410)
!3476 = !DILocalVariable(name: "authors", arg: 5, scope: !3410, file: !3411, line: 64, type: !3467)
!3477 = !DILocation(line: 64, column: 39, scope: !3410)
!3478 = !DILocalVariable(name: "n_authors", arg: 6, scope: !3410, file: !3411, line: 64, type: !134)
!3479 = !DILocation(line: 64, column: 55, scope: !3410)
!3480 = !DILocation(line: 66, column: 7, scope: !3481)
!3481 = distinct !DILexicalBlock(scope: !3410, file: !3411, line: 66, column: 7)
!3482 = !DILocation(line: 66, column: 7, scope: !3410)
!3483 = !DILocation(line: 67, column: 14, scope: !3481)
!3484 = !DILocation(line: 67, column: 38, scope: !3481)
!3485 = !DILocation(line: 67, column: 52, scope: !3481)
!3486 = !DILocation(line: 67, column: 61, scope: !3481)
!3487 = !DILocation(line: 67, column: 5, scope: !3481)
!3488 = !DILocation(line: 69, column: 14, scope: !3481)
!3489 = !DILocation(line: 69, column: 33, scope: !3481)
!3490 = !DILocation(line: 69, column: 42, scope: !3481)
!3491 = !DILocation(line: 69, column: 5, scope: !3481)
!3492 = !DILocation(line: 83, column: 12, scope: !3410)
!3493 = !DILocation(line: 83, column: 43, scope: !3410)
!3494 = !DILocation(line: 83, column: 3, scope: !3410)
!3495 = !DILocation(line: 85, column: 3, scope: !3410)
!3496 = !DILocation(line: 88, column: 12, scope: !3410)
!3497 = !DILocation(line: 88, column: 20, scope: !3410)
!3498 = !DILocation(line: 88, column: 3, scope: !3410)
!3499 = !DILocation(line: 95, column: 3, scope: !3410)
!3500 = !DILocation(line: 97, column: 11, scope: !3410)
!3501 = !DILocation(line: 97, column: 3, scope: !3410)
!3502 = !DILocation(line: 102, column: 7, scope: !3503)
!3503 = distinct !DILexicalBlock(scope: !3410, file: !3411, line: 98, column: 5)
!3504 = !DILocation(line: 105, column: 16, scope: !3503)
!3505 = !DILocation(line: 105, column: 24, scope: !3503)
!3506 = !DILocation(line: 105, column: 47, scope: !3503)
!3507 = !DILocation(line: 105, column: 7, scope: !3503)
!3508 = !DILocation(line: 106, column: 7, scope: !3503)
!3509 = !DILocation(line: 109, column: 16, scope: !3503)
!3510 = !DILocation(line: 109, column: 24, scope: !3503)
!3511 = !DILocation(line: 109, column: 54, scope: !3503)
!3512 = !DILocation(line: 109, column: 66, scope: !3503)
!3513 = !DILocation(line: 109, column: 7, scope: !3503)
!3514 = !DILocation(line: 110, column: 7, scope: !3503)
!3515 = !DILocation(line: 113, column: 16, scope: !3503)
!3516 = !DILocation(line: 113, column: 24, scope: !3503)
!3517 = !DILocation(line: 114, column: 16, scope: !3503)
!3518 = !DILocation(line: 114, column: 28, scope: !3503)
!3519 = !DILocation(line: 114, column: 40, scope: !3503)
!3520 = !DILocation(line: 113, column: 7, scope: !3503)
!3521 = !DILocation(line: 115, column: 7, scope: !3503)
!3522 = !DILocation(line: 120, column: 16, scope: !3503)
!3523 = !DILocation(line: 120, column: 24, scope: !3503)
!3524 = !DILocation(line: 121, column: 16, scope: !3503)
!3525 = !DILocation(line: 121, column: 28, scope: !3503)
!3526 = !DILocation(line: 121, column: 40, scope: !3503)
!3527 = !DILocation(line: 121, column: 52, scope: !3503)
!3528 = !DILocation(line: 120, column: 7, scope: !3503)
!3529 = !DILocation(line: 122, column: 7, scope: !3503)
!3530 = !DILocation(line: 127, column: 16, scope: !3503)
!3531 = !DILocation(line: 127, column: 24, scope: !3503)
!3532 = !DILocation(line: 128, column: 16, scope: !3503)
!3533 = !DILocation(line: 128, column: 28, scope: !3503)
!3534 = !DILocation(line: 128, column: 40, scope: !3503)
!3535 = !DILocation(line: 128, column: 52, scope: !3503)
!3536 = !DILocation(line: 128, column: 64, scope: !3503)
!3537 = !DILocation(line: 127, column: 7, scope: !3503)
!3538 = !DILocation(line: 129, column: 7, scope: !3503)
!3539 = !DILocation(line: 134, column: 16, scope: !3503)
!3540 = !DILocation(line: 134, column: 24, scope: !3503)
!3541 = !DILocation(line: 135, column: 16, scope: !3503)
!3542 = !DILocation(line: 135, column: 28, scope: !3503)
!3543 = !DILocation(line: 135, column: 40, scope: !3503)
!3544 = !DILocation(line: 135, column: 52, scope: !3503)
!3545 = !DILocation(line: 135, column: 64, scope: !3503)
!3546 = !DILocation(line: 136, column: 16, scope: !3503)
!3547 = !DILocation(line: 134, column: 7, scope: !3503)
!3548 = !DILocation(line: 137, column: 7, scope: !3503)
!3549 = !DILocation(line: 142, column: 16, scope: !3503)
!3550 = !DILocation(line: 142, column: 24, scope: !3503)
!3551 = !DILocation(line: 143, column: 16, scope: !3503)
!3552 = !DILocation(line: 143, column: 28, scope: !3503)
!3553 = !DILocation(line: 143, column: 40, scope: !3503)
!3554 = !DILocation(line: 143, column: 52, scope: !3503)
!3555 = !DILocation(line: 143, column: 64, scope: !3503)
!3556 = !DILocation(line: 144, column: 16, scope: !3503)
!3557 = !DILocation(line: 144, column: 28, scope: !3503)
!3558 = !DILocation(line: 142, column: 7, scope: !3503)
!3559 = !DILocation(line: 145, column: 7, scope: !3503)
!3560 = !DILocation(line: 150, column: 16, scope: !3503)
!3561 = !DILocation(line: 150, column: 24, scope: !3503)
!3562 = !DILocation(line: 152, column: 17, scope: !3503)
!3563 = !DILocation(line: 152, column: 29, scope: !3503)
!3564 = !DILocation(line: 152, column: 41, scope: !3503)
!3565 = !DILocation(line: 152, column: 53, scope: !3503)
!3566 = !DILocation(line: 152, column: 65, scope: !3503)
!3567 = !DILocation(line: 153, column: 17, scope: !3503)
!3568 = !DILocation(line: 153, column: 29, scope: !3503)
!3569 = !DILocation(line: 153, column: 41, scope: !3503)
!3570 = !DILocation(line: 150, column: 7, scope: !3503)
!3571 = !DILocation(line: 154, column: 7, scope: !3503)
!3572 = !DILocation(line: 159, column: 16, scope: !3503)
!3573 = !DILocation(line: 159, column: 24, scope: !3503)
!3574 = !DILocation(line: 161, column: 16, scope: !3503)
!3575 = !DILocation(line: 161, column: 28, scope: !3503)
!3576 = !DILocation(line: 161, column: 40, scope: !3503)
!3577 = !DILocation(line: 161, column: 52, scope: !3503)
!3578 = !DILocation(line: 161, column: 64, scope: !3503)
!3579 = !DILocation(line: 162, column: 16, scope: !3503)
!3580 = !DILocation(line: 162, column: 28, scope: !3503)
!3581 = !DILocation(line: 162, column: 40, scope: !3503)
!3582 = !DILocation(line: 162, column: 52, scope: !3503)
!3583 = !DILocation(line: 159, column: 7, scope: !3503)
!3584 = !DILocation(line: 163, column: 7, scope: !3503)
!3585 = !DILocation(line: 170, column: 16, scope: !3503)
!3586 = !DILocation(line: 170, column: 24, scope: !3503)
!3587 = !DILocation(line: 172, column: 17, scope: !3503)
!3588 = !DILocation(line: 172, column: 29, scope: !3503)
!3589 = !DILocation(line: 172, column: 41, scope: !3503)
!3590 = !DILocation(line: 172, column: 53, scope: !3503)
!3591 = !DILocation(line: 172, column: 65, scope: !3503)
!3592 = !DILocation(line: 173, column: 17, scope: !3503)
!3593 = !DILocation(line: 173, column: 29, scope: !3503)
!3594 = !DILocation(line: 173, column: 41, scope: !3503)
!3595 = !DILocation(line: 173, column: 53, scope: !3503)
!3596 = !DILocation(line: 170, column: 7, scope: !3503)
!3597 = !DILocation(line: 174, column: 7, scope: !3503)
!3598 = !DILocation(line: 176, column: 1, scope: !3410)
!3599 = distinct !DISubprogram(name: "version_etc_va", scope: !3411, file: !3411, line: 199, type: !3600, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !210, retainedNodes: !4)
!3600 = !DISubroutineType(types: !3601)
!3601 = !{null, !3414, !69, !69, !69, !3602}
!3602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3603, size: 64)
!3603 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !211, line: 192, size: 192, elements: !3604)
!3604 = !{!3605, !3606, !3607, !3608}
!3605 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !3603, file: !211, line: 192, baseType: !16, size: 32)
!3606 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !3603, file: !211, line: 192, baseType: !16, size: 32, offset: 32)
!3607 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !3603, file: !211, line: 192, baseType: !8, size: 64, offset: 64)
!3608 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !3603, file: !211, line: 192, baseType: !8, size: 64, offset: 128)
!3609 = !DILocalVariable(name: "stream", arg: 1, scope: !3599, file: !3411, line: 199, type: !3414)
!3610 = !DILocation(line: 199, column: 23, scope: !3599)
!3611 = !DILocalVariable(name: "command_name", arg: 2, scope: !3599, file: !3411, line: 200, type: !69)
!3612 = !DILocation(line: 200, column: 29, scope: !3599)
!3613 = !DILocalVariable(name: "package", arg: 3, scope: !3599, file: !3411, line: 200, type: !69)
!3614 = !DILocation(line: 200, column: 55, scope: !3599)
!3615 = !DILocalVariable(name: "version", arg: 4, scope: !3599, file: !3411, line: 201, type: !69)
!3616 = !DILocation(line: 201, column: 29, scope: !3599)
!3617 = !DILocalVariable(name: "authors", arg: 5, scope: !3599, file: !3411, line: 201, type: !3602)
!3618 = !DILocation(line: 201, column: 46, scope: !3599)
!3619 = !DILocalVariable(name: "n_authors", scope: !3599, file: !3411, line: 203, type: !134)
!3620 = !DILocation(line: 203, column: 10, scope: !3599)
!3621 = !DILocalVariable(name: "authtab", scope: !3599, file: !3411, line: 204, type: !3622)
!3622 = !DICompositeType(tag: DW_TAG_array_type, baseType: !69, size: 640, elements: !76)
!3623 = !DILocation(line: 204, column: 15, scope: !3599)
!3624 = !DILocation(line: 206, column: 18, scope: !3625)
!3625 = distinct !DILexicalBlock(scope: !3599, file: !3411, line: 206, column: 3)
!3626 = !DILocation(line: 206, column: 8, scope: !3625)
!3627 = !DILocation(line: 207, column: 8, scope: !3628)
!3628 = distinct !DILexicalBlock(scope: !3625, file: !3411, line: 206, column: 3)
!3629 = !DILocation(line: 207, column: 18, scope: !3628)
!3630 = !DILocation(line: 208, column: 10, scope: !3628)
!3631 = !DILocation(line: 208, column: 35, scope: !3628)
!3632 = !DILocation(line: 208, column: 22, scope: !3628)
!3633 = !DILocation(line: 208, column: 14, scope: !3628)
!3634 = !DILocation(line: 208, column: 33, scope: !3628)
!3635 = !DILocation(line: 208, column: 67, scope: !3628)
!3636 = !DILocation(line: 0, scope: !3628)
!3637 = !DILocation(line: 206, column: 3, scope: !3625)
!3638 = !DILocation(line: 209, column: 17, scope: !3628)
!3639 = !DILocation(line: 206, column: 3, scope: !3628)
!3640 = distinct !{!3640, !3637, !3641}
!3641 = !DILocation(line: 210, column: 5, scope: !3625)
!3642 = !DILocation(line: 211, column: 20, scope: !3599)
!3643 = !DILocation(line: 211, column: 28, scope: !3599)
!3644 = !DILocation(line: 211, column: 42, scope: !3599)
!3645 = !DILocation(line: 211, column: 51, scope: !3599)
!3646 = !DILocation(line: 212, column: 20, scope: !3599)
!3647 = !DILocation(line: 212, column: 29, scope: !3599)
!3648 = !DILocation(line: 211, column: 3, scope: !3599)
!3649 = !DILocation(line: 213, column: 1, scope: !3599)
!3650 = distinct !DISubprogram(name: "version_etc", scope: !3411, file: !3411, line: 230, type: !3651, scopeLine: 233, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !210, retainedNodes: !4)
!3651 = !DISubroutineType(types: !3652)
!3652 = !{null, !3414, !69, !69, !69, null}
!3653 = !DILocalVariable(name: "stream", arg: 1, scope: !3650, file: !3411, line: 230, type: !3414)
!3654 = !DILocation(line: 230, column: 20, scope: !3650)
!3655 = !DILocalVariable(name: "command_name", arg: 2, scope: !3650, file: !3411, line: 231, type: !69)
!3656 = !DILocation(line: 231, column: 26, scope: !3650)
!3657 = !DILocalVariable(name: "package", arg: 3, scope: !3650, file: !3411, line: 231, type: !69)
!3658 = !DILocation(line: 231, column: 52, scope: !3650)
!3659 = !DILocalVariable(name: "version", arg: 4, scope: !3650, file: !3411, line: 232, type: !69)
!3660 = !DILocation(line: 232, column: 26, scope: !3650)
!3661 = !DILocalVariable(name: "authors", scope: !3650, file: !3411, line: 234, type: !3662)
!3662 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !823, line: 52, baseType: !3663)
!3663 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3664, line: 32, baseType: !3665)
!3664 = !DIFile(filename: "/usr/lib/llvm-9/lib/clang/9.0.1/include/stdarg.h", directory: "")
!3665 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !211, line: 234, baseType: !3666)
!3666 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3603, size: 192, elements: !3446)
!3667 = !DILocation(line: 234, column: 11, scope: !3650)
!3668 = !DILocation(line: 236, column: 3, scope: !3650)
!3669 = !DILocation(line: 237, column: 19, scope: !3650)
!3670 = !DILocation(line: 237, column: 27, scope: !3650)
!3671 = !DILocation(line: 237, column: 41, scope: !3650)
!3672 = !DILocation(line: 237, column: 50, scope: !3650)
!3673 = !DILocation(line: 237, column: 59, scope: !3650)
!3674 = !DILocation(line: 237, column: 3, scope: !3650)
!3675 = !DILocation(line: 238, column: 3, scope: !3650)
!3676 = !DILocation(line: 239, column: 1, scope: !3650)
!3677 = !DILocalVariable(name: "stream", arg: 1, scope: !3678, file: !3411, line: 230, type: !3681)
!3678 = distinct !DISubprogram(name: "version_etc", scope: !3411, file: !3411, line: 230, type: !3679, scopeLine: 233, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3715, retainedNodes: !4)
!3679 = !DISubroutineType(types: !3680)
!3680 = !{null, !3681, !69, !69, !69, null}
!3681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3682, size: 64)
!3682 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !3416, line: 7, baseType: !3683)
!3683 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !3418, line: 49, size: 1728, elements: !3684)
!3684 = !{!3685, !3686, !3687, !3688, !3689, !3690, !3691, !3692, !3693, !3694, !3695, !3696, !3697, !3698, !3700, !3701, !3702, !3703, !3704, !3705, !3706, !3707, !3708, !3709, !3710, !3711, !3712, !3713, !3714}
!3685 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !3683, file: !3418, line: 51, baseType: !72, size: 32)
!3686 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !3683, file: !3418, line: 54, baseType: !6, size: 64, offset: 64)
!3687 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !3683, file: !3418, line: 55, baseType: !6, size: 64, offset: 128)
!3688 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !3683, file: !3418, line: 56, baseType: !6, size: 64, offset: 192)
!3689 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !3683, file: !3418, line: 57, baseType: !6, size: 64, offset: 256)
!3690 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !3683, file: !3418, line: 58, baseType: !6, size: 64, offset: 320)
!3691 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !3683, file: !3418, line: 59, baseType: !6, size: 64, offset: 384)
!3692 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !3683, file: !3418, line: 60, baseType: !6, size: 64, offset: 448)
!3693 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !3683, file: !3418, line: 61, baseType: !6, size: 64, offset: 512)
!3694 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !3683, file: !3418, line: 64, baseType: !6, size: 64, offset: 576)
!3695 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !3683, file: !3418, line: 65, baseType: !6, size: 64, offset: 640)
!3696 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !3683, file: !3418, line: 66, baseType: !6, size: 64, offset: 704)
!3697 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !3683, file: !3418, line: 68, baseType: !3433, size: 64, offset: 768)
!3698 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !3683, file: !3418, line: 70, baseType: !3699, size: 64, offset: 832)
!3699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3683, size: 64)
!3700 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !3683, file: !3418, line: 72, baseType: !72, size: 32, offset: 896)
!3701 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !3683, file: !3418, line: 73, baseType: !72, size: 32, offset: 928)
!3702 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !3683, file: !3418, line: 74, baseType: !3440, size: 64, offset: 960)
!3703 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !3683, file: !3418, line: 77, baseType: !133, size: 16, offset: 1024)
!3704 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !3683, file: !3418, line: 78, baseType: !3443, size: 8, offset: 1040)
!3705 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !3683, file: !3418, line: 79, baseType: !3445, size: 8, offset: 1048)
!3706 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !3683, file: !3418, line: 81, baseType: !3449, size: 64, offset: 1088)
!3707 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !3683, file: !3418, line: 89, baseType: !3452, size: 64, offset: 1152)
!3708 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !3683, file: !3418, line: 91, baseType: !3454, size: 64, offset: 1216)
!3709 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !3683, file: !3418, line: 92, baseType: !3457, size: 64, offset: 1280)
!3710 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !3683, file: !3418, line: 93, baseType: !3699, size: 64, offset: 1344)
!3711 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !3683, file: !3418, line: 94, baseType: !8, size: 64, offset: 1408)
!3712 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !3683, file: !3418, line: 95, baseType: !134, size: 64, offset: 1472)
!3713 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !3683, file: !3418, line: 96, baseType: !72, size: 32, offset: 1536)
!3714 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !3683, file: !3418, line: 98, baseType: !3464, size: 160, offset: 1568)
!3715 = distinct !DICompileUnit(language: DW_LANG_C99, file: !211, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !212, nameTableKind: None)
!3716 = !DILocalVariable(name: "command_name", arg: 2, scope: !3678, file: !3411, line: 231, type: !69)
!3717 = !DILocalVariable(name: "package", arg: 3, scope: !3678, file: !3411, line: 231, type: !69)
!3718 = !DILocalVariable(name: "version", arg: 4, scope: !3678, file: !3411, line: 232, type: !69)
!3719 = !DILocalVariable(name: "authors", scope: !3678, file: !3411, line: 234, type: !3720)
!3720 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !823, line: 52, baseType: !3721)
!3721 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3664, line: 32, baseType: !3722)
!3722 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !211, line: 234, baseType: !3723)
!3723 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3724, size: 192, elements: !3446)
!3724 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !211, line: 192, size: 192, elements: !3725)
!3725 = !{!3726, !3727, !3728, !3729}
!3726 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !3724, file: !211, line: 192, baseType: !16, size: 32)
!3727 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !3724, file: !211, line: 192, baseType: !16, size: 32, offset: 32)
!3728 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !3724, file: !211, line: 192, baseType: !8, size: 64, offset: 64)
!3729 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !3724, file: !211, line: 192, baseType: !8, size: 64, offset: 128)
!3730 = distinct !DISubprogram(name: "xmalloc", scope: !3731, file: !3731, line: 39, type: !3732, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !213, retainedNodes: !4)
!3731 = !DIFile(filename: "lib/xmalloc.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!3732 = !DISubroutineType(types: !3733)
!3733 = !{!8, !134}
!3734 = !DILocalVariable(name: "n", arg: 1, scope: !3730, file: !3731, line: 39, type: !134)
!3735 = !DILocation(line: 39, column: 17, scope: !3730)
!3736 = !DILocalVariable(name: "p", scope: !3730, file: !3731, line: 41, type: !8)
!3737 = !DILocation(line: 41, column: 9, scope: !3730)
!3738 = !DILocation(line: 41, column: 21, scope: !3730)
!3739 = !DILocation(line: 41, column: 13, scope: !3730)
!3740 = !DILocation(line: 42, column: 8, scope: !3741)
!3741 = distinct !DILexicalBlock(scope: !3730, file: !3731, line: 42, column: 7)
!3742 = !DILocation(line: 42, column: 10, scope: !3741)
!3743 = !DILocation(line: 42, column: 13, scope: !3741)
!3744 = !DILocation(line: 42, column: 15, scope: !3741)
!3745 = !DILocation(line: 42, column: 7, scope: !3730)
!3746 = !DILocation(line: 43, column: 5, scope: !3741)
!3747 = !DILocation(line: 44, column: 10, scope: !3730)
!3748 = !DILocation(line: 44, column: 3, scope: !3730)
!3749 = distinct !DISubprogram(name: "xrealloc", scope: !3731, file: !3731, line: 51, type: !3750, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !213, retainedNodes: !4)
!3750 = !DISubroutineType(types: !3751)
!3751 = !{!8, !8, !134}
!3752 = !DILocalVariable(name: "p", arg: 1, scope: !3749, file: !3731, line: 51, type: !8)
!3753 = !DILocation(line: 51, column: 17, scope: !3749)
!3754 = !DILocalVariable(name: "n", arg: 2, scope: !3749, file: !3731, line: 51, type: !134)
!3755 = !DILocation(line: 51, column: 27, scope: !3749)
!3756 = !DILocation(line: 53, column: 8, scope: !3757)
!3757 = distinct !DILexicalBlock(scope: !3749, file: !3731, line: 53, column: 7)
!3758 = !DILocation(line: 53, column: 10, scope: !3757)
!3759 = !DILocation(line: 53, column: 13, scope: !3757)
!3760 = !DILocation(line: 53, column: 7, scope: !3749)
!3761 = !DILocation(line: 57, column: 13, scope: !3762)
!3762 = distinct !DILexicalBlock(scope: !3757, file: !3731, line: 54, column: 5)
!3763 = !DILocation(line: 57, column: 7, scope: !3762)
!3764 = !DILocation(line: 58, column: 7, scope: !3762)
!3765 = !DILocation(line: 61, column: 16, scope: !3749)
!3766 = !DILocation(line: 61, column: 19, scope: !3749)
!3767 = !DILocation(line: 61, column: 7, scope: !3749)
!3768 = !DILocation(line: 61, column: 5, scope: !3749)
!3769 = !DILocation(line: 62, column: 8, scope: !3770)
!3770 = distinct !DILexicalBlock(scope: !3749, file: !3731, line: 62, column: 7)
!3771 = !DILocation(line: 62, column: 10, scope: !3770)
!3772 = !DILocation(line: 62, column: 13, scope: !3770)
!3773 = !DILocation(line: 62, column: 7, scope: !3749)
!3774 = !DILocation(line: 63, column: 5, scope: !3770)
!3775 = !DILocation(line: 64, column: 10, scope: !3749)
!3776 = !DILocation(line: 64, column: 3, scope: !3749)
!3777 = !DILocation(line: 65, column: 1, scope: !3749)
!3778 = distinct !DISubprogram(name: "xcharalloc", scope: !3779, file: !3779, line: 216, type: !3780, scopeLine: 217, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !213, retainedNodes: !4)
!3779 = !DIFile(filename: "./lib/xalloc.h", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!3780 = !DISubroutineType(types: !3781)
!3781 = !{!6, !134}
!3782 = !DILocalVariable(name: "n", arg: 1, scope: !3778, file: !3779, line: 216, type: !134)
!3783 = !DILocation(line: 216, column: 20, scope: !3778)
!3784 = !DILocation(line: 218, column: 10, scope: !3778)
!3785 = !DILocation(line: 218, column: 3, scope: !3778)
!3786 = distinct !DISubprogram(name: "xmemdup", scope: !3731, file: !3731, line: 111, type: !3787, scopeLine: 112, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !213, retainedNodes: !4)
!3787 = !DISubroutineType(types: !3788)
!3788 = !{!8, !3789, !134}
!3789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3790, size: 64)
!3790 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!3791 = !DILocalVariable(name: "p", arg: 1, scope: !3786, file: !3731, line: 111, type: !3789)
!3792 = !DILocation(line: 111, column: 22, scope: !3786)
!3793 = !DILocalVariable(name: "s", arg: 2, scope: !3786, file: !3731, line: 111, type: !134)
!3794 = !DILocation(line: 111, column: 32, scope: !3786)
!3795 = !DILocation(line: 113, column: 27, scope: !3786)
!3796 = !DILocation(line: 113, column: 18, scope: !3786)
!3797 = !DILocation(line: 113, column: 31, scope: !3786)
!3798 = !DILocation(line: 113, column: 34, scope: !3786)
!3799 = !DILocation(line: 113, column: 10, scope: !3786)
!3800 = !DILocation(line: 113, column: 3, scope: !3786)
!3801 = distinct !DISubprogram(name: "xstrdup", scope: !3731, file: !3731, line: 119, type: !2885, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !213, retainedNodes: !4)
!3802 = !DILocalVariable(name: "string", arg: 1, scope: !3801, file: !3731, line: 119, type: !69)
!3803 = !DILocation(line: 119, column: 22, scope: !3801)
!3804 = !DILocation(line: 121, column: 19, scope: !3801)
!3805 = !DILocation(line: 121, column: 35, scope: !3801)
!3806 = !DILocation(line: 121, column: 27, scope: !3801)
!3807 = !DILocation(line: 121, column: 43, scope: !3801)
!3808 = !DILocation(line: 121, column: 10, scope: !3801)
!3809 = !DILocation(line: 121, column: 3, scope: !3801)
!3810 = distinct !DISubprogram(name: "xalloc_die", scope: !3811, file: !3811, line: 32, type: !1471, scopeLine: 33, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !216, retainedNodes: !4)
!3811 = !DIFile(filename: "lib/xalloc-die.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!3812 = !DILocation(line: 34, column: 10, scope: !3810)
!3813 = !DILocation(line: 34, column: 33, scope: !3810)
!3814 = !DILocation(line: 34, column: 3, scope: !3810)
!3815 = !DILocation(line: 40, column: 3, scope: !3810)
!3816 = distinct !DISubprogram(name: "xgetgroups", scope: !3817, file: !3817, line: 31, type: !3818, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !218, retainedNodes: !4)
!3817 = !DIFile(filename: "lib/xgetgroups.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!3818 = !DISubroutineType(types: !3819)
!3819 = !{!72, !69, !21, !3820}
!3820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !183, size: 64)
!3821 = !DILocalVariable(name: "username", arg: 1, scope: !3816, file: !3817, line: 31, type: !69)
!3822 = !DILocation(line: 31, column: 25, scope: !3816)
!3823 = !DILocalVariable(name: "gid", arg: 2, scope: !3816, file: !3817, line: 31, type: !21)
!3824 = !DILocation(line: 31, column: 41, scope: !3816)
!3825 = !DILocalVariable(name: "groups", arg: 3, scope: !3816, file: !3817, line: 31, type: !3820)
!3826 = !DILocation(line: 31, column: 54, scope: !3816)
!3827 = !DILocalVariable(name: "result", scope: !3816, file: !3817, line: 33, type: !72)
!3828 = !DILocation(line: 33, column: 7, scope: !3816)
!3829 = !DILocation(line: 33, column: 28, scope: !3816)
!3830 = !DILocation(line: 33, column: 38, scope: !3816)
!3831 = !DILocation(line: 33, column: 43, scope: !3816)
!3832 = !DILocation(line: 33, column: 16, scope: !3816)
!3833 = !DILocation(line: 34, column: 7, scope: !3834)
!3834 = distinct !DILexicalBlock(scope: !3816, file: !3817, line: 34, column: 7)
!3835 = !DILocation(line: 34, column: 14, scope: !3834)
!3836 = !DILocation(line: 34, column: 20, scope: !3834)
!3837 = !DILocation(line: 34, column: 23, scope: !3834)
!3838 = !DILocation(line: 34, column: 29, scope: !3834)
!3839 = !DILocation(line: 34, column: 7, scope: !3816)
!3840 = !DILocation(line: 35, column: 5, scope: !3834)
!3841 = !DILocation(line: 36, column: 10, scope: !3816)
!3842 = !DILocation(line: 36, column: 3, scope: !3816)
!3843 = distinct !DISubprogram(name: "xstrtoul", scope: !3844, file: !3844, line: 76, type: !3845, scopeLine: 78, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !220, retainedNodes: !4)
!3844 = !DIFile(filename: "./lib/xstrtol.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!3845 = !DISubroutineType(types: !3846)
!3846 = !{!3847, !69, !184, !72, !3848, !69}
!3847 = !DIDerivedType(tag: DW_TAG_typedef, name: "strtol_error", file: !224, line: 38, baseType: !223)
!3848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !84, size: 64)
!3849 = !DILocalVariable(name: "s", arg: 1, scope: !3843, file: !3844, line: 76, type: !69)
!3850 = !DILocation(line: 76, column: 24, scope: !3843)
!3851 = !DILocalVariable(name: "ptr", arg: 2, scope: !3843, file: !3844, line: 76, type: !184)
!3852 = !DILocation(line: 76, column: 34, scope: !3843)
!3853 = !DILocalVariable(name: "strtol_base", arg: 3, scope: !3843, file: !3844, line: 76, type: !72)
!3854 = !DILocation(line: 76, column: 43, scope: !3843)
!3855 = !DILocalVariable(name: "val", arg: 4, scope: !3843, file: !3844, line: 77, type: !3848)
!3856 = !DILocation(line: 77, column: 24, scope: !3843)
!3857 = !DILocalVariable(name: "valid_suffixes", arg: 5, scope: !3843, file: !3844, line: 77, type: !69)
!3858 = !DILocation(line: 77, column: 41, scope: !3843)
!3859 = !DILocalVariable(name: "t_ptr", scope: !3843, file: !3844, line: 79, type: !6)
!3860 = !DILocation(line: 79, column: 9, scope: !3843)
!3861 = !DILocalVariable(name: "p", scope: !3843, file: !3844, line: 80, type: !184)
!3862 = !DILocation(line: 80, column: 10, scope: !3843)
!3863 = !DILocalVariable(name: "tmp", scope: !3843, file: !3844, line: 81, type: !84)
!3864 = !DILocation(line: 81, column: 14, scope: !3843)
!3865 = !DILocalVariable(name: "err", scope: !3843, file: !3844, line: 82, type: !3847)
!3866 = !DILocation(line: 82, column: 16, scope: !3843)
!3867 = !DILocation(line: 84, column: 3, scope: !3868)
!3868 = distinct !DILexicalBlock(scope: !3869, file: !3844, line: 84, column: 3)
!3869 = distinct !DILexicalBlock(scope: !3843, file: !3844, line: 84, column: 3)
!3870 = !DILocation(line: 84, column: 3, scope: !3869)
!3871 = !DILocation(line: 86, column: 8, scope: !3843)
!3872 = !DILocation(line: 86, column: 14, scope: !3843)
!3873 = !DILocation(line: 86, column: 5, scope: !3843)
!3874 = !DILocation(line: 88, column: 3, scope: !3843)
!3875 = !DILocation(line: 88, column: 9, scope: !3843)
!3876 = !DILocalVariable(name: "q", scope: !3877, file: !3844, line: 92, type: !69)
!3877 = distinct !DILexicalBlock(scope: !3878, file: !3844, line: 91, column: 5)
!3878 = distinct !DILexicalBlock(scope: !3843, file: !3844, line: 90, column: 7)
!3879 = !DILocation(line: 92, column: 19, scope: !3877)
!3880 = !DILocation(line: 92, column: 23, scope: !3877)
!3881 = !DILocalVariable(name: "ch", scope: !3877, file: !3844, line: 93, type: !240)
!3882 = !DILocation(line: 93, column: 21, scope: !3877)
!3883 = !DILocation(line: 93, column: 27, scope: !3877)
!3884 = !DILocation(line: 93, column: 26, scope: !3877)
!3885 = !DILocation(line: 94, column: 7, scope: !3877)
!3886 = !DILocation(line: 94, column: 14, scope: !3877)
!3887 = !DILocation(line: 95, column: 15, scope: !3877)
!3888 = !DILocation(line: 95, column: 14, scope: !3877)
!3889 = !DILocation(line: 95, column: 12, scope: !3877)
!3890 = distinct !{!3890, !3885, !3891}
!3891 = !DILocation(line: 95, column: 17, scope: !3877)
!3892 = !DILocation(line: 96, column: 11, scope: !3893)
!3893 = distinct !DILexicalBlock(scope: !3877, file: !3844, line: 96, column: 11)
!3894 = !DILocation(line: 96, column: 14, scope: !3893)
!3895 = !DILocation(line: 96, column: 11, scope: !3877)
!3896 = !DILocation(line: 97, column: 9, scope: !3893)
!3897 = !DILocation(line: 100, column: 19, scope: !3843)
!3898 = !DILocation(line: 100, column: 22, scope: !3843)
!3899 = !DILocation(line: 100, column: 25, scope: !3843)
!3900 = !DILocation(line: 100, column: 9, scope: !3843)
!3901 = !DILocation(line: 100, column: 7, scope: !3843)
!3902 = !DILocation(line: 102, column: 8, scope: !3903)
!3903 = distinct !DILexicalBlock(scope: !3843, file: !3844, line: 102, column: 7)
!3904 = !DILocation(line: 102, column: 7, scope: !3903)
!3905 = !DILocation(line: 102, column: 13, scope: !3903)
!3906 = !DILocation(line: 102, column: 10, scope: !3903)
!3907 = !DILocation(line: 102, column: 7, scope: !3843)
!3908 = !DILocation(line: 106, column: 11, scope: !3909)
!3909 = distinct !DILexicalBlock(scope: !3910, file: !3844, line: 106, column: 11)
!3910 = distinct !DILexicalBlock(scope: !3903, file: !3844, line: 103, column: 5)
!3911 = !DILocation(line: 106, column: 26, scope: !3909)
!3912 = !DILocation(line: 106, column: 31, scope: !3909)
!3913 = !DILocation(line: 106, column: 30, scope: !3909)
!3914 = !DILocation(line: 106, column: 29, scope: !3909)
!3915 = !DILocation(line: 106, column: 33, scope: !3909)
!3916 = !DILocation(line: 106, column: 44, scope: !3909)
!3917 = !DILocation(line: 106, column: 62, scope: !3909)
!3918 = !DILocation(line: 106, column: 61, scope: !3909)
!3919 = !DILocation(line: 106, column: 60, scope: !3909)
!3920 = !DILocation(line: 106, column: 36, scope: !3909)
!3921 = !DILocation(line: 106, column: 11, scope: !3910)
!3922 = !DILocation(line: 107, column: 13, scope: !3909)
!3923 = !DILocation(line: 107, column: 9, scope: !3909)
!3924 = !DILocation(line: 109, column: 9, scope: !3909)
!3925 = !DILocation(line: 110, column: 5, scope: !3910)
!3926 = !DILocation(line: 111, column: 12, scope: !3927)
!3927 = distinct !DILexicalBlock(scope: !3903, file: !3844, line: 111, column: 12)
!3928 = !DILocation(line: 111, column: 18, scope: !3927)
!3929 = !DILocation(line: 111, column: 12, scope: !3903)
!3930 = !DILocation(line: 113, column: 11, scope: !3931)
!3931 = distinct !DILexicalBlock(scope: !3932, file: !3844, line: 113, column: 11)
!3932 = distinct !DILexicalBlock(scope: !3927, file: !3844, line: 112, column: 5)
!3933 = !DILocation(line: 113, column: 17, scope: !3931)
!3934 = !DILocation(line: 113, column: 11, scope: !3932)
!3935 = !DILocation(line: 114, column: 9, scope: !3931)
!3936 = !DILocation(line: 115, column: 11, scope: !3932)
!3937 = !DILocation(line: 116, column: 5, scope: !3932)
!3938 = !DILocation(line: 121, column: 8, scope: !3939)
!3939 = distinct !DILexicalBlock(scope: !3843, file: !3844, line: 121, column: 7)
!3940 = !DILocation(line: 121, column: 7, scope: !3843)
!3941 = !DILocation(line: 123, column: 14, scope: !3942)
!3942 = distinct !DILexicalBlock(scope: !3939, file: !3844, line: 122, column: 5)
!3943 = !DILocation(line: 123, column: 8, scope: !3942)
!3944 = !DILocation(line: 123, column: 12, scope: !3942)
!3945 = !DILocation(line: 124, column: 14, scope: !3942)
!3946 = !DILocation(line: 124, column: 7, scope: !3942)
!3947 = !DILocation(line: 127, column: 9, scope: !3948)
!3948 = distinct !DILexicalBlock(scope: !3843, file: !3844, line: 127, column: 7)
!3949 = !DILocation(line: 127, column: 8, scope: !3948)
!3950 = !DILocation(line: 127, column: 7, scope: !3948)
!3951 = !DILocation(line: 127, column: 11, scope: !3948)
!3952 = !DILocation(line: 127, column: 7, scope: !3843)
!3953 = !DILocalVariable(name: "base", scope: !3954, file: !3844, line: 129, type: !72)
!3954 = distinct !DILexicalBlock(scope: !3948, file: !3844, line: 128, column: 5)
!3955 = !DILocation(line: 129, column: 11, scope: !3954)
!3956 = !DILocalVariable(name: "suffixes", scope: !3954, file: !3844, line: 130, type: !72)
!3957 = !DILocation(line: 130, column: 11, scope: !3954)
!3958 = !DILocalVariable(name: "overflow", scope: !3954, file: !3844, line: 131, type: !3847)
!3959 = !DILocation(line: 131, column: 20, scope: !3954)
!3960 = !DILocation(line: 133, column: 20, scope: !3961)
!3961 = distinct !DILexicalBlock(scope: !3954, file: !3844, line: 133, column: 11)
!3962 = !DILocation(line: 133, column: 38, scope: !3961)
!3963 = !DILocation(line: 133, column: 37, scope: !3961)
!3964 = !DILocation(line: 133, column: 36, scope: !3961)
!3965 = !DILocation(line: 133, column: 12, scope: !3961)
!3966 = !DILocation(line: 133, column: 11, scope: !3954)
!3967 = !DILocation(line: 135, column: 18, scope: !3968)
!3968 = distinct !DILexicalBlock(scope: !3961, file: !3844, line: 134, column: 9)
!3969 = !DILocation(line: 135, column: 12, scope: !3968)
!3970 = !DILocation(line: 135, column: 16, scope: !3968)
!3971 = !DILocation(line: 136, column: 18, scope: !3968)
!3972 = !DILocation(line: 136, column: 22, scope: !3968)
!3973 = !DILocation(line: 136, column: 11, scope: !3968)
!3974 = !DILocation(line: 139, column: 17, scope: !3954)
!3975 = !DILocation(line: 139, column: 16, scope: !3954)
!3976 = !DILocation(line: 139, column: 15, scope: !3954)
!3977 = !DILocation(line: 139, column: 7, scope: !3954)
!3978 = !DILocation(line: 151, column: 23, scope: !3979)
!3979 = distinct !DILexicalBlock(scope: !3980, file: !3844, line: 151, column: 15)
!3980 = distinct !DILexicalBlock(scope: !3954, file: !3844, line: 140, column: 9)
!3981 = !DILocation(line: 151, column: 15, scope: !3979)
!3982 = !DILocation(line: 151, column: 15, scope: !3980)
!3983 = !DILocation(line: 152, column: 21, scope: !3979)
!3984 = !DILocation(line: 152, column: 13, scope: !3979)
!3985 = !DILocation(line: 155, column: 21, scope: !3986)
!3986 = distinct !DILexicalBlock(scope: !3987, file: !3844, line: 155, column: 21)
!3987 = distinct !DILexicalBlock(scope: !3979, file: !3844, line: 153, column: 15)
!3988 = !DILocation(line: 155, column: 29, scope: !3986)
!3989 = !DILocation(line: 155, column: 21, scope: !3987)
!3990 = !DILocation(line: 156, column: 28, scope: !3986)
!3991 = !DILocation(line: 156, column: 19, scope: !3986)
!3992 = !DILocation(line: 157, column: 17, scope: !3987)
!3993 = !DILocation(line: 161, column: 22, scope: !3987)
!3994 = !DILocation(line: 162, column: 25, scope: !3987)
!3995 = !DILocation(line: 163, column: 17, scope: !3987)
!3996 = !DILocation(line: 164, column: 15, scope: !3987)
!3997 = !DILocation(line: 165, column: 9, scope: !3980)
!3998 = !DILocation(line: 167, column: 17, scope: !3954)
!3999 = !DILocation(line: 167, column: 16, scope: !3954)
!4000 = !DILocation(line: 167, column: 15, scope: !3954)
!4001 = !DILocation(line: 167, column: 7, scope: !3954)
!4002 = !DILocation(line: 170, column: 22, scope: !4003)
!4003 = distinct !DILexicalBlock(scope: !3954, file: !3844, line: 168, column: 9)
!4004 = !DILocation(line: 170, column: 20, scope: !4003)
!4005 = !DILocation(line: 171, column: 11, scope: !4003)
!4006 = !DILocation(line: 177, column: 22, scope: !4003)
!4007 = !DILocation(line: 177, column: 20, scope: !4003)
!4008 = !DILocation(line: 178, column: 11, scope: !4003)
!4009 = !DILocation(line: 181, column: 20, scope: !4003)
!4010 = !DILocation(line: 182, column: 11, scope: !4003)
!4011 = !DILocation(line: 185, column: 48, scope: !4003)
!4012 = !DILocation(line: 185, column: 22, scope: !4003)
!4013 = !DILocation(line: 185, column: 20, scope: !4003)
!4014 = !DILocation(line: 186, column: 11, scope: !4003)
!4015 = !DILocation(line: 190, column: 48, scope: !4003)
!4016 = !DILocation(line: 190, column: 22, scope: !4003)
!4017 = !DILocation(line: 190, column: 20, scope: !4003)
!4018 = !DILocation(line: 191, column: 11, scope: !4003)
!4019 = !DILocation(line: 195, column: 48, scope: !4003)
!4020 = !DILocation(line: 195, column: 22, scope: !4003)
!4021 = !DILocation(line: 195, column: 20, scope: !4003)
!4022 = !DILocation(line: 196, column: 11, scope: !4003)
!4023 = !DILocation(line: 200, column: 48, scope: !4003)
!4024 = !DILocation(line: 200, column: 22, scope: !4003)
!4025 = !DILocation(line: 200, column: 20, scope: !4003)
!4026 = !DILocation(line: 201, column: 11, scope: !4003)
!4027 = !DILocation(line: 204, column: 48, scope: !4003)
!4028 = !DILocation(line: 204, column: 22, scope: !4003)
!4029 = !DILocation(line: 204, column: 20, scope: !4003)
!4030 = !DILocation(line: 205, column: 11, scope: !4003)
!4031 = !DILocation(line: 209, column: 48, scope: !4003)
!4032 = !DILocation(line: 209, column: 22, scope: !4003)
!4033 = !DILocation(line: 209, column: 20, scope: !4003)
!4034 = !DILocation(line: 210, column: 11, scope: !4003)
!4035 = !DILocation(line: 213, column: 22, scope: !4003)
!4036 = !DILocation(line: 213, column: 20, scope: !4003)
!4037 = !DILocation(line: 214, column: 11, scope: !4003)
!4038 = !DILocation(line: 217, column: 48, scope: !4003)
!4039 = !DILocation(line: 217, column: 22, scope: !4003)
!4040 = !DILocation(line: 217, column: 20, scope: !4003)
!4041 = !DILocation(line: 218, column: 11, scope: !4003)
!4042 = !DILocation(line: 221, column: 48, scope: !4003)
!4043 = !DILocation(line: 221, column: 22, scope: !4003)
!4044 = !DILocation(line: 221, column: 20, scope: !4003)
!4045 = !DILocation(line: 222, column: 11, scope: !4003)
!4046 = !DILocation(line: 225, column: 18, scope: !4003)
!4047 = !DILocation(line: 225, column: 12, scope: !4003)
!4048 = !DILocation(line: 225, column: 16, scope: !4003)
!4049 = !DILocation(line: 226, column: 18, scope: !4003)
!4050 = !DILocation(line: 226, column: 22, scope: !4003)
!4051 = !DILocation(line: 226, column: 11, scope: !4003)
!4052 = !DILocation(line: 229, column: 14, scope: !3954)
!4053 = !DILocation(line: 229, column: 11, scope: !3954)
!4054 = !DILocation(line: 230, column: 13, scope: !3954)
!4055 = !DILocation(line: 230, column: 8, scope: !3954)
!4056 = !DILocation(line: 230, column: 10, scope: !3954)
!4057 = !DILocation(line: 231, column: 13, scope: !4058)
!4058 = distinct !DILexicalBlock(scope: !3954, file: !3844, line: 231, column: 11)
!4059 = !DILocation(line: 231, column: 12, scope: !4058)
!4060 = !DILocation(line: 231, column: 11, scope: !4058)
!4061 = !DILocation(line: 231, column: 11, scope: !3954)
!4062 = !DILocation(line: 232, column: 13, scope: !4058)
!4063 = !DILocation(line: 232, column: 9, scope: !4058)
!4064 = !DILocation(line: 233, column: 5, scope: !3954)
!4065 = !DILocation(line: 235, column: 10, scope: !3843)
!4066 = !DILocation(line: 235, column: 4, scope: !3843)
!4067 = !DILocation(line: 235, column: 8, scope: !3843)
!4068 = !DILocation(line: 236, column: 10, scope: !3843)
!4069 = !DILocation(line: 236, column: 3, scope: !3843)
!4070 = !DILocation(line: 237, column: 1, scope: !3843)
!4071 = distinct !DISubprogram(name: "bkm_scale", scope: !3844, file: !3844, line: 48, type: !4072, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !220, retainedNodes: !4)
!4072 = !DISubroutineType(types: !4073)
!4073 = !{!3847, !3848, !72}
!4074 = !DILocalVariable(name: "x", arg: 1, scope: !4071, file: !3844, line: 48, type: !3848)
!4075 = !DILocation(line: 48, column: 24, scope: !4071)
!4076 = !DILocalVariable(name: "scale_factor", arg: 2, scope: !4071, file: !3844, line: 48, type: !72)
!4077 = !DILocation(line: 48, column: 31, scope: !4071)
!4078 = !DILocation(line: 55, column: 26, scope: !4079)
!4079 = distinct !DILexicalBlock(scope: !4071, file: !3844, line: 55, column: 7)
!4080 = !DILocation(line: 55, column: 24, scope: !4079)
!4081 = !DILocation(line: 55, column: 42, scope: !4079)
!4082 = !DILocation(line: 55, column: 41, scope: !4079)
!4083 = !DILocation(line: 55, column: 39, scope: !4079)
!4084 = !DILocation(line: 55, column: 7, scope: !4071)
!4085 = !DILocation(line: 57, column: 8, scope: !4086)
!4086 = distinct !DILexicalBlock(scope: !4079, file: !3844, line: 56, column: 5)
!4087 = !DILocation(line: 57, column: 10, scope: !4086)
!4088 = !DILocation(line: 58, column: 7, scope: !4086)
!4089 = !DILocation(line: 60, column: 9, scope: !4071)
!4090 = !DILocation(line: 60, column: 4, scope: !4071)
!4091 = !DILocation(line: 60, column: 6, scope: !4071)
!4092 = !DILocation(line: 61, column: 3, scope: !4071)
!4093 = !DILocation(line: 62, column: 1, scope: !4071)
!4094 = distinct !DISubprogram(name: "bkm_scale_by_power", scope: !3844, file: !3844, line: 65, type: !4095, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !220, retainedNodes: !4)
!4095 = !DISubroutineType(types: !4096)
!4096 = !{!3847, !3848, !72, !72}
!4097 = !DILocalVariable(name: "x", arg: 1, scope: !4094, file: !3844, line: 65, type: !3848)
!4098 = !DILocation(line: 65, column: 33, scope: !4094)
!4099 = !DILocalVariable(name: "base", arg: 2, scope: !4094, file: !3844, line: 65, type: !72)
!4100 = !DILocation(line: 65, column: 40, scope: !4094)
!4101 = !DILocalVariable(name: "power", arg: 3, scope: !4094, file: !3844, line: 65, type: !72)
!4102 = !DILocation(line: 65, column: 50, scope: !4094)
!4103 = !DILocalVariable(name: "err", scope: !4094, file: !3844, line: 67, type: !3847)
!4104 = !DILocation(line: 67, column: 16, scope: !4094)
!4105 = !DILocation(line: 68, column: 3, scope: !4094)
!4106 = !DILocation(line: 68, column: 15, scope: !4094)
!4107 = !DILocation(line: 69, column: 23, scope: !4094)
!4108 = !DILocation(line: 69, column: 26, scope: !4094)
!4109 = !DILocation(line: 69, column: 12, scope: !4094)
!4110 = !DILocation(line: 69, column: 9, scope: !4094)
!4111 = distinct !{!4111, !4105, !4112}
!4112 = !DILocation(line: 69, column: 30, scope: !4094)
!4113 = !DILocation(line: 70, column: 10, scope: !4094)
!4114 = !DILocation(line: 70, column: 3, scope: !4094)
!4115 = !DILocalVariable(name: "x", arg: 1, scope: !4116, file: !3844, line: 65, type: !3848)
!4116 = distinct !DISubprogram(name: "bkm_scale_by_power", scope: !3844, file: !3844, line: 65, type: !4095, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4117, retainedNodes: !4)
!4117 = distinct !DICompileUnit(language: DW_LANG_C99, file: !221, producer: "clang version 9.0.1-12 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !222, retainedTypes: !231, nameTableKind: None)
!4118 = !DILocalVariable(name: "base", arg: 2, scope: !4116, file: !3844, line: 65, type: !72)
!4119 = !DILocalVariable(name: "power", arg: 3, scope: !4116, file: !3844, line: 65, type: !72)
!4120 = !DILocalVariable(name: "err", scope: !4116, file: !3844, line: 67, type: !3847)
!4121 = distinct !DISubprogram(name: "rpl_mbrtowc", scope: !4122, file: !4122, line: 86, type: !4123, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !232, retainedNodes: !4)
!4122 = !DIFile(filename: "lib/mbrtowc.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!4123 = !DISubroutineType(types: !4124)
!4124 = !{!134, !4125, !69, !134, !4126}
!4125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2404, size: 64)
!4126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4127, size: 64)
!4127 = !DIDerivedType(tag: DW_TAG_typedef, name: "mbstate_t", file: !2375, line: 6, baseType: !4128)
!4128 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mbstate_t", file: !2377, line: 21, baseType: !4129)
!4129 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2377, line: 13, size: 64, elements: !4130)
!4130 = !{!4131, !4132}
!4131 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !4129, file: !2377, line: 15, baseType: !72, size: 32)
!4132 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !4129, file: !2377, line: 20, baseType: !4133, size: 32, offset: 32)
!4133 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4129, file: !2377, line: 16, size: 32, elements: !4134)
!4134 = !{!4135, !4136}
!4135 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !4133, file: !2377, line: 18, baseType: !16, size: 32)
!4136 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !4133, file: !2377, line: 19, baseType: !2386, size: 32)
!4137 = !DILocalVariable(name: "pwc", arg: 1, scope: !4121, file: !4122, line: 86, type: !4125)
!4138 = !DILocation(line: 86, column: 23, scope: !4121)
!4139 = !DILocalVariable(name: "s", arg: 2, scope: !4121, file: !4122, line: 86, type: !69)
!4140 = !DILocation(line: 86, column: 40, scope: !4121)
!4141 = !DILocalVariable(name: "n", arg: 3, scope: !4121, file: !4122, line: 86, type: !134)
!4142 = !DILocation(line: 86, column: 50, scope: !4121)
!4143 = !DILocalVariable(name: "ps", arg: 4, scope: !4121, file: !4122, line: 86, type: !4126)
!4144 = !DILocation(line: 86, column: 64, scope: !4121)
!4145 = !DILocalVariable(name: "ret", scope: !4121, file: !4122, line: 88, type: !134)
!4146 = !DILocation(line: 88, column: 10, scope: !4121)
!4147 = !DILocalVariable(name: "wc", scope: !4121, file: !4122, line: 89, type: !2404)
!4148 = !DILocation(line: 89, column: 11, scope: !4121)
!4149 = !DILocation(line: 105, column: 9, scope: !4150)
!4150 = distinct !DILexicalBlock(scope: !4121, file: !4122, line: 105, column: 7)
!4151 = !DILocation(line: 105, column: 7, scope: !4121)
!4152 = !DILocation(line: 106, column: 9, scope: !4150)
!4153 = !DILocation(line: 106, column: 5, scope: !4150)
!4154 = !DILocation(line: 145, column: 18, scope: !4121)
!4155 = !DILocation(line: 145, column: 23, scope: !4121)
!4156 = !DILocation(line: 145, column: 26, scope: !4121)
!4157 = !DILocation(line: 145, column: 29, scope: !4121)
!4158 = !DILocation(line: 145, column: 9, scope: !4121)
!4159 = !DILocation(line: 145, column: 7, scope: !4121)
!4160 = !DILocation(line: 154, column: 22, scope: !4161)
!4161 = distinct !DILexicalBlock(scope: !4121, file: !4122, line: 154, column: 7)
!4162 = !DILocation(line: 154, column: 19, scope: !4161)
!4163 = !DILocation(line: 154, column: 26, scope: !4161)
!4164 = !DILocation(line: 154, column: 29, scope: !4161)
!4165 = !DILocation(line: 154, column: 31, scope: !4161)
!4166 = !DILocation(line: 154, column: 36, scope: !4161)
!4167 = !DILocation(line: 154, column: 41, scope: !4161)
!4168 = !DILocation(line: 154, column: 7, scope: !4121)
!4169 = !DILocalVariable(name: "uc", scope: !4170, file: !4122, line: 156, type: !240)
!4170 = distinct !DILexicalBlock(scope: !4161, file: !4122, line: 155, column: 5)
!4171 = !DILocation(line: 156, column: 21, scope: !4170)
!4172 = !DILocation(line: 156, column: 27, scope: !4170)
!4173 = !DILocation(line: 156, column: 26, scope: !4170)
!4174 = !DILocation(line: 157, column: 14, scope: !4170)
!4175 = !DILocation(line: 157, column: 8, scope: !4170)
!4176 = !DILocation(line: 157, column: 12, scope: !4170)
!4177 = !DILocation(line: 158, column: 7, scope: !4170)
!4178 = !DILocation(line: 162, column: 10, scope: !4121)
!4179 = !DILocation(line: 162, column: 3, scope: !4121)
!4180 = !DILocation(line: 163, column: 1, scope: !4121)
!4181 = distinct !DISubprogram(name: "c_strcasecmp", scope: !4182, file: !4182, line: 27, type: !4183, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !235, retainedNodes: !4)
!4182 = !DIFile(filename: "lib/c-strcasecmp.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!4183 = !DISubroutineType(types: !4184)
!4184 = !{!72, !69, !69}
!4185 = !DILocalVariable(name: "s1", arg: 1, scope: !4181, file: !4182, line: 27, type: !69)
!4186 = !DILocation(line: 27, column: 27, scope: !4181)
!4187 = !DILocalVariable(name: "s2", arg: 2, scope: !4181, file: !4182, line: 27, type: !69)
!4188 = !DILocation(line: 27, column: 43, scope: !4181)
!4189 = !DILocalVariable(name: "p1", scope: !4181, file: !4182, line: 29, type: !238)
!4190 = !DILocation(line: 29, column: 33, scope: !4181)
!4191 = !DILocation(line: 29, column: 62, scope: !4181)
!4192 = !DILocalVariable(name: "p2", scope: !4181, file: !4182, line: 30, type: !238)
!4193 = !DILocation(line: 30, column: 33, scope: !4181)
!4194 = !DILocation(line: 30, column: 62, scope: !4181)
!4195 = !DILocalVariable(name: "c1", scope: !4181, file: !4182, line: 31, type: !240)
!4196 = !DILocation(line: 31, column: 17, scope: !4181)
!4197 = !DILocalVariable(name: "c2", scope: !4181, file: !4182, line: 31, type: !240)
!4198 = !DILocation(line: 31, column: 21, scope: !4181)
!4199 = !DILocation(line: 33, column: 7, scope: !4200)
!4200 = distinct !DILexicalBlock(scope: !4181, file: !4182, line: 33, column: 7)
!4201 = !DILocation(line: 33, column: 13, scope: !4200)
!4202 = !DILocation(line: 33, column: 10, scope: !4200)
!4203 = !DILocation(line: 33, column: 7, scope: !4181)
!4204 = !DILocation(line: 34, column: 5, scope: !4200)
!4205 = !DILocation(line: 36, column: 3, scope: !4181)
!4206 = !DILocation(line: 38, column: 24, scope: !4207)
!4207 = distinct !DILexicalBlock(scope: !4181, file: !4182, line: 37, column: 5)
!4208 = !DILocation(line: 38, column: 23, scope: !4207)
!4209 = !DILocation(line: 38, column: 12, scope: !4207)
!4210 = !DILocation(line: 38, column: 10, scope: !4207)
!4211 = !DILocation(line: 39, column: 24, scope: !4207)
!4212 = !DILocation(line: 39, column: 23, scope: !4207)
!4213 = !DILocation(line: 39, column: 12, scope: !4207)
!4214 = !DILocation(line: 39, column: 10, scope: !4207)
!4215 = !DILocation(line: 41, column: 11, scope: !4216)
!4216 = distinct !DILexicalBlock(scope: !4207, file: !4182, line: 41, column: 11)
!4217 = !DILocation(line: 41, column: 14, scope: !4216)
!4218 = !DILocation(line: 41, column: 11, scope: !4207)
!4219 = !DILocation(line: 42, column: 9, scope: !4216)
!4220 = !DILocation(line: 44, column: 7, scope: !4207)
!4221 = !DILocation(line: 45, column: 7, scope: !4207)
!4222 = !DILocation(line: 46, column: 5, scope: !4207)
!4223 = !DILocation(line: 47, column: 10, scope: !4181)
!4224 = !DILocation(line: 47, column: 16, scope: !4181)
!4225 = !DILocation(line: 47, column: 13, scope: !4181)
!4226 = distinct !{!4226, !4205, !4227}
!4227 = !DILocation(line: 47, column: 18, scope: !4181)
!4228 = !DILocation(line: 50, column: 12, scope: !4229)
!4229 = distinct !DILexicalBlock(scope: !4181, file: !4182, line: 49, column: 7)
!4230 = !DILocation(line: 50, column: 17, scope: !4229)
!4231 = !DILocation(line: 50, column: 15, scope: !4229)
!4232 = !DILocation(line: 50, column: 5, scope: !4229)
!4233 = !DILocation(line: 56, column: 1, scope: !4181)
!4234 = distinct !DISubprogram(name: "close_stream", scope: !4235, file: !4235, line: 56, type: !4236, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !241, retainedNodes: !4)
!4235 = !DIFile(filename: "lib/close-stream.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!4236 = !DISubroutineType(types: !4237)
!4237 = !{!72, !4238}
!4238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4239, size: 64)
!4239 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !3416, line: 7, baseType: !4240)
!4240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !3418, line: 49, size: 1728, elements: !4241)
!4241 = !{!4242, !4243, !4244, !4245, !4246, !4247, !4248, !4249, !4250, !4251, !4252, !4253, !4254, !4255, !4257, !4258, !4259, !4260, !4261, !4262, !4263, !4264, !4265, !4266, !4267, !4268, !4269, !4270, !4271}
!4242 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !4240, file: !3418, line: 51, baseType: !72, size: 32)
!4243 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !4240, file: !3418, line: 54, baseType: !6, size: 64, offset: 64)
!4244 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !4240, file: !3418, line: 55, baseType: !6, size: 64, offset: 128)
!4245 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !4240, file: !3418, line: 56, baseType: !6, size: 64, offset: 192)
!4246 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !4240, file: !3418, line: 57, baseType: !6, size: 64, offset: 256)
!4247 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !4240, file: !3418, line: 58, baseType: !6, size: 64, offset: 320)
!4248 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !4240, file: !3418, line: 59, baseType: !6, size: 64, offset: 384)
!4249 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !4240, file: !3418, line: 60, baseType: !6, size: 64, offset: 448)
!4250 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !4240, file: !3418, line: 61, baseType: !6, size: 64, offset: 512)
!4251 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !4240, file: !3418, line: 64, baseType: !6, size: 64, offset: 576)
!4252 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !4240, file: !3418, line: 65, baseType: !6, size: 64, offset: 640)
!4253 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !4240, file: !3418, line: 66, baseType: !6, size: 64, offset: 704)
!4254 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !4240, file: !3418, line: 68, baseType: !3433, size: 64, offset: 768)
!4255 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !4240, file: !3418, line: 70, baseType: !4256, size: 64, offset: 832)
!4256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4240, size: 64)
!4257 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !4240, file: !3418, line: 72, baseType: !72, size: 32, offset: 896)
!4258 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !4240, file: !3418, line: 73, baseType: !72, size: 32, offset: 928)
!4259 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !4240, file: !3418, line: 74, baseType: !3440, size: 64, offset: 960)
!4260 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !4240, file: !3418, line: 77, baseType: !133, size: 16, offset: 1024)
!4261 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !4240, file: !3418, line: 78, baseType: !3443, size: 8, offset: 1040)
!4262 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !4240, file: !3418, line: 79, baseType: !3445, size: 8, offset: 1048)
!4263 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !4240, file: !3418, line: 81, baseType: !3449, size: 64, offset: 1088)
!4264 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !4240, file: !3418, line: 89, baseType: !3452, size: 64, offset: 1152)
!4265 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !4240, file: !3418, line: 91, baseType: !3454, size: 64, offset: 1216)
!4266 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !4240, file: !3418, line: 92, baseType: !3457, size: 64, offset: 1280)
!4267 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !4240, file: !3418, line: 93, baseType: !4256, size: 64, offset: 1344)
!4268 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !4240, file: !3418, line: 94, baseType: !8, size: 64, offset: 1408)
!4269 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !4240, file: !3418, line: 95, baseType: !134, size: 64, offset: 1472)
!4270 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !4240, file: !3418, line: 96, baseType: !72, size: 32, offset: 1536)
!4271 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !4240, file: !3418, line: 98, baseType: !3464, size: 160, offset: 1568)
!4272 = !DILocalVariable(name: "stream", arg: 1, scope: !4234, file: !4235, line: 56, type: !4238)
!4273 = !DILocation(line: 56, column: 21, scope: !4234)
!4274 = !DILocalVariable(name: "some_pending", scope: !4234, file: !4235, line: 58, type: !4275)
!4275 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !27)
!4276 = !DILocation(line: 58, column: 14, scope: !4234)
!4277 = !DILocation(line: 58, column: 42, scope: !4234)
!4278 = !DILocation(line: 58, column: 30, scope: !4234)
!4279 = !DILocation(line: 58, column: 50, scope: !4234)
!4280 = !DILocalVariable(name: "prev_fail", scope: !4234, file: !4235, line: 59, type: !4275)
!4281 = !DILocation(line: 59, column: 14, scope: !4234)
!4282 = !DILocation(line: 59, column: 27, scope: !4234)
!4283 = !DILocation(line: 59, column: 43, scope: !4234)
!4284 = !DILocalVariable(name: "fclose_fail", scope: !4234, file: !4235, line: 60, type: !4275)
!4285 = !DILocation(line: 60, column: 14, scope: !4234)
!4286 = !DILocation(line: 60, column: 37, scope: !4234)
!4287 = !DILocation(line: 60, column: 29, scope: !4234)
!4288 = !DILocation(line: 60, column: 45, scope: !4234)
!4289 = !DILocation(line: 70, column: 7, scope: !4290)
!4290 = distinct !DILexicalBlock(scope: !4234, file: !4235, line: 70, column: 7)
!4291 = !DILocation(line: 70, column: 17, scope: !4290)
!4292 = !DILocation(line: 70, column: 21, scope: !4290)
!4293 = !DILocation(line: 70, column: 33, scope: !4290)
!4294 = !DILocation(line: 70, column: 37, scope: !4290)
!4295 = !DILocation(line: 70, column: 50, scope: !4290)
!4296 = !DILocation(line: 70, column: 53, scope: !4290)
!4297 = !DILocation(line: 70, column: 59, scope: !4290)
!4298 = !DILocation(line: 70, column: 7, scope: !4234)
!4299 = !DILocation(line: 72, column: 13, scope: !4300)
!4300 = distinct !DILexicalBlock(scope: !4301, file: !4235, line: 72, column: 11)
!4301 = distinct !DILexicalBlock(scope: !4290, file: !4235, line: 71, column: 5)
!4302 = !DILocation(line: 72, column: 11, scope: !4301)
!4303 = !DILocation(line: 73, column: 9, scope: !4300)
!4304 = !DILocation(line: 73, column: 15, scope: !4300)
!4305 = !DILocation(line: 74, column: 7, scope: !4301)
!4306 = !DILocation(line: 77, column: 3, scope: !4234)
!4307 = !DILocation(line: 78, column: 1, scope: !4234)
!4308 = distinct !DISubprogram(name: "hard_locale", scope: !4309, file: !4309, line: 27, type: !4310, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !243, retainedNodes: !4)
!4309 = !DIFile(filename: "lib/hard-locale.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!4310 = !DISubroutineType(types: !4311)
!4311 = !{!27, !72}
!4312 = !DILocalVariable(name: "category", arg: 1, scope: !4308, file: !4309, line: 27, type: !72)
!4313 = !DILocation(line: 27, column: 18, scope: !4308)
!4314 = !DILocalVariable(name: "locale", scope: !4308, file: !4309, line: 29, type: !4315)
!4315 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 2056, elements: !4316)
!4316 = !{!4317}
!4317 = !DISubrange(count: 257)
!4318 = !DILocation(line: 29, column: 8, scope: !4308)
!4319 = !DILocation(line: 31, column: 25, scope: !4320)
!4320 = distinct !DILexicalBlock(scope: !4308, file: !4309, line: 31, column: 7)
!4321 = !DILocation(line: 31, column: 35, scope: !4320)
!4322 = !DILocation(line: 31, column: 7, scope: !4320)
!4323 = !DILocation(line: 31, column: 7, scope: !4308)
!4324 = !DILocation(line: 32, column: 5, scope: !4320)
!4325 = !DILocation(line: 34, column: 20, scope: !4308)
!4326 = !DILocation(line: 34, column: 12, scope: !4308)
!4327 = !DILocation(line: 34, column: 33, scope: !4308)
!4328 = !DILocation(line: 34, column: 38, scope: !4308)
!4329 = !DILocation(line: 34, column: 49, scope: !4308)
!4330 = !DILocation(line: 34, column: 41, scope: !4308)
!4331 = !DILocation(line: 34, column: 66, scope: !4308)
!4332 = !DILocation(line: 34, column: 10, scope: !4308)
!4333 = !DILocation(line: 34, column: 3, scope: !4308)
!4334 = !DILocation(line: 35, column: 1, scope: !4308)
!4335 = distinct !DISubprogram(name: "locale_charset", scope: !4336, file: !4336, line: 831, type: !4337, scopeLine: 832, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !245, retainedNodes: !4)
!4336 = !DIFile(filename: "lib/localcharset.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!4337 = !DISubroutineType(types: !4338)
!4338 = !{!69}
!4339 = !DILocalVariable(name: "codeset", scope: !4335, file: !4336, line: 833, type: !69)
!4340 = !DILocation(line: 833, column: 15, scope: !4335)
!4341 = !DILocation(line: 847, column: 13, scope: !4335)
!4342 = !DILocation(line: 847, column: 11, scope: !4335)
!4343 = !DILocation(line: 911, column: 7, scope: !4344)
!4344 = distinct !DILexicalBlock(scope: !4335, file: !4336, line: 911, column: 7)
!4345 = !DILocation(line: 911, column: 15, scope: !4344)
!4346 = !DILocation(line: 911, column: 7, scope: !4335)
!4347 = !DILocation(line: 913, column: 13, scope: !4344)
!4348 = !DILocation(line: 913, column: 5, scope: !4344)
!4349 = !DILocation(line: 1070, column: 13, scope: !4350)
!4350 = distinct !DILexicalBlock(scope: !4351, file: !4336, line: 1070, column: 13)
!4351 = distinct !DILexicalBlock(scope: !4352, file: !4336, line: 1060, column: 7)
!4352 = distinct !DILexicalBlock(scope: !4335, file: !4336, line: 1019, column: 3)
!4353 = !DILocation(line: 1070, column: 24, scope: !4350)
!4354 = !DILocation(line: 1070, column: 13, scope: !4351)
!4355 = !DILocation(line: 1071, column: 19, scope: !4350)
!4356 = !DILocation(line: 1071, column: 11, scope: !4350)
!4357 = !DILocation(line: 1158, column: 10, scope: !4335)
!4358 = !DILocation(line: 1158, column: 3, scope: !4335)
!4359 = distinct !DISubprogram(name: "mgetgroups", scope: !4360, file: !4360, line: 66, type: !3818, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !247, retainedNodes: !4)
!4360 = !DIFile(filename: "lib/mgetgroups.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!4361 = !DILocalVariable(name: "username", arg: 1, scope: !4359, file: !4360, line: 66, type: !69)
!4362 = !DILocation(line: 66, column: 25, scope: !4359)
!4363 = !DILocalVariable(name: "gid", arg: 2, scope: !4359, file: !4360, line: 66, type: !21)
!4364 = !DILocation(line: 66, column: 41, scope: !4359)
!4365 = !DILocalVariable(name: "groups", arg: 3, scope: !4359, file: !4360, line: 66, type: !3820)
!4366 = !DILocation(line: 66, column: 54, scope: !4359)
!4367 = !DILocalVariable(name: "max_n_groups", scope: !4359, file: !4360, line: 68, type: !72)
!4368 = !DILocation(line: 68, column: 7, scope: !4359)
!4369 = !DILocalVariable(name: "ng", scope: !4359, file: !4360, line: 69, type: !72)
!4370 = !DILocation(line: 69, column: 7, scope: !4359)
!4371 = !DILocalVariable(name: "g", scope: !4359, file: !4360, line: 70, type: !183)
!4372 = !DILocation(line: 70, column: 10, scope: !4359)
!4373 = !DILocation(line: 81, column: 7, scope: !4374)
!4374 = distinct !DILexicalBlock(scope: !4359, file: !4360, line: 81, column: 7)
!4375 = !DILocation(line: 81, column: 7, scope: !4359)
!4376 = !DILocation(line: 84, column: 20, scope: !4377)
!4377 = distinct !DILexicalBlock(scope: !4374, file: !4360, line: 82, column: 5)
!4378 = !DILocation(line: 86, column: 35, scope: !4377)
!4379 = !DILocation(line: 86, column: 11, scope: !4377)
!4380 = !DILocation(line: 86, column: 9, scope: !4377)
!4381 = !DILocation(line: 87, column: 11, scope: !4382)
!4382 = distinct !DILexicalBlock(scope: !4377, file: !4360, line: 87, column: 11)
!4383 = !DILocation(line: 87, column: 13, scope: !4382)
!4384 = !DILocation(line: 87, column: 11, scope: !4377)
!4385 = !DILocation(line: 88, column: 9, scope: !4382)
!4386 = !DILocation(line: 90, column: 7, scope: !4377)
!4387 = !DILocalVariable(name: "h", scope: !4388, file: !4360, line: 92, type: !183)
!4388 = distinct !DILexicalBlock(scope: !4377, file: !4360, line: 91, column: 9)
!4389 = !DILocation(line: 92, column: 18, scope: !4388)
!4390 = !DILocalVariable(name: "last_n_groups", scope: !4388, file: !4360, line: 93, type: !72)
!4391 = !DILocation(line: 93, column: 15, scope: !4388)
!4392 = !DILocation(line: 93, column: 31, scope: !4388)
!4393 = !DILocation(line: 96, column: 30, scope: !4388)
!4394 = !DILocation(line: 96, column: 40, scope: !4388)
!4395 = !DILocation(line: 96, column: 45, scope: !4388)
!4396 = !DILocation(line: 96, column: 16, scope: !4388)
!4397 = !DILocation(line: 96, column: 14, scope: !4388)
!4398 = !DILocation(line: 100, column: 15, scope: !4399)
!4399 = distinct !DILexicalBlock(scope: !4388, file: !4360, line: 100, column: 15)
!4400 = !DILocation(line: 100, column: 18, scope: !4399)
!4401 = !DILocation(line: 100, column: 22, scope: !4399)
!4402 = !DILocation(line: 100, column: 25, scope: !4399)
!4403 = !DILocation(line: 100, column: 42, scope: !4399)
!4404 = !DILocation(line: 100, column: 39, scope: !4399)
!4405 = !DILocation(line: 100, column: 15, scope: !4388)
!4406 = !DILocation(line: 101, column: 26, scope: !4399)
!4407 = !DILocation(line: 101, column: 13, scope: !4399)
!4408 = !DILocation(line: 103, column: 38, scope: !4409)
!4409 = distinct !DILexicalBlock(scope: !4388, file: !4360, line: 103, column: 15)
!4410 = !DILocation(line: 103, column: 41, scope: !4409)
!4411 = !DILocation(line: 103, column: 20, scope: !4409)
!4412 = !DILocation(line: 103, column: 18, scope: !4409)
!4413 = !DILocation(line: 103, column: 56, scope: !4409)
!4414 = !DILocation(line: 103, column: 15, scope: !4388)
!4415 = !DILocalVariable(name: "saved_errno", scope: !4416, file: !4360, line: 105, type: !72)
!4416 = distinct !DILexicalBlock(scope: !4409, file: !4360, line: 104, column: 13)
!4417 = !DILocation(line: 105, column: 19, scope: !4416)
!4418 = !DILocation(line: 105, column: 33, scope: !4416)
!4419 = !DILocation(line: 106, column: 21, scope: !4416)
!4420 = !DILocation(line: 106, column: 15, scope: !4416)
!4421 = !DILocation(line: 107, column: 23, scope: !4416)
!4422 = !DILocation(line: 107, column: 15, scope: !4416)
!4423 = !DILocation(line: 107, column: 21, scope: !4416)
!4424 = !DILocation(line: 108, column: 15, scope: !4416)
!4425 = !DILocation(line: 110, column: 15, scope: !4388)
!4426 = !DILocation(line: 110, column: 13, scope: !4388)
!4427 = !DILocation(line: 112, column: 20, scope: !4428)
!4428 = distinct !DILexicalBlock(scope: !4388, file: !4360, line: 112, column: 15)
!4429 = !DILocation(line: 112, column: 17, scope: !4428)
!4430 = !DILocation(line: 112, column: 15, scope: !4388)
!4431 = !DILocation(line: 114, column: 25, scope: !4432)
!4432 = distinct !DILexicalBlock(scope: !4428, file: !4360, line: 113, column: 13)
!4433 = !DILocation(line: 114, column: 16, scope: !4432)
!4434 = !DILocation(line: 114, column: 23, scope: !4432)
!4435 = !DILocation(line: 117, column: 22, scope: !4432)
!4436 = !DILocation(line: 117, column: 15, scope: !4432)
!4437 = distinct !{!4437, !4386, !4438}
!4438 = !DILocation(line: 119, column: 9, scope: !4377)
!4439 = !DILocation(line: 124, column: 19, scope: !4359)
!4440 = !DILocation(line: 125, column: 42, scope: !4359)
!4441 = !DILocation(line: 125, column: 52, scope: !4359)
!4442 = !DILocation(line: 125, column: 21, scope: !4359)
!4443 = !DILocation(line: 126, column: 21, scope: !4359)
!4444 = !DILocation(line: 124, column: 16, scope: !4359)
!4445 = !DILocation(line: 131, column: 7, scope: !4446)
!4446 = distinct !DILexicalBlock(scope: !4359, file: !4360, line: 131, column: 7)
!4447 = !DILocation(line: 131, column: 20, scope: !4446)
!4448 = !DILocation(line: 131, column: 7, scope: !4359)
!4449 = !DILocation(line: 133, column: 11, scope: !4450)
!4450 = distinct !DILexicalBlock(scope: !4451, file: !4360, line: 133, column: 11)
!4451 = distinct !DILexicalBlock(scope: !4446, file: !4360, line: 132, column: 5)
!4452 = !DILocation(line: 133, column: 17, scope: !4450)
!4453 = !DILocation(line: 133, column: 27, scope: !4450)
!4454 = !DILocation(line: 133, column: 35, scope: !4450)
!4455 = !DILocation(line: 133, column: 33, scope: !4450)
!4456 = !DILocation(line: 133, column: 11, scope: !4451)
!4457 = !DILocation(line: 135, column: 21, scope: !4458)
!4458 = distinct !DILexicalBlock(scope: !4450, file: !4360, line: 134, column: 9)
!4459 = !DILocation(line: 135, column: 12, scope: !4458)
!4460 = !DILocation(line: 135, column: 19, scope: !4458)
!4461 = !DILocation(line: 136, column: 16, scope: !4458)
!4462 = !DILocation(line: 136, column: 12, scope: !4458)
!4463 = !DILocation(line: 136, column: 14, scope: !4458)
!4464 = !DILocation(line: 137, column: 18, scope: !4458)
!4465 = !DILocation(line: 137, column: 22, scope: !4458)
!4466 = !DILocation(line: 137, column: 11, scope: !4458)
!4467 = !DILocation(line: 139, column: 7, scope: !4451)
!4468 = !DILocation(line: 142, column: 7, scope: !4469)
!4469 = distinct !DILexicalBlock(scope: !4359, file: !4360, line: 142, column: 7)
!4470 = !DILocation(line: 142, column: 20, scope: !4469)
!4471 = !DILocation(line: 142, column: 25, scope: !4469)
!4472 = !DILocation(line: 142, column: 30, scope: !4469)
!4473 = !DILocation(line: 142, column: 39, scope: !4469)
!4474 = !DILocation(line: 142, column: 42, scope: !4469)
!4475 = !DILocation(line: 142, column: 46, scope: !4469)
!4476 = !DILocation(line: 142, column: 7, scope: !4359)
!4477 = !DILocation(line: 143, column: 17, scope: !4469)
!4478 = !DILocation(line: 143, column: 5, scope: !4469)
!4479 = !DILocation(line: 144, column: 31, scope: !4359)
!4480 = !DILocation(line: 144, column: 7, scope: !4359)
!4481 = !DILocation(line: 144, column: 5, scope: !4359)
!4482 = !DILocation(line: 145, column: 7, scope: !4483)
!4483 = distinct !DILexicalBlock(scope: !4359, file: !4360, line: 145, column: 7)
!4484 = !DILocation(line: 145, column: 9, scope: !4483)
!4485 = !DILocation(line: 145, column: 7, scope: !4359)
!4486 = !DILocation(line: 146, column: 5, scope: !4483)
!4487 = !DILocation(line: 148, column: 9, scope: !4359)
!4488 = !DILocation(line: 149, column: 23, scope: !4359)
!4489 = !DILocation(line: 149, column: 37, scope: !4359)
!4490 = !DILocation(line: 149, column: 40, scope: !4359)
!4491 = !DILocation(line: 149, column: 50, scope: !4359)
!4492 = !DILocation(line: 149, column: 11, scope: !4359)
!4493 = !DILocation(line: 150, column: 22, scope: !4359)
!4494 = !DILocation(line: 150, column: 38, scope: !4359)
!4495 = !DILocation(line: 150, column: 42, scope: !4359)
!4496 = !DILocation(line: 150, column: 35, scope: !4359)
!4497 = !DILocation(line: 151, column: 33, scope: !4359)
!4498 = !DILocation(line: 151, column: 38, scope: !4359)
!4499 = !DILocation(line: 151, column: 42, scope: !4359)
!4500 = !DILocation(line: 151, column: 35, scope: !4359)
!4501 = !DILocation(line: 150, column: 11, scope: !4359)
!4502 = !DILocation(line: 148, column: 6, scope: !4359)
!4503 = !DILocation(line: 153, column: 7, scope: !4504)
!4504 = distinct !DILexicalBlock(scope: !4359, file: !4360, line: 153, column: 7)
!4505 = !DILocation(line: 153, column: 10, scope: !4504)
!4506 = !DILocation(line: 153, column: 7, scope: !4359)
!4507 = !DILocalVariable(name: "saved_errno", scope: !4508, file: !4360, line: 156, type: !72)
!4508 = distinct !DILexicalBlock(scope: !4504, file: !4360, line: 154, column: 5)
!4509 = !DILocation(line: 156, column: 11, scope: !4508)
!4510 = !DILocation(line: 156, column: 25, scope: !4508)
!4511 = !DILocation(line: 157, column: 13, scope: !4508)
!4512 = !DILocation(line: 157, column: 7, scope: !4508)
!4513 = !DILocation(line: 158, column: 15, scope: !4508)
!4514 = !DILocation(line: 158, column: 7, scope: !4508)
!4515 = !DILocation(line: 158, column: 13, scope: !4508)
!4516 = !DILocation(line: 159, column: 7, scope: !4508)
!4517 = !DILocation(line: 162, column: 8, scope: !4518)
!4518 = distinct !DILexicalBlock(scope: !4359, file: !4360, line: 162, column: 7)
!4519 = !DILocation(line: 162, column: 17, scope: !4518)
!4520 = !DILocation(line: 162, column: 20, scope: !4518)
!4521 = !DILocation(line: 162, column: 24, scope: !4518)
!4522 = !DILocation(line: 162, column: 7, scope: !4359)
!4523 = !DILocation(line: 164, column: 12, scope: !4524)
!4524 = distinct !DILexicalBlock(scope: !4518, file: !4360, line: 163, column: 5)
!4525 = !DILocation(line: 164, column: 8, scope: !4524)
!4526 = !DILocation(line: 164, column: 10, scope: !4524)
!4527 = !DILocation(line: 165, column: 9, scope: !4524)
!4528 = !DILocation(line: 166, column: 5, scope: !4524)
!4529 = !DILocation(line: 167, column: 13, scope: !4359)
!4530 = !DILocation(line: 167, column: 4, scope: !4359)
!4531 = !DILocation(line: 167, column: 11, scope: !4359)
!4532 = !DILocation(line: 185, column: 11, scope: !4533)
!4533 = distinct !DILexicalBlock(scope: !4359, file: !4360, line: 185, column: 7)
!4534 = !DILocation(line: 185, column: 9, scope: !4533)
!4535 = !DILocation(line: 185, column: 7, scope: !4359)
!4536 = !DILocalVariable(name: "first", scope: !4537, file: !4360, line: 187, type: !21)
!4537 = distinct !DILexicalBlock(scope: !4533, file: !4360, line: 186, column: 5)
!4538 = !DILocation(line: 187, column: 13, scope: !4537)
!4539 = !DILocation(line: 187, column: 22, scope: !4537)
!4540 = !DILocation(line: 187, column: 21, scope: !4537)
!4541 = !DILocalVariable(name: "next", scope: !4537, file: !4360, line: 188, type: !183)
!4542 = !DILocation(line: 188, column: 14, scope: !4537)
!4543 = !DILocalVariable(name: "groups_end", scope: !4537, file: !4360, line: 189, type: !183)
!4544 = !DILocation(line: 189, column: 14, scope: !4537)
!4545 = !DILocation(line: 189, column: 27, scope: !4537)
!4546 = !DILocation(line: 189, column: 31, scope: !4537)
!4547 = !DILocation(line: 189, column: 29, scope: !4537)
!4548 = !DILocation(line: 191, column: 19, scope: !4549)
!4549 = distinct !DILexicalBlock(scope: !4537, file: !4360, line: 191, column: 7)
!4550 = !DILocation(line: 191, column: 21, scope: !4549)
!4551 = !DILocation(line: 191, column: 17, scope: !4549)
!4552 = !DILocation(line: 191, column: 12, scope: !4549)
!4553 = !DILocation(line: 191, column: 26, scope: !4554)
!4554 = distinct !DILexicalBlock(scope: !4549, file: !4360, line: 191, column: 7)
!4555 = !DILocation(line: 191, column: 33, scope: !4554)
!4556 = !DILocation(line: 191, column: 31, scope: !4554)
!4557 = !DILocation(line: 191, column: 7, scope: !4549)
!4558 = !DILocation(line: 193, column: 16, scope: !4559)
!4559 = distinct !DILexicalBlock(scope: !4560, file: !4360, line: 193, column: 15)
!4560 = distinct !DILexicalBlock(scope: !4554, file: !4360, line: 192, column: 9)
!4561 = !DILocation(line: 193, column: 15, scope: !4559)
!4562 = !DILocation(line: 193, column: 24, scope: !4559)
!4563 = !DILocation(line: 193, column: 21, scope: !4559)
!4564 = !DILocation(line: 193, column: 30, scope: !4559)
!4565 = !DILocation(line: 193, column: 34, scope: !4559)
!4566 = !DILocation(line: 193, column: 33, scope: !4559)
!4567 = !DILocation(line: 193, column: 43, scope: !4559)
!4568 = !DILocation(line: 193, column: 42, scope: !4559)
!4569 = !DILocation(line: 193, column: 39, scope: !4559)
!4570 = !DILocation(line: 193, column: 15, scope: !4560)
!4571 = !DILocation(line: 194, column: 15, scope: !4559)
!4572 = !DILocation(line: 194, column: 13, scope: !4559)
!4573 = !DILocation(line: 196, column: 21, scope: !4559)
!4574 = !DILocation(line: 196, column: 20, scope: !4559)
!4575 = !DILocation(line: 196, column: 14, scope: !4559)
!4576 = !DILocation(line: 196, column: 18, scope: !4559)
!4577 = !DILocation(line: 197, column: 9, scope: !4560)
!4578 = !DILocation(line: 191, column: 49, scope: !4554)
!4579 = !DILocation(line: 191, column: 7, scope: !4554)
!4580 = distinct !{!4580, !4557, !4581}
!4581 = !DILocation(line: 197, column: 9, scope: !4549)
!4582 = !DILocation(line: 198, column: 5, scope: !4537)
!4583 = !DILocation(line: 200, column: 10, scope: !4359)
!4584 = !DILocation(line: 200, column: 3, scope: !4359)
!4585 = !DILocation(line: 201, column: 1, scope: !4359)
!4586 = distinct !DISubprogram(name: "realloc_groupbuf", scope: !4360, file: !4360, line: 43, type: !4587, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !247, retainedNodes: !4)
!4587 = !DISubroutineType(types: !4588)
!4588 = !{!183, !183, !134}
!4589 = !DILocalVariable(name: "g", arg: 1, scope: !4586, file: !4360, line: 43, type: !183)
!4590 = !DILocation(line: 43, column: 26, scope: !4586)
!4591 = !DILocalVariable(name: "num", arg: 2, scope: !4586, file: !4360, line: 43, type: !134)
!4592 = !DILocation(line: 43, column: 36, scope: !4586)
!4593 = !DILocation(line: 45, column: 7, scope: !4594)
!4594 = distinct !DILexicalBlock(scope: !4586, file: !4360, line: 45, column: 7)
!4595 = !DILocation(line: 45, column: 7, scope: !4586)
!4596 = !DILocation(line: 47, column: 7, scope: !4597)
!4597 = distinct !DILexicalBlock(scope: !4594, file: !4360, line: 46, column: 5)
!4598 = !DILocation(line: 47, column: 13, scope: !4597)
!4599 = !DILocation(line: 48, column: 7, scope: !4597)
!4600 = !DILocation(line: 51, column: 19, scope: !4586)
!4601 = !DILocation(line: 51, column: 22, scope: !4586)
!4602 = !DILocation(line: 51, column: 26, scope: !4586)
!4603 = !DILocation(line: 51, column: 10, scope: !4586)
!4604 = !DILocation(line: 51, column: 3, scope: !4586)
!4605 = !DILocation(line: 52, column: 1, scope: !4586)
!4606 = distinct !DISubprogram(name: "setlocale_null_r", scope: !4607, file: !4607, line: 269, type: !4608, scopeLine: 270, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !250, retainedNodes: !4)
!4607 = !DIFile(filename: "lib/setlocale_null.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!4608 = !DISubroutineType(types: !4609)
!4609 = !{!72, !72, !6, !134}
!4610 = !DILocalVariable(name: "category", arg: 1, scope: !4606, file: !4607, line: 269, type: !72)
!4611 = !DILocation(line: 269, column: 23, scope: !4606)
!4612 = !DILocalVariable(name: "buf", arg: 2, scope: !4606, file: !4607, line: 269, type: !6)
!4613 = !DILocation(line: 269, column: 39, scope: !4606)
!4614 = !DILocalVariable(name: "bufsize", arg: 3, scope: !4606, file: !4607, line: 269, type: !134)
!4615 = !DILocation(line: 269, column: 51, scope: !4606)
!4616 = !DILocation(line: 274, column: 35, scope: !4606)
!4617 = !DILocation(line: 274, column: 45, scope: !4606)
!4618 = !DILocation(line: 274, column: 50, scope: !4606)
!4619 = !DILocation(line: 274, column: 10, scope: !4606)
!4620 = !DILocation(line: 274, column: 3, scope: !4606)
!4621 = distinct !DISubprogram(name: "setlocale_null_unlocked", scope: !4607, file: !4607, line: 91, type: !4608, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !250, retainedNodes: !4)
!4622 = !DILocalVariable(name: "category", arg: 1, scope: !4621, file: !4607, line: 91, type: !72)
!4623 = !DILocation(line: 91, column: 30, scope: !4621)
!4624 = !DILocalVariable(name: "buf", arg: 2, scope: !4621, file: !4607, line: 91, type: !6)
!4625 = !DILocation(line: 91, column: 46, scope: !4621)
!4626 = !DILocalVariable(name: "bufsize", arg: 3, scope: !4621, file: !4607, line: 91, type: !134)
!4627 = !DILocation(line: 91, column: 58, scope: !4621)
!4628 = !DILocalVariable(name: "result", scope: !4621, file: !4607, line: 140, type: !69)
!4629 = !DILocation(line: 140, column: 15, scope: !4621)
!4630 = !DILocation(line: 140, column: 51, scope: !4621)
!4631 = !DILocation(line: 140, column: 24, scope: !4621)
!4632 = !DILocation(line: 142, column: 7, scope: !4633)
!4633 = distinct !DILexicalBlock(scope: !4621, file: !4607, line: 142, column: 7)
!4634 = !DILocation(line: 142, column: 14, scope: !4633)
!4635 = !DILocation(line: 142, column: 7, scope: !4621)
!4636 = !DILocation(line: 145, column: 11, scope: !4637)
!4637 = distinct !DILexicalBlock(scope: !4638, file: !4607, line: 145, column: 11)
!4638 = distinct !DILexicalBlock(scope: !4633, file: !4607, line: 143, column: 5)
!4639 = !DILocation(line: 145, column: 19, scope: !4637)
!4640 = !DILocation(line: 145, column: 11, scope: !4638)
!4641 = !DILocation(line: 149, column: 9, scope: !4637)
!4642 = !DILocation(line: 149, column: 16, scope: !4637)
!4643 = !DILocation(line: 150, column: 7, scope: !4638)
!4644 = !DILocalVariable(name: "length", scope: !4645, file: !4607, line: 154, type: !134)
!4645 = distinct !DILexicalBlock(scope: !4633, file: !4607, line: 153, column: 5)
!4646 = !DILocation(line: 154, column: 14, scope: !4645)
!4647 = !DILocation(line: 154, column: 31, scope: !4645)
!4648 = !DILocation(line: 154, column: 23, scope: !4645)
!4649 = !DILocation(line: 155, column: 11, scope: !4650)
!4650 = distinct !DILexicalBlock(scope: !4645, file: !4607, line: 155, column: 11)
!4651 = !DILocation(line: 155, column: 20, scope: !4650)
!4652 = !DILocation(line: 155, column: 18, scope: !4650)
!4653 = !DILocation(line: 155, column: 11, scope: !4645)
!4654 = !DILocation(line: 157, column: 19, scope: !4655)
!4655 = distinct !DILexicalBlock(scope: !4650, file: !4607, line: 156, column: 9)
!4656 = !DILocation(line: 157, column: 24, scope: !4655)
!4657 = !DILocation(line: 157, column: 32, scope: !4655)
!4658 = !DILocation(line: 157, column: 39, scope: !4655)
!4659 = !DILocation(line: 157, column: 11, scope: !4655)
!4660 = !DILocation(line: 158, column: 11, scope: !4655)
!4661 = !DILocation(line: 162, column: 15, scope: !4662)
!4662 = distinct !DILexicalBlock(scope: !4663, file: !4607, line: 162, column: 15)
!4663 = distinct !DILexicalBlock(scope: !4650, file: !4607, line: 161, column: 9)
!4664 = !DILocation(line: 162, column: 23, scope: !4662)
!4665 = !DILocation(line: 162, column: 15, scope: !4663)
!4666 = !DILocation(line: 167, column: 23, scope: !4667)
!4667 = distinct !DILexicalBlock(scope: !4662, file: !4607, line: 163, column: 13)
!4668 = !DILocation(line: 167, column: 28, scope: !4667)
!4669 = !DILocation(line: 167, column: 36, scope: !4667)
!4670 = !DILocation(line: 167, column: 44, scope: !4667)
!4671 = !DILocation(line: 167, column: 15, scope: !4667)
!4672 = !DILocation(line: 168, column: 15, scope: !4667)
!4673 = !DILocation(line: 168, column: 19, scope: !4667)
!4674 = !DILocation(line: 168, column: 27, scope: !4667)
!4675 = !DILocation(line: 168, column: 32, scope: !4667)
!4676 = !DILocation(line: 169, column: 13, scope: !4667)
!4677 = !DILocation(line: 170, column: 11, scope: !4663)
!4678 = !DILocation(line: 174, column: 1, scope: !4621)
!4679 = distinct !DISubprogram(name: "setlocale_null_androidfix", scope: !4607, file: !4607, line: 60, type: !4680, scopeLine: 61, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !250, retainedNodes: !4)
!4680 = !DISubroutineType(types: !4681)
!4681 = !{!69, !72}
!4682 = !DILocalVariable(name: "category", arg: 1, scope: !4679, file: !4607, line: 60, type: !72)
!4683 = !DILocation(line: 60, column: 32, scope: !4679)
!4684 = !DILocalVariable(name: "result", scope: !4679, file: !4607, line: 62, type: !69)
!4685 = !DILocation(line: 62, column: 15, scope: !4679)
!4686 = !DILocation(line: 62, column: 35, scope: !4679)
!4687 = !DILocation(line: 62, column: 24, scope: !4679)
!4688 = !DILocation(line: 87, column: 10, scope: !4679)
!4689 = !DILocation(line: 87, column: 3, scope: !4679)
!4690 = distinct !DISubprogram(name: "rpl_fclose", scope: !4691, file: !4691, line: 58, type: !4692, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !252, retainedNodes: !4)
!4691 = !DIFile(filename: "lib/fclose.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!4692 = !DISubroutineType(types: !4693)
!4693 = !{!72, !4694}
!4694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4695, size: 64)
!4695 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !3416, line: 7, baseType: !4696)
!4696 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !3418, line: 49, size: 1728, elements: !4697)
!4697 = !{!4698, !4699, !4700, !4701, !4702, !4703, !4704, !4705, !4706, !4707, !4708, !4709, !4710, !4711, !4713, !4714, !4715, !4716, !4717, !4718, !4719, !4720, !4721, !4722, !4723, !4724, !4725, !4726, !4727}
!4698 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !4696, file: !3418, line: 51, baseType: !72, size: 32)
!4699 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !4696, file: !3418, line: 54, baseType: !6, size: 64, offset: 64)
!4700 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !4696, file: !3418, line: 55, baseType: !6, size: 64, offset: 128)
!4701 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !4696, file: !3418, line: 56, baseType: !6, size: 64, offset: 192)
!4702 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !4696, file: !3418, line: 57, baseType: !6, size: 64, offset: 256)
!4703 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !4696, file: !3418, line: 58, baseType: !6, size: 64, offset: 320)
!4704 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !4696, file: !3418, line: 59, baseType: !6, size: 64, offset: 384)
!4705 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !4696, file: !3418, line: 60, baseType: !6, size: 64, offset: 448)
!4706 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !4696, file: !3418, line: 61, baseType: !6, size: 64, offset: 512)
!4707 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !4696, file: !3418, line: 64, baseType: !6, size: 64, offset: 576)
!4708 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !4696, file: !3418, line: 65, baseType: !6, size: 64, offset: 640)
!4709 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !4696, file: !3418, line: 66, baseType: !6, size: 64, offset: 704)
!4710 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !4696, file: !3418, line: 68, baseType: !3433, size: 64, offset: 768)
!4711 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !4696, file: !3418, line: 70, baseType: !4712, size: 64, offset: 832)
!4712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4696, size: 64)
!4713 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !4696, file: !3418, line: 72, baseType: !72, size: 32, offset: 896)
!4714 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !4696, file: !3418, line: 73, baseType: !72, size: 32, offset: 928)
!4715 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !4696, file: !3418, line: 74, baseType: !3440, size: 64, offset: 960)
!4716 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !4696, file: !3418, line: 77, baseType: !133, size: 16, offset: 1024)
!4717 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !4696, file: !3418, line: 78, baseType: !3443, size: 8, offset: 1040)
!4718 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !4696, file: !3418, line: 79, baseType: !3445, size: 8, offset: 1048)
!4719 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !4696, file: !3418, line: 81, baseType: !3449, size: 64, offset: 1088)
!4720 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !4696, file: !3418, line: 89, baseType: !3452, size: 64, offset: 1152)
!4721 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !4696, file: !3418, line: 91, baseType: !3454, size: 64, offset: 1216)
!4722 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !4696, file: !3418, line: 92, baseType: !3457, size: 64, offset: 1280)
!4723 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !4696, file: !3418, line: 93, baseType: !4712, size: 64, offset: 1344)
!4724 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !4696, file: !3418, line: 94, baseType: !8, size: 64, offset: 1408)
!4725 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !4696, file: !3418, line: 95, baseType: !134, size: 64, offset: 1472)
!4726 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !4696, file: !3418, line: 96, baseType: !72, size: 32, offset: 1536)
!4727 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !4696, file: !3418, line: 98, baseType: !3464, size: 160, offset: 1568)
!4728 = !DILocalVariable(name: "fp", arg: 1, scope: !4690, file: !4691, line: 58, type: !4694)
!4729 = !DILocation(line: 58, column: 19, scope: !4690)
!4730 = !DILocalVariable(name: "saved_errno", scope: !4690, file: !4691, line: 60, type: !72)
!4731 = !DILocation(line: 60, column: 7, scope: !4690)
!4732 = !DILocalVariable(name: "fd", scope: !4690, file: !4691, line: 61, type: !72)
!4733 = !DILocation(line: 61, column: 7, scope: !4690)
!4734 = !DILocalVariable(name: "result", scope: !4690, file: !4691, line: 62, type: !72)
!4735 = !DILocation(line: 62, column: 7, scope: !4690)
!4736 = !DILocation(line: 65, column: 16, scope: !4690)
!4737 = !DILocation(line: 65, column: 8, scope: !4690)
!4738 = !DILocation(line: 65, column: 6, scope: !4690)
!4739 = !DILocation(line: 66, column: 7, scope: !4740)
!4740 = distinct !DILexicalBlock(scope: !4690, file: !4691, line: 66, column: 7)
!4741 = !DILocation(line: 66, column: 10, scope: !4740)
!4742 = !DILocation(line: 66, column: 7, scope: !4690)
!4743 = !DILocation(line: 67, column: 28, scope: !4740)
!4744 = !DILocation(line: 67, column: 12, scope: !4740)
!4745 = !DILocation(line: 67, column: 5, scope: !4740)
!4746 = !DILocation(line: 72, column: 9, scope: !4747)
!4747 = distinct !DILexicalBlock(scope: !4690, file: !4691, line: 72, column: 7)
!4748 = !DILocation(line: 72, column: 23, scope: !4747)
!4749 = !DILocation(line: 72, column: 41, scope: !4747)
!4750 = !DILocation(line: 72, column: 33, scope: !4747)
!4751 = !DILocation(line: 72, column: 26, scope: !4747)
!4752 = !DILocation(line: 72, column: 59, scope: !4747)
!4753 = !DILocation(line: 73, column: 7, scope: !4747)
!4754 = !DILocation(line: 73, column: 18, scope: !4747)
!4755 = !DILocation(line: 73, column: 10, scope: !4747)
!4756 = !DILocation(line: 72, column: 7, scope: !4690)
!4757 = !DILocation(line: 74, column: 19, scope: !4747)
!4758 = !DILocation(line: 74, column: 17, scope: !4747)
!4759 = !DILocation(line: 74, column: 5, scope: !4747)
!4760 = !DILocation(line: 100, column: 28, scope: !4690)
!4761 = !DILocation(line: 100, column: 12, scope: !4690)
!4762 = !DILocation(line: 100, column: 10, scope: !4690)
!4763 = !DILocation(line: 105, column: 7, scope: !4764)
!4764 = distinct !DILexicalBlock(scope: !4690, file: !4691, line: 105, column: 7)
!4765 = !DILocation(line: 105, column: 19, scope: !4764)
!4766 = !DILocation(line: 105, column: 7, scope: !4690)
!4767 = !DILocation(line: 107, column: 15, scope: !4768)
!4768 = distinct !DILexicalBlock(scope: !4764, file: !4691, line: 106, column: 5)
!4769 = !DILocation(line: 107, column: 7, scope: !4768)
!4770 = !DILocation(line: 107, column: 13, scope: !4768)
!4771 = !DILocation(line: 108, column: 14, scope: !4768)
!4772 = !DILocation(line: 109, column: 5, scope: !4768)
!4773 = !DILocation(line: 111, column: 10, scope: !4690)
!4774 = !DILocation(line: 111, column: 3, scope: !4690)
!4775 = !DILocation(line: 112, column: 1, scope: !4690)
!4776 = distinct !DISubprogram(name: "rpl_fflush", scope: !4777, file: !4777, line: 129, type: !4778, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !254, retainedNodes: !4)
!4777 = !DIFile(filename: "lib/fflush.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!4778 = !DISubroutineType(types: !4779)
!4779 = !{!72, !4780}
!4780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4781, size: 64)
!4781 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !3416, line: 7, baseType: !4782)
!4782 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !3418, line: 49, size: 1728, elements: !4783)
!4783 = !{!4784, !4785, !4786, !4787, !4788, !4789, !4790, !4791, !4792, !4793, !4794, !4795, !4796, !4797, !4799, !4800, !4801, !4802, !4803, !4804, !4805, !4806, !4807, !4808, !4809, !4810, !4811, !4812, !4813}
!4784 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !4782, file: !3418, line: 51, baseType: !72, size: 32)
!4785 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !4782, file: !3418, line: 54, baseType: !6, size: 64, offset: 64)
!4786 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !4782, file: !3418, line: 55, baseType: !6, size: 64, offset: 128)
!4787 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !4782, file: !3418, line: 56, baseType: !6, size: 64, offset: 192)
!4788 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !4782, file: !3418, line: 57, baseType: !6, size: 64, offset: 256)
!4789 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !4782, file: !3418, line: 58, baseType: !6, size: 64, offset: 320)
!4790 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !4782, file: !3418, line: 59, baseType: !6, size: 64, offset: 384)
!4791 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !4782, file: !3418, line: 60, baseType: !6, size: 64, offset: 448)
!4792 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !4782, file: !3418, line: 61, baseType: !6, size: 64, offset: 512)
!4793 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !4782, file: !3418, line: 64, baseType: !6, size: 64, offset: 576)
!4794 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !4782, file: !3418, line: 65, baseType: !6, size: 64, offset: 640)
!4795 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !4782, file: !3418, line: 66, baseType: !6, size: 64, offset: 704)
!4796 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !4782, file: !3418, line: 68, baseType: !3433, size: 64, offset: 768)
!4797 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !4782, file: !3418, line: 70, baseType: !4798, size: 64, offset: 832)
!4798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4782, size: 64)
!4799 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !4782, file: !3418, line: 72, baseType: !72, size: 32, offset: 896)
!4800 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !4782, file: !3418, line: 73, baseType: !72, size: 32, offset: 928)
!4801 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !4782, file: !3418, line: 74, baseType: !3440, size: 64, offset: 960)
!4802 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !4782, file: !3418, line: 77, baseType: !133, size: 16, offset: 1024)
!4803 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !4782, file: !3418, line: 78, baseType: !3443, size: 8, offset: 1040)
!4804 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !4782, file: !3418, line: 79, baseType: !3445, size: 8, offset: 1048)
!4805 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !4782, file: !3418, line: 81, baseType: !3449, size: 64, offset: 1088)
!4806 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !4782, file: !3418, line: 89, baseType: !3452, size: 64, offset: 1152)
!4807 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !4782, file: !3418, line: 91, baseType: !3454, size: 64, offset: 1216)
!4808 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !4782, file: !3418, line: 92, baseType: !3457, size: 64, offset: 1280)
!4809 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !4782, file: !3418, line: 93, baseType: !4798, size: 64, offset: 1344)
!4810 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !4782, file: !3418, line: 94, baseType: !8, size: 64, offset: 1408)
!4811 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !4782, file: !3418, line: 95, baseType: !134, size: 64, offset: 1472)
!4812 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !4782, file: !3418, line: 96, baseType: !72, size: 32, offset: 1536)
!4813 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !4782, file: !3418, line: 98, baseType: !3464, size: 160, offset: 1568)
!4814 = !DILocalVariable(name: "stream", arg: 1, scope: !4776, file: !4777, line: 129, type: !4780)
!4815 = !DILocation(line: 129, column: 19, scope: !4776)
!4816 = !DILocation(line: 150, column: 7, scope: !4817)
!4817 = distinct !DILexicalBlock(scope: !4776, file: !4777, line: 150, column: 7)
!4818 = !DILocation(line: 150, column: 14, scope: !4817)
!4819 = !DILocation(line: 150, column: 22, scope: !4817)
!4820 = !DILocation(line: 150, column: 27, scope: !4817)
!4821 = !DILocation(line: 150, column: 7, scope: !4776)
!4822 = !DILocation(line: 151, column: 20, scope: !4817)
!4823 = !DILocation(line: 151, column: 12, scope: !4817)
!4824 = !DILocation(line: 151, column: 5, scope: !4817)
!4825 = !DILocation(line: 156, column: 44, scope: !4776)
!4826 = !DILocation(line: 156, column: 3, scope: !4776)
!4827 = !DILocation(line: 158, column: 18, scope: !4776)
!4828 = !DILocation(line: 158, column: 10, scope: !4776)
!4829 = !DILocation(line: 158, column: 3, scope: !4776)
!4830 = !DILocation(line: 235, column: 1, scope: !4776)
!4831 = distinct !DISubprogram(name: "clear_ungetc_buffer_preserving_position", scope: !4777, file: !4777, line: 41, type: !4832, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !254, retainedNodes: !4)
!4832 = !DISubroutineType(types: !4833)
!4833 = !{null, !4780}
!4834 = !DILocalVariable(name: "fp", arg: 1, scope: !4831, file: !4777, line: 41, type: !4780)
!4835 = !DILocation(line: 41, column: 48, scope: !4831)
!4836 = !DILocation(line: 43, column: 7, scope: !4837)
!4837 = distinct !DILexicalBlock(scope: !4831, file: !4777, line: 43, column: 7)
!4838 = !DILocation(line: 43, column: 11, scope: !4837)
!4839 = !DILocation(line: 43, column: 18, scope: !4837)
!4840 = !DILocation(line: 43, column: 7, scope: !4831)
!4841 = !DILocation(line: 45, column: 13, scope: !4837)
!4842 = !DILocation(line: 45, column: 5, scope: !4837)
!4843 = !DILocation(line: 46, column: 1, scope: !4831)
!4844 = distinct !DISubprogram(name: "rpl_fseeko", scope: !4845, file: !4845, line: 28, type: !4846, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !256, retainedNodes: !4)
!4845 = !DIFile(filename: "lib/fseeko.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!4846 = !DISubroutineType(types: !4847)
!4847 = !{!72, !4848, !4882, !72}
!4848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4849, size: 64)
!4849 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !3416, line: 7, baseType: !4850)
!4850 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !3418, line: 49, size: 1728, elements: !4851)
!4851 = !{!4852, !4853, !4854, !4855, !4856, !4857, !4858, !4859, !4860, !4861, !4862, !4863, !4864, !4865, !4867, !4868, !4869, !4870, !4871, !4872, !4873, !4874, !4875, !4876, !4877, !4878, !4879, !4880, !4881}
!4852 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !4850, file: !3418, line: 51, baseType: !72, size: 32)
!4853 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !4850, file: !3418, line: 54, baseType: !6, size: 64, offset: 64)
!4854 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !4850, file: !3418, line: 55, baseType: !6, size: 64, offset: 128)
!4855 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !4850, file: !3418, line: 56, baseType: !6, size: 64, offset: 192)
!4856 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !4850, file: !3418, line: 57, baseType: !6, size: 64, offset: 256)
!4857 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !4850, file: !3418, line: 58, baseType: !6, size: 64, offset: 320)
!4858 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !4850, file: !3418, line: 59, baseType: !6, size: 64, offset: 384)
!4859 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !4850, file: !3418, line: 60, baseType: !6, size: 64, offset: 448)
!4860 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !4850, file: !3418, line: 61, baseType: !6, size: 64, offset: 512)
!4861 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !4850, file: !3418, line: 64, baseType: !6, size: 64, offset: 576)
!4862 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !4850, file: !3418, line: 65, baseType: !6, size: 64, offset: 640)
!4863 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !4850, file: !3418, line: 66, baseType: !6, size: 64, offset: 704)
!4864 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !4850, file: !3418, line: 68, baseType: !3433, size: 64, offset: 768)
!4865 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !4850, file: !3418, line: 70, baseType: !4866, size: 64, offset: 832)
!4866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4850, size: 64)
!4867 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !4850, file: !3418, line: 72, baseType: !72, size: 32, offset: 896)
!4868 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !4850, file: !3418, line: 73, baseType: !72, size: 32, offset: 928)
!4869 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !4850, file: !3418, line: 74, baseType: !3440, size: 64, offset: 960)
!4870 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !4850, file: !3418, line: 77, baseType: !133, size: 16, offset: 1024)
!4871 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !4850, file: !3418, line: 78, baseType: !3443, size: 8, offset: 1040)
!4872 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !4850, file: !3418, line: 79, baseType: !3445, size: 8, offset: 1048)
!4873 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !4850, file: !3418, line: 81, baseType: !3449, size: 64, offset: 1088)
!4874 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !4850, file: !3418, line: 89, baseType: !3452, size: 64, offset: 1152)
!4875 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !4850, file: !3418, line: 91, baseType: !3454, size: 64, offset: 1216)
!4876 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !4850, file: !3418, line: 92, baseType: !3457, size: 64, offset: 1280)
!4877 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !4850, file: !3418, line: 93, baseType: !4866, size: 64, offset: 1344)
!4878 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !4850, file: !3418, line: 94, baseType: !8, size: 64, offset: 1408)
!4879 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !4850, file: !3418, line: 95, baseType: !134, size: 64, offset: 1472)
!4880 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !4850, file: !3418, line: 96, baseType: !72, size: 32, offset: 1536)
!4881 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !4850, file: !3418, line: 98, baseType: !3464, size: 160, offset: 1568)
!4882 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_t", file: !823, line: 63, baseType: !3440)
!4883 = !DILocalVariable(name: "fp", arg: 1, scope: !4844, file: !4845, line: 28, type: !4848)
!4884 = !DILocation(line: 28, column: 15, scope: !4844)
!4885 = !DILocalVariable(name: "offset", arg: 2, scope: !4844, file: !4845, line: 28, type: !4882)
!4886 = !DILocation(line: 28, column: 25, scope: !4844)
!4887 = !DILocalVariable(name: "whence", arg: 3, scope: !4844, file: !4845, line: 28, type: !72)
!4888 = !DILocation(line: 28, column: 37, scope: !4844)
!4889 = !DILocation(line: 52, column: 7, scope: !4890)
!4890 = distinct !DILexicalBlock(scope: !4844, file: !4845, line: 52, column: 7)
!4891 = !DILocation(line: 52, column: 11, scope: !4890)
!4892 = !DILocation(line: 52, column: 27, scope: !4890)
!4893 = !DILocation(line: 52, column: 31, scope: !4890)
!4894 = !DILocation(line: 52, column: 24, scope: !4890)
!4895 = !DILocation(line: 53, column: 7, scope: !4890)
!4896 = !DILocation(line: 53, column: 10, scope: !4890)
!4897 = !DILocation(line: 53, column: 14, scope: !4890)
!4898 = !DILocation(line: 53, column: 31, scope: !4890)
!4899 = !DILocation(line: 53, column: 35, scope: !4890)
!4900 = !DILocation(line: 53, column: 28, scope: !4890)
!4901 = !DILocation(line: 54, column: 7, scope: !4890)
!4902 = !DILocation(line: 54, column: 10, scope: !4890)
!4903 = !DILocation(line: 54, column: 14, scope: !4890)
!4904 = !DILocation(line: 54, column: 28, scope: !4890)
!4905 = !DILocation(line: 52, column: 7, scope: !4844)
!4906 = !DILocalVariable(name: "pos", scope: !4907, file: !4845, line: 117, type: !4882)
!4907 = distinct !DILexicalBlock(scope: !4890, file: !4845, line: 113, column: 5)
!4908 = !DILocation(line: 117, column: 13, scope: !4907)
!4909 = !DILocation(line: 117, column: 34, scope: !4907)
!4910 = !DILocation(line: 117, column: 26, scope: !4907)
!4911 = !DILocation(line: 117, column: 39, scope: !4907)
!4912 = !DILocation(line: 117, column: 47, scope: !4907)
!4913 = !DILocation(line: 117, column: 19, scope: !4907)
!4914 = !DILocation(line: 118, column: 11, scope: !4915)
!4915 = distinct !DILexicalBlock(scope: !4907, file: !4845, line: 118, column: 11)
!4916 = !DILocation(line: 118, column: 15, scope: !4915)
!4917 = !DILocation(line: 118, column: 11, scope: !4907)
!4918 = !DILocation(line: 124, column: 11, scope: !4919)
!4919 = distinct !DILexicalBlock(scope: !4915, file: !4845, line: 119, column: 9)
!4920 = !DILocation(line: 129, column: 7, scope: !4907)
!4921 = !DILocation(line: 129, column: 11, scope: !4907)
!4922 = !DILocation(line: 129, column: 18, scope: !4907)
!4923 = !DILocation(line: 130, column: 21, scope: !4907)
!4924 = !DILocation(line: 130, column: 7, scope: !4907)
!4925 = !DILocation(line: 130, column: 11, scope: !4907)
!4926 = !DILocation(line: 130, column: 19, scope: !4907)
!4927 = !DILocation(line: 161, column: 7, scope: !4907)
!4928 = !DILocation(line: 163, column: 18, scope: !4844)
!4929 = !DILocation(line: 163, column: 22, scope: !4844)
!4930 = !DILocation(line: 163, column: 30, scope: !4844)
!4931 = !DILocation(line: 163, column: 10, scope: !4844)
!4932 = !DILocation(line: 163, column: 3, scope: !4844)
!4933 = !DILocation(line: 164, column: 1, scope: !4844)
!4934 = distinct !DISubprogram(name: "c_tolower", scope: !4935, file: !4935, line: 337, type: !4936, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !258, retainedNodes: !4)
!4935 = !DIFile(filename: "./lib/c-ctype.h", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!4936 = !DISubroutineType(types: !4937)
!4937 = !{!72, !72}
!4938 = !DILocalVariable(name: "c", arg: 1, scope: !4934, file: !4935, line: 337, type: !72)
!4939 = !DILocation(line: 337, column: 16, scope: !4934)
!4940 = !DILocation(line: 339, column: 11, scope: !4934)
!4941 = !DILocation(line: 339, column: 3, scope: !4934)
!4942 = !DILocation(line: 342, column: 14, scope: !4943)
!4943 = distinct !DILexicalBlock(scope: !4934, file: !4935, line: 340, column: 5)
!4944 = !DILocation(line: 342, column: 16, scope: !4943)
!4945 = !DILocation(line: 342, column: 22, scope: !4943)
!4946 = !DILocation(line: 342, column: 7, scope: !4943)
!4947 = !DILocation(line: 344, column: 14, scope: !4943)
!4948 = !DILocation(line: 344, column: 7, scope: !4943)
!4949 = !DILocation(line: 346, column: 1, scope: !4934)
!4950 = distinct !DISubprogram(name: "getugroups", scope: !4951, file: !4951, line: 61, type: !4952, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !260, retainedNodes: !4)
!4951 = !DIFile(filename: "lib/getugroups.c", directory: "/home/newton/cfiles/coreutils/coreutils-8.32")
!4952 = !DISubroutineType(types: !4953)
!4953 = !{!72, !72, !183, !69, !21}
!4954 = !DILocalVariable(name: "maxcount", arg: 1, scope: !4950, file: !4951, line: 61, type: !72)
!4955 = !DILocation(line: 61, column: 17, scope: !4950)
!4956 = !DILocalVariable(name: "grouplist", arg: 2, scope: !4950, file: !4951, line: 61, type: !183)
!4957 = !DILocation(line: 61, column: 34, scope: !4950)
!4958 = !DILocalVariable(name: "username", arg: 3, scope: !4950, file: !4951, line: 61, type: !69)
!4959 = !DILocation(line: 61, column: 57, scope: !4950)
!4960 = !DILocalVariable(name: "gid", arg: 4, scope: !4950, file: !4951, line: 62, type: !21)
!4961 = !DILocation(line: 62, column: 19, scope: !4950)
!4962 = !DILocalVariable(name: "count", scope: !4950, file: !4951, line: 64, type: !72)
!4963 = !DILocation(line: 64, column: 7, scope: !4950)
!4964 = !DILocation(line: 66, column: 7, scope: !4965)
!4965 = distinct !DILexicalBlock(scope: !4950, file: !4951, line: 66, column: 7)
!4966 = !DILocation(line: 66, column: 11, scope: !4965)
!4967 = !DILocation(line: 66, column: 7, scope: !4950)
!4968 = !DILocation(line: 68, column: 11, scope: !4969)
!4969 = distinct !DILexicalBlock(scope: !4970, file: !4951, line: 68, column: 11)
!4970 = distinct !DILexicalBlock(scope: !4965, file: !4951, line: 67, column: 5)
!4971 = !DILocation(line: 68, column: 20, scope: !4969)
!4972 = !DILocation(line: 68, column: 11, scope: !4970)
!4973 = !DILocation(line: 69, column: 28, scope: !4969)
!4974 = !DILocation(line: 69, column: 9, scope: !4969)
!4975 = !DILocation(line: 69, column: 19, scope: !4969)
!4976 = !DILocation(line: 69, column: 26, scope: !4969)
!4977 = !DILocation(line: 70, column: 7, scope: !4970)
!4978 = !DILocation(line: 71, column: 5, scope: !4970)
!4979 = !DILocation(line: 73, column: 3, scope: !4950)
!4980 = !DILocation(line: 74, column: 3, scope: !4950)
!4981 = !DILocalVariable(name: "cp", scope: !4982, file: !4951, line: 76, type: !184)
!4982 = distinct !DILexicalBlock(scope: !4950, file: !4951, line: 75, column: 5)
!4983 = !DILocation(line: 76, column: 14, scope: !4982)
!4984 = !DILocalVariable(name: "grp", scope: !4982, file: !4951, line: 77, type: !4985)
!4985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4986, size: 64)
!4986 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group", file: !1077, line: 42, size: 256, elements: !4987)
!4987 = !{!4988, !4989, !4990, !4991}
!4988 = !DIDerivedType(tag: DW_TAG_member, name: "gr_name", scope: !4986, file: !1077, line: 44, baseType: !6, size: 64)
!4989 = !DIDerivedType(tag: DW_TAG_member, name: "gr_passwd", scope: !4986, file: !1077, line: 45, baseType: !6, size: 64, offset: 64)
!4990 = !DIDerivedType(tag: DW_TAG_member, name: "gr_gid", scope: !4986, file: !1077, line: 46, baseType: !22, size: 32, offset: 128)
!4991 = !DIDerivedType(tag: DW_TAG_member, name: "gr_mem", scope: !4986, file: !1077, line: 47, baseType: !184, size: 64, offset: 192)
!4992 = !DILocation(line: 77, column: 21, scope: !4982)
!4993 = !DILocation(line: 79, column: 7, scope: !4982)
!4994 = !DILocation(line: 79, column: 13, scope: !4982)
!4995 = !DILocation(line: 80, column: 13, scope: !4982)
!4996 = !DILocation(line: 80, column: 11, scope: !4982)
!4997 = !DILocation(line: 81, column: 11, scope: !4998)
!4998 = distinct !DILexicalBlock(scope: !4982, file: !4951, line: 81, column: 11)
!4999 = !DILocation(line: 81, column: 15, scope: !4998)
!5000 = !DILocation(line: 81, column: 11, scope: !4982)
!5001 = !DILocation(line: 82, column: 9, scope: !4998)
!5002 = !DILocation(line: 84, column: 17, scope: !5003)
!5003 = distinct !DILexicalBlock(scope: !4982, file: !4951, line: 84, column: 7)
!5004 = !DILocation(line: 84, column: 22, scope: !5003)
!5005 = !DILocation(line: 84, column: 15, scope: !5003)
!5006 = !DILocation(line: 84, column: 12, scope: !5003)
!5007 = !DILocation(line: 84, column: 31, scope: !5008)
!5008 = distinct !DILexicalBlock(scope: !5003, file: !4951, line: 84, column: 7)
!5009 = !DILocation(line: 84, column: 30, scope: !5008)
!5010 = !DILocation(line: 84, column: 7, scope: !5003)
!5011 = !DILocalVariable(name: "n", scope: !5012, file: !4951, line: 86, type: !72)
!5012 = distinct !DILexicalBlock(scope: !5008, file: !4951, line: 85, column: 9)
!5013 = !DILocation(line: 86, column: 15, scope: !5012)
!5014 = !DILocation(line: 88, column: 18, scope: !5015)
!5015 = distinct !DILexicalBlock(scope: !5012, file: !4951, line: 88, column: 16)
!5016 = !DILocation(line: 88, column: 16, scope: !5012)
!5017 = !DILocation(line: 89, column: 13, scope: !5015)
!5018 = !DILocation(line: 92, column: 18, scope: !5019)
!5019 = distinct !DILexicalBlock(scope: !5012, file: !4951, line: 92, column: 11)
!5020 = !DILocation(line: 92, column: 16, scope: !5019)
!5021 = !DILocation(line: 92, column: 23, scope: !5022)
!5022 = distinct !DILexicalBlock(scope: !5019, file: !4951, line: 92, column: 11)
!5023 = !DILocation(line: 92, column: 27, scope: !5022)
!5024 = !DILocation(line: 92, column: 25, scope: !5022)
!5025 = !DILocation(line: 92, column: 11, scope: !5019)
!5026 = !DILocation(line: 93, column: 17, scope: !5027)
!5027 = distinct !DILexicalBlock(scope: !5022, file: !4951, line: 93, column: 17)
!5028 = !DILocation(line: 93, column: 27, scope: !5027)
!5029 = !DILocation(line: 93, column: 30, scope: !5027)
!5030 = !DILocation(line: 93, column: 40, scope: !5027)
!5031 = !DILocation(line: 93, column: 46, scope: !5027)
!5032 = !DILocation(line: 93, column: 51, scope: !5027)
!5033 = !DILocation(line: 93, column: 43, scope: !5027)
!5034 = !DILocation(line: 93, column: 17, scope: !5022)
!5035 = !DILocation(line: 94, column: 15, scope: !5027)
!5036 = !DILocation(line: 92, column: 34, scope: !5022)
!5037 = !DILocation(line: 92, column: 11, scope: !5022)
!5038 = distinct !{!5038, !5025, !5039}
!5039 = !DILocation(line: 94, column: 15, scope: !5019)
!5040 = !DILocation(line: 97, column: 15, scope: !5041)
!5041 = distinct !DILexicalBlock(scope: !5012, file: !4951, line: 97, column: 15)
!5042 = !DILocation(line: 97, column: 20, scope: !5041)
!5043 = !DILocation(line: 97, column: 17, scope: !5041)
!5044 = !DILocation(line: 97, column: 15, scope: !5012)
!5045 = !DILocation(line: 99, column: 19, scope: !5046)
!5046 = distinct !DILexicalBlock(scope: !5047, file: !4951, line: 99, column: 19)
!5047 = distinct !DILexicalBlock(scope: !5041, file: !4951, line: 98, column: 13)
!5048 = !DILocation(line: 99, column: 28, scope: !5046)
!5049 = !DILocation(line: 99, column: 19, scope: !5047)
!5050 = !DILocation(line: 101, column: 23, scope: !5051)
!5051 = distinct !DILexicalBlock(scope: !5052, file: !4951, line: 101, column: 23)
!5052 = distinct !DILexicalBlock(scope: !5046, file: !4951, line: 100, column: 17)
!5053 = !DILocation(line: 101, column: 32, scope: !5051)
!5054 = !DILocation(line: 101, column: 29, scope: !5051)
!5055 = !DILocation(line: 101, column: 23, scope: !5052)
!5056 = !DILocation(line: 102, column: 21, scope: !5051)
!5057 = !DILocation(line: 103, column: 38, scope: !5052)
!5058 = !DILocation(line: 103, column: 43, scope: !5052)
!5059 = !DILocation(line: 103, column: 19, scope: !5052)
!5060 = !DILocation(line: 103, column: 29, scope: !5052)
!5061 = !DILocation(line: 103, column: 36, scope: !5052)
!5062 = !DILocation(line: 104, column: 17, scope: !5052)
!5063 = !DILocation(line: 105, column: 19, scope: !5064)
!5064 = distinct !DILexicalBlock(scope: !5047, file: !4951, line: 105, column: 19)
!5065 = !DILocation(line: 105, column: 25, scope: !5064)
!5066 = !DILocation(line: 105, column: 19, scope: !5047)
!5067 = !DILocation(line: 107, column: 19, scope: !5068)
!5068 = distinct !DILexicalBlock(scope: !5064, file: !4951, line: 106, column: 17)
!5069 = !DILocation(line: 107, column: 25, scope: !5068)
!5070 = !DILocation(line: 108, column: 19, scope: !5068)
!5071 = !DILocation(line: 110, column: 20, scope: !5047)
!5072 = !DILocation(line: 111, column: 13, scope: !5047)
!5073 = !DILocation(line: 112, column: 9, scope: !5012)
!5074 = !DILocation(line: 84, column: 35, scope: !5008)
!5075 = !DILocation(line: 84, column: 7, scope: !5008)
!5076 = distinct !{!5076, !5010, !5077}
!5077 = !DILocation(line: 112, column: 9, scope: !5003)
!5078 = distinct !{!5078, !4980, !5079}
!5079 = !DILocation(line: 113, column: 5, scope: !4950)
!5080 = !DILocation(line: 115, column: 7, scope: !5081)
!5081 = distinct !DILexicalBlock(scope: !4950, file: !4951, line: 115, column: 7)
!5082 = !DILocation(line: 115, column: 13, scope: !5081)
!5083 = !DILocation(line: 115, column: 7, scope: !4950)
!5084 = !DILocation(line: 116, column: 11, scope: !5081)
!5085 = !DILocation(line: 116, column: 5, scope: !5081)
!5086 = !DILocation(line: 115, column: 16, scope: !5081)
!5087 = !DILabel(scope: !4950, name: "done", file: !4951, line: 118)
!5088 = !DILocation(line: 118, column: 2, scope: !4950)
!5089 = !DILocalVariable(name: "saved_errno", scope: !5090, file: !4951, line: 120, type: !72)
!5090 = distinct !DILexicalBlock(scope: !4950, file: !4951, line: 119, column: 3)
!5091 = !DILocation(line: 120, column: 9, scope: !5090)
!5092 = !DILocation(line: 120, column: 23, scope: !5090)
!5093 = !DILocation(line: 121, column: 5, scope: !5090)
!5094 = !DILocation(line: 122, column: 13, scope: !5090)
!5095 = !DILocation(line: 122, column: 5, scope: !5090)
!5096 = !DILocation(line: 122, column: 11, scope: !5090)
!5097 = !DILocation(line: 125, column: 10, scope: !4950)
!5098 = !DILocation(line: 125, column: 3, scope: !4950)
