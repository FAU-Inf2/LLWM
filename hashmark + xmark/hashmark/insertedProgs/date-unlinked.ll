; ModuleID = '<stdin>'
source_filename = "ld-temp.o"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.infomap = type { i8*, i8* }
%struct.option = type { i8*, i32, i32*, i32 }
%union.YYSTYPE = type { %struct.relative_time }
%struct.relative_time = type { i64, i64, i64, i64, i64, i64, i32 }
%struct.table = type { i8*, i32, i32 }
%struct.quoting_options = type { i32, i32, [8 x i32], i8*, i8* }
%struct.slotvec = type { i64, i8* }
%struct.timespec = type { i64, i64 }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.tm_zone = type { %struct.tm_zone*, i8, [0 x i8] }
%struct.tm = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i8* }
%struct.parser_control = type { i8*, i64, i32, i32, i32, i32, %struct.textint, i64, i64, i64, i64, %struct.timespec, %struct.relative_time, i8, i8, i64, i64, i64, i64, i64, i64, i8, i8, i8, i8, i8, i8, i8, i8, i8, [3 x %struct.table] }
%struct.textint = type { i8, i64, i64 }
%union.yyalloc = type { %union.YYSTYPE }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.__mbstate_t = type { i32, %union.anon }
%union.anon = type { i32 }
%struct.timezone = type { i32, i32 }

@stderr = external dso_local global %struct._IO_FILE*, align 8
@.str = private unnamed_addr constant [39 x i8] c"Try '%s --help' for more information.\0A\00", align 1
@.str.1 = private unnamed_addr constant [90 x i8] c"Usage: %s [OPTION]... [+FORMAT]\0A  or:  %s [-u|--utc|--universal] [MMDDhhmm[[CC]YY][.ss]]\0A\00", align 1
@.str.2 = private unnamed_addr constant [71 x i8] c"Display the current time in the given FORMAT, or set the system date.\0A\00", align 1
@stdout = external dso_local global %struct._IO_FILE*, align 8
@.str.3 = private unnamed_addr constant [74 x i8] c"  -d, --date=STRING          display time described by STRING, not 'now'\0A\00", align 1
@.str.4 = private unnamed_addr constant [130 x i8] c"      --debug                annotate the parsed date,\0A                              and warn about questionable usage to stderr\0A\00", align 1
@.str.5 = private unnamed_addr constant [74 x i8] c"  -f, --file=DATEFILE        like --date; once for each line of DATEFILE\0A\00", align 1
@.str.6 = private unnamed_addr constant [351 x i8] c"  -I[FMT], --iso-8601[=FMT]  output date/time in ISO 8601 format.\0A                               FMT='date' for date only (the default),\0A                               'hours', 'minutes', 'seconds', or 'ns'\0A                               for date and time to the indicated precision.\0A                               Example: 2006-08-14T02:34:56-06:00\0A\00", align 1
@.str.7 = private unnamed_addr constant [143 x i8] c"  -R, --rfc-email            output date and time in RFC 5322 format.\0A                               Example: Mon, 14 Aug 2006 02:34:56 -0600\0A\00", align 1
@.str.8 = private unnamed_addr constant [272 x i8] c"      --rfc-3339=FMT         output date/time in RFC 3339 format.\0A                               FMT='date', 'seconds', or 'ns'\0A                               for date and time to the indicated precision.\0A                               Example: 2006-08-14 02:34:56-06:00\0A\00", align 1
@.str.9 = private unnamed_addr constant [73 x i8] c"  -r, --reference=FILE       display the last modification time of FILE\0A\00", align 1
@.str.10 = private unnamed_addr constant [134 x i8] c"  -s, --set=STRING           set time described by STRING\0A  -u, --utc, --universal     print or set Coordinated Universal Time (UTC)\0A\00", align 1
@.str.11 = private unnamed_addr constant [45 x i8] c"      --help     display this help and exit\0A\00", align 1
@.str.12 = private unnamed_addr constant [54 x i8] c"      --version  output version information and exit\0A\00", align 1
@.str.13 = private unnamed_addr constant [131 x i8] c"\0AFORMAT controls the output.  Interpreted sequences are:\0A\0A  %%   a literal %\0A  %a   locale's abbreviated weekday name (e.g., Sun)\0A\00", align 1
@.str.14 = private unnamed_addr constant [212 x i8] c"  %A   locale's full weekday name (e.g., Sunday)\0A  %b   locale's abbreviated month name (e.g., Jan)\0A  %B   locale's full month name (e.g., January)\0A  %c   locale's date and time (e.g., Thu Mar  3 23:05:25 2005)\0A\00", align 1
@.str.15 = private unnamed_addr constant [173 x i8] c"  %C   century; like %Y, except omit last two digits (e.g., 20)\0A  %d   day of month (e.g., 01)\0A  %D   date; same as %m/%d/%y\0A  %e   day of month, space padded; same as %_d\0A\00", align 1
@.str.16 = private unnamed_addr constant [164 x i8] c"  %F   full date; like %+4Y-%m-%d\0A  %g   last two digits of year of ISO week number (see %G)\0A  %G   year of ISO week number (see %V); normally useful only with %V\0A\00", align 1
@.str.17 = private unnamed_addr constant [91 x i8] c"  %h   same as %b\0A  %H   hour (00..23)\0A  %I   hour (01..12)\0A  %j   day of year (001..366)\0A\00", align 1
@.str.18 = private unnamed_addr constant [142 x i8] c"  %k   hour, space padded ( 0..23); same as %_H\0A  %l   hour, space padded ( 1..12); same as %_I\0A  %m   month (01..12)\0A  %M   minute (00..59)\0A\00", align 1
@.str.19 = private unnamed_addr constant [333 x i8] c"  %n   a newline\0A  %N   nanoseconds (000000000..999999999)\0A  %p   locale's equivalent of either AM or PM; blank if not known\0A  %P   like %p, but lower case\0A  %q   quarter of year (1..4)\0A  %r   locale's 12-hour clock time (e.g., 11:11:04 PM)\0A  %R   24-hour hour and minute; same as %H:%M\0A  %s   seconds since 1970-01-01 00:00:00 UTC\0A\00", align 1
@.str.20 = private unnamed_addr constant [106 x i8] c"  %S   second (00..60)\0A  %t   a tab\0A  %T   time; same as %H:%M:%S\0A  %u   day of week (1..7); 1 is Monday\0A\00", align 1
@.str.21 = private unnamed_addr constant [246 x i8] c"  %U   week number of year, with Sunday as first day of week (00..53)\0A  %V   ISO week number, with Monday as first day of week (01..53)\0A  %w   day of week (0..6); 0 is Sunday\0A  %W   week number of year, with Monday as first day of week (00..53)\0A\00", align 1
@.str.22 = private unnamed_addr constant [159 x i8] c"  %x   locale's date representation (e.g., 12/31/99)\0A  %X   locale's time representation (e.g., 23:13:48)\0A  %y   last two digits of year (00..99)\0A  %Y   year\0A\00", align 1
@.str.23 = private unnamed_addr constant [328 x i8] c"  %z   +hhmm numeric time zone (e.g., -0400)\0A  %:z  +hh:mm numeric time zone (e.g., -04:00)\0A  %::z  +hh:mm:ss numeric time zone (e.g., -04:00:00)\0A  %:::z  numeric time zone with : to necessary precision (e.g., -04, +05:30)\0A  %Z   alphabetic time zone abbreviation (e.g., EDT)\0A\0ABy default, date pads numeric fields with zeroes.\0A\00", align 1
@.str.24 = private unnamed_addr constant [278 x i8] c"The following optional flags may follow '%':\0A\0A  -  (hyphen) do not pad the field\0A  _  (underscore) pad with spaces\0A  0  (zero) pad with zeros\0A  +  pad with zeros, and put '+' before future years with >4 digits\0A  ^  use upper case if possible\0A  #  use opposite case if possible\0A\00", align 1
@.str.25 = private unnamed_addr constant [240 x i8] c"\0AAfter any flags comes an optional field width, as a decimal number;\0Athen an optional modifier, which is either\0AE to use the locale's alternate representations if available, or\0AO to use the locale's alternate numeric symbols if available.\0A\00", align 1
@.str.26 = private unnamed_addr constant [334 x i8] c"\0AExamples:\0AConvert seconds since the epoch (1970-01-01 UTC) to a date\0A  $ date --date='@2147483647'\0A\0AShow the time on the west coast of the US (use tzselect(1) to find TZ)\0A  $ TZ='America/Los_Angeles' date\0A\0AShow the local time for 9AM next Friday on the west coast of the US\0A  $ date --date='TZ=\22America/Los_Angeles\22 09:00 next Fri'\0A\00", align 1
@.str.27 = private unnamed_addr constant [5 x i8] c"date\00", align 1
@__const.emit_ancillary_info.infomap = private unnamed_addr constant [7 x %struct.infomap] [%struct.infomap { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.47, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.48, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.29, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.49, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.50, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.51, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.52, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.51, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.53, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.51, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.54, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.51, i32 0, i32 0) }, %struct.infomap zeroinitializer], align 16
@.str.55 = private unnamed_addr constant [23 x i8] c"\0A%s online help: <%s>\0A\00", align 1
@.str.34 = private unnamed_addr constant [14 x i8] c"GNU coreutils\00", align 1
@.str.56 = private unnamed_addr constant [40 x i8] c"https://www.gnu.org/software/coreutils/\00", align 1
@.str.57 = private unnamed_addr constant [4 x i8] c"en_\00", align 1
@.str.58 = private unnamed_addr constant [71 x i8] c"Report any translation bugs to <https://translationproject.org/team/>\0A\00", align 1
@.str.59 = private unnamed_addr constant [27 x i8] c"Full documentation <%s%s>\0A\00", align 1
@.str.60 = private unnamed_addr constant [51 x i8] c"or available locally via: info '(coreutils) %s%s'\0A\00", align 1
@.str.61 = private unnamed_addr constant [12 x i8] c" invocation\00", align 1
@.str.28 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.47 = private unnamed_addr constant [2 x i8] c"[\00", align 1
@.str.48 = private unnamed_addr constant [16 x i8] c"test invocation\00", align 1
@.str.29 = private unnamed_addr constant [10 x i8] c"coreutils\00", align 1
@.str.49 = private unnamed_addr constant [22 x i8] c"Multi-call invocation\00", align 1
@.str.50 = private unnamed_addr constant [10 x i8] c"sha224sum\00", align 1
@.str.51 = private unnamed_addr constant [15 x i8] c"sha2 utilities\00", align 1
@.str.52 = private unnamed_addr constant [10 x i8] c"sha256sum\00", align 1
@.str.53 = private unnamed_addr constant [10 x i8] c"sha384sum\00", align 1
@.str.54 = private unnamed_addr constant [10 x i8] c"sha512sum\00", align 1
@.str.46 = private unnamed_addr constant [75 x i8] c"\0AMandatory arguments to long options are mandatory for short options too.\0A\00", align 1
@.str.30 = private unnamed_addr constant [24 x i8] c"/usr/local/share/locale\00", align 1
@short_options = internal constant [14 x i8] c"d:f:I::r:Rs:u\00", align 1
@long_options = internal constant [16 x %struct.option] [%struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.27, i32 0, i32 0), i32 1, i32* null, i32 100 }, %struct.option { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.62, i32 0, i32 0), i32 0, i32* null, i32 129 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.63, i32 0, i32 0), i32 1, i32* null, i32 102 }, %struct.option { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.64, i32 0, i32 0), i32 2, i32* null, i32 73 }, %struct.option { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.65, i32 0, i32 0), i32 1, i32* null, i32 114 }, %struct.option { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.66, i32 0, i32 0), i32 0, i32* null, i32 82 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.67, i32 0, i32 0), i32 0, i32* null, i32 82 }, %struct.option { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.68, i32 0, i32 0), i32 0, i32* null, i32 82 }, %struct.option { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.69, i32 0, i32 0), i32 1, i32* null, i32 128 }, %struct.option { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.70, i32 0, i32 0), i32 1, i32* null, i32 115 }, %struct.option { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.71, i32 0, i32 0), i32 0, i32* null, i32 117 }, %struct.option { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.72, i32 0, i32 0), i32 0, i32* null, i32 117 }, %struct.option { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.73, i32 0, i32 0), i32 0, i32* null, i32 117 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.74, i32 0, i32 0), i32 0, i32* null, i32 -130 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.75, i32 0, i32 0), i32 0, i32* null, i32 -131 }, %struct.option zeroinitializer], align 16
@optarg = external dso_local global i8*, align 8
@parse_datetime_flags = internal global i32 0, align 4
@.str.31 = private unnamed_addr constant [11 x i8] c"--rfc-3339\00", align 1
@time_spec_string = internal constant [6 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.76, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.77, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.27, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.78, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.79, i32 0, i32 0), i8* null], align 16
@time_spec = internal constant [5 x i32] [i32 3, i32 4, i32 0, i32 1, i32 2], align 16
@main.rfc_3339_format = internal constant [3 x [32 x i8]] [[32 x i8] c"%Y-%m-%d\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"%Y-%m-%d %H:%M:%S%:z\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"%Y-%m-%d %H:%M:%S.%N%:z\00\00\00\00\00\00\00\00\00"], align 16
@.str.32 = private unnamed_addr constant [11 x i8] c"--iso-8601\00", align 1
@main.iso_8601_format = internal constant [5 x [32 x i8]] [[32 x i8] c"%Y-%m-%d\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"%Y-%m-%dT%H:%M:%S%:z\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"%Y-%m-%dT%H:%M:%S,%N%:z\00\00\00\00\00\00\00\00\00", [32 x i8] c"%Y-%m-%dT%H%:z\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"%Y-%m-%dT%H:%M%:z\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00"], align 16
@rfc_email_format = internal constant [25 x i8] c"%a, %d %b %Y %H:%M:%S %z\00", align 16
@.str.33 = private unnamed_addr constant [8 x i8] c"TZ=UTC0\00", align 1
@.str.35 = private unnamed_addr constant [16 x i8] c"David MacKenzie\00", align 1
@.str.36 = private unnamed_addr constant [34 x i8] c"multiple output formats specified\00", align 1
@.str.37 = private unnamed_addr constant [65 x i8] c"the options to specify dates for printing are mutually exclusive\00", align 1
@.str.38 = private unnamed_addr constant [63 x i8] c"the options to print and set the time may not be used together\00", align 1
@optind = external dso_local global i32, align 4
@.str.39 = private unnamed_addr constant [17 x i8] c"extra operand %s\00", align 1
@.str.40 = private unnamed_addr constant [145 x i8] c"the argument %s lacks a leading '+';\0Awhen using an option to specify date(s), any non-option\0Aargument must be a format string beginning with '+'\00", align 1
@.str.41 = private unnamed_addr constant [24 x i8] c"%a %b %e %H:%M:%S %Z %Y\00", align 1
@.str.42 = private unnamed_addr constant [3 x i8] c"TZ\00", align 1
@.str.43 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.44 = private unnamed_addr constant [16 x i8] c"invalid date %s\00", align 1
@.str.45 = private unnamed_addr constant [16 x i8] c"cannot set date\00", align 1
@.str.83 = private unnamed_addr constant [2 x i8] c"C\00", align 1
@.str.84 = private unnamed_addr constant [24 x i8] c"time %s is out of range\00", align 1
@.str.80 = private unnamed_addr constant [2 x i8] c"-\00", align 1
@.str.81 = private unnamed_addr constant [15 x i8] c"standard input\00", align 1
@stdin = external dso_local global %struct._IO_FILE*, align 8
@.str.82 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.76 = private unnamed_addr constant [6 x i8] c"hours\00", align 1
@.str.77 = private unnamed_addr constant [8 x i8] c"minutes\00", align 1
@.str.78 = private unnamed_addr constant [8 x i8] c"seconds\00", align 1
@.str.79 = private unnamed_addr constant [3 x i8] c"ns\00", align 1
@.str.62 = private unnamed_addr constant [6 x i8] c"debug\00", align 1
@.str.63 = private unnamed_addr constant [5 x i8] c"file\00", align 1
@.str.64 = private unnamed_addr constant [9 x i8] c"iso-8601\00", align 1
@.str.65 = private unnamed_addr constant [10 x i8] c"reference\00", align 1
@.str.66 = private unnamed_addr constant [10 x i8] c"rfc-email\00", align 1
@.str.67 = private unnamed_addr constant [8 x i8] c"rfc-822\00", align 1
@.str.68 = private unnamed_addr constant [9 x i8] c"rfc-2822\00", align 1
@.str.69 = private unnamed_addr constant [9 x i8] c"rfc-3339\00", align 1
@.str.70 = private unnamed_addr constant [4 x i8] c"set\00", align 1
@.str.71 = private unnamed_addr constant [4 x i8] c"uct\00", align 1
@.str.72 = private unnamed_addr constant [4 x i8] c"utc\00", align 1
@.str.73 = private unnamed_addr constant [10 x i8] c"universal\00", align 1
@.str.74 = private unnamed_addr constant [5 x i8] c"help\00", align 1
@.str.75 = private unnamed_addr constant [8 x i8] c"version\00", align 1
@Version = internal global i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.85, i32 0, i32 0), align 8
@.str.85 = private unnamed_addr constant [5 x i8] c"8.32\00", align 1
@.str.86 = private unnamed_addr constant [27 x i8] c"invalid argument %s for %s\00", align 1
@.str.1.87 = private unnamed_addr constant [29 x i8] c"ambiguous argument %s for %s\00", align 1
@.str.2.88 = private unnamed_addr constant [21 x i8] c"Valid arguments are:\00", align 1
@.str.3.89 = private unnamed_addr constant [8 x i8] c"\0A  - %s\00", align 1
@.str.4.90 = private unnamed_addr constant [5 x i8] c", %s\00", align 1
@argmatch_die = internal global void ()* @__argmatch_die, align 8
@ignore_EPIPE = internal global i8 0, align 1
@.str.97 = private unnamed_addr constant [12 x i8] c"write error\00", align 1
@file_name = internal global i8* null, align 8
@.str.1.98 = private unnamed_addr constant [7 x i8] c"%s: %s\00", align 1
@.str.2.99 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@exit_failure = internal global i32 1, align 4
@.str.104 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.1.105 = private unnamed_addr constant [9 x i8] c"%m/%d/%y\00", align 1
@.str.2.106 = private unnamed_addr constant [9 x i8] c"%Y-%m-%d\00", align 1
@.str.3.107 = private unnamed_addr constant [6 x i8] c"%H:%M\00", align 1
@.str.4.108 = private unnamed_addr constant [9 x i8] c"%H:%M:%S\00", align 1
@yyparse.yyval_default = internal global %union.YYSTYPE zeroinitializer, align 8
@yypact = internal constant [114 x i8] c"&\1BM\A3.\A3\A3\A3\A3\A3\A3\A3\A3\A3\A3\A3\A3\A3\A3\A3>\A3R\FDB\03J\FCSTK\A3\A3\A3\A3\A3\A3\A3\A3\A3G\A3]\A3\A3\A3\A3\A3\A3NH\A3\A3\A3\A3\A3\A3\A3\A3\19\A3\A3\A3\A3\A3\A3\A3\A3\A3\A3\A3\A3\A3\A3\A3\15\13OP\A3\A3\A3\A3\A3Q\A3\A3UV\A3\A3\A3\A3\A3\FAL\11\A3\A3\A3\A3WE\A3\A3XY\FF\A3\12\A3\A3E[", align 16
@yytranslate = internal constant [278 x i8] calign 16
@yycheck = internal constant [113 x i8] c"\1B\05\06\07\08\09\0A\04\0C\0Ff\0F\10\13\0F\13\13\14\13\19p\19\13\1B\05\06\07\08\09\0A\05\06\07\08\09\0A\13\13\13k\13\14\19\19\19q\13\14\15\16\19\05\06\07\08\09\0A\0B\0C\0D\0E\17\10\11\12\13\14\15\16`\18\05\06\07\08\09\0A\00\0C\05\06\07\08\09\0A\19\04\1B\1A\14\1E\16\09\09\13\18\03\13\1A\14\14\14;\1BT\14\14\FF\14\14\13\FF\19", align 16
@yytable = internal constant [113 x i8] c"OCDEFGH:IdkJKenL12efqM;N=>?@AB=>?@ABee\5CoZ[jpXo\05\06\07\08X\0D\0E\0F\10\11\12\13\14\15\16\01\17\18\19\1A\1B\1C\1DO\1E345678\0C9=>?@AB<0P/\06S\08QR\1ATUVW^_`Yiabc\00lme\00X", align 16
@yydefact = internal constant [114 x i8] c"\05\00\00\02\03UWTV\04RS\018;ADI>Q%#\1C\00\00\1E\00X\00\00\1F\06\07\10\08\15\09\0A\0C\0B1\0D4J5\0E\0F&\1D\00-69?BE<'$Z KLNOPM7:@CF=(\12/Z\00\00\16YGH!\003,\00\00\22+02\1B\19)\00\11.[\13Z\00\17\1A\00\00\19*\19\14\18\00\19", align 16
@yyr2 = internal constant [92 x i8] c"\00\02\01\01\02\00\02\01\01\01\01\01\01\01\01\01\01\03\02\04\06\01\02\04\06\00\01\02\01\02\01\01\02\02\03\01\02\01\02\02\02\03\05\03\03\02\04\02\03\01\03\02\01\01\02\02\01\02\02\01\02\02\01\02\02\01\02\02\01\02\02\02\02\01\01\02\02\02\02\02\02\01\01\01\01\01\01\01\01\02\00\02", align 16
@.str.113 = private unnamed_addr constant [18 x i8] c"number of seconds\00", align 1
@.str.1.114 = private unnamed_addr constant [9 x i8] c"datetime\00", align 1
@.str.2.115 = private unnamed_addr constant [5 x i8] c"time\00", align 1
@.str.3.116 = private unnamed_addr constant [11 x i8] c"local_zone\00", align 1
@.str.4.117 = private unnamed_addr constant [5 x i8] c"zone\00", align 1
@.str.5.118 = private unnamed_addr constant [5 x i8] c"date\00", align 1
@.str.6.119 = private unnamed_addr constant [4 x i8] c"day\00", align 1
@.str.7.120 = private unnamed_addr constant [9 x i8] c"relative\00", align 1
@.str.8.121 = private unnamed_addr constant [7 x i8] c"number\00", align 1
@.str.9.122 = private unnamed_addr constant [7 x i8] c"hybrid\00", align 1
@.str.10.123 = private unnamed_addr constant [56 x i8] c"warning: value %ld has %ld digits. Assuming YYYY/MM/DD\0A\00", align 1
@.str.11.124 = private unnamed_addr constant [66 x i8] c"warning: value %ld has less than 4 digits. Assuming MM/DD/YY[YY]\0A\00", align 1
@yyr1 = internal constant [92 x i8] c"\00\1C\1D\1D\1E\1F\1F         !\22####$$$%%&''((((((())))*********+,,,---------------------....../0011223455", align 16
@yypgoto = internal constant [26 x i8] c"\A3\A3\A3\A3\A3\A3\A3\A3\14\BC\E5\A3\A3\A3\A3\A3\A3\A3<\A3\A3\A3\A4\A3\A3+", align 16
@yydefgoto = internal constant [26 x i8] c"\FF\02\03\04\1F !\22#gh$%&'()*+,\09\0A\0B-.]", align 16
@.str.12.125 = private unnamed_addr constant [13 x i8] c"syntax error\00", align 1
@.str.13.126 = private unnamed_addr constant [18 x i8] c"Error: discarding\00", align 1
@yystos = internal constant [114 x i8] c"\00\17\1D\1E\1F\13\14\15\16012\00\05\06\07\08\09\0A\0B\0C\0D\0E\10\11\12\13\14\15\16\18 !\22#$'()*+,-./34\1A\04\13\14\05\06\07\08\09\0A\0C\04\13.\05\06\07\08\09\0A\05\06\07\08\09\0A\0C\0F\10\13\19\1B&.\09\09.\18\03\13\1A\195\13\14\135\14\14\14$\14\14\0F\13\19%&\1B\192\14\14\0F%\192", align 16
@.str.14.127 = private unnamed_addr constant [15 x i8] c"Error: popping\00", align 1
@.str.15.128 = private unnamed_addr constant [17 x i8] c"memory exhausted\00", align 1
@.str.16.129 = private unnamed_addr constant [30 x i8] c"Cleanup: discarding lookahead\00", align 1
@.str.17.130 = private unnamed_addr constant [17 x i8] c"Cleanup: popping\00", align 1
@.str.97.131 = private unnamed_addr constant [9 x i8] c"Deleting\00", align 1
@.str.96 = private unnamed_addr constant [7 x i8] c"date: \00", align 1
@.str.77.132 = private unnamed_addr constant [17 x i8] c"parsed %s part: \00", align 1
@.str.87 = private unnamed_addr constant [16 x i8] c"today/this/now\0A\00", align 1
@.str.88 = private unnamed_addr constant [8 x i8] c"year(s)\00", align 1
@.str.89 = private unnamed_addr constant [9 x i8] c"month(s)\00", align 1
@.str.90 = private unnamed_addr constant [7 x i8] c"day(s)\00", align 1
@.str.91 = private unnamed_addr constant [8 x i8] c"hour(s)\00", align 1
@.str.92 = private unnamed_addr constant [8 x i8] c"minutes\00", align 1
@.str.93 = private unnamed_addr constant [8 x i8] c"seconds\00", align 1
@.str.94 = private unnamed_addr constant [12 x i8] c"nanoseconds\00", align 1
@.str.95 = private unnamed_addr constant [9 x i8] c" %+ld %s\00", align 1
@.str.78.133 = private unnamed_addr constant [26 x i8] c"(Y-M-D) %04ld-%02ld-%02ld\00", align 1
@.str.79.134 = private unnamed_addr constant [12 x i8] c"year: %04ld\00", align 1
@.str.80.135 = private unnamed_addr constant [19 x i8] c" %02ld:%02ld:%02ld\00", align 1
@.str.81.136 = private unnamed_addr constant [6 x i8] c".%09d\00", align 1
@.str.41.137 = private unnamed_addr constant [3 x i8] c"pm\00", align 1
@.str.82.138 = private unnamed_addr constant [31 x i8] c"%s (day ordinal=%ld number=%d)\00", align 1
@.str.83.139 = private unnamed_addr constant [12 x i8] c" isdst=%d%s\00", align 1
@.str.84.140 = private unnamed_addr constant [5 x i8] c" DST\00", align 1
@.str.42.141 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.85.142 = private unnamed_addr constant [7 x i8] c" UTC%s\00", align 1
@.str.86.143 = private unnamed_addr constant [23 x i8] c"number of seconds: %ld\00", align 1
@.str.233 = private unnamed_addr constant [7 x i8] c"%c%02d\00", align 1
@str_days.ordinal_values = internal constant [14 x [11 x i8]] [[11 x i8] c"last\00\00\00\00\00\00\00", [11 x i8] c"this\00\00\00\00\00\00\00", [11 x i8] c"next/first\00", [11 x i8] c"(SECOND)\00\00\00", [11 x i8] c"third\00\00\00\00\00\00", [11 x i8] c"fourth\00\00\00\00\00", [11 x i8] c"fifth\00\00\00\00\00\00", [11 x i8] c"sixth\00\00\00\00\00\00", [11 x i8] c"seventh\00\00\00\00", [11 x i8] c"eight\00\00\00\00\00\00", [11 x i8] c"ninth\00\00\00\00\00\00", [11 x i8] c"tenth\00\00\00\00\00\00", [11 x i8] c"eleventh\00\00\00", [11 x i8] c"twelfth\00\00\00\00"], align 16
@.str.251 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.252 = private unnamed_addr constant [4 x i8] c"%ld\00", align 1
@.str.253 = private unnamed_addr constant [4 x i8] c" %s\00", align 1
@str_days.days_values = internal constant [7 x [4 x i8]] [[4 x i8] c"Sun\00", [4 x i8] c"Mon\00", [4 x i8] c"Tue\00", [4 x i8] c"Wed\00", [4 x i8] c"Thu\00", [4 x i8] c"Fri\00", [4 x i8] c"Sat\00"], align 16
@.str.98 = private unnamed_addr constant [26 x i8] c"error: unknown word '%s'\0A\00", align 1
@meridian_table = internal constant [5 x %struct.table] [%struct.table { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.99, i32 0, i32 0), i32 270, i32 0 }, %struct.table { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.100, i32 0, i32 0), i32 270, i32 0 }, %struct.table { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.101, i32 0, i32 0), i32 270, i32 1 }, %struct.table { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.102, i32 0, i32 0), i32 270, i32 1 }, %struct.table zeroinitializer], align 16
@month_and_day_table = internal constant [25 x %struct.table] [%struct.table { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.103, i32 0, i32 0), i32 271, i32 1 }, %struct.table { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.104.144, i32 0, i32 0), i32 271, i32 2 }, %struct.table { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.105, i32 0, i32 0), i32 271, i32 3 }, %struct.table { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.106, i32 0, i32 0), i32 271, i32 4 }, %struct.table { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.107, i32 0, i32 0), i32 271, i32 5 }, %struct.table { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.108, i32 0, i32 0), i32 271, i32 6 }, %struct.table { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.109, i32 0, i32 0), i32 271, i32 7 }, %struct.table { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.110, i32 0, i32 0), i32 271, i32 8 }, %struct.table { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.111, i32 0, i32 0), i32 271, i32 9 }, %struct.table { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.112, i32 0, i32 0), i32 271, i32 9 }, %struct.table { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.113.145, i32 0, i32 0), i32 271, i32 10 }, %struct.table { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.114, i32 0, i32 0), i32 271, i32 11 }, %struct.table { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.115, i32 0, i32 0), i32 271, i32 12 }, %struct.table { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.116, i32 0, i32 0), i32 267, i32 0 }, %struct.table { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.117, i32 0, i32 0), i32 267, i32 1 }, %struct.table { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.118, i32 0, i32 0), i32 267, i32 2 }, %struct.table { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.119, i32 0, i32 0), i32 267, i32 2 }, %struct.table { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.120, i32 0, i32 0), i32 267, i32 3 }, %struct.table { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.121, i32 0, i32 0), i32 267, i32 3 }, %struct.table { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.122, i32 0, i32 0), i32 267, i32 4 }, %struct.table { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.123, i32 0, i32 0), i32 267, i32 4 }, %struct.table { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.124, i32 0, i32 0), i32 267, i32 4 }, %struct.table { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.125, i32 0, i32 0), i32 267, i32 5 }, %struct.table { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.126, i32 0, i32 0), i32 267, i32 6 }, %struct.table zeroinitializer], align 16
@dst_table = internal constant [1 x %struct.table] [%struct.table { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.177, i32 0, i32 0), i32 259, i32 0 }], align 16
@time_units_table = internal constant [11 x %struct.table] [%struct.table { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.178, i32 0, i32 0), i32 260, i32 1 }, %struct.table { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.179, i32 0, i32 0), i32 261, i32 1 }, %struct.table { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.180, i32 0, i32 0), i32 265, i32 14 }, %struct.table { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.181, i32 0, i32 0), i32 265, i32 7 }, %struct.table { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.182, i32 0, i32 0), i32 265, i32 1 }, %struct.table { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.183, i32 0, i32 0), i32 262, i32 1 }, %struct.table { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.184, i32 0, i32 0), i32 263, i32 1 }, %struct.table { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.185, i32 0, i32 0), i32 263, i32 1 }, %struct.table { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.186, i32 0, i32 0), i32 264, i32 1 }, %struct.table { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.187, i32 0, i32 0), i32 264, i32 1 }, %struct.table zeroinitializer], align 16
@relative_time_table = internal constant [21 x %struct.table] [%struct.table { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.188, i32 0, i32 0), i32 266, i32 1 }, %struct.table { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.189, i32 0, i32 0), i32 266, i32 -1 }, %struct.table { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.190, i32 0, i32 0), i32 266, i32 0 }, %struct.table { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.191, i32 0, i32 0), i32 266, i32 0 }, %struct.table { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.192, i32 0, i32 0), i32 272, i32 -1 }, %struct.table { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.193, i32 0, i32 0), i32 272, i32 0 }, %struct.table { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.194, i32 0, i32 0), i32 272, i32 1 }, %struct.table { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.195, i32 0, i32 0), i32 272, i32 1 }, %struct.table { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.196, i32 0, i32 0), i32 272, i32 3 }, %struct.table { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.197, i32 0, i32 0), i32 272, i32 4 }, %struct.table { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.198, i32 0, i32 0), i32 272, i32 5 }, %struct.table { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.199, i32 0, i32 0), i32 272, i32 6 }, %struct.table { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.200, i32 0, i32 0), i32 272, i32 7 }, %struct.table { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.201, i32 0, i32 0), i32 272, i32 8 }, %struct.table { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.202, i32 0, i32 0), i32 272, i32 9 }, %struct.table { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.203, i32 0, i32 0), i32 272, i32 10 }, %struct.table { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.204, i32 0, i32 0), i32 272, i32 11 }, %struct.table { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.205, i32 0, i32 0), i32 272, i32 12 }, %struct.table { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.206, i32 0, i32 0), i32 258, i32 -1 }, %struct.table { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.207, i32 0, i32 0), i32 258, i32 1 }, %struct.table zeroinitializer], align 16
@military_table = internal constant [26 x %struct.table] [%struct.table { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.208, i32 0, i32 0), i32 273, i32 3600 }, %struct.table { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.209, i32 0, i32 0), i32 273, i32 7200 }, %struct.table { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.210, i32 0, i32 0), i32 273, i32 10800 }, %struct.table { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.211, i32 0, i32 0), i32 273, i32 14400 }, %struct.table { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.212, i32 0, i32 0), i32 273, i32 18000 }, %struct.table { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.213, i32 0, i32 0), i32 273, i32 21600 }, %struct.table { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.214, i32 0, i32 0), i32 273, i32 25200 }, %struct.table { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.215, i32 0, i32 0), i32 273, i32 28800 }, %struct.table { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.216, i32 0, i32 0), i32 273, i32 32400 }, %struct.table { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.217, i32 0, i32 0), i32 273, i32 36000 }, %struct.table { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.218, i32 0, i32 0), i32 273, i32 39600 }, %struct.table { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.219, i32 0, i32 0), i32 273, i32 43200 }, %struct.table { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.220, i32 0, i32 0), i32 273, i32 -3600 }, %struct.table { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.221, i32 0, i32 0), i32 273, i32 -7200 }, %struct.table { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.222, i32 0, i32 0), i32 273, i32 -10800 }, %struct.table { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.223, i32 0, i32 0), i32 273, i32 -14400 }, %struct.table { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.224, i32 0, i32 0), i32 273, i32 -18000 }, %struct.table { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.225, i32 0, i32 0), i32 273, i32 -21600 }, %struct.table { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.226, i32 0, i32 0), i32 84, i32 0 }, %struct.table { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.227, i32 0, i32 0), i32 273, i32 -28800 }, %struct.table { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.228, i32 0, i32 0), i32 273, i32 -32400 }, %struct.table { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.229, i32 0, i32 0), i32 273, i32 -36000 }, %struct.table { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.230, i32 0, i32 0), i32 273, i32 -39600 }, %struct.table { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.231, i32 0, i32 0), i32 273, i32 -43200 }, %struct.table { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.232, i32 0, i32 0), i32 273, i32 0 }, %struct.table zeroinitializer], align 16
@.str.208 = private unnamed_addr constant [2 x i8] c"A\00", align 1
@.str.209 = private unnamed_addr constant [2 x i8] c"B\00", align 1
@.str.210 = private unnamed_addr constant [2 x i8] c"C\00", align 1
@.str.211 = private unnamed_addr constant [2 x i8] c"D\00", align 1
@.str.212 = private unnamed_addr constant [2 x i8] c"E\00", align 1
@.str.213 = private unnamed_addr constant [2 x i8] c"F\00", align 1
@.str.214 = private unnamed_addr constant [2 x i8] c"G\00", align 1
@.str.215 = private unnamed_addr constant [2 x i8] c"H\00", align 1
@.str.216 = private unnamed_addr constant [2 x i8] c"I\00", align 1
@.str.217 = private unnamed_addr constant [2 x i8] c"K\00", align 1
@.str.218 = private unnamed_addr constant [2 x i8] c"L\00", align 1
@.str.219 = private unnamed_addr constant [2 x i8] c"M\00", align 1
@.str.220 = private unnamed_addr constant [2 x i8] c"N\00", align 1
@.str.221 = private unnamed_addr constant [2 x i8] c"O\00", align 1
@.str.222 = private unnamed_addr constant [2 x i8] c"P\00", align 1
@.str.223 = private unnamed_addr constant [2 x i8] c"Q\00", align 1
@.str.224 = private unnamed_addr constant [2 x i8] c"R\00", align 1
@.str.225 = private unnamed_addr constant [2 x i8] c"S\00", align 1
@.str.226 = private unnamed_addr constant [2 x i8] c"T\00", align 1
@.str.227 = private unnamed_addr constant [2 x i8] c"U\00", align 1
@.str.228 = private unnamed_addr constant [2 x i8] c"V\00", align 1
@.str.229 = private unnamed_addr constant [2 x i8] c"W\00", align 1
@.str.230 = private unnamed_addr constant [2 x i8] c"X\00", align 1
@.str.231 = private unnamed_addr constant [2 x i8] c"Y\00", align 1
@.str.232 = private unnamed_addr constant [2 x i8] c"Z\00", align 1
@.str.188 = private unnamed_addr constant [9 x i8] c"TOMORROW\00", align 1
@.str.189 = private unnamed_addr constant [10 x i8] c"YESTERDAY\00", align 1
@.str.190 = private unnamed_addr constant [6 x i8] c"TODAY\00", align 1
@.str.191 = private unnamed_addr constant [4 x i8] c"NOW\00", align 1
@.str.192 = private unnamed_addr constant [5 x i8] c"LAST\00", align 1
@.str.193 = private unnamed_addr constant [5 x i8] c"THIS\00", align 1
@.str.194 = private unnamed_addr constant [5 x i8] c"NEXT\00", align 1
@.str.195 = private unnamed_addr constant [6 x i8] c"FIRST\00", align 1
@.str.196 = private unnamed_addr constant [6 x i8] c"THIRD\00", align 1
@.str.197 = private unnamed_addr constant [7 x i8] c"FOURTH\00", align 1
@.str.198 = private unnamed_addr constant [6 x i8] c"FIFTH\00", align 1
@.str.199 = private unnamed_addr constant [6 x i8] c"SIXTH\00", align 1
@.str.200 = private unnamed_addr constant [8 x i8] c"SEVENTH\00", align 1
@.str.201 = private unnamed_addr constant [7 x i8] c"EIGHTH\00", align 1
@.str.202 = private unnamed_addr constant [6 x i8] c"NINTH\00", align 1
@.str.203 = private unnamed_addr constant [6 x i8] c"TENTH\00", align 1
@.str.204 = private unnamed_addr constant [9 x i8] c"ELEVENTH\00", align 1
@.str.205 = private unnamed_addr constant [8 x i8] c"TWELFTH\00", align 1
@.str.206 = private unnamed_addr constant [4 x i8] c"AGO\00", align 1
@.str.207 = private unnamed_addr constant [6 x i8] c"HENCE\00", align 1
@.str.178 = private unnamed_addr constant [5 x i8] c"YEAR\00", align 1
@.str.179 = private unnamed_addr constant [6 x i8] c"MONTH\00", align 1
@.str.180 = private unnamed_addr constant [10 x i8] c"FORTNIGHT\00", align 1
@.str.181 = private unnamed_addr constant [5 x i8] c"WEEK\00", align 1
@.str.182 = private unnamed_addr constant [4 x i8] c"DAY\00", align 1
@.str.183 = private unnamed_addr constant [5 x i8] c"HOUR\00", align 1
@.str.184 = private unnamed_addr constant [7 x i8] c"MINUTE\00", align 1
@.str.185 = private unnamed_addr constant [4 x i8] c"MIN\00", align 1
@.str.186 = private unnamed_addr constant [7 x i8] c"SECOND\00", align 1
@.str.187 = private unnamed_addr constant [4 x i8] c"SEC\00", align 1
@.str.177 = private unnamed_addr constant [4 x i8] c"DST\00", align 1
@universal_time_zone_table = internal constant [4 x %struct.table] [%struct.table { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.127, i32 0, i32 0), i32 273, i32 0 }, %struct.table { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.128, i32 0, i32 0), i32 273, i32 0 }, %struct.table { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.129, i32 0, i32 0), i32 273, i32 0 }, %struct.table zeroinitializer], align 16
@time_zone_table = internal constant [48 x %struct.table] [%struct.table { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.130, i32 0, i32 0), i32 273, i32 0 }, %struct.table { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.131, i32 0, i32 0), i32 268, i32 0 }, %struct.table { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.132, i32 0, i32 0), i32 268, i32 0 }, %struct.table { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.133, i32 0, i32 0), i32 273, i32 -10800 }, %struct.table { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.134, i32 0, i32 0), i32 273, i32 -10800 }, %struct.table { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.135, i32 0, i32 0), i32 268, i32 -10800 }, %struct.table { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.136, i32 0, i32 0), i32 273, i32 -12600 }, %struct.table { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.137, i32 0, i32 0), i32 268, i32 -12600 }, %struct.table { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.138, i32 0, i32 0), i32 273, i32 -14400 }, %struct.table { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.139, i32 0, i32 0), i32 268, i32 -14400 }, %struct.table { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.140, i32 0, i32 0), i32 273, i32 -14400 }, %struct.table { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.141, i32 0, i32 0), i32 268, i32 -14400 }, %struct.table { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.142, i32 0, i32 0), i32 273, i32 -18000 }, %struct.table { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.143, i32 0, i32 0), i32 268, i32 -18000 }, %struct.table { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.144, i32 0, i32 0), i32 273, i32 -21600 }, %struct.table { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.145, i32 0, i32 0), i32 268, i32 -21600 }, %struct.table { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.146, i32 0, i32 0), i32 273, i32 -25200 }, %struct.table { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.147, i32 0, i32 0), i32 268, i32 -25200 }, %struct.table { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.148, i32 0, i32 0), i32 273, i32 -28800 }, %struct.table { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.149, i32 0, i32 0), i32 268, i32 -28800 }, %struct.table { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.150, i32 0, i32 0), i32 273, i32 -32400 }, %struct.table { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.151, i32 0, i32 0), i32 268, i32 -32400 }, %struct.table { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.152, i32 0, i32 0), i32 273, i32 -36000 }, %struct.table { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.153, i32 0, i32 0), i32 273, i32 -36000 }, %struct.table { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.154, i32 0, i32 0), i32 268, i32 -36000 }, %struct.table { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.155, i32 0, i32 0), i32 273, i32 -43200 }, %struct.table { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.156, i32 0, i32 0), i32 273, i32 3600 }, %struct.table { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.157, i32 0, i32 0), i32 273, i32 3600 }, %struct.table { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.158, i32 0, i32 0), i32 268, i32 3600 }, %struct.table { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.159, i32 0, i32 0), i32 273, i32 3600 }, %struct.table { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.160, i32 0, i32 0), i32 273, i32 3600 }, %struct.table { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.161, i32 0, i32 0), i32 268, i32 3600 }, %struct.table { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.162, i32 0, i32 0), i32 268, i32 3600 }, %struct.table { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.163, i32 0, i32 0), i32 273, i32 7200 }, %struct.table { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.164, i32 0, i32 0), i32 268, i32 7200 }, %struct.table { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.165, i32 0, i32 0), i32 273, i32 7200 }, %struct.table { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.166, i32 0, i32 0), i32 273, i32 7200 }, %struct.table { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.167, i32 0, i32 0), i32 273, i32 10800 }, %struct.table { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.168, i32 0, i32 0), i32 273, i32 10800 }, %struct.table { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.169, i32 0, i32 0), i32 268, i32 10800 }, %struct.table { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.170, i32 0, i32 0), i32 273, i32 19800 }, %struct.table { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.171, i32 0, i32 0), i32 273, i32 28800 }, %struct.table { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.172, i32 0, i32 0), i32 273, i32 32400 }, %struct.table { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.173, i32 0, i32 0), i32 273, i32 32400 }, %struct.table { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.174, i32 0, i32 0), i32 273, i32 36000 }, %struct.table { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.175, i32 0, i32 0), i32 273, i32 43200 }, %struct.table { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.176, i32 0, i32 0), i32 268, i32 43200 }, %struct.table zeroinitializer], align 16
@.str.130 = private unnamed_addr constant [4 x i8] c"WET\00", align 1
@.str.131 = private unnamed_addr constant [5 x i8] c"WEST\00", align 1
@.str.132 = private unnamed_addr constant [4 x i8] c"BST\00", align 1
@.str.133 = private unnamed_addr constant [4 x i8] c"ART\00", align 1
@.str.134 = private unnamed_addr constant [4 x i8] c"BRT\00", align 1
@.str.135 = private unnamed_addr constant [5 x i8] c"BRST\00", align 1
@.str.136 = private unnamed_addr constant [4 x i8] c"NST\00", align 1
@.str.137 = private unnamed_addr constant [4 x i8] c"NDT\00", align 1
@.str.138 = private unnamed_addr constant [4 x i8] c"AST\00", align 1
@.str.139 = private unnamed_addr constant [4 x i8] c"ADT\00", align 1
@.str.140 = private unnamed_addr constant [4 x i8] c"CLT\00", align 1
@.str.141 = private unnamed_addr constant [5 x i8] c"CLST\00", align 1
@.str.142 = private unnamed_addr constant [4 x i8] c"EST\00", align 1
@.str.143 = private unnamed_addr constant [4 x i8] c"EDT\00", align 1
@.str.144 = private unnamed_addr constant [4 x i8] c"CST\00", align 1
@.str.145 = private unnamed_addr constant [4 x i8] c"CDT\00", align 1
@.str.146 = private unnamed_addr constant [4 x i8] c"MST\00", align 1
@.str.147 = private unnamed_addr constant [4 x i8] c"MDT\00", align 1
@.str.148 = private unnamed_addr constant [4 x i8] c"PST\00", align 1
@.str.149 = private unnamed_addr constant [4 x i8] c"PDT\00", align 1
@.str.150 = private unnamed_addr constant [5 x i8] c"AKST\00", align 1
@.str.151 = private unnamed_addr constant [5 x i8] c"AKDT\00", align 1
@.str.152 = private unnamed_addr constant [4 x i8] c"HST\00", align 1
@.str.153 = private unnamed_addr constant [5 x i8] c"HAST\00", align 1
@.str.154 = private unnamed_addr constant [5 x i8] c"HADT\00", align 1
@.str.155 = private unnamed_addr constant [4 x i8] c"SST\00", align 1
@.str.156 = private unnamed_addr constant [4 x i8] c"WAT\00", align 1
@.str.157 = private unnamed_addr constant [4 x i8] c"CET\00", align 1
@.str.158 = private unnamed_addr constant [5 x i8] c"CEST\00", align 1
@.str.159 = private unnamed_addr constant [4 x i8] c"MET\00", align 1
@.str.160 = private unnamed_addr constant [4 x i8] c"MEZ\00", align 1
@.str.161 = private unnamed_addr constant [5 x i8] c"MEST\00", align 1
@.str.162 = private unnamed_addr constant [5 x i8] c"MESZ\00", align 1
@.str.163 = private unnamed_addr constant [4 x i8] c"EET\00", align 1
@.str.164 = private unnamed_addr constant [5 x i8] c"EEST\00", align 1
@.str.165 = private unnamed_addr constant [4 x i8] c"CAT\00", align 1
@.str.166 = private unnamed_addr constant [5 x i8] c"SAST\00", align 1
@.str.167 = private unnamed_addr constant [4 x i8] c"EAT\00", align 1
@.str.168 = private unnamed_addr constant [4 x i8] c"MSK\00", align 1
@.str.169 = private unnamed_addr constant [4 x i8] c"MSD\00", align 1
@.str.170 = private unnamed_addr constant [4 x i8] c"IST\00", align 1
@.str.171 = private unnamed_addr constant [4 x i8] c"SGT\00", align 1
@.str.172 = private unnamed_addr constant [4 x i8] c"KST\00", align 1
@.str.173 = private unnamed_addr constant [4 x i8] c"JST\00", align 1
@.str.174 = private unnamed_addr constant [4 x i8] c"GST\00", align 1
@.str.175 = private unnamed_addr constant [5 x i8] c"NZST\00", align 1
@.str.176 = private unnamed_addr constant [5 x i8] c"NZDT\00", align 1
@.str.127 = private unnamed_addr constant [4 x i8] c"GMT\00", align 1
@.str.128 = private unnamed_addr constant [3 x i8] c"UT\00", align 1
@.str.129 = private unnamed_addr constant [4 x i8] c"UTC\00", align 1
@.str.103 = private unnamed_addr constant [8 x i8] c"JANUARY\00", align 1
@.str.104.144 = private unnamed_addr constant [9 x i8] c"FEBRUARY\00", align 1
@.str.105 = private unnamed_addr constant [6 x i8] c"MARCH\00", align 1
@.str.106 = private unnamed_addr constant [6 x i8] c"APRIL\00", align 1
@.str.107 = private unnamed_addr constant [4 x i8] c"MAY\00", align 1
@.str.108 = private unnamed_addr constant [5 x i8] c"JUNE\00", align 1
@.str.109 = private unnamed_addr constant [5 x i8] c"JULY\00", align 1
@.str.110 = private unnamed_addr constant [7 x i8] c"AUGUST\00", align 1
@.str.111 = private unnamed_addr constant [10 x i8] c"SEPTEMBER\00", align 1
@.str.112 = private unnamed_addr constant [5 x i8] c"SEPT\00", align 1
@.str.113.145 = private unnamed_addr constant [8 x i8] c"OCTOBER\00", align 1
@.str.114 = private unnamed_addr constant [9 x i8] c"NOVEMBER\00", align 1
@.str.115 = private unnamed_addr constant [9 x i8] c"DECEMBER\00", align 1
@.str.116 = private unnamed_addr constant [7 x i8] c"SUNDAY\00", align 1
@.str.117 = private unnamed_addr constant [7 x i8] c"MONDAY\00", align 1
@.str.118 = private unnamed_addr constant [8 x i8] c"TUESDAY\00", align 1
@.str.119 = private unnamed_addr constant [5 x i8] c"TUES\00", align 1
@.str.120 = private unnamed_addr constant [10 x i8] c"WEDNESDAY\00", align 1
@.str.121 = private unnamed_addr constant [7 x i8] c"WEDNES\00", align 1
@.str.122 = private unnamed_addr constant [9 x i8] c"THURSDAY\00", align 1
@.str.123 = private unnamed_addr constant [5 x i8] c"THUR\00", align 1
@.str.124 = private unnamed_addr constant [6 x i8] c"THURS\00", align 1
@.str.125 = private unnamed_addr constant [7 x i8] c"FRIDAY\00", align 1
@.str.126 = private unnamed_addr constant [9 x i8] c"SATURDAY\00", align 1
@.str.99 = private unnamed_addr constant [3 x i8] c"AM\00", align 1
@.str.100 = private unnamed_addr constant [5 x i8] c"A.M.\00", align 1
@.str.101 = private unnamed_addr constant [3 x i8] c"PM\00", align 1
@.str.102 = private unnamed_addr constant [5 x i8] c"P.M.\00", align 1
@.str.19.148 = private unnamed_addr constant [5 x i8] c"TZ=\22\00", align 1
@.str.20.149 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.21.150 = private unnamed_addr constant [34 x i8] c"error: initial year out of range\0A\00", align 1
@.str.22.151 = private unnamed_addr constant [23 x i8] c"error: parsing failed\0A\00", align 1
@.str.23.152 = private unnamed_addr constant [40 x i8] c"error: parsing failed, stopped at '%s'\0A\00", align 1
@.str.24.153 = private unnamed_addr constant [17 x i8] c"input timezone: \00", align 1
@.str.25.154 = private unnamed_addr constant [25 x i8] c"'@timespec' - always UTC\00", align 1
@.str.26.155 = private unnamed_addr constant [24 x i8] c"parsed date/time string\00", align 1
@.str.27.156 = private unnamed_addr constant [23 x i8] c"TZ=\22%s\22 in date string\00", align 1
@.str.28.157 = private unnamed_addr constant [5 x i8] c"UTC0\00", align 1
@.str.29.158 = private unnamed_addr constant [34 x i8] c"TZ=\22UTC0\22 environment value or -u\00", align 1
@.str.30.159 = private unnamed_addr constant [26 x i8] c"TZ=\22%s\22 environment value\00", align 1
@.str.31.160 = private unnamed_addr constant [15 x i8] c"system default\00", align 1
@.str.32.161 = private unnamed_addr constant [6 x i8] c", dst\00", align 1
@.str.33.162 = private unnamed_addr constant [6 x i8] c" (%s)\00", align 1
@.str.34.163 = private unnamed_addr constant [33 x i8] c"error: seen multiple time parts\0A\00", align 1
@.str.35.164 = private unnamed_addr constant [33 x i8] c"error: seen multiple date parts\0A\00", align 1
@.str.36.165 = private unnamed_addr constant [33 x i8] c"error: seen multiple days parts\0A\00", align 1
@.str.37.166 = private unnamed_addr constant [44 x i8] c"error: seen multiple daylight-saving parts\0A\00", align 1
@.str.38.167 = private unnamed_addr constant [38 x i8] c"error: seen multiple time-zone parts\0A\00", align 1
@.str.39.168 = private unnamed_addr constant [37 x i8] c"error: year, month, or day overflow\0A\00", align 1
@.str.40.169 = private unnamed_addr constant [3 x i8] c"am\00", align 1
@.str.43.170 = private unnamed_addr constant [27 x i8] c"error: invalid hour %ld%s\0A\00", align 1
@.str.44.171 = private unnamed_addr constant [46 x i8] c"using specified time as starting value: '%s'\0A\00", align 1
@.str.45.172 = private unnamed_addr constant [44 x i8] c"using current time as starting value: '%s'\0A\00", align 1
@.str.46.173 = private unnamed_addr constant [52 x i8] c"warning: using midnight as starting time: 00:00:00\0A\00", align 1
@.str.47.174 = private unnamed_addr constant [30 x i8] c"error: tzalloc (\22%s\22) failed\0A\00", align 1
@.str.48.175 = private unnamed_addr constant [79 x i8] c"error: day '%s' (day ordinal=%ld number=%d) resulted in an invalid date: '%s'\0A\00", align 1
@.str.49.176 = private unnamed_addr constant [30 x i8] c"new start date: '%s' is '%s'\0A\00", align 1
@.str.50.177 = private unnamed_addr constant [44 x i8] c"using current date as starting value: '%s'\0A\00", align 1
@.str.51.178 = private unnamed_addr constant [57 x i8] c"warning: day (%s) ignored when explicit dates are given\0A\00", align 1
@.str.52.179 = private unnamed_addr constant [26 x i8] c"starting date/time: '%s'\0A\00", align 1
@.str.53.180 = private unnamed_addr constant [97 x i8] c"warning: when adding relative months/years, it is recommended to specify the 15th of the months\0A\00", align 1
@.str.54.181 = private unnamed_addr constant [71 x i8] c"warning: when adding relative days, it is recommended to specify noon\0A\00", align 1
@.str.55.182 = private unnamed_addr constant [14 x i8] c"error: %s:%d\0A\00", align 1
@.str.56.183 = private unnamed_addr constant [17 x i8] c"parse-datetime.y\00", align 1
@.str.57.184 = private unnamed_addr constant [63 x i8] c"error: adding relative date resulted in an invalid date: '%s'\0A\00", align 1
@.str.58.185 = private unnamed_addr constant [61 x i8] c"after date adjustment (%+ld years, %+ld months, %+ld days),\0A\00", align 1
@.str.59.186 = private unnamed_addr constant [26 x i8] c"    new date/time = '%s'\0A\00", align 1
@.str.60.187 = private unnamed_addr constant [61 x i8] c"warning: daylight saving time changed after date adjustment\0A\00", align 1
@.str.61.188 = private unnamed_addr constant [59 x i8] c"warning: month/year adjustment resulted in shifted dates:\0A\00", align 1
@.str.62.189 = private unnamed_addr constant [35 x i8] c"     adjusted Y M D: %s %02d %02d\0A\00", align 1
@.str.63.190 = private unnamed_addr constant [35 x i8] c"   normalized Y M D: %s %02d %02d\0A\00", align 1
@.str.64.191 = private unnamed_addr constant [43 x i8] c"error: timezone %d caused time_t overflow\0A\00", align 1
@.str.65.192 = private unnamed_addr constant [26 x i8] c"'%s' = %ld epoch-seconds\0A\00", align 1
@.str.66.193 = private unnamed_addr constant [48 x i8] c"error: adding relative time caused an overflow\0A\00", align 1
@.str.67.194 = private unnamed_addr constant [73 x i8] c"after time adjustment (%+ld hours, %+ld minutes, %+ld seconds, %+d ns),\0A\00", align 1
@.str.68.195 = private unnamed_addr constant [34 x i8] c"    new time = %ld epoch-seconds\0A\00", align 1
@.str.69.196 = private unnamed_addr constant [61 x i8] c"warning: daylight saving time changed after time adjustment\0A\00", align 1
@.str.70.197 = private unnamed_addr constant [26 x i8] c"timezone: system default\0A\00", align 1
@.str.71.198 = private unnamed_addr constant [26 x i8] c"timezone: Universal Time\0A\00", align 1
@.str.72.199 = private unnamed_addr constant [37 x i8] c"timezone: TZ=\22%s\22 environment value\0A\00", align 1
@.str.73.200 = private unnamed_addr constant [33 x i8] c"final: %ld.%09d (epoch-seconds)\0A\00", align 1
@.str.74.201 = private unnamed_addr constant [17 x i8] c"final: %s (UTC)\0A\00", align 1
@.str.75.202 = private unnamed_addr constant [19 x i8] c"final: %s (UTC%s)\0A\00", align 1
@.str.76.203 = private unnamed_addr constant [38 x i8] c"final: %s (unknown time zone offset)\0A\00", align 1
@.str.257 = private unnamed_addr constant [10 x i8] c"-%02d%02d\00", align 1
@.str.256 = private unnamed_addr constant [21 x i8] c"(Y-M-D) %s-%02d-%02d\00", align 1
@.str.254 = private unnamed_addr constant [26 x i8] c"(Y-M-D) %Y-%m-%d %H:%M:%S\00", align 1
@.str.255 = private unnamed_addr constant [7 x i8] c" TZ=%s\00", align 1
@.str.237 = private unnamed_addr constant [33 x i8] c"error: invalid date/time value:\0A\00", align 1
@.str.238 = private unnamed_addr constant [30 x i8] c"    user provided time: '%s'\0A\00", align 1
@.str.239 = private unnamed_addr constant [30 x i8] c"       normalized time: '%s'\0A\00", align 1
@.str.241 = private unnamed_addr constant [5 x i8] c"----\00", align 1
@.str.242 = private unnamed_addr constant [3 x i8] c"--\00", align 1
@.str.240 = private unnamed_addr constant [57 x i8] c"                                 %4s %2s %2s %2s %2s %2s\00", align 1
@.str.243 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@.str.244 = private unnamed_addr constant [24 x i8] c"     possible reasons:\0A\00", align 1
@.str.245 = private unnamed_addr constant [50 x i8] c"       non-existing due to daylight-saving time;\0A\00", align 1
@.str.246 = private unnamed_addr constant [39 x i8] c"       invalid day/month combination;\0A\00", align 1
@.str.247 = private unnamed_addr constant [33 x i8] c"       numeric values overflow;\0A\00", align 1
@.str.249 = private unnamed_addr constant [19 x i8] c"incorrect timezone\00", align 1
@.str.250 = private unnamed_addr constant [17 x i8] c"missing timezone\00", align 1
@.str.248 = private unnamed_addr constant [11 x i8] c"       %s\0A\00", align 1
@.str.236 = private unnamed_addr constant [15 x i8] c"%02d:%02d:%02d\00", align 1
@.str.234 = private unnamed_addr constant [42 x i8] c"warning: adjusting year value %ld to %ld\0A\00", align 1
@.str.235 = private unnamed_addr constant [30 x i8] c"error: out-of-range year %ld\0A\00", align 1
@.str.258 = private unnamed_addr constant [3 x i8] c"59\00", align 1
@.str.261 = private unnamed_addr constant [56 x i8] c"A NULL argv[0] was passed through an exec system call.\0A\00", align 1
@.str.1.262 = private unnamed_addr constant [8 x i8] c"/.libs/\00", align 1
@.str.2.263 = private unnamed_addr constant [4 x i8] c"lt-\00", align 1
@program_invocation_short_name = external dso_local global i8*, align 8
@program_name = internal global i8* null, align 8
@program_invocation_name = external dso_local global i8*, align 8
@default_quoting_options = internal global %struct.quoting_options zeroinitializer, align 8
@slotvec = internal global %struct.slotvec* @slotvec0, align 8
@nslots = internal global i32 1, align 4
@slotvec0 = internal global %struct.slotvec { i64 256, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i32 0, i32 0) }, align 8
@slot0 = internal global [256 x i8] zeroinitializer, align 16
@.str.10.268 = private unnamed_addr constant [2 x i8] c"\22\00", align 1
@.str.11.269 = private unnamed_addr constant [2 x i8] c"`\00", align 1
@.str.12.270 = private unnamed_addr constant [2 x i8] c"'\00", align 1
@.str.13.271 = private unnamed_addr constant [6 x i8] c"UTF-8\00", align 1
@.str.14.272 = private unnamed_addr constant [4 x i8] c"\E2\80\98\00", align 1
@.str.15.273 = private unnamed_addr constant [4 x i8] c"\E2\80\99\00", align 1
@.str.16.274 = private unnamed_addr constant [8 x i8] c"GB18030\00", align 1
@.str.17.275 = private unnamed_addr constant [4 x i8] c"\A1\07e\00", align 1
@.str.18.276 = private unnamed_addr constant [3 x i8] c"\A1\AF\00", align 1
@quote_quoting_options = internal global %struct.quoting_options { i32 8, i32 0, [8 x i32] zeroinitializer, i8* null, i8* null }, align 8
@.str.289 = private unnamed_addr constant [12 x i8] c"%s (%s) %s\0A\00", align 1
@.str.1.290 = private unnamed_addr constant [7 x i8] c"%s %s\0A\00", align 1
@.str.2.291 = private unnamed_addr constant [4 x i8] c"(C)\00", align 1
@.str.3.292 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.4.293 = private unnamed_addr constant [171 x i8] c"License GPLv3+: GNU GPL version 3 or later <%s>.\0AThis is free software: you are free to change and redistribute it.\0AThere is NO WARRANTY, to the extent permitted by law.\0A\00", align 1
@.str.5.294 = private unnamed_addr constant [34 x i8] c"https://gnu.org/licenses/gpl.html\00", align 1
@.str.6.295 = private unnamed_addr constant [16 x i8] c"Written by %s.\0A\00", align 1
@.str.7.296 = private unnamed_addr constant [23 x i8] c"Written by %s and %s.\0A\00", align 1
@.str.8.297 = private unnamed_addr constant [28 x i8] c"Written by %s, %s, and %s.\0A\00", align 1
@.str.9.298 = private unnamed_addr constant [32 x i8] c"Written by %s, %s, %s,\0Aand %s.\0A\00", align 1
@.str.10.299 = private unnamed_addr constant [36 x i8] c"Written by %s, %s, %s,\0A%s, and %s.\0A\00", align 1
@.str.11.300 = private unnamed_addr constant [40 x i8] c"Written by %s, %s, %s,\0A%s, %s, and %s.\0A\00", align 1
@.str.12.301 = private unnamed_addr constant [44 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, and %s.\0A\00", align 1
@.str.13.302 = private unnamed_addr constant [48 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0Aand %s.\0A\00", align 1
@.str.14.303 = private unnamed_addr constant [52 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0A%s, and %s.\0A\00", align 1
@.str.15.304 = private unnamed_addr constant [60 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0A%s, %s, and others.\0A\00", align 1
@version_etc_copyright = internal constant [47 x i8] c"Copyright %s %d Free Software Foundation, Inc.\00", align 16
@.str.1.315 = private unnamed_addr constant [17 x i8] c"memory exhausted\00", align 1
@.str.316 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.331 = private unnamed_addr constant [3 x i8] c"TZ\00", align 1
@.str.1.332 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.349 = private unnamed_addr constant [2 x i8] c"C\00", align 1
@.str.1.350 = private unnamed_addr constant [6 x i8] c"POSIX\00", align 1
@.str.353 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.1.354 = private unnamed_addr constant [6 x i8] c"ASCII\00", align 1
@.str.358 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.1.359 = private unnamed_addr constant [9 x i8] c"%m/%d/%y\00", align 1
@.str.2.360 = private unnamed_addr constant [9 x i8] c"%Y-%m-%d\00", align 1
@.str.3.361 = private unnamed_addr constant [6 x i8] c"%H:%M\00", align 1
@.str.4.362 = private unnamed_addr constant [9 x i8] c"%H:%M:%S\00", align 1

; Function Attrs: noinline noreturn nounwind optnone uwtable
define internal void @usage(i32) #0 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = icmp ne i32 %3, 0
  br i1 %4, label %5, label %12

5:                                                ; preds = %1
  br label %6

6:                                                ; preds = %5
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %8 = call i8* @gettext(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str, i64 0, i64 0)) #11
  %9 = load i8*, i8** @program_name, align 8
  %10 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %7, i8* %8, i8* %9)
  br label %11

11:                                               ; preds = %6
  br label %92

12:                                               ; preds = %1
  %13 = call i8* @gettext(i8* getelementptr inbounds ([90 x i8], [90 x i8]* @.str.1, i64 0, i64 0)) #11
  %14 = load i8*, i8** @program_name, align 8
  %15 = load i8*, i8** @program_name, align 8
  %16 = call i32 (i8*, ...) @printf(i8* %13, i8* %14, i8* %15)
  %17 = call i8* @gettext(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.2, i64 0, i64 0)) #11
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %19 = call i32 @fputs_unlocked(i8* %17, %struct._IO_FILE* %18)
  call void @emit_mandatory_arg_note()
  %20 = call i8* @gettext(i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.3, i64 0, i64 0)) #11
  %21 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %22 = call i32 @fputs_unlocked(i8* %20, %struct._IO_FILE* %21)
  %23 = call i8* @gettext(i8* getelementptr inbounds ([130 x i8], [130 x i8]* @.str.4, i64 0, i64 0)) #11
  %24 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %25 = call i32 @fputs_unlocked(i8* %23, %struct._IO_FILE* %24)
  %26 = call i8* @gettext(i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.5, i64 0, i64 0)) #11
  %27 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %28 = call i32 @fputs_unlocked(i8* %26, %struct._IO_FILE* %27)
  %29 = call i8* @gettext(i8* getelementptr inbounds ([351 x i8], [351 x i8]* @.str.6, i64 0, i64 0)) #11
  %30 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %31 = call i32 @fputs_unlocked(i8* %29, %struct._IO_FILE* %30)
  %32 = call i8* @gettext(i8* getelementptr inbounds ([143 x i8], [143 x i8]* @.str.7, i64 0, i64 0)) #11
  %33 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %34 = call i32 @fputs_unlocked(i8* %32, %struct._IO_FILE* %33)
  %35 = call i8* @gettext(i8* getelementptr inbounds ([272 x i8], [272 x i8]* @.str.8, i64 0, i64 0)) #11
  %36 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %37 = call i32 @fputs_unlocked(i8* %35, %struct._IO_FILE* %36)
  %38 = call i8* @gettext(i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.9, i64 0, i64 0)) #11
  %39 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %40 = call i32 @fputs_unlocked(i8* %38, %struct._IO_FILE* %39)
  %41 = call i8* @gettext(i8* getelementptr inbounds ([134 x i8], [134 x i8]* @.str.10, i64 0, i64 0)) #11
  %42 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %43 = call i32 @fputs_unlocked(i8* %41, %struct._IO_FILE* %42)
  %44 = call i8* @gettext(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.11, i64 0, i64 0)) #11
  %45 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %46 = call i32 @fputs_unlocked(i8* %44, %struct._IO_FILE* %45)
  %47 = call i8* @gettext(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.12, i64 0, i64 0)) #11
  %48 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %49 = call i32 @fputs_unlocked(i8* %47, %struct._IO_FILE* %48)
  %50 = call i8* @gettext(i8* getelementptr inbounds ([131 x i8], [131 x i8]* @.str.13, i64 0, i64 0)) #11
  %51 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %52 = call i32 @fputs_unlocked(i8* %50, %struct._IO_FILE* %51)
  %53 = call i8* @gettext(i8* getelementptr inbounds ([212 x i8], [212 x i8]* @.str.14, i64 0, i64 0)) #11
  %54 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %55 = call i32 @fputs_unlocked(i8* %53, %struct._IO_FILE* %54)
  %56 = call i8* @gettext(i8* getelementptr inbounds ([173 x i8], [173 x i8]* @.str.15, i64 0, i64 0)) #11
  %57 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %58 = call i32 @fputs_unlocked(i8* %56, %struct._IO_FILE* %57)
  %59 = call i8* @gettext(i8* getelementptr inbounds ([164 x i8], [164 x i8]* @.str.16, i64 0, i64 0)) #11
  %60 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %61 = call i32 @fputs_unlocked(i8* %59, %struct._IO_FILE* %60)
  %62 = call i8* @gettext(i8* getelementptr inbounds ([91 x i8], [91 x i8]* @.str.17, i64 0, i64 0)) #11
  %63 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %64 = call i32 @fputs_unlocked(i8* %62, %struct._IO_FILE* %63)
  %65 = call i8* @gettext(i8* getelementptr inbounds ([142 x i8], [142 x i8]* @.str.18, i64 0, i64 0)) #11
  %66 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %67 = call i32 @fputs_unlocked(i8* %65, %struct._IO_FILE* %66)
  %68 = call i8* @gettext(i8* getelementptr inbounds ([333 x i8], [333 x i8]* @.str.19, i64 0, i64 0)) #11
  %69 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %70 = call i32 @fputs_unlocked(i8* %68, %struct._IO_FILE* %69)
  %71 = call i8* @gettext(i8* getelementptr inbounds ([106 x i8], [106 x i8]* @.str.20, i64 0, i64 0)) #11
  %72 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %73 = call i32 @fputs_unlocked(i8* %71, %struct._IO_FILE* %72)
  %74 = call i8* @gettext(i8* getelementptr inbounds ([246 x i8], [246 x i8]* @.str.21, i64 0, i64 0)) #11
  %75 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %76 = call i32 @fputs_unlocked(i8* %74, %struct._IO_FILE* %75)
  %77 = call i8* @gettext(i8* getelementptr inbounds ([159 x i8], [159 x i8]* @.str.22, i64 0, i64 0)) #11
  %78 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %79 = call i32 @fputs_unlocked(i8* %77, %struct._IO_FILE* %78)
  %80 = call i8* @gettext(i8* getelementptr inbounds ([328 x i8], [328 x i8]* @.str.23, i64 0, i64 0)) #11
  %81 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %82 = call i32 @fputs_unlocked(i8* %80, %struct._IO_FILE* %81)
  %83 = call i8* @gettext(i8* getelementptr inbounds ([278 x i8], [278 x i8]* @.str.24, i64 0, i64 0)) #11
  %84 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %85 = call i32 @fputs_unlocked(i8* %83, %struct._IO_FILE* %84)
  %86 = call i8* @gettext(i8* getelementptr inbounds ([240 x i8], [240 x i8]* @.str.25, i64 0, i64 0)) #11
  %87 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %88 = call i32 @fputs_unlocked(i8* %86, %struct._IO_FILE* %87)
  %89 = call i8* @gettext(i8* getelementptr inbounds ([334 x i8], [334 x i8]* @.str.26, i64 0, i64 0)) #11
  %90 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %91 = call i32 @fputs_unlocked(i8* %89, %struct._IO_FILE* %90)
  call void @emit_ancillary_info(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.27, i64 0, i64 0))
  br label %92

92:                                               ; preds = %12, %11
  %93 = load i32, i32* %2, align 4
  call void @exit(i32 %93) #12
  unreachable
}

; Function Attrs: nounwind
declare dso_local i8* @gettext(i8*) #1

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) #2

declare dso_local i32 @printf(i8*, ...) #2

declare dso_local i32 @fputs_unlocked(i8*, %struct._IO_FILE*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @emit_mandatory_arg_note() #3 {
  %1 = call i8* @gettext(i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.46, i64 0, i64 0)) #11
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %3 = call i32 @fputs_unlocked(i8* %1, %struct._IO_FILE* %2)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @emit_ancillary_info(i8*) #3 {
  %2 = alloca i8*, align 8
  %3 = alloca [7 x %struct.infomap], align 16
  %4 = alloca i8*, align 8
  %5 = alloca %struct.infomap*, align 8
  %6 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %7 = bitcast [7 x %struct.infomap]* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %7, i8* align 16 bitcast ([7 x %struct.infomap]* @__const.emit_ancillary_info.infomap to i8*), i64 112, i1 false)
  %8 = load i8*, i8** %2, align 8
  store i8* %8, i8** %4, align 8
  %9 = getelementptr inbounds [7 x %struct.infomap], [7 x %struct.infomap]* %3, i64 0, i64 0
  store %struct.infomap* %9, %struct.infomap** %5, align 8
  br label %10

10:                                               ; preds = %25, %1
  %11 = load %struct.infomap*, %struct.infomap** %5, align 8
  %12 = getelementptr inbounds %struct.infomap, %struct.infomap* %11, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = icmp ne i8* %13, null
  br i1 %14, label %15, label %23

15:                                               ; preds = %10
  %16 = load i8*, i8** %2, align 8
  %17 = load %struct.infomap*, %struct.infomap** %5, align 8
  %18 = getelementptr inbounds %struct.infomap, %struct.infomap* %17, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = call i32 @strcmp(i8* %16, i8* %19) #13
  %21 = icmp eq i32 %20, 0
  %22 = xor i1 %21, true
  br label %23

23:                                               ; preds = %15, %10
  %24 = phi i1 [ false, %10 ], [ %22, %15 ]
  br i1 %24, label %25, label %28

25:                                               ; preds = %23
  %26 = load %struct.infomap*, %struct.infomap** %5, align 8
  %27 = getelementptr inbounds %struct.infomap, %struct.infomap* %26, i32 1
  store %struct.infomap* %27, %struct.infomap** %5, align 8
  br label %10

28:                                               ; preds = %23
  %29 = load %struct.infomap*, %struct.infomap** %5, align 8
  %30 = getelementptr inbounds %struct.infomap, %struct.infomap* %29, i32 0, i32 1
  %31 = load i8*, i8** %30, align 8
  %32 = icmp ne i8* %31, null
  br i1 %32, label %33, label %37

33:                                               ; preds = %28
  %34 = load %struct.infomap*, %struct.infomap** %5, align 8
  %35 = getelementptr inbounds %struct.infomap, %struct.infomap* %34, i32 0, i32 1
  %36 = load i8*, i8** %35, align 8
  store i8* %36, i8** %4, align 8
  br label %37

37:                                               ; preds = %33, %28
  %38 = call i8* @gettext(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.55, i64 0, i64 0)) #11
  %39 = call i32 (i8*, ...) @printf(i8* %38, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.34, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.56, i64 0, i64 0))
  %40 = call i8* @setlocale(i32 5, i8* null) #11
  store i8* %40, i8** %6, align 8
  %41 = load i8*, i8** %6, align 8
  %42 = icmp ne i8* %41, null
  br i1 %42, label %43, label %51

43:                                               ; preds = %37
  %44 = load i8*, i8** %6, align 8
  %45 = call i32 @strncmp(i8* %44, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.57, i64 0, i64 0), i64 3) #13
  %46 = icmp ne i32 %45, 0
  br i1 %46, label %47, label %51

47:                                               ; preds = %43
  %48 = call i8* @gettext(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.58, i64 0, i64 0)) #11
  %49 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %50 = call i32 @fputs_unlocked(i8* %48, %struct._IO_FILE* %49)
  br label %51

51:                                               ; preds = %47, %43, %37
  %52 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.59, i64 0, i64 0)) #11
  %53 = load i8*, i8** %2, align 8
  %54 = call i32 (i8*, ...) @printf(i8* %52, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.56, i64 0, i64 0), i8* %53)
  %55 = call i8* @gettext(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.60, i64 0, i64 0)) #11
  %56 = load i8*, i8** %4, align 8
  %57 = load i8*, i8** %4, align 8
  %58 = load i8*, i8** %2, align 8
  %59 = icmp eq i8* %57, %58
  %60 = zext i1 %59 to i64
  %61 = select i1 %59, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.61, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.28, i64 0, i64 0)
  %62 = call i32 (i8*, ...) @printf(i8* %55, i8* %56, i8* %61)
  ret void
}

; Function Attrs: noreturn nounwind
declare dso_local void @exit(i32) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #5

; Function Attrs: nounwind readonly
declare dso_local i32 @strcmp(i8*, i8*) #6

; Function Attrs: nounwind
declare dso_local i8* @setlocale(i32, i8*) #1

; Function Attrs: nounwind readonly
declare dso_local i32 @strncmp(i8*, i8*, i64) #6

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32, i8**) #3 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca %struct.timespec, align 8
  %10 = alloca i8, align 1
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca %struct.stat, align 8
  %15 = alloca i8, align 1
  %16 = alloca i32, align 4
  %17 = alloca i8*, align 8
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i8*, align 8
  %21 = alloca %struct.tm_zone*, align 8
  %22 = alloca i8, align 1
  %23 = alloca %struct.timespec, align 8
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  store i8* null, i8** %7, align 8
  store i8* null, i8** %8, align 8
  store i8 0, i8* %10, align 1
  store i8* null, i8** %11, align 8
  store i8* null, i8** %12, align 8
  store i8* null, i8** %13, align 8
  %24 = load i8**, i8*** %5, align 8
  %25 = getelementptr inbounds i8*, i8** %24, i64 0
  %26 = load i8*, i8** %25, align 8
  call void @set_program_name(i8* %26)
  %27 = call i8* @setlocale(i32 6, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.28, i64 0, i64 0)) #11
  %28 = call i8* @bindtextdomain(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.29, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.30, i64 0, i64 0)) #11
  %29 = call i8* @textdomain(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.29, i64 0, i64 0)) #11
  %30 = call i32 @atexit(void ()* @close_stdout) #11
  br label %31

31:                                               ; preds = %97, %2
  %32 = load i32, i32* %4, align 4
  %33 = load i8**, i8*** %5, align 8
  %34 = call i32 @getopt_long(i32 %32, i8** %33, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @short_options, i64 0, i64 0), %struct.option* getelementptr inbounds ([16 x %struct.option], [16 x %struct.option]* @long_options, i64 0, i64 0), i32* null) #11
  store i32 %34, i32* %6, align 4
  %35 = icmp ne i32 %34, -1
  br i1 %35, label %36, label %98

36:                                               ; preds = %31
  store i8* null, i8** %17, align 8
  %37 = load i32, i32* %6, align 4
  switch i32 %37, label %86 [
    i32 100, label %38
    i32 129, label %40
    i32 102, label %43
    i32 128, label %45
    i32 73, label %55
    i32 114, label %71
    i32 82, label %73
    i32 115, label %74
    i32 117, label %76
    i32 -130, label %82
    i32 -131, label %83
  ]

38:                                               ; preds = %36
  %39 = load i8*, i8** @optarg, align 8
  store i8* %39, i8** %7, align 8
  br label %87

40:                                               ; preds = %36
  %41 = load i32, i32* @parse_datetime_flags, align 4
  %42 = or i32 %41, 1
  store i32 %42, i32* @parse_datetime_flags, align 4
  br label %87

43:                                               ; preds = %36
  %44 = load i8*, i8** @optarg, align 8
  store i8* %44, i8** %12, align 8
  br label %87

45:                                               ; preds = %36
  %46 = load i8*, i8** @optarg, align 8
  %47 = load void ()*, void ()** @argmatch_die, align 8
  %48 = call i64 @__xargmatch_internal(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.31, i64 0, i64 0), i8* %46, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @time_spec_string, i64 0, i64 2), i8* bitcast (i32* getelementptr inbounds ([5 x i32], [5 x i32]* @time_spec, i64 0, i64 2) to i8*), i64 4, void ()* %47)
  %49 = getelementptr inbounds i32, i32* getelementptr inbounds ([5 x i32], [5 x i32]* @time_spec, i64 0, i64 2), i64 %48
  %50 = load i32, i32* %49, align 4
  store i32 %50, i32* %18, align 4
  %51 = load i32, i32* %18, align 4
  %52 = zext i32 %51 to i64
  %53 = getelementptr inbounds [3 x [32 x i8]], [3 x [32 x i8]]* @main.rfc_3339_format, i64 0, i64 %52
  %54 = getelementptr inbounds [32 x i8], [32 x i8]* %53, i64 0, i64 0
  store i8* %54, i8** %17, align 8
  br label %87

55:                                               ; preds = %36
  %56 = load i8*, i8** @optarg, align 8
  %57 = icmp ne i8* %56, null
  br i1 %57, label %58, label %64

58:                                               ; preds = %55
  %59 = load i8*, i8** @optarg, align 8
  %60 = load void ()*, void ()** @argmatch_die, align 8
  %61 = call i64 @__xargmatch_internal(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.32, i64 0, i64 0), i8* %59, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @time_spec_string, i64 0, i64 0), i8* bitcast ([5 x i32]* @time_spec to i8*), i64 4, void ()* %60)
  %62 = getelementptr inbounds [5 x i32], [5 x i32]* @time_spec, i64 0, i64 %61
  %63 = load i32, i32* %62, align 4
  br label %65

64:                                               ; preds = %55
  br label %65

65:                                               ; preds = %64, %58
  %66 = phi i32 [ %63, %58 ], [ 0, %64 ]
  store i32 %66, i32* %19, align 4
  %67 = load i32, i32* %19, align 4
  %68 = zext i32 %67 to i64
  %69 = getelementptr inbounds [5 x [32 x i8]], [5 x [32 x i8]]* @main.iso_8601_format, i64 0, i64 %68
  %70 = getelementptr inbounds [32 x i8], [32 x i8]* %69, i64 0, i64 0
  store i8* %70, i8** %17, align 8
  br label %87

71:                                               ; preds = %36
  %72 = load i8*, i8** @optarg, align 8
  store i8* %72, i8** %13, align 8
  br label %87

73:                                               ; preds = %36
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @rfc_email_format, i64 0, i64 0), i8** %17, align 8
  br label %87

74:                                               ; preds = %36
  %75 = load i8*, i8** @optarg, align 8
  store i8* %75, i8** %8, align 8
  store i8 1, i8* %10, align 1
  br label %87

76:                                               ; preds = %36
  %77 = call i8* @bad_cast(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.33, i64 0, i64 0))
  %78 = call i32 @putenv(i8* %77) #11
  %79 = icmp ne i32 %78, 0
  br i1 %79, label %80, label %81

80:                                               ; preds = %76
  call void @xalloc_die() #14
  unreachable

81:                                               ; preds = %76
  br label %87

82:                                               ; preds = %36
  call void @usage(i32 0) #14
  unreachable

83:                                               ; preds = %36
  %84 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %85 = load i8*, i8** @Version, align 8
  call void (%struct._IO_FILE*, i8*, i8*, i8*, ...) @version_etc(%struct._IO_FILE* %84, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.27, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.34, i64 0, i64 0), i8* %85, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.35, i64 0, i64 0), i8* null)
  call void @exit(i32 0) #12
  unreachable

86:                                               ; preds = %36
  call void @usage(i32 1) #14
  unreachable

87:                                               ; preds = %81, %74, %73, %71, %65, %45, %43, %40, %38
  %88 = load i8*, i8** %17, align 8
  %89 = icmp ne i8* %88, null
  br i1 %89, label %90, label %97

90:                                               ; preds = %87
  %91 = load i8*, i8** %11, align 8
  %92 = icmp ne i8* %91, null
  br i1 %92, label %93, label %95

93:                                               ; preds = %90
  %94 = call i8* @gettext(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.36, i64 0, i64 0)) #11
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %94)
  unreachable

95:                                               ; preds = %90
  %96 = load i8*, i8** %17, align 8
  store i8* %96, i8** %11, align 8
  br label %97

97:                                               ; preds = %95, %87
  br label %31

98:                                               ; preds = %31
  %99 = load i8*, i8** %7, align 8
  %100 = icmp ne i8* %99, null
  %101 = zext i1 %100 to i64
  %102 = select i1 %100, i32 1, i32 0
  %103 = load i8*, i8** %12, align 8
  %104 = icmp ne i8* %103, null
  %105 = zext i1 %104 to i64
  %106 = select i1 %104, i32 1, i32 0
  %107 = add nsw i32 %102, %106
  %108 = load i8*, i8** %13, align 8
  %109 = icmp ne i8* %108, null
  %110 = zext i1 %109 to i64
  %111 = select i1 %109, i32 1, i32 0
  %112 = add nsw i32 %107, %111
  store i32 %112, i32* %16, align 4
  %113 = load i32, i32* %16, align 4
  %114 = icmp sgt i32 %113, 1
  br i1 %114, label %115, label %117

115:                                              ; preds = %98
  %116 = call i8* @gettext(i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.37, i64 0, i64 0)) #11
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %116)
  call void @usage(i32 1) #14
  unreachable

117:                                              ; preds = %98
  %118 = load i8, i8* %10, align 1
  %119 = trunc i8 %118 to i1
  br i1 %119, label %120, label %125

120:                                              ; preds = %117
  %121 = load i32, i32* %16, align 4
  %122 = icmp ne i32 %121, 0
  br i1 %122, label %123, label %125

123:                                              ; preds = %120
  %124 = call i8* @gettext(i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.38, i64 0, i64 0)) #11
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %124)
  call void @usage(i32 1) #14
  unreachable

125:                                              ; preds = %120, %117
  %126 = load i32, i32* @optind, align 4
  %127 = load i32, i32* %4, align 4
  %128 = icmp slt i32 %126, %127
  br i1 %128, label %129, label %182

129:                                              ; preds = %125
  %130 = load i32, i32* @optind, align 4
  %131 = add nsw i32 %130, 1
  %132 = load i32, i32* %4, align 4
  %133 = icmp slt i32 %131, %132
  br i1 %133, label %134, label %143

134:                                              ; preds = %129
  %135 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.39, i64 0, i64 0)) #11
  %136 = load i8**, i8*** %5, align 8
  %137 = load i32, i32* @optind, align 4
  %138 = add nsw i32 %137, 1
  %139 = sext i32 %138 to i64
  %140 = getelementptr inbounds i8*, i8** %136, i64 %139
  %141 = load i8*, i8** %140, align 8
  %142 = call i8* @quote(i8* %141)
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %135, i8* %142)
  call void @usage(i32 1) #14
  unreachable

143:                                              ; preds = %129
  %144 = load i8**, i8*** %5, align 8
  %145 = load i32, i32* @optind, align 4
  %146 = sext i32 %145 to i64
  %147 = getelementptr inbounds i8*, i8** %144, i64 %146
  %148 = load i8*, i8** %147, align 8
  %149 = getelementptr inbounds i8, i8* %148, i64 0
  %150 = load i8, i8* %149, align 1
  %151 = sext i8 %150 to i32
  %152 = icmp eq i32 %151, 43
  br i1 %152, label %153, label %166

153:                                              ; preds = %143
  %154 = load i8*, i8** %11, align 8
  %155 = icmp ne i8* %154, null
  br i1 %155, label %156, label %158

156:                                              ; preds = %153
  %157 = call i8* @gettext(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.36, i64 0, i64 0)) #11
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %157)
  unreachable

158:                                              ; preds = %153
  %159 = load i8**, i8*** %5, align 8
  %160 = load i32, i32* @optind, align 4
  %161 = add nsw i32 %160, 1
  store i32 %161, i32* @optind, align 4
  %162 = sext i32 %160 to i64
  %163 = getelementptr inbounds i8*, i8** %159, i64 %162
  %164 = load i8*, i8** %163, align 8
  %165 = getelementptr inbounds i8, i8* %164, i64 1
  store i8* %165, i8** %11, align 8
  br label %181

166:                                              ; preds = %143
  %167 = load i8, i8* %10, align 1
  %168 = trunc i8 %167 to i1
  br i1 %168, label %172, label %169

169:                                              ; preds = %166
  %170 = load i32, i32* %16, align 4
  %171 = icmp ne i32 %170, 0
  br i1 %171, label %172, label %180

172:                                              ; preds = %169, %166
  %173 = call i8* @gettext(i8* getelementptr inbounds ([145 x i8], [145 x i8]* @.str.40, i64 0, i64 0)) #11
  %174 = load i8**, i8*** %5, align 8
  %175 = load i32, i32* @optind, align 4
  %176 = sext i32 %175 to i64
  %177 = getelementptr inbounds i8*, i8** %174, i64 %176
  %178 = load i8*, i8** %177, align 8
  %179 = call i8* @quote(i8* %178)
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %173, i8* %179)
  call void @usage(i32 1) #14
  unreachable

180:                                              ; preds = %169
  br label %181

181:                                              ; preds = %180, %158
  br label %182

182:                                              ; preds = %181, %125
  %183 = load i8*, i8** %11, align 8
  %184 = icmp ne i8* %183, null
  br i1 %184, label %192, label %185

185:                                              ; preds = %182
  %186 = call i8* @nl_langinfo(i32 131180) #11
  store i8* %186, i8** %11, align 8
  %187 = load i8*, i8** %11, align 8
  %188 = load i8, i8* %187, align 1
  %189 = icmp ne i8 %188, 0
  br i1 %189, label %191, label %190

190:                                              ; preds = %185
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.41, i64 0, i64 0), i8** %11, align 8
  br label %191

191:                                              ; preds = %190, %185
  br label %192

192:                                              ; preds = %191, %182
  %193 = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.42, i64 0, i64 0)) #11
  store i8* %193, i8** %20, align 8
  %194 = load i8*, i8** %20, align 8
  %195 = call %struct.tm_zone* @tzalloc(i8* %194)
  store %struct.tm_zone* %195, %struct.tm_zone** %21, align 8
  %196 = load i8*, i8** %12, align 8
  %197 = icmp ne i8* %196, null
  br i1 %197, label %198, label %205

198:                                              ; preds = %192
  %199 = load i8*, i8** %12, align 8
  %200 = load i8*, i8** %11, align 8
  %201 = load %struct.tm_zone*, %struct.tm_zone** %21, align 8
  %202 = load i8*, i8** %20, align 8
  %203 = call zeroext i1 @batch_convert(i8* %199, i8* %200, %struct.tm_zone* %201, i8* %202)
  %204 = zext i1 %203 to i8
  store i8 %204, i8* %15, align 1
  br label %296

205:                                              ; preds = %192
  store i8 1, i8* %22, align 1
  store i8 1, i8* %15, align 1
  %206 = load i32, i32* %16, align 4
  %207 = icmp ne i32 %206, 0
  br i1 %207, label %228, label %208

208:                                              ; preds = %205
  %209 = load i8, i8* %10, align 1
  %210 = trunc i8 %209 to i1
  br i1 %210, label %228, label %211

211:                                              ; preds = %208
  %212 = load i32, i32* @optind, align 4
  %213 = load i32, i32* %4, align 4
  %214 = icmp slt i32 %212, %213
  br i1 %214, label %215, label %226

215:                                              ; preds = %211
  store i8 1, i8* %10, align 1
  %216 = load i8**, i8*** %5, align 8
  %217 = load i32, i32* @optind, align 4
  %218 = sext i32 %217 to i64
  %219 = getelementptr inbounds i8*, i8** %216, i64 %218
  %220 = load i8*, i8** %219, align 8
  store i8* %220, i8** %7, align 8
  %221 = getelementptr inbounds %struct.timespec, %struct.timespec* %9, i32 0, i32 0
  %222 = load i8*, i8** %7, align 8
  %223 = call zeroext i1 @posixtime(i64* %221, i8* %222, i32 7)
  %224 = zext i1 %223 to i8
  store i8 %224, i8* %22, align 1
  %225 = getelementptr inbounds %struct.timespec, %struct.timespec* %9, i32 0, i32 1
  store i64 0, i64* %225, align 8
  br label %227

226:                                              ; preds = %211
  call void @gettime(%struct.timespec* %9)
  br label %227

227:                                              ; preds = %226, %215
  br label %262

228:                                              ; preds = %208, %205
  %229 = load i8*, i8** %13, align 8
  %230 = icmp ne i8* %229, null
  br i1 %230, label %231, label %249

231:                                              ; preds = %228
  %232 = load i8*, i8** %13, align 8
  %233 = call i32 @stat(i8* %232, %struct.stat* %14) #11
  %234 = icmp ne i32 %233, 0
  br i1 %234, label %235, label %240

235:                                              ; preds = %231
  %236 = call i32* @__errno_location() #15
  %237 = load i32, i32* %236, align 4
  %238 = load i8*, i8** %13, align 8
  %239 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %238)
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %237, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.43, i64 0, i64 0), i8* %239)
  unreachable

240:                                              ; preds = %231
  %241 = call { i64, i64 } @get_stat_mtime(%struct.stat* %14) #13
  %242 = bitcast %struct.timespec* %23 to { i64, i64 }*
  %243 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %242, i32 0, i32 0
  %244 = extractvalue { i64, i64 } %241, 0
  store i64 %244, i64* %243, align 8
  %245 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %242, i32 0, i32 1
  %246 = extractvalue { i64, i64 } %241, 1
  store i64 %246, i64* %245, align 8
  %247 = bitcast %struct.timespec* %9 to i8*
  %248 = bitcast %struct.timespec* %23 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %247, i8* align 8 %248, i64 16, i1 false)
  br label %261

249:                                              ; preds = %228
  %250 = load i8*, i8** %8, align 8
  %251 = icmp ne i8* %250, null
  br i1 %251, label %252, label %254

252:                                              ; preds = %249
  %253 = load i8*, i8** %8, align 8
  store i8* %253, i8** %7, align 8
  br label %254

254:                                              ; preds = %252, %249
  %255 = load i8*, i8** %7, align 8
  %256 = load i32, i32* @parse_datetime_flags, align 4
  %257 = load %struct.tm_zone*, %struct.tm_zone** %21, align 8
  %258 = load i8*, i8** %20, align 8
  %259 = call zeroext i1 @parse_datetime2(%struct.timespec* %9, i8* %255, %struct.timespec* null, i32 %256, %struct.tm_zone* %257, i8* %258)
  %260 = zext i1 %259 to i8
  store i8 %260, i8* %22, align 1
  br label %261

261:                                              ; preds = %254, %240
  br label %262

262:                                              ; preds = %261, %227
  %263 = load i8, i8* %22, align 1
  %264 = trunc i8 %263 to i1
  br i1 %264, label %269, label %265

265:                                              ; preds = %262
  %266 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.44, i64 0, i64 0)) #11
  %267 = load i8*, i8** %7, align 8
  %268 = call i8* @quote(i8* %267)
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %266, i8* %268)
  unreachable

269:                                              ; preds = %262
  %270 = load i8, i8* %10, align 1
  %271 = trunc i8 %270 to i1
  br i1 %271, label %272, label %280

272:                                              ; preds = %269
  %273 = call i32 @settime(%struct.timespec* %9)
  %274 = icmp ne i32 %273, 0
  br i1 %274, label %275, label %279

275:                                              ; preds = %272
  %276 = call i32* @__errno_location() #15
  %277 = load i32, i32* %276, align 4
  %278 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.45, i64 0, i64 0)) #11
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %277, i8* %278)
  store i8 0, i8* %15, align 1
  br label %279

279:                                              ; preds = %275, %272
  br label %280

280:                                              ; preds = %279, %269
  %281 = load i8*, i8** %11, align 8
  %282 = load %struct.tm_zone*, %struct.tm_zone** %21, align 8
  %283 = bitcast %struct.timespec* %9 to { i64, i64 }*
  %284 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %283, i32 0, i32 0
  %285 = load i64, i64* %284, align 8
  %286 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %283, i32 0, i32 1
  %287 = load i64, i64* %286, align 8
  %288 = call zeroext i1 @show_date(i8* %281, i64 %285, i64 %287, %struct.tm_zone* %282)
  %289 = zext i1 %288 to i32
  %290 = load i8, i8* %15, align 1
  %291 = trunc i8 %290 to i1
  %292 = zext i1 %291 to i32
  %293 = and i32 %292, %289
  %294 = icmp ne i32 %293, 0
  %295 = zext i1 %294 to i8
  store i8 %295, i8* %15, align 1
  br label %296

296:                                              ; preds = %280, %198
  %297 = load i8, i8* %15, align 1
  %298 = trunc i8 %297 to i1
  %299 = zext i1 %298 to i64
  %300 = select i1 %298, i32 0, i32 1
  ret i32 %300
}

; Function Attrs: nounwind
declare dso_local i8* @bindtextdomain(i8*, i8*) #1

; Function Attrs: nounwind
declare dso_local i8* @textdomain(i8*) #1

; Function Attrs: nounwind
declare dso_local i32 @atexit(void ()*) #1

; Function Attrs: nounwind
declare dso_local i32 @getopt_long(i32, i8**, i8*, %struct.option*, i32*) #1

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @bad_cast(i8*) #3 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind
declare dso_local i32 @putenv(i8*) #1

declare dso_local void @error(i32, i32, i8*, ...) #2

; Function Attrs: nounwind
declare dso_local i8* @nl_langinfo(i32) #1

; Function Attrs: nounwind
declare dso_local i8* @getenv(i8*) #1

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @batch_convert(i8*, i8*, %struct.tm_zone*, i8*) #3 {
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca %struct.tm_zone*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8, align 1
  %10 = alloca %struct._IO_FILE*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i64, align 8
  %13 = alloca %struct.timespec, align 8
  %14 = alloca i64, align 8
  store i8* %0, i8** %5, align 8
  store i8* %1, i8** %6, align 8
  store %struct.tm_zone* %2, %struct.tm_zone** %7, align 8
  store i8* %3, i8** %8, align 8
  %15 = load i8*, i8** %5, align 8
  %16 = call i32 @strcmp(i8* %15, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.80, i64 0, i64 0)) #13
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %4
  %19 = call i8* @gettext(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.81, i64 0, i64 0)) #11
  store i8* %19, i8** %5, align 8
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  store %struct._IO_FILE* %20, %struct._IO_FILE** %10, align 8
  br label %32

21:                                               ; preds = %4
  %22 = load i8*, i8** %5, align 8
  %23 = call %struct._IO_FILE* @fopen(i8* %22, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.82, i64 0, i64 0))
  store %struct._IO_FILE* %23, %struct._IO_FILE** %10, align 8
  %24 = load %struct._IO_FILE*, %struct._IO_FILE** %10, align 8
  %25 = icmp eq %struct._IO_FILE* %24, null
  br i1 %25, label %26, label %31

26:                                               ; preds = %21
  %27 = call i32* @__errno_location() #15
  %28 = load i32, i32* %27, align 4
  %29 = load i8*, i8** %5, align 8
  %30 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %29)
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %28, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.43, i64 0, i64 0), i8* %30)
  unreachable

31:                                               ; preds = %21
  br label %32

32:                                               ; preds = %31, %18
  store i8* null, i8** %11, align 8
  store i64 0, i64* %12, align 8
  store i8 1, i8* %9, align 1
  br label %33

33:                                               ; preds = %78, %32
  %34 = load %struct._IO_FILE*, %struct._IO_FILE** %10, align 8
  %35 = call i64 @getline(i8** %11, i64* %12, %struct._IO_FILE* %34)
  store i64 %35, i64* %14, align 8
  %36 = load i64, i64* %14, align 8
  %37 = icmp slt i64 %36, 0
  br i1 %37, label %38, label %39

38:                                               ; preds = %33
  br label %79

39:                                               ; preds = %33
  %40 = load i8*, i8** %11, align 8
  %41 = load i32, i32* @parse_datetime_flags, align 4
  %42 = load %struct.tm_zone*, %struct.tm_zone** %7, align 8
  %43 = load i8*, i8** %8, align 8
  %44 = call zeroext i1 @parse_datetime2(%struct.timespec* %13, i8* %40, %struct.timespec* null, i32 %41, %struct.tm_zone* %42, i8* %43)
  br i1 %44, label %62, label %45

45:                                               ; preds = %39
  %46 = load i8*, i8** %11, align 8
  %47 = load i64, i64* %14, align 8
  %48 = sub nsw i64 %47, 1
  %49 = getelementptr inbounds i8, i8* %46, i64 %48
  %50 = load i8, i8* %49, align 1
  %51 = sext i8 %50 to i32
  %52 = icmp eq i32 %51, 10
  br i1 %52, label %53, label %58

53:                                               ; preds = %45
  %54 = load i8*, i8** %11, align 8
  %55 = load i64, i64* %14, align 8
  %56 = sub nsw i64 %55, 1
  %57 = getelementptr inbounds i8, i8* %54, i64 %56
  store i8 0, i8* %57, align 1
  br label %58

58:                                               ; preds = %53, %45
  %59 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.44, i64 0, i64 0)) #11
  %60 = load i8*, i8** %11, align 8
  %61 = call i8* @quote(i8* %60)
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %59, i8* %61)
  store i8 0, i8* %9, align 1
  br label %78

62:                                               ; preds = %39
  %63 = load i8*, i8** %6, align 8
  %64 = load %struct.tm_zone*, %struct.tm_zone** %7, align 8
  %65 = bitcast %struct.timespec* %13 to { i64, i64 }*
  %66 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %65, i32 0, i32 0
  %67 = load i64, i64* %66, align 8
  %68 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %65, i32 0, i32 1
  %69 = load i64, i64* %68, align 8
  %70 = call zeroext i1 @show_date(i8* %63, i64 %67, i64 %69, %struct.tm_zone* %64)
  %71 = zext i1 %70 to i32
  %72 = load i8, i8* %9, align 1
  %73 = trunc i8 %72 to i1
  %74 = zext i1 %73 to i32
  %75 = and i32 %74, %71
  %76 = icmp ne i32 %75, 0
  %77 = zext i1 %76 to i8
  store i8 %77, i8* %9, align 1
  br label %78

78:                                               ; preds = %62, %58
  br label %33

79:                                               ; preds = %38
  %80 = load %struct._IO_FILE*, %struct._IO_FILE** %10, align 8
  %81 = call i32 @rpl_fclose(%struct._IO_FILE* %80)
  %82 = icmp eq i32 %81, -1
  br i1 %82, label %83, label %88

83:                                               ; preds = %79
  %84 = call i32* @__errno_location() #15
  %85 = load i32, i32* %84, align 4
  %86 = load i8*, i8** %5, align 8
  %87 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %86)
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %85, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.43, i64 0, i64 0), i8* %87)
  unreachable

88:                                               ; preds = %79
  %89 = load i8*, i8** %11, align 8
  call void @free(i8* %89) #11
  %90 = load i8, i8* %9, align 1
  %91 = trunc i8 %90 to i1
  ret i1 %91
}

; Function Attrs: nounwind
declare dso_local i32 @stat(i8*, %struct.stat*) #1

; Function Attrs: nounwind readnone
declare dso_local i32* @__errno_location() #7

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @show_date(i8*, i64, i64, %struct.tm_zone*) #3 {
  %5 = alloca i1, align 1
  %6 = alloca %struct.timespec, align 8
  %7 = alloca i8*, align 8
  %8 = alloca %struct.tm_zone*, align 8
  %9 = alloca %struct.tm, align 8
  %10 = alloca [21 x i8], align 16
  %11 = bitcast %struct.timespec* %6 to { i64, i64 }*
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 0
  store i64 %1, i64* %12, align 8
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 1
  store i64 %2, i64* %13, align 8
  store i8* %0, i8** %7, align 8
  store %struct.tm_zone* %3, %struct.tm_zone** %8, align 8
  %14 = load %struct.tm_zone*, %struct.tm_zone** %8, align 8
  %15 = getelementptr inbounds %struct.timespec, %struct.timespec* %6, i32 0, i32 0
  %16 = call %struct.tm* @localtime_rz(%struct.tm_zone* %14, i64* %15, %struct.tm* %9)
  %17 = icmp ne %struct.tm* %16, null
  br i1 %17, label %18, label %38

18:                                               ; preds = %4
  %19 = load i8*, i8** %7, align 8
  %20 = icmp eq i8* %19, getelementptr inbounds ([25 x i8], [25 x i8]* @rfc_email_format, i64 0, i64 0)
  br i1 %20, label %21, label %23

21:                                               ; preds = %18
  %22 = call i8* @setlocale(i32 2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.83, i64 0, i64 0)) #11
  br label %23

23:                                               ; preds = %21, %18
  %24 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %25 = load i8*, i8** %7, align 8
  %26 = load %struct.tm_zone*, %struct.tm_zone** %8, align 8
  %27 = getelementptr inbounds %struct.timespec, %struct.timespec* %6, i32 0, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = trunc i64 %28 to i32
  %30 = call i64 @fprintftime(%struct._IO_FILE* %24, i8* %25, %struct.tm* %9, %struct.tm_zone* %26, i32 %29)
  %31 = load i8*, i8** %7, align 8
  %32 = icmp eq i8* %31, getelementptr inbounds ([25 x i8], [25 x i8]* @rfc_email_format, i64 0, i64 0)
  br i1 %32, label %33, label %35

33:                                               ; preds = %23
  %34 = call i8* @setlocale(i32 2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.28, i64 0, i64 0)) #11
  br label %35

35:                                               ; preds = %33, %23
  %36 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %37 = call i32 @fputc_unlocked(i32 10, %struct._IO_FILE* %36)
  store i1 true, i1* %5, align 1
  br label %45

38:                                               ; preds = %4
  %39 = call i8* @gettext(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.84, i64 0, i64 0)) #11
  %40 = getelementptr inbounds %struct.timespec, %struct.timespec* %6, i32 0, i32 0
  %41 = load i64, i64* %40, align 8
  %42 = getelementptr inbounds [21 x i8], [21 x i8]* %10, i64 0, i64 0
  %43 = call i8* @timetostr(i64 %41, i8* %42)
  %44 = call i8* @quote(i8* %43)
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %39, i8* %44)
  store i1 false, i1* %5, align 1
  br label %45

45:                                               ; preds = %38, %35
  %46 = load i1, i1* %5, align 1
  ret i1 %46
}

declare dso_local i32 @fputc_unlocked(i32, %struct._IO_FILE*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @timetostr(i64, i8*) #3 {
  %3 = alloca i64, align 8
  %4 = alloca i8*, align 8
  store i64 %0, i64* %3, align 8
  store i8* %1, i8** %4, align 8
  %5 = load i64, i64* %3, align 8
  %6 = load i8*, i8** %4, align 8
  %7 = call i8* @imaxtostr(i64 %5, i8* %6)
  ret i8* %7
}

declare dso_local %struct._IO_FILE* @fopen(i8*, i8*) #2

declare dso_local i64 @getline(i8**, i64*, %struct._IO_FILE*) #2

; Function Attrs: nounwind
declare dso_local void @free(i8*) #1

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i64 @argmatch(i8*, i8**, i8*, i64) #8 {
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8**, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %13 = alloca i8, align 1
  store i8* %0, i8** %6, align 8
  store i8** %1, i8*** %7, align 8
  store i8* %2, i8** %8, align 8
  store i64 %3, i64* %9, align 8
  store i64 -1, i64* %12, align 8
  store i8 0, i8* %13, align 1
  %14 = load i8*, i8** %6, align 8
  %15 = call i64 @strlen(i8* %14) #13
  store i64 %15, i64* %11, align 8
  store i64 0, i64* %10, align 8
  br label %16

16:                                               ; preds = %68, %4
  %17 = load i8**, i8*** %7, align 8
  %18 = load i64, i64* %10, align 8
  %19 = getelementptr inbounds i8*, i8** %17, i64 %18
  %20 = load i8*, i8** %19, align 8
  %21 = icmp ne i8* %20, null
  br i1 %21, label %22, label %71

22:                                               ; preds = %16
  %23 = load i8**, i8*** %7, align 8
  %24 = load i64, i64* %10, align 8
  %25 = getelementptr inbounds i8*, i8** %23, i64 %24
  %26 = load i8*, i8** %25, align 8
  %27 = load i8*, i8** %6, align 8
  %28 = load i64, i64* %11, align 8
  %29 = call i32 @strncmp(i8* %26, i8* %27, i64 %28) #13
  %30 = icmp ne i32 %29, 0
  br i1 %30, label %67, label %31

31:                                               ; preds = %22
  %32 = load i8**, i8*** %7, align 8
  %33 = load i64, i64* %10, align 8
  %34 = getelementptr inbounds i8*, i8** %32, i64 %33
  %35 = load i8*, i8** %34, align 8
  %36 = call i64 @strlen(i8* %35) #13
  %37 = load i64, i64* %11, align 8
  %38 = icmp eq i64 %36, %37
  br i1 %38, label %39, label %41

39:                                               ; preds = %31
  %40 = load i64, i64* %10, align 8
  store i64 %40, i64* %5, align 8
  br label %77

41:                                               ; preds = %31
  %42 = load i64, i64* %12, align 8
  %43 = icmp eq i64 %42, -1
  br i1 %43, label %44, label %46

44:                                               ; preds = %41
  %45 = load i64, i64* %10, align 8
  store i64 %45, i64* %12, align 8
  br label %65

46:                                               ; preds = %41
  %47 = load i8*, i8** %8, align 8
  %48 = icmp eq i8* %47, null
  br i1 %48, label %63, label %49

49:                                               ; preds = %46
  %50 = load i8*, i8** %8, align 8
  %51 = load i64, i64* %9, align 8
  %52 = load i64, i64* %12, align 8
  %53 = mul i64 %51, %52
  %54 = getelementptr inbounds i8, i8* %50, i64 %53
  %55 = load i8*, i8** %8, align 8
  %56 = load i64, i64* %9, align 8
  %57 = load i64, i64* %10, align 8
  %58 = mul i64 %56, %57
  %59 = getelementptr inbounds i8, i8* %55, i64 %58
  %60 = load i64, i64* %9, align 8
  %61 = call i32 @memcmp(i8* %54, i8* %59, i64 %60) #13
  %62 = icmp ne i32 %61, 0
  br i1 %62, label %63, label %64

63:                                               ; preds = %49, %46
  store i8 1, i8* %13, align 1
  br label %64

64:                                               ; preds = %63, %49
  br label %65

65:                                               ; preds = %64, %44
  br label %66

66:                                               ; preds = %65
  br label %67

67:                                               ; preds = %66, %22
  br label %68

68:                                               ; preds = %67
  %69 = load i64, i64* %10, align 8
  %70 = add i64 %69, 1
  store i64 %70, i64* %10, align 8
  br label %16

71:                                               ; preds = %16
  %72 = load i8, i8* %13, align 1
  %73 = trunc i8 %72 to i1
  br i1 %73, label %74, label %75

74:                                               ; preds = %71
  store i64 -2, i64* %5, align 8
  br label %77

75:                                               ; preds = %71
  %76 = load i64, i64* %12, align 8
  store i64 %76, i64* %5, align 8
  br label %77

77:                                               ; preds = %75, %74, %39
  %78 = load i64, i64* %5, align 8
  ret i64 %78
}

; Function Attrs: nounwind readonly
declare dso_local i64 @strlen(i8*) #6

; Function Attrs: nounwind readonly
declare dso_local i32 @memcmp(i8*, i8*, i64) #6

; Function Attrs: noinline nounwind optnone uwtable
define internal void @argmatch_invalid(i8*, i8*, i64) #3 {
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i8*, align 8
  store i8* %0, i8** %4, align 8
  store i8* %1, i8** %5, align 8
  store i64 %2, i64* %6, align 8
  %8 = load i64, i64* %6, align 8
  %9 = icmp eq i64 %8, -1
  br i1 %9, label %10, label %12

10:                                               ; preds = %3
  %11 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.86, i64 0, i64 0)) #11
  br label %14

12:                                               ; preds = %3
  %13 = call i8* @gettext(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.87, i64 0, i64 0)) #11
  br label %14

14:                                               ; preds = %12, %10
  %15 = phi i8* [ %11, %10 ], [ %13, %12 ]
  store i8* %15, i8** %7, align 8
  %16 = load i8*, i8** %7, align 8
  %17 = load i8*, i8** %5, align 8
  %18 = call i8* @quotearg_n_style(i32 0, i32 8, i8* %17)
  %19 = load i8*, i8** %4, align 8
  %20 = call i8* @quote_n(i32 1, i8* %19)
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %16, i8* %18, i8* %20)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @argmatch_valid(i8**, i8*, i64) #3 {
  %4 = alloca i8**, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  store i8** %0, i8*** %4, align 8
  store i8* %1, i8** %5, align 8
  store i64 %2, i64* %6, align 8
  store i8* null, i8** %8, align 8
  %9 = call i8* @gettext(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.2.88, i64 0, i64 0)) #11
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %11 = call i32 @fputs_unlocked(i8* %9, %struct._IO_FILE* %10)
  store i64 0, i64* %7, align 8
  br label %12

12:                                               ; preds = %53, %3
  %13 = load i8**, i8*** %4, align 8
  %14 = load i64, i64* %7, align 8
  %15 = getelementptr inbounds i8*, i8** %13, i64 %14
  %16 = load i8*, i8** %15, align 8
  %17 = icmp ne i8* %16, null
  br i1 %17, label %18, label %56

18:                                               ; preds = %12
  %19 = load i64, i64* %7, align 8
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %31, label %21

21:                                               ; preds = %18
  %22 = load i8*, i8** %8, align 8
  %23 = load i8*, i8** %5, align 8
  %24 = load i64, i64* %6, align 8
  %25 = load i64, i64* %7, align 8
  %26 = mul i64 %24, %25
  %27 = getelementptr inbounds i8, i8* %23, i64 %26
  %28 = load i64, i64* %6, align 8
  %29 = call i32 @memcmp(i8* %22, i8* %27, i64 %28) #13
  %30 = icmp ne i32 %29, 0
  br i1 %30, label %31, label %44

31:                                               ; preds = %21, %18
  %32 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %33 = load i8**, i8*** %4, align 8
  %34 = load i64, i64* %7, align 8
  %35 = getelementptr inbounds i8*, i8** %33, i64 %34
  %36 = load i8*, i8** %35, align 8
  %37 = call i8* @quote(i8* %36)
  %38 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %32, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3.89, i64 0, i64 0), i8* %37)
  %39 = load i8*, i8** %5, align 8
  %40 = load i64, i64* %6, align 8
  %41 = load i64, i64* %7, align 8
  %42 = mul i64 %40, %41
  %43 = getelementptr inbounds i8, i8* %39, i64 %42
  store i8* %43, i8** %8, align 8
  br label %52

44:                                               ; preds = %21
  %45 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %46 = load i8**, i8*** %4, align 8
  %47 = load i64, i64* %7, align 8
  %48 = getelementptr inbounds i8*, i8** %46, i64 %47
  %49 = load i8*, i8** %48, align 8
  %50 = call i8* @quote(i8* %49)
  %51 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %45, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4.90, i64 0, i64 0), i8* %50)
  br label %52

52:                                               ; preds = %44, %31
  br label %53

53:                                               ; preds = %52
  %54 = load i64, i64* %7, align 8
  %55 = add i64 %54, 1
  store i64 %55, i64* %7, align 8
  br label %12

56:                                               ; preds = %12
  %57 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %58 = call i32 @putc_unlocked(i32 10, %struct._IO_FILE* %57)
  ret void
}

declare dso_local i32 @putc_unlocked(i32, %struct._IO_FILE*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @__xargmatch_internal(i8*, i8*, i8**, i8*, i64, void ()*) #3 {
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8**, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i64, align 8
  %13 = alloca void ()*, align 8
  %14 = alloca i64, align 8
  store i8* %0, i8** %8, align 8
  store i8* %1, i8** %9, align 8
  store i8** %2, i8*** %10, align 8
  store i8* %3, i8** %11, align 8
  store i64 %4, i64* %12, align 8
  store void ()* %5, void ()** %13, align 8
  %15 = load i8*, i8** %9, align 8
  %16 = load i8**, i8*** %10, align 8
  %17 = load i8*, i8** %11, align 8
  %18 = load i64, i64* %12, align 8
  %19 = call i64 @argmatch(i8* %15, i8** %16, i8* %17, i64 %18) #13
  store i64 %19, i64* %14, align 8
  %20 = load i64, i64* %14, align 8
  %21 = icmp sge i64 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %6
  %23 = load i64, i64* %14, align 8
  store i64 %23, i64* %7, align 8
  br label %32

24:                                               ; preds = %6
  %25 = load i8*, i8** %8, align 8
  %26 = load i8*, i8** %9, align 8
  %27 = load i64, i64* %14, align 8
  call void @argmatch_invalid(i8* %25, i8* %26, i64 %27)
  %28 = load i8**, i8*** %10, align 8
  %29 = load i8*, i8** %11, align 8
  %30 = load i64, i64* %12, align 8
  call void @argmatch_valid(i8** %28, i8* %29, i64 %30)
  %31 = load void ()*, void ()** %13, align 8
  call void %31()
  store i64 -1, i64* %7, align 8
  br label %32

32:                                               ; preds = %24, %22
  %33 = load i64, i64* %7, align 8
  ret i64 %33
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @__argmatch_die() #3 {
  call void @usage(i32 1)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @close_stdout() #3 {
  %1 = alloca i8*, align 8
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %3 = call i32 @close_stream(%struct._IO_FILE* %2)
  %4 = icmp ne i32 %3, 0
  br i1 %4, label %5, label %28

5:                                                ; preds = %0
  %6 = load i8, i8* @ignore_EPIPE, align 1
  %7 = trunc i8 %6 to i1
  br i1 %7, label %8, label %12

8:                                                ; preds = %5
  %9 = call i32* @__errno_location() #15
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 32
  br i1 %11, label %28, label %12

12:                                               ; preds = %8, %5
  %13 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.97, i64 0, i64 0)) #11
  store i8* %13, i8** %1, align 8
  %14 = load i8*, i8** @file_name, align 8
  %15 = icmp ne i8* %14, null
  br i1 %15, label %16, label %22

16:                                               ; preds = %12
  %17 = call i32* @__errno_location() #15
  %18 = load i32, i32* %17, align 4
  %19 = load i8*, i8** @file_name, align 8
  %20 = call i8* @quotearg_colon(i8* %19)
  %21 = load i8*, i8** %1, align 8
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %18, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.98, i64 0, i64 0), i8* %20, i8* %21)
  br label %26

22:                                               ; preds = %12
  %23 = call i32* @__errno_location() #15
  %24 = load i32, i32* %23, align 4
  %25 = load i8*, i8** %1, align 8
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2.99, i64 0, i64 0), i8* %25)
  br label %26

26:                                               ; preds = %22, %16
  %27 = load volatile i32, i32* @exit_failure, align 4
  call void @_exit(i32 %27) #14
  unreachable

28:                                               ; preds = %8, %0
  %29 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %30 = call i32 @close_stream(%struct._IO_FILE* %29)
  %31 = icmp ne i32 %30, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %28
  %33 = load volatile i32, i32* @exit_failure, align 4
  call void @_exit(i32 %33) #14
  unreachable

34:                                               ; preds = %28
  ret void
}

; Function Attrs: noreturn
declare dso_local void @_exit(i32) #9

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @fprintftime(%struct._IO_FILE*, i8*, %struct.tm*, %struct.tm_zone*, i32) #3 {
  %6 = alloca %struct._IO_FILE*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca %struct.tm*, align 8
  %9 = alloca %struct.tm_zone*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i8, align 1
  store %struct._IO_FILE* %0, %struct._IO_FILE** %6, align 8
  store i8* %1, i8** %7, align 8
  store %struct.tm* %2, %struct.tm** %8, align 8
  store %struct.tm_zone* %3, %struct.tm_zone** %9, align 8
  store i32 %4, i32* %10, align 4
  store i8 0, i8* %11, align 1
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8
  %13 = load i8*, i8** %7, align 8
  %14 = load %struct.tm*, %struct.tm** %8, align 8
  %15 = load %struct.tm_zone*, %struct.tm_zone** %9, align 8
  %16 = load i32, i32* %10, align 4
  %17 = call i64 @__strftime_internal(%struct._IO_FILE* %12, i8* %13, %struct.tm* %14, i1 zeroext false, i32 0, i32 -1, i8* %11, %struct.tm_zone* %15, i32 %16)
  ret i64 %17
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @__strftime_internal(%struct._IO_FILE*, i8*, %struct.tm*, i1 zeroext, i32, i32, i8*, %struct.tm_zone*, i32) #3 {
  %10 = alloca i64, align 8
  %11 = alloca %struct._IO_FILE*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca %struct.tm*, align 8
  %14 = alloca i8, align 1
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i8*, align 8
  %18 = alloca %struct.tm_zone*, align 8
  %19 = alloca i32, align 4
  %20 = alloca i64, align 8
  %21 = alloca i32, align 4
  %22 = alloca i8*, align 8
  %23 = alloca i64, align 8
  %24 = alloca %struct._IO_FILE*, align 8
  %25 = alloca i8*, align 8
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca i32, align 4
  %31 = alloca i8, align 1
  %32 = alloca i8, align 1
  %33 = alloca i32, align 4
  %34 = alloca i8*, align 8
  %35 = alloca i8*, align 8
  %36 = alloca [23 x i8], align 16
  %37 = alloca i8, align 1
  %38 = alloca i8, align 1
  %39 = alloca i64, align 8
  %40 = alloca i8, align 1
  %41 = alloca i32, align 4
  %42 = alloca i32, align 4
  %43 = alloca i64, align 8
  %44 = alloca i64, align 8
  %45 = alloca i64, align 8
  %46 = alloca i64, align 8
  %47 = alloca i64, align 8
  %48 = alloca i64, align 8
  %49 = alloca i64, align 8
  %50 = alloca i64, align 8
  %51 = alloca i64, align 8
  %52 = alloca i64, align 8
  %53 = alloca i64, align 8
  %54 = alloca i64, align 8
  %55 = alloca i64, align 8
  %56 = alloca i64, align 8
  %57 = alloca i64, align 8
  %58 = alloca i64, align 8
  %59 = alloca i64, align 8
  %60 = alloca i64, align 8
  %61 = alloca i64, align 8
  %62 = alloca [5 x i8], align 1
  %63 = alloca i8*, align 8
  %64 = alloca [1024 x i8], align 16
  %65 = alloca i64, align 8
  %66 = alloca i64, align 8
  %67 = alloca i64, align 8
  %68 = alloca i64, align 8
  %69 = alloca i64, align 8
  %70 = alloca i64, align 8
  %71 = alloca i64, align 8
  %72 = alloca i8, align 1
  %73 = alloca i8, align 1
  %74 = alloca i32, align 4
  %75 = alloca i8, align 1
  %76 = alloca i32, align 4
  %77 = alloca i32, align 4
  %78 = alloca i32, align 4
  %79 = alloca i64, align 8
  %80 = alloca i64, align 8
  %81 = alloca i64, align 8
  %82 = alloca i64, align 8
  %83 = alloca i64, align 8
  %84 = alloca i64, align 8
  %85 = alloca i64, align 8
  %86 = alloca i64, align 8
  %87 = alloca i64, align 8
  %88 = alloca i64, align 8
  %89 = alloca i64, align 8
  %90 = alloca i64, align 8
  %91 = alloca i64, align 8
  %92 = alloca i32, align 4
  %93 = alloca i32, align 4
  %94 = alloca i32, align 4
  %95 = alloca i32, align 4
  %96 = alloca i64, align 8
  %97 = alloca i64, align 8
  %98 = alloca i64, align 8
  %99 = alloca i64, align 8
  %100 = alloca i64, align 8
  %101 = alloca i64, align 8
  %102 = alloca i64, align 8
  %103 = alloca i64, align 8
  %104 = alloca i64, align 8
  %105 = alloca i64, align 8
  %106 = alloca i64, align 8
  %107 = alloca i64, align 8
  %108 = alloca i64, align 8
  %109 = alloca i64, align 8
  %110 = alloca i64, align 8
  %111 = alloca i64, align 8
  %112 = alloca i64, align 8
  %113 = alloca i64, align 8
  %114 = alloca %struct.tm, align 8
  %115 = alloca i64, align 8
  %116 = alloca i32, align 4
  %117 = alloca i64, align 8
  %118 = alloca i64, align 8
  %119 = alloca i64, align 8
  %120 = alloca i64, align 8
  %121 = alloca i64, align 8
  %122 = alloca i64, align 8
  %123 = alloca i32, align 4
  %124 = alloca i32, align 4
  %125 = alloca i32, align 4
  %126 = alloca i32, align 4
  %127 = alloca i32, align 4
  %128 = alloca i32, align 4
  %129 = alloca i64, align 8
  %130 = alloca i64, align 8
  %131 = alloca i64, align 8
  %132 = alloca i64, align 8
  %133 = alloca i64, align 8
  %134 = alloca i64, align 8
  %135 = alloca i32, align 4
  %136 = alloca i32, align 4
  %137 = alloca i32, align 4
  %138 = alloca i32, align 4
  %139 = alloca i32, align 4
  %140 = alloca i64, align 8
  %141 = alloca i64, align 8
  %142 = alloca i64, align 8
  %143 = alloca i64, align 8
  %144 = alloca i64, align 8
  %145 = alloca i64, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %11, align 8
  store i8* %1, i8** %12, align 8
  store %struct.tm* %2, %struct.tm** %13, align 8
  %146 = zext i1 %3 to i8
  store i8 %146, i8* %14, align 1
  store i32 %4, i32* %15, align 4
  store i32 %5, i32* %16, align 4
  store i8* %6, i8** %17, align 8
  store %struct.tm_zone* %7, %struct.tm_zone** %18, align 8
  store i32 %8, i32* %19, align 4
  store i64 -1, i64* %20, align 8
  %147 = load %struct.tm*, %struct.tm** %13, align 8
  %148 = getelementptr inbounds %struct.tm, %struct.tm* %147, i32 0, i32 2
  %149 = load i32, i32* %148, align 8
  store i32 %149, i32* %21, align 4
  store i64 0, i64* %23, align 8
  %150 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8
  store %struct._IO_FILE* %150, %struct._IO_FILE** %24, align 8
  store i8* null, i8** %22, align 8
  %151 = load %struct.tm*, %struct.tm** %13, align 8
  %152 = getelementptr inbounds %struct.tm, %struct.tm* %151, i32 0, i32 10
  %153 = load i8*, i8** %152, align 8
  store i8* %153, i8** %22, align 8
  %154 = load i8*, i8** %22, align 8
  %155 = icmp ne i8* %154, null
  br i1 %155, label %157, label %156

156:                                              ; preds = %9
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.104, i64 0, i64 0), i8** %22, align 8
  br label %157

157:                                              ; preds = %156, %9
  %158 = load i32, i32* %21, align 4
  %159 = icmp sgt i32 %158, 12
  br i1 %159, label %160, label %163

160:                                              ; preds = %157
  %161 = load i32, i32* %21, align 4
  %162 = sub nsw i32 %161, 12
  store i32 %162, i32* %21, align 4
  br label %168

163:                                              ; preds = %157
  %164 = load i32, i32* %21, align 4
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %166, label %167

166:                                              ; preds = %163
  store i32 12, i32* %21, align 4
  br label %167

167:                                              ; preds = %166, %163
  br label %168

168:                                              ; preds = %167, %160
  %169 = load i8*, i8** %12, align 8
  store i8* %169, i8** %25, align 8
  br label %170

170:                                              ; preds = %2873, %168
  %171 = load i8*, i8** %25, align 8
  %172 = load i8, i8* %171, align 1
  %173 = sext i8 %172 to i32
  %174 = icmp ne i32 %173, 0
  br i1 %174, label %175, label %2876

175:                                              ; preds = %170
  %176 = call i32 @_Z10computeFuniiiii(i32 -969226700, i32 58, i32 -8114315, i32 6827, i32 538299778)
  store i32 %176, i32* %26, align 4
  %177 = call i32 @_Z10computeFuniiiii(i32 -112232093, i32 57, i32 -139385408, i32 6987, i32 450181028)
  store i32 %177, i32* %28, align 4
  store i8 0, i8* %37, align 1
  %178 = load i8, i8* %14, align 1
  %179 = trunc i8 %178 to i1
  %180 = zext i1 %179 to i8
  store i8 %180, i8* %38, align 1
  store i8 0, i8* %40, align 1
  %181 = load i8*, i8** %25, align 8
  %182 = load i8, i8* %181, align 1
  %183 = sext i8 %182 to i32
  %184 = icmp ne i32 %183, 37
  br i1 %184, label %185, label %269

185:                                              ; preds = %175
  br label %186

186:                                              ; preds = %185
  store i64 1, i64* %43, align 8
  %187 = load i32, i32* %26, align 4
  %188 = icmp eq i32 %187, 45
  br i1 %188, label %192, label %189

189:                                              ; preds = %186
  %190 = load i32, i32* %16, align 4
  %191 = icmp slt i32 %190, 0
  br i1 %191, label %192, label %193

192:                                              ; preds = %189, %186
  br label %195

193:                                              ; preds = %189
  %194 = load i32, i32* %16, align 4
  br label %195

195:                                              ; preds = %193, %192
  %196 = phi i32 [ 0, %192 ], [ %194, %193 ]
  %197 = sext i32 %196 to i64
  store i64 %197, i64* %44, align 8
  %198 = load i64, i64* %43, align 8
  %199 = load i64, i64* %44, align 8
  %200 = icmp ult i64 %198, %199
  br i1 %200, label %201, label %203

201:                                              ; preds = %195
  %202 = load i64, i64* %44, align 8
  br label %205

203:                                              ; preds = %195
  %204 = load i64, i64* %43, align 8
  br label %205

205:                                              ; preds = %203, %201
  %206 = phi i64 [ %202, %201 ], [ %204, %203 ]
  store i64 %206, i64* %45, align 8
  %207 = load i64, i64* %45, align 8
  %208 = load i64, i64* %20, align 8
  %209 = load i64, i64* %23, align 8
  %210 = sub i64 %208, %209
  %211 = icmp uge i64 %207, %210
  br i1 %211, label %212, label %213

212:                                              ; preds = %205
  store i64 0, i64* %10, align 8
  br label %2878

213:                                              ; preds = %205
  %214 = load %struct._IO_FILE*, %struct._IO_FILE** %24, align 8
  %215 = icmp ne %struct._IO_FILE* %214, null
  br i1 %215, label %216, label %264

216:                                              ; preds = %213
  %217 = load i64, i64* %43, align 8
  %218 = load i64, i64* %44, align 8
  %219 = icmp ult i64 %217, %218
  br i1 %219, label %220, label %258

220:                                              ; preds = %216
  %221 = load i64, i64* %44, align 8
  %222 = load i64, i64* %43, align 8
  %223 = sub i64 %221, %222
  store i64 %223, i64* %46, align 8
  %224 = load i32, i32* %26, align 4
  %225 = icmp eq i32 %224, 48
  br i1 %225, label %229, label %226

226:                                              ; preds = %220
  %227 = load i32, i32* %26, align 4
  %228 = icmp eq i32 %227, 43
  br i1 %228, label %229, label %243

229:                                              ; preds = %226, %220
  br label %230

230:                                              ; preds = %229
  store i64 0, i64* %47, align 8
  br label %231

231:                                              ; preds = %238, %230
  %232 = load i64, i64* %47, align 8
  %233 = load i64, i64* %46, align 8
  %234 = icmp ult i64 %232, %233
  br i1 %234, label %235, label %241

235:                                              ; preds = %231
  %236 = load %struct._IO_FILE*, %struct._IO_FILE** %24, align 8
  %237 = call i32 @fputc(i32 48, %struct._IO_FILE* %236)
  br label %238

238:                                              ; preds = %235
  %239 = load i64, i64* %47, align 8
  %240 = add i64 %239, 1
  store i64 %240, i64* %47, align 8
  br label %231

241:                                              ; preds = %231
  br label %242

242:                                              ; preds = %241
  br label %257

243:                                              ; preds = %226
  br label %244

244:                                              ; preds = %243
  store i64 0, i64* %48, align 8
  br label %245

245:                                              ; preds = %252, %244
  %246 = load i64, i64* %48, align 8
  %247 = load i64, i64* %46, align 8
  %248 = icmp ult i64 %246, %247
  br i1 %248, label %249, label %255

249:                                              ; preds = %245
  %250 = load %struct._IO_FILE*, %struct._IO_FILE** %24, align 8
  %251 = call i32 @fputc(i32 32, %struct._IO_FILE* %250)
  br label %252

252:                                              ; preds = %249
  %253 = load i64, i64* %48, align 8
  %254 = add i64 %253, 1
  store i64 %254, i64* %48, align 8
  br label %245

255:                                              ; preds = %245
  br label %256

256:                                              ; preds = %255
  br label %257

257:                                              ; preds = %256, %242
  br label %258

258:                                              ; preds = %257, %216
  %259 = load i8*, i8** %25, align 8
  %260 = load i8, i8* %259, align 1
  %261 = sext i8 %260 to i32
  %262 = load %struct._IO_FILE*, %struct._IO_FILE** %24, align 8
  %263 = call i32 @fputc(i32 %261, %struct._IO_FILE* %262)
  br label %264

264:                                              ; preds = %258, %213
  %265 = load i64, i64* %45, align 8
  %266 = load i64, i64* %23, align 8
  %267 = add i64 %266, %265
  store i64 %267, i64* %23, align 8
  br label %268

268:                                              ; preds = %264
  br label %2873

269:                                              ; preds = %175
  br label %270

270:                                              ; preds = %280, %279, %275, %269
  %271 = load i8*, i8** %25, align 8
  %272 = getelementptr inbounds i8, i8* %271, i32 1
  store i8* %272, i8** %25, align 8
  %273 = load i8, i8* %272, align 1
  %274 = sext i8 %273 to i32
  switch i32 %274, label %281 [
    i32 95, label %275
    i32 45, label %275
    i32 43, label %275
    i32 48, label %275
    i32 94, label %279
    i32 35, label %280
  ]

275:                                              ; preds = %270, %270, %270, %270
  %276 = load i8*, i8** %25, align 8
  %277 = load i8, i8* %276, align 1
  %278 = sext i8 %277 to i32
  store i32 %278, i32* %26, align 4
  br label %270

279:                                              ; preds = %270
  store i8 1, i8* %38, align 1
  br label %270

280:                                              ; preds = %270
  store i8 1, i8* %40, align 1
  br label %270

281:                                              ; preds = %270
  br label %282

282:                                              ; preds = %281
  br label %283

283:                                              ; preds = %282
  %284 = load i8*, i8** %25, align 8
  %285 = load i8, i8* %284, align 1
  %286 = sext i8 %285 to i32
  %287 = sub i32 %286, 48
  %288 = icmp ule i32 %287, 9
  br i1 %288, label %289, label %933

289:                                              ; preds = %283
  store i32 0, i32* %16, align 4
  br label %290

290:                                              ; preds = %926, %289
  br i1 false, label %291, label %416

291:                                              ; preds = %290
  br i1 false, label %354, label %292

292:                                              ; preds = %291
  br i1 false, label %293, label %323

293:                                              ; preds = %292
  %294 = load i32, i32* %16, align 4
  %295 = icmp slt i32 %294, 0
  br i1 %295, label %296, label %304

296:                                              ; preds = %293
  br i1 true, label %297, label %300

297:                                              ; preds = %296
  %298 = load i32, i32* %16, align 4
  %299 = icmp slt i32 %298, 12
  br i1 %299, label %344, label %349

300:                                              ; preds = %296
  %301 = load i32, i32* %16, align 4
  %302 = sub nsw i32 -1, %301
  %303 = icmp sle i32 -12, %302
  br i1 %303, label %344, label %349

304:                                              ; preds = %293
  br i1 true, label %305, label %306

305:                                              ; preds = %304
  br i1 false, label %307, label %320

306:                                              ; preds = %304
  br i1 false, label %307, label %320

307:                                              ; preds = %306, %305
  br i1 false, label %308, label %320

308:                                              ; preds = %307
  br i1 true, label %309, label %313

309:                                              ; preds = %308
  %310 = load i32, i32* %16, align 4
  %311 = add nsw i32 %310, -128
  %312 = icmp slt i32 0, %311
  br i1 %312, label %344, label %349

313:                                              ; preds = %308
  %314 = load i32, i32* %16, align 4
  %315 = icmp slt i32 0, %314
  br i1 %315, label %316, label %349

316:                                              ; preds = %313
  %317 = load i32, i32* %16, align 4
  %318 = sub nsw i32 %317, 1
  %319 = icmp slt i32 127, %318
  br i1 %319, label %344, label %349

320:                                              ; preds = %307, %306, %305
  %321 = load i32, i32* %16, align 4
  %322 = icmp slt i32 -12, %321
  br i1 %322, label %344, label %349

323:                                              ; preds = %292
  br i1 false, label %324, label %325

324:                                              ; preds = %323
  br i1 false, label %344, label %349

325:                                              ; preds = %323
  %326 = load i32, i32* %16, align 4
  %327 = icmp slt i32 %326, 0
  br i1 %327, label %328, label %341

328:                                              ; preds = %325
  br i1 true, label %329, label %330

329:                                              ; preds = %328
  br i1 false, label %331, label %337

330:                                              ; preds = %328
  br i1 false, label %331, label %337

331:                                              ; preds = %330, %329
  %332 = load i32, i32* %16, align 4
  %333 = icmp eq i32 %332, -1
  br i1 %333, label %334, label %337

334:                                              ; preds = %331
  br i1 true, label %335, label %336

335:                                              ; preds = %334
  br i1 false, label %344, label %349

336:                                              ; preds = %334
  br i1 false, label %344, label %349

337:                                              ; preds = %331, %330, %329
  %338 = load i32, i32* %16, align 4
  %339 = sdiv i32 -128, %338
  %340 = icmp slt i32 %339, 10
  br i1 %340, label %344, label %349

341:                                              ; preds = %325
  %342 = load i32, i32* %16, align 4
  %343 = icmp slt i32 12, %342
  br i1 %343, label %344, label %349

344:                                              ; preds = %341, %337, %336, %335, %324, %320, %316, %309, %300, %297
  %345 = load i32, i32* %16, align 4
  %346 = mul i32 %345, 10
  %347 = trunc i32 %346 to i8
  %348 = sext i8 %347 to i32
  store i32 %348, i32* %16, align 4
  br i1 true, label %922, label %913

349:                                              ; preds = %341, %337, %336, %335, %324, %320, %316, %313, %309, %300, %297
  %350 = load i32, i32* %16, align 4
  %351 = mul i32 %350, 10
  %352 = trunc i32 %351 to i8
  %353 = sext i8 %352 to i32
  store i32 %353, i32* %16, align 4
  br i1 false, label %922, label %913

354:                                              ; preds = %291
  br i1 false, label %355, label %385

355:                                              ; preds = %354
  %356 = load i32, i32* %16, align 4
  %357 = icmp slt i32 %356, 0
  br i1 %357, label %358, label %366

358:                                              ; preds = %355
  br i1 true, label %359, label %362

359:                                              ; preds = %358
  %360 = load i32, i32* %16, align 4
  %361 = icmp slt i32 %360, 25
  br i1 %361, label %406, label %411

362:                                              ; preds = %358
  %363 = load i32, i32* %16, align 4
  %364 = sub nsw i32 -1, %363
  %365 = icmp sle i32 -25, %364
  br i1 %365, label %406, label %411

366:                                              ; preds = %355
  br i1 true, label %367, label %368

367:                                              ; preds = %366
  br i1 false, label %369, label %382

368:                                              ; preds = %366
  br i1 false, label %369, label %382

369:                                              ; preds = %368, %367
  br i1 false, label %370, label %382

370:                                              ; preds = %369
  br i1 true, label %371, label %375

371:                                              ; preds = %370
  %372 = load i32, i32* %16, align 4
  %373 = add nsw i32 %372, 0
  %374 = icmp slt i32 0, %373
  br i1 %374, label %406, label %411

375:                                              ; preds = %370
  %376 = load i32, i32* %16, align 4
  %377 = icmp slt i32 0, %376
  br i1 %377, label %378, label %411

378:                                              ; preds = %375
  %379 = load i32, i32* %16, align 4
  %380 = sub nsw i32 %379, 1
  %381 = icmp slt i32 -1, %380
  br i1 %381, label %406, label %411

382:                                              ; preds = %369, %368, %367
  %383 = load i32, i32* %16, align 4
  %384 = icmp slt i32 0, %383
  br i1 %384, label %406, label %411

385:                                              ; preds = %354
  br i1 false, label %386, label %387

386:                                              ; preds = %385
  br i1 false, label %406, label %411

387:                                              ; preds = %385
  %388 = load i32, i32* %16, align 4
  %389 = icmp slt i32 %388, 0
  br i1 %389, label %390, label %403

390:                                              ; preds = %387
  br i1 true, label %391, label %392

391:                                              ; preds = %390
  br i1 false, label %393, label %399

392:                                              ; preds = %390
  br i1 false, label %393, label %399

393:                                              ; preds = %392, %391
  %394 = load i32, i32* %16, align 4
  %395 = icmp eq i32 %394, -1
  br i1 %395, label %396, label %399

396:                                              ; preds = %393
  br i1 true, label %397, label %398

397:                                              ; preds = %396
  br i1 true, label %406, label %411

398:                                              ; preds = %396
  br i1 true, label %406, label %411

399:                                              ; preds = %393, %392, %391
  %400 = load i32, i32* %16, align 4
  %401 = sdiv i32 0, %400
  %402 = icmp slt i32 %401, 10
  br i1 %402, label %406, label %411

403:                                              ; preds = %387
  %404 = load i32, i32* %16, align 4
  %405 = icmp slt i32 25, %404
  br i1 %405, label %406, label %411

406:                                              ; preds = %403, %399, %398, %397, %386, %382, %378, %371, %362, %359
  %407 = load i32, i32* %16, align 4
  %408 = mul i32 %407, 10
  %409 = trunc i32 %408 to i8
  %410 = zext i8 %409 to i32
  store i32 %410, i32* %16, align 4
  br i1 true, label %922, label %913

411:                                              ; preds = %403, %399, %398, %397, %386, %382, %378, %375, %371, %362, %359
  %412 = load i32, i32* %16, align 4
  %413 = mul i32 %412, 10
  %414 = trunc i32 %413 to i8
  %415 = zext i8 %414 to i32
  store i32 %415, i32* %16, align 4
  br i1 false, label %922, label %913

416:                                              ; preds = %290
  br i1 false, label %417, label %542

417:                                              ; preds = %416
  br i1 false, label %480, label %418

418:                                              ; preds = %417
  br i1 false, label %419, label %449

419:                                              ; preds = %418
  %420 = load i32, i32* %16, align 4
  %421 = icmp slt i32 %420, 0
  br i1 %421, label %422, label %430

422:                                              ; preds = %419
  br i1 true, label %423, label %426

423:                                              ; preds = %422
  %424 = load i32, i32* %16, align 4
  %425 = icmp slt i32 %424, 3276
  br i1 %425, label %470, label %475

426:                                              ; preds = %422
  %427 = load i32, i32* %16, align 4
  %428 = sub nsw i32 -1, %427
  %429 = icmp sle i32 -3276, %428
  br i1 %429, label %470, label %475

430:                                              ; preds = %419
  br i1 true, label %431, label %432

431:                                              ; preds = %430
  br i1 false, label %433, label %446

432:                                              ; preds = %430
  br i1 false, label %433, label %446

433:                                              ; preds = %432, %431
  br i1 false, label %434, label %446

434:                                              ; preds = %433
  br i1 true, label %435, label %439

435:                                              ; preds = %434
  %436 = load i32, i32* %16, align 4
  %437 = add nsw i32 %436, -32768
  %438 = icmp slt i32 0, %437
  br i1 %438, label %470, label %475

439:                                              ; preds = %434
  %440 = load i32, i32* %16, align 4
  %441 = icmp slt i32 0, %440
  br i1 %441, label %442, label %475

442:                                              ; preds = %439
  %443 = load i32, i32* %16, align 4
  %444 = sub nsw i32 %443, 1
  %445 = icmp slt i32 32767, %444
  br i1 %445, label %470, label %475

446:                                              ; preds = %433, %432, %431
  %447 = load i32, i32* %16, align 4
  %448 = icmp slt i32 -3276, %447
  br i1 %448, label %470, label %475

449:                                              ; preds = %418
  br i1 false, label %450, label %451

450:                                              ; preds = %449
  br i1 false, label %470, label %475

451:                                              ; preds = %449
  %452 = load i32, i32* %16, align 4
  %453 = icmp slt i32 %452, 0
  br i1 %453, label %454, label %467

454:                                              ; preds = %451
  br i1 true, label %455, label %456

455:                                              ; preds = %454
  br i1 false, label %457, label %463

456:                                              ; preds = %454
  br i1 false, label %457, label %463

457:                                              ; preds = %456, %455
  %458 = load i32, i32* %16, align 4
  %459 = icmp eq i32 %458, -1
  br i1 %459, label %460, label %463

460:                                              ; preds = %457
  br i1 true, label %461, label %462

461:                                              ; preds = %460
  br i1 false, label %470, label %475

462:                                              ; preds = %460
  br i1 false, label %470, label %475

463:                                              ; preds = %457, %456, %455
  %464 = load i32, i32* %16, align 4
  %465 = sdiv i32 -32768, %464
  %466 = icmp slt i32 %465, 10
  br i1 %466, label %470, label %475

467:                                              ; preds = %451
  %468 = load i32, i32* %16, align 4
  %469 = icmp slt i32 3276, %468
  br i1 %469, label %470, label %475

470:                                              ; preds = %467, %463, %462, %461, %450, %446, %442, %435, %426, %423
  %471 = load i32, i32* %16, align 4
  %472 = mul i32 %471, 10
  %473 = trunc i32 %472 to i16
  %474 = sext i16 %473 to i32
  store i32 %474, i32* %16, align 4
  br i1 true, label %922, label %913

475:                                              ; preds = %467, %463, %462, %461, %450, %446, %442, %439, %435, %426, %423
  %476 = load i32, i32* %16, align 4
  %477 = mul i32 %476, 10
  %478 = trunc i32 %477 to i16
  %479 = sext i16 %478 to i32
  store i32 %479, i32* %16, align 4
  br i1 false, label %922, label %913

480:                                              ; preds = %417
  br i1 false, label %481, label %511

481:                                              ; preds = %480
  %482 = load i32, i32* %16, align 4
  %483 = icmp slt i32 %482, 0
  br i1 %483, label %484, label %492

484:                                              ; preds = %481
  br i1 true, label %485, label %488

485:                                              ; preds = %484
  %486 = load i32, i32* %16, align 4
  %487 = icmp slt i32 %486, 6553
  br i1 %487, label %532, label %537

488:                                              ; preds = %484
  %489 = load i32, i32* %16, align 4
  %490 = sub nsw i32 -1, %489
  %491 = icmp sle i32 -6553, %490
  br i1 %491, label %532, label %537

492:                                              ; preds = %481
  br i1 true, label %493, label %494

493:                                              ; preds = %492
  br i1 false, label %495, label %508

494:                                              ; preds = %492
  br i1 false, label %495, label %508

495:                                              ; preds = %494, %493
  br i1 false, label %496, label %508

496:                                              ; preds = %495
  br i1 true, label %497, label %501

497:                                              ; preds = %496
  %498 = load i32, i32* %16, align 4
  %499 = add nsw i32 %498, 0
  %500 = icmp slt i32 0, %499
  br i1 %500, label %532, label %537

501:                                              ; preds = %496
  %502 = load i32, i32* %16, align 4
  %503 = icmp slt i32 0, %502
  br i1 %503, label %504, label %537

504:                                              ; preds = %501
  %505 = load i32, i32* %16, align 4
  %506 = sub nsw i32 %505, 1
  %507 = icmp slt i32 -1, %506
  br i1 %507, label %532, label %537

508:                                              ; preds = %495, %494, %493
  %509 = load i32, i32* %16, align 4
  %510 = icmp slt i32 0, %509
  br i1 %510, label %532, label %537

511:                                              ; preds = %480
  br i1 false, label %512, label %513

512:                                              ; preds = %511
  br i1 false, label %532, label %537

513:                                              ; preds = %511
  %514 = load i32, i32* %16, align 4
  %515 = icmp slt i32 %514, 0
  br i1 %515, label %516, label %529

516:                                              ; preds = %513
  br i1 true, label %517, label %518

517:                                              ; preds = %516
  br i1 false, label %519, label %525

518:                                              ; preds = %516
  br i1 false, label %519, label %525

519:                                              ; preds = %518, %517
  %520 = load i32, i32* %16, align 4
  %521 = icmp eq i32 %520, -1
  br i1 %521, label %522, label %525

522:                                              ; preds = %519
  br i1 true, label %523, label %524

523:                                              ; preds = %522
  br i1 true, label %532, label %537

524:                                              ; preds = %522
  br i1 true, label %532, label %537

525:                                              ; preds = %519, %518, %517
  %526 = load i32, i32* %16, align 4
  %527 = sdiv i32 0, %526
  %528 = icmp slt i32 %527, 10
  br i1 %528, label %532, label %537

529:                                              ; preds = %513
  %530 = load i32, i32* %16, align 4
  %531 = icmp slt i32 6553, %530
  br i1 %531, label %532, label %537

532:                                              ; preds = %529, %525, %524, %523, %512, %508, %504, %497, %488, %485
  %533 = load i32, i32* %16, align 4
  %534 = mul i32 %533, 10
  %535 = trunc i32 %534 to i16
  %536 = zext i16 %535 to i32
  store i32 %536, i32* %16, align 4
  br i1 true, label %922, label %913

537:                                              ; preds = %529, %525, %524, %523, %512, %508, %504, %501, %497, %488, %485
  %538 = load i32, i32* %16, align 4
  %539 = mul i32 %538, 10
  %540 = trunc i32 %539 to i16
  %541 = zext i16 %540 to i32
  store i32 %541, i32* %16, align 4
  br i1 false, label %922, label %913

542:                                              ; preds = %416
  br i1 true, label %543, label %654

543:                                              ; preds = %542
  br i1 true, label %544, label %596

544:                                              ; preds = %543
  br i1 false, label %545, label %572

545:                                              ; preds = %544
  %546 = load i32, i32* %16, align 4
  %547 = icmp slt i32 %546, 0
  br i1 %547, label %548, label %556

548:                                              ; preds = %545
  br i1 true, label %549, label %552

549:                                              ; preds = %548
  %550 = load i32, i32* %16, align 4
  %551 = icmp slt i32 %550, 214748364
  br i1 %551, label %590, label %593

552:                                              ; preds = %548
  %553 = load i32, i32* %16, align 4
  %554 = sub nsw i32 -1, %553
  %555 = icmp sle i32 -214748364, %554
  br i1 %555, label %590, label %593

556:                                              ; preds = %545
  br i1 false, label %557, label %569

557:                                              ; preds = %556
  br i1 true, label %558, label %562

558:                                              ; preds = %557
  %559 = load i32, i32* %16, align 4
  %560 = add nsw i32 %559, -2147483648
  %561 = icmp slt i32 0, %560
  br i1 %561, label %590, label %593

562:                                              ; preds = %557
  %563 = load i32, i32* %16, align 4
  %564 = icmp slt i32 0, %563
  br i1 %564, label %565, label %593

565:                                              ; preds = %562
  %566 = load i32, i32* %16, align 4
  %567 = sub nsw i32 %566, 1
  %568 = icmp slt i32 2147483647, %567
  br i1 %568, label %590, label %593

569:                                              ; preds = %556
  %570 = load i32, i32* %16, align 4
  %571 = icmp slt i32 -214748364, %570
  br i1 %571, label %590, label %593

572:                                              ; preds = %544
  br i1 false, label %573, label %574

573:                                              ; preds = %572
  br i1 false, label %590, label %593

574:                                              ; preds = %572
  %575 = load i32, i32* %16, align 4
  %576 = icmp slt i32 %575, 0
  br i1 %576, label %577, label %587

577:                                              ; preds = %574
  %578 = load i32, i32* %16, align 4
  %579 = icmp eq i32 %578, -1
  br i1 %579, label %580, label %583

580:                                              ; preds = %577
  br i1 true, label %581, label %582

581:                                              ; preds = %580
  br i1 false, label %590, label %593

582:                                              ; preds = %580
  br i1 false, label %590, label %593

583:                                              ; preds = %577
  %584 = load i32, i32* %16, align 4
  %585 = sdiv i32 -2147483648, %584
  %586 = icmp slt i32 %585, 10
  br i1 %586, label %590, label %593

587:                                              ; preds = %574
  %588 = load i32, i32* %16, align 4
  %589 = icmp slt i32 214748364, %588
  br i1 %589, label %590, label %593

590:                                              ; preds = %587, %583, %582, %581, %573, %569, %565, %558, %552, %549
  %591 = load i32, i32* %16, align 4
  %592 = mul i32 %591, 10
  store i32 %592, i32* %16, align 4
  br i1 true, label %922, label %913

593:                                              ; preds = %587, %583, %582, %581, %573, %569, %565, %562, %558, %552, %549
  %594 = load i32, i32* %16, align 4
  %595 = mul i32 %594, 10
  store i32 %595, i32* %16, align 4
  br i1 false, label %922, label %913

596:                                              ; preds = %543
  br i1 false, label %597, label %627

597:                                              ; preds = %596
  %598 = load i32, i32* %16, align 4
  %599 = icmp slt i32 %598, 0
  br i1 %599, label %600, label %608

600:                                              ; preds = %597
  br i1 false, label %601, label %604

601:                                              ; preds = %600
  %602 = load i32, i32* %16, align 4
  %603 = icmp ult i32 %602, 429496729
  br i1 %603, label %648, label %651

604:                                              ; preds = %600
  %605 = load i32, i32* %16, align 4
  %606 = sub nsw i32 -1, %605
  %607 = icmp ule i32 1, %606
  br i1 %607, label %648, label %651

608:                                              ; preds = %597
  br i1 true, label %609, label %610

609:                                              ; preds = %608
  br i1 false, label %611, label %624

610:                                              ; preds = %608
  br i1 false, label %611, label %624

611:                                              ; preds = %610, %609
  br i1 false, label %612, label %624

612:                                              ; preds = %611
  br i1 true, label %613, label %617

613:                                              ; preds = %612
  %614 = load i32, i32* %16, align 4
  %615 = add nsw i32 %614, 0
  %616 = icmp slt i32 0, %615
  br i1 %616, label %648, label %651

617:                                              ; preds = %612
  %618 = load i32, i32* %16, align 4
  %619 = icmp slt i32 0, %618
  br i1 %619, label %620, label %651

620:                                              ; preds = %617
  %621 = load i32, i32* %16, align 4
  %622 = sub nsw i32 %621, 1
  %623 = icmp slt i32 -1, %622
  br i1 %623, label %648, label %651

624:                                              ; preds = %611, %610, %609
  %625 = load i32, i32* %16, align 4
  %626 = icmp slt i32 0, %625
  br i1 %626, label %648, label %651

627:                                              ; preds = %596
  br i1 false, label %628, label %629

628:                                              ; preds = %627
  br i1 false, label %648, label %651

629:                                              ; preds = %627
  %630 = load i32, i32* %16, align 4
  %631 = icmp slt i32 %630, 0
  br i1 %631, label %632, label %645

632:                                              ; preds = %629
  br i1 true, label %633, label %634

633:                                              ; preds = %632
  br i1 false, label %635, label %641

634:                                              ; preds = %632
  br i1 false, label %635, label %641

635:                                              ; preds = %634, %633
  %636 = load i32, i32* %16, align 4
  %637 = icmp eq i32 %636, -1
  br i1 %637, label %638, label %641

638:                                              ; preds = %635
  br i1 true, label %639, label %640

639:                                              ; preds = %638
  br i1 true, label %648, label %651

640:                                              ; preds = %638
  br i1 true, label %648, label %651

641:                                              ; preds = %635, %634, %633
  %642 = load i32, i32* %16, align 4
  %643 = sdiv i32 0, %642
  %644 = icmp slt i32 %643, 10
  br i1 %644, label %648, label %651

645:                                              ; preds = %629
  %646 = load i32, i32* %16, align 4
  %647 = icmp ult i32 429496729, %646
  br i1 %647, label %648, label %651

648:                                              ; preds = %645, %641, %640, %639, %628, %624, %620, %613, %604, %601
  %649 = load i32, i32* %16, align 4
  %650 = mul i32 %649, 10
  store i32 %650, i32* %16, align 4
  br i1 true, label %922, label %913

651:                                              ; preds = %645, %641, %640, %639, %628, %624, %620, %617, %613, %604, %601
  %652 = load i32, i32* %16, align 4
  %653 = mul i32 %652, 10
  store i32 %653, i32* %16, align 4
  br i1 false, label %922, label %913

654:                                              ; preds = %542
  br i1 false, label %655, label %784

655:                                              ; preds = %654
  br i1 true, label %656, label %719

656:                                              ; preds = %655
  br i1 false, label %657, label %689

657:                                              ; preds = %656
  %658 = load i32, i32* %16, align 4
  %659 = icmp slt i32 %658, 0
  br i1 %659, label %660, label %670

660:                                              ; preds = %657
  br i1 true, label %661, label %665

661:                                              ; preds = %660
  %662 = load i32, i32* %16, align 4
  %663 = sext i32 %662 to i64
  %664 = icmp slt i64 %663, 922337203685477580
  br i1 %664, label %709, label %714

665:                                              ; preds = %660
  %666 = load i32, i32* %16, align 4
  %667 = sub nsw i32 -1, %666
  %668 = sext i32 %667 to i64
  %669 = icmp sle i64 -922337203685477580, %668
  br i1 %669, label %709, label %714

670:                                              ; preds = %657
  br i1 false, label %671, label %685

671:                                              ; preds = %670
  br i1 true, label %672, label %677

672:                                              ; preds = %671
  %673 = load i32, i32* %16, align 4
  %674 = sext i32 %673 to i64
  %675 = add nsw i64 %674, -9223372036854775808
  %676 = icmp slt i64 0, %675
  br i1 %676, label %709, label %714

677:                                              ; preds = %671
  %678 = load i32, i32* %16, align 4
  %679 = icmp slt i32 0, %678
  br i1 %679, label %680, label %714

680:                                              ; preds = %677
  %681 = load i32, i32* %16, align 4
  %682 = sub nsw i32 %681, 1
  %683 = sext i32 %682 to i64
  %684 = icmp slt i64 9223372036854775807, %683
  br i1 %684, label %709, label %714

685:                                              ; preds = %670
  %686 = load i32, i32* %16, align 4
  %687 = sext i32 %686 to i64
  %688 = icmp slt i64 -922337203685477580, %687
  br i1 %688, label %709, label %714

689:                                              ; preds = %656
  br i1 false, label %690, label %691

690:                                              ; preds = %689
  br i1 false, label %709, label %714

691:                                              ; preds = %689
  %692 = load i32, i32* %16, align 4
  %693 = icmp slt i32 %692, 0
  br i1 %693, label %694, label %705

694:                                              ; preds = %691
  %695 = load i32, i32* %16, align 4
  %696 = icmp eq i32 %695, -1
  br i1 %696, label %697, label %700

697:                                              ; preds = %694
  br i1 true, label %698, label %699

698:                                              ; preds = %697
  br i1 false, label %709, label %714

699:                                              ; preds = %697
  br i1 false, label %709, label %714

700:                                              ; preds = %694
  %701 = load i32, i32* %16, align 4
  %702 = sext i32 %701 to i64
  %703 = sdiv i64 -9223372036854775808, %702
  %704 = icmp slt i64 %703, 10
  br i1 %704, label %709, label %714

705:                                              ; preds = %691
  %706 = load i32, i32* %16, align 4
  %707 = sext i32 %706 to i64
  %708 = icmp slt i64 922337203685477580, %707
  br i1 %708, label %709, label %714

709:                                              ; preds = %705, %700, %699, %698, %690, %685, %680, %672, %665, %661
  %710 = load i32, i32* %16, align 4
  %711 = sext i32 %710 to i64
  %712 = mul i64 %711, 10
  %713 = trunc i64 %712 to i32
  store i32 %713, i32* %16, align 4
  br i1 true, label %922, label %913

714:                                              ; preds = %705, %700, %699, %698, %690, %685, %680, %677, %672, %665, %661
  %715 = load i32, i32* %16, align 4
  %716 = sext i32 %715 to i64
  %717 = mul i64 %716, 10
  %718 = trunc i64 %717 to i32
  store i32 %718, i32* %16, align 4
  br i1 false, label %922, label %913

719:                                              ; preds = %655
  br i1 false, label %720, label %752

720:                                              ; preds = %719
  %721 = load i32, i32* %16, align 4
  %722 = icmp slt i32 %721, 0
  br i1 %722, label %723, label %733

723:                                              ; preds = %720
  br i1 false, label %724, label %728

724:                                              ; preds = %723
  %725 = load i32, i32* %16, align 4
  %726 = sext i32 %725 to i64
  %727 = icmp ult i64 %726, 1844674407370955161
  br i1 %727, label %774, label %779

728:                                              ; preds = %723
  %729 = load i32, i32* %16, align 4
  %730 = sub nsw i32 -1, %729
  %731 = sext i32 %730 to i64
  %732 = icmp ule i64 1, %731
  br i1 %732, label %774, label %779

733:                                              ; preds = %720
  br i1 true, label %734, label %735

734:                                              ; preds = %733
  br i1 false, label %736, label %749

735:                                              ; preds = %733
  br i1 false, label %736, label %749

736:                                              ; preds = %735, %734
  br i1 false, label %737, label %749

737:                                              ; preds = %736
  br i1 true, label %738, label %742

738:                                              ; preds = %737
  %739 = load i32, i32* %16, align 4
  %740 = add nsw i32 %739, 0
  %741 = icmp slt i32 0, %740
  br i1 %741, label %774, label %779

742:                                              ; preds = %737
  %743 = load i32, i32* %16, align 4
  %744 = icmp slt i32 0, %743
  br i1 %744, label %745, label %779

745:                                              ; preds = %742
  %746 = load i32, i32* %16, align 4
  %747 = sub nsw i32 %746, 1
  %748 = icmp slt i32 -1, %747
  br i1 %748, label %774, label %779

749:                                              ; preds = %736, %735, %734
  %750 = load i32, i32* %16, align 4
  %751 = icmp slt i32 0, %750
  br i1 %751, label %774, label %779

752:                                              ; preds = %719
  br i1 false, label %753, label %754

753:                                              ; preds = %752
  br i1 false, label %774, label %779

754:                                              ; preds = %752
  %755 = load i32, i32* %16, align 4
  %756 = icmp slt i32 %755, 0
  br i1 %756, label %757, label %770

757:                                              ; preds = %754
  br i1 true, label %758, label %759

758:                                              ; preds = %757
  br i1 false, label %760, label %766

759:                                              ; preds = %757
  br i1 false, label %760, label %766

760:                                              ; preds = %759, %758
  %761 = load i32, i32* %16, align 4
  %762 = icmp eq i32 %761, -1
  br i1 %762, label %763, label %766

763:                                              ; preds = %760
  br i1 true, label %764, label %765

764:                                              ; preds = %763
  br i1 true, label %774, label %779

765:                                              ; preds = %763
  br i1 true, label %774, label %779

766:                                              ; preds = %760, %759, %758
  %767 = load i32, i32* %16, align 4
  %768 = sdiv i32 0, %767
  %769 = icmp slt i32 %768, 10
  br i1 %769, label %774, label %779

770:                                              ; preds = %754
  %771 = load i32, i32* %16, align 4
  %772 = sext i32 %771 to i64
  %773 = icmp ult i64 1844674407370955161, %772
  br i1 %773, label %774, label %779

774:                                              ; preds = %770, %766, %765, %764, %753, %749, %745, %738, %728, %724
  %775 = load i32, i32* %16, align 4
  %776 = sext i32 %775 to i64
  %777 = mul i64 %776, 10
  %778 = trunc i64 %777 to i32
  store i32 %778, i32* %16, align 4
  br i1 true, label %922, label %913

779:                                              ; preds = %770, %766, %765, %764, %753, %749, %745, %742, %738, %728, %724
  %780 = load i32, i32* %16, align 4
  %781 = sext i32 %780 to i64
  %782 = mul i64 %781, 10
  %783 = trunc i64 %782 to i32
  store i32 %783, i32* %16, align 4
  br i1 false, label %922, label %913

784:                                              ; preds = %654
  br i1 true, label %785, label %848

785:                                              ; preds = %784
  br i1 false, label %786, label %818

786:                                              ; preds = %785
  %787 = load i32, i32* %16, align 4
  %788 = icmp slt i32 %787, 0
  br i1 %788, label %789, label %799

789:                                              ; preds = %786
  br i1 true, label %790, label %794

790:                                              ; preds = %789
  %791 = load i32, i32* %16, align 4
  %792 = sext i32 %791 to i64
  %793 = icmp slt i64 %792, 922337203685477580
  br i1 %793, label %838, label %843

794:                                              ; preds = %789
  %795 = load i32, i32* %16, align 4
  %796 = sub nsw i32 -1, %795
  %797 = sext i32 %796 to i64
  %798 = icmp sle i64 -922337203685477580, %797
  br i1 %798, label %838, label %843

799:                                              ; preds = %786
  br i1 false, label %800, label %814

800:                                              ; preds = %799
  br i1 true, label %801, label %806

801:                                              ; preds = %800
  %802 = load i32, i32* %16, align 4
  %803 = sext i32 %802 to i64
  %804 = add nsw i64 %803, -9223372036854775808
  %805 = icmp slt i64 0, %804
  br i1 %805, label %838, label %843

806:                                              ; preds = %800
  %807 = load i32, i32* %16, align 4
  %808 = icmp slt i32 0, %807
  br i1 %808, label %809, label %843

809:                                              ; preds = %806
  %810 = load i32, i32* %16, align 4
  %811 = sub nsw i32 %810, 1
  %812 = sext i32 %811 to i64
  %813 = icmp slt i64 9223372036854775807, %812
  br i1 %813, label %838, label %843

814:                                              ; preds = %799
  %815 = load i32, i32* %16, align 4
  %816 = sext i32 %815 to i64
  %817 = icmp slt i64 -922337203685477580, %816
  br i1 %817, label %838, label %843

818:                                              ; preds = %785
  br i1 false, label %819, label %820

819:                                              ; preds = %818
  br i1 false, label %838, label %843

820:                                              ; preds = %818
  %821 = load i32, i32* %16, align 4
  %822 = icmp slt i32 %821, 0
  br i1 %822, label %823, label %834

823:                                              ; preds = %820
  %824 = load i32, i32* %16, align 4
  %825 = icmp eq i32 %824, -1
  br i1 %825, label %826, label %829

826:                                              ; preds = %823
  br i1 true, label %827, label %828

827:                                              ; preds = %826
  br i1 false, label %838, label %843

828:                                              ; preds = %826
  br i1 false, label %838, label %843

829:                                              ; preds = %823
  %830 = load i32, i32* %16, align 4
  %831 = sext i32 %830 to i64
  %832 = sdiv i64 -9223372036854775808, %831
  %833 = icmp slt i64 %832, 10
  br i1 %833, label %838, label %843

834:                                              ; preds = %820
  %835 = load i32, i32* %16, align 4
  %836 = sext i32 %835 to i64
  %837 = icmp slt i64 922337203685477580, %836
  br i1 %837, label %838, label %843

838:                                              ; preds = %834, %829, %828, %827, %819, %814, %809, %801, %794, %790
  %839 = load i32, i32* %16, align 4
  %840 = sext i32 %839 to i64
  %841 = mul i64 %840, 10
  %842 = trunc i64 %841 to i32
  store i32 %842, i32* %16, align 4
  br i1 true, label %922, label %913

843:                                              ; preds = %834, %829, %828, %827, %819, %814, %809, %806, %801, %794, %790
  %844 = load i32, i32* %16, align 4
  %845 = sext i32 %844 to i64
  %846 = mul i64 %845, 10
  %847 = trunc i64 %846 to i32
  store i32 %847, i32* %16, align 4
  br i1 false, label %922, label %913

848:                                              ; preds = %784
  br i1 false, label %849, label %881

849:                                              ; preds = %848
  %850 = load i32, i32* %16, align 4
  %851 = icmp slt i32 %850, 0
  br i1 %851, label %852, label %862

852:                                              ; preds = %849
  br i1 false, label %853, label %857

853:                                              ; preds = %852
  %854 = load i32, i32* %16, align 4
  %855 = sext i32 %854 to i64
  %856 = icmp ult i64 %855, 1844674407370955161
  br i1 %856, label %903, label %908

857:                                              ; preds = %852
  %858 = load i32, i32* %16, align 4
  %859 = sub nsw i32 -1, %858
  %860 = sext i32 %859 to i64
  %861 = icmp ule i64 1, %860
  br i1 %861, label %903, label %908

862:                                              ; preds = %849
  br i1 true, label %863, label %864

863:                                              ; preds = %862
  br i1 false, label %865, label %878

864:                                              ; preds = %862
  br i1 false, label %865, label %878

865:                                              ; preds = %864, %863
  br i1 false, label %866, label %878

866:                                              ; preds = %865
  br i1 true, label %867, label %871

867:                                              ; preds = %866
  %868 = load i32, i32* %16, align 4
  %869 = add nsw i32 %868, 0
  %870 = icmp slt i32 0, %869
  br i1 %870, label %903, label %908

871:                                              ; preds = %866
  %872 = load i32, i32* %16, align 4
  %873 = icmp slt i32 0, %872
  br i1 %873, label %874, label %908

874:                                              ; preds = %871
  %875 = load i32, i32* %16, align 4
  %876 = sub nsw i32 %875, 1
  %877 = icmp slt i32 -1, %876
  br i1 %877, label %903, label %908

878:                                              ; preds = %865, %864, %863
  %879 = load i32, i32* %16, align 4
  %880 = icmp slt i32 0, %879
  br i1 %880, label %903, label %908

881:                                              ; preds = %848
  br i1 false, label %882, label %883

882:                                              ; preds = %881
  br i1 false, label %903, label %908

883:                                              ; preds = %881
  %884 = load i32, i32* %16, align 4
  %885 = icmp slt i32 %884, 0
  br i1 %885, label %886, label %899

886:                                              ; preds = %883
  br i1 true, label %887, label %888

887:                                              ; preds = %886
  br i1 false, label %889, label %895

888:                                              ; preds = %886
  br i1 false, label %889, label %895

889:                                              ; preds = %888, %887
  %890 = load i32, i32* %16, align 4
  %891 = icmp eq i32 %890, -1
  br i1 %891, label %892, label %895

892:                                              ; preds = %889
  br i1 true, label %893, label %894

893:                                              ; preds = %892
  br i1 true, label %903, label %908

894:                                              ; preds = %892
  br i1 true, label %903, label %908

895:                                              ; preds = %889, %888, %887
  %896 = load i32, i32* %16, align 4
  %897 = sdiv i32 0, %896
  %898 = icmp slt i32 %897, 10
  br i1 %898, label %903, label %908

899:                                              ; preds = %883
  %900 = load i32, i32* %16, align 4
  %901 = sext i32 %900 to i64
  %902 = icmp ult i64 1844674407370955161, %901
  br i1 %902, label %903, label %908

903:                                              ; preds = %899, %895, %894, %893, %882, %878, %874, %867, %857, %853
  %904 = load i32, i32* %16, align 4
  %905 = sext i32 %904 to i64
  %906 = mul i64 %905, 10
  %907 = trunc i64 %906 to i32
  store i32 %907, i32* %16, align 4
  br i1 true, label %922, label %913

908:                                              ; preds = %899, %895, %894, %893, %882, %878, %874, %871, %867, %857, %853
  %909 = load i32, i32* %16, align 4
  %910 = sext i32 %909 to i64
  %911 = mul i64 %910, 10
  %912 = trunc i64 %911 to i32
  store i32 %912, i32* %16, align 4
  br i1 false, label %922, label %913

913:                                              ; preds = %908, %903, %843, %838, %779, %774, %714, %709, %651, %648, %593, %590, %537, %532, %475, %470, %411, %406, %349, %344
  %914 = load i32, i32* %16, align 4
  %915 = load i8*, i8** %25, align 8
  %916 = load i8, i8* %915, align 1
  %917 = sext i8 %916 to i32
  %918 = sub nsw i32 %917, 48
  %919 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %914, i32 %918)
  %920 = extractvalue { i32, i1 } %919, 1
  %921 = extractvalue { i32, i1 } %919, 0
  store i32 %921, i32* %16, align 4
  br i1 %920, label %922, label %923

922:                                              ; preds = %913, %908, %903, %843, %838, %779, %774, %714, %709, %651, %648, %593, %590, %537, %532, %475, %470, %411, %406, %349, %344
  store i32 2147483647, i32* %16, align 4
  br label %923

923:                                              ; preds = %922, %913
  %924 = load i8*, i8** %25, align 8
  %925 = getelementptr inbounds i8, i8* %924, i32 1
  store i8* %925, i8** %25, align 8
  br label %926

926:                                              ; preds = %923
  %927 = load i8*, i8** %25, align 8
  %928 = load i8, i8* %927, align 1
  %929 = sext i8 %928 to i32
  %930 = sub i32 %929, 48
  %931 = icmp ule i32 %930, 9
  br i1 %931, label %290, label %932

932:                                              ; preds = %926
  br label %933

933:                                              ; preds = %932, %283
  %934 = load i8*, i8** %25, align 8
  %935 = load i8, i8* %934, align 1
  %936 = sext i8 %935 to i32
  switch i32 %936, label %942 [
    i32 69, label %937
    i32 79, label %937
  ]

937:                                              ; preds = %933, %933
  %938 = load i8*, i8** %25, align 8
  %939 = getelementptr inbounds i8, i8* %938, i32 1
  store i8* %939, i8** %25, align 8
  %940 = load i8, i8* %938, align 1
  %941 = sext i8 %940 to i32
  store i32 %941, i32* %27, align 4
  br label %943

942:                                              ; preds = %933
  store i32 0, i32* %27, align 4
  br label %943

943:                                              ; preds = %942, %937
  %944 = load i8*, i8** %25, align 8
  %945 = load i8, i8* %944, align 1
  %946 = sext i8 %945 to i32
  store i32 %946, i32* %41, align 4
  %947 = load i32, i32* %41, align 4
  switch i32 %947, label %2742 [
    i32 37, label %948
    i32 97, label %1036
    i32 65, label %1045
    i32 98, label %1054
    i32 104, label %1054
    i32 66, label %1063
    i32 99, label %1072
    i32 67, label %1311
    i32 120, label %1349
    i32 68, label %1354
    i32 100, label %1359
    i32 101, label %1369
    i32 70, label %1724
    i32 72, label %1743
    i32 73, label %1753
    i32 107, label %1761
    i32 108, label %1771
    i32 106, label %1779
    i32 77, label %1795
    i32 109, label %1805
    i32 78, label %1822
    i32 110, label %2059
    i32 80, label %2140
    i32 112, label %2141
    i32 113, label %2146
    i32 82, label %2155
    i32 114, label %2156
    i32 83, label %2157
    i32 115, label %2167
    i32 88, label %2201
    i32 84, label %2206
    i32 116, label %2207
    i32 117, label %2288
    i32 85, label %2298
    i32 86, label %2314
    i32 103, label %2314
    i32 71, label %2314
    i32 87, label %2456
    i32 119, label %2475
    i32 89, label %2485
    i32 121, label %2505
    i32 90, label %2533
    i32 58, label %2640
    i32 122, label %2664
    i32 0, label %2739
  ]

948:                                              ; preds = %943
  %949 = load i32, i32* %27, align 4
  %950 = icmp ne i32 %949, 0
  br i1 %950, label %951, label %952

951:                                              ; preds = %948
  br label %2743

952:                                              ; preds = %948
  br label %953

953:                                              ; preds = %952
  store i64 1, i64* %49, align 8
  %954 = load i32, i32* %26, align 4
  %955 = icmp eq i32 %954, 45
  br i1 %955, label %959, label %956

956:                                              ; preds = %953
  %957 = load i32, i32* %16, align 4
  %958 = icmp slt i32 %957, 0
  br i1 %958, label %959, label %960

959:                                              ; preds = %956, %953
  br label %962

960:                                              ; preds = %956
  %961 = load i32, i32* %16, align 4
  br label %962

962:                                              ; preds = %960, %959
  %963 = phi i32 [ 0, %959 ], [ %961, %960 ]
  %964 = sext i32 %963 to i64
  store i64 %964, i64* %50, align 8
  %965 = load i64, i64* %49, align 8
  %966 = load i64, i64* %50, align 8
  %967 = icmp ult i64 %965, %966
  br i1 %967, label %968, label %970

968:                                              ; preds = %962
  %969 = load i64, i64* %50, align 8
  br label %972

970:                                              ; preds = %962
  %971 = load i64, i64* %49, align 8
  br label %972

972:                                              ; preds = %970, %968
  %973 = phi i64 [ %969, %968 ], [ %971, %970 ]
  store i64 %973, i64* %51, align 8
  %974 = load i64, i64* %51, align 8
  %975 = load i64, i64* %20, align 8
  %976 = load i64, i64* %23, align 8
  %977 = sub i64 %975, %976
  %978 = icmp uge i64 %974, %977
  br i1 %978, label %979, label %980

979:                                              ; preds = %972
  store i64 0, i64* %10, align 8
  br label %2878

980:                                              ; preds = %972
  %981 = load %struct._IO_FILE*, %struct._IO_FILE** %24, align 8
  %982 = icmp ne %struct._IO_FILE* %981, null
  br i1 %982, label %983, label %1031

983:                                              ; preds = %980
  %984 = load i64, i64* %49, align 8
  %985 = load i64, i64* %50, align 8
  %986 = icmp ult i64 %984, %985
  br i1 %986, label %987, label %1025

987:                                              ; preds = %983
  %988 = load i64, i64* %50, align 8
  %989 = load i64, i64* %49, align 8
  %990 = sub i64 %988, %989
  store i64 %990, i64* %52, align 8
  %991 = load i32, i32* %26, align 4
  %992 = icmp eq i32 %991, 48
  br i1 %992, label %996, label %993

993:                                              ; preds = %987
  %994 = load i32, i32* %26, align 4
  %995 = icmp eq i32 %994, 43
  br i1 %995, label %996, label %1010

996:                                              ; preds = %993, %987
  br label %997

997:                                              ; preds = %996
  store i64 0, i64* %53, align 8
  br label %998

998:                                              ; preds = %1005, %997
  %999 = load i64, i64* %53, align 8
  %1000 = load i64, i64* %52, align 8
  %1001 = icmp ult i64 %999, %1000
  br i1 %1001, label %1002, label %1008

1002:                                             ; preds = %998
  %1003 = load %struct._IO_FILE*, %struct._IO_FILE** %24, align 8
  %1004 = call i32 @fputc(i32 48, %struct._IO_FILE* %1003)
  br label %1005

1005:                                             ; preds = %1002
  %1006 = load i64, i64* %53, align 8
  %1007 = add i64 %1006, 1
  store i64 %1007, i64* %53, align 8
  br label %998

1008:                                             ; preds = %998
  br label %1009

1009:                                             ; preds = %1008
  br label %1024

1010:                                             ; preds = %993
  br label %1011

1011:                                             ; preds = %1010
  store i64 0, i64* %54, align 8
  br label %1012

1012:                                             ; preds = %1019, %1011
  %1013 = load i64, i64* %54, align 8
  %1014 = load i64, i64* %52, align 8
  %1015 = icmp ult i64 %1013, %1014
  br i1 %1015, label %1016, label %1022

1016:                                             ; preds = %1012
  %1017 = load %struct._IO_FILE*, %struct._IO_FILE** %24, align 8
  %1018 = call i32 @fputc(i32 32, %struct._IO_FILE* %1017)
  br label %1019

1019:                                             ; preds = %1016
  %1020 = load i64, i64* %54, align 8
  %1021 = add i64 %1020, 1
  store i64 %1021, i64* %54, align 8
  br label %1012

1022:                                             ; preds = %1012
  br label %1023

1023:                                             ; preds = %1022
  br label %1024

1024:                                             ; preds = %1023, %1009
  br label %1025

1025:                                             ; preds = %1024, %983
  %1026 = load i8*, i8** %25, align 8
  %1027 = load i8, i8* %1026, align 1
  %1028 = sext i8 %1027 to i32
  %1029 = load %struct._IO_FILE*, %struct._IO_FILE** %24, align 8
  %1030 = call i32 @fputc(i32 %1028, %struct._IO_FILE* %1029)
  br label %1031

1031:                                             ; preds = %1025, %980
  %1032 = load i64, i64* %51, align 8
  %1033 = load i64, i64* %23, align 8
  %1034 = add i64 %1033, %1032
  store i64 %1034, i64* %23, align 8
  br label %1035

1035:                                             ; preds = %1031
  br label %2872

1036:                                             ; preds = %943
  %1037 = load i32, i32* %27, align 4
  %1038 = icmp ne i32 %1037, 0
  br i1 %1038, label %1039, label %1040

1039:                                             ; preds = %1036
  br label %2743

1040:                                             ; preds = %1036
  %1041 = load i8, i8* %40, align 1
  %1042 = trunc i8 %1041 to i1
  br i1 %1042, label %1043, label %1044

1043:                                             ; preds = %1040
  store i8 1, i8* %38, align 1
  store i8 0, i8* %37, align 1
  br label %1044

1044:                                             ; preds = %1043, %1040
  br label %1179

1045:                                             ; preds = %943
  %1046 = load i32, i32* %27, align 4
  %1047 = icmp ne i32 %1046, 0
  br i1 %1047, label %1048, label %1049

1048:                                             ; preds = %1045
  br label %2743

1049:                                             ; preds = %1045
  %1050 = load i8, i8* %40, align 1
  %1051 = trunc i8 %1050 to i1
  br i1 %1051, label %1052, label %1053

1052:                                             ; preds = %1049
  store i8 1, i8* %38, align 1
  store i8 0, i8* %37, align 1
  br label %1053

1053:                                             ; preds = %1052, %1049
  br label %1179

1054:                                             ; preds = %943, %943
  %1055 = load i8, i8* %40, align 1
  %1056 = trunc i8 %1055 to i1
  br i1 %1056, label %1057, label %1058

1057:                                             ; preds = %1054
  store i8 1, i8* %38, align 1
  store i8 0, i8* %37, align 1
  br label %1058

1058:                                             ; preds = %1057, %1054
  %1059 = load i32, i32* %27, align 4
  %1060 = icmp eq i32 %1059, 69
  br i1 %1060, label %1061, label %1062

1061:                                             ; preds = %1058
  br label %2743

1062:                                             ; preds = %1058
  br label %1179

1063:                                             ; preds = %943
  %1064 = load i32, i32* %27, align 4
  %1065 = icmp eq i32 %1064, 69
  br i1 %1065, label %1066, label %1067

1066:                                             ; preds = %1063
  br label %2743

1067:                                             ; preds = %1063
  %1068 = load i8, i8* %40, align 1
  %1069 = trunc i8 %1068 to i1
  br i1 %1069, label %1070, label %1071

1070:                                             ; preds = %1067
  store i8 1, i8* %38, align 1
  store i8 0, i8* %37, align 1
  br label %1071

1071:                                             ; preds = %1070, %1067
  br label %1179

1072:                                             ; preds = %943
  %1073 = load i32, i32* %27, align 4
  %1074 = icmp eq i32 %1073, 79
  br i1 %1074, label %1075, label %1076

1075:                                             ; preds = %1072
  br label %2743

1076:                                             ; preds = %1072
  br label %1179

1077:                                             ; preds = %2206, %2155, %1358
  store i32 -1, i32* %42, align 4
  br label %1078

1078:                                             ; preds = %1742, %1077
  %1079 = load i8*, i8** %34, align 8
  %1080 = load %struct.tm*, %struct.tm** %13, align 8
  %1081 = load i8, i8* %38, align 1
  %1082 = trunc i8 %1081 to i1
  %1083 = load i32, i32* %26, align 4
  %1084 = load i32, i32* %42, align 4
  %1085 = load i8*, i8** %17, align 8
  %1086 = load %struct.tm_zone*, %struct.tm_zone** %18, align 8
  %1087 = load i32, i32* %19, align 4
  %1088 = call i64 @__strftime_internal(%struct._IO_FILE* null, i8* %1079, %struct.tm* %1080, i1 zeroext %1082, i32 %1083, i32 %1084, i8* %1085, %struct.tm_zone* %1086, i32 %1087)
  store i64 %1088, i64* %55, align 8
  br label %1089

1089:                                             ; preds = %1078
  %1090 = load i64, i64* %55, align 8
  store i64 %1090, i64* %56, align 8
  %1091 = load i32, i32* %26, align 4
  %1092 = icmp eq i32 %1091, 45
  br i1 %1092, label %1096, label %1093

1093:                                             ; preds = %1089
  %1094 = load i32, i32* %16, align 4
  %1095 = icmp slt i32 %1094, 0
  br i1 %1095, label %1096, label %1097

1096:                                             ; preds = %1093, %1089
  br label %1099

1097:                                             ; preds = %1093
  %1098 = load i32, i32* %16, align 4
  br label %1099

1099:                                             ; preds = %1097, %1096
  %1100 = phi i32 [ 0, %1096 ], [ %1098, %1097 ]
  %1101 = sext i32 %1100 to i64
  store i64 %1101, i64* %57, align 8
  %1102 = load i64, i64* %56, align 8
  %1103 = load i64, i64* %57, align 8
  %1104 = icmp ult i64 %1102, %1103
  br i1 %1104, label %1105, label %1107

1105:                                             ; preds = %1099
  %1106 = load i64, i64* %57, align 8
  br label %1109

1107:                                             ; preds = %1099
  %1108 = load i64, i64* %56, align 8
  br label %1109

1109:                                             ; preds = %1107, %1105
  %1110 = phi i64 [ %1106, %1105 ], [ %1108, %1107 ]
  store i64 %1110, i64* %58, align 8
  %1111 = load i64, i64* %58, align 8
  %1112 = load i64, i64* %20, align 8
  %1113 = load i64, i64* %23, align 8
  %1114 = sub i64 %1112, %1113
  %1115 = icmp uge i64 %1111, %1114
  br i1 %1115, label %1116, label %1117

1116:                                             ; preds = %1109
  store i64 0, i64* %10, align 8
  br label %2878

1117:                                             ; preds = %1109
  %1118 = load %struct._IO_FILE*, %struct._IO_FILE** %24, align 8
  %1119 = icmp ne %struct._IO_FILE* %1118, null
  br i1 %1119, label %1120, label %1174

1120:                                             ; preds = %1117
  %1121 = load i64, i64* %56, align 8
  %1122 = load i64, i64* %57, align 8
  %1123 = icmp ult i64 %1121, %1122
  br i1 %1123, label %1124, label %1162

1124:                                             ; preds = %1120
  %1125 = load i64, i64* %57, align 8
  %1126 = load i64, i64* %56, align 8
  %1127 = sub i64 %1125, %1126
  store i64 %1127, i64* %59, align 8
  %1128 = load i32, i32* %26, align 4
  %1129 = icmp eq i32 %1128, 48
  br i1 %1129, label %1133, label %1130

1130:                                             ; preds = %1124
  %1131 = load i32, i32* %26, align 4
  %1132 = icmp eq i32 %1131, 43
  br i1 %1132, label %1133, label %1147

1133:                                             ; preds = %1130, %1124
  br label %1134

1134:                                             ; preds = %1133
  store i64 0, i64* %60, align 8
  br label %1135

1135:                                             ; preds = %1142, %1134
  %1136 = load i64, i64* %60, align 8
  %1137 = load i64, i64* %59, align 8
  %1138 = icmp ult i64 %1136, %1137
  br i1 %1138, label %1139, label %1145

1139:                                             ; preds = %1135
  %1140 = load %struct._IO_FILE*, %struct._IO_FILE** %24, align 8
  %1141 = call i32 @fputc(i32 48, %struct._IO_FILE* %1140)
  br label %1142

1142:                                             ; preds = %1139
  %1143 = load i64, i64* %60, align 8
  %1144 = add i64 %1143, 1
  store i64 %1144, i64* %60, align 8
  br label %1135

1145:                                             ; preds = %1135
  br label %1146

1146:                                             ; preds = %1145
  br label %1161

1147:                                             ; preds = %1130
  br label %1148

1148:                                             ; preds = %1147
  store i64 0, i64* %61, align 8
  br label %1149

1149:                                             ; preds = %1156, %1148
  %1150 = load i64, i64* %61, align 8
  %1151 = load i64, i64* %59, align 8
  %1152 = icmp ult i64 %1150, %1151
  br i1 %1152, label %1153, label %1159

1153:                                             ; preds = %1149
  %1154 = load %struct._IO_FILE*, %struct._IO_FILE** %24, align 8
  %1155 = call i32 @fputc(i32 32, %struct._IO_FILE* %1154)
  br label %1156

1156:                                             ; preds = %1153
  %1157 = load i64, i64* %61, align 8
  %1158 = add i64 %1157, 1
  store i64 %1158, i64* %61, align 8
  br label %1149

1159:                                             ; preds = %1149
  br label %1160

1160:                                             ; preds = %1159
  br label %1161

1161:                                             ; preds = %1160, %1146
  br label %1162

1162:                                             ; preds = %1161, %1120
  %1163 = load %struct._IO_FILE*, %struct._IO_FILE** %24, align 8
  %1164 = load i8*, i8** %34, align 8
  %1165 = load %struct.tm*, %struct.tm** %13, align 8
  %1166 = load i8, i8* %38, align 1
  %1167 = trunc i8 %1166 to i1
  %1168 = load i32, i32* %26, align 4
  %1169 = load i32, i32* %42, align 4
  %1170 = load i8*, i8** %17, align 8
  %1171 = load %struct.tm_zone*, %struct.tm_zone** %18, align 8
  %1172 = load i32, i32* %19, align 4
  %1173 = call i64 @__strftime_internal(%struct._IO_FILE* %1163, i8* %1164, %struct.tm* %1165, i1 zeroext %1167, i32 %1168, i32 %1169, i8* %1170, %struct.tm_zone* %1171, i32 %1172)
  br label %1174

1174:                                             ; preds = %1162, %1117
  %1175 = load i64, i64* %58, align 8
  %1176 = load i64, i64* %23, align 8
  %1177 = add i64 %1176, %1175
  store i64 %1177, i64* %23, align 8
  br label %1178

1178:                                             ; preds = %1174
  br label %2872

1179:                                             ; preds = %2508, %2488, %2205, %2156, %2145, %1422, %1353, %1314, %1076, %1071, %1062, %1053, %1044
  %1180 = getelementptr inbounds [5 x i8], [5 x i8]* %62, i64 0, i64 0
  store i8* %1180, i8** %63, align 8
  %1181 = load i8*, i8** %63, align 8
  %1182 = getelementptr inbounds i8, i8* %1181, i32 1
  store i8* %1182, i8** %63, align 8
  store i8 32, i8* %1181, align 1
  %1183 = load i8*, i8** %63, align 8
  %1184 = getelementptr inbounds i8, i8* %1183, i32 1
  store i8* %1184, i8** %63, align 8
  store i8 37, i8* %1183, align 1
  %1185 = load i32, i32* %27, align 4
  %1186 = icmp ne i32 %1185, 0
  br i1 %1186, label %1187, label %1192

1187:                                             ; preds = %1179
  %1188 = load i32, i32* %27, align 4
  %1189 = trunc i32 %1188 to i8
  %1190 = load i8*, i8** %63, align 8
  %1191 = getelementptr inbounds i8, i8* %1190, i32 1
  store i8* %1191, i8** %63, align 8
  store i8 %1189, i8* %1190, align 1
  br label %1192

1192:                                             ; preds = %1187, %1179
  %1193 = load i32, i32* %41, align 4
  %1194 = trunc i32 %1193 to i8
  %1195 = load i8*, i8** %63, align 8
  %1196 = getelementptr inbounds i8, i8* %1195, i32 1
  store i8* %1196, i8** %63, align 8
  store i8 %1194, i8* %1195, align 1
  %1197 = load i8*, i8** %63, align 8
  store i8 0, i8* %1197, align 1
  %1198 = getelementptr inbounds [1024 x i8], [1024 x i8]* %64, i64 0, i64 0
  %1199 = getelementptr inbounds [5 x i8], [5 x i8]* %62, i64 0, i64 0
  %1200 = load %struct.tm*, %struct.tm** %13, align 8
  %1201 = call i64 @strftime(i8* %1198, i64 1024, i8* %1199, %struct.tm* %1200) #11
  store i64 %1201, i64* %65, align 8
  %1202 = load i64, i64* %65, align 8
  %1203 = icmp ne i64 %1202, 0
  br i1 %1203, label %1204, label %1310

1204:                                             ; preds = %1192
  br label %1205

1205:                                             ; preds = %1204
  %1206 = load i64, i64* %65, align 8
  %1207 = sub i64 %1206, 1
  store i64 %1207, i64* %66, align 8
  %1208 = load i32, i32* %26, align 4
  %1209 = icmp eq i32 %1208, 45
  br i1 %1209, label %1213, label %1210

1210:                                             ; preds = %1205
  %1211 = load i32, i32* %16, align 4
  %1212 = icmp slt i32 %1211, 0
  br i1 %1212, label %1213, label %1214

1213:                                             ; preds = %1210, %1205
  br label %1216

1214:                                             ; preds = %1210
  %1215 = load i32, i32* %16, align 4
  br label %1216

1216:                                             ; preds = %1214, %1213
  %1217 = phi i32 [ 0, %1213 ], [ %1215, %1214 ]
  %1218 = sext i32 %1217 to i64
  store i64 %1218, i64* %67, align 8
  %1219 = load i64, i64* %66, align 8
  %1220 = load i64, i64* %67, align 8
  %1221 = icmp ult i64 %1219, %1220
  br i1 %1221, label %1222, label %1224

1222:                                             ; preds = %1216
  %1223 = load i64, i64* %67, align 8
  br label %1226

1224:                                             ; preds = %1216
  %1225 = load i64, i64* %66, align 8
  br label %1226

1226:                                             ; preds = %1224, %1222
  %1227 = phi i64 [ %1223, %1222 ], [ %1225, %1224 ]
  store i64 %1227, i64* %68, align 8
  %1228 = load i64, i64* %68, align 8
  %1229 = load i64, i64* %20, align 8
  %1230 = load i64, i64* %23, align 8
  %1231 = sub i64 %1229, %1230
  %1232 = icmp uge i64 %1228, %1231
  br i1 %1232, label %1233, label %1234

1233:                                             ; preds = %1226
  store i64 0, i64* %10, align 8
  br label %2878

1234:                                             ; preds = %1226
  %1235 = load %struct._IO_FILE*, %struct._IO_FILE** %24, align 8
  %1236 = icmp ne %struct._IO_FILE* %1235, null
  br i1 %1236, label %1237, label %1305

1237:                                             ; preds = %1234
  %1238 = load i64, i64* %66, align 8
  %1239 = load i64, i64* %67, align 8
  %1240 = icmp ult i64 %1238, %1239
  br i1 %1240, label %1241, label %1279

1241:                                             ; preds = %1237
  %1242 = load i64, i64* %67, align 8
  %1243 = load i64, i64* %66, align 8
  %1244 = sub i64 %1242, %1243
  store i64 %1244, i64* %69, align 8
  %1245 = load i32, i32* %26, align 4
  %1246 = icmp eq i32 %1245, 48
  br i1 %1246, label %1250, label %1247

1247:                                             ; preds = %1241
  %1248 = load i32, i32* %26, align 4
  %1249 = icmp eq i32 %1248, 43
  br i1 %1249, label %1250, label %1264

1250:                                             ; preds = %1247, %1241
  br label %1251

1251:                                             ; preds = %1250
  store i64 0, i64* %70, align 8
  br label %1252

1252:                                             ; preds = %1259, %1251
  %1253 = load i64, i64* %70, align 8
  %1254 = load i64, i64* %69, align 8
  %1255 = icmp ult i64 %1253, %1254
  br i1 %1255, label %1256, label %1262

1256:                                             ; preds = %1252
  %1257 = load %struct._IO_FILE*, %struct._IO_FILE** %24, align 8
  %1258 = call i32 @fputc(i32 48, %struct._IO_FILE* %1257)
  br label %1259

1259:                                             ; preds = %1256
  %1260 = load i64, i64* %70, align 8
  %1261 = add i64 %1260, 1
  store i64 %1261, i64* %70, align 8
  br label %1252

1262:                                             ; preds = %1252
  br label %1263

1263:                                             ; preds = %1262
  br label %1278

1264:                                             ; preds = %1247
  br label %1265

1265:                                             ; preds = %1264
  store i64 0, i64* %71, align 8
  br label %1266

1266:                                             ; preds = %1273, %1265
  %1267 = load i64, i64* %71, align 8
  %1268 = load i64, i64* %69, align 8
  %1269 = icmp ult i64 %1267, %1268
  br i1 %1269, label %1270, label %1276

1270:                                             ; preds = %1266
  %1271 = load %struct._IO_FILE*, %struct._IO_FILE** %24, align 8
  %1272 = call i32 @fputc(i32 32, %struct._IO_FILE* %1271)
  br label %1273

1273:                                             ; preds = %1270
  %1274 = load i64, i64* %71, align 8
  %1275 = add i64 %1274, 1
  store i64 %1275, i64* %71, align 8
  br label %1266

1276:                                             ; preds = %1266
  br label %1277

1277:                                             ; preds = %1276
  br label %1278

1278:                                             ; preds = %1277, %1263
  br label %1279

1279:                                             ; preds = %1278, %1237
  br label %1280

1280:                                             ; preds = %1279
  %1281 = load i8, i8* %37, align 1
  %1282 = trunc i8 %1281 to i1
  br i1 %1282, label %1283, label %1288

1283:                                             ; preds = %1280
  %1284 = load %struct._IO_FILE*, %struct._IO_FILE** %24, align 8
  %1285 = getelementptr inbounds [1024 x i8], [1024 x i8]* %64, i64 0, i64 0
  %1286 = getelementptr inbounds i8, i8* %1285, i64 1
  %1287 = load i64, i64* %66, align 8
  call void @fwrite_lowcase(%struct._IO_FILE* %1284, i8* %1286, i64 %1287)
  br label %1303

1288:                                             ; preds = %1280
  %1289 = load i8, i8* %38, align 1
  %1290 = trunc i8 %1289 to i1
  br i1 %1290, label %1291, label %1296

1291:                                             ; preds = %1288
  %1292 = load %struct._IO_FILE*, %struct._IO_FILE** %24, align 8
  %1293 = getelementptr inbounds [1024 x i8], [1024 x i8]* %64, i64 0, i64 0
  %1294 = getelementptr inbounds i8, i8* %1293, i64 1
  %1295 = load i64, i64* %66, align 8
  call void @fwrite_uppcase(%struct._IO_FILE* %1292, i8* %1294, i64 %1295)
  br label %1302

1296:                                             ; preds = %1288
  %1297 = getelementptr inbounds [1024 x i8], [1024 x i8]* %64, i64 0, i64 0
  %1298 = getelementptr inbounds i8, i8* %1297, i64 1
  %1299 = load i64, i64* %66, align 8
  %1300 = load %struct._IO_FILE*, %struct._IO_FILE** %24, align 8
  %1301 = call i64 @fwrite(i8* %1298, i64 %1299, i64 1, %struct._IO_FILE* %1300)
  br label %1302

1302:                                             ; preds = %1296, %1291
  br label %1303

1303:                                             ; preds = %1302, %1283
  br label %1304

1304:                                             ; preds = %1303
  br label %1305

1305:                                             ; preds = %1304, %1234
  %1306 = load i64, i64* %68, align 8
  %1307 = load i64, i64* %23, align 8
  %1308 = add i64 %1307, %1306
  store i64 %1308, i64* %23, align 8
  br label %1309

1309:                                             ; preds = %1305
  br label %1310

1310:                                             ; preds = %1309, %1192
  br label %2872

1311:                                             ; preds = %943
  %1312 = load i32, i32* %27, align 4
  %1313 = icmp eq i32 %1312, 69
  br i1 %1313, label %1314, label %1315

1314:                                             ; preds = %1311
  br label %1179

1315:                                             ; preds = %1311
  %1316 = load %struct.tm*, %struct.tm** %13, align 8
  %1317 = getelementptr inbounds %struct.tm, %struct.tm* %1316, i32 0, i32 5
  %1318 = load i32, i32* %1317, align 4
  %1319 = icmp slt i32 %1318, -1900
  %1320 = zext i1 %1319 to i8
  store i8 %1320, i8* %72, align 1
  %1321 = load i8, i8* %72, align 1
  %1322 = trunc i8 %1321 to i1
  %1323 = xor i1 %1322, true
  %1324 = zext i1 %1323 to i32
  %1325 = load %struct.tm*, %struct.tm** %13, align 8
  %1326 = getelementptr inbounds %struct.tm, %struct.tm* %1325, i32 0, i32 5
  %1327 = load i32, i32* %1326, align 4
  %1328 = icmp slt i32 %1327, 0
  %1329 = zext i1 %1328 to i32
  %1330 = and i32 %1324, %1329
  %1331 = icmp ne i32 %1330, 0
  %1332 = zext i1 %1331 to i8
  store i8 %1332, i8* %73, align 1
  %1333 = load %struct.tm*, %struct.tm** %13, align 8
  %1334 = getelementptr inbounds %struct.tm, %struct.tm* %1333, i32 0, i32 5
  %1335 = load i32, i32* %1334, align 4
  %1336 = load i8, i8* %73, align 1
  %1337 = trunc i8 %1336 to i1
  %1338 = zext i1 %1337 to i32
  %1339 = mul nsw i32 99, %1338
  %1340 = sub nsw i32 %1335, %1339
  %1341 = sdiv i32 %1340, 100
  %1342 = add nsw i32 %1341, 19
  store i32 %1342, i32* %74, align 4
  br label %1343

1343:                                             ; preds = %1315
  store i32 2, i32* %28, align 4
  %1344 = load i8, i8* %72, align 1
  %1345 = trunc i8 %1344 to i1
  %1346 = zext i1 %1345 to i8
  store i8 %1346, i8* %31, align 1
  %1347 = load i32, i32* %74, align 4
  store i32 %1347, i32* %30, align 4
  br label %1380

1348:                                             ; No predecessors!
  br label %1349

1349:                                             ; preds = %1348, %943
  %1350 = load i32, i32* %27, align 4
  %1351 = icmp eq i32 %1350, 79
  br i1 %1351, label %1352, label %1353

1352:                                             ; preds = %1349
  br label %2743

1353:                                             ; preds = %1349
  br label %1179

1354:                                             ; preds = %943
  %1355 = load i32, i32* %27, align 4
  %1356 = icmp ne i32 %1355, 0
  br i1 %1356, label %1357, label %1358

1357:                                             ; preds = %1354
  br label %2743

1358:                                             ; preds = %1354
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1.105, i64 0, i64 0), i8** %34, align 8
  br label %1077

1359:                                             ; preds = %943
  %1360 = load i32, i32* %27, align 4
  %1361 = icmp eq i32 %1360, 69
  br i1 %1361, label %1362, label %1363

1362:                                             ; preds = %1359
  br label %2743

1363:                                             ; preds = %1359
  br label %1364

1364:                                             ; preds = %1363
  store i32 2, i32* %28, align 4
  %1365 = load %struct.tm*, %struct.tm** %13, align 8
  %1366 = getelementptr inbounds %struct.tm, %struct.tm* %1365, i32 0, i32 3
  %1367 = load i32, i32* %1366, align 4
  store i32 %1367, i32* %29, align 4
  br label %1409

1368:                                             ; No predecessors!
  br label %1369

1369:                                             ; preds = %1368, %943
  %1370 = load i32, i32* %27, align 4
  %1371 = icmp eq i32 %1370, 69
  br i1 %1371, label %1372, label %1373

1372:                                             ; preds = %1369
  br label %2743

1373:                                             ; preds = %1369
  br label %1374

1374:                                             ; preds = %1373
  store i32 2, i32* %28, align 4
  %1375 = load %struct.tm*, %struct.tm** %13, align 8
  %1376 = getelementptr inbounds %struct.tm, %struct.tm* %1375, i32 0, i32 3
  %1377 = load i32, i32* %1376, align 4
  store i32 %1377, i32* %29, align 4
  br label %1404

1378:                                             ; No predecessors!
  br label %1379

1379:                                             ; preds = %2735, %2717, %2709, %2701, %1378
  store i8 1, i8* %32, align 1
  br label %1416

1380:                                             ; preds = %2530, %2494, %2434, %2430, %1343
  %1381 = load i32, i32* %26, align 4
  %1382 = icmp eq i32 %1381, 0
  br i1 %1382, label %1383, label %1385

1383:                                             ; preds = %1380
  %1384 = load i32, i32* %15, align 4
  store i32 %1384, i32* %26, align 4
  br label %1385

1385:                                             ; preds = %1383, %1380
  %1386 = load i32, i32* %26, align 4
  %1387 = icmp eq i32 %1386, 43
  br i1 %1387, label %1388, label %1401

1388:                                             ; preds = %1385
  %1389 = load i32, i32* %28, align 4
  %1390 = icmp eq i32 %1389, 2
  %1391 = zext i1 %1390 to i64
  %1392 = select i1 %1390, i32 99, i32 9999
  %1393 = load i32, i32* %30, align 4
  %1394 = icmp ult i32 %1392, %1393
  br i1 %1394, label %1399, label %1395

1395:                                             ; preds = %1388
  %1396 = load i32, i32* %28, align 4
  %1397 = load i32, i32* %16, align 4
  %1398 = icmp slt i32 %1396, %1397
  br label %1399

1399:                                             ; preds = %1395, %1388
  %1400 = phi i1 [ true, %1388 ], [ %1398, %1395 ]
  br label %1401

1401:                                             ; preds = %1399, %1385
  %1402 = phi i1 [ false, %1385 ], [ %1400, %1399 ]
  %1403 = zext i1 %1402 to i8
  store i8 %1403, i8* %32, align 1
  br label %1415

1404:                                             ; preds = %1776, %1766, %1374
  %1405 = load i32, i32* %26, align 4
  %1406 = icmp eq i32 %1405, 0
  br i1 %1406, label %1407, label %1408

1407:                                             ; preds = %1404
  store i32 95, i32* %26, align 4
  br label %1408

1408:                                             ; preds = %1407, %1404
  br label %1409

1409:                                             ; preds = %2480, %2461, %2450, %2303, %2289, %2162, %1800, %1758, %1748, %1408, %1364
  %1410 = load i32, i32* %29, align 4
  %1411 = icmp slt i32 %1410, 0
  %1412 = zext i1 %1411 to i8
  store i8 %1412, i8* %31, align 1
  %1413 = load i32, i32* %29, align 4
  store i32 %1413, i32* %30, align 4
  br label %1414

1414:                                             ; preds = %2147, %1810, %1784, %1409
  store i8 0, i8* %32, align 1
  br label %1415

1415:                                             ; preds = %1414, %1401
  store i32 0, i32* %33, align 4
  br label %1416

1416:                                             ; preds = %1415, %1379
  %1417 = load i32, i32* %27, align 4
  %1418 = icmp eq i32 %1417, 79
  br i1 %1418, label %1419, label %1423

1419:                                             ; preds = %1416
  %1420 = load i8, i8* %31, align 1
  %1421 = trunc i8 %1420 to i1
  br i1 %1421, label %1423, label %1422

1422:                                             ; preds = %1419
  br label %1179

1423:                                             ; preds = %1419, %1416
  %1424 = getelementptr inbounds [23 x i8], [23 x i8]* %36, i64 0, i64 0
  %1425 = getelementptr inbounds i8, i8* %1424, i64 23
  store i8* %1425, i8** %35, align 8
  %1426 = load i8, i8* %31, align 1
  %1427 = trunc i8 %1426 to i1
  br i1 %1427, label %1428, label %1431

1428:                                             ; preds = %1423
  %1429 = load i32, i32* %30, align 4
  %1430 = sub i32 0, %1429
  store i32 %1430, i32* %30, align 4
  br label %1431

1431:                                             ; preds = %1428, %1423
  br label %1432

1432:                                             ; preds = %1458, %1431
  %1433 = load i32, i32* %33, align 4
  %1434 = call i32 @_Z10computeFuniiiii(i32 -1547337052, i32 45, i32 -735667119, i32 101694, i32 450181029)
  %1435 = and i32 %1433, %1434
  %1436 = icmp ne i32 %1435, 0
  br i1 %1436, label %1437, label %1440

1437:                                             ; preds = %1432
  %1438 = load i8*, i8** %35, align 8
  %1439 = getelementptr inbounds i8, i8* %1438, i32 -1
  store i8* %1439, i8** %35, align 8
  store i8 58, i8* %1439, align 1
  br label %1440

1440:                                             ; preds = %1437, %1432
  %1441 = load i32, i32* %33, align 4
  %1442 = ashr i32 %1441, 1
  store i32 %1442, i32* %33, align 4
  %1443 = load i32, i32* %30, align 4
  %1444 = call i32 @_Z10computeFuniiiii(i32 -521794080, i32 13, i32 1569714741, i32 113618, i32 538299788)
  %1445 = urem i32 %1443, %1444
  %1446 = add i32 %1445, 48
  %1447 = trunc i32 %1446 to i8
  %1448 = load i8*, i8** %35, align 8
  %1449 = getelementptr inbounds i8, i8* %1448, i32 -1
  store i8* %1449, i8** %35, align 8
  store i8 %1447, i8* %1449, align 1
  %1450 = load i32, i32* %30, align 4
  %1451 = udiv i32 %1450, 10
  store i32 %1451, i32* %30, align 4
  br label %1452

1452:                                             ; preds = %1440
  %1453 = load i32, i32* %30, align 4
  %1454 = icmp ne i32 %1453, 0
  br i1 %1454, label %1458, label %1455

1455:                                             ; preds = %1452
  %1456 = load i32, i32* %33, align 4
  %1457 = icmp ne i32 %1456, 0
  br label %1458

1458:                                             ; preds = %1455, %1452
  %1459 = phi i1 [ true, %1452 ], [ %1457, %1455 ]
  br i1 %1459, label %1432, label %1460

1460:                                             ; preds = %1458
  br label %1461

1461:                                             ; preds = %2200, %1460
  %1462 = load i32, i32* %26, align 4
  %1463 = icmp eq i32 %1462, 0
  br i1 %1463, label %1464, label %1465

1464:                                             ; preds = %1461
  store i32 48, i32* %26, align 4
  br label %1465

1465:                                             ; preds = %1464, %1461
  %1466 = load i32, i32* %16, align 4
  %1467 = icmp slt i32 %1466, 0
  br i1 %1467, label %1468, label %1470

1468:                                             ; preds = %1465
  %1469 = load i32, i32* %28, align 4
  store i32 %1469, i32* %16, align 4
  br label %1470

1470:                                             ; preds = %1468, %1465
  %1471 = load i8, i8* %31, align 1
  %1472 = trunc i8 %1471 to i1
  br i1 %1472, label %1473, label %1474

1473:                                             ; preds = %1470
  br label %1479

1474:                                             ; preds = %1470
  %1475 = load i8, i8* %32, align 1
  %1476 = trunc i8 %1475 to i1
  %1477 = zext i1 %1476 to i64
  %1478 = select i1 %1476, i32 43, i32 0
  br label %1479

1479:                                             ; preds = %1474, %1473
  %1480 = phi i32 [ 45, %1473 ], [ %1478, %1474 ]
  %1481 = trunc i32 %1480 to i8
  store i8 %1481, i8* %75, align 1
  %1482 = getelementptr inbounds [23 x i8], [23 x i8]* %36, i64 0, i64 0
  %1483 = getelementptr inbounds i8, i8* %1482, i64 23
  %1484 = load i8*, i8** %35, align 8
  %1485 = ptrtoint i8* %1483 to i64
  %1486 = ptrtoint i8* %1484 to i64
  %1487 = sub i64 %1485, %1486
  %1488 = trunc i64 %1487 to i32
  store i32 %1488, i32* %76, align 4
  %1489 = load i32, i32* %16, align 4
  %1490 = load i8, i8* %75, align 1
  %1491 = icmp ne i8 %1490, 0
  %1492 = xor i1 %1491, true
  %1493 = xor i1 %1492, true
  %1494 = zext i1 %1493 to i32
  %1495 = sub nsw i32 %1489, %1494
  %1496 = load i32, i32* %76, align 4
  %1497 = sub nsw i32 %1495, %1496
  store i32 %1497, i32* %77, align 4
  %1498 = load i32, i32* %26, align 4
  %1499 = icmp eq i32 %1498, 45
  br i1 %1499, label %1503, label %1500

1500:                                             ; preds = %1479
  %1501 = load i32, i32* %77, align 4
  %1502 = icmp sle i32 %1501, 0
  br i1 %1502, label %1503, label %1504

1503:                                             ; preds = %1500, %1479
  br label %1506

1504:                                             ; preds = %1500
  %1505 = load i32, i32* %77, align 4
  br label %1506

1506:                                             ; preds = %1504, %1503
  %1507 = phi i32 [ 0, %1503 ], [ %1505, %1504 ]
  store i32 %1507, i32* %78, align 4
  %1508 = load i8, i8* %75, align 1
  %1509 = icmp ne i8 %1508, 0
  br i1 %1509, label %1510, label %1621

1510:                                             ; preds = %1506
  %1511 = load i32, i32* %26, align 4
  %1512 = icmp eq i32 %1511, 95
  br i1 %1512, label %1513, label %1539

1513:                                             ; preds = %1510
  %1514 = load %struct._IO_FILE*, %struct._IO_FILE** %24, align 8
  %1515 = icmp ne %struct._IO_FILE* %1514, null
  br i1 %1515, label %1516, label %1531

1516:                                             ; preds = %1513
  br label %1517

1517:                                             ; preds = %1516
  store i64 0, i64* %79, align 8
  br label %1518

1518:                                             ; preds = %1526, %1517
  %1519 = load i64, i64* %79, align 8
  %1520 = load i32, i32* %78, align 4
  %1521 = sext i32 %1520 to i64
  %1522 = icmp ult i64 %1519, %1521
  br i1 %1522, label %1523, label %1529

1523:                                             ; preds = %1518
  %1524 = load %struct._IO_FILE*, %struct._IO_FILE** %24, align 8
  %1525 = call i32 @fputc(i32 32, %struct._IO_FILE* %1524)
  br label %1526

1526:                                             ; preds = %1523
  %1527 = load i64, i64* %79, align 8
  %1528 = add i64 %1527, 1
  store i64 %1528, i64* %79, align 8
  br label %1518

1529:                                             ; preds = %1518
  br label %1530

1530:                                             ; preds = %1529
  br label %1531

1531:                                             ; preds = %1530, %1513
  %1532 = load i32, i32* %78, align 4
  %1533 = sext i32 %1532 to i64
  %1534 = load i64, i64* %23, align 8
  %1535 = add i64 %1534, %1533
  store i64 %1535, i64* %23, align 8
  %1536 = load i32, i32* %78, align 4
  %1537 = load i32, i32* %16, align 4
  %1538 = sub nsw i32 %1537, %1536
  store i32 %1538, i32* %16, align 4
  br label %1539

1539:                                             ; preds = %1531, %1510
  br label %1540

1540:                                             ; preds = %1539
  store i64 1, i64* %80, align 8
  %1541 = load i32, i32* %26, align 4
  %1542 = icmp eq i32 %1541, 45
  br i1 %1542, label %1544, label %1543

1543:                                             ; preds = %1540
  br label %1544

1544:                                             ; preds = %1543, %1540
  %1545 = phi i1 [ true, %1540 ], [ false, %1543 ]
  %1546 = zext i1 %1545 to i64
  %1547 = select i1 %1545, i32 0, i32 0
  %1548 = sext i32 %1547 to i64
  store i64 %1548, i64* %81, align 8
  %1549 = load i64, i64* %80, align 8
  %1550 = load i64, i64* %81, align 8
  %1551 = icmp ult i64 %1549, %1550
  br i1 %1551, label %1552, label %1554

1552:                                             ; preds = %1544
  %1553 = load i64, i64* %81, align 8
  br label %1556

1554:                                             ; preds = %1544
  %1555 = load i64, i64* %80, align 8
  br label %1556

1556:                                             ; preds = %1554, %1552
  %1557 = phi i64 [ %1553, %1552 ], [ %1555, %1554 ]
  store i64 %1557, i64* %82, align 8
  %1558 = load i64, i64* %82, align 8
  %1559 = load i64, i64* %20, align 8
  %1560 = load i64, i64* %23, align 8
  %1561 = sub i64 %1559, %1560
  %1562 = icmp uge i64 %1558, %1561
  br i1 %1562, label %1563, label %1564

1563:                                             ; preds = %1556
  store i64 0, i64* %10, align 8
  br label %2878

1564:                                             ; preds = %1556
  %1565 = load %struct._IO_FILE*, %struct._IO_FILE** %24, align 8
  %1566 = icmp ne %struct._IO_FILE* %1565, null
  br i1 %1566, label %1567, label %1614

1567:                                             ; preds = %1564
  %1568 = load i64, i64* %80, align 8
  %1569 = load i64, i64* %81, align 8
  %1570 = icmp ult i64 %1568, %1569
  br i1 %1570, label %1571, label %1609

1571:                                             ; preds = %1567
  %1572 = load i64, i64* %81, align 8
  %1573 = load i64, i64* %80, align 8
  %1574 = sub i64 %1572, %1573
  store i64 %1574, i64* %83, align 8
  %1575 = load i32, i32* %26, align 4
  %1576 = icmp eq i32 %1575, 48
  br i1 %1576, label %1580, label %1577

1577:                                             ; preds = %1571
  %1578 = load i32, i32* %26, align 4
  %1579 = icmp eq i32 %1578, 43
  br i1 %1579, label %1580, label %1594

1580:                                             ; preds = %1577, %1571
  br label %1581

1581:                                             ; preds = %1580
  store i64 0, i64* %84, align 8
  br label %1582

1582:                                             ; preds = %1589, %1581
  %1583 = load i64, i64* %84, align 8
  %1584 = load i64, i64* %83, align 8
  %1585 = icmp ult i64 %1583, %1584
  br i1 %1585, label %1586, label %1592

1586:                                             ; preds = %1582
  %1587 = load %struct._IO_FILE*, %struct._IO_FILE** %24, align 8
  %1588 = call i32 @fputc(i32 48, %struct._IO_FILE* %1587)
  br label %1589

1589:                                             ; preds = %1586
  %1590 = load i64, i64* %84, align 8
  %1591 = add i64 %1590, 1
  store i64 %1591, i64* %84, align 8
  br label %1582

1592:                                             ; preds = %1582
  br label %1593

1593:                                             ; preds = %1592
  br label %1608

1594:                                             ; preds = %1577
  br label %1595

1595:                                             ; preds = %1594
  store i64 0, i64* %85, align 8
  br label %1596

1596:                                             ; preds = %1603, %1595
  %1597 = load i64, i64* %85, align 8
  %1598 = load i64, i64* %83, align 8
  %1599 = icmp ult i64 %1597, %1598
  br i1 %1599, label %1600, label %1606

1600:                                             ; preds = %1596
  %1601 = load %struct._IO_FILE*, %struct._IO_FILE** %24, align 8
  %1602 = call i32 @fputc(i32 32, %struct._IO_FILE* %1601)
  br label %1603

1603:                                             ; preds = %1600
  %1604 = load i64, i64* %85, align 8
  %1605 = add i64 %1604, 1
  store i64 %1605, i64* %85, align 8
  br label %1596

1606:                                             ; preds = %1596
  br label %1607

1607:                                             ; preds = %1606
  br label %1608

1608:                                             ; preds = %1607, %1593
  br label %1609

1609:                                             ; preds = %1608, %1567
  %1610 = load i8, i8* %75, align 1
  %1611 = sext i8 %1610 to i32
  %1612 = load %struct._IO_FILE*, %struct._IO_FILE** %24, align 8
  %1613 = call i32 @fputc(i32 %1611, %struct._IO_FILE* %1612)
  br label %1614

1614:                                             ; preds = %1609, %1564
  %1615 = load i64, i64* %82, align 8
  %1616 = load i64, i64* %23, align 8
  %1617 = add i64 %1616, %1615
  store i64 %1617, i64* %23, align 8
  br label %1618

1618:                                             ; preds = %1614
  %1619 = load i32, i32* %16, align 4
  %1620 = add nsw i32 %1619, -1
  store i32 %1620, i32* %16, align 4
  br label %1621

1621:                                             ; preds = %1618, %1506
  br label %1622

1622:                                             ; preds = %1621
  %1623 = load i32, i32* %76, align 4
  %1624 = sext i32 %1623 to i64
  store i64 %1624, i64* %86, align 8
  %1625 = load i32, i32* %26, align 4
  %1626 = icmp eq i32 %1625, 45
  br i1 %1626, label %1630, label %1627

1627:                                             ; preds = %1622
  %1628 = load i32, i32* %16, align 4
  %1629 = icmp slt i32 %1628, 0
  br i1 %1629, label %1630, label %1631

1630:                                             ; preds = %1627, %1622
  br label %1633

1631:                                             ; preds = %1627
  %1632 = load i32, i32* %16, align 4
  br label %1633

1633:                                             ; preds = %1631, %1630
  %1634 = phi i32 [ 0, %1630 ], [ %1632, %1631 ]
  %1635 = sext i32 %1634 to i64
  store i64 %1635, i64* %87, align 8
  %1636 = load i64, i64* %86, align 8
  %1637 = load i64, i64* %87, align 8
  %1638 = icmp ult i64 %1636, %1637
  br i1 %1638, label %1639, label %1641

1639:                                             ; preds = %1633
  %1640 = load i64, i64* %87, align 8
  br label %1643

1641:                                             ; preds = %1633
  %1642 = load i64, i64* %86, align 8
  br label %1643

1643:                                             ; preds = %1641, %1639
  %1644 = phi i64 [ %1640, %1639 ], [ %1642, %1641 ]
  store i64 %1644, i64* %88, align 8
  %1645 = load i64, i64* %88, align 8
  %1646 = load i64, i64* %20, align 8
  %1647 = load i64, i64* %23, align 8
  %1648 = sub i64 %1646, %1647
  %1649 = icmp uge i64 %1645, %1648
  br i1 %1649, label %1650, label %1651

1650:                                             ; preds = %1643
  store i64 0, i64* %10, align 8
  br label %2878

1651:                                             ; preds = %1643
  %1652 = load %struct._IO_FILE*, %struct._IO_FILE** %24, align 8
  %1653 = icmp ne %struct._IO_FILE* %1652, null
  br i1 %1653, label %1654, label %1719

1654:                                             ; preds = %1651
  %1655 = load i64, i64* %86, align 8
  %1656 = load i64, i64* %87, align 8
  %1657 = icmp ult i64 %1655, %1656
  br i1 %1657, label %1658, label %1696

1658:                                             ; preds = %1654
  %1659 = load i64, i64* %87, align 8
  %1660 = load i64, i64* %86, align 8
  %1661 = sub i64 %1659, %1660
  store i64 %1661, i64* %89, align 8
  %1662 = load i32, i32* %26, align 4
  %1663 = icmp eq i32 %1662, 48
  br i1 %1663, label %1667, label %1664

1664:                                             ; preds = %1658
  %1665 = load i32, i32* %26, align 4
  %1666 = icmp eq i32 %1665, 43
  br i1 %1666, label %1667, label %1681

1667:                                             ; preds = %1664, %1658
  br label %1668

1668:                                             ; preds = %1667
  store i64 0, i64* %90, align 8
  br label %1669

1669:                                             ; preds = %1676, %1668
  %1670 = load i64, i64* %90, align 8
  %1671 = load i64, i64* %89, align 8
  %1672 = icmp ult i64 %1670, %1671
  br i1 %1672, label %1673, label %1679

1673:                                             ; preds = %1669
  %1674 = load %struct._IO_FILE*, %struct._IO_FILE** %24, align 8
  %1675 = call i32 @fputc(i32 48, %struct._IO_FILE* %1674)
  br label %1676

1676:                                             ; preds = %1673
  %1677 = load i64, i64* %90, align 8
  %1678 = add i64 %1677, 1
  store i64 %1678, i64* %90, align 8
  br label %1669

1679:                                             ; preds = %1669
  br label %1680

1680:                                             ; preds = %1679
  br label %1695

1681:                                             ; preds = %1664
  br label %1682

1682:                                             ; preds = %1681
  store i64 0, i64* %91, align 8
  br label %1683

1683:                                             ; preds = %1690, %1682
  %1684 = load i64, i64* %91, align 8
  %1685 = load i64, i64* %89, align 8
  %1686 = icmp ult i64 %1684, %1685
  br i1 %1686, label %1687, label %1693

1687:                                             ; preds = %1683
  %1688 = load %struct._IO_FILE*, %struct._IO_FILE** %24, align 8
  %1689 = call i32 @fputc(i32 32, %struct._IO_FILE* %1688)
  br label %1690

1690:                                             ; preds = %1687
  %1691 = load i64, i64* %91, align 8
  %1692 = add i64 %1691, 1
  store i64 %1692, i64* %91, align 8
  br label %1683

1693:                                             ; preds = %1683
  br label %1694

1694:                                             ; preds = %1693
  br label %1695

1695:                                             ; preds = %1694, %1680
  br label %1696

1696:                                             ; preds = %1695, %1654
  br label %1697

1697:                                             ; preds = %1696
  %1698 = load i8, i8* %37, align 1
  %1699 = trunc i8 %1698 to i1
  br i1 %1699, label %1700, label %1704

1700:                                             ; preds = %1697
  %1701 = load %struct._IO_FILE*, %struct._IO_FILE** %24, align 8
  %1702 = load i8*, i8** %35, align 8
  %1703 = load i64, i64* %86, align 8
  call void @fwrite_lowcase(%struct._IO_FILE* %1701, i8* %1702, i64 %1703)
  br label %1717

1704:                                             ; preds = %1697
  %1705 = load i8, i8* %38, align 1
  %1706 = trunc i8 %1705 to i1
  br i1 %1706, label %1707, label %1711

1707:                                             ; preds = %1704
  %1708 = load %struct._IO_FILE*, %struct._IO_FILE** %24, align 8
  %1709 = load i8*, i8** %35, align 8
  %1710 = load i64, i64* %86, align 8
  call void @fwrite_uppcase(%struct._IO_FILE* %1708, i8* %1709, i64 %1710)
  br label %1716

1711:                                             ; preds = %1704
  %1712 = load i8*, i8** %35, align 8
  %1713 = load i64, i64* %86, align 8
  %1714 = load %struct._IO_FILE*, %struct._IO_FILE** %24, align 8
  %1715 = call i64 @fwrite(i8* %1712, i64 %1713, i64 1, %struct._IO_FILE* %1714)
  br label %1716

1716:                                             ; preds = %1711, %1707
  br label %1717

1717:                                             ; preds = %1716, %1700
  br label %1718

1718:                                             ; preds = %1717
  br label %1719

1719:                                             ; preds = %1718, %1651
  %1720 = load i64, i64* %88, align 8
  %1721 = load i64, i64* %23, align 8
  %1722 = add i64 %1721, %1720
  store i64 %1722, i64* %23, align 8
  br label %1723

1723:                                             ; preds = %1719
  br label %2872

1724:                                             ; preds = %943
  %1725 = load i32, i32* %27, align 4
  %1726 = icmp ne i32 %1725, 0
  br i1 %1726, label %1727, label %1728

1727:                                             ; preds = %1724
  br label %2743

1728:                                             ; preds = %1724
  %1729 = load i32, i32* %26, align 4
  %1730 = icmp eq i32 %1729, 0
  br i1 %1730, label %1731, label %1735

1731:                                             ; preds = %1728
  %1732 = load i32, i32* %16, align 4
  %1733 = icmp slt i32 %1732, 0
  br i1 %1733, label %1734, label %1735

1734:                                             ; preds = %1731
  store i32 43, i32* %26, align 4
  store i32 4, i32* %42, align 4
  br label %1742

1735:                                             ; preds = %1731, %1728
  %1736 = load i32, i32* %16, align 4
  %1737 = sub nsw i32 %1736, 6
  store i32 %1737, i32* %42, align 4
  %1738 = load i32, i32* %42, align 4
  %1739 = icmp slt i32 %1738, 0
  br i1 %1739, label %1740, label %1741

1740:                                             ; preds = %1735
  store i32 0, i32* %42, align 4
  br label %1741

1741:                                             ; preds = %1740, %1735
  br label %1742

1742:                                             ; preds = %1741, %1734
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.106, i64 0, i64 0), i8** %34, align 8
  br label %1078

1743:                                             ; preds = %943
  %1744 = load i32, i32* %27, align 4
  %1745 = icmp eq i32 %1744, 69
  br i1 %1745, label %1746, label %1747

1746:                                             ; preds = %1743
  br label %2743

1747:                                             ; preds = %1743
  br label %1748

1748:                                             ; preds = %1747
  store i32 2, i32* %28, align 4
  %1749 = load %struct.tm*, %struct.tm** %13, align 8
  %1750 = getelementptr inbounds %struct.tm, %struct.tm* %1749, i32 0, i32 2
  %1751 = load i32, i32* %1750, align 8
  store i32 %1751, i32* %29, align 4
  br label %1409

1752:                                             ; No predecessors!
  br label %1753

1753:                                             ; preds = %1752, %943
  %1754 = load i32, i32* %27, align 4
  %1755 = icmp eq i32 %1754, 69
  br i1 %1755, label %1756, label %1757

1756:                                             ; preds = %1753
  br label %2743

1757:                                             ; preds = %1753
  br label %1758

1758:                                             ; preds = %1757
  store i32 2, i32* %28, align 4
  %1759 = load i32, i32* %21, align 4
  store i32 %1759, i32* %29, align 4
  br label %1409

1760:                                             ; No predecessors!
  br label %1761

1761:                                             ; preds = %1760, %943
  %1762 = load i32, i32* %27, align 4
  %1763 = icmp eq i32 %1762, 69
  br i1 %1763, label %1764, label %1765

1764:                                             ; preds = %1761
  br label %2743

1765:                                             ; preds = %1761
  br label %1766

1766:                                             ; preds = %1765
  store i32 2, i32* %28, align 4
  %1767 = load %struct.tm*, %struct.tm** %13, align 8
  %1768 = getelementptr inbounds %struct.tm, %struct.tm* %1767, i32 0, i32 2
  %1769 = load i32, i32* %1768, align 8
  store i32 %1769, i32* %29, align 4
  br label %1404

1770:                                             ; No predecessors!
  br label %1771

1771:                                             ; preds = %1770, %943
  %1772 = load i32, i32* %27, align 4
  %1773 = icmp eq i32 %1772, 69
  br i1 %1773, label %1774, label %1775

1774:                                             ; preds = %1771
  br label %2743

1775:                                             ; preds = %1771
  br label %1776

1776:                                             ; preds = %1775
  store i32 2, i32* %28, align 4
  %1777 = load i32, i32* %21, align 4
  store i32 %1777, i32* %29, align 4
  br label %1404

1778:                                             ; No predecessors!
  br label %1779

1779:                                             ; preds = %1778, %943
  %1780 = load i32, i32* %27, align 4
  %1781 = icmp eq i32 %1780, 69
  br i1 %1781, label %1782, label %1783

1782:                                             ; preds = %1779
  br label %2743

1783:                                             ; preds = %1779
  br label %1784

1784:                                             ; preds = %1783
  store i32 3, i32* %28, align 4
  %1785 = load %struct.tm*, %struct.tm** %13, align 8
  %1786 = getelementptr inbounds %struct.tm, %struct.tm* %1785, i32 0, i32 7
  %1787 = load i32, i32* %1786, align 4
  %1788 = icmp slt i32 %1787, -1
  %1789 = zext i1 %1788 to i8
  store i8 %1789, i8* %31, align 1
  %1790 = load %struct.tm*, %struct.tm** %13, align 8
  %1791 = getelementptr inbounds %struct.tm, %struct.tm* %1790, i32 0, i32 7
  %1792 = load i32, i32* %1791, align 4
  %1793 = add i32 %1792, 1
  store i32 %1793, i32* %30, align 4
  br label %1414

1794:                                             ; No predecessors!
  br label %1795

1795:                                             ; preds = %1794, %943
  %1796 = load i32, i32* %27, align 4
  %1797 = icmp eq i32 %1796, 69
  br i1 %1797, label %1798, label %1799

1798:                                             ; preds = %1795
  br label %2743

1799:                                             ; preds = %1795
  br label %1800

1800:                                             ; preds = %1799
  store i32 2, i32* %28, align 4
  %1801 = load %struct.tm*, %struct.tm** %13, align 8
  %1802 = getelementptr inbounds %struct.tm, %struct.tm* %1801, i32 0, i32 1
  %1803 = load i32, i32* %1802, align 4
  store i32 %1803, i32* %29, align 4
  br label %1409

1804:                                             ; No predecessors!
  br label %1805

1805:                                             ; preds = %1804, %943
  %1806 = load i32, i32* %27, align 4
  %1807 = icmp eq i32 %1806, 69
  br i1 %1807, label %1808, label %1809

1808:                                             ; preds = %1805
  br label %2743

1809:                                             ; preds = %1805
  br label %1810

1810:                                             ; preds = %1809
  %1811 = call i32 @_Z10computeFuniiiii(i32 388134370, i32 24, i32 1024523627, i32 50819, i32 600166192)
  store i32 %1811, i32* %28, align 4
  %1812 = load %struct.tm*, %struct.tm** %13, align 8
  %1813 = getelementptr inbounds %struct.tm, %struct.tm* %1812, i32 0, i32 4
  %1814 = load i32, i32* %1813, align 8
  %1815 = icmp slt i32 %1814, -1
  %1816 = zext i1 %1815 to i8
  store i8 %1816, i8* %31, align 1
  %1817 = load %struct.tm*, %struct.tm** %13, align 8
  %1818 = getelementptr inbounds %struct.tm, %struct.tm* %1817, i32 0, i32 4
  %1819 = load i32, i32* %1818, align 8
  %1820 = add i32 %1819, 1
  store i32 %1820, i32* %30, align 4
  br label %1414

1821:                                             ; No predecessors!
  br label %1822

1822:                                             ; preds = %1821, %943
  %1823 = load i32, i32* %27, align 4
  %1824 = icmp eq i32 %1823, 69
  br i1 %1824, label %1825, label %1826

1825:                                             ; preds = %1822
  br label %2743

1826:                                             ; preds = %1822
  %1827 = load i32, i32* %19, align 4
  store i32 %1827, i32* %92, align 4
  store i32 9, i32* %93, align 4
  %1828 = load i32, i32* %16, align 4
  %1829 = icmp sle i32 %1828, 0
  br i1 %1829, label %1830, label %1832

1830:                                             ; preds = %1826
  %1831 = load i32, i32* %93, align 4
  store i32 %1831, i32* %16, align 4
  br label %1832

1832:                                             ; preds = %1830, %1826
  %1833 = load i32, i32* %93, align 4
  store i32 %1833, i32* %94, align 4
  br label %1834

1834:                                             ; preds = %1849, %1832
  %1835 = load i32, i32* %16, align 4
  %1836 = load i32, i32* %94, align 4
  %1837 = icmp slt i32 %1835, %1836
  br i1 %1837, label %1847, label %1838

1838:                                             ; preds = %1834
  %1839 = load i32, i32* %94, align 4
  %1840 = icmp slt i32 1, %1839
  br i1 %1840, label %1841, label %1845

1841:                                             ; preds = %1838
  %1842 = load i32, i32* %92, align 4
  %1843 = srem i32 %1842, 10
  %1844 = icmp eq i32 %1843, 0
  br label %1845

1845:                                             ; preds = %1841, %1838
  %1846 = phi i1 [ false, %1838 ], [ %1844, %1841 ]
  br label %1847

1847:                                             ; preds = %1845, %1834
  %1848 = phi i1 [ true, %1834 ], [ %1846, %1845 ]
  br i1 %1848, label %1849, label %1854

1849:                                             ; preds = %1847
  %1850 = load i32, i32* %94, align 4
  %1851 = add nsw i32 %1850, -1
  store i32 %1851, i32* %94, align 4
  %1852 = load i32, i32* %92, align 4
  %1853 = sdiv i32 %1852, 10
  store i32 %1853, i32* %92, align 4
  br label %1834

1854:                                             ; preds = %1847
  %1855 = load i32, i32* %94, align 4
  store i32 %1855, i32* %95, align 4
  br label %1856

1856:                                             ; preds = %1870, %1854
  %1857 = load i32, i32* %95, align 4
  %1858 = icmp slt i32 0, %1857
  br i1 %1858, label %1859, label %1873

1859:                                             ; preds = %1856
  %1860 = load i32, i32* %92, align 4
  %1861 = srem i32 %1860, 10
  %1862 = add nsw i32 %1861, 48
  %1863 = trunc i32 %1862 to i8
  %1864 = load i32, i32* %95, align 4
  %1865 = sub nsw i32 %1864, 1
  %1866 = sext i32 %1865 to i64
  %1867 = getelementptr inbounds [23 x i8], [23 x i8]* %36, i64 0, i64 %1866
  store i8 %1863, i8* %1867, align 1
  %1868 = load i32, i32* %92, align 4
  %1869 = sdiv i32 %1868, 10
  store i32 %1869, i32* %92, align 4
  br label %1870

1870:                                             ; preds = %1859
  %1871 = load i32, i32* %95, align 4
  %1872 = add nsw i32 %1871, -1
  store i32 %1872, i32* %95, align 4
  br label %1856

1873:                                             ; preds = %1856
  %1874 = load i32, i32* %26, align 4
  %1875 = icmp ne i32 %1874, 0
  br i1 %1875, label %1877, label %1876

1876:                                             ; preds = %1873
  store i32 48, i32* %26, align 4
  br label %1877

1877:                                             ; preds = %1876, %1873
  br label %1878

1878:                                             ; preds = %1877
  %1879 = load i32, i32* %94, align 4
  %1880 = sext i32 %1879 to i64
  store i64 %1880, i64* %96, align 8
  %1881 = load i32, i32* %26, align 4
  %1882 = icmp eq i32 %1881, 45
  br i1 %1882, label %1884, label %1883

1883:                                             ; preds = %1878
  br label %1884

1884:                                             ; preds = %1883, %1878
  %1885 = phi i1 [ true, %1878 ], [ false, %1883 ]
  %1886 = zext i1 %1885 to i64
  %1887 = select i1 %1885, i32 0, i32 0
  %1888 = sext i32 %1887 to i64
  store i64 %1888, i64* %97, align 8
  %1889 = load i64, i64* %96, align 8
  %1890 = load i64, i64* %97, align 8
  %1891 = icmp ult i64 %1889, %1890
  br i1 %1891, label %1892, label %1894

1892:                                             ; preds = %1884
  %1893 = load i64, i64* %97, align 8
  br label %1896

1894:                                             ; preds = %1884
  %1895 = load i64, i64* %96, align 8
  br label %1896

1896:                                             ; preds = %1894, %1892
  %1897 = phi i64 [ %1893, %1892 ], [ %1895, %1894 ]
  store i64 %1897, i64* %98, align 8
  %1898 = load i64, i64* %98, align 8
  %1899 = load i64, i64* %20, align 8
  %1900 = load i64, i64* %23, align 8
  %1901 = sub i64 %1899, %1900
  %1902 = icmp uge i64 %1898, %1901
  br i1 %1902, label %1903, label %1904

1903:                                             ; preds = %1896
  store i64 0, i64* %10, align 8
  br label %2878

1904:                                             ; preds = %1896
  %1905 = load %struct._IO_FILE*, %struct._IO_FILE** %24, align 8
  %1906 = icmp ne %struct._IO_FILE* %1905, null
  br i1 %1906, label %1907, label %1972

1907:                                             ; preds = %1904
  %1908 = load i64, i64* %96, align 8
  %1909 = load i64, i64* %97, align 8
  %1910 = icmp ult i64 %1908, %1909
  br i1 %1910, label %1911, label %1949

1911:                                             ; preds = %1907
  %1912 = load i64, i64* %97, align 8
  %1913 = load i64, i64* %96, align 8
  %1914 = sub i64 %1912, %1913
  store i64 %1914, i64* %99, align 8
  %1915 = load i32, i32* %26, align 4
  %1916 = icmp eq i32 %1915, 48
  br i1 %1916, label %1920, label %1917

1917:                                             ; preds = %1911
  %1918 = load i32, i32* %26, align 4
  %1919 = icmp eq i32 %1918, 43
  br i1 %1919, label %1920, label %1934

1920:                                             ; preds = %1917, %1911
  br label %1921

1921:                                             ; preds = %1920
  store i64 0, i64* %100, align 8
  br label %1922

1922:                                             ; preds = %1929, %1921
  %1923 = load i64, i64* %100, align 8
  %1924 = load i64, i64* %99, align 8
  %1925 = icmp ult i64 %1923, %1924
  br i1 %1925, label %1926, label %1932

1926:                                             ; preds = %1922
  %1927 = load %struct._IO_FILE*, %struct._IO_FILE** %24, align 8
  %1928 = call i32 @fputc(i32 48, %struct._IO_FILE* %1927)
  br label %1929

1929:                                             ; preds = %1926
  %1930 = load i64, i64* %100, align 8
  %1931 = add i64 %1930, 1
  store i64 %1931, i64* %100, align 8
  br label %1922

1932:                                             ; preds = %1922
  br label %1933

1933:                                             ; preds = %1932
  br label %1948

1934:                                             ; preds = %1917
  br label %1935

1935:                                             ; preds = %1934
  store i64 0, i64* %101, align 8
  br label %1936

1936:                                             ; preds = %1943, %1935
  %1937 = load i64, i64* %101, align 8
  %1938 = load i64, i64* %99, align 8
  %1939 = icmp ult i64 %1937, %1938
  br i1 %1939, label %1940, label %1946

1940:                                             ; preds = %1936
  %1941 = load %struct._IO_FILE*, %struct._IO_FILE** %24, align 8
  %1942 = call i32 @fputc(i32 32, %struct._IO_FILE* %1941)
  br label %1943

1943:                                             ; preds = %1940
  %1944 = load i64, i64* %101, align 8
  %1945 = add i64 %1944, 1
  store i64 %1945, i64* %101, align 8
  br label %1936

1946:                                             ; preds = %1936
  br label %1947

1947:                                             ; preds = %1946
  br label %1948

1948:                                             ; preds = %1947, %1933
  br label %1949

1949:                                             ; preds = %1948, %1907
  br label %1950

1950:                                             ; preds = %1949
  %1951 = load i8, i8* %37, align 1
  %1952 = trunc i8 %1951 to i1
  br i1 %1952, label %1953, label %1957

1953:                                             ; preds = %1950
  %1954 = load %struct._IO_FILE*, %struct._IO_FILE** %24, align 8
  %1955 = getelementptr inbounds [23 x i8], [23 x i8]* %36, i64 0, i64 0
  %1956 = load i64, i64* %96, align 8
  call void @fwrite_lowcase(%struct._IO_FILE* %1954, i8* %1955, i64 %1956)
  br label %1970

1957:                                             ; preds = %1950
  %1958 = load i8, i8* %38, align 1
  %1959 = trunc i8 %1958 to i1
  br i1 %1959, label %1960, label %1964

1960:                                             ; preds = %1957
  %1961 = load %struct._IO_FILE*, %struct._IO_FILE** %24, align 8
  %1962 = getelementptr inbounds [23 x i8], [23 x i8]* %36, i64 0, i64 0
  %1963 = load i64, i64* %96, align 8
  call void @fwrite_uppcase(%struct._IO_FILE* %1961, i8* %1962, i64 %1963)
  br label %1969

1964:                                             ; preds = %1957
  %1965 = getelementptr inbounds [23 x i8], [23 x i8]* %36, i64 0, i64 0
  %1966 = load i64, i64* %96, align 8
  %1967 = load %struct._IO_FILE*, %struct._IO_FILE** %24, align 8
  %1968 = call i64 @fwrite(i8* %1965, i64 %1966, i64 1, %struct._IO_FILE* %1967)
  br label %1969

1969:                                             ; preds = %1964, %1960
  br label %1970

1970:                                             ; preds = %1969, %1953
  br label %1971

1971:                                             ; preds = %1970
  br label %1972

1972:                                             ; preds = %1971, %1904
  %1973 = load i64, i64* %98, align 8
  %1974 = load i64, i64* %23, align 8
  %1975 = add i64 %1974, %1973
  store i64 %1975, i64* %23, align 8
  br label %1976

1976:                                             ; preds = %1972
  br label %1977

1977:                                             ; preds = %1976
  store i64 0, i64* %102, align 8
  %1978 = load i32, i32* %26, align 4
  %1979 = icmp eq i32 %1978, 45
  br i1 %1979, label %1985, label %1980

1980:                                             ; preds = %1977
  %1981 = load i32, i32* %16, align 4
  %1982 = load i32, i32* %94, align 4
  %1983 = sub nsw i32 %1981, %1982
  %1984 = icmp slt i32 %1983, 0
  br i1 %1984, label %1985, label %1986

1985:                                             ; preds = %1980, %1977
  br label %1990

1986:                                             ; preds = %1980
  %1987 = load i32, i32* %16, align 4
  %1988 = load i32, i32* %94, align 4
  %1989 = sub nsw i32 %1987, %1988
  br label %1990

1990:                                             ; preds = %1986, %1985
  %1991 = phi i32 [ 0, %1985 ], [ %1989, %1986 ]
  %1992 = sext i32 %1991 to i64
  store i64 %1992, i64* %103, align 8
  %1993 = load i64, i64* %102, align 8
  %1994 = load i64, i64* %103, align 8
  %1995 = icmp ult i64 %1993, %1994
  br i1 %1995, label %1996, label %1998

1996:                                             ; preds = %1990
  %1997 = load i64, i64* %103, align 8
  br label %2000

1998:                                             ; preds = %1990
  %1999 = load i64, i64* %102, align 8
  br label %2000

2000:                                             ; preds = %1998, %1996
  %2001 = phi i64 [ %1997, %1996 ], [ %1999, %1998 ]
  store i64 %2001, i64* %104, align 8
  %2002 = load i64, i64* %104, align 8
  %2003 = load i64, i64* %20, align 8
  %2004 = load i64, i64* %23, align 8
  %2005 = sub i64 %2003, %2004
  %2006 = icmp uge i64 %2002, %2005
  br i1 %2006, label %2007, label %2008

2007:                                             ; preds = %2000
  store i64 0, i64* %10, align 8
  br label %2878

2008:                                             ; preds = %2000
  %2009 = load %struct._IO_FILE*, %struct._IO_FILE** %24, align 8
  %2010 = icmp ne %struct._IO_FILE* %2009, null
  br i1 %2010, label %2011, label %2054

2011:                                             ; preds = %2008
  %2012 = load i64, i64* %102, align 8
  %2013 = load i64, i64* %103, align 8
  %2014 = icmp ult i64 %2012, %2013
  br i1 %2014, label %2015, label %2053

2015:                                             ; preds = %2011
  %2016 = load i64, i64* %103, align 8
  %2017 = load i64, i64* %102, align 8
  %2018 = sub i64 %2016, %2017
  store i64 %2018, i64* %105, align 8
  %2019 = load i32, i32* %26, align 4
  %2020 = icmp eq i32 %2019, 48
  br i1 %2020, label %2024, label %2021

2021:                                             ; preds = %2015
  %2022 = load i32, i32* %26, align 4
  %2023 = icmp eq i32 %2022, 43
  br i1 %2023, label %2024, label %2038

2024:                                             ; preds = %2021, %2015
  br label %2025

2025:                                             ; preds = %2024
  store i64 0, i64* %106, align 8
  br label %2026

2026:                                             ; preds = %2033, %2025
  %2027 = load i64, i64* %106, align 8
  %2028 = load i64, i64* %105, align 8
  %2029 = icmp ult i64 %2027, %2028
  br i1 %2029, label %2030, label %2036

2030:                                             ; preds = %2026
  %2031 = load %struct._IO_FILE*, %struct._IO_FILE** %24, align 8
  %2032 = call i32 @fputc(i32 48, %struct._IO_FILE* %2031)
  br label %2033

2033:                                             ; preds = %2030
  %2034 = load i64, i64* %106, align 8
  %2035 = add i64 %2034, 1
  store i64 %2035, i64* %106, align 8
  br label %2026

2036:                                             ; preds = %2026
  br label %2037

2037:                                             ; preds = %2036
  br label %2052

2038:                                             ; preds = %2021
  br label %2039

2039:                                             ; preds = %2038
  store i64 0, i64* %107, align 8
  br label %2040

2040:                                             ; preds = %2047, %2039
  %2041 = load i64, i64* %107, align 8
  %2042 = load i64, i64* %105, align 8
  %2043 = icmp ult i64 %2041, %2042
  br i1 %2043, label %2044, label %2050

2044:                                             ; preds = %2040
  %2045 = load %struct._IO_FILE*, %struct._IO_FILE** %24, align 8
  %2046 = call i32 @fputc(i32 32, %struct._IO_FILE* %2045)
  br label %2047

2047:                                             ; preds = %2044
  %2048 = load i64, i64* %107, align 8
  %2049 = add i64 %2048, 1
  store i64 %2049, i64* %107, align 8
  br label %2040

2050:                                             ; preds = %2040
  br label %2051

2051:                                             ; preds = %2050
  br label %2052

2052:                                             ; preds = %2051, %2037
  br label %2053

2053:                                             ; preds = %2052, %2011
  br label %2054

2054:                                             ; preds = %2053, %2008
  %2055 = load i64, i64* %104, align 8
  %2056 = load i64, i64* %23, align 8
  %2057 = add i64 %2056, %2055
  store i64 %2057, i64* %23, align 8
  br label %2058

2058:                                             ; preds = %2054
  br label %2872

2059:                                             ; preds = %943
  br label %2060

2060:                                             ; preds = %2059
  store i64 1, i64* %108, align 8
  %2061 = load i32, i32* %26, align 4
  %2062 = icmp eq i32 %2061, 45
  br i1 %2062, label %2066, label %2063

2063:                                             ; preds = %2060
  %2064 = load i32, i32* %16, align 4
  %2065 = icmp slt i32 %2064, 0
  br i1 %2065, label %2066, label %2067

2066:                                             ; preds = %2063, %2060
  br label %2069

2067:                                             ; preds = %2063
  %2068 = load i32, i32* %16, align 4
  br label %2069

2069:                                             ; preds = %2067, %2066
  %2070 = phi i32 [ 0, %2066 ], [ %2068, %2067 ]
  %2071 = sext i32 %2070 to i64
  store i64 %2071, i64* %109, align 8
  %2072 = load i64, i64* %108, align 8
  %2073 = load i64, i64* %109, align 8
  %2074 = icmp ult i64 %2072, %2073
  br i1 %2074, label %2075, label %2077

2075:                                             ; preds = %2069
  %2076 = load i64, i64* %109, align 8
  br label %2079

2077:                                             ; preds = %2069
  %2078 = load i64, i64* %108, align 8
  br label %2079

2079:                                             ; preds = %2077, %2075
  %2080 = phi i64 [ %2076, %2075 ], [ %2078, %2077 ]
  store i64 %2080, i64* %110, align 8
  %2081 = load i64, i64* %110, align 8
  %2082 = load i64, i64* %20, align 8
  %2083 = load i64, i64* %23, align 8
  %2084 = sub i64 %2082, %2083
  %2085 = icmp uge i64 %2081, %2084
  br i1 %2085, label %2086, label %2087

2086:                                             ; preds = %2079
  store i64 0, i64* %10, align 8
  br label %2878

2087:                                             ; preds = %2079
  %2088 = load %struct._IO_FILE*, %struct._IO_FILE** %24, align 8
  %2089 = icmp ne %struct._IO_FILE* %2088, null
  br i1 %2089, label %2090, label %2135

2090:                                             ; preds = %2087
  %2091 = load i64, i64* %108, align 8
  %2092 = load i64, i64* %109, align 8
  %2093 = icmp ult i64 %2091, %2092
  br i1 %2093, label %2094, label %2132

2094:                                             ; preds = %2090
  %2095 = load i64, i64* %109, align 8
  %2096 = load i64, i64* %108, align 8
  %2097 = sub i64 %2095, %2096
  store i64 %2097, i64* %111, align 8
  %2098 = load i32, i32* %26, align 4
  %2099 = icmp eq i32 %2098, 48
  br i1 %2099, label %2103, label %2100

2100:                                             ; preds = %2094
  %2101 = load i32, i32* %26, align 4
  %2102 = icmp eq i32 %2101, 43
  br i1 %2102, label %2103, label %2117

2103:                                             ; preds = %2100, %2094
  br label %2104

2104:                                             ; preds = %2103
  store i64 0, i64* %112, align 8
  br label %2105

2105:                                             ; preds = %2112, %2104
  %2106 = load i64, i64* %112, align 8
  %2107 = load i64, i64* %111, align 8
  %2108 = icmp ult i64 %2106, %2107
  br i1 %2108, label %2109, label %2115

2109:                                             ; preds = %2105
  %2110 = load %struct._IO_FILE*, %struct._IO_FILE** %24, align 8
  %2111 = call i32 @fputc(i32 48, %struct._IO_FILE* %2110)
  br label %2112

2112:                                             ; preds = %2109
  %2113 = load i64, i64* %112, align 8
  %2114 = add i64 %2113, 1
  store i64 %2114, i64* %112, align 8
  br label %2105

2115:                                             ; preds = %2105
  br label %2116

2116:                                             ; preds = %2115
  br label %2131

2117:                                             ; preds = %2100
  br label %2118

2118:                                             ; preds = %2117
  store i64 0, i64* %113, align 8
  br label %2119

2119:                                             ; preds = %2126, %2118
  %2120 = load i64, i64* %113, align 8
  %2121 = load i64, i64* %111, align 8
  %2122 = icmp ult i64 %2120, %2121
  br i1 %2122, label %2123, label %2129

2123:                                             ; preds = %2119
  %2124 = load %struct._IO_FILE*, %struct._IO_FILE** %24, align 8
  %2125 = call i32 @fputc(i32 32, %struct._IO_FILE* %2124)
  br label %2126

2126:                                             ; preds = %2123
  %2127 = load i64, i64* %113, align 8
  %2128 = add i64 %2127, 1
  store i64 %2128, i64* %113, align 8
  br label %2119

2129:                                             ; preds = %2119
  br label %2130

2130:                                             ; preds = %2129
  br label %2131

2131:                                             ; preds = %2130, %2116
  br label %2132

2132:                                             ; preds = %2131, %2090
  %2133 = load %struct._IO_FILE*, %struct._IO_FILE** %24, align 8
  %2134 = call i32 @fputc(i32 10, %struct._IO_FILE* %2133)
  br label %2135

2135:                                             ; preds = %2132, %2087
  %2136 = load i64, i64* %110, align 8
  %2137 = load i64, i64* %23, align 8
  %2138 = add i64 %2137, %2136
  store i64 %2138, i64* %23, align 8
  br label %2139

2139:                                             ; preds = %2135
  br label %2872

2140:                                             ; preds = %943
  store i8 1, i8* %37, align 1
  store i32 112, i32* %41, align 4
  br label %2141

2141:                                             ; preds = %2140, %943
  %2142 = load i8, i8* %40, align 1
  %2143 = trunc i8 %2142 to i1
  br i1 %2143, label %2144, label %2145

2144:                                             ; preds = %2141
  store i8 0, i8* %38, align 1
  store i8 1, i8* %37, align 1
  br label %2145

2145:                                             ; preds = %2144, %2141
  br label %1179

2146:                                             ; preds = %943
  br label %2147

2147:                                             ; preds = %2146
  store i32 1, i32* %28, align 4
  store i8 0, i8* %31, align 1
  %2148 = load %struct.tm*, %struct.tm** %13, align 8
  %2149 = getelementptr inbounds %struct.tm, %struct.tm* %2148, i32 0, i32 4
  %2150 = load i32, i32* %2149, align 8
  %2151 = mul nsw i32 %2150, 11
  %2152 = ashr i32 %2151, 5
  %2153 = add nsw i32 %2152, 1
  store i32 %2153, i32* %30, align 4
  br label %1414

2154:                                             ; No predecessors!
  br label %2872

2155:                                             ; preds = %943
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3.107, i64 0, i64 0), i8** %34, align 8
  br label %1077

2156:                                             ; preds = %943
  br label %1179

2157:                                             ; preds = %943
  %2158 = load i32, i32* %27, align 4
  %2159 = icmp eq i32 %2158, 69
  br i1 %2159, label %2160, label %2161

2160:                                             ; preds = %2157
  br label %2743

2161:                                             ; preds = %2157
  br label %2162

2162:                                             ; preds = %2161
  store i32 2, i32* %28, align 4
  %2163 = load %struct.tm*, %struct.tm** %13, align 8
  %2164 = getelementptr inbounds %struct.tm, %struct.tm* %2163, i32 0, i32 0
  %2165 = load i32, i32* %2164, align 8
  store i32 %2165, i32* %29, align 4
  br label %1409

2166:                                             ; No predecessors!
  br label %2167

2167:                                             ; preds = %2166, %943
  %2168 = load %struct.tm*, %struct.tm** %13, align 8
  %2169 = bitcast %struct.tm* %114 to i8*
  %2170 = bitcast %struct.tm* %2168 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2169, i8* align 8 %2170, i64 56, i1 false)
  %2171 = load %struct.tm_zone*, %struct.tm_zone** %18, align 8
  %2172 = call i64 @mktime_z(%struct.tm_zone* %2171, %struct.tm* %114)
  store i64 %2172, i64* %115, align 8
  %2173 = getelementptr inbounds [23 x i8], [23 x i8]* %36, i64 0, i64 0
  %2174 = getelementptr inbounds i8, i8* %2173, i64 23
  store i8* %2174, i8** %35, align 8
  %2175 = load i64, i64* %115, align 8
  %2176 = icmp slt i64 %2175, 0
  %2177 = zext i1 %2176 to i8
  store i8 %2177, i8* %31, align 1
  br label %2178

2178:                                             ; preds = %2197, %2167
  %2179 = load i64, i64* %115, align 8
  %2180 = srem i64 %2179, 10
  %2181 = trunc i64 %2180 to i32
  store i32 %2181, i32* %116, align 4
  %2182 = load i64, i64* %115, align 8
  %2183 = sdiv i64 %2182, 10
  store i64 %2183, i64* %115, align 8
  %2184 = load i8, i8* %31, align 1
  %2185 = trunc i8 %2184 to i1
  br i1 %2185, label %2186, label %2189

2186:                                             ; preds = %2178
  %2187 = load i32, i32* %116, align 4
  %2188 = sub nsw i32 0, %2187
  br label %2191

2189:                                             ; preds = %2178
  %2190 = load i32, i32* %116, align 4
  br label %2191

2191:                                             ; preds = %2189, %2186
  %2192 = phi i32 [ %2188, %2186 ], [ %2190, %2189 ]
  %2193 = add nsw i32 %2192, 48
  %2194 = trunc i32 %2193 to i8
  %2195 = load i8*, i8** %35, align 8
  %2196 = getelementptr inbounds i8, i8* %2195, i32 -1
  store i8* %2196, i8** %35, align 8
  store i8 %2194, i8* %2196, align 1
  br label %2197

2197:                                             ; preds = %2191
  %2198 = load i64, i64* %115, align 8
  %2199 = icmp ne i64 %2198, 0
  br i1 %2199, label %2178, label %2200

2200:                                             ; preds = %2197
  store i32 1, i32* %28, align 4
  store i8 0, i8* %32, align 1
  br label %1461

2201:                                             ; preds = %943
  %2202 = load i32, i32* %27, align 4
  %2203 = icmp eq i32 %2202, 79
  br i1 %2203, label %2204, label %2205

2204:                                             ; preds = %2201
  br label %2743

2205:                                             ; preds = %2201
  br label %1179

2206:                                             ; preds = %943
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4.108, i64 0, i64 0), i8** %34, align 8
  br label %1077

2207:                                             ; preds = %943
  br label %2208

2208:                                             ; preds = %2207
  store i64 1, i64* %117, align 8
  %2209 = load i32, i32* %26, align 4
  %2210 = icmp eq i32 %2209, 45
  br i1 %2210, label %2214, label %2211

2211:                                             ; preds = %2208
  %2212 = load i32, i32* %16, align 4
  %2213 = icmp slt i32 %2212, 0
  br i1 %2213, label %2214, label %2215

2214:                                             ; preds = %2211, %2208
  br label %2217

2215:                                             ; preds = %2211
  %2216 = load i32, i32* %16, align 4
  br label %2217

2217:                                             ; preds = %2215, %2214
  %2218 = phi i32 [ 0, %2214 ], [ %2216, %2215 ]
  %2219 = sext i32 %2218 to i64
  store i64 %2219, i64* %118, align 8
  %2220 = load i64, i64* %117, align 8
  %2221 = load i64, i64* %118, align 8
  %2222 = icmp ult i64 %2220, %2221
  br i1 %2222, label %2223, label %2225

2223:                                             ; preds = %2217
  %2224 = load i64, i64* %118, align 8
  br label %2227

2225:                                             ; preds = %2217
  %2226 = load i64, i64* %117, align 8
  br label %2227

2227:                                             ; preds = %2225, %2223
  %2228 = phi i64 [ %2224, %2223 ], [ %2226, %2225 ]
  store i64 %2228, i64* %119, align 8
  %2229 = load i64, i64* %119, align 8
  %2230 = load i64, i64* %20, align 8
  %2231 = load i64, i64* %23, align 8
  %2232 = sub i64 %2230, %2231
  %2233 = icmp uge i64 %2229, %2232
  br i1 %2233, label %2234, label %2235

2234:                                             ; preds = %2227
  store i64 0, i64* %10, align 8
  br label %2878

2235:                                             ; preds = %2227
  %2236 = load %struct._IO_FILE*, %struct._IO_FILE** %24, align 8
  %2237 = icmp ne %struct._IO_FILE* %2236, null
  br i1 %2237, label %2238, label %2283

2238:                                             ; preds = %2235
  %2239 = load i64, i64* %117, align 8
  %2240 = load i64, i64* %118, align 8
  %2241 = icmp ult i64 %2239, %2240
  br i1 %2241, label %2242, label %2280

2242:                                             ; preds = %2238
  %2243 = load i64, i64* %118, align 8
  %2244 = load i64, i64* %117, align 8
  %2245 = sub i64 %2243, %2244
  store i64 %2245, i64* %120, align 8
  %2246 = load i32, i32* %26, align 4
  %2247 = icmp eq i32 %2246, 48
  br i1 %2247, label %2251, label %2248

2248:                                             ; preds = %2242
  %2249 = load i32, i32* %26, align 4
  %2250 = icmp eq i32 %2249, 43
  br i1 %2250, label %2251, label %2265

2251:                                             ; preds = %2248, %2242
  br label %2252

2252:                                             ; preds = %2251
  store i64 0, i64* %121, align 8
  br label %2253

2253:                                             ; preds = %2260, %2252
  %2254 = load i64, i64* %121, align 8
  %2255 = load i64, i64* %120, align 8
  %2256 = icmp ult i64 %2254, %2255
  br i1 %2256, label %2257, label %2263

2257:                                             ; preds = %2253
  %2258 = load %struct._IO_FILE*, %struct._IO_FILE** %24, align 8
  %2259 = call i32 @fputc(i32 48, %struct._IO_FILE* %2258)
  br label %2260

2260:                                             ; preds = %2257
  %2261 = load i64, i64* %121, align 8
  %2262 = add i64 %2261, 1
  store i64 %2262, i64* %121, align 8
  br label %2253

2263:                                             ; preds = %2253
  br label %2264

2264:                                             ; preds = %2263
  br label %2279

2265:                                             ; preds = %2248
  br label %2266

2266:                                             ; preds = %2265
  store i64 0, i64* %122, align 8
  br label %2267

2267:                                             ; preds = %2274, %2266
  %2268 = load i64, i64* %122, align 8
  %2269 = load i64, i64* %120, align 8
  %2270 = icmp ult i64 %2268, %2269
  br i1 %2270, label %2271, label %2277

2271:                                             ; preds = %2267
  %2272 = load %struct._IO_FILE*, %struct._IO_FILE** %24, align 8
  %2273 = call i32 @fputc(i32 32, %struct._IO_FILE* %2272)
  br label %2274

2274:                                             ; preds = %2271
  %2275 = load i64, i64* %122, align 8
  %2276 = add i64 %2275, 1
  store i64 %2276, i64* %122, align 8
  br label %2267

2277:                                             ; preds = %2267
  br label %2278

2278:                                             ; preds = %2277
  br label %2279

2279:                                             ; preds = %2278, %2264
  br label %2280

2280:                                             ; preds = %2279, %2238
  %2281 = load %struct._IO_FILE*, %struct._IO_FILE** %24, align 8
  %2282 = call i32 @fputc(i32 9, %struct._IO_FILE* %2281)
  br label %2283

2283:                                             ; preds = %2280, %2235
  %2284 = load i64, i64* %119, align 8
  %2285 = load i64, i64* %23, align 8
  %2286 = add i64 %2285, %2284
  store i64 %2286, i64* %23, align 8
  br label %2287

2287:                                             ; preds = %2283
  br label %2872

2288:                                             ; preds = %943
  br label %2289

2289:                                             ; preds = %2288
  store i32 1, i32* %28, align 4
  %2290 = load %struct.tm*, %struct.tm** %13, align 8
  %2291 = getelementptr inbounds %struct.tm, %struct.tm* %2290, i32 0, i32 6
  %2292 = load i32, i32* %2291, align 8
  %2293 = sub nsw i32 %2292, 1
  %2294 = add nsw i32 %2293, 7
  %2295 = srem i32 %2294, 7
  %2296 = add nsw i32 %2295, 1
  store i32 %2296, i32* %29, align 4
  br label %1409

2297:                                             ; No predecessors!
  br label %2298

2298:                                             ; preds = %2297, %943
  %2299 = load i32, i32* %27, align 4
  %2300 = icmp eq i32 %2299, 69
  br i1 %2300, label %2301, label %2302

2301:                                             ; preds = %2298
  br label %2743

2302:                                             ; preds = %2298
  br label %2303

2303:                                             ; preds = %2302
  store i32 2, i32* %28, align 4
  %2304 = load %struct.tm*, %struct.tm** %13, align 8
  %2305 = getelementptr inbounds %struct.tm, %struct.tm* %2304, i32 0, i32 7
  %2306 = load i32, i32* %2305, align 4
  %2307 = load %struct.tm*, %struct.tm** %13, align 8
  %2308 = getelementptr inbounds %struct.tm, %struct.tm* %2307, i32 0, i32 6
  %2309 = load i32, i32* %2308, align 8
  %2310 = sub nsw i32 %2306, %2309
  %2311 = add nsw i32 %2310, 7
  %2312 = sdiv i32 %2311, 7
  store i32 %2312, i32* %29, align 4
  br label %1409

2313:                                             ; No predecessors!
  br label %2314

2314:                                             ; preds = %2313, %943, %943, %943
  %2315 = load i32, i32* %27, align 4
  %2316 = icmp eq i32 %2315, 69
  br i1 %2316, label %2317, label %2318

2317:                                             ; preds = %2314
  br label %2743

2318:                                             ; preds = %2314
  %2319 = load %struct.tm*, %struct.tm** %13, align 8
  %2320 = getelementptr inbounds %struct.tm, %struct.tm* %2319, i32 0, i32 5
  %2321 = load i32, i32* %2320, align 4
  %2322 = load %struct.tm*, %struct.tm** %13, align 8
  %2323 = getelementptr inbounds %struct.tm, %struct.tm* %2322, i32 0, i32 5
  %2324 = load i32, i32* %2323, align 4
  %2325 = icmp slt i32 %2324, 0
  %2326 = zext i1 %2325 to i64
  %2327 = select i1 %2325, i32 300, i32 -100
  %2328 = add nsw i32 %2321, %2327
  store i32 %2328, i32* %123, align 4
  store i32 0, i32* %124, align 4
  %2329 = load %struct.tm*, %struct.tm** %13, align 8
  %2330 = getelementptr inbounds %struct.tm, %struct.tm* %2329, i32 0, i32 7
  %2331 = load i32, i32* %2330, align 4
  %2332 = load %struct.tm*, %struct.tm** %13, align 8
  %2333 = getelementptr inbounds %struct.tm, %struct.tm* %2332, i32 0, i32 6
  %2334 = load i32, i32* %2333, align 8
  %2335 = call i32 @iso_week_days(i32 %2331, i32 %2334)
  store i32 %2335, i32* %125, align 4
  %2336 = load i32, i32* %125, align 4
  %2337 = icmp slt i32 %2336, 0
  br i1 %2337, label %2338, label %2367

2338:                                             ; preds = %2318
  store i32 -1, i32* %124, align 4
  %2339 = load %struct.tm*, %struct.tm** %13, align 8
  %2340 = getelementptr inbounds %struct.tm, %struct.tm* %2339, i32 0, i32 7
  %2341 = load i32, i32* %2340, align 4
  %2342 = load i32, i32* %123, align 4
  %2343 = sub nsw i32 %2342, 1
  %2344 = srem i32 %2343, 4
  %2345 = icmp eq i32 %2344, 0
  br i1 %2345, label %2346, label %2358

2346:                                             ; preds = %2338
  %2347 = load i32, i32* %123, align 4
  %2348 = sub nsw i32 %2347, 1
  %2349 = srem i32 %2348, 100
  %2350 = icmp ne i32 %2349, 0
  br i1 %2350, label %2356, label %2351

2351:                                             ; preds = %2346
  %2352 = load i32, i32* %123, align 4
  %2353 = sub nsw i32 %2352, 1
  %2354 = srem i32 %2353, 400
  %2355 = icmp eq i32 %2354, 0
  br label %2356

2356:                                             ; preds = %2351, %2346
  %2357 = phi i1 [ true, %2346 ], [ %2355, %2351 ]
  br label %2358

2358:                                             ; preds = %2356, %2338
  %2359 = phi i1 [ false, %2338 ], [ %2357, %2356 ]
  %2360 = zext i1 %2359 to i32
  %2361 = add nsw i32 365, %2360
  %2362 = add nsw i32 %2341, %2361
  %2363 = load %struct.tm*, %struct.tm** %13, align 8
  %2364 = getelementptr inbounds %struct.tm, %struct.tm* %2363, i32 0, i32 6
  %2365 = load i32, i32* %2364, align 8
  %2366 = call i32 @iso_week_days(i32 %2362, i32 %2365)
  store i32 %2366, i32* %125, align 4
  br label %2398

2367:                                             ; preds = %2318
  %2368 = load %struct.tm*, %struct.tm** %13, align 8
  %2369 = getelementptr inbounds %struct.tm, %struct.tm* %2368, i32 0, i32 7
  %2370 = load i32, i32* %2369, align 4
  %2371 = load i32, i32* %123, align 4
  %2372 = srem i32 %2371, 4
  %2373 = icmp eq i32 %2372, 0
  br i1 %2373, label %2374, label %2384

2374:                                             ; preds = %2367
  %2375 = load i32, i32* %123, align 4
  %2376 = srem i32 %2375, 100
  %2377 = icmp ne i32 %2376, 0
  br i1 %2377, label %2382, label %2378

2378:                                             ; preds = %2374
  %2379 = load i32, i32* %123, align 4
  %2380 = srem i32 %2379, 400
  %2381 = icmp eq i32 %2380, 0
  br label %2382

2382:                                             ; preds = %2378, %2374
  %2383 = phi i1 [ true, %2374 ], [ %2381, %2378 ]
  br label %2384

2384:                                             ; preds = %2382, %2367
  %2385 = phi i1 [ false, %2367 ], [ %2383, %2382 ]
  %2386 = zext i1 %2385 to i32
  %2387 = add nsw i32 365, %2386
  %2388 = sub nsw i32 %2370, %2387
  %2389 = load %struct.tm*, %struct.tm** %13, align 8
  %2390 = getelementptr inbounds %struct.tm, %struct.tm* %2389, i32 0, i32 6
  %2391 = load i32, i32* %2390, align 8
  %2392 = call i32 @iso_week_days(i32 %2388, i32 %2391)
  store i32 %2392, i32* %126, align 4
  %2393 = load i32, i32* %126, align 4
  %2394 = icmp sle i32 0, %2393
  br i1 %2394, label %2395, label %2397

2395:                                             ; preds = %2384
  store i32 1, i32* %124, align 4
  %2396 = load i32, i32* %126, align 4
  store i32 %2396, i32* %125, align 4
  br label %2397

2397:                                             ; preds = %2395, %2384
  br label %2398

2398:                                             ; preds = %2397, %2358
  %2399 = load i8*, i8** %25, align 8
  %2400 = load i8, i8* %2399, align 1
  %2401 = sext i8 %2400 to i32
  switch i32 %2401, label %2449 [
    i32 103, label %2402
    i32 71, label %2433
  ]

2402:                                             ; preds = %2398
  %2403 = load %struct.tm*, %struct.tm** %13, align 8
  %2404 = getelementptr inbounds %struct.tm, %struct.tm* %2403, i32 0, i32 5
  %2405 = load i32, i32* %2404, align 4
  %2406 = srem i32 %2405, 100
  %2407 = load i32, i32* %124, align 4
  %2408 = add nsw i32 %2406, %2407
  %2409 = srem i32 %2408, 100
  store i32 %2409, i32* %127, align 4
  br label %2410

2410:                                             ; preds = %2402
  store i32 2, i32* %28, align 4
  store i8 0, i8* %31, align 1
  %2411 = load i32, i32* %127, align 4
  %2412 = icmp sle i32 0, %2411
  br i1 %2412, label %2413, label %2415

2413:                                             ; preds = %2410
  %2414 = load i32, i32* %127, align 4
  br label %2430

2415:                                             ; preds = %2410
  %2416 = load %struct.tm*, %struct.tm** %13, align 8
  %2417 = getelementptr inbounds %struct.tm, %struct.tm* %2416, i32 0, i32 5
  %2418 = load i32, i32* %2417, align 4
  %2419 = load i32, i32* %124, align 4
  %2420 = sub nsw i32 -1900, %2419
  %2421 = icmp slt i32 %2418, %2420
  br i1 %2421, label %2422, label %2425

2422:                                             ; preds = %2415
  %2423 = load i32, i32* %127, align 4
  %2424 = sub nsw i32 0, %2423
  br label %2428

2425:                                             ; preds = %2415
  %2426 = load i32, i32* %127, align 4
  %2427 = add nsw i32 %2426, 100
  br label %2428

2428:                                             ; preds = %2425, %2422
  %2429 = phi i32 [ %2424, %2422 ], [ %2427, %2425 ]
  br label %2430

2430:                                             ; preds = %2428, %2413
  %2431 = phi i32 [ %2414, %2413 ], [ %2429, %2428 ]
  store i32 %2431, i32* %30, align 4
  br label %1380

2432:                                             ; No predecessors!
  br label %2433

2433:                                             ; preds = %2432, %2398
  br label %2434

2434:                                             ; preds = %2433
  store i32 4, i32* %28, align 4
  %2435 = load %struct.tm*, %struct.tm** %13, align 8
  %2436 = getelementptr inbounds %struct.tm, %struct.tm* %2435, i32 0, i32 5
  %2437 = load i32, i32* %2436, align 4
  %2438 = load i32, i32* %124, align 4
  %2439 = sub nsw i32 -1900, %2438
  %2440 = icmp slt i32 %2437, %2439
  %2441 = zext i1 %2440 to i8
  store i8 %2441, i8* %31, align 1
  %2442 = load %struct.tm*, %struct.tm** %13, align 8
  %2443 = getelementptr inbounds %struct.tm, %struct.tm* %2442, i32 0, i32 5
  %2444 = load i32, i32* %2443, align 4
  %2445 = add i32 %2444, 1900
  %2446 = load i32, i32* %124, align 4
  %2447 = add i32 %2445, %2446
  store i32 %2447, i32* %30, align 4
  br label %1380

2448:                                             ; No predecessors!
  br label %2449

2449:                                             ; preds = %2448, %2398
  br label %2450

2450:                                             ; preds = %2449
  store i32 2, i32* %28, align 4
  %2451 = load i32, i32* %125, align 4
  %2452 = sdiv i32 %2451, 7
  %2453 = add nsw i32 %2452, 1
  store i32 %2453, i32* %29, align 4
  br label %1409

2454:                                             ; No predecessors!
  br label %2455

2455:                                             ; preds = %2454
  br label %2456

2456:                                             ; preds = %2455, %943
  %2457 = load i32, i32* %27, align 4
  %2458 = icmp eq i32 %2457, 69
  br i1 %2458, label %2459, label %2460

2459:                                             ; preds = %2456
  br label %2743

2460:                                             ; preds = %2456
  br label %2461

2461:                                             ; preds = %2460
  store i32 2, i32* %28, align 4
  %2462 = load %struct.tm*, %struct.tm** %13, align 8
  %2463 = getelementptr inbounds %struct.tm, %struct.tm* %2462, i32 0, i32 7
  %2464 = load i32, i32* %2463, align 4
  %2465 = load %struct.tm*, %struct.tm** %13, align 8
  %2466 = getelementptr inbounds %struct.tm, %struct.tm* %2465, i32 0, i32 6
  %2467 = load i32, i32* %2466, align 8
  %2468 = sub nsw i32 %2467, 1
  %2469 = add nsw i32 %2468, 7
  %2470 = srem i32 %2469, 7
  %2471 = sub nsw i32 %2464, %2470
  %2472 = add nsw i32 %2471, 7
  %2473 = sdiv i32 %2472, 7
  store i32 %2473, i32* %29, align 4
  br label %1409

2474:                                             ; No predecessors!
  br label %2475

2475:                                             ; preds = %2474, %943
  %2476 = load i32, i32* %27, align 4
  %2477 = icmp eq i32 %2476, 69
  br i1 %2477, label %2478, label %2479

2478:                                             ; preds = %2475
  br label %2743

2479:                                             ; preds = %2475
  br label %2480

2480:                                             ; preds = %2479
  store i32 1, i32* %28, align 4
  %2481 = load %struct.tm*, %struct.tm** %13, align 8
  %2482 = getelementptr inbounds %struct.tm, %struct.tm* %2481, i32 0, i32 6
  %2483 = load i32, i32* %2482, align 8
  store i32 %2483, i32* %29, align 4
  br label %1409

2484:                                             ; No predecessors!
  br label %2485

2485:                                             ; preds = %2484, %943
  %2486 = load i32, i32* %27, align 4
  %2487 = icmp eq i32 %2486, 69
  br i1 %2487, label %2488, label %2489

2488:                                             ; preds = %2485
  br label %1179

2489:                                             ; preds = %2485
  %2490 = load i32, i32* %27, align 4
  %2491 = icmp eq i32 %2490, 79
  br i1 %2491, label %2492, label %2493

2492:                                             ; preds = %2489
  br label %2743

2493:                                             ; preds = %2489
  br label %2494

2494:                                             ; preds = %2493
  store i32 4, i32* %28, align 4
  %2495 = load %struct.tm*, %struct.tm** %13, align 8
  %2496 = getelementptr inbounds %struct.tm, %struct.tm* %2495, i32 0, i32 5
  %2497 = load i32, i32* %2496, align 4
  %2498 = icmp slt i32 %2497, -1900
  %2499 = zext i1 %2498 to i8
  store i8 %2499, i8* %31, align 1
  %2500 = load %struct.tm*, %struct.tm** %13, align 8
  %2501 = getelementptr inbounds %struct.tm, %struct.tm* %2500, i32 0, i32 5
  %2502 = load i32, i32* %2501, align 4
  %2503 = add i32 %2502, 1900
  store i32 %2503, i32* %30, align 4
  br label %1380

2504:                                             ; No predecessors!
  br label %2505

2505:                                             ; preds = %2504, %943
  %2506 = load i32, i32* %27, align 4
  %2507 = icmp eq i32 %2506, 69
  br i1 %2507, label %2508, label %2509

2508:                                             ; preds = %2505
  br label %1179

2509:                                             ; preds = %2505
  %2510 = load %struct.tm*, %struct.tm** %13, align 8
  %2511 = getelementptr inbounds %struct.tm, %struct.tm* %2510, i32 0, i32 5
  %2512 = load i32, i32* %2511, align 4
  %2513 = srem i32 %2512, 100
  store i32 %2513, i32* %128, align 4
  %2514 = load i32, i32* %128, align 4
  %2515 = icmp slt i32 %2514, 0
  br i1 %2515, label %2516, label %2529

2516:                                             ; preds = %2509
  %2517 = load %struct.tm*, %struct.tm** %13, align 8
  %2518 = getelementptr inbounds %struct.tm, %struct.tm* %2517, i32 0, i32 5
  %2519 = load i32, i32* %2518, align 4
  %2520 = icmp slt i32 %2519, -1900
  br i1 %2520, label %2521, label %2524

2521:                                             ; preds = %2516
  %2522 = load i32, i32* %128, align 4
  %2523 = sub nsw i32 0, %2522
  br label %2527

2524:                                             ; preds = %2516
  %2525 = load i32, i32* %128, align 4
  %2526 = add nsw i32 %2525, 100
  br label %2527

2527:                                             ; preds = %2524, %2521
  %2528 = phi i32 [ %2523, %2521 ], [ %2526, %2524 ]
  store i32 %2528, i32* %128, align 4
  br label %2529

2529:                                             ; preds = %2527, %2509
  br label %2530

2530:                                             ; preds = %2529
  store i32 2, i32* %28, align 4
  store i8 0, i8* %31, align 1
  %2531 = load i32, i32* %128, align 4
  store i32 %2531, i32* %30, align 4
  br label %1380

2532:                                             ; No predecessors!
  br label %2533

2533:                                             ; preds = %2532, %943
  %2534 = load i8, i8* %40, align 1
  %2535 = trunc i8 %2534 to i1
  br i1 %2535, label %2536, label %2537

2536:                                             ; preds = %2533
  store i8 0, i8* %38, align 1
  store i8 1, i8* %37, align 1
  br label %2537

2537:                                             ; preds = %2536, %2533
  br label %2538

2538:                                             ; preds = %2537
  %2539 = load i8*, i8** %22, align 8
  %2540 = call i64 @strlen(i8* %2539) #13
  store i64 %2540, i64* %129, align 8
  %2541 = load i32, i32* %26, align 4
  %2542 = icmp eq i32 %2541, 45
  br i1 %2542, label %2546, label %2543

2543:                                             ; preds = %2538
  %2544 = load i32, i32* %16, align 4
  %2545 = icmp slt i32 %2544, 0
  br i1 %2545, label %2546, label %2547

2546:                                             ; preds = %2543, %2538
  br label %2549

2547:                                             ; preds = %2543
  %2548 = load i32, i32* %16, align 4
  br label %2549

2549:                                             ; preds = %2547, %2546
  %2550 = phi i32 [ 0, %2546 ], [ %2548, %2547 ]
  %2551 = sext i32 %2550 to i64
  store i64 %2551, i64* %130, align 8
  %2552 = load i64, i64* %129, align 8
  %2553 = load i64, i64* %130, align 8
  %2554 = icmp ult i64 %2552, %2553
  br i1 %2554, label %2555, label %2557

2555:                                             ; preds = %2549
  %2556 = load i64, i64* %130, align 8
  br label %2559

2557:                                             ; preds = %2549
  %2558 = load i64, i64* %129, align 8
  br label %2559

2559:                                             ; preds = %2557, %2555
  %2560 = phi i64 [ %2556, %2555 ], [ %2558, %2557 ]
  store i64 %2560, i64* %131, align 8
  %2561 = load i64, i64* %131, align 8
  %2562 = load i64, i64* %20, align 8
  %2563 = load i64, i64* %23, align 8
  %2564 = sub i64 %2562, %2563
  %2565 = icmp uge i64 %2561, %2564
  br i1 %2565, label %2566, label %2567

2566:                                             ; preds = %2559
  store i64 0, i64* %10, align 8
  br label %2878

2567:                                             ; preds = %2559
  %2568 = load %struct._IO_FILE*, %struct._IO_FILE** %24, align 8
  %2569 = icmp ne %struct._IO_FILE* %2568, null
  br i1 %2569, label %2570, label %2635

2570:                                             ; preds = %2567
  %2571 = load i64, i64* %129, align 8
  %2572 = load i64, i64* %130, align 8
  %2573 = icmp ult i64 %2571, %2572
  br i1 %2573, label %2574, label %2612

2574:                                             ; preds = %2570
  %2575 = load i64, i64* %130, align 8
  %2576 = load i64, i64* %129, align 8
  %2577 = sub i64 %2575, %2576
  store i64 %2577, i64* %132, align 8
  %2578 = load i32, i32* %26, align 4
  %2579 = icmp eq i32 %2578, 48
  br i1 %2579, label %2583, label %2580

2580:                                             ; preds = %2574
  %2581 = load i32, i32* %26, align 4
  %2582 = icmp eq i32 %2581, 43
  br i1 %2582, label %2583, label %2597

2583:                                             ; preds = %2580, %2574
  br label %2584

2584:                                             ; preds = %2583
  store i64 0, i64* %133, align 8
  br label %2585

2585:                                             ; preds = %2592, %2584
  %2586 = load i64, i64* %133, align 8
  %2587 = load i64, i64* %132, align 8
  %2588 = icmp ult i64 %2586, %2587
  br i1 %2588, label %2589, label %2595

2589:                                             ; preds = %2585
  %2590 = load %struct._IO_FILE*, %struct._IO_FILE** %24, align 8
  %2591 = call i32 @fputc(i32 48, %struct._IO_FILE* %2590)
  br label %2592

2592:                                             ; preds = %2589
  %2593 = load i64, i64* %133, align 8
  %2594 = add i64 %2593, 1
  store i64 %2594, i64* %133, align 8
  br label %2585

2595:                                             ; preds = %2585
  br label %2596

2596:                                             ; preds = %2595
  br label %2611

2597:                                             ; preds = %2580
  br label %2598

2598:                                             ; preds = %2597
  store i64 0, i64* %134, align 8
  br label %2599

2599:                                             ; preds = %2606, %2598
  %2600 = load i64, i64* %134, align 8
  %2601 = load i64, i64* %132, align 8
  %2602 = icmp ult i64 %2600, %2601
  br i1 %2602, label %2603, label %2609

2603:                                             ; preds = %2599
  %2604 = load %struct._IO_FILE*, %struct._IO_FILE** %24, align 8
  %2605 = call i32 @fputc(i32 32, %struct._IO_FILE* %2604)
  br label %2606

2606:                                             ; preds = %2603
  %2607 = load i64, i64* %134, align 8
  %2608 = add i64 %2607, 1
  store i64 %2608, i64* %134, align 8
  br label %2599

2609:                                             ; preds = %2599
  br label %2610

2610:                                             ; preds = %2609
  br label %2611

2611:                                             ; preds = %2610, %2596
  br label %2612

2612:                                             ; preds = %2611, %2570
  br label %2613

2613:                                             ; preds = %2612
  %2614 = load i8, i8* %37, align 1
  %2615 = trunc i8 %2614 to i1
  br i1 %2615, label %2616, label %2620

2616:                                             ; preds = %2613
  %2617 = load %struct._IO_FILE*, %struct._IO_FILE** %24, align 8
  %2618 = load i8*, i8** %22, align 8
  %2619 = load i64, i64* %129, align 8
  call void @fwrite_lowcase(%struct._IO_FILE* %2617, i8* %2618, i64 %2619)
  br label %2633

2620:                                             ; preds = %2613
  %2621 = load i8, i8* %38, align 1
  %2622 = trunc i8 %2621 to i1
  br i1 %2622, label %2623, label %2627

2623:                                             ; preds = %2620
  %2624 = load %struct._IO_FILE*, %struct._IO_FILE** %24, align 8
  %2625 = load i8*, i8** %22, align 8
  %2626 = load i64, i64* %129, align 8
  call void @fwrite_uppcase(%struct._IO_FILE* %2624, i8* %2625, i64 %2626)
  br label %2632

2627:                                             ; preds = %2620
  %2628 = load i8*, i8** %22, align 8
  %2629 = load i64, i64* %129, align 8
  %2630 = load %struct._IO_FILE*, %struct._IO_FILE** %24, align 8
  %2631 = call i64 @fwrite(i8* %2628, i64 %2629, i64 1, %struct._IO_FILE* %2630)
  br label %2632

2632:                                             ; preds = %2627, %2623
  br label %2633

2633:                                             ; preds = %2632, %2616
  br label %2634

2634:                                             ; preds = %2633
  br label %2635

2635:                                             ; preds = %2634, %2567
  %2636 = load i64, i64* %131, align 8
  %2637 = load i64, i64* %23, align 8
  %2638 = add i64 %2637, %2636
  store i64 %2638, i64* %23, align 8
  br label %2639

2639:                                             ; preds = %2635
  br label %2872

2640:                                             ; preds = %943
  store i64 1, i64* %39, align 8
  br label %2641

2641:                                             ; preds = %2649, %2640
  %2642 = load i8*, i8** %25, align 8
  %2643 = load i64, i64* %39, align 8
  %2644 = getelementptr inbounds i8, i8* %2642, i64 %2643
  %2645 = load i8, i8* %2644, align 1
  %2646 = sext i8 %2645 to i32
  %2647 = icmp eq i32 %2646, 58
  br i1 %2647, label %2648, label %2652

2648:                                             ; preds = %2641
  br label %2649

2649:                                             ; preds = %2648
  %2650 = load i64, i64* %39, align 8
  %2651 = add i64 %2650, 1
  store i64 %2651, i64* %39, align 8
  br label %2641

2652:                                             ; preds = %2641
  %2653 = load i8*, i8** %25, align 8
  %2654 = load i64, i64* %39, align 8
  %2655 = getelementptr inbounds i8, i8* %2653, i64 %2654
  %2656 = load i8, i8* %2655, align 1
  %2657 = sext i8 %2656 to i32
  %2658 = icmp ne i32 %2657, 122
  br i1 %2658, label %2659, label %2660

2659:                                             ; preds = %2652
  br label %2743

2660:                                             ; preds = %2652
  %2661 = load i64, i64* %39, align 8
  %2662 = load i8*, i8** %25, align 8
  %2663 = getelementptr inbounds i8, i8* %2662, i64 %2661
  store i8* %2663, i8** %25, align 8
  br label %2665

2664:                                             ; preds = %943
  store i64 0, i64* %39, align 8
  br label %2665

2665:                                             ; preds = %2664, %2660
  %2666 = load %struct.tm*, %struct.tm** %13, align 8
  %2667 = getelementptr inbounds %struct.tm, %struct.tm* %2666, i32 0, i32 8
  %2668 = load i32, i32* %2667, align 8
  %2669 = icmp slt i32 %2668, 0
  br i1 %2669, label %2670, label %2671

2670:                                             ; preds = %2665
  br label %2872

2671:                                             ; preds = %2665
  %2672 = load %struct.tm*, %struct.tm** %13, align 8
  %2673 = getelementptr inbounds %struct.tm, %struct.tm* %2672, i32 0, i32 9
  %2674 = load i64, i64* %2673, align 8
  %2675 = trunc i64 %2674 to i32
  store i32 %2675, i32* %135, align 4
  %2676 = load i32, i32* %135, align 4
  %2677 = icmp slt i32 %2676, 0
  br i1 %2677, label %2688, label %2678

2678:                                             ; preds = %2671
  %2679 = load i32, i32* %135, align 4
  %2680 = icmp eq i32 %2679, 0
  br i1 %2680, label %2681, label %2686

2681:                                             ; preds = %2678
  %2682 = load i8*, i8** %22, align 8
  %2683 = load i8, i8* %2682, align 1
  %2684 = sext i8 %2683 to i32
  %2685 = icmp eq i32 %2684, 45
  br label %2686

2686:                                             ; preds = %2681, %2678
  %2687 = phi i1 [ false, %2678 ], [ %2685, %2681 ]
  br label %2688

2688:                                             ; preds = %2686, %2671
  %2689 = phi i1 [ true, %2671 ], [ %2687, %2686 ]
  %2690 = zext i1 %2689 to i8
  store i8 %2690, i8* %31, align 1
  %2691 = load i32, i32* %135, align 4
  %2692 = sdiv i32 %2691, 60
  %2693 = sdiv i32 %2692, 60
  store i32 %2693, i32* %136, align 4
  %2694 = load i32, i32* %135, align 4
  %2695 = sdiv i32 %2694, 60
  %2696 = srem i32 %2695, 60
  store i32 %2696, i32* %137, align 4
  %2697 = load i32, i32* %135, align 4
  %2698 = srem i32 %2697, 60
  store i32 %2698, i32* %138, align 4
  %2699 = load i64, i64* %39, align 8
  switch i64 %2699, label %2738 [
    i64 0, label %2700
    i64 1, label %2707
    i64 2, label %2715
    i64 3, label %2726
  ]

2700:                                             ; preds = %2688
  br label %2701

2701:                                             ; preds = %2700
  store i32 5, i32* %28, align 4
  store i32 0, i32* %33, align 4
  %2702 = load i32, i32* %136, align 4
  %2703 = mul nsw i32 %2702, 100
  %2704 = load i32, i32* %137, align 4
  %2705 = add nsw i32 %2703, %2704
  store i32 %2705, i32* %30, align 4
  br label %1379

2706:                                             ; No predecessors!
  br label %2707

2707:                                             ; preds = %2706, %2688
  br label %2708

2708:                                             ; preds = %2733, %2707
  br label %2709

2709:                                             ; preds = %2708
  store i32 6, i32* %28, align 4
  store i32 4, i32* %33, align 4
  %2710 = load i32, i32* %136, align 4
  %2711 = mul nsw i32 %2710, 100
  %2712 = load i32, i32* %137, align 4
  %2713 = add nsw i32 %2711, %2712
  store i32 %2713, i32* %30, align 4
  br label %1379

2714:                                             ; No predecessors!
  br label %2715

2715:                                             ; preds = %2714, %2688
  br label %2716

2716:                                             ; preds = %2729, %2715
  br label %2717

2717:                                             ; preds = %2716
  store i32 9, i32* %28, align 4
  store i32 20, i32* %33, align 4
  %2718 = load i32, i32* %136, align 4
  %2719 = mul nsw i32 %2718, 10000
  %2720 = load i32, i32* %137, align 4
  %2721 = mul nsw i32 %2720, 100
  %2722 = add nsw i32 %2719, %2721
  %2723 = load i32, i32* %138, align 4
  %2724 = add nsw i32 %2722, %2723
  store i32 %2724, i32* %30, align 4
  br label %1379

2725:                                             ; No predecessors!
  br label %2726

2726:                                             ; preds = %2725, %2688
  %2727 = load i32, i32* %138, align 4
  %2728 = icmp ne i32 %2727, 0
  br i1 %2728, label %2729, label %2730

2729:                                             ; preds = %2726
  br label %2716

2730:                                             ; preds = %2726
  %2731 = load i32, i32* %137, align 4
  %2732 = icmp ne i32 %2731, 0
  br i1 %2732, label %2733, label %2734

2733:                                             ; preds = %2730
  br label %2708

2734:                                             ; preds = %2730
  br label %2735

2735:                                             ; preds = %2734
  store i32 3, i32* %28, align 4
  store i32 0, i32* %33, align 4
  %2736 = load i32, i32* %136, align 4
  store i32 %2736, i32* %30, align 4
  br label %1379

2737:                                             ; No predecessors!
  br label %2738

2738:                                             ; preds = %2737, %2688
  br label %2743

2739:                                             ; preds = %943
  %2740 = load i8*, i8** %25, align 8
  %2741 = getelementptr inbounds i8, i8* %2740, i32 -1
  store i8* %2741, i8** %25, align 8
  br label %2742

2742:                                             ; preds = %2739, %943
  br label %2743

2743:                                             ; preds = %2742, %2738, %2659, %2492, %2478, %2459, %2317, %2301, %2204, %2160, %1825, %1808, %1798, %1782, %1774, %1764, %1756, %1746, %1727, %1372, %1362, %1357, %1352, %1075, %1066, %1061, %1048, %1039, %951
  store i32 1, i32* %139, align 4
  br label %2744

2744:                                             ; preds = %2754, %2743
  %2745 = load i8*, i8** %25, align 8
  %2746 = load i32, i32* %139, align 4
  %2747 = sub nsw i32 1, %2746
  %2748 = sext i32 %2747 to i64
  %2749 = getelementptr inbounds i8, i8* %2745, i64 %2748
  %2750 = load i8, i8* %2749, align 1
  %2751 = sext i8 %2750 to i32
  %2752 = icmp ne i32 %2751, 37
  br i1 %2752, label %2753, label %2757

2753:                                             ; preds = %2744
  br label %2754

2754:                                             ; preds = %2753
  %2755 = load i32, i32* %139, align 4
  %2756 = add nsw i32 %2755, 1
  store i32 %2756, i32* %139, align 4
  br label %2744

2757:                                             ; preds = %2744
  br label %2758

2758:                                             ; preds = %2757
  %2759 = load i32, i32* %139, align 4
  %2760 = sext i32 %2759 to i64
  store i64 %2760, i64* %140, align 8
  %2761 = load i32, i32* %26, align 4
  %2762 = icmp eq i32 %2761, 45
  br i1 %2762, label %2766, label %2763

2763:                                             ; preds = %2758
  %2764 = load i32, i32* %16, align 4
  %2765 = icmp slt i32 %2764, 0
  br i1 %2765, label %2766, label %2767

2766:                                             ; preds = %2763, %2758
  br label %2769

2767:                                             ; preds = %2763
  %2768 = load i32, i32* %16, align 4
  br label %2769

2769:                                             ; preds = %2767, %2766
  %2770 = phi i32 [ 0, %2766 ], [ %2768, %2767 ]
  %2771 = sext i32 %2770 to i64
  store i64 %2771, i64* %141, align 8
  %2772 = load i64, i64* %140, align 8
  %2773 = load i64, i64* %141, align 8
  %2774 = icmp ult i64 %2772, %2773
  br i1 %2774, label %2775, label %2777

2775:                                             ; preds = %2769
  %2776 = load i64, i64* %141, align 8
  br label %2779

2777:                                             ; preds = %2769
  %2778 = load i64, i64* %140, align 8
  br label %2779

2779:                                             ; preds = %2777, %2775
  %2780 = phi i64 [ %2776, %2775 ], [ %2778, %2777 ]
  store i64 %2780, i64* %142, align 8
  %2781 = load i64, i64* %142, align 8
  %2782 = load i64, i64* %20, align 8
  %2783 = load i64, i64* %23, align 8
  %2784 = sub i64 %2782, %2783
  %2785 = icmp uge i64 %2781, %2784
  br i1 %2785, label %2786, label %2787

2786:                                             ; preds = %2779
  store i64 0, i64* %10, align 8
  br label %2878

2787:                                             ; preds = %2779
  %2788 = load %struct._IO_FILE*, %struct._IO_FILE** %24, align 8
  %2789 = icmp ne %struct._IO_FILE* %2788, null
  br i1 %2789, label %2790, label %2867

2790:                                             ; preds = %2787
  %2791 = load i64, i64* %140, align 8
  %2792 = load i64, i64* %141, align 8
  %2793 = icmp ult i64 %2791, %2792
  br i1 %2793, label %2794, label %2832

2794:                                             ; preds = %2790
  %2795 = load i64, i64* %141, align 8
  %2796 = load i64, i64* %140, align 8
  %2797 = sub i64 %2795, %2796
  store i64 %2797, i64* %143, align 8
  %2798 = load i32, i32* %26, align 4
  %2799 = icmp eq i32 %2798, 48
  br i1 %2799, label %2803, label %2800

2800:                                             ; preds = %2794
  %2801 = load i32, i32* %26, align 4
  %2802 = icmp eq i32 %2801, 43
  br i1 %2802, label %2803, label %2817

2803:                                             ; preds = %2800, %2794
  br label %2804

2804:                                             ; preds = %2803
  store i64 0, i64* %144, align 8
  br label %2805

2805:                                             ; preds = %2812, %2804
  %2806 = load i64, i64* %144, align 8
  %2807 = load i64, i64* %143, align 8
  %2808 = icmp ult i64 %2806, %2807
  br i1 %2808, label %2809, label %2815

2809:                                             ; preds = %2805
  %2810 = load %struct._IO_FILE*, %struct._IO_FILE** %24, align 8
  %2811 = call i32 @fputc(i32 48, %struct._IO_FILE* %2810)
  br label %2812

2812:                                             ; preds = %2809
  %2813 = load i64, i64* %144, align 8
  %2814 = add i64 %2813, 1
  store i64 %2814, i64* %144, align 8
  br label %2805

2815:                                             ; preds = %2805
  br label %2816

2816:                                             ; preds = %2815
  br label %2831

2817:                                             ; preds = %2800
  br label %2818

2818:                                             ; preds = %2817
  store i64 0, i64* %145, align 8
  br label %2819

2819:                                             ; preds = %2826, %2818
  %2820 = load i64, i64* %145, align 8
  %2821 = load i64, i64* %143, align 8
  %2822 = icmp ult i64 %2820, %2821
  br i1 %2822, label %2823, label %2829

2823:                                             ; preds = %2819
  %2824 = load %struct._IO_FILE*, %struct._IO_FILE** %24, align 8
  %2825 = call i32 @fputc(i32 32, %struct._IO_FILE* %2824)
  br label %2826

2826:                                             ; preds = %2823
  %2827 = load i64, i64* %145, align 8
  %2828 = add i64 %2827, 1
  store i64 %2828, i64* %145, align 8
  br label %2819

2829:                                             ; preds = %2819
  br label %2830

2830:                                             ; preds = %2829
  br label %2831

2831:                                             ; preds = %2830, %2816
  br label %2832

2832:                                             ; preds = %2831, %2790
  br label %2833

2833:                                             ; preds = %2832
  %2834 = load i8, i8* %37, align 1
  %2835 = trunc i8 %2834 to i1
  br i1 %2835, label %2836, label %2844

2836:                                             ; preds = %2833
  %2837 = load %struct._IO_FILE*, %struct._IO_FILE** %24, align 8
  %2838 = load i8*, i8** %25, align 8
  %2839 = load i32, i32* %139, align 4
  %2840 = sub nsw i32 1, %2839
  %2841 = sext i32 %2840 to i64
  %2842 = getelementptr inbounds i8, i8* %2838, i64 %2841
  %2843 = load i64, i64* %140, align 8
  call void @fwrite_lowcase(%struct._IO_FILE* %2837, i8* %2842, i64 %2843)
  br label %2865

2844:                                             ; preds = %2833
  %2845 = load i8, i8* %38, align 1
  %2846 = trunc i8 %2845 to i1
  br i1 %2846, label %2847, label %2855

2847:                                             ; preds = %2844
  %2848 = load %struct._IO_FILE*, %struct._IO_FILE** %24, align 8
  %2849 = load i8*, i8** %25, align 8
  %2850 = load i32, i32* %139, align 4
  %2851 = sub nsw i32 1, %2850
  %2852 = sext i32 %2851 to i64
  %2853 = getelementptr inbounds i8, i8* %2849, i64 %2852
  %2854 = load i64, i64* %140, align 8
  call void @fwrite_uppcase(%struct._IO_FILE* %2848, i8* %2853, i64 %2854)
  br label %2864

2855:                                             ; preds = %2844
  %2856 = load i8*, i8** %25, align 8
  %2857 = load i32, i32* %139, align 4
  %2858 = sub nsw i32 1, %2857
  %2859 = sext i32 %2858 to i64
  %2860 = getelementptr inbounds i8, i8* %2856, i64 %2859
  %2861 = load i64, i64* %140, align 8
  %2862 = load %struct._IO_FILE*, %struct._IO_FILE** %24, align 8
  %2863 = call i64 @fwrite(i8* %2860, i64 %2861, i64 1, %struct._IO_FILE* %2862)
  br label %2864

2864:                                             ; preds = %2855, %2847
  br label %2865

2865:                                             ; preds = %2864, %2836
  br label %2866

2866:                                             ; preds = %2865
  br label %2867

2867:                                             ; preds = %2866, %2787
  %2868 = load i64, i64* %142, align 8
  %2869 = load i64, i64* %23, align 8
  %2870 = add i64 %2869, %2868
  store i64 %2870, i64* %23, align 8
  br label %2871

2871:                                             ; preds = %2867
  br label %2872

2872:                                             ; preds = %2871, %2670, %2639, %2287, %2154, %2139, %2058, %1723, %1310, %1178, %1035
  br label %2873

2873:                                             ; preds = %2872, %268
  store i32 -1, i32* %16, align 4
  %2874 = load i8*, i8** %25, align 8
  %2875 = getelementptr inbounds i8, i8* %2874, i32 1
  store i8* %2875, i8** %25, align 8
  br label %170

2876:                                             ; preds = %170
  %2877 = load i64, i64* %23, align 8
  store i64 %2877, i64* %10, align 8
  br label %2878

2878:                                             ; preds = %2876, %2786, %2566, %2234, %2086, %2007, %1903, %1650, %1563, %1233, %1116, %979, %212
  %2879 = load i64, i64* %10, align 8
  ret i64 %2879
}

declare dso_local i32 @fputc(i32, %struct._IO_FILE*) #2

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.sadd.with.overflow.i32(i32, i32) #10

; Function Attrs: nounwind
declare dso_local i64 @strftime(i8*, i64, i8*, %struct.tm*) #1

; Function Attrs: noinline nounwind optnone uwtable
define internal void @fwrite_lowcase(%struct._IO_FILE*, i8*, i64) #3 {
  %4 = alloca %struct._IO_FILE*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %4, align 8
  store i8* %1, i8** %5, align 8
  store i64 %2, i64* %6, align 8
  br label %7

7:                                                ; preds = %11, %3
  %8 = load i64, i64* %6, align 8
  %9 = add i64 %8, -1
  store i64 %9, i64* %6, align 8
  %10 = icmp ugt i64 %8, 0
  br i1 %10, label %11, label %20

11:                                               ; preds = %7
  %12 = load i8*, i8** %5, align 8
  %13 = load i8, i8* %12, align 1
  %14 = zext i8 %13 to i32
  %15 = call i32 @tolower(i32 %14) #13
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %17 = call i32 @fputc(i32 %15, %struct._IO_FILE* %16)
  %18 = load i8*, i8** %5, align 8
  %19 = getelementptr inbounds i8, i8* %18, i32 1
  store i8* %19, i8** %5, align 8
  br label %7

20:                                               ; preds = %7
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @fwrite_uppcase(%struct._IO_FILE*, i8*, i64) #3 {
  %4 = alloca %struct._IO_FILE*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %4, align 8
  store i8* %1, i8** %5, align 8
  store i64 %2, i64* %6, align 8
  br label %7

7:                                                ; preds = %11, %3
  %8 = load i64, i64* %6, align 8
  %9 = add i64 %8, -1
  store i64 %9, i64* %6, align 8
  %10 = icmp ugt i64 %8, 0
  br i1 %10, label %11, label %20

11:                                               ; preds = %7
  %12 = load i8*, i8** %5, align 8
  %13 = load i8, i8* %12, align 1
  %14 = zext i8 %13 to i32
  %15 = call i32 @toupper(i32 %14) #13
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %17 = call i32 @fputc(i32 %15, %struct._IO_FILE* %16)
  %18 = load i8*, i8** %5, align 8
  %19 = getelementptr inbounds i8, i8* %18, i32 1
  store i8* %19, i8** %5, align 8
  br label %7

20:                                               ; preds = %7
  ret void
}

declare dso_local i64 @fwrite(i8*, i64, i64, %struct._IO_FILE*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @iso_week_days(i32, i32) #3 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  store i32 %1, i32* %4, align 4
  store i32 378, i32* %5, align 4
  %6 = load i32, i32* %3, align 4
  %7 = load i32, i32* %3, align 4
  %8 = load i32, i32* %4, align 4
  %9 = sub nsw i32 %7, %8
  %10 = add nsw i32 %9, 4
  %11 = load i32, i32* %5, align 4
  %12 = add nsw i32 %10, %11
  %13 = srem i32 %12, 7
  %14 = sub nsw i32 %6, %13
  %15 = add nsw i32 %14, 4
  %16 = sub nsw i32 %15, 1
  ret i32 %16
}

; Function Attrs: nounwind readonly
declare dso_local i32 @toupper(i32) #6

; Function Attrs: nounwind readonly
declare dso_local i32 @tolower(i32) #6

; Function Attrs: noinline nounwind optnone uwtable
define internal void @gettime(%struct.timespec* nonnull) #3 {
  %2 = alloca %struct.timespec*, align 8
  store %struct.timespec* %0, %struct.timespec** %2, align 8
  %3 = load %struct.timespec*, %struct.timespec** %2, align 8
  %4 = call i32 @clock_gettime(i32 0, %struct.timespec* %3) #11
  ret void
}

; Function Attrs: nounwind
declare dso_local i32 @clock_gettime(i32, %struct.timespec*) #1

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @imaxtostr(i64, i8*) #3 {
  %3 = alloca i64, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  store i64 %0, i64* %3, align 8
  store i8* %1, i8** %4, align 8
  %6 = load i8*, i8** %4, align 8
  %7 = getelementptr inbounds i8, i8* %6, i64 20
  store i8* %7, i8** %5, align 8
  %8 = load i8*, i8** %5, align 8
  store i8 0, i8* %8, align 1
  %9 = load i64, i64* %3, align 8
  %10 = icmp slt i64 %9, 0
  br i1 %10, label %11, label %26

11:                                               ; preds = %2
  br label %12

12:                                               ; preds = %19, %11
  %13 = load i64, i64* %3, align 8
  %14 = srem i64 %13, 10
  %15 = sub nsw i64 48, %14
  %16 = trunc i64 %15 to i8
  %17 = load i8*, i8** %5, align 8
  %18 = getelementptr inbounds i8, i8* %17, i32 -1
  store i8* %18, i8** %5, align 8
  store i8 %16, i8* %18, align 1
  br label %19

19:                                               ; preds = %12
  %20 = load i64, i64* %3, align 8
  %21 = sdiv i64 %20, 10
  store i64 %21, i64* %3, align 8
  %22 = icmp ne i64 %21, 0
  br i1 %22, label %12, label %23

23:                                               ; preds = %19
  %24 = load i8*, i8** %5, align 8
  %25 = getelementptr inbounds i8, i8* %24, i32 -1
  store i8* %25, i8** %5, align 8
  store i8 45, i8* %25, align 1
  br label %39

26:                                               ; preds = %2
  br label %27

27:                                               ; preds = %34, %26
  %28 = load i64, i64* %3, align 8
  %29 = srem i64 %28, 10
  %30 = add nsw i64 48, %29
  %31 = trunc i64 %30 to i8
  %32 = load i8*, i8** %5, align 8
  %33 = getelementptr inbounds i8, i8* %32, i32 -1
  store i8* %33, i8** %5, align 8
  store i8 %31, i8* %33, align 1
  br label %34

34:                                               ; preds = %27
  %35 = load i64, i64* %3, align 8
  %36 = sdiv i64 %35, 10
  store i64 %36, i64* %3, align 8
  %37 = icmp ne i64 %36, 0
  br i1 %37, label %27, label %38

38:                                               ; preds = %34
  br label %39

39:                                               ; preds = %38, %23
  %40 = load i8*, i8** %5, align 8
  ret i8* %40
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @yyparse(%struct.parser_control*) #3 {
  %2 = alloca %struct.parser_control*, align 8
  %3 = alloca i32, align 4
  %4 = alloca %union.YYSTYPE, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca [20 x i16], align 16
  %9 = alloca i16*, align 8
  %10 = alloca i16*, align 8
  %11 = alloca [20 x %union.YYSTYPE], align 16
  %12 = alloca %union.YYSTYPE*, align 8
  %13 = alloca %union.YYSTYPE*, align 8
  %14 = alloca i64, align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca %union.YYSTYPE, align 8
  %19 = alloca i32, align 4
  %20 = alloca i64, align 8
  %21 = alloca i16*, align 8
  %22 = alloca %union.yyalloc*, align 8
  %23 = alloca i64, align 8
  %24 = alloca i64, align 8
  %25 = alloca i64, align 8
  %26 = alloca %struct.relative_time, align 8
  %27 = alloca %struct.relative_time, align 8
  %28 = alloca %struct.relative_time, align 8
  %29 = alloca %struct.relative_time, align 8
  %30 = alloca %struct.relative_time, align 8
  %31 = alloca %struct.relative_time, align 8
  %32 = alloca %struct.relative_time, align 8
  %33 = alloca %struct.relative_time, align 8
  %34 = alloca %struct.relative_time, align 8
  %35 = alloca %struct.relative_time, align 8
  %36 = alloca %struct.relative_time, align 8
  %37 = alloca %struct.relative_time, align 8
  %38 = alloca %struct.relative_time, align 8
  %39 = alloca %struct.relative_time, align 8
  %40 = alloca %struct.relative_time, align 8
  %41 = alloca %struct.relative_time, align 8
  %42 = alloca %struct.relative_time, align 8
  %43 = alloca %struct.relative_time, align 8
  %44 = alloca %struct.relative_time, align 8
  %45 = alloca %struct.relative_time, align 8
  %46 = alloca %struct.relative_time, align 8
  %47 = alloca %struct.relative_time, align 8
  %48 = alloca %struct.relative_time, align 8
  %49 = alloca %struct.relative_time, align 8
  %50 = alloca %struct.relative_time, align 8
  %51 = alloca %struct.relative_time, align 8
  %52 = alloca %struct.relative_time, align 8
  %53 = alloca i32, align 4
  %54 = alloca i32, align 4
  store %struct.parser_control* %0, %struct.parser_control** %2, align 8
  %55 = bitcast %union.YYSTYPE* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %55, i8* align 8 bitcast (%union.YYSTYPE* @yyparse.yyval_default to i8*), i64 56, i1 false)
  store i32 0, i32* %17, align 4
  store i32 0, i32* %19, align 4
  %56 = getelementptr inbounds [20 x i16], [20 x i16]* %8, i64 0, i64 0
  store i16* %56, i16** %9, align 8
  store i16* %56, i16** %10, align 8
  %57 = getelementptr inbounds [20 x %union.YYSTYPE], [20 x %union.YYSTYPE]* %11, i64 0, i64 0
  store %union.YYSTYPE* %57, %union.YYSTYPE** %12, align 8
  store %union.YYSTYPE* %57, %union.YYSTYPE** %13, align 8
  store i64 20, i64* %14, align 8
  store i32 0, i32* %6, align 4
  store i32 0, i32* %7, align 4
  store i32 0, i32* %5, align 4
  store i32 -2, i32* %3, align 4
  br label %61

58:                                               ; preds = %7290, %7178, %229
  %59 = load i16*, i16** %10, align 8
  %60 = getelementptr inbounds i16, i16* %59, i32 1
  store i16* %60, i16** %10, align 8
  br label %61

61:                                               ; preds = %58, %1
  %62 = load i32, i32* %6, align 4
  %63 = trunc i32 %62 to i16
  %64 = load i16*, i16** %10, align 8
  store i16 %63, i16* %64, align 2
  %65 = load i16*, i16** %9, align 8
  %66 = load i64, i64* %14, align 8
  %67 = getelementptr inbounds i16, i16* %65, i64 %66
  %68 = getelementptr inbounds i16, i16* %67, i64 -1
  %69 = load i16*, i16** %10, align 8
  %70 = icmp ule i16* %68, %69
  br i1 %70, label %71, label %158

71:                                               ; preds = %61
  %72 = load i16*, i16** %10, align 8
  %73 = load i16*, i16** %9, align 8
  %74 = ptrtoint i16* %72 to i64
  %75 = ptrtoint i16* %73 to i64
  %76 = sub i64 %74, %75
  %77 = sdiv exact i64 %76, 2
  %78 = add nsw i64 %77, 1
  store i64 %78, i64* %20, align 8
  %79 = load i64, i64* %14, align 8
  %80 = icmp ule i64 20, %79
  br i1 %80, label %81, label %82

81:                                               ; preds = %71
  br label %7298

82:                                               ; preds = %71
  %83 = load i64, i64* %14, align 8
  %84 = mul i64 %83, 2
  store i64 %84, i64* %14, align 8
  %85 = load i64, i64* %14, align 8
  %86 = icmp ult i64 20, %85
  br i1 %86, label %87, label %88

87:                                               ; preds = %82
  store i64 20, i64* %14, align 8
  br label %88

88:                                               ; preds = %87, %82
  %89 = load i16*, i16** %9, align 8
  store i16* %89, i16** %21, align 8
  %90 = load i64, i64* %14, align 8
  %91 = mul i64 %90, 58
  %92 = add i64 %91, 55
  %93 = call noalias i8* @malloc(i64 %92) #11
  %94 = bitcast i8* %93 to %union.yyalloc*
  store %union.yyalloc* %94, %union.yyalloc** %22, align 8
  %95 = load %union.yyalloc*, %union.yyalloc** %22, align 8
  %96 = icmp ne %union.yyalloc* %95, null
  br i1 %96, label %98, label %97

97:                                               ; preds = %88
  br label %7298

98:                                               ; preds = %88
  br label %99

99:                                               ; preds = %98
  %100 = load %union.yyalloc*, %union.yyalloc** %22, align 8
  %101 = bitcast %union.yyalloc* %100 to i16*
  %102 = bitcast i16* %101 to i8*
  %103 = load i16*, i16** %9, align 8
  %104 = bitcast i16* %103 to i8*
  %105 = load i64, i64* %20, align 8
  %106 = mul i64 %105, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %102, i8* align 2 %104, i64 %106, i1 false)
  %107 = load %union.yyalloc*, %union.yyalloc** %22, align 8
  %108 = bitcast %union.yyalloc* %107 to i16*
  store i16* %108, i16** %9, align 8
  %109 = load i64, i64* %14, align 8
  %110 = mul i64 %109, 2
  %111 = add i64 %110, 55
  store i64 %111, i64* %23, align 8
  %112 = load i64, i64* %23, align 8
  %113 = udiv i64 %112, 56
  %114 = load %union.yyalloc*, %union.yyalloc** %22, align 8
  %115 = getelementptr inbounds %union.yyalloc, %union.yyalloc* %114, i64 %113
  store %union.yyalloc* %115, %union.yyalloc** %22, align 8
  br label %116

116:                                              ; preds = %99
  br label %117

117:                                              ; preds = %116
  %118 = load %union.yyalloc*, %union.yyalloc** %22, align 8
  %119 = bitcast %union.yyalloc* %118 to %union.YYSTYPE*
  %120 = bitcast %union.YYSTYPE* %119 to i8*
  %121 = load %union.YYSTYPE*, %union.YYSTYPE** %12, align 8
  %122 = bitcast %union.YYSTYPE* %121 to i8*
  %123 = load i64, i64* %20, align 8
  %124 = mul i64 %123, 56
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %120, i8* align 8 %122, i64 %124, i1 false)
  %125 = load %union.yyalloc*, %union.yyalloc** %22, align 8
  %126 = bitcast %union.yyalloc* %125 to %union.YYSTYPE*
  store %union.YYSTYPE* %126, %union.YYSTYPE** %12, align 8
  %127 = load i64, i64* %14, align 8
  %128 = mul i64 %127, 56
  %129 = add i64 %128, 55
  store i64 %129, i64* %24, align 8
  %130 = load i64, i64* %24, align 8
  %131 = udiv i64 %130, 56
  %132 = load %union.yyalloc*, %union.yyalloc** %22, align 8
  %133 = getelementptr inbounds %union.yyalloc, %union.yyalloc* %132, i64 %131
  store %union.yyalloc* %133, %union.yyalloc** %22, align 8
  br label %134

134:                                              ; preds = %117
  %135 = load i16*, i16** %21, align 8
  %136 = getelementptr inbounds [20 x i16], [20 x i16]* %8, i64 0, i64 0
  %137 = icmp ne i16* %135, %136
  br i1 %137, label %138, label %141

138:                                              ; preds = %134
  %139 = load i16*, i16** %21, align 8
  %140 = bitcast i16* %139 to i8*
  call void @free(i8* %140) #11
  br label %141

141:                                              ; preds = %138, %134
  %142 = load i16*, i16** %9, align 8
  %143 = load i64, i64* %20, align 8
  %144 = getelementptr inbounds i16, i16* %142, i64 %143
  %145 = getelementptr inbounds i16, i16* %144, i64 -1
  store i16* %145, i16** %10, align 8
  %146 = load %union.YYSTYPE*, %union.YYSTYPE** %12, align 8
  %147 = load i64, i64* %20, align 8
  %148 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %146, i64 %147
  %149 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %148, i64 -1
  store %union.YYSTYPE* %149, %union.YYSTYPE** %13, align 8
  %150 = load i16*, i16** %9, align 8
  %151 = load i64, i64* %14, align 8
  %152 = getelementptr inbounds i16, i16* %150, i64 %151
  %153 = getelementptr inbounds i16, i16* %152, i64 -1
  %154 = load i16*, i16** %10, align 8
  %155 = icmp ule i16* %153, %154
  br i1 %155, label %156, label %157

156:                                              ; preds = %141
  br label %7297

157:                                              ; preds = %141
  br label %158

158:                                              ; preds = %157, %61
  %159 = load i32, i32* %6, align 4
  %160 = icmp eq i32 %159, 12
  br i1 %160, label %161, label %162

161:                                              ; preds = %158
  br label %7296

162:                                              ; preds = %158
  br label %163

163:                                              ; preds = %162
  %164 = load i32, i32* %6, align 4
  %165 = sext i32 %164 to i64
  %166 = getelementptr inbounds [114 x i8], [114 x i8]* @yypact, i64 0, i64 %165
  %167 = load i8, i8* %166, align 1
  %168 = sext i8 %167 to i32
  store i32 %168, i32* %15, align 4
  %169 = load i32, i32* %15, align 4
  %170 = icmp eq i32 %169, -93
  br i1 %170, label %171, label %172

171:                                              ; preds = %163
  br label %235

172:                                              ; preds = %163
  %173 = load i32, i32* %3, align 4
  %174 = icmp eq i32 %173, -2
  br i1 %174, label %175, label %178

175:                                              ; preds = %172
  %176 = load %struct.parser_control*, %struct.parser_control** %2, align 8
  %177 = call i32 @yylex(%union.YYSTYPE* %4, %struct.parser_control* %176)
  store i32 %177, i32* %3, align 4
  br label %178

178:                                              ; preds = %175, %172
  %179 = load i32, i32* %3, align 4
  %180 = icmp sle i32 %179, 0
  br i1 %180, label %181, label %182

181:                                              ; preds = %178
  store i32 0, i32* %17, align 4
  store i32 0, i32* %3, align 4
  br label %194

182:                                              ; preds = %178
  %183 = load i32, i32* %3, align 4
  %184 = icmp ule i32 %183, 277
  br i1 %184, label %185, label %191

185:                                              ; preds = %182
  %186 = load i32, i32* %3, align 4
  %187 = sext i32 %186 to i64
  %188 = getelementptr inbounds [278 x i8], [278 x i8]* @yytranslate, i64 0, i64 %187
  %189 = load i8, i8* %188, align 1
  %190 = zext i8 %189 to i32
  br label %192

191:                                              ; preds = %182
  br label %192

192:                                              ; preds = %191, %185
  %193 = phi i32 [ %190, %185 ], [ 2, %191 ]
  store i32 %193, i32* %17, align 4
  br label %194

194:                                              ; preds = %192, %181
  %195 = load i32, i32* %17, align 4
  %196 = load i32, i32* %15, align 4
  %197 = add nsw i32 %196, %195
  store i32 %197, i32* %15, align 4
  %198 = load i32, i32* %15, align 4
  %199 = icmp slt i32 %198, 0
  br i1 %199, label %211, label %200

200:                                              ; preds = %194
  %201 = load i32, i32* %15, align 4
  %202 = icmp slt i32 112, %201
  br i1 %202, label %211, label %203

203:                                              ; preds = %200
  %204 = load i32, i32* %15, align 4
  %205 = sext i32 %204 to i64
  %206 = getelementptr inbounds [113 x i8], [113 x i8]* @yycheck, i64 0, i64 %205
  %207 = load i8, i8* %206, align 1
  %208 = sext i8 %207 to i32
  %209 = load i32, i32* %17, align 4
  %210 = icmp ne i32 %208, %209
  br i1 %210, label %211, label %212

211:                                              ; preds = %203, %200, %194
  br label %235

212:                                              ; preds = %203
  %213 = load i32, i32* %15, align 4
  %214 = sext i32 %213 to i64
  %215 = getelementptr inbounds [113 x i8], [113 x i8]* @yytable, i64 0, i64 %214
  %216 = load i8, i8* %215, align 1
  %217 = zext i8 %216 to i32
  store i32 %217, i32* %15, align 4
  %218 = load i32, i32* %15, align 4
  %219 = icmp sle i32 %218, 0
  br i1 %219, label %220, label %223

220:                                              ; preds = %212
  %221 = load i32, i32* %15, align 4
  %222 = sub nsw i32 0, %221
  store i32 %222, i32* %15, align 4
  br label %245

223:                                              ; preds = %212
  %224 = load i32, i32* %7, align 4
  %225 = icmp ne i32 %224, 0
  br i1 %225, label %226, label %229

226:                                              ; preds = %223
  %227 = load i32, i32* %7, align 4
  %228 = add nsw i32 %227, -1
  store i32 %228, i32* %7, align 4
  br label %229

229:                                              ; preds = %226, %223
  store i32 -2, i32* %3, align 4
  %230 = load i32, i32* %15, align 4
  store i32 %230, i32* %6, align 4
  %231 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %232 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %231, i32 1
  store %union.YYSTYPE* %232, %union.YYSTYPE** %13, align 8
  %233 = bitcast %union.YYSTYPE* %232 to i8*
  %234 = bitcast %union.YYSTYPE* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %233, i8* align 8 %234, i64 56, i1 false)
  br label %58

235:                                              ; preds = %211, %171
  %236 = load i32, i32* %6, align 4
  %237 = sext i32 %236 to i64
  %238 = getelementptr inbounds [114 x i8], [114 x i8]* @yydefact, i64 0, i64 %237
  %239 = load i8, i8* %238, align 1
  %240 = zext i8 %239 to i32
  store i32 %240, i32* %15, align 4
  %241 = load i32, i32* %15, align 4
  %242 = icmp eq i32 %241, 0
  br i1 %242, label %243, label %244

243:                                              ; preds = %235
  br label %7180

244:                                              ; preds = %235
  br label %245

245:                                              ; preds = %244, %220
  %246 = load i32, i32* %15, align 4
  %247 = sext i32 %246 to i64
  %248 = getelementptr inbounds [92 x i8], [92 x i8]* @yyr2, i64 0, i64 %247
  %249 = load i8, i8* %248, align 1
  %250 = zext i8 %249 to i32
  store i32 %250, i32* %19, align 4
  %251 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %252 = load i32, i32* %19, align 4
  %253 = sub nsw i32 1, %252
  %254 = sext i32 %253 to i64
  %255 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %251, i64 %254
  %256 = bitcast %union.YYSTYPE* %18 to i8*
  %257 = bitcast %union.YYSTYPE* %255 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %256, i8* align 8 %257, i64 56, i1 false)
  %258 = load i32, i32* %15, align 4
  switch i32 %258, label %7120 [
    i32 4, label %259
    i32 7, label %271
    i32 8, label %282
    i32 9, label %289
    i32 10, label %296
    i32 11, label %303
    i32 12, label %310
    i32 13, label %317
    i32 14, label %320
    i32 15, label %323
    i32 18, label %326
    i32 19, label %340
    i32 20, label %359
    i32 22, label %389
    i32 23, label %398
    i32 24, label %412
    i32 27, label %437
    i32 28, label %453
    i32 29, label %461
    i32 30, label %468
    i32 31, label %476
    i32 32, label %479
    i32 33, label %496
    i32 34, label %508
    i32 35, label %539
    i32 36, label %548
    i32 37, label %557
    i32 38, label %567
    i32 39, label %577
    i32 40, label %593
    i32 41, label %610
    i32 42, label %625
    i32 43, label %707
    i32 44, label %742
    i32 45, label %782
    i32 46, label %796
    i32 47, label %817
    i32 48, label %831
    i32 50, label %852
    i32 51, label %884
    i32 52, label %897
    i32 53, label %905
    i32 54, label %913
    i32 55, label %930
    i32 56, label %948
    i32 57, label %961
    i32 58, label %978
    i32 59, label %996
    i32 60, label %1009
    i32 61, label %2832
    i32 62, label %4785
    i32 63, label %4802
    i32 64, label %4819
    i32 65, label %4837
    i32 66, label %4850
    i32 67, label %4867
    i32 68, label %4885
    i32 69, label %4898
    i32 70, label %4915
    i32 71, label %4933
    i32 72, label %4959
    i32 73, label %4985
    i32 75, label %4998
    i32 76, label %5016
    i32 77, label %5034
    i32 78, label %6987
    i32 79, label %7005
    i32 80, label %7023
    i32 81, label %7041
    i32 85, label %7058
    i32 87, label %7076
    i32 88, label %7094
    i32 89, label %7099
    i32 90, label %7111
    i32 91, label %7113
  ]

259:                                              ; preds = %245
  %260 = load %struct.parser_control*, %struct.parser_control** %2, align 8
  %261 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %260, i32 0, i32 11
  %262 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %263 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %262, i64 0
  %264 = bitcast %union.YYSTYPE* %263 to %struct.timespec*
  %265 = bitcast %struct.timespec* %261 to i8*
  %266 = bitcast %struct.timespec* %264 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %265, i8* align 8 %266, i64 16, i1 false)
  %267 = load %struct.parser_control*, %struct.parser_control** %2, align 8
  %268 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %267, i32 0, i32 13
  store i8 1, i8* %268, align 8
  %269 = call i8* @gettext(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.113, i64 0, i64 0)) #11
  %270 = load %struct.parser_control*, %struct.parser_control** %2, align 8
  call void @debug_print_current_time(i8* %269, %struct.parser_control* %270)
  br label %7121

271:                                              ; preds = %245
  %272 = load %struct.parser_control*, %struct.parser_control** %2, align 8
  %273 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %272, i32 0, i32 19
  %274 = load i64, i64* %273, align 8
  %275 = add nsw i64 %274, 1
  store i64 %275, i64* %273, align 8
  %276 = load %struct.parser_control*, %struct.parser_control** %2, align 8
  %277 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %276, i32 0, i32 15
  %278 = load i64, i64* %277, align 8
  %279 = add nsw i64 %278, 1
  store i64 %279, i64* %277, align 8
  %280 = call i8* @gettext(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1.114, i64 0, i64 0)) #11
  %281 = load %struct.parser_control*, %struct.parser_control** %2, align 8
  call void @debug_print_current_time(i8* %280, %struct.parser_control* %281)
  br label %7121

282:                                              ; preds = %245
  %283 = load %struct.parser_control*, %struct.parser_control** %2, align 8
  %284 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %283, i32 0, i32 19
  %285 = load i64, i64* %284, align 8
  %286 = add nsw i64 %285, 1
  store i64 %286, i64* %284, align 8
  %287 = call i8* @gettext(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2.115, i64 0, i64 0)) #11
  %288 = load %struct.parser_control*, %struct.parser_control** %2, align 8
  call void @debug_print_current_time(i8* %287, %struct.parser_control* %288)
  br label %7121

289:                                              ; preds = %245
  %290 = load %struct.parser_control*, %struct.parser_control** %2, align 8
  %291 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %290, i32 0, i32 17
  %292 = load i64, i64* %291, align 8
  %293 = add nsw i64 %292, 1
  store i64 %293, i64* %291, align 8
  %294 = call i8* @gettext(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3.116, i64 0, i64 0)) #11
  %295 = load %struct.parser_control*, %struct.parser_control** %2, align 8
  call void @debug_print_current_time(i8* %294, %struct.parser_control* %295)
  br label %7121

296:                                              ; preds = %245
  %297 = load %struct.parser_control*, %struct.parser_control** %2, align 8
  %298 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %297, i32 0, i32 20
  %299 = load i64, i64* %298, align 8
  %300 = add nsw i64 %299, 1
  store i64 %300, i64* %298, align 8
  %301 = call i8* @gettext(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4.117, i64 0, i64 0)) #11
  %302 = load %struct.parser_control*, %struct.parser_control** %2, align 8
  call void @debug_print_current_time(i8* %301, %struct.parser_control* %302)
  br label %7121

303:                                              ; preds = %245
  %304 = load %struct.parser_control*, %struct.parser_control** %2, align 8
  %305 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %304, i32 0, i32 15
  %306 = load i64, i64* %305, align 8
  %307 = add nsw i64 %306, 1
  store i64 %307, i64* %305, align 8
  %308 = call i8* @gettext(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.118, i64 0, i64 0)) #11
  %309 = load %struct.parser_control*, %struct.parser_control** %2, align 8
  call void @debug_print_current_time(i8* %308, %struct.parser_control* %309)
  br label %7121

310:                                              ; preds = %245
  %311 = load %struct.parser_control*, %struct.parser_control** %2, align 8
  %312 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %311, i32 0, i32 16
  %313 = load i64, i64* %312, align 8
  %314 = add nsw i64 %313, 1
  store i64 %314, i64* %312, align 8
  %315 = call i8* @gettext(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.6.119, i64 0, i64 0)) #11
  %316 = load %struct.parser_control*, %struct.parser_control** %2, align 8
  call void @debug_print_current_time(i8* %315, %struct.parser_control* %316)
  br label %7121

317:                                              ; preds = %245
  %318 = call i8* @gettext(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7.120, i64 0, i64 0)) #11
  %319 = load %struct.parser_control*, %struct.parser_control** %2, align 8
  call void @debug_print_relative_time(i8* %318, %struct.parser_control* %319)
  br label %7121

320:                                              ; preds = %245
  %321 = call i8* @gettext(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8.121, i64 0, i64 0)) #11
  %322 = load %struct.parser_control*, %struct.parser_control** %2, align 8
  call void @debug_print_current_time(i8* %321, %struct.parser_control* %322)
  br label %7121

323:                                              ; preds = %245
  %324 = call i8* @gettext(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9.122, i64 0, i64 0)) #11
  %325 = load %struct.parser_control*, %struct.parser_control** %2, align 8
  call void @debug_print_relative_time(i8* %324, %struct.parser_control* %325)
  br label %7121

326:                                              ; preds = %245
  %327 = load %struct.parser_control*, %struct.parser_control** %2, align 8
  %328 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %329 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %328, i64 -1
  %330 = bitcast %union.YYSTYPE* %329 to %struct.textint*
  %331 = getelementptr inbounds %struct.textint, %struct.textint* %330, i32 0, i32 1
  %332 = load i64, i64* %331, align 8
  call void @set_hhmmss(%struct.parser_control* %327, i64 %332, i64 0, i64 0, i32 0)
  %333 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %334 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %333, i64 0
  %335 = bitcast %union.YYSTYPE* %334 to i64*
  %336 = load i64, i64* %335, align 8
  %337 = trunc i64 %336 to i32
  %338 = load %struct.parser_control*, %struct.parser_control** %2, align 8
  %339 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %338, i32 0, i32 5
  store i32 %337, i32* %339, align 4
  br label %7121

340:                                              ; preds = %245
  %341 = load %struct.parser_control*, %struct.parser_control** %2, align 8
  %342 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %343 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %342, i64 -3
  %344 = bitcast %union.YYSTYPE* %343 to %struct.textint*
  %345 = getelementptr inbounds %struct.textint, %struct.textint* %344, i32 0, i32 1
  %346 = load i64, i64* %345, align 8
  %347 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %348 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %347, i64 -1
  %349 = bitcast %union.YYSTYPE* %348 to %struct.textint*
  %350 = getelementptr inbounds %struct.textint, %struct.textint* %349, i32 0, i32 1
  %351 = load i64, i64* %350, align 8
  call void @set_hhmmss(%struct.parser_control* %341, i64 %346, i64 %351, i64 0, i32 0)
  %352 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %353 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %352, i64 0
  %354 = bitcast %union.YYSTYPE* %353 to i64*
  %355 = load i64, i64* %354, align 8
  %356 = trunc i64 %355 to i32
  %357 = load %struct.parser_control*, %struct.parser_control** %2, align 8
  %358 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %357, i32 0, i32 5
  store i32 %356, i32* %358, align 4
  br label %7121

359:                                              ; preds = %245
  %360 = load %struct.parser_control*, %struct.parser_control** %2, align 8
  %361 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %362 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %361, i64 -5
  %363 = bitcast %union.YYSTYPE* %362 to %struct.textint*
  %364 = getelementptr inbounds %struct.textint, %struct.textint* %363, i32 0, i32 1
  %365 = load i64, i64* %364, align 8
  %366 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %367 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %366, i64 -3
  %368 = bitcast %union.YYSTYPE* %367 to %struct.textint*
  %369 = getelementptr inbounds %struct.textint, %struct.textint* %368, i32 0, i32 1
  %370 = load i64, i64* %369, align 8
  %371 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %372 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %371, i64 -1
  %373 = bitcast %union.YYSTYPE* %372 to %struct.timespec*
  %374 = getelementptr inbounds %struct.timespec, %struct.timespec* %373, i32 0, i32 0
  %375 = load i64, i64* %374, align 8
  %376 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %377 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %376, i64 -1
  %378 = bitcast %union.YYSTYPE* %377 to %struct.timespec*
  %379 = getelementptr inbounds %struct.timespec, %struct.timespec* %378, i32 0, i32 1
  %380 = load i64, i64* %379, align 8
  %381 = trunc i64 %380 to i32
  call void @set_hhmmss(%struct.parser_control* %360, i64 %365, i64 %370, i64 %375, i32 %381)
  %382 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %383 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %382, i64 0
  %384 = bitcast %union.YYSTYPE* %383 to i64*
  %385 = load i64, i64* %384, align 8
  %386 = trunc i64 %385 to i32
  %387 = load %struct.parser_control*, %struct.parser_control** %2, align 8
  %388 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %387, i32 0, i32 5
  store i32 %386, i32* %388, align 4
  br label %7121

389:                                              ; preds = %245
  %390 = load %struct.parser_control*, %struct.parser_control** %2, align 8
  %391 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %392 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %391, i64 -1
  %393 = bitcast %union.YYSTYPE* %392 to %struct.textint*
  %394 = getelementptr inbounds %struct.textint, %struct.textint* %393, i32 0, i32 1
  %395 = load i64, i64* %394, align 8
  call void @set_hhmmss(%struct.parser_control* %390, i64 %395, i64 0, i64 0, i32 0)
  %396 = load %struct.parser_control*, %struct.parser_control** %2, align 8
  %397 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %396, i32 0, i32 5
  store i32 2, i32* %397, align 4
  br label %7121

398:                                              ; preds = %245
  %399 = load %struct.parser_control*, %struct.parser_control** %2, align 8
  %400 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %401 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %400, i64 -3
  %402 = bitcast %union.YYSTYPE* %401 to %struct.textint*
  %403 = getelementptr inbounds %struct.textint, %struct.textint* %402, i32 0, i32 1
  %404 = load i64, i64* %403, align 8
  %405 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %406 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %405, i64 -1
  %407 = bitcast %union.YYSTYPE* %406 to %struct.textint*
  %408 = getelementptr inbounds %struct.textint, %struct.textint* %407, i32 0, i32 1
  %409 = load i64, i64* %408, align 8
  call void @set_hhmmss(%struct.parser_control* %399, i64 %404, i64 %409, i64 0, i32 0)
  %410 = load %struct.parser_control*, %struct.parser_control** %2, align 8
  %411 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %410, i32 0, i32 5
  store i32 2, i32* %411, align 4
  br label %7121

412:                                              ; preds = %245
  %413 = load %struct.parser_control*, %struct.parser_control** %2, align 8
  %414 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %415 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %414, i64 -5
  %416 = bitcast %union.YYSTYPE* %415 to %struct.textint*
  %417 = getelementptr inbounds %struct.textint, %struct.textint* %416, i32 0, i32 1
  %418 = load i64, i64* %417, align 8
  %419 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %420 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %419, i64 -3
  %421 = bitcast %union.YYSTYPE* %420 to %struct.textint*
  %422 = getelementptr inbounds %struct.textint, %struct.textint* %421, i32 0, i32 1
  %423 = load i64, i64* %422, align 8
  %424 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %425 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %424, i64 -1
  %426 = bitcast %union.YYSTYPE* %425 to %struct.timespec*
  %427 = getelementptr inbounds %struct.timespec, %struct.timespec* %426, i32 0, i32 0
  %428 = load i64, i64* %427, align 8
  %429 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %430 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %429, i64 -1
  %431 = bitcast %union.YYSTYPE* %430 to %struct.timespec*
  %432 = getelementptr inbounds %struct.timespec, %struct.timespec* %431, i32 0, i32 1
  %433 = load i64, i64* %432, align 8
  %434 = trunc i64 %433 to i32
  call void @set_hhmmss(%struct.parser_control* %413, i64 %418, i64 %423, i64 %428, i32 %434)
  %435 = load %struct.parser_control*, %struct.parser_control** %2, align 8
  %436 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %435, i32 0, i32 5
  store i32 2, i32* %436, align 4
  br label %7121

437:                                              ; preds = %245
  %438 = load %struct.parser_control*, %struct.parser_control** %2, align 8
  %439 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %438, i32 0, i32 20
  %440 = load i64, i64* %439, align 8
  %441 = add nsw i64 %440, 1
  store i64 %441, i64* %439, align 8
  %442 = load %struct.parser_control*, %struct.parser_control** %2, align 8
  %443 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %444 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %443, i64 -1
  %445 = bitcast %union.YYSTYPE* %444 to %struct.textint*
  %446 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %447 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %446, i64 0
  %448 = bitcast %union.YYSTYPE* %447 to i64*
  %449 = load i64, i64* %448, align 8
  %450 = call zeroext i1 @time_zone_hhmm(%struct.parser_control* %442, %struct.textint* byval(%struct.textint) align 8 %445, i64 %449)
  br i1 %450, label %452, label %451

451:                                              ; preds = %437
  br label %7297

452:                                              ; preds = %437
  br label %7121

453:                                              ; preds = %245
  %454 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %455 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %454, i64 0
  %456 = bitcast %union.YYSTYPE* %455 to i64*
  %457 = load i64, i64* %456, align 8
  %458 = trunc i64 %457 to i32
  %459 = load %struct.parser_control*, %struct.parser_control** %2, align 8
  %460 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %459, i32 0, i32 3
  store i32 %458, i32* %460, align 4
  br label %7121

461:                                              ; preds = %245
  %462 = load %struct.parser_control*, %struct.parser_control** %2, align 8
  %463 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %462, i32 0, i32 3
  store i32 1, i32* %463, align 4
  %464 = load %struct.parser_control*, %struct.parser_control** %2, align 8
  %465 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %464, i32 0, i32 18
  %466 = load i64, i64* %465, align 8
  %467 = add nsw i64 %466, 1
  store i64 %467, i64* %465, align 8
  br label %7121

468:                                              ; preds = %245
  %469 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %470 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %469, i64 0
  %471 = bitcast %union.YYSTYPE* %470 to i64*
  %472 = load i64, i64* %471, align 8
  %473 = trunc i64 %472 to i32
  %474 = load %struct.parser_control*, %struct.parser_control** %2, align 8
  %475 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %474, i32 0, i32 4
  store i32 %473, i32* %475, align 8
  br label %7121

476:                                              ; preds = %245
  %477 = load %struct.parser_control*, %struct.parser_control** %2, align 8
  %478 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %477, i32 0, i32 4
  store i32 -25200, i32* %478, align 8
  br label %7121

479:                                              ; preds = %245
  %480 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %481 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %480, i64 -1
  %482 = bitcast %union.YYSTYPE* %481 to i64*
  %483 = load i64, i64* %482, align 8
  %484 = trunc i64 %483 to i32
  %485 = load %struct.parser_control*, %struct.parser_control** %2, align 8
  %486 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %485, i32 0, i32 4
  store i32 %484, i32* %486, align 8
  %487 = load %struct.parser_control*, %struct.parser_control** %2, align 8
  %488 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %489 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %488, i64 0
  %490 = bitcast %union.YYSTYPE* %489 to %struct.relative_time*
  %491 = call zeroext i1 @apply_relative_time(%struct.parser_control* %487, %struct.relative_time* byval(%struct.relative_time) align 8 %490, i32 1)
  br i1 %491, label %493, label %492

492:                                              ; preds = %479
  br label %7297

493:                                              ; preds = %479
  %494 = call i8* @gettext(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7.120, i64 0, i64 0)) #11
  %495 = load %struct.parser_control*, %struct.parser_control** %2, align 8
  call void @debug_print_relative_time(i8* %494, %struct.parser_control* %495)
  br label %7121

496:                                              ; preds = %245
  %497 = load %struct.parser_control*, %struct.parser_control** %2, align 8
  %498 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %497, i32 0, i32 4
  store i32 -25200, i32* %498, align 8
  %499 = load %struct.parser_control*, %struct.parser_control** %2, align 8
  %500 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %501 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %500, i64 0
  %502 = bitcast %union.YYSTYPE* %501 to %struct.relative_time*
  %503 = call zeroext i1 @apply_relative_time(%struct.parser_control* %499, %struct.relative_time* byval(%struct.relative_time) align 8 %502, i32 1)
  br i1 %503, label %505, label %504

504:                                              ; preds = %496
  br label %7297

505:                                              ; preds = %496
  %506 = call i8* @gettext(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7.120, i64 0, i64 0)) #11
  %507 = load %struct.parser_control*, %struct.parser_control** %2, align 8
  call void @debug_print_relative_time(i8* %506, %struct.parser_control* %507)
  br label %7121

508:                                              ; preds = %245
  %509 = load %struct.parser_control*, %struct.parser_control** %2, align 8
  %510 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %511 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %510, i64 -1
  %512 = bitcast %union.YYSTYPE* %511 to %struct.textint*
  %513 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %514 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %513, i64 0
  %515 = bitcast %union.YYSTYPE* %514 to i64*
  %516 = load i64, i64* %515, align 8
  %517 = call zeroext i1 @time_zone_hhmm(%struct.parser_control* %509, %struct.textint* byval(%struct.textint) align 8 %512, i64 %516)
  br i1 %517, label %519, label %518

518:                                              ; preds = %508
  br label %7297

519:                                              ; preds = %508
  %520 = load %struct.parser_control*, %struct.parser_control** %2, align 8
  %521 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %520, i32 0, i32 4
  %522 = load i32, i32* %521, align 8
  %523 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %524 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %523, i64 -2
  %525 = bitcast %union.YYSTYPE* %524 to i64*
  %526 = load i64, i64* %525, align 8
  %527 = load %struct.parser_control*, %struct.parser_control** %2, align 8
  %528 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %527, i32 0, i32 4
  %529 = sext i32 %522 to i64
  %530 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %529, i64 %526)
  %531 = extractvalue { i64, i1 } %530, 1
  %532 = extractvalue { i64, i1 } %530, 0
  %533 = trunc i64 %532 to i32
  %534 = sext i32 %533 to i64
  %535 = icmp ne i64 %532, %534
  %536 = or i1 %531, %535
  store i32 %533, i32* %528, align 8
  br i1 %536, label %537, label %538

537:                                              ; preds = %519
  br label %7297

538:                                              ; preds = %519
  br label %7121

539:                                              ; preds = %245
  %540 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %541 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %540, i64 0
  %542 = bitcast %union.YYSTYPE* %541 to i64*
  %543 = load i64, i64* %542, align 8
  %544 = add nsw i64 %543, 3600
  %545 = trunc i64 %544 to i32
  %546 = load %struct.parser_control*, %struct.parser_control** %2, align 8
  %547 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %546, i32 0, i32 4
  store i32 %545, i32* %547, align 8
  br label %7121

548:                                              ; preds = %245
  %549 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %550 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %549, i64 -1
  %551 = bitcast %union.YYSTYPE* %550 to i64*
  %552 = load i64, i64* %551, align 8
  %553 = add nsw i64 %552, 3600
  %554 = trunc i64 %553 to i32
  %555 = load %struct.parser_control*, %struct.parser_control** %2, align 8
  %556 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %555, i32 0, i32 4
  store i32 %554, i32* %556, align 8
  br label %7121

557:                                              ; preds = %245
  %558 = load %struct.parser_control*, %struct.parser_control** %2, align 8
  %559 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %558, i32 0, i32 1
  store i64 0, i64* %559, align 8
  %560 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %561 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %560, i64 0
  %562 = bitcast %union.YYSTYPE* %561 to i64*
  %563 = load i64, i64* %562, align 8
  %564 = trunc i64 %563 to i32
  %565 = load %struct.parser_control*, %struct.parser_control** %2, align 8
  %566 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %565, i32 0, i32 2
  store i32 %564, i32* %566, align 8
  br label %7121

567:                                              ; preds = %245
  %568 = load %struct.parser_control*, %struct.parser_control** %2, align 8
  %569 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %568, i32 0, i32 1
  store i64 0, i64* %569, align 8
  %570 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %571 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %570, i64 -1
  %572 = bitcast %union.YYSTYPE* %571 to i64*
  %573 = load i64, i64* %572, align 8
  %574 = trunc i64 %573 to i32
  %575 = load %struct.parser_control*, %struct.parser_control** %2, align 8
  %576 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %575, i32 0, i32 2
  store i32 %574, i32* %576, align 8
  br label %7121

577:                                              ; preds = %245
  %578 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %579 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %578, i64 -1
  %580 = bitcast %union.YYSTYPE* %579 to i64*
  %581 = load i64, i64* %580, align 8
  %582 = load %struct.parser_control*, %struct.parser_control** %2, align 8
  %583 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %582, i32 0, i32 1
  store i64 %581, i64* %583, align 8
  %584 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %585 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %584, i64 0
  %586 = bitcast %union.YYSTYPE* %585 to i64*
  %587 = load i64, i64* %586, align 8
  %588 = trunc i64 %587 to i32
  %589 = load %struct.parser_control*, %struct.parser_control** %2, align 8
  %590 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %589, i32 0, i32 2
  store i32 %588, i32* %590, align 8
  %591 = load %struct.parser_control*, %struct.parser_control** %2, align 8
  %592 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %591, i32 0, i32 29
  store i8 1, i8* %592, align 8
  br label %7121

593:                                              ; preds = %245
  %594 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %595 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %594, i64 -1
  %596 = bitcast %union.YYSTYPE* %595 to %struct.textint*
  %597 = getelementptr inbounds %struct.textint, %struct.textint* %596, i32 0, i32 1
  %598 = load i64, i64* %597, align 8
  %599 = load %struct.parser_control*, %struct.parser_control** %2, align 8
  %600 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %599, i32 0, i32 1
  store i64 %598, i64* %600, align 8
  %601 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %602 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %601, i64 0
  %603 = bitcast %union.YYSTYPE* %602 to i64*
  %604 = load i64, i64* %603, align 8
  %605 = trunc i64 %604 to i32
  %606 = load %struct.parser_control*, %struct.parser_control** %2, align 8
  %607 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %606, i32 0, i32 2
  store i32 %605, i32* %607, align 8
  %608 = load %struct.parser_control*, %struct.parser_control** %2, align 8
  %609 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %608, i32 0, i32 29
  store i8 1, i8* %609, align 8
  br label %7121

610:                                              ; preds = %245
  %611 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %612 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %611, i64 -2
  %613 = bitcast %union.YYSTYPE* %612 to %struct.textint*
  %614 = getelementptr inbounds %struct.textint, %struct.textint* %613, i32 0, i32 1
  %615 = load i64, i64* %614, align 8
  %616 = load %struct.parser_control*, %struct.parser_control** %2, align 8
  %617 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %616, i32 0, i32 7
  store i64 %615, i64* %617, align 8
  %618 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %619 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %618, i64 0
  %620 = bitcast %union.YYSTYPE* %619 to %struct.textint*
  %621 = getelementptr inbounds %struct.textint, %struct.textint* %620, i32 0, i32 1
  %622 = load i64, i64* %621, align 8
  %623 = load %struct.parser_control*, %struct.parser_control** %2, align 8
  %624 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %623, i32 0, i32 8
  store i64 %622, i64* %624, align 8
  br label %7121

625:                                              ; preds = %245
  %626 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %627 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %626, i64 -4
  %628 = bitcast %union.YYSTYPE* %627 to %struct.textint*
  %629 = getelementptr inbounds %struct.textint, %struct.textint* %628, i32 0, i32 2
  %630 = load i64, i64* %629, align 8
  %631 = icmp sle i64 4, %630
  br i1 %631, label %632, label %672

632:                                              ; preds = %625
  %633 = load %struct.parser_control*, %struct.parser_control** %2, align 8
  %634 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %633, i32 0, i32 22
  %635 = load i8, i8* %634, align 1
  %636 = trunc i8 %635 to i1
  br i1 %636, label %637, label %650

637:                                              ; preds = %632
  %638 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %639 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %638, i64 -4
  %640 = bitcast %union.YYSTYPE* %639 to %struct.textint*
  %641 = getelementptr inbounds %struct.textint, %struct.textint* %640, i32 0, i32 2
  %642 = load i64, i64* %641, align 8
  store i64 %642, i64* %25, align 8
  %643 = call i8* @gettext(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.10.123, i64 0, i64 0)) #11
  %644 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %645 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %644, i64 -4
  %646 = bitcast %union.YYSTYPE* %645 to %struct.textint*
  %647 = getelementptr inbounds %struct.textint, %struct.textint* %646, i32 0, i32 1
  %648 = load i64, i64* %647, align 8
  %649 = load i64, i64* %25, align 8
  call void (i8*, ...) @dbg_printf(i8* %643, i64 %648, i64 %649)
  br label %650

650:                                              ; preds = %637, %632
  %651 = load %struct.parser_control*, %struct.parser_control** %2, align 8
  %652 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %651, i32 0, i32 6
  %653 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %654 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %653, i64 -4
  %655 = bitcast %union.YYSTYPE* %654 to %struct.textint*
  %656 = bitcast %struct.textint* %652 to i8*
  %657 = bitcast %struct.textint* %655 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %656, i8* align 8 %657, i64 24, i1 false)
  %658 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %659 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %658, i64 -2
  %660 = bitcast %union.YYSTYPE* %659 to %struct.textint*
  %661 = getelementptr inbounds %struct.textint, %struct.textint* %660, i32 0, i32 1
  %662 = load i64, i64* %661, align 8
  %663 = load %struct.parser_control*, %struct.parser_control** %2, align 8
  %664 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %663, i32 0, i32 7
  store i64 %662, i64* %664, align 8
  %665 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %666 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %665, i64 0
  %667 = bitcast %union.YYSTYPE* %666 to %struct.textint*
  %668 = getelementptr inbounds %struct.textint, %struct.textint* %667, i32 0, i32 1
  %669 = load i64, i64* %668, align 8
  %670 = load %struct.parser_control*, %struct.parser_control** %2, align 8
  %671 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %670, i32 0, i32 8
  store i64 %669, i64* %671, align 8
  br label %706

672:                                              ; preds = %625
  %673 = load %struct.parser_control*, %struct.parser_control** %2, align 8
  %674 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %673, i32 0, i32 22
  %675 = load i8, i8* %674, align 1
  %676 = trunc i8 %675 to i1
  br i1 %676, label %677, label %684

677:                                              ; preds = %672
  %678 = call i8* @gettext(i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.11.124, i64 0, i64 0)) #11
  %679 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %680 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %679, i64 -4
  %681 = bitcast %union.YYSTYPE* %680 to %struct.textint*
  %682 = getelementptr inbounds %struct.textint, %struct.textint* %681, i32 0, i32 1
  %683 = load i64, i64* %682, align 8
  call void (i8*, ...) @dbg_printf(i8* %678, i64 %683)
  br label %684

684:                                              ; preds = %677, %672
  %685 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %686 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %685, i64 -4
  %687 = bitcast %union.YYSTYPE* %686 to %struct.textint*
  %688 = getelementptr inbounds %struct.textint, %struct.textint* %687, i32 0, i32 1
  %689 = load i64, i64* %688, align 8
  %690 = load %struct.parser_control*, %struct.parser_control** %2, align 8
  %691 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %690, i32 0, i32 7
  store i64 %689, i64* %691, align 8
  %692 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %693 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %692, i64 -2
  %694 = bitcast %union.YYSTYPE* %693 to %struct.textint*
  %695 = getelementptr inbounds %struct.textint, %struct.textint* %694, i32 0, i32 1
  %696 = load i64, i64* %695, align 8
  %697 = load %struct.parser_control*, %struct.parser_control** %2, align 8
  %698 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %697, i32 0, i32 8
  store i64 %696, i64* %698, align 8
  %699 = load %struct.parser_control*, %struct.parser_control** %2, align 8
  %700 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %699, i32 0, i32 6
  %701 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %702 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %701, i64 0
  %703 = bitcast %union.YYSTYPE* %702 to %struct.textint*
  %704 = bitcast %struct.textint* %700 to i8*
  %705 = bitcast %struct.textint* %703 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %704, i8* align 8 %705, i64 24, i1 false)
  br label %706

706:                                              ; preds = %684, %650
  br label %7121

707:                                              ; preds = %245
  %708 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %709 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %708, i64 -2
  %710 = bitcast %union.YYSTYPE* %709 to %struct.textint*
  %711 = getelementptr inbounds %struct.textint, %struct.textint* %710, i32 0, i32 1
  %712 = load i64, i64* %711, align 8
  %713 = load %struct.parser_control*, %struct.parser_control** %2, align 8
  %714 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %713, i32 0, i32 8
  store i64 %712, i64* %714, align 8
  %715 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %716 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %715, i64 -1
  %717 = bitcast %union.YYSTYPE* %716 to i64*
  %718 = load i64, i64* %717, align 8
  %719 = load %struct.parser_control*, %struct.parser_control** %2, align 8
  %720 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %719, i32 0, i32 7
  store i64 %718, i64* %720, align 8
  %721 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %722 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %721, i64 0
  %723 = bitcast %union.YYSTYPE* %722 to %struct.textint*
  %724 = getelementptr inbounds %struct.textint, %struct.textint* %723, i32 0, i32 1
  %725 = load i64, i64* %724, align 8
  %726 = load %struct.parser_control*, %struct.parser_control** %2, align 8
  %727 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %726, i32 0, i32 6
  %728 = getelementptr inbounds %struct.textint, %struct.textint* %727, i32 0, i32 1
  %729 = call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 0, i64 %725)
  %730 = extractvalue { i64, i1 } %729, 1
  %731 = extractvalue { i64, i1 } %729, 0
  store i64 %731, i64* %728, align 8
  br i1 %730, label %732, label %733

732:                                              ; preds = %707
  br label %7297

733:                                              ; preds = %707
  %734 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %735 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %734, i64 0
  %736 = bitcast %union.YYSTYPE* %735 to %struct.textint*
  %737 = getelementptr inbounds %struct.textint, %struct.textint* %736, i32 0, i32 2
  %738 = load i64, i64* %737, align 8
  %739 = load %struct.parser_control*, %struct.parser_control** %2, align 8
  %740 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %739, i32 0, i32 6
  %741 = getelementptr inbounds %struct.textint, %struct.textint* %740, i32 0, i32 2
  store i64 %738, i64* %741, align 8
  br label %7121

742:                                              ; preds = %245
  %743 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %744 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %743, i64 -2
  %745 = bitcast %union.YYSTYPE* %744 to i64*
  %746 = load i64, i64* %745, align 8
  %747 = load %struct.parser_control*, %struct.parser_control** %2, align 8
  %748 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %747, i32 0, i32 7
  store i64 %746, i64* %748, align 8
  %749 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %750 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %749, i64 -1
  %751 = bitcast %union.YYSTYPE* %750 to %struct.textint*
  %752 = getelementptr inbounds %struct.textint, %struct.textint* %751, i32 0, i32 1
  %753 = load i64, i64* %752, align 8
  %754 = load %struct.parser_control*, %struct.parser_control** %2, align 8
  %755 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %754, i32 0, i32 8
  %756 = call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 0, i64 %753)
  %757 = extractvalue { i64, i1 } %756, 1
  %758 = extractvalue { i64, i1 } %756, 0
  store i64 %758, i64* %755, align 8
  br i1 %757, label %759, label %760

759:                                              ; preds = %742
  br label %7297

760:                                              ; preds = %742
  %761 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %762 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %761, i64 0
  %763 = bitcast %union.YYSTYPE* %762 to %struct.textint*
  %764 = getelementptr inbounds %struct.textint, %struct.textint* %763, i32 0, i32 1
  %765 = load i64, i64* %764, align 8
  %766 = load %struct.parser_control*, %struct.parser_control** %2, align 8
  %767 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %766, i32 0, i32 6
  %768 = getelementptr inbounds %struct.textint, %struct.textint* %767, i32 0, i32 1
  %769 = call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 0, i64 %765)
  %770 = extractvalue { i64, i1 } %769, 1
  %771 = extractvalue { i64, i1 } %769, 0
  store i64 %771, i64* %768, align 8
  br i1 %770, label %772, label %773

772:                                              ; preds = %760
  br label %7297

773:                                              ; preds = %760
  %774 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %775 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %774, i64 0
  %776 = bitcast %union.YYSTYPE* %775 to %struct.textint*
  %777 = getelementptr inbounds %struct.textint, %struct.textint* %776, i32 0, i32 2
  %778 = load i64, i64* %777, align 8
  %779 = load %struct.parser_control*, %struct.parser_control** %2, align 8
  %780 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %779, i32 0, i32 6
  %781 = getelementptr inbounds %struct.textint, %struct.textint* %780, i32 0, i32 2
  store i64 %778, i64* %781, align 8
  br label %7121

782:                                              ; preds = %245
  %783 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %784 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %783, i64 -1
  %785 = bitcast %union.YYSTYPE* %784 to i64*
  %786 = load i64, i64* %785, align 8
  %787 = load %struct.parser_control*, %struct.parser_control** %2, align 8
  %788 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %787, i32 0, i32 7
  store i64 %786, i64* %788, align 8
  %789 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %790 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %789, i64 0
  %791 = bitcast %union.YYSTYPE* %790 to %struct.textint*
  %792 = getelementptr inbounds %struct.textint, %struct.textint* %791, i32 0, i32 1
  %793 = load i64, i64* %792, align 8
  %794 = load %struct.parser_control*, %struct.parser_control** %2, align 8
  %795 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %794, i32 0, i32 8
  store i64 %793, i64* %795, align 8
  br label %7121

796:                                              ; preds = %245
  %797 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %798 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %797, i64 -3
  %799 = bitcast %union.YYSTYPE* %798 to i64*
  %800 = load i64, i64* %799, align 8
  %801 = load %struct.parser_control*, %struct.parser_control** %2, align 8
  %802 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %801, i32 0, i32 7
  store i64 %800, i64* %802, align 8
  %803 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %804 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %803, i64 -2
  %805 = bitcast %union.YYSTYPE* %804 to %struct.textint*
  %806 = getelementptr inbounds %struct.textint, %struct.textint* %805, i32 0, i32 1
  %807 = load i64, i64* %806, align 8
  %808 = load %struct.parser_control*, %struct.parser_control** %2, align 8
  %809 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %808, i32 0, i32 8
  store i64 %807, i64* %809, align 8
  %810 = load %struct.parser_control*, %struct.parser_control** %2, align 8
  %811 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %810, i32 0, i32 6
  %812 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %813 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %812, i64 0
  %814 = bitcast %union.YYSTYPE* %813 to %struct.textint*
  %815 = bitcast %struct.textint* %811 to i8*
  %816 = bitcast %struct.textint* %814 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %815, i8* align 8 %816, i64 24, i1 false)
  br label %7121

817:                                              ; preds = %245
  %818 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %819 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %818, i64 -1
  %820 = bitcast %union.YYSTYPE* %819 to %struct.textint*
  %821 = getelementptr inbounds %struct.textint, %struct.textint* %820, i32 0, i32 1
  %822 = load i64, i64* %821, align 8
  %823 = load %struct.parser_control*, %struct.parser_control** %2, align 8
  %824 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %823, i32 0, i32 8
  store i64 %822, i64* %824, align 8
  %825 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %826 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %825, i64 0
  %827 = bitcast %union.YYSTYPE* %826 to i64*
  %828 = load i64, i64* %827, align 8
  %829 = load %struct.parser_control*, %struct.parser_control** %2, align 8
  %830 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %829, i32 0, i32 7
  store i64 %828, i64* %830, align 8
  br label %7121

831:                                              ; preds = %245
  %832 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %833 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %832, i64 -2
  %834 = bitcast %union.YYSTYPE* %833 to %struct.textint*
  %835 = getelementptr inbounds %struct.textint, %struct.textint* %834, i32 0, i32 1
  %836 = load i64, i64* %835, align 8
  %837 = load %struct.parser_control*, %struct.parser_control** %2, align 8
  %838 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %837, i32 0, i32 8
  store i64 %836, i64* %838, align 8
  %839 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %840 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %839, i64 -1
  %841 = bitcast %union.YYSTYPE* %840 to i64*
  %842 = load i64, i64* %841, align 8
  %843 = load %struct.parser_control*, %struct.parser_control** %2, align 8
  %844 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %843, i32 0, i32 7
  store i64 %842, i64* %844, align 8
  %845 = load %struct.parser_control*, %struct.parser_control** %2, align 8
  %846 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %845, i32 0, i32 6
  %847 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %848 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %847, i64 0
  %849 = bitcast %union.YYSTYPE* %848 to %struct.textint*
  %850 = bitcast %struct.textint* %846 to i8*
  %851 = bitcast %struct.textint* %849 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %850, i8* align 8 %851, i64 24, i1 false)
  br label %7121

852:                                              ; preds = %245
  %853 = load %struct.parser_control*, %struct.parser_control** %2, align 8
  %854 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %853, i32 0, i32 6
  %855 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %856 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %855, i64 -2
  %857 = bitcast %union.YYSTYPE* %856 to %struct.textint*
  %858 = bitcast %struct.textint* %854 to i8*
  %859 = bitcast %struct.textint* %857 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %858, i8* align 8 %859, i64 24, i1 false)
  %860 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %861 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %860, i64 -1
  %862 = bitcast %union.YYSTYPE* %861 to %struct.textint*
  %863 = getelementptr inbounds %struct.textint, %struct.textint* %862, i32 0, i32 1
  %864 = load i64, i64* %863, align 8
  %865 = load %struct.parser_control*, %struct.parser_control** %2, align 8
  %866 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %865, i32 0, i32 7
  %867 = call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 0, i64 %864)
  %868 = extractvalue { i64, i1 } %867, 1
  %869 = extractvalue { i64, i1 } %867, 0
  store i64 %869, i64* %866, align 8
  br i1 %868, label %870, label %871

870:                                              ; preds = %852
  br label %7297

871:                                              ; preds = %852
  %872 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %873 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %872, i64 0
  %874 = bitcast %union.YYSTYPE* %873 to %struct.textint*
  %875 = getelementptr inbounds %struct.textint, %struct.textint* %874, i32 0, i32 1
  %876 = load i64, i64* %875, align 8
  %877 = load %struct.parser_control*, %struct.parser_control** %2, align 8
  %878 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %877, i32 0, i32 8
  %879 = call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 0, i64 %876)
  %880 = extractvalue { i64, i1 } %879, 1
  %881 = extractvalue { i64, i1 } %879, 0
  store i64 %881, i64* %878, align 8
  br i1 %880, label %882, label %883

882:                                              ; preds = %871
  br label %7297

883:                                              ; preds = %871
  br label %7121

884:                                              ; preds = %245
  %885 = load %struct.parser_control*, %struct.parser_control** %2, align 8
  %886 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %887 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %886, i64 -1
  %888 = bitcast %union.YYSTYPE* %887 to %struct.relative_time*
  %889 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %890 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %889, i64 0
  %891 = bitcast %union.YYSTYPE* %890 to i64*
  %892 = load i64, i64* %891, align 8
  %893 = trunc i64 %892 to i32
  %894 = call zeroext i1 @apply_relative_time(%struct.parser_control* %885, %struct.relative_time* byval(%struct.relative_time) align 8 %888, i32 %893)
  br i1 %894, label %896, label %895

895:                                              ; preds = %884
  br label %7297

896:                                              ; preds = %884
  br label %7121

897:                                              ; preds = %245
  %898 = load %struct.parser_control*, %struct.parser_control** %2, align 8
  %899 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %900 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %899, i64 0
  %901 = bitcast %union.YYSTYPE* %900 to %struct.relative_time*
  %902 = call zeroext i1 @apply_relative_time(%struct.parser_control* %898, %struct.relative_time* byval(%struct.relative_time) align 8 %901, i32 1)
  br i1 %902, label %904, label %903

903:                                              ; preds = %897
  br label %7297

904:                                              ; preds = %897
  br label %7121

905:                                              ; preds = %245
  %906 = load %struct.parser_control*, %struct.parser_control** %2, align 8
  %907 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %908 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %907, i64 0
  %909 = bitcast %union.YYSTYPE* %908 to %struct.relative_time*
  %910 = call zeroext i1 @apply_relative_time(%struct.parser_control* %906, %struct.relative_time* byval(%struct.relative_time) align 8 %909, i32 1)
  br i1 %910, label %912, label %911

911:                                              ; preds = %905
  br label %7297

912:                                              ; preds = %905
  br label %7121

913:                                              ; preds = %245
  %914 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %915 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %26, i32 0, i32 0
  store i64 0, i64* %915, align 8
  %916 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %26, i32 0, i32 1
  store i64 0, i64* %916, align 8
  %917 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %26, i32 0, i32 2
  store i64 0, i64* %917, align 8
  %918 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %26, i32 0, i32 3
  store i64 0, i64* %918, align 8
  %919 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %26, i32 0, i32 4
  store i64 0, i64* %919, align 8
  %920 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %26, i32 0, i32 5
  store i64 0, i64* %920, align 8
  %921 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %26, i32 0, i32 6
  store i32 0, i32* %921, align 8
  %922 = bitcast %struct.relative_time* %914 to i8*
  %923 = bitcast %struct.relative_time* %26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %922, i8* align 8 %923, i64 56, i1 false)
  %924 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %925 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %924, i64 -1
  %926 = bitcast %union.YYSTYPE* %925 to i64*
  %927 = load i64, i64* %926, align 8
  %928 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %929 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %928, i32 0, i32 0
  store i64 %927, i64* %929, align 8
  br label %7121

930:                                              ; preds = %245
  %931 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %932 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %27, i32 0, i32 0
  store i64 0, i64* %932, align 8
  %933 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %27, i32 0, i32 1
  store i64 0, i64* %933, align 8
  %934 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %27, i32 0, i32 2
  store i64 0, i64* %934, align 8
  %935 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %27, i32 0, i32 3
  store i64 0, i64* %935, align 8
  %936 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %27, i32 0, i32 4
  store i64 0, i64* %936, align 8
  %937 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %27, i32 0, i32 5
  store i64 0, i64* %937, align 8
  %938 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %27, i32 0, i32 6
  store i32 0, i32* %938, align 8
  %939 = bitcast %struct.relative_time* %931 to i8*
  %940 = bitcast %struct.relative_time* %27 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %939, i8* align 8 %940, i64 56, i1 false)
  %941 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %942 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %941, i64 -1
  %943 = bitcast %union.YYSTYPE* %942 to %struct.textint*
  %944 = getelementptr inbounds %struct.textint, %struct.textint* %943, i32 0, i32 1
  %945 = load i64, i64* %944, align 8
  %946 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %947 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %946, i32 0, i32 0
  store i64 %945, i64* %947, align 8
  br label %7121

948:                                              ; preds = %245
  %949 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %950 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %28, i32 0, i32 0
  store i64 0, i64* %950, align 8
  %951 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %28, i32 0, i32 1
  store i64 0, i64* %951, align 8
  %952 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %28, i32 0, i32 2
  store i64 0, i64* %952, align 8
  %953 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %28, i32 0, i32 3
  store i64 0, i64* %953, align 8
  %954 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %28, i32 0, i32 4
  store i64 0, i64* %954, align 8
  %955 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %28, i32 0, i32 5
  store i64 0, i64* %955, align 8
  %956 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %28, i32 0, i32 6
  store i32 0, i32* %956, align 8
  %957 = bitcast %struct.relative_time* %949 to i8*
  %958 = bitcast %struct.relative_time* %28 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %957, i8* align 8 %958, i64 56, i1 false)
  %959 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %960 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %959, i32 0, i32 0
  store i64 1, i64* %960, align 8
  br label %7121

961:                                              ; preds = %245
  %962 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %963 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %29, i32 0, i32 0
  store i64 0, i64* %963, align 8
  %964 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %29, i32 0, i32 1
  store i64 0, i64* %964, align 8
  %965 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %29, i32 0, i32 2
  store i64 0, i64* %965, align 8
  %966 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %29, i32 0, i32 3
  store i64 0, i64* %966, align 8
  %967 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %29, i32 0, i32 4
  store i64 0, i64* %967, align 8
  %968 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %29, i32 0, i32 5
  store i64 0, i64* %968, align 8
  %969 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %29, i32 0, i32 6
  store i32 0, i32* %969, align 8
  %970 = bitcast %struct.relative_time* %962 to i8*
  %971 = bitcast %struct.relative_time* %29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %970, i8* align 8 %971, i64 56, i1 false)
  %972 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %973 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %972, i64 -1
  %974 = bitcast %union.YYSTYPE* %973 to i64*
  %975 = load i64, i64* %974, align 8
  %976 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %977 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %976, i32 0, i32 1
  store i64 %975, i64* %977, align 8
  br label %7121

978:                                              ; preds = %245
  %979 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %980 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %30, i32 0, i32 0
  store i64 0, i64* %980, align 8
  %981 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %30, i32 0, i32 1
  store i64 0, i64* %981, align 8
  %982 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %30, i32 0, i32 2
  store i64 0, i64* %982, align 8
  %983 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %30, i32 0, i32 3
  store i64 0, i64* %983, align 8
  %984 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %30, i32 0, i32 4
  store i64 0, i64* %984, align 8
  %985 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %30, i32 0, i32 5
  store i64 0, i64* %985, align 8
  %986 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %30, i32 0, i32 6
  store i32 0, i32* %986, align 8
  %987 = bitcast %struct.relative_time* %979 to i8*
  %988 = bitcast %struct.relative_time* %30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %987, i8* align 8 %988, i64 56, i1 false)
  %989 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %990 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %989, i64 -1
  %991 = bitcast %union.YYSTYPE* %990 to %struct.textint*
  %992 = getelementptr inbounds %struct.textint, %struct.textint* %991, i32 0, i32 1
  %993 = load i64, i64* %992, align 8
  %994 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %995 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %994, i32 0, i32 1
  store i64 %993, i64* %995, align 8
  br label %7121

996:                                              ; preds = %245
  %997 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %998 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %31, i32 0, i32 0
  store i64 0, i64* %998, align 8
  %999 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %31, i32 0, i32 1
  store i64 0, i64* %999, align 8
  %1000 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %31, i32 0, i32 2
  store i64 0, i64* %1000, align 8
  %1001 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %31, i32 0, i32 3
  store i64 0, i64* %1001, align 8
  %1002 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %31, i32 0, i32 4
  store i64 0, i64* %1002, align 8
  %1003 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %31, i32 0, i32 5
  store i64 0, i64* %1003, align 8
  %1004 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %31, i32 0, i32 6
  store i32 0, i32* %1004, align 8
  %1005 = bitcast %struct.relative_time* %997 to i8*
  %1006 = bitcast %struct.relative_time* %31 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1005, i8* align 8 %1006, i64 56, i1 false)
  %1007 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %1008 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %1007, i32 0, i32 1
  store i64 1, i64* %1008, align 8
  br label %7121

1009:                                             ; preds = %245
  %1010 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %1011 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %32, i32 0, i32 0
  store i64 0, i64* %1011, align 8
  %1012 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %32, i32 0, i32 1
  store i64 0, i64* %1012, align 8
  %1013 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %32, i32 0, i32 2
  store i64 0, i64* %1013, align 8
  %1014 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %32, i32 0, i32 3
  store i64 0, i64* %1014, align 8
  %1015 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %32, i32 0, i32 4
  store i64 0, i64* %1015, align 8
  %1016 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %32, i32 0, i32 5
  store i64 0, i64* %1016, align 8
  %1017 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %32, i32 0, i32 6
  store i32 0, i32* %1017, align 8
  %1018 = bitcast %struct.relative_time* %1010 to i8*
  %1019 = bitcast %struct.relative_time* %32 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1018, i8* align 8 %1019, i64 56, i1 false)
  br i1 false, label %1020, label %1391

1020:                                             ; preds = %1009
  br i1 false, label %1206, label %1021

1021:                                             ; preds = %1020
  %1022 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1023 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1022, i64 0
  %1024 = bitcast %union.YYSTYPE* %1023 to i64*
  %1025 = load i64, i64* %1024, align 8
  %1026 = icmp slt i64 %1025, 0
  br i1 %1026, label %1027, label %1115

1027:                                             ; preds = %1021
  %1028 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1029 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1028, i64 -1
  %1030 = bitcast %union.YYSTYPE* %1029 to i64*
  %1031 = load i64, i64* %1030, align 8
  %1032 = icmp slt i64 %1031, 0
  br i1 %1032, label %1033, label %1074

1033:                                             ; preds = %1027
  br i1 true, label %1034, label %1045

1034:                                             ; preds = %1033
  %1035 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1036 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1035, i64 -1
  %1037 = bitcast %union.YYSTYPE* %1036 to i64*
  %1038 = load i64, i64* %1037, align 8
  %1039 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1040 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1039, i64 0
  %1041 = bitcast %union.YYSTYPE* %1040 to i64*
  %1042 = load i64, i64* %1041, align 8
  %1043 = sdiv i64 127, %1042
  %1044 = icmp slt i64 %1038, %1043
  br i1 %1044, label %1174, label %1190

1045:                                             ; preds = %1033
  br i1 true, label %1046, label %1052

1046:                                             ; preds = %1045
  %1047 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1048 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1047, i64 0
  %1049 = bitcast %union.YYSTYPE* %1048 to i64*
  %1050 = load i64, i64* %1049, align 8
  %1051 = icmp slt i64 %1050, -9223372036854775807
  br i1 %1051, label %1058, label %1059

1052:                                             ; preds = %1045
  %1053 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1054 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1053, i64 0
  %1055 = bitcast %union.YYSTYPE* %1054 to i64*
  %1056 = load i64, i64* %1055, align 8
  %1057 = icmp slt i64 0, %1056
  br i1 %1057, label %1058, label %1059

1058:                                             ; preds = %1052, %1046
  br label %1066

1059:                                             ; preds = %1052, %1046
  %1060 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1061 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1060, i64 0
  %1062 = bitcast %union.YYSTYPE* %1061 to i64*
  %1063 = load i64, i64* %1062, align 8
  %1064 = sub nsw i64 0, %1063
  %1065 = sdiv i64 127, %1064
  br label %1066

1066:                                             ; preds = %1059, %1058
  %1067 = phi i64 [ 0, %1058 ], [ %1065, %1059 ]
  %1068 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1069 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1068, i64 -1
  %1070 = bitcast %union.YYSTYPE* %1069 to i64*
  %1071 = load i64, i64* %1070, align 8
  %1072 = sub nsw i64 -1, %1071
  %1073 = icmp sle i64 %1067, %1072
  br i1 %1073, label %1174, label %1190

1074:                                             ; preds = %1027
  br i1 true, label %1075, label %1076

1075:                                             ; preds = %1074
  br i1 false, label %1077, label %1104

1076:                                             ; preds = %1074
  br i1 false, label %1077, label %1104

1077:                                             ; preds = %1076, %1075
  %1078 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1079 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1078, i64 0
  %1080 = bitcast %union.YYSTYPE* %1079 to i64*
  %1081 = load i64, i64* %1080, align 8
  %1082 = icmp eq i64 %1081, -1
  br i1 %1082, label %1083, label %1104

1083:                                             ; preds = %1077
  br i1 true, label %1084, label %1091

1084:                                             ; preds = %1083
  %1085 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1086 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1085, i64 -1
  %1087 = bitcast %union.YYSTYPE* %1086 to i64*
  %1088 = load i64, i64* %1087, align 8
  %1089 = add nsw i64 %1088, -128
  %1090 = icmp slt i64 0, %1089
  br i1 %1090, label %1174, label %1190

1091:                                             ; preds = %1083
  %1092 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1093 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1092, i64 -1
  %1094 = bitcast %union.YYSTYPE* %1093 to i64*
  %1095 = load i64, i64* %1094, align 8
  %1096 = icmp slt i64 0, %1095
  br i1 %1096, label %1097, label %1190

1097:                                             ; preds = %1091
  %1098 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1099 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1098, i64 -1
  %1100 = bitcast %union.YYSTYPE* %1099 to i64*
  %1101 = load i64, i64* %1100, align 8
  %1102 = sub nsw i64 %1101, 1
  %1103 = icmp slt i64 127, %1102
  br i1 %1103, label %1174, label %1190

1104:                                             ; preds = %1077, %1076, %1075
  %1105 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1106 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1105, i64 0
  %1107 = bitcast %union.YYSTYPE* %1106 to i64*
  %1108 = load i64, i64* %1107, align 8
  %1109 = sdiv i64 -128, %1108
  %1110 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1111 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1110, i64 -1
  %1112 = bitcast %union.YYSTYPE* %1111 to i64*
  %1113 = load i64, i64* %1112, align 8
  %1114 = icmp slt i64 %1109, %1113
  br i1 %1114, label %1174, label %1190

1115:                                             ; preds = %1021
  %1116 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1117 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1116, i64 0
  %1118 = bitcast %union.YYSTYPE* %1117 to i64*
  %1119 = load i64, i64* %1118, align 8
  %1120 = icmp eq i64 %1119, 0
  br i1 %1120, label %1121, label %1122

1121:                                             ; preds = %1115
  br i1 false, label %1174, label %1190

1122:                                             ; preds = %1115
  %1123 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1124 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1123, i64 -1
  %1125 = bitcast %union.YYSTYPE* %1124 to i64*
  %1126 = load i64, i64* %1125, align 8
  %1127 = icmp slt i64 %1126, 0
  br i1 %1127, label %1128, label %1163

1128:                                             ; preds = %1122
  br i1 true, label %1129, label %1130

1129:                                             ; preds = %1128
  br i1 false, label %1131, label %1152

1130:                                             ; preds = %1128
  br i1 false, label %1131, label %1152

1131:                                             ; preds = %1130, %1129
  %1132 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1133 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1132, i64 -1
  %1134 = bitcast %union.YYSTYPE* %1133 to i64*
  %1135 = load i64, i64* %1134, align 8
  %1136 = icmp eq i64 %1135, -1
  br i1 %1136, label %1137, label %1152

1137:                                             ; preds = %1131
  br i1 true, label %1138, label %1145

1138:                                             ; preds = %1137
  %1139 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1140 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1139, i64 0
  %1141 = bitcast %union.YYSTYPE* %1140 to i64*
  %1142 = load i64, i64* %1141, align 8
  %1143 = add nsw i64 %1142, -128
  %1144 = icmp slt i64 0, %1143
  br i1 %1144, label %1174, label %1190

1145:                                             ; preds = %1137
  %1146 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1147 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1146, i64 0
  %1148 = bitcast %union.YYSTYPE* %1147 to i64*
  %1149 = load i64, i64* %1148, align 8
  %1150 = sub nsw i64 %1149, 1
  %1151 = icmp slt i64 127, %1150
  br i1 %1151, label %1174, label %1190

1152:                                             ; preds = %1131, %1130, %1129
  %1153 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1154 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1153, i64 -1
  %1155 = bitcast %union.YYSTYPE* %1154 to i64*
  %1156 = load i64, i64* %1155, align 8
  %1157 = sdiv i64 -128, %1156
  %1158 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1159 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1158, i64 0
  %1160 = bitcast %union.YYSTYPE* %1159 to i64*
  %1161 = load i64, i64* %1160, align 8
  %1162 = icmp slt i64 %1157, %1161
  br i1 %1162, label %1174, label %1190

1163:                                             ; preds = %1122
  %1164 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1165 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1164, i64 0
  %1166 = bitcast %union.YYSTYPE* %1165 to i64*
  %1167 = load i64, i64* %1166, align 8
  %1168 = sdiv i64 127, %1167
  %1169 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1170 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1169, i64 -1
  %1171 = bitcast %union.YYSTYPE* %1170 to i64*
  %1172 = load i64, i64* %1171, align 8
  %1173 = icmp slt i64 %1168, %1172
  br i1 %1173, label %1174, label %1190

1174:                                             ; preds = %1163, %1152, %1145, %1138, %1121, %1104, %1097, %1084, %1066, %1034
  %1175 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1176 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1175, i64 -1
  %1177 = bitcast %union.YYSTYPE* %1176 to i64*
  %1178 = load i64, i64* %1177, align 8
  %1179 = trunc i64 %1178 to i32
  %1180 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1181 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1180, i64 0
  %1182 = bitcast %union.YYSTYPE* %1181 to i64*
  %1183 = load i64, i64* %1182, align 8
  %1184 = trunc i64 %1183 to i32
  %1185 = mul i32 %1179, %1184
  %1186 = trunc i32 %1185 to i8
  %1187 = sext i8 %1186 to i64
  %1188 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %1189 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %1188, i32 0, i32 2
  store i64 %1187, i64* %1189, align 8
  br i1 true, label %2830, label %2831

1190:                                             ; preds = %1163, %1152, %1145, %1138, %1121, %1104, %1097, %1091, %1084, %1066, %1034
  %1191 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1192 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1191, i64 -1
  %1193 = bitcast %union.YYSTYPE* %1192 to i64*
  %1194 = load i64, i64* %1193, align 8
  %1195 = trunc i64 %1194 to i32
  %1196 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1197 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1196, i64 0
  %1198 = bitcast %union.YYSTYPE* %1197 to i64*
  %1199 = load i64, i64* %1198, align 8
  %1200 = trunc i64 %1199 to i32
  %1201 = mul i32 %1195, %1200
  %1202 = trunc i32 %1201 to i8
  %1203 = sext i8 %1202 to i64
  %1204 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %1205 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %1204, i32 0, i32 2
  store i64 %1203, i64* %1205, align 8
  br i1 false, label %2830, label %2831

1206:                                             ; preds = %1020
  %1207 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1208 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1207, i64 0
  %1209 = bitcast %union.YYSTYPE* %1208 to i64*
  %1210 = load i64, i64* %1209, align 8
  %1211 = icmp slt i64 %1210, 0
  br i1 %1211, label %1212, label %1300

1212:                                             ; preds = %1206
  %1213 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1214 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1213, i64 -1
  %1215 = bitcast %union.YYSTYPE* %1214 to i64*
  %1216 = load i64, i64* %1215, align 8
  %1217 = icmp slt i64 %1216, 0
  br i1 %1217, label %1218, label %1259

1218:                                             ; preds = %1212
  br i1 true, label %1219, label %1230

1219:                                             ; preds = %1218
  %1220 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1221 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1220, i64 -1
  %1222 = bitcast %union.YYSTYPE* %1221 to i64*
  %1223 = load i64, i64* %1222, align 8
  %1224 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1225 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1224, i64 0
  %1226 = bitcast %union.YYSTYPE* %1225 to i64*
  %1227 = load i64, i64* %1226, align 8
  %1228 = sdiv i64 255, %1227
  %1229 = icmp slt i64 %1223, %1228
  br i1 %1229, label %1359, label %1375

1230:                                             ; preds = %1218
  br i1 true, label %1231, label %1237

1231:                                             ; preds = %1230
  %1232 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1233 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1232, i64 0
  %1234 = bitcast %union.YYSTYPE* %1233 to i64*
  %1235 = load i64, i64* %1234, align 8
  %1236 = icmp slt i64 %1235, -9223372036854775807
  br i1 %1236, label %1243, label %1244

1237:                                             ; preds = %1230
  %1238 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1239 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1238, i64 0
  %1240 = bitcast %union.YYSTYPE* %1239 to i64*
  %1241 = load i64, i64* %1240, align 8
  %1242 = icmp slt i64 0, %1241
  br i1 %1242, label %1243, label %1244

1243:                                             ; preds = %1237, %1231
  br label %1251

1244:                                             ; preds = %1237, %1231
  %1245 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1246 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1245, i64 0
  %1247 = bitcast %union.YYSTYPE* %1246 to i64*
  %1248 = load i64, i64* %1247, align 8
  %1249 = sub nsw i64 0, %1248
  %1250 = sdiv i64 255, %1249
  br label %1251

1251:                                             ; preds = %1244, %1243
  %1252 = phi i64 [ 0, %1243 ], [ %1250, %1244 ]
  %1253 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1254 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1253, i64 -1
  %1255 = bitcast %union.YYSTYPE* %1254 to i64*
  %1256 = load i64, i64* %1255, align 8
  %1257 = sub nsw i64 -1, %1256
  %1258 = icmp sle i64 %1252, %1257
  br i1 %1258, label %1359, label %1375

1259:                                             ; preds = %1212
  br i1 true, label %1260, label %1261

1260:                                             ; preds = %1259
  br i1 false, label %1262, label %1289

1261:                                             ; preds = %1259
  br i1 false, label %1262, label %1289

1262:                                             ; preds = %1261, %1260
  %1263 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1264 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1263, i64 0
  %1265 = bitcast %union.YYSTYPE* %1264 to i64*
  %1266 = load i64, i64* %1265, align 8
  %1267 = icmp eq i64 %1266, -1
  br i1 %1267, label %1268, label %1289

1268:                                             ; preds = %1262
  br i1 true, label %1269, label %1276

1269:                                             ; preds = %1268
  %1270 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1271 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1270, i64 -1
  %1272 = bitcast %union.YYSTYPE* %1271 to i64*
  %1273 = load i64, i64* %1272, align 8
  %1274 = add nsw i64 %1273, 0
  %1275 = icmp slt i64 0, %1274
  br i1 %1275, label %1359, label %1375

1276:                                             ; preds = %1268
  %1277 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1278 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1277, i64 -1
  %1279 = bitcast %union.YYSTYPE* %1278 to i64*
  %1280 = load i64, i64* %1279, align 8
  %1281 = icmp slt i64 0, %1280
  br i1 %1281, label %1282, label %1375

1282:                                             ; preds = %1276
  %1283 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1284 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1283, i64 -1
  %1285 = bitcast %union.YYSTYPE* %1284 to i64*
  %1286 = load i64, i64* %1285, align 8
  %1287 = sub nsw i64 %1286, 1
  %1288 = icmp slt i64 -1, %1287
  br i1 %1288, label %1359, label %1375

1289:                                             ; preds = %1262, %1261, %1260
  %1290 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1291 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1290, i64 0
  %1292 = bitcast %union.YYSTYPE* %1291 to i64*
  %1293 = load i64, i64* %1292, align 8
  %1294 = sdiv i64 0, %1293
  %1295 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1296 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1295, i64 -1
  %1297 = bitcast %union.YYSTYPE* %1296 to i64*
  %1298 = load i64, i64* %1297, align 8
  %1299 = icmp slt i64 %1294, %1298
  br i1 %1299, label %1359, label %1375

1300:                                             ; preds = %1206
  %1301 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1302 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1301, i64 0
  %1303 = bitcast %union.YYSTYPE* %1302 to i64*
  %1304 = load i64, i64* %1303, align 8
  %1305 = icmp eq i64 %1304, 0
  br i1 %1305, label %1306, label %1307

1306:                                             ; preds = %1300
  br i1 false, label %1359, label %1375

1307:                                             ; preds = %1300
  %1308 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1309 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1308, i64 -1
  %1310 = bitcast %union.YYSTYPE* %1309 to i64*
  %1311 = load i64, i64* %1310, align 8
  %1312 = icmp slt i64 %1311, 0
  br i1 %1312, label %1313, label %1348

1313:                                             ; preds = %1307
  br i1 true, label %1314, label %1315

1314:                                             ; preds = %1313
  br i1 false, label %1316, label %1337

1315:                                             ; preds = %1313
  br i1 false, label %1316, label %1337

1316:                                             ; preds = %1315, %1314
  %1317 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1318 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1317, i64 -1
  %1319 = bitcast %union.YYSTYPE* %1318 to i64*
  %1320 = load i64, i64* %1319, align 8
  %1321 = icmp eq i64 %1320, -1
  br i1 %1321, label %1322, label %1337

1322:                                             ; preds = %1316
  br i1 true, label %1323, label %1330

1323:                                             ; preds = %1322
  %1324 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1325 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1324, i64 0
  %1326 = bitcast %union.YYSTYPE* %1325 to i64*
  %1327 = load i64, i64* %1326, align 8
  %1328 = add nsw i64 %1327, 0
  %1329 = icmp slt i64 0, %1328
  br i1 %1329, label %1359, label %1375

1330:                                             ; preds = %1322
  %1331 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1332 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1331, i64 0
  %1333 = bitcast %union.YYSTYPE* %1332 to i64*
  %1334 = load i64, i64* %1333, align 8
  %1335 = sub nsw i64 %1334, 1
  %1336 = icmp slt i64 -1, %1335
  br i1 %1336, label %1359, label %1375

1337:                                             ; preds = %1316, %1315, %1314
  %1338 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1339 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1338, i64 -1
  %1340 = bitcast %union.YYSTYPE* %1339 to i64*
  %1341 = load i64, i64* %1340, align 8
  %1342 = sdiv i64 0, %1341
  %1343 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1344 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1343, i64 0
  %1345 = bitcast %union.YYSTYPE* %1344 to i64*
  %1346 = load i64, i64* %1345, align 8
  %1347 = icmp slt i64 %1342, %1346
  br i1 %1347, label %1359, label %1375

1348:                                             ; preds = %1307
  %1349 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1350 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1349, i64 0
  %1351 = bitcast %union.YYSTYPE* %1350 to i64*
  %1352 = load i64, i64* %1351, align 8
  %1353 = sdiv i64 255, %1352
  %1354 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1355 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1354, i64 -1
  %1356 = bitcast %union.YYSTYPE* %1355 to i64*
  %1357 = load i64, i64* %1356, align 8
  %1358 = icmp slt i64 %1353, %1357
  br i1 %1358, label %1359, label %1375

1359:                                             ; preds = %1348, %1337, %1330, %1323, %1306, %1289, %1282, %1269, %1251, %1219
  %1360 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1361 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1360, i64 -1
  %1362 = bitcast %union.YYSTYPE* %1361 to i64*
  %1363 = load i64, i64* %1362, align 8
  %1364 = trunc i64 %1363 to i32
  %1365 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1366 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1365, i64 0
  %1367 = bitcast %union.YYSTYPE* %1366 to i64*
  %1368 = load i64, i64* %1367, align 8
  %1369 = trunc i64 %1368 to i32
  %1370 = mul i32 %1364, %1369
  %1371 = trunc i32 %1370 to i8
  %1372 = zext i8 %1371 to i64
  %1373 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %1374 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %1373, i32 0, i32 2
  store i64 %1372, i64* %1374, align 8
  br i1 true, label %2830, label %2831

1375:                                             ; preds = %1348, %1337, %1330, %1323, %1306, %1289, %1282, %1276, %1269, %1251, %1219
  %1376 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1377 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1376, i64 -1
  %1378 = bitcast %union.YYSTYPE* %1377 to i64*
  %1379 = load i64, i64* %1378, align 8
  %1380 = trunc i64 %1379 to i32
  %1381 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1382 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1381, i64 0
  %1383 = bitcast %union.YYSTYPE* %1382 to i64*
  %1384 = load i64, i64* %1383, align 8
  %1385 = trunc i64 %1384 to i32
  %1386 = mul i32 %1380, %1385
  %1387 = trunc i32 %1386 to i8
  %1388 = zext i8 %1387 to i64
  %1389 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %1390 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %1389, i32 0, i32 2
  store i64 %1388, i64* %1390, align 8
  br i1 false, label %2830, label %2831

1391:                                             ; preds = %1009
  br i1 false, label %1392, label %1763

1392:                                             ; preds = %1391
  br i1 false, label %1578, label %1393

1393:                                             ; preds = %1392
  %1394 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1395 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1394, i64 0
  %1396 = bitcast %union.YYSTYPE* %1395 to i64*
  %1397 = load i64, i64* %1396, align 8
  %1398 = icmp slt i64 %1397, 0
  br i1 %1398, label %1399, label %1487

1399:                                             ; preds = %1393
  %1400 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1401 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1400, i64 -1
  %1402 = bitcast %union.YYSTYPE* %1401 to i64*
  %1403 = load i64, i64* %1402, align 8
  %1404 = icmp slt i64 %1403, 0
  br i1 %1404, label %1405, label %1446

1405:                                             ; preds = %1399
  br i1 true, label %1406, label %1417

1406:                                             ; preds = %1405
  %1407 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1408 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1407, i64 -1
  %1409 = bitcast %union.YYSTYPE* %1408 to i64*
  %1410 = load i64, i64* %1409, align 8
  %1411 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1412 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1411, i64 0
  %1413 = bitcast %union.YYSTYPE* %1412 to i64*
  %1414 = load i64, i64* %1413, align 8
  %1415 = sdiv i64 32767, %1414
  %1416 = icmp slt i64 %1410, %1415
  br i1 %1416, label %1546, label %1562

1417:                                             ; preds = %1405
  br i1 true, label %1418, label %1424

1418:                                             ; preds = %1417
  %1419 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1420 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1419, i64 0
  %1421 = bitcast %union.YYSTYPE* %1420 to i64*
  %1422 = load i64, i64* %1421, align 8
  %1423 = icmp slt i64 %1422, -9223372036854775807
  br i1 %1423, label %1430, label %1431

1424:                                             ; preds = %1417
  %1425 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1426 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1425, i64 0
  %1427 = bitcast %union.YYSTYPE* %1426 to i64*
  %1428 = load i64, i64* %1427, align 8
  %1429 = icmp slt i64 0, %1428
  br i1 %1429, label %1430, label %1431

1430:                                             ; preds = %1424, %1418
  br label %1438

1431:                                             ; preds = %1424, %1418
  %1432 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1433 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1432, i64 0
  %1434 = bitcast %union.YYSTYPE* %1433 to i64*
  %1435 = load i64, i64* %1434, align 8
  %1436 = sub nsw i64 0, %1435
  %1437 = sdiv i64 32767, %1436
  br label %1438

1438:                                             ; preds = %1431, %1430
  %1439 = phi i64 [ 0, %1430 ], [ %1437, %1431 ]
  %1440 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1441 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1440, i64 -1
  %1442 = bitcast %union.YYSTYPE* %1441 to i64*
  %1443 = load i64, i64* %1442, align 8
  %1444 = sub nsw i64 -1, %1443
  %1445 = icmp sle i64 %1439, %1444
  br i1 %1445, label %1546, label %1562

1446:                                             ; preds = %1399
  br i1 true, label %1447, label %1448

1447:                                             ; preds = %1446
  br i1 false, label %1449, label %1476

1448:                                             ; preds = %1446
  br i1 false, label %1449, label %1476

1449:                                             ; preds = %1448, %1447
  %1450 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1451 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1450, i64 0
  %1452 = bitcast %union.YYSTYPE* %1451 to i64*
  %1453 = load i64, i64* %1452, align 8
  %1454 = icmp eq i64 %1453, -1
  br i1 %1454, label %1455, label %1476

1455:                                             ; preds = %1449
  br i1 true, label %1456, label %1463

1456:                                             ; preds = %1455
  %1457 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1458 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1457, i64 -1
  %1459 = bitcast %union.YYSTYPE* %1458 to i64*
  %1460 = load i64, i64* %1459, align 8
  %1461 = add nsw i64 %1460, -32768
  %1462 = icmp slt i64 0, %1461
  br i1 %1462, label %1546, label %1562

1463:                                             ; preds = %1455
  %1464 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1465 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1464, i64 -1
  %1466 = bitcast %union.YYSTYPE* %1465 to i64*
  %1467 = load i64, i64* %1466, align 8
  %1468 = icmp slt i64 0, %1467
  br i1 %1468, label %1469, label %1562

1469:                                             ; preds = %1463
  %1470 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1471 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1470, i64 -1
  %1472 = bitcast %union.YYSTYPE* %1471 to i64*
  %1473 = load i64, i64* %1472, align 8
  %1474 = sub nsw i64 %1473, 1
  %1475 = icmp slt i64 32767, %1474
  br i1 %1475, label %1546, label %1562

1476:                                             ; preds = %1449, %1448, %1447
  %1477 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1478 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1477, i64 0
  %1479 = bitcast %union.YYSTYPE* %1478 to i64*
  %1480 = load i64, i64* %1479, align 8
  %1481 = sdiv i64 -32768, %1480
  %1482 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1483 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1482, i64 -1
  %1484 = bitcast %union.YYSTYPE* %1483 to i64*
  %1485 = load i64, i64* %1484, align 8
  %1486 = icmp slt i64 %1481, %1485
  br i1 %1486, label %1546, label %1562

1487:                                             ; preds = %1393
  %1488 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1489 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1488, i64 0
  %1490 = bitcast %union.YYSTYPE* %1489 to i64*
  %1491 = load i64, i64* %1490, align 8
  %1492 = icmp eq i64 %1491, 0
  br i1 %1492, label %1493, label %1494

1493:                                             ; preds = %1487
  br i1 false, label %1546, label %1562

1494:                                             ; preds = %1487
  %1495 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1496 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1495, i64 -1
  %1497 = bitcast %union.YYSTYPE* %1496 to i64*
  %1498 = load i64, i64* %1497, align 8
  %1499 = icmp slt i64 %1498, 0
  br i1 %1499, label %1500, label %1535

1500:                                             ; preds = %1494
  br i1 true, label %1501, label %1502

1501:                                             ; preds = %1500
  br i1 false, label %1503, label %1524

1502:                                             ; preds = %1500
  br i1 false, label %1503, label %1524

1503:                                             ; preds = %1502, %1501
  %1504 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1505 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1504, i64 -1
  %1506 = bitcast %union.YYSTYPE* %1505 to i64*
  %1507 = load i64, i64* %1506, align 8
  %1508 = icmp eq i64 %1507, -1
  br i1 %1508, label %1509, label %1524

1509:                                             ; preds = %1503
  br i1 true, label %1510, label %1517

1510:                                             ; preds = %1509
  %1511 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1512 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1511, i64 0
  %1513 = bitcast %union.YYSTYPE* %1512 to i64*
  %1514 = load i64, i64* %1513, align 8
  %1515 = add nsw i64 %1514, -32768
  %1516 = icmp slt i64 0, %1515
  br i1 %1516, label %1546, label %1562

1517:                                             ; preds = %1509
  %1518 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1519 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1518, i64 0
  %1520 = bitcast %union.YYSTYPE* %1519 to i64*
  %1521 = load i64, i64* %1520, align 8
  %1522 = sub nsw i64 %1521, 1
  %1523 = icmp slt i64 32767, %1522
  br i1 %1523, label %1546, label %1562

1524:                                             ; preds = %1503, %1502, %1501
  %1525 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1526 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1525, i64 -1
  %1527 = bitcast %union.YYSTYPE* %1526 to i64*
  %1528 = load i64, i64* %1527, align 8
  %1529 = sdiv i64 -32768, %1528
  %1530 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1531 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1530, i64 0
  %1532 = bitcast %union.YYSTYPE* %1531 to i64*
  %1533 = load i64, i64* %1532, align 8
  %1534 = icmp slt i64 %1529, %1533
  br i1 %1534, label %1546, label %1562

1535:                                             ; preds = %1494
  %1536 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1537 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1536, i64 0
  %1538 = bitcast %union.YYSTYPE* %1537 to i64*
  %1539 = load i64, i64* %1538, align 8
  %1540 = sdiv i64 32767, %1539
  %1541 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1542 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1541, i64 -1
  %1543 = bitcast %union.YYSTYPE* %1542 to i64*
  %1544 = load i64, i64* %1543, align 8
  %1545 = icmp slt i64 %1540, %1544
  br i1 %1545, label %1546, label %1562

1546:                                             ; preds = %1535, %1524, %1517, %1510, %1493, %1476, %1469, %1456, %1438, %1406
  %1547 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1548 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1547, i64 -1
  %1549 = bitcast %union.YYSTYPE* %1548 to i64*
  %1550 = load i64, i64* %1549, align 8
  %1551 = trunc i64 %1550 to i32
  %1552 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1553 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1552, i64 0
  %1554 = bitcast %union.YYSTYPE* %1553 to i64*
  %1555 = load i64, i64* %1554, align 8
  %1556 = trunc i64 %1555 to i32
  %1557 = mul i32 %1551, %1556
  %1558 = trunc i32 %1557 to i16
  %1559 = sext i16 %1558 to i64
  %1560 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %1561 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %1560, i32 0, i32 2
  store i64 %1559, i64* %1561, align 8
  br i1 true, label %2830, label %2831

1562:                                             ; preds = %1535, %1524, %1517, %1510, %1493, %1476, %1469, %1463, %1456, %1438, %1406
  %1563 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1564 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1563, i64 -1
  %1565 = bitcast %union.YYSTYPE* %1564 to i64*
  %1566 = load i64, i64* %1565, align 8
  %1567 = trunc i64 %1566 to i32
  %1568 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1569 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1568, i64 0
  %1570 = bitcast %union.YYSTYPE* %1569 to i64*
  %1571 = load i64, i64* %1570, align 8
  %1572 = trunc i64 %1571 to i32
  %1573 = mul i32 %1567, %1572
  %1574 = trunc i32 %1573 to i16
  %1575 = sext i16 %1574 to i64
  %1576 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %1577 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %1576, i32 0, i32 2
  store i64 %1575, i64* %1577, align 8
  br i1 false, label %2830, label %2831

1578:                                             ; preds = %1392
  %1579 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1580 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1579, i64 0
  %1581 = bitcast %union.YYSTYPE* %1580 to i64*
  %1582 = load i64, i64* %1581, align 8
  %1583 = icmp slt i64 %1582, 0
  br i1 %1583, label %1584, label %1672

1584:                                             ; preds = %1578
  %1585 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1586 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1585, i64 -1
  %1587 = bitcast %union.YYSTYPE* %1586 to i64*
  %1588 = load i64, i64* %1587, align 8
  %1589 = icmp slt i64 %1588, 0
  br i1 %1589, label %1590, label %1631

1590:                                             ; preds = %1584
  br i1 true, label %1591, label %1602

1591:                                             ; preds = %1590
  %1592 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1593 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1592, i64 -1
  %1594 = bitcast %union.YYSTYPE* %1593 to i64*
  %1595 = load i64, i64* %1594, align 8
  %1596 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1597 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1596, i64 0
  %1598 = bitcast %union.YYSTYPE* %1597 to i64*
  %1599 = load i64, i64* %1598, align 8
  %1600 = sdiv i64 65535, %1599
  %1601 = icmp slt i64 %1595, %1600
  br i1 %1601, label %1731, label %1747

1602:                                             ; preds = %1590
  br i1 true, label %1603, label %1609

1603:                                             ; preds = %1602
  %1604 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1605 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1604, i64 0
  %1606 = bitcast %union.YYSTYPE* %1605 to i64*
  %1607 = load i64, i64* %1606, align 8
  %1608 = icmp slt i64 %1607, -9223372036854775807
  br i1 %1608, label %1615, label %1616

1609:                                             ; preds = %1602
  %1610 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1611 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1610, i64 0
  %1612 = bitcast %union.YYSTYPE* %1611 to i64*
  %1613 = load i64, i64* %1612, align 8
  %1614 = icmp slt i64 0, %1613
  br i1 %1614, label %1615, label %1616

1615:                                             ; preds = %1609, %1603
  br label %1623

1616:                                             ; preds = %1609, %1603
  %1617 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1618 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1617, i64 0
  %1619 = bitcast %union.YYSTYPE* %1618 to i64*
  %1620 = load i64, i64* %1619, align 8
  %1621 = sub nsw i64 0, %1620
  %1622 = sdiv i64 65535, %1621
  br label %1623

1623:                                             ; preds = %1616, %1615
  %1624 = phi i64 [ 0, %1615 ], [ %1622, %1616 ]
  %1625 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1626 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1625, i64 -1
  %1627 = bitcast %union.YYSTYPE* %1626 to i64*
  %1628 = load i64, i64* %1627, align 8
  %1629 = sub nsw i64 -1, %1628
  %1630 = icmp sle i64 %1624, %1629
  br i1 %1630, label %1731, label %1747

1631:                                             ; preds = %1584
  br i1 true, label %1632, label %1633

1632:                                             ; preds = %1631
  br i1 false, label %1634, label %1661

1633:                                             ; preds = %1631
  br i1 false, label %1634, label %1661

1634:                                             ; preds = %1633, %1632
  %1635 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1636 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1635, i64 0
  %1637 = bitcast %union.YYSTYPE* %1636 to i64*
  %1638 = load i64, i64* %1637, align 8
  %1639 = icmp eq i64 %1638, -1
  br i1 %1639, label %1640, label %1661

1640:                                             ; preds = %1634
  br i1 true, label %1641, label %1648

1641:                                             ; preds = %1640
  %1642 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1643 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1642, i64 -1
  %1644 = bitcast %union.YYSTYPE* %1643 to i64*
  %1645 = load i64, i64* %1644, align 8
  %1646 = add nsw i64 %1645, 0
  %1647 = icmp slt i64 0, %1646
  br i1 %1647, label %1731, label %1747

1648:                                             ; preds = %1640
  %1649 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1650 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1649, i64 -1
  %1651 = bitcast %union.YYSTYPE* %1650 to i64*
  %1652 = load i64, i64* %1651, align 8
  %1653 = icmp slt i64 0, %1652
  br i1 %1653, label %1654, label %1747

1654:                                             ; preds = %1648
  %1655 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1656 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1655, i64 -1
  %1657 = bitcast %union.YYSTYPE* %1656 to i64*
  %1658 = load i64, i64* %1657, align 8
  %1659 = sub nsw i64 %1658, 1
  %1660 = icmp slt i64 -1, %1659
  br i1 %1660, label %1731, label %1747

1661:                                             ; preds = %1634, %1633, %1632
  %1662 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1663 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1662, i64 0
  %1664 = bitcast %union.YYSTYPE* %1663 to i64*
  %1665 = load i64, i64* %1664, align 8
  %1666 = sdiv i64 0, %1665
  %1667 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1668 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1667, i64 -1
  %1669 = bitcast %union.YYSTYPE* %1668 to i64*
  %1670 = load i64, i64* %1669, align 8
  %1671 = icmp slt i64 %1666, %1670
  br i1 %1671, label %1731, label %1747

1672:                                             ; preds = %1578
  %1673 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1674 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1673, i64 0
  %1675 = bitcast %union.YYSTYPE* %1674 to i64*
  %1676 = load i64, i64* %1675, align 8
  %1677 = icmp eq i64 %1676, 0
  br i1 %1677, label %1678, label %1679

1678:                                             ; preds = %1672
  br i1 false, label %1731, label %1747

1679:                                             ; preds = %1672
  %1680 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1681 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1680, i64 -1
  %1682 = bitcast %union.YYSTYPE* %1681 to i64*
  %1683 = load i64, i64* %1682, align 8
  %1684 = icmp slt i64 %1683, 0
  br i1 %1684, label %1685, label %1720

1685:                                             ; preds = %1679
  br i1 true, label %1686, label %1687

1686:                                             ; preds = %1685
  br i1 false, label %1688, label %1709

1687:                                             ; preds = %1685
  br i1 false, label %1688, label %1709

1688:                                             ; preds = %1687, %1686
  %1689 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1690 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1689, i64 -1
  %1691 = bitcast %union.YYSTYPE* %1690 to i64*
  %1692 = load i64, i64* %1691, align 8
  %1693 = icmp eq i64 %1692, -1
  br i1 %1693, label %1694, label %1709

1694:                                             ; preds = %1688
  br i1 true, label %1695, label %1702

1695:                                             ; preds = %1694
  %1696 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1697 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1696, i64 0
  %1698 = bitcast %union.YYSTYPE* %1697 to i64*
  %1699 = load i64, i64* %1698, align 8
  %1700 = add nsw i64 %1699, 0
  %1701 = icmp slt i64 0, %1700
  br i1 %1701, label %1731, label %1747

1702:                                             ; preds = %1694
  %1703 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1704 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1703, i64 0
  %1705 = bitcast %union.YYSTYPE* %1704 to i64*
  %1706 = load i64, i64* %1705, align 8
  %1707 = sub nsw i64 %1706, 1
  %1708 = icmp slt i64 -1, %1707
  br i1 %1708, label %1731, label %1747

1709:                                             ; preds = %1688, %1687, %1686
  %1710 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1711 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1710, i64 -1
  %1712 = bitcast %union.YYSTYPE* %1711 to i64*
  %1713 = load i64, i64* %1712, align 8
  %1714 = sdiv i64 0, %1713
  %1715 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1716 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1715, i64 0
  %1717 = bitcast %union.YYSTYPE* %1716 to i64*
  %1718 = load i64, i64* %1717, align 8
  %1719 = icmp slt i64 %1714, %1718
  br i1 %1719, label %1731, label %1747

1720:                                             ; preds = %1679
  %1721 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1722 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1721, i64 0
  %1723 = bitcast %union.YYSTYPE* %1722 to i64*
  %1724 = load i64, i64* %1723, align 8
  %1725 = sdiv i64 65535, %1724
  %1726 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1727 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1726, i64 -1
  %1728 = bitcast %union.YYSTYPE* %1727 to i64*
  %1729 = load i64, i64* %1728, align 8
  %1730 = icmp slt i64 %1725, %1729
  br i1 %1730, label %1731, label %1747

1731:                                             ; preds = %1720, %1709, %1702, %1695, %1678, %1661, %1654, %1641, %1623, %1591
  %1732 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1733 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1732, i64 -1
  %1734 = bitcast %union.YYSTYPE* %1733 to i64*
  %1735 = load i64, i64* %1734, align 8
  %1736 = trunc i64 %1735 to i32
  %1737 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1738 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1737, i64 0
  %1739 = bitcast %union.YYSTYPE* %1738 to i64*
  %1740 = load i64, i64* %1739, align 8
  %1741 = trunc i64 %1740 to i32
  %1742 = mul i32 %1736, %1741
  %1743 = trunc i32 %1742 to i16
  %1744 = zext i16 %1743 to i64
  %1745 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %1746 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %1745, i32 0, i32 2
  store i64 %1744, i64* %1746, align 8
  br i1 true, label %2830, label %2831

1747:                                             ; preds = %1720, %1709, %1702, %1695, %1678, %1661, %1654, %1648, %1641, %1623, %1591
  %1748 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1749 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1748, i64 -1
  %1750 = bitcast %union.YYSTYPE* %1749 to i64*
  %1751 = load i64, i64* %1750, align 8
  %1752 = trunc i64 %1751 to i32
  %1753 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1754 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1753, i64 0
  %1755 = bitcast %union.YYSTYPE* %1754 to i64*
  %1756 = load i64, i64* %1755, align 8
  %1757 = trunc i64 %1756 to i32
  %1758 = mul i32 %1752, %1757
  %1759 = trunc i32 %1758 to i16
  %1760 = zext i16 %1759 to i64
  %1761 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %1762 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %1761, i32 0, i32 2
  store i64 %1760, i64* %1762, align 8
  br i1 false, label %2830, label %2831

1763:                                             ; preds = %1391
  br i1 false, label %1764, label %2131

1764:                                             ; preds = %1763
  br i1 true, label %1765, label %1948

1765:                                             ; preds = %1764
  %1766 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1767 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1766, i64 0
  %1768 = bitcast %union.YYSTYPE* %1767 to i64*
  %1769 = load i64, i64* %1768, align 8
  %1770 = icmp slt i64 %1769, 0
  br i1 %1770, label %1771, label %1859

1771:                                             ; preds = %1765
  %1772 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1773 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1772, i64 -1
  %1774 = bitcast %union.YYSTYPE* %1773 to i64*
  %1775 = load i64, i64* %1774, align 8
  %1776 = icmp slt i64 %1775, 0
  br i1 %1776, label %1777, label %1818

1777:                                             ; preds = %1771
  br i1 true, label %1778, label %1789

1778:                                             ; preds = %1777
  %1779 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1780 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1779, i64 -1
  %1781 = bitcast %union.YYSTYPE* %1780 to i64*
  %1782 = load i64, i64* %1781, align 8
  %1783 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1784 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1783, i64 0
  %1785 = bitcast %union.YYSTYPE* %1784 to i64*
  %1786 = load i64, i64* %1785, align 8
  %1787 = sdiv i64 2147483647, %1786
  %1788 = icmp slt i64 %1782, %1787
  br i1 %1788, label %1918, label %1933

1789:                                             ; preds = %1777
  br i1 true, label %1790, label %1796

1790:                                             ; preds = %1789
  %1791 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1792 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1791, i64 0
  %1793 = bitcast %union.YYSTYPE* %1792 to i64*
  %1794 = load i64, i64* %1793, align 8
  %1795 = icmp slt i64 %1794, -9223372036854775807
  br i1 %1795, label %1802, label %1803

1796:                                             ; preds = %1789
  %1797 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1798 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1797, i64 0
  %1799 = bitcast %union.YYSTYPE* %1798 to i64*
  %1800 = load i64, i64* %1799, align 8
  %1801 = icmp slt i64 0, %1800
  br i1 %1801, label %1802, label %1803

1802:                                             ; preds = %1796, %1790
  br label %1810

1803:                                             ; preds = %1796, %1790
  %1804 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1805 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1804, i64 0
  %1806 = bitcast %union.YYSTYPE* %1805 to i64*
  %1807 = load i64, i64* %1806, align 8
  %1808 = sub nsw i64 0, %1807
  %1809 = sdiv i64 2147483647, %1808
  br label %1810

1810:                                             ; preds = %1803, %1802
  %1811 = phi i64 [ 0, %1802 ], [ %1809, %1803 ]
  %1812 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1813 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1812, i64 -1
  %1814 = bitcast %union.YYSTYPE* %1813 to i64*
  %1815 = load i64, i64* %1814, align 8
  %1816 = sub nsw i64 -1, %1815
  %1817 = icmp sle i64 %1811, %1816
  br i1 %1817, label %1918, label %1933

1818:                                             ; preds = %1771
  br i1 true, label %1819, label %1820

1819:                                             ; preds = %1818
  br i1 false, label %1821, label %1848

1820:                                             ; preds = %1818
  br i1 false, label %1821, label %1848

1821:                                             ; preds = %1820, %1819
  %1822 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1823 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1822, i64 0
  %1824 = bitcast %union.YYSTYPE* %1823 to i64*
  %1825 = load i64, i64* %1824, align 8
  %1826 = icmp eq i64 %1825, -1
  br i1 %1826, label %1827, label %1848

1827:                                             ; preds = %1821
  br i1 true, label %1828, label %1835

1828:                                             ; preds = %1827
  %1829 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1830 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1829, i64 -1
  %1831 = bitcast %union.YYSTYPE* %1830 to i64*
  %1832 = load i64, i64* %1831, align 8
  %1833 = add nsw i64 %1832, -2147483648
  %1834 = icmp slt i64 0, %1833
  br i1 %1834, label %1918, label %1933

1835:                                             ; preds = %1827
  %1836 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1837 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1836, i64 -1
  %1838 = bitcast %union.YYSTYPE* %1837 to i64*
  %1839 = load i64, i64* %1838, align 8
  %1840 = icmp slt i64 0, %1839
  br i1 %1840, label %1841, label %1933

1841:                                             ; preds = %1835
  %1842 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1843 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1842, i64 -1
  %1844 = bitcast %union.YYSTYPE* %1843 to i64*
  %1845 = load i64, i64* %1844, align 8
  %1846 = sub nsw i64 %1845, 1
  %1847 = icmp slt i64 2147483647, %1846
  br i1 %1847, label %1918, label %1933

1848:                                             ; preds = %1821, %1820, %1819
  %1849 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1850 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1849, i64 0
  %1851 = bitcast %union.YYSTYPE* %1850 to i64*
  %1852 = load i64, i64* %1851, align 8
  %1853 = sdiv i64 -2147483648, %1852
  %1854 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1855 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1854, i64 -1
  %1856 = bitcast %union.YYSTYPE* %1855 to i64*
  %1857 = load i64, i64* %1856, align 8
  %1858 = icmp slt i64 %1853, %1857
  br i1 %1858, label %1918, label %1933

1859:                                             ; preds = %1765
  %1860 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1861 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1860, i64 0
  %1862 = bitcast %union.YYSTYPE* %1861 to i64*
  %1863 = load i64, i64* %1862, align 8
  %1864 = icmp eq i64 %1863, 0
  br i1 %1864, label %1865, label %1866

1865:                                             ; preds = %1859
  br i1 false, label %1918, label %1933

1866:                                             ; preds = %1859
  %1867 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1868 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1867, i64 -1
  %1869 = bitcast %union.YYSTYPE* %1868 to i64*
  %1870 = load i64, i64* %1869, align 8
  %1871 = icmp slt i64 %1870, 0
  br i1 %1871, label %1872, label %1907

1872:                                             ; preds = %1866
  br i1 true, label %1873, label %1874

1873:                                             ; preds = %1872
  br i1 false, label %1875, label %1896

1874:                                             ; preds = %1872
  br i1 false, label %1875, label %1896

1875:                                             ; preds = %1874, %1873
  %1876 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1877 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1876, i64 -1
  %1878 = bitcast %union.YYSTYPE* %1877 to i64*
  %1879 = load i64, i64* %1878, align 8
  %1880 = icmp eq i64 %1879, -1
  br i1 %1880, label %1881, label %1896

1881:                                             ; preds = %1875
  br i1 true, label %1882, label %1889

1882:                                             ; preds = %1881
  %1883 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1884 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1883, i64 0
  %1885 = bitcast %union.YYSTYPE* %1884 to i64*
  %1886 = load i64, i64* %1885, align 8
  %1887 = add nsw i64 %1886, -2147483648
  %1888 = icmp slt i64 0, %1887
  br i1 %1888, label %1918, label %1933

1889:                                             ; preds = %1881
  %1890 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1891 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1890, i64 0
  %1892 = bitcast %union.YYSTYPE* %1891 to i64*
  %1893 = load i64, i64* %1892, align 8
  %1894 = sub nsw i64 %1893, 1
  %1895 = icmp slt i64 2147483647, %1894
  br i1 %1895, label %1918, label %1933

1896:                                             ; preds = %1875, %1874, %1873
  %1897 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1898 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1897, i64 -1
  %1899 = bitcast %union.YYSTYPE* %1898 to i64*
  %1900 = load i64, i64* %1899, align 8
  %1901 = sdiv i64 -2147483648, %1900
  %1902 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1903 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1902, i64 0
  %1904 = bitcast %union.YYSTYPE* %1903 to i64*
  %1905 = load i64, i64* %1904, align 8
  %1906 = icmp slt i64 %1901, %1905
  br i1 %1906, label %1918, label %1933

1907:                                             ; preds = %1866
  %1908 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1909 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1908, i64 0
  %1910 = bitcast %union.YYSTYPE* %1909 to i64*
  %1911 = load i64, i64* %1910, align 8
  %1912 = sdiv i64 2147483647, %1911
  %1913 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1914 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1913, i64 -1
  %1915 = bitcast %union.YYSTYPE* %1914 to i64*
  %1916 = load i64, i64* %1915, align 8
  %1917 = icmp slt i64 %1912, %1916
  br i1 %1917, label %1918, label %1933

1918:                                             ; preds = %1907, %1896, %1889, %1882, %1865, %1848, %1841, %1828, %1810, %1778
  %1919 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1920 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1919, i64 -1
  %1921 = bitcast %union.YYSTYPE* %1920 to i64*
  %1922 = load i64, i64* %1921, align 8
  %1923 = trunc i64 %1922 to i32
  %1924 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1925 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1924, i64 0
  %1926 = bitcast %union.YYSTYPE* %1925 to i64*
  %1927 = load i64, i64* %1926, align 8
  %1928 = trunc i64 %1927 to i32
  %1929 = mul i32 %1923, %1928
  %1930 = sext i32 %1929 to i64
  %1931 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %1932 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %1931, i32 0, i32 2
  store i64 %1930, i64* %1932, align 8
  br i1 true, label %2830, label %2831

1933:                                             ; preds = %1907, %1896, %1889, %1882, %1865, %1848, %1841, %1835, %1828, %1810, %1778
  %1934 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1935 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1934, i64 -1
  %1936 = bitcast %union.YYSTYPE* %1935 to i64*
  %1937 = load i64, i64* %1936, align 8
  %1938 = trunc i64 %1937 to i32
  %1939 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1940 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1939, i64 0
  %1941 = bitcast %union.YYSTYPE* %1940 to i64*
  %1942 = load i64, i64* %1941, align 8
  %1943 = trunc i64 %1942 to i32
  %1944 = mul i32 %1938, %1943
  %1945 = sext i32 %1944 to i64
  %1946 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %1947 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %1946, i32 0, i32 2
  store i64 %1945, i64* %1947, align 8
  br i1 false, label %2830, label %2831

1948:                                             ; preds = %1764
  %1949 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1950 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1949, i64 0
  %1951 = bitcast %union.YYSTYPE* %1950 to i64*
  %1952 = load i64, i64* %1951, align 8
  %1953 = icmp slt i64 %1952, 0
  br i1 %1953, label %1954, label %2042

1954:                                             ; preds = %1948
  %1955 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1956 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1955, i64 -1
  %1957 = bitcast %union.YYSTYPE* %1956 to i64*
  %1958 = load i64, i64* %1957, align 8
  %1959 = icmp slt i64 %1958, 0
  br i1 %1959, label %1960, label %2001

1960:                                             ; preds = %1954
  br i1 true, label %1961, label %1972

1961:                                             ; preds = %1960
  %1962 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1963 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1962, i64 -1
  %1964 = bitcast %union.YYSTYPE* %1963 to i64*
  %1965 = load i64, i64* %1964, align 8
  %1966 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1967 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1966, i64 0
  %1968 = bitcast %union.YYSTYPE* %1967 to i64*
  %1969 = load i64, i64* %1968, align 8
  %1970 = sdiv i64 4294967295, %1969
  %1971 = icmp slt i64 %1965, %1970
  br i1 %1971, label %2101, label %2116

1972:                                             ; preds = %1960
  br i1 true, label %1973, label %1979

1973:                                             ; preds = %1972
  %1974 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1975 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1974, i64 0
  %1976 = bitcast %union.YYSTYPE* %1975 to i64*
  %1977 = load i64, i64* %1976, align 8
  %1978 = icmp slt i64 %1977, -9223372036854775807
  br i1 %1978, label %1985, label %1986

1979:                                             ; preds = %1972
  %1980 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1981 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1980, i64 0
  %1982 = bitcast %union.YYSTYPE* %1981 to i64*
  %1983 = load i64, i64* %1982, align 8
  %1984 = icmp slt i64 0, %1983
  br i1 %1984, label %1985, label %1986

1985:                                             ; preds = %1979, %1973
  br label %1993

1986:                                             ; preds = %1979, %1973
  %1987 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1988 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1987, i64 0
  %1989 = bitcast %union.YYSTYPE* %1988 to i64*
  %1990 = load i64, i64* %1989, align 8
  %1991 = sub nsw i64 0, %1990
  %1992 = sdiv i64 4294967295, %1991
  br label %1993

1993:                                             ; preds = %1986, %1985
  %1994 = phi i64 [ 0, %1985 ], [ %1992, %1986 ]
  %1995 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %1996 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %1995, i64 -1
  %1997 = bitcast %union.YYSTYPE* %1996 to i64*
  %1998 = load i64, i64* %1997, align 8
  %1999 = sub nsw i64 -1, %1998
  %2000 = icmp sle i64 %1994, %1999
  br i1 %2000, label %2101, label %2116

2001:                                             ; preds = %1954
  br i1 true, label %2002, label %2003

2002:                                             ; preds = %2001
  br i1 false, label %2004, label %2031

2003:                                             ; preds = %2001
  br i1 false, label %2004, label %2031

2004:                                             ; preds = %2003, %2002
  %2005 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2006 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2005, i64 0
  %2007 = bitcast %union.YYSTYPE* %2006 to i64*
  %2008 = load i64, i64* %2007, align 8
  %2009 = icmp eq i64 %2008, -1
  br i1 %2009, label %2010, label %2031

2010:                                             ; preds = %2004
  br i1 true, label %2011, label %2018

2011:                                             ; preds = %2010
  %2012 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2013 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2012, i64 -1
  %2014 = bitcast %union.YYSTYPE* %2013 to i64*
  %2015 = load i64, i64* %2014, align 8
  %2016 = add nsw i64 %2015, 0
  %2017 = icmp slt i64 0, %2016
  br i1 %2017, label %2101, label %2116

2018:                                             ; preds = %2010
  %2019 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2020 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2019, i64 -1
  %2021 = bitcast %union.YYSTYPE* %2020 to i64*
  %2022 = load i64, i64* %2021, align 8
  %2023 = icmp slt i64 0, %2022
  br i1 %2023, label %2024, label %2116

2024:                                             ; preds = %2018
  %2025 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2026 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2025, i64 -1
  %2027 = bitcast %union.YYSTYPE* %2026 to i64*
  %2028 = load i64, i64* %2027, align 8
  %2029 = sub nsw i64 %2028, 1
  %2030 = icmp slt i64 -1, %2029
  br i1 %2030, label %2101, label %2116

2031:                                             ; preds = %2004, %2003, %2002
  %2032 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2033 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2032, i64 0
  %2034 = bitcast %union.YYSTYPE* %2033 to i64*
  %2035 = load i64, i64* %2034, align 8
  %2036 = sdiv i64 0, %2035
  %2037 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2038 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2037, i64 -1
  %2039 = bitcast %union.YYSTYPE* %2038 to i64*
  %2040 = load i64, i64* %2039, align 8
  %2041 = icmp slt i64 %2036, %2040
  br i1 %2041, label %2101, label %2116

2042:                                             ; preds = %1948
  %2043 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2044 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2043, i64 0
  %2045 = bitcast %union.YYSTYPE* %2044 to i64*
  %2046 = load i64, i64* %2045, align 8
  %2047 = icmp eq i64 %2046, 0
  br i1 %2047, label %2048, label %2049

2048:                                             ; preds = %2042
  br i1 false, label %2101, label %2116

2049:                                             ; preds = %2042
  %2050 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2051 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2050, i64 -1
  %2052 = bitcast %union.YYSTYPE* %2051 to i64*
  %2053 = load i64, i64* %2052, align 8
  %2054 = icmp slt i64 %2053, 0
  br i1 %2054, label %2055, label %2090

2055:                                             ; preds = %2049
  br i1 true, label %2056, label %2057

2056:                                             ; preds = %2055
  br i1 false, label %2058, label %2079

2057:                                             ; preds = %2055
  br i1 false, label %2058, label %2079

2058:                                             ; preds = %2057, %2056
  %2059 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2060 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2059, i64 -1
  %2061 = bitcast %union.YYSTYPE* %2060 to i64*
  %2062 = load i64, i64* %2061, align 8
  %2063 = icmp eq i64 %2062, -1
  br i1 %2063, label %2064, label %2079

2064:                                             ; preds = %2058
  br i1 true, label %2065, label %2072

2065:                                             ; preds = %2064
  %2066 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2067 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2066, i64 0
  %2068 = bitcast %union.YYSTYPE* %2067 to i64*
  %2069 = load i64, i64* %2068, align 8
  %2070 = add nsw i64 %2069, 0
  %2071 = icmp slt i64 0, %2070
  br i1 %2071, label %2101, label %2116

2072:                                             ; preds = %2064
  %2073 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2074 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2073, i64 0
  %2075 = bitcast %union.YYSTYPE* %2074 to i64*
  %2076 = load i64, i64* %2075, align 8
  %2077 = sub nsw i64 %2076, 1
  %2078 = icmp slt i64 -1, %2077
  br i1 %2078, label %2101, label %2116

2079:                                             ; preds = %2058, %2057, %2056
  %2080 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2081 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2080, i64 -1
  %2082 = bitcast %union.YYSTYPE* %2081 to i64*
  %2083 = load i64, i64* %2082, align 8
  %2084 = sdiv i64 0, %2083
  %2085 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2086 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2085, i64 0
  %2087 = bitcast %union.YYSTYPE* %2086 to i64*
  %2088 = load i64, i64* %2087, align 8
  %2089 = icmp slt i64 %2084, %2088
  br i1 %2089, label %2101, label %2116

2090:                                             ; preds = %2049
  %2091 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2092 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2091, i64 0
  %2093 = bitcast %union.YYSTYPE* %2092 to i64*
  %2094 = load i64, i64* %2093, align 8
  %2095 = sdiv i64 4294967295, %2094
  %2096 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2097 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2096, i64 -1
  %2098 = bitcast %union.YYSTYPE* %2097 to i64*
  %2099 = load i64, i64* %2098, align 8
  %2100 = icmp slt i64 %2095, %2099
  br i1 %2100, label %2101, label %2116

2101:                                             ; preds = %2090, %2079, %2072, %2065, %2048, %2031, %2024, %2011, %1993, %1961
  %2102 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2103 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2102, i64 -1
  %2104 = bitcast %union.YYSTYPE* %2103 to i64*
  %2105 = load i64, i64* %2104, align 8
  %2106 = trunc i64 %2105 to i32
  %2107 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2108 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2107, i64 0
  %2109 = bitcast %union.YYSTYPE* %2108 to i64*
  %2110 = load i64, i64* %2109, align 8
  %2111 = trunc i64 %2110 to i32
  %2112 = mul i32 %2106, %2111
  %2113 = zext i32 %2112 to i64
  %2114 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %2115 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %2114, i32 0, i32 2
  store i64 %2113, i64* %2115, align 8
  br i1 true, label %2830, label %2831

2116:                                             ; preds = %2090, %2079, %2072, %2065, %2048, %2031, %2024, %2018, %2011, %1993, %1961
  %2117 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2118 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2117, i64 -1
  %2119 = bitcast %union.YYSTYPE* %2118 to i64*
  %2120 = load i64, i64* %2119, align 8
  %2121 = trunc i64 %2120 to i32
  %2122 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2123 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2122, i64 0
  %2124 = bitcast %union.YYSTYPE* %2123 to i64*
  %2125 = load i64, i64* %2124, align 8
  %2126 = trunc i64 %2125 to i32
  %2127 = mul i32 %2121, %2126
  %2128 = zext i32 %2127 to i64
  %2129 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %2130 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %2129, i32 0, i32 2
  store i64 %2128, i64* %2130, align 8
  br i1 false, label %2830, label %2831

2131:                                             ; preds = %1763
  br i1 true, label %2132, label %2481

2132:                                             ; preds = %2131
  br i1 true, label %2133, label %2304

2133:                                             ; preds = %2132
  %2134 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2135 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2134, i64 0
  %2136 = bitcast %union.YYSTYPE* %2135 to i64*
  %2137 = load i64, i64* %2136, align 8
  %2138 = icmp slt i64 %2137, 0
  br i1 %2138, label %2139, label %2224

2139:                                             ; preds = %2133
  %2140 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2141 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2140, i64 -1
  %2142 = bitcast %union.YYSTYPE* %2141 to i64*
  %2143 = load i64, i64* %2142, align 8
  %2144 = icmp slt i64 %2143, 0
  br i1 %2144, label %2145, label %2186

2145:                                             ; preds = %2139
  br i1 true, label %2146, label %2157

2146:                                             ; preds = %2145
  %2147 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2148 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2147, i64 -1
  %2149 = bitcast %union.YYSTYPE* %2148 to i64*
  %2150 = load i64, i64* %2149, align 8
  %2151 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2152 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2151, i64 0
  %2153 = bitcast %union.YYSTYPE* %2152 to i64*
  %2154 = load i64, i64* %2153, align 8
  %2155 = sdiv i64 9223372036854775807, %2154
  %2156 = icmp slt i64 %2150, %2155
  br i1 %2156, label %2280, label %2292

2157:                                             ; preds = %2145
  br i1 true, label %2158, label %2164

2158:                                             ; preds = %2157
  %2159 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2160 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2159, i64 0
  %2161 = bitcast %union.YYSTYPE* %2160 to i64*
  %2162 = load i64, i64* %2161, align 8
  %2163 = icmp slt i64 %2162, -9223372036854775807
  br i1 %2163, label %2170, label %2171

2164:                                             ; preds = %2157
  %2165 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2166 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2165, i64 0
  %2167 = bitcast %union.YYSTYPE* %2166 to i64*
  %2168 = load i64, i64* %2167, align 8
  %2169 = icmp slt i64 0, %2168
  br i1 %2169, label %2170, label %2171

2170:                                             ; preds = %2164, %2158
  br label %2178

2171:                                             ; preds = %2164, %2158
  %2172 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2173 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2172, i64 0
  %2174 = bitcast %union.YYSTYPE* %2173 to i64*
  %2175 = load i64, i64* %2174, align 8
  %2176 = sub nsw i64 0, %2175
  %2177 = sdiv i64 9223372036854775807, %2176
  br label %2178

2178:                                             ; preds = %2171, %2170
  %2179 = phi i64 [ 0, %2170 ], [ %2177, %2171 ]
  %2180 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2181 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2180, i64 -1
  %2182 = bitcast %union.YYSTYPE* %2181 to i64*
  %2183 = load i64, i64* %2182, align 8
  %2184 = sub nsw i64 -1, %2183
  %2185 = icmp sle i64 %2179, %2184
  br i1 %2185, label %2280, label %2292

2186:                                             ; preds = %2139
  %2187 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2188 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2187, i64 0
  %2189 = bitcast %union.YYSTYPE* %2188 to i64*
  %2190 = load i64, i64* %2189, align 8
  %2191 = icmp eq i64 %2190, -1
  br i1 %2191, label %2192, label %2213

2192:                                             ; preds = %2186
  br i1 true, label %2193, label %2200

2193:                                             ; preds = %2192
  %2194 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2195 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2194, i64 -1
  %2196 = bitcast %union.YYSTYPE* %2195 to i64*
  %2197 = load i64, i64* %2196, align 8
  %2198 = add nsw i64 %2197, -9223372036854775808
  %2199 = icmp slt i64 0, %2198
  br i1 %2199, label %2280, label %2292

2200:                                             ; preds = %2192
  %2201 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2202 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2201, i64 -1
  %2203 = bitcast %union.YYSTYPE* %2202 to i64*
  %2204 = load i64, i64* %2203, align 8
  %2205 = icmp slt i64 0, %2204
  br i1 %2205, label %2206, label %2292

2206:                                             ; preds = %2200
  %2207 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2208 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2207, i64 -1
  %2209 = bitcast %union.YYSTYPE* %2208 to i64*
  %2210 = load i64, i64* %2209, align 8
  %2211 = sub nsw i64 %2210, 1
  %2212 = icmp slt i64 9223372036854775807, %2211
  br i1 %2212, label %2280, label %2292

2213:                                             ; preds = %2186
  %2214 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2215 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2214, i64 0
  %2216 = bitcast %union.YYSTYPE* %2215 to i64*
  %2217 = load i64, i64* %2216, align 8
  %2218 = sdiv i64 -9223372036854775808, %2217
  %2219 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2220 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2219, i64 -1
  %2221 = bitcast %union.YYSTYPE* %2220 to i64*
  %2222 = load i64, i64* %2221, align 8
  %2223 = icmp slt i64 %2218, %2222
  br i1 %2223, label %2280, label %2292

2224:                                             ; preds = %2133
  %2225 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2226 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2225, i64 0
  %2227 = bitcast %union.YYSTYPE* %2226 to i64*
  %2228 = load i64, i64* %2227, align 8
  %2229 = icmp eq i64 %2228, 0
  br i1 %2229, label %2230, label %2231

2230:                                             ; preds = %2224
  br i1 false, label %2280, label %2292

2231:                                             ; preds = %2224
  %2232 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2233 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2232, i64 -1
  %2234 = bitcast %union.YYSTYPE* %2233 to i64*
  %2235 = load i64, i64* %2234, align 8
  %2236 = icmp slt i64 %2235, 0
  br i1 %2236, label %2237, label %2269

2237:                                             ; preds = %2231
  %2238 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2239 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2238, i64 -1
  %2240 = bitcast %union.YYSTYPE* %2239 to i64*
  %2241 = load i64, i64* %2240, align 8
  %2242 = icmp eq i64 %2241, -1
  br i1 %2242, label %2243, label %2258

2243:                                             ; preds = %2237
  br i1 true, label %2244, label %2251

2244:                                             ; preds = %2243
  %2245 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2246 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2245, i64 0
  %2247 = bitcast %union.YYSTYPE* %2246 to i64*
  %2248 = load i64, i64* %2247, align 8
  %2249 = add nsw i64 %2248, -9223372036854775808
  %2250 = icmp slt i64 0, %2249
  br i1 %2250, label %2280, label %2292

2251:                                             ; preds = %2243
  %2252 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2253 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2252, i64 0
  %2254 = bitcast %union.YYSTYPE* %2253 to i64*
  %2255 = load i64, i64* %2254, align 8
  %2256 = sub nsw i64 %2255, 1
  %2257 = icmp slt i64 9223372036854775807, %2256
  br i1 %2257, label %2280, label %2292

2258:                                             ; preds = %2237
  %2259 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2260 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2259, i64 -1
  %2261 = bitcast %union.YYSTYPE* %2260 to i64*
  %2262 = load i64, i64* %2261, align 8
  %2263 = sdiv i64 -9223372036854775808, %2262
  %2264 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2265 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2264, i64 0
  %2266 = bitcast %union.YYSTYPE* %2265 to i64*
  %2267 = load i64, i64* %2266, align 8
  %2268 = icmp slt i64 %2263, %2267
  br i1 %2268, label %2280, label %2292

2269:                                             ; preds = %2231
  %2270 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2271 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2270, i64 0
  %2272 = bitcast %union.YYSTYPE* %2271 to i64*
  %2273 = load i64, i64* %2272, align 8
  %2274 = sdiv i64 9223372036854775807, %2273
  %2275 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2276 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2275, i64 -1
  %2277 = bitcast %union.YYSTYPE* %2276 to i64*
  %2278 = load i64, i64* %2277, align 8
  %2279 = icmp slt i64 %2274, %2278
  br i1 %2279, label %2280, label %2292

2280:                                             ; preds = %2269, %2258, %2251, %2244, %2230, %2213, %2206, %2193, %2178, %2146
  %2281 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2282 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2281, i64 -1
  %2283 = bitcast %union.YYSTYPE* %2282 to i64*
  %2284 = load i64, i64* %2283, align 8
  %2285 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2286 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2285, i64 0
  %2287 = bitcast %union.YYSTYPE* %2286 to i64*
  %2288 = load i64, i64* %2287, align 8
  %2289 = mul i64 %2284, %2288
  %2290 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %2291 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %2290, i32 0, i32 2
  store i64 %2289, i64* %2291, align 8
  br i1 true, label %2830, label %2831

2292:                                             ; preds = %2269, %2258, %2251, %2244, %2230, %2213, %2206, %2200, %2193, %2178, %2146
  %2293 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2294 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2293, i64 -1
  %2295 = bitcast %union.YYSTYPE* %2294 to i64*
  %2296 = load i64, i64* %2295, align 8
  %2297 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2298 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2297, i64 0
  %2299 = bitcast %union.YYSTYPE* %2298 to i64*
  %2300 = load i64, i64* %2299, align 8
  %2301 = mul i64 %2296, %2300
  %2302 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %2303 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %2302, i32 0, i32 2
  store i64 %2301, i64* %2303, align 8
  br i1 false, label %2830, label %2831

2304:                                             ; preds = %2132
  %2305 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2306 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2305, i64 0
  %2307 = bitcast %union.YYSTYPE* %2306 to i64*
  %2308 = load i64, i64* %2307, align 8
  %2309 = icmp slt i64 %2308, 0
  br i1 %2309, label %2310, label %2398

2310:                                             ; preds = %2304
  %2311 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2312 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2311, i64 -1
  %2313 = bitcast %union.YYSTYPE* %2312 to i64*
  %2314 = load i64, i64* %2313, align 8
  %2315 = icmp slt i64 %2314, 0
  br i1 %2315, label %2316, label %2357

2316:                                             ; preds = %2310
  br i1 false, label %2317, label %2328

2317:                                             ; preds = %2316
  %2318 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2319 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2318, i64 -1
  %2320 = bitcast %union.YYSTYPE* %2319 to i64*
  %2321 = load i64, i64* %2320, align 8
  %2322 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2323 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2322, i64 0
  %2324 = bitcast %union.YYSTYPE* %2323 to i64*
  %2325 = load i64, i64* %2324, align 8
  %2326 = udiv i64 -1, %2325
  %2327 = icmp ult i64 %2321, %2326
  br i1 %2327, label %2457, label %2469

2328:                                             ; preds = %2316
  br i1 true, label %2329, label %2335

2329:                                             ; preds = %2328
  %2330 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2331 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2330, i64 0
  %2332 = bitcast %union.YYSTYPE* %2331 to i64*
  %2333 = load i64, i64* %2332, align 8
  %2334 = icmp slt i64 %2333, -9223372036854775807
  br i1 %2334, label %2341, label %2342

2335:                                             ; preds = %2328
  %2336 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2337 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2336, i64 0
  %2338 = bitcast %union.YYSTYPE* %2337 to i64*
  %2339 = load i64, i64* %2338, align 8
  %2340 = icmp slt i64 0, %2339
  br i1 %2340, label %2341, label %2342

2341:                                             ; preds = %2335, %2329
  br label %2349

2342:                                             ; preds = %2335, %2329
  %2343 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2344 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2343, i64 0
  %2345 = bitcast %union.YYSTYPE* %2344 to i64*
  %2346 = load i64, i64* %2345, align 8
  %2347 = sub nsw i64 0, %2346
  %2348 = udiv i64 -1, %2347
  br label %2349

2349:                                             ; preds = %2342, %2341
  %2350 = phi i64 [ 1, %2341 ], [ %2348, %2342 ]
  %2351 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2352 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2351, i64 -1
  %2353 = bitcast %union.YYSTYPE* %2352 to i64*
  %2354 = load i64, i64* %2353, align 8
  %2355 = sub nsw i64 -1, %2354
  %2356 = icmp ule i64 %2350, %2355
  br i1 %2356, label %2457, label %2469

2357:                                             ; preds = %2310
  br i1 true, label %2358, label %2359

2358:                                             ; preds = %2357
  br i1 false, label %2360, label %2387

2359:                                             ; preds = %2357
  br i1 false, label %2360, label %2387

2360:                                             ; preds = %2359, %2358
  %2361 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2362 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2361, i64 0
  %2363 = bitcast %union.YYSTYPE* %2362 to i64*
  %2364 = load i64, i64* %2363, align 8
  %2365 = icmp eq i64 %2364, -1
  br i1 %2365, label %2366, label %2387

2366:                                             ; preds = %2360
  br i1 true, label %2367, label %2374

2367:                                             ; preds = %2366
  %2368 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2369 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2368, i64 -1
  %2370 = bitcast %union.YYSTYPE* %2369 to i64*
  %2371 = load i64, i64* %2370, align 8
  %2372 = add nsw i64 %2371, 0
  %2373 = icmp slt i64 0, %2372
  br i1 %2373, label %2457, label %2469

2374:                                             ; preds = %2366
  %2375 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2376 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2375, i64 -1
  %2377 = bitcast %union.YYSTYPE* %2376 to i64*
  %2378 = load i64, i64* %2377, align 8
  %2379 = icmp slt i64 0, %2378
  br i1 %2379, label %2380, label %2469

2380:                                             ; preds = %2374
  %2381 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2382 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2381, i64 -1
  %2383 = bitcast %union.YYSTYPE* %2382 to i64*
  %2384 = load i64, i64* %2383, align 8
  %2385 = sub nsw i64 %2384, 1
  %2386 = icmp slt i64 -1, %2385
  br i1 %2386, label %2457, label %2469

2387:                                             ; preds = %2360, %2359, %2358
  %2388 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2389 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2388, i64 0
  %2390 = bitcast %union.YYSTYPE* %2389 to i64*
  %2391 = load i64, i64* %2390, align 8
  %2392 = sdiv i64 0, %2391
  %2393 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2394 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2393, i64 -1
  %2395 = bitcast %union.YYSTYPE* %2394 to i64*
  %2396 = load i64, i64* %2395, align 8
  %2397 = icmp slt i64 %2392, %2396
  br i1 %2397, label %2457, label %2469

2398:                                             ; preds = %2304
  %2399 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2400 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2399, i64 0
  %2401 = bitcast %union.YYSTYPE* %2400 to i64*
  %2402 = load i64, i64* %2401, align 8
  %2403 = icmp eq i64 %2402, 0
  br i1 %2403, label %2404, label %2405

2404:                                             ; preds = %2398
  br i1 false, label %2457, label %2469

2405:                                             ; preds = %2398
  %2406 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2407 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2406, i64 -1
  %2408 = bitcast %union.YYSTYPE* %2407 to i64*
  %2409 = load i64, i64* %2408, align 8
  %2410 = icmp slt i64 %2409, 0
  br i1 %2410, label %2411, label %2446

2411:                                             ; preds = %2405
  br i1 true, label %2412, label %2413

2412:                                             ; preds = %2411
  br i1 false, label %2414, label %2435

2413:                                             ; preds = %2411
  br i1 false, label %2414, label %2435

2414:                                             ; preds = %2413, %2412
  %2415 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2416 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2415, i64 -1
  %2417 = bitcast %union.YYSTYPE* %2416 to i64*
  %2418 = load i64, i64* %2417, align 8
  %2419 = icmp eq i64 %2418, -1
  br i1 %2419, label %2420, label %2435

2420:                                             ; preds = %2414
  br i1 true, label %2421, label %2428

2421:                                             ; preds = %2420
  %2422 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2423 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2422, i64 0
  %2424 = bitcast %union.YYSTYPE* %2423 to i64*
  %2425 = load i64, i64* %2424, align 8
  %2426 = add nsw i64 %2425, 0
  %2427 = icmp slt i64 0, %2426
  br i1 %2427, label %2457, label %2469

2428:                                             ; preds = %2420
  %2429 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2430 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2429, i64 0
  %2431 = bitcast %union.YYSTYPE* %2430 to i64*
  %2432 = load i64, i64* %2431, align 8
  %2433 = sub nsw i64 %2432, 1
  %2434 = icmp slt i64 -1, %2433
  br i1 %2434, label %2457, label %2469

2435:                                             ; preds = %2414, %2413, %2412
  %2436 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2437 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2436, i64 -1
  %2438 = bitcast %union.YYSTYPE* %2437 to i64*
  %2439 = load i64, i64* %2438, align 8
  %2440 = sdiv i64 0, %2439
  %2441 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2442 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2441, i64 0
  %2443 = bitcast %union.YYSTYPE* %2442 to i64*
  %2444 = load i64, i64* %2443, align 8
  %2445 = icmp slt i64 %2440, %2444
  br i1 %2445, label %2457, label %2469

2446:                                             ; preds = %2405
  %2447 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2448 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2447, i64 0
  %2449 = bitcast %union.YYSTYPE* %2448 to i64*
  %2450 = load i64, i64* %2449, align 8
  %2451 = udiv i64 -1, %2450
  %2452 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2453 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2452, i64 -1
  %2454 = bitcast %union.YYSTYPE* %2453 to i64*
  %2455 = load i64, i64* %2454, align 8
  %2456 = icmp ult i64 %2451, %2455
  br i1 %2456, label %2457, label %2469

2457:                                             ; preds = %2446, %2435, %2428, %2421, %2404, %2387, %2380, %2367, %2349, %2317
  %2458 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2459 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2458, i64 -1
  %2460 = bitcast %union.YYSTYPE* %2459 to i64*
  %2461 = load i64, i64* %2460, align 8
  %2462 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2463 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2462, i64 0
  %2464 = bitcast %union.YYSTYPE* %2463 to i64*
  %2465 = load i64, i64* %2464, align 8
  %2466 = mul i64 %2461, %2465
  %2467 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %2468 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %2467, i32 0, i32 2
  store i64 %2466, i64* %2468, align 8
  br i1 true, label %2830, label %2831

2469:                                             ; preds = %2446, %2435, %2428, %2421, %2404, %2387, %2380, %2374, %2367, %2349, %2317
  %2470 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2471 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2470, i64 -1
  %2472 = bitcast %union.YYSTYPE* %2471 to i64*
  %2473 = load i64, i64* %2472, align 8
  %2474 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2475 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2474, i64 0
  %2476 = bitcast %union.YYSTYPE* %2475 to i64*
  %2477 = load i64, i64* %2476, align 8
  %2478 = mul i64 %2473, %2477
  %2479 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %2480 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %2479, i32 0, i32 2
  store i64 %2478, i64* %2480, align 8
  br i1 false, label %2830, label %2831

2481:                                             ; preds = %2131
  br i1 true, label %2482, label %2653

2482:                                             ; preds = %2481
  %2483 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2484 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2483, i64 0
  %2485 = bitcast %union.YYSTYPE* %2484 to i64*
  %2486 = load i64, i64* %2485, align 8
  %2487 = icmp slt i64 %2486, 0
  br i1 %2487, label %2488, label %2573

2488:                                             ; preds = %2482
  %2489 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2490 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2489, i64 -1
  %2491 = bitcast %union.YYSTYPE* %2490 to i64*
  %2492 = load i64, i64* %2491, align 8
  %2493 = icmp slt i64 %2492, 0
  br i1 %2493, label %2494, label %2535

2494:                                             ; preds = %2488
  br i1 true, label %2495, label %2506

2495:                                             ; preds = %2494
  %2496 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2497 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2496, i64 -1
  %2498 = bitcast %union.YYSTYPE* %2497 to i64*
  %2499 = load i64, i64* %2498, align 8
  %2500 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2501 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2500, i64 0
  %2502 = bitcast %union.YYSTYPE* %2501 to i64*
  %2503 = load i64, i64* %2502, align 8
  %2504 = sdiv i64 9223372036854775807, %2503
  %2505 = icmp slt i64 %2499, %2504
  br i1 %2505, label %2629, label %2641

2506:                                             ; preds = %2494
  br i1 true, label %2507, label %2513

2507:                                             ; preds = %2506
  %2508 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2509 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2508, i64 0
  %2510 = bitcast %union.YYSTYPE* %2509 to i64*
  %2511 = load i64, i64* %2510, align 8
  %2512 = icmp slt i64 %2511, -9223372036854775807
  br i1 %2512, label %2519, label %2520

2513:                                             ; preds = %2506
  %2514 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2515 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2514, i64 0
  %2516 = bitcast %union.YYSTYPE* %2515 to i64*
  %2517 = load i64, i64* %2516, align 8
  %2518 = icmp slt i64 0, %2517
  br i1 %2518, label %2519, label %2520

2519:                                             ; preds = %2513, %2507
  br label %2527

2520:                                             ; preds = %2513, %2507
  %2521 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2522 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2521, i64 0
  %2523 = bitcast %union.YYSTYPE* %2522 to i64*
  %2524 = load i64, i64* %2523, align 8
  %2525 = sub nsw i64 0, %2524
  %2526 = sdiv i64 9223372036854775807, %2525
  br label %2527

2527:                                             ; preds = %2520, %2519
  %2528 = phi i64 [ 0, %2519 ], [ %2526, %2520 ]
  %2529 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2530 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2529, i64 -1
  %2531 = bitcast %union.YYSTYPE* %2530 to i64*
  %2532 = load i64, i64* %2531, align 8
  %2533 = sub nsw i64 -1, %2532
  %2534 = icmp sle i64 %2528, %2533
  br i1 %2534, label %2629, label %2641

2535:                                             ; preds = %2488
  %2536 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2537 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2536, i64 0
  %2538 = bitcast %union.YYSTYPE* %2537 to i64*
  %2539 = load i64, i64* %2538, align 8
  %2540 = icmp eq i64 %2539, -1
  br i1 %2540, label %2541, label %2562

2541:                                             ; preds = %2535
  br i1 true, label %2542, label %2549

2542:                                             ; preds = %2541
  %2543 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2544 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2543, i64 -1
  %2545 = bitcast %union.YYSTYPE* %2544 to i64*
  %2546 = load i64, i64* %2545, align 8
  %2547 = add nsw i64 %2546, -9223372036854775808
  %2548 = icmp slt i64 0, %2547
  br i1 %2548, label %2629, label %2641

2549:                                             ; preds = %2541
  %2550 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2551 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2550, i64 -1
  %2552 = bitcast %union.YYSTYPE* %2551 to i64*
  %2553 = load i64, i64* %2552, align 8
  %2554 = icmp slt i64 0, %2553
  br i1 %2554, label %2555, label %2641

2555:                                             ; preds = %2549
  %2556 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2557 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2556, i64 -1
  %2558 = bitcast %union.YYSTYPE* %2557 to i64*
  %2559 = load i64, i64* %2558, align 8
  %2560 = sub nsw i64 %2559, 1
  %2561 = icmp slt i64 9223372036854775807, %2560
  br i1 %2561, label %2629, label %2641

2562:                                             ; preds = %2535
  %2563 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2564 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2563, i64 0
  %2565 = bitcast %union.YYSTYPE* %2564 to i64*
  %2566 = load i64, i64* %2565, align 8
  %2567 = sdiv i64 -9223372036854775808, %2566
  %2568 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2569 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2568, i64 -1
  %2570 = bitcast %union.YYSTYPE* %2569 to i64*
  %2571 = load i64, i64* %2570, align 8
  %2572 = icmp slt i64 %2567, %2571
  br i1 %2572, label %2629, label %2641

2573:                                             ; preds = %2482
  %2574 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2575 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2574, i64 0
  %2576 = bitcast %union.YYSTYPE* %2575 to i64*
  %2577 = load i64, i64* %2576, align 8
  %2578 = icmp eq i64 %2577, 0
  br i1 %2578, label %2579, label %2580

2579:                                             ; preds = %2573
  br i1 false, label %2629, label %2641

2580:                                             ; preds = %2573
  %2581 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2582 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2581, i64 -1
  %2583 = bitcast %union.YYSTYPE* %2582 to i64*
  %2584 = load i64, i64* %2583, align 8
  %2585 = icmp slt i64 %2584, 0
  br i1 %2585, label %2586, label %2618

2586:                                             ; preds = %2580
  %2587 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2588 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2587, i64 -1
  %2589 = bitcast %union.YYSTYPE* %2588 to i64*
  %2590 = load i64, i64* %2589, align 8
  %2591 = icmp eq i64 %2590, -1
  br i1 %2591, label %2592, label %2607

2592:                                             ; preds = %2586
  br i1 true, label %2593, label %2600

2593:                                             ; preds = %2592
  %2594 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2595 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2594, i64 0
  %2596 = bitcast %union.YYSTYPE* %2595 to i64*
  %2597 = load i64, i64* %2596, align 8
  %2598 = add nsw i64 %2597, -9223372036854775808
  %2599 = icmp slt i64 0, %2598
  br i1 %2599, label %2629, label %2641

2600:                                             ; preds = %2592
  %2601 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2602 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2601, i64 0
  %2603 = bitcast %union.YYSTYPE* %2602 to i64*
  %2604 = load i64, i64* %2603, align 8
  %2605 = sub nsw i64 %2604, 1
  %2606 = icmp slt i64 9223372036854775807, %2605
  br i1 %2606, label %2629, label %2641

2607:                                             ; preds = %2586
  %2608 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2609 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2608, i64 -1
  %2610 = bitcast %union.YYSTYPE* %2609 to i64*
  %2611 = load i64, i64* %2610, align 8
  %2612 = sdiv i64 -9223372036854775808, %2611
  %2613 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2614 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2613, i64 0
  %2615 = bitcast %union.YYSTYPE* %2614 to i64*
  %2616 = load i64, i64* %2615, align 8
  %2617 = icmp slt i64 %2612, %2616
  br i1 %2617, label %2629, label %2641

2618:                                             ; preds = %2580
  %2619 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2620 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2619, i64 0
  %2621 = bitcast %union.YYSTYPE* %2620 to i64*
  %2622 = load i64, i64* %2621, align 8
  %2623 = sdiv i64 9223372036854775807, %2622
  %2624 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2625 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2624, i64 -1
  %2626 = bitcast %union.YYSTYPE* %2625 to i64*
  %2627 = load i64, i64* %2626, align 8
  %2628 = icmp slt i64 %2623, %2627
  br i1 %2628, label %2629, label %2641

2629:                                             ; preds = %2618, %2607, %2600, %2593, %2579, %2562, %2555, %2542, %2527, %2495
  %2630 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2631 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2630, i64 -1
  %2632 = bitcast %union.YYSTYPE* %2631 to i64*
  %2633 = load i64, i64* %2632, align 8
  %2634 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2635 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2634, i64 0
  %2636 = bitcast %union.YYSTYPE* %2635 to i64*
  %2637 = load i64, i64* %2636, align 8
  %2638 = mul i64 %2633, %2637
  %2639 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %2640 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %2639, i32 0, i32 2
  store i64 %2638, i64* %2640, align 8
  br i1 true, label %2830, label %2831

2641:                                             ; preds = %2618, %2607, %2600, %2593, %2579, %2562, %2555, %2549, %2542, %2527, %2495
  %2642 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2643 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2642, i64 -1
  %2644 = bitcast %union.YYSTYPE* %2643 to i64*
  %2645 = load i64, i64* %2644, align 8
  %2646 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2647 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2646, i64 0
  %2648 = bitcast %union.YYSTYPE* %2647 to i64*
  %2649 = load i64, i64* %2648, align 8
  %2650 = mul i64 %2645, %2649
  %2651 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %2652 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %2651, i32 0, i32 2
  store i64 %2650, i64* %2652, align 8
  br i1 false, label %2830, label %2831

2653:                                             ; preds = %2481
  %2654 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2655 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2654, i64 0
  %2656 = bitcast %union.YYSTYPE* %2655 to i64*
  %2657 = load i64, i64* %2656, align 8
  %2658 = icmp slt i64 %2657, 0
  br i1 %2658, label %2659, label %2747

2659:                                             ; preds = %2653
  %2660 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2661 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2660, i64 -1
  %2662 = bitcast %union.YYSTYPE* %2661 to i64*
  %2663 = load i64, i64* %2662, align 8
  %2664 = icmp slt i64 %2663, 0
  br i1 %2664, label %2665, label %2706

2665:                                             ; preds = %2659
  br i1 false, label %2666, label %2677

2666:                                             ; preds = %2665
  %2667 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2668 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2667, i64 -1
  %2669 = bitcast %union.YYSTYPE* %2668 to i64*
  %2670 = load i64, i64* %2669, align 8
  %2671 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2672 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2671, i64 0
  %2673 = bitcast %union.YYSTYPE* %2672 to i64*
  %2674 = load i64, i64* %2673, align 8
  %2675 = udiv i64 -1, %2674
  %2676 = icmp ult i64 %2670, %2675
  br i1 %2676, label %2806, label %2818

2677:                                             ; preds = %2665
  br i1 true, label %2678, label %2684

2678:                                             ; preds = %2677
  %2679 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2680 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2679, i64 0
  %2681 = bitcast %union.YYSTYPE* %2680 to i64*
  %2682 = load i64, i64* %2681, align 8
  %2683 = icmp slt i64 %2682, -9223372036854775807
  br i1 %2683, label %2690, label %2691

2684:                                             ; preds = %2677
  %2685 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2686 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2685, i64 0
  %2687 = bitcast %union.YYSTYPE* %2686 to i64*
  %2688 = load i64, i64* %2687, align 8
  %2689 = icmp slt i64 0, %2688
  br i1 %2689, label %2690, label %2691

2690:                                             ; preds = %2684, %2678
  br label %2698

2691:                                             ; preds = %2684, %2678
  %2692 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2693 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2692, i64 0
  %2694 = bitcast %union.YYSTYPE* %2693 to i64*
  %2695 = load i64, i64* %2694, align 8
  %2696 = sub nsw i64 0, %2695
  %2697 = udiv i64 -1, %2696
  br label %2698

2698:                                             ; preds = %2691, %2690
  %2699 = phi i64 [ 1, %2690 ], [ %2697, %2691 ]
  %2700 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2701 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2700, i64 -1
  %2702 = bitcast %union.YYSTYPE* %2701 to i64*
  %2703 = load i64, i64* %2702, align 8
  %2704 = sub nsw i64 -1, %2703
  %2705 = icmp ule i64 %2699, %2704
  br i1 %2705, label %2806, label %2818

2706:                                             ; preds = %2659
  br i1 true, label %2707, label %2708

2707:                                             ; preds = %2706
  br i1 false, label %2709, label %2736

2708:                                             ; preds = %2706
  br i1 false, label %2709, label %2736

2709:                                             ; preds = %2708, %2707
  %2710 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2711 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2710, i64 0
  %2712 = bitcast %union.YYSTYPE* %2711 to i64*
  %2713 = load i64, i64* %2712, align 8
  %2714 = icmp eq i64 %2713, -1
  br i1 %2714, label %2715, label %2736

2715:                                             ; preds = %2709
  br i1 true, label %2716, label %2723

2716:                                             ; preds = %2715
  %2717 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2718 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2717, i64 -1
  %2719 = bitcast %union.YYSTYPE* %2718 to i64*
  %2720 = load i64, i64* %2719, align 8
  %2721 = add nsw i64 %2720, 0
  %2722 = icmp slt i64 0, %2721
  br i1 %2722, label %2806, label %2818

2723:                                             ; preds = %2715
  %2724 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2725 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2724, i64 -1
  %2726 = bitcast %union.YYSTYPE* %2725 to i64*
  %2727 = load i64, i64* %2726, align 8
  %2728 = icmp slt i64 0, %2727
  br i1 %2728, label %2729, label %2818

2729:                                             ; preds = %2723
  %2730 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2731 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2730, i64 -1
  %2732 = bitcast %union.YYSTYPE* %2731 to i64*
  %2733 = load i64, i64* %2732, align 8
  %2734 = sub nsw i64 %2733, 1
  %2735 = icmp slt i64 -1, %2734
  br i1 %2735, label %2806, label %2818

2736:                                             ; preds = %2709, %2708, %2707
  %2737 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2738 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2737, i64 0
  %2739 = bitcast %union.YYSTYPE* %2738 to i64*
  %2740 = load i64, i64* %2739, align 8
  %2741 = sdiv i64 0, %2740
  %2742 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2743 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2742, i64 -1
  %2744 = bitcast %union.YYSTYPE* %2743 to i64*
  %2745 = load i64, i64* %2744, align 8
  %2746 = icmp slt i64 %2741, %2745
  br i1 %2746, label %2806, label %2818

2747:                                             ; preds = %2653
  %2748 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2749 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2748, i64 0
  %2750 = bitcast %union.YYSTYPE* %2749 to i64*
  %2751 = load i64, i64* %2750, align 8
  %2752 = icmp eq i64 %2751, 0
  br i1 %2752, label %2753, label %2754

2753:                                             ; preds = %2747
  br i1 false, label %2806, label %2818

2754:                                             ; preds = %2747
  %2755 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2756 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2755, i64 -1
  %2757 = bitcast %union.YYSTYPE* %2756 to i64*
  %2758 = load i64, i64* %2757, align 8
  %2759 = icmp slt i64 %2758, 0
  br i1 %2759, label %2760, label %2795

2760:                                             ; preds = %2754
  br i1 true, label %2761, label %2762

2761:                                             ; preds = %2760
  br i1 false, label %2763, label %2784

2762:                                             ; preds = %2760
  br i1 false, label %2763, label %2784

2763:                                             ; preds = %2762, %2761
  %2764 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2765 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2764, i64 -1
  %2766 = bitcast %union.YYSTYPE* %2765 to i64*
  %2767 = load i64, i64* %2766, align 8
  %2768 = icmp eq i64 %2767, -1
  br i1 %2768, label %2769, label %2784

2769:                                             ; preds = %2763
  br i1 true, label %2770, label %2777

2770:                                             ; preds = %2769
  %2771 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2772 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2771, i64 0
  %2773 = bitcast %union.YYSTYPE* %2772 to i64*
  %2774 = load i64, i64* %2773, align 8
  %2775 = add nsw i64 %2774, 0
  %2776 = icmp slt i64 0, %2775
  br i1 %2776, label %2806, label %2818

2777:                                             ; preds = %2769
  %2778 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2779 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2778, i64 0
  %2780 = bitcast %union.YYSTYPE* %2779 to i64*
  %2781 = load i64, i64* %2780, align 8
  %2782 = sub nsw i64 %2781, 1
  %2783 = icmp slt i64 -1, %2782
  br i1 %2783, label %2806, label %2818

2784:                                             ; preds = %2763, %2762, %2761
  %2785 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2786 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2785, i64 -1
  %2787 = bitcast %union.YYSTYPE* %2786 to i64*
  %2788 = load i64, i64* %2787, align 8
  %2789 = sdiv i64 0, %2788
  %2790 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2791 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2790, i64 0
  %2792 = bitcast %union.YYSTYPE* %2791 to i64*
  %2793 = load i64, i64* %2792, align 8
  %2794 = icmp slt i64 %2789, %2793
  br i1 %2794, label %2806, label %2818

2795:                                             ; preds = %2754
  %2796 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2797 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2796, i64 0
  %2798 = bitcast %union.YYSTYPE* %2797 to i64*
  %2799 = load i64, i64* %2798, align 8
  %2800 = udiv i64 -1, %2799
  %2801 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2802 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2801, i64 -1
  %2803 = bitcast %union.YYSTYPE* %2802 to i64*
  %2804 = load i64, i64* %2803, align 8
  %2805 = icmp ult i64 %2800, %2804
  br i1 %2805, label %2806, label %2818

2806:                                             ; preds = %2795, %2784, %2777, %2770, %2753, %2736, %2729, %2716, %2698, %2666
  %2807 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2808 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2807, i64 -1
  %2809 = bitcast %union.YYSTYPE* %2808 to i64*
  %2810 = load i64, i64* %2809, align 8
  %2811 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2812 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2811, i64 0
  %2813 = bitcast %union.YYSTYPE* %2812 to i64*
  %2814 = load i64, i64* %2813, align 8
  %2815 = mul i64 %2810, %2814
  %2816 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %2817 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %2816, i32 0, i32 2
  store i64 %2815, i64* %2817, align 8
  br i1 true, label %2830, label %2831

2818:                                             ; preds = %2795, %2784, %2777, %2770, %2753, %2736, %2729, %2723, %2716, %2698, %2666
  %2819 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2820 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2819, i64 -1
  %2821 = bitcast %union.YYSTYPE* %2820 to i64*
  %2822 = load i64, i64* %2821, align 8
  %2823 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2824 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2823, i64 0
  %2825 = bitcast %union.YYSTYPE* %2824 to i64*
  %2826 = load i64, i64* %2825, align 8
  %2827 = mul i64 %2822, %2826
  %2828 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %2829 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %2828, i32 0, i32 2
  store i64 %2827, i64* %2829, align 8
  br i1 false, label %2830, label %2831

2830:                                             ; preds = %2818, %2806, %2641, %2629, %2469, %2457, %2292, %2280, %2116, %2101, %1933, %1918, %1747, %1731, %1562, %1546, %1375, %1359, %1190, %1174
  br label %7297

2831:                                             ; preds = %2818, %2806, %2641, %2629, %2469, %2457, %2292, %2280, %2116, %2101, %1933, %1918, %1747, %1731, %1562, %1546, %1375, %1359, %1190, %1174
  br label %7121

2832:                                             ; preds = %245
  %2833 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %2834 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %33, i32 0, i32 0
  store i64 0, i64* %2834, align 8
  %2835 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %33, i32 0, i32 1
  store i64 0, i64* %2835, align 8
  %2836 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %33, i32 0, i32 2
  store i64 0, i64* %2836, align 8
  %2837 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %33, i32 0, i32 3
  store i64 0, i64* %2837, align 8
  %2838 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %33, i32 0, i32 4
  store i64 0, i64* %2838, align 8
  %2839 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %33, i32 0, i32 5
  store i64 0, i64* %2839, align 8
  %2840 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %33, i32 0, i32 6
  store i32 0, i32* %2840, align 8
  %2841 = bitcast %struct.relative_time* %2833 to i8*
  %2842 = bitcast %struct.relative_time* %33 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2841, i8* align 8 %2842, i64 56, i1 false)
  br i1 false, label %2843, label %3240

2843:                                             ; preds = %2832
  br i1 false, label %3042, label %2844

2844:                                             ; preds = %2843
  %2845 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2846 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2845, i64 0
  %2847 = bitcast %union.YYSTYPE* %2846 to i64*
  %2848 = load i64, i64* %2847, align 8
  %2849 = icmp slt i64 %2848, 0
  br i1 %2849, label %2850, label %2945

2850:                                             ; preds = %2844
  %2851 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2852 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2851, i64 -1
  %2853 = bitcast %union.YYSTYPE* %2852 to %struct.textint*
  %2854 = getelementptr inbounds %struct.textint, %struct.textint* %2853, i32 0, i32 1
  %2855 = load i64, i64* %2854, align 8
  %2856 = icmp slt i64 %2855, 0
  br i1 %2856, label %2857, label %2900

2857:                                             ; preds = %2850
  br i1 true, label %2858, label %2870

2858:                                             ; preds = %2857
  %2859 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2860 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2859, i64 -1
  %2861 = bitcast %union.YYSTYPE* %2860 to %struct.textint*
  %2862 = getelementptr inbounds %struct.textint, %struct.textint* %2861, i32 0, i32 1
  %2863 = load i64, i64* %2862, align 8
  %2864 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2865 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2864, i64 0
  %2866 = bitcast %union.YYSTYPE* %2865 to i64*
  %2867 = load i64, i64* %2866, align 8
  %2868 = sdiv i64 127, %2867
  %2869 = icmp slt i64 %2863, %2868
  br i1 %2869, label %3008, label %3025

2870:                                             ; preds = %2857
  br i1 true, label %2871, label %2877

2871:                                             ; preds = %2870
  %2872 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2873 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2872, i64 0
  %2874 = bitcast %union.YYSTYPE* %2873 to i64*
  %2875 = load i64, i64* %2874, align 8
  %2876 = icmp slt i64 %2875, -9223372036854775807
  br i1 %2876, label %2883, label %2884

2877:                                             ; preds = %2870
  %2878 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2879 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2878, i64 0
  %2880 = bitcast %union.YYSTYPE* %2879 to i64*
  %2881 = load i64, i64* %2880, align 8
  %2882 = icmp slt i64 0, %2881
  br i1 %2882, label %2883, label %2884

2883:                                             ; preds = %2877, %2871
  br label %2891

2884:                                             ; preds = %2877, %2871
  %2885 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2886 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2885, i64 0
  %2887 = bitcast %union.YYSTYPE* %2886 to i64*
  %2888 = load i64, i64* %2887, align 8
  %2889 = sub nsw i64 0, %2888
  %2890 = sdiv i64 127, %2889
  br label %2891

2891:                                             ; preds = %2884, %2883
  %2892 = phi i64 [ 0, %2883 ], [ %2890, %2884 ]
  %2893 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2894 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2893, i64 -1
  %2895 = bitcast %union.YYSTYPE* %2894 to %struct.textint*
  %2896 = getelementptr inbounds %struct.textint, %struct.textint* %2895, i32 0, i32 1
  %2897 = load i64, i64* %2896, align 8
  %2898 = sub nsw i64 -1, %2897
  %2899 = icmp sle i64 %2892, %2898
  br i1 %2899, label %3008, label %3025

2900:                                             ; preds = %2850
  br i1 true, label %2901, label %2902

2901:                                             ; preds = %2900
  br i1 false, label %2903, label %2933

2902:                                             ; preds = %2900
  br i1 false, label %2903, label %2933

2903:                                             ; preds = %2902, %2901
  %2904 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2905 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2904, i64 0
  %2906 = bitcast %union.YYSTYPE* %2905 to i64*
  %2907 = load i64, i64* %2906, align 8
  %2908 = icmp eq i64 %2907, -1
  br i1 %2908, label %2909, label %2933

2909:                                             ; preds = %2903
  br i1 true, label %2910, label %2918

2910:                                             ; preds = %2909
  %2911 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2912 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2911, i64 -1
  %2913 = bitcast %union.YYSTYPE* %2912 to %struct.textint*
  %2914 = getelementptr inbounds %struct.textint, %struct.textint* %2913, i32 0, i32 1
  %2915 = load i64, i64* %2914, align 8
  %2916 = add nsw i64 %2915, -128
  %2917 = icmp slt i64 0, %2916
  br i1 %2917, label %3008, label %3025

2918:                                             ; preds = %2909
  %2919 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2920 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2919, i64 -1
  %2921 = bitcast %union.YYSTYPE* %2920 to %struct.textint*
  %2922 = getelementptr inbounds %struct.textint, %struct.textint* %2921, i32 0, i32 1
  %2923 = load i64, i64* %2922, align 8
  %2924 = icmp slt i64 0, %2923
  br i1 %2924, label %2925, label %3025

2925:                                             ; preds = %2918
  %2926 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2927 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2926, i64 -1
  %2928 = bitcast %union.YYSTYPE* %2927 to %struct.textint*
  %2929 = getelementptr inbounds %struct.textint, %struct.textint* %2928, i32 0, i32 1
  %2930 = load i64, i64* %2929, align 8
  %2931 = sub nsw i64 %2930, 1
  %2932 = icmp slt i64 127, %2931
  br i1 %2932, label %3008, label %3025

2933:                                             ; preds = %2903, %2902, %2901
  %2934 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2935 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2934, i64 0
  %2936 = bitcast %union.YYSTYPE* %2935 to i64*
  %2937 = load i64, i64* %2936, align 8
  %2938 = sdiv i64 -128, %2937
  %2939 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2940 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2939, i64 -1
  %2941 = bitcast %union.YYSTYPE* %2940 to %struct.textint*
  %2942 = getelementptr inbounds %struct.textint, %struct.textint* %2941, i32 0, i32 1
  %2943 = load i64, i64* %2942, align 8
  %2944 = icmp slt i64 %2938, %2943
  br i1 %2944, label %3008, label %3025

2945:                                             ; preds = %2844
  %2946 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2947 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2946, i64 0
  %2948 = bitcast %union.YYSTYPE* %2947 to i64*
  %2949 = load i64, i64* %2948, align 8
  %2950 = icmp eq i64 %2949, 0
  br i1 %2950, label %2951, label %2952

2951:                                             ; preds = %2945
  br i1 false, label %3008, label %3025

2952:                                             ; preds = %2945
  %2953 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2954 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2953, i64 -1
  %2955 = bitcast %union.YYSTYPE* %2954 to %struct.textint*
  %2956 = getelementptr inbounds %struct.textint, %struct.textint* %2955, i32 0, i32 1
  %2957 = load i64, i64* %2956, align 8
  %2958 = icmp slt i64 %2957, 0
  br i1 %2958, label %2959, label %2996

2959:                                             ; preds = %2952
  br i1 true, label %2960, label %2961

2960:                                             ; preds = %2959
  br i1 false, label %2962, label %2984

2961:                                             ; preds = %2959
  br i1 false, label %2962, label %2984

2962:                                             ; preds = %2961, %2960
  %2963 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2964 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2963, i64 -1
  %2965 = bitcast %union.YYSTYPE* %2964 to %struct.textint*
  %2966 = getelementptr inbounds %struct.textint, %struct.textint* %2965, i32 0, i32 1
  %2967 = load i64, i64* %2966, align 8
  %2968 = icmp eq i64 %2967, -1
  br i1 %2968, label %2969, label %2984

2969:                                             ; preds = %2962
  br i1 true, label %2970, label %2977

2970:                                             ; preds = %2969
  %2971 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2972 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2971, i64 0
  %2973 = bitcast %union.YYSTYPE* %2972 to i64*
  %2974 = load i64, i64* %2973, align 8
  %2975 = add nsw i64 %2974, -128
  %2976 = icmp slt i64 0, %2975
  br i1 %2976, label %3008, label %3025

2977:                                             ; preds = %2969
  %2978 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2979 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2978, i64 0
  %2980 = bitcast %union.YYSTYPE* %2979 to i64*
  %2981 = load i64, i64* %2980, align 8
  %2982 = sub nsw i64 %2981, 1
  %2983 = icmp slt i64 127, %2982
  br i1 %2983, label %3008, label %3025

2984:                                             ; preds = %2962, %2961, %2960
  %2985 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2986 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2985, i64 -1
  %2987 = bitcast %union.YYSTYPE* %2986 to %struct.textint*
  %2988 = getelementptr inbounds %struct.textint, %struct.textint* %2987, i32 0, i32 1
  %2989 = load i64, i64* %2988, align 8
  %2990 = sdiv i64 -128, %2989
  %2991 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2992 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2991, i64 0
  %2993 = bitcast %union.YYSTYPE* %2992 to i64*
  %2994 = load i64, i64* %2993, align 8
  %2995 = icmp slt i64 %2990, %2994
  br i1 %2995, label %3008, label %3025

2996:                                             ; preds = %2952
  %2997 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %2998 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %2997, i64 0
  %2999 = bitcast %union.YYSTYPE* %2998 to i64*
  %3000 = load i64, i64* %2999, align 8
  %3001 = sdiv i64 127, %3000
  %3002 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3003 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3002, i64 -1
  %3004 = bitcast %union.YYSTYPE* %3003 to %struct.textint*
  %3005 = getelementptr inbounds %struct.textint, %struct.textint* %3004, i32 0, i32 1
  %3006 = load i64, i64* %3005, align 8
  %3007 = icmp slt i64 %3001, %3006
  br i1 %3007, label %3008, label %3025

3008:                                             ; preds = %2996, %2984, %2977, %2970, %2951, %2933, %2925, %2910, %2891, %2858
  %3009 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3010 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3009, i64 -1
  %3011 = bitcast %union.YYSTYPE* %3010 to %struct.textint*
  %3012 = getelementptr inbounds %struct.textint, %struct.textint* %3011, i32 0, i32 1
  %3013 = load i64, i64* %3012, align 8
  %3014 = trunc i64 %3013 to i32
  %3015 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3016 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3015, i64 0
  %3017 = bitcast %union.YYSTYPE* %3016 to i64*
  %3018 = load i64, i64* %3017, align 8
  %3019 = trunc i64 %3018 to i32
  %3020 = mul i32 %3014, %3019
  %3021 = trunc i32 %3020 to i8
  %3022 = sext i8 %3021 to i64
  %3023 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %3024 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %3023, i32 0, i32 2
  store i64 %3022, i64* %3024, align 8
  br i1 true, label %4783, label %4784

3025:                                             ; preds = %2996, %2984, %2977, %2970, %2951, %2933, %2925, %2918, %2910, %2891, %2858
  %3026 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3027 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3026, i64 -1
  %3028 = bitcast %union.YYSTYPE* %3027 to %struct.textint*
  %3029 = getelementptr inbounds %struct.textint, %struct.textint* %3028, i32 0, i32 1
  %3030 = load i64, i64* %3029, align 8
  %3031 = trunc i64 %3030 to i32
  %3032 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3033 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3032, i64 0
  %3034 = bitcast %union.YYSTYPE* %3033 to i64*
  %3035 = load i64, i64* %3034, align 8
  %3036 = trunc i64 %3035 to i32
  %3037 = mul i32 %3031, %3036
  %3038 = trunc i32 %3037 to i8
  %3039 = sext i8 %3038 to i64
  %3040 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %3041 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %3040, i32 0, i32 2
  store i64 %3039, i64* %3041, align 8
  br i1 false, label %4783, label %4784

3042:                                             ; preds = %2843
  %3043 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3044 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3043, i64 0
  %3045 = bitcast %union.YYSTYPE* %3044 to i64*
  %3046 = load i64, i64* %3045, align 8
  %3047 = icmp slt i64 %3046, 0
  br i1 %3047, label %3048, label %3143

3048:                                             ; preds = %3042
  %3049 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3050 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3049, i64 -1
  %3051 = bitcast %union.YYSTYPE* %3050 to %struct.textint*
  %3052 = getelementptr inbounds %struct.textint, %struct.textint* %3051, i32 0, i32 1
  %3053 = load i64, i64* %3052, align 8
  %3054 = icmp slt i64 %3053, 0
  br i1 %3054, label %3055, label %3098

3055:                                             ; preds = %3048
  br i1 true, label %3056, label %3068

3056:                                             ; preds = %3055
  %3057 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3058 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3057, i64 -1
  %3059 = bitcast %union.YYSTYPE* %3058 to %struct.textint*
  %3060 = getelementptr inbounds %struct.textint, %struct.textint* %3059, i32 0, i32 1
  %3061 = load i64, i64* %3060, align 8
  %3062 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3063 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3062, i64 0
  %3064 = bitcast %union.YYSTYPE* %3063 to i64*
  %3065 = load i64, i64* %3064, align 8
  %3066 = sdiv i64 255, %3065
  %3067 = icmp slt i64 %3061, %3066
  br i1 %3067, label %3206, label %3223

3068:                                             ; preds = %3055
  br i1 true, label %3069, label %3075

3069:                                             ; preds = %3068
  %3070 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3071 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3070, i64 0
  %3072 = bitcast %union.YYSTYPE* %3071 to i64*
  %3073 = load i64, i64* %3072, align 8
  %3074 = icmp slt i64 %3073, -9223372036854775807
  br i1 %3074, label %3081, label %3082

3075:                                             ; preds = %3068
  %3076 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3077 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3076, i64 0
  %3078 = bitcast %union.YYSTYPE* %3077 to i64*
  %3079 = load i64, i64* %3078, align 8
  %3080 = icmp slt i64 0, %3079
  br i1 %3080, label %3081, label %3082

3081:                                             ; preds = %3075, %3069
  br label %3089

3082:                                             ; preds = %3075, %3069
  %3083 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3084 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3083, i64 0
  %3085 = bitcast %union.YYSTYPE* %3084 to i64*
  %3086 = load i64, i64* %3085, align 8
  %3087 = sub nsw i64 0, %3086
  %3088 = sdiv i64 255, %3087
  br label %3089

3089:                                             ; preds = %3082, %3081
  %3090 = phi i64 [ 0, %3081 ], [ %3088, %3082 ]
  %3091 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3092 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3091, i64 -1
  %3093 = bitcast %union.YYSTYPE* %3092 to %struct.textint*
  %3094 = getelementptr inbounds %struct.textint, %struct.textint* %3093, i32 0, i32 1
  %3095 = load i64, i64* %3094, align 8
  %3096 = sub nsw i64 -1, %3095
  %3097 = icmp sle i64 %3090, %3096
  br i1 %3097, label %3206, label %3223

3098:                                             ; preds = %3048
  br i1 true, label %3099, label %3100

3099:                                             ; preds = %3098
  br i1 false, label %3101, label %3131

3100:                                             ; preds = %3098
  br i1 false, label %3101, label %3131

3101:                                             ; preds = %3100, %3099
  %3102 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3103 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3102, i64 0
  %3104 = bitcast %union.YYSTYPE* %3103 to i64*
  %3105 = load i64, i64* %3104, align 8
  %3106 = icmp eq i64 %3105, -1
  br i1 %3106, label %3107, label %3131

3107:                                             ; preds = %3101
  br i1 true, label %3108, label %3116

3108:                                             ; preds = %3107
  %3109 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3110 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3109, i64 -1
  %3111 = bitcast %union.YYSTYPE* %3110 to %struct.textint*
  %3112 = getelementptr inbounds %struct.textint, %struct.textint* %3111, i32 0, i32 1
  %3113 = load i64, i64* %3112, align 8
  %3114 = add nsw i64 %3113, 0
  %3115 = icmp slt i64 0, %3114
  br i1 %3115, label %3206, label %3223

3116:                                             ; preds = %3107
  %3117 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3118 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3117, i64 -1
  %3119 = bitcast %union.YYSTYPE* %3118 to %struct.textint*
  %3120 = getelementptr inbounds %struct.textint, %struct.textint* %3119, i32 0, i32 1
  %3121 = load i64, i64* %3120, align 8
  %3122 = icmp slt i64 0, %3121
  br i1 %3122, label %3123, label %3223

3123:                                             ; preds = %3116
  %3124 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3125 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3124, i64 -1
  %3126 = bitcast %union.YYSTYPE* %3125 to %struct.textint*
  %3127 = getelementptr inbounds %struct.textint, %struct.textint* %3126, i32 0, i32 1
  %3128 = load i64, i64* %3127, align 8
  %3129 = sub nsw i64 %3128, 1
  %3130 = icmp slt i64 -1, %3129
  br i1 %3130, label %3206, label %3223

3131:                                             ; preds = %3101, %3100, %3099
  %3132 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3133 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3132, i64 0
  %3134 = bitcast %union.YYSTYPE* %3133 to i64*
  %3135 = load i64, i64* %3134, align 8
  %3136 = sdiv i64 0, %3135
  %3137 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3138 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3137, i64 -1
  %3139 = bitcast %union.YYSTYPE* %3138 to %struct.textint*
  %3140 = getelementptr inbounds %struct.textint, %struct.textint* %3139, i32 0, i32 1
  %3141 = load i64, i64* %3140, align 8
  %3142 = icmp slt i64 %3136, %3141
  br i1 %3142, label %3206, label %3223

3143:                                             ; preds = %3042
  %3144 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3145 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3144, i64 0
  %3146 = bitcast %union.YYSTYPE* %3145 to i64*
  %3147 = load i64, i64* %3146, align 8
  %3148 = icmp eq i64 %3147, 0
  br i1 %3148, label %3149, label %3150

3149:                                             ; preds = %3143
  br i1 false, label %3206, label %3223

3150:                                             ; preds = %3143
  %3151 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3152 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3151, i64 -1
  %3153 = bitcast %union.YYSTYPE* %3152 to %struct.textint*
  %3154 = getelementptr inbounds %struct.textint, %struct.textint* %3153, i32 0, i32 1
  %3155 = load i64, i64* %3154, align 8
  %3156 = icmp slt i64 %3155, 0
  br i1 %3156, label %3157, label %3194

3157:                                             ; preds = %3150
  br i1 true, label %3158, label %3159

3158:                                             ; preds = %3157
  br i1 false, label %3160, label %3182

3159:                                             ; preds = %3157
  br i1 false, label %3160, label %3182

3160:                                             ; preds = %3159, %3158
  %3161 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3162 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3161, i64 -1
  %3163 = bitcast %union.YYSTYPE* %3162 to %struct.textint*
  %3164 = getelementptr inbounds %struct.textint, %struct.textint* %3163, i32 0, i32 1
  %3165 = load i64, i64* %3164, align 8
  %3166 = icmp eq i64 %3165, -1
  br i1 %3166, label %3167, label %3182

3167:                                             ; preds = %3160
  br i1 true, label %3168, label %3175

3168:                                             ; preds = %3167
  %3169 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3170 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3169, i64 0
  %3171 = bitcast %union.YYSTYPE* %3170 to i64*
  %3172 = load i64, i64* %3171, align 8
  %3173 = add nsw i64 %3172, 0
  %3174 = icmp slt i64 0, %3173
  br i1 %3174, label %3206, label %3223

3175:                                             ; preds = %3167
  %3176 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3177 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3176, i64 0
  %3178 = bitcast %union.YYSTYPE* %3177 to i64*
  %3179 = load i64, i64* %3178, align 8
  %3180 = sub nsw i64 %3179, 1
  %3181 = icmp slt i64 -1, %3180
  br i1 %3181, label %3206, label %3223

3182:                                             ; preds = %3160, %3159, %3158
  %3183 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3184 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3183, i64 -1
  %3185 = bitcast %union.YYSTYPE* %3184 to %struct.textint*
  %3186 = getelementptr inbounds %struct.textint, %struct.textint* %3185, i32 0, i32 1
  %3187 = load i64, i64* %3186, align 8
  %3188 = sdiv i64 0, %3187
  %3189 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3190 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3189, i64 0
  %3191 = bitcast %union.YYSTYPE* %3190 to i64*
  %3192 = load i64, i64* %3191, align 8
  %3193 = icmp slt i64 %3188, %3192
  br i1 %3193, label %3206, label %3223

3194:                                             ; preds = %3150
  %3195 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3196 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3195, i64 0
  %3197 = bitcast %union.YYSTYPE* %3196 to i64*
  %3198 = load i64, i64* %3197, align 8
  %3199 = sdiv i64 255, %3198
  %3200 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3201 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3200, i64 -1
  %3202 = bitcast %union.YYSTYPE* %3201 to %struct.textint*
  %3203 = getelementptr inbounds %struct.textint, %struct.textint* %3202, i32 0, i32 1
  %3204 = load i64, i64* %3203, align 8
  %3205 = icmp slt i64 %3199, %3204
  br i1 %3205, label %3206, label %3223

3206:                                             ; preds = %3194, %3182, %3175, %3168, %3149, %3131, %3123, %3108, %3089, %3056
  %3207 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3208 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3207, i64 -1
  %3209 = bitcast %union.YYSTYPE* %3208 to %struct.textint*
  %3210 = getelementptr inbounds %struct.textint, %struct.textint* %3209, i32 0, i32 1
  %3211 = load i64, i64* %3210, align 8
  %3212 = trunc i64 %3211 to i32
  %3213 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3214 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3213, i64 0
  %3215 = bitcast %union.YYSTYPE* %3214 to i64*
  %3216 = load i64, i64* %3215, align 8
  %3217 = trunc i64 %3216 to i32
  %3218 = mul i32 %3212, %3217
  %3219 = trunc i32 %3218 to i8
  %3220 = zext i8 %3219 to i64
  %3221 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %3222 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %3221, i32 0, i32 2
  store i64 %3220, i64* %3222, align 8
  br i1 true, label %4783, label %4784

3223:                                             ; preds = %3194, %3182, %3175, %3168, %3149, %3131, %3123, %3116, %3108, %3089, %3056
  %3224 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3225 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3224, i64 -1
  %3226 = bitcast %union.YYSTYPE* %3225 to %struct.textint*
  %3227 = getelementptr inbounds %struct.textint, %struct.textint* %3226, i32 0, i32 1
  %3228 = load i64, i64* %3227, align 8
  %3229 = trunc i64 %3228 to i32
  %3230 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3231 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3230, i64 0
  %3232 = bitcast %union.YYSTYPE* %3231 to i64*
  %3233 = load i64, i64* %3232, align 8
  %3234 = trunc i64 %3233 to i32
  %3235 = mul i32 %3229, %3234
  %3236 = trunc i32 %3235 to i8
  %3237 = zext i8 %3236 to i64
  %3238 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %3239 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %3238, i32 0, i32 2
  store i64 %3237, i64* %3239, align 8
  br i1 false, label %4783, label %4784

3240:                                             ; preds = %2832
  br i1 false, label %3241, label %3638

3241:                                             ; preds = %3240
  br i1 false, label %3440, label %3242

3242:                                             ; preds = %3241
  %3243 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3244 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3243, i64 0
  %3245 = bitcast %union.YYSTYPE* %3244 to i64*
  %3246 = load i64, i64* %3245, align 8
  %3247 = icmp slt i64 %3246, 0
  br i1 %3247, label %3248, label %3343

3248:                                             ; preds = %3242
  %3249 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3250 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3249, i64 -1
  %3251 = bitcast %union.YYSTYPE* %3250 to %struct.textint*
  %3252 = getelementptr inbounds %struct.textint, %struct.textint* %3251, i32 0, i32 1
  %3253 = load i64, i64* %3252, align 8
  %3254 = icmp slt i64 %3253, 0
  br i1 %3254, label %3255, label %3298

3255:                                             ; preds = %3248
  br i1 true, label %3256, label %3268

3256:                                             ; preds = %3255
  %3257 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3258 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3257, i64 -1
  %3259 = bitcast %union.YYSTYPE* %3258 to %struct.textint*
  %3260 = getelementptr inbounds %struct.textint, %struct.textint* %3259, i32 0, i32 1
  %3261 = load i64, i64* %3260, align 8
  %3262 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3263 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3262, i64 0
  %3264 = bitcast %union.YYSTYPE* %3263 to i64*
  %3265 = load i64, i64* %3264, align 8
  %3266 = sdiv i64 32767, %3265
  %3267 = icmp slt i64 %3261, %3266
  br i1 %3267, label %3406, label %3423

3268:                                             ; preds = %3255
  br i1 true, label %3269, label %3275

3269:                                             ; preds = %3268
  %3270 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3271 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3270, i64 0
  %3272 = bitcast %union.YYSTYPE* %3271 to i64*
  %3273 = load i64, i64* %3272, align 8
  %3274 = icmp slt i64 %3273, -9223372036854775807
  br i1 %3274, label %3281, label %3282

3275:                                             ; preds = %3268
  %3276 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3277 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3276, i64 0
  %3278 = bitcast %union.YYSTYPE* %3277 to i64*
  %3279 = load i64, i64* %3278, align 8
  %3280 = icmp slt i64 0, %3279
  br i1 %3280, label %3281, label %3282

3281:                                             ; preds = %3275, %3269
  br label %3289

3282:                                             ; preds = %3275, %3269
  %3283 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3284 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3283, i64 0
  %3285 = bitcast %union.YYSTYPE* %3284 to i64*
  %3286 = load i64, i64* %3285, align 8
  %3287 = sub nsw i64 0, %3286
  %3288 = sdiv i64 32767, %3287
  br label %3289

3289:                                             ; preds = %3282, %3281
  %3290 = phi i64 [ 0, %3281 ], [ %3288, %3282 ]
  %3291 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3292 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3291, i64 -1
  %3293 = bitcast %union.YYSTYPE* %3292 to %struct.textint*
  %3294 = getelementptr inbounds %struct.textint, %struct.textint* %3293, i32 0, i32 1
  %3295 = load i64, i64* %3294, align 8
  %3296 = sub nsw i64 -1, %3295
  %3297 = icmp sle i64 %3290, %3296
  br i1 %3297, label %3406, label %3423

3298:                                             ; preds = %3248
  br i1 true, label %3299, label %3300

3299:                                             ; preds = %3298
  br i1 false, label %3301, label %3331

3300:                                             ; preds = %3298
  br i1 false, label %3301, label %3331

3301:                                             ; preds = %3300, %3299
  %3302 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3303 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3302, i64 0
  %3304 = bitcast %union.YYSTYPE* %3303 to i64*
  %3305 = load i64, i64* %3304, align 8
  %3306 = icmp eq i64 %3305, -1
  br i1 %3306, label %3307, label %3331

3307:                                             ; preds = %3301
  br i1 true, label %3308, label %3316

3308:                                             ; preds = %3307
  %3309 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3310 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3309, i64 -1
  %3311 = bitcast %union.YYSTYPE* %3310 to %struct.textint*
  %3312 = getelementptr inbounds %struct.textint, %struct.textint* %3311, i32 0, i32 1
  %3313 = load i64, i64* %3312, align 8
  %3314 = add nsw i64 %3313, -32768
  %3315 = icmp slt i64 0, %3314
  br i1 %3315, label %3406, label %3423

3316:                                             ; preds = %3307
  %3317 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3318 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3317, i64 -1
  %3319 = bitcast %union.YYSTYPE* %3318 to %struct.textint*
  %3320 = getelementptr inbounds %struct.textint, %struct.textint* %3319, i32 0, i32 1
  %3321 = load i64, i64* %3320, align 8
  %3322 = icmp slt i64 0, %3321
  br i1 %3322, label %3323, label %3423

3323:                                             ; preds = %3316
  %3324 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3325 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3324, i64 -1
  %3326 = bitcast %union.YYSTYPE* %3325 to %struct.textint*
  %3327 = getelementptr inbounds %struct.textint, %struct.textint* %3326, i32 0, i32 1
  %3328 = load i64, i64* %3327, align 8
  %3329 = sub nsw i64 %3328, 1
  %3330 = icmp slt i64 32767, %3329
  br i1 %3330, label %3406, label %3423

3331:                                             ; preds = %3301, %3300, %3299
  %3332 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3333 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3332, i64 0
  %3334 = bitcast %union.YYSTYPE* %3333 to i64*
  %3335 = load i64, i64* %3334, align 8
  %3336 = sdiv i64 -32768, %3335
  %3337 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3338 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3337, i64 -1
  %3339 = bitcast %union.YYSTYPE* %3338 to %struct.textint*
  %3340 = getelementptr inbounds %struct.textint, %struct.textint* %3339, i32 0, i32 1
  %3341 = load i64, i64* %3340, align 8
  %3342 = icmp slt i64 %3336, %3341
  br i1 %3342, label %3406, label %3423

3343:                                             ; preds = %3242
  %3344 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3345 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3344, i64 0
  %3346 = bitcast %union.YYSTYPE* %3345 to i64*
  %3347 = load i64, i64* %3346, align 8
  %3348 = icmp eq i64 %3347, 0
  br i1 %3348, label %3349, label %3350

3349:                                             ; preds = %3343
  br i1 false, label %3406, label %3423

3350:                                             ; preds = %3343
  %3351 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3352 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3351, i64 -1
  %3353 = bitcast %union.YYSTYPE* %3352 to %struct.textint*
  %3354 = getelementptr inbounds %struct.textint, %struct.textint* %3353, i32 0, i32 1
  %3355 = load i64, i64* %3354, align 8
  %3356 = icmp slt i64 %3355, 0
  br i1 %3356, label %3357, label %3394

3357:                                             ; preds = %3350
  br i1 true, label %3358, label %3359

3358:                                             ; preds = %3357
  br i1 false, label %3360, label %3382

3359:                                             ; preds = %3357
  br i1 false, label %3360, label %3382

3360:                                             ; preds = %3359, %3358
  %3361 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3362 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3361, i64 -1
  %3363 = bitcast %union.YYSTYPE* %3362 to %struct.textint*
  %3364 = getelementptr inbounds %struct.textint, %struct.textint* %3363, i32 0, i32 1
  %3365 = load i64, i64* %3364, align 8
  %3366 = icmp eq i64 %3365, -1
  br i1 %3366, label %3367, label %3382

3367:                                             ; preds = %3360
  br i1 true, label %3368, label %3375

3368:                                             ; preds = %3367
  %3369 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3370 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3369, i64 0
  %3371 = bitcast %union.YYSTYPE* %3370 to i64*
  %3372 = load i64, i64* %3371, align 8
  %3373 = add nsw i64 %3372, -32768
  %3374 = icmp slt i64 0, %3373
  br i1 %3374, label %3406, label %3423

3375:                                             ; preds = %3367
  %3376 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3377 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3376, i64 0
  %3378 = bitcast %union.YYSTYPE* %3377 to i64*
  %3379 = load i64, i64* %3378, align 8
  %3380 = sub nsw i64 %3379, 1
  %3381 = icmp slt i64 32767, %3380
  br i1 %3381, label %3406, label %3423

3382:                                             ; preds = %3360, %3359, %3358
  %3383 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3384 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3383, i64 -1
  %3385 = bitcast %union.YYSTYPE* %3384 to %struct.textint*
  %3386 = getelementptr inbounds %struct.textint, %struct.textint* %3385, i32 0, i32 1
  %3387 = load i64, i64* %3386, align 8
  %3388 = sdiv i64 -32768, %3387
  %3389 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3390 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3389, i64 0
  %3391 = bitcast %union.YYSTYPE* %3390 to i64*
  %3392 = load i64, i64* %3391, align 8
  %3393 = icmp slt i64 %3388, %3392
  br i1 %3393, label %3406, label %3423

3394:                                             ; preds = %3350
  %3395 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3396 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3395, i64 0
  %3397 = bitcast %union.YYSTYPE* %3396 to i64*
  %3398 = load i64, i64* %3397, align 8
  %3399 = sdiv i64 32767, %3398
  %3400 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3401 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3400, i64 -1
  %3402 = bitcast %union.YYSTYPE* %3401 to %struct.textint*
  %3403 = getelementptr inbounds %struct.textint, %struct.textint* %3402, i32 0, i32 1
  %3404 = load i64, i64* %3403, align 8
  %3405 = icmp slt i64 %3399, %3404
  br i1 %3405, label %3406, label %3423

3406:                                             ; preds = %3394, %3382, %3375, %3368, %3349, %3331, %3323, %3308, %3289, %3256
  %3407 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3408 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3407, i64 -1
  %3409 = bitcast %union.YYSTYPE* %3408 to %struct.textint*
  %3410 = getelementptr inbounds %struct.textint, %struct.textint* %3409, i32 0, i32 1
  %3411 = load i64, i64* %3410, align 8
  %3412 = trunc i64 %3411 to i32
  %3413 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3414 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3413, i64 0
  %3415 = bitcast %union.YYSTYPE* %3414 to i64*
  %3416 = load i64, i64* %3415, align 8
  %3417 = trunc i64 %3416 to i32
  %3418 = mul i32 %3412, %3417
  %3419 = trunc i32 %3418 to i16
  %3420 = sext i16 %3419 to i64
  %3421 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %3422 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %3421, i32 0, i32 2
  store i64 %3420, i64* %3422, align 8
  br i1 true, label %4783, label %4784

3423:                                             ; preds = %3394, %3382, %3375, %3368, %3349, %3331, %3323, %3316, %3308, %3289, %3256
  %3424 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3425 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3424, i64 -1
  %3426 = bitcast %union.YYSTYPE* %3425 to %struct.textint*
  %3427 = getelementptr inbounds %struct.textint, %struct.textint* %3426, i32 0, i32 1
  %3428 = load i64, i64* %3427, align 8
  %3429 = trunc i64 %3428 to i32
  %3430 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3431 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3430, i64 0
  %3432 = bitcast %union.YYSTYPE* %3431 to i64*
  %3433 = load i64, i64* %3432, align 8
  %3434 = trunc i64 %3433 to i32
  %3435 = mul i32 %3429, %3434
  %3436 = trunc i32 %3435 to i16
  %3437 = sext i16 %3436 to i64
  %3438 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %3439 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %3438, i32 0, i32 2
  store i64 %3437, i64* %3439, align 8
  br i1 false, label %4783, label %4784

3440:                                             ; preds = %3241
  %3441 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3442 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3441, i64 0
  %3443 = bitcast %union.YYSTYPE* %3442 to i64*
  %3444 = load i64, i64* %3443, align 8
  %3445 = icmp slt i64 %3444, 0
  br i1 %3445, label %3446, label %3541

3446:                                             ; preds = %3440
  %3447 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3448 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3447, i64 -1
  %3449 = bitcast %union.YYSTYPE* %3448 to %struct.textint*
  %3450 = getelementptr inbounds %struct.textint, %struct.textint* %3449, i32 0, i32 1
  %3451 = load i64, i64* %3450, align 8
  %3452 = icmp slt i64 %3451, 0
  br i1 %3452, label %3453, label %3496

3453:                                             ; preds = %3446
  br i1 true, label %3454, label %3466

3454:                                             ; preds = %3453
  %3455 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3456 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3455, i64 -1
  %3457 = bitcast %union.YYSTYPE* %3456 to %struct.textint*
  %3458 = getelementptr inbounds %struct.textint, %struct.textint* %3457, i32 0, i32 1
  %3459 = load i64, i64* %3458, align 8
  %3460 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3461 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3460, i64 0
  %3462 = bitcast %union.YYSTYPE* %3461 to i64*
  %3463 = load i64, i64* %3462, align 8
  %3464 = sdiv i64 65535, %3463
  %3465 = icmp slt i64 %3459, %3464
  br i1 %3465, label %3604, label %3621

3466:                                             ; preds = %3453
  br i1 true, label %3467, label %3473

3467:                                             ; preds = %3466
  %3468 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3469 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3468, i64 0
  %3470 = bitcast %union.YYSTYPE* %3469 to i64*
  %3471 = load i64, i64* %3470, align 8
  %3472 = icmp slt i64 %3471, -9223372036854775807
  br i1 %3472, label %3479, label %3480

3473:                                             ; preds = %3466
  %3474 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3475 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3474, i64 0
  %3476 = bitcast %union.YYSTYPE* %3475 to i64*
  %3477 = load i64, i64* %3476, align 8
  %3478 = icmp slt i64 0, %3477
  br i1 %3478, label %3479, label %3480

3479:                                             ; preds = %3473, %3467
  br label %3487

3480:                                             ; preds = %3473, %3467
  %3481 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3482 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3481, i64 0
  %3483 = bitcast %union.YYSTYPE* %3482 to i64*
  %3484 = load i64, i64* %3483, align 8
  %3485 = sub nsw i64 0, %3484
  %3486 = sdiv i64 65535, %3485
  br label %3487

3487:                                             ; preds = %3480, %3479
  %3488 = phi i64 [ 0, %3479 ], [ %3486, %3480 ]
  %3489 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3490 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3489, i64 -1
  %3491 = bitcast %union.YYSTYPE* %3490 to %struct.textint*
  %3492 = getelementptr inbounds %struct.textint, %struct.textint* %3491, i32 0, i32 1
  %3493 = load i64, i64* %3492, align 8
  %3494 = sub nsw i64 -1, %3493
  %3495 = icmp sle i64 %3488, %3494
  br i1 %3495, label %3604, label %3621

3496:                                             ; preds = %3446
  br i1 true, label %3497, label %3498

3497:                                             ; preds = %3496
  br i1 false, label %3499, label %3529

3498:                                             ; preds = %3496
  br i1 false, label %3499, label %3529

3499:                                             ; preds = %3498, %3497
  %3500 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3501 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3500, i64 0
  %3502 = bitcast %union.YYSTYPE* %3501 to i64*
  %3503 = load i64, i64* %3502, align 8
  %3504 = icmp eq i64 %3503, -1
  br i1 %3504, label %3505, label %3529

3505:                                             ; preds = %3499
  br i1 true, label %3506, label %3514

3506:                                             ; preds = %3505
  %3507 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3508 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3507, i64 -1
  %3509 = bitcast %union.YYSTYPE* %3508 to %struct.textint*
  %3510 = getelementptr inbounds %struct.textint, %struct.textint* %3509, i32 0, i32 1
  %3511 = load i64, i64* %3510, align 8
  %3512 = add nsw i64 %3511, 0
  %3513 = icmp slt i64 0, %3512
  br i1 %3513, label %3604, label %3621

3514:                                             ; preds = %3505
  %3515 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3516 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3515, i64 -1
  %3517 = bitcast %union.YYSTYPE* %3516 to %struct.textint*
  %3518 = getelementptr inbounds %struct.textint, %struct.textint* %3517, i32 0, i32 1
  %3519 = load i64, i64* %3518, align 8
  %3520 = icmp slt i64 0, %3519
  br i1 %3520, label %3521, label %3621

3521:                                             ; preds = %3514
  %3522 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3523 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3522, i64 -1
  %3524 = bitcast %union.YYSTYPE* %3523 to %struct.textint*
  %3525 = getelementptr inbounds %struct.textint, %struct.textint* %3524, i32 0, i32 1
  %3526 = load i64, i64* %3525, align 8
  %3527 = sub nsw i64 %3526, 1
  %3528 = icmp slt i64 -1, %3527
  br i1 %3528, label %3604, label %3621

3529:                                             ; preds = %3499, %3498, %3497
  %3530 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3531 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3530, i64 0
  %3532 = bitcast %union.YYSTYPE* %3531 to i64*
  %3533 = load i64, i64* %3532, align 8
  %3534 = sdiv i64 0, %3533
  %3535 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3536 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3535, i64 -1
  %3537 = bitcast %union.YYSTYPE* %3536 to %struct.textint*
  %3538 = getelementptr inbounds %struct.textint, %struct.textint* %3537, i32 0, i32 1
  %3539 = load i64, i64* %3538, align 8
  %3540 = icmp slt i64 %3534, %3539
  br i1 %3540, label %3604, label %3621

3541:                                             ; preds = %3440
  %3542 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3543 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3542, i64 0
  %3544 = bitcast %union.YYSTYPE* %3543 to i64*
  %3545 = load i64, i64* %3544, align 8
  %3546 = icmp eq i64 %3545, 0
  br i1 %3546, label %3547, label %3548

3547:                                             ; preds = %3541
  br i1 false, label %3604, label %3621

3548:                                             ; preds = %3541
  %3549 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3550 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3549, i64 -1
  %3551 = bitcast %union.YYSTYPE* %3550 to %struct.textint*
  %3552 = getelementptr inbounds %struct.textint, %struct.textint* %3551, i32 0, i32 1
  %3553 = load i64, i64* %3552, align 8
  %3554 = icmp slt i64 %3553, 0
  br i1 %3554, label %3555, label %3592

3555:                                             ; preds = %3548
  br i1 true, label %3556, label %3557

3556:                                             ; preds = %3555
  br i1 false, label %3558, label %3580

3557:                                             ; preds = %3555
  br i1 false, label %3558, label %3580

3558:                                             ; preds = %3557, %3556
  %3559 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3560 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3559, i64 -1
  %3561 = bitcast %union.YYSTYPE* %3560 to %struct.textint*
  %3562 = getelementptr inbounds %struct.textint, %struct.textint* %3561, i32 0, i32 1
  %3563 = load i64, i64* %3562, align 8
  %3564 = icmp eq i64 %3563, -1
  br i1 %3564, label %3565, label %3580

3565:                                             ; preds = %3558
  br i1 true, label %3566, label %3573

3566:                                             ; preds = %3565
  %3567 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3568 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3567, i64 0
  %3569 = bitcast %union.YYSTYPE* %3568 to i64*
  %3570 = load i64, i64* %3569, align 8
  %3571 = add nsw i64 %3570, 0
  %3572 = icmp slt i64 0, %3571
  br i1 %3572, label %3604, label %3621

3573:                                             ; preds = %3565
  %3574 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3575 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3574, i64 0
  %3576 = bitcast %union.YYSTYPE* %3575 to i64*
  %3577 = load i64, i64* %3576, align 8
  %3578 = sub nsw i64 %3577, 1
  %3579 = icmp slt i64 -1, %3578
  br i1 %3579, label %3604, label %3621

3580:                                             ; preds = %3558, %3557, %3556
  %3581 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3582 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3581, i64 -1
  %3583 = bitcast %union.YYSTYPE* %3582 to %struct.textint*
  %3584 = getelementptr inbounds %struct.textint, %struct.textint* %3583, i32 0, i32 1
  %3585 = load i64, i64* %3584, align 8
  %3586 = sdiv i64 0, %3585
  %3587 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3588 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3587, i64 0
  %3589 = bitcast %union.YYSTYPE* %3588 to i64*
  %3590 = load i64, i64* %3589, align 8
  %3591 = icmp slt i64 %3586, %3590
  br i1 %3591, label %3604, label %3621

3592:                                             ; preds = %3548
  %3593 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3594 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3593, i64 0
  %3595 = bitcast %union.YYSTYPE* %3594 to i64*
  %3596 = load i64, i64* %3595, align 8
  %3597 = sdiv i64 65535, %3596
  %3598 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3599 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3598, i64 -1
  %3600 = bitcast %union.YYSTYPE* %3599 to %struct.textint*
  %3601 = getelementptr inbounds %struct.textint, %struct.textint* %3600, i32 0, i32 1
  %3602 = load i64, i64* %3601, align 8
  %3603 = icmp slt i64 %3597, %3602
  br i1 %3603, label %3604, label %3621

3604:                                             ; preds = %3592, %3580, %3573, %3566, %3547, %3529, %3521, %3506, %3487, %3454
  %3605 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3606 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3605, i64 -1
  %3607 = bitcast %union.YYSTYPE* %3606 to %struct.textint*
  %3608 = getelementptr inbounds %struct.textint, %struct.textint* %3607, i32 0, i32 1
  %3609 = load i64, i64* %3608, align 8
  %3610 = trunc i64 %3609 to i32
  %3611 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3612 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3611, i64 0
  %3613 = bitcast %union.YYSTYPE* %3612 to i64*
  %3614 = load i64, i64* %3613, align 8
  %3615 = trunc i64 %3614 to i32
  %3616 = mul i32 %3610, %3615
  %3617 = trunc i32 %3616 to i16
  %3618 = zext i16 %3617 to i64
  %3619 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %3620 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %3619, i32 0, i32 2
  store i64 %3618, i64* %3620, align 8
  br i1 true, label %4783, label %4784

3621:                                             ; preds = %3592, %3580, %3573, %3566, %3547, %3529, %3521, %3514, %3506, %3487, %3454
  %3622 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3623 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3622, i64 -1
  %3624 = bitcast %union.YYSTYPE* %3623 to %struct.textint*
  %3625 = getelementptr inbounds %struct.textint, %struct.textint* %3624, i32 0, i32 1
  %3626 = load i64, i64* %3625, align 8
  %3627 = trunc i64 %3626 to i32
  %3628 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3629 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3628, i64 0
  %3630 = bitcast %union.YYSTYPE* %3629 to i64*
  %3631 = load i64, i64* %3630, align 8
  %3632 = trunc i64 %3631 to i32
  %3633 = mul i32 %3627, %3632
  %3634 = trunc i32 %3633 to i16
  %3635 = zext i16 %3634 to i64
  %3636 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %3637 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %3636, i32 0, i32 2
  store i64 %3635, i64* %3637, align 8
  br i1 false, label %4783, label %4784

3638:                                             ; preds = %3240
  br i1 false, label %3639, label %4032

3639:                                             ; preds = %3638
  br i1 true, label %3640, label %3836

3640:                                             ; preds = %3639
  %3641 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3642 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3641, i64 0
  %3643 = bitcast %union.YYSTYPE* %3642 to i64*
  %3644 = load i64, i64* %3643, align 8
  %3645 = icmp slt i64 %3644, 0
  br i1 %3645, label %3646, label %3741

3646:                                             ; preds = %3640
  %3647 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3648 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3647, i64 -1
  %3649 = bitcast %union.YYSTYPE* %3648 to %struct.textint*
  %3650 = getelementptr inbounds %struct.textint, %struct.textint* %3649, i32 0, i32 1
  %3651 = load i64, i64* %3650, align 8
  %3652 = icmp slt i64 %3651, 0
  br i1 %3652, label %3653, label %3696

3653:                                             ; preds = %3646
  br i1 true, label %3654, label %3666

3654:                                             ; preds = %3653
  %3655 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3656 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3655, i64 -1
  %3657 = bitcast %union.YYSTYPE* %3656 to %struct.textint*
  %3658 = getelementptr inbounds %struct.textint, %struct.textint* %3657, i32 0, i32 1
  %3659 = load i64, i64* %3658, align 8
  %3660 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3661 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3660, i64 0
  %3662 = bitcast %union.YYSTYPE* %3661 to i64*
  %3663 = load i64, i64* %3662, align 8
  %3664 = sdiv i64 2147483647, %3663
  %3665 = icmp slt i64 %3659, %3664
  br i1 %3665, label %3804, label %3820

3666:                                             ; preds = %3653
  br i1 true, label %3667, label %3673

3667:                                             ; preds = %3666
  %3668 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3669 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3668, i64 0
  %3670 = bitcast %union.YYSTYPE* %3669 to i64*
  %3671 = load i64, i64* %3670, align 8
  %3672 = icmp slt i64 %3671, -9223372036854775807
  br i1 %3672, label %3679, label %3680

3673:                                             ; preds = %3666
  %3674 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3675 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3674, i64 0
  %3676 = bitcast %union.YYSTYPE* %3675 to i64*
  %3677 = load i64, i64* %3676, align 8
  %3678 = icmp slt i64 0, %3677
  br i1 %3678, label %3679, label %3680

3679:                                             ; preds = %3673, %3667
  br label %3687

3680:                                             ; preds = %3673, %3667
  %3681 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3682 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3681, i64 0
  %3683 = bitcast %union.YYSTYPE* %3682 to i64*
  %3684 = load i64, i64* %3683, align 8
  %3685 = sub nsw i64 0, %3684
  %3686 = sdiv i64 2147483647, %3685
  br label %3687

3687:                                             ; preds = %3680, %3679
  %3688 = phi i64 [ 0, %3679 ], [ %3686, %3680 ]
  %3689 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3690 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3689, i64 -1
  %3691 = bitcast %union.YYSTYPE* %3690 to %struct.textint*
  %3692 = getelementptr inbounds %struct.textint, %struct.textint* %3691, i32 0, i32 1
  %3693 = load i64, i64* %3692, align 8
  %3694 = sub nsw i64 -1, %3693
  %3695 = icmp sle i64 %3688, %3694
  br i1 %3695, label %3804, label %3820

3696:                                             ; preds = %3646
  br i1 true, label %3697, label %3698

3697:                                             ; preds = %3696
  br i1 false, label %3699, label %3729

3698:                                             ; preds = %3696
  br i1 false, label %3699, label %3729

3699:                                             ; preds = %3698, %3697
  %3700 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3701 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3700, i64 0
  %3702 = bitcast %union.YYSTYPE* %3701 to i64*
  %3703 = load i64, i64* %3702, align 8
  %3704 = icmp eq i64 %3703, -1
  br i1 %3704, label %3705, label %3729

3705:                                             ; preds = %3699
  br i1 true, label %3706, label %3714

3706:                                             ; preds = %3705
  %3707 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3708 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3707, i64 -1
  %3709 = bitcast %union.YYSTYPE* %3708 to %struct.textint*
  %3710 = getelementptr inbounds %struct.textint, %struct.textint* %3709, i32 0, i32 1
  %3711 = load i64, i64* %3710, align 8
  %3712 = add nsw i64 %3711, -2147483648
  %3713 = icmp slt i64 0, %3712
  br i1 %3713, label %3804, label %3820

3714:                                             ; preds = %3705
  %3715 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3716 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3715, i64 -1
  %3717 = bitcast %union.YYSTYPE* %3716 to %struct.textint*
  %3718 = getelementptr inbounds %struct.textint, %struct.textint* %3717, i32 0, i32 1
  %3719 = load i64, i64* %3718, align 8
  %3720 = icmp slt i64 0, %3719
  br i1 %3720, label %3721, label %3820

3721:                                             ; preds = %3714
  %3722 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3723 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3722, i64 -1
  %3724 = bitcast %union.YYSTYPE* %3723 to %struct.textint*
  %3725 = getelementptr inbounds %struct.textint, %struct.textint* %3724, i32 0, i32 1
  %3726 = load i64, i64* %3725, align 8
  %3727 = sub nsw i64 %3726, 1
  %3728 = icmp slt i64 2147483647, %3727
  br i1 %3728, label %3804, label %3820

3729:                                             ; preds = %3699, %3698, %3697
  %3730 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3731 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3730, i64 0
  %3732 = bitcast %union.YYSTYPE* %3731 to i64*
  %3733 = load i64, i64* %3732, align 8
  %3734 = sdiv i64 -2147483648, %3733
  %3735 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3736 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3735, i64 -1
  %3737 = bitcast %union.YYSTYPE* %3736 to %struct.textint*
  %3738 = getelementptr inbounds %struct.textint, %struct.textint* %3737, i32 0, i32 1
  %3739 = load i64, i64* %3738, align 8
  %3740 = icmp slt i64 %3734, %3739
  br i1 %3740, label %3804, label %3820

3741:                                             ; preds = %3640
  %3742 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3743 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3742, i64 0
  %3744 = bitcast %union.YYSTYPE* %3743 to i64*
  %3745 = load i64, i64* %3744, align 8
  %3746 = icmp eq i64 %3745, 0
  br i1 %3746, label %3747, label %3748

3747:                                             ; preds = %3741
  br i1 false, label %3804, label %3820

3748:                                             ; preds = %3741
  %3749 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3750 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3749, i64 -1
  %3751 = bitcast %union.YYSTYPE* %3750 to %struct.textint*
  %3752 = getelementptr inbounds %struct.textint, %struct.textint* %3751, i32 0, i32 1
  %3753 = load i64, i64* %3752, align 8
  %3754 = icmp slt i64 %3753, 0
  br i1 %3754, label %3755, label %3792

3755:                                             ; preds = %3748
  br i1 true, label %3756, label %3757

3756:                                             ; preds = %3755
  br i1 false, label %3758, label %3780

3757:                                             ; preds = %3755
  br i1 false, label %3758, label %3780

3758:                                             ; preds = %3757, %3756
  %3759 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3760 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3759, i64 -1
  %3761 = bitcast %union.YYSTYPE* %3760 to %struct.textint*
  %3762 = getelementptr inbounds %struct.textint, %struct.textint* %3761, i32 0, i32 1
  %3763 = load i64, i64* %3762, align 8
  %3764 = icmp eq i64 %3763, -1
  br i1 %3764, label %3765, label %3780

3765:                                             ; preds = %3758
  br i1 true, label %3766, label %3773

3766:                                             ; preds = %3765
  %3767 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3768 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3767, i64 0
  %3769 = bitcast %union.YYSTYPE* %3768 to i64*
  %3770 = load i64, i64* %3769, align 8
  %3771 = add nsw i64 %3770, -2147483648
  %3772 = icmp slt i64 0, %3771
  br i1 %3772, label %3804, label %3820

3773:                                             ; preds = %3765
  %3774 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3775 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3774, i64 0
  %3776 = bitcast %union.YYSTYPE* %3775 to i64*
  %3777 = load i64, i64* %3776, align 8
  %3778 = sub nsw i64 %3777, 1
  %3779 = icmp slt i64 2147483647, %3778
  br i1 %3779, label %3804, label %3820

3780:                                             ; preds = %3758, %3757, %3756
  %3781 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3782 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3781, i64 -1
  %3783 = bitcast %union.YYSTYPE* %3782 to %struct.textint*
  %3784 = getelementptr inbounds %struct.textint, %struct.textint* %3783, i32 0, i32 1
  %3785 = load i64, i64* %3784, align 8
  %3786 = sdiv i64 -2147483648, %3785
  %3787 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3788 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3787, i64 0
  %3789 = bitcast %union.YYSTYPE* %3788 to i64*
  %3790 = load i64, i64* %3789, align 8
  %3791 = icmp slt i64 %3786, %3790
  br i1 %3791, label %3804, label %3820

3792:                                             ; preds = %3748
  %3793 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3794 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3793, i64 0
  %3795 = bitcast %union.YYSTYPE* %3794 to i64*
  %3796 = load i64, i64* %3795, align 8
  %3797 = sdiv i64 2147483647, %3796
  %3798 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3799 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3798, i64 -1
  %3800 = bitcast %union.YYSTYPE* %3799 to %struct.textint*
  %3801 = getelementptr inbounds %struct.textint, %struct.textint* %3800, i32 0, i32 1
  %3802 = load i64, i64* %3801, align 8
  %3803 = icmp slt i64 %3797, %3802
  br i1 %3803, label %3804, label %3820

3804:                                             ; preds = %3792, %3780, %3773, %3766, %3747, %3729, %3721, %3706, %3687, %3654
  %3805 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3806 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3805, i64 -1
  %3807 = bitcast %union.YYSTYPE* %3806 to %struct.textint*
  %3808 = getelementptr inbounds %struct.textint, %struct.textint* %3807, i32 0, i32 1
  %3809 = load i64, i64* %3808, align 8
  %3810 = trunc i64 %3809 to i32
  %3811 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3812 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3811, i64 0
  %3813 = bitcast %union.YYSTYPE* %3812 to i64*
  %3814 = load i64, i64* %3813, align 8
  %3815 = trunc i64 %3814 to i32
  %3816 = mul i32 %3810, %3815
  %3817 = sext i32 %3816 to i64
  %3818 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %3819 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %3818, i32 0, i32 2
  store i64 %3817, i64* %3819, align 8
  br i1 true, label %4783, label %4784

3820:                                             ; preds = %3792, %3780, %3773, %3766, %3747, %3729, %3721, %3714, %3706, %3687, %3654
  %3821 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3822 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3821, i64 -1
  %3823 = bitcast %union.YYSTYPE* %3822 to %struct.textint*
  %3824 = getelementptr inbounds %struct.textint, %struct.textint* %3823, i32 0, i32 1
  %3825 = load i64, i64* %3824, align 8
  %3826 = trunc i64 %3825 to i32
  %3827 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3828 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3827, i64 0
  %3829 = bitcast %union.YYSTYPE* %3828 to i64*
  %3830 = load i64, i64* %3829, align 8
  %3831 = trunc i64 %3830 to i32
  %3832 = mul i32 %3826, %3831
  %3833 = sext i32 %3832 to i64
  %3834 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %3835 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %3834, i32 0, i32 2
  store i64 %3833, i64* %3835, align 8
  br i1 false, label %4783, label %4784

3836:                                             ; preds = %3639
  %3837 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3838 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3837, i64 0
  %3839 = bitcast %union.YYSTYPE* %3838 to i64*
  %3840 = load i64, i64* %3839, align 8
  %3841 = icmp slt i64 %3840, 0
  br i1 %3841, label %3842, label %3937

3842:                                             ; preds = %3836
  %3843 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3844 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3843, i64 -1
  %3845 = bitcast %union.YYSTYPE* %3844 to %struct.textint*
  %3846 = getelementptr inbounds %struct.textint, %struct.textint* %3845, i32 0, i32 1
  %3847 = load i64, i64* %3846, align 8
  %3848 = icmp slt i64 %3847, 0
  br i1 %3848, label %3849, label %3892

3849:                                             ; preds = %3842
  br i1 true, label %3850, label %3862

3850:                                             ; preds = %3849
  %3851 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3852 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3851, i64 -1
  %3853 = bitcast %union.YYSTYPE* %3852 to %struct.textint*
  %3854 = getelementptr inbounds %struct.textint, %struct.textint* %3853, i32 0, i32 1
  %3855 = load i64, i64* %3854, align 8
  %3856 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3857 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3856, i64 0
  %3858 = bitcast %union.YYSTYPE* %3857 to i64*
  %3859 = load i64, i64* %3858, align 8
  %3860 = sdiv i64 4294967295, %3859
  %3861 = icmp slt i64 %3855, %3860
  br i1 %3861, label %4000, label %4016

3862:                                             ; preds = %3849
  br i1 true, label %3863, label %3869

3863:                                             ; preds = %3862
  %3864 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3865 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3864, i64 0
  %3866 = bitcast %union.YYSTYPE* %3865 to i64*
  %3867 = load i64, i64* %3866, align 8
  %3868 = icmp slt i64 %3867, -9223372036854775807
  br i1 %3868, label %3875, label %3876

3869:                                             ; preds = %3862
  %3870 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3871 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3870, i64 0
  %3872 = bitcast %union.YYSTYPE* %3871 to i64*
  %3873 = load i64, i64* %3872, align 8
  %3874 = icmp slt i64 0, %3873
  br i1 %3874, label %3875, label %3876

3875:                                             ; preds = %3869, %3863
  br label %3883

3876:                                             ; preds = %3869, %3863
  %3877 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3878 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3877, i64 0
  %3879 = bitcast %union.YYSTYPE* %3878 to i64*
  %3880 = load i64, i64* %3879, align 8
  %3881 = sub nsw i64 0, %3880
  %3882 = sdiv i64 4294967295, %3881
  br label %3883

3883:                                             ; preds = %3876, %3875
  %3884 = phi i64 [ 0, %3875 ], [ %3882, %3876 ]
  %3885 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3886 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3885, i64 -1
  %3887 = bitcast %union.YYSTYPE* %3886 to %struct.textint*
  %3888 = getelementptr inbounds %struct.textint, %struct.textint* %3887, i32 0, i32 1
  %3889 = load i64, i64* %3888, align 8
  %3890 = sub nsw i64 -1, %3889
  %3891 = icmp sle i64 %3884, %3890
  br i1 %3891, label %4000, label %4016

3892:                                             ; preds = %3842
  br i1 true, label %3893, label %3894

3893:                                             ; preds = %3892
  br i1 false, label %3895, label %3925

3894:                                             ; preds = %3892
  br i1 false, label %3895, label %3925

3895:                                             ; preds = %3894, %3893
  %3896 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3897 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3896, i64 0
  %3898 = bitcast %union.YYSTYPE* %3897 to i64*
  %3899 = load i64, i64* %3898, align 8
  %3900 = icmp eq i64 %3899, -1
  br i1 %3900, label %3901, label %3925

3901:                                             ; preds = %3895
  br i1 true, label %3902, label %3910

3902:                                             ; preds = %3901
  %3903 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3904 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3903, i64 -1
  %3905 = bitcast %union.YYSTYPE* %3904 to %struct.textint*
  %3906 = getelementptr inbounds %struct.textint, %struct.textint* %3905, i32 0, i32 1
  %3907 = load i64, i64* %3906, align 8
  %3908 = add nsw i64 %3907, 0
  %3909 = icmp slt i64 0, %3908
  br i1 %3909, label %4000, label %4016

3910:                                             ; preds = %3901
  %3911 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3912 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3911, i64 -1
  %3913 = bitcast %union.YYSTYPE* %3912 to %struct.textint*
  %3914 = getelementptr inbounds %struct.textint, %struct.textint* %3913, i32 0, i32 1
  %3915 = load i64, i64* %3914, align 8
  %3916 = icmp slt i64 0, %3915
  br i1 %3916, label %3917, label %4016

3917:                                             ; preds = %3910
  %3918 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3919 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3918, i64 -1
  %3920 = bitcast %union.YYSTYPE* %3919 to %struct.textint*
  %3921 = getelementptr inbounds %struct.textint, %struct.textint* %3920, i32 0, i32 1
  %3922 = load i64, i64* %3921, align 8
  %3923 = sub nsw i64 %3922, 1
  %3924 = icmp slt i64 -1, %3923
  br i1 %3924, label %4000, label %4016

3925:                                             ; preds = %3895, %3894, %3893
  %3926 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3927 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3926, i64 0
  %3928 = bitcast %union.YYSTYPE* %3927 to i64*
  %3929 = load i64, i64* %3928, align 8
  %3930 = sdiv i64 0, %3929
  %3931 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3932 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3931, i64 -1
  %3933 = bitcast %union.YYSTYPE* %3932 to %struct.textint*
  %3934 = getelementptr inbounds %struct.textint, %struct.textint* %3933, i32 0, i32 1
  %3935 = load i64, i64* %3934, align 8
  %3936 = icmp slt i64 %3930, %3935
  br i1 %3936, label %4000, label %4016

3937:                                             ; preds = %3836
  %3938 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3939 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3938, i64 0
  %3940 = bitcast %union.YYSTYPE* %3939 to i64*
  %3941 = load i64, i64* %3940, align 8
  %3942 = icmp eq i64 %3941, 0
  br i1 %3942, label %3943, label %3944

3943:                                             ; preds = %3937
  br i1 false, label %4000, label %4016

3944:                                             ; preds = %3937
  %3945 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3946 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3945, i64 -1
  %3947 = bitcast %union.YYSTYPE* %3946 to %struct.textint*
  %3948 = getelementptr inbounds %struct.textint, %struct.textint* %3947, i32 0, i32 1
  %3949 = load i64, i64* %3948, align 8
  %3950 = icmp slt i64 %3949, 0
  br i1 %3950, label %3951, label %3988

3951:                                             ; preds = %3944
  br i1 true, label %3952, label %3953

3952:                                             ; preds = %3951
  br i1 false, label %3954, label %3976

3953:                                             ; preds = %3951
  br i1 false, label %3954, label %3976

3954:                                             ; preds = %3953, %3952
  %3955 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3956 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3955, i64 -1
  %3957 = bitcast %union.YYSTYPE* %3956 to %struct.textint*
  %3958 = getelementptr inbounds %struct.textint, %struct.textint* %3957, i32 0, i32 1
  %3959 = load i64, i64* %3958, align 8
  %3960 = icmp eq i64 %3959, -1
  br i1 %3960, label %3961, label %3976

3961:                                             ; preds = %3954
  br i1 true, label %3962, label %3969

3962:                                             ; preds = %3961
  %3963 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3964 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3963, i64 0
  %3965 = bitcast %union.YYSTYPE* %3964 to i64*
  %3966 = load i64, i64* %3965, align 8
  %3967 = add nsw i64 %3966, 0
  %3968 = icmp slt i64 0, %3967
  br i1 %3968, label %4000, label %4016

3969:                                             ; preds = %3961
  %3970 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3971 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3970, i64 0
  %3972 = bitcast %union.YYSTYPE* %3971 to i64*
  %3973 = load i64, i64* %3972, align 8
  %3974 = sub nsw i64 %3973, 1
  %3975 = icmp slt i64 -1, %3974
  br i1 %3975, label %4000, label %4016

3976:                                             ; preds = %3954, %3953, %3952
  %3977 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3978 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3977, i64 -1
  %3979 = bitcast %union.YYSTYPE* %3978 to %struct.textint*
  %3980 = getelementptr inbounds %struct.textint, %struct.textint* %3979, i32 0, i32 1
  %3981 = load i64, i64* %3980, align 8
  %3982 = sdiv i64 0, %3981
  %3983 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3984 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3983, i64 0
  %3985 = bitcast %union.YYSTYPE* %3984 to i64*
  %3986 = load i64, i64* %3985, align 8
  %3987 = icmp slt i64 %3982, %3986
  br i1 %3987, label %4000, label %4016

3988:                                             ; preds = %3944
  %3989 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3990 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3989, i64 0
  %3991 = bitcast %union.YYSTYPE* %3990 to i64*
  %3992 = load i64, i64* %3991, align 8
  %3993 = sdiv i64 4294967295, %3992
  %3994 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %3995 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %3994, i64 -1
  %3996 = bitcast %union.YYSTYPE* %3995 to %struct.textint*
  %3997 = getelementptr inbounds %struct.textint, %struct.textint* %3996, i32 0, i32 1
  %3998 = load i64, i64* %3997, align 8
  %3999 = icmp slt i64 %3993, %3998
  br i1 %3999, label %4000, label %4016

4000:                                             ; preds = %3988, %3976, %3969, %3962, %3943, %3925, %3917, %3902, %3883, %3850
  %4001 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4002 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4001, i64 -1
  %4003 = bitcast %union.YYSTYPE* %4002 to %struct.textint*
  %4004 = getelementptr inbounds %struct.textint, %struct.textint* %4003, i32 0, i32 1
  %4005 = load i64, i64* %4004, align 8
  %4006 = trunc i64 %4005 to i32
  %4007 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4008 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4007, i64 0
  %4009 = bitcast %union.YYSTYPE* %4008 to i64*
  %4010 = load i64, i64* %4009, align 8
  %4011 = trunc i64 %4010 to i32
  %4012 = mul i32 %4006, %4011
  %4013 = zext i32 %4012 to i64
  %4014 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %4015 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4014, i32 0, i32 2
  store i64 %4013, i64* %4015, align 8
  br i1 true, label %4783, label %4784

4016:                                             ; preds = %3988, %3976, %3969, %3962, %3943, %3925, %3917, %3910, %3902, %3883, %3850
  %4017 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4018 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4017, i64 -1
  %4019 = bitcast %union.YYSTYPE* %4018 to %struct.textint*
  %4020 = getelementptr inbounds %struct.textint, %struct.textint* %4019, i32 0, i32 1
  %4021 = load i64, i64* %4020, align 8
  %4022 = trunc i64 %4021 to i32
  %4023 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4024 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4023, i64 0
  %4025 = bitcast %union.YYSTYPE* %4024 to i64*
  %4026 = load i64, i64* %4025, align 8
  %4027 = trunc i64 %4026 to i32
  %4028 = mul i32 %4022, %4027
  %4029 = zext i32 %4028 to i64
  %4030 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %4031 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4030, i32 0, i32 2
  store i64 %4029, i64* %4031, align 8
  br i1 false, label %4783, label %4784

4032:                                             ; preds = %3638
  br i1 true, label %4033, label %4408

4033:                                             ; preds = %4032
  br i1 true, label %4034, label %4218

4034:                                             ; preds = %4033
  %4035 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4036 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4035, i64 0
  %4037 = bitcast %union.YYSTYPE* %4036 to i64*
  %4038 = load i64, i64* %4037, align 8
  %4039 = icmp slt i64 %4038, 0
  br i1 %4039, label %4040, label %4132

4040:                                             ; preds = %4034
  %4041 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4042 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4041, i64 -1
  %4043 = bitcast %union.YYSTYPE* %4042 to %struct.textint*
  %4044 = getelementptr inbounds %struct.textint, %struct.textint* %4043, i32 0, i32 1
  %4045 = load i64, i64* %4044, align 8
  %4046 = icmp slt i64 %4045, 0
  br i1 %4046, label %4047, label %4090

4047:                                             ; preds = %4040
  br i1 true, label %4048, label %4060

4048:                                             ; preds = %4047
  %4049 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4050 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4049, i64 -1
  %4051 = bitcast %union.YYSTYPE* %4050 to %struct.textint*
  %4052 = getelementptr inbounds %struct.textint, %struct.textint* %4051, i32 0, i32 1
  %4053 = load i64, i64* %4052, align 8
  %4054 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4055 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4054, i64 0
  %4056 = bitcast %union.YYSTYPE* %4055 to i64*
  %4057 = load i64, i64* %4056, align 8
  %4058 = sdiv i64 9223372036854775807, %4057
  %4059 = icmp slt i64 %4053, %4058
  br i1 %4059, label %4192, label %4205

4060:                                             ; preds = %4047
  br i1 true, label %4061, label %4067

4061:                                             ; preds = %4060
  %4062 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4063 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4062, i64 0
  %4064 = bitcast %union.YYSTYPE* %4063 to i64*
  %4065 = load i64, i64* %4064, align 8
  %4066 = icmp slt i64 %4065, -9223372036854775807
  br i1 %4066, label %4073, label %4074

4067:                                             ; preds = %4060
  %4068 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4069 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4068, i64 0
  %4070 = bitcast %union.YYSTYPE* %4069 to i64*
  %4071 = load i64, i64* %4070, align 8
  %4072 = icmp slt i64 0, %4071
  br i1 %4072, label %4073, label %4074

4073:                                             ; preds = %4067, %4061
  br label %4081

4074:                                             ; preds = %4067, %4061
  %4075 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4076 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4075, i64 0
  %4077 = bitcast %union.YYSTYPE* %4076 to i64*
  %4078 = load i64, i64* %4077, align 8
  %4079 = sub nsw i64 0, %4078
  %4080 = sdiv i64 9223372036854775807, %4079
  br label %4081

4081:                                             ; preds = %4074, %4073
  %4082 = phi i64 [ 0, %4073 ], [ %4080, %4074 ]
  %4083 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4084 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4083, i64 -1
  %4085 = bitcast %union.YYSTYPE* %4084 to %struct.textint*
  %4086 = getelementptr inbounds %struct.textint, %struct.textint* %4085, i32 0, i32 1
  %4087 = load i64, i64* %4086, align 8
  %4088 = sub nsw i64 -1, %4087
  %4089 = icmp sle i64 %4082, %4088
  br i1 %4089, label %4192, label %4205

4090:                                             ; preds = %4040
  %4091 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4092 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4091, i64 0
  %4093 = bitcast %union.YYSTYPE* %4092 to i64*
  %4094 = load i64, i64* %4093, align 8
  %4095 = icmp eq i64 %4094, -1
  br i1 %4095, label %4096, label %4120

4096:                                             ; preds = %4090
  br i1 true, label %4097, label %4105

4097:                                             ; preds = %4096
  %4098 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4099 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4098, i64 -1
  %4100 = bitcast %union.YYSTYPE* %4099 to %struct.textint*
  %4101 = getelementptr inbounds %struct.textint, %struct.textint* %4100, i32 0, i32 1
  %4102 = load i64, i64* %4101, align 8
  %4103 = add nsw i64 %4102, -9223372036854775808
  %4104 = icmp slt i64 0, %4103
  br i1 %4104, label %4192, label %4205

4105:                                             ; preds = %4096
  %4106 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4107 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4106, i64 -1
  %4108 = bitcast %union.YYSTYPE* %4107 to %struct.textint*
  %4109 = getelementptr inbounds %struct.textint, %struct.textint* %4108, i32 0, i32 1
  %4110 = load i64, i64* %4109, align 8
  %4111 = icmp slt i64 0, %4110
  br i1 %4111, label %4112, label %4205

4112:                                             ; preds = %4105
  %4113 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4114 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4113, i64 -1
  %4115 = bitcast %union.YYSTYPE* %4114 to %struct.textint*
  %4116 = getelementptr inbounds %struct.textint, %struct.textint* %4115, i32 0, i32 1
  %4117 = load i64, i64* %4116, align 8
  %4118 = sub nsw i64 %4117, 1
  %4119 = icmp slt i64 9223372036854775807, %4118
  br i1 %4119, label %4192, label %4205

4120:                                             ; preds = %4090
  %4121 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4122 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4121, i64 0
  %4123 = bitcast %union.YYSTYPE* %4122 to i64*
  %4124 = load i64, i64* %4123, align 8
  %4125 = sdiv i64 -9223372036854775808, %4124
  %4126 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4127 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4126, i64 -1
  %4128 = bitcast %union.YYSTYPE* %4127 to %struct.textint*
  %4129 = getelementptr inbounds %struct.textint, %struct.textint* %4128, i32 0, i32 1
  %4130 = load i64, i64* %4129, align 8
  %4131 = icmp slt i64 %4125, %4130
  br i1 %4131, label %4192, label %4205

4132:                                             ; preds = %4034
  %4133 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4134 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4133, i64 0
  %4135 = bitcast %union.YYSTYPE* %4134 to i64*
  %4136 = load i64, i64* %4135, align 8
  %4137 = icmp eq i64 %4136, 0
  br i1 %4137, label %4138, label %4139

4138:                                             ; preds = %4132
  br i1 false, label %4192, label %4205

4139:                                             ; preds = %4132
  %4140 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4141 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4140, i64 -1
  %4142 = bitcast %union.YYSTYPE* %4141 to %struct.textint*
  %4143 = getelementptr inbounds %struct.textint, %struct.textint* %4142, i32 0, i32 1
  %4144 = load i64, i64* %4143, align 8
  %4145 = icmp slt i64 %4144, 0
  br i1 %4145, label %4146, label %4180

4146:                                             ; preds = %4139
  %4147 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4148 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4147, i64 -1
  %4149 = bitcast %union.YYSTYPE* %4148 to %struct.textint*
  %4150 = getelementptr inbounds %struct.textint, %struct.textint* %4149, i32 0, i32 1
  %4151 = load i64, i64* %4150, align 8
  %4152 = icmp eq i64 %4151, -1
  br i1 %4152, label %4153, label %4168

4153:                                             ; preds = %4146
  br i1 true, label %4154, label %4161

4154:                                             ; preds = %4153
  %4155 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4156 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4155, i64 0
  %4157 = bitcast %union.YYSTYPE* %4156 to i64*
  %4158 = load i64, i64* %4157, align 8
  %4159 = add nsw i64 %4158, -9223372036854775808
  %4160 = icmp slt i64 0, %4159
  br i1 %4160, label %4192, label %4205

4161:                                             ; preds = %4153
  %4162 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4163 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4162, i64 0
  %4164 = bitcast %union.YYSTYPE* %4163 to i64*
  %4165 = load i64, i64* %4164, align 8
  %4166 = sub nsw i64 %4165, 1
  %4167 = icmp slt i64 9223372036854775807, %4166
  br i1 %4167, label %4192, label %4205

4168:                                             ; preds = %4146
  %4169 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4170 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4169, i64 -1
  %4171 = bitcast %union.YYSTYPE* %4170 to %struct.textint*
  %4172 = getelementptr inbounds %struct.textint, %struct.textint* %4171, i32 0, i32 1
  %4173 = load i64, i64* %4172, align 8
  %4174 = sdiv i64 -9223372036854775808, %4173
  %4175 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4176 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4175, i64 0
  %4177 = bitcast %union.YYSTYPE* %4176 to i64*
  %4178 = load i64, i64* %4177, align 8
  %4179 = icmp slt i64 %4174, %4178
  br i1 %4179, label %4192, label %4205

4180:                                             ; preds = %4139
  %4181 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4182 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4181, i64 0
  %4183 = bitcast %union.YYSTYPE* %4182 to i64*
  %4184 = load i64, i64* %4183, align 8
  %4185 = sdiv i64 9223372036854775807, %4184
  %4186 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4187 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4186, i64 -1
  %4188 = bitcast %union.YYSTYPE* %4187 to %struct.textint*
  %4189 = getelementptr inbounds %struct.textint, %struct.textint* %4188, i32 0, i32 1
  %4190 = load i64, i64* %4189, align 8
  %4191 = icmp slt i64 %4185, %4190
  br i1 %4191, label %4192, label %4205

4192:                                             ; preds = %4180, %4168, %4161, %4154, %4138, %4120, %4112, %4097, %4081, %4048
  %4193 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4194 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4193, i64 -1
  %4195 = bitcast %union.YYSTYPE* %4194 to %struct.textint*
  %4196 = getelementptr inbounds %struct.textint, %struct.textint* %4195, i32 0, i32 1
  %4197 = load i64, i64* %4196, align 8
  %4198 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4199 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4198, i64 0
  %4200 = bitcast %union.YYSTYPE* %4199 to i64*
  %4201 = load i64, i64* %4200, align 8
  %4202 = mul i64 %4197, %4201
  %4203 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %4204 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4203, i32 0, i32 2
  store i64 %4202, i64* %4204, align 8
  br i1 true, label %4783, label %4784

4205:                                             ; preds = %4180, %4168, %4161, %4154, %4138, %4120, %4112, %4105, %4097, %4081, %4048
  %4206 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4207 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4206, i64 -1
  %4208 = bitcast %union.YYSTYPE* %4207 to %struct.textint*
  %4209 = getelementptr inbounds %struct.textint, %struct.textint* %4208, i32 0, i32 1
  %4210 = load i64, i64* %4209, align 8
  %4211 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4212 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4211, i64 0
  %4213 = bitcast %union.YYSTYPE* %4212 to i64*
  %4214 = load i64, i64* %4213, align 8
  %4215 = mul i64 %4210, %4214
  %4216 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %4217 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4216, i32 0, i32 2
  store i64 %4215, i64* %4217, align 8
  br i1 false, label %4783, label %4784

4218:                                             ; preds = %4033
  %4219 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4220 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4219, i64 0
  %4221 = bitcast %union.YYSTYPE* %4220 to i64*
  %4222 = load i64, i64* %4221, align 8
  %4223 = icmp slt i64 %4222, 0
  br i1 %4223, label %4224, label %4319

4224:                                             ; preds = %4218
  %4225 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4226 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4225, i64 -1
  %4227 = bitcast %union.YYSTYPE* %4226 to %struct.textint*
  %4228 = getelementptr inbounds %struct.textint, %struct.textint* %4227, i32 0, i32 1
  %4229 = load i64, i64* %4228, align 8
  %4230 = icmp slt i64 %4229, 0
  br i1 %4230, label %4231, label %4274

4231:                                             ; preds = %4224
  br i1 false, label %4232, label %4244

4232:                                             ; preds = %4231
  %4233 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4234 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4233, i64 -1
  %4235 = bitcast %union.YYSTYPE* %4234 to %struct.textint*
  %4236 = getelementptr inbounds %struct.textint, %struct.textint* %4235, i32 0, i32 1
  %4237 = load i64, i64* %4236, align 8
  %4238 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4239 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4238, i64 0
  %4240 = bitcast %union.YYSTYPE* %4239 to i64*
  %4241 = load i64, i64* %4240, align 8
  %4242 = udiv i64 -1, %4241
  %4243 = icmp ult i64 %4237, %4242
  br i1 %4243, label %4382, label %4395

4244:                                             ; preds = %4231
  br i1 true, label %4245, label %4251

4245:                                             ; preds = %4244
  %4246 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4247 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4246, i64 0
  %4248 = bitcast %union.YYSTYPE* %4247 to i64*
  %4249 = load i64, i64* %4248, align 8
  %4250 = icmp slt i64 %4249, -9223372036854775807
  br i1 %4250, label %4257, label %4258

4251:                                             ; preds = %4244
  %4252 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4253 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4252, i64 0
  %4254 = bitcast %union.YYSTYPE* %4253 to i64*
  %4255 = load i64, i64* %4254, align 8
  %4256 = icmp slt i64 0, %4255
  br i1 %4256, label %4257, label %4258

4257:                                             ; preds = %4251, %4245
  br label %4265

4258:                                             ; preds = %4251, %4245
  %4259 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4260 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4259, i64 0
  %4261 = bitcast %union.YYSTYPE* %4260 to i64*
  %4262 = load i64, i64* %4261, align 8
  %4263 = sub nsw i64 0, %4262
  %4264 = udiv i64 -1, %4263
  br label %4265

4265:                                             ; preds = %4258, %4257
  %4266 = phi i64 [ 1, %4257 ], [ %4264, %4258 ]
  %4267 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4268 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4267, i64 -1
  %4269 = bitcast %union.YYSTYPE* %4268 to %struct.textint*
  %4270 = getelementptr inbounds %struct.textint, %struct.textint* %4269, i32 0, i32 1
  %4271 = load i64, i64* %4270, align 8
  %4272 = sub nsw i64 -1, %4271
  %4273 = icmp ule i64 %4266, %4272
  br i1 %4273, label %4382, label %4395

4274:                                             ; preds = %4224
  br i1 true, label %4275, label %4276

4275:                                             ; preds = %4274
  br i1 false, label %4277, label %4307

4276:                                             ; preds = %4274
  br i1 false, label %4277, label %4307

4277:                                             ; preds = %4276, %4275
  %4278 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4279 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4278, i64 0
  %4280 = bitcast %union.YYSTYPE* %4279 to i64*
  %4281 = load i64, i64* %4280, align 8
  %4282 = icmp eq i64 %4281, -1
  br i1 %4282, label %4283, label %4307

4283:                                             ; preds = %4277
  br i1 true, label %4284, label %4292

4284:                                             ; preds = %4283
  %4285 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4286 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4285, i64 -1
  %4287 = bitcast %union.YYSTYPE* %4286 to %struct.textint*
  %4288 = getelementptr inbounds %struct.textint, %struct.textint* %4287, i32 0, i32 1
  %4289 = load i64, i64* %4288, align 8
  %4290 = add nsw i64 %4289, 0
  %4291 = icmp slt i64 0, %4290
  br i1 %4291, label %4382, label %4395

4292:                                             ; preds = %4283
  %4293 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4294 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4293, i64 -1
  %4295 = bitcast %union.YYSTYPE* %4294 to %struct.textint*
  %4296 = getelementptr inbounds %struct.textint, %struct.textint* %4295, i32 0, i32 1
  %4297 = load i64, i64* %4296, align 8
  %4298 = icmp slt i64 0, %4297
  br i1 %4298, label %4299, label %4395

4299:                                             ; preds = %4292
  %4300 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4301 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4300, i64 -1
  %4302 = bitcast %union.YYSTYPE* %4301 to %struct.textint*
  %4303 = getelementptr inbounds %struct.textint, %struct.textint* %4302, i32 0, i32 1
  %4304 = load i64, i64* %4303, align 8
  %4305 = sub nsw i64 %4304, 1
  %4306 = icmp slt i64 -1, %4305
  br i1 %4306, label %4382, label %4395

4307:                                             ; preds = %4277, %4276, %4275
  %4308 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4309 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4308, i64 0
  %4310 = bitcast %union.YYSTYPE* %4309 to i64*
  %4311 = load i64, i64* %4310, align 8
  %4312 = sdiv i64 0, %4311
  %4313 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4314 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4313, i64 -1
  %4315 = bitcast %union.YYSTYPE* %4314 to %struct.textint*
  %4316 = getelementptr inbounds %struct.textint, %struct.textint* %4315, i32 0, i32 1
  %4317 = load i64, i64* %4316, align 8
  %4318 = icmp slt i64 %4312, %4317
  br i1 %4318, label %4382, label %4395

4319:                                             ; preds = %4218
  %4320 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4321 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4320, i64 0
  %4322 = bitcast %union.YYSTYPE* %4321 to i64*
  %4323 = load i64, i64* %4322, align 8
  %4324 = icmp eq i64 %4323, 0
  br i1 %4324, label %4325, label %4326

4325:                                             ; preds = %4319
  br i1 false, label %4382, label %4395

4326:                                             ; preds = %4319
  %4327 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4328 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4327, i64 -1
  %4329 = bitcast %union.YYSTYPE* %4328 to %struct.textint*
  %4330 = getelementptr inbounds %struct.textint, %struct.textint* %4329, i32 0, i32 1
  %4331 = load i64, i64* %4330, align 8
  %4332 = icmp slt i64 %4331, 0
  br i1 %4332, label %4333, label %4370

4333:                                             ; preds = %4326
  br i1 true, label %4334, label %4335

4334:                                             ; preds = %4333
  br i1 false, label %4336, label %4358

4335:                                             ; preds = %4333
  br i1 false, label %4336, label %4358

4336:                                             ; preds = %4335, %4334
  %4337 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4338 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4337, i64 -1
  %4339 = bitcast %union.YYSTYPE* %4338 to %struct.textint*
  %4340 = getelementptr inbounds %struct.textint, %struct.textint* %4339, i32 0, i32 1
  %4341 = load i64, i64* %4340, align 8
  %4342 = icmp eq i64 %4341, -1
  br i1 %4342, label %4343, label %4358

4343:                                             ; preds = %4336
  br i1 true, label %4344, label %4351

4344:                                             ; preds = %4343
  %4345 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4346 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4345, i64 0
  %4347 = bitcast %union.YYSTYPE* %4346 to i64*
  %4348 = load i64, i64* %4347, align 8
  %4349 = add nsw i64 %4348, 0
  %4350 = icmp slt i64 0, %4349
  br i1 %4350, label %4382, label %4395

4351:                                             ; preds = %4343
  %4352 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4353 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4352, i64 0
  %4354 = bitcast %union.YYSTYPE* %4353 to i64*
  %4355 = load i64, i64* %4354, align 8
  %4356 = sub nsw i64 %4355, 1
  %4357 = icmp slt i64 -1, %4356
  br i1 %4357, label %4382, label %4395

4358:                                             ; preds = %4336, %4335, %4334
  %4359 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4360 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4359, i64 -1
  %4361 = bitcast %union.YYSTYPE* %4360 to %struct.textint*
  %4362 = getelementptr inbounds %struct.textint, %struct.textint* %4361, i32 0, i32 1
  %4363 = load i64, i64* %4362, align 8
  %4364 = sdiv i64 0, %4363
  %4365 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4366 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4365, i64 0
  %4367 = bitcast %union.YYSTYPE* %4366 to i64*
  %4368 = load i64, i64* %4367, align 8
  %4369 = icmp slt i64 %4364, %4368
  br i1 %4369, label %4382, label %4395

4370:                                             ; preds = %4326
  %4371 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4372 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4371, i64 0
  %4373 = bitcast %union.YYSTYPE* %4372 to i64*
  %4374 = load i64, i64* %4373, align 8
  %4375 = udiv i64 -1, %4374
  %4376 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4377 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4376, i64 -1
  %4378 = bitcast %union.YYSTYPE* %4377 to %struct.textint*
  %4379 = getelementptr inbounds %struct.textint, %struct.textint* %4378, i32 0, i32 1
  %4380 = load i64, i64* %4379, align 8
  %4381 = icmp ult i64 %4375, %4380
  br i1 %4381, label %4382, label %4395

4382:                                             ; preds = %4370, %4358, %4351, %4344, %4325, %4307, %4299, %4284, %4265, %4232
  %4383 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4384 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4383, i64 -1
  %4385 = bitcast %union.YYSTYPE* %4384 to %struct.textint*
  %4386 = getelementptr inbounds %struct.textint, %struct.textint* %4385, i32 0, i32 1
  %4387 = load i64, i64* %4386, align 8
  %4388 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4389 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4388, i64 0
  %4390 = bitcast %union.YYSTYPE* %4389 to i64*
  %4391 = load i64, i64* %4390, align 8
  %4392 = mul i64 %4387, %4391
  %4393 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %4394 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4393, i32 0, i32 2
  store i64 %4392, i64* %4394, align 8
  br i1 true, label %4783, label %4784

4395:                                             ; preds = %4370, %4358, %4351, %4344, %4325, %4307, %4299, %4292, %4284, %4265, %4232
  %4396 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4397 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4396, i64 -1
  %4398 = bitcast %union.YYSTYPE* %4397 to %struct.textint*
  %4399 = getelementptr inbounds %struct.textint, %struct.textint* %4398, i32 0, i32 1
  %4400 = load i64, i64* %4399, align 8
  %4401 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4402 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4401, i64 0
  %4403 = bitcast %union.YYSTYPE* %4402 to i64*
  %4404 = load i64, i64* %4403, align 8
  %4405 = mul i64 %4400, %4404
  %4406 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %4407 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4406, i32 0, i32 2
  store i64 %4405, i64* %4407, align 8
  br i1 false, label %4783, label %4784

4408:                                             ; preds = %4032
  br i1 true, label %4409, label %4593

4409:                                             ; preds = %4408
  %4410 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4411 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4410, i64 0
  %4412 = bitcast %union.YYSTYPE* %4411 to i64*
  %4413 = load i64, i64* %4412, align 8
  %4414 = icmp slt i64 %4413, 0
  br i1 %4414, label %4415, label %4507

4415:                                             ; preds = %4409
  %4416 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4417 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4416, i64 -1
  %4418 = bitcast %union.YYSTYPE* %4417 to %struct.textint*
  %4419 = getelementptr inbounds %struct.textint, %struct.textint* %4418, i32 0, i32 1
  %4420 = load i64, i64* %4419, align 8
  %4421 = icmp slt i64 %4420, 0
  br i1 %4421, label %4422, label %4465

4422:                                             ; preds = %4415
  br i1 true, label %4423, label %4435

4423:                                             ; preds = %4422
  %4424 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4425 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4424, i64 -1
  %4426 = bitcast %union.YYSTYPE* %4425 to %struct.textint*
  %4427 = getelementptr inbounds %struct.textint, %struct.textint* %4426, i32 0, i32 1
  %4428 = load i64, i64* %4427, align 8
  %4429 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4430 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4429, i64 0
  %4431 = bitcast %union.YYSTYPE* %4430 to i64*
  %4432 = load i64, i64* %4431, align 8
  %4433 = sdiv i64 9223372036854775807, %4432
  %4434 = icmp slt i64 %4428, %4433
  br i1 %4434, label %4567, label %4580

4435:                                             ; preds = %4422
  br i1 true, label %4436, label %4442

4436:                                             ; preds = %4435
  %4437 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4438 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4437, i64 0
  %4439 = bitcast %union.YYSTYPE* %4438 to i64*
  %4440 = load i64, i64* %4439, align 8
  %4441 = icmp slt i64 %4440, -9223372036854775807
  br i1 %4441, label %4448, label %4449

4442:                                             ; preds = %4435
  %4443 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4444 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4443, i64 0
  %4445 = bitcast %union.YYSTYPE* %4444 to i64*
  %4446 = load i64, i64* %4445, align 8
  %4447 = icmp slt i64 0, %4446
  br i1 %4447, label %4448, label %4449

4448:                                             ; preds = %4442, %4436
  br label %4456

4449:                                             ; preds = %4442, %4436
  %4450 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4451 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4450, i64 0
  %4452 = bitcast %union.YYSTYPE* %4451 to i64*
  %4453 = load i64, i64* %4452, align 8
  %4454 = sub nsw i64 0, %4453
  %4455 = sdiv i64 9223372036854775807, %4454
  br label %4456

4456:                                             ; preds = %4449, %4448
  %4457 = phi i64 [ 0, %4448 ], [ %4455, %4449 ]
  %4458 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4459 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4458, i64 -1
  %4460 = bitcast %union.YYSTYPE* %4459 to %struct.textint*
  %4461 = getelementptr inbounds %struct.textint, %struct.textint* %4460, i32 0, i32 1
  %4462 = load i64, i64* %4461, align 8
  %4463 = sub nsw i64 -1, %4462
  %4464 = icmp sle i64 %4457, %4463
  br i1 %4464, label %4567, label %4580

4465:                                             ; preds = %4415
  %4466 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4467 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4466, i64 0
  %4468 = bitcast %union.YYSTYPE* %4467 to i64*
  %4469 = load i64, i64* %4468, align 8
  %4470 = icmp eq i64 %4469, -1
  br i1 %4470, label %4471, label %4495

4471:                                             ; preds = %4465
  br i1 true, label %4472, label %4480

4472:                                             ; preds = %4471
  %4473 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4474 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4473, i64 -1
  %4475 = bitcast %union.YYSTYPE* %4474 to %struct.textint*
  %4476 = getelementptr inbounds %struct.textint, %struct.textint* %4475, i32 0, i32 1
  %4477 = load i64, i64* %4476, align 8
  %4478 = add nsw i64 %4477, -9223372036854775808
  %4479 = icmp slt i64 0, %4478
  br i1 %4479, label %4567, label %4580

4480:                                             ; preds = %4471
  %4481 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4482 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4481, i64 -1
  %4483 = bitcast %union.YYSTYPE* %4482 to %struct.textint*
  %4484 = getelementptr inbounds %struct.textint, %struct.textint* %4483, i32 0, i32 1
  %4485 = load i64, i64* %4484, align 8
  %4486 = icmp slt i64 0, %4485
  br i1 %4486, label %4487, label %4580

4487:                                             ; preds = %4480
  %4488 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4489 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4488, i64 -1
  %4490 = bitcast %union.YYSTYPE* %4489 to %struct.textint*
  %4491 = getelementptr inbounds %struct.textint, %struct.textint* %4490, i32 0, i32 1
  %4492 = load i64, i64* %4491, align 8
  %4493 = sub nsw i64 %4492, 1
  %4494 = icmp slt i64 9223372036854775807, %4493
  br i1 %4494, label %4567, label %4580

4495:                                             ; preds = %4465
  %4496 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4497 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4496, i64 0
  %4498 = bitcast %union.YYSTYPE* %4497 to i64*
  %4499 = load i64, i64* %4498, align 8
  %4500 = sdiv i64 -9223372036854775808, %4499
  %4501 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4502 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4501, i64 -1
  %4503 = bitcast %union.YYSTYPE* %4502 to %struct.textint*
  %4504 = getelementptr inbounds %struct.textint, %struct.textint* %4503, i32 0, i32 1
  %4505 = load i64, i64* %4504, align 8
  %4506 = icmp slt i64 %4500, %4505
  br i1 %4506, label %4567, label %4580

4507:                                             ; preds = %4409
  %4508 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4509 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4508, i64 0
  %4510 = bitcast %union.YYSTYPE* %4509 to i64*
  %4511 = load i64, i64* %4510, align 8
  %4512 = icmp eq i64 %4511, 0
  br i1 %4512, label %4513, label %4514

4513:                                             ; preds = %4507
  br i1 false, label %4567, label %4580

4514:                                             ; preds = %4507
  %4515 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4516 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4515, i64 -1
  %4517 = bitcast %union.YYSTYPE* %4516 to %struct.textint*
  %4518 = getelementptr inbounds %struct.textint, %struct.textint* %4517, i32 0, i32 1
  %4519 = load i64, i64* %4518, align 8
  %4520 = icmp slt i64 %4519, 0
  br i1 %4520, label %4521, label %4555

4521:                                             ; preds = %4514
  %4522 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4523 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4522, i64 -1
  %4524 = bitcast %union.YYSTYPE* %4523 to %struct.textint*
  %4525 = getelementptr inbounds %struct.textint, %struct.textint* %4524, i32 0, i32 1
  %4526 = load i64, i64* %4525, align 8
  %4527 = icmp eq i64 %4526, -1
  br i1 %4527, label %4528, label %4543

4528:                                             ; preds = %4521
  br i1 true, label %4529, label %4536

4529:                                             ; preds = %4528
  %4530 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4531 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4530, i64 0
  %4532 = bitcast %union.YYSTYPE* %4531 to i64*
  %4533 = load i64, i64* %4532, align 8
  %4534 = add nsw i64 %4533, -9223372036854775808
  %4535 = icmp slt i64 0, %4534
  br i1 %4535, label %4567, label %4580

4536:                                             ; preds = %4528
  %4537 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4538 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4537, i64 0
  %4539 = bitcast %union.YYSTYPE* %4538 to i64*
  %4540 = load i64, i64* %4539, align 8
  %4541 = sub nsw i64 %4540, 1
  %4542 = icmp slt i64 9223372036854775807, %4541
  br i1 %4542, label %4567, label %4580

4543:                                             ; preds = %4521
  %4544 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4545 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4544, i64 -1
  %4546 = bitcast %union.YYSTYPE* %4545 to %struct.textint*
  %4547 = getelementptr inbounds %struct.textint, %struct.textint* %4546, i32 0, i32 1
  %4548 = load i64, i64* %4547, align 8
  %4549 = sdiv i64 -9223372036854775808, %4548
  %4550 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4551 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4550, i64 0
  %4552 = bitcast %union.YYSTYPE* %4551 to i64*
  %4553 = load i64, i64* %4552, align 8
  %4554 = icmp slt i64 %4549, %4553
  br i1 %4554, label %4567, label %4580

4555:                                             ; preds = %4514
  %4556 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4557 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4556, i64 0
  %4558 = bitcast %union.YYSTYPE* %4557 to i64*
  %4559 = load i64, i64* %4558, align 8
  %4560 = sdiv i64 9223372036854775807, %4559
  %4561 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4562 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4561, i64 -1
  %4563 = bitcast %union.YYSTYPE* %4562 to %struct.textint*
  %4564 = getelementptr inbounds %struct.textint, %struct.textint* %4563, i32 0, i32 1
  %4565 = load i64, i64* %4564, align 8
  %4566 = icmp slt i64 %4560, %4565
  br i1 %4566, label %4567, label %4580

4567:                                             ; preds = %4555, %4543, %4536, %4529, %4513, %4495, %4487, %4472, %4456, %4423
  %4568 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4569 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4568, i64 -1
  %4570 = bitcast %union.YYSTYPE* %4569 to %struct.textint*
  %4571 = getelementptr inbounds %struct.textint, %struct.textint* %4570, i32 0, i32 1
  %4572 = load i64, i64* %4571, align 8
  %4573 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4574 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4573, i64 0
  %4575 = bitcast %union.YYSTYPE* %4574 to i64*
  %4576 = load i64, i64* %4575, align 8
  %4577 = mul i64 %4572, %4576
  %4578 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %4579 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4578, i32 0, i32 2
  store i64 %4577, i64* %4579, align 8
  br i1 true, label %4783, label %4784

4580:                                             ; preds = %4555, %4543, %4536, %4529, %4513, %4495, %4487, %4480, %4472, %4456, %4423
  %4581 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4582 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4581, i64 -1
  %4583 = bitcast %union.YYSTYPE* %4582 to %struct.textint*
  %4584 = getelementptr inbounds %struct.textint, %struct.textint* %4583, i32 0, i32 1
  %4585 = load i64, i64* %4584, align 8
  %4586 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4587 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4586, i64 0
  %4588 = bitcast %union.YYSTYPE* %4587 to i64*
  %4589 = load i64, i64* %4588, align 8
  %4590 = mul i64 %4585, %4589
  %4591 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %4592 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4591, i32 0, i32 2
  store i64 %4590, i64* %4592, align 8
  br i1 false, label %4783, label %4784

4593:                                             ; preds = %4408
  %4594 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4595 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4594, i64 0
  %4596 = bitcast %union.YYSTYPE* %4595 to i64*
  %4597 = load i64, i64* %4596, align 8
  %4598 = icmp slt i64 %4597, 0
  br i1 %4598, label %4599, label %4694

4599:                                             ; preds = %4593
  %4600 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4601 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4600, i64 -1
  %4602 = bitcast %union.YYSTYPE* %4601 to %struct.textint*
  %4603 = getelementptr inbounds %struct.textint, %struct.textint* %4602, i32 0, i32 1
  %4604 = load i64, i64* %4603, align 8
  %4605 = icmp slt i64 %4604, 0
  br i1 %4605, label %4606, label %4649

4606:                                             ; preds = %4599
  br i1 false, label %4607, label %4619

4607:                                             ; preds = %4606
  %4608 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4609 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4608, i64 -1
  %4610 = bitcast %union.YYSTYPE* %4609 to %struct.textint*
  %4611 = getelementptr inbounds %struct.textint, %struct.textint* %4610, i32 0, i32 1
  %4612 = load i64, i64* %4611, align 8
  %4613 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4614 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4613, i64 0
  %4615 = bitcast %union.YYSTYPE* %4614 to i64*
  %4616 = load i64, i64* %4615, align 8
  %4617 = udiv i64 -1, %4616
  %4618 = icmp ult i64 %4612, %4617
  br i1 %4618, label %4757, label %4770

4619:                                             ; preds = %4606
  br i1 true, label %4620, label %4626

4620:                                             ; preds = %4619
  %4621 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4622 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4621, i64 0
  %4623 = bitcast %union.YYSTYPE* %4622 to i64*
  %4624 = load i64, i64* %4623, align 8
  %4625 = icmp slt i64 %4624, -9223372036854775807
  br i1 %4625, label %4632, label %4633

4626:                                             ; preds = %4619
  %4627 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4628 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4627, i64 0
  %4629 = bitcast %union.YYSTYPE* %4628 to i64*
  %4630 = load i64, i64* %4629, align 8
  %4631 = icmp slt i64 0, %4630
  br i1 %4631, label %4632, label %4633

4632:                                             ; preds = %4626, %4620
  br label %4640

4633:                                             ; preds = %4626, %4620
  %4634 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4635 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4634, i64 0
  %4636 = bitcast %union.YYSTYPE* %4635 to i64*
  %4637 = load i64, i64* %4636, align 8
  %4638 = sub nsw i64 0, %4637
  %4639 = udiv i64 -1, %4638
  br label %4640

4640:                                             ; preds = %4633, %4632
  %4641 = phi i64 [ 1, %4632 ], [ %4639, %4633 ]
  %4642 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4643 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4642, i64 -1
  %4644 = bitcast %union.YYSTYPE* %4643 to %struct.textint*
  %4645 = getelementptr inbounds %struct.textint, %struct.textint* %4644, i32 0, i32 1
  %4646 = load i64, i64* %4645, align 8
  %4647 = sub nsw i64 -1, %4646
  %4648 = icmp ule i64 %4641, %4647
  br i1 %4648, label %4757, label %4770

4649:                                             ; preds = %4599
  br i1 true, label %4650, label %4651

4650:                                             ; preds = %4649
  br i1 false, label %4652, label %4682

4651:                                             ; preds = %4649
  br i1 false, label %4652, label %4682

4652:                                             ; preds = %4651, %4650
  %4653 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4654 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4653, i64 0
  %4655 = bitcast %union.YYSTYPE* %4654 to i64*
  %4656 = load i64, i64* %4655, align 8
  %4657 = icmp eq i64 %4656, -1
  br i1 %4657, label %4658, label %4682

4658:                                             ; preds = %4652
  br i1 true, label %4659, label %4667

4659:                                             ; preds = %4658
  %4660 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4661 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4660, i64 -1
  %4662 = bitcast %union.YYSTYPE* %4661 to %struct.textint*
  %4663 = getelementptr inbounds %struct.textint, %struct.textint* %4662, i32 0, i32 1
  %4664 = load i64, i64* %4663, align 8
  %4665 = add nsw i64 %4664, 0
  %4666 = icmp slt i64 0, %4665
  br i1 %4666, label %4757, label %4770

4667:                                             ; preds = %4658
  %4668 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4669 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4668, i64 -1
  %4670 = bitcast %union.YYSTYPE* %4669 to %struct.textint*
  %4671 = getelementptr inbounds %struct.textint, %struct.textint* %4670, i32 0, i32 1
  %4672 = load i64, i64* %4671, align 8
  %4673 = icmp slt i64 0, %4672
  br i1 %4673, label %4674, label %4770

4674:                                             ; preds = %4667
  %4675 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4676 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4675, i64 -1
  %4677 = bitcast %union.YYSTYPE* %4676 to %struct.textint*
  %4678 = getelementptr inbounds %struct.textint, %struct.textint* %4677, i32 0, i32 1
  %4679 = load i64, i64* %4678, align 8
  %4680 = sub nsw i64 %4679, 1
  %4681 = icmp slt i64 -1, %4680
  br i1 %4681, label %4757, label %4770

4682:                                             ; preds = %4652, %4651, %4650
  %4683 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4684 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4683, i64 0
  %4685 = bitcast %union.YYSTYPE* %4684 to i64*
  %4686 = load i64, i64* %4685, align 8
  %4687 = sdiv i64 0, %4686
  %4688 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4689 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4688, i64 -1
  %4690 = bitcast %union.YYSTYPE* %4689 to %struct.textint*
  %4691 = getelementptr inbounds %struct.textint, %struct.textint* %4690, i32 0, i32 1
  %4692 = load i64, i64* %4691, align 8
  %4693 = icmp slt i64 %4687, %4692
  br i1 %4693, label %4757, label %4770

4694:                                             ; preds = %4593
  %4695 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4696 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4695, i64 0
  %4697 = bitcast %union.YYSTYPE* %4696 to i64*
  %4698 = load i64, i64* %4697, align 8
  %4699 = icmp eq i64 %4698, 0
  br i1 %4699, label %4700, label %4701

4700:                                             ; preds = %4694
  br i1 false, label %4757, label %4770

4701:                                             ; preds = %4694
  %4702 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4703 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4702, i64 -1
  %4704 = bitcast %union.YYSTYPE* %4703 to %struct.textint*
  %4705 = getelementptr inbounds %struct.textint, %struct.textint* %4704, i32 0, i32 1
  %4706 = load i64, i64* %4705, align 8
  %4707 = icmp slt i64 %4706, 0
  br i1 %4707, label %4708, label %4745

4708:                                             ; preds = %4701
  br i1 true, label %4709, label %4710

4709:                                             ; preds = %4708
  br i1 false, label %4711, label %4733

4710:                                             ; preds = %4708
  br i1 false, label %4711, label %4733

4711:                                             ; preds = %4710, %4709
  %4712 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4713 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4712, i64 -1
  %4714 = bitcast %union.YYSTYPE* %4713 to %struct.textint*
  %4715 = getelementptr inbounds %struct.textint, %struct.textint* %4714, i32 0, i32 1
  %4716 = load i64, i64* %4715, align 8
  %4717 = icmp eq i64 %4716, -1
  br i1 %4717, label %4718, label %4733

4718:                                             ; preds = %4711
  br i1 true, label %4719, label %4726

4719:                                             ; preds = %4718
  %4720 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4721 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4720, i64 0
  %4722 = bitcast %union.YYSTYPE* %4721 to i64*
  %4723 = load i64, i64* %4722, align 8
  %4724 = add nsw i64 %4723, 0
  %4725 = icmp slt i64 0, %4724
  br i1 %4725, label %4757, label %4770

4726:                                             ; preds = %4718
  %4727 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4728 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4727, i64 0
  %4729 = bitcast %union.YYSTYPE* %4728 to i64*
  %4730 = load i64, i64* %4729, align 8
  %4731 = sub nsw i64 %4730, 1
  %4732 = icmp slt i64 -1, %4731
  br i1 %4732, label %4757, label %4770

4733:                                             ; preds = %4711, %4710, %4709
  %4734 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4735 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4734, i64 -1
  %4736 = bitcast %union.YYSTYPE* %4735 to %struct.textint*
  %4737 = getelementptr inbounds %struct.textint, %struct.textint* %4736, i32 0, i32 1
  %4738 = load i64, i64* %4737, align 8
  %4739 = sdiv i64 0, %4738
  %4740 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4741 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4740, i64 0
  %4742 = bitcast %union.YYSTYPE* %4741 to i64*
  %4743 = load i64, i64* %4742, align 8
  %4744 = icmp slt i64 %4739, %4743
  br i1 %4744, label %4757, label %4770

4745:                                             ; preds = %4701
  %4746 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4747 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4746, i64 0
  %4748 = bitcast %union.YYSTYPE* %4747 to i64*
  %4749 = load i64, i64* %4748, align 8
  %4750 = udiv i64 -1, %4749
  %4751 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4752 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4751, i64 -1
  %4753 = bitcast %union.YYSTYPE* %4752 to %struct.textint*
  %4754 = getelementptr inbounds %struct.textint, %struct.textint* %4753, i32 0, i32 1
  %4755 = load i64, i64* %4754, align 8
  %4756 = icmp ult i64 %4750, %4755
  br i1 %4756, label %4757, label %4770

4757:                                             ; preds = %4745, %4733, %4726, %4719, %4700, %4682, %4674, %4659, %4640, %4607
  %4758 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4759 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4758, i64 -1
  %4760 = bitcast %union.YYSTYPE* %4759 to %struct.textint*
  %4761 = getelementptr inbounds %struct.textint, %struct.textint* %4760, i32 0, i32 1
  %4762 = load i64, i64* %4761, align 8
  %4763 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4764 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4763, i64 0
  %4765 = bitcast %union.YYSTYPE* %4764 to i64*
  %4766 = load i64, i64* %4765, align 8
  %4767 = mul i64 %4762, %4766
  %4768 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %4769 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4768, i32 0, i32 2
  store i64 %4767, i64* %4769, align 8
  br i1 true, label %4783, label %4784

4770:                                             ; preds = %4745, %4733, %4726, %4719, %4700, %4682, %4674, %4667, %4659, %4640, %4607
  %4771 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4772 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4771, i64 -1
  %4773 = bitcast %union.YYSTYPE* %4772 to %struct.textint*
  %4774 = getelementptr inbounds %struct.textint, %struct.textint* %4773, i32 0, i32 1
  %4775 = load i64, i64* %4774, align 8
  %4776 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4777 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4776, i64 0
  %4778 = bitcast %union.YYSTYPE* %4777 to i64*
  %4779 = load i64, i64* %4778, align 8
  %4780 = mul i64 %4775, %4779
  %4781 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %4782 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4781, i32 0, i32 2
  store i64 %4780, i64* %4782, align 8
  br i1 false, label %4783, label %4784

4783:                                             ; preds = %4770, %4757, %4580, %4567, %4395, %4382, %4205, %4192, %4016, %4000, %3820, %3804, %3621, %3604, %3423, %3406, %3223, %3206, %3025, %3008
  br label %7297

4784:                                             ; preds = %4770, %4757, %4580, %4567, %4395, %4382, %4205, %4192, %4016, %4000, %3820, %3804, %3621, %3604, %3423, %3406, %3223, %3206, %3025, %3008
  br label %7121

4785:                                             ; preds = %245
  %4786 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %4787 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %34, i32 0, i32 0
  store i64 0, i64* %4787, align 8
  %4788 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %34, i32 0, i32 1
  store i64 0, i64* %4788, align 8
  %4789 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %34, i32 0, i32 2
  store i64 0, i64* %4789, align 8
  %4790 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %34, i32 0, i32 3
  store i64 0, i64* %4790, align 8
  %4791 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %34, i32 0, i32 4
  store i64 0, i64* %4791, align 8
  %4792 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %34, i32 0, i32 5
  store i64 0, i64* %4792, align 8
  %4793 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %34, i32 0, i32 6
  store i32 0, i32* %4793, align 8
  %4794 = bitcast %struct.relative_time* %4786 to i8*
  %4795 = bitcast %struct.relative_time* %34 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4794, i8* align 8 %4795, i64 56, i1 false)
  %4796 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4797 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4796, i64 0
  %4798 = bitcast %union.YYSTYPE* %4797 to i64*
  %4799 = load i64, i64* %4798, align 8
  %4800 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %4801 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4800, i32 0, i32 2
  store i64 %4799, i64* %4801, align 8
  br label %7121

4802:                                             ; preds = %245
  %4803 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %4804 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %35, i32 0, i32 0
  store i64 0, i64* %4804, align 8
  %4805 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %35, i32 0, i32 1
  store i64 0, i64* %4805, align 8
  %4806 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %35, i32 0, i32 2
  store i64 0, i64* %4806, align 8
  %4807 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %35, i32 0, i32 3
  store i64 0, i64* %4807, align 8
  %4808 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %35, i32 0, i32 4
  store i64 0, i64* %4808, align 8
  %4809 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %35, i32 0, i32 5
  store i64 0, i64* %4809, align 8
  %4810 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %35, i32 0, i32 6
  store i32 0, i32* %4810, align 8
  %4811 = bitcast %struct.relative_time* %4803 to i8*
  %4812 = bitcast %struct.relative_time* %35 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4811, i8* align 8 %4812, i64 56, i1 false)
  %4813 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4814 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4813, i64 -1
  %4815 = bitcast %union.YYSTYPE* %4814 to i64*
  %4816 = load i64, i64* %4815, align 8
  %4817 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %4818 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4817, i32 0, i32 3
  store i64 %4816, i64* %4818, align 8
  br label %7121

4819:                                             ; preds = %245
  %4820 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %4821 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %36, i32 0, i32 0
  store i64 0, i64* %4821, align 8
  %4822 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %36, i32 0, i32 1
  store i64 0, i64* %4822, align 8
  %4823 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %36, i32 0, i32 2
  store i64 0, i64* %4823, align 8
  %4824 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %36, i32 0, i32 3
  store i64 0, i64* %4824, align 8
  %4825 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %36, i32 0, i32 4
  store i64 0, i64* %4825, align 8
  %4826 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %36, i32 0, i32 5
  store i64 0, i64* %4826, align 8
  %4827 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %36, i32 0, i32 6
  store i32 0, i32* %4827, align 8
  %4828 = bitcast %struct.relative_time* %4820 to i8*
  %4829 = bitcast %struct.relative_time* %36 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4828, i8* align 8 %4829, i64 56, i1 false)
  %4830 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4831 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4830, i64 -1
  %4832 = bitcast %union.YYSTYPE* %4831 to %struct.textint*
  %4833 = getelementptr inbounds %struct.textint, %struct.textint* %4832, i32 0, i32 1
  %4834 = load i64, i64* %4833, align 8
  %4835 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %4836 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4835, i32 0, i32 3
  store i64 %4834, i64* %4836, align 8
  br label %7121

4837:                                             ; preds = %245
  %4838 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %4839 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %37, i32 0, i32 0
  store i64 0, i64* %4839, align 8
  %4840 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %37, i32 0, i32 1
  store i64 0, i64* %4840, align 8
  %4841 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %37, i32 0, i32 2
  store i64 0, i64* %4841, align 8
  %4842 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %37, i32 0, i32 3
  store i64 0, i64* %4842, align 8
  %4843 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %37, i32 0, i32 4
  store i64 0, i64* %4843, align 8
  %4844 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %37, i32 0, i32 5
  store i64 0, i64* %4844, align 8
  %4845 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %37, i32 0, i32 6
  store i32 0, i32* %4845, align 8
  %4846 = bitcast %struct.relative_time* %4838 to i8*
  %4847 = bitcast %struct.relative_time* %37 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4846, i8* align 8 %4847, i64 56, i1 false)
  %4848 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %4849 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4848, i32 0, i32 3
  store i64 1, i64* %4849, align 8
  br label %7121

4850:                                             ; preds = %245
  %4851 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %4852 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %38, i32 0, i32 0
  store i64 0, i64* %4852, align 8
  %4853 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %38, i32 0, i32 1
  store i64 0, i64* %4853, align 8
  %4854 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %38, i32 0, i32 2
  store i64 0, i64* %4854, align 8
  %4855 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %38, i32 0, i32 3
  store i64 0, i64* %4855, align 8
  %4856 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %38, i32 0, i32 4
  store i64 0, i64* %4856, align 8
  %4857 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %38, i32 0, i32 5
  store i64 0, i64* %4857, align 8
  %4858 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %38, i32 0, i32 6
  store i32 0, i32* %4858, align 8
  %4859 = bitcast %struct.relative_time* %4851 to i8*
  %4860 = bitcast %struct.relative_time* %38 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4859, i8* align 8 %4860, i64 56, i1 false)
  %4861 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4862 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4861, i64 -1
  %4863 = bitcast %union.YYSTYPE* %4862 to i64*
  %4864 = load i64, i64* %4863, align 8
  %4865 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %4866 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4865, i32 0, i32 4
  store i64 %4864, i64* %4866, align 8
  br label %7121

4867:                                             ; preds = %245
  %4868 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %4869 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %39, i32 0, i32 0
  store i64 0, i64* %4869, align 8
  %4870 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %39, i32 0, i32 1
  store i64 0, i64* %4870, align 8
  %4871 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %39, i32 0, i32 2
  store i64 0, i64* %4871, align 8
  %4872 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %39, i32 0, i32 3
  store i64 0, i64* %4872, align 8
  %4873 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %39, i32 0, i32 4
  store i64 0, i64* %4873, align 8
  %4874 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %39, i32 0, i32 5
  store i64 0, i64* %4874, align 8
  %4875 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %39, i32 0, i32 6
  store i32 0, i32* %4875, align 8
  %4876 = bitcast %struct.relative_time* %4868 to i8*
  %4877 = bitcast %struct.relative_time* %39 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4876, i8* align 8 %4877, i64 56, i1 false)
  %4878 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4879 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4878, i64 -1
  %4880 = bitcast %union.YYSTYPE* %4879 to %struct.textint*
  %4881 = getelementptr inbounds %struct.textint, %struct.textint* %4880, i32 0, i32 1
  %4882 = load i64, i64* %4881, align 8
  %4883 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %4884 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4883, i32 0, i32 4
  store i64 %4882, i64* %4884, align 8
  br label %7121

4885:                                             ; preds = %245
  %4886 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %4887 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %40, i32 0, i32 0
  store i64 0, i64* %4887, align 8
  %4888 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %40, i32 0, i32 1
  store i64 0, i64* %4888, align 8
  %4889 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %40, i32 0, i32 2
  store i64 0, i64* %4889, align 8
  %4890 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %40, i32 0, i32 3
  store i64 0, i64* %4890, align 8
  %4891 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %40, i32 0, i32 4
  store i64 0, i64* %4891, align 8
  %4892 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %40, i32 0, i32 5
  store i64 0, i64* %4892, align 8
  %4893 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %40, i32 0, i32 6
  store i32 0, i32* %4893, align 8
  %4894 = bitcast %struct.relative_time* %4886 to i8*
  %4895 = bitcast %struct.relative_time* %40 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4894, i8* align 8 %4895, i64 56, i1 false)
  %4896 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %4897 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4896, i32 0, i32 4
  store i64 1, i64* %4897, align 8
  br label %7121

4898:                                             ; preds = %245
  %4899 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %4900 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %41, i32 0, i32 0
  store i64 0, i64* %4900, align 8
  %4901 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %41, i32 0, i32 1
  store i64 0, i64* %4901, align 8
  %4902 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %41, i32 0, i32 2
  store i64 0, i64* %4902, align 8
  %4903 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %41, i32 0, i32 3
  store i64 0, i64* %4903, align 8
  %4904 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %41, i32 0, i32 4
  store i64 0, i64* %4904, align 8
  %4905 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %41, i32 0, i32 5
  store i64 0, i64* %4905, align 8
  %4906 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %41, i32 0, i32 6
  store i32 0, i32* %4906, align 8
  %4907 = bitcast %struct.relative_time* %4899 to i8*
  %4908 = bitcast %struct.relative_time* %41 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4907, i8* align 8 %4908, i64 56, i1 false)
  %4909 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4910 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4909, i64 -1
  %4911 = bitcast %union.YYSTYPE* %4910 to i64*
  %4912 = load i64, i64* %4911, align 8
  %4913 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %4914 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4913, i32 0, i32 5
  store i64 %4912, i64* %4914, align 8
  br label %7121

4915:                                             ; preds = %245
  %4916 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %4917 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %42, i32 0, i32 0
  store i64 0, i64* %4917, align 8
  %4918 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %42, i32 0, i32 1
  store i64 0, i64* %4918, align 8
  %4919 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %42, i32 0, i32 2
  store i64 0, i64* %4919, align 8
  %4920 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %42, i32 0, i32 3
  store i64 0, i64* %4920, align 8
  %4921 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %42, i32 0, i32 4
  store i64 0, i64* %4921, align 8
  %4922 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %42, i32 0, i32 5
  store i64 0, i64* %4922, align 8
  %4923 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %42, i32 0, i32 6
  store i32 0, i32* %4923, align 8
  %4924 = bitcast %struct.relative_time* %4916 to i8*
  %4925 = bitcast %struct.relative_time* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4924, i8* align 8 %4925, i64 56, i1 false)
  %4926 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4927 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4926, i64 -1
  %4928 = bitcast %union.YYSTYPE* %4927 to %struct.textint*
  %4929 = getelementptr inbounds %struct.textint, %struct.textint* %4928, i32 0, i32 1
  %4930 = load i64, i64* %4929, align 8
  %4931 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %4932 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4931, i32 0, i32 5
  store i64 %4930, i64* %4932, align 8
  br label %7121

4933:                                             ; preds = %245
  %4934 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %4935 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %43, i32 0, i32 0
  store i64 0, i64* %4935, align 8
  %4936 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %43, i32 0, i32 1
  store i64 0, i64* %4936, align 8
  %4937 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %43, i32 0, i32 2
  store i64 0, i64* %4937, align 8
  %4938 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %43, i32 0, i32 3
  store i64 0, i64* %4938, align 8
  %4939 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %43, i32 0, i32 4
  store i64 0, i64* %4939, align 8
  %4940 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %43, i32 0, i32 5
  store i64 0, i64* %4940, align 8
  %4941 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %43, i32 0, i32 6
  store i32 0, i32* %4941, align 8
  %4942 = bitcast %struct.relative_time* %4934 to i8*
  %4943 = bitcast %struct.relative_time* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4942, i8* align 8 %4943, i64 56, i1 false)
  %4944 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4945 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4944, i64 -1
  %4946 = bitcast %union.YYSTYPE* %4945 to %struct.timespec*
  %4947 = getelementptr inbounds %struct.timespec, %struct.timespec* %4946, i32 0, i32 0
  %4948 = load i64, i64* %4947, align 8
  %4949 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %4950 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4949, i32 0, i32 5
  store i64 %4948, i64* %4950, align 8
  %4951 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4952 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4951, i64 -1
  %4953 = bitcast %union.YYSTYPE* %4952 to %struct.timespec*
  %4954 = getelementptr inbounds %struct.timespec, %struct.timespec* %4953, i32 0, i32 1
  %4955 = load i64, i64* %4954, align 8
  %4956 = trunc i64 %4955 to i32
  %4957 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %4958 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4957, i32 0, i32 6
  store i32 %4956, i32* %4958, align 8
  br label %7121

4959:                                             ; preds = %245
  %4960 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %4961 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %44, i32 0, i32 0
  store i64 0, i64* %4961, align 8
  %4962 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %44, i32 0, i32 1
  store i64 0, i64* %4962, align 8
  %4963 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %44, i32 0, i32 2
  store i64 0, i64* %4963, align 8
  %4964 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %44, i32 0, i32 3
  store i64 0, i64* %4964, align 8
  %4965 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %44, i32 0, i32 4
  store i64 0, i64* %4965, align 8
  %4966 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %44, i32 0, i32 5
  store i64 0, i64* %4966, align 8
  %4967 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %44, i32 0, i32 6
  store i32 0, i32* %4967, align 8
  %4968 = bitcast %struct.relative_time* %4960 to i8*
  %4969 = bitcast %struct.relative_time* %44 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4968, i8* align 8 %4969, i64 56, i1 false)
  %4970 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4971 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4970, i64 -1
  %4972 = bitcast %union.YYSTYPE* %4971 to %struct.timespec*
  %4973 = getelementptr inbounds %struct.timespec, %struct.timespec* %4972, i32 0, i32 0
  %4974 = load i64, i64* %4973, align 8
  %4975 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %4976 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4975, i32 0, i32 5
  store i64 %4974, i64* %4976, align 8
  %4977 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %4978 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %4977, i64 -1
  %4979 = bitcast %union.YYSTYPE* %4978 to %struct.timespec*
  %4980 = getelementptr inbounds %struct.timespec, %struct.timespec* %4979, i32 0, i32 1
  %4981 = load i64, i64* %4980, align 8
  %4982 = trunc i64 %4981 to i32
  %4983 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %4984 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4983, i32 0, i32 6
  store i32 %4982, i32* %4984, align 8
  br label %7121

4985:                                             ; preds = %245
  %4986 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %4987 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %45, i32 0, i32 0
  store i64 0, i64* %4987, align 8
  %4988 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %45, i32 0, i32 1
  store i64 0, i64* %4988, align 8
  %4989 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %45, i32 0, i32 2
  store i64 0, i64* %4989, align 8
  %4990 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %45, i32 0, i32 3
  store i64 0, i64* %4990, align 8
  %4991 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %45, i32 0, i32 4
  store i64 0, i64* %4991, align 8
  %4992 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %45, i32 0, i32 5
  store i64 0, i64* %4992, align 8
  %4993 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %45, i32 0, i32 6
  store i32 0, i32* %4993, align 8
  %4994 = bitcast %struct.relative_time* %4986 to i8*
  %4995 = bitcast %struct.relative_time* %45 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4994, i8* align 8 %4995, i64 56, i1 false)
  %4996 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %4997 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4996, i32 0, i32 5
  store i64 1, i64* %4997, align 8
  br label %7121

4998:                                             ; preds = %245
  %4999 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %5000 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %46, i32 0, i32 0
  store i64 0, i64* %5000, align 8
  %5001 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %46, i32 0, i32 1
  store i64 0, i64* %5001, align 8
  %5002 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %46, i32 0, i32 2
  store i64 0, i64* %5002, align 8
  %5003 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %46, i32 0, i32 3
  store i64 0, i64* %5003, align 8
  %5004 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %46, i32 0, i32 4
  store i64 0, i64* %5004, align 8
  %5005 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %46, i32 0, i32 5
  store i64 0, i64* %5005, align 8
  %5006 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %46, i32 0, i32 6
  store i32 0, i32* %5006, align 8
  %5007 = bitcast %struct.relative_time* %4999 to i8*
  %5008 = bitcast %struct.relative_time* %46 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5007, i8* align 8 %5008, i64 56, i1 false)
  %5009 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5010 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5009, i64 -1
  %5011 = bitcast %union.YYSTYPE* %5010 to %struct.textint*
  %5012 = getelementptr inbounds %struct.textint, %struct.textint* %5011, i32 0, i32 1
  %5013 = load i64, i64* %5012, align 8
  %5014 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %5015 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %5014, i32 0, i32 0
  store i64 %5013, i64* %5015, align 8
  br label %7121

5016:                                             ; preds = %245
  %5017 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %5018 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %47, i32 0, i32 0
  store i64 0, i64* %5018, align 8
  %5019 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %47, i32 0, i32 1
  store i64 0, i64* %5019, align 8
  %5020 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %47, i32 0, i32 2
  store i64 0, i64* %5020, align 8
  %5021 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %47, i32 0, i32 3
  store i64 0, i64* %5021, align 8
  %5022 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %47, i32 0, i32 4
  store i64 0, i64* %5022, align 8
  %5023 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %47, i32 0, i32 5
  store i64 0, i64* %5023, align 8
  %5024 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %47, i32 0, i32 6
  store i32 0, i32* %5024, align 8
  %5025 = bitcast %struct.relative_time* %5017 to i8*
  %5026 = bitcast %struct.relative_time* %47 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5025, i8* align 8 %5026, i64 56, i1 false)
  %5027 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5028 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5027, i64 -1
  %5029 = bitcast %union.YYSTYPE* %5028 to %struct.textint*
  %5030 = getelementptr inbounds %struct.textint, %struct.textint* %5029, i32 0, i32 1
  %5031 = load i64, i64* %5030, align 8
  %5032 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %5033 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %5032, i32 0, i32 1
  store i64 %5031, i64* %5033, align 8
  br label %7121

5034:                                             ; preds = %245
  %5035 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %5036 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %48, i32 0, i32 0
  store i64 0, i64* %5036, align 8
  %5037 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %48, i32 0, i32 1
  store i64 0, i64* %5037, align 8
  %5038 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %48, i32 0, i32 2
  store i64 0, i64* %5038, align 8
  %5039 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %48, i32 0, i32 3
  store i64 0, i64* %5039, align 8
  %5040 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %48, i32 0, i32 4
  store i64 0, i64* %5040, align 8
  %5041 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %48, i32 0, i32 5
  store i64 0, i64* %5041, align 8
  %5042 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %48, i32 0, i32 6
  store i32 0, i32* %5042, align 8
  %5043 = bitcast %struct.relative_time* %5035 to i8*
  %5044 = bitcast %struct.relative_time* %48 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5043, i8* align 8 %5044, i64 56, i1 false)
  br i1 false, label %5045, label %5442

5045:                                             ; preds = %5034
  br i1 false, label %5244, label %5046

5046:                                             ; preds = %5045
  %5047 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5048 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5047, i64 0
  %5049 = bitcast %union.YYSTYPE* %5048 to i64*
  %5050 = load i64, i64* %5049, align 8
  %5051 = icmp slt i64 %5050, 0
  br i1 %5051, label %5052, label %5147

5052:                                             ; preds = %5046
  %5053 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5054 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5053, i64 -1
  %5055 = bitcast %union.YYSTYPE* %5054 to %struct.textint*
  %5056 = getelementptr inbounds %struct.textint, %struct.textint* %5055, i32 0, i32 1
  %5057 = load i64, i64* %5056, align 8
  %5058 = icmp slt i64 %5057, 0
  br i1 %5058, label %5059, label %5102

5059:                                             ; preds = %5052
  br i1 true, label %5060, label %5072

5060:                                             ; preds = %5059
  %5061 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5062 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5061, i64 -1
  %5063 = bitcast %union.YYSTYPE* %5062 to %struct.textint*
  %5064 = getelementptr inbounds %struct.textint, %struct.textint* %5063, i32 0, i32 1
  %5065 = load i64, i64* %5064, align 8
  %5066 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5067 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5066, i64 0
  %5068 = bitcast %union.YYSTYPE* %5067 to i64*
  %5069 = load i64, i64* %5068, align 8
  %5070 = sdiv i64 127, %5069
  %5071 = icmp slt i64 %5065, %5070
  br i1 %5071, label %5210, label %5227

5072:                                             ; preds = %5059
  br i1 true, label %5073, label %5079

5073:                                             ; preds = %5072
  %5074 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5075 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5074, i64 0
  %5076 = bitcast %union.YYSTYPE* %5075 to i64*
  %5077 = load i64, i64* %5076, align 8
  %5078 = icmp slt i64 %5077, -9223372036854775807
  br i1 %5078, label %5085, label %5086

5079:                                             ; preds = %5072
  %5080 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5081 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5080, i64 0
  %5082 = bitcast %union.YYSTYPE* %5081 to i64*
  %5083 = load i64, i64* %5082, align 8
  %5084 = icmp slt i64 0, %5083
  br i1 %5084, label %5085, label %5086

5085:                                             ; preds = %5079, %5073
  br label %5093

5086:                                             ; preds = %5079, %5073
  %5087 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5088 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5087, i64 0
  %5089 = bitcast %union.YYSTYPE* %5088 to i64*
  %5090 = load i64, i64* %5089, align 8
  %5091 = sub nsw i64 0, %5090
  %5092 = sdiv i64 127, %5091
  br label %5093

5093:                                             ; preds = %5086, %5085
  %5094 = phi i64 [ 0, %5085 ], [ %5092, %5086 ]
  %5095 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5096 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5095, i64 -1
  %5097 = bitcast %union.YYSTYPE* %5096 to %struct.textint*
  %5098 = getelementptr inbounds %struct.textint, %struct.textint* %5097, i32 0, i32 1
  %5099 = load i64, i64* %5098, align 8
  %5100 = sub nsw i64 -1, %5099
  %5101 = icmp sle i64 %5094, %5100
  br i1 %5101, label %5210, label %5227

5102:                                             ; preds = %5052
  br i1 true, label %5103, label %5104

5103:                                             ; preds = %5102
  br i1 false, label %5105, label %5135

5104:                                             ; preds = %5102
  br i1 false, label %5105, label %5135

5105:                                             ; preds = %5104, %5103
  %5106 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5107 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5106, i64 0
  %5108 = bitcast %union.YYSTYPE* %5107 to i64*
  %5109 = load i64, i64* %5108, align 8
  %5110 = icmp eq i64 %5109, -1
  br i1 %5110, label %5111, label %5135

5111:                                             ; preds = %5105
  br i1 true, label %5112, label %5120

5112:                                             ; preds = %5111
  %5113 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5114 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5113, i64 -1
  %5115 = bitcast %union.YYSTYPE* %5114 to %struct.textint*
  %5116 = getelementptr inbounds %struct.textint, %struct.textint* %5115, i32 0, i32 1
  %5117 = load i64, i64* %5116, align 8
  %5118 = add nsw i64 %5117, -128
  %5119 = icmp slt i64 0, %5118
  br i1 %5119, label %5210, label %5227

5120:                                             ; preds = %5111
  %5121 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5122 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5121, i64 -1
  %5123 = bitcast %union.YYSTYPE* %5122 to %struct.textint*
  %5124 = getelementptr inbounds %struct.textint, %struct.textint* %5123, i32 0, i32 1
  %5125 = load i64, i64* %5124, align 8
  %5126 = icmp slt i64 0, %5125
  br i1 %5126, label %5127, label %5227

5127:                                             ; preds = %5120
  %5128 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5129 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5128, i64 -1
  %5130 = bitcast %union.YYSTYPE* %5129 to %struct.textint*
  %5131 = getelementptr inbounds %struct.textint, %struct.textint* %5130, i32 0, i32 1
  %5132 = load i64, i64* %5131, align 8
  %5133 = sub nsw i64 %5132, 1
  %5134 = icmp slt i64 127, %5133
  br i1 %5134, label %5210, label %5227

5135:                                             ; preds = %5105, %5104, %5103
  %5136 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5137 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5136, i64 0
  %5138 = bitcast %union.YYSTYPE* %5137 to i64*
  %5139 = load i64, i64* %5138, align 8
  %5140 = sdiv i64 -128, %5139
  %5141 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5142 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5141, i64 -1
  %5143 = bitcast %union.YYSTYPE* %5142 to %struct.textint*
  %5144 = getelementptr inbounds %struct.textint, %struct.textint* %5143, i32 0, i32 1
  %5145 = load i64, i64* %5144, align 8
  %5146 = icmp slt i64 %5140, %5145
  br i1 %5146, label %5210, label %5227

5147:                                             ; preds = %5046
  %5148 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5149 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5148, i64 0
  %5150 = bitcast %union.YYSTYPE* %5149 to i64*
  %5151 = load i64, i64* %5150, align 8
  %5152 = icmp eq i64 %5151, 0
  br i1 %5152, label %5153, label %5154

5153:                                             ; preds = %5147
  br i1 false, label %5210, label %5227

5154:                                             ; preds = %5147
  %5155 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5156 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5155, i64 -1
  %5157 = bitcast %union.YYSTYPE* %5156 to %struct.textint*
  %5158 = getelementptr inbounds %struct.textint, %struct.textint* %5157, i32 0, i32 1
  %5159 = load i64, i64* %5158, align 8
  %5160 = icmp slt i64 %5159, 0
  br i1 %5160, label %5161, label %5198

5161:                                             ; preds = %5154
  br i1 true, label %5162, label %5163

5162:                                             ; preds = %5161
  br i1 false, label %5164, label %5186

5163:                                             ; preds = %5161
  br i1 false, label %5164, label %5186

5164:                                             ; preds = %5163, %5162
  %5165 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5166 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5165, i64 -1
  %5167 = bitcast %union.YYSTYPE* %5166 to %struct.textint*
  %5168 = getelementptr inbounds %struct.textint, %struct.textint* %5167, i32 0, i32 1
  %5169 = load i64, i64* %5168, align 8
  %5170 = icmp eq i64 %5169, -1
  br i1 %5170, label %5171, label %5186

5171:                                             ; preds = %5164
  br i1 true, label %5172, label %5179

5172:                                             ; preds = %5171
  %5173 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5174 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5173, i64 0
  %5175 = bitcast %union.YYSTYPE* %5174 to i64*
  %5176 = load i64, i64* %5175, align 8
  %5177 = add nsw i64 %5176, -128
  %5178 = icmp slt i64 0, %5177
  br i1 %5178, label %5210, label %5227

5179:                                             ; preds = %5171
  %5180 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5181 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5180, i64 0
  %5182 = bitcast %union.YYSTYPE* %5181 to i64*
  %5183 = load i64, i64* %5182, align 8
  %5184 = sub nsw i64 %5183, 1
  %5185 = icmp slt i64 127, %5184
  br i1 %5185, label %5210, label %5227

5186:                                             ; preds = %5164, %5163, %5162
  %5187 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5188 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5187, i64 -1
  %5189 = bitcast %union.YYSTYPE* %5188 to %struct.textint*
  %5190 = getelementptr inbounds %struct.textint, %struct.textint* %5189, i32 0, i32 1
  %5191 = load i64, i64* %5190, align 8
  %5192 = sdiv i64 -128, %5191
  %5193 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5194 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5193, i64 0
  %5195 = bitcast %union.YYSTYPE* %5194 to i64*
  %5196 = load i64, i64* %5195, align 8
  %5197 = icmp slt i64 %5192, %5196
  br i1 %5197, label %5210, label %5227

5198:                                             ; preds = %5154
  %5199 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5200 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5199, i64 0
  %5201 = bitcast %union.YYSTYPE* %5200 to i64*
  %5202 = load i64, i64* %5201, align 8
  %5203 = sdiv i64 127, %5202
  %5204 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5205 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5204, i64 -1
  %5206 = bitcast %union.YYSTYPE* %5205 to %struct.textint*
  %5207 = getelementptr inbounds %struct.textint, %struct.textint* %5206, i32 0, i32 1
  %5208 = load i64, i64* %5207, align 8
  %5209 = icmp slt i64 %5203, %5208
  br i1 %5209, label %5210, label %5227

5210:                                             ; preds = %5198, %5186, %5179, %5172, %5153, %5135, %5127, %5112, %5093, %5060
  %5211 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5212 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5211, i64 -1
  %5213 = bitcast %union.YYSTYPE* %5212 to %struct.textint*
  %5214 = getelementptr inbounds %struct.textint, %struct.textint* %5213, i32 0, i32 1
  %5215 = load i64, i64* %5214, align 8
  %5216 = trunc i64 %5215 to i32
  %5217 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5218 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5217, i64 0
  %5219 = bitcast %union.YYSTYPE* %5218 to i64*
  %5220 = load i64, i64* %5219, align 8
  %5221 = trunc i64 %5220 to i32
  %5222 = mul i32 %5216, %5221
  %5223 = trunc i32 %5222 to i8
  %5224 = sext i8 %5223 to i64
  %5225 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %5226 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %5225, i32 0, i32 2
  store i64 %5224, i64* %5226, align 8
  br i1 true, label %6985, label %6986

5227:                                             ; preds = %5198, %5186, %5179, %5172, %5153, %5135, %5127, %5120, %5112, %5093, %5060
  %5228 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5229 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5228, i64 -1
  %5230 = bitcast %union.YYSTYPE* %5229 to %struct.textint*
  %5231 = getelementptr inbounds %struct.textint, %struct.textint* %5230, i32 0, i32 1
  %5232 = load i64, i64* %5231, align 8
  %5233 = trunc i64 %5232 to i32
  %5234 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5235 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5234, i64 0
  %5236 = bitcast %union.YYSTYPE* %5235 to i64*
  %5237 = load i64, i64* %5236, align 8
  %5238 = trunc i64 %5237 to i32
  %5239 = mul i32 %5233, %5238
  %5240 = trunc i32 %5239 to i8
  %5241 = sext i8 %5240 to i64
  %5242 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %5243 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %5242, i32 0, i32 2
  store i64 %5241, i64* %5243, align 8
  br i1 false, label %6985, label %6986

5244:                                             ; preds = %5045
  %5245 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5246 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5245, i64 0
  %5247 = bitcast %union.YYSTYPE* %5246 to i64*
  %5248 = load i64, i64* %5247, align 8
  %5249 = icmp slt i64 %5248, 0
  br i1 %5249, label %5250, label %5345

5250:                                             ; preds = %5244
  %5251 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5252 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5251, i64 -1
  %5253 = bitcast %union.YYSTYPE* %5252 to %struct.textint*
  %5254 = getelementptr inbounds %struct.textint, %struct.textint* %5253, i32 0, i32 1
  %5255 = load i64, i64* %5254, align 8
  %5256 = icmp slt i64 %5255, 0
  br i1 %5256, label %5257, label %5300

5257:                                             ; preds = %5250
  br i1 true, label %5258, label %5270

5258:                                             ; preds = %5257
  %5259 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5260 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5259, i64 -1
  %5261 = bitcast %union.YYSTYPE* %5260 to %struct.textint*
  %5262 = getelementptr inbounds %struct.textint, %struct.textint* %5261, i32 0, i32 1
  %5263 = load i64, i64* %5262, align 8
  %5264 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5265 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5264, i64 0
  %5266 = bitcast %union.YYSTYPE* %5265 to i64*
  %5267 = load i64, i64* %5266, align 8
  %5268 = sdiv i64 255, %5267
  %5269 = icmp slt i64 %5263, %5268
  br i1 %5269, label %5408, label %5425

5270:                                             ; preds = %5257
  br i1 true, label %5271, label %5277

5271:                                             ; preds = %5270
  %5272 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5273 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5272, i64 0
  %5274 = bitcast %union.YYSTYPE* %5273 to i64*
  %5275 = load i64, i64* %5274, align 8
  %5276 = icmp slt i64 %5275, -9223372036854775807
  br i1 %5276, label %5283, label %5284

5277:                                             ; preds = %5270
  %5278 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5279 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5278, i64 0
  %5280 = bitcast %union.YYSTYPE* %5279 to i64*
  %5281 = load i64, i64* %5280, align 8
  %5282 = icmp slt i64 0, %5281
  br i1 %5282, label %5283, label %5284

5283:                                             ; preds = %5277, %5271
  br label %5291

5284:                                             ; preds = %5277, %5271
  %5285 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5286 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5285, i64 0
  %5287 = bitcast %union.YYSTYPE* %5286 to i64*
  %5288 = load i64, i64* %5287, align 8
  %5289 = sub nsw i64 0, %5288
  %5290 = sdiv i64 255, %5289
  br label %5291

5291:                                             ; preds = %5284, %5283
  %5292 = phi i64 [ 0, %5283 ], [ %5290, %5284 ]
  %5293 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5294 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5293, i64 -1
  %5295 = bitcast %union.YYSTYPE* %5294 to %struct.textint*
  %5296 = getelementptr inbounds %struct.textint, %struct.textint* %5295, i32 0, i32 1
  %5297 = load i64, i64* %5296, align 8
  %5298 = sub nsw i64 -1, %5297
  %5299 = icmp sle i64 %5292, %5298
  br i1 %5299, label %5408, label %5425

5300:                                             ; preds = %5250
  br i1 true, label %5301, label %5302

5301:                                             ; preds = %5300
  br i1 false, label %5303, label %5333

5302:                                             ; preds = %5300
  br i1 false, label %5303, label %5333

5303:                                             ; preds = %5302, %5301
  %5304 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5305 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5304, i64 0
  %5306 = bitcast %union.YYSTYPE* %5305 to i64*
  %5307 = load i64, i64* %5306, align 8
  %5308 = icmp eq i64 %5307, -1
  br i1 %5308, label %5309, label %5333

5309:                                             ; preds = %5303
  br i1 true, label %5310, label %5318

5310:                                             ; preds = %5309
  %5311 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5312 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5311, i64 -1
  %5313 = bitcast %union.YYSTYPE* %5312 to %struct.textint*
  %5314 = getelementptr inbounds %struct.textint, %struct.textint* %5313, i32 0, i32 1
  %5315 = load i64, i64* %5314, align 8
  %5316 = add nsw i64 %5315, 0
  %5317 = icmp slt i64 0, %5316
  br i1 %5317, label %5408, label %5425

5318:                                             ; preds = %5309
  %5319 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5320 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5319, i64 -1
  %5321 = bitcast %union.YYSTYPE* %5320 to %struct.textint*
  %5322 = getelementptr inbounds %struct.textint, %struct.textint* %5321, i32 0, i32 1
  %5323 = load i64, i64* %5322, align 8
  %5324 = icmp slt i64 0, %5323
  br i1 %5324, label %5325, label %5425

5325:                                             ; preds = %5318
  %5326 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5327 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5326, i64 -1
  %5328 = bitcast %union.YYSTYPE* %5327 to %struct.textint*
  %5329 = getelementptr inbounds %struct.textint, %struct.textint* %5328, i32 0, i32 1
  %5330 = load i64, i64* %5329, align 8
  %5331 = sub nsw i64 %5330, 1
  %5332 = icmp slt i64 -1, %5331
  br i1 %5332, label %5408, label %5425

5333:                                             ; preds = %5303, %5302, %5301
  %5334 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5335 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5334, i64 0
  %5336 = bitcast %union.YYSTYPE* %5335 to i64*
  %5337 = load i64, i64* %5336, align 8
  %5338 = sdiv i64 0, %5337
  %5339 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5340 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5339, i64 -1
  %5341 = bitcast %union.YYSTYPE* %5340 to %struct.textint*
  %5342 = getelementptr inbounds %struct.textint, %struct.textint* %5341, i32 0, i32 1
  %5343 = load i64, i64* %5342, align 8
  %5344 = icmp slt i64 %5338, %5343
  br i1 %5344, label %5408, label %5425

5345:                                             ; preds = %5244
  %5346 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5347 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5346, i64 0
  %5348 = bitcast %union.YYSTYPE* %5347 to i64*
  %5349 = load i64, i64* %5348, align 8
  %5350 = icmp eq i64 %5349, 0
  br i1 %5350, label %5351, label %5352

5351:                                             ; preds = %5345
  br i1 false, label %5408, label %5425

5352:                                             ; preds = %5345
  %5353 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5354 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5353, i64 -1
  %5355 = bitcast %union.YYSTYPE* %5354 to %struct.textint*
  %5356 = getelementptr inbounds %struct.textint, %struct.textint* %5355, i32 0, i32 1
  %5357 = load i64, i64* %5356, align 8
  %5358 = icmp slt i64 %5357, 0
  br i1 %5358, label %5359, label %5396

5359:                                             ; preds = %5352
  br i1 true, label %5360, label %5361

5360:                                             ; preds = %5359
  br i1 false, label %5362, label %5384

5361:                                             ; preds = %5359
  br i1 false, label %5362, label %5384

5362:                                             ; preds = %5361, %5360
  %5363 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5364 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5363, i64 -1
  %5365 = bitcast %union.YYSTYPE* %5364 to %struct.textint*
  %5366 = getelementptr inbounds %struct.textint, %struct.textint* %5365, i32 0, i32 1
  %5367 = load i64, i64* %5366, align 8
  %5368 = icmp eq i64 %5367, -1
  br i1 %5368, label %5369, label %5384

5369:                                             ; preds = %5362
  br i1 true, label %5370, label %5377

5370:                                             ; preds = %5369
  %5371 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5372 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5371, i64 0
  %5373 = bitcast %union.YYSTYPE* %5372 to i64*
  %5374 = load i64, i64* %5373, align 8
  %5375 = add nsw i64 %5374, 0
  %5376 = icmp slt i64 0, %5375
  br i1 %5376, label %5408, label %5425

5377:                                             ; preds = %5369
  %5378 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5379 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5378, i64 0
  %5380 = bitcast %union.YYSTYPE* %5379 to i64*
  %5381 = load i64, i64* %5380, align 8
  %5382 = sub nsw i64 %5381, 1
  %5383 = icmp slt i64 -1, %5382
  br i1 %5383, label %5408, label %5425

5384:                                             ; preds = %5362, %5361, %5360
  %5385 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5386 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5385, i64 -1
  %5387 = bitcast %union.YYSTYPE* %5386 to %struct.textint*
  %5388 = getelementptr inbounds %struct.textint, %struct.textint* %5387, i32 0, i32 1
  %5389 = load i64, i64* %5388, align 8
  %5390 = sdiv i64 0, %5389
  %5391 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5392 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5391, i64 0
  %5393 = bitcast %union.YYSTYPE* %5392 to i64*
  %5394 = load i64, i64* %5393, align 8
  %5395 = icmp slt i64 %5390, %5394
  br i1 %5395, label %5408, label %5425

5396:                                             ; preds = %5352
  %5397 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5398 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5397, i64 0
  %5399 = bitcast %union.YYSTYPE* %5398 to i64*
  %5400 = load i64, i64* %5399, align 8
  %5401 = sdiv i64 255, %5400
  %5402 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5403 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5402, i64 -1
  %5404 = bitcast %union.YYSTYPE* %5403 to %struct.textint*
  %5405 = getelementptr inbounds %struct.textint, %struct.textint* %5404, i32 0, i32 1
  %5406 = load i64, i64* %5405, align 8
  %5407 = icmp slt i64 %5401, %5406
  br i1 %5407, label %5408, label %5425

5408:                                             ; preds = %5396, %5384, %5377, %5370, %5351, %5333, %5325, %5310, %5291, %5258
  %5409 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5410 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5409, i64 -1
  %5411 = bitcast %union.YYSTYPE* %5410 to %struct.textint*
  %5412 = getelementptr inbounds %struct.textint, %struct.textint* %5411, i32 0, i32 1
  %5413 = load i64, i64* %5412, align 8
  %5414 = trunc i64 %5413 to i32
  %5415 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5416 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5415, i64 0
  %5417 = bitcast %union.YYSTYPE* %5416 to i64*
  %5418 = load i64, i64* %5417, align 8
  %5419 = trunc i64 %5418 to i32
  %5420 = mul i32 %5414, %5419
  %5421 = trunc i32 %5420 to i8
  %5422 = zext i8 %5421 to i64
  %5423 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %5424 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %5423, i32 0, i32 2
  store i64 %5422, i64* %5424, align 8
  br i1 true, label %6985, label %6986

5425:                                             ; preds = %5396, %5384, %5377, %5370, %5351, %5333, %5325, %5318, %5310, %5291, %5258
  %5426 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5427 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5426, i64 -1
  %5428 = bitcast %union.YYSTYPE* %5427 to %struct.textint*
  %5429 = getelementptr inbounds %struct.textint, %struct.textint* %5428, i32 0, i32 1
  %5430 = load i64, i64* %5429, align 8
  %5431 = trunc i64 %5430 to i32
  %5432 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5433 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5432, i64 0
  %5434 = bitcast %union.YYSTYPE* %5433 to i64*
  %5435 = load i64, i64* %5434, align 8
  %5436 = trunc i64 %5435 to i32
  %5437 = mul i32 %5431, %5436
  %5438 = trunc i32 %5437 to i8
  %5439 = zext i8 %5438 to i64
  %5440 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %5441 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %5440, i32 0, i32 2
  store i64 %5439, i64* %5441, align 8
  br i1 false, label %6985, label %6986

5442:                                             ; preds = %5034
  br i1 false, label %5443, label %5840

5443:                                             ; preds = %5442
  br i1 false, label %5642, label %5444

5444:                                             ; preds = %5443
  %5445 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5446 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5445, i64 0
  %5447 = bitcast %union.YYSTYPE* %5446 to i64*
  %5448 = load i64, i64* %5447, align 8
  %5449 = icmp slt i64 %5448, 0
  br i1 %5449, label %5450, label %5545

5450:                                             ; preds = %5444
  %5451 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5452 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5451, i64 -1
  %5453 = bitcast %union.YYSTYPE* %5452 to %struct.textint*
  %5454 = getelementptr inbounds %struct.textint, %struct.textint* %5453, i32 0, i32 1
  %5455 = load i64, i64* %5454, align 8
  %5456 = icmp slt i64 %5455, 0
  br i1 %5456, label %5457, label %5500

5457:                                             ; preds = %5450
  br i1 true, label %5458, label %5470

5458:                                             ; preds = %5457
  %5459 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5460 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5459, i64 -1
  %5461 = bitcast %union.YYSTYPE* %5460 to %struct.textint*
  %5462 = getelementptr inbounds %struct.textint, %struct.textint* %5461, i32 0, i32 1
  %5463 = load i64, i64* %5462, align 8
  %5464 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5465 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5464, i64 0
  %5466 = bitcast %union.YYSTYPE* %5465 to i64*
  %5467 = load i64, i64* %5466, align 8
  %5468 = sdiv i64 32767, %5467
  %5469 = icmp slt i64 %5463, %5468
  br i1 %5469, label %5608, label %5625

5470:                                             ; preds = %5457
  br i1 true, label %5471, label %5477

5471:                                             ; preds = %5470
  %5472 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5473 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5472, i64 0
  %5474 = bitcast %union.YYSTYPE* %5473 to i64*
  %5475 = load i64, i64* %5474, align 8
  %5476 = icmp slt i64 %5475, -9223372036854775807
  br i1 %5476, label %5483, label %5484

5477:                                             ; preds = %5470
  %5478 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5479 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5478, i64 0
  %5480 = bitcast %union.YYSTYPE* %5479 to i64*
  %5481 = load i64, i64* %5480, align 8
  %5482 = icmp slt i64 0, %5481
  br i1 %5482, label %5483, label %5484

5483:                                             ; preds = %5477, %5471
  br label %5491

5484:                                             ; preds = %5477, %5471
  %5485 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5486 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5485, i64 0
  %5487 = bitcast %union.YYSTYPE* %5486 to i64*
  %5488 = load i64, i64* %5487, align 8
  %5489 = sub nsw i64 0, %5488
  %5490 = sdiv i64 32767, %5489
  br label %5491

5491:                                             ; preds = %5484, %5483
  %5492 = phi i64 [ 0, %5483 ], [ %5490, %5484 ]
  %5493 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5494 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5493, i64 -1
  %5495 = bitcast %union.YYSTYPE* %5494 to %struct.textint*
  %5496 = getelementptr inbounds %struct.textint, %struct.textint* %5495, i32 0, i32 1
  %5497 = load i64, i64* %5496, align 8
  %5498 = sub nsw i64 -1, %5497
  %5499 = icmp sle i64 %5492, %5498
  br i1 %5499, label %5608, label %5625

5500:                                             ; preds = %5450
  br i1 true, label %5501, label %5502

5501:                                             ; preds = %5500
  br i1 false, label %5503, label %5533

5502:                                             ; preds = %5500
  br i1 false, label %5503, label %5533

5503:                                             ; preds = %5502, %5501
  %5504 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5505 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5504, i64 0
  %5506 = bitcast %union.YYSTYPE* %5505 to i64*
  %5507 = load i64, i64* %5506, align 8
  %5508 = icmp eq i64 %5507, -1
  br i1 %5508, label %5509, label %5533

5509:                                             ; preds = %5503
  br i1 true, label %5510, label %5518

5510:                                             ; preds = %5509
  %5511 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5512 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5511, i64 -1
  %5513 = bitcast %union.YYSTYPE* %5512 to %struct.textint*
  %5514 = getelementptr inbounds %struct.textint, %struct.textint* %5513, i32 0, i32 1
  %5515 = load i64, i64* %5514, align 8
  %5516 = add nsw i64 %5515, -32768
  %5517 = icmp slt i64 0, %5516
  br i1 %5517, label %5608, label %5625

5518:                                             ; preds = %5509
  %5519 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5520 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5519, i64 -1
  %5521 = bitcast %union.YYSTYPE* %5520 to %struct.textint*
  %5522 = getelementptr inbounds %struct.textint, %struct.textint* %5521, i32 0, i32 1
  %5523 = load i64, i64* %5522, align 8
  %5524 = icmp slt i64 0, %5523
  br i1 %5524, label %5525, label %5625

5525:                                             ; preds = %5518
  %5526 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5527 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5526, i64 -1
  %5528 = bitcast %union.YYSTYPE* %5527 to %struct.textint*
  %5529 = getelementptr inbounds %struct.textint, %struct.textint* %5528, i32 0, i32 1
  %5530 = load i64, i64* %5529, align 8
  %5531 = sub nsw i64 %5530, 1
  %5532 = icmp slt i64 32767, %5531
  br i1 %5532, label %5608, label %5625

5533:                                             ; preds = %5503, %5502, %5501
  %5534 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5535 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5534, i64 0
  %5536 = bitcast %union.YYSTYPE* %5535 to i64*
  %5537 = load i64, i64* %5536, align 8
  %5538 = sdiv i64 -32768, %5537
  %5539 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5540 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5539, i64 -1
  %5541 = bitcast %union.YYSTYPE* %5540 to %struct.textint*
  %5542 = getelementptr inbounds %struct.textint, %struct.textint* %5541, i32 0, i32 1
  %5543 = load i64, i64* %5542, align 8
  %5544 = icmp slt i64 %5538, %5543
  br i1 %5544, label %5608, label %5625

5545:                                             ; preds = %5444
  %5546 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5547 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5546, i64 0
  %5548 = bitcast %union.YYSTYPE* %5547 to i64*
  %5549 = load i64, i64* %5548, align 8
  %5550 = icmp eq i64 %5549, 0
  br i1 %5550, label %5551, label %5552

5551:                                             ; preds = %5545
  br i1 false, label %5608, label %5625

5552:                                             ; preds = %5545
  %5553 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5554 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5553, i64 -1
  %5555 = bitcast %union.YYSTYPE* %5554 to %struct.textint*
  %5556 = getelementptr inbounds %struct.textint, %struct.textint* %5555, i32 0, i32 1
  %5557 = load i64, i64* %5556, align 8
  %5558 = icmp slt i64 %5557, 0
  br i1 %5558, label %5559, label %5596

5559:                                             ; preds = %5552
  br i1 true, label %5560, label %5561

5560:                                             ; preds = %5559
  br i1 false, label %5562, label %5584

5561:                                             ; preds = %5559
  br i1 false, label %5562, label %5584

5562:                                             ; preds = %5561, %5560
  %5563 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5564 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5563, i64 -1
  %5565 = bitcast %union.YYSTYPE* %5564 to %struct.textint*
  %5566 = getelementptr inbounds %struct.textint, %struct.textint* %5565, i32 0, i32 1
  %5567 = load i64, i64* %5566, align 8
  %5568 = icmp eq i64 %5567, -1
  br i1 %5568, label %5569, label %5584

5569:                                             ; preds = %5562
  br i1 true, label %5570, label %5577

5570:                                             ; preds = %5569
  %5571 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5572 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5571, i64 0
  %5573 = bitcast %union.YYSTYPE* %5572 to i64*
  %5574 = load i64, i64* %5573, align 8
  %5575 = add nsw i64 %5574, -32768
  %5576 = icmp slt i64 0, %5575
  br i1 %5576, label %5608, label %5625

5577:                                             ; preds = %5569
  %5578 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5579 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5578, i64 0
  %5580 = bitcast %union.YYSTYPE* %5579 to i64*
  %5581 = load i64, i64* %5580, align 8
  %5582 = sub nsw i64 %5581, 1
  %5583 = icmp slt i64 32767, %5582
  br i1 %5583, label %5608, label %5625

5584:                                             ; preds = %5562, %5561, %5560
  %5585 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5586 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5585, i64 -1
  %5587 = bitcast %union.YYSTYPE* %5586 to %struct.textint*
  %5588 = getelementptr inbounds %struct.textint, %struct.textint* %5587, i32 0, i32 1
  %5589 = load i64, i64* %5588, align 8
  %5590 = sdiv i64 -32768, %5589
  %5591 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5592 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5591, i64 0
  %5593 = bitcast %union.YYSTYPE* %5592 to i64*
  %5594 = load i64, i64* %5593, align 8
  %5595 = icmp slt i64 %5590, %5594
  br i1 %5595, label %5608, label %5625

5596:                                             ; preds = %5552
  %5597 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5598 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5597, i64 0
  %5599 = bitcast %union.YYSTYPE* %5598 to i64*
  %5600 = load i64, i64* %5599, align 8
  %5601 = sdiv i64 32767, %5600
  %5602 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5603 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5602, i64 -1
  %5604 = bitcast %union.YYSTYPE* %5603 to %struct.textint*
  %5605 = getelementptr inbounds %struct.textint, %struct.textint* %5604, i32 0, i32 1
  %5606 = load i64, i64* %5605, align 8
  %5607 = icmp slt i64 %5601, %5606
  br i1 %5607, label %5608, label %5625

5608:                                             ; preds = %5596, %5584, %5577, %5570, %5551, %5533, %5525, %5510, %5491, %5458
  %5609 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5610 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5609, i64 -1
  %5611 = bitcast %union.YYSTYPE* %5610 to %struct.textint*
  %5612 = getelementptr inbounds %struct.textint, %struct.textint* %5611, i32 0, i32 1
  %5613 = load i64, i64* %5612, align 8
  %5614 = trunc i64 %5613 to i32
  %5615 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5616 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5615, i64 0
  %5617 = bitcast %union.YYSTYPE* %5616 to i64*
  %5618 = load i64, i64* %5617, align 8
  %5619 = trunc i64 %5618 to i32
  %5620 = mul i32 %5614, %5619
  %5621 = trunc i32 %5620 to i16
  %5622 = sext i16 %5621 to i64
  %5623 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %5624 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %5623, i32 0, i32 2
  store i64 %5622, i64* %5624, align 8
  br i1 true, label %6985, label %6986

5625:                                             ; preds = %5596, %5584, %5577, %5570, %5551, %5533, %5525, %5518, %5510, %5491, %5458
  %5626 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5627 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5626, i64 -1
  %5628 = bitcast %union.YYSTYPE* %5627 to %struct.textint*
  %5629 = getelementptr inbounds %struct.textint, %struct.textint* %5628, i32 0, i32 1
  %5630 = load i64, i64* %5629, align 8
  %5631 = trunc i64 %5630 to i32
  %5632 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5633 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5632, i64 0
  %5634 = bitcast %union.YYSTYPE* %5633 to i64*
  %5635 = load i64, i64* %5634, align 8
  %5636 = trunc i64 %5635 to i32
  %5637 = mul i32 %5631, %5636
  %5638 = trunc i32 %5637 to i16
  %5639 = sext i16 %5638 to i64
  %5640 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %5641 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %5640, i32 0, i32 2
  store i64 %5639, i64* %5641, align 8
  br i1 false, label %6985, label %6986

5642:                                             ; preds = %5443
  %5643 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5644 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5643, i64 0
  %5645 = bitcast %union.YYSTYPE* %5644 to i64*
  %5646 = load i64, i64* %5645, align 8
  %5647 = icmp slt i64 %5646, 0
  br i1 %5647, label %5648, label %5743

5648:                                             ; preds = %5642
  %5649 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5650 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5649, i64 -1
  %5651 = bitcast %union.YYSTYPE* %5650 to %struct.textint*
  %5652 = getelementptr inbounds %struct.textint, %struct.textint* %5651, i32 0, i32 1
  %5653 = load i64, i64* %5652, align 8
  %5654 = icmp slt i64 %5653, 0
  br i1 %5654, label %5655, label %5698

5655:                                             ; preds = %5648
  br i1 true, label %5656, label %5668

5656:                                             ; preds = %5655
  %5657 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5658 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5657, i64 -1
  %5659 = bitcast %union.YYSTYPE* %5658 to %struct.textint*
  %5660 = getelementptr inbounds %struct.textint, %struct.textint* %5659, i32 0, i32 1
  %5661 = load i64, i64* %5660, align 8
  %5662 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5663 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5662, i64 0
  %5664 = bitcast %union.YYSTYPE* %5663 to i64*
  %5665 = load i64, i64* %5664, align 8
  %5666 = sdiv i64 65535, %5665
  %5667 = icmp slt i64 %5661, %5666
  br i1 %5667, label %5806, label %5823

5668:                                             ; preds = %5655
  br i1 true, label %5669, label %5675

5669:                                             ; preds = %5668
  %5670 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5671 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5670, i64 0
  %5672 = bitcast %union.YYSTYPE* %5671 to i64*
  %5673 = load i64, i64* %5672, align 8
  %5674 = icmp slt i64 %5673, -9223372036854775807
  br i1 %5674, label %5681, label %5682

5675:                                             ; preds = %5668
  %5676 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5677 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5676, i64 0
  %5678 = bitcast %union.YYSTYPE* %5677 to i64*
  %5679 = load i64, i64* %5678, align 8
  %5680 = icmp slt i64 0, %5679
  br i1 %5680, label %5681, label %5682

5681:                                             ; preds = %5675, %5669
  br label %5689

5682:                                             ; preds = %5675, %5669
  %5683 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5684 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5683, i64 0
  %5685 = bitcast %union.YYSTYPE* %5684 to i64*
  %5686 = load i64, i64* %5685, align 8
  %5687 = sub nsw i64 0, %5686
  %5688 = sdiv i64 65535, %5687
  br label %5689

5689:                                             ; preds = %5682, %5681
  %5690 = phi i64 [ 0, %5681 ], [ %5688, %5682 ]
  %5691 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5692 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5691, i64 -1
  %5693 = bitcast %union.YYSTYPE* %5692 to %struct.textint*
  %5694 = getelementptr inbounds %struct.textint, %struct.textint* %5693, i32 0, i32 1
  %5695 = load i64, i64* %5694, align 8
  %5696 = sub nsw i64 -1, %5695
  %5697 = icmp sle i64 %5690, %5696
  br i1 %5697, label %5806, label %5823

5698:                                             ; preds = %5648
  br i1 true, label %5699, label %5700

5699:                                             ; preds = %5698
  br i1 false, label %5701, label %5731

5700:                                             ; preds = %5698
  br i1 false, label %5701, label %5731

5701:                                             ; preds = %5700, %5699
  %5702 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5703 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5702, i64 0
  %5704 = bitcast %union.YYSTYPE* %5703 to i64*
  %5705 = load i64, i64* %5704, align 8
  %5706 = icmp eq i64 %5705, -1
  br i1 %5706, label %5707, label %5731

5707:                                             ; preds = %5701
  br i1 true, label %5708, label %5716

5708:                                             ; preds = %5707
  %5709 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5710 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5709, i64 -1
  %5711 = bitcast %union.YYSTYPE* %5710 to %struct.textint*
  %5712 = getelementptr inbounds %struct.textint, %struct.textint* %5711, i32 0, i32 1
  %5713 = load i64, i64* %5712, align 8
  %5714 = add nsw i64 %5713, 0
  %5715 = icmp slt i64 0, %5714
  br i1 %5715, label %5806, label %5823

5716:                                             ; preds = %5707
  %5717 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5718 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5717, i64 -1
  %5719 = bitcast %union.YYSTYPE* %5718 to %struct.textint*
  %5720 = getelementptr inbounds %struct.textint, %struct.textint* %5719, i32 0, i32 1
  %5721 = load i64, i64* %5720, align 8
  %5722 = icmp slt i64 0, %5721
  br i1 %5722, label %5723, label %5823

5723:                                             ; preds = %5716
  %5724 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5725 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5724, i64 -1
  %5726 = bitcast %union.YYSTYPE* %5725 to %struct.textint*
  %5727 = getelementptr inbounds %struct.textint, %struct.textint* %5726, i32 0, i32 1
  %5728 = load i64, i64* %5727, align 8
  %5729 = sub nsw i64 %5728, 1
  %5730 = icmp slt i64 -1, %5729
  br i1 %5730, label %5806, label %5823

5731:                                             ; preds = %5701, %5700, %5699
  %5732 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5733 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5732, i64 0
  %5734 = bitcast %union.YYSTYPE* %5733 to i64*
  %5735 = load i64, i64* %5734, align 8
  %5736 = sdiv i64 0, %5735
  %5737 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5738 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5737, i64 -1
  %5739 = bitcast %union.YYSTYPE* %5738 to %struct.textint*
  %5740 = getelementptr inbounds %struct.textint, %struct.textint* %5739, i32 0, i32 1
  %5741 = load i64, i64* %5740, align 8
  %5742 = icmp slt i64 %5736, %5741
  br i1 %5742, label %5806, label %5823

5743:                                             ; preds = %5642
  %5744 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5745 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5744, i64 0
  %5746 = bitcast %union.YYSTYPE* %5745 to i64*
  %5747 = load i64, i64* %5746, align 8
  %5748 = icmp eq i64 %5747, 0
  br i1 %5748, label %5749, label %5750

5749:                                             ; preds = %5743
  br i1 false, label %5806, label %5823

5750:                                             ; preds = %5743
  %5751 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5752 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5751, i64 -1
  %5753 = bitcast %union.YYSTYPE* %5752 to %struct.textint*
  %5754 = getelementptr inbounds %struct.textint, %struct.textint* %5753, i32 0, i32 1
  %5755 = load i64, i64* %5754, align 8
  %5756 = icmp slt i64 %5755, 0
  br i1 %5756, label %5757, label %5794

5757:                                             ; preds = %5750
  br i1 true, label %5758, label %5759

5758:                                             ; preds = %5757
  br i1 false, label %5760, label %5782

5759:                                             ; preds = %5757
  br i1 false, label %5760, label %5782

5760:                                             ; preds = %5759, %5758
  %5761 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5762 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5761, i64 -1
  %5763 = bitcast %union.YYSTYPE* %5762 to %struct.textint*
  %5764 = getelementptr inbounds %struct.textint, %struct.textint* %5763, i32 0, i32 1
  %5765 = load i64, i64* %5764, align 8
  %5766 = icmp eq i64 %5765, -1
  br i1 %5766, label %5767, label %5782

5767:                                             ; preds = %5760
  br i1 true, label %5768, label %5775

5768:                                             ; preds = %5767
  %5769 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5770 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5769, i64 0
  %5771 = bitcast %union.YYSTYPE* %5770 to i64*
  %5772 = load i64, i64* %5771, align 8
  %5773 = add nsw i64 %5772, 0
  %5774 = icmp slt i64 0, %5773
  br i1 %5774, label %5806, label %5823

5775:                                             ; preds = %5767
  %5776 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5777 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5776, i64 0
  %5778 = bitcast %union.YYSTYPE* %5777 to i64*
  %5779 = load i64, i64* %5778, align 8
  %5780 = sub nsw i64 %5779, 1
  %5781 = icmp slt i64 -1, %5780
  br i1 %5781, label %5806, label %5823

5782:                                             ; preds = %5760, %5759, %5758
  %5783 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5784 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5783, i64 -1
  %5785 = bitcast %union.YYSTYPE* %5784 to %struct.textint*
  %5786 = getelementptr inbounds %struct.textint, %struct.textint* %5785, i32 0, i32 1
  %5787 = load i64, i64* %5786, align 8
  %5788 = sdiv i64 0, %5787
  %5789 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5790 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5789, i64 0
  %5791 = bitcast %union.YYSTYPE* %5790 to i64*
  %5792 = load i64, i64* %5791, align 8
  %5793 = icmp slt i64 %5788, %5792
  br i1 %5793, label %5806, label %5823

5794:                                             ; preds = %5750
  %5795 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5796 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5795, i64 0
  %5797 = bitcast %union.YYSTYPE* %5796 to i64*
  %5798 = load i64, i64* %5797, align 8
  %5799 = sdiv i64 65535, %5798
  %5800 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5801 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5800, i64 -1
  %5802 = bitcast %union.YYSTYPE* %5801 to %struct.textint*
  %5803 = getelementptr inbounds %struct.textint, %struct.textint* %5802, i32 0, i32 1
  %5804 = load i64, i64* %5803, align 8
  %5805 = icmp slt i64 %5799, %5804
  br i1 %5805, label %5806, label %5823

5806:                                             ; preds = %5794, %5782, %5775, %5768, %5749, %5731, %5723, %5708, %5689, %5656
  %5807 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5808 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5807, i64 -1
  %5809 = bitcast %union.YYSTYPE* %5808 to %struct.textint*
  %5810 = getelementptr inbounds %struct.textint, %struct.textint* %5809, i32 0, i32 1
  %5811 = load i64, i64* %5810, align 8
  %5812 = trunc i64 %5811 to i32
  %5813 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5814 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5813, i64 0
  %5815 = bitcast %union.YYSTYPE* %5814 to i64*
  %5816 = load i64, i64* %5815, align 8
  %5817 = trunc i64 %5816 to i32
  %5818 = mul i32 %5812, %5817
  %5819 = trunc i32 %5818 to i16
  %5820 = zext i16 %5819 to i64
  %5821 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %5822 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %5821, i32 0, i32 2
  store i64 %5820, i64* %5822, align 8
  br i1 true, label %6985, label %6986

5823:                                             ; preds = %5794, %5782, %5775, %5768, %5749, %5731, %5723, %5716, %5708, %5689, %5656
  %5824 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5825 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5824, i64 -1
  %5826 = bitcast %union.YYSTYPE* %5825 to %struct.textint*
  %5827 = getelementptr inbounds %struct.textint, %struct.textint* %5826, i32 0, i32 1
  %5828 = load i64, i64* %5827, align 8
  %5829 = trunc i64 %5828 to i32
  %5830 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5831 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5830, i64 0
  %5832 = bitcast %union.YYSTYPE* %5831 to i64*
  %5833 = load i64, i64* %5832, align 8
  %5834 = trunc i64 %5833 to i32
  %5835 = mul i32 %5829, %5834
  %5836 = trunc i32 %5835 to i16
  %5837 = zext i16 %5836 to i64
  %5838 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %5839 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %5838, i32 0, i32 2
  store i64 %5837, i64* %5839, align 8
  br i1 false, label %6985, label %6986

5840:                                             ; preds = %5442
  br i1 false, label %5841, label %6234

5841:                                             ; preds = %5840
  br i1 true, label %5842, label %6038

5842:                                             ; preds = %5841
  %5843 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5844 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5843, i64 0
  %5845 = bitcast %union.YYSTYPE* %5844 to i64*
  %5846 = load i64, i64* %5845, align 8
  %5847 = icmp slt i64 %5846, 0
  br i1 %5847, label %5848, label %5943

5848:                                             ; preds = %5842
  %5849 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5850 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5849, i64 -1
  %5851 = bitcast %union.YYSTYPE* %5850 to %struct.textint*
  %5852 = getelementptr inbounds %struct.textint, %struct.textint* %5851, i32 0, i32 1
  %5853 = load i64, i64* %5852, align 8
  %5854 = icmp slt i64 %5853, 0
  br i1 %5854, label %5855, label %5898

5855:                                             ; preds = %5848
  br i1 true, label %5856, label %5868

5856:                                             ; preds = %5855
  %5857 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5858 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5857, i64 -1
  %5859 = bitcast %union.YYSTYPE* %5858 to %struct.textint*
  %5860 = getelementptr inbounds %struct.textint, %struct.textint* %5859, i32 0, i32 1
  %5861 = load i64, i64* %5860, align 8
  %5862 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5863 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5862, i64 0
  %5864 = bitcast %union.YYSTYPE* %5863 to i64*
  %5865 = load i64, i64* %5864, align 8
  %5866 = sdiv i64 2147483647, %5865
  %5867 = icmp slt i64 %5861, %5866
  br i1 %5867, label %6006, label %6022

5868:                                             ; preds = %5855
  br i1 true, label %5869, label %5875

5869:                                             ; preds = %5868
  %5870 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5871 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5870, i64 0
  %5872 = bitcast %union.YYSTYPE* %5871 to i64*
  %5873 = load i64, i64* %5872, align 8
  %5874 = icmp slt i64 %5873, -9223372036854775807
  br i1 %5874, label %5881, label %5882

5875:                                             ; preds = %5868
  %5876 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5877 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5876, i64 0
  %5878 = bitcast %union.YYSTYPE* %5877 to i64*
  %5879 = load i64, i64* %5878, align 8
  %5880 = icmp slt i64 0, %5879
  br i1 %5880, label %5881, label %5882

5881:                                             ; preds = %5875, %5869
  br label %5889

5882:                                             ; preds = %5875, %5869
  %5883 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5884 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5883, i64 0
  %5885 = bitcast %union.YYSTYPE* %5884 to i64*
  %5886 = load i64, i64* %5885, align 8
  %5887 = sub nsw i64 0, %5886
  %5888 = sdiv i64 2147483647, %5887
  br label %5889

5889:                                             ; preds = %5882, %5881
  %5890 = phi i64 [ 0, %5881 ], [ %5888, %5882 ]
  %5891 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5892 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5891, i64 -1
  %5893 = bitcast %union.YYSTYPE* %5892 to %struct.textint*
  %5894 = getelementptr inbounds %struct.textint, %struct.textint* %5893, i32 0, i32 1
  %5895 = load i64, i64* %5894, align 8
  %5896 = sub nsw i64 -1, %5895
  %5897 = icmp sle i64 %5890, %5896
  br i1 %5897, label %6006, label %6022

5898:                                             ; preds = %5848
  br i1 true, label %5899, label %5900

5899:                                             ; preds = %5898
  br i1 false, label %5901, label %5931

5900:                                             ; preds = %5898
  br i1 false, label %5901, label %5931

5901:                                             ; preds = %5900, %5899
  %5902 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5903 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5902, i64 0
  %5904 = bitcast %union.YYSTYPE* %5903 to i64*
  %5905 = load i64, i64* %5904, align 8
  %5906 = icmp eq i64 %5905, -1
  br i1 %5906, label %5907, label %5931

5907:                                             ; preds = %5901
  br i1 true, label %5908, label %5916

5908:                                             ; preds = %5907
  %5909 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5910 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5909, i64 -1
  %5911 = bitcast %union.YYSTYPE* %5910 to %struct.textint*
  %5912 = getelementptr inbounds %struct.textint, %struct.textint* %5911, i32 0, i32 1
  %5913 = load i64, i64* %5912, align 8
  %5914 = add nsw i64 %5913, -2147483648
  %5915 = icmp slt i64 0, %5914
  br i1 %5915, label %6006, label %6022

5916:                                             ; preds = %5907
  %5917 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5918 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5917, i64 -1
  %5919 = bitcast %union.YYSTYPE* %5918 to %struct.textint*
  %5920 = getelementptr inbounds %struct.textint, %struct.textint* %5919, i32 0, i32 1
  %5921 = load i64, i64* %5920, align 8
  %5922 = icmp slt i64 0, %5921
  br i1 %5922, label %5923, label %6022

5923:                                             ; preds = %5916
  %5924 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5925 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5924, i64 -1
  %5926 = bitcast %union.YYSTYPE* %5925 to %struct.textint*
  %5927 = getelementptr inbounds %struct.textint, %struct.textint* %5926, i32 0, i32 1
  %5928 = load i64, i64* %5927, align 8
  %5929 = sub nsw i64 %5928, 1
  %5930 = icmp slt i64 2147483647, %5929
  br i1 %5930, label %6006, label %6022

5931:                                             ; preds = %5901, %5900, %5899
  %5932 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5933 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5932, i64 0
  %5934 = bitcast %union.YYSTYPE* %5933 to i64*
  %5935 = load i64, i64* %5934, align 8
  %5936 = sdiv i64 -2147483648, %5935
  %5937 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5938 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5937, i64 -1
  %5939 = bitcast %union.YYSTYPE* %5938 to %struct.textint*
  %5940 = getelementptr inbounds %struct.textint, %struct.textint* %5939, i32 0, i32 1
  %5941 = load i64, i64* %5940, align 8
  %5942 = icmp slt i64 %5936, %5941
  br i1 %5942, label %6006, label %6022

5943:                                             ; preds = %5842
  %5944 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5945 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5944, i64 0
  %5946 = bitcast %union.YYSTYPE* %5945 to i64*
  %5947 = load i64, i64* %5946, align 8
  %5948 = icmp eq i64 %5947, 0
  br i1 %5948, label %5949, label %5950

5949:                                             ; preds = %5943
  br i1 false, label %6006, label %6022

5950:                                             ; preds = %5943
  %5951 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5952 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5951, i64 -1
  %5953 = bitcast %union.YYSTYPE* %5952 to %struct.textint*
  %5954 = getelementptr inbounds %struct.textint, %struct.textint* %5953, i32 0, i32 1
  %5955 = load i64, i64* %5954, align 8
  %5956 = icmp slt i64 %5955, 0
  br i1 %5956, label %5957, label %5994

5957:                                             ; preds = %5950
  br i1 true, label %5958, label %5959

5958:                                             ; preds = %5957
  br i1 false, label %5960, label %5982

5959:                                             ; preds = %5957
  br i1 false, label %5960, label %5982

5960:                                             ; preds = %5959, %5958
  %5961 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5962 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5961, i64 -1
  %5963 = bitcast %union.YYSTYPE* %5962 to %struct.textint*
  %5964 = getelementptr inbounds %struct.textint, %struct.textint* %5963, i32 0, i32 1
  %5965 = load i64, i64* %5964, align 8
  %5966 = icmp eq i64 %5965, -1
  br i1 %5966, label %5967, label %5982

5967:                                             ; preds = %5960
  br i1 true, label %5968, label %5975

5968:                                             ; preds = %5967
  %5969 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5970 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5969, i64 0
  %5971 = bitcast %union.YYSTYPE* %5970 to i64*
  %5972 = load i64, i64* %5971, align 8
  %5973 = add nsw i64 %5972, -2147483648
  %5974 = icmp slt i64 0, %5973
  br i1 %5974, label %6006, label %6022

5975:                                             ; preds = %5967
  %5976 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5977 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5976, i64 0
  %5978 = bitcast %union.YYSTYPE* %5977 to i64*
  %5979 = load i64, i64* %5978, align 8
  %5980 = sub nsw i64 %5979, 1
  %5981 = icmp slt i64 2147483647, %5980
  br i1 %5981, label %6006, label %6022

5982:                                             ; preds = %5960, %5959, %5958
  %5983 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5984 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5983, i64 -1
  %5985 = bitcast %union.YYSTYPE* %5984 to %struct.textint*
  %5986 = getelementptr inbounds %struct.textint, %struct.textint* %5985, i32 0, i32 1
  %5987 = load i64, i64* %5986, align 8
  %5988 = sdiv i64 -2147483648, %5987
  %5989 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5990 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5989, i64 0
  %5991 = bitcast %union.YYSTYPE* %5990 to i64*
  %5992 = load i64, i64* %5991, align 8
  %5993 = icmp slt i64 %5988, %5992
  br i1 %5993, label %6006, label %6022

5994:                                             ; preds = %5950
  %5995 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %5996 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %5995, i64 0
  %5997 = bitcast %union.YYSTYPE* %5996 to i64*
  %5998 = load i64, i64* %5997, align 8
  %5999 = sdiv i64 2147483647, %5998
  %6000 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6001 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6000, i64 -1
  %6002 = bitcast %union.YYSTYPE* %6001 to %struct.textint*
  %6003 = getelementptr inbounds %struct.textint, %struct.textint* %6002, i32 0, i32 1
  %6004 = load i64, i64* %6003, align 8
  %6005 = icmp slt i64 %5999, %6004
  br i1 %6005, label %6006, label %6022

6006:                                             ; preds = %5994, %5982, %5975, %5968, %5949, %5931, %5923, %5908, %5889, %5856
  %6007 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6008 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6007, i64 -1
  %6009 = bitcast %union.YYSTYPE* %6008 to %struct.textint*
  %6010 = getelementptr inbounds %struct.textint, %struct.textint* %6009, i32 0, i32 1
  %6011 = load i64, i64* %6010, align 8
  %6012 = trunc i64 %6011 to i32
  %6013 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6014 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6013, i64 0
  %6015 = bitcast %union.YYSTYPE* %6014 to i64*
  %6016 = load i64, i64* %6015, align 8
  %6017 = trunc i64 %6016 to i32
  %6018 = mul i32 %6012, %6017
  %6019 = sext i32 %6018 to i64
  %6020 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %6021 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %6020, i32 0, i32 2
  store i64 %6019, i64* %6021, align 8
  br i1 true, label %6985, label %6986

6022:                                             ; preds = %5994, %5982, %5975, %5968, %5949, %5931, %5923, %5916, %5908, %5889, %5856
  %6023 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6024 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6023, i64 -1
  %6025 = bitcast %union.YYSTYPE* %6024 to %struct.textint*
  %6026 = getelementptr inbounds %struct.textint, %struct.textint* %6025, i32 0, i32 1
  %6027 = load i64, i64* %6026, align 8
  %6028 = trunc i64 %6027 to i32
  %6029 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6030 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6029, i64 0
  %6031 = bitcast %union.YYSTYPE* %6030 to i64*
  %6032 = load i64, i64* %6031, align 8
  %6033 = trunc i64 %6032 to i32
  %6034 = mul i32 %6028, %6033
  %6035 = sext i32 %6034 to i64
  %6036 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %6037 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %6036, i32 0, i32 2
  store i64 %6035, i64* %6037, align 8
  br i1 false, label %6985, label %6986

6038:                                             ; preds = %5841
  %6039 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6040 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6039, i64 0
  %6041 = bitcast %union.YYSTYPE* %6040 to i64*
  %6042 = load i64, i64* %6041, align 8
  %6043 = icmp slt i64 %6042, 0
  br i1 %6043, label %6044, label %6139

6044:                                             ; preds = %6038
  %6045 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6046 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6045, i64 -1
  %6047 = bitcast %union.YYSTYPE* %6046 to %struct.textint*
  %6048 = getelementptr inbounds %struct.textint, %struct.textint* %6047, i32 0, i32 1
  %6049 = load i64, i64* %6048, align 8
  %6050 = icmp slt i64 %6049, 0
  br i1 %6050, label %6051, label %6094

6051:                                             ; preds = %6044
  br i1 true, label %6052, label %6064

6052:                                             ; preds = %6051
  %6053 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6054 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6053, i64 -1
  %6055 = bitcast %union.YYSTYPE* %6054 to %struct.textint*
  %6056 = getelementptr inbounds %struct.textint, %struct.textint* %6055, i32 0, i32 1
  %6057 = load i64, i64* %6056, align 8
  %6058 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6059 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6058, i64 0
  %6060 = bitcast %union.YYSTYPE* %6059 to i64*
  %6061 = load i64, i64* %6060, align 8
  %6062 = sdiv i64 4294967295, %6061
  %6063 = icmp slt i64 %6057, %6062
  br i1 %6063, label %6202, label %6218

6064:                                             ; preds = %6051
  br i1 true, label %6065, label %6071

6065:                                             ; preds = %6064
  %6066 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6067 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6066, i64 0
  %6068 = bitcast %union.YYSTYPE* %6067 to i64*
  %6069 = load i64, i64* %6068, align 8
  %6070 = icmp slt i64 %6069, -9223372036854775807
  br i1 %6070, label %6077, label %6078

6071:                                             ; preds = %6064
  %6072 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6073 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6072, i64 0
  %6074 = bitcast %union.YYSTYPE* %6073 to i64*
  %6075 = load i64, i64* %6074, align 8
  %6076 = icmp slt i64 0, %6075
  br i1 %6076, label %6077, label %6078

6077:                                             ; preds = %6071, %6065
  br label %6085

6078:                                             ; preds = %6071, %6065
  %6079 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6080 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6079, i64 0
  %6081 = bitcast %union.YYSTYPE* %6080 to i64*
  %6082 = load i64, i64* %6081, align 8
  %6083 = sub nsw i64 0, %6082
  %6084 = sdiv i64 4294967295, %6083
  br label %6085

6085:                                             ; preds = %6078, %6077
  %6086 = phi i64 [ 0, %6077 ], [ %6084, %6078 ]
  %6087 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6088 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6087, i64 -1
  %6089 = bitcast %union.YYSTYPE* %6088 to %struct.textint*
  %6090 = getelementptr inbounds %struct.textint, %struct.textint* %6089, i32 0, i32 1
  %6091 = load i64, i64* %6090, align 8
  %6092 = sub nsw i64 -1, %6091
  %6093 = icmp sle i64 %6086, %6092
  br i1 %6093, label %6202, label %6218

6094:                                             ; preds = %6044
  br i1 true, label %6095, label %6096

6095:                                             ; preds = %6094
  br i1 false, label %6097, label %6127

6096:                                             ; preds = %6094
  br i1 false, label %6097, label %6127

6097:                                             ; preds = %6096, %6095
  %6098 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6099 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6098, i64 0
  %6100 = bitcast %union.YYSTYPE* %6099 to i64*
  %6101 = load i64, i64* %6100, align 8
  %6102 = icmp eq i64 %6101, -1
  br i1 %6102, label %6103, label %6127

6103:                                             ; preds = %6097
  br i1 true, label %6104, label %6112

6104:                                             ; preds = %6103
  %6105 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6106 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6105, i64 -1
  %6107 = bitcast %union.YYSTYPE* %6106 to %struct.textint*
  %6108 = getelementptr inbounds %struct.textint, %struct.textint* %6107, i32 0, i32 1
  %6109 = load i64, i64* %6108, align 8
  %6110 = add nsw i64 %6109, 0
  %6111 = icmp slt i64 0, %6110
  br i1 %6111, label %6202, label %6218

6112:                                             ; preds = %6103
  %6113 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6114 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6113, i64 -1
  %6115 = bitcast %union.YYSTYPE* %6114 to %struct.textint*
  %6116 = getelementptr inbounds %struct.textint, %struct.textint* %6115, i32 0, i32 1
  %6117 = load i64, i64* %6116, align 8
  %6118 = icmp slt i64 0, %6117
  br i1 %6118, label %6119, label %6218

6119:                                             ; preds = %6112
  %6120 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6121 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6120, i64 -1
  %6122 = bitcast %union.YYSTYPE* %6121 to %struct.textint*
  %6123 = getelementptr inbounds %struct.textint, %struct.textint* %6122, i32 0, i32 1
  %6124 = load i64, i64* %6123, align 8
  %6125 = sub nsw i64 %6124, 1
  %6126 = icmp slt i64 -1, %6125
  br i1 %6126, label %6202, label %6218

6127:                                             ; preds = %6097, %6096, %6095
  %6128 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6129 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6128, i64 0
  %6130 = bitcast %union.YYSTYPE* %6129 to i64*
  %6131 = load i64, i64* %6130, align 8
  %6132 = sdiv i64 0, %6131
  %6133 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6134 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6133, i64 -1
  %6135 = bitcast %union.YYSTYPE* %6134 to %struct.textint*
  %6136 = getelementptr inbounds %struct.textint, %struct.textint* %6135, i32 0, i32 1
  %6137 = load i64, i64* %6136, align 8
  %6138 = icmp slt i64 %6132, %6137
  br i1 %6138, label %6202, label %6218

6139:                                             ; preds = %6038
  %6140 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6141 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6140, i64 0
  %6142 = bitcast %union.YYSTYPE* %6141 to i64*
  %6143 = load i64, i64* %6142, align 8
  %6144 = icmp eq i64 %6143, 0
  br i1 %6144, label %6145, label %6146

6145:                                             ; preds = %6139
  br i1 false, label %6202, label %6218

6146:                                             ; preds = %6139
  %6147 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6148 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6147, i64 -1
  %6149 = bitcast %union.YYSTYPE* %6148 to %struct.textint*
  %6150 = getelementptr inbounds %struct.textint, %struct.textint* %6149, i32 0, i32 1
  %6151 = load i64, i64* %6150, align 8
  %6152 = icmp slt i64 %6151, 0
  br i1 %6152, label %6153, label %6190

6153:                                             ; preds = %6146
  br i1 true, label %6154, label %6155

6154:                                             ; preds = %6153
  br i1 false, label %6156, label %6178

6155:                                             ; preds = %6153
  br i1 false, label %6156, label %6178

6156:                                             ; preds = %6155, %6154
  %6157 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6158 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6157, i64 -1
  %6159 = bitcast %union.YYSTYPE* %6158 to %struct.textint*
  %6160 = getelementptr inbounds %struct.textint, %struct.textint* %6159, i32 0, i32 1
  %6161 = load i64, i64* %6160, align 8
  %6162 = icmp eq i64 %6161, -1
  br i1 %6162, label %6163, label %6178

6163:                                             ; preds = %6156
  br i1 true, label %6164, label %6171

6164:                                             ; preds = %6163
  %6165 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6166 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6165, i64 0
  %6167 = bitcast %union.YYSTYPE* %6166 to i64*
  %6168 = load i64, i64* %6167, align 8
  %6169 = add nsw i64 %6168, 0
  %6170 = icmp slt i64 0, %6169
  br i1 %6170, label %6202, label %6218

6171:                                             ; preds = %6163
  %6172 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6173 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6172, i64 0
  %6174 = bitcast %union.YYSTYPE* %6173 to i64*
  %6175 = load i64, i64* %6174, align 8
  %6176 = sub nsw i64 %6175, 1
  %6177 = icmp slt i64 -1, %6176
  br i1 %6177, label %6202, label %6218

6178:                                             ; preds = %6156, %6155, %6154
  %6179 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6180 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6179, i64 -1
  %6181 = bitcast %union.YYSTYPE* %6180 to %struct.textint*
  %6182 = getelementptr inbounds %struct.textint, %struct.textint* %6181, i32 0, i32 1
  %6183 = load i64, i64* %6182, align 8
  %6184 = sdiv i64 0, %6183
  %6185 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6186 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6185, i64 0
  %6187 = bitcast %union.YYSTYPE* %6186 to i64*
  %6188 = load i64, i64* %6187, align 8
  %6189 = icmp slt i64 %6184, %6188
  br i1 %6189, label %6202, label %6218

6190:                                             ; preds = %6146
  %6191 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6192 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6191, i64 0
  %6193 = bitcast %union.YYSTYPE* %6192 to i64*
  %6194 = load i64, i64* %6193, align 8
  %6195 = sdiv i64 4294967295, %6194
  %6196 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6197 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6196, i64 -1
  %6198 = bitcast %union.YYSTYPE* %6197 to %struct.textint*
  %6199 = getelementptr inbounds %struct.textint, %struct.textint* %6198, i32 0, i32 1
  %6200 = load i64, i64* %6199, align 8
  %6201 = icmp slt i64 %6195, %6200
  br i1 %6201, label %6202, label %6218

6202:                                             ; preds = %6190, %6178, %6171, %6164, %6145, %6127, %6119, %6104, %6085, %6052
  %6203 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6204 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6203, i64 -1
  %6205 = bitcast %union.YYSTYPE* %6204 to %struct.textint*
  %6206 = getelementptr inbounds %struct.textint, %struct.textint* %6205, i32 0, i32 1
  %6207 = load i64, i64* %6206, align 8
  %6208 = trunc i64 %6207 to i32
  %6209 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6210 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6209, i64 0
  %6211 = bitcast %union.YYSTYPE* %6210 to i64*
  %6212 = load i64, i64* %6211, align 8
  %6213 = trunc i64 %6212 to i32
  %6214 = mul i32 %6208, %6213
  %6215 = zext i32 %6214 to i64
  %6216 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %6217 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %6216, i32 0, i32 2
  store i64 %6215, i64* %6217, align 8
  br i1 true, label %6985, label %6986

6218:                                             ; preds = %6190, %6178, %6171, %6164, %6145, %6127, %6119, %6112, %6104, %6085, %6052
  %6219 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6220 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6219, i64 -1
  %6221 = bitcast %union.YYSTYPE* %6220 to %struct.textint*
  %6222 = getelementptr inbounds %struct.textint, %struct.textint* %6221, i32 0, i32 1
  %6223 = load i64, i64* %6222, align 8
  %6224 = trunc i64 %6223 to i32
  %6225 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6226 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6225, i64 0
  %6227 = bitcast %union.YYSTYPE* %6226 to i64*
  %6228 = load i64, i64* %6227, align 8
  %6229 = trunc i64 %6228 to i32
  %6230 = mul i32 %6224, %6229
  %6231 = zext i32 %6230 to i64
  %6232 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %6233 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %6232, i32 0, i32 2
  store i64 %6231, i64* %6233, align 8
  br i1 false, label %6985, label %6986

6234:                                             ; preds = %5840
  br i1 true, label %6235, label %6610

6235:                                             ; preds = %6234
  br i1 true, label %6236, label %6420

6236:                                             ; preds = %6235
  %6237 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6238 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6237, i64 0
  %6239 = bitcast %union.YYSTYPE* %6238 to i64*
  %6240 = load i64, i64* %6239, align 8
  %6241 = icmp slt i64 %6240, 0
  br i1 %6241, label %6242, label %6334

6242:                                             ; preds = %6236
  %6243 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6244 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6243, i64 -1
  %6245 = bitcast %union.YYSTYPE* %6244 to %struct.textint*
  %6246 = getelementptr inbounds %struct.textint, %struct.textint* %6245, i32 0, i32 1
  %6247 = load i64, i64* %6246, align 8
  %6248 = icmp slt i64 %6247, 0
  br i1 %6248, label %6249, label %6292

6249:                                             ; preds = %6242
  br i1 true, label %6250, label %6262

6250:                                             ; preds = %6249
  %6251 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6252 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6251, i64 -1
  %6253 = bitcast %union.YYSTYPE* %6252 to %struct.textint*
  %6254 = getelementptr inbounds %struct.textint, %struct.textint* %6253, i32 0, i32 1
  %6255 = load i64, i64* %6254, align 8
  %6256 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6257 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6256, i64 0
  %6258 = bitcast %union.YYSTYPE* %6257 to i64*
  %6259 = load i64, i64* %6258, align 8
  %6260 = sdiv i64 9223372036854775807, %6259
  %6261 = icmp slt i64 %6255, %6260
  br i1 %6261, label %6394, label %6407

6262:                                             ; preds = %6249
  br i1 true, label %6263, label %6269

6263:                                             ; preds = %6262
  %6264 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6265 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6264, i64 0
  %6266 = bitcast %union.YYSTYPE* %6265 to i64*
  %6267 = load i64, i64* %6266, align 8
  %6268 = icmp slt i64 %6267, -9223372036854775807
  br i1 %6268, label %6275, label %6276

6269:                                             ; preds = %6262
  %6270 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6271 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6270, i64 0
  %6272 = bitcast %union.YYSTYPE* %6271 to i64*
  %6273 = load i64, i64* %6272, align 8
  %6274 = icmp slt i64 0, %6273
  br i1 %6274, label %6275, label %6276

6275:                                             ; preds = %6269, %6263
  br label %6283

6276:                                             ; preds = %6269, %6263
  %6277 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6278 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6277, i64 0
  %6279 = bitcast %union.YYSTYPE* %6278 to i64*
  %6280 = load i64, i64* %6279, align 8
  %6281 = sub nsw i64 0, %6280
  %6282 = sdiv i64 9223372036854775807, %6281
  br label %6283

6283:                                             ; preds = %6276, %6275
  %6284 = phi i64 [ 0, %6275 ], [ %6282, %6276 ]
  %6285 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6286 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6285, i64 -1
  %6287 = bitcast %union.YYSTYPE* %6286 to %struct.textint*
  %6288 = getelementptr inbounds %struct.textint, %struct.textint* %6287, i32 0, i32 1
  %6289 = load i64, i64* %6288, align 8
  %6290 = sub nsw i64 -1, %6289
  %6291 = icmp sle i64 %6284, %6290
  br i1 %6291, label %6394, label %6407

6292:                                             ; preds = %6242
  %6293 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6294 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6293, i64 0
  %6295 = bitcast %union.YYSTYPE* %6294 to i64*
  %6296 = load i64, i64* %6295, align 8
  %6297 = icmp eq i64 %6296, -1
  br i1 %6297, label %6298, label %6322

6298:                                             ; preds = %6292
  br i1 true, label %6299, label %6307

6299:                                             ; preds = %6298
  %6300 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6301 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6300, i64 -1
  %6302 = bitcast %union.YYSTYPE* %6301 to %struct.textint*
  %6303 = getelementptr inbounds %struct.textint, %struct.textint* %6302, i32 0, i32 1
  %6304 = load i64, i64* %6303, align 8
  %6305 = add nsw i64 %6304, -9223372036854775808
  %6306 = icmp slt i64 0, %6305
  br i1 %6306, label %6394, label %6407

6307:                                             ; preds = %6298
  %6308 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6309 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6308, i64 -1
  %6310 = bitcast %union.YYSTYPE* %6309 to %struct.textint*
  %6311 = getelementptr inbounds %struct.textint, %struct.textint* %6310, i32 0, i32 1
  %6312 = load i64, i64* %6311, align 8
  %6313 = icmp slt i64 0, %6312
  br i1 %6313, label %6314, label %6407

6314:                                             ; preds = %6307
  %6315 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6316 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6315, i64 -1
  %6317 = bitcast %union.YYSTYPE* %6316 to %struct.textint*
  %6318 = getelementptr inbounds %struct.textint, %struct.textint* %6317, i32 0, i32 1
  %6319 = load i64, i64* %6318, align 8
  %6320 = sub nsw i64 %6319, 1
  %6321 = icmp slt i64 9223372036854775807, %6320
  br i1 %6321, label %6394, label %6407

6322:                                             ; preds = %6292
  %6323 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6324 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6323, i64 0
  %6325 = bitcast %union.YYSTYPE* %6324 to i64*
  %6326 = load i64, i64* %6325, align 8
  %6327 = sdiv i64 -9223372036854775808, %6326
  %6328 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6329 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6328, i64 -1
  %6330 = bitcast %union.YYSTYPE* %6329 to %struct.textint*
  %6331 = getelementptr inbounds %struct.textint, %struct.textint* %6330, i32 0, i32 1
  %6332 = load i64, i64* %6331, align 8
  %6333 = icmp slt i64 %6327, %6332
  br i1 %6333, label %6394, label %6407

6334:                                             ; preds = %6236
  %6335 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6336 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6335, i64 0
  %6337 = bitcast %union.YYSTYPE* %6336 to i64*
  %6338 = load i64, i64* %6337, align 8
  %6339 = icmp eq i64 %6338, 0
  br i1 %6339, label %6340, label %6341

6340:                                             ; preds = %6334
  br i1 false, label %6394, label %6407

6341:                                             ; preds = %6334
  %6342 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6343 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6342, i64 -1
  %6344 = bitcast %union.YYSTYPE* %6343 to %struct.textint*
  %6345 = getelementptr inbounds %struct.textint, %struct.textint* %6344, i32 0, i32 1
  %6346 = load i64, i64* %6345, align 8
  %6347 = icmp slt i64 %6346, 0
  br i1 %6347, label %6348, label %6382

6348:                                             ; preds = %6341
  %6349 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6350 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6349, i64 -1
  %6351 = bitcast %union.YYSTYPE* %6350 to %struct.textint*
  %6352 = getelementptr inbounds %struct.textint, %struct.textint* %6351, i32 0, i32 1
  %6353 = load i64, i64* %6352, align 8
  %6354 = icmp eq i64 %6353, -1
  br i1 %6354, label %6355, label %6370

6355:                                             ; preds = %6348
  br i1 true, label %6356, label %6363

6356:                                             ; preds = %6355
  %6357 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6358 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6357, i64 0
  %6359 = bitcast %union.YYSTYPE* %6358 to i64*
  %6360 = load i64, i64* %6359, align 8
  %6361 = add nsw i64 %6360, -9223372036854775808
  %6362 = icmp slt i64 0, %6361
  br i1 %6362, label %6394, label %6407

6363:                                             ; preds = %6355
  %6364 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6365 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6364, i64 0
  %6366 = bitcast %union.YYSTYPE* %6365 to i64*
  %6367 = load i64, i64* %6366, align 8
  %6368 = sub nsw i64 %6367, 1
  %6369 = icmp slt i64 9223372036854775807, %6368
  br i1 %6369, label %6394, label %6407

6370:                                             ; preds = %6348
  %6371 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6372 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6371, i64 -1
  %6373 = bitcast %union.YYSTYPE* %6372 to %struct.textint*
  %6374 = getelementptr inbounds %struct.textint, %struct.textint* %6373, i32 0, i32 1
  %6375 = load i64, i64* %6374, align 8
  %6376 = sdiv i64 -9223372036854775808, %6375
  %6377 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6378 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6377, i64 0
  %6379 = bitcast %union.YYSTYPE* %6378 to i64*
  %6380 = load i64, i64* %6379, align 8
  %6381 = icmp slt i64 %6376, %6380
  br i1 %6381, label %6394, label %6407

6382:                                             ; preds = %6341
  %6383 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6384 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6383, i64 0
  %6385 = bitcast %union.YYSTYPE* %6384 to i64*
  %6386 = load i64, i64* %6385, align 8
  %6387 = sdiv i64 9223372036854775807, %6386
  %6388 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6389 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6388, i64 -1
  %6390 = bitcast %union.YYSTYPE* %6389 to %struct.textint*
  %6391 = getelementptr inbounds %struct.textint, %struct.textint* %6390, i32 0, i32 1
  %6392 = load i64, i64* %6391, align 8
  %6393 = icmp slt i64 %6387, %6392
  br i1 %6393, label %6394, label %6407

6394:                                             ; preds = %6382, %6370, %6363, %6356, %6340, %6322, %6314, %6299, %6283, %6250
  %6395 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6396 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6395, i64 -1
  %6397 = bitcast %union.YYSTYPE* %6396 to %struct.textint*
  %6398 = getelementptr inbounds %struct.textint, %struct.textint* %6397, i32 0, i32 1
  %6399 = load i64, i64* %6398, align 8
  %6400 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6401 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6400, i64 0
  %6402 = bitcast %union.YYSTYPE* %6401 to i64*
  %6403 = load i64, i64* %6402, align 8
  %6404 = mul i64 %6399, %6403
  %6405 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %6406 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %6405, i32 0, i32 2
  store i64 %6404, i64* %6406, align 8
  br i1 true, label %6985, label %6986

6407:                                             ; preds = %6382, %6370, %6363, %6356, %6340, %6322, %6314, %6307, %6299, %6283, %6250
  %6408 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6409 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6408, i64 -1
  %6410 = bitcast %union.YYSTYPE* %6409 to %struct.textint*
  %6411 = getelementptr inbounds %struct.textint, %struct.textint* %6410, i32 0, i32 1
  %6412 = load i64, i64* %6411, align 8
  %6413 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6414 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6413, i64 0
  %6415 = bitcast %union.YYSTYPE* %6414 to i64*
  %6416 = load i64, i64* %6415, align 8
  %6417 = mul i64 %6412, %6416
  %6418 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %6419 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %6418, i32 0, i32 2
  store i64 %6417, i64* %6419, align 8
  br i1 false, label %6985, label %6986

6420:                                             ; preds = %6235
  %6421 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6422 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6421, i64 0
  %6423 = bitcast %union.YYSTYPE* %6422 to i64*
  %6424 = load i64, i64* %6423, align 8
  %6425 = icmp slt i64 %6424, 0
  br i1 %6425, label %6426, label %6521

6426:                                             ; preds = %6420
  %6427 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6428 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6427, i64 -1
  %6429 = bitcast %union.YYSTYPE* %6428 to %struct.textint*
  %6430 = getelementptr inbounds %struct.textint, %struct.textint* %6429, i32 0, i32 1
  %6431 = load i64, i64* %6430, align 8
  %6432 = icmp slt i64 %6431, 0
  br i1 %6432, label %6433, label %6476

6433:                                             ; preds = %6426
  br i1 false, label %6434, label %6446

6434:                                             ; preds = %6433
  %6435 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6436 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6435, i64 -1
  %6437 = bitcast %union.YYSTYPE* %6436 to %struct.textint*
  %6438 = getelementptr inbounds %struct.textint, %struct.textint* %6437, i32 0, i32 1
  %6439 = load i64, i64* %6438, align 8
  %6440 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6441 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6440, i64 0
  %6442 = bitcast %union.YYSTYPE* %6441 to i64*
  %6443 = load i64, i64* %6442, align 8
  %6444 = udiv i64 -1, %6443
  %6445 = icmp ult i64 %6439, %6444
  br i1 %6445, label %6584, label %6597

6446:                                             ; preds = %6433
  br i1 true, label %6447, label %6453

6447:                                             ; preds = %6446
  %6448 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6449 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6448, i64 0
  %6450 = bitcast %union.YYSTYPE* %6449 to i64*
  %6451 = load i64, i64* %6450, align 8
  %6452 = icmp slt i64 %6451, -9223372036854775807
  br i1 %6452, label %6459, label %6460

6453:                                             ; preds = %6446
  %6454 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6455 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6454, i64 0
  %6456 = bitcast %union.YYSTYPE* %6455 to i64*
  %6457 = load i64, i64* %6456, align 8
  %6458 = icmp slt i64 0, %6457
  br i1 %6458, label %6459, label %6460

6459:                                             ; preds = %6453, %6447
  br label %6467

6460:                                             ; preds = %6453, %6447
  %6461 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6462 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6461, i64 0
  %6463 = bitcast %union.YYSTYPE* %6462 to i64*
  %6464 = load i64, i64* %6463, align 8
  %6465 = sub nsw i64 0, %6464
  %6466 = udiv i64 -1, %6465
  br label %6467

6467:                                             ; preds = %6460, %6459
  %6468 = phi i64 [ 1, %6459 ], [ %6466, %6460 ]
  %6469 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6470 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6469, i64 -1
  %6471 = bitcast %union.YYSTYPE* %6470 to %struct.textint*
  %6472 = getelementptr inbounds %struct.textint, %struct.textint* %6471, i32 0, i32 1
  %6473 = load i64, i64* %6472, align 8
  %6474 = sub nsw i64 -1, %6473
  %6475 = icmp ule i64 %6468, %6474
  br i1 %6475, label %6584, label %6597

6476:                                             ; preds = %6426
  br i1 true, label %6477, label %6478

6477:                                             ; preds = %6476
  br i1 false, label %6479, label %6509

6478:                                             ; preds = %6476
  br i1 false, label %6479, label %6509

6479:                                             ; preds = %6478, %6477
  %6480 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6481 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6480, i64 0
  %6482 = bitcast %union.YYSTYPE* %6481 to i64*
  %6483 = load i64, i64* %6482, align 8
  %6484 = icmp eq i64 %6483, -1
  br i1 %6484, label %6485, label %6509

6485:                                             ; preds = %6479
  br i1 true, label %6486, label %6494

6486:                                             ; preds = %6485
  %6487 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6488 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6487, i64 -1
  %6489 = bitcast %union.YYSTYPE* %6488 to %struct.textint*
  %6490 = getelementptr inbounds %struct.textint, %struct.textint* %6489, i32 0, i32 1
  %6491 = load i64, i64* %6490, align 8
  %6492 = add nsw i64 %6491, 0
  %6493 = icmp slt i64 0, %6492
  br i1 %6493, label %6584, label %6597

6494:                                             ; preds = %6485
  %6495 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6496 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6495, i64 -1
  %6497 = bitcast %union.YYSTYPE* %6496 to %struct.textint*
  %6498 = getelementptr inbounds %struct.textint, %struct.textint* %6497, i32 0, i32 1
  %6499 = load i64, i64* %6498, align 8
  %6500 = icmp slt i64 0, %6499
  br i1 %6500, label %6501, label %6597

6501:                                             ; preds = %6494
  %6502 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6503 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6502, i64 -1
  %6504 = bitcast %union.YYSTYPE* %6503 to %struct.textint*
  %6505 = getelementptr inbounds %struct.textint, %struct.textint* %6504, i32 0, i32 1
  %6506 = load i64, i64* %6505, align 8
  %6507 = sub nsw i64 %6506, 1
  %6508 = icmp slt i64 -1, %6507
  br i1 %6508, label %6584, label %6597

6509:                                             ; preds = %6479, %6478, %6477
  %6510 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6511 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6510, i64 0
  %6512 = bitcast %union.YYSTYPE* %6511 to i64*
  %6513 = load i64, i64* %6512, align 8
  %6514 = sdiv i64 0, %6513
  %6515 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6516 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6515, i64 -1
  %6517 = bitcast %union.YYSTYPE* %6516 to %struct.textint*
  %6518 = getelementptr inbounds %struct.textint, %struct.textint* %6517, i32 0, i32 1
  %6519 = load i64, i64* %6518, align 8
  %6520 = icmp slt i64 %6514, %6519
  br i1 %6520, label %6584, label %6597

6521:                                             ; preds = %6420
  %6522 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6523 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6522, i64 0
  %6524 = bitcast %union.YYSTYPE* %6523 to i64*
  %6525 = load i64, i64* %6524, align 8
  %6526 = icmp eq i64 %6525, 0
  br i1 %6526, label %6527, label %6528

6527:                                             ; preds = %6521
  br i1 false, label %6584, label %6597

6528:                                             ; preds = %6521
  %6529 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6530 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6529, i64 -1
  %6531 = bitcast %union.YYSTYPE* %6530 to %struct.textint*
  %6532 = getelementptr inbounds %struct.textint, %struct.textint* %6531, i32 0, i32 1
  %6533 = load i64, i64* %6532, align 8
  %6534 = icmp slt i64 %6533, 0
  br i1 %6534, label %6535, label %6572

6535:                                             ; preds = %6528
  br i1 true, label %6536, label %6537

6536:                                             ; preds = %6535
  br i1 false, label %6538, label %6560

6537:                                             ; preds = %6535
  br i1 false, label %6538, label %6560

6538:                                             ; preds = %6537, %6536
  %6539 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6540 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6539, i64 -1
  %6541 = bitcast %union.YYSTYPE* %6540 to %struct.textint*
  %6542 = getelementptr inbounds %struct.textint, %struct.textint* %6541, i32 0, i32 1
  %6543 = load i64, i64* %6542, align 8
  %6544 = icmp eq i64 %6543, -1
  br i1 %6544, label %6545, label %6560

6545:                                             ; preds = %6538
  br i1 true, label %6546, label %6553

6546:                                             ; preds = %6545
  %6547 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6548 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6547, i64 0
  %6549 = bitcast %union.YYSTYPE* %6548 to i64*
  %6550 = load i64, i64* %6549, align 8
  %6551 = add nsw i64 %6550, 0
  %6552 = icmp slt i64 0, %6551
  br i1 %6552, label %6584, label %6597

6553:                                             ; preds = %6545
  %6554 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6555 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6554, i64 0
  %6556 = bitcast %union.YYSTYPE* %6555 to i64*
  %6557 = load i64, i64* %6556, align 8
  %6558 = sub nsw i64 %6557, 1
  %6559 = icmp slt i64 -1, %6558
  br i1 %6559, label %6584, label %6597

6560:                                             ; preds = %6538, %6537, %6536
  %6561 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6562 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6561, i64 -1
  %6563 = bitcast %union.YYSTYPE* %6562 to %struct.textint*
  %6564 = getelementptr inbounds %struct.textint, %struct.textint* %6563, i32 0, i32 1
  %6565 = load i64, i64* %6564, align 8
  %6566 = sdiv i64 0, %6565
  %6567 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6568 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6567, i64 0
  %6569 = bitcast %union.YYSTYPE* %6568 to i64*
  %6570 = load i64, i64* %6569, align 8
  %6571 = icmp slt i64 %6566, %6570
  br i1 %6571, label %6584, label %6597

6572:                                             ; preds = %6528
  %6573 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6574 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6573, i64 0
  %6575 = bitcast %union.YYSTYPE* %6574 to i64*
  %6576 = load i64, i64* %6575, align 8
  %6577 = udiv i64 -1, %6576
  %6578 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6579 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6578, i64 -1
  %6580 = bitcast %union.YYSTYPE* %6579 to %struct.textint*
  %6581 = getelementptr inbounds %struct.textint, %struct.textint* %6580, i32 0, i32 1
  %6582 = load i64, i64* %6581, align 8
  %6583 = icmp ult i64 %6577, %6582
  br i1 %6583, label %6584, label %6597

6584:                                             ; preds = %6572, %6560, %6553, %6546, %6527, %6509, %6501, %6486, %6467, %6434
  %6585 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6586 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6585, i64 -1
  %6587 = bitcast %union.YYSTYPE* %6586 to %struct.textint*
  %6588 = getelementptr inbounds %struct.textint, %struct.textint* %6587, i32 0, i32 1
  %6589 = load i64, i64* %6588, align 8
  %6590 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6591 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6590, i64 0
  %6592 = bitcast %union.YYSTYPE* %6591 to i64*
  %6593 = load i64, i64* %6592, align 8
  %6594 = mul i64 %6589, %6593
  %6595 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %6596 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %6595, i32 0, i32 2
  store i64 %6594, i64* %6596, align 8
  br i1 true, label %6985, label %6986

6597:                                             ; preds = %6572, %6560, %6553, %6546, %6527, %6509, %6501, %6494, %6486, %6467, %6434
  %6598 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6599 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6598, i64 -1
  %6600 = bitcast %union.YYSTYPE* %6599 to %struct.textint*
  %6601 = getelementptr inbounds %struct.textint, %struct.textint* %6600, i32 0, i32 1
  %6602 = load i64, i64* %6601, align 8
  %6603 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6604 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6603, i64 0
  %6605 = bitcast %union.YYSTYPE* %6604 to i64*
  %6606 = load i64, i64* %6605, align 8
  %6607 = mul i64 %6602, %6606
  %6608 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %6609 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %6608, i32 0, i32 2
  store i64 %6607, i64* %6609, align 8
  br i1 false, label %6985, label %6986

6610:                                             ; preds = %6234
  br i1 true, label %6611, label %6795

6611:                                             ; preds = %6610
  %6612 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6613 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6612, i64 0
  %6614 = bitcast %union.YYSTYPE* %6613 to i64*
  %6615 = load i64, i64* %6614, align 8
  %6616 = icmp slt i64 %6615, 0
  br i1 %6616, label %6617, label %6709

6617:                                             ; preds = %6611
  %6618 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6619 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6618, i64 -1
  %6620 = bitcast %union.YYSTYPE* %6619 to %struct.textint*
  %6621 = getelementptr inbounds %struct.textint, %struct.textint* %6620, i32 0, i32 1
  %6622 = load i64, i64* %6621, align 8
  %6623 = icmp slt i64 %6622, 0
  br i1 %6623, label %6624, label %6667

6624:                                             ; preds = %6617
  br i1 true, label %6625, label %6637

6625:                                             ; preds = %6624
  %6626 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6627 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6626, i64 -1
  %6628 = bitcast %union.YYSTYPE* %6627 to %struct.textint*
  %6629 = getelementptr inbounds %struct.textint, %struct.textint* %6628, i32 0, i32 1
  %6630 = load i64, i64* %6629, align 8
  %6631 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6632 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6631, i64 0
  %6633 = bitcast %union.YYSTYPE* %6632 to i64*
  %6634 = load i64, i64* %6633, align 8
  %6635 = sdiv i64 9223372036854775807, %6634
  %6636 = icmp slt i64 %6630, %6635
  br i1 %6636, label %6769, label %6782

6637:                                             ; preds = %6624
  br i1 true, label %6638, label %6644

6638:                                             ; preds = %6637
  %6639 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6640 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6639, i64 0
  %6641 = bitcast %union.YYSTYPE* %6640 to i64*
  %6642 = load i64, i64* %6641, align 8
  %6643 = icmp slt i64 %6642, -9223372036854775807
  br i1 %6643, label %6650, label %6651

6644:                                             ; preds = %6637
  %6645 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6646 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6645, i64 0
  %6647 = bitcast %union.YYSTYPE* %6646 to i64*
  %6648 = load i64, i64* %6647, align 8
  %6649 = icmp slt i64 0, %6648
  br i1 %6649, label %6650, label %6651

6650:                                             ; preds = %6644, %6638
  br label %6658

6651:                                             ; preds = %6644, %6638
  %6652 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6653 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6652, i64 0
  %6654 = bitcast %union.YYSTYPE* %6653 to i64*
  %6655 = load i64, i64* %6654, align 8
  %6656 = sub nsw i64 0, %6655
  %6657 = sdiv i64 9223372036854775807, %6656
  br label %6658

6658:                                             ; preds = %6651, %6650
  %6659 = phi i64 [ 0, %6650 ], [ %6657, %6651 ]
  %6660 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6661 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6660, i64 -1
  %6662 = bitcast %union.YYSTYPE* %6661 to %struct.textint*
  %6663 = getelementptr inbounds %struct.textint, %struct.textint* %6662, i32 0, i32 1
  %6664 = load i64, i64* %6663, align 8
  %6665 = sub nsw i64 -1, %6664
  %6666 = icmp sle i64 %6659, %6665
  br i1 %6666, label %6769, label %6782

6667:                                             ; preds = %6617
  %6668 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6669 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6668, i64 0
  %6670 = bitcast %union.YYSTYPE* %6669 to i64*
  %6671 = load i64, i64* %6670, align 8
  %6672 = icmp eq i64 %6671, -1
  br i1 %6672, label %6673, label %6697

6673:                                             ; preds = %6667
  br i1 true, label %6674, label %6682

6674:                                             ; preds = %6673
  %6675 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6676 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6675, i64 -1
  %6677 = bitcast %union.YYSTYPE* %6676 to %struct.textint*
  %6678 = getelementptr inbounds %struct.textint, %struct.textint* %6677, i32 0, i32 1
  %6679 = load i64, i64* %6678, align 8
  %6680 = add nsw i64 %6679, -9223372036854775808
  %6681 = icmp slt i64 0, %6680
  br i1 %6681, label %6769, label %6782

6682:                                             ; preds = %6673
  %6683 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6684 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6683, i64 -1
  %6685 = bitcast %union.YYSTYPE* %6684 to %struct.textint*
  %6686 = getelementptr inbounds %struct.textint, %struct.textint* %6685, i32 0, i32 1
  %6687 = load i64, i64* %6686, align 8
  %6688 = icmp slt i64 0, %6687
  br i1 %6688, label %6689, label %6782

6689:                                             ; preds = %6682
  %6690 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6691 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6690, i64 -1
  %6692 = bitcast %union.YYSTYPE* %6691 to %struct.textint*
  %6693 = getelementptr inbounds %struct.textint, %struct.textint* %6692, i32 0, i32 1
  %6694 = load i64, i64* %6693, align 8
  %6695 = sub nsw i64 %6694, 1
  %6696 = icmp slt i64 9223372036854775807, %6695
  br i1 %6696, label %6769, label %6782

6697:                                             ; preds = %6667
  %6698 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6699 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6698, i64 0
  %6700 = bitcast %union.YYSTYPE* %6699 to i64*
  %6701 = load i64, i64* %6700, align 8
  %6702 = sdiv i64 -9223372036854775808, %6701
  %6703 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6704 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6703, i64 -1
  %6705 = bitcast %union.YYSTYPE* %6704 to %struct.textint*
  %6706 = getelementptr inbounds %struct.textint, %struct.textint* %6705, i32 0, i32 1
  %6707 = load i64, i64* %6706, align 8
  %6708 = icmp slt i64 %6702, %6707
  br i1 %6708, label %6769, label %6782

6709:                                             ; preds = %6611
  %6710 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6711 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6710, i64 0
  %6712 = bitcast %union.YYSTYPE* %6711 to i64*
  %6713 = load i64, i64* %6712, align 8
  %6714 = icmp eq i64 %6713, 0
  br i1 %6714, label %6715, label %6716

6715:                                             ; preds = %6709
  br i1 false, label %6769, label %6782

6716:                                             ; preds = %6709
  %6717 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6718 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6717, i64 -1
  %6719 = bitcast %union.YYSTYPE* %6718 to %struct.textint*
  %6720 = getelementptr inbounds %struct.textint, %struct.textint* %6719, i32 0, i32 1
  %6721 = load i64, i64* %6720, align 8
  %6722 = icmp slt i64 %6721, 0
  br i1 %6722, label %6723, label %6757

6723:                                             ; preds = %6716
  %6724 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6725 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6724, i64 -1
  %6726 = bitcast %union.YYSTYPE* %6725 to %struct.textint*
  %6727 = getelementptr inbounds %struct.textint, %struct.textint* %6726, i32 0, i32 1
  %6728 = load i64, i64* %6727, align 8
  %6729 = icmp eq i64 %6728, -1
  br i1 %6729, label %6730, label %6745

6730:                                             ; preds = %6723
  br i1 true, label %6731, label %6738

6731:                                             ; preds = %6730
  %6732 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6733 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6732, i64 0
  %6734 = bitcast %union.YYSTYPE* %6733 to i64*
  %6735 = load i64, i64* %6734, align 8
  %6736 = add nsw i64 %6735, -9223372036854775808
  %6737 = icmp slt i64 0, %6736
  br i1 %6737, label %6769, label %6782

6738:                                             ; preds = %6730
  %6739 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6740 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6739, i64 0
  %6741 = bitcast %union.YYSTYPE* %6740 to i64*
  %6742 = load i64, i64* %6741, align 8
  %6743 = sub nsw i64 %6742, 1
  %6744 = icmp slt i64 9223372036854775807, %6743
  br i1 %6744, label %6769, label %6782

6745:                                             ; preds = %6723
  %6746 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6747 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6746, i64 -1
  %6748 = bitcast %union.YYSTYPE* %6747 to %struct.textint*
  %6749 = getelementptr inbounds %struct.textint, %struct.textint* %6748, i32 0, i32 1
  %6750 = load i64, i64* %6749, align 8
  %6751 = sdiv i64 -9223372036854775808, %6750
  %6752 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6753 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6752, i64 0
  %6754 = bitcast %union.YYSTYPE* %6753 to i64*
  %6755 = load i64, i64* %6754, align 8
  %6756 = icmp slt i64 %6751, %6755
  br i1 %6756, label %6769, label %6782

6757:                                             ; preds = %6716
  %6758 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6759 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6758, i64 0
  %6760 = bitcast %union.YYSTYPE* %6759 to i64*
  %6761 = load i64, i64* %6760, align 8
  %6762 = sdiv i64 9223372036854775807, %6761
  %6763 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6764 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6763, i64 -1
  %6765 = bitcast %union.YYSTYPE* %6764 to %struct.textint*
  %6766 = getelementptr inbounds %struct.textint, %struct.textint* %6765, i32 0, i32 1
  %6767 = load i64, i64* %6766, align 8
  %6768 = icmp slt i64 %6762, %6767
  br i1 %6768, label %6769, label %6782

6769:                                             ; preds = %6757, %6745, %6738, %6731, %6715, %6697, %6689, %6674, %6658, %6625
  %6770 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6771 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6770, i64 -1
  %6772 = bitcast %union.YYSTYPE* %6771 to %struct.textint*
  %6773 = getelementptr inbounds %struct.textint, %struct.textint* %6772, i32 0, i32 1
  %6774 = load i64, i64* %6773, align 8
  %6775 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6776 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6775, i64 0
  %6777 = bitcast %union.YYSTYPE* %6776 to i64*
  %6778 = load i64, i64* %6777, align 8
  %6779 = mul i64 %6774, %6778
  %6780 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %6781 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %6780, i32 0, i32 2
  store i64 %6779, i64* %6781, align 8
  br i1 true, label %6985, label %6986

6782:                                             ; preds = %6757, %6745, %6738, %6731, %6715, %6697, %6689, %6682, %6674, %6658, %6625
  %6783 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6784 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6783, i64 -1
  %6785 = bitcast %union.YYSTYPE* %6784 to %struct.textint*
  %6786 = getelementptr inbounds %struct.textint, %struct.textint* %6785, i32 0, i32 1
  %6787 = load i64, i64* %6786, align 8
  %6788 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6789 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6788, i64 0
  %6790 = bitcast %union.YYSTYPE* %6789 to i64*
  %6791 = load i64, i64* %6790, align 8
  %6792 = mul i64 %6787, %6791
  %6793 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %6794 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %6793, i32 0, i32 2
  store i64 %6792, i64* %6794, align 8
  br i1 false, label %6985, label %6986

6795:                                             ; preds = %6610
  %6796 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6797 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6796, i64 0
  %6798 = bitcast %union.YYSTYPE* %6797 to i64*
  %6799 = load i64, i64* %6798, align 8
  %6800 = icmp slt i64 %6799, 0
  br i1 %6800, label %6801, label %6896

6801:                                             ; preds = %6795
  %6802 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6803 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6802, i64 -1
  %6804 = bitcast %union.YYSTYPE* %6803 to %struct.textint*
  %6805 = getelementptr inbounds %struct.textint, %struct.textint* %6804, i32 0, i32 1
  %6806 = load i64, i64* %6805, align 8
  %6807 = icmp slt i64 %6806, 0
  br i1 %6807, label %6808, label %6851

6808:                                             ; preds = %6801
  br i1 false, label %6809, label %6821

6809:                                             ; preds = %6808
  %6810 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6811 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6810, i64 -1
  %6812 = bitcast %union.YYSTYPE* %6811 to %struct.textint*
  %6813 = getelementptr inbounds %struct.textint, %struct.textint* %6812, i32 0, i32 1
  %6814 = load i64, i64* %6813, align 8
  %6815 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6816 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6815, i64 0
  %6817 = bitcast %union.YYSTYPE* %6816 to i64*
  %6818 = load i64, i64* %6817, align 8
  %6819 = udiv i64 -1, %6818
  %6820 = icmp ult i64 %6814, %6819
  br i1 %6820, label %6959, label %6972

6821:                                             ; preds = %6808
  br i1 true, label %6822, label %6828

6822:                                             ; preds = %6821
  %6823 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6824 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6823, i64 0
  %6825 = bitcast %union.YYSTYPE* %6824 to i64*
  %6826 = load i64, i64* %6825, align 8
  %6827 = icmp slt i64 %6826, -9223372036854775807
  br i1 %6827, label %6834, label %6835

6828:                                             ; preds = %6821
  %6829 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6830 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6829, i64 0
  %6831 = bitcast %union.YYSTYPE* %6830 to i64*
  %6832 = load i64, i64* %6831, align 8
  %6833 = icmp slt i64 0, %6832
  br i1 %6833, label %6834, label %6835

6834:                                             ; preds = %6828, %6822
  br label %6842

6835:                                             ; preds = %6828, %6822
  %6836 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6837 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6836, i64 0
  %6838 = bitcast %union.YYSTYPE* %6837 to i64*
  %6839 = load i64, i64* %6838, align 8
  %6840 = sub nsw i64 0, %6839
  %6841 = udiv i64 -1, %6840
  br label %6842

6842:                                             ; preds = %6835, %6834
  %6843 = phi i64 [ 1, %6834 ], [ %6841, %6835 ]
  %6844 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6845 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6844, i64 -1
  %6846 = bitcast %union.YYSTYPE* %6845 to %struct.textint*
  %6847 = getelementptr inbounds %struct.textint, %struct.textint* %6846, i32 0, i32 1
  %6848 = load i64, i64* %6847, align 8
  %6849 = sub nsw i64 -1, %6848
  %6850 = icmp ule i64 %6843, %6849
  br i1 %6850, label %6959, label %6972

6851:                                             ; preds = %6801
  br i1 true, label %6852, label %6853

6852:                                             ; preds = %6851
  br i1 false, label %6854, label %6884

6853:                                             ; preds = %6851
  br i1 false, label %6854, label %6884

6854:                                             ; preds = %6853, %6852
  %6855 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6856 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6855, i64 0
  %6857 = bitcast %union.YYSTYPE* %6856 to i64*
  %6858 = load i64, i64* %6857, align 8
  %6859 = icmp eq i64 %6858, -1
  br i1 %6859, label %6860, label %6884

6860:                                             ; preds = %6854
  br i1 true, label %6861, label %6869

6861:                                             ; preds = %6860
  %6862 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6863 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6862, i64 -1
  %6864 = bitcast %union.YYSTYPE* %6863 to %struct.textint*
  %6865 = getelementptr inbounds %struct.textint, %struct.textint* %6864, i32 0, i32 1
  %6866 = load i64, i64* %6865, align 8
  %6867 = add nsw i64 %6866, 0
  %6868 = icmp slt i64 0, %6867
  br i1 %6868, label %6959, label %6972

6869:                                             ; preds = %6860
  %6870 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6871 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6870, i64 -1
  %6872 = bitcast %union.YYSTYPE* %6871 to %struct.textint*
  %6873 = getelementptr inbounds %struct.textint, %struct.textint* %6872, i32 0, i32 1
  %6874 = load i64, i64* %6873, align 8
  %6875 = icmp slt i64 0, %6874
  br i1 %6875, label %6876, label %6972

6876:                                             ; preds = %6869
  %6877 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6878 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6877, i64 -1
  %6879 = bitcast %union.YYSTYPE* %6878 to %struct.textint*
  %6880 = getelementptr inbounds %struct.textint, %struct.textint* %6879, i32 0, i32 1
  %6881 = load i64, i64* %6880, align 8
  %6882 = sub nsw i64 %6881, 1
  %6883 = icmp slt i64 -1, %6882
  br i1 %6883, label %6959, label %6972

6884:                                             ; preds = %6854, %6853, %6852
  %6885 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6886 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6885, i64 0
  %6887 = bitcast %union.YYSTYPE* %6886 to i64*
  %6888 = load i64, i64* %6887, align 8
  %6889 = sdiv i64 0, %6888
  %6890 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6891 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6890, i64 -1
  %6892 = bitcast %union.YYSTYPE* %6891 to %struct.textint*
  %6893 = getelementptr inbounds %struct.textint, %struct.textint* %6892, i32 0, i32 1
  %6894 = load i64, i64* %6893, align 8
  %6895 = icmp slt i64 %6889, %6894
  br i1 %6895, label %6959, label %6972

6896:                                             ; preds = %6795
  %6897 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6898 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6897, i64 0
  %6899 = bitcast %union.YYSTYPE* %6898 to i64*
  %6900 = load i64, i64* %6899, align 8
  %6901 = icmp eq i64 %6900, 0
  br i1 %6901, label %6902, label %6903

6902:                                             ; preds = %6896
  br i1 false, label %6959, label %6972

6903:                                             ; preds = %6896
  %6904 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6905 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6904, i64 -1
  %6906 = bitcast %union.YYSTYPE* %6905 to %struct.textint*
  %6907 = getelementptr inbounds %struct.textint, %struct.textint* %6906, i32 0, i32 1
  %6908 = load i64, i64* %6907, align 8
  %6909 = icmp slt i64 %6908, 0
  br i1 %6909, label %6910, label %6947

6910:                                             ; preds = %6903
  br i1 true, label %6911, label %6912

6911:                                             ; preds = %6910
  br i1 false, label %6913, label %6935

6912:                                             ; preds = %6910
  br i1 false, label %6913, label %6935

6913:                                             ; preds = %6912, %6911
  %6914 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6915 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6914, i64 -1
  %6916 = bitcast %union.YYSTYPE* %6915 to %struct.textint*
  %6917 = getelementptr inbounds %struct.textint, %struct.textint* %6916, i32 0, i32 1
  %6918 = load i64, i64* %6917, align 8
  %6919 = icmp eq i64 %6918, -1
  br i1 %6919, label %6920, label %6935

6920:                                             ; preds = %6913
  br i1 true, label %6921, label %6928

6921:                                             ; preds = %6920
  %6922 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6923 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6922, i64 0
  %6924 = bitcast %union.YYSTYPE* %6923 to i64*
  %6925 = load i64, i64* %6924, align 8
  %6926 = add nsw i64 %6925, 0
  %6927 = icmp slt i64 0, %6926
  br i1 %6927, label %6959, label %6972

6928:                                             ; preds = %6920
  %6929 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6930 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6929, i64 0
  %6931 = bitcast %union.YYSTYPE* %6930 to i64*
  %6932 = load i64, i64* %6931, align 8
  %6933 = sub nsw i64 %6932, 1
  %6934 = icmp slt i64 -1, %6933
  br i1 %6934, label %6959, label %6972

6935:                                             ; preds = %6913, %6912, %6911
  %6936 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6937 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6936, i64 -1
  %6938 = bitcast %union.YYSTYPE* %6937 to %struct.textint*
  %6939 = getelementptr inbounds %struct.textint, %struct.textint* %6938, i32 0, i32 1
  %6940 = load i64, i64* %6939, align 8
  %6941 = sdiv i64 0, %6940
  %6942 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6943 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6942, i64 0
  %6944 = bitcast %union.YYSTYPE* %6943 to i64*
  %6945 = load i64, i64* %6944, align 8
  %6946 = icmp slt i64 %6941, %6945
  br i1 %6946, label %6959, label %6972

6947:                                             ; preds = %6903
  %6948 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6949 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6948, i64 0
  %6950 = bitcast %union.YYSTYPE* %6949 to i64*
  %6951 = load i64, i64* %6950, align 8
  %6952 = udiv i64 -1, %6951
  %6953 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6954 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6953, i64 -1
  %6955 = bitcast %union.YYSTYPE* %6954 to %struct.textint*
  %6956 = getelementptr inbounds %struct.textint, %struct.textint* %6955, i32 0, i32 1
  %6957 = load i64, i64* %6956, align 8
  %6958 = icmp ult i64 %6952, %6957
  br i1 %6958, label %6959, label %6972

6959:                                             ; preds = %6947, %6935, %6928, %6921, %6902, %6884, %6876, %6861, %6842, %6809
  %6960 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6961 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6960, i64 -1
  %6962 = bitcast %union.YYSTYPE* %6961 to %struct.textint*
  %6963 = getelementptr inbounds %struct.textint, %struct.textint* %6962, i32 0, i32 1
  %6964 = load i64, i64* %6963, align 8
  %6965 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6966 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6965, i64 0
  %6967 = bitcast %union.YYSTYPE* %6966 to i64*
  %6968 = load i64, i64* %6967, align 8
  %6969 = mul i64 %6964, %6968
  %6970 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %6971 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %6970, i32 0, i32 2
  store i64 %6969, i64* %6971, align 8
  br i1 true, label %6985, label %6986

6972:                                             ; preds = %6947, %6935, %6928, %6921, %6902, %6884, %6876, %6869, %6861, %6842, %6809
  %6973 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6974 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6973, i64 -1
  %6975 = bitcast %union.YYSTYPE* %6974 to %struct.textint*
  %6976 = getelementptr inbounds %struct.textint, %struct.textint* %6975, i32 0, i32 1
  %6977 = load i64, i64* %6976, align 8
  %6978 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6979 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6978, i64 0
  %6980 = bitcast %union.YYSTYPE* %6979 to i64*
  %6981 = load i64, i64* %6980, align 8
  %6982 = mul i64 %6977, %6981
  %6983 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %6984 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %6983, i32 0, i32 2
  store i64 %6982, i64* %6984, align 8
  br i1 false, label %6985, label %6986

6985:                                             ; preds = %6972, %6959, %6782, %6769, %6597, %6584, %6407, %6394, %6218, %6202, %6022, %6006, %5823, %5806, %5625, %5608, %5425, %5408, %5227, %5210
  br label %7297

6986:                                             ; preds = %6972, %6959, %6782, %6769, %6597, %6584, %6407, %6394, %6218, %6202, %6022, %6006, %5823, %5806, %5625, %5608, %5425, %5408, %5227, %5210
  br label %7121

6987:                                             ; preds = %245
  %6988 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %6989 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %49, i32 0, i32 0
  store i64 0, i64* %6989, align 8
  %6990 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %49, i32 0, i32 1
  store i64 0, i64* %6990, align 8
  %6991 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %49, i32 0, i32 2
  store i64 0, i64* %6991, align 8
  %6992 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %49, i32 0, i32 3
  store i64 0, i64* %6992, align 8
  %6993 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %49, i32 0, i32 4
  store i64 0, i64* %6993, align 8
  %6994 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %49, i32 0, i32 5
  store i64 0, i64* %6994, align 8
  %6995 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %49, i32 0, i32 6
  store i32 0, i32* %6995, align 8
  %6996 = bitcast %struct.relative_time* %6988 to i8*
  %6997 = bitcast %struct.relative_time* %49 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6996, i8* align 8 %6997, i64 56, i1 false)
  %6998 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %6999 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %6998, i64 -1
  %7000 = bitcast %union.YYSTYPE* %6999 to %struct.textint*
  %7001 = getelementptr inbounds %struct.textint, %struct.textint* %7000, i32 0, i32 1
  %7002 = load i64, i64* %7001, align 8
  %7003 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %7004 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %7003, i32 0, i32 3
  store i64 %7002, i64* %7004, align 8
  br label %7121

7005:                                             ; preds = %245
  %7006 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %7007 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %50, i32 0, i32 0
  store i64 0, i64* %7007, align 8
  %7008 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %50, i32 0, i32 1
  store i64 0, i64* %7008, align 8
  %7009 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %50, i32 0, i32 2
  store i64 0, i64* %7009, align 8
  %7010 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %50, i32 0, i32 3
  store i64 0, i64* %7010, align 8
  %7011 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %50, i32 0, i32 4
  store i64 0, i64* %7011, align 8
  %7012 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %50, i32 0, i32 5
  store i64 0, i64* %7012, align 8
  %7013 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %50, i32 0, i32 6
  store i32 0, i32* %7013, align 8
  %7014 = bitcast %struct.relative_time* %7006 to i8*
  %7015 = bitcast %struct.relative_time* %50 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7014, i8* align 8 %7015, i64 56, i1 false)
  %7016 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %7017 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %7016, i64 -1
  %7018 = bitcast %union.YYSTYPE* %7017 to %struct.textint*
  %7019 = getelementptr inbounds %struct.textint, %struct.textint* %7018, i32 0, i32 1
  %7020 = load i64, i64* %7019, align 8
  %7021 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %7022 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %7021, i32 0, i32 4
  store i64 %7020, i64* %7022, align 8
  br label %7121

7023:                                             ; preds = %245
  %7024 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %7025 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %51, i32 0, i32 0
  store i64 0, i64* %7025, align 8
  %7026 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %51, i32 0, i32 1
  store i64 0, i64* %7026, align 8
  %7027 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %51, i32 0, i32 2
  store i64 0, i64* %7027, align 8
  %7028 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %51, i32 0, i32 3
  store i64 0, i64* %7028, align 8
  %7029 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %51, i32 0, i32 4
  store i64 0, i64* %7029, align 8
  %7030 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %51, i32 0, i32 5
  store i64 0, i64* %7030, align 8
  %7031 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %51, i32 0, i32 6
  store i32 0, i32* %7031, align 8
  %7032 = bitcast %struct.relative_time* %7024 to i8*
  %7033 = bitcast %struct.relative_time* %51 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7032, i8* align 8 %7033, i64 56, i1 false)
  %7034 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %7035 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %7034, i64 -1
  %7036 = bitcast %union.YYSTYPE* %7035 to %struct.textint*
  %7037 = getelementptr inbounds %struct.textint, %struct.textint* %7036, i32 0, i32 1
  %7038 = load i64, i64* %7037, align 8
  %7039 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %7040 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %7039, i32 0, i32 5
  store i64 %7038, i64* %7040, align 8
  br label %7121

7041:                                             ; preds = %245
  %7042 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %7043 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %52, i32 0, i32 0
  store i64 0, i64* %7043, align 8
  %7044 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %52, i32 0, i32 1
  store i64 0, i64* %7044, align 8
  %7045 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %52, i32 0, i32 2
  store i64 0, i64* %7045, align 8
  %7046 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %52, i32 0, i32 3
  store i64 0, i64* %7046, align 8
  %7047 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %52, i32 0, i32 4
  store i64 0, i64* %7047, align 8
  %7048 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %52, i32 0, i32 5
  store i64 0, i64* %7048, align 8
  %7049 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %52, i32 0, i32 6
  store i32 0, i32* %7049, align 8
  %7050 = bitcast %struct.relative_time* %7042 to i8*
  %7051 = bitcast %struct.relative_time* %52 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7050, i8* align 8 %7051, i64 56, i1 false)
  %7052 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %7053 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %7052, i64 0
  %7054 = bitcast %union.YYSTYPE* %7053 to i64*
  %7055 = load i64, i64* %7054, align 8
  %7056 = bitcast %union.YYSTYPE* %18 to %struct.relative_time*
  %7057 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %7056, i32 0, i32 2
  store i64 %7055, i64* %7057, align 8
  br label %7121

7058:                                             ; preds = %245
  %7059 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %7060 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %7059, i64 0
  %7061 = bitcast %union.YYSTYPE* %7060 to %struct.textint*
  %7062 = getelementptr inbounds %struct.textint, %struct.textint* %7061, i32 0, i32 1
  %7063 = load i64, i64* %7062, align 8
  %7064 = call zeroext i1 @time_overflow(i64 %7063)
  br i1 %7064, label %7065, label %7066

7065:                                             ; preds = %7058
  br label %7297

7066:                                             ; preds = %7058
  %7067 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %7068 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %7067, i64 0
  %7069 = bitcast %union.YYSTYPE* %7068 to %struct.textint*
  %7070 = getelementptr inbounds %struct.textint, %struct.textint* %7069, i32 0, i32 1
  %7071 = load i64, i64* %7070, align 8
  %7072 = bitcast %union.YYSTYPE* %18 to %struct.timespec*
  %7073 = getelementptr inbounds %struct.timespec, %struct.timespec* %7072, i32 0, i32 0
  store i64 %7071, i64* %7073, align 8
  %7074 = bitcast %union.YYSTYPE* %18 to %struct.timespec*
  %7075 = getelementptr inbounds %struct.timespec, %struct.timespec* %7074, i32 0, i32 1
  store i64 0, i64* %7075, align 8
  br label %7121

7076:                                             ; preds = %245
  %7077 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %7078 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %7077, i64 0
  %7079 = bitcast %union.YYSTYPE* %7078 to %struct.textint*
  %7080 = getelementptr inbounds %struct.textint, %struct.textint* %7079, i32 0, i32 1
  %7081 = load i64, i64* %7080, align 8
  %7082 = call zeroext i1 @time_overflow(i64 %7081)
  br i1 %7082, label %7083, label %7084

7083:                                             ; preds = %7076
  br label %7297

7084:                                             ; preds = %7076
  %7085 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %7086 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %7085, i64 0
  %7087 = bitcast %union.YYSTYPE* %7086 to %struct.textint*
  %7088 = getelementptr inbounds %struct.textint, %struct.textint* %7087, i32 0, i32 1
  %7089 = load i64, i64* %7088, align 8
  %7090 = bitcast %union.YYSTYPE* %18 to %struct.timespec*
  %7091 = getelementptr inbounds %struct.timespec, %struct.timespec* %7090, i32 0, i32 0
  store i64 %7089, i64* %7091, align 8
  %7092 = bitcast %union.YYSTYPE* %18 to %struct.timespec*
  %7093 = getelementptr inbounds %struct.timespec, %struct.timespec* %7092, i32 0, i32 1
  store i64 0, i64* %7093, align 8
  br label %7121

7094:                                             ; preds = %245
  %7095 = load %struct.parser_control*, %struct.parser_control** %2, align 8
  %7096 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %7097 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %7096, i64 0
  %7098 = bitcast %union.YYSTYPE* %7097 to %struct.textint*
  call void @digits_to_date_time(%struct.parser_control* %7095, %struct.textint* byval(%struct.textint) align 8 %7098)
  br label %7121

7099:                                             ; preds = %245
  %7100 = load %struct.parser_control*, %struct.parser_control** %2, align 8
  %7101 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %7102 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %7101, i64 -1
  %7103 = bitcast %union.YYSTYPE* %7102 to %struct.textint*
  call void @digits_to_date_time(%struct.parser_control* %7100, %struct.textint* byval(%struct.textint) align 8 %7103)
  %7104 = load %struct.parser_control*, %struct.parser_control** %2, align 8
  %7105 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %7106 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %7105, i64 0
  %7107 = bitcast %union.YYSTYPE* %7106 to %struct.relative_time*
  %7108 = call zeroext i1 @apply_relative_time(%struct.parser_control* %7104, %struct.relative_time* byval(%struct.relative_time) align 8 %7107, i32 1)
  br i1 %7108, label %7110, label %7109

7109:                                             ; preds = %7099
  br label %7297

7110:                                             ; preds = %7099
  br label %7121

7111:                                             ; preds = %245
  %7112 = bitcast %union.YYSTYPE* %18 to i64*
  store i64 -1, i64* %7112, align 8
  br label %7121

7113:                                             ; preds = %245
  %7114 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %7115 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %7114, i64 0
  %7116 = bitcast %union.YYSTYPE* %7115 to %struct.textint*
  %7117 = getelementptr inbounds %struct.textint, %struct.textint* %7116, i32 0, i32 1
  %7118 = load i64, i64* %7117, align 8
  %7119 = bitcast %union.YYSTYPE* %18 to i64*
  store i64 %7118, i64* %7119, align 8
  br label %7121

7120:                                             ; preds = %245
  br label %7121

7121:                                             ; preds = %7120, %7113, %7111, %7110, %7094, %7084, %7066, %7041, %7023, %7005, %6987, %6986, %5016, %4998, %4985, %4959, %4933, %4915, %4898, %4885, %4867, %4850, %4837, %4819, %4802, %4785, %4784, %2831, %996, %978, %961, %948, %930, %913, %912, %904, %896, %883, %831, %817, %796, %782, %773, %733, %706, %610, %593, %577, %567, %557, %548, %539, %538, %505, %493, %476, %468, %461, %453, %452, %412, %398, %389, %359, %340, %326, %323, %320, %317, %310, %303, %296, %289, %282, %271, %259
  %7122 = load i32, i32* %19, align 4
  %7123 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %7124 = sext i32 %7122 to i64
  %7125 = sub i64 0, %7124
  %7126 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %7123, i64 %7125
  store %union.YYSTYPE* %7126, %union.YYSTYPE** %13, align 8
  %7127 = load i32, i32* %19, align 4
  %7128 = load i16*, i16** %10, align 8
  %7129 = sext i32 %7127 to i64
  %7130 = sub i64 0, %7129
  %7131 = getelementptr inbounds i16, i16* %7128, i64 %7130
  store i16* %7131, i16** %10, align 8
  store i32 0, i32* %19, align 4
  %7132 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %7133 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %7132, i32 1
  store %union.YYSTYPE* %7133, %union.YYSTYPE** %13, align 8
  %7134 = bitcast %union.YYSTYPE* %7133 to i8*
  %7135 = bitcast %union.YYSTYPE* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7134, i8* align 8 %7135, i64 56, i1 false)
  %7136 = load i32, i32* %15, align 4
  %7137 = sext i32 %7136 to i64
  %7138 = getelementptr inbounds [92 x i8], [92 x i8]* @yyr1, i64 0, i64 %7137
  %7139 = load i8, i8* %7138, align 1
  %7140 = zext i8 %7139 to i32
  %7141 = sub nsw i32 %7140, 28
  store i32 %7141, i32* %53, align 4
  %7142 = load i32, i32* %53, align 4
  %7143 = sext i32 %7142 to i64
  %7144 = getelementptr inbounds [26 x i8], [26 x i8]* @yypgoto, i64 0, i64 %7143
  %7145 = load i8, i8* %7144, align 1
  %7146 = sext i8 %7145 to i32
  %7147 = load i16*, i16** %10, align 8
  %7148 = load i16, i16* %7147, align 2
  %7149 = sext i16 %7148 to i32
  %7150 = add nsw i32 %7146, %7149
  store i32 %7150, i32* %54, align 4
  %7151 = load i32, i32* %54, align 4
  %7152 = icmp sle i32 0, %7151
  br i1 %7152, label %7153, label %7172

7153:                                             ; preds = %7121
  %7154 = load i32, i32* %54, align 4
  %7155 = icmp sle i32 %7154, 112
  br i1 %7155, label %7156, label %7172

7156:                                             ; preds = %7153
  %7157 = load i32, i32* %54, align 4
  %7158 = sext i32 %7157 to i64
  %7159 = getelementptr inbounds [113 x i8], [113 x i8]* @yycheck, i64 0, i64 %7158
  %7160 = load i8, i8* %7159, align 1
  %7161 = sext i8 %7160 to i32
  %7162 = load i16*, i16** %10, align 8
  %7163 = load i16, i16* %7162, align 2
  %7164 = sext i16 %7163 to i32
  %7165 = icmp eq i32 %7161, %7164
  br i1 %7165, label %7166, label %7172

7166:                                             ; preds = %7156
  %7167 = load i32, i32* %54, align 4
  %7168 = sext i32 %7167 to i64
  %7169 = getelementptr inbounds [113 x i8], [113 x i8]* @yytable, i64 0, i64 %7168
  %7170 = load i8, i8* %7169, align 1
  %7171 = zext i8 %7170 to i32
  br label %7178

7172:                                             ; preds = %7156, %7153, %7121
  %7173 = load i32, i32* %53, align 4
  %7174 = sext i32 %7173 to i64
  %7175 = getelementptr inbounds [26 x i8], [26 x i8]* @yydefgoto, i64 0, i64 %7174
  %7176 = load i8, i8* %7175, align 1
  %7177 = sext i8 %7176 to i32
  br label %7178

7178:                                             ; preds = %7172, %7166
  %7179 = phi i32 [ %7171, %7166 ], [ %7177, %7172 ]
  store i32 %7179, i32* %6, align 4
  br label %58

7180:                                             ; preds = %243
  %7181 = load i32, i32* %3, align 4
  %7182 = icmp eq i32 %7181, -2
  br i1 %7182, label %7183, label %7184

7183:                                             ; preds = %7180
  br label %7196

7184:                                             ; preds = %7180
  %7185 = load i32, i32* %3, align 4
  %7186 = icmp ule i32 %7185, 277
  br i1 %7186, label %7187, label %7193

7187:                                             ; preds = %7184
  %7188 = load i32, i32* %3, align 4
  %7189 = sext i32 %7188 to i64
  %7190 = getelementptr inbounds [278 x i8], [278 x i8]* @yytranslate, i64 0, i64 %7189
  %7191 = load i8, i8* %7190, align 1
  %7192 = zext i8 %7191 to i32
  br label %7194

7193:                                             ; preds = %7184
  br label %7194

7194:                                             ; preds = %7193, %7187
  %7195 = phi i32 [ %7192, %7187 ], [ 2, %7193 ]
  br label %7196

7196:                                             ; preds = %7194, %7183
  %7197 = phi i32 [ -2, %7183 ], [ %7195, %7194 ]
  store i32 %7197, i32* %17, align 4
  %7198 = load i32, i32* %7, align 4
  %7199 = icmp ne i32 %7198, 0
  br i1 %7199, label %7205, label %7200

7200:                                             ; preds = %7196
  %7201 = load i32, i32* %5, align 4
  %7202 = add nsw i32 %7201, 1
  store i32 %7202, i32* %5, align 4
  %7203 = load %struct.parser_control*, %struct.parser_control** %2, align 8
  %7204 = call i32 @yyerror(%struct.parser_control* %7203, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.12.125, i64 0, i64 0))
  br label %7205

7205:                                             ; preds = %7200, %7196
  %7206 = load i32, i32* %7, align 4
  %7207 = icmp eq i32 %7206, 3
  br i1 %7207, label %7208, label %7220

7208:                                             ; preds = %7205
  %7209 = load i32, i32* %3, align 4
  %7210 = icmp sle i32 %7209, 0
  br i1 %7210, label %7211, label %7216

7211:                                             ; preds = %7208
  %7212 = load i32, i32* %3, align 4
  %7213 = icmp eq i32 %7212, 0
  br i1 %7213, label %7214, label %7215

7214:                                             ; preds = %7211
  br label %7297

7215:                                             ; preds = %7211
  br label %7219

7216:                                             ; preds = %7208
  %7217 = load i32, i32* %17, align 4
  %7218 = load %struct.parser_control*, %struct.parser_control** %2, align 8
  call void @yydestruct(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.13.126, i64 0, i64 0), i32 %7217, %union.YYSTYPE* %4, %struct.parser_control* %7218)
  store i32 -2, i32* %3, align 4
  br label %7219

7219:                                             ; preds = %7216, %7215
  br label %7220

7220:                                             ; preds = %7219, %7205
  br label %7235

7221:                                             ; No predecessors!
  %7222 = load i32, i32* %19, align 4
  %7223 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %7224 = sext i32 %7222 to i64
  %7225 = sub i64 0, %7224
  %7226 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %7223, i64 %7225
  store %union.YYSTYPE* %7226, %union.YYSTYPE** %13, align 8
  %7227 = load i32, i32* %19, align 4
  %7228 = load i16*, i16** %10, align 8
  %7229 = sext i32 %7227 to i64
  %7230 = sub i64 0, %7229
  %7231 = getelementptr inbounds i16, i16* %7228, i64 %7230
  store i16* %7231, i16** %10, align 8
  store i32 0, i32* %19, align 4
  %7232 = load i16*, i16** %10, align 8
  %7233 = load i16, i16* %7232, align 2
  %7234 = sext i16 %7233 to i32
  store i32 %7234, i32* %6, align 4
  br label %7235

7235:                                             ; preds = %7221, %7220
  store i32 3, i32* %7, align 4
  br label %7236

7236:                                             ; preds = %7275, %7235
  %7237 = load i32, i32* %6, align 4
  %7238 = sext i32 %7237 to i64
  %7239 = getelementptr inbounds [114 x i8], [114 x i8]* @yypact, i64 0, i64 %7238
  %7240 = load i8, i8* %7239, align 1
  %7241 = sext i8 %7240 to i32
  store i32 %7241, i32* %15, align 4
  %7242 = load i32, i32* %15, align 4
  %7243 = icmp eq i32 %7242, -93
  br i1 %7243, label %7270, label %7244

7244:                                             ; preds = %7236
  %7245 = load i32, i32* %15, align 4
  %7246 = add nsw i32 %7245, 1
  store i32 %7246, i32* %15, align 4
  %7247 = load i32, i32* %15, align 4
  %7248 = icmp sle i32 0, %7247
  br i1 %7248, label %7249, label %7269

7249:                                             ; preds = %7244
  %7250 = load i32, i32* %15, align 4
  %7251 = icmp sle i32 %7250, 112
  br i1 %7251, label %7252, label %7269

7252:                                             ; preds = %7249
  %7253 = load i32, i32* %15, align 4
  %7254 = sext i32 %7253 to i64
  %7255 = getelementptr inbounds [113 x i8], [113 x i8]* @yycheck, i64 0, i64 %7254
  %7256 = load i8, i8* %7255, align 1
  %7257 = sext i8 %7256 to i32
  %7258 = icmp eq i32 %7257, 1
  br i1 %7258, label %7259, label %7269

7259:                                             ; preds = %7252
  %7260 = load i32, i32* %15, align 4
  %7261 = sext i32 %7260 to i64
  %7262 = getelementptr inbounds [113 x i8], [113 x i8]* @yytable, i64 0, i64 %7261
  %7263 = load i8, i8* %7262, align 1
  %7264 = zext i8 %7263 to i32
  store i32 %7264, i32* %15, align 4
  %7265 = load i32, i32* %15, align 4
  %7266 = icmp slt i32 0, %7265
  br i1 %7266, label %7267, label %7268

7267:                                             ; preds = %7259
  br label %7290

7268:                                             ; preds = %7259
  br label %7269

7269:                                             ; preds = %7268, %7252, %7249, %7244
  br label %7270

7270:                                             ; preds = %7269, %7236
  %7271 = load i16*, i16** %10, align 8
  %7272 = load i16*, i16** %9, align 8
  %7273 = icmp eq i16* %7271, %7272
  br i1 %7273, label %7274, label %7275

7274:                                             ; preds = %7270
  br label %7297

7275:                                             ; preds = %7270
  %7276 = load i32, i32* %6, align 4
  %7277 = sext i32 %7276 to i64
  %7278 = getelementptr inbounds [114 x i8], [114 x i8]* @yystos, i64 0, i64 %7277
  %7279 = load i8, i8* %7278, align 1
  %7280 = zext i8 %7279 to i32
  %7281 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %7282 = load %struct.parser_control*, %struct.parser_control** %2, align 8
  call void @yydestruct(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.14.127, i64 0, i64 0), i32 %7280, %union.YYSTYPE* %7281, %struct.parser_control* %7282)
  %7283 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %7284 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %7283, i64 -1
  store %union.YYSTYPE* %7284, %union.YYSTYPE** %13, align 8
  %7285 = load i16*, i16** %10, align 8
  %7286 = getelementptr inbounds i16, i16* %7285, i64 -1
  store i16* %7286, i16** %10, align 8
  %7287 = load i16*, i16** %10, align 8
  %7288 = load i16, i16* %7287, align 2
  %7289 = sext i16 %7288 to i32
  store i32 %7289, i32* %6, align 4
  br label %7236

7290:                                             ; preds = %7267
  %7291 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %7292 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %7291, i32 1
  store %union.YYSTYPE* %7292, %union.YYSTYPE** %13, align 8
  %7293 = bitcast %union.YYSTYPE* %7292 to i8*
  %7294 = bitcast %union.YYSTYPE* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7293, i8* align 8 %7294, i64 56, i1 false)
  %7295 = load i32, i32* %15, align 4
  store i32 %7295, i32* %6, align 4
  br label %58

7296:                                             ; preds = %161
  store i32 0, i32* %16, align 4
  br label %7301

7297:                                             ; preds = %7274, %7214, %7109, %7083, %7065, %6985, %4783, %2830, %911, %903, %895, %882, %870, %772, %759, %732, %537, %518, %504, %492, %451, %156
  store i32 1, i32* %16, align 4
  br label %7301

7298:                                             ; preds = %97, %81
  %7299 = load %struct.parser_control*, %struct.parser_control** %2, align 8
  %7300 = call i32 @yyerror(%struct.parser_control* %7299, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.15.128, i64 0, i64 0))
  store i32 2, i32* %16, align 4
  br label %7301

7301:                                             ; preds = %7298, %7297, %7296
  %7302 = load i32, i32* %3, align 4
  %7303 = icmp ne i32 %7302, -2
  br i1 %7303, label %7304, label %7318

7304:                                             ; preds = %7301
  %7305 = load i32, i32* %3, align 4
  %7306 = icmp ule i32 %7305, 277
  br i1 %7306, label %7307, label %7313

7307:                                             ; preds = %7304
  %7308 = load i32, i32* %3, align 4
  %7309 = sext i32 %7308 to i64
  %7310 = getelementptr inbounds [278 x i8], [278 x i8]* @yytranslate, i64 0, i64 %7309
  %7311 = load i8, i8* %7310, align 1
  %7312 = zext i8 %7311 to i32
  br label %7314

7313:                                             ; preds = %7304
  br label %7314

7314:                                             ; preds = %7313, %7307
  %7315 = phi i32 [ %7312, %7307 ], [ 2, %7313 ]
  store i32 %7315, i32* %17, align 4
  %7316 = load i32, i32* %17, align 4
  %7317 = load %struct.parser_control*, %struct.parser_control** %2, align 8
  call void @yydestruct(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.16.129, i64 0, i64 0), i32 %7316, %union.YYSTYPE* %4, %struct.parser_control* %7317)
  br label %7318

7318:                                             ; preds = %7314, %7301
  %7319 = load i32, i32* %19, align 4
  %7320 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %7321 = sext i32 %7319 to i64
  %7322 = sub i64 0, %7321
  %7323 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %7320, i64 %7322
  store %union.YYSTYPE* %7323, %union.YYSTYPE** %13, align 8
  %7324 = load i32, i32* %19, align 4
  %7325 = load i16*, i16** %10, align 8
  %7326 = sext i32 %7324 to i64
  %7327 = sub i64 0, %7326
  %7328 = getelementptr inbounds i16, i16* %7325, i64 %7327
  store i16* %7328, i16** %10, align 8
  br label %7329

7329:                                             ; preds = %7333, %7318
  %7330 = load i16*, i16** %10, align 8
  %7331 = load i16*, i16** %9, align 8
  %7332 = icmp ne i16* %7330, %7331
  br i1 %7332, label %7333, label %7346

7333:                                             ; preds = %7329
  %7334 = load i16*, i16** %10, align 8
  %7335 = load i16, i16* %7334, align 2
  %7336 = sext i16 %7335 to i64
  %7337 = getelementptr inbounds [114 x i8], [114 x i8]* @yystos, i64 0, i64 %7336
  %7338 = load i8, i8* %7337, align 1
  %7339 = zext i8 %7338 to i32
  %7340 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %7341 = load %struct.parser_control*, %struct.parser_control** %2, align 8
  call void @yydestruct(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.17.130, i64 0, i64 0), i32 %7339, %union.YYSTYPE* %7340, %struct.parser_control* %7341)
  %7342 = load %union.YYSTYPE*, %union.YYSTYPE** %13, align 8
  %7343 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %7342, i64 -1
  store %union.YYSTYPE* %7343, %union.YYSTYPE** %13, align 8
  %7344 = load i16*, i16** %10, align 8
  %7345 = getelementptr inbounds i16, i16* %7344, i64 -1
  store i16* %7345, i16** %10, align 8
  br label %7329

7346:                                             ; preds = %7329
  %7347 = load i16*, i16** %9, align 8
  %7348 = getelementptr inbounds [20 x i16], [20 x i16]* %8, i64 0, i64 0
  %7349 = icmp ne i16* %7347, %7348
  br i1 %7349, label %7350, label %7353

7350:                                             ; preds = %7346
  %7351 = load i16*, i16** %9, align 8
  %7352 = bitcast i16* %7351 to i8*
  call void @free(i8* %7352) #11
  br label %7353

7353:                                             ; preds = %7350, %7346
  %7354 = load i32, i32* %16, align 4
  ret i32 %7354
}

; Function Attrs: nounwind
declare dso_local noalias i8* @malloc(i64) #1

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @yylex(%union.YYSTYPE*, %struct.parser_control*) #3 {
  %3 = alloca i32, align 4
  %4 = alloca %union.YYSTYPE*, align 8
  %5 = alloca %struct.parser_control*, align 8
  %6 = alloca i8, align 1
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca [20 x i8], align 16
  %14 = alloca i8*, align 8
  %15 = alloca %struct.table*, align 8
  %16 = alloca i64, align 8
  store %union.YYSTYPE* %0, %union.YYSTYPE** %4, align 8
  store %struct.parser_control* %1, %struct.parser_control** %5, align 8
  br label %17

17:                                               ; preds = %954, %71, %2
  br label %18

18:                                               ; preds = %26, %17
  %19 = load %struct.parser_control*, %struct.parser_control** %5, align 8
  %20 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %19, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = load i8, i8* %21, align 1
  store i8 %22, i8* %6, align 1
  %23 = load i8, i8* %6, align 1
  %24 = zext i8 %23 to i32
  %25 = call zeroext i1 @c_isspace(i32 %24)
  br i1 %25, label %26, label %31

26:                                               ; preds = %18
  %27 = load %struct.parser_control*, %struct.parser_control** %5, align 8
  %28 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %27, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  %30 = getelementptr inbounds i8, i8* %29, i32 1
  store i8* %30, i8** %28, align 8
  br label %18

31:                                               ; preds = %18
  %32 = load i8, i8* %6, align 1
  %33 = zext i8 %32 to i32
  %34 = call zeroext i1 @c_isdigit(i32 %33)
  br i1 %34, label %43, label %35

35:                                               ; preds = %31
  %36 = load i8, i8* %6, align 1
  %37 = zext i8 %36 to i32
  %38 = icmp eq i32 %37, 45
  br i1 %38, label %43, label %39

39:                                               ; preds = %35
  %40 = load i8, i8* %6, align 1
  %41 = zext i8 %40 to i32
  %42 = icmp eq i32 %41, 43
  br i1 %42, label %43, label %852

43:                                               ; preds = %39, %35, %31
  store i64 0, i64* %9, align 8
  %44 = load i8, i8* %6, align 1
  %45 = zext i8 %44 to i32
  %46 = icmp eq i32 %45, 45
  br i1 %46, label %51, label %47

47:                                               ; preds = %43
  %48 = load i8, i8* %6, align 1
  %49 = zext i8 %48 to i32
  %50 = icmp eq i32 %49, 43
  br i1 %50, label %51, label %73

51:                                               ; preds = %47, %43
  %52 = load i8, i8* %6, align 1
  %53 = zext i8 %52 to i32
  %54 = icmp eq i32 %53, 45
  %55 = zext i1 %54 to i64
  %56 = select i1 %54, i32 -1, i32 1
  store i32 %56, i32* %8, align 4
  br label %57

57:                                               ; preds = %66, %51
  %58 = load %struct.parser_control*, %struct.parser_control** %5, align 8
  %59 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %58, i32 0, i32 0
  %60 = load i8*, i8** %59, align 8
  %61 = getelementptr inbounds i8, i8* %60, i32 1
  store i8* %61, i8** %59, align 8
  %62 = load i8, i8* %61, align 1
  store i8 %62, i8* %6, align 1
  %63 = load i8, i8* %6, align 1
  %64 = zext i8 %63 to i32
  %65 = call zeroext i1 @c_isspace(i32 %64)
  br i1 %65, label %66, label %67

66:                                               ; preds = %57
  br label %57

67:                                               ; preds = %57
  %68 = load i8, i8* %6, align 1
  %69 = zext i8 %68 to i32
  %70 = call zeroext i1 @c_isdigit(i32 %69)
  br i1 %70, label %72, label %71

71:                                               ; preds = %67
  br label %17

72:                                               ; preds = %67
  br label %74

73:                                               ; preds = %47
  store i32 0, i32* %8, align 4
  br label %74

74:                                               ; preds = %73, %72
  %75 = load %struct.parser_control*, %struct.parser_control** %5, align 8
  %76 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %75, i32 0, i32 0
  %77 = load i8*, i8** %76, align 8
  store i8* %77, i8** %7, align 8
  br label %78

78:                                               ; preds = %708, %74
  br i1 false, label %79, label %208

79:                                               ; preds = %78
  br i1 false, label %144, label %80

80:                                               ; preds = %79
  br i1 false, label %81, label %111

81:                                               ; preds = %80
  %82 = load i64, i64* %9, align 8
  %83 = icmp slt i64 %82, 0
  br i1 %83, label %84, label %92

84:                                               ; preds = %81
  br i1 true, label %85, label %88

85:                                               ; preds = %84
  %86 = load i64, i64* %9, align 8
  %87 = icmp slt i64 %86, 12
  br i1 %87, label %132, label %138

88:                                               ; preds = %84
  %89 = load i64, i64* %9, align 8
  %90 = sub nsw i64 -1, %89
  %91 = icmp sle i64 -12, %90
  br i1 %91, label %132, label %138

92:                                               ; preds = %81
  br i1 true, label %93, label %94

93:                                               ; preds = %92
  br i1 false, label %95, label %108

94:                                               ; preds = %92
  br i1 false, label %95, label %108

95:                                               ; preds = %94, %93
  br i1 false, label %96, label %108

96:                                               ; preds = %95
  br i1 true, label %97, label %101

97:                                               ; preds = %96
  %98 = load i64, i64* %9, align 8
  %99 = add nsw i64 %98, -128
  %100 = icmp slt i64 0, %99
  br i1 %100, label %132, label %138

101:                                              ; preds = %96
  %102 = load i64, i64* %9, align 8
  %103 = icmp slt i64 0, %102
  br i1 %103, label %104, label %138

104:                                              ; preds = %101
  %105 = load i64, i64* %9, align 8
  %106 = sub nsw i64 %105, 1
  %107 = icmp slt i64 127, %106
  br i1 %107, label %132, label %138

108:                                              ; preds = %95, %94, %93
  %109 = load i64, i64* %9, align 8
  %110 = icmp slt i64 -12, %109
  br i1 %110, label %132, label %138

111:                                              ; preds = %80
  br i1 false, label %112, label %113

112:                                              ; preds = %111
  br i1 false, label %132, label %138

113:                                              ; preds = %111
  %114 = load i64, i64* %9, align 8
  %115 = icmp slt i64 %114, 0
  br i1 %115, label %116, label %129

116:                                              ; preds = %113
  br i1 true, label %117, label %118

117:                                              ; preds = %116
  br i1 false, label %119, label %125

118:                                              ; preds = %116
  br i1 false, label %119, label %125

119:                                              ; preds = %118, %117
  %120 = load i64, i64* %9, align 8
  %121 = icmp eq i64 %120, -1
  br i1 %121, label %122, label %125

122:                                              ; preds = %119
  br i1 true, label %123, label %124

123:                                              ; preds = %122
  br i1 false, label %132, label %138

124:                                              ; preds = %122
  br i1 false, label %132, label %138

125:                                              ; preds = %119, %118, %117
  %126 = load i64, i64* %9, align 8
  %127 = sdiv i64 -128, %126
  %128 = icmp slt i64 %127, 10
  br i1 %128, label %132, label %138

129:                                              ; preds = %113
  %130 = load i64, i64* %9, align 8
  %131 = icmp slt i64 12, %130
  br i1 %131, label %132, label %138

132:                                              ; preds = %129, %125, %124, %123, %112, %108, %104, %97, %88, %85
  %133 = load i64, i64* %9, align 8
  %134 = trunc i64 %133 to i32
  %135 = mul i32 %134, 10
  %136 = trunc i32 %135 to i8
  %137 = sext i8 %136 to i64
  store i64 %137, i64* %9, align 8
  br i1 true, label %684, label %685

138:                                              ; preds = %129, %125, %124, %123, %112, %108, %104, %101, %97, %88, %85
  %139 = load i64, i64* %9, align 8
  %140 = trunc i64 %139 to i32
  %141 = mul i32 %140, 10
  %142 = trunc i32 %141 to i8
  %143 = sext i8 %142 to i64
  store i64 %143, i64* %9, align 8
  br i1 false, label %684, label %685

144:                                              ; preds = %79
  br i1 false, label %145, label %175

145:                                              ; preds = %144
  %146 = load i64, i64* %9, align 8
  %147 = icmp slt i64 %146, 0
  br i1 %147, label %148, label %156

148:                                              ; preds = %145
  br i1 true, label %149, label %152

149:                                              ; preds = %148
  %150 = load i64, i64* %9, align 8
  %151 = icmp slt i64 %150, 25
  br i1 %151, label %196, label %202

152:                                              ; preds = %148
  %153 = load i64, i64* %9, align 8
  %154 = sub nsw i64 -1, %153
  %155 = icmp sle i64 -25, %154
  br i1 %155, label %196, label %202

156:                                              ; preds = %145
  br i1 true, label %157, label %158

157:                                              ; preds = %156
  br i1 false, label %159, label %172

158:                                              ; preds = %156
  br i1 false, label %159, label %172

159:                                              ; preds = %158, %157
  br i1 false, label %160, label %172

160:                                              ; preds = %159
  br i1 true, label %161, label %165

161:                                              ; preds = %160
  %162 = load i64, i64* %9, align 8
  %163 = add nsw i64 %162, 0
  %164 = icmp slt i64 0, %163
  br i1 %164, label %196, label %202

165:                                              ; preds = %160
  %166 = load i64, i64* %9, align 8
  %167 = icmp slt i64 0, %166
  br i1 %167, label %168, label %202

168:                                              ; preds = %165
  %169 = load i64, i64* %9, align 8
  %170 = sub nsw i64 %169, 1
  %171 = icmp slt i64 -1, %170
  br i1 %171, label %196, label %202

172:                                              ; preds = %159, %158, %157
  %173 = load i64, i64* %9, align 8
  %174 = icmp slt i64 0, %173
  br i1 %174, label %196, label %202

175:                                              ; preds = %144
  br i1 false, label %176, label %177

176:                                              ; preds = %175
  br i1 false, label %196, label %202

177:                                              ; preds = %175
  %178 = load i64, i64* %9, align 8
  %179 = icmp slt i64 %178, 0
  br i1 %179, label %180, label %193

180:                                              ; preds = %177
  br i1 true, label %181, label %182

181:                                              ; preds = %180
  br i1 false, label %183, label %189

182:                                              ; preds = %180
  br i1 false, label %183, label %189

183:                                              ; preds = %182, %181
  %184 = load i64, i64* %9, align 8
  %185 = icmp eq i64 %184, -1
  br i1 %185, label %186, label %189

186:                                              ; preds = %183
  br i1 true, label %187, label %188

187:                                              ; preds = %186
  br i1 true, label %196, label %202

188:                                              ; preds = %186
  br i1 true, label %196, label %202

189:                                              ; preds = %183, %182, %181
  %190 = load i64, i64* %9, align 8
  %191 = sdiv i64 0, %190
  %192 = icmp slt i64 %191, 10
  br i1 %192, label %196, label %202

193:                                              ; preds = %177
  %194 = load i64, i64* %9, align 8
  %195 = icmp slt i64 25, %194
  br i1 %195, label %196, label %202

196:                                              ; preds = %193, %189, %188, %187, %176, %172, %168, %161, %152, %149
  %197 = load i64, i64* %9, align 8
  %198 = trunc i64 %197 to i32
  %199 = mul i32 %198, 10
  %200 = trunc i32 %199 to i8
  %201 = zext i8 %200 to i64
  store i64 %201, i64* %9, align 8
  br i1 true, label %684, label %685

202:                                              ; preds = %193, %189, %188, %187, %176, %172, %168, %165, %161, %152, %149
  %203 = load i64, i64* %9, align 8
  %204 = trunc i64 %203 to i32
  %205 = mul i32 %204, 10
  %206 = trunc i32 %205 to i8
  %207 = zext i8 %206 to i64
  store i64 %207, i64* %9, align 8
  br i1 false, label %684, label %685

208:                                              ; preds = %78
  br i1 false, label %209, label %338

209:                                              ; preds = %208
  br i1 false, label %274, label %210

210:                                              ; preds = %209
  br i1 false, label %211, label %241

211:                                              ; preds = %210
  %212 = load i64, i64* %9, align 8
  %213 = icmp slt i64 %212, 0
  br i1 %213, label %214, label %222

214:                                              ; preds = %211
  br i1 true, label %215, label %218

215:                                              ; preds = %214
  %216 = load i64, i64* %9, align 8
  %217 = icmp slt i64 %216, 3276
  br i1 %217, label %262, label %268

218:                                              ; preds = %214
  %219 = load i64, i64* %9, align 8
  %220 = sub nsw i64 -1, %219
  %221 = icmp sle i64 -3276, %220
  br i1 %221, label %262, label %268

222:                                              ; preds = %211
  br i1 true, label %223, label %224

223:                                              ; preds = %222
  br i1 false, label %225, label %238

224:                                              ; preds = %222
  br i1 false, label %225, label %238

225:                                              ; preds = %224, %223
  br i1 false, label %226, label %238

226:                                              ; preds = %225
  br i1 true, label %227, label %231

227:                                              ; preds = %226
  %228 = load i64, i64* %9, align 8
  %229 = add nsw i64 %228, -32768
  %230 = icmp slt i64 0, %229
  br i1 %230, label %262, label %268

231:                                              ; preds = %226
  %232 = load i64, i64* %9, align 8
  %233 = icmp slt i64 0, %232
  br i1 %233, label %234, label %268

234:                                              ; preds = %231
  %235 = load i64, i64* %9, align 8
  %236 = sub nsw i64 %235, 1
  %237 = icmp slt i64 32767, %236
  br i1 %237, label %262, label %268

238:                                              ; preds = %225, %224, %223
  %239 = load i64, i64* %9, align 8
  %240 = icmp slt i64 -3276, %239
  br i1 %240, label %262, label %268

241:                                              ; preds = %210
  br i1 false, label %242, label %243

242:                                              ; preds = %241
  br i1 false, label %262, label %268

243:                                              ; preds = %241
  %244 = load i64, i64* %9, align 8
  %245 = icmp slt i64 %244, 0
  br i1 %245, label %246, label %259

246:                                              ; preds = %243
  br i1 true, label %247, label %248

247:                                              ; preds = %246
  br i1 false, label %249, label %255

248:                                              ; preds = %246
  br i1 false, label %249, label %255

249:                                              ; preds = %248, %247
  %250 = load i64, i64* %9, align 8
  %251 = icmp eq i64 %250, -1
  br i1 %251, label %252, label %255

252:                                              ; preds = %249
  br i1 true, label %253, label %254

253:                                              ; preds = %252
  br i1 false, label %262, label %268

254:                                              ; preds = %252
  br i1 false, label %262, label %268

255:                                              ; preds = %249, %248, %247
  %256 = load i64, i64* %9, align 8
  %257 = sdiv i64 -32768, %256
  %258 = icmp slt i64 %257, 10
  br i1 %258, label %262, label %268

259:                                              ; preds = %243
  %260 = load i64, i64* %9, align 8
  %261 = icmp slt i64 3276, %260
  br i1 %261, label %262, label %268

262:                                              ; preds = %259, %255, %254, %253, %242, %238, %234, %227, %218, %215
  %263 = load i64, i64* %9, align 8
  %264 = trunc i64 %263 to i32
  %265 = mul i32 %264, 10
  %266 = trunc i32 %265 to i16
  %267 = sext i16 %266 to i64
  store i64 %267, i64* %9, align 8
  br i1 true, label %684, label %685

268:                                              ; preds = %259, %255, %254, %253, %242, %238, %234, %231, %227, %218, %215
  %269 = load i64, i64* %9, align 8
  %270 = trunc i64 %269 to i32
  %271 = mul i32 %270, 10
  %272 = trunc i32 %271 to i16
  %273 = sext i16 %272 to i64
  store i64 %273, i64* %9, align 8
  br i1 false, label %684, label %685

274:                                              ; preds = %209
  br i1 false, label %275, label %305

275:                                              ; preds = %274
  %276 = load i64, i64* %9, align 8
  %277 = icmp slt i64 %276, 0
  br i1 %277, label %278, label %286

278:                                              ; preds = %275
  br i1 true, label %279, label %282

279:                                              ; preds = %278
  %280 = load i64, i64* %9, align 8
  %281 = icmp slt i64 %280, 6553
  br i1 %281, label %326, label %332

282:                                              ; preds = %278
  %283 = load i64, i64* %9, align 8
  %284 = sub nsw i64 -1, %283
  %285 = icmp sle i64 -6553, %284
  br i1 %285, label %326, label %332

286:                                              ; preds = %275
  br i1 true, label %287, label %288

287:                                              ; preds = %286
  br i1 false, label %289, label %302

288:                                              ; preds = %286
  br i1 false, label %289, label %302

289:                                              ; preds = %288, %287
  br i1 false, label %290, label %302

290:                                              ; preds = %289
  br i1 true, label %291, label %295

291:                                              ; preds = %290
  %292 = load i64, i64* %9, align 8
  %293 = add nsw i64 %292, 0
  %294 = icmp slt i64 0, %293
  br i1 %294, label %326, label %332

295:                                              ; preds = %290
  %296 = load i64, i64* %9, align 8
  %297 = icmp slt i64 0, %296
  br i1 %297, label %298, label %332

298:                                              ; preds = %295
  %299 = load i64, i64* %9, align 8
  %300 = sub nsw i64 %299, 1
  %301 = icmp slt i64 -1, %300
  br i1 %301, label %326, label %332

302:                                              ; preds = %289, %288, %287
  %303 = load i64, i64* %9, align 8
  %304 = icmp slt i64 0, %303
  br i1 %304, label %326, label %332

305:                                              ; preds = %274
  br i1 false, label %306, label %307

306:                                              ; preds = %305
  br i1 false, label %326, label %332

307:                                              ; preds = %305
  %308 = load i64, i64* %9, align 8
  %309 = icmp slt i64 %308, 0
  br i1 %309, label %310, label %323

310:                                              ; preds = %307
  br i1 true, label %311, label %312

311:                                              ; preds = %310
  br i1 false, label %313, label %319

312:                                              ; preds = %310
  br i1 false, label %313, label %319

313:                                              ; preds = %312, %311
  %314 = load i64, i64* %9, align 8
  %315 = icmp eq i64 %314, -1
  br i1 %315, label %316, label %319

316:                                              ; preds = %313
  br i1 true, label %317, label %318

317:                                              ; preds = %316
  br i1 true, label %326, label %332

318:                                              ; preds = %316
  br i1 true, label %326, label %332

319:                                              ; preds = %313, %312, %311
  %320 = load i64, i64* %9, align 8
  %321 = sdiv i64 0, %320
  %322 = icmp slt i64 %321, 10
  br i1 %322, label %326, label %332

323:                                              ; preds = %307
  %324 = load i64, i64* %9, align 8
  %325 = icmp slt i64 6553, %324
  br i1 %325, label %326, label %332

326:                                              ; preds = %323, %319, %318, %317, %306, %302, %298, %291, %282, %279
  %327 = load i64, i64* %9, align 8
  %328 = trunc i64 %327 to i32
  %329 = mul i32 %328, 10
  %330 = trunc i32 %329 to i16
  %331 = zext i16 %330 to i64
  store i64 %331, i64* %9, align 8
  br i1 true, label %684, label %685

332:                                              ; preds = %323, %319, %318, %317, %306, %302, %298, %295, %291, %282, %279
  %333 = load i64, i64* %9, align 8
  %334 = trunc i64 %333 to i32
  %335 = mul i32 %334, 10
  %336 = trunc i32 %335 to i16
  %337 = zext i16 %336 to i64
  store i64 %337, i64* %9, align 8
  br i1 false, label %684, label %685

338:                                              ; preds = %208
  br i1 false, label %339, label %461

339:                                              ; preds = %338
  br i1 true, label %340, label %399

340:                                              ; preds = %339
  br i1 false, label %341, label %368

341:                                              ; preds = %340
  %342 = load i64, i64* %9, align 8
  %343 = icmp slt i64 %342, 0
  br i1 %343, label %344, label %352

344:                                              ; preds = %341
  br i1 true, label %345, label %348

345:                                              ; preds = %344
  %346 = load i64, i64* %9, align 8
  %347 = icmp slt i64 %346, 214748364
  br i1 %347, label %389, label %394

348:                                              ; preds = %344
  %349 = load i64, i64* %9, align 8
  %350 = sub nsw i64 -1, %349
  %351 = icmp sle i64 -214748364, %350
  br i1 %351, label %389, label %394

352:                                              ; preds = %341
  br i1 false, label %353, label %365

353:                                              ; preds = %352
  br i1 true, label %354, label %358

354:                                              ; preds = %353
  %355 = load i64, i64* %9, align 8
  %356 = add nsw i64 %355, -2147483648
  %357 = icmp slt i64 0, %356
  br i1 %357, label %389, label %394

358:                                              ; preds = %353
  %359 = load i64, i64* %9, align 8
  %360 = icmp slt i64 0, %359
  br i1 %360, label %361, label %394

361:                                              ; preds = %358
  %362 = load i64, i64* %9, align 8
  %363 = sub nsw i64 %362, 1
  %364 = icmp slt i64 2147483647, %363
  br i1 %364, label %389, label %394

365:                                              ; preds = %352
  %366 = load i64, i64* %9, align 8
  %367 = icmp slt i64 -214748364, %366
  br i1 %367, label %389, label %394

368:                                              ; preds = %340
  br i1 false, label %369, label %370

369:                                              ; preds = %368
  br i1 false, label %389, label %394

370:                                              ; preds = %368
  %371 = load i64, i64* %9, align 8
  %372 = icmp slt i64 %371, 0
  br i1 %372, label %373, label %386

373:                                              ; preds = %370
  br i1 true, label %374, label %375

374:                                              ; preds = %373
  br i1 false, label %376, label %382

375:                                              ; preds = %373
  br i1 false, label %376, label %382

376:                                              ; preds = %375, %374
  %377 = load i64, i64* %9, align 8
  %378 = icmp eq i64 %377, -1
  br i1 %378, label %379, label %382

379:                                              ; preds = %376
  br i1 true, label %380, label %381

380:                                              ; preds = %379
  br i1 false, label %389, label %394

381:                                              ; preds = %379
  br i1 false, label %389, label %394

382:                                              ; preds = %376, %375, %374
  %383 = load i64, i64* %9, align 8
  %384 = sdiv i64 -2147483648, %383
  %385 = icmp slt i64 %384, 10
  br i1 %385, label %389, label %394

386:                                              ; preds = %370
  %387 = load i64, i64* %9, align 8
  %388 = icmp slt i64 214748364, %387
  br i1 %388, label %389, label %394

389:                                              ; preds = %386, %382, %381, %380, %369, %365, %361, %354, %348, %345
  %390 = load i64, i64* %9, align 8
  %391 = trunc i64 %390 to i32
  %392 = mul i32 %391, 10
  %393 = sext i32 %392 to i64
  store i64 %393, i64* %9, align 8
  br i1 true, label %684, label %685

394:                                              ; preds = %386, %382, %381, %380, %369, %365, %361, %358, %354, %348, %345
  %395 = load i64, i64* %9, align 8
  %396 = trunc i64 %395 to i32
  %397 = mul i32 %396, 10
  %398 = sext i32 %397 to i64
  store i64 %398, i64* %9, align 8
  br i1 false, label %684, label %685

399:                                              ; preds = %339
  br i1 false, label %400, label %430

400:                                              ; preds = %399
  %401 = load i64, i64* %9, align 8
  %402 = icmp slt i64 %401, 0
  br i1 %402, label %403, label %411

403:                                              ; preds = %400
  br i1 false, label %404, label %407

404:                                              ; preds = %403
  %405 = load i64, i64* %9, align 8
  %406 = icmp slt i64 %405, 429496729
  br i1 %406, label %451, label %456

407:                                              ; preds = %403
  %408 = load i64, i64* %9, align 8
  %409 = sub nsw i64 -1, %408
  %410 = icmp sle i64 1, %409
  br i1 %410, label %451, label %456

411:                                              ; preds = %400
  br i1 true, label %412, label %413

412:                                              ; preds = %411
  br i1 false, label %414, label %427

413:                                              ; preds = %411
  br i1 false, label %414, label %427

414:                                              ; preds = %413, %412
  br i1 false, label %415, label %427

415:                                              ; preds = %414
  br i1 true, label %416, label %420

416:                                              ; preds = %415
  %417 = load i64, i64* %9, align 8
  %418 = add nsw i64 %417, 0
  %419 = icmp slt i64 0, %418
  br i1 %419, label %451, label %456

420:                                              ; preds = %415
  %421 = load i64, i64* %9, align 8
  %422 = icmp slt i64 0, %421
  br i1 %422, label %423, label %456

423:                                              ; preds = %420
  %424 = load i64, i64* %9, align 8
  %425 = sub nsw i64 %424, 1
  %426 = icmp slt i64 -1, %425
  br i1 %426, label %451, label %456

427:                                              ; preds = %414, %413, %412
  %428 = load i64, i64* %9, align 8
  %429 = icmp slt i64 0, %428
  br i1 %429, label %451, label %456

430:                                              ; preds = %399
  br i1 false, label %431, label %432

431:                                              ; preds = %430
  br i1 false, label %451, label %456

432:                                              ; preds = %430
  %433 = load i64, i64* %9, align 8
  %434 = icmp slt i64 %433, 0
  br i1 %434, label %435, label %448

435:                                              ; preds = %432
  br i1 true, label %436, label %437

436:                                              ; preds = %435
  br i1 false, label %438, label %444

437:                                              ; preds = %435
  br i1 false, label %438, label %444

438:                                              ; preds = %437, %436
  %439 = load i64, i64* %9, align 8
  %440 = icmp eq i64 %439, -1
  br i1 %440, label %441, label %444

441:                                              ; preds = %438
  br i1 true, label %442, label %443

442:                                              ; preds = %441
  br i1 true, label %451, label %456

443:                                              ; preds = %441
  br i1 true, label %451, label %456

444:                                              ; preds = %438, %437, %436
  %445 = load i64, i64* %9, align 8
  %446 = sdiv i64 0, %445
  %447 = icmp slt i64 %446, 10
  br i1 %447, label %451, label %456

448:                                              ; preds = %432
  %449 = load i64, i64* %9, align 8
  %450 = icmp slt i64 429496729, %449
  br i1 %450, label %451, label %456

451:                                              ; preds = %448, %444, %443, %442, %431, %427, %423, %416, %407, %404
  %452 = load i64, i64* %9, align 8
  %453 = trunc i64 %452 to i32
  %454 = mul i32 %453, 10
  %455 = zext i32 %454 to i64
  store i64 %455, i64* %9, align 8
  br i1 true, label %684, label %685

456:                                              ; preds = %448, %444, %443, %442, %431, %427, %423, %420, %416, %407, %404
  %457 = load i64, i64* %9, align 8
  %458 = trunc i64 %457 to i32
  %459 = mul i32 %458, 10
  %460 = zext i32 %459 to i64
  store i64 %460, i64* %9, align 8
  br i1 false, label %684, label %685

461:                                              ; preds = %338
  br i1 true, label %462, label %573

462:                                              ; preds = %461
  br i1 true, label %463, label %515

463:                                              ; preds = %462
  br i1 false, label %464, label %491

464:                                              ; preds = %463
  %465 = load i64, i64* %9, align 8
  %466 = icmp slt i64 %465, 0
  br i1 %466, label %467, label %475

467:                                              ; preds = %464
  br i1 true, label %468, label %471

468:                                              ; preds = %467
  %469 = load i64, i64* %9, align 8
  %470 = icmp slt i64 %469, 922337203685477580
  br i1 %470, label %509, label %512

471:                                              ; preds = %467
  %472 = load i64, i64* %9, align 8
  %473 = sub nsw i64 -1, %472
  %474 = icmp sle i64 -922337203685477580, %473
  br i1 %474, label %509, label %512

475:                                              ; preds = %464
  br i1 false, label %476, label %488

476:                                              ; preds = %475
  br i1 true, label %477, label %481

477:                                              ; preds = %476
  %478 = load i64, i64* %9, align 8
  %479 = add nsw i64 %478, -9223372036854775808
  %480 = icmp slt i64 0, %479
  br i1 %480, label %509, label %512

481:                                              ; preds = %476
  %482 = load i64, i64* %9, align 8
  %483 = icmp slt i64 0, %482
  br i1 %483, label %484, label %512

484:                                              ; preds = %481
  %485 = load i64, i64* %9, align 8
  %486 = sub nsw i64 %485, 1
  %487 = icmp slt i64 9223372036854775807, %486
  br i1 %487, label %509, label %512

488:                                              ; preds = %475
  %489 = load i64, i64* %9, align 8
  %490 = icmp slt i64 -922337203685477580, %489
  br i1 %490, label %509, label %512

491:                                              ; preds = %463
  br i1 false, label %492, label %493

492:                                              ; preds = %491
  br i1 false, label %509, label %512

493:                                              ; preds = %491
  %494 = load i64, i64* %9, align 8
  %495 = icmp slt i64 %494, 0
  br i1 %495, label %496, label %506

496:                                              ; preds = %493
  %497 = load i64, i64* %9, align 8
  %498 = icmp eq i64 %497, -1
  br i1 %498, label %499, label %502

499:                                              ; preds = %496
  br i1 true, label %500, label %501

500:                                              ; preds = %499
  br i1 false, label %509, label %512

501:                                              ; preds = %499
  br i1 false, label %509, label %512

502:                                              ; preds = %496
  %503 = load i64, i64* %9, align 8
  %504 = sdiv i64 -9223372036854775808, %503
  %505 = icmp slt i64 %504, 10
  br i1 %505, label %509, label %512

506:                                              ; preds = %493
  %507 = load i64, i64* %9, align 8
  %508 = icmp slt i64 922337203685477580, %507
  br i1 %508, label %509, label %512

509:                                              ; preds = %506, %502, %501, %500, %492, %488, %484, %477, %471, %468
  %510 = load i64, i64* %9, align 8
  %511 = mul i64 %510, 10
  store i64 %511, i64* %9, align 8
  br i1 true, label %684, label %685

512:                                              ; preds = %506, %502, %501, %500, %492, %488, %484, %481, %477, %471, %468
  %513 = load i64, i64* %9, align 8
  %514 = mul i64 %513, 10
  store i64 %514, i64* %9, align 8
  br i1 false, label %684, label %685

515:                                              ; preds = %462
  br i1 false, label %516, label %546

516:                                              ; preds = %515
  %517 = load i64, i64* %9, align 8
  %518 = icmp slt i64 %517, 0
  br i1 %518, label %519, label %527

519:                                              ; preds = %516
  br i1 false, label %520, label %523

520:                                              ; preds = %519
  %521 = load i64, i64* %9, align 8
  %522 = icmp ult i64 %521, 1844674407370955161
  br i1 %522, label %567, label %570

523:                                              ; preds = %519
  %524 = load i64, i64* %9, align 8
  %525 = sub nsw i64 -1, %524
  %526 = icmp ule i64 1, %525
  br i1 %526, label %567, label %570

527:                                              ; preds = %516
  br i1 true, label %528, label %529

528:                                              ; preds = %527
  br i1 false, label %530, label %543

529:                                              ; preds = %527
  br i1 false, label %530, label %543

530:                                              ; preds = %529, %528
  br i1 false, label %531, label %543

531:                                              ; preds = %530
  br i1 true, label %532, label %536

532:                                              ; preds = %531
  %533 = load i64, i64* %9, align 8
  %534 = add nsw i64 %533, 0
  %535 = icmp slt i64 0, %534
  br i1 %535, label %567, label %570

536:                                              ; preds = %531
  %537 = load i64, i64* %9, align 8
  %538 = icmp slt i64 0, %537
  br i1 %538, label %539, label %570

539:                                              ; preds = %536
  %540 = load i64, i64* %9, align 8
  %541 = sub nsw i64 %540, 1
  %542 = icmp slt i64 -1, %541
  br i1 %542, label %567, label %570

543:                                              ; preds = %530, %529, %528
  %544 = load i64, i64* %9, align 8
  %545 = icmp slt i64 0, %544
  br i1 %545, label %567, label %570

546:                                              ; preds = %515
  br i1 false, label %547, label %548

547:                                              ; preds = %546
  br i1 false, label %567, label %570

548:                                              ; preds = %546
  %549 = load i64, i64* %9, align 8
  %550 = icmp slt i64 %549, 0
  br i1 %550, label %551, label %564

551:                                              ; preds = %548
  br i1 true, label %552, label %553

552:                                              ; preds = %551
  br i1 false, label %554, label %560

553:                                              ; preds = %551
  br i1 false, label %554, label %560

554:                                              ; preds = %553, %552
  %555 = load i64, i64* %9, align 8
  %556 = icmp eq i64 %555, -1
  br i1 %556, label %557, label %560

557:                                              ; preds = %554
  br i1 true, label %558, label %559

558:                                              ; preds = %557
  br i1 true, label %567, label %570

559:                                              ; preds = %557
  br i1 true, label %567, label %570

560:                                              ; preds = %554, %553, %552
  %561 = load i64, i64* %9, align 8
  %562 = sdiv i64 0, %561
  %563 = icmp slt i64 %562, 10
  br i1 %563, label %567, label %570

564:                                              ; preds = %548
  %565 = load i64, i64* %9, align 8
  %566 = icmp ult i64 1844674407370955161, %565
  br i1 %566, label %567, label %570

567:                                              ; preds = %564, %560, %559, %558, %547, %543, %539, %532, %523, %520
  %568 = load i64, i64* %9, align 8
  %569 = mul i64 %568, 10
  store i64 %569, i64* %9, align 8
  br i1 true, label %684, label %685

570:                                              ; preds = %564, %560, %559, %558, %547, %543, %539, %536, %532, %523, %520
  %571 = load i64, i64* %9, align 8
  %572 = mul i64 %571, 10
  store i64 %572, i64* %9, align 8
  br i1 false, label %684, label %685

573:                                              ; preds = %461
  br i1 true, label %574, label %626

574:                                              ; preds = %573
  br i1 false, label %575, label %602

575:                                              ; preds = %574
  %576 = load i64, i64* %9, align 8
  %577 = icmp slt i64 %576, 0
  br i1 %577, label %578, label %586

578:                                              ; preds = %575
  br i1 true, label %579, label %582

579:                                              ; preds = %578
  %580 = load i64, i64* %9, align 8
  %581 = icmp slt i64 %580, 922337203685477580
  br i1 %581, label %620, label %623

582:                                              ; preds = %578
  %583 = load i64, i64* %9, align 8
  %584 = sub nsw i64 -1, %583
  %585 = icmp sle i64 -922337203685477580, %584
  br i1 %585, label %620, label %623

586:                                              ; preds = %575
  br i1 false, label %587, label %599

587:                                              ; preds = %586
  br i1 true, label %588, label %592

588:                                              ; preds = %587
  %589 = load i64, i64* %9, align 8
  %590 = add nsw i64 %589, -9223372036854775808
  %591 = icmp slt i64 0, %590
  br i1 %591, label %620, label %623

592:                                              ; preds = %587
  %593 = load i64, i64* %9, align 8
  %594 = icmp slt i64 0, %593
  br i1 %594, label %595, label %623

595:                                              ; preds = %592
  %596 = load i64, i64* %9, align 8
  %597 = sub nsw i64 %596, 1
  %598 = icmp slt i64 9223372036854775807, %597
  br i1 %598, label %620, label %623

599:                                              ; preds = %586
  %600 = load i64, i64* %9, align 8
  %601 = icmp slt i64 -922337203685477580, %600
  br i1 %601, label %620, label %623

602:                                              ; preds = %574
  br i1 false, label %603, label %604

603:                                              ; preds = %602
  br i1 false, label %620, label %623

604:                                              ; preds = %602
  %605 = load i64, i64* %9, align 8
  %606 = icmp slt i64 %605, 0
  br i1 %606, label %607, label %617

607:                                              ; preds = %604
  %608 = load i64, i64* %9, align 8
  %609 = icmp eq i64 %608, -1
  br i1 %609, label %610, label %613

610:                                              ; preds = %607
  br i1 true, label %611, label %612

611:                                              ; preds = %610
  br i1 false, label %620, label %623

612:                                              ; preds = %610
  br i1 false, label %620, label %623

613:                                              ; preds = %607
  %614 = load i64, i64* %9, align 8
  %615 = sdiv i64 -9223372036854775808, %614
  %616 = icmp slt i64 %615, 10
  br i1 %616, label %620, label %623

617:                                              ; preds = %604
  %618 = load i64, i64* %9, align 8
  %619 = icmp slt i64 922337203685477580, %618
  br i1 %619, label %620, label %623

620:                                              ; preds = %617, %613, %612, %611, %603, %599, %595, %588, %582, %579
  %621 = load i64, i64* %9, align 8
  %622 = mul i64 %621, 10
  store i64 %622, i64* %9, align 8
  br i1 true, label %684, label %685

623:                                              ; preds = %617, %613, %612, %611, %603, %599, %595, %592, %588, %582, %579
  %624 = load i64, i64* %9, align 8
  %625 = mul i64 %624, 10
  store i64 %625, i64* %9, align 8
  br i1 false, label %684, label %685

626:                                              ; preds = %573
  br i1 false, label %627, label %657

627:                                              ; preds = %626
  %628 = load i64, i64* %9, align 8
  %629 = icmp slt i64 %628, 0
  br i1 %629, label %630, label %638

630:                                              ; preds = %627
  br i1 false, label %631, label %634

631:                                              ; preds = %630
  %632 = load i64, i64* %9, align 8
  %633 = icmp ult i64 %632, 1844674407370955161
  br i1 %633, label %678, label %681

634:                                              ; preds = %630
  %635 = load i64, i64* %9, align 8
  %636 = sub nsw i64 -1, %635
  %637 = icmp ule i64 1, %636
  br i1 %637, label %678, label %681

638:                                              ; preds = %627
  br i1 true, label %639, label %640

639:                                              ; preds = %638
  br i1 false, label %641, label %654

640:                                              ; preds = %638
  br i1 false, label %641, label %654

641:                                              ; preds = %640, %639
  br i1 false, label %642, label %654

642:                                              ; preds = %641
  br i1 true, label %643, label %647

643:                                              ; preds = %642
  %644 = load i64, i64* %9, align 8
  %645 = add nsw i64 %644, 0
  %646 = icmp slt i64 0, %645
  br i1 %646, label %678, label %681

647:                                              ; preds = %642
  %648 = load i64, i64* %9, align 8
  %649 = icmp slt i64 0, %648
  br i1 %649, label %650, label %681

650:                                              ; preds = %647
  %651 = load i64, i64* %9, align 8
  %652 = sub nsw i64 %651, 1
  %653 = icmp slt i64 -1, %652
  br i1 %653, label %678, label %681

654:                                              ; preds = %641, %640, %639
  %655 = load i64, i64* %9, align 8
  %656 = icmp slt i64 0, %655
  br i1 %656, label %678, label %681

657:                                              ; preds = %626
  br i1 false, label %658, label %659

658:                                              ; preds = %657
  br i1 false, label %678, label %681

659:                                              ; preds = %657
  %660 = load i64, i64* %9, align 8
  %661 = icmp slt i64 %660, 0
  br i1 %661, label %662, label %675

662:                                              ; preds = %659
  br i1 true, label %663, label %664

663:                                              ; preds = %662
  br i1 false, label %665, label %671

664:                                              ; preds = %662
  br i1 false, label %665, label %671

665:                                              ; preds = %664, %663
  %666 = load i64, i64* %9, align 8
  %667 = icmp eq i64 %666, -1
  br i1 %667, label %668, label %671

668:                                              ; preds = %665
  br i1 true, label %669, label %670

669:                                              ; preds = %668
  br i1 true, label %678, label %681

670:                                              ; preds = %668
  br i1 true, label %678, label %681

671:                                              ; preds = %665, %664, %663
  %672 = load i64, i64* %9, align 8
  %673 = sdiv i64 0, %672
  %674 = icmp slt i64 %673, 10
  br i1 %674, label %678, label %681

675:                                              ; preds = %659
  %676 = load i64, i64* %9, align 8
  %677 = icmp ult i64 1844674407370955161, %676
  br i1 %677, label %678, label %681

678:                                              ; preds = %675, %671, %670, %669, %658, %654, %650, %643, %634, %631
  %679 = load i64, i64* %9, align 8
  %680 = mul i64 %679, 10
  store i64 %680, i64* %9, align 8
  br i1 true, label %684, label %685

681:                                              ; preds = %675, %671, %670, %669, %658, %654, %650, %647, %643, %634, %631
  %682 = load i64, i64* %9, align 8
  %683 = mul i64 %682, 10
  store i64 %683, i64* %9, align 8
  br i1 false, label %684, label %685

684:                                              ; preds = %681, %678, %623, %620, %570, %567, %512, %509, %456, %451, %394, %389, %332, %326, %268, %262, %202, %196, %138, %132
  store i32 63, i32* %3, align 4
  br label %955

685:                                              ; preds = %681, %678, %623, %620, %570, %567, %512, %509, %456, %451, %394, %389, %332, %326, %268, %262, %202, %196, %138, %132
  %686 = load i64, i64* %9, align 8
  %687 = load i32, i32* %8, align 4
  %688 = icmp slt i32 %687, 0
  br i1 %688, label %689, label %693

689:                                              ; preds = %685
  %690 = load i8, i8* %6, align 1
  %691 = zext i8 %690 to i32
  %692 = sub nsw i32 48, %691
  br label %697

693:                                              ; preds = %685
  %694 = load i8, i8* %6, align 1
  %695 = zext i8 %694 to i32
  %696 = sub nsw i32 %695, 48
  br label %697

697:                                              ; preds = %693, %689
  %698 = phi i32 [ %692, %689 ], [ %696, %693 ]
  %699 = sext i32 %698 to i64
  %700 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %686, i64 %699)
  %701 = extractvalue { i64, i1 } %700, 1
  %702 = extractvalue { i64, i1 } %700, 0
  store i64 %702, i64* %9, align 8
  br i1 %701, label %703, label %704

703:                                              ; preds = %697
  store i32 63, i32* %3, align 4
  br label %955

704:                                              ; preds = %697
  %705 = load i8*, i8** %7, align 8
  %706 = getelementptr inbounds i8, i8* %705, i32 1
  store i8* %706, i8** %7, align 8
  %707 = load i8, i8* %706, align 1
  store i8 %707, i8* %6, align 1
  br label %708

708:                                              ; preds = %704
  %709 = load i8, i8* %6, align 1
  %710 = zext i8 %709 to i32
  %711 = call zeroext i1 @c_isdigit(i32 %710)
  br i1 %711, label %78, label %712

712:                                              ; preds = %708
  %713 = load i8, i8* %6, align 1
  %714 = zext i8 %713 to i32
  %715 = icmp eq i32 %714, 46
  br i1 %715, label %720, label %716

716:                                              ; preds = %712
  %717 = load i8, i8* %6, align 1
  %718 = zext i8 %717 to i32
  %719 = icmp eq i32 %718, 44
  br i1 %719, label %720, label %824

720:                                              ; preds = %716, %712
  %721 = load i8*, i8** %7, align 8
  %722 = getelementptr inbounds i8, i8* %721, i64 1
  %723 = load i8, i8* %722, align 1
  %724 = sext i8 %723 to i32
  %725 = call zeroext i1 @c_isdigit(i32 %724)
  br i1 %725, label %726, label %824

726:                                              ; preds = %720
  %727 = load i64, i64* %9, align 8
  %728 = call zeroext i1 @time_overflow(i64 %727)
  br i1 %728, label %729, label %730

729:                                              ; preds = %726
  store i32 63, i32* %3, align 4
  br label %955

730:                                              ; preds = %726
  %731 = load i64, i64* %9, align 8
  store i64 %731, i64* %10, align 8
  %732 = load i8*, i8** %7, align 8
  %733 = getelementptr inbounds i8, i8* %732, i32 1
  store i8* %733, i8** %7, align 8
  %734 = load i8*, i8** %7, align 8
  %735 = getelementptr inbounds i8, i8* %734, i32 1
  store i8* %735, i8** %7, align 8
  %736 = load i8, i8* %734, align 1
  %737 = sext i8 %736 to i32
  %738 = sub nsw i32 %737, 48
  store i32 %738, i32* %11, align 4
  store i32 2, i32* %12, align 4
  br label %739

739:                                              ; preds = %758, %730
  %740 = load i32, i32* %12, align 4
  %741 = icmp sle i32 %740, 9
  br i1 %741, label %742, label %761

742:                                              ; preds = %739
  %743 = load i32, i32* %11, align 4
  %744 = mul nsw i32 %743, 10
  store i32 %744, i32* %11, align 4
  %745 = load i8*, i8** %7, align 8
  %746 = load i8, i8* %745, align 1
  %747 = sext i8 %746 to i32
  %748 = call zeroext i1 @c_isdigit(i32 %747)
  br i1 %748, label %749, label %757

749:                                              ; preds = %742
  %750 = load i8*, i8** %7, align 8
  %751 = getelementptr inbounds i8, i8* %750, i32 1
  store i8* %751, i8** %7, align 8
  %752 = load i8, i8* %750, align 1
  %753 = sext i8 %752 to i32
  %754 = sub nsw i32 %753, 48
  %755 = load i32, i32* %11, align 4
  %756 = add nsw i32 %755, %754
  store i32 %756, i32* %11, align 4
  br label %757

757:                                              ; preds = %749, %742
  br label %758

758:                                              ; preds = %757
  %759 = load i32, i32* %12, align 4
  %760 = add nsw i32 %759, 1
  store i32 %760, i32* %12, align 4
  br label %739

761:                                              ; preds = %739
  %762 = load i32, i32* %8, align 4
  %763 = icmp slt i32 %762, 0
  br i1 %763, label %764, label %783

764:                                              ; preds = %761
  br label %765

765:                                              ; preds = %779, %764
  %766 = load i8*, i8** %7, align 8
  %767 = load i8, i8* %766, align 1
  %768 = sext i8 %767 to i32
  %769 = call zeroext i1 @c_isdigit(i32 %768)
  br i1 %769, label %770, label %782

770:                                              ; preds = %765
  %771 = load i8*, i8** %7, align 8
  %772 = load i8, i8* %771, align 1
  %773 = sext i8 %772 to i32
  %774 = icmp ne i32 %773, 48
  br i1 %774, label %775, label %778

775:                                              ; preds = %770
  %776 = load i32, i32* %11, align 4
  %777 = add nsw i32 %776, 1
  store i32 %777, i32* %11, align 4
  br label %782

778:                                              ; preds = %770
  br label %779

779:                                              ; preds = %778
  %780 = load i8*, i8** %7, align 8
  %781 = getelementptr inbounds i8, i8* %780, i32 1
  store i8* %781, i8** %7, align 8
  br label %765

782:                                              ; preds = %775, %765
  br label %783

783:                                              ; preds = %782, %761
  br label %784

784:                                              ; preds = %789, %783
  %785 = load i8*, i8** %7, align 8
  %786 = load i8, i8* %785, align 1
  %787 = sext i8 %786 to i32
  %788 = call zeroext i1 @c_isdigit(i32 %787)
  br i1 %788, label %789, label %792

789:                                              ; preds = %784
  %790 = load i8*, i8** %7, align 8
  %791 = getelementptr inbounds i8, i8* %790, i32 1
  store i8* %791, i8** %7, align 8
  br label %784

792:                                              ; preds = %784
  %793 = load i32, i32* %8, align 4
  %794 = icmp slt i32 %793, 0
  br i1 %794, label %795, label %807

795:                                              ; preds = %792
  %796 = load i32, i32* %11, align 4
  %797 = icmp ne i32 %796, 0
  br i1 %797, label %798, label %807

798:                                              ; preds = %795
  %799 = load i64, i64* %10, align 8
  %800 = icmp eq i64 %799, -9223372036854775808
  br i1 %800, label %801, label %802

801:                                              ; preds = %798
  store i32 63, i32* %3, align 4
  br label %955

802:                                              ; preds = %798
  %803 = load i64, i64* %10, align 8
  %804 = add nsw i64 %803, -1
  store i64 %804, i64* %10, align 8
  %805 = load i32, i32* %11, align 4
  %806 = sub nsw i32 1000000000, %805
  store i32 %806, i32* %11, align 4
  br label %807

807:                                              ; preds = %802, %795, %792
  %808 = load i64, i64* %10, align 8
  %809 = load %union.YYSTYPE*, %union.YYSTYPE** %4, align 8
  %810 = bitcast %union.YYSTYPE* %809 to %struct.timespec*
  %811 = getelementptr inbounds %struct.timespec, %struct.timespec* %810, i32 0, i32 0
  store i64 %808, i64* %811, align 8
  %812 = load i32, i32* %11, align 4
  %813 = sext i32 %812 to i64
  %814 = load %union.YYSTYPE*, %union.YYSTYPE** %4, align 8
  %815 = bitcast %union.YYSTYPE* %814 to %struct.timespec*
  %816 = getelementptr inbounds %struct.timespec, %struct.timespec* %815, i32 0, i32 1
  store i64 %813, i64* %816, align 8
  %817 = load i8*, i8** %7, align 8
  %818 = load %struct.parser_control*, %struct.parser_control** %5, align 8
  %819 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %818, i32 0, i32 0
  store i8* %817, i8** %819, align 8
  %820 = load i32, i32* %8, align 4
  %821 = icmp ne i32 %820, 0
  %822 = zext i1 %821 to i64
  %823 = select i1 %821, i32 276, i32 277
  store i32 %823, i32* %3, align 4
  br label %955

824:                                              ; preds = %720, %716
  %825 = load i32, i32* %8, align 4
  %826 = icmp slt i32 %825, 0
  %827 = load %union.YYSTYPE*, %union.YYSTYPE** %4, align 8
  %828 = bitcast %union.YYSTYPE* %827 to %struct.textint*
  %829 = getelementptr inbounds %struct.textint, %struct.textint* %828, i32 0, i32 0
  %830 = zext i1 %826 to i8
  store i8 %830, i8* %829, align 8
  %831 = load i64, i64* %9, align 8
  %832 = load %union.YYSTYPE*, %union.YYSTYPE** %4, align 8
  %833 = bitcast %union.YYSTYPE* %832 to %struct.textint*
  %834 = getelementptr inbounds %struct.textint, %struct.textint* %833, i32 0, i32 1
  store i64 %831, i64* %834, align 8
  %835 = load i8*, i8** %7, align 8
  %836 = load %struct.parser_control*, %struct.parser_control** %5, align 8
  %837 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %836, i32 0, i32 0
  %838 = load i8*, i8** %837, align 8
  %839 = ptrtoint i8* %835 to i64
  %840 = ptrtoint i8* %838 to i64
  %841 = sub i64 %839, %840
  %842 = load %union.YYSTYPE*, %union.YYSTYPE** %4, align 8
  %843 = bitcast %union.YYSTYPE* %842 to %struct.textint*
  %844 = getelementptr inbounds %struct.textint, %struct.textint* %843, i32 0, i32 2
  store i64 %841, i64* %844, align 8
  %845 = load i8*, i8** %7, align 8
  %846 = load %struct.parser_control*, %struct.parser_control** %5, align 8
  %847 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %846, i32 0, i32 0
  store i8* %845, i8** %847, align 8
  %848 = load i32, i32* %8, align 4
  %849 = icmp ne i32 %848, 0
  %850 = zext i1 %849 to i64
  %851 = select i1 %849, i32 274, i32 275
  store i32 %851, i32* %3, align 4
  br label %955

852:                                              ; preds = %39
  %853 = load i8, i8* %6, align 1
  %854 = zext i8 %853 to i32
  %855 = call zeroext i1 @c_isalpha(i32 %854)
  br i1 %855, label %856, label %910

856:                                              ; preds = %852
  %857 = getelementptr inbounds [20 x i8], [20 x i8]* %13, i64 0, i64 0
  store i8* %857, i8** %14, align 8
  br label %858

858:                                              ; preds = %882, %856
  %859 = load i8*, i8** %14, align 8
  %860 = getelementptr inbounds [20 x i8], [20 x i8]* %13, i64 0, i64 0
  %861 = getelementptr inbounds i8, i8* %860, i64 20
  %862 = getelementptr inbounds i8, i8* %861, i64 -1
  %863 = icmp ult i8* %859, %862
  br i1 %863, label %864, label %868

864:                                              ; preds = %858
  %865 = load i8, i8* %6, align 1
  %866 = load i8*, i8** %14, align 8
  %867 = getelementptr inbounds i8, i8* %866, i32 1
  store i8* %867, i8** %14, align 8
  store i8 %865, i8* %866, align 1
  br label %868

868:                                              ; preds = %864, %858
  %869 = load %struct.parser_control*, %struct.parser_control** %5, align 8
  %870 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %869, i32 0, i32 0
  %871 = load i8*, i8** %870, align 8
  %872 = getelementptr inbounds i8, i8* %871, i32 1
  store i8* %872, i8** %870, align 8
  %873 = load i8, i8* %872, align 1
  store i8 %873, i8* %6, align 1
  br label %874

874:                                              ; preds = %868
  %875 = load i8, i8* %6, align 1
  %876 = zext i8 %875 to i32
  %877 = call zeroext i1 @c_isalpha(i32 %876)
  br i1 %877, label %882, label %878

878:                                              ; preds = %874
  %879 = load i8, i8* %6, align 1
  %880 = zext i8 %879 to i32
  %881 = icmp eq i32 %880, 46
  br label %882

882:                                              ; preds = %878, %874
  %883 = phi i1 [ true, %874 ], [ %881, %878 ]
  br i1 %883, label %858, label %884

884:                                              ; preds = %882
  %885 = load i8*, i8** %14, align 8
  store i8 0, i8* %885, align 1
  %886 = load %struct.parser_control*, %struct.parser_control** %5, align 8
  %887 = getelementptr inbounds [20 x i8], [20 x i8]* %13, i64 0, i64 0
  %888 = call %struct.table* @lookup_word(%struct.parser_control* %886, i8* %887)
  store %struct.table* %888, %struct.table** %15, align 8
  %889 = load %struct.table*, %struct.table** %15, align 8
  %890 = icmp ne %struct.table* %889, null
  br i1 %890, label %900, label %891

891:                                              ; preds = %884
  %892 = load %struct.parser_control*, %struct.parser_control** %5, align 8
  %893 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %892, i32 0, i32 22
  %894 = load i8, i8* %893, align 1
  %895 = trunc i8 %894 to i1
  br i1 %895, label %896, label %899

896:                                              ; preds = %891
  %897 = call i8* @gettext(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.98, i64 0, i64 0)) #11
  %898 = getelementptr inbounds [20 x i8], [20 x i8]* %13, i64 0, i64 0
  call void (i8*, ...) @dbg_printf(i8* %897, i8* %898)
  br label %899

899:                                              ; preds = %896, %891
  store i32 63, i32* %3, align 4
  br label %955

900:                                              ; preds = %884
  %901 = load %struct.table*, %struct.table** %15, align 8
  %902 = getelementptr inbounds %struct.table, %struct.table* %901, i32 0, i32 2
  %903 = load i32, i32* %902, align 4
  %904 = sext i32 %903 to i64
  %905 = load %union.YYSTYPE*, %union.YYSTYPE** %4, align 8
  %906 = bitcast %union.YYSTYPE* %905 to i64*
  store i64 %904, i64* %906, align 8
  %907 = load %struct.table*, %struct.table** %15, align 8
  %908 = getelementptr inbounds %struct.table, %struct.table* %907, i32 0, i32 1
  %909 = load i32, i32* %908, align 8
  store i32 %909, i32* %3, align 4
  br label %955

910:                                              ; preds = %852
  %911 = load i8, i8* %6, align 1
  %912 = zext i8 %911 to i32
  %913 = icmp ne i32 %912, 40
  br i1 %913, label %914, label %922

914:                                              ; preds = %910
  %915 = load %struct.parser_control*, %struct.parser_control** %5, align 8
  %916 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %915, i32 0, i32 0
  %917 = load i8*, i8** %916, align 8
  %918 = getelementptr inbounds i8, i8* %917, i32 1
  store i8* %918, i8** %916, align 8
  %919 = load i8, i8* %917, align 1
  %920 = call zeroext i8 @to_uchar(i8 signext %919)
  %921 = zext i8 %920 to i32
  store i32 %921, i32* %3, align 4
  br label %955

922:                                              ; preds = %910
  store i64 0, i64* %16, align 8
  br label %923

923:                                              ; preds = %951, %922
  %924 = load %struct.parser_control*, %struct.parser_control** %5, align 8
  %925 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %924, i32 0, i32 0
  %926 = load i8*, i8** %925, align 8
  %927 = getelementptr inbounds i8, i8* %926, i32 1
  store i8* %927, i8** %925, align 8
  %928 = load i8, i8* %926, align 1
  store i8 %928, i8* %6, align 1
  %929 = load i8, i8* %6, align 1
  %930 = zext i8 %929 to i32
  %931 = icmp eq i32 %930, 0
  br i1 %931, label %932, label %935

932:                                              ; preds = %923
  %933 = load i8, i8* %6, align 1
  %934 = zext i8 %933 to i32
  store i32 %934, i32* %3, align 4
  br label %955

935:                                              ; preds = %923
  %936 = load i8, i8* %6, align 1
  %937 = zext i8 %936 to i32
  %938 = icmp eq i32 %937, 40
  br i1 %938, label %939, label %942

939:                                              ; preds = %935
  %940 = load i64, i64* %16, align 8
  %941 = add nsw i64 %940, 1
  store i64 %941, i64* %16, align 8
  br label %950

942:                                              ; preds = %935
  %943 = load i8, i8* %6, align 1
  %944 = zext i8 %943 to i32
  %945 = icmp eq i32 %944, 41
  br i1 %945, label %946, label %949

946:                                              ; preds = %942
  %947 = load i64, i64* %16, align 8
  %948 = add nsw i64 %947, -1
  store i64 %948, i64* %16, align 8
  br label %949

949:                                              ; preds = %946, %942
  br label %950

950:                                              ; preds = %949, %939
  br label %951

951:                                              ; preds = %950
  %952 = load i64, i64* %16, align 8
  %953 = icmp ne i64 %952, 0
  br i1 %953, label %923, label %954

954:                                              ; preds = %951
  br label %17

955:                                              ; preds = %932, %914, %900, %899, %824, %807, %801, %729, %703, %684
  %956 = load i32, i32* %3, align 4
  ret i32 %956
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @debug_print_current_time(i8*, %struct.parser_control*) #3 {
  %3 = alloca i8*, align 8
  %4 = alloca %struct.parser_control*, align 8
  %5 = alloca i8, align 1
  %6 = alloca i64, align 8
  %7 = alloca i32, align 4
  %8 = alloca [100 x i8], align 16
  %9 = alloca [27 x i8], align 16
  %10 = alloca i64, align 8
  store i8* %0, i8** %3, align 8
  store %struct.parser_control* %1, %struct.parser_control** %4, align 8
  store i8 0, i8* %5, align 1
  %11 = load %struct.parser_control*, %struct.parser_control** %4, align 8
  %12 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %11, i32 0, i32 22
  %13 = load i8, i8* %12, align 1
  %14 = trunc i8 %13 to i1
  br i1 %14, label %16, label %15

15:                                               ; preds = %2
  br label %241

16:                                               ; preds = %2
  %17 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.77.132, i64 0, i64 0)) #11
  %18 = load i8*, i8** %3, align 8
  call void (i8*, ...) @dbg_printf(i8* %17, i8* %18)
  %19 = load %struct.parser_control*, %struct.parser_control** %4, align 8
  %20 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %19, i32 0, i32 15
  %21 = load i64, i64* %20, align 8
  %22 = icmp ne i64 %21, 0
  br i1 %22, label %23, label %43

23:                                               ; preds = %16
  %24 = load %struct.parser_control*, %struct.parser_control** %4, align 8
  %25 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %24, i32 0, i32 23
  %26 = load i8, i8* %25, align 2
  %27 = trunc i8 %26 to i1
  br i1 %27, label %43, label %28

28:                                               ; preds = %23
  %29 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %30 = load %struct.parser_control*, %struct.parser_control** %4, align 8
  %31 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %30, i32 0, i32 6
  %32 = getelementptr inbounds %struct.textint, %struct.textint* %31, i32 0, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = load %struct.parser_control*, %struct.parser_control** %4, align 8
  %35 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 7
  %36 = load i64, i64* %35, align 8
  %37 = load %struct.parser_control*, %struct.parser_control** %4, align 8
  %38 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %37, i32 0, i32 8
  %39 = load i64, i64* %38, align 8
  %40 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %29, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.78.133, i64 0, i64 0), i64 %33, i64 %36, i64 %39)
  %41 = load %struct.parser_control*, %struct.parser_control** %4, align 8
  %42 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %41, i32 0, i32 23
  store i8 1, i8* %42, align 2
  store i8 1, i8* %5, align 1
  br label %43

43:                                               ; preds = %28, %23, %16
  %44 = load %struct.parser_control*, %struct.parser_control** %4, align 8
  %45 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %44, i32 0, i32 21
  %46 = load i8, i8* %45, align 8
  %47 = trunc i8 %46 to i1
  %48 = zext i1 %47 to i32
  %49 = load %struct.parser_control*, %struct.parser_control** %4, align 8
  %50 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %49, i32 0, i32 28
  %51 = load i8, i8* %50, align 1
  %52 = trunc i8 %51 to i1
  %53 = zext i1 %52 to i32
  %54 = icmp ne i32 %48, %53
  br i1 %54, label %55, label %76

55:                                               ; preds = %43
  %56 = load i8, i8* %5, align 1
  %57 = trunc i8 %56 to i1
  br i1 %57, label %58, label %61

58:                                               ; preds = %55
  %59 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %60 = call i32 @fputc(i32 32, %struct._IO_FILE* %59)
  br label %61

61:                                               ; preds = %58, %55
  %62 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %63 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.79.134, i64 0, i64 0)) #11
  %64 = load %struct.parser_control*, %struct.parser_control** %4, align 8
  %65 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %64, i32 0, i32 6
  %66 = getelementptr inbounds %struct.textint, %struct.textint* %65, i32 0, i32 1
  %67 = load i64, i64* %66, align 8
  %68 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %62, i8* %63, i64 %67)
  %69 = load %struct.parser_control*, %struct.parser_control** %4, align 8
  %70 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %69, i32 0, i32 21
  %71 = load i8, i8* %70, align 8
  %72 = trunc i8 %71 to i1
  %73 = load %struct.parser_control*, %struct.parser_control** %4, align 8
  %74 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %73, i32 0, i32 28
  %75 = zext i1 %72 to i8
  store i8 %75, i8* %74, align 1
  store i8 1, i8* %5, align 1
  br label %76

76:                                               ; preds = %61, %43
  %77 = load %struct.parser_control*, %struct.parser_control** %4, align 8
  %78 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %77, i32 0, i32 19
  %79 = load i64, i64* %78, align 8
  %80 = icmp ne i64 %79, 0
  br i1 %80, label %81, label %131

81:                                               ; preds = %76
  %82 = load %struct.parser_control*, %struct.parser_control** %4, align 8
  %83 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %82, i32 0, i32 26
  %84 = load i8, i8* %83, align 1
  %85 = trunc i8 %84 to i1
  br i1 %85, label %131, label %86

86:                                               ; preds = %81
  %87 = load %struct.parser_control*, %struct.parser_control** %4, align 8
  %88 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %87, i32 0, i32 11
  %89 = getelementptr inbounds %struct.timespec, %struct.timespec* %88, i32 0, i32 0
  %90 = load i64, i64* %89, align 8
  store i64 %90, i64* %6, align 8
  %91 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %92 = load i8, i8* %5, align 1
  %93 = trunc i8 %92 to i1
  %94 = xor i1 %93, true
  %95 = zext i1 %94 to i32
  %96 = sext i32 %95 to i64
  %97 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.80.135, i64 0, i64 %96
  %98 = load %struct.parser_control*, %struct.parser_control** %4, align 8
  %99 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %98, i32 0, i32 9
  %100 = load i64, i64* %99, align 8
  %101 = load %struct.parser_control*, %struct.parser_control** %4, align 8
  %102 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %101, i32 0, i32 10
  %103 = load i64, i64* %102, align 8
  %104 = load i64, i64* %6, align 8
  %105 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %91, i8* %97, i64 %100, i64 %103, i64 %104)
  %106 = load %struct.parser_control*, %struct.parser_control** %4, align 8
  %107 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %106, i32 0, i32 11
  %108 = getelementptr inbounds %struct.timespec, %struct.timespec* %107, i32 0, i32 1
  %109 = load i64, i64* %108, align 8
  %110 = icmp ne i64 %109, 0
  br i1 %110, label %111, label %120

111:                                              ; preds = %86
  %112 = load %struct.parser_control*, %struct.parser_control** %4, align 8
  %113 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %112, i32 0, i32 11
  %114 = getelementptr inbounds %struct.timespec, %struct.timespec* %113, i32 0, i32 1
  %115 = load i64, i64* %114, align 8
  %116 = trunc i64 %115 to i32
  store i32 %116, i32* %7, align 4
  %117 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %118 = load i32, i32* %7, align 4
  %119 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %117, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.81.136, i64 0, i64 0), i32 %118)
  br label %120

120:                                              ; preds = %111, %86
  %121 = load %struct.parser_control*, %struct.parser_control** %4, align 8
  %122 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %121, i32 0, i32 5
  %123 = load i32, i32* %122, align 4
  %124 = icmp eq i32 %123, 1
  br i1 %124, label %125, label %128

125:                                              ; preds = %120
  %126 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %127 = call i32 @fputs(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.41.137, i64 0, i64 0), %struct._IO_FILE* %126)
  br label %128

128:                                              ; preds = %125, %120
  %129 = load %struct.parser_control*, %struct.parser_control** %4, align 8
  %130 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %129, i32 0, i32 26
  store i8 1, i8* %130, align 1
  store i8 1, i8* %5, align 1
  br label %131

131:                                              ; preds = %128, %81, %76
  %132 = load %struct.parser_control*, %struct.parser_control** %4, align 8
  %133 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %132, i32 0, i32 16
  %134 = load i64, i64* %133, align 8
  %135 = icmp ne i64 %134, 0
  br i1 %135, label %136, label %162

136:                                              ; preds = %131
  %137 = load %struct.parser_control*, %struct.parser_control** %4, align 8
  %138 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %137, i32 0, i32 24
  %139 = load i8, i8* %138, align 1
  %140 = trunc i8 %139 to i1
  br i1 %140, label %162, label %141

141:                                              ; preds = %136
  %142 = load i8, i8* %5, align 1
  %143 = trunc i8 %142 to i1
  br i1 %143, label %144, label %147

144:                                              ; preds = %141
  %145 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %146 = call i32 @fputc(i32 32, %struct._IO_FILE* %145)
  br label %147

147:                                              ; preds = %144, %141
  %148 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %149 = call i8* @gettext(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.82.138, i64 0, i64 0)) #11
  %150 = load %struct.parser_control*, %struct.parser_control** %4, align 8
  %151 = getelementptr inbounds [100 x i8], [100 x i8]* %8, i64 0, i64 0
  %152 = call i8* @str_days(%struct.parser_control* %150, i8* %151, i32 100)
  %153 = load %struct.parser_control*, %struct.parser_control** %4, align 8
  %154 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %153, i32 0, i32 1
  %155 = load i64, i64* %154, align 8
  %156 = load %struct.parser_control*, %struct.parser_control** %4, align 8
  %157 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %156, i32 0, i32 2
  %158 = load i32, i32* %157, align 8
  %159 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %148, i8* %149, i8* %152, i64 %155, i32 %158)
  %160 = load %struct.parser_control*, %struct.parser_control** %4, align 8
  %161 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %160, i32 0, i32 24
  store i8 1, i8* %161, align 1
  store i8 1, i8* %5, align 1
  br label %162

162:                                              ; preds = %147, %136, %131
  %163 = load %struct.parser_control*, %struct.parser_control** %4, align 8
  %164 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %163, i32 0, i32 17
  %165 = load i64, i64* %164, align 8
  %166 = icmp ne i64 %165, 0
  br i1 %166, label %167, label %192

167:                                              ; preds = %162
  %168 = load %struct.parser_control*, %struct.parser_control** %4, align 8
  %169 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %168, i32 0, i32 25
  %170 = load i8, i8* %169, align 4
  %171 = trunc i8 %170 to i1
  br i1 %171, label %192, label %172

172:                                              ; preds = %167
  %173 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %174 = load i8, i8* %5, align 1
  %175 = trunc i8 %174 to i1
  %176 = xor i1 %175, true
  %177 = zext i1 %176 to i32
  %178 = sext i32 %177 to i64
  %179 = getelementptr inbounds [12 x i8], [12 x i8]* @.str.83.139, i64 0, i64 %178
  %180 = load %struct.parser_control*, %struct.parser_control** %4, align 8
  %181 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %180, i32 0, i32 3
  %182 = load i32, i32* %181, align 4
  %183 = load %struct.parser_control*, %struct.parser_control** %4, align 8
  %184 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %183, i32 0, i32 18
  %185 = load i64, i64* %184, align 8
  %186 = icmp ne i64 %185, 0
  %187 = zext i1 %186 to i64
  %188 = select i1 %186, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.84.140, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.42.141, i64 0, i64 0)
  %189 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %173, i8* %179, i32 %182, i8* %188)
  %190 = load %struct.parser_control*, %struct.parser_control** %4, align 8
  %191 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %190, i32 0, i32 25
  store i8 1, i8* %191, align 4
  store i8 1, i8* %5, align 1
  br label %192

192:                                              ; preds = %172, %167, %162
  %193 = load %struct.parser_control*, %struct.parser_control** %4, align 8
  %194 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %193, i32 0, i32 20
  %195 = load i64, i64* %194, align 8
  %196 = icmp ne i64 %195, 0
  br i1 %196, label %197, label %218

197:                                              ; preds = %192
  %198 = load %struct.parser_control*, %struct.parser_control** %4, align 8
  %199 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %198, i32 0, i32 27
  %200 = load i8, i8* %199, align 2
  %201 = trunc i8 %200 to i1
  br i1 %201, label %218, label %202

202:                                              ; preds = %197
  %203 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %204 = load i8, i8* %5, align 1
  %205 = trunc i8 %204 to i1
  %206 = xor i1 %205, true
  %207 = zext i1 %206 to i32
  %208 = sext i32 %207 to i64
  %209 = getelementptr inbounds [7 x i8], [7 x i8]* @.str.85.142, i64 0, i64 %208
  %210 = load %struct.parser_control*, %struct.parser_control** %4, align 8
  %211 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %210, i32 0, i32 4
  %212 = load i32, i32* %211, align 8
  %213 = getelementptr inbounds [27 x i8], [27 x i8]* %9, i64 0, i64 0
  %214 = call i8* @time_zone_str(i32 %212, i8* %213)
  %215 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %203, i8* %209, i8* %214)
  %216 = load %struct.parser_control*, %struct.parser_control** %4, align 8
  %217 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %216, i32 0, i32 27
  store i8 1, i8* %217, align 2
  store i8 1, i8* %5, align 1
  br label %218

218:                                              ; preds = %202, %197, %192
  %219 = load %struct.parser_control*, %struct.parser_control** %4, align 8
  %220 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %219, i32 0, i32 13
  %221 = load i8, i8* %220, align 8
  %222 = trunc i8 %221 to i1
  br i1 %222, label %223, label %238

223:                                              ; preds = %218
  %224 = load %struct.parser_control*, %struct.parser_control** %4, align 8
  %225 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %224, i32 0, i32 11
  %226 = getelementptr inbounds %struct.timespec, %struct.timespec* %225, i32 0, i32 0
  %227 = load i64, i64* %226, align 8
  store i64 %227, i64* %10, align 8
  %228 = load i8, i8* %5, align 1
  %229 = trunc i8 %228 to i1
  br i1 %229, label %230, label %233

230:                                              ; preds = %223
  %231 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %232 = call i32 @fputc(i32 32, %struct._IO_FILE* %231)
  br label %233

233:                                              ; preds = %230, %223
  %234 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %235 = call i8* @gettext(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.86.143, i64 0, i64 0)) #11
  %236 = load i64, i64* %10, align 8
  %237 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %234, i8* %235, i64 %236)
  br label %238

238:                                              ; preds = %233, %218
  %239 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %240 = call i32 @fputc(i32 10, %struct._IO_FILE* %239)
  br label %241

241:                                              ; preds = %238, %15
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @debug_print_relative_time(i8*, %struct.parser_control*) #3 {
  %3 = alloca i8*, align 8
  %4 = alloca %struct.parser_control*, align 8
  %5 = alloca i8, align 1
  store i8* %0, i8** %3, align 8
  store %struct.parser_control* %1, %struct.parser_control** %4, align 8
  store i8 0, i8* %5, align 1
  %6 = load %struct.parser_control*, %struct.parser_control** %4, align 8
  %7 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %6, i32 0, i32 22
  %8 = load i8, i8* %7, align 1
  %9 = trunc i8 %8 to i1
  br i1 %9, label %11, label %10

10:                                               ; preds = %2
  br label %118

11:                                               ; preds = %2
  %12 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.77.132, i64 0, i64 0)) #11
  %13 = load i8*, i8** %3, align 8
  call void (i8*, ...) @dbg_printf(i8* %12, i8* %13)
  %14 = load %struct.parser_control*, %struct.parser_control** %4, align 8
  %15 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %14, i32 0, i32 12
  %16 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %15, i32 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %19, label %59

19:                                               ; preds = %11
  %20 = load %struct.parser_control*, %struct.parser_control** %4, align 8
  %21 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %20, i32 0, i32 12
  %22 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %21, i32 0, i32 1
  %23 = load i64, i64* %22, align 8
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %25, label %59

25:                                               ; preds = %19
  %26 = load %struct.parser_control*, %struct.parser_control** %4, align 8
  %27 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %26, i32 0, i32 12
  %28 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %27, i32 0, i32 2
  %29 = load i64, i64* %28, align 8
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %31, label %59

31:                                               ; preds = %25
  %32 = load %struct.parser_control*, %struct.parser_control** %4, align 8
  %33 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %32, i32 0, i32 12
  %34 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %33, i32 0, i32 3
  %35 = load i64, i64* %34, align 8
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %37, label %59

37:                                               ; preds = %31
  %38 = load %struct.parser_control*, %struct.parser_control** %4, align 8
  %39 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %38, i32 0, i32 12
  %40 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %39, i32 0, i32 4
  %41 = load i64, i64* %40, align 8
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %43, label %59

43:                                               ; preds = %37
  %44 = load %struct.parser_control*, %struct.parser_control** %4, align 8
  %45 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %44, i32 0, i32 12
  %46 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %45, i32 0, i32 5
  %47 = load i64, i64* %46, align 8
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %49, label %59

49:                                               ; preds = %43
  %50 = load %struct.parser_control*, %struct.parser_control** %4, align 8
  %51 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %50, i32 0, i32 12
  %52 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %51, i32 0, i32 6
  %53 = load i32, i32* %52, align 8
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %59

55:                                               ; preds = %49
  %56 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.87, i64 0, i64 0)) #11
  %57 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %58 = call i32 @fputs(i8* %56, %struct._IO_FILE* %57)
  br label %118

59:                                               ; preds = %49, %43, %37, %31, %25, %19, %11
  %60 = load i8, i8* %5, align 1
  %61 = trunc i8 %60 to i1
  %62 = load %struct.parser_control*, %struct.parser_control** %4, align 8
  %63 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %62, i32 0, i32 12
  %64 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %63, i32 0, i32 0
  %65 = load i64, i64* %64, align 8
  %66 = call zeroext i1 @print_rel_part(i1 zeroext %61, i64 %65, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.88, i64 0, i64 0))
  %67 = zext i1 %66 to i8
  store i8 %67, i8* %5, align 1
  %68 = load i8, i8* %5, align 1
  %69 = trunc i8 %68 to i1
  %70 = load %struct.parser_control*, %struct.parser_control** %4, align 8
  %71 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %70, i32 0, i32 12
  %72 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %71, i32 0, i32 1
  %73 = load i64, i64* %72, align 8
  %74 = call zeroext i1 @print_rel_part(i1 zeroext %69, i64 %73, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.89, i64 0, i64 0))
  %75 = zext i1 %74 to i8
  store i8 %75, i8* %5, align 1
  %76 = load i8, i8* %5, align 1
  %77 = trunc i8 %76 to i1
  %78 = load %struct.parser_control*, %struct.parser_control** %4, align 8
  %79 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %78, i32 0, i32 12
  %80 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %79, i32 0, i32 2
  %81 = load i64, i64* %80, align 8
  %82 = call zeroext i1 @print_rel_part(i1 zeroext %77, i64 %81, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.90, i64 0, i64 0))
  %83 = zext i1 %82 to i8
  store i8 %83, i8* %5, align 1
  %84 = load i8, i8* %5, align 1
  %85 = trunc i8 %84 to i1
  %86 = load %struct.parser_control*, %struct.parser_control** %4, align 8
  %87 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %86, i32 0, i32 12
  %88 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %87, i32 0, i32 3
  %89 = load i64, i64* %88, align 8
  %90 = call zeroext i1 @print_rel_part(i1 zeroext %85, i64 %89, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.91, i64 0, i64 0))
  %91 = zext i1 %90 to i8
  store i8 %91, i8* %5, align 1
  %92 = load i8, i8* %5, align 1
  %93 = trunc i8 %92 to i1
  %94 = load %struct.parser_control*, %struct.parser_control** %4, align 8
  %95 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %94, i32 0, i32 12
  %96 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %95, i32 0, i32 4
  %97 = load i64, i64* %96, align 8
  %98 = call zeroext i1 @print_rel_part(i1 zeroext %93, i64 %97, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.92, i64 0, i64 0))
  %99 = zext i1 %98 to i8
  store i8 %99, i8* %5, align 1
  %100 = load i8, i8* %5, align 1
  %101 = trunc i8 %100 to i1
  %102 = load %struct.parser_control*, %struct.parser_control** %4, align 8
  %103 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %102, i32 0, i32 12
  %104 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %103, i32 0, i32 5
  %105 = load i64, i64* %104, align 8
  %106 = call zeroext i1 @print_rel_part(i1 zeroext %101, i64 %105, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.93, i64 0, i64 0))
  %107 = zext i1 %106 to i8
  store i8 %107, i8* %5, align 1
  %108 = load i8, i8* %5, align 1
  %109 = trunc i8 %108 to i1
  %110 = load %struct.parser_control*, %struct.parser_control** %4, align 8
  %111 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %110, i32 0, i32 12
  %112 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %111, i32 0, i32 6
  %113 = load i32, i32* %112, align 8
  %114 = sext i32 %113 to i64
  %115 = call zeroext i1 @print_rel_part(i1 zeroext %109, i64 %114, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.94, i64 0, i64 0))
  %116 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %117 = call i32 @fputc(i32 10, %struct._IO_FILE* %116)
  br label %118

118:                                              ; preds = %59, %55, %10
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @set_hhmmss(%struct.parser_control*, i64, i64, i64, i32) #3 {
  %6 = alloca %struct.parser_control*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i32, align 4
  store %struct.parser_control* %0, %struct.parser_control** %6, align 8
  store i64 %1, i64* %7, align 8
  store i64 %2, i64* %8, align 8
  store i64 %3, i64* %9, align 8
  store i32 %4, i32* %10, align 4
  %11 = load i64, i64* %7, align 8
  %12 = load %struct.parser_control*, %struct.parser_control** %6, align 8
  %13 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %12, i32 0, i32 9
  store i64 %11, i64* %13, align 8
  %14 = load i64, i64* %8, align 8
  %15 = load %struct.parser_control*, %struct.parser_control** %6, align 8
  %16 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %15, i32 0, i32 10
  store i64 %14, i64* %16, align 8
  %17 = load i64, i64* %9, align 8
  %18 = load %struct.parser_control*, %struct.parser_control** %6, align 8
  %19 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %18, i32 0, i32 11
  %20 = getelementptr inbounds %struct.timespec, %struct.timespec* %19, i32 0, i32 0
  store i64 %17, i64* %20, align 8
  %21 = load i32, i32* %10, align 4
  %22 = sext i32 %21 to i64
  %23 = load %struct.parser_control*, %struct.parser_control** %6, align 8
  %24 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %23, i32 0, i32 11
  %25 = getelementptr inbounds %struct.timespec, %struct.timespec* %24, i32 0, i32 1
  store i64 %22, i64* %25, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @time_zone_hhmm(%struct.parser_control*, %struct.textint* byval(%struct.textint) align 8, i64) #3 {
  %4 = alloca i1, align 1
  %5 = alloca %struct.parser_control*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8, align 1
  store %struct.parser_control* %0, %struct.parser_control** %5, align 8
  store i64 %2, i64* %6, align 8
  store i8 0, i8* %8, align 1
  %9 = getelementptr inbounds %struct.textint, %struct.textint* %1, i32 0, i32 2
  %10 = load i64, i64* %9, align 8
  %11 = icmp sle i64 %10, 2
  br i1 %11, label %12, label %19

12:                                               ; preds = %3
  %13 = load i64, i64* %6, align 8
  %14 = icmp slt i64 %13, 0
  br i1 %14, label %15, label %19

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.textint, %struct.textint* %1, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = mul nsw i64 %17, 100
  store i64 %18, i64* %16, align 8
  br label %19

19:                                               ; preds = %15, %12, %3
  %20 = load i64, i64* %6, align 8
  %21 = icmp slt i64 %20, 0
  br i1 %21, label %22, label %31

22:                                               ; preds = %19
  %23 = getelementptr inbounds %struct.textint, %struct.textint* %1, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = sdiv i64 %24, 100
  %26 = mul nsw i64 %25, 60
  %27 = getelementptr inbounds %struct.textint, %struct.textint* %1, i32 0, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = srem i64 %28, 100
  %30 = add nsw i64 %26, %29
  store i64 %30, i64* %7, align 8
  br label %129

31:                                               ; preds = %19
  br i1 false, label %32, label %66

32:                                               ; preds = %31
  %33 = getelementptr inbounds %struct.textint, %struct.textint* %1, i32 0, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = icmp slt i64 %34, 0
  br i1 %35, label %36, label %46

36:                                               ; preds = %32
  br i1 true, label %37, label %41

37:                                               ; preds = %36
  %38 = getelementptr inbounds %struct.textint, %struct.textint* %1, i32 0, i32 1
  %39 = load i64, i64* %38, align 8
  %40 = icmp slt i64 %39, 153722867280912930
  br i1 %40, label %88, label %92

41:                                               ; preds = %36
  %42 = getelementptr inbounds %struct.textint, %struct.textint* %1, i32 0, i32 1
  %43 = load i64, i64* %42, align 8
  %44 = sub nsw i64 -1, %43
  %45 = icmp sle i64 -153722867280912930, %44
  br i1 %45, label %88, label %92

46:                                               ; preds = %32
  br i1 false, label %47, label %62

47:                                               ; preds = %46
  br i1 true, label %48, label %53

48:                                               ; preds = %47
  %49 = getelementptr inbounds %struct.textint, %struct.textint* %1, i32 0, i32 1
  %50 = load i64, i64* %49, align 8
  %51 = add nsw i64 %50, -9223372036854775808
  %52 = icmp slt i64 0, %51
  br i1 %52, label %88, label %92

53:                                               ; preds = %47
  %54 = getelementptr inbounds %struct.textint, %struct.textint* %1, i32 0, i32 1
  %55 = load i64, i64* %54, align 8
  %56 = icmp slt i64 0, %55
  br i1 %56, label %57, label %92

57:                                               ; preds = %53
  %58 = getelementptr inbounds %struct.textint, %struct.textint* %1, i32 0, i32 1
  %59 = load i64, i64* %58, align 8
  %60 = sub nsw i64 %59, 1
  %61 = icmp slt i64 9223372036854775807, %60
  br i1 %61, label %88, label %92

62:                                               ; preds = %46
  %63 = getelementptr inbounds %struct.textint, %struct.textint* %1, i32 0, i32 1
  %64 = load i64, i64* %63, align 8
  %65 = icmp slt i64 -153722867280912930, %64
  br i1 %65, label %88, label %92

66:                                               ; preds = %31
  br i1 false, label %67, label %68

67:                                               ; preds = %66
  br i1 false, label %88, label %92

68:                                               ; preds = %66
  %69 = getelementptr inbounds %struct.textint, %struct.textint* %1, i32 0, i32 1
  %70 = load i64, i64* %69, align 8
  %71 = icmp slt i64 %70, 0
  br i1 %71, label %72, label %84

72:                                               ; preds = %68
  %73 = getelementptr inbounds %struct.textint, %struct.textint* %1, i32 0, i32 1
  %74 = load i64, i64* %73, align 8
  %75 = icmp eq i64 %74, -1
  br i1 %75, label %76, label %79

76:                                               ; preds = %72
  br i1 true, label %77, label %78

77:                                               ; preds = %76
  br i1 false, label %88, label %92

78:                                               ; preds = %76
  br i1 false, label %88, label %92

79:                                               ; preds = %72
  %80 = getelementptr inbounds %struct.textint, %struct.textint* %1, i32 0, i32 1
  %81 = load i64, i64* %80, align 8
  %82 = sdiv i64 -9223372036854775808, %81
  %83 = icmp slt i64 %82, 60
  br i1 %83, label %88, label %92

84:                                               ; preds = %68
  %85 = getelementptr inbounds %struct.textint, %struct.textint* %1, i32 0, i32 1
  %86 = load i64, i64* %85, align 8
  %87 = icmp slt i64 153722867280912930, %86
  br i1 %87, label %88, label %92

88:                                               ; preds = %84, %79, %78, %77, %67, %62, %57, %48, %41, %37
  %89 = getelementptr inbounds %struct.textint, %struct.textint* %1, i32 0, i32 1
  %90 = load i64, i64* %89, align 8
  %91 = mul i64 %90, 60
  store i64 %91, i64* %7, align 8
  br label %96

92:                                               ; preds = %84, %79, %78, %77, %67, %62, %57, %53, %48, %41, %37
  %93 = getelementptr inbounds %struct.textint, %struct.textint* %1, i32 0, i32 1
  %94 = load i64, i64* %93, align 8
  %95 = mul i64 %94, 60
  store i64 %95, i64* %7, align 8
  br label %96

96:                                               ; preds = %92, %88
  %97 = phi i32 [ 1, %88 ], [ 0, %92 ]
  %98 = load i8, i8* %8, align 1
  %99 = trunc i8 %98 to i1
  %100 = zext i1 %99 to i32
  %101 = or i32 %100, %97
  %102 = icmp ne i32 %101, 0
  %103 = zext i1 %102 to i8
  store i8 %103, i8* %8, align 1
  %104 = getelementptr inbounds %struct.textint, %struct.textint* %1, i32 0, i32 0
  %105 = load i8, i8* %104, align 8
  %106 = trunc i8 %105 to i1
  br i1 %106, label %107, label %114

107:                                              ; preds = %96
  %108 = load i64, i64* %7, align 8
  %109 = load i64, i64* %6, align 8
  %110 = call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %108, i64 %109)
  %111 = extractvalue { i64, i1 } %110, 1
  %112 = extractvalue { i64, i1 } %110, 0
  store i64 %112, i64* %7, align 8
  %113 = zext i1 %111 to i32
  br label %121

114:                                              ; preds = %96
  %115 = load i64, i64* %7, align 8
  %116 = load i64, i64* %6, align 8
  %117 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %115, i64 %116)
  %118 = extractvalue { i64, i1 } %117, 1
  %119 = extractvalue { i64, i1 } %117, 0
  store i64 %119, i64* %7, align 8
  %120 = zext i1 %118 to i32
  br label %121

121:                                              ; preds = %114, %107
  %122 = phi i32 [ %113, %107 ], [ %120, %114 ]
  %123 = load i8, i8* %8, align 1
  %124 = trunc i8 %123 to i1
  %125 = zext i1 %124 to i32
  %126 = or i32 %125, %122
  %127 = icmp ne i32 %126, 0
  %128 = zext i1 %127 to i8
  store i8 %128, i8* %8, align 1
  br label %129

129:                                              ; preds = %121, %22
  %130 = load i8, i8* %8, align 1
  %131 = trunc i8 %130 to i1
  br i1 %131, label %138, label %132

132:                                              ; preds = %129
  %133 = load i64, i64* %7, align 8
  %134 = icmp sle i64 -1440, %133
  br i1 %134, label %135, label %138

135:                                              ; preds = %132
  %136 = load i64, i64* %7, align 8
  %137 = icmp sle i64 %136, 1440
  br i1 %137, label %139, label %138

138:                                              ; preds = %135, %132, %129
  store i1 false, i1* %4, align 1
  br label %145

139:                                              ; preds = %135
  %140 = load i64, i64* %7, align 8
  %141 = mul nsw i64 %140, 60
  %142 = trunc i64 %141 to i32
  %143 = load %struct.parser_control*, %struct.parser_control** %5, align 8
  %144 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %143, i32 0, i32 4
  store i32 %142, i32* %144, align 8
  store i1 true, i1* %4, align 1
  br label %145

145:                                              ; preds = %139, %138
  %146 = load i1, i1* %4, align 1
  ret i1 %146
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @apply_relative_time(%struct.parser_control*, %struct.relative_time* byval(%struct.relative_time) align 8, i32) #3 {
  %4 = alloca i1, align 1
  %5 = alloca %struct.parser_control*, align 8
  %6 = alloca i32, align 4
  store %struct.parser_control* %0, %struct.parser_control** %5, align 8
  store i32 %2, i32* %6, align 4
  %7 = load i32, i32* %6, align 4
  %8 = icmp slt i32 %7, 0
  br i1 %8, label %9, label %108

9:                                                ; preds = %3
  %10 = load %struct.parser_control*, %struct.parser_control** %5, align 8
  %11 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %10, i32 0, i32 12
  %12 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %11, i32 0, i32 6
  %13 = load i32, i32* %12, align 8
  %14 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %1, i32 0, i32 6
  %15 = load i32, i32* %14, align 8
  %16 = load %struct.parser_control*, %struct.parser_control** %5, align 8
  %17 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %16, i32 0, i32 12
  %18 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %17, i32 0, i32 6
  %19 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %13, i32 %15)
  %20 = extractvalue { i32, i1 } %19, 1
  %21 = extractvalue { i32, i1 } %19, 0
  store i32 %21, i32* %18, align 8
  %22 = zext i1 %20 to i32
  %23 = load %struct.parser_control*, %struct.parser_control** %5, align 8
  %24 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %23, i32 0, i32 12
  %25 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %24, i32 0, i32 5
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %1, i32 0, i32 5
  %28 = load i64, i64* %27, align 8
  %29 = load %struct.parser_control*, %struct.parser_control** %5, align 8
  %30 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %29, i32 0, i32 12
  %31 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %30, i32 0, i32 5
  %32 = call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %26, i64 %28)
  %33 = extractvalue { i64, i1 } %32, 1
  %34 = extractvalue { i64, i1 } %32, 0
  store i64 %34, i64* %31, align 8
  %35 = zext i1 %33 to i32
  %36 = or i32 %22, %35
  %37 = load %struct.parser_control*, %struct.parser_control** %5, align 8
  %38 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %37, i32 0, i32 12
  %39 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %38, i32 0, i32 4
  %40 = load i64, i64* %39, align 8
  %41 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %1, i32 0, i32 4
  %42 = load i64, i64* %41, align 8
  %43 = load %struct.parser_control*, %struct.parser_control** %5, align 8
  %44 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %43, i32 0, i32 12
  %45 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %44, i32 0, i32 4
  %46 = call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %40, i64 %42)
  %47 = extractvalue { i64, i1 } %46, 1
  %48 = extractvalue { i64, i1 } %46, 0
  store i64 %48, i64* %45, align 8
  %49 = zext i1 %47 to i32
  %50 = or i32 %36, %49
  %51 = load %struct.parser_control*, %struct.parser_control** %5, align 8
  %52 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %51, i32 0, i32 12
  %53 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %52, i32 0, i32 3
  %54 = load i64, i64* %53, align 8
  %55 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %1, i32 0, i32 3
  %56 = load i64, i64* %55, align 8
  %57 = load %struct.parser_control*, %struct.parser_control** %5, align 8
  %58 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %57, i32 0, i32 12
  %59 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %58, i32 0, i32 3
  %60 = call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %54, i64 %56)
  %61 = extractvalue { i64, i1 } %60, 1
  %62 = extractvalue { i64, i1 } %60, 0
  store i64 %62, i64* %59, align 8
  %63 = zext i1 %61 to i32
  %64 = or i32 %50, %63
  %65 = load %struct.parser_control*, %struct.parser_control** %5, align 8
  %66 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %65, i32 0, i32 12
  %67 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %66, i32 0, i32 2
  %68 = load i64, i64* %67, align 8
  %69 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %1, i32 0, i32 2
  %70 = load i64, i64* %69, align 8
  %71 = load %struct.parser_control*, %struct.parser_control** %5, align 8
  %72 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %71, i32 0, i32 12
  %73 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %72, i32 0, i32 2
  %74 = call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %68, i64 %70)
  %75 = extractvalue { i64, i1 } %74, 1
  %76 = extractvalue { i64, i1 } %74, 0
  store i64 %76, i64* %73, align 8
  %77 = zext i1 %75 to i32
  %78 = or i32 %64, %77
  %79 = load %struct.parser_control*, %struct.parser_control** %5, align 8
  %80 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %79, i32 0, i32 12
  %81 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %80, i32 0, i32 1
  %82 = load i64, i64* %81, align 8
  %83 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %1, i32 0, i32 1
  %84 = load i64, i64* %83, align 8
  %85 = load %struct.parser_control*, %struct.parser_control** %5, align 8
  %86 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %85, i32 0, i32 12
  %87 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %86, i32 0, i32 1
  %88 = call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %82, i64 %84)
  %89 = extractvalue { i64, i1 } %88, 1
  %90 = extractvalue { i64, i1 } %88, 0
  store i64 %90, i64* %87, align 8
  %91 = zext i1 %89 to i32
  %92 = or i32 %78, %91
  %93 = load %struct.parser_control*, %struct.parser_control** %5, align 8
  %94 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %93, i32 0, i32 12
  %95 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %94, i32 0, i32 0
  %96 = load i64, i64* %95, align 8
  %97 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %1, i32 0, i32 0
  %98 = load i64, i64* %97, align 8
  %99 = load %struct.parser_control*, %struct.parser_control** %5, align 8
  %100 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %99, i32 0, i32 12
  %101 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %100, i32 0, i32 0
  %102 = call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %96, i64 %98)
  %103 = extractvalue { i64, i1 } %102, 1
  %104 = extractvalue { i64, i1 } %102, 0
  store i64 %104, i64* %101, align 8
  %105 = zext i1 %103 to i32
  %106 = or i32 %92, %105
  %107 = icmp ne i32 %106, 0
  br i1 %107, label %207, label %208

108:                                              ; preds = %3
  %109 = load %struct.parser_control*, %struct.parser_control** %5, align 8
  %110 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %109, i32 0, i32 12
  %111 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %110, i32 0, i32 6
  %112 = load i32, i32* %111, align 8
  %113 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %1, i32 0, i32 6
  %114 = load i32, i32* %113, align 8
  %115 = load %struct.parser_control*, %struct.parser_control** %5, align 8
  %116 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %115, i32 0, i32 12
  %117 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %116, i32 0, i32 6
  %118 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %112, i32 %114)
  %119 = extractvalue { i32, i1 } %118, 1
  %120 = extractvalue { i32, i1 } %118, 0
  store i32 %120, i32* %117, align 8
  %121 = zext i1 %119 to i32
  %122 = load %struct.parser_control*, %struct.parser_control** %5, align 8
  %123 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %122, i32 0, i32 12
  %124 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %123, i32 0, i32 5
  %125 = load i64, i64* %124, align 8
  %126 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %1, i32 0, i32 5
  %127 = load i64, i64* %126, align 8
  %128 = load %struct.parser_control*, %struct.parser_control** %5, align 8
  %129 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %128, i32 0, i32 12
  %130 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %129, i32 0, i32 5
  %131 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %125, i64 %127)
  %132 = extractvalue { i64, i1 } %131, 1
  %133 = extractvalue { i64, i1 } %131, 0
  store i64 %133, i64* %130, align 8
  %134 = zext i1 %132 to i32
  %135 = or i32 %121, %134
  %136 = load %struct.parser_control*, %struct.parser_control** %5, align 8
  %137 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %136, i32 0, i32 12
  %138 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %137, i32 0, i32 4
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %1, i32 0, i32 4
  %141 = load i64, i64* %140, align 8
  %142 = load %struct.parser_control*, %struct.parser_control** %5, align 8
  %143 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %142, i32 0, i32 12
  %144 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %143, i32 0, i32 4
  %145 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %139, i64 %141)
  %146 = extractvalue { i64, i1 } %145, 1
  %147 = extractvalue { i64, i1 } %145, 0
  store i64 %147, i64* %144, align 8
  %148 = zext i1 %146 to i32
  %149 = or i32 %135, %148
  %150 = load %struct.parser_control*, %struct.parser_control** %5, align 8
  %151 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %150, i32 0, i32 12
  %152 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %151, i32 0, i32 3
  %153 = load i64, i64* %152, align 8
  %154 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %1, i32 0, i32 3
  %155 = load i64, i64* %154, align 8
  %156 = load %struct.parser_control*, %struct.parser_control** %5, align 8
  %157 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %156, i32 0, i32 12
  %158 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %157, i32 0, i32 3
  %159 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %153, i64 %155)
  %160 = extractvalue { i64, i1 } %159, 1
  %161 = extractvalue { i64, i1 } %159, 0
  store i64 %161, i64* %158, align 8
  %162 = zext i1 %160 to i32
  %163 = or i32 %149, %162
  %164 = load %struct.parser_control*, %struct.parser_control** %5, align 8
  %165 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %164, i32 0, i32 12
  %166 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %165, i32 0, i32 2
  %167 = load i64, i64* %166, align 8
  %168 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %1, i32 0, i32 2
  %169 = load i64, i64* %168, align 8
  %170 = load %struct.parser_control*, %struct.parser_control** %5, align 8
  %171 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %170, i32 0, i32 12
  %172 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %171, i32 0, i32 2
  %173 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %167, i64 %169)
  %174 = extractvalue { i64, i1 } %173, 1
  %175 = extractvalue { i64, i1 } %173, 0
  store i64 %175, i64* %172, align 8
  %176 = zext i1 %174 to i32
  %177 = or i32 %163, %176
  %178 = load %struct.parser_control*, %struct.parser_control** %5, align 8
  %179 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %178, i32 0, i32 12
  %180 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %179, i32 0, i32 1
  %181 = load i64, i64* %180, align 8
  %182 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %1, i32 0, i32 1
  %183 = load i64, i64* %182, align 8
  %184 = load %struct.parser_control*, %struct.parser_control** %5, align 8
  %185 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %184, i32 0, i32 12
  %186 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %185, i32 0, i32 1
  %187 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %181, i64 %183)
  %188 = extractvalue { i64, i1 } %187, 1
  %189 = extractvalue { i64, i1 } %187, 0
  store i64 %189, i64* %186, align 8
  %190 = zext i1 %188 to i32
  %191 = or i32 %177, %190
  %192 = load %struct.parser_control*, %struct.parser_control** %5, align 8
  %193 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %192, i32 0, i32 12
  %194 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %193, i32 0, i32 0
  %195 = load i64, i64* %194, align 8
  %196 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %1, i32 0, i32 0
  %197 = load i64, i64* %196, align 8
  %198 = load %struct.parser_control*, %struct.parser_control** %5, align 8
  %199 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %198, i32 0, i32 12
  %200 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %199, i32 0, i32 0
  %201 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %195, i64 %197)
  %202 = extractvalue { i64, i1 } %201, 1
  %203 = extractvalue { i64, i1 } %201, 0
  store i64 %203, i64* %200, align 8
  %204 = zext i1 %202 to i32
  %205 = or i32 %191, %204
  %206 = icmp ne i32 %205, 0
  br i1 %206, label %207, label %208

207:                                              ; preds = %108, %9
  store i1 false, i1* %4, align 1
  br label %211

208:                                              ; preds = %108, %9
  %209 = load %struct.parser_control*, %struct.parser_control** %5, align 8
  %210 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %209, i32 0, i32 14
  store i8 1, i8* %210, align 1
  store i1 true, i1* %4, align 1
  br label %211

211:                                              ; preds = %208, %207
  %212 = load i1, i1* %4, align 1
  ret i1 %212
}

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #10

; Function Attrs: noinline nounwind optnone uwtable
define internal void @dbg_printf(i8*, ...) #3 {
  %2 = alloca i8*, align 8
  %3 = alloca [1 x %struct.__va_list_tag], align 16
  store i8* %0, i8** %2, align 8
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %5 = call i32 @fputs(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.96, i64 0, i64 0), %struct._IO_FILE* %4)
  %6 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %3, i64 0, i64 0
  %7 = bitcast %struct.__va_list_tag* %6 to i8*
  call void @llvm.va_start(i8* %7)
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %9 = load i8*, i8** %2, align 8
  %10 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %3, i64 0, i64 0
  %11 = call i32 @vfprintf(%struct._IO_FILE* %8, i8* %9, %struct.__va_list_tag* %10)
  %12 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %3, i64 0, i64 0
  %13 = bitcast %struct.__va_list_tag* %12 to i8*
  call void @llvm.va_end(i8* %13)
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.ssub.with.overflow.i64(i64, i64) #10

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @time_overflow(i64) #3 {
  %2 = alloca i64, align 8
  store i64 %0, i64* %2, align 8
  br i1 false, label %6, label %3

3:                                                ; preds = %1
  %4 = load i64, i64* %2, align 8
  %5 = icmp sle i64 -9223372036854775808, %4
  br i1 %5, label %9, label %12

6:                                                ; preds = %1
  %7 = load i64, i64* %2, align 8
  %8 = icmp sle i64 0, %7
  br i1 %8, label %9, label %12

9:                                                ; preds = %6, %3
  %10 = load i64, i64* %2, align 8
  %11 = icmp sle i64 %10, 9223372036854775807
  br label %12

12:                                               ; preds = %9, %6, %3
  %13 = phi i1 [ false, %6 ], [ false, %3 ], [ %11, %9 ]
  %14 = xor i1 %13, true
  ret i1 %14
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @digits_to_date_time(%struct.parser_control*, %struct.textint* byval(%struct.textint) align 8) #3 {
  %3 = alloca %struct.parser_control*, align 8
  store %struct.parser_control* %0, %struct.parser_control** %3, align 8
  %4 = load %struct.parser_control*, %struct.parser_control** %3, align 8
  %5 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %4, i32 0, i32 15
  %6 = load i64, i64* %5, align 8
  %7 = icmp ne i64 %6, 0
  br i1 %7, label %8, label %35

8:                                                ; preds = %2
  %9 = load %struct.parser_control*, %struct.parser_control** %3, align 8
  %10 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %9, i32 0, i32 6
  %11 = getelementptr inbounds %struct.textint, %struct.textint* %10, i32 0, i32 2
  %12 = load i64, i64* %11, align 8
  %13 = icmp ne i64 %12, 0
  br i1 %13, label %35, label %14

14:                                               ; preds = %8
  %15 = load %struct.parser_control*, %struct.parser_control** %3, align 8
  %16 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %15, i32 0, i32 14
  %17 = load i8, i8* %16, align 1
  %18 = trunc i8 %17 to i1
  br i1 %18, label %35, label %19

19:                                               ; preds = %14
  %20 = load %struct.parser_control*, %struct.parser_control** %3, align 8
  %21 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %20, i32 0, i32 19
  %22 = load i64, i64* %21, align 8
  %23 = icmp ne i64 %22, 0
  br i1 %23, label %28, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %struct.textint, %struct.textint* %1, i32 0, i32 2
  %26 = load i64, i64* %25, align 8
  %27 = icmp slt i64 2, %26
  br i1 %27, label %28, label %35

28:                                               ; preds = %24, %19
  %29 = load %struct.parser_control*, %struct.parser_control** %3, align 8
  %30 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %29, i32 0, i32 21
  store i8 1, i8* %30, align 8
  %31 = load %struct.parser_control*, %struct.parser_control** %3, align 8
  %32 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %31, i32 0, i32 6
  %33 = bitcast %struct.textint* %32 to i8*
  %34 = bitcast %struct.textint* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %33, i8* align 8 %34, i64 24, i1 false)
  br label %103

35:                                               ; preds = %24, %14, %8, %2
  %36 = getelementptr inbounds %struct.textint, %struct.textint* %1, i32 0, i32 2
  %37 = load i64, i64* %36, align 8
  %38 = icmp slt i64 4, %37
  br i1 %38, label %39, label %67

39:                                               ; preds = %35
  %40 = load %struct.parser_control*, %struct.parser_control** %3, align 8
  %41 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %40, i32 0, i32 15
  %42 = load i64, i64* %41, align 8
  %43 = add nsw i64 %42, 1
  store i64 %43, i64* %41, align 8
  %44 = getelementptr inbounds %struct.textint, %struct.textint* %1, i32 0, i32 1
  %45 = load i64, i64* %44, align 8
  %46 = srem i64 %45, 100
  %47 = load %struct.parser_control*, %struct.parser_control** %3, align 8
  %48 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %47, i32 0, i32 8
  store i64 %46, i64* %48, align 8
  %49 = getelementptr inbounds %struct.textint, %struct.textint* %1, i32 0, i32 1
  %50 = load i64, i64* %49, align 8
  %51 = sdiv i64 %50, 100
  %52 = srem i64 %51, 100
  %53 = load %struct.parser_control*, %struct.parser_control** %3, align 8
  %54 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %53, i32 0, i32 7
  store i64 %52, i64* %54, align 8
  %55 = getelementptr inbounds %struct.textint, %struct.textint* %1, i32 0, i32 1
  %56 = load i64, i64* %55, align 8
  %57 = sdiv i64 %56, 10000
  %58 = load %struct.parser_control*, %struct.parser_control** %3, align 8
  %59 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %58, i32 0, i32 6
  %60 = getelementptr inbounds %struct.textint, %struct.textint* %59, i32 0, i32 1
  store i64 %57, i64* %60, align 8
  %61 = getelementptr inbounds %struct.textint, %struct.textint* %1, i32 0, i32 2
  %62 = load i64, i64* %61, align 8
  %63 = sub nsw i64 %62, 4
  %64 = load %struct.parser_control*, %struct.parser_control** %3, align 8
  %65 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %64, i32 0, i32 6
  %66 = getelementptr inbounds %struct.textint, %struct.textint* %65, i32 0, i32 2
  store i64 %63, i64* %66, align 8
  br label %102

67:                                               ; preds = %35
  %68 = load %struct.parser_control*, %struct.parser_control** %3, align 8
  %69 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %68, i32 0, i32 19
  %70 = load i64, i64* %69, align 8
  %71 = add nsw i64 %70, 1
  store i64 %71, i64* %69, align 8
  %72 = getelementptr inbounds %struct.textint, %struct.textint* %1, i32 0, i32 2
  %73 = load i64, i64* %72, align 8
  %74 = icmp sle i64 %73, 2
  br i1 %74, label %75, label %82

75:                                               ; preds = %67
  %76 = getelementptr inbounds %struct.textint, %struct.textint* %1, i32 0, i32 1
  %77 = load i64, i64* %76, align 8
  %78 = load %struct.parser_control*, %struct.parser_control** %3, align 8
  %79 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %78, i32 0, i32 9
  store i64 %77, i64* %79, align 8
  %80 = load %struct.parser_control*, %struct.parser_control** %3, align 8
  %81 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %80, i32 0, i32 10
  store i64 0, i64* %81, align 8
  br label %93

82:                                               ; preds = %67
  %83 = getelementptr inbounds %struct.textint, %struct.textint* %1, i32 0, i32 1
  %84 = load i64, i64* %83, align 8
  %85 = sdiv i64 %84, 100
  %86 = load %struct.parser_control*, %struct.parser_control** %3, align 8
  %87 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %86, i32 0, i32 9
  store i64 %85, i64* %87, align 8
  %88 = getelementptr inbounds %struct.textint, %struct.textint* %1, i32 0, i32 1
  %89 = load i64, i64* %88, align 8
  %90 = srem i64 %89, 100
  %91 = load %struct.parser_control*, %struct.parser_control** %3, align 8
  %92 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %91, i32 0, i32 10
  store i64 %90, i64* %92, align 8
  br label %93

93:                                               ; preds = %82, %75
  %94 = load %struct.parser_control*, %struct.parser_control** %3, align 8
  %95 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %94, i32 0, i32 11
  %96 = getelementptr inbounds %struct.timespec, %struct.timespec* %95, i32 0, i32 0
  store i64 0, i64* %96, align 8
  %97 = load %struct.parser_control*, %struct.parser_control** %3, align 8
  %98 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %97, i32 0, i32 11
  %99 = getelementptr inbounds %struct.timespec, %struct.timespec* %98, i32 0, i32 1
  store i64 0, i64* %99, align 8
  %100 = load %struct.parser_control*, %struct.parser_control** %3, align 8
  %101 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %100, i32 0, i32 5
  store i32 2, i32* %101, align 4
  br label %102

102:                                              ; preds = %93, %39
  br label %103

103:                                              ; preds = %102, %28
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @yyerror(%struct.parser_control*, i8*) #3 {
  %3 = alloca %struct.parser_control*, align 8
  %4 = alloca i8*, align 8
  store %struct.parser_control* %0, %struct.parser_control** %3, align 8
  store i8* %1, i8** %4, align 8
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @yydestruct(i8*, i32, %union.YYSTYPE*, %struct.parser_control*) #3 {
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %union.YYSTYPE*, align 8
  %8 = alloca %struct.parser_control*, align 8
  store i8* %0, i8** %5, align 8
  store i32 %1, i32* %6, align 4
  store %union.YYSTYPE* %2, %union.YYSTYPE** %7, align 8
  store %struct.parser_control* %3, %struct.parser_control** %8, align 8
  %9 = load %union.YYSTYPE*, %union.YYSTYPE** %7, align 8
  %10 = load %struct.parser_control*, %struct.parser_control** %8, align 8
  %11 = load i8*, i8** %5, align 8
  %12 = icmp ne i8* %11, null
  br i1 %12, label %14, label %13

13:                                               ; preds = %4
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.97.131, i64 0, i64 0), i8** %5, align 8
  br label %14

14:                                               ; preds = %13, %4
  %15 = load i32, i32* %6, align 4
  ret void
}

declare dso_local i32 @fputs(i8*, %struct._IO_FILE*) #2

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #11

declare dso_local i32 @vfprintf(%struct._IO_FILE*, i8*, %struct.__va_list_tag*) #2

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #11

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.ssub.with.overflow.i32(i32, i32) #10

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @print_rel_part(i1 zeroext, i64, i8*) #3 {
  %4 = alloca i1, align 1
  %5 = alloca i8, align 1
  %6 = alloca i64, align 8
  %7 = alloca i8*, align 8
  %8 = zext i1 %0 to i8
  store i8 %8, i8* %5, align 1
  store i64 %1, i64* %6, align 8
  store i8* %2, i8** %7, align 8
  %9 = load i64, i64* %6, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %11, label %14

11:                                               ; preds = %3
  %12 = load i8, i8* %5, align 1
  %13 = trunc i8 %12 to i1
  store i1 %13, i1* %4, align 1
  br label %25

14:                                               ; preds = %3
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %16 = load i8, i8* %5, align 1
  %17 = trunc i8 %16 to i1
  %18 = xor i1 %17, true
  %19 = zext i1 %18 to i32
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds [9 x i8], [9 x i8]* @.str.95, i64 0, i64 %20
  %22 = load i64, i64* %6, align 8
  %23 = load i8*, i8** %7, align 8
  %24 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %15, i8* %21, i64 %22, i8* %23)
  store i1 true, i1* %4, align 1
  br label %25

25:                                               ; preds = %14, %11
  %26 = load i1, i1* %4, align 1
  ret i1 %26
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @str_days(%struct.parser_control*, i8*, i32) #3 {
  %4 = alloca %struct.parser_control*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store %struct.parser_control* %0, %struct.parser_control** %4, align 8
  store i8* %1, i8** %5, align 8
  store i32 %2, i32* %6, align 4
  %8 = load %struct.parser_control*, %struct.parser_control** %4, align 8
  %9 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %8, i32 0, i32 29
  %10 = load i8, i8* %9, align 8
  %11 = trunc i8 %10 to i1
  br i1 %11, label %12, label %43

12:                                               ; preds = %3
  %13 = load %struct.parser_control*, %struct.parser_control** %4, align 8
  %14 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %13, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = icmp sle i64 -1, %15
  br i1 %16, label %17, label %33

17:                                               ; preds = %12
  %18 = load %struct.parser_control*, %struct.parser_control** %4, align 8
  %19 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %18, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = icmp sle i64 %20, 12
  br i1 %21, label %22, label %33

22:                                               ; preds = %17
  %23 = load i8*, i8** %5, align 8
  %24 = load i32, i32* %6, align 4
  %25 = sext i32 %24 to i64
  %26 = load %struct.parser_control*, %struct.parser_control** %4, align 8
  %27 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %26, i32 0, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = add nsw i64 %28, 1
  %30 = getelementptr inbounds [14 x [11 x i8]], [14 x [11 x i8]]* @str_days.ordinal_values, i64 0, i64 %29
  %31 = getelementptr inbounds [11 x i8], [11 x i8]* %30, i64 0, i64 0
  %32 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %23, i64 %25, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.251, i64 0, i64 0), i8* %31) #11
  br label %41

33:                                               ; preds = %17, %12
  %34 = load i8*, i8** %5, align 8
  %35 = load i32, i32* %6, align 4
  %36 = sext i32 %35 to i64
  %37 = load %struct.parser_control*, %struct.parser_control** %4, align 8
  %38 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %37, i32 0, i32 1
  %39 = load i64, i64* %38, align 8
  %40 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %34, i64 %36, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.252, i64 0, i64 0), i64 %39) #11
  br label %41

41:                                               ; preds = %33, %22
  %42 = phi i32 [ %32, %22 ], [ %40, %33 ]
  store i32 %42, i32* %7, align 4
  br label %46

43:                                               ; preds = %3
  %44 = load i8*, i8** %5, align 8
  %45 = getelementptr inbounds i8, i8* %44, i64 0
  store i8 0, i8* %45, align 1
  store i32 0, i32* %7, align 4
  br label %46

46:                                               ; preds = %43, %41
  %47 = load %struct.parser_control*, %struct.parser_control** %4, align 8
  %48 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %47, i32 0, i32 2
  %49 = load i32, i32* %48, align 8
  %50 = icmp sle i32 0, %49
  br i1 %50, label %51, label %84

51:                                               ; preds = %46
  %52 = load %struct.parser_control*, %struct.parser_control** %4, align 8
  %53 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %52, i32 0, i32 2
  %54 = load i32, i32* %53, align 8
  %55 = icmp sle i32 %54, 6
  br i1 %55, label %56, label %84

56:                                               ; preds = %51
  %57 = load i32, i32* %7, align 4
  %58 = icmp sle i32 0, %57
  br i1 %58, label %59, label %84

59:                                               ; preds = %56
  %60 = load i32, i32* %7, align 4
  %61 = load i32, i32* %6, align 4
  %62 = icmp slt i32 %60, %61
  br i1 %62, label %63, label %84

63:                                               ; preds = %59
  %64 = load i8*, i8** %5, align 8
  %65 = load i32, i32* %7, align 4
  %66 = sext i32 %65 to i64
  %67 = getelementptr inbounds i8, i8* %64, i64 %66
  %68 = load i32, i32* %6, align 4
  %69 = load i32, i32* %7, align 4
  %70 = sub nsw i32 %68, %69
  %71 = sext i32 %70 to i64
  %72 = load i32, i32* %7, align 4
  %73 = icmp eq i32 %72, 0
  %74 = zext i1 %73 to i32
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.253, i64 0, i64 %75
  %77 = load %struct.parser_control*, %struct.parser_control** %4, align 8
  %78 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %77, i32 0, i32 2
  %79 = load i32, i32* %78, align 8
  %80 = sext i32 %79 to i64
  %81 = getelementptr inbounds [7 x [4 x i8]], [7 x [4 x i8]]* @str_days.days_values, i64 0, i64 %80
  %82 = getelementptr inbounds [4 x i8], [4 x i8]* %81, i64 0, i64 0
  %83 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %67, i64 %71, i8* %76, i8* %82) #11
  br label %85

84:                                               ; preds = %59, %56, %51, %46
  br label %85

85:                                               ; preds = %84, %63
  %86 = load i8*, i8** %5, align 8
  ret i8* %86
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @time_zone_str(i32, i8*) #3 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8, align 1
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  store i8* %1, i8** %4, align 8
  %11 = load i8*, i8** %4, align 8
  store i8* %11, i8** %5, align 8
  %12 = load i32, i32* %3, align 4
  %13 = icmp slt i32 %12, 0
  %14 = zext i1 %13 to i64
  %15 = select i1 %13, i32 45, i32 43
  %16 = trunc i32 %15 to i8
  store i8 %16, i8* %6, align 1
  %17 = load i32, i32* %3, align 4
  %18 = sdiv i32 %17, 3600
  %19 = call i32 @abs(i32 %18) #15
  store i32 %19, i32* %7, align 4
  %20 = load i8*, i8** %4, align 8
  %21 = load i8, i8* %6, align 1
  %22 = sext i8 %21 to i32
  %23 = load i32, i32* %7, align 4
  %24 = call i32 (i8*, i8*, ...) @sprintf(i8* %20, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.233, i64 0, i64 0), i32 %22, i32 %23) #11
  %25 = load i8*, i8** %5, align 8
  %26 = sext i32 %24 to i64
  %27 = getelementptr inbounds i8, i8* %25, i64 %26
  store i8* %27, i8** %5, align 8
  %28 = load i32, i32* %3, align 4
  %29 = srem i32 %28, 3600
  %30 = call i32 @abs(i32 %29) #15
  store i32 %30, i32* %8, align 4
  %31 = load i32, i32* %8, align 4
  %32 = icmp ne i32 %31, 0
  br i1 %32, label %33, label %71

33:                                               ; preds = %2
  %34 = load i32, i32* %8, align 4
  %35 = sdiv i32 %34, 60
  store i32 %35, i32* %9, align 4
  %36 = load i32, i32* %8, align 4
  %37 = srem i32 %36, 60
  store i32 %37, i32* %10, align 4
  %38 = load i8*, i8** %5, align 8
  %39 = getelementptr inbounds i8, i8* %38, i32 1
  store i8* %39, i8** %5, align 8
  store i8 58, i8* %38, align 1
  %40 = load i32, i32* %9, align 4
  %41 = sdiv i32 %40, 10
  %42 = add nsw i32 48, %41
  %43 = trunc i32 %42 to i8
  %44 = load i8*, i8** %5, align 8
  %45 = getelementptr inbounds i8, i8* %44, i32 1
  store i8* %45, i8** %5, align 8
  store i8 %43, i8* %44, align 1
  %46 = load i32, i32* %9, align 4
  %47 = srem i32 %46, 10
  %48 = add nsw i32 48, %47
  %49 = trunc i32 %48 to i8
  %50 = load i8*, i8** %5, align 8
  %51 = getelementptr inbounds i8, i8* %50, i32 1
  store i8* %51, i8** %5, align 8
  store i8 %49, i8* %50, align 1
  %52 = load i32, i32* %10, align 4
  %53 = icmp ne i32 %52, 0
  br i1 %53, label %54, label %69

54:                                               ; preds = %33
  %55 = load i8*, i8** %5, align 8
  %56 = getelementptr inbounds i8, i8* %55, i32 1
  store i8* %56, i8** %5, align 8
  store i8 58, i8* %55, align 1
  %57 = load i32, i32* %10, align 4
  %58 = sdiv i32 %57, 10
  %59 = add nsw i32 48, %58
  %60 = trunc i32 %59 to i8
  %61 = load i8*, i8** %5, align 8
  %62 = getelementptr inbounds i8, i8* %61, i32 1
  store i8* %62, i8** %5, align 8
  store i8 %60, i8* %61, align 1
  %63 = load i32, i32* %10, align 4
  %64 = srem i32 %63, 10
  %65 = add nsw i32 48, %64
  %66 = trunc i32 %65 to i8
  %67 = load i8*, i8** %5, align 8
  %68 = getelementptr inbounds i8, i8* %67, i32 1
  store i8* %68, i8** %5, align 8
  store i8 %66, i8* %67, align 1
  br label %69

69:                                               ; preds = %54, %33
  %70 = load i8*, i8** %5, align 8
  store i8 0, i8* %70, align 1
  br label %71

71:                                               ; preds = %69, %2
  %72 = load i8*, i8** %4, align 8
  ret i8* %72
}

; Function Attrs: nounwind readnone
declare dso_local i32 @abs(i32) #7

; Function Attrs: nounwind
declare dso_local i32 @sprintf(i8*, i8*, ...) #1

; Function Attrs: nounwind
declare dso_local i32 @snprintf(i8*, i64, i8*, ...) #1

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.table* @lookup_word(%struct.parser_control*, i8*) #3 {
  %3 = alloca %struct.table*, align 8
  %4 = alloca %struct.parser_control*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca %struct.table*, align 8
  %10 = alloca i8, align 1
  %11 = alloca i8, align 1
  store %struct.parser_control* %0, %struct.parser_control** %4, align 8
  store i8* %1, i8** %5, align 8
  %12 = load i8*, i8** %5, align 8
  store i8* %12, i8** %6, align 8
  br label %13

13:                                               ; preds = %25, %2
  %14 = load i8*, i8** %6, align 8
  %15 = load i8, i8* %14, align 1
  %16 = icmp ne i8 %15, 0
  br i1 %16, label %17, label %28

17:                                               ; preds = %13
  %18 = load i8*, i8** %6, align 8
  %19 = load i8, i8* %18, align 1
  %20 = call zeroext i8 @to_uchar(i8 signext %19)
  %21 = zext i8 %20 to i32
  %22 = call i32 @c_toupper(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = load i8*, i8** %6, align 8
  store i8 %23, i8* %24, align 1
  br label %25

25:                                               ; preds = %17
  %26 = load i8*, i8** %6, align 8
  %27 = getelementptr inbounds i8, i8* %26, i32 1
  store i8* %27, i8** %6, align 8
  br label %13

28:                                               ; preds = %13
  store %struct.table* getelementptr inbounds ([5 x %struct.table], [5 x %struct.table]* @meridian_table, i64 0, i64 0), %struct.table** %9, align 8
  br label %29

29:                                               ; preds = %44, %28
  %30 = load %struct.table*, %struct.table** %9, align 8
  %31 = getelementptr inbounds %struct.table, %struct.table* %30, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp ne i8* %32, null
  br i1 %33, label %34, label %47

34:                                               ; preds = %29
  %35 = load i8*, i8** %5, align 8
  %36 = load %struct.table*, %struct.table** %9, align 8
  %37 = getelementptr inbounds %struct.table, %struct.table* %36, i32 0, i32 0
  %38 = load i8*, i8** %37, align 8
  %39 = call i32 @strcmp(i8* %35, i8* %38) #13
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %43

41:                                               ; preds = %34
  %42 = load %struct.table*, %struct.table** %9, align 8
  store %struct.table* %42, %struct.table** %3, align 8
  br label %241

43:                                               ; preds = %34
  br label %44

44:                                               ; preds = %43
  %45 = load %struct.table*, %struct.table** %9, align 8
  %46 = getelementptr inbounds %struct.table, %struct.table* %45, i32 1
  store %struct.table* %46, %struct.table** %9, align 8
  br label %29

47:                                               ; preds = %29
  %48 = load i8*, i8** %5, align 8
  %49 = call i64 @strlen(i8* %48) #13
  store i64 %49, i64* %8, align 8
  %50 = load i64, i64* %8, align 8
  %51 = icmp eq i64 %50, 3
  br i1 %51, label %63, label %52

52:                                               ; preds = %47
  %53 = load i64, i64* %8, align 8
  %54 = icmp eq i64 %53, 4
  br i1 %54, label %55, label %61

55:                                               ; preds = %52
  %56 = load i8*, i8** %5, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 3
  %58 = load i8, i8* %57, align 1
  %59 = sext i8 %58 to i32
  %60 = icmp eq i32 %59, 46
  br label %61

61:                                               ; preds = %55, %52
  %62 = phi i1 [ false, %52 ], [ %60, %55 ]
  br label %63

63:                                               ; preds = %61, %47
  %64 = phi i1 [ true, %47 ], [ %62, %61 ]
  %65 = zext i1 %64 to i8
  store i8 %65, i8* %11, align 1
  store %struct.table* getelementptr inbounds ([25 x %struct.table], [25 x %struct.table]* @month_and_day_table, i64 0, i64 0), %struct.table** %9, align 8
  br label %66

66:                                               ; preds = %92, %63
  %67 = load %struct.table*, %struct.table** %9, align 8
  %68 = getelementptr inbounds %struct.table, %struct.table* %67, i32 0, i32 0
  %69 = load i8*, i8** %68, align 8
  %70 = icmp ne i8* %69, null
  br i1 %70, label %71, label %95

71:                                               ; preds = %66
  %72 = load i8, i8* %11, align 1
  %73 = trunc i8 %72 to i1
  br i1 %73, label %74, label %80

74:                                               ; preds = %71
  %75 = load i8*, i8** %5, align 8
  %76 = load %struct.table*, %struct.table** %9, align 8
  %77 = getelementptr inbounds %struct.table, %struct.table* %76, i32 0, i32 0
  %78 = load i8*, i8** %77, align 8
  %79 = call i32 @strncmp(i8* %75, i8* %78, i64 3) #13
  br label %86

80:                                               ; preds = %71
  %81 = load i8*, i8** %5, align 8
  %82 = load %struct.table*, %struct.table** %9, align 8
  %83 = getelementptr inbounds %struct.table, %struct.table* %82, i32 0, i32 0
  %84 = load i8*, i8** %83, align 8
  %85 = call i32 @strcmp(i8* %81, i8* %84) #13
  br label %86

86:                                               ; preds = %80, %74
  %87 = phi i32 [ %79, %74 ], [ %85, %80 ]
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %91

89:                                               ; preds = %86
  %90 = load %struct.table*, %struct.table** %9, align 8
  store %struct.table* %90, %struct.table** %3, align 8
  br label %241

91:                                               ; preds = %86
  br label %92

92:                                               ; preds = %91
  %93 = load %struct.table*, %struct.table** %9, align 8
  %94 = getelementptr inbounds %struct.table, %struct.table* %93, i32 1
  store %struct.table* %94, %struct.table** %9, align 8
  br label %66

95:                                               ; preds = %66
  %96 = load %struct.parser_control*, %struct.parser_control** %4, align 8
  %97 = load i8*, i8** %5, align 8
  %98 = call %struct.table* @lookup_zone(%struct.parser_control* %96, i8* %97) #13
  store %struct.table* %98, %struct.table** %9, align 8
  %99 = icmp ne %struct.table* %98, null
  br i1 %99, label %100, label %102

100:                                              ; preds = %95
  %101 = load %struct.table*, %struct.table** %9, align 8
  store %struct.table* %101, %struct.table** %3, align 8
  br label %241

102:                                              ; preds = %95
  %103 = load i8*, i8** %5, align 8
  %104 = load i8*, i8** getelementptr inbounds ([1 x %struct.table], [1 x %struct.table]* @dst_table, i64 0, i64 0, i32 0), align 16
  %105 = call i32 @strcmp(i8* %103, i8* %104) #13
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %108

107:                                              ; preds = %102
  store %struct.table* getelementptr inbounds ([1 x %struct.table], [1 x %struct.table]* @dst_table, i64 0, i64 0), %struct.table** %3, align 8
  br label %241

108:                                              ; preds = %102
  store %struct.table* getelementptr inbounds ([11 x %struct.table], [11 x %struct.table]* @time_units_table, i64 0, i64 0), %struct.table** %9, align 8
  br label %109

109:                                              ; preds = %124, %108
  %110 = load %struct.table*, %struct.table** %9, align 8
  %111 = getelementptr inbounds %struct.table, %struct.table* %110, i32 0, i32 0
  %112 = load i8*, i8** %111, align 8
  %113 = icmp ne i8* %112, null
  br i1 %113, label %114, label %127

114:                                              ; preds = %109
  %115 = load i8*, i8** %5, align 8
  %116 = load %struct.table*, %struct.table** %9, align 8
  %117 = getelementptr inbounds %struct.table, %struct.table* %116, i32 0, i32 0
  %118 = load i8*, i8** %117, align 8
  %119 = call i32 @strcmp(i8* %115, i8* %118) #13
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %123

121:                                              ; preds = %114
  %122 = load %struct.table*, %struct.table** %9, align 8
  store %struct.table* %122, %struct.table** %3, align 8
  br label %241

123:                                              ; preds = %114
  br label %124

124:                                              ; preds = %123
  %125 = load %struct.table*, %struct.table** %9, align 8
  %126 = getelementptr inbounds %struct.table, %struct.table* %125, i32 1
  store %struct.table* %126, %struct.table** %9, align 8
  br label %109

127:                                              ; preds = %109
  %128 = load i8*, i8** %5, align 8
  %129 = load i64, i64* %8, align 8
  %130 = sub nsw i64 %129, 1
  %131 = getelementptr inbounds i8, i8* %128, i64 %130
  %132 = load i8, i8* %131, align 1
  %133 = sext i8 %132 to i32
  %134 = icmp eq i32 %133, 83
  br i1 %134, label %135, label %163

135:                                              ; preds = %127
  %136 = load i8*, i8** %5, align 8
  %137 = load i64, i64* %8, align 8
  %138 = sub nsw i64 %137, 1
  %139 = getelementptr inbounds i8, i8* %136, i64 %138
  store i8 0, i8* %139, align 1
  store %struct.table* getelementptr inbounds ([11 x %struct.table], [11 x %struct.table]* @time_units_table, i64 0, i64 0), %struct.table** %9, align 8
  br label %140

140:                                              ; preds = %155, %135
  %141 = load %struct.table*, %struct.table** %9, align 8
  %142 = getelementptr inbounds %struct.table, %struct.table* %141, i32 0, i32 0
  %143 = load i8*, i8** %142, align 8
  %144 = icmp ne i8* %143, null
  br i1 %144, label %145, label %158

145:                                              ; preds = %140
  %146 = load i8*, i8** %5, align 8
  %147 = load %struct.table*, %struct.table** %9, align 8
  %148 = getelementptr inbounds %struct.table, %struct.table* %147, i32 0, i32 0
  %149 = load i8*, i8** %148, align 8
  %150 = call i32 @strcmp(i8* %146, i8* %149) #13
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %152, label %154

152:                                              ; preds = %145
  %153 = load %struct.table*, %struct.table** %9, align 8
  store %struct.table* %153, %struct.table** %3, align 8
  br label %241

154:                                              ; preds = %145
  br label %155

155:                                              ; preds = %154
  %156 = load %struct.table*, %struct.table** %9, align 8
  %157 = getelementptr inbounds %struct.table, %struct.table* %156, i32 1
  store %struct.table* %157, %struct.table** %9, align 8
  br label %140

158:                                              ; preds = %140
  %159 = load i8*, i8** %5, align 8
  %160 = load i64, i64* %8, align 8
  %161 = sub nsw i64 %160, 1
  %162 = getelementptr inbounds i8, i8* %159, i64 %161
  store i8 83, i8* %162, align 1
  br label %163

163:                                              ; preds = %158, %127
  store %struct.table* getelementptr inbounds ([21 x %struct.table], [21 x %struct.table]* @relative_time_table, i64 0, i64 0), %struct.table** %9, align 8
  br label %164

164:                                              ; preds = %179, %163
  %165 = load %struct.table*, %struct.table** %9, align 8
  %166 = getelementptr inbounds %struct.table, %struct.table* %165, i32 0, i32 0
  %167 = load i8*, i8** %166, align 8
  %168 = icmp ne i8* %167, null
  br i1 %168, label %169, label %182

169:                                              ; preds = %164
  %170 = load i8*, i8** %5, align 8
  %171 = load %struct.table*, %struct.table** %9, align 8
  %172 = getelementptr inbounds %struct.table, %struct.table* %171, i32 0, i32 0
  %173 = load i8*, i8** %172, align 8
  %174 = call i32 @strcmp(i8* %170, i8* %173) #13
  %175 = icmp eq i32 %174, 0
  br i1 %175, label %176, label %178

176:                                              ; preds = %169
  %177 = load %struct.table*, %struct.table** %9, align 8
  store %struct.table* %177, %struct.table** %3, align 8
  br label %241

178:                                              ; preds = %169
  br label %179

179:                                              ; preds = %178
  %180 = load %struct.table*, %struct.table** %9, align 8
  %181 = getelementptr inbounds %struct.table, %struct.table* %180, i32 1
  store %struct.table* %181, %struct.table** %9, align 8
  br label %164

182:                                              ; preds = %164
  %183 = load i64, i64* %8, align 8
  %184 = icmp eq i64 %183, 1
  br i1 %184, label %185, label %210

185:                                              ; preds = %182
  store %struct.table* getelementptr inbounds ([26 x %struct.table], [26 x %struct.table]* @military_table, i64 0, i64 0), %struct.table** %9, align 8
  br label %186

186:                                              ; preds = %206, %185
  %187 = load %struct.table*, %struct.table** %9, align 8
  %188 = getelementptr inbounds %struct.table, %struct.table* %187, i32 0, i32 0
  %189 = load i8*, i8** %188, align 8
  %190 = icmp ne i8* %189, null
  br i1 %190, label %191, label %209

191:                                              ; preds = %186
  %192 = load i8*, i8** %5, align 8
  %193 = getelementptr inbounds i8, i8* %192, i64 0
  %194 = load i8, i8* %193, align 1
  %195 = sext i8 %194 to i32
  %196 = load %struct.table*, %struct.table** %9, align 8
  %197 = getelementptr inbounds %struct.table, %struct.table* %196, i32 0, i32 0
  %198 = load i8*, i8** %197, align 8
  %199 = getelementptr inbounds i8, i8* %198, i64 0
  %200 = load i8, i8* %199, align 1
  %201 = sext i8 %200 to i32
  %202 = icmp eq i32 %195, %201
  br i1 %202, label %203, label %205

203:                                              ; preds = %191
  %204 = load %struct.table*, %struct.table** %9, align 8
  store %struct.table* %204, %struct.table** %3, align 8
  br label %241

205:                                              ; preds = %191
  br label %206

206:                                              ; preds = %205
  %207 = load %struct.table*, %struct.table** %9, align 8
  %208 = getelementptr inbounds %struct.table, %struct.table* %207, i32 1
  store %struct.table* %208, %struct.table** %9, align 8
  br label %186

209:                                              ; preds = %186
  br label %210

210:                                              ; preds = %209, %182
  store i8 0, i8* %10, align 1
  %211 = load i8*, i8** %5, align 8
  store i8* %211, i8** %7, align 8
  store i8* %211, i8** %6, align 8
  br label %212

212:                                              ; preds = %227, %210
  %213 = load i8*, i8** %7, align 8
  %214 = load i8, i8* %213, align 1
  %215 = load i8*, i8** %6, align 8
  store i8 %214, i8* %215, align 1
  %216 = icmp ne i8 %214, 0
  br i1 %216, label %217, label %230

217:                                              ; preds = %212
  %218 = load i8*, i8** %7, align 8
  %219 = load i8, i8* %218, align 1
  %220 = sext i8 %219 to i32
  %221 = icmp eq i32 %220, 46
  br i1 %221, label %222, label %223

222:                                              ; preds = %217
  store i8 1, i8* %10, align 1
  br label %226

223:                                              ; preds = %217
  %224 = load i8*, i8** %6, align 8
  %225 = getelementptr inbounds i8, i8* %224, i32 1
  store i8* %225, i8** %6, align 8
  br label %226

226:                                              ; preds = %223, %222
  br label %227

227:                                              ; preds = %226
  %228 = load i8*, i8** %7, align 8
  %229 = getelementptr inbounds i8, i8* %228, i32 1
  store i8* %229, i8** %7, align 8
  br label %212

230:                                              ; preds = %212
  %231 = load i8, i8* %10, align 1
  %232 = trunc i8 %231 to i1
  br i1 %232, label %233, label %240

233:                                              ; preds = %230
  %234 = load %struct.parser_control*, %struct.parser_control** %4, align 8
  %235 = load i8*, i8** %5, align 8
  %236 = call %struct.table* @lookup_zone(%struct.parser_control* %234, i8* %235) #13
  store %struct.table* %236, %struct.table** %9, align 8
  %237 = icmp ne %struct.table* %236, null
  br i1 %237, label %238, label %240

238:                                              ; preds = %233
  %239 = load %struct.table*, %struct.table** %9, align 8
  store %struct.table* %239, %struct.table** %3, align 8
  br label %241

240:                                              ; preds = %233, %230
  store %struct.table* null, %struct.table** %3, align 8
  br label %241

241:                                              ; preds = %240, %238, %203, %176, %152, %121, %107, %100, %89, %41
  %242 = load %struct.table*, %struct.table** %3, align 8
  ret %struct.table* %242
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i8 @to_uchar(i8 signext) #3 {
  %2 = alloca i8, align 1
  store i8 %0, i8* %2, align 1
  %3 = load i8, i8* %2, align 1
  ret i8 %3
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal %struct.table* @lookup_zone(%struct.parser_control*, i8*) #8 {
  %3 = alloca %struct.table*, align 8
  %4 = alloca %struct.parser_control*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca %struct.table*, align 8
  store %struct.parser_control* %0, %struct.parser_control** %4, align 8
  store i8* %1, i8** %5, align 8
  store %struct.table* getelementptr inbounds ([4 x %struct.table], [4 x %struct.table]* @universal_time_zone_table, i64 0, i64 0), %struct.table** %6, align 8
  br label %7

7:                                                ; preds = %22, %2
  %8 = load %struct.table*, %struct.table** %6, align 8
  %9 = getelementptr inbounds %struct.table, %struct.table* %8, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = icmp ne i8* %10, null
  br i1 %11, label %12, label %25

12:                                               ; preds = %7
  %13 = load i8*, i8** %5, align 8
  %14 = load %struct.table*, %struct.table** %6, align 8
  %15 = getelementptr inbounds %struct.table, %struct.table* %14, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = call i32 @strcmp(i8* %13, i8* %16) #13
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %21

19:                                               ; preds = %12
  %20 = load %struct.table*, %struct.table** %6, align 8
  store %struct.table* %20, %struct.table** %3, align 8
  br label %67

21:                                               ; preds = %12
  br label %22

22:                                               ; preds = %21
  %23 = load %struct.table*, %struct.table** %6, align 8
  %24 = getelementptr inbounds %struct.table, %struct.table* %23, i32 1
  store %struct.table* %24, %struct.table** %6, align 8
  br label %7

25:                                               ; preds = %7
  %26 = load %struct.parser_control*, %struct.parser_control** %4, align 8
  %27 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %26, i32 0, i32 30
  %28 = getelementptr inbounds [3 x %struct.table], [3 x %struct.table]* %27, i64 0, i64 0
  store %struct.table* %28, %struct.table** %6, align 8
  br label %29

29:                                               ; preds = %44, %25
  %30 = load %struct.table*, %struct.table** %6, align 8
  %31 = getelementptr inbounds %struct.table, %struct.table* %30, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp ne i8* %32, null
  br i1 %33, label %34, label %47

34:                                               ; preds = %29
  %35 = load i8*, i8** %5, align 8
  %36 = load %struct.table*, %struct.table** %6, align 8
  %37 = getelementptr inbounds %struct.table, %struct.table* %36, i32 0, i32 0
  %38 = load i8*, i8** %37, align 8
  %39 = call i32 @strcmp(i8* %35, i8* %38) #13
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %43

41:                                               ; preds = %34
  %42 = load %struct.table*, %struct.table** %6, align 8
  store %struct.table* %42, %struct.table** %3, align 8
  br label %67

43:                                               ; preds = %34
  br label %44

44:                                               ; preds = %43
  %45 = load %struct.table*, %struct.table** %6, align 8
  %46 = getelementptr inbounds %struct.table, %struct.table* %45, i32 1
  store %struct.table* %46, %struct.table** %6, align 8
  br label %29

47:                                               ; preds = %29
  store %struct.table* getelementptr inbounds ([48 x %struct.table], [48 x %struct.table]* @time_zone_table, i64 0, i64 0), %struct.table** %6, align 8
  br label %48

48:                                               ; preds = %63, %47
  %49 = load %struct.table*, %struct.table** %6, align 8
  %50 = getelementptr inbounds %struct.table, %struct.table* %49, i32 0, i32 0
  %51 = load i8*, i8** %50, align 8
  %52 = icmp ne i8* %51, null
  br i1 %52, label %53, label %66

53:                                               ; preds = %48
  %54 = load i8*, i8** %5, align 8
  %55 = load %struct.table*, %struct.table** %6, align 8
  %56 = getelementptr inbounds %struct.table, %struct.table* %55, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = call i32 @strcmp(i8* %54, i8* %57) #13
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %62

60:                                               ; preds = %53
  %61 = load %struct.table*, %struct.table** %6, align 8
  store %struct.table* %61, %struct.table** %3, align 8
  br label %67

62:                                               ; preds = %53
  br label %63

63:                                               ; preds = %62
  %64 = load %struct.table*, %struct.table** %6, align 8
  %65 = getelementptr inbounds %struct.table, %struct.table* %64, i32 1
  store %struct.table* %65, %struct.table** %6, align 8
  br label %48

66:                                               ; preds = %48
  store %struct.table* null, %struct.table** %3, align 8
  br label %67

67:                                               ; preds = %66, %60, %41, %19
  %68 = load %struct.table*, %struct.table** %3, align 8
  ret %struct.table* %68
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @parse_datetime2(%struct.timespec*, i8*, %struct.timespec*, i32, %struct.tm_zone*, i8*) #3 {
  %7 = alloca %struct.timespec*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca %struct.timespec*, align 8
  %10 = alloca i32, align 4
  %11 = alloca %struct.tm_zone*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca %struct.tm, align 8
  %14 = alloca %struct.tm, align 8
  %15 = alloca [27 x i8], align 16
  %16 = alloca [100 x i8], align 16
  %17 = alloca i8, align 1
  %18 = alloca i8*, align 8
  %19 = alloca i8*, align 8
  %20 = alloca [100 x i8], align 16
  %21 = alloca %struct.timespec, align 8
  %22 = alloca i64, align 8
  %23 = alloca i32, align 4
  %24 = alloca i8, align 1
  %25 = alloca %struct.tm_zone*, align 8
  %26 = alloca %struct.relative_time, align 8
  %27 = alloca i8*, align 8
  %28 = alloca i64, align 8
  %29 = alloca i8*, align 8
  %30 = alloca %struct.tm_zone*, align 8
  %31 = alloca i8*, align 8
  %32 = alloca i8*, align 8
  %33 = alloca %struct.tm, align 8
  %34 = alloca %struct.parser_control, align 8
  %35 = alloca i32, align 4
  %36 = alloca i64, align 8
  %37 = alloca i64, align 8
  %38 = alloca %struct.tm, align 8
  %39 = alloca i8*, align 8
  %40 = alloca i8, align 1
  %41 = alloca i8, align 1
  %42 = alloca [30 x i8], align 16
  %43 = alloca %struct.tm_zone*, align 8
  %44 = alloca [100 x i8], align 16
  %45 = alloca i64, align 8
  %46 = alloca i32, align 4
  %47 = alloca i32, align 4
  %48 = alloca i32, align 4
  %49 = alloca [13 x i8], align 1
  %50 = alloca i64, align 8
  %51 = alloca i64, align 8
  %52 = alloca i8, align 1
  %53 = alloca i64, align 8
  %54 = alloca i64, align 8
  %55 = alloca i64, align 8
  %56 = alloca i64, align 8
  %57 = alloca i32, align 4
  %58 = alloca i32, align 4
  %59 = alloca i64, align 8
  %60 = alloca i64, align 8
  %61 = alloca i64, align 8
  %62 = alloca i64, align 8
  %63 = alloca i64, align 8
  %64 = alloca i64, align 8
  %65 = alloca %struct.tm, align 8
  %66 = alloca i64, align 8
  %67 = alloca i32, align 4
  %68 = alloca %struct.tm, align 8
  %69 = alloca %struct.tm, align 8
  %70 = alloca i8, align 1
  %71 = alloca i8, align 1
  %72 = alloca i64, align 8
  store %struct.timespec* %0, %struct.timespec** %7, align 8
  store i8* %1, i8** %8, align 8
  store %struct.timespec* %2, %struct.timespec** %9, align 8
  store i32 %3, i32* %10, align 4
  store %struct.tm_zone* %4, %struct.tm_zone** %11, align 8
  store i8* %5, i8** %12, align 8
  store i8 0, i8* %17, align 1
  %73 = load i8*, i8** %8, align 8
  %74 = load i8*, i8** %8, align 8
  %75 = call i64 @strlen(i8* %74) #13
  %76 = getelementptr inbounds i8, i8* %73, i64 %75
  store i8* %76, i8** %18, align 8
  store i8* null, i8** %19, align 8
  %77 = load %struct.timespec*, %struct.timespec** %9, align 8
  %78 = icmp ne %struct.timespec* %77, null
  br i1 %78, label %80, label %79

79:                                               ; preds = %6
  call void @gettime(%struct.timespec* %21)
  store %struct.timespec* %21, %struct.timespec** %9, align 8
  br label %80

80:                                               ; preds = %79, %6
  %81 = load %struct.timespec*, %struct.timespec** %9, align 8
  %82 = getelementptr inbounds %struct.timespec, %struct.timespec* %81, i32 0, i32 0
  %83 = load i64, i64* %82, align 8
  store i64 %83, i64* %22, align 8
  %84 = load %struct.timespec*, %struct.timespec** %9, align 8
  %85 = getelementptr inbounds %struct.timespec, %struct.timespec* %84, i32 0, i32 1
  %86 = load i64, i64* %85, align 8
  %87 = trunc i64 %86 to i32
  store i32 %87, i32* %23, align 4
  br label %88

88:                                               ; preds = %94, %80
  %89 = load i8*, i8** %8, align 8
  %90 = load i8, i8* %89, align 1
  store i8 %90, i8* %24, align 1
  %91 = load i8, i8* %24, align 1
  %92 = zext i8 %91 to i32
  %93 = call zeroext i1 @c_isspace(i32 %92)
  br i1 %93, label %94, label %97

94:                                               ; preds = %88
  %95 = load i8*, i8** %8, align 8
  %96 = getelementptr inbounds i8, i8* %95, i32 1
  store i8* %96, i8** %8, align 8
  br label %88

97:                                               ; preds = %88
  %98 = load %struct.tm_zone*, %struct.tm_zone** %11, align 8
  store %struct.tm_zone* %98, %struct.tm_zone** %25, align 8
  %99 = bitcast %struct.relative_time* %26 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %99, i8 0, i64 56, i1 false)
  %100 = load i8*, i8** %8, align 8
  %101 = call i32 @strncmp(i8* %100, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19.148, i64 0, i64 0), i64 4) #13
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %200

103:                                              ; preds = %97
  %104 = load i8*, i8** %8, align 8
  %105 = getelementptr inbounds i8, i8* %104, i64 4
  store i8* %105, i8** %27, align 8
  store i64 1, i64* %28, align 8
  %106 = load i8*, i8** %27, align 8
  store i8* %106, i8** %29, align 8
  br label %107

107:                                              ; preds = %194, %103
  %108 = load i8*, i8** %29, align 8
  %109 = load i8, i8* %108, align 1
  %110 = icmp ne i8 %109, 0
  br i1 %110, label %111, label %199

111:                                              ; preds = %107
  %112 = load i8*, i8** %29, align 8
  %113 = load i8, i8* %112, align 1
  %114 = sext i8 %113 to i32
  %115 = icmp eq i32 %114, 92
  br i1 %115, label %116, label %130

116:                                              ; preds = %111
  %117 = load i8*, i8** %29, align 8
  %118 = getelementptr inbounds i8, i8* %117, i32 1
  store i8* %118, i8** %29, align 8
  %119 = load i8*, i8** %29, align 8
  %120 = load i8, i8* %119, align 1
  %121 = sext i8 %120 to i32
  %122 = icmp eq i32 %121, 92
  br i1 %122, label %129, label %123

123:                                              ; preds = %116
  %124 = load i8*, i8** %29, align 8
  %125 = load i8, i8* %124, align 1
  %126 = sext i8 %125 to i32
  %127 = icmp eq i32 %126, 34
  br i1 %127, label %129, label %128

128:                                              ; preds = %123
  br label %199

129:                                              ; preds = %123, %116
  br label %193

130:                                              ; preds = %111
  %131 = load i8*, i8** %29, align 8
  %132 = load i8, i8* %131, align 1
  %133 = sext i8 %132 to i32
  %134 = icmp eq i32 %133, 34
  br i1 %134, label %135, label %192

135:                                              ; preds = %130
  %136 = getelementptr inbounds [100 x i8], [100 x i8]* %20, i64 0, i64 0
  store i8* %136, i8** %31, align 8
  %137 = load i64, i64* %28, align 8
  %138 = icmp slt i64 100, %137
  br i1 %138, label %139, label %147

139:                                              ; preds = %135
  %140 = load i64, i64* %28, align 8
  %141 = call noalias i8* @malloc(i64 %140) #11
  store i8* %141, i8** %19, align 8
  %142 = load i8*, i8** %19, align 8
  %143 = icmp ne i8* %142, null
  br i1 %143, label %145, label %144

144:                                              ; preds = %139
  br label %5616

145:                                              ; preds = %139
  %146 = load i8*, i8** %19, align 8
  store i8* %146, i8** %31, align 8
  br label %147

147:                                              ; preds = %145, %135
  %148 = load i8*, i8** %31, align 8
  store i8* %148, i8** %32, align 8
  %149 = load i8*, i8** %27, align 8
  store i8* %149, i8** %29, align 8
  br label %150

150:                                              ; preds = %167, %147
  %151 = load i8*, i8** %29, align 8
  %152 = load i8, i8* %151, align 1
  %153 = sext i8 %152 to i32
  %154 = icmp ne i32 %153, 34
  br i1 %154, label %155, label %170

155:                                              ; preds = %150
  %156 = load i8*, i8** %29, align 8
  %157 = load i8, i8* %156, align 1
  %158 = sext i8 %157 to i32
  %159 = icmp eq i32 %158, 92
  %160 = zext i1 %159 to i32
  %161 = load i8*, i8** %29, align 8
  %162 = sext i32 %160 to i64
  %163 = getelementptr inbounds i8, i8* %161, i64 %162
  store i8* %163, i8** %29, align 8
  %164 = load i8, i8* %163, align 1
  %165 = load i8*, i8** %32, align 8
  %166 = getelementptr inbounds i8, i8* %165, i32 1
  store i8* %166, i8** %32, align 8
  store i8 %164, i8* %165, align 1
  br label %167

167:                                              ; preds = %155
  %168 = load i8*, i8** %29, align 8
  %169 = getelementptr inbounds i8, i8* %168, i32 1
  store i8* %169, i8** %29, align 8
  br label %150

170:                                              ; preds = %150
  %171 = load i8*, i8** %32, align 8
  store i8 0, i8* %171, align 1
  %172 = load i8*, i8** %31, align 8
  %173 = call %struct.tm_zone* @tzalloc(i8* %172)
  store %struct.tm_zone* %173, %struct.tm_zone** %30, align 8
  %174 = load %struct.tm_zone*, %struct.tm_zone** %30, align 8
  %175 = icmp ne %struct.tm_zone* %174, null
  br i1 %175, label %177, label %176

176:                                              ; preds = %170
  br label %5616

177:                                              ; preds = %170
  %178 = load %struct.tm_zone*, %struct.tm_zone** %30, align 8
  store %struct.tm_zone* %178, %struct.tm_zone** %25, align 8
  %179 = load i8*, i8** %31, align 8
  store i8* %179, i8** %12, align 8
  %180 = load i8*, i8** %29, align 8
  %181 = getelementptr inbounds i8, i8* %180, i64 1
  store i8* %181, i8** %8, align 8
  br label %182

182:                                              ; preds = %188, %177
  %183 = load i8*, i8** %8, align 8
  %184 = load i8, i8* %183, align 1
  store i8 %184, i8* %24, align 1
  %185 = load i8, i8* %24, align 1
  %186 = zext i8 %185 to i32
  %187 = call zeroext i1 @c_isspace(i32 %186)
  br i1 %187, label %188, label %191

188:                                              ; preds = %182
  %189 = load i8*, i8** %8, align 8
  %190 = getelementptr inbounds i8, i8* %189, i32 1
  store i8* %190, i8** %8, align 8
  br label %182

191:                                              ; preds = %182
  br label %199

192:                                              ; preds = %130
  br label %193

193:                                              ; preds = %192, %129
  br label %194

194:                                              ; preds = %193
  %195 = load i8*, i8** %29, align 8
  %196 = getelementptr inbounds i8, i8* %195, i32 1
  store i8* %196, i8** %29, align 8
  %197 = load i64, i64* %28, align 8
  %198 = add nsw i64 %197, 1
  store i64 %198, i64* %28, align 8
  br label %107

199:                                              ; preds = %191, %128, %107
  br label %200

200:                                              ; preds = %199, %97
  %201 = load %struct.tm_zone*, %struct.tm_zone** %25, align 8
  %202 = load %struct.timespec*, %struct.timespec** %9, align 8
  %203 = getelementptr inbounds %struct.timespec, %struct.timespec* %202, i32 0, i32 0
  %204 = call %struct.tm* @localtime_rz(%struct.tm_zone* %201, i64* %203, %struct.tm* %33)
  %205 = icmp ne %struct.tm* %204, null
  br i1 %205, label %207, label %206

206:                                              ; preds = %200
  br label %5616

207:                                              ; preds = %200
  %208 = load i8*, i8** %8, align 8
  %209 = load i8, i8* %208, align 1
  %210 = sext i8 %209 to i32
  %211 = icmp eq i32 %210, 0
  br i1 %211, label %212, label %213

212:                                              ; preds = %207
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.20.149, i64 0, i64 0), i8** %8, align 8
  br label %213

213:                                              ; preds = %212, %207
  %214 = load i8*, i8** %8, align 8
  %215 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 0
  store i8* %214, i8** %215, align 8
  %216 = load i32, i32* %10, align 4
  %217 = and i32 %216, 1
  %218 = icmp ne i32 %217, 0
  %219 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 22
  %220 = zext i1 %218 to i8
  store i8 %220, i8* %219, align 1
  %221 = getelementptr inbounds %struct.tm, %struct.tm* %33, i32 0, i32 5
  %222 = load i32, i32* %221, align 4
  %223 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 6
  %224 = getelementptr inbounds %struct.textint, %struct.textint* %223, i32 0, i32 1
  %225 = sext i32 %222 to i64
  %226 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %225, i64 1900)
  %227 = extractvalue { i64, i1 } %226, 1
  %228 = extractvalue { i64, i1 } %226, 0
  store i64 %228, i64* %224, align 8
  br i1 %227, label %229, label %236

229:                                              ; preds = %213
  %230 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 22
  %231 = load i8, i8* %230, align 1
  %232 = trunc i8 %231 to i1
  br i1 %232, label %233, label %235

233:                                              ; preds = %229
  %234 = call i8* @gettext(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.21.150, i64 0, i64 0)) #11
  call void (i8*, ...) @dbg_printf(i8* %234)
  br label %235

235:                                              ; preds = %233, %229
  br label %5616

236:                                              ; preds = %213
  %237 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 6
  %238 = getelementptr inbounds %struct.textint, %struct.textint* %237, i32 0, i32 2
  store i64 0, i64* %238, align 8
  %239 = getelementptr inbounds %struct.tm, %struct.tm* %33, i32 0, i32 4
  %240 = load i32, i32* %239, align 8
  %241 = add nsw i32 %240, 1
  %242 = sext i32 %241 to i64
  %243 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 7
  store i64 %242, i64* %243, align 8
  %244 = getelementptr inbounds %struct.tm, %struct.tm* %33, i32 0, i32 3
  %245 = load i32, i32* %244, align 4
  %246 = sext i32 %245 to i64
  %247 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 8
  store i64 %246, i64* %247, align 8
  %248 = getelementptr inbounds %struct.tm, %struct.tm* %33, i32 0, i32 2
  %249 = load i32, i32* %248, align 8
  %250 = sext i32 %249 to i64
  %251 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 9
  store i64 %250, i64* %251, align 8
  %252 = getelementptr inbounds %struct.tm, %struct.tm* %33, i32 0, i32 1
  %253 = load i32, i32* %252, align 4
  %254 = sext i32 %253 to i64
  %255 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 10
  store i64 %254, i64* %255, align 8
  %256 = getelementptr inbounds %struct.tm, %struct.tm* %33, i32 0, i32 0
  %257 = load i32, i32* %256, align 8
  %258 = sext i32 %257 to i64
  %259 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 11
  %260 = getelementptr inbounds %struct.timespec, %struct.timespec* %259, i32 0, i32 0
  store i64 %258, i64* %260, align 8
  %261 = load i32, i32* %23, align 4
  %262 = sext i32 %261 to i64
  %263 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 11
  %264 = getelementptr inbounds %struct.timespec, %struct.timespec* %263, i32 0, i32 1
  store i64 %262, i64* %264, align 8
  %265 = getelementptr inbounds %struct.tm, %struct.tm* %33, i32 0, i32 8
  %266 = load i32, i32* %265, align 8
  %267 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 8
  store i32 %266, i32* %267, align 8
  %268 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 5
  store i32 2, i32* %268, align 4
  %269 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %270 = bitcast %struct.relative_time* %269 to i8*
  %271 = bitcast %struct.relative_time* %26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %270, i8* align 8 %271, i64 56, i1 false)
  %272 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 13
  store i8 0, i8* %272, align 8
  %273 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 14
  store i8 0, i8* %273, align 1
  %274 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 15
  store i64 0, i64* %274, align 8
  %275 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 16
  store i64 0, i64* %275, align 8
  %276 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 19
  store i64 0, i64* %276, align 8
  %277 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 17
  store i64 0, i64* %277, align 8
  %278 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 18
  store i64 0, i64* %278, align 8
  %279 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 20
  store i64 0, i64* %279, align 8
  %280 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 21
  store i8 0, i8* %280, align 8
  %281 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 23
  store i8 0, i8* %281, align 2
  %282 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 24
  store i8 0, i8* %282, align 1
  %283 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 26
  store i8 0, i8* %283, align 1
  %284 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 25
  store i8 0, i8* %284, align 4
  %285 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 27
  store i8 0, i8* %285, align 2
  %286 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 28
  store i8 0, i8* %286, align 1
  %287 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 29
  store i8 0, i8* %287, align 8
  %288 = getelementptr inbounds %struct.tm, %struct.tm* %33, i32 0, i32 10
  %289 = load i8*, i8** %288, align 8
  %290 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 30
  %291 = getelementptr inbounds [3 x %struct.table], [3 x %struct.table]* %290, i64 0, i64 0
  %292 = getelementptr inbounds %struct.table, %struct.table* %291, i32 0, i32 0
  store i8* %289, i8** %292, align 8
  %293 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 30
  %294 = getelementptr inbounds [3 x %struct.table], [3 x %struct.table]* %293, i64 0, i64 0
  %295 = getelementptr inbounds %struct.table, %struct.table* %294, i32 0, i32 1
  store i32 269, i32* %295, align 8
  %296 = getelementptr inbounds %struct.tm, %struct.tm* %33, i32 0, i32 8
  %297 = load i32, i32* %296, align 8
  %298 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 30
  %299 = getelementptr inbounds [3 x %struct.table], [3 x %struct.table]* %298, i64 0, i64 0
  %300 = getelementptr inbounds %struct.table, %struct.table* %299, i32 0, i32 2
  store i32 %297, i32* %300, align 4
  %301 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 30
  %302 = getelementptr inbounds [3 x %struct.table], [3 x %struct.table]* %301, i64 0, i64 1
  %303 = getelementptr inbounds %struct.table, %struct.table* %302, i32 0, i32 0
  store i8* null, i8** %303, align 8
  store i32 1, i32* %35, align 4
  br label %304

304:                                              ; preds = %354, %236
  %305 = load i32, i32* %35, align 4
  %306 = icmp sle i32 %305, 3
  br i1 %306, label %307, label %357

307:                                              ; preds = %304
  %308 = load i64, i64* %22, align 8
  %309 = load i32, i32* %35, align 4
  %310 = mul nsw i32 %309, 7776000
  %311 = sext i32 %310 to i64
  %312 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %308, i64 %311)
  %313 = extractvalue { i64, i1 } %312, 1
  %314 = extractvalue { i64, i1 } %312, 0
  store i64 %314, i64* %36, align 8
  br i1 %313, label %318, label %315

315:                                              ; preds = %307
  %316 = load i64, i64* %36, align 8
  %317 = call zeroext i1 @time_overflow(i64 %316)
  br i1 %317, label %318, label %319

318:                                              ; preds = %315, %307
  br label %357

319:                                              ; preds = %315
  %320 = load i64, i64* %36, align 8
  store i64 %320, i64* %37, align 8
  %321 = load %struct.tm_zone*, %struct.tm_zone** %25, align 8
  %322 = call %struct.tm* @localtime_rz(%struct.tm_zone* %321, i64* %37, %struct.tm* %38)
  %323 = icmp ne %struct.tm* %322, null
  br i1 %323, label %324, label %353

324:                                              ; preds = %319
  %325 = getelementptr inbounds %struct.tm, %struct.tm* %38, i32 0, i32 10
  %326 = load i8*, i8** %325, align 8
  %327 = icmp ne i8* %326, null
  br i1 %327, label %328, label %353

328:                                              ; preds = %324
  %329 = getelementptr inbounds %struct.tm, %struct.tm* %38, i32 0, i32 8
  %330 = load i32, i32* %329, align 8
  %331 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 30
  %332 = getelementptr inbounds [3 x %struct.table], [3 x %struct.table]* %331, i64 0, i64 0
  %333 = getelementptr inbounds %struct.table, %struct.table* %332, i32 0, i32 2
  %334 = load i32, i32* %333, align 4
  %335 = icmp ne i32 %330, %334
  br i1 %335, label %336, label %353

336:                                              ; preds = %328
  %337 = getelementptr inbounds %struct.tm, %struct.tm* %38, i32 0, i32 10
  %338 = load i8*, i8** %337, align 8
  %339 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 30
  %340 = getelementptr inbounds [3 x %struct.table], [3 x %struct.table]* %339, i64 0, i64 1
  %341 = getelementptr inbounds %struct.table, %struct.table* %340, i32 0, i32 0
  store i8* %338, i8** %341, align 8
  %342 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 30
  %343 = getelementptr inbounds [3 x %struct.table], [3 x %struct.table]* %342, i64 0, i64 1
  %344 = getelementptr inbounds %struct.table, %struct.table* %343, i32 0, i32 1
  store i32 269, i32* %344, align 8
  %345 = getelementptr inbounds %struct.tm, %struct.tm* %38, i32 0, i32 8
  %346 = load i32, i32* %345, align 8
  %347 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 30
  %348 = getelementptr inbounds [3 x %struct.table], [3 x %struct.table]* %347, i64 0, i64 1
  %349 = getelementptr inbounds %struct.table, %struct.table* %348, i32 0, i32 2
  store i32 %346, i32* %349, align 4
  %350 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 30
  %351 = getelementptr inbounds [3 x %struct.table], [3 x %struct.table]* %350, i64 0, i64 2
  %352 = getelementptr inbounds %struct.table, %struct.table* %351, i32 0, i32 0
  store i8* null, i8** %352, align 8
  br label %357

353:                                              ; preds = %328, %324, %319
  br label %354

354:                                              ; preds = %353
  %355 = load i32, i32* %35, align 4
  %356 = add nsw i32 %355, 1
  store i32 %356, i32* %35, align 4
  br label %304

357:                                              ; preds = %336, %318, %304
  %358 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 30
  %359 = getelementptr inbounds [3 x %struct.table], [3 x %struct.table]* %358, i64 0, i64 0
  %360 = getelementptr inbounds %struct.table, %struct.table* %359, i32 0, i32 0
  %361 = load i8*, i8** %360, align 8
  %362 = icmp ne i8* %361, null
  br i1 %362, label %363, label %387

363:                                              ; preds = %357
  %364 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 30
  %365 = getelementptr inbounds [3 x %struct.table], [3 x %struct.table]* %364, i64 0, i64 1
  %366 = getelementptr inbounds %struct.table, %struct.table* %365, i32 0, i32 0
  %367 = load i8*, i8** %366, align 8
  %368 = icmp ne i8* %367, null
  br i1 %368, label %369, label %387

369:                                              ; preds = %363
  %370 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 30
  %371 = getelementptr inbounds [3 x %struct.table], [3 x %struct.table]* %370, i64 0, i64 0
  %372 = getelementptr inbounds %struct.table, %struct.table* %371, i32 0, i32 0
  %373 = load i8*, i8** %372, align 8
  %374 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 30
  %375 = getelementptr inbounds [3 x %struct.table], [3 x %struct.table]* %374, i64 0, i64 1
  %376 = getelementptr inbounds %struct.table, %struct.table* %375, i32 0, i32 0
  %377 = load i8*, i8** %376, align 8
  %378 = call i32 @strcmp(i8* %373, i8* %377) #13
  %379 = icmp ne i32 %378, 0
  br i1 %379, label %387, label %380

380:                                              ; preds = %369
  %381 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 30
  %382 = getelementptr inbounds [3 x %struct.table], [3 x %struct.table]* %381, i64 0, i64 0
  %383 = getelementptr inbounds %struct.table, %struct.table* %382, i32 0, i32 2
  store i32 -1, i32* %383, align 4
  %384 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 30
  %385 = getelementptr inbounds [3 x %struct.table], [3 x %struct.table]* %384, i64 0, i64 1
  %386 = getelementptr inbounds %struct.table, %struct.table* %385, i32 0, i32 0
  store i8* null, i8** %386, align 8
  br label %387

387:                                              ; preds = %380, %369, %363, %357
  %388 = call i32 @yyparse(%struct.parser_control* %34)
  %389 = icmp ne i32 %388, 0
  br i1 %389, label %390, label %408

390:                                              ; preds = %387
  %391 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 22
  %392 = load i8, i8* %391, align 1
  %393 = trunc i8 %392 to i1
  br i1 %393, label %394, label %407

394:                                              ; preds = %390
  %395 = load i8*, i8** %18, align 8
  %396 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 0
  %397 = load i8*, i8** %396, align 8
  %398 = icmp ule i8* %395, %397
  br i1 %398, label %399, label %401

399:                                              ; preds = %394
  %400 = call i8* @gettext(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.22.151, i64 0, i64 0)) #11
  br label %403

401:                                              ; preds = %394
  %402 = call i8* @gettext(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.23.152, i64 0, i64 0)) #11
  br label %403

403:                                              ; preds = %401, %399
  %404 = phi i8* [ %400, %399 ], [ %402, %401 ]
  %405 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 0
  %406 = load i8*, i8** %405, align 8
  call void (i8*, ...) @dbg_printf(i8* %404, i8* %406)
  br label %407

407:                                              ; preds = %403, %390
  br label %5616

408:                                              ; preds = %387
  %409 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 22
  %410 = load i8, i8* %409, align 1
  %411 = trunc i8 %410 to i1
  br i1 %411, label %412, label %491

412:                                              ; preds = %408
  %413 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.24.153, i64 0, i64 0)) #11
  call void (i8*, ...) @dbg_printf(i8* %413)
  %414 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 13
  %415 = load i8, i8* %414, align 8
  %416 = trunc i8 %415 to i1
  br i1 %416, label %417, label %421

417:                                              ; preds = %412
  %418 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %419 = call i8* @gettext(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.25.154, i64 0, i64 0)) #11
  %420 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %418, i8* %419)
  br label %462

421:                                              ; preds = %412
  %422 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 20
  %423 = load i64, i64* %422, align 8
  %424 = icmp ne i64 %423, 0
  br i1 %424, label %425, label %429

425:                                              ; preds = %421
  %426 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %427 = call i8* @gettext(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.26.155, i64 0, i64 0)) #11
  %428 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %426, i8* %427)
  br label %461

429:                                              ; preds = %421
  %430 = load i8*, i8** %12, align 8
  %431 = icmp ne i8* %430, null
  br i1 %431, label %432, label %456

432:                                              ; preds = %429
  %433 = load %struct.tm_zone*, %struct.tm_zone** %25, align 8
  %434 = load %struct.tm_zone*, %struct.tm_zone** %11, align 8
  %435 = icmp ne %struct.tm_zone* %433, %434
  br i1 %435, label %436, label %441

436:                                              ; preds = %432
  %437 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %438 = call i8* @gettext(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.27.156, i64 0, i64 0)) #11
  %439 = load i8*, i8** %12, align 8
  %440 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %437, i8* %438, i8* %439)
  br label %455

441:                                              ; preds = %432
  %442 = load i8*, i8** %12, align 8
  %443 = call i32 @strcmp(i8* %442, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28.157, i64 0, i64 0)) #13
  %444 = icmp eq i32 %443, 0
  br i1 %444, label %445, label %449

445:                                              ; preds = %441
  %446 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %447 = call i8* @gettext(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.29.158, i64 0, i64 0)) #11
  %448 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %446, i8* %447)
  br label %454

449:                                              ; preds = %441
  %450 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %451 = call i8* @gettext(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.30.159, i64 0, i64 0)) #11
  %452 = load i8*, i8** %12, align 8
  %453 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %450, i8* %451, i8* %452)
  br label %454

454:                                              ; preds = %449, %445
  br label %455

455:                                              ; preds = %454, %436
  br label %460

456:                                              ; preds = %429
  %457 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %458 = call i8* @gettext(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.31.160, i64 0, i64 0)) #11
  %459 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %457, i8* %458)
  br label %460

460:                                              ; preds = %456, %455
  br label %461

461:                                              ; preds = %460, %425
  br label %462

462:                                              ; preds = %461, %417
  %463 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 17
  %464 = load i64, i64* %463, align 8
  %465 = icmp ne i64 %464, 0
  br i1 %465, label %466, label %477

466:                                              ; preds = %462
  %467 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 20
  %468 = load i64, i64* %467, align 8
  %469 = icmp ne i64 %468, 0
  br i1 %469, label %477, label %470

470:                                              ; preds = %466
  %471 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 3
  %472 = load i32, i32* %471, align 4
  %473 = icmp slt i32 0, %472
  br i1 %473, label %474, label %477

474:                                              ; preds = %470
  %475 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %476 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %475, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.32.161, i64 0, i64 0))
  br label %477

477:                                              ; preds = %474, %470, %466, %462
  %478 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 20
  %479 = load i64, i64* %478, align 8
  %480 = icmp ne i64 %479, 0
  br i1 %480, label %481, label %488

481:                                              ; preds = %477
  %482 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %483 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 4
  %484 = load i32, i32* %483, align 8
  %485 = getelementptr inbounds [27 x i8], [27 x i8]* %15, i64 0, i64 0
  %486 = call i8* @time_zone_str(i32 %484, i8* %485)
  %487 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %482, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.33.162, i64 0, i64 0), i8* %486)
  br label %488

488:                                              ; preds = %481, %477
  %489 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %490 = call i32 @fputc(i32 10, %struct._IO_FILE* %489)
  br label %491

491:                                              ; preds = %488, %408
  %492 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 13
  %493 = load i8, i8* %492, align 8
  %494 = trunc i8 %493 to i1
  br i1 %494, label %495, label %500

495:                                              ; preds = %491
  %496 = load %struct.timespec*, %struct.timespec** %7, align 8
  %497 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 11
  %498 = bitcast %struct.timespec* %496 to i8*
  %499 = bitcast %struct.timespec* %497 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %498, i8* align 8 %499, i64 16, i1 false)
  br label %5547

500:                                              ; preds = %491
  %501 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 19
  %502 = load i64, i64* %501, align 8
  %503 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 15
  %504 = load i64, i64* %503, align 8
  %505 = or i64 %502, %504
  %506 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 16
  %507 = load i64, i64* %506, align 8
  %508 = or i64 %505, %507
  %509 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 18
  %510 = load i64, i64* %509, align 8
  %511 = or i64 %508, %510
  %512 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 17
  %513 = load i64, i64* %512, align 8
  %514 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 20
  %515 = load i64, i64* %514, align 8
  %516 = add nsw i64 %513, %515
  %517 = or i64 %511, %516
  %518 = icmp slt i64 1, %517
  br i1 %518, label %519, label %553

519:                                              ; preds = %500
  %520 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 22
  %521 = load i8, i8* %520, align 1
  %522 = trunc i8 %521 to i1
  br i1 %522, label %523, label %552

523:                                              ; preds = %519
  %524 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 19
  %525 = load i64, i64* %524, align 8
  %526 = icmp sgt i64 %525, 1
  br i1 %526, label %527, label %528

527:                                              ; preds = %523
  call void (i8*, ...) @dbg_printf(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.34.163, i64 0, i64 0))
  br label %528

528:                                              ; preds = %527, %523
  %529 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 15
  %530 = load i64, i64* %529, align 8
  %531 = icmp sgt i64 %530, 1
  br i1 %531, label %532, label %533

532:                                              ; preds = %528
  call void (i8*, ...) @dbg_printf(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.35.164, i64 0, i64 0))
  br label %533

533:                                              ; preds = %532, %528
  %534 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 16
  %535 = load i64, i64* %534, align 8
  %536 = icmp sgt i64 %535, 1
  br i1 %536, label %537, label %538

537:                                              ; preds = %533
  call void (i8*, ...) @dbg_printf(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.36.165, i64 0, i64 0))
  br label %538

538:                                              ; preds = %537, %533
  %539 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 18
  %540 = load i64, i64* %539, align 8
  %541 = icmp sgt i64 %540, 1
  br i1 %541, label %542, label %543

542:                                              ; preds = %538
  call void (i8*, ...) @dbg_printf(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.37.166, i64 0, i64 0))
  br label %543

543:                                              ; preds = %542, %538
  %544 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 17
  %545 = load i64, i64* %544, align 8
  %546 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 20
  %547 = load i64, i64* %546, align 8
  %548 = add nsw i64 %545, %547
  %549 = icmp sgt i64 %548, 1
  br i1 %549, label %550, label %551

550:                                              ; preds = %543
  call void (i8*, ...) @dbg_printf(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.38.167, i64 0, i64 0))
  br label %551

551:                                              ; preds = %550, %543
  br label %552

552:                                              ; preds = %551, %519
  br label %5616

553:                                              ; preds = %500
  %554 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 6
  %555 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 22
  %556 = load i8, i8* %555, align 1
  %557 = trunc i8 %556 to i1
  %558 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 5
  %559 = call zeroext i1 @to_tm_year(%struct.textint* byval(%struct.textint) align 8 %554, i1 zeroext %557, i32* %558)
  br i1 %559, label %560, label %582

560:                                              ; preds = %553
  %561 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 7
  %562 = load i64, i64* %561, align 8
  %563 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 4
  %564 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %562, i64 -1)
  %565 = extractvalue { i64, i1 } %564, 1
  %566 = extractvalue { i64, i1 } %564, 0
  %567 = trunc i64 %566 to i32
  %568 = sext i32 %567 to i64
  %569 = icmp ne i64 %566, %568
  %570 = or i1 %565, %569
  store i32 %567, i32* %563, align 8
  br i1 %570, label %582, label %571

571:                                              ; preds = %560
  %572 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 8
  %573 = load i64, i64* %572, align 8
  %574 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 3
  %575 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %573, i64 0)
  %576 = extractvalue { i64, i1 } %575, 1
  %577 = extractvalue { i64, i1 } %575, 0
  %578 = trunc i64 %577 to i32
  %579 = sext i32 %578 to i64
  %580 = icmp ne i64 %577, %579
  %581 = or i1 %576, %580
  store i32 %578, i32* %574, align 4
  br i1 %581, label %582, label %589

582:                                              ; preds = %571, %560, %553
  %583 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 22
  %584 = load i8, i8* %583, align 1
  %585 = trunc i8 %584 to i1
  br i1 %585, label %586, label %588

586:                                              ; preds = %582
  %587 = call i8* @gettext(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.39.168, i64 0, i64 0)) #11
  call void (i8*, ...) @dbg_printf(i8* %587)
  br label %588

588:                                              ; preds = %586, %582
  br label %5616

589:                                              ; preds = %571
  %590 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 19
  %591 = load i64, i64* %590, align 8
  %592 = icmp ne i64 %591, 0
  br i1 %592, label %605, label %593

593:                                              ; preds = %589
  %594 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 14
  %595 = load i8, i8* %594, align 1
  %596 = trunc i8 %595 to i1
  br i1 %596, label %597, label %663

597:                                              ; preds = %593
  %598 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 15
  %599 = load i64, i64* %598, align 8
  %600 = icmp ne i64 %599, 0
  br i1 %600, label %663, label %601

601:                                              ; preds = %597
  %602 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 16
  %603 = load i64, i64* %602, align 8
  %604 = icmp ne i64 %603, 0
  br i1 %604, label %663, label %605

605:                                              ; preds = %601, %589
  %606 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 9
  %607 = load i64, i64* %606, align 8
  %608 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 5
  %609 = load i32, i32* %608, align 4
  %610 = call i32 @to_hour(i64 %607, i32 %609)
  %611 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 2
  store i32 %610, i32* %611, align 8
  %612 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 2
  %613 = load i32, i32* %612, align 8
  %614 = icmp slt i32 %613, 0
  br i1 %614, label %615, label %637

615:                                              ; preds = %605
  %616 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 5
  %617 = load i32, i32* %616, align 4
  %618 = icmp eq i32 %617, 0
  br i1 %618, label %619, label %620

619:                                              ; preds = %615
  br label %626

620:                                              ; preds = %615
  %621 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 5
  %622 = load i32, i32* %621, align 4
  %623 = icmp eq i32 %622, 1
  %624 = zext i1 %623 to i64
  %625 = select i1 %623, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.41.137, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.42.141, i64 0, i64 0)
  br label %626

626:                                              ; preds = %620, %619
  %627 = phi i8* [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.40.169, i64 0, i64 0), %619 ], [ %625, %620 ]
  store i8* %627, i8** %39, align 8
  %628 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 22
  %629 = load i8, i8* %628, align 1
  %630 = trunc i8 %629 to i1
  br i1 %630, label %631, label %636

631:                                              ; preds = %626
  %632 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.43.170, i64 0, i64 0)) #11
  %633 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 9
  %634 = load i64, i64* %633, align 8
  %635 = load i8*, i8** %39, align 8
  call void (i8*, ...) @dbg_printf(i8* %632, i64 %634, i8* %635)
  br label %636

636:                                              ; preds = %631, %626
  br label %5616

637:                                              ; preds = %605
  %638 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 10
  %639 = load i64, i64* %638, align 8
  %640 = trunc i64 %639 to i32
  %641 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 1
  store i32 %640, i32* %641, align 4
  %642 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 11
  %643 = getelementptr inbounds %struct.timespec, %struct.timespec* %642, i32 0, i32 0
  %644 = load i64, i64* %643, align 8
  %645 = trunc i64 %644 to i32
  %646 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 0
  store i32 %645, i32* %646, align 8
  %647 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 22
  %648 = load i8, i8* %647, align 1
  %649 = trunc i8 %648 to i1
  br i1 %649, label %650, label %662

650:                                              ; preds = %637
  %651 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 19
  %652 = load i64, i64* %651, align 8
  %653 = icmp ne i64 %652, 0
  br i1 %653, label %654, label %656

654:                                              ; preds = %650
  %655 = call i8* @gettext(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.44.171, i64 0, i64 0)) #11
  br label %658

656:                                              ; preds = %650
  %657 = call i8* @gettext(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.45.172, i64 0, i64 0)) #11
  br label %658

658:                                              ; preds = %656, %654
  %659 = phi i8* [ %655, %654 ], [ %657, %656 ]
  %660 = getelementptr inbounds [100 x i8], [100 x i8]* %16, i64 0, i64 0
  %661 = call i8* @debug_strftime(%struct.tm* %13, i8* %660, i32 100)
  call void (i8*, ...) @dbg_printf(i8* %659, i8* %661)
  br label %662

662:                                              ; preds = %658, %637
  br label %674

663:                                              ; preds = %601, %597, %593
  %664 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 0
  store i32 0, i32* %664, align 8
  %665 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 1
  store i32 0, i32* %665, align 4
  %666 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 2
  store i32 0, i32* %666, align 8
  %667 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 11
  %668 = getelementptr inbounds %struct.timespec, %struct.timespec* %667, i32 0, i32 1
  store i64 0, i64* %668, align 8
  %669 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 22
  %670 = load i8, i8* %669, align 1
  %671 = trunc i8 %670 to i1
  br i1 %671, label %672, label %673

672:                                              ; preds = %663
  call void (i8*, ...) @dbg_printf(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.46.173, i64 0, i64 0))
  br label %673

673:                                              ; preds = %672, %663
  br label %674

674:                                              ; preds = %673, %662
  %675 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 15
  %676 = load i64, i64* %675, align 8
  %677 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 16
  %678 = load i64, i64* %677, align 8
  %679 = or i64 %676, %678
  %680 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 19
  %681 = load i64, i64* %680, align 8
  %682 = or i64 %679, %681
  %683 = icmp ne i64 %682, 0
  br i1 %683, label %684, label %686

684:                                              ; preds = %674
  %685 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 8
  store i32 -1, i32* %685, align 8
  br label %686

686:                                              ; preds = %684, %674
  %687 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 17
  %688 = load i64, i64* %687, align 8
  %689 = icmp ne i64 %688, 0
  br i1 %689, label %690, label %694

690:                                              ; preds = %686
  %691 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 3
  %692 = load i32, i32* %691, align 4
  %693 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 8
  store i32 %692, i32* %693, align 8
  br label %694

694:                                              ; preds = %690, %686
  %695 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 0
  %696 = load i32, i32* %695, align 8
  %697 = getelementptr inbounds %struct.tm, %struct.tm* %14, i32 0, i32 0
  store i32 %696, i32* %697, align 8
  %698 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 1
  %699 = load i32, i32* %698, align 4
  %700 = getelementptr inbounds %struct.tm, %struct.tm* %14, i32 0, i32 1
  store i32 %699, i32* %700, align 4
  %701 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 2
  %702 = load i32, i32* %701, align 8
  %703 = getelementptr inbounds %struct.tm, %struct.tm* %14, i32 0, i32 2
  store i32 %702, i32* %703, align 8
  %704 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 3
  %705 = load i32, i32* %704, align 4
  %706 = getelementptr inbounds %struct.tm, %struct.tm* %14, i32 0, i32 3
  store i32 %705, i32* %706, align 4
  %707 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 4
  %708 = load i32, i32* %707, align 8
  %709 = getelementptr inbounds %struct.tm, %struct.tm* %14, i32 0, i32 4
  store i32 %708, i32* %709, align 8
  %710 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 5
  %711 = load i32, i32* %710, align 4
  %712 = getelementptr inbounds %struct.tm, %struct.tm* %14, i32 0, i32 5
  store i32 %711, i32* %712, align 4
  %713 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 8
  %714 = load i32, i32* %713, align 8
  %715 = getelementptr inbounds %struct.tm, %struct.tm* %14, i32 0, i32 8
  store i32 %714, i32* %715, align 8
  %716 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  store i32 -1, i32* %716, align 8
  %717 = load %struct.tm_zone*, %struct.tm_zone** %25, align 8
  %718 = call i64 @mktime_z(%struct.tm_zone* %717, %struct.tm* %13)
  store i64 %718, i64* %22, align 8
  %719 = call zeroext i1 @mktime_ok(%struct.tm* %14, %struct.tm* %13)
  br i1 %719, label %782, label %720

720:                                              ; preds = %694
  store i8 0, i8* %40, align 1
  %721 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 20
  %722 = load i64, i64* %721, align 8
  %723 = icmp ne i64 %722, 0
  %724 = zext i1 %723 to i8
  store i8 %724, i8* %41, align 1
  %725 = load i8, i8* %41, align 1
  %726 = trunc i8 %725 to i1
  br i1 %726, label %727, label %775

727:                                              ; preds = %720
  %728 = getelementptr inbounds [30 x i8], [30 x i8]* %42, i64 0, i64 2
  store i8 88, i8* %728, align 2
  %729 = getelementptr inbounds [30 x i8], [30 x i8]* %42, i64 0, i64 1
  store i8 88, i8* %729, align 1
  %730 = getelementptr inbounds [30 x i8], [30 x i8]* %42, i64 0, i64 0
  store i8 88, i8* %730, align 16
  %731 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 4
  %732 = load i32, i32* %731, align 8
  %733 = getelementptr inbounds [30 x i8], [30 x i8]* %42, i64 0, i64 3
  %734 = call i8* @time_zone_str(i32 %732, i8* %733)
  %735 = getelementptr inbounds [30 x i8], [30 x i8]* %42, i64 0, i64 0
  %736 = call %struct.tm_zone* @tzalloc(i8* %735)
  store %struct.tm_zone* %736, %struct.tm_zone** %43, align 8
  %737 = load %struct.tm_zone*, %struct.tm_zone** %43, align 8
  %738 = icmp ne %struct.tm_zone* %737, null
  br i1 %738, label %747, label %739

739:                                              ; preds = %727
  %740 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 22
  %741 = load i8, i8* %740, align 1
  %742 = trunc i8 %741 to i1
  br i1 %742, label %743, label %746

743:                                              ; preds = %739
  %744 = call i8* @gettext(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.47.174, i64 0, i64 0)) #11
  %745 = getelementptr inbounds [30 x i8], [30 x i8]* %42, i64 0, i64 0
  call void (i8*, ...) @dbg_printf(i8* %744, i8* %745)
  br label %746

746:                                              ; preds = %743, %739
  br label %5616

747:                                              ; preds = %727
  %748 = getelementptr inbounds %struct.tm, %struct.tm* %14, i32 0, i32 0
  %749 = load i32, i32* %748, align 8
  %750 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 0
  store i32 %749, i32* %750, align 8
  %751 = getelementptr inbounds %struct.tm, %struct.tm* %14, i32 0, i32 1
  %752 = load i32, i32* %751, align 4
  %753 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 1
  store i32 %752, i32* %753, align 4
  %754 = getelementptr inbounds %struct.tm, %struct.tm* %14, i32 0, i32 2
  %755 = load i32, i32* %754, align 8
  %756 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 2
  store i32 %755, i32* %756, align 8
  %757 = getelementptr inbounds %struct.tm, %struct.tm* %14, i32 0, i32 3
  %758 = load i32, i32* %757, align 4
  %759 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 3
  store i32 %758, i32* %759, align 4
  %760 = getelementptr inbounds %struct.tm, %struct.tm* %14, i32 0, i32 4
  %761 = load i32, i32* %760, align 8
  %762 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 4
  store i32 %761, i32* %762, align 8
  %763 = getelementptr inbounds %struct.tm, %struct.tm* %14, i32 0, i32 5
  %764 = load i32, i32* %763, align 4
  %765 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 5
  store i32 %764, i32* %765, align 4
  %766 = getelementptr inbounds %struct.tm, %struct.tm* %14, i32 0, i32 8
  %767 = load i32, i32* %766, align 8
  %768 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 8
  store i32 %767, i32* %768, align 8
  %769 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  store i32 -1, i32* %769, align 8
  %770 = load %struct.tm_zone*, %struct.tm_zone** %43, align 8
  %771 = call i64 @mktime_z(%struct.tm_zone* %770, %struct.tm* %13)
  store i64 %771, i64* %22, align 8
  %772 = call zeroext i1 @mktime_ok(%struct.tm* %14, %struct.tm* %13)
  %773 = zext i1 %772 to i8
  store i8 %773, i8* %40, align 1
  %774 = load %struct.tm_zone*, %struct.tm_zone** %43, align 8
  call void @tzfree(%struct.tm_zone* %774)
  br label %775

775:                                              ; preds = %747, %720
  %776 = load i8, i8* %40, align 1
  %777 = trunc i8 %776 to i1
  br i1 %777, label %781, label %778

778:                                              ; preds = %775
  %779 = load i8, i8* %41, align 1
  %780 = trunc i8 %779 to i1
  call void @debug_mktime_not_ok(%struct.tm* %14, %struct.tm* %13, %struct.parser_control* %34, i1 zeroext %780)
  br label %5616

781:                                              ; preds = %775
  br label %782

782:                                              ; preds = %781, %694
  %783 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 16
  %784 = load i64, i64* %783, align 8
  %785 = icmp ne i64 %784, 0
  br i1 %785, label %786, label %3406

786:                                              ; preds = %782
  %787 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 15
  %788 = load i64, i64* %787, align 8
  %789 = icmp ne i64 %788, 0
  br i1 %789, label %3406, label %790

790:                                              ; preds = %786
  br i1 false, label %791, label %1310

791:                                              ; preds = %790
  br i1 false, label %1051, label %792

792:                                              ; preds = %791
  br i1 false, label %793, label %928

793:                                              ; preds = %792
  %794 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %795 = load i64, i64* %794, align 8
  %796 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %797 = load i64, i64* %796, align 8
  %798 = icmp slt i64 0, %797
  br i1 %798, label %799, label %805

799:                                              ; preds = %793
  %800 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %801 = load i32, i32* %800, align 8
  %802 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %803 = load i32, i32* %802, align 8
  %804 = icmp ne i32 %801, %803
  br label %805

805:                                              ; preds = %799, %793
  %806 = phi i1 [ false, %793 ], [ %804, %799 ]
  %807 = zext i1 %806 to i32
  %808 = sext i32 %807 to i64
  %809 = sub nsw i64 %795, %808
  %810 = icmp slt i64 %809, 0
  br i1 %810, label %811, label %849

811:                                              ; preds = %805
  br i1 true, label %812, label %830

812:                                              ; preds = %811
  %813 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %814 = load i64, i64* %813, align 8
  %815 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %816 = load i64, i64* %815, align 8
  %817 = icmp slt i64 0, %816
  br i1 %817, label %818, label %824

818:                                              ; preds = %812
  %819 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %820 = load i32, i32* %819, align 8
  %821 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %822 = load i32, i32* %821, align 8
  %823 = icmp ne i32 %820, %822
  br label %824

824:                                              ; preds = %818, %812
  %825 = phi i1 [ false, %812 ], [ %823, %818 ]
  %826 = zext i1 %825 to i32
  %827 = sext i32 %826 to i64
  %828 = sub nsw i64 %814, %827
  %829 = icmp slt i64 %828, 18
  br i1 %829, label %1009, label %1030

830:                                              ; preds = %811
  %831 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %832 = load i64, i64* %831, align 8
  %833 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %834 = load i64, i64* %833, align 8
  %835 = icmp slt i64 0, %834
  br i1 %835, label %836, label %842

836:                                              ; preds = %830
  %837 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %838 = load i32, i32* %837, align 8
  %839 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %840 = load i32, i32* %839, align 8
  %841 = icmp ne i32 %838, %840
  br label %842

842:                                              ; preds = %836, %830
  %843 = phi i1 [ false, %830 ], [ %841, %836 ]
  %844 = zext i1 %843 to i32
  %845 = sext i32 %844 to i64
  %846 = sub nsw i64 %832, %845
  %847 = sub nsw i64 -1, %846
  %848 = icmp sle i64 -18, %847
  br i1 %848, label %1009, label %1030

849:                                              ; preds = %805
  br i1 true, label %850, label %851

850:                                              ; preds = %849
  br i1 false, label %852, label %910

851:                                              ; preds = %849
  br i1 false, label %852, label %910

852:                                              ; preds = %851, %850
  br i1 false, label %853, label %910

853:                                              ; preds = %852
  br i1 true, label %854, label %873

854:                                              ; preds = %853
  %855 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %856 = load i64, i64* %855, align 8
  %857 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %858 = load i64, i64* %857, align 8
  %859 = icmp slt i64 0, %858
  br i1 %859, label %860, label %866

860:                                              ; preds = %854
  %861 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %862 = load i32, i32* %861, align 8
  %863 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %864 = load i32, i32* %863, align 8
  %865 = icmp ne i32 %862, %864
  br label %866

866:                                              ; preds = %860, %854
  %867 = phi i1 [ false, %854 ], [ %865, %860 ]
  %868 = zext i1 %867 to i32
  %869 = sext i32 %868 to i64
  %870 = sub nsw i64 %856, %869
  %871 = add nsw i64 %870, -128
  %872 = icmp slt i64 0, %871
  br i1 %872, label %1009, label %1030

873:                                              ; preds = %853
  %874 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %875 = load i64, i64* %874, align 8
  %876 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %877 = load i64, i64* %876, align 8
  %878 = icmp slt i64 0, %877
  br i1 %878, label %879, label %885

879:                                              ; preds = %873
  %880 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %881 = load i32, i32* %880, align 8
  %882 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %883 = load i32, i32* %882, align 8
  %884 = icmp ne i32 %881, %883
  br label %885

885:                                              ; preds = %879, %873
  %886 = phi i1 [ false, %873 ], [ %884, %879 ]
  %887 = zext i1 %886 to i32
  %888 = sext i32 %887 to i64
  %889 = sub nsw i64 %875, %888
  %890 = icmp slt i64 0, %889
  br i1 %890, label %891, label %1030

891:                                              ; preds = %885
  %892 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %893 = load i64, i64* %892, align 8
  %894 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %895 = load i64, i64* %894, align 8
  %896 = icmp slt i64 0, %895
  br i1 %896, label %897, label %903

897:                                              ; preds = %891
  %898 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %899 = load i32, i32* %898, align 8
  %900 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %901 = load i32, i32* %900, align 8
  %902 = icmp ne i32 %899, %901
  br label %903

903:                                              ; preds = %897, %891
  %904 = phi i1 [ false, %891 ], [ %902, %897 ]
  %905 = zext i1 %904 to i32
  %906 = sext i32 %905 to i64
  %907 = sub nsw i64 %893, %906
  %908 = sub nsw i64 %907, 1
  %909 = icmp slt i64 127, %908
  br i1 %909, label %1009, label %1030

910:                                              ; preds = %852, %851, %850
  %911 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %912 = load i64, i64* %911, align 8
  %913 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %914 = load i64, i64* %913, align 8
  %915 = icmp slt i64 0, %914
  br i1 %915, label %916, label %922

916:                                              ; preds = %910
  %917 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %918 = load i32, i32* %917, align 8
  %919 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %920 = load i32, i32* %919, align 8
  %921 = icmp ne i32 %918, %920
  br label %922

922:                                              ; preds = %916, %910
  %923 = phi i1 [ false, %910 ], [ %921, %916 ]
  %924 = zext i1 %923 to i32
  %925 = sext i32 %924 to i64
  %926 = sub nsw i64 %912, %925
  %927 = icmp slt i64 -18, %926
  br i1 %927, label %1009, label %1030

928:                                              ; preds = %792
  br i1 false, label %929, label %930

929:                                              ; preds = %928
  br i1 false, label %1009, label %1030

930:                                              ; preds = %928
  %931 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %932 = load i64, i64* %931, align 8
  %933 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %934 = load i64, i64* %933, align 8
  %935 = icmp slt i64 0, %934
  br i1 %935, label %936, label %942

936:                                              ; preds = %930
  %937 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %938 = load i32, i32* %937, align 8
  %939 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %940 = load i32, i32* %939, align 8
  %941 = icmp ne i32 %938, %940
  br label %942

942:                                              ; preds = %936, %930
  %943 = phi i1 [ false, %930 ], [ %941, %936 ]
  %944 = zext i1 %943 to i32
  %945 = sext i32 %944 to i64
  %946 = sub nsw i64 %932, %945
  %947 = icmp slt i64 %946, 0
  br i1 %947, label %948, label %991

948:                                              ; preds = %942
  br i1 true, label %949, label %950

949:                                              ; preds = %948
  br i1 false, label %951, label %972

950:                                              ; preds = %948
  br i1 false, label %951, label %972

951:                                              ; preds = %950, %949
  %952 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %953 = load i64, i64* %952, align 8
  %954 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %955 = load i64, i64* %954, align 8
  %956 = icmp slt i64 0, %955
  br i1 %956, label %957, label %963

957:                                              ; preds = %951
  %958 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %959 = load i32, i32* %958, align 8
  %960 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %961 = load i32, i32* %960, align 8
  %962 = icmp ne i32 %959, %961
  br label %963

963:                                              ; preds = %957, %951
  %964 = phi i1 [ false, %951 ], [ %962, %957 ]
  %965 = zext i1 %964 to i32
  %966 = sext i32 %965 to i64
  %967 = sub nsw i64 %953, %966
  %968 = icmp eq i64 %967, -1
  br i1 %968, label %969, label %972

969:                                              ; preds = %963
  br i1 true, label %970, label %971

970:                                              ; preds = %969
  br i1 false, label %1009, label %1030

971:                                              ; preds = %969
  br i1 false, label %1009, label %1030

972:                                              ; preds = %963, %950, %949
  %973 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %974 = load i64, i64* %973, align 8
  %975 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %976 = load i64, i64* %975, align 8
  %977 = icmp slt i64 0, %976
  br i1 %977, label %978, label %984

978:                                              ; preds = %972
  %979 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %980 = load i32, i32* %979, align 8
  %981 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %982 = load i32, i32* %981, align 8
  %983 = icmp ne i32 %980, %982
  br label %984

984:                                              ; preds = %978, %972
  %985 = phi i1 [ false, %972 ], [ %983, %978 ]
  %986 = zext i1 %985 to i32
  %987 = sext i32 %986 to i64
  %988 = sub nsw i64 %974, %987
  %989 = sdiv i64 -128, %988
  %990 = icmp slt i64 %989, 7
  br i1 %990, label %1009, label %1030

991:                                              ; preds = %942
  %992 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %993 = load i64, i64* %992, align 8
  %994 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %995 = load i64, i64* %994, align 8
  %996 = icmp slt i64 0, %995
  br i1 %996, label %997, label %1003

997:                                              ; preds = %991
  %998 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %999 = load i32, i32* %998, align 8
  %1000 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %1001 = load i32, i32* %1000, align 8
  %1002 = icmp ne i32 %999, %1001
  br label %1003

1003:                                             ; preds = %997, %991
  %1004 = phi i1 [ false, %991 ], [ %1002, %997 ]
  %1005 = zext i1 %1004 to i32
  %1006 = sext i32 %1005 to i64
  %1007 = sub nsw i64 %993, %1006
  %1008 = icmp slt i64 18, %1007
  br i1 %1008, label %1009, label %1030

1009:                                             ; preds = %1003, %984, %971, %970, %929, %922, %903, %866, %842, %824
  %1010 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %1011 = load i64, i64* %1010, align 8
  %1012 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %1013 = load i64, i64* %1012, align 8
  %1014 = icmp slt i64 0, %1013
  br i1 %1014, label %1015, label %1021

1015:                                             ; preds = %1009
  %1016 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %1017 = load i32, i32* %1016, align 8
  %1018 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %1019 = load i32, i32* %1018, align 8
  %1020 = icmp ne i32 %1017, %1019
  br label %1021

1021:                                             ; preds = %1015, %1009
  %1022 = phi i1 [ false, %1009 ], [ %1020, %1015 ]
  %1023 = zext i1 %1022 to i32
  %1024 = sext i32 %1023 to i64
  %1025 = sub nsw i64 %1011, %1024
  %1026 = trunc i64 %1025 to i32
  %1027 = mul i32 %1026, 7
  %1028 = trunc i32 %1027 to i8
  %1029 = sext i8 %1028 to i64
  store i64 %1029, i64* %45, align 8
  br i1 true, label %3372, label %3346

1030:                                             ; preds = %1003, %984, %971, %970, %929, %922, %903, %885, %866, %842, %824
  %1031 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %1032 = load i64, i64* %1031, align 8
  %1033 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %1034 = load i64, i64* %1033, align 8
  %1035 = icmp slt i64 0, %1034
  br i1 %1035, label %1036, label %1042

1036:                                             ; preds = %1030
  %1037 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %1038 = load i32, i32* %1037, align 8
  %1039 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %1040 = load i32, i32* %1039, align 8
  %1041 = icmp ne i32 %1038, %1040
  br label %1042

1042:                                             ; preds = %1036, %1030
  %1043 = phi i1 [ false, %1030 ], [ %1041, %1036 ]
  %1044 = zext i1 %1043 to i32
  %1045 = sext i32 %1044 to i64
  %1046 = sub nsw i64 %1032, %1045
  %1047 = trunc i64 %1046 to i32
  %1048 = mul i32 %1047, 7
  %1049 = trunc i32 %1048 to i8
  %1050 = sext i8 %1049 to i64
  store i64 %1050, i64* %45, align 8
  br i1 false, label %3372, label %3346

1051:                                             ; preds = %791
  br i1 false, label %1052, label %1187

1052:                                             ; preds = %1051
  %1053 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %1054 = load i64, i64* %1053, align 8
  %1055 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %1056 = load i64, i64* %1055, align 8
  %1057 = icmp slt i64 0, %1056
  br i1 %1057, label %1058, label %1064

1058:                                             ; preds = %1052
  %1059 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %1060 = load i32, i32* %1059, align 8
  %1061 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %1062 = load i32, i32* %1061, align 8
  %1063 = icmp ne i32 %1060, %1062
  br label %1064

1064:                                             ; preds = %1058, %1052
  %1065 = phi i1 [ false, %1052 ], [ %1063, %1058 ]
  %1066 = zext i1 %1065 to i32
  %1067 = sext i32 %1066 to i64
  %1068 = sub nsw i64 %1054, %1067
  %1069 = icmp slt i64 %1068, 0
  br i1 %1069, label %1070, label %1108

1070:                                             ; preds = %1064
  br i1 true, label %1071, label %1089

1071:                                             ; preds = %1070
  %1072 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %1073 = load i64, i64* %1072, align 8
  %1074 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %1075 = load i64, i64* %1074, align 8
  %1076 = icmp slt i64 0, %1075
  br i1 %1076, label %1077, label %1083

1077:                                             ; preds = %1071
  %1078 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %1079 = load i32, i32* %1078, align 8
  %1080 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %1081 = load i32, i32* %1080, align 8
  %1082 = icmp ne i32 %1079, %1081
  br label %1083

1083:                                             ; preds = %1077, %1071
  %1084 = phi i1 [ false, %1071 ], [ %1082, %1077 ]
  %1085 = zext i1 %1084 to i32
  %1086 = sext i32 %1085 to i64
  %1087 = sub nsw i64 %1073, %1086
  %1088 = icmp slt i64 %1087, 36
  br i1 %1088, label %1268, label %1289

1089:                                             ; preds = %1070
  %1090 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %1091 = load i64, i64* %1090, align 8
  %1092 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %1093 = load i64, i64* %1092, align 8
  %1094 = icmp slt i64 0, %1093
  br i1 %1094, label %1095, label %1101

1095:                                             ; preds = %1089
  %1096 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %1097 = load i32, i32* %1096, align 8
  %1098 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %1099 = load i32, i32* %1098, align 8
  %1100 = icmp ne i32 %1097, %1099
  br label %1101

1101:                                             ; preds = %1095, %1089
  %1102 = phi i1 [ false, %1089 ], [ %1100, %1095 ]
  %1103 = zext i1 %1102 to i32
  %1104 = sext i32 %1103 to i64
  %1105 = sub nsw i64 %1091, %1104
  %1106 = sub nsw i64 -1, %1105
  %1107 = icmp sle i64 -36, %1106
  br i1 %1107, label %1268, label %1289

1108:                                             ; preds = %1064
  br i1 true, label %1109, label %1110

1109:                                             ; preds = %1108
  br i1 false, label %1111, label %1169

1110:                                             ; preds = %1108
  br i1 false, label %1111, label %1169

1111:                                             ; preds = %1110, %1109
  br i1 false, label %1112, label %1169

1112:                                             ; preds = %1111
  br i1 true, label %1113, label %1132

1113:                                             ; preds = %1112
  %1114 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %1115 = load i64, i64* %1114, align 8
  %1116 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %1117 = load i64, i64* %1116, align 8
  %1118 = icmp slt i64 0, %1117
  br i1 %1118, label %1119, label %1125

1119:                                             ; preds = %1113
  %1120 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %1121 = load i32, i32* %1120, align 8
  %1122 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %1123 = load i32, i32* %1122, align 8
  %1124 = icmp ne i32 %1121, %1123
  br label %1125

1125:                                             ; preds = %1119, %1113
  %1126 = phi i1 [ false, %1113 ], [ %1124, %1119 ]
  %1127 = zext i1 %1126 to i32
  %1128 = sext i32 %1127 to i64
  %1129 = sub nsw i64 %1115, %1128
  %1130 = add nsw i64 %1129, 0
  %1131 = icmp slt i64 0, %1130
  br i1 %1131, label %1268, label %1289

1132:                                             ; preds = %1112
  %1133 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %1134 = load i64, i64* %1133, align 8
  %1135 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %1136 = load i64, i64* %1135, align 8
  %1137 = icmp slt i64 0, %1136
  br i1 %1137, label %1138, label %1144

1138:                                             ; preds = %1132
  %1139 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %1140 = load i32, i32* %1139, align 8
  %1141 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %1142 = load i32, i32* %1141, align 8
  %1143 = icmp ne i32 %1140, %1142
  br label %1144

1144:                                             ; preds = %1138, %1132
  %1145 = phi i1 [ false, %1132 ], [ %1143, %1138 ]
  %1146 = zext i1 %1145 to i32
  %1147 = sext i32 %1146 to i64
  %1148 = sub nsw i64 %1134, %1147
  %1149 = icmp slt i64 0, %1148
  br i1 %1149, label %1150, label %1289

1150:                                             ; preds = %1144
  %1151 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %1152 = load i64, i64* %1151, align 8
  %1153 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %1154 = load i64, i64* %1153, align 8
  %1155 = icmp slt i64 0, %1154
  br i1 %1155, label %1156, label %1162

1156:                                             ; preds = %1150
  %1157 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %1158 = load i32, i32* %1157, align 8
  %1159 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %1160 = load i32, i32* %1159, align 8
  %1161 = icmp ne i32 %1158, %1160
  br label %1162

1162:                                             ; preds = %1156, %1150
  %1163 = phi i1 [ false, %1150 ], [ %1161, %1156 ]
  %1164 = zext i1 %1163 to i32
  %1165 = sext i32 %1164 to i64
  %1166 = sub nsw i64 %1152, %1165
  %1167 = sub nsw i64 %1166, 1
  %1168 = icmp slt i64 -1, %1167
  br i1 %1168, label %1268, label %1289

1169:                                             ; preds = %1111, %1110, %1109
  %1170 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %1171 = load i64, i64* %1170, align 8
  %1172 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %1173 = load i64, i64* %1172, align 8
  %1174 = icmp slt i64 0, %1173
  br i1 %1174, label %1175, label %1181

1175:                                             ; preds = %1169
  %1176 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %1177 = load i32, i32* %1176, align 8
  %1178 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %1179 = load i32, i32* %1178, align 8
  %1180 = icmp ne i32 %1177, %1179
  br label %1181

1181:                                             ; preds = %1175, %1169
  %1182 = phi i1 [ false, %1169 ], [ %1180, %1175 ]
  %1183 = zext i1 %1182 to i32
  %1184 = sext i32 %1183 to i64
  %1185 = sub nsw i64 %1171, %1184
  %1186 = icmp slt i64 0, %1185
  br i1 %1186, label %1268, label %1289

1187:                                             ; preds = %1051
  br i1 false, label %1188, label %1189

1188:                                             ; preds = %1187
  br i1 false, label %1268, label %1289

1189:                                             ; preds = %1187
  %1190 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %1191 = load i64, i64* %1190, align 8
  %1192 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %1193 = load i64, i64* %1192, align 8
  %1194 = icmp slt i64 0, %1193
  br i1 %1194, label %1195, label %1201

1195:                                             ; preds = %1189
  %1196 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %1197 = load i32, i32* %1196, align 8
  %1198 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %1199 = load i32, i32* %1198, align 8
  %1200 = icmp ne i32 %1197, %1199
  br label %1201

1201:                                             ; preds = %1195, %1189
  %1202 = phi i1 [ false, %1189 ], [ %1200, %1195 ]
  %1203 = zext i1 %1202 to i32
  %1204 = sext i32 %1203 to i64
  %1205 = sub nsw i64 %1191, %1204
  %1206 = icmp slt i64 %1205, 0
  br i1 %1206, label %1207, label %1250

1207:                                             ; preds = %1201
  br i1 true, label %1208, label %1209

1208:                                             ; preds = %1207
  br i1 false, label %1210, label %1231

1209:                                             ; preds = %1207
  br i1 false, label %1210, label %1231

1210:                                             ; preds = %1209, %1208
  %1211 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %1212 = load i64, i64* %1211, align 8
  %1213 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %1214 = load i64, i64* %1213, align 8
  %1215 = icmp slt i64 0, %1214
  br i1 %1215, label %1216, label %1222

1216:                                             ; preds = %1210
  %1217 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %1218 = load i32, i32* %1217, align 8
  %1219 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %1220 = load i32, i32* %1219, align 8
  %1221 = icmp ne i32 %1218, %1220
  br label %1222

1222:                                             ; preds = %1216, %1210
  %1223 = phi i1 [ false, %1210 ], [ %1221, %1216 ]
  %1224 = zext i1 %1223 to i32
  %1225 = sext i32 %1224 to i64
  %1226 = sub nsw i64 %1212, %1225
  %1227 = icmp eq i64 %1226, -1
  br i1 %1227, label %1228, label %1231

1228:                                             ; preds = %1222
  br i1 true, label %1229, label %1230

1229:                                             ; preds = %1228
  br i1 true, label %1268, label %1289

1230:                                             ; preds = %1228
  br i1 true, label %1268, label %1289

1231:                                             ; preds = %1222, %1209, %1208
  %1232 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %1233 = load i64, i64* %1232, align 8
  %1234 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %1235 = load i64, i64* %1234, align 8
  %1236 = icmp slt i64 0, %1235
  br i1 %1236, label %1237, label %1243

1237:                                             ; preds = %1231
  %1238 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %1239 = load i32, i32* %1238, align 8
  %1240 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %1241 = load i32, i32* %1240, align 8
  %1242 = icmp ne i32 %1239, %1241
  br label %1243

1243:                                             ; preds = %1237, %1231
  %1244 = phi i1 [ false, %1231 ], [ %1242, %1237 ]
  %1245 = zext i1 %1244 to i32
  %1246 = sext i32 %1245 to i64
  %1247 = sub nsw i64 %1233, %1246
  %1248 = sdiv i64 0, %1247
  %1249 = icmp slt i64 %1248, 7
  br i1 %1249, label %1268, label %1289

1250:                                             ; preds = %1201
  %1251 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %1252 = load i64, i64* %1251, align 8
  %1253 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %1254 = load i64, i64* %1253, align 8
  %1255 = icmp slt i64 0, %1254
  br i1 %1255, label %1256, label %1262

1256:                                             ; preds = %1250
  %1257 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %1258 = load i32, i32* %1257, align 8
  %1259 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %1260 = load i32, i32* %1259, align 8
  %1261 = icmp ne i32 %1258, %1260
  br label %1262

1262:                                             ; preds = %1256, %1250
  %1263 = phi i1 [ false, %1250 ], [ %1261, %1256 ]
  %1264 = zext i1 %1263 to i32
  %1265 = sext i32 %1264 to i64
  %1266 = sub nsw i64 %1252, %1265
  %1267 = icmp slt i64 36, %1266
  br i1 %1267, label %1268, label %1289

1268:                                             ; preds = %1262, %1243, %1230, %1229, %1188, %1181, %1162, %1125, %1101, %1083
  %1269 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %1270 = load i64, i64* %1269, align 8
  %1271 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %1272 = load i64, i64* %1271, align 8
  %1273 = icmp slt i64 0, %1272
  br i1 %1273, label %1274, label %1280

1274:                                             ; preds = %1268
  %1275 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %1276 = load i32, i32* %1275, align 8
  %1277 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %1278 = load i32, i32* %1277, align 8
  %1279 = icmp ne i32 %1276, %1278
  br label %1280

1280:                                             ; preds = %1274, %1268
  %1281 = phi i1 [ false, %1268 ], [ %1279, %1274 ]
  %1282 = zext i1 %1281 to i32
  %1283 = sext i32 %1282 to i64
  %1284 = sub nsw i64 %1270, %1283
  %1285 = trunc i64 %1284 to i32
  %1286 = mul i32 %1285, 7
  %1287 = trunc i32 %1286 to i8
  %1288 = zext i8 %1287 to i64
  store i64 %1288, i64* %45, align 8
  br i1 true, label %3372, label %3346

1289:                                             ; preds = %1262, %1243, %1230, %1229, %1188, %1181, %1162, %1144, %1125, %1101, %1083
  %1290 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %1291 = load i64, i64* %1290, align 8
  %1292 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %1293 = load i64, i64* %1292, align 8
  %1294 = icmp slt i64 0, %1293
  br i1 %1294, label %1295, label %1301

1295:                                             ; preds = %1289
  %1296 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %1297 = load i32, i32* %1296, align 8
  %1298 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %1299 = load i32, i32* %1298, align 8
  %1300 = icmp ne i32 %1297, %1299
  br label %1301

1301:                                             ; preds = %1295, %1289
  %1302 = phi i1 [ false, %1289 ], [ %1300, %1295 ]
  %1303 = zext i1 %1302 to i32
  %1304 = sext i32 %1303 to i64
  %1305 = sub nsw i64 %1291, %1304
  %1306 = trunc i64 %1305 to i32
  %1307 = mul i32 %1306, 7
  %1308 = trunc i32 %1307 to i8
  %1309 = zext i8 %1308 to i64
  store i64 %1309, i64* %45, align 8
  br i1 false, label %3372, label %3346

1310:                                             ; preds = %790
  br i1 false, label %1311, label %1830

1311:                                             ; preds = %1310
  br i1 false, label %1571, label %1312

1312:                                             ; preds = %1311
  br i1 false, label %1313, label %1448

1313:                                             ; preds = %1312
  %1314 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %1315 = load i64, i64* %1314, align 8
  %1316 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %1317 = load i64, i64* %1316, align 8
  %1318 = icmp slt i64 0, %1317
  br i1 %1318, label %1319, label %1325

1319:                                             ; preds = %1313
  %1320 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %1321 = load i32, i32* %1320, align 8
  %1322 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %1323 = load i32, i32* %1322, align 8
  %1324 = icmp ne i32 %1321, %1323
  br label %1325

1325:                                             ; preds = %1319, %1313
  %1326 = phi i1 [ false, %1313 ], [ %1324, %1319 ]
  %1327 = zext i1 %1326 to i32
  %1328 = sext i32 %1327 to i64
  %1329 = sub nsw i64 %1315, %1328
  %1330 = icmp slt i64 %1329, 0
  br i1 %1330, label %1331, label %1369

1331:                                             ; preds = %1325
  br i1 true, label %1332, label %1350

1332:                                             ; preds = %1331
  %1333 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %1334 = load i64, i64* %1333, align 8
  %1335 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %1336 = load i64, i64* %1335, align 8
  %1337 = icmp slt i64 0, %1336
  br i1 %1337, label %1338, label %1344

1338:                                             ; preds = %1332
  %1339 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %1340 = load i32, i32* %1339, align 8
  %1341 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %1342 = load i32, i32* %1341, align 8
  %1343 = icmp ne i32 %1340, %1342
  br label %1344

1344:                                             ; preds = %1338, %1332
  %1345 = phi i1 [ false, %1332 ], [ %1343, %1338 ]
  %1346 = zext i1 %1345 to i32
  %1347 = sext i32 %1346 to i64
  %1348 = sub nsw i64 %1334, %1347
  %1349 = icmp slt i64 %1348, 4681
  br i1 %1349, label %1529, label %1550

1350:                                             ; preds = %1331
  %1351 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %1352 = load i64, i64* %1351, align 8
  %1353 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %1354 = load i64, i64* %1353, align 8
  %1355 = icmp slt i64 0, %1354
  br i1 %1355, label %1356, label %1362

1356:                                             ; preds = %1350
  %1357 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %1358 = load i32, i32* %1357, align 8
  %1359 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %1360 = load i32, i32* %1359, align 8
  %1361 = icmp ne i32 %1358, %1360
  br label %1362

1362:                                             ; preds = %1356, %1350
  %1363 = phi i1 [ false, %1350 ], [ %1361, %1356 ]
  %1364 = zext i1 %1363 to i32
  %1365 = sext i32 %1364 to i64
  %1366 = sub nsw i64 %1352, %1365
  %1367 = sub nsw i64 -1, %1366
  %1368 = icmp sle i64 -4681, %1367
  br i1 %1368, label %1529, label %1550

1369:                                             ; preds = %1325
  br i1 true, label %1370, label %1371

1370:                                             ; preds = %1369
  br i1 false, label %1372, label %1430

1371:                                             ; preds = %1369
  br i1 false, label %1372, label %1430

1372:                                             ; preds = %1371, %1370
  br i1 false, label %1373, label %1430

1373:                                             ; preds = %1372
  br i1 true, label %1374, label %1393

1374:                                             ; preds = %1373
  %1375 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %1376 = load i64, i64* %1375, align 8
  %1377 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %1378 = load i64, i64* %1377, align 8
  %1379 = icmp slt i64 0, %1378
  br i1 %1379, label %1380, label %1386

1380:                                             ; preds = %1374
  %1381 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %1382 = load i32, i32* %1381, align 8
  %1383 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %1384 = load i32, i32* %1383, align 8
  %1385 = icmp ne i32 %1382, %1384
  br label %1386

1386:                                             ; preds = %1380, %1374
  %1387 = phi i1 [ false, %1374 ], [ %1385, %1380 ]
  %1388 = zext i1 %1387 to i32
  %1389 = sext i32 %1388 to i64
  %1390 = sub nsw i64 %1376, %1389
  %1391 = add nsw i64 %1390, -32768
  %1392 = icmp slt i64 0, %1391
  br i1 %1392, label %1529, label %1550

1393:                                             ; preds = %1373
  %1394 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %1395 = load i64, i64* %1394, align 8
  %1396 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %1397 = load i64, i64* %1396, align 8
  %1398 = icmp slt i64 0, %1397
  br i1 %1398, label %1399, label %1405

1399:                                             ; preds = %1393
  %1400 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %1401 = load i32, i32* %1400, align 8
  %1402 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %1403 = load i32, i32* %1402, align 8
  %1404 = icmp ne i32 %1401, %1403
  br label %1405

1405:                                             ; preds = %1399, %1393
  %1406 = phi i1 [ false, %1393 ], [ %1404, %1399 ]
  %1407 = zext i1 %1406 to i32
  %1408 = sext i32 %1407 to i64
  %1409 = sub nsw i64 %1395, %1408
  %1410 = icmp slt i64 0, %1409
  br i1 %1410, label %1411, label %1550

1411:                                             ; preds = %1405
  %1412 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %1413 = load i64, i64* %1412, align 8
  %1414 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %1415 = load i64, i64* %1414, align 8
  %1416 = icmp slt i64 0, %1415
  br i1 %1416, label %1417, label %1423

1417:                                             ; preds = %1411
  %1418 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %1419 = load i32, i32* %1418, align 8
  %1420 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %1421 = load i32, i32* %1420, align 8
  %1422 = icmp ne i32 %1419, %1421
  br label %1423

1423:                                             ; preds = %1417, %1411
  %1424 = phi i1 [ false, %1411 ], [ %1422, %1417 ]
  %1425 = zext i1 %1424 to i32
  %1426 = sext i32 %1425 to i64
  %1427 = sub nsw i64 %1413, %1426
  %1428 = sub nsw i64 %1427, 1
  %1429 = icmp slt i64 32767, %1428
  br i1 %1429, label %1529, label %1550

1430:                                             ; preds = %1372, %1371, %1370
  %1431 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %1432 = load i64, i64* %1431, align 8
  %1433 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %1434 = load i64, i64* %1433, align 8
  %1435 = icmp slt i64 0, %1434
  br i1 %1435, label %1436, label %1442

1436:                                             ; preds = %1430
  %1437 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %1438 = load i32, i32* %1437, align 8
  %1439 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %1440 = load i32, i32* %1439, align 8
  %1441 = icmp ne i32 %1438, %1440
  br label %1442

1442:                                             ; preds = %1436, %1430
  %1443 = phi i1 [ false, %1430 ], [ %1441, %1436 ]
  %1444 = zext i1 %1443 to i32
  %1445 = sext i32 %1444 to i64
  %1446 = sub nsw i64 %1432, %1445
  %1447 = icmp slt i64 -4681, %1446
  br i1 %1447, label %1529, label %1550

1448:                                             ; preds = %1312
  br i1 false, label %1449, label %1450

1449:                                             ; preds = %1448
  br i1 false, label %1529, label %1550

1450:                                             ; preds = %1448
  %1451 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %1452 = load i64, i64* %1451, align 8
  %1453 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %1454 = load i64, i64* %1453, align 8
  %1455 = icmp slt i64 0, %1454
  br i1 %1455, label %1456, label %1462

1456:                                             ; preds = %1450
  %1457 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %1458 = load i32, i32* %1457, align 8
  %1459 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %1460 = load i32, i32* %1459, align 8
  %1461 = icmp ne i32 %1458, %1460
  br label %1462

1462:                                             ; preds = %1456, %1450
  %1463 = phi i1 [ false, %1450 ], [ %1461, %1456 ]
  %1464 = zext i1 %1463 to i32
  %1465 = sext i32 %1464 to i64
  %1466 = sub nsw i64 %1452, %1465
  %1467 = icmp slt i64 %1466, 0
  br i1 %1467, label %1468, label %1511

1468:                                             ; preds = %1462
  br i1 true, label %1469, label %1470

1469:                                             ; preds = %1468
  br i1 false, label %1471, label %1492

1470:                                             ; preds = %1468
  br i1 false, label %1471, label %1492

1471:                                             ; preds = %1470, %1469
  %1472 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %1473 = load i64, i64* %1472, align 8
  %1474 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %1475 = load i64, i64* %1474, align 8
  %1476 = icmp slt i64 0, %1475
  br i1 %1476, label %1477, label %1483

1477:                                             ; preds = %1471
  %1478 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %1479 = load i32, i32* %1478, align 8
  %1480 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %1481 = load i32, i32* %1480, align 8
  %1482 = icmp ne i32 %1479, %1481
  br label %1483

1483:                                             ; preds = %1477, %1471
  %1484 = phi i1 [ false, %1471 ], [ %1482, %1477 ]
  %1485 = zext i1 %1484 to i32
  %1486 = sext i32 %1485 to i64
  %1487 = sub nsw i64 %1473, %1486
  %1488 = icmp eq i64 %1487, -1
  br i1 %1488, label %1489, label %1492

1489:                                             ; preds = %1483
  br i1 true, label %1490, label %1491

1490:                                             ; preds = %1489
  br i1 false, label %1529, label %1550

1491:                                             ; preds = %1489
  br i1 false, label %1529, label %1550

1492:                                             ; preds = %1483, %1470, %1469
  %1493 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %1494 = load i64, i64* %1493, align 8
  %1495 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %1496 = load i64, i64* %1495, align 8
  %1497 = icmp slt i64 0, %1496
  br i1 %1497, label %1498, label %1504

1498:                                             ; preds = %1492
  %1499 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %1500 = load i32, i32* %1499, align 8
  %1501 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %1502 = load i32, i32* %1501, align 8
  %1503 = icmp ne i32 %1500, %1502
  br label %1504

1504:                                             ; preds = %1498, %1492
  %1505 = phi i1 [ false, %1492 ], [ %1503, %1498 ]
  %1506 = zext i1 %1505 to i32
  %1507 = sext i32 %1506 to i64
  %1508 = sub nsw i64 %1494, %1507
  %1509 = sdiv i64 -32768, %1508
  %1510 = icmp slt i64 %1509, 7
  br i1 %1510, label %1529, label %1550

1511:                                             ; preds = %1462
  %1512 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %1513 = load i64, i64* %1512, align 8
  %1514 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %1515 = load i64, i64* %1514, align 8
  %1516 = icmp slt i64 0, %1515
  br i1 %1516, label %1517, label %1523

1517:                                             ; preds = %1511
  %1518 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %1519 = load i32, i32* %1518, align 8
  %1520 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %1521 = load i32, i32* %1520, align 8
  %1522 = icmp ne i32 %1519, %1521
  br label %1523

1523:                                             ; preds = %1517, %1511
  %1524 = phi i1 [ false, %1511 ], [ %1522, %1517 ]
  %1525 = zext i1 %1524 to i32
  %1526 = sext i32 %1525 to i64
  %1527 = sub nsw i64 %1513, %1526
  %1528 = icmp slt i64 4681, %1527
  br i1 %1528, label %1529, label %1550

1529:                                             ; preds = %1523, %1504, %1491, %1490, %1449, %1442, %1423, %1386, %1362, %1344
  %1530 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %1531 = load i64, i64* %1530, align 8
  %1532 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %1533 = load i64, i64* %1532, align 8
  %1534 = icmp slt i64 0, %1533
  br i1 %1534, label %1535, label %1541

1535:                                             ; preds = %1529
  %1536 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %1537 = load i32, i32* %1536, align 8
  %1538 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %1539 = load i32, i32* %1538, align 8
  %1540 = icmp ne i32 %1537, %1539
  br label %1541

1541:                                             ; preds = %1535, %1529
  %1542 = phi i1 [ false, %1529 ], [ %1540, %1535 ]
  %1543 = zext i1 %1542 to i32
  %1544 = sext i32 %1543 to i64
  %1545 = sub nsw i64 %1531, %1544
  %1546 = trunc i64 %1545 to i32
  %1547 = mul i32 %1546, 7
  %1548 = trunc i32 %1547 to i16
  %1549 = sext i16 %1548 to i64
  store i64 %1549, i64* %45, align 8
  br i1 true, label %3372, label %3346

1550:                                             ; preds = %1523, %1504, %1491, %1490, %1449, %1442, %1423, %1405, %1386, %1362, %1344
  %1551 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %1552 = load i64, i64* %1551, align 8
  %1553 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %1554 = load i64, i64* %1553, align 8
  %1555 = icmp slt i64 0, %1554
  br i1 %1555, label %1556, label %1562

1556:                                             ; preds = %1550
  %1557 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %1558 = load i32, i32* %1557, align 8
  %1559 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %1560 = load i32, i32* %1559, align 8
  %1561 = icmp ne i32 %1558, %1560
  br label %1562

1562:                                             ; preds = %1556, %1550
  %1563 = phi i1 [ false, %1550 ], [ %1561, %1556 ]
  %1564 = zext i1 %1563 to i32
  %1565 = sext i32 %1564 to i64
  %1566 = sub nsw i64 %1552, %1565
  %1567 = trunc i64 %1566 to i32
  %1568 = mul i32 %1567, 7
  %1569 = trunc i32 %1568 to i16
  %1570 = sext i16 %1569 to i64
  store i64 %1570, i64* %45, align 8
  br i1 false, label %3372, label %3346

1571:                                             ; preds = %1311
  br i1 false, label %1572, label %1707

1572:                                             ; preds = %1571
  %1573 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %1574 = load i64, i64* %1573, align 8
  %1575 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %1576 = load i64, i64* %1575, align 8
  %1577 = icmp slt i64 0, %1576
  br i1 %1577, label %1578, label %1584

1578:                                             ; preds = %1572
  %1579 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %1580 = load i32, i32* %1579, align 8
  %1581 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %1582 = load i32, i32* %1581, align 8
  %1583 = icmp ne i32 %1580, %1582
  br label %1584

1584:                                             ; preds = %1578, %1572
  %1585 = phi i1 [ false, %1572 ], [ %1583, %1578 ]
  %1586 = zext i1 %1585 to i32
  %1587 = sext i32 %1586 to i64
  %1588 = sub nsw i64 %1574, %1587
  %1589 = icmp slt i64 %1588, 0
  br i1 %1589, label %1590, label %1628

1590:                                             ; preds = %1584
  br i1 true, label %1591, label %1609

1591:                                             ; preds = %1590
  %1592 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %1593 = load i64, i64* %1592, align 8
  %1594 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %1595 = load i64, i64* %1594, align 8
  %1596 = icmp slt i64 0, %1595
  br i1 %1596, label %1597, label %1603

1597:                                             ; preds = %1591
  %1598 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %1599 = load i32, i32* %1598, align 8
  %1600 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %1601 = load i32, i32* %1600, align 8
  %1602 = icmp ne i32 %1599, %1601
  br label %1603

1603:                                             ; preds = %1597, %1591
  %1604 = phi i1 [ false, %1591 ], [ %1602, %1597 ]
  %1605 = zext i1 %1604 to i32
  %1606 = sext i32 %1605 to i64
  %1607 = sub nsw i64 %1593, %1606
  %1608 = icmp slt i64 %1607, 9362
  br i1 %1608, label %1788, label %1809

1609:                                             ; preds = %1590
  %1610 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %1611 = load i64, i64* %1610, align 8
  %1612 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %1613 = load i64, i64* %1612, align 8
  %1614 = icmp slt i64 0, %1613
  br i1 %1614, label %1615, label %1621

1615:                                             ; preds = %1609
  %1616 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %1617 = load i32, i32* %1616, align 8
  %1618 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %1619 = load i32, i32* %1618, align 8
  %1620 = icmp ne i32 %1617, %1619
  br label %1621

1621:                                             ; preds = %1615, %1609
  %1622 = phi i1 [ false, %1609 ], [ %1620, %1615 ]
  %1623 = zext i1 %1622 to i32
  %1624 = sext i32 %1623 to i64
  %1625 = sub nsw i64 %1611, %1624
  %1626 = sub nsw i64 -1, %1625
  %1627 = icmp sle i64 -9362, %1626
  br i1 %1627, label %1788, label %1809

1628:                                             ; preds = %1584
  br i1 true, label %1629, label %1630

1629:                                             ; preds = %1628
  br i1 false, label %1631, label %1689

1630:                                             ; preds = %1628
  br i1 false, label %1631, label %1689

1631:                                             ; preds = %1630, %1629
  br i1 false, label %1632, label %1689

1632:                                             ; preds = %1631
  br i1 true, label %1633, label %1652

1633:                                             ; preds = %1632
  %1634 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %1635 = load i64, i64* %1634, align 8
  %1636 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %1637 = load i64, i64* %1636, align 8
  %1638 = icmp slt i64 0, %1637
  br i1 %1638, label %1639, label %1645

1639:                                             ; preds = %1633
  %1640 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %1641 = load i32, i32* %1640, align 8
  %1642 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %1643 = load i32, i32* %1642, align 8
  %1644 = icmp ne i32 %1641, %1643
  br label %1645

1645:                                             ; preds = %1639, %1633
  %1646 = phi i1 [ false, %1633 ], [ %1644, %1639 ]
  %1647 = zext i1 %1646 to i32
  %1648 = sext i32 %1647 to i64
  %1649 = sub nsw i64 %1635, %1648
  %1650 = add nsw i64 %1649, 0
  %1651 = icmp slt i64 0, %1650
  br i1 %1651, label %1788, label %1809

1652:                                             ; preds = %1632
  %1653 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %1654 = load i64, i64* %1653, align 8
  %1655 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %1656 = load i64, i64* %1655, align 8
  %1657 = icmp slt i64 0, %1656
  br i1 %1657, label %1658, label %1664

1658:                                             ; preds = %1652
  %1659 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %1660 = load i32, i32* %1659, align 8
  %1661 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %1662 = load i32, i32* %1661, align 8
  %1663 = icmp ne i32 %1660, %1662
  br label %1664

1664:                                             ; preds = %1658, %1652
  %1665 = phi i1 [ false, %1652 ], [ %1663, %1658 ]
  %1666 = zext i1 %1665 to i32
  %1667 = sext i32 %1666 to i64
  %1668 = sub nsw i64 %1654, %1667
  %1669 = icmp slt i64 0, %1668
  br i1 %1669, label %1670, label %1809

1670:                                             ; preds = %1664
  %1671 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %1672 = load i64, i64* %1671, align 8
  %1673 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %1674 = load i64, i64* %1673, align 8
  %1675 = icmp slt i64 0, %1674
  br i1 %1675, label %1676, label %1682

1676:                                             ; preds = %1670
  %1677 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %1678 = load i32, i32* %1677, align 8
  %1679 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %1680 = load i32, i32* %1679, align 8
  %1681 = icmp ne i32 %1678, %1680
  br label %1682

1682:                                             ; preds = %1676, %1670
  %1683 = phi i1 [ false, %1670 ], [ %1681, %1676 ]
  %1684 = zext i1 %1683 to i32
  %1685 = sext i32 %1684 to i64
  %1686 = sub nsw i64 %1672, %1685
  %1687 = sub nsw i64 %1686, 1
  %1688 = icmp slt i64 -1, %1687
  br i1 %1688, label %1788, label %1809

1689:                                             ; preds = %1631, %1630, %1629
  %1690 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %1691 = load i64, i64* %1690, align 8
  %1692 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %1693 = load i64, i64* %1692, align 8
  %1694 = icmp slt i64 0, %1693
  br i1 %1694, label %1695, label %1701

1695:                                             ; preds = %1689
  %1696 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %1697 = load i32, i32* %1696, align 8
  %1698 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %1699 = load i32, i32* %1698, align 8
  %1700 = icmp ne i32 %1697, %1699
  br label %1701

1701:                                             ; preds = %1695, %1689
  %1702 = phi i1 [ false, %1689 ], [ %1700, %1695 ]
  %1703 = zext i1 %1702 to i32
  %1704 = sext i32 %1703 to i64
  %1705 = sub nsw i64 %1691, %1704
  %1706 = icmp slt i64 0, %1705
  br i1 %1706, label %1788, label %1809

1707:                                             ; preds = %1571
  br i1 false, label %1708, label %1709

1708:                                             ; preds = %1707
  br i1 false, label %1788, label %1809

1709:                                             ; preds = %1707
  %1710 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %1711 = load i64, i64* %1710, align 8
  %1712 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %1713 = load i64, i64* %1712, align 8
  %1714 = icmp slt i64 0, %1713
  br i1 %1714, label %1715, label %1721

1715:                                             ; preds = %1709
  %1716 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %1717 = load i32, i32* %1716, align 8
  %1718 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %1719 = load i32, i32* %1718, align 8
  %1720 = icmp ne i32 %1717, %1719
  br label %1721

1721:                                             ; preds = %1715, %1709
  %1722 = phi i1 [ false, %1709 ], [ %1720, %1715 ]
  %1723 = zext i1 %1722 to i32
  %1724 = sext i32 %1723 to i64
  %1725 = sub nsw i64 %1711, %1724
  %1726 = icmp slt i64 %1725, 0
  br i1 %1726, label %1727, label %1770

1727:                                             ; preds = %1721
  br i1 true, label %1728, label %1729

1728:                                             ; preds = %1727
  br i1 false, label %1730, label %1751

1729:                                             ; preds = %1727
  br i1 false, label %1730, label %1751

1730:                                             ; preds = %1729, %1728
  %1731 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %1732 = load i64, i64* %1731, align 8
  %1733 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %1734 = load i64, i64* %1733, align 8
  %1735 = icmp slt i64 0, %1734
  br i1 %1735, label %1736, label %1742

1736:                                             ; preds = %1730
  %1737 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %1738 = load i32, i32* %1737, align 8
  %1739 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %1740 = load i32, i32* %1739, align 8
  %1741 = icmp ne i32 %1738, %1740
  br label %1742

1742:                                             ; preds = %1736, %1730
  %1743 = phi i1 [ false, %1730 ], [ %1741, %1736 ]
  %1744 = zext i1 %1743 to i32
  %1745 = sext i32 %1744 to i64
  %1746 = sub nsw i64 %1732, %1745
  %1747 = icmp eq i64 %1746, -1
  br i1 %1747, label %1748, label %1751

1748:                                             ; preds = %1742
  br i1 true, label %1749, label %1750

1749:                                             ; preds = %1748
  br i1 true, label %1788, label %1809

1750:                                             ; preds = %1748
  br i1 true, label %1788, label %1809

1751:                                             ; preds = %1742, %1729, %1728
  %1752 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %1753 = load i64, i64* %1752, align 8
  %1754 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %1755 = load i64, i64* %1754, align 8
  %1756 = icmp slt i64 0, %1755
  br i1 %1756, label %1757, label %1763

1757:                                             ; preds = %1751
  %1758 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %1759 = load i32, i32* %1758, align 8
  %1760 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %1761 = load i32, i32* %1760, align 8
  %1762 = icmp ne i32 %1759, %1761
  br label %1763

1763:                                             ; preds = %1757, %1751
  %1764 = phi i1 [ false, %1751 ], [ %1762, %1757 ]
  %1765 = zext i1 %1764 to i32
  %1766 = sext i32 %1765 to i64
  %1767 = sub nsw i64 %1753, %1766
  %1768 = sdiv i64 0, %1767
  %1769 = icmp slt i64 %1768, 7
  br i1 %1769, label %1788, label %1809

1770:                                             ; preds = %1721
  %1771 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %1772 = load i64, i64* %1771, align 8
  %1773 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %1774 = load i64, i64* %1773, align 8
  %1775 = icmp slt i64 0, %1774
  br i1 %1775, label %1776, label %1782

1776:                                             ; preds = %1770
  %1777 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %1778 = load i32, i32* %1777, align 8
  %1779 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %1780 = load i32, i32* %1779, align 8
  %1781 = icmp ne i32 %1778, %1780
  br label %1782

1782:                                             ; preds = %1776, %1770
  %1783 = phi i1 [ false, %1770 ], [ %1781, %1776 ]
  %1784 = zext i1 %1783 to i32
  %1785 = sext i32 %1784 to i64
  %1786 = sub nsw i64 %1772, %1785
  %1787 = icmp slt i64 9362, %1786
  br i1 %1787, label %1788, label %1809

1788:                                             ; preds = %1782, %1763, %1750, %1749, %1708, %1701, %1682, %1645, %1621, %1603
  %1789 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %1790 = load i64, i64* %1789, align 8
  %1791 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %1792 = load i64, i64* %1791, align 8
  %1793 = icmp slt i64 0, %1792
  br i1 %1793, label %1794, label %1800

1794:                                             ; preds = %1788
  %1795 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %1796 = load i32, i32* %1795, align 8
  %1797 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %1798 = load i32, i32* %1797, align 8
  %1799 = icmp ne i32 %1796, %1798
  br label %1800

1800:                                             ; preds = %1794, %1788
  %1801 = phi i1 [ false, %1788 ], [ %1799, %1794 ]
  %1802 = zext i1 %1801 to i32
  %1803 = sext i32 %1802 to i64
  %1804 = sub nsw i64 %1790, %1803
  %1805 = trunc i64 %1804 to i32
  %1806 = mul i32 %1805, 7
  %1807 = trunc i32 %1806 to i16
  %1808 = zext i16 %1807 to i64
  store i64 %1808, i64* %45, align 8
  br i1 true, label %3372, label %3346

1809:                                             ; preds = %1782, %1763, %1750, %1749, %1708, %1701, %1682, %1664, %1645, %1621, %1603
  %1810 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %1811 = load i64, i64* %1810, align 8
  %1812 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %1813 = load i64, i64* %1812, align 8
  %1814 = icmp slt i64 0, %1813
  br i1 %1814, label %1815, label %1821

1815:                                             ; preds = %1809
  %1816 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %1817 = load i32, i32* %1816, align 8
  %1818 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %1819 = load i32, i32* %1818, align 8
  %1820 = icmp ne i32 %1817, %1819
  br label %1821

1821:                                             ; preds = %1815, %1809
  %1822 = phi i1 [ false, %1809 ], [ %1820, %1815 ]
  %1823 = zext i1 %1822 to i32
  %1824 = sext i32 %1823 to i64
  %1825 = sub nsw i64 %1811, %1824
  %1826 = trunc i64 %1825 to i32
  %1827 = mul i32 %1826, 7
  %1828 = trunc i32 %1827 to i16
  %1829 = zext i16 %1828 to i64
  store i64 %1829, i64* %45, align 8
  br i1 false, label %3372, label %3346

1830:                                             ; preds = %1310
  br i1 false, label %1831, label %2343

1831:                                             ; preds = %1830
  br i1 true, label %1832, label %2086

1832:                                             ; preds = %1831
  br i1 false, label %1833, label %1965

1833:                                             ; preds = %1832
  %1834 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %1835 = load i64, i64* %1834, align 8
  %1836 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %1837 = load i64, i64* %1836, align 8
  %1838 = icmp slt i64 0, %1837
  br i1 %1838, label %1839, label %1845

1839:                                             ; preds = %1833
  %1840 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %1841 = load i32, i32* %1840, align 8
  %1842 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %1843 = load i32, i32* %1842, align 8
  %1844 = icmp ne i32 %1841, %1843
  br label %1845

1845:                                             ; preds = %1839, %1833
  %1846 = phi i1 [ false, %1833 ], [ %1844, %1839 ]
  %1847 = zext i1 %1846 to i32
  %1848 = sext i32 %1847 to i64
  %1849 = sub nsw i64 %1835, %1848
  %1850 = icmp slt i64 %1849, 0
  br i1 %1850, label %1851, label %1889

1851:                                             ; preds = %1845
  br i1 true, label %1852, label %1870

1852:                                             ; preds = %1851
  %1853 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %1854 = load i64, i64* %1853, align 8
  %1855 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %1856 = load i64, i64* %1855, align 8
  %1857 = icmp slt i64 0, %1856
  br i1 %1857, label %1858, label %1864

1858:                                             ; preds = %1852
  %1859 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %1860 = load i32, i32* %1859, align 8
  %1861 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %1862 = load i32, i32* %1861, align 8
  %1863 = icmp ne i32 %1860, %1862
  br label %1864

1864:                                             ; preds = %1858, %1852
  %1865 = phi i1 [ false, %1852 ], [ %1863, %1858 ]
  %1866 = zext i1 %1865 to i32
  %1867 = sext i32 %1866 to i64
  %1868 = sub nsw i64 %1854, %1867
  %1869 = icmp slt i64 %1868, 306783378
  br i1 %1869, label %2046, label %2066

1870:                                             ; preds = %1851
  %1871 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %1872 = load i64, i64* %1871, align 8
  %1873 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %1874 = load i64, i64* %1873, align 8
  %1875 = icmp slt i64 0, %1874
  br i1 %1875, label %1876, label %1882

1876:                                             ; preds = %1870
  %1877 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %1878 = load i32, i32* %1877, align 8
  %1879 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %1880 = load i32, i32* %1879, align 8
  %1881 = icmp ne i32 %1878, %1880
  br label %1882

1882:                                             ; preds = %1876, %1870
  %1883 = phi i1 [ false, %1870 ], [ %1881, %1876 ]
  %1884 = zext i1 %1883 to i32
  %1885 = sext i32 %1884 to i64
  %1886 = sub nsw i64 %1872, %1885
  %1887 = sub nsw i64 -1, %1886
  %1888 = icmp sle i64 -306783378, %1887
  br i1 %1888, label %2046, label %2066

1889:                                             ; preds = %1845
  br i1 false, label %1890, label %1947

1890:                                             ; preds = %1889
  br i1 true, label %1891, label %1910

1891:                                             ; preds = %1890
  %1892 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %1893 = load i64, i64* %1892, align 8
  %1894 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %1895 = load i64, i64* %1894, align 8
  %1896 = icmp slt i64 0, %1895
  br i1 %1896, label %1897, label %1903

1897:                                             ; preds = %1891
  %1898 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %1899 = load i32, i32* %1898, align 8
  %1900 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %1901 = load i32, i32* %1900, align 8
  %1902 = icmp ne i32 %1899, %1901
  br label %1903

1903:                                             ; preds = %1897, %1891
  %1904 = phi i1 [ false, %1891 ], [ %1902, %1897 ]
  %1905 = zext i1 %1904 to i32
  %1906 = sext i32 %1905 to i64
  %1907 = sub nsw i64 %1893, %1906
  %1908 = add nsw i64 %1907, -2147483648
  %1909 = icmp slt i64 0, %1908
  br i1 %1909, label %2046, label %2066

1910:                                             ; preds = %1890
  %1911 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %1912 = load i64, i64* %1911, align 8
  %1913 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %1914 = load i64, i64* %1913, align 8
  %1915 = icmp slt i64 0, %1914
  br i1 %1915, label %1916, label %1922

1916:                                             ; preds = %1910
  %1917 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %1918 = load i32, i32* %1917, align 8
  %1919 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %1920 = load i32, i32* %1919, align 8
  %1921 = icmp ne i32 %1918, %1920
  br label %1922

1922:                                             ; preds = %1916, %1910
  %1923 = phi i1 [ false, %1910 ], [ %1921, %1916 ]
  %1924 = zext i1 %1923 to i32
  %1925 = sext i32 %1924 to i64
  %1926 = sub nsw i64 %1912, %1925
  %1927 = icmp slt i64 0, %1926
  br i1 %1927, label %1928, label %2066

1928:                                             ; preds = %1922
  %1929 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %1930 = load i64, i64* %1929, align 8
  %1931 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %1932 = load i64, i64* %1931, align 8
  %1933 = icmp slt i64 0, %1932
  br i1 %1933, label %1934, label %1940

1934:                                             ; preds = %1928
  %1935 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %1936 = load i32, i32* %1935, align 8
  %1937 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %1938 = load i32, i32* %1937, align 8
  %1939 = icmp ne i32 %1936, %1938
  br label %1940

1940:                                             ; preds = %1934, %1928
  %1941 = phi i1 [ false, %1928 ], [ %1939, %1934 ]
  %1942 = zext i1 %1941 to i32
  %1943 = sext i32 %1942 to i64
  %1944 = sub nsw i64 %1930, %1943
  %1945 = sub nsw i64 %1944, 1
  %1946 = icmp slt i64 2147483647, %1945
  br i1 %1946, label %2046, label %2066

1947:                                             ; preds = %1889
  %1948 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %1949 = load i64, i64* %1948, align 8
  %1950 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %1951 = load i64, i64* %1950, align 8
  %1952 = icmp slt i64 0, %1951
  br i1 %1952, label %1953, label %1959

1953:                                             ; preds = %1947
  %1954 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %1955 = load i32, i32* %1954, align 8
  %1956 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %1957 = load i32, i32* %1956, align 8
  %1958 = icmp ne i32 %1955, %1957
  br label %1959

1959:                                             ; preds = %1953, %1947
  %1960 = phi i1 [ false, %1947 ], [ %1958, %1953 ]
  %1961 = zext i1 %1960 to i32
  %1962 = sext i32 %1961 to i64
  %1963 = sub nsw i64 %1949, %1962
  %1964 = icmp slt i64 -306783378, %1963
  br i1 %1964, label %2046, label %2066

1965:                                             ; preds = %1832
  br i1 false, label %1966, label %1967

1966:                                             ; preds = %1965
  br i1 false, label %2046, label %2066

1967:                                             ; preds = %1965
  %1968 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %1969 = load i64, i64* %1968, align 8
  %1970 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %1971 = load i64, i64* %1970, align 8
  %1972 = icmp slt i64 0, %1971
  br i1 %1972, label %1973, label %1979

1973:                                             ; preds = %1967
  %1974 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %1975 = load i32, i32* %1974, align 8
  %1976 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %1977 = load i32, i32* %1976, align 8
  %1978 = icmp ne i32 %1975, %1977
  br label %1979

1979:                                             ; preds = %1973, %1967
  %1980 = phi i1 [ false, %1967 ], [ %1978, %1973 ]
  %1981 = zext i1 %1980 to i32
  %1982 = sext i32 %1981 to i64
  %1983 = sub nsw i64 %1969, %1982
  %1984 = icmp slt i64 %1983, 0
  br i1 %1984, label %1985, label %2028

1985:                                             ; preds = %1979
  br i1 true, label %1986, label %1987

1986:                                             ; preds = %1985
  br i1 false, label %1988, label %2009

1987:                                             ; preds = %1985
  br i1 false, label %1988, label %2009

1988:                                             ; preds = %1987, %1986
  %1989 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %1990 = load i64, i64* %1989, align 8
  %1991 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %1992 = load i64, i64* %1991, align 8
  %1993 = icmp slt i64 0, %1992
  br i1 %1993, label %1994, label %2000

1994:                                             ; preds = %1988
  %1995 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %1996 = load i32, i32* %1995, align 8
  %1997 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %1998 = load i32, i32* %1997, align 8
  %1999 = icmp ne i32 %1996, %1998
  br label %2000

2000:                                             ; preds = %1994, %1988
  %2001 = phi i1 [ false, %1988 ], [ %1999, %1994 ]
  %2002 = zext i1 %2001 to i32
  %2003 = sext i32 %2002 to i64
  %2004 = sub nsw i64 %1990, %2003
  %2005 = icmp eq i64 %2004, -1
  br i1 %2005, label %2006, label %2009

2006:                                             ; preds = %2000
  br i1 true, label %2007, label %2008

2007:                                             ; preds = %2006
  br i1 false, label %2046, label %2066

2008:                                             ; preds = %2006
  br i1 false, label %2046, label %2066

2009:                                             ; preds = %2000, %1987, %1986
  %2010 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %2011 = load i64, i64* %2010, align 8
  %2012 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %2013 = load i64, i64* %2012, align 8
  %2014 = icmp slt i64 0, %2013
  br i1 %2014, label %2015, label %2021

2015:                                             ; preds = %2009
  %2016 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %2017 = load i32, i32* %2016, align 8
  %2018 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %2019 = load i32, i32* %2018, align 8
  %2020 = icmp ne i32 %2017, %2019
  br label %2021

2021:                                             ; preds = %2015, %2009
  %2022 = phi i1 [ false, %2009 ], [ %2020, %2015 ]
  %2023 = zext i1 %2022 to i32
  %2024 = sext i32 %2023 to i64
  %2025 = sub nsw i64 %2011, %2024
  %2026 = sdiv i64 -2147483648, %2025
  %2027 = icmp slt i64 %2026, 7
  br i1 %2027, label %2046, label %2066

2028:                                             ; preds = %1979
  %2029 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %2030 = load i64, i64* %2029, align 8
  %2031 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %2032 = load i64, i64* %2031, align 8
  %2033 = icmp slt i64 0, %2032
  br i1 %2033, label %2034, label %2040

2034:                                             ; preds = %2028
  %2035 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %2036 = load i32, i32* %2035, align 8
  %2037 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %2038 = load i32, i32* %2037, align 8
  %2039 = icmp ne i32 %2036, %2038
  br label %2040

2040:                                             ; preds = %2034, %2028
  %2041 = phi i1 [ false, %2028 ], [ %2039, %2034 ]
  %2042 = zext i1 %2041 to i32
  %2043 = sext i32 %2042 to i64
  %2044 = sub nsw i64 %2030, %2043
  %2045 = icmp slt i64 306783378, %2044
  br i1 %2045, label %2046, label %2066

2046:                                             ; preds = %2040, %2021, %2008, %2007, %1966, %1959, %1940, %1903, %1882, %1864
  %2047 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %2048 = load i64, i64* %2047, align 8
  %2049 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %2050 = load i64, i64* %2049, align 8
  %2051 = icmp slt i64 0, %2050
  br i1 %2051, label %2052, label %2058

2052:                                             ; preds = %2046
  %2053 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %2054 = load i32, i32* %2053, align 8
  %2055 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %2056 = load i32, i32* %2055, align 8
  %2057 = icmp ne i32 %2054, %2056
  br label %2058

2058:                                             ; preds = %2052, %2046
  %2059 = phi i1 [ false, %2046 ], [ %2057, %2052 ]
  %2060 = zext i1 %2059 to i32
  %2061 = sext i32 %2060 to i64
  %2062 = sub nsw i64 %2048, %2061
  %2063 = trunc i64 %2062 to i32
  %2064 = mul i32 %2063, 7
  %2065 = sext i32 %2064 to i64
  store i64 %2065, i64* %45, align 8
  br i1 true, label %3372, label %3346

2066:                                             ; preds = %2040, %2021, %2008, %2007, %1966, %1959, %1940, %1922, %1903, %1882, %1864
  %2067 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %2068 = load i64, i64* %2067, align 8
  %2069 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %2070 = load i64, i64* %2069, align 8
  %2071 = icmp slt i64 0, %2070
  br i1 %2071, label %2072, label %2078

2072:                                             ; preds = %2066
  %2073 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %2074 = load i32, i32* %2073, align 8
  %2075 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %2076 = load i32, i32* %2075, align 8
  %2077 = icmp ne i32 %2074, %2076
  br label %2078

2078:                                             ; preds = %2072, %2066
  %2079 = phi i1 [ false, %2066 ], [ %2077, %2072 ]
  %2080 = zext i1 %2079 to i32
  %2081 = sext i32 %2080 to i64
  %2082 = sub nsw i64 %2068, %2081
  %2083 = trunc i64 %2082 to i32
  %2084 = mul i32 %2083, 7
  %2085 = sext i32 %2084 to i64
  store i64 %2085, i64* %45, align 8
  br i1 false, label %3372, label %3346

2086:                                             ; preds = %1831
  br i1 false, label %2087, label %2222

2087:                                             ; preds = %2086
  %2088 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %2089 = load i64, i64* %2088, align 8
  %2090 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %2091 = load i64, i64* %2090, align 8
  %2092 = icmp slt i64 0, %2091
  br i1 %2092, label %2093, label %2099

2093:                                             ; preds = %2087
  %2094 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %2095 = load i32, i32* %2094, align 8
  %2096 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %2097 = load i32, i32* %2096, align 8
  %2098 = icmp ne i32 %2095, %2097
  br label %2099

2099:                                             ; preds = %2093, %2087
  %2100 = phi i1 [ false, %2087 ], [ %2098, %2093 ]
  %2101 = zext i1 %2100 to i32
  %2102 = sext i32 %2101 to i64
  %2103 = sub nsw i64 %2089, %2102
  %2104 = icmp slt i64 %2103, 0
  br i1 %2104, label %2105, label %2143

2105:                                             ; preds = %2099
  br i1 false, label %2106, label %2124

2106:                                             ; preds = %2105
  %2107 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %2108 = load i64, i64* %2107, align 8
  %2109 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %2110 = load i64, i64* %2109, align 8
  %2111 = icmp slt i64 0, %2110
  br i1 %2111, label %2112, label %2118

2112:                                             ; preds = %2106
  %2113 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %2114 = load i32, i32* %2113, align 8
  %2115 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %2116 = load i32, i32* %2115, align 8
  %2117 = icmp ne i32 %2114, %2116
  br label %2118

2118:                                             ; preds = %2112, %2106
  %2119 = phi i1 [ false, %2106 ], [ %2117, %2112 ]
  %2120 = zext i1 %2119 to i32
  %2121 = sext i32 %2120 to i64
  %2122 = sub nsw i64 %2108, %2121
  %2123 = icmp slt i64 %2122, 613566756
  br i1 %2123, label %2303, label %2323

2124:                                             ; preds = %2105
  %2125 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %2126 = load i64, i64* %2125, align 8
  %2127 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %2128 = load i64, i64* %2127, align 8
  %2129 = icmp slt i64 0, %2128
  br i1 %2129, label %2130, label %2136

2130:                                             ; preds = %2124
  %2131 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %2132 = load i32, i32* %2131, align 8
  %2133 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %2134 = load i32, i32* %2133, align 8
  %2135 = icmp ne i32 %2132, %2134
  br label %2136

2136:                                             ; preds = %2130, %2124
  %2137 = phi i1 [ false, %2124 ], [ %2135, %2130 ]
  %2138 = zext i1 %2137 to i32
  %2139 = sext i32 %2138 to i64
  %2140 = sub nsw i64 %2126, %2139
  %2141 = sub nsw i64 -1, %2140
  %2142 = icmp sle i64 1, %2141
  br i1 %2142, label %2303, label %2323

2143:                                             ; preds = %2099
  br i1 true, label %2144, label %2145

2144:                                             ; preds = %2143
  br i1 false, label %2146, label %2204

2145:                                             ; preds = %2143
  br i1 false, label %2146, label %2204

2146:                                             ; preds = %2145, %2144
  br i1 false, label %2147, label %2204

2147:                                             ; preds = %2146
  br i1 true, label %2148, label %2167

2148:                                             ; preds = %2147
  %2149 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %2150 = load i64, i64* %2149, align 8
  %2151 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %2152 = load i64, i64* %2151, align 8
  %2153 = icmp slt i64 0, %2152
  br i1 %2153, label %2154, label %2160

2154:                                             ; preds = %2148
  %2155 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %2156 = load i32, i32* %2155, align 8
  %2157 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %2158 = load i32, i32* %2157, align 8
  %2159 = icmp ne i32 %2156, %2158
  br label %2160

2160:                                             ; preds = %2154, %2148
  %2161 = phi i1 [ false, %2148 ], [ %2159, %2154 ]
  %2162 = zext i1 %2161 to i32
  %2163 = sext i32 %2162 to i64
  %2164 = sub nsw i64 %2150, %2163
  %2165 = add nsw i64 %2164, 0
  %2166 = icmp slt i64 0, %2165
  br i1 %2166, label %2303, label %2323

2167:                                             ; preds = %2147
  %2168 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %2169 = load i64, i64* %2168, align 8
  %2170 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %2171 = load i64, i64* %2170, align 8
  %2172 = icmp slt i64 0, %2171
  br i1 %2172, label %2173, label %2179

2173:                                             ; preds = %2167
  %2174 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %2175 = load i32, i32* %2174, align 8
  %2176 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %2177 = load i32, i32* %2176, align 8
  %2178 = icmp ne i32 %2175, %2177
  br label %2179

2179:                                             ; preds = %2173, %2167
  %2180 = phi i1 [ false, %2167 ], [ %2178, %2173 ]
  %2181 = zext i1 %2180 to i32
  %2182 = sext i32 %2181 to i64
  %2183 = sub nsw i64 %2169, %2182
  %2184 = icmp slt i64 0, %2183
  br i1 %2184, label %2185, label %2323

2185:                                             ; preds = %2179
  %2186 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %2187 = load i64, i64* %2186, align 8
  %2188 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %2189 = load i64, i64* %2188, align 8
  %2190 = icmp slt i64 0, %2189
  br i1 %2190, label %2191, label %2197

2191:                                             ; preds = %2185
  %2192 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %2193 = load i32, i32* %2192, align 8
  %2194 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %2195 = load i32, i32* %2194, align 8
  %2196 = icmp ne i32 %2193, %2195
  br label %2197

2197:                                             ; preds = %2191, %2185
  %2198 = phi i1 [ false, %2185 ], [ %2196, %2191 ]
  %2199 = zext i1 %2198 to i32
  %2200 = sext i32 %2199 to i64
  %2201 = sub nsw i64 %2187, %2200
  %2202 = sub nsw i64 %2201, 1
  %2203 = icmp slt i64 -1, %2202
  br i1 %2203, label %2303, label %2323

2204:                                             ; preds = %2146, %2145, %2144
  %2205 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %2206 = load i64, i64* %2205, align 8
  %2207 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %2208 = load i64, i64* %2207, align 8
  %2209 = icmp slt i64 0, %2208
  br i1 %2209, label %2210, label %2216

2210:                                             ; preds = %2204
  %2211 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %2212 = load i32, i32* %2211, align 8
  %2213 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %2214 = load i32, i32* %2213, align 8
  %2215 = icmp ne i32 %2212, %2214
  br label %2216

2216:                                             ; preds = %2210, %2204
  %2217 = phi i1 [ false, %2204 ], [ %2215, %2210 ]
  %2218 = zext i1 %2217 to i32
  %2219 = sext i32 %2218 to i64
  %2220 = sub nsw i64 %2206, %2219
  %2221 = icmp slt i64 0, %2220
  br i1 %2221, label %2303, label %2323

2222:                                             ; preds = %2086
  br i1 false, label %2223, label %2224

2223:                                             ; preds = %2222
  br i1 false, label %2303, label %2323

2224:                                             ; preds = %2222
  %2225 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %2226 = load i64, i64* %2225, align 8
  %2227 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %2228 = load i64, i64* %2227, align 8
  %2229 = icmp slt i64 0, %2228
  br i1 %2229, label %2230, label %2236

2230:                                             ; preds = %2224
  %2231 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %2232 = load i32, i32* %2231, align 8
  %2233 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %2234 = load i32, i32* %2233, align 8
  %2235 = icmp ne i32 %2232, %2234
  br label %2236

2236:                                             ; preds = %2230, %2224
  %2237 = phi i1 [ false, %2224 ], [ %2235, %2230 ]
  %2238 = zext i1 %2237 to i32
  %2239 = sext i32 %2238 to i64
  %2240 = sub nsw i64 %2226, %2239
  %2241 = icmp slt i64 %2240, 0
  br i1 %2241, label %2242, label %2285

2242:                                             ; preds = %2236
  br i1 true, label %2243, label %2244

2243:                                             ; preds = %2242
  br i1 false, label %2245, label %2266

2244:                                             ; preds = %2242
  br i1 false, label %2245, label %2266

2245:                                             ; preds = %2244, %2243
  %2246 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %2247 = load i64, i64* %2246, align 8
  %2248 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %2249 = load i64, i64* %2248, align 8
  %2250 = icmp slt i64 0, %2249
  br i1 %2250, label %2251, label %2257

2251:                                             ; preds = %2245
  %2252 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %2253 = load i32, i32* %2252, align 8
  %2254 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %2255 = load i32, i32* %2254, align 8
  %2256 = icmp ne i32 %2253, %2255
  br label %2257

2257:                                             ; preds = %2251, %2245
  %2258 = phi i1 [ false, %2245 ], [ %2256, %2251 ]
  %2259 = zext i1 %2258 to i32
  %2260 = sext i32 %2259 to i64
  %2261 = sub nsw i64 %2247, %2260
  %2262 = icmp eq i64 %2261, -1
  br i1 %2262, label %2263, label %2266

2263:                                             ; preds = %2257
  br i1 true, label %2264, label %2265

2264:                                             ; preds = %2263
  br i1 true, label %2303, label %2323

2265:                                             ; preds = %2263
  br i1 true, label %2303, label %2323

2266:                                             ; preds = %2257, %2244, %2243
  %2267 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %2268 = load i64, i64* %2267, align 8
  %2269 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %2270 = load i64, i64* %2269, align 8
  %2271 = icmp slt i64 0, %2270
  br i1 %2271, label %2272, label %2278

2272:                                             ; preds = %2266
  %2273 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %2274 = load i32, i32* %2273, align 8
  %2275 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %2276 = load i32, i32* %2275, align 8
  %2277 = icmp ne i32 %2274, %2276
  br label %2278

2278:                                             ; preds = %2272, %2266
  %2279 = phi i1 [ false, %2266 ], [ %2277, %2272 ]
  %2280 = zext i1 %2279 to i32
  %2281 = sext i32 %2280 to i64
  %2282 = sub nsw i64 %2268, %2281
  %2283 = sdiv i64 0, %2282
  %2284 = icmp slt i64 %2283, 7
  br i1 %2284, label %2303, label %2323

2285:                                             ; preds = %2236
  %2286 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %2287 = load i64, i64* %2286, align 8
  %2288 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %2289 = load i64, i64* %2288, align 8
  %2290 = icmp slt i64 0, %2289
  br i1 %2290, label %2291, label %2297

2291:                                             ; preds = %2285
  %2292 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %2293 = load i32, i32* %2292, align 8
  %2294 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %2295 = load i32, i32* %2294, align 8
  %2296 = icmp ne i32 %2293, %2295
  br label %2297

2297:                                             ; preds = %2291, %2285
  %2298 = phi i1 [ false, %2285 ], [ %2296, %2291 ]
  %2299 = zext i1 %2298 to i32
  %2300 = sext i32 %2299 to i64
  %2301 = sub nsw i64 %2287, %2300
  %2302 = icmp slt i64 613566756, %2301
  br i1 %2302, label %2303, label %2323

2303:                                             ; preds = %2297, %2278, %2265, %2264, %2223, %2216, %2197, %2160, %2136, %2118
  %2304 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %2305 = load i64, i64* %2304, align 8
  %2306 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %2307 = load i64, i64* %2306, align 8
  %2308 = icmp slt i64 0, %2307
  br i1 %2308, label %2309, label %2315

2309:                                             ; preds = %2303
  %2310 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %2311 = load i32, i32* %2310, align 8
  %2312 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %2313 = load i32, i32* %2312, align 8
  %2314 = icmp ne i32 %2311, %2313
  br label %2315

2315:                                             ; preds = %2309, %2303
  %2316 = phi i1 [ false, %2303 ], [ %2314, %2309 ]
  %2317 = zext i1 %2316 to i32
  %2318 = sext i32 %2317 to i64
  %2319 = sub nsw i64 %2305, %2318
  %2320 = trunc i64 %2319 to i32
  %2321 = mul i32 %2320, 7
  %2322 = zext i32 %2321 to i64
  store i64 %2322, i64* %45, align 8
  br i1 true, label %3372, label %3346

2323:                                             ; preds = %2297, %2278, %2265, %2264, %2223, %2216, %2197, %2179, %2160, %2136, %2118
  %2324 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %2325 = load i64, i64* %2324, align 8
  %2326 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %2327 = load i64, i64* %2326, align 8
  %2328 = icmp slt i64 0, %2327
  br i1 %2328, label %2329, label %2335

2329:                                             ; preds = %2323
  %2330 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %2331 = load i32, i32* %2330, align 8
  %2332 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %2333 = load i32, i32* %2332, align 8
  %2334 = icmp ne i32 %2331, %2333
  br label %2335

2335:                                             ; preds = %2329, %2323
  %2336 = phi i1 [ false, %2323 ], [ %2334, %2329 ]
  %2337 = zext i1 %2336 to i32
  %2338 = sext i32 %2337 to i64
  %2339 = sub nsw i64 %2325, %2338
  %2340 = trunc i64 %2339 to i32
  %2341 = mul i32 %2340, 7
  %2342 = zext i32 %2341 to i64
  store i64 %2342, i64* %45, align 8
  br i1 false, label %3372, label %3346

2343:                                             ; preds = %1830
  br i1 true, label %2344, label %2845

2344:                                             ; preds = %2343
  br i1 true, label %2345, label %2592

2345:                                             ; preds = %2344
  br i1 false, label %2346, label %2478

2346:                                             ; preds = %2345
  %2347 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %2348 = load i64, i64* %2347, align 8
  %2349 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %2350 = load i64, i64* %2349, align 8
  %2351 = icmp slt i64 0, %2350
  br i1 %2351, label %2352, label %2358

2352:                                             ; preds = %2346
  %2353 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %2354 = load i32, i32* %2353, align 8
  %2355 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %2356 = load i32, i32* %2355, align 8
  %2357 = icmp ne i32 %2354, %2356
  br label %2358

2358:                                             ; preds = %2352, %2346
  %2359 = phi i1 [ false, %2346 ], [ %2357, %2352 ]
  %2360 = zext i1 %2359 to i32
  %2361 = sext i32 %2360 to i64
  %2362 = sub nsw i64 %2348, %2361
  %2363 = icmp slt i64 %2362, 0
  br i1 %2363, label %2364, label %2402

2364:                                             ; preds = %2358
  br i1 true, label %2365, label %2383

2365:                                             ; preds = %2364
  %2366 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %2367 = load i64, i64* %2366, align 8
  %2368 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %2369 = load i64, i64* %2368, align 8
  %2370 = icmp slt i64 0, %2369
  br i1 %2370, label %2371, label %2377

2371:                                             ; preds = %2365
  %2372 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %2373 = load i32, i32* %2372, align 8
  %2374 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %2375 = load i32, i32* %2374, align 8
  %2376 = icmp ne i32 %2373, %2375
  br label %2377

2377:                                             ; preds = %2371, %2365
  %2378 = phi i1 [ false, %2365 ], [ %2376, %2371 ]
  %2379 = zext i1 %2378 to i32
  %2380 = sext i32 %2379 to i64
  %2381 = sub nsw i64 %2367, %2380
  %2382 = icmp slt i64 %2381, 1317624576693539401
  br i1 %2382, label %2556, label %2574

2383:                                             ; preds = %2364
  %2384 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %2385 = load i64, i64* %2384, align 8
  %2386 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %2387 = load i64, i64* %2386, align 8
  %2388 = icmp slt i64 0, %2387
  br i1 %2388, label %2389, label %2395

2389:                                             ; preds = %2383
  %2390 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %2391 = load i32, i32* %2390, align 8
  %2392 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %2393 = load i32, i32* %2392, align 8
  %2394 = icmp ne i32 %2391, %2393
  br label %2395

2395:                                             ; preds = %2389, %2383
  %2396 = phi i1 [ false, %2383 ], [ %2394, %2389 ]
  %2397 = zext i1 %2396 to i32
  %2398 = sext i32 %2397 to i64
  %2399 = sub nsw i64 %2385, %2398
  %2400 = sub nsw i64 -1, %2399
  %2401 = icmp sle i64 -1317624576693539401, %2400
  br i1 %2401, label %2556, label %2574

2402:                                             ; preds = %2358
  br i1 false, label %2403, label %2460

2403:                                             ; preds = %2402
  br i1 true, label %2404, label %2423

2404:                                             ; preds = %2403
  %2405 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %2406 = load i64, i64* %2405, align 8
  %2407 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %2408 = load i64, i64* %2407, align 8
  %2409 = icmp slt i64 0, %2408
  br i1 %2409, label %2410, label %2416

2410:                                             ; preds = %2404
  %2411 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %2412 = load i32, i32* %2411, align 8
  %2413 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %2414 = load i32, i32* %2413, align 8
  %2415 = icmp ne i32 %2412, %2414
  br label %2416

2416:                                             ; preds = %2410, %2404
  %2417 = phi i1 [ false, %2404 ], [ %2415, %2410 ]
  %2418 = zext i1 %2417 to i32
  %2419 = sext i32 %2418 to i64
  %2420 = sub nsw i64 %2406, %2419
  %2421 = add nsw i64 %2420, -9223372036854775808
  %2422 = icmp slt i64 0, %2421
  br i1 %2422, label %2556, label %2574

2423:                                             ; preds = %2403
  %2424 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %2425 = load i64, i64* %2424, align 8
  %2426 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %2427 = load i64, i64* %2426, align 8
  %2428 = icmp slt i64 0, %2427
  br i1 %2428, label %2429, label %2435

2429:                                             ; preds = %2423
  %2430 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %2431 = load i32, i32* %2430, align 8
  %2432 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %2433 = load i32, i32* %2432, align 8
  %2434 = icmp ne i32 %2431, %2433
  br label %2435

2435:                                             ; preds = %2429, %2423
  %2436 = phi i1 [ false, %2423 ], [ %2434, %2429 ]
  %2437 = zext i1 %2436 to i32
  %2438 = sext i32 %2437 to i64
  %2439 = sub nsw i64 %2425, %2438
  %2440 = icmp slt i64 0, %2439
  br i1 %2440, label %2441, label %2574

2441:                                             ; preds = %2435
  %2442 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %2443 = load i64, i64* %2442, align 8
  %2444 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %2445 = load i64, i64* %2444, align 8
  %2446 = icmp slt i64 0, %2445
  br i1 %2446, label %2447, label %2453

2447:                                             ; preds = %2441
  %2448 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %2449 = load i32, i32* %2448, align 8
  %2450 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %2451 = load i32, i32* %2450, align 8
  %2452 = icmp ne i32 %2449, %2451
  br label %2453

2453:                                             ; preds = %2447, %2441
  %2454 = phi i1 [ false, %2441 ], [ %2452, %2447 ]
  %2455 = zext i1 %2454 to i32
  %2456 = sext i32 %2455 to i64
  %2457 = sub nsw i64 %2443, %2456
  %2458 = sub nsw i64 %2457, 1
  %2459 = icmp slt i64 9223372036854775807, %2458
  br i1 %2459, label %2556, label %2574

2460:                                             ; preds = %2402
  %2461 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %2462 = load i64, i64* %2461, align 8
  %2463 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %2464 = load i64, i64* %2463, align 8
  %2465 = icmp slt i64 0, %2464
  br i1 %2465, label %2466, label %2472

2466:                                             ; preds = %2460
  %2467 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %2468 = load i32, i32* %2467, align 8
  %2469 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %2470 = load i32, i32* %2469, align 8
  %2471 = icmp ne i32 %2468, %2470
  br label %2472

2472:                                             ; preds = %2466, %2460
  %2473 = phi i1 [ false, %2460 ], [ %2471, %2466 ]
  %2474 = zext i1 %2473 to i32
  %2475 = sext i32 %2474 to i64
  %2476 = sub nsw i64 %2462, %2475
  %2477 = icmp slt i64 -1317624576693539401, %2476
  br i1 %2477, label %2556, label %2574

2478:                                             ; preds = %2345
  br i1 false, label %2479, label %2480

2479:                                             ; preds = %2478
  br i1 false, label %2556, label %2574

2480:                                             ; preds = %2478
  %2481 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %2482 = load i64, i64* %2481, align 8
  %2483 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %2484 = load i64, i64* %2483, align 8
  %2485 = icmp slt i64 0, %2484
  br i1 %2485, label %2486, label %2492

2486:                                             ; preds = %2480
  %2487 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %2488 = load i32, i32* %2487, align 8
  %2489 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %2490 = load i32, i32* %2489, align 8
  %2491 = icmp ne i32 %2488, %2490
  br label %2492

2492:                                             ; preds = %2486, %2480
  %2493 = phi i1 [ false, %2480 ], [ %2491, %2486 ]
  %2494 = zext i1 %2493 to i32
  %2495 = sext i32 %2494 to i64
  %2496 = sub nsw i64 %2482, %2495
  %2497 = icmp slt i64 %2496, 0
  br i1 %2497, label %2498, label %2538

2498:                                             ; preds = %2492
  %2499 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %2500 = load i64, i64* %2499, align 8
  %2501 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %2502 = load i64, i64* %2501, align 8
  %2503 = icmp slt i64 0, %2502
  br i1 %2503, label %2504, label %2510

2504:                                             ; preds = %2498
  %2505 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %2506 = load i32, i32* %2505, align 8
  %2507 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %2508 = load i32, i32* %2507, align 8
  %2509 = icmp ne i32 %2506, %2508
  br label %2510

2510:                                             ; preds = %2504, %2498
  %2511 = phi i1 [ false, %2498 ], [ %2509, %2504 ]
  %2512 = zext i1 %2511 to i32
  %2513 = sext i32 %2512 to i64
  %2514 = sub nsw i64 %2500, %2513
  %2515 = icmp eq i64 %2514, -1
  br i1 %2515, label %2516, label %2519

2516:                                             ; preds = %2510
  br i1 true, label %2517, label %2518

2517:                                             ; preds = %2516
  br i1 false, label %2556, label %2574

2518:                                             ; preds = %2516
  br i1 false, label %2556, label %2574

2519:                                             ; preds = %2510
  %2520 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %2521 = load i64, i64* %2520, align 8
  %2522 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %2523 = load i64, i64* %2522, align 8
  %2524 = icmp slt i64 0, %2523
  br i1 %2524, label %2525, label %2531

2525:                                             ; preds = %2519
  %2526 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %2527 = load i32, i32* %2526, align 8
  %2528 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %2529 = load i32, i32* %2528, align 8
  %2530 = icmp ne i32 %2527, %2529
  br label %2531

2531:                                             ; preds = %2525, %2519
  %2532 = phi i1 [ false, %2519 ], [ %2530, %2525 ]
  %2533 = zext i1 %2532 to i32
  %2534 = sext i32 %2533 to i64
  %2535 = sub nsw i64 %2521, %2534
  %2536 = sdiv i64 -9223372036854775808, %2535
  %2537 = icmp slt i64 %2536, 7
  br i1 %2537, label %2556, label %2574

2538:                                             ; preds = %2492
  %2539 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %2540 = load i64, i64* %2539, align 8
  %2541 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %2542 = load i64, i64* %2541, align 8
  %2543 = icmp slt i64 0, %2542
  br i1 %2543, label %2544, label %2550

2544:                                             ; preds = %2538
  %2545 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %2546 = load i32, i32* %2545, align 8
  %2547 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %2548 = load i32, i32* %2547, align 8
  %2549 = icmp ne i32 %2546, %2548
  br label %2550

2550:                                             ; preds = %2544, %2538
  %2551 = phi i1 [ false, %2538 ], [ %2549, %2544 ]
  %2552 = zext i1 %2551 to i32
  %2553 = sext i32 %2552 to i64
  %2554 = sub nsw i64 %2540, %2553
  %2555 = icmp slt i64 1317624576693539401, %2554
  br i1 %2555, label %2556, label %2574

2556:                                             ; preds = %2550, %2531, %2518, %2517, %2479, %2472, %2453, %2416, %2395, %2377
  %2557 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %2558 = load i64, i64* %2557, align 8
  %2559 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %2560 = load i64, i64* %2559, align 8
  %2561 = icmp slt i64 0, %2560
  br i1 %2561, label %2562, label %2568

2562:                                             ; preds = %2556
  %2563 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %2564 = load i32, i32* %2563, align 8
  %2565 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %2566 = load i32, i32* %2565, align 8
  %2567 = icmp ne i32 %2564, %2566
  br label %2568

2568:                                             ; preds = %2562, %2556
  %2569 = phi i1 [ false, %2556 ], [ %2567, %2562 ]
  %2570 = zext i1 %2569 to i32
  %2571 = sext i32 %2570 to i64
  %2572 = sub nsw i64 %2558, %2571
  %2573 = mul i64 %2572, 7
  store i64 %2573, i64* %45, align 8
  br i1 true, label %3372, label %3346

2574:                                             ; preds = %2550, %2531, %2518, %2517, %2479, %2472, %2453, %2435, %2416, %2395, %2377
  %2575 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %2576 = load i64, i64* %2575, align 8
  %2577 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %2578 = load i64, i64* %2577, align 8
  %2579 = icmp slt i64 0, %2578
  br i1 %2579, label %2580, label %2586

2580:                                             ; preds = %2574
  %2581 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %2582 = load i32, i32* %2581, align 8
  %2583 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %2584 = load i32, i32* %2583, align 8
  %2585 = icmp ne i32 %2582, %2584
  br label %2586

2586:                                             ; preds = %2580, %2574
  %2587 = phi i1 [ false, %2574 ], [ %2585, %2580 ]
  %2588 = zext i1 %2587 to i32
  %2589 = sext i32 %2588 to i64
  %2590 = sub nsw i64 %2576, %2589
  %2591 = mul i64 %2590, 7
  store i64 %2591, i64* %45, align 8
  br i1 false, label %3372, label %3346

2592:                                             ; preds = %2344
  br i1 false, label %2593, label %2728

2593:                                             ; preds = %2592
  %2594 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %2595 = load i64, i64* %2594, align 8
  %2596 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %2597 = load i64, i64* %2596, align 8
  %2598 = icmp slt i64 0, %2597
  br i1 %2598, label %2599, label %2605

2599:                                             ; preds = %2593
  %2600 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %2601 = load i32, i32* %2600, align 8
  %2602 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %2603 = load i32, i32* %2602, align 8
  %2604 = icmp ne i32 %2601, %2603
  br label %2605

2605:                                             ; preds = %2599, %2593
  %2606 = phi i1 [ false, %2593 ], [ %2604, %2599 ]
  %2607 = zext i1 %2606 to i32
  %2608 = sext i32 %2607 to i64
  %2609 = sub nsw i64 %2595, %2608
  %2610 = icmp slt i64 %2609, 0
  br i1 %2610, label %2611, label %2649

2611:                                             ; preds = %2605
  br i1 false, label %2612, label %2630

2612:                                             ; preds = %2611
  %2613 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %2614 = load i64, i64* %2613, align 8
  %2615 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %2616 = load i64, i64* %2615, align 8
  %2617 = icmp slt i64 0, %2616
  br i1 %2617, label %2618, label %2624

2618:                                             ; preds = %2612
  %2619 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %2620 = load i32, i32* %2619, align 8
  %2621 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %2622 = load i32, i32* %2621, align 8
  %2623 = icmp ne i32 %2620, %2622
  br label %2624

2624:                                             ; preds = %2618, %2612
  %2625 = phi i1 [ false, %2612 ], [ %2623, %2618 ]
  %2626 = zext i1 %2625 to i32
  %2627 = sext i32 %2626 to i64
  %2628 = sub nsw i64 %2614, %2627
  %2629 = icmp ult i64 %2628, 2635249153387078802
  br i1 %2629, label %2809, label %2827

2630:                                             ; preds = %2611
  %2631 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %2632 = load i64, i64* %2631, align 8
  %2633 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %2634 = load i64, i64* %2633, align 8
  %2635 = icmp slt i64 0, %2634
  br i1 %2635, label %2636, label %2642

2636:                                             ; preds = %2630
  %2637 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %2638 = load i32, i32* %2637, align 8
  %2639 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %2640 = load i32, i32* %2639, align 8
  %2641 = icmp ne i32 %2638, %2640
  br label %2642

2642:                                             ; preds = %2636, %2630
  %2643 = phi i1 [ false, %2630 ], [ %2641, %2636 ]
  %2644 = zext i1 %2643 to i32
  %2645 = sext i32 %2644 to i64
  %2646 = sub nsw i64 %2632, %2645
  %2647 = sub nsw i64 -1, %2646
  %2648 = icmp ule i64 1, %2647
  br i1 %2648, label %2809, label %2827

2649:                                             ; preds = %2605
  br i1 true, label %2650, label %2651

2650:                                             ; preds = %2649
  br i1 false, label %2652, label %2710

2651:                                             ; preds = %2649
  br i1 false, label %2652, label %2710

2652:                                             ; preds = %2651, %2650
  br i1 false, label %2653, label %2710

2653:                                             ; preds = %2652
  br i1 true, label %2654, label %2673

2654:                                             ; preds = %2653
  %2655 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %2656 = load i64, i64* %2655, align 8
  %2657 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %2658 = load i64, i64* %2657, align 8
  %2659 = icmp slt i64 0, %2658
  br i1 %2659, label %2660, label %2666

2660:                                             ; preds = %2654
  %2661 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %2662 = load i32, i32* %2661, align 8
  %2663 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %2664 = load i32, i32* %2663, align 8
  %2665 = icmp ne i32 %2662, %2664
  br label %2666

2666:                                             ; preds = %2660, %2654
  %2667 = phi i1 [ false, %2654 ], [ %2665, %2660 ]
  %2668 = zext i1 %2667 to i32
  %2669 = sext i32 %2668 to i64
  %2670 = sub nsw i64 %2656, %2669
  %2671 = add nsw i64 %2670, 0
  %2672 = icmp slt i64 0, %2671
  br i1 %2672, label %2809, label %2827

2673:                                             ; preds = %2653
  %2674 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %2675 = load i64, i64* %2674, align 8
  %2676 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %2677 = load i64, i64* %2676, align 8
  %2678 = icmp slt i64 0, %2677
  br i1 %2678, label %2679, label %2685

2679:                                             ; preds = %2673
  %2680 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %2681 = load i32, i32* %2680, align 8
  %2682 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %2683 = load i32, i32* %2682, align 8
  %2684 = icmp ne i32 %2681, %2683
  br label %2685

2685:                                             ; preds = %2679, %2673
  %2686 = phi i1 [ false, %2673 ], [ %2684, %2679 ]
  %2687 = zext i1 %2686 to i32
  %2688 = sext i32 %2687 to i64
  %2689 = sub nsw i64 %2675, %2688
  %2690 = icmp slt i64 0, %2689
  br i1 %2690, label %2691, label %2827

2691:                                             ; preds = %2685
  %2692 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %2693 = load i64, i64* %2692, align 8
  %2694 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %2695 = load i64, i64* %2694, align 8
  %2696 = icmp slt i64 0, %2695
  br i1 %2696, label %2697, label %2703

2697:                                             ; preds = %2691
  %2698 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %2699 = load i32, i32* %2698, align 8
  %2700 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %2701 = load i32, i32* %2700, align 8
  %2702 = icmp ne i32 %2699, %2701
  br label %2703

2703:                                             ; preds = %2697, %2691
  %2704 = phi i1 [ false, %2691 ], [ %2702, %2697 ]
  %2705 = zext i1 %2704 to i32
  %2706 = sext i32 %2705 to i64
  %2707 = sub nsw i64 %2693, %2706
  %2708 = sub nsw i64 %2707, 1
  %2709 = icmp slt i64 -1, %2708
  br i1 %2709, label %2809, label %2827

2710:                                             ; preds = %2652, %2651, %2650
  %2711 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %2712 = load i64, i64* %2711, align 8
  %2713 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %2714 = load i64, i64* %2713, align 8
  %2715 = icmp slt i64 0, %2714
  br i1 %2715, label %2716, label %2722

2716:                                             ; preds = %2710
  %2717 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %2718 = load i32, i32* %2717, align 8
  %2719 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %2720 = load i32, i32* %2719, align 8
  %2721 = icmp ne i32 %2718, %2720
  br label %2722

2722:                                             ; preds = %2716, %2710
  %2723 = phi i1 [ false, %2710 ], [ %2721, %2716 ]
  %2724 = zext i1 %2723 to i32
  %2725 = sext i32 %2724 to i64
  %2726 = sub nsw i64 %2712, %2725
  %2727 = icmp slt i64 0, %2726
  br i1 %2727, label %2809, label %2827

2728:                                             ; preds = %2592
  br i1 false, label %2729, label %2730

2729:                                             ; preds = %2728
  br i1 false, label %2809, label %2827

2730:                                             ; preds = %2728
  %2731 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %2732 = load i64, i64* %2731, align 8
  %2733 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %2734 = load i64, i64* %2733, align 8
  %2735 = icmp slt i64 0, %2734
  br i1 %2735, label %2736, label %2742

2736:                                             ; preds = %2730
  %2737 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %2738 = load i32, i32* %2737, align 8
  %2739 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %2740 = load i32, i32* %2739, align 8
  %2741 = icmp ne i32 %2738, %2740
  br label %2742

2742:                                             ; preds = %2736, %2730
  %2743 = phi i1 [ false, %2730 ], [ %2741, %2736 ]
  %2744 = zext i1 %2743 to i32
  %2745 = sext i32 %2744 to i64
  %2746 = sub nsw i64 %2732, %2745
  %2747 = icmp slt i64 %2746, 0
  br i1 %2747, label %2748, label %2791

2748:                                             ; preds = %2742
  br i1 true, label %2749, label %2750

2749:                                             ; preds = %2748
  br i1 false, label %2751, label %2772

2750:                                             ; preds = %2748
  br i1 false, label %2751, label %2772

2751:                                             ; preds = %2750, %2749
  %2752 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %2753 = load i64, i64* %2752, align 8
  %2754 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %2755 = load i64, i64* %2754, align 8
  %2756 = icmp slt i64 0, %2755
  br i1 %2756, label %2757, label %2763

2757:                                             ; preds = %2751
  %2758 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %2759 = load i32, i32* %2758, align 8
  %2760 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %2761 = load i32, i32* %2760, align 8
  %2762 = icmp ne i32 %2759, %2761
  br label %2763

2763:                                             ; preds = %2757, %2751
  %2764 = phi i1 [ false, %2751 ], [ %2762, %2757 ]
  %2765 = zext i1 %2764 to i32
  %2766 = sext i32 %2765 to i64
  %2767 = sub nsw i64 %2753, %2766
  %2768 = icmp eq i64 %2767, -1
  br i1 %2768, label %2769, label %2772

2769:                                             ; preds = %2763
  br i1 true, label %2770, label %2771

2770:                                             ; preds = %2769
  br i1 true, label %2809, label %2827

2771:                                             ; preds = %2769
  br i1 true, label %2809, label %2827

2772:                                             ; preds = %2763, %2750, %2749
  %2773 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %2774 = load i64, i64* %2773, align 8
  %2775 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %2776 = load i64, i64* %2775, align 8
  %2777 = icmp slt i64 0, %2776
  br i1 %2777, label %2778, label %2784

2778:                                             ; preds = %2772
  %2779 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %2780 = load i32, i32* %2779, align 8
  %2781 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %2782 = load i32, i32* %2781, align 8
  %2783 = icmp ne i32 %2780, %2782
  br label %2784

2784:                                             ; preds = %2778, %2772
  %2785 = phi i1 [ false, %2772 ], [ %2783, %2778 ]
  %2786 = zext i1 %2785 to i32
  %2787 = sext i32 %2786 to i64
  %2788 = sub nsw i64 %2774, %2787
  %2789 = sdiv i64 0, %2788
  %2790 = icmp slt i64 %2789, 7
  br i1 %2790, label %2809, label %2827

2791:                                             ; preds = %2742
  %2792 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %2793 = load i64, i64* %2792, align 8
  %2794 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %2795 = load i64, i64* %2794, align 8
  %2796 = icmp slt i64 0, %2795
  br i1 %2796, label %2797, label %2803

2797:                                             ; preds = %2791
  %2798 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %2799 = load i32, i32* %2798, align 8
  %2800 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %2801 = load i32, i32* %2800, align 8
  %2802 = icmp ne i32 %2799, %2801
  br label %2803

2803:                                             ; preds = %2797, %2791
  %2804 = phi i1 [ false, %2791 ], [ %2802, %2797 ]
  %2805 = zext i1 %2804 to i32
  %2806 = sext i32 %2805 to i64
  %2807 = sub nsw i64 %2793, %2806
  %2808 = icmp ult i64 2635249153387078802, %2807
  br i1 %2808, label %2809, label %2827

2809:                                             ; preds = %2803, %2784, %2771, %2770, %2729, %2722, %2703, %2666, %2642, %2624
  %2810 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %2811 = load i64, i64* %2810, align 8
  %2812 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %2813 = load i64, i64* %2812, align 8
  %2814 = icmp slt i64 0, %2813
  br i1 %2814, label %2815, label %2821

2815:                                             ; preds = %2809
  %2816 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %2817 = load i32, i32* %2816, align 8
  %2818 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %2819 = load i32, i32* %2818, align 8
  %2820 = icmp ne i32 %2817, %2819
  br label %2821

2821:                                             ; preds = %2815, %2809
  %2822 = phi i1 [ false, %2809 ], [ %2820, %2815 ]
  %2823 = zext i1 %2822 to i32
  %2824 = sext i32 %2823 to i64
  %2825 = sub nsw i64 %2811, %2824
  %2826 = mul i64 %2825, 7
  store i64 %2826, i64* %45, align 8
  br i1 true, label %3372, label %3346

2827:                                             ; preds = %2803, %2784, %2771, %2770, %2729, %2722, %2703, %2685, %2666, %2642, %2624
  %2828 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %2829 = load i64, i64* %2828, align 8
  %2830 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %2831 = load i64, i64* %2830, align 8
  %2832 = icmp slt i64 0, %2831
  br i1 %2832, label %2833, label %2839

2833:                                             ; preds = %2827
  %2834 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %2835 = load i32, i32* %2834, align 8
  %2836 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %2837 = load i32, i32* %2836, align 8
  %2838 = icmp ne i32 %2835, %2837
  br label %2839

2839:                                             ; preds = %2833, %2827
  %2840 = phi i1 [ false, %2827 ], [ %2838, %2833 ]
  %2841 = zext i1 %2840 to i32
  %2842 = sext i32 %2841 to i64
  %2843 = sub nsw i64 %2829, %2842
  %2844 = mul i64 %2843, 7
  store i64 %2844, i64* %45, align 8
  br i1 false, label %3372, label %3346

2845:                                             ; preds = %2343
  br i1 true, label %2846, label %3093

2846:                                             ; preds = %2845
  br i1 false, label %2847, label %2979

2847:                                             ; preds = %2846
  %2848 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %2849 = load i64, i64* %2848, align 8
  %2850 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %2851 = load i64, i64* %2850, align 8
  %2852 = icmp slt i64 0, %2851
  br i1 %2852, label %2853, label %2859

2853:                                             ; preds = %2847
  %2854 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %2855 = load i32, i32* %2854, align 8
  %2856 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %2857 = load i32, i32* %2856, align 8
  %2858 = icmp ne i32 %2855, %2857
  br label %2859

2859:                                             ; preds = %2853, %2847
  %2860 = phi i1 [ false, %2847 ], [ %2858, %2853 ]
  %2861 = zext i1 %2860 to i32
  %2862 = sext i32 %2861 to i64
  %2863 = sub nsw i64 %2849, %2862
  %2864 = icmp slt i64 %2863, 0
  br i1 %2864, label %2865, label %2903

2865:                                             ; preds = %2859
  br i1 true, label %2866, label %2884

2866:                                             ; preds = %2865
  %2867 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %2868 = load i64, i64* %2867, align 8
  %2869 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %2870 = load i64, i64* %2869, align 8
  %2871 = icmp slt i64 0, %2870
  br i1 %2871, label %2872, label %2878

2872:                                             ; preds = %2866
  %2873 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %2874 = load i32, i32* %2873, align 8
  %2875 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %2876 = load i32, i32* %2875, align 8
  %2877 = icmp ne i32 %2874, %2876
  br label %2878

2878:                                             ; preds = %2872, %2866
  %2879 = phi i1 [ false, %2866 ], [ %2877, %2872 ]
  %2880 = zext i1 %2879 to i32
  %2881 = sext i32 %2880 to i64
  %2882 = sub nsw i64 %2868, %2881
  %2883 = icmp slt i64 %2882, 1317624576693539401
  br i1 %2883, label %3057, label %3075

2884:                                             ; preds = %2865
  %2885 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %2886 = load i64, i64* %2885, align 8
  %2887 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %2888 = load i64, i64* %2887, align 8
  %2889 = icmp slt i64 0, %2888
  br i1 %2889, label %2890, label %2896

2890:                                             ; preds = %2884
  %2891 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %2892 = load i32, i32* %2891, align 8
  %2893 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %2894 = load i32, i32* %2893, align 8
  %2895 = icmp ne i32 %2892, %2894
  br label %2896

2896:                                             ; preds = %2890, %2884
  %2897 = phi i1 [ false, %2884 ], [ %2895, %2890 ]
  %2898 = zext i1 %2897 to i32
  %2899 = sext i32 %2898 to i64
  %2900 = sub nsw i64 %2886, %2899
  %2901 = sub nsw i64 -1, %2900
  %2902 = icmp sle i64 -1317624576693539401, %2901
  br i1 %2902, label %3057, label %3075

2903:                                             ; preds = %2859
  br i1 false, label %2904, label %2961

2904:                                             ; preds = %2903
  br i1 true, label %2905, label %2924

2905:                                             ; preds = %2904
  %2906 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %2907 = load i64, i64* %2906, align 8
  %2908 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %2909 = load i64, i64* %2908, align 8
  %2910 = icmp slt i64 0, %2909
  br i1 %2910, label %2911, label %2917

2911:                                             ; preds = %2905
  %2912 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %2913 = load i32, i32* %2912, align 8
  %2914 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %2915 = load i32, i32* %2914, align 8
  %2916 = icmp ne i32 %2913, %2915
  br label %2917

2917:                                             ; preds = %2911, %2905
  %2918 = phi i1 [ false, %2905 ], [ %2916, %2911 ]
  %2919 = zext i1 %2918 to i32
  %2920 = sext i32 %2919 to i64
  %2921 = sub nsw i64 %2907, %2920
  %2922 = add nsw i64 %2921, -9223372036854775808
  %2923 = icmp slt i64 0, %2922
  br i1 %2923, label %3057, label %3075

2924:                                             ; preds = %2904
  %2925 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %2926 = load i64, i64* %2925, align 8
  %2927 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %2928 = load i64, i64* %2927, align 8
  %2929 = icmp slt i64 0, %2928
  br i1 %2929, label %2930, label %2936

2930:                                             ; preds = %2924
  %2931 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %2932 = load i32, i32* %2931, align 8
  %2933 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %2934 = load i32, i32* %2933, align 8
  %2935 = icmp ne i32 %2932, %2934
  br label %2936

2936:                                             ; preds = %2930, %2924
  %2937 = phi i1 [ false, %2924 ], [ %2935, %2930 ]
  %2938 = zext i1 %2937 to i32
  %2939 = sext i32 %2938 to i64
  %2940 = sub nsw i64 %2926, %2939
  %2941 = icmp slt i64 0, %2940
  br i1 %2941, label %2942, label %3075

2942:                                             ; preds = %2936
  %2943 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %2944 = load i64, i64* %2943, align 8
  %2945 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %2946 = load i64, i64* %2945, align 8
  %2947 = icmp slt i64 0, %2946
  br i1 %2947, label %2948, label %2954

2948:                                             ; preds = %2942
  %2949 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %2950 = load i32, i32* %2949, align 8
  %2951 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %2952 = load i32, i32* %2951, align 8
  %2953 = icmp ne i32 %2950, %2952
  br label %2954

2954:                                             ; preds = %2948, %2942
  %2955 = phi i1 [ false, %2942 ], [ %2953, %2948 ]
  %2956 = zext i1 %2955 to i32
  %2957 = sext i32 %2956 to i64
  %2958 = sub nsw i64 %2944, %2957
  %2959 = sub nsw i64 %2958, 1
  %2960 = icmp slt i64 9223372036854775807, %2959
  br i1 %2960, label %3057, label %3075

2961:                                             ; preds = %2903
  %2962 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %2963 = load i64, i64* %2962, align 8
  %2964 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %2965 = load i64, i64* %2964, align 8
  %2966 = icmp slt i64 0, %2965
  br i1 %2966, label %2967, label %2973

2967:                                             ; preds = %2961
  %2968 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %2969 = load i32, i32* %2968, align 8
  %2970 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %2971 = load i32, i32* %2970, align 8
  %2972 = icmp ne i32 %2969, %2971
  br label %2973

2973:                                             ; preds = %2967, %2961
  %2974 = phi i1 [ false, %2961 ], [ %2972, %2967 ]
  %2975 = zext i1 %2974 to i32
  %2976 = sext i32 %2975 to i64
  %2977 = sub nsw i64 %2963, %2976
  %2978 = icmp slt i64 -1317624576693539401, %2977
  br i1 %2978, label %3057, label %3075

2979:                                             ; preds = %2846
  br i1 false, label %2980, label %2981

2980:                                             ; preds = %2979
  br i1 false, label %3057, label %3075

2981:                                             ; preds = %2979
  %2982 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %2983 = load i64, i64* %2982, align 8
  %2984 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %2985 = load i64, i64* %2984, align 8
  %2986 = icmp slt i64 0, %2985
  br i1 %2986, label %2987, label %2993

2987:                                             ; preds = %2981
  %2988 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %2989 = load i32, i32* %2988, align 8
  %2990 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %2991 = load i32, i32* %2990, align 8
  %2992 = icmp ne i32 %2989, %2991
  br label %2993

2993:                                             ; preds = %2987, %2981
  %2994 = phi i1 [ false, %2981 ], [ %2992, %2987 ]
  %2995 = zext i1 %2994 to i32
  %2996 = sext i32 %2995 to i64
  %2997 = sub nsw i64 %2983, %2996
  %2998 = icmp slt i64 %2997, 0
  br i1 %2998, label %2999, label %3039

2999:                                             ; preds = %2993
  %3000 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %3001 = load i64, i64* %3000, align 8
  %3002 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %3003 = load i64, i64* %3002, align 8
  %3004 = icmp slt i64 0, %3003
  br i1 %3004, label %3005, label %3011

3005:                                             ; preds = %2999
  %3006 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %3007 = load i32, i32* %3006, align 8
  %3008 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %3009 = load i32, i32* %3008, align 8
  %3010 = icmp ne i32 %3007, %3009
  br label %3011

3011:                                             ; preds = %3005, %2999
  %3012 = phi i1 [ false, %2999 ], [ %3010, %3005 ]
  %3013 = zext i1 %3012 to i32
  %3014 = sext i32 %3013 to i64
  %3015 = sub nsw i64 %3001, %3014
  %3016 = icmp eq i64 %3015, -1
  br i1 %3016, label %3017, label %3020

3017:                                             ; preds = %3011
  br i1 true, label %3018, label %3019

3018:                                             ; preds = %3017
  br i1 false, label %3057, label %3075

3019:                                             ; preds = %3017
  br i1 false, label %3057, label %3075

3020:                                             ; preds = %3011
  %3021 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %3022 = load i64, i64* %3021, align 8
  %3023 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %3024 = load i64, i64* %3023, align 8
  %3025 = icmp slt i64 0, %3024
  br i1 %3025, label %3026, label %3032

3026:                                             ; preds = %3020
  %3027 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %3028 = load i32, i32* %3027, align 8
  %3029 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %3030 = load i32, i32* %3029, align 8
  %3031 = icmp ne i32 %3028, %3030
  br label %3032

3032:                                             ; preds = %3026, %3020
  %3033 = phi i1 [ false, %3020 ], [ %3031, %3026 ]
  %3034 = zext i1 %3033 to i32
  %3035 = sext i32 %3034 to i64
  %3036 = sub nsw i64 %3022, %3035
  %3037 = sdiv i64 -9223372036854775808, %3036
  %3038 = icmp slt i64 %3037, 7
  br i1 %3038, label %3057, label %3075

3039:                                             ; preds = %2993
  %3040 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %3041 = load i64, i64* %3040, align 8
  %3042 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %3043 = load i64, i64* %3042, align 8
  %3044 = icmp slt i64 0, %3043
  br i1 %3044, label %3045, label %3051

3045:                                             ; preds = %3039
  %3046 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %3047 = load i32, i32* %3046, align 8
  %3048 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %3049 = load i32, i32* %3048, align 8
  %3050 = icmp ne i32 %3047, %3049
  br label %3051

3051:                                             ; preds = %3045, %3039
  %3052 = phi i1 [ false, %3039 ], [ %3050, %3045 ]
  %3053 = zext i1 %3052 to i32
  %3054 = sext i32 %3053 to i64
  %3055 = sub nsw i64 %3041, %3054
  %3056 = icmp slt i64 1317624576693539401, %3055
  br i1 %3056, label %3057, label %3075

3057:                                             ; preds = %3051, %3032, %3019, %3018, %2980, %2973, %2954, %2917, %2896, %2878
  %3058 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %3059 = load i64, i64* %3058, align 8
  %3060 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %3061 = load i64, i64* %3060, align 8
  %3062 = icmp slt i64 0, %3061
  br i1 %3062, label %3063, label %3069

3063:                                             ; preds = %3057
  %3064 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %3065 = load i32, i32* %3064, align 8
  %3066 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %3067 = load i32, i32* %3066, align 8
  %3068 = icmp ne i32 %3065, %3067
  br label %3069

3069:                                             ; preds = %3063, %3057
  %3070 = phi i1 [ false, %3057 ], [ %3068, %3063 ]
  %3071 = zext i1 %3070 to i32
  %3072 = sext i32 %3071 to i64
  %3073 = sub nsw i64 %3059, %3072
  %3074 = mul i64 %3073, 7
  store i64 %3074, i64* %45, align 8
  br i1 true, label %3372, label %3346

3075:                                             ; preds = %3051, %3032, %3019, %3018, %2980, %2973, %2954, %2936, %2917, %2896, %2878
  %3076 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %3077 = load i64, i64* %3076, align 8
  %3078 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %3079 = load i64, i64* %3078, align 8
  %3080 = icmp slt i64 0, %3079
  br i1 %3080, label %3081, label %3087

3081:                                             ; preds = %3075
  %3082 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %3083 = load i32, i32* %3082, align 8
  %3084 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %3085 = load i32, i32* %3084, align 8
  %3086 = icmp ne i32 %3083, %3085
  br label %3087

3087:                                             ; preds = %3081, %3075
  %3088 = phi i1 [ false, %3075 ], [ %3086, %3081 ]
  %3089 = zext i1 %3088 to i32
  %3090 = sext i32 %3089 to i64
  %3091 = sub nsw i64 %3077, %3090
  %3092 = mul i64 %3091, 7
  store i64 %3092, i64* %45, align 8
  br i1 false, label %3372, label %3346

3093:                                             ; preds = %2845
  br i1 false, label %3094, label %3229

3094:                                             ; preds = %3093
  %3095 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %3096 = load i64, i64* %3095, align 8
  %3097 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %3098 = load i64, i64* %3097, align 8
  %3099 = icmp slt i64 0, %3098
  br i1 %3099, label %3100, label %3106

3100:                                             ; preds = %3094
  %3101 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %3102 = load i32, i32* %3101, align 8
  %3103 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %3104 = load i32, i32* %3103, align 8
  %3105 = icmp ne i32 %3102, %3104
  br label %3106

3106:                                             ; preds = %3100, %3094
  %3107 = phi i1 [ false, %3094 ], [ %3105, %3100 ]
  %3108 = zext i1 %3107 to i32
  %3109 = sext i32 %3108 to i64
  %3110 = sub nsw i64 %3096, %3109
  %3111 = icmp slt i64 %3110, 0
  br i1 %3111, label %3112, label %3150

3112:                                             ; preds = %3106
  br i1 false, label %3113, label %3131

3113:                                             ; preds = %3112
  %3114 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %3115 = load i64, i64* %3114, align 8
  %3116 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %3117 = load i64, i64* %3116, align 8
  %3118 = icmp slt i64 0, %3117
  br i1 %3118, label %3119, label %3125

3119:                                             ; preds = %3113
  %3120 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %3121 = load i32, i32* %3120, align 8
  %3122 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %3123 = load i32, i32* %3122, align 8
  %3124 = icmp ne i32 %3121, %3123
  br label %3125

3125:                                             ; preds = %3119, %3113
  %3126 = phi i1 [ false, %3113 ], [ %3124, %3119 ]
  %3127 = zext i1 %3126 to i32
  %3128 = sext i32 %3127 to i64
  %3129 = sub nsw i64 %3115, %3128
  %3130 = icmp ult i64 %3129, 2635249153387078802
  br i1 %3130, label %3310, label %3328

3131:                                             ; preds = %3112
  %3132 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %3133 = load i64, i64* %3132, align 8
  %3134 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %3135 = load i64, i64* %3134, align 8
  %3136 = icmp slt i64 0, %3135
  br i1 %3136, label %3137, label %3143

3137:                                             ; preds = %3131
  %3138 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %3139 = load i32, i32* %3138, align 8
  %3140 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %3141 = load i32, i32* %3140, align 8
  %3142 = icmp ne i32 %3139, %3141
  br label %3143

3143:                                             ; preds = %3137, %3131
  %3144 = phi i1 [ false, %3131 ], [ %3142, %3137 ]
  %3145 = zext i1 %3144 to i32
  %3146 = sext i32 %3145 to i64
  %3147 = sub nsw i64 %3133, %3146
  %3148 = sub nsw i64 -1, %3147
  %3149 = icmp ule i64 1, %3148
  br i1 %3149, label %3310, label %3328

3150:                                             ; preds = %3106
  br i1 true, label %3151, label %3152

3151:                                             ; preds = %3150
  br i1 false, label %3153, label %3211

3152:                                             ; preds = %3150
  br i1 false, label %3153, label %3211

3153:                                             ; preds = %3152, %3151
  br i1 false, label %3154, label %3211

3154:                                             ; preds = %3153
  br i1 true, label %3155, label %3174

3155:                                             ; preds = %3154
  %3156 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %3157 = load i64, i64* %3156, align 8
  %3158 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %3159 = load i64, i64* %3158, align 8
  %3160 = icmp slt i64 0, %3159
  br i1 %3160, label %3161, label %3167

3161:                                             ; preds = %3155
  %3162 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %3163 = load i32, i32* %3162, align 8
  %3164 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %3165 = load i32, i32* %3164, align 8
  %3166 = icmp ne i32 %3163, %3165
  br label %3167

3167:                                             ; preds = %3161, %3155
  %3168 = phi i1 [ false, %3155 ], [ %3166, %3161 ]
  %3169 = zext i1 %3168 to i32
  %3170 = sext i32 %3169 to i64
  %3171 = sub nsw i64 %3157, %3170
  %3172 = add nsw i64 %3171, 0
  %3173 = icmp slt i64 0, %3172
  br i1 %3173, label %3310, label %3328

3174:                                             ; preds = %3154
  %3175 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %3176 = load i64, i64* %3175, align 8
  %3177 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %3178 = load i64, i64* %3177, align 8
  %3179 = icmp slt i64 0, %3178
  br i1 %3179, label %3180, label %3186

3180:                                             ; preds = %3174
  %3181 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %3182 = load i32, i32* %3181, align 8
  %3183 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %3184 = load i32, i32* %3183, align 8
  %3185 = icmp ne i32 %3182, %3184
  br label %3186

3186:                                             ; preds = %3180, %3174
  %3187 = phi i1 [ false, %3174 ], [ %3185, %3180 ]
  %3188 = zext i1 %3187 to i32
  %3189 = sext i32 %3188 to i64
  %3190 = sub nsw i64 %3176, %3189
  %3191 = icmp slt i64 0, %3190
  br i1 %3191, label %3192, label %3328

3192:                                             ; preds = %3186
  %3193 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %3194 = load i64, i64* %3193, align 8
  %3195 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %3196 = load i64, i64* %3195, align 8
  %3197 = icmp slt i64 0, %3196
  br i1 %3197, label %3198, label %3204

3198:                                             ; preds = %3192
  %3199 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %3200 = load i32, i32* %3199, align 8
  %3201 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %3202 = load i32, i32* %3201, align 8
  %3203 = icmp ne i32 %3200, %3202
  br label %3204

3204:                                             ; preds = %3198, %3192
  %3205 = phi i1 [ false, %3192 ], [ %3203, %3198 ]
  %3206 = zext i1 %3205 to i32
  %3207 = sext i32 %3206 to i64
  %3208 = sub nsw i64 %3194, %3207
  %3209 = sub nsw i64 %3208, 1
  %3210 = icmp slt i64 -1, %3209
  br i1 %3210, label %3310, label %3328

3211:                                             ; preds = %3153, %3152, %3151
  %3212 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %3213 = load i64, i64* %3212, align 8
  %3214 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %3215 = load i64, i64* %3214, align 8
  %3216 = icmp slt i64 0, %3215
  br i1 %3216, label %3217, label %3223

3217:                                             ; preds = %3211
  %3218 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %3219 = load i32, i32* %3218, align 8
  %3220 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %3221 = load i32, i32* %3220, align 8
  %3222 = icmp ne i32 %3219, %3221
  br label %3223

3223:                                             ; preds = %3217, %3211
  %3224 = phi i1 [ false, %3211 ], [ %3222, %3217 ]
  %3225 = zext i1 %3224 to i32
  %3226 = sext i32 %3225 to i64
  %3227 = sub nsw i64 %3213, %3226
  %3228 = icmp slt i64 0, %3227
  br i1 %3228, label %3310, label %3328

3229:                                             ; preds = %3093
  br i1 false, label %3230, label %3231

3230:                                             ; preds = %3229
  br i1 false, label %3310, label %3328

3231:                                             ; preds = %3229
  %3232 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %3233 = load i64, i64* %3232, align 8
  %3234 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %3235 = load i64, i64* %3234, align 8
  %3236 = icmp slt i64 0, %3235
  br i1 %3236, label %3237, label %3243

3237:                                             ; preds = %3231
  %3238 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %3239 = load i32, i32* %3238, align 8
  %3240 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %3241 = load i32, i32* %3240, align 8
  %3242 = icmp ne i32 %3239, %3241
  br label %3243

3243:                                             ; preds = %3237, %3231
  %3244 = phi i1 [ false, %3231 ], [ %3242, %3237 ]
  %3245 = zext i1 %3244 to i32
  %3246 = sext i32 %3245 to i64
  %3247 = sub nsw i64 %3233, %3246
  %3248 = icmp slt i64 %3247, 0
  br i1 %3248, label %3249, label %3292

3249:                                             ; preds = %3243
  br i1 true, label %3250, label %3251

3250:                                             ; preds = %3249
  br i1 false, label %3252, label %3273

3251:                                             ; preds = %3249
  br i1 false, label %3252, label %3273

3252:                                             ; preds = %3251, %3250
  %3253 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %3254 = load i64, i64* %3253, align 8
  %3255 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %3256 = load i64, i64* %3255, align 8
  %3257 = icmp slt i64 0, %3256
  br i1 %3257, label %3258, label %3264

3258:                                             ; preds = %3252
  %3259 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %3260 = load i32, i32* %3259, align 8
  %3261 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %3262 = load i32, i32* %3261, align 8
  %3263 = icmp ne i32 %3260, %3262
  br label %3264

3264:                                             ; preds = %3258, %3252
  %3265 = phi i1 [ false, %3252 ], [ %3263, %3258 ]
  %3266 = zext i1 %3265 to i32
  %3267 = sext i32 %3266 to i64
  %3268 = sub nsw i64 %3254, %3267
  %3269 = icmp eq i64 %3268, -1
  br i1 %3269, label %3270, label %3273

3270:                                             ; preds = %3264
  br i1 true, label %3271, label %3272

3271:                                             ; preds = %3270
  br i1 true, label %3310, label %3328

3272:                                             ; preds = %3270
  br i1 true, label %3310, label %3328

3273:                                             ; preds = %3264, %3251, %3250
  %3274 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %3275 = load i64, i64* %3274, align 8
  %3276 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %3277 = load i64, i64* %3276, align 8
  %3278 = icmp slt i64 0, %3277
  br i1 %3278, label %3279, label %3285

3279:                                             ; preds = %3273
  %3280 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %3281 = load i32, i32* %3280, align 8
  %3282 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %3283 = load i32, i32* %3282, align 8
  %3284 = icmp ne i32 %3281, %3283
  br label %3285

3285:                                             ; preds = %3279, %3273
  %3286 = phi i1 [ false, %3273 ], [ %3284, %3279 ]
  %3287 = zext i1 %3286 to i32
  %3288 = sext i32 %3287 to i64
  %3289 = sub nsw i64 %3275, %3288
  %3290 = sdiv i64 0, %3289
  %3291 = icmp slt i64 %3290, 7
  br i1 %3291, label %3310, label %3328

3292:                                             ; preds = %3243
  %3293 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %3294 = load i64, i64* %3293, align 8
  %3295 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %3296 = load i64, i64* %3295, align 8
  %3297 = icmp slt i64 0, %3296
  br i1 %3297, label %3298, label %3304

3298:                                             ; preds = %3292
  %3299 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %3300 = load i32, i32* %3299, align 8
  %3301 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %3302 = load i32, i32* %3301, align 8
  %3303 = icmp ne i32 %3300, %3302
  br label %3304

3304:                                             ; preds = %3298, %3292
  %3305 = phi i1 [ false, %3292 ], [ %3303, %3298 ]
  %3306 = zext i1 %3305 to i32
  %3307 = sext i32 %3306 to i64
  %3308 = sub nsw i64 %3294, %3307
  %3309 = icmp ult i64 2635249153387078802, %3308
  br i1 %3309, label %3310, label %3328

3310:                                             ; preds = %3304, %3285, %3272, %3271, %3230, %3223, %3204, %3167, %3143, %3125
  %3311 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %3312 = load i64, i64* %3311, align 8
  %3313 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %3314 = load i64, i64* %3313, align 8
  %3315 = icmp slt i64 0, %3314
  br i1 %3315, label %3316, label %3322

3316:                                             ; preds = %3310
  %3317 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %3318 = load i32, i32* %3317, align 8
  %3319 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %3320 = load i32, i32* %3319, align 8
  %3321 = icmp ne i32 %3318, %3320
  br label %3322

3322:                                             ; preds = %3316, %3310
  %3323 = phi i1 [ false, %3310 ], [ %3321, %3316 ]
  %3324 = zext i1 %3323 to i32
  %3325 = sext i32 %3324 to i64
  %3326 = sub nsw i64 %3312, %3325
  %3327 = mul i64 %3326, 7
  store i64 %3327, i64* %45, align 8
  br i1 true, label %3372, label %3346

3328:                                             ; preds = %3304, %3285, %3272, %3271, %3230, %3223, %3204, %3186, %3167, %3143, %3125
  %3329 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %3330 = load i64, i64* %3329, align 8
  %3331 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %3332 = load i64, i64* %3331, align 8
  %3333 = icmp slt i64 0, %3332
  br i1 %3333, label %3334, label %3340

3334:                                             ; preds = %3328
  %3335 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %3336 = load i32, i32* %3335, align 8
  %3337 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %3338 = load i32, i32* %3337, align 8
  %3339 = icmp ne i32 %3336, %3338
  br label %3340

3340:                                             ; preds = %3334, %3328
  %3341 = phi i1 [ false, %3328 ], [ %3339, %3334 ]
  %3342 = zext i1 %3341 to i32
  %3343 = sext i32 %3342 to i64
  %3344 = sub nsw i64 %3330, %3343
  %3345 = mul i64 %3344, 7
  store i64 %3345, i64* %45, align 8
  br i1 false, label %3372, label %3346

3346:                                             ; preds = %3340, %3322, %3087, %3069, %2839, %2821, %2586, %2568, %2335, %2315, %2078, %2058, %1821, %1800, %1562, %1541, %1301, %1280, %1042, %1021
  %3347 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %3348 = load i32, i32* %3347, align 8
  %3349 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 6
  %3350 = load i32, i32* %3349, align 8
  %3351 = sub nsw i32 %3348, %3350
  %3352 = add nsw i32 %3351, 7
  %3353 = srem i32 %3352, 7
  %3354 = load i64, i64* %45, align 8
  %3355 = sext i32 %3353 to i64
  %3356 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %3355, i64 %3354)
  %3357 = extractvalue { i64, i1 } %3356, 1
  %3358 = extractvalue { i64, i1 } %3356, 0
  store i64 %3358, i64* %45, align 8
  br i1 %3357, label %3372, label %3359

3359:                                             ; preds = %3346
  %3360 = load i64, i64* %45, align 8
  %3361 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 3
  %3362 = load i32, i32* %3361, align 4
  %3363 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 3
  %3364 = sext i32 %3362 to i64
  %3365 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %3360, i64 %3364)
  %3366 = extractvalue { i64, i1 } %3365, 1
  %3367 = extractvalue { i64, i1 } %3365, 0
  %3368 = trunc i64 %3367 to i32
  %3369 = sext i32 %3368 to i64
  %3370 = icmp ne i64 %3367, %3369
  %3371 = or i1 %3366, %3370
  store i32 %3368, i32* %3363, align 4
  br i1 %3371, label %3372, label %3373

3372:                                             ; preds = %3359, %3346, %3340, %3322, %3087, %3069, %2839, %2821, %2586, %2568, %2335, %2315, %2078, %2058, %1821, %1800, %1562, %1541, %1301, %1280, %1042, %1021
  store i64 -1, i64* %22, align 8
  br label %3377

3373:                                             ; preds = %3359
  %3374 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 8
  store i32 -1, i32* %3374, align 8
  %3375 = load %struct.tm_zone*, %struct.tm_zone** %25, align 8
  %3376 = call i64 @mktime_z(%struct.tm_zone* %3375, %struct.tm* %13)
  store i64 %3376, i64* %22, align 8
  br label %3377

3377:                                             ; preds = %3373, %3372
  %3378 = load i64, i64* %22, align 8
  %3379 = icmp eq i64 %3378, -1
  br i1 %3379, label %3380, label %3395

3380:                                             ; preds = %3377
  %3381 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 22
  %3382 = load i8, i8* %3381, align 1
  %3383 = trunc i8 %3382 to i1
  br i1 %3383, label %3384, label %3394

3384:                                             ; preds = %3380
  %3385 = call i8* @gettext(i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.48.175, i64 0, i64 0)) #11
  %3386 = getelementptr inbounds [100 x i8], [100 x i8]* %44, i64 0, i64 0
  %3387 = call i8* @str_days(%struct.parser_control* %34, i8* %3386, i32 100)
  %3388 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 1
  %3389 = load i64, i64* %3388, align 8
  %3390 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 2
  %3391 = load i32, i32* %3390, align 8
  %3392 = getelementptr inbounds [100 x i8], [100 x i8]* %16, i64 0, i64 0
  %3393 = call i8* @debug_strfdatetime(%struct.tm* %13, %struct.parser_control* %34, i8* %3392, i32 100)
  call void (i8*, ...) @dbg_printf(i8* %3385, i8* %3387, i64 %3389, i32 %3391, i8* %3393)
  br label %3394

3394:                                             ; preds = %3384, %3380
  br label %5616

3395:                                             ; preds = %3377
  %3396 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 22
  %3397 = load i8, i8* %3396, align 1
  %3398 = trunc i8 %3397 to i1
  br i1 %3398, label %3399, label %3405

3399:                                             ; preds = %3395
  %3400 = call i8* @gettext(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.49.176, i64 0, i64 0)) #11
  %3401 = getelementptr inbounds [100 x i8], [100 x i8]* %44, i64 0, i64 0
  %3402 = call i8* @str_days(%struct.parser_control* %34, i8* %3401, i32 100)
  %3403 = getelementptr inbounds [100 x i8], [100 x i8]* %16, i64 0, i64 0
  %3404 = call i8* @debug_strfdatetime(%struct.tm* %13, %struct.parser_control* %34, i8* %3403, i32 100)
  call void (i8*, ...) @dbg_printf(i8* %3400, i8* %3402, i8* %3404)
  br label %3405

3405:                                             ; preds = %3399, %3395
  br label %3406

3406:                                             ; preds = %3405, %786, %782
  %3407 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 22
  %3408 = load i8, i8* %3407, align 1
  %3409 = trunc i8 %3408 to i1
  br i1 %3409, label %3410, label %3438

3410:                                             ; preds = %3406
  %3411 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 15
  %3412 = load i64, i64* %3411, align 8
  %3413 = icmp ne i64 %3412, 0
  br i1 %3413, label %3422, label %3414

3414:                                             ; preds = %3410
  %3415 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 16
  %3416 = load i64, i64* %3415, align 8
  %3417 = icmp ne i64 %3416, 0
  br i1 %3417, label %3422, label %3418

3418:                                             ; preds = %3414
  %3419 = call i8* @gettext(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.50.177, i64 0, i64 0)) #11
  %3420 = getelementptr inbounds [100 x i8], [100 x i8]* %16, i64 0, i64 0
  %3421 = call i8* @debug_strfdate(%struct.tm* %13, i8* %3420, i32 100)
  call void (i8*, ...) @dbg_printf(i8* %3419, i8* %3421)
  br label %3422

3422:                                             ; preds = %3418, %3414, %3410
  %3423 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 16
  %3424 = load i64, i64* %3423, align 8
  %3425 = icmp ne i64 %3424, 0
  br i1 %3425, label %3426, label %3434

3426:                                             ; preds = %3422
  %3427 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 15
  %3428 = load i64, i64* %3427, align 8
  %3429 = icmp ne i64 %3428, 0
  br i1 %3429, label %3430, label %3434

3430:                                             ; preds = %3426
  %3431 = call i8* @gettext(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.51.178, i64 0, i64 0)) #11
  %3432 = getelementptr inbounds [100 x i8], [100 x i8]* %44, i64 0, i64 0
  %3433 = call i8* @str_days(%struct.parser_control* %34, i8* %3432, i32 100)
  call void (i8*, ...) @dbg_printf(i8* %3431, i8* %3433)
  br label %3434

3434:                                             ; preds = %3430, %3426, %3422
  %3435 = call i8* @gettext(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.52.179, i64 0, i64 0)) #11
  %3436 = getelementptr inbounds [100 x i8], [100 x i8]* %16, i64 0, i64 0
  %3437 = call i8* @debug_strfdatetime(%struct.tm* %13, %struct.parser_control* %34, i8* %3436, i32 100)
  call void (i8*, ...) @dbg_printf(i8* %3435, i8* %3437)
  br label %3438

3438:                                             ; preds = %3434, %3406
  %3439 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %3440 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %3439, i32 0, i32 0
  %3441 = load i64, i64* %3440, align 8
  %3442 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %3443 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %3442, i32 0, i32 1
  %3444 = load i64, i64* %3443, align 8
  %3445 = or i64 %3441, %3444
  %3446 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %3447 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %3446, i32 0, i32 2
  %3448 = load i64, i64* %3447, align 8
  %3449 = or i64 %3445, %3448
  %3450 = icmp ne i64 %3449, 0
  br i1 %3450, label %3451, label %3634

3451:                                             ; preds = %3438
  %3452 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 22
  %3453 = load i8, i8* %3452, align 1
  %3454 = trunc i8 %3453 to i1
  br i1 %3454, label %3455, label %3483

3455:                                             ; preds = %3451
  %3456 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %3457 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %3456, i32 0, i32 0
  %3458 = load i64, i64* %3457, align 8
  %3459 = icmp ne i64 %3458, 0
  br i1 %3459, label %3465, label %3460

3460:                                             ; preds = %3455
  %3461 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %3462 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %3461, i32 0, i32 1
  %3463 = load i64, i64* %3462, align 8
  %3464 = icmp ne i64 %3463, 0
  br i1 %3464, label %3465, label %3471

3465:                                             ; preds = %3460, %3455
  %3466 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 3
  %3467 = load i32, i32* %3466, align 4
  %3468 = icmp ne i32 %3467, 15
  br i1 %3468, label %3469, label %3471

3469:                                             ; preds = %3465
  %3470 = call i8* @gettext(i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.53.180, i64 0, i64 0)) #11
  call void (i8*, ...) @dbg_printf(i8* %3470)
  br label %3471

3471:                                             ; preds = %3469, %3465, %3460
  %3472 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %3473 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %3472, i32 0, i32 2
  %3474 = load i64, i64* %3473, align 8
  %3475 = icmp ne i64 %3474, 0
  br i1 %3475, label %3476, label %3482

3476:                                             ; preds = %3471
  %3477 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 2
  %3478 = load i32, i32* %3477, align 8
  %3479 = icmp ne i32 %3478, 12
  br i1 %3479, label %3480, label %3482

3480:                                             ; preds = %3476
  %3481 = call i8* @gettext(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.54.181, i64 0, i64 0)) #11
  call void (i8*, ...) @dbg_printf(i8* %3481)
  br label %3482

3482:                                             ; preds = %3480, %3476, %3471
  br label %3483

3483:                                             ; preds = %3482, %3451
  %3484 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 5
  %3485 = load i32, i32* %3484, align 4
  %3486 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %3487 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %3486, i32 0, i32 0
  %3488 = load i64, i64* %3487, align 8
  %3489 = sext i32 %3485 to i64
  %3490 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %3489, i64 %3488)
  %3491 = extractvalue { i64, i1 } %3490, 1
  %3492 = extractvalue { i64, i1 } %3490, 0
  %3493 = trunc i64 %3492 to i32
  %3494 = sext i32 %3493 to i64
  %3495 = icmp ne i64 %3492, %3494
  %3496 = or i1 %3491, %3495
  store i32 %3493, i32* %46, align 4
  br i1 %3496, label %3525, label %3497

3497:                                             ; preds = %3483
  %3498 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 4
  %3499 = load i32, i32* %3498, align 8
  %3500 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %3501 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %3500, i32 0, i32 1
  %3502 = load i64, i64* %3501, align 8
  %3503 = sext i32 %3499 to i64
  %3504 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %3503, i64 %3502)
  %3505 = extractvalue { i64, i1 } %3504, 1
  %3506 = extractvalue { i64, i1 } %3504, 0
  %3507 = trunc i64 %3506 to i32
  %3508 = sext i32 %3507 to i64
  %3509 = icmp ne i64 %3506, %3508
  %3510 = or i1 %3505, %3509
  store i32 %3507, i32* %47, align 4
  br i1 %3510, label %3525, label %3511

3511:                                             ; preds = %3497
  %3512 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 3
  %3513 = load i32, i32* %3512, align 4
  %3514 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %3515 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %3514, i32 0, i32 2
  %3516 = load i64, i64* %3515, align 8
  %3517 = sext i32 %3513 to i64
  %3518 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %3517, i64 %3516)
  %3519 = extractvalue { i64, i1 } %3518, 1
  %3520 = extractvalue { i64, i1 } %3518, 0
  %3521 = trunc i64 %3520 to i32
  %3522 = sext i32 %3521 to i64
  %3523 = icmp ne i64 %3520, %3522
  %3524 = or i1 %3519, %3523
  store i32 %3521, i32* %48, align 4
  br i1 %3524, label %3525, label %3532

3525:                                             ; preds = %3511, %3497, %3483
  %3526 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 22
  %3527 = load i8, i8* %3526, align 1
  %3528 = trunc i8 %3527 to i1
  br i1 %3528, label %3529, label %3531

3529:                                             ; preds = %3525
  %3530 = call i8* @gettext(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.55.182, i64 0, i64 0)) #11
  call void (i8*, ...) @dbg_printf(i8* %3530, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.56.183, i64 0, i64 0), i32 2170)
  br label %3531

3531:                                             ; preds = %3529, %3525
  br label %5616

3532:                                             ; preds = %3511
  %3533 = load i32, i32* %46, align 4
  %3534 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 5
  store i32 %3533, i32* %3534, align 4
  %3535 = load i32, i32* %47, align 4
  %3536 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 4
  store i32 %3535, i32* %3536, align 8
  %3537 = load i32, i32* %48, align 4
  %3538 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 3
  store i32 %3537, i32* %3538, align 4
  %3539 = getelementptr inbounds %struct.tm, %struct.tm* %14, i32 0, i32 2
  %3540 = load i32, i32* %3539, align 8
  %3541 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 2
  store i32 %3540, i32* %3541, align 8
  %3542 = getelementptr inbounds %struct.tm, %struct.tm* %14, i32 0, i32 1
  %3543 = load i32, i32* %3542, align 4
  %3544 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 1
  store i32 %3543, i32* %3544, align 4
  %3545 = getelementptr inbounds %struct.tm, %struct.tm* %14, i32 0, i32 0
  %3546 = load i32, i32* %3545, align 8
  %3547 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 0
  store i32 %3546, i32* %3547, align 8
  %3548 = getelementptr inbounds %struct.tm, %struct.tm* %14, i32 0, i32 8
  %3549 = load i32, i32* %3548, align 8
  %3550 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 8
  store i32 %3549, i32* %3550, align 8
  %3551 = load %struct.tm_zone*, %struct.tm_zone** %25, align 8
  %3552 = call i64 @mktime_z(%struct.tm_zone* %3551, %struct.tm* %13)
  store i64 %3552, i64* %22, align 8
  %3553 = load i64, i64* %22, align 8
  %3554 = icmp eq i64 %3553, -1
  br i1 %3554, label %3555, label %3564

3555:                                             ; preds = %3532
  %3556 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 22
  %3557 = load i8, i8* %3556, align 1
  %3558 = trunc i8 %3557 to i1
  br i1 %3558, label %3559, label %3563

3559:                                             ; preds = %3555
  %3560 = call i8* @gettext(i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.57.184, i64 0, i64 0)) #11
  %3561 = getelementptr inbounds [100 x i8], [100 x i8]* %16, i64 0, i64 0
  %3562 = call i8* @debug_strfdatetime(%struct.tm* %13, %struct.parser_control* %34, i8* %3561, i32 100)
  call void (i8*, ...) @dbg_printf(i8* %3560, i8* %3562)
  br label %3563

3563:                                             ; preds = %3559, %3555
  br label %5616

3564:                                             ; preds = %3532
  %3565 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 22
  %3566 = load i8, i8* %3565, align 1
  %3567 = trunc i8 %3566 to i1
  br i1 %3567, label %3568, label %3633

3568:                                             ; preds = %3564
  %3569 = call i8* @gettext(i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.58.185, i64 0, i64 0)) #11
  %3570 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %3571 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %3570, i32 0, i32 0
  %3572 = load i64, i64* %3571, align 8
  %3573 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %3574 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %3573, i32 0, i32 1
  %3575 = load i64, i64* %3574, align 8
  %3576 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %3577 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %3576, i32 0, i32 2
  %3578 = load i64, i64* %3577, align 8
  call void (i8*, ...) @dbg_printf(i8* %3569, i64 %3572, i64 %3575, i64 %3578)
  %3579 = call i8* @gettext(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.59.186, i64 0, i64 0)) #11
  %3580 = getelementptr inbounds [100 x i8], [100 x i8]* %16, i64 0, i64 0
  %3581 = call i8* @debug_strfdatetime(%struct.tm* %13, %struct.parser_control* %34, i8* %3580, i32 100)
  call void (i8*, ...) @dbg_printf(i8* %3579, i8* %3581)
  %3582 = getelementptr inbounds %struct.tm, %struct.tm* %14, i32 0, i32 8
  %3583 = load i32, i32* %3582, align 8
  %3584 = icmp ne i32 %3583, -1
  br i1 %3584, label %3585, label %3593

3585:                                             ; preds = %3568
  %3586 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 8
  %3587 = load i32, i32* %3586, align 8
  %3588 = getelementptr inbounds %struct.tm, %struct.tm* %14, i32 0, i32 8
  %3589 = load i32, i32* %3588, align 8
  %3590 = icmp ne i32 %3587, %3589
  br i1 %3590, label %3591, label %3593

3591:                                             ; preds = %3585
  %3592 = call i8* @gettext(i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.60.187, i64 0, i64 0)) #11
  call void (i8*, ...) @dbg_printf(i8* %3592)
  br label %3593

3593:                                             ; preds = %3591, %3585, %3568
  %3594 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %3595 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %3594, i32 0, i32 2
  %3596 = load i64, i64* %3595, align 8
  %3597 = icmp eq i64 %3596, 0
  br i1 %3597, label %3598, label %3632

3598:                                             ; preds = %3593
  %3599 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 3
  %3600 = load i32, i32* %3599, align 4
  %3601 = load i32, i32* %48, align 4
  %3602 = icmp ne i32 %3600, %3601
  br i1 %3602, label %3613, label %3603

3603:                                             ; preds = %3598
  %3604 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %3605 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %3604, i32 0, i32 1
  %3606 = load i64, i64* %3605, align 8
  %3607 = icmp eq i64 %3606, 0
  br i1 %3607, label %3608, label %3632

3608:                                             ; preds = %3603
  %3609 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 4
  %3610 = load i32, i32* %3609, align 8
  %3611 = load i32, i32* %47, align 4
  %3612 = icmp ne i32 %3610, %3611
  br i1 %3612, label %3613, label %3632

3613:                                             ; preds = %3608, %3598
  %3614 = call i8* @gettext(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.61.188, i64 0, i64 0)) #11
  call void (i8*, ...) @dbg_printf(i8* %3614)
  %3615 = call i8* @gettext(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.62.189, i64 0, i64 0)) #11
  %3616 = load i32, i32* %46, align 4
  %3617 = getelementptr inbounds [13 x i8], [13 x i8]* %49, i64 0, i64 0
  %3618 = call i8* @tm_year_str(i32 %3616, i8* %3617)
  %3619 = load i32, i32* %47, align 4
  %3620 = add nsw i32 %3619, 1
  %3621 = load i32, i32* %48, align 4
  call void (i8*, ...) @dbg_printf(i8* %3615, i8* %3618, i32 %3620, i32 %3621)
  %3622 = call i8* @gettext(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.63.190, i64 0, i64 0)) #11
  %3623 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 5
  %3624 = load i32, i32* %3623, align 4
  %3625 = getelementptr inbounds [13 x i8], [13 x i8]* %49, i64 0, i64 0
  %3626 = call i8* @tm_year_str(i32 %3624, i8* %3625)
  %3627 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 4
  %3628 = load i32, i32* %3627, align 8
  %3629 = add nsw i32 %3628, 1
  %3630 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 3
  %3631 = load i32, i32* %3630, align 4
  call void (i8*, ...) @dbg_printf(i8* %3622, i8* %3626, i32 %3629, i32 %3631)
  br label %3632

3632:                                             ; preds = %3613, %3608, %3603, %3593
  br label %3633

3633:                                             ; preds = %3632, %3564
  br label %3634

3634:                                             ; preds = %3633, %3438
  %3635 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 20
  %3636 = load i64, i64* %3635, align 8
  %3637 = icmp ne i64 %3636, 0
  br i1 %3637, label %3638, label %3684

3638:                                             ; preds = %3634
  %3639 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 4
  %3640 = load i32, i32* %3639, align 8
  %3641 = sext i32 %3640 to i64
  store i64 %3641, i64* %50, align 8
  store i8 0, i8* %52, align 1
  %3642 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 9
  %3643 = load i64, i64* %3642, align 8
  store i64 %3643, i64* %53, align 8
  %3644 = load i64, i64* %50, align 8
  %3645 = load i64, i64* %53, align 8
  %3646 = call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %3644, i64 %3645)
  %3647 = extractvalue { i64, i1 } %3646, 1
  %3648 = extractvalue { i64, i1 } %3646, 0
  store i64 %3648, i64* %50, align 8
  %3649 = zext i1 %3647 to i32
  %3650 = load i8, i8* %52, align 1
  %3651 = trunc i8 %3650 to i1
  %3652 = zext i1 %3651 to i32
  %3653 = or i32 %3652, %3649
  %3654 = icmp ne i32 %3653, 0
  %3655 = zext i1 %3654 to i8
  store i8 %3655, i8* %52, align 1
  %3656 = load i64, i64* %22, align 8
  %3657 = load i64, i64* %50, align 8
  %3658 = call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %3656, i64 %3657)
  %3659 = extractvalue { i64, i1 } %3658, 1
  %3660 = extractvalue { i64, i1 } %3658, 0
  store i64 %3660, i64* %51, align 8
  %3661 = zext i1 %3659 to i32
  %3662 = load i8, i8* %52, align 1
  %3663 = trunc i8 %3662 to i1
  %3664 = zext i1 %3663 to i32
  %3665 = or i32 %3664, %3661
  %3666 = icmp ne i32 %3665, 0
  %3667 = zext i1 %3666 to i8
  store i8 %3667, i8* %52, align 1
  %3668 = load i8, i8* %52, align 1
  %3669 = trunc i8 %3668 to i1
  br i1 %3669, label %3673, label %3670

3670:                                             ; preds = %3638
  %3671 = load i64, i64* %51, align 8
  %3672 = call zeroext i1 @time_overflow(i64 %3671)
  br i1 %3672, label %3673, label %3682

3673:                                             ; preds = %3670, %3638
  %3674 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 22
  %3675 = load i8, i8* %3674, align 1
  %3676 = trunc i8 %3675 to i1
  br i1 %3676, label %3677, label %3681

3677:                                             ; preds = %3673
  %3678 = call i8* @gettext(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.64.191, i64 0, i64 0)) #11
  %3679 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 4
  %3680 = load i32, i32* %3679, align 8
  call void (i8*, ...) @dbg_printf(i8* %3678, i32 %3680)
  br label %3681

3681:                                             ; preds = %3677, %3673
  br label %5616

3682:                                             ; preds = %3670
  %3683 = load i64, i64* %51, align 8
  store i64 %3683, i64* %22, align 8
  br label %3684

3684:                                             ; preds = %3682, %3634
  %3685 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 22
  %3686 = load i8, i8* %3685, align 1
  %3687 = trunc i8 %3686 to i1
  br i1 %3687, label %3688, label %3694

3688:                                             ; preds = %3684
  %3689 = load i64, i64* %22, align 8
  store i64 %3689, i64* %54, align 8
  %3690 = call i8* @gettext(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.65.192, i64 0, i64 0)) #11
  %3691 = getelementptr inbounds [100 x i8], [100 x i8]* %16, i64 0, i64 0
  %3692 = call i8* @debug_strfdatetime(%struct.tm* %13, %struct.parser_control* %34, i8* %3691, i32 100)
  %3693 = load i64, i64* %54, align 8
  call void (i8*, ...) @dbg_printf(i8* %3690, i8* %3692, i64 %3693)
  br label %3694

3694:                                             ; preds = %3688, %3684
  %3695 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 11
  %3696 = getelementptr inbounds %struct.timespec, %struct.timespec* %3695, i32 0, i32 1
  %3697 = load i64, i64* %3696, align 8
  store i64 %3697, i64* %55, align 8
  %3698 = load i64, i64* %55, align 8
  %3699 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %3700 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %3699, i32 0, i32 6
  %3701 = load i32, i32* %3700, align 8
  %3702 = sext i32 %3701 to i64
  %3703 = add nsw i64 %3698, %3702
  store i64 %3703, i64* %56, align 8
  %3704 = load i64, i64* %56, align 8
  %3705 = srem i64 %3704, 1000000000
  %3706 = add nsw i64 %3705, 1000000000
  %3707 = srem i64 %3706, 1000000000
  %3708 = trunc i64 %3707 to i32
  store i32 %3708, i32* %57, align 4
  %3709 = load i64, i64* %56, align 8
  %3710 = load i32, i32* %57, align 4
  %3711 = sext i32 %3710 to i64
  %3712 = sub nsw i64 %3709, %3711
  %3713 = sdiv i64 %3712, 1000000000
  %3714 = trunc i64 %3713 to i32
  store i32 %3714, i32* %58, align 4
  br i1 false, label %3715, label %3896

3715:                                             ; preds = %3694
  br i1 false, label %3806, label %3716

3716:                                             ; preds = %3715
  br i1 false, label %3717, label %3761

3717:                                             ; preds = %3716
  %3718 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %3719 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %3718, i32 0, i32 3
  %3720 = load i64, i64* %3719, align 8
  %3721 = icmp slt i64 %3720, 0
  br i1 %3721, label %3722, label %3734

3722:                                             ; preds = %3717
  br i1 true, label %3723, label %3728

3723:                                             ; preds = %3722
  %3724 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %3725 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %3724, i32 0, i32 3
  %3726 = load i64, i64* %3725, align 8
  %3727 = icmp slt i64 %3726, 0
  br i1 %3727, label %3790, label %3798

3728:                                             ; preds = %3722
  %3729 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %3730 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %3729, i32 0, i32 3
  %3731 = load i64, i64* %3730, align 8
  %3732 = sub nsw i64 -1, %3731
  %3733 = icmp sle i64 0, %3732
  br i1 %3733, label %3790, label %3798

3734:                                             ; preds = %3717
  br i1 true, label %3735, label %3736

3735:                                             ; preds = %3734
  br i1 false, label %3737, label %3756

3736:                                             ; preds = %3734
  br i1 false, label %3737, label %3756

3737:                                             ; preds = %3736, %3735
  br i1 false, label %3738, label %3756

3738:                                             ; preds = %3737
  br i1 true, label %3739, label %3745

3739:                                             ; preds = %3738
  %3740 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %3741 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %3740, i32 0, i32 3
  %3742 = load i64, i64* %3741, align 8
  %3743 = add nsw i64 %3742, -128
  %3744 = icmp slt i64 0, %3743
  br i1 %3744, label %3790, label %3798

3745:                                             ; preds = %3738
  %3746 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %3747 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %3746, i32 0, i32 3
  %3748 = load i64, i64* %3747, align 8
  %3749 = icmp slt i64 0, %3748
  br i1 %3749, label %3750, label %3798

3750:                                             ; preds = %3745
  %3751 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %3752 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %3751, i32 0, i32 3
  %3753 = load i64, i64* %3752, align 8
  %3754 = sub nsw i64 %3753, 1
  %3755 = icmp slt i64 127, %3754
  br i1 %3755, label %3790, label %3798

3756:                                             ; preds = %3737, %3736, %3735
  %3757 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %3758 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %3757, i32 0, i32 3
  %3759 = load i64, i64* %3758, align 8
  %3760 = icmp slt i64 0, %3759
  br i1 %3760, label %3790, label %3798

3761:                                             ; preds = %3716
  br i1 false, label %3762, label %3763

3762:                                             ; preds = %3761
  br i1 false, label %3790, label %3798

3763:                                             ; preds = %3761
  %3764 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %3765 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %3764, i32 0, i32 3
  %3766 = load i64, i64* %3765, align 8
  %3767 = icmp slt i64 %3766, 0
  br i1 %3767, label %3768, label %3785

3768:                                             ; preds = %3763
  br i1 true, label %3769, label %3770

3769:                                             ; preds = %3768
  br i1 false, label %3771, label %3779

3770:                                             ; preds = %3768
  br i1 false, label %3771, label %3779

3771:                                             ; preds = %3770, %3769
  %3772 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %3773 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %3772, i32 0, i32 3
  %3774 = load i64, i64* %3773, align 8
  %3775 = icmp eq i64 %3774, -1
  br i1 %3775, label %3776, label %3779

3776:                                             ; preds = %3771
  br i1 true, label %3777, label %3778

3777:                                             ; preds = %3776
  br i1 true, label %3790, label %3798

3778:                                             ; preds = %3776
  br i1 true, label %3790, label %3798

3779:                                             ; preds = %3771, %3770, %3769
  %3780 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %3781 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %3780, i32 0, i32 3
  %3782 = load i64, i64* %3781, align 8
  %3783 = sdiv i64 -128, %3782
  %3784 = icmp slt i64 %3783, 3600
  br i1 %3784, label %3790, label %3798

3785:                                             ; preds = %3763
  %3786 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %3787 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %3786, i32 0, i32 3
  %3788 = load i64, i64* %3787, align 8
  %3789 = icmp slt i64 0, %3788
  br i1 %3789, label %3790, label %3798

3790:                                             ; preds = %3785, %3779, %3778, %3777, %3762, %3756, %3750, %3739, %3728, %3723
  %3791 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %3792 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %3791, i32 0, i32 3
  %3793 = load i64, i64* %3792, align 8
  %3794 = trunc i64 %3793 to i32
  %3795 = mul i32 %3794, 3600
  %3796 = trunc i32 %3795 to i8
  %3797 = sext i8 %3796 to i64
  store i64 %3797, i64* %59, align 8
  br i1 true, label %5476, label %4580

3798:                                             ; preds = %3785, %3779, %3778, %3777, %3762, %3756, %3750, %3745, %3739, %3728, %3723
  %3799 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %3800 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %3799, i32 0, i32 3
  %3801 = load i64, i64* %3800, align 8
  %3802 = trunc i64 %3801 to i32
  %3803 = mul i32 %3802, 3600
  %3804 = trunc i32 %3803 to i8
  %3805 = sext i8 %3804 to i64
  store i64 %3805, i64* %59, align 8
  br i1 false, label %5476, label %4580

3806:                                             ; preds = %3715
  br i1 false, label %3807, label %3851

3807:                                             ; preds = %3806
  %3808 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %3809 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %3808, i32 0, i32 3
  %3810 = load i64, i64* %3809, align 8
  %3811 = icmp slt i64 %3810, 0
  br i1 %3811, label %3812, label %3824

3812:                                             ; preds = %3807
  br i1 true, label %3813, label %3818

3813:                                             ; preds = %3812
  %3814 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %3815 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %3814, i32 0, i32 3
  %3816 = load i64, i64* %3815, align 8
  %3817 = icmp slt i64 %3816, 0
  br i1 %3817, label %3880, label %3888

3818:                                             ; preds = %3812
  %3819 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %3820 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %3819, i32 0, i32 3
  %3821 = load i64, i64* %3820, align 8
  %3822 = sub nsw i64 -1, %3821
  %3823 = icmp sle i64 0, %3822
  br i1 %3823, label %3880, label %3888

3824:                                             ; preds = %3807
  br i1 true, label %3825, label %3826

3825:                                             ; preds = %3824
  br i1 false, label %3827, label %3846

3826:                                             ; preds = %3824
  br i1 false, label %3827, label %3846

3827:                                             ; preds = %3826, %3825
  br i1 false, label %3828, label %3846

3828:                                             ; preds = %3827
  br i1 true, label %3829, label %3835

3829:                                             ; preds = %3828
  %3830 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %3831 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %3830, i32 0, i32 3
  %3832 = load i64, i64* %3831, align 8
  %3833 = add nsw i64 %3832, 0
  %3834 = icmp slt i64 0, %3833
  br i1 %3834, label %3880, label %3888

3835:                                             ; preds = %3828
  %3836 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %3837 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %3836, i32 0, i32 3
  %3838 = load i64, i64* %3837, align 8
  %3839 = icmp slt i64 0, %3838
  br i1 %3839, label %3840, label %3888

3840:                                             ; preds = %3835
  %3841 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %3842 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %3841, i32 0, i32 3
  %3843 = load i64, i64* %3842, align 8
  %3844 = sub nsw i64 %3843, 1
  %3845 = icmp slt i64 -1, %3844
  br i1 %3845, label %3880, label %3888

3846:                                             ; preds = %3827, %3826, %3825
  %3847 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %3848 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %3847, i32 0, i32 3
  %3849 = load i64, i64* %3848, align 8
  %3850 = icmp slt i64 0, %3849
  br i1 %3850, label %3880, label %3888

3851:                                             ; preds = %3806
  br i1 false, label %3852, label %3853

3852:                                             ; preds = %3851
  br i1 false, label %3880, label %3888

3853:                                             ; preds = %3851
  %3854 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %3855 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %3854, i32 0, i32 3
  %3856 = load i64, i64* %3855, align 8
  %3857 = icmp slt i64 %3856, 0
  br i1 %3857, label %3858, label %3875

3858:                                             ; preds = %3853
  br i1 true, label %3859, label %3860

3859:                                             ; preds = %3858
  br i1 false, label %3861, label %3869

3860:                                             ; preds = %3858
  br i1 false, label %3861, label %3869

3861:                                             ; preds = %3860, %3859
  %3862 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %3863 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %3862, i32 0, i32 3
  %3864 = load i64, i64* %3863, align 8
  %3865 = icmp eq i64 %3864, -1
  br i1 %3865, label %3866, label %3869

3866:                                             ; preds = %3861
  br i1 true, label %3867, label %3868

3867:                                             ; preds = %3866
  br i1 true, label %3880, label %3888

3868:                                             ; preds = %3866
  br i1 true, label %3880, label %3888

3869:                                             ; preds = %3861, %3860, %3859
  %3870 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %3871 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %3870, i32 0, i32 3
  %3872 = load i64, i64* %3871, align 8
  %3873 = sdiv i64 0, %3872
  %3874 = icmp slt i64 %3873, 3600
  br i1 %3874, label %3880, label %3888

3875:                                             ; preds = %3853
  %3876 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %3877 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %3876, i32 0, i32 3
  %3878 = load i64, i64* %3877, align 8
  %3879 = icmp slt i64 0, %3878
  br i1 %3879, label %3880, label %3888

3880:                                             ; preds = %3875, %3869, %3868, %3867, %3852, %3846, %3840, %3829, %3818, %3813
  %3881 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %3882 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %3881, i32 0, i32 3
  %3883 = load i64, i64* %3882, align 8
  %3884 = trunc i64 %3883 to i32
  %3885 = mul i32 %3884, 3600
  %3886 = trunc i32 %3885 to i8
  %3887 = zext i8 %3886 to i64
  store i64 %3887, i64* %59, align 8
  br i1 true, label %5476, label %4580

3888:                                             ; preds = %3875, %3869, %3868, %3867, %3852, %3846, %3840, %3835, %3829, %3818, %3813
  %3889 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %3890 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %3889, i32 0, i32 3
  %3891 = load i64, i64* %3890, align 8
  %3892 = trunc i64 %3891 to i32
  %3893 = mul i32 %3892, 3600
  %3894 = trunc i32 %3893 to i8
  %3895 = zext i8 %3894 to i64
  store i64 %3895, i64* %59, align 8
  br i1 false, label %5476, label %4580

3896:                                             ; preds = %3694
  br i1 false, label %3897, label %4078

3897:                                             ; preds = %3896
  br i1 false, label %3988, label %3898

3898:                                             ; preds = %3897
  br i1 false, label %3899, label %3943

3899:                                             ; preds = %3898
  %3900 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %3901 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %3900, i32 0, i32 3
  %3902 = load i64, i64* %3901, align 8
  %3903 = icmp slt i64 %3902, 0
  br i1 %3903, label %3904, label %3916

3904:                                             ; preds = %3899
  br i1 true, label %3905, label %3910

3905:                                             ; preds = %3904
  %3906 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %3907 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %3906, i32 0, i32 3
  %3908 = load i64, i64* %3907, align 8
  %3909 = icmp slt i64 %3908, 9
  br i1 %3909, label %3972, label %3980

3910:                                             ; preds = %3904
  %3911 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %3912 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %3911, i32 0, i32 3
  %3913 = load i64, i64* %3912, align 8
  %3914 = sub nsw i64 -1, %3913
  %3915 = icmp sle i64 -9, %3914
  br i1 %3915, label %3972, label %3980

3916:                                             ; preds = %3899
  br i1 true, label %3917, label %3918

3917:                                             ; preds = %3916
  br i1 false, label %3919, label %3938

3918:                                             ; preds = %3916
  br i1 false, label %3919, label %3938

3919:                                             ; preds = %3918, %3917
  br i1 false, label %3920, label %3938

3920:                                             ; preds = %3919
  br i1 true, label %3921, label %3927

3921:                                             ; preds = %3920
  %3922 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %3923 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %3922, i32 0, i32 3
  %3924 = load i64, i64* %3923, align 8
  %3925 = add nsw i64 %3924, -32768
  %3926 = icmp slt i64 0, %3925
  br i1 %3926, label %3972, label %3980

3927:                                             ; preds = %3920
  %3928 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %3929 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %3928, i32 0, i32 3
  %3930 = load i64, i64* %3929, align 8
  %3931 = icmp slt i64 0, %3930
  br i1 %3931, label %3932, label %3980

3932:                                             ; preds = %3927
  %3933 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %3934 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %3933, i32 0, i32 3
  %3935 = load i64, i64* %3934, align 8
  %3936 = sub nsw i64 %3935, 1
  %3937 = icmp slt i64 32767, %3936
  br i1 %3937, label %3972, label %3980

3938:                                             ; preds = %3919, %3918, %3917
  %3939 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %3940 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %3939, i32 0, i32 3
  %3941 = load i64, i64* %3940, align 8
  %3942 = icmp slt i64 -9, %3941
  br i1 %3942, label %3972, label %3980

3943:                                             ; preds = %3898
  br i1 false, label %3944, label %3945

3944:                                             ; preds = %3943
  br i1 false, label %3972, label %3980

3945:                                             ; preds = %3943
  %3946 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %3947 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %3946, i32 0, i32 3
  %3948 = load i64, i64* %3947, align 8
  %3949 = icmp slt i64 %3948, 0
  br i1 %3949, label %3950, label %3967

3950:                                             ; preds = %3945
  br i1 true, label %3951, label %3952

3951:                                             ; preds = %3950
  br i1 false, label %3953, label %3961

3952:                                             ; preds = %3950
  br i1 false, label %3953, label %3961

3953:                                             ; preds = %3952, %3951
  %3954 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %3955 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %3954, i32 0, i32 3
  %3956 = load i64, i64* %3955, align 8
  %3957 = icmp eq i64 %3956, -1
  br i1 %3957, label %3958, label %3961

3958:                                             ; preds = %3953
  br i1 true, label %3959, label %3960

3959:                                             ; preds = %3958
  br i1 false, label %3972, label %3980

3960:                                             ; preds = %3958
  br i1 false, label %3972, label %3980

3961:                                             ; preds = %3953, %3952, %3951
  %3962 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %3963 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %3962, i32 0, i32 3
  %3964 = load i64, i64* %3963, align 8
  %3965 = sdiv i64 -32768, %3964
  %3966 = icmp slt i64 %3965, 3600
  br i1 %3966, label %3972, label %3980

3967:                                             ; preds = %3945
  %3968 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %3969 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %3968, i32 0, i32 3
  %3970 = load i64, i64* %3969, align 8
  %3971 = icmp slt i64 9, %3970
  br i1 %3971, label %3972, label %3980

3972:                                             ; preds = %3967, %3961, %3960, %3959, %3944, %3938, %3932, %3921, %3910, %3905
  %3973 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %3974 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %3973, i32 0, i32 3
  %3975 = load i64, i64* %3974, align 8
  %3976 = trunc i64 %3975 to i32
  %3977 = mul i32 %3976, 3600
  %3978 = trunc i32 %3977 to i16
  %3979 = sext i16 %3978 to i64
  store i64 %3979, i64* %59, align 8
  br i1 true, label %5476, label %4580

3980:                                             ; preds = %3967, %3961, %3960, %3959, %3944, %3938, %3932, %3927, %3921, %3910, %3905
  %3981 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %3982 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %3981, i32 0, i32 3
  %3983 = load i64, i64* %3982, align 8
  %3984 = trunc i64 %3983 to i32
  %3985 = mul i32 %3984, 3600
  %3986 = trunc i32 %3985 to i16
  %3987 = sext i16 %3986 to i64
  store i64 %3987, i64* %59, align 8
  br i1 false, label %5476, label %4580

3988:                                             ; preds = %3897
  br i1 false, label %3989, label %4033

3989:                                             ; preds = %3988
  %3990 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %3991 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %3990, i32 0, i32 3
  %3992 = load i64, i64* %3991, align 8
  %3993 = icmp slt i64 %3992, 0
  br i1 %3993, label %3994, label %4006

3994:                                             ; preds = %3989
  br i1 true, label %3995, label %4000

3995:                                             ; preds = %3994
  %3996 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %3997 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %3996, i32 0, i32 3
  %3998 = load i64, i64* %3997, align 8
  %3999 = icmp slt i64 %3998, 18
  br i1 %3999, label %4062, label %4070

4000:                                             ; preds = %3994
  %4001 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4002 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4001, i32 0, i32 3
  %4003 = load i64, i64* %4002, align 8
  %4004 = sub nsw i64 -1, %4003
  %4005 = icmp sle i64 -18, %4004
  br i1 %4005, label %4062, label %4070

4006:                                             ; preds = %3989
  br i1 true, label %4007, label %4008

4007:                                             ; preds = %4006
  br i1 false, label %4009, label %4028

4008:                                             ; preds = %4006
  br i1 false, label %4009, label %4028

4009:                                             ; preds = %4008, %4007
  br i1 false, label %4010, label %4028

4010:                                             ; preds = %4009
  br i1 true, label %4011, label %4017

4011:                                             ; preds = %4010
  %4012 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4013 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4012, i32 0, i32 3
  %4014 = load i64, i64* %4013, align 8
  %4015 = add nsw i64 %4014, 0
  %4016 = icmp slt i64 0, %4015
  br i1 %4016, label %4062, label %4070

4017:                                             ; preds = %4010
  %4018 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4019 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4018, i32 0, i32 3
  %4020 = load i64, i64* %4019, align 8
  %4021 = icmp slt i64 0, %4020
  br i1 %4021, label %4022, label %4070

4022:                                             ; preds = %4017
  %4023 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4024 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4023, i32 0, i32 3
  %4025 = load i64, i64* %4024, align 8
  %4026 = sub nsw i64 %4025, 1
  %4027 = icmp slt i64 -1, %4026
  br i1 %4027, label %4062, label %4070

4028:                                             ; preds = %4009, %4008, %4007
  %4029 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4030 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4029, i32 0, i32 3
  %4031 = load i64, i64* %4030, align 8
  %4032 = icmp slt i64 0, %4031
  br i1 %4032, label %4062, label %4070

4033:                                             ; preds = %3988
  br i1 false, label %4034, label %4035

4034:                                             ; preds = %4033
  br i1 false, label %4062, label %4070

4035:                                             ; preds = %4033
  %4036 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4037 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4036, i32 0, i32 3
  %4038 = load i64, i64* %4037, align 8
  %4039 = icmp slt i64 %4038, 0
  br i1 %4039, label %4040, label %4057

4040:                                             ; preds = %4035
  br i1 true, label %4041, label %4042

4041:                                             ; preds = %4040
  br i1 false, label %4043, label %4051

4042:                                             ; preds = %4040
  br i1 false, label %4043, label %4051

4043:                                             ; preds = %4042, %4041
  %4044 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4045 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4044, i32 0, i32 3
  %4046 = load i64, i64* %4045, align 8
  %4047 = icmp eq i64 %4046, -1
  br i1 %4047, label %4048, label %4051

4048:                                             ; preds = %4043
  br i1 true, label %4049, label %4050

4049:                                             ; preds = %4048
  br i1 true, label %4062, label %4070

4050:                                             ; preds = %4048
  br i1 true, label %4062, label %4070

4051:                                             ; preds = %4043, %4042, %4041
  %4052 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4053 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4052, i32 0, i32 3
  %4054 = load i64, i64* %4053, align 8
  %4055 = sdiv i64 0, %4054
  %4056 = icmp slt i64 %4055, 3600
  br i1 %4056, label %4062, label %4070

4057:                                             ; preds = %4035
  %4058 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4059 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4058, i32 0, i32 3
  %4060 = load i64, i64* %4059, align 8
  %4061 = icmp slt i64 18, %4060
  br i1 %4061, label %4062, label %4070

4062:                                             ; preds = %4057, %4051, %4050, %4049, %4034, %4028, %4022, %4011, %4000, %3995
  %4063 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4064 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4063, i32 0, i32 3
  %4065 = load i64, i64* %4064, align 8
  %4066 = trunc i64 %4065 to i32
  %4067 = mul i32 %4066, 3600
  %4068 = trunc i32 %4067 to i16
  %4069 = zext i16 %4068 to i64
  store i64 %4069, i64* %59, align 8
  br i1 true, label %5476, label %4580

4070:                                             ; preds = %4057, %4051, %4050, %4049, %4034, %4028, %4022, %4017, %4011, %4000, %3995
  %4071 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4072 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4071, i32 0, i32 3
  %4073 = load i64, i64* %4072, align 8
  %4074 = trunc i64 %4073 to i32
  %4075 = mul i32 %4074, 3600
  %4076 = trunc i32 %4075 to i16
  %4077 = zext i16 %4076 to i64
  store i64 %4077, i64* %59, align 8
  br i1 false, label %5476, label %4580

4078:                                             ; preds = %3896
  br i1 false, label %4079, label %4253

4079:                                             ; preds = %4078
  br i1 true, label %4080, label %4165

4080:                                             ; preds = %4079
  br i1 false, label %4081, label %4122

4081:                                             ; preds = %4080
  %4082 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4083 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4082, i32 0, i32 3
  %4084 = load i64, i64* %4083, align 8
  %4085 = icmp slt i64 %4084, 0
  br i1 %4085, label %4086, label %4098

4086:                                             ; preds = %4081
  br i1 true, label %4087, label %4092

4087:                                             ; preds = %4086
  %4088 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4089 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4088, i32 0, i32 3
  %4090 = load i64, i64* %4089, align 8
  %4091 = icmp slt i64 %4090, 596523
  br i1 %4091, label %4151, label %4158

4092:                                             ; preds = %4086
  %4093 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4094 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4093, i32 0, i32 3
  %4095 = load i64, i64* %4094, align 8
  %4096 = sub nsw i64 -1, %4095
  %4097 = icmp sle i64 -596523, %4096
  br i1 %4097, label %4151, label %4158

4098:                                             ; preds = %4081
  br i1 false, label %4099, label %4117

4099:                                             ; preds = %4098
  br i1 true, label %4100, label %4106

4100:                                             ; preds = %4099
  %4101 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4102 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4101, i32 0, i32 3
  %4103 = load i64, i64* %4102, align 8
  %4104 = add nsw i64 %4103, -2147483648
  %4105 = icmp slt i64 0, %4104
  br i1 %4105, label %4151, label %4158

4106:                                             ; preds = %4099
  %4107 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4108 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4107, i32 0, i32 3
  %4109 = load i64, i64* %4108, align 8
  %4110 = icmp slt i64 0, %4109
  br i1 %4110, label %4111, label %4158

4111:                                             ; preds = %4106
  %4112 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4113 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4112, i32 0, i32 3
  %4114 = load i64, i64* %4113, align 8
  %4115 = sub nsw i64 %4114, 1
  %4116 = icmp slt i64 2147483647, %4115
  br i1 %4116, label %4151, label %4158

4117:                                             ; preds = %4098
  %4118 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4119 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4118, i32 0, i32 3
  %4120 = load i64, i64* %4119, align 8
  %4121 = icmp slt i64 -596523, %4120
  br i1 %4121, label %4151, label %4158

4122:                                             ; preds = %4080
  br i1 false, label %4123, label %4124

4123:                                             ; preds = %4122
  br i1 false, label %4151, label %4158

4124:                                             ; preds = %4122
  %4125 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4126 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4125, i32 0, i32 3
  %4127 = load i64, i64* %4126, align 8
  %4128 = icmp slt i64 %4127, 0
  br i1 %4128, label %4129, label %4146

4129:                                             ; preds = %4124
  br i1 true, label %4130, label %4131

4130:                                             ; preds = %4129
  br i1 false, label %4132, label %4140

4131:                                             ; preds = %4129
  br i1 false, label %4132, label %4140

4132:                                             ; preds = %4131, %4130
  %4133 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4134 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4133, i32 0, i32 3
  %4135 = load i64, i64* %4134, align 8
  %4136 = icmp eq i64 %4135, -1
  br i1 %4136, label %4137, label %4140

4137:                                             ; preds = %4132
  br i1 true, label %4138, label %4139

4138:                                             ; preds = %4137
  br i1 false, label %4151, label %4158

4139:                                             ; preds = %4137
  br i1 false, label %4151, label %4158

4140:                                             ; preds = %4132, %4131, %4130
  %4141 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4142 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4141, i32 0, i32 3
  %4143 = load i64, i64* %4142, align 8
  %4144 = sdiv i64 -2147483648, %4143
  %4145 = icmp slt i64 %4144, 3600
  br i1 %4145, label %4151, label %4158

4146:                                             ; preds = %4124
  %4147 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4148 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4147, i32 0, i32 3
  %4149 = load i64, i64* %4148, align 8
  %4150 = icmp slt i64 596523, %4149
  br i1 %4150, label %4151, label %4158

4151:                                             ; preds = %4146, %4140, %4139, %4138, %4123, %4117, %4111, %4100, %4092, %4087
  %4152 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4153 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4152, i32 0, i32 3
  %4154 = load i64, i64* %4153, align 8
  %4155 = trunc i64 %4154 to i32
  %4156 = mul i32 %4155, 3600
  %4157 = sext i32 %4156 to i64
  store i64 %4157, i64* %59, align 8
  br i1 true, label %5476, label %4580

4158:                                             ; preds = %4146, %4140, %4139, %4138, %4123, %4117, %4111, %4106, %4100, %4092, %4087
  %4159 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4160 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4159, i32 0, i32 3
  %4161 = load i64, i64* %4160, align 8
  %4162 = trunc i64 %4161 to i32
  %4163 = mul i32 %4162, 3600
  %4164 = sext i32 %4163 to i64
  store i64 %4164, i64* %59, align 8
  br i1 false, label %5476, label %4580

4165:                                             ; preds = %4079
  br i1 false, label %4166, label %4210

4166:                                             ; preds = %4165
  %4167 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4168 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4167, i32 0, i32 3
  %4169 = load i64, i64* %4168, align 8
  %4170 = icmp slt i64 %4169, 0
  br i1 %4170, label %4171, label %4183

4171:                                             ; preds = %4166
  br i1 false, label %4172, label %4177

4172:                                             ; preds = %4171
  %4173 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4174 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4173, i32 0, i32 3
  %4175 = load i64, i64* %4174, align 8
  %4176 = icmp slt i64 %4175, 1193046
  br i1 %4176, label %4239, label %4246

4177:                                             ; preds = %4171
  %4178 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4179 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4178, i32 0, i32 3
  %4180 = load i64, i64* %4179, align 8
  %4181 = sub nsw i64 -1, %4180
  %4182 = icmp sle i64 1, %4181
  br i1 %4182, label %4239, label %4246

4183:                                             ; preds = %4166
  br i1 true, label %4184, label %4185

4184:                                             ; preds = %4183
  br i1 false, label %4186, label %4205

4185:                                             ; preds = %4183
  br i1 false, label %4186, label %4205

4186:                                             ; preds = %4185, %4184
  br i1 false, label %4187, label %4205

4187:                                             ; preds = %4186
  br i1 true, label %4188, label %4194

4188:                                             ; preds = %4187
  %4189 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4190 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4189, i32 0, i32 3
  %4191 = load i64, i64* %4190, align 8
  %4192 = add nsw i64 %4191, 0
  %4193 = icmp slt i64 0, %4192
  br i1 %4193, label %4239, label %4246

4194:                                             ; preds = %4187
  %4195 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4196 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4195, i32 0, i32 3
  %4197 = load i64, i64* %4196, align 8
  %4198 = icmp slt i64 0, %4197
  br i1 %4198, label %4199, label %4246

4199:                                             ; preds = %4194
  %4200 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4201 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4200, i32 0, i32 3
  %4202 = load i64, i64* %4201, align 8
  %4203 = sub nsw i64 %4202, 1
  %4204 = icmp slt i64 -1, %4203
  br i1 %4204, label %4239, label %4246

4205:                                             ; preds = %4186, %4185, %4184
  %4206 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4207 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4206, i32 0, i32 3
  %4208 = load i64, i64* %4207, align 8
  %4209 = icmp slt i64 0, %4208
  br i1 %4209, label %4239, label %4246

4210:                                             ; preds = %4165
  br i1 false, label %4211, label %4212

4211:                                             ; preds = %4210
  br i1 false, label %4239, label %4246

4212:                                             ; preds = %4210
  %4213 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4214 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4213, i32 0, i32 3
  %4215 = load i64, i64* %4214, align 8
  %4216 = icmp slt i64 %4215, 0
  br i1 %4216, label %4217, label %4234

4217:                                             ; preds = %4212
  br i1 true, label %4218, label %4219

4218:                                             ; preds = %4217
  br i1 false, label %4220, label %4228

4219:                                             ; preds = %4217
  br i1 false, label %4220, label %4228

4220:                                             ; preds = %4219, %4218
  %4221 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4222 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4221, i32 0, i32 3
  %4223 = load i64, i64* %4222, align 8
  %4224 = icmp eq i64 %4223, -1
  br i1 %4224, label %4225, label %4228

4225:                                             ; preds = %4220
  br i1 true, label %4226, label %4227

4226:                                             ; preds = %4225
  br i1 true, label %4239, label %4246

4227:                                             ; preds = %4225
  br i1 true, label %4239, label %4246

4228:                                             ; preds = %4220, %4219, %4218
  %4229 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4230 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4229, i32 0, i32 3
  %4231 = load i64, i64* %4230, align 8
  %4232 = sdiv i64 0, %4231
  %4233 = icmp slt i64 %4232, 3600
  br i1 %4233, label %4239, label %4246

4234:                                             ; preds = %4212
  %4235 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4236 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4235, i32 0, i32 3
  %4237 = load i64, i64* %4236, align 8
  %4238 = icmp slt i64 1193046, %4237
  br i1 %4238, label %4239, label %4246

4239:                                             ; preds = %4234, %4228, %4227, %4226, %4211, %4205, %4199, %4188, %4177, %4172
  %4240 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4241 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4240, i32 0, i32 3
  %4242 = load i64, i64* %4241, align 8
  %4243 = trunc i64 %4242 to i32
  %4244 = mul i32 %4243, 3600
  %4245 = zext i32 %4244 to i64
  store i64 %4245, i64* %59, align 8
  br i1 true, label %5476, label %4580

4246:                                             ; preds = %4234, %4228, %4227, %4226, %4211, %4205, %4199, %4194, %4188, %4177, %4172
  %4247 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4248 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4247, i32 0, i32 3
  %4249 = load i64, i64* %4248, align 8
  %4250 = trunc i64 %4249 to i32
  %4251 = mul i32 %4250, 3600
  %4252 = zext i32 %4251 to i64
  store i64 %4252, i64* %59, align 8
  br i1 false, label %5476, label %4580

4253:                                             ; preds = %4078
  br i1 true, label %4254, label %4417

4254:                                             ; preds = %4253
  br i1 true, label %4255, label %4333

4255:                                             ; preds = %4254
  br i1 false, label %4256, label %4297

4256:                                             ; preds = %4255
  %4257 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4258 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4257, i32 0, i32 3
  %4259 = load i64, i64* %4258, align 8
  %4260 = icmp slt i64 %4259, 0
  br i1 %4260, label %4261, label %4273

4261:                                             ; preds = %4256
  br i1 true, label %4262, label %4267

4262:                                             ; preds = %4261
  %4263 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4264 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4263, i32 0, i32 3
  %4265 = load i64, i64* %4264, align 8
  %4266 = icmp slt i64 %4265, 2562047788015215
  br i1 %4266, label %4323, label %4328

4267:                                             ; preds = %4261
  %4268 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4269 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4268, i32 0, i32 3
  %4270 = load i64, i64* %4269, align 8
  %4271 = sub nsw i64 -1, %4270
  %4272 = icmp sle i64 -2562047788015215, %4271
  br i1 %4272, label %4323, label %4328

4273:                                             ; preds = %4256
  br i1 false, label %4274, label %4292

4274:                                             ; preds = %4273
  br i1 true, label %4275, label %4281

4275:                                             ; preds = %4274
  %4276 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4277 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4276, i32 0, i32 3
  %4278 = load i64, i64* %4277, align 8
  %4279 = add nsw i64 %4278, -9223372036854775808
  %4280 = icmp slt i64 0, %4279
  br i1 %4280, label %4323, label %4328

4281:                                             ; preds = %4274
  %4282 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4283 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4282, i32 0, i32 3
  %4284 = load i64, i64* %4283, align 8
  %4285 = icmp slt i64 0, %4284
  br i1 %4285, label %4286, label %4328

4286:                                             ; preds = %4281
  %4287 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4288 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4287, i32 0, i32 3
  %4289 = load i64, i64* %4288, align 8
  %4290 = sub nsw i64 %4289, 1
  %4291 = icmp slt i64 9223372036854775807, %4290
  br i1 %4291, label %4323, label %4328

4292:                                             ; preds = %4273
  %4293 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4294 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4293, i32 0, i32 3
  %4295 = load i64, i64* %4294, align 8
  %4296 = icmp slt i64 -2562047788015215, %4295
  br i1 %4296, label %4323, label %4328

4297:                                             ; preds = %4255
  br i1 false, label %4298, label %4299

4298:                                             ; preds = %4297
  br i1 false, label %4323, label %4328

4299:                                             ; preds = %4297
  %4300 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4301 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4300, i32 0, i32 3
  %4302 = load i64, i64* %4301, align 8
  %4303 = icmp slt i64 %4302, 0
  br i1 %4303, label %4304, label %4318

4304:                                             ; preds = %4299
  %4305 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4306 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4305, i32 0, i32 3
  %4307 = load i64, i64* %4306, align 8
  %4308 = icmp eq i64 %4307, -1
  br i1 %4308, label %4309, label %4312

4309:                                             ; preds = %4304
  br i1 true, label %4310, label %4311

4310:                                             ; preds = %4309
  br i1 false, label %4323, label %4328

4311:                                             ; preds = %4309
  br i1 false, label %4323, label %4328

4312:                                             ; preds = %4304
  %4313 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4314 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4313, i32 0, i32 3
  %4315 = load i64, i64* %4314, align 8
  %4316 = sdiv i64 -9223372036854775808, %4315
  %4317 = icmp slt i64 %4316, 3600
  br i1 %4317, label %4323, label %4328

4318:                                             ; preds = %4299
  %4319 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4320 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4319, i32 0, i32 3
  %4321 = load i64, i64* %4320, align 8
  %4322 = icmp slt i64 2562047788015215, %4321
  br i1 %4322, label %4323, label %4328

4323:                                             ; preds = %4318, %4312, %4311, %4310, %4298, %4292, %4286, %4275, %4267, %4262
  %4324 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4325 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4324, i32 0, i32 3
  %4326 = load i64, i64* %4325, align 8
  %4327 = mul i64 %4326, 3600
  store i64 %4327, i64* %59, align 8
  br i1 true, label %5476, label %4580

4328:                                             ; preds = %4318, %4312, %4311, %4310, %4298, %4292, %4286, %4281, %4275, %4267, %4262
  %4329 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4330 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4329, i32 0, i32 3
  %4331 = load i64, i64* %4330, align 8
  %4332 = mul i64 %4331, 3600
  store i64 %4332, i64* %59, align 8
  br i1 false, label %5476, label %4580

4333:                                             ; preds = %4254
  br i1 false, label %4334, label %4378

4334:                                             ; preds = %4333
  %4335 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4336 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4335, i32 0, i32 3
  %4337 = load i64, i64* %4336, align 8
  %4338 = icmp slt i64 %4337, 0
  br i1 %4338, label %4339, label %4351

4339:                                             ; preds = %4334
  br i1 false, label %4340, label %4345

4340:                                             ; preds = %4339
  %4341 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4342 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4341, i32 0, i32 3
  %4343 = load i64, i64* %4342, align 8
  %4344 = icmp ult i64 %4343, 5124095576030431
  br i1 %4344, label %4407, label %4412

4345:                                             ; preds = %4339
  %4346 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4347 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4346, i32 0, i32 3
  %4348 = load i64, i64* %4347, align 8
  %4349 = sub nsw i64 -1, %4348
  %4350 = icmp ule i64 1, %4349
  br i1 %4350, label %4407, label %4412

4351:                                             ; preds = %4334
  br i1 true, label %4352, label %4353

4352:                                             ; preds = %4351
  br i1 false, label %4354, label %4373

4353:                                             ; preds = %4351
  br i1 false, label %4354, label %4373

4354:                                             ; preds = %4353, %4352
  br i1 false, label %4355, label %4373

4355:                                             ; preds = %4354
  br i1 true, label %4356, label %4362

4356:                                             ; preds = %4355
  %4357 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4358 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4357, i32 0, i32 3
  %4359 = load i64, i64* %4358, align 8
  %4360 = add nsw i64 %4359, 0
  %4361 = icmp slt i64 0, %4360
  br i1 %4361, label %4407, label %4412

4362:                                             ; preds = %4355
  %4363 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4364 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4363, i32 0, i32 3
  %4365 = load i64, i64* %4364, align 8
  %4366 = icmp slt i64 0, %4365
  br i1 %4366, label %4367, label %4412

4367:                                             ; preds = %4362
  %4368 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4369 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4368, i32 0, i32 3
  %4370 = load i64, i64* %4369, align 8
  %4371 = sub nsw i64 %4370, 1
  %4372 = icmp slt i64 -1, %4371
  br i1 %4372, label %4407, label %4412

4373:                                             ; preds = %4354, %4353, %4352
  %4374 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4375 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4374, i32 0, i32 3
  %4376 = load i64, i64* %4375, align 8
  %4377 = icmp slt i64 0, %4376
  br i1 %4377, label %4407, label %4412

4378:                                             ; preds = %4333
  br i1 false, label %4379, label %4380

4379:                                             ; preds = %4378
  br i1 false, label %4407, label %4412

4380:                                             ; preds = %4378
  %4381 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4382 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4381, i32 0, i32 3
  %4383 = load i64, i64* %4382, align 8
  %4384 = icmp slt i64 %4383, 0
  br i1 %4384, label %4385, label %4402

4385:                                             ; preds = %4380
  br i1 true, label %4386, label %4387

4386:                                             ; preds = %4385
  br i1 false, label %4388, label %4396

4387:                                             ; preds = %4385
  br i1 false, label %4388, label %4396

4388:                                             ; preds = %4387, %4386
  %4389 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4390 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4389, i32 0, i32 3
  %4391 = load i64, i64* %4390, align 8
  %4392 = icmp eq i64 %4391, -1
  br i1 %4392, label %4393, label %4396

4393:                                             ; preds = %4388
  br i1 true, label %4394, label %4395

4394:                                             ; preds = %4393
  br i1 true, label %4407, label %4412

4395:                                             ; preds = %4393
  br i1 true, label %4407, label %4412

4396:                                             ; preds = %4388, %4387, %4386
  %4397 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4398 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4397, i32 0, i32 3
  %4399 = load i64, i64* %4398, align 8
  %4400 = sdiv i64 0, %4399
  %4401 = icmp slt i64 %4400, 3600
  br i1 %4401, label %4407, label %4412

4402:                                             ; preds = %4380
  %4403 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4404 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4403, i32 0, i32 3
  %4405 = load i64, i64* %4404, align 8
  %4406 = icmp ult i64 5124095576030431, %4405
  br i1 %4406, label %4407, label %4412

4407:                                             ; preds = %4402, %4396, %4395, %4394, %4379, %4373, %4367, %4356, %4345, %4340
  %4408 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4409 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4408, i32 0, i32 3
  %4410 = load i64, i64* %4409, align 8
  %4411 = mul i64 %4410, 3600
  store i64 %4411, i64* %59, align 8
  br i1 true, label %5476, label %4580

4412:                                             ; preds = %4402, %4396, %4395, %4394, %4379, %4373, %4367, %4362, %4356, %4345, %4340
  %4413 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4414 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4413, i32 0, i32 3
  %4415 = load i64, i64* %4414, align 8
  %4416 = mul i64 %4415, 3600
  store i64 %4416, i64* %59, align 8
  br i1 false, label %5476, label %4580

4417:                                             ; preds = %4253
  br i1 true, label %4418, label %4496

4418:                                             ; preds = %4417
  br i1 false, label %4419, label %4460

4419:                                             ; preds = %4418
  %4420 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4421 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4420, i32 0, i32 3
  %4422 = load i64, i64* %4421, align 8
  %4423 = icmp slt i64 %4422, 0
  br i1 %4423, label %4424, label %4436

4424:                                             ; preds = %4419
  br i1 true, label %4425, label %4430

4425:                                             ; preds = %4424
  %4426 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4427 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4426, i32 0, i32 3
  %4428 = load i64, i64* %4427, align 8
  %4429 = icmp slt i64 %4428, 2562047788015215
  br i1 %4429, label %4486, label %4491

4430:                                             ; preds = %4424
  %4431 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4432 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4431, i32 0, i32 3
  %4433 = load i64, i64* %4432, align 8
  %4434 = sub nsw i64 -1, %4433
  %4435 = icmp sle i64 -2562047788015215, %4434
  br i1 %4435, label %4486, label %4491

4436:                                             ; preds = %4419
  br i1 false, label %4437, label %4455

4437:                                             ; preds = %4436
  br i1 true, label %4438, label %4444

4438:                                             ; preds = %4437
  %4439 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4440 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4439, i32 0, i32 3
  %4441 = load i64, i64* %4440, align 8
  %4442 = add nsw i64 %4441, -9223372036854775808
  %4443 = icmp slt i64 0, %4442
  br i1 %4443, label %4486, label %4491

4444:                                             ; preds = %4437
  %4445 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4446 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4445, i32 0, i32 3
  %4447 = load i64, i64* %4446, align 8
  %4448 = icmp slt i64 0, %4447
  br i1 %4448, label %4449, label %4491

4449:                                             ; preds = %4444
  %4450 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4451 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4450, i32 0, i32 3
  %4452 = load i64, i64* %4451, align 8
  %4453 = sub nsw i64 %4452, 1
  %4454 = icmp slt i64 9223372036854775807, %4453
  br i1 %4454, label %4486, label %4491

4455:                                             ; preds = %4436
  %4456 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4457 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4456, i32 0, i32 3
  %4458 = load i64, i64* %4457, align 8
  %4459 = icmp slt i64 -2562047788015215, %4458
  br i1 %4459, label %4486, label %4491

4460:                                             ; preds = %4418
  br i1 false, label %4461, label %4462

4461:                                             ; preds = %4460
  br i1 false, label %4486, label %4491

4462:                                             ; preds = %4460
  %4463 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4464 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4463, i32 0, i32 3
  %4465 = load i64, i64* %4464, align 8
  %4466 = icmp slt i64 %4465, 0
  br i1 %4466, label %4467, label %4481

4467:                                             ; preds = %4462
  %4468 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4469 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4468, i32 0, i32 3
  %4470 = load i64, i64* %4469, align 8
  %4471 = icmp eq i64 %4470, -1
  br i1 %4471, label %4472, label %4475

4472:                                             ; preds = %4467
  br i1 true, label %4473, label %4474

4473:                                             ; preds = %4472
  br i1 false, label %4486, label %4491

4474:                                             ; preds = %4472
  br i1 false, label %4486, label %4491

4475:                                             ; preds = %4467
  %4476 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4477 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4476, i32 0, i32 3
  %4478 = load i64, i64* %4477, align 8
  %4479 = sdiv i64 -9223372036854775808, %4478
  %4480 = icmp slt i64 %4479, 3600
  br i1 %4480, label %4486, label %4491

4481:                                             ; preds = %4462
  %4482 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4483 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4482, i32 0, i32 3
  %4484 = load i64, i64* %4483, align 8
  %4485 = icmp slt i64 2562047788015215, %4484
  br i1 %4485, label %4486, label %4491

4486:                                             ; preds = %4481, %4475, %4474, %4473, %4461, %4455, %4449, %4438, %4430, %4425
  %4487 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4488 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4487, i32 0, i32 3
  %4489 = load i64, i64* %4488, align 8
  %4490 = mul i64 %4489, 3600
  store i64 %4490, i64* %59, align 8
  br i1 true, label %5476, label %4580

4491:                                             ; preds = %4481, %4475, %4474, %4473, %4461, %4455, %4449, %4444, %4438, %4430, %4425
  %4492 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4493 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4492, i32 0, i32 3
  %4494 = load i64, i64* %4493, align 8
  %4495 = mul i64 %4494, 3600
  store i64 %4495, i64* %59, align 8
  br i1 false, label %5476, label %4580

4496:                                             ; preds = %4417
  br i1 false, label %4497, label %4541

4497:                                             ; preds = %4496
  %4498 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4499 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4498, i32 0, i32 3
  %4500 = load i64, i64* %4499, align 8
  %4501 = icmp slt i64 %4500, 0
  br i1 %4501, label %4502, label %4514

4502:                                             ; preds = %4497
  br i1 false, label %4503, label %4508

4503:                                             ; preds = %4502
  %4504 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4505 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4504, i32 0, i32 3
  %4506 = load i64, i64* %4505, align 8
  %4507 = icmp ult i64 %4506, 5124095576030431
  br i1 %4507, label %4570, label %4575

4508:                                             ; preds = %4502
  %4509 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4510 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4509, i32 0, i32 3
  %4511 = load i64, i64* %4510, align 8
  %4512 = sub nsw i64 -1, %4511
  %4513 = icmp ule i64 1, %4512
  br i1 %4513, label %4570, label %4575

4514:                                             ; preds = %4497
  br i1 true, label %4515, label %4516

4515:                                             ; preds = %4514
  br i1 false, label %4517, label %4536

4516:                                             ; preds = %4514
  br i1 false, label %4517, label %4536

4517:                                             ; preds = %4516, %4515
  br i1 false, label %4518, label %4536

4518:                                             ; preds = %4517
  br i1 true, label %4519, label %4525

4519:                                             ; preds = %4518
  %4520 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4521 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4520, i32 0, i32 3
  %4522 = load i64, i64* %4521, align 8
  %4523 = add nsw i64 %4522, 0
  %4524 = icmp slt i64 0, %4523
  br i1 %4524, label %4570, label %4575

4525:                                             ; preds = %4518
  %4526 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4527 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4526, i32 0, i32 3
  %4528 = load i64, i64* %4527, align 8
  %4529 = icmp slt i64 0, %4528
  br i1 %4529, label %4530, label %4575

4530:                                             ; preds = %4525
  %4531 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4532 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4531, i32 0, i32 3
  %4533 = load i64, i64* %4532, align 8
  %4534 = sub nsw i64 %4533, 1
  %4535 = icmp slt i64 -1, %4534
  br i1 %4535, label %4570, label %4575

4536:                                             ; preds = %4517, %4516, %4515
  %4537 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4538 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4537, i32 0, i32 3
  %4539 = load i64, i64* %4538, align 8
  %4540 = icmp slt i64 0, %4539
  br i1 %4540, label %4570, label %4575

4541:                                             ; preds = %4496
  br i1 false, label %4542, label %4543

4542:                                             ; preds = %4541
  br i1 false, label %4570, label %4575

4543:                                             ; preds = %4541
  %4544 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4545 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4544, i32 0, i32 3
  %4546 = load i64, i64* %4545, align 8
  %4547 = icmp slt i64 %4546, 0
  br i1 %4547, label %4548, label %4565

4548:                                             ; preds = %4543
  br i1 true, label %4549, label %4550

4549:                                             ; preds = %4548
  br i1 false, label %4551, label %4559

4550:                                             ; preds = %4548
  br i1 false, label %4551, label %4559

4551:                                             ; preds = %4550, %4549
  %4552 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4553 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4552, i32 0, i32 3
  %4554 = load i64, i64* %4553, align 8
  %4555 = icmp eq i64 %4554, -1
  br i1 %4555, label %4556, label %4559

4556:                                             ; preds = %4551
  br i1 true, label %4557, label %4558

4557:                                             ; preds = %4556
  br i1 true, label %4570, label %4575

4558:                                             ; preds = %4556
  br i1 true, label %4570, label %4575

4559:                                             ; preds = %4551, %4550, %4549
  %4560 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4561 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4560, i32 0, i32 3
  %4562 = load i64, i64* %4561, align 8
  %4563 = sdiv i64 0, %4562
  %4564 = icmp slt i64 %4563, 3600
  br i1 %4564, label %4570, label %4575

4565:                                             ; preds = %4543
  %4566 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4567 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4566, i32 0, i32 3
  %4568 = load i64, i64* %4567, align 8
  %4569 = icmp ult i64 5124095576030431, %4568
  br i1 %4569, label %4570, label %4575

4570:                                             ; preds = %4565, %4559, %4558, %4557, %4542, %4536, %4530, %4519, %4508, %4503
  %4571 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4572 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4571, i32 0, i32 3
  %4573 = load i64, i64* %4572, align 8
  %4574 = mul i64 %4573, 3600
  store i64 %4574, i64* %59, align 8
  br i1 true, label %5476, label %4580

4575:                                             ; preds = %4565, %4559, %4558, %4557, %4542, %4536, %4530, %4525, %4519, %4508, %4503
  %4576 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4577 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4576, i32 0, i32 3
  %4578 = load i64, i64* %4577, align 8
  %4579 = mul i64 %4578, 3600
  store i64 %4579, i64* %59, align 8
  br i1 false, label %5476, label %4580

4580:                                             ; preds = %4575, %4570, %4491, %4486, %4412, %4407, %4328, %4323, %4246, %4239, %4158, %4151, %4070, %4062, %3980, %3972, %3888, %3880, %3798, %3790
  %4581 = load i64, i64* %22, align 8
  %4582 = load i64, i64* %59, align 8
  %4583 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %4581, i64 %4582)
  %4584 = extractvalue { i64, i1 } %4583, 1
  %4585 = extractvalue { i64, i1 } %4583, 0
  store i64 %4585, i64* %60, align 8
  br i1 %4584, label %5476, label %4586

4586:                                             ; preds = %4580
  br i1 false, label %4587, label %4768

4587:                                             ; preds = %4586
  br i1 false, label %4678, label %4588

4588:                                             ; preds = %4587
  br i1 false, label %4589, label %4633

4589:                                             ; preds = %4588
  %4590 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4591 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4590, i32 0, i32 4
  %4592 = load i64, i64* %4591, align 8
  %4593 = icmp slt i64 %4592, 0
  br i1 %4593, label %4594, label %4606

4594:                                             ; preds = %4589
  br i1 true, label %4595, label %4600

4595:                                             ; preds = %4594
  %4596 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4597 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4596, i32 0, i32 4
  %4598 = load i64, i64* %4597, align 8
  %4599 = icmp slt i64 %4598, 2
  br i1 %4599, label %4662, label %4670

4600:                                             ; preds = %4594
  %4601 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4602 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4601, i32 0, i32 4
  %4603 = load i64, i64* %4602, align 8
  %4604 = sub nsw i64 -1, %4603
  %4605 = icmp sle i64 -2, %4604
  br i1 %4605, label %4662, label %4670

4606:                                             ; preds = %4589
  br i1 true, label %4607, label %4608

4607:                                             ; preds = %4606
  br i1 false, label %4609, label %4628

4608:                                             ; preds = %4606
  br i1 false, label %4609, label %4628

4609:                                             ; preds = %4608, %4607
  br i1 false, label %4610, label %4628

4610:                                             ; preds = %4609
  br i1 true, label %4611, label %4617

4611:                                             ; preds = %4610
  %4612 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4613 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4612, i32 0, i32 4
  %4614 = load i64, i64* %4613, align 8
  %4615 = add nsw i64 %4614, -128
  %4616 = icmp slt i64 0, %4615
  br i1 %4616, label %4662, label %4670

4617:                                             ; preds = %4610
  %4618 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4619 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4618, i32 0, i32 4
  %4620 = load i64, i64* %4619, align 8
  %4621 = icmp slt i64 0, %4620
  br i1 %4621, label %4622, label %4670

4622:                                             ; preds = %4617
  %4623 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4624 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4623, i32 0, i32 4
  %4625 = load i64, i64* %4624, align 8
  %4626 = sub nsw i64 %4625, 1
  %4627 = icmp slt i64 127, %4626
  br i1 %4627, label %4662, label %4670

4628:                                             ; preds = %4609, %4608, %4607
  %4629 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4630 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4629, i32 0, i32 4
  %4631 = load i64, i64* %4630, align 8
  %4632 = icmp slt i64 -2, %4631
  br i1 %4632, label %4662, label %4670

4633:                                             ; preds = %4588
  br i1 false, label %4634, label %4635

4634:                                             ; preds = %4633
  br i1 false, label %4662, label %4670

4635:                                             ; preds = %4633
  %4636 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4637 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4636, i32 0, i32 4
  %4638 = load i64, i64* %4637, align 8
  %4639 = icmp slt i64 %4638, 0
  br i1 %4639, label %4640, label %4657

4640:                                             ; preds = %4635
  br i1 true, label %4641, label %4642

4641:                                             ; preds = %4640
  br i1 false, label %4643, label %4651

4642:                                             ; preds = %4640
  br i1 false, label %4643, label %4651

4643:                                             ; preds = %4642, %4641
  %4644 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4645 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4644, i32 0, i32 4
  %4646 = load i64, i64* %4645, align 8
  %4647 = icmp eq i64 %4646, -1
  br i1 %4647, label %4648, label %4651

4648:                                             ; preds = %4643
  br i1 true, label %4649, label %4650

4649:                                             ; preds = %4648
  br i1 false, label %4662, label %4670

4650:                                             ; preds = %4648
  br i1 false, label %4662, label %4670

4651:                                             ; preds = %4643, %4642, %4641
  %4652 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4653 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4652, i32 0, i32 4
  %4654 = load i64, i64* %4653, align 8
  %4655 = sdiv i64 -128, %4654
  %4656 = icmp slt i64 %4655, 60
  br i1 %4656, label %4662, label %4670

4657:                                             ; preds = %4635
  %4658 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4659 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4658, i32 0, i32 4
  %4660 = load i64, i64* %4659, align 8
  %4661 = icmp slt i64 2, %4660
  br i1 %4661, label %4662, label %4670

4662:                                             ; preds = %4657, %4651, %4650, %4649, %4634, %4628, %4622, %4611, %4600, %4595
  %4663 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4664 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4663, i32 0, i32 4
  %4665 = load i64, i64* %4664, align 8
  %4666 = trunc i64 %4665 to i32
  %4667 = mul i32 %4666, 60
  %4668 = trunc i32 %4667 to i8
  %4669 = sext i8 %4668 to i64
  store i64 %4669, i64* %61, align 8
  br i1 true, label %5476, label %5452

4670:                                             ; preds = %4657, %4651, %4650, %4649, %4634, %4628, %4622, %4617, %4611, %4600, %4595
  %4671 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4672 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4671, i32 0, i32 4
  %4673 = load i64, i64* %4672, align 8
  %4674 = trunc i64 %4673 to i32
  %4675 = mul i32 %4674, 60
  %4676 = trunc i32 %4675 to i8
  %4677 = sext i8 %4676 to i64
  store i64 %4677, i64* %61, align 8
  br i1 false, label %5476, label %5452

4678:                                             ; preds = %4587
  br i1 false, label %4679, label %4723

4679:                                             ; preds = %4678
  %4680 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4681 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4680, i32 0, i32 4
  %4682 = load i64, i64* %4681, align 8
  %4683 = icmp slt i64 %4682, 0
  br i1 %4683, label %4684, label %4696

4684:                                             ; preds = %4679
  br i1 true, label %4685, label %4690

4685:                                             ; preds = %4684
  %4686 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4687 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4686, i32 0, i32 4
  %4688 = load i64, i64* %4687, align 8
  %4689 = icmp slt i64 %4688, 4
  br i1 %4689, label %4752, label %4760

4690:                                             ; preds = %4684
  %4691 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4692 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4691, i32 0, i32 4
  %4693 = load i64, i64* %4692, align 8
  %4694 = sub nsw i64 -1, %4693
  %4695 = icmp sle i64 -4, %4694
  br i1 %4695, label %4752, label %4760

4696:                                             ; preds = %4679
  br i1 true, label %4697, label %4698

4697:                                             ; preds = %4696
  br i1 false, label %4699, label %4718

4698:                                             ; preds = %4696
  br i1 false, label %4699, label %4718

4699:                                             ; preds = %4698, %4697
  br i1 false, label %4700, label %4718

4700:                                             ; preds = %4699
  br i1 true, label %4701, label %4707

4701:                                             ; preds = %4700
  %4702 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4703 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4702, i32 0, i32 4
  %4704 = load i64, i64* %4703, align 8
  %4705 = add nsw i64 %4704, 0
  %4706 = icmp slt i64 0, %4705
  br i1 %4706, label %4752, label %4760

4707:                                             ; preds = %4700
  %4708 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4709 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4708, i32 0, i32 4
  %4710 = load i64, i64* %4709, align 8
  %4711 = icmp slt i64 0, %4710
  br i1 %4711, label %4712, label %4760

4712:                                             ; preds = %4707
  %4713 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4714 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4713, i32 0, i32 4
  %4715 = load i64, i64* %4714, align 8
  %4716 = sub nsw i64 %4715, 1
  %4717 = icmp slt i64 -1, %4716
  br i1 %4717, label %4752, label %4760

4718:                                             ; preds = %4699, %4698, %4697
  %4719 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4720 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4719, i32 0, i32 4
  %4721 = load i64, i64* %4720, align 8
  %4722 = icmp slt i64 0, %4721
  br i1 %4722, label %4752, label %4760

4723:                                             ; preds = %4678
  br i1 false, label %4724, label %4725

4724:                                             ; preds = %4723
  br i1 false, label %4752, label %4760

4725:                                             ; preds = %4723
  %4726 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4727 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4726, i32 0, i32 4
  %4728 = load i64, i64* %4727, align 8
  %4729 = icmp slt i64 %4728, 0
  br i1 %4729, label %4730, label %4747

4730:                                             ; preds = %4725
  br i1 true, label %4731, label %4732

4731:                                             ; preds = %4730
  br i1 false, label %4733, label %4741

4732:                                             ; preds = %4730
  br i1 false, label %4733, label %4741

4733:                                             ; preds = %4732, %4731
  %4734 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4735 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4734, i32 0, i32 4
  %4736 = load i64, i64* %4735, align 8
  %4737 = icmp eq i64 %4736, -1
  br i1 %4737, label %4738, label %4741

4738:                                             ; preds = %4733
  br i1 true, label %4739, label %4740

4739:                                             ; preds = %4738
  br i1 true, label %4752, label %4760

4740:                                             ; preds = %4738
  br i1 true, label %4752, label %4760

4741:                                             ; preds = %4733, %4732, %4731
  %4742 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4743 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4742, i32 0, i32 4
  %4744 = load i64, i64* %4743, align 8
  %4745 = sdiv i64 0, %4744
  %4746 = icmp slt i64 %4745, 60
  br i1 %4746, label %4752, label %4760

4747:                                             ; preds = %4725
  %4748 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4749 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4748, i32 0, i32 4
  %4750 = load i64, i64* %4749, align 8
  %4751 = icmp slt i64 4, %4750
  br i1 %4751, label %4752, label %4760

4752:                                             ; preds = %4747, %4741, %4740, %4739, %4724, %4718, %4712, %4701, %4690, %4685
  %4753 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4754 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4753, i32 0, i32 4
  %4755 = load i64, i64* %4754, align 8
  %4756 = trunc i64 %4755 to i32
  %4757 = mul i32 %4756, 60
  %4758 = trunc i32 %4757 to i8
  %4759 = zext i8 %4758 to i64
  store i64 %4759, i64* %61, align 8
  br i1 true, label %5476, label %5452

4760:                                             ; preds = %4747, %4741, %4740, %4739, %4724, %4718, %4712, %4707, %4701, %4690, %4685
  %4761 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4762 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4761, i32 0, i32 4
  %4763 = load i64, i64* %4762, align 8
  %4764 = trunc i64 %4763 to i32
  %4765 = mul i32 %4764, 60
  %4766 = trunc i32 %4765 to i8
  %4767 = zext i8 %4766 to i64
  store i64 %4767, i64* %61, align 8
  br i1 false, label %5476, label %5452

4768:                                             ; preds = %4586
  br i1 false, label %4769, label %4950

4769:                                             ; preds = %4768
  br i1 false, label %4860, label %4770

4770:                                             ; preds = %4769
  br i1 false, label %4771, label %4815

4771:                                             ; preds = %4770
  %4772 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4773 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4772, i32 0, i32 4
  %4774 = load i64, i64* %4773, align 8
  %4775 = icmp slt i64 %4774, 0
  br i1 %4775, label %4776, label %4788

4776:                                             ; preds = %4771
  br i1 true, label %4777, label %4782

4777:                                             ; preds = %4776
  %4778 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4779 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4778, i32 0, i32 4
  %4780 = load i64, i64* %4779, align 8
  %4781 = icmp slt i64 %4780, 546
  br i1 %4781, label %4844, label %4852

4782:                                             ; preds = %4776
  %4783 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4784 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4783, i32 0, i32 4
  %4785 = load i64, i64* %4784, align 8
  %4786 = sub nsw i64 -1, %4785
  %4787 = icmp sle i64 -546, %4786
  br i1 %4787, label %4844, label %4852

4788:                                             ; preds = %4771
  br i1 true, label %4789, label %4790

4789:                                             ; preds = %4788
  br i1 false, label %4791, label %4810

4790:                                             ; preds = %4788
  br i1 false, label %4791, label %4810

4791:                                             ; preds = %4790, %4789
  br i1 false, label %4792, label %4810

4792:                                             ; preds = %4791
  br i1 true, label %4793, label %4799

4793:                                             ; preds = %4792
  %4794 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4795 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4794, i32 0, i32 4
  %4796 = load i64, i64* %4795, align 8
  %4797 = add nsw i64 %4796, -32768
  %4798 = icmp slt i64 0, %4797
  br i1 %4798, label %4844, label %4852

4799:                                             ; preds = %4792
  %4800 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4801 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4800, i32 0, i32 4
  %4802 = load i64, i64* %4801, align 8
  %4803 = icmp slt i64 0, %4802
  br i1 %4803, label %4804, label %4852

4804:                                             ; preds = %4799
  %4805 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4806 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4805, i32 0, i32 4
  %4807 = load i64, i64* %4806, align 8
  %4808 = sub nsw i64 %4807, 1
  %4809 = icmp slt i64 32767, %4808
  br i1 %4809, label %4844, label %4852

4810:                                             ; preds = %4791, %4790, %4789
  %4811 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4812 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4811, i32 0, i32 4
  %4813 = load i64, i64* %4812, align 8
  %4814 = icmp slt i64 -546, %4813
  br i1 %4814, label %4844, label %4852

4815:                                             ; preds = %4770
  br i1 false, label %4816, label %4817

4816:                                             ; preds = %4815
  br i1 false, label %4844, label %4852

4817:                                             ; preds = %4815
  %4818 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4819 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4818, i32 0, i32 4
  %4820 = load i64, i64* %4819, align 8
  %4821 = icmp slt i64 %4820, 0
  br i1 %4821, label %4822, label %4839

4822:                                             ; preds = %4817
  br i1 true, label %4823, label %4824

4823:                                             ; preds = %4822
  br i1 false, label %4825, label %4833

4824:                                             ; preds = %4822
  br i1 false, label %4825, label %4833

4825:                                             ; preds = %4824, %4823
  %4826 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4827 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4826, i32 0, i32 4
  %4828 = load i64, i64* %4827, align 8
  %4829 = icmp eq i64 %4828, -1
  br i1 %4829, label %4830, label %4833

4830:                                             ; preds = %4825
  br i1 true, label %4831, label %4832

4831:                                             ; preds = %4830
  br i1 false, label %4844, label %4852

4832:                                             ; preds = %4830
  br i1 false, label %4844, label %4852

4833:                                             ; preds = %4825, %4824, %4823
  %4834 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4835 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4834, i32 0, i32 4
  %4836 = load i64, i64* %4835, align 8
  %4837 = sdiv i64 -32768, %4836
  %4838 = icmp slt i64 %4837, 60
  br i1 %4838, label %4844, label %4852

4839:                                             ; preds = %4817
  %4840 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4841 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4840, i32 0, i32 4
  %4842 = load i64, i64* %4841, align 8
  %4843 = icmp slt i64 546, %4842
  br i1 %4843, label %4844, label %4852

4844:                                             ; preds = %4839, %4833, %4832, %4831, %4816, %4810, %4804, %4793, %4782, %4777
  %4845 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4846 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4845, i32 0, i32 4
  %4847 = load i64, i64* %4846, align 8
  %4848 = trunc i64 %4847 to i32
  %4849 = mul i32 %4848, 60
  %4850 = trunc i32 %4849 to i16
  %4851 = sext i16 %4850 to i64
  store i64 %4851, i64* %61, align 8
  br i1 true, label %5476, label %5452

4852:                                             ; preds = %4839, %4833, %4832, %4831, %4816, %4810, %4804, %4799, %4793, %4782, %4777
  %4853 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4854 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4853, i32 0, i32 4
  %4855 = load i64, i64* %4854, align 8
  %4856 = trunc i64 %4855 to i32
  %4857 = mul i32 %4856, 60
  %4858 = trunc i32 %4857 to i16
  %4859 = sext i16 %4858 to i64
  store i64 %4859, i64* %61, align 8
  br i1 false, label %5476, label %5452

4860:                                             ; preds = %4769
  br i1 false, label %4861, label %4905

4861:                                             ; preds = %4860
  %4862 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4863 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4862, i32 0, i32 4
  %4864 = load i64, i64* %4863, align 8
  %4865 = icmp slt i64 %4864, 0
  br i1 %4865, label %4866, label %4878

4866:                                             ; preds = %4861
  br i1 true, label %4867, label %4872

4867:                                             ; preds = %4866
  %4868 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4869 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4868, i32 0, i32 4
  %4870 = load i64, i64* %4869, align 8
  %4871 = icmp slt i64 %4870, 1092
  br i1 %4871, label %4934, label %4942

4872:                                             ; preds = %4866
  %4873 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4874 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4873, i32 0, i32 4
  %4875 = load i64, i64* %4874, align 8
  %4876 = sub nsw i64 -1, %4875
  %4877 = icmp sle i64 -1092, %4876
  br i1 %4877, label %4934, label %4942

4878:                                             ; preds = %4861
  br i1 true, label %4879, label %4880

4879:                                             ; preds = %4878
  br i1 false, label %4881, label %4900

4880:                                             ; preds = %4878
  br i1 false, label %4881, label %4900

4881:                                             ; preds = %4880, %4879
  br i1 false, label %4882, label %4900

4882:                                             ; preds = %4881
  br i1 true, label %4883, label %4889

4883:                                             ; preds = %4882
  %4884 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4885 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4884, i32 0, i32 4
  %4886 = load i64, i64* %4885, align 8
  %4887 = add nsw i64 %4886, 0
  %4888 = icmp slt i64 0, %4887
  br i1 %4888, label %4934, label %4942

4889:                                             ; preds = %4882
  %4890 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4891 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4890, i32 0, i32 4
  %4892 = load i64, i64* %4891, align 8
  %4893 = icmp slt i64 0, %4892
  br i1 %4893, label %4894, label %4942

4894:                                             ; preds = %4889
  %4895 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4896 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4895, i32 0, i32 4
  %4897 = load i64, i64* %4896, align 8
  %4898 = sub nsw i64 %4897, 1
  %4899 = icmp slt i64 -1, %4898
  br i1 %4899, label %4934, label %4942

4900:                                             ; preds = %4881, %4880, %4879
  %4901 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4902 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4901, i32 0, i32 4
  %4903 = load i64, i64* %4902, align 8
  %4904 = icmp slt i64 0, %4903
  br i1 %4904, label %4934, label %4942

4905:                                             ; preds = %4860
  br i1 false, label %4906, label %4907

4906:                                             ; preds = %4905
  br i1 false, label %4934, label %4942

4907:                                             ; preds = %4905
  %4908 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4909 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4908, i32 0, i32 4
  %4910 = load i64, i64* %4909, align 8
  %4911 = icmp slt i64 %4910, 0
  br i1 %4911, label %4912, label %4929

4912:                                             ; preds = %4907
  br i1 true, label %4913, label %4914

4913:                                             ; preds = %4912
  br i1 false, label %4915, label %4923

4914:                                             ; preds = %4912
  br i1 false, label %4915, label %4923

4915:                                             ; preds = %4914, %4913
  %4916 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4917 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4916, i32 0, i32 4
  %4918 = load i64, i64* %4917, align 8
  %4919 = icmp eq i64 %4918, -1
  br i1 %4919, label %4920, label %4923

4920:                                             ; preds = %4915
  br i1 true, label %4921, label %4922

4921:                                             ; preds = %4920
  br i1 true, label %4934, label %4942

4922:                                             ; preds = %4920
  br i1 true, label %4934, label %4942

4923:                                             ; preds = %4915, %4914, %4913
  %4924 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4925 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4924, i32 0, i32 4
  %4926 = load i64, i64* %4925, align 8
  %4927 = sdiv i64 0, %4926
  %4928 = icmp slt i64 %4927, 60
  br i1 %4928, label %4934, label %4942

4929:                                             ; preds = %4907
  %4930 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4931 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4930, i32 0, i32 4
  %4932 = load i64, i64* %4931, align 8
  %4933 = icmp slt i64 1092, %4932
  br i1 %4933, label %4934, label %4942

4934:                                             ; preds = %4929, %4923, %4922, %4921, %4906, %4900, %4894, %4883, %4872, %4867
  %4935 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4936 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4935, i32 0, i32 4
  %4937 = load i64, i64* %4936, align 8
  %4938 = trunc i64 %4937 to i32
  %4939 = mul i32 %4938, 60
  %4940 = trunc i32 %4939 to i16
  %4941 = zext i16 %4940 to i64
  store i64 %4941, i64* %61, align 8
  br i1 true, label %5476, label %5452

4942:                                             ; preds = %4929, %4923, %4922, %4921, %4906, %4900, %4894, %4889, %4883, %4872, %4867
  %4943 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4944 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4943, i32 0, i32 4
  %4945 = load i64, i64* %4944, align 8
  %4946 = trunc i64 %4945 to i32
  %4947 = mul i32 %4946, 60
  %4948 = trunc i32 %4947 to i16
  %4949 = zext i16 %4948 to i64
  store i64 %4949, i64* %61, align 8
  br i1 false, label %5476, label %5452

4950:                                             ; preds = %4768
  br i1 false, label %4951, label %5125

4951:                                             ; preds = %4950
  br i1 true, label %4952, label %5037

4952:                                             ; preds = %4951
  br i1 false, label %4953, label %4994

4953:                                             ; preds = %4952
  %4954 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4955 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4954, i32 0, i32 4
  %4956 = load i64, i64* %4955, align 8
  %4957 = icmp slt i64 %4956, 0
  br i1 %4957, label %4958, label %4970

4958:                                             ; preds = %4953
  br i1 true, label %4959, label %4964

4959:                                             ; preds = %4958
  %4960 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4961 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4960, i32 0, i32 4
  %4962 = load i64, i64* %4961, align 8
  %4963 = icmp slt i64 %4962, 35791394
  br i1 %4963, label %5023, label %5030

4964:                                             ; preds = %4958
  %4965 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4966 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4965, i32 0, i32 4
  %4967 = load i64, i64* %4966, align 8
  %4968 = sub nsw i64 -1, %4967
  %4969 = icmp sle i64 -35791394, %4968
  br i1 %4969, label %5023, label %5030

4970:                                             ; preds = %4953
  br i1 false, label %4971, label %4989

4971:                                             ; preds = %4970
  br i1 true, label %4972, label %4978

4972:                                             ; preds = %4971
  %4973 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4974 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4973, i32 0, i32 4
  %4975 = load i64, i64* %4974, align 8
  %4976 = add nsw i64 %4975, -2147483648
  %4977 = icmp slt i64 0, %4976
  br i1 %4977, label %5023, label %5030

4978:                                             ; preds = %4971
  %4979 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4980 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4979, i32 0, i32 4
  %4981 = load i64, i64* %4980, align 8
  %4982 = icmp slt i64 0, %4981
  br i1 %4982, label %4983, label %5030

4983:                                             ; preds = %4978
  %4984 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4985 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4984, i32 0, i32 4
  %4986 = load i64, i64* %4985, align 8
  %4987 = sub nsw i64 %4986, 1
  %4988 = icmp slt i64 2147483647, %4987
  br i1 %4988, label %5023, label %5030

4989:                                             ; preds = %4970
  %4990 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4991 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4990, i32 0, i32 4
  %4992 = load i64, i64* %4991, align 8
  %4993 = icmp slt i64 -35791394, %4992
  br i1 %4993, label %5023, label %5030

4994:                                             ; preds = %4952
  br i1 false, label %4995, label %4996

4995:                                             ; preds = %4994
  br i1 false, label %5023, label %5030

4996:                                             ; preds = %4994
  %4997 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %4998 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %4997, i32 0, i32 4
  %4999 = load i64, i64* %4998, align 8
  %5000 = icmp slt i64 %4999, 0
  br i1 %5000, label %5001, label %5018

5001:                                             ; preds = %4996
  br i1 true, label %5002, label %5003

5002:                                             ; preds = %5001
  br i1 false, label %5004, label %5012

5003:                                             ; preds = %5001
  br i1 false, label %5004, label %5012

5004:                                             ; preds = %5003, %5002
  %5005 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %5006 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %5005, i32 0, i32 4
  %5007 = load i64, i64* %5006, align 8
  %5008 = icmp eq i64 %5007, -1
  br i1 %5008, label %5009, label %5012

5009:                                             ; preds = %5004
  br i1 true, label %5010, label %5011

5010:                                             ; preds = %5009
  br i1 false, label %5023, label %5030

5011:                                             ; preds = %5009
  br i1 false, label %5023, label %5030

5012:                                             ; preds = %5004, %5003, %5002
  %5013 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %5014 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %5013, i32 0, i32 4
  %5015 = load i64, i64* %5014, align 8
  %5016 = sdiv i64 -2147483648, %5015
  %5017 = icmp slt i64 %5016, 60
  br i1 %5017, label %5023, label %5030

5018:                                             ; preds = %4996
  %5019 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %5020 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %5019, i32 0, i32 4
  %5021 = load i64, i64* %5020, align 8
  %5022 = icmp slt i64 35791394, %5021
  br i1 %5022, label %5023, label %5030

5023:                                             ; preds = %5018, %5012, %5011, %5010, %4995, %4989, %4983, %4972, %4964, %4959
  %5024 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %5025 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %5024, i32 0, i32 4
  %5026 = load i64, i64* %5025, align 8
  %5027 = trunc i64 %5026 to i32
  %5028 = mul i32 %5027, 60
  %5029 = sext i32 %5028 to i64
  store i64 %5029, i64* %61, align 8
  br i1 true, label %5476, label %5452

5030:                                             ; preds = %5018, %5012, %5011, %5010, %4995, %4989, %4983, %4978, %4972, %4964, %4959
  %5031 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %5032 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %5031, i32 0, i32 4
  %5033 = load i64, i64* %5032, align 8
  %5034 = trunc i64 %5033 to i32
  %5035 = mul i32 %5034, 60
  %5036 = sext i32 %5035 to i64
  store i64 %5036, i64* %61, align 8
  br i1 false, label %5476, label %5452

5037:                                             ; preds = %4951
  br i1 false, label %5038, label %5082

5038:                                             ; preds = %5037
  %5039 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %5040 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %5039, i32 0, i32 4
  %5041 = load i64, i64* %5040, align 8
  %5042 = icmp slt i64 %5041, 0
  br i1 %5042, label %5043, label %5055

5043:                                             ; preds = %5038
  br i1 false, label %5044, label %5049

5044:                                             ; preds = %5043
  %5045 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %5046 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %5045, i32 0, i32 4
  %5047 = load i64, i64* %5046, align 8
  %5048 = icmp slt i64 %5047, 71582788
  br i1 %5048, label %5111, label %5118

5049:                                             ; preds = %5043
  %5050 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %5051 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %5050, i32 0, i32 4
  %5052 = load i64, i64* %5051, align 8
  %5053 = sub nsw i64 -1, %5052
  %5054 = icmp sle i64 1, %5053
  br i1 %5054, label %5111, label %5118

5055:                                             ; preds = %5038
  br i1 true, label %5056, label %5057

5056:                                             ; preds = %5055
  br i1 false, label %5058, label %5077

5057:                                             ; preds = %5055
  br i1 false, label %5058, label %5077

5058:                                             ; preds = %5057, %5056
  br i1 false, label %5059, label %5077

5059:                                             ; preds = %5058
  br i1 true, label %5060, label %5066

5060:                                             ; preds = %5059
  %5061 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %5062 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %5061, i32 0, i32 4
  %5063 = load i64, i64* %5062, align 8
  %5064 = add nsw i64 %5063, 0
  %5065 = icmp slt i64 0, %5064
  br i1 %5065, label %5111, label %5118

5066:                                             ; preds = %5059
  %5067 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %5068 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %5067, i32 0, i32 4
  %5069 = load i64, i64* %5068, align 8
  %5070 = icmp slt i64 0, %5069
  br i1 %5070, label %5071, label %5118

5071:                                             ; preds = %5066
  %5072 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %5073 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %5072, i32 0, i32 4
  %5074 = load i64, i64* %5073, align 8
  %5075 = sub nsw i64 %5074, 1
  %5076 = icmp slt i64 -1, %5075
  br i1 %5076, label %5111, label %5118

5077:                                             ; preds = %5058, %5057, %5056
  %5078 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %5079 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %5078, i32 0, i32 4
  %5080 = load i64, i64* %5079, align 8
  %5081 = icmp slt i64 0, %5080
  br i1 %5081, label %5111, label %5118

5082:                                             ; preds = %5037
  br i1 false, label %5083, label %5084

5083:                                             ; preds = %5082
  br i1 false, label %5111, label %5118

5084:                                             ; preds = %5082
  %5085 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %5086 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %5085, i32 0, i32 4
  %5087 = load i64, i64* %5086, align 8
  %5088 = icmp slt i64 %5087, 0
  br i1 %5088, label %5089, label %5106

5089:                                             ; preds = %5084
  br i1 true, label %5090, label %5091

5090:                                             ; preds = %5089
  br i1 false, label %5092, label %5100

5091:                                             ; preds = %5089
  br i1 false, label %5092, label %5100

5092:                                             ; preds = %5091, %5090
  %5093 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %5094 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %5093, i32 0, i32 4
  %5095 = load i64, i64* %5094, align 8
  %5096 = icmp eq i64 %5095, -1
  br i1 %5096, label %5097, label %5100

5097:                                             ; preds = %5092
  br i1 true, label %5098, label %5099

5098:                                             ; preds = %5097
  br i1 true, label %5111, label %5118

5099:                                             ; preds = %5097
  br i1 true, label %5111, label %5118

5100:                                             ; preds = %5092, %5091, %5090
  %5101 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %5102 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %5101, i32 0, i32 4
  %5103 = load i64, i64* %5102, align 8
  %5104 = sdiv i64 0, %5103
  %5105 = icmp slt i64 %5104, 60
  br i1 %5105, label %5111, label %5118

5106:                                             ; preds = %5084
  %5107 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %5108 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %5107, i32 0, i32 4
  %5109 = load i64, i64* %5108, align 8
  %5110 = icmp slt i64 71582788, %5109
  br i1 %5110, label %5111, label %5118

5111:                                             ; preds = %5106, %5100, %5099, %5098, %5083, %5077, %5071, %5060, %5049, %5044
  %5112 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %5113 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %5112, i32 0, i32 4
  %5114 = load i64, i64* %5113, align 8
  %5115 = trunc i64 %5114 to i32
  %5116 = mul i32 %5115, 60
  %5117 = zext i32 %5116 to i64
  store i64 %5117, i64* %61, align 8
  br i1 true, label %5476, label %5452

5118:                                             ; preds = %5106, %5100, %5099, %5098, %5083, %5077, %5071, %5066, %5060, %5049, %5044
  %5119 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %5120 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %5119, i32 0, i32 4
  %5121 = load i64, i64* %5120, align 8
  %5122 = trunc i64 %5121 to i32
  %5123 = mul i32 %5122, 60
  %5124 = zext i32 %5123 to i64
  store i64 %5124, i64* %61, align 8
  br i1 false, label %5476, label %5452

5125:                                             ; preds = %4950
  br i1 true, label %5126, label %5289

5126:                                             ; preds = %5125
  br i1 true, label %5127, label %5205

5127:                                             ; preds = %5126
  br i1 false, label %5128, label %5169

5128:                                             ; preds = %5127
  %5129 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %5130 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %5129, i32 0, i32 4
  %5131 = load i64, i64* %5130, align 8
  %5132 = icmp slt i64 %5131, 0
  br i1 %5132, label %5133, label %5145

5133:                                             ; preds = %5128
  br i1 true, label %5134, label %5139

5134:                                             ; preds = %5133
  %5135 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %5136 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %5135, i32 0, i32 4
  %5137 = load i64, i64* %5136, align 8
  %5138 = icmp slt i64 %5137, 153722867280912930
  br i1 %5138, label %5195, label %5200

5139:                                             ; preds = %5133
  %5140 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %5141 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %5140, i32 0, i32 4
  %5142 = load i64, i64* %5141, align 8
  %5143 = sub nsw i64 -1, %5142
  %5144 = icmp sle i64 -153722867280912930, %5143
  br i1 %5144, label %5195, label %5200

5145:                                             ; preds = %5128
  br i1 false, label %5146, label %5164

5146:                                             ; preds = %5145
  br i1 true, label %5147, label %5153

5147:                                             ; preds = %5146
  %5148 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %5149 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %5148, i32 0, i32 4
  %5150 = load i64, i64* %5149, align 8
  %5151 = add nsw i64 %5150, -9223372036854775808
  %5152 = icmp slt i64 0, %5151
  br i1 %5152, label %5195, label %5200

5153:                                             ; preds = %5146
  %5154 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %5155 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %5154, i32 0, i32 4
  %5156 = load i64, i64* %5155, align 8
  %5157 = icmp slt i64 0, %5156
  br i1 %5157, label %5158, label %5200

5158:                                             ; preds = %5153
  %5159 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %5160 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %5159, i32 0, i32 4
  %5161 = load i64, i64* %5160, align 8
  %5162 = sub nsw i64 %5161, 1
  %5163 = icmp slt i64 9223372036854775807, %5162
  br i1 %5163, label %5195, label %5200

5164:                                             ; preds = %5145
  %5165 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %5166 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %5165, i32 0, i32 4
  %5167 = load i64, i64* %5166, align 8
  %5168 = icmp slt i64 -153722867280912930, %5167
  br i1 %5168, label %5195, label %5200

5169:                                             ; preds = %5127
  br i1 false, label %5170, label %5171

5170:                                             ; preds = %5169
  br i1 false, label %5195, label %5200

5171:                                             ; preds = %5169
  %5172 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %5173 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %5172, i32 0, i32 4
  %5174 = load i64, i64* %5173, align 8
  %5175 = icmp slt i64 %5174, 0
  br i1 %5175, label %5176, label %5190

5176:                                             ; preds = %5171
  %5177 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %5178 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %5177, i32 0, i32 4
  %5179 = load i64, i64* %5178, align 8
  %5180 = icmp eq i64 %5179, -1
  br i1 %5180, label %5181, label %5184

5181:                                             ; preds = %5176
  br i1 true, label %5182, label %5183

5182:                                             ; preds = %5181
  br i1 false, label %5195, label %5200

5183:                                             ; preds = %5181
  br i1 false, label %5195, label %5200

5184:                                             ; preds = %5176
  %5185 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %5186 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %5185, i32 0, i32 4
  %5187 = load i64, i64* %5186, align 8
  %5188 = sdiv i64 -9223372036854775808, %5187
  %5189 = icmp slt i64 %5188, 60
  br i1 %5189, label %5195, label %5200

5190:                                             ; preds = %5171
  %5191 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %5192 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %5191, i32 0, i32 4
  %5193 = load i64, i64* %5192, align 8
  %5194 = icmp slt i64 153722867280912930, %5193
  br i1 %5194, label %5195, label %5200

5195:                                             ; preds = %5190, %5184, %5183, %5182, %5170, %5164, %5158, %5147, %5139, %5134
  %5196 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %5197 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %5196, i32 0, i32 4
  %5198 = load i64, i64* %5197, align 8
  %5199 = mul i64 %5198, 60
  store i64 %5199, i64* %61, align 8
  br i1 true, label %5476, label %5452

5200:                                             ; preds = %5190, %5184, %5183, %5182, %5170, %5164, %5158, %5153, %5147, %5139, %5134
  %5201 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %5202 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %5201, i32 0, i32 4
  %5203 = load i64, i64* %5202, align 8
  %5204 = mul i64 %5203, 60
  store i64 %5204, i64* %61, align 8
  br i1 false, label %5476, label %5452

5205:                                             ; preds = %5126
  br i1 false, label %5206, label %5250

5206:                                             ; preds = %5205
  %5207 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %5208 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %5207, i32 0, i32 4
  %5209 = load i64, i64* %5208, align 8
  %5210 = icmp slt i64 %5209, 0
  br i1 %5210, label %5211, label %5223

5211:                                             ; preds = %5206
  br i1 false, label %5212, label %5217

5212:                                             ; preds = %5211
  %5213 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %5214 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %5213, i32 0, i32 4
  %5215 = load i64, i64* %5214, align 8
  %5216 = icmp ult i64 %5215, 307445734561825860
  br i1 %5216, label %5279, label %5284

5217:                                             ; preds = %5211
  %5218 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %5219 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %5218, i32 0, i32 4
  %5220 = load i64, i64* %5219, align 8
  %5221 = sub nsw i64 -1, %5220
  %5222 = icmp ule i64 1, %5221
  br i1 %5222, label %5279, label %5284

5223:                                             ; preds = %5206
  br i1 true, label %5224, label %5225

5224:                                             ; preds = %5223
  br i1 false, label %5226, label %5245

5225:                                             ; preds = %5223
  br i1 false, label %5226, label %5245

5226:                                             ; preds = %5225, %5224
  br i1 false, label %5227, label %5245

5227:                                             ; preds = %5226
  br i1 true, label %5228, label %5234

5228:                                             ; preds = %5227
  %5229 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %5230 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %5229, i32 0, i32 4
  %5231 = load i64, i64* %5230, align 8
  %5232 = add nsw i64 %5231, 0
  %5233 = icmp slt i64 0, %5232
  br i1 %5233, label %5279, label %5284

5234:                                             ; preds = %5227
  %5235 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %5236 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %5235, i32 0, i32 4
  %5237 = load i64, i64* %5236, align 8
  %5238 = icmp slt i64 0, %5237
  br i1 %5238, label %5239, label %5284

5239:                                             ; preds = %5234
  %5240 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %5241 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %5240, i32 0, i32 4
  %5242 = load i64, i64* %5241, align 8
  %5243 = sub nsw i64 %5242, 1
  %5244 = icmp slt i64 -1, %5243
  br i1 %5244, label %5279, label %5284

5245:                                             ; preds = %5226, %5225, %5224
  %5246 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %5247 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %5246, i32 0, i32 4
  %5248 = load i64, i64* %5247, align 8
  %5249 = icmp slt i64 0, %5248
  br i1 %5249, label %5279, label %5284

5250:                                             ; preds = %5205
  br i1 false, label %5251, label %5252

5251:                                             ; preds = %5250
  br i1 false, label %5279, label %5284

5252:                                             ; preds = %5250
  %5253 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %5254 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %5253, i32 0, i32 4
  %5255 = load i64, i64* %5254, align 8
  %5256 = icmp slt i64 %5255, 0
  br i1 %5256, label %5257, label %5274

5257:                                             ; preds = %5252
  br i1 true, label %5258, label %5259

5258:                                             ; preds = %5257
  br i1 false, label %5260, label %5268

5259:                                             ; preds = %5257
  br i1 false, label %5260, label %5268

5260:                                             ; preds = %5259, %5258
  %5261 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %5262 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %5261, i32 0, i32 4
  %5263 = load i64, i64* %5262, align 8
  %5264 = icmp eq i64 %5263, -1
  br i1 %5264, label %5265, label %5268

5265:                                             ; preds = %5260
  br i1 true, label %5266, label %5267

5266:                                             ; preds = %5265
  br i1 true, label %5279, label %5284

5267:                                             ; preds = %5265
  br i1 true, label %5279, label %5284

5268:                                             ; preds = %5260, %5259, %5258
  %5269 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %5270 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %5269, i32 0, i32 4
  %5271 = load i64, i64* %5270, align 8
  %5272 = sdiv i64 0, %5271
  %5273 = icmp slt i64 %5272, 60
  br i1 %5273, label %5279, label %5284

5274:                                             ; preds = %5252
  %5275 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %5276 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %5275, i32 0, i32 4
  %5277 = load i64, i64* %5276, align 8
  %5278 = icmp ult i64 307445734561825860, %5277
  br i1 %5278, label %5279, label %5284

5279:                                             ; preds = %5274, %5268, %5267, %5266, %5251, %5245, %5239, %5228, %5217, %5212
  %5280 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %5281 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %5280, i32 0, i32 4
  %5282 = load i64, i64* %5281, align 8
  %5283 = mul i64 %5282, 60
  store i64 %5283, i64* %61, align 8
  br i1 true, label %5476, label %5452

5284:                                             ; preds = %5274, %5268, %5267, %5266, %5251, %5245, %5239, %5234, %5228, %5217, %5212
  %5285 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %5286 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %5285, i32 0, i32 4
  %5287 = load i64, i64* %5286, align 8
  %5288 = mul i64 %5287, 60
  store i64 %5288, i64* %61, align 8
  br i1 false, label %5476, label %5452

5289:                                             ; preds = %5125
  br i1 true, label %5290, label %5368

5290:                                             ; preds = %5289
  br i1 false, label %5291, label %5332

5291:                                             ; preds = %5290
  %5292 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %5293 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %5292, i32 0, i32 4
  %5294 = load i64, i64* %5293, align 8
  %5295 = icmp slt i64 %5294, 0
  br i1 %5295, label %5296, label %5308

5296:                                             ; preds = %5291
  br i1 true, label %5297, label %5302

5297:                                             ; preds = %5296
  %5298 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %5299 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %5298, i32 0, i32 4
  %5300 = load i64, i64* %5299, align 8
  %5301 = icmp slt i64 %5300, 153722867280912930
  br i1 %5301, label %5358, label %5363

5302:                                             ; preds = %5296
  %5303 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %5304 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %5303, i32 0, i32 4
  %5305 = load i64, i64* %5304, align 8
  %5306 = sub nsw i64 -1, %5305
  %5307 = icmp sle i64 -153722867280912930, %5306
  br i1 %5307, label %5358, label %5363

5308:                                             ; preds = %5291
  br i1 false, label %5309, label %5327

5309:                                             ; preds = %5308
  br i1 true, label %5310, label %5316

5310:                                             ; preds = %5309
  %5311 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %5312 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %5311, i32 0, i32 4
  %5313 = load i64, i64* %5312, align 8
  %5314 = add nsw i64 %5313, -9223372036854775808
  %5315 = icmp slt i64 0, %5314
  br i1 %5315, label %5358, label %5363

5316:                                             ; preds = %5309
  %5317 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %5318 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %5317, i32 0, i32 4
  %5319 = load i64, i64* %5318, align 8
  %5320 = icmp slt i64 0, %5319
  br i1 %5320, label %5321, label %5363

5321:                                             ; preds = %5316
  %5322 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %5323 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %5322, i32 0, i32 4
  %5324 = load i64, i64* %5323, align 8
  %5325 = sub nsw i64 %5324, 1
  %5326 = icmp slt i64 9223372036854775807, %5325
  br i1 %5326, label %5358, label %5363

5327:                                             ; preds = %5308
  %5328 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %5329 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %5328, i32 0, i32 4
  %5330 = load i64, i64* %5329, align 8
  %5331 = icmp slt i64 -153722867280912930, %5330
  br i1 %5331, label %5358, label %5363

5332:                                             ; preds = %5290
  br i1 false, label %5333, label %5334

5333:                                             ; preds = %5332
  br i1 false, label %5358, label %5363

5334:                                             ; preds = %5332
  %5335 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %5336 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %5335, i32 0, i32 4
  %5337 = load i64, i64* %5336, align 8
  %5338 = icmp slt i64 %5337, 0
  br i1 %5338, label %5339, label %5353

5339:                                             ; preds = %5334
  %5340 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %5341 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %5340, i32 0, i32 4
  %5342 = load i64, i64* %5341, align 8
  %5343 = icmp eq i64 %5342, -1
  br i1 %5343, label %5344, label %5347

5344:                                             ; preds = %5339
  br i1 true, label %5345, label %5346

5345:                                             ; preds = %5344
  br i1 false, label %5358, label %5363

5346:                                             ; preds = %5344
  br i1 false, label %5358, label %5363

5347:                                             ; preds = %5339
  %5348 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %5349 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %5348, i32 0, i32 4
  %5350 = load i64, i64* %5349, align 8
  %5351 = sdiv i64 -9223372036854775808, %5350
  %5352 = icmp slt i64 %5351, 60
  br i1 %5352, label %5358, label %5363

5353:                                             ; preds = %5334
  %5354 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %5355 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %5354, i32 0, i32 4
  %5356 = load i64, i64* %5355, align 8
  %5357 = icmp slt i64 153722867280912930, %5356
  br i1 %5357, label %5358, label %5363

5358:                                             ; preds = %5353, %5347, %5346, %5345, %5333, %5327, %5321, %5310, %5302, %5297
  %5359 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %5360 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %5359, i32 0, i32 4
  %5361 = load i64, i64* %5360, align 8
  %5362 = mul i64 %5361, 60
  store i64 %5362, i64* %61, align 8
  br i1 true, label %5476, label %5452

5363:                                             ; preds = %5353, %5347, %5346, %5345, %5333, %5327, %5321, %5316, %5310, %5302, %5297
  %5364 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %5365 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %5364, i32 0, i32 4
  %5366 = load i64, i64* %5365, align 8
  %5367 = mul i64 %5366, 60
  store i64 %5367, i64* %61, align 8
  br i1 false, label %5476, label %5452

5368:                                             ; preds = %5289
  br i1 false, label %5369, label %5413

5369:                                             ; preds = %5368
  %5370 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %5371 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %5370, i32 0, i32 4
  %5372 = load i64, i64* %5371, align 8
  %5373 = icmp slt i64 %5372, 0
  br i1 %5373, label %5374, label %5386

5374:                                             ; preds = %5369
  br i1 false, label %5375, label %5380

5375:                                             ; preds = %5374
  %5376 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %5377 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %5376, i32 0, i32 4
  %5378 = load i64, i64* %5377, align 8
  %5379 = icmp ult i64 %5378, 307445734561825860
  br i1 %5379, label %5442, label %5447

5380:                                             ; preds = %5374
  %5381 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %5382 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %5381, i32 0, i32 4
  %5383 = load i64, i64* %5382, align 8
  %5384 = sub nsw i64 -1, %5383
  %5385 = icmp ule i64 1, %5384
  br i1 %5385, label %5442, label %5447

5386:                                             ; preds = %5369
  br i1 true, label %5387, label %5388

5387:                                             ; preds = %5386
  br i1 false, label %5389, label %5408

5388:                                             ; preds = %5386
  br i1 false, label %5389, label %5408

5389:                                             ; preds = %5388, %5387
  br i1 false, label %5390, label %5408

5390:                                             ; preds = %5389
  br i1 true, label %5391, label %5397

5391:                                             ; preds = %5390
  %5392 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %5393 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %5392, i32 0, i32 4
  %5394 = load i64, i64* %5393, align 8
  %5395 = add nsw i64 %5394, 0
  %5396 = icmp slt i64 0, %5395
  br i1 %5396, label %5442, label %5447

5397:                                             ; preds = %5390
  %5398 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %5399 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %5398, i32 0, i32 4
  %5400 = load i64, i64* %5399, align 8
  %5401 = icmp slt i64 0, %5400
  br i1 %5401, label %5402, label %5447

5402:                                             ; preds = %5397
  %5403 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %5404 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %5403, i32 0, i32 4
  %5405 = load i64, i64* %5404, align 8
  %5406 = sub nsw i64 %5405, 1
  %5407 = icmp slt i64 -1, %5406
  br i1 %5407, label %5442, label %5447

5408:                                             ; preds = %5389, %5388, %5387
  %5409 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %5410 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %5409, i32 0, i32 4
  %5411 = load i64, i64* %5410, align 8
  %5412 = icmp slt i64 0, %5411
  br i1 %5412, label %5442, label %5447

5413:                                             ; preds = %5368
  br i1 false, label %5414, label %5415

5414:                                             ; preds = %5413
  br i1 false, label %5442, label %5447

5415:                                             ; preds = %5413
  %5416 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %5417 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %5416, i32 0, i32 4
  %5418 = load i64, i64* %5417, align 8
  %5419 = icmp slt i64 %5418, 0
  br i1 %5419, label %5420, label %5437

5420:                                             ; preds = %5415
  br i1 true, label %5421, label %5422

5421:                                             ; preds = %5420
  br i1 false, label %5423, label %5431

5422:                                             ; preds = %5420
  br i1 false, label %5423, label %5431

5423:                                             ; preds = %5422, %5421
  %5424 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %5425 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %5424, i32 0, i32 4
  %5426 = load i64, i64* %5425, align 8
  %5427 = icmp eq i64 %5426, -1
  br i1 %5427, label %5428, label %5431

5428:                                             ; preds = %5423
  br i1 true, label %5429, label %5430

5429:                                             ; preds = %5428
  br i1 true, label %5442, label %5447

5430:                                             ; preds = %5428
  br i1 true, label %5442, label %5447

5431:                                             ; preds = %5423, %5422, %5421
  %5432 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %5433 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %5432, i32 0, i32 4
  %5434 = load i64, i64* %5433, align 8
  %5435 = sdiv i64 0, %5434
  %5436 = icmp slt i64 %5435, 60
  br i1 %5436, label %5442, label %5447

5437:                                             ; preds = %5415
  %5438 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %5439 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %5438, i32 0, i32 4
  %5440 = load i64, i64* %5439, align 8
  %5441 = icmp ult i64 307445734561825860, %5440
  br i1 %5441, label %5442, label %5447

5442:                                             ; preds = %5437, %5431, %5430, %5429, %5414, %5408, %5402, %5391, %5380, %5375
  %5443 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %5444 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %5443, i32 0, i32 4
  %5445 = load i64, i64* %5444, align 8
  %5446 = mul i64 %5445, 60
  store i64 %5446, i64* %61, align 8
  br i1 true, label %5476, label %5452

5447:                                             ; preds = %5437, %5431, %5430, %5429, %5414, %5408, %5402, %5397, %5391, %5380, %5375
  %5448 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %5449 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %5448, i32 0, i32 4
  %5450 = load i64, i64* %5449, align 8
  %5451 = mul i64 %5450, 60
  store i64 %5451, i64* %61, align 8
  br i1 false, label %5476, label %5452

5452:                                             ; preds = %5447, %5442, %5363, %5358, %5284, %5279, %5200, %5195, %5118, %5111, %5030, %5023, %4942, %4934, %4852, %4844, %4760, %4752, %4670, %4662
  %5453 = load i64, i64* %60, align 8
  %5454 = load i64, i64* %61, align 8
  %5455 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %5453, i64 %5454)
  %5456 = extractvalue { i64, i1 } %5455, 1
  %5457 = extractvalue { i64, i1 } %5455, 0
  store i64 %5457, i64* %62, align 8
  br i1 %5456, label %5476, label %5458

5458:                                             ; preds = %5452
  %5459 = load i64, i64* %62, align 8
  %5460 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %5461 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %5460, i32 0, i32 5
  %5462 = load i64, i64* %5461, align 8
  %5463 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %5459, i64 %5462)
  %5464 = extractvalue { i64, i1 } %5463, 1
  %5465 = extractvalue { i64, i1 } %5463, 0
  store i64 %5465, i64* %63, align 8
  br i1 %5464, label %5476, label %5466

5466:                                             ; preds = %5458
  %5467 = load i64, i64* %63, align 8
  %5468 = load i32, i32* %58, align 4
  %5469 = sext i32 %5468 to i64
  %5470 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %5467, i64 %5469)
  %5471 = extractvalue { i64, i1 } %5470, 1
  %5472 = extractvalue { i64, i1 } %5470, 0
  store i64 %5472, i64* %64, align 8
  br i1 %5471, label %5476, label %5473

5473:                                             ; preds = %5466
  %5474 = load i64, i64* %64, align 8
  %5475 = call zeroext i1 @time_overflow(i64 %5474)
  br i1 %5475, label %5476, label %5483

5476:                                             ; preds = %5473, %5466, %5458, %5452, %5447, %5442, %5363, %5358, %5284, %5279, %5200, %5195, %5118, %5111, %5030, %5023, %4942, %4934, %4852, %4844, %4760, %4752, %4670, %4662, %4580, %4575, %4570, %4491, %4486, %4412, %4407, %4328, %4323, %4246, %4239, %4158, %4151, %4070, %4062, %3980, %3972, %3888, %3880, %3798, %3790
  %5477 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 22
  %5478 = load i8, i8* %5477, align 1
  %5479 = trunc i8 %5478 to i1
  br i1 %5479, label %5480, label %5482

5480:                                             ; preds = %5476
  %5481 = call i8* @gettext(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.66.193, i64 0, i64 0)) #11
  call void (i8*, ...) @dbg_printf(i8* %5481)
  br label %5482

5482:                                             ; preds = %5480, %5476
  br label %5616

5483:                                             ; preds = %5473
  %5484 = load i64, i64* %64, align 8
  %5485 = load %struct.timespec*, %struct.timespec** %7, align 8
  %5486 = getelementptr inbounds %struct.timespec, %struct.timespec* %5485, i32 0, i32 0
  store i64 %5484, i64* %5486, align 8
  %5487 = load i32, i32* %57, align 4
  %5488 = sext i32 %5487 to i64
  %5489 = load %struct.timespec*, %struct.timespec** %7, align 8
  %5490 = getelementptr inbounds %struct.timespec, %struct.timespec* %5489, i32 0, i32 1
  store i64 %5488, i64* %5490, align 8
  %5491 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 22
  %5492 = load i8, i8* %5491, align 1
  %5493 = trunc i8 %5492 to i1
  br i1 %5493, label %5494, label %5546

5494:                                             ; preds = %5483
  %5495 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %5496 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %5495, i32 0, i32 3
  %5497 = load i64, i64* %5496, align 8
  %5498 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %5499 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %5498, i32 0, i32 4
  %5500 = load i64, i64* %5499, align 8
  %5501 = or i64 %5497, %5500
  %5502 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %5503 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %5502, i32 0, i32 5
  %5504 = load i64, i64* %5503, align 8
  %5505 = or i64 %5501, %5504
  %5506 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %5507 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %5506, i32 0, i32 6
  %5508 = load i32, i32* %5507, align 8
  %5509 = sext i32 %5508 to i64
  %5510 = or i64 %5505, %5509
  %5511 = icmp ne i64 %5510, 0
  br i1 %5511, label %5512, label %5546

5512:                                             ; preds = %5494
  %5513 = call i8* @gettext(i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.67.194, i64 0, i64 0)) #11
  %5514 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %5515 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %5514, i32 0, i32 3
  %5516 = load i64, i64* %5515, align 8
  %5517 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %5518 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %5517, i32 0, i32 4
  %5519 = load i64, i64* %5518, align 8
  %5520 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %5521 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %5520, i32 0, i32 5
  %5522 = load i64, i64* %5521, align 8
  %5523 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 12
  %5524 = getelementptr inbounds %struct.relative_time, %struct.relative_time* %5523, i32 0, i32 6
  %5525 = load i32, i32* %5524, align 8
  call void (i8*, ...) @dbg_printf(i8* %5513, i64 %5516, i64 %5519, i64 %5522, i32 %5525)
  %5526 = call i8* @gettext(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.68.195, i64 0, i64 0)) #11
  %5527 = load i64, i64* %64, align 8
  call void (i8*, ...) @dbg_printf(i8* %5526, i64 %5527)
  %5528 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 8
  %5529 = load i32, i32* %5528, align 8
  %5530 = icmp ne i32 %5529, -1
  br i1 %5530, label %5531, label %5545

5531:                                             ; preds = %5512
  %5532 = load %struct.tm_zone*, %struct.tm_zone** %25, align 8
  %5533 = load %struct.timespec*, %struct.timespec** %7, align 8
  %5534 = getelementptr inbounds %struct.timespec, %struct.timespec* %5533, i32 0, i32 0
  %5535 = call %struct.tm* @localtime_rz(%struct.tm_zone* %5532, i64* %5534, %struct.tm* %65)
  %5536 = icmp ne %struct.tm* %5535, null
  br i1 %5536, label %5537, label %5545

5537:                                             ; preds = %5531
  %5538 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 8
  %5539 = load i32, i32* %5538, align 8
  %5540 = getelementptr inbounds %struct.tm, %struct.tm* %65, i32 0, i32 8
  %5541 = load i32, i32* %5540, align 8
  %5542 = icmp ne i32 %5539, %5541
  br i1 %5542, label %5543, label %5545

5543:                                             ; preds = %5537
  %5544 = call i8* @gettext(i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.69.196, i64 0, i64 0)) #11
  call void (i8*, ...) @dbg_printf(i8* %5544)
  br label %5545

5545:                                             ; preds = %5543, %5537, %5531, %5512
  br label %5546

5546:                                             ; preds = %5545, %5494, %5483
  br label %5547

5547:                                             ; preds = %5546, %495
  %5548 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %34, i32 0, i32 22
  %5549 = load i8, i8* %5548, align 1
  %5550 = trunc i8 %5549 to i1
  br i1 %5550, label %5551, label %5615

5551:                                             ; preds = %5547
  %5552 = load i8*, i8** %12, align 8
  %5553 = icmp ne i8* %5552, null
  br i1 %5553, label %5556, label %5554

5554:                                             ; preds = %5551
  %5555 = call i8* @gettext(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.70.197, i64 0, i64 0)) #11
  call void (i8*, ...) @dbg_printf(i8* %5555)
  br label %5566

5556:                                             ; preds = %5551
  %5557 = load i8*, i8** %12, align 8
  %5558 = call i32 @strcmp(i8* %5557, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28.157, i64 0, i64 0)) #13
  %5559 = icmp eq i32 %5558, 0
  br i1 %5559, label %5560, label %5562

5560:                                             ; preds = %5556
  %5561 = call i8* @gettext(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.71.198, i64 0, i64 0)) #11
  call void (i8*, ...) @dbg_printf(i8* %5561)
  br label %5565

5562:                                             ; preds = %5556
  %5563 = call i8* @gettext(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.72.199, i64 0, i64 0)) #11
  %5564 = load i8*, i8** %12, align 8
  call void (i8*, ...) @dbg_printf(i8* %5563, i8* %5564)
  br label %5565

5565:                                             ; preds = %5562, %5560
  br label %5566

5566:                                             ; preds = %5565, %5554
  %5567 = load %struct.timespec*, %struct.timespec** %7, align 8
  %5568 = getelementptr inbounds %struct.timespec, %struct.timespec* %5567, i32 0, i32 0
  %5569 = load i64, i64* %5568, align 8
  store i64 %5569, i64* %66, align 8
  %5570 = load %struct.timespec*, %struct.timespec** %7, align 8
  %5571 = getelementptr inbounds %struct.timespec, %struct.timespec* %5570, i32 0, i32 1
  %5572 = load i64, i64* %5571, align 8
  %5573 = trunc i64 %5572 to i32
  store i32 %5573, i32* %67, align 4
  %5574 = call i8* @gettext(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.73.200, i64 0, i64 0)) #11
  %5575 = load i64, i64* %66, align 8
  %5576 = load i32, i32* %67, align 4
  call void (i8*, ...) @dbg_printf(i8* %5574, i64 %5575, i32 %5576)
  %5577 = load %struct.timespec*, %struct.timespec** %7, align 8
  %5578 = getelementptr inbounds %struct.timespec, %struct.timespec* %5577, i32 0, i32 0
  %5579 = call %struct.tm* @gmtime_r(i64* %5578, %struct.tm* %68) #11
  %5580 = icmp ne %struct.tm* %5579, null
  %5581 = xor i1 %5580, true
  %5582 = xor i1 %5581, true
  %5583 = zext i1 %5582 to i8
  store i8 %5583, i8* %70, align 1
  %5584 = load i8, i8* %70, align 1
  %5585 = trunc i8 %5584 to i1
  br i1 %5585, label %5586, label %5590

5586:                                             ; preds = %5566
  %5587 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.74.201, i64 0, i64 0)) #11
  %5588 = getelementptr inbounds [100 x i8], [100 x i8]* %16, i64 0, i64 0
  %5589 = call i8* @debug_strfdatetime(%struct.tm* %68, %struct.parser_control* null, i8* %5588, i32 100)
  call void (i8*, ...) @dbg_printf(i8* %5587, i8* %5589)
  br label %5590

5590:                                             ; preds = %5586, %5566
  %5591 = load %struct.tm_zone*, %struct.tm_zone** %25, align 8
  %5592 = load %struct.timespec*, %struct.timespec** %7, align 8
  %5593 = getelementptr inbounds %struct.timespec, %struct.timespec* %5592, i32 0, i32 0
  %5594 = call %struct.tm* @localtime_rz(%struct.tm_zone* %5591, i64* %5593, %struct.tm* %69)
  %5595 = icmp ne %struct.tm* %5594, null
  br i1 %5595, label %5596, label %5614

5596:                                             ; preds = %5590
  store i8 1, i8* %71, align 1
  %5597 = getelementptr inbounds %struct.tm, %struct.tm* %69, i32 0, i32 9
  %5598 = load i64, i64* %5597, align 8
  store i64 %5598, i64* %72, align 8
  %5599 = load i8, i8* %71, align 1
  %5600 = trunc i8 %5599 to i1
  br i1 %5600, label %5601, label %5609

5601:                                             ; preds = %5596
  %5602 = call i8* @gettext(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.75.202, i64 0, i64 0)) #11
  %5603 = getelementptr inbounds [100 x i8], [100 x i8]* %16, i64 0, i64 0
  %5604 = call i8* @debug_strfdatetime(%struct.tm* %69, %struct.parser_control* null, i8* %5603, i32 100)
  %5605 = load i64, i64* %72, align 8
  %5606 = trunc i64 %5605 to i32
  %5607 = getelementptr inbounds [27 x i8], [27 x i8]* %15, i64 0, i64 0
  %5608 = call i8* @time_zone_str(i32 %5606, i8* %5607)
  call void (i8*, ...) @dbg_printf(i8* %5602, i8* %5604, i8* %5608)
  br label %5613

5609:                                             ; preds = %5596
  %5610 = call i8* @gettext(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.76.203, i64 0, i64 0)) #11
  %5611 = getelementptr inbounds [100 x i8], [100 x i8]* %16, i64 0, i64 0
  %5612 = call i8* @debug_strfdatetime(%struct.tm* %69, %struct.parser_control* null, i8* %5611, i32 100)
  call void (i8*, ...) @dbg_printf(i8* %5610, i8* %5612)
  br label %5613

5613:                                             ; preds = %5609, %5601
  br label %5614

5614:                                             ; preds = %5613, %5590
  br label %5615

5615:                                             ; preds = %5614, %5547
  store i8 1, i8* %17, align 1
  br label %5616

5616:                                             ; preds = %5615, %5482, %3681, %3563, %3531, %3394, %778, %746, %636, %588, %552, %407, %235, %206, %176, %144
  %5617 = load %struct.tm_zone*, %struct.tm_zone** %25, align 8
  %5618 = load %struct.tm_zone*, %struct.tm_zone** %11, align 8
  %5619 = icmp ne %struct.tm_zone* %5617, %5618
  br i1 %5619, label %5620, label %5622

5620:                                             ; preds = %5616
  %5621 = load %struct.tm_zone*, %struct.tm_zone** %25, align 8
  call void @tzfree(%struct.tm_zone* %5621)
  br label %5622

5622:                                             ; preds = %5620, %5616
  %5623 = load i8*, i8** %19, align 8
  call void @free(i8* %5623) #11
  %5624 = load i8, i8* %17, align 1
  %5625 = trunc i8 %5624 to i1
  ret i1 %5625
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @to_tm_year(%struct.textint* byval(%struct.textint) align 8, i1 zeroext, i32*) #3 {
  %4 = alloca i1, align 1
  %5 = alloca i8, align 1
  %6 = alloca i32*, align 8
  %7 = alloca i64, align 8
  %8 = zext i1 %1 to i8
  store i8 %8, i8* %5, align 1
  store i32* %2, i32** %6, align 8
  %9 = getelementptr inbounds %struct.textint, %struct.textint* %0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  store i64 %10, i64* %7, align 8
  %11 = load i64, i64* %7, align 8
  %12 = icmp sle i64 0, %11
  br i1 %12, label %13, label %33

13:                                               ; preds = %3
  %14 = getelementptr inbounds %struct.textint, %struct.textint* %0, i32 0, i32 2
  %15 = load i64, i64* %14, align 8
  %16 = icmp eq i64 %15, 2
  br i1 %16, label %17, label %33

17:                                               ; preds = %13
  %18 = load i64, i64* %7, align 8
  %19 = icmp slt i64 %18, 69
  %20 = zext i1 %19 to i64
  %21 = select i1 %19, i32 2000, i32 1900
  %22 = sext i32 %21 to i64
  %23 = load i64, i64* %7, align 8
  %24 = add nsw i64 %23, %22
  store i64 %24, i64* %7, align 8
  %25 = load i8, i8* %5, align 1
  %26 = trunc i8 %25 to i1
  br i1 %26, label %27, label %32

27:                                               ; preds = %17
  %28 = call i8* @gettext(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.234, i64 0, i64 0)) #11
  %29 = getelementptr inbounds %struct.textint, %struct.textint* %0, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = load i64, i64* %7, align 8
  call void (i8*, ...) @dbg_printf(i8* %28, i64 %30, i64 %31)
  br label %32

32:                                               ; preds = %27, %17
  br label %33

33:                                               ; preds = %32, %13, %3
  %34 = load i64, i64* %7, align 8
  %35 = icmp slt i64 %34, 0
  br i1 %35, label %36, label %46

36:                                               ; preds = %33
  %37 = load i64, i64* %7, align 8
  %38 = load i32*, i32** %6, align 8
  %39 = call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 -1900, i64 %37)
  %40 = extractvalue { i64, i1 } %39, 1
  %41 = extractvalue { i64, i1 } %39, 0
  %42 = trunc i64 %41 to i32
  %43 = sext i32 %42 to i64
  %44 = icmp ne i64 %41, %43
  %45 = or i1 %40, %44
  store i32 %42, i32* %38, align 4
  br i1 %45, label %56, label %63

46:                                               ; preds = %33
  %47 = load i64, i64* %7, align 8
  %48 = load i32*, i32** %6, align 8
  %49 = call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %47, i64 1900)
  %50 = extractvalue { i64, i1 } %49, 1
  %51 = extractvalue { i64, i1 } %49, 0
  %52 = trunc i64 %51 to i32
  %53 = sext i32 %52 to i64
  %54 = icmp ne i64 %51, %53
  %55 = or i1 %50, %54
  store i32 %52, i32* %48, align 4
  br i1 %55, label %56, label %63

56:                                               ; preds = %46, %36
  %57 = load i8, i8* %5, align 1
  %58 = trunc i8 %57 to i1
  br i1 %58, label %59, label %62

59:                                               ; preds = %56
  %60 = call i8* @gettext(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.235, i64 0, i64 0)) #11
  %61 = load i64, i64* %7, align 8
  call void (i8*, ...) @dbg_printf(i8* %60, i64 %61)
  br label %62

62:                                               ; preds = %59, %56
  store i1 false, i1* %4, align 1
  br label %64

63:                                               ; preds = %46, %36
  store i1 true, i1* %4, align 1
  br label %64

64:                                               ; preds = %63, %62
  %65 = load i1, i1* %4, align 1
  ret i1 %65
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @to_hour(i64, i32) #3 {
  %3 = alloca i32, align 4
  %4 = alloca i64, align 8
  %5 = alloca i32, align 4
  store i64 %0, i64* %4, align 8
  store i32 %1, i32* %5, align 4
  %6 = load i32, i32* %5, align 4
  switch i32 %6, label %7 [
    i32 2, label %8
    i32 0, label %20
    i32 1, label %37
  ]

7:                                                ; preds = %2
  br label %8

8:                                                ; preds = %7, %2
  %9 = load i64, i64* %4, align 8
  %10 = icmp sle i64 0, %9
  br i1 %10, label %11, label %16

11:                                               ; preds = %8
  %12 = load i64, i64* %4, align 8
  %13 = icmp slt i64 %12, 24
  br i1 %13, label %14, label %16

14:                                               ; preds = %11
  %15 = load i64, i64* %4, align 8
  br label %17

16:                                               ; preds = %11, %8
  br label %17

17:                                               ; preds = %16, %14
  %18 = phi i64 [ %15, %14 ], [ -1, %16 ]
  %19 = trunc i64 %18 to i32
  store i32 %19, i32* %3, align 4
  br label %55

20:                                               ; preds = %2
  %21 = load i64, i64* %4, align 8
  %22 = icmp slt i64 0, %21
  br i1 %22, label %23, label %28

23:                                               ; preds = %20
  %24 = load i64, i64* %4, align 8
  %25 = icmp slt i64 %24, 12
  br i1 %25, label %26, label %28

26:                                               ; preds = %23
  %27 = load i64, i64* %4, align 8
  br label %34

28:                                               ; preds = %23, %20
  %29 = load i64, i64* %4, align 8
  %30 = icmp eq i64 %29, 12
  %31 = zext i1 %30 to i64
  %32 = select i1 %30, i32 0, i32 -1
  %33 = sext i32 %32 to i64
  br label %34

34:                                               ; preds = %28, %26
  %35 = phi i64 [ %27, %26 ], [ %33, %28 ]
  %36 = trunc i64 %35 to i32
  store i32 %36, i32* %3, align 4
  br label %55

37:                                               ; preds = %2
  %38 = load i64, i64* %4, align 8
  %39 = icmp slt i64 0, %38
  br i1 %39, label %40, label %46

40:                                               ; preds = %37
  %41 = load i64, i64* %4, align 8
  %42 = icmp slt i64 %41, 12
  br i1 %42, label %43, label %46

43:                                               ; preds = %40
  %44 = load i64, i64* %4, align 8
  %45 = add nsw i64 %44, 12
  br label %52

46:                                               ; preds = %40, %37
  %47 = load i64, i64* %4, align 8
  %48 = icmp eq i64 %47, 12
  %49 = zext i1 %48 to i64
  %50 = select i1 %48, i32 12, i32 -1
  %51 = sext i32 %50 to i64
  br label %52

52:                                               ; preds = %46, %43
  %53 = phi i64 [ %45, %43 ], [ %51, %46 ]
  %54 = trunc i64 %53 to i32
  store i32 %54, i32* %3, align 4
  br label %55

55:                                               ; preds = %52, %34, %17
  %56 = load i32, i32* %3, align 4
  ret i32 %56
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @debug_strftime(%struct.tm*, i8*, i32) #3 {
  %4 = alloca %struct.tm*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  store %struct.tm* %0, %struct.tm** %4, align 8
  store i8* %1, i8** %5, align 8
  store i32 %2, i32* %6, align 4
  %7 = load i8*, i8** %5, align 8
  %8 = load i32, i32* %6, align 4
  %9 = sext i32 %8 to i64
  %10 = load %struct.tm*, %struct.tm** %4, align 8
  %11 = getelementptr inbounds %struct.tm, %struct.tm* %10, i32 0, i32 2
  %12 = load i32, i32* %11, align 8
  %13 = load %struct.tm*, %struct.tm** %4, align 8
  %14 = getelementptr inbounds %struct.tm, %struct.tm* %13, i32 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = load %struct.tm*, %struct.tm** %4, align 8
  %17 = getelementptr inbounds %struct.tm, %struct.tm* %16, i32 0, i32 0
  %18 = load i32, i32* %17, align 8
  %19 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %7, i64 %9, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.236, i64 0, i64 0), i32 %12, i32 %15, i32 %18) #11
  %20 = load i8*, i8** %5, align 8
  ret i8* %20
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @mktime_ok(%struct.tm*, %struct.tm*) #3 {
  %3 = alloca i1, align 1
  %4 = alloca %struct.tm*, align 8
  %5 = alloca %struct.tm*, align 8
  store %struct.tm* %0, %struct.tm** %4, align 8
  store %struct.tm* %1, %struct.tm** %5, align 8
  %6 = load %struct.tm*, %struct.tm** %5, align 8
  %7 = getelementptr inbounds %struct.tm, %struct.tm* %6, i32 0, i32 6
  %8 = load i32, i32* %7, align 8
  %9 = icmp slt i32 %8, 0
  br i1 %9, label %10, label %11

10:                                               ; preds = %2
  store i1 false, i1* %3, align 1
  br label %61

11:                                               ; preds = %2
  %12 = load %struct.tm*, %struct.tm** %4, align 8
  %13 = getelementptr inbounds %struct.tm, %struct.tm* %12, i32 0, i32 0
  %14 = load i32, i32* %13, align 8
  %15 = load %struct.tm*, %struct.tm** %5, align 8
  %16 = getelementptr inbounds %struct.tm, %struct.tm* %15, i32 0, i32 0
  %17 = load i32, i32* %16, align 8
  %18 = xor i32 %14, %17
  %19 = load %struct.tm*, %struct.tm** %4, align 8
  %20 = getelementptr inbounds %struct.tm, %struct.tm* %19, i32 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = load %struct.tm*, %struct.tm** %5, align 8
  %23 = getelementptr inbounds %struct.tm, %struct.tm* %22, i32 0, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = xor i32 %21, %24
  %26 = or i32 %18, %25
  %27 = load %struct.tm*, %struct.tm** %4, align 8
  %28 = getelementptr inbounds %struct.tm, %struct.tm* %27, i32 0, i32 2
  %29 = load i32, i32* %28, align 8
  %30 = load %struct.tm*, %struct.tm** %5, align 8
  %31 = getelementptr inbounds %struct.tm, %struct.tm* %30, i32 0, i32 2
  %32 = load i32, i32* %31, align 8
  %33 = xor i32 %29, %32
  %34 = or i32 %26, %33
  %35 = load %struct.tm*, %struct.tm** %4, align 8
  %36 = getelementptr inbounds %struct.tm, %struct.tm* %35, i32 0, i32 3
  %37 = load i32, i32* %36, align 4
  %38 = load %struct.tm*, %struct.tm** %5, align 8
  %39 = getelementptr inbounds %struct.tm, %struct.tm* %38, i32 0, i32 3
  %40 = load i32, i32* %39, align 4
  %41 = xor i32 %37, %40
  %42 = or i32 %34, %41
  %43 = load %struct.tm*, %struct.tm** %4, align 8
  %44 = getelementptr inbounds %struct.tm, %struct.tm* %43, i32 0, i32 4
  %45 = load i32, i32* %44, align 8
  %46 = load %struct.tm*, %struct.tm** %5, align 8
  %47 = getelementptr inbounds %struct.tm, %struct.tm* %46, i32 0, i32 4
  %48 = load i32, i32* %47, align 8
  %49 = xor i32 %45, %48
  %50 = or i32 %42, %49
  %51 = load %struct.tm*, %struct.tm** %4, align 8
  %52 = getelementptr inbounds %struct.tm, %struct.tm* %51, i32 0, i32 5
  %53 = load i32, i32* %52, align 4
  %54 = load %struct.tm*, %struct.tm** %5, align 8
  %55 = getelementptr inbounds %struct.tm, %struct.tm* %54, i32 0, i32 5
  %56 = load i32, i32* %55, align 4
  %57 = xor i32 %53, %56
  %58 = or i32 %50, %57
  %59 = icmp ne i32 %58, 0
  %60 = xor i1 %59, true
  store i1 %60, i1* %3, align 1
  br label %61

61:                                               ; preds = %11, %10
  %62 = load i1, i1* %3, align 1
  ret i1 %62
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @debug_mktime_not_ok(%struct.tm*, %struct.tm*, %struct.parser_control*, i1 zeroext) #3 {
  %5 = alloca %struct.tm*, align 8
  %6 = alloca %struct.tm*, align 8
  %7 = alloca %struct.parser_control*, align 8
  %8 = alloca i8, align 1
  %9 = alloca [100 x i8], align 16
  %10 = alloca i32, align 4
  %11 = alloca i8, align 1
  %12 = alloca i8, align 1
  %13 = alloca i8, align 1
  %14 = alloca i8, align 1
  %15 = alloca i8, align 1
  %16 = alloca i8, align 1
  %17 = alloca i8, align 1
  store %struct.tm* %0, %struct.tm** %5, align 8
  store %struct.tm* %1, %struct.tm** %6, align 8
  store %struct.parser_control* %2, %struct.parser_control** %7, align 8
  %18 = zext i1 %3 to i8
  store i8 %18, i8* %8, align 1
  %19 = load %struct.tm*, %struct.tm** %5, align 8
  %20 = getelementptr inbounds %struct.tm, %struct.tm* %19, i32 0, i32 0
  %21 = load i32, i32* %20, align 8
  %22 = load %struct.tm*, %struct.tm** %6, align 8
  %23 = getelementptr inbounds %struct.tm, %struct.tm* %22, i32 0, i32 0
  %24 = load i32, i32* %23, align 8
  %25 = icmp eq i32 %21, %24
  %26 = zext i1 %25 to i8
  store i8 %26, i8* %11, align 1
  %27 = load %struct.tm*, %struct.tm** %5, align 8
  %28 = getelementptr inbounds %struct.tm, %struct.tm* %27, i32 0, i32 1
  %29 = load i32, i32* %28, align 4
  %30 = load %struct.tm*, %struct.tm** %6, align 8
  %31 = getelementptr inbounds %struct.tm, %struct.tm* %30, i32 0, i32 1
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %29, %32
  %34 = zext i1 %33 to i8
  store i8 %34, i8* %12, align 1
  %35 = load %struct.tm*, %struct.tm** %5, align 8
  %36 = getelementptr inbounds %struct.tm, %struct.tm* %35, i32 0, i32 2
  %37 = load i32, i32* %36, align 8
  %38 = load %struct.tm*, %struct.tm** %6, align 8
  %39 = getelementptr inbounds %struct.tm, %struct.tm* %38, i32 0, i32 2
  %40 = load i32, i32* %39, align 8
  %41 = icmp eq i32 %37, %40
  %42 = zext i1 %41 to i8
  store i8 %42, i8* %13, align 1
  %43 = load %struct.tm*, %struct.tm** %5, align 8
  %44 = getelementptr inbounds %struct.tm, %struct.tm* %43, i32 0, i32 3
  %45 = load i32, i32* %44, align 4
  %46 = load %struct.tm*, %struct.tm** %6, align 8
  %47 = getelementptr inbounds %struct.tm, %struct.tm* %46, i32 0, i32 3
  %48 = load i32, i32* %47, align 4
  %49 = icmp eq i32 %45, %48
  %50 = zext i1 %49 to i8
  store i8 %50, i8* %14, align 1
  %51 = load %struct.tm*, %struct.tm** %5, align 8
  %52 = getelementptr inbounds %struct.tm, %struct.tm* %51, i32 0, i32 4
  %53 = load i32, i32* %52, align 8
  %54 = load %struct.tm*, %struct.tm** %6, align 8
  %55 = getelementptr inbounds %struct.tm, %struct.tm* %54, i32 0, i32 4
  %56 = load i32, i32* %55, align 8
  %57 = icmp eq i32 %53, %56
  %58 = zext i1 %57 to i8
  store i8 %58, i8* %15, align 1
  %59 = load %struct.tm*, %struct.tm** %5, align 8
  %60 = getelementptr inbounds %struct.tm, %struct.tm* %59, i32 0, i32 5
  %61 = load i32, i32* %60, align 4
  %62 = load %struct.tm*, %struct.tm** %6, align 8
  %63 = getelementptr inbounds %struct.tm, %struct.tm* %62, i32 0, i32 5
  %64 = load i32, i32* %63, align 4
  %65 = icmp eq i32 %61, %64
  %66 = zext i1 %65 to i8
  store i8 %66, i8* %16, align 1
  %67 = load i8, i8* %11, align 1
  %68 = trunc i8 %67 to i1
  br i1 %68, label %69, label %84

69:                                               ; preds = %4
  %70 = load i8, i8* %12, align 1
  %71 = trunc i8 %70 to i1
  br i1 %71, label %72, label %84

72:                                               ; preds = %69
  %73 = load i8, i8* %13, align 1
  %74 = trunc i8 %73 to i1
  br i1 %74, label %84, label %75

75:                                               ; preds = %72
  %76 = load i8, i8* %14, align 1
  %77 = trunc i8 %76 to i1
  br i1 %77, label %78, label %84

78:                                               ; preds = %75
  %79 = load i8, i8* %15, align 1
  %80 = trunc i8 %79 to i1
  br i1 %80, label %81, label %84

81:                                               ; preds = %78
  %82 = load i8, i8* %16, align 1
  %83 = trunc i8 %82 to i1
  br label %84

84:                                               ; preds = %81, %78, %75, %72, %69, %4
  %85 = phi i1 [ false, %78 ], [ false, %75 ], [ false, %72 ], [ false, %69 ], [ false, %4 ], [ %83, %81 ]
  %86 = zext i1 %85 to i8
  store i8 %86, i8* %17, align 1
  %87 = load %struct.parser_control*, %struct.parser_control** %7, align 8
  %88 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %87, i32 0, i32 22
  %89 = load i8, i8* %88, align 1
  %90 = trunc i8 %89 to i1
  br i1 %90, label %92, label %91

91:                                               ; preds = %84
  br label %183

92:                                               ; preds = %84
  %93 = call i8* @gettext(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.237, i64 0, i64 0)) #11
  call void (i8*, ...) @dbg_printf(i8* %93)
  %94 = call i8* @gettext(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.238, i64 0, i64 0)) #11
  %95 = load %struct.tm*, %struct.tm** %5, align 8
  %96 = load %struct.parser_control*, %struct.parser_control** %7, align 8
  %97 = getelementptr inbounds [100 x i8], [100 x i8]* %9, i64 0, i64 0
  %98 = call i8* @debug_strfdatetime(%struct.tm* %95, %struct.parser_control* %96, i8* %97, i32 100)
  call void (i8*, ...) @dbg_printf(i8* %94, i8* %98)
  %99 = call i8* @gettext(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.239, i64 0, i64 0)) #11
  %100 = load %struct.tm*, %struct.tm** %6, align 8
  %101 = load %struct.parser_control*, %struct.parser_control** %7, align 8
  %102 = getelementptr inbounds [100 x i8], [100 x i8]* %9, i64 0, i64 0
  %103 = call i8* @debug_strfdatetime(%struct.tm* %100, %struct.parser_control* %101, i8* %102, i32 100)
  call void (i8*, ...) @dbg_printf(i8* %99, i8* %103)
  %104 = getelementptr inbounds [100 x i8], [100 x i8]* %9, i64 0, i64 0
  %105 = load i8, i8* %16, align 1
  %106 = trunc i8 %105 to i1
  %107 = zext i1 %106 to i64
  %108 = select i1 %106, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.42.141, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.241, i64 0, i64 0)
  %109 = load i8, i8* %15, align 1
  %110 = trunc i8 %109 to i1
  %111 = zext i1 %110 to i64
  %112 = select i1 %110, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.42.141, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.242, i64 0, i64 0)
  %113 = load i8, i8* %14, align 1
  %114 = trunc i8 %113 to i1
  %115 = zext i1 %114 to i64
  %116 = select i1 %114, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.42.141, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.242, i64 0, i64 0)
  %117 = load i8, i8* %13, align 1
  %118 = trunc i8 %117 to i1
  %119 = zext i1 %118 to i64
  %120 = select i1 %118, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.42.141, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.242, i64 0, i64 0)
  %121 = load i8, i8* %12, align 1
  %122 = trunc i8 %121 to i1
  %123 = zext i1 %122 to i64
  %124 = select i1 %122, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.42.141, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.242, i64 0, i64 0)
  %125 = load i8, i8* %11, align 1
  %126 = trunc i8 %125 to i1
  %127 = zext i1 %126 to i64
  %128 = select i1 %126, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.42.141, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.242, i64 0, i64 0)
  %129 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %104, i64 100, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.240, i64 0, i64 0), i8* %108, i8* %112, i8* %116, i8* %120, i8* %124, i8* %128) #11
  store i32 %129, i32* %10, align 4
  %130 = load i32, i32* %10, align 4
  %131 = icmp sle i32 0, %130
  br i1 %131, label %132, label %158

132:                                              ; preds = %92
  %133 = load i32, i32* %10, align 4
  %134 = sext i32 %133 to i64
  %135 = icmp ult i64 99, %134
  br i1 %135, label %136, label %137

136:                                              ; preds = %132
  store i32 99, i32* %10, align 4
  br label %137

137:                                              ; preds = %136, %132
  br label %138

138:                                              ; preds = %151, %137
  %139 = load i32, i32* %10, align 4
  %140 = icmp slt i32 0, %139
  br i1 %140, label %141, label %149

141:                                              ; preds = %138
  %142 = load i32, i32* %10, align 4
  %143 = sub nsw i32 %142, 1
  %144 = sext i32 %143 to i64
  %145 = getelementptr inbounds [100 x i8], [100 x i8]* %9, i64 0, i64 %144
  %146 = load i8, i8* %145, align 1
  %147 = sext i8 %146 to i32
  %148 = icmp eq i32 %147, 32
  br label %149

149:                                              ; preds = %141, %138
  %150 = phi i1 [ false, %138 ], [ %148, %141 ]
  br i1 %150, label %151, label %154

151:                                              ; preds = %149
  %152 = load i32, i32* %10, align 4
  %153 = add nsw i32 %152, -1
  store i32 %153, i32* %10, align 4
  br label %138

154:                                              ; preds = %149
  %155 = load i32, i32* %10, align 4
  %156 = sext i32 %155 to i64
  %157 = getelementptr inbounds [100 x i8], [100 x i8]* %9, i64 0, i64 %156
  store i8 0, i8* %157, align 1
  br label %158

158:                                              ; preds = %154, %92
  %159 = getelementptr inbounds [100 x i8], [100 x i8]* %9, i64 0, i64 0
  call void (i8*, ...) @dbg_printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.243, i64 0, i64 0), i8* %159)
  %160 = call i8* @gettext(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.244, i64 0, i64 0)) #11
  call void (i8*, ...) @dbg_printf(i8* %160)
  %161 = load i8, i8* %17, align 1
  %162 = trunc i8 %161 to i1
  br i1 %162, label %163, label %165

163:                                              ; preds = %158
  %164 = call i8* @gettext(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.245, i64 0, i64 0)) #11
  call void (i8*, ...) @dbg_printf(i8* %164)
  br label %165

165:                                              ; preds = %163, %158
  %166 = load i8, i8* %14, align 1
  %167 = trunc i8 %166 to i1
  br i1 %167, label %173, label %168

168:                                              ; preds = %165
  %169 = load i8, i8* %15, align 1
  %170 = trunc i8 %169 to i1
  br i1 %170, label %173, label %171

171:                                              ; preds = %168
  %172 = call i8* @gettext(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.246, i64 0, i64 0)) #11
  call void (i8*, ...) @dbg_printf(i8* %172)
  br label %173

173:                                              ; preds = %171, %168, %165
  %174 = call i8* @gettext(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.247, i64 0, i64 0)) #11
  call void (i8*, ...) @dbg_printf(i8* %174)
  %175 = load i8, i8* %8, align 1
  %176 = trunc i8 %175 to i1
  br i1 %176, label %177, label %179

177:                                              ; preds = %173
  %178 = call i8* @gettext(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.249, i64 0, i64 0)) #11
  br label %181

179:                                              ; preds = %173
  %180 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.250, i64 0, i64 0)) #11
  br label %181

181:                                              ; preds = %179, %177
  %182 = phi i8* [ %178, %177 ], [ %180, %179 ]
  call void (i8*, ...) @dbg_printf(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.248, i64 0, i64 0), i8* %182)
  br label %183

183:                                              ; preds = %181, %91
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @debug_strfdatetime(%struct.tm*, %struct.parser_control*, i8*, i32) #3 {
  %5 = alloca %struct.tm*, align 8
  %6 = alloca %struct.parser_control*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca [27 x i8], align 16
  store %struct.tm* %0, %struct.tm** %5, align 8
  store %struct.parser_control* %1, %struct.parser_control** %6, align 8
  store i8* %2, i8** %7, align 8
  store i32 %3, i32* %8, align 4
  %12 = load i8*, i8** %7, align 8
  %13 = load i32, i32* %8, align 4
  %14 = sext i32 %13 to i64
  %15 = load %struct.tm*, %struct.tm** %5, align 8
  %16 = call i64 @nstrftime(i8* %12, i64 %14, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.254, i64 0, i64 0), %struct.tm* %15, %struct.tm_zone* null, i32 0)
  %17 = trunc i64 %16 to i32
  store i32 %17, i32* %9, align 4
  %18 = load %struct.parser_control*, %struct.parser_control** %6, align 8
  %19 = icmp ne %struct.parser_control* %18, null
  br i1 %19, label %20, label %63

20:                                               ; preds = %4
  %21 = load i32, i32* %9, align 4
  %22 = load i32, i32* %8, align 4
  %23 = icmp slt i32 %21, %22
  br i1 %23, label %24, label %63

24:                                               ; preds = %20
  %25 = load %struct.parser_control*, %struct.parser_control** %6, align 8
  %26 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %25, i32 0, i32 20
  %27 = load i64, i64* %26, align 8
  %28 = icmp ne i64 %27, 0
  br i1 %28, label %29, label %63

29:                                               ; preds = %24
  %30 = load %struct.parser_control*, %struct.parser_control** %6, align 8
  %31 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %30, i32 0, i32 4
  %32 = load i32, i32* %31, align 8
  store i32 %32, i32* %10, align 4
  %33 = load %struct.parser_control*, %struct.parser_control** %6, align 8
  %34 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %33, i32 0, i32 17
  %35 = load i64, i64* %34, align 8
  %36 = icmp ne i64 %35, 0
  br i1 %36, label %37, label %50

37:                                               ; preds = %29
  %38 = load %struct.parser_control*, %struct.parser_control** %6, align 8
  %39 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %38, i32 0, i32 20
  %40 = load i64, i64* %39, align 8
  %41 = icmp ne i64 %40, 0
  br i1 %41, label %50, label %42

42:                                               ; preds = %37
  %43 = load %struct.parser_control*, %struct.parser_control** %6, align 8
  %44 = getelementptr inbounds %struct.parser_control, %struct.parser_control* %43, i32 0, i32 3
  %45 = load i32, i32* %44, align 4
  %46 = icmp slt i32 0, %45
  br i1 %46, label %47, label %50

47:                                               ; preds = %42
  %48 = load i32, i32* %10, align 4
  %49 = add nsw i32 %48, 3600
  store i32 %49, i32* %10, align 4
  br label %50

50:                                               ; preds = %47, %42, %37, %29
  %51 = load i8*, i8** %7, align 8
  %52 = load i32, i32* %9, align 4
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds i8, i8* %51, i64 %53
  %55 = load i32, i32* %8, align 4
  %56 = load i32, i32* %9, align 4
  %57 = sub nsw i32 %55, %56
  %58 = sext i32 %57 to i64
  %59 = load i32, i32* %10, align 4
  %60 = getelementptr inbounds [27 x i8], [27 x i8]* %11, i64 0, i64 0
  %61 = call i8* @time_zone_str(i32 %59, i8* %60)
  %62 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %54, i64 %58, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.255, i64 0, i64 0), i8* %61) #11
  br label %63

63:                                               ; preds = %50, %24, %20, %4
  %64 = load i8*, i8** %7, align 8
  ret i8* %64
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @debug_strfdate(%struct.tm*, i8*, i32) #3 {
  %4 = alloca %struct.tm*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca [13 x i8], align 1
  store %struct.tm* %0, %struct.tm** %4, align 8
  store i8* %1, i8** %5, align 8
  store i32 %2, i32* %6, align 4
  %8 = load i8*, i8** %5, align 8
  %9 = load i32, i32* %6, align 4
  %10 = sext i32 %9 to i64
  %11 = load %struct.tm*, %struct.tm** %4, align 8
  %12 = getelementptr inbounds %struct.tm, %struct.tm* %11, i32 0, i32 5
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds [13 x i8], [13 x i8]* %7, i64 0, i64 0
  %15 = call i8* @tm_year_str(i32 %13, i8* %14)
  %16 = load %struct.tm*, %struct.tm** %4, align 8
  %17 = getelementptr inbounds %struct.tm, %struct.tm* %16, i32 0, i32 4
  %18 = load i32, i32* %17, align 8
  %19 = add nsw i32 %18, 1
  %20 = load %struct.tm*, %struct.tm** %4, align 8
  %21 = getelementptr inbounds %struct.tm, %struct.tm* %20, i32 0, i32 3
  %22 = load i32, i32* %21, align 4
  %23 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %8, i64 %10, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.256, i64 0, i64 0), i8* %15, i32 %19, i32 %22) #11
  %24 = load i8*, i8** %5, align 8
  ret i8* %24
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @tm_year_str(i32, i8*) #3 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  store i32 %0, i32* %3, align 4
  store i8* %1, i8** %4, align 8
  %5 = load i8*, i8** %4, align 8
  %6 = load i32, i32* %3, align 4
  %7 = icmp sle i32 -1900, %6
  %8 = zext i1 %7 to i32
  %9 = sext i32 %8 to i64
  %10 = getelementptr inbounds [10 x i8], [10 x i8]* @.str.257, i64 0, i64 %9
  %11 = load i32, i32* %3, align 4
  %12 = sdiv i32 %11, 100
  %13 = add nsw i32 %12, 19
  %14 = call i32 @abs(i32 %13) #15
  %15 = load i32, i32* %3, align 4
  %16 = srem i32 %15, 100
  %17 = call i32 @abs(i32 %16) #15
  %18 = call i32 (i8*, i8*, ...) @sprintf(i8* %5, i8* %10, i32 %14, i32 %17) #11
  %19 = load i8*, i8** %4, align 8
  ret i8* %19
}

; Function Attrs: nounwind
declare dso_local %struct.tm* @gmtime_r(i64*, %struct.tm*) #1

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @posixtime(i64*, i8*, i32) #3 {
  %4 = alloca i1, align 1
  %5 = alloca i64*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca %struct.tm, align 8
  %9 = alloca %struct.tm, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca [16 x i8], align 16
  %13 = alloca i8*, align 8
  store i64* %0, i64** %5, align 8
  store i8* %1, i8** %6, align 8
  store i32 %2, i32* %7, align 4
  %14 = load i8*, i8** %6, align 8
  %15 = load i32, i32* %7, align 4
  %16 = call zeroext i1 @posix_time_parse(%struct.tm* %8, i8* %14, i32 %15)
  br i1 %16, label %18, label %17

17:                                               ; preds = %3
  store i1 false, i1* %4, align 1
  br label %101

18:                                               ; preds = %3
  %19 = getelementptr inbounds %struct.tm, %struct.tm* %8, i32 0, i32 0
  %20 = load i32, i32* %19, align 8
  %21 = getelementptr inbounds %struct.tm, %struct.tm* %9, i32 0, i32 0
  store i32 %20, i32* %21, align 8
  %22 = getelementptr inbounds %struct.tm, %struct.tm* %8, i32 0, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.tm, %struct.tm* %9, i32 0, i32 1
  store i32 %23, i32* %24, align 4
  %25 = getelementptr inbounds %struct.tm, %struct.tm* %8, i32 0, i32 2
  %26 = load i32, i32* %25, align 8
  %27 = getelementptr inbounds %struct.tm, %struct.tm* %9, i32 0, i32 2
  store i32 %26, i32* %27, align 8
  %28 = getelementptr inbounds %struct.tm, %struct.tm* %8, i32 0, i32 3
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds %struct.tm, %struct.tm* %9, i32 0, i32 3
  store i32 %29, i32* %30, align 4
  %31 = getelementptr inbounds %struct.tm, %struct.tm* %8, i32 0, i32 4
  %32 = load i32, i32* %31, align 8
  %33 = getelementptr inbounds %struct.tm, %struct.tm* %9, i32 0, i32 4
  store i32 %32, i32* %33, align 8
  %34 = getelementptr inbounds %struct.tm, %struct.tm* %8, i32 0, i32 5
  %35 = load i32, i32* %34, align 4
  %36 = getelementptr inbounds %struct.tm, %struct.tm* %9, i32 0, i32 5
  store i32 %35, i32* %36, align 4
  %37 = getelementptr inbounds %struct.tm, %struct.tm* %9, i32 0, i32 6
  store i32 -1, i32* %37, align 8
  %38 = getelementptr inbounds %struct.tm, %struct.tm* %9, i32 0, i32 8
  store i32 -1, i32* %38, align 8
  %39 = call i64 @mktime(%struct.tm* %9) #11
  store i64 %39, i64* %10, align 8
  %40 = getelementptr inbounds %struct.tm, %struct.tm* %9, i32 0, i32 6
  %41 = load i32, i32* %40, align 8
  %42 = icmp slt i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %18
  store i1 false, i1* %4, align 1
  br label %101

44:                                               ; preds = %18
  %45 = getelementptr inbounds %struct.tm, %struct.tm* %8, i32 0, i32 5
  %46 = load i32, i32* %45, align 4
  %47 = getelementptr inbounds %struct.tm, %struct.tm* %9, i32 0, i32 5
  %48 = load i32, i32* %47, align 4
  %49 = xor i32 %46, %48
  %50 = getelementptr inbounds %struct.tm, %struct.tm* %8, i32 0, i32 4
  %51 = load i32, i32* %50, align 8
  %52 = getelementptr inbounds %struct.tm, %struct.tm* %9, i32 0, i32 4
  %53 = load i32, i32* %52, align 8
  %54 = xor i32 %51, %53
  %55 = or i32 %49, %54
  %56 = getelementptr inbounds %struct.tm, %struct.tm* %8, i32 0, i32 3
  %57 = load i32, i32* %56, align 4
  %58 = getelementptr inbounds %struct.tm, %struct.tm* %9, i32 0, i32 3
  %59 = load i32, i32* %58, align 4
  %60 = xor i32 %57, %59
  %61 = or i32 %55, %60
  %62 = getelementptr inbounds %struct.tm, %struct.tm* %8, i32 0, i32 2
  %63 = load i32, i32* %62, align 8
  %64 = getelementptr inbounds %struct.tm, %struct.tm* %9, i32 0, i32 2
  %65 = load i32, i32* %64, align 8
  %66 = xor i32 %63, %65
  %67 = or i32 %61, %66
  %68 = getelementptr inbounds %struct.tm, %struct.tm* %8, i32 0, i32 1
  %69 = load i32, i32* %68, align 4
  %70 = getelementptr inbounds %struct.tm, %struct.tm* %9, i32 0, i32 1
  %71 = load i32, i32* %70, align 4
  %72 = xor i32 %69, %71
  %73 = or i32 %67, %72
  %74 = getelementptr inbounds %struct.tm, %struct.tm* %8, i32 0, i32 0
  %75 = load i32, i32* %74, align 8
  %76 = getelementptr inbounds %struct.tm, %struct.tm* %9, i32 0, i32 0
  %77 = load i32, i32* %76, align 8
  %78 = xor i32 %75, %77
  %79 = or i32 %73, %78
  %80 = icmp ne i32 %79, 0
  br i1 %80, label %81, label %98

81:                                               ; preds = %44
  %82 = getelementptr inbounds %struct.tm, %struct.tm* %8, i32 0, i32 0
  %83 = load i32, i32* %82, align 8
  %84 = icmp ne i32 %83, 60
  br i1 %84, label %85, label %86

85:                                               ; preds = %81
  store i1 false, i1* %4, align 1
  br label %101

86:                                               ; preds = %81
  %87 = getelementptr inbounds [16 x i8], [16 x i8]* %12, i64 0, i64 0
  %88 = load i8*, i8** %6, align 8
  %89 = call i8* @stpcpy(i8* %87, i8* %88) #11
  store i8* %89, i8** %13, align 8
  %90 = load i8*, i8** %13, align 8
  %91 = getelementptr inbounds i8, i8* %90, i64 -2
  %92 = call i8* @strcpy(i8* %91, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.258, i64 0, i64 0)) #11
  %93 = getelementptr inbounds [16 x i8], [16 x i8]* %12, i64 0, i64 0
  %94 = load i32, i32* %7, align 4
  %95 = call zeroext i1 @posixtime(i64* %11, i8* %93, i32 %94)
  br i1 %95, label %97, label %96

96:                                               ; preds = %86
  store i1 false, i1* %4, align 1
  br label %101

97:                                               ; preds = %86
  br label %98

98:                                               ; preds = %97, %44
  %99 = load i64, i64* %10, align 8
  %100 = load i64*, i64** %5, align 8
  store i64 %99, i64* %100, align 8
  store i1 true, i1* %4, align 1
  br label %101

101:                                              ; preds = %98, %96, %85, %43, %17
  %102 = load i1, i1* %4, align 1
  ret i1 %102
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @posix_time_parse(%struct.tm*, i8*, i32) #3 {
  %4 = alloca i1, align 1
  %5 = alloca %struct.tm*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 8
  %9 = alloca [6 x i32], align 16
  %10 = alloca i32*, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  store %struct.tm* %0, %struct.tm** %5, align 8
  store i8* %1, i8** %6, align 8
  store i32 %2, i32* %7, align 4
  store i8* null, i8** %8, align 8
  %14 = load i8*, i8** %6, align 8
  %15 = call i64 @strlen(i8* %14) #13
  store i64 %15, i64* %12, align 8
  %16 = load i64, i64* %12, align 8
  store i64 %16, i64* %13, align 8
  %17 = load i32, i32* %7, align 4
  %18 = and i32 %17, 4
  %19 = icmp ne i32 %18, 0
  br i1 %19, label %20, label %38

20:                                               ; preds = %3
  %21 = load i8*, i8** %6, align 8
  %22 = call i8* @strchr(i8* %21, i32 46) #13
  store i8* %22, i8** %8, align 8
  %23 = load i8*, i8** %8, align 8
  %24 = icmp ne i8* %23, null
  br i1 %24, label %25, label %37

25:                                               ; preds = %20
  %26 = load i8*, i8** %8, align 8
  %27 = load i8*, i8** %6, align 8
  %28 = ptrtoint i8* %26 to i64
  %29 = ptrtoint i8* %27 to i64
  %30 = sub i64 %28, %29
  store i64 %30, i64* %13, align 8
  %31 = load i64, i64* %12, align 8
  %32 = load i64, i64* %13, align 8
  %33 = sub i64 %31, %32
  %34 = icmp ne i64 %33, 3
  br i1 %34, label %35, label %36

35:                                               ; preds = %25
  store i1 false, i1* %4, align 1
  br label %188

36:                                               ; preds = %25
  br label %37

37:                                               ; preds = %36, %20
  br label %38

38:                                               ; preds = %37, %3
  %39 = load i64, i64* %13, align 8
  %40 = icmp ule i64 8, %39
  br i1 %40, label %41, label %48

41:                                               ; preds = %38
  %42 = load i64, i64* %13, align 8
  %43 = icmp ule i64 %42, 12
  br i1 %43, label %44, label %48

44:                                               ; preds = %41
  %45 = load i64, i64* %13, align 8
  %46 = urem i64 %45, 2
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %49, label %48

48:                                               ; preds = %44, %41, %38
  store i1 false, i1* %4, align 1
  br label %188

49:                                               ; preds = %44
  store i64 0, i64* %11, align 8
  br label %50

50:                                               ; preds = %64, %49
  %51 = load i64, i64* %11, align 8
  %52 = load i64, i64* %13, align 8
  %53 = icmp ult i64 %51, %52
  br i1 %53, label %54, label %67

54:                                               ; preds = %50
  %55 = load i8*, i8** %6, align 8
  %56 = load i64, i64* %11, align 8
  %57 = getelementptr inbounds i8, i8* %55, i64 %56
  %58 = load i8, i8* %57, align 1
  %59 = sext i8 %58 to i32
  %60 = sub i32 %59, 48
  %61 = icmp ule i32 %60, 9
  br i1 %61, label %63, label %62

62:                                               ; preds = %54
  store i1 false, i1* %4, align 1
  br label %188

63:                                               ; preds = %54
  br label %64

64:                                               ; preds = %63
  %65 = load i64, i64* %11, align 8
  %66 = add i64 %65, 1
  store i64 %66, i64* %11, align 8
  br label %50

67:                                               ; preds = %50
  %68 = load i64, i64* %13, align 8
  %69 = udiv i64 %68, 2
  store i64 %69, i64* %13, align 8
  store i64 0, i64* %11, align 8
  br label %70

70:                                               ; preds = %94, %67
  %71 = load i64, i64* %11, align 8
  %72 = load i64, i64* %13, align 8
  %73 = icmp ult i64 %71, %72
  br i1 %73, label %74, label %97

74:                                               ; preds = %70
  %75 = load i8*, i8** %6, align 8
  %76 = load i64, i64* %11, align 8
  %77 = mul i64 2, %76
  %78 = getelementptr inbounds i8, i8* %75, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = sext i8 %79 to i32
  %81 = sub nsw i32 %80, 48
  %82 = mul nsw i32 10, %81
  %83 = load i8*, i8** %6, align 8
  %84 = load i64, i64* %11, align 8
  %85 = mul i64 2, %84
  %86 = add i64 %85, 1
  %87 = getelementptr inbounds i8, i8* %83, i64 %86
  %88 = load i8, i8* %87, align 1
  %89 = sext i8 %88 to i32
  %90 = add nsw i32 %82, %89
  %91 = sub nsw i32 %90, 48
  %92 = load i64, i64* %11, align 8
  %93 = getelementptr inbounds [6 x i32], [6 x i32]* %9, i64 0, i64 %92
  store i32 %91, i32* %93, align 4
  br label %94

94:                                               ; preds = %74
  %95 = load i64, i64* %11, align 8
  %96 = add i64 %95, 1
  store i64 %96, i64* %11, align 8
  br label %70

97:                                               ; preds = %70
  %98 = getelementptr inbounds [6 x i32], [6 x i32]* %9, i64 0, i64 0
  store i32* %98, i32** %10, align 8
  %99 = load i32, i32* %7, align 4
  %100 = and i32 %99, 1
  %101 = icmp ne i32 %100, 0
  br i1 %101, label %115, label %102

102:                                              ; preds = %97
  %103 = load %struct.tm*, %struct.tm** %5, align 8
  %104 = load i32*, i32** %10, align 8
  %105 = load i64, i64* %13, align 8
  %106 = sub i64 %105, 4
  %107 = load i32, i32* %7, align 4
  %108 = call zeroext i1 @year(%struct.tm* %103, i32* %104, i64 %106, i32 %107)
  br i1 %108, label %110, label %109

109:                                              ; preds = %102
  store i1 false, i1* %4, align 1
  br label %188

110:                                              ; preds = %102
  %111 = load i64, i64* %13, align 8
  %112 = sub i64 %111, 4
  %113 = load i32*, i32** %10, align 8
  %114 = getelementptr inbounds i32, i32* %113, i64 %112
  store i32* %114, i32** %10, align 8
  store i64 4, i64* %13, align 8
  br label %115

115:                                              ; preds = %110, %97
  %116 = load i32*, i32** %10, align 8
  %117 = getelementptr inbounds i32, i32* %116, i32 1
  store i32* %117, i32** %10, align 8
  %118 = load i32, i32* %116, align 4
  %119 = sub nsw i32 %118, 1
  %120 = load %struct.tm*, %struct.tm** %5, align 8
  %121 = getelementptr inbounds %struct.tm, %struct.tm* %120, i32 0, i32 4
  store i32 %119, i32* %121, align 8
  %122 = load i32*, i32** %10, align 8
  %123 = getelementptr inbounds i32, i32* %122, i32 1
  store i32* %123, i32** %10, align 8
  %124 = load i32, i32* %122, align 4
  %125 = load %struct.tm*, %struct.tm** %5, align 8
  %126 = getelementptr inbounds %struct.tm, %struct.tm* %125, i32 0, i32 3
  store i32 %124, i32* %126, align 4
  %127 = load i32*, i32** %10, align 8
  %128 = getelementptr inbounds i32, i32* %127, i32 1
  store i32* %128, i32** %10, align 8
  %129 = load i32, i32* %127, align 4
  %130 = load %struct.tm*, %struct.tm** %5, align 8
  %131 = getelementptr inbounds %struct.tm, %struct.tm* %130, i32 0, i32 2
  store i32 %129, i32* %131, align 8
  %132 = load i32*, i32** %10, align 8
  %133 = getelementptr inbounds i32, i32* %132, i32 1
  store i32* %133, i32** %10, align 8
  %134 = load i32, i32* %132, align 4
  %135 = load %struct.tm*, %struct.tm** %5, align 8
  %136 = getelementptr inbounds %struct.tm, %struct.tm* %135, i32 0, i32 1
  store i32 %134, i32* %136, align 4
  %137 = load i64, i64* %13, align 8
  %138 = sub i64 %137, 4
  store i64 %138, i64* %13, align 8
  %139 = load i32, i32* %7, align 4
  %140 = and i32 %139, 1
  %141 = icmp ne i32 %140, 0
  br i1 %141, label %142, label %150

142:                                              ; preds = %115
  %143 = load %struct.tm*, %struct.tm** %5, align 8
  %144 = load i32*, i32** %10, align 8
  %145 = load i64, i64* %13, align 8
  %146 = load i32, i32* %7, align 4
  %147 = call zeroext i1 @year(%struct.tm* %143, i32* %144, i64 %145, i32 %146)
  br i1 %147, label %149, label %148

148:                                              ; preds = %142
  store i1 false, i1* %4, align 1
  br label %188

149:                                              ; preds = %142
  br label %150

150:                                              ; preds = %149, %115
  %151 = load i8*, i8** %8, align 8
  %152 = icmp ne i8* %151, null
  br i1 %152, label %156, label %153

153:                                              ; preds = %150
  %154 = load %struct.tm*, %struct.tm** %5, align 8
  %155 = getelementptr inbounds %struct.tm, %struct.tm* %154, i32 0, i32 0
  store i32 0, i32* %155, align 8
  br label %187

156:                                              ; preds = %150
  %157 = load i8*, i8** %8, align 8
  %158 = getelementptr inbounds i8, i8* %157, i64 1
  %159 = load i8, i8* %158, align 1
  %160 = sext i8 %159 to i32
  %161 = sub i32 %160, 48
  %162 = icmp ule i32 %161, 9
  br i1 %162, label %163, label %185

163:                                              ; preds = %156
  %164 = load i8*, i8** %8, align 8
  %165 = getelementptr inbounds i8, i8* %164, i64 2
  %166 = load i8, i8* %165, align 1
  %167 = sext i8 %166 to i32
  %168 = sub i32 %167, 48
  %169 = icmp ule i32 %168, 9
  br i1 %169, label %170, label %185

170:                                              ; preds = %163
  %171 = load i8*, i8** %8, align 8
  %172 = getelementptr inbounds i8, i8* %171, i64 1
  %173 = load i8, i8* %172, align 1
  %174 = sext i8 %173 to i32
  %175 = sub nsw i32 %174, 48
  %176 = mul nsw i32 10, %175
  %177 = load i8*, i8** %8, align 8
  %178 = getelementptr inbounds i8, i8* %177, i64 2
  %179 = load i8, i8* %178, align 1
  %180 = sext i8 %179 to i32
  %181 = add nsw i32 %176, %180
  %182 = sub nsw i32 %181, 48
  %183 = load %struct.tm*, %struct.tm** %5, align 8
  %184 = getelementptr inbounds %struct.tm, %struct.tm* %183, i32 0, i32 0
  store i32 %182, i32* %184, align 8
  br label %186

185:                                              ; preds = %163, %156
  store i1 false, i1* %4, align 1
  br label %188

186:                                              ; preds = %170
  br label %187

187:                                              ; preds = %186, %153
  store i1 true, i1* %4, align 1
  br label %188

188:                                              ; preds = %187, %185, %148, %109, %62, %48, %35
  %189 = load i1, i1* %4, align 1
  ret i1 %189
}

; Function Attrs: nounwind
declare dso_local i64 @mktime(%struct.tm*) #1

; Function Attrs: nounwind
declare dso_local i8* @stpcpy(i8*, i8*) #1

; Function Attrs: nounwind
declare dso_local i8* @strcpy(i8*, i8*) #1

; Function Attrs: nounwind readonly
declare dso_local i8* @strchr(i8*, i32) #6

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @year(%struct.tm*, i32*, i64, i32) #3 {
  %5 = alloca i1, align 1
  %6 = alloca %struct.tm*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i32, align 4
  %10 = alloca i64, align 8
  %11 = alloca %struct.tm*, align 8
  store %struct.tm* %0, %struct.tm** %6, align 8
  store i32* %1, i32** %7, align 8
  store i64 %2, i64* %8, align 8
  store i32 %3, i32* %9, align 4
  %12 = load i64, i64* %8, align 8
  switch i64 %12, label %62 [
    i64 1, label %13
    i64 2, label %33
    i64 0, label %50
  ]

13:                                               ; preds = %4
  %14 = load i32*, i32** %7, align 8
  %15 = load i32, i32* %14, align 4
  %16 = load %struct.tm*, %struct.tm** %6, align 8
  %17 = getelementptr inbounds %struct.tm, %struct.tm* %16, i32 0, i32 5
  store i32 %15, i32* %17, align 4
  %18 = load i32*, i32** %7, align 8
  %19 = getelementptr inbounds i32, i32* %18, i64 0
  %20 = load i32, i32* %19, align 4
  %21 = icmp sle i32 %20, 68
  br i1 %21, label %22, label %32

22:                                               ; preds = %13
  %23 = load i32, i32* %9, align 4
  %24 = and i32 %23, 8
  %25 = icmp ne i32 %24, 0
  br i1 %25, label %26, label %27

26:                                               ; preds = %22
  store i1 false, i1* %5, align 1
  br label %64

27:                                               ; preds = %22
  %28 = load %struct.tm*, %struct.tm** %6, align 8
  %29 = getelementptr inbounds %struct.tm, %struct.tm* %28, i32 0, i32 5
  %30 = load i32, i32* %29, align 4
  %31 = add nsw i32 %30, 100
  store i32 %31, i32* %29, align 4
  br label %32

32:                                               ; preds = %27, %13
  br label %63

33:                                               ; preds = %4
  %34 = load i32, i32* %9, align 4
  %35 = and i32 %34, 2
  %36 = icmp ne i32 %35, 0
  br i1 %36, label %38, label %37

37:                                               ; preds = %33
  store i1 false, i1* %5, align 1
  br label %64

38:                                               ; preds = %33
  %39 = load i32*, i32** %7, align 8
  %40 = getelementptr inbounds i32, i32* %39, i64 0
  %41 = load i32, i32* %40, align 4
  %42 = mul nsw i32 %41, 100
  %43 = load i32*, i32** %7, align 8
  %44 = getelementptr inbounds i32, i32* %43, i64 1
  %45 = load i32, i32* %44, align 4
  %46 = add nsw i32 %42, %45
  %47 = sub nsw i32 %46, 1900
  %48 = load %struct.tm*, %struct.tm** %6, align 8
  %49 = getelementptr inbounds %struct.tm, %struct.tm* %48, i32 0, i32 5
  store i32 %47, i32* %49, align 4
  br label %63

50:                                               ; preds = %4
  %51 = call i64 @time(i64* %10) #11
  %52 = call %struct.tm* @localtime(i64* %10) #11
  store %struct.tm* %52, %struct.tm** %11, align 8
  %53 = load %struct.tm*, %struct.tm** %11, align 8
  %54 = icmp ne %struct.tm* %53, null
  br i1 %54, label %56, label %55

55:                                               ; preds = %50
  store i1 false, i1* %5, align 1
  br label %64

56:                                               ; preds = %50
  %57 = load %struct.tm*, %struct.tm** %11, align 8
  %58 = getelementptr inbounds %struct.tm, %struct.tm* %57, i32 0, i32 5
  %59 = load i32, i32* %58, align 4
  %60 = load %struct.tm*, %struct.tm** %6, align 8
  %61 = getelementptr inbounds %struct.tm, %struct.tm* %60, i32 0, i32 5
  store i32 %59, i32* %61, align 4
  br label %63

62:                                               ; preds = %4
  call void @abort() #12
  unreachable

63:                                               ; preds = %56, %38, %32
  store i1 true, i1* %5, align 1
  br label %64

64:                                               ; preds = %63, %55, %37, %26
  %65 = load i1, i1* %5, align 1
  ret i1 %65
}

; Function Attrs: nounwind
declare dso_local i64 @time(i64*) #1

; Function Attrs: nounwind
declare dso_local %struct.tm* @localtime(i64*) #1

; Function Attrs: noreturn nounwind
declare dso_local void @abort() #4

; Function Attrs: noinline nounwind optnone uwtable
define internal void @set_program_name(i8*) #3 {
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %5 = load i8*, i8** %2, align 8
  %6 = icmp eq i8* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %9 = call i32 @fputs(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.261, i64 0, i64 0), %struct._IO_FILE* %8)
  call void @abort() #12
  unreachable

10:                                               ; preds = %1
  %11 = load i8*, i8** %2, align 8
  %12 = call i8* @strrchr(i8* %11, i32 47) #13
  store i8* %12, i8** %3, align 8
  %13 = load i8*, i8** %3, align 8
  %14 = icmp ne i8* %13, null
  br i1 %14, label %15, label %18

15:                                               ; preds = %10
  %16 = load i8*, i8** %3, align 8
  %17 = getelementptr inbounds i8, i8* %16, i64 1
  br label %20

18:                                               ; preds = %10
  %19 = load i8*, i8** %2, align 8
  br label %20

20:                                               ; preds = %18, %15
  %21 = phi i8* [ %17, %15 ], [ %19, %18 ]
  store i8* %21, i8** %4, align 8
  %22 = load i8*, i8** %4, align 8
  %23 = load i8*, i8** %2, align 8
  %24 = ptrtoint i8* %22 to i64
  %25 = ptrtoint i8* %23 to i64
  %26 = sub i64 %24, %25
  %27 = icmp sge i64 %26, 7
  br i1 %27, label %28, label %43

28:                                               ; preds = %20
  %29 = load i8*, i8** %4, align 8
  %30 = getelementptr inbounds i8, i8* %29, i64 -7
  %31 = call i32 @strncmp(i8* %30, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.262, i64 0, i64 0), i64 7) #13
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %43

33:                                               ; preds = %28
  %34 = load i8*, i8** %4, align 8
  store i8* %34, i8** %2, align 8
  %35 = load i8*, i8** %4, align 8
  %36 = call i32 @strncmp(i8* %35, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.263, i64 0, i64 0), i64 3) #13
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %42

38:                                               ; preds = %33
  %39 = load i8*, i8** %4, align 8
  %40 = getelementptr inbounds i8, i8* %39, i64 3
  store i8* %40, i8** %2, align 8
  %41 = load i8*, i8** %2, align 8
  store i8* %41, i8** @program_invocation_short_name, align 8
  br label %42

42:                                               ; preds = %38, %33
  br label %43

43:                                               ; preds = %42, %28, %20
  %44 = load i8*, i8** %2, align 8
  store i8* %44, i8** @program_name, align 8
  %45 = load i8*, i8** %2, align 8
  store i8* %45, i8** @program_invocation_name, align 8
  ret void
}

; Function Attrs: nounwind readonly
declare dso_local i8* @strrchr(i8*, i32) #6

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @set_char_quoting(%struct.quoting_options*, i8 signext, i32) #3 {
  %4 = alloca %struct.quoting_options*, align 8
  %5 = alloca i8, align 1
  %6 = alloca i32, align 4
  %7 = alloca i8, align 1
  %8 = alloca i32*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  store %struct.quoting_options* %0, %struct.quoting_options** %4, align 8
  store i8 %1, i8* %5, align 1
  store i32 %2, i32* %6, align 4
  %11 = load i8, i8* %5, align 1
  store i8 %11, i8* %7, align 1
  %12 = load %struct.quoting_options*, %struct.quoting_options** %4, align 8
  %13 = icmp ne %struct.quoting_options* %12, null
  br i1 %13, label %14, label %16

14:                                               ; preds = %3
  %15 = load %struct.quoting_options*, %struct.quoting_options** %4, align 8
  br label %17

16:                                               ; preds = %3
  br label %17

17:                                               ; preds = %16, %14
  %18 = phi %struct.quoting_options* [ %15, %14 ], [ @default_quoting_options, %16 ]
  %19 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %18, i32 0, i32 2
  %20 = getelementptr inbounds [8 x i32], [8 x i32]* %19, i64 0, i64 0
  %21 = load i8, i8* %7, align 1
  %22 = zext i8 %21 to i64
  %23 = udiv i64 %22, 32
  %24 = getelementptr inbounds i32, i32* %20, i64 %23
  store i32* %24, i32** %8, align 8
  %25 = load i8, i8* %7, align 1
  %26 = zext i8 %25 to i64
  %27 = urem i64 %26, 32
  %28 = trunc i64 %27 to i32
  store i32 %28, i32* %9, align 4
  %29 = load i32*, i32** %8, align 8
  %30 = load i32, i32* %29, align 4
  %31 = load i32, i32* %9, align 4
  %32 = lshr i32 %30, %31
  %33 = and i32 %32, 1
  store i32 %33, i32* %10, align 4
  %34 = load i32, i32* %6, align 4
  %35 = and i32 %34, 1
  %36 = load i32, i32* %10, align 4
  %37 = xor i32 %35, %36
  %38 = load i32, i32* %9, align 4
  %39 = shl i32 %37, %38
  %40 = load i32*, i32** %8, align 8
  %41 = load i32, i32* %40, align 4
  %42 = xor i32 %41, %39
  store i32 %42, i32* %40, align 4
  %43 = load i32, i32* %10, align 4
  ret i32 %43
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quotearg_n_style(i32, i32, i8*) #3 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca %struct.quoting_options, align 8
  store i32 %0, i32* %4, align 4
  store i32 %1, i32* %5, align 4
  store i8* %2, i8** %6, align 8
  %8 = load i32, i32* %5, align 4
  call void @quoting_options_from_style(%struct.quoting_options* sret %7, i32 %8)
  %9 = load i32, i32* %4, align 4
  %10 = load i8*, i8** %6, align 8
  %11 = call i8* @quotearg_n_options(i32 %9, i8* %10, i64 -1, %struct.quoting_options* %7)
  ret i8* %11
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @quoting_options_from_style(%struct.quoting_options* noalias sret, i32) #3 {
  %3 = alloca i32, align 4
  store i32 %1, i32* %3, align 4
  %4 = bitcast %struct.quoting_options* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 56, i1 false)
  %5 = load i32, i32* %3, align 4
  %6 = icmp eq i32 %5, 10
  br i1 %6, label %7, label %8

7:                                                ; preds = %2
  call void @abort() #12
  unreachable

8:                                                ; preds = %2
  %9 = load i32, i32* %3, align 4
  %10 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %0, i32 0, i32 0
  store i32 %9, i32* %10, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quotearg_n_options(i32, i8*, i64, %struct.quoting_options*) #3 {
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca %struct.quoting_options*, align 8
  %9 = alloca i32, align 4
  %10 = alloca %struct.slotvec*, align 8
  %11 = alloca i8, align 1
  %12 = alloca i32, align 4
  %13 = alloca i64, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i64, align 8
  store i32 %0, i32* %5, align 4
  store i8* %1, i8** %6, align 8
  store i64 %2, i64* %7, align 8
  store %struct.quoting_options* %3, %struct.quoting_options** %8, align 8
  %17 = call i32* @__errno_location() #15
  %18 = load i32, i32* %17, align 4
  store i32 %18, i32* %9, align 4
  %19 = load %struct.slotvec*, %struct.slotvec** @slotvec, align 8
  store %struct.slotvec* %19, %struct.slotvec** %10, align 8
  %20 = load i32, i32* %5, align 4
  %21 = icmp slt i32 %20, 0
  br i1 %21, label %22, label %23

22:                                               ; preds = %4
  call void @abort() #12
  unreachable

23:                                               ; preds = %4
  %24 = load i32, i32* @nslots, align 4
  %25 = load i32, i32* %5, align 4
  %26 = icmp sle i32 %24, %25
  br i1 %26, label %27, label %69

27:                                               ; preds = %23
  %28 = load %struct.slotvec*, %struct.slotvec** %10, align 8
  %29 = icmp eq %struct.slotvec* %28, @slotvec0
  %30 = zext i1 %29 to i8
  store i8 %30, i8* %11, align 1
  store i32 2147483646, i32* %12, align 4
  %31 = load i32, i32* %12, align 4
  %32 = load i32, i32* %5, align 4
  %33 = icmp slt i32 %31, %32
  br i1 %33, label %34, label %35

34:                                               ; preds = %27
  call void @xalloc_die() #14
  unreachable

35:                                               ; preds = %27
  %36 = load i8, i8* %11, align 1
  %37 = trunc i8 %36 to i1
  br i1 %37, label %38, label %39

38:                                               ; preds = %35
  br label %41

39:                                               ; preds = %35
  %40 = load %struct.slotvec*, %struct.slotvec** %10, align 8
  br label %41

41:                                               ; preds = %39, %38
  %42 = phi %struct.slotvec* [ null, %38 ], [ %40, %39 ]
  %43 = bitcast %struct.slotvec* %42 to i8*
  %44 = load i32, i32* %5, align 4
  %45 = add nsw i32 %44, 1
  %46 = sext i32 %45 to i64
  %47 = mul i64 %46, 16
  %48 = call i8* @xrealloc(i8* %43, i64 %47)
  %49 = bitcast i8* %48 to %struct.slotvec*
  store %struct.slotvec* %49, %struct.slotvec** %10, align 8
  store %struct.slotvec* %49, %struct.slotvec** @slotvec, align 8
  %50 = load i8, i8* %11, align 1
  %51 = trunc i8 %50 to i1
  br i1 %51, label %52, label %55

52:                                               ; preds = %41
  %53 = load %struct.slotvec*, %struct.slotvec** %10, align 8
  %54 = bitcast %struct.slotvec* %53 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %54, i8* align 8 bitcast (%struct.slotvec* @slotvec0 to i8*), i64 16, i1 false)
  br label %55

55:                                               ; preds = %52, %41
  %56 = load %struct.slotvec*, %struct.slotvec** %10, align 8
  %57 = load i32, i32* @nslots, align 4
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %56, i64 %58
  %60 = bitcast %struct.slotvec* %59 to i8*
  %61 = load i32, i32* %5, align 4
  %62 = add nsw i32 %61, 1
  %63 = load i32, i32* @nslots, align 4
  %64 = sub nsw i32 %62, %63
  %65 = sext i32 %64 to i64
  %66 = mul i64 %65, 16
  call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 %66, i1 false)
  %67 = load i32, i32* %5, align 4
  %68 = add nsw i32 %67, 1
  store i32 %68, i32* @nslots, align 4
  br label %69

69:                                               ; preds = %55, %23
  %70 = load %struct.slotvec*, %struct.slotvec** %10, align 8
  %71 = load i32, i32* %5, align 4
  %72 = sext i32 %71 to i64
  %73 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %70, i64 %72
  %74 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %73, i32 0, i32 0
  %75 = load i64, i64* %74, align 8
  store i64 %75, i64* %13, align 8
  %76 = load %struct.slotvec*, %struct.slotvec** %10, align 8
  %77 = load i32, i32* %5, align 4
  %78 = sext i32 %77 to i64
  %79 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %76, i64 %78
  %80 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %79, i32 0, i32 1
  %81 = load i8*, i8** %80, align 8
  store i8* %81, i8** %14, align 8
  %82 = load %struct.quoting_options*, %struct.quoting_options** %8, align 8
  %83 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %82, i32 0, i32 1
  %84 = load i32, i32* %83, align 4
  %85 = or i32 %84, 1
  store i32 %85, i32* %15, align 4
  %86 = load i8*, i8** %14, align 8
  %87 = load i64, i64* %13, align 8
  %88 = load i8*, i8** %6, align 8
  %89 = load i64, i64* %7, align 8
  %90 = load %struct.quoting_options*, %struct.quoting_options** %8, align 8
  %91 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %90, i32 0, i32 0
  %92 = load i32, i32* %91, align 8
  %93 = load i32, i32* %15, align 4
  %94 = load %struct.quoting_options*, %struct.quoting_options** %8, align 8
  %95 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %94, i32 0, i32 2
  %96 = getelementptr inbounds [8 x i32], [8 x i32]* %95, i64 0, i64 0
  %97 = load %struct.quoting_options*, %struct.quoting_options** %8, align 8
  %98 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %97, i32 0, i32 3
  %99 = load i8*, i8** %98, align 8
  %100 = load %struct.quoting_options*, %struct.quoting_options** %8, align 8
  %101 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %100, i32 0, i32 4
  %102 = load i8*, i8** %101, align 8
  %103 = call i64 @quotearg_buffer_restyled(i8* %86, i64 %87, i8* %88, i64 %89, i32 %92, i32 %93, i32* %96, i8* %99, i8* %102)
  store i64 %103, i64* %16, align 8
  %104 = load i64, i64* %13, align 8
  %105 = load i64, i64* %16, align 8
  %106 = icmp ule i64 %104, %105
  br i1 %106, label %107, label %145

107:                                              ; preds = %69
  %108 = load i64, i64* %16, align 8
  %109 = add i64 %108, 1
  store i64 %109, i64* %13, align 8
  %110 = load %struct.slotvec*, %struct.slotvec** %10, align 8
  %111 = load i32, i32* %5, align 4
  %112 = sext i32 %111 to i64
  %113 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %110, i64 %112
  %114 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %113, i32 0, i32 0
  store i64 %109, i64* %114, align 8
  %115 = load i8*, i8** %14, align 8
  %116 = icmp ne i8* %115, getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i64 0, i64 0)
  br i1 %116, label %117, label %119

117:                                              ; preds = %107
  %118 = load i8*, i8** %14, align 8
  call void @free(i8* %118) #11
  br label %119

119:                                              ; preds = %117, %107
  %120 = load i64, i64* %13, align 8
  %121 = call noalias i8* @xcharalloc(i64 %120)
  store i8* %121, i8** %14, align 8
  %122 = load %struct.slotvec*, %struct.slotvec** %10, align 8
  %123 = load i32, i32* %5, align 4
  %124 = sext i32 %123 to i64
  %125 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %122, i64 %124
  %126 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %125, i32 0, i32 1
  store i8* %121, i8** %126, align 8
  %127 = load i8*, i8** %14, align 8
  %128 = load i64, i64* %13, align 8
  %129 = load i8*, i8** %6, align 8
  %130 = load i64, i64* %7, align 8
  %131 = load %struct.quoting_options*, %struct.quoting_options** %8, align 8
  %132 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %131, i32 0, i32 0
  %133 = load i32, i32* %132, align 8
  %134 = load i32, i32* %15, align 4
  %135 = load %struct.quoting_options*, %struct.quoting_options** %8, align 8
  %136 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %135, i32 0, i32 2
  %137 = getelementptr inbounds [8 x i32], [8 x i32]* %136, i64 0, i64 0
  %138 = load %struct.quoting_options*, %struct.quoting_options** %8, align 8
  %139 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %138, i32 0, i32 3
  %140 = load i8*, i8** %139, align 8
  %141 = load %struct.quoting_options*, %struct.quoting_options** %8, align 8
  %142 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %141, i32 0, i32 4
  %143 = load i8*, i8** %142, align 8
  %144 = call i64 @quotearg_buffer_restyled(i8* %127, i64 %128, i8* %129, i64 %130, i32 %133, i32 %134, i32* %137, i8* %140, i8* %143)
  br label %145

145:                                              ; preds = %119, %69
  %146 = load i32, i32* %9, align 4
  %147 = call i32* @__errno_location() #15
  store i32 %146, i32* %147, align 4
  %148 = load i8*, i8** %14, align 8
  ret i8* %148
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @quotearg_buffer_restyled(i8*, i64, i8*, i64, i32, i32, i32*, i8*, i8*) #3 {
  %10 = alloca i64, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i64, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i64, align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32*, align 8
  %18 = alloca i8*, align 8
  %19 = alloca i8*, align 8
  %20 = alloca i64, align 8
  %21 = alloca i64, align 8
  %22 = alloca i64, align 8
  %23 = alloca i8*, align 8
  %24 = alloca i64, align 8
  %25 = alloca i8, align 1
  %26 = alloca i8, align 1
  %27 = alloca i8, align 1
  %28 = alloca i8, align 1
  %29 = alloca i8, align 1
  %30 = alloca i8, align 1
  %31 = alloca i8, align 1
  %32 = alloca i8, align 1
  %33 = alloca i8, align 1
  %34 = alloca i8, align 1
  %35 = alloca i8, align 1
  %36 = alloca i64, align 8
  %37 = alloca i8, align 1
  %38 = alloca %struct.__mbstate_t, align 4
  %39 = alloca i32, align 4
  %40 = alloca i64, align 8
  %41 = alloca i64, align 8
  %42 = alloca i64, align 8
  store i8* %0, i8** %11, align 8
  store i64 %1, i64* %12, align 8
  store i8* %2, i8** %13, align 8
  store i64 %3, i64* %14, align 8
  store i32 %4, i32* %15, align 4
  store i32 %5, i32* %16, align 4
  store i32* %6, i32** %17, align 8
  store i8* %7, i8** %18, align 8
  store i8* %8, i8** %19, align 8
  store i64 0, i64* %21, align 8
  store i64 0, i64* %22, align 8
  store i8* null, i8** %23, align 8
  store i64 0, i64* %24, align 8
  store i8 0, i8* %25, align 1
  %43 = call i64 @__ctype_get_mb_cur_max() #11
  %44 = icmp eq i64 %43, 1
  %45 = zext i1 %44 to i8
  store i8 %45, i8* %26, align 1
  %46 = load i32, i32* %16, align 4
  %47 = and i32 %46, 2
  %48 = icmp ne i32 %47, 0
  %49 = zext i1 %48 to i8
  store i8 %49, i8* %27, align 1
  store i8 0, i8* %28, align 1
  store i8 0, i8* %29, align 1
  store i8 1, i8* %30, align 1
  br label %50

50:                                               ; preds = %1042, %9
  %51 = load i32, i32* %15, align 4
  switch i32 %51, label %136 [
    i32 6, label %52
    i32 5, label %53
    i32 7, label %70
    i32 8, label %71
    i32 9, label %71
    i32 10, label %71
    i32 3, label %111
    i32 1, label %112
    i32 4, label %113
    i32 2, label %118
    i32 0, label %135
  ]

52:                                               ; preds = %50
  store i32 5, i32* %15, align 4
  store i8 1, i8* %27, align 1
  br label %53

53:                                               ; preds = %52, %50
  %54 = load i8, i8* %27, align 1
  %55 = trunc i8 %54 to i1
  br i1 %55, label %69, label %56

56:                                               ; preds = %53
  br label %57

57:                                               ; preds = %56
  %58 = load i64, i64* %21, align 8
  %59 = load i64, i64* %12, align 8
  %60 = icmp ult i64 %58, %59
  br i1 %60, label %61, label %65

61:                                               ; preds = %57
  %62 = load i8*, i8** %11, align 8
  %63 = load i64, i64* %21, align 8
  %64 = getelementptr inbounds i8, i8* %62, i64 %63
  store i8 34, i8* %64, align 1
  br label %65

65:                                               ; preds = %61, %57
  %66 = load i64, i64* %21, align 8
  %67 = add i64 %66, 1
  store i64 %67, i64* %21, align 8
  br label %68

68:                                               ; preds = %65
  br label %69

69:                                               ; preds = %68, %53
  store i8 1, i8* %25, align 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.268, i64 0, i64 0), i8** %23, align 8
  store i64 1, i64* %24, align 8
  br label %137

70:                                               ; preds = %50
  store i8 1, i8* %25, align 1
  store i8 0, i8* %27, align 1
  br label %137

71:                                               ; preds = %50, %50, %50
  %72 = load i32, i32* %15, align 4
  %73 = icmp ne i32 %72, 10
  br i1 %73, label %74, label %79

74:                                               ; preds = %71
  %75 = load i32, i32* %15, align 4
  %76 = call i8* @gettext_quote(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11.269, i64 0, i64 0), i32 %75)
  store i8* %76, i8** %18, align 8
  %77 = load i32, i32* %15, align 4
  %78 = call i8* @gettext_quote(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.270, i64 0, i64 0), i32 %77)
  store i8* %78, i8** %19, align 8
  br label %79

79:                                               ; preds = %74, %71
  %80 = load i8, i8* %27, align 1
  %81 = trunc i8 %80 to i1
  br i1 %81, label %107, label %82

82:                                               ; preds = %79
  %83 = load i8*, i8** %18, align 8
  store i8* %83, i8** %23, align 8
  br label %84

84:                                               ; preds = %103, %82
  %85 = load i8*, i8** %23, align 8
  %86 = load i8, i8* %85, align 1
  %87 = icmp ne i8 %86, 0
  br i1 %87, label %88, label %106

88:                                               ; preds = %84
  br label %89

89:                                               ; preds = %88
  %90 = load i64, i64* %21, align 8
  %91 = load i64, i64* %12, align 8
  %92 = icmp ult i64 %90, %91
  br i1 %92, label %93, label %99

93:                                               ; preds = %89
  %94 = load i8*, i8** %23, align 8
  %95 = load i8, i8* %94, align 1
  %96 = load i8*, i8** %11, align 8
  %97 = load i64, i64* %21, align 8
  %98 = getelementptr inbounds i8, i8* %96, i64 %97
  store i8 %95, i8* %98, align 1
  br label %99

99:                                               ; preds = %93, %89
  %100 = load i64, i64* %21, align 8
  %101 = add i64 %100, 1
  store i64 %101, i64* %21, align 8
  br label %102

102:                                              ; preds = %99
  br label %103

103:                                              ; preds = %102
  %104 = load i8*, i8** %23, align 8
  %105 = getelementptr inbounds i8, i8* %104, i32 1
  store i8* %105, i8** %23, align 8
  br label %84

106:                                              ; preds = %84
  br label %107

107:                                              ; preds = %106, %79
  store i8 1, i8* %25, align 1
  %108 = load i8*, i8** %19, align 8
  store i8* %108, i8** %23, align 8
  %109 = load i8*, i8** %23, align 8
  %110 = call i64 @strlen(i8* %109) #13
  store i64 %110, i64* %24, align 8
  br label %137

111:                                              ; preds = %50
  store i8 1, i8* %25, align 1
  br label %112

112:                                              ; preds = %111, %50
  store i8 1, i8* %27, align 1
  br label %113

113:                                              ; preds = %112, %50
  %114 = load i8, i8* %27, align 1
  %115 = trunc i8 %114 to i1
  br i1 %115, label %117, label %116

116:                                              ; preds = %113
  store i8 1, i8* %25, align 1
  br label %117

117:                                              ; preds = %116, %113
  br label %118

118:                                              ; preds = %117, %50
  store i32 2, i32* %15, align 4
  %119 = load i8, i8* %27, align 1
  %120 = trunc i8 %119 to i1
  br i1 %120, label %134, label %121

121:                                              ; preds = %118
  br label %122

122:                                              ; preds = %121
  %123 = load i64, i64* %21, align 8
  %124 = load i64, i64* %12, align 8
  %125 = icmp ult i64 %123, %124
  br i1 %125, label %126, label %130

126:                                              ; preds = %122
  %127 = load i8*, i8** %11, align 8
  %128 = load i64, i64* %21, align 8
  %129 = getelementptr inbounds i8, i8* %127, i64 %128
  store i8 39, i8* %129, align 1
  br label %130

130:                                              ; preds = %126, %122
  %131 = load i64, i64* %21, align 8
  %132 = add i64 %131, 1
  store i64 %132, i64* %21, align 8
  br label %133

133:                                              ; preds = %130
  br label %134

134:                                              ; preds = %133, %118
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.270, i64 0, i64 0), i8** %23, align 8
  store i64 1, i64* %24, align 8
  br label %137

135:                                              ; preds = %50
  store i8 0, i8* %27, align 1
  br label %137

136:                                              ; preds = %50
  call void @abort() #12
  unreachable

137:                                              ; preds = %135, %134, %107, %70, %69
  store i64 0, i64* %20, align 8
  br label %138

138:                                              ; preds = %1001, %137
  %139 = load i64, i64* %14, align 8
  %140 = icmp eq i64 %139, -1
  br i1 %140, label %141, label %149

141:                                              ; preds = %138
  %142 = load i8*, i8** %13, align 8
  %143 = load i64, i64* %20, align 8
  %144 = getelementptr inbounds i8, i8* %142, i64 %143
  %145 = load i8, i8* %144, align 1
  %146 = sext i8 %145 to i32
  %147 = icmp eq i32 %146, 0
  %148 = zext i1 %147 to i32
  br label %154

149:                                              ; preds = %138
  %150 = load i64, i64* %20, align 8
  %151 = load i64, i64* %14, align 8
  %152 = icmp eq i64 %150, %151
  %153 = zext i1 %152 to i32
  br label %154

154:                                              ; preds = %149, %141
  %155 = phi i32 [ %148, %141 ], [ %153, %149 ]
  %156 = icmp ne i32 %155, 0
  %157 = xor i1 %156, true
  br i1 %157, label %158, label %1004

158:                                              ; preds = %154
  store i8 0, i8* %33, align 1
  store i8 0, i8* %34, align 1
  store i8 0, i8* %35, align 1
  %159 = load i8, i8* %25, align 1
  %160 = trunc i8 %159 to i1
  br i1 %160, label %161, label %197

161:                                              ; preds = %158
  %162 = load i32, i32* %15, align 4
  %163 = icmp ne i32 %162, 2
  br i1 %163, label %164, label %197

164:                                              ; preds = %161
  %165 = load i64, i64* %24, align 8
  %166 = icmp ne i64 %165, 0
  br i1 %166, label %167, label %197

167:                                              ; preds = %164
  %168 = load i64, i64* %20, align 8
  %169 = load i64, i64* %24, align 8
  %170 = add i64 %168, %169
  %171 = load i64, i64* %14, align 8
  %172 = icmp eq i64 %171, -1
  br i1 %172, label %173, label %179

173:                                              ; preds = %167
  %174 = load i64, i64* %24, align 8
  %175 = icmp ult i64 1, %174
  br i1 %175, label %176, label %179

176:                                              ; preds = %173
  %177 = load i8*, i8** %13, align 8
  %178 = call i64 @strlen(i8* %177) #13
  store i64 %178, i64* %14, align 8
  br label %181

179:                                              ; preds = %173, %167
  %180 = load i64, i64* %14, align 8
  br label %181

181:                                              ; preds = %179, %176
  %182 = phi i64 [ %178, %176 ], [ %180, %179 ]
  %183 = icmp ule i64 %170, %182
  br i1 %183, label %184, label %197

184:                                              ; preds = %181
  %185 = load i8*, i8** %13, align 8
  %186 = load i64, i64* %20, align 8
  %187 = getelementptr inbounds i8, i8* %185, i64 %186
  %188 = load i8*, i8** %23, align 8
  %189 = load i64, i64* %24, align 8
  %190 = call i32 @memcmp(i8* %187, i8* %188, i64 %189) #13
  %191 = icmp eq i32 %190, 0
  br i1 %191, label %192, label %197

192:                                              ; preds = %184
  %193 = load i8, i8* %27, align 1
  %194 = trunc i8 %193 to i1
  br i1 %194, label %195, label %196

195:                                              ; preds = %192
  br label %1086

196:                                              ; preds = %192
  store i8 1, i8* %33, align 1
  br label %197

197:                                              ; preds = %196, %184, %181, %164, %161, %158
  %198 = load i8*, i8** %13, align 8
  %199 = load i64, i64* %20, align 8
  %200 = getelementptr inbounds i8, i8* %198, i64 %199
  %201 = load i8, i8* %200, align 1
  store i8 %201, i8* %31, align 1
  %202 = load i8, i8* %31, align 1
  %203 = zext i8 %202 to i32
  switch i32 %203, label %544 [
    i32 0, label %204
    i32 63, label %325
    i32 7, label %421
    i32 8, label %422
    i32 12, label %423
    i32 10, label %424
    i32 13, label %425
    i32 9, label %426
    i32 11, label %427
    i32 92, label %428
    i32 123, label %462
    i32 125, label %462
    i32 35, label %476
    i32 126, label %476
    i32 32, label %481
    i32 33, label %482
    i32 34, label %482
    i32 36, label %482
    i32 38, label %482
    i32 40, label %482
    i32 41, label %482
    i32 42, label %482
    i32 59, label %482
    i32 60, label %482
    i32 61, label %482
    i32 62, label %482
    i32 91, label %482
    i32 94, label %482
    i32 96, label %482
    i32 124, label %482
    i32 39, label %490
    i32 37, label %543
    i32 43, label %543
    i32 44, label %543
    i32 45, label %543
    i32 46, label %543
    i32 47, label %543
    i32 48, label %543
    i32 49, label %543
    i32 50, label %543
    i32 51, label %543
    i32 52, label %543
    i32 53, label %543
    i32 54, label %543
    i32 55, label %543
    i32 56, label %543
    i32 57, label %543
    i32 58, label %543
    i32 65, label %543
    i32 66, label %543
    i32 67, label %543
    i32 68, label %543
    i32 69, label %543
    i32 70, label %543
    i32 71, label %543
    i32 72, label %543
    i32 73, label %543
    i32 74, label %543
    i32 75, label %543
    i32 76, label %543
    i32 77, label %543
    i32 78, label %543
    i32 79, label %543
    i32 80, label %543
    i32 81, label %543
    i32 82, label %543
    i32 83, label %543
    i32 84, label %543
    i32 85, label %543
    i32 86, label %543
    i32 87, label %543
    i32 88, label %543
    i32 89, label %543
    i32 90, label %543
    i32 93, label %543
    i32 95, label %543
    i32 97, label %543
    i32 98, label %543
    i32 99, label %543
    i32 100, label %543
    i32 101, label %543
    i32 102, label %543
    i32 103, label %543
    i32 104, label %543
    i32 105, label %543
    i32 106, label %543
    i32 107, label %543
    i32 108, label %543
    i32 109, label %543
    i32 110, label %543
    i32 111, label %543
    i32 112, label %543
    i32 113, label %543
    i32 114, label %543
    i32 115, label %543
    i32 116, label %543
    i32 117, label %543
    i32 118, label %543
    i32 119, label %543
    i32 120, label %543
    i32 121, label %543
    i32 122, label %543
  ]

204:                                              ; preds = %197
  %205 = load i8, i8* %25, align 1
  %206 = trunc i8 %205 to i1
  br i1 %206, label %207, label %318

207:                                              ; preds = %204
  br label %208

208:                                              ; preds = %207
  %209 = load i8, i8* %27, align 1
  %210 = trunc i8 %209 to i1
  br i1 %210, label %211, label %212

211:                                              ; preds = %208
  br label %1086

212:                                              ; preds = %208
  store i8 1, i8* %34, align 1
  %213 = load i32, i32* %15, align 4
  %214 = icmp eq i32 %213, 2
  br i1 %214, label %215, label %255

215:                                              ; preds = %212
  %216 = load i8, i8* %28, align 1
  %217 = trunc i8 %216 to i1
  br i1 %217, label %255, label %218

218:                                              ; preds = %215
  br label %219

219:                                              ; preds = %218
  %220 = load i64, i64* %21, align 8
  %221 = load i64, i64* %12, align 8
  %222 = icmp ult i64 %220, %221
  br i1 %222, label %223, label %227

223:                                              ; preds = %219
  %224 = load i8*, i8** %11, align 8
  %225 = load i64, i64* %21, align 8
  %226 = getelementptr inbounds i8, i8* %224, i64 %225
  store i8 39, i8* %226, align 1
  br label %227

227:                                              ; preds = %223, %219
  %228 = load i64, i64* %21, align 8
  %229 = add i64 %228, 1
  store i64 %229, i64* %21, align 8
  br label %230

230:                                              ; preds = %227
  br label %231

231:                                              ; preds = %230
  %232 = load i64, i64* %21, align 8
  %233 = load i64, i64* %12, align 8
  %234 = icmp ult i64 %232, %233
  br i1 %234, label %235, label %239

235:                                              ; preds = %231
  %236 = load i8*, i8** %11, align 8
  %237 = load i64, i64* %21, align 8
  %238 = getelementptr inbounds i8, i8* %236, i64 %237
  store i8 36, i8* %238, align 1
  br label %239

239:                                              ; preds = %235, %231
  %240 = load i64, i64* %21, align 8
  %241 = add i64 %240, 1
  store i64 %241, i64* %21, align 8
  br label %242

242:                                              ; preds = %239
  br label %243

243:                                              ; preds = %242
  %244 = load i64, i64* %21, align 8
  %245 = load i64, i64* %12, align 8
  %246 = icmp ult i64 %244, %245
  br i1 %246, label %247, label %251

247:                                              ; preds = %243
  %248 = load i8*, i8** %11, align 8
  %249 = load i64, i64* %21, align 8
  %250 = getelementptr inbounds i8, i8* %248, i64 %249
  store i8 39, i8* %250, align 1
  br label %251

251:                                              ; preds = %247, %243
  %252 = load i64, i64* %21, align 8
  %253 = add i64 %252, 1
  store i64 %253, i64* %21, align 8
  br label %254

254:                                              ; preds = %251
  store i8 1, i8* %28, align 1
  br label %255

255:                                              ; preds = %254, %215, %212
  br label %256

256:                                              ; preds = %255
  %257 = load i64, i64* %21, align 8
  %258 = load i64, i64* %12, align 8
  %259 = icmp ult i64 %257, %258
  br i1 %259, label %260, label %264

260:                                              ; preds = %256
  %261 = load i8*, i8** %11, align 8
  %262 = load i64, i64* %21, align 8
  %263 = getelementptr inbounds i8, i8* %261, i64 %262
  store i8 92, i8* %263, align 1
  br label %264

264:                                              ; preds = %260, %256
  %265 = load i64, i64* %21, align 8
  %266 = add i64 %265, 1
  store i64 %266, i64* %21, align 8
  br label %267

267:                                              ; preds = %264
  br label %268

268:                                              ; preds = %267
  %269 = load i32, i32* %15, align 4
  %270 = icmp ne i32 %269, 2
  br i1 %270, label %271, label %317

271:                                              ; preds = %268
  %272 = load i64, i64* %20, align 8
  %273 = add i64 %272, 1
  %274 = load i64, i64* %14, align 8
  %275 = icmp ult i64 %273, %274
  br i1 %275, label %276, label %317

276:                                              ; preds = %271
  %277 = load i8*, i8** %13, align 8
  %278 = load i64, i64* %20, align 8
  %279 = add i64 %278, 1
  %280 = getelementptr inbounds i8, i8* %277, i64 %279
  %281 = load i8, i8* %280, align 1
  %282 = sext i8 %281 to i32
  %283 = icmp sle i32 48, %282
  br i1 %283, label %284, label %317

284:                                              ; preds = %276
  %285 = load i8*, i8** %13, align 8
  %286 = load i64, i64* %20, align 8
  %287 = add i64 %286, 1
  %288 = getelementptr inbounds i8, i8* %285, i64 %287
  %289 = load i8, i8* %288, align 1
  %290 = sext i8 %289 to i32
  %291 = icmp sle i32 %290, 57
  br i1 %291, label %292, label %317

292:                                              ; preds = %284
  br label %293

293:                                              ; preds = %292
  %294 = load i64, i64* %21, align 8
  %295 = load i64, i64* %12, align 8
  %296 = icmp ult i64 %294, %295
  br i1 %296, label %297, label %301

297:                                              ; preds = %293
  %298 = load i8*, i8** %11, align 8
  %299 = load i64, i64* %21, align 8
  %300 = getelementptr inbounds i8, i8* %298, i64 %299
  store i8 48, i8* %300, align 1
  br label %301

301:                                              ; preds = %297, %293
  %302 = load i64, i64* %21, align 8
  %303 = add i64 %302, 1
  store i64 %303, i64* %21, align 8
  br label %304

304:                                              ; preds = %301
  br label %305

305:                                              ; preds = %304
  %306 = load i64, i64* %21, align 8
  %307 = load i64, i64* %12, align 8
  %308 = icmp ult i64 %306, %307
  br i1 %308, label %309, label %313

309:                                              ; preds = %305
  %310 = load i8*, i8** %11, align 8
  %311 = load i64, i64* %21, align 8
  %312 = getelementptr inbounds i8, i8* %310, i64 %311
  store i8 48, i8* %312, align 1
  br label %313

313:                                              ; preds = %309, %305
  %314 = load i64, i64* %21, align 8
  %315 = add i64 %314, 1
  store i64 %315, i64* %21, align 8
  br label %316

316:                                              ; preds = %313
  br label %317

317:                                              ; preds = %316, %284, %276, %271, %268
  store i8 48, i8* %31, align 1
  br label %324

318:                                              ; preds = %204
  %319 = load i32, i32* %16, align 4
  %320 = and i32 %319, 1
  %321 = icmp ne i32 %320, 0
  br i1 %321, label %322, label %323

322:                                              ; preds = %318
  br label %1001

323:                                              ; preds = %318
  br label %324

324:                                              ; preds = %323, %317
  br label %857

325:                                              ; preds = %197
  %326 = load i32, i32* %15, align 4
  switch i32 %326, label %419 [
    i32 2, label %327
    i32 5, label %332
  ]

327:                                              ; preds = %325
  %328 = load i8, i8* %27, align 1
  %329 = trunc i8 %328 to i1
  br i1 %329, label %330, label %331

330:                                              ; preds = %327
  br label %1086

331:                                              ; preds = %327
  br label %420

332:                                              ; preds = %325
  %333 = load i32, i32* %16, align 4
  %334 = and i32 %333, 4
  %335 = icmp ne i32 %334, 0
  br i1 %335, label %336, label %418

336:                                              ; preds = %332
  %337 = load i64, i64* %20, align 8
  %338 = add i64 %337, 2
  %339 = load i64, i64* %14, align 8
  %340 = icmp ult i64 %338, %339
  br i1 %340, label %341, label %418

341:                                              ; preds = %336
  %342 = load i8*, i8** %13, align 8
  %343 = load i64, i64* %20, align 8
  %344 = add i64 %343, 1
  %345 = getelementptr inbounds i8, i8* %342, i64 %344
  %346 = load i8, i8* %345, align 1
  %347 = sext i8 %346 to i32
  %348 = icmp eq i32 %347, 63
  br i1 %348, label %349, label %418

349:                                              ; preds = %341
  %350 = load i8*, i8** %13, align 8
  %351 = load i64, i64* %20, align 8
  %352 = add i64 %351, 2
  %353 = getelementptr inbounds i8, i8* %350, i64 %352
  %354 = load i8, i8* %353, align 1
  %355 = sext i8 %354 to i32
  switch i32 %355, label %416 [
    i32 33, label %356
    i32 39, label %356
    i32 40, label %356
    i32 41, label %356
    i32 45, label %356
    i32 47, label %356
    i32 60, label %356
    i32 61, label %356
    i32 62, label %356
  ]

356:                                              ; preds = %349, %349, %349, %349, %349, %349, %349, %349, %349
  %357 = load i8, i8* %27, align 1
  %358 = trunc i8 %357 to i1
  br i1 %358, label %359, label %360

359:                                              ; preds = %356
  br label %1086

360:                                              ; preds = %356
  %361 = load i8*, i8** %13, align 8
  %362 = load i64, i64* %20, align 8
  %363 = add i64 %362, 2
  %364 = getelementptr inbounds i8, i8* %361, i64 %363
  %365 = load i8, i8* %364, align 1
  store i8 %365, i8* %31, align 1
  %366 = load i64, i64* %20, align 8
  %367 = add i64 %366, 2
  store i64 %367, i64* %20, align 8
  br label %368

368:                                              ; preds = %360
  %369 = load i64, i64* %21, align 8
  %370 = load i64, i64* %12, align 8
  %371 = icmp ult i64 %369, %370
  br i1 %371, label %372, label %376

372:                                              ; preds = %368
  %373 = load i8*, i8** %11, align 8
  %374 = load i64, i64* %21, align 8
  %375 = getelementptr inbounds i8, i8* %373, i64 %374
  store i8 63, i8* %375, align 1
  br label %376

376:                                              ; preds = %372, %368
  %377 = load i64, i64* %21, align 8
  %378 = add i64 %377, 1
  store i64 %378, i64* %21, align 8
  br label %379

379:                                              ; preds = %376
  br label %380

380:                                              ; preds = %379
  %381 = load i64, i64* %21, align 8
  %382 = load i64, i64* %12, align 8
  %383 = icmp ult i64 %381, %382
  br i1 %383, label %384, label %388

384:                                              ; preds = %380
  %385 = load i8*, i8** %11, align 8
  %386 = load i64, i64* %21, align 8
  %387 = getelementptr inbounds i8, i8* %385, i64 %386
  store i8 34, i8* %387, align 1
  br label %388

388:                                              ; preds = %384, %380
  %389 = load i64, i64* %21, align 8
  %390 = add i64 %389, 1
  store i64 %390, i64* %21, align 8
  br label %391

391:                                              ; preds = %388
  br label %392

392:                                              ; preds = %391
  %393 = load i64, i64* %21, align 8
  %394 = load i64, i64* %12, align 8
  %395 = icmp ult i64 %393, %394
  br i1 %395, label %396, label %400

396:                                              ; preds = %392
  %397 = load i8*, i8** %11, align 8
  %398 = load i64, i64* %21, align 8
  %399 = getelementptr inbounds i8, i8* %397, i64 %398
  store i8 34, i8* %399, align 1
  br label %400

400:                                              ; preds = %396, %392
  %401 = load i64, i64* %21, align 8
  %402 = add i64 %401, 1
  store i64 %402, i64* %21, align 8
  br label %403

403:                                              ; preds = %400
  br label %404

404:                                              ; preds = %403
  %405 = load i64, i64* %21, align 8
  %406 = load i64, i64* %12, align 8
  %407 = icmp ult i64 %405, %406
  br i1 %407, label %408, label %412

408:                                              ; preds = %404
  %409 = load i8*, i8** %11, align 8
  %410 = load i64, i64* %21, align 8
  %411 = getelementptr inbounds i8, i8* %409, i64 %410
  store i8 63, i8* %411, align 1
  br label %412

412:                                              ; preds = %408, %404
  %413 = load i64, i64* %21, align 8
  %414 = add i64 %413, 1
  store i64 %414, i64* %21, align 8
  br label %415

415:                                              ; preds = %412
  br label %417

416:                                              ; preds = %349
  br label %417

417:                                              ; preds = %416, %415
  br label %418

418:                                              ; preds = %417, %341, %336, %332
  br label %420

419:                                              ; preds = %325
  br label %420

420:                                              ; preds = %419, %418, %331
  br label %857

421:                                              ; preds = %197
  store i8 97, i8* %32, align 1
  br label %456

422:                                              ; preds = %197
  store i8 98, i8* %32, align 1
  br label %456

423:                                              ; preds = %197
  store i8 102, i8* %32, align 1
  br label %456

424:                                              ; preds = %197
  store i8 110, i8* %32, align 1
  br label %448

425:                                              ; preds = %197
  store i8 114, i8* %32, align 1
  br label %448

426:                                              ; preds = %197
  store i8 116, i8* %32, align 1
  br label %448

427:                                              ; preds = %197
  store i8 118, i8* %32, align 1
  br label %456

428:                                              ; preds = %197
  %429 = load i8, i8* %31, align 1
  store i8 %429, i8* %32, align 1
  %430 = load i32, i32* %15, align 4
  %431 = icmp eq i32 %430, 2
  br i1 %431, label %432, label %437

432:                                              ; preds = %428
  %433 = load i8, i8* %27, align 1
  %434 = trunc i8 %433 to i1
  br i1 %434, label %435, label %436

435:                                              ; preds = %432
  br label %1086

436:                                              ; preds = %432
  br label %950

437:                                              ; preds = %428
  %438 = load i8, i8* %25, align 1
  %439 = trunc i8 %438 to i1
  br i1 %439, label %440, label %447

440:                                              ; preds = %437
  %441 = load i8, i8* %27, align 1
  %442 = trunc i8 %441 to i1
  br i1 %442, label %443, label %447

443:                                              ; preds = %440
  %444 = load i64, i64* %24, align 8
  %445 = icmp ne i64 %444, 0
  br i1 %445, label %446, label %447

446:                                              ; preds = %443
  br label %950

447:                                              ; preds = %443, %440, %437
  br label %448

448:                                              ; preds = %447, %426, %425, %424
  %449 = load i32, i32* %15, align 4
  %450 = icmp eq i32 %449, 2
  br i1 %450, label %451, label %455

451:                                              ; preds = %448
  %452 = load i8, i8* %27, align 1
  %453 = trunc i8 %452 to i1
  br i1 %453, label %454, label %455

454:                                              ; preds = %451
  br label %1086

455:                                              ; preds = %451, %448
  br label %456

456:                                              ; preds = %455, %427, %423, %422, %421
  %457 = load i8, i8* %25, align 1
  %458 = trunc i8 %457 to i1
  br i1 %458, label %459, label %461

459:                                              ; preds = %456
  %460 = load i8, i8* %32, align 1
  store i8 %460, i8* %31, align 1
  br label %888

461:                                              ; preds = %456
  br label %857

462:                                              ; preds = %197, %197
  %463 = load i64, i64* %14, align 8
  %464 = icmp eq i64 %463, -1
  br i1 %464, label %465, label %471

465:                                              ; preds = %462
  %466 = load i8*, i8** %13, align 8
  %467 = getelementptr inbounds i8, i8* %466, i64 1
  %468 = load i8, i8* %467, align 1
  %469 = sext i8 %468 to i32
  %470 = icmp eq i32 %469, 0
  br i1 %470, label %475, label %474

471:                                              ; preds = %462
  %472 = load i64, i64* %14, align 8
  %473 = icmp eq i64 %472, 1
  br i1 %473, label %475, label %474

474:                                              ; preds = %471, %465
  br label %857

475:                                              ; preds = %471, %465
  br label %476

476:                                              ; preds = %475, %197, %197
  %477 = load i64, i64* %20, align 8
  %478 = icmp ne i64 %477, 0
  br i1 %478, label %479, label %480

479:                                              ; preds = %476
  br label %857

480:                                              ; preds = %476
  br label %481

481:                                              ; preds = %480, %197
  store i8 1, i8* %35, align 1
  br label %482

482:                                              ; preds = %481, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197
  %483 = load i32, i32* %15, align 4
  %484 = icmp eq i32 %483, 2
  br i1 %484, label %485, label %489

485:                                              ; preds = %482
  %486 = load i8, i8* %27, align 1
  %487 = trunc i8 %486 to i1
  br i1 %487, label %488, label %489

488:                                              ; preds = %485
  br label %1086

489:                                              ; preds = %485, %482
  br label %857

490:                                              ; preds = %197
  store i8 1, i8* %29, align 1
  store i8 1, i8* %35, align 1
  %491 = load i32, i32* %15, align 4
  %492 = icmp eq i32 %491, 2
  br i1 %492, label %493, label %542

493:                                              ; preds = %490
  %494 = load i8, i8* %27, align 1
  %495 = trunc i8 %494 to i1
  br i1 %495, label %496, label %497

496:                                              ; preds = %493
  br label %1086

497:                                              ; preds = %493
  %498 = load i64, i64* %12, align 8
  %499 = icmp ne i64 %498, 0
  br i1 %499, label %500, label %505

500:                                              ; preds = %497
  %501 = load i64, i64* %22, align 8
  %502 = icmp ne i64 %501, 0
  br i1 %502, label %505, label %503

503:                                              ; preds = %500
  %504 = load i64, i64* %12, align 8
  store i64 %504, i64* %22, align 8
  store i64 0, i64* %12, align 8
  br label %505

505:                                              ; preds = %503, %500, %497
  br label %506

506:                                              ; preds = %505
  %507 = load i64, i64* %21, align 8
  %508 = load i64, i64* %12, align 8
  %509 = icmp ult i64 %507, %508
  br i1 %509, label %510, label %514

510:                                              ; preds = %506
  %511 = load i8*, i8** %11, align 8
  %512 = load i64, i64* %21, align 8
  %513 = getelementptr inbounds i8, i8* %511, i64 %512
  store i8 39, i8* %513, align 1
  br label %514

514:                                              ; preds = %510, %506
  %515 = load i64, i64* %21, align 8
  %516 = add i64 %515, 1
  store i64 %516, i64* %21, align 8
  br label %517

517:                                              ; preds = %514
  br label %518

518:                                              ; preds = %517
  %519 = load i64, i64* %21, align 8
  %520 = load i64, i64* %12, align 8
  %521 = icmp ult i64 %519, %520
  br i1 %521, label %522, label %526

522:                                              ; preds = %518
  %523 = load i8*, i8** %11, align 8
  %524 = load i64, i64* %21, align 8
  %525 = getelementptr inbounds i8, i8* %523, i64 %524
  store i8 92, i8* %525, align 1
  br label %526

526:                                              ; preds = %522, %518
  %527 = load i64, i64* %21, align 8
  %528 = add i64 %527, 1
  store i64 %528, i64* %21, align 8
  br label %529

529:                                              ; preds = %526
  br label %530

530:                                              ; preds = %529
  %531 = load i64, i64* %21, align 8
  %532 = load i64, i64* %12, align 8
  %533 = icmp ult i64 %531, %532
  br i1 %533, label %534, label %538

534:                                              ; preds = %530
  %535 = load i8*, i8** %11, align 8
  %536 = load i64, i64* %21, align 8
  %537 = getelementptr inbounds i8, i8* %535, i64 %536
  store i8 39, i8* %537, align 1
  br label %538

538:                                              ; preds = %534, %530
  %539 = load i64, i64* %21, align 8
  %540 = add i64 %539, 1
  store i64 %540, i64* %21, align 8
  br label %541

541:                                              ; preds = %538
  store i8 0, i8* %28, align 1
  br label %542

542:                                              ; preds = %541, %490
  br label %857

543:                                              ; preds = %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197
  store i8 1, i8* %35, align 1
  br label %857

544:                                              ; preds = %197
  %545 = load i8, i8* %26, align 1
  %546 = trunc i8 %545 to i1
  br i1 %546, label %547, label %559

547:                                              ; preds = %544
  store i64 1, i64* %36, align 8
  %548 = call i16** @__ctype_b_loc() #15
  %549 = load i16*, i16** %548, align 8
  %550 = load i8, i8* %31, align 1
  %551 = zext i8 %550 to i32
  %552 = sext i32 %551 to i64
  %553 = getelementptr inbounds i16, i16* %549, i64 %552
  %554 = load i16, i16* %553, align 2
  %555 = zext i16 %554 to i32
  %556 = and i32 %555, 16384
  %557 = icmp ne i32 %556, 0
  %558 = zext i1 %557 to i8
  store i8 %558, i8* %37, align 1
  br label %656

559:                                              ; preds = %544
  %560 = bitcast %struct.__mbstate_t* %38 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %560, i8 0, i64 8, i1 false)
  store i64 0, i64* %36, align 8
  store i8 1, i8* %37, align 1
  %561 = load i64, i64* %14, align 8
  %562 = icmp eq i64 %561, -1
  br i1 %562, label %563, label %566

563:                                              ; preds = %559
  %564 = load i8*, i8** %13, align 8
  %565 = call i64 @strlen(i8* %564) #13
  store i64 %565, i64* %14, align 8
  br label %566

566:                                              ; preds = %563, %559
  br label %567

567:                                              ; preds = %651, %566
  %568 = load i8*, i8** %13, align 8
  %569 = load i64, i64* %20, align 8
  %570 = load i64, i64* %36, align 8
  %571 = add i64 %569, %570
  %572 = getelementptr inbounds i8, i8* %568, i64 %571
  %573 = load i64, i64* %14, align 8
  %574 = load i64, i64* %20, align 8
  %575 = load i64, i64* %36, align 8
  %576 = add i64 %574, %575
  %577 = sub i64 %573, %576
  %578 = call i64 @rpl_mbrtowc(i32* %39, i8* %572, i64 %577, %struct.__mbstate_t* %38)
  store i64 %578, i64* %40, align 8
  %579 = load i64, i64* %40, align 8
  %580 = icmp eq i64 %579, 0
  br i1 %580, label %581, label %582

581:                                              ; preds = %567
  br label %655

582:                                              ; preds = %567
  %583 = load i64, i64* %40, align 8
  %584 = icmp eq i64 %583, -1
  br i1 %584, label %585, label %586

585:                                              ; preds = %582
  store i8 0, i8* %37, align 1
  br label %655

586:                                              ; preds = %582
  %587 = load i64, i64* %40, align 8
  %588 = icmp eq i64 %587, -2
  br i1 %588, label %589, label %611

589:                                              ; preds = %586
  store i8 0, i8* %37, align 1
  br label %590

590:                                              ; preds = %607, %589
  %591 = load i64, i64* %20, align 8
  %592 = load i64, i64* %36, align 8
  %593 = add i64 %591, %592
  %594 = load i64, i64* %14, align 8
  %595 = icmp ult i64 %593, %594
  br i1 %595, label %596, label %605

596:                                              ; preds = %590
  %597 = load i8*, i8** %13, align 8
  %598 = load i64, i64* %20, align 8
  %599 = load i64, i64* %36, align 8
  %600 = add i64 %598, %599
  %601 = getelementptr inbounds i8, i8* %597, i64 %600
  %602 = load i8, i8* %601, align 1
  %603 = sext i8 %602 to i32
  %604 = icmp ne i32 %603, 0
  br label %605

605:                                              ; preds = %596, %590
  %606 = phi i1 [ false, %590 ], [ %604, %596 ]
  br i1 %606, label %607, label %610

607:                                              ; preds = %605
  %608 = load i64, i64* %36, align 8
  %609 = add i64 %608, 1
  store i64 %609, i64* %36, align 8
  br label %590

610:                                              ; preds = %605
  br label %655

611:                                              ; preds = %586
  %612 = load i8, i8* %27, align 1
  %613 = trunc i8 %612 to i1
  br i1 %613, label %614, label %639

614:                                              ; preds = %611
  %615 = load i32, i32* %15, align 4
  %616 = icmp eq i32 %615, 2
  br i1 %616, label %617, label %639

617:                                              ; preds = %614
  store i64 1, i64* %41, align 8
  br label %618

618:                                              ; preds = %635, %617
  %619 = load i64, i64* %41, align 8
  %620 = load i64, i64* %40, align 8
  %621 = icmp ult i64 %619, %620
  br i1 %621, label %622, label %638

622:                                              ; preds = %618
  %623 = load i8*, i8** %13, align 8
  %624 = load i64, i64* %20, align 8
  %625 = load i64, i64* %36, align 8
  %626 = add i64 %624, %625
  %627 = load i64, i64* %41, align 8
  %628 = add i64 %626, %627
  %629 = getelementptr inbounds i8, i8* %623, i64 %628
  %630 = load i8, i8* %629, align 1
  %631 = sext i8 %630 to i32
  switch i32 %631, label %633 [
    i32 91, label %632
    i32 92, label %632
    i32 94, label %632
    i32 96, label %632
    i32 124, label %632
  ]

632:                                              ; preds = %622, %622, %622, %622, %622
  br label %1086

633:                                              ; preds = %622
  br label %634

634:                                              ; preds = %633
  br label %635

635:                                              ; preds = %634
  %636 = load i64, i64* %41, align 8
  %637 = add i64 %636, 1
  store i64 %637, i64* %41, align 8
  br label %618

638:                                              ; preds = %618
  br label %639

639:                                              ; preds = %638, %614, %611
  %640 = load i32, i32* %39, align 4
  %641 = call i32 @iswprint(i32 %640) #11
  %642 = icmp ne i32 %641, 0
  br i1 %642, label %644, label %643

643:                                              ; preds = %639
  store i8 0, i8* %37, align 1
  br label %644

644:                                              ; preds = %643, %639
  %645 = load i64, i64* %40, align 8
  %646 = load i64, i64* %36, align 8
  %647 = add i64 %646, %645
  store i64 %647, i64* %36, align 8
  br label %648

648:                                              ; preds = %644
  br label %649

649:                                              ; preds = %648
  br label %650

650:                                              ; preds = %649
  br label %651

651:                                              ; preds = %650
  %652 = call i32 @mbsinit(%struct.__mbstate_t* %38) #13
  %653 = icmp ne i32 %652, 0
  %654 = xor i1 %653, true
  br i1 %654, label %567, label %655

655:                                              ; preds = %651, %610, %585, %581
  br label %656

656:                                              ; preds = %655, %547
  %657 = load i8, i8* %37, align 1
  %658 = trunc i8 %657 to i1
  %659 = zext i1 %658 to i8
  store i8 %659, i8* %35, align 1
  %660 = load i64, i64* %36, align 8
  %661 = icmp ult i64 1, %660
  br i1 %661, label %668, label %662

662:                                              ; preds = %656
  %663 = load i8, i8* %25, align 1
  %664 = trunc i8 %663 to i1
  br i1 %664, label %665, label %856

665:                                              ; preds = %662
  %666 = load i8, i8* %37, align 1
  %667 = trunc i8 %666 to i1
  br i1 %667, label %856, label %668

668:                                              ; preds = %665, %656
  %669 = load i64, i64* %20, align 8
  %670 = load i64, i64* %36, align 8
  %671 = add i64 %669, %670
  store i64 %671, i64* %42, align 8
  br label %672

672:                                              ; preds = %849, %668
  %673 = load i8, i8* %25, align 1
  %674 = trunc i8 %673 to i1
  br i1 %674, label %675, label %780

675:                                              ; preds = %672
  %676 = load i8, i8* %37, align 1
  %677 = trunc i8 %676 to i1
  br i1 %677, label %780, label %678

678:                                              ; preds = %675
  br label %679

679:                                              ; preds = %678
  %680 = load i8, i8* %27, align 1
  %681 = trunc i8 %680 to i1
  br i1 %681, label %682, label %683

682:                                              ; preds = %679
  br label %1086

683:                                              ; preds = %679
  store i8 1, i8* %34, align 1
  %684 = load i32, i32* %15, align 4
  %685 = icmp eq i32 %684, 2
  br i1 %685, label %686, label %726

686:                                              ; preds = %683
  %687 = load i8, i8* %28, align 1
  %688 = trunc i8 %687 to i1
  br i1 %688, label %726, label %689

689:                                              ; preds = %686
  br label %690

690:                                              ; preds = %689
  %691 = load i64, i64* %21, align 8
  %692 = load i64, i64* %12, align 8
  %693 = icmp ult i64 %691, %692
  br i1 %693, label %694, label %698

694:                                              ; preds = %690
  %695 = load i8*, i8** %11, align 8
  %696 = load i64, i64* %21, align 8
  %697 = getelementptr inbounds i8, i8* %695, i64 %696
  store i8 39, i8* %697, align 1
  br label %698

698:                                              ; preds = %694, %690
  %699 = load i64, i64* %21, align 8
  %700 = add i64 %699, 1
  store i64 %700, i64* %21, align 8
  br label %701

701:                                              ; preds = %698
  br label %702

702:                                              ; preds = %701
  %703 = load i64, i64* %21, align 8
  %704 = load i64, i64* %12, align 8
  %705 = icmp ult i64 %703, %704
  br i1 %705, label %706, label %710

706:                                              ; preds = %702
  %707 = load i8*, i8** %11, align 8
  %708 = load i64, i64* %21, align 8
  %709 = getelementptr inbounds i8, i8* %707, i64 %708
  store i8 36, i8* %709, align 1
  br label %710

710:                                              ; preds = %706, %702
  %711 = load i64, i64* %21, align 8
  %712 = add i64 %711, 1
  store i64 %712, i64* %21, align 8
  br label %713

713:                                              ; preds = %710
  br label %714

714:                                              ; preds = %713
  %715 = load i64, i64* %21, align 8
  %716 = load i64, i64* %12, align 8
  %717 = icmp ult i64 %715, %716
  br i1 %717, label %718, label %722

718:                                              ; preds = %714
  %719 = load i8*, i8** %11, align 8
  %720 = load i64, i64* %21, align 8
  %721 = getelementptr inbounds i8, i8* %719, i64 %720
  store i8 39, i8* %721, align 1
  br label %722

722:                                              ; preds = %718, %714
  %723 = load i64, i64* %21, align 8
  %724 = add i64 %723, 1
  store i64 %724, i64* %21, align 8
  br label %725

725:                                              ; preds = %722
  store i8 1, i8* %28, align 1
  br label %726

726:                                              ; preds = %725, %686, %683
  br label %727

727:                                              ; preds = %726
  %728 = load i64, i64* %21, align 8
  %729 = load i64, i64* %12, align 8
  %730 = icmp ult i64 %728, %729
  br i1 %730, label %731, label %735

731:                                              ; preds = %727
  %732 = load i8*, i8** %11, align 8
  %733 = load i64, i64* %21, align 8
  %734 = getelementptr inbounds i8, i8* %732, i64 %733
  store i8 92, i8* %734, align 1
  br label %735

735:                                              ; preds = %731, %727
  %736 = load i64, i64* %21, align 8
  %737 = add i64 %736, 1
  store i64 %737, i64* %21, align 8
  br label %738

738:                                              ; preds = %735
  br label %739

739:                                              ; preds = %738
  br label %740

740:                                              ; preds = %739
  %741 = load i64, i64* %21, align 8
  %742 = load i64, i64* %12, align 8
  %743 = icmp ult i64 %741, %742
  br i1 %743, label %744, label %753

744:                                              ; preds = %740
  %745 = load i8, i8* %31, align 1
  %746 = zext i8 %745 to i32
  %747 = ashr i32 %746, 6
  %748 = add nsw i32 48, %747
  %749 = trunc i32 %748 to i8
  %750 = load i8*, i8** %11, align 8
  %751 = load i64, i64* %21, align 8
  %752 = getelementptr inbounds i8, i8* %750, i64 %751
  store i8 %749, i8* %752, align 1
  br label %753

753:                                              ; preds = %744, %740
  %754 = load i64, i64* %21, align 8
  %755 = add i64 %754, 1
  store i64 %755, i64* %21, align 8
  br label %756

756:                                              ; preds = %753
  br label %757

757:                                              ; preds = %756
  %758 = load i64, i64* %21, align 8
  %759 = load i64, i64* %12, align 8
  %760 = icmp ult i64 %758, %759
  br i1 %760, label %761, label %771

761:                                              ; preds = %757
  %762 = load i8, i8* %31, align 1
  %763 = zext i8 %762 to i32
  %764 = ashr i32 %763, 3
  %765 = and i32 %764, 7
  %766 = add nsw i32 48, %765
  %767 = trunc i32 %766 to i8
  %768 = load i8*, i8** %11, align 8
  %769 = load i64, i64* %21, align 8
  %770 = getelementptr inbounds i8, i8* %768, i64 %769
  store i8 %767, i8* %770, align 1
  br label %771

771:                                              ; preds = %761, %757
  %772 = load i64, i64* %21, align 8
  %773 = add i64 %772, 1
  store i64 %773, i64* %21, align 8
  br label %774

774:                                              ; preds = %771
  %775 = load i8, i8* %31, align 1
  %776 = zext i8 %775 to i32
  %777 = and i32 %776, 7
  %778 = add nsw i32 48, %777
  %779 = trunc i32 %778 to i8
  store i8 %779, i8* %31, align 1
  br label %797

780:                                              ; preds = %675, %672
  %781 = load i8, i8* %33, align 1
  %782 = trunc i8 %781 to i1
  br i1 %782, label %783, label %796

783:                                              ; preds = %780
  br label %784

784:                                              ; preds = %783
  %785 = load i64, i64* %21, align 8
  %786 = load i64, i64* %12, align 8
  %787 = icmp ult i64 %785, %786
  br i1 %787, label %788, label %792

788:                                              ; preds = %784
  %789 = load i8*, i8** %11, align 8
  %790 = load i64, i64* %21, align 8
  %791 = getelementptr inbounds i8, i8* %789, i64 %790
  store i8 92, i8* %791, align 1
  br label %792

792:                                              ; preds = %788, %784
  %793 = load i64, i64* %21, align 8
  %794 = add i64 %793, 1
  store i64 %794, i64* %21, align 8
  br label %795

795:                                              ; preds = %792
  store i8 0, i8* %33, align 1
  br label %796

796:                                              ; preds = %795, %780
  br label %797

797:                                              ; preds = %796, %774
  %798 = load i64, i64* %42, align 8
  %799 = load i64, i64* %20, align 8
  %800 = add i64 %799, 1
  %801 = icmp ule i64 %798, %800
  br i1 %801, label %802, label %803

802:                                              ; preds = %797
  br label %855

803:                                              ; preds = %797
  br label %804

804:                                              ; preds = %803
  %805 = load i8, i8* %28, align 1
  %806 = trunc i8 %805 to i1
  br i1 %806, label %807, label %835

807:                                              ; preds = %804
  %808 = load i8, i8* %34, align 1
  %809 = trunc i8 %808 to i1
  br i1 %809, label %835, label %810

810:                                              ; preds = %807
  br label %811

811:                                              ; preds = %810
  %812 = load i64, i64* %21, align 8
  %813 = load i64, i64* %12, align 8
  %814 = icmp ult i64 %812, %813
  br i1 %814, label %815, label %819

815:                                              ; preds = %811
  %816 = load i8*, i8** %11, align 8
  %817 = load i64, i64* %21, align 8
  %818 = getelementptr inbounds i8, i8* %816, i64 %817
  store i8 39, i8* %818, align 1
  br label %819

819:                                              ; preds = %815, %811
  %820 = load i64, i64* %21, align 8
  %821 = add i64 %820, 1
  store i64 %821, i64* %21, align 8
  br label %822

822:                                              ; preds = %819
  br label %823

823:                                              ; preds = %822
  %824 = load i64, i64* %21, align 8
  %825 = load i64, i64* %12, align 8
  %826 = icmp ult i64 %824, %825
  br i1 %826, label %827, label %831

827:                                              ; preds = %823
  %828 = load i8*, i8** %11, align 8
  %829 = load i64, i64* %21, align 8
  %830 = getelementptr inbounds i8, i8* %828, i64 %829
  store i8 39, i8* %830, align 1
  br label %831

831:                                              ; preds = %827, %823
  %832 = load i64, i64* %21, align 8
  %833 = add i64 %832, 1
  store i64 %833, i64* %21, align 8
  br label %834

834:                                              ; preds = %831
  store i8 0, i8* %28, align 1
  br label %835

835:                                              ; preds = %834, %807, %804
  br label %836

836:                                              ; preds = %835
  br label %837

837:                                              ; preds = %836
  %838 = load i64, i64* %21, align 8
  %839 = load i64, i64* %12, align 8
  %840 = icmp ult i64 %838, %839
  br i1 %840, label %841, label %846

841:                                              ; preds = %837
  %842 = load i8, i8* %31, align 1
  %843 = load i8*, i8** %11, align 8
  %844 = load i64, i64* %21, align 8
  %845 = getelementptr inbounds i8, i8* %843, i64 %844
  store i8 %842, i8* %845, align 1
  br label %846

846:                                              ; preds = %841, %837
  %847 = load i64, i64* %21, align 8
  %848 = add i64 %847, 1
  store i64 %848, i64* %21, align 8
  br label %849

849:                                              ; preds = %846
  %850 = load i8*, i8** %13, align 8
  %851 = load i64, i64* %20, align 8
  %852 = add i64 %851, 1
  store i64 %852, i64* %20, align 8
  %853 = getelementptr inbounds i8, i8* %850, i64 %852
  %854 = load i8, i8* %853, align 1
  store i8 %854, i8* %31, align 1
  br label %672

855:                                              ; preds = %802
  br label %950

856:                                              ; preds = %665, %662
  br label %857

857:                                              ; preds = %856, %543, %542, %489, %479, %474, %461, %420, %324
  %858 = load i8, i8* %25, align 1
  %859 = trunc i8 %858 to i1
  br i1 %859, label %860, label %863

860:                                              ; preds = %857
  %861 = load i32, i32* %15, align 4
  %862 = icmp ne i32 %861, 2
  br i1 %862, label %866, label %863

863:                                              ; preds = %860, %857
  %864 = load i8, i8* %27, align 1
  %865 = trunc i8 %864 to i1
  br i1 %865, label %866, label %883

866:                                              ; preds = %863, %860
  %867 = load i32*, i32** %17, align 8
  %868 = icmp ne i32* %867, null
  br i1 %868, label %869, label %883

869:                                              ; preds = %866
  %870 = load i32*, i32** %17, align 8
  %871 = load i8, i8* %31, align 1
  %872 = zext i8 %871 to i64
  %873 = udiv i64 %872, 32
  %874 = getelementptr inbounds i32, i32* %870, i64 %873
  %875 = load i32, i32* %874, align 4
  %876 = load i8, i8* %31, align 1
  %877 = zext i8 %876 to i64
  %878 = urem i64 %877, 32
  %879 = trunc i64 %878 to i32
  %880 = lshr i32 %875, %879
  %881 = and i32 %880, 1
  %882 = icmp ne i32 %881, 0
  br i1 %882, label %887, label %883

883:                                              ; preds = %869, %866, %863
  %884 = load i8, i8* %33, align 1
  %885 = trunc i8 %884 to i1
  br i1 %885, label %887, label %886

886:                                              ; preds = %883
  br label %950

887:                                              ; preds = %883, %869
  br label %888

888:                                              ; preds = %887, %459
  br label %889

889:                                              ; preds = %888
  %890 = load i8, i8* %27, align 1
  %891 = trunc i8 %890 to i1
  br i1 %891, label %892, label %893

892:                                              ; preds = %889
  br label %1086

893:                                              ; preds = %889
  store i8 1, i8* %34, align 1
  %894 = load i32, i32* %15, align 4
  %895 = icmp eq i32 %894, 2
  br i1 %895, label %896, label %936

896:                                              ; preds = %893
  %897 = load i8, i8* %28, align 1
  %898 = trunc i8 %897 to i1
  br i1 %898, label %936, label %899

899:                                              ; preds = %896
  br label %900

900:                                              ; preds = %899
  %901 = load i64, i64* %21, align 8
  %902 = load i64, i64* %12, align 8
  %903 = icmp ult i64 %901, %902
  br i1 %903, label %904, label %908

904:                                              ; preds = %900
  %905 = load i8*, i8** %11, align 8
  %906 = load i64, i64* %21, align 8
  %907 = getelementptr inbounds i8, i8* %905, i64 %906
  store i8 39, i8* %907, align 1
  br label %908

908:                                              ; preds = %904, %900
  %909 = load i64, i64* %21, align 8
  %910 = add i64 %909, 1
  store i64 %910, i64* %21, align 8
  br label %911

911:                                              ; preds = %908
  br label %912

912:                                              ; preds = %911
  %913 = load i64, i64* %21, align 8
  %914 = load i64, i64* %12, align 8
  %915 = icmp ult i64 %913, %914
  br i1 %915, label %916, label %920

916:                                              ; preds = %912
  %917 = load i8*, i8** %11, align 8
  %918 = load i64, i64* %21, align 8
  %919 = getelementptr inbounds i8, i8* %917, i64 %918
  store i8 36, i8* %919, align 1
  br label %920

920:                                              ; preds = %916, %912
  %921 = load i64, i64* %21, align 8
  %922 = add i64 %921, 1
  store i64 %922, i64* %21, align 8
  br label %923

923:                                              ; preds = %920
  br label %924

924:                                              ; preds = %923
  %925 = load i64, i64* %21, align 8
  %926 = load i64, i64* %12, align 8
  %927 = icmp ult i64 %925, %926
  br i1 %927, label %928, label %932

928:                                              ; preds = %924
  %929 = load i8*, i8** %11, align 8
  %930 = load i64, i64* %21, align 8
  %931 = getelementptr inbounds i8, i8* %929, i64 %930
  store i8 39, i8* %931, align 1
  br label %932

932:                                              ; preds = %928, %924
  %933 = load i64, i64* %21, align 8
  %934 = add i64 %933, 1
  store i64 %934, i64* %21, align 8
  br label %935

935:                                              ; preds = %932
  store i8 1, i8* %28, align 1
  br label %936

936:                                              ; preds = %935, %896, %893
  br label %937

937:                                              ; preds = %936
  %938 = load i64, i64* %21, align 8
  %939 = load i64, i64* %12, align 8
  %940 = icmp ult i64 %938, %939
  br i1 %940, label %941, label %945

941:                                              ; preds = %937
  %942 = load i8*, i8** %11, align 8
  %943 = load i64, i64* %21, align 8
  %944 = getelementptr inbounds i8, i8* %942, i64 %943
  store i8 92, i8* %944, align 1
  br label %945

945:                                              ; preds = %941, %937
  %946 = load i64, i64* %21, align 8
  %947 = add i64 %946, 1
  store i64 %947, i64* %21, align 8
  br label %948

948:                                              ; preds = %945
  br label %949

949:                                              ; preds = %948
  br label %950

950:                                              ; preds = %949, %886, %855, %446, %436
  br label %951

951:                                              ; preds = %950
  %952 = load i8, i8* %28, align 1
  %953 = trunc i8 %952 to i1
  br i1 %953, label %954, label %982

954:                                              ; preds = %951
  %955 = load i8, i8* %34, align 1
  %956 = trunc i8 %955 to i1
  br i1 %956, label %982, label %957

957:                                              ; preds = %954
  br label %958

958:                                              ; preds = %957
  %959 = load i64, i64* %21, align 8
  %960 = load i64, i64* %12, align 8
  %961 = icmp ult i64 %959, %960
  br i1 %961, label %962, label %966

962:                                              ; preds = %958
  %963 = load i8*, i8** %11, align 8
  %964 = load i64, i64* %21, align 8
  %965 = getelementptr inbounds i8, i8* %963, i64 %964
  store i8 39, i8* %965, align 1
  br label %966

966:                                              ; preds = %962, %958
  %967 = load i64, i64* %21, align 8
  %968 = add i64 %967, 1
  store i64 %968, i64* %21, align 8
  br label %969

969:                                              ; preds = %966
  br label %970

970:                                              ; preds = %969
  %971 = load i64, i64* %21, align 8
  %972 = load i64, i64* %12, align 8
  %973 = icmp ult i64 %971, %972
  br i1 %973, label %974, label %978

974:                                              ; preds = %970
  %975 = load i8*, i8** %11, align 8
  %976 = load i64, i64* %21, align 8
  %977 = getelementptr inbounds i8, i8* %975, i64 %976
  store i8 39, i8* %977, align 1
  br label %978

978:                                              ; preds = %974, %970
  %979 = load i64, i64* %21, align 8
  %980 = add i64 %979, 1
  store i64 %980, i64* %21, align 8
  br label %981

981:                                              ; preds = %978
  store i8 0, i8* %28, align 1
  br label %982

982:                                              ; preds = %981, %954, %951
  br label %983

983:                                              ; preds = %982
  br label %984

984:                                              ; preds = %983
  %985 = load i64, i64* %21, align 8
  %986 = load i64, i64* %12, align 8
  %987 = icmp ult i64 %985, %986
  br i1 %987, label %988, label %993

988:                                              ; preds = %984
  %989 = load i8, i8* %31, align 1
  %990 = load i8*, i8** %11, align 8
  %991 = load i64, i64* %21, align 8
  %992 = getelementptr inbounds i8, i8* %990, i64 %991
  store i8 %989, i8* %992, align 1
  br label %993

993:                                              ; preds = %988, %984
  %994 = load i64, i64* %21, align 8
  %995 = add i64 %994, 1
  store i64 %995, i64* %21, align 8
  br label %996

996:                                              ; preds = %993
  %997 = load i8, i8* %35, align 1
  %998 = trunc i8 %997 to i1
  br i1 %998, label %1000, label %999

999:                                              ; preds = %996
  store i8 0, i8* %30, align 1
  br label %1000

1000:                                             ; preds = %999, %996
  br label %1001

1001:                                             ; preds = %1000, %322
  %1002 = load i64, i64* %20, align 8
  %1003 = add i64 %1002, 1
  store i64 %1003, i64* %20, align 8
  br label %138

1004:                                             ; preds = %154
  %1005 = load i64, i64* %21, align 8
  %1006 = icmp eq i64 %1005, 0
  br i1 %1006, label %1007, label %1014

1007:                                             ; preds = %1004
  %1008 = load i32, i32* %15, align 4
  %1009 = icmp eq i32 %1008, 2
  br i1 %1009, label %1010, label %1014

1010:                                             ; preds = %1007
  %1011 = load i8, i8* %27, align 1
  %1012 = trunc i8 %1011 to i1
  br i1 %1012, label %1013, label %1014

1013:                                             ; preds = %1010
  br label %1086

1014:                                             ; preds = %1010, %1007, %1004
  %1015 = load i32, i32* %15, align 4
  %1016 = icmp eq i32 %1015, 2
  br i1 %1016, label %1017, label %1046

1017:                                             ; preds = %1014
  %1018 = load i8, i8* %27, align 1
  %1019 = trunc i8 %1018 to i1
  br i1 %1019, label %1046, label %1020

1020:                                             ; preds = %1017
  %1021 = load i8, i8* %29, align 1
  %1022 = trunc i8 %1021 to i1
  br i1 %1022, label %1023, label %1046

1023:                                             ; preds = %1020
  %1024 = load i8, i8* %30, align 1
  %1025 = trunc i8 %1024 to i1
  br i1 %1025, label %1026, label %1036

1026:                                             ; preds = %1023
  %1027 = load i8*, i8** %11, align 8
  %1028 = load i64, i64* %22, align 8
  %1029 = load i8*, i8** %13, align 8
  %1030 = load i64, i64* %14, align 8
  %1031 = load i32, i32* %16, align 4
  %1032 = load i32*, i32** %17, align 8
  %1033 = load i8*, i8** %18, align 8
  %1034 = load i8*, i8** %19, align 8
  %1035 = call i64 @quotearg_buffer_restyled(i8* %1027, i64 %1028, i8* %1029, i64 %1030, i32 5, i32 %1031, i32* %1032, i8* %1033, i8* %1034)
  store i64 %1035, i64* %10, align 8
  br label %1104

1036:                                             ; preds = %1023
  %1037 = load i64, i64* %12, align 8
  %1038 = icmp ne i64 %1037, 0
  br i1 %1038, label %1044, label %1039

1039:                                             ; preds = %1036
  %1040 = load i64, i64* %22, align 8
  %1041 = icmp ne i64 %1040, 0
  br i1 %1041, label %1042, label %1044

1042:                                             ; preds = %1039
  %1043 = load i64, i64* %22, align 8
  store i64 %1043, i64* %12, align 8
  store i64 0, i64* %21, align 8
  br label %50

1044:                                             ; preds = %1039, %1036
  br label %1045

1045:                                             ; preds = %1044
  br label %1046

1046:                                             ; preds = %1045, %1020, %1017, %1014
  %1047 = load i8*, i8** %23, align 8
  %1048 = icmp ne i8* %1047, null
  br i1 %1048, label %1049, label %1076

1049:                                             ; preds = %1046
  %1050 = load i8, i8* %27, align 1
  %1051 = trunc i8 %1050 to i1
  br i1 %1051, label %1076, label %1052

1052:                                             ; preds = %1049
  br label %1053

1053:                                             ; preds = %1072, %1052
  %1054 = load i8*, i8** %23, align 8
  %1055 = load i8, i8* %1054, align 1
  %1056 = icmp ne i8 %1055, 0
  br i1 %1056, label %1057, label %1075

1057:                                             ; preds = %1053
  br label %1058

1058:                                             ; preds = %1057
  %1059 = load i64, i64* %21, align 8
  %1060 = load i64, i64* %12, align 8
  %1061 = icmp ult i64 %1059, %1060
  br i1 %1061, label %1062, label %1068

1062:                                             ; preds = %1058
  %1063 = load i8*, i8** %23, align 8
  %1064 = load i8, i8* %1063, align 1
  %1065 = load i8*, i8** %11, align 8
  %1066 = load i64, i64* %21, align 8
  %1067 = getelementptr inbounds i8, i8* %1065, i64 %1066
  store i8 %1064, i8* %1067, align 1
  br label %1068

1068:                                             ; preds = %1062, %1058
  %1069 = load i64, i64* %21, align 8
  %1070 = add i64 %1069, 1
  store i64 %1070, i64* %21, align 8
  br label %1071

1071:                                             ; preds = %1068
  br label %1072

1072:                                             ; preds = %1071
  %1073 = load i8*, i8** %23, align 8
  %1074 = getelementptr inbounds i8, i8* %1073, i32 1
  store i8* %1074, i8** %23, align 8
  br label %1053

1075:                                             ; preds = %1053
  br label %1076

1076:                                             ; preds = %1075, %1049, %1046
  %1077 = load i64, i64* %21, align 8
  %1078 = load i64, i64* %12, align 8
  %1079 = icmp ult i64 %1077, %1078
  br i1 %1079, label %1080, label %1084

1080:                                             ; preds = %1076
  %1081 = load i8*, i8** %11, align 8
  %1082 = load i64, i64* %21, align 8
  %1083 = getelementptr inbounds i8, i8* %1081, i64 %1082
  store i8 0, i8* %1083, align 1
  br label %1084

1084:                                             ; preds = %1080, %1076
  %1085 = load i64, i64* %21, align 8
  store i64 %1085, i64* %10, align 8
  br label %1104

1086:                                             ; preds = %1013, %892, %682, %632, %496, %488, %454, %435, %359, %330, %211, %195
  %1087 = load i32, i32* %15, align 4
  %1088 = icmp eq i32 %1087, 2
  br i1 %1088, label %1089, label %1093

1089:                                             ; preds = %1086
  %1090 = load i8, i8* %25, align 1
  %1091 = trunc i8 %1090 to i1
  br i1 %1091, label %1092, label %1093

1092:                                             ; preds = %1089
  store i32 4, i32* %15, align 4
  br label %1093

1093:                                             ; preds = %1092, %1089, %1086
  %1094 = load i8*, i8** %11, align 8
  %1095 = load i64, i64* %12, align 8
  %1096 = load i8*, i8** %13, align 8
  %1097 = load i64, i64* %14, align 8
  %1098 = load i32, i32* %15, align 4
  %1099 = load i32, i32* %16, align 4
  %1100 = and i32 %1099, -3
  %1101 = load i8*, i8** %18, align 8
  %1102 = load i8*, i8** %19, align 8
  %1103 = call i64 @quotearg_buffer_restyled(i8* %1094, i64 %1095, i8* %1096, i64 %1097, i32 %1098, i32 %1100, i32* null, i8* %1101, i8* %1102)
  store i64 %1103, i64* %10, align 8
  br label %1104

1104:                                             ; preds = %1093, %1084, %1026
  %1105 = load i64, i64* %10, align 8
  ret i64 %1105
}

; Function Attrs: nounwind
declare dso_local i64 @__ctype_get_mb_cur_max() #1

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @gettext_quote(i8*, i32) #3 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  store i8* %0, i8** %4, align 8
  store i32 %1, i32* %5, align 4
  %8 = load i8*, i8** %4, align 8
  %9 = call i8* @gettext(i8* %8) #11
  store i8* %9, i8** %6, align 8
  %10 = load i8*, i8** %6, align 8
  %11 = load i8*, i8** %4, align 8
  %12 = icmp ne i8* %10, %11
  br i1 %12, label %13, label %15

13:                                               ; preds = %2
  %14 = load i8*, i8** %6, align 8
  store i8* %14, i8** %3, align 8
  br label %45

15:                                               ; preds = %2
  %16 = call i8* @locale_charset()
  store i8* %16, i8** %7, align 8
  %17 = load i8*, i8** %7, align 8
  %18 = call i32 @c_strcasecmp(i8* %17, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.271, i64 0, i64 0)) #13
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %28

20:                                               ; preds = %15
  %21 = load i8*, i8** %4, align 8
  %22 = getelementptr inbounds i8, i8* %21, i64 0
  %23 = load i8, i8* %22, align 1
  %24 = sext i8 %23 to i32
  %25 = icmp eq i32 %24, 96
  %26 = zext i1 %25 to i64
  %27 = select i1 %25, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14.272, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.15.273, i64 0, i64 0)
  store i8* %27, i8** %3, align 8
  br label %45

28:                                               ; preds = %15
  %29 = load i8*, i8** %7, align 8
  %30 = call i32 @c_strcasecmp(i8* %29, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.16.274, i64 0, i64 0)) #13
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %40

32:                                               ; preds = %28
  %33 = load i8*, i8** %4, align 8
  %34 = getelementptr inbounds i8, i8* %33, i64 0
  %35 = load i8, i8* %34, align 1
  %36 = sext i8 %35 to i32
  %37 = icmp eq i32 %36, 96
  %38 = zext i1 %37 to i64
  %39 = select i1 %37, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.17.275, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18.276, i64 0, i64 0)
  store i8* %39, i8** %3, align 8
  br label %45

40:                                               ; preds = %28
  %41 = load i32, i32* %5, align 4
  %42 = icmp eq i32 %41, 9
  %43 = zext i1 %42 to i64
  %44 = select i1 %42, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.268, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.270, i64 0, i64 0)
  store i8* %44, i8** %3, align 8
  br label %45

45:                                               ; preds = %40, %32, %20, %13
  %46 = load i8*, i8** %3, align 8
  ret i8* %46
}

; Function Attrs: nounwind readnone
declare dso_local i16** @__ctype_b_loc() #7

; Function Attrs: nounwind
declare dso_local i32 @iswprint(i32) #1

; Function Attrs: nounwind readonly
declare dso_local i32 @mbsinit(%struct.__mbstate_t*) #6

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quotearg_char_mem(i8*, i64, i8 signext) #3 {
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8, align 1
  %7 = alloca %struct.quoting_options, align 8
  store i8* %0, i8** %4, align 8
  store i64 %1, i64* %5, align 8
  store i8 %2, i8* %6, align 1
  %8 = bitcast %struct.quoting_options* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 bitcast (%struct.quoting_options* @default_quoting_options to i8*), i64 56, i1 false)
  %9 = load i8, i8* %6, align 1
  %10 = call i32 @set_char_quoting(%struct.quoting_options* %7, i8 signext %9, i32 1)
  %11 = load i8*, i8** %4, align 8
  %12 = load i64, i64* %5, align 8
  %13 = call i8* @quotearg_n_options(i32 0, i8* %11, i64 %12, %struct.quoting_options* %7)
  ret i8* %13
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quotearg_char(i8*, i8 signext) #3 {
  %3 = alloca i8*, align 8
  %4 = alloca i8, align 1
  store i8* %0, i8** %3, align 8
  store i8 %1, i8* %4, align 1
  %5 = load i8*, i8** %3, align 8
  %6 = load i8, i8* %4, align 1
  %7 = call i8* @quotearg_char_mem(i8* %5, i64 -1, i8 signext %6)
  ret i8* %7
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quotearg_colon(i8*) #3 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %3 = load i8*, i8** %2, align 8
  %4 = call i8* @quotearg_char(i8* %3, i8 signext 58)
  ret i8* %4
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quotearg_n_style_colon(i32, i32, i8*) #3 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca %struct.quoting_options, align 8
  %8 = alloca %struct.quoting_options, align 8
  store i32 %0, i32* %4, align 4
  store i32 %1, i32* %5, align 4
  store i8* %2, i8** %6, align 8
  %9 = load i32, i32* %5, align 4
  call void @quoting_options_from_style(%struct.quoting_options* sret %8, i32 %9)
  %10 = bitcast %struct.quoting_options* %7 to i8*
  %11 = bitcast %struct.quoting_options* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %11, i64 56, i1 false)
  %12 = call i32 @set_char_quoting(%struct.quoting_options* %7, i8 signext 58, i32 1)
  %13 = load i32, i32* %4, align 4
  %14 = load i8*, i8** %6, align 8
  %15 = call i8* @quotearg_n_options(i32 %13, i8* %14, i64 -1, %struct.quoting_options* %7)
  ret i8* %15
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quote_n_mem(i32, i8*, i64) #3 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  store i32 %0, i32* %4, align 4
  store i8* %1, i8** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load i32, i32* %4, align 4
  %8 = load i8*, i8** %5, align 8
  %9 = load i64, i64* %6, align 8
  %10 = call i8* @quotearg_n_options(i32 %7, i8* %8, i64 %9, %struct.quoting_options* @quote_quoting_options)
  ret i8* %10
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quote_n(i32, i8*) #3 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  store i32 %0, i32* %3, align 4
  store i8* %1, i8** %4, align 8
  %5 = load i32, i32* %3, align 4
  %6 = load i8*, i8** %4, align 8
  %7 = call i8* @quote_n_mem(i32 %5, i8* %6, i64 -1)
  ret i8* %7
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quote(i8*) #3 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %3 = load i8*, i8** %2, align 8
  %4 = call i8* @quote_n(i32 0, i8* %3)
  ret i8* %4
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @settime(%struct.timespec* nonnull) #3 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.timespec*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.timespec, align 8
  store %struct.timespec* %0, %struct.timespec** %3, align 8
  %6 = load %struct.timespec*, %struct.timespec** %3, align 8
  %7 = call i32 @clock_settime(i32 0, %struct.timespec* %6) #11
  store i32 %7, i32* %4, align 4
  %8 = load i32, i32* %4, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %14, label %10

10:                                               ; preds = %1
  %11 = call i32* @__errno_location() #15
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 1
  br i1 %13, label %14, label %16

14:                                               ; preds = %10, %1
  %15 = load i32, i32* %4, align 4
  store i32 %15, i32* %2, align 4
  br label %27

16:                                               ; preds = %10
  %17 = load %struct.timespec*, %struct.timespec** %3, align 8
  %18 = getelementptr inbounds %struct.timespec, %struct.timespec* %17, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds %struct.timespec, %struct.timespec* %5, i32 0, i32 0
  store i64 %19, i64* %20, align 8
  %21 = load %struct.timespec*, %struct.timespec** %3, align 8
  %22 = getelementptr inbounds %struct.timespec, %struct.timespec* %21, i32 0, i32 1
  %23 = load i64, i64* %22, align 8
  %24 = sdiv i64 %23, 1000
  %25 = getelementptr inbounds %struct.timespec, %struct.timespec* %5, i32 0, i32 1
  store i64 %24, i64* %25, align 8
  %26 = call i32 @settimeofday(%struct.timespec* %5, %struct.timezone* null) #11
  store i32 %26, i32* %2, align 4
  br label %27

27:                                               ; preds = %16, %14
  %28 = load i32, i32* %2, align 4
  ret i32 %28
}

; Function Attrs: nounwind
declare dso_local i32 @clock_settime(i32, %struct.timespec*) #1

; Function Attrs: nounwind
declare dso_local i32 @settimeofday(%struct.timespec*, %struct.timezone*) #1

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal { i64, i64 } @get_stat_mtime(%struct.stat*) #8 {
  %2 = alloca %struct.timespec, align 8
  %3 = alloca %struct.stat*, align 8
  store %struct.stat* %0, %struct.stat** %3, align 8
  %4 = load %struct.stat*, %struct.stat** %3, align 8
  %5 = getelementptr inbounds %struct.stat, %struct.stat* %4, i32 0, i32 12
  %6 = bitcast %struct.timespec* %2 to i8*
  %7 = bitcast %struct.timespec* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 16, i1 false)
  %8 = bitcast %struct.timespec* %2 to { i64, i64 }*
  %9 = load { i64, i64 }, { i64, i64 }* %8, align 8
  ret { i64, i64 } %9
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @version_etc_arn(%struct._IO_FILE*, i8*, i8*, i8*, i8**, i64) #3 {
  %7 = alloca %struct._IO_FILE*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i8**, align 8
  %12 = alloca i64, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %7, align 8
  store i8* %1, i8** %8, align 8
  store i8* %2, i8** %9, align 8
  store i8* %3, i8** %10, align 8
  store i8** %4, i8*** %11, align 8
  store i64 %5, i64* %12, align 8
  %13 = load i8*, i8** %8, align 8
  %14 = icmp ne i8* %13, null
  br i1 %14, label %15, label %21

15:                                               ; preds = %6
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %17 = load i8*, i8** %8, align 8
  %18 = load i8*, i8** %9, align 8
  %19 = load i8*, i8** %10, align 8
  %20 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %16, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.289, i64 0, i64 0), i8* %17, i8* %18, i8* %19)
  br label %26

21:                                               ; preds = %6
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %23 = load i8*, i8** %9, align 8
  %24 = load i8*, i8** %10, align 8
  %25 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %22, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.290, i64 0, i64 0), i8* %23, i8* %24)
  br label %26

26:                                               ; preds = %21, %15
  %27 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %28 = call i8* @gettext(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.291, i64 0, i64 0)) #11
  %29 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %27, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @version_etc_copyright, i64 0, i64 0), i8* %28, i32 2020)
  %30 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %31 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.292, i64 0, i64 0), %struct._IO_FILE* %30)
  %32 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %33 = call i8* @gettext(i8* getelementptr inbounds ([171 x i8], [171 x i8]* @.str.4.293, i64 0, i64 0)) #11
  %34 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %32, i8* %33, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.5.294, i64 0, i64 0))
  %35 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %36 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.292, i64 0, i64 0), %struct._IO_FILE* %35)
  %37 = load i64, i64* %12, align 8
  switch i64 %37, label %210 [
    i64 0, label %38
    i64 1, label %39
    i64 2, label %46
    i64 3, label %56
    i64 4, label %69
    i64 5, label %85
    i64 6, label %104
    i64 7, label %126
    i64 8, label %151
    i64 9, label %179
  ]

38:                                               ; preds = %26
  br label %241

39:                                               ; preds = %26
  %40 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %41 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6.295, i64 0, i64 0)) #11
  %42 = load i8**, i8*** %11, align 8
  %43 = getelementptr inbounds i8*, i8** %42, i64 0
  %44 = load i8*, i8** %43, align 8
  %45 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %40, i8* %41, i8* %44)
  br label %241

46:                                               ; preds = %26
  %47 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %48 = call i8* @gettext(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.296, i64 0, i64 0)) #11
  %49 = load i8**, i8*** %11, align 8
  %50 = getelementptr inbounds i8*, i8** %49, i64 0
  %51 = load i8*, i8** %50, align 8
  %52 = load i8**, i8*** %11, align 8
  %53 = getelementptr inbounds i8*, i8** %52, i64 1
  %54 = load i8*, i8** %53, align 8
  %55 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %47, i8* %48, i8* %51, i8* %54)
  br label %241

56:                                               ; preds = %26
  %57 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %58 = call i8* @gettext(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.8.297, i64 0, i64 0)) #11
  %59 = load i8**, i8*** %11, align 8
  %60 = getelementptr inbounds i8*, i8** %59, i64 0
  %61 = load i8*, i8** %60, align 8
  %62 = load i8**, i8*** %11, align 8
  %63 = getelementptr inbounds i8*, i8** %62, i64 1
  %64 = load i8*, i8** %63, align 8
  %65 = load i8**, i8*** %11, align 8
  %66 = getelementptr inbounds i8*, i8** %65, i64 2
  %67 = load i8*, i8** %66, align 8
  %68 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %57, i8* %58, i8* %61, i8* %64, i8* %67)
  br label %241

69:                                               ; preds = %26
  %70 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %71 = call i8* @gettext(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.9.298, i64 0, i64 0)) #11
  %72 = load i8**, i8*** %11, align 8
  %73 = getelementptr inbounds i8*, i8** %72, i64 0
  %74 = load i8*, i8** %73, align 8
  %75 = load i8**, i8*** %11, align 8
  %76 = getelementptr inbounds i8*, i8** %75, i64 1
  %77 = load i8*, i8** %76, align 8
  %78 = load i8**, i8*** %11, align 8
  %79 = getelementptr inbounds i8*, i8** %78, i64 2
  %80 = load i8*, i8** %79, align 8
  %81 = load i8**, i8*** %11, align 8
  %82 = getelementptr inbounds i8*, i8** %81, i64 3
  %83 = load i8*, i8** %82, align 8
  %84 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %70, i8* %71, i8* %74, i8* %77, i8* %80, i8* %83)
  br label %241

85:                                               ; preds = %26
  %86 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %87 = call i8* @gettext(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.10.299, i64 0, i64 0)) #11
  %88 = load i8**, i8*** %11, align 8
  %89 = getelementptr inbounds i8*, i8** %88, i64 0
  %90 = load i8*, i8** %89, align 8
  %91 = load i8**, i8*** %11, align 8
  %92 = getelementptr inbounds i8*, i8** %91, i64 1
  %93 = load i8*, i8** %92, align 8
  %94 = load i8**, i8*** %11, align 8
  %95 = getelementptr inbounds i8*, i8** %94, i64 2
  %96 = load i8*, i8** %95, align 8
  %97 = load i8**, i8*** %11, align 8
  %98 = getelementptr inbounds i8*, i8** %97, i64 3
  %99 = load i8*, i8** %98, align 8
  %100 = load i8**, i8*** %11, align 8
  %101 = getelementptr inbounds i8*, i8** %100, i64 4
  %102 = load i8*, i8** %101, align 8
  %103 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %86, i8* %87, i8* %90, i8* %93, i8* %96, i8* %99, i8* %102)
  br label %241

104:                                              ; preds = %26
  %105 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %106 = call i8* @gettext(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.11.300, i64 0, i64 0)) #11
  %107 = load i8**, i8*** %11, align 8
  %108 = getelementptr inbounds i8*, i8** %107, i64 0
  %109 = load i8*, i8** %108, align 8
  %110 = load i8**, i8*** %11, align 8
  %111 = getelementptr inbounds i8*, i8** %110, i64 1
  %112 = load i8*, i8** %111, align 8
  %113 = load i8**, i8*** %11, align 8
  %114 = getelementptr inbounds i8*, i8** %113, i64 2
  %115 = load i8*, i8** %114, align 8
  %116 = load i8**, i8*** %11, align 8
  %117 = getelementptr inbounds i8*, i8** %116, i64 3
  %118 = load i8*, i8** %117, align 8
  %119 = load i8**, i8*** %11, align 8
  %120 = getelementptr inbounds i8*, i8** %119, i64 4
  %121 = load i8*, i8** %120, align 8
  %122 = load i8**, i8*** %11, align 8
  %123 = getelementptr inbounds i8*, i8** %122, i64 5
  %124 = load i8*, i8** %123, align 8
  %125 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %105, i8* %106, i8* %109, i8* %112, i8* %115, i8* %118, i8* %121, i8* %124)
  br label %241

126:                                              ; preds = %26
  %127 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %128 = call i8* @gettext(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.12.301, i64 0, i64 0)) #11
  %129 = load i8**, i8*** %11, align 8
  %130 = getelementptr inbounds i8*, i8** %129, i64 0
  %131 = load i8*, i8** %130, align 8
  %132 = load i8**, i8*** %11, align 8
  %133 = getelementptr inbounds i8*, i8** %132, i64 1
  %134 = load i8*, i8** %133, align 8
  %135 = load i8**, i8*** %11, align 8
  %136 = getelementptr inbounds i8*, i8** %135, i64 2
  %137 = load i8*, i8** %136, align 8
  %138 = load i8**, i8*** %11, align 8
  %139 = getelementptr inbounds i8*, i8** %138, i64 3
  %140 = load i8*, i8** %139, align 8
  %141 = load i8**, i8*** %11, align 8
  %142 = getelementptr inbounds i8*, i8** %141, i64 4
  %143 = load i8*, i8** %142, align 8
  %144 = load i8**, i8*** %11, align 8
  %145 = getelementptr inbounds i8*, i8** %144, i64 5
  %146 = load i8*, i8** %145, align 8
  %147 = load i8**, i8*** %11, align 8
  %148 = getelementptr inbounds i8*, i8** %147, i64 6
  %149 = load i8*, i8** %148, align 8
  %150 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %127, i8* %128, i8* %131, i8* %134, i8* %137, i8* %140, i8* %143, i8* %146, i8* %149)
  br label %241

151:                                              ; preds = %26
  %152 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %153 = call i8* @gettext(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.13.302, i64 0, i64 0)) #11
  %154 = load i8**, i8*** %11, align 8
  %155 = getelementptr inbounds i8*, i8** %154, i64 0
  %156 = load i8*, i8** %155, align 8
  %157 = load i8**, i8*** %11, align 8
  %158 = getelementptr inbounds i8*, i8** %157, i64 1
  %159 = load i8*, i8** %158, align 8
  %160 = load i8**, i8*** %11, align 8
  %161 = getelementptr inbounds i8*, i8** %160, i64 2
  %162 = load i8*, i8** %161, align 8
  %163 = load i8**, i8*** %11, align 8
  %164 = getelementptr inbounds i8*, i8** %163, i64 3
  %165 = load i8*, i8** %164, align 8
  %166 = load i8**, i8*** %11, align 8
  %167 = getelementptr inbounds i8*, i8** %166, i64 4
  %168 = load i8*, i8** %167, align 8
  %169 = load i8**, i8*** %11, align 8
  %170 = getelementptr inbounds i8*, i8** %169, i64 5
  %171 = load i8*, i8** %170, align 8
  %172 = load i8**, i8*** %11, align 8
  %173 = getelementptr inbounds i8*, i8** %172, i64 6
  %174 = load i8*, i8** %173, align 8
  %175 = load i8**, i8*** %11, align 8
  %176 = getelementptr inbounds i8*, i8** %175, i64 7
  %177 = load i8*, i8** %176, align 8
  %178 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %152, i8* %153, i8* %156, i8* %159, i8* %162, i8* %165, i8* %168, i8* %171, i8* %174, i8* %177)
  br label %241

179:                                              ; preds = %26
  %180 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %181 = call i8* @gettext(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.14.303, i64 0, i64 0)) #11
  %182 = load i8**, i8*** %11, align 8
  %183 = getelementptr inbounds i8*, i8** %182, i64 0
  %184 = load i8*, i8** %183, align 8
  %185 = load i8**, i8*** %11, align 8
  %186 = getelementptr inbounds i8*, i8** %185, i64 1
  %187 = load i8*, i8** %186, align 8
  %188 = load i8**, i8*** %11, align 8
  %189 = getelementptr inbounds i8*, i8** %188, i64 2
  %190 = load i8*, i8** %189, align 8
  %191 = load i8**, i8*** %11, align 8
  %192 = getelementptr inbounds i8*, i8** %191, i64 3
  %193 = load i8*, i8** %192, align 8
  %194 = load i8**, i8*** %11, align 8
  %195 = getelementptr inbounds i8*, i8** %194, i64 4
  %196 = load i8*, i8** %195, align 8
  %197 = load i8**, i8*** %11, align 8
  %198 = getelementptr inbounds i8*, i8** %197, i64 5
  %199 = load i8*, i8** %198, align 8
  %200 = load i8**, i8*** %11, align 8
  %201 = getelementptr inbounds i8*, i8** %200, i64 6
  %202 = load i8*, i8** %201, align 8
  %203 = load i8**, i8*** %11, align 8
  %204 = getelementptr inbounds i8*, i8** %203, i64 7
  %205 = load i8*, i8** %204, align 8
  %206 = load i8**, i8*** %11, align 8
  %207 = getelementptr inbounds i8*, i8** %206, i64 8
  %208 = load i8*, i8** %207, align 8
  %209 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %180, i8* %181, i8* %184, i8* %187, i8* %190, i8* %193, i8* %196, i8* %199, i8* %202, i8* %205, i8* %208)
  br label %241

210:                                              ; preds = %26
  %211 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %212 = call i8* @gettext(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.15.304, i64 0, i64 0)) #11
  %213 = load i8**, i8*** %11, align 8
  %214 = getelementptr inbounds i8*, i8** %213, i64 0
  %215 = load i8*, i8** %214, align 8
  %216 = load i8**, i8*** %11, align 8
  %217 = getelementptr inbounds i8*, i8** %216, i64 1
  %218 = load i8*, i8** %217, align 8
  %219 = load i8**, i8*** %11, align 8
  %220 = getelementptr inbounds i8*, i8** %219, i64 2
  %221 = load i8*, i8** %220, align 8
  %222 = load i8**, i8*** %11, align 8
  %223 = getelementptr inbounds i8*, i8** %222, i64 3
  %224 = load i8*, i8** %223, align 8
  %225 = load i8**, i8*** %11, align 8
  %226 = getelementptr inbounds i8*, i8** %225, i64 4
  %227 = load i8*, i8** %226, align 8
  %228 = load i8**, i8*** %11, align 8
  %229 = getelementptr inbounds i8*, i8** %228, i64 5
  %230 = load i8*, i8** %229, align 8
  %231 = load i8**, i8*** %11, align 8
  %232 = getelementptr inbounds i8*, i8** %231, i64 6
  %233 = load i8*, i8** %232, align 8
  %234 = load i8**, i8*** %11, align 8
  %235 = getelementptr inbounds i8*, i8** %234, i64 7
  %236 = load i8*, i8** %235, align 8
  %237 = load i8**, i8*** %11, align 8
  %238 = getelementptr inbounds i8*, i8** %237, i64 8
  %239 = load i8*, i8** %238, align 8
  %240 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %211, i8* %212, i8* %215, i8* %218, i8* %221, i8* %224, i8* %227, i8* %230, i8* %233, i8* %236, i8* %239)
  br label %241

241:                                              ; preds = %210, %179, %151, %126, %104, %85, %69, %56, %46, %39, %38
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @version_etc_va(%struct._IO_FILE*, i8*, i8*, i8*, %struct.__va_list_tag*) #3 {
  %6 = alloca %struct._IO_FILE*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca %struct.__va_list_tag*, align 8
  %11 = alloca i64, align 8
  %12 = alloca [10 x i8*], align 16
  store %struct._IO_FILE* %0, %struct._IO_FILE** %6, align 8
  store i8* %1, i8** %7, align 8
  store i8* %2, i8** %8, align 8
  store i8* %3, i8** %9, align 8
  store %struct.__va_list_tag* %4, %struct.__va_list_tag** %10, align 8
  store i64 0, i64* %11, align 8
  br label %13

13:                                               ; preds = %41, %5
  %14 = load i64, i64* %11, align 8
  %15 = icmp ult i64 %14, 10
  br i1 %15, label %16, label %38

16:                                               ; preds = %13
  %17 = load %struct.__va_list_tag*, %struct.__va_list_tag** %10, align 8
  %18 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %17, i32 0, i32 0
  %19 = load i32, i32* %18, align 8
  %20 = icmp ule i32 %19, 40
  br i1 %20, label %21, label %27

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %17, i32 0, i32 3
  %23 = load i8*, i8** %22, align 8
  %24 = getelementptr i8, i8* %23, i32 %19
  %25 = bitcast i8* %24 to i8**
  %26 = add i32 %19, 8
  store i32 %26, i32* %18, align 8
  br label %32

27:                                               ; preds = %16
  %28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %17, i32 0, i32 2
  %29 = load i8*, i8** %28, align 8
  %30 = bitcast i8* %29 to i8**
  %31 = getelementptr i8, i8* %29, i32 8
  store i8* %31, i8** %28, align 8
  br label %32

32:                                               ; preds = %27, %21
  %33 = phi i8** [ %25, %21 ], [ %30, %27 ]
  %34 = load i8*, i8** %33, align 8
  %35 = load i64, i64* %11, align 8
  %36 = getelementptr inbounds [10 x i8*], [10 x i8*]* %12, i64 0, i64 %35
  store i8* %34, i8** %36, align 8
  %37 = icmp ne i8* %34, null
  br label %38

38:                                               ; preds = %32, %13
  %39 = phi i1 [ false, %13 ], [ %37, %32 ]
  br i1 %39, label %40, label %44

40:                                               ; preds = %38
  br label %41

41:                                               ; preds = %40
  %42 = load i64, i64* %11, align 8
  %43 = add i64 %42, 1
  store i64 %43, i64* %11, align 8
  br label %13

44:                                               ; preds = %38
  %45 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8
  %46 = load i8*, i8** %7, align 8
  %47 = load i8*, i8** %8, align 8
  %48 = load i8*, i8** %9, align 8
  %49 = getelementptr inbounds [10 x i8*], [10 x i8*]* %12, i64 0, i64 0
  %50 = load i64, i64* %11, align 8
  call void @version_etc_arn(%struct._IO_FILE* %45, i8* %46, i8* %47, i8* %48, i8** %49, i64 %50)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @version_etc(%struct._IO_FILE*, i8*, i8*, i8*, ...) #3 {
  %5 = alloca %struct._IO_FILE*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca [1 x %struct.__va_list_tag], align 16
  store %struct._IO_FILE* %0, %struct._IO_FILE** %5, align 8
  store i8* %1, i8** %6, align 8
  store i8* %2, i8** %7, align 8
  store i8* %3, i8** %8, align 8
  %10 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %9, i64 0, i64 0
  %11 = bitcast %struct.__va_list_tag* %10 to i8*
  call void @llvm.va_start(i8* %11)
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8
  %13 = load i8*, i8** %6, align 8
  %14 = load i8*, i8** %7, align 8
  %15 = load i8*, i8** %8, align 8
  %16 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %9, i64 0, i64 0
  call void @version_etc_va(%struct._IO_FILE* %12, i8* %13, i8* %14, i8* %15, %struct.__va_list_tag* %16)
  %17 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %9, i64 0, i64 0
  %18 = bitcast %struct.__va_list_tag* %17 to i8*
  call void @llvm.va_end(i8* %18)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal noalias i8* @xmalloc(i64) #3 {
  %2 = alloca i64, align 8
  %3 = alloca i8*, align 8
  store i64 %0, i64* %2, align 8
  %4 = load i64, i64* %2, align 8
  %5 = call noalias i8* @malloc(i64 %4) #11
  store i8* %5, i8** %3, align 8
  %6 = load i8*, i8** %3, align 8
  %7 = icmp ne i8* %6, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %1
  %9 = load i64, i64* %2, align 8
  %10 = icmp ne i64 %9, 0
  br i1 %10, label %11, label %12

11:                                               ; preds = %8
  call void @xalloc_die() #14
  unreachable

12:                                               ; preds = %8, %1
  %13 = load i8*, i8** %3, align 8
  ret i8* %13
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @xrealloc(i8*, i64) #3 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  store i8* %0, i8** %4, align 8
  store i64 %1, i64* %5, align 8
  %6 = load i64, i64* %5, align 8
  %7 = icmp ne i64 %6, 0
  br i1 %7, label %13, label %8

8:                                                ; preds = %2
  %9 = load i8*, i8** %4, align 8
  %10 = icmp ne i8* %9, null
  br i1 %10, label %11, label %13

11:                                               ; preds = %8
  %12 = load i8*, i8** %4, align 8
  call void @free(i8* %12) #11
  store i8* null, i8** %3, align 8
  br label %25

13:                                               ; preds = %8, %2
  %14 = load i8*, i8** %4, align 8
  %15 = load i64, i64* %5, align 8
  %16 = call i8* @realloc(i8* %14, i64 %15) #11
  store i8* %16, i8** %4, align 8
  %17 = load i8*, i8** %4, align 8
  %18 = icmp ne i8* %17, null
  br i1 %18, label %23, label %19

19:                                               ; preds = %13
  %20 = load i64, i64* %5, align 8
  %21 = icmp ne i64 %20, 0
  br i1 %21, label %22, label %23

22:                                               ; preds = %19
  call void @xalloc_die() #14
  unreachable

23:                                               ; preds = %19, %13
  %24 = load i8*, i8** %4, align 8
  store i8* %24, i8** %3, align 8
  br label %25

25:                                               ; preds = %23, %11
  %26 = load i8*, i8** %3, align 8
  ret i8* %26
}

; Function Attrs: nounwind
declare dso_local i8* @realloc(i8*, i64) #1

; Function Attrs: noinline nounwind optnone uwtable
define internal noalias i8* @xcharalloc(i64) #3 {
  %2 = alloca i64, align 8
  store i64 %0, i64* %2, align 8
  %3 = load i64, i64* %2, align 8
  %4 = call noalias i8* @xmalloc(i64 %3)
  ret i8* %4
}

; Function Attrs: noinline noreturn nounwind optnone uwtable
define internal void @xalloc_die() #0 {
  %1 = load volatile i32, i32* @exit_failure, align 4
  %2 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1.315, i64 0, i64 0)) #11
  call void (i32, i32, i8*, ...) @error(i32 %1, i32 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.316, i64 0, i64 0), i8* %2)
  call void @abort() #12
  unreachable
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rpl_fclose(%struct._IO_FILE* nonnull) #3 {
  %2 = alloca i32, align 4
  %3 = alloca %struct._IO_FILE*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store %struct._IO_FILE* %0, %struct._IO_FILE** %3, align 8
  store i32 0, i32* %4, align 4
  %7 = call i32 @_Z10computeFuniiiii(i32 -121333146, i32 47, i32 -827719893, i32 237934558, i32 600166190)
  store i32 %7, i32* %6, align 4
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %9 = call i32 @fileno(%struct._IO_FILE* %8) #11
  store i32 %9, i32* %5, align 4
  %10 = load i32, i32* %5, align 4
  %11 = icmp slt i32 %10, 0
  br i1 %11, label %12, label %15

12:                                               ; preds = %1
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %14 = call i32 @fclose(%struct._IO_FILE* %13)
  store i32 %14, i32* %2, align 4
  br label %41

15:                                               ; preds = %1
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %17 = call i32 @__freading(%struct._IO_FILE* %16) #11
  %18 = icmp ne i32 %17, 0
  br i1 %18, label %19, label %24

19:                                               ; preds = %15
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %21 = call i32 @fileno(%struct._IO_FILE* %20) #11
  %22 = call i64 @lseek(i32 %21, i64 0, i32 1) #11
  %23 = icmp ne i64 %22, -1
  br i1 %23, label %24, label %31

24:                                               ; preds = %19, %15
  %25 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %26 = call i32 @rpl_fflush(%struct._IO_FILE* %25)
  %27 = icmp ne i32 %26, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %24
  %29 = call i32* @__errno_location() #15
  %30 = load i32, i32* %29, align 4
  store i32 %30, i32* %4, align 4
  br label %31

31:                                               ; preds = %28, %24, %19
  %32 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %33 = call i32 @fclose(%struct._IO_FILE* %32)
  store i32 %33, i32* %6, align 4
  %34 = load i32, i32* %4, align 4
  %35 = icmp ne i32 %34, 0
  br i1 %35, label %36, label %39

36:                                               ; preds = %31
  %37 = load i32, i32* %4, align 4
  %38 = call i32* @__errno_location() #15
  store i32 %37, i32* %38, align 4
  store i32 -1, i32* %6, align 4
  br label %39

39:                                               ; preds = %36, %31
  %40 = load i32, i32* %6, align 4
  store i32 %40, i32* %2, align 4
  br label %41

41:                                               ; preds = %39, %12
  %42 = load i32, i32* %2, align 4
  ret i32 %42
}

; Function Attrs: nounwind
declare dso_local i32 @fileno(%struct._IO_FILE*) #1

declare dso_local i32 @fclose(%struct._IO_FILE*) #2

; Function Attrs: nounwind
declare dso_local i32 @__freading(%struct._IO_FILE*) #1

; Function Attrs: nounwind
declare dso_local i64 @lseek(i32, i64, i32) #1

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rpl_fflush(%struct._IO_FILE*) #3 {
  %2 = alloca i32, align 4
  %3 = alloca %struct._IO_FILE*, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %3, align 8
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %5 = icmp eq %struct._IO_FILE* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %8 = call i32 @__freading(%struct._IO_FILE* %7) #11
  %9 = icmp ne i32 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %6, %1
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %12 = call i32 @fflush(%struct._IO_FILE* %11)
  store i32 %12, i32* %2, align 4
  br label %17

13:                                               ; preds = %6
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  call void @clear_ungetc_buffer_preserving_position(%struct._IO_FILE* %14)
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %16 = call i32 @fflush(%struct._IO_FILE* %15)
  store i32 %16, i32* %2, align 4
  br label %17

17:                                               ; preds = %13, %10
  %18 = load i32, i32* %2, align 4
  ret i32 %18
}

declare dso_local i32 @fflush(%struct._IO_FILE*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @clear_ungetc_buffer_preserving_position(%struct._IO_FILE*) #3 {
  %2 = alloca %struct._IO_FILE*, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %2, align 8
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %2, align 8
  %4 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %3, i32 0, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = and i32 %5, 256
  %7 = icmp ne i32 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** %2, align 8
  %10 = call i32 @rpl_fseeko(%struct._IO_FILE* %9, i64 0, i32 1)
  br label %11

11:                                               ; preds = %8, %1
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rpl_fseeko(%struct._IO_FILE* nonnull, i64, i32) #3 {
  %4 = alloca i32, align 4
  %5 = alloca %struct._IO_FILE*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i32, align 4
  %8 = alloca i64, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %5, align 8
  store i64 %1, i64* %6, align 8
  store i32 %2, i32* %7, align 4
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8
  %10 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %9, i32 0, i32 2
  %11 = load i8*, i8** %10, align 8
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8
  %13 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %12, i32 0, i32 1
  %14 = load i8*, i8** %13, align 8
  %15 = icmp eq i8* %11, %14
  br i1 %15, label %16, label %46

16:                                               ; preds = %3
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8
  %18 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %17, i32 0, i32 5
  %19 = load i8*, i8** %18, align 8
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8
  %21 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %20, i32 0, i32 4
  %22 = load i8*, i8** %21, align 8
  %23 = icmp eq i8* %19, %22
  br i1 %23, label %24, label %46

24:                                               ; preds = %16
  %25 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8
  %26 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %25, i32 0, i32 9
  %27 = load i8*, i8** %26, align 8
  %28 = icmp eq i8* %27, null
  br i1 %28, label %29, label %46

29:                                               ; preds = %24
  %30 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8
  %31 = call i32 @fileno(%struct._IO_FILE* %30) #11
  %32 = load i64, i64* %6, align 8
  %33 = load i32, i32* %7, align 4
  %34 = call i64 @lseek(i32 %31, i64 %32, i32 %33) #11
  store i64 %34, i64* %8, align 8
  %35 = load i64, i64* %8, align 8
  %36 = icmp eq i64 %35, -1
  br i1 %36, label %37, label %38

37:                                               ; preds = %29
  store i32 -1, i32* %4, align 4
  br label %51

38:                                               ; preds = %29
  %39 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8
  %40 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %39, i32 0, i32 0
  %41 = load i32, i32* %40, align 8
  %42 = and i32 %41, -17
  store i32 %42, i32* %40, align 8
  %43 = load i64, i64* %8, align 8
  %44 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8
  %45 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %44, i32 0, i32 21
  store i64 %43, i64* %45, align 8
  store i32 0, i32* %4, align 4
  br label %51

46:                                               ; preds = %24, %16, %3
  %47 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8
  %48 = load i64, i64* %6, align 8
  %49 = load i32, i32* %7, align 4
  %50 = call i32 @fseeko(%struct._IO_FILE* %47, i64 %48, i32 %49)
  store i32 %50, i32* %4, align 4
  br label %51

51:                                               ; preds = %46, %38, %37
  %52 = load i32, i32* %4, align 4
  ret i32 %52
}

declare dso_local i32 @fseeko(%struct._IO_FILE*, i64, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @rpl_mbrtowc(i32*, i8*, i64, %struct.__mbstate_t*) #3 {
  %5 = alloca i64, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca %struct.__mbstate_t*, align 8
  %10 = alloca i64, align 8
  %11 = alloca i32, align 4
  %12 = alloca i8, align 1
  store i32* %0, i32** %6, align 8
  store i8* %1, i8** %7, align 8
  store i64 %2, i64* %8, align 8
  store %struct.__mbstate_t* %3, %struct.__mbstate_t** %9, align 8
  %13 = load i32*, i32** %6, align 8
  %14 = icmp ne i32* %13, null
  br i1 %14, label %16, label %15

15:                                               ; preds = %4
  store i32* %11, i32** %6, align 8
  br label %16

16:                                               ; preds = %15, %4
  %17 = load i32*, i32** %6, align 8
  %18 = load i8*, i8** %7, align 8
  %19 = load i64, i64* %8, align 8
  %20 = load %struct.__mbstate_t*, %struct.__mbstate_t** %9, align 8
  %21 = call i64 @mbrtowc(i32* %17, i8* %18, i64 %19, %struct.__mbstate_t* %20) #11
  store i64 %21, i64* %10, align 8
  %22 = load i64, i64* %10, align 8
  %23 = icmp ule i64 -2, %22
  br i1 %23, label %24, label %35

24:                                               ; preds = %16
  %25 = load i64, i64* %8, align 8
  %26 = icmp ne i64 %25, 0
  br i1 %26, label %27, label %35

27:                                               ; preds = %24
  %28 = call zeroext i1 @hard_locale(i32 0)
  br i1 %28, label %35, label %29

29:                                               ; preds = %27
  %30 = load i8*, i8** %7, align 8
  %31 = load i8, i8* %30, align 1
  store i8 %31, i8* %12, align 1
  %32 = load i8, i8* %12, align 1
  %33 = zext i8 %32 to i32
  %34 = load i32*, i32** %6, align 8
  store i32 %33, i32* %34, align 4
  store i64 1, i64* %5, align 8
  br label %37

35:                                               ; preds = %27, %24, %16
  %36 = load i64, i64* %10, align 8
  store i64 %36, i64* %5, align 8
  br label %37

37:                                               ; preds = %35, %29
  %38 = load i64, i64* %5, align 8
  ret i64 %38
}

; Function Attrs: nounwind
declare dso_local i64 @mbrtowc(i32*, i8*, i64, %struct.__mbstate_t*) #1

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.tm_zone* @tzalloc(i8*) #3 {
  %2 = alloca i8*, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca %struct.tm_zone*, align 8
  store i8* %0, i8** %2, align 8
  %6 = load i8*, i8** %2, align 8
  %7 = icmp ne i8* %6, null
  br i1 %7, label %8, label %12

8:                                                ; preds = %1
  %9 = load i8*, i8** %2, align 8
  %10 = call i64 @strlen(i8* %9) #13
  %11 = add i64 %10, 1
  br label %13

12:                                               ; preds = %1
  br label %13

13:                                               ; preds = %12, %8
  %14 = phi i64 [ %11, %8 ], [ 0, %12 ]
  store i64 %14, i64* %3, align 8
  %15 = load i64, i64* %3, align 8
  %16 = icmp ult i64 %15, 119
  br i1 %16, label %17, label %18

17:                                               ; preds = %13
  br label %21

18:                                               ; preds = %13
  %19 = load i64, i64* %3, align 8
  %20 = add i64 %19, 1
  br label %21

21:                                               ; preds = %18, %17
  %22 = phi i64 [ 119, %17 ], [ %20, %18 ]
  store i64 %22, i64* %4, align 8
  %23 = load i64, i64* %4, align 8
  %24 = add i64 24, %23
  %25 = and i64 %24, -16
  %26 = call noalias i8* @malloc(i64 %25) #11
  %27 = bitcast i8* %26 to %struct.tm_zone*
  store %struct.tm_zone* %27, %struct.tm_zone** %5, align 8
  %28 = load %struct.tm_zone*, %struct.tm_zone** %5, align 8
  %29 = icmp ne %struct.tm_zone* %28, null
  br i1 %29, label %30, label %53

30:                                               ; preds = %21
  %31 = load %struct.tm_zone*, %struct.tm_zone** %5, align 8
  %32 = getelementptr inbounds %struct.tm_zone, %struct.tm_zone* %31, i32 0, i32 0
  store %struct.tm_zone* null, %struct.tm_zone** %32, align 8
  %33 = load i8*, i8** %2, align 8
  %34 = icmp ne i8* %33, null
  %35 = xor i1 %34, true
  %36 = xor i1 %35, true
  %37 = zext i1 %36 to i32
  %38 = trunc i32 %37 to i8
  %39 = load %struct.tm_zone*, %struct.tm_zone** %5, align 8
  %40 = getelementptr inbounds %struct.tm_zone, %struct.tm_zone* %39, i32 0, i32 1
  store i8 %38, i8* %40, align 8
  %41 = load %struct.tm_zone*, %struct.tm_zone** %5, align 8
  %42 = getelementptr inbounds %struct.tm_zone, %struct.tm_zone* %41, i32 0, i32 2
  %43 = getelementptr inbounds [0 x i8], [0 x i8]* %42, i64 0, i64 0
  store i8 0, i8* %43, align 1
  %44 = load i8*, i8** %2, align 8
  %45 = icmp ne i8* %44, null
  br i1 %45, label %46, label %52

46:                                               ; preds = %30
  %47 = load %struct.tm_zone*, %struct.tm_zone** %5, align 8
  %48 = getelementptr inbounds %struct.tm_zone, %struct.tm_zone* %47, i32 0, i32 2
  %49 = getelementptr inbounds [0 x i8], [0 x i8]* %48, i64 0, i64 0
  %50 = load i8*, i8** %2, align 8
  %51 = load i64, i64* %3, align 8
  call void @extend_abbrs(i8* %49, i8* %50, i64 %51)
  br label %52

52:                                               ; preds = %46, %30
  br label %53

53:                                               ; preds = %52, %21
  %54 = load %struct.tm_zone*, %struct.tm_zone** %5, align 8
  ret %struct.tm_zone* %54
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @extend_abbrs(i8*, i8*, i64) #3 {
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  store i8* %0, i8** %4, align 8
  store i8* %1, i8** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load i8*, i8** %4, align 8
  %8 = load i8*, i8** %5, align 8
  %9 = load i64, i64* %6, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %7, i8* align 1 %8, i64 %9, i1 false)
  %10 = load i8*, i8** %4, align 8
  %11 = load i64, i64* %6, align 8
  %12 = getelementptr inbounds i8, i8* %10, i64 %11
  store i8 0, i8* %12, align 1
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @tzfree(%struct.tm_zone*) #3 {
  %2 = alloca %struct.tm_zone*, align 8
  %3 = alloca %struct.tm_zone*, align 8
  store %struct.tm_zone* %0, %struct.tm_zone** %2, align 8
  %4 = load %struct.tm_zone*, %struct.tm_zone** %2, align 8
  %5 = icmp ne %struct.tm_zone* %4, inttoptr (i64 1 to %struct.tm_zone*)
  br i1 %5, label %6, label %18

6:                                                ; preds = %1
  br label %7

7:                                                ; preds = %10, %6
  %8 = load %struct.tm_zone*, %struct.tm_zone** %2, align 8
  %9 = icmp ne %struct.tm_zone* %8, null
  br i1 %9, label %10, label %17

10:                                               ; preds = %7
  %11 = load %struct.tm_zone*, %struct.tm_zone** %2, align 8
  %12 = getelementptr inbounds %struct.tm_zone, %struct.tm_zone* %11, i32 0, i32 0
  %13 = load %struct.tm_zone*, %struct.tm_zone** %12, align 8
  store %struct.tm_zone* %13, %struct.tm_zone** %3, align 8
  %14 = load %struct.tm_zone*, %struct.tm_zone** %2, align 8
  %15 = bitcast %struct.tm_zone* %14 to i8*
  call void @free(i8* %15) #11
  %16 = load %struct.tm_zone*, %struct.tm_zone** %3, align 8
  store %struct.tm_zone* %16, %struct.tm_zone** %2, align 8
  br label %7

17:                                               ; preds = %7
  br label %18

18:                                               ; preds = %17, %1
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.tm* @localtime_rz(%struct.tm_zone*, i64* nonnull, %struct.tm* nonnull) #3 {
  %4 = alloca %struct.tm*, align 8
  %5 = alloca %struct.tm_zone*, align 8
  %6 = alloca i64*, align 8
  %7 = alloca %struct.tm*, align 8
  %8 = alloca %struct.tm_zone*, align 8
  %9 = alloca i8, align 1
  store %struct.tm_zone* %0, %struct.tm_zone** %5, align 8
  store i64* %1, i64** %6, align 8
  store %struct.tm* %2, %struct.tm** %7, align 8
  %10 = load %struct.tm_zone*, %struct.tm_zone** %5, align 8
  %11 = icmp ne %struct.tm_zone* %10, null
  br i1 %11, label %16, label %12

12:                                               ; preds = %3
  %13 = load i64*, i64** %6, align 8
  %14 = load %struct.tm*, %struct.tm** %7, align 8
  %15 = call %struct.tm* @gmtime_r(i64* %13, %struct.tm* %14) #11
  store %struct.tm* %15, %struct.tm** %4, align 8
  br label %42

16:                                               ; preds = %3
  %17 = load %struct.tm_zone*, %struct.tm_zone** %5, align 8
  %18 = call %struct.tm_zone* @set_tz(%struct.tm_zone* %17)
  store %struct.tm_zone* %18, %struct.tm_zone** %8, align 8
  %19 = load %struct.tm_zone*, %struct.tm_zone** %8, align 8
  %20 = icmp ne %struct.tm_zone* %19, null
  br i1 %20, label %21, label %41

21:                                               ; preds = %16
  %22 = load i64*, i64** %6, align 8
  %23 = load %struct.tm*, %struct.tm** %7, align 8
  %24 = call %struct.tm* @localtime_r(i64* %22, %struct.tm* %23) #11
  %25 = icmp ne %struct.tm* %24, null
  br i1 %25, label %26, label %30

26:                                               ; preds = %21
  %27 = load %struct.tm_zone*, %struct.tm_zone** %5, align 8
  %28 = load %struct.tm*, %struct.tm** %7, align 8
  %29 = call zeroext i1 @save_abbr(%struct.tm_zone* %27, %struct.tm* %28)
  br label %30

30:                                               ; preds = %26, %21
  %31 = phi i1 [ false, %21 ], [ %29, %26 ]
  %32 = zext i1 %31 to i8
  store i8 %32, i8* %9, align 1
  %33 = load %struct.tm_zone*, %struct.tm_zone** %8, align 8
  %34 = call zeroext i1 @revert_tz(%struct.tm_zone* %33)
  br i1 %34, label %35, label %40

35:                                               ; preds = %30
  %36 = load i8, i8* %9, align 1
  %37 = trunc i8 %36 to i1
  br i1 %37, label %38, label %40

38:                                               ; preds = %35
  %39 = load %struct.tm*, %struct.tm** %7, align 8
  store %struct.tm* %39, %struct.tm** %4, align 8
  br label %42

40:                                               ; preds = %35, %30
  br label %41

41:                                               ; preds = %40, %16
  store %struct.tm* null, %struct.tm** %4, align 8
  br label %42

42:                                               ; preds = %41, %38, %12
  %43 = load %struct.tm*, %struct.tm** %4, align 8
  ret %struct.tm* %43
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.tm_zone* @set_tz(%struct.tm_zone*) #3 {
  %2 = alloca %struct.tm_zone*, align 8
  %3 = alloca %struct.tm_zone*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca %struct.tm_zone*, align 8
  %6 = alloca i32, align 4
  store %struct.tm_zone* %0, %struct.tm_zone** %3, align 8
  %7 = call i8* @getenv_TZ()
  store i8* %7, i8** %4, align 8
  %8 = load i8*, i8** %4, align 8
  %9 = icmp ne i8* %8, null
  br i1 %9, label %10, label %23

10:                                               ; preds = %1
  %11 = load %struct.tm_zone*, %struct.tm_zone** %3, align 8
  %12 = getelementptr inbounds %struct.tm_zone, %struct.tm_zone* %11, i32 0, i32 1
  %13 = load i8, i8* %12, align 8
  %14 = sext i8 %13 to i32
  %15 = icmp ne i32 %14, 0
  br i1 %15, label %16, label %29

16:                                               ; preds = %10
  %17 = load %struct.tm_zone*, %struct.tm_zone** %3, align 8
  %18 = getelementptr inbounds %struct.tm_zone, %struct.tm_zone* %17, i32 0, i32 2
  %19 = getelementptr inbounds [0 x i8], [0 x i8]* %18, i64 0, i64 0
  %20 = load i8*, i8** %4, align 8
  %21 = call i32 @strcmp(i8* %19, i8* %20) #13
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %28, label %29

23:                                               ; preds = %1
  %24 = load %struct.tm_zone*, %struct.tm_zone** %3, align 8
  %25 = getelementptr inbounds %struct.tm_zone, %struct.tm_zone* %24, i32 0, i32 1
  %26 = load i8, i8* %25, align 8
  %27 = icmp ne i8 %26, 0
  br i1 %27, label %29, label %28

28:                                               ; preds = %23, %16
  store %struct.tm_zone* inttoptr (i64 1 to %struct.tm_zone*), %struct.tm_zone** %2, align 8
  br label %47

29:                                               ; preds = %23, %16, %10
  %30 = load i8*, i8** %4, align 8
  %31 = call %struct.tm_zone* @tzalloc(i8* %30)
  store %struct.tm_zone* %31, %struct.tm_zone** %5, align 8
  %32 = load %struct.tm_zone*, %struct.tm_zone** %5, align 8
  %33 = icmp ne %struct.tm_zone* %32, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %29
  %35 = load %struct.tm_zone*, %struct.tm_zone** %5, align 8
  store %struct.tm_zone* %35, %struct.tm_zone** %2, align 8
  br label %47

36:                                               ; preds = %29
  %37 = load %struct.tm_zone*, %struct.tm_zone** %3, align 8
  %38 = call zeroext i1 @change_env(%struct.tm_zone* %37)
  br i1 %38, label %45, label %39

39:                                               ; preds = %36
  %40 = call i32* @__errno_location() #15
  %41 = load i32, i32* %40, align 4
  store i32 %41, i32* %6, align 4
  %42 = load %struct.tm_zone*, %struct.tm_zone** %5, align 8
  call void @tzfree(%struct.tm_zone* %42)
  %43 = load i32, i32* %6, align 4
  %44 = call i32* @__errno_location() #15
  store i32 %43, i32* %44, align 4
  store %struct.tm_zone* null, %struct.tm_zone** %2, align 8
  br label %47

45:                                               ; preds = %36
  %46 = load %struct.tm_zone*, %struct.tm_zone** %5, align 8
  store %struct.tm_zone* %46, %struct.tm_zone** %2, align 8
  br label %47

47:                                               ; preds = %45, %39, %34, %28
  %48 = load %struct.tm_zone*, %struct.tm_zone** %2, align 8
  ret %struct.tm_zone* %48
}

; Function Attrs: nounwind
declare dso_local %struct.tm* @localtime_r(i64*, %struct.tm*) #1

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @save_abbr(%struct.tm_zone*, %struct.tm*) #3 {
  %3 = alloca i1, align 1
  %4 = alloca %struct.tm_zone*, align 8
  %5 = alloca %struct.tm*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  store %struct.tm_zone* %0, %struct.tm_zone** %4, align 8
  store %struct.tm* %1, %struct.tm** %5, align 8
  store i8* null, i8** %6, align 8
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1.332, i64 0, i64 0), i8** %7, align 8
  %10 = load %struct.tm*, %struct.tm** %5, align 8
  %11 = getelementptr inbounds %struct.tm, %struct.tm* %10, i32 0, i32 10
  %12 = load i8*, i8** %11, align 8
  store i8* %12, i8** %6, align 8
  %13 = load i8*, i8** %6, align 8
  %14 = icmp ne i8* %13, null
  br i1 %14, label %15, label %26

15:                                               ; preds = %2
  %16 = load %struct.tm*, %struct.tm** %5, align 8
  %17 = bitcast %struct.tm* %16 to i8*
  %18 = load i8*, i8** %6, align 8
  %19 = icmp ule i8* %17, %18
  br i1 %19, label %20, label %27

20:                                               ; preds = %15
  %21 = load i8*, i8** %6, align 8
  %22 = load %struct.tm*, %struct.tm** %5, align 8
  %23 = getelementptr inbounds %struct.tm, %struct.tm* %22, i64 1
  %24 = bitcast %struct.tm* %23 to i8*
  %25 = icmp ult i8* %21, %24
  br i1 %25, label %26, label %27

26:                                               ; preds = %20, %2
  store i1 true, i1* %3, align 1
  br label %125

27:                                               ; preds = %20, %15
  %28 = load i8*, i8** %6, align 8
  %29 = load i8, i8* %28, align 1
  %30 = icmp ne i8 %29, 0
  br i1 %30, label %31, label %121

31:                                               ; preds = %27
  %32 = load %struct.tm_zone*, %struct.tm_zone** %4, align 8
  %33 = getelementptr inbounds %struct.tm_zone, %struct.tm_zone* %32, i32 0, i32 2
  %34 = getelementptr inbounds [0 x i8], [0 x i8]* %33, i64 0, i64 0
  store i8* %34, i8** %7, align 8
  br label %35

35:                                               ; preds = %119, %31
  %36 = load i8*, i8** %7, align 8
  %37 = load i8*, i8** %6, align 8
  %38 = call i32 @strcmp(i8* %36, i8* %37) #13
  %39 = icmp ne i32 %38, 0
  br i1 %39, label %40, label %120

40:                                               ; preds = %35
  %41 = load i8*, i8** %7, align 8
  %42 = load i8, i8* %41, align 1
  %43 = sext i8 %42 to i32
  %44 = icmp ne i32 %43, 0
  br i1 %44, label %98, label %45

45:                                               ; preds = %40
  %46 = load i8*, i8** %7, align 8
  %47 = load %struct.tm_zone*, %struct.tm_zone** %4, align 8
  %48 = getelementptr inbounds %struct.tm_zone, %struct.tm_zone* %47, i32 0, i32 2
  %49 = getelementptr inbounds [0 x i8], [0 x i8]* %48, i64 0, i64 0
  %50 = icmp eq i8* %46, %49
  br i1 %50, label %51, label %57

51:                                               ; preds = %45
  %52 = load %struct.tm_zone*, %struct.tm_zone** %4, align 8
  %53 = getelementptr inbounds %struct.tm_zone, %struct.tm_zone* %52, i32 0, i32 1
  %54 = load i8, i8* %53, align 8
  %55 = sext i8 %54 to i32
  %56 = icmp ne i32 %55, 0
  br i1 %56, label %98, label %57

57:                                               ; preds = %51, %45
  %58 = load i8*, i8** %6, align 8
  %59 = call i64 @strlen(i8* %58) #13
  %60 = add i64 %59, 1
  store i64 %60, i64* %8, align 8
  %61 = load i8*, i8** %7, align 8
  %62 = load %struct.tm_zone*, %struct.tm_zone** %4, align 8
  %63 = getelementptr inbounds %struct.tm_zone, %struct.tm_zone* %62, i32 0, i32 2
  %64 = getelementptr inbounds [0 x i8], [0 x i8]* %63, i64 0, i64 0
  %65 = ptrtoint i8* %61 to i64
  %66 = ptrtoint i8* %64 to i64
  %67 = sub i64 %65, %66
  store i64 %67, i64* %9, align 8
  %68 = load i64, i64* %9, align 8
  %69 = sub i64 -1, %68
  %70 = load i64, i64* %8, align 8
  %71 = icmp ult i64 %69, %70
  br i1 %71, label %72, label %74

72:                                               ; preds = %57
  %73 = call i32* @__errno_location() #15
  store i32 12, i32* %73, align 4
  store i1 false, i1* %3, align 1
  br label %125

74:                                               ; preds = %57
  %75 = load i64, i64* %9, align 8
  %76 = load i64, i64* %8, align 8
  %77 = add i64 %75, %76
  %78 = icmp ult i64 %77, 119
  br i1 %78, label %79, label %83

79:                                               ; preds = %74
  %80 = load i8*, i8** %7, align 8
  %81 = load i8*, i8** %6, align 8
  %82 = load i64, i64* %8, align 8
  call void @extend_abbrs(i8* %80, i8* %81, i64 %82)
  br label %97

83:                                               ; preds = %74
  %84 = load i8*, i8** %6, align 8
  %85 = call %struct.tm_zone* @tzalloc(i8* %84)
  %86 = load %struct.tm_zone*, %struct.tm_zone** %4, align 8
  %87 = getelementptr inbounds %struct.tm_zone, %struct.tm_zone* %86, i32 0, i32 0
  store %struct.tm_zone* %85, %struct.tm_zone** %87, align 8
  store %struct.tm_zone* %85, %struct.tm_zone** %4, align 8
  %88 = load %struct.tm_zone*, %struct.tm_zone** %4, align 8
  %89 = icmp ne %struct.tm_zone* %88, null
  br i1 %89, label %91, label %90

90:                                               ; preds = %83
  store i1 false, i1* %3, align 1
  br label %125

91:                                               ; preds = %83
  %92 = load %struct.tm_zone*, %struct.tm_zone** %4, align 8
  %93 = getelementptr inbounds %struct.tm_zone, %struct.tm_zone* %92, i32 0, i32 1
  store i8 0, i8* %93, align 8
  %94 = load %struct.tm_zone*, %struct.tm_zone** %4, align 8
  %95 = getelementptr inbounds %struct.tm_zone, %struct.tm_zone* %94, i32 0, i32 2
  %96 = getelementptr inbounds [0 x i8], [0 x i8]* %95, i64 0, i64 0
  store i8* %96, i8** %7, align 8
  br label %97

97:                                               ; preds = %91, %79
  br label %120

98:                                               ; preds = %51, %40
  %99 = load i8*, i8** %7, align 8
  %100 = call i64 @strlen(i8* %99) #13
  %101 = add i64 %100, 1
  %102 = load i8*, i8** %7, align 8
  %103 = getelementptr inbounds i8, i8* %102, i64 %101
  store i8* %103, i8** %7, align 8
  %104 = load i8*, i8** %7, align 8
  %105 = load i8, i8* %104, align 1
  %106 = icmp ne i8 %105, 0
  br i1 %106, label %119, label %107

107:                                              ; preds = %98
  %108 = load %struct.tm_zone*, %struct.tm_zone** %4, align 8
  %109 = getelementptr inbounds %struct.tm_zone, %struct.tm_zone* %108, i32 0, i32 0
  %110 = load %struct.tm_zone*, %struct.tm_zone** %109, align 8
  %111 = icmp ne %struct.tm_zone* %110, null
  br i1 %111, label %112, label %119

112:                                              ; preds = %107
  %113 = load %struct.tm_zone*, %struct.tm_zone** %4, align 8
  %114 = getelementptr inbounds %struct.tm_zone, %struct.tm_zone* %113, i32 0, i32 0
  %115 = load %struct.tm_zone*, %struct.tm_zone** %114, align 8
  store %struct.tm_zone* %115, %struct.tm_zone** %4, align 8
  %116 = load %struct.tm_zone*, %struct.tm_zone** %4, align 8
  %117 = getelementptr inbounds %struct.tm_zone, %struct.tm_zone* %116, i32 0, i32 2
  %118 = getelementptr inbounds [0 x i8], [0 x i8]* %117, i64 0, i64 0
  store i8* %118, i8** %7, align 8
  br label %119

119:                                              ; preds = %112, %107, %98
  br label %35

120:                                              ; preds = %97, %35
  br label %121

121:                                              ; preds = %120, %27
  %122 = load i8*, i8** %7, align 8
  %123 = load %struct.tm*, %struct.tm** %5, align 8
  %124 = getelementptr inbounds %struct.tm, %struct.tm* %123, i32 0, i32 10
  store i8* %122, i8** %124, align 8
  store i1 true, i1* %3, align 1
  br label %125

125:                                              ; preds = %121, %90, %72, %26
  %126 = load i1, i1* %3, align 1
  ret i1 %126
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @revert_tz(%struct.tm_zone*) #3 {
  %2 = alloca i1, align 1
  %3 = alloca %struct.tm_zone*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i8, align 1
  store %struct.tm_zone* %0, %struct.tm_zone** %3, align 8
  %6 = load %struct.tm_zone*, %struct.tm_zone** %3, align 8
  %7 = icmp eq %struct.tm_zone* %6, inttoptr (i64 1 to %struct.tm_zone*)
  br i1 %7, label %8, label %9

8:                                                ; preds = %1
  store i1 true, i1* %2, align 1
  br label %26

9:                                                ; preds = %1
  %10 = call i32* @__errno_location() #15
  %11 = load i32, i32* %10, align 4
  store i32 %11, i32* %4, align 4
  %12 = load %struct.tm_zone*, %struct.tm_zone** %3, align 8
  %13 = call zeroext i1 @change_env(%struct.tm_zone* %12)
  %14 = zext i1 %13 to i8
  store i8 %14, i8* %5, align 1
  %15 = load i8, i8* %5, align 1
  %16 = trunc i8 %15 to i1
  br i1 %16, label %20, label %17

17:                                               ; preds = %9
  %18 = call i32* @__errno_location() #15
  %19 = load i32, i32* %18, align 4
  store i32 %19, i32* %4, align 4
  br label %20

20:                                               ; preds = %17, %9
  %21 = load %struct.tm_zone*, %struct.tm_zone** %3, align 8
  call void @tzfree(%struct.tm_zone* %21)
  %22 = load i32, i32* %4, align 4
  %23 = call i32* @__errno_location() #15
  store i32 %22, i32* %23, align 4
  %24 = load i8, i8* %5, align 1
  %25 = trunc i8 %24 to i1
  store i1 %25, i1* %2, align 1
  br label %26

26:                                               ; preds = %20, %8
  %27 = load i1, i1* %2, align 1
  ret i1 %27
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @change_env(%struct.tm_zone*) #3 {
  %2 = alloca i1, align 1
  %3 = alloca %struct.tm_zone*, align 8
  store %struct.tm_zone* %0, %struct.tm_zone** %3, align 8
  %4 = load %struct.tm_zone*, %struct.tm_zone** %3, align 8
  %5 = getelementptr inbounds %struct.tm_zone, %struct.tm_zone* %4, i32 0, i32 1
  %6 = load i8, i8* %5, align 8
  %7 = sext i8 %6 to i32
  %8 = icmp ne i32 %7, 0
  br i1 %8, label %9, label %13

9:                                                ; preds = %1
  %10 = load %struct.tm_zone*, %struct.tm_zone** %3, align 8
  %11 = getelementptr inbounds %struct.tm_zone, %struct.tm_zone* %10, i32 0, i32 2
  %12 = getelementptr inbounds [0 x i8], [0 x i8]* %11, i64 0, i64 0
  br label %14

13:                                               ; preds = %1
  br label %14

14:                                               ; preds = %13, %9
  %15 = phi i8* [ %12, %9 ], [ null, %13 ]
  %16 = call i32 @setenv_TZ(i8* %15)
  %17 = icmp ne i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %14
  store i1 false, i1* %2, align 1
  br label %20

19:                                               ; preds = %14
  call void @tzset() #11
  store i1 true, i1* %2, align 1
  br label %20

20:                                               ; preds = %19, %18
  %21 = load i1, i1* %2, align 1
  ret i1 %21
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @setenv_TZ(i8*) #3 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %3 = load i8*, i8** %2, align 8
  %4 = icmp ne i8* %3, null
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = load i8*, i8** %2, align 8
  %7 = call i32 @setenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.331, i64 0, i64 0), i8* %6, i32 1) #11
  br label %10

8:                                                ; preds = %1
  %9 = call i32 @unsetenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.331, i64 0, i64 0)) #11
  br label %10

10:                                               ; preds = %8, %5
  %11 = phi i32 [ %7, %5 ], [ %9, %8 ]
  ret i32 %11
}

; Function Attrs: nounwind
declare dso_local void @tzset() #1

; Function Attrs: nounwind
declare dso_local i32 @setenv(i8*, i8*, i32) #1

; Function Attrs: nounwind
declare dso_local i32 @unsetenv(i8*) #1

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @getenv_TZ() #3 {
  %1 = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.331, i64 0, i64 0)) #11
  ret i8* %1
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @mktime_z(%struct.tm_zone*, %struct.tm* nonnull) #3 {
  %3 = alloca i64, align 8
  %4 = alloca %struct.tm_zone*, align 8
  %5 = alloca %struct.tm*, align 8
  %6 = alloca %struct.tm_zone*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca %struct.tm, align 8
  store %struct.tm_zone* %0, %struct.tm_zone** %4, align 8
  store %struct.tm* %1, %struct.tm** %5, align 8
  %10 = load %struct.tm_zone*, %struct.tm_zone** %4, align 8
  %11 = icmp ne %struct.tm_zone* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %2
  %13 = load %struct.tm*, %struct.tm** %5, align 8
  %14 = call i64 @timegm(%struct.tm* %13) #11
  store i64 %14, i64* %3, align 8
  br label %46

15:                                               ; preds = %2
  %16 = load %struct.tm_zone*, %struct.tm_zone** %4, align 8
  %17 = call %struct.tm_zone* @set_tz(%struct.tm_zone* %16)
  store %struct.tm_zone* %17, %struct.tm_zone** %6, align 8
  %18 = load %struct.tm_zone*, %struct.tm_zone** %6, align 8
  %19 = icmp ne %struct.tm_zone* %18, null
  br i1 %19, label %20, label %45

20:                                               ; preds = %15
  %21 = load %struct.tm*, %struct.tm** %5, align 8
  %22 = call i64 @mktime(%struct.tm* %21) #11
  store i64 %22, i64* %7, align 8
  store i64 -1, i64* %8, align 8
  %23 = load i64, i64* %7, align 8
  %24 = load i64, i64* %8, align 8
  %25 = icmp ne i64 %23, %24
  br i1 %25, label %33, label %26

26:                                               ; preds = %20
  %27 = call %struct.tm* @localtime_r(i64* %7, %struct.tm* %9) #11
  %28 = icmp ne %struct.tm* %27, null
  br i1 %28, label %29, label %39

29:                                               ; preds = %26
  %30 = load %struct.tm*, %struct.tm** %5, align 8
  %31 = call i32 @equal_tm(%struct.tm* %30, %struct.tm* %9)
  %32 = icmp ne i32 %31, 0
  br i1 %32, label %33, label %39

33:                                               ; preds = %29, %20
  %34 = load %struct.tm_zone*, %struct.tm_zone** %4, align 8
  %35 = load %struct.tm*, %struct.tm** %5, align 8
  %36 = call zeroext i1 @save_abbr(%struct.tm_zone* %34, %struct.tm* %35)
  br i1 %36, label %39, label %37

37:                                               ; preds = %33
  %38 = load i64, i64* %8, align 8
  store i64 %38, i64* %7, align 8
  br label %39

39:                                               ; preds = %37, %33, %29, %26
  %40 = load %struct.tm_zone*, %struct.tm_zone** %6, align 8
  %41 = call zeroext i1 @revert_tz(%struct.tm_zone* %40)
  br i1 %41, label %42, label %44

42:                                               ; preds = %39
  %43 = load i64, i64* %7, align 8
  store i64 %43, i64* %3, align 8
  br label %46

44:                                               ; preds = %39
  br label %45

45:                                               ; preds = %44, %15
  store i64 -1, i64* %3, align 8
  br label %46

46:                                               ; preds = %45, %42, %12
  %47 = load i64, i64* %3, align 8
  ret i64 %47
}

; Function Attrs: nounwind
declare dso_local i64 @timegm(%struct.tm*) #1

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @equal_tm(%struct.tm*, %struct.tm*) #3 {
  %3 = alloca %struct.tm*, align 8
  %4 = alloca %struct.tm*, align 8
  store %struct.tm* %0, %struct.tm** %3, align 8
  store %struct.tm* %1, %struct.tm** %4, align 8
  %5 = load %struct.tm*, %struct.tm** %3, align 8
  %6 = getelementptr inbounds %struct.tm, %struct.tm* %5, i32 0, i32 0
  %7 = load i32, i32* %6, align 8
  %8 = load %struct.tm*, %struct.tm** %4, align 8
  %9 = getelementptr inbounds %struct.tm, %struct.tm* %8, i32 0, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = xor i32 %7, %10
  %12 = load %struct.tm*, %struct.tm** %3, align 8
  %13 = getelementptr inbounds %struct.tm, %struct.tm* %12, i32 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = load %struct.tm*, %struct.tm** %4, align 8
  %16 = getelementptr inbounds %struct.tm, %struct.tm* %15, i32 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = xor i32 %14, %17
  %19 = or i32 %11, %18
  %20 = load %struct.tm*, %struct.tm** %3, align 8
  %21 = getelementptr inbounds %struct.tm, %struct.tm* %20, i32 0, i32 2
  %22 = load i32, i32* %21, align 8
  %23 = load %struct.tm*, %struct.tm** %4, align 8
  %24 = getelementptr inbounds %struct.tm, %struct.tm* %23, i32 0, i32 2
  %25 = load i32, i32* %24, align 8
  %26 = xor i32 %22, %25
  %27 = or i32 %19, %26
  %28 = load %struct.tm*, %struct.tm** %3, align 8
  %29 = getelementptr inbounds %struct.tm, %struct.tm* %28, i32 0, i32 3
  %30 = load i32, i32* %29, align 4
  %31 = load %struct.tm*, %struct.tm** %4, align 8
  %32 = getelementptr inbounds %struct.tm, %struct.tm* %31, i32 0, i32 3
  %33 = load i32, i32* %32, align 4
  %34 = xor i32 %30, %33
  %35 = or i32 %27, %34
  %36 = load %struct.tm*, %struct.tm** %3, align 8
  %37 = getelementptr inbounds %struct.tm, %struct.tm* %36, i32 0, i32 4
  %38 = load i32, i32* %37, align 8
  %39 = load %struct.tm*, %struct.tm** %4, align 8
  %40 = getelementptr inbounds %struct.tm, %struct.tm* %39, i32 0, i32 4
  %41 = load i32, i32* %40, align 8
  %42 = xor i32 %38, %41
  %43 = or i32 %35, %42
  %44 = load %struct.tm*, %struct.tm** %3, align 8
  %45 = getelementptr inbounds %struct.tm, %struct.tm* %44, i32 0, i32 5
  %46 = load i32, i32* %45, align 4
  %47 = load %struct.tm*, %struct.tm** %4, align 8
  %48 = getelementptr inbounds %struct.tm, %struct.tm* %47, i32 0, i32 5
  %49 = load i32, i32* %48, align 4
  %50 = xor i32 %46, %49
  %51 = or i32 %43, %50
  %52 = load %struct.tm*, %struct.tm** %3, align 8
  %53 = getelementptr inbounds %struct.tm, %struct.tm* %52, i32 0, i32 8
  %54 = load i32, i32* %53, align 8
  %55 = load %struct.tm*, %struct.tm** %4, align 8
  %56 = getelementptr inbounds %struct.tm, %struct.tm* %55, i32 0, i32 8
  %57 = load i32, i32* %56, align 8
  %58 = call zeroext i1 @isdst_differ(i32 %54, i32 %57)
  %59 = zext i1 %58 to i32
  %60 = or i32 %51, %59
  %61 = icmp ne i32 %60, 0
  %62 = xor i1 %61, true
  %63 = zext i1 %62 to i32
  ret i32 %63
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @isdst_differ(i32, i32) #3 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  store i32 %1, i32* %4, align 4
  %5 = load i32, i32* %3, align 4
  %6 = icmp ne i32 %5, 0
  %7 = xor i1 %6, true
  %8 = zext i1 %7 to i32
  %9 = load i32, i32* %4, align 4
  %10 = icmp ne i32 %9, 0
  %11 = xor i1 %10, true
  %12 = zext i1 %11 to i32
  %13 = icmp ne i32 %8, %12
  br i1 %13, label %14, label %20

14:                                               ; preds = %2
  %15 = load i32, i32* %3, align 4
  %16 = icmp sle i32 0, %15
  br i1 %16, label %17, label %20

17:                                               ; preds = %14
  %18 = load i32, i32* %4, align 4
  %19 = icmp sle i32 0, %18
  br label %20

20:                                               ; preds = %17, %14, %2
  %21 = phi i1 [ false, %14 ], [ false, %2 ], [ %19, %17 ]
  ret i1 %21
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @c_isalpha(i32) #3 {
  %2 = alloca i1, align 1
  %3 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  %4 = load i32, i32* %3, align 4
  switch i32 %4, label %6 [
    i32 97, label %5
    i32 98, label %5
    i32 99, label %5
    i32 100, label %5
    i32 101, label %5
    i32 102, label %5
    i32 103, label %5
    i32 104, label %5
    i32 105, label %5
    i32 106, label %5
    i32 107, label %5
    i32 108, label %5
    i32 109, label %5
    i32 110, label %5
    i32 111, label %5
    i32 112, label %5
    i32 113, label %5
    i32 114, label %5
    i32 115, label %5
    i32 116, label %5
    i32 117, label %5
    i32 118, label %5
    i32 119, label %5
    i32 120, label %5
    i32 121, label %5
    i32 122, label %5
    i32 65, label %5
    i32 66, label %5
    i32 67, label %5
    i32 68, label %5
    i32 69, label %5
    i32 70, label %5
    i32 71, label %5
    i32 72, label %5
    i32 73, label %5
    i32 74, label %5
    i32 75, label %5
    i32 76, label %5
    i32 77, label %5
    i32 78, label %5
    i32 79, label %5
    i32 80, label %5
    i32 81, label %5
    i32 82, label %5
    i32 83, label %5
    i32 84, label %5
    i32 85, label %5
    i32 86, label %5
    i32 87, label %5
    i32 88, label %5
    i32 89, label %5
    i32 90, label %5
  ]

5:                                                ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1
  store i1 true, i1* %2, align 1
  br label %7

6:                                                ; preds = %1
  store i1 false, i1* %2, align 1
  br label %7

7:                                                ; preds = %6, %5
  %8 = load i1, i1* %2, align 1
  ret i1 %8
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @c_isdigit(i32) #3 {
  %2 = alloca i1, align 1
  %3 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  %4 = load i32, i32* %3, align 4
  switch i32 %4, label %6 [
    i32 48, label %5
    i32 49, label %5
    i32 50, label %5
    i32 51, label %5
    i32 52, label %5
    i32 53, label %5
    i32 54, label %5
    i32 55, label %5
    i32 56, label %5
    i32 57, label %5
  ]

5:                                                ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1, %1
  store i1 true, i1* %2, align 1
  br label %7

6:                                                ; preds = %1
  store i1 false, i1* %2, align 1
  br label %7

7:                                                ; preds = %6, %5
  %8 = load i1, i1* %2, align 1
  ret i1 %8
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @c_isspace(i32) #3 {
  %2 = alloca i1, align 1
  %3 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  %4 = load i32, i32* %3, align 4
  switch i32 %4, label %6 [
    i32 32, label %5
    i32 9, label %5
    i32 10, label %5
    i32 11, label %5
    i32 12, label %5
    i32 13, label %5
  ]

5:                                                ; preds = %1, %1, %1, %1, %1, %1
  store i1 true, i1* %2, align 1
  br label %7

6:                                                ; preds = %1
  store i1 false, i1* %2, align 1
  br label %7

7:                                                ; preds = %6, %5
  %8 = load i1, i1* %2, align 1
  ret i1 %8
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @c_tolower(i32) #3 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  %4 = load i32, i32* %3, align 4
  switch i32 %4, label %9 [
    i32 65, label %5
    i32 66, label %5
    i32 67, label %5
    i32 68, label %5
    i32 69, label %5
    i32 70, label %5
    i32 71, label %5
    i32 72, label %5
    i32 73, label %5
    i32 74, label %5
    i32 75, label %5
    i32 76, label %5
    i32 77, label %5
    i32 78, label %5
    i32 79, label %5
    i32 80, label %5
    i32 81, label %5
    i32 82, label %5
    i32 83, label %5
    i32 84, label %5
    i32 85, label %5
    i32 86, label %5
    i32 87, label %5
    i32 88, label %5
    i32 89, label %5
    i32 90, label %5
  ]

5:                                                ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1
  %6 = load i32, i32* %3, align 4
  %7 = sub nsw i32 %6, 65
  %8 = add nsw i32 %7, 97
  store i32 %8, i32* %2, align 4
  br label %11

9:                                                ; preds = %1
  %10 = load i32, i32* %3, align 4
  store i32 %10, i32* %2, align 4
  br label %11

11:                                               ; preds = %9, %5
  %12 = load i32, i32* %2, align 4
  ret i32 %12
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @c_toupper(i32) #3 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  %4 = load i32, i32* %3, align 4
  switch i32 %4, label %9 [
    i32 97, label %5
    i32 98, label %5
    i32 99, label %5
    i32 100, label %5
    i32 101, label %5
    i32 102, label %5
    i32 103, label %5
    i32 104, label %5
    i32 105, label %5
    i32 106, label %5
    i32 107, label %5
    i32 108, label %5
    i32 109, label %5
    i32 110, label %5
    i32 111, label %5
    i32 112, label %5
    i32 113, label %5
    i32 114, label %5
    i32 115, label %5
    i32 116, label %5
    i32 117, label %5
    i32 118, label %5
    i32 119, label %5
    i32 120, label %5
    i32 121, label %5
    i32 122, label %5
  ]

5:                                                ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1
  %6 = load i32, i32* %3, align 4
  %7 = sub nsw i32 %6, 97
  %8 = add nsw i32 %7, 65
  store i32 %8, i32* %2, align 4
  br label %11

9:                                                ; preds = %1
  %10 = load i32, i32* %3, align 4
  store i32 %10, i32* %2, align 4
  br label %11

11:                                               ; preds = %9, %5
  %12 = load i32, i32* %2, align 4
  ret i32 %12
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @c_strcasecmp(i8*, i8*) #8 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8, align 1
  %9 = alloca i8, align 1
  store i8* %0, i8** %4, align 8
  store i8* %1, i8** %5, align 8
  %10 = load i8*, i8** %4, align 8
  store i8* %10, i8** %6, align 8
  %11 = load i8*, i8** %5, align 8
  store i8* %11, i8** %7, align 8
  %12 = load i8*, i8** %6, align 8
  %13 = load i8*, i8** %7, align 8
  %14 = icmp eq i8* %12, %13
  br i1 %14, label %15, label %16

15:                                               ; preds = %2
  store i32 0, i32* %3, align 4
  br label %49

16:                                               ; preds = %2
  br label %17

17:                                               ; preds = %37, %16
  %18 = load i8*, i8** %6, align 8
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = call i32 @c_tolower(i32 %20)
  %22 = trunc i32 %21 to i8
  store i8 %22, i8* %8, align 1
  %23 = load i8*, i8** %7, align 8
  %24 = load i8, i8* %23, align 1
  %25 = zext i8 %24 to i32
  %26 = call i32 @c_tolower(i32 %25)
  %27 = trunc i32 %26 to i8
  store i8 %27, i8* %9, align 1
  %28 = load i8, i8* %8, align 1
  %29 = zext i8 %28 to i32
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %17
  br label %43

32:                                               ; preds = %17
  %33 = load i8*, i8** %6, align 8
  %34 = getelementptr inbounds i8, i8* %33, i32 1
  store i8* %34, i8** %6, align 8
  %35 = load i8*, i8** %7, align 8
  %36 = getelementptr inbounds i8, i8* %35, i32 1
  store i8* %36, i8** %7, align 8
  br label %37

37:                                               ; preds = %32
  %38 = load i8, i8* %8, align 1
  %39 = zext i8 %38 to i32
  %40 = load i8, i8* %9, align 1
  %41 = zext i8 %40 to i32
  %42 = icmp eq i32 %39, %41
  br i1 %42, label %17, label %43

43:                                               ; preds = %37, %31
  %44 = load i8, i8* %8, align 1
  %45 = zext i8 %44 to i32
  %46 = load i8, i8* %9, align 1
  %47 = zext i8 %46 to i32
  %48 = sub nsw i32 %45, %47
  store i32 %48, i32* %3, align 4
  br label %49

49:                                               ; preds = %43, %15
  %50 = load i32, i32* %3, align 4
  ret i32 %50
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @close_stream(%struct._IO_FILE*) #3 {
  %2 = alloca i32, align 4
  %3 = alloca %struct._IO_FILE*, align 8
  %4 = alloca i8, align 1
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  store %struct._IO_FILE* %0, %struct._IO_FILE** %3, align 8
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %8 = call i64 @__fpending(%struct._IO_FILE* %7) #11
  %9 = icmp ne i64 %8, 0
  %10 = zext i1 %9 to i8
  store i8 %10, i8* %4, align 1
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %12 = call i32 @ferror_unlocked(%struct._IO_FILE* %11) #11
  %13 = icmp ne i32 %12, 0
  %14 = zext i1 %13 to i8
  store i8 %14, i8* %5, align 1
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %16 = call i32 @rpl_fclose(%struct._IO_FILE* %15)
  %17 = icmp ne i32 %16, 0
  %18 = zext i1 %17 to i8
  store i8 %18, i8* %6, align 1
  %19 = load i8, i8* %5, align 1
  %20 = trunc i8 %19 to i1
  br i1 %20, label %31, label %21

21:                                               ; preds = %1
  %22 = load i8, i8* %6, align 1
  %23 = trunc i8 %22 to i1
  br i1 %23, label %24, label %37

24:                                               ; preds = %21
  %25 = load i8, i8* %4, align 1
  %26 = trunc i8 %25 to i1
  br i1 %26, label %31, label %27

27:                                               ; preds = %24
  %28 = call i32* @__errno_location() #15
  %29 = load i32, i32* %28, align 4
  %30 = icmp ne i32 %29, 9
  br i1 %30, label %31, label %37

31:                                               ; preds = %27, %24, %1
  %32 = load i8, i8* %6, align 1
  %33 = trunc i8 %32 to i1
  br i1 %33, label %36, label %34

34:                                               ; preds = %31
  %35 = call i32* @__errno_location() #15
  store i32 0, i32* %35, align 4
  br label %36

36:                                               ; preds = %34, %31
  store i32 -1, i32* %2, align 4
  br label %38

37:                                               ; preds = %27, %21
  store i32 0, i32* %2, align 4
  br label %38

38:                                               ; preds = %37, %36
  %39 = load i32, i32* %2, align 4
  ret i32 %39
}

; Function Attrs: nounwind
declare dso_local i64 @__fpending(%struct._IO_FILE*) #1

; Function Attrs: nounwind
declare dso_local i32 @ferror_unlocked(%struct._IO_FILE*) #1

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @hard_locale(i32) #3 {
  %2 = alloca i1, align 1
  %3 = alloca i32, align 4
  %4 = alloca [257 x i8], align 16
  store i32 %0, i32* %3, align 4
  %5 = load i32, i32* %3, align 4
  %6 = getelementptr inbounds [257 x i8], [257 x i8]* %4, i64 0, i64 0
  %7 = call i32 @setlocale_null_r(i32 %5, i8* %6, i64 257)
  %8 = icmp ne i32 %7, 0
  br i1 %8, label %9, label %10

9:                                                ; preds = %1
  store i1 false, i1* %2, align 1
  br label %21

10:                                               ; preds = %1
  %11 = getelementptr inbounds [257 x i8], [257 x i8]* %4, i64 0, i64 0
  %12 = call i32 @strcmp(i8* %11, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.349, i64 0, i64 0)) #13
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %18, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds [257 x i8], [257 x i8]* %4, i64 0, i64 0
  %16 = call i32 @strcmp(i8* %15, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.350, i64 0, i64 0)) #13
  %17 = icmp eq i32 %16, 0
  br label %18

18:                                               ; preds = %14, %10
  %19 = phi i1 [ true, %10 ], [ %17, %14 ]
  %20 = xor i1 %19, true
  store i1 %20, i1* %2, align 1
  br label %21

21:                                               ; preds = %18, %9
  %22 = load i1, i1* %2, align 1
  ret i1 %22
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @locale_charset() #3 {
  %1 = alloca i8*, align 8
  %2 = call i8* @nl_langinfo(i32 14) #11
  store i8* %2, i8** %1, align 8
  %3 = load i8*, i8** %1, align 8
  %4 = icmp eq i8* %3, null
  br i1 %4, label %5, label %6

5:                                                ; preds = %0
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.353, i64 0, i64 0), i8** %1, align 8
  br label %6

6:                                                ; preds = %5, %0
  %7 = load i8*, i8** %1, align 8
  %8 = getelementptr inbounds i8, i8* %7, i64 0
  %9 = load i8, i8* %8, align 1
  %10 = sext i8 %9 to i32
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %13

12:                                               ; preds = %6
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.354, i64 0, i64 0), i8** %1, align 8
  br label %13

13:                                               ; preds = %12, %6
  %14 = load i8*, i8** %1, align 8
  ret i8* %14
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @nstrftime(i8*, i64, i8*, %struct.tm*, %struct.tm_zone*, i32) #3 {
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i8*, align 8
  %10 = alloca %struct.tm*, align 8
  %11 = alloca %struct.tm_zone*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i8, align 1
  store i8* %0, i8** %7, align 8
  store i64 %1, i64* %8, align 8
  store i8* %2, i8** %9, align 8
  store %struct.tm* %3, %struct.tm** %10, align 8
  store %struct.tm_zone* %4, %struct.tm_zone** %11, align 8
  store i32 %5, i32* %12, align 4
  store i8 0, i8* %13, align 1
  %14 = load i8*, i8** %7, align 8
  %15 = load i64, i64* %8, align 8
  %16 = load i8*, i8** %9, align 8
  %17 = load %struct.tm*, %struct.tm** %10, align 8
  %18 = load %struct.tm_zone*, %struct.tm_zone** %11, align 8
  %19 = load i32, i32* %12, align 4
  %20 = call i64 @__strftime_internal.357(i8* %14, i64 %15, i8* %16, %struct.tm* %17, i1 zeroext false, i32 0, i32 -1, i8* %13, %struct.tm_zone* %18, i32 %19)
  ret i64 %20
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @__strftime_internal.357(i8*, i64, i8*, %struct.tm*, i1 zeroext, i32, i32, i8*, %struct.tm_zone*, i32) #3 {
  %11 = alloca i64, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i64, align 8
  %14 = alloca i8*, align 8
  %15 = alloca %struct.tm*, align 8
  %16 = alloca i8, align 1
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i8*, align 8
  %20 = alloca %struct.tm_zone*, align 8
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i8*, align 8
  %24 = alloca i64, align 8
  %25 = alloca i8*, align 8
  %26 = alloca i8*, align 8
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca i32, align 4
  %31 = alloca i32, align 4
  %32 = alloca i8, align 1
  %33 = alloca i8, align 1
  %34 = alloca i32, align 4
  %35 = alloca i8*, align 8
  %36 = alloca i8*, align 8
  %37 = alloca [23 x i8], align 16
  %38 = alloca i8, align 1
  %39 = alloca i8, align 1
  %40 = alloca i64, align 8
  %41 = alloca i8, align 1
  %42 = alloca i32, align 4
  %43 = alloca i32, align 4
  %44 = alloca i64, align 8
  %45 = alloca i64, align 8
  %46 = alloca i64, align 8
  %47 = alloca i64, align 8
  %48 = alloca i64, align 8
  %49 = alloca i64, align 8
  %50 = alloca i64, align 8
  %51 = alloca i64, align 8
  %52 = alloca i64, align 8
  %53 = alloca i64, align 8
  %54 = alloca i64, align 8
  %55 = alloca i64, align 8
  %56 = alloca i64, align 8
  %57 = alloca [5 x i8], align 1
  %58 = alloca i8*, align 8
  %59 = alloca [1024 x i8], align 16
  %60 = alloca i64, align 8
  %61 = alloca i64, align 8
  %62 = alloca i64, align 8
  %63 = alloca i64, align 8
  %64 = alloca i64, align 8
  %65 = alloca i8, align 1
  %66 = alloca i8, align 1
  %67 = alloca i32, align 4
  %68 = alloca i8, align 1
  %69 = alloca i32, align 4
  %70 = alloca i32, align 4
  %71 = alloca i32, align 4
  %72 = alloca i64, align 8
  %73 = alloca i64, align 8
  %74 = alloca i64, align 8
  %75 = alloca i64, align 8
  %76 = alloca i64, align 8
  %77 = alloca i64, align 8
  %78 = alloca i64, align 8
  %79 = alloca i64, align 8
  %80 = alloca i32, align 4
  %81 = alloca i32, align 4
  %82 = alloca i32, align 4
  %83 = alloca i32, align 4
  %84 = alloca i64, align 8
  %85 = alloca i64, align 8
  %86 = alloca i64, align 8
  %87 = alloca i64, align 8
  %88 = alloca i64, align 8
  %89 = alloca i64, align 8
  %90 = alloca i64, align 8
  %91 = alloca i64, align 8
  %92 = alloca i64, align 8
  %93 = alloca i64, align 8
  %94 = alloca i64, align 8
  %95 = alloca i64, align 8
  %96 = alloca %struct.tm, align 8
  %97 = alloca i64, align 8
  %98 = alloca i32, align 4
  %99 = alloca i64, align 8
  %100 = alloca i64, align 8
  %101 = alloca i64, align 8
  %102 = alloca i64, align 8
  %103 = alloca i32, align 4
  %104 = alloca i32, align 4
  %105 = alloca i32, align 4
  %106 = alloca i32, align 4
  %107 = alloca i32, align 4
  %108 = alloca i32, align 4
  %109 = alloca i64, align 8
  %110 = alloca i64, align 8
  %111 = alloca i64, align 8
  %112 = alloca i64, align 8
  %113 = alloca i32, align 4
  %114 = alloca i32, align 4
  %115 = alloca i32, align 4
  %116 = alloca i32, align 4
  %117 = alloca i32, align 4
  %118 = alloca i64, align 8
  %119 = alloca i64, align 8
  %120 = alloca i64, align 8
  %121 = alloca i64, align 8
  store i8* %0, i8** %12, align 8
  store i64 %1, i64* %13, align 8
  store i8* %2, i8** %14, align 8
  store %struct.tm* %3, %struct.tm** %15, align 8
  %122 = zext i1 %4 to i8
  store i8 %122, i8* %16, align 1
  store i32 %5, i32* %17, align 4
  store i32 %6, i32* %18, align 4
  store i8* %7, i8** %19, align 8
  store %struct.tm_zone* %8, %struct.tm_zone** %20, align 8
  store i32 %9, i32* %21, align 4
  %123 = load %struct.tm*, %struct.tm** %15, align 8
  %124 = getelementptr inbounds %struct.tm, %struct.tm* %123, i32 0, i32 2
  %125 = load i32, i32* %124, align 8
  store i32 %125, i32* %22, align 4
  store i64 0, i64* %24, align 8
  %126 = load i8*, i8** %12, align 8
  store i8* %126, i8** %25, align 8
  store i8* null, i8** %23, align 8
  %127 = load %struct.tm*, %struct.tm** %15, align 8
  %128 = getelementptr inbounds %struct.tm, %struct.tm* %127, i32 0, i32 10
  %129 = load i8*, i8** %128, align 8
  store i8* %129, i8** %23, align 8
  %130 = load i8*, i8** %23, align 8
  %131 = icmp ne i8* %130, null
  br i1 %131, label %133, label %132

132:                                              ; preds = %10
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.358, i64 0, i64 0), i8** %23, align 8
  br label %133

133:                                              ; preds = %132, %10
  %134 = load i32, i32* %22, align 4
  %135 = icmp sgt i32 %134, 12
  br i1 %135, label %136, label %139

136:                                              ; preds = %133
  %137 = load i32, i32* %22, align 4
  %138 = sub nsw i32 %137, 12
  store i32 %138, i32* %22, align 4
  br label %144

139:                                              ; preds = %133
  %140 = load i32, i32* %22, align 4
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %143

142:                                              ; preds = %139
  store i32 12, i32* %22, align 4
  br label %143

143:                                              ; preds = %142, %139
  br label %144

144:                                              ; preds = %143, %136
  %145 = load i8*, i8** %14, align 8
  store i8* %145, i8** %26, align 8
  br label %146

146:                                              ; preds = %2671, %144
  %147 = load i8*, i8** %26, align 8
  %148 = load i8, i8* %147, align 1
  %149 = sext i8 %148 to i32
  %150 = icmp ne i32 %149, 0
  br i1 %150, label %151, label %2674

151:                                              ; preds = %146
  store i32 0, i32* %27, align 4
  store i32 0, i32* %29, align 4
  store i8 0, i8* %38, align 1
  %152 = load i8, i8* %16, align 1
  %153 = trunc i8 %152 to i1
  %154 = zext i1 %153 to i8
  store i8 %154, i8* %39, align 1
  store i8 0, i8* %41, align 1
  %155 = load i8*, i8** %26, align 8
  %156 = load i8, i8* %155, align 1
  %157 = sext i8 %156 to i32
  %158 = icmp ne i32 %157, 37
  br i1 %158, label %159, label %228

159:                                              ; preds = %151
  br label %160

160:                                              ; preds = %159
  store i64 1, i64* %44, align 8
  %161 = load i32, i32* %27, align 4
  %162 = icmp eq i32 %161, 45
  br i1 %162, label %166, label %163

163:                                              ; preds = %160
  %164 = load i32, i32* %18, align 4
  %165 = icmp slt i32 %164, 0
  br i1 %165, label %166, label %167

166:                                              ; preds = %163, %160
  br label %169

167:                                              ; preds = %163
  %168 = load i32, i32* %18, align 4
  br label %169

169:                                              ; preds = %167, %166
  %170 = phi i32 [ 0, %166 ], [ %168, %167 ]
  %171 = sext i32 %170 to i64
  store i64 %171, i64* %45, align 8
  %172 = load i64, i64* %44, align 8
  %173 = load i64, i64* %45, align 8
  %174 = icmp ult i64 %172, %173
  br i1 %174, label %175, label %177

175:                                              ; preds = %169
  %176 = load i64, i64* %45, align 8
  br label %179

177:                                              ; preds = %169
  %178 = load i64, i64* %44, align 8
  br label %179

179:                                              ; preds = %177, %175
  %180 = phi i64 [ %176, %175 ], [ %178, %177 ]
  store i64 %180, i64* %46, align 8
  %181 = load i64, i64* %46, align 8
  %182 = load i64, i64* %13, align 8
  %183 = load i64, i64* %24, align 8
  %184 = sub i64 %182, %183
  %185 = icmp uge i64 %181, %184
  br i1 %185, label %186, label %187

186:                                              ; preds = %179
  store i64 0, i64* %11, align 8
  br label %2684

187:                                              ; preds = %179
  %188 = load i8*, i8** %25, align 8
  %189 = icmp ne i8* %188, null
  br i1 %189, label %190, label %223

190:                                              ; preds = %187
  %191 = load i64, i64* %44, align 8
  %192 = load i64, i64* %45, align 8
  %193 = icmp ult i64 %191, %192
  br i1 %193, label %194, label %216

194:                                              ; preds = %190
  %195 = load i64, i64* %45, align 8
  %196 = load i64, i64* %44, align 8
  %197 = sub i64 %195, %196
  store i64 %197, i64* %47, align 8
  %198 = load i32, i32* %27, align 4
  %199 = icmp eq i32 %198, 48
  br i1 %199, label %203, label %200

200:                                              ; preds = %194
  %201 = load i32, i32* %27, align 4
  %202 = icmp eq i32 %201, 43
  br i1 %202, label %203, label %209

203:                                              ; preds = %200, %194
  %204 = load i8*, i8** %25, align 8
  %205 = load i64, i64* %47, align 8
  call void @llvm.memset.p0i8.i64(i8* align 1 %204, i8 48, i64 %205, i1 false)
  %206 = load i64, i64* %47, align 8
  %207 = load i8*, i8** %25, align 8
  %208 = getelementptr inbounds i8, i8* %207, i64 %206
  store i8* %208, i8** %25, align 8
  br label %215

209:                                              ; preds = %200
  %210 = load i8*, i8** %25, align 8
  %211 = load i64, i64* %47, align 8
  call void @llvm.memset.p0i8.i64(i8* align 1 %210, i8 32, i64 %211, i1 false)
  %212 = load i64, i64* %47, align 8
  %213 = load i8*, i8** %25, align 8
  %214 = getelementptr inbounds i8, i8* %213, i64 %212
  store i8* %214, i8** %25, align 8
  br label %215

215:                                              ; preds = %209, %203
  br label %216

216:                                              ; preds = %215, %190
  %217 = load i8*, i8** %26, align 8
  %218 = load i8, i8* %217, align 1
  %219 = load i8*, i8** %25, align 8
  store i8 %218, i8* %219, align 1
  %220 = load i64, i64* %44, align 8
  %221 = load i8*, i8** %25, align 8
  %222 = getelementptr inbounds i8, i8* %221, i64 %220
  store i8* %222, i8** %25, align 8
  br label %223

223:                                              ; preds = %216, %187
  %224 = load i64, i64* %46, align 8
  %225 = load i64, i64* %24, align 8
  %226 = add i64 %225, %224
  store i64 %226, i64* %24, align 8
  br label %227

227:                                              ; preds = %223
  br label %2671

228:                                              ; preds = %151
  br label %229

229:                                              ; preds = %239, %238, %234, %228
  %230 = load i8*, i8** %26, align 8
  %231 = getelementptr inbounds i8, i8* %230, i32 1
  store i8* %231, i8** %26, align 8
  %232 = load i8, i8* %231, align 1
  %233 = sext i8 %232 to i32
  switch i32 %233, label %240 [
    i32 95, label %234
    i32 45, label %234
    i32 43, label %234
    i32 48, label %234
    i32 94, label %238
    i32 35, label %239
  ]

234:                                              ; preds = %229, %229, %229, %229
  %235 = load i8*, i8** %26, align 8
  %236 = load i8, i8* %235, align 1
  %237 = sext i8 %236 to i32
  store i32 %237, i32* %27, align 4
  br label %229

238:                                              ; preds = %229
  store i8 1, i8* %39, align 1
  br label %229

239:                                              ; preds = %229
  store i8 1, i8* %41, align 1
  br label %229

240:                                              ; preds = %229
  br label %241

241:                                              ; preds = %240
  br label %242

242:                                              ; preds = %241
  %243 = load i8*, i8** %26, align 8
  %244 = load i8, i8* %243, align 1
  %245 = sext i8 %244 to i32
  %246 = sub i32 %245, 48
  %247 = icmp ule i32 %246, 9
  br i1 %247, label %248, label %892

248:                                              ; preds = %242
  store i32 0, i32* %18, align 4
  br label %249

249:                                              ; preds = %885, %248
  br i1 false, label %250, label %375

250:                                              ; preds = %249
  br i1 false, label %313, label %251

251:                                              ; preds = %250
  br i1 false, label %252, label %282

252:                                              ; preds = %251
  %253 = load i32, i32* %18, align 4
  %254 = icmp slt i32 %253, 0
  br i1 %254, label %255, label %263

255:                                              ; preds = %252
  br i1 true, label %256, label %259

256:                                              ; preds = %255
  %257 = load i32, i32* %18, align 4
  %258 = icmp slt i32 %257, 12
  br i1 %258, label %303, label %308

259:                                              ; preds = %255
  %260 = load i32, i32* %18, align 4
  %261 = sub nsw i32 -1, %260
  %262 = icmp sle i32 -12, %261
  br i1 %262, label %303, label %308

263:                                              ; preds = %252
  br i1 true, label %264, label %265

264:                                              ; preds = %263
  br i1 false, label %266, label %279

265:                                              ; preds = %263
  br i1 false, label %266, label %279

266:                                              ; preds = %265, %264
  br i1 false, label %267, label %279

267:                                              ; preds = %266
  br i1 true, label %268, label %272

268:                                              ; preds = %267
  %269 = load i32, i32* %18, align 4
  %270 = add nsw i32 %269, -128
  %271 = icmp slt i32 0, %270
  br i1 %271, label %303, label %308

272:                                              ; preds = %267
  %273 = load i32, i32* %18, align 4
  %274 = icmp slt i32 0, %273
  br i1 %274, label %275, label %308

275:                                              ; preds = %272
  %276 = load i32, i32* %18, align 4
  %277 = sub nsw i32 %276, 1
  %278 = icmp slt i32 127, %277
  br i1 %278, label %303, label %308

279:                                              ; preds = %266, %265, %264
  %280 = load i32, i32* %18, align 4
  %281 = icmp slt i32 -12, %280
  br i1 %281, label %303, label %308

282:                                              ; preds = %251
  br i1 false, label %283, label %284

283:                                              ; preds = %282
  br i1 false, label %303, label %308

284:                                              ; preds = %282
  %285 = load i32, i32* %18, align 4
  %286 = icmp slt i32 %285, 0
  br i1 %286, label %287, label %300

287:                                              ; preds = %284
  br i1 true, label %288, label %289

288:                                              ; preds = %287
  br i1 false, label %290, label %296

289:                                              ; preds = %287
  br i1 false, label %290, label %296

290:                                              ; preds = %289, %288
  %291 = load i32, i32* %18, align 4
  %292 = icmp eq i32 %291, -1
  br i1 %292, label %293, label %296

293:                                              ; preds = %290
  br i1 true, label %294, label %295

294:                                              ; preds = %293
  br i1 false, label %303, label %308

295:                                              ; preds = %293
  br i1 false, label %303, label %308

296:                                              ; preds = %290, %289, %288
  %297 = load i32, i32* %18, align 4
  %298 = sdiv i32 -128, %297
  %299 = icmp slt i32 %298, 10
  br i1 %299, label %303, label %308

300:                                              ; preds = %284
  %301 = load i32, i32* %18, align 4
  %302 = icmp slt i32 12, %301
  br i1 %302, label %303, label %308

303:                                              ; preds = %300, %296, %295, %294, %283, %279, %275, %268, %259, %256
  %304 = load i32, i32* %18, align 4
  %305 = mul i32 %304, 10
  %306 = trunc i32 %305 to i8
  %307 = sext i8 %306 to i32
  store i32 %307, i32* %18, align 4
  br i1 true, label %881, label %872

308:                                              ; preds = %300, %296, %295, %294, %283, %279, %275, %272, %268, %259, %256
  %309 = load i32, i32* %18, align 4
  %310 = mul i32 %309, 10
  %311 = trunc i32 %310 to i8
  %312 = sext i8 %311 to i32
  store i32 %312, i32* %18, align 4
  br i1 false, label %881, label %872

313:                                              ; preds = %250
  br i1 false, label %314, label %344

314:                                              ; preds = %313
  %315 = load i32, i32* %18, align 4
  %316 = icmp slt i32 %315, 0
  br i1 %316, label %317, label %325

317:                                              ; preds = %314
  br i1 true, label %318, label %321

318:                                              ; preds = %317
  %319 = load i32, i32* %18, align 4
  %320 = icmp slt i32 %319, 25
  br i1 %320, label %365, label %370

321:                                              ; preds = %317
  %322 = load i32, i32* %18, align 4
  %323 = sub nsw i32 -1, %322
  %324 = icmp sle i32 -25, %323
  br i1 %324, label %365, label %370

325:                                              ; preds = %314
  br i1 true, label %326, label %327

326:                                              ; preds = %325
  br i1 false, label %328, label %341

327:                                              ; preds = %325
  br i1 false, label %328, label %341

328:                                              ; preds = %327, %326
  br i1 false, label %329, label %341

329:                                              ; preds = %328
  br i1 true, label %330, label %334

330:                                              ; preds = %329
  %331 = load i32, i32* %18, align 4
  %332 = add nsw i32 %331, 0
  %333 = icmp slt i32 0, %332
  br i1 %333, label %365, label %370

334:                                              ; preds = %329
  %335 = load i32, i32* %18, align 4
  %336 = icmp slt i32 0, %335
  br i1 %336, label %337, label %370

337:                                              ; preds = %334
  %338 = load i32, i32* %18, align 4
  %339 = sub nsw i32 %338, 1
  %340 = icmp slt i32 -1, %339
  br i1 %340, label %365, label %370

341:                                              ; preds = %328, %327, %326
  %342 = load i32, i32* %18, align 4
  %343 = icmp slt i32 0, %342
  br i1 %343, label %365, label %370

344:                                              ; preds = %313
  br i1 false, label %345, label %346

345:                                              ; preds = %344
  br i1 false, label %365, label %370

346:                                              ; preds = %344
  %347 = load i32, i32* %18, align 4
  %348 = icmp slt i32 %347, 0
  br i1 %348, label %349, label %362

349:                                              ; preds = %346
  br i1 true, label %350, label %351

350:                                              ; preds = %349
  br i1 false, label %352, label %358

351:                                              ; preds = %349
  br i1 false, label %352, label %358

352:                                              ; preds = %351, %350
  %353 = load i32, i32* %18, align 4
  %354 = icmp eq i32 %353, -1
  br i1 %354, label %355, label %358

355:                                              ; preds = %352
  br i1 true, label %356, label %357

356:                                              ; preds = %355
  br i1 true, label %365, label %370

357:                                              ; preds = %355
  br i1 true, label %365, label %370

358:                                              ; preds = %352, %351, %350
  %359 = load i32, i32* %18, align 4
  %360 = sdiv i32 0, %359
  %361 = icmp slt i32 %360, 10
  br i1 %361, label %365, label %370

362:                                              ; preds = %346
  %363 = load i32, i32* %18, align 4
  %364 = icmp slt i32 25, %363
  br i1 %364, label %365, label %370

365:                                              ; preds = %362, %358, %357, %356, %345, %341, %337, %330, %321, %318
  %366 = load i32, i32* %18, align 4
  %367 = mul i32 %366, 10
  %368 = trunc i32 %367 to i8
  %369 = zext i8 %368 to i32
  store i32 %369, i32* %18, align 4
  br i1 true, label %881, label %872

370:                                              ; preds = %362, %358, %357, %356, %345, %341, %337, %334, %330, %321, %318
  %371 = load i32, i32* %18, align 4
  %372 = mul i32 %371, 10
  %373 = trunc i32 %372 to i8
  %374 = zext i8 %373 to i32
  store i32 %374, i32* %18, align 4
  br i1 false, label %881, label %872

375:                                              ; preds = %249
  br i1 false, label %376, label %501

376:                                              ; preds = %375
  br i1 false, label %439, label %377

377:                                              ; preds = %376
  br i1 false, label %378, label %408

378:                                              ; preds = %377
  %379 = load i32, i32* %18, align 4
  %380 = icmp slt i32 %379, 0
  br i1 %380, label %381, label %389

381:                                              ; preds = %378
  br i1 true, label %382, label %385

382:                                              ; preds = %381
  %383 = load i32, i32* %18, align 4
  %384 = icmp slt i32 %383, 3276
  br i1 %384, label %429, label %434

385:                                              ; preds = %381
  %386 = load i32, i32* %18, align 4
  %387 = sub nsw i32 -1, %386
  %388 = icmp sle i32 -3276, %387
  br i1 %388, label %429, label %434

389:                                              ; preds = %378
  br i1 true, label %390, label %391

390:                                              ; preds = %389
  br i1 false, label %392, label %405

391:                                              ; preds = %389
  br i1 false, label %392, label %405

392:                                              ; preds = %391, %390
  br i1 false, label %393, label %405

393:                                              ; preds = %392
  br i1 true, label %394, label %398

394:                                              ; preds = %393
  %395 = load i32, i32* %18, align 4
  %396 = add nsw i32 %395, -32768
  %397 = icmp slt i32 0, %396
  br i1 %397, label %429, label %434

398:                                              ; preds = %393
  %399 = load i32, i32* %18, align 4
  %400 = icmp slt i32 0, %399
  br i1 %400, label %401, label %434

401:                                              ; preds = %398
  %402 = load i32, i32* %18, align 4
  %403 = sub nsw i32 %402, 1
  %404 = icmp slt i32 32767, %403
  br i1 %404, label %429, label %434

405:                                              ; preds = %392, %391, %390
  %406 = load i32, i32* %18, align 4
  %407 = icmp slt i32 -3276, %406
  br i1 %407, label %429, label %434

408:                                              ; preds = %377
  br i1 false, label %409, label %410

409:                                              ; preds = %408
  br i1 false, label %429, label %434

410:                                              ; preds = %408
  %411 = load i32, i32* %18, align 4
  %412 = icmp slt i32 %411, 0
  br i1 %412, label %413, label %426

413:                                              ; preds = %410
  br i1 true, label %414, label %415

414:                                              ; preds = %413
  br i1 false, label %416, label %422

415:                                              ; preds = %413
  br i1 false, label %416, label %422

416:                                              ; preds = %415, %414
  %417 = load i32, i32* %18, align 4
  %418 = icmp eq i32 %417, -1
  br i1 %418, label %419, label %422

419:                                              ; preds = %416
  br i1 true, label %420, label %421

420:                                              ; preds = %419
  br i1 false, label %429, label %434

421:                                              ; preds = %419
  br i1 false, label %429, label %434

422:                                              ; preds = %416, %415, %414
  %423 = load i32, i32* %18, align 4
  %424 = sdiv i32 -32768, %423
  %425 = icmp slt i32 %424, 10
  br i1 %425, label %429, label %434

426:                                              ; preds = %410
  %427 = load i32, i32* %18, align 4
  %428 = icmp slt i32 3276, %427
  br i1 %428, label %429, label %434

429:                                              ; preds = %426, %422, %421, %420, %409, %405, %401, %394, %385, %382
  %430 = load i32, i32* %18, align 4
  %431 = mul i32 %430, 10
  %432 = trunc i32 %431 to i16
  %433 = sext i16 %432 to i32
  store i32 %433, i32* %18, align 4
  br i1 true, label %881, label %872

434:                                              ; preds = %426, %422, %421, %420, %409, %405, %401, %398, %394, %385, %382
  %435 = load i32, i32* %18, align 4
  %436 = mul i32 %435, 10
  %437 = trunc i32 %436 to i16
  %438 = sext i16 %437 to i32
  store i32 %438, i32* %18, align 4
  br i1 false, label %881, label %872

439:                                              ; preds = %376
  br i1 false, label %440, label %470

440:                                              ; preds = %439
  %441 = load i32, i32* %18, align 4
  %442 = icmp slt i32 %441, 0
  br i1 %442, label %443, label %451

443:                                              ; preds = %440
  br i1 true, label %444, label %447

444:                                              ; preds = %443
  %445 = load i32, i32* %18, align 4
  %446 = icmp slt i32 %445, 6553
  br i1 %446, label %491, label %496

447:                                              ; preds = %443
  %448 = load i32, i32* %18, align 4
  %449 = sub nsw i32 -1, %448
  %450 = icmp sle i32 -6553, %449
  br i1 %450, label %491, label %496

451:                                              ; preds = %440
  br i1 true, label %452, label %453

452:                                              ; preds = %451
  br i1 false, label %454, label %467

453:                                              ; preds = %451
  br i1 false, label %454, label %467

454:                                              ; preds = %453, %452
  br i1 false, label %455, label %467

455:                                              ; preds = %454
  br i1 true, label %456, label %460

456:                                              ; preds = %455
  %457 = load i32, i32* %18, align 4
  %458 = add nsw i32 %457, 0
  %459 = icmp slt i32 0, %458
  br i1 %459, label %491, label %496

460:                                              ; preds = %455
  %461 = load i32, i32* %18, align 4
  %462 = icmp slt i32 0, %461
  br i1 %462, label %463, label %496

463:                                              ; preds = %460
  %464 = load i32, i32* %18, align 4
  %465 = sub nsw i32 %464, 1
  %466 = icmp slt i32 -1, %465
  br i1 %466, label %491, label %496

467:                                              ; preds = %454, %453, %452
  %468 = load i32, i32* %18, align 4
  %469 = icmp slt i32 0, %468
  br i1 %469, label %491, label %496

470:                                              ; preds = %439
  br i1 false, label %471, label %472

471:                                              ; preds = %470
  br i1 false, label %491, label %496

472:                                              ; preds = %470
  %473 = load i32, i32* %18, align 4
  %474 = icmp slt i32 %473, 0
  br i1 %474, label %475, label %488

475:                                              ; preds = %472
  br i1 true, label %476, label %477

476:                                              ; preds = %475
  br i1 false, label %478, label %484

477:                                              ; preds = %475
  br i1 false, label %478, label %484

478:                                              ; preds = %477, %476
  %479 = load i32, i32* %18, align 4
  %480 = icmp eq i32 %479, -1
  br i1 %480, label %481, label %484

481:                                              ; preds = %478
  br i1 true, label %482, label %483

482:                                              ; preds = %481
  br i1 true, label %491, label %496

483:                                              ; preds = %481
  br i1 true, label %491, label %496

484:                                              ; preds = %478, %477, %476
  %485 = load i32, i32* %18, align 4
  %486 = sdiv i32 0, %485
  %487 = icmp slt i32 %486, 10
  br i1 %487, label %491, label %496

488:                                              ; preds = %472
  %489 = load i32, i32* %18, align 4
  %490 = icmp slt i32 6553, %489
  br i1 %490, label %491, label %496

491:                                              ; preds = %488, %484, %483, %482, %471, %467, %463, %456, %447, %444
  %492 = load i32, i32* %18, align 4
  %493 = mul i32 %492, 10
  %494 = trunc i32 %493 to i16
  %495 = zext i16 %494 to i32
  store i32 %495, i32* %18, align 4
  br i1 true, label %881, label %872

496:                                              ; preds = %488, %484, %483, %482, %471, %467, %463, %460, %456, %447, %444
  %497 = load i32, i32* %18, align 4
  %498 = mul i32 %497, 10
  %499 = trunc i32 %498 to i16
  %500 = zext i16 %499 to i32
  store i32 %500, i32* %18, align 4
  br i1 false, label %881, label %872

501:                                              ; preds = %375
  br i1 true, label %502, label %613

502:                                              ; preds = %501
  br i1 true, label %503, label %555

503:                                              ; preds = %502
  br i1 false, label %504, label %531

504:                                              ; preds = %503
  %505 = load i32, i32* %18, align 4
  %506 = icmp slt i32 %505, 0
  br i1 %506, label %507, label %515

507:                                              ; preds = %504
  br i1 true, label %508, label %511

508:                                              ; preds = %507
  %509 = load i32, i32* %18, align 4
  %510 = icmp slt i32 %509, 214748364
  br i1 %510, label %549, label %552

511:                                              ; preds = %507
  %512 = load i32, i32* %18, align 4
  %513 = sub nsw i32 -1, %512
  %514 = icmp sle i32 -214748364, %513
  br i1 %514, label %549, label %552

515:                                              ; preds = %504
  br i1 false, label %516, label %528

516:                                              ; preds = %515
  br i1 true, label %517, label %521

517:                                              ; preds = %516
  %518 = load i32, i32* %18, align 4
  %519 = add nsw i32 %518, -2147483648
  %520 = icmp slt i32 0, %519
  br i1 %520, label %549, label %552

521:                                              ; preds = %516
  %522 = load i32, i32* %18, align 4
  %523 = icmp slt i32 0, %522
  br i1 %523, label %524, label %552

524:                                              ; preds = %521
  %525 = load i32, i32* %18, align 4
  %526 = sub nsw i32 %525, 1
  %527 = icmp slt i32 2147483647, %526
  br i1 %527, label %549, label %552

528:                                              ; preds = %515
  %529 = load i32, i32* %18, align 4
  %530 = icmp slt i32 -214748364, %529
  br i1 %530, label %549, label %552

531:                                              ; preds = %503
  br i1 false, label %532, label %533

532:                                              ; preds = %531
  br i1 false, label %549, label %552

533:                                              ; preds = %531
  %534 = load i32, i32* %18, align 4
  %535 = icmp slt i32 %534, 0
  br i1 %535, label %536, label %546

536:                                              ; preds = %533
  %537 = load i32, i32* %18, align 4
  %538 = icmp eq i32 %537, -1
  br i1 %538, label %539, label %542

539:                                              ; preds = %536
  br i1 true, label %540, label %541

540:                                              ; preds = %539
  br i1 false, label %549, label %552

541:                                              ; preds = %539
  br i1 false, label %549, label %552

542:                                              ; preds = %536
  %543 = load i32, i32* %18, align 4
  %544 = sdiv i32 -2147483648, %543
  %545 = icmp slt i32 %544, 10
  br i1 %545, label %549, label %552

546:                                              ; preds = %533
  %547 = load i32, i32* %18, align 4
  %548 = icmp slt i32 214748364, %547
  br i1 %548, label %549, label %552

549:                                              ; preds = %546, %542, %541, %540, %532, %528, %524, %517, %511, %508
  %550 = load i32, i32* %18, align 4
  %551 = mul i32 %550, 10
  store i32 %551, i32* %18, align 4
  br i1 true, label %881, label %872

552:                                              ; preds = %546, %542, %541, %540, %532, %528, %524, %521, %517, %511, %508
  %553 = load i32, i32* %18, align 4
  %554 = mul i32 %553, 10
  store i32 %554, i32* %18, align 4
  br i1 false, label %881, label %872

555:                                              ; preds = %502
  br i1 false, label %556, label %586

556:                                              ; preds = %555
  %557 = load i32, i32* %18, align 4
  %558 = icmp slt i32 %557, 0
  br i1 %558, label %559, label %567

559:                                              ; preds = %556
  br i1 false, label %560, label %563

560:                                              ; preds = %559
  %561 = load i32, i32* %18, align 4
  %562 = icmp ult i32 %561, 429496729
  br i1 %562, label %607, label %610

563:                                              ; preds = %559
  %564 = load i32, i32* %18, align 4
  %565 = sub nsw i32 -1, %564
  %566 = icmp ule i32 1, %565
  br i1 %566, label %607, label %610

567:                                              ; preds = %556
  br i1 true, label %568, label %569

568:                                              ; preds = %567
  br i1 false, label %570, label %583

569:                                              ; preds = %567
  br i1 false, label %570, label %583

570:                                              ; preds = %569, %568
  br i1 false, label %571, label %583

571:                                              ; preds = %570
  br i1 true, label %572, label %576

572:                                              ; preds = %571
  %573 = load i32, i32* %18, align 4
  %574 = add nsw i32 %573, 0
  %575 = icmp slt i32 0, %574
  br i1 %575, label %607, label %610

576:                                              ; preds = %571
  %577 = load i32, i32* %18, align 4
  %578 = icmp slt i32 0, %577
  br i1 %578, label %579, label %610

579:                                              ; preds = %576
  %580 = load i32, i32* %18, align 4
  %581 = sub nsw i32 %580, 1
  %582 = icmp slt i32 -1, %581
  br i1 %582, label %607, label %610

583:                                              ; preds = %570, %569, %568
  %584 = load i32, i32* %18, align 4
  %585 = icmp slt i32 0, %584
  br i1 %585, label %607, label %610

586:                                              ; preds = %555
  br i1 false, label %587, label %588

587:                                              ; preds = %586
  br i1 false, label %607, label %610

588:                                              ; preds = %586
  %589 = load i32, i32* %18, align 4
  %590 = icmp slt i32 %589, 0
  br i1 %590, label %591, label %604

591:                                              ; preds = %588
  br i1 true, label %592, label %593

592:                                              ; preds = %591
  br i1 false, label %594, label %600

593:                                              ; preds = %591
  br i1 false, label %594, label %600

594:                                              ; preds = %593, %592
  %595 = load i32, i32* %18, align 4
  %596 = icmp eq i32 %595, -1
  br i1 %596, label %597, label %600

597:                                              ; preds = %594
  br i1 true, label %598, label %599

598:                                              ; preds = %597
  br i1 true, label %607, label %610

599:                                              ; preds = %597
  br i1 true, label %607, label %610

600:                                              ; preds = %594, %593, %592
  %601 = load i32, i32* %18, align 4
  %602 = sdiv i32 0, %601
  %603 = icmp slt i32 %602, 10
  br i1 %603, label %607, label %610

604:                                              ; preds = %588
  %605 = load i32, i32* %18, align 4
  %606 = icmp ult i32 429496729, %605
  br i1 %606, label %607, label %610

607:                                              ; preds = %604, %600, %599, %598, %587, %583, %579, %572, %563, %560
  %608 = load i32, i32* %18, align 4
  %609 = mul i32 %608, 10
  store i32 %609, i32* %18, align 4
  br i1 true, label %881, label %872

610:                                              ; preds = %604, %600, %599, %598, %587, %583, %579, %576, %572, %563, %560
  %611 = load i32, i32* %18, align 4
  %612 = mul i32 %611, 10
  store i32 %612, i32* %18, align 4
  br i1 false, label %881, label %872

613:                                              ; preds = %501
  br i1 false, label %614, label %743

614:                                              ; preds = %613
  br i1 true, label %615, label %678

615:                                              ; preds = %614
  br i1 false, label %616, label %648

616:                                              ; preds = %615
  %617 = load i32, i32* %18, align 4
  %618 = icmp slt i32 %617, 0
  br i1 %618, label %619, label %629

619:                                              ; preds = %616
  br i1 true, label %620, label %624

620:                                              ; preds = %619
  %621 = load i32, i32* %18, align 4
  %622 = sext i32 %621 to i64
  %623 = icmp slt i64 %622, 922337203685477580
  br i1 %623, label %668, label %673

624:                                              ; preds = %619
  %625 = load i32, i32* %18, align 4
  %626 = sub nsw i32 -1, %625
  %627 = sext i32 %626 to i64
  %628 = icmp sle i64 -922337203685477580, %627
  br i1 %628, label %668, label %673

629:                                              ; preds = %616
  br i1 false, label %630, label %644

630:                                              ; preds = %629
  br i1 true, label %631, label %636

631:                                              ; preds = %630
  %632 = load i32, i32* %18, align 4
  %633 = sext i32 %632 to i64
  %634 = add nsw i64 %633, -9223372036854775808
  %635 = icmp slt i64 0, %634
  br i1 %635, label %668, label %673

636:                                              ; preds = %630
  %637 = load i32, i32* %18, align 4
  %638 = icmp slt i32 0, %637
  br i1 %638, label %639, label %673

639:                                              ; preds = %636
  %640 = load i32, i32* %18, align 4
  %641 = sub nsw i32 %640, 1
  %642 = sext i32 %641 to i64
  %643 = icmp slt i64 9223372036854775807, %642
  br i1 %643, label %668, label %673

644:                                              ; preds = %629
  %645 = load i32, i32* %18, align 4
  %646 = sext i32 %645 to i64
  %647 = icmp slt i64 -922337203685477580, %646
  br i1 %647, label %668, label %673

648:                                              ; preds = %615
  br i1 false, label %649, label %650

649:                                              ; preds = %648
  br i1 false, label %668, label %673

650:                                              ; preds = %648
  %651 = load i32, i32* %18, align 4
  %652 = icmp slt i32 %651, 0
  br i1 %652, label %653, label %664

653:                                              ; preds = %650
  %654 = load i32, i32* %18, align 4
  %655 = icmp eq i32 %654, -1
  br i1 %655, label %656, label %659

656:                                              ; preds = %653
  br i1 true, label %657, label %658

657:                                              ; preds = %656
  br i1 false, label %668, label %673

658:                                              ; preds = %656
  br i1 false, label %668, label %673

659:                                              ; preds = %653
  %660 = load i32, i32* %18, align 4
  %661 = sext i32 %660 to i64
  %662 = sdiv i64 -9223372036854775808, %661
  %663 = icmp slt i64 %662, 10
  br i1 %663, label %668, label %673

664:                                              ; preds = %650
  %665 = load i32, i32* %18, align 4
  %666 = sext i32 %665 to i64
  %667 = icmp slt i64 922337203685477580, %666
  br i1 %667, label %668, label %673

668:                                              ; preds = %664, %659, %658, %657, %649, %644, %639, %631, %624, %620
  %669 = load i32, i32* %18, align 4
  %670 = sext i32 %669 to i64
  %671 = mul i64 %670, 10
  %672 = trunc i64 %671 to i32
  store i32 %672, i32* %18, align 4
  br i1 true, label %881, label %872

673:                                              ; preds = %664, %659, %658, %657, %649, %644, %639, %636, %631, %624, %620
  %674 = load i32, i32* %18, align 4
  %675 = sext i32 %674 to i64
  %676 = mul i64 %675, 10
  %677 = trunc i64 %676 to i32
  store i32 %677, i32* %18, align 4
  br i1 false, label %881, label %872

678:                                              ; preds = %614
  br i1 false, label %679, label %711

679:                                              ; preds = %678
  %680 = load i32, i32* %18, align 4
  %681 = icmp slt i32 %680, 0
  br i1 %681, label %682, label %692

682:                                              ; preds = %679
  br i1 false, label %683, label %687

683:                                              ; preds = %682
  %684 = load i32, i32* %18, align 4
  %685 = sext i32 %684 to i64
  %686 = icmp ult i64 %685, 1844674407370955161
  br i1 %686, label %733, label %738

687:                                              ; preds = %682
  %688 = load i32, i32* %18, align 4
  %689 = sub nsw i32 -1, %688
  %690 = sext i32 %689 to i64
  %691 = icmp ule i64 1, %690
  br i1 %691, label %733, label %738

692:                                              ; preds = %679
  br i1 true, label %693, label %694

693:                                              ; preds = %692
  br i1 false, label %695, label %708

694:                                              ; preds = %692
  br i1 false, label %695, label %708

695:                                              ; preds = %694, %693
  br i1 false, label %696, label %708

696:                                              ; preds = %695
  br i1 true, label %697, label %701

697:                                              ; preds = %696
  %698 = load i32, i32* %18, align 4
  %699 = add nsw i32 %698, 0
  %700 = icmp slt i32 0, %699
  br i1 %700, label %733, label %738

701:                                              ; preds = %696
  %702 = load i32, i32* %18, align 4
  %703 = icmp slt i32 0, %702
  br i1 %703, label %704, label %738

704:                                              ; preds = %701
  %705 = load i32, i32* %18, align 4
  %706 = sub nsw i32 %705, 1
  %707 = icmp slt i32 -1, %706
  br i1 %707, label %733, label %738

708:                                              ; preds = %695, %694, %693
  %709 = load i32, i32* %18, align 4
  %710 = icmp slt i32 0, %709
  br i1 %710, label %733, label %738

711:                                              ; preds = %678
  br i1 false, label %712, label %713

712:                                              ; preds = %711
  br i1 false, label %733, label %738

713:                                              ; preds = %711
  %714 = load i32, i32* %18, align 4
  %715 = icmp slt i32 %714, 0
  br i1 %715, label %716, label %729

716:                                              ; preds = %713
  br i1 true, label %717, label %718

717:                                              ; preds = %716
  br i1 false, label %719, label %725

718:                                              ; preds = %716
  br i1 false, label %719, label %725

719:                                              ; preds = %718, %717
  %720 = load i32, i32* %18, align 4
  %721 = icmp eq i32 %720, -1
  br i1 %721, label %722, label %725

722:                                              ; preds = %719
  br i1 true, label %723, label %724

723:                                              ; preds = %722
  br i1 true, label %733, label %738

724:                                              ; preds = %722
  br i1 true, label %733, label %738

725:                                              ; preds = %719, %718, %717
  %726 = load i32, i32* %18, align 4
  %727 = sdiv i32 0, %726
  %728 = icmp slt i32 %727, 10
  br i1 %728, label %733, label %738

729:                                              ; preds = %713
  %730 = load i32, i32* %18, align 4
  %731 = sext i32 %730 to i64
  %732 = icmp ult i64 1844674407370955161, %731
  br i1 %732, label %733, label %738

733:                                              ; preds = %729, %725, %724, %723, %712, %708, %704, %697, %687, %683
  %734 = load i32, i32* %18, align 4
  %735 = sext i32 %734 to i64
  %736 = mul i64 %735, 10
  %737 = trunc i64 %736 to i32
  store i32 %737, i32* %18, align 4
  br i1 true, label %881, label %872

738:                                              ; preds = %729, %725, %724, %723, %712, %708, %704, %701, %697, %687, %683
  %739 = load i32, i32* %18, align 4
  %740 = sext i32 %739 to i64
  %741 = mul i64 %740, 10
  %742 = trunc i64 %741 to i32
  store i32 %742, i32* %18, align 4
  br i1 false, label %881, label %872

743:                                              ; preds = %613
  br i1 true, label %744, label %807

744:                                              ; preds = %743
  br i1 false, label %745, label %777

745:                                              ; preds = %744
  %746 = load i32, i32* %18, align 4
  %747 = icmp slt i32 %746, 0
  br i1 %747, label %748, label %758

748:                                              ; preds = %745
  br i1 true, label %749, label %753

749:                                              ; preds = %748
  %750 = load i32, i32* %18, align 4
  %751 = sext i32 %750 to i64
  %752 = icmp slt i64 %751, 922337203685477580
  br i1 %752, label %797, label %802

753:                                              ; preds = %748
  %754 = load i32, i32* %18, align 4
  %755 = sub nsw i32 -1, %754
  %756 = sext i32 %755 to i64
  %757 = icmp sle i64 -922337203685477580, %756
  br i1 %757, label %797, label %802

758:                                              ; preds = %745
  br i1 false, label %759, label %773

759:                                              ; preds = %758
  br i1 true, label %760, label %765

760:                                              ; preds = %759
  %761 = load i32, i32* %18, align 4
  %762 = sext i32 %761 to i64
  %763 = add nsw i64 %762, -9223372036854775808
  %764 = icmp slt i64 0, %763
  br i1 %764, label %797, label %802

765:                                              ; preds = %759
  %766 = load i32, i32* %18, align 4
  %767 = icmp slt i32 0, %766
  br i1 %767, label %768, label %802

768:                                              ; preds = %765
  %769 = load i32, i32* %18, align 4
  %770 = sub nsw i32 %769, 1
  %771 = sext i32 %770 to i64
  %772 = icmp slt i64 9223372036854775807, %771
  br i1 %772, label %797, label %802

773:                                              ; preds = %758
  %774 = load i32, i32* %18, align 4
  %775 = sext i32 %774 to i64
  %776 = icmp slt i64 -922337203685477580, %775
  br i1 %776, label %797, label %802

777:                                              ; preds = %744
  br i1 false, label %778, label %779

778:                                              ; preds = %777
  br i1 false, label %797, label %802

779:                                              ; preds = %777
  %780 = load i32, i32* %18, align 4
  %781 = icmp slt i32 %780, 0
  br i1 %781, label %782, label %793

782:                                              ; preds = %779
  %783 = load i32, i32* %18, align 4
  %784 = icmp eq i32 %783, -1
  br i1 %784, label %785, label %788

785:                                              ; preds = %782
  br i1 true, label %786, label %787

786:                                              ; preds = %785
  br i1 false, label %797, label %802

787:                                              ; preds = %785
  br i1 false, label %797, label %802

788:                                              ; preds = %782
  %789 = load i32, i32* %18, align 4
  %790 = sext i32 %789 to i64
  %791 = sdiv i64 -9223372036854775808, %790
  %792 = icmp slt i64 %791, 10
  br i1 %792, label %797, label %802

793:                                              ; preds = %779
  %794 = load i32, i32* %18, align 4
  %795 = sext i32 %794 to i64
  %796 = icmp slt i64 922337203685477580, %795
  br i1 %796, label %797, label %802

797:                                              ; preds = %793, %788, %787, %786, %778, %773, %768, %760, %753, %749
  %798 = load i32, i32* %18, align 4
  %799 = sext i32 %798 to i64
  %800 = mul i64 %799, 10
  %801 = trunc i64 %800 to i32
  store i32 %801, i32* %18, align 4
  br i1 true, label %881, label %872

802:                                              ; preds = %793, %788, %787, %786, %778, %773, %768, %765, %760, %753, %749
  %803 = load i32, i32* %18, align 4
  %804 = sext i32 %803 to i64
  %805 = mul i64 %804, 10
  %806 = trunc i64 %805 to i32
  store i32 %806, i32* %18, align 4
  br i1 false, label %881, label %872

807:                                              ; preds = %743
  br i1 false, label %808, label %840

808:                                              ; preds = %807
  %809 = load i32, i32* %18, align 4
  %810 = icmp slt i32 %809, 0
  br i1 %810, label %811, label %821

811:                                              ; preds = %808
  br i1 false, label %812, label %816

812:                                              ; preds = %811
  %813 = load i32, i32* %18, align 4
  %814 = sext i32 %813 to i64
  %815 = icmp ult i64 %814, 1844674407370955161
  br i1 %815, label %862, label %867

816:                                              ; preds = %811
  %817 = load i32, i32* %18, align 4
  %818 = sub nsw i32 -1, %817
  %819 = sext i32 %818 to i64
  %820 = icmp ule i64 1, %819
  br i1 %820, label %862, label %867

821:                                              ; preds = %808
  br i1 true, label %822, label %823

822:                                              ; preds = %821
  br i1 false, label %824, label %837

823:                                              ; preds = %821
  br i1 false, label %824, label %837

824:                                              ; preds = %823, %822
  br i1 false, label %825, label %837

825:                                              ; preds = %824
  br i1 true, label %826, label %830

826:                                              ; preds = %825
  %827 = load i32, i32* %18, align 4
  %828 = add nsw i32 %827, 0
  %829 = icmp slt i32 0, %828
  br i1 %829, label %862, label %867

830:                                              ; preds = %825
  %831 = load i32, i32* %18, align 4
  %832 = icmp slt i32 0, %831
  br i1 %832, label %833, label %867

833:                                              ; preds = %830
  %834 = load i32, i32* %18, align 4
  %835 = sub nsw i32 %834, 1
  %836 = icmp slt i32 -1, %835
  br i1 %836, label %862, label %867

837:                                              ; preds = %824, %823, %822
  %838 = load i32, i32* %18, align 4
  %839 = icmp slt i32 0, %838
  br i1 %839, label %862, label %867

840:                                              ; preds = %807
  br i1 false, label %841, label %842

841:                                              ; preds = %840
  br i1 false, label %862, label %867

842:                                              ; preds = %840
  %843 = load i32, i32* %18, align 4
  %844 = icmp slt i32 %843, 0
  br i1 %844, label %845, label %858

845:                                              ; preds = %842
  br i1 true, label %846, label %847

846:                                              ; preds = %845
  br i1 false, label %848, label %854

847:                                              ; preds = %845
  br i1 false, label %848, label %854

848:                                              ; preds = %847, %846
  %849 = load i32, i32* %18, align 4
  %850 = icmp eq i32 %849, -1
  br i1 %850, label %851, label %854

851:                                              ; preds = %848
  br i1 true, label %852, label %853

852:                                              ; preds = %851
  br i1 true, label %862, label %867

853:                                              ; preds = %851
  br i1 true, label %862, label %867

854:                                              ; preds = %848, %847, %846
  %855 = load i32, i32* %18, align 4
  %856 = sdiv i32 0, %855
  %857 = icmp slt i32 %856, 10
  br i1 %857, label %862, label %867

858:                                              ; preds = %842
  %859 = load i32, i32* %18, align 4
  %860 = sext i32 %859 to i64
  %861 = icmp ult i64 1844674407370955161, %860
  br i1 %861, label %862, label %867

862:                                              ; preds = %858, %854, %853, %852, %841, %837, %833, %826, %816, %812
  %863 = load i32, i32* %18, align 4
  %864 = sext i32 %863 to i64
  %865 = mul i64 %864, 10
  %866 = trunc i64 %865 to i32
  store i32 %866, i32* %18, align 4
  br i1 true, label %881, label %872

867:                                              ; preds = %858, %854, %853, %852, %841, %837, %833, %830, %826, %816, %812
  %868 = load i32, i32* %18, align 4
  %869 = sext i32 %868 to i64
  %870 = mul i64 %869, 10
  %871 = trunc i64 %870 to i32
  store i32 %871, i32* %18, align 4
  br i1 false, label %881, label %872

872:                                              ; preds = %867, %862, %802, %797, %738, %733, %673, %668, %610, %607, %552, %549, %496, %491, %434, %429, %370, %365, %308, %303
  %873 = load i32, i32* %18, align 4
  %874 = load i8*, i8** %26, align 8
  %875 = load i8, i8* %874, align 1
  %876 = sext i8 %875 to i32
  %877 = sub nsw i32 %876, 48
  %878 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %873, i32 %877)
  %879 = extractvalue { i32, i1 } %878, 1
  %880 = extractvalue { i32, i1 } %878, 0
  store i32 %880, i32* %18, align 4
  br i1 %879, label %881, label %882

881:                                              ; preds = %872, %867, %862, %802, %797, %738, %733, %673, %668, %610, %607, %552, %549, %496, %491, %434, %429, %370, %365, %308, %303
  store i32 2147483647, i32* %18, align 4
  br label %882

882:                                              ; preds = %881, %872
  %883 = load i8*, i8** %26, align 8
  %884 = getelementptr inbounds i8, i8* %883, i32 1
  store i8* %884, i8** %26, align 8
  br label %885

885:                                              ; preds = %882
  %886 = load i8*, i8** %26, align 8
  %887 = load i8, i8* %886, align 1
  %888 = sext i8 %887 to i32
  %889 = sub i32 %888, 48
  %890 = icmp ule i32 %889, 9
  br i1 %890, label %249, label %891

891:                                              ; preds = %885
  br label %892

892:                                              ; preds = %891, %242
  %893 = load i8*, i8** %26, align 8
  %894 = load i8, i8* %893, align 1
  %895 = sext i8 %894 to i32
  switch i32 %895, label %901 [
    i32 69, label %896
    i32 79, label %896
  ]

896:                                              ; preds = %892, %892
  %897 = load i8*, i8** %26, align 8
  %898 = getelementptr inbounds i8, i8* %897, i32 1
  store i8* %898, i8** %26, align 8
  %899 = load i8, i8* %897, align 1
  %900 = sext i8 %899 to i32
  store i32 %900, i32* %28, align 4
  br label %902

901:                                              ; preds = %892
  store i32 0, i32* %28, align 4
  br label %902

902:                                              ; preds = %901, %896
  %903 = load i8*, i8** %26, align 8
  %904 = load i8, i8* %903, align 1
  %905 = sext i8 %904 to i32
  store i32 %905, i32* %42, align 4
  %906 = load i32, i32* %42, align 4
  switch i32 %906, label %2554 [
    i32 37, label %907
    i32 97, label %980
    i32 65, label %989
    i32 98, label %998
    i32 104, label %998
    i32 66, label %1007
    i32 99, label %1016
    i32 67, label %1231
    i32 120, label %1269
    i32 68, label %1274
    i32 100, label %1279
    i32 101, label %1289
    i32 70, label %1606
    i32 72, label %1625
    i32 73, label %1635
    i32 107, label %1643
    i32 108, label %1653
    i32 106, label %1661
    i32 77, label %1677
    i32 109, label %1687
    i32 78, label %1703
    i32 110, label %1913
    i32 80, label %1980
    i32 112, label %1981
    i32 113, label %1986
    i32 82, label %1995
    i32 114, label %1996
    i32 83, label %1997
    i32 115, label %2007
    i32 88, label %2041
    i32 84, label %2046
    i32 116, label %2047
    i32 117, label %2114
    i32 85, label %2124
    i32 86, label %2140
    i32 103, label %2140
    i32 71, label %2140
    i32 87, label %2282
    i32 119, label %2301
    i32 89, label %2311
    i32 121, label %2331
    i32 90, label %2359
    i32 58, label %2452
    i32 122, label %2476
    i32 0, label %2551
  ]

907:                                              ; preds = %902
  %908 = load i32, i32* %28, align 4
  %909 = icmp ne i32 %908, 0
  br i1 %909, label %910, label %911

910:                                              ; preds = %907
  br label %2555

911:                                              ; preds = %907
  br label %912

912:                                              ; preds = %911
  store i64 1, i64* %48, align 8
  %913 = load i32, i32* %27, align 4
  %914 = icmp eq i32 %913, 45
  br i1 %914, label %918, label %915

915:                                              ; preds = %912
  %916 = load i32, i32* %18, align 4
  %917 = icmp slt i32 %916, 0
  br i1 %917, label %918, label %919

918:                                              ; preds = %915, %912
  br label %921

919:                                              ; preds = %915
  %920 = load i32, i32* %18, align 4
  br label %921

921:                                              ; preds = %919, %918
  %922 = phi i32 [ 0, %918 ], [ %920, %919 ]
  %923 = sext i32 %922 to i64
  store i64 %923, i64* %49, align 8
  %924 = load i64, i64* %48, align 8
  %925 = load i64, i64* %49, align 8
  %926 = icmp ult i64 %924, %925
  br i1 %926, label %927, label %929

927:                                              ; preds = %921
  %928 = load i64, i64* %49, align 8
  br label %931

929:                                              ; preds = %921
  %930 = load i64, i64* %48, align 8
  br label %931

931:                                              ; preds = %929, %927
  %932 = phi i64 [ %928, %927 ], [ %930, %929 ]
  store i64 %932, i64* %50, align 8
  %933 = load i64, i64* %50, align 8
  %934 = load i64, i64* %13, align 8
  %935 = load i64, i64* %24, align 8
  %936 = sub i64 %934, %935
  %937 = icmp uge i64 %933, %936
  br i1 %937, label %938, label %939

938:                                              ; preds = %931
  store i64 0, i64* %11, align 8
  br label %2684

939:                                              ; preds = %931
  %940 = load i8*, i8** %25, align 8
  %941 = icmp ne i8* %940, null
  br i1 %941, label %942, label %975

942:                                              ; preds = %939
  %943 = load i64, i64* %48, align 8
  %944 = load i64, i64* %49, align 8
  %945 = icmp ult i64 %943, %944
  br i1 %945, label %946, label %968

946:                                              ; preds = %942
  %947 = load i64, i64* %49, align 8
  %948 = load i64, i64* %48, align 8
  %949 = sub i64 %947, %948
  store i64 %949, i64* %51, align 8
  %950 = load i32, i32* %27, align 4
  %951 = icmp eq i32 %950, 48
  br i1 %951, label %955, label %952

952:                                              ; preds = %946
  %953 = load i32, i32* %27, align 4
  %954 = icmp eq i32 %953, 43
  br i1 %954, label %955, label %961

955:                                              ; preds = %952, %946
  %956 = load i8*, i8** %25, align 8
  %957 = load i64, i64* %51, align 8
  call void @llvm.memset.p0i8.i64(i8* align 1 %956, i8 48, i64 %957, i1 false)
  %958 = load i64, i64* %51, align 8
  %959 = load i8*, i8** %25, align 8
  %960 = getelementptr inbounds i8, i8* %959, i64 %958
  store i8* %960, i8** %25, align 8
  br label %967

961:                                              ; preds = %952
  %962 = load i8*, i8** %25, align 8
  %963 = load i64, i64* %51, align 8
  call void @llvm.memset.p0i8.i64(i8* align 1 %962, i8 32, i64 %963, i1 false)
  %964 = load i64, i64* %51, align 8
  %965 = load i8*, i8** %25, align 8
  %966 = getelementptr inbounds i8, i8* %965, i64 %964
  store i8* %966, i8** %25, align 8
  br label %967

967:                                              ; preds = %961, %955
  br label %968

968:                                              ; preds = %967, %942
  %969 = load i8*, i8** %26, align 8
  %970 = load i8, i8* %969, align 1
  %971 = load i8*, i8** %25, align 8
  store i8 %970, i8* %971, align 1
  %972 = load i64, i64* %48, align 8
  %973 = load i8*, i8** %25, align 8
  %974 = getelementptr inbounds i8, i8* %973, i64 %972
  store i8* %974, i8** %25, align 8
  br label %975

975:                                              ; preds = %968, %939
  %976 = load i64, i64* %50, align 8
  %977 = load i64, i64* %24, align 8
  %978 = add i64 %977, %976
  store i64 %978, i64* %24, align 8
  br label %979

979:                                              ; preds = %975
  br label %2670

980:                                              ; preds = %902
  %981 = load i32, i32* %28, align 4
  %982 = icmp ne i32 %981, 0
  br i1 %982, label %983, label %984

983:                                              ; preds = %980
  br label %2555

984:                                              ; preds = %980
  %985 = load i8, i8* %41, align 1
  %986 = trunc i8 %985 to i1
  br i1 %986, label %987, label %988

987:                                              ; preds = %984
  store i8 1, i8* %39, align 1
  store i8 0, i8* %38, align 1
  br label %988

988:                                              ; preds = %987, %984
  br label %1113

989:                                              ; preds = %902
  %990 = load i32, i32* %28, align 4
  %991 = icmp ne i32 %990, 0
  br i1 %991, label %992, label %993

992:                                              ; preds = %989
  br label %2555

993:                                              ; preds = %989
  %994 = load i8, i8* %41, align 1
  %995 = trunc i8 %994 to i1
  br i1 %995, label %996, label %997

996:                                              ; preds = %993
  store i8 1, i8* %39, align 1
  store i8 0, i8* %38, align 1
  br label %997

997:                                              ; preds = %996, %993
  br label %1113

998:                                              ; preds = %902, %902
  %999 = load i8, i8* %41, align 1
  %1000 = trunc i8 %999 to i1
  br i1 %1000, label %1001, label %1002

1001:                                             ; preds = %998
  store i8 1, i8* %39, align 1
  store i8 0, i8* %38, align 1
  br label %1002

1002:                                             ; preds = %1001, %998
  %1003 = load i32, i32* %28, align 4
  %1004 = icmp eq i32 %1003, 69
  br i1 %1004, label %1005, label %1006

1005:                                             ; preds = %1002
  br label %2555

1006:                                             ; preds = %1002
  br label %1113

1007:                                             ; preds = %902
  %1008 = load i32, i32* %28, align 4
  %1009 = icmp eq i32 %1008, 69
  br i1 %1009, label %1010, label %1011

1010:                                             ; preds = %1007
  br label %2555

1011:                                             ; preds = %1007
  %1012 = load i8, i8* %41, align 1
  %1013 = trunc i8 %1012 to i1
  br i1 %1013, label %1014, label %1015

1014:                                             ; preds = %1011
  store i8 1, i8* %39, align 1
  store i8 0, i8* %38, align 1
  br label %1015

1015:                                             ; preds = %1014, %1011
  br label %1113

1016:                                             ; preds = %902
  %1017 = load i32, i32* %28, align 4
  %1018 = icmp eq i32 %1017, 79
  br i1 %1018, label %1019, label %1020

1019:                                             ; preds = %1016
  br label %2555

1020:                                             ; preds = %1016
  br label %1113

1021:                                             ; preds = %2046, %1995, %1278
  store i32 -1, i32* %43, align 4
  br label %1022

1022:                                             ; preds = %1624, %1021
  %1023 = load i8*, i8** %35, align 8
  %1024 = load %struct.tm*, %struct.tm** %15, align 8
  %1025 = load i8, i8* %39, align 1
  %1026 = trunc i8 %1025 to i1
  %1027 = load i32, i32* %27, align 4
  %1028 = load i32, i32* %43, align 4
  %1029 = load i8*, i8** %19, align 8
  %1030 = load %struct.tm_zone*, %struct.tm_zone** %20, align 8
  %1031 = load i32, i32* %21, align 4
  %1032 = call i64 @__strftime_internal.357(i8* null, i64 -1, i8* %1023, %struct.tm* %1024, i1 zeroext %1026, i32 %1027, i32 %1028, i8* %1029, %struct.tm_zone* %1030, i32 %1031)
  store i64 %1032, i64* %52, align 8
  br label %1033

1033:                                             ; preds = %1022
  %1034 = load i64, i64* %52, align 8
  store i64 %1034, i64* %53, align 8
  %1035 = load i32, i32* %27, align 4
  %1036 = icmp eq i32 %1035, 45
  br i1 %1036, label %1040, label %1037

1037:                                             ; preds = %1033
  %1038 = load i32, i32* %18, align 4
  %1039 = icmp slt i32 %1038, 0
  br i1 %1039, label %1040, label %1041

1040:                                             ; preds = %1037, %1033
  br label %1043

1041:                                             ; preds = %1037
  %1042 = load i32, i32* %18, align 4
  br label %1043

1043:                                             ; preds = %1041, %1040
  %1044 = phi i32 [ 0, %1040 ], [ %1042, %1041 ]
  %1045 = sext i32 %1044 to i64
  store i64 %1045, i64* %54, align 8
  %1046 = load i64, i64* %53, align 8
  %1047 = load i64, i64* %54, align 8
  %1048 = icmp ult i64 %1046, %1047
  br i1 %1048, label %1049, label %1051

1049:                                             ; preds = %1043
  %1050 = load i64, i64* %54, align 8
  br label %1053

1051:                                             ; preds = %1043
  %1052 = load i64, i64* %53, align 8
  br label %1053

1053:                                             ; preds = %1051, %1049
  %1054 = phi i64 [ %1050, %1049 ], [ %1052, %1051 ]
  store i64 %1054, i64* %55, align 8
  %1055 = load i64, i64* %55, align 8
  %1056 = load i64, i64* %13, align 8
  %1057 = load i64, i64* %24, align 8
  %1058 = sub i64 %1056, %1057
  %1059 = icmp uge i64 %1055, %1058
  br i1 %1059, label %1060, label %1061

1060:                                             ; preds = %1053
  store i64 0, i64* %11, align 8
  br label %2684

1061:                                             ; preds = %1053
  %1062 = load i8*, i8** %25, align 8
  %1063 = icmp ne i8* %1062, null
  br i1 %1063, label %1064, label %1108

1064:                                             ; preds = %1061
  %1065 = load i64, i64* %53, align 8
  %1066 = load i64, i64* %54, align 8
  %1067 = icmp ult i64 %1065, %1066
  br i1 %1067, label %1068, label %1090

1068:                                             ; preds = %1064
  %1069 = load i64, i64* %54, align 8
  %1070 = load i64, i64* %53, align 8
  %1071 = sub i64 %1069, %1070
  store i64 %1071, i64* %56, align 8
  %1072 = load i32, i32* %27, align 4
  %1073 = icmp eq i32 %1072, 48
  br i1 %1073, label %1077, label %1074

1074:                                             ; preds = %1068
  %1075 = load i32, i32* %27, align 4
  %1076 = icmp eq i32 %1075, 43
  br i1 %1076, label %1077, label %1083

1077:                                             ; preds = %1074, %1068
  %1078 = load i8*, i8** %25, align 8
  %1079 = load i64, i64* %56, align 8
  call void @llvm.memset.p0i8.i64(i8* align 1 %1078, i8 48, i64 %1079, i1 false)
  %1080 = load i64, i64* %56, align 8
  %1081 = load i8*, i8** %25, align 8
  %1082 = getelementptr inbounds i8, i8* %1081, i64 %1080
  store i8* %1082, i8** %25, align 8
  br label %1089

1083:                                             ; preds = %1074
  %1084 = load i8*, i8** %25, align 8
  %1085 = load i64, i64* %56, align 8
  call void @llvm.memset.p0i8.i64(i8* align 1 %1084, i8 32, i64 %1085, i1 false)
  %1086 = load i64, i64* %56, align 8
  %1087 = load i8*, i8** %25, align 8
  %1088 = getelementptr inbounds i8, i8* %1087, i64 %1086
  store i8* %1088, i8** %25, align 8
  br label %1089

1089:                                             ; preds = %1083, %1077
  br label %1090

1090:                                             ; preds = %1089, %1064
  %1091 = load i8*, i8** %25, align 8
  %1092 = load i64, i64* %13, align 8
  %1093 = load i64, i64* %24, align 8
  %1094 = sub i64 %1092, %1093
  %1095 = load i8*, i8** %35, align 8
  %1096 = load %struct.tm*, %struct.tm** %15, align 8
  %1097 = load i8, i8* %39, align 1
  %1098 = trunc i8 %1097 to i1
  %1099 = load i32, i32* %27, align 4
  %1100 = load i32, i32* %43, align 4
  %1101 = load i8*, i8** %19, align 8
  %1102 = load %struct.tm_zone*, %struct.tm_zone** %20, align 8
  %1103 = load i32, i32* %21, align 4
  %1104 = call i64 @__strftime_internal.357(i8* %1091, i64 %1094, i8* %1095, %struct.tm* %1096, i1 zeroext %1098, i32 %1099, i32 %1100, i8* %1101, %struct.tm_zone* %1102, i32 %1103)
  %1105 = load i64, i64* %53, align 8
  %1106 = load i8*, i8** %25, align 8
  %1107 = getelementptr inbounds i8, i8* %1106, i64 %1105
  store i8* %1107, i8** %25, align 8
  br label %1108

1108:                                             ; preds = %1090, %1061
  %1109 = load i64, i64* %55, align 8
  %1110 = load i64, i64* %24, align 8
  %1111 = add i64 %1110, %1109
  store i64 %1111, i64* %24, align 8
  br label %1112

1112:                                             ; preds = %1108
  br label %2670

1113:                                             ; preds = %2334, %2314, %2045, %1996, %1985, %1342, %1273, %1234, %1020, %1015, %1006, %997, %988
  %1114 = getelementptr inbounds [5 x i8], [5 x i8]* %57, i64 0, i64 0
  store i8* %1114, i8** %58, align 8
  %1115 = load i8*, i8** %58, align 8
  %1116 = getelementptr inbounds i8, i8* %1115, i32 1
  store i8* %1116, i8** %58, align 8
  store i8 32, i8* %1115, align 1
  %1117 = load i8*, i8** %58, align 8
  %1118 = getelementptr inbounds i8, i8* %1117, i32 1
  store i8* %1118, i8** %58, align 8
  store i8 37, i8* %1117, align 1
  %1119 = load i32, i32* %28, align 4
  %1120 = icmp ne i32 %1119, 0
  br i1 %1120, label %1121, label %1126

1121:                                             ; preds = %1113
  %1122 = load i32, i32* %28, align 4
  %1123 = trunc i32 %1122 to i8
  %1124 = load i8*, i8** %58, align 8
  %1125 = getelementptr inbounds i8, i8* %1124, i32 1
  store i8* %1125, i8** %58, align 8
  store i8 %1123, i8* %1124, align 1
  br label %1126

1126:                                             ; preds = %1121, %1113
  %1127 = load i32, i32* %42, align 4
  %1128 = trunc i32 %1127 to i8
  %1129 = load i8*, i8** %58, align 8
  %1130 = getelementptr inbounds i8, i8* %1129, i32 1
  store i8* %1130, i8** %58, align 8
  store i8 %1128, i8* %1129, align 1
  %1131 = load i8*, i8** %58, align 8
  store i8 0, i8* %1131, align 1
  %1132 = getelementptr inbounds [1024 x i8], [1024 x i8]* %59, i64 0, i64 0
  %1133 = getelementptr inbounds [5 x i8], [5 x i8]* %57, i64 0, i64 0
  %1134 = load %struct.tm*, %struct.tm** %15, align 8
  %1135 = call i64 @strftime(i8* %1132, i64 1024, i8* %1133, %struct.tm* %1134) #11
  store i64 %1135, i64* %60, align 8
  %1136 = load i64, i64* %60, align 8
  %1137 = icmp ne i64 %1136, 0
  br i1 %1137, label %1138, label %1230

1138:                                             ; preds = %1126
  br label %1139

1139:                                             ; preds = %1138
  %1140 = load i64, i64* %60, align 8
  %1141 = sub i64 %1140, 1
  store i64 %1141, i64* %61, align 8
  %1142 = load i32, i32* %27, align 4
  %1143 = icmp eq i32 %1142, 45
  br i1 %1143, label %1147, label %1144

1144:                                             ; preds = %1139
  %1145 = load i32, i32* %18, align 4
  %1146 = icmp slt i32 %1145, 0
  br i1 %1146, label %1147, label %1148

1147:                                             ; preds = %1144, %1139
  br label %1150

1148:                                             ; preds = %1144
  %1149 = load i32, i32* %18, align 4
  br label %1150

1150:                                             ; preds = %1148, %1147
  %1151 = phi i32 [ 0, %1147 ], [ %1149, %1148 ]
  %1152 = sext i32 %1151 to i64
  store i64 %1152, i64* %62, align 8
  %1153 = load i64, i64* %61, align 8
  %1154 = load i64, i64* %62, align 8
  %1155 = icmp ult i64 %1153, %1154
  br i1 %1155, label %1156, label %1158

1156:                                             ; preds = %1150
  %1157 = load i64, i64* %62, align 8
  br label %1160

1158:                                             ; preds = %1150
  %1159 = load i64, i64* %61, align 8
  br label %1160

1160:                                             ; preds = %1158, %1156
  %1161 = phi i64 [ %1157, %1156 ], [ %1159, %1158 ]
  store i64 %1161, i64* %63, align 8
  %1162 = load i64, i64* %63, align 8
  %1163 = load i64, i64* %13, align 8
  %1164 = load i64, i64* %24, align 8
  %1165 = sub i64 %1163, %1164
  %1166 = icmp uge i64 %1162, %1165
  br i1 %1166, label %1167, label %1168

1167:                                             ; preds = %1160
  store i64 0, i64* %11, align 8
  br label %2684

1168:                                             ; preds = %1160
  %1169 = load i8*, i8** %25, align 8
  %1170 = icmp ne i8* %1169, null
  br i1 %1170, label %1171, label %1225

1171:                                             ; preds = %1168
  %1172 = load i64, i64* %61, align 8
  %1173 = load i64, i64* %62, align 8
  %1174 = icmp ult i64 %1172, %1173
  br i1 %1174, label %1175, label %1197

1175:                                             ; preds = %1171
  %1176 = load i64, i64* %62, align 8
  %1177 = load i64, i64* %61, align 8
  %1178 = sub i64 %1176, %1177
  store i64 %1178, i64* %64, align 8
  %1179 = load i32, i32* %27, align 4
  %1180 = icmp eq i32 %1179, 48
  br i1 %1180, label %1184, label %1181

1181:                                             ; preds = %1175
  %1182 = load i32, i32* %27, align 4
  %1183 = icmp eq i32 %1182, 43
  br i1 %1183, label %1184, label %1190

1184:                                             ; preds = %1181, %1175
  %1185 = load i8*, i8** %25, align 8
  %1186 = load i64, i64* %64, align 8
  call void @llvm.memset.p0i8.i64(i8* align 1 %1185, i8 48, i64 %1186, i1 false)
  %1187 = load i64, i64* %64, align 8
  %1188 = load i8*, i8** %25, align 8
  %1189 = getelementptr inbounds i8, i8* %1188, i64 %1187
  store i8* %1189, i8** %25, align 8
  br label %1196

1190:                                             ; preds = %1181
  %1191 = load i8*, i8** %25, align 8
  %1192 = load i64, i64* %64, align 8
  call void @llvm.memset.p0i8.i64(i8* align 1 %1191, i8 32, i64 %1192, i1 false)
  %1193 = load i64, i64* %64, align 8
  %1194 = load i8*, i8** %25, align 8
  %1195 = getelementptr inbounds i8, i8* %1194, i64 %1193
  store i8* %1195, i8** %25, align 8
  br label %1196

1196:                                             ; preds = %1190, %1184
  br label %1197

1197:                                             ; preds = %1196, %1171
  %1198 = load i8, i8* %38, align 1
  %1199 = trunc i8 %1198 to i1
  br i1 %1199, label %1200, label %1206

1200:                                             ; preds = %1197
  %1201 = load i8*, i8** %25, align 8
  %1202 = getelementptr inbounds [1024 x i8], [1024 x i8]* %59, i64 0, i64 0
  %1203 = getelementptr inbounds i8, i8* %1202, i64 1
  %1204 = load i64, i64* %61, align 8
  %1205 = call i8* @memcpy_lowcase(i8* %1201, i8* %1203, i64 %1204)
  br label %1221

1206:                                             ; preds = %1197
  %1207 = load i8, i8* %39, align 1
  %1208 = trunc i8 %1207 to i1
  br i1 %1208, label %1209, label %1215

1209:                                             ; preds = %1206
  %1210 = load i8*, i8** %25, align 8
  %1211 = getelementptr inbounds [1024 x i8], [1024 x i8]* %59, i64 0, i64 0
  %1212 = getelementptr inbounds i8, i8* %1211, i64 1
  %1213 = load i64, i64* %61, align 8
  %1214 = call i8* @memcpy_uppcase(i8* %1210, i8* %1212, i64 %1213)
  br label %1220

1215:                                             ; preds = %1206
  %1216 = load i8*, i8** %25, align 8
  %1217 = getelementptr inbounds [1024 x i8], [1024 x i8]* %59, i64 0, i64 0
  %1218 = getelementptr inbounds i8, i8* %1217, i64 1
  %1219 = load i64, i64* %61, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1216, i8* align 1 %1218, i64 %1219, i1 false)
  br label %1220

1220:                                             ; preds = %1215, %1209
  br label %1221

1221:                                             ; preds = %1220, %1200
  %1222 = load i64, i64* %61, align 8
  %1223 = load i8*, i8** %25, align 8
  %1224 = getelementptr inbounds i8, i8* %1223, i64 %1222
  store i8* %1224, i8** %25, align 8
  br label %1225

1225:                                             ; preds = %1221, %1168
  %1226 = load i64, i64* %63, align 8
  %1227 = load i64, i64* %24, align 8
  %1228 = add i64 %1227, %1226
  store i64 %1228, i64* %24, align 8
  br label %1229

1229:                                             ; preds = %1225
  br label %1230

1230:                                             ; preds = %1229, %1126
  br label %2670

1231:                                             ; preds = %902
  %1232 = load i32, i32* %28, align 4
  %1233 = icmp eq i32 %1232, 69
  br i1 %1233, label %1234, label %1235

1234:                                             ; preds = %1231
  br label %1113

1235:                                             ; preds = %1231
  %1236 = load %struct.tm*, %struct.tm** %15, align 8
  %1237 = getelementptr inbounds %struct.tm, %struct.tm* %1236, i32 0, i32 5
  %1238 = load i32, i32* %1237, align 4
  %1239 = icmp slt i32 %1238, -1900
  %1240 = zext i1 %1239 to i8
  store i8 %1240, i8* %65, align 1
  %1241 = load i8, i8* %65, align 1
  %1242 = trunc i8 %1241 to i1
  %1243 = xor i1 %1242, true
  %1244 = zext i1 %1243 to i32
  %1245 = load %struct.tm*, %struct.tm** %15, align 8
  %1246 = getelementptr inbounds %struct.tm, %struct.tm* %1245, i32 0, i32 5
  %1247 = load i32, i32* %1246, align 4
  %1248 = icmp slt i32 %1247, 0
  %1249 = zext i1 %1248 to i32
  %1250 = and i32 %1244, %1249
  %1251 = icmp ne i32 %1250, 0
  %1252 = zext i1 %1251 to i8
  store i8 %1252, i8* %66, align 1
  %1253 = load %struct.tm*, %struct.tm** %15, align 8
  %1254 = getelementptr inbounds %struct.tm, %struct.tm* %1253, i32 0, i32 5
  %1255 = load i32, i32* %1254, align 4
  %1256 = load i8, i8* %66, align 1
  %1257 = trunc i8 %1256 to i1
  %1258 = zext i1 %1257 to i32
  %1259 = mul nsw i32 99, %1258
  %1260 = sub nsw i32 %1255, %1259
  %1261 = sdiv i32 %1260, 100
  %1262 = add nsw i32 %1261, 19
  store i32 %1262, i32* %67, align 4
  br label %1263

1263:                                             ; preds = %1235
  store i32 2, i32* %29, align 4
  %1264 = load i8, i8* %65, align 1
  %1265 = trunc i8 %1264 to i1
  %1266 = zext i1 %1265 to i8
  store i8 %1266, i8* %32, align 1
  %1267 = load i32, i32* %67, align 4
  store i32 %1267, i32* %31, align 4
  br label %1300

1268:                                             ; No predecessors!
  br label %1269

1269:                                             ; preds = %1268, %902
  %1270 = load i32, i32* %28, align 4
  %1271 = icmp eq i32 %1270, 79
  br i1 %1271, label %1272, label %1273

1272:                                             ; preds = %1269
  br label %2555

1273:                                             ; preds = %1269
  br label %1113

1274:                                             ; preds = %902
  %1275 = load i32, i32* %28, align 4
  %1276 = icmp ne i32 %1275, 0
  br i1 %1276, label %1277, label %1278

1277:                                             ; preds = %1274
  br label %2555

1278:                                             ; preds = %1274
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1.359, i64 0, i64 0), i8** %35, align 8
  br label %1021

1279:                                             ; preds = %902
  %1280 = load i32, i32* %28, align 4
  %1281 = icmp eq i32 %1280, 69
  br i1 %1281, label %1282, label %1283

1282:                                             ; preds = %1279
  br label %2555

1283:                                             ; preds = %1279
  br label %1284

1284:                                             ; preds = %1283
  store i32 2, i32* %29, align 4
  %1285 = load %struct.tm*, %struct.tm** %15, align 8
  %1286 = getelementptr inbounds %struct.tm, %struct.tm* %1285, i32 0, i32 3
  %1287 = load i32, i32* %1286, align 4
  store i32 %1287, i32* %30, align 4
  br label %1329

1288:                                             ; No predecessors!
  br label %1289

1289:                                             ; preds = %1288, %902
  %1290 = load i32, i32* %28, align 4
  %1291 = icmp eq i32 %1290, 69
  br i1 %1291, label %1292, label %1293

1292:                                             ; preds = %1289
  br label %2555

1293:                                             ; preds = %1289
  br label %1294

1294:                                             ; preds = %1293
  store i32 2, i32* %29, align 4
  %1295 = load %struct.tm*, %struct.tm** %15, align 8
  %1296 = getelementptr inbounds %struct.tm, %struct.tm* %1295, i32 0, i32 3
  %1297 = load i32, i32* %1296, align 4
  store i32 %1297, i32* %30, align 4
  br label %1324

1298:                                             ; No predecessors!
  br label %1299

1299:                                             ; preds = %2547, %2529, %2521, %2513, %1298
  store i8 1, i8* %33, align 1
  br label %1336

1300:                                             ; preds = %2356, %2320, %2260, %2256, %1263
  %1301 = load i32, i32* %27, align 4
  %1302 = icmp eq i32 %1301, 0
  br i1 %1302, label %1303, label %1305

1303:                                             ; preds = %1300
  %1304 = load i32, i32* %17, align 4
  store i32 %1304, i32* %27, align 4
  br label %1305

1305:                                             ; preds = %1303, %1300
  %1306 = load i32, i32* %27, align 4
  %1307 = icmp eq i32 %1306, 43
  br i1 %1307, label %1308, label %1321

1308:                                             ; preds = %1305
  %1309 = load i32, i32* %29, align 4
  %1310 = icmp eq i32 %1309, 2
  %1311 = zext i1 %1310 to i64
  %1312 = select i1 %1310, i32 99, i32 9999
  %1313 = load i32, i32* %31, align 4
  %1314 = icmp ult i32 %1312, %1313
  br i1 %1314, label %1319, label %1315

1315:                                             ; preds = %1308
  %1316 = load i32, i32* %29, align 4
  %1317 = load i32, i32* %18, align 4
  %1318 = icmp slt i32 %1316, %1317
  br label %1319

1319:                                             ; preds = %1315, %1308
  %1320 = phi i1 [ true, %1308 ], [ %1318, %1315 ]
  br label %1321

1321:                                             ; preds = %1319, %1305
  %1322 = phi i1 [ false, %1305 ], [ %1320, %1319 ]
  %1323 = zext i1 %1322 to i8
  store i8 %1323, i8* %33, align 1
  br label %1335

1324:                                             ; preds = %1658, %1648, %1294
  %1325 = load i32, i32* %27, align 4
  %1326 = icmp eq i32 %1325, 0
  br i1 %1326, label %1327, label %1328

1327:                                             ; preds = %1324
  store i32 95, i32* %27, align 4
  br label %1328

1328:                                             ; preds = %1327, %1324
  br label %1329

1329:                                             ; preds = %2306, %2287, %2276, %2129, %2115, %2002, %1682, %1640, %1630, %1328, %1284
  %1330 = load i32, i32* %30, align 4
  %1331 = icmp slt i32 %1330, 0
  %1332 = zext i1 %1331 to i8
  store i8 %1332, i8* %32, align 1
  %1333 = load i32, i32* %30, align 4
  store i32 %1333, i32* %31, align 4
  br label %1334

1334:                                             ; preds = %1987, %1692, %1666, %1329
  store i8 0, i8* %33, align 1
  br label %1335

1335:                                             ; preds = %1334, %1321
  store i32 0, i32* %34, align 4
  br label %1336

1336:                                             ; preds = %1335, %1299
  %1337 = load i32, i32* %28, align 4
  %1338 = icmp eq i32 %1337, 79
  br i1 %1338, label %1339, label %1343

1339:                                             ; preds = %1336
  %1340 = load i8, i8* %32, align 1
  %1341 = trunc i8 %1340 to i1
  br i1 %1341, label %1343, label %1342

1342:                                             ; preds = %1339
  br label %1113

1343:                                             ; preds = %1339, %1336
  %1344 = getelementptr inbounds [23 x i8], [23 x i8]* %37, i64 0, i64 0
  %1345 = getelementptr inbounds i8, i8* %1344, i64 23
  store i8* %1345, i8** %36, align 8
  %1346 = load i8, i8* %32, align 1
  %1347 = trunc i8 %1346 to i1
  br i1 %1347, label %1348, label %1351

1348:                                             ; preds = %1343
  %1349 = load i32, i32* %31, align 4
  %1350 = sub i32 0, %1349
  store i32 %1350, i32* %31, align 4
  br label %1351

1351:                                             ; preds = %1348, %1343
  br label %1352

1352:                                             ; preds = %1376, %1351
  %1353 = load i32, i32* %34, align 4
  %1354 = and i32 %1353, 1
  %1355 = icmp ne i32 %1354, 0
  br i1 %1355, label %1356, label %1359

1356:                                             ; preds = %1352
  %1357 = load i8*, i8** %36, align 8
  %1358 = getelementptr inbounds i8, i8* %1357, i32 -1
  store i8* %1358, i8** %36, align 8
  store i8 58, i8* %1358, align 1
  br label %1359

1359:                                             ; preds = %1356, %1352
  %1360 = load i32, i32* %34, align 4
  %1361 = ashr i32 %1360, 1
  store i32 %1361, i32* %34, align 4
  %1362 = load i32, i32* %31, align 4
  %1363 = urem i32 %1362, 10
  %1364 = add i32 %1363, 48
  %1365 = trunc i32 %1364 to i8
  %1366 = load i8*, i8** %36, align 8
  %1367 = getelementptr inbounds i8, i8* %1366, i32 -1
  store i8* %1367, i8** %36, align 8
  store i8 %1365, i8* %1367, align 1
  %1368 = load i32, i32* %31, align 4
  %1369 = udiv i32 %1368, 10
  store i32 %1369, i32* %31, align 4
  br label %1370

1370:                                             ; preds = %1359
  %1371 = load i32, i32* %31, align 4
  %1372 = icmp ne i32 %1371, 0
  br i1 %1372, label %1376, label %1373

1373:                                             ; preds = %1370
  %1374 = load i32, i32* %34, align 4
  %1375 = icmp ne i32 %1374, 0
  br label %1376

1376:                                             ; preds = %1373, %1370
  %1377 = phi i1 [ true, %1370 ], [ %1375, %1373 ]
  br i1 %1377, label %1352, label %1378

1378:                                             ; preds = %1376
  br label %1379

1379:                                             ; preds = %2040, %1378
  %1380 = load i32, i32* %27, align 4
  %1381 = icmp eq i32 %1380, 0
  br i1 %1381, label %1382, label %1383

1382:                                             ; preds = %1379
  store i32 48, i32* %27, align 4
  br label %1383

1383:                                             ; preds = %1382, %1379
  %1384 = load i32, i32* %18, align 4
  %1385 = icmp slt i32 %1384, 0
  br i1 %1385, label %1386, label %1388

1386:                                             ; preds = %1383
  %1387 = load i32, i32* %29, align 4
  store i32 %1387, i32* %18, align 4
  br label %1388

1388:                                             ; preds = %1386, %1383
  %1389 = load i8, i8* %32, align 1
  %1390 = trunc i8 %1389 to i1
  br i1 %1390, label %1391, label %1392

1391:                                             ; preds = %1388
  br label %1397

1392:                                             ; preds = %1388
  %1393 = load i8, i8* %33, align 1
  %1394 = trunc i8 %1393 to i1
  %1395 = zext i1 %1394 to i64
  %1396 = select i1 %1394, i32 43, i32 0
  br label %1397

1397:                                             ; preds = %1392, %1391
  %1398 = phi i32 [ 45, %1391 ], [ %1396, %1392 ]
  %1399 = trunc i32 %1398 to i8
  store i8 %1399, i8* %68, align 1
  %1400 = getelementptr inbounds [23 x i8], [23 x i8]* %37, i64 0, i64 0
  %1401 = getelementptr inbounds i8, i8* %1400, i64 23
  %1402 = load i8*, i8** %36, align 8
  %1403 = ptrtoint i8* %1401 to i64
  %1404 = ptrtoint i8* %1402 to i64
  %1405 = sub i64 %1403, %1404
  %1406 = trunc i64 %1405 to i32
  store i32 %1406, i32* %69, align 4
  %1407 = load i32, i32* %18, align 4
  %1408 = load i8, i8* %68, align 1
  %1409 = icmp ne i8 %1408, 0
  %1410 = xor i1 %1409, true
  %1411 = xor i1 %1410, true
  %1412 = zext i1 %1411 to i32
  %1413 = sub nsw i32 %1407, %1412
  %1414 = load i32, i32* %69, align 4
  %1415 = sub nsw i32 %1413, %1414
  store i32 %1415, i32* %70, align 4
  %1416 = load i32, i32* %27, align 4
  %1417 = icmp eq i32 %1416, 45
  br i1 %1417, label %1421, label %1418

1418:                                             ; preds = %1397
  %1419 = load i32, i32* %70, align 4
  %1420 = icmp sle i32 %1419, 0
  br i1 %1420, label %1421, label %1422

1421:                                             ; preds = %1418, %1397
  br label %1424

1422:                                             ; preds = %1418
  %1423 = load i32, i32* %70, align 4
  br label %1424

1424:                                             ; preds = %1422, %1421
  %1425 = phi i32 [ 0, %1421 ], [ %1423, %1422 ]
  store i32 %1425, i32* %71, align 4
  %1426 = load i8, i8* %68, align 1
  %1427 = icmp ne i8 %1426, 0
  br i1 %1427, label %1428, label %1517

1428:                                             ; preds = %1424
  %1429 = load i32, i32* %27, align 4
  %1430 = icmp eq i32 %1429, 95
  br i1 %1430, label %1431, label %1450

1431:                                             ; preds = %1428
  %1432 = load i8*, i8** %25, align 8
  %1433 = icmp ne i8* %1432, null
  br i1 %1433, label %1434, label %1442

1434:                                             ; preds = %1431
  %1435 = load i8*, i8** %25, align 8
  %1436 = load i32, i32* %71, align 4
  %1437 = sext i32 %1436 to i64
  call void @llvm.memset.p0i8.i64(i8* align 1 %1435, i8 32, i64 %1437, i1 false)
  %1438 = load i32, i32* %71, align 4
  %1439 = load i8*, i8** %25, align 8
  %1440 = sext i32 %1438 to i64
  %1441 = getelementptr inbounds i8, i8* %1439, i64 %1440
  store i8* %1441, i8** %25, align 8
  br label %1442

1442:                                             ; preds = %1434, %1431
  %1443 = load i32, i32* %71, align 4
  %1444 = sext i32 %1443 to i64
  %1445 = load i64, i64* %24, align 8
  %1446 = add i64 %1445, %1444
  store i64 %1446, i64* %24, align 8
  %1447 = load i32, i32* %71, align 4
  %1448 = load i32, i32* %18, align 4
  %1449 = sub nsw i32 %1448, %1447
  store i32 %1449, i32* %18, align 4
  br label %1450

1450:                                             ; preds = %1442, %1428
  br label %1451

1451:                                             ; preds = %1450
  store i64 1, i64* %72, align 8
  %1452 = load i32, i32* %27, align 4
  %1453 = icmp eq i32 %1452, 45
  br i1 %1453, label %1455, label %1454

1454:                                             ; preds = %1451
  br label %1455

1455:                                             ; preds = %1454, %1451
  %1456 = phi i1 [ true, %1451 ], [ false, %1454 ]
  %1457 = zext i1 %1456 to i64
  %1458 = select i1 %1456, i32 0, i32 0
  %1459 = sext i32 %1458 to i64
  store i64 %1459, i64* %73, align 8
  %1460 = load i64, i64* %72, align 8
  %1461 = load i64, i64* %73, align 8
  %1462 = icmp ult i64 %1460, %1461
  br i1 %1462, label %1463, label %1465

1463:                                             ; preds = %1455
  %1464 = load i64, i64* %73, align 8
  br label %1467

1465:                                             ; preds = %1455
  %1466 = load i64, i64* %72, align 8
  br label %1467

1467:                                             ; preds = %1465, %1463
  %1468 = phi i64 [ %1464, %1463 ], [ %1466, %1465 ]
  store i64 %1468, i64* %74, align 8
  %1469 = load i64, i64* %74, align 8
  %1470 = load i64, i64* %13, align 8
  %1471 = load i64, i64* %24, align 8
  %1472 = sub i64 %1470, %1471
  %1473 = icmp uge i64 %1469, %1472
  br i1 %1473, label %1474, label %1475

1474:                                             ; preds = %1467
  store i64 0, i64* %11, align 8
  br label %2684

1475:                                             ; preds = %1467
  %1476 = load i8*, i8** %25, align 8
  %1477 = icmp ne i8* %1476, null
  br i1 %1477, label %1478, label %1510

1478:                                             ; preds = %1475
  %1479 = load i64, i64* %72, align 8
  %1480 = load i64, i64* %73, align 8
  %1481 = icmp ult i64 %1479, %1480
  br i1 %1481, label %1482, label %1504

1482:                                             ; preds = %1478
  %1483 = load i64, i64* %73, align 8
  %1484 = load i64, i64* %72, align 8
  %1485 = sub i64 %1483, %1484
  store i64 %1485, i64* %75, align 8
  %1486 = load i32, i32* %27, align 4
  %1487 = icmp eq i32 %1486, 48
  br i1 %1487, label %1491, label %1488

1488:                                             ; preds = %1482
  %1489 = load i32, i32* %27, align 4
  %1490 = icmp eq i32 %1489, 43
  br i1 %1490, label %1491, label %1497

1491:                                             ; preds = %1488, %1482
  %1492 = load i8*, i8** %25, align 8
  %1493 = load i64, i64* %75, align 8
  call void @llvm.memset.p0i8.i64(i8* align 1 %1492, i8 48, i64 %1493, i1 false)
  %1494 = load i64, i64* %75, align 8
  %1495 = load i8*, i8** %25, align 8
  %1496 = getelementptr inbounds i8, i8* %1495, i64 %1494
  store i8* %1496, i8** %25, align 8
  br label %1503

1497:                                             ; preds = %1488
  %1498 = load i8*, i8** %25, align 8
  %1499 = load i64, i64* %75, align 8
  call void @llvm.memset.p0i8.i64(i8* align 1 %1498, i8 32, i64 %1499, i1 false)
  %1500 = load i64, i64* %75, align 8
  %1501 = load i8*, i8** %25, align 8
  %1502 = getelementptr inbounds i8, i8* %1501, i64 %1500
  store i8* %1502, i8** %25, align 8
  br label %1503

1503:                                             ; preds = %1497, %1491
  br label %1504

1504:                                             ; preds = %1503, %1478
  %1505 = load i8, i8* %68, align 1
  %1506 = load i8*, i8** %25, align 8
  store i8 %1505, i8* %1506, align 1
  %1507 = load i64, i64* %72, align 8
  %1508 = load i8*, i8** %25, align 8
  %1509 = getelementptr inbounds i8, i8* %1508, i64 %1507
  store i8* %1509, i8** %25, align 8
  br label %1510

1510:                                             ; preds = %1504, %1475
  %1511 = load i64, i64* %74, align 8
  %1512 = load i64, i64* %24, align 8
  %1513 = add i64 %1512, %1511
  store i64 %1513, i64* %24, align 8
  br label %1514

1514:                                             ; preds = %1510
  %1515 = load i32, i32* %18, align 4
  %1516 = add nsw i32 %1515, -1
  store i32 %1516, i32* %18, align 4
  br label %1517

1517:                                             ; preds = %1514, %1424
  br label %1518

1518:                                             ; preds = %1517
  %1519 = load i32, i32* %69, align 4
  %1520 = sext i32 %1519 to i64
  store i64 %1520, i64* %76, align 8
  %1521 = load i32, i32* %27, align 4
  %1522 = icmp eq i32 %1521, 45
  br i1 %1522, label %1526, label %1523

1523:                                             ; preds = %1518
  %1524 = load i32, i32* %18, align 4
  %1525 = icmp slt i32 %1524, 0
  br i1 %1525, label %1526, label %1527

1526:                                             ; preds = %1523, %1518
  br label %1529

1527:                                             ; preds = %1523
  %1528 = load i32, i32* %18, align 4
  br label %1529

1529:                                             ; preds = %1527, %1526
  %1530 = phi i32 [ 0, %1526 ], [ %1528, %1527 ]
  %1531 = sext i32 %1530 to i64
  store i64 %1531, i64* %77, align 8
  %1532 = load i64, i64* %76, align 8
  %1533 = load i64, i64* %77, align 8
  %1534 = icmp ult i64 %1532, %1533
  br i1 %1534, label %1535, label %1537

1535:                                             ; preds = %1529
  %1536 = load i64, i64* %77, align 8
  br label %1539

1537:                                             ; preds = %1529
  %1538 = load i64, i64* %76, align 8
  br label %1539

1539:                                             ; preds = %1537, %1535
  %1540 = phi i64 [ %1536, %1535 ], [ %1538, %1537 ]
  store i64 %1540, i64* %78, align 8
  %1541 = load i64, i64* %78, align 8
  %1542 = load i64, i64* %13, align 8
  %1543 = load i64, i64* %24, align 8
  %1544 = sub i64 %1542, %1543
  %1545 = icmp uge i64 %1541, %1544
  br i1 %1545, label %1546, label %1547

1546:                                             ; preds = %1539
  store i64 0, i64* %11, align 8
  br label %2684

1547:                                             ; preds = %1539
  %1548 = load i8*, i8** %25, align 8
  %1549 = icmp ne i8* %1548, null
  br i1 %1549, label %1550, label %1601

1550:                                             ; preds = %1547
  %1551 = load i64, i64* %76, align 8
  %1552 = load i64, i64* %77, align 8
  %1553 = icmp ult i64 %1551, %1552
  br i1 %1553, label %1554, label %1576

1554:                                             ; preds = %1550
  %1555 = load i64, i64* %77, align 8
  %1556 = load i64, i64* %76, align 8
  %1557 = sub i64 %1555, %1556
  store i64 %1557, i64* %79, align 8
  %1558 = load i32, i32* %27, align 4
  %1559 = icmp eq i32 %1558, 48
  br i1 %1559, label %1563, label %1560

1560:                                             ; preds = %1554
  %1561 = load i32, i32* %27, align 4
  %1562 = icmp eq i32 %1561, 43
  br i1 %1562, label %1563, label %1569

1563:                                             ; preds = %1560, %1554
  %1564 = load i8*, i8** %25, align 8
  %1565 = load i64, i64* %79, align 8
  call void @llvm.memset.p0i8.i64(i8* align 1 %1564, i8 48, i64 %1565, i1 false)
  %1566 = load i64, i64* %79, align 8
  %1567 = load i8*, i8** %25, align 8
  %1568 = getelementptr inbounds i8, i8* %1567, i64 %1566
  store i8* %1568, i8** %25, align 8
  br label %1575

1569:                                             ; preds = %1560
  %1570 = load i8*, i8** %25, align 8
  %1571 = load i64, i64* %79, align 8
  call void @llvm.memset.p0i8.i64(i8* align 1 %1570, i8 32, i64 %1571, i1 false)
  %1572 = load i64, i64* %79, align 8
  %1573 = load i8*, i8** %25, align 8
  %1574 = getelementptr inbounds i8, i8* %1573, i64 %1572
  store i8* %1574, i8** %25, align 8
  br label %1575

1575:                                             ; preds = %1569, %1563
  br label %1576

1576:                                             ; preds = %1575, %1550
  %1577 = load i8, i8* %38, align 1
  %1578 = trunc i8 %1577 to i1
  br i1 %1578, label %1579, label %1584

1579:                                             ; preds = %1576
  %1580 = load i8*, i8** %25, align 8
  %1581 = load i8*, i8** %36, align 8
  %1582 = load i64, i64* %76, align 8
  %1583 = call i8* @memcpy_lowcase(i8* %1580, i8* %1581, i64 %1582)
  br label %1597

1584:                                             ; preds = %1576
  %1585 = load i8, i8* %39, align 1
  %1586 = trunc i8 %1585 to i1
  br i1 %1586, label %1587, label %1592

1587:                                             ; preds = %1584
  %1588 = load i8*, i8** %25, align 8
  %1589 = load i8*, i8** %36, align 8
  %1590 = load i64, i64* %76, align 8
  %1591 = call i8* @memcpy_uppcase(i8* %1588, i8* %1589, i64 %1590)
  br label %1596

1592:                                             ; preds = %1584
  %1593 = load i8*, i8** %25, align 8
  %1594 = load i8*, i8** %36, align 8
  %1595 = load i64, i64* %76, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1593, i8* align 1 %1594, i64 %1595, i1 false)
  br label %1596

1596:                                             ; preds = %1592, %1587
  br label %1597

1597:                                             ; preds = %1596, %1579
  %1598 = load i64, i64* %76, align 8
  %1599 = load i8*, i8** %25, align 8
  %1600 = getelementptr inbounds i8, i8* %1599, i64 %1598
  store i8* %1600, i8** %25, align 8
  br label %1601

1601:                                             ; preds = %1597, %1547
  %1602 = load i64, i64* %78, align 8
  %1603 = load i64, i64* %24, align 8
  %1604 = add i64 %1603, %1602
  store i64 %1604, i64* %24, align 8
  br label %1605

1605:                                             ; preds = %1601
  br label %2670

1606:                                             ; preds = %902
  %1607 = load i32, i32* %28, align 4
  %1608 = icmp ne i32 %1607, 0
  br i1 %1608, label %1609, label %1610

1609:                                             ; preds = %1606
  br label %2555

1610:                                             ; preds = %1606
  %1611 = load i32, i32* %27, align 4
  %1612 = icmp eq i32 %1611, 0
  br i1 %1612, label %1613, label %1617

1613:                                             ; preds = %1610
  %1614 = load i32, i32* %18, align 4
  %1615 = icmp slt i32 %1614, 0
  br i1 %1615, label %1616, label %1617

1616:                                             ; preds = %1613
  store i32 43, i32* %27, align 4
  store i32 4, i32* %43, align 4
  br label %1624

1617:                                             ; preds = %1613, %1610
  %1618 = load i32, i32* %18, align 4
  %1619 = sub nsw i32 %1618, 6
  store i32 %1619, i32* %43, align 4
  %1620 = load i32, i32* %43, align 4
  %1621 = icmp slt i32 %1620, 0
  br i1 %1621, label %1622, label %1623

1622:                                             ; preds = %1617
  store i32 0, i32* %43, align 4
  br label %1623

1623:                                             ; preds = %1622, %1617
  br label %1624

1624:                                             ; preds = %1623, %1616
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.360, i64 0, i64 0), i8** %35, align 8
  br label %1022

1625:                                             ; preds = %902
  %1626 = load i32, i32* %28, align 4
  %1627 = icmp eq i32 %1626, 69
  br i1 %1627, label %1628, label %1629

1628:                                             ; preds = %1625
  br label %2555

1629:                                             ; preds = %1625
  br label %1630

1630:                                             ; preds = %1629
  store i32 2, i32* %29, align 4
  %1631 = load %struct.tm*, %struct.tm** %15, align 8
  %1632 = getelementptr inbounds %struct.tm, %struct.tm* %1631, i32 0, i32 2
  %1633 = load i32, i32* %1632, align 8
  store i32 %1633, i32* %30, align 4
  br label %1329

1634:                                             ; No predecessors!
  br label %1635

1635:                                             ; preds = %1634, %902
  %1636 = load i32, i32* %28, align 4
  %1637 = icmp eq i32 %1636, 69
  br i1 %1637, label %1638, label %1639

1638:                                             ; preds = %1635
  br label %2555

1639:                                             ; preds = %1635
  br label %1640

1640:                                             ; preds = %1639
  store i32 2, i32* %29, align 4
  %1641 = load i32, i32* %22, align 4
  store i32 %1641, i32* %30, align 4
  br label %1329

1642:                                             ; No predecessors!
  br label %1643

1643:                                             ; preds = %1642, %902
  %1644 = load i32, i32* %28, align 4
  %1645 = icmp eq i32 %1644, 69
  br i1 %1645, label %1646, label %1647

1646:                                             ; preds = %1643
  br label %2555

1647:                                             ; preds = %1643
  br label %1648

1648:                                             ; preds = %1647
  store i32 2, i32* %29, align 4
  %1649 = load %struct.tm*, %struct.tm** %15, align 8
  %1650 = getelementptr inbounds %struct.tm, %struct.tm* %1649, i32 0, i32 2
  %1651 = load i32, i32* %1650, align 8
  store i32 %1651, i32* %30, align 4
  br label %1324

1652:                                             ; No predecessors!
  br label %1653

1653:                                             ; preds = %1652, %902
  %1654 = load i32, i32* %28, align 4
  %1655 = icmp eq i32 %1654, 69
  br i1 %1655, label %1656, label %1657

1656:                                             ; preds = %1653
  br label %2555

1657:                                             ; preds = %1653
  br label %1658

1658:                                             ; preds = %1657
  store i32 2, i32* %29, align 4
  %1659 = load i32, i32* %22, align 4
  store i32 %1659, i32* %30, align 4
  br label %1324

1660:                                             ; No predecessors!
  br label %1661

1661:                                             ; preds = %1660, %902
  %1662 = load i32, i32* %28, align 4
  %1663 = icmp eq i32 %1662, 69
  br i1 %1663, label %1664, label %1665

1664:                                             ; preds = %1661
  br label %2555

1665:                                             ; preds = %1661
  br label %1666

1666:                                             ; preds = %1665
  store i32 3, i32* %29, align 4
  %1667 = load %struct.tm*, %struct.tm** %15, align 8
  %1668 = getelementptr inbounds %struct.tm, %struct.tm* %1667, i32 0, i32 7
  %1669 = load i32, i32* %1668, align 4
  %1670 = icmp slt i32 %1669, -1
  %1671 = zext i1 %1670 to i8
  store i8 %1671, i8* %32, align 1
  %1672 = load %struct.tm*, %struct.tm** %15, align 8
  %1673 = getelementptr inbounds %struct.tm, %struct.tm* %1672, i32 0, i32 7
  %1674 = load i32, i32* %1673, align 4
  %1675 = add i32 %1674, 1
  store i32 %1675, i32* %31, align 4
  br label %1334

1676:                                             ; No predecessors!
  br label %1677

1677:                                             ; preds = %1676, %902
  %1678 = load i32, i32* %28, align 4
  %1679 = icmp eq i32 %1678, 69
  br i1 %1679, label %1680, label %1681

1680:                                             ; preds = %1677
  br label %2555

1681:                                             ; preds = %1677
  br label %1682

1682:                                             ; preds = %1681
  store i32 2, i32* %29, align 4
  %1683 = load %struct.tm*, %struct.tm** %15, align 8
  %1684 = getelementptr inbounds %struct.tm, %struct.tm* %1683, i32 0, i32 1
  %1685 = load i32, i32* %1684, align 4
  store i32 %1685, i32* %30, align 4
  br label %1329

1686:                                             ; No predecessors!
  br label %1687

1687:                                             ; preds = %1686, %902
  %1688 = load i32, i32* %28, align 4
  %1689 = icmp eq i32 %1688, 69
  br i1 %1689, label %1690, label %1691

1690:                                             ; preds = %1687
  br label %2555

1691:                                             ; preds = %1687
  br label %1692

1692:                                             ; preds = %1691
  store i32 2, i32* %29, align 4
  %1693 = load %struct.tm*, %struct.tm** %15, align 8
  %1694 = getelementptr inbounds %struct.tm, %struct.tm* %1693, i32 0, i32 4
  %1695 = load i32, i32* %1694, align 8
  %1696 = icmp slt i32 %1695, -1
  %1697 = zext i1 %1696 to i8
  store i8 %1697, i8* %32, align 1
  %1698 = load %struct.tm*, %struct.tm** %15, align 8
  %1699 = getelementptr inbounds %struct.tm, %struct.tm* %1698, i32 0, i32 4
  %1700 = load i32, i32* %1699, align 8
  %1701 = add i32 %1700, 1
  store i32 %1701, i32* %31, align 4
  br label %1334

1702:                                             ; No predecessors!
  br label %1703

1703:                                             ; preds = %1702, %902
  %1704 = load i32, i32* %28, align 4
  %1705 = icmp eq i32 %1704, 69
  br i1 %1705, label %1706, label %1707

1706:                                             ; preds = %1703
  br label %2555

1707:                                             ; preds = %1703
  %1708 = load i32, i32* %21, align 4
  store i32 %1708, i32* %80, align 4
  store i32 9, i32* %81, align 4
  %1709 = load i32, i32* %18, align 4
  %1710 = icmp sle i32 %1709, 0
  br i1 %1710, label %1711, label %1713

1711:                                             ; preds = %1707
  %1712 = load i32, i32* %81, align 4
  store i32 %1712, i32* %18, align 4
  br label %1713

1713:                                             ; preds = %1711, %1707
  %1714 = load i32, i32* %81, align 4
  store i32 %1714, i32* %82, align 4
  br label %1715

1715:                                             ; preds = %1730, %1713
  %1716 = load i32, i32* %18, align 4
  %1717 = load i32, i32* %82, align 4
  %1718 = icmp slt i32 %1716, %1717
  br i1 %1718, label %1728, label %1719

1719:                                             ; preds = %1715
  %1720 = load i32, i32* %82, align 4
  %1721 = icmp slt i32 1, %1720
  br i1 %1721, label %1722, label %1726

1722:                                             ; preds = %1719
  %1723 = load i32, i32* %80, align 4
  %1724 = srem i32 %1723, 10
  %1725 = icmp eq i32 %1724, 0
  br label %1726

1726:                                             ; preds = %1722, %1719
  %1727 = phi i1 [ false, %1719 ], [ %1725, %1722 ]
  br label %1728

1728:                                             ; preds = %1726, %1715
  %1729 = phi i1 [ true, %1715 ], [ %1727, %1726 ]
  br i1 %1729, label %1730, label %1735

1730:                                             ; preds = %1728
  %1731 = load i32, i32* %82, align 4
  %1732 = add nsw i32 %1731, -1
  store i32 %1732, i32* %82, align 4
  %1733 = load i32, i32* %80, align 4
  %1734 = sdiv i32 %1733, 10
  store i32 %1734, i32* %80, align 4
  br label %1715

1735:                                             ; preds = %1728
  %1736 = load i32, i32* %82, align 4
  store i32 %1736, i32* %83, align 4
  br label %1737

1737:                                             ; preds = %1751, %1735
  %1738 = load i32, i32* %83, align 4
  %1739 = icmp slt i32 0, %1738
  br i1 %1739, label %1740, label %1754

1740:                                             ; preds = %1737
  %1741 = load i32, i32* %80, align 4
  %1742 = srem i32 %1741, 10
  %1743 = add nsw i32 %1742, 48
  %1744 = trunc i32 %1743 to i8
  %1745 = load i32, i32* %83, align 4
  %1746 = sub nsw i32 %1745, 1
  %1747 = sext i32 %1746 to i64
  %1748 = getelementptr inbounds [23 x i8], [23 x i8]* %37, i64 0, i64 %1747
  store i8 %1744, i8* %1748, align 1
  %1749 = load i32, i32* %80, align 4
  %1750 = sdiv i32 %1749, 10
  store i32 %1750, i32* %80, align 4
  br label %1751

1751:                                             ; preds = %1740
  %1752 = load i32, i32* %83, align 4
  %1753 = add nsw i32 %1752, -1
  store i32 %1753, i32* %83, align 4
  br label %1737

1754:                                             ; preds = %1737
  %1755 = load i32, i32* %27, align 4
  %1756 = icmp ne i32 %1755, 0
  br i1 %1756, label %1758, label %1757

1757:                                             ; preds = %1754
  store i32 48, i32* %27, align 4
  br label %1758

1758:                                             ; preds = %1757, %1754
  br label %1759

1759:                                             ; preds = %1758
  %1760 = load i32, i32* %82, align 4
  %1761 = sext i32 %1760 to i64
  store i64 %1761, i64* %84, align 8
  %1762 = load i32, i32* %27, align 4
  %1763 = icmp eq i32 %1762, 45
  br i1 %1763, label %1765, label %1764

1764:                                             ; preds = %1759
  br label %1765

1765:                                             ; preds = %1764, %1759
  %1766 = phi i1 [ true, %1759 ], [ false, %1764 ]
  %1767 = zext i1 %1766 to i64
  %1768 = select i1 %1766, i32 0, i32 0
  %1769 = sext i32 %1768 to i64
  store i64 %1769, i64* %85, align 8
  %1770 = load i64, i64* %84, align 8
  %1771 = load i64, i64* %85, align 8
  %1772 = icmp ult i64 %1770, %1771
  br i1 %1772, label %1773, label %1775

1773:                                             ; preds = %1765
  %1774 = load i64, i64* %85, align 8
  br label %1777

1775:                                             ; preds = %1765
  %1776 = load i64, i64* %84, align 8
  br label %1777

1777:                                             ; preds = %1775, %1773
  %1778 = phi i64 [ %1774, %1773 ], [ %1776, %1775 ]
  store i64 %1778, i64* %86, align 8
  %1779 = load i64, i64* %86, align 8
  %1780 = load i64, i64* %13, align 8
  %1781 = load i64, i64* %24, align 8
  %1782 = sub i64 %1780, %1781
  %1783 = icmp uge i64 %1779, %1782
  br i1 %1783, label %1784, label %1785

1784:                                             ; preds = %1777
  store i64 0, i64* %11, align 8
  br label %2684

1785:                                             ; preds = %1777
  %1786 = load i8*, i8** %25, align 8
  %1787 = icmp ne i8* %1786, null
  br i1 %1787, label %1788, label %1839

1788:                                             ; preds = %1785
  %1789 = load i64, i64* %84, align 8
  %1790 = load i64, i64* %85, align 8
  %1791 = icmp ult i64 %1789, %1790
  br i1 %1791, label %1792, label %1814

1792:                                             ; preds = %1788
  %1793 = load i64, i64* %85, align 8
  %1794 = load i64, i64* %84, align 8
  %1795 = sub i64 %1793, %1794
  store i64 %1795, i64* %87, align 8
  %1796 = load i32, i32* %27, align 4
  %1797 = icmp eq i32 %1796, 48
  br i1 %1797, label %1801, label %1798

1798:                                             ; preds = %1792
  %1799 = load i32, i32* %27, align 4
  %1800 = icmp eq i32 %1799, 43
  br i1 %1800, label %1801, label %1807

1801:                                             ; preds = %1798, %1792
  %1802 = load i8*, i8** %25, align 8
  %1803 = load i64, i64* %87, align 8
  call void @llvm.memset.p0i8.i64(i8* align 1 %1802, i8 48, i64 %1803, i1 false)
  %1804 = load i64, i64* %87, align 8
  %1805 = load i8*, i8** %25, align 8
  %1806 = getelementptr inbounds i8, i8* %1805, i64 %1804
  store i8* %1806, i8** %25, align 8
  br label %1813

1807:                                             ; preds = %1798
  %1808 = load i8*, i8** %25, align 8
  %1809 = load i64, i64* %87, align 8
  call void @llvm.memset.p0i8.i64(i8* align 1 %1808, i8 32, i64 %1809, i1 false)
  %1810 = load i64, i64* %87, align 8
  %1811 = load i8*, i8** %25, align 8
  %1812 = getelementptr inbounds i8, i8* %1811, i64 %1810
  store i8* %1812, i8** %25, align 8
  br label %1813

1813:                                             ; preds = %1807, %1801
  br label %1814

1814:                                             ; preds = %1813, %1788
  %1815 = load i8, i8* %38, align 1
  %1816 = trunc i8 %1815 to i1
  br i1 %1816, label %1817, label %1822

1817:                                             ; preds = %1814
  %1818 = load i8*, i8** %25, align 8
  %1819 = getelementptr inbounds [23 x i8], [23 x i8]* %37, i64 0, i64 0
  %1820 = load i64, i64* %84, align 8
  %1821 = call i8* @memcpy_lowcase(i8* %1818, i8* %1819, i64 %1820)
  br label %1835

1822:                                             ; preds = %1814
  %1823 = load i8, i8* %39, align 1
  %1824 = trunc i8 %1823 to i1
  br i1 %1824, label %1825, label %1830

1825:                                             ; preds = %1822
  %1826 = load i8*, i8** %25, align 8
  %1827 = getelementptr inbounds [23 x i8], [23 x i8]* %37, i64 0, i64 0
  %1828 = load i64, i64* %84, align 8
  %1829 = call i8* @memcpy_uppcase(i8* %1826, i8* %1827, i64 %1828)
  br label %1834

1830:                                             ; preds = %1822
  %1831 = load i8*, i8** %25, align 8
  %1832 = getelementptr inbounds [23 x i8], [23 x i8]* %37, i64 0, i64 0
  %1833 = load i64, i64* %84, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1831, i8* align 16 %1832, i64 %1833, i1 false)
  br label %1834

1834:                                             ; preds = %1830, %1825
  br label %1835

1835:                                             ; preds = %1834, %1817
  %1836 = load i64, i64* %84, align 8
  %1837 = load i8*, i8** %25, align 8
  %1838 = getelementptr inbounds i8, i8* %1837, i64 %1836
  store i8* %1838, i8** %25, align 8
  br label %1839

1839:                                             ; preds = %1835, %1785
  %1840 = load i64, i64* %86, align 8
  %1841 = load i64, i64* %24, align 8
  %1842 = add i64 %1841, %1840
  store i64 %1842, i64* %24, align 8
  br label %1843

1843:                                             ; preds = %1839
  br label %1844

1844:                                             ; preds = %1843
  store i64 0, i64* %88, align 8
  %1845 = load i32, i32* %27, align 4
  %1846 = icmp eq i32 %1845, 45
  br i1 %1846, label %1852, label %1847

1847:                                             ; preds = %1844
  %1848 = load i32, i32* %18, align 4
  %1849 = load i32, i32* %82, align 4
  %1850 = sub nsw i32 %1848, %1849
  %1851 = icmp slt i32 %1850, 0
  br i1 %1851, label %1852, label %1853

1852:                                             ; preds = %1847, %1844
  br label %1857

1853:                                             ; preds = %1847
  %1854 = load i32, i32* %18, align 4
  %1855 = load i32, i32* %82, align 4
  %1856 = sub nsw i32 %1854, %1855
  br label %1857

1857:                                             ; preds = %1853, %1852
  %1858 = phi i32 [ 0, %1852 ], [ %1856, %1853 ]
  %1859 = sext i32 %1858 to i64
  store i64 %1859, i64* %89, align 8
  %1860 = load i64, i64* %88, align 8
  %1861 = load i64, i64* %89, align 8
  %1862 = icmp ult i64 %1860, %1861
  br i1 %1862, label %1863, label %1865

1863:                                             ; preds = %1857
  %1864 = load i64, i64* %89, align 8
  br label %1867

1865:                                             ; preds = %1857
  %1866 = load i64, i64* %88, align 8
  br label %1867

1867:                                             ; preds = %1865, %1863
  %1868 = phi i64 [ %1864, %1863 ], [ %1866, %1865 ]
  store i64 %1868, i64* %90, align 8
  %1869 = load i64, i64* %90, align 8
  %1870 = load i64, i64* %13, align 8
  %1871 = load i64, i64* %24, align 8
  %1872 = sub i64 %1870, %1871
  %1873 = icmp uge i64 %1869, %1872
  br i1 %1873, label %1874, label %1875

1874:                                             ; preds = %1867
  store i64 0, i64* %11, align 8
  br label %2684

1875:                                             ; preds = %1867
  %1876 = load i8*, i8** %25, align 8
  %1877 = icmp ne i8* %1876, null
  br i1 %1877, label %1878, label %1908

1878:                                             ; preds = %1875
  %1879 = load i64, i64* %88, align 8
  %1880 = load i64, i64* %89, align 8
  %1881 = icmp ult i64 %1879, %1880
  br i1 %1881, label %1882, label %1904

1882:                                             ; preds = %1878
  %1883 = load i64, i64* %89, align 8
  %1884 = load i64, i64* %88, align 8
  %1885 = sub i64 %1883, %1884
  store i64 %1885, i64* %91, align 8
  %1886 = load i32, i32* %27, align 4
  %1887 = icmp eq i32 %1886, 48
  br i1 %1887, label %1891, label %1888

1888:                                             ; preds = %1882
  %1889 = load i32, i32* %27, align 4
  %1890 = icmp eq i32 %1889, 43
  br i1 %1890, label %1891, label %1897

1891:                                             ; preds = %1888, %1882
  %1892 = load i8*, i8** %25, align 8
  %1893 = load i64, i64* %91, align 8
  call void @llvm.memset.p0i8.i64(i8* align 1 %1892, i8 48, i64 %1893, i1 false)
  %1894 = load i64, i64* %91, align 8
  %1895 = load i8*, i8** %25, align 8
  %1896 = getelementptr inbounds i8, i8* %1895, i64 %1894
  store i8* %1896, i8** %25, align 8
  br label %1903

1897:                                             ; preds = %1888
  %1898 = load i8*, i8** %25, align 8
  %1899 = load i64, i64* %91, align 8
  call void @llvm.memset.p0i8.i64(i8* align 1 %1898, i8 32, i64 %1899, i1 false)
  %1900 = load i64, i64* %91, align 8
  %1901 = load i8*, i8** %25, align 8
  %1902 = getelementptr inbounds i8, i8* %1901, i64 %1900
  store i8* %1902, i8** %25, align 8
  br label %1903

1903:                                             ; preds = %1897, %1891
  br label %1904

1904:                                             ; preds = %1903, %1878
  %1905 = load i64, i64* %88, align 8
  %1906 = load i8*, i8** %25, align 8
  %1907 = getelementptr inbounds i8, i8* %1906, i64 %1905
  store i8* %1907, i8** %25, align 8
  br label %1908

1908:                                             ; preds = %1904, %1875
  %1909 = load i64, i64* %90, align 8
  %1910 = load i64, i64* %24, align 8
  %1911 = add i64 %1910, %1909
  store i64 %1911, i64* %24, align 8
  br label %1912

1912:                                             ; preds = %1908
  br label %2670

1913:                                             ; preds = %902
  br label %1914

1914:                                             ; preds = %1913
  store i64 1, i64* %92, align 8
  %1915 = load i32, i32* %27, align 4
  %1916 = icmp eq i32 %1915, 45
  br i1 %1916, label %1920, label %1917

1917:                                             ; preds = %1914
  %1918 = load i32, i32* %18, align 4
  %1919 = icmp slt i32 %1918, 0
  br i1 %1919, label %1920, label %1921

1920:                                             ; preds = %1917, %1914
  br label %1923

1921:                                             ; preds = %1917
  %1922 = load i32, i32* %18, align 4
  br label %1923

1923:                                             ; preds = %1921, %1920
  %1924 = phi i32 [ 0, %1920 ], [ %1922, %1921 ]
  %1925 = sext i32 %1924 to i64
  store i64 %1925, i64* %93, align 8
  %1926 = load i64, i64* %92, align 8
  %1927 = load i64, i64* %93, align 8
  %1928 = icmp ult i64 %1926, %1927
  br i1 %1928, label %1929, label %1931

1929:                                             ; preds = %1923
  %1930 = load i64, i64* %93, align 8
  br label %1933

1931:                                             ; preds = %1923
  %1932 = load i64, i64* %92, align 8
  br label %1933

1933:                                             ; preds = %1931, %1929
  %1934 = phi i64 [ %1930, %1929 ], [ %1932, %1931 ]
  store i64 %1934, i64* %94, align 8
  %1935 = load i64, i64* %94, align 8
  %1936 = load i64, i64* %13, align 8
  %1937 = load i64, i64* %24, align 8
  %1938 = sub i64 %1936, %1937
  %1939 = icmp uge i64 %1935, %1938
  br i1 %1939, label %1940, label %1941

1940:                                             ; preds = %1933
  store i64 0, i64* %11, align 8
  br label %2684

1941:                                             ; preds = %1933
  %1942 = load i8*, i8** %25, align 8
  %1943 = icmp ne i8* %1942, null
  br i1 %1943, label %1944, label %1975

1944:                                             ; preds = %1941
  %1945 = load i64, i64* %92, align 8
  %1946 = load i64, i64* %93, align 8
  %1947 = icmp ult i64 %1945, %1946
  br i1 %1947, label %1948, label %1970

1948:                                             ; preds = %1944
  %1949 = load i64, i64* %93, align 8
  %1950 = load i64, i64* %92, align 8
  %1951 = sub i64 %1949, %1950
  store i64 %1951, i64* %95, align 8
  %1952 = load i32, i32* %27, align 4
  %1953 = icmp eq i32 %1952, 48
  br i1 %1953, label %1957, label %1954

1954:                                             ; preds = %1948
  %1955 = load i32, i32* %27, align 4
  %1956 = icmp eq i32 %1955, 43
  br i1 %1956, label %1957, label %1963

1957:                                             ; preds = %1954, %1948
  %1958 = load i8*, i8** %25, align 8
  %1959 = load i64, i64* %95, align 8
  call void @llvm.memset.p0i8.i64(i8* align 1 %1958, i8 48, i64 %1959, i1 false)
  %1960 = load i64, i64* %95, align 8
  %1961 = load i8*, i8** %25, align 8
  %1962 = getelementptr inbounds i8, i8* %1961, i64 %1960
  store i8* %1962, i8** %25, align 8
  br label %1969

1963:                                             ; preds = %1954
  %1964 = load i8*, i8** %25, align 8
  %1965 = load i64, i64* %95, align 8
  call void @llvm.memset.p0i8.i64(i8* align 1 %1964, i8 32, i64 %1965, i1 false)
  %1966 = load i64, i64* %95, align 8
  %1967 = load i8*, i8** %25, align 8
  %1968 = getelementptr inbounds i8, i8* %1967, i64 %1966
  store i8* %1968, i8** %25, align 8
  br label %1969

1969:                                             ; preds = %1963, %1957
  br label %1970

1970:                                             ; preds = %1969, %1944
  %1971 = load i8*, i8** %25, align 8
  store i8 10, i8* %1971, align 1
  %1972 = load i64, i64* %92, align 8
  %1973 = load i8*, i8** %25, align 8
  %1974 = getelementptr inbounds i8, i8* %1973, i64 %1972
  store i8* %1974, i8** %25, align 8
  br label %1975

1975:                                             ; preds = %1970, %1941
  %1976 = load i64, i64* %94, align 8
  %1977 = load i64, i64* %24, align 8
  %1978 = add i64 %1977, %1976
  store i64 %1978, i64* %24, align 8
  br label %1979

1979:                                             ; preds = %1975
  br label %2670

1980:                                             ; preds = %902
  store i8 1, i8* %38, align 1
  store i32 112, i32* %42, align 4
  br label %1981

1981:                                             ; preds = %1980, %902
  %1982 = load i8, i8* %41, align 1
  %1983 = trunc i8 %1982 to i1
  br i1 %1983, label %1984, label %1985

1984:                                             ; preds = %1981
  store i8 0, i8* %39, align 1
  store i8 1, i8* %38, align 1
  br label %1985

1985:                                             ; preds = %1984, %1981
  br label %1113

1986:                                             ; preds = %902
  br label %1987

1987:                                             ; preds = %1986
  store i32 1, i32* %29, align 4
  store i8 0, i8* %32, align 1
  %1988 = load %struct.tm*, %struct.tm** %15, align 8
  %1989 = getelementptr inbounds %struct.tm, %struct.tm* %1988, i32 0, i32 4
  %1990 = load i32, i32* %1989, align 8
  %1991 = mul nsw i32 %1990, 11
  %1992 = ashr i32 %1991, 5
  %1993 = add nsw i32 %1992, 1
  store i32 %1993, i32* %31, align 4
  br label %1334

1994:                                             ; No predecessors!
  br label %2670

1995:                                             ; preds = %902
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3.361, i64 0, i64 0), i8** %35, align 8
  br label %1021

1996:                                             ; preds = %902
  br label %1113

1997:                                             ; preds = %902
  %1998 = load i32, i32* %28, align 4
  %1999 = icmp eq i32 %1998, 69
  br i1 %1999, label %2000, label %2001

2000:                                             ; preds = %1997
  br label %2555

2001:                                             ; preds = %1997
  br label %2002

2002:                                             ; preds = %2001
  store i32 2, i32* %29, align 4
  %2003 = load %struct.tm*, %struct.tm** %15, align 8
  %2004 = getelementptr inbounds %struct.tm, %struct.tm* %2003, i32 0, i32 0
  %2005 = load i32, i32* %2004, align 8
  store i32 %2005, i32* %30, align 4
  br label %1329

2006:                                             ; No predecessors!
  br label %2007

2007:                                             ; preds = %2006, %902
  %2008 = load %struct.tm*, %struct.tm** %15, align 8
  %2009 = bitcast %struct.tm* %96 to i8*
  %2010 = bitcast %struct.tm* %2008 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2009, i8* align 8 %2010, i64 56, i1 false)
  %2011 = load %struct.tm_zone*, %struct.tm_zone** %20, align 8
  %2012 = call i64 @mktime_z(%struct.tm_zone* %2011, %struct.tm* %96)
  store i64 %2012, i64* %97, align 8
  %2013 = getelementptr inbounds [23 x i8], [23 x i8]* %37, i64 0, i64 0
  %2014 = getelementptr inbounds i8, i8* %2013, i64 23
  store i8* %2014, i8** %36, align 8
  %2015 = load i64, i64* %97, align 8
  %2016 = icmp slt i64 %2015, 0
  %2017 = zext i1 %2016 to i8
  store i8 %2017, i8* %32, align 1
  br label %2018

2018:                                             ; preds = %2037, %2007
  %2019 = load i64, i64* %97, align 8
  %2020 = srem i64 %2019, 10
  %2021 = trunc i64 %2020 to i32
  store i32 %2021, i32* %98, align 4
  %2022 = load i64, i64* %97, align 8
  %2023 = sdiv i64 %2022, 10
  store i64 %2023, i64* %97, align 8
  %2024 = load i8, i8* %32, align 1
  %2025 = trunc i8 %2024 to i1
  br i1 %2025, label %2026, label %2029

2026:                                             ; preds = %2018
  %2027 = load i32, i32* %98, align 4
  %2028 = sub nsw i32 0, %2027
  br label %2031

2029:                                             ; preds = %2018
  %2030 = load i32, i32* %98, align 4
  br label %2031

2031:                                             ; preds = %2029, %2026
  %2032 = phi i32 [ %2028, %2026 ], [ %2030, %2029 ]
  %2033 = add nsw i32 %2032, 48
  %2034 = trunc i32 %2033 to i8
  %2035 = load i8*, i8** %36, align 8
  %2036 = getelementptr inbounds i8, i8* %2035, i32 -1
  store i8* %2036, i8** %36, align 8
  store i8 %2034, i8* %2036, align 1
  br label %2037

2037:                                             ; preds = %2031
  %2038 = load i64, i64* %97, align 8
  %2039 = icmp ne i64 %2038, 0
  br i1 %2039, label %2018, label %2040

2040:                                             ; preds = %2037
  store i32 1, i32* %29, align 4
  store i8 0, i8* %33, align 1
  br label %1379

2041:                                             ; preds = %902
  %2042 = load i32, i32* %28, align 4
  %2043 = icmp eq i32 %2042, 79
  br i1 %2043, label %2044, label %2045

2044:                                             ; preds = %2041
  br label %2555

2045:                                             ; preds = %2041
  br label %1113

2046:                                             ; preds = %902
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4.362, i64 0, i64 0), i8** %35, align 8
  br label %1021

2047:                                             ; preds = %902
  br label %2048

2048:                                             ; preds = %2047
  store i64 1, i64* %99, align 8
  %2049 = load i32, i32* %27, align 4
  %2050 = icmp eq i32 %2049, 45
  br i1 %2050, label %2054, label %2051

2051:                                             ; preds = %2048
  %2052 = load i32, i32* %18, align 4
  %2053 = icmp slt i32 %2052, 0
  br i1 %2053, label %2054, label %2055

2054:                                             ; preds = %2051, %2048
  br label %2057

2055:                                             ; preds = %2051
  %2056 = load i32, i32* %18, align 4
  br label %2057

2057:                                             ; preds = %2055, %2054
  %2058 = phi i32 [ 0, %2054 ], [ %2056, %2055 ]
  %2059 = sext i32 %2058 to i64
  store i64 %2059, i64* %100, align 8
  %2060 = load i64, i64* %99, align 8
  %2061 = load i64, i64* %100, align 8
  %2062 = icmp ult i64 %2060, %2061
  br i1 %2062, label %2063, label %2065

2063:                                             ; preds = %2057
  %2064 = load i64, i64* %100, align 8
  br label %2067

2065:                                             ; preds = %2057
  %2066 = load i64, i64* %99, align 8
  br label %2067

2067:                                             ; preds = %2065, %2063
  %2068 = phi i64 [ %2064, %2063 ], [ %2066, %2065 ]
  store i64 %2068, i64* %101, align 8
  %2069 = load i64, i64* %101, align 8
  %2070 = load i64, i64* %13, align 8
  %2071 = load i64, i64* %24, align 8
  %2072 = sub i64 %2070, %2071
  %2073 = icmp uge i64 %2069, %2072
  br i1 %2073, label %2074, label %2075

2074:                                             ; preds = %2067
  store i64 0, i64* %11, align 8
  br label %2684

2075:                                             ; preds = %2067
  %2076 = load i8*, i8** %25, align 8
  %2077 = icmp ne i8* %2076, null
  br i1 %2077, label %2078, label %2109

2078:                                             ; preds = %2075
  %2079 = load i64, i64* %99, align 8
  %2080 = load i64, i64* %100, align 8
  %2081 = icmp ult i64 %2079, %2080
  br i1 %2081, label %2082, label %2104

2082:                                             ; preds = %2078
  %2083 = load i64, i64* %100, align 8
  %2084 = load i64, i64* %99, align 8
  %2085 = sub i64 %2083, %2084
  store i64 %2085, i64* %102, align 8
  %2086 = load i32, i32* %27, align 4
  %2087 = icmp eq i32 %2086, 48
  br i1 %2087, label %2091, label %2088

2088:                                             ; preds = %2082
  %2089 = load i32, i32* %27, align 4
  %2090 = icmp eq i32 %2089, 43
  br i1 %2090, label %2091, label %2097

2091:                                             ; preds = %2088, %2082
  %2092 = load i8*, i8** %25, align 8
  %2093 = load i64, i64* %102, align 8
  call void @llvm.memset.p0i8.i64(i8* align 1 %2092, i8 48, i64 %2093, i1 false)
  %2094 = load i64, i64* %102, align 8
  %2095 = load i8*, i8** %25, align 8
  %2096 = getelementptr inbounds i8, i8* %2095, i64 %2094
  store i8* %2096, i8** %25, align 8
  br label %2103

2097:                                             ; preds = %2088
  %2098 = load i8*, i8** %25, align 8
  %2099 = load i64, i64* %102, align 8
  call void @llvm.memset.p0i8.i64(i8* align 1 %2098, i8 32, i64 %2099, i1 false)
  %2100 = load i64, i64* %102, align 8
  %2101 = load i8*, i8** %25, align 8
  %2102 = getelementptr inbounds i8, i8* %2101, i64 %2100
  store i8* %2102, i8** %25, align 8
  br label %2103

2103:                                             ; preds = %2097, %2091
  br label %2104

2104:                                             ; preds = %2103, %2078
  %2105 = load i8*, i8** %25, align 8
  store i8 9, i8* %2105, align 1
  %2106 = load i64, i64* %99, align 8
  %2107 = load i8*, i8** %25, align 8
  %2108 = getelementptr inbounds i8, i8* %2107, i64 %2106
  store i8* %2108, i8** %25, align 8
  br label %2109

2109:                                             ; preds = %2104, %2075
  %2110 = load i64, i64* %101, align 8
  %2111 = load i64, i64* %24, align 8
  %2112 = add i64 %2111, %2110
  store i64 %2112, i64* %24, align 8
  br label %2113

2113:                                             ; preds = %2109
  br label %2670

2114:                                             ; preds = %902
  br label %2115

2115:                                             ; preds = %2114
  store i32 1, i32* %29, align 4
  %2116 = load %struct.tm*, %struct.tm** %15, align 8
  %2117 = getelementptr inbounds %struct.tm, %struct.tm* %2116, i32 0, i32 6
  %2118 = load i32, i32* %2117, align 8
  %2119 = sub nsw i32 %2118, 1
  %2120 = add nsw i32 %2119, 7
  %2121 = srem i32 %2120, 7
  %2122 = add nsw i32 %2121, 1
  store i32 %2122, i32* %30, align 4
  br label %1329

2123:                                             ; No predecessors!
  br label %2124

2124:                                             ; preds = %2123, %902
  %2125 = load i32, i32* %28, align 4
  %2126 = icmp eq i32 %2125, 69
  br i1 %2126, label %2127, label %2128

2127:                                             ; preds = %2124
  br label %2555

2128:                                             ; preds = %2124
  br label %2129

2129:                                             ; preds = %2128
  store i32 2, i32* %29, align 4
  %2130 = load %struct.tm*, %struct.tm** %15, align 8
  %2131 = getelementptr inbounds %struct.tm, %struct.tm* %2130, i32 0, i32 7
  %2132 = load i32, i32* %2131, align 4
  %2133 = load %struct.tm*, %struct.tm** %15, align 8
  %2134 = getelementptr inbounds %struct.tm, %struct.tm* %2133, i32 0, i32 6
  %2135 = load i32, i32* %2134, align 8
  %2136 = sub nsw i32 %2132, %2135
  %2137 = add nsw i32 %2136, 7
  %2138 = sdiv i32 %2137, 7
  store i32 %2138, i32* %30, align 4
  br label %1329

2139:                                             ; No predecessors!
  br label %2140

2140:                                             ; preds = %2139, %902, %902, %902
  %2141 = load i32, i32* %28, align 4
  %2142 = icmp eq i32 %2141, 69
  br i1 %2142, label %2143, label %2144

2143:                                             ; preds = %2140
  br label %2555

2144:                                             ; preds = %2140
  %2145 = load %struct.tm*, %struct.tm** %15, align 8
  %2146 = getelementptr inbounds %struct.tm, %struct.tm* %2145, i32 0, i32 5
  %2147 = load i32, i32* %2146, align 4
  %2148 = load %struct.tm*, %struct.tm** %15, align 8
  %2149 = getelementptr inbounds %struct.tm, %struct.tm* %2148, i32 0, i32 5
  %2150 = load i32, i32* %2149, align 4
  %2151 = icmp slt i32 %2150, 0
  %2152 = zext i1 %2151 to i64
  %2153 = select i1 %2151, i32 300, i32 -100
  %2154 = add nsw i32 %2147, %2153
  store i32 %2154, i32* %103, align 4
  store i32 0, i32* %104, align 4
  %2155 = load %struct.tm*, %struct.tm** %15, align 8
  %2156 = getelementptr inbounds %struct.tm, %struct.tm* %2155, i32 0, i32 7
  %2157 = load i32, i32* %2156, align 4
  %2158 = load %struct.tm*, %struct.tm** %15, align 8
  %2159 = getelementptr inbounds %struct.tm, %struct.tm* %2158, i32 0, i32 6
  %2160 = load i32, i32* %2159, align 8
  %2161 = call i32 @iso_week_days.363(i32 %2157, i32 %2160)
  store i32 %2161, i32* %105, align 4
  %2162 = load i32, i32* %105, align 4
  %2163 = icmp slt i32 %2162, 0
  br i1 %2163, label %2164, label %2193

2164:                                             ; preds = %2144
  store i32 -1, i32* %104, align 4
  %2165 = load %struct.tm*, %struct.tm** %15, align 8
  %2166 = getelementptr inbounds %struct.tm, %struct.tm* %2165, i32 0, i32 7
  %2167 = load i32, i32* %2166, align 4
  %2168 = load i32, i32* %103, align 4
  %2169 = sub nsw i32 %2168, 1
  %2170 = srem i32 %2169, 4
  %2171 = icmp eq i32 %2170, 0
  br i1 %2171, label %2172, label %2184

2172:                                             ; preds = %2164
  %2173 = load i32, i32* %103, align 4
  %2174 = sub nsw i32 %2173, 1
  %2175 = srem i32 %2174, 100
  %2176 = icmp ne i32 %2175, 0
  br i1 %2176, label %2182, label %2177

2177:                                             ; preds = %2172
  %2178 = load i32, i32* %103, align 4
  %2179 = sub nsw i32 %2178, 1
  %2180 = srem i32 %2179, 400
  %2181 = icmp eq i32 %2180, 0
  br label %2182

2182:                                             ; preds = %2177, %2172
  %2183 = phi i1 [ true, %2172 ], [ %2181, %2177 ]
  br label %2184

2184:                                             ; preds = %2182, %2164
  %2185 = phi i1 [ false, %2164 ], [ %2183, %2182 ]
  %2186 = zext i1 %2185 to i32
  %2187 = add nsw i32 365, %2186
  %2188 = add nsw i32 %2167, %2187
  %2189 = load %struct.tm*, %struct.tm** %15, align 8
  %2190 = getelementptr inbounds %struct.tm, %struct.tm* %2189, i32 0, i32 6
  %2191 = load i32, i32* %2190, align 8
  %2192 = call i32 @iso_week_days.363(i32 %2188, i32 %2191)
  store i32 %2192, i32* %105, align 4
  br label %2224

2193:                                             ; preds = %2144
  %2194 = load %struct.tm*, %struct.tm** %15, align 8
  %2195 = getelementptr inbounds %struct.tm, %struct.tm* %2194, i32 0, i32 7
  %2196 = load i32, i32* %2195, align 4
  %2197 = load i32, i32* %103, align 4
  %2198 = srem i32 %2197, 4
  %2199 = icmp eq i32 %2198, 0
  br i1 %2199, label %2200, label %2210

2200:                                             ; preds = %2193
  %2201 = load i32, i32* %103, align 4
  %2202 = srem i32 %2201, 100
  %2203 = icmp ne i32 %2202, 0
  br i1 %2203, label %2208, label %2204

2204:                                             ; preds = %2200
  %2205 = load i32, i32* %103, align 4
  %2206 = srem i32 %2205, 400
  %2207 = icmp eq i32 %2206, 0
  br label %2208

2208:                                             ; preds = %2204, %2200
  %2209 = phi i1 [ true, %2200 ], [ %2207, %2204 ]
  br label %2210

2210:                                             ; preds = %2208, %2193
  %2211 = phi i1 [ false, %2193 ], [ %2209, %2208 ]
  %2212 = zext i1 %2211 to i32
  %2213 = add nsw i32 365, %2212
  %2214 = sub nsw i32 %2196, %2213
  %2215 = load %struct.tm*, %struct.tm** %15, align 8
  %2216 = getelementptr inbounds %struct.tm, %struct.tm* %2215, i32 0, i32 6
  %2217 = load i32, i32* %2216, align 8
  %2218 = call i32 @iso_week_days.363(i32 %2214, i32 %2217)
  store i32 %2218, i32* %106, align 4
  %2219 = load i32, i32* %106, align 4
  %2220 = icmp sle i32 0, %2219
  br i1 %2220, label %2221, label %2223

2221:                                             ; preds = %2210
  store i32 1, i32* %104, align 4
  %2222 = load i32, i32* %106, align 4
  store i32 %2222, i32* %105, align 4
  br label %2223

2223:                                             ; preds = %2221, %2210
  br label %2224

2224:                                             ; preds = %2223, %2184
  %2225 = load i8*, i8** %26, align 8
  %2226 = load i8, i8* %2225, align 1
  %2227 = sext i8 %2226 to i32
  switch i32 %2227, label %2275 [
    i32 103, label %2228
    i32 71, label %2259
  ]

2228:                                             ; preds = %2224
  %2229 = load %struct.tm*, %struct.tm** %15, align 8
  %2230 = getelementptr inbounds %struct.tm, %struct.tm* %2229, i32 0, i32 5
  %2231 = load i32, i32* %2230, align 4
  %2232 = srem i32 %2231, 100
  %2233 = load i32, i32* %104, align 4
  %2234 = add nsw i32 %2232, %2233
  %2235 = srem i32 %2234, 100
  store i32 %2235, i32* %107, align 4
  br label %2236

2236:                                             ; preds = %2228
  store i32 2, i32* %29, align 4
  store i8 0, i8* %32, align 1
  %2237 = load i32, i32* %107, align 4
  %2238 = icmp sle i32 0, %2237
  br i1 %2238, label %2239, label %2241

2239:                                             ; preds = %2236
  %2240 = load i32, i32* %107, align 4
  br label %2256

2241:                                             ; preds = %2236
  %2242 = load %struct.tm*, %struct.tm** %15, align 8
  %2243 = getelementptr inbounds %struct.tm, %struct.tm* %2242, i32 0, i32 5
  %2244 = load i32, i32* %2243, align 4
  %2245 = load i32, i32* %104, align 4
  %2246 = sub nsw i32 -1900, %2245
  %2247 = icmp slt i32 %2244, %2246
  br i1 %2247, label %2248, label %2251

2248:                                             ; preds = %2241
  %2249 = load i32, i32* %107, align 4
  %2250 = sub nsw i32 0, %2249
  br label %2254

2251:                                             ; preds = %2241
  %2252 = load i32, i32* %107, align 4
  %2253 = add nsw i32 %2252, 100
  br label %2254

2254:                                             ; preds = %2251, %2248
  %2255 = phi i32 [ %2250, %2248 ], [ %2253, %2251 ]
  br label %2256

2256:                                             ; preds = %2254, %2239
  %2257 = phi i32 [ %2240, %2239 ], [ %2255, %2254 ]
  store i32 %2257, i32* %31, align 4
  br label %1300

2258:                                             ; No predecessors!
  br label %2259

2259:                                             ; preds = %2258, %2224
  br label %2260

2260:                                             ; preds = %2259
  store i32 4, i32* %29, align 4
  %2261 = load %struct.tm*, %struct.tm** %15, align 8
  %2262 = getelementptr inbounds %struct.tm, %struct.tm* %2261, i32 0, i32 5
  %2263 = load i32, i32* %2262, align 4
  %2264 = load i32, i32* %104, align 4
  %2265 = sub nsw i32 -1900, %2264
  %2266 = icmp slt i32 %2263, %2265
  %2267 = zext i1 %2266 to i8
  store i8 %2267, i8* %32, align 1
  %2268 = load %struct.tm*, %struct.tm** %15, align 8
  %2269 = getelementptr inbounds %struct.tm, %struct.tm* %2268, i32 0, i32 5
  %2270 = load i32, i32* %2269, align 4
  %2271 = add i32 %2270, 1900
  %2272 = load i32, i32* %104, align 4
  %2273 = add i32 %2271, %2272
  store i32 %2273, i32* %31, align 4
  br label %1300

2274:                                             ; No predecessors!
  br label %2275

2275:                                             ; preds = %2274, %2224
  br label %2276

2276:                                             ; preds = %2275
  store i32 2, i32* %29, align 4
  %2277 = load i32, i32* %105, align 4
  %2278 = sdiv i32 %2277, 7
  %2279 = add nsw i32 %2278, 1
  store i32 %2279, i32* %30, align 4
  br label %1329

2280:                                             ; No predecessors!
  br label %2281

2281:                                             ; preds = %2280
  br label %2282

2282:                                             ; preds = %2281, %902
  %2283 = load i32, i32* %28, align 4
  %2284 = icmp eq i32 %2283, 69
  br i1 %2284, label %2285, label %2286

2285:                                             ; preds = %2282
  br label %2555

2286:                                             ; preds = %2282
  br label %2287

2287:                                             ; preds = %2286
  store i32 2, i32* %29, align 4
  %2288 = load %struct.tm*, %struct.tm** %15, align 8
  %2289 = getelementptr inbounds %struct.tm, %struct.tm* %2288, i32 0, i32 7
  %2290 = load i32, i32* %2289, align 4
  %2291 = load %struct.tm*, %struct.tm** %15, align 8
  %2292 = getelementptr inbounds %struct.tm, %struct.tm* %2291, i32 0, i32 6
  %2293 = load i32, i32* %2292, align 8
  %2294 = sub nsw i32 %2293, 1
  %2295 = add nsw i32 %2294, 7
  %2296 = srem i32 %2295, 7
  %2297 = sub nsw i32 %2290, %2296
  %2298 = add nsw i32 %2297, 7
  %2299 = sdiv i32 %2298, 7
  store i32 %2299, i32* %30, align 4
  br label %1329

2300:                                             ; No predecessors!
  br label %2301

2301:                                             ; preds = %2300, %902
  %2302 = load i32, i32* %28, align 4
  %2303 = icmp eq i32 %2302, 69
  br i1 %2303, label %2304, label %2305

2304:                                             ; preds = %2301
  br label %2555

2305:                                             ; preds = %2301
  br label %2306

2306:                                             ; preds = %2305
  store i32 1, i32* %29, align 4
  %2307 = load %struct.tm*, %struct.tm** %15, align 8
  %2308 = getelementptr inbounds %struct.tm, %struct.tm* %2307, i32 0, i32 6
  %2309 = load i32, i32* %2308, align 8
  store i32 %2309, i32* %30, align 4
  br label %1329

2310:                                             ; No predecessors!
  br label %2311

2311:                                             ; preds = %2310, %902
  %2312 = load i32, i32* %28, align 4
  %2313 = icmp eq i32 %2312, 69
  br i1 %2313, label %2314, label %2315

2314:                                             ; preds = %2311
  br label %1113

2315:                                             ; preds = %2311
  %2316 = load i32, i32* %28, align 4
  %2317 = icmp eq i32 %2316, 79
  br i1 %2317, label %2318, label %2319

2318:                                             ; preds = %2315
  br label %2555

2319:                                             ; preds = %2315
  br label %2320

2320:                                             ; preds = %2319
  store i32 4, i32* %29, align 4
  %2321 = load %struct.tm*, %struct.tm** %15, align 8
  %2322 = getelementptr inbounds %struct.tm, %struct.tm* %2321, i32 0, i32 5
  %2323 = load i32, i32* %2322, align 4
  %2324 = icmp slt i32 %2323, -1900
  %2325 = zext i1 %2324 to i8
  store i8 %2325, i8* %32, align 1
  %2326 = load %struct.tm*, %struct.tm** %15, align 8
  %2327 = getelementptr inbounds %struct.tm, %struct.tm* %2326, i32 0, i32 5
  %2328 = load i32, i32* %2327, align 4
  %2329 = add i32 %2328, 1900
  store i32 %2329, i32* %31, align 4
  br label %1300

2330:                                             ; No predecessors!
  br label %2331

2331:                                             ; preds = %2330, %902
  %2332 = load i32, i32* %28, align 4
  %2333 = icmp eq i32 %2332, 69
  br i1 %2333, label %2334, label %2335

2334:                                             ; preds = %2331
  br label %1113

2335:                                             ; preds = %2331
  %2336 = load %struct.tm*, %struct.tm** %15, align 8
  %2337 = getelementptr inbounds %struct.tm, %struct.tm* %2336, i32 0, i32 5
  %2338 = load i32, i32* %2337, align 4
  %2339 = srem i32 %2338, 100
  store i32 %2339, i32* %108, align 4
  %2340 = load i32, i32* %108, align 4
  %2341 = icmp slt i32 %2340, 0
  br i1 %2341, label %2342, label %2355

2342:                                             ; preds = %2335
  %2343 = load %struct.tm*, %struct.tm** %15, align 8
  %2344 = getelementptr inbounds %struct.tm, %struct.tm* %2343, i32 0, i32 5
  %2345 = load i32, i32* %2344, align 4
  %2346 = icmp slt i32 %2345, -1900
  br i1 %2346, label %2347, label %2350

2347:                                             ; preds = %2342
  %2348 = load i32, i32* %108, align 4
  %2349 = sub nsw i32 0, %2348
  br label %2353

2350:                                             ; preds = %2342
  %2351 = load i32, i32* %108, align 4
  %2352 = add nsw i32 %2351, 100
  br label %2353

2353:                                             ; preds = %2350, %2347
  %2354 = phi i32 [ %2349, %2347 ], [ %2352, %2350 ]
  store i32 %2354, i32* %108, align 4
  br label %2355

2355:                                             ; preds = %2353, %2335
  br label %2356

2356:                                             ; preds = %2355
  store i32 2, i32* %29, align 4
  store i8 0, i8* %32, align 1
  %2357 = load i32, i32* %108, align 4
  store i32 %2357, i32* %31, align 4
  br label %1300

2358:                                             ; No predecessors!
  br label %2359

2359:                                             ; preds = %2358, %902
  %2360 = load i8, i8* %41, align 1
  %2361 = trunc i8 %2360 to i1
  br i1 %2361, label %2362, label %2363

2362:                                             ; preds = %2359
  store i8 0, i8* %39, align 1
  store i8 1, i8* %38, align 1
  br label %2363

2363:                                             ; preds = %2362, %2359
  br label %2364

2364:                                             ; preds = %2363
  %2365 = load i8*, i8** %23, align 8
  %2366 = call i64 @strlen(i8* %2365) #13
  store i64 %2366, i64* %109, align 8
  %2367 = load i32, i32* %27, align 4
  %2368 = icmp eq i32 %2367, 45
  br i1 %2368, label %2372, label %2369

2369:                                             ; preds = %2364
  %2370 = load i32, i32* %18, align 4
  %2371 = icmp slt i32 %2370, 0
  br i1 %2371, label %2372, label %2373

2372:                                             ; preds = %2369, %2364
  br label %2375

2373:                                             ; preds = %2369
  %2374 = load i32, i32* %18, align 4
  br label %2375

2375:                                             ; preds = %2373, %2372
  %2376 = phi i32 [ 0, %2372 ], [ %2374, %2373 ]
  %2377 = sext i32 %2376 to i64
  store i64 %2377, i64* %110, align 8
  %2378 = load i64, i64* %109, align 8
  %2379 = load i64, i64* %110, align 8
  %2380 = icmp ult i64 %2378, %2379
  br i1 %2380, label %2381, label %2383

2381:                                             ; preds = %2375
  %2382 = load i64, i64* %110, align 8
  br label %2385

2383:                                             ; preds = %2375
  %2384 = load i64, i64* %109, align 8
  br label %2385

2385:                                             ; preds = %2383, %2381
  %2386 = phi i64 [ %2382, %2381 ], [ %2384, %2383 ]
  store i64 %2386, i64* %111, align 8
  %2387 = load i64, i64* %111, align 8
  %2388 = load i64, i64* %13, align 8
  %2389 = load i64, i64* %24, align 8
  %2390 = sub i64 %2388, %2389
  %2391 = icmp uge i64 %2387, %2390
  br i1 %2391, label %2392, label %2393

2392:                                             ; preds = %2385
  store i64 0, i64* %11, align 8
  br label %2684

2393:                                             ; preds = %2385
  %2394 = load i8*, i8** %25, align 8
  %2395 = icmp ne i8* %2394, null
  br i1 %2395, label %2396, label %2447

2396:                                             ; preds = %2393
  %2397 = load i64, i64* %109, align 8
  %2398 = load i64, i64* %110, align 8
  %2399 = icmp ult i64 %2397, %2398
  br i1 %2399, label %2400, label %2422

2400:                                             ; preds = %2396
  %2401 = load i64, i64* %110, align 8
  %2402 = load i64, i64* %109, align 8
  %2403 = sub i64 %2401, %2402
  store i64 %2403, i64* %112, align 8
  %2404 = load i32, i32* %27, align 4
  %2405 = icmp eq i32 %2404, 48
  br i1 %2405, label %2409, label %2406

2406:                                             ; preds = %2400
  %2407 = load i32, i32* %27, align 4
  %2408 = icmp eq i32 %2407, 43
  br i1 %2408, label %2409, label %2415

2409:                                             ; preds = %2406, %2400
  %2410 = load i8*, i8** %25, align 8
  %2411 = load i64, i64* %112, align 8
  call void @llvm.memset.p0i8.i64(i8* align 1 %2410, i8 48, i64 %2411, i1 false)
  %2412 = load i64, i64* %112, align 8
  %2413 = load i8*, i8** %25, align 8
  %2414 = getelementptr inbounds i8, i8* %2413, i64 %2412
  store i8* %2414, i8** %25, align 8
  br label %2421

2415:                                             ; preds = %2406
  %2416 = load i8*, i8** %25, align 8
  %2417 = load i64, i64* %112, align 8
  call void @llvm.memset.p0i8.i64(i8* align 1 %2416, i8 32, i64 %2417, i1 false)
  %2418 = load i64, i64* %112, align 8
  %2419 = load i8*, i8** %25, align 8
  %2420 = getelementptr inbounds i8, i8* %2419, i64 %2418
  store i8* %2420, i8** %25, align 8
  br label %2421

2421:                                             ; preds = %2415, %2409
  br label %2422

2422:                                             ; preds = %2421, %2396
  %2423 = load i8, i8* %38, align 1
  %2424 = trunc i8 %2423 to i1
  br i1 %2424, label %2425, label %2430

2425:                                             ; preds = %2422
  %2426 = load i8*, i8** %25, align 8
  %2427 = load i8*, i8** %23, align 8
  %2428 = load i64, i64* %109, align 8
  %2429 = call i8* @memcpy_lowcase(i8* %2426, i8* %2427, i64 %2428)
  br label %2443

2430:                                             ; preds = %2422
  %2431 = load i8, i8* %39, align 1
  %2432 = trunc i8 %2431 to i1
  br i1 %2432, label %2433, label %2438

2433:                                             ; preds = %2430
  %2434 = load i8*, i8** %25, align 8
  %2435 = load i8*, i8** %23, align 8
  %2436 = load i64, i64* %109, align 8
  %2437 = call i8* @memcpy_uppcase(i8* %2434, i8* %2435, i64 %2436)
  br label %2442

2438:                                             ; preds = %2430
  %2439 = load i8*, i8** %25, align 8
  %2440 = load i8*, i8** %23, align 8
  %2441 = load i64, i64* %109, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2439, i8* align 1 %2440, i64 %2441, i1 false)
  br label %2442

2442:                                             ; preds = %2438, %2433
  br label %2443

2443:                                             ; preds = %2442, %2425
  %2444 = load i64, i64* %109, align 8
  %2445 = load i8*, i8** %25, align 8
  %2446 = getelementptr inbounds i8, i8* %2445, i64 %2444
  store i8* %2446, i8** %25, align 8
  br label %2447

2447:                                             ; preds = %2443, %2393
  %2448 = load i64, i64* %111, align 8
  %2449 = load i64, i64* %24, align 8
  %2450 = add i64 %2449, %2448
  store i64 %2450, i64* %24, align 8
  br label %2451

2451:                                             ; preds = %2447
  br label %2670

2452:                                             ; preds = %902
  store i64 1, i64* %40, align 8
  br label %2453

2453:                                             ; preds = %2461, %2452
  %2454 = load i8*, i8** %26, align 8
  %2455 = load i64, i64* %40, align 8
  %2456 = getelementptr inbounds i8, i8* %2454, i64 %2455
  %2457 = load i8, i8* %2456, align 1
  %2458 = sext i8 %2457 to i32
  %2459 = icmp eq i32 %2458, 58
  br i1 %2459, label %2460, label %2464

2460:                                             ; preds = %2453
  br label %2461

2461:                                             ; preds = %2460
  %2462 = load i64, i64* %40, align 8
  %2463 = add i64 %2462, 1
  store i64 %2463, i64* %40, align 8
  br label %2453

2464:                                             ; preds = %2453
  %2465 = load i8*, i8** %26, align 8
  %2466 = load i64, i64* %40, align 8
  %2467 = getelementptr inbounds i8, i8* %2465, i64 %2466
  %2468 = load i8, i8* %2467, align 1
  %2469 = sext i8 %2468 to i32
  %2470 = icmp ne i32 %2469, 122
  br i1 %2470, label %2471, label %2472

2471:                                             ; preds = %2464
  br label %2555

2472:                                             ; preds = %2464
  %2473 = load i64, i64* %40, align 8
  %2474 = load i8*, i8** %26, align 8
  %2475 = getelementptr inbounds i8, i8* %2474, i64 %2473
  store i8* %2475, i8** %26, align 8
  br label %2477

2476:                                             ; preds = %902
  store i64 0, i64* %40, align 8
  br label %2477

2477:                                             ; preds = %2476, %2472
  %2478 = load %struct.tm*, %struct.tm** %15, align 8
  %2479 = getelementptr inbounds %struct.tm, %struct.tm* %2478, i32 0, i32 8
  %2480 = load i32, i32* %2479, align 8
  %2481 = icmp slt i32 %2480, 0
  br i1 %2481, label %2482, label %2483

2482:                                             ; preds = %2477
  br label %2670

2483:                                             ; preds = %2477
  %2484 = load %struct.tm*, %struct.tm** %15, align 8
  %2485 = getelementptr inbounds %struct.tm, %struct.tm* %2484, i32 0, i32 9
  %2486 = load i64, i64* %2485, align 8
  %2487 = trunc i64 %2486 to i32
  store i32 %2487, i32* %113, align 4
  %2488 = load i32, i32* %113, align 4
  %2489 = icmp slt i32 %2488, 0
  br i1 %2489, label %2500, label %2490

2490:                                             ; preds = %2483
  %2491 = load i32, i32* %113, align 4
  %2492 = icmp eq i32 %2491, 0
  br i1 %2492, label %2493, label %2498

2493:                                             ; preds = %2490
  %2494 = load i8*, i8** %23, align 8
  %2495 = load i8, i8* %2494, align 1
  %2496 = sext i8 %2495 to i32
  %2497 = icmp eq i32 %2496, 45
  br label %2498

2498:                                             ; preds = %2493, %2490
  %2499 = phi i1 [ false, %2490 ], [ %2497, %2493 ]
  br label %2500

2500:                                             ; preds = %2498, %2483
  %2501 = phi i1 [ true, %2483 ], [ %2499, %2498 ]
  %2502 = zext i1 %2501 to i8
  store i8 %2502, i8* %32, align 1
  %2503 = load i32, i32* %113, align 4
  %2504 = sdiv i32 %2503, 60
  %2505 = sdiv i32 %2504, 60
  store i32 %2505, i32* %114, align 4
  %2506 = load i32, i32* %113, align 4
  %2507 = sdiv i32 %2506, 60
  %2508 = srem i32 %2507, 60
  store i32 %2508, i32* %115, align 4
  %2509 = load i32, i32* %113, align 4
  %2510 = srem i32 %2509, 60
  store i32 %2510, i32* %116, align 4
  %2511 = load i64, i64* %40, align 8
  switch i64 %2511, label %2550 [
    i64 0, label %2512
    i64 1, label %2519
    i64 2, label %2527
    i64 3, label %2538
  ]

2512:                                             ; preds = %2500
  br label %2513

2513:                                             ; preds = %2512
  store i32 5, i32* %29, align 4
  store i32 0, i32* %34, align 4
  %2514 = load i32, i32* %114, align 4
  %2515 = mul nsw i32 %2514, 100
  %2516 = load i32, i32* %115, align 4
  %2517 = add nsw i32 %2515, %2516
  store i32 %2517, i32* %31, align 4
  br label %1299

2518:                                             ; No predecessors!
  br label %2519

2519:                                             ; preds = %2518, %2500
  br label %2520

2520:                                             ; preds = %2545, %2519
  br label %2521

2521:                                             ; preds = %2520
  store i32 6, i32* %29, align 4
  store i32 4, i32* %34, align 4
  %2522 = load i32, i32* %114, align 4
  %2523 = mul nsw i32 %2522, 100
  %2524 = load i32, i32* %115, align 4
  %2525 = add nsw i32 %2523, %2524
  store i32 %2525, i32* %31, align 4
  br label %1299

2526:                                             ; No predecessors!
  br label %2527

2527:                                             ; preds = %2526, %2500
  br label %2528

2528:                                             ; preds = %2541, %2527
  br label %2529

2529:                                             ; preds = %2528
  store i32 9, i32* %29, align 4
  store i32 20, i32* %34, align 4
  %2530 = load i32, i32* %114, align 4
  %2531 = mul nsw i32 %2530, 10000
  %2532 = load i32, i32* %115, align 4
  %2533 = mul nsw i32 %2532, 100
  %2534 = add nsw i32 %2531, %2533
  %2535 = load i32, i32* %116, align 4
  %2536 = add nsw i32 %2534, %2535
  store i32 %2536, i32* %31, align 4
  br label %1299

2537:                                             ; No predecessors!
  br label %2538

2538:                                             ; preds = %2537, %2500
  %2539 = load i32, i32* %116, align 4
  %2540 = icmp ne i32 %2539, 0
  br i1 %2540, label %2541, label %2542

2541:                                             ; preds = %2538
  br label %2528

2542:                                             ; preds = %2538
  %2543 = load i32, i32* %115, align 4
  %2544 = icmp ne i32 %2543, 0
  br i1 %2544, label %2545, label %2546

2545:                                             ; preds = %2542
  br label %2520

2546:                                             ; preds = %2542
  br label %2547

2547:                                             ; preds = %2546
  store i32 3, i32* %29, align 4
  store i32 0, i32* %34, align 4
  %2548 = load i32, i32* %114, align 4
  store i32 %2548, i32* %31, align 4
  br label %1299

2549:                                             ; No predecessors!
  br label %2550

2550:                                             ; preds = %2549, %2500
  br label %2555

2551:                                             ; preds = %902
  %2552 = load i8*, i8** %26, align 8
  %2553 = getelementptr inbounds i8, i8* %2552, i32 -1
  store i8* %2553, i8** %26, align 8
  br label %2554

2554:                                             ; preds = %2551, %902
  br label %2555

2555:                                             ; preds = %2554, %2550, %2471, %2318, %2304, %2285, %2143, %2127, %2044, %2000, %1706, %1690, %1680, %1664, %1656, %1646, %1638, %1628, %1609, %1292, %1282, %1277, %1272, %1019, %1010, %1005, %992, %983, %910
  store i32 1, i32* %117, align 4
  br label %2556

2556:                                             ; preds = %2566, %2555
  %2557 = load i8*, i8** %26, align 8
  %2558 = load i32, i32* %117, align 4
  %2559 = sub nsw i32 1, %2558
  %2560 = sext i32 %2559 to i64
  %2561 = getelementptr inbounds i8, i8* %2557, i64 %2560
  %2562 = load i8, i8* %2561, align 1
  %2563 = sext i8 %2562 to i32
  %2564 = icmp ne i32 %2563, 37
  br i1 %2564, label %2565, label %2569

2565:                                             ; preds = %2556
  br label %2566

2566:                                             ; preds = %2565
  %2567 = load i32, i32* %117, align 4
  %2568 = add nsw i32 %2567, 1
  store i32 %2568, i32* %117, align 4
  br label %2556

2569:                                             ; preds = %2556
  br label %2570

2570:                                             ; preds = %2569
  %2571 = load i32, i32* %117, align 4
  %2572 = sext i32 %2571 to i64
  store i64 %2572, i64* %118, align 8
  %2573 = load i32, i32* %27, align 4
  %2574 = icmp eq i32 %2573, 45
  br i1 %2574, label %2578, label %2575

2575:                                             ; preds = %2570
  %2576 = load i32, i32* %18, align 4
  %2577 = icmp slt i32 %2576, 0
  br i1 %2577, label %2578, label %2579

2578:                                             ; preds = %2575, %2570
  br label %2581

2579:                                             ; preds = %2575
  %2580 = load i32, i32* %18, align 4
  br label %2581

2581:                                             ; preds = %2579, %2578
  %2582 = phi i32 [ 0, %2578 ], [ %2580, %2579 ]
  %2583 = sext i32 %2582 to i64
  store i64 %2583, i64* %119, align 8
  %2584 = load i64, i64* %118, align 8
  %2585 = load i64, i64* %119, align 8
  %2586 = icmp ult i64 %2584, %2585
  br i1 %2586, label %2587, label %2589

2587:                                             ; preds = %2581
  %2588 = load i64, i64* %119, align 8
  br label %2591

2589:                                             ; preds = %2581
  %2590 = load i64, i64* %118, align 8
  br label %2591

2591:                                             ; preds = %2589, %2587
  %2592 = phi i64 [ %2588, %2587 ], [ %2590, %2589 ]
  store i64 %2592, i64* %120, align 8
  %2593 = load i64, i64* %120, align 8
  %2594 = load i64, i64* %13, align 8
  %2595 = load i64, i64* %24, align 8
  %2596 = sub i64 %2594, %2595
  %2597 = icmp uge i64 %2593, %2596
  br i1 %2597, label %2598, label %2599

2598:                                             ; preds = %2591
  store i64 0, i64* %11, align 8
  br label %2684

2599:                                             ; preds = %2591
  %2600 = load i8*, i8** %25, align 8
  %2601 = icmp ne i8* %2600, null
  br i1 %2601, label %2602, label %2665

2602:                                             ; preds = %2599
  %2603 = load i64, i64* %118, align 8
  %2604 = load i64, i64* %119, align 8
  %2605 = icmp ult i64 %2603, %2604
  br i1 %2605, label %2606, label %2628

2606:                                             ; preds = %2602
  %2607 = load i64, i64* %119, align 8
  %2608 = load i64, i64* %118, align 8
  %2609 = sub i64 %2607, %2608
  store i64 %2609, i64* %121, align 8
  %2610 = load i32, i32* %27, align 4
  %2611 = icmp eq i32 %2610, 48
  br i1 %2611, label %2615, label %2612

2612:                                             ; preds = %2606
  %2613 = load i32, i32* %27, align 4
  %2614 = icmp eq i32 %2613, 43
  br i1 %2614, label %2615, label %2621

2615:                                             ; preds = %2612, %2606
  %2616 = load i8*, i8** %25, align 8
  %2617 = load i64, i64* %121, align 8
  call void @llvm.memset.p0i8.i64(i8* align 1 %2616, i8 48, i64 %2617, i1 false)
  %2618 = load i64, i64* %121, align 8
  %2619 = load i8*, i8** %25, align 8
  %2620 = getelementptr inbounds i8, i8* %2619, i64 %2618
  store i8* %2620, i8** %25, align 8
  br label %2627

2621:                                             ; preds = %2612
  %2622 = load i8*, i8** %25, align 8
  %2623 = load i64, i64* %121, align 8
  call void @llvm.memset.p0i8.i64(i8* align 1 %2622, i8 32, i64 %2623, i1 false)
  %2624 = load i64, i64* %121, align 8
  %2625 = load i8*, i8** %25, align 8
  %2626 = getelementptr inbounds i8, i8* %2625, i64 %2624
  store i8* %2626, i8** %25, align 8
  br label %2627

2627:                                             ; preds = %2621, %2615
  br label %2628

2628:                                             ; preds = %2627, %2602
  %2629 = load i8, i8* %38, align 1
  %2630 = trunc i8 %2629 to i1
  br i1 %2630, label %2631, label %2640

2631:                                             ; preds = %2628
  %2632 = load i8*, i8** %25, align 8
  %2633 = load i8*, i8** %26, align 8
  %2634 = load i32, i32* %117, align 4
  %2635 = sub nsw i32 1, %2634
  %2636 = sext i32 %2635 to i64
  %2637 = getelementptr inbounds i8, i8* %2633, i64 %2636
  %2638 = load i64, i64* %118, align 8
  %2639 = call i8* @memcpy_lowcase(i8* %2632, i8* %2637, i64 %2638)
  br label %2661

2640:                                             ; preds = %2628
  %2641 = load i8, i8* %39, align 1
  %2642 = trunc i8 %2641 to i1
  br i1 %2642, label %2643, label %2652

2643:                                             ; preds = %2640
  %2644 = load i8*, i8** %25, align 8
  %2645 = load i8*, i8** %26, align 8
  %2646 = load i32, i32* %117, align 4
  %2647 = sub nsw i32 1, %2646
  %2648 = sext i32 %2647 to i64
  %2649 = getelementptr inbounds i8, i8* %2645, i64 %2648
  %2650 = load i64, i64* %118, align 8
  %2651 = call i8* @memcpy_uppcase(i8* %2644, i8* %2649, i64 %2650)
  br label %2660

2652:                                             ; preds = %2640
  %2653 = load i8*, i8** %25, align 8
  %2654 = load i8*, i8** %26, align 8
  %2655 = load i32, i32* %117, align 4
  %2656 = sub nsw i32 1, %2655
  %2657 = sext i32 %2656 to i64
  %2658 = getelementptr inbounds i8, i8* %2654, i64 %2657
  %2659 = load i64, i64* %118, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2653, i8* align 1 %2658, i64 %2659, i1 false)
  br label %2660

2660:                                             ; preds = %2652, %2643
  br label %2661

2661:                                             ; preds = %2660, %2631
  %2662 = load i64, i64* %118, align 8
  %2663 = load i8*, i8** %25, align 8
  %2664 = getelementptr inbounds i8, i8* %2663, i64 %2662
  store i8* %2664, i8** %25, align 8
  br label %2665

2665:                                             ; preds = %2661, %2599
  %2666 = load i64, i64* %120, align 8
  %2667 = load i64, i64* %24, align 8
  %2668 = add i64 %2667, %2666
  store i64 %2668, i64* %24, align 8
  br label %2669

2669:                                             ; preds = %2665
  br label %2670

2670:                                             ; preds = %2669, %2482, %2451, %2113, %1994, %1979, %1912, %1605, %1230, %1112, %979
  br label %2671

2671:                                             ; preds = %2670, %227
  store i32 -1, i32* %18, align 4
  %2672 = load i8*, i8** %26, align 8
  %2673 = getelementptr inbounds i8, i8* %2672, i32 1
  store i8* %2673, i8** %26, align 8
  br label %146

2674:                                             ; preds = %146
  %2675 = load i8*, i8** %25, align 8
  %2676 = icmp ne i8* %2675, null
  br i1 %2676, label %2677, label %2682

2677:                                             ; preds = %2674
  %2678 = load i64, i64* %13, align 8
  %2679 = icmp ne i64 %2678, 0
  br i1 %2679, label %2680, label %2682

2680:                                             ; preds = %2677
  %2681 = load i8*, i8** %25, align 8
  store i8 0, i8* %2681, align 1
  br label %2682

2682:                                             ; preds = %2680, %2677, %2674
  %2683 = load i64, i64* %24, align 8
  store i64 %2683, i64* %11, align 8
  br label %2684

2684:                                             ; preds = %2682, %2598, %2392, %2074, %1940, %1874, %1784, %1546, %1474, %1167, %1060, %938, %186
  %2685 = load i64, i64* %11, align 8
  ret i64 %2685
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @memcpy_lowcase(i8*, i8*, i64) #3 {
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  store i8* %0, i8** %4, align 8
  store i8* %1, i8** %5, align 8
  store i64 %2, i64* %6, align 8
  br label %7

7:                                                ; preds = %11, %3
  %8 = load i64, i64* %6, align 8
  %9 = add i64 %8, -1
  store i64 %9, i64* %6, align 8
  %10 = icmp ugt i64 %8, 0
  br i1 %10, label %11, label %22

11:                                               ; preds = %7
  %12 = load i8*, i8** %5, align 8
  %13 = load i64, i64* %6, align 8
  %14 = getelementptr inbounds i8, i8* %12, i64 %13
  %15 = load i8, i8* %14, align 1
  %16 = zext i8 %15 to i32
  %17 = call i32 @tolower(i32 %16) #13
  %18 = trunc i32 %17 to i8
  %19 = load i8*, i8** %4, align 8
  %20 = load i64, i64* %6, align 8
  %21 = getelementptr inbounds i8, i8* %19, i64 %20
  store i8 %18, i8* %21, align 1
  br label %7

22:                                               ; preds = %7
  %23 = load i8*, i8** %4, align 8
  ret i8* %23
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @memcpy_uppcase(i8*, i8*, i64) #3 {
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  store i8* %0, i8** %4, align 8
  store i8* %1, i8** %5, align 8
  store i64 %2, i64* %6, align 8
  br label %7

7:                                                ; preds = %11, %3
  %8 = load i64, i64* %6, align 8
  %9 = add i64 %8, -1
  store i64 %9, i64* %6, align 8
  %10 = icmp ugt i64 %8, 0
  br i1 %10, label %11, label %22

11:                                               ; preds = %7
  %12 = load i8*, i8** %5, align 8
  %13 = load i64, i64* %6, align 8
  %14 = getelementptr inbounds i8, i8* %12, i64 %13
  %15 = load i8, i8* %14, align 1
  %16 = zext i8 %15 to i32
  %17 = call i32 @toupper(i32 %16) #13
  %18 = trunc i32 %17 to i8
  %19 = load i8*, i8** %4, align 8
  %20 = load i64, i64* %6, align 8
  %21 = getelementptr inbounds i8, i8* %19, i64 %20
  store i8 %18, i8* %21, align 1
  br label %7

22:                                               ; preds = %7
  %23 = load i8*, i8** %4, align 8
  ret i8* %23
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @iso_week_days.363(i32, i32) #3 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  store i32 %1, i32* %4, align 4
  store i32 378, i32* %5, align 4
  %6 = load i32, i32* %3, align 4
  %7 = load i32, i32* %3, align 4
  %8 = load i32, i32* %4, align 4
  %9 = sub nsw i32 %7, %8
  %10 = add nsw i32 %9, 4
  %11 = load i32, i32* %5, align 4
  %12 = add nsw i32 %10, %11
  %13 = srem i32 %12, 7
  %14 = sub nsw i32 %6, %13
  %15 = add nsw i32 %14, 4
  %16 = sub nsw i32 %15, 1
  ret i32 %16
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @setlocale_null_r(i32, i8* nonnull, i64) #3 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  store i32 %0, i32* %4, align 4
  store i8* %1, i8** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load i32, i32* %4, align 4
  %8 = load i8*, i8** %5, align 8
  %9 = load i64, i64* %6, align 8
  %10 = call i32 @setlocale_null_unlocked(i32 %7, i8* %8, i64 %9)
  ret i32 %10
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @setlocale_null_unlocked(i32, i8*, i64) #3 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i64, align 8
  store i32 %0, i32* %5, align 4
  store i8* %1, i8** %6, align 8
  store i64 %2, i64* %7, align 8
  %10 = load i32, i32* %5, align 4
  %11 = call i8* @setlocale_null_androidfix(i32 %10)
  store i8* %11, i8** %8, align 8
  %12 = load i8*, i8** %8, align 8
  %13 = icmp eq i8* %12, null
  br i1 %13, label %14, label %21

14:                                               ; preds = %3
  %15 = load i64, i64* %7, align 8
  %16 = icmp ugt i64 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %14
  %18 = load i8*, i8** %6, align 8
  %19 = getelementptr inbounds i8, i8* %18, i64 0
  store i8 0, i8* %19, align 1
  br label %20

20:                                               ; preds = %17, %14
  store i32 22, i32* %4, align 4
  br label %45

21:                                               ; preds = %3
  %22 = load i8*, i8** %8, align 8
  %23 = call i64 @strlen(i8* %22) #13
  store i64 %23, i64* %9, align 8
  %24 = load i64, i64* %9, align 8
  %25 = load i64, i64* %7, align 8
  %26 = icmp ult i64 %24, %25
  br i1 %26, label %27, label %32

27:                                               ; preds = %21
  %28 = load i8*, i8** %6, align 8
  %29 = load i8*, i8** %8, align 8
  %30 = load i64, i64* %9, align 8
  %31 = add i64 %30, 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %28, i8* align 1 %29, i64 %31, i1 false)
  store i32 0, i32* %4, align 4
  br label %45

32:                                               ; preds = %21
  %33 = load i64, i64* %7, align 8
  %34 = icmp ugt i64 %33, 0
  br i1 %34, label %35, label %44

35:                                               ; preds = %32
  %36 = load i8*, i8** %6, align 8
  %37 = load i8*, i8** %8, align 8
  %38 = load i64, i64* %7, align 8
  %39 = sub i64 %38, 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %36, i8* align 1 %37, i64 %39, i1 false)
  %40 = load i8*, i8** %6, align 8
  %41 = load i64, i64* %7, align 8
  %42 = sub i64 %41, 1
  %43 = getelementptr inbounds i8, i8* %40, i64 %42
  store i8 0, i8* %43, align 1
  br label %44

44:                                               ; preds = %35, %32
  store i32 34, i32* %4, align 4
  br label %45

45:                                               ; preds = %44, %27, %20
  %46 = load i32, i32* %4, align 4
  ret i32 %46
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @setlocale_null_androidfix(i32) #3 {
  %2 = alloca i32, align 4
  %3 = alloca i8*, align 8
  store i32 %0, i32* %2, align 4
  %4 = load i32, i32* %2, align 4
  %5 = call i8* @setlocale(i32 %4, i8* null) #11
  store i8* %5, i8** %3, align 8
  %6 = load i8*, i8** %3, align 8
  ret i8* %6
}

declare i32 @_Z10computeFuniiiii(i32, i32, i32, i32, i32)

attributes #0 = { noinline noreturn nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noinline nounwind optnone readonly uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readnone speculatable }
attributes #11 = { nounwind }
attributes #12 = { noreturn nounwind }
attributes #13 = { nounwind readonly }
attributes #14 = { noreturn }
attributes #15 = { nounwind readnone }

!llvm.ident = !{!0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0}
!llvm.module.flags = !{!1, !2, !3}

!0 = !{!"clang version 9.0.1-12 "}
!1 = !{i32 1, !"wchar_size", i32 4}
!2 = !{i32 1, !"ThinLTO", i32 0}
!3 = !{i32 1, !"EnableSplitLTOUnit", i32 0}
